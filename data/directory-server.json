{
    "directory-server_1f40e0d": {
        "bug_id": "directory-server_1f40e0d",
        "commit": "https://github.com/apache/directory-server/commit/1f40e0de2356e937c20b5e3b5dba19b6595fe3d7",
        "file": [
            {
                "additions": 5,
                "blob_url": "https://github.com/apache/directory-server/blob/1f40e0de2356e937c20b5e3b5dba19b6595fe3d7/service-builder/src/main/java/org/apache/directory/server/config/ServiceBuilder.java",
                "changes": 5,
                "contents_url": "https://api.github.com/repos/apache/directory-server/contents/service-builder/src/main/java/org/apache/directory/server/config/ServiceBuilder.java?ref=1f40e0de2356e937c20b5e3b5dba19b6595fe3d7",
                "deletions": 0,
                "filename": "service-builder/src/main/java/org/apache/directory/server/config/ServiceBuilder.java",
                "patch": "@@ -74,6 +74,7 @@\n import org.apache.directory.server.core.partition.Partition;\n import org.apache.directory.server.core.partition.impl.btree.jdbm.JdbmIndex;\n import org.apache.directory.server.core.partition.impl.btree.jdbm.JdbmPartition;\n+import org.apache.directory.server.core.schema.SchemaPartition;\n import org.apache.directory.server.integration.http.HttpServer;\n import org.apache.directory.server.integration.http.WebApp;\n import org.apache.directory.server.kerberos.kdc.KdcServer;\n@@ -1259,6 +1260,10 @@ public static DirectoryService createDirectoryService( DirectoryServiceBean dire\n         // The schemaManager\n         directoryService.setSchemaManager( schemaManager );\n \n+        // The schema partition\n+        SchemaPartition schemaPartition = new SchemaPartition( schemaManager );\n+        directoryService.setSchemaPartition( schemaPartition );\n+\n         // MUST attributes\n         // DirectoryService ID\n         directoryService.setInstanceId( directoryServiceBean.getDirectoryServiceId() );",
                "raw_url": "https://github.com/apache/directory-server/raw/1f40e0de2356e937c20b5e3b5dba19b6595fe3d7/service-builder/src/main/java/org/apache/directory/server/config/ServiceBuilder.java",
                "sha": "6751cda5f6990e98fd731a278c90a1a18ae6ab3e",
                "status": "modified"
            }
        ],
        "message": "Fix NPE when starting up the ApacheDsService\n\ngit-svn-id: https://svn.apache.org/repos/asf/directory/apacheds/trunk@1150216 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/directory-server/commit/6e17e2b9426c76ae8eb3b3287c6aab090a73d660",
        "repo": "directory-server",
        "unit_tests": [
            "ServiceBuilderTest.java"
        ]
    },
    "directory-server_35eba60": {
        "bug_id": "directory-server_35eba60",
        "commit": "https://github.com/apache/directory-server/commit/35eba60a9c2d4895584b825fccab5a745c4a9198",
        "file": [
            {
                "additions": 23,
                "blob_url": "https://github.com/apache/directory-server/blob/35eba60a9c2d4895584b825fccab5a745c4a9198/jdbm-store/src/main/java/org/apache/directory/server/core/partition/impl/btree/jdbm/JdbmIndex.java",
                "changes": 32,
                "contents_url": "https://api.github.com/repos/apache/directory-server/contents/jdbm-store/src/main/java/org/apache/directory/server/core/partition/impl/btree/jdbm/JdbmIndex.java?ref=35eba60a9c2d4895584b825fccab5a745c4a9198",
                "deletions": 9,
                "filename": "jdbm-store/src/main/java/org/apache/directory/server/core/partition/impl/btree/jdbm/JdbmIndex.java",
                "patch": "@@ -31,7 +31,10 @@\n import org.apache.directory.server.xdbm.Tuple;\n import org.apache.directory.server.xdbm.IndexCursor;\n import org.apache.directory.shared.ldap.schema.AttributeType;\n+import org.apache.directory.shared.ldap.schema.MatchingRule;\n import org.apache.directory.shared.ldap.util.SynchronizedLRUMap;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n \n import javax.naming.NamingException;\n import java.io.File;\n@@ -48,53 +51,66 @@\n  */\n public class JdbmIndex<K,O> implements Index<K,O>\n {\n+    /** A logger for this class */\n+    private static final Logger LOG = LoggerFactory.getLogger( JdbmIndex.class.getSimpleName() );\n+\n     /**\n      * default duplicate limit before duplicate keys switch to using a btree for values\n      */\n     public static final int DEFAULT_DUPLICATE_LIMIT = 512;\n \n     /**  the key used for the forward btree name */\n     public static final String FORWARD_BTREE = \"_forward\";\n+    \n     /**  the key used for the reverse btree name */\n     public static final String REVERSE_BTREE = \"_reverse\";\n \n     /** the attribute type resolved for this JdbmIndex */\n     private AttributeType attribute;\n+\n     /**\n      * the forward btree where the btree key is the value of the indexed attribute and\n      * the value of the btree is the entry id of the entry containing an attribute with\n      * that value\n      */\n     protected JdbmTable<K, Long> forward;\n+    \n     /**\n      * the reverse btree where the btree key is the entry id of the entry containing a\n      * value for the indexed attribute, and the btree value is the value of the indexed\n      * attribute\n      */\n     protected JdbmTable<Long,K> reverse;\n+    \n     /**\n      * the JDBM record manager for the file containing this index\n      */\n     protected RecordManager recMan;\n+    \n     /**\n      * the normalized value cache for this index\n      * @todo I don't think the keyCache is required anymore since the normalizer\n      * will cache values for us.\n      */\n     protected SynchronizedLRUMap keyCache;\n+    \n     /** the size (number of index entries) for the cache */\n     protected int cacheSize = DEFAULT_INDEX_CACHE_SIZE;\n+    \n     /**\n      * duplicate limit before duplicate keys switch to using a btree for values\n      */\n     protected int numDupLimit = DEFAULT_DUPLICATE_LIMIT;\n+    \n     /**\n      * the attribute identifier set at configuration time for this index which may not\n      * be the OID but an alias name for the attributeType associated with this Index\n      */\n     private String attributeId;\n+    \n     /** whether or not this index has been initialized */\n     protected boolean initialized;\n+    \n     /** a customm working directory path when specified in configuration */\n     protected File wkDirPath;\n \n@@ -136,8 +152,10 @@ public JdbmIndex( String attributeId )\n \n     public void init( AttributeType attributeType, File wkDirPath ) throws IOException\n     {\n-        this.keyCache = new SynchronizedLRUMap( cacheSize );\n-        this.attribute = attributeType;\n+        LOG.debug( \"Initializing an Index for attribute '{}'\", attributeType.getName() );\n+        \n+        keyCache = new SynchronizedLRUMap( cacheSize );\n+        attribute = attributeType;\n \n         if ( attributeId == null )\n         {\n@@ -182,7 +200,9 @@ private void initTables() throws IOException\n \n         try\n         {\n-            comp = new SerializableComparator<K>( attribute.getEquality().getOid() );\n+            MatchingRule mr = attribute.getEquality();\n+            \n+            comp = new SerializableComparator<K>( mr.getOid() );\n         }\n         catch ( NamingException e )\n         {\n@@ -469,8 +489,6 @@ public void drop( Long id ) throws Exception\n     // ------------------------------------------------------------------------\n     // Index Cursor Operations\n     // ------------------------------------------------------------------------\n-\n-\n     @SuppressWarnings(\"unchecked\")\n     public IndexCursor<K, O> reverseCursor() throws Exception\n     {\n@@ -514,8 +532,6 @@ public void drop( Long id ) throws Exception\n     // ------------------------------------------------------------------------\n     // Value Assertion (a.k.a Index Lookup) Methods //\n     // ------------------------------------------------------------------------\n-\n-    \n     /**\n      * @see Index#forward(Object)\n      */\n@@ -626,8 +642,6 @@ public boolean reverseLessOrEq( Long id, K attrVal ) throws Exception\n     // ------------------------------------------------------------------------\n     // Maintenance Methods \n     // ------------------------------------------------------------------------\n-\n-\n     /**\n      * @see org.apache.directory.server.xdbm.Index#close()\n      */",
                "raw_url": "https://github.com/apache/directory-server/raw/35eba60a9c2d4895584b825fccab5a745c4a9198/jdbm-store/src/main/java/org/apache/directory/server/core/partition/impl/btree/jdbm/JdbmIndex.java",
                "sha": "deab7d701c881456fe68c89f45dac32d50cfd3b3",
                "status": "modified"
            },
            {
                "additions": 17,
                "blob_url": "https://github.com/apache/directory-server/blob/35eba60a9c2d4895584b825fccab5a745c4a9198/jdbm-store/src/main/java/org/apache/directory/server/core/partition/impl/btree/jdbm/JdbmStore.java",
                "changes": 19,
                "contents_url": "https://api.github.com/repos/apache/directory-server/contents/jdbm-store/src/main/java/org/apache/directory/server/core/partition/impl/btree/jdbm/JdbmStore.java?ref=35eba60a9c2d4895584b825fccab5a745c4a9198",
                "deletions": 2,
                "filename": "jdbm-store/src/main/java/org/apache/directory/server/core/partition/impl/btree/jdbm/JdbmStore.java",
                "patch": "@@ -64,6 +64,7 @@\n import org.apache.directory.shared.ldap.name.LdapDN;\n import org.apache.directory.shared.ldap.name.Rdn;\n import org.apache.directory.shared.ldap.schema.AttributeType;\n+import org.apache.directory.shared.ldap.schema.MatchingRule;\n import org.apache.directory.shared.ldap.util.NamespaceTools;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n@@ -372,9 +373,23 @@ private void setupUserIndices() throws Exception\n             for ( Index<?,E> index : userIndices.values() )\n             {\n                 String oid = oidRegistry.getOid( index.getAttributeId() );\n-                tmp.put( oid, index );\n-                ( ( JdbmIndex ) index ).init( attributeTypeRegistry.lookup( oid ), workingDirectory );\n+                AttributeType attributeType = attributeTypeRegistry.lookup( oid );\n+                \n+                // Check that the attributeType has an EQUALITY matchingRule\n+                MatchingRule mr = attributeType.getEquality();\n+                \n+                if ( mr != null )\n+                {\n+                    ( ( JdbmIndex ) index ).init( attributeTypeRegistry.lookup( oid ), workingDirectory );\n+                    tmp.put( oid, index );\n+                }\n+                else\n+                {\n+                    LOG.error( \"Cannot build an index for attribute '{}', no EQUALITY MatchingRule defined\",\n+                        attributeType.getName() );\n+                }\n             }\n+            \n             userIndices = tmp;\n         }\n         else",
                "raw_url": "https://github.com/apache/directory-server/raw/35eba60a9c2d4895584b825fccab5a745c4a9198/jdbm-store/src/main/java/org/apache/directory/server/core/partition/impl/btree/jdbm/JdbmStore.java",
                "sha": "a1001c2ccf53a6b879de7a2e7aaa04336048e3b9",
                "status": "modified"
            }
        ],
        "message": "Fix a NPE when we try to create an index on an attributeType which has no EQUALITY matching rule\n\ngit-svn-id: https://svn.apache.org/repos/asf/directory/apacheds/trunk@751899 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/directory-server/commit/cc4e1268083a3ecd8f604f8cc29df55281aa1aba",
        "repo": "directory-server",
        "unit_tests": [
            "JdbmIndexTest.java",
            "JdbmStoreTest.java"
        ]
    },
    "directory-server_3ecd4e9": {
        "bug_id": "directory-server_3ecd4e9",
        "commit": "https://github.com/apache/directory-server/commit/3ecd4e9cd91dbd1ece86bdd2006edcbf3edcc9f2",
        "file": [
            {
                "additions": 3,
                "blob_url": "https://github.com/apache/directory-server/blob/3ecd4e9cd91dbd1ece86bdd2006edcbf3edcc9f2/service-builder/src/main/java/org/apache/directory/server/config/ServiceBuilder.java",
                "changes": 7,
                "contents_url": "https://api.github.com/repos/apache/directory-server/contents/service-builder/src/main/java/org/apache/directory/server/config/ServiceBuilder.java?ref=3ecd4e9cd91dbd1ece86bdd2006edcbf3edcc9f2",
                "deletions": 4,
                "filename": "service-builder/src/main/java/org/apache/directory/server/config/ServiceBuilder.java",
                "patch": "@@ -533,18 +533,17 @@ else if ( transportBean instanceof UdpTransportBean )\n      */\n     public static Transport[] createTransports( TransportBean[] transportBeans )\n     {\n-        Transport[] transports = new Transport[ transportBeans.length ];\n-        int i = 0;\n+        List<Transport> transports = new ArrayList<Transport>();\n         \n         for ( TransportBean transportBean : transportBeans )\n         {\n             if ( transportBean.isEnabled() )\n             {\n-                transports[i++] = createTransport( transportBean );\n+                transports.add( createTransport( transportBean ) );\n             }\n         }\n         \n-        return transports;\n+        return transports.toArray( new Transport[transports.size()] );\n     }\n     /**\n      * Helper method to create an Array of EncryptionTypes from an array of Strings",
                "raw_url": "https://github.com/apache/directory-server/raw/3ecd4e9cd91dbd1ece86bdd2006edcbf3edcc9f2/service-builder/src/main/java/org/apache/directory/server/config/ServiceBuilder.java",
                "sha": "946f18f95c8a0aba19e617d984b037b9e0803d7c",
                "status": "modified"
            }
        ],
        "message": "Fix NPE: if one transport is disabled the Transport array contains a null element.\n\ngit-svn-id: https://svn.apache.org/repos/asf/directory/apacheds/trunk@1150229 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/directory-server/commit/1f40e0de2356e937c20b5e3b5dba19b6595fe3d7",
        "repo": "directory-server",
        "unit_tests": [
            "ServiceBuilderTest.java"
        ]
    },
    "directory-server_471f1b0": {
        "bug_id": "directory-server_471f1b0",
        "commit": "https://github.com/apache/directory-server/commit/471f1b02146ef9cff141703b2f7f0160d7d11555",
        "file": [
            {
                "additions": 5,
                "blob_url": "https://github.com/apache/directory-server/blob/471f1b02146ef9cff141703b2f7f0160d7d11555/jdbm-partition/src/main/java/org/apache/directory/server/core/partition/impl/btree/jdbm/JdbmStore.java",
                "changes": 6,
                "contents_url": "https://api.github.com/repos/apache/directory-server/contents/jdbm-partition/src/main/java/org/apache/directory/server/core/partition/impl/btree/jdbm/JdbmStore.java?ref=471f1b02146ef9cff141703b2f7f0160d7d11555",
                "deletions": 1,
                "filename": "jdbm-partition/src/main/java/org/apache/directory/server/core/partition/impl/btree/jdbm/JdbmStore.java",
                "patch": "@@ -302,7 +302,11 @@ public synchronized void sync() throws Exception\n         else if ( index instanceof JdbmIndex<?, ?> )\n         {\n             jdbmIndex = ( JdbmIndex<?, E> ) index;\n-            jdbmIndex.setWkDirPath( partitionDir );\n+            \n+            if ( jdbmIndex.getWkDirPath() == null )\n+            {\n+                jdbmIndex.setWkDirPath( partitionDir );\n+            }\n         }\n         else\n         {",
                "raw_url": "https://github.com/apache/directory-server/raw/471f1b02146ef9cff141703b2f7f0160d7d11555/jdbm-partition/src/main/java/org/apache/directory/server/core/partition/impl/btree/jdbm/JdbmStore.java",
                "sha": "e514cac5c0d4262703d45d7df491c5a8f13e5478",
                "status": "modified"
            }
        ],
        "message": "Fixed a NPE\n\ngit-svn-id: https://svn.apache.org/repos/asf/directory/apacheds/branches/apacheds-config@1028919 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/directory-server/commit/168f46bf91677fd58ba78707fe2bdbad711852a6",
        "repo": "directory-server",
        "unit_tests": [
            "JdbmStoreTest.java"
        ]
    },
    "directory-server_4a859c9": {
        "bug_id": "directory-server_4a859c9",
        "commit": "https://github.com/apache/directory-server/commit/4a859c9a6f7a4ae5c7b37538364d3859d2f52349",
        "file": [
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/directory-server/blob/4a859c9a6f7a4ae5c7b37538364d3859d2f52349/core-api/src/main/java/org/apache/directory/server/core/interceptor/context/AbstractChangeOperationContext.java",
                "changes": 4,
                "contents_url": "https://api.github.com/repos/apache/directory-server/contents/core-api/src/main/java/org/apache/directory/server/core/interceptor/context/AbstractChangeOperationContext.java?ref=4a859c9a6f7a4ae5c7b37538364d3859d2f52349",
                "deletions": 2,
                "filename": "core-api/src/main/java/org/apache/directory/server/core/interceptor/context/AbstractChangeOperationContext.java",
                "patch": "@@ -21,8 +21,8 @@\n \n \n import org.apache.directory.server.core.CoreSession;\n-import org.apache.directory.server.core.changelog.LogChange;\n import org.apache.directory.server.core.changelog.ChangeLogEvent;\n+import org.apache.directory.server.core.changelog.LogChange;\n import org.apache.directory.shared.ldap.name.LdapDN;\n \n \n@@ -81,6 +81,6 @@ public void setLogChange( LogChange logChange )\n      */\n     public boolean isLogChange()\n     {\n-        return logChange != logChange.FALSE;\n+        return logChange != LogChange.FALSE;\n     }\n }",
                "raw_url": "https://github.com/apache/directory-server/raw/4a859c9a6f7a4ae5c7b37538364d3859d2f52349/core-api/src/main/java/org/apache/directory/server/core/interceptor/context/AbstractChangeOperationContext.java",
                "sha": "3e3dcff4910bb17dccb9f8a338f0e6f585e82ab3",
                "status": "modified"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/directory-server/blob/4a859c9a6f7a4ae5c7b37538364d3859d2f52349/core-api/src/main/java/org/apache/directory/server/core/schema/SchemaPartitionDaoImpl.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/directory-server/contents/core-api/src/main/java/org/apache/directory/server/core/schema/SchemaPartitionDaoImpl.java?ref=4a859c9a6f7a4ae5c7b37538364d3859d2f52349",
                "deletions": 1,
                "filename": "core-api/src/main/java/org/apache/directory/server/core/schema/SchemaPartitionDaoImpl.java",
                "patch": "@@ -650,7 +650,7 @@ public void enableSchema( String schemaName ) throws Exception\n \n         List<String> names = mr.getNames();\n         \n-        if ( ( names != null ) || ( names.size() > 0 ) )\n+        if ( ( names != null ) && ( names.size() > 0 ) )\n         {\n             for ( String name : names )\n             {",
                "raw_url": "https://github.com/apache/directory-server/raw/4a859c9a6f7a4ae5c7b37538364d3859d2f52349/core-api/src/main/java/org/apache/directory/server/core/schema/SchemaPartitionDaoImpl.java",
                "sha": "85d418e224b2d3a4a013d2873fc846d727d6ca7f",
                "status": "modified"
            },
            {
                "additions": 9,
                "blob_url": "https://github.com/apache/directory-server/blob/4a859c9a6f7a4ae5c7b37538364d3859d2f52349/core/src/main/java/org/apache/directory/server/core/configuration/AttributesPropertyEditor.java",
                "changes": 18,
                "contents_url": "https://api.github.com/repos/apache/directory-server/contents/core/src/main/java/org/apache/directory/server/core/configuration/AttributesPropertyEditor.java?ref=4a859c9a6f7a4ae5c7b37538364d3859d2f52349",
                "deletions": 9,
                "filename": "core/src/main/java/org/apache/directory/server/core/configuration/AttributesPropertyEditor.java",
                "patch": "@@ -19,6 +19,15 @@\n  */\n package org.apache.directory.server.core.configuration;\n \n+import java.beans.PropertyEditor;\n+import java.beans.PropertyEditorSupport;\n+import java.io.BufferedReader;\n+import java.io.IOException;\n+import java.io.StringReader;\n+\n+import javax.naming.NamingException;\n+import javax.naming.directory.Attributes;\n+\n import org.apache.directory.server.core.DirectoryService;\n import org.apache.directory.shared.ldap.entry.Entry;\n import org.apache.directory.shared.ldap.entry.EntryAttribute;\n@@ -28,14 +37,6 @@\n import org.apache.directory.shared.ldap.util.AttributeUtils;\n import org.apache.directory.shared.ldap.util.StringTools;\n \n-import javax.naming.NamingException;\n-import javax.naming.directory.Attributes;\n-import java.beans.PropertyEditor;\n-import java.beans.PropertyEditorSupport;\n-import java.io.BufferedReader;\n-import java.io.IOException;\n-import java.io.StringReader;\n-\n \n /**\n  * A JavaBeans {@link PropertyEditor} that can convert {@link Attributes} to\n@@ -68,7 +69,6 @@ public AttributesPropertyEditor( Object source )\n     /**\n      * Returns LDIF string of {@link Attributes} object.\n      */\n-    @SuppressWarnings(\"deprecation\")\n     public String getAsText()\n     {\n         Attributes attrs = (Attributes) getValue();",
                "raw_url": "https://github.com/apache/directory-server/raw/4a859c9a6f7a4ae5c7b37538364d3859d2f52349/core/src/main/java/org/apache/directory/server/core/configuration/AttributesPropertyEditor.java",
                "sha": "afa0eba8d26858d7eb61ebdbbe5f0e4ed093520e",
                "status": "modified"
            },
            {
                "additions": 4,
                "blob_url": "https://github.com/apache/directory-server/blob/4a859c9a6f7a4ae5c7b37538364d3859d2f52349/core/src/main/java/org/apache/directory/server/core/subtree/RefinementLeafEvaluator.java",
                "changes": 10,
                "contents_url": "https://api.github.com/repos/apache/directory-server/contents/core/src/main/java/org/apache/directory/server/core/subtree/RefinementLeafEvaluator.java?ref=4a859c9a6f7a4ae5c7b37538364d3859d2f52349",
                "deletions": 6,
                "filename": "core/src/main/java/org/apache/directory/server/core/subtree/RefinementLeafEvaluator.java",
                "patch": "@@ -20,18 +20,16 @@\n package org.apache.directory.server.core.subtree;\n \n \n+import java.util.Iterator;\n+\n+import javax.naming.NamingException;\n+\n import org.apache.directory.server.core.entry.ServerAttribute;\n import org.apache.directory.shared.ldap.constants.SchemaConstants;\n import org.apache.directory.shared.ldap.entry.EntryAttribute;\n-import org.apache.directory.shared.ldap.entry.client.ClientBinaryValue;\n-import org.apache.directory.shared.ldap.entry.client.ClientStringValue;\n import org.apache.directory.shared.ldap.filter.EqualityNode;\n import org.apache.directory.shared.ldap.filter.SimpleNode;\n import org.apache.directory.shared.ldap.schema.registries.OidRegistry;\n-import org.apache.directory.shared.ldap.util.StringTools;\n-\n-import javax.naming.NamingException;\n-import java.util.Iterator;\n \n \n /**",
                "raw_url": "https://github.com/apache/directory-server/raw/4a859c9a6f7a4ae5c7b37538364d3859d2f52349/core/src/main/java/org/apache/directory/server/core/subtree/RefinementLeafEvaluator.java",
                "sha": "6d8e778041748b5b0457589a48175bc2f96df7fe",
                "status": "modified"
            },
            {
                "additions": 0,
                "blob_url": "https://github.com/apache/directory-server/blob/4a859c9a6f7a4ae5c7b37538364d3859d2f52349/kerberos-shared/src/main/java/org/apache/directory/server/kerberos/shared/messages/components/Ticket.java",
                "changes": 6,
                "contents_url": "https://api.github.com/repos/apache/directory-server/contents/kerberos-shared/src/main/java/org/apache/directory/server/kerberos/shared/messages/components/Ticket.java?ref=4a859c9a6f7a4ae5c7b37538364d3859d2f52349",
                "deletions": 6,
                "filename": "kerberos-shared/src/main/java/org/apache/directory/server/kerberos/shared/messages/components/Ticket.java",
                "patch": "@@ -29,14 +29,8 @@\n import org.apache.directory.server.kerberos.shared.KerberosConstants;\n import org.apache.directory.server.kerberos.shared.KerberosUtils;\n import org.apache.directory.server.kerberos.shared.exceptions.ErrorType;\n-import org.apache.directory.server.kerberos.shared.messages.value.AuthorizationData;\n import org.apache.directory.server.kerberos.shared.messages.value.EncryptedData;\n-import org.apache.directory.server.kerberos.shared.messages.value.EncryptionKey;\n-import org.apache.directory.server.kerberos.shared.messages.value.HostAddresses;\n-import org.apache.directory.server.kerberos.shared.messages.value.KerberosTime;\n import org.apache.directory.server.kerberos.shared.messages.value.PrincipalName;\n-import org.apache.directory.server.kerberos.shared.messages.value.TransitedEncoding;\n-import org.apache.directory.server.kerberos.shared.messages.value.flags.TicketFlags;\n import org.apache.directory.shared.asn1.AbstractAsn1Object;\n import org.apache.directory.shared.asn1.ber.tlv.TLV;\n import org.apache.directory.shared.asn1.ber.tlv.UniversalTag;",
                "raw_url": "https://github.com/apache/directory-server/raw/4a859c9a6f7a4ae5c7b37538364d3859d2f52349/kerberos-shared/src/main/java/org/apache/directory/server/kerberos/shared/messages/components/Ticket.java",
                "sha": "0566f3ed2ef7801a94d1360a49ff37d1a797af87",
                "status": "modified"
            },
            {
                "additions": 0,
                "blob_url": "https://github.com/apache/directory-server/blob/4a859c9a6f7a4ae5c7b37538364d3859d2f52349/ldap-api-test/src/test/java/org/apache/directory/shared/client/api/operations/ClientAddRequestTest.java",
                "changes": 1,
                "contents_url": "https://api.github.com/repos/apache/directory-server/contents/ldap-api-test/src/test/java/org/apache/directory/shared/client/api/operations/ClientAddRequestTest.java?ref=4a859c9a6f7a4ae5c7b37538364d3859d2f52349",
                "deletions": 1,
                "filename": "ldap-api-test/src/test/java/org/apache/directory/shared/client/api/operations/ClientAddRequestTest.java",
                "patch": "@@ -32,7 +32,6 @@\n import org.apache.directory.server.core.CoreSession;\n import org.apache.directory.server.core.integ.AbstractLdapTestUnit;\n import org.apache.directory.server.core.integ.FrameworkRunner;\n-import org.apache.directory.server.ldap.LdapServer;\n import org.apache.directory.shared.ldap.client.api.LdapConnection;\n import org.apache.directory.shared.ldap.client.api.exception.LdapException;\n import org.apache.directory.shared.ldap.client.api.listeners.AddListener;",
                "raw_url": "https://github.com/apache/directory-server/raw/4a859c9a6f7a4ae5c7b37538364d3859d2f52349/ldap-api-test/src/test/java/org/apache/directory/shared/client/api/operations/ClientAddRequestTest.java",
                "sha": "51c80dddbca02ab678ba9047caa1ef3bf0366a72",
                "status": "modified"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/directory-server/blob/4a859c9a6f7a4ae5c7b37538364d3859d2f52349/server-tools/src/main/java/org/apache/directory/server/tools/IndexCommand.java",
                "changes": 3,
                "contents_url": "https://api.github.com/repos/apache/directory-server/contents/server-tools/src/main/java/org/apache/directory/server/tools/IndexCommand.java?ref=4a859c9a6f7a4ae5c7b37538364d3859d2f52349",
                "deletions": 2,
                "filename": "server-tools/src/main/java/org/apache/directory/server/tools/IndexCommand.java",
                "patch": "@@ -62,7 +62,6 @@ public IndexCommand()\n     }\n \n \n-    @SuppressWarnings(\"unchecked\")\n     private SchemaManager loadSchemaManager() throws Exception\n     {\n         // --------------------------------------------------------------------\n@@ -89,7 +88,7 @@ public void execute( CommandLine cmdline ) throws Exception\n         \n         for ( int ii = 0; ii < partitions.length; ii++ )\n         {\n-            File partitionDirectory = partitionDirectory = new File( getInstanceLayout().getPartitionsDir(), partitions[ii] );\n+            File partitionDirectory = new File( getInstanceLayout().getPartitionsDir(), partitions[ii] );\n             File indexDir = null;\n             \n             if( indexDirPath != null )",
                "raw_url": "https://github.com/apache/directory-server/raw/4a859c9a6f7a4ae5c7b37538364d3859d2f52349/server-tools/src/main/java/org/apache/directory/server/tools/IndexCommand.java",
                "sha": "7e6d78071521b4de0c2080457757f68dc4eba707",
                "status": "modified"
            },
            {
                "additions": 0,
                "blob_url": "https://github.com/apache/directory-server/blob/4a859c9a6f7a4ae5c7b37538364d3859d2f52349/xdbm-search/src/main/java/org/apache/directory/server/xdbm/search/impl/LessEqCursor.java",
                "changes": 4,
                "contents_url": "https://api.github.com/repos/apache/directory-server/contents/xdbm-search/src/main/java/org/apache/directory/server/xdbm/search/impl/LessEqCursor.java?ref=4a859c9a6f7a4ae5c7b37538364d3859d2f52349",
                "deletions": 4,
                "filename": "xdbm-search/src/main/java/org/apache/directory/server/xdbm/search/impl/LessEqCursor.java",
                "patch": "@@ -135,7 +135,6 @@ else if ( compareValue == 0 )\n     }\n \n \n-    @SuppressWarnings(\"unchecked\")\n     public void before( IndexEntry<V, ServerEntry> element ) throws Exception\n     {\n         checkNotClosed( \"before()\" );\n@@ -180,7 +179,6 @@ else if ( compareValue == 0 )\n     }\n \n \n-    @SuppressWarnings(\"unchecked\")\n     public void afterValue( Long id, V value ) throws Exception\n     {\n         checkNotClosed( \"afterValue()\" );\n@@ -217,7 +215,6 @@ public void afterValue( Long id, V value ) throws Exception\n     }\n \n \n-    @SuppressWarnings(\"unchecked\")\n     public void after( IndexEntry<V, ServerEntry> element ) throws Exception\n     {\n         checkNotClosed( \"after()\" );\n@@ -337,7 +334,6 @@ public boolean previous() throws Exception\n     }\n \n \n-    @SuppressWarnings(\"unchecked\")\n     public boolean next() throws Exception\n     {\n         checkNotClosed( \"next()\" );",
                "raw_url": "https://github.com/apache/directory-server/raw/4a859c9a6f7a4ae5c7b37538364d3859d2f52349/xdbm-search/src/main/java/org/apache/directory/server/xdbm/search/impl/LessEqCursor.java",
                "sha": "a34c97c13e1125d218676c548d5c70b150f8d68f",
                "status": "modified"
            },
            {
                "additions": 0,
                "blob_url": "https://github.com/apache/directory-server/blob/4a859c9a6f7a4ae5c7b37538364d3859d2f52349/xdbm-search/src/main/java/org/apache/directory/server/xdbm/search/impl/SubstringEvaluator.java",
                "changes": 1,
                "contents_url": "https://api.github.com/repos/apache/directory-server/contents/xdbm-search/src/main/java/org/apache/directory/server/xdbm/search/impl/SubstringEvaluator.java?ref=4a859c9a6f7a4ae5c7b37538364d3859d2f52349",
                "deletions": 1,
                "filename": "xdbm-search/src/main/java/org/apache/directory/server/xdbm/search/impl/SubstringEvaluator.java",
                "patch": "@@ -199,7 +199,6 @@ private boolean evaluateWithIndex( IndexEntry<?,ServerEntry> indexEntry ) throws\n     }\n \n \n-    @SuppressWarnings( { \"UnusedDeclaration\" } )\n     private boolean evaluateWithIndex( ServerEntry entry ) throws Exception\n     {\n         throw new UnsupportedOperationException( \"This is too inefficient without getId() on ServerEntry\" );",
                "raw_url": "https://github.com/apache/directory-server/raw/4a859c9a6f7a4ae5c7b37538364d3859d2f52349/xdbm-search/src/main/java/org/apache/directory/server/xdbm/search/impl/SubstringEvaluator.java",
                "sha": "f7d14a93810cc77980d04bebaee67de54a35975d",
                "status": "modified"
            },
            {
                "additions": 0,
                "blob_url": "https://github.com/apache/directory-server/blob/4a859c9a6f7a4ae5c7b37538364d3859d2f52349/xdbm-search/src/test/java/org/apache/directory/server/xdbm/search/impl/OrCursorTest.java",
                "changes": 1,
                "contents_url": "https://api.github.com/repos/apache/directory-server/contents/xdbm-search/src/test/java/org/apache/directory/server/xdbm/search/impl/OrCursorTest.java?ref=4a859c9a6f7a4ae5c7b37538364d3859d2f52349",
                "deletions": 1,
                "filename": "xdbm-search/src/test/java/org/apache/directory/server/xdbm/search/impl/OrCursorTest.java",
                "patch": "@@ -162,7 +162,6 @@ public void destryStore() throws Exception\n \n     \n     @Test\n-    @SuppressWarnings( \"unchecked\" )\n     public void testOrCursorUsingCursorBuilder() throws Exception\n     {\n         String filter = \"(|(cn=J*)(sn=W*))\";",
                "raw_url": "https://github.com/apache/directory-server/raw/4a859c9a6f7a4ae5c7b37538364d3859d2f52349/xdbm-search/src/test/java/org/apache/directory/server/xdbm/search/impl/OrCursorTest.java",
                "sha": "78251b4ac1f82bf1fed700c994747cd49bb424f0",
                "status": "modified"
            }
        ],
        "message": "Many fixes :\no potential NPE\no unused imports removal\no useless @SuppressWarnings removal\no unused variable removal\n\ngit-svn-id: https://svn.apache.org/repos/asf/directory/apacheds/branches/apacheds-schema@896304 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/directory-server/commit/83426e35e438acff494c3d6c655958ee5dcdbb43",
        "repo": "directory-server",
        "unit_tests": [
            "RefinementLeafEvaluatorTest.java",
            "TicketTest.java"
        ]
    },
    "directory-server_6bc7fc3": {
        "bug_id": "directory-server_6bc7fc3",
        "commit": "https://github.com/apache/directory-server/commit/6bc7fc3a60b587521bfebfe6fc4d399a4991ba79",
        "file": [
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/directory-server/blob/6bc7fc3a60b587521bfebfe6fc4d399a4991ba79/core/src/main/java/org/apache/directory/server/core/changelog/MemoryChangeLogStore.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/directory-server/contents/core/src/main/java/org/apache/directory/server/core/changelog/MemoryChangeLogStore.java?ref=6bc7fc3a60b587521bfebfe6fc4d399a4991ba79",
                "deletions": 1,
                "filename": "core/src/main/java/org/apache/directory/server/core/changelog/MemoryChangeLogStore.java",
                "patch": "@@ -121,10 +121,10 @@ public Tag tag( String description ) throws Exception\n     public void init( DirectoryService service ) throws Exception\n     {\n         workingDirectory = service.getInstanceLayout().getLogDirectory();\n+        this.directoryService = service;\n         loadRevision();\n         loadTags();\n         loadChangeLog();\n-        this.directoryService = service;\n     }\n \n ",
                "raw_url": "https://github.com/apache/directory-server/raw/6bc7fc3a60b587521bfebfe6fc4d399a4991ba79/core/src/main/java/org/apache/directory/server/core/changelog/MemoryChangeLogStore.java",
                "sha": "b787c6388bac61e2eb6cb69d4052e6800d0a413e",
                "status": "modified"
            }
        ],
        "message": "Initilize the DS instance before calling the loadChangeLog method to avoid a NPE\n\ngit-svn-id: https://svn.apache.org/repos/asf/directory/apacheds/trunk@1157269 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/directory-server/commit/fe567d53189df34eb320ebf70835d488cf6f91c6",
        "repo": "directory-server",
        "unit_tests": [
            "MemoryChangeLogStoreTest.java"
        ]
    },
    "directory-server_73ea31c": {
        "bug_id": "directory-server_73ea31c",
        "commit": "https://github.com/apache/directory-server/commit/73ea31cd3e6f1d8bb03cf8767cb657f3161d0bb1",
        "file": [
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/directory-server/blob/73ea31cd3e6f1d8bb03cf8767cb657f3161d0bb1/core-integ/src/test/java/org/apache/directory/server/core/authz/SearchAuthorizationIT.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/directory-server/contents/core-integ/src/test/java/org/apache/directory/server/core/authz/SearchAuthorizationIT.java?ref=73ea31cd3e6f1d8bb03cf8767cb657f3161d0bb1",
                "deletions": 1,
                "filename": "core-integ/src/test/java/org/apache/directory/server/core/authz/SearchAuthorizationIT.java",
                "patch": "@@ -133,7 +133,7 @@ private void recursivelyAddSearchData( Dn parent, Entry[] children, final long s\n         for ( int i = 0; ( i < children.length ) && ( count[0] < sizeLimit ); i++ )\n         {\n             Dn childRdn = new Dn();\n-            childRdn = childRdn.addAll( parent );\n+            childRdn = childRdn.add( parent );\n             childRdn = childRdn.add( \"ou=\" + i );\n             childRdns[i] = childRdn;\n             children[i].setDn( childRdn );",
                "raw_url": "https://github.com/apache/directory-server/raw/73ea31cd3e6f1d8bb03cf8767cb657f3161d0bb1/core-integ/src/test/java/org/apache/directory/server/core/authz/SearchAuthorizationIT.java",
                "sha": "532f15027e70021e6ff3633d92b3986cc2f6974a",
                "status": "modified"
            },
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/directory-server/blob/73ea31cd3e6f1d8bb03cf8767cb657f3161d0bb1/core-jndi/src/main/java/org/apache/directory/server/core/jndi/ServerContext.java",
                "changes": 4,
                "contents_url": "https://api.github.com/repos/apache/directory-server/contents/core-jndi/src/main/java/org/apache/directory/server/core/jndi/ServerContext.java?ref=73ea31cd3e6f1d8bb03cf8767cb657f3161d0bb1",
                "deletions": 2,
                "filename": "core-jndi/src/main/java/org/apache/directory/server/core/jndi/ServerContext.java",
                "patch": "@@ -1614,7 +1614,7 @@ public Name composeName( Name name, Name prefix ) throws NamingException\n         \n         try\n         {\n-            return JndiUtils.toName( JndiUtils.fromName( prefix ).addAll( fqn ) );\n+            return JndiUtils.toName( JndiUtils.fromName( prefix ).add( fqn ) );\n         }\n         catch ( LdapInvalidDnException lide )\n         {\n@@ -1711,7 +1711,7 @@ Dn buildTarget( Dn relativeName ) throws NamingException\n         // Add to left hand side of cloned Dn the relative name arg\n         try\n         {\n-            target = target.addAll( relativeName );\n+            target = target.add( relativeName );\n             target.applySchemaManager( schemaManager );\n         }\n         catch (LdapInvalidDnException lide )",
                "raw_url": "https://github.com/apache/directory-server/raw/73ea31cd3e6f1d8bb03cf8767cb657f3161d0bb1/core-jndi/src/main/java/org/apache/directory/server/core/jndi/ServerContext.java",
                "sha": "88f0a036d3be1644579445427bb34d2b64d7ec12",
                "status": "modified"
            },
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/directory-server/blob/73ea31cd3e6f1d8bb03cf8767cb657f3161d0bb1/core/src/main/java/org/apache/directory/server/core/DefaultOperationManager.java",
                "changes": 4,
                "contents_url": "https://api.github.com/repos/apache/directory-server/contents/core/src/main/java/org/apache/directory/server/core/DefaultOperationManager.java?ref=73ea31cd3e6f1d8bb03cf8767cb657f3161d0bb1",
                "deletions": 2,
                "filename": "core/src/main/java/org/apache/directory/server/core/DefaultOperationManager.java",
                "patch": "@@ -105,7 +105,7 @@ private LdapReferralException buildReferralException( Entry parentEntry, Dn chil\n                 // So we have to take the Rdn one by one, and create a\n                 // new Dn with the type and value UP form\n     \n-                Dn urlDn = ldapUrl.getDn().addAll( childDn );\n+                Dn urlDn = ldapUrl.getDn().add( childDn );\n     \n                 ldapUrl.setDn( urlDn );\n                 urls.add( ldapUrl.toString() );\n@@ -155,7 +155,7 @@ private LdapReferralException buildReferralExceptionForSearch( Entry parentEntry\n                     // So we have to take the Rdn one by one, and create a\n                     // new Dn with the type and value UP form\n \n-                    Dn urlDn = ldapUrl.getDn().addAll( childDn );\n+                    Dn urlDn = ldapUrl.getDn().add( childDn );\n \n                     ldapUrl.setDn( urlDn );\n                 }",
                "raw_url": "https://github.com/apache/directory-server/raw/73ea31cd3e6f1d8bb03cf8767cb657f3161d0bb1/core/src/main/java/org/apache/directory/server/core/DefaultOperationManager.java",
                "sha": "eac3d6f48e425f496764628ddf2398413423babd",
                "status": "modified"
            },
            {
                "additions": 7,
                "blob_url": "https://github.com/apache/directory-server/blob/73ea31cd3e6f1d8bb03cf8767cb657f3161d0bb1/core/src/main/java/org/apache/directory/server/core/subtree/SubentryInterceptor.java",
                "changes": 14,
                "contents_url": "https://api.github.com/repos/apache/directory-server/contents/core/src/main/java/org/apache/directory/server/core/subtree/SubentryInterceptor.java?ref=73ea31cd3e6f1d8bb03cf8767cb657f3161d0bb1",
                "deletions": 7,
                "filename": "core/src/main/java/org/apache/directory/server/core/subtree/SubentryInterceptor.java",
                "patch": "@@ -873,7 +873,7 @@ public void add( NextInterceptor next, AddOperationContext addContext ) throws L\n              * ----------------------------------------------------------------\n              */\n             Dn baseDn = apDn;\n-            baseDn = baseDn.addAll( subentry.getSubtreeSpecification().getBase() );\n+            baseDn = baseDn.add( subentry.getSubtreeSpecification().getBase() );\n \n             updateEntries( OperationEnum.ADD, addContext.getSession(), dn, apDn, subentry.getSubtreeSpecification(), baseDn, operationalAttributes );\n \n@@ -961,7 +961,7 @@ public void delete( NextInterceptor next, DeleteOperationContext deleteContext )\n              */\n             Dn apDn = dn.getParent();\n             Dn baseDn = apDn;\n-            baseDn = baseDn.addAll( removedSubentry.getSubtreeSpecification().getBase() );\n+            baseDn = baseDn.add( removedSubentry.getSubtreeSpecification().getBase() );\n \n             // Remove all the references to this removed subentry from all the selected entries\n             updateEntries( OperationEnum.REMOVE, deleteContext.getSession(), dn, apDn, removedSubentry.getSubtreeSpecification(), baseDn, null );\n@@ -1057,7 +1057,7 @@ public void modify( NextInterceptor next, ModifyOperationContext modifyContext )\n             // search for all entries selected by the old SS and remove references to subentry\n             Dn apName = dn.getParent();\n             Dn oldBaseDn = apName;\n-            oldBaseDn = oldBaseDn.addAll( ssOld.getBase() );\n+            oldBaseDn = oldBaseDn.add( ssOld.getBase() );\n \n             ExprNode filter = new PresenceNode( OBJECT_CLASS_AT );\n             SearchControls controls = new SearchControls();\n@@ -1094,7 +1094,7 @@ public void modify( NextInterceptor next, ModifyOperationContext modifyContext )\n             subentry = subentryCache.getSubentry( dn );\n             List<EntryAttribute> operationalAttributes = getSubentryOperationalAttributes( dn, subentry );\n             Dn newBaseDn = apName;\n-            newBaseDn = newBaseDn.addAll( ssNew.getBase() );\n+            newBaseDn = newBaseDn.add( ssNew.getBase() );\n \n             searchOperationContext = new SearchOperationContext( modifyContext.getSession(), newBaseDn, filter, controls );\n             searchOperationContext.setAliasDerefMode( AliasDerefMode.NEVER_DEREF_ALIASES );\n@@ -1189,7 +1189,7 @@ public void move( NextInterceptor next, MoveOperationContext moveContext ) throw\n             SubtreeSpecification ss = subentry.getSubtreeSpecification();\n             Dn apName = oldDn.getParent();\n             Dn baseDn = apName;\n-            baseDn = baseDn.addAll( ss.getBase() );\n+            baseDn = baseDn.add( ss.getBase() );\n             Dn newName = newSuperiorDn;\n             newName = newName.add( oldDn.getRdn() );\n             newName.applySchemaManager( schemaManager );\n@@ -1280,7 +1280,7 @@ public void moveAndRename( NextInterceptor next, MoveAndRenameOperationContext m\n             SubtreeSpecification ss = subentry.getSubtreeSpecification();\n             Dn apName = oldDn.getParent();\n             Dn baseDn = apName;\n-            baseDn = baseDn.addAll( ss.getBase() );\n+            baseDn = baseDn.add( ss.getBase() );\n             Dn newName = newSuperiorDn.getParent();\n \n             newName = newName.add( moveAndRenameContext.getNewRdn() );\n@@ -1363,7 +1363,7 @@ public void rename( NextInterceptor next, RenameOperationContext renameContext )\n             SubtreeSpecification ss = subentry.getSubtreeSpecification();\n             Dn apName = oldDn.getParent();\n             Dn baseDn = apName;\n-            baseDn = baseDn.addAll( ss.getBase() );\n+            baseDn = baseDn.add( ss.getBase() );\n             Dn newName = oldDn.getParent();\n \n             newName = newName.add( renameContext.getNewRdn() );",
                "raw_url": "https://github.com/apache/directory-server/raw/73ea31cd3e6f1d8bb03cf8767cb657f3161d0bb1/core/src/main/java/org/apache/directory/server/core/subtree/SubentryInterceptor.java",
                "sha": "ab72745d1557a0aa43fad4edb2eca8f5d94f112a",
                "status": "modified"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/directory-server/blob/73ea31cd3e6f1d8bb03cf8767cb657f3161d0bb1/core/src/main/java/org/apache/directory/server/core/subtree/SubtreeEvaluator.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/directory-server/contents/core/src/main/java/org/apache/directory/server/core/subtree/SubtreeEvaluator.java?ref=73ea31cd3e6f1d8bb03cf8767cb657f3161d0bb1",
                "deletions": 1,
                "filename": "core/src/main/java/org/apache/directory/server/core/subtree/SubtreeEvaluator.java",
                "patch": "@@ -78,7 +78,7 @@ public boolean evaluate( SubtreeSpecification subtree, Dn apDn, Dn entryDn, Entr\n         // First construct the subtree base, which is the concatenation of the\n         // AP Dn and the subentry base\n         Dn subentryBaseDn = apDn;\n-        subentryBaseDn = subentryBaseDn.addAll( subtree.getBase() );\n+        subentryBaseDn = subentryBaseDn.add( subtree.getBase() );\n         \n         String s = subentryBaseDn.toString();\n         ",
                "raw_url": "https://github.com/apache/directory-server/raw/73ea31cd3e6f1d8bb03cf8767cb657f3161d0bb1/core/src/main/java/org/apache/directory/server/core/subtree/SubtreeEvaluator.java",
                "sha": "f57581e676b0d97149485d6a54a84b4d75fc7334",
                "status": "modified"
            },
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/directory-server/blob/73ea31cd3e6f1d8bb03cf8767cb657f3161d0bb1/protocol-ldap/src/main/java/org/apache/directory/server/ldap/handlers/SearchHandler.java",
                "changes": 4,
                "contents_url": "https://api.github.com/repos/apache/directory-server/contents/protocol-ldap/src/main/java/org/apache/directory/server/ldap/handlers/SearchHandler.java?ref=73ea31cd3e6f1d8bb03cf8767cb657f3161d0bb1",
                "deletions": 2,
                "filename": "protocol-ldap/src/main/java/org/apache/directory/server/ldap/handlers/SearchHandler.java",
                "patch": "@@ -1404,7 +1404,7 @@ public Referral getReferralOnAncestorForSearch( LdapSession session, SearchReque\n              * name past the farthest referral Dn which the target name extends.\n              */\n             Dn suffix = req.getBase().getDescendantOf( referralAncestor.getDn() );\n-            Dn refDn = urlDn.addAll( suffix );\n+            Dn refDn = urlDn.add( suffix );\n             \n             ldapUrl.setDn( refDn );\n             ldapUrl.setForceScopeRendering( true );\n@@ -1483,7 +1483,7 @@ public Referral getReferralOnAncestor( LdapSession session, Dn reqTargetDn, Sear\n              * name past the farthest referral Dn which the target name extends.\n              */\n             Dn suffix = req.getBase().getDescendantOf( referralAncestor.getDn() );\n-            urlDn = urlDn.addAll( suffix );\n+            urlDn = urlDn.add( suffix );\n \n             StringBuilder buf = new StringBuilder();\n             buf.append( ldapUrl.getScheme() );",
                "raw_url": "https://github.com/apache/directory-server/raw/73ea31cd3e6f1d8bb03cf8767cb657f3161d0bb1/protocol-ldap/src/main/java/org/apache/directory/server/ldap/handlers/SearchHandler.java",
                "sha": "99c416ef55705a506a644d48895ecf190f88cf44",
                "status": "modified"
            }
        ],
        "message": "o Renamed the addAll( Dn ) method to add( Dn )\no Fixed some potential NPE\no Minor other refactorings\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/directory/apacheds/trunk@1085318 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/directory-server/commit/a03ecc87ec4778c36a2f63535ab63ecd3c3670d1",
        "repo": "directory-server",
        "unit_tests": [
            "SubtreeEvaluatorTest.java"
        ]
    },
    "directory-server_76545dd": {
        "bug_id": "directory-server_76545dd",
        "commit": "https://github.com/apache/directory-server/commit/76545ddad23e78326a5f64a1f8aec73fdd7f30c4",
        "file": [
            {
                "additions": 28,
                "blob_url": "https://github.com/apache/directory-server/blob/76545ddad23e78326a5f64a1f8aec73fdd7f30c4/service-builder/src/main/java/org/apache/directory/server/config/builder/ServiceBuilder.java",
                "changes": 51,
                "contents_url": "https://api.github.com/repos/apache/directory-server/contents/service-builder/src/main/java/org/apache/directory/server/config/builder/ServiceBuilder.java?ref=76545ddad23e78326a5f64a1f8aec73fdd7f30c4",
                "deletions": 23,
                "filename": "service-builder/src/main/java/org/apache/directory/server/config/builder/ServiceBuilder.java",
                "patch": "@@ -540,7 +540,10 @@ else if ( transportBean instanceof UdpTransportBean )\n \n         for ( AuthenticatorBean authenticatorBean : list )\n         {\n-            authenticators[i++] = createAuthenticator( authenticatorBean );\n+            if ( authenticatorBean.isEnabled() )\n+            {\n+                authenticators[i++] = createAuthenticator( authenticatorBean );\n+            }\n         }\n \n         return authenticators;\n@@ -584,7 +587,7 @@ else if ( transportBean instanceof UdpTransportBean )\n         for ( String encryptionType : encryptionTypes )\n         {\n             EncryptionType et = EncryptionType.getByName( encryptionType );\n-            if( et == EncryptionType.UNKNOWN )\n+            if ( et == EncryptionType.UNKNOWN )\n             {\n                 LOG.warn( \"Unknown encryption type {}\", encryptionType );\n             }\n@@ -594,7 +597,7 @@ else if ( transportBean instanceof UdpTransportBean )\n             }\n         }\n \n-        return types.toArray(new EncryptionType[0]);\n+        return types.toArray( new EncryptionType[0] );\n     }\n \n \n@@ -662,61 +665,63 @@ public static DhcpServer createDhcpServer( DhcpServerBean dhcpServerBean, Direct\n      * @return Instance of KdcServer\n      * @throws org.apache.directory.api.ldap.model.exception.LdapException\n      */\n-    public static KdcServer createKdcServer( DirectoryServiceBean directoryServiceBean, DirectoryService directoryService ) throws LdapException\n+    public static KdcServer createKdcServer( DirectoryServiceBean directoryServiceBean,\n+        DirectoryService directoryService ) throws LdapException\n     {\n         KdcServerBean kdcServerBean = directoryServiceBean.getKdcServerBean();\n-        \n+\n         // Fist, do nothing if the KdcServer is disabled\n         if ( ( kdcServerBean == null ) || kdcServerBean.isDisabled() )\n         {\n             return null;\n         }\n \n         KerberosConfig kdcConfig = new KerberosConfig();\n-        \n+\n         // AllowableClockSkew\n         kdcConfig.setAllowableClockSkew( kdcServerBean.getKrbAllowableClockSkew() );\n-        \n+\n         // BodyChecksumVerified\n         kdcConfig.setBodyChecksumVerified( kdcServerBean.isKrbBodyChecksumVerified() );\n-        \n+\n         // EmptyAddressesAllowed\n         kdcConfig.setEmptyAddressesAllowed( kdcServerBean.isKrbEmptyAddressesAllowed() );\n-        \n+\n         // EncryptionType\n         EncryptionType[] encryptionTypes = createEncryptionTypes( kdcServerBean.getKrbEncryptionTypes() );\n         kdcConfig.setEncryptionTypes( encryptionTypes );\n-        \n+\n         // ForwardableAllowed\n         kdcConfig.setForwardableAllowed( kdcServerBean.isKrbForwardableAllowed() );\n-        \n+\n         // KdcPrincipal\n-        kdcConfig.setServicePrincipal( \"krbtgt/\" + kdcServerBean.getKrbPrimaryRealm() + \"@\" + kdcServerBean.getKrbPrimaryRealm() );\n-        \n+        kdcConfig.setServicePrincipal( \"krbtgt/\" + kdcServerBean.getKrbPrimaryRealm() + \"@\"\n+            + kdcServerBean.getKrbPrimaryRealm() );\n+\n         // MaximumRenewableLifetime\n         kdcConfig.setMaximumRenewableLifetime( kdcServerBean.getKrbMaximumRenewableLifetime() );\n-        \n+\n         // MaximumTicketLifetime\n         kdcConfig.setMaximumTicketLifetime( kdcServerBean.getKrbMaximumTicketLifetime() );\n-        \n+\n         // PaEncTimestampRequired\n         kdcConfig.setPaEncTimestampRequired( kdcServerBean.isKrbPaEncTimestampRequired() );\n-        \n+\n         // PostdatedAllowed\n         kdcConfig.setPostdatedAllowed( kdcServerBean.isKrbPostdatedAllowed() );\n-        \n+\n         // PrimaryRealm\n         kdcConfig.setPrimaryRealm( kdcServerBean.getKrbPrimaryRealm() );\n-        \n+\n         // ProxiableAllowed\n         kdcConfig.setProxiableAllowed( kdcServerBean.isKrbProxiableAllowed() );\n \n         // RenewableAllowed\n         kdcConfig.setRenewableAllowed( kdcServerBean.isKrbRenewableAllowed() );\n-        \n+\n         // searchBaseDn\n         kdcConfig.setSearchBaseDn( kdcServerBean.getSearchBaseDn().getName() );\n-        \n+\n         KdcServer kdcServer = new KdcServer( kdcConfig );\n \n         kdcServer.setDirectoryService( directoryService );\n@@ -730,18 +735,18 @@ public static KdcServer createKdcServer( DirectoryServiceBean directoryServiceBe\n         kdcServer.setTransports( transports );\n \n         ChangePasswordServerBean changePasswordServerBean = directoryServiceBean.getChangePasswordServerBean();\n-        \n+\n         // Fist, do nothing if the ChangePasswordServer is disabled\n         if ( ( changePasswordServerBean != null ) && !changePasswordServerBean.isDisabled() )\n         {\n             ChangePasswordServer changePasswordServer = new ChangePasswordServer( new ChangePasswordConfig( kdcConfig ) );\n             changePasswordServer.setEnabled( true );\n             changePasswordServer.setDirectoryService( directoryService );\n-            \n+\n             // Transports\n             Transport[] chngPwdTransports = createTransports( changePasswordServerBean.getTransports() );\n             changePasswordServer.setTransports( chngPwdTransports );\n-            \n+\n             kdcServer.setChangePwdServer( changePasswordServer );\n         }\n ",
                "raw_url": "https://github.com/apache/directory-server/raw/76545ddad23e78326a5f64a1f8aec73fdd7f30c4/service-builder/src/main/java/org/apache/directory/server/config/builder/ServiceBuilder.java",
                "sha": "406b143520f8e6337b62e30100aaf0db41532a01",
                "status": "modified"
            }
        ],
        "message": "Don't add the authenticator if it's disabled, otherwise we get a NPE later.\n\ngit-svn-id: https://svn.apache.org/repos/asf/directory/apacheds/trunk@1446107 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/directory-server/commit/fc5b1d691b4dc36166eaa2819728dce5a6d4e957",
        "repo": "directory-server",
        "unit_tests": [
            "ServiceBuilderTest.java"
        ]
    },
    "directory-server_7df31ad": {
        "bug_id": "directory-server_7df31ad",
        "commit": "https://github.com/apache/directory-server/commit/7df31adba307611218e0a8cab604f5b68696a4b9",
        "file": [
            {
                "additions": 10,
                "blob_url": "https://github.com/apache/directory-server/blob/7df31adba307611218e0a8cab604f5b68696a4b9/core/src/main/java/org/apache/directory/server/core/schema/SchemaService.java",
                "changes": 12,
                "contents_url": "https://api.github.com/repos/apache/directory-server/contents/core/src/main/java/org/apache/directory/server/core/schema/SchemaService.java?ref=7df31adba307611218e0a8cab604f5b68696a4b9",
                "deletions": 2,
                "filename": "core/src/main/java/org/apache/directory/server/core/schema/SchemaService.java",
                "patch": "@@ -128,7 +128,7 @@\n      */\n     private Registries registries;\n \n-    private Set binaries;\n+    private Set<String> binaries;\n \n     /**\n      * subschemaSubentry attribute's value from Root DSE\n@@ -179,7 +179,14 @@ public void init( DirectoryServiceConfiguration factoryCfg, InterceptorConfigura\n         topFilter = new TopFilter();\n         filters.add( binaryAttributeFilter );\n         filters.add( topFilter );\n-        binaries = ( Set ) factoryCfg.getEnvironment().get( BINARY_KEY );\n+        binaries = ( Set<String> ) factoryCfg.getEnvironment().get( BINARY_KEY );\n+        \n+        if ( binaries == null )\n+        {\n+            binaries = new HashSet<String>();\n+        }\n+            \n+            \n \n         schemaBaseDN = new LdapDN( \"ou=schema\" );\n         schemaBaseDN.normalize( registries.getAttributeTypeRegistry().getNormalizerMapping() );\n@@ -1722,6 +1729,7 @@ private void filterBinaryAttributes( Attributes entry ) throws NamingException\n             }\n \n             asBinary = !type.getSyntax().isHumanReadible();\n+            asBinary = asBinary || ( ( binaries != null ) && ( binaries.contains( type ) ) );\n             asBinary = asBinary || binaries.contains( type );\n \n             if ( asBinary )",
                "raw_url": "https://github.com/apache/directory-server/raw/7df31adba307611218e0a8cab604f5b68696a4b9/core/src/main/java/org/apache/directory/server/core/schema/SchemaService.java",
                "sha": "106ed48f204cfd3967a02b596b1436792ce2670c",
                "status": "modified"
            }
        ],
        "message": "Fixed a potential NPE in the code (defensive code added)\n\ngit-svn-id: https://svn.apache.org/repos/asf/directory/apacheds/trunk@523661 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/directory-server/commit/2735bb2dc1da99aa07283fdde71d2cede24708c1",
        "repo": "directory-server",
        "unit_tests": [
            "SchemaServiceTest.java"
        ]
    },
    "directory-server_859e0cb": {
        "bug_id": "directory-server_859e0cb",
        "commit": "https://github.com/apache/directory-server/commit/859e0cb55e914e9359e4041162e1d92e3204b211",
        "file": [
            {
                "additions": 24,
                "blob_url": "https://github.com/apache/directory-server/blob/859e0cb55e914e9359e4041162e1d92e3204b211/core-api/src/main/java/org/apache/directory/server/core/LdapCoreSessionConnection.java",
                "changes": 24,
                "contents_url": "https://api.github.com/repos/apache/directory-server/contents/core-api/src/main/java/org/apache/directory/server/core/LdapCoreSessionConnection.java?ref=859e0cb55e914e9359e4041162e1d92e3204b211",
                "deletions": 0,
                "filename": "core-api/src/main/java/org/apache/directory/server/core/LdapCoreSessionConnection.java",
                "patch": "@@ -1206,6 +1206,21 @@ public BindResponse bind( BindRequest bindRequest ) throws LdapException, IOExce\n     }\n \n \n+    /**\n+     * {@inheritDoc}\n+     */\n+    public BindResponse bind( Dn name ) throws LdapException, IOException\n+    {\n+        byte[] credBytes = StringConstants.EMPTY_BYTES;\n+\n+        BindRequest bindReq = new BindRequestImpl();\n+        bindReq.setName( name );\n+        bindReq.setCredentials( credBytes );\n+\n+        return bind( bindReq );\n+    }\n+\n+\n     /**\n      * {@inheritDoc}\n      */\n@@ -1221,6 +1236,15 @@ public BindResponse bind( Dn name, String credentials ) throws LdapException, IO\n     }\n \n \n+    /**\n+     * {@inheritDoc}\n+     */\n+    public BindResponse bind( String name ) throws LdapException, IOException\n+    {\n+        return bind( new Dn( schemaManager, name ), null );\n+    }\n+\n+\n     /**\n      * {@inheritDoc}\n      */",
                "raw_url": "https://github.com/apache/directory-server/raw/859e0cb55e914e9359e4041162e1d92e3204b211/core-api/src/main/java/org/apache/directory/server/core/LdapCoreSessionConnection.java",
                "sha": "0dae4ddcce82d20db62d2134783e137f354c6023",
                "status": "modified"
            },
            {
                "additions": 22,
                "blob_url": "https://github.com/apache/directory-server/blob/859e0cb55e914e9359e4041162e1d92e3204b211/ldap-client-test/src/test/java/org/apache/directory/shared/client/api/operations/bind/SimpleBindRequestTest.java",
                "changes": 28,
                "contents_url": "https://api.github.com/repos/apache/directory-server/contents/ldap-client-test/src/test/java/org/apache/directory/shared/client/api/operations/bind/SimpleBindRequestTest.java?ref=859e0cb55e914e9359e4041162e1d92e3204b211",
                "deletions": 6,
                "filename": "ldap-client-test/src/test/java/org/apache/directory/shared/client/api/operations/bind/SimpleBindRequestTest.java",
                "patch": "@@ -39,6 +39,7 @@\n import org.apache.directory.server.core.interceptor.BaseInterceptor;\n import org.apache.directory.server.core.interceptor.NextInterceptor;\n import org.apache.directory.server.core.interceptor.context.BindOperationContext;\n+import org.apache.directory.shared.ldap.model.exception.LdapAuthenticationException;\n import org.apache.directory.shared.ldap.model.exception.LdapException;\n import org.apache.directory.shared.ldap.model.message.BindRequest;\n import org.apache.directory.shared.ldap.model.message.BindRequestImpl;\n@@ -48,7 +49,6 @@\n import org.apache.directory.shared.ldap.model.name.Dn;\n import org.junit.After;\n import org.junit.Before;\n-import org.junit.Ignore;\n import org.junit.Test;\n import org.junit.runner.RunWith;\n \n@@ -64,9 +64,16 @@\n @ApplyLdifs(\n     {\n         // Entry # 1\n-        \"dn: uid=superuser,ou=system\", \"objectClass: person\", \"objectClass: organizationalPerson\",\n-        \"objectClass: inetOrgPerson\", \"objectClass: top\", \"cn: superuser\", \"sn: administrator\",\n-        \"displayName: Directory Superuser\", \"uid: superuser\", \"userPassword: test\" })\n+        \"dn: uid=superuser,ou=system\", \n+        \"objectClass: person\", \n+        \"objectClass: organizationalPerson\",\n+        \"objectClass: inetOrgPerson\", \n+        \"objectClass: top\", \n+        \"cn: superuser\", \n+        \"sn: administrator\",\n+        \"displayName: Directory Superuser\", \n+        \"uid: superuser\", \n+        \"userPassword: test\" })\n public class SimpleBindRequestTest extends AbstractLdapTestUnit\n {\n     private LdapAsyncConnection connection;\n@@ -159,7 +166,6 @@ public void testSimpleBindRequest() throws Exception\n      * Test a successful anonymous bind request.\n      */\n     @Test\n-    @Ignore // TODO : FIXME ! We get a NPE low in the code because the name is null\n     public void testAnonymousBindRequest() throws Exception\n     {\n         BindRequest bindRequest = new BindRequestImpl();\n@@ -255,7 +261,7 @@ public void testSimpleBindNoNamePassword() throws Exception\n     @Test\n     public void testSimpleBindUnauthenticated() throws Exception\n     {\n-        BindResponse response = connection.bind( \"uid=admin,ou=system\", ( String ) null );\n+        BindResponse response = connection.bind( \"uid=admin,ou=system\" );\n         LdapResult ldapResult = response.getLdapResult();\n         assertEquals( ResultCodeEnum.UNWILLING_TO_PERFORM, ldapResult.getResultCode() );\n         assertEquals( 1, response.getMessageId() );\n@@ -264,6 +270,16 @@ public void testSimpleBindUnauthenticated() throws Exception\n     }\n \n \n+    /**\n+     * Test an bind with no password\n+     */\n+    @Test( expected=LdapAuthenticationException.class )\n+    public void testSimpleBindNoPassword() throws Exception\n+    {\n+        connection.bind( \"uid=admin,ou=system\", ( String ) null );\n+    }\n+\n+\n     /**\n      * Test a valid bind\n      */",
                "raw_url": "https://github.com/apache/directory-server/raw/859e0cb55e914e9359e4041162e1d92e3204b211/ldap-client-test/src/test/java/org/apache/directory/shared/client/api/operations/bind/SimpleBindRequestTest.java",
                "sha": "bb81fb73e2250e65d895f8d40a0868ec4ee719d1",
                "status": "modified"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/directory-server/blob/859e0cb55e914e9359e4041162e1d92e3204b211/server-integ/src/test/java/org/apache/directory/server/operations/bind/SaslBindIT.java",
                "changes": 1,
                "contents_url": "https://api.github.com/repos/apache/directory-server/contents/server-integ/src/test/java/org/apache/directory/server/operations/bind/SaslBindIT.java?ref=859e0cb55e914e9359e4041162e1d92e3204b211",
                "deletions": 0,
                "filename": "server-integ/src/test/java/org/apache/directory/server/operations/bind/SaslBindIT.java",
                "patch": "@@ -232,6 +232,7 @@ public void testSupportedSASLMechanisms() throws Exception\n      * Tests to make sure PLAIN-binds works\n      */\n     @Test\n+    @Ignore // The SASL Plain mechanism is ot supported\n     public void testSaslBindPLAIN() throws Exception\n     {\n         Dn userDn = new Dn( \"uid=hnelson,ou=users,dc=example,dc=com\" );",
                "raw_url": "https://github.com/apache/directory-server/raw/859e0cb55e914e9359e4041162e1d92e3204b211/server-integ/src/test/java/org/apache/directory/server/operations/bind/SaslBindIT.java",
                "sha": "e47b92f9e79984e9b2b2e956c1c062933044f678",
                "status": "modified"
            },
            {
                "additions": 8,
                "blob_url": "https://github.com/apache/directory-server/blob/859e0cb55e914e9359e4041162e1d92e3204b211/server-integ/src/test/java/org/apache/directory/server/operations/bind/SimpleBindIT.java",
                "changes": 10,
                "contents_url": "https://api.github.com/repos/apache/directory-server/contents/server-integ/src/test/java/org/apache/directory/server/operations/bind/SimpleBindIT.java?ref=859e0cb55e914e9359e4041162e1d92e3204b211",
                "deletions": 2,
                "filename": "server-integ/src/test/java/org/apache/directory/server/operations/bind/SimpleBindIT.java",
                "patch": "@@ -71,8 +71,14 @@\n @ApplyLdifs(\n     {\n         // Entry # 1\n-        \"dn: uid=hnelson,ou=users,ou=system\", \"objectClass: inetOrgPerson\", \"objectClass: organizationalPerson\",\n-        \"objectClass: person\", \"objectClass: top\", \"userPassword: secret\", \"uid: hnelson\", \"cn: Horatio Nelson\",\n+        \"dn: uid=hnelson,ou=users,ou=system\", \n+        \"objectClass: inetOrgPerson\", \n+        \"objectClass: organizationalPerson\",\n+        \"objectClass: person\", \n+        \"objectClass: top\", \n+        \"userPassword: secret\", \n+        \"uid: hnelson\",\n+        \"cn: Horatio Nelson\",\n         \"sn: Nelson\" })\n @CreateDS(allowAnonAccess = true, name = \"SimpleBindIT-class\")\n @CreateLdapServer(transports =",
                "raw_url": "https://github.com/apache/directory-server/raw/859e0cb55e914e9359e4041162e1d92e3204b211/server-integ/src/test/java/org/apache/directory/server/operations/bind/SimpleBindIT.java",
                "sha": "833b081153e3caf28fbbb1ff3a0397000b244ef0",
                "status": "modified"
            }
        ],
        "message": "o Added the bind( Dn ) and bind( String ) method in the LdapConnection interface\no Ignored the SASL PLAIN bind test, it's not working in the LdapNeworkConnection\no The testAnonymousBindReques is not anymore ignored, the NPE ha sbeen fixed\no Added a check in the LdapNetworkConnection.bind( username, password ) methods to forbid a call when the password is null but the username is not\no Fixed a NPE in the BindRequestDecorator class\no Updated the BindRequest Javadoc\n\ngit-svn-id: https://svn.apache.org/repos/asf/directory/apacheds/trunk@1092743 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/directory-server/commit/5fa276f9679c60c587032c9bb6c96a7628ed6669",
        "repo": "directory-server",
        "unit_tests": [
            "LdapCoreSessionConnectionTest.java"
        ]
    },
    "directory-server_88befe0": {
        "bug_id": "directory-server_88befe0",
        "commit": "https://github.com/apache/directory-server/commit/88befe07f88af8d2e65c5d7bb887859b6bfe10b2",
        "file": [
            {
                "additions": 163,
                "blob_url": "https://github.com/apache/directory-server/blob/88befe07f88af8d2e65c5d7bb887859b6bfe10b2/core-api/src/main/java/org/apache/directory/server/core/LdapCoreSessionConnection.java",
                "changes": 173,
                "contents_url": "https://api.github.com/repos/apache/directory-server/contents/core-api/src/main/java/org/apache/directory/server/core/LdapCoreSessionConnection.java?ref=88befe07f88af8d2e65c5d7bb887859b6bfe10b2",
                "deletions": 10,
                "filename": "core-api/src/main/java/org/apache/directory/server/core/LdapCoreSessionConnection.java",
                "patch": "@@ -93,6 +93,8 @@\n  */\n public class LdapCoreSessionConnection implements LdapConnection\n {\n+    /** The logger for this class */\n+    private static final Logger LOG = LoggerFactory.getLogger( LdapCoreSessionConnection.class );\n \n     /** the CoreSession object */\n     private CoreSession session;\n@@ -103,10 +105,9 @@\n     /** the session's DirectoryService */\n     private DirectoryService directoryService;\n \n+    /** The MessageId counter */\n     private AtomicInteger messageId = new AtomicInteger( 0 );\n \n-    private static final Logger LOG = LoggerFactory.getLogger( LdapCoreSessionConnection.class );\n-\n \n     public LdapCoreSessionConnection()\n     {\n@@ -161,6 +162,20 @@ public boolean connect() throws LdapException, IOException\n      */\n     public AddResponse add( AddRequest addRequest ) throws LdapException\n     {\n+        if ( addRequest == null )\n+        {\n+            String msg = \"Cannot process a null addRequest\";\n+            LOG.debug( msg );\n+            throw new IllegalArgumentException( msg );\n+        }\n+\n+        if ( addRequest.getEntry() == null )\n+        {\n+            String msg = \"Cannot add a null entry\";\n+            LOG.debug( msg );\n+            throw new IllegalArgumentException( msg );\n+        }\n+\n         int newId = messageId.incrementAndGet();\n \n         addRequest.setMessageId( newId );\n@@ -190,6 +205,13 @@ public AddResponse add( AddRequest addRequest ) throws LdapException\n      */\n     public AddResponse add( Entry entry ) throws LdapException\n     {\n+        if ( entry == null )\n+        {\n+            String msg = \"Cannot add an empty entry\";\n+            LOG.debug( msg );\n+            throw new IllegalArgumentException( msg );\n+        }\n+\n         AddRequest addRequest = new AddRequestImpl();\n         addRequest.setEntry( entry );\n \n@@ -202,6 +224,13 @@ public AddResponse add( Entry entry ) throws LdapException\n      */\n     public CompareResponse compare( CompareRequest compareRequest ) throws LdapException\n     {\n+        if ( compareRequest == null )\n+        {\n+            String msg = \"Cannot process a null compareRequest\";\n+            LOG.debug( msg );\n+            throw new IllegalArgumentException( msg );\n+        }\n+\n         int newId = messageId.incrementAndGet();\n \n         CompareResponse resp = new CompareResponseImpl( newId );\n@@ -302,6 +331,13 @@ public CompareResponse compare( String dn, String attributeName, Value<?> value\n      */\n     public DeleteResponse delete( DeleteRequest deleteRequest ) throws LdapException\n     {\n+        if ( deleteRequest == null )\n+        {\n+            String msg = \"Cannot process a null deleteRequest\";\n+            LOG.debug( msg );\n+            throw new IllegalArgumentException( msg );\n+        }\n+\n         int newId = messageId.incrementAndGet();\n \n         DeleteResponse resp = new DeleteResponseImpl( newId );\n@@ -349,7 +385,7 @@ public DeleteResponse delete( String dn ) throws LdapException\n     /**\n      * {@inheritDoc}\n      */\n-    public boolean doesFutureExistFor( Integer messageId )\n+    public boolean doesFutureExistFor( int messageId )\n     {\n         return false;\n     }\n@@ -480,6 +516,19 @@ public Entry lookup( String dn ) throws LdapException\n      */\n     public ModifyResponse modify( DN dn, Modification... modifications ) throws LdapException\n     {\n+        if ( dn == null )\n+        {\n+            LOG.debug( \"received a null dn for modification\" );\n+            throw new IllegalArgumentException( \"The DN to be modified cannot be null\" );\n+        }\n+\n+        if ( ( modifications == null ) || ( modifications.length == 0 ) )\n+        {\n+            String msg = \"Cannot process a ModifyRequest without any modification\";\n+            LOG.debug( msg );\n+            throw new IllegalArgumentException( msg );\n+        }\n+\n         int newId = messageId.incrementAndGet();\n \n         ModifyResponse resp = new ModifyResponseImpl( newId );\n@@ -525,6 +574,12 @@ public ModifyResponse modify( String dn, Modification... modifications ) throws\n      */\n     public ModifyResponse modify( Entry entry, ModificationOperation modOp ) throws LdapException\n     {\n+        if ( entry == null )\n+        {\n+            LOG.debug( \"received a null entry for modification\" );\n+            throw new IllegalArgumentException( \"Entry to be modified cannot be null\" );\n+        }\n+\n         int newId = messageId.incrementAndGet();\n         ModifyResponse resp = new ModifyResponseImpl( newId );\n         resp.getLdapResult().setResultCode( ResultCodeEnum.SUCCESS );\n@@ -561,6 +616,13 @@ public ModifyResponse modify( Entry entry, ModificationOperation modOp ) throws\n      */\n     public ModifyResponse modify( ModifyRequest modRequest ) throws LdapException\n     {\n+        if ( modRequest == null )\n+        {\n+            String msg = \"Cannot process a null modifyRequest\";\n+            LOG.debug( msg );\n+            throw new IllegalArgumentException( msg );\n+        }\n+\n         int newId = messageId.incrementAndGet();\n \n         modRequest.setMessageId( newId );\n@@ -589,6 +651,13 @@ public ModifyResponse modify( ModifyRequest modRequest ) throws LdapException\n      */\n     public ModifyDnResponse modifyDn( ModifyDnRequest modDnRequest ) throws LdapException\n     {\n+        if ( modDnRequest == null )\n+        {\n+            String msg = \"Cannot process a null modDnRequest\";\n+            LOG.debug( msg );\n+            throw new IllegalArgumentException( msg );\n+        }\n+\n         int newId = messageId.incrementAndGet();\n \n         ModifyDnResponse resp = new ModifyDnResponseImpl( newId );\n@@ -607,16 +676,16 @@ public ModifyDnResponse modifyDn( ModifyDnRequest modDnRequest ) throws LdapExce\n         try\n         {\n             DN newRdn = null;\n-            if( modDnRequest.getNewRdn() != null )\n+            if ( modDnRequest.getNewRdn() != null )\n             {\n                 newRdn = new DN( modDnRequest.getNewRdn().getName(), schemaManager );\n             }\n-            \n+\n             DN oldRdn = new DN( modDnRequest.getName().getRdn().getName(), schemaManager );\n-            \n-            boolean rdnChanged = modDnRequest.getNewRdn() != null && \n-                ! newRdn.getNormName().equals( oldRdn.getNormName() );\n-            \n+\n+            boolean rdnChanged = modDnRequest.getNewRdn() != null\n+                && !newRdn.getNormName().equals( oldRdn.getNormName() );\n+\n             if ( rdnChanged )\n             {\n                 if ( modDnRequest.getNewSuperior() != null )\n@@ -659,6 +728,20 @@ else if ( modDnRequest.getNewSuperior() != null )\n      */\n     public ModifyDnResponse move( DN entryDn, DN newSuperiorDn ) throws LdapException\n     {\n+        if ( entryDn == null )\n+        {\n+            String msg = \"Cannot process a move of a null DN\";\n+            LOG.debug( msg );\n+            throw new IllegalArgumentException( msg );\n+        }\n+\n+        if ( newSuperiorDn == null )\n+        {\n+            String msg = \"Cannot process a move to a null DN\";\n+            LOG.debug( msg );\n+            throw new IllegalArgumentException( msg );\n+        }\n+\n         ModifyDnRequest iModDnReq = new ModifyDnRequestImpl();\n         iModDnReq.setName( entryDn );\n         iModDnReq.setNewSuperior( newSuperiorDn );\n@@ -672,6 +755,20 @@ public ModifyDnResponse move( DN entryDn, DN newSuperiorDn ) throws LdapExceptio\n      */\n     public ModifyDnResponse move( String entryDn, String newSuperiorDn ) throws LdapException\n     {\n+        if ( entryDn == null )\n+        {\n+            String msg = \"Cannot process a move of a null DN\";\n+            LOG.debug( msg );\n+            throw new IllegalArgumentException( msg );\n+        }\n+\n+        if ( newSuperiorDn == null )\n+        {\n+            String msg = \"Cannot process a move to a null DN\";\n+            LOG.debug( msg );\n+            throw new IllegalArgumentException( msg );\n+        }\n+\n         return move( new DN( entryDn ), new DN( newSuperiorDn ) );\n     }\n \n@@ -681,6 +778,20 @@ public ModifyDnResponse move( String entryDn, String newSuperiorDn ) throws Ldap\n      */\n     public ModifyDnResponse rename( DN entryDn, RDN newRdn, boolean deleteOldRdn ) throws LdapException\n     {\n+        if ( entryDn == null )\n+        {\n+            String msg = \"Cannot process a rename of a null DN\";\n+            LOG.debug( msg );\n+            throw new IllegalArgumentException( msg );\n+        }\n+\n+        if ( newRdn == null )\n+        {\n+            String msg = \"Cannot process a rename with a null RDN\";\n+            LOG.debug( msg );\n+            throw new IllegalArgumentException( msg );\n+        }\n+\n         ModifyDnRequest iModDnReq = new ModifyDnRequestImpl();\n         iModDnReq.setName( entryDn );\n         iModDnReq.setNewRdn( newRdn );\n@@ -713,6 +824,20 @@ public ModifyDnResponse rename( String entryDn, String newRdn, boolean deleteOld\n      */\n     public ModifyDnResponse rename( String entryDn, String newRdn ) throws LdapException\n     {\n+        if ( entryDn == null )\n+        {\n+            String msg = \"Cannot process a rename of a null DN\";\n+            LOG.debug( msg );\n+            throw new IllegalArgumentException( msg );\n+        }\n+\n+        if ( newRdn == null )\n+        {\n+            String msg = \"Cannot process a rename with a null RDN\";\n+            LOG.debug( msg );\n+            throw new IllegalArgumentException( msg );\n+        }\n+\n         return rename( new DN( entryDn ), new RDN( newRdn ) );\n     }\n \n@@ -800,6 +925,13 @@ public ModifyDnResponse moveAndRename( String entryDn, String newDn, boolean del\n      */\n     public Cursor<Response> search( SearchRequest searchRequest ) throws LdapException\n     {\n+        if ( searchRequest == null )\n+        {\n+            String msg = \"Cannot process a null searchRequest\";\n+            LOG.debug( msg );\n+            throw new IllegalArgumentException( msg );\n+        }\n+\n         try\n         {\n             int newId = messageId.incrementAndGet();\n@@ -827,6 +959,12 @@ public ModifyDnResponse moveAndRename( String entryDn, String newDn, boolean del\n     public Cursor<Response> search( DN baseDn, String filter, SearchScope scope, String... attributes )\n         throws LdapException\n     {\n+        if ( baseDn == null )\n+        {\n+            LOG.debug( \"received a null dn for a search\" );\n+            throw new IllegalArgumentException( \"The base DN cannot be null\" );\n+        }\n+\n         // generate some random operation number\n         SearchRequest searchRequest = new SearchRequestImpl();\n \n@@ -853,9 +991,10 @@ public ModifyDnResponse moveAndRename( String entryDn, String newDn, boolean del\n     /**\n      * {@inheritDoc}\n      */\n-    public void unBind() throws Exception\n+    public void unBind() throws LdapException\n     {\n         messageId.set( 0 );\n+\n         if ( session != null )\n         {\n             session.unbind();\n@@ -879,6 +1018,13 @@ public ExtendedResponse extended( String oid ) throws LdapException\n      */\n     public ExtendedResponse extended( ExtendedRequest extendedRequest ) throws LdapException\n     {\n+        if ( extendedRequest == null )\n+        {\n+            String msg = \"Cannot process a null extendedRequest\";\n+            LOG.debug( msg );\n+            throw new IllegalArgumentException( msg );\n+        }\n+\n         return extended( ( String ) null );\n \n     }\n@@ -956,6 +1102,13 @@ public BindResponse bind() throws LdapException, IOException\n      */\n     public BindResponse bind( BindRequest bindRequest ) throws LdapException, IOException\n     {\n+        if ( bindRequest == null )\n+        {\n+            String msg = \"Cannot process a null bindRequest\";\n+            LOG.debug( msg );\n+            throw new IllegalArgumentException( msg );\n+        }\n+\n         int newId = messageId.incrementAndGet();\n \n         BindOperationContext bindContext = new BindOperationContext( null );",
                "raw_url": "https://github.com/apache/directory-server/raw/88befe07f88af8d2e65c5d7bb887859b6bfe10b2/core-api/src/main/java/org/apache/directory/server/core/LdapCoreSessionConnection.java",
                "sha": "5507282cea3950e2665f13715ca57ad1b5f301cf",
                "status": "modified"
            }
        ],
        "message": "Added parameters checks to avoid NPE (DIRAPI-18)\n\ngit-svn-id: https://svn.apache.org/repos/asf/directory/apacheds/trunk@993075 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/directory-server/commit/b9b2b64095978835c97938b4dd52e86cf92c4729",
        "repo": "directory-server",
        "unit_tests": [
            "LdapCoreSessionConnectionTest.java"
        ]
    },
    "directory-server_91e7746": {
        "bug_id": "directory-server_91e7746",
        "commit": "https://github.com/apache/directory-server/commit/91e774615af5089b6aa2a530e94a83eb67f14db4",
        "file": [
            {
                "additions": 9,
                "blob_url": "https://github.com/apache/directory-server/blob/91e774615af5089b6aa2a530e94a83eb67f14db4/core/src/main/java/org/apache/directory/server/core/schema/SchemaService.java",
                "changes": 9,
                "contents_url": "https://api.github.com/repos/apache/directory-server/contents/core/src/main/java/org/apache/directory/server/core/schema/SchemaService.java?ref=91e774615af5089b6aa2a530e94a83eb67f14db4",
                "deletions": 0,
                "filename": "core/src/main/java/org/apache/directory/server/core/schema/SchemaService.java",
                "patch": "@@ -1687,6 +1687,15 @@ private void check( LdapDN dn, Attributes entry ) throws NamingException\n         // 3-2) or if the AttributeType is COLLECTIVE\n         // 4) We also check that for H-R attributes, we have a valid String in the values\n         Attribute objectClassAttr = entry.get( SchemaConstants.OBJECT_CLASS_AT );\n+        \n+        // Protect the server against a null objectClassAttr\n+        // It can be the case if the user forgot to add it to the entry ...\n+        // In this case, we create an new one, empty\n+        if ( objectClassAttr == null )\n+        {\n+            objectClassAttr = new AttributeImpl( SchemaConstants.OBJECT_CLASS_AT );\n+        }\n+        \n         List<ObjectClass> ocs = new ArrayList<ObjectClass>();\n \n         alterObjectClasses( objectClassAttr );",
                "raw_url": "https://github.com/apache/directory-server/raw/91e774615af5089b6aa2a530e94a83eb67f14db4/core/src/main/java/org/apache/directory/server/core/schema/SchemaService.java",
                "sha": "f6c6d77b81ed3e4da9c4195bf6fe7d2e967d60c7",
                "status": "modified"
            }
        ],
        "message": "Fixed a NPE when the user send an Attributes without any \"ObjecClass\" attribute\n\ngit-svn-id: https://svn.apache.org/repos/asf/directory/apacheds/trunk@546021 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/directory-server/commit/42ece7b02d9b79bbba8a4a86eed996ca7557f22a",
        "repo": "directory-server",
        "unit_tests": [
            "SchemaServiceTest.java"
        ]
    },
    "directory-server_b279f05": {
        "bug_id": "directory-server_b279f05",
        "commit": "https://github.com/apache/directory-server/commit/b279f058c96ee0d1567b64d181752fd9e60dbd4f",
        "file": [
            {
                "additions": 8,
                "blob_url": "https://github.com/apache/directory-server/blob/b279f058c96ee0d1567b64d181752fd9e60dbd4f/core-api/src/main/java/org/apache/directory/server/core/entry/ClonedServerEntry.java",
                "changes": 10,
                "contents_url": "https://api.github.com/repos/apache/directory-server/contents/core-api/src/main/java/org/apache/directory/server/core/entry/ClonedServerEntry.java?ref=b279f058c96ee0d1567b64d181752fd9e60dbd4f",
                "deletions": 2,
                "filename": "core-api/src/main/java/org/apache/directory/server/core/entry/ClonedServerEntry.java",
                "patch": "@@ -476,8 +476,14 @@ else if ( obj instanceof Entry )\n         {\n             return false;\n         }\n-\n-        return clonedEntry.equals( other );\n+        if ( clonedEntry == null)\n+        {\n+            return other == null;\n+        }\n+        else\n+        {\n+            return clonedEntry.equals( other );\n+        }\n     }\n     \n     ",
                "raw_url": "https://github.com/apache/directory-server/raw/b279f058c96ee0d1567b64d181752fd9e60dbd4f/core-api/src/main/java/org/apache/directory/server/core/entry/ClonedServerEntry.java",
                "sha": "6ab0c5f59709425c59932158c9fd243a28144dcf",
                "status": "modified"
            }
        ],
        "message": "Fix NPE\n\ngit-svn-id: https://svn.apache.org/repos/asf/directory/apacheds/trunk@947080 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/directory-server/commit/1c5233eff8bd6ee92636f324062a35076603750b",
        "repo": "directory-server",
        "unit_tests": [
            "ClonedServerEntryTest.java"
        ]
    },
    "directory-server_bf3d098": {
        "bug_id": "directory-server_bf3d098",
        "commit": "https://github.com/apache/directory-server/commit/bf3d0982575284c3ae2b5ab19d66be89924c0085",
        "file": [
            {
                "additions": 54,
                "blob_url": "https://github.com/apache/directory-server/blob/bf3d0982575284c3ae2b5ab19d66be89924c0085/core-avl/src/main/java/org/apache/directory/server/core/avltree/AvlTree.java",
                "changes": 61,
                "contents_url": "https://api.github.com/repos/apache/directory-server/contents/core-avl/src/main/java/org/apache/directory/server/core/avltree/AvlTree.java?ref=bf3d0982575284c3ae2b5ab19d66be89924c0085",
                "deletions": 7,
                "filename": "core-avl/src/main/java/org/apache/directory/server/core/avltree/AvlTree.java",
                "patch": "@@ -489,9 +489,9 @@ public void printTree()\n \n         System.out.println( getRoot() );\n         \n-        visit( getRoot().getRight(), getRoot() );\n+        visit( null, getRoot().getRight(), getRoot() );\n         \n-        visit( getRoot().getLeft(), getRoot() );\n+        visit( null, getRoot().getLeft(), getRoot() );\n     }\n     \n \n@@ -930,7 +930,19 @@ private int getBalance( LinkedAvlNode<K> node )\n     }\n     \n     \n-    private void visit( LinkedAvlNode<K> node, LinkedAvlNode<K> parentNode ) \n+    /**\n+     * Checks that the tree is correct. It must be balanced, and the prev/next\n+     * chain must be equivalent to a depth-first descent on the tree\n+     * \n+     * @return true if the tree is balanced and correct\n+     */\n+    public boolean checkTree()\n+    {\n+        return true;\n+    }\n+    \n+    \n+    private void visit( StringBuilder sb, LinkedAvlNode<K> node, LinkedAvlNode<K> parentNode ) \n     {\n         if( node == null )\n         {\n@@ -944,10 +956,18 @@ private void visit( LinkedAvlNode<K> node, LinkedAvlNode<K> parentNode )\n         \n         for( int i=0; i < parentNode.getDepth(); i++ )\n         {\n-            System.out.print( \"|  \" );\n+            if ( sb != null )\n+            {\n+                sb.append( \"|  \" );\n+            }\n+            else\n+            {\n+                System.out.print( \"|  \" );\n+            }\n         }\n \n         String type = \"\";\n+        \n         if( node == parentNode.left )\n         {\n             type = \"L\";\n@@ -957,16 +977,43 @@ else if( node == parentNode.right )\n             type = \"R\";\n         }\n         \n-        System.out.println( \"|--\" + node + type );\n+        if ( sb != null )\n+        {\n+            sb.append( \"|--\" ).append( node ).append( type ).append( '\\n' );\n+        }\n+        else\n+        {\n+            System.out.println( \"|--\" + node + type );\n+        }\n         \n         if ( node.getRight() != null )\n         {\n-            visit( node.getRight(), node );\n+            visit( sb, node.getRight(), node );\n         }\n         \n         if( node.getLeft() != null )\n         {\n-            visit( node.getLeft(), node );\n+            visit( sb, node.getLeft(), node );\n+        }\n+    }\n+    \n+    public String toString()\n+    {\n+        if( isEmpty() )\n+        {\n+            return \"[]\";\n         }\n+        \n+        getRoot().setDepth( 0 );\n+\n+        StringBuilder sb = new StringBuilder();\n+        \n+        sb.append( getRoot() );\n+        \n+        visit( sb, getRoot().getRight(), getRoot() );\n+        \n+        visit( sb, getRoot().getLeft(), getRoot() );\n+        \n+        return sb.toString();\n     }\n }",
                "raw_url": "https://github.com/apache/directory-server/raw/bf3d0982575284c3ae2b5ab19d66be89924c0085/core-avl/src/main/java/org/apache/directory/server/core/avltree/AvlTree.java",
                "sha": "3c4e1b3af635e192d3dff67cd7c020f59caf0547",
                "status": "modified"
            },
            {
                "additions": 69,
                "blob_url": "https://github.com/apache/directory-server/blob/bf3d0982575284c3ae2b5ab19d66be89924c0085/core-avl/src/main/java/org/apache/directory/server/core/avltree/AvlTreeMarshaller.java",
                "changes": 107,
                "contents_url": "https://api.github.com/repos/apache/directory-server/contents/core-avl/src/main/java/org/apache/directory/server/core/avltree/AvlTreeMarshaller.java?ref=bf3d0982575284c3ae2b5ab19d66be89924c0085",
                "deletions": 38,
                "filename": "core-avl/src/main/java/org/apache/directory/server/core/avltree/AvlTreeMarshaller.java",
                "patch": "@@ -27,6 +27,12 @@\n import java.io.IOException;\n import java.util.Comparator;\n \n+import org.apache.directory.shared.ldap.util.StringTools;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import sun.reflect.Reflection;\n+\n \n /**\n  * Class to serialize the AvlTree node data.\n@@ -37,6 +43,9 @@\n @SuppressWarnings(\"unchecked\")\n public class AvlTreeMarshaller<E> implements Marshaller<AvlTree<E>>\n {\n+    /** static logger */\n+    private static final Logger LOG = LoggerFactory.getLogger( AvlTreeMarshaller.class );\n+\n     /** used for serialized form of an empty AvlTree */\n     private static final byte[] EMPTY_TREE = new byte[1];\n \n@@ -104,6 +113,18 @@ public AvlTreeMarshaller( Comparator<E> comparator )\n             writeTree( tree.getRoot(), out );\n             out.flush();\n             data = byteStream.toByteArray();\n+            \n+            // Try to deserialize, just to see\n+            try\n+            {\n+                deserialize( data );\n+            }\n+            catch (NullPointerException npe )\n+            {\n+                System.out.println( \"Bad serialization, tree : [\" + StringTools.dumpBytes( data ) + \"]\");\n+                throw npe;\n+            }\n+\n             out.close();\n         }\n         catch( IOException e )\n@@ -164,49 +185,59 @@ private void writeTree( LinkedAvlNode<E> node, DataOutputStream out ) throws IOE\n      */\n     public AvlTree<E> deserialize( byte[] data ) throws IOException\n     {\n-        if ( data == null || data.length == 0 )\n-        {\n-            throw new IOException( \"Null or empty data array is invalid.\" );\n-        }\n+        LOG.debug( \"Deserializing the tree, called by {}\", Reflection.getCallerClass( 2 ).getSimpleName() );\n \n-        if ( data.length == 1 && data[0] == 0 )\n-        {\n-            return new AvlTree<E>( comparator );\n-        }\n-\n-        ByteArrayInputStream bin = new ByteArrayInputStream( data );\n-        DataInputStream din = new DataInputStream( bin );\n-        \n-        byte startByte = din.readByte();\n-        \n-        if( startByte != 0 )\n-        {\n-            throw new IOException(\"wrong AvlTree serialized data format\");\n-        }\n-        \n-        int size = din.readInt();\n-        \n-        LinkedAvlNode[] nodes = new LinkedAvlNode[ size ];\n-        LinkedAvlNode<E> root = readTree( din, null, nodes );\n-        \n-        AvlTree<E> tree = new AvlTree<E>( comparator );\n-        \n-        tree.setRoot( root );\n-        \n-        tree.setFirst( nodes[0] );\n-        \n-        if( nodes.length >= 1 )\n+        try\n         {\n-            tree.setLast( nodes[ nodes.length - 1 ] );\n+            if ( data == null || data.length == 0 )\n+            {\n+                throw new IOException( \"Null or empty data array is invalid.\" );\n+            }\n+    \n+            if ( data.length == 1 && data[0] == 0 )\n+            {\n+                return new AvlTree<E>( comparator );\n+            }\n+    \n+            ByteArrayInputStream bin = new ByteArrayInputStream( data );\n+            DataInputStream din = new DataInputStream( bin );\n+            \n+            byte startByte = din.readByte();\n+            \n+            if( startByte != 0 )\n+            {\n+                throw new IOException(\"wrong AvlTree serialized data format\");\n+            }\n+            \n+            int size = din.readInt();\n+            \n+            LinkedAvlNode[] nodes = new LinkedAvlNode[ size ];\n+            LinkedAvlNode<E> root = readTree( din, null, nodes );\n+            \n+            AvlTree<E> tree = new AvlTree<E>( comparator );\n+            \n+            tree.setRoot( root );\n+            \n+            tree.setFirst( nodes[0] );\n+            \n+            if( nodes.length >= 1 )\n+            {\n+                tree.setLast( nodes[ nodes.length - 1 ] );\n+            }\n+            \n+            for( int i = 0; i < nodes.length - 1; i++ )\n+            {\n+                nodes[ i ].setNext( nodes[ i + 1] );\n+                nodes[ i + 1].setPrevious( nodes[ i ] );\n+            }\n+    \n+            return tree;\n         }\n-        \n-        for( int i = 0; i < nodes.length - 1; i++ )\n+        catch (NullPointerException npe )\n         {\n-            nodes[ i ].setNext( nodes[ i + 1] );\n-            nodes[ i + 1].setPrevious( nodes[ i ] );\n+            System.out.println( \"Bad tree : [\" + StringTools.dumpBytes( data ) + \"]\");\n+            throw npe;\n         }\n-\n-        return tree;\n     }\n \n     ",
                "raw_url": "https://github.com/apache/directory-server/raw/bf3d0982575284c3ae2b5ab19d66be89924c0085/core-avl/src/main/java/org/apache/directory/server/core/avltree/AvlTreeMarshaller.java",
                "sha": "c55aaff71366449970f755f49d20a19c37784d08",
                "status": "modified"
            },
            {
                "additions": 38,
                "blob_url": "https://github.com/apache/directory-server/blob/bf3d0982575284c3ae2b5ab19d66be89924c0085/core-avl/src/test/java/org/apache/directory/server/core/avltree/AvlTreeTest.java",
                "changes": 38,
                "contents_url": "https://api.github.com/repos/apache/directory-server/contents/core-avl/src/test/java/org/apache/directory/server/core/avltree/AvlTreeTest.java?ref=bf3d0982575284c3ae2b5ab19d66be89924c0085",
                "deletions": 0,
                "filename": "core-avl/src/test/java/org/apache/directory/server/core/avltree/AvlTreeTest.java",
                "patch": "@@ -490,4 +490,42 @@ private void traverse( LinkedAvlNode<Integer> startNode, List<LinkedAvlNode<Inte\n       }\n       //3. post-order\n     }\n+\n+\n+    @Test\n+    public void testRemoveEmptyTree()\n+    {\n+        tree.remove( null );\n+        \n+        assertEquals( 0, tree.getSize() );\n+\n+        tree.remove( 1 );\n+        \n+        assertEquals( 0, tree.getSize() );\n+    }\n+\n+\n+    @Test\n+    public void testRemoveOneNode()\n+    {\n+        tree.insert( 1 );\n+        assertEquals( 1, tree.getSize() );\n+        \n+        tree.remove( 1 );\n+        assertEquals( 0, tree.getSize() );\n+    }\n+\n+\n+    @Test\n+    public void testRemoveOneNodeWithRight()\n+    {\n+        tree.insert( 1 );\n+        tree.insert( 2 );\n+        assertEquals( 2, tree.getSize() );\n+        assertEquals( \"1,2\", getInorderForm() );\n+        \n+        tree.remove( 1 );\n+        assertEquals( 1, tree.getSize() );\n+        assertEquals( Integer.valueOf( 2 ), tree.getRoot().getKey() );\n+    }\n }",
                "raw_url": "https://github.com/apache/directory-server/raw/bf3d0982575284c3ae2b5ab19d66be89924c0085/core-avl/src/test/java/org/apache/directory/server/core/avltree/AvlTreeTest.java",
                "sha": "13a950151572ba50c6a7e3848abbb815b1dcf525",
                "status": "modified"
            },
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/directory-server/blob/bf3d0982575284c3ae2b5ab19d66be89924c0085/core/src/main/java/org/apache/directory/server/core/DefaultOperationManager.java",
                "changes": 4,
                "contents_url": "https://api.github.com/repos/apache/directory-server/contents/core/src/main/java/org/apache/directory/server/core/DefaultOperationManager.java?ref=bf3d0982575284c3ae2b5ab19d66be89924c0085",
                "deletions": 2,
                "filename": "core/src/main/java/org/apache/directory/server/core/DefaultOperationManager.java",
                "patch": "@@ -265,8 +265,8 @@ public void add( AddOperationContext opContext ) throws Exception\n             pop();\n         }\n \n-        LOG.debug( \"<< AddOperation successfull\" );\n-        LOG_CHANGES.debug( \"<< AddOperation successfull\" );\n+        LOG.debug( \"<< AddOperation successful\" );\n+        LOG_CHANGES.debug( \"<< AddOperation successful\" );\n     }\n \n ",
                "raw_url": "https://github.com/apache/directory-server/raw/bf3d0982575284c3ae2b5ab19d66be89924c0085/core/src/main/java/org/apache/directory/server/core/DefaultOperationManager.java",
                "sha": "b24e8e036180e035cef03ad9fa018f071b8bd029",
                "status": "modified"
            },
            {
                "additions": 5,
                "blob_url": "https://github.com/apache/directory-server/blob/bf3d0982575284c3ae2b5ab19d66be89924c0085/jdbm-store/src/main/java/org/apache/directory/server/core/partition/impl/btree/jdbm/JdbmStore.java",
                "changes": 8,
                "contents_url": "https://api.github.com/repos/apache/directory-server/contents/jdbm-store/src/main/java/org/apache/directory/server/core/partition/impl/btree/jdbm/JdbmStore.java?ref=bf3d0982575284c3ae2b5ab19d66be89924c0085",
                "deletions": 3,
                "filename": "jdbm-store/src/main/java/org/apache/directory/server/core/partition/impl/btree/jdbm/JdbmStore.java",
                "patch": "@@ -1160,9 +1160,12 @@ private void addAliasIndices( Long aliasId, LdapDN aliasDn, String aliasTarget )\n \n     /**\n      * {@inheritDoc}\n+     * TODO : We should be able to revert all the changes made to index \n+     * if something went wrong. Also the index should auto-repair : if\n+     * an entry does not exist in the Master table, then the index must be updated to reflect this.\n      */\n     @SuppressWarnings(\"unchecked\")\n-    public void add( ServerEntry entry ) throws Exception\n+    public synchronized void add( ServerEntry entry ) throws Exception\n     {\n         if ( entry instanceof ClonedServerEntry )\n         {\n@@ -1210,7 +1213,6 @@ public void add( ServerEntry entry ) throws Exception\n \n         // Start adding the system userIndices\n         // Why bother doing a lookup if this is not an alias.\n-\n         // First, the ObjectClass index\n         for ( Value<?> value : objectClass )\n         {\n@@ -1306,7 +1308,7 @@ public ServerEntry lookup( Long id ) throws Exception\n     /**\n      * {@inheritDoc}\n      */\n-    public void delete( Long id ) throws Exception\n+    public synchronized void delete( Long id ) throws Exception\n     {\n         ServerEntry entry = lookup( id );\n         Long parentId = getParentId( id );",
                "raw_url": "https://github.com/apache/directory-server/raw/bf3d0982575284c3ae2b5ab19d66be89924c0085/jdbm-store/src/main/java/org/apache/directory/server/core/partition/impl/btree/jdbm/JdbmStore.java",
                "sha": "ab5bc1da98432555854e55c1a0bea5058f095f23",
                "status": "modified"
            },
            {
                "additions": 248,
                "blob_url": "https://github.com/apache/directory-server/blob/bf3d0982575284c3ae2b5ab19d66be89924c0085/jdbm-store/src/main/java/org/apache/directory/server/core/partition/impl/btree/jdbm/JdbmTable.java",
                "changes": 382,
                "contents_url": "https://api.github.com/repos/apache/directory-server/contents/jdbm-store/src/main/java/org/apache/directory/server/core/partition/impl/btree/jdbm/JdbmTable.java?ref=bf3d0982575284c3ae2b5ab19d66be89924c0085",
                "deletions": 134,
                "filename": "jdbm-store/src/main/java/org/apache/directory/server/core/partition/impl/btree/jdbm/JdbmTable.java",
                "patch": "@@ -35,7 +35,10 @@\n import org.apache.directory.shared.ldap.cursor.Cursor;\n import org.apache.directory.shared.ldap.cursor.EmptyCursor;\n import org.apache.directory.shared.ldap.cursor.SingletonCursor;\n+import org.apache.directory.shared.ldap.util.StringTools;\n import org.apache.directory.shared.ldap.util.SynchronizedLRUMap;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n \n import java.io.IOException;\n import java.util.Comparator;\n@@ -50,30 +53,36 @@\n  */\n public class JdbmTable<K,V> implements Table<K,V>\n {\n-    private static final byte[] EMPTY_BYTES = new byte[0];\n+    /** A logger for this class */\n+    private static final Logger LOG = LoggerFactory.getLogger( JdbmTable.class.getSimpleName() );\n \n     /** the key to store and retreive the count information */\n     private static final String SZSUFFIX = \"_btree_sz\";\n \n     /** the name of this table */\n     private final String name;\n+\n     /** the JDBM record manager for the file this table is managed in */\n     private final RecordManager recMan;\n+    \n     /** whether or not this table allows for duplicates */\n     private final boolean allowsDuplicates;\n+    \n     /** a key comparator for the keys in this Table */\n     private final Comparator<K> keyComparator;\n+    \n     /** a value comparator for the values in this Table */\n     private final Comparator<V> valueComparator;\n \n     /** the current count of entries in this Table */\n     private int count;\n+    \n     /** the wrappedCursor JDBM btree used in this Table */\n     private BTree bt;\n \n-\n     /** the limit at which we start using btree redirection for duplicates */\n     private int numDupLimit = JdbmIndex.DEFAULT_DUPLICATE_LIMIT;\n+\n     /** a cache of duplicate BTrees */\n     private final Map<Long, BTree> duplicateBtrees;\n \n@@ -388,14 +397,14 @@ public V get( K key ) throws Exception\n         jdbm.helper.Tuple tuple = new jdbm.helper.Tuple();\n         tree.browse().getNext( tuple );\n         //noinspection unchecked\n+        \n         return ( V ) tuple.getKey();\n     }\n \n     \n     /**\n      * @see Table#hasGreaterOrEqual(Object,Object)\n      */\n-    @SuppressWarnings(\"unchecked\")\n     public boolean hasGreaterOrEqual( K key, V val ) throws IOException\n     {\n         if ( key == null )\n@@ -410,6 +419,7 @@ public boolean hasGreaterOrEqual( K key, V val ) throws IOException\n         }\n \n         DupsContainer<V> values = getDupsContainer( ( byte[] ) bt.find( key ) );\n+        \n         if ( values.isAvlTree() )\n         {\n             AvlTree<V> set = values.getAvlTree();\n@@ -419,14 +429,14 @@ public boolean hasGreaterOrEqual( K key, V val ) throws IOException\n \n         // last option is to try a btree with BTreeRedirects\n         BTree tree = getBTree( values.getBTreeRedirect() );\n+        \n         return tree.size() != 0 && btreeHas( tree, val, true );\n     }\n \n \n     /**\n      * @see Table#hasLessOrEqual(Object,Object)\n      */\n-    @SuppressWarnings(\"unchecked\")\n     public boolean hasLessOrEqual( K key, V val ) throws IOException\n     {\n         if ( key == null )\n@@ -441,6 +451,7 @@ public boolean hasLessOrEqual( K key, V val ) throws IOException\n         }\n \n         DupsContainer<V> values = getDupsContainer( ( byte[] ) bt.find( key ) );\n+        \n         if ( values.isAvlTree() )\n         {\n             AvlTree<V> set = values.getAvlTree();\n@@ -450,6 +461,7 @@ public boolean hasLessOrEqual( K key, V val ) throws IOException\n \n         // last option is to try a btree with BTreeRedirects\n         BTree tree = getBTree( values.getBTreeRedirect() );\n+        \n         return tree.size() != 0 && btreeHas( tree, val, false );\n     }\n \n@@ -547,6 +559,7 @@ public boolean has( K key, V value ) throws IOException\n         }\n         \n         DupsContainer<V> values = getDupsContainer( ( byte[] ) bt.find( key ) );\n+        \n         if ( values.isAvlTree() )\n         {\n             return values.getAvlTree().find( value ) != null;\n@@ -570,58 +583,92 @@ public boolean has( K key ) throws IOException\n      * java.lang.Object)\n      */\n     @SuppressWarnings(\"unchecked\")\n-    public void put( K key, V value ) throws Exception\n+    public synchronized void put( K key, V value ) throws Exception\n     {\n-        if ( value == null || key == null )\n+        try\n         {\n-            throw new IllegalArgumentException( \"null for key or value is not valid\" );\n-        }\n-        \n-        V replaced;\n-\n-        if ( ! allowsDuplicates )\n-        {\n-            replaced = ( V ) bt.insert( key, value, true );\n-\n-            if ( null == replaced )\n+            if ( LOG.isDebugEnabled() )\n             {\n-                count++;\n+                LOG.debug( \"---> Add {} = {}\", name, key );\n             }\n \n-            return;\n-        }\n-        \n-        DupsContainer<V> values = getDupsContainer( ( byte[] ) bt.find( key ) );\n-        if ( values.isAvlTree() )\n-        {\n-            AvlTree<V> set = values.getAvlTree();\n-            replaced = set.insert( value );\n+            if ( ( value == null ) || ( key == null ) )\n+            {\n+                throw new IllegalArgumentException( \"null for key or value is not valid\" );\n+            }\n             \n-            if ( replaced != null )// if the value already present returns the same value\n+            V replaced;\n+    \n+            if ( ! allowsDuplicates )\n             {\n+                replaced = ( V ) bt.insert( key, value, true );\n+    \n+                if ( null == replaced )\n+                {\n+                    count++;\n+                }\n+    \n+                if ( LOG.isDebugEnabled() )\n+                {\n+                    LOG.debug( \"<--- Add ONE {} = {}\", name, key );\n+                }\n+                \n+                return;\n+            }\n+            \n+            DupsContainer<V> values = getDupsContainer( ( byte[] ) bt.find( key ) );\n+            \n+            if ( values.isAvlTree() )\n+            {\n+                AvlTree<V> set = values.getAvlTree();\n+                replaced = set.insert( value );\n+                \n+                if ( replaced != null )// if the value already present returns the same value\n+                {\n+                    return;\n+                }\n+                if ( set.getSize() > numDupLimit )\n+                {\n+                    BTree tree = convertToBTree( set );\n+                    BTreeRedirect redirect = new BTreeRedirect( tree.getRecid() );\n+                    bt.insert( key, BTreeRedirectMarshaller.INSTANCE.serialize( redirect ), true );\n+                    \n+                    if ( LOG.isDebugEnabled() )\n+                    {\n+                        LOG.debug( \"<--- Add new BTREE {} = {}\", name, key );\n+                    }\n+                }\n+                else\n+                {\n+                    bt.insert( key, marshaller.serialize( set ), true );\n+                    \n+                    if ( LOG.isDebugEnabled() )\n+                    {\n+                        LOG.debug( \"<--- Add AVL {} = {}\", name, key );\n+                    }\n+                }\n+    \n+                count++;\n                 return;\n             }\n-            if ( set.getSize() > numDupLimit )\n+            \n+            BTree tree = getBTree( values.getBTreeRedirect() );\n+            replaced = ( V ) tree.insert( value, StringTools.EMPTY_BYTES, true );\n+            \n+            if ( replaced == null )\n             {\n-                BTree tree = convertToBTree( set );\n-                BTreeRedirect redirect = new BTreeRedirect( tree.getRecid() );\n-                bt.insert( key, BTreeRedirectMarshaller.INSTANCE.serialize( redirect ), true );\n+                count++;\n             }\n-            else\n+            \n+            if ( LOG.isDebugEnabled() )\n             {\n-                bt.insert( key, marshaller.serialize( set ), true );\n+                LOG.debug( \"<--- Add BTREE {} = {}\", name, key );\n             }\n-\n-            count++;\n-            return;\n         }\n-        \n-        BTree tree = getBTree( values.getBTreeRedirect() );\n-        replaced = ( V ) tree.insert( value, EMPTY_BYTES, true );\n-        \n-        if ( replaced == null )\n+        catch ( Exception e )\n         {\n-            count++;\n+            LOG.error( \"Error while adding \" + key + \" on table \" + name, e );\n+            throw e;\n         }\n     }\n     \n@@ -631,110 +678,187 @@ public void put( K key, V value ) throws Exception\n      * java.lang.Object)\n      */\n     @SuppressWarnings(\"unchecked\")\n-    public void remove( K key, V value ) throws IOException\n+    public synchronized void remove( K key, V value ) throws IOException\n     {\n-        if ( key == null )\n+        try\n         {\n-            return;\n-        }\n-\n-        if ( ! allowsDuplicates )\n-        {\n-            V oldValue = ( V ) bt.find( key );\n-        \n-            // Remove the value only if it is the same as value.\n-            if ( ( oldValue != null ) && oldValue.equals( value ) )\n+            if ( LOG.isDebugEnabled() )\n+            {\n+                LOG.debug( \"---> Remove \" + name + \" = \" + key + \", \" + value );\n+            }\n+            \n+            if ( key == null )\n             {\n-                bt.remove( key );\n-                count--;\n+                if ( LOG.isDebugEnabled() )\n+                {\n+                    LOG.debug( \"<--- Remove NULL key \" + name );\n+                }\n                 return;\n             }\n-\n-            return;\n-        }\n-\n-        DupsContainer<V> values = getDupsContainer( ( byte[] ) bt.find( key ) );\n-        \n-        if ( values.isAvlTree() )\n-        {\n-            AvlTree<V> set = values.getAvlTree();\n-\n-            // If removal succeeds then remove if set is empty else replace it\n-            if ( set.remove( value ) != null )\n+    \n+            if ( ! allowsDuplicates )\n             {\n-                if ( set.isEmpty() )\n+                V oldValue = ( V ) bt.find( key );\n+            \n+                // Remove the value only if it is the same as value.\n+                if ( ( oldValue != null ) && oldValue.equals( value ) )\n                 {\n                     bt.remove( key );\n+                    count--;\n+                    \n+                    if ( LOG.isDebugEnabled() )\n+                    {\n+                        LOG.debug( \"<--- Remove ONE \" + name + \" = \" + key + \", \" + value );\n+                    }\n+                    \n+                    return;\n                 }\n-                else\n+    \n+                return;\n+            }\n+    \n+            DupsContainer<V> values = getDupsContainer( ( byte[] ) bt.find( key ) );\n+            \n+            if ( values.isAvlTree() )\n+            {\n+                AvlTree<V> set = values.getAvlTree();\n+    \n+                // If removal succeeds then remove if set is empty else replace it\n+                if ( set.remove( value ) != null )\n                 {\n-                    bt.insert( key, marshaller.serialize( set ), true );\n+                    if ( set.isEmpty() )\n+                    {\n+                        bt.remove( key );\n+                    }\n+                    else\n+                    {\n+                        bt.insert( key, marshaller.serialize( set ), true );\n+                    }\n+                    count--;\n+\n+                    if ( LOG.isDebugEnabled() )\n+                    {\n+                        LOG.debug( \"<--- Remove AVL \" + name + \" = \" + key + \", \" + value );\n+                    }\n+                    \n+                    return;\n                 }\n-                count--;\n+    \n                 return;\n             }\n-\n-            return;\n-        }\n-\n-        // if the number of duplicates falls below the numDupLimit value\n-        BTree tree = getBTree( values.getBTreeRedirect() );\n-        \n-        if ( removeDupFromBTree( tree, value ) )\n-        {\n-            /*\n-             * If we drop below the duplicate limit then we revert from using\n-             * a Jdbm BTree to using an in memory AvlTree.\n-             */\n-            if ( tree.size() <= numDupLimit )\n+    \n+            // if the number of duplicates falls below the numDupLimit value\n+            BTree tree = getBTree( values.getBTreeRedirect() );\n+            \n+            if ( tree.find( value ) != null )\n             {\n-                AvlTree<V> avlTree = convertToAvlTree( tree );\n-                bt.insert( key, marshaller.serialize( avlTree ), true );\n-                recMan.delete( tree.getRecid() );\n+                if ( tree.remove( value ) != null )\n+                {\n+                    /*\n+                     * If we drop below the duplicate limit then we revert from using\n+                     * a Jdbm BTree to using an in memory AvlTree.\n+                     */\n+                    if ( tree.size() <= numDupLimit )\n+                    {\n+                        AvlTree<V> avlTree = convertToAvlTree( tree );\n+                        bt.insert( key, marshaller.serialize( avlTree ), true );\n+                        recMan.delete( tree.getRecid() );\n+                    }\n+                    \n+                    count--;\n+                    \n+                    if ( LOG.isDebugEnabled() )\n+                    {\n+                        LOG.debug( \"<--- Remove BTREE \" + name + \" = \" + key + \", \" + value );\n+                    }\n+                    \n+                    return;\n+                }\n             }\n-            \n-            count--;\n-            return;\n+        }\n+        catch ( Exception e )\n+        {\n+            LOG.error( \"Error while adding \" + key + \", \" + value + \" on table \" + name, e );\n         }\n     }\n \n \n     /**\n      * @see Table#remove(Object)\n      */\n-    public void remove( K key ) throws IOException\n+    public synchronized void remove( K key ) throws IOException\n     {\n-        if ( key == null )\n-        {\n-            return;\n-        }\n-\n-        Object returned = bt.remove( key );\n-\n-        if ( null == returned )\n+        try\n         {\n-            return;\n-        }\n-\n-        if ( ! allowsDuplicates )\n-        {\n-            this.count--;\n-            return;\n-        }\n-\n-        byte[] serialized = ( byte[] ) returned;\n-\n-        if ( BTreeRedirectMarshaller.isRedirect( serialized ) )\n-        {\n-            BTree tree = getBTree( BTreeRedirectMarshaller.INSTANCE.deserialize( serialized ) );\n-            this.count -= tree.size();\n-            return;\n+            if ( LOG.isDebugEnabled() )\n+            {\n+                LOG.debug( \"---> Remove {} = {}\", name, key );\n+            }\n+            \n+            if ( key == null )\n+            {\n+                return;\n+            }\n+    \n+            Object returned = bt.remove( key );\n+    \n+            if ( null == returned )\n+            {\n+                if ( LOG.isDebugEnabled() )\n+                {\n+                    LOG.debug( \"<--- Remove AVL {} = {} (not found)\", name, key );\n+                }\n+                \n+                return;\n+            }\n+    \n+            if ( ! allowsDuplicates )\n+            {\n+                this.count--;\n+             \n+                if ( LOG.isDebugEnabled() )\n+                {\n+                    LOG.debug( \"<--- Remove ONE {} = {}\", name, key );\n+                }\n+                \n+                return;\n+            }\n+    \n+            byte[] serialized = ( byte[] ) returned;\n+    \n+            if ( BTreeRedirectMarshaller.isRedirect( serialized ) )\n+            {\n+                BTree tree = getBTree( BTreeRedirectMarshaller.INSTANCE.deserialize( serialized ) );\n+                this.count -= tree.size();\n+                \n+                if ( LOG.isDebugEnabled() )\n+                {\n+                    LOG.debug( \"<--- Remove BTree {} = {}\", name, key );\n+                }\n+                \n+                return;\n+            }\n+            else\n+            {\n+                AvlTree<V> set = marshaller.deserialize( serialized );\n+                this.count -= set.getSize();\n+    \n+                if ( LOG.isDebugEnabled() )\n+                {\n+                    LOG.debug( \"<--- Remove AVL {} = {}\", name, key );\n+                }\n+                \n+                return;\n+            }\n         }\n-        else\n+        catch ( Exception e )\n         {\n-            AvlTree<V> set = marshaller.deserialize( serialized );\n-            this.count -= set.getSize();\n-            return;\n+            LOG.error(  \"Exception while removing \" + key + \" from index \" + name, e );\n+            \n+            if ( e instanceof IOException )\n+            {\n+                throw (IOException)e;\n+            }\n         }\n     }\n \n@@ -833,7 +957,7 @@ public synchronized void close() throws IOException\n      *\n      * @throws IOException if errors are encountered on the flush\n      */\n-    public void sync() throws IOException\n+    public synchronized void sync() throws IOException\n     {\n         long recId = recMan.getNamedObject( name + SZSUFFIX );\n         recMan.update( recId, count );\n@@ -849,8 +973,6 @@ public void sync() throws IOException\n     // ------------------------------------------------------------------------\n     // Private/Package Utility Methods \n     // ------------------------------------------------------------------------\n-\n-\n     DupsContainer<V> getDupsContainer( byte[] serialized ) throws IOException\n     {\n         if ( serialized == null )\n@@ -928,23 +1050,13 @@ private boolean btreeHas( BTree tree, V key, boolean isGreaterThan ) throws IOEx\n     }\n \n \n-    private boolean removeDupFromBTree( BTree tree, V value ) throws IOException\n-    {\n-        Object removed = null;\n-        if ( tree.find( value ) != null )\n-        {\n-            removed = tree.remove( value );\n-        }\n-        return null != removed;\n-    }\n-\n-\n     @SuppressWarnings(\"unchecked\")\n     private AvlTree<V> convertToAvlTree( BTree bTree ) throws IOException\n     {\n         AvlTree<V> avlTree = new AvlTree<V>( valueComparator );\n         TupleBrowser browser = bTree.browse();\n         jdbm.helper.Tuple tuple = new jdbm.helper.Tuple();\n+        \n         while ( browser.getNext( tuple ) )\n         {\n             avlTree.insert( ( V ) tuple.getKey() );\n@@ -969,10 +1081,12 @@ private BTree convertToBTree( AvlTree<V> avlTree ) throws Exception\n \n         Cursor<V> keys = new AvlTreeCursor<V>( avlTree );\n         keys.beforeFirst();\n+        \n         while ( keys.next() )\n         {\n-            bTree.insert( keys.get(), EMPTY_BYTES, true );\n+            bTree.insert( keys.get(), StringTools.EMPTY_BYTES, true );\n         }\n+        \n         return bTree;\n     }\n }",
                "raw_url": "https://github.com/apache/directory-server/raw/bf3d0982575284c3ae2b5ab19d66be89924c0085/jdbm-store/src/main/java/org/apache/directory/server/core/partition/impl/btree/jdbm/JdbmTable.java",
                "sha": "51db2a4a8429b77a2a8b89b76d3c71abc601a362",
                "status": "modified"
            },
            {
                "additions": 8,
                "blob_url": "https://github.com/apache/directory-server/blob/bf3d0982575284c3ae2b5ab19d66be89924c0085/jdbm/src/main/java/jdbm/recman/CacheRecordManager.java",
                "changes": 8,
                "contents_url": "https://api.github.com/repos/apache/directory-server/contents/jdbm/src/main/java/jdbm/recman/CacheRecordManager.java?ref=bf3d0982575284c3ae2b5ab19d66be89924c0085",
                "deletions": 0,
                "filename": "jdbm/src/main/java/jdbm/recman/CacheRecordManager.java",
                "patch": "@@ -267,6 +267,14 @@ public synchronized Object fetch( long recid, Serializer serializer )\n                 throw new WrappedRuntimeException( except );\n             }\n         }\n+        \n+        if ( entry._obj instanceof byte[] )\n+        {\n+            byte[] copy = new byte[((byte[])entry._obj).length];\n+            System.arraycopy( entry._obj, 0, copy, 0, ((byte[])entry._obj).length );\n+            return copy;\n+        }\n+        \n         return entry._obj;\n     }\n ",
                "raw_url": "https://github.com/apache/directory-server/raw/bf3d0982575284c3ae2b5ab19d66be89924c0085/jdbm/src/main/java/jdbm/recman/CacheRecordManager.java",
                "sha": "4d2a0af53b21fa1e5ed7bb5d71e5d63ec2b81a3f",
                "status": "modified"
            },
            {
                "additions": 18,
                "blob_url": "https://github.com/apache/directory-server/blob/bf3d0982575284c3ae2b5ab19d66be89924c0085/protocol-ldap/src/main/java/org/apache/directory/server/ldap/handlers/extended/LaunchDiagnosticUiHandler.java",
                "changes": 27,
                "contents_url": "https://api.github.com/repos/apache/directory-server/contents/protocol-ldap/src/main/java/org/apache/directory/server/ldap/handlers/extended/LaunchDiagnosticUiHandler.java?ref=bf3d0982575284c3ae2b5ab19d66be89924c0085",
                "deletions": 9,
                "filename": "protocol-ldap/src/main/java/org/apache/directory/server/ldap/handlers/extended/LaunchDiagnosticUiHandler.java",
                "patch": "@@ -104,15 +104,24 @@ public void handleExtendedOperation( LdapSession requestor, InternalExtendedRequ\n             \n             if ( partition instanceof BTreePartition )\n             {\n-                BTreePartition btPartition = ( BTreePartition ) partition;\n-                PartitionFrame frame = new PartitionFrame( btPartition, service.getRegistries() );\n-                Point pos = getCenteredPosition( frame );\n-                pos.y = launchedWindowCount * 20 + pos.y;\n-                double multiplier = getAspectRatio() * 20.0;\n-                pos.x = ( int ) ( launchedWindowCount * multiplier ) + pos.x;\n-                frame.setLocation( pos );\n-                frame.setVisible( true );\n-                launchedWindowCount++;\n+                try\n+                {\n+                    BTreePartition btPartition = ( BTreePartition ) partition;\n+                    // TODO : If a partition does not have an initial entry associated, we wil:\n+                    // get a NPE : this has to be fixed.\n+                    PartitionFrame frame = new PartitionFrame( btPartition, service.getRegistries() );\n+                    Point pos = getCenteredPosition( frame );\n+                    pos.y = launchedWindowCount * 20 + pos.y;\n+                    double multiplier = getAspectRatio() * 20.0;\n+                    pos.x = ( int ) ( launchedWindowCount * multiplier ) + pos.x;\n+                    frame.setLocation( pos );\n+                    frame.setVisible( true );\n+                    launchedWindowCount++;\n+                }\n+                catch ( Exception e )\n+                {\n+                    // Continue\n+                }\n             }\n         }\n ",
                "raw_url": "https://github.com/apache/directory-server/raw/bf3d0982575284c3ae2b5ab19d66be89924c0085/protocol-ldap/src/main/java/org/apache/directory/server/ldap/handlers/extended/LaunchDiagnosticUiHandler.java",
                "sha": "37581bd51a8937d909896eba3e27d2b735d738d0",
                "status": "modified"
            }
        ],
        "message": "o Injected Kiran's patch to move AVL serialization inside JDBM\no Added synchronization in JDBMStore for modification operations and sync()\no The JDBM byte buffers are copied before being returned to the caller, to avoid a modification \nmade on a reference\no Fixed some double update of the oneLevel index (no need to add a (id,id) entry)\no When we can't find the entry, instead of a NPE, an error 32 is generated (NO_SUCH_OBJECT)\no Minor cleanup in JdbmTable\no Added some logs in JdbmTable\no Added some traces if the AVL Tree deserializer detect some bad tree\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/directory/apacheds/trunk@792502 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/directory-server/commit/f383684370acba67e6fee21ce988ee254457fbad",
        "repo": "directory-server",
        "unit_tests": [
            "AvlTreeTest.java",
            "AvlTreeMarshallerTest.java",
            "JdbmStoreTest.java"
        ]
    },
    "directory-server_bfce278": {
        "bug_id": "directory-server_bfce278",
        "commit": "https://github.com/apache/directory-server/commit/bfce2783f401bb348ca4c601a6d304fd9f965306",
        "file": [
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/directory-server/blob/bfce2783f401bb348ca4c601a6d304fd9f965306/xdbm-base/src/main/java/org/apache/directory/server/xdbm/AbstractIndexCursor.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/directory-server/contents/xdbm-base/src/main/java/org/apache/directory/server/xdbm/AbstractIndexCursor.java?ref=bfce2783f401bb348ca4c601a6d304fd9f965306",
                "deletions": 1,
                "filename": "xdbm-base/src/main/java/org/apache/directory/server/xdbm/AbstractIndexCursor.java",
                "patch": "@@ -42,7 +42,7 @@ public final void setClosureMonitor( ClosureMonitor monitor )\n     {\n         if ( monitor == null )\n         {\n-            throw new NullPointerException( \"monitor\" );\n+            throw new IllegalArgumentException( \"monitor\" );\n         }\n \n         this.monitor = monitor;",
                "raw_url": "https://github.com/apache/directory-server/raw/bfce2783f401bb348ca4c601a6d304fd9f965306/xdbm-base/src/main/java/org/apache/directory/server/xdbm/AbstractIndexCursor.java",
                "sha": "668e6a28fd467a7042aae7202dfdd7f32f10af49",
                "status": "modified"
            }
        ],
        "message": "Throw IllegalArgumentException instead of NPE.\n\ngit-svn-id: https://svn.apache.org/repos/asf/directory/apacheds/trunk@944689 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/directory-server/commit/38f5dfacc8cadedede85b29cb3cad1cd6693673b",
        "repo": "directory-server",
        "unit_tests": [
            "AbstractIndexCursorTest.java"
        ]
    },
    "directory-server_c0187e6": {
        "bug_id": "directory-server_c0187e6",
        "commit": "https://github.com/apache/directory-server/commit/c0187e62926aa58970170a59bb6ba6a3e96d7a9a",
        "file": [
            {
                "additions": 4,
                "blob_url": "https://github.com/apache/directory-server/blob/c0187e62926aa58970170a59bb6ba6a3e96d7a9a/service-builder/src/main/java/org/apache/directory/server/config/builder/ServiceBuilder.java",
                "changes": 7,
                "contents_url": "https://api.github.com/repos/apache/directory-server/contents/service-builder/src/main/java/org/apache/directory/server/config/builder/ServiceBuilder.java?ref=c0187e62926aa58970170a59bb6ba6a3e96d7a9a",
                "deletions": 3,
                "filename": "service-builder/src/main/java/org/apache/directory/server/config/builder/ServiceBuilder.java",
                "patch": "@@ -535,18 +535,19 @@ else if ( transportBean instanceof UdpTransportBean )\n      */\n     public static Authenticator[] createAuthenticators( List<AuthenticatorBean> list ) throws ConfigurationException\n     {\n-        Authenticator[] authenticators = new Authenticator[list.size()];\n+        Set<Authenticator> authenticators = new HashSet<Authenticator>( list.size() );\n         int i = 0;\n \n         for ( AuthenticatorBean authenticatorBean : list )\n         {\n             if ( authenticatorBean.isEnabled() )\n             {\n-                authenticators[i++] = createAuthenticator( authenticatorBean );\n+                authenticators.add( createAuthenticator( authenticatorBean ) );\n             }\n         }\n \n-        return authenticators;\n+        return authenticators.toArray( new Authenticator[]\n+            {} );\n     }\n \n ",
                "raw_url": "https://github.com/apache/directory-server/raw/c0187e62926aa58970170a59bb6ba6a3e96d7a9a/service-builder/src/main/java/org/apache/directory/server/config/builder/ServiceBuilder.java",
                "sha": "523a4e5ca1f48b52c3a992248111efbdbed10a72",
                "status": "modified"
            }
        ],
        "message": "Another fix for DIRSERVER-1802 : we were creating an array which is too big when we remove a disabled Authenticator, so we end with a null value in the array, which produces a NPE\n\ngit-svn-id: https://svn.apache.org/repos/asf/directory/apacheds/trunk@1446146 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/directory-server/commit/f3b89a0752761865516adea7fae2db4c32bd680a",
        "repo": "directory-server",
        "unit_tests": [
            "ServiceBuilderTest.java"
        ]
    },
    "directory-server_c43b603": {
        "bug_id": "directory-server_c43b603",
        "commit": "https://github.com/apache/directory-server/commit/c43b60334bef4dbf7fd1e535a3f187537fa7465d",
        "file": [
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/directory-server/blob/c43b60334bef4dbf7fd1e535a3f187537fa7465d/core-api/src/main/java/org/apache/directory/server/core/DirectoryService.java",
                "changes": 3,
                "contents_url": "https://api.github.com/repos/apache/directory-server/contents/core-api/src/main/java/org/apache/directory/server/core/DirectoryService.java?ref=c43b60334bef4dbf7fd1e535a3f187537fa7465d",
                "deletions": 1,
                "filename": "core-api/src/main/java/org/apache/directory/server/core/DirectoryService.java",
                "patch": "@@ -36,6 +36,7 @@\n import org.apache.directory.server.core.schema.SchemaService;\n import org.apache.directory.shared.ldap.csn.Csn;\n import org.apache.directory.shared.ldap.entry.Entry;\n+import org.apache.directory.shared.ldap.exception.LdapException;\n import org.apache.directory.shared.ldap.ldif.LdifEntry;\n import org.apache.directory.shared.ldap.name.DN;\n import org.apache.directory.shared.ldap.schema.SchemaManager;\n@@ -196,7 +197,7 @@\n      *\n      * @return a logical session as a specific user\n      */\n-    CoreSession getSession( DN principalDn, byte[] credentials ) throws Exception;\n+    CoreSession getSession( DN principalDn, byte[] credentials ) throws LdapException;\n \n     \n     /**",
                "raw_url": "https://github.com/apache/directory-server/raw/c43b60334bef4dbf7fd1e535a3f187537fa7465d/core-api/src/main/java/org/apache/directory/server/core/DirectoryService.java",
                "sha": "c0bfa32cab1557688062d04bb264824e60e885f6",
                "status": "modified"
            },
            {
                "additions": 6,
                "blob_url": "https://github.com/apache/directory-server/blob/c43b60334bef4dbf7fd1e535a3f187537fa7465d/core-api/src/main/java/org/apache/directory/server/core/LdapCoreSessionConnection.java",
                "changes": 8,
                "contents_url": "https://api.github.com/repos/apache/directory-server/contents/core-api/src/main/java/org/apache/directory/server/core/LdapCoreSessionConnection.java?ref=c43b60334bef4dbf7fd1e535a3f187537fa7465d",
                "deletions": 2,
                "filename": "core-api/src/main/java/org/apache/directory/server/core/LdapCoreSessionConnection.java",
                "patch": "@@ -78,6 +78,7 @@\n import org.apache.directory.shared.ldap.name.DN;\n import org.apache.directory.shared.ldap.name.RDN;\n import org.apache.directory.shared.ldap.schema.SchemaManager;\n+import org.apache.directory.shared.ldap.util.StringTools;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n \n@@ -939,11 +940,14 @@ public BindResponse bind( DN name, String credentials ) throws LdapException, IO\n     {\n         try\n         {\n-            setSession( directoryService.getSession( name, credentials.getBytes() ) );\n+            byte[] credBytes = ( credentials == null ? StringTools.EMPTY_BYTES : StringTools.getBytesUtf8( credentials ) );\n+\n+            setSession( directoryService.getSession( name, credBytes ) );\n         }\n-        catch( Exception e )\n+        catch ( LdapException e )\n         {\n             LOG.warn( e.getMessage(), e );\n+            throw e;\n         }\n         \n         return null;",
                "raw_url": "https://github.com/apache/directory-server/raw/c43b60334bef4dbf7fd1e535a3f187537fa7465d/core-api/src/main/java/org/apache/directory/server/core/LdapCoreSessionConnection.java",
                "sha": "df9fccfd6a2d73d3acf1453db976c9eeb2a0c52c",
                "status": "modified"
            },
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/directory-server/blob/c43b60334bef4dbf7fd1e535a3f187537fa7465d/core-api/src/main/java/org/apache/directory/server/core/OperationManager.java",
                "changes": 3,
                "contents_url": "https://api.github.com/repos/apache/directory-server/contents/core-api/src/main/java/org/apache/directory/server/core/OperationManager.java?ref=c43b60334bef4dbf7fd1e535a3f187537fa7465d",
                "deletions": 1,
                "filename": "core-api/src/main/java/org/apache/directory/server/core/OperationManager.java",
                "patch": "@@ -42,6 +42,7 @@\n import org.apache.directory.server.core.interceptor.context.SearchOperationContext;\n import org.apache.directory.server.core.interceptor.context.UnbindOperationContext;\n import org.apache.directory.shared.ldap.entry.Entry;\n+import org.apache.directory.shared.ldap.exception.LdapException;\n import org.apache.directory.shared.ldap.name.DN;\n \n \n@@ -147,7 +148,7 @@\n     /**\n      * TODO document after determining if this method should be here.\n      */\n-    void bind( BindOperationContext opContext ) throws Exception;\n+    void bind( BindOperationContext opContext ) throws LdapException;\n \n     \n     /**",
                "raw_url": "https://github.com/apache/directory-server/raw/c43b60334bef4dbf7fd1e535a3f187537fa7465d/core-api/src/main/java/org/apache/directory/server/core/OperationManager.java",
                "sha": "a1a964a2a7135416c2cbc64a8521f0b9088a03b4",
                "status": "modified"
            },
            {
                "additions": 4,
                "blob_url": "https://github.com/apache/directory-server/blob/c43b60334bef4dbf7fd1e535a3f187537fa7465d/core-api/src/main/java/org/apache/directory/server/core/interceptor/InterceptorChain.java",
                "changes": 7,
                "contents_url": "https://api.github.com/repos/apache/directory-server/contents/core-api/src/main/java/org/apache/directory/server/core/interceptor/InterceptorChain.java?ref=c43b60334bef4dbf7fd1e535a3f187537fa7465d",
                "deletions": 3,
                "filename": "core-api/src/main/java/org/apache/directory/server/core/interceptor/InterceptorChain.java",
                "patch": "@@ -58,6 +58,7 @@\n import org.apache.directory.server.i18n.I18n;\n import org.apache.directory.shared.ldap.constants.SchemaConstants;\n import org.apache.directory.shared.ldap.entry.Entry;\n+import org.apache.directory.shared.ldap.exception.LdapException;\n import org.apache.directory.shared.ldap.name.DN;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n@@ -770,7 +771,7 @@ public void add( AddOperationContext opContext ) throws Exception\n     }\n \n \n-    public void bind( BindOperationContext opContext ) throws Exception\n+    public void bind( BindOperationContext opContext ) throws LdapException\n     {\n         Element node = getStartingEntry();\n         Interceptor head = node.interceptor;\n@@ -781,9 +782,9 @@ public void bind( BindOperationContext opContext ) throws Exception\n         {\n             head.bind( next, opContext );\n         }\n-        catch ( Exception ne )\n+        catch ( LdapException le )\n         {\n-            throw ne;\n+            throw le;\n         }\n         catch ( Throwable e )\n         {",
                "raw_url": "https://github.com/apache/directory-server/raw/c43b60334bef4dbf7fd1e535a3f187537fa7465d/core-api/src/main/java/org/apache/directory/server/core/interceptor/InterceptorChain.java",
                "sha": "a53e2375cf68d47faa17526deaff33779aab4d03",
                "status": "modified"
            },
            {
                "additions": 12,
                "blob_url": "https://github.com/apache/directory-server/blob/c43b60334bef4dbf7fd1e535a3f187537fa7465d/core-api/src/main/java/org/apache/directory/server/core/interceptor/InterceptorException.java",
                "changes": 21,
                "contents_url": "https://api.github.com/repos/apache/directory-server/contents/core-api/src/main/java/org/apache/directory/server/core/interceptor/InterceptorException.java?ref=c43b60334bef4dbf7fd1e535a3f187537fa7465d",
                "deletions": 9,
                "filename": "core-api/src/main/java/org/apache/directory/server/core/interceptor/InterceptorException.java",
                "patch": "@@ -22,6 +22,8 @@\n \n import javax.naming.NamingException;\n \n+import org.apache.directory.shared.ldap.exception.LdapException;\n+\n \n /**\n  * A {@link NamingException} that wraps uncaught runtime exceptions thrown\n@@ -30,7 +32,7 @@\n  * @author <a href=\"mailto:dev@directory.apache.org\">Apache Directory Project</a>\n  * @version $Rev$, $Date$\n  */\n-public class InterceptorException extends NamingException\n+public class InterceptorException extends LdapException\n {\n     private static final long serialVersionUID = 3258690996517746233L;\n \n@@ -45,8 +47,9 @@\n      *\n      * @param interceptor the Interceptor causing the failure\n      */\n-    public InterceptorException(Interceptor interceptor)\n+    public InterceptorException( Interceptor interceptor )\n     {\n+        super();\n         this.interceptor = interceptor;\n     }\n \n@@ -57,7 +60,7 @@ public InterceptorException(Interceptor interceptor)\n      * @param interceptor the Interceptor causing the failure\n      * @param explanation String explanation of why the Interceptor failed\n      */\n-    public InterceptorException(Interceptor interceptor, String explanation)\n+    public InterceptorException( Interceptor interceptor, String explanation )\n     {\n         super( explanation );\n         this.interceptor = interceptor;\n@@ -70,10 +73,10 @@ public InterceptorException(Interceptor interceptor, String explanation)\n      * @param interceptor the Interceptor causing the failure\n      * @param rootCause   the root cause of this exception\n      */\n-    public InterceptorException(Interceptor interceptor, Throwable rootCause)\n+    public InterceptorException( Interceptor interceptor, Throwable rootCause )\n     {\n-        this( interceptor );\n-        super.setRootCause( rootCause );\n+        super( rootCause );\n+        this.interceptor = interceptor;\n     }\n \n \n@@ -84,10 +87,10 @@ public InterceptorException(Interceptor interceptor, Throwable rootCause)\n      * @param explanation String explanation of why the Interceptor failed\n      * @param rootCause   the root cause of this exception\n      */\n-    public InterceptorException(Interceptor interceptor, String explanation, Throwable rootCause)\n+    public InterceptorException( Interceptor interceptor, String explanation, Throwable rootCause )\n     {\n-        this( interceptor, explanation );\n-        super.setRootCause( rootCause );\n+        super( explanation, rootCause );\n+        this.interceptor = interceptor;\n     }\n \n ",
                "raw_url": "https://github.com/apache/directory-server/raw/c43b60334bef4dbf7fd1e535a3f187537fa7465d/core-api/src/main/java/org/apache/directory/server/core/interceptor/InterceptorException.java",
                "sha": "3115e36b7ef9dab5c1501ac40eab5b8b25de80c0",
                "status": "modified"
            },
            {
                "additions": 4,
                "blob_url": "https://github.com/apache/directory-server/blob/c43b60334bef4dbf7fd1e535a3f187537fa7465d/core-integ/src/main/java/org/apache/directory/server/core/integ/IntegrationUtils.java",
                "changes": 5,
                "contents_url": "https://api.github.com/repos/apache/directory-server/contents/core-integ/src/main/java/org/apache/directory/server/core/integ/IntegrationUtils.java?ref=c43b60334bef4dbf7fd1e535a3f187537fa7465d",
                "deletions": 1,
                "filename": "core-integ/src/main/java/org/apache/directory/server/core/integ/IntegrationUtils.java",
                "patch": "@@ -54,6 +54,7 @@\n import org.apache.directory.shared.ldap.name.DN;\n import org.apache.directory.shared.ldap.name.RDN;\n import org.apache.directory.shared.ldap.schema.registries.Schema;\n+import org.apache.directory.shared.ldap.util.StringTools;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n \n@@ -377,8 +378,10 @@ public static LdapConnection getConnectionAs( DirectoryService dirService, Strin\n     public static LdapConnection getConnectionAs( DirectoryService dirService, DN dn, String password ) throws Exception\n     {\n         Object connectionObj = LdapConnectionFactory.getCoreSessionConnection();\n-        ( ( LdapCoreSessionConnection ) connectionObj ).setSession( dirService.getSession( dn, password.getBytes() ) );\n         \n+        byte[] passwdBytes = password == null ? StringTools.EMPTY_BYTES : StringTools.getBytesUtf8( password );\n+        ( ( LdapCoreSessionConnection ) connectionObj ).setSession( dirService.getSession( dn, passwdBytes ) );\n+\n         return ( LdapConnection )connectionObj;\n     }\n ",
                "raw_url": "https://github.com/apache/directory-server/raw/c43b60334bef4dbf7fd1e535a3f187537fa7465d/core-integ/src/main/java/org/apache/directory/server/core/integ/IntegrationUtils.java",
                "sha": "aad26e1f86644d2da31aede1bd466ac3ca4511fd",
                "status": "modified"
            },
            {
                "additions": 80,
                "blob_url": "https://github.com/apache/directory-server/blob/c43b60334bef4dbf7fd1e535a3f187537fa7465d/core-integ/src/test/java/org/apache/directory/server/core/authn/SimpleAuthenticationIT.java",
                "changes": 111,
                "contents_url": "https://api.github.com/repos/apache/directory-server/contents/core-integ/src/test/java/org/apache/directory/server/core/authn/SimpleAuthenticationIT.java?ref=c43b60334bef4dbf7fd1e535a3f187537fa7465d",
                "deletions": 31,
                "filename": "core-integ/src/test/java/org/apache/directory/server/core/authn/SimpleAuthenticationIT.java",
                "patch": "@@ -23,9 +23,9 @@\n import static org.apache.directory.server.core.integ.IntegrationUtils.apply;\n import static org.apache.directory.server.core.integ.IntegrationUtils.getConnectionAs;\n import static org.apache.directory.server.core.integ.IntegrationUtils.getUserAddLdif;\n-import static org.junit.Assert.assertFalse;\n import static org.junit.Assert.assertNotNull;\n import static org.junit.Assert.assertTrue;\n+import static org.junit.Assert.fail;\n \n import org.apache.commons.lang.ArrayUtils;\n import org.apache.directory.ldap.client.api.LdapConnection;\n@@ -37,6 +37,7 @@\n import org.apache.directory.server.core.integ.IntegrationUtils;\n import org.apache.directory.shared.ldap.entry.Entry;\n import org.apache.directory.shared.ldap.entry.EntryAttribute;\n+import org.apache.directory.shared.ldap.exception.LdapException;\n import org.apache.directory.shared.ldap.name.DN;\n import org.apache.directory.shared.ldap.util.StringTools;\n import org.junit.After;\n@@ -208,11 +209,17 @@ public void test11InvalidateCredentialCache() throws Exception\n         // close and try with old password (should fail)\n         connection.close();\n \n-        connection.bind( userDn, \"test\" );\n-        assertFalse( connection.isAuthenticated() );\n-\n-        // close and try again now with new password (should fail)\n-        connection.close();\n+        try\n+        {\n+            connection.bind( userDn, \"test\" );\n+            fail();\n+        }\n+        catch ( LdapException le )\n+        {\n+            connection.close();\n+        }\n+\n+        // close and try again now with new password (should succeed)\n         connection.bind( userDn, \"newpwd\" );\n \n         entry = ( ( SearchResultEntry ) connection.lookup( userDn ) ).getEntry();\n@@ -259,11 +266,17 @@ public void testSHA() throws Exception\n         // close and try with old password (should fail)\n         connection.close();\n \n-        connection.bind( userDn, \"test\" );\n-        assertFalse( connection.isAuthenticated() );\n-        connection.close();\n+        try\n+        {\n+            connection.bind( userDn, \"test\" );\n+            fail();\n+        }\n+        catch ( LdapException le )\n+        {\n+            connection.close();\n+        }\n \n-        // try again now with new password (should be successfull)\n+        // try again now with new password (should be successful)\n         connection.bind( userDn, \"secret\" );\n         assertTrue( connection.isAuthenticated() );\n         entry = ( ( SearchResultEntry ) connection.lookup( userDn ) ).getEntry();\n@@ -301,11 +314,17 @@ public void testSSHA() throws Exception\n         // close and try with old password (should fail)\n         connection.close();\n \n-        connection.bind( userDn, \"test\" );\n-        assertFalse( connection.isAuthenticated() );\n-        connection.close();\n+        try\n+        {\n+            connection.bind( userDn, \"test\" );\n+            fail();\n+        }\n+        catch ( LdapException le )\n+        {\n+            connection.close();\n+        }\n \n-        // try again now with new password (should be successfull)\n+        // try again now with new password (should be successful)\n         connection.bind( userDn, \"secret\" );\n         entry = ( ( SearchResultEntry ) connection.lookup( userDn ) ).getEntry();\n         assertNotNull( entry );\n@@ -341,9 +360,15 @@ public void testSSHA4BytesSalt() throws Exception\n         // close and try with old password (should fail)\n         connection.close();\n \n-        connection.bind( userDn, \"test\" );\n-        assertFalse( connection.isAuthenticated() );\n-        connection.close();\n+        try\n+        {\n+            connection.bind( userDn, \"test\" );\n+            fail();\n+        }\n+        catch ( LdapException le )\n+        {\n+            connection.close();\n+        }\n \n         // try again now with new password (should be successful)\n         connection.bind( userDn, \"test123\" );\n@@ -381,11 +406,17 @@ public void testMD5() throws Exception\n         // close and try with old password (should fail)\n         connection.close();\n \n-        connection.bind( userDn, \"test\" );\n-        assertFalse( connection.isAuthenticated() );\n-        connection.close();\n+        try\n+        {\n+            connection.bind( userDn, \"test\" );\n+            fail();\n+        }\n+        catch ( LdapException le )\n+        {\n+            connection.close();\n+        }\n \n-        // try again now with new password (should be successfull)\n+        // try again now with new password (should be successful)\n         connection.bind( userDn, \"secret\" );\n         entry = ( ( SearchResultEntry ) connection.lookup( userDn ) ).getEntry();\n         assertNotNull( entry );\n@@ -422,9 +453,15 @@ public void testSMD5() throws Exception\n         // close and try with old password (should fail)\n         connection.close();\n \n-        connection.bind( userDn, \"test\" );\n-        assertFalse( connection.isAuthenticated() );\n-        connection.close();\n+        try\n+        {\n+            connection.bind( userDn, \"test\" );\n+            fail();\n+        }\n+        catch ( LdapException le )\n+        {\n+            connection.close();\n+        }\n \n         // try again now with new password (should be successful)\n         connection.bind( userDn, \"secret\" );\n@@ -462,11 +499,17 @@ public void testCRYPT() throws Exception\n         // close and try with old password (should fail)\n         connection.close();\n \n-        connection.bind( userDn, \"test\" );\n-        assertFalse( connection.isAuthenticated() );\n-        connection.close();\n+        try\n+        {\n+            connection.bind( userDn, \"test\" );\n+            fail();\n+        }\n+        catch ( LdapException le )\n+        {\n+            connection.close();\n+        }\n \n-        // try again now with new password (should be successfull)\n+        // try again now with new password (should be successful)\n         connection.bind( userDn, \"secret\" );\n         entry = ( ( SearchResultEntry ) connection.lookup( userDn ) ).getEntry();\n         assertNotNull( entry );\n@@ -501,8 +544,14 @@ public void testInvalidateCredentialCacheForUpdatingAnotherUsersPassword() throw\n         connection.modify( modReq );\n         connection.close();\n \n-        connection.bind( userDn, \"test\" );\n-        assertFalse( connection.isAuthenticated() );\n-        connection.close();\n+        try\n+        {\n+            connection.bind( userDn, \"test\" );\n+            fail();\n+        }\n+        catch ( LdapException le )\n+        {\n+            connection.close();\n+        }\n     }\n }",
                "raw_url": "https://github.com/apache/directory-server/raw/c43b60334bef4dbf7fd1e535a3f187537fa7465d/core-integ/src/test/java/org/apache/directory/server/core/authn/SimpleAuthenticationIT.java",
                "sha": "644b91d02570667079c6c706eefb0c97e622d732",
                "status": "modified"
            },
            {
                "additions": 45,
                "blob_url": "https://github.com/apache/directory-server/blob/c43b60334bef4dbf7fd1e535a3f187537fa7465d/core-integ/src/test/java/org/apache/directory/server/core/operations/bind/SimpleBindIT.java",
                "changes": 53,
                "contents_url": "https://api.github.com/repos/apache/directory-server/contents/core-integ/src/test/java/org/apache/directory/server/core/operations/bind/SimpleBindIT.java?ref=c43b60334bef4dbf7fd1e535a3f187537fa7465d",
                "deletions": 8,
                "filename": "core-integ/src/test/java/org/apache/directory/server/core/operations/bind/SimpleBindIT.java",
                "patch": "@@ -40,11 +40,14 @@\n import javax.naming.directory.SearchControls;\n import javax.naming.directory.SearchResult;\n \n+import org.apache.directory.ldap.client.api.LdapConnection;\n import org.apache.directory.server.core.DirectoryService;\n import org.apache.directory.server.core.integ.AbstractLdapTestUnit;\n import org.apache.directory.server.core.integ.FrameworkRunner;\n+import org.apache.directory.server.core.integ.IntegrationUtils;\n import org.apache.directory.server.core.jndi.CoreContextFactory;\n import org.apache.directory.shared.ldap.constants.JndiPropertyConstants;\n+import org.apache.directory.shared.ldap.exception.LdapUnwillingToPerformException;\n import org.apache.directory.shared.ldap.message.AliasDerefMode;\n import org.junit.Test;\n import org.junit.runner.RunWith;\n@@ -85,7 +88,7 @@\n      * @throws Exception on error\n      */\n     @Test\n-    public void testSimpleBindUserPassword()\n+    public void testSimpleBindAPrincipalAPassword()\n     {\n         // We will bind using JNDI\n         // Set up the environment for creating the initial context\n@@ -128,7 +131,7 @@ public void testSimpleBindUserPassword()\n      * @throws Exception on error\n      */\n     @Test\n-    public void testSimpleBindUserBadPassword()\n+    public void testSimpleBindAPrincipalBadPassword()\n     {\n         // We will bind using JNDI\n         // Set up the environment for creating the initial context\n@@ -167,7 +170,7 @@ public void testSimpleBindUserBadPassword()\n      * @throws Exception on error\n      */\n     @Test\n-    public void testSimpleBindBadUserPassword()\n+    public void testSimpleBindBadPrincipalAPassword()\n     {\n         // We will bind using JNDI\n         // Set up the environment for creating the initial context\n@@ -206,7 +209,7 @@ public void testSimpleBindBadUserPassword()\n      * @throws Exception on error\n      */\n     @Test\n-    public void testSimpleBindUnknowUserPassword()\n+    public void testSimpleBindUnknowPrincipalAPassword()\n     {\n         // We will bind using JNDI\n         // Set up the environment for creating the initial context\n@@ -247,7 +250,7 @@ public void testSimpleBindUnknowUserPassword()\n      * @throws Exception on error\n      */\n     @Test\n-    public void testSimpleBindNoUserNoPassword()\n+    public void testSimpleBindNoPrincipalNoPassword()\n     {\n         // We will bind using JNDI\n         // Set up the environment for creating the initial context\n@@ -258,7 +261,7 @@ public void testSimpleBindNoUserNoPassword()\n         // Bind on the rootDSE\n         env.put( Context.PROVIDER_URL, \"\" );\n \n-        // Authenticate as admin and password \"secret\"\n+        // Authenticate with no principal and no password : this is an anonymous bind\n         env.put( Context.SECURITY_AUTHENTICATION, \"simple\" );\n         env.put( Context.SECURITY_PRINCIPAL, \"\" );\n         env.put( Context.SECURITY_CREDENTIALS, \"\" );\n@@ -325,7 +328,7 @@ public void testSimpleBindNoUserNoPassword()\n      * @throws Exception on error\n      */\n     @Test\n-    public void testSimpleBindUserNoPassword()\n+    public void testSimpleBindAPrincipalNoPassword()\n     {\n         // We will bind using JNDI\n         // Set up the environment for creating the initial context\n@@ -357,13 +360,47 @@ public void testSimpleBindUserNoPassword()\n     }\n \n \n+    /**\n+     * covers the Unauthenticated case : we should get a UnwillingToPerform error.\n+     * \n+     * @throws Exception on error\n+     */\n+    @Test\n+    public void testSimpleBindAPrincipalNullPassword() throws Exception\n+    {\n+        try\n+        {\n+            LdapConnection connection = IntegrationUtils.getConnectionAs( service, \"uid=admin,ou=system\", null );\n+            \n+            // We should have failed wilh an LdapUnwillingToPerformException\n+            fail();\n+        }\n+        catch ( LdapUnwillingToPerformException lutpe )\n+        {\n+            // expected\n+        }\n+\n+        LdapConnection connection = IntegrationUtils.getConnectionAs( service, \"uid=admin,ou=system\", \"secret\" );\n+\n+        try\n+        {\n+            connection.bind( \"uid=admin,ou=system\", null );\n+            fail();\n+        }\n+        catch ( LdapUnwillingToPerformException lutpe )\n+        {\n+            // expected\n+        }\n+    }\n+\n+\n     /**\n      * not allowed by the server. We should get a invalidCredentials error.\n      * \n      * @throws Exception on error\n      */\n     @Test\n-    public void testSimpleBindNoUserPassword() throws Exception\n+    public void testSimpleBindNoPrincipalAPassword() throws Exception\n     {\n         // We will bind using JNDI\n         // Set up the environment for creating the initial context",
                "raw_url": "https://github.com/apache/directory-server/raw/c43b60334bef4dbf7fd1e535a3f187537fa7465d/core-integ/src/test/java/org/apache/directory/server/core/operations/bind/SimpleBindIT.java",
                "sha": "9722ad84bc24f8ac396d1a573b16efd40c4da82f",
                "status": "modified"
            },
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/directory-server/blob/c43b60334bef4dbf7fd1e535a3f187537fa7465d/core-mock/src/main/java/org/apache/directory/server/core/MockDirectoryService.java",
                "changes": 3,
                "contents_url": "https://api.github.com/repos/apache/directory-server/contents/core-mock/src/main/java/org/apache/directory/server/core/MockDirectoryService.java?ref=c43b60334bef4dbf7fd1e535a3f187537fa7465d",
                "deletions": 1,
                "filename": "core-mock/src/main/java/org/apache/directory/server/core/MockDirectoryService.java",
                "patch": "@@ -39,6 +39,7 @@\n import org.apache.directory.server.core.schema.SchemaService;\n import org.apache.directory.shared.ldap.csn.Csn;\n import org.apache.directory.shared.ldap.entry.Entry;\n+import org.apache.directory.shared.ldap.exception.LdapException;\n import org.apache.directory.shared.ldap.ldif.LdifEntry;\n import org.apache.directory.shared.ldap.name.DN;\n import org.apache.directory.shared.ldap.schema.SchemaManager;\n@@ -368,7 +369,7 @@ public CoreSession getSession( LdapPrincipal principal ) throws Exception\n     }\n \n \n-    public CoreSession getSession( DN principalDn, byte[] credentials ) throws Exception\n+    public CoreSession getSession( DN principalDn, byte[] credentials ) throws LdapException\n     {\n         return null;\n     }",
                "raw_url": "https://github.com/apache/directory-server/raw/c43b60334bef4dbf7fd1e535a3f187537fa7465d/core-mock/src/main/java/org/apache/directory/server/core/MockDirectoryService.java",
                "sha": "202a985b49b4517aee80b5897f8994b712f31857",
                "status": "modified"
            },
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/directory-server/blob/c43b60334bef4dbf7fd1e535a3f187537fa7465d/core-mock/src/main/java/org/apache/directory/server/core/MockOperationManager.java",
                "changes": 3,
                "contents_url": "https://api.github.com/repos/apache/directory-server/contents/core-mock/src/main/java/org/apache/directory/server/core/MockOperationManager.java?ref=c43b60334bef4dbf7fd1e535a3f187537fa7465d",
                "deletions": 1,
                "filename": "core-mock/src/main/java/org/apache/directory/server/core/MockOperationManager.java",
                "patch": "@@ -41,6 +41,7 @@\n import org.apache.directory.server.core.interceptor.context.RenameOperationContext;\n import org.apache.directory.server.core.interceptor.context.SearchOperationContext;\n import org.apache.directory.server.core.interceptor.context.UnbindOperationContext;\n+import org.apache.directory.shared.ldap.exception.LdapException;\n import org.apache.directory.shared.ldap.name.DN;\n \n public class MockOperationManager implements OperationManager\n@@ -57,7 +58,7 @@ public void add( AddOperationContext opContext ) throws Exception\n     }\n \n     \n-    public void bind( BindOperationContext opContext ) throws Exception\n+    public void bind( BindOperationContext opContext ) throws LdapException\n     {\n     }\n ",
                "raw_url": "https://github.com/apache/directory-server/raw/c43b60334bef4dbf7fd1e535a3f187537fa7465d/core-mock/src/main/java/org/apache/directory/server/core/MockOperationManager.java",
                "sha": "718b240f34a209b61c9165bef8e1f06cd3bc2dce",
                "status": "modified"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/directory-server/blob/c43b60334bef4dbf7fd1e535a3f187537fa7465d/core/src/main/java/org/apache/directory/server/core/DefaultDirectoryService.java",
                "changes": 3,
                "contents_url": "https://api.github.com/repos/apache/directory-server/contents/core/src/main/java/org/apache/directory/server/core/DefaultDirectoryService.java?ref=c43b60334bef4dbf7fd1e535a3f187537fa7465d",
                "deletions": 2,
                "filename": "core/src/main/java/org/apache/directory/server/core/DefaultDirectoryService.java",
                "patch": "@@ -660,8 +660,7 @@ public CoreSession getSession( LdapPrincipal principal )\n     }\n     \n     \n-    public CoreSession getSession( DN principalDn, byte[] credentials ) \n-        throws Exception\n+    public CoreSession getSession( DN principalDn, byte[] credentials ) throws LdapException\n     {\n         if ( ! started )\n         {",
                "raw_url": "https://github.com/apache/directory-server/raw/c43b60334bef4dbf7fd1e535a3f187537fa7465d/core/src/main/java/org/apache/directory/server/core/DefaultDirectoryService.java",
                "sha": "413513c3a68dd9f4855a35bbecf87f3724412818",
                "status": "modified"
            },
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/directory-server/blob/c43b60334bef4dbf7fd1e535a3f187537fa7465d/core/src/main/java/org/apache/directory/server/core/DefaultOperationManager.java",
                "changes": 3,
                "contents_url": "https://api.github.com/repos/apache/directory-server/contents/core/src/main/java/org/apache/directory/server/core/DefaultOperationManager.java?ref=c43b60334bef4dbf7fd1e535a3f187537fa7465d",
                "deletions": 1,
                "filename": "core/src/main/java/org/apache/directory/server/core/DefaultOperationManager.java",
                "patch": "@@ -53,6 +53,7 @@\n import org.apache.directory.shared.ldap.entry.EntryAttribute;\n import org.apache.directory.shared.ldap.entry.Value;\n import org.apache.directory.shared.ldap.exception.LdapAffectMultipleDsaException;\n+import org.apache.directory.shared.ldap.exception.LdapException;\n import org.apache.directory.shared.ldap.exception.LdapInvalidDnException;\n import org.apache.directory.shared.ldap.exception.LdapPartialResultException;\n import org.apache.directory.shared.ldap.exception.LdapReferralException;\n@@ -271,7 +272,7 @@ public void add( AddOperationContext opContext ) throws Exception\n     /**\n      * {@inheritDoc}\n      */\n-    public void bind( BindOperationContext opContext ) throws Exception\n+    public void bind( BindOperationContext opContext ) throws LdapException\n     {\n         LOG.debug( \">> BindOperation : {}\", opContext );\n ",
                "raw_url": "https://github.com/apache/directory-server/raw/c43b60334bef4dbf7fd1e535a3f187537fa7465d/core/src/main/java/org/apache/directory/server/core/DefaultOperationManager.java",
                "sha": "e1345de307140e06f1438a3c4f4190598212e229",
                "status": "modified"
            },
            {
                "additions": 4,
                "blob_url": "https://github.com/apache/directory-server/blob/c43b60334bef4dbf7fd1e535a3f187537fa7465d/core/src/test/java/org/apache/directory/server/core/authz/support/MaxImmSubFilterTest.java",
                "changes": 7,
                "contents_url": "https://api.github.com/repos/apache/directory-server/contents/core/src/test/java/org/apache/directory/server/core/authz/support/MaxImmSubFilterTest.java?ref=c43b60334bef4dbf7fd1e535a3f187537fa7465d",
                "deletions": 3,
                "filename": "core/src/test/java/org/apache/directory/server/core/authz/support/MaxImmSubFilterTest.java",
                "patch": "@@ -86,8 +86,9 @@\n import org.apache.directory.shared.ldap.cursor.Cursor;\n import org.apache.directory.shared.ldap.cursor.CursorIterator;\n import org.apache.directory.shared.ldap.entry.DefaultEntry;\n-import org.apache.directory.shared.ldap.entry.Modification;\n import org.apache.directory.shared.ldap.entry.Entry;\n+import org.apache.directory.shared.ldap.entry.Modification;\n+import org.apache.directory.shared.ldap.exception.LdapException;\n import org.apache.directory.shared.ldap.ldif.LdifEntry;\n import org.apache.directory.shared.ldap.message.control.Control;\n import org.apache.directory.shared.ldap.name.DN;\n@@ -796,7 +797,7 @@ public CoreSession getSession( LdapPrincipal principal ) throws Exception\n         }\n \n \n-        public CoreSession getSession( DN principalDn, byte[] credentials ) throws Exception\n+        public CoreSession getSession( DN principalDn, byte[] credentials ) throws LdapException\n         {\n             return null;\n         }\n@@ -930,7 +931,7 @@ public void add( AddOperationContext opContext ) throws Exception\n         }\n \n         \n-        public void bind( BindOperationContext opContext ) throws Exception\n+        public void bind( BindOperationContext opContext ) throws LdapException\n         {\n         }\n ",
                "raw_url": "https://github.com/apache/directory-server/raw/c43b60334bef4dbf7fd1e535a3f187537fa7465d/core/src/test/java/org/apache/directory/server/core/authz/support/MaxImmSubFilterTest.java",
                "sha": "b7cb203dbaf5db6bf5402342c659ecf997c10d73",
                "status": "modified"
            },
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/directory-server/blob/c43b60334bef4dbf7fd1e535a3f187537fa7465d/core/src/test/java/org/apache/directory/server/core/interceptor/InterceptorChainTest.java",
                "changes": 3,
                "contents_url": "https://api.github.com/repos/apache/directory-server/contents/core/src/test/java/org/apache/directory/server/core/interceptor/InterceptorChainTest.java?ref=c43b60334bef4dbf7fd1e535a3f187537fa7465d",
                "deletions": 1,
                "filename": "core/src/test/java/org/apache/directory/server/core/interceptor/InterceptorChainTest.java",
                "patch": "@@ -52,6 +52,7 @@\n import org.apache.directory.shared.ldap.constants.AuthenticationLevel;\n import org.apache.directory.shared.ldap.csn.Csn;\n import org.apache.directory.shared.ldap.entry.Entry;\n+import org.apache.directory.shared.ldap.exception.LdapException;\n import org.apache.directory.shared.ldap.ldif.LdifEntry;\n import org.apache.directory.shared.ldap.name.DN;\n import org.apache.directory.shared.ldap.schema.SchemaManager;\n@@ -602,7 +603,7 @@ public CoreSession getSession( LdapPrincipal principal ) throws Exception\n         }\n \n \n-        public CoreSession getSession( DN principalDn, byte[] credentials ) throws Exception\n+        public CoreSession getSession( DN principalDn, byte[] credentials ) throws LdapException\n         {\n             return null;\n         }",
                "raw_url": "https://github.com/apache/directory-server/raw/c43b60334bef4dbf7fd1e535a3f187537fa7465d/core/src/test/java/org/apache/directory/server/core/interceptor/InterceptorChainTest.java",
                "sha": "52b56d472010187c711f371a3ab78ce25de18dc4",
                "status": "modified"
            },
            {
                "additions": 5,
                "blob_url": "https://github.com/apache/directory-server/blob/c43b60334bef4dbf7fd1e535a3f187537fa7465d/server-integ/src/test/java/org/apache/directory/server/operations/bind/SimpleBindIT.java",
                "changes": 10,
                "contents_url": "https://api.github.com/repos/apache/directory-server/contents/server-integ/src/test/java/org/apache/directory/server/operations/bind/SimpleBindIT.java?ref=c43b60334bef4dbf7fd1e535a3f187537fa7465d",
                "deletions": 5,
                "filename": "server-integ/src/test/java/org/apache/directory/server/operations/bind/SimpleBindIT.java",
                "patch": "@@ -192,7 +192,7 @@ public void testSimpleBindBadPassword()\n      * try to connect using a user with an invalid DN: we should get a invalidDNSyntax error.\n      */\n     @Test\n-    public void testSimpleBindBadUserPassword()\n+    public void testSimpleBindBadPrincipalAPassword()\n     {\n         Hashtable<String, String> env = new Hashtable<String, String>();\n         env.put( Context.INITIAL_CONTEXT_FACTORY, \"com.sun.jndi.ldap.LdapCtxFactory\" );\n@@ -222,7 +222,7 @@ public void testSimpleBindBadUserPassword()\n      * try to connect using a unknown user: we should get a invalidCredentials error.\n      */\n     @Test\n-    public void testSimpleBindUnknowUserPassword()\n+    public void testSimpleBindUnknowPrincipalAPassword()\n     {\n         Hashtable<String, String> env = new Hashtable<String, String>();\n         env.put( Context.INITIAL_CONTEXT_FACTORY, \"com.sun.jndi.ldap.LdapCtxFactory\" );\n@@ -250,7 +250,7 @@ public void testSimpleBindUnknowUserPassword()\n      * covers the anonymous authentication : we should be able to read the rootDSE, but that's it\n      */\n     @Test\n-    public void testSimpleBindNoUserNoPassword()\n+    public void testSimpleBindNoPrincipalNoPassword()\n     {\n         boolean oldValue = ldapServer.getDirectoryService().isAllowAnonymousAccess();\n         ldapServer.getDirectoryService().setAllowAnonymousAccess( false );\n@@ -336,7 +336,7 @@ public void testSimpleBindNoUserNoPassword()\n      * covers the Unauthenticated case : we should get a UnwillingToPerform error.\n      */\n     @Test\n-    public void testSimpleBindUserNoPassword()\n+    public void testSimpleBindPrincipalNoPassword()\n     {\n         Hashtable<String, String> env = new Hashtable<String, String>();\n         env.put( Context.INITIAL_CONTEXT_FACTORY, \"com.sun.jndi.ldap.LdapCtxFactory\" );\n@@ -366,7 +366,7 @@ public void testSimpleBindUserNoPassword()\n      * not allowed by the server. We should get a invalidCredentials error.\n      */\n     @Test\n-    public void testSimpleBindNoUserPassword() throws Exception\n+    public void testSimpleBindNoUserAPassword() throws Exception\n     {\n         Hashtable<String, String> env = new Hashtable<String, String>();\n         env.put( Context.INITIAL_CONTEXT_FACTORY, \"com.sun.jndi.ldap.LdapCtxFactory\" );",
                "raw_url": "https://github.com/apache/directory-server/raw/c43b60334bef4dbf7fd1e535a3f187537fa7465d/server-integ/src/test/java/org/apache/directory/server/operations/bind/SimpleBindIT.java",
                "sha": "62f66f3a4c400abf88f1d31216c6d34505caccf1",
                "status": "modified"
            }
        ],
        "message": "o The DS getSession now throw an LdapException\no Eliminated a potential NPE when transmitting a null password\no The bind() method now throws an LdapException\no Fixed the InterceptorException\no Fixed tests as bind() throws an exception now\no Added tests where we send a null password, to show that DIRSERVER-1309 has been fixed\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/directory/apacheds/trunk@950291 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/directory-server/commit/3a4227a8cf53a441688639493cbc8ec26ddde69b",
        "repo": "directory-server",
        "unit_tests": [
            "LdapCoreSessionConnectionTest.java"
        ]
    },
    "directory-server_cd91e1c": {
        "bug_id": "directory-server_cd91e1c",
        "commit": "https://github.com/apache/directory-server/commit/cd91e1c00ccb9d5c09a63496625eab262c8cfc73",
        "file": [
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/directory-server/blob/cd91e1c00ccb9d5c09a63496625eab262c8cfc73/server-jndi/src/main/java/org/apache/directory/server/configuration/ApacheDS.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/directory-server/contents/server-jndi/src/main/java/org/apache/directory/server/configuration/ApacheDS.java?ref=cd91e1c00ccb9d5c09a63496625eab262c8cfc73",
                "deletions": 1,
                "filename": "server-jndi/src/main/java/org/apache/directory/server/configuration/ApacheDS.java",
                "patch": "@@ -353,7 +353,7 @@ private void loadLdif( File ldifFile ) throws Exception\n         \r\n         if ( fileEntry != null )\r\n         {\r\n-            String time = fileEntry.get( SchemaConstants.CREATE_TIMESTAMP_AT ).getString();\r\n+            String time = ((ClonedServerEntry)fileEntry).getOriginalEntry().get( SchemaConstants.CREATE_TIMESTAMP_AT ).getString();\r\n             LOG.info( \"Load of LDIF file '\" + getCanonical( ldifFile )\r\n                     + \"' skipped.  It has already been loaded on \" + time + \".\" );\r\n         }\r",
                "raw_url": "https://github.com/apache/directory-server/raw/cd91e1c00ccb9d5c09a63496625eab262c8cfc73/server-jndi/src/main/java/org/apache/directory/server/configuration/ApacheDS.java",
                "sha": "f88aacb326319dd33dd8f5ee7b0e6db5ffef2961",
                "status": "modified"
            }
        ],
        "message": "Fixed a NPE when trying to read an operational attribute, as we were using the clonedServerEntry, not the original entry.\n\ngit-svn-id: https://svn.apache.org/repos/asf/directory/apacheds/trunk@691317 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/directory-server/commit/fbb8eae5913dfcdb7229f2b797cd9a6c9f260f2a",
        "repo": "directory-server",
        "unit_tests": [
            "ApacheDSTest.java"
        ]
    },
    "directory-server_f042e15": {
        "bug_id": "directory-server_f042e15",
        "commit": "https://github.com/apache/directory-server/commit/f042e1564af6dcff28640fce18ff32b44c71482a",
        "file": [
            {
                "additions": 55,
                "blob_url": "https://github.com/apache/directory-server/blob/f042e1564af6dcff28640fce18ff32b44c71482a/core/src/main/java/org/apache/ldap/server/authz/AuthorizationService.java",
                "changes": 110,
                "contents_url": "https://api.github.com/repos/apache/directory-server/contents/core/src/main/java/org/apache/ldap/server/authz/AuthorizationService.java?ref=f042e1564af6dcff28640fce18ff32b44c71482a",
                "deletions": 55,
                "filename": "core/src/main/java/org/apache/ldap/server/authz/AuthorizationService.java",
                "patch": "@@ -35,7 +35,6 @@\n import org.apache.ldap.common.aci.ACIItem;\n import org.apache.ldap.common.exception.LdapNamingException;\n import org.apache.ldap.common.message.ResultCodeEnum;\n-import org.apache.ldap.common.util.NamespaceTools;\n \n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n@@ -524,7 +523,7 @@ private void checkLookupAccess( NextInterceptor next, LdapPrincipal user, Name d\n \n     public Attributes lookup( NextInterceptor next, Name dn, String[] attrIds ) throws NamingException\n     {\n-        Attributes entry = nexus.lookup( dn, attrIds );\n+        Attributes entry = nexus.lookup( dn );\n         LdapPrincipal user = ( ( ServerContext ) InvocationStack.getInstance().peek().getCaller() ).getPrincipal();\n \n         if ( user.getName().equalsIgnoreCase( DirectoryPartitionNexus.ADMIN_PRINCIPAL ) || ! enabled )\n@@ -579,32 +578,32 @@ public void modifyRn( NextInterceptor next, Name name, String newRn, boolean del\n         engine.checkPermission( next, userGroups, user.getJndiName(), user.getAuthenticationLevel(), name, null,\n                 null, Collections.singleton( MicroOperation.RENAME ), tuples, entry );\n \n-        if ( deleteOldRn )\n-        {\n-            String oldRn = name.get( name.size() - 1 );\n-            if ( NamespaceTools.hasCompositeComponents( oldRn ) )\n-            {\n-                String[] comps = NamespaceTools.getCompositeComponents( oldRn );\n-                for ( int ii = 0; ii < comps.length; ii++ )\n-                {\n-                    String id = NamespaceTools.getRdnAttribute( comps[ii] );\n-                    String value = NamespaceTools.getRdnValue( comps[ii] );\n-                    engine.checkPermission( next, userGroups, user.getJndiName(),\n-                            user.getAuthenticationLevel(), name, id,\n-                            value, Collections.singleton( MicroOperation.REMOVE ),\n-                            tuples, entry );\n-                }\n-            }\n-            else\n-            {\n-                String id = NamespaceTools.getRdnAttribute( oldRn );\n-                String value = NamespaceTools.getRdnValue( oldRn );\n-                engine.checkPermission( next, userGroups, user.getJndiName(),\n-                        user.getAuthenticationLevel(), name, id,\n-                        value, Collections.singleton( MicroOperation.REMOVE ),\n-                        tuples, entry );\n-            }\n-        }\n+//        if ( deleteOldRn )\n+//        {\n+//            String oldRn = name.get( name.size() - 1 );\n+//            if ( NamespaceTools.hasCompositeComponents( oldRn ) )\n+//            {\n+//                String[] comps = NamespaceTools.getCompositeComponents( oldRn );\n+//                for ( int ii = 0; ii < comps.length; ii++ )\n+//                {\n+//                    String id = NamespaceTools.getRdnAttribute( comps[ii] );\n+//                    String value = NamespaceTools.getRdnValue( comps[ii] );\n+//                    engine.checkPermission( next, userGroups, user.getJndiName(),\n+//                            user.getAuthenticationLevel(), name, id,\n+//                            value, Collections.singleton( MicroOperation.REMOVE ),\n+//                            tuples, entry );\n+//                }\n+//            }\n+//            else\n+//            {\n+//                String id = NamespaceTools.getRdnAttribute( oldRn );\n+//                String value = NamespaceTools.getRdnValue( oldRn );\n+//                engine.checkPermission( next, userGroups, user.getJndiName(),\n+//                        user.getAuthenticationLevel(), name, id,\n+//                        value, Collections.singleton( MicroOperation.REMOVE ),\n+//                        tuples, entry );\n+//            }\n+//        }\n \n         next.modifyRn( name, newRn, deleteOldRn );\n         tupleCache.subentryRenamed( name, newName );\n@@ -635,8 +634,9 @@ public void move( NextInterceptor next, Name oriChildName, Name newParentName, S\n         addSubentryAciTuples( tuples, oriChildName, entry );\n \n         Collection perms = new HashSet();\n-        perms.add( MicroOperation.RENAME );\n+        perms.add( MicroOperation.IMPORT );\n         perms.add( MicroOperation.EXPORT );\n+        perms.add( MicroOperation.RENAME );\n         engine.checkPermission( next, userGroups, user.getJndiName(), user.getAuthenticationLevel(),\n                 oriChildName, null, null, perms, tuples, entry );\n \n@@ -647,32 +647,32 @@ public void move( NextInterceptor next, Name oriChildName, Name newParentName, S\n         engine.checkPermission( next, userGroups, user.getJndiName(), user.getAuthenticationLevel(),\n                 oriChildName, null, null, Collections.singleton( MicroOperation.IMPORT ), tuples, entry );\n \n-        if ( deleteOldRn )\n-        {\n-            String oldRn = oriChildName.get( oriChildName.size() - 1 );\n-            if ( NamespaceTools.hasCompositeComponents( oldRn ) )\n-            {\n-                String[] comps = NamespaceTools.getCompositeComponents( oldRn );\n-                for ( int ii = 0; ii < comps.length; ii++ )\n-                {\n-                    String id = NamespaceTools.getRdnAttribute( comps[ii] );\n-                    String value = NamespaceTools.getRdnValue( comps[ii] );\n-                    engine.checkPermission( next, userGroups, user.getJndiName(),\n-                            user.getAuthenticationLevel(), oriChildName, id,\n-                            value, Collections.singleton( MicroOperation.REMOVE ),\n-                            tuples, entry );\n-                }\n-            }\n-            else\n-            {\n-                String id = NamespaceTools.getRdnAttribute( oldRn );\n-                String value = NamespaceTools.getRdnValue( oldRn );\n-                engine.checkPermission( next, userGroups, user.getJndiName(),\n-                        user.getAuthenticationLevel(), oriChildName, id,\n-                        value, Collections.singleton( MicroOperation.REMOVE ),\n-                        tuples, entry );\n-            }\n-        }\n+//        if ( deleteOldRn )\n+//        {\n+//            String oldRn = oriChildName.get( oriChildName.size() - 1 );\n+//            if ( NamespaceTools.hasCompositeComponents( oldRn ) )\n+//            {\n+//                String[] comps = NamespaceTools.getCompositeComponents( oldRn );\n+//                for ( int ii = 0; ii < comps.length; ii++ )\n+//                {\n+//                    String id = NamespaceTools.getRdnAttribute( comps[ii] );\n+//                    String value = NamespaceTools.getRdnValue( comps[ii] );\n+//                    engine.checkPermission( next, userGroups, user.getJndiName(),\n+//                            user.getAuthenticationLevel(), oriChildName, id,\n+//                            value, Collections.singleton( MicroOperation.REMOVE ),\n+//                            tuples, entry );\n+//                }\n+//            }\n+//            else\n+//            {\n+//                String id = NamespaceTools.getRdnAttribute( oldRn );\n+//                String value = NamespaceTools.getRdnValue( oldRn );\n+//                engine.checkPermission( next, userGroups, user.getJndiName(),\n+//                        user.getAuthenticationLevel(), oriChildName, id,\n+//                        value, Collections.singleton( MicroOperation.REMOVE ),\n+//                        tuples, entry );\n+//            }\n+//        }\n \n         next.move( oriChildName, newParentName, newRn, deleteOldRn );\n         tupleCache.subentryRenamed( oriChildName, newName );",
                "raw_url": "https://github.com/apache/directory-server/raw/f042e1564af6dcff28640fce18ff32b44c71482a/core/src/main/java/org/apache/ldap/server/authz/AuthorizationService.java",
                "sha": "e60115a8b31bf91b4d12d5220946ba79b1b60b05",
                "status": "modified"
            },
            {
                "additions": 22,
                "blob_url": "https://github.com/apache/directory-server/blob/f042e1564af6dcff28640fce18ff32b44c71482a/core/src/main/java/org/apache/ldap/server/authz/GroupCache.java",
                "changes": 23,
                "contents_url": "https://api.github.com/repos/apache/directory-server/contents/core/src/main/java/org/apache/ldap/server/authz/GroupCache.java?ref=f042e1564af6dcff28640fce18ff32b44c71482a",
                "deletions": 1,
                "filename": "core/src/main/java/org/apache/ldap/server/authz/GroupCache.java",
                "patch": "@@ -132,6 +132,21 @@ private Attribute getMemberAttribute( Attributes entry )\n     {\n         Attribute oc = entry.get( OC_ATTR );\n \n+        if ( oc == null )\n+        {\n+            if ( entry.get( MEMBER_ATTR ) != null )\n+            {\n+                return entry.get( MEMBER_ATTR );\n+            }\n+\n+            if ( entry.get( UNIQUEMEMBER_ATTR ) != null )\n+            {\n+                return entry.get( UNIQUEMEMBER_ATTR );\n+            }\n+\n+            return null;\n+        }\n+\n         if ( oc.contains( GROUPOFNAMES_OC ) )\n         {\n             return entry.get( MEMBER_ATTR );\n@@ -320,7 +335,7 @@ public void groupModified( Name name, ModificationItem[] mods, Attributes entry\n      */\n     public void groupModified( Name name, int modOp, Attributes mods, Attributes entry ) throws NamingException\n     {\n-        Attribute members = getMemberAttribute( entry );\n+        Attribute members = getMemberAttribute( mods );\n \n         if ( members == null )\n         {\n@@ -353,6 +368,12 @@ public Set getGroups( String member ) throws NamingException\n         {\n             String group = ( String ) list.next();\n             Set members = ( Set ) groups.get( group );\n+\n+            if ( members == null )\n+            {\n+                continue;\n+            }\n+\n             if ( members.contains( member ) )\n             {\n                 if ( memberGroups == null )",
                "raw_url": "https://github.com/apache/directory-server/raw/f042e1564af6dcff28640fce18ff32b44c71482a/core/src/main/java/org/apache/ldap/server/authz/GroupCache.java",
                "sha": "7279bf8f4717837c86b6828b1f7eec6464099b09",
                "status": "modified"
            },
            {
                "additions": 53,
                "blob_url": "https://github.com/apache/directory-server/blob/f042e1564af6dcff28640fce18ff32b44c71482a/core/src/main/java/org/apache/ldap/server/authz/OldAuthorizationService.java",
                "changes": 81,
                "contents_url": "https://api.github.com/repos/apache/directory-server/contents/core/src/main/java/org/apache/ldap/server/authz/OldAuthorizationService.java?ref=f042e1564af6dcff28640fce18ff32b44c71482a",
                "deletions": 28,
                "filename": "core/src/main/java/org/apache/ldap/server/authz/OldAuthorizationService.java",
                "patch": "@@ -76,6 +76,8 @@\n      * the name parser used by this service\n      */\n     private DnParser dnParser;\n+    private boolean enabled = true;\n+\n \n \n     /**\n@@ -90,6 +92,9 @@ public void init( DirectoryServiceConfiguration factoryCfg, InterceptorConfigura\n     {\n         AttributeTypeRegistry atr = factoryCfg.getGlobalRegistries().getAttributeTypeRegistry();\n         dnParser = new DnParser( new ConcreteNameComponentNormalizer( atr ) );\n+\n+        // disable this static module if basic access control mechanisms are enabled\n+        enabled = ! factoryCfg.getStartupConfiguration().isAccessControlEnabled();\n     }\n \n \n@@ -99,6 +104,12 @@ public void init( DirectoryServiceConfiguration factoryCfg, InterceptorConfigura\n \n     public void delete( NextInterceptor nextInterceptor, Name name ) throws NamingException\n     {\n+        if ( !enabled )\n+        {\n+            nextInterceptor.delete( name );\n+            return;\n+        }\n+\n         Name principalDn = getPrincipal().getJndiName();\n \n         if ( name.toString().equals( \"\" ) )\n@@ -162,7 +173,11 @@ public boolean hasEntry( NextInterceptor nextInterceptor, Name name ) throws Nam\n      */\n     public void modify( NextInterceptor nextInterceptor, Name name, int modOp, Attributes attrs ) throws NamingException\n     {\n-        protectModifyAlterations( name );\n+        if ( enabled )\n+        {\n+            protectModifyAlterations( name );\n+        }\n+\n         nextInterceptor.modify( name, modOp, attrs );\n     }\n \n@@ -175,7 +190,10 @@ public void modify( NextInterceptor nextInterceptor, Name name, int modOp, Attri\n      */\n     public void modify( NextInterceptor nextInterceptor, Name name, ModificationItem[] items ) throws NamingException\n     {\n-        protectModifyAlterations( name );\n+        if ( enabled )\n+        {\n+            protectModifyAlterations( name );\n+        }\n         nextInterceptor.modify( name, items );\n     }\n \n@@ -192,13 +210,6 @@ private void protectModifyAlterations( Name dn ) throws LdapNoPermissionExceptio\n \n         if ( !principalDn.equals( ADMIN_DN ) )\n         {\n-            if ( dn == ADMIN_DN || dn.equals( ADMIN_DN ) )\n-            {\n-                String msg = \"User \" + principalDn;\n-                msg += \" does not have permission to modify the admin account.\";\n-                throw new LdapNoPermissionException( msg );\n-            }\n-\n             if ( dn.size() > 2 && dn.startsWith( USER_BASE_DN ) )\n             {\n                 String msg = \"User \" + principalDn;\n@@ -232,14 +243,20 @@ private void protectModifyAlterations( Name dn ) throws LdapNoPermissionExceptio\n \n     public void modifyRn( NextInterceptor nextInterceptor, Name name, String newRn, boolean deleteOldRn ) throws NamingException\n     {\n-        protectDnAlterations( name );\n+        if ( enabled )\n+        {\n+            protectDnAlterations( name );\n+        }\n         nextInterceptor.modifyRn( name, newRn, deleteOldRn );\n     }\n \n \n     public void move( NextInterceptor nextInterceptor, Name oriChildName, Name newParentName ) throws NamingException\n     {\n-        protectDnAlterations( oriChildName );\n+        if ( enabled )\n+        {\n+            protectDnAlterations( oriChildName );\n+        }\n         nextInterceptor.move( oriChildName, newParentName );\n     }\n \n@@ -248,7 +265,10 @@ public void move( NextInterceptor nextInterceptor,\n             Name oriChildName, Name newParentName, String newRn,\n             boolean deleteOldRn ) throws NamingException\n     {\n-        protectDnAlterations( oriChildName );\n+        if ( enabled )\n+        {\n+            protectDnAlterations( oriChildName );\n+        }\n         nextInterceptor.move( oriChildName, newParentName, newRn, deleteOldRn );\n     }\n \n@@ -294,9 +314,9 @@ private void protectDnAlterations( Name dn ) throws LdapNoPermissionException\n     public Attributes lookup( NextInterceptor nextInterceptor, Name name ) throws NamingException\n     {\n         Attributes attributes = nextInterceptor.lookup( name );\n-        if ( attributes == null )\n+        if ( ! enabled || attributes == null )\n         {\n-            return null;\n+            return attributes;\n         }\n \n         protectLookUp( name );\n@@ -307,9 +327,9 @@ public Attributes lookup( NextInterceptor nextInterceptor, Name name ) throws Na\n     public Attributes lookup( NextInterceptor nextInterceptor, Name name, String[] attrIds ) throws NamingException\n     {\n         Attributes attributes = nextInterceptor.lookup( name, attrIds );\n-        if ( attributes == null )\n+        if ( ! enabled || attributes == null )\n         {\n-            return null;\n+            return attributes;\n         }\n \n         protectLookUp( name );\n@@ -375,31 +395,36 @@ public NamingEnumeration search( NextInterceptor nextInterceptor,\n             SearchControls searchCtls ) throws NamingException\n     {\n         NamingEnumeration e = nextInterceptor.search( base, env, filter, searchCtls );\n+        if ( !enabled )\n+        {\n+            return e;\n+        }\n         //if ( searchCtls.getReturningAttributes() != null )\n         //{\n         //    return null;\n         //}\n         \n-        LdapContext ctx =\n-            ( LdapContext ) InvocationStack.getInstance().peek().getCaller();\n+        LdapContext ctx = ( LdapContext ) InvocationStack.getInstance().peek().getCaller();\n         return new SearchResultFilteringEnumeration( e, searchCtls, ctx,\n-                new SearchResultFilter()\n+            new SearchResultFilter()\n+            {\n+                public boolean accept( LdapContext ctx, SearchResult result, SearchControls controls )\n+                        throws NamingException\n                 {\n-                    public boolean accept( LdapContext ctx, SearchResult result,\n-                                           SearchControls controls )\n-                            throws NamingException\n-                    {\n-                        return OldAuthorizationService.this.isSearchable( ctx, result );\n-                    }\n-                } );\n+                    return OldAuthorizationService.this.isSearchable( ctx, result );\n+                }\n+            });\n     }\n \n \n     public NamingEnumeration list( NextInterceptor nextInterceptor, Name base ) throws NamingException\n     {\n         NamingEnumeration e = nextInterceptor.list( base );\n-        LdapContext ctx =\n-            ( LdapContext ) InvocationStack.getInstance().peek().getCaller();\n+        if ( !enabled )\n+        {\n+            return e;\n+        }\n+        LdapContext ctx = ( LdapContext ) InvocationStack.getInstance().peek().getCaller();\n         \n         return new SearchResultFilteringEnumeration( e, null, ctx,\n             new SearchResultFilter()",
                "raw_url": "https://github.com/apache/directory-server/raw/f042e1564af6dcff28640fce18ff32b44c71482a/core/src/main/java/org/apache/ldap/server/authz/OldAuthorizationService.java",
                "sha": "748f69a4c05b87fcb10e0869210f636b4ec84e8f",
                "status": "modified"
            },
            {
                "additions": 15,
                "blob_url": "https://github.com/apache/directory-server/blob/f042e1564af6dcff28640fce18ff32b44c71482a/core/src/main/java/org/apache/ldap/server/authz/support/MicroOperationFilter.java",
                "changes": 19,
                "contents_url": "https://api.github.com/repos/apache/directory-server/contents/core/src/main/java/org/apache/ldap/server/authz/support/MicroOperationFilter.java?ref=f042e1564af6dcff28640fce18ff32b44c71482a",
                "deletions": 4,
                "filename": "core/src/main/java/org/apache/ldap/server/authz/support/MicroOperationFilter.java",
                "patch": "@@ -40,7 +40,11 @@\n  */\n public class MicroOperationFilter implements ACITupleFilter\n {\n-    public Collection filter( Collection tuples, OperationScope scope, NextInterceptor next, Collection userGroupNames, Name userName, Attributes userEntry, AuthenticationLevel authenticationLevel, Name entryName, String attrId, Object attrValue, Attributes entry, Collection microOperations ) throws NamingException\n+    public Collection filter( Collection tuples, OperationScope scope, NextInterceptor next,\n+                              Collection userGroupNames, Name userName, Attributes userEntry,\n+                              AuthenticationLevel authenticationLevel, Name entryName, String attrId,\n+                              Object attrValue, Attributes entry, Collection microOperations )\n+            throws NamingException\n     {\n         if( tuples.size() == 0 )\n         {\n@@ -50,13 +54,20 @@ public Collection filter( Collection tuples, OperationScope scope, NextIntercept\n         for( Iterator i = tuples.iterator(); i.hasNext(); )\n         {\n             ACITuple tuple = ( ACITuple ) i.next();\n-            boolean retain = false;\n+\n+            /*\n+             * The ACITuple must contain all the MicroOperations specified within the\n+             * microOperations argument.  Just matching a single microOperation is not\n+             * enough.  All must be matched to retain the ACITuple.\n+             */\n+\n+            boolean retain = true;\n             for( Iterator j = microOperations.iterator(); j.hasNext(); )\n             {\n                 MicroOperation microOp = ( MicroOperation ) j.next();\n-                if( tuple.getMicroOperations().contains( microOp ) )\n+                if( ! tuple.getMicroOperations().contains( microOp ) )\n                 {\n-                    retain = true;\n+                    retain = false;\n                     break;\n                 }\n             }",
                "raw_url": "https://github.com/apache/directory-server/raw/f042e1564af6dcff28640fce18ff32b44c71482a/core/src/main/java/org/apache/ldap/server/authz/support/MicroOperationFilter.java",
                "sha": "9fb182c4de748d779e02ddf72ea8dbb0070d3607",
                "status": "modified"
            },
            {
                "additions": 39,
                "blob_url": "https://github.com/apache/directory-server/blob/f042e1564af6dcff28640fce18ff32b44c71482a/core/src/test/org/apache/ldap/server/authz/AbstractAuthorizationTest.java",
                "changes": 40,
                "contents_url": "https://api.github.com/repos/apache/directory-server/contents/core/src/test/org/apache/ldap/server/authz/AbstractAuthorizationTest.java?ref=f042e1564af6dcff28640fce18ff32b44c71482a",
                "deletions": 1,
                "filename": "core/src/test/org/apache/ldap/server/authz/AbstractAuthorizationTest.java",
                "patch": "@@ -113,6 +113,20 @@ public Name createGroup( String cn, String firstMemberDn ) throws NamingExceptio\n     }\n \n \n+    /**\n+     * Deletes a user with a specific UID under ou=users,ou=system.\n+     *\n+     * @param uid the RDN value for the user to delete\n+     * @throws NamingException if there are problems removing the user\n+     * i.e. user does not exist\n+     */\n+    public void deleteUser( String uid ) throws NamingException\n+    {\n+        DirContext adminCtx = getContextAsAdmin();\n+        adminCtx.destroySubcontext( \"uid=\"+uid+\",ou=users\" );\n+    }\n+\n+\n     /**\n      * Creates a simple user as an inetOrgPerson under the ou=users,ou=system\n      * container.  The user's RDN attribute is the uid argument.  This argument\n@@ -159,6 +173,23 @@ public void addUserToGroup( String userUid, String groupCn ) throws NamingExcept\n     }\n \n \n+    /**\n+     * Removes a user from a group.\n+     *\n+     * @param userUid the RDN attribute value of the user to remove from the group\n+     * @param groupCn the RDN attribute value of the group to have user removed from\n+     * @throws NamingException if there are problems accessing the group\n+     */\n+    public void removeUserFromGroup( String userUid, String groupCn ) throws NamingException\n+    {\n+        DirContext adminCtx = getContextAsAdmin();\n+        Attributes changes = new BasicAttributes( \"uniqueMember\",\n+                \"uid=\"+userUid+\",ou=users,ou=system\", true );\n+        adminCtx.modifyAttributes( \"cn=\"+groupCn+\",ou=groups\",\n+                DirContext.REMOVE_ATTRIBUTE, changes );\n+    }\n+\n+\n     /**\n      * Gets the context at ou=system as a specific user.\n      *\n@@ -193,6 +224,13 @@ public DirContext getContextAs( Name user, String password, String dn ) throws N\n     }\n \n \n+    public void deleteAccessControlSubentry( String cn ) throws NamingException\n+    {\n+        DirContext adminCtx = getContextAsAdmin();\n+        adminCtx.destroySubcontext( \"cn=\" + cn );\n+    }\n+\n+\n     /**\n      * Creates an access control subentry under ou=system whose subtree covers\n      * the entire naming context.\n@@ -206,7 +244,7 @@ public void createAccessControlSubentry( String cn, String aciItem ) throws Nami\n         DirContext adminCtx = getContextAsAdmin();\n \n         // modify ou=system to be an AP for an A/C AA if it is not already\n-        Attributes ap = adminCtx.getAttributes( \"\" );\n+        Attributes ap = adminCtx.getAttributes( \"\", new String[] { \"administrativeRole\" } );\n         Attribute administrativeRole = ap.get( \"administrativeRole\" );\n         if ( administrativeRole == null || ! administrativeRole.contains( SubentryService.AC_AREA ) )\n         {",
                "raw_url": "https://github.com/apache/directory-server/raw/f042e1564af6dcff28640fce18ff32b44c71482a/core/src/test/org/apache/ldap/server/authz/AbstractAuthorizationTest.java",
                "sha": "a66fbaffc807e435db128f5e164b7adbccbdf327",
                "status": "modified"
            },
            {
                "additions": 544,
                "blob_url": "https://github.com/apache/directory-server/blob/f042e1564af6dcff28640fce18ff32b44c71482a/core/src/test/org/apache/ldap/server/authz/ModifyAuthorizationTest.java",
                "changes": 544,
                "contents_url": "https://api.github.com/repos/apache/directory-server/contents/core/src/test/org/apache/ldap/server/authz/ModifyAuthorizationTest.java?ref=f042e1564af6dcff28640fce18ff32b44c71482a",
                "deletions": 0,
                "filename": "core/src/test/org/apache/ldap/server/authz/ModifyAuthorizationTest.java",
                "patch": "@@ -0,0 +1,544 @@\n+/*\n+ *   Copyright 2004 The Apache Software Foundation\n+ *\n+ *   Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *   you may not use this file except in compliance with the License.\n+ *   You may obtain a copy of the License at\n+ *\n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *   Unless required by applicable law or agreed to in writing, software\n+ *   distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *   See the License for the specific language governing permissions and\n+ *   limitations under the License.\n+ *\n+ */\n+package org.apache.ldap.server.authz;\n+\n+\n+import org.apache.ldap.common.exception.LdapNoPermissionException;\n+import org.apache.ldap.common.name.LdapName;\n+\n+import javax.naming.NamingException;\n+import javax.naming.NamingEnumeration;\n+import javax.naming.Name;\n+import javax.naming.directory.*;\n+import java.util.List;\n+import java.util.ArrayList;\n+\n+\n+/**\n+ * Tests whether or not authorization around entry modify operations work properly.\n+ *\n+ * @author <a href=\"mailto:dev@directory.apache.org\">Apache Directory Project</a>\n+ * @version $Rev$\n+ */\n+public class ModifyAuthorizationTest extends AbstractAuthorizationTest\n+{\n+    /**\n+     * Checks if an attribute of a simple entry (an organizationalUnit) with an RDN\n+     * relative to ou=system can be modified by a specific non-admin user.  If a\n+     * permission exception is encountered it is caught and false is returned,\n+     * otherwise true is returned.  The entry is deleted after being created just in case\n+     * subsequent calls to this method are made in the same test case: the admin account\n+     * is used to add and delete this test entry so permissions to add and delete are not\n+     * required to test the modify operation by the user.\n+     *\n+     * @param uid the unique identifier for the user (presumed to exist under ou=users,ou=system)\n+     * @param password the password of this user\n+     * @param entryRdn the relative DN, relative to ou=system where entry is created\n+     * for modification test\n+     * @param mods the modifications to make to the entry\n+     * @return true if the modifications can be made by the user at the specified location,\n+     * false otherwise.\n+     * @throws javax.naming.NamingException if there are problems conducting the test\n+     */\n+    public boolean checkCanModifyAs( String uid, String password, String entryRdn, ModificationItem[] mods )\n+            throws NamingException\n+    {\n+        // create the entry with the telephoneNumber attribute to modify\n+        Attributes testEntry = new BasicAttributes( \"ou\", \"testou\", true );\n+        Attribute objectClass = new BasicAttribute( \"objectClass\" );\n+        testEntry.put( objectClass );\n+        objectClass.add( \"top\" );\n+        objectClass.add( \"organizationalUnit\" );\n+        testEntry.put( \"telephoneNumber\", \"867-5309\" );  // jenny don't change your number\n+\n+        DirContext adminContext = getContextAsAdmin();\n+\n+        try\n+        {\n+            // create the entry as admin\n+            LdapName userName = new LdapName( \"uid=\"+uid+\",ou=users,ou=system\" );\n+            adminContext.createSubcontext( entryRdn, testEntry );\n+\n+            // modify the entry as the user\n+            DirContext userContext = getContextAs( userName, password );\n+            userContext.modifyAttributes( entryRdn, mods );\n+\n+            return true;\n+        }\n+        catch ( LdapNoPermissionException e )\n+        {\n+            return false;\n+        }\n+        finally\n+        {\n+            // let's clean up\n+            adminContext.destroySubcontext( entryRdn );\n+        }\n+    }\n+\n+\n+    /**\n+     * Checks if an attribute of a simple entry (an organizationalUnit) with an RDN\n+     * relative to ou=system can be modified by a specific non-admin user.  If a\n+     * permission exception is encountered it is caught and false is returned,\n+     * otherwise true is returned.  The entry is deleted after being created just in case\n+     * subsequent calls to this method are made in the same test case: the admin account\n+     * is used to add and delete this test entry so permissions to add and delete are not\n+     * required to test the modify operation by the user.\n+     *\n+     * @param uid the unique identifier for the user (presumed to exist under ou=users,ou=system)\n+     * @param password the password of this user\n+     * @param entryRdn the relative DN, relative to ou=system where entry is created\n+     * for modification test\n+     * @param mods the attributes to modify in the entry\n+     * @param modOp the modification operation to use for all attributes\n+     * @return true if the modifications can be made by the user at the specified location,\n+     * false otherwise.\n+     * @throws javax.naming.NamingException if there are problems conducting the test\n+     */\n+    public boolean checkCanModifyAs( String uid, String password, String entryRdn, int modOp, Attributes mods )\n+            throws NamingException\n+    {\n+        // create the entry with the telephoneNumber attribute to modify\n+        Attributes testEntry = new BasicAttributes( \"ou\", \"testou\", true );\n+        Attribute objectClass = new BasicAttribute( \"objectClass\" );\n+        testEntry.put( objectClass );\n+        objectClass.add( \"top\" );\n+        objectClass.add( \"organizationalUnit\" );\n+        testEntry.put( \"telephoneNumber\", \"867-5309\" );  // jenny don't change your number\n+\n+        DirContext adminContext = getContextAsAdmin();\n+\n+        try\n+        {\n+            // create the entry as admin\n+            LdapName userName = new LdapName( \"uid=\"+uid+\",ou=users,ou=system\" );\n+            adminContext.createSubcontext( entryRdn, testEntry );\n+\n+            // modify the entry as the user\n+            DirContext userContext = getContextAs( userName, password );\n+            userContext.modifyAttributes( entryRdn, modOp, mods );\n+\n+            return true;\n+        }\n+        catch ( LdapNoPermissionException e )\n+        {\n+            return false;\n+        }\n+        finally\n+        {\n+            // let's clean up\n+            adminContext.destroySubcontext( entryRdn );\n+        }\n+    }\n+\n+\n+    /**\n+     * Checks if a user can modify an attribute of their own entry.  Users are\n+     * presumed to reside under ou=users,ou=system.  If a permission exception is\n+     * encountered it is caught and false is returned, otherwise true is returned.\n+     *\n+     * @param uid the unique identifier for the user (presumed to exist under ou=users,ou=system)\n+     * @param password the password of this user\n+     * @param mods the attributes to modify in the entry\n+     * @param modOp the modification operation to use for all attributes\n+     * @return true if the modifications can be made by the user his/her own entry,\n+     * false otherwise.\n+     * @throws javax.naming.NamingException if there are problems conducting the test\n+     */\n+    public boolean checkCanSelfModify( String uid, String password, int modOp, Attributes mods )\n+            throws NamingException\n+    {\n+        try\n+        {\n+            // modify the entry as the user\n+            Name userEntry = new LdapName( \"uid=\"+uid+\",ou=users,ou=system\" );\n+            DirContext userContext = getContextAs( userEntry, password, userEntry.toString() );\n+            userContext.modifyAttributes( \"\", modOp, mods );\n+            return true;\n+        }\n+        catch ( LdapNoPermissionException e )\n+        {\n+            return false;\n+        }\n+    }\n+\n+\n+    /**\n+     * Checks if a user can modify an attribute of their own entry.  Users are\n+     * presumed to reside under ou=users,ou=system.  If a permission exception is\n+     * encountered it is caught and false is returned, otherwise true is returned.\n+     *\n+     * @param uid the unique identifier for the user (presumed to exist under ou=users,ou=system)\n+     * @param password the password of this user\n+     * @param mods the attributes to modify in the entry\n+     * @return true if the modifications can be made by the user his/her own entry,\n+     * false otherwise.\n+     * @throws javax.naming.NamingException if there are problems conducting the test\n+     */\n+    public boolean checkCanSelfModify( String uid, String password, ModificationItem[] mods )\n+            throws NamingException\n+    {\n+        try\n+        {\n+            // modify the entry as the user\n+            Name userEntry = new LdapName( \"uid=\"+uid+\",ou=users,ou=system\" );\n+            DirContext userContext = getContextAs( userEntry, password, userEntry.toString() );\n+            userContext.modifyAttributes( \"\", mods );\n+            return true;\n+        }\n+        catch ( LdapNoPermissionException e )\n+        {\n+            return false;\n+        }\n+    }\n+\n+\n+    /**\n+     * Converts a set of attributes and a modification operation type into a MoficationItem array.\n+     *\n+     * @param modOp the modification operation to perform\n+     * @param changes the modifications to the attribute\n+     * @return the array of modification items represting the changes\n+     * @throws NamingException if there are problems accessing attributes\n+     */\n+    private ModificationItem[] toItems( int modOp, Attributes changes ) throws NamingException\n+    {\n+        List mods = new ArrayList();\n+        NamingEnumeration list = changes.getAll();\n+        while ( list.hasMore() )\n+        {\n+            Attribute attr = ( Attribute ) list.next();\n+            mods.add( new ModificationItem( modOp, attr ) );\n+        }\n+        ModificationItem[] modArray = new ModificationItem[mods.size()];\n+        return ( ModificationItem[] ) mods.toArray( modArray );\n+    }\n+\n+\n+    public void testSelfModification() throws NamingException\n+    {\n+        // ----------------------------------------------------------------------------------\n+        // Modify with Attribute Addition\n+        // ----------------------------------------------------------------------------------\n+\n+        // create the non-admin user\n+        createUser( \"billyd\", \"billyd\" );\n+\n+        // create the password modification\n+        ModificationItem[] mods = toItems( DirContext.REPLACE_ATTRIBUTE,\n+                new BasicAttributes( \"userPassword\", \"williams\", true ) );\n+\n+        // try a modify operation which should fail without any ACI\n+        assertFalse( checkCanSelfModify( \"billyd\", \"billyd\", mods ) );\n+\n+        // Gives grantModify, and grantRead perm to all users in the Administrators group for\n+        // entries and all attribute types and values\n+        createAccessControlSubentry( \"selfModifyUserPassword\",\n+                \"{ \" +\n+                \"identificationTag \\\"addAci\\\", \" +\n+                \"precedence 14, \" +\n+                \"authenticationLevel none, \" +\n+                \"itemOrUserFirst userFirst: { \" +\n+                \"userClasses { thisEntry }, \" +\n+                \"userPermissions { \" +\n+                        \"{ protectedItems {entry}, grantsAndDenials { grantModify, grantBrowse, grantRead } }, \" +\n+                        \"{ protectedItems {allAttributeValues {userPassword}}, grantsAndDenials { grantAdd, grantRemove } } \" +\n+                        \"} } }\" );\n+\n+        // try a modify operation which should succeed with ACI\n+        assertTrue( checkCanSelfModify( \"billyd\", \"billyd\", mods ) );\n+        deleteAccessControlSubentry( \"selfModifyUserPassword\" );\n+    }\n+\n+\n+    /**\n+     * Checks to make sure group membership based userClass works for modify operations.\n+     *\n+     * @throws javax.naming.NamingException if the test encounters an error\n+     */\n+    public void testGrantModifyByAdministrators() throws NamingException\n+    {\n+        // ----------------------------------------------------------------------------------\n+        // Modify with Attribute Addition\n+        // ----------------------------------------------------------------------------------\n+\n+        // create the add modifications\n+        ModificationItem[] mods = toItems( DirContext.ADD_ATTRIBUTE,\n+                new BasicAttributes( \"registeredAddress\", \"100 Park Ave.\", true ) );\n+\n+        // create the non-admin user\n+        createUser( \"billyd\", \"billyd\" );\n+\n+        // try a modify operation which should fail without any ACI\n+        assertFalse( checkCanModifyAs( \"billyd\", \"billyd\", \"ou=testou\", mods ) );\n+\n+        // Gives grantModify, and grantRead perm to all users in the Administrators group for\n+        // entries and all attribute types and values\n+        createAccessControlSubentry( \"administratorModifyAdd\",\n+                \"{ \" +\n+                \"identificationTag \\\"addAci\\\", \" +\n+                \"precedence 14, \" +\n+                \"authenticationLevel none, \" +\n+                \"itemOrUserFirst userFirst: { \" +\n+                \"userClasses { userGroup { \\\"cn=Administrators,ou=groups,ou=system\\\" } }, \" +\n+                \"userPermissions { \" +\n+                        \"{ protectedItems {entry}, grantsAndDenials { grantModify, grantBrowse } }, \" +\n+                        \"{ protectedItems {allAttributeValues {registeredAddress}}, grantsAndDenials { grantAdd } } \" +\n+                        \"} } }\" );\n+\n+        // see if we can now add that test entry which we could not before\n+        // add op should still fail since billd is not in the admin group\n+        assertFalse( checkCanModifyAs( \"billyd\", \"billyd\", \"ou=testou\", mods ) );\n+\n+        // now add billyd to the Administrator group and try again\n+        addUserToGroup( \"billyd\", \"Administrators\" );\n+\n+        // try a modify operation which should succeed with ACI and group membership change\n+        assertTrue( checkCanModifyAs( \"billyd\", \"billyd\", \"ou=testou\", mods ) );\n+        deleteAccessControlSubentry( \"administratorModifyAdd\" );\n+\n+        // ----------------------------------------------------------------------------------\n+        // Modify with Attribute Removal\n+        // ----------------------------------------------------------------------------------\n+\n+        // now let's test to see if we can perform a modify with a delete op\n+        mods = toItems( DirContext.REMOVE_ATTRIBUTE,\n+                new BasicAttributes( \"telephoneNumber\", \"867-5309\", true ) );\n+\n+        // make sure we cannot remove the telephone number from the test entry\n+        assertFalse( checkCanModifyAs( \"billyd\", \"billyd\", \"ou=testou\", mods ) );\n+\n+        // Gives grantModify, and grantRead perm to all users in the Administrators group for\n+        // entries and all attribute types and values\n+        createAccessControlSubentry( \"administratorModifyRemove\", \"{ \" +\n+                \"identificationTag \\\"addAci\\\", \" +\n+                \"precedence 14, \" +\n+                \"authenticationLevel none, \" +\n+                \"itemOrUserFirst userFirst: { \" +\n+                \"userClasses { userGroup { \\\"cn=Administrators,ou=groups,ou=system\\\" } }, \" +\n+                \"userPermissions { \" +\n+                        \"{ protectedItems {entry}, grantsAndDenials { grantModify, grantBrowse } }, \" +\n+                        \"{ protectedItems {allAttributeValues {telephoneNumber}}, grantsAndDenials { grantRemove } } \" +\n+                        \"} } }\" );\n+\n+        // try a modify operation which should succeed with ACI and group membership change\n+        assertTrue( checkCanModifyAs( \"billyd\", \"billyd\", \"ou=testou\", mods ) );\n+        deleteAccessControlSubentry( \"administratorModifyRemove\" );\n+\n+        // ----------------------------------------------------------------------------------\n+        // Modify with Attribute Replace (requires both grantRemove and grantAdd on attrs)\n+        // ----------------------------------------------------------------------------------\n+\n+        // now let's test to see if we can perform a modify with a delete op\n+        mods = toItems( DirContext.REPLACE_ATTRIBUTE,\n+                new BasicAttributes( \"telephoneNumber\", \"867-5309\", true ) );\n+\n+        // make sure we cannot remove the telephone number from the test entry\n+        assertFalse( checkCanModifyAs( \"billyd\", \"billyd\", \"ou=testou\", mods ) );\n+\n+        // Gives grantModify, and grantRead perm to all users in the Administrators group for\n+        // entries and all attribute types and values\n+        createAccessControlSubentry( \"administratorModifyReplace\", \"{ \" +\n+                \"identificationTag \\\"addAci\\\", \" +\n+                \"precedence 14, \" +\n+                \"authenticationLevel none, \" +\n+                \"itemOrUserFirst userFirst: { \" +\n+                \"userClasses { userGroup { \\\"cn=Administrators,ou=groups,ou=system\\\" } }, \" +\n+                \"userPermissions { \" +\n+                        \"{ protectedItems {entry}, grantsAndDenials { grantModify, grantBrowse } }, \" +\n+                        \"{ protectedItems {allAttributeValues {telephoneNumber}}, grantsAndDenials { grantAdd, grantRemove } } \" +\n+                        \"} } }\" );\n+\n+        // try a modify operation which should succeed with ACI and group membership change\n+        assertTrue( checkCanModifyAs( \"billyd\", \"billyd\", \"ou=testou\", mods ) );\n+        deleteAccessControlSubentry( \"administratorModifyReplace\" );\n+\n+        /* =================================================================================\n+         *              DO IT ALL OVER AGAIN BUT USE THE OTHER MODIFY METHOD\n+         * ================================================================================= */\n+\n+        // ----------------------------------------------------------------------------------\n+        // Modify with Attribute Addition\n+        // ----------------------------------------------------------------------------------\n+\n+        // create the add modifications\n+        Attributes changes = new BasicAttributes( \"registeredAddress\", \"100 Park Ave.\", true );\n+\n+        // try a modify operation which should fail without any ACI\n+        assertFalse( checkCanModifyAs( \"billyd\", \"billyd\", \"ou=testou\", DirContext.ADD_ATTRIBUTE, changes ) );\n+\n+        // Gives grantModify, and grantRead perm to all users in the Administrators group for\n+        // entries and all attribute types and values\n+        createAccessControlSubentry( \"administratorModifyAdd\", \"{ \" +\n+                \"identificationTag \\\"addAci\\\", \" +\n+                \"precedence 14, \" +\n+                \"authenticationLevel none, \" +\n+                \"itemOrUserFirst userFirst: { \" +\n+                \"userClasses { userGroup { \\\"cn=Administrators,ou=groups,ou=system\\\" } }, \" +\n+                \"userPermissions { \" +\n+                        \"{ protectedItems {entry}, grantsAndDenials { grantModify, grantBrowse } }, \" +\n+                        \"{ protectedItems {allAttributeValues {registeredAddress}}, grantsAndDenials { grantAdd } } \" +\n+                        \"} } }\" );\n+\n+        // try a modify operation which should succeed with ACI and group membership change\n+        assertTrue( checkCanModifyAs( \"billyd\", \"billyd\", \"ou=testou\", DirContext.ADD_ATTRIBUTE, changes ) );\n+        deleteAccessControlSubentry( \"administratorModifyAdd\" );\n+\n+        // ----------------------------------------------------------------------------------\n+        // Modify with Attribute Removal\n+        // ----------------------------------------------------------------------------------\n+\n+        // now let's test to see if we can perform a modify with a delete op\n+        changes = new BasicAttributes( \"telephoneNumber\", \"867-5309\", true );\n+\n+        // make sure we cannot remove the telephone number from the test entry\n+        assertFalse( checkCanModifyAs( \"billyd\", \"billyd\", \"ou=testou\", DirContext.REMOVE_ATTRIBUTE, changes ) );\n+\n+        // Gives grantModify, and grantRead perm to all users in the Administrators group for\n+        // entries and all attribute types and values\n+        createAccessControlSubentry( \"administratorModifyRemove\", \"{ \" +\n+                \"identificationTag \\\"addAci\\\", \" +\n+                \"precedence 14, \" +\n+                \"authenticationLevel none, \" +\n+                \"itemOrUserFirst userFirst: { \" +\n+                \"userClasses { userGroup { \\\"cn=Administrators,ou=groups,ou=system\\\" } }, \" +\n+                \"userPermissions { \" +\n+                        \"{ protectedItems {entry}, grantsAndDenials { grantModify, grantBrowse } }, \" +\n+                        \"{ protectedItems {allAttributeValues {telephoneNumber}}, grantsAndDenials { grantRemove } } \" +\n+                        \"} } }\" );\n+\n+        // try a modify operation which should succeed with ACI and group membership change\n+        assertTrue( checkCanModifyAs( \"billyd\", \"billyd\", \"ou=testou\", DirContext.REMOVE_ATTRIBUTE, changes ) );\n+        deleteAccessControlSubentry( \"administratorModifyRemove\" );\n+\n+        // ----------------------------------------------------------------------------------\n+        // Modify with Attribute Replace (requires both grantRemove and grantAdd on attrs)\n+        // ----------------------------------------------------------------------------------\n+\n+        // now let's test to see if we can perform a modify with a delete op\n+        changes = new BasicAttributes( \"telephoneNumber\", \"867-5309\", true );\n+\n+        // make sure we cannot remove the telephone number from the test entry\n+        assertFalse( checkCanModifyAs( \"billyd\", \"billyd\", \"ou=testou\", DirContext.REPLACE_ATTRIBUTE, changes ) );\n+\n+        // Gives grantModify, and grantRead perm to all users in the Administrators group for\n+        // entries and all attribute types and values\n+        createAccessControlSubentry( \"administratorModifyReplace\", \"{ \" +\n+                \"identificationTag \\\"addAci\\\", \" +\n+                \"precedence 14, \" +\n+                \"authenticationLevel none, \" +\n+                \"itemOrUserFirst userFirst: { \" +\n+                \"userClasses { userGroup { \\\"cn=Administrators,ou=groups,ou=system\\\" } }, \" +\n+                \"userPermissions { \" +\n+                        \"{ protectedItems {entry}, grantsAndDenials { grantModify, grantBrowse } }, \" +\n+                        \"{ protectedItems {allAttributeValues {telephoneNumber}}, grantsAndDenials { grantAdd, grantRemove } } \" +\n+                        \"} } }\" );\n+\n+        // try a modify operation which should succeed with ACI and group membership change\n+        assertTrue( checkCanModifyAs( \"billyd\", \"billyd\", \"ou=testou\", DirContext.REPLACE_ATTRIBUTE, changes ) );\n+        deleteAccessControlSubentry( \"administratorModifyReplace\" );\n+    }\n+\n+\n+//    /**\n+//     * Checks to make sure name based userClass works for modify operations.\n+//     *\n+//     * @throws javax.naming.NamingException if the test encounters an error\n+//     */\n+//    public void testGrantModifyByName() throws NamingException\n+//    {\n+//        // create the non-admin user\n+//        createUser( \"billyd\", \"billyd\" );\n+//\n+//        // try an modify operation which should fail without any ACI\n+//        assertFalse( checkCanModifyAs( \"billyd\", \"billyd\", \"ou=testou\", \"867-5309\" ) );\n+//\n+//        // now add a subentry that enables user billyd to modify an entry below ou=system\n+//        createAccessControlSubentry( \"billydAdd\", \"{ \" +\n+//                \"identificationTag \\\"addAci\\\", \" +\n+//                \"precedence 14, \" +\n+//                \"authenticationLevel none, \" +\n+//                \"itemOrUserFirst userFirst: { \" +\n+//                \"userClasses { name { \\\"uid=billyd,ou=users,ou=system\\\" } }, \" +\n+//                \"userPermissions { { \" +\n+//                \"protectedItems {entry, allUserAttributeTypesAndValues}, \" +\n+//                \"grantsAndDenials { grantModify, grantRead, grantBrowse } } } } }\" );\n+//\n+//        // should work now that billyd is authorized by name\n+//        assertTrue( checkCanModifyAs( \"billyd\", \"billyd\", \"ou=testou\", \"867-5309\" ) );\n+//    }\n+//\n+//\n+//    /**\n+//     * Checks to make sure subtree based userClass works for modify operations.\n+//     *\n+//     * @throws javax.naming.NamingException if the test encounters an error\n+//     */\n+//    public void testGrantModifyBySubtree() throws NamingException\n+//    {\n+//        // create the non-admin user\n+//        createUser( \"billyd\", \"billyd\" );\n+//\n+//        // try a modify operation which should fail without any ACI\n+//        assertFalse( checkCanModifyAs( \"billyd\", \"billyd\", \"ou=testou\", \"867-5309\" ) );\n+//\n+//        // now add a subentry that enables user billyd to modify an entry below ou=system\n+//        createAccessControlSubentry( \"billyAddBySubtree\", \"{ \" +\n+//                \"identificationTag \\\"addAci\\\", \" +\n+//                \"precedence 14, \" +\n+//                \"authenticationLevel none, \" +\n+//                \"itemOrUserFirst userFirst: { \" +\n+//                \"userClasses { subtree { { base \\\"ou=users,ou=system\\\" } } }, \" +\n+//                \"userPermissions { { \" +\n+//                \"protectedItems {entry, allUserAttributeTypesAndValues}, \" +\n+//                \"grantsAndDenials { grantModify, grantRead, grantBrowse } } } } }\" );\n+//\n+//        // should work now that billyd is authorized by the subtree userClass\n+//        assertTrue( checkCanModifyAs( \"billyd\", \"billyd\", \"ou=testou\", \"867-5309\" ) );\n+//    }\n+//\n+//\n+//    /**\n+//     * Checks to make sure <b>allUsers</b> userClass works for modify operations.\n+//     *\n+//     * @throws javax.naming.NamingException if the test encounters an error\n+//     */\n+//    public void testGrantModifyAllUsers() throws NamingException\n+//    {\n+//        // create the non-admin user\n+//        createUser( \"billyd\", \"billyd\" );\n+//\n+//        // try an add operation which should fail without any ACI\n+//        assertFalse( checkCanModifyAs( \"billyd\", \"billyd\", \"ou=testou\", \"867-5309\" ) );\n+//\n+//        // now add a subentry that enables anyone to add an entry below ou=system\n+//        createAccessControlSubentry( \"anybodyAdd\", \"{ \" +\n+//                \"identificationTag \\\"addAci\\\", \" +\n+//                \"precedence 14, \" +\n+//                \"authenticationLevel none, \" +\n+//                \"itemOrUserFirst userFirst: { \" +\n+//                \"userClasses { allUsers }, \" +\n+//                \"userPermissions { { \" +\n+//                \"protectedItems {entry, allUserAttributeTypesAndValues}, \" +\n+//                \"grantsAndDenials { grantModify, grantRead, grantBrowse } } } } }\" );\n+//\n+//        // see if we can now modify that test entry's number which we could not before\n+//        // should work with billyd now that all users are authorized\n+//        assertTrue( checkCanModifyAs( \"billyd\", \"billyd\", \"ou=testou\", \"867-5309\" ) );\n+//    }\n+}",
                "raw_url": "https://github.com/apache/directory-server/raw/f042e1564af6dcff28640fce18ff32b44c71482a/core/src/test/org/apache/ldap/server/authz/ModifyAuthorizationTest.java",
                "sha": "3aa3e232d3241d259b1db00b05ec96e9bf865aa2",
                "status": "added"
            },
            {
                "additions": 482,
                "blob_url": "https://github.com/apache/directory-server/blob/f042e1564af6dcff28640fce18ff32b44c71482a/core/src/test/org/apache/ldap/server/authz/MoveRenameAuthorizationTest.java",
                "changes": 482,
                "contents_url": "https://api.github.com/repos/apache/directory-server/contents/core/src/test/org/apache/ldap/server/authz/MoveRenameAuthorizationTest.java?ref=f042e1564af6dcff28640fce18ff32b44c71482a",
                "deletions": 0,
                "filename": "core/src/test/org/apache/ldap/server/authz/MoveRenameAuthorizationTest.java",
                "patch": "@@ -0,0 +1,482 @@\n+/*\n+ *   Copyright 2004 The Apache Software Foundation\n+ *\n+ *   Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *   you may not use this file except in compliance with the License.\n+ *   You may obtain a copy of the License at\n+ *\n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *   Unless required by applicable law or agreed to in writing, software\n+ *   distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *   See the License for the specific language governing permissions and\n+ *   limitations under the License.\n+ *\n+ */\n+package org.apache.ldap.server.authz;\n+\n+\n+import org.apache.ldap.common.exception.LdapNoPermissionException;\n+import org.apache.ldap.common.name.LdapName;\n+\n+import javax.naming.NamingException;\n+import javax.naming.directory.*;\n+\n+\n+/**\n+ * Tests whether or not authorization around entry renames and moves work properly.\n+ *\n+ * @author <a href=\"mailto:dev@directory.apache.org\">Apache Directory Project</a>\n+ * @version $Rev$\n+ */\n+public class MoveRenameAuthorizationTest extends AbstractAuthorizationTest\n+{\n+    /**\n+     * Checks if a simple entry (organizationalUnit) can be renamed at an RDN relative\n+     * to ou=system by a specific non-admin user.  If a permission exception\n+     * is encountered it is caught and false is returned, otherwise true is returned\n+     * when the entry is created.  The entry is deleted after being created just in case\n+     * subsequent calls to this method do not fail: the admin account is used to delete\n+     * this test entry so permissions to delete are not required to delete it by the user.\n+     *\n+     * @param uid the unique identifier for the user (presumed to exist under ou=users,ou=system)\n+     * @param password the password of this user\n+     * @param entryRdn the relative DN, relative to ou=system where entry renames are tested\n+     * @param newRdn the new RDN for the entry under ou=system\n+     * @return true if the entry can be renamed by the user at the specified location, false otherwise\n+     * @throws javax.naming.NamingException if there are problems conducting the test\n+     */\n+    public boolean checkCanRenameAs( String uid, String password, String entryRdn, String newRdn )\n+            throws NamingException\n+    {\n+        Attributes testEntry = new BasicAttributes( \"ou\", \"testou\", true );\n+        Attribute objectClass = new BasicAttribute( \"objectClass\" );\n+        testEntry.put( objectClass );\n+        objectClass.add( \"top\" );\n+        objectClass.add( \"organizationalUnit\" );\n+\n+        DirContext adminContext = getContextAsAdmin();\n+        try\n+        {\n+            // create the new entry as the admin user\n+            adminContext.createSubcontext( entryRdn, testEntry );\n+\n+            LdapName userName = new LdapName( \"uid=\"+uid+\",ou=users,ou=system\" );\n+            DirContext userContext = getContextAs( userName, password );\n+            userContext.rename( entryRdn, newRdn );\n+\n+            // delete the renamed context as the admin user\n+            adminContext.destroySubcontext( newRdn );\n+            return true;\n+        }\n+        catch ( LdapNoPermissionException e )\n+        {\n+            // delete the original context as the admin user since rename\n+            // of newly created test entry did not succeed\n+            adminContext.destroySubcontext( entryRdn );\n+            return false;\n+        }\n+    }\n+\n+\n+    /**\n+     * Checks to make sure group membership based userClass works for renames,\n+     * moves and moves with renames.\n+     *\n+     * @throws javax.naming.NamingException if the test encounters an error\n+     */\n+    public void testGrantByAdministrators() throws NamingException\n+    {\n+        // ----------------------------------------------------------------------------\n+        // Test simple RDN change: NO SUBTREE MOVEMENT!\n+        // ----------------------------------------------------------------------------\n+\n+        // create the non-admin user\n+        createUser( \"billyd\", \"billyd\" );\n+\n+        // try the rename operation which should fail without any ACI\n+        assertFalse( checkCanRenameAs( \"billyd\", \"billyd\", \"ou=testou\", \"ou=newname\" ) );\n+\n+        // Gives grantRename perm to all users in the Administrators group for entries\n+        createAccessControlSubentry( \"grantRenameByAdmin\", \"{ \" +\n+                \"identificationTag \\\"addAci\\\", \" +\n+                \"precedence 14, \" +\n+                \"authenticationLevel none, \" +\n+                \"itemOrUserFirst userFirst: { \" +\n+                \"userClasses { userGroup { \\\"cn=Administrators,ou=groups,ou=system\\\" } }, \" +\n+                \"userPermissions { { \" +\n+                \"protectedItems {entry}, \" +\n+                \"grantsAndDenials { grantRename, grantBrowse } } } } }\" );\n+\n+        // see if we can now rename that test entry which we could not before\n+        // rename op should still fail since billyd is not in the admin group\n+        assertFalse( checkCanRenameAs( \"billyd\", \"billyd\", \"ou=testou\", \"ou=newname\" ) );\n+\n+        // now add billyd to the Administrator group and try again\n+        addUserToGroup( \"billyd\", \"Administrators\" );\n+\n+        // try a rename operation which should succeed with ACI and group membership change\n+        assertTrue( checkCanRenameAs( \"billyd\", \"billyd\", \"ou=testou\", \"ou=newname\" ) );\n+\n+        // now let's cleanup\n+        removeUserFromGroup( \"billyd\", \"Administrators\" );\n+        deleteAccessControlSubentry( \"grantRenameByAdmin\" );\n+        deleteUser( \"billyd\" );\n+\n+        // ----------------------------------------------------------------------------\n+        // Test move and RDN change at the same time.\n+        // ----------------------------------------------------------------------------\n+\n+        // create the non-admin user\n+        createUser( \"billyd\", \"billyd\" );\n+\n+        // try an move w/ rdn change which should fail without any ACI\n+        assertFalse( checkCanRenameAs( \"billyd\", \"billyd\", \"ou=testou,ou=users\", \"ou=newname,ou=groups\" ) );\n+\n+        // Gives grantRename, grantImport, grantExport perm to all users in the Administrators\n+        // group for entries - browse is needed just to read navigate the tree at root\n+        createAccessControlSubentry( \"grantRenameMoveByAdmin\", \"{ \" +\n+                \"identificationTag \\\"addAci\\\", \" +\n+                \"precedence 14, \" +\n+                \"authenticationLevel none, \" +\n+                \"itemOrUserFirst userFirst: { \" +\n+                \"userClasses { userGroup { \\\"cn=Administrators,ou=groups,ou=system\\\" } }, \" +\n+                \"userPermissions { { \" +\n+                \"protectedItems {entry}, \" +\n+                \"grantsAndDenials { grantExport, grantImport, grantRename, grantBrowse } } } } }\" );\n+\n+        // see if we can move and rename the test entry which we could not before\n+        // op should still fail since billyd is not in the admin group\n+        assertFalse( checkCanRenameAs( \"billyd\", \"billyd\", \"ou=testou,ou=users\", \"ou=newname,ou=groups\" ) );\n+\n+        // now add billyd to the Administrator group and try again\n+        addUserToGroup( \"billyd\", \"Administrators\" );\n+\n+        // try move w/ rdn change which should succeed with ACI and group membership change\n+        assertTrue( checkCanRenameAs( \"billyd\", \"billyd\", \"ou=testou,ou=users\", \"ou=newname,ou=groups\" ) );\n+\n+        // now let's cleanup\n+        removeUserFromGroup( \"billyd\", \"Administrators\" );\n+        deleteAccessControlSubentry( \"grantRenameMoveByAdmin\" );\n+        deleteUser( \"billyd\" );\n+\n+        // ----------------------------------------------------------------------------\n+        // Test move ONLY without any RDN changes.\n+        // ----------------------------------------------------------------------------\n+\n+        // create the non-admin user\n+        createUser( \"billyd\", \"billyd\" );\n+\n+        // try move operation which should fail without any ACI\n+        assertFalse( checkCanRenameAs( \"billyd\", \"billyd\", \"ou=testou,ou=users\", \"ou=testou,ou=groups\" ) );\n+\n+        // Gives grantImport, and grantExport perm to all users in the Administrators group for entries\n+        createAccessControlSubentry( \"grantMoveByAdmin\", \"{ \" +\n+                \"identificationTag \\\"addAci\\\", \" +\n+                \"precedence 14, \" +\n+                \"authenticationLevel none, \" +\n+                \"itemOrUserFirst userFirst: { \" +\n+                \"userClasses { userGroup { \\\"cn=Administrators,ou=groups,ou=system\\\" } }, \" +\n+                \"userPermissions { { \" +\n+                \"protectedItems {entry}, \" +\n+                \"grantsAndDenials { grantExport, grantImport, grantBrowse } } } } }\" );\n+\n+        // see if we can now move that test entry which we could not before\n+        // op should still fail since billyd is not in the admin group\n+        assertFalse( checkCanRenameAs( \"billyd\", \"billyd\", \"ou=testou,ou=users\", \"ou=testou,ou=groups\" ) );\n+\n+        // now add billyd to the Administrator group and try again\n+        addUserToGroup( \"billyd\", \"Administrators\" );\n+\n+        // try move operation which should succeed with ACI and group membership change\n+        assertTrue( checkCanRenameAs( \"billyd\", \"billyd\", \"ou=testou,ou=users\", \"ou=testou,ou=groups\" ) );\n+\n+        // now let's cleanup\n+        removeUserFromGroup( \"billyd\", \"Administrators\" );\n+        deleteAccessControlSubentry( \"grantMoveByAdmin\" );\n+        deleteUser( \"billyd\" );\n+    }\n+\n+\n+    /**\n+     * Checks to make sure name based userClass works for rename, move, and\n+     * rename with move operation access controls.\n+     *\n+     * @throws javax.naming.NamingException if the test encounters an error\n+     */\n+    public void testGrantByName() throws NamingException\n+    {\n+        // ----------------------------------------------------------------------------\n+        // Test simple RDN change: NO SUBTREE MOVEMENT!\n+        // ----------------------------------------------------------------------------\n+\n+        // create the non-admin user\n+        createUser( \"billyd\", \"billyd\" );\n+\n+        // try the rename operation which should fail without any ACI\n+        assertFalse( checkCanRenameAs( \"billyd\", \"billyd\", \"ou=testou\", \"ou=newname\" ) );\n+\n+        // Gives grantRename perm specifically to the billyd user\n+        createAccessControlSubentry( \"grantRenameByName\", \"{ \" +\n+                \"identificationTag \\\"addAci\\\", \" +\n+                \"precedence 14, \" +\n+                \"authenticationLevel none, \" +\n+                \"itemOrUserFirst userFirst: { \" +\n+                \"userClasses { name { \\\"uid=billyd,ou=users,ou=system\\\" } }, \" +\n+                \"userPermissions { { \" +\n+                \"protectedItems {entry}, \" +\n+                \"grantsAndDenials { grantRename, grantBrowse } } } } }\" );\n+\n+        // try a rename operation which should succeed with ACI\n+        assertTrue( checkCanRenameAs( \"billyd\", \"billyd\", \"ou=testou\", \"ou=newname\" ) );\n+\n+        // now let's cleanup\n+        deleteAccessControlSubentry( \"grantRenameByName\" );\n+        deleteUser( \"billyd\" );\n+\n+        // ----------------------------------------------------------------------------\n+        // Test move and RDN change at the same time.\n+        // ----------------------------------------------------------------------------\n+\n+        // create the non-admin user\n+        createUser( \"billyd\", \"billyd\" );\n+\n+        // try an move w/ rdn change which should fail without any ACI\n+        assertFalse( checkCanRenameAs( \"billyd\", \"billyd\", \"ou=testou,ou=users\", \"ou=newname,ou=groups\" ) );\n+\n+        // Gives grantRename, grantImport, grantExport perm to billyd user on entries\n+        createAccessControlSubentry( \"grantRenameMoveByName\", \"{ \" +\n+                \"identificationTag \\\"addAci\\\", \" +\n+                \"precedence 14, \" +\n+                \"authenticationLevel none, \" +\n+                \"itemOrUserFirst userFirst: { \" +\n+                \"userClasses { name { \\\"uid=billyd,ou=users,ou=system\\\" } }, \" +\n+                \"userPermissions { { \" +\n+                \"protectedItems {entry}, \" +\n+                \"grantsAndDenials { grantExport, grantImport, grantRename, grantBrowse } } } } }\" );\n+\n+        // try move w/ rdn change which should succeed with ACI\n+        assertTrue( checkCanRenameAs( \"billyd\", \"billyd\", \"ou=testou,ou=users\", \"ou=newname,ou=groups\" ) );\n+\n+        // now let's cleanup\n+        deleteAccessControlSubentry( \"grantRenameMoveByName\" );\n+        deleteUser( \"billyd\" );\n+\n+        // ----------------------------------------------------------------------------\n+        // Test move ONLY without any RDN changes.\n+        // ----------------------------------------------------------------------------\n+\n+        // create the non-admin user\n+        createUser( \"billyd\", \"billyd\" );\n+\n+        // try move operation which should fail without any ACI\n+        assertFalse( checkCanRenameAs( \"billyd\", \"billyd\", \"ou=testou,ou=users\", \"ou=testou,ou=groups\" ) );\n+\n+        // Gives grantImport, and grantExport perm to billyd user for entries\n+        createAccessControlSubentry( \"grantMoveByName\", \"{ \" +\n+                \"identificationTag \\\"addAci\\\", \" +\n+                \"precedence 14, \" +\n+                \"authenticationLevel none, \" +\n+                \"itemOrUserFirst userFirst: { \" +\n+                \"userClasses { name { \\\"uid=billyd,ou=users,ou=system\\\" } }, \" +\n+                \"userPermissions { { \" +\n+                \"protectedItems {entry}, \" +\n+                \"grantsAndDenials { grantExport, grantImport, grantBrowse } } } } }\" );\n+\n+        // try move operation which should succeed with ACI\n+        assertTrue( checkCanRenameAs( \"billyd\", \"billyd\", \"ou=testou,ou=users\", \"ou=testou,ou=groups\" ) );\n+\n+        // now let's cleanup\n+        deleteAccessControlSubentry( \"grantMoveByName\" );\n+        deleteUser( \"billyd\" );\n+    }\n+\n+\n+    /**\n+     * Checks to make sure subtree based userClass works for rename, move, and\n+     * rename with move operation access controls.\n+     *\n+     * @throws javax.naming.NamingException if the test encounters an error\n+     */\n+    public void testGrantBySubtree() throws NamingException\n+    {\n+        // ----------------------------------------------------------------------------\n+        // Test simple RDN change: NO SUBTREE MOVEMENT!\n+        // ----------------------------------------------------------------------------\n+\n+        // create the non-admin user\n+        createUser( \"billyd\", \"billyd\" );\n+\n+        // try the rename operation which should fail without any ACI\n+        assertFalse( checkCanRenameAs( \"billyd\", \"billyd\", \"ou=testou\", \"ou=newname\" ) );\n+\n+        // Gives grantRename perm for entries to those users selected by the subtree\n+        createAccessControlSubentry( \"grantRenameByTree\", \"{ \" +\n+                \"identificationTag \\\"addAci\\\", \" +\n+                \"precedence 14, \" +\n+                \"authenticationLevel none, \" +\n+                \"itemOrUserFirst userFirst: { \" +\n+                \"userClasses { subtree { { base \\\"ou=users,ou=system\\\" } } }, \" +\n+                \"userPermissions { { \" +\n+                \"protectedItems {entry}, \" +\n+                \"grantsAndDenials { grantRename, grantBrowse } } } } }\" );\n+\n+        // try a rename operation which should succeed with ACI\n+        assertTrue( checkCanRenameAs( \"billyd\", \"billyd\", \"ou=testou\", \"ou=newname\" ) );\n+\n+        // now let's cleanup\n+        deleteAccessControlSubentry( \"grantRenameByTree\" );\n+        deleteUser( \"billyd\" );\n+\n+        // ----------------------------------------------------------------------------\n+        // Test move and RDN change at the same time.\n+        // ----------------------------------------------------------------------------\n+\n+        // create the non-admin user\n+        createUser( \"billyd\", \"billyd\" );\n+\n+        // try an move w/ rdn change which should fail without any ACI\n+        assertFalse( checkCanRenameAs( \"billyd\", \"billyd\", \"ou=testou,ou=users\", \"ou=newname,ou=groups\" ) );\n+\n+        // Gives grantRename, grantImport, grantExport for entries to users selected by subtree\n+        createAccessControlSubentry( \"grantRenameMoveByTree\", \"{ \" +\n+                \"identificationTag \\\"addAci\\\", \" +\n+                \"precedence 14, \" +\n+                \"authenticationLevel none, \" +\n+                \"itemOrUserFirst userFirst: { \" +\n+                \"userClasses { subtree { { base \\\"ou=users,ou=system\\\" } } }, \" +\n+                \"userPermissions { { \" +\n+                \"protectedItems {entry}, \" +\n+                \"grantsAndDenials { grantExport, grantImport, grantRename, grantBrowse } } } } }\" );\n+\n+        // try move w/ rdn change which should succeed with ACI\n+        assertTrue( checkCanRenameAs( \"billyd\", \"billyd\", \"ou=testou,ou=users\", \"ou=newname,ou=groups\" ) );\n+\n+        // now let's cleanup\n+        deleteAccessControlSubentry( \"grantRenameMoveByTree\" );\n+        deleteUser( \"billyd\" );\n+\n+        // ----------------------------------------------------------------------------\n+        // Test move ONLY without any RDN changes.\n+        // ----------------------------------------------------------------------------\n+\n+        // create the non-admin user\n+        createUser( \"billyd\", \"billyd\" );\n+\n+        // try move operation which should fail without any ACI\n+        assertFalse( checkCanRenameAs( \"billyd\", \"billyd\", \"ou=testou,ou=users\", \"ou=testou,ou=groups\" ) );\n+\n+        // Gives grantImport, and grantExport perm for entries to subtree selected users\n+        createAccessControlSubentry( \"grantMoveByTree\", \"{ \" +\n+                \"identificationTag \\\"addAci\\\", \" +\n+                \"precedence 14, \" +\n+                \"authenticationLevel none, \" +\n+                \"itemOrUserFirst userFirst: { \" +\n+                \"userClasses { subtree { { base \\\"ou=users,ou=system\\\" } } }, \" +\n+                \"userPermissions { { \" +\n+                \"protectedItems {entry}, \" +\n+                \"grantsAndDenials { grantExport, grantImport, grantBrowse } } } } }\" );\n+\n+        // try move operation which should succeed with ACI\n+        assertTrue( checkCanRenameAs( \"billyd\", \"billyd\", \"ou=testou,ou=users\", \"ou=testou,ou=groups\" ) );\n+\n+        // now let's cleanup\n+        deleteAccessControlSubentry( \"grantMoveByTree\" );\n+        deleteUser( \"billyd\" );\n+    }\n+\n+\n+    /**\n+     * Checks to make sure the <b>anyUser</b> userClass works for rename, move, and\n+     * rename with move operation access controls.\n+     *\n+     * @throws javax.naming.NamingException if the test encounters an error\n+     */\n+    public void testGrantByAnyuser() throws NamingException\n+    {\n+        // ----------------------------------------------------------------------------\n+        // Test simple RDN change: NO SUBTREE MOVEMENT!\n+        // ----------------------------------------------------------------------------\n+\n+        // create the non-admin user\n+        createUser( \"billyd\", \"billyd\" );\n+\n+        // try the rename operation which should fail without any ACI\n+        assertFalse( checkCanRenameAs( \"billyd\", \"billyd\", \"ou=testou\", \"ou=newname\" ) );\n+\n+        // Gives grantRename perm for entries to any user\n+        createAccessControlSubentry( \"grantRenameByAny\", \"{ \" +\n+                \"identificationTag \\\"addAci\\\", \" +\n+                \"precedence 14, \" +\n+                \"authenticationLevel none, \" +\n+                \"itemOrUserFirst userFirst: { \" +\n+                \"userClasses { allUsers }, \" +\n+                \"userPermissions { { \" +\n+                \"protectedItems {entry}, \" +\n+                \"grantsAndDenials { grantRename, grantBrowse } } } } }\" );\n+\n+        // try a rename operation which should succeed with ACI\n+        assertTrue( checkCanRenameAs( \"billyd\", \"billyd\", \"ou=testou\", \"ou=newname\" ) );\n+\n+        // now let's cleanup\n+        deleteAccessControlSubentry( \"grantRenameByAny\" );\n+        deleteUser( \"billyd\" );\n+\n+        // ----------------------------------------------------------------------------\n+        // Test move and RDN change at the same time.\n+        // ----------------------------------------------------------------------------\n+\n+        // create the non-admin user\n+        createUser( \"billyd\", \"billyd\" );\n+\n+        // try an move w/ rdn change which should fail without any ACI\n+        assertFalse( checkCanRenameAs( \"billyd\", \"billyd\", \"ou=testou,ou=users\", \"ou=newname,ou=groups\" ) );\n+\n+        // Gives grantRename, grantImport, grantExport for entries to any user\n+        createAccessControlSubentry( \"grantRenameMoveByAny\", \"{ \" +\n+                \"identificationTag \\\"addAci\\\", \" +\n+                \"precedence 14, \" +\n+                \"authenticationLevel none, \" +\n+                \"itemOrUserFirst userFirst: { \" +\n+                \"userClasses { allUsers }, \" +\n+                \"userPermissions { { \" +\n+                \"protectedItems {entry}, \" +\n+                \"grantsAndDenials { grantExport, grantImport, grantRename, grantBrowse } } } } }\" );\n+\n+        // try move w/ rdn change which should succeed with ACI\n+        assertTrue( checkCanRenameAs( \"billyd\", \"billyd\", \"ou=testou,ou=users\", \"ou=newname,ou=groups\" ) );\n+\n+        // now let's cleanup\n+        deleteAccessControlSubentry( \"grantRenameMoveByAny\" );\n+        deleteUser( \"billyd\" );\n+\n+        // ----------------------------------------------------------------------------\n+        // Test move ONLY without any RDN changes.\n+        // ----------------------------------------------------------------------------\n+\n+        // create the non-admin user\n+        createUser( \"billyd\", \"billyd\" );\n+\n+        // try move operation which should fail without any ACI\n+        assertFalse( checkCanRenameAs( \"billyd\", \"billyd\", \"ou=testou,ou=users\", \"ou=testou,ou=groups\" ) );\n+\n+        // Gives grantImport, and grantExport perm for entries to any user\n+        createAccessControlSubentry( \"grantMoveByAny\", \"{ \" +\n+                \"identificationTag \\\"addAci\\\", \" +\n+                \"precedence 14, \" +\n+                \"authenticationLevel none, \" +\n+                \"itemOrUserFirst userFirst: { \" +\n+                \"userClasses { allUsers }, \" +\n+                \"userPermissions { { \" +\n+                \"protectedItems {entry}, \" +\n+                \"grantsAndDenials { grantExport, grantImport, grantBrowse } } } } }\" );\n+\n+        // try move operation which should succeed with ACI\n+        assertTrue( checkCanRenameAs( \"billyd\", \"billyd\", \"ou=testou,ou=users\", \"ou=testou,ou=groups\" ) );\n+\n+        // now let's cleanup\n+        deleteAccessControlSubentry( \"grantMoveByAny\" );\n+        deleteUser( \"billyd\" );\n+    }\n+}",
                "raw_url": "https://github.com/apache/directory-server/raw/f042e1564af6dcff28640fce18ff32b44c71482a/core/src/test/org/apache/ldap/server/authz/MoveRenameAuthorizationTest.java",
                "sha": "0b9648254e255f50ffd17f5c50eff98cc828f207",
                "status": "added"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/directory-server/blob/f042e1564af6dcff28640fce18ff32b44c71482a/core/src/test/org/apache/ldap/server/authz/support/MicroOperationFilterTest.java",
                "changes": 1,
                "contents_url": "https://api.github.com/repos/apache/directory-server/contents/core/src/test/org/apache/ldap/server/authz/support/MicroOperationFilterTest.java?ref=f042e1564af6dcff28640fce18ff32b44c71482a",
                "deletions": 0,
                "filename": "core/src/test/org/apache/ldap/server/authz/support/MicroOperationFilterTest.java",
                "patch": "@@ -54,6 +54,7 @@\n         USER_OPERATIONS_A.add( MicroOperation.BROWSE );\r\n         USER_OPERATIONS_B.add( MicroOperation.COMPARE );\r\n         USER_OPERATIONS_B.add( MicroOperation.DISCLOSE_ON_ERROR );\r\n+        TUPLE_OPERATIONS.add( MicroOperation.ADD );\r\n         TUPLE_OPERATIONS.add( MicroOperation.BROWSE );\r\n         TUPLE_OPERATIONS.add( MicroOperation.EXPORT );\r\n     }\r",
                "raw_url": "https://github.com/apache/directory-server/raw/f042e1564af6dcff28640fce18ff32b44c71482a/core/src/test/org/apache/ldap/server/authz/support/MicroOperationFilterTest.java",
                "sha": "257b1984e6db6f874a18961a92902a3b8a5dfcd3",
                "status": "modified"
            }
        ],
        "message": "changes ...\n\n o added rename, move and combined test cases \n o added modify test cases \n o added more utility functions to the AbstractAuthorizationTest \n o commented out code for requiring grantRemove/grantAdd perms on old RDN\n   deletes in modifyRdn operations that change the RDN - this does not \n   comply with X.501 although it makes a lot of sense\n o OldAuthenticationService now disables itself for its static rules when\n   the basic authorization service is enabled.\n o fixed bug in move operation handling to make sure import/export/rename\n   permissions are correctly mandated for respective overloads \n o fixed bug in AbstractAuthorizationTest: was not looking up operational \n   attribute administrativeRole properly to create subentries under ou=system\n o fixed bug in MicroOperationFilter: filter accepted ACI without testing\n   the presence of all required micro operation permissions.\n o fixed bug in GroupCache: group cache was not properly updating the cache on\n   modify operations on groups that are a groupOfNames and groupOfUniqueNames\n o fixed NPE in GroupCache\n o fixed bug in AuthorizationService in lookup(Name, String[]) where the \n   attribute ids where not being used for nexus lookups.\n\nTODO: \n\n o more testing with different kinds of ACI constructs should add to the total\n   number of tests per operation \n o doco badly needed\n o need to make the code not use the nexus for search list and lookups - the \n   next interceptor should be used\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/directory/apacheds/trunk@321394 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/directory-server/commit/c754fc19d01305d3cc00d2d24a50b4aa3a3726a5",
        "repo": "directory-server",
        "unit_tests": [
            "MicroOperationFilterTest.java"
        ]
    },
    "directory-server_fa16d67": {
        "bug_id": "directory-server_fa16d67",
        "commit": "https://github.com/apache/directory-server/commit/fa16d670ca7f24627e72f84a757511384ab84cda",
        "file": [
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/directory-server/blob/fa16d670ca7f24627e72f84a757511384ab84cda/core-api/src/main/java/org/apache/directory/server/core/api/filtering/CursorList.java",
                "changes": 4,
                "contents_url": "https://api.github.com/repos/apache/directory-server/contents/core-api/src/main/java/org/apache/directory/server/core/api/filtering/CursorList.java?ref=fa16d670ca7f24627e72f84a757511384ab84cda",
                "deletions": 2,
                "filename": "core-api/src/main/java/org/apache/directory/server/core/api/filtering/CursorList.java",
                "patch": "@@ -112,7 +112,7 @@ public CursorList( int start, List<EntryFilteringCursor> list, int end, SearchOp\n             this.list = Collections.emptyList();\n         }\n \n-        listSize = list.size();\n+        listSize = this.list.size();\n \n         if ( ( start < 0 ) || ( start > listSize ) )\n         {\n@@ -135,7 +135,7 @@ public CursorList( int start, List<EntryFilteringCursor> list, int end, SearchOp\n         this.end = end;\n         this.searchContext = searchContext;\n         index = start;\n-        currentCursor = list.get( index );\n+        currentCursor = this.list.get( index );\n     }\n \n ",
                "raw_url": "https://github.com/apache/directory-server/raw/fa16d670ca7f24627e72f84a757511384ab84cda/core-api/src/main/java/org/apache/directory/server/core/api/filtering/CursorList.java",
                "sha": "15aa460b531bcc57e5ab9ed30b21a7e17dbd0da3",
                "status": "modified"
            },
            {
                "additions": 5,
                "blob_url": "https://github.com/apache/directory-server/blob/fa16d670ca7f24627e72f84a757511384ab84cda/core-api/src/main/java/org/apache/directory/server/core/api/interceptor/context/AddOperationContext.java",
                "changes": 5,
                "contents_url": "https://api.github.com/repos/apache/directory-server/contents/core-api/src/main/java/org/apache/directory/server/core/api/interceptor/context/AddOperationContext.java?ref=fa16d670ca7f24627e72f84a757511384ab84cda",
                "deletions": 0,
                "filename": "core-api/src/main/java/org/apache/directory/server/core/api/interceptor/context/AddOperationContext.java",
                "patch": "@@ -23,6 +23,7 @@\n import org.apache.directory.api.ldap.model.entry.DefaultEntry;\n import org.apache.directory.api.ldap.model.entry.Entry;\n import org.apache.directory.api.ldap.model.exception.LdapException;\n+import org.apache.directory.api.ldap.model.exception.LdapOperationErrorException;\n import org.apache.directory.api.ldap.model.message.AddRequest;\n import org.apache.directory.api.ldap.model.message.MessageTypeEnum;\n import org.apache.directory.api.ldap.model.message.controls.ManageDsaIT;\n@@ -118,6 +119,10 @@ public AddOperationContext( CoreSession session, AddRequest addRequest ) throws\n         {\n             setInterceptors( session.getDirectoryService().getInterceptors( OperationEnum.ADD ) );\n         }\n+        else\n+        {\n+            throw new LdapOperationErrorException( \"No session to proceed the operation\" );\n+        }\n \n         entry = new ClonedServerEntry(\n             new DefaultEntry( session.getDirectoryService().getSchemaManager(), addRequest.getEntry() ) );",
                "raw_url": "https://github.com/apache/directory-server/raw/fa16d670ca7f24627e72f84a757511384ab84cda/core-api/src/main/java/org/apache/directory/server/core/api/interceptor/context/AddOperationContext.java",
                "sha": "2710a739fedaa3910edc97e2136486d7fce11702",
                "status": "modified"
            },
            {
                "additions": 5,
                "blob_url": "https://github.com/apache/directory-server/blob/fa16d670ca7f24627e72f84a757511384ab84cda/core-api/src/main/java/org/apache/directory/server/core/api/interceptor/context/ModifyOperationContext.java",
                "changes": 5,
                "contents_url": "https://api.github.com/repos/apache/directory-server/contents/core-api/src/main/java/org/apache/directory/server/core/api/interceptor/context/ModifyOperationContext.java?ref=fa16d670ca7f24627e72f84a757511384ab84cda",
                "deletions": 0,
                "filename": "core-api/src/main/java/org/apache/directory/server/core/api/interceptor/context/ModifyOperationContext.java",
                "patch": "@@ -29,6 +29,7 @@\n import org.apache.directory.api.ldap.model.entry.Modification;\n import org.apache.directory.api.ldap.model.entry.ModificationOperation;\n import org.apache.directory.api.ldap.model.exception.LdapException;\n+import org.apache.directory.api.ldap.model.exception.LdapOperationErrorException;\n import org.apache.directory.api.ldap.model.message.MessageTypeEnum;\n import org.apache.directory.api.ldap.model.message.ModifyRequest;\n import org.apache.directory.api.ldap.model.message.controls.ManageDsaIT;\n@@ -96,6 +97,10 @@ public ModifyOperationContext( CoreSession session, ModifyRequest modifyRequest\n         {\n             setInterceptors( session.getDirectoryService().getInterceptors( OperationEnum.MODIFY ) );\n         }\n+        else\n+        {\n+            throw new LdapOperationErrorException( \"Cannot proceed the operation with no session\" );\n+        }\n \n         modItems = ServerEntryUtils.toServerModification( modifyRequest.getModifications().toArray(\n             new DefaultModification[0] ), session.getDirectoryService().getSchemaManager() );",
                "raw_url": "https://github.com/apache/directory-server/raw/fa16d670ca7f24627e72f84a757511384ab84cda/core-api/src/main/java/org/apache/directory/server/core/api/interceptor/context/ModifyOperationContext.java",
                "sha": "c855c515a4ed806888602778ee7e4563e5fb8758",
                "status": "modified"
            },
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/directory-server/blob/fa16d670ca7f24627e72f84a757511384ab84cda/core-api/src/main/java/org/apache/directory/server/core/api/interceptor/context/UnbindOperationContext.java",
                "changes": 10,
                "contents_url": "https://api.github.com/repos/apache/directory-server/contents/core-api/src/main/java/org/apache/directory/server/core/api/interceptor/context/UnbindOperationContext.java?ref=fa16d670ca7f24627e72f84a757511384ab84cda",
                "deletions": 8,
                "filename": "core-api/src/main/java/org/apache/directory/server/core/api/interceptor/context/UnbindOperationContext.java",
                "patch": "@@ -41,10 +41,7 @@ public UnbindOperationContext( CoreSession session )\n     {\n         super( session, session.getEffectivePrincipal().getDn() );\n \n-        if ( session != null )\n-        {\n-            setInterceptors( session.getDirectoryService().getInterceptors( OperationEnum.UNBIND ) );\n-        }\n+        setInterceptors( session.getDirectoryService().getInterceptors( OperationEnum.UNBIND ) );\n     }\n \n \n@@ -53,10 +50,7 @@ public UnbindOperationContext( CoreSession session, UnbindRequest unbindRequest\n         super( session, session.getEffectivePrincipal().getDn() );\n         setRequestControls( unbindRequest.getControls() );\n \n-        if ( session != null )\n-        {\n-            setInterceptors( session.getDirectoryService().getInterceptors( OperationEnum.UNBIND ) );\n-        }\n+        setInterceptors( session.getDirectoryService().getInterceptors( OperationEnum.UNBIND ) );\n     }\n \n ",
                "raw_url": "https://github.com/apache/directory-server/raw/fa16d670ca7f24627e72f84a757511384ab84cda/core-api/src/main/java/org/apache/directory/server/core/api/interceptor/context/UnbindOperationContext.java",
                "sha": "63dbf7edabb7f9694954be0668f16ac34207b296",
                "status": "modified"
            },
            {
                "additions": 5,
                "blob_url": "https://github.com/apache/directory-server/blob/fa16d670ca7f24627e72f84a757511384ab84cda/core/src/main/java/org/apache/directory/server/core/DefaultDirectoryService.java",
                "changes": 7,
                "contents_url": "https://api.github.com/repos/apache/directory-server/contents/core/src/main/java/org/apache/directory/server/core/DefaultDirectoryService.java?ref=fa16d670ca7f24627e72f84a757511384ab84cda",
                "deletions": 2,
                "filename": "core/src/main/java/org/apache/directory/server/core/DefaultDirectoryService.java",
                "patch": "@@ -1792,11 +1792,14 @@ private void initialize() throws Exception\n             setDefaultInterceptorConfigurations();\n         }\n \n-        if ( cacheService != null )\n+        if ( cacheService == null )\n         {\n-            cacheService.initialize( instanceLayout );\n+            // Initialize a default cache service\n+            cacheService = new CacheService();\n         }\n \n+        cacheService.initialize( instanceLayout );\n+\n         // Initialize the AP caches\n         accessControlAPCache = new DnNode<AccessControlAdministrativePoint>();\n         collectiveAttributeAPCache = new DnNode<CollectiveAttributeAdministrativePoint>();",
                "raw_url": "https://github.com/apache/directory-server/raw/fa16d670ca7f24627e72f84a757511384ab84cda/core/src/main/java/org/apache/directory/server/core/DefaultDirectoryService.java",
                "sha": "f3547266e66176914ed1aaf8ef347dab3098cd31",
                "status": "modified"
            },
            {
                "additions": 12,
                "blob_url": "https://github.com/apache/directory-server/blob/fa16d670ca7f24627e72f84a757511384ab84cda/protocol-ldap/src/main/java/org/apache/directory/server/ldap/handlers/extended/GracefulShutdownHandler.java",
                "changes": 24,
                "contents_url": "https://api.github.com/repos/apache/directory-server/contents/protocol-ldap/src/main/java/org/apache/directory/server/ldap/handlers/extended/GracefulShutdownHandler.java?ref=fa16d670ca7f24627e72f84a757511384ab84cda",
                "deletions": 12,
                "filename": "protocol-ldap/src/main/java/org/apache/directory/server/ldap/handlers/extended/GracefulShutdownHandler.java",
                "patch": "@@ -247,21 +247,21 @@ public static void sendNoticeOfDisconnect( List<IoSession> sessions, IoSession r\n                     LOG.warn( \"Failed to sent NoD for client: \" + session, e );\n                 }\n             }\n-        }\n \n-        // And close the connections when the NoDs are sent.\n-        Iterator<IoSession> sessionIt = sessions.iterator();\n+            // And close the connections when the NoDs are sent.\n+            Iterator<IoSession> sessionIt = sessions.iterator();\n \n-        for ( WriteFuture future : writeFutures )\n-        {\n-            try\n-            {\n-                future.awaitUninterruptibly( 1000 );\n-                sessionIt.next().close( true );\n-            }\n-            catch ( Exception e )\n+            for ( WriteFuture future : writeFutures )\n             {\n-                LOG.warn( \"Failed to sent NoD.\", e );\n+                try\n+                {\n+                    future.awaitUninterruptibly( 1000 );\n+                    sessionIt.next().close( true );\n+                }\n+                catch ( Exception e )\n+                {\n+                    LOG.warn( \"Failed to sent NoD.\", e );\n+                }\n             }\n         }\n     }",
                "raw_url": "https://github.com/apache/directory-server/raw/fa16d670ca7f24627e72f84a757511384ab84cda/protocol-ldap/src/main/java/org/apache/directory/server/ldap/handlers/extended/GracefulShutdownHandler.java",
                "sha": "f5fa3b059abe15484d88aac116c16078261026c5",
                "status": "modified"
            },
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/directory-server/blob/fa16d670ca7f24627e72f84a757511384ab84cda/protocol-ldap/src/main/java/org/apache/directory/server/ldap/handlers/request/SearchRequestHandler.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/directory-server/contents/protocol-ldap/src/main/java/org/apache/directory/server/ldap/handlers/request/SearchRequestHandler.java?ref=fa16d670ca7f24627e72f84a757511384ab84cda",
                "deletions": 0,
                "filename": "protocol-ldap/src/main/java/org/apache/directory/server/ldap/handlers/request/SearchRequestHandler.java",
                "patch": "@@ -477,6 +477,8 @@ private void readPagedResults( LdapSession session, SearchRequest req, LdapResul\n \n         boolean hasMoreEntry = cursor.next();\n \n+        // We have some entry, move back to the first one, as we just moved forward \n+        // to get the first entry\n         if ( hasMoreEntry )\n         {\n             cursor.previous();",
                "raw_url": "https://github.com/apache/directory-server/raw/fa16d670ca7f24627e72f84a757511384ab84cda/protocol-ldap/src/main/java/org/apache/directory/server/ldap/handlers/request/SearchRequestHandler.java",
                "sha": "3481bd757440f8cf66ea420df1c31ecedbde9ce6",
                "status": "modified"
            },
            {
                "additions": 4,
                "blob_url": "https://github.com/apache/directory-server/blob/fa16d670ca7f24627e72f84a757511384ab84cda/service-builder/src/main/java/org/apache/directory/server/config/builder/ServiceBuilder.java",
                "changes": 9,
                "contents_url": "https://api.github.com/repos/apache/directory-server/contents/service-builder/src/main/java/org/apache/directory/server/config/builder/ServiceBuilder.java?ref=fa16d670ca7f24627e72f84a757511384ab84cda",
                "deletions": 5,
                "filename": "service-builder/src/main/java/org/apache/directory/server/config/builder/ServiceBuilder.java",
                "patch": "@@ -69,7 +69,6 @@\n import org.apache.directory.server.config.beans.SaslMechHandlerBean;\n import org.apache.directory.server.config.beans.TcpTransportBean;\n import org.apache.directory.server.config.beans.TransportBean;\n-import org.apache.directory.server.config.beans.UdpTransportBean;\n import org.apache.directory.server.constants.ApacheSchemaConstants;\n import org.apache.directory.server.core.DefaultDirectoryService;\n import org.apache.directory.server.core.api.DirectoryService;\n@@ -514,7 +513,7 @@ public static Transport createTransport( TransportBean transportBean )\n         {\n             transport = new TcpTransport();\n         }\n-        else if ( transportBean instanceof UdpTransportBean )\n+        else\n         {\n             transport = new UdpTransport();\n         }\n@@ -972,13 +971,13 @@ public static LdapServer createLdapServer( LdapServerBean ldapServerBean, Direct\n \n         // Relplication pinger thread sleep time\n         ldapServer.setReplPingerSleepTime( ldapServerBean.getReplPingerSleep() );\n-        \n+\n         // Enabled cipher suites\n-        if( ldapServerBean.getEnabledCipherSuites() != null )\n+        if ( ldapServerBean.getEnabledCipherSuites() != null )\n         {\n             ldapServer.setEnabledCipherSuites( ldapServerBean.getEnabledCipherSuites() );\n         }\n-        \n+\n         // The transports\n         Transport[] transports = createTransports( ldapServerBean.getTransports() );\n         ldapServer.setTransports( transports );",
                "raw_url": "https://github.com/apache/directory-server/raw/fa16d670ca7f24627e72f84a757511384ab84cda/service-builder/src/main/java/org/apache/directory/server/config/builder/ServiceBuilder.java",
                "sha": "aca13769fcade0e4aa6a8796aaf34c4c839d57a3",
                "status": "modified"
            },
            {
                "additions": 5,
                "blob_url": "https://github.com/apache/directory-server/blob/fa16d670ca7f24627e72f84a757511384ab84cda/service-osgi/src/main/java/org/apache/directory/server/ApacheDsService.java",
                "changes": 31,
                "contents_url": "https://api.github.com/repos/apache/directory-server/contents/service-osgi/src/main/java/org/apache/directory/server/ApacheDsService.java?ref=fa16d670ca7f24627e72f84a757511384ab84cda",
                "deletions": 26,
                "filename": "service-osgi/src/main/java/org/apache/directory/server/ApacheDsService.java",
                "patch": "@@ -29,6 +29,7 @@\n import java.util.Map;\n import java.util.UUID;\n \n+import org.apache.commons.lang.time.DateUtils;\n import org.apache.directory.server.config.ConfigPartitionReader;\n import org.apache.directory.server.config.LdifConfigExtractor;\n import org.apache.directory.server.config.beans.ConfigBean;\n@@ -52,31 +53,6 @@\n import org.apache.directory.server.kerberos.kdc.KdcServer;\n import org.apache.directory.server.ldap.LdapServer;\n import org.apache.directory.server.ntp.NtpServer;\n-import org.apache.directory.shared.ldap.model.constants.SchemaConstants;\n-import org.apache.directory.shared.ldap.model.entry.Attribute;\n-import org.apache.directory.shared.ldap.model.entry.DefaultAttribute;\n-import org.apache.directory.shared.ldap.model.entry.DefaultModification;\n-import org.apache.directory.shared.ldap.model.entry.Entry;\n-import org.apache.directory.shared.ldap.model.entry.Modification;\n-import org.apache.directory.shared.ldap.model.entry.ModificationOperation;\n-import org.apache.directory.shared.ldap.model.filter.ExprNode;\n-import org.apache.directory.shared.ldap.model.filter.PresenceNode;\n-import org.apache.directory.shared.ldap.model.message.AliasDerefMode;\n-import org.apache.directory.shared.ldap.model.message.SearchScope;\n-import org.apache.directory.shared.ldap.model.name.Dn;\n-import org.apache.directory.shared.ldap.model.schema.AttributeType;\n-import org.apache.directory.shared.ldap.model.schema.AttributeTypeOptions;\n-import org.apache.directory.shared.ldap.model.schema.SchemaManager;\n-import org.apache.directory.shared.ldap.model.schema.registries.SchemaLoader;\n-import org.apache.directory.shared.ldap.model.schema.syntaxCheckers.CsnSyntaxChecker;\n-import org.apache.directory.shared.ldap.model.schema.syntaxCheckers.GeneralizedTimeSyntaxChecker;\n-import org.apache.directory.shared.ldap.model.schema.syntaxCheckers.UuidSyntaxChecker;\n-import org.apache.directory.shared.ldap.schemaextractor.SchemaLdifExtractor;\n-import org.apache.directory.shared.ldap.schemaextractor.impl.DefaultSchemaLdifExtractor;\n-import org.apache.directory.shared.ldap.schemaloader.LdifSchemaLoader;\n-import org.apache.directory.shared.ldap.schemamanager.impl.DefaultSchemaManager;\n-import org.apache.directory.shared.util.DateUtils;\n-import org.apache.directory.shared.util.exception.Exceptions;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n \n@@ -578,7 +554,10 @@ public void stop() throws Exception\n         }\n \n         // We now have to stop the underlaying DirectoryService\n-        ldapServer.getDirectoryService().shutdown();\n+        if ( ldapServer != null )\n+        {\n+            ldapServer.getDirectoryService().shutdown();\n+        }\n     }\n \n     private static final String BANNER_LDAP = \"           _                     _          ____  ____   \\n\"",
                "raw_url": "https://github.com/apache/directory-server/raw/fa16d670ca7f24627e72f84a757511384ab84cda/service-osgi/src/main/java/org/apache/directory/server/ApacheDsService.java",
                "sha": "0e9005454ead638e3abaa4ca1dce09228c9daadf",
                "status": "modified"
            }
        ],
        "message": "o Fixed many potential NPE detected by Sonar\no Fixed a bad list access on CursorList\no Initializing a default CacheService if none is given at startup\n\ngit-svn-id: https://svn.apache.org/repos/asf/directory/apacheds/trunk@1486298 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/directory-server/commit/985ea9ef35e9695e846c60bbef938e74d492b3de",
        "repo": "directory-server",
        "unit_tests": [
            "ServiceBuilderTest.java"
        ]
    },
    "directory-server_fdfa437": {
        "bug_id": "directory-server_fdfa437",
        "commit": "https://github.com/apache/directory-server/commit/fdfa43716a9fe8ff373b928048788b27f3ccb5bc",
        "file": [
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/directory-server/blob/fdfa43716a9fe8ff373b928048788b27f3ccb5bc/core-api/src/main/java/org/apache/directory/server/core/api/InterceptorEnum.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/directory-server/contents/core-api/src/main/java/org/apache/directory/server/core/api/InterceptorEnum.java?ref=fdfa43716a9fe8ff373b928048788b27f3ccb5bc",
                "deletions": 1,
                "filename": "core-api/src/main/java/org/apache/directory/server/core/api/InterceptorEnum.java",
                "patch": "@@ -51,7 +51,7 @@\n      * The private constructor\n      * @param methodName The associated interceptor name\n      */\n-    private InterceptorEnum( String name )\n+    InterceptorEnum( String name )\n     {\n         this.name = name;\n     }",
                "raw_url": "https://github.com/apache/directory-server/raw/fdfa43716a9fe8ff373b928048788b27f3ccb5bc/core-api/src/main/java/org/apache/directory/server/core/api/InterceptorEnum.java",
                "sha": "90515cf3c973703633b2b044c739b145c083b516",
                "status": "modified"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/directory-server/blob/fdfa43716a9fe8ff373b928048788b27f3ccb5bc/core-api/src/main/java/org/apache/directory/server/core/api/OperationEnum.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/directory-server/contents/core-api/src/main/java/org/apache/directory/server/core/api/OperationEnum.java?ref=fdfa43716a9fe8ff373b928048788b27f3ccb5bc",
                "deletions": 1,
                "filename": "core-api/src/main/java/org/apache/directory/server/core/api/OperationEnum.java",
                "patch": "@@ -69,7 +69,7 @@\n      * The private constructor\n      * @param methodName The associated method name\n      */\n-    private OperationEnum( String methodName )\n+    OperationEnum( String methodName )\n     {\n         this.methodName = methodName;\n     }",
                "raw_url": "https://github.com/apache/directory-server/raw/fdfa43716a9fe8ff373b928048788b27f3ccb5bc/core-api/src/main/java/org/apache/directory/server/core/api/OperationEnum.java",
                "sha": "ac760a92c488d042082f1e2ee182a949ca122780",
                "status": "modified"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/directory-server/blob/fdfa43716a9fe8ff373b928048788b27f3ccb5bc/core-api/src/main/java/org/apache/directory/server/core/api/ReferralHandlingMode.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/directory-server/contents/core-api/src/main/java/org/apache/directory/server/core/api/ReferralHandlingMode.java?ref=fdfa43716a9fe8ff373b928048788b27f3ccb5bc",
                "deletions": 1,
                "filename": "core-api/src/main/java/org/apache/directory/server/core/api/ReferralHandlingMode.java",
                "patch": "@@ -50,7 +50,7 @@\n      * @see Context#REFERRAL\n      * @param jndiValue the JNDI Context.REFERRAL key's value\n      */\n-    private ReferralHandlingMode( String jndiValue )\n+    ReferralHandlingMode( String jndiValue )\n     {\n         this.jndiValue = jndiValue;\n     }",
                "raw_url": "https://github.com/apache/directory-server/raw/fdfa43716a9fe8ff373b928048788b27f3ccb5bc/core-api/src/main/java/org/apache/directory/server/core/api/ReferralHandlingMode.java",
                "sha": "ce0ad663018f97d6ca9f909971dc626cb4eaeeee",
                "status": "modified"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/directory-server/blob/fdfa43716a9fe8ff373b928048788b27f3ccb5bc/core-api/src/main/java/org/apache/directory/server/core/api/authn/ppolicy/CheckQualityEnum.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/directory-server/contents/core-api/src/main/java/org/apache/directory/server/core/api/authn/ppolicy/CheckQualityEnum.java?ref=fdfa43716a9fe8ff373b928048788b27f3ccb5bc",
                "deletions": 1,
                "filename": "core-api/src/main/java/org/apache/directory/server/core/api/authn/ppolicy/CheckQualityEnum.java",
                "patch": "@@ -51,7 +51,7 @@\n     /**\n      * Create a new instance of this enum\n      */\n-    private CheckQualityEnum( int value )\n+    CheckQualityEnum( int value )\n     {\n         this.value = value;\n     }",
                "raw_url": "https://github.com/apache/directory-server/raw/fdfa43716a9fe8ff373b928048788b27f3ccb5bc/core-api/src/main/java/org/apache/directory/server/core/api/authn/ppolicy/CheckQualityEnum.java",
                "sha": "9fd2de4f89c0f4647f285c5d583fbfdb19307764",
                "status": "modified"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/directory-server/blob/fdfa43716a9fe8ff373b928048788b27f3ccb5bc/core-api/src/main/java/org/apache/directory/server/core/api/changelog/RevisionOrder.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/directory-server/contents/core-api/src/main/java/org/apache/directory/server/core/api/changelog/RevisionOrder.java?ref=fdfa43716a9fe8ff373b928048788b27f3ccb5bc",
                "deletions": 1,
                "filename": "core-api/src/main/java/org/apache/directory/server/core/api/changelog/RevisionOrder.java",
                "patch": "@@ -34,7 +34,7 @@\n     private final boolean ascending;\n \n \n-    private RevisionOrder( boolean ascending )\n+    RevisionOrder( boolean ascending )\n     {\n         this.ascending = ascending;\n     }",
                "raw_url": "https://github.com/apache/directory-server/raw/fdfa43716a9fe8ff373b928048788b27f3ccb5bc/core-api/src/main/java/org/apache/directory/server/core/api/changelog/RevisionOrder.java",
                "sha": "4491442537cb6c6083fa099e5d6dc929851dbfbb",
                "status": "modified"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/directory-server/blob/fdfa43716a9fe8ff373b928048788b27f3ccb5bc/core-api/src/main/java/org/apache/directory/server/core/api/event/EventType.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/directory-server/contents/core-api/src/main/java/org/apache/directory/server/core/api/event/EventType.java?ref=fdfa43716a9fe8ff373b928048788b27f3ccb5bc",
                "deletions": 1,
                "filename": "core-api/src/main/java/org/apache/directory/server/core/api/event/EventType.java",
                "patch": "@@ -48,7 +48,7 @@\n     private int mask;\n \n \n-    private EventType( int mask )\n+    EventType( int mask )\n     {\n         this.mask = mask;\n     }",
                "raw_url": "https://github.com/apache/directory-server/raw/fdfa43716a9fe8ff373b928048788b27f3ccb5bc/core-api/src/main/java/org/apache/directory/server/core/api/event/EventType.java",
                "sha": "d62442be9b9a198fb76e4ad3a275e75f37a0ada9",
                "status": "modified"
            },
            {
                "additions": 3,
                "blob_url": "https://github.com/apache/directory-server/blob/fdfa43716a9fe8ff373b928048788b27f3ccb5bc/core-api/src/main/java/org/apache/directory/server/core/api/interceptor/context/BindOperationContext.java",
                "changes": 5,
                "contents_url": "https://api.github.com/repos/apache/directory-server/contents/core-api/src/main/java/org/apache/directory/server/core/api/interceptor/context/BindOperationContext.java?ref=fdfa43716a9fe8ff373b928048788b27f3ccb5bc",
                "deletions": 2,
                "filename": "core-api/src/main/java/org/apache/directory/server/core/api/interceptor/context/BindOperationContext.java",
                "patch": "@@ -24,6 +24,7 @@\n import org.apache.directory.api.ldap.model.constants.AuthenticationLevel;\n import org.apache.directory.api.ldap.model.exception.LdapAuthenticationException;\n import org.apache.directory.api.ldap.model.message.MessageTypeEnum;\n+import org.apache.directory.api.ldap.model.name.Dn;\n import org.apache.directory.api.util.Strings;\n import org.apache.directory.server.core.api.CoreSession;\n import org.apache.directory.server.core.api.OperationEnum;\n@@ -88,11 +89,11 @@ public BindOperationContext( CoreSession session )\n     public AuthenticationLevel getAuthenticationLevel() throws LdapAuthenticationException\n     {\n         // First check if the SASL mechanism has been set\n-        if ( ( saslMechanism == null ) )\n+        if ( saslMechanism == null )\n         {\n             // No, it's either a SIMPLE, ANONYMOUS, UNAUTHENT or an error\n             //\n-            if ( dn.isEmpty() )\n+            if ( Dn.isNullOrEmpty( dn ) )\n             {\n                 if ( Strings.isEmpty( credentials ) )\n                 {",
                "raw_url": "https://github.com/apache/directory-server/raw/fdfa43716a9fe8ff373b928048788b27f3ccb5bc/core-api/src/main/java/org/apache/directory/server/core/api/interceptor/context/BindOperationContext.java",
                "sha": "bcf64c52d8a6a85261caa97846fc4bed32d172e6",
                "status": "modified"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/directory-server/blob/fdfa43716a9fe8ff373b928048788b27f3ccb5bc/core-api/src/main/java/org/apache/directory/server/core/api/sp/StoredProcEngine.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/directory-server/contents/core-api/src/main/java/org/apache/directory/server/core/api/sp/StoredProcEngine.java?ref=fdfa43716a9fe8ff373b928048788b27f3ccb5bc",
                "deletions": 1,
                "filename": "core-api/src/main/java/org/apache/directory/server/core/api/sp/StoredProcEngine.java",
                "patch": "@@ -46,7 +46,7 @@\n      * <p>\n      * This method should be called before an attempt to invoke a stored procedure via this Engine.\n      */\n-    void setSPUnitEntry( final Entry spUnit );\n+    void setSPUnitEntry( Entry spUnit );\n \n \n     /**",
                "raw_url": "https://github.com/apache/directory-server/raw/fdfa43716a9fe8ff373b928048788b27f3ccb5bc/core-api/src/main/java/org/apache/directory/server/core/api/sp/StoredProcEngine.java",
                "sha": "1fe450b40399eb029410b7ddc4c9ace23154423e",
                "status": "modified"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/directory-server/blob/fdfa43716a9fe8ff373b928048788b27f3ccb5bc/core-avl/src/main/java/org/apache/directory/server/core/avltree/avl/AvlNode.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/directory-server/contents/core-avl/src/main/java/org/apache/directory/server/core/avltree/avl/AvlNode.java?ref=fdfa43716a9fe8ff373b928048788b27f3ccb5bc",
                "deletions": 1,
                "filename": "core-avl/src/main/java/org/apache/directory/server/core/avltree/avl/AvlNode.java",
                "patch": "@@ -37,7 +37,7 @@\n     T value = null;\n \n \n-    public AvlNode( AvlNode<T> parent, T value )\n+    AvlNode( AvlNode<T> parent, T value )\n     {\n         this.parent = parent;\n         this.value = value;",
                "raw_url": "https://github.com/apache/directory-server/raw/fdfa43716a9fe8ff373b928048788b27f3ccb5bc/core-avl/src/main/java/org/apache/directory/server/core/avltree/avl/AvlNode.java",
                "sha": "2a8417ca4783988f20f3d063424262f341a45716",
                "status": "modified"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/directory-server/blob/fdfa43716a9fe8ff373b928048788b27f3ccb5bc/core-avl/src/main/java/org/apache/directory/server/core/avltree/avl/AvlTreeIterator.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/directory-server/contents/core-avl/src/main/java/org/apache/directory/server/core/avltree/avl/AvlTreeIterator.java?ref=fdfa43716a9fe8ff373b928048788b27f3ccb5bc",
                "deletions": 1,
                "filename": "core-avl/src/main/java/org/apache/directory/server/core/avltree/avl/AvlTreeIterator.java",
                "patch": "@@ -36,7 +36,7 @@\n     private boolean initial = true;\n \n \n-    public AvlTreeIterator( AvlNode<T> root )\n+    AvlTreeIterator( AvlNode<T> root )\n     {\n         this.root = root;\n         findNext();",
                "raw_url": "https://github.com/apache/directory-server/raw/fdfa43716a9fe8ff373b928048788b27f3ccb5bc/core-avl/src/main/java/org/apache/directory/server/core/avltree/avl/AvlTreeIterator.java",
                "sha": "ad1104581a1a1b947b04c9c3f3ba22048b5af3d1",
                "status": "modified"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/directory-server/blob/fdfa43716a9fe8ff373b928048788b27f3ccb5bc/core-shared/src/main/java/org/apache/directory/server/core/shared/SortedEntryComparator.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/directory-server/contents/core-shared/src/main/java/org/apache/directory/server/core/shared/SortedEntryComparator.java?ref=fdfa43716a9fe8ff373b928048788b27f3ccb5bc",
                "deletions": 1,
                "filename": "core-shared/src/main/java/org/apache/directory/server/core/shared/SortedEntryComparator.java",
                "patch": "@@ -67,7 +67,7 @@\n      * @param mrOid the OID or name of the matchingrule\n      * @param reverse flag to indicate the sort order\n      */\n-    public SortedEntryComparator( AttributeType at, String mrule, boolean reverse, SchemaManager schemaManager ) throws LdapException\n+    SortedEntryComparator( AttributeType at, String mrule, boolean reverse, SchemaManager schemaManager ) throws LdapException\n     {\n         this.type = at;\n         this.reverse = reverse;",
                "raw_url": "https://github.com/apache/directory-server/raw/fdfa43716a9fe8ff373b928048788b27f3ccb5bc/core-shared/src/main/java/org/apache/directory/server/core/shared/SortedEntryComparator.java",
                "sha": "8856bf94cc852a2c8463733832dafba3698fd2ba",
                "status": "modified"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/directory-server/blob/fdfa43716a9fe8ff373b928048788b27f3ccb5bc/interceptors/event/src/main/java/org/apache/directory/server/core/event/DefaultEventService.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/directory-server/contents/interceptors/event/src/main/java/org/apache/directory/server/core/event/DefaultEventService.java?ref=fdfa43716a9fe8ff373b928048788b27f3ccb5bc",
                "deletions": 1,
                "filename": "interceptors/event/src/main/java/org/apache/directory/server/core/event/DefaultEventService.java",
                "patch": "@@ -60,7 +60,7 @@\n      * @param directoryService The associated DirectoryService\n      * @param registrations The list of Registrations\n      */\n-    public DefaultEventService( DirectoryService directoryService )\n+    DefaultEventService( DirectoryService directoryService )\n     {\n         this.directoryService = directoryService;\n         SchemaManager schemaManager = directoryService.getSchemaManager();",
                "raw_url": "https://github.com/apache/directory-server/raw/fdfa43716a9fe8ff373b928048788b27f3ccb5bc/interceptors/event/src/main/java/org/apache/directory/server/core/event/DefaultEventService.java",
                "sha": "84408dc0d258b676cfea993de8da09b4f3278be0",
                "status": "modified"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/directory-server/blob/fdfa43716a9fe8ff373b928048788b27f3ccb5bc/jdbm-partition/src/main/java/org/apache/directory/server/core/partition/impl/btree/jdbm/DupsCursor.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/directory-server/contents/jdbm-partition/src/main/java/org/apache/directory/server/core/partition/impl/btree/jdbm/DupsCursor.java?ref=fdfa43716a9fe8ff373b928048788b27f3ccb5bc",
                "deletions": 1,
                "filename": "jdbm-partition/src/main/java/org/apache/directory/server/core/partition/impl/btree/jdbm/DupsCursor.java",
                "patch": "@@ -92,7 +92,7 @@\n     private boolean valueAvailable;\n \n \n-    public DupsCursor( JdbmTable<K, V> table )\n+    DupsCursor( JdbmTable<K, V> table )\n     {\n         if ( IS_DEBUG )\n         {",
                "raw_url": "https://github.com/apache/directory-server/raw/fdfa43716a9fe8ff373b928048788b27f3ccb5bc/jdbm-partition/src/main/java/org/apache/directory/server/core/partition/impl/btree/jdbm/DupsCursor.java",
                "sha": "577199b367d42817cfd3220aac55d0b64f12d0ed",
                "status": "modified"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/directory-server/blob/fdfa43716a9fe8ff373b928048788b27f3ccb5bc/jdbm-partition/src/main/java/org/apache/directory/server/core/partition/impl/btree/jdbm/NoDupsCursor.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/directory-server/contents/jdbm-partition/src/main/java/org/apache/directory/server/core/partition/impl/btree/jdbm/NoDupsCursor.java?ref=fdfa43716a9fe8ff373b928048788b27f3ccb5bc",
                "deletions": 1,
                "filename": "jdbm-partition/src/main/java/org/apache/directory/server/core/partition/impl/btree/jdbm/NoDupsCursor.java",
                "patch": "@@ -64,7 +64,7 @@\n      * @param table the JDBM Table to build a Cursor over\n      * @throws IOException of there are problems accessing the BTree\n      */\n-    public NoDupsCursor( JdbmTable<K, V> table )\n+    NoDupsCursor( JdbmTable<K, V> table )\n     {\n         if ( IS_DEBUG )\n         {",
                "raw_url": "https://github.com/apache/directory-server/raw/fdfa43716a9fe8ff373b928048788b27f3ccb5bc/jdbm-partition/src/main/java/org/apache/directory/server/core/partition/impl/btree/jdbm/NoDupsCursor.java",
                "sha": "edff4ac6139efc866a4df994ad02004d904ebe7c",
                "status": "modified"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/directory-server/blob/fdfa43716a9fe8ff373b928048788b27f3ccb5bc/ldif-partition/src/main/java/org/apache/directory/server/core/partition/ldif/SingleFileLdifPartition.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/directory-server/contents/ldif-partition/src/main/java/org/apache/directory/server/core/partition/ldif/SingleFileLdifPartition.java?ref=fdfa43716a9fe8ff373b928048788b27f3ccb5bc",
                "deletions": 1,
                "filename": "ldif-partition/src/main/java/org/apache/directory/server/core/partition/ldif/SingleFileLdifPartition.java",
                "patch": "@@ -414,7 +414,7 @@ private void appendLdif( Entry entry ) throws IOException, LdapException\n         private long len;\n \n \n-        public RandomAccessLdifReader() throws LdapException\n+        RandomAccessLdifReader() throws LdapException\n         {\n             try\n             {",
                "raw_url": "https://github.com/apache/directory-server/raw/fdfa43716a9fe8ff373b928048788b27f3ccb5bc/ldif-partition/src/main/java/org/apache/directory/server/core/partition/ldif/SingleFileLdifPartition.java",
                "sha": "6dfc46bc71a02d414a2c210c5be3072d59a02423",
                "status": "modified"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/directory-server/blob/fdfa43716a9fe8ff373b928048788b27f3ccb5bc/mavibot-partition/src/main/java/org/apache/directory/server/core/partition/impl/btree/mavibot/MavibotCursor.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/directory-server/contents/mavibot-partition/src/main/java/org/apache/directory/server/core/partition/impl/btree/mavibot/MavibotCursor.java?ref=fdfa43716a9fe8ff373b928048788b27f3ccb5bc",
                "deletions": 1,
                "filename": "mavibot-partition/src/main/java/org/apache/directory/server/core/partition/impl/btree/mavibot/MavibotCursor.java",
                "patch": "@@ -62,7 +62,7 @@\n      *\n      * @param table the JDBM Table to build a Cursor over\n      */\n-    public MavibotCursor( MavibotTable<K, V> table )\n+    MavibotCursor( MavibotTable<K, V> table )\n     {\n         LOG_CURSOR.debug( \"Creating MavibotCursor {}\", this );\n         this.table = table;",
                "raw_url": "https://github.com/apache/directory-server/raw/fdfa43716a9fe8ff373b928048788b27f3ccb5bc/mavibot-partition/src/main/java/org/apache/directory/server/core/partition/impl/btree/mavibot/MavibotCursor.java",
                "sha": "32910b1c327c9649ea03f3362130fa0848f98246",
                "status": "modified"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/directory-server/blob/fdfa43716a9fe8ff373b928048788b27f3ccb5bc/protocol-dhcp/src/main/java/org/apache/directory/server/dhcp/messages/MessageType.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/directory-server/contents/protocol-dhcp/src/main/java/org/apache/directory/server/dhcp/messages/MessageType.java?ref=fdfa43716a9fe8ff373b928048788b27f3ccb5bc",
                "deletions": 1,
                "filename": "protocol-dhcp/src/main/java/org/apache/directory/server/dhcp/messages/MessageType.java",
                "patch": "@@ -70,7 +70,7 @@ public byte getCode()\n     /**\n      * Private constructor prevents construction outside of this class.\n      */\n-    private MessageType( byte ordinal, String name )\n+    MessageType( byte ordinal, String name )\n     {\n         this.ordinal = ordinal;\n         this.name = name;",
                "raw_url": "https://github.com/apache/directory-server/raw/fdfa43716a9fe8ff373b928048788b27f3ccb5bc/protocol-dhcp/src/main/java/org/apache/directory/server/dhcp/messages/MessageType.java",
                "sha": "e09785b4c51ff179843d7a676ab2db09c28b4df4",
                "status": "modified"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/directory-server/blob/fdfa43716a9fe8ff373b928048788b27f3ccb5bc/protocol-dns/src/main/java/org/apache/directory/server/dns/messages/MessageType.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/directory-server/contents/protocol-dns/src/main/java/org/apache/directory/server/dns/messages/MessageType.java?ref=fdfa43716a9fe8ff373b928048788b27f3ccb5bc",
                "deletions": 1,
                "filename": "protocol-dns/src/main/java/org/apache/directory/server/dns/messages/MessageType.java",
                "patch": "@@ -41,7 +41,7 @@\n     private final byte value;\n \n \n-    private MessageType( int value )\n+    MessageType( int value )\n     {\n         this.value = ( byte ) value;\n     }",
                "raw_url": "https://github.com/apache/directory-server/raw/fdfa43716a9fe8ff373b928048788b27f3ccb5bc/protocol-dns/src/main/java/org/apache/directory/server/dns/messages/MessageType.java",
                "sha": "8206fbc71e55023c53302fe59e1513abb5327465",
                "status": "modified"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/directory-server/blob/fdfa43716a9fe8ff373b928048788b27f3ccb5bc/protocol-dns/src/main/java/org/apache/directory/server/dns/messages/OpCode.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/directory-server/contents/protocol-dns/src/main/java/org/apache/directory/server/dns/messages/OpCode.java?ref=fdfa43716a9fe8ff373b928048788b27f3ccb5bc",
                "deletions": 1,
                "filename": "protocol-dns/src/main/java/org/apache/directory/server/dns/messages/OpCode.java",
                "patch": "@@ -50,7 +50,7 @@\n     private final byte value;\n \n \n-    private OpCode( int value )\n+    OpCode( int value )\n     {\n         this.value = ( byte ) value;\n     }",
                "raw_url": "https://github.com/apache/directory-server/raw/fdfa43716a9fe8ff373b928048788b27f3ccb5bc/protocol-dns/src/main/java/org/apache/directory/server/dns/messages/OpCode.java",
                "sha": "b1f6329a16c804e3a6f4359f659b361adc02f401",
                "status": "modified"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/directory-server/blob/fdfa43716a9fe8ff373b928048788b27f3ccb5bc/protocol-dns/src/main/java/org/apache/directory/server/dns/messages/ProtocolType.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/directory-server/contents/protocol-dns/src/main/java/org/apache/directory/server/dns/messages/ProtocolType.java?ref=fdfa43716a9fe8ff373b928048788b27f3ccb5bc",
                "deletions": 1,
                "filename": "protocol-dns/src/main/java/org/apache/directory/server/dns/messages/ProtocolType.java",
                "patch": "@@ -164,7 +164,7 @@\n     private final byte value;\n \n \n-    private ProtocolType( int value )\n+    ProtocolType( int value )\n     {\n         this.value = ( byte ) value;\n     }",
                "raw_url": "https://github.com/apache/directory-server/raw/fdfa43716a9fe8ff373b928048788b27f3ccb5bc/protocol-dns/src/main/java/org/apache/directory/server/dns/messages/ProtocolType.java",
                "sha": "a22409fc827690ddc03812beab3639f72df2ef4e",
                "status": "modified"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/directory-server/blob/fdfa43716a9fe8ff373b928048788b27f3ccb5bc/protocol-dns/src/main/java/org/apache/directory/server/dns/messages/RecordClass.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/directory-server/contents/protocol-dns/src/main/java/org/apache/directory/server/dns/messages/RecordClass.java?ref=fdfa43716a9fe8ff373b928048788b27f3ccb5bc",
                "deletions": 1,
                "filename": "protocol-dns/src/main/java/org/apache/directory/server/dns/messages/RecordClass.java",
                "patch": "@@ -53,7 +53,7 @@\n     private final short value;\n \n \n-    private RecordClass( int value )\n+    RecordClass( int value )\n     {\n         this.value = ( short ) value;\n     }",
                "raw_url": "https://github.com/apache/directory-server/raw/fdfa43716a9fe8ff373b928048788b27f3ccb5bc/protocol-dns/src/main/java/org/apache/directory/server/dns/messages/RecordClass.java",
                "sha": "19fade152f3edb842c41d4bde70bd5f53d0bd37b",
                "status": "modified"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/directory-server/blob/fdfa43716a9fe8ff373b928048788b27f3ccb5bc/protocol-dns/src/main/java/org/apache/directory/server/dns/messages/RecordType.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/directory-server/contents/protocol-dns/src/main/java/org/apache/directory/server/dns/messages/RecordType.java?ref=fdfa43716a9fe8ff373b928048788b27f3ccb5bc",
                "deletions": 1,
                "filename": "protocol-dns/src/main/java/org/apache/directory/server/dns/messages/RecordType.java",
                "patch": "@@ -194,7 +194,7 @@\n     private final short value;\n \n \n-    private RecordType( int value )\n+    RecordType( int value )\n     {\n         this.value = ( short ) value;\n     }",
                "raw_url": "https://github.com/apache/directory-server/raw/fdfa43716a9fe8ff373b928048788b27f3ccb5bc/protocol-dns/src/main/java/org/apache/directory/server/dns/messages/RecordType.java",
                "sha": "f60c905d7b08f0859e99d2667343a42b9cf6e7cc",
                "status": "modified"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/directory-server/blob/fdfa43716a9fe8ff373b928048788b27f3ccb5bc/protocol-dns/src/main/java/org/apache/directory/server/dns/messages/ResponseCode.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/directory-server/contents/protocol-dns/src/main/java/org/apache/directory/server/dns/messages/ResponseCode.java?ref=fdfa43716a9fe8ff373b928048788b27f3ccb5bc",
                "deletions": 1,
                "filename": "protocol-dns/src/main/java/org/apache/directory/server/dns/messages/ResponseCode.java",
                "patch": "@@ -53,7 +53,7 @@\n     private final byte value;\n \n \n-    private ResponseCode( int value )\n+    ResponseCode( int value )\n     {\n         this.value = ( byte ) value;\n     }",
                "raw_url": "https://github.com/apache/directory-server/raw/fdfa43716a9fe8ff373b928048788b27f3ccb5bc/protocol-dns/src/main/java/org/apache/directory/server/dns/messages/ResponseCode.java",
                "sha": "a64d2888736c9bb013a43213c25eb7a9a3854d2a",
                "status": "modified"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/directory-server/blob/fdfa43716a9fe8ff373b928048788b27f3ccb5bc/protocol-dns/src/main/java/org/apache/directory/server/dns/messages/ServiceType.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/directory-server/contents/protocol-dns/src/main/java/org/apache/directory/server/dns/messages/ServiceType.java?ref=fdfa43716a9fe8ff373b928048788b27f3ccb5bc",
                "deletions": 1,
                "filename": "protocol-dns/src/main/java/org/apache/directory/server/dns/messages/ServiceType.java",
                "patch": "@@ -275,7 +275,7 @@\n     private final byte value;\n \n \n-    private ServiceType( int value )\n+    ServiceType( int value )\n     {\n         this.value = ( byte ) value;\n     }",
                "raw_url": "https://github.com/apache/directory-server/raw/fdfa43716a9fe8ff373b928048788b27f3ccb5bc/protocol-dns/src/main/java/org/apache/directory/server/dns/messages/ServiceType.java",
                "sha": "20c57c249372b051a16c906f5337e4bc23006995",
                "status": "modified"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/directory-server/blob/fdfa43716a9fe8ff373b928048788b27f3ccb5bc/protocol-dns/src/main/java/org/apache/directory/server/dns/store/jndi/DnsCatalog.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/directory-server/contents/protocol-dns/src/main/java/org/apache/directory/server/dns/store/jndi/DnsCatalog.java?ref=fdfa43716a9fe8ff373b928048788b27f3ccb5bc",
                "deletions": 1,
                "filename": "protocol-dns/src/main/java/org/apache/directory/server/dns/store/jndi/DnsCatalog.java",
                "patch": "@@ -41,7 +41,7 @@\n      *\n      * @param map\n      */\n-    public DnsCatalog( Map<String, Object> map )\n+    DnsCatalog( Map<String, Object> map )\n     {\n         this.map = map;\n     }",
                "raw_url": "https://github.com/apache/directory-server/raw/fdfa43716a9fe8ff373b928048788b27f3ccb5bc/protocol-dns/src/main/java/org/apache/directory/server/dns/store/jndi/DnsCatalog.java",
                "sha": "582f6a6ee89d0cb456166a0411c7826ef2073e1a",
                "status": "modified"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/directory-server/blob/fdfa43716a9fe8ff373b928048788b27f3ccb5bc/protocol-ntp/src/main/java/org/apache/directory/server/ntp/messages/LeapIndicatorType.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/directory-server/contents/protocol-ntp/src/main/java/org/apache/directory/server/ntp/messages/LeapIndicatorType.java?ref=fdfa43716a9fe8ff373b928048788b27f3ccb5bc",
                "deletions": 1,
                "filename": "protocol-ntp/src/main/java/org/apache/directory/server/ntp/messages/LeapIndicatorType.java",
                "patch": "@@ -71,7 +71,7 @@\n     /**\n      * Private constructor prevents construction outside of this class.\n      */\n-    private LeapIndicatorType( int ordinal, String name )\n+    LeapIndicatorType( int ordinal, String name )\n     {\n         this.ordinal = ordinal;\n         this.name = name;",
                "raw_url": "https://github.com/apache/directory-server/raw/fdfa43716a9fe8ff373b928048788b27f3ccb5bc/protocol-ntp/src/main/java/org/apache/directory/server/ntp/messages/LeapIndicatorType.java",
                "sha": "4ed6788197b393bd0439a971bea696f1344a910b",
                "status": "modified"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/directory-server/blob/fdfa43716a9fe8ff373b928048788b27f3ccb5bc/protocol-ntp/src/main/java/org/apache/directory/server/ntp/messages/ModeType.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/directory-server/contents/protocol-ntp/src/main/java/org/apache/directory/server/ntp/messages/ModeType.java?ref=fdfa43716a9fe8ff373b928048788b27f3ccb5bc",
                "deletions": 1,
                "filename": "protocol-ntp/src/main/java/org/apache/directory/server/ntp/messages/ModeType.java",
                "patch": "@@ -94,7 +94,7 @@\n     /**\n      * Private constructor prevents construction outside of this class.\n      */\n-    private ModeType( int ordinal, String name )\n+    ModeType( int ordinal, String name )\n     {\n         this.ordinal = ordinal;\n         this.name = name;",
                "raw_url": "https://github.com/apache/directory-server/raw/fdfa43716a9fe8ff373b928048788b27f3ccb5bc/protocol-ntp/src/main/java/org/apache/directory/server/ntp/messages/ModeType.java",
                "sha": "0aae530226cbdd9a865d5182756d2716be14e2fb",
                "status": "modified"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/directory-server/blob/fdfa43716a9fe8ff373b928048788b27f3ccb5bc/protocol-ntp/src/main/java/org/apache/directory/server/ntp/messages/StratumType.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/directory-server/contents/protocol-ntp/src/main/java/org/apache/directory/server/ntp/messages/StratumType.java?ref=fdfa43716a9fe8ff373b928048788b27f3ccb5bc",
                "deletions": 1,
                "filename": "protocol-ntp/src/main/java/org/apache/directory/server/ntp/messages/StratumType.java",
                "patch": "@@ -65,7 +65,7 @@\n     /**\n      * Private constructor prevents construction outside of this class.\n      */\n-    private StratumType( int ordinal, String name )\n+    StratumType( int ordinal, String name )\n     {\n         this.ordinal = ordinal;\n         this.name = name;",
                "raw_url": "https://github.com/apache/directory-server/raw/fdfa43716a9fe8ff373b928048788b27f3ccb5bc/protocol-ntp/src/main/java/org/apache/directory/server/ntp/messages/StratumType.java",
                "sha": "bb73640565c808569cf5bdeab3ff47bb0c1ac3f1",
                "status": "modified"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/directory-server/blob/fdfa43716a9fe8ff373b928048788b27f3ccb5bc/protocol-shared/src/main/java/org/apache/directory/server/protocol/shared/TransportProtocol.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/directory-server/contents/protocol-shared/src/main/java/org/apache/directory/server/protocol/shared/TransportProtocol.java?ref=fdfa43716a9fe8ff373b928048788b27f3ccb5bc",
                "deletions": 1,
                "filename": "protocol-shared/src/main/java/org/apache/directory/server/protocol/shared/TransportProtocol.java",
                "patch": "@@ -32,7 +32,7 @@\n     private final String stringValue;\n \n \n-    private TransportProtocol( int intValue, String stringValue )\n+    TransportProtocol( int intValue, String stringValue )\n     {\n         this.intValue = intValue;\n         this.stringValue = stringValue;",
                "raw_url": "https://github.com/apache/directory-server/raw/fdfa43716a9fe8ff373b928048788b27f3ccb5bc/protocol-shared/src/main/java/org/apache/directory/server/protocol/shared/TransportProtocol.java",
                "sha": "b1296492f0963cbd9aa5c94c1a5a5d7e68b946d4",
                "status": "modified"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/directory-server/blob/fdfa43716a9fe8ff373b928048788b27f3ccb5bc/server-config/src/main/java/org/apache/directory/server/config/ConfigSchemaConstants.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/directory-server/contents/server-config/src/main/java/org/apache/directory/server/config/ConfigSchemaConstants.java?ref=fdfa43716a9fe8ff373b928048788b27f3ccb5bc",
                "deletions": 1,
                "filename": "server-config/src/main/java/org/apache/directory/server/config/ConfigSchemaConstants.java",
                "patch": "@@ -285,7 +285,7 @@\n \n \n     /** A private constructor */\n-    private ConfigSchemaConstants( String value, String oid )\n+    ConfigSchemaConstants( String value, String oid )\n     {\n         this.value = value;\n         this.oid = oid;",
                "raw_url": "https://github.com/apache/directory-server/raw/fdfa43716a9fe8ff373b928048788b27f3ccb5bc/server-config/src/main/java/org/apache/directory/server/config/ConfigSchemaConstants.java",
                "sha": "52b0b6382e9ec50c420d4796d7256d6f9b5c453a",
                "status": "modified"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/directory-server/blob/fdfa43716a9fe8ff373b928048788b27f3ccb5bc/service/src/main/java/org/apache/directory/server/UberjarMain.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/directory-server/contents/service/src/main/java/org/apache/directory/server/UberjarMain.java?ref=fdfa43716a9fe8ff373b928048788b27f3ccb5bc",
                "deletions": 1,
                "filename": "service/src/main/java/org/apache/directory/server/UberjarMain.java",
                "patch": "@@ -73,7 +73,7 @@ public static void main( String[] args ) throws Exception\n         {\n             case START :\n                 // Starts the server\n-                LOG.debug( \"Staring runtime\" );\n+                LOG.debug( \"Starting runtime\" );\n                 instance.start( instanceDirectory );\n \n                 break;",
                "raw_url": "https://github.com/apache/directory-server/raw/fdfa43716a9fe8ff373b928048788b27f3ccb5bc/service/src/main/java/org/apache/directory/server/UberjarMain.java",
                "sha": "6a7ebad17a6c66c93e5e76de2407e792d8546761",
                "status": "modified"
            }
        ],
        "message": "o Fixed some checkstyle error\no Fixed a potential NPE \n\ngit-svn-id: https://svn.apache.org/repos/asf/directory/apacheds/branches/apacheds-value@1770266 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/directory-server/commit/6842891fdb7a96cbcaad27a3c30b4316f6a66a65",
        "repo": "directory-server",
        "unit_tests": [
            "DupsCursorTest.java",
            "NoDupsCursorTest.java",
            "SingleFileLdifPartitionTest.java",
            "RecordClassTest.java"
        ]
    }
}