{
    "tinkerpop_e0f2c8f": {
        "repo": "tinkerpop",
        "message": "no more clearGremlins needed in Gremlin OLAP -- was a bug in memory system due to NPE.",
        "commit": "https://github.com/apache/tinkerpop/commit/e0f2c8fbcec8958aad285c09111c3e6fd33c28d5",
        "parent": "https://github.com/apache/tinkerpop/commit/c6de78a2cbb4a1618b4b43bcd71e9b2376f9a46d",
        "bug_id": "tinkerpop_e0f2c8f",
        "file": [
            {
                "sha": "e8d3448c1ba9be388beb873d3647df8bf4587840",
                "filename": "blueprints/blueprints-tinkergraph/src/main/java/com/tinkerpop/blueprints/tinkergraph/TinkerGraphComputer.java",
                "blob_url": "https://github.com/apache/tinkerpop/blob/e0f2c8fbcec8958aad285c09111c3e6fd33c28d5/blueprints/blueprints-tinkergraph/src/main/java/com/tinkerpop/blueprints/tinkergraph/TinkerGraphComputer.java",
                "raw_url": "https://github.com/apache/tinkerpop/raw/e0f2c8fbcec8958aad285c09111c3e6fd33c28d5/blueprints/blueprints-tinkergraph/src/main/java/com/tinkerpop/blueprints/tinkergraph/TinkerGraphComputer.java",
                "status": "modified",
                "changes": 5,
                "additions": 2,
                "contents_url": "https://api.github.com/repos/apache/tinkerpop/contents/blueprints/blueprints-tinkergraph/src/main/java/com/tinkerpop/blueprints/tinkergraph/TinkerGraphComputer.java?ref=e0f2c8fbcec8958aad285c09111c3e6fd33c28d5",
                "patch": "@@ -46,8 +46,7 @@ public GraphComputer program(final VertexProgram program) {\n             this.vertexMemory.setComputeKeys(this.vertexProgram.getComputeKeys());\n             this.vertexProgram.setup(this.graphMemory);\n \n-            boolean done = false;\n-            while (!done) {\n+            while (true) {\n                 StreamFactory.parallelStream(this.graph.query().vertices()).forEach(vertex ->\n                         this.vertexProgram.execute(((TinkerVertex) vertex).createClone(State.CENTRIC,\n                                 vertex.getId().toString(),\n@@ -56,7 +55,7 @@ public GraphComputer program(final VertexProgram program) {\n                 this.vertexMemory.completeIteration();\n                 this.messenger.completeIteration();\n                 this.graphMemory.incrIteration();\n-                done = this.vertexProgram.terminate(this.graphMemory);\n+                if (this.vertexProgram.terminate(this.graphMemory)) break;\n             }\n \n             this.graphMemory.setRuntime(System.currentTimeMillis() - time);",
                "deletions": 3
            },
            {
                "sha": "bbb2d729b66507bf3462aec5e6a74124b563fa7d",
                "filename": "gremlin/gremlin-java/src/main/java/com/tinkerpop/gremlin/computer/gremlin/GremlinVertexProgram.java",
                "blob_url": "https://github.com/apache/tinkerpop/blob/e0f2c8fbcec8958aad285c09111c3e6fd33c28d5/gremlin/gremlin-java/src/main/java/com/tinkerpop/gremlin/computer/gremlin/GremlinVertexProgram.java",
                "raw_url": "https://github.com/apache/tinkerpop/raw/e0f2c8fbcec8958aad285c09111c3e6fd33c28d5/gremlin/gremlin-java/src/main/java/com/tinkerpop/gremlin/computer/gremlin/GremlinVertexProgram.java",
                "status": "modified",
                "changes": 20,
                "additions": 1,
                "contents_url": "https://api.github.com/repos/apache/tinkerpop/contents/gremlin/gremlin-java/src/main/java/com/tinkerpop/gremlin/computer/gremlin/GremlinVertexProgram.java?ref=e0f2c8fbcec8958aad285c09111c3e6fd33c28d5",
                "patch": "@@ -18,7 +18,6 @@\n import java.util.Arrays;\n import java.util.Iterator;\n import java.util.Map;\n-import java.util.concurrent.atomic.AtomicLong;\n import java.util.function.Supplier;\n \n /**\n@@ -42,16 +41,13 @@ public void setup(final GraphMemory graphMemory) {\n     }\n \n     public void execute(final Vertex vertex, final Messenger<GremlinMessage> messenger, final GraphMemory graphMemory) {\n-        clearGremlins(vertex);\n-        //final AtomicLong currentCounts = new AtomicLong(0l);\n         if (graphMemory.isInitialIteration()) {\n             messenger.sendMessage(vertex, MessageType.Global.of(GREMLIN_MESSAGE, vertex), GremlinMessage.of(vertex, 1l));\n         } else {\n             final Pipe pipe = getCurrentPipe(graphMemory);\n             messenger.receiveMessages(vertex, global).forEach(m -> {\n                 if (m.destination.equals(GremlinMessage.Destination.VERTEX)) {\n                     incrGremlins(vertex, m.counts);\n-                    //currentCounts.incrementAndGet();\n                     pipe.addStarts(new SingleIterator<>(new Holder<>(Pipe.NONE, vertex))); // TODO: use pipe name for paths\n                 } else if (m.destination.equals(GremlinMessage.Destination.EDGE)) {\n                     pipe.addStarts(getEdge(vertex, m));\n@@ -62,13 +58,12 @@ public void execute(final Vertex vertex, final Messenger<GremlinMessage> messeng\n                 }\n             });\n \n-            //vertex.setProperty(GREMLINS,currentCounts.get());\n             pipe.forEachRemaining(h -> {\n                 final Object object = ((Holder<Object>) h).get();\n                 messenger.sendMessage(\n                         vertex,\n                         MessageType.Global.of(GREMLIN_MESSAGE, Messenger.getHostingVertices(object)),\n-                        GremlinMessage.of(object, getGremlins(vertex)));\n+                        GremlinMessage.of(object, 1l));\n             });\n         }\n     }\n@@ -119,18 +114,6 @@ private long getGremlins(final Object object) {\n         }\n     }\n \n-    private void clearGremlins(final Vertex vertex) {\n-        // TODO: WHY DO I HAVE TO DO THIS?\n-        // TODO: THERE SHOULD BE A WAY TO DROP THE MEMORY STRUCTURE OF A BSP-CYCLE IN ONE FELL SWOOP.\n-        vertex.setProperty(GREMLINS, 0l);\n-        vertex.getProperties().values().forEach(p -> p.setAnnotation(GREMLINS, 0l));\n-        vertex.query().direction(Direction.BOTH).edges().forEach(e -> {\n-            e.setProperty(GREMLINS, 0l);\n-            e.getProperties().values().forEach(p -> p.setAnnotation(GREMLINS, 0l));\n-        });\n-    }\n-\n-\n     public boolean terminate(final GraphMemory graphMemory) {\n         Supplier<Gremlin> gremlin = graphMemory.get(GREMLIN_PIPELINE);\n         return !(graphMemory.getIteration() < gremlin.get().getPipes().size());\n@@ -145,7 +128,6 @@ private Pipe getCurrentPipe(final GraphMemory graphMemory) {\n         return (Pipe) gremlin.get().getPipes().get(graphMemory.getIteration());\n     }\n \n-\n     public static Builder create() {\n         return new Builder();\n     }",
                "deletions": 19
            },
            {
                "sha": "0f41e5653b16bd85c976408016b03590b8c0a3dd",
                "filename": "gremlin/gremlin-java/src/test/java/com/tinkerpop/gremlin/computer/gremlin/GremlinVertexProgramTest.java",
                "blob_url": "https://github.com/apache/tinkerpop/blob/e0f2c8fbcec8958aad285c09111c3e6fd33c28d5/gremlin/gremlin-java/src/test/java/com/tinkerpop/gremlin/computer/gremlin/GremlinVertexProgramTest.java",
                "raw_url": "https://github.com/apache/tinkerpop/raw/e0f2c8fbcec8958aad285c09111c3e6fd33c28d5/gremlin/gremlin-java/src/test/java/com/tinkerpop/gremlin/computer/gremlin/GremlinVertexProgramTest.java",
                "status": "modified",
                "changes": 3,
                "additions": 1,
                "contents_url": "https://api.github.com/repos/apache/tinkerpop/contents/gremlin/gremlin-java/src/test/java/com/tinkerpop/gremlin/computer/gremlin/GremlinVertexProgramTest.java?ref=e0f2c8fbcec8958aad285c09111c3e6fd33c28d5",
                "patch": "@@ -2,7 +2,6 @@\n \n import com.tinkerpop.blueprints.Graph;\n import com.tinkerpop.blueprints.computer.ComputeResult;\n-import com.tinkerpop.blueprints.computer.GraphComputer;\n import com.tinkerpop.blueprints.tinkergraph.TinkerFactory;\n import com.tinkerpop.blueprints.util.StreamFactory;\n import com.tinkerpop.gremlin.pipes.Gremlin;\n@@ -22,7 +21,7 @@ public void testGremlinOLAP() throws Exception {\n         Graph g = TinkerFactory.createClassic();\n         ComputeResult result =\n                 g.compute().program(GremlinVertexProgram.create().gremlin(() -> (Gremlin)\n-                        Gremlin.of().out(\"created\").in(\"created\").identity())\n+                        Gremlin.of().out(\"created\").inE(\"created\").identity())\n                         .build())\n                         .submit().get();\n ",
                "deletions": 2
            }
        ],
        "patched_files": [
            "TinkerGraphComputer.java",
            "GremlinVertexProgram.java"
        ],
        "unit_tests": [
            "GremlinVertexProgramTest.java"
        ]
    },
    "tinkerpop_2653ca7": {
        "repo": "tinkerpop",
        "message": "added a nice error message if Spark hasn't been created. Much better than NullPointerException.",
        "commit": "https://github.com/apache/tinkerpop/commit/2653ca787417a789915f9a3bc13e641c21f10dfd",
        "parent": "https://github.com/apache/tinkerpop/commit/4fd1305ff7daa13aa6b006b0a81e372057a32628",
        "bug_id": "tinkerpop_2653ca7",
        "file": [
            {
                "sha": "2761efb1f35f8a842aa6d3cf070a7f4712ef0035",
                "filename": "spark-gremlin/src/main/java/org/apache/tinkerpop/gremlin/spark/structure/Spark.java",
                "blob_url": "https://github.com/apache/tinkerpop/blob/2653ca787417a789915f9a3bc13e641c21f10dfd/spark-gremlin/src/main/java/org/apache/tinkerpop/gremlin/spark/structure/Spark.java",
                "raw_url": "https://github.com/apache/tinkerpop/raw/2653ca787417a789915f9a3bc13e641c21f10dfd/spark-gremlin/src/main/java/org/apache/tinkerpop/gremlin/spark/structure/Spark.java",
                "status": "modified",
                "changes": 2,
                "additions": 2,
                "contents_url": "https://api.github.com/repos/apache/tinkerpop/contents/spark-gremlin/src/main/java/org/apache/tinkerpop/gremlin/spark/structure/Spark.java?ref=2653ca787417a789915f9a3bc13e641c21f10dfd",
                "patch": "@@ -67,6 +67,8 @@ public static SparkContext getContext() {\n     }\n \n     public static void refresh() {\n+        if (null == CONTEXT)\n+            throw new IllegalStateException(\"The Spark context has not been created.\");\n         final Set<String> keepNames = new HashSet<>();\n         for (final RDD<?> rdd : JavaConversions.asJavaIterable(CONTEXT.persistentRdds().values())) {\n             if (null != rdd.name()) {",
                "deletions": 0
            }
        ],
        "patched_files": [
            "Spark.java"
        ],
        "unit_tests": [
            "SparkTest.java"
        ]
    },
    "tinkerpop_1d715d3": {
        "repo": "tinkerpop",
        "message": "added a group().profile() test to ProfileTest to verify no NPE.",
        "commit": "https://github.com/apache/tinkerpop/commit/1d715d3d7e9d532e7ea3713f4c4c20e0472b88ba",
        "parent": "https://github.com/apache/tinkerpop/commit/3d70c3d15d4591acab84420f86991cd98a187c38",
        "bug_id": "tinkerpop_1d715d3",
        "file": [
            {
                "sha": "f2dbfbf6e8f8e0768605391029bfa4b1f1b3ef82",
                "filename": "gremlin-groovy-test/src/main/groovy/org/apache/tinkerpop/gremlin/process/traversal/step/map/GroovyProfileTest.groovy",
                "blob_url": "https://github.com/apache/tinkerpop/blob/1d715d3d7e9d532e7ea3713f4c4c20e0472b88ba/gremlin-groovy-test/src/main/groovy/org/apache/tinkerpop/gremlin/process/traversal/step/map/GroovyProfileTest.groovy",
                "raw_url": "https://github.com/apache/tinkerpop/raw/1d715d3d7e9d532e7ea3713f4c4c20e0472b88ba/gremlin-groovy-test/src/main/groovy/org/apache/tinkerpop/gremlin/process/traversal/step/map/GroovyProfileTest.groovy",
                "status": "modified",
                "changes": 5,
                "additions": 5,
                "contents_url": "https://api.github.com/repos/apache/tinkerpop/contents/gremlin-groovy-test/src/main/groovy/org/apache/tinkerpop/gremlin/process/traversal/step/map/GroovyProfileTest.groovy?ref=1d715d3d7e9d532e7ea3713f4c4c20e0472b88ba",
                "patch": "@@ -84,6 +84,11 @@ public abstract class GroovyProfileTest {\n         public Traversal<Vertex, TraversalMetrics> get_g_V_hasLabelXpersonX_pageRank_byXrankX_byXbothEX_rank_profile() {\n             new ScriptTraversal<>(g, \"gremlin-groovy\", \"g.V.hasLabel('person').pageRank.by('rank').by(bothE()).rank.profile()\")\n         }\n+\n+        @Override\n+        public Traversal<Vertex, TraversalMetrics> get_g_V_groupXmX_profile() {\n+            new ScriptTraversal<>(g, \"gremlin-groovy\", \"g.V.group('m').profile\")\n+        }\n     }\n }\n ",
                "deletions": 0
            },
            {
                "sha": "1af6ba3f1ac84892ea30fe18d5fdb63700ed6973",
                "filename": "gremlin-test/src/main/java/org/apache/tinkerpop/gremlin/process/traversal/step/map/ProfileTest.java",
                "blob_url": "https://github.com/apache/tinkerpop/blob/1d715d3d7e9d532e7ea3713f4c4c20e0472b88ba/gremlin-test/src/main/java/org/apache/tinkerpop/gremlin/process/traversal/step/map/ProfileTest.java",
                "raw_url": "https://github.com/apache/tinkerpop/raw/1d715d3d7e9d532e7ea3713f4c4c20e0472b88ba/gremlin-test/src/main/java/org/apache/tinkerpop/gremlin/process/traversal/step/map/ProfileTest.java",
                "status": "modified",
                "changes": 17,
                "additions": 17,
                "contents_url": "https://api.github.com/repos/apache/tinkerpop/contents/gremlin-test/src/main/java/org/apache/tinkerpop/gremlin/process/traversal/step/map/ProfileTest.java?ref=1d715d3d7e9d532e7ea3713f4c4c20e0472b88ba",
                "patch": "@@ -54,6 +54,7 @@\n import static org.apache.tinkerpop.gremlin.LoadGraphWith.GraphData.MODERN;\n import static org.apache.tinkerpop.gremlin.process.traversal.dsl.graph.__.both;\n import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertFalse;\n import static org.junit.Assert.assertNotEquals;\n import static org.junit.Assert.assertTrue;\n import static org.junit.Assert.fail;\n@@ -88,6 +89,8 @@\n \n     public abstract Traversal<Vertex, TraversalMetrics> get_g_V_hasLabelXpersonX_pageRank_byXrankX_byXbothEX_rank_profile();\n \n+    public abstract Traversal<Vertex, TraversalMetrics> get_g_V_groupXmX_profile();\n+\n     @Test\n     @LoadGraphWith(MODERN)\n     public void modern_V_out_out_profile() {\n@@ -409,6 +412,15 @@ public void g_V_hasLabelXpersonX_pageRank_byXrankX_byXbothEX_rank_profile() {\n         }\n     }\n \n+    @Test\n+    @LoadGraphWith(MODERN)\n+    public void g_V_groupXmX_profile() {\n+        final Traversal<Vertex, TraversalMetrics> traversal = get_g_V_groupXmX_profile();\n+        printTraversalForm(traversal);\n+        traversal.next();\n+        assertFalse(traversal.hasNext());\n+    }\n+\n     private static boolean onGraphComputer(final Traversal.Admin<?, ?> traversal) {\n         return !TraversalHelper.getStepsOfClass(TraversalVertexProgramStep.class, TraversalHelper.getRootTraversal(traversal)).isEmpty();\n     }\n@@ -496,5 +508,10 @@ private static boolean onGraphComputer(final Traversal.Admin<?, ?> traversal) {\n         public Traversal<Vertex, TraversalMetrics> get_g_V_hasLabelXpersonX_pageRank_byXrankX_byXbothEX_rank_profile() {\n             return g.V().hasLabel(\"person\").pageRank().by(\"rank\").by(__.bothE()).values(\"rank\").profile();\n         }\n+\n+        @Override\n+        public Traversal<Vertex, TraversalMetrics> get_g_V_groupXmX_profile() {\n+            return g.V().group(\"m\").profile();\n+        }\n     }\n }",
                "deletions": 0
            }
        ],
        "patched_files": [],
        "unit_tests": [
            "ProfileTest.java"
        ]
    },
    "tinkerpop_1e0c581": {
        "repo": "tinkerpop",
        "message": "Removed potential for NPEs when validating IDs given to vertices()/edges()",
        "commit": "https://github.com/apache/tinkerpop/commit/1e0c581c90b67a44121f8ec7258ea171e7c0bfe7",
        "parent": "https://github.com/apache/tinkerpop/commit/099e6bc62468516974a3e76531d00444dbe89edc",
        "bug_id": "tinkerpop_1e0c581",
        "file": [
            {
                "sha": "af7245ac0a959d081ebd5674b49b76f69b5ed3e2",
                "filename": "tinkergraph-gremlin/src/main/java/org/apache/tinkerpop/gremlin/tinkergraph/structure/TinkerGraph.java",
                "blob_url": "https://github.com/apache/tinkerpop/blob/1e0c581c90b67a44121f8ec7258ea171e7c0bfe7/tinkergraph-gremlin/src/main/java/org/apache/tinkerpop/gremlin/tinkergraph/structure/TinkerGraph.java",
                "raw_url": "https://github.com/apache/tinkerpop/raw/1e0c581c90b67a44121f8ec7258ea171e7c0bfe7/tinkergraph-gremlin/src/main/java/org/apache/tinkerpop/gremlin/tinkergraph/structure/TinkerGraph.java",
                "status": "modified",
                "changes": 11,
                "additions": 8,
                "contents_url": "https://api.github.com/repos/apache/tinkerpop/contents/tinkergraph-gremlin/src/main/java/org/apache/tinkerpop/gremlin/tinkergraph/structure/TinkerGraph.java?ref=1e0c581c90b67a44121f8ec7258ea171e7c0bfe7",
                "patch": "@@ -351,9 +351,14 @@ public Features features() {\n     }\n \n     private void validateHomogenousIds(final List<Object> ids) {\n-        final Class firstClass = ids.get(0).getClass();\n-        for (Object id : ids) {\n-            if (!id.getClass().equals(firstClass))\n+        final Iterator<Object> iterator = ids.iterator();\n+        Object id = iterator.next();\n+        if (id == null)\n+            throw Graph.Exceptions.idArgsMustBeEitherIdOrElement();\n+        final Class firstClass = id.getClass();\n+        while (iterator.hasNext()) {\n+            id = iterator.next();\n+            if (id == null || !id.getClass().equals(firstClass))\n                 throw Graph.Exceptions.idArgsMustBeEitherIdOrElement();\n         }\n     }",
                "deletions": 3
            }
        ],
        "patched_files": [
            "TinkerGraph.java"
        ],
        "unit_tests": [
            "TinkerGraphTest.java"
        ]
    },
    "tinkerpop_590f5b7": {
        "repo": "tinkerpop",
        "message": "RepeatStep clauses can only be set at most one time to limit user confusion of potentially doing times().repeat().until() and getting a NullPointerException.",
        "commit": "https://github.com/apache/tinkerpop/commit/590f5b797592dd51a71110d4b0e4afe41f486dfa",
        "parent": "https://github.com/apache/tinkerpop/commit/c087fbcc8fb2530ffba0f2d365785dfadc27bed4",
        "bug_id": "tinkerpop_590f5b7",
        "file": [
            {
                "sha": "78f3c0ef512afec711554cc899a47bd3c7be3dac",
                "filename": "CHANGELOG.asciidoc",
                "blob_url": "https://github.com/apache/tinkerpop/blob/590f5b797592dd51a71110d4b0e4afe41f486dfa/CHANGELOG.asciidoc",
                "raw_url": "https://github.com/apache/tinkerpop/raw/590f5b797592dd51a71110d4b0e4afe41f486dfa/CHANGELOG.asciidoc",
                "status": "modified",
                "changes": 1,
                "additions": 1,
                "contents_url": "https://api.github.com/repos/apache/tinkerpop/contents/CHANGELOG.asciidoc?ref=590f5b797592dd51a71110d4b0e4afe41f486dfa",
                "patch": "@@ -25,6 +25,7 @@ image::https://raw.githubusercontent.com/apache/incubator-tinkerpop/master/docs/\n TinkerPop 3.0.2 (NOT OFFICIALLY RELEASED YET)\n ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n \n+* The `RepeatStep` clauses (`until()`,`emit()`,`repeat()`) can only be set at most one time in order to prevent user confusion.\n * Fixed a `clone()` bug in `RepeatStep`, `TreeStep`, `GroupCountStep`, `GroupStep`, and `TraversalRing`.\n * Fixed a thread context bug in `TinkerGraphComputer`.\n * Improved session closing for transactional graphs during shutdown of Gremlin Server.",
                "deletions": 0
            },
            {
                "sha": "2ecdde20a15b816c5c02fd5919fd1dc69b4272a8",
                "filename": "gremlin-core/src/main/java/org/apache/tinkerpop/gremlin/process/traversal/step/branch/RepeatStep.java",
                "blob_url": "https://github.com/apache/tinkerpop/blob/590f5b797592dd51a71110d4b0e4afe41f486dfa/gremlin-core/src/main/java/org/apache/tinkerpop/gremlin/process/traversal/step/branch/RepeatStep.java",
                "raw_url": "https://github.com/apache/tinkerpop/raw/590f5b797592dd51a71110d4b0e4afe41f486dfa/gremlin-core/src/main/java/org/apache/tinkerpop/gremlin/process/traversal/step/branch/RepeatStep.java",
                "status": "modified",
                "changes": 6,
                "additions": 6,
                "contents_url": "https://api.github.com/repos/apache/tinkerpop/contents/gremlin-core/src/main/java/org/apache/tinkerpop/gremlin/process/traversal/step/branch/RepeatStep.java?ref=590f5b797592dd51a71110d4b0e4afe41f486dfa",
                "patch": "@@ -61,17 +61,23 @@ public RepeatStep(final Traversal.Admin traversal) {\n \n     @SuppressWarnings(\"unchecked\")\n     public void setRepeatTraversal(final Traversal.Admin<S, S> repeatTraversal) {\n+        if (null != this.repeatTraversal)\n+            throw new IllegalStateException(\"The repeat()-step already has its loop section declared: \" + this);\n         this.repeatTraversal = repeatTraversal; // .clone();\n         this.repeatTraversal.addStep(new RepeatEndStep(this.repeatTraversal));\n         this.integrateChild(this.repeatTraversal);\n     }\n \n     public void setUntilTraversal(final Traversal.Admin<S, ?> untilTraversal) {\n+        if (null != this.untilTraversal)\n+            throw new IllegalStateException(\"The repeat()-step already has its until()-modulator declared: \" + this);\n         if (null == this.repeatTraversal) this.untilFirst = true;\n         this.untilTraversal = this.integrateChild(untilTraversal);\n     }\n \n     public void setEmitTraversal(final Traversal.Admin<S, ?> emitTraversal) {\n+        if (null != this.emitTraversal)\n+            throw new IllegalStateException(\"The repeat()-step already has its emit()-modulator declared: \" + this);\n         if (null == this.repeatTraversal) this.emitFirst = true;\n         this.emitTraversal = this.integrateChild(emitTraversal);\n     }",
                "deletions": 0
            }
        ],
        "patched_files": [
            "RepeatStep.java"
        ],
        "unit_tests": [
            "RepeatStepTest.java"
        ]
    },
    "tinkerpop_61a3d12": {
        "repo": "tinkerpop",
        "message": "Fixed an NPE in GraphMLReader where if the <edge> doesn't have an ID field and the base graph supports ids, then an NPE happens. Added a test case to verifiy working behavior. Super simple fix. CTR.",
        "commit": "https://github.com/apache/tinkerpop/commit/61a3d125c48869c8e5fdaf195abbb46fbaaf0c30",
        "parent": "https://github.com/apache/tinkerpop/commit/9ea319d5d102432312f2044fc72e3668c1a8f7e2",
        "bug_id": "tinkerpop_61a3d12",
        "file": [
            {
                "sha": "32891661d61896790566ea7cb555d39a7024840e",
                "filename": "gremlin-core/src/main/java/org/apache/tinkerpop/gremlin/structure/io/graphml/GraphMLReader.java",
                "blob_url": "https://github.com/apache/tinkerpop/blob/61a3d125c48869c8e5fdaf195abbb46fbaaf0c30/gremlin-core/src/main/java/org/apache/tinkerpop/gremlin/structure/io/graphml/GraphMLReader.java",
                "raw_url": "https://github.com/apache/tinkerpop/raw/61a3d125c48869c8e5fdaf195abbb46fbaaf0c30/gremlin-core/src/main/java/org/apache/tinkerpop/gremlin/structure/io/graphml/GraphMLReader.java",
                "status": "modified",
                "changes": 19,
                "additions": 10,
                "contents_url": "https://api.github.com/repos/apache/tinkerpop/contents/gremlin-core/src/main/java/org/apache/tinkerpop/gremlin/structure/io/graphml/GraphMLReader.java?ref=61a3d125c48869c8e5fdaf195abbb46fbaaf0c30",
                "patch": "@@ -19,10 +19,10 @@\n package org.apache.tinkerpop.gremlin.structure.io.graphml;\n \n import org.apache.tinkerpop.gremlin.structure.Direction;\n-import org.apache.tinkerpop.gremlin.structure.Property;\n-import org.apache.tinkerpop.gremlin.structure.T;\n import org.apache.tinkerpop.gremlin.structure.Edge;\n import org.apache.tinkerpop.gremlin.structure.Graph;\n+import org.apache.tinkerpop.gremlin.structure.Property;\n+import org.apache.tinkerpop.gremlin.structure.T;\n import org.apache.tinkerpop.gremlin.structure.Vertex;\n import org.apache.tinkerpop.gremlin.structure.VertexProperty;\n import org.apache.tinkerpop.gremlin.structure.io.GraphReader;\n@@ -72,7 +72,7 @@ private GraphMLReader(final Builder builder) {\n \n     @Override\n     public void readGraph(final InputStream graphInputStream, final Graph graphToWriteTo) throws IOException {\n-        final Map<Object,Vertex> cache = new HashMap<>();\n+        final Map<Object, Vertex> cache = new HashMap<>();\n         final AtomicLong counter = new AtomicLong(0);\n         final boolean supportsTx = graphToWriteTo.features().graph().supportsTransactions();\n         final Graph.Features.EdgeFeatures edgeFeatures = graphToWriteTo.features().edge();\n@@ -186,9 +186,9 @@ public void readGraph(final InputStream graphInputStream, final Graph graphToWri\n                         isInVertex = false;\n                     } else if (elementName.equals(GraphMLTokens.EDGE)) {\n                         final Object[] propsAsArray = edgeProps.entrySet().stream().flatMap(e -> Stream.of(e.getKey(), e.getValue())).toArray();\n-                        final Object[] propsReady = edgeFeatures.willAllowId(edgeId) ? ElementHelper.upsert(propsAsArray, T.id, edgeId) : propsAsArray;\n-                        \n-\t\t\tedgeOutVertex.addEdge(null == edgeLabel ? Edge.DEFAULT_LABEL : edgeLabel, edgeInVertex, propsReady);\n+                        final Object[] propsReady = null != edgeId && edgeFeatures.willAllowId(edgeId) ? ElementHelper.upsert(propsAsArray, T.id, edgeId) : propsAsArray;\n+\n+                        edgeOutVertex.addEdge(null == edgeLabel ? Edge.DEFAULT_LABEL : edgeLabel, edgeInVertex, propsReady);\n \n                         if (supportsTx && counter.incrementAndGet() % batchSize == 0)\n                             graphToWriteTo.tx().commit();\n@@ -292,7 +292,7 @@ public Property readProperty(final InputStream inputStream,\n \n     private static Vertex findOrCreate(final Object id, final Graph graphToWriteTo,\n                                        final Graph.Features.VertexFeatures features,\n-                                       final Map<Object,Vertex> cache, final boolean asVertex, final Object... args) {\n+                                       final Map<Object, Vertex> cache, final boolean asVertex, final Object... args) {\n         if (cache.containsKey(id)) {\n             // if the request to findOrCreate come from a vertex then AND the vertex was already created, that means\n             // that the vertex was created by an edge that arrived first in the stream (allowable via GraphML\n@@ -306,7 +306,7 @@ private static Vertex findOrCreate(final Object id, final Graph graphToWriteTo,\n                 return cache.get(id);\n             }\n         } else {\n-            final Object [] argsReady = features.willAllowId(id) ? ElementHelper.upsert(args, T.id, id) : args;\n+            final Object[] argsReady = features.willAllowId(id) ? ElementHelper.upsert(args, T.id, id) : args;\n             final Vertex v = graphToWriteTo.addVertex(argsReady);\n             cache.put(id, v);\n             return v;\n@@ -344,7 +344,8 @@ public static Builder build() {\n         private boolean strict = true;\n         private long batchSize = 10000;\n \n-        private Builder() { }\n+        private Builder() {\n+        }\n \n         /**\n          * When set to true, exceptions will be thrown if a property value cannot be coerced to the expected data",
                "deletions": 9
            },
            {
                "sha": "a523b15682147902e32a266345989acc24b601e2",
                "filename": "gremlin-test/src/main/java/org/apache/tinkerpop/gremlin/structure/io/IoTest.java",
                "blob_url": "https://github.com/apache/tinkerpop/blob/61a3d125c48869c8e5fdaf195abbb46fbaaf0c30/gremlin-test/src/main/java/org/apache/tinkerpop/gremlin/structure/io/IoTest.java",
                "raw_url": "https://github.com/apache/tinkerpop/raw/61a3d125c48869c8e5fdaf195abbb46fbaaf0c30/gremlin-test/src/main/java/org/apache/tinkerpop/gremlin/structure/io/IoTest.java",
                "status": "modified",
                "changes": 25,
                "additions": 22,
                "contents_url": "https://api.github.com/repos/apache/tinkerpop/contents/gremlin-test/src/main/java/org/apache/tinkerpop/gremlin/structure/io/IoTest.java?ref=61a3d125c48869c8e5fdaf195abbb46fbaaf0c30",
                "patch": "@@ -79,7 +79,12 @@\n import static org.apache.tinkerpop.gremlin.structure.Graph.Features.ElementFeatures.FEATURE_ANY_IDS;\n import static org.apache.tinkerpop.gremlin.structure.Graph.Features.VariableFeatures.FEATURE_VARIABLES;\n import static org.apache.tinkerpop.gremlin.structure.Graph.Features.VertexFeatures.FEATURE_USER_SUPPLIED_IDS;\n-import static org.apache.tinkerpop.gremlin.structure.Graph.Features.VertexPropertyFeatures.*;\n+import static org.apache.tinkerpop.gremlin.structure.Graph.Features.VertexPropertyFeatures.FEATURE_BOOLEAN_VALUES;\n+import static org.apache.tinkerpop.gremlin.structure.Graph.Features.VertexPropertyFeatures.FEATURE_DOUBLE_VALUES;\n+import static org.apache.tinkerpop.gremlin.structure.Graph.Features.VertexPropertyFeatures.FEATURE_FLOAT_VALUES;\n+import static org.apache.tinkerpop.gremlin.structure.Graph.Features.VertexPropertyFeatures.FEATURE_INTEGER_VALUES;\n+import static org.apache.tinkerpop.gremlin.structure.Graph.Features.VertexPropertyFeatures.FEATURE_LONG_VALUES;\n+import static org.apache.tinkerpop.gremlin.structure.Graph.Features.VertexPropertyFeatures.FEATURE_STRING_VALUES;\n import static org.apache.tinkerpop.gremlin.structure.io.IoCore.graphson;\n import static org.hamcrest.core.Is.is;\n import static org.junit.Assert.assertEquals;\n@@ -183,6 +188,19 @@ public void shouldReadGraphMLWithoutStrictOption() throws IOException {\n             assertEquals(\"junk\", v.<String>value(\"n\"));\n         }\n \n+        @Test\n+        @FeatureRequirement(featureClass = Graph.Features.EdgeFeatures.class, feature = Graph.Features.EdgeFeatures.FEATURE_ADD_EDGES)\n+        @FeatureRequirement(featureClass = Graph.Features.VertexFeatures.class, feature = Graph.Features.VertexFeatures.FEATURE_ADD_VERTICES)\n+        public void shouldReadGraphMLWithoutEdgeIds() throws IOException {\n+            final GraphReader reader = GraphMLReader.build().strict(false).create();\n+            try (final InputStream stream = IoTest.class.getResourceAsStream(TestHelper.convertPackageToResourcePath(GraphMLResourceAccess.class) + \"graph-no-edge-ids.xml\")) {\n+                reader.readGraph(stream, graph);\n+            }\n+            assertEquals(1, IteratorUtils.count(graph.edges()));\n+            assertEquals(2, IteratorUtils.count(graph.vertices()));\n+        }\n+\n+\n         @Test(expected = NumberFormatException.class)\n         @FeatureRequirement(featureClass = Graph.Features.EdgeFeatures.class, feature = Graph.Features.EdgeFeatures.FEATURE_ADD_EDGES)\n         @FeatureRequirement(featureClass = Graph.Features.VertexFeatures.class, feature = Graph.Features.VertexFeatures.FEATURE_ADD_VERTICES)\n@@ -318,7 +336,8 @@ public void shouldReadWriteSelfLoopingEdges() {\n             v1.addEdge(\"SELFLOOP\", v1);\n \n             final Configuration targetConf = graphProvider.newGraphConfiguration(\"target\", this.getClass(), name.getMethodName(), null);\n-            final Graph target = graphProvider.openTestGraph(targetConf);;\n+            final Graph target = graphProvider.openTestGraph(targetConf);\n+            ;\n             try (ByteArrayOutputStream os = new ByteArrayOutputStream()) {\n                 source.io(IoCore.gryo()).writer().create().writeGraph(os, source);\n                 try (ByteArrayInputStream is = new ByteArrayInputStream(os.toByteArray())) {\n@@ -764,7 +783,7 @@ public static void assertNoEdgeGraph(final Graph g1, final boolean assertDouble,\n         final List<Edge> v1Edges = IteratorUtils.list(v1.edges(Direction.BOTH));\n         assertEquals(1, v1Edges.size());\n         v1Edges.forEach(e -> {\n-        \tif (e.inVertex().value(\"name\").equals(\"vadas\")) {\n+            if (e.inVertex().value(\"name\").equals(\"vadas\")) {\n                 assertEquals(Edge.DEFAULT_LABEL, e.label());\n                 if (assertDouble)\n                     assertWeightLoosely(0.5d, e);",
                "deletions": 3
            },
            {
                "sha": "fe8f8203c06226e08d6b3c948f1dc126d6ef5263",
                "filename": "gremlin-test/src/main/resources/org/apache/tinkerpop/gremlin/structure/io/graphml/graph-no-edge-ids.xml",
                "blob_url": "https://github.com/apache/tinkerpop/blob/61a3d125c48869c8e5fdaf195abbb46fbaaf0c30/gremlin-test/src/main/resources/org/apache/tinkerpop/gremlin/structure/io/graphml/graph-no-edge-ids.xml",
                "raw_url": "https://github.com/apache/tinkerpop/raw/61a3d125c48869c8e5fdaf195abbb46fbaaf0c30/gremlin-test/src/main/resources/org/apache/tinkerpop/gremlin/structure/io/graphml/graph-no-edge-ids.xml",
                "status": "added",
                "changes": 30,
                "additions": 30,
                "contents_url": "https://api.github.com/repos/apache/tinkerpop/contents/gremlin-test/src/main/resources/org/apache/tinkerpop/gremlin/structure/io/graphml/graph-no-edge-ids.xml?ref=61a3d125c48869c8e5fdaf195abbb46fbaaf0c30",
                "patch": "@@ -0,0 +1,30 @@\n+<!--\n+  ~  Licensed to the Apache Software Foundation (ASF) under one\n+  ~  or more contributor license agreements.  See the NOTICE file\n+  ~  distributed with this work for additional information\n+  ~  regarding copyright ownership.  The ASF licenses this file\n+  ~  to you under the Apache License, Version 2.0 (the\n+  ~  \"License\"); you may not use this file except in compliance\n+  ~  with the License.  You may obtain a copy of the License at\n+  ~\n+  ~  http://www.apache.org/licenses/LICENSE-2.0\n+  ~\n+  ~  Unless required by applicable law or agreed to in writing,\n+  ~  software distributed under the License is distributed on an\n+  ~  \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+  ~  KIND, either express or implied.  See the License for the\n+  ~  specific language governing permissions and limitations\n+  ~  under the License.\n+  -->\n+<graphml xmlns=\"http://graphml.graphdrawing.org/xmlns\"\n+         xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+         xsi:schemaLocation=\"http://graphml.graphdrawing.org/xmlns\n+        http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd\">\n+    <graph id=\"G\" edgedefault=\"directed\">\n+        <node id=\"1\">\n+        </node>\n+        <node id=\"2\">\n+        </node>\n+        <edge source=\"1\" target=\"2\"></edge>\n+    </graph>\n+</graphml>",
                "deletions": 0
            }
        ],
        "patched_files": [
            "GraphMLReader.java",
            "Io.java"
        ],
        "unit_tests": [
            "IoTest.java"
        ]
    },
    "tinkerpop_82295fe": {
        "repo": "tinkerpop",
        "message": "an untested addEdge method is now tested and the NPE thrown is now not there. Thank you @dalaro.",
        "commit": "https://github.com/apache/tinkerpop/commit/82295fe1eaaeab86517c191c1d44dfe3f0b34d2a",
        "parent": "https://github.com/apache/tinkerpop/commit/0563ec36bb823d617acde6a15217c2b61471408d",
        "bug_id": "tinkerpop_82295fe",
        "file": [
            {
                "sha": "f51663055068b592135184bf86bfea5c19f3c31f",
                "filename": "gremlin-core/src/main/java/org/apache/tinkerpop/gremlin/structure/util/star/StarGraph.java",
                "blob_url": "https://github.com/apache/tinkerpop/blob/82295fe1eaaeab86517c191c1d44dfe3f0b34d2a/gremlin-core/src/main/java/org/apache/tinkerpop/gremlin/structure/util/star/StarGraph.java",
                "raw_url": "https://github.com/apache/tinkerpop/raw/82295fe1eaaeab86517c191c1d44dfe3f0b34d2a/gremlin-core/src/main/java/org/apache/tinkerpop/gremlin/structure/util/star/StarGraph.java",
                "status": "modified",
                "changes": 4,
                "additions": 3,
                "contents_url": "https://api.github.com/repos/apache/tinkerpop/contents/gremlin-core/src/main/java/org/apache/tinkerpop/gremlin/structure/util/star/StarGraph.java?ref=82295fe1eaaeab86517c191c1d44dfe3f0b34d2a",
                "patch": "@@ -290,7 +290,9 @@ public void dropVertexProperties(final String... propertyKeys) {\n         public Edge addEdge(final String label, final Vertex inVertex, final Object... keyValues) {\n             final Edge edge = this.addOutEdge(label, inVertex, keyValues);\n             if (inVertex.equals(this)) {\n-                List<Edge> inE = inEdges.get(label);\n+                if(null == this.inEdges)\n+                    this.inEdges = new HashMap<>();\n+                List<Edge> inE = this.inEdges.get(label);\n                 if (null == inE) {\n                     inE = new ArrayList<>();\n                     this.inEdges.put(label, inE);",
                "deletions": 1
            },
            {
                "sha": "034afad089525e69be021a99a39538238946cdac",
                "filename": "gremlin-test/src/main/java/org/apache/tinkerpop/gremlin/structure/util/star/StarGraphTest.java",
                "blob_url": "https://github.com/apache/tinkerpop/blob/82295fe1eaaeab86517c191c1d44dfe3f0b34d2a/gremlin-test/src/main/java/org/apache/tinkerpop/gremlin/structure/util/star/StarGraphTest.java",
                "raw_url": "https://github.com/apache/tinkerpop/raw/82295fe1eaaeab86517c191c1d44dfe3f0b34d2a/gremlin-test/src/main/java/org/apache/tinkerpop/gremlin/structure/util/star/StarGraphTest.java",
                "status": "modified",
                "changes": 16,
                "additions": 16,
                "contents_url": "https://api.github.com/repos/apache/tinkerpop/contents/gremlin-test/src/main/java/org/apache/tinkerpop/gremlin/structure/util/star/StarGraphTest.java?ref=82295fe1eaaeab86517c191c1d44dfe3f0b34d2a",
                "patch": "@@ -229,8 +229,24 @@ public void shouldHandleSelfLoops() {\n         TestHelper.validateVertexEquality(vertex, starGraph.getStarVertex(), true);\n         TestHelper.validateVertexEquality(vertex, starGraphCopy.getStarVertex(), true);\n         TestHelper.validateVertexEquality(starGraph.getStarVertex(), starGraphCopy.getStarVertex(), true);\n+        // test native non-clone-based methods\n+        final StarGraph starGraphNative = StarGraph.open();\n+        Vertex v1 = starGraphNative.addVertex(T.label, \"thing\", T.id, \"v1\");\n+        assertEquals(\"v1\", v1.id());\n+        assertEquals(\"thing\", v1.label());\n+        Edge e1 = v1.addEdge(\"self\", v1, \"name\", \"pipes\");\n+        assertEquals(2l, IteratorUtils.count(v1.vertices(Direction.BOTH, \"self\", \"nothing\")));\n+        assertEquals(1l, IteratorUtils.count(v1.vertices(Direction.OUT)));\n+        assertEquals(1l, IteratorUtils.count(v1.vertices(Direction.IN, \"self\")));\n+        edgeIterator = v1.edges(Direction.BOTH);\n+        TestHelper.validateEdgeEquality(e1, edgeIterator.next());\n+        TestHelper.validateEdgeEquality(e1, edgeIterator.next());\n+        assertFalse(edgeIterator.hasNext());\n+        TestHelper.validateEdgeEquality(e1, v1.edges(Direction.OUT, \"self\", \"nothing\").next());\n+        TestHelper.validateEdgeEquality(e1, v1.edges(Direction.IN).next());\n     }\n \n+\n     private Pair<StarGraph, Integer> serializeDeserialize(final StarGraph starGraph) {\n         final ByteArrayOutputStream outputStream = new ByteArrayOutputStream();\n         try {",
                "deletions": 0
            }
        ],
        "patched_files": [
            "StarGraph.java"
        ],
        "unit_tests": [
            "StarGraphTest.java"
        ]
    },
    "tinkerpop_e087123": {
        "repo": "tinkerpop",
        "message": "came up with a nifty trick and now OLD and NEW group() are much closer in time. 432ms vs 456ms. Given that the solution is no longer an NPE in nested groups in OLAP -- this minor time hit is worth it. :). Running integration tests over night.",
        "commit": "https://github.com/apache/tinkerpop/commit/e087123ca9bf513a555b3666a201905df43d8f7c",
        "parent": "https://github.com/apache/tinkerpop/commit/c890cebad5231cdab8744878bebb4ea363689a3a",
        "bug_id": "tinkerpop_e087123",
        "file": [
            {
                "sha": "7a93796b721a5943a2c84a04af689888843111fa",
                "filename": "gremlin-core/src/main/java/org/apache/tinkerpop/gremlin/process/traversal/step/map/GroupStep.java",
                "blob_url": "https://github.com/apache/tinkerpop/blob/e087123ca9bf513a555b3666a201905df43d8f7c/gremlin-core/src/main/java/org/apache/tinkerpop/gremlin/process/traversal/step/map/GroupStep.java",
                "raw_url": "https://github.com/apache/tinkerpop/raw/e087123ca9bf513a555b3666a201905df43d8f7c/gremlin-core/src/main/java/org/apache/tinkerpop/gremlin/process/traversal/step/map/GroupStep.java",
                "status": "modified",
                "changes": 168,
                "additions": 104,
                "contents_url": "https://api.github.com/repos/apache/tinkerpop/contents/gremlin-core/src/main/java/org/apache/tinkerpop/gremlin/process/traversal/step/map/GroupStep.java?ref=e087123ca9bf513a555b3666a201905df43d8f7c",
                "patch": "@@ -42,7 +42,6 @@\n \n import java.io.Serializable;\n import java.util.ArrayList;\n-import java.util.Arrays;\n import java.util.HashMap;\n import java.util.List;\n import java.util.Map;\n@@ -62,7 +61,7 @@\n     public GroupStep(final Traversal.Admin traversal) {\n         super(traversal);\n         this.valueTraversal = this.integrateChild(__.fold().asAdmin());\n-        this.preTraversal = this.integrateChild(splitOnBarrierStep(this.valueTraversal).get(0));\n+        this.preTraversal = this.integrateChild(generatePreTraversal(this.valueTraversal));\n         this.setReducingBiOperator(new GroupBiOperator<>(this.valueTraversal));\n         this.setSeedSupplier(HashMapSupplier.instance());\n     }\n@@ -74,7 +73,7 @@ public void modulateBy(final Traversal.Admin<?, ?> kvTraversal) {\n             this.state = 'v';\n         } else if ('v' == this.state) {\n             this.valueTraversal = this.integrateChild(convertValueTraversal(kvTraversal));\n-            this.preTraversal = this.integrateChild(splitOnBarrierStep(this.valueTraversal).get(0));\n+            this.preTraversal = this.integrateChild(generatePreTraversal(this.valueTraversal));\n             this.setReducingBiOperator(new GroupBiOperator<>(this.valueTraversal));\n             this.state = 'x';\n         } else {\n@@ -85,11 +84,15 @@ public void modulateBy(final Traversal.Admin<?, ?> kvTraversal) {\n     @Override\n     public Map<K, V> projectTraverser(final Traverser.Admin<S> traverser) {\n         final Map<K, V> map = new HashMap<>(1);\n-        final TraverserSet traverserSet = new TraverserSet<>();\n-        this.preTraversal.reset();\n-        this.preTraversal.addStart(traverser.split());\n-        this.preTraversal.getEndStep().forEachRemaining(traverserSet::add);\n-        map.put(TraversalUtil.applyNullable(traverser, this.keyTraversal), (V) traverserSet);\n+        if (null == this.preTraversal) {\n+            map.put(TraversalUtil.applyNullable(traverser, this.keyTraversal), (V) traverser.split());\n+        } else {\n+            final TraverserSet traverserSet = new TraverserSet<>();\n+            this.preTraversal.reset();\n+            this.preTraversal.addStart(traverser.split());\n+            this.preTraversal.getEndStep().forEachRemaining(traverserSet::add);\n+            map.put(TraversalUtil.applyNullable(traverser, this.keyTraversal), (V) traverserSet);\n+        }\n         return map;\n     }\n \n@@ -100,7 +103,7 @@ public String toString() {\n \n     @Override\n     public List<Traversal.Admin<?, ?>> getLocalChildren() {\n-        final List<Traversal.Admin<?, ?>> children = new ArrayList<>(4);\n+        final List<Traversal.Admin<?, ?>> children = new ArrayList<>(2);\n         if (null != this.keyTraversal)\n             children.add((Traversal.Admin) this.keyTraversal);\n         children.add(this.valueTraversal);\n@@ -118,7 +121,7 @@ public String toString() {\n         if (null != this.keyTraversal)\n             clone.keyTraversal = this.keyTraversal.clone();\n         clone.valueTraversal = this.valueTraversal.clone();\n-        clone.preTraversal = this.integrateChild(GroupStep.splitOnBarrierStep(clone.valueTraversal).get(0));\n+        clone.preTraversal = this.integrateChild(GroupStep.generatePreTraversal(clone.valueTraversal));\n         return clone;\n     }\n \n@@ -147,12 +150,14 @@ public int hashCode() {\n \n     public static final class GroupBiOperator<K, V> implements BinaryOperator<Map<K, V>>, Serializable {\n \n+        private static final int SIZE_LIMIT = 1000;\n+\n         private Traversal.Admin<?, V> valueTraversal;\n-        private ReducingBarrierStep reducingBarrierStep = null;\n+        private Barrier barrierStep;\n \n         public GroupBiOperator(final Traversal.Admin<?, V> valueTraversal) {\n             this.valueTraversal = valueTraversal.clone();\n-            this.reducingBarrierStep = TraversalHelper.getFirstStepOfAssignableClass(ReducingBarrierStep.class, this.valueTraversal).orElse(null);\n+            this.barrierStep = TraversalHelper.getFirstStepOfAssignableClass(Barrier.class, this.valueTraversal).orElse(null);\n         }\n \n         public GroupBiOperator() {\n@@ -168,74 +173,114 @@ public GroupBiOperator() {\n                 if (null == objectA) {\n                     objectA = objectB;\n                 } else {\n-                    if (objectA instanceof TraverserSet) {\n-                        if (objectB instanceof TraverserSet) {\n+                    if (objectA instanceof Traverser.Admin) {\n+                        if (objectB instanceof Traverser.Admin) {\n+                            final TraverserSet set = new TraverserSet();\n+                            set.add((Traverser.Admin) objectA);\n+                            set.add((Traverser.Admin) objectB);\n+                            objectA = set;\n+                        } else if (objectB instanceof TraverserSet) {\n+                            final TraverserSet set = (TraverserSet) objectB;\n+                            set.add((Traverser.Admin) objectA);\n+                            if (null != this.barrierStep && set.size() > SIZE_LIMIT) {\n+                                this.valueTraversal.reset();\n+                                ((Step) this.barrierStep).addStarts(set.iterator());\n+                                objectA = this.barrierStep.nextBarrier();\n+                            } else {\n+                                objectA = objectB;\n+                            }\n+                        } else if (objectB instanceof Pair) {\n+                            final TraverserSet set = (TraverserSet) ((Pair) objectB).getValue0();\n+                            set.add((Traverser.Admin) objectA);\n+                            if (set.size() > SIZE_LIMIT) {\n+                                this.valueTraversal.reset();\n+                                ((Step) this.barrierStep).addStarts(set.iterator());\n+                                this.barrierStep.addBarrier(((Pair) objectB).getValue1());\n+                                objectA = this.barrierStep.nextBarrier();\n+                            } else {\n+                                objectA = Pair.with(set, ((Pair) objectB).getValue1());\n+                            }\n+                        } else {\n+                            objectA = Pair.with(new TraverserSet((Traverser.Admin) objectA), objectB);\n+                        }\n+                    } else if (objectA instanceof TraverserSet) {\n+                        if (objectB instanceof Traverser.Admin) {\n+                            ((TraverserSet) objectA).add((Traverser.Admin) objectB);\n+                            if (null != this.barrierStep && ((TraverserSet) objectA).size() > SIZE_LIMIT) {\n+                                this.valueTraversal.reset();\n+                                ((Step) this.barrierStep).addStarts(((TraverserSet) objectA).iterator());\n+                                objectA = this.barrierStep.nextBarrier();\n+                            }\n+                        } else if (objectB instanceof TraverserSet) {\n                             final TraverserSet set = (TraverserSet) objectA;\n                             set.addAll((TraverserSet) objectB);\n-                            if (null != this.reducingBarrierStep && set.size() > 1000) {\n+                            if (null != this.barrierStep && set.size() > SIZE_LIMIT) {\n                                 this.valueTraversal.reset();\n-                                this.reducingBarrierStep.addStarts(set.iterator());\n-                                objectA = this.reducingBarrierStep.nextBarrier();\n+                                ((Step) this.barrierStep).addStarts(set.iterator());\n+                                objectA = this.barrierStep.nextBarrier();\n                             }\n                         } else if (objectB instanceof Pair) {\n                             final TraverserSet set = (TraverserSet) objectA;\n                             set.addAll((TraverserSet) ((Pair) objectB).getValue0());\n-                            if (set.size() > 1000) {\n+                            if (set.size() > SIZE_LIMIT) {\n                                 this.valueTraversal.reset();\n-                                this.reducingBarrierStep.addStarts(set.iterator());\n-                                this.reducingBarrierStep.addBarrier(((Pair) objectB).getValue1());\n-                                objectA = this.reducingBarrierStep.nextBarrier();\n+                                ((Step) this.barrierStep).addStarts(set.iterator());\n+                                this.barrierStep.addBarrier(((Pair) objectB).getValue1());\n+                                objectA = this.barrierStep.nextBarrier();\n                             } else {\n                                 objectA = Pair.with(set, ((Pair) objectB).getValue1());\n                             }\n                         } else {\n                             objectA = Pair.with(objectA, objectB);\n                         }\n                     } else if (objectA instanceof Pair) {\n-                        if (objectB instanceof TraverserSet) {\n+                        if (objectB instanceof Traverser.Admin) {\n+                            ((TraverserSet) ((Pair) objectA).getValue0()).add((Traverser.Admin) objectB);\n+                        } else if (objectB instanceof TraverserSet) {\n                             final TraverserSet set = (TraverserSet) ((Pair) objectA).getValue0();\n                             set.addAll((TraverserSet) objectB);\n-                            if (null != this.reducingBarrierStep &&set.size() > 1000) {\n+                            if (null != this.barrierStep && set.size() > SIZE_LIMIT) {\n                                 this.valueTraversal.reset();\n-                                this.reducingBarrierStep.addStarts(set.iterator());\n-                                this.reducingBarrierStep.addBarrier(((Pair) objectA).getValue1());\n-                                objectA = this.reducingBarrierStep.nextBarrier();\n+                                ((Step) this.barrierStep).addStarts(set.iterator());\n+                                this.barrierStep.addBarrier(((Pair) objectA).getValue1());\n+                                objectA = this.barrierStep.nextBarrier();\n                             }\n                         } else if (objectB instanceof Pair) {\n                             this.valueTraversal.reset();\n-                            this.reducingBarrierStep.addBarrier(((Pair) objectA).getValue1());\n-                            this.reducingBarrierStep.addBarrier(((Pair) objectB).getValue1());\n-                            this.reducingBarrierStep.addStarts(((TraverserSet) ((Pair) objectA).getValue0()).iterator());\n-                            this.reducingBarrierStep.addStarts(((TraverserSet) ((Pair) objectB).getValue0()).iterator());\n-                            objectA = this.reducingBarrierStep.nextBarrier();\n+                            this.barrierStep.addBarrier(((Pair) objectA).getValue1());\n+                            this.barrierStep.addBarrier(((Pair) objectB).getValue1());\n+                            ((Step) this.barrierStep).addStarts(((TraverserSet) ((Pair) objectA).getValue0()).iterator());\n+                            ((Step) this.barrierStep).addStarts(((TraverserSet) ((Pair) objectB).getValue0()).iterator());\n+                            objectA = this.barrierStep.nextBarrier();\n                         } else {\n                             this.valueTraversal.reset();\n-                            this.reducingBarrierStep.addBarrier(((Pair) objectA).getValue1());\n-                            this.reducingBarrierStep.addBarrier(objectB);\n-                            this.reducingBarrierStep.addStarts(((TraverserSet) ((Pair) objectA).getValue0()).iterator());\n-                            objectA = this.reducingBarrierStep.nextBarrier();\n+                            this.barrierStep.addBarrier(((Pair) objectA).getValue1());\n+                            this.barrierStep.addBarrier(objectB);\n+                            ((Step) this.barrierStep).addStarts(((TraverserSet) ((Pair) objectA).getValue0()).iterator());\n+                            objectA = this.barrierStep.nextBarrier();\n                         }\n                     } else {\n-                        if (objectB instanceof TraverserSet) {\n+                        if (objectB instanceof Traverser.Admin) {\n+                            objectA = Pair.with(new TraverserSet<>((Traverser.Admin) objectB), objectA);\n+                        } else if (objectB instanceof TraverserSet) {\n                             objectA = Pair.with(objectB, objectA);\n                         } else if (objectB instanceof Pair) {\n                             this.valueTraversal.reset();\n-                            this.reducingBarrierStep.addBarrier(objectA);\n-                            this.reducingBarrierStep.addBarrier(((Pair) objectB).getValue1());\n-                            this.reducingBarrierStep.addStarts(((TraverserSet) ((Pair) objectB).getValue0()).iterator());\n-                            objectA = this.reducingBarrierStep.nextBarrier();\n+                            this.barrierStep.addBarrier(objectA);\n+                            this.barrierStep.addBarrier(((Pair) objectB).getValue1());\n+                            ((Step) this.barrierStep).addStarts(((TraverserSet) ((Pair) objectB).getValue0()).iterator());\n+                            objectA = this.barrierStep.nextBarrier();\n                         } else {\n                             this.valueTraversal.reset();\n-                            this.reducingBarrierStep.addBarrier(objectA);\n-                            this.reducingBarrierStep.addBarrier(objectB);\n-                            objectA = this.reducingBarrierStep.nextBarrier();\n+                            this.barrierStep.addBarrier(objectA);\n+                            this.barrierStep.addBarrier(objectB);\n+                            objectA = this.barrierStep.nextBarrier();\n                         }\n                     }\n                 }\n                 mapA.put(key, (V) objectA);\n             }\n             return mapA;\n-\n         }\n     }\n \n@@ -253,39 +298,34 @@ public GroupBiOperator() {\n         }\n     }\n \n-    public static List<Traversal.Admin<?, ?>> splitOnBarrierStep(final Traversal.Admin<?, ?> valueTraversal) {\n-        if (TraversalHelper.getFirstStepOfAssignableClass(Barrier.class, valueTraversal).isPresent()) {\n-            final Traversal.Admin<?, ?> first = __.identity().asAdmin();\n-            final Traversal.Admin<?, ?> second = __.identity().asAdmin();\n-            boolean onSecond = false;\n-            for (final Step step : valueTraversal.getSteps()) {\n-                if (step instanceof Barrier)\n-                    onSecond = true;\n-                if (onSecond)\n-                    second.addStep(step.clone());\n-                else\n-                    first.addStep(step.clone());\n-            }\n-            return Arrays.asList(first, second);\n-        } else {\n-            return Arrays.asList(valueTraversal.clone(), __.identity().asAdmin());\n+    public static Traversal.Admin<?, ?> generatePreTraversal(final Traversal.Admin<?, ?> valueTraversal) {\n+        if (!TraversalHelper.hasStepOfAssignableClass(Barrier.class, valueTraversal))\n+            return valueTraversal;\n+        final Traversal.Admin<?, ?> first = __.identity().asAdmin();\n+        for (final Step step : valueTraversal.getSteps()) {\n+            if (step instanceof Barrier)\n+                break;\n+            first.addStep(step.clone());\n         }\n+        return first.getSteps().size() == 1 ? null : first;\n     }\n \n     public static <K, V> Map<K, V> doFinalReduction(final Map<K, Object> map, final Traversal.Admin<?, V> valueTraversal) {\n         final Map<K, V> reducedMap = new HashMap<>(map.size());\n-        final ReducingBarrierStep reducingBarrierStep = TraversalHelper.getFirstStepOfAssignableClass(ReducingBarrierStep.class, valueTraversal).orElse(null);\n+        final Barrier reducingBarrierStep = TraversalHelper.getFirstStepOfAssignableClass(Barrier.class, valueTraversal).orElse(null);\n         IteratorUtils.removeOnNext(map.entrySet().iterator()).forEachRemaining(entry -> {\n             valueTraversal.reset();\n             if (null == reducingBarrierStep) {\n                 reducedMap.put(entry.getKey(), entry.getValue() instanceof TraverserSet ?\n                         ((TraverserSet<V>) entry.getValue()).iterator().next().get() :\n                         (V) entry.getValue());\n             } else {\n-                if (entry.getValue() instanceof TraverserSet)\n-                    reducingBarrierStep.addStarts(((TraverserSet) entry.getValue()).iterator());\n+                if (entry.getValue() instanceof Traverser.Admin)\n+                    ((Step) reducingBarrierStep).addStart((Traverser.Admin) entry.getValue());\n+                else if (entry.getValue() instanceof TraverserSet)\n+                    ((Step) reducingBarrierStep).addStarts(((TraverserSet) entry.getValue()).iterator());\n                 else if (entry.getValue() instanceof Pair) {\n-                    reducingBarrierStep.addStarts(((TraverserSet) (((Pair) entry.getValue()).getValue0())).iterator());\n+                    ((Step) reducingBarrierStep).addStarts(((TraverserSet) (((Pair) entry.getValue()).getValue0())).iterator());\n                     reducingBarrierStep.addBarrier((((Pair) entry.getValue()).getValue1()));\n                 } else\n                     reducingBarrierStep.addBarrier(entry.getValue());",
                "deletions": 64
            },
            {
                "sha": "b5deb02c296ec9360668624989e26376c96d865b",
                "filename": "gremlin-core/src/main/java/org/apache/tinkerpop/gremlin/process/traversal/step/sideEffect/GroupSideEffectStep.java",
                "blob_url": "https://github.com/apache/tinkerpop/blob/e087123ca9bf513a555b3666a201905df43d8f7c/gremlin-core/src/main/java/org/apache/tinkerpop/gremlin/process/traversal/step/sideEffect/GroupSideEffectStep.java",
                "raw_url": "https://github.com/apache/tinkerpop/raw/e087123ca9bf513a555b3666a201905df43d8f7c/gremlin-core/src/main/java/org/apache/tinkerpop/gremlin/process/traversal/step/sideEffect/GroupSideEffectStep.java",
                "status": "modified",
                "changes": 20,
                "additions": 11,
                "contents_url": "https://api.github.com/repos/apache/tinkerpop/contents/gremlin-core/src/main/java/org/apache/tinkerpop/gremlin/process/traversal/step/sideEffect/GroupSideEffectStep.java?ref=e087123ca9bf513a555b3666a201905df43d8f7c",
                "patch": "@@ -53,7 +53,7 @@ public GroupSideEffectStep(final Traversal.Admin traversal, final String sideEff\n         super(traversal);\n         this.sideEffectKey = sideEffectKey;\n         this.valueTraversal = this.integrateChild(__.fold().asAdmin());\n-        this.preTraversal = this.integrateChild(GroupStep.splitOnBarrierStep(this.valueTraversal).get(0));\n+        this.preTraversal = this.integrateChild(GroupStep.generatePreTraversal(this.valueTraversal));\n         this.getTraversal().getSideEffects().registerIfAbsent(this.sideEffectKey, HashMapSupplier.instance(), new GroupStep.GroupBiOperator<>(this.valueTraversal));\n     }\n \n@@ -64,7 +64,7 @@ public void modulateBy(final Traversal.Admin<?, ?> kvTraversal) {\n             this.state = 'v';\n         } else if ('v' == this.state) {\n             this.valueTraversal = this.integrateChild(GroupStep.convertValueTraversal(kvTraversal));\n-            this.preTraversal = this.integrateChild(GroupStep.splitOnBarrierStep(this.valueTraversal).get(0));\n+            this.preTraversal = this.integrateChild(GroupStep.generatePreTraversal(this.valueTraversal));\n             this.getTraversal().getSideEffects().register(this.sideEffectKey, null, new GroupStep.GroupBiOperator<>(this.valueTraversal));\n             this.state = 'x';\n         } else {\n@@ -75,13 +75,15 @@ public void modulateBy(final Traversal.Admin<?, ?> kvTraversal) {\n     @Override\n     protected void sideEffect(final Traverser.Admin<S> traverser) {\n         final Map<K, V> map = new HashMap<>(1);\n-        final TraverserSet midTraversers = new TraverserSet<>();\n-        this.preTraversal.reset();\n-        this.preTraversal.addStart(traverser.split());\n-        while (this.preTraversal.hasNext()) {\n-            midTraversers.add(this.preTraversal.getEndStep().next());\n+        if (null == this.preTraversal) {\n+            map.put(TraversalUtil.applyNullable(traverser, this.keyTraversal), (V) traverser.split());\n+        } else {\n+            final TraverserSet traverserSet = new TraverserSet<>();\n+            this.preTraversal.reset();\n+            this.preTraversal.addStart(traverser.split());\n+            this.preTraversal.getEndStep().forEachRemaining(traverserSet::add);\n+            map.put(TraversalUtil.applyNullable(traverser, this.keyTraversal), (V) traverserSet);\n         }\n-        map.put(TraversalUtil.applyNullable(traverser, this.keyTraversal), (V) midTraversers);\n         this.getTraversal().getSideEffects().add(this.sideEffectKey, map);\n     }\n \n@@ -115,7 +117,7 @@ public String toString() {\n         if (null != this.keyTraversal)\n             clone.keyTraversal = this.keyTraversal.clone();\n         clone.valueTraversal = this.valueTraversal.clone();\n-        clone.preTraversal = this.integrateChild(GroupStep.splitOnBarrierStep(clone.valueTraversal).get(0));\n+        clone.preTraversal = this.integrateChild(GroupStep.generatePreTraversal(clone.valueTraversal));\n         return clone;\n     }\n ",
                "deletions": 9
            },
            {
                "sha": "156b350e7fddad9cdf48892ee4fabb7d46d309be",
                "filename": "gremlin-groovy-test/src/main/groovy/org/apache/tinkerpop/gremlin/process/traversal/step/sideEffect/GroovyGroupTest.groovy",
                "blob_url": "https://github.com/apache/tinkerpop/blob/e087123ca9bf513a555b3666a201905df43d8f7c/gremlin-groovy-test/src/main/groovy/org/apache/tinkerpop/gremlin/process/traversal/step/sideEffect/GroovyGroupTest.groovy",
                "raw_url": "https://github.com/apache/tinkerpop/raw/e087123ca9bf513a555b3666a201905df43d8f7c/gremlin-groovy-test/src/main/groovy/org/apache/tinkerpop/gremlin/process/traversal/step/sideEffect/GroovyGroupTest.groovy",
                "status": "modified",
                "changes": 2,
                "additions": 1,
                "contents_url": "https://api.github.com/repos/apache/tinkerpop/contents/gremlin-groovy-test/src/main/groovy/org/apache/tinkerpop/gremlin/process/traversal/step/sideEffect/GroovyGroupTest.groovy?ref=e087123ca9bf513a555b3666a201905df43d8f7c",
                "patch": "@@ -111,7 +111,7 @@ public abstract class GroovyGroupTest {\n \n         @Override\n         public Traversal<Vertex, Map<Long, Map<String, List<Vertex>>>> get_g_V_group_byXbothE_countX_byXgroup_byXlabelXX() {\n-            new ScriptTraversal<>(g, \"gremlin-groovy\", \"g.V.group().by(bothE().count).by(group.by(label))\")\n+            new ScriptTraversal<>(g, \"gremlin-groovy\", \"g.V.group().by(bothE().count).by(group().by(label))\")\n         }\n     }\n }",
                "deletions": 1
            }
        ],
        "patched_files": [
            "GroupStep.java",
            "GroupSideEffectStep.java"
        ],
        "unit_tests": [
            "GroupStepTest.java",
            "GroupSideEffectStepTest.java"
        ]
    },
    "tinkerpop_b45a957": {
        "repo": "tinkerpop",
        "message": "Fixed an NPE around path and nested children with path processors. Added some TODO notes in PrunePathStrategyTest about why keepLabels are the way they are -- I believe that nesting is not sound and should be looked into more. And more tests added.",
        "commit": "https://github.com/apache/tinkerpop/commit/b45a957c52da9d4e3c180baaf7f16672e94d6abd",
        "parent": "https://github.com/apache/tinkerpop/commit/9d205f89d99c9c04ece93e4bdb713701a1010652",
        "bug_id": "tinkerpop_b45a957",
        "file": [
            {
                "sha": "358af7a7f65ad2e05d6eff8619fafe6ed5633799",
                "filename": "gremlin-core/src/main/java/org/apache/tinkerpop/gremlin/process/traversal/strategy/optimization/PrunePathStrategy.java",
                "blob_url": "https://github.com/apache/tinkerpop/blob/b45a957c52da9d4e3c180baaf7f16672e94d6abd/gremlin-core/src/main/java/org/apache/tinkerpop/gremlin/process/traversal/strategy/optimization/PrunePathStrategy.java",
                "raw_url": "https://github.com/apache/tinkerpop/raw/b45a957c52da9d4e3c180baaf7f16672e94d6abd/gremlin-core/src/main/java/org/apache/tinkerpop/gremlin/process/traversal/strategy/optimization/PrunePathStrategy.java",
                "status": "modified",
                "changes": 2,
                "additions": 1,
                "contents_url": "https://api.github.com/repos/apache/tinkerpop/contents/gremlin-core/src/main/java/org/apache/tinkerpop/gremlin/process/traversal/strategy/optimization/PrunePathStrategy.java?ref=b45a957c52da9d4e3c180baaf7f16672e94d6abd",
                "patch": "@@ -90,7 +90,7 @@ public static PrunePathStrategy instance() {\n                 do {\n                     // if this is the top level traversal, propagate all nested labels\n                     // to previous PathProcess steps\n-                    if (step instanceof PathProcessor) {\n+                    if (step instanceof PathProcessor && null != ((PathProcessor) step).getKeepLabels()) {\n                         ((PathProcessor) step).getKeepLabels().addAll(referencedLabels);\n                     }\n                     step = step.getPreviousStep();",
                "deletions": 1
            },
            {
                "sha": "72ee294de86ee4555c32c95afa89ce616efaab73",
                "filename": "gremlin-core/src/test/java/org/apache/tinkerpop/gremlin/process/traversal/strategy/optimization/PrunePathStrategyTest.java",
                "blob_url": "https://github.com/apache/tinkerpop/blob/b45a957c52da9d4e3c180baaf7f16672e94d6abd/gremlin-core/src/test/java/org/apache/tinkerpop/gremlin/process/traversal/strategy/optimization/PrunePathStrategyTest.java",
                "raw_url": "https://github.com/apache/tinkerpop/raw/b45a957c52da9d4e3c180baaf7f16672e94d6abd/gremlin-core/src/test/java/org/apache/tinkerpop/gremlin/process/traversal/strategy/optimization/PrunePathStrategyTest.java",
                "status": "modified",
                "changes": 11,
                "additions": 8,
                "contents_url": "https://api.github.com/repos/apache/tinkerpop/contents/gremlin-core/src/test/java/org/apache/tinkerpop/gremlin/process/traversal/strategy/optimization/PrunePathStrategyTest.java?ref=b45a957c52da9d4e3c180baaf7f16672e94d6abd",
                "patch": "@@ -73,7 +73,7 @@ public void doTest() {\n             currentTraversal.setStrategies(currentStrategies);\n             currentTraversal.applyStrategies();\n             final List<Object> keepLabels = getKeepLabels(currentTraversal);\n-            assertEquals(this.labels, keepLabels);\n+            assertEquals(keepLabels, this.labels);\n             if (null != optimized)\n                 assertEquals(currentTraversal, optimized);\n         }\n@@ -84,9 +84,8 @@ public void doTest() {\n         for (Step step : traversal.getSteps()) {\n             if (step instanceof PathProcessor) {\n                 final Set<String> keepers = ((PathProcessor) step).getKeepLabels();\n-                if (keepers != null) {\n+                if (keepers != null)\n                     keepLabels.add(keepers);\n-                }\n             }\n             if (step instanceof TraversalParent) {\n                 final TraversalParent parent = (TraversalParent) step;\n@@ -135,6 +134,12 @@ public void doTest() {\n                 {__.V().as(\"a\").out().as(\"b\").where(P.gt(\"a\")).out().out(), Arrays.asList(Collections.emptySet()), __.V().as(\"a\").out().as(\"b\").where(P.gt(\"a\")).barrier(MAX_BARRIER_SIZE).out().out()},\n                 {__.V().as(\"a\").out().as(\"b\").where(P.gt(\"a\")).count(), Arrays.asList(Collections.emptySet()), __.V().as(\"a\").out().as(\"b\").where(P.gt(\"a\")).count()},\n                 {__.V().as(\"a\").out().as(\"b\").select(\"a\").as(\"c\").where(P.gt(\"b\")).out(), Arrays.asList(Collections.singleton(\"b\"), Collections.emptySet()), __.V().as(\"a\").out().as(\"b\").select(\"a\").as(\"c\").barrier(MAX_BARRIER_SIZE).where(P.gt(\"b\")).barrier(MAX_BARRIER_SIZE).out()},\n+                // TODO: why is the local child preserving c and e?\n+                {__.V().as(\"a\").out().as(\"b\").select(\"a\").select(\"b\").local(as(\"c\").out().as(\"d\", \"e\").select(\"c\", \"e\").out().select(\"c\")).out().select(\"c\"),\n+                        Arrays.asList(new HashSet<>(Arrays.asList(\"b\", \"c\", \"e\")), new HashSet<>(Arrays.asList(\"c\", \"e\")), Arrays.asList(new HashSet<>(Arrays.asList(\"c\", \"e\")), new HashSet<>(Arrays.asList(\"c\", \"e\"))), Collections.emptySet()), null},\n+                // TODO: same as above but note how path() makes things react\n+                {__.V().as(\"a\").out().as(\"b\").select(\"a\").select(\"b\").path().local(as(\"c\").out().as(\"d\", \"e\").select(\"c\", \"e\").out().select(\"c\")).out().select(\"c\"),\n+                        Arrays.asList(Arrays.asList(new HashSet<>(Arrays.asList(\"c\", \"e\")), new HashSet<>(Arrays.asList(\"c\", \"e\")))), null},\n         });\n     }\n }",
                "deletions": 3
            }
        ],
        "patched_files": [
            "PrunePathStrategy.java"
        ],
        "unit_tests": [
            "PrunePathStrategyTest.java"
        ]
    },
    "tinkerpop_8646af7": {
        "repo": "tinkerpop",
        "message": "Found another bug in my manual testing of Spark. If the SparkContext is open, the graphRDD prior to finalization is persited -- eek. Made it so that it is unpersisted() correctly. Moreover, added test cases to ensure that unnamed persited RDDs are not dangling around between jobs on a persited context. Also, found a NullPointerException. Ran full spark integration tests. CTR.",
        "commit": "https://github.com/apache/tinkerpop/commit/8646af7d6a3a5dafcc5c3ffc5e8ceccbd9a11735",
        "parent": "https://github.com/apache/tinkerpop/commit/2ca4cba87d98101b404340ccd80bc44f7a417f9e",
        "bug_id": "tinkerpop_8646af7",
        "file": [
            {
                "sha": "d3f31cb595b5eac4ac3f7748ff0ddafbbfece2cf",
                "filename": "spark-gremlin/src/main/java/org/apache/tinkerpop/gremlin/spark/process/computer/SparkExecutor.java",
                "blob_url": "https://github.com/apache/tinkerpop/blob/8646af7d6a3a5dafcc5c3ffc5e8ceccbd9a11735/spark-gremlin/src/main/java/org/apache/tinkerpop/gremlin/spark/process/computer/SparkExecutor.java",
                "raw_url": "https://github.com/apache/tinkerpop/raw/8646af7d6a3a5dafcc5c3ffc5e8ceccbd9a11735/spark-gremlin/src/main/java/org/apache/tinkerpop/gremlin/spark/process/computer/SparkExecutor.java",
                "status": "modified",
                "changes": 7,
                "additions": 5,
                "contents_url": "https://api.github.com/repos/apache/tinkerpop/contents/spark-gremlin/src/main/java/org/apache/tinkerpop/gremlin/spark/process/computer/SparkExecutor.java?ref=8646af7d6a3a5dafcc5c3ffc5e8ceccbd9a11735",
                "patch": "@@ -133,9 +133,9 @@ private SparkExecutor() {\n         return newViewIncomingRDD;\n     }\n \n-    public static <M> JavaPairRDD<Object, VertexWritable> prepareFinalGraphRDD(final JavaPairRDD<Object, VertexWritable> graphRDD, final JavaPairRDD<Object, ViewIncomingPayload<M>> viewIncomingRDD, final String[] elementComputeKeys) {\n+    public static <M> JavaPairRDD<Object, VertexWritable> prepareFinalGraphRDD(final JavaPairRDD<Object, VertexWritable> graphRDD, final JavaPairRDD<Object, ViewIncomingPayload<M>> viewIncomingRDD, final String[] elementComputeKeys, final boolean unpersistInput) {\n         // attach the final computed view to the cached graph\n-        return graphRDD.leftOuterJoin(viewIncomingRDD)\n+        final JavaPairRDD<Object, VertexWritable> finalGraphRDD = graphRDD.leftOuterJoin(viewIncomingRDD)\n                 .mapValues(tuple -> {\n                     final StarGraph.StarVertex vertex = tuple._1().get();\n                     vertex.dropVertexProperties(elementComputeKeys);\n@@ -144,6 +144,9 @@ private SparkExecutor() {\n                     view.clear(); // no longer needed so kill it from memory\n                     return tuple._1();\n                 });\n+        if (unpersistInput)\n+            graphRDD.unpersist();\n+        return finalGraphRDD;\n     }\n \n     /////////////////",
                "deletions": 2
            },
            {
                "sha": "30f4dba71f7de2589e0ff19d644b436fb0d1f8f2",
                "filename": "spark-gremlin/src/main/java/org/apache/tinkerpop/gremlin/spark/process/computer/SparkGraphComputer.java",
                "blob_url": "https://github.com/apache/tinkerpop/blob/8646af7d6a3a5dafcc5c3ffc5e8ceccbd9a11735/spark-gremlin/src/main/java/org/apache/tinkerpop/gremlin/spark/process/computer/SparkGraphComputer.java",
                "raw_url": "https://github.com/apache/tinkerpop/raw/8646af7d6a3a5dafcc5c3ffc5e8ceccbd9a11735/spark-gremlin/src/main/java/org/apache/tinkerpop/gremlin/spark/process/computer/SparkGraphComputer.java",
                "status": "modified",
                "changes": 2,
                "additions": 1,
                "contents_url": "https://api.github.com/repos/apache/tinkerpop/contents/spark-gremlin/src/main/java/org/apache/tinkerpop/gremlin/spark/process/computer/SparkGraphComputer.java?ref=8646af7d6a3a5dafcc5c3ffc5e8ceccbd9a11735",
                "patch": "@@ -207,7 +207,7 @@ else if (graphRDD.partitions().size() < this.workers) // ensures that the graphR\n                     }\n                     // write the graph rdd using the output rdd\n                     final String[] elementComputeKeys = this.vertexProgram == null ? new String[0] : this.vertexProgram.getElementComputeKeys().toArray(new String[this.vertexProgram.getElementComputeKeys().size()]);\n-                    graphRDD = SparkExecutor.prepareFinalGraphRDD(graphRDD, viewIncomingRDD, elementComputeKeys);\n+                    graphRDD = SparkExecutor.prepareFinalGraphRDD(graphRDD, viewIncomingRDD, elementComputeKeys, !inputFromSpark);\n                     if ((hadoopConfiguration.get(Constants.GREMLIN_HADOOP_GRAPH_OUTPUT_FORMAT, null) != null ||\n                             hadoopConfiguration.get(Constants.GREMLIN_SPARK_GRAPH_OUTPUT_RDD, null) != null) &&\n                             !this.persist.equals(GraphComputer.Persist.NOTHING)) {",
                "deletions": 1
            },
            {
                "sha": "76a3299719aca5cdb75c7fa26c28525ab232efaf",
                "filename": "spark-gremlin/src/main/java/org/apache/tinkerpop/gremlin/spark/structure/io/SparkContextStorage.java",
                "blob_url": "https://github.com/apache/tinkerpop/blob/8646af7d6a3a5dafcc5c3ffc5e8ceccbd9a11735/spark-gremlin/src/main/java/org/apache/tinkerpop/gremlin/spark/structure/io/SparkContextStorage.java",
                "raw_url": "https://github.com/apache/tinkerpop/raw/8646af7d6a3a5dafcc5c3ffc5e8ceccbd9a11735/spark-gremlin/src/main/java/org/apache/tinkerpop/gremlin/spark/structure/io/SparkContextStorage.java",
                "status": "modified",
                "changes": 2,
                "additions": 1,
                "contents_url": "https://api.github.com/repos/apache/tinkerpop/contents/spark-gremlin/src/main/java/org/apache/tinkerpop/gremlin/spark/structure/io/SparkContextStorage.java?ref=8646af7d6a3a5dafcc5c3ffc5e8ceccbd9a11735",
                "patch": "@@ -160,6 +160,6 @@ public String describe(final String location) {\n \n     @Override\n     public String toString() {\n-        return StringFactory.storageString(Spark.getContext().master());\n+        return StringFactory.storageString(null == Spark.getContext() ? \"spark:none\" : Spark.getContext().master());\n     }\n }",
                "deletions": 1
            },
            {
                "sha": "6dac97f0e2b2fb088ca724818dcfecf3c7e04d9f",
                "filename": "spark-gremlin/src/test/java/org/apache/tinkerpop/gremlin/spark/structure/io/PersistedInputOutputRDDTest.java",
                "blob_url": "https://github.com/apache/tinkerpop/blob/8646af7d6a3a5dafcc5c3ffc5e8ceccbd9a11735/spark-gremlin/src/test/java/org/apache/tinkerpop/gremlin/spark/structure/io/PersistedInputOutputRDDTest.java",
                "raw_url": "https://github.com/apache/tinkerpop/raw/8646af7d6a3a5dafcc5c3ffc5e8ceccbd9a11735/spark-gremlin/src/test/java/org/apache/tinkerpop/gremlin/spark/structure/io/PersistedInputOutputRDDTest.java",
                "status": "modified",
                "changes": 27,
                "additions": 26,
                "contents_url": "https://api.github.com/repos/apache/tinkerpop/contents/spark-gremlin/src/test/java/org/apache/tinkerpop/gremlin/spark/structure/io/PersistedInputOutputRDDTest.java?ref=8646af7d6a3a5dafcc5c3ffc5e8ceccbd9a11735",
                "patch": "@@ -26,6 +26,7 @@\n import org.apache.tinkerpop.gremlin.hadoop.Constants;\n import org.apache.tinkerpop.gremlin.hadoop.structure.HadoopGraph;\n import org.apache.tinkerpop.gremlin.hadoop.structure.io.gryo.GryoInputFormat;\n+import org.apache.tinkerpop.gremlin.hadoop.structure.io.gryo.GryoOutputFormat;\n import org.apache.tinkerpop.gremlin.process.computer.GraphComputer;\n import org.apache.tinkerpop.gremlin.process.computer.bulkloading.BulkLoaderVertexProgram;\n import org.apache.tinkerpop.gremlin.process.computer.ranking.pagerank.PageRankVertexProgram;\n@@ -55,12 +56,33 @@\n  */\n public class PersistedInputOutputRDDTest extends AbstractSparkTest {\n \n+    @Test\n+    public void shouldNotHaveDanglingPersistedComputeRDDs() throws Exception {\n+        Spark.create(\"local[4]\");\n+        final String rddName = TestHelper.makeTestDataDirectory(PersistedInputOutputRDDTest.class, UUID.randomUUID().toString());\n+        final Configuration configuration = super.getBaseConfiguration();\n+        configuration.setProperty(Constants.GREMLIN_HADOOP_INPUT_LOCATION, SparkHadoopGraphProvider.PATHS.get(\"tinkerpop-modern.kryo\"));\n+        configuration.setProperty(Constants.GREMLIN_HADOOP_GRAPH_INPUT_FORMAT, GryoInputFormat.class.getCanonicalName());\n+        configuration.setProperty(Constants.GREMLIN_HADOOP_GRAPH_OUTPUT_FORMAT, GryoOutputFormat.class.getCanonicalName());\n+        configuration.setProperty(Constants.GREMLIN_HADOOP_OUTPUT_LOCATION, rddName);\n+        configuration.setProperty(Constants.GREMLIN_SPARK_PERSIST_CONTEXT, true);\n+        Graph graph = GraphFactory.open(configuration);\n+        assertEquals(6, graph.traversal(GraphTraversalSource.computer(SparkGraphComputer.class)).V().out().count().next().longValue());\n+        ////////\n+        assertFalse(Spark.hasRDD(Constants.getGraphLocation(rddName)));\n+        assertEquals(0, Spark.getContext().getPersistentRDDs().size());\n+        ///////\n+        Spark.close();\n+    }\n+\n+\n     @Test\n     public void shouldPersistRDDBasedOnStorageLevel() throws Exception {\n         Spark.create(\"local[4]\");\n         int counter = 0;\n-        for (final String storageLevel : Arrays.asList(\"MEMORY_ONLY\", \"DISK_ONLY\",\"MEMORY_ONLY_SER\",\"MEMORY_AND_DISK_SER\",\"OFF_HEAP\")) {\n+        for (final String storageLevel : Arrays.asList(\"MEMORY_ONLY\", \"DISK_ONLY\", \"MEMORY_ONLY_SER\", \"MEMORY_AND_DISK_SER\", \"OFF_HEAP\")) {\n             assertEquals(counter * 2, Spark.getRDDs().size());\n+            assertEquals(counter * 2, Spark.getContext().getPersistentRDDs().size());\n             counter++;\n             final String rddName = TestHelper.makeTestDataDirectory(PersistedInputOutputRDDTest.class, UUID.randomUUID().toString());\n             final Configuration configuration = new BaseConfiguration();\n@@ -88,6 +110,7 @@ public void shouldPersistRDDBasedOnStorageLevel() throws Exception {\n             assertTrue(Spark.hasRDD(Constants.getMemoryLocation(rddName, Graph.Hidden.hide(\"traversers\"))));\n             assertEquals(StorageLevel.fromString(storageLevel), Spark.getRDD(Constants.getMemoryLocation(rddName, Graph.Hidden.hide(\"traversers\"))).getStorageLevel());\n             assertEquals(counter * 2, Spark.getRDDs().size());\n+            assertEquals(counter * 2, Spark.getContext().getPersistentRDDs().size());\n             //System.out.println(SparkContextStorage.open().ls());\n         }\n         Spark.close();\n@@ -194,6 +217,7 @@ public void testBulkLoaderVertexProgramChain() throws Exception {\n                 .submit().get();\n         ////\n         assertTrue(Spark.hasRDD(Constants.getGraphLocation(rddName)));\n+        assertEquals(1, Spark.getContext().getPersistentRDDs().size());\n         ////\n         final Graph graph = TinkerGraph.open();\n         final GraphTraversalSource g = graph.traversal();\n@@ -237,6 +261,7 @@ public void testBulkLoaderVertexProgramChainWithInputOutputHelperMapping() throw\n         ////\n         Spark.create(readConfiguration);\n         assertTrue(Spark.hasRDD(Constants.getGraphLocation(rddName)));\n+        assertEquals(1, Spark.getContext().getPersistentRDDs().size());\n         ////\n         final Graph graph = TinkerGraph.open();\n         final GraphTraversalSource g = graph.traversal();",
                "deletions": 1
            }
        ],
        "patched_files": [
            "SparkContextStorage.java",
            "SparkGraphComputer.java",
            "SparkExecutor.java"
        ],
        "unit_tests": [
            "PersistedInputOutputRDDTest.java"
        ]
    },
    "tinkerpop_1f0df4a": {
        "repo": "tinkerpop",
        "message": "Removed other constructors for YamlConfiguration as they were not working.\n\nThose constructors relied on calls to super() which immediately triggered a call to load() thus not allowing the yaml member variable to be initialized leaving a npe to deal with.",
        "commit": "https://github.com/apache/tinkerpop/commit/1f0df4a449fd0cf363e9e47e3864be4f3d845ad8",
        "parent": "https://github.com/apache/tinkerpop/commit/8eaa0c27a454fa4824ea2a0a9a14197f5aa2808e",
        "bug_id": "tinkerpop_1f0df4a",
        "file": [
            {
                "sha": "0a918208ebcd5369a3443ef2597738c14844a2ee",
                "filename": "gremlin-core/src/main/java/org/apache/tinkerpop/gremlin/structure/util/GraphFactory.java",
                "blob_url": "https://github.com/apache/tinkerpop/blob/1f0df4a449fd0cf363e9e47e3864be4f3d845ad8/gremlin-core/src/main/java/org/apache/tinkerpop/gremlin/structure/util/GraphFactory.java",
                "raw_url": "https://github.com/apache/tinkerpop/raw/1f0df4a449fd0cf363e9e47e3864be4f3d845ad8/gremlin-core/src/main/java/org/apache/tinkerpop/gremlin/structure/util/GraphFactory.java",
                "status": "modified",
                "changes": 4,
                "additions": 3,
                "contents_url": "https://api.github.com/repos/apache/tinkerpop/contents/gremlin-core/src/main/java/org/apache/tinkerpop/gremlin/structure/util/GraphFactory.java?ref=1f0df4a449fd0cf363e9e47e3864be4f3d845ad8",
                "patch": "@@ -116,7 +116,9 @@ private static Configuration getConfiguration(final File configurationFile) {\n             switch (fileExtension) {\n                 case \"yml\":\n                 case \"yaml\":\n-                    return new YamlConfiguration(configurationFile);\n+                    final YamlConfiguration config = new YamlConfiguration();\n+                    config.load(configurationFile);\n+                    return config;\n                 case \"xml\":\n                     return new XMLConfiguration(configurationFile);\n                 default:",
                "deletions": 1
            },
            {
                "sha": "4075c988512a399c8177d7bb02b9c034b7a0658f",
                "filename": "gremlin-core/src/main/java/org/apache/tinkerpop/gremlin/util/config/YamlConfiguration.java",
                "blob_url": "https://github.com/apache/tinkerpop/blob/1f0df4a449fd0cf363e9e47e3864be4f3d845ad8/gremlin-core/src/main/java/org/apache/tinkerpop/gremlin/util/config/YamlConfiguration.java",
                "raw_url": "https://github.com/apache/tinkerpop/raw/1f0df4a449fd0cf363e9e47e3864be4f3d845ad8/gremlin-core/src/main/java/org/apache/tinkerpop/gremlin/util/config/YamlConfiguration.java",
                "status": "modified",
                "changes": 20,
                "additions": 0,
                "contents_url": "https://api.github.com/repos/apache/tinkerpop/contents/gremlin-core/src/main/java/org/apache/tinkerpop/gremlin/util/config/YamlConfiguration.java?ref=1f0df4a449fd0cf363e9e47e3864be4f3d845ad8",
                "patch": "@@ -51,26 +51,6 @@ public YamlConfiguration() {\n         initialize();\n     }\n \n-    public YamlConfiguration(final HierarchicalConfiguration c) {\n-        super(c);\n-        initialize();\n-    }\n-\n-    public YamlConfiguration(final String fileName) throws ConfigurationException {\n-        super(fileName);\n-        initialize();\n-    }\n-\n-    public YamlConfiguration(final File file) throws ConfigurationException {\n-        super(file);\n-        initialize();\n-    }\n-\n-    public YamlConfiguration(final URL url) throws ConfigurationException {\n-        super(url);\n-        initialize();\n-    }\n-\n     private void initialize() {\n         yamlOptions.setIndent(DEFAULT_IDENT);\n         yamlOptions.setDefaultFlowStyle(DumperOptions.FlowStyle.BLOCK);",
                "deletions": 20
            },
            {
                "sha": "3a8f8c3676c1e3539a3890c0ebc32ac3b118ac79",
                "filename": "gremlin-core/src/test/java/org/apache/tinkerpop/gremlin/TestHelper.java",
                "blob_url": "https://github.com/apache/tinkerpop/blob/1f0df4a449fd0cf363e9e47e3864be4f3d845ad8/gremlin-core/src/test/java/org/apache/tinkerpop/gremlin/TestHelper.java",
                "raw_url": "https://github.com/apache/tinkerpop/raw/1f0df4a449fd0cf363e9e47e3864be4f3d845ad8/gremlin-core/src/test/java/org/apache/tinkerpop/gremlin/TestHelper.java",
                "status": "modified",
                "changes": 41,
                "additions": 41,
                "contents_url": "https://api.github.com/repos/apache/tinkerpop/contents/gremlin-core/src/test/java/org/apache/tinkerpop/gremlin/TestHelper.java?ref=1f0df4a449fd0cf363e9e47e3864be4f3d845ad8",
                "patch": "@@ -18,8 +18,11 @@\n  */\n package org.apache.tinkerpop.gremlin;\n \n+import java.io.File;\n+import java.io.IOException;\n import java.lang.reflect.Constructor;\n import java.lang.reflect.Modifier;\n+import java.net.URL;\n \n import static org.junit.Assert.assertTrue;\n \n@@ -34,4 +37,42 @@ public static void assertIsUtilityClass(final Class<?> utilityClass) throws Exce\n         constructor.setAccessible(true);\n         constructor.newInstance();\n     }\n+\n+    /**\n+     * See {@code TestHelper} in gremlin-test for the official version.\n+     */\n+    public static File generateTempFile(final Class clazz, final String fileName, final String fileNameSuffix) throws IOException {\n+        final File path = makeTestDataPath(clazz, \"temp\");\n+        if (!path.exists()) path.mkdirs();\n+        return File.createTempFile(fileName, fileNameSuffix, path);\n+    }\n+\n+    /**\n+     * See {@code TestHelper} in gremlin-test for the official version.\n+     */\n+    public static File makeTestDataPath(final Class clazz, final String childPath) {\n+        final String buildDirectory = System.getProperty(\"build.dir\");\n+        final File root = null == buildDirectory ? new File(computePath(clazz)).getParentFile() : new File(buildDirectory);\n+        return new File(root, cleanPathSegment(childPath));\n+    }\n+\n+    /**\n+     * See {@code TestHelper} in gremlin-test for the official version.\n+     */\n+    public static String cleanPathSegment(final String toClean) {\n+        final String cleaned = toClean.replaceAll(\"[.\\\\\\\\/:*?\\\"<>|\\\\[\\\\]\\\\(\\\\)]\", \"\");\n+        if (cleaned.length() == 0)\n+            throw new IllegalStateException(\"Path segment \" + toClean + \" has not valid characters and is thus empty\");\n+        return cleaned;\n+    }\n+\n+    /**\n+     * See {@code TestHelper} in gremlin-test for the official version.\n+     */\n+    private static String computePath(final Class clazz) {\n+        final String clsUri = clazz.getName().replace('.', '/') + \".class\";\n+        final URL url = clazz.getClassLoader().getResource(clsUri);\n+        final String clsPath = url.getPath();\n+        return clsPath.substring(0, clsPath.length() - clsUri.length());\n+    }\n }",
                "deletions": 0
            },
            {
                "sha": "f75a6c46fba23b2672e0ed1efb9186666d130059",
                "filename": "gremlin-core/src/test/java/org/apache/tinkerpop/gremlin/util/config/YamlConfigurationTest.java",
                "blob_url": "https://github.com/apache/tinkerpop/blob/1f0df4a449fd0cf363e9e47e3864be4f3d845ad8/gremlin-core/src/test/java/org/apache/tinkerpop/gremlin/util/config/YamlConfigurationTest.java",
                "raw_url": "https://github.com/apache/tinkerpop/raw/1f0df4a449fd0cf363e9e47e3864be4f3d845ad8/gremlin-core/src/test/java/org/apache/tinkerpop/gremlin/util/config/YamlConfigurationTest.java",
                "status": "modified",
                "changes": 18,
                "additions": 18,
                "contents_url": "https://api.github.com/repos/apache/tinkerpop/contents/gremlin-core/src/test/java/org/apache/tinkerpop/gremlin/util/config/YamlConfigurationTest.java?ref=1f0df4a449fd0cf363e9e47e3864be4f3d845ad8",
                "patch": "@@ -18,12 +18,18 @@\n  */\n package org.apache.tinkerpop.gremlin.util.config;\n \n+import org.apache.commons.configuration.ConfigurationException;\n+import org.apache.tinkerpop.gremlin.TestHelper;\n import org.junit.Test;\n import org.yaml.snakeyaml.DumperOptions;\n import org.yaml.snakeyaml.Yaml;\n \n+import java.io.File;\n+import java.io.FileWriter;\n+import java.io.Reader;\n import java.io.StringReader;\n import java.io.StringWriter;\n+import java.io.Writer;\n import java.util.Arrays;\n import java.util.HashMap;\n import java.util.LinkedHashMap;\n@@ -36,6 +42,18 @@\n  */\n public class YamlConfigurationTest {\n \n+    @Test(expected = ConfigurationException.class)\n+    public void shouldThrowConfigurationExceptionIfLoadFails() throws Exception {\n+        final YamlConfiguration config = new YamlConfiguration();\n+        config.load((Reader) null);\n+    }\n+\n+    @Test(expected = ConfigurationException.class)\n+    public void shouldThrowConfigurationExceptionIfSaveFails() throws Exception {\n+        final YamlConfiguration config = new YamlConfiguration();\n+        config.save((Writer) null);\n+    }\n+\n     @Test\n     public void shouldLoadSaveConfiguration() throws Exception {\n         final YamlConfiguration config = new YamlConfiguration();",
                "deletions": 0
            },
            {
                "sha": "d3dba57e9c91ed7fa0d953777699578ea069e3fc",
                "filename": "gremlin-test/src/main/java/org/apache/tinkerpop/gremlin/TestHelper.java",
                "blob_url": "https://github.com/apache/tinkerpop/blob/1f0df4a449fd0cf363e9e47e3864be4f3d845ad8/gremlin-test/src/main/java/org/apache/tinkerpop/gremlin/TestHelper.java",
                "raw_url": "https://github.com/apache/tinkerpop/raw/1f0df4a449fd0cf363e9e47e3864be4f3d845ad8/gremlin-test/src/main/java/org/apache/tinkerpop/gremlin/TestHelper.java",
                "status": "modified",
                "changes": 3,
                "additions": 0,
                "contents_url": "https://api.github.com/repos/apache/tinkerpop/contents/gremlin-test/src/main/java/org/apache/tinkerpop/gremlin/TestHelper.java?ref=1f0df4a449fd0cf363e9e47e3864be4f3d845ad8",
                "patch": "@@ -23,7 +23,6 @@\n import org.apache.tinkerpop.gremlin.structure.Property;\n import org.apache.tinkerpop.gremlin.structure.Vertex;\n import org.apache.tinkerpop.gremlin.structure.VertexProperty;\n-import org.apache.tinkerpop.gremlin.structure.io.graphml.GraphMLResourceAccess;\n import org.apache.tinkerpop.gremlin.structure.util.Comparators;\n import org.apache.tinkerpop.gremlin.util.iterator.IteratorUtils;\n \n@@ -32,7 +31,6 @@\n import java.io.IOException;\n import java.io.InputStream;\n import java.net.URL;\n-import java.util.Comparator;\n import java.util.Iterator;\n import java.util.List;\n \n@@ -113,7 +111,6 @@ public static String cleanPathSegment(final String toClean) {\n         return cleaned;\n     }\n \n-\n     ///////////////\n \n     public static void validateVertexEquality(final Vertex originalVertex, final Vertex otherVertex, boolean testEdges) {",
                "deletions": 3
            }
        ],
        "patched_files": [
            "YamlConfiguration.java",
            "GraphFactory.java"
        ],
        "unit_tests": [
            "YamlConfigurationTest.java",
            "TestHelper.java"
        ]
    },
    "tinkerpop_b195b62": {
        "repo": "tinkerpop",
        "message": "added NPE protection to ObjectWritable and added ObjectWritableTest which ensure ObjectWritable is comparable, gettable, toStringable, etc. even when its empty() -- that is, this.t == null. CTR. Fixed TINKERPOP-1251",
        "commit": "https://github.com/apache/tinkerpop/commit/b195b623d02dcfb5bf188ab10fba2e7a7ef399c7",
        "parent": "https://github.com/apache/tinkerpop/commit/45c4303125ffdec915b66258d560e7b9d86bcec5",
        "bug_id": "tinkerpop_b195b62",
        "file": [
            {
                "sha": "9e101ef84f0b1357c06607acc270f5aed181516d",
                "filename": "hadoop-gremlin/src/main/java/org/apache/tinkerpop/gremlin/hadoop/structure/io/ObjectWritable.java",
                "blob_url": "https://github.com/apache/tinkerpop/blob/b195b623d02dcfb5bf188ab10fba2e7a7ef399c7/hadoop-gremlin/src/main/java/org/apache/tinkerpop/gremlin/hadoop/structure/io/ObjectWritable.java",
                "raw_url": "https://github.com/apache/tinkerpop/raw/b195b623d02dcfb5bf188ab10fba2e7a7ef399c7/hadoop-gremlin/src/main/java/org/apache/tinkerpop/gremlin/hadoop/structure/io/ObjectWritable.java",
                "status": "modified",
                "changes": 9,
                "additions": 6,
                "contents_url": "https://api.github.com/repos/apache/tinkerpop/contents/hadoop-gremlin/src/main/java/org/apache/tinkerpop/gremlin/hadoop/structure/io/ObjectWritable.java?ref=b195b623d02dcfb5bf188ab10fba2e7a7ef399c7",
                "patch": "@@ -36,6 +36,7 @@\n  */\n public final class ObjectWritable<T> implements WritableComparable<ObjectWritable>, Serializable {\n \n+    private static final String NULL = \"null\";\n     private static final ObjectWritable<MapReduce.NullObject> NULL_OBJECT_WRITABLE = new ObjectWritable<>(MapReduce.NullObject.instance());\n \n     T t;\n@@ -57,7 +58,7 @@ public void set(final T t) {\n \n     @Override\n     public String toString() {\n-        return this.t.toString();\n+        return null == this.t ? NULL : this.t.toString();\n     }\n \n     @Override\n@@ -97,7 +98,9 @@ private void readObject(final ObjectInputStream inputStream) throws IOException,\n \n     @Override\n     public int compareTo(final ObjectWritable objectWritable) {\n-        if (this.t instanceof Comparable)\n+        if (null == this.t)\n+            return objectWritable.isEmpty() ? 0 : -1;\n+        else if (this.t instanceof Comparable && !objectWritable.isEmpty())\n             return ((Comparable) this.t).compareTo(objectWritable.get());\n         else if (this.t.equals(objectWritable.get()))\n             return 0;\n@@ -110,7 +113,7 @@ public boolean isEmpty() {\n     }\n \n     public static ObjectWritable empty() {\n-        return new ObjectWritable(null);\n+        return new ObjectWritable<>(null);\n     }\n \n     @Override",
                "deletions": 3
            },
            {
                "sha": "12f4694c03cb65ea384970e21c54fa7e97d3f742",
                "filename": "hadoop-gremlin/src/test/java/org/apache/tinkerpop/gremlin/hadoop/structure/io/ObjectWritableTest.java",
                "blob_url": "https://github.com/apache/tinkerpop/blob/b195b623d02dcfb5bf188ab10fba2e7a7ef399c7/hadoop-gremlin/src/test/java/org/apache/tinkerpop/gremlin/hadoop/structure/io/ObjectWritableTest.java",
                "raw_url": "https://github.com/apache/tinkerpop/raw/b195b623d02dcfb5bf188ab10fba2e7a7ef399c7/hadoop-gremlin/src/test/java/org/apache/tinkerpop/gremlin/hadoop/structure/io/ObjectWritableTest.java",
                "status": "added",
                "changes": 49,
                "additions": 49,
                "contents_url": "https://api.github.com/repos/apache/tinkerpop/contents/hadoop-gremlin/src/test/java/org/apache/tinkerpop/gremlin/hadoop/structure/io/ObjectWritableTest.java?ref=b195b623d02dcfb5bf188ab10fba2e7a7ef399c7",
                "patch": "@@ -0,0 +1,49 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.apache.tinkerpop.gremlin.hadoop.structure.io;\n+\n+import org.junit.Test;\n+\n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertFalse;\n+import static org.junit.Assert.assertNull;\n+import static org.junit.Assert.assertTrue;\n+\n+/**\n+ * @author Marko A. Rodriguez (http://markorodriguez.com)\n+ */\n+public class ObjectWritableTest {\n+\n+    @Test\n+    public void shouldNotHaveANullPointerException() {\n+        final ObjectWritable object = new ObjectWritable<>(null);\n+        assertNull(object.get());\n+        assertTrue(object.isEmpty());\n+        assertTrue(object.equals(ObjectWritable.empty()));\n+        assertFalse(object.equals(new ObjectWritable<>(\"hello\")));\n+        assertEquals(\"null\", object.toString());\n+        assertEquals(-1, object.compareTo(new ObjectWritable<>(\"blah\")));\n+        assertEquals(-1, new ObjectWritable<>(\"bloop\").compareTo(ObjectWritable.empty()));\n+        assertEquals(-1, new ObjectWritable<>(\"bloop\").compareTo(object));\n+        assertEquals(0, ObjectWritable.empty().compareTo(object));\n+        assertEquals(0, object.compareTo(ObjectWritable.empty()));\n+        assertEquals(0, object.compareTo(object));\n+    }\n+}",
                "deletions": 0
            }
        ],
        "patched_files": [
            "ObjectWritable.java"
        ],
        "unit_tests": [
            "ObjectWritableTest.java"
        ]
    },
    "tinkerpop_fa2d626": {
        "repo": "tinkerpop",
        "message": "merged tp31 ObjectWritable NPE fix.",
        "commit": "https://github.com/apache/tinkerpop/commit/fa2d626951f799a0a50191f9653a17b5c18cdc20",
        "parent": "https://github.com/apache/tinkerpop/commit/ffde3fe419574d587911cc1b3979be042f70e140",
        "bug_id": "tinkerpop_fa2d626",
        "file": [
            {
                "sha": "9a07f75723f60b0e2fe7a00758ac3f84eb0dc255",
                "filename": "hadoop-gremlin/src/main/java/org/apache/tinkerpop/gremlin/hadoop/structure/io/ObjectWritable.java",
                "blob_url": "https://github.com/apache/tinkerpop/blob/fa2d626951f799a0a50191f9653a17b5c18cdc20/hadoop-gremlin/src/main/java/org/apache/tinkerpop/gremlin/hadoop/structure/io/ObjectWritable.java",
                "raw_url": "https://github.com/apache/tinkerpop/raw/fa2d626951f799a0a50191f9653a17b5c18cdc20/hadoop-gremlin/src/main/java/org/apache/tinkerpop/gremlin/hadoop/structure/io/ObjectWritable.java",
                "status": "modified",
                "changes": 9,
                "additions": 6,
                "contents_url": "https://api.github.com/repos/apache/tinkerpop/contents/hadoop-gremlin/src/main/java/org/apache/tinkerpop/gremlin/hadoop/structure/io/ObjectWritable.java?ref=fa2d626951f799a0a50191f9653a17b5c18cdc20",
                "patch": "@@ -36,6 +36,7 @@\n  */\n public final class ObjectWritable<T> implements WritableComparable<ObjectWritable>, Serializable {\n \n+    private static final String NULL = \"null\";\n     private static final ObjectWritable<MapReduce.NullObject> NULL_OBJECT_WRITABLE = new ObjectWritable<>(MapReduce.NullObject.instance());\n \n     T t;\n@@ -57,7 +58,7 @@ public void set(final T t) {\n \n     @Override\n     public String toString() {\n-        return this.t.toString();\n+        return null == this.t ? NULL : this.t.toString();\n     }\n \n     @Override\n@@ -97,7 +98,9 @@ private void readObject(final ObjectInputStream inputStream) throws IOException,\n \n     @Override\n     public int compareTo(final ObjectWritable objectWritable) {\n-        if (this.t instanceof Comparable)\n+        if (null == this.t)\n+            return objectWritable.isEmpty() ? 0 : -1;\n+        else if (this.t instanceof Comparable && !objectWritable.isEmpty())\n             return ((Comparable) this.t).compareTo(objectWritable.get());\n         else if (this.t.equals(objectWritable.get()))\n             return 0;\n@@ -125,7 +128,7 @@ else if (this.isEmpty())\n \n     @Override\n     public int hashCode() {\n-        return this.isEmpty() ? 0 : this.t.hashCode();\n+        return null == this.t ? 0 : this.t.hashCode();\n     }\n \n     public static ObjectWritable<MapReduce.NullObject> getNullObjectWritable() {",
                "deletions": 3
            },
            {
                "sha": "12f4694c03cb65ea384970e21c54fa7e97d3f742",
                "filename": "hadoop-gremlin/src/test/java/org/apache/tinkerpop/gremlin/hadoop/structure/io/ObjectWritableTest.java",
                "blob_url": "https://github.com/apache/tinkerpop/blob/fa2d626951f799a0a50191f9653a17b5c18cdc20/hadoop-gremlin/src/test/java/org/apache/tinkerpop/gremlin/hadoop/structure/io/ObjectWritableTest.java",
                "raw_url": "https://github.com/apache/tinkerpop/raw/fa2d626951f799a0a50191f9653a17b5c18cdc20/hadoop-gremlin/src/test/java/org/apache/tinkerpop/gremlin/hadoop/structure/io/ObjectWritableTest.java",
                "status": "added",
                "changes": 49,
                "additions": 49,
                "contents_url": "https://api.github.com/repos/apache/tinkerpop/contents/hadoop-gremlin/src/test/java/org/apache/tinkerpop/gremlin/hadoop/structure/io/ObjectWritableTest.java?ref=fa2d626951f799a0a50191f9653a17b5c18cdc20",
                "patch": "@@ -0,0 +1,49 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.apache.tinkerpop.gremlin.hadoop.structure.io;\n+\n+import org.junit.Test;\n+\n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertFalse;\n+import static org.junit.Assert.assertNull;\n+import static org.junit.Assert.assertTrue;\n+\n+/**\n+ * @author Marko A. Rodriguez (http://markorodriguez.com)\n+ */\n+public class ObjectWritableTest {\n+\n+    @Test\n+    public void shouldNotHaveANullPointerException() {\n+        final ObjectWritable object = new ObjectWritable<>(null);\n+        assertNull(object.get());\n+        assertTrue(object.isEmpty());\n+        assertTrue(object.equals(ObjectWritable.empty()));\n+        assertFalse(object.equals(new ObjectWritable<>(\"hello\")));\n+        assertEquals(\"null\", object.toString());\n+        assertEquals(-1, object.compareTo(new ObjectWritable<>(\"blah\")));\n+        assertEquals(-1, new ObjectWritable<>(\"bloop\").compareTo(ObjectWritable.empty()));\n+        assertEquals(-1, new ObjectWritable<>(\"bloop\").compareTo(object));\n+        assertEquals(0, ObjectWritable.empty().compareTo(object));\n+        assertEquals(0, object.compareTo(ObjectWritable.empty()));\n+        assertEquals(0, object.compareTo(object));\n+    }\n+}",
                "deletions": 0
            }
        ],
        "patched_files": [
            "ObjectWritable.java"
        ],
        "unit_tests": [
            "ObjectWritableTest.java"
        ]
    },
    "tinkerpop_c890ceb": {
        "repo": "tinkerpop",
        "message": "fixed the NPE that occurs in OLAP when you have a local/OLTP group() nested within an OLAP group(). The solution is elegant, but the problem, its not as efficient as the code when we had the NPE.... dar. Going to fiddle some more tomorrow to see if I can get it faster --- 600ms vs 400ms differences.",
        "commit": "https://github.com/apache/tinkerpop/commit/c890cebad5231cdab8744878bebb4ea363689a3a",
        "parent": "https://github.com/apache/tinkerpop/commit/44d40f60664b8b758f02bc8e04300b931b2c6622",
        "bug_id": "tinkerpop_c890ceb",
        "file": [
            {
                "sha": "b430d8f8fabfb465a4f8545a6194dfd08326c3ad",
                "filename": "gremlin-core/src/main/java/org/apache/tinkerpop/gremlin/process/traversal/step/map/GroupStep.java",
                "blob_url": "https://github.com/apache/tinkerpop/blob/c890cebad5231cdab8744878bebb4ea363689a3a/gremlin-core/src/main/java/org/apache/tinkerpop/gremlin/process/traversal/step/map/GroupStep.java",
                "raw_url": "https://github.com/apache/tinkerpop/raw/c890cebad5231cdab8744878bebb4ea363689a3a/gremlin-core/src/main/java/org/apache/tinkerpop/gremlin/process/traversal/step/map/GroupStep.java",
                "status": "modified",
                "changes": 210,
                "additions": 110,
                "contents_url": "https://api.github.com/repos/apache/tinkerpop/contents/gremlin-core/src/main/java/org/apache/tinkerpop/gremlin/process/traversal/step/map/GroupStep.java?ref=c890cebad5231cdab8744878bebb4ea363689a3a",
                "patch": "@@ -29,7 +29,6 @@\n import org.apache.tinkerpop.gremlin.process.traversal.lambda.TokenTraversal;\n import org.apache.tinkerpop.gremlin.process.traversal.step.Barrier;\n import org.apache.tinkerpop.gremlin.process.traversal.step.ByModulating;\n-import org.apache.tinkerpop.gremlin.process.traversal.step.GraphComputing;\n import org.apache.tinkerpop.gremlin.process.traversal.step.TraversalParent;\n import org.apache.tinkerpop.gremlin.process.traversal.step.util.ReducingBarrierStep;\n import org.apache.tinkerpop.gremlin.process.traversal.traverser.TraverserRequirement;\n@@ -39,32 +38,32 @@\n import org.apache.tinkerpop.gremlin.structure.util.StringFactory;\n import org.apache.tinkerpop.gremlin.util.function.HashMapSupplier;\n import org.apache.tinkerpop.gremlin.util.iterator.IteratorUtils;\n+import org.javatuples.Pair;\n \n import java.io.Serializable;\n import java.util.ArrayList;\n import java.util.Arrays;\n import java.util.HashMap;\n import java.util.List;\n import java.util.Map;\n-import java.util.Optional;\n import java.util.Set;\n import java.util.function.BinaryOperator;\n \n /**\n  * @author Marko A. Rodriguez (http://markorodriguez.com)\n  */\n-public final class GroupStep<S, K, V> extends ReducingBarrierStep<S, Map<K, V>> implements ByModulating, TraversalParent, GraphComputing {\n+public final class GroupStep<S, K, V> extends ReducingBarrierStep<S, Map<K, V>> implements ByModulating, TraversalParent {\n \n     private char state = 'k';\n     private Traversal.Admin<S, K> keyTraversal = null;\n-    private Traversal.Admin<S, V> valueTraversal = this.integrateChild(__.fold().asAdmin());\n-    private Traversal.Admin<S, ?> preTraversal = null;      // used in OLAP\n-    private ReducingBarrierStep reducingBarrierStep = null; // used in OLAP\n-    private boolean onGraphComputer = false;\n+    private Traversal.Admin<S, ?> preTraversal;\n+    private Traversal.Admin<S, V> valueTraversal;\n \n     public GroupStep(final Traversal.Admin traversal) {\n         super(traversal);\n-        this.setReducingBiOperator(new GroupBiOperator<>(this.valueTraversal, this.onGraphComputer));\n+        this.valueTraversal = this.integrateChild(__.fold().asAdmin());\n+        this.preTraversal = this.integrateChild(splitOnBarrierStep(this.valueTraversal).get(0));\n+        this.setReducingBiOperator(new GroupBiOperator<>(this.valueTraversal));\n         this.setSeedSupplier(HashMapSupplier.instance());\n     }\n \n@@ -75,7 +74,8 @@ public void modulateBy(final Traversal.Admin<?, ?> kvTraversal) {\n             this.state = 'v';\n         } else if ('v' == this.state) {\n             this.valueTraversal = this.integrateChild(convertValueTraversal(kvTraversal));\n-            this.setReducingBiOperator(new GroupBiOperator<>(this.valueTraversal, this.onGraphComputer));\n+            this.preTraversal = this.integrateChild(splitOnBarrierStep(this.valueTraversal).get(0));\n+            this.setReducingBiOperator(new GroupBiOperator<>(this.valueTraversal));\n             this.state = 'x';\n         } else {\n             throw new IllegalStateException(\"The key and value traversals for group()-step have already been set: \" + this);\n@@ -85,21 +85,11 @@ public void modulateBy(final Traversal.Admin<?, ?> kvTraversal) {\n     @Override\n     public Map<K, V> projectTraverser(final Traverser.Admin<S> traverser) {\n         final Map<K, V> map = new HashMap<>(1);\n-        final K key = TraversalUtil.applyNullable(traverser, this.keyTraversal);\n-        if (this.onGraphComputer) {\n-            if (null == this.reducingBarrierStep) {\n-                final TraverserSet traverserSet = new TraverserSet();\n-                this.preTraversal.reset();\n-                this.preTraversal.addStart(traverser.split());\n-                this.preTraversal.getEndStep().forEachRemaining(traverserSet::add);\n-                map.put(key, (V) traverserSet);\n-            } else {\n-                this.valueTraversal.reset();\n-                this.valueTraversal.addStart(traverser.split());\n-                map.put(key, (V) this.reducingBarrierStep.nextBarrier());\n-            }\n-        } else\n-            map.put(key, (V) traverser);\n+        final TraverserSet traverserSet = new TraverserSet<>();\n+        this.preTraversal.reset();\n+        this.preTraversal.addStart(traverser.split());\n+        this.preTraversal.getEndStep().forEachRemaining(traverserSet::add);\n+        map.put(TraversalUtil.applyNullable(traverser, this.keyTraversal), (V) traverserSet);\n         return map;\n     }\n \n@@ -128,11 +118,7 @@ public String toString() {\n         if (null != this.keyTraversal)\n             clone.keyTraversal = this.keyTraversal.clone();\n         clone.valueTraversal = this.valueTraversal.clone();\n-        if (null != this.preTraversal)\n-            clone.preTraversal = this.preTraversal.clone();\n-        final Optional<Barrier> optional = TraversalHelper.getFirstStepOfAssignableClass(Barrier.class, clone.valueTraversal);\n-        if (optional.isPresent() && optional.get() instanceof ReducingBarrierStep)\n-            clone.reducingBarrierStep = (ReducingBarrierStep) optional.get();\n+        clone.preTraversal = this.integrateChild(GroupStep.splitOnBarrierStep(clone.valueTraversal).get(0));\n         return clone;\n     }\n \n@@ -154,37 +140,19 @@ public int hashCode() {\n \n     @Override\n     public Map<K, V> generateFinalResult(final Map<K, V> object) {\n-        return GroupStep.doFinalReduction((Map<K, Object>) object, this.valueTraversal, this.onGraphComputer);\n-    }\n-\n-    @Override\n-    public void onGraphComputer() {\n-        this.preTraversal = this.integrateChild(splitOnBarrierStep(this.valueTraversal).get(0));\n-        final Optional<Barrier> optional = TraversalHelper.getFirstStepOfAssignableClass(Barrier.class, this.valueTraversal);\n-        if (optional.isPresent() && optional.get() instanceof ReducingBarrierStep)\n-            this.reducingBarrierStep = (ReducingBarrierStep) optional.get();\n-        this.setReducingBiOperator(new GroupBiOperator<>(this.valueTraversal, this.onGraphComputer = true));\n+        return GroupStep.doFinalReduction((Map<K, Object>) object, this.valueTraversal);\n     }\n \n     ///////////////////////\n \n     public static final class GroupBiOperator<K, V> implements BinaryOperator<Map<K, V>>, Serializable {\n \n-        private boolean onGraphComputer;\n-        private BinaryOperator reducingBinaryOperator;          // OLAP (w/ reducer)\n-        private transient Traversal.Admin<?, V> valueTraversal; // OLTP\n-        private transient Map<K, Integer> counters;             // OLTP\n+        private Traversal.Admin<?, V> valueTraversal;\n+        private ReducingBarrierStep reducingBarrierStep = null;\n \n-        public GroupBiOperator(final Traversal.Admin<?, V> valueTraversal, final boolean onGraphComputer) {\n-            this.onGraphComputer = onGraphComputer;\n-            if (this.onGraphComputer) {\n-                final Optional<Barrier> optional = TraversalHelper.getFirstStepOfAssignableClass(Barrier.class, valueTraversal);\n-                if (optional.isPresent() && optional.get() instanceof ReducingBarrierStep)\n-                    this.reducingBinaryOperator = ((ReducingBarrierStep) optional.get()).getBiOperator();\n-            } else {\n-                this.valueTraversal = valueTraversal;\n-                this.counters = new HashMap<>();\n-            }\n+        public GroupBiOperator(final Traversal.Admin<?, V> valueTraversal) {\n+            this.valueTraversal = valueTraversal.clone();\n+            this.reducingBarrierStep = TraversalHelper.getFirstStepOfAssignableClass(ReducingBarrierStep.class, this.valueTraversal).orElse(null);\n         }\n \n         public GroupBiOperator() {\n@@ -194,43 +162,84 @@ public GroupBiOperator() {\n         @Override\n         public Map<K, V> apply(final Map<K, V> mapA, final Map<K, V> mapB) {\n             for (final K key : mapB.keySet()) {\n-                if (this.onGraphComputer) {\n-                    final Object objectB = mapB.get(key);\n-                    if (null != this.reducingBinaryOperator) {\n-                        // OLAP -- if there is a mid-traversal, apply the binary reducer and propagate the mutating barrier\n-                        final Object objectA = mapA.get(key);\n-                        mapA.put(key, (V) (null == objectA ? objectB : this.reducingBinaryOperator.apply(objectA, objectB)));\n-                    } else {\n-                        // OLAP -- if there is no mid-traversal reducer, aggregate pre-barrier traversers into a traverser set (expensive, but that's that)\n-                        final Object objectA = mapA.get(key);\n-                        final TraverserSet traverserSet;\n-                        if (null == objectA) {\n-                            traverserSet = new TraverserSet();\n-                            mapA.put(key, (V) traverserSet);\n-                        } else\n-                            traverserSet = (TraverserSet) objectA;\n-                        traverserSet.addAll((TraverserSet) objectB);\n-                    }\n+                Object objectA = mapA.get(key);\n+                final Object objectB = mapB.get(key);\n+                assert null != objectB;\n+                if (null == objectA) {\n+                    objectA = objectB;\n                 } else {\n-                    // OLTP -- do mid-barrier reductions if they exist, else don't. Bulking is also available here because of addStart() prior to barrier.\n-                    final Traverser.Admin traverser = (Traverser.Admin) mapB.get(key);\n-                    Traversal.Admin valueTraversalClone = (Traversal.Admin) mapA.get(key);\n-                    if (null == valueTraversalClone) {\n-                        this.counters.put(key, 0);\n-                        valueTraversalClone = this.valueTraversal.clone();\n-                        mapA.put(key, (V) valueTraversalClone);\n-                    }\n-                    valueTraversalClone.addStart(traverser);\n-                    if (this.counters.compute(key, (k, i) -> ++i) > 1000) {\n-                        this.counters.put(key, 0);\n-                        TraversalHelper.getFirstStepOfAssignableClass(Barrier.class, valueTraversalClone).ifPresent(Barrier::processAllStarts);\n+                    if (objectA instanceof TraverserSet) {\n+                        if (objectB instanceof TraverserSet) {\n+                            final TraverserSet set = (TraverserSet) objectA;\n+                            set.addAll((TraverserSet) objectB);\n+                            if (null != this.reducingBarrierStep && set.size() > 1000) {\n+                                this.valueTraversal.reset();\n+                                this.reducingBarrierStep.addStarts(set.iterator());\n+                                objectA = this.reducingBarrierStep.nextBarrier();\n+                            }\n+                        } else if (objectB instanceof Pair) {\n+                            final TraverserSet set = (TraverserSet) objectA;\n+                            set.addAll((TraverserSet) ((Pair) objectB).getValue0());\n+                            if (set.size() > 1000) {\n+                                this.valueTraversal.reset();\n+                                this.reducingBarrierStep.addStarts(set.iterator());\n+                                this.reducingBarrierStep.addBarrier(((Pair) objectB).getValue1());\n+                                objectA = this.reducingBarrierStep.nextBarrier();\n+                            } else {\n+                                objectA = Pair.with(set, ((Pair) objectB).getValue1());\n+                            }\n+                        } else {\n+                            objectA = Pair.with(objectA, objectB);\n+                        }\n+                    } else if (objectA instanceof Pair) {\n+                        if (objectB instanceof TraverserSet) {\n+                            final TraverserSet set = (TraverserSet) ((Pair) objectA).getValue0();\n+                            set.addAll((TraverserSet) objectB);\n+                            if (null != this.reducingBarrierStep &&set.size() > 1000) {\n+                                this.valueTraversal.reset();\n+                                this.reducingBarrierStep.addStarts(set.iterator());\n+                                this.reducingBarrierStep.addBarrier(((Pair) objectA).getValue1());\n+                                objectA = this.reducingBarrierStep.nextBarrier();\n+                            }\n+                        } else if (objectB instanceof Pair) {\n+                            this.valueTraversal.reset();\n+                            this.reducingBarrierStep.addBarrier(((Pair) objectA).getValue1());\n+                            this.reducingBarrierStep.addBarrier(((Pair) objectB).getValue1());\n+                            this.reducingBarrierStep.addStarts(((TraverserSet) ((Pair) objectA).getValue0()).iterator());\n+                            this.reducingBarrierStep.addStarts(((TraverserSet) ((Pair) objectB).getValue0()).iterator());\n+                            objectA = this.reducingBarrierStep.nextBarrier();\n+                        } else {\n+                            this.valueTraversal.reset();\n+                            this.reducingBarrierStep.addBarrier(((Pair) objectA).getValue1());\n+                            this.reducingBarrierStep.addBarrier(objectB);\n+                            this.reducingBarrierStep.addStarts(((TraverserSet) ((Pair) objectA).getValue0()).iterator());\n+                            objectA = this.reducingBarrierStep.nextBarrier();\n+                        }\n+                    } else {\n+                        if (objectB instanceof TraverserSet) {\n+                            objectA = Pair.with(objectB, objectA);\n+                        } else if (objectB instanceof Pair) {\n+                            this.valueTraversal.reset();\n+                            this.reducingBarrierStep.addBarrier(objectA);\n+                            this.reducingBarrierStep.addBarrier(((Pair) objectB).getValue1());\n+                            this.reducingBarrierStep.addStarts(((TraverserSet) ((Pair) objectB).getValue0()).iterator());\n+                            objectA = this.reducingBarrierStep.nextBarrier();\n+                        } else {\n+                            this.valueTraversal.reset();\n+                            this.reducingBarrierStep.addBarrier(objectA);\n+                            this.reducingBarrierStep.addBarrier(objectB);\n+                            objectA = this.reducingBarrierStep.nextBarrier();\n+                        }\n                     }\n                 }\n+                mapA.put(key, (V) objectA);\n             }\n             return mapA;\n+\n         }\n     }\n \n+\n     ///////////////////////\n \n     public static <S, E> Traversal.Admin<S, E> convertValueTraversal(final Traversal.Admin<S, E> valueTraversal) {\n@@ -263,30 +272,31 @@ public GroupBiOperator() {\n         }\n     }\n \n-    public static <K, V> Map<K, V> doFinalReduction(final Map<K, Object> map, final Traversal.Admin<?, V> valueTraversal, final boolean onGraphComputer) {\n+    public static <K, V> Map<K, V> doFinalReduction(final Map<K, Object> map, final Traversal.Admin<?, V> valueTraversal) {\n         final Map<K, V> reducedMap = new HashMap<>(map.size());\n-        // if not on OLAP, who cares --- don't waste time computing barriers\n-        final boolean hasReducingBarrier = onGraphComputer &&\n-                TraversalHelper.getFirstStepOfAssignableClass(Barrier.class, valueTraversal).isPresent() &&\n-                TraversalHelper.getFirstStepOfAssignableClass(Barrier.class, valueTraversal).get() instanceof ReducingBarrierStep;\n-        final Traversal.Admin<?, ?> postTraversal = (onGraphComputer & !hasReducingBarrier) ? splitOnBarrierStep(valueTraversal.clone()).get(1) : null;\n+        final ReducingBarrierStep reducingBarrierStep = TraversalHelper.getFirstStepOfAssignableClass(ReducingBarrierStep.class, valueTraversal).orElse(null);\n         IteratorUtils.removeOnNext(map.entrySet().iterator()).forEachRemaining(entry -> {\n-            if (onGraphComputer) {\n-                if (hasReducingBarrier) {   // OLAP with reduction (barrier)\n-                    valueTraversal.reset();\n-                    TraversalHelper.getFirstStepOfAssignableClass(Barrier.class, valueTraversal).get().addBarrier(entry.getValue());\n-                    reducedMap.put(entry.getKey(), valueTraversal.next());\n-                } else {                    // OLAP without reduction (traverser set)\n-                    postTraversal.reset();\n-                    postTraversal.addStarts(((TraverserSet) entry.getValue()).iterator());\n-                    reducedMap.put(entry.getKey(), (V) postTraversal.next());\n-                }\n-            } else                          // OLTP is just a traversal\n-                reducedMap.put(entry.getKey(), ((Traversal.Admin<?, V>) entry.getValue()).next());\n+            valueTraversal.reset();\n+            if (null == reducingBarrierStep) {\n+                reducedMap.put(entry.getKey(), entry.getValue() instanceof TraverserSet ?\n+                        ((TraverserSet<V>) entry.getValue()).iterator().next().get() :\n+                        (V) entry.getValue());\n+            } else {\n+                if (entry.getValue() instanceof TraverserSet)\n+                    reducingBarrierStep.addStarts(((TraverserSet) entry.getValue()).iterator());\n+                else if (entry.getValue() instanceof Pair) {\n+                    reducingBarrierStep.addStarts(((TraverserSet) (((Pair) entry.getValue()).getValue0())).iterator());\n+                    reducingBarrierStep.addBarrier((((Pair) entry.getValue()).getValue1()));\n+                } else\n+                    reducingBarrierStep.addBarrier(entry.getValue());\n+                reducedMap.put(entry.getKey(), valueTraversal.next());\n+            }\n         });\n         assert map.isEmpty();\n         map.clear();\n         map.putAll(reducedMap);\n         return (Map<K, V>) map;\n     }\n }\n+\n+",
                "deletions": 100
            },
            {
                "sha": "4fc4ffad2740fef5d29e30e14587043cd796ec56",
                "filename": "gremlin-core/src/main/java/org/apache/tinkerpop/gremlin/process/traversal/step/sideEffect/GroupSideEffectStep.java",
                "blob_url": "https://github.com/apache/tinkerpop/blob/c890cebad5231cdab8744878bebb4ea363689a3a/gremlin-core/src/main/java/org/apache/tinkerpop/gremlin/process/traversal/step/sideEffect/GroupSideEffectStep.java",
                "raw_url": "https://github.com/apache/tinkerpop/raw/c890cebad5231cdab8744878bebb4ea363689a3a/gremlin-core/src/main/java/org/apache/tinkerpop/gremlin/process/traversal/step/sideEffect/GroupSideEffectStep.java",
                "status": "modified",
                "changes": 59,
                "additions": 17,
                "contents_url": "https://api.github.com/repos/apache/tinkerpop/contents/gremlin-core/src/main/java/org/apache/tinkerpop/gremlin/process/traversal/step/sideEffect/GroupSideEffectStep.java?ref=c890cebad5231cdab8744878bebb4ea363689a3a",
                "patch": "@@ -21,16 +21,12 @@\n import org.apache.tinkerpop.gremlin.process.traversal.Traversal;\n import org.apache.tinkerpop.gremlin.process.traversal.Traverser;\n import org.apache.tinkerpop.gremlin.process.traversal.dsl.graph.__;\n-import org.apache.tinkerpop.gremlin.process.traversal.step.Barrier;\n import org.apache.tinkerpop.gremlin.process.traversal.step.ByModulating;\n-import org.apache.tinkerpop.gremlin.process.traversal.step.GraphComputing;\n import org.apache.tinkerpop.gremlin.process.traversal.step.SideEffectCapable;\n import org.apache.tinkerpop.gremlin.process.traversal.step.TraversalParent;\n import org.apache.tinkerpop.gremlin.process.traversal.step.map.GroupStep;\n-import org.apache.tinkerpop.gremlin.process.traversal.step.util.ReducingBarrierStep;\n import org.apache.tinkerpop.gremlin.process.traversal.traverser.TraverserRequirement;\n import org.apache.tinkerpop.gremlin.process.traversal.traverser.util.TraverserSet;\n-import org.apache.tinkerpop.gremlin.process.traversal.util.TraversalHelper;\n import org.apache.tinkerpop.gremlin.process.traversal.util.TraversalUtil;\n import org.apache.tinkerpop.gremlin.structure.util.StringFactory;\n import org.apache.tinkerpop.gremlin.util.function.HashMapSupplier;\n@@ -39,27 +35,26 @@\n import java.util.HashMap;\n import java.util.List;\n import java.util.Map;\n-import java.util.Optional;\n import java.util.Set;\n \n /**\n  * @author Marko A. Rodriguez (http://markorodriguez.com)\n  */\n-public final class GroupSideEffectStep<S, K, V> extends SideEffectStep<S> implements SideEffectCapable<Map<K, ?>, Map<K, V>>, TraversalParent, ByModulating, GraphComputing {\n+public final class GroupSideEffectStep<S, K, V> extends SideEffectStep<S> implements SideEffectCapable<Map<K, ?>, Map<K, V>>, TraversalParent, ByModulating {\n \n     private char state = 'k';\n     private Traversal.Admin<S, K> keyTraversal = null;\n+    private Traversal.Admin<S, ?> preTraversal = null;\n     private Traversal.Admin<S, V> valueTraversal = this.integrateChild(__.fold().asAdmin());\n-    private Traversal.Admin<S, ?> preTraversal = null;      // used in OLAP\n-    private ReducingBarrierStep reducingBarrierStep = null; // used in OLAP\n-    private boolean onGraphComputer = false;\n     ///\n     private String sideEffectKey;\n \n     public GroupSideEffectStep(final Traversal.Admin traversal, final String sideEffectKey) {\n         super(traversal);\n         this.sideEffectKey = sideEffectKey;\n-        this.getTraversal().getSideEffects().registerIfAbsent(this.sideEffectKey, HashMapSupplier.instance(), new GroupStep.GroupBiOperator<>(this.valueTraversal, this.onGraphComputer));\n+        this.valueTraversal = this.integrateChild(__.fold().asAdmin());\n+        this.preTraversal = this.integrateChild(GroupStep.splitOnBarrierStep(this.valueTraversal).get(0));\n+        this.getTraversal().getSideEffects().registerIfAbsent(this.sideEffectKey, HashMapSupplier.instance(), new GroupStep.GroupBiOperator<>(this.valueTraversal));\n     }\n \n     @Override\n@@ -69,7 +64,8 @@ public void modulateBy(final Traversal.Admin<?, ?> kvTraversal) {\n             this.state = 'v';\n         } else if ('v' == this.state) {\n             this.valueTraversal = this.integrateChild(GroupStep.convertValueTraversal(kvTraversal));\n-            this.getTraversal().getSideEffects().register(this.sideEffectKey, null, new GroupStep.GroupBiOperator<>(this.valueTraversal, this.onGraphComputer));\n+            this.preTraversal = this.integrateChild(GroupStep.splitOnBarrierStep(this.valueTraversal).get(0));\n+            this.getTraversal().getSideEffects().register(this.sideEffectKey, null, new GroupStep.GroupBiOperator<>(this.valueTraversal));\n             this.state = 'x';\n         } else {\n             throw new IllegalStateException(\"The key and value traversals for group()-step have already been set: \" + this);\n@@ -78,22 +74,14 @@ public void modulateBy(final Traversal.Admin<?, ?> kvTraversal) {\n \n     @Override\n     protected void sideEffect(final Traverser.Admin<S> traverser) {\n-        final Map<K, Object> map = new HashMap<>(1);\n-        final K key = TraversalUtil.applyNullable(traverser, this.keyTraversal);\n-        if (this.onGraphComputer) {\n-            if (null == this.reducingBarrierStep) {\n-                final TraverserSet traverserSet = new TraverserSet<>();\n-                this.preTraversal.reset();\n-                this.preTraversal.addStart(traverser.split());\n-                this.preTraversal.getEndStep().forEachRemaining(traverserSet::add);\n-                map.put(key, traverserSet);\n-            } else {\n-                this.valueTraversal.reset();\n-                this.valueTraversal.addStart(traverser.split());\n-                map.put(key, (V) this.reducingBarrierStep.nextBarrier());\n-            }\n-        } else\n-            map.put(key, traverser.split());\n+        final Map<K, V> map = new HashMap<>(1);\n+        final TraverserSet midTraversers = new TraverserSet<>();\n+        this.preTraversal.reset();\n+        this.preTraversal.addStart(traverser.split());\n+        while (this.preTraversal.hasNext()) {\n+            midTraversers.add(this.preTraversal.getEndStep().next());\n+        }\n+        map.put(TraversalUtil.applyNullable(traverser, this.keyTraversal), (V) midTraversers);\n         this.getTraversal().getSideEffects().add(this.sideEffectKey, map);\n     }\n \n@@ -127,11 +115,7 @@ public String toString() {\n         if (null != this.keyTraversal)\n             clone.keyTraversal = this.keyTraversal.clone();\n         clone.valueTraversal = this.valueTraversal.clone();\n-        if (null != this.preTraversal)\n-            clone.preTraversal = this.preTraversal.clone();\n-        final Optional<Barrier> optional = TraversalHelper.getFirstStepOfAssignableClass(Barrier.class, clone.valueTraversal);\n-        if (optional.isPresent() && optional.get() instanceof ReducingBarrierStep)\n-            clone.reducingBarrierStep = (ReducingBarrierStep) optional.get();\n+        clone.preTraversal = this.integrateChild(GroupStep.splitOnBarrierStep(clone.valueTraversal).get(0));\n         return clone;\n     }\n \n@@ -153,15 +137,6 @@ public int hashCode() {\n \n     @Override\n     public Map<K, V> generateFinalResult(final Map<K, ?> object) {\n-        return GroupStep.doFinalReduction((Map<K, Object>) object, this.valueTraversal, this.onGraphComputer);\n-    }\n-\n-    @Override\n-    public void onGraphComputer() {\n-        this.preTraversal = this.integrateChild(GroupStep.splitOnBarrierStep(this.valueTraversal).get(0));\n-        final Optional<Barrier> optional = TraversalHelper.getFirstStepOfAssignableClass(Barrier.class, this.valueTraversal);\n-        if (optional.isPresent() && optional.get() instanceof ReducingBarrierStep)\n-            this.reducingBarrierStep = (ReducingBarrierStep) optional.get();\n-        this.getTraversal().getSideEffects().register(this.sideEffectKey, null, new GroupStep.GroupBiOperator<>(this.valueTraversal, this.onGraphComputer = true));\n+        return GroupStep.doFinalReduction((Map<K, Object>) object, this.valueTraversal);\n     }\n }",
                "deletions": 42
            },
            {
                "sha": "ddfb94a02c0b937d3617e2f23f07a45220e7605b",
                "filename": "gremlin-groovy-test/src/main/groovy/org/apache/tinkerpop/gremlin/process/traversal/step/sideEffect/GroovyGroupTest.groovy",
                "blob_url": "https://github.com/apache/tinkerpop/blob/c890cebad5231cdab8744878bebb4ea363689a3a/gremlin-groovy-test/src/main/groovy/org/apache/tinkerpop/gremlin/process/traversal/step/sideEffect/GroovyGroupTest.groovy",
                "raw_url": "https://github.com/apache/tinkerpop/raw/c890cebad5231cdab8744878bebb4ea363689a3a/gremlin-groovy-test/src/main/groovy/org/apache/tinkerpop/gremlin/process/traversal/step/sideEffect/GroovyGroupTest.groovy",
                "status": "modified",
                "changes": 5,
                "additions": 5,
                "contents_url": "https://api.github.com/repos/apache/tinkerpop/contents/gremlin-groovy-test/src/main/groovy/org/apache/tinkerpop/gremlin/process/traversal/step/sideEffect/GroovyGroupTest.groovy?ref=c890cebad5231cdab8744878bebb4ea363689a3a",
                "patch": "@@ -108,5 +108,10 @@ public abstract class GroovyGroupTest {\n         public Traversal<Vertex, Map<String, Map<Object, Object>>> get_g_V_repeatXunionXoutXknowsX_groupXaX_byXageX__outXcreatedX_groupXbX_byXnameX_byXcountXX_groupXaX_byXnameXX_timesX2X_capXa_bX() {\n             new ScriptTraversal<>(g, \"gremlin-groovy\", \"g.V.repeat(union(out('knows').group('a').by('age'), out('created').group('b').by('name').by(count())).group('a').by('name')).times(2).cap('a', 'b')\")\n         }\n+\n+        @Override\n+        public Traversal<Vertex, Map<Long, Map<String, List<Vertex>>>> get_g_V_group_byXbothE_countX_byXgroup_byXlabelXX() {\n+            new ScriptTraversal<>(g, \"gremlin-groovy\", \"g.V.group().by(bothE().count).by(group.by(label))\")\n+        }\n     }\n }",
                "deletions": 0
            },
            {
                "sha": "d4c4d743cd5c1db62b75b787d54d2e14a2213688",
                "filename": "gremlin-test/src/main/java/org/apache/tinkerpop/gremlin/process/traversal/step/sideEffect/GroupTest.java",
                "blob_url": "https://github.com/apache/tinkerpop/blob/c890cebad5231cdab8744878bebb4ea363689a3a/gremlin-test/src/main/java/org/apache/tinkerpop/gremlin/process/traversal/step/sideEffect/GroupTest.java",
                "raw_url": "https://github.com/apache/tinkerpop/raw/c890cebad5231cdab8744878bebb4ea363689a3a/gremlin-test/src/main/java/org/apache/tinkerpop/gremlin/process/traversal/step/sideEffect/GroupTest.java",
                "status": "modified",
                "changes": 42,
                "additions": 42,
                "contents_url": "https://api.github.com/repos/apache/tinkerpop/contents/gremlin-test/src/main/java/org/apache/tinkerpop/gremlin/process/traversal/step/sideEffect/GroupTest.java?ref=c890cebad5231cdab8744878bebb4ea363689a3a",
                "patch": "@@ -84,6 +84,8 @@\n \n     public abstract Traversal<Vertex, Map<String, Map<Object, Object>>> get_g_V_repeatXunionXoutXknowsX_groupXaX_byXageX__outXcreatedX_groupXbX_byXnameX_byXcountXX_groupXaX_byXnameXX_timesX2X_capXa_bX();\n \n+    public abstract Traversal<Vertex, Map<Long, Map<String, List<Vertex>>>> get_g_V_group_byXbothE_countX_byXgroup_byXlabelXX();\n+\n     @Test\n     @LoadGraphWith(MODERN)\n     public void g_V_group_byXnameX() {\n@@ -356,6 +358,41 @@ public void g_V_repeatXunionXoutXknowsX_groupXaX_byXageX__outXcreatedX_groupXbX_\n         checkSideEffects(traversal.asAdmin().getSideEffects(), \"a\", HashMap.class, \"b\", HashMap.class);\n     }\n \n+    @Test\n+    @LoadGraphWith(MODERN)\n+    public void g_V_group_byXbothE_countX_byXgroup_byXlabelXX() {\n+        final Traversal<Vertex, Map<Long, Map<String, List<Vertex>>>> traversal = get_g_V_group_byXbothE_countX_byXgroup_byXlabelXX();\n+        final Map<Long, Map<String, List<Vertex>>> map = traversal.next();\n+        assertFalse(traversal.hasNext());\n+        assertEquals(2, map.size());\n+        assertTrue(map.containsKey(1l));\n+        assertTrue(map.containsKey(3l));\n+        //\n+        Map<String, List<Vertex>> submap = map.get(1l);\n+        assertEquals(2, submap.size());\n+        assertTrue(submap.containsKey(\"software\"));\n+        assertTrue(submap.containsKey(\"person\"));\n+        List<Vertex> list = submap.get(\"software\");\n+        assertEquals(1, list.size());\n+        assertEquals(convertToVertex(graph, \"ripple\"), list.get(0));\n+        list = submap.get(\"person\");\n+        assertEquals(2, list.size());\n+        assertTrue(list.contains(convertToVertex(graph, \"vadas\")));\n+        assertTrue(list.contains(convertToVertex(graph, \"peter\")));\n+        //\n+        submap = map.get(3l);\n+        assertEquals(2, submap.size());\n+        assertTrue(submap.containsKey(\"software\"));\n+        assertTrue(submap.containsKey(\"person\"));\n+        list = submap.get(\"software\");\n+        assertEquals(1, list.size());\n+        assertEquals(convertToVertex(graph, \"lop\"), list.get(0));\n+        list = submap.get(\"person\");\n+        assertEquals(2, list.size());\n+        assertTrue(list.contains(convertToVertex(graph, \"marko\")));\n+        assertTrue(list.contains(convertToVertex(graph, \"josh\")));\n+    }\n+\n     public static class Traversals extends GroupTest {\n \n         @Override\n@@ -437,5 +474,10 @@ public void g_V_repeatXunionXoutXknowsX_groupXaX_byXageX__outXcreatedX_groupXbX_\n         public Traversal<Vertex, Map<String, Map<Object, Object>>> get_g_V_repeatXunionXoutXknowsX_groupXaX_byXageX__outXcreatedX_groupXbX_byXnameX_byXcountXX_groupXaX_byXnameXX_timesX2X_capXa_bX() {\n             return g.V().repeat(__.union(__.out(\"knows\").group(\"a\").by(\"age\"), __.out(\"created\").group(\"b\").by(\"name\").by(count())).group(\"a\").by(\"name\")).times(2).cap(\"a\", \"b\");\n         }\n+\n+        @Override\n+        public Traversal<Vertex, Map<Long, Map<String, List<Vertex>>>> get_g_V_group_byXbothE_countX_byXgroup_byXlabelXX() {\n+            return g.V().<Long, Map<String, List<Vertex>>>group().by(__.bothE().count()).by(__.group().by(T.label));\n+        }\n     }\n }",
                "deletions": 0
            },
            {
                "sha": "5c6d7299dc79bdf895d6ff167c0cd494c0d2a16e",
                "filename": "spark-gremlin/src/main/java/org/apache/tinkerpop/gremlin/spark/process/computer/traversal/strategy/optimization/interceptor/SparkStarBarrierInterceptor.java",
                "blob_url": "https://github.com/apache/tinkerpop/blob/c890cebad5231cdab8744878bebb4ea363689a3a/spark-gremlin/src/main/java/org/apache/tinkerpop/gremlin/spark/process/computer/traversal/strategy/optimization/interceptor/SparkStarBarrierInterceptor.java",
                "raw_url": "https://github.com/apache/tinkerpop/raw/c890cebad5231cdab8744878bebb4ea363689a3a/spark-gremlin/src/main/java/org/apache/tinkerpop/gremlin/spark/process/computer/traversal/strategy/optimization/interceptor/SparkStarBarrierInterceptor.java",
                "status": "modified",
                "changes": 1,
                "additions": 0,
                "contents_url": "https://api.github.com/repos/apache/tinkerpop/contents/spark-gremlin/src/main/java/org/apache/tinkerpop/gremlin/spark/process/computer/traversal/strategy/optimization/interceptor/SparkStarBarrierInterceptor.java?ref=c890cebad5231cdab8744878bebb4ea363689a3a",
                "patch": "@@ -126,7 +126,6 @@ else if (endStep instanceof FoldStep) {\n                 }\n             }).fold(endStep.getSeedSupplier().get(), biOperator::apply);\n         } else if (endStep instanceof GroupStep) {\n-            ((GroupStep) endStep).onGraphComputer();\n             final GroupStep.GroupBiOperator<Object, Object> biOperator = (GroupStep.GroupBiOperator) endStep.getBiOperator();\n             result = ((GroupStep) endStep).generateFinalResult(nextRDD.\n                     mapPartitions(partitions -> {",
                "deletions": 1
            },
            {
                "sha": "555771645ea1cc7bdcc6fd3d4f950e0f0cd26022",
                "filename": "tinkergraph-gremlin/src/test/java/org/apache/tinkerpop/gremlin/tinkergraph/structure/TinkerGraphPlayTest.java",
                "blob_url": "https://github.com/apache/tinkerpop/blob/c890cebad5231cdab8744878bebb4ea363689a3a/tinkergraph-gremlin/src/test/java/org/apache/tinkerpop/gremlin/tinkergraph/structure/TinkerGraphPlayTest.java",
                "raw_url": "https://github.com/apache/tinkerpop/raw/c890cebad5231cdab8744878bebb4ea363689a3a/tinkergraph-gremlin/src/test/java/org/apache/tinkerpop/gremlin/tinkergraph/structure/TinkerGraphPlayTest.java",
                "status": "modified",
                "changes": 4,
                "additions": 2,
                "contents_url": "https://api.github.com/repos/apache/tinkerpop/contents/tinkergraph-gremlin/src/test/java/org/apache/tinkerpop/gremlin/tinkergraph/structure/TinkerGraphPlayTest.java?ref=c890cebad5231cdab8744878bebb4ea363689a3a",
                "patch": "@@ -86,11 +86,11 @@ public void testPlay8() throws Exception {\n     @Ignore\n     public void benchmarkGroup() throws Exception {\n         Graph graph = TinkerGraph.open();\n-        GraphTraversalSource g = graph.traversal().withComputer();\n+        GraphTraversalSource g = graph.traversal();\n         graph.io(GraphMLIo.build()).readGraph(\"../data/grateful-dead.xml\");\n         /////////\n \n-        g.V().group().by(T.label).by(values(\"name\")).forEachRemaining(x -> logger.info(x.toString()));\n+        //g.V().group().by(T.label).by(values(\"name\")).forEachRemaining(x -> logger.info(x.toString()));\n \n         System.out.println(\"group: \" + g.V().both(\"followedBy\").both(\"followedBy\").group().by(\"songType\").by(count()).next());\n         System.out.println(\"groupV3d0: \" + g.V().both(\"followedBy\").both(\"followedBy\").groupV3d0().by(\"songType\").by().by(__.count(Scope.local)).next());",
                "deletions": 2
            }
        ],
        "patched_files": [
            "GroupStep.java",
            "GroupSideEffectStep.java",
            "SparkStarBarrierInterceptor.java"
        ],
        "unit_tests": [
            "TinkerGraphPlayTest.java",
            "GroupStepTest.java",
            "GroupSideEffectStepTest.java",
            "GroupTest.java"
        ]
    },
    "tinkerpop_5cef4dd": {
        "repo": "tinkerpop",
        "message": "Fixed an NPE that was introduced yesterday in GiraphGraphComputer refactoring. Fixed #370.",
        "commit": "https://github.com/apache/tinkerpop/commit/5cef4dd2376febcb32e1108f67e02261d07a4d68",
        "parent": "https://github.com/apache/tinkerpop/commit/e2fcd92979d3e209872f0f7f26a6ae99d1144a5b",
        "bug_id": "tinkerpop_5cef4dd",
        "file": [
            {
                "sha": "0ab28d8a2de71b696110e973f1bb0085eda15125",
                "filename": "gremlin-core/src/main/java/com/tinkerpop/gremlin/process/computer/MapReduce.java",
                "blob_url": "https://github.com/apache/tinkerpop/blob/5cef4dd2376febcb32e1108f67e02261d07a4d68/gremlin-core/src/main/java/com/tinkerpop/gremlin/process/computer/MapReduce.java",
                "raw_url": "https://github.com/apache/tinkerpop/raw/5cef4dd2376febcb32e1108f67e02261d07a4d68/gremlin-core/src/main/java/com/tinkerpop/gremlin/process/computer/MapReduce.java",
                "status": "modified",
                "changes": 2,
                "additions": 1,
                "contents_url": "https://api.github.com/repos/apache/tinkerpop/contents/gremlin-core/src/main/java/com/tinkerpop/gremlin/process/computer/MapReduce.java?ref=5cef4dd2376febcb32e1108f67e02261d07a4d68",
                "patch": "@@ -142,7 +142,7 @@ public default void reduce(final MK key, final Iterator<MV> values, final Reduce\n      * @param memory    the memory of the {@link GraphComputer}\n      * @param keyValues the key/value pairs emitted from reduce() (or map() in a map only job).\n      */\n-    public default void addResultToMemory(final Memory memory, final Iterator<Pair<RK, RV>> keyValues) {\n+    public default void addResultToMemory(final Memory.Admin memory, final Iterator<Pair<RK, RV>> keyValues) {\n         memory.set(this.getMemoryKey(), this.generateFinalResult(keyValues));\n     }\n ",
                "deletions": 1
            },
            {
                "sha": "051870e59858802d9d879e29181cf45068a6e188",
                "filename": "gremlin-core/src/main/java/com/tinkerpop/gremlin/process/computer/Memory.java",
                "blob_url": "https://github.com/apache/tinkerpop/blob/5cef4dd2376febcb32e1108f67e02261d07a4d68/gremlin-core/src/main/java/com/tinkerpop/gremlin/process/computer/Memory.java",
                "raw_url": "https://github.com/apache/tinkerpop/raw/5cef4dd2376febcb32e1108f67e02261d07a4d68/gremlin-core/src/main/java/com/tinkerpop/gremlin/process/computer/Memory.java",
                "status": "modified",
                "changes": 6,
                "additions": 5,
                "contents_url": "https://api.github.com/repos/apache/tinkerpop/contents/gremlin-core/src/main/java/com/tinkerpop/gremlin/process/computer/Memory.java?ref=5cef4dd2376febcb32e1108f67e02261d07a4d68",
                "patch": "@@ -122,7 +122,11 @@ public default boolean isInitialIteration() {\n      */\n     public interface Admin extends Memory {\n \n-        public void incrIteration();\n+        public default void incrIteration() {\n+            this.setIteration(this.getIteration() + 1);\n+        }\n+\n+        public void setIteration(final int iteration);\n \n         public void setRuntime(final long runtime);\n ",
                "deletions": 1
            },
            {
                "sha": "d66f1311933d55643edee0f0b88f15a3d69398a5",
                "filename": "gremlin-core/src/main/java/com/tinkerpop/gremlin/process/computer/util/ImmutableMemory.java",
                "blob_url": "https://github.com/apache/tinkerpop/blob/5cef4dd2376febcb32e1108f67e02261d07a4d68/gremlin-core/src/main/java/com/tinkerpop/gremlin/process/computer/util/ImmutableMemory.java",
                "raw_url": "https://github.com/apache/tinkerpop/raw/5cef4dd2376febcb32e1108f67e02261d07a4d68/gremlin-core/src/main/java/com/tinkerpop/gremlin/process/computer/util/ImmutableMemory.java",
                "status": "modified",
                "changes": 5,
                "additions": 5,
                "contents_url": "https://api.github.com/repos/apache/tinkerpop/contents/gremlin-core/src/main/java/com/tinkerpop/gremlin/process/computer/util/ImmutableMemory.java?ref=5cef4dd2376febcb32e1108f67e02261d07a4d68",
                "patch": "@@ -61,6 +61,11 @@ public void incrIteration() {\n         throw Memory.Exceptions.memoryIsCurrentlyImmutable();\n     }\n \n+    @Override\n+    public void setIteration(final int iteration) {\n+        throw Memory.Exceptions.memoryIsCurrentlyImmutable();\n+    }\n+\n     @Override\n     public void setRuntime(final long runtime) {\n         throw Memory.Exceptions.memoryIsCurrentlyImmutable();",
                "deletions": 0
            },
            {
                "sha": "ba7206222f45a257c683911a3b8d55f26c365426",
                "filename": "gremlin-core/src/main/java/com/tinkerpop/gremlin/process/computer/util/MapMemory.java",
                "blob_url": "https://github.com/apache/tinkerpop/blob/5cef4dd2376febcb32e1108f67e02261d07a4d68/gremlin-core/src/main/java/com/tinkerpop/gremlin/process/computer/util/MapMemory.java",
                "raw_url": "https://github.com/apache/tinkerpop/raw/5cef4dd2376febcb32e1108f67e02261d07a4d68/gremlin-core/src/main/java/com/tinkerpop/gremlin/process/computer/util/MapMemory.java",
                "status": "modified",
                "changes": 20,
                "additions": 16,
                "contents_url": "https://api.github.com/repos/apache/tinkerpop/contents/gremlin-core/src/main/java/com/tinkerpop/gremlin/process/computer/util/MapMemory.java?ref=5cef4dd2376febcb32e1108f67e02261d07a4d68",
                "patch": "@@ -1,26 +1,33 @@\n package com.tinkerpop.gremlin.process.computer.util;\n \n import com.tinkerpop.gremlin.process.computer.GraphComputer;\n+import com.tinkerpop.gremlin.process.computer.MapReduce;\n import com.tinkerpop.gremlin.process.computer.Memory;\n import com.tinkerpop.gremlin.process.computer.VertexProgram;\n import com.tinkerpop.gremlin.structure.util.StringFactory;\n \n+import java.io.Serializable;\n import java.util.HashMap;\n+import java.util.HashSet;\n import java.util.Map;\n import java.util.Set;\n \n /**\n  * @author Marko A. Rodriguez (http://markorodriguez.com)\n  */\n-public final class MapMemory implements Memory.Admin {\n+public final class MapMemory implements Memory.Admin, Serializable {\n \n     private long runtime = 0l;\n     private int iteration = -1;\n     private final Map<String, Object> memoryMap = new HashMap<>();\n-    private final Set<String> memoryComputeKeys;\n+    private final Set<String> memoryComputeKeys = new HashSet<>();\n \n-    public MapMemory(final VertexProgram<?> program) {\n-        this.memoryComputeKeys = program.getMemoryComputeKeys();\n+    public void addVertexProgramMemoryComputeKeys(final VertexProgram<?> vertexProgram) {\n+        this.memoryComputeKeys.addAll(vertexProgram.getMemoryComputeKeys());\n+    }\n+\n+    public void addMapReduceMemoryKey(final MapReduce mapReduce) {\n+        this.memoryComputeKeys.add(mapReduce.getMemoryKey());\n     }\n \n     @Override\n@@ -101,6 +108,11 @@ public void incrIteration() {\n         this.iteration = this.iteration + 1;\n     }\n \n+    @Override\n+    public void setIteration(final int iteration) {\n+        this.iteration = iteration;\n+    }\n+\n     @Override\n     public void setRuntime(long runtime) {\n         this.runtime = runtime;",
                "deletions": 4
            },
            {
                "sha": "6d40264271d801b380ff4cf2c1fbffb17bbd4171",
                "filename": "gremlin-core/src/main/java/com/tinkerpop/gremlin/structure/io/kryo/GremlinKryo.java",
                "blob_url": "https://github.com/apache/tinkerpop/blob/5cef4dd2376febcb32e1108f67e02261d07a4d68/gremlin-core/src/main/java/com/tinkerpop/gremlin/structure/io/kryo/GremlinKryo.java",
                "raw_url": "https://github.com/apache/tinkerpop/raw/5cef4dd2376febcb32e1108f67e02261d07a4d68/gremlin-core/src/main/java/com/tinkerpop/gremlin/structure/io/kryo/GremlinKryo.java",
                "status": "modified",
                "changes": 4,
                "additions": 3,
                "contents_url": "https://api.github.com/repos/apache/tinkerpop/contents/gremlin-core/src/main/java/com/tinkerpop/gremlin/structure/io/kryo/GremlinKryo.java?ref=5cef4dd2376febcb32e1108f67e02261d07a4d68",
                "patch": "@@ -8,6 +8,7 @@\n import com.esotericsoftware.kryo.util.DefaultStreamFactory;\n import com.esotericsoftware.kryo.util.MapReferenceResolver;\n import com.tinkerpop.gremlin.process.Path;\n+import com.tinkerpop.gremlin.process.computer.util.MapMemory;\n import com.tinkerpop.gremlin.process.traversers.PathTraverser;\n import com.tinkerpop.gremlin.process.traversers.SimpleTraverser;\n import com.tinkerpop.gremlin.process.T;\n@@ -257,7 +258,7 @@ Builder getBuilder() {\n             add(Triplet.<Class, Function<Kryo, Serializer>, Integer>with(TreeMap.class, null, 45));\n             add(Triplet.<Class, Function<Kryo, Serializer>, Integer>with(TreeSet.class, null, 50));\n             add(Triplet.<Class, Function<Kryo, Serializer>, Integer>with(UUID.class, kryo -> new UUIDSerializer(), 17));\n-            add(Triplet.<Class, Function<Kryo, Serializer>, Integer>with(URI.class, kryo -> new URISerializer(), 72));     // ***LAST ID***\n+            add(Triplet.<Class, Function<Kryo, Serializer>, Integer>with(URI.class, kryo -> new URISerializer(), 72));\n             add(Triplet.<Class, Function<Kryo, Serializer>, Integer>with(VertexTerminator.class, null, 13));\n \n             add(Triplet.<Class, Function<Kryo, Serializer>, Integer>with(Edge.class, kryo -> new ElementSerializer.EdgeSerializer(), 65));\n@@ -277,6 +278,7 @@ Builder getBuilder() {\n             add(Triplet.<Class, Function<Kryo, Serializer>, Integer>with(StepTimer.class, null, 69));\n             add(Triplet.<Class, Function<Kryo, Serializer>, Integer>with(TraversalMetrics.class, null, 70));\n             add(Triplet.<Class, Function<Kryo, Serializer>, Integer>with(LinkedHashSet.class, null, 71));\n+            add(Triplet.<Class, Function<Kryo, Serializer>, Integer>with(MapMemory.class, null, 73));  // ***LAST ID***\n         }};\n \n         private static final byte major = 1;",
                "deletions": 1
            },
            {
                "sha": "f11b653afe43d3454bbbc50eb7314e049e477368",
                "filename": "hadoop-gremlin/src/main/java/com/tinkerpop/gremlin/hadoop/Constants.java",
                "blob_url": "https://github.com/apache/tinkerpop/blob/5cef4dd2376febcb32e1108f67e02261d07a4d68/hadoop-gremlin/src/main/java/com/tinkerpop/gremlin/hadoop/Constants.java",
                "raw_url": "https://github.com/apache/tinkerpop/raw/5cef4dd2376febcb32e1108f67e02261d07a4d68/hadoop-gremlin/src/main/java/com/tinkerpop/gremlin/hadoop/Constants.java",
                "status": "modified",
                "changes": 2,
                "additions": 1,
                "contents_url": "https://api.github.com/repos/apache/tinkerpop/contents/hadoop-gremlin/src/main/java/com/tinkerpop/gremlin/hadoop/Constants.java?ref=5cef4dd2376febcb32e1108f67e02261d07a4d68",
                "patch": "@@ -27,5 +27,5 @@\n     public static final String GREMLIN_HADOOP_MEMORY_KEYS = \"gremlin.hadoop.memoryKeys\";\n     public static final String GREMLIN_HADOOP_MAP_REDUCE_CLASS = \"gremlin.hadoop.mapReduceClass\";\n     public static final String GREMLIN_HADOOP_HALT = \"gremlin.hadoop.halt\";\n-    public static final String MEMORY_MAP = Graph.Key.hide(\"gremlin.hadoop.memoryMap\");\n+    public static final String MAP_MEMORY = Graph.Key.hide(\"gremlin.hadoop.mapMemory\");\n }",
                "deletions": 1
            },
            {
                "sha": "cfc39ed24a19ea7e345c309b5b8692d69b037c75",
                "filename": "hadoop-gremlin/src/main/java/com/tinkerpop/gremlin/hadoop/process/computer/giraph/GiraphComputeVertex.java",
                "blob_url": "https://github.com/apache/tinkerpop/blob/5cef4dd2376febcb32e1108f67e02261d07a4d68/hadoop-gremlin/src/main/java/com/tinkerpop/gremlin/hadoop/process/computer/giraph/GiraphComputeVertex.java",
                "raw_url": "https://github.com/apache/tinkerpop/raw/5cef4dd2376febcb32e1108f67e02261d07a4d68/hadoop-gremlin/src/main/java/com/tinkerpop/gremlin/hadoop/process/computer/giraph/GiraphComputeVertex.java",
                "status": "modified",
                "changes": 10,
                "additions": 5,
                "contents_url": "https://api.github.com/repos/apache/tinkerpop/contents/hadoop-gremlin/src/main/java/com/tinkerpop/gremlin/hadoop/process/computer/giraph/GiraphComputeVertex.java?ref=5cef4dd2376febcb32e1108f67e02261d07a4d68",
                "patch": "@@ -3,6 +3,7 @@\n import com.tinkerpop.gremlin.hadoop.Constants;\n import com.tinkerpop.gremlin.hadoop.structure.io.ObjectWritable;\n import com.tinkerpop.gremlin.process.computer.VertexProgram;\n+import com.tinkerpop.gremlin.process.computer.util.MapMemory;\n import com.tinkerpop.gremlin.structure.Direction;\n import com.tinkerpop.gremlin.structure.Edge;\n import com.tinkerpop.gremlin.structure.Graph;\n@@ -22,8 +23,6 @@\n import java.io.ByteArrayOutputStream;\n import java.io.IOException;\n import java.io.InputStream;\n-import java.util.HashMap;\n-import java.util.Map;\n import java.util.function.Function;\n \n /**\n@@ -62,9 +61,10 @@ public void compute(final Iterable<ObjectWritable> messages) {\n         if (!(Boolean) ((RuleWritable) this.getAggregatedValue(Constants.GREMLIN_HADOOP_HALT)).getObject())\n             vertexProgram.execute(this.tinkerVertex, messenger, memory);  // TODO provide a wrapper around TinkerVertex for Edge and non-ComputeKeys manipulation\n         else if (this.getConf().getBoolean(Constants.GREMLIN_HADOOP_DERIVE_MEMORY, false)) {\n-            final Map<String, Object> memoryMap = new HashMap<>(memory.asMap());\n-            memoryMap.put(Constants.SYSTEM_ITERATION, memory.getIteration() - 1);\n-            this.tinkerVertex.singleProperty(Constants.MEMORY_MAP, memoryMap);\n+            final MapMemory mapMemory = new MapMemory();\n+            memory.asMap().forEach(mapMemory::set);\n+            mapMemory.setIteration(memory.getIteration() - 1);\n+            this.tinkerVertex.singleProperty(Constants.MAP_MEMORY, mapMemory);\n         }\n     }\n ",
                "deletions": 5
            },
            {
                "sha": "3c08a5c0511f3fe76bdb35bdb95ae9098e0c32c6",
                "filename": "hadoop-gremlin/src/main/java/com/tinkerpop/gremlin/hadoop/process/computer/giraph/GiraphGraphComputer.java",
                "blob_url": "https://github.com/apache/tinkerpop/blob/5cef4dd2376febcb32e1108f67e02261d07a4d68/hadoop-gremlin/src/main/java/com/tinkerpop/gremlin/hadoop/process/computer/giraph/GiraphGraphComputer.java",
                "raw_url": "https://github.com/apache/tinkerpop/raw/5cef4dd2376febcb32e1108f67e02261d07a4d68/hadoop-gremlin/src/main/java/com/tinkerpop/gremlin/hadoop/process/computer/giraph/GiraphGraphComputer.java",
                "status": "modified",
                "changes": 6,
                "additions": 3,
                "contents_url": "https://api.github.com/repos/apache/tinkerpop/contents/hadoop-gremlin/src/main/java/com/tinkerpop/gremlin/hadoop/process/computer/giraph/GiraphGraphComputer.java?ref=5cef4dd2376febcb32e1108f67e02261d07a4d68",
                "patch": "@@ -54,7 +54,7 @@\n \n     private final Set<MapReduce> mapReduces = new HashSet<>();\n     private VertexProgram vertexProgram;\n-    private MapMemory memory;\n+    private MapMemory memory = new MapMemory();\n \n     public GiraphGraphComputer(final HadoopGraph hadoopGraph) {\n         this.hadoopGraph = hadoopGraph;\n@@ -80,7 +80,7 @@ public GraphComputer isolation(final Isolation isolation) {\n     @Override\n     public GraphComputer program(final VertexProgram vertexProgram) {\n         this.vertexProgram = vertexProgram;\n-        this.memory = new MapMemory(this.vertexProgram);\n+        this.memory.addVertexProgramMemoryComputeKeys(this.vertexProgram);\n         final BaseConfiguration apacheConfiguration = new BaseConfiguration();\n         vertexProgram.storeState(apacheConfiguration);\n         ConfUtil.mergeApacheIntoHadoopConfiguration(apacheConfiguration, this.giraphConfiguration);\n@@ -156,10 +156,10 @@ public int run(final String[] args) {\n             }\n             // do map reduce jobs\n             for (final MapReduce mapReduce : this.mapReduces) {\n+                this.memory.addMapReduceMemoryKey(mapReduce);\n                 MapReduceHelper.executeMapReduceJob(mapReduce, this.memory, this.giraphConfiguration);\n             }\n         } catch (final Exception e) {\n-            // e.printStackTrace();\n             throw new IllegalStateException(e.getMessage(), e);\n         }\n         return 0;",
                "deletions": 3
            },
            {
                "sha": "8be124919edfde0c81ec3b6beeecc4ad37eaa458",
                "filename": "hadoop-gremlin/src/main/java/com/tinkerpop/gremlin/hadoop/process/computer/util/MapReduceHelper.java",
                "blob_url": "https://github.com/apache/tinkerpop/blob/5cef4dd2376febcb32e1108f67e02261d07a4d68/hadoop-gremlin/src/main/java/com/tinkerpop/gremlin/hadoop/process/computer/util/MapReduceHelper.java",
                "raw_url": "https://github.com/apache/tinkerpop/raw/5cef4dd2376febcb32e1108f67e02261d07a4d68/hadoop-gremlin/src/main/java/com/tinkerpop/gremlin/hadoop/process/computer/util/MapReduceHelper.java",
                "status": "modified",
                "changes": 2,
                "additions": 1,
                "contents_url": "https://api.github.com/repos/apache/tinkerpop/contents/hadoop-gremlin/src/main/java/com/tinkerpop/gremlin/hadoop/process/computer/util/MapReduceHelper.java?ref=5cef4dd2376febcb32e1108f67e02261d07a4d68",
                "patch": "@@ -40,7 +40,7 @@\n             + \" is not \" + SequenceFileOutputFormat.class.getCanonicalName()\n             + \" and thus, graph computer memory can not be converted to Java objects\";\n \n-    public static void executeMapReduceJob(final MapReduce mapReduce, final Memory memory, final Configuration configuration) throws IOException, ClassNotFoundException, InterruptedException {\n+    public static void executeMapReduceJob(final MapReduce mapReduce, final Memory.Admin memory, final Configuration configuration) throws IOException, ClassNotFoundException, InterruptedException {\n         final Configuration newConfiguration = new Configuration(configuration);\n         final BaseConfiguration apacheConfiguration = new BaseConfiguration();\n         mapReduce.storeState(apacheConfiguration);",
                "deletions": 1
            },
            {
                "sha": "1765d239041bfcba466c8386336f6dd8ab5bf388",
                "filename": "hadoop-gremlin/src/main/java/com/tinkerpop/gremlin/hadoop/process/computer/util/MemoryMapReduce.java",
                "blob_url": "https://github.com/apache/tinkerpop/blob/5cef4dd2376febcb32e1108f67e02261d07a4d68/hadoop-gremlin/src/main/java/com/tinkerpop/gremlin/hadoop/process/computer/util/MemoryMapReduce.java",
                "raw_url": "https://github.com/apache/tinkerpop/raw/5cef4dd2376febcb32e1108f67e02261d07a4d68/hadoop-gremlin/src/main/java/com/tinkerpop/gremlin/hadoop/process/computer/util/MemoryMapReduce.java",
                "status": "modified",
                "changes": 39,
                "additions": 16,
                "contents_url": "https://api.github.com/repos/apache/tinkerpop/contents/hadoop-gremlin/src/main/java/com/tinkerpop/gremlin/hadoop/process/computer/util/MemoryMapReduce.java?ref=5cef4dd2376febcb32e1108f67e02261d07a4d68",
                "patch": "@@ -1,15 +1,17 @@\n package com.tinkerpop.gremlin.hadoop.process.computer.util;\n \n import com.tinkerpop.gremlin.hadoop.Constants;\n+import com.tinkerpop.gremlin.process.Step;\n import com.tinkerpop.gremlin.process.computer.MapReduce;\n import com.tinkerpop.gremlin.process.computer.Memory;\n import com.tinkerpop.gremlin.process.computer.util.GraphComputerHelper;\n+import com.tinkerpop.gremlin.process.computer.util.MapMemory;\n import com.tinkerpop.gremlin.structure.Vertex;\n import org.apache.commons.configuration.Configuration;\n+import org.apache.hadoop.io.NullWritable;\n import org.javatuples.Pair;\n \n import java.util.ArrayList;\n-import java.util.Collections;\n import java.util.HashMap;\n import java.util.HashSet;\n import java.util.Iterator;\n@@ -20,7 +22,7 @@\n /**\n  * @author Marko A. Rodriguez (http://markorodriguez.com)\n  */\n-public class MemoryMapReduce implements MapReduce<String, Object, String, Object, Map<String, Object>> {\n+public class MemoryMapReduce implements MapReduce<MapReduce.NullObject, MapMemory, MapReduce.NullObject, MapMemory, MapMemory> {\n \n     public Set<String> memoryKeys = new HashSet<>();\n \n@@ -53,41 +55,32 @@ public boolean doStage(final Stage stage) {\n     }\n \n     @Override\n-    public void map(final Vertex vertex, final MapEmitter<String, Object> emitter) {\n-        final Map<String, Object> memoryMap = vertex.<Map<String, Object>>property(Constants.MEMORY_MAP).orElse(Collections.emptyMap());\n-        for (final String memoryKey : this.memoryKeys) {\n-            if (memoryMap.containsKey(memoryKey)) {\n-                emitter.emit(memoryKey, memoryMap.get(memoryKey));\n-            }\n-        }\n+    public void map(final Vertex vertex, final MapEmitter<NullObject, MapMemory> emitter) {\n+        final MapMemory mapMemory = vertex.<MapMemory>property(Constants.MAP_MEMORY).orElse(new MapMemory());\n+        emitter.emit(mapMemory);\n     }\n \n     @Override\n-    public void combine(final String key, final Iterator<Object> values, final ReduceEmitter<String, Object> emitter) {\n+    public void combine(final NullObject key, final Iterator<MapMemory> values, final ReduceEmitter<NullObject, MapMemory> emitter) {\n         this.reduce(key, values, emitter);\n     }\n \n     @Override\n-    public void reduce(final String key, final Iterator<Object> values, final ReduceEmitter<String, Object> emitter) {\n+    public void reduce(final NullObject key, final Iterator<MapMemory> values, final ReduceEmitter<NullObject, MapMemory> emitter) {\n         emitter.emit(key, values.next());\n     }\n \n     @Override\n-    public Map<String, Object> generateFinalResult(final Iterator<Pair<String, Object>> keyValues) {\n-        final Map<String, Object> map = new HashMap<>();\n-        while (keyValues.hasNext()) {\n-            final Pair<String, Object> pair = keyValues.next();\n-            map.put(pair.getValue0(), pair.getValue1());\n-        }\n-        return map;\n+    public MapMemory generateFinalResult(final Iterator<Pair<NullObject, MapMemory>> keyValues) {\n+        return keyValues.next().getValue1();\n     }\n \n     @Override\n-    public void addResultToMemory(final Memory memory, final Iterator<Pair<String, Object>> keyValues) {\n-        while (keyValues.hasNext()) {\n-            final Pair<String, Object> keyValue = keyValues.next();\n-            memory.set(keyValue.getValue0(), keyValue.getValue1());\n-        }\n+    public void addResultToMemory(final Memory.Admin memory, final Iterator<Pair<NullObject, MapMemory>> keyValues) {\n+        final MapMemory temp = keyValues.next().getValue1();\n+        temp.asMap().forEach(memory::set);\n+        memory.setIteration(temp.getIteration());\n+        memory.setRuntime(temp.getRuntime());\n     }\n \n     @Override",
                "deletions": 23
            },
            {
                "sha": "24d0850f2e6b3a9449f383c40c145edfbb4fbdb2",
                "filename": "hadoop-gremlin/src/main/java/com/tinkerpop/gremlin/hadoop/structure/HadoopGraph.java",
                "blob_url": "https://github.com/apache/tinkerpop/blob/5cef4dd2376febcb32e1108f67e02261d07a4d68/hadoop-gremlin/src/main/java/com/tinkerpop/gremlin/hadoop/structure/HadoopGraph.java",
                "raw_url": "https://github.com/apache/tinkerpop/raw/5cef4dd2376febcb32e1108f67e02261d07a4d68/hadoop-gremlin/src/main/java/com/tinkerpop/gremlin/hadoop/structure/HadoopGraph.java",
                "status": "modified",
                "changes": 4,
                "additions": 4,
                "contents_url": "https://api.github.com/repos/apache/tinkerpop/contents/hadoop-gremlin/src/main/java/com/tinkerpop/gremlin/hadoop/structure/HadoopGraph.java?ref=5cef4dd2376febcb32e1108f67e02261d07a4d68",
                "patch": "@@ -78,6 +78,10 @@\n         test = \"com.tinkerpop.gremlin.process.computer.GroovyGraphComputerTest$ComputerTest\",\n         method = \"shouldNotAllowSettingUndeclaredMemoryKeys\",\n         reason = \"Hadoop does a hard kill on failure and stops threads which stops test cases. Exception handling semantics are correct though.\")\n+@Graph.OptOut(\n+        test = \"com.tinkerpop.gremlin.process.computer.GroovyGraphComputerTest$ComputerTest\",\n+        method = \"shouldHaveConsistentMemoryVertexPropertiesAndExceptions\",\n+        reason = \"Hadoop does a hard kill on failure and stops threads which stops test cases. Exception handling semantics are correct though.\")\n public class HadoopGraph implements Graph {\n \n     public static final Logger LOGGER = LoggerFactory.getLogger(HadoopGraph.class);",
                "deletions": 0
            },
            {
                "sha": "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391",
                "filename": "hadoop-gremlin/src/test/java/TODO.txt",
                "blob_url": "https://github.com/apache/tinkerpop/blob/e2fcd92979d3e209872f0f7f26a6ae99d1144a5b/hadoop-gremlin/src/test/java/TODO.txt",
                "raw_url": "https://github.com/apache/tinkerpop/raw/e2fcd92979d3e209872f0f7f26a6ae99d1144a5b/hadoop-gremlin/src/test/java/TODO.txt",
                "status": "removed",
                "changes": 0,
                "additions": 0,
                "contents_url": "https://api.github.com/repos/apache/tinkerpop/contents/hadoop-gremlin/src/test/java/TODO.txt?ref=e2fcd92979d3e209872f0f7f26a6ae99d1144a5b",
                "deletions": 0
            },
            {
                "sha": "5c0d307e0ac1bf8b42eb6baf773ab8196b0290d4",
                "filename": "tinkergraph-gremlin/src/main/java/com/tinkerpop/gremlin/tinkergraph/process/computer/TinkerMemory.java",
                "blob_url": "https://github.com/apache/tinkerpop/blob/5cef4dd2376febcb32e1108f67e02261d07a4d68/tinkergraph-gremlin/src/main/java/com/tinkerpop/gremlin/tinkergraph/process/computer/TinkerMemory.java",
                "raw_url": "https://github.com/apache/tinkerpop/raw/5cef4dd2376febcb32e1108f67e02261d07a4d68/tinkergraph-gremlin/src/main/java/com/tinkerpop/gremlin/tinkergraph/process/computer/TinkerMemory.java",
                "status": "modified",
                "changes": 5,
                "additions": 5,
                "contents_url": "https://api.github.com/repos/apache/tinkerpop/contents/tinkergraph-gremlin/src/main/java/com/tinkerpop/gremlin/tinkergraph/process/computer/TinkerMemory.java?ref=5cef4dd2376febcb32e1108f67e02261d07a4d68",
                "patch": "@@ -50,6 +50,11 @@ public void incrIteration() {\n         this.iteration.getAndIncrement();\n     }\n \n+    @Override\n+    public void setIteration(final int iteration) {\n+        this.iteration.set(iteration);\n+    }\n+\n     @Override\n     public int getIteration() {\n         return this.iteration.get();",
                "deletions": 0
            }
        ],
        "patched_files": [
            "GremlinKryo.java"
        ],
        "unit_tests": [
            "GremlinKryoTest.java"
        ]
    },
    "tinkerpop_2760645": {
        "repo": "tinkerpop",
        "message": "fixed an NPE in AddVertexStartStep. In PathRetractionStrategy, NoOpBarriers are only added to global children as 99% of local children are by()-modulation based and thus, there is no point to fully compute the traversal if only the first next() is going to be used.",
        "commit": "https://github.com/apache/tinkerpop/commit/276064530617c04706b62ac57ec4e2e660a756a4",
        "parent": "https://github.com/apache/tinkerpop/commit/2d824cf29f7d914405e262f4111aa2f5a7c272dc",
        "bug_id": "tinkerpop_2760645",
        "file": [
            {
                "sha": "4411f99b9c74caf34be039d93ad0744c50b676bf",
                "filename": "CHANGELOG.asciidoc",
                "blob_url": "https://github.com/apache/tinkerpop/blob/276064530617c04706b62ac57ec4e2e660a756a4/CHANGELOG.asciidoc",
                "raw_url": "https://github.com/apache/tinkerpop/raw/276064530617c04706b62ac57ec4e2e660a756a4/CHANGELOG.asciidoc",
                "status": "modified",
                "changes": 2,
                "additions": 2,
                "contents_url": "https://api.github.com/repos/apache/tinkerpop/contents/CHANGELOG.asciidoc?ref=276064530617c04706b62ac57ec4e2e660a756a4",
                "patch": "@@ -26,6 +26,8 @@ image::https://raw.githubusercontent.com/apache/tinkerpop/master/docs/static/ima\n TinkerPop 3.2.4 (Release Date: NOT OFFICIALLY RELEASED YET)\n ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n \n+* `PathRetractionStrategy` does not add a `NoOpBarrierStep` to the end of local children as its wasted computation in 99% of traversals.\n+* Fixed a bug in `AddVertexStartStep` where if a side-effect was being used in the parametrization, an NPE occurred.\n * Fixed a bug in `LazyBarrierStrategy` where `profile()` was deactivating it accidentally.\n * Fixed a bug in `RepeatUnrollStrategy` where stateful `DedupGlobalStep` was cloned and thus, maintained two deduplication sets.\n * Added documentation around \"terminal steps\" in Gremlin: `hasNext()`, `next()`, `toList()`, etc.",
                "deletions": 0
            },
            {
                "sha": "58c3ef32b4aa3ab9a6417aff6b59e0786f1e5189",
                "filename": "gremlin-core/src/main/java/org/apache/tinkerpop/gremlin/process/traversal/step/map/AddVertexStartStep.java",
                "blob_url": "https://github.com/apache/tinkerpop/blob/276064530617c04706b62ac57ec4e2e660a756a4/gremlin-core/src/main/java/org/apache/tinkerpop/gremlin/process/traversal/step/map/AddVertexStartStep.java",
                "raw_url": "https://github.com/apache/tinkerpop/raw/276064530617c04706b62ac57ec4e2e660a756a4/gremlin-core/src/main/java/org/apache/tinkerpop/gremlin/process/traversal/step/map/AddVertexStartStep.java",
                "status": "modified",
                "changes": 8,
                "additions": 5,
                "contents_url": "https://api.github.com/repos/apache/tinkerpop/contents/gremlin-core/src/main/java/org/apache/tinkerpop/gremlin/process/traversal/step/map/AddVertexStartStep.java?ref=276064530617c04706b62ac57ec4e2e660a756a4",
                "patch": "@@ -19,8 +19,10 @@\n package org.apache.tinkerpop.gremlin.process.traversal.step.map;\n \n import org.apache.tinkerpop.gremlin.process.traversal.Parameterizing;\n+import org.apache.tinkerpop.gremlin.process.traversal.Step;\n import org.apache.tinkerpop.gremlin.process.traversal.Traversal;\n import org.apache.tinkerpop.gremlin.process.traversal.Traverser;\n+import org.apache.tinkerpop.gremlin.process.traversal.TraverserGenerator;\n import org.apache.tinkerpop.gremlin.process.traversal.step.Mutating;\n import org.apache.tinkerpop.gremlin.process.traversal.step.TraversalParent;\n import org.apache.tinkerpop.gremlin.process.traversal.step.util.AbstractStep;\n@@ -29,7 +31,6 @@\n import org.apache.tinkerpop.gremlin.process.traversal.step.util.event.Event;\n import org.apache.tinkerpop.gremlin.process.traversal.step.util.event.ListCallbackRegistry;\n import org.apache.tinkerpop.gremlin.process.traversal.traverser.TraverserRequirement;\n-import org.apache.tinkerpop.gremlin.process.traversal.traverser.util.EmptyTraverser;\n import org.apache.tinkerpop.gremlin.process.traversal.util.FastNoSuchElementException;\n import org.apache.tinkerpop.gremlin.structure.T;\n import org.apache.tinkerpop.gremlin.structure.Vertex;\n@@ -75,12 +76,13 @@ public void addPropertyMutations(final Object... keyValues) {\n     protected Traverser.Admin<Vertex> processNextStart() {\n         if (this.first) {\n             this.first = false;\n-            final Vertex vertex = this.getTraversal().getGraph().get().addVertex(this.parameters.getKeyValues(EmptyTraverser.instance()));\n+            final TraverserGenerator generator = this.getTraversal().getTraverserGenerator();\n+            final Vertex vertex = this.getTraversal().getGraph().get().addVertex(this.parameters.getKeyValues(generator.generate(false, (Step) this, 1L)));\n             if (this.callbackRegistry != null) {\n                 final Event.VertexAddedEvent vae = new Event.VertexAddedEvent(DetachedFactory.detach(vertex, true));\n                 this.callbackRegistry.getCallbacks().forEach(c -> c.accept(vae));\n             }\n-            return this.getTraversal().getTraverserGenerator().generate(vertex, this, 1l);\n+            return generator.generate(vertex, this, 1L);\n         } else\n             throw FastNoSuchElementException.instance();\n     }",
                "deletions": 3
            },
            {
                "sha": "1d09748f42ddf0cda8e71f21417011a1241907fb",
                "filename": "gremlin-core/src/main/java/org/apache/tinkerpop/gremlin/process/traversal/strategy/optimization/PathRetractionStrategy.java",
                "blob_url": "https://github.com/apache/tinkerpop/blob/276064530617c04706b62ac57ec4e2e660a756a4/gremlin-core/src/main/java/org/apache/tinkerpop/gremlin/process/traversal/strategy/optimization/PathRetractionStrategy.java",
                "raw_url": "https://github.com/apache/tinkerpop/raw/276064530617c04706b62ac57ec4e2e660a756a4/gremlin-core/src/main/java/org/apache/tinkerpop/gremlin/process/traversal/strategy/optimization/PathRetractionStrategy.java",
                "status": "modified",
                "changes": 3,
                "additions": 2,
                "contents_url": "https://api.github.com/repos/apache/tinkerpop/contents/gremlin-core/src/main/java/org/apache/tinkerpop/gremlin/process/traversal/strategy/optimization/PathRetractionStrategy.java?ref=276064530617c04706b62ac57ec4e2e660a756a4",
                "patch": "@@ -109,7 +109,8 @@ public void apply(final Traversal.Admin<?, ?> traversal) {\n                         !(currentStep instanceof MatchStep) &&\n                         !(currentStep instanceof Barrier) &&\n                         !(currentStep.getNextStep() instanceof Barrier) &&\n-                        !(currentStep.getTraversal().getParent() instanceof MatchStep))\n+                        !(currentStep.getTraversal().getParent() instanceof MatchStep) &&\n+                        TraversalHelper.isGlobalChild(currentStep.getTraversal()))\n                     TraversalHelper.insertAfterStep(new NoOpBarrierStep<>(traversal, this.standardBarrierSize), currentStep, traversal);\n             }\n         }",
                "deletions": 1
            },
            {
                "sha": "00312faf4e9dea5678b81d6ac6ffa43f103c3d2f",
                "filename": "gremlin-groovy-test/src/main/groovy/org/apache/tinkerpop/gremlin/process/traversal/step/map/GroovyAddVertexTest.groovy",
                "blob_url": "https://github.com/apache/tinkerpop/blob/276064530617c04706b62ac57ec4e2e660a756a4/gremlin-groovy-test/src/main/groovy/org/apache/tinkerpop/gremlin/process/traversal/step/map/GroovyAddVertexTest.groovy",
                "raw_url": "https://github.com/apache/tinkerpop/raw/276064530617c04706b62ac57ec4e2e660a756a4/gremlin-groovy-test/src/main/groovy/org/apache/tinkerpop/gremlin/process/traversal/step/map/GroovyAddVertexTest.groovy",
                "status": "modified",
                "changes": 10,
                "additions": 10,
                "contents_url": "https://api.github.com/repos/apache/tinkerpop/contents/gremlin-groovy-test/src/main/groovy/org/apache/tinkerpop/gremlin/process/traversal/step/map/GroovyAddVertexTest.groovy?ref=276064530617c04706b62ac57ec4e2e660a756a4",
                "patch": "@@ -76,6 +76,16 @@ public abstract class GroovyAddVertexTest {\n             new ScriptTraversal<>(g, \"gremlin-groovy\", \"g.V.addV('animal').property('name', values('name')).property('name', 'an animal').property(values('name'), label())\")\n         }\n \n+        @Override\n+        public Traversal<Vertex, Map<String, List<String>>> get_g_withSideEffectXa_testX_V_hasLabelXsoftwareX_propertyXtemp_selectXaXX_valueMapXname_tempX() {\n+            new ScriptTraversal<>(g, \"gremlin-groovy\", \"g.withSideEffect('a', 'test').V.hasLabel('software').property('temp', select('a')).valueMap('name', 'temp')\")\n+        }\n+\n+        @Override\n+        public Traversal<Vertex, String> get_g_withSideEffectXa_markoX_addV_propertyXname_selectXaXX_name() {\n+            new ScriptTraversal<>(g, \"gremlin-groovy\", \"g.withSideEffect('a', 'marko').addV().property('name', select('a')).name\")\n+        }\n+\n         ///////// DEPRECATED BELOW\n \n         @Override",
                "deletions": 0
            },
            {
                "sha": "f43c6125ebcdcd4e302687a5fad305d098131e8f",
                "filename": "gremlin-test/src/main/java/org/apache/tinkerpop/gremlin/process/traversal/step/map/AddVertexTest.java",
                "blob_url": "https://github.com/apache/tinkerpop/blob/276064530617c04706b62ac57ec4e2e660a756a4/gremlin-test/src/main/java/org/apache/tinkerpop/gremlin/process/traversal/step/map/AddVertexTest.java",
                "raw_url": "https://github.com/apache/tinkerpop/raw/276064530617c04706b62ac57ec4e2e660a756a4/gremlin-test/src/main/java/org/apache/tinkerpop/gremlin/process/traversal/step/map/AddVertexTest.java",
                "status": "modified",
                "changes": 53,
                "additions": 51,
                "contents_url": "https://api.github.com/repos/apache/tinkerpop/contents/gremlin-test/src/main/java/org/apache/tinkerpop/gremlin/process/traversal/step/map/AddVertexTest.java?ref=276064530617c04706b62ac57ec4e2e660a756a4",
                "patch": "@@ -32,11 +32,17 @@\n import org.junit.Test;\n import org.junit.runner.RunWith;\n \n+import java.util.Collections;\n import java.util.List;\n+import java.util.Map;\n \n import static org.apache.tinkerpop.gremlin.LoadGraphWith.GraphData.MODERN;\n+import static org.apache.tinkerpop.gremlin.process.traversal.dsl.graph.__.select;\n import static org.hamcrest.Matchers.containsInAnyOrder;\n-import static org.junit.Assert.*;\n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertFalse;\n+import static org.junit.Assert.assertThat;\n+import static org.junit.Assert.assertTrue;\n \n /**\n  * @author Marko A. Rodriguez (http://markorodriguez.com)\n@@ -62,6 +68,10 @@\n \n     public abstract Traversal<Vertex, Vertex> get_g_V_addVXanimalX_propertyXname_valuesXnameXX_propertyXname_an_animalX_propertyXvaluesXnameX_labelX();\n \n+    public abstract Traversal<Vertex, Map<String, List<String>>> get_g_withSideEffectXa_testX_V_hasLabelXsoftwareX_propertyXtemp_selectXaXX_valueMapXname_tempX();\n+\n+    public abstract Traversal<Vertex, String> get_g_withSideEffectXa_markoX_addV_propertyXname_selectXaXX_name();\n+\n     // 3.0.0 DEPRECATIONS\n     @Deprecated\n     public abstract Traversal<Vertex, Vertex> get_g_V_addVXlabel_animal_age_0X();\n@@ -275,12 +285,41 @@ public void g_addVXlabel_person_name_stephenX() {\n         assertEquals(7, IteratorUtils.count(g.V()));\n     }\n \n+    @Test\n+    @LoadGraphWith(MODERN)\n+    @FeatureRequirement(featureClass = Graph.Features.VertexFeatures.class, feature = Graph.Features.VertexFeatures.FEATURE_ADD_PROPERTY)\n+    public void g_withSideEffectXa_testX_V_hasLabelXsoftwareX_propertyXtemp_selectXaXX_valueMapXname_tempX() {\n+        final Traversal<Vertex, Map<String, List<String>>> traversal = get_g_withSideEffectXa_testX_V_hasLabelXsoftwareX_propertyXtemp_selectXaXX_valueMapXname_tempX();\n+        printTraversalForm(traversal);\n+        int counter = 0;\n+        while (traversal.hasNext()) {\n+            counter++;\n+            final Map<String, List<String>> valueMap = traversal.next();\n+            assertEquals(2, valueMap.size());\n+            assertEquals(Collections.singletonList(\"test\"), valueMap.get(\"temp\"));\n+            assertTrue(valueMap.get(\"name\").equals(Collections.singletonList(\"ripple\")) || valueMap.get(\"name\").equals(Collections.singletonList(\"lop\")));\n+        }\n+        assertEquals(2, counter);\n+        assertFalse(traversal.hasNext());\n+    }\n+\n+    @Test\n+    @LoadGraphWith(MODERN)\n+    @FeatureRequirement(featureClass = Graph.Features.VertexFeatures.class, feature = Graph.Features.VertexFeatures.FEATURE_ADD_VERTICES)\n+    @FeatureRequirement(featureClass = Graph.Features.VertexFeatures.class, feature = Graph.Features.VertexFeatures.FEATURE_ADD_PROPERTY)\n+    public void g_withSideEffectXa_markoX_addV_propertyXname_selectXaXX_name() {\n+        final Traversal<Vertex, String> traversal = get_g_withSideEffectXa_markoX_addV_propertyXname_selectXaXX_name();\n+        printTraversalForm(traversal);\n+        assertEquals(\"marko\", traversal.next());\n+        assertFalse(traversal.hasNext());\n+    }\n+\n \n     public static class Traversals extends AddVertexTest {\n \n         @Override\n         public Traversal<Vertex, Vertex> get_g_VX1X_addVXanimalX_propertyXage_selectXaX_byXageXX_propertyXname_puppyX(final Object v1Id) {\n-            return g.V(v1Id).as(\"a\").addV(\"animal\").property(\"age\", __.select(\"a\").by(\"age\")).property(\"name\", \"puppy\");\n+            return g.V(v1Id).as(\"a\").addV(\"animal\").property(\"age\", select(\"a\").by(\"age\")).property(\"name\", \"puppy\");\n         }\n \n         @Override\n@@ -332,5 +371,15 @@ public void g_addVXlabel_person_name_stephenX() {\n         public Traversal<Vertex, Vertex> get_g_addVXlabel_person_name_stephenX() {\n             return g.addV(T.label, \"person\", \"name\", \"stephen\");\n         }\n+\n+        @Override\n+        public Traversal<Vertex, Map<String, List<String>>> get_g_withSideEffectXa_testX_V_hasLabelXsoftwareX_propertyXtemp_selectXaXX_valueMapXname_tempX() {\n+            return g.withSideEffect(\"a\", \"test\").V().hasLabel(\"software\").property(\"temp\", select(\"a\")).valueMap(\"name\", \"temp\");\n+        }\n+\n+        @Override\n+        public Traversal<Vertex, String> get_g_withSideEffectXa_markoX_addV_propertyXname_selectXaXX_name() {\n+            return g.withSideEffect(\"a\", \"marko\").addV().property(\"name\", select(\"a\")).values(\"name\");\n+        }\n     }\n }\n\\ No newline at end of file",
                "deletions": 2
            }
        ],
        "patched_files": [
            "PathRetractionStrategy.java",
            "AddVertexStartStep.java"
        ],
        "unit_tests": [
            "AddVertexTest.java",
            "PathRetractionStrategyTest.java"
        ]
    },
    "tinkerpop_3d70c3d": {
        "repo": "tinkerpop",
        "message": "fixed an NPE bug in profiling GroupSideEffectStep. It has to deal with how GroupSideEffectStep breaks apart the valueTraversal into a pre/post-traversal for pre-proecessing and reduction. While I was testing, I found another bug where if the reducing traversal has no data, then don't .next() it. Basically, it is possible for Profiling to get a traversal that has not been next'd because the traversal's pre/post was being worked with.",
        "commit": "https://github.com/apache/tinkerpop/commit/3d70c3d15d4591acab84420f86991cd98a187c38",
        "parent": "https://github.com/apache/tinkerpop/commit/b4d0ef98aee1bde018698e726f0374ce61a37f3a",
        "bug_id": "tinkerpop_3d70c3d",
        "file": [
            {
                "sha": "766b135eb239710e62e9b719d7e0144b5c3a3119",
                "filename": "CHANGELOG.asciidoc",
                "blob_url": "https://github.com/apache/tinkerpop/blob/3d70c3d15d4591acab84420f86991cd98a187c38/CHANGELOG.asciidoc",
                "raw_url": "https://github.com/apache/tinkerpop/raw/3d70c3d15d4591acab84420f86991cd98a187c38/CHANGELOG.asciidoc",
                "status": "modified",
                "changes": 1,
                "additions": 1,
                "contents_url": "https://api.github.com/repos/apache/tinkerpop/contents/CHANGELOG.asciidoc?ref=3d70c3d15d4591acab84420f86991cd98a187c38",
                "patch": "@@ -26,6 +26,7 @@ image::https://raw.githubusercontent.com/apache/tinkerpop/master/docs/static/ima\n TinkerPop 3.2.4 (Release Date: NOT OFFICIALLY RELEASED YET)\n ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n \n+* Fixed a `NullPointerException` bug with profiling `GroupSideEffectStep` in OLTP.\n * Improved ability to release resources in `GraphProvider` instances in the test suite.\n * Added a `force` option for killing sessions without waiting for transaction close or timeout of a currently running job or multiple jobs.\n * Deprecated `Session.kill()` and `Session.manualKill()`.",
                "deletions": 0
            },
            {
                "sha": "737c5f9ccc165be802c5565c1a144a5f12d9ec0d",
                "filename": "gremlin-core/src/main/java/org/apache/tinkerpop/gremlin/process/traversal/step/map/GroupStep.java",
                "blob_url": "https://github.com/apache/tinkerpop/blob/3d70c3d15d4591acab84420f86991cd98a187c38/gremlin-core/src/main/java/org/apache/tinkerpop/gremlin/process/traversal/step/map/GroupStep.java",
                "raw_url": "https://github.com/apache/tinkerpop/raw/3d70c3d15d4591acab84420f86991cd98a187c38/gremlin-core/src/main/java/org/apache/tinkerpop/gremlin/process/traversal/step/map/GroupStep.java",
                "status": "modified",
                "changes": 33,
                "additions": 20,
                "contents_url": "https://api.github.com/repos/apache/tinkerpop/contents/gremlin-core/src/main/java/org/apache/tinkerpop/gremlin/process/traversal/step/map/GroupStep.java?ref=3d70c3d15d4591acab84420f86991cd98a187c38",
                "patch": "@@ -22,7 +22,6 @@\n import org.apache.tinkerpop.gremlin.process.traversal.Step;\n import org.apache.tinkerpop.gremlin.process.traversal.Traversal;\n import org.apache.tinkerpop.gremlin.process.traversal.Traverser;\n-import org.apache.tinkerpop.gremlin.process.traversal.dsl.graph.DefaultGraphTraversal;\n import org.apache.tinkerpop.gremlin.process.traversal.dsl.graph.__;\n import org.apache.tinkerpop.gremlin.process.traversal.lambda.ElementValueTraversal;\n import org.apache.tinkerpop.gremlin.process.traversal.lambda.FunctionTraverser;\n@@ -61,8 +60,8 @@\n \n     private char state = 'k';\n     private Traversal.Admin<S, K> keyTraversal = null;\n-    private Traversal.Admin<S, ?> preTraversal;\n-    private Traversal.Admin<S, V> valueTraversal;\n+    private Traversal.Admin<S, ?> preTraversal = null;\n+    private Traversal.Admin<S, V> valueTraversal = null;\n \n     public GroupStep(final Traversal.Admin traversal) {\n         super(traversal);\n@@ -109,10 +108,12 @@ public String toString() {\n \n     @Override\n     public List<Traversal.Admin<?, ?>> getLocalChildren() {\n-        final List<Traversal.Admin<?, ?>> children = new ArrayList<>(2);\n+        final List<Traversal.Admin<?, ?>> children = new ArrayList<>(3);\n         if (null != this.keyTraversal)\n-            children.add((Traversal.Admin) this.keyTraversal);\n+            children.add(this.keyTraversal);\n         children.add(this.valueTraversal);\n+        if (null != this.preTraversal)\n+            children.add(this.preTraversal);\n         return children;\n     }\n \n@@ -127,7 +128,8 @@ public String toString() {\n         if (null != this.keyTraversal)\n             clone.keyTraversal = this.keyTraversal.clone();\n         clone.valueTraversal = this.valueTraversal.clone();\n-        clone.preTraversal = this.integrateChild(GroupStep.generatePreTraversal(clone.valueTraversal));\n+        if (null != this.preTraversal)\n+            clone.preTraversal = this.preTraversal.clone();\n         return clone;\n     }\n \n@@ -332,26 +334,30 @@ private void readObject(final ObjectInputStream inputStream) throws IOException,\n \n     public static Traversal.Admin<?, ?> generatePreTraversal(final Traversal.Admin<?, ?> valueTraversal) {\n         if (!TraversalHelper.hasStepOfAssignableClass(Barrier.class, valueTraversal))\n-            return valueTraversal;\n+            return valueTraversal.clone();\n         final Traversal.Admin<?, ?> first = __.identity().asAdmin();\n+        boolean updated = false;\n         for (final Step step : valueTraversal.getSteps()) {\n             if (step instanceof Barrier)\n                 break;\n             first.addStep(step.clone());\n+            updated = true;\n         }\n-        return first.getSteps().size() == 1 ? null : first;\n+        return updated ? first : null;\n     }\n \n     public static <K, V> Map<K, V> doFinalReduction(final Map<K, Object> map, final Traversal.Admin<?, V> valueTraversal) {\n         final Map<K, V> reducedMap = new HashMap<>(map.size());\n         final Barrier reducingBarrierStep = TraversalHelper.getFirstStepOfAssignableClass(Barrier.class, valueTraversal).orElse(null);\n         IteratorUtils.removeOnNext(map.entrySet().iterator()).forEachRemaining(entry -> {\n-            valueTraversal.reset();\n             if (null == reducingBarrierStep) {\n-                reducedMap.put(entry.getKey(), entry.getValue() instanceof TraverserSet ?\n-                        ((TraverserSet<V>) entry.getValue()).iterator().next().get() :\n-                        (V) entry.getValue());\n+                if (entry.getValue() instanceof TraverserSet) {\n+                    if (!((TraverserSet) entry.getValue()).isEmpty())\n+                        reducedMap.put(entry.getKey(), ((TraverserSet<V>) entry.getValue()).peek().get());\n+                } else\n+                    reducedMap.put(entry.getKey(), (V) entry.getValue());\n             } else {\n+                valueTraversal.reset();\n                 if (entry.getValue() instanceof Traverser.Admin)\n                     ((Step) reducingBarrierStep).addStart((Traverser.Admin) entry.getValue());\n                 else if (entry.getValue() instanceof TraverserSet)\n@@ -361,7 +367,8 @@ else if (entry.getValue() instanceof Pair) {\n                     reducingBarrierStep.addBarrier((((Pair) entry.getValue()).getValue1()));\n                 } else\n                     reducingBarrierStep.addBarrier(entry.getValue());\n-                reducedMap.put(entry.getKey(), valueTraversal.next());\n+                if (valueTraversal.hasNext())\n+                    reducedMap.put(entry.getKey(), valueTraversal.next());\n             }\n         });\n         assert map.isEmpty();",
                "deletions": 13
            },
            {
                "sha": "f2699e0ef8b187d508b79c6acd2e71f59f192e7d",
                "filename": "gremlin-core/src/main/java/org/apache/tinkerpop/gremlin/process/traversal/step/sideEffect/GroupSideEffectStep.java",
                "blob_url": "https://github.com/apache/tinkerpop/blob/3d70c3d15d4591acab84420f86991cd98a187c38/gremlin-core/src/main/java/org/apache/tinkerpop/gremlin/process/traversal/step/sideEffect/GroupSideEffectStep.java",
                "raw_url": "https://github.com/apache/tinkerpop/raw/3d70c3d15d4591acab84420f86991cd98a187c38/gremlin-core/src/main/java/org/apache/tinkerpop/gremlin/process/traversal/step/sideEffect/GroupSideEffectStep.java",
                "status": "modified",
                "changes": 11,
                "additions": 7,
                "contents_url": "https://api.github.com/repos/apache/tinkerpop/contents/gremlin-core/src/main/java/org/apache/tinkerpop/gremlin/process/traversal/step/sideEffect/GroupSideEffectStep.java?ref=3d70c3d15d4591acab84420f86991cd98a187c38",
                "patch": "@@ -45,7 +45,7 @@\n     private char state = 'k';\n     private Traversal.Admin<S, K> keyTraversal = null;\n     private Traversal.Admin<S, ?> preTraversal = null;\n-    private Traversal.Admin<S, V> valueTraversal = this.integrateChild(__.fold().asAdmin());\n+    private Traversal.Admin<S, V> valueTraversal = null;\n     ///\n     private String sideEffectKey;\n \n@@ -99,10 +99,12 @@ public String toString() {\n \n     @Override\n     public List<Traversal.Admin<?, ?>> getLocalChildren() {\n-        final List<Traversal.Admin<?, ?>> children = new ArrayList<>(2);\n+        final List<Traversal.Admin<?, ?>> children = new ArrayList<>(3);\n         if (null != this.keyTraversal)\n-            children.add((Traversal.Admin) this.keyTraversal);\n+            children.add(this.keyTraversal);\n         children.add(this.valueTraversal);\n+        if (null != this.preTraversal)\n+            children.add(this.preTraversal);\n         return children;\n     }\n \n@@ -117,7 +119,8 @@ public String toString() {\n         if (null != this.keyTraversal)\n             clone.keyTraversal = this.keyTraversal.clone();\n         clone.valueTraversal = this.valueTraversal.clone();\n-        clone.preTraversal = this.integrateChild(GroupStep.generatePreTraversal(clone.valueTraversal));\n+        if (null != this.preTraversal)\n+            clone.preTraversal = this.preTraversal.clone();\n         return clone;\n     }\n ",
                "deletions": 4
            },
            {
                "sha": "ecf28e002d01e85c5c4e9150e3b95b66be826896",
                "filename": "gremlin-core/src/main/java/org/apache/tinkerpop/gremlin/process/traversal/util/DefaultTraversalMetrics.java",
                "blob_url": "https://github.com/apache/tinkerpop/blob/3d70c3d15d4591acab84420f86991cd98a187c38/gremlin-core/src/main/java/org/apache/tinkerpop/gremlin/process/traversal/util/DefaultTraversalMetrics.java",
                "raw_url": "https://github.com/apache/tinkerpop/raw/3d70c3d15d4591acab84420f86991cd98a187c38/gremlin-core/src/main/java/org/apache/tinkerpop/gremlin/process/traversal/util/DefaultTraversalMetrics.java",
                "status": "modified",
                "changes": 76,
                "additions": 39,
                "contents_url": "https://api.github.com/repos/apache/tinkerpop/contents/gremlin-core/src/main/java/org/apache/tinkerpop/gremlin/process/traversal/util/DefaultTraversalMetrics.java?ref=3d70c3d15d4591acab84420f86991cd98a187c38",
                "patch": "@@ -37,6 +37,7 @@\n \n /**\n  * @author Bob Briody (http://bobbriody.com)\n+ * @author Marko A. Rodriguez (http://markorodriguez.com)\n  */\n public final class DefaultTraversalMetrics implements TraversalMetrics, Serializable {\n     /**\n@@ -61,29 +62,29 @@ public DefaultTraversalMetrics() {\n      */\n     public DefaultTraversalMetrics(final long totalStepDurationNs, final List<MutableMetrics> metricsMap) {\n         this.totalStepDuration = totalStepDurationNs;\n-        this.computedMetrics = new LinkedHashMap<>(metrics.size());\n-        metricsMap.forEach(m -> computedMetrics.put(m.getId(), m.getImmutableClone()));\n+        this.computedMetrics = new LinkedHashMap<>(this.metrics.size());\n+        metricsMap.forEach(metric -> this.computedMetrics.put(metric.getId(), metric.getImmutableClone()));\n     }\n \n     @Override\n     public long getDuration(final TimeUnit unit) {\n-        return unit.convert(totalStepDuration, MutableMetrics.SOURCE_UNIT);\n+        return unit.convert(this.totalStepDuration, MutableMetrics.SOURCE_UNIT);\n     }\n \n     @Override\n     public Metrics getMetrics(final int index) {\n         // adjust index to account for the injected profile steps\n-        return (Metrics) computedMetrics.get(indexToLabelMap.get(index));\n+        return this.computedMetrics.get(this.indexToLabelMap.get(index));\n     }\n \n     @Override\n     public Metrics getMetrics(final String id) {\n-        return computedMetrics.get(id);\n+        return this.computedMetrics.get(id);\n     }\n \n     @Override\n     public Collection<ImmutableMetrics> getMetrics() {\n-        return computedMetrics.values();\n+        return this.computedMetrics.values();\n     }\n \n     @Override\n@@ -96,7 +97,7 @@ public String toString() {\n \n         sb.append(\"\\n=============================================================================================================\");\n \n-        appendMetrics(computedMetrics.values(), sb, 0);\n+        appendMetrics(this.computedMetrics.values(), sb, 0);\n \n         // Append total duration\n         sb.append(String.format(\"%n%50s %21s %11s %15.3f %8s\",\n@@ -150,25 +151,25 @@ private void appendMetrics(final Collection<? extends Metrics> metrics, final St\n \n     private void computeTotals() {\n         // Create temp list of ordered metrics\n-        List<MutableMetrics> tempMetrics = new ArrayList<>(metrics.size());\n-        for (String label : indexToLabelMap.values()) {\n+        final List<MutableMetrics> tempMetrics = new ArrayList<>(this.metrics.size());\n+        for (final String label : this.indexToLabelMap.values()) {\n             // The indexToLabelMap is sorted by index (key)\n-            tempMetrics.add(metrics.get(label).clone());\n+            tempMetrics.add(this.metrics.get(label).clone());\n         }\n \n         // Calculate total duration\n         this.totalStepDuration = 0;\n-        tempMetrics.forEach(m -> this.totalStepDuration += m.getDuration(MutableMetrics.SOURCE_UNIT));\n+        tempMetrics.forEach(metric -> this.totalStepDuration += metric.getDuration(MutableMetrics.SOURCE_UNIT));\n \n         // Assign %'s\n         tempMetrics.forEach(m -> {\n-            double dur = m.getDuration(TimeUnit.NANOSECONDS) * 100.d / this.totalStepDuration;\n+            final double dur = m.getDuration(TimeUnit.NANOSECONDS) * 100.d / this.totalStepDuration;\n             m.setAnnotation(PERCENT_DURATION_KEY, dur);\n         });\n \n         // Store immutable instances of the calculated metrics\n-        computedMetrics = new LinkedHashMap<>(metrics.size());\n-        tempMetrics.forEach(it -> computedMetrics.put(it.getId(), it.getImmutableClone()));\n+        this.computedMetrics = new LinkedHashMap<>(this.metrics.size());\n+        tempMetrics.forEach(it -> this.computedMetrics.put(it.getId(), it.getImmutableClone()));\n     }\n \n     public static DefaultTraversalMetrics merge(final Iterator<DefaultTraversalMetrics> toMerge) {\n@@ -186,7 +187,7 @@ public static DefaultTraversalMetrics merge(final Iterator<DefaultTraversalMetri\n \n                     newTraversalMetrics.metrics.put(metricsId, aggregateMetrics);\n                     // Set the index of the Metrics\n-                    for (Map.Entry<Integer, String> entry : inTraversalMetrics.indexToLabelMap.entrySet()) {\n+                    for (final Map.Entry<Integer, String> entry : inTraversalMetrics.indexToLabelMap.entrySet()) {\n                         if (metricsId.equals(entry.getValue())) {\n                             newTraversalMetrics.indexToLabelMap.put(entry.getKey(), metricsId);\n                             break;\n@@ -199,7 +200,7 @@ public static DefaultTraversalMetrics merge(final Iterator<DefaultTraversalMetri\n         return newTraversalMetrics;\n     }\n \n-    public void setMetrics(Traversal.Admin traversal, boolean onGraphComputer) {\n+    public void setMetrics(final Traversal.Admin traversal, final boolean onGraphComputer) {\n         addTopLevelMetrics(traversal, onGraphComputer);\n         handleNestedTraversals(traversal, null, onGraphComputer);\n         computeTotals();\n@@ -222,36 +223,37 @@ private void addTopLevelMetrics(Traversal.Admin traversal, final boolean onGraph\n         }\n     }\n \n-    private void handleNestedTraversals(Traversal.Admin traversal, MutableMetrics parentMetrics, boolean onGraphComputer) {\n+    private void handleNestedTraversals(final Traversal.Admin traversal, final MutableMetrics parentMetrics, final boolean onGraphComputer) {\n         long prevDur = 0;\n-        for (int ii = 0; ii < traversal.getSteps().size(); ii++) {\n-            Step step = (Step) traversal.getSteps().get(ii);\n-            if (!(step instanceof ProfileStep)) {\n+        for (int i = 0; i < traversal.getSteps().size(); i++) {\n+            final Step step = (Step) traversal.getSteps().get(i);\n+            if (!(step instanceof ProfileStep))\n                 continue;\n-            }\n \n             final MutableMetrics metrics = onGraphComputer ?\n                     traversal.getSideEffects().get(step.getId()) :\n                     ((ProfileStep) step).getMetrics();\n \n-            if (!onGraphComputer) {\n-                // subtract upstream duration.\n-                long durBeforeAdjustment = metrics.getDuration(TimeUnit.NANOSECONDS);\n-                // adjust duration\n-                metrics.setDuration(metrics.getDuration(TimeUnit.NANOSECONDS) - prevDur, TimeUnit.NANOSECONDS);\n-                prevDur = durBeforeAdjustment;\n-            }\n-\n-            if (parentMetrics != null) {\n-                parentMetrics.addNested(metrics);\n-            }\n+            if (null != metrics) { // this happens when a particular branch never received a .next() call (the metrics were never initialized)\n+                if (!onGraphComputer) {\n+                    // subtract upstream duration.\n+                    long durBeforeAdjustment = metrics.getDuration(TimeUnit.NANOSECONDS);\n+                    // adjust duration\n+                    metrics.setDuration(metrics.getDuration(TimeUnit.NANOSECONDS) - prevDur, TimeUnit.NANOSECONDS);\n+                    prevDur = durBeforeAdjustment;\n+                }\n \n-            if (step.getPreviousStep() instanceof TraversalParent) {\n-                for (Traversal.Admin<?, ?> t : ((TraversalParent) step.getPreviousStep()).getLocalChildren()) {\n-                    handleNestedTraversals(t, metrics, onGraphComputer);\n+                if (parentMetrics != null) {\n+                    parentMetrics.addNested(metrics);\n                 }\n-                for (Traversal.Admin<?, ?> t : ((TraversalParent) step.getPreviousStep()).getGlobalChildren()) {\n-                    handleNestedTraversals(t, metrics, onGraphComputer);\n+\n+                if (step.getPreviousStep() instanceof TraversalParent) {\n+                    for (Traversal.Admin<?, ?> t : ((TraversalParent) step.getPreviousStep()).getLocalChildren()) {\n+                        handleNestedTraversals(t, metrics, onGraphComputer);\n+                    }\n+                    for (Traversal.Admin<?, ?> t : ((TraversalParent) step.getPreviousStep()).getGlobalChildren()) {\n+                        handleNestedTraversals(t, metrics, onGraphComputer);\n+                    }\n                 }\n             }\n         }",
                "deletions": 37
            },
            {
                "sha": "84da296561380006687fcd3f09f406d3a4787b07",
                "filename": "gremlin-groovy-test/src/main/groovy/org/apache/tinkerpop/gremlin/process/traversal/step/sideEffect/GroovyGroupTest.groovy",
                "blob_url": "https://github.com/apache/tinkerpop/blob/3d70c3d15d4591acab84420f86991cd98a187c38/gremlin-groovy-test/src/main/groovy/org/apache/tinkerpop/gremlin/process/traversal/step/sideEffect/GroovyGroupTest.groovy",
                "raw_url": "https://github.com/apache/tinkerpop/raw/3d70c3d15d4591acab84420f86991cd98a187c38/gremlin-groovy-test/src/main/groovy/org/apache/tinkerpop/gremlin/process/traversal/step/sideEffect/GroovyGroupTest.groovy",
                "status": "modified",
                "changes": 5,
                "additions": 5,
                "contents_url": "https://api.github.com/repos/apache/tinkerpop/contents/gremlin-groovy-test/src/main/groovy/org/apache/tinkerpop/gremlin/process/traversal/step/sideEffect/GroovyGroupTest.groovy?ref=3d70c3d15d4591acab84420f86991cd98a187c38",
                "patch": "@@ -118,5 +118,10 @@ public abstract class GroovyGroupTest {\n         public Traversal<Vertex, Map<String, Map<String, Number>>> get_g_V_outXfollowedByX_group_byXsongTypeX_byXbothE_group_byXlabelX_byXweight_sumXX() {\n             new ScriptTraversal<>(g, \"gremlin-groovy\", \"g.V.out('followedBy').group.by('songType').by(bothE().group.by(label).by(values('weight').sum))\")\n         }\n+\n+        @Override\n+        public Traversal<Vertex, Map<String, String>> get_g_V_groupXmX_byXnameX_byXinXknowsX_nameX_capXmX() {\n+            new ScriptTraversal<>(g, \"gremlin-groovy\", \"g.V.group('m').by('name').by(__.in('knows').name).cap('m')\")\n+        }\n     }\n }",
                "deletions": 0
            },
            {
                "sha": "036c8c8a8342f383be1eda15b510aaef92d11ba4",
                "filename": "gremlin-test/src/main/java/org/apache/tinkerpop/gremlin/process/traversal/step/sideEffect/GroupTest.java",
                "blob_url": "https://github.com/apache/tinkerpop/blob/3d70c3d15d4591acab84420f86991cd98a187c38/gremlin-test/src/main/java/org/apache/tinkerpop/gremlin/process/traversal/step/sideEffect/GroupTest.java",
                "raw_url": "https://github.com/apache/tinkerpop/raw/3d70c3d15d4591acab84420f86991cd98a187c38/gremlin-test/src/main/java/org/apache/tinkerpop/gremlin/process/traversal/step/sideEffect/GroupTest.java",
                "status": "modified",
                "changes": 23,
                "additions": 23,
                "contents_url": "https://api.github.com/repos/apache/tinkerpop/contents/gremlin-test/src/main/java/org/apache/tinkerpop/gremlin/process/traversal/step/sideEffect/GroupTest.java?ref=3d70c3d15d4591acab84420f86991cd98a187c38",
                "patch": "@@ -88,6 +88,8 @@\n \n     public abstract Traversal<Vertex, Map<String, Map<String, Number>>> get_g_V_outXfollowedByX_group_byXsongTypeX_byXbothE_group_byXlabelX_byXweight_sumXX();\n \n+    public abstract Traversal<Vertex, Map<String, String>> get_g_V_groupXmX_byXnameX_byXinXknowsX_nameX_capXmX();\n+\n     @Test\n     @LoadGraphWith(MODERN)\n     public void g_V_group_byXnameX() {\n@@ -364,6 +366,7 @@ public void g_V_repeatXunionXoutXknowsX_groupXaX_byXageX__outXcreatedX_groupXbX_\n     @LoadGraphWith(MODERN)\n     public void g_V_group_byXbothE_countX_byXgroup_byXlabelXX() {\n         final Traversal<Vertex, Map<Long, Map<String, List<Vertex>>>> traversal = get_g_V_group_byXbothE_countX_byXgroup_byXlabelXX();\n+        printTraversalForm(traversal);\n         final Map<Long, Map<String, List<Vertex>>> map = traversal.next();\n         assertFalse(traversal.hasNext());\n         assertEquals(2, map.size());\n@@ -399,6 +402,7 @@ public void g_V_group_byXbothE_countX_byXgroup_byXlabelXX() {\n     @LoadGraphWith(GRATEFUL)\n     public void g_V_outXfollowedByX_group_byXsongTypeX_byXbothE_group_byXlabelX_byXweight_sumXX() {\n         final Traversal<Vertex, Map<String, Map<String, Number>>> traversal = get_g_V_outXfollowedByX_group_byXsongTypeX_byXbothE_group_byXlabelX_byXweight_sumXX();\n+        printTraversalForm(traversal);\n         final Map<String, Map<String, Number>> map = traversal.next();\n         assertFalse(traversal.hasNext());\n         assertEquals(3, map.size());\n@@ -423,6 +427,20 @@ public void g_V_outXfollowedByX_group_byXsongTypeX_byXbothE_group_byXlabelX_byXw\n         assertEquals(0, subMap.get(\"sungBy\").intValue());\n     }\n \n+    @Test\n+    @LoadGraphWith(MODERN)\n+    public void g_V_groupXmX_byXnameX_byXinXknowsX_nameX_capXmX() {\n+        final Traversal<Vertex, Map<String, String>> traversal = get_g_V_groupXmX_byXnameX_byXinXknowsX_nameX_capXmX();\n+        printTraversalForm(traversal);\n+        final Map<String, String> map = traversal.next();\n+        assertFalse(traversal.hasNext());\n+        assertEquals(2, map.size());\n+        assertEquals(\"marko\", map.get(\"vadas\"));\n+        assertEquals(\"marko\", map.get(\"josh\"));\n+\n+        checkSideEffects(traversal.asAdmin().getSideEffects(), \"m\", HashMap.class);\n+    }\n+\n     public static class Traversals extends GroupTest {\n \n         @Override\n@@ -514,5 +532,10 @@ public void g_V_outXfollowedByX_group_byXsongTypeX_byXbothE_group_byXlabelX_byXw\n         public Traversal<Vertex, Map<String, Map<String, Number>>> get_g_V_outXfollowedByX_group_byXsongTypeX_byXbothE_group_byXlabelX_byXweight_sumXX() {\n             return g.V().out(\"followedBy\").<String, Map<String, Number>>group().by(\"songType\").by(__.bothE().group().by(T.label).by(__.values(\"weight\").sum()));\n         }\n+\n+        @Override\n+        public Traversal<Vertex, Map<String, String>> get_g_V_groupXmX_byXnameX_byXinXknowsX_nameX_capXmX() {\n+            return g.V().group(\"m\").by(\"name\").by(__.in(\"knows\").values(\"name\")).cap(\"m\");\n+        }\n     }\n }",
                "deletions": 0
            }
        ],
        "patched_files": [
            "DefaultTraversalMetrics.java",
            "GroupStep.java",
            "GroupSideEffectStep.java"
        ],
        "unit_tests": [
            "GroupStepTest.java",
            "GroupSideEffectStepTest.java",
            "GroupTest.java"
        ]
    },
    "tinkerpop_b1b4058": {
        "repo": "tinkerpop",
        "message": "Fixed a NullPointerException in PeerPressureVertexProgram. PageRankVertexProgram had the null pointer check and PeerPressure did not. Added PeerPressureVertexProgramTest to ProcessComputeSuite. Ingeration tested Spark. CTR given the simplicity of the fix.",
        "commit": "https://github.com/apache/tinkerpop/commit/b1b4058180a995fc9f7f465c2ec5ce5948c910dd",
        "parent": "https://github.com/apache/tinkerpop/commit/6ae06da112049c363a152bc1445bf113cf1a90e8",
        "bug_id": "tinkerpop_b1b4058",
        "file": [
            {
                "sha": "2bf0df709f9b840f3cd6e9b808df80efb65248ba",
                "filename": "CHANGELOG.asciidoc",
                "blob_url": "https://github.com/apache/tinkerpop/blob/b1b4058180a995fc9f7f465c2ec5ce5948c910dd/CHANGELOG.asciidoc",
                "raw_url": "https://github.com/apache/tinkerpop/raw/b1b4058180a995fc9f7f465c2ec5ce5948c910dd/CHANGELOG.asciidoc",
                "status": "modified",
                "changes": 1,
                "additions": 1,
                "contents_url": "https://api.github.com/repos/apache/tinkerpop/contents/CHANGELOG.asciidoc?ref=b1b4058180a995fc9f7f465c2ec5ce5948c910dd",
                "patch": "@@ -26,6 +26,7 @@ image::https://raw.githubusercontent.com/apache/incubator-tinkerpop/master/docs/\n TinkerPop 3.1.1 (NOT OFFICIALLY RELEASED YET)\n ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n \n+* Fixed a `NullPointerException` bug in `PeerPressureVertexProgram` that occurred when an adjacency traversal was not provided.\n * Fixed a long standing issue around having to use `reduceByKey()` on input data to Spark. It is no longer required.\n * Added `Spark` static object to allow \"file system\" control of persisted RDDs in Spark.\n * Improved logging control during builds with Maven.",
                "deletions": 0
            },
            {
                "sha": "f2989e08204a3a7ca4425654f4ffc358e8e366f5",
                "filename": "gremlin-core/src/main/java/org/apache/tinkerpop/gremlin/process/computer/clustering/peerpressure/PeerPressureVertexProgram.java",
                "blob_url": "https://github.com/apache/tinkerpop/blob/b1b4058180a995fc9f7f465c2ec5ce5948c910dd/gremlin-core/src/main/java/org/apache/tinkerpop/gremlin/process/computer/clustering/peerpressure/PeerPressureVertexProgram.java",
                "raw_url": "https://github.com/apache/tinkerpop/raw/b1b4058180a995fc9f7f465c2ec5ce5948c910dd/gremlin-core/src/main/java/org/apache/tinkerpop/gremlin/process/computer/clustering/peerpressure/PeerPressureVertexProgram.java",
                "status": "modified",
                "changes": 5,
                "additions": 3,
                "contents_url": "https://api.github.com/repos/apache/tinkerpop/contents/gremlin-core/src/main/java/org/apache/tinkerpop/gremlin/process/computer/clustering/peerpressure/PeerPressureVertexProgram.java?ref=b1b4058180a995fc9f7f465c2ec5ce5948c910dd",
                "patch": "@@ -93,10 +93,11 @@ public void loadState(final Graph graph, final Configuration configuration) {\n     @Override\n     public void storeState(final Configuration configuration) {\n         super.storeState(configuration);\n-        this.configurationTraversal.storeState(configuration);\n         configuration.setProperty(MAX_ITERATIONS, this.maxIterations);\n         configuration.setProperty(DISTRIBUTE_VOTE, this.distributeVote);\n-\n+        if (null != this.configurationTraversal) {\n+            this.configurationTraversal.storeState(configuration);\n+        }\n     }\n \n     @Override",
                "deletions": 2
            },
            {
                "sha": "7187062e168024ce8fd94b9d9886ed9190546bfc",
                "filename": "gremlin-groovy-test/src/main/java/org/apache/tinkerpop/gremlin/process/GroovyProcessComputerSuite.java",
                "blob_url": "https://github.com/apache/tinkerpop/blob/b1b4058180a995fc9f7f465c2ec5ce5948c910dd/gremlin-groovy-test/src/main/java/org/apache/tinkerpop/gremlin/process/GroovyProcessComputerSuite.java",
                "raw_url": "https://github.com/apache/tinkerpop/raw/b1b4058180a995fc9f7f465c2ec5ce5948c910dd/gremlin-groovy-test/src/main/java/org/apache/tinkerpop/gremlin/process/GroovyProcessComputerSuite.java",
                "status": "modified",
                "changes": 5,
                "additions": 4,
                "contents_url": "https://api.github.com/repos/apache/tinkerpop/contents/gremlin-groovy-test/src/main/java/org/apache/tinkerpop/gremlin/process/GroovyProcessComputerSuite.java?ref=b1b4058180a995fc9f7f465c2ec5ce5948c910dd",
                "patch": "@@ -24,7 +24,9 @@\n import org.apache.tinkerpop.gremlin.groovy.util.SugarTestHelper;\n import org.apache.tinkerpop.gremlin.process.computer.GraphComputer;\n import org.apache.tinkerpop.gremlin.process.computer.bulkloading.BulkLoaderVertexProgramTest;\n-import org.apache.tinkerpop.gremlin.process.computer.ranking.PageRankVertexProgramTest;\n+import org.apache.tinkerpop.gremlin.process.computer.clustering.peerpressure.PeerPressureVertexProgram;\n+import org.apache.tinkerpop.gremlin.process.computer.clustering.peerpressure.PeerPressureVertexProgramTest;\n+import org.apache.tinkerpop.gremlin.process.computer.ranking.pagerank.PageRankVertexProgramTest;\n import org.apache.tinkerpop.gremlin.process.traversal.step.branch.GroovyBranchTest;\n import org.apache.tinkerpop.gremlin.process.traversal.step.branch.GroovyChooseTest;\n import org.apache.tinkerpop.gremlin.process.traversal.step.branch.GroovyLocalTest;\n@@ -168,6 +170,7 @@\n \n             // algorithms\n             PageRankVertexProgramTest.class,\n+            PeerPressureVertexProgramTest.class,\n             BulkLoaderVertexProgramTest.class,\n     };\n ",
                "deletions": 1
            },
            {
                "sha": "76919bef3bcb4f64506de1596cc2c42c023f5986",
                "filename": "gremlin-test/src/main/java/org/apache/tinkerpop/gremlin/process/ProcessComputerSuite.java",
                "blob_url": "https://github.com/apache/tinkerpop/blob/b1b4058180a995fc9f7f465c2ec5ce5948c910dd/gremlin-test/src/main/java/org/apache/tinkerpop/gremlin/process/ProcessComputerSuite.java",
                "raw_url": "https://github.com/apache/tinkerpop/raw/b1b4058180a995fc9f7f465c2ec5ce5948c910dd/gremlin-test/src/main/java/org/apache/tinkerpop/gremlin/process/ProcessComputerSuite.java",
                "status": "modified",
                "changes": 4,
                "additions": 3,
                "contents_url": "https://api.github.com/repos/apache/tinkerpop/contents/gremlin-test/src/main/java/org/apache/tinkerpop/gremlin/process/ProcessComputerSuite.java?ref=b1b4058180a995fc9f7f465c2ec5ce5948c910dd",
                "patch": "@@ -22,7 +22,8 @@\n import org.apache.tinkerpop.gremlin.process.computer.GraphComputer;\n import org.apache.tinkerpop.gremlin.process.computer.GraphComputerTest;\n import org.apache.tinkerpop.gremlin.process.computer.bulkloading.BulkLoaderVertexProgramTest;\n-import org.apache.tinkerpop.gremlin.process.computer.ranking.PageRankVertexProgramTest;\n+import org.apache.tinkerpop.gremlin.process.computer.clustering.peerpressure.PeerPressureVertexProgramTest;\n+import org.apache.tinkerpop.gremlin.process.computer.ranking.pagerank.PageRankVertexProgramTest;\n import org.apache.tinkerpop.gremlin.process.traversal.TraversalEngine;\n import org.apache.tinkerpop.gremlin.process.traversal.step.branch.BranchTest;\n import org.apache.tinkerpop.gremlin.process.traversal.step.branch.ChooseTest;\n@@ -172,6 +173,7 @@\n \n             // algorithms\n             PageRankVertexProgramTest.class,\n+            PeerPressureVertexProgramTest.class,\n             BulkLoaderVertexProgramTest.class,\n \n             // strategy",
                "deletions": 1
            },
            {
                "sha": "5d96eafcc4afe65f1055e66aec3c965bd6ee9d21",
                "filename": "gremlin-test/src/main/java/org/apache/tinkerpop/gremlin/process/computer/clustering/peerpressure/PeerPressureVertexProgramTest.java",
                "blob_url": "https://github.com/apache/tinkerpop/blob/b1b4058180a995fc9f7f465c2ec5ce5948c910dd/gremlin-test/src/main/java/org/apache/tinkerpop/gremlin/process/computer/clustering/peerpressure/PeerPressureVertexProgramTest.java",
                "raw_url": "https://github.com/apache/tinkerpop/raw/b1b4058180a995fc9f7f465c2ec5ce5948c910dd/gremlin-test/src/main/java/org/apache/tinkerpop/gremlin/process/computer/clustering/peerpressure/PeerPressureVertexProgramTest.java",
                "status": "added",
                "changes": 63,
                "additions": 63,
                "contents_url": "https://api.github.com/repos/apache/tinkerpop/contents/gremlin-test/src/main/java/org/apache/tinkerpop/gremlin/process/computer/clustering/peerpressure/PeerPressureVertexProgramTest.java?ref=b1b4058180a995fc9f7f465c2ec5ce5948c910dd",
                "patch": "@@ -0,0 +1,63 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.apache.tinkerpop.gremlin.process.computer.clustering.peerpressure;\n+\n+import org.apache.tinkerpop.gremlin.LoadGraphWith;\n+import org.apache.tinkerpop.gremlin.process.AbstractGremlinProcessTest;\n+import org.apache.tinkerpop.gremlin.process.computer.ComputerResult;\n+import org.apache.tinkerpop.gremlin.process.computer.GraphComputer;\n+import org.apache.tinkerpop.gremlin.util.iterator.IteratorUtils;\n+import org.junit.Test;\n+\n+import java.util.HashSet;\n+import java.util.Set;\n+\n+import static org.apache.tinkerpop.gremlin.LoadGraphWith.GraphData.MODERN;\n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertTrue;\n+\n+/**\n+ * @author Marko A. Rodriguez (http://markorodriguez.com)\n+ */\n+public class PeerPressureVertexProgramTest extends AbstractGremlinProcessTest {\n+\n+    @Test\n+    @LoadGraphWith(MODERN)\n+    public void shouldExecutePeerPressure() throws Exception {\n+        if (g.getGraphComputer().get().features().supportsResultGraphPersistCombination(GraphComputer.ResultGraph.NEW, GraphComputer.Persist.VERTEX_PROPERTIES)) {\n+            final ComputerResult result = graph.compute(g.getGraphComputer().get().getClass()).program(PeerPressureVertexProgram.build().create(graph)).submit().get();\n+            final Set<Object> clusters = new HashSet<>();\n+            result.graph().traversal().V().forEachRemaining(v -> {\n+                assertEquals(4, v.keys().size()); // name, age/lang, voteStrength, cluster\n+                assertTrue(v.keys().contains(\"name\"));\n+                assertTrue(v.keys().contains(PeerPressureVertexProgram.VOTE_STRENGTH));\n+                assertTrue(v.keys().contains(PeerPressureVertexProgram.CLUSTER));\n+                assertEquals(1, IteratorUtils.count(v.values(\"name\")));\n+                assertEquals(1, IteratorUtils.count(v.values(PeerPressureVertexProgram.CLUSTER)));\n+                final Object cluster = v.value(PeerPressureVertexProgram.CLUSTER);\n+                clusters.add(cluster);\n+            });\n+            assertEquals(2, clusters.size());\n+            assertEquals(3, result.memory().getIteration());\n+            assertEquals(1, result.memory().asMap().size());\n+            assertTrue(result.memory().keys().contains(\"gremlin.peerPressureVertexProgram.voteToHalt\"));  // this is private in PeerPressureVertexProgram (and that is okay)\n+        }\n+    }\n+}\n\\ No newline at end of file",
                "deletions": 0
            },
            {
                "sha": "1e52fd07119b8237825152cd11cf21611799280c",
                "filename": "gremlin-test/src/main/java/org/apache/tinkerpop/gremlin/process/computer/ranking/pagerank/PageRankVertexProgramTest.java",
                "blob_url": "https://github.com/apache/tinkerpop/blob/b1b4058180a995fc9f7f465c2ec5ce5948c910dd/gremlin-test/src/main/java/org/apache/tinkerpop/gremlin/process/computer/ranking/pagerank/PageRankVertexProgramTest.java",
                "raw_url": "https://github.com/apache/tinkerpop/raw/b1b4058180a995fc9f7f465c2ec5ce5948c910dd/gremlin-test/src/main/java/org/apache/tinkerpop/gremlin/process/computer/ranking/pagerank/PageRankVertexProgramTest.java",
                "status": "renamed",
                "changes": 2,
                "additions": 1,
                "contents_url": "https://api.github.com/repos/apache/tinkerpop/contents/gremlin-test/src/main/java/org/apache/tinkerpop/gremlin/process/computer/ranking/pagerank/PageRankVertexProgramTest.java?ref=b1b4058180a995fc9f7f465c2ec5ce5948c910dd",
                "patch": "@@ -16,7 +16,7 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n-package org.apache.tinkerpop.gremlin.process.computer.ranking;\n+package org.apache.tinkerpop.gremlin.process.computer.ranking.pagerank;\n \n import org.apache.tinkerpop.gremlin.LoadGraphWith;\n import org.apache.tinkerpop.gremlin.process.AbstractGremlinProcessTest;",
                "deletions": 1,
                "previous_filename": "gremlin-test/src/main/java/org/apache/tinkerpop/gremlin/process/computer/ranking/PageRankVertexProgramTest.java"
            }
        ],
        "patched_files": [
            "PeerPressureVertexProgram.java",
            "ProcessComputerSuite.java",
            "GroovyProcessComputerSuite.java",
            "PageRankVertexProgram.java"
        ],
        "unit_tests": [
            "PeerPressureVertexProgramTest.java",
            "PageRankVertexProgramTest.java"
        ]
    },
    "tinkerpop_1088cd9": {
        "repo": "tinkerpop",
        "message": "[TINKERPOP-2274] Fixed the issues revealed while compiling and running tests under Windows\n\n== File system differences\n* Revealed that the Spark context is not closed between the tests, while\n* the tests remove its storage files, therefore explicitluy store Spark Cintext\n* for every test, making the tests independent and (more) corect on Spark use.\n\n* Revealed that Spark does not close the FileInputStreams it iterates upon,\n* so that locks hang up in the file system. Thus, not being able to fix Spark/Hadoop\n* and specifically the use of MultiIterator, call explicitly System.gc() in\n* order to finalize the streams remaining open after closing the context.\n\n* In Windows the file locking is diffrent than in LINUX, so rm() tests failed.\n* See: [https://issues.apache.org/jira/browse/SPARK-12216]\n\n== Documentaton\n* Documented the convention to use UNIX-formatted file paths.\n* Revealed the use and documented the Storage interface.\n\n== File names and conventions\n* Delegated file parsing to File class for platform independence\n* Migrate to use unform UNIX-formatted paths, even under Windows for platform indepenence.\n* Imposing Path / File classes use instead of manually composing\n* Avoiding strings as storage file system paths\n* Resolved inconsistency of Storage (file system) API returning null.\n* Refactored FileSystemStorage to match the use & specification.\n* Fixed possible leaking resources.\n* Fixed inconsistencies in the use of / and home directory.\n* Changed Storage.rm() to report if it succeeded to remove at least a file (in scope).\n* Changed Spark tests close use the non-persistent context, this way closing it when not needed\n\n== Changed tests\n* Fixed EarlyLimitStrategyTest to allow running it\n* Fixed the loger matching tests to ignore platform-specific EOLN char(s)\n* Fixed org.apache.tinkerpop.gremlin.hadoop.process.computer.AbstractHadoopGraphComputerTest\n  * to delete the temorary files first before attempting to create new ones\n  * with the same name. Provided better error diagnostic messages.\n* Renamed org.apache.tinkerpop.gremlin.TestHelper to CoreTestHelper to avoid confusing\n  * it with other TestHelper class.\n* Updated AbstractStorageCheck#AbstractStorageCheck tests to ease their understanding and\n  * help further improvement of error reporting. Fixed the tests of rm(), cp() methods.\n* Fixed\n  * org.apache.tinkerpop.gremlin.spark.SparkGremlinGryoSerializerTest\n  * org.apache.tinkerpop.gremlin.spark.SparkGremlinTest\n  * that used to fail with:\n  * ERROR shouldSupportCopyMethods(org.apache.tinkerpop.gremlin.spark.structure.io.SparkContextStorageCheck)\n  * java.lang.AssertionError\n            at org.apache.tinkerpop.gremlin.spark.structure.io.SparkContextStorageCheck.shouldSupportCopyMethods(SparkContextStorageCheck.java:75)\n    (NOTE: this is an example of \"cryptic\" error message reported on failed tests)\n* Fixed reflection-based test to match their parameters at runtime.\n\n== Dates\n* Used SimpleDateFormat with explicit US locale to parse the test data.\n\n== POM changes\n* Changed POM to dump the whole stack trace in case of test failure.\n* Set POM to check if HADOOP_HOME and HADOOP_GREMLIN_LIBS env. vars are set\n  * and warn if not, in order not to fail the build with NullPointerException.\n* In order to avoid MAVEN warnings, provided explicitly the most-recent\n* version of jacoco in <pluginManagement> and removed <prerequisite>.\n\n* Made the required HADOOP_HOME and HADOOP_GREMLIN_LIBS set up optional to allow Travis build pass,\n  * but this basically negates the use of Maven enforcer at all - in case of\n  * not installed Hadoop the tests will fail with no indication why, instead of\n  * the script to define & test its environment clearly.\n\n== Artifacts\n* Added generation of the tests jar to publish the TestHelper\n  * class, that is used both in core and tests projects, as a preparation to\n  * avoid the collistion of TestHelper classes in both projects\n* Added Readme.md to describe how to install hadoop, spark and OS integration.",
        "commit": "https://github.com/apache/tinkerpop/commit/1088cd9be6ecdcb37bee357a783f01f01bdc366a",
        "parent": "https://github.com/apache/tinkerpop/commit/b9f010fc8a437320a895006b343d884063fb8304",
        "bug_id": "tinkerpop_1088cd9",
        "file": [
            {
                "sha": "310a49a05505baa6387dcee27b92e3ca39bbadff",
                "filename": "gremlin-console/src/test/java/org/apache/tinkerpop/gremlin/console/jsr223/DriverRemoteAcceptorIntegrateTest.java",
                "blob_url": "https://github.com/apache/tinkerpop/blob/1088cd9be6ecdcb37bee357a783f01f01bdc366a/gremlin-console/src/test/java/org/apache/tinkerpop/gremlin/console/jsr223/DriverRemoteAcceptorIntegrateTest.java",
                "raw_url": "https://github.com/apache/tinkerpop/raw/1088cd9be6ecdcb37bee357a783f01f01bdc366a/gremlin-console/src/test/java/org/apache/tinkerpop/gremlin/console/jsr223/DriverRemoteAcceptorIntegrateTest.java",
                "status": "modified",
                "changes": 25,
                "additions": 13,
                "contents_url": "https://api.github.com/repos/apache/tinkerpop/contents/gremlin-console/src/test/java/org/apache/tinkerpop/gremlin/console/jsr223/DriverRemoteAcceptorIntegrateTest.java?ref=1088cd9be6ecdcb37bee357a783f01f01bdc366a",
                "patch": "@@ -23,6 +23,7 @@\n import org.apache.tinkerpop.gremlin.driver.Result;\n import org.apache.tinkerpop.gremlin.jsr223.console.GremlinShellEnvironment;\n import org.apache.tinkerpop.gremlin.server.Settings;\n+import org.apache.tinkerpop.gremlin.structure.io.Storage;\n import org.apache.tinkerpop.gremlin.util.iterator.IteratorUtils;\n import org.codehaus.groovy.tools.shell.Groovysh;\n import org.junit.After;\n@@ -59,7 +60,7 @@\n     @Override\n     public Settings overrideSettings(final Settings settings) {\n         try {\n-            final String tinkerGraphConfig = TestHelper.generateTempFileFromResource(this.getClass(), \"tinkergraph-empty.properties\", \".tmp\").getAbsolutePath();\n+            final String tinkerGraphConfig = Storage.toPath(TestHelper.generateTempFileFromResource(this.getClass(), \"tinkergraph-empty.properties\", \".tmp\"));\n             settings.graphs.put(\"g\", tinkerGraphConfig);\n             return settings;\n         } catch (Exception ex) {\n@@ -84,70 +85,70 @@ public void after() {\n \n     @Test\n     public void shouldConnectWithRemoteYaml() throws Exception {\n-        assertThat(acceptor.connect(Collections.singletonList(TestHelper.generateTempFileFromResource(this.getClass(), \"remote.yaml\", \".tmp\").getAbsolutePath())).toString(), startsWith(\"Configured \"));\n+        assertThat(acceptor.connect(Collections.singletonList(Storage.toPath(TestHelper.generateTempFileFromResource(this.getClass(), \"remote.yaml\", \".tmp\")))).toString(), startsWith(\"Configured \"));\n     }\n \n     @Test\n     public void shouldConnectWithRemoteVariable() throws Exception {\n-        groovysh.getInterp().evaluate(Collections.singletonList(\"cluster = \" + Cluster.class.getName() + \".open(\\\"\" + TestHelper.generateTempFileFromResource(this.getClass(), \"remote.yaml\", \".tmp\").getAbsolutePath() + \"\\\")\"));\n+        groovysh.getInterp().evaluate(Collections.singletonList(\"cluster = \" + Cluster.class.getName() + \".open(\\\"\" + Storage.toPath(TestHelper.generateTempFileFromResource(this.getClass(), \"remote.yaml\", \".tmp\")) + \"\\\")\"));\n         assertThat(acceptor.connect(Collections.singletonList(\"cluster\")).toString(), startsWith(\"Configured \"));\n     }\n \n     @Test\n     public void shouldConnectAndSubmitSession() throws Exception {\n-        assertThat(acceptor.connect(Arrays.asList(TestHelper.generateTempFileFromResource(this.getClass(), \"remote.yaml\", \".tmp\").getAbsolutePath(), \"session\")).toString(), startsWith(\"Configured \"));\n+        assertThat(acceptor.connect(Arrays.asList(Storage.toPath(TestHelper.generateTempFileFromResource(this.getClass(), \"remote.yaml\", \".tmp\")), \"session\")).toString(), startsWith(\"Configured \"));\n         assertEquals(\"1\", ((Iterator) acceptor.submit(Collections.singletonList(\"x = 1\"))).next());\n         assertEquals(\"0\", ((Iterator) acceptor.submit(Collections.singletonList(\"x - 1\"))).next());\n         assertEquals(\"0\", ((List<Result>) groovysh.getInterp().getContext().getProperty(DriverRemoteAcceptor.RESULT)).iterator().next().getString());\n     }\n \n     @Test\n     public void shouldConnectAndSubmitManagedSession() throws Exception {\n-        assertThat(acceptor.connect(Arrays.asList(TestHelper.generateTempFileFromResource(this.getClass(), \"remote.yaml\", \".tmp\").getAbsolutePath(), \"session-managed\")).toString(), startsWith(\"Configured \"));\n+        assertThat(acceptor.connect(Arrays.asList(Storage.toPath(TestHelper.generateTempFileFromResource(this.getClass(), \"remote.yaml\", \".tmp\")), \"session-managed\")).toString(), startsWith(\"Configured \"));\n         assertEquals(\"1\", ((Iterator) acceptor.submit(Collections.singletonList(\"x = 1\"))).next());\n         assertEquals(\"0\", ((Iterator) acceptor.submit(Collections.singletonList(\"x - 1\"))).next());\n         assertEquals(\"0\", ((List<Result>) groovysh.getInterp().getContext().getProperty(DriverRemoteAcceptor.RESULT)).iterator().next().getString());\n     }\n \n     @Test\n     public void shouldConnectAndSubmitSimple() throws Exception {\n-        assertThat(acceptor.connect(Collections.singletonList(TestHelper.generateTempFileFromResource(this.getClass(), \"remote.yaml\", \".tmp\").getAbsolutePath())).toString(), startsWith(\"Configured \"));\n+        assertThat(acceptor.connect(Collections.singletonList(Storage.toPath(TestHelper.generateTempFileFromResource(this.getClass(), \"remote.yaml\", \".tmp\")))).toString(), startsWith(\"Configured \"));\n         assertEquals(\"2\", ((Iterator) acceptor.submit(Collections.singletonList(\"1+1\"))).next());\n         assertEquals(\"2\", ((List<Result>) groovysh.getInterp().getContext().getProperty(DriverRemoteAcceptor.RESULT)).iterator().next().getString());\n     }\n \n     @Test\n     public void shouldConnectAndSubmitSimpleList() throws Exception {\n-        assertThat(acceptor.connect(Collections.singletonList(TestHelper.generateTempFileFromResource(this.getClass(), \"remote.yaml\", \".tmp\").getAbsolutePath())).toString(), startsWith(\"Configured \"));\n+        assertThat(acceptor.connect(Collections.singletonList(Storage.toPath(TestHelper.generateTempFileFromResource(this.getClass(), \"remote.yaml\", \".tmp\")))).toString(), startsWith(\"Configured \"));\n         assertThat(IteratorUtils.list(((Iterator<String>) acceptor.submit(Collections.singletonList(\"[1,2,3,4,5]\")))), contains(\"1\", \"2\", \"3\", \"4\", \"5\"));\n         assertThat(((List<Result>) groovysh.getInterp().getContext().getProperty(DriverRemoteAcceptor.RESULT)).stream().map(Result::getString).collect(Collectors.toList()), contains(\"1\", \"2\", \"3\", \"4\", \"5\"));\n     }\n \n     @Test\n     public void shouldConnectAndReturnVertices() throws Exception {\n-        assertThat(acceptor.connect(Collections.singletonList(TestHelper.generateTempFileFromResource(this.getClass(), \"remote.yaml\", \".tmp\").getAbsolutePath())).toString(), startsWith(\"Configured \"));\n+        assertThat(acceptor.connect(Collections.singletonList(Storage.toPath(TestHelper.generateTempFileFromResource(this.getClass(), \"remote.yaml\", \".tmp\")))).toString(), startsWith(\"Configured \"));\n         assertThat(IteratorUtils.list(((Iterator<String>) acceptor.submit(Collections.singletonList(\"g.addVertex('name','stephen');g.addVertex('name','marko');g.traversal().V()\")))), hasSize(2));\n         assertThat(((List<Result>) groovysh.getInterp().getContext().getProperty(DriverRemoteAcceptor.RESULT)).stream().map(Result::getString).collect(Collectors.toList()), hasSize(2));\n     }\n \n     @Test\n     public void shouldConnectAndReturnVerticesWithAnAlias() throws Exception {\n-        assertThat(acceptor.connect(Collections.singletonList(TestHelper.generateTempFileFromResource(this.getClass(), \"remote.yaml\", \".tmp\").getAbsolutePath())).toString(), startsWith(\"Configured \"));\n+        assertThat(acceptor.connect(Collections.singletonList(Storage.toPath(TestHelper.generateTempFileFromResource(this.getClass(), \"remote.yaml\", \".tmp\")))).toString(), startsWith(\"Configured \"));\n         acceptor.configure(Arrays.asList(\"alias\", \"x\", \"g\"));\n         assertThat(IteratorUtils.list(((Iterator<String>) acceptor.submit(Collections.singletonList(\"x.addVertex('name','stephen');x.addVertex('name','marko');x.traversal().V()\")))), hasSize(2));\n         assertThat(((List<Result>) groovysh.getInterp().getContext().getProperty(DriverRemoteAcceptor.RESULT)).stream().map(Result::getString).collect(Collectors.toList()), hasSize(2));\n     }\n \n     @Test\n     public void shouldConnectAndSubmitForNull() throws Exception {\n-        assertThat(acceptor.connect(Collections.singletonList(TestHelper.generateTempFileFromResource(this.getClass(), \"remote.yaml\", \".tmp\").getAbsolutePath())).toString(), startsWith(\"Configured \"));\n+        assertThat(acceptor.connect(Collections.singletonList(Storage.toPath(TestHelper.generateTempFileFromResource(this.getClass(), \"remote.yaml\", \".tmp\")))).toString(), startsWith(\"Configured \"));\n         assertThat(IteratorUtils.list(((Iterator<String>) acceptor.submit(Collections.singletonList(\"g.traversal().V().drop().iterate();null\")))), contains(\"null\"));\n         assertThat(((List<Result>) groovysh.getInterp().getContext().getProperty(DriverRemoteAcceptor.RESULT)).stream().map(Result::getObject).collect(Collectors.toList()), contains(\"null\"));\n     }\n \n     @Test\n     public void shouldConnectAndSubmitInSession() throws Exception {\n-        assertThat(acceptor.connect(Arrays.asList(TestHelper.generateTempFileFromResource(this.getClass(), \"remote.yaml\", \".tmp\").getAbsolutePath(), \"session\")).toString(), startsWith(\"Configured \"));\n+        assertThat(acceptor.connect(Arrays.asList(Storage.toPath(TestHelper.generateTempFileFromResource(this.getClass(), \"remote.yaml\", \".tmp\")), \"session\")).toString(), startsWith(\"Configured \"));\n         assertEquals(\"2\", ((Iterator) acceptor.submit(Collections.singletonList(\"x=1+1\"))).next());\n         assertEquals(\"2\", ((List<Result>) groovysh.getInterp().getContext().getProperty(DriverRemoteAcceptor.RESULT)).iterator().next().getString());\n         assertEquals(\"4\", ((Iterator) acceptor.submit(Collections.singletonList(\"x+2\"))).next());\n@@ -156,7 +157,7 @@ public void shouldConnectAndSubmitInSession() throws Exception {\n \n     @Test\n     public void shouldConnectAndSubmitInNamedSession() throws Exception {\n-        assertThat(acceptor.connect(Arrays.asList(TestHelper.generateTempFileFromResource(this.getClass(), \"remote.yaml\", \".tmp\").getAbsolutePath(), \"session\", \"AAA\")).toString(), startsWith(\"Configured \"));\n+        assertThat(acceptor.connect(Arrays.asList(Storage.toPath(TestHelper.generateTempFileFromResource(this.getClass(), \"remote.yaml\", \".tmp\")), \"session\", \"AAA\")).toString(), startsWith(\"Configured \"));\n         assertEquals(\"2\", ((Iterator) acceptor.submit(Collections.singletonList(\"x=1+1\"))).next());\n         assertEquals(\"2\", ((List<Result>) groovysh.getInterp().getContext().getProperty(DriverRemoteAcceptor.RESULT)).iterator().next().getString());\n         assertEquals(\"4\", ((Iterator) acceptor.submit(Collections.singletonList(\"x+2\"))).next());",
                "deletions": 12
            },
            {
                "sha": "ab11d2e6f6e03ae56a65f1688af2beb491d0a1fd",
                "filename": "gremlin-console/src/test/java/org/apache/tinkerpop/gremlin/console/jsr223/DriverRemoteAcceptorTest.java",
                "blob_url": "https://github.com/apache/tinkerpop/blob/1088cd9be6ecdcb37bee357a783f01f01bdc366a/gremlin-console/src/test/java/org/apache/tinkerpop/gremlin/console/jsr223/DriverRemoteAcceptorTest.java",
                "raw_url": "https://github.com/apache/tinkerpop/raw/1088cd9be6ecdcb37bee357a783f01f01bdc366a/gremlin-console/src/test/java/org/apache/tinkerpop/gremlin/console/jsr223/DriverRemoteAcceptorTest.java",
                "status": "modified",
                "changes": 4,
                "additions": 3,
                "contents_url": "https://api.github.com/repos/apache/tinkerpop/contents/gremlin-console/src/test/java/org/apache/tinkerpop/gremlin/console/jsr223/DriverRemoteAcceptorTest.java?ref=1088cd9be6ecdcb37bee357a783f01f01bdc366a",
                "patch": "@@ -20,6 +20,7 @@\n \n import org.apache.tinkerpop.gremlin.TestHelper;\n import org.apache.tinkerpop.gremlin.jsr223.console.RemoteException;\n+import org.apache.tinkerpop.gremlin.structure.io.Storage;\n import org.codehaus.groovy.tools.shell.Groovysh;\n import org.junit.After;\n import org.junit.Before;\n@@ -129,6 +130,7 @@ public void shouldConfigureTimeoutNotLessThanNoTimeout() throws Exception {\n     public void shouldConnect() throws Exception {\n         // there is no gremlin server running for this test, but gremlin-driver lazily connects so this should\n         // be ok to just validate that a connection is created\n-        assertThat(acceptor.connect(Arrays.asList(TestHelper.generateTempFileFromResource(this.getClass(), \"remote.yaml\", \".tmp\").getAbsolutePath())).toString(), startsWith(\"Configured \"));\n+        assertThat(acceptor.connect(Arrays.asList(Storage.toPath(TestHelper.generateTempFileFromResource(this.getClass(), \"remote.yaml\", \".tmp\")))).toString(),\n+                   startsWith(\"Configured \"));\n     }\n }",
                "deletions": 1
            },
            {
                "sha": "3fed6633f0450ab2f0936c4428a7a18eb1bcd597",
                "filename": "gremlin-core/pom.xml",
                "blob_url": "https://github.com/apache/tinkerpop/blob/1088cd9be6ecdcb37bee357a783f01f01bdc366a/gremlin-core/pom.xml",
                "raw_url": "https://github.com/apache/tinkerpop/raw/1088cd9be6ecdcb37bee357a783f01f01bdc366a/gremlin-core/pom.xml",
                "status": "modified",
                "changes": 17,
                "additions": 17,
                "contents_url": "https://api.github.com/repos/apache/tinkerpop/contents/gremlin-core/pom.xml?ref=1088cd9be6ecdcb37bee357a783f01f01bdc366a",
                "patch": "@@ -146,6 +146,23 @@ limitations under the License.\n                     </compilerArgs>\n                 </configuration>\n             </plugin>\n+            <plugin>\n+                <groupId>org.apache.maven.plugins</groupId>\n+                <artifactId>maven-jar-plugin</artifactId>\n+                <executions>\n+                  <execution>\n+                    <id>package-test-lib</id>\n+                    <goals>\n+                      <goal>test-jar</goal>\n+                    </goals>\n+                    <configuration>\n+                      <includes>\n+                        <include>**/*TestHelper*</include>\n+                      </includes>\n+                    </configuration>\n+                  </execution>\n+                </executions>\n+            </plugin>\n         </plugins>\n     </build>\n </project>",
                "deletions": 0
            },
            {
                "sha": "79f8338cf466ddf209969cc7be65c927c8e4ccd2",
                "filename": "gremlin-core/src/main/java/org/apache/tinkerpop/gremlin/structure/io/Storage.java",
                "blob_url": "https://github.com/apache/tinkerpop/blob/1088cd9be6ecdcb37bee357a783f01f01bdc366a/gremlin-core/src/main/java/org/apache/tinkerpop/gremlin/structure/io/Storage.java",
                "raw_url": "https://github.com/apache/tinkerpop/raw/1088cd9be6ecdcb37bee357a783f01f01bdc366a/gremlin-core/src/main/java/org/apache/tinkerpop/gremlin/structure/io/Storage.java",
                "status": "modified",
                "changes": 105,
                "additions": 85,
                "contents_url": "https://api.github.com/repos/apache/tinkerpop/contents/gremlin-core/src/main/java/org/apache/tinkerpop/gremlin/structure/io/Storage.java?ref=1088cd9be6ecdcb37bee357a783f01f01bdc366a",
                "patch": "@@ -19,59 +19,107 @@\n \n package org.apache.tinkerpop.gremlin.structure.io;\n \n-import org.apache.tinkerpop.gremlin.process.computer.KeyValue;\n-import org.apache.tinkerpop.gremlin.structure.Vertex;\n-\n+import java.io.File;\n import java.util.Iterator;\n import java.util.List;\n \n+import org.apache.tinkerpop.gremlin.process.computer.KeyValue;\n+import org.apache.tinkerpop.gremlin.structure.Vertex;\n+\n /**\n- * Storage is a standard API that providers can implement to allow \"file-system\"-based access to data sources.\n+ * Storage is a standard API that providers can implement to allow abstract UNIX-like file system for data sources.\n  * The methods provided by Storage are similar in form and behavior to standard Linux operating system commands.\n- *\n+ *<ul>\n+ * <li>A <b>name pattern</b> (file or directory) is a sequence of characters, not containing \"/\", leading spaces, trailing spaces. </li>\n+ * <li>A <b>name</b> (file or directory name) is a name pattern, not containing \"*\" or \"?\".</li>\n+ * <li>A <b>pattern</b> is a sequence of names separated with \"/\", optionally ending at a name pattern.\n+ * <pre>\n+ *   &lt;pattern&gt; ::= &lt;absolute pattern&gt; |\n+ *                 &lt;relative pattern&gt;\n+ *   &lt;absolute path&gt; ::= / [&lt;relative pattern&gt;]\n+ *   &lt;relative path&gt; ::= &lt;name&gt; {/ &lt;name&gt;} [/ &lt;name pattern&gt;] [/] |\n+ *                       &lt;name pattern&gt; [/]\n+ * </pre></li>\n+ * <li>A <b>path</b> is a path is a pattern, not containing any name pattern. </li>\n+ * </ul>\n+ * NOTE: <ol>\n+ * <li>Even though the syntax allows patterns with trailing \"/\", they are treated as referring the same\n+ *    file or directory as the path without the trailing /\n+ * <li>This is an abstract file system abstracting the underlying physical file system if any. Thus, under Windows the\n+ *     directories separator is still /, no matter that Windows uses \\\n+ * </ol>\n  * @author Marko A. Rodriguez (http://markorodriguez.com)\n  */\n public interface Storage {\n \n+    String FILE_SEPARATOR = \"/\";\n+\n+    String ROOT_DIRECTORY = FILE_SEPARATOR;\n+\n     /**\n      * List all the data sources in the root directory.\n      *\n-     * @return the data sources in the root directory\n+     * @return non-null list of files (data sources) and directories in the root directory (/)\n+     * @see #ls(String)\n      */\n     public List<String> ls();\n \n     /**\n-     * List all the data sources at the specified location.\n+     * List all the files (e.g. data sources) and directories matching the location pattern.\n      *\n-     * @param location a location\n-     * @return the data sources at the specified location\n+     * @param pattern non-null pattern specifying a set of files and directories. Cases:<ul>\n+     *    <li>a path to a file - specifies a single file to list\n+     *    <li>a path to a directory - specifies all files and directories immediately nested in that directory to list\n+     *    <li>pattern - specifies a set of files and directories to list\n+     *    <li>/ - specifies the root directory to list its contents\n+     *  </ul>\n+     * @return non-null list of files (data sources) and directories matching the pattern.\n      */\n-    public List<String> ls(final String location);\n+    public List<String> ls(final String pattern);\n \n     /**\n      * Recursively copy all the data sources from the source location to the target location.\n      *\n-     * @param sourceLocation the source location\n-     * @param targetLocation the target location\n+     * @param sourcePattern non-null pattern specifying a set of files and directories. Cases:<ul>\n+     *    <li>a path to a file - specifies a single file\n+     *    <li>a path to a directory - specifies all files and directories nested (recursively) in that directory\n+     *    <li>pattern - specifies a set of files and directories\n+     *    <li>/ - specifies the contents of the root directory (recursively)\n+     *  </ul>\n+     * @param targetDirectory non-null directory where to copy to\n      * @return whether data sources were copied\n      */\n-    public boolean cp(final String sourceLocation, final String targetLocation);\n+    public boolean cp(final String sourcePattern, final String targetDirectory);\n \n     /**\n      * Determine whether the specified location has a data source.\n      *\n-     * @param location a location to check\n-     * @return whether that location has a data source.\n+     * @param pattern non-null pattern specifying a set of files and directories. Examples:<ul>\n+     *    <li>a path to a file - specifies a single file\n+     *    <li>a path to a directory - specifies the contents of that directory as all files and directories immediately nested in it\n+     *    <li>pattern - specifies a set of files and directories\n+     *    <li>/ - specifies the immediate contents of the root directory\n+     *  </ul>\n+     *\n+     * @return true if the pattern specifies a non-empty set of files and directories\n      */\n-    public boolean exists(final String location);\n+    public boolean exists(final String pattern);\n \n     /**\n-     * Recursively remove the data source at the specified location.\n+     * Recursively remove the file (data source) at the specified location.\n      *\n-     * @param location the location of the data source\n-     * @return whether a data source was removed.\n+     * NOTE: Some implementations derive the notion of the containing directory from the presence of the file,\n+     *       so removing all files from a directory in those implementations removes also their directory.\n+     *\n+     * @param pattern non-null pattern specifying a set of files and directories. Examples:<ul>\n+     *    <li>a path to a file - specifies a single file\n+     *    <li>a path to a directory - specifies <b>that directory and</b> all files and directories recursively nested in it\n+     *    <li>pattern - specifies a set of files and directories\n+     *    <li>/ - specifies the root directory\n+     *  </ul>\n+     * @return true if all specified files and directories were removed\n      */\n-    public boolean rm(final String location);\n+    public boolean rm(final String pattern);\n \n     /**\n      * Get a string representation of the specified number of lines at the data source location.\n@@ -136,4 +184,21 @@\n     public default <K, V> Iterator<KeyValue<K, V>> head(final String location, final String memoryKey, final Class readerClass) {\n         return this.head(location, memoryKey, readerClass, Integer.MAX_VALUE);\n     }\n+\n+\n+    /**\n+     * @param path non-null local file path\n+     * @return non-null, not empty path in the {@link Storage} file system.\n+     */\n+    public static String toPath(final File path) {\n+        return toPath(path.getAbsolutePath());\n+    }\n+\n+    /**\n+     * @param path non-null local file path\n+     * @return non-null, not empty path in the {@link Storage} file system.\n+     */\n+    public static String toPath(final String path) {\n+        return path.replace(\"\\\\\", FILE_SEPARATOR);\n+    }\n }",
                "deletions": 20
            },
            {
                "sha": "54829ce9c60118b65625e0d4bde3277634c66b3a",
                "filename": "gremlin-core/src/test/java/org/apache/tinkerpop/gremlin/CoreTestHelper.java",
                "blob_url": "https://github.com/apache/tinkerpop/blob/1088cd9be6ecdcb37bee357a783f01f01bdc366a/gremlin-core/src/test/java/org/apache/tinkerpop/gremlin/CoreTestHelper.java",
                "raw_url": "https://github.com/apache/tinkerpop/raw/1088cd9be6ecdcb37bee357a783f01f01bdc366a/gremlin-core/src/test/java/org/apache/tinkerpop/gremlin/CoreTestHelper.java",
                "status": "renamed",
                "changes": 102,
                "additions": 71,
                "contents_url": "https://api.github.com/repos/apache/tinkerpop/contents/gremlin-core/src/test/java/org/apache/tinkerpop/gremlin/CoreTestHelper.java?ref=1088cd9be6ecdcb37bee357a783f01f01bdc366a",
                "patch": "@@ -18,6 +18,8 @@\n  */\n package org.apache.tinkerpop.gremlin;\n \n+import static org.junit.Assert.assertTrue;\n+\n import java.io.File;\n import java.io.FileOutputStream;\n import java.io.IOException;\n@@ -29,72 +31,117 @@\n import java.util.stream.Collectors;\n import java.util.stream.Stream;\n \n-import static org.junit.Assert.assertTrue;\n+import org.apache.tinkerpop.gremlin.structure.io.Storage;\n \n /**\n  * @author Stephen Mallette (http://stephen.genoprime.com)\n  */\n-public final class TestHelper {\n+public class CoreTestHelper {\n \n-    private static final String SEP = File.separator;\n     public static final String TEST_DATA_RELATIVE_DIR = \"test-case-data\";\n \n-    private TestHelper() {}\n+    protected CoreTestHelper() {}\n \n     public static void assertIsUtilityClass(final Class<?> utilityClass) throws Exception {\n         final Constructor constructor = utilityClass.getDeclaredConstructor();\n+\n         assertTrue(Modifier.isFinal(utilityClass.getModifiers()));\n         assertTrue(Modifier.isPrivate(constructor.getModifiers()));\n         constructor.setAccessible(true);\n         constructor.newInstance();\n     }\n \n     /**\n-     * See {@code TestHelper} in gremlin-test for the official version.\n+     * Creates a {@link File} reference that points to a directory relative to the supplied class in the\n+     * {@code /target} directory. Each {@code childPath} passed introduces a new sub-directory and all are placed\n+     * below the {@link #TEST_DATA_RELATIVE_DIR}.  For example, calling this method with \"a\", \"b\", and \"c\" as the\n+     * {@code childPath} arguments would yield a relative directory like: {@code test-case-data/clazz/a/b/c}. It is\n+     * a good idea to use the test class for the {@code clazz} argument so that it's easy to find the data if\n+     * necessary after test execution.\n+     *\n+     * Avoid using makeTestDataPath(...).getAbsolutePath() and makeTestDataPath(...).toString() that produces\n+     * platform-dependent paths, that are incompatible with regular expressions and escape characters.\n+     * Instead use {@link Storage#toPath(File)}\n      */\n     public static File makeTestDataPath(final Class clazz, final String... childPath) {\n         final File root = getRootOfBuildDirectory(clazz);\n-        final List<String> cleanedPaths = Stream.of(childPath).map(TestHelper::cleanPathSegment).collect(Collectors.toList());\n+        final List<String> cleanedPaths = Stream.of(childPath).map(CoreTestHelper::cleanPathSegment).collect(Collectors.toList());\n \n         // use the class name in the directory structure\n         cleanedPaths.add(0, cleanPathSegment(clazz.getSimpleName()));\n \n-        final File f = new File(root, TEST_DATA_RELATIVE_DIR + SEP + String.join(SEP, cleanedPaths));\n+        final File f = new File(new File(root, TEST_DATA_RELATIVE_DIR), String.join(Storage.FILE_SEPARATOR, cleanedPaths));\n         if (!f.exists()) f.mkdirs();\n         return f;\n     }\n \n     /**\n-     * See {@code TestHelper} in gremlin-test for the official version.\n+     * Creates a {@link File} reference that .  For example, calling this method with \"a\", \"b\", and \"c\" as the\n+     * {@code childPath} arguments would yield a relative directory like: {@code test-case-data/clazz/a/b/c}. It is\n+     * a good idea to use the test class for the {@code clazz} argument so that it's easy to find the data if\n+     * necessary after test execution.\n+     *\n+     * @return UNIX-formatted path to a directory in the underlying {@link Storage}. The directory is relative to the\n+     * supplied class in the {@code /target} directory. Each {@code childPath} passed introduces a new sub-directory\n+     * and all are placed below the {@link #TEST_DATA_RELATIVE_DIR}\n      */\n     public static String makeTestDataDirectory(final Class clazz, final String... childPath) {\n-        return makeTestDataPath(clazz, childPath).getAbsolutePath() + SEP;\n+        return Storage.toPath(makeTestDataPath(clazz, childPath));\n+    }\n+\n+    /**\n+     * @param clazz\n+     * @param fileName\n+     * @return UNIX-formatted path to a fileName in the underlying {@link Storage}. The file is relative to the\n+     * supplied class in the {@code /target} directory.\n+     */\n+    public static String makeTestDataFile(final Class clazz, final String fileName) {\n+      return Storage.toPath(new File(makeTestDataPath(clazz), fileName));\n     }\n \n     /**\n-     * See {@code TestHelper} in gremlin-test for the official version.\n+     * @param clazz\n+     * @param subdir\n+     * @param fileName\n+     * @return UNIX-formatted path to a subdir/fileName in the underlying {@link Storage}. The file is relative to the\n+     * supplied class in the {@code /target} directory.\n+     */\n+    public static String makeTestDataFile(final Class clazz, final String subdir, final String fileName) {\n+      return Storage.toPath(new File(makeTestDataPath(clazz, subdir), fileName));\n+    }\n+\n+\n+    /**\n+     * Gets and/or creates the root of the test data directory.  This  method is here as a convenience and should not\n+     * be used to store test data.  Use {@link #makeTestDataPath(Class, String...)} instead.\n      */\n     public static File getRootOfBuildDirectory(final Class clazz) {\n+        final File root;\n+\n         // build.dir gets sets during runs of tests with maven via the surefire configuration in the pom.xml\n         // if that is not set as an environment variable, then the path is computed based on the location of the\n         // requested class.  the computed version at least as far as intellij is concerned comes drops it into\n         // /target/test-classes.  the build.dir had to be added because maven doesn't seem to like a computed path\n         // as it likes to find that path in the .m2 directory and other weird places......\n         final String buildDirectory = System.getProperty(\"build.dir\");\n-        final File root = null == buildDirectory ? new File(computePath(clazz)).getParentFile() : new File(buildDirectory);\n+\n+        if ( null == buildDirectory ) {\n+            final String clsUri = clazz.getName().replace(\".\", Storage.FILE_SEPARATOR) + \".class\";\n+            final URL url = clazz.getClassLoader().getResource(clsUri);\n+            final String clsPath = url.getPath();\n+            final String computePath = clsPath.substring(0, clsPath.length() - clsUri.length());\n+\n+            root = new File(computePath).getParentFile();\n+        } else {\n+            root = new File(buildDirectory);\n+        }\n         if (!root.exists()) root.mkdirs();\n         return root;\n     }\n \n-    private static String computePath(final Class clazz) {\n-        final String clsUri = clazz.getName().replace('.', SEP.charAt(0)) + \".class\";\n-        final URL url = clazz.getClassLoader().getResource(clsUri);\n-        final String clsPath = url.getPath();\n-        return clsPath.substring(0, clsPath.length() - clsUri.length());\n-    }\n-\n     /**\n-     * See {@code TestHelper} in gremlin-test for the official version.\n+     * Creates a {@link File} reference in the path returned from {@link TestHelper#makeTestDataPath} in a subdirectory\n+     * called {@code temp}.\n      */\n     public static File generateTempFile(final Class clazz, final String fileName, final String fileNameSuffix) throws IOException {\n         final File path = makeTestDataPath(clazz, \"temp\");\n@@ -103,18 +150,19 @@ public static File generateTempFile(final Class clazz, final String fileName, fi\n     }\n \n     /**\n-     * See {@code TestHelper} in gremlin-test for the official version.\n+     * Copies a file stored as part of a resource to the file system in the path returned from\n+     * {@link TestHelper#makeTestDataPath} in a subdirectory called {@code temp/resources}.\n      */\n     public static File generateTempFileFromResource(final Class resourceClass, final String resourceName, final String extension) throws IOException {\n         return generateTempFileFromResource(resourceClass, resourceClass, resourceName, extension);\n     }\n \n     /**\n-     * See {@code TestHelper} in gremlin-test for the official version.\n+     * Copies a file stored as part of a resource to the file system in the path returned from\n+     * {@link TestHelper#makeTestDataPath} in a subdirectory called {@code temp/resources}.\n      */\n     public static File generateTempFileFromResource(final Class graphClass, final Class resourceClass, final String resourceName, final String extension) throws IOException {\n         final File temp = makeTestDataPath(graphClass, \"resources\");\n-        if (!temp.exists()) temp.mkdirs();\n         final File tempFile = new File(temp, resourceName + extension);\n         final FileOutputStream outputStream = new FileOutputStream(tempFile);\n         int data;\n@@ -128,15 +176,7 @@ public static File generateTempFileFromResource(final Class graphClass, final Cl\n     }\n \n     /**\n-     * See {@code TestHelper} in gremlin-test for the official version.\n-     */\n-    public static String convertPackageToResourcePath(final Class clazz) {\n-        final String packageName = clazz.getPackage().getName();\n-        return String.format(\"/%s/\", packageName.replaceAll(\"\\\\.\", \"\\\\/\"));\n-    }\n-\n-    /**\n-     * See {@code TestHelper} in gremlin-test for the official version.\n+     * Removes characters that aren't acceptable in a file path (mostly for windows).\n      */\n     public static String cleanPathSegment(final String toClean) {\n         final String cleaned = toClean.replaceAll(\"[.\\\\\\\\/:*?\\\"<>|\\\\[\\\\]\\\\(\\\\)]\", \"\");",
                "deletions": 31,
                "previous_filename": "gremlin-core/src/test/java/org/apache/tinkerpop/gremlin/TestHelper.java"
            },
            {
                "sha": "9efd4f24b3ddeee76ee84d0120ff640f0e55479b",
                "filename": "gremlin-core/src/test/java/org/apache/tinkerpop/gremlin/jsr223/DefaultScriptCustomizerTest.java",
                "blob_url": "https://github.com/apache/tinkerpop/blob/1088cd9be6ecdcb37bee357a783f01f01bdc366a/gremlin-core/src/test/java/org/apache/tinkerpop/gremlin/jsr223/DefaultScriptCustomizerTest.java",
                "raw_url": "https://github.com/apache/tinkerpop/raw/1088cd9be6ecdcb37bee357a783f01f01bdc366a/gremlin-core/src/test/java/org/apache/tinkerpop/gremlin/jsr223/DefaultScriptCustomizerTest.java",
                "status": "modified",
                "changes": 6,
                "additions": 3,
                "contents_url": "https://api.github.com/repos/apache/tinkerpop/contents/gremlin-core/src/test/java/org/apache/tinkerpop/gremlin/jsr223/DefaultScriptCustomizerTest.java?ref=1088cd9be6ecdcb37bee357a783f01f01bdc366a",
                "patch": "@@ -18,7 +18,7 @@\n  */\n package org.apache.tinkerpop.gremlin.jsr223;\n \n-import org.apache.tinkerpop.gremlin.TestHelper;\n+import org.apache.tinkerpop.gremlin.CoreTestHelper;\n import org.junit.Test;\n \n import java.io.File;\n@@ -36,8 +36,8 @@\n \n     @Test\n     public void shouldOpenViaPropertiesFileConfig() throws IOException {\n-        final File scriptFile1 = TestHelper.generateTempFileFromResource(DefaultScriptCustomizerTest.class, \"script-customizer-1.groovy\", \".groovy\");\n-        final File scriptFile2 = TestHelper.generateTempFileFromResource(DefaultScriptCustomizerTest.class, \"script-customizer-2.groovy\", \".groovy\");\n+        final File scriptFile1 = CoreTestHelper.generateTempFileFromResource(DefaultScriptCustomizerTest.class, \"script-customizer-1.groovy\", \".groovy\");\n+        final File scriptFile2 = CoreTestHelper.generateTempFileFromResource(DefaultScriptCustomizerTest.class, \"script-customizer-2.groovy\", \".groovy\");\n         final List<File> files = new ArrayList<>();\n         files.add(scriptFile1);\n         files.add(scriptFile2);",
                "deletions": 3
            },
            {
                "sha": "37d50caec4be21ae1f4cfcac3b0b4296313c006f",
                "filename": "gremlin-core/src/test/java/org/apache/tinkerpop/gremlin/jsr223/ScriptEngineCacheTest.java",
                "blob_url": "https://github.com/apache/tinkerpop/blob/1088cd9be6ecdcb37bee357a783f01f01bdc366a/gremlin-core/src/test/java/org/apache/tinkerpop/gremlin/jsr223/ScriptEngineCacheTest.java",
                "raw_url": "https://github.com/apache/tinkerpop/raw/1088cd9be6ecdcb37bee357a783f01f01bdc366a/gremlin-core/src/test/java/org/apache/tinkerpop/gremlin/jsr223/ScriptEngineCacheTest.java",
                "status": "modified",
                "changes": 4,
                "additions": 2,
                "contents_url": "https://api.github.com/repos/apache/tinkerpop/contents/gremlin-core/src/test/java/org/apache/tinkerpop/gremlin/jsr223/ScriptEngineCacheTest.java?ref=1088cd9be6ecdcb37bee357a783f01f01bdc366a",
                "patch": "@@ -18,7 +18,7 @@\n  */\n package org.apache.tinkerpop.gremlin.jsr223;\n \n-import org.apache.tinkerpop.gremlin.TestHelper;\n+import org.apache.tinkerpop.gremlin.CoreTestHelper;\n import org.junit.Test;\n \n import static org.junit.Assert.assertSame;\n@@ -30,7 +30,7 @@\n \n     @Test\n     public void shouldBeUtilityClass() throws Exception {\n-        TestHelper.assertIsUtilityClass(ScriptEngineCache.class);\n+        CoreTestHelper.assertIsUtilityClass(ScriptEngineCache.class);\n     }\n \n     @Test",
                "deletions": 2
            },
            {
                "sha": "f4c61fb5e25e2519b90db1d19103034057d06b18",
                "filename": "gremlin-core/src/test/java/org/apache/tinkerpop/gremlin/jsr223/ScriptFileGremlinPluginTest.java",
                "blob_url": "https://github.com/apache/tinkerpop/blob/1088cd9be6ecdcb37bee357a783f01f01bdc366a/gremlin-core/src/test/java/org/apache/tinkerpop/gremlin/jsr223/ScriptFileGremlinPluginTest.java",
                "raw_url": "https://github.com/apache/tinkerpop/raw/1088cd9be6ecdcb37bee357a783f01f01bdc366a/gremlin-core/src/test/java/org/apache/tinkerpop/gremlin/jsr223/ScriptFileGremlinPluginTest.java",
                "status": "modified",
                "changes": 11,
                "additions": 6,
                "contents_url": "https://api.github.com/repos/apache/tinkerpop/contents/gremlin-core/src/test/java/org/apache/tinkerpop/gremlin/jsr223/ScriptFileGremlinPluginTest.java?ref=1088cd9be6ecdcb37bee357a783f01f01bdc366a",
                "patch": "@@ -18,7 +18,8 @@\n  */\n package org.apache.tinkerpop.gremlin.jsr223;\n \n-import org.apache.tinkerpop.gremlin.TestHelper;\n+import org.apache.tinkerpop.gremlin.CoreTestHelper;\n+import org.apache.tinkerpop.gremlin.structure.io.Storage;\n import org.junit.Test;\n \n import java.io.File;\n@@ -40,11 +41,11 @@\n public class ScriptFileGremlinPluginTest {\n     @Test\n     public void shouldOpenViaPropertiesFileConfig() throws IOException {\n-        final File scriptFile1 = TestHelper.generateTempFileFromResource(DefaultScriptCustomizerTest.class, \"script-customizer-1.groovy\", \".groovy\");\n-        final File scriptFile2 = TestHelper.generateTempFileFromResource(DefaultScriptCustomizerTest.class, \"script-customizer-2.groovy\", \".groovy\");\n+        final File scriptFile1 = CoreTestHelper.generateTempFileFromResource(DefaultScriptCustomizerTest.class, \"script-customizer-1.groovy\", \".groovy\");\n+        final File scriptFile2 = CoreTestHelper.generateTempFileFromResource(DefaultScriptCustomizerTest.class, \"script-customizer-2.groovy\", \".groovy\");\n         final List<String> files = new ArrayList<>();\n-        files.add(scriptFile1.getAbsolutePath());\n-        files.add(scriptFile2.getAbsolutePath());\n+        files.add(Storage.toPath(scriptFile1));\n+        files.add(Storage.toPath(scriptFile2));\n         final GremlinPlugin plugin = ScriptFileGremlinPlugin.build().files(files).create();\n \n         assertThat(plugin.getCustomizers().isPresent(), is(true));",
                "deletions": 5
            },
            {
                "sha": "66c20ec5ef30221cb82774b92bebff2a7aa604d5",
                "filename": "gremlin-core/src/test/java/org/apache/tinkerpop/gremlin/process/traversal/OrderTest.java",
                "blob_url": "https://github.com/apache/tinkerpop/blob/1088cd9be6ecdcb37bee357a783f01f01bdc366a/gremlin-core/src/test/java/org/apache/tinkerpop/gremlin/process/traversal/OrderTest.java",
                "raw_url": "https://github.com/apache/tinkerpop/raw/1088cd9be6ecdcb37bee357a783f01f01bdc366a/gremlin-core/src/test/java/org/apache/tinkerpop/gremlin/process/traversal/OrderTest.java",
                "status": "modified",
                "changes": 11,
                "additions": 6,
                "contents_url": "https://api.github.com/repos/apache/tinkerpop/contents/gremlin-core/src/test/java/org/apache/tinkerpop/gremlin/process/traversal/OrderTest.java?ref=1088cd9be6ecdcb37bee357a783f01f01bdc366a",
                "patch": "@@ -18,26 +18,27 @@\n  */\n package org.apache.tinkerpop.gremlin.process.traversal;\n \n-import org.junit.Test;\n-import org.junit.runner.RunWith;\n-import org.junit.runners.Parameterized;\n+import static org.junit.Assert.assertEquals;\n \n import java.text.ParseException;\n import java.text.SimpleDateFormat;\n import java.util.ArrayList;\n import java.util.Arrays;\n import java.util.Collections;\n import java.util.List;\n+import java.util.Locale;\n \n-import static org.junit.Assert.assertEquals;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+import org.junit.runners.Parameterized;\n \n /**\n  * @author Stephen Mallette (http://stephen.genoprime.com)\n  */\n @RunWith(Parameterized.class)\n public class OrderTest {\n \n-    private static final SimpleDateFormat formatter = new SimpleDateFormat(\"dd-MMM-yyyy\");\n+    private static final SimpleDateFormat formatter = new SimpleDateFormat(\"dd-MMM-yyyy\", Locale.US);\n \n     @Parameterized.Parameters(name = \"{0}.test({1},{2})\")\n     public static Iterable<Object[]> data() throws ParseException {",
                "deletions": 5
            },
            {
                "sha": "bb5d85d7dd1fbdbc1752390b88869da0bef02ae7",
                "filename": "gremlin-core/src/test/java/org/apache/tinkerpop/gremlin/process/traversal/strategy/optimization/EarlyLimitStrategyTest.java",
                "blob_url": "https://github.com/apache/tinkerpop/blob/1088cd9be6ecdcb37bee357a783f01f01bdc366a/gremlin-core/src/test/java/org/apache/tinkerpop/gremlin/process/traversal/strategy/optimization/EarlyLimitStrategyTest.java",
                "raw_url": "https://github.com/apache/tinkerpop/raw/1088cd9be6ecdcb37bee357a783f01f01bdc366a/gremlin-core/src/test/java/org/apache/tinkerpop/gremlin/process/traversal/strategy/optimization/EarlyLimitStrategyTest.java",
                "status": "modified",
                "changes": 4,
                "additions": 2,
                "contents_url": "https://api.github.com/repos/apache/tinkerpop/contents/gremlin-core/src/test/java/org/apache/tinkerpop/gremlin/process/traversal/strategy/optimization/EarlyLimitStrategyTest.java?ref=1088cd9be6ecdcb37bee357a783f01f01bdc366a",
                "patch": "@@ -70,7 +70,7 @@ public void doTest() {\n     }\n \n     @Parameterized.Parameters(name = \"{0}\")\n-    public static Iterable<Object> generateTestParameters() {\n+    public static Iterable<Object[]> generateTestParameters() {\n         return Arrays.asList(new Object[][]{\n                 {__.out().valueMap().limit(1), __.out().limit(1).valueMap(), Collections.emptyList()},\n                 {__.out().limit(5).valueMap().range(5, 10), __.start().out().none(), Collections.emptyList()},\n@@ -97,7 +97,7 @@ public void doTest() {\n                 {__.out().store(\"a\").limit(10), __.out().limit(10).store(\"a\"), Collections.emptyList()},\n                 {__.out().aggregate(\"a\").limit(10), __.out().aggregate(\"a\").limit(10), Collections.emptyList()},\n                 {__.V().branch(__.label()).option(\"person\", __.out(\"knows\").valueMap().limit(1)).option(\"software\", __.out(\"created\").valueMap().limit(2).fold()),\n-                        __.V().branch(__.label()).option(\"person\", __.out(\"knows\").limit(1).valueMap()).option(\"software\", __.out(\"created\").limit(2).valueMap().fold()), Collections.emptyList()}\n+                 __.V().branch(__.label()).option(\"person\", __.out(\"knows\").limit(1).valueMap()).option(\"software\", __.out(\"created\").limit(2).valueMap().fold()), Collections.emptyList()}\n         });\n     }\n }",
                "deletions": 2
            },
            {
                "sha": "641d22eacaa665b038e275d15eccb673215c7469",
                "filename": "gremlin-core/src/test/java/org/apache/tinkerpop/gremlin/process/traversal/strategy/optimization/OrderLimitStrategyTest.java",
                "blob_url": "https://github.com/apache/tinkerpop/blob/1088cd9be6ecdcb37bee357a783f01f01bdc366a/gremlin-core/src/test/java/org/apache/tinkerpop/gremlin/process/traversal/strategy/optimization/OrderLimitStrategyTest.java",
                "raw_url": "https://github.com/apache/tinkerpop/raw/1088cd9be6ecdcb37bee357a783f01f01bdc366a/gremlin-core/src/test/java/org/apache/tinkerpop/gremlin/process/traversal/strategy/optimization/OrderLimitStrategyTest.java",
                "status": "modified",
                "changes": 2,
                "additions": 1,
                "contents_url": "https://api.github.com/repos/apache/tinkerpop/contents/gremlin-core/src/test/java/org/apache/tinkerpop/gremlin/process/traversal/strategy/optimization/OrderLimitStrategyTest.java?ref=1088cd9be6ecdcb37bee357a783f01f01bdc366a",
                "patch": "@@ -62,7 +62,7 @@ public void doTest() {\n     }\n \n     @Parameterized.Parameters(name = \"{0}\")\n-    public static Iterable<Object> generateTestParameters() {\n+    public static Iterable<Object[]> generateTestParameters() {\n         return Arrays.asList(new Object[][]{\n                 {__.order().limit(1), 1l},\n                 {__.out().order().range(7, 15), 15l},",
                "deletions": 1
            },
            {
                "sha": "8dd21050d67536ddb7947ccc2df9acfc2cc05e73",
                "filename": "gremlin-core/src/test/java/org/apache/tinkerpop/gremlin/structure/io/GraphMigratorTest.java",
                "blob_url": "https://github.com/apache/tinkerpop/blob/1088cd9be6ecdcb37bee357a783f01f01bdc366a/gremlin-core/src/test/java/org/apache/tinkerpop/gremlin/structure/io/GraphMigratorTest.java",
                "raw_url": "https://github.com/apache/tinkerpop/raw/1088cd9be6ecdcb37bee357a783f01f01bdc366a/gremlin-core/src/test/java/org/apache/tinkerpop/gremlin/structure/io/GraphMigratorTest.java",
                "status": "modified",
                "changes": 4,
                "additions": 2,
                "contents_url": "https://api.github.com/repos/apache/tinkerpop/contents/gremlin-core/src/test/java/org/apache/tinkerpop/gremlin/structure/io/GraphMigratorTest.java?ref=1088cd9be6ecdcb37bee357a783f01f01bdc366a",
                "patch": "@@ -18,7 +18,7 @@\n  */\n package org.apache.tinkerpop.gremlin.structure.io;\n \n-import org.apache.tinkerpop.gremlin.TestHelper;\n+import org.apache.tinkerpop.gremlin.CoreTestHelper;\n import org.junit.Test;\n \n /**\n@@ -27,6 +27,6 @@\n public class GraphMigratorTest {\n     @Test\n     public void shouldBeUtilityClass() throws Exception {\n-        TestHelper.assertIsUtilityClass(GraphMigrator.class);\n+        CoreTestHelper.assertIsUtilityClass(GraphMigrator.class);\n     }\n }",
                "deletions": 2
            },
            {
                "sha": "8c81e84dcfb9f7dff19ef326b002ef061cc31092",
                "filename": "gremlin-core/src/test/java/org/apache/tinkerpop/gremlin/structure/io/IoCoreTest.java",
                "blob_url": "https://github.com/apache/tinkerpop/blob/1088cd9be6ecdcb37bee357a783f01f01bdc366a/gremlin-core/src/test/java/org/apache/tinkerpop/gremlin/structure/io/IoCoreTest.java",
                "raw_url": "https://github.com/apache/tinkerpop/raw/1088cd9be6ecdcb37bee357a783f01f01bdc366a/gremlin-core/src/test/java/org/apache/tinkerpop/gremlin/structure/io/IoCoreTest.java",
                "status": "modified",
                "changes": 4,
                "additions": 2,
                "contents_url": "https://api.github.com/repos/apache/tinkerpop/contents/gremlin-core/src/test/java/org/apache/tinkerpop/gremlin/structure/io/IoCoreTest.java?ref=1088cd9be6ecdcb37bee357a783f01f01bdc366a",
                "patch": "@@ -18,7 +18,7 @@\n  */\n package org.apache.tinkerpop.gremlin.structure.io;\n \n-import org.apache.tinkerpop.gremlin.TestHelper;\n+import org.apache.tinkerpop.gremlin.CoreTestHelper;\n import org.apache.tinkerpop.gremlin.structure.io.graphml.GraphMLIo;\n import org.apache.tinkerpop.gremlin.structure.io.graphson.GraphSONIo;\n import org.apache.tinkerpop.gremlin.structure.io.gryo.GryoIo;\n@@ -33,7 +33,7 @@\n public class IoCoreTest {\n     @Test\n     public void shouldBeUtilityClass() throws Exception {\n-        TestHelper.assertIsUtilityClass(IoCore.class);\n+        CoreTestHelper.assertIsUtilityClass(IoCore.class);\n     }\n \n     @Test",
                "deletions": 2
            },
            {
                "sha": "74feea5ea06d4ebed27b3241a50983056a09fcad",
                "filename": "gremlin-core/src/test/java/org/apache/tinkerpop/gremlin/structure/io/graphson/GraphSONTokensTest.java",
                "blob_url": "https://github.com/apache/tinkerpop/blob/1088cd9be6ecdcb37bee357a783f01f01bdc366a/gremlin-core/src/test/java/org/apache/tinkerpop/gremlin/structure/io/graphson/GraphSONTokensTest.java",
                "raw_url": "https://github.com/apache/tinkerpop/raw/1088cd9be6ecdcb37bee357a783f01f01bdc366a/gremlin-core/src/test/java/org/apache/tinkerpop/gremlin/structure/io/graphson/GraphSONTokensTest.java",
                "status": "modified",
                "changes": 4,
                "additions": 2,
                "contents_url": "https://api.github.com/repos/apache/tinkerpop/contents/gremlin-core/src/test/java/org/apache/tinkerpop/gremlin/structure/io/graphson/GraphSONTokensTest.java?ref=1088cd9be6ecdcb37bee357a783f01f01bdc366a",
                "patch": "@@ -18,7 +18,7 @@\n  */\n package org.apache.tinkerpop.gremlin.structure.io.graphson;\n \n-import org.apache.tinkerpop.gremlin.TestHelper;\n+import org.apache.tinkerpop.gremlin.CoreTestHelper;\n import org.junit.Test;\n \n /**\n@@ -27,6 +27,6 @@\n public class GraphSONTokensTest {\n     @Test\n     public void shouldBeUtilityClass() throws Exception {\n-        TestHelper.assertIsUtilityClass(GraphSONTokens.class);\n+        CoreTestHelper.assertIsUtilityClass(GraphSONTokens.class);\n     }\n }",
                "deletions": 2
            },
            {
                "sha": "44f73fc21c9972baa37d6b3c1ebb9ecd2f342d8c",
                "filename": "gremlin-core/src/test/java/org/apache/tinkerpop/gremlin/structure/io/graphson/GraphSONUtilTest.java",
                "blob_url": "https://github.com/apache/tinkerpop/blob/1088cd9be6ecdcb37bee357a783f01f01bdc366a/gremlin-core/src/test/java/org/apache/tinkerpop/gremlin/structure/io/graphson/GraphSONUtilTest.java",
                "raw_url": "https://github.com/apache/tinkerpop/raw/1088cd9be6ecdcb37bee357a783f01f01bdc366a/gremlin-core/src/test/java/org/apache/tinkerpop/gremlin/structure/io/graphson/GraphSONUtilTest.java",
                "status": "modified",
                "changes": 4,
                "additions": 2,
                "contents_url": "https://api.github.com/repos/apache/tinkerpop/contents/gremlin-core/src/test/java/org/apache/tinkerpop/gremlin/structure/io/graphson/GraphSONUtilTest.java?ref=1088cd9be6ecdcb37bee357a783f01f01bdc366a",
                "patch": "@@ -18,7 +18,7 @@\n  */\n package org.apache.tinkerpop.gremlin.structure.io.graphson;\n \n-import org.apache.tinkerpop.gremlin.TestHelper;\n+import org.apache.tinkerpop.gremlin.CoreTestHelper;\n import org.junit.Test;\n \n /**\n@@ -27,6 +27,6 @@\n public class GraphSONUtilTest {\n     @Test\n     public void shouldBeUtilityClass() throws Exception {\n-        TestHelper.assertIsUtilityClass(GraphSONUtil.class);\n+        CoreTestHelper.assertIsUtilityClass(GraphSONUtil.class);\n     }\n }",
                "deletions": 2
            },
            {
                "sha": "4c5fca5becbded5b63e3332e042804a9c422598e",
                "filename": "gremlin-core/src/test/java/org/apache/tinkerpop/gremlin/structure/util/ComparatorsTest.java",
                "blob_url": "https://github.com/apache/tinkerpop/blob/1088cd9be6ecdcb37bee357a783f01f01bdc366a/gremlin-core/src/test/java/org/apache/tinkerpop/gremlin/structure/util/ComparatorsTest.java",
                "raw_url": "https://github.com/apache/tinkerpop/raw/1088cd9be6ecdcb37bee357a783f01f01bdc366a/gremlin-core/src/test/java/org/apache/tinkerpop/gremlin/structure/util/ComparatorsTest.java",
                "status": "modified",
                "changes": 4,
                "additions": 2,
                "contents_url": "https://api.github.com/repos/apache/tinkerpop/contents/gremlin-core/src/test/java/org/apache/tinkerpop/gremlin/structure/util/ComparatorsTest.java?ref=1088cd9be6ecdcb37bee357a783f01f01bdc366a",
                "patch": "@@ -18,7 +18,7 @@\n  */\n package org.apache.tinkerpop.gremlin.structure.util;\n \n-import org.apache.tinkerpop.gremlin.TestHelper;\n+import org.apache.tinkerpop.gremlin.CoreTestHelper;\n import org.apache.tinkerpop.gremlin.structure.Edge;\n import org.apache.tinkerpop.gremlin.structure.Element;\n import org.apache.tinkerpop.gremlin.structure.Property;\n@@ -38,7 +38,7 @@\n public class ComparatorsTest {\n     @Test\n     public void shouldBeUtilityClass() throws Exception {\n-        TestHelper.assertIsUtilityClass(Comparators.class);\n+        CoreTestHelper.assertIsUtilityClass(Comparators.class);\n     }\n \n     @Test",
                "deletions": 2
            },
            {
                "sha": "1b968146b19461cff396d2505e017d9eeefbd333",
                "filename": "gremlin-core/src/test/java/org/apache/tinkerpop/gremlin/structure/util/ElementHelperTest.java",
                "blob_url": "https://github.com/apache/tinkerpop/blob/1088cd9be6ecdcb37bee357a783f01f01bdc366a/gremlin-core/src/test/java/org/apache/tinkerpop/gremlin/structure/util/ElementHelperTest.java",
                "raw_url": "https://github.com/apache/tinkerpop/raw/1088cd9be6ecdcb37bee357a783f01f01bdc366a/gremlin-core/src/test/java/org/apache/tinkerpop/gremlin/structure/util/ElementHelperTest.java",
                "status": "modified",
                "changes": 4,
                "additions": 2,
                "contents_url": "https://api.github.com/repos/apache/tinkerpop/contents/gremlin-core/src/test/java/org/apache/tinkerpop/gremlin/structure/util/ElementHelperTest.java?ref=1088cd9be6ecdcb37bee357a783f01f01bdc366a",
                "patch": "@@ -18,7 +18,7 @@\n  */\n package org.apache.tinkerpop.gremlin.structure.util;\n \n-import org.apache.tinkerpop.gremlin.TestHelper;\n+import org.apache.tinkerpop.gremlin.CoreTestHelper;\n import org.apache.tinkerpop.gremlin.structure.Edge;\n import org.apache.tinkerpop.gremlin.structure.Element;\n import org.apache.tinkerpop.gremlin.structure.Graph;\n@@ -50,7 +50,7 @@\n public class ElementHelperTest {\n     @Test\n     public void shouldBeUtilityClass() throws Exception {\n-        TestHelper.assertIsUtilityClass(ElementHelper.class);\n+        CoreTestHelper.assertIsUtilityClass(ElementHelper.class);\n     }\n \n     @Test",
                "deletions": 2
            },
            {
                "sha": "2f119cea45c39f20686420142090c8689efc2c5c",
                "filename": "gremlin-core/src/test/java/org/apache/tinkerpop/gremlin/structure/util/GraphFactoryTest.java",
                "blob_url": "https://github.com/apache/tinkerpop/blob/1088cd9be6ecdcb37bee357a783f01f01bdc366a/gremlin-core/src/test/java/org/apache/tinkerpop/gremlin/structure/util/GraphFactoryTest.java",
                "raw_url": "https://github.com/apache/tinkerpop/raw/1088cd9be6ecdcb37bee357a783f01f01bdc366a/gremlin-core/src/test/java/org/apache/tinkerpop/gremlin/structure/util/GraphFactoryTest.java",
                "status": "modified",
                "changes": 31,
                "additions": 16,
                "contents_url": "https://api.github.com/repos/apache/tinkerpop/contents/gremlin-core/src/test/java/org/apache/tinkerpop/gremlin/structure/util/GraphFactoryTest.java?ref=1088cd9be6ecdcb37bee357a783f01f01bdc366a",
                "patch": "@@ -20,12 +20,13 @@\n \n import org.apache.commons.configuration.BaseConfiguration;\n import org.apache.commons.configuration.Configuration;\n-import org.apache.tinkerpop.gremlin.TestHelper;\n+import org.apache.tinkerpop.gremlin.CoreTestHelper;\n import org.apache.tinkerpop.gremlin.process.computer.GraphComputer;\n import org.apache.tinkerpop.gremlin.structure.Edge;\n import org.apache.tinkerpop.gremlin.structure.Graph;\n import org.apache.tinkerpop.gremlin.structure.Transaction;\n import org.apache.tinkerpop.gremlin.structure.Vertex;\n+import org.apache.tinkerpop.gremlin.structure.io.Storage;\n import org.apache.tinkerpop.gremlin.structure.util.empty.EmptyGraph;\n import org.junit.Test;\n \n@@ -45,7 +46,7 @@\n public class GraphFactoryTest {\n     @Test\n     public void shouldBeUtilityClass() throws Exception {\n-        TestHelper.assertIsUtilityClass(GraphFactory.class);\n+        CoreTestHelper.assertIsUtilityClass(GraphFactory.class);\n     }\n \n     @Test\n@@ -86,7 +87,7 @@ public void shouldThrowExceptionOnNullFileConfiguration() {\n \n     @Test(expected = IllegalArgumentException.class)\n     public void shouldThrowExceptionOnIfConfigurationFileIsNotAnActualFile() {\n-        GraphFactory.open(TestHelper.makeTestDataPath(GraphFactoryTest.class, \"path\").getAbsolutePath());\n+        GraphFactory.open(CoreTestHelper.makeTestDataDirectory(GraphFactoryTest.class, \"path\"));\n     }\n \n     @Test(expected = RuntimeException.class)\n@@ -168,48 +169,48 @@ public void shouldOpenViaMapConfig() {\n \n     @Test\n     public void shouldOpenViaPropertiesFileConfig() throws IOException {\n-        final File confFile = TestHelper.generateTempFileFromResource(GraphFactoryTest.class, \"mockgraph.properties\", \".properties\");\n-        final MockGraph g = (MockGraph) GraphFactory.open(confFile.getAbsolutePath());\n+        final File confFile = CoreTestHelper.generateTempFileFromResource(GraphFactoryTest.class, \"mockgraph.properties\", \".properties\");\n+        final MockGraph g = (MockGraph) GraphFactory.open(Storage.toPath(confFile));\n         assertEquals(MockGraph.class.getName(), g.getConf().getString(Graph.GRAPH));\n         assertEquals(\"it\", g.getConf().getString(\"keep\"));\n     }\n \n     @Test\n     public void shouldOpenViaPropertiesFileConfigAsDefault() throws IOException {\n-        final File confFile = TestHelper.generateTempFileFromResource(GraphFactoryTest.class, \"mockgraph.properties\", \".notrecognized\");\n-        final MockGraph g = (MockGraph) GraphFactory.open(confFile.getAbsolutePath());\n+        final File confFile = CoreTestHelper.generateTempFileFromResource(GraphFactoryTest.class, \"mockgraph.properties\", \".notrecognized\");\n+        final MockGraph g = (MockGraph) GraphFactory.open(Storage.toPath(confFile));\n         assertEquals(MockGraph.class.getName(), g.getConf().getString(Graph.GRAPH));\n         assertEquals(\"it\", g.getConf().getString(\"keep\"));\n     }\n \n     @Test\n     public void shouldOpenViaXmlFileConfig() throws IOException {\n-        final File confFile = TestHelper.generateTempFileFromResource(GraphFactoryTest.class, \"mockgraph.xml\", \".xml\");\n-        final MockGraph g = (MockGraph) GraphFactory.open(confFile.getAbsolutePath());\n+        final File confFile = CoreTestHelper.generateTempFileFromResource(GraphFactoryTest.class, \"mockgraph.xml\", \".xml\");\n+        final MockGraph g = (MockGraph) GraphFactory.open(Storage.toPath(confFile));\n         assertEquals(MockGraph.class.getName(), g.getConf().getString(Graph.GRAPH));\n         assertEquals(\"it\", g.getConf().getString(\"keep\"));\n     }\n \n     @Test\n     public void shouldOpenViaYamlFileConfig() throws IOException {\n-        final File confFile = TestHelper.generateTempFileFromResource(GraphFactoryTest.class, \"mockgraph.yaml\", \".yaml\");\n-        final MockGraph g = (MockGraph) GraphFactory.open(confFile.getAbsolutePath());\n+        final File confFile = CoreTestHelper.generateTempFileFromResource(GraphFactoryTest.class, \"mockgraph.yaml\", \".yaml\");\n+        final MockGraph g = (MockGraph) GraphFactory.open(Storage.toPath(confFile));\n         assertEquals(MockGraph.class.getName(), g.getConf().getString(Graph.GRAPH));\n         assertEquals(\"it\", g.getConf().getString(\"keep\"));\n     }\n \n     @Test\n     public void shouldOpenViaYmlFileConfig() throws IOException {\n-        final File confFile = TestHelper.generateTempFileFromResource(GraphFactoryTest.class, \"mockgraph.yaml\", \".yml\");\n-        final MockGraph g = (MockGraph) GraphFactory.open(confFile.getAbsolutePath());\n+        final File confFile = CoreTestHelper.generateTempFileFromResource(GraphFactoryTest.class, \"mockgraph.yaml\", \".yml\");\n+        final MockGraph g = (MockGraph) GraphFactory.open(Storage.toPath(confFile));\n         assertEquals(MockGraph.class.getName(), g.getConf().getString(Graph.GRAPH));\n         assertEquals(\"it\", g.getConf().getString(\"keep\"));\n     }\n \n     @Test(expected = IllegalArgumentException.class)\n     public void shouldThrowOnInvalidConfigTypeViaFileConfig() throws IOException {\n-        final File confFile = TestHelper.generateTempFileFromResource(GraphFactoryTest.class, \"mockgraph-busted.yaml\", \".yaml\");\n-        final MockGraph g = (MockGraph) GraphFactory.open(confFile.getAbsolutePath());\n+        final File confFile = CoreTestHelper.generateTempFileFromResource(GraphFactoryTest.class, \"mockgraph-busted.yaml\", \".yaml\");\n+        final MockGraph g = (MockGraph) GraphFactory.open(Storage.toPath(confFile));\n         assertEquals(MockGraph.class.getName(), g.getConf().getString(Graph.GRAPH));\n         assertEquals(\"it\", g.getConf().getString(\"keep\"));\n     }",
                "deletions": 15
            },
            {
                "sha": "1791fee822595153d1129690fc0c935283d916ae",
                "filename": "gremlin-core/src/test/java/org/apache/tinkerpop/gremlin/structure/util/GraphVariableHelperTest.java",
                "blob_url": "https://github.com/apache/tinkerpop/blob/1088cd9be6ecdcb37bee357a783f01f01bdc366a/gremlin-core/src/test/java/org/apache/tinkerpop/gremlin/structure/util/GraphVariableHelperTest.java",
                "raw_url": "https://github.com/apache/tinkerpop/raw/1088cd9be6ecdcb37bee357a783f01f01bdc366a/gremlin-core/src/test/java/org/apache/tinkerpop/gremlin/structure/util/GraphVariableHelperTest.java",
                "status": "modified",
                "changes": 4,
                "additions": 2,
                "contents_url": "https://api.github.com/repos/apache/tinkerpop/contents/gremlin-core/src/test/java/org/apache/tinkerpop/gremlin/structure/util/GraphVariableHelperTest.java?ref=1088cd9be6ecdcb37bee357a783f01f01bdc366a",
                "patch": "@@ -18,7 +18,7 @@\n  */\n package org.apache.tinkerpop.gremlin.structure.util;\n \n-import org.apache.tinkerpop.gremlin.TestHelper;\n+import org.apache.tinkerpop.gremlin.CoreTestHelper;\n import org.apache.tinkerpop.gremlin.structure.Graph;\n import org.junit.Test;\n \n@@ -31,7 +31,7 @@\n public class GraphVariableHelperTest {\n     @Test\n     public void shouldBeUtilityClass() throws Exception {\n-        TestHelper.assertIsUtilityClass(GraphVariableHelper.class);\n+        CoreTestHelper.assertIsUtilityClass(GraphVariableHelper.class);\n     }\n \n     @Test",
                "deletions": 2
            },
            {
                "sha": "b535b455682f92e03c65169d897099612506ca35",
                "filename": "gremlin-core/src/test/java/org/apache/tinkerpop/gremlin/structure/util/StringFactoryTest.java",
                "blob_url": "https://github.com/apache/tinkerpop/blob/1088cd9be6ecdcb37bee357a783f01f01bdc366a/gremlin-core/src/test/java/org/apache/tinkerpop/gremlin/structure/util/StringFactoryTest.java",
                "raw_url": "https://github.com/apache/tinkerpop/raw/1088cd9be6ecdcb37bee357a783f01f01bdc366a/gremlin-core/src/test/java/org/apache/tinkerpop/gremlin/structure/util/StringFactoryTest.java",
                "status": "modified",
                "changes": 4,
                "additions": 2,
                "contents_url": "https://api.github.com/repos/apache/tinkerpop/contents/gremlin-core/src/test/java/org/apache/tinkerpop/gremlin/structure/util/StringFactoryTest.java?ref=1088cd9be6ecdcb37bee357a783f01f01bdc366a",
                "patch": "@@ -18,7 +18,7 @@\n  */\n package org.apache.tinkerpop.gremlin.structure.util;\n \n-import org.apache.tinkerpop.gremlin.TestHelper;\n+import org.apache.tinkerpop.gremlin.CoreTestHelper;\n import org.junit.Test;\n \n /**\n@@ -27,6 +27,6 @@\n public class StringFactoryTest {\n     @Test\n     public void shouldBeUtilityClass() throws Exception {\n-        TestHelper.assertIsUtilityClass(StringFactory.class);\n+        CoreTestHelper.assertIsUtilityClass(StringFactory.class);\n     }\n }",
                "deletions": 2
            },
            {
                "sha": "43c92491b7c5e32821528c9cfc086d41d56490d1",
                "filename": "gremlin-core/src/test/java/org/apache/tinkerpop/gremlin/util/GremlinTest.java",
                "blob_url": "https://github.com/apache/tinkerpop/blob/1088cd9be6ecdcb37bee357a783f01f01bdc366a/gremlin-core/src/test/java/org/apache/tinkerpop/gremlin/util/GremlinTest.java",
                "raw_url": "https://github.com/apache/tinkerpop/raw/1088cd9be6ecdcb37bee357a783f01f01bdc366a/gremlin-core/src/test/java/org/apache/tinkerpop/gremlin/util/GremlinTest.java",
                "status": "modified",
                "changes": 4,
                "additions": 2,
                "contents_url": "https://api.github.com/repos/apache/tinkerpop/contents/gremlin-core/src/test/java/org/apache/tinkerpop/gremlin/util/GremlinTest.java?ref=1088cd9be6ecdcb37bee357a783f01f01bdc366a",
                "patch": "@@ -18,7 +18,7 @@\n  */\n package org.apache.tinkerpop.gremlin.util;\n \n-import org.apache.tinkerpop.gremlin.TestHelper;\n+import org.apache.tinkerpop.gremlin.CoreTestHelper;\n import org.junit.Test;\n \n import static org.junit.Assert.assertEquals;\n@@ -29,7 +29,7 @@\n public class GremlinTest {\n     @Test\n     public void shouldBeUtilityClass() throws Exception {\n-        TestHelper.assertIsUtilityClass(Gremlin.class);\n+        CoreTestHelper.assertIsUtilityClass(Gremlin.class);\n     }\n \n     @Test",
                "deletions": 2
            },
            {
                "sha": "f64f5f813cd2e7a05493ca1244b5452ecc4cec9d",
                "filename": "gremlin-core/src/test/java/org/apache/tinkerpop/gremlin/util/SerializerTest.java",
                "blob_url": "https://github.com/apache/tinkerpop/blob/1088cd9be6ecdcb37bee357a783f01f01bdc366a/gremlin-core/src/test/java/org/apache/tinkerpop/gremlin/util/SerializerTest.java",
                "raw_url": "https://github.com/apache/tinkerpop/raw/1088cd9be6ecdcb37bee357a783f01f01bdc366a/gremlin-core/src/test/java/org/apache/tinkerpop/gremlin/util/SerializerTest.java",
                "status": "modified",
                "changes": 4,
                "additions": 2,
                "contents_url": "https://api.github.com/repos/apache/tinkerpop/contents/gremlin-core/src/test/java/org/apache/tinkerpop/gremlin/util/SerializerTest.java?ref=1088cd9be6ecdcb37bee357a783f01f01bdc366a",
                "patch": "@@ -18,7 +18,7 @@\n  */\n package org.apache.tinkerpop.gremlin.util;\n \n-import org.apache.tinkerpop.gremlin.TestHelper;\n+import org.apache.tinkerpop.gremlin.CoreTestHelper;\n import org.junit.Test;\n \n import static org.junit.Assert.assertEquals;\n@@ -30,7 +30,7 @@\n \n     @Test\n     public void shouldBeUtilityClass() throws Exception {\n-        TestHelper.assertIsUtilityClass(Serializer.class);\n+        CoreTestHelper.assertIsUtilityClass(Serializer.class);\n     }\n \n     @Test",
                "deletions": 2
            },
            {
                "sha": "3188bf76a062f943b0cb1c50e074604919fed1b7",
                "filename": "gremlin-core/src/test/java/org/apache/tinkerpop/gremlin/util/TimeUtilTest.java",
                "blob_url": "https://github.com/apache/tinkerpop/blob/1088cd9be6ecdcb37bee357a783f01f01bdc366a/gremlin-core/src/test/java/org/apache/tinkerpop/gremlin/util/TimeUtilTest.java",
                "raw_url": "https://github.com/apache/tinkerpop/raw/1088cd9be6ecdcb37bee357a783f01f01bdc366a/gremlin-core/src/test/java/org/apache/tinkerpop/gremlin/util/TimeUtilTest.java",
                "status": "modified",
                "changes": 4,
                "additions": 2,
                "contents_url": "https://api.github.com/repos/apache/tinkerpop/contents/gremlin-core/src/test/java/org/apache/tinkerpop/gremlin/util/TimeUtilTest.java?ref=1088cd9be6ecdcb37bee357a783f01f01bdc366a",
                "patch": "@@ -18,7 +18,7 @@\n  */\n package org.apache.tinkerpop.gremlin.util;\n \n-import org.apache.tinkerpop.gremlin.TestHelper;\n+import org.apache.tinkerpop.gremlin.CoreTestHelper;\n import org.junit.Test;\n \n import java.util.concurrent.atomic.AtomicInteger;\n@@ -32,7 +32,7 @@\n \n     @Test\n     public void shouldBeUtilityClass() throws Exception {\n-        TestHelper.assertIsUtilityClass(TimeUtil.class);\n+        CoreTestHelper.assertIsUtilityClass(TimeUtil.class);\n     }\n \n     @Test",
                "deletions": 2
            },
            {
                "sha": "62ee2c59bd4d6a0b60fd8218889b3741d64a9e29",
                "filename": "gremlin-core/src/test/java/org/apache/tinkerpop/gremlin/util/function/FunctionUtilsTest.java",
                "blob_url": "https://github.com/apache/tinkerpop/blob/1088cd9be6ecdcb37bee357a783f01f01bdc366a/gremlin-core/src/test/java/org/apache/tinkerpop/gremlin/util/function/FunctionUtilsTest.java",
                "raw_url": "https://github.com/apache/tinkerpop/raw/1088cd9be6ecdcb37bee357a783f01f01bdc366a/gremlin-core/src/test/java/org/apache/tinkerpop/gremlin/util/function/FunctionUtilsTest.java",
                "status": "modified",
                "changes": 4,
                "additions": 2,
                "contents_url": "https://api.github.com/repos/apache/tinkerpop/contents/gremlin-core/src/test/java/org/apache/tinkerpop/gremlin/util/function/FunctionUtilsTest.java?ref=1088cd9be6ecdcb37bee357a783f01f01bdc366a",
                "patch": "@@ -18,7 +18,7 @@\n  */\n package org.apache.tinkerpop.gremlin.util.function;\n \n-import org.apache.tinkerpop.gremlin.TestHelper;\n+import org.apache.tinkerpop.gremlin.CoreTestHelper;\n import org.apache.tinkerpop.gremlin.util.iterator.IteratorUtils;\n import org.junit.Test;\n \n@@ -34,7 +34,7 @@\n \n     @Test\n     public void shouldBeUtilityClass() throws Exception {\n-        TestHelper.assertIsUtilityClass(FunctionUtils.class);\n+        CoreTestHelper.assertIsUtilityClass(FunctionUtils.class);\n     }\n \n     @Test",
                "deletions": 2
            },
            {
                "sha": "3e4df2e6ca8eff7a84af696c529daeb1c1e93d66",
                "filename": "gremlin-core/src/test/java/org/apache/tinkerpop/gremlin/util/iterator/IteratorUtilsTest.java",
                "blob_url": "https://github.com/apache/tinkerpop/blob/1088cd9be6ecdcb37bee357a783f01f01bdc366a/gremlin-core/src/test/java/org/apache/tinkerpop/gremlin/util/iterator/IteratorUtilsTest.java",
                "raw_url": "https://github.com/apache/tinkerpop/raw/1088cd9be6ecdcb37bee357a783f01f01bdc366a/gremlin-core/src/test/java/org/apache/tinkerpop/gremlin/util/iterator/IteratorUtilsTest.java",
                "status": "modified",
                "changes": 4,
                "additions": 2,
                "contents_url": "https://api.github.com/repos/apache/tinkerpop/contents/gremlin-core/src/test/java/org/apache/tinkerpop/gremlin/util/iterator/IteratorUtilsTest.java?ref=1088cd9be6ecdcb37bee357a783f01f01bdc366a",
                "patch": "@@ -18,7 +18,7 @@\n  */\n package org.apache.tinkerpop.gremlin.util.iterator;\n \n-import org.apache.tinkerpop.gremlin.TestHelper;\n+import org.apache.tinkerpop.gremlin.CoreTestHelper;\n import org.apache.tinkerpop.gremlin.process.traversal.util.FastNoSuchElementException;\n import org.junit.Test;\n \n@@ -45,7 +45,7 @@\n \n     @Test\n     public void shouldBeUtilityClass() throws Exception {\n-        TestHelper.assertIsUtilityClass(IteratorUtils.class);\n+        CoreTestHelper.assertIsUtilityClass(IteratorUtils.class);\n     }\n \n     @Test",
                "deletions": 2
            },
            {
                "sha": "2d7a751ab11373ab881be2e853f7573d9ef1e1a4",
                "filename": "gremlin-core/src/test/java/org/apache/tinkerpop/gremlin/util/tools/MultiMapTest.java",
                "blob_url": "https://github.com/apache/tinkerpop/blob/1088cd9be6ecdcb37bee357a783f01f01bdc366a/gremlin-core/src/test/java/org/apache/tinkerpop/gremlin/util/tools/MultiMapTest.java",
                "raw_url": "https://github.com/apache/tinkerpop/raw/1088cd9be6ecdcb37bee357a783f01f01bdc366a/gremlin-core/src/test/java/org/apache/tinkerpop/gremlin/util/tools/MultiMapTest.java",
                "status": "modified",
                "changes": 4,
                "additions": 2,
                "contents_url": "https://api.github.com/repos/apache/tinkerpop/contents/gremlin-core/src/test/java/org/apache/tinkerpop/gremlin/util/tools/MultiMapTest.java?ref=1088cd9be6ecdcb37bee357a783f01f01bdc366a",
                "patch": "@@ -18,7 +18,7 @@\n  */\n package org.apache.tinkerpop.gremlin.util.tools;\n \n-import org.apache.tinkerpop.gremlin.TestHelper;\n+import org.apache.tinkerpop.gremlin.CoreTestHelper;\n import org.apache.tinkerpop.gremlin.util.iterator.IteratorUtils;\n import org.junit.Test;\n \n@@ -39,7 +39,7 @@\n \n     @Test\n     public void shouldBeUtilityClass() throws Exception {\n-        TestHelper.assertIsUtilityClass(MultiMap.class);\n+        CoreTestHelper.assertIsUtilityClass(MultiMap.class);\n     }\n \n     @Test",
                "deletions": 2
            },
            {
                "sha": "cba10275495c22c879d69cbebaf668921cddacc3",
                "filename": "gremlin-groovy/src/test/java/org/apache/tinkerpop/gremlin/groovy/engine/GremlinExecutorTest.java",
                "blob_url": "https://github.com/apache/tinkerpop/blob/1088cd9be6ecdcb37bee357a783f01f01bdc366a/gremlin-groovy/src/test/java/org/apache/tinkerpop/gremlin/groovy/engine/GremlinExecutorTest.java",
                "raw_url": "https://github.com/apache/tinkerpop/raw/1088cd9be6ecdcb37bee357a783f01f01bdc366a/gremlin-groovy/src/test/java/org/apache/tinkerpop/gremlin/groovy/engine/GremlinExecutorTest.java",
                "status": "modified",
                "changes": 4,
                "additions": 3,
                "contents_url": "https://api.github.com/repos/apache/tinkerpop/contents/gremlin-groovy/src/test/java/org/apache/tinkerpop/gremlin/groovy/engine/GremlinExecutorTest.java?ref=1088cd9be6ecdcb37bee357a783f01f01bdc366a",
                "patch": "@@ -22,6 +22,7 @@\n import org.apache.tinkerpop.gremlin.TestHelper;\n import org.apache.tinkerpop.gremlin.jsr223.ImportGremlinPlugin;\n import org.apache.tinkerpop.gremlin.jsr223.ScriptFileGremlinPlugin;\n+import org.apache.tinkerpop.gremlin.structure.io.Storage;\n import org.apache.tinkerpop.gremlin.groovy.jsr223.GroovyCompilerGremlinPlugin;\n import org.apache.tinkerpop.gremlin.groovy.jsr223.TimedInterruptTimeoutException;\n import org.javatuples.Pair;\n@@ -88,7 +89,8 @@\n         try {\n             final List<String> groovyScriptResources = Collections.singletonList(\"GremlinExecutorInit.groovy\");\n             for (final String fileName : groovyScriptResources) {\n-                PATHS.put(fileName, TestHelper.generateTempFileFromResource(GremlinExecutorTest.class, fileName, \"\").getAbsolutePath());\n+                PATHS.put(fileName,\n+                          Storage.toPath(TestHelper.generateTempFileFromResource(GremlinExecutorTest.class, fileName, \"\")));\n             }\n         } catch (Exception e) {\n             e.printStackTrace();",
                "deletions": 1
            },
            {
                "sha": "2a40feeb2a3dff8b9eb372590c9cf4fa7be48ebf",
                "filename": "gremlin-groovy/src/test/java/org/apache/tinkerpop/gremlin/groovy/jsr223/GremlinGroovyScriptEngineFileSandboxTest.java",
                "blob_url": "https://github.com/apache/tinkerpop/blob/1088cd9be6ecdcb37bee357a783f01f01bdc366a/gremlin-groovy/src/test/java/org/apache/tinkerpop/gremlin/groovy/jsr223/GremlinGroovyScriptEngineFileSandboxTest.java",
                "raw_url": "https://github.com/apache/tinkerpop/raw/1088cd9be6ecdcb37bee357a783f01f01bdc366a/gremlin-groovy/src/test/java/org/apache/tinkerpop/gremlin/groovy/jsr223/GremlinGroovyScriptEngineFileSandboxTest.java",
                "status": "modified",
                "changes": 5,
                "additions": 3,
                "contents_url": "https://api.github.com/repos/apache/tinkerpop/contents/gremlin-groovy/src/test/java/org/apache/tinkerpop/gremlin/groovy/jsr223/GremlinGroovyScriptEngineFileSandboxTest.java?ref=1088cd9be6ecdcb37bee357a783f01f01bdc366a",
                "patch": "@@ -24,6 +24,7 @@\n import org.apache.tinkerpop.gremlin.process.traversal.dsl.graph.GraphTraversalSource;\n import org.apache.tinkerpop.gremlin.structure.Graph;\n import org.apache.tinkerpop.gremlin.structure.Vertex;\n+import org.apache.tinkerpop.gremlin.structure.io.Storage;\n import org.apache.tinkerpop.gremlin.tinkergraph.structure.TinkerFactory;\n import org.apache.tinkerpop.gremlin.tinkergraph.structure.TinkerGraph;\n import org.codehaus.groovy.control.MultipleCompilationErrorsException;\n@@ -56,7 +57,7 @@ public void setup() throws Exception {\n         g = graph.traversal();\n         if (System.getProperty(FileSandboxExtension.GREMLIN_SERVER_SANDBOX) == null) {\n             final File f = TestHelper.generateTempFileFromResource(TinkerGraph.class, GremlinGroovyScriptEngineFileSandboxTest.class, \"sandbox.yaml\", \".yaml\");\n-            System.setProperty(FileSandboxExtension.GREMLIN_SERVER_SANDBOX, f.getAbsolutePath());\n+            System.setProperty(FileSandboxExtension.GREMLIN_SERVER_SANDBOX, Storage.toPath(f));\n         }\n     }\n \n@@ -68,7 +69,7 @@ public static void destroy() {\n     @Test\n     public void shouldSuccessfullyInstantiateGroovyScriptEngineWithEmptyStaticVariableTyping() throws Exception {\n         final File f = TestHelper.generateTempFileFromResource(graph.getClass(), GremlinGroovyScriptEngineFileSandboxTest.class, \"sandbox-empty-static-variable-types.yaml\", \".yaml\");\n-        System.setProperty(FileSandboxExtension.GREMLIN_SERVER_SANDBOX, f.getAbsolutePath());\n+        System.setProperty(FileSandboxExtension.GREMLIN_SERVER_SANDBOX, Storage.toPath(f));\n         final CompileStaticGroovyCustomizer standardSandbox = new CompileStaticGroovyCustomizer(FileSandboxExtension.class.getName());\n         try (GremlinGroovyScriptEngine engine = new GremlinGroovyScriptEngine(standardSandbox)) {\n             assertEquals(123, engine.eval(\"java.lang.Math.abs(-123)\"));",
                "deletions": 2
            },
            {
                "sha": "d8897909e9988b271955e0d2c24eac7f1e057798",
                "filename": "gremlin-groovy/src/test/java/org/apache/tinkerpop/gremlin/groovy/util/DependencyGrabberIntegrateTest.java",
                "blob_url": "https://github.com/apache/tinkerpop/blob/1088cd9be6ecdcb37bee357a783f01f01bdc366a/gremlin-groovy/src/test/java/org/apache/tinkerpop/gremlin/groovy/util/DependencyGrabberIntegrateTest.java",
                "raw_url": "https://github.com/apache/tinkerpop/raw/1088cd9be6ecdcb37bee357a783f01f01bdc366a/gremlin-groovy/src/test/java/org/apache/tinkerpop/gremlin/groovy/util/DependencyGrabberIntegrateTest.java",
                "status": "modified",
                "changes": 3,
                "additions": 2,
                "contents_url": "https://api.github.com/repos/apache/tinkerpop/contents/gremlin-groovy/src/test/java/org/apache/tinkerpop/gremlin/groovy/util/DependencyGrabberIntegrateTest.java?ref=1088cd9be6ecdcb37bee357a783f01f01bdc366a",
                "patch": "@@ -22,6 +22,7 @@\n import java.io.File;\n import org.apache.commons.io.FileUtils;\n import org.apache.tinkerpop.gremlin.TestHelper;\n+import org.apache.tinkerpop.gremlin.structure.io.Storage;\n import org.junit.AfterClass;\n import org.junit.Test;\n import static org.junit.Assert.assertFalse;\n@@ -33,7 +34,7 @@\n public class DependencyGrabberIntegrateTest {\n     private static final GroovyClassLoader dummyClassLoader = new GroovyClassLoader();\n     private static final File extTestDir = TestHelper.makeTestDataPath(DependencyGrabberIntegrateTest.class);\n-    private static final DependencyGrabber dg = new DependencyGrabber(dummyClassLoader, extTestDir.getAbsolutePath());\n+    private static final DependencyGrabber dg = new DependencyGrabber(dummyClassLoader, Storage.toPath(extTestDir));\n \n     @AfterClass\n     public static void tearDown() {",
                "deletions": 1
            },
            {
                "sha": "89fdb11d2a3112a28f3a1c7f2d58684e4477bf82",
                "filename": "gremlin-groovy/src/test/java/org/apache/tinkerpop/gremlin/util/TinkerGraphProvider.java",
                "blob_url": "https://github.com/apache/tinkerpop/blob/1088cd9be6ecdcb37bee357a783f01f01bdc366a/gremlin-groovy/src/test/java/org/apache/tinkerpop/gremlin/util/TinkerGraphProvider.java",
                "raw_url": "https://github.com/apache/tinkerpop/raw/1088cd9be6ecdcb37bee357a783f01f01bdc366a/gremlin-groovy/src/test/java/org/apache/tinkerpop/gremlin/util/TinkerGraphProvider.java",
                "status": "modified",
                "changes": 4,
                "additions": 1,
                "contents_url": "https://api.github.com/repos/apache/tinkerpop/contents/gremlin-groovy/src/test/java/org/apache/tinkerpop/gremlin/util/TinkerGraphProvider.java?ref=1088cd9be6ecdcb37bee357a783f01f01bdc366a",
                "patch": "@@ -72,9 +72,7 @@\n                 put(TinkerGraph.GREMLIN_TINKERGRAPH_DEFAULT_VERTEX_PROPERTY_CARDINALITY, VertexProperty.Cardinality.list.name());\n             if (requiresPersistence(test, testMethodName)) {\n                 put(TinkerGraph.GREMLIN_TINKERGRAPH_GRAPH_FORMAT, \"gryo\");\n-                final File tempDir = TestHelper.makeTestDataPath(test, \"temp\");\n-                put(TinkerGraph.GREMLIN_TINKERGRAPH_GRAPH_LOCATION,\n-                        tempDir.getAbsolutePath() + File.separator + testMethodName + \".kryo\");\n+                put(TinkerGraph.GREMLIN_TINKERGRAPH_GRAPH_LOCATION, TestHelper.makeTestDataFile(test, \"temp\", testMethodName + \".kryo\"));\n             }\n         }};\n     }",
                "deletions": 3
            },
            {
                "sha": "1b5b8d7203f0d3efe81d373cf9b2b556834538ca",
                "filename": "gremlin-javascript/pom.xml",
                "blob_url": "https://github.com/apache/tinkerpop/blob/1088cd9be6ecdcb37bee357a783f01f01bdc366a/gremlin-javascript/pom.xml",
                "raw_url": "https://github.com/apache/tinkerpop/raw/1088cd9be6ecdcb37bee357a783f01f01bdc366a/gremlin-javascript/pom.xml",
                "status": "modified",
                "changes": 2,
                "additions": 1,
                "contents_url": "https://api.github.com/repos/apache/tinkerpop/contents/gremlin-javascript/pom.xml?ref=1088cd9be6ecdcb37bee357a783f01f01bdc366a",
                "patch": "@@ -26,7 +26,7 @@ limitations under the License.\n     <artifactId>gremlin-javascript</artifactId>\n     <name>Apache TinkerPop :: Gremlin Javascript</name>\n     <properties>\n-        <maven.test.skip>false</maven.test.skip>\n+        <maven.test.skip>true</maven.test.skip>\n         <skipTests>${maven.test.skip}</skipTests>\n         <gremlin.server.dir>${project.parent.basedir}/gremlin-server</gremlin.server.dir>\n     </properties>",
                "deletions": 1
            },
            {
                "sha": "49eb292c4e06320ca7e284e7d8eb4689077c82c9",
                "filename": "gremlin-server/src/test/java/org/apache/tinkerpop/gremlin/server/GremlinDriverIntegrateTest.java",
                "blob_url": "https://github.com/apache/tinkerpop/blob/1088cd9be6ecdcb37bee357a783f01f01bdc366a/gremlin-server/src/test/java/org/apache/tinkerpop/gremlin/server/GremlinDriverIntegrateTest.java",
                "raw_url": "https://github.com/apache/tinkerpop/raw/1088cd9be6ecdcb37bee357a783f01f01bdc366a/gremlin-server/src/test/java/org/apache/tinkerpop/gremlin/server/GremlinDriverIntegrateTest.java",
                "status": "modified",
                "changes": 6,
                "additions": 4,
                "contents_url": "https://api.github.com/repos/apache/tinkerpop/contents/gremlin-server/src/test/java/org/apache/tinkerpop/gremlin/server/GremlinDriverIntegrateTest.java?ref=1088cd9be6ecdcb37bee357a783f01f01bdc366a",
                "patch": "@@ -36,6 +36,7 @@\n import org.apache.tinkerpop.gremlin.jsr223.ScriptFileGremlinPlugin;\n import org.apache.tinkerpop.gremlin.server.channel.NioChannelizer;\n import org.apache.tinkerpop.gremlin.structure.Vertex;\n+import org.apache.tinkerpop.gremlin.structure.io.Storage;\n import org.apache.tinkerpop.gremlin.structure.util.detached.DetachedVertex;\n import org.apache.tinkerpop.gremlin.tinkergraph.structure.TinkerFactory;\n import org.apache.tinkerpop.gremlin.util.Log4jRecordingAppender;\n@@ -136,8 +137,9 @@ public Settings overrideSettings(final Settings settings) {\n             case \"shouldAliasTraversalSourceVariables\":\n             case \"shouldAliasTraversalSourceVariablesInSession\":\n                 try {\n-                    final String p = TestHelper.generateTempFileFromResource(\n-                            GremlinDriverIntegrateTest.class, \"generate-shouldRebindTraversalSourceVariables.groovy\", \"\").getAbsolutePath();\n+                    final String p = Storage.toPath(TestHelper.generateTempFileFromResource(\n+                                                      GremlinDriverIntegrateTest.class,\n+                                                      \"generate-shouldRebindTraversalSourceVariables.groovy\", \"\"));\n                     final Map<String,Object> m = new HashMap<>();\n                     m.put(\"files\", Collections.singletonList(p));\n                     settings.scriptEngines.get(\"gremlin-groovy\").plugins.put(ScriptFileGremlinPlugin.class.getName(), m);",
                "deletions": 2
            },
            {
                "sha": "b072c21f17d9cb3f4b2d169eaedc47eb2eaadd6d",
                "filename": "gremlin-server/src/test/java/org/apache/tinkerpop/gremlin/server/ResponseHandlerContextTest.java",
                "blob_url": "https://github.com/apache/tinkerpop/blob/1088cd9be6ecdcb37bee357a783f01f01bdc366a/gremlin-server/src/test/java/org/apache/tinkerpop/gremlin/server/ResponseHandlerContextTest.java",
                "raw_url": "https://github.com/apache/tinkerpop/raw/1088cd9be6ecdcb37bee357a783f01f01bdc366a/gremlin-server/src/test/java/org/apache/tinkerpop/gremlin/server/ResponseHandlerContextTest.java",
                "status": "modified",
                "changes": 6,
                "additions": 3,
                "contents_url": "https://api.github.com/repos/apache/tinkerpop/contents/gremlin-server/src/test/java/org/apache/tinkerpop/gremlin/server/ResponseHandlerContextTest.java?ref=1088cd9be6ecdcb37bee357a783f01f01bdc366a",
                "patch": "@@ -122,7 +122,7 @@ public void shouldAllowAtMostOneFinalResponse() {\n \n         writeInvoker.apply(context, ResponseStatusCode.SERVER_ERROR_TIMEOUT);\n         assertTrue(recordingAppender.logContainsAny(\".*\" + request.getRequestId() + \".*\"));\n-        assertTrue(recordingAppender.logContainsAny(\".*\" + ResponseStatusCode.SERVER_ERROR_TIMEOUT + \"$\"));\n+        assertTrue(recordingAppender.logContainsAny(\".*\" + ResponseStatusCode.SERVER_ERROR_TIMEOUT + \".*\"));\n \n         // ensure there were no other writes to the channel\n         Mockito.verify(ctx, Mockito.times(2)).writeAndFlush(Mockito.any());\n@@ -135,7 +135,7 @@ public void shouldNotAllowNonFinalMessagesAfterFinalResponse() {\n \n         writeInvoker.apply(context, ResponseStatusCode.PARTIAL_CONTENT);\n         assertTrue(recordingAppender.logContainsAny(\".*\" + request.getRequestId() + \".*\"));\n-        assertTrue(recordingAppender.logContainsAny(\".*\" + ResponseStatusCode.PARTIAL_CONTENT + \"$\"));\n+        assertTrue(recordingAppender.logContainsAny(\".*\" + ResponseStatusCode.PARTIAL_CONTENT + \".*\"));\n \n         // ensure there were no other writes to the channel\n         Mockito.verify(ctx, Mockito.times(1)).writeAndFlush(Mockito.any());\n@@ -150,7 +150,7 @@ public void shouldReleaseIgnoredFrames() {\n         context.writeAndFlush(ResponseStatusCode.SUCCESS, frame);\n \n         assertTrue(recordingAppender.logContainsAny(\".*\" + request.getRequestId() + \".*\"));\n-        assertTrue(recordingAppender.logContainsAny(\".*\" + ResponseStatusCode.SUCCESS + \"$\"));\n+        assertTrue(recordingAppender.logContainsAny(\".*\" + ResponseStatusCode.SUCCESS + \".*\"));\n \n         // ensure there were no other writes to the channel\n         Mockito.verify(ctx, Mockito.times(1)).writeAndFlush(Mockito.any());",
                "deletions": 3
            },
            {
                "sha": "832bf0cfc56d4d892a05cb7839dad47fd926abe0",
                "filename": "gremlin-server/src/test/java/org/apache/tinkerpop/gremlin/server/ServerTestHelper.java",
                "blob_url": "https://github.com/apache/tinkerpop/blob/1088cd9be6ecdcb37bee357a783f01f01bdc366a/gremlin-server/src/test/java/org/apache/tinkerpop/gremlin/server/ServerTestHelper.java",
                "raw_url": "https://github.com/apache/tinkerpop/raw/1088cd9be6ecdcb37bee357a783f01f01bdc366a/gremlin-server/src/test/java/org/apache/tinkerpop/gremlin/server/ServerTestHelper.java",
                "status": "modified",
                "changes": 60,
                "additions": 46,
                "contents_url": "https://api.github.com/repos/apache/tinkerpop/contents/gremlin-server/src/test/java/org/apache/tinkerpop/gremlin/server/ServerTestHelper.java?ref=1088cd9be6ecdcb37bee357a783f01f01bdc366a",
                "patch": "@@ -18,12 +18,14 @@\n  */\n package org.apache.tinkerpop.gremlin.server;\n \n-import org.apache.tinkerpop.gremlin.jsr223.ScriptFileGremlinPlugin;\n-\n import java.io.File;\n import java.util.List;\n import java.util.Map;\n import java.util.stream.Collectors;\n+import static org.junit.Assert.assertNotNull;\n+\n+import org.apache.tinkerpop.gremlin.jsr223.ScriptFileGremlinPlugin;\n+import org.apache.tinkerpop.gremlin.structure.io.Storage;\n \n /**\n  * @author Stephen Mallette (http://stephen.genoprime.com)\n@@ -35,23 +37,53 @@\n      *  If an overriden path is determined to be absolute then the path is not re-written.\n      */\n     public static void rewritePathsInGremlinServerSettings(final Settings overridenSettings) {\n-        final String buildDir = System.getProperty(\"build.dir\");\n-        final String homeDir = buildDir.substring(0, buildDir.indexOf(\"gremlin-server\") + \"gremlin-server\".length()) +\n-                File.separator + \"src\" + File.separator + \"test\" + File.separator +\"scripts\";\n-\n-        if (overridenSettings.scriptEngines.get(\"gremlin-groovy\").plugins.containsKey(ScriptFileGremlinPlugin.class.getName())) {\n-            overridenSettings.scriptEngines.get(\"gremlin-groovy\").\n-                    plugins.get(ScriptFileGremlinPlugin.class.getName()).\n-                    put(\"files\", ((List<String>) overridenSettings.scriptEngines\n-                            .get(\"gremlin-groovy\").plugins.get(ScriptFileGremlinPlugin.class.getName()).get(\"files\")).stream()\n-                            .map(s -> new File(s).isAbsolute() ? s : homeDir + s.substring(s.lastIndexOf(File.separator)))\n-                            .collect(Collectors.toList()));\n+        final Map<String, Map<String, Object>> plugins;\n+        final Map<String, Object> scriptFileGremlinPlugin;\n+        final File homeDir;\n+\n+        homeDir = new File( getBuildDir(), \"../src/test/scripts\" );\n+\n+        plugins = overridenSettings.scriptEngines.get(\"gremlin-groovy\").plugins;\n+        scriptFileGremlinPlugin = plugins.get(ScriptFileGremlinPlugin.class.getName());\n+\n+        if (scriptFileGremlinPlugin != null) {\n+            scriptFileGremlinPlugin\n+                .put(\"files\",\n+                     ((List<String>) scriptFileGremlinPlugin.get(\"files\")).stream()\n+                          .map(s -> new File(s))\n+                          .map(f -> f.isAbsolute() ? f\n+                                                   : new File(relocateFile( homeDir, f)))\n+                          .map(f -> Storage.toPath(f))\n+                          .collect(Collectors.toList()));\n         }\n \n         overridenSettings.graphs = overridenSettings.graphs.entrySet().stream()\n                 .map(kv -> {\n-                    kv.setValue(homeDir + kv.getValue().substring(kv.getValue().lastIndexOf(File.separator)));\n+                    kv.setValue(relocateFile( homeDir, new File(kv.getValue())));\n                     return kv;\n                 }).collect(Collectors.toMap(Map.Entry::getKey, Map.Entry::getValue));\n     }\n+\n+    /**\n+     * Strip the directories from the configured filePath, replace them with homeDir, this way relocating\n+     * the files\n+     *\n+     * @param homeDir\n+     * @param filePath absolute or relative file path\n+     * @return the absolute storage path of the relocated file\n+     */\n+    private static String relocateFile(final File homeDir, File filePath) {\n+      final String plainFileName = filePath.getName();\n+\n+      return Storage.toPath(new File(homeDir, plainFileName));\n+    }\n+\n+    private static File getBuildDir() {\n+      String result;\n+\n+      result = System.getProperty(\"build.dir\");\n+      assertNotNull(\"Expected base.dir system property is set to the project's target directory\", result);\n+\n+      return new File(result);\n+    }\n }",
                "deletions": 14
            },
            {
                "sha": "755d56b6bae181ec13beb4de92696c8d0471a190",
                "filename": "gremlin-server/src/test/java/org/apache/tinkerpop/gremlin/util/Log4jRecordingAppender.java",
                "blob_url": "https://github.com/apache/tinkerpop/blob/1088cd9be6ecdcb37bee357a783f01f01bdc366a/gremlin-server/src/test/java/org/apache/tinkerpop/gremlin/util/Log4jRecordingAppender.java",
                "raw_url": "https://github.com/apache/tinkerpop/raw/1088cd9be6ecdcb37bee357a783f01f01bdc366a/gremlin-server/src/test/java/org/apache/tinkerpop/gremlin/util/Log4jRecordingAppender.java",
                "status": "modified",
                "changes": 22,
                "additions": 16,
                "contents_url": "https://api.github.com/repos/apache/tinkerpop/contents/gremlin-server/src/test/java/org/apache/tinkerpop/gremlin/util/Log4jRecordingAppender.java?ref=1088cd9be6ecdcb37bee357a783f01f01bdc366a",
                "patch": "@@ -18,14 +18,15 @@\n  */\n package org.apache.tinkerpop.gremlin.util;\n \n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.regex.Pattern;\n+\n import org.apache.log4j.AppenderSkeleton;\n import org.apache.log4j.Level;\n import org.apache.log4j.PatternLayout;\n import org.apache.log4j.spi.LoggingEvent;\n \n-import java.util.ArrayList;\n-import java.util.List;\n-\n /**\n  * Provides a way to gather logging events for purpose of testing log output.\n  *\n@@ -37,7 +38,7 @@\n \n     public Log4jRecordingAppender() {\n         super();\n-        setLayout(new PatternLayout(\"%p - %m%n\"));\n+        setLayout(new PatternLayout(\"%p - %m%n\")); // note the EOLN char(s) appended\n     }\n \n     @Override\n@@ -63,9 +64,18 @@ public void clear() {\n         messages.clear();\n     }\n \n+    /**\n+     * @param regex not null\n+     * @return true if there is a substring of a message matching the regular expression, where:\n+     *         . matches also the EOLN char(s) defined in the layout.\n+     *         $ matches the end of the string\n+     */\n     public boolean logContainsAny(final String regex) {\n-        // chop off the line feed so that the regex doesn't have to account for that\n-        return messages.stream().anyMatch(m -> m.substring(0,m.length() - 1).matches(regex));\n+        Pattern pattern;\n+\n+        pattern = Pattern.compile( regex, Pattern.DOTALL );\n+\n+        return messages.stream().anyMatch(m -> pattern.matcher( m ).find());\n     }\n \n     public boolean logContainsAny(final String loggerName, final Level level, final String fragment) {",
                "deletions": 6
            },
            {
                "sha": "9f7fa1d5a39a2fffc1d1dbdd4afe66a93c3a4eb1",
                "filename": "gremlin-test/pom.xml",
                "blob_url": "https://github.com/apache/tinkerpop/blob/1088cd9be6ecdcb37bee357a783f01f01bdc366a/gremlin-test/pom.xml",
                "raw_url": "https://github.com/apache/tinkerpop/raw/1088cd9be6ecdcb37bee357a783f01f01bdc366a/gremlin-test/pom.xml",
                "status": "modified",
                "changes": 6,
                "additions": 6,
                "contents_url": "https://api.github.com/repos/apache/tinkerpop/contents/gremlin-test/pom.xml?ref=1088cd9be6ecdcb37bee357a783f01f01bdc366a",
                "patch": "@@ -31,6 +31,12 @@ limitations under the License.\n             <artifactId>gremlin-core</artifactId>\n             <version>${project.version}</version>\n         </dependency>\n+        <dependency>\n+            <groupId>org.apache.tinkerpop</groupId>\n+            <artifactId>gremlin-core</artifactId>\n+            <version>${project.version}</version>\n+            <classifier>tests</classifier>\n+        </dependency>\n         <dependency>\n             <groupId>commons-io</groupId>\n             <artifactId>commons-io</artifactId>",
                "deletions": 0
            },
            {
                "sha": "cac8ffc38de4ab284b5c1071fda4c16467e8ac42",
                "filename": "gremlin-test/src/main/java/org/apache/tinkerpop/gremlin/GraphProvider.java",
                "blob_url": "https://github.com/apache/tinkerpop/blob/1088cd9be6ecdcb37bee357a783f01f01bdc366a/gremlin-test/src/main/java/org/apache/tinkerpop/gremlin/GraphProvider.java",
                "raw_url": "https://github.com/apache/tinkerpop/raw/1088cd9be6ecdcb37bee357a783f01f01bdc366a/gremlin-test/src/main/java/org/apache/tinkerpop/gremlin/GraphProvider.java",
                "status": "modified",
                "changes": 3,
                "additions": 2,
                "contents_url": "https://api.github.com/repos/apache/tinkerpop/contents/gremlin-test/src/main/java/org/apache/tinkerpop/gremlin/GraphProvider.java?ref=1088cd9be6ecdcb37bee357a783f01f01bdc366a",
                "patch": "@@ -286,9 +286,10 @@ default public Configuration newGraphConfiguration(final String graphName,\n      * for tests (e.g. graphs that persist data to disk). Typically, there is no need to override the default\n      * behavior of this method and if it is overridden, it is usually best to continue to use the {@link TestHelper}\n      * to produce the working directory as it will create the path in the appropriate build directories.\n+     * @return UNIX-formatted absolute directory path\n      */\n     public default String getWorkingDirectory() {\n-        return TestHelper.makeTestDataPath(this.getClass(), \"graph-provider-data\").getAbsolutePath();\n+        return TestHelper.makeTestDataDirectory(this.getClass(), \"graph-provider-data\");\n     }\n \n     /**",
                "deletions": 1
            },
            {
                "sha": "2f007909e71d2e388b5bac17828612a1a7798962",
                "filename": "gremlin-test/src/main/java/org/apache/tinkerpop/gremlin/TestHelper.java",
                "blob_url": "https://github.com/apache/tinkerpop/blob/1088cd9be6ecdcb37bee357a783f01f01bdc366a/gremlin-test/src/main/java/org/apache/tinkerpop/gremlin/TestHelper.java",
                "raw_url": "https://github.com/apache/tinkerpop/raw/1088cd9be6ecdcb37bee357a783f01f01bdc366a/gremlin-test/src/main/java/org/apache/tinkerpop/gremlin/TestHelper.java",
                "status": "modified",
                "changes": 147,
                "additions": 15,
                "contents_url": "https://api.github.com/repos/apache/tinkerpop/contents/gremlin-test/src/main/java/org/apache/tinkerpop/gremlin/TestHelper.java?ref=1088cd9be6ecdcb37bee357a783f01f01bdc366a",
                "patch": "@@ -18,6 +18,16 @@\n  */\n package org.apache.tinkerpop.gremlin;\n \n+import static org.hamcrest.CoreMatchers.is;\n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertFalse;\n+import static org.junit.Assume.assumeThat;\n+\n+import java.io.File;\n+import java.util.Iterator;\n+import java.util.List;\n+import java.util.Random;\n+\n import org.apache.tinkerpop.gremlin.structure.Direction;\n import org.apache.tinkerpop.gremlin.structure.Edge;\n import org.apache.tinkerpop.gremlin.structure.Graph;\n@@ -30,34 +40,17 @@\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n \n-import java.io.File;\n-import java.io.FileOutputStream;\n-import java.io.IOException;\n-import java.io.InputStream;\n-import java.net.URL;\n-import java.util.Iterator;\n-import java.util.List;\n-import java.util.Random;\n-import java.util.stream.Collectors;\n-import java.util.stream.Stream;\n-\n-import static org.hamcrest.CoreMatchers.is;\n-import static org.junit.Assert.assertEquals;\n-import static org.junit.Assert.assertFalse;\n-import static org.junit.Assume.assumeThat;\n-\n /**\n  * Utility methods for test development.\n  *\n  * @author Stephen Mallette (http://stephen.genoprime.com)\n+ *\n+ * NOTE: This class duplicates the TestHelper class from gremlin-core. One of them must be removed.\n  */\n-public final class TestHelper {\n+public final class TestHelper extends CoreTestHelper {\n     private static final Logger logger = LoggerFactory.getLogger(TestHelper.class);\n \n     public static final Random RANDOM;\n-    private static final String SEP = File.separator;\n-    private static final char URL_SEP = '/';\n-    public static final String TEST_DATA_RELATIVE_DIR = \"test-case-data\";\n \n     static {\n         final long seed = Long.parseLong(System.getProperty(\"testSeed\", String.valueOf(System.currentTimeMillis())));\n@@ -68,121 +61,11 @@\n     private TestHelper() {\n     }\n \n-    /**\n-     * Creates a {@link File} reference that points to a directory relative to the supplied class in the\n-     * {@code /target} directory. Each {@code childPath} passed introduces a new sub-directory and all are placed\n-     * below the {@link #TEST_DATA_RELATIVE_DIR}.  For example, calling this method with \"a\", \"b\", and \"c\" as the\n-     * {@code childPath} arguments would yield a relative directory like: {@code test-case-data/clazz/a/b/c}. It is\n-     * a good idea to use the test class for the {@code clazz} argument so that it's easy to find the data if\n-     * necessary after test execution.\n-     */\n-    public static File makeTestDataPath(final Class clazz, final String... childPath) {\n-        final File root = getRootOfBuildDirectory(clazz);\n-        final List<String> cleanedPaths = Stream.of(childPath).map(TestHelper::cleanPathSegment).collect(Collectors.toList());\n-\n-        // use the class name in the directory structure\n-        cleanedPaths.add(0, cleanPathSegment(clazz.getSimpleName()));\n-\n-        final File f = new File(root, TEST_DATA_RELATIVE_DIR + SEP + String.join(SEP, cleanedPaths));\n-        if (!f.exists()) f.mkdirs();\n-        return f;\n-    }\n-\n     public static String convertToRelative(final Class clazz, final File f) {\n-        final File root = TestHelper.getRootOfBuildDirectory(clazz).getParentFile().getAbsoluteFile();\n-        return root.toURI().relativize(f.getAbsoluteFile().toURI()).toString();\n+        final File root = getRootOfBuildDirectory(clazz).getParentFile();\n+        return root.toURI().relativize(f.toURI()).toString();\n     }\n \n-    /**\n-     * Internally calls {@link #makeTestDataPath(Class, String...)} but returns the path as a string with the system\n-     * separator appended to the end.\n-     */\n-    public static String makeTestDataDirectory(final Class clazz, final String... childPath) {\n-        return makeTestDataPath(clazz, childPath).getAbsolutePath() + SEP;\n-    }\n-\n-    /**\n-     * Gets and/or creates the root of the test data directory.  This  method is here as a convenience and should not\n-     * be used to store test data.  Use {@link #makeTestDataPath(Class, String...)} instead.\n-     */\n-    public static File getRootOfBuildDirectory(final Class clazz) {\n-        // build.dir gets sets during runs of tests with maven via the surefire configuration in the pom.xml\n-        // if that is not set as an environment variable, then the path is computed based on the location of the\n-        // requested class.  the computed version at least as far as intellij is concerned comes drops it into\n-        // /target/test-classes.  the build.dir had to be added because maven doesn't seem to like a computed path\n-        // as it likes to find that path in the .m2 directory and other weird places......\n-        final String buildDirectory = System.getProperty(\"build.dir\");\n-        final File root = null == buildDirectory ? new File(computePath(clazz)).getParentFile() : new File(buildDirectory);\n-        if (!root.exists()) root.mkdirs();\n-        return root;\n-    }\n-\n-    private static String computePath(final Class clazz) {\n-        final String clsUri = clazz.getName().replace('.', URL_SEP) + \".class\";\n-        final URL url = clazz.getClassLoader().getResource(clsUri);\n-        String clsPath;\n-\t\ttry {\n-\t\t\tclsPath = new File(url.toURI()).getAbsolutePath();\n-\t\t} catch (Exception e) {\n-\t\t\tthrow new RuntimeException(\"Unable to computePath for \" + clazz, e);\n-\t\t}\n-        return clsPath.substring(0, clsPath.length() - clsUri.length());\n-    }\n-\n-    /**\n-     * Creates a {@link File} reference in the path returned from {@link TestHelper#makeTestDataPath} in a subdirectory\n-     * called {@code temp}.\n-     */\n-    public static File generateTempFile(final Class clazz, final String fileName, final String fileNameSuffix) throws IOException {\n-        final File path = makeTestDataPath(clazz, \"temp\");\n-        if (!path.exists()) path.mkdirs();\n-        return File.createTempFile(fileName, fileNameSuffix, path);\n-    }\n-\n-    /**\n-     * Copies a file stored as part of a resource to the file system in the path returned from\n-     * {@link TestHelper#makeTestDataPath} in a subdirectory called {@code temp/resources}.\n-     */\n-    public static File generateTempFileFromResource(final Class resourceClass, final String resourceName, final String extension) throws IOException {\n-        return generateTempFileFromResource(resourceClass, resourceClass, resourceName, extension);\n-    }\n-\n-    /**\n-     * Copies a file stored as part of a resource to the file system in the path returned from\n-     * {@link TestHelper#makeTestDataPath} in a subdirectory called {@code temp/resources}.\n-     */\n-    public static File generateTempFileFromResource(final Class graphClass, final Class resourceClass, final String resourceName, final String extension) throws IOException {\n-        final File temp = makeTestDataPath(graphClass, \"resources\");\n-        if (!temp.exists()) temp.mkdirs();\n-        final File tempFile = new File(temp, resourceName + extension);\n-        final FileOutputStream outputStream = new FileOutputStream(tempFile);\n-        int data;\n-        final InputStream inputStream = resourceClass.getResourceAsStream(resourceName);\n-        while ((data = inputStream.read()) != -1) {\n-            outputStream.write(data);\n-        }\n-        outputStream.close();\n-        inputStream.close();\n-        return tempFile;\n-    }\n-\n-    /**\n-     * Takes a class and converts its package name to a path that can be used to access a resource in that package.\n-     */\n-    public static String convertPackageToResourcePath(final Class clazz) {\n-        final String packageName = clazz.getPackage().getName();\n-        return String.format(\"/%s/\", packageName.replaceAll(\"\\\\.\", \"\\\\/\"));\n-    }\n-\n-    /**\n-     * Removes characters that aren't acceptable in a file path (mostly for windows).\n-     */\n-    public static String cleanPathSegment(final String toClean) {\n-        final String cleaned = toClean.replaceAll(\"[.\\\\\\\\/:*?\\\"<>|\\\\[\\\\]\\\\(\\\\)]\", \"\");\n-        if (cleaned.length() == 0)\n-            throw new IllegalStateException(\"Path segment \" + toClean + \" has not valid characters and is thus empty\");\n-        return cleaned;\n-    }\n \n     /**\n      * Used at the start of a test to make it one that should only be executed when the {@code assertNonDeterministic}",
                "deletions": 132
            },
            {
                "sha": "3ea1e79961e58d9680d5d38a5b394193f37e4512",
                "filename": "gremlin-test/src/main/java/org/apache/tinkerpop/gremlin/jsr223/BindingsScriptEngineTest.java",
                "blob_url": "https://github.com/apache/tinkerpop/blob/1088cd9be6ecdcb37bee357a783f01f01bdc366a/gremlin-test/src/main/java/org/apache/tinkerpop/gremlin/jsr223/BindingsScriptEngineTest.java",
                "raw_url": "https://github.com/apache/tinkerpop/raw/1088cd9be6ecdcb37bee357a783f01f01bdc366a/gremlin-test/src/main/java/org/apache/tinkerpop/gremlin/jsr223/BindingsScriptEngineTest.java",
                "status": "modified",
                "changes": 3,
                "additions": 2,
                "contents_url": "https://api.github.com/repos/apache/tinkerpop/contents/gremlin-test/src/main/java/org/apache/tinkerpop/gremlin/jsr223/BindingsScriptEngineTest.java?ref=1088cd9be6ecdcb37bee357a783f01f01bdc366a",
                "patch": "@@ -19,6 +19,7 @@\n package org.apache.tinkerpop.gremlin.jsr223;\n \n import org.apache.tinkerpop.gremlin.TestHelper;\n+import org.apache.tinkerpop.gremlin.structure.io.Storage;\n import org.junit.Test;\n \n import javax.script.Bindings;\n@@ -99,7 +100,7 @@ public void shouldExtractGlobalBindingsAfterScriptExecution() throws Exception {\n \n         final File scriptFile = TestHelper.generateTempFileFromResource(BindingsScriptEngineTest.class, \"bindings-init.groovy\", \".groovy\");\n         final List<String> files = new ArrayList<>();\n-        files.add(scriptFile.getAbsolutePath());\n+        files.add(Storage.toPath(scriptFile));\n         manager.addPlugin(ScriptFileGremlinPlugin.build().files(files).create());\n \n         final GremlinScriptEngine engine = manager.getEngineByName(ENGINE_TO_TEST);",
                "deletions": 1
            },
            {
                "sha": "47eb1eb7b06deb11d628547c559c5a0225f728f8",
                "filename": "gremlin-test/src/main/java/org/apache/tinkerpop/gremlin/process/computer/bulkloading/BulkLoaderVertexProgramTest.java",
                "blob_url": "https://github.com/apache/tinkerpop/blob/1088cd9be6ecdcb37bee357a783f01f01bdc366a/gremlin-test/src/main/java/org/apache/tinkerpop/gremlin/process/computer/bulkloading/BulkLoaderVertexProgramTest.java",
                "raw_url": "https://github.com/apache/tinkerpop/raw/1088cd9be6ecdcb37bee357a783f01f01bdc366a/gremlin-test/src/main/java/org/apache/tinkerpop/gremlin/process/computer/bulkloading/BulkLoaderVertexProgramTest.java",
                "status": "modified",
                "changes": 2,
                "additions": 1,
                "contents_url": "https://api.github.com/repos/apache/tinkerpop/contents/gremlin-test/src/main/java/org/apache/tinkerpop/gremlin/process/computer/bulkloading/BulkLoaderVertexProgramTest.java?ref=1088cd9be6ecdcb37bee357a783f01f01bdc366a",
                "patch": "@@ -54,7 +54,7 @@\n  */\n public class BulkLoaderVertexProgramTest extends AbstractGremlinProcessTest {\n \n-    final static String TINKERGRAPH_LOCATION = TestHelper.makeTestDataDirectory(BulkLoaderVertexProgramTest.class) + \"tinkertest.kryo\";\n+    final static String TINKERGRAPH_LOCATION = TestHelper.makeTestDataFile(BulkLoaderVertexProgramTest.class, \"tinkertest.kryo\");\n \n     private BulkLoader getBulkLoader(final BulkLoaderVertexProgram blvp) throws Exception {\n         final Field field = BulkLoaderVertexProgram.class.getDeclaredField(\"bulkLoader\");",
                "deletions": 1
            },
            {
                "sha": "e882505d2574dc92c06b2aa0c37fde29c9d400c6",
                "filename": "gremlin-test/src/main/java/org/apache/tinkerpop/gremlin/structure/io/IoGraphTest.java",
                "blob_url": "https://github.com/apache/tinkerpop/blob/1088cd9be6ecdcb37bee357a783f01f01bdc366a/gremlin-test/src/main/java/org/apache/tinkerpop/gremlin/structure/io/IoGraphTest.java",
                "raw_url": "https://github.com/apache/tinkerpop/raw/1088cd9be6ecdcb37bee357a783f01f01bdc366a/gremlin-test/src/main/java/org/apache/tinkerpop/gremlin/structure/io/IoGraphTest.java",
                "status": "modified",
                "changes": 8,
                "additions": 4,
                "contents_url": "https://api.github.com/repos/apache/tinkerpop/contents/gremlin-test/src/main/java/org/apache/tinkerpop/gremlin/structure/io/IoGraphTest.java?ref=1088cd9be6ecdcb37bee357a783f01f01bdc366a",
                "patch": "@@ -106,11 +106,11 @@ public void shouldReadWriteClassic() throws Exception {\n     public void shouldReadWriteClassicToFileWithHelpers() throws Exception {\n         final File f = TestHelper.generateTempFile(this.graph.getClass(), name.getMethodName(), fileExtension);\n         try {\n-            graph.io(ioBuilderToTest).writeGraph(f.getAbsolutePath());\n+            graph.io(ioBuilderToTest).writeGraph(Storage.toPath(f));\n \n             final Configuration configuration = graphProvider.newGraphConfiguration(\"readGraph\", this.getClass(), name.getMethodName(), LoadGraphWith.GraphData.CLASSIC);\n             final Graph g1 = graphProvider.openTestGraph(configuration);\n-            g1.io(ioBuilderToTest).readGraph(f.getAbsolutePath());\n+            g1.io(ioBuilderToTest).readGraph(Storage.toPath(f));\n \n             IoTest.assertClassicGraph(g1, assertDouble, lossyForId);\n \n@@ -171,11 +171,11 @@ public void shouldReadWriteModern() throws Exception {\n     public void shouldReadWriteModernToFileWithHelpers() throws Exception {\n         final File f = TestHelper.generateTempFile(this.graph.getClass(), name.getMethodName(), fileExtension);\n         try {\n-            graph.io(ioBuilderToTest).writeGraph(f.getAbsolutePath());\n+            graph.io(ioBuilderToTest).writeGraph(Storage.toPath(f));\n \n             final Configuration configuration = graphProvider.newGraphConfiguration(\"readGraph\", this.getClass(), name.getMethodName(), LoadGraphWith.GraphData.MODERN);\n             final Graph g1 = graphProvider.openTestGraph(configuration);\n-            g1.io(ioBuilderToTest).readGraph(f.getAbsolutePath());\n+            g1.io(ioBuilderToTest).readGraph(Storage.toPath(f));\n \n             // modern uses double natively so always assert as such\n             IoTest.assertModernGraph(g1, true, lossyForId);",
                "deletions": 4
            },
            {
                "sha": "b0d1c96dc373bbaa158577718e6c9fa5e0f7d6aa",
                "filename": "gremlin-test/src/main/java/org/apache/tinkerpop/gremlin/structure/io/IoTest.java",
                "blob_url": "https://github.com/apache/tinkerpop/blob/1088cd9be6ecdcb37bee357a783f01f01bdc366a/gremlin-test/src/main/java/org/apache/tinkerpop/gremlin/structure/io/IoTest.java",
                "raw_url": "https://github.com/apache/tinkerpop/raw/1088cd9be6ecdcb37bee357a783f01f01bdc366a/gremlin-test/src/main/java/org/apache/tinkerpop/gremlin/structure/io/IoTest.java",
                "status": "modified",
                "changes": 31,
                "additions": 19,
                "contents_url": "https://api.github.com/repos/apache/tinkerpop/contents/gremlin-test/src/main/java/org/apache/tinkerpop/gremlin/structure/io/IoTest.java?ref=1088cd9be6ecdcb37bee357a783f01f01bdc366a",
                "patch": "@@ -155,7 +155,7 @@ public void shouldReadGraphMLUnorderedElements() throws IOException {\n         @FeatureRequirement(featureClass = EdgePropertyFeatures.class, feature = EdgePropertyFeatures.FEATURE_FLOAT_VALUES)\n         public void shouldReadGraphMLWithAllSupportedDataTypes() throws IOException {\n             final GraphReader reader = GraphMLReader.build().create();\n-            try (final InputStream stream = IoTest.class.getResourceAsStream(TestHelper.convertPackageToResourcePath(GraphMLResourceAccess.class) + \"graph-types.xml\")) {\n+            try (final InputStream stream = getResourceAsStream(GraphMLResourceAccess.class, \"graph-types.xml\")) {\n                 reader.readGraph(stream, graph);\n             }\n \n@@ -181,7 +181,7 @@ public void shouldReadGraphMLWithAllSupportedDataTypes() throws IOException {\n         @FeatureRequirement(featureClass = EdgePropertyFeatures.class, feature = EdgePropertyFeatures.FEATURE_FLOAT_VALUES)\n         public void shouldReadGraphMLWithoutStrictOption() throws IOException {\n             final GraphReader reader = GraphMLReader.build().strict(false).create();\n-            try (final InputStream stream = IoTest.class.getResourceAsStream(TestHelper.convertPackageToResourcePath(GraphMLResourceAccess.class) + \"graph-types-bad.xml\")) {\n+            try (final InputStream stream = getResourceAsStream(GraphMLResourceAccess.class, \"graph-types-bad.xml\")) {\n                 reader.readGraph(stream, graph);\n             }\n \n@@ -200,7 +200,7 @@ public void shouldReadGraphMLWithoutStrictOption() throws IOException {\n         @FeatureRequirement(featureClass = Graph.Features.VertexFeatures.class, feature = Graph.Features.VertexFeatures.FEATURE_ADD_VERTICES)\n         public void shouldReadGraphMLWithoutEdgeIds() throws IOException {\n             final GraphReader reader = GraphMLReader.build().strict(false).create();\n-            try (final InputStream stream = IoTest.class.getResourceAsStream(TestHelper.convertPackageToResourcePath(GraphMLResourceAccess.class) + \"graph-no-edge-ids.xml\")) {\n+            try (final InputStream stream = getResourceAsStream(GraphMLResourceAccess.class, \"graph-no-edge-ids.xml\")) {\n                 reader.readGraph(stream, graph);\n             }\n             assertEquals(1, IteratorUtils.count(graph.edges()));\n@@ -220,7 +220,7 @@ public void shouldReadGraphMLWithoutEdgeIds() throws IOException {\n         @FeatureRequirement(featureClass = EdgePropertyFeatures.class, feature = EdgePropertyFeatures.FEATURE_FLOAT_VALUES)\n         public void shouldReadGraphMLWithStrictOption() throws IOException {\n             final GraphReader reader = GraphMLReader.build().strict(true).create();\n-            try (final InputStream stream = IoTest.class.getResourceAsStream(TestHelper.convertPackageToResourcePath(GraphMLResourceAccess.class) + \"graph-types-bad.xml\")) {\n+            try (final InputStream stream = getResourceAsStream(GraphMLResourceAccess.class, \"graph-types-bad.xml\")) {\n                 reader.readGraph(stream, graph);\n             }\n         }\n@@ -242,7 +242,7 @@ public void shouldWriteNormalizedGraphML() throws Exception {\n                 final GraphMLWriter w = GraphMLWriter.build().normalize(true).create();\n                 w.writeGraph(bos, graph);\n \n-                final String expected = streamToString(IoTest.class.getResourceAsStream(TestHelper.convertPackageToResourcePath(GraphMLResourceAccess.class) + \"tinkerpop-classic-normalized.xml\"));\n+                final String expected = streamToString(getResourceAsStream(GraphMLResourceAccess.class, \"tinkerpop-classic-normalized.xml\"));\n                 assertEquals(expected.replace(\"\\n\", \"\").replace(\"\\r\", \"\"), bos.toString().replace(\"\\n\", \"\").replace(\"\\r\", \"\"));\n             }\n         }\n@@ -337,7 +337,7 @@ public void shouldReadWriteSelfLoopingEdges() throws Exception {\n         @FeatureRequirement(featureClass = EdgePropertyFeatures.class, feature = EdgePropertyFeatures.FEATURE_FLOAT_VALUES)\n         public void shouldTransformGraphMLV2ToV3ViaXSLT() throws Exception {\n             final InputStream stylesheet = Thread.currentThread().getContextClassLoader().getResourceAsStream(\"tp2-to-tp3-graphml.xslt\");\n-            final InputStream datafile = IoTest.class.getResourceAsStream(TestHelper.convertPackageToResourcePath(GraphMLResourceAccess.class) + \"tinkerpop-classic-tp2.xml\");\n+            final InputStream datafile = getResourceAsStream(GraphMLResourceAccess.class, \"tinkerpop-classic-tp2.xml\");\n             final ByteArrayOutputStream output = new ByteArrayOutputStream();\n \n             final TransformerFactory tFactory = TransformerFactory.newInstance();\n@@ -421,7 +421,7 @@ public void shouldWriteNormalizedGraphSON() throws Exception {\n                 final GraphSONWriter w = graph.io(graphson).writer().mapper(mapper).create();\n                 w.writeGraph(bos, graph);\n \n-                final String expected = streamToString(IoTest.class.getResourceAsStream(TestHelper.convertPackageToResourcePath(GraphSONResourceAccess.class) + \"tinkerpop-classic-normalized-v1d0.json\"));\n+                final String expected = streamToString(getResourceAsStream(GraphSONResourceAccess.class, \"tinkerpop-classic-normalized-v1d0.json\"));\n                 assertEquals(expected.replace(\"\\n\", \"\").replace(\"\\r\", \"\"), bos.toString().replace(\"\\n\", \"\").replace(\"\\r\", \"\"));\n             }\n         }\n@@ -535,7 +535,7 @@ public void shouldReadWriteSelfLoopingEdges() throws Exception {\n         @FeatureRequirement(featureClass = EdgePropertyFeatures.class, feature = EdgePropertyFeatures.FEATURE_FLOAT_VALUES)\n         public void shouldReadLegacyGraphSON() throws IOException {\n             final GraphReader reader = LegacyGraphSONReader.build().create();\n-            try (final InputStream stream = IoTest.class.getResourceAsStream(TestHelper.convertPackageToResourcePath(GraphSONResourceAccess.class) + \"tinkerpop-classic-legacy.json\")) {\n+            try (final InputStream stream = getResourceAsStream(GraphSONResourceAccess.class, \"tinkerpop-classic-legacy.json\")) {\n                 reader.readGraph(stream, graph);\n             }\n \n@@ -570,7 +570,7 @@ public void shouldWriteNormalizedGraphSON() throws Exception {\n                 final GraphSONWriter w = graph.io(graphson).writer().mapper(mapper).create();\n                 w.writeGraph(bos, graph);\n \n-                final String expected = streamToString(IoTest.class.getResourceAsStream(TestHelper.convertPackageToResourcePath(GraphSONResourceAccess.class) + \"tinkerpop-classic-normalized-v2d0.json\"));\n+                final String expected = streamToString(getResourceAsStream(GraphSONResourceAccess.class, \"tinkerpop-classic-normalized-v2d0.json\"));\n                 assertEquals(expected.replace(\"\\n\", \"\").replace(\"\\r\", \"\"), bos.toString().replace(\"\\n\", \"\").replace(\"\\r\", \"\"));\n             }\n         }\n@@ -693,7 +693,7 @@ public void shouldWriteNormalizedGraphSON() throws Exception {\n                 final GraphSONWriter w = graph.io(graphson).writer().mapper(mapper).create();\n                 w.writeGraph(bos, graph);\n \n-                final String expected = streamToString(IoTest.class.getResourceAsStream(TestHelper.convertPackageToResourcePath(GraphSONResourceAccess.class) + \"tinkerpop-classic-normalized-v3d0.json\"));\n+                final String expected = streamToString(getResourceAsStream(GraphSONResourceAccess.class, \"tinkerpop-classic-normalized-v3d0.json\"));\n                 assertEquals(expected.replace(\"\\n\", \"\").replace(\"\\r\", \"\"), bos.toString().replace(\"\\n\", \"\").replace(\"\\r\", \"\"));\n             }\n         }\n@@ -1323,18 +1323,25 @@ private static void validateXmlAgainstGraphMLXsd(final File file) throws Excepti\n         final Source xmlFile = new StreamSource(file);\n         final SchemaFactory schemaFactory = SchemaFactory\n                 .newInstance(XMLConstants.W3C_XML_SCHEMA_NS_URI);\n-        final Schema schema = schemaFactory.newSchema(IoTest.class.getResource(TestHelper.convertPackageToResourcePath(GraphMLResourceAccess.class) + \"graphml-1.1.xsd\"));\n+        final Schema schema = schemaFactory.newSchema(new StreamSource(getResourceAsStream(GraphMLResourceAccess.class, \"graphml-1.1.xsd\")));\n         final Validator validator = schema.newValidator();\n         validator.validate(xmlFile);\n     }\n \n     private static void readGraphMLIntoGraph(final Graph g, final String file) throws IOException {\n         final GraphReader reader = GraphMLReader.build().create();\n-        try (final InputStream stream = IoTest.class.getResourceAsStream(TestHelper.convertPackageToResourcePath(GraphMLResourceAccess.class) + file)) {\n+        try (final InputStream stream = getResourceAsStream( GraphMLResourceAccess.class, file )) {\n             reader.readGraph(stream, g);\n         }\n     }\n \n+    public static InputStream getResourceAsStream(Class<?> resourceClass, final String file) {\n+      return IoTest.class.getResourceAsStream( \"/\"\n+                                               + resourceClass.getPackage().getName().replaceAll(\"\\\\.\", \"/\")\n+                                               + \"/\"\n+                                               + file);\n+    }\n+\n     private static String streamToString(final InputStream in) throws IOException {\n         final Writer writer = new StringWriter();\n         final char[] buffer = new char[1024];",
                "deletions": 12
            },
            {
                "sha": "ffcef284008af5d8a94ae8e9408b75060a09e11a",
                "filename": "hadoop-gremlin/README.md",
                "blob_url": "https://github.com/apache/tinkerpop/blob/1088cd9be6ecdcb37bee357a783f01f01bdc366a/hadoop-gremlin/README.md",
                "raw_url": "https://github.com/apache/tinkerpop/raw/1088cd9be6ecdcb37bee357a783f01f01bdc366a/hadoop-gremlin/README.md",
                "status": "added",
                "changes": 52,
                "additions": 52,
                "contents_url": "https://api.github.com/repos/apache/tinkerpop/contents/hadoop-gremlin/README.md?ref=1088cd9be6ecdcb37bee357a783f01f01bdc366a",
                "patch": "@@ -0,0 +1,52 @@\n+<!--\r\n+ Licensed to the Apache Software Foundation (ASF) under one\r\n+ or more contributor license agreements.  See the NOTICE file\r\n+ distributed with this work for additional information\r\n+ regarding copyright ownership.  The ASF licenses this file\r\n+ to you under the Apache License, Version 2.0 (the\r\n+ \"License\"); you may not use this file except in compliance\r\n+ with the License.  You may obtain a copy of the License at\r\n+\r\n+ http://www.apache.org/licenses/LICENSE-2.0\r\n+\r\n+ Unless required by applicable law or agreed to in writing,\r\n+ software distributed under the License is distributed on an\r\n+ \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n+ KIND, either express or implied.  See the License for the\r\n+ specific language governing permissions and limitations\r\n+ under the License.\r\n+-->\r\n+\r\n+Prerequisites\r\n+=============\r\n+\r\n+Follow the [installation procedure](https://dev.to/awwsmm/installing-and-running-hadoop-and-spark-on-windows-33kc) to set up:\r\n+\r\n+* Hadoop 2.7.2 installed [from Apache Hadoop download archive](http://archive.apache.org/dist/hadoop/common/hadoop-2.7.2/hadoop-2.7.2.tar.gz)\r\n+* Spark 2.4.3 installed [from Apache Spark project](https://spark.apache.org/downloads.html)\r\n+* For Windows platforms needed is also specific integration:\r\n+    * [download from](https://github.com/steveloughran/winutils)\r\n+    * [more details](https://cwiki.apache.org/confluence/display/HADOOP2/WindowsProblems)\r\n+\r\n+Set up HADOOP_GREMLIN_LIBS OS environment variable as of [TinkerPop Documentation](http://tinkerpop.apache.org/docs/current/reference/#hadoop-gremlin).\r\n+\r\n+NOTE: HADOOP_GREMLIN_LIBS=*<hadoop installation dir>*/share/hadoop/common/lib seems good enough\r\n+\r\n+\r\n+Environment Variables Set\r\n+--------------------------------\r\n+\r\n+The installation procedure should have set up the environment variables:\r\n+* HADOOP_HOME\r\n+* SPARK_HOME\r\n+* HADOOP_GREMLIN_LIBS\r\n+* PATH including the HADOOP_HOME and SPARK_HOME \r\n+\r\n+\r\n+Verify the installed versions\r\n+-----------------------------\r\n+\r\n+On the command line run:\r\n+\r\n+    hadoop version\r\n+    spark-shell --version\n\\ No newline at end of file",
                "deletions": 0
            },
            {
                "sha": "360049ba4691abc113fee39fc42010850bebcf06",
                "filename": "hadoop-gremlin/pom.xml",
                "blob_url": "https://github.com/apache/tinkerpop/blob/1088cd9be6ecdcb37bee357a783f01f01bdc366a/hadoop-gremlin/pom.xml",
                "raw_url": "https://github.com/apache/tinkerpop/raw/1088cd9be6ecdcb37bee357a783f01f01bdc366a/hadoop-gremlin/pom.xml",
                "status": "modified",
                "changes": 29,
                "additions": 29,
                "contents_url": "https://api.github.com/repos/apache/tinkerpop/contents/hadoop-gremlin/pom.xml?ref=1088cd9be6ecdcb37bee357a783f01f01bdc366a",
                "patch": "@@ -219,6 +219,35 @@ limitations under the License.\n                 <groupId>org.apache.maven.plugins</groupId>\n                 <artifactId>maven-failsafe-plugin</artifactId>\n             </plugin>\n+\n+            <plugin>\n+                <groupId>org.apache.maven.plugins</groupId>\n+                <artifactId>maven-enforcer-plugin</artifactId>\n+                <executions>\n+                    <execution>\n+                        <id>check-hadoop-installed</id>\n+                        <phase>test-compile</phase>\n+                        <goals>\n+                            <goal>enforce</goal>\n+                        </goals>\n+                        <configuration>\n+                            <rules>\n+                                <requireEnvironmentVariable>\n+                                     <level>WARN</level>\n+                                     <variableName>HADOOP_HOME</variableName>\n+                                     <message>Please install Hadoop ${hadoop.version} standalone and set HADOOP_HOME OS environment variable</message>\n+                                </requireEnvironmentVariable>\n+                                <requireEnvironmentVariable>\n+                                     <level>WARN</level>\n+                                     <variableName>HADOOP_GREMLIN_LIBS</variableName>\n+                                     <message>Please set HADOOP_GREMLIN_LIBS OS environment variable as of http://tinkerpop.apache.org/docs/current/reference/#hadoop-gremlin&#x000A;HADOOP_GREMLIN_LIBS=&lt;hadoop installation dir&gt;/share/hadoop/common/lib seems good enough\n+                                     </message>\n+                                </requireEnvironmentVariable>\n+                            </rules>\n+                        </configuration>\n+                    </execution>\n+                </executions>\n+            </plugin>\n         </plugins>\n     </build>\n </project>\n\\ No newline at end of file",
                "deletions": 0
            },
            {
                "sha": "b96e44d23932b7a1f4995d7e89c19dbd00baae3e",
                "filename": "hadoop-gremlin/src/main/java/org/apache/tinkerpop/gremlin/hadoop/Constants.java",
                "blob_url": "https://github.com/apache/tinkerpop/blob/1088cd9be6ecdcb37bee357a783f01f01bdc366a/hadoop-gremlin/src/main/java/org/apache/tinkerpop/gremlin/hadoop/Constants.java",
                "raw_url": "https://github.com/apache/tinkerpop/raw/1088cd9be6ecdcb37bee357a783f01f01bdc366a/hadoop-gremlin/src/main/java/org/apache/tinkerpop/gremlin/hadoop/Constants.java",
                "status": "modified",
                "changes": 22,
                "additions": 22,
                "contents_url": "https://api.github.com/repos/apache/tinkerpop/contents/hadoop-gremlin/src/main/java/org/apache/tinkerpop/gremlin/hadoop/Constants.java?ref=1088cd9be6ecdcb37bee357a783f01f01bdc366a",
                "patch": "@@ -31,8 +31,21 @@\n     private Constants() {\n     }\n \n+    /**\n+     * A key mapped to non-null, not empty UNIX-formatted file system path\n+     * @see #getGraphLocation(String)\n+     * @see #getMemoryLocation(String, String)\n+     */\n     public static final String GREMLIN_HADOOP_INPUT_LOCATION = \"gremlin.hadoop.inputLocation\";\n+\n+    /**\n+     * A key mapped to non-null, not empty UNIX-formatted file system path to store the graph, memory\n+     * and other files and directories, specific for Hadoop.\n+     * @see #getGraphLocation(String)\n+     * @see #getMemoryLocation(String, String)\n+     */\n     public static final String GREMLIN_HADOOP_OUTPUT_LOCATION = \"gremlin.hadoop.outputLocation\";\n+\n     public static final String GREMLIN_HADOOP_GRAPH_READER = \"gremlin.hadoop.graphReader\";\n     public static final String GREMLIN_HADOOP_GRAPH_WRITER = \"gremlin.hadoop.graphWriter\";\n     public static final String GREMLIN_HADOOP_GRAPH_READER_HAS_EDGES = \"gremlin.hadoop.graphReader.hasEdges\";\n@@ -65,10 +78,19 @@ private Constants() {\n     public static final String SPARK_KRYO_REGISTRATOR = \"spark.kryo.registrator\";\n     public static final String SPARK_KRYO_REGISTRATION_REQUIRED = \"spark.kryo.registrationRequired\";\n \n+    /**\n+     * @param location not null, not empty UNIX-formatted file system path\n+     * @return not empty UNIX-formatted file system path to the graph in the location, still compatible with Windows and java.io.File\n+     */\n     public static String getGraphLocation(final String location) {\n         return location.endsWith(\"/\") ? location + Constants.HIDDEN_G : location + \"/\" + Constants.HIDDEN_G;\n     }\n \n+    /**\n+     * @param location not null, not empty UNIX-formatted file system path\n+     * @param memoryKey not null, not empty\n+     * @return not empty UNIX-formatted file system path to the memory in the location, still compatible with Windows and java.io.File\n+     */\n     public static String getMemoryLocation(final String location, final String memoryKey) {\n         return location.endsWith(\"/\") ? location + memoryKey : location + \"/\" + memoryKey;\n     }",
                "deletions": 0
            },
            {
                "sha": "278fc507b7e99d0180952c33d0e8f183b8b5def6",
                "filename": "hadoop-gremlin/src/main/java/org/apache/tinkerpop/gremlin/hadoop/process/computer/AbstractHadoopGraphComputer.java",
                "blob_url": "https://github.com/apache/tinkerpop/blob/1088cd9be6ecdcb37bee357a783f01f01bdc366a/hadoop-gremlin/src/main/java/org/apache/tinkerpop/gremlin/hadoop/process/computer/AbstractHadoopGraphComputer.java",
                "raw_url": "https://github.com/apache/tinkerpop/raw/1088cd9be6ecdcb37bee357a783f01f01bdc366a/hadoop-gremlin/src/main/java/org/apache/tinkerpop/gremlin/hadoop/process/computer/AbstractHadoopGraphComputer.java",
                "status": "modified",
                "changes": 12,
                "additions": 8,
                "contents_url": "https://api.github.com/repos/apache/tinkerpop/contents/hadoop-gremlin/src/main/java/org/apache/tinkerpop/gremlin/hadoop/process/computer/AbstractHadoopGraphComputer.java?ref=1088cd9be6ecdcb37bee357a783f01f01bdc366a",
                "patch": "@@ -35,6 +35,7 @@\n import org.apache.tinkerpop.gremlin.process.traversal.Traversal;\n import org.apache.tinkerpop.gremlin.structure.Edge;\n import org.apache.tinkerpop.gremlin.structure.Vertex;\n+import org.apache.tinkerpop.gremlin.structure.io.Storage;\n import org.apache.tinkerpop.gremlin.structure.util.StringFactory;\n import org.apache.tinkerpop.gremlin.util.Gremlin;\n import org.slf4j.Logger;\n@@ -255,15 +256,18 @@ public static File copyDirectoryIfNonExistent(final FileSystem fileSystem, final\n             final String hadoopGremlinLibsRemote = \"hadoop-gremlin-\" + Gremlin.version() + \"-libs\";\n             final Path path = new Path(directory);\n             if (Boolean.valueOf(System.getProperty(\"is.testing\", \"false\")) || (fileSystem.exists(path) && fileSystem.isDirectory(path))) {\n-                final File tempDirectory = new File(System.getProperty(\"java.io.tmpdir\") + File.separator + hadoopGremlinLibsRemote);\n+                final File tempDirectory = new File(System.getProperty(\"java.io.tmpdir\"), hadoopGremlinLibsRemote);\n+\n                 assert tempDirectory.exists() || tempDirectory.mkdirs();\n-                final String tempPath = tempDirectory.getAbsolutePath() + File.separator + path.getName();\n+\n+                final Path tempPath = new Path(new Path(tempDirectory.toURI()), path.getName());\n+\n                 final RemoteIterator<LocatedFileStatus> files = fileSystem.listFiles(path, false);\n                 while (files.hasNext()) {\n                     final LocatedFileStatus f = files.next();\n-                    fileSystem.copyToLocalFile(false, f.getPath(), new Path(tempPath + System.getProperty(\"file.separator\") + f.getPath().getName()), true);\n+                    fileSystem.copyToLocalFile(false, f.getPath(), new Path(tempPath, f.getPath().getName()), true);\n                 }\n-                return new File(tempPath);\n+                return new File(tempPath.toUri());\n             } else\n                 return new File(directory);\n         } catch (final IOException e) {",
                "deletions": 4
            },
            {
                "sha": "b0847f1628a219588965ebd03caa499d5dc69bdf",
                "filename": "hadoop-gremlin/src/main/java/org/apache/tinkerpop/gremlin/hadoop/structure/io/FileSystemStorage.java",
                "blob_url": "https://github.com/apache/tinkerpop/blob/1088cd9be6ecdcb37bee357a783f01f01bdc366a/hadoop-gremlin/src/main/java/org/apache/tinkerpop/gremlin/hadoop/structure/io/FileSystemStorage.java",
                "raw_url": "https://github.com/apache/tinkerpop/raw/1088cd9be6ecdcb37bee357a783f01f01bdc366a/hadoop-gremlin/src/main/java/org/apache/tinkerpop/gremlin/hadoop/structure/io/FileSystemStorage.java",
                "status": "modified",
                "changes": 101,
                "additions": 61,
                "contents_url": "https://api.github.com/repos/apache/tinkerpop/contents/hadoop-gremlin/src/main/java/org/apache/tinkerpop/gremlin/hadoop/structure/io/FileSystemStorage.java?ref=1088cd9be6ecdcb37bee357a783f01f01bdc366a",
                "patch": "@@ -41,6 +41,8 @@\n \n import java.io.IOException;\n import java.util.ArrayList;\n+import java.util.Arrays;\n+import java.util.Collections;\n import java.util.Iterator;\n import java.util.List;\n import java.util.stream.Collectors;\n@@ -53,8 +55,6 @@\n \n     private static final String SPACE = \" \";\n     private static final String D_SPACE = \"(D) \";\n-    private static final String FORWARD_SLASH = \"/\";\n-    private static final String FORWARD_ASTERISK = \"/*\";\n \n     private final FileSystem fs;\n \n@@ -80,7 +80,7 @@ public static FileSystemStorage open(final FileSystem fileSystem) {\n \n     private static String fileStatusString(final FileStatus status) {\n         StringBuilder s = new StringBuilder();\n-        s.append(status.getPermission()).append(\" \");\n+        s.append(status.getPermission()).append(SPACE);\n         s.append(status.getOwner()).append(SPACE);\n         s.append(status.getGroup()).append(SPACE);\n         s.append(status.getLen()).append(SPACE);\n@@ -91,23 +91,43 @@ private static String fileStatusString(final FileStatus status) {\n     }\n \n     private String tryHomeDirectory(final String location) {\n-        return location.equals(\"/\") ? this.fs.getHomeDirectory().toString() : location;\n+        return location.equals(ROOT_DIRECTORY) ? this.fs.getHomeDirectory().toString() : location;\n     }\n \n     @Override\n     public List<String> ls() {\n-        return this.ls(\"/\");\n+        return this.ls(ROOT_DIRECTORY);\n     }\n \n     @Override\n-    public List<String> ls(final String location) {\n+    public List<String> ls(final String pattern) {\n+        return Stream.of(this.listStatuses(pattern)).map(FileSystemStorage::fileStatusString).collect(Collectors.toList());\n+    }\n+\n+    /**\n+     * @param pattern refers directory or a set of files\n+     * @return a non-null array of the files and directories the pattern refers as of {@link Storage#ls(String)}\n+     */\n+    private FileStatus[] listStatuses(final String pattern) throws IllegalStateException {\n+        final FileStatus[] result;\n+        final String actualPattern;\n+\n+        actualPattern = tryHomeDirectory(pattern);\n+\n         try {\n-            return this.fs.isDirectory(new Path(tryHomeDirectory(location))) ?\n-                    Stream.of(this.fs.globStatus(new Path(tryHomeDirectory(location) + \"/*\"))).map(FileSystemStorage::fileStatusString).collect(Collectors.toList()) :\n-                    Stream.of(this.fs.globStatus(new Path(tryHomeDirectory(location) + \"*\"))).map(FileSystemStorage::fileStatusString).collect(Collectors.toList());\n+            if ( fs.isDirectory(new Path(actualPattern)) ) { // a directory path - list its contents\n+                if ( actualPattern.endsWith( \"/\" ) ) {\n+                    result = fs.globStatus(new Path(actualPattern + \"*\"));\n+                } else {\n+                    result = fs.globStatus(new Path(actualPattern + \"/*\"));\n+                }\n+            } else { // a pattern or file path\n+                result = fs.globStatus(new Path(actualPattern));\n+            }\n         } catch (final IOException e) {\n-            throw new IllegalStateException(e.getMessage(), e);\n+          throw new IllegalStateException(e.getMessage(), e);\n         }\n+        return result == null ? new FileStatus[0] : result;\n     }\n \n     public boolean mkdir(final String location) {\n@@ -129,25 +149,22 @@ public boolean cp(final String sourceLocation, final String targetLocation) {\n \n     @Override\n     public boolean exists(final String location) {\n-        try {\n-            return this.fs.globStatus(new Path(tryHomeDirectory(location) + \"*\")).length > 0;\n-        } catch (final IOException e) {\n-            throw new IllegalStateException(e.getMessage(), e);\n-        }\n+        return this.listStatuses(location).length > 0;\n     }\n \n     @Override\n     public boolean rm(final String location) {\n         try {\n-            final FileStatus[] statuses = this.fs.globStatus(new Path(tryHomeDirectory(location) + \"*\"));\n-            Stream.of(statuses).forEach(status -> {\n-                try {\n-                    this.fs.delete(status.getPath(), true);\n-                } catch (IOException e) {\n-                    throw new IllegalStateException(e.getMessage(), e);\n-                }\n-            });\n-            return statuses.length > 0;\n+            final FileStatus[] statuses = this.fs.globStatus(new Path(tryHomeDirectory(location)));\n+            return statuses != null\n+                   && statuses.length > 0\n+                   && Stream.of(statuses).allMatch(status -> {\n+                          try {\n+                              return this.fs.delete(status.getPath(), true);\n+                          } catch (IOException e) {\n+                              throw new IllegalStateException(e.getMessage(), e);\n+                          }\n+                      });\n         } catch (final IOException e) {\n             throw new IllegalStateException(e.getMessage(), e);\n         }\n@@ -213,32 +230,36 @@ public void copyFromLocal(final String fromLocation, final String toLocation) {\n     }\n \n     public void mergeToLocal(final String fromLocation, final String toLocation) {\n-        try {\n-            final FileSystem local = FileSystem.getLocal(new Configuration());\n-            final FSDataOutputStream outA = local.create(new Path(toLocation));\n-            for (final Path path : FileSystemStorage.getAllFilePaths(fs, new Path(fromLocation), HiddenFileFilter.instance())) {\n-                final FSDataInputStream inA = fs.open(path);\n-                IOUtils.copyBytes(inA, outA, 8192);\n-                inA.close();\n+        try (final FileSystem local = FileSystem.getLocal(new Configuration())) {\n+            try (final FSDataOutputStream outA = local.create(new Path(toLocation))) {\n+                final Path fromPath;\n+\n+                if (null == fromLocation || fromLocation.equals(ROOT_DIRECTORY) ) {\n+                    fromPath = fs.getHomeDirectory();\n+                } else {\n+                    fromPath = new Path(fromLocation);\n+                }\n+\n+                for (final Path path : FileSystemStorage.getAllFilePaths(fs, fromPath, HiddenFileFilter.instance())) {\n+                    try (final FSDataInputStream inA = fs.open(path) ) {\n+                        IOUtils.copyBytes(inA, outA, 8192);\n+                    }\n+                }\n             }\n-            outA.close();\n         } catch (final IOException e) {\n             throw new IllegalStateException(e.getMessage(), e);\n         }\n     }\n \n \n     private static List<Path> getAllFilePaths(final FileSystem fs, Path path, final PathFilter filter) throws IOException {\n-        if (null == path) path = fs.getHomeDirectory();\n-        if (path.toString().equals(FORWARD_SLASH)) path = new Path(\"\");\n-\n         final List<Path> paths = new ArrayList<Path>();\n-        if (fs.isFile(path))\n+\n+        if (fs.isFile(path)) {\n             paths.add(path);\n-        else {\n-            for (final FileStatus status : fs.globStatus(new Path(path + FORWARD_ASTERISK), filter)) {\n-                final Path next = status.getPath();\n-                paths.addAll(getAllFilePaths(fs, next, filter));\n+        } else {\n+            for (final FileStatus status : fs.globStatus(new Path(path, \"*\"), filter)) {\n+                paths.addAll(getAllFilePaths(fs, status.getPath(), filter));\n             }\n         }\n         return paths;",
                "deletions": 40
            },
            {
                "sha": "ebb9f774c91b1fed8a5039225712b26ff0fe1025",
                "filename": "hadoop-gremlin/src/main/java/org/apache/tinkerpop/gremlin/hadoop/structure/io/InputOutputHelper.java",
                "blob_url": "https://github.com/apache/tinkerpop/blob/1088cd9be6ecdcb37bee357a783f01f01bdc366a/hadoop-gremlin/src/main/java/org/apache/tinkerpop/gremlin/hadoop/structure/io/InputOutputHelper.java",
                "raw_url": "https://github.com/apache/tinkerpop/raw/1088cd9be6ecdcb37bee357a783f01f01bdc366a/hadoop-gremlin/src/main/java/org/apache/tinkerpop/gremlin/hadoop/structure/io/InputOutputHelper.java",
                "status": "modified",
                "changes": 2,
                "additions": 1,
                "contents_url": "https://api.github.com/repos/apache/tinkerpop/contents/hadoop-gremlin/src/main/java/org/apache/tinkerpop/gremlin/hadoop/structure/io/InputOutputHelper.java?ref=1088cd9be6ecdcb37bee357a783f01f01bdc366a",
                "patch": "@@ -83,7 +83,7 @@ public static HadoopGraph getOutputGraph(final Configuration configuration, fina\n                     newConfiguration.setProperty(Constants.GREMLIN_HADOOP_GRAPH_READER, InputOutputHelper.getInputFormat(hadoopConfiguration.getGraphWriter()).getCanonicalName());\n             newConfiguration.setProperty(Constants.GREMLIN_HADOOP_GRAPH_READER_HAS_EDGES, persist.equals(GraphComputer.Persist.EDGES));\n         }\n-        newConfiguration.setProperty(Constants.GREMLIN_HADOOP_OUTPUT_LOCATION, hadoopConfiguration.getOutputLocation() + \"_\");\n+        newConfiguration.setProperty(Constants.GREMLIN_HADOOP_OUTPUT_LOCATION, hadoopConfiguration.getOutputLocation() + \"/_\");\n         return HadoopGraph.open(newConfiguration);\n     }\n }",
                "deletions": 1
            },
            {
                "sha": "7115afdb42b64eee7a8fea8fc86f796cd7a0218b",
                "filename": "hadoop-gremlin/src/test/java/org/apache/tinkerpop/gremlin/hadoop/HadoopGraphProvider.java",
                "blob_url": "https://github.com/apache/tinkerpop/blob/1088cd9be6ecdcb37bee357a783f01f01bdc366a/hadoop-gremlin/src/test/java/org/apache/tinkerpop/gremlin/hadoop/HadoopGraphProvider.java",
                "raw_url": "https://github.com/apache/tinkerpop/raw/1088cd9be6ecdcb37bee357a783f01f01bdc366a/hadoop-gremlin/src/test/java/org/apache/tinkerpop/gremlin/hadoop/HadoopGraphProvider.java",
                "status": "modified",
                "changes": 12,
                "additions": 8,
                "contents_url": "https://api.github.com/repos/apache/tinkerpop/contents/hadoop-gremlin/src/test/java/org/apache/tinkerpop/gremlin/hadoop/HadoopGraphProvider.java?ref=1088cd9be6ecdcb37bee357a783f01f01bdc366a",
                "patch": "@@ -33,6 +33,7 @@\n import org.apache.tinkerpop.gremlin.hadoop.structure.io.gryo.GryoOutputFormat;\n import org.apache.tinkerpop.gremlin.process.computer.util.ComputerGraph;\n import org.apache.tinkerpop.gremlin.structure.Graph;\n+import org.apache.tinkerpop.gremlin.structure.io.Storage;\n import org.apache.tinkerpop.gremlin.structure.io.graphson.GraphSONResourceAccess;\n import org.apache.tinkerpop.gremlin.structure.io.gryo.GryoResourceAccess;\n import org.apache.tinkerpop.gremlin.structure.io.script.ScriptResourceAccess;\n@@ -53,7 +54,7 @@\n  */\n public class HadoopGraphProvider extends AbstractGraphProvider {\n \n-    protected static final Random RANDOM = TestHelper.RANDOM;\n+    protected static final Random RANDOM = new Random();\n     private boolean graphSONInput = false;\n \n     public static Map<String, String> PATHS = new HashMap<>();\n@@ -82,7 +83,8 @@\n                     \"tinkerpop-crew-v3d0.kryo\",\n                     \"tinkerpop-sink-v3d0.kryo\");\n             for (final String fileName : kryoResources) {\n-                PATHS.put(fileName, TestHelper.generateTempFileFromResource(GryoResourceAccess.class, fileName, \"\").getAbsolutePath().replace('\\\\', '/'));\n+                PATHS.put(fileName,\n+                          Storage.toPath(TestHelper.generateTempFileFromResource(GryoResourceAccess.class, fileName, \"\")));\n             }\n \n             final List<String> graphsonResources = Arrays.asList(\n@@ -96,7 +98,8 @@\n                     \"tinkerpop-crew-v3d0.json\",\n                     \"tinkerpop-sink-v3d0.json\");\n             for (final String fileName : graphsonResources) {\n-                PATHS.put(fileName, TestHelper.generateTempFileFromResource(GraphSONResourceAccess.class, fileName, \"\").getAbsolutePath().replace('\\\\', '/'));\n+                PATHS.put(fileName,\n+                          Storage.toPath(TestHelper.generateTempFileFromResource(GraphSONResourceAccess.class, fileName, \"\")));\n             }\n \n             final List<String> scriptResources = Arrays.asList(\n@@ -107,7 +110,8 @@\n                     \"script-input-grateful-dead.groovy\",\n                     \"script-output-grateful-dead.groovy\");\n             for (final String fileName : scriptResources) {\n-                PATHS.put(fileName, TestHelper.generateTempFileFromResource(ScriptResourceAccess.class, fileName, \"\").getAbsolutePath().replace('\\\\', '/'));\n+                PATHS.put(fileName,\n+                          Storage.toPath(TestHelper.generateTempFileFromResource(ScriptResourceAccess.class, fileName, \"\")));\n             }\n         } catch (Exception e) {\n             e.printStackTrace();",
                "deletions": 4
            },
            {
                "sha": "562976b36becf393369ed07d9164c3c4ca7f0e44",
                "filename": "hadoop-gremlin/src/test/java/org/apache/tinkerpop/gremlin/hadoop/process/computer/AbstractHadoopGraphComputerTest.java",
                "blob_url": "https://github.com/apache/tinkerpop/blob/1088cd9be6ecdcb37bee357a783f01f01bdc366a/hadoop-gremlin/src/test/java/org/apache/tinkerpop/gremlin/hadoop/process/computer/AbstractHadoopGraphComputerTest.java",
                "raw_url": "https://github.com/apache/tinkerpop/raw/1088cd9be6ecdcb37bee357a783f01f01bdc366a/hadoop-gremlin/src/test/java/org/apache/tinkerpop/gremlin/hadoop/process/computer/AbstractHadoopGraphComputerTest.java",
                "status": "modified",
                "changes": 59,
                "additions": 35,
                "contents_url": "https://api.github.com/repos/apache/tinkerpop/contents/hadoop-gremlin/src/test/java/org/apache/tinkerpop/gremlin/hadoop/process/computer/AbstractHadoopGraphComputerTest.java?ref=1088cd9be6ecdcb37bee357a783f01f01bdc366a",
                "patch": "@@ -42,34 +42,45 @@ public void shouldCopyDirectoriesCorrectly() throws Exception {\n         final String hdfsName = this.getClass().getSimpleName() + \"-hdfs\";\n         final String localName = this.getClass().getSimpleName() + \"-local\";\n         final FileSystem fs = FileSystem.get(new Configuration());\n-        if (!new File(System.getProperty(\"java.io.tmpdir\") + \"/\" + localName).exists())\n-            assertTrue(new File(System.getProperty(\"java.io.tmpdir\") + \"/\" + localName).mkdir());\n-        File tempFile1 = new File(System.getProperty(\"java.io.tmpdir\") + \"/\" + localName + \"/test1.txt\");\n-        File tempFile2 = new File(System.getProperty(\"java.io.tmpdir\") + \"/\" + localName + \"/test2.txt\");\n-        assertTrue(tempFile1.createNewFile());\n-        assertTrue(tempFile2.createNewFile());\n-        assertTrue(tempFile1.exists());\n-        assertTrue(tempFile2.exists());\n-        if (fs.exists(new Path(\"target/\" + hdfsName)))\n-            assertTrue(fs.delete(new Path(\"target/\" + hdfsName), true));\n-        fs.copyFromLocalFile(true, new Path(tempFile1.getAbsolutePath()), new Path(\"target/\" + hdfsName + \"/test1.dat\"));\n-        fs.copyFromLocalFile(true, new Path(tempFile2.getAbsolutePath()), new Path(\"target/\" + hdfsName + \"/test2.dat\"));\n-        assertTrue(fs.exists(new Path(\"target/\" + hdfsName + \"/test1.dat\")));\n-        assertTrue(fs.exists(new Path(\"target/\" + hdfsName + \"/test2.dat\")));\n-        assertTrue(fs.exists(new Path(\"target/\" + hdfsName)));\n-        assertTrue(fs.isDirectory(new Path(\"target/\" + hdfsName)));\n+        File path;\n+\n+        path = new File(new File(System.getProperty(\"java.io.tmpdir\")), localName);\n+        if (!path.exists()) {\n+            assertTrue(path.mkdir());\n+        }\n+\n+        File tempFile1 = new File(path, \"test1.txt\");\n+        tempFile1.delete();\n+        assertTrue(\"Expected \"+tempFile1+\" file was created successfully\", tempFile1.createNewFile());\n+        assertTrue(\"Expected \"+tempFile1+\" existed\", tempFile1.exists());\n+\n+        File tempFile2 = new File(path, \"test2.txt\");\n+        tempFile2.delete();\n+        assertTrue(\"Expected \"+tempFile2+\" file was created successfully\", tempFile2.createNewFile());\n+        assertTrue(\"Expected \"+tempFile2+\" existed\", tempFile2.exists());\n+\n+        if (fs.exists(new Path(\"target\", hdfsName)))\n+            assertTrue(fs.delete(new Path(\"target\", hdfsName), true));\n+        fs.copyFromLocalFile(true, new Path(tempFile1.toURI()), new Path(\"target\", hdfsName + \"/test1.dat\"));\n+        fs.copyFromLocalFile(true, new Path(tempFile2.toURI()), new Path(\"target\", hdfsName + \"/test2.dat\"));\n+        assertTrue(fs.exists(new Path(\"target\", hdfsName + \"/test1.dat\")));\n+        assertTrue(fs.exists(new Path(\"target\", hdfsName + \"/test2.dat\")));\n+        assertTrue(fs.exists(new Path(\"target\", hdfsName)));\n+        assertTrue(fs.isDirectory(new Path(\"target\", hdfsName)));\n         assertFalse(tempFile1.exists());\n         assertFalse(tempFile2.exists());\n-        assertTrue(new File(System.getProperty(\"java.io.tmpdir\") + \"/\" + localName).exists());\n-        assertTrue(new File(System.getProperty(\"java.io.tmpdir\") + \"/\" + localName).delete());\n-        assertTrue(fs.exists(new Path(\"target/\" + hdfsName + \"/test1.dat\")));\n-        assertTrue(fs.exists(new Path(\"target/\" + hdfsName + \"/test2.dat\")));\n-        assertTrue(fs.exists(new Path(\"target/\" + hdfsName)));\n-        assertTrue(fs.isDirectory(new Path(\"target/\" + hdfsName)));\n+\n+        assertTrue(\"Expected \"+path+\" directory existed\", path.exists());\n+        assertTrue(\"Expected \"+path+\" directory was deleted\", path.delete());\n+\n+        assertTrue(fs.exists(new Path(\"target\", hdfsName + \"/test1.dat\")));\n+        assertTrue(fs.exists(new Path(\"target\", hdfsName + \"/test2.dat\")));\n+        assertTrue(fs.exists(new Path(\"target\",hdfsName)));\n+        assertTrue(fs.isDirectory(new Path(\"target\", hdfsName)));\n         /////\n         final String hadoopGremlinLibsRemote = \"hadoop-gremlin-\" + Gremlin.version() + \"-libs\";\n-        final File localDirectory = new File(System.getProperty(\"java.io.tmpdir\") + \"/\" + hadoopGremlinLibsRemote);\n-        final File localLibDirectory = new File(localDirectory.getAbsolutePath() + \"/\" + hdfsName);\n+        final File localDirectory = new File(System.getProperty(\"java.io.tmpdir\"), hadoopGremlinLibsRemote);\n+        final File localLibDirectory = new File(localDirectory, hdfsName);\n         if (localLibDirectory.exists()) {\n             Stream.of(localLibDirectory.listFiles()).forEach(File::delete);\n             assertTrue(localLibDirectory.delete());",
                "deletions": 24
            },
            {
                "sha": "106a72bc362c87e31c6d43258840c98b33cb3fc9",
                "filename": "hadoop-gremlin/src/test/java/org/apache/tinkerpop/gremlin/hadoop/structure/io/AbstractIoRegistryCheck.java",
                "blob_url": "https://github.com/apache/tinkerpop/blob/1088cd9be6ecdcb37bee357a783f01f01bdc366a/hadoop-gremlin/src/test/java/org/apache/tinkerpop/gremlin/hadoop/structure/io/AbstractIoRegistryCheck.java",
                "raw_url": "https://github.com/apache/tinkerpop/raw/1088cd9be6ecdcb37bee357a783f01f01bdc366a/hadoop-gremlin/src/test/java/org/apache/tinkerpop/gremlin/hadoop/structure/io/AbstractIoRegistryCheck.java",
                "status": "modified",
                "changes": 7,
                "additions": 4,
                "contents_url": "https://api.github.com/repos/apache/tinkerpop/contents/hadoop-gremlin/src/test/java/org/apache/tinkerpop/gremlin/hadoop/structure/io/AbstractIoRegistryCheck.java?ref=1088cd9be6ecdcb37bee357a783f01f01bdc366a",
                "patch": "@@ -42,6 +42,7 @@\n import org.apache.tinkerpop.gremlin.structure.T;\n import org.apache.tinkerpop.gremlin.structure.Vertex;\n import org.apache.tinkerpop.gremlin.structure.io.IoRegistry;\n+import org.apache.tinkerpop.gremlin.structure.io.Storage;\n import org.apache.tinkerpop.gremlin.structure.io.gryo.GryoPool;\n import org.apache.tinkerpop.gremlin.structure.io.gryo.GryoVersion;\n import org.apache.tinkerpop.gremlin.structure.util.star.StarGraph;\n@@ -68,7 +69,7 @@ public void checkGryoV1d0IoRegistryCompliance(final HadoopGraph graph, final Cla\n         graph.configuration().setProperty(Constants.GREMLIN_HADOOP_GRAPH_READER, GryoInputFormat.class.getCanonicalName());\n         graph.configuration().setProperty(Constants.GREMLIN_HADOOP_GRAPH_WRITER, GryoOutputFormat.class.getCanonicalName());\n         graph.configuration().setProperty(GryoPool.CONFIG_IO_GRYO_VERSION, GryoVersion.V1_0.name());\n-        graph.configuration().setProperty(Constants.GREMLIN_HADOOP_INPUT_LOCATION, input.getAbsolutePath());\n+        graph.configuration().setProperty(Constants.GREMLIN_HADOOP_INPUT_LOCATION, Storage.toPath(input));\n         graph.configuration().setProperty(IoRegistry.IO_REGISTRY, ToyIoRegistry.class.getCanonicalName());\n         final GryoRecordWriter writer = new GryoRecordWriter(new DataOutputStream(new FileOutputStream(input)), ConfUtil.makeHadoopConfiguration(graph.configuration()));\n         validateIoRegistryGraph(graph, graphComputerClass, writer);\n@@ -79,7 +80,7 @@ public void checkGryoV3d0IoRegistryCompliance(final HadoopGraph graph, final Cla\n         final File input = TestHelper.generateTempFile(this.getClass(), \"gryo-io-registry\", \".kryo\");\n         graph.configuration().setProperty(Constants.GREMLIN_HADOOP_GRAPH_READER, GryoInputFormat.class.getCanonicalName());\n         graph.configuration().setProperty(Constants.GREMLIN_HADOOP_GRAPH_WRITER, GryoOutputFormat.class.getCanonicalName());\n-        graph.configuration().setProperty(Constants.GREMLIN_HADOOP_INPUT_LOCATION, input.getAbsolutePath());\n+        graph.configuration().setProperty(Constants.GREMLIN_HADOOP_INPUT_LOCATION, Storage.toPath(input));\n         graph.configuration().setProperty(GryoPool.CONFIG_IO_GRYO_VERSION, GryoVersion.V3_0.name());\n         graph.configuration().setProperty(IoRegistry.IO_REGISTRY, ToyIoRegistry.class.getCanonicalName());\n         final GryoRecordWriter writer = new GryoRecordWriter(new DataOutputStream(new FileOutputStream(input)), ConfUtil.makeHadoopConfiguration(graph.configuration()));\n@@ -91,7 +92,7 @@ public void checkGraphSONIoRegistryCompliance(final HadoopGraph graph, final Cla\n         final File input = TestHelper.generateTempFile(this.getClass(), \"graphson-io-registry\", \".json\");\n         graph.configuration().setProperty(Constants.GREMLIN_HADOOP_GRAPH_READER, GraphSONInputFormat.class.getCanonicalName());\n         graph.configuration().setProperty(Constants.GREMLIN_HADOOP_GRAPH_WRITER, GraphSONOutputFormat.class.getCanonicalName());\n-        graph.configuration().setProperty(Constants.GREMLIN_HADOOP_INPUT_LOCATION, input.getAbsolutePath());\n+        graph.configuration().setProperty(Constants.GREMLIN_HADOOP_INPUT_LOCATION, Storage.toPath(input));\n         graph.configuration().setProperty(IoRegistry.IO_REGISTRY, ToyIoRegistry.class.getCanonicalName());\n         final GraphSONRecordWriter writer = new GraphSONRecordWriter(new DataOutputStream(new FileOutputStream(input)), ConfUtil.makeHadoopConfiguration(graph.configuration()));\n         validateIoRegistryGraph(graph, graphComputerClass, writer);",
                "deletions": 3
            },
            {
                "sha": "afff6482197a7f91de9fab13091325da14c603a7",
                "filename": "hadoop-gremlin/src/test/java/org/apache/tinkerpop/gremlin/hadoop/structure/io/AbstractStorageCheck.java",
                "blob_url": "https://github.com/apache/tinkerpop/blob/1088cd9be6ecdcb37bee357a783f01f01bdc366a/hadoop-gremlin/src/test/java/org/apache/tinkerpop/gremlin/hadoop/structure/io/AbstractStorageCheck.java",
                "raw_url": "https://github.com/apache/tinkerpop/raw/1088cd9be6ecdcb37bee357a783f01f01bdc366a/hadoop-gremlin/src/test/java/org/apache/tinkerpop/gremlin/hadoop/structure/io/AbstractStorageCheck.java",
                "status": "modified",
                "changes": 48,
                "additions": 27,
                "contents_url": "https://api.github.com/repos/apache/tinkerpop/contents/hadoop-gremlin/src/test/java/org/apache/tinkerpop/gremlin/hadoop/structure/io/AbstractStorageCheck.java?ref=1088cd9be6ecdcb37bee357a783f01f01bdc366a",
                "patch": "@@ -20,8 +20,10 @@\n package org.apache.tinkerpop.gremlin.hadoop.structure.io;\n \n import org.apache.tinkerpop.gremlin.AbstractGremlinTest;\n+import org.apache.tinkerpop.gremlin.GraphManager;\n import org.apache.tinkerpop.gremlin.hadoop.Constants;\n import org.apache.tinkerpop.gremlin.process.computer.ComputerResult;\n+import org.apache.tinkerpop.gremlin.process.computer.GraphComputer;\n import org.apache.tinkerpop.gremlin.process.computer.clustering.peerpressure.ClusterCountMapReduce;\n import org.apache.tinkerpop.gremlin.process.computer.clustering.peerpressure.PeerPressureVertexProgram;\n import org.apache.tinkerpop.gremlin.process.traversal.dsl.graph.GraphTraversal;\n@@ -55,6 +57,7 @@ public void checkHeadMethods(final Storage storage, final String inputLocation,\n         ////////////////////\n \n         final ComputerResult result = graphProvider.getGraphComputer(graph).program(PeerPressureVertexProgram.build().create(graph)).mapReduce(ClusterCountMapReduce.build().memoryKey(\"clusterCount\").create()).submit().get();\n+\n         // TEST OUTPUT GRAPH\n         assertTrue(storage.exists(outputLocation));\n         assertTrue(storage.exists(Constants.getGraphLocation(outputLocation)));\n@@ -77,36 +80,39 @@ public void checkHeadMethods(final Storage storage, final String inputLocation,\n     }\n \n     public void checkRemoveAndListMethods(final Storage storage, final String outputLocation) throws Exception {\n-        graphProvider.getGraphComputer(graph).program(PeerPressureVertexProgram.build().create(graph)).mapReduce(ClusterCountMapReduce.build().memoryKey(\"clusterCount\").create()).submit().get();\n-        assertTrue(storage.exists(outputLocation));\n-        assertTrue(storage.exists(Constants.getGraphLocation(outputLocation)));\n-        assertTrue(storage.exists(Constants.getMemoryLocation(outputLocation, \"clusterCount\")));\n+        final String graphLocation = Constants.getGraphLocation(outputLocation);\n+        final String memoryLocation= Constants.getMemoryLocation(outputLocation, \"clusterCount\");\n+        final GraphComputer graphComputer = graphProvider.getGraphComputer(graph);\n+\n+        graphComputer.program(PeerPressureVertexProgram.build().create(graph)).mapReduce(ClusterCountMapReduce.build().memoryKey(\"clusterCount\").create()).submit().get();\n+\n+        assertTrue(\"storage.exists(outputLocation)\", storage.exists(outputLocation));\n+        assertTrue(\"storage.exists(graphLocation)\", storage.exists(graphLocation));\n+        assertTrue(\"storage.exists(memoryLocation)\", storage.exists(memoryLocation));\n+\n         assertEquals(2, storage.ls(outputLocation).size());\n-        assertTrue(storage.rm(Constants.getGraphLocation(outputLocation)));\n-        assertFalse(storage.rm(Constants.getGraphLocation(outputLocation)));\n+\n+        assertTrue(\"storage.rm(graphLocation)\", storage.rm(graphLocation));\n+        assertFalse(\"storage.rm(graphLocation)\", storage.rm(graphLocation));\n+        assertFalse(\"storage.exists(graphLocation)\", storage.exists(graphLocation));\n+\n         assertEquals(1, storage.ls(outputLocation).size());\n-        assertTrue(storage.rm(Constants.getMemoryLocation(outputLocation, \"clusterCount\")));\n+\n+        assertTrue(\"storage.rm(memoryLocation)\", storage.rm(memoryLocation));\n+        assertFalse(\"storage.rm(memoryLocation)\", storage.rm(memoryLocation));\n+        assertFalse(\"storage.exists(memoryLocation)\", storage.exists(memoryLocation));\n+\n         assertEquals(0, storage.ls(outputLocation).size());\n-        assertFalse(storage.exists(Constants.getGraphLocation(outputLocation)));\n-        assertFalse(storage.exists(Constants.getMemoryLocation(outputLocation, \"clusterCount\")));\n-        if (storage.exists(outputLocation))\n-            assertTrue(storage.rm(outputLocation));\n-        assertFalse(storage.exists(outputLocation));\n \n-        ////////////////\n+        storage.rm(outputLocation);\n \n-        graphProvider.getGraphComputer(graph).program(PeerPressureVertexProgram.build().create(graph)).mapReduce(ClusterCountMapReduce.build().memoryKey(\"clusterCount\").create()).submit().get();\n-        assertTrue(storage.exists(outputLocation));\n-        assertTrue(storage.exists(Constants.getGraphLocation(outputLocation)));\n-        assertTrue(storage.exists(Constants.getMemoryLocation(outputLocation, \"clusterCount\")));\n-        assertEquals(2, storage.ls(outputLocation).size());\n-        assertTrue(storage.rm(outputLocation));\n-        assertFalse(storage.exists(outputLocation));\n+        assertFalse(\"storage.exists(outputLocation)\", storage.exists(outputLocation));\n         assertEquals(0, storage.ls(outputLocation).size());\n     }\n \n     public void checkCopyMethods(final Storage storage, final String outputLocation, final String newOutputLocation, final Class outputGraphParserClass, final Class outputMemoryParserClass) throws Exception {\n         graphProvider.getGraphComputer(graph).program(PeerPressureVertexProgram.build().create(graph)).mapReduce(ClusterCountMapReduce.build().memoryKey(\"clusterCount\").create()).submit().get();\n+\n         assertTrue(storage.exists(outputLocation));\n         assertTrue(storage.exists(Constants.getGraphLocation(outputLocation)));\n         assertTrue(storage.exists(Constants.getMemoryLocation(outputLocation, \"clusterCount\")));\n@@ -185,6 +191,6 @@ public void checkFileDirectoryDistinction(final Storage storage, final String di\n         assertTrue(storage.rm(directory2 + \"/f*\"));\n         assertFalse(storage.rm(directory2 + \"/file*\"));\n         assertEquals(0, storage.ls(directory2).size());\n-        assertEquals(0, storage.ls(directory2 + \"*\").size());\n+        assertEquals(0, storage.ls(directory2 + \"/*\").size());\n     }\n }",
                "deletions": 21
            },
            {
                "sha": "ac9e364b092090e9b2101627114b63023ff46d2e",
                "filename": "hadoop-gremlin/src/test/java/org/apache/tinkerpop/gremlin/hadoop/structure/io/FileSystemStorageCheck.java",
                "blob_url": "https://github.com/apache/tinkerpop/blob/1088cd9be6ecdcb37bee357a783f01f01bdc366a/hadoop-gremlin/src/test/java/org/apache/tinkerpop/gremlin/hadoop/structure/io/FileSystemStorageCheck.java",
                "raw_url": "https://github.com/apache/tinkerpop/raw/1088cd9be6ecdcb37bee357a783f01f01bdc366a/hadoop-gremlin/src/test/java/org/apache/tinkerpop/gremlin/hadoop/structure/io/FileSystemStorageCheck.java",
                "status": "modified",
                "changes": 4,
                "additions": 2,
                "contents_url": "https://api.github.com/repos/apache/tinkerpop/contents/hadoop-gremlin/src/test/java/org/apache/tinkerpop/gremlin/hadoop/structure/io/FileSystemStorageCheck.java?ref=1088cd9be6ecdcb37bee357a783f01f01bdc366a",
                "patch": "@@ -84,10 +84,10 @@ public void shouldSupportDirectoryFileDistinction() throws Exception {\n         final String directory1 = TestHelper.makeTestDataDirectory(FileSystemStorageCheck.class, \"directory1\");\n         final String directory2 = TestHelper.makeTestDataDirectory(FileSystemStorageCheck.class, \"directory2\");\n         for (int i = 0; i < 10; i++) {\n-            new File(directory1 + \"/\" + \"file1-\" + i + \".txt.bz\").createNewFile();\n+            new File(directory1, \"file1-\" + i + \".txt.bz\").createNewFile();\n         }\n         for (int i = 0; i < 5; i++) {\n-            new File(directory2 + \"/\" + \"file2-\" + i + \".txt.bz\").createNewFile();\n+            new File(directory2, \"file2-\" + i + \".txt.bz\").createNewFile();\n         }\n         super.checkFileDirectoryDistinction(storage, directory1, directory2);\n         deleteDirectory(directory1);",
                "deletions": 2
            },
            {
                "sha": "ae93e3720d86c9a374a7f5f861a8a45547f58be4",
                "filename": "hadoop-gremlin/src/test/java/org/apache/tinkerpop/gremlin/hadoop/structure/io/RecordReaderWriterTest.java",
                "blob_url": "https://github.com/apache/tinkerpop/blob/1088cd9be6ecdcb37bee357a783f01f01bdc366a/hadoop-gremlin/src/test/java/org/apache/tinkerpop/gremlin/hadoop/structure/io/RecordReaderWriterTest.java",
                "raw_url": "https://github.com/apache/tinkerpop/raw/1088cd9be6ecdcb37bee357a783f01f01bdc366a/hadoop-gremlin/src/test/java/org/apache/tinkerpop/gremlin/hadoop/structure/io/RecordReaderWriterTest.java",
                "status": "modified",
                "changes": 5,
                "additions": 3,
                "contents_url": "https://api.github.com/repos/apache/tinkerpop/contents/hadoop-gremlin/src/test/java/org/apache/tinkerpop/gremlin/hadoop/structure/io/RecordReaderWriterTest.java?ref=1088cd9be6ecdcb37bee357a783f01f01bdc366a",
                "patch": "@@ -75,6 +75,7 @@ public void shouldSplitFileAndWriteProperSplits() throws Exception {\n             final List<FileSplit> splits = generateFileSplits(testFile, numberOfSplits);\n             final Class<? extends InputFormat<NullWritable, VertexWritable>> inputFormatClass = getInputFormat();\n             final Class<? extends OutputFormat<NullWritable, VertexWritable>> outputFormatClass = getOutputFormat();\n+\n             final File outputDirectory = TestHelper.makeTestDataPath(inputFormatClass, \"hadoop-record-reader-writer-test\");\n             final Configuration config = configure(outputDirectory);\n             config.addResource(this.configuration);\n@@ -86,7 +87,7 @@ protected Configuration configure(final File outputDirectory) {\n         final Configuration configuration = new Configuration(false);\n         configuration.set(\"fs.file.impl\", LocalFileSystem.class.getName());\n         configuration.set(\"fs.defaultFS\", \"file:///\");\n-        configuration.set(\"mapreduce.output.fileoutputformat.outputdir\", \"file:///\" + outputDirectory.getAbsolutePath());\n+        configuration.set(\"mapreduce.output.fileoutputformat.outputdir\", outputDirectory.toURI().toString());\n         return configuration;\n     }\n \n@@ -95,7 +96,7 @@ protected Configuration configure(final File outputDirectory) {\n         final long splitLength = (long) ((double) fileSize / (double) numberOfSplits);\n         final List<FileSplit> splits = new ArrayList<>();\n         for (int i = 0; i < fileSize; i = i + (int) splitLength + 1) {\n-            splits.add(new FileSplit(new Path(file.getAbsoluteFile().toURI().toString()), i, splitLength, null));\n+            splits.add(new FileSplit(new Path(file.toURI()), i, splitLength, null));\n         }\n         return splits;\n     }",
                "deletions": 2
            },
            {
                "sha": "16cf281f391926e5ddbfa6e8f41625cfb189cf65",
                "filename": "pom.xml",
                "blob_url": "https://github.com/apache/tinkerpop/blob/1088cd9be6ecdcb37bee357a783f01f01bdc366a/pom.xml",
                "raw_url": "https://github.com/apache/tinkerpop/raw/1088cd9be6ecdcb37bee357a783f01f01bdc366a/pom.xml",
                "status": "modified",
                "changes": 7,
                "additions": 6,
                "contents_url": "https://api.github.com/repos/apache/tinkerpop/contents/pom.xml?ref=1088cd9be6ecdcb37bee357a783f01f01bdc366a",
                "patch": "@@ -180,7 +180,6 @@ limitations under the License.\n             </plugin>\n             <plugin>\n                 <artifactId>maven-enforcer-plugin</artifactId>\n-                <version>1.4.1</version>\n                 <executions>\n                     <execution>\n                         <id>enforce-all</id>\n@@ -454,6 +453,7 @@ limitations under the License.\n                     <configuration>\n                         <argLine>-Dlog4j.configuration=${log4j-test.properties} -Dbuild.dir=${project.build.directory} -Dis.testing=true\n                         </argLine>\n+                        <trimStackTrace>false</trimStackTrace>\n                         <excludes>\n                             <exclude>**/*IntegrateTest.java</exclude>\n                         </excludes>\n@@ -554,6 +554,11 @@ limitations under the License.\n                     <artifactId>maven-clean-plugin</artifactId>\n                     <version>3.1.0</version>\n                 </plugin>\n+                <plugin>\n+                    <groupId>org.apache.maven.plugins</groupId>\n+                    <artifactId>maven-enforcer-plugin</artifactId>\n+                    <version>1.4.1</version>\n+                </plugin>\n             </plugins>\n         </pluginManagement>\n     </build>",
                "deletions": 1
            },
            {
                "sha": "d9bfd68093240574958e8f7d1bc3e27032a55cb0",
                "filename": "spark-gremlin/src/main/java/org/apache/tinkerpop/gremlin/spark/structure/Spark.java",
                "blob_url": "https://github.com/apache/tinkerpop/blob/1088cd9be6ecdcb37bee357a783f01f01bdc366a/spark-gremlin/src/main/java/org/apache/tinkerpop/gremlin/spark/structure/Spark.java",
                "raw_url": "https://github.com/apache/tinkerpop/raw/1088cd9be6ecdcb37bee357a783f01f01bdc366a/spark-gremlin/src/main/java/org/apache/tinkerpop/gremlin/spark/structure/Spark.java",
                "status": "modified",
                "changes": 7,
                "additions": 6,
                "contents_url": "https://api.github.com/repos/apache/tinkerpop/contents/spark-gremlin/src/main/java/org/apache/tinkerpop/gremlin/spark/structure/Spark.java?ref=1088cd9be6ecdcb37bee357a783f01f01bdc366a",
                "patch": "@@ -141,8 +141,13 @@ public static void removeRDD(final String name) {\n \n     public static void close() {\n         NAME_TO_RDD.clear();\n-        if (null != CONTEXT)\n+        if (null != CONTEXT) {\n             CONTEXT.stop();\n+\n+            // Allow Spark / Hadoop close and finalize() the input streams to its intrenal files.\n+            // This is a well known problem reported in https://issues.apache.org/jira/browse/SPARK-12216\n+            System.gc();\n+        }\n         CONTEXT = null;\n     }\n ",
                "deletions": 1
            },
            {
                "sha": "7b14c7c688624372d229a27d89349621e802db88",
                "filename": "spark-gremlin/src/main/java/org/apache/tinkerpop/gremlin/spark/structure/io/SparkContextStorage.java",
                "blob_url": "https://github.com/apache/tinkerpop/blob/1088cd9be6ecdcb37bee357a783f01f01bdc366a/spark-gremlin/src/main/java/org/apache/tinkerpop/gremlin/spark/structure/io/SparkContextStorage.java",
                "raw_url": "https://github.com/apache/tinkerpop/raw/1088cd9be6ecdcb37bee357a783f01f01bdc366a/spark-gremlin/src/main/java/org/apache/tinkerpop/gremlin/spark/structure/io/SparkContextStorage.java",
                "status": "modified",
                "changes": 115,
                "additions": 92,
                "contents_url": "https://api.github.com/repos/apache/tinkerpop/contents/spark-gremlin/src/main/java/org/apache/tinkerpop/gremlin/spark/structure/io/SparkContextStorage.java?ref=1088cd9be6ecdcb37bee357a783f01f01bdc366a",
                "patch": "@@ -19,6 +19,12 @@\n \n package org.apache.tinkerpop.gremlin.spark.structure.io;\n \n+import java.util.ArrayList;\n+import java.util.Iterator;\n+import java.util.List;\n+import java.util.function.Consumer;\n+import java.util.regex.Pattern;\n+\n import org.apache.commons.configuration.BaseConfiguration;\n import org.apache.commons.configuration.Configuration;\n import org.apache.hadoop.mapreduce.InputFormat;\n@@ -33,11 +39,6 @@\n import org.apache.tinkerpop.gremlin.structure.util.StringFactory;\n import org.apache.tinkerpop.gremlin.util.iterator.IteratorUtils;\n \n-import java.util.ArrayList;\n-import java.util.Iterator;\n-import java.util.List;\n-import java.util.stream.Collectors;\n-\n /**\n  * @author Marko A. Rodriguez (http://markorodriguez.com)\n  */\n@@ -69,45 +70,114 @@ public static SparkContextStorage open(final SparkContext sparkContext) {\n \n     @Override\n     public List<String> ls() {\n-        return ls(\"*\");\n+        return ls(ROOT_DIRECTORY);\n     }\n \n     @Override\n-    public List<String> ls(final String location) {\n+    public List<String> ls(final String pattern) {\n         final List<String> rdds = new ArrayList<>();\n-        final String wildCardLocation = (location.endsWith(\"*\") ? location : location + \"*\").replace('\\\\', '/').replace(\".\", \"\\\\.\").replace(\"*\", \".*\");\n+\n+        forEachMatching( pattern, rdd -> rdds.add(rdd.name() + \" [\" + rdd.getStorageLevel().description() + \"]\"));\n+\n+        return rdds;\n+    }\n+\n+\n+    /**\n+     * @param pattern not null {@link Storage} file system pattern\n+     * @param action not null processing of each RDD matching the pattern\n+     */\n+    private static void forEachMatching(final String pattern, Consumer<RDD<?>> action) {\n+        final Pattern storagePattern = toRegularExpression(toPattern(Storage.toPath(pattern)));\n+\n         for (final RDD<?> rdd : Spark.getRDDs()) {\n-            if (rdd.name().replace('\\\\', '/').matches(wildCardLocation))\n-                rdds.add(rdd.name() + \" [\" + rdd.getStorageLevel().description() + \"]\");\n+            if (storagePattern.matcher(Storage.toPath(rdd.name())).matches() ) {\n+                action.accept( rdd );\n+            }\n         }\n-        return rdds;\n+    }\n+\n+    /**\n+     * @param pattern not null {@link Storage} file system pattern\n+     * @return true if there is at least one RDD matching the pattern\n+     */\n+    private static boolean thereIsMatching(final String pattern) {\n+        final Pattern storagePattern = toRegularExpression(toPattern(Storage.toPath(pattern)));\n+\n+        for (final RDD<?> rdd : Spark.getRDDs()) {\n+            if (storagePattern.matcher(Storage.toPath(rdd.name())).matches() ) {\n+                return true;\n+            }\n+        }\n+        return false;\n+    }\n+\n+    /**\n+     * @param location not null path or pattern in the abstract {@link Storage}\n+     * @return a pattern abstract {@link Storage} that matches all paths starting with location\n+     */\n+    private static String toPattern(final String location) {\n+        return location.endsWith(\"*\") ? location : location + \"*\";\n+    }\n+\n+    /**\n+     * @param storagePattern not null, not empty pattern in the abstract {@link Storage}\n+     * @return non-null regular expression to match local file system paths as strings\n+     */\n+    private static Pattern toRegularExpression(final String storagePattern) {\n+        return Pattern.compile(storagePattern.replace(\".\", \"\\\\.\")\n+                                             .replace(\"?\", \".\")\n+                                             .replace(\"*\", \".*\"));\n+    }\n+\n+    /**\n+     * @param pattern\n+     * @return true if the pattern is actually a path as of the path definition in {@linkplain Storage}\n+     *\n+     * NOTE: a more precise syntax check is possible\n+     */\n+    private static boolean isPath(String pattern) {\n+      return pattern != null\n+             && !pattern.isEmpty()\n+             && !pattern.contains( \"*\" )\n+             && !pattern.contains( \"?\" );\n     }\n \n     @Override\n     public boolean cp(final String sourceLocation, final String targetLocation) {\n-        final List<String> rdds = Spark.getRDDs().stream().filter(r -> r.name().startsWith(sourceLocation)).map(RDD::name).collect(Collectors.toList());\n+        final Pattern replacementPattern;\n+        final List<String> rdds = new ArrayList<>();\n+\n+        forEachMatching( sourceLocation, rdd -> rdds.add(rdd.name()));\n+\n         if (rdds.size() == 0)\n             return false;\n-        for (final String rdd : rdds) {\n-            Spark.getRDD(rdd).toJavaRDD().filter(a -> true).setName(rdd.equals(sourceLocation) ? targetLocation : rdd.replace(sourceLocation, targetLocation)).cache().count();\n-            // TODO: this should use the original storage level\n+\n+        replacementPattern = toRegularExpression( sourceLocation );\n+        for (final String rddName : rdds) {\n+            final String newLocation;\n+\n+            newLocation = replacementPattern.matcher( rddName ).replaceFirst( targetLocation );\n+\n+            Spark.getRDD(rddName).toJavaRDD().filter(a -> true)  // a clone of the source RDD\n+                 .setName(newLocation)\n+                 .cache()\n+                 .count();\n         }\n         return true;\n     }\n \n     @Override\n     public boolean exists(final String location) {\n-        return this.ls(location).size() > 0;\n+        return thereIsMatching(location);\n     }\n \n     @Override\n-    public boolean rm(final String location) {\n+    public boolean rm(final String pattern) {\n         final List<String> rdds = new ArrayList<>();\n-        final String wildCardLocation = (location.endsWith(\"*\") ? location : location + \"*\").replace('\\\\', '/').replace(\".\", \"\\\\.\").replace(\"*\", \".*\");\n-        for (final RDD<?> rdd : Spark.getRDDs()) {\n-            if (rdd.name().replace('\\\\', '/').matches(wildCardLocation))\n-                rdds.add(rdd.name());\n-        }\n+\n+        forEachMatching( pattern, rdd -> rdds.add(rdd.name()));\n+\n         rdds.forEach(Spark::removeRDD);\n         return rdds.size() > 0;\n     }\n@@ -151,7 +221,6 @@ public boolean rm(final String location) {\n         return IteratorUtils.map(Spark.getRDD(location).toJavaRDD().take(totalLines).iterator(), Object::toString);\n     }\n \n-    // TODO: @Override\n     public String describe(final String location) {\n         return Spark.getRDD(location).toDebugString();\n     }",
                "deletions": 23
            },
            {
                "sha": "a150abb3f4fec364297b7c10661028db8827d4c6",
                "filename": "spark-gremlin/src/test/java/org/apache/tinkerpop/gremlin/spark/process/computer/LocalPropertyTest.java",
                "blob_url": "https://github.com/apache/tinkerpop/blob/1088cd9be6ecdcb37bee357a783f01f01bdc366a/spark-gremlin/src/test/java/org/apache/tinkerpop/gremlin/spark/process/computer/LocalPropertyTest.java",
                "raw_url": "https://github.com/apache/tinkerpop/raw/1088cd9be6ecdcb37bee357a783f01f01bdc366a/spark-gremlin/src/test/java/org/apache/tinkerpop/gremlin/spark/process/computer/LocalPropertyTest.java",
                "status": "modified",
                "changes": 2,
                "additions": 1,
                "contents_url": "https://api.github.com/repos/apache/tinkerpop/contents/spark-gremlin/src/test/java/org/apache/tinkerpop/gremlin/spark/process/computer/LocalPropertyTest.java?ref=1088cd9be6ecdcb37bee357a783f01f01bdc366a",
                "patch": "@@ -51,7 +51,7 @@\n     @Test\n     public void shouldSetThreadLocalProperties() throws Exception {\n         final String testName = \"ThreadLocalProperties\";\n-        final String rddName = TestHelper.makeTestDataDirectory(LocalPropertyTest.class) + UUID.randomUUID().toString();\n+        final String rddName = TestHelper.makeTestDataDirectory(LocalPropertyTest.class, UUID.randomUUID().toString());\n         final Configuration configuration = new BaseConfiguration();\n         configuration.setProperty(\"spark.master\", \"local[4]\");\n         configuration.setProperty(\"spark.serializer\", GryoSerializer.class.getCanonicalName());",
                "deletions": 1
            },
            {
                "sha": "8fda793cafb0ce45bcf912b10ca68d16a0360603",
                "filename": "spark-gremlin/src/test/java/org/apache/tinkerpop/gremlin/spark/process/computer/SparkHadoopGraphGryoSerializerProvider.java",
                "blob_url": "https://github.com/apache/tinkerpop/blob/1088cd9be6ecdcb37bee357a783f01f01bdc366a/spark-gremlin/src/test/java/org/apache/tinkerpop/gremlin/spark/process/computer/SparkHadoopGraphGryoSerializerProvider.java",
                "raw_url": "https://github.com/apache/tinkerpop/raw/1088cd9be6ecdcb37bee357a783f01f01bdc366a/spark-gremlin/src/test/java/org/apache/tinkerpop/gremlin/spark/process/computer/SparkHadoopGraphGryoSerializerProvider.java",
                "status": "modified",
                "changes": 1,
                "additions": 1,
                "contents_url": "https://api.github.com/repos/apache/tinkerpop/contents/spark-gremlin/src/test/java/org/apache/tinkerpop/gremlin/spark/process/computer/SparkHadoopGraphGryoSerializerProvider.java?ref=1088cd9be6ecdcb37bee357a783f01f01bdc366a",
                "patch": "@@ -41,6 +41,7 @@\n         final Map<String, Object> config = super.getBaseConfiguration(graphName, test, testMethodName, loadGraphWith);\n         config.put(Constants.SPARK_SERIALIZER, GryoSerializer.class.getCanonicalName());\n         config.remove(Constants.SPARK_KRYO_REGISTRATOR);\n+\n         return config;\n     }\n }",
                "deletions": 0
            },
            {
                "sha": "26de4e121114d1388a006ef94c9a5d8bb9acf11d",
                "filename": "spark-gremlin/src/test/java/org/apache/tinkerpop/gremlin/spark/process/computer/SparkHadoopGraphProvider.java",
                "blob_url": "https://github.com/apache/tinkerpop/blob/1088cd9be6ecdcb37bee357a783f01f01bdc366a/spark-gremlin/src/test/java/org/apache/tinkerpop/gremlin/spark/process/computer/SparkHadoopGraphProvider.java",
                "raw_url": "https://github.com/apache/tinkerpop/raw/1088cd9be6ecdcb37bee357a783f01f01bdc366a/spark-gremlin/src/test/java/org/apache/tinkerpop/gremlin/spark/process/computer/SparkHadoopGraphProvider.java",
                "status": "modified",
                "changes": 5,
                "additions": 4,
                "contents_url": "https://api.github.com/repos/apache/tinkerpop/contents/spark-gremlin/src/test/java/org/apache/tinkerpop/gremlin/spark/process/computer/SparkHadoopGraphProvider.java?ref=1088cd9be6ecdcb37bee357a783f01f01bdc366a",
                "patch": "@@ -61,7 +61,10 @@\n         }\n \n         final Map<String, Object> config = super.getBaseConfiguration(graphName, test, testMethodName, loadGraphWith);\n-        config.put(Constants.GREMLIN_SPARK_PERSIST_CONTEXT, true);  // this makes the test suite go really fast\n+\n+        // Make sure Spark is shut down before deleting its files and directories,\n+        // which are locked under Windows and fail the tests. See FileSystemStorageCheck\n+        config.put(Constants.GREMLIN_SPARK_PERSIST_CONTEXT, false);\n \n         // toy graph inputRDD does not have corresponding outputRDD so where jobs chain, it fails (failing makes sense)\n         if (null != loadGraphWith &&",
                "deletions": 1
            },
            {
                "sha": "539f67a91928a0079a5622777be7b6e1e329ef02",
                "filename": "spark-gremlin/src/test/java/org/apache/tinkerpop/gremlin/spark/structure/SparkTest.java",
                "blob_url": "https://github.com/apache/tinkerpop/blob/1088cd9be6ecdcb37bee357a783f01f01bdc366a/spark-gremlin/src/test/java/org/apache/tinkerpop/gremlin/spark/structure/SparkTest.java",
                "raw_url": "https://github.com/apache/tinkerpop/raw/1088cd9be6ecdcb37bee357a783f01f01bdc366a/spark-gremlin/src/test/java/org/apache/tinkerpop/gremlin/spark/structure/SparkTest.java",
                "status": "modified",
                "changes": 3,
                "additions": 1,
                "contents_url": "https://api.github.com/repos/apache/tinkerpop/contents/spark-gremlin/src/test/java/org/apache/tinkerpop/gremlin/spark/structure/SparkTest.java?ref=1088cd9be6ecdcb37bee357a783f01f01bdc366a",
                "patch": "@@ -52,8 +52,7 @@\n \n     @Test\n     public void testSparkRDDPersistence() throws Exception {\n-        final String root = TestHelper.makeTestDataDirectory(SparkTest.class, \"testSparkRDDPersistence\");\n-        final String prefix = root + File.separator + \"graphRDD-\";\n+        final String prefix = TestHelper.makeTestDataFile(SparkTest.class, \"testSparkRDDPersistence\", \"graphRDD-\");\n         final Configuration configuration = new BaseConfiguration();\n         configuration.setProperty(\"spark.master\", \"local[4]\");\n         Spark.create(configuration);",
                "deletions": 2
            },
            {
                "sha": "24b44a671cefba9dfde4413f044843dc590c75be",
                "filename": "spark-gremlin/src/test/java/org/apache/tinkerpop/gremlin/spark/structure/io/PersistedInputOutputRDDIntegrateTest.java",
                "blob_url": "https://github.com/apache/tinkerpop/blob/1088cd9be6ecdcb37bee357a783f01f01bdc366a/spark-gremlin/src/test/java/org/apache/tinkerpop/gremlin/spark/structure/io/PersistedInputOutputRDDIntegrateTest.java",
                "raw_url": "https://github.com/apache/tinkerpop/raw/1088cd9be6ecdcb37bee357a783f01f01bdc366a/spark-gremlin/src/test/java/org/apache/tinkerpop/gremlin/spark/structure/io/PersistedInputOutputRDDIntegrateTest.java",
                "status": "modified",
                "changes": 8,
                "additions": 4,
                "contents_url": "https://api.github.com/repos/apache/tinkerpop/contents/spark-gremlin/src/test/java/org/apache/tinkerpop/gremlin/spark/structure/io/PersistedInputOutputRDDIntegrateTest.java?ref=1088cd9be6ecdcb37bee357a783f01f01bdc366a",
                "patch": "@@ -222,7 +222,7 @@ public void testBulkLoaderVertexProgramChain() throws Exception {\n         final Configuration writeConfiguration = new BaseConfiguration();\n         writeConfiguration.setProperty(Graph.GRAPH, TinkerGraph.class.getCanonicalName());\n         writeConfiguration.setProperty(TinkerGraph.GREMLIN_TINKERGRAPH_GRAPH_FORMAT, \"gryo\");\n-        writeConfiguration.setProperty(TinkerGraph.GREMLIN_TINKERGRAPH_GRAPH_LOCATION, TestHelper.makeTestDataDirectory(PersistedInputOutputRDDIntegrateTest.class) + \"testBulkLoaderVertexProgramChain.kryo\");\n+        writeConfiguration.setProperty(TinkerGraph.GREMLIN_TINKERGRAPH_GRAPH_LOCATION, TestHelper.makeTestDataFile(PersistedInputOutputRDDIntegrateTest.class, \"testBulkLoaderVertexProgramChain.kryo\"));\n         final Graph bulkLoaderGraph = pageRankGraph.compute(SparkGraphComputer.class).persist(GraphComputer.Persist.VERTEX_PROPERTIES).program(PageRankVertexProgram.build().create(pageRankGraph)).submit().get().graph();\n         bulkLoaderGraph.compute(SparkGraphComputer.class)\n                 .persist(GraphComputer.Persist.NOTHING)\n@@ -239,7 +239,7 @@ public void testBulkLoaderVertexProgramChain() throws Exception {\n         ////\n         final Graph graph = TinkerGraph.open();\n         final GraphTraversalSource g = graph.traversal();\n-        graph.io(IoCore.gryo()).readGraph(TestHelper.makeTestDataDirectory(PersistedInputOutputRDDIntegrateTest.class) + \"testBulkLoaderVertexProgramChain.kryo\");\n+        graph.io(IoCore.gryo()).readGraph(TestHelper.makeTestDataFile(PersistedInputOutputRDDIntegrateTest.class, \"testBulkLoaderVertexProgramChain.kryo\"));\n         assertEquals(6l, g.V().count().next().longValue());\n         assertEquals(0l, g.E().count().next().longValue());\n         assertEquals(\"marko\", g.V().has(\"name\", \"marko\").values(\"name\").next());\n@@ -264,7 +264,7 @@ public void testBulkLoaderVertexProgramChainWithInputOutputHelperMapping() throw\n         final Configuration writeConfiguration = new BaseConfiguration();\n         writeConfiguration.setProperty(Graph.GRAPH, TinkerGraph.class.getCanonicalName());\n         writeConfiguration.setProperty(TinkerGraph.GREMLIN_TINKERGRAPH_GRAPH_FORMAT, \"gryo\");\n-        writeConfiguration.setProperty(TinkerGraph.GREMLIN_TINKERGRAPH_GRAPH_LOCATION, TestHelper.makeTestDataDirectory(PersistedInputOutputRDDIntegrateTest.class) + \"testBulkLoaderVertexProgramChainWithInputOutputHelperMapping.kryo\");\n+        writeConfiguration.setProperty(TinkerGraph.GREMLIN_TINKERGRAPH_GRAPH_LOCATION, TestHelper.makeTestDataFile(PersistedInputOutputRDDIntegrateTest.class, \"testBulkLoaderVertexProgramChainWithInputOutputHelperMapping.kryo\"));\n         final Graph bulkLoaderGraph = pageRankGraph.compute(SparkGraphComputer.class).persist(GraphComputer.Persist.EDGES).program(PageRankVertexProgram.build().create(pageRankGraph)).submit().get().graph();\n         bulkLoaderGraph.compute(SparkGraphComputer.class)\n                 .persist(GraphComputer.Persist.NOTHING)\n@@ -278,7 +278,7 @@ public void testBulkLoaderVertexProgramChainWithInputOutputHelperMapping() throw\n         ////\n         final Graph graph = TinkerGraph.open();\n         final GraphTraversalSource g = graph.traversal();\n-        graph.io(IoCore.gryo()).readGraph(TestHelper.makeTestDataDirectory(PersistedInputOutputRDDIntegrateTest.class) + \"testBulkLoaderVertexProgramChainWithInputOutputHelperMapping.kryo\");\n+        graph.io(IoCore.gryo()).readGraph(TestHelper.makeTestDataDirectory(PersistedInputOutputRDDIntegrateTest.class, \"testBulkLoaderVertexProgramChainWithInputOutputHelperMapping.kryo\"));\n         assertEquals(6l, g.V().count().next().longValue());\n         assertEquals(6l, g.E().count().next().longValue());\n         assertEquals(\"marko\", g.V().has(\"name\", \"marko\").values(\"name\").next());",
                "deletions": 4
            },
            {
                "sha": "0f7e984c82fe1073d7c6ede38063a723643e9c69",
                "filename": "spark-gremlin/src/test/java/org/apache/tinkerpop/gremlin/spark/structure/io/SparkContextStorageCheck.java",
                "blob_url": "https://github.com/apache/tinkerpop/blob/1088cd9be6ecdcb37bee357a783f01f01bdc366a/spark-gremlin/src/test/java/org/apache/tinkerpop/gremlin/spark/structure/io/SparkContextStorageCheck.java",
                "raw_url": "https://github.com/apache/tinkerpop/raw/1088cd9be6ecdcb37bee357a783f01f01bdc366a/spark-gremlin/src/test/java/org/apache/tinkerpop/gremlin/spark/structure/io/SparkContextStorageCheck.java",
                "status": "modified",
                "changes": 37,
                "additions": 29,
                "contents_url": "https://api.github.com/repos/apache/tinkerpop/contents/spark-gremlin/src/test/java/org/apache/tinkerpop/gremlin/spark/structure/io/SparkContextStorageCheck.java?ref=1088cd9be6ecdcb37bee357a783f01f01bdc366a",
                "patch": "@@ -19,12 +19,14 @@\n \n package org.apache.tinkerpop.gremlin.spark.structure.io;\n \n-import org.apache.spark.SparkConf;\n import org.apache.spark.api.java.JavaSparkContext;\n import org.apache.spark.storage.StorageLevel;\n+import org.apache.tinkerpop.gremlin.GraphManager;\n import org.apache.tinkerpop.gremlin.LoadGraphWith;\n+import org.apache.tinkerpop.gremlin.TestHelper;\n import org.apache.tinkerpop.gremlin.hadoop.Constants;\n import org.apache.tinkerpop.gremlin.hadoop.structure.io.AbstractStorageCheck;\n+import org.apache.tinkerpop.gremlin.spark.process.computer.SparkHadoopGraphProvider;\n import org.apache.tinkerpop.gremlin.spark.structure.Spark;\n import org.apache.tinkerpop.gremlin.structure.io.Storage;\n import org.junit.After;\n@@ -36,31 +38,40 @@\n  */\n public class SparkContextStorageCheck extends AbstractStorageCheck {\n \n-    @Before\n+  @Before\n     public void setup() throws Exception {\n+        GraphManager.setGraphProvider(new SparkHadoopGraphProvider());\n+\n         super.setup();\n-        SparkContextStorage.open(\"local[4]\");\n-        Spark.close();\n     }\n \n     @After\n     public void tearDown() throws Exception {\n         super.tearDown();\n-        Spark.create(\"local[4]\");\n-        Spark.close();\n     }\n \n     @Test\n     @LoadGraphWith(LoadGraphWith.GraphData.MODERN)\n     public void shouldSupportHeadMethods() throws Exception {\n-        final Storage storage = SparkContextStorage.open(graph.configuration());\n+\n+        graph.configuration().setProperty(Constants.GREMLIN_SPARK_PERSIST_CONTEXT, true);\n+\n         final String outputLocation = graph.configuration().getString(Constants.GREMLIN_HADOOP_OUTPUT_LOCATION);\n+        final Storage storage = SparkContextStorage.open(graph.configuration());\n+\n+        storage.rm(outputLocation);\n+\n         super.checkHeadMethods(storage, graph.configuration().getString(Constants.GREMLIN_HADOOP_INPUT_LOCATION), outputLocation, PersistedInputRDD.class, PersistedInputRDD.class);\n     }\n \n     @Test\n     @LoadGraphWith(LoadGraphWith.GraphData.MODERN)\n     public void shouldSupportRemoveAndListMethods() throws Exception {\n+\n+        // This test expects that Spark is kept open while attempting to destroy its directories\n+\n+        graph.configuration().setProperty(Constants.GREMLIN_SPARK_PERSIST_CONTEXT, true);\n+\n         final Storage storage = SparkContextStorage.open(graph.configuration());\n         final String outputLocation = graph.configuration().getString(Constants.GREMLIN_HADOOP_OUTPUT_LOCATION);\n         super.checkRemoveAndListMethods(storage, outputLocation);\n@@ -69,22 +80,32 @@ public void shouldSupportRemoveAndListMethods() throws Exception {\n     @Test\n     @LoadGraphWith(LoadGraphWith.GraphData.MODERN)\n     public void shouldSupportCopyMethods() throws Exception {\n+\n+        graph.configuration().setProperty(Constants.GREMLIN_SPARK_PERSIST_CONTEXT, true);\n+\n         final Storage storage = SparkContextStorage.open(graph.configuration());\n         final String outputLocation = graph.configuration().getString(Constants.GREMLIN_HADOOP_OUTPUT_LOCATION);\n-        final String newOutputLocation = \"new-location-for-copy\";\n+        final String newOutputLocation = TestHelper.makeTestDataDirectory(this.getClass(), \"new-location-for-copy\");\n+\n         super.checkCopyMethods(storage, outputLocation, newOutputLocation, PersistedInputRDD.class, PersistedInputRDD.class);\n     }\n \n     @Test\n     @LoadGraphWith(LoadGraphWith.GraphData.MODERN)\n     public void shouldNotHaveResidualDataInStorage() throws Exception {\n+\n+        graph.configuration().setProperty(Constants.GREMLIN_SPARK_PERSIST_CONTEXT, true);\n+\n         final Storage storage = SparkContextStorage.open(graph.configuration());\n         final String outputLocation = graph.configuration().getString(Constants.GREMLIN_HADOOP_OUTPUT_LOCATION);\n         super.checkResidualDataInStorage(storage, outputLocation);\n     }\n \n     @Test\n     public void shouldSupportDirectoryFileDistinction() throws Exception {\n+\n+        graph.configuration().setProperty(Constants.GREMLIN_SPARK_PERSIST_CONTEXT, true);\n+\n         final Storage storage = SparkContextStorage.open(graph.configuration());\n         for (int i = 0; i < 10; i++) {\n             JavaSparkContext.fromSparkContext(Spark.getContext()).emptyRDD().setName(\"directory1/file1-\" + i + \".txt.bz\").persist(StorageLevel.DISK_ONLY());",
                "deletions": 8
            },
            {
                "sha": "1f47f0ed0fee1f18c6aabda9e30ff6d579950e7e",
                "filename": "spark-gremlin/src/test/java/org/apache/tinkerpop/gremlin/spark/structure/io/gryo/GryoSerializerIntegrateTest.java",
                "blob_url": "https://github.com/apache/tinkerpop/blob/1088cd9be6ecdcb37bee357a783f01f01bdc366a/spark-gremlin/src/test/java/org/apache/tinkerpop/gremlin/spark/structure/io/gryo/GryoSerializerIntegrateTest.java",
                "raw_url": "https://github.com/apache/tinkerpop/raw/1088cd9be6ecdcb37bee357a783f01f01bdc366a/spark-gremlin/src/test/java/org/apache/tinkerpop/gremlin/spark/structure/io/gryo/GryoSerializerIntegrateTest.java",
                "status": "modified",
                "changes": 4,
                "additions": 3,
                "contents_url": "https://api.github.com/repos/apache/tinkerpop/contents/spark-gremlin/src/test/java/org/apache/tinkerpop/gremlin/spark/structure/io/gryo/GryoSerializerIntegrateTest.java?ref=1088cd9be6ecdcb37bee357a783f01f01bdc366a",
                "patch": "@@ -56,7 +56,9 @@ public void shouldHaveAllRegisteredGryoSerializerClasses() throws Exception {\n         final TinkerGraph randomGraph = TinkerGraph.open();\n         int totalVertices = 200000;\n         TestHelper.createRandomGraph(randomGraph, totalVertices, 100);\n-        final String inputLocation = TestHelper.makeTestDataDirectory(GryoSerializerIntegrateTest.class, UUID.randomUUID().toString()) + \"/random-graph.kryo\";\n+        final String inputLocation = TestHelper.makeTestDataFile(GryoSerializerIntegrateTest.class,\n+                                                                 UUID.randomUUID().toString(),\n+                                                                 \"/random-graph.kryo\");\n         randomGraph.io(IoCore.gryo()).writeGraph(inputLocation);\n         randomGraph.clear();\n         randomGraph.close();",
                "deletions": 1
            },
            {
                "sha": "a70e4c15e1b5456617bea84bea7a8b53ba40a74d",
                "filename": "tinkergraph-gremlin/src/test/java/org/apache/tinkerpop/gremlin/tinkergraph/TinkerGraphProvider.java",
                "blob_url": "https://github.com/apache/tinkerpop/blob/1088cd9be6ecdcb37bee357a783f01f01bdc366a/tinkergraph-gremlin/src/test/java/org/apache/tinkerpop/gremlin/tinkergraph/TinkerGraphProvider.java",
                "raw_url": "https://github.com/apache/tinkerpop/raw/1088cd9be6ecdcb37bee357a783f01f01bdc366a/tinkergraph-gremlin/src/test/java/org/apache/tinkerpop/gremlin/tinkergraph/TinkerGraphProvider.java",
                "status": "modified",
                "changes": 16,
                "additions": 7,
                "contents_url": "https://api.github.com/repos/apache/tinkerpop/contents/tinkergraph-gremlin/src/test/java/org/apache/tinkerpop/gremlin/tinkergraph/TinkerGraphProvider.java?ref=1088cd9be6ecdcb37bee357a783f01f01bdc366a",
                "patch": "@@ -18,6 +18,12 @@\n  */\n package org.apache.tinkerpop.gremlin.tinkergraph;\n \n+import java.io.File;\n+import java.util.HashMap;\n+import java.util.HashSet;\n+import java.util.Map;\n+import java.util.Set;\n+\n import org.apache.commons.configuration.Configuration;\n import org.apache.tinkerpop.gremlin.AbstractGraphProvider;\n import org.apache.tinkerpop.gremlin.LoadGraphWith;\n@@ -37,12 +43,6 @@\n import org.apache.tinkerpop.gremlin.tinkergraph.structure.TinkerVertex;\n import org.apache.tinkerpop.gremlin.tinkergraph.structure.TinkerVertexProperty;\n \n-import java.io.File;\n-import java.util.HashMap;\n-import java.util.HashSet;\n-import java.util.Map;\n-import java.util.Set;\n-\n /**\n  * @author Stephen Mallette (http://stephen.genoprime.com)\n  */\n@@ -72,9 +72,7 @@\n                 put(TinkerGraph.GREMLIN_TINKERGRAPH_DEFAULT_VERTEX_PROPERTY_CARDINALITY, VertexProperty.Cardinality.list.name());\n             if (requiresPersistence(test, testMethodName)) {\n                 put(TinkerGraph.GREMLIN_TINKERGRAPH_GRAPH_FORMAT, \"gryo\");\n-                final File tempDir = TestHelper.makeTestDataPath(test, \"temp\");\n-                put(TinkerGraph.GREMLIN_TINKERGRAPH_GRAPH_LOCATION,\n-                        tempDir.getAbsolutePath() + File.separator + testMethodName + \".kryo\");\n+                put(TinkerGraph.GREMLIN_TINKERGRAPH_GRAPH_LOCATION,TestHelper.makeTestDataFile(test, \"temp\", testMethodName + \".kryo\"));\n             }\n         }};\n     }",
                "deletions": 9
            },
            {
                "sha": "fc75093cb921b4e436b53f09322f61a79c6242d6",
                "filename": "tinkergraph-gremlin/src/test/java/org/apache/tinkerpop/gremlin/tinkergraph/TinkerGraphUUIDProvider.java",
                "blob_url": "https://github.com/apache/tinkerpop/blob/1088cd9be6ecdcb37bee357a783f01f01bdc366a/tinkergraph-gremlin/src/test/java/org/apache/tinkerpop/gremlin/tinkergraph/TinkerGraphUUIDProvider.java",
                "raw_url": "https://github.com/apache/tinkerpop/raw/1088cd9be6ecdcb37bee357a783f01f01bdc366a/tinkergraph-gremlin/src/test/java/org/apache/tinkerpop/gremlin/tinkergraph/TinkerGraphUUIDProvider.java",
                "status": "modified",
                "changes": 4,
                "additions": 1,
                "contents_url": "https://api.github.com/repos/apache/tinkerpop/contents/tinkergraph-gremlin/src/test/java/org/apache/tinkerpop/gremlin/tinkergraph/TinkerGraphUUIDProvider.java?ref=1088cd9be6ecdcb37bee357a783f01f01bdc366a",
                "patch": "@@ -48,9 +48,7 @@\n                 put(TinkerGraph.GREMLIN_TINKERGRAPH_DEFAULT_VERTEX_PROPERTY_CARDINALITY, VertexProperty.Cardinality.list.name());\n             if (requiresPersistence(test, testMethodName)) {\n                 put(TinkerGraph.GREMLIN_TINKERGRAPH_GRAPH_FORMAT, \"gryo\");\n-                final File tempDir = TestHelper.makeTestDataPath(test, \"temp\");\n-                put(TinkerGraph.GREMLIN_TINKERGRAPH_GRAPH_LOCATION,\n-                        tempDir.getAbsolutePath() + File.separator + testMethodName + \".kryo\");\n+                put(TinkerGraph.GREMLIN_TINKERGRAPH_GRAPH_LOCATION, TestHelper.makeTestDataFile(test, \"temp\", testMethodName + \".kryo\"));\n             }\n         }};\n     }",
                "deletions": 3
            },
            {
                "sha": "e7acac2fd3123009e63a2c4dd4f603e51a29d52a",
                "filename": "tinkergraph-gremlin/src/test/java/org/apache/tinkerpop/gremlin/tinkergraph/structure/IoDataGenerationTest.java",
                "blob_url": "https://github.com/apache/tinkerpop/blob/1088cd9be6ecdcb37bee357a783f01f01bdc366a/tinkergraph-gremlin/src/test/java/org/apache/tinkerpop/gremlin/tinkergraph/structure/IoDataGenerationTest.java",
                "raw_url": "https://github.com/apache/tinkerpop/raw/1088cd9be6ecdcb37bee357a783f01f01bdc366a/tinkergraph-gremlin/src/test/java/org/apache/tinkerpop/gremlin/tinkergraph/structure/IoDataGenerationTest.java",
                "status": "modified",
                "changes": 141,
                "additions": 69,
                "contents_url": "https://api.github.com/repos/apache/tinkerpop/contents/tinkergraph-gremlin/src/test/java/org/apache/tinkerpop/gremlin/tinkergraph/structure/IoDataGenerationTest.java?ref=1088cd9be6ecdcb37bee357a783f01f01bdc366a",
                "patch": "@@ -18,6 +18,13 @@\n  */\n package org.apache.tinkerpop.gremlin.tinkergraph.structure;\n \n+import java.io.File;\n+import java.io.FileOutputStream;\n+import java.io.IOException;\n+import java.io.InputStream;\n+import java.io.OutputStream;\n+import java.util.stream.IntStream;\n+\n import org.apache.commons.io.FileUtils;\n import org.apache.tinkerpop.gremlin.AbstractGremlinTest;\n import org.apache.tinkerpop.gremlin.TestHelper;\n@@ -37,41 +44,31 @@\n import org.apache.tinkerpop.gremlin.structure.io.gryo.GryoReader;\n import org.apache.tinkerpop.gremlin.structure.io.gryo.GryoVersion;\n import org.apache.tinkerpop.gremlin.structure.io.gryo.GryoWriter;\n-import org.junit.BeforeClass;\n+import org.junit.Before;\n import org.junit.Test;\n \n-import java.io.File;\n-import java.io.FileOutputStream;\n-import java.io.IOException;\n-import java.io.InputStream;\n-import java.io.OutputStream;\n-import java.util.stream.IntStream;\n-\n /**\n  * Less of a test of functionality and more of a tool to help generate data files for TinkerPop.\n  *\n  * @author Stephen Mallette (http://stephen.genoprime.com)\n  */\n public class IoDataGenerationTest {\n-    private static final String tempPath;\n+    private File tempPath;\n \n-    static {\n-        tempPath = TestHelper.makeTestDataPath(TinkerGraphTest.class, \"tinkerpop-io\").getPath() + File.separator;\n-    }\n+    @Before\n+    public void before() throws IOException {\n+        tempPath = TestHelper.makeTestDataPath(TinkerGraphTest.class, \"tinkerpop-io\");\n \n-    @BeforeClass\n-    public static void before() throws IOException {\n-        final File tempDir = new File(tempPath);\n-        FileUtils.deleteDirectory(tempDir);\n-        if (!tempDir.mkdirs()) throw new IOException(String.format(\"Could not create %s\", tempDir));\n+        FileUtils.deleteDirectory(tempPath);\n+        if (!tempPath.mkdirs()) throw new IOException(String.format(\"Could not create %s\", tempPath));\n     }\n \n     /**\n      * No assertions.  Just write out the graph for convenience.\n      */\n     @Test\n     public void shouldWriteClassicGraphAsGryoV1d0() throws IOException {\n-        final OutputStream os = new FileOutputStream(tempPath + \"tinkerpop-classic-v1d0.kryo\");\n+        final OutputStream os = new FileOutputStream(new File(tempPath, \"tinkerpop-classic-v1d0.kryo\"));\n         GryoWriter.build().mapper(GryoMapper.build().version(GryoVersion.V1_0).create()).create().writeGraph(os, TinkerFactory.createClassic());\n         os.close();\n     }\n@@ -81,7 +78,7 @@ public void shouldWriteClassicGraphAsGryoV1d0() throws IOException {\n      */\n     @Test\n     public void shouldWriteModernGraphAsGryoV1d0() throws IOException {\n-        final OutputStream os = new FileOutputStream(tempPath + \"tinkerpop-modern-v1d0.kryo\");\n+        final OutputStream os = new FileOutputStream(new File(tempPath, \"tinkerpop-modern-v1d0.kryo\"));\n         GryoWriter.build().mapper(GryoMapper.build().version(GryoVersion.V1_0).create()).create().writeGraph(os, TinkerFactory.createModern());\n         os.close();\n     }\n@@ -91,7 +88,7 @@ public void shouldWriteModernGraphAsGryoV1d0() throws IOException {\n      */\n     @Test\n     public void shouldWriteCrewGraphAsGryoV1d0() throws IOException {\n-        final OutputStream os = new FileOutputStream(tempPath + \"tinkerpop-crew-v1d0.kryo\");\n+        final OutputStream os = new FileOutputStream(new File(tempPath, \"tinkerpop-crew-v1d0.kryo\"));\n         GryoWriter.build().mapper(GryoMapper.build().version(GryoVersion.V1_0).create()).create().writeGraph(os, TinkerFactory.createTheCrew());\n         os.close();\n     }\n@@ -101,7 +98,7 @@ public void shouldWriteCrewGraphAsGryoV1d0() throws IOException {\n      */\n     @Test\n     public void shouldWriteSinkGraphAsGryoV1d0() throws IOException {\n-        final OutputStream os = new FileOutputStream(tempPath + \"tinkerpop-sink-v1d0.kryo\");\n+        final OutputStream os = new FileOutputStream(new File(tempPath, \"tinkerpop-sink-v1d0.kryo\"));\n         GryoWriter.build().mapper(GryoMapper.build().version(GryoVersion.V1_0).create()).create().writeGraph(os, TinkerFactory.createKitchenSink());\n         os.close();\n     }\n@@ -111,7 +108,7 @@ public void shouldWriteSinkGraphAsGryoV1d0() throws IOException {\n      */\n     @Test\n     public void shouldWriteClassicGraphAsGryoV3d0() throws IOException {\n-        final OutputStream os = new FileOutputStream(tempPath + \"tinkerpop-classic-v3d0.kryo\");\n+        final OutputStream os = new FileOutputStream(new File(tempPath, \"tinkerpop-classic-v3d0.kryo\"));\n         GryoWriter.build().mapper(GryoMapper.build().version(GryoVersion.V3_0).create()).create().writeGraph(os, TinkerFactory.createClassic());\n         os.close();\n     }\n@@ -121,7 +118,7 @@ public void shouldWriteClassicGraphAsGryoV3d0() throws IOException {\n      */\n     @Test\n     public void shouldWriteModernGraphAsGryoV3d0() throws IOException {\n-        final OutputStream os = new FileOutputStream(tempPath + \"tinkerpop-modern-v3d0.kryo\");\n+        final OutputStream os = new FileOutputStream(new File(tempPath, \"tinkerpop-modern-v3d0.kryo\"));\n         GryoWriter.build().mapper(GryoMapper.build().version(GryoVersion.V3_0).create()).create().writeGraph(os, TinkerFactory.createModern());\n         os.close();\n     }\n@@ -131,7 +128,7 @@ public void shouldWriteModernGraphAsGryoV3d0() throws IOException {\n      */\n     @Test\n     public void shouldWriteCrewGraphAsGryoV3d0() throws IOException {\n-        final OutputStream os = new FileOutputStream(tempPath + \"tinkerpop-crew-v3d0.kryo\");\n+        final OutputStream os = new FileOutputStream(new File(tempPath, \"tinkerpop-crew-v3d0.kryo\"));\n         GryoWriter.build().mapper(GryoMapper.build().version(GryoVersion.V3_0).create()).create().writeGraph(os, TinkerFactory.createTheCrew());\n         os.close();\n     }\n@@ -141,7 +138,7 @@ public void shouldWriteCrewGraphAsGryoV3d0() throws IOException {\n      */\n     @Test\n     public void shouldWriteSinkGraphAsGryoV3d0() throws IOException {\n-        final OutputStream os = new FileOutputStream(tempPath + \"tinkerpop-sink-v3d0.kryo\");\n+        final OutputStream os = new FileOutputStream(new File(tempPath, \"tinkerpop-sink-v3d0.kryo\"));\n         GryoWriter.build().mapper(GryoMapper.build().version(GryoVersion.V3_0).create()).create().writeGraph(os, TinkerFactory.createKitchenSink());\n         os.close();\n     }\n@@ -151,7 +148,7 @@ public void shouldWriteSinkGraphAsGryoV3d0() throws IOException {\n      */\n     @Test\n     public void shouldWriteDEFAULTClassicGraphAsGryoV3d0() throws IOException {\n-        final OutputStream os = new FileOutputStream(tempPath + \"tinkerpop-classic.kryo\");\n+        final OutputStream os = new FileOutputStream(new File(tempPath, \"tinkerpop-classic.kryo\"));\n         GryoWriter.build().mapper(GryoMapper.build().version(GryoVersion.V3_0).create()).create().writeGraph(os, TinkerFactory.createClassic());\n         os.close();\n     }\n@@ -161,7 +158,7 @@ public void shouldWriteDEFAULTClassicGraphAsGryoV3d0() throws IOException {\n      */\n     @Test\n     public void shouldWriteDEFAULTModernGraphAsGryoV3d0() throws IOException {\n-        final OutputStream os = new FileOutputStream(tempPath + \"tinkerpop-modern.kryo\");\n+        final OutputStream os = new FileOutputStream(new File(tempPath, \"tinkerpop-modern.kryo\"));\n         GryoWriter.build().mapper(GryoMapper.build().version(GryoVersion.V3_0).create()).create().writeGraph(os, TinkerFactory.createModern());\n         os.close();\n     }\n@@ -171,7 +168,7 @@ public void shouldWriteDEFAULTModernGraphAsGryoV3d0() throws IOException {\n      */\n     @Test\n     public void shouldWriteDEFAULTCrewGraphAsGryoV3d0() throws IOException {\n-        final OutputStream os = new FileOutputStream(tempPath + \"tinkerpop-crew.kryo\");\n+        final OutputStream os = new FileOutputStream(new File(tempPath, \"tinkerpop-crew.kryo\"));\n         GryoWriter.build().mapper(GryoMapper.build().version(GryoVersion.V3_0).create()).create().writeGraph(os, TinkerFactory.createTheCrew());\n         os.close();\n     }\n@@ -181,7 +178,7 @@ public void shouldWriteDEFAULTCrewGraphAsGryoV3d0() throws IOException {\n      */\n     @Test\n     public void shouldWriteDEFAULTSinkGraphAsGryoV3d0() throws IOException {\n-        final OutputStream os = new FileOutputStream(tempPath + \"tinkerpop-sink.kryo\");\n+        final OutputStream os = new FileOutputStream(new File(tempPath, \"tinkerpop-sink.kryo\"));\n         GryoWriter.build().mapper(GryoMapper.build().version(GryoVersion.V3_0).create()).create().writeGraph(os, TinkerFactory.createKitchenSink());\n         os.close();\n     }\n@@ -191,7 +188,7 @@ public void shouldWriteDEFAULTSinkGraphAsGryoV3d0() throws IOException {\n      */\n     @Test\n     public void shouldWriteClassicGraphAsGraphML() throws IOException {\n-        try (final OutputStream os = new FileOutputStream(tempPath + \"tinkerpop-classic.xml\")) {\n+        try (final OutputStream os = new FileOutputStream(new File(tempPath, \"tinkerpop-classic.xml\"))) {\n             GraphMLWriter.build().create().writeGraph(os, TinkerFactory.createClassic());\n         }\n     }\n@@ -201,7 +198,7 @@ public void shouldWriteClassicGraphAsGraphML() throws IOException {\n      */\n     @Test\n     public void shouldWriteModernGraphAsGraphML() throws IOException {\n-        try (final OutputStream os = new FileOutputStream(tempPath + \"tinkerpop-modern.xml\")) {\n+        try (final OutputStream os = new FileOutputStream(new File(tempPath, \"tinkerpop-modern.xml\"))) {\n             GraphMLWriter.build().create().writeGraph(os, TinkerFactory.createModern());\n         }\n     }\n@@ -211,7 +208,7 @@ public void shouldWriteModernGraphAsGraphML() throws IOException {\n      */\n     @Test\n     public void shouldWriteClassicGraphAsGraphSONV1d0NoTypes() throws IOException {\n-        final OutputStream os = new FileOutputStream(tempPath + \"tinkerpop-classic-v1d0.json\");\n+        final OutputStream os = new FileOutputStream(new File(tempPath, \"tinkerpop-classic-v1d0.json\"));\n         GraphSONWriter.build().mapper(GraphSONMapper.build().version(GraphSONVersion.V1_0).typeInfo(TypeInfo.NO_TYPES).create()).create().writeGraph(os, TinkerFactory.createClassic());\n         os.close();\n     }\n@@ -221,7 +218,7 @@ public void shouldWriteClassicGraphAsGraphSONV1d0NoTypes() throws IOException {\n      */\n     @Test\n     public void shouldWriteModernGraphAsGraphSONV1d0NoTypes() throws IOException {\n-        final OutputStream os = new FileOutputStream(tempPath + \"tinkerpop-modern-v1d0.json\");\n+        final OutputStream os = new FileOutputStream(new File(tempPath, \"tinkerpop-modern-v1d0.json\"));\n         GraphSONWriter.build().mapper(GraphSONMapper.build().version(GraphSONVersion.V1_0).typeInfo(TypeInfo.NO_TYPES).create()).create().writeGraph(os, TinkerFactory.createModern());\n         os.close();\n     }\n@@ -231,7 +228,7 @@ public void shouldWriteModernGraphAsGraphSONV1d0NoTypes() throws IOException {\n      */\n     @Test\n     public void shouldWriteCrewGraphAsGraphSONV1d0NoTypes() throws IOException {\n-        final OutputStream os = new FileOutputStream(tempPath + \"tinkerpop-crew-v1d0.json\");\n+        final OutputStream os = new FileOutputStream(new File(tempPath, \"tinkerpop-crew-v1d0.json\"));\n         GraphSONWriter.build().mapper(GraphSONMapper.build().version(GraphSONVersion.V1_0).typeInfo(TypeInfo.NO_TYPES).create()).create().writeGraph(os, TinkerFactory.createTheCrew());\n         os.close();\n     }\n@@ -241,7 +238,7 @@ public void shouldWriteCrewGraphAsGraphSONV1d0NoTypes() throws IOException {\n      */\n     @Test\n     public void shouldWriteKitchenSinkAsGraphSONNoTypes() throws IOException {\n-        final OutputStream os = new FileOutputStream(tempPath + \"tinkerpop-sink-v1d0.json\");\n+        final OutputStream os = new FileOutputStream(new File(tempPath, \"tinkerpop-sink-v1d0.json\"));\n         GraphSONWriter.build().mapper(GraphSONMapper.build().version(GraphSONVersion.V1_0).typeInfo(TypeInfo.NO_TYPES).create()).create().writeGraph(os, TinkerFactory.createKitchenSink());\n         os.close();\n     }\n@@ -251,7 +248,7 @@ public void shouldWriteKitchenSinkAsGraphSONNoTypes() throws IOException {\n      */\n     @Test\n     public void shouldWriteClassicGraphNormalizedAsGraphSONV1d0() throws IOException {\n-        final OutputStream os = new FileOutputStream(tempPath + \"tinkerpop-classic-normalized-v1d0.json\");\n+        final OutputStream os = new FileOutputStream(new File(tempPath, \"tinkerpop-classic-normalized-v1d0.json\"));\n         GraphSONWriter.build().mapper(GraphSONMapper.build().normalize(true).version(GraphSONVersion.V1_0).typeInfo(TypeInfo.NO_TYPES).create()).create().writeGraph(os, TinkerFactory.createClassic());\n         os.close();\n     }\n@@ -261,7 +258,7 @@ public void shouldWriteClassicGraphNormalizedAsGraphSONV1d0() throws IOException\n      */\n     @Test\n     public void shouldWriteModernGraphNormalizedAsGraphSONV1d0() throws IOException {\n-        final OutputStream os = new FileOutputStream(tempPath + \"tinkerpop-modern-normalized-v1d0.json\");\n+        final OutputStream os = new FileOutputStream(new File(tempPath, \"tinkerpop-modern-normalized-v1d0.json\"));\n         GraphSONWriter.build().mapper(GraphSONMapper.build().normalize(true).version(GraphSONVersion.V1_0).typeInfo(TypeInfo.NO_TYPES).create()).create().writeGraph(os, TinkerFactory.createModern());\n         os.close();\n     }\n@@ -271,7 +268,7 @@ public void shouldWriteModernGraphNormalizedAsGraphSONV1d0() throws IOException\n      */\n     @Test\n     public void shouldWriteClassicGraphAsGraphSONV1d0WithTypes() throws IOException {\n-        final OutputStream os = new FileOutputStream(tempPath + \"tinkerpop-classic-typed-v1d0.json\");\n+        final OutputStream os = new FileOutputStream(new File(tempPath, \"tinkerpop-classic-typed-v1d0.json\"));\n         GraphSONWriter.build().mapper(GraphSONMapper.build().version(GraphSONVersion.V1_0).typeInfo(TypeInfo.PARTIAL_TYPES).create())\n                 .create().writeGraph(os, TinkerFactory.createClassic());\n         os.close();\n@@ -282,7 +279,7 @@ public void shouldWriteClassicGraphAsGraphSONV1d0WithTypes() throws IOException\n      */\n     @Test\n     public void shouldWriteModernGraphAsGraphSONV1d0WithTypes() throws IOException {\n-        final OutputStream os = new FileOutputStream(tempPath + \"tinkerpop-modern-typed-v1d0.json\");\n+        final OutputStream os = new FileOutputStream(new File(tempPath, \"tinkerpop-modern-typed-v1d0.json\"));\n         GraphSONWriter.build().mapper(GraphSONMapper.build().version(GraphSONVersion.V1_0).typeInfo(TypeInfo.PARTIAL_TYPES).create())\n                 .create().writeGraph(os, TinkerFactory.createModern());\n         os.close();\n@@ -293,7 +290,7 @@ public void shouldWriteModernGraphAsGraphSONV1d0WithTypes() throws IOException {\n      */\n     @Test\n     public void shouldWriteCrewGraphAsGraphSONV1d0WithTypes() throws IOException {\n-        final OutputStream os = new FileOutputStream(tempPath + \"tinkerpop-crew-typed-v1d0.json\");\n+        final OutputStream os = new FileOutputStream(new File(tempPath, \"tinkerpop-crew-typed-v1d0.json\"));\n         GraphSONWriter.build().mapper(GraphSONMapper.build().version(GraphSONVersion.V1_0).typeInfo(TypeInfo.PARTIAL_TYPES).create())\n                 .create().writeGraph(os, TinkerFactory.createTheCrew());\n         os.close();\n@@ -304,7 +301,7 @@ public void shouldWriteCrewGraphAsGraphSONV1d0WithTypes() throws IOException {\n      */\n     @Test\n     public void shouldWriteKitchenSinkAsGraphSONWithTypes() throws IOException {\n-        final OutputStream os = new FileOutputStream(tempPath + \"tinkerpop-sink-typed-v1d0.json\");\n+        final OutputStream os = new FileOutputStream(new File(tempPath, \"tinkerpop-sink-typed-v1d0.json\"));\n         GraphSONWriter.build().mapper(GraphSONMapper.build().version(GraphSONVersion.V1_0).typeInfo(TypeInfo.PARTIAL_TYPES).create())\n                 .create().writeGraph(os, TinkerFactory.createKitchenSink());\n         os.close();\n@@ -315,7 +312,7 @@ public void shouldWriteKitchenSinkAsGraphSONWithTypes() throws IOException {\n      */\n     @Test\n     public void shouldWriteClassicGraphAsGraphSONV2d0NoTypes() throws IOException {\n-        final OutputStream os = new FileOutputStream(tempPath + \"tinkerpop-classic-v2d0.json\");\n+        final OutputStream os = new FileOutputStream(new File(tempPath, \"tinkerpop-classic-v2d0.json\"));\n         GraphSONWriter.build().mapper(GraphSONMapper.build().version(GraphSONVersion.V2_0).typeInfo(TypeInfo.NO_TYPES).create()).create()\n                 .writeGraph(os, TinkerFactory.createClassic());\n         os.close();\n@@ -326,7 +323,7 @@ public void shouldWriteClassicGraphAsGraphSONV2d0NoTypes() throws IOException {\n      */\n     @Test\n     public void shouldWriteModernGraphAsGraphSOV2d0NNoTypes() throws IOException {\n-        final OutputStream os = new FileOutputStream(tempPath + \"tinkerpop-modern-v2d0.json\");\n+        final OutputStream os = new FileOutputStream(new File(tempPath, \"tinkerpop-modern-v2d0.json\"));\n         GraphSONWriter.build().mapper(GraphSONMapper.build().version(GraphSONVersion.V2_0).typeInfo(TypeInfo.NO_TYPES).create()).create()\n                 .writeGraph(os, TinkerFactory.createModern());\n         os.close();\n@@ -337,7 +334,7 @@ public void shouldWriteModernGraphAsGraphSOV2d0NNoTypes() throws IOException {\n      */\n     @Test\n     public void shouldWriteCrewGraphAsGraphSONV2d0NoTypes() throws IOException {\n-        final OutputStream os = new FileOutputStream(tempPath + \"tinkerpop-crew-v2d0.json\");\n+        final OutputStream os = new FileOutputStream(new File(tempPath, \"tinkerpop-crew-v2d0.json\"));\n         GraphSONWriter.build().mapper(GraphSONMapper.build().version(GraphSONVersion.V2_0).typeInfo(TypeInfo.NO_TYPES).create()).create()\n                 .writeGraph(os, TinkerFactory.createTheCrew());\n         os.close();\n@@ -348,7 +345,7 @@ public void shouldWriteCrewGraphAsGraphSONV2d0NoTypes() throws IOException {\n      */\n     @Test\n     public void shouldWriteKitchenSinkAsGraphSONV2d0NoTypes() throws IOException {\n-        final OutputStream os = new FileOutputStream(tempPath + \"tinkerpop-sink-v2d0.json\");\n+        final OutputStream os = new FileOutputStream(new File(tempPath, \"tinkerpop-sink-v2d0.json\"));\n         GraphSONWriter.build().mapper(GraphSONMapper.build().version(GraphSONVersion.V2_0).typeInfo(TypeInfo.NO_TYPES).create()).create()\n                 .writeGraph(os, TinkerFactory.createKitchenSink());\n         os.close();\n@@ -359,7 +356,7 @@ public void shouldWriteKitchenSinkAsGraphSONV2d0NoTypes() throws IOException {\n      */\n     @Test\n     public void shouldWriteClassicGraphNormalizedAsGraphSONV2d0() throws IOException {\n-        final OutputStream os = new FileOutputStream(tempPath + \"tinkerpop-classic-normalized-v2d0.json\");\n+        final OutputStream os = new FileOutputStream(new File(tempPath, \"tinkerpop-classic-normalized-v2d0.json\"));\n         GraphSONWriter.build().mapper(GraphSONMapper.build().version(GraphSONVersion.V2_0).typeInfo(TypeInfo.NO_TYPES).normalize(true).create()).create()\n                 .writeGraph(os, TinkerFactory.createClassic());\n         os.close();\n@@ -370,7 +367,7 @@ public void shouldWriteClassicGraphNormalizedAsGraphSONV2d0() throws IOException\n      */\n     @Test\n     public void shouldWriteModernGraphNormalizedAsGraphSONV2d0() throws IOException {\n-        final OutputStream os = new FileOutputStream(tempPath + \"tinkerpop-modern-normalized-v2d0.json\");\n+        final OutputStream os = new FileOutputStream(new File(tempPath, \"tinkerpop-modern-normalized-v2d0.json\"));\n         GraphSONWriter.build().mapper(GraphSONMapper.build().version(GraphSONVersion.V2_0).typeInfo(TypeInfo.NO_TYPES).normalize(true).create()).create()\n                 .writeGraph(os, TinkerFactory.createModern());\n         os.close();\n@@ -381,7 +378,7 @@ public void shouldWriteModernGraphNormalizedAsGraphSONV2d0() throws IOException\n      */\n     @Test\n     public void shouldWriteClassicGraphAsGraphSONV2d0WithTypes() throws IOException {\n-        final OutputStream os = new FileOutputStream(tempPath + \"tinkerpop-classic-typed-v2d0.json\");\n+        final OutputStream os = new FileOutputStream(new File(tempPath, \"tinkerpop-classic-typed-v2d0.json\"));\n         GraphSONWriter.build().mapper(GraphSONMapper.build().version(GraphSONVersion.V2_0).typeInfo(TypeInfo.PARTIAL_TYPES).create()).create()\n                 .writeGraph(os, TinkerFactory.createClassic());\n         os.close();\n@@ -392,7 +389,7 @@ public void shouldWriteClassicGraphAsGraphSONV2d0WithTypes() throws IOException\n      */\n     @Test\n     public void shouldWriteModernGraphAsGraphSONV2d0WithTypes() throws IOException {\n-        final OutputStream os = new FileOutputStream(tempPath + \"tinkerpop-modern-typed-v2d0.json\");\n+        final OutputStream os = new FileOutputStream(new File(tempPath, \"tinkerpop-modern-typed-v2d0.json\"));\n         GraphSONWriter.build().mapper(GraphSONMapper.build().version(GraphSONVersion.V2_0).typeInfo(TypeInfo.PARTIAL_TYPES).create()).create()\n                 .writeGraph(os, TinkerFactory.createModern());\n         os.close();\n@@ -403,7 +400,7 @@ public void shouldWriteModernGraphAsGraphSONV2d0WithTypes() throws IOException {\n      */\n     @Test\n     public void shouldWriteCrewGraphAsGraphSONV2d0WithTypes() throws IOException {\n-        final OutputStream os = new FileOutputStream(tempPath + \"tinkerpop-crew-typed-v2d0.json\");\n+        final OutputStream os = new FileOutputStream(new File(tempPath, \"tinkerpop-crew-typed-v2d0.json\"));\n         GraphSONWriter.build().mapper(GraphSONMapper.build().version(GraphSONVersion.V2_0).typeInfo(TypeInfo.PARTIAL_TYPES).create()).create()\n                 .writeGraph(os, TinkerFactory.createTheCrew());\n         os.close();\n@@ -414,7 +411,7 @@ public void shouldWriteCrewGraphAsGraphSONV2d0WithTypes() throws IOException {\n      */\n     @Test\n     public void shouldWriteKitchenSinkAsGraphSONV2d0WithTypes() throws IOException {\n-        final OutputStream os = new FileOutputStream(tempPath + \"tinkerpop-sink-typed-v2d0.json\");\n+        final OutputStream os = new FileOutputStream(new File(tempPath, \"tinkerpop-sink-typed-v2d0.json\"));\n         GraphSONWriter.build().mapper(GraphSONMapper.build().version(GraphSONVersion.V2_0).typeInfo(TypeInfo.PARTIAL_TYPES).create()).create()\n                 .writeGraph(os, TinkerFactory.createKitchenSink());\n         os.close();\n@@ -425,7 +422,7 @@ public void shouldWriteKitchenSinkAsGraphSONV2d0WithTypes() throws IOException {\n      */\n     @Test\n     public void shouldWriteClassicGraphAsGraphSONV3d0() throws IOException {\n-        final OutputStream os = new FileOutputStream(tempPath + \"tinkerpop-classic-v3d0.json\");\n+        final OutputStream os = new FileOutputStream(new File(tempPath, \"tinkerpop-classic-v3d0.json\"));\n         GraphSONWriter.build().mapper(GraphSONMapper.build().version(GraphSONVersion.V3_0).create()).create()\n                 .writeGraph(os, TinkerFactory.createClassic());\n         os.close();\n@@ -436,7 +433,7 @@ public void shouldWriteClassicGraphAsGraphSONV3d0() throws IOException {\n      */\n     @Test\n     public void shouldWriteModernGraphAsGraphSONV3d0() throws IOException {\n-        final OutputStream os = new FileOutputStream(tempPath + \"tinkerpop-modern-v3d0.json\");\n+        final OutputStream os = new FileOutputStream(new File(tempPath, \"tinkerpop-modern-v3d0.json\"));\n         GraphSONWriter.build().mapper(GraphSONMapper.build().version(GraphSONVersion.V3_0).create()).create()\n                 .writeGraph(os, TinkerFactory.createModern());\n         os.close();\n@@ -447,7 +444,7 @@ public void shouldWriteModernGraphAsGraphSONV3d0() throws IOException {\n      */\n     @Test\n     public void shouldWriteCrewGraphAsGraphSONV3d0() throws IOException {\n-        final OutputStream os = new FileOutputStream(tempPath + \"tinkerpop-crew-v3d0.json\");\n+        final OutputStream os = new FileOutputStream(new File(tempPath, \"tinkerpop-crew-v3d0.json\"));\n         GraphSONWriter.build().mapper(GraphSONMapper.build().version(GraphSONVersion.V3_0).create()).create()\n                 .writeGraph(os, TinkerFactory.createTheCrew());\n         os.close();\n@@ -458,7 +455,7 @@ public void shouldWriteCrewGraphAsGraphSONV3d0() throws IOException {\n      */\n     @Test\n     public void shouldWriteSinkGraphAsGraphSONV3d0() throws IOException {\n-        final OutputStream os = new FileOutputStream(tempPath + \"tinkerpop-sink-v3d0.json\");\n+        final OutputStream os = new FileOutputStream(new File(tempPath, \"tinkerpop-sink-v3d0.json\"));\n         GraphSONWriter.build().mapper(GraphSONMapper.build().version(GraphSONVersion.V3_0).create()).create()\n                 .writeGraph(os, TinkerFactory.createKitchenSink());\n         os.close();\n@@ -469,7 +466,7 @@ public void shouldWriteSinkGraphAsGraphSONV3d0() throws IOException {\n      */\n     @Test\n     public void shouldWriteDEFAULTClassicGraphAsGraphSONV3d0() throws IOException {\n-        final OutputStream os = new FileOutputStream(tempPath + \"tinkerpop-classic.json\");\n+        final OutputStream os = new FileOutputStream(new File(tempPath, \"tinkerpop-classic.json\"));\n         GraphSONWriter.build().mapper(GraphSONMapper.build().version(GraphSONVersion.V3_0).create()).create()\n                 .writeGraph(os, TinkerFactory.createClassic());\n         os.close();\n@@ -480,7 +477,7 @@ public void shouldWriteDEFAULTClassicGraphAsGraphSONV3d0() throws IOException {\n      */\n     @Test\n     public void shouldWriteDEFAULTModernGraphAsGraphSONV3d0() throws IOException {\n-        final OutputStream os = new FileOutputStream(tempPath + \"tinkerpop-modern.json\");\n+        final OutputStream os = new FileOutputStream(new File(tempPath, \"tinkerpop-modern.json\"));\n         GraphSONWriter.build().mapper(GraphSONMapper.build().version(GraphSONVersion.V3_0).create()).create()\n                 .writeGraph(os, TinkerFactory.createModern());\n         os.close();\n@@ -491,7 +488,7 @@ public void shouldWriteDEFAULTModernGraphAsGraphSONV3d0() throws IOException {\n      */\n     @Test\n     public void shouldWriteDEFAULTCrewGraphAsGraphSONV3d0() throws IOException {\n-        final OutputStream os = new FileOutputStream(tempPath + \"tinkerpop-crew.json\");\n+        final OutputStream os = new FileOutputStream(new File(tempPath, \"tinkerpop-crew.json\"));\n         GraphSONWriter.build().mapper(GraphSONMapper.build().version(GraphSONVersion.V3_0).create()).create()\n                 .writeGraph(os, TinkerFactory.createTheCrew());\n         os.close();\n@@ -502,7 +499,7 @@ public void shouldWriteDEFAULTCrewGraphAsGraphSONV3d0() throws IOException {\n      */\n     @Test\n     public void shouldWriteDEFAULTSinkGraphAsGraphSONV3d0() throws IOException {\n-        final OutputStream os = new FileOutputStream(tempPath + \"tinkerpop-sink.json\");\n+        final OutputStream os = new FileOutputStream(new File(tempPath, \"tinkerpop-sink.json\"));\n         GraphSONWriter.build().mapper(GraphSONMapper.build().version(GraphSONVersion.V3_0).create()).create()\n                 .writeGraph(os, TinkerFactory.createKitchenSink());\n         os.close();\n@@ -513,7 +510,7 @@ public void shouldWriteDEFAULTSinkGraphAsGraphSONV3d0() throws IOException {\n      */\n     @Test\n     public void shouldWriteClassicGraphNormalizedAsGraphSONV3d0() throws IOException {\n-        final OutputStream os = new FileOutputStream(tempPath + \"tinkerpop-classic-normalized-v3d0.json\");\n+        final OutputStream os = new FileOutputStream(new File(tempPath, \"tinkerpop-classic-normalized-v3d0.json\"));\n         GraphSONWriter.build().mapper(GraphSONMapper.build().version(GraphSONVersion.V3_0).normalize(true).create()).create()\n                 .writeGraph(os, TinkerFactory.createClassic());\n         os.close();\n@@ -524,7 +521,7 @@ public void shouldWriteClassicGraphNormalizedAsGraphSONV3d0() throws IOException\n      */\n     @Test\n     public void shouldWriteModernGraphNormalizedAsGraphSONV3d0() throws IOException {\n-        final OutputStream os = new FileOutputStream(tempPath + \"tinkerpop-modern-normalized-v3d0.json\");\n+        final OutputStream os = new FileOutputStream(new File(tempPath, \"tinkerpop-modern-normalized-v3d0.json\"));\n         GraphSONWriter.build().mapper(GraphSONMapper.build().version(GraphSONVersion.V3_0).normalize(true).create()).create()\n                 .writeGraph(os, TinkerFactory.createModern());\n         os.close();\n@@ -541,7 +538,7 @@ public void shouldWriteSampleForGremlinServer() throws IOException {\n                 .inDistribution(new PowerLawDistribution(2.1))\n                 .expectedNumEdges(100000).create().generate();\n \n-        final OutputStream os = new FileOutputStream(tempPath + \"sample.kryo\");\n+        final OutputStream os = new FileOutputStream(new File(tempPath, \"sample.kryo\"));\n         GryoWriter.build().mapper(GryoMapper.build().version(GryoVersion.V3_0).create()).create().writeGraph(os, g);\n         os.close();\n     }\n@@ -595,54 +592,54 @@ else if (e.label().equals(\"writtenBy\"))\n \n         }).iterate();\n \n-        final OutputStream os = new FileOutputStream(tempPath + \"grateful-dead-v1d0.kryo\");\n+        final OutputStream os = new FileOutputStream(new File(tempPath, \"grateful-dead-v1d0.kryo\"));\n         GryoWriter.build().mapper(GryoMapper.build().version(GryoVersion.V1_0).create()).create().writeGraph(os, ng);\n         os.close();\n \n-        final OutputStream os8 = new FileOutputStream(tempPath + \"grateful-dead-v3d0.kryo\");\n+        final OutputStream os8 = new FileOutputStream(new File(tempPath, \"grateful-dead-v3d0.kryo\"));\n         GryoWriter.build().mapper(GryoMapper.build().version(GryoVersion.V3_0).create()).create().writeGraph(os8, ng);\n         os8.close();\n \n         // ****DEFAULT Grateful Dead Gryo****\n-        final OutputStream os9 = new FileOutputStream(tempPath + \"grateful-dead.kryo\");\n+        final OutputStream os9 = new FileOutputStream(new File(tempPath, \"grateful-dead.kryo\"));\n         GryoWriter.build().mapper(GryoMapper.build().version(GryoVersion.V3_0).create()).create().writeGraph(os9, ng);\n         os9.close();\n \n-        final OutputStream os2 = new FileOutputStream(tempPath + \"grateful-dead-v1d0.json\");\n+        final OutputStream os2 = new FileOutputStream(new File(tempPath, \"grateful-dead-v1d0.json\"));\n         GraphSONWriter.build().mapper(GraphSONMapper.build().version(GraphSONVersion.V1_0).typeInfo(TypeInfo.NO_TYPES).create()).create().writeGraph(os2, g);\n         os2.close();\n \n-        final OutputStream os3 = new FileOutputStream(tempPath + \"grateful-dead-v2d0.json\");\n+        final OutputStream os3 = new FileOutputStream(new File(tempPath, \"grateful-dead-v2d0.json\"));\n         GraphSONWriter.build().mapper(GraphSONMapper.build().version(GraphSONVersion.V2_0)\n                 .typeInfo(TypeInfo.NO_TYPES).create())\n                 .create()\n                 .writeGraph(os3, g);\n         os3.close();\n \n-        final OutputStream os4 = new FileOutputStream(tempPath + \"grateful-dead.xml\");\n+        final OutputStream os4 = new FileOutputStream(new File(tempPath, \"grateful-dead.xml\"));\n         GraphMLWriter.build().create().writeGraph(os4, g);\n         os4.close();\n \n-        final OutputStream os5 = new FileOutputStream(tempPath + \"grateful-dead-typed-v1d0.json\");\n+        final OutputStream os5 = new FileOutputStream(new File(tempPath, \"grateful-dead-typed-v1d0.json\"));\n         GraphSONWriter.build().mapper(GraphSONMapper.build().version(GraphSONVersion.V1_0).typeInfo(TypeInfo.PARTIAL_TYPES).create()).create().writeGraph(os5, g);\n         os5.close();\n \n-        final OutputStream os6 = new FileOutputStream(tempPath + \"grateful-dead-typed-v2d0.json\");\n+        final OutputStream os6 = new FileOutputStream(new File(tempPath, \"grateful-dead-typed-v2d0.json\"));\n         GraphSONWriter.build().mapper(GraphSONMapper.build().version(GraphSONVersion.V2_0)\n                 .typeInfo(TypeInfo.PARTIAL_TYPES).create())\n                 .create()\n                 .writeGraph(os6, g);\n         os6.close();\n \n-        final OutputStream os7 = new FileOutputStream(tempPath + \"grateful-dead-v3d0.json\");\n+        final OutputStream os7 = new FileOutputStream(new File(tempPath, \"grateful-dead-v3d0.json\"));\n         GraphSONWriter.build().mapper(GraphSONMapper.build().version(GraphSONVersion.V3_0)\n                 .typeInfo(TypeInfo.PARTIAL_TYPES).create())\n                 .create()\n                 .writeGraph(os7, g);\n         os7.close();\n \n         // ****DEFAULT Grateful Dead GraphSON****\n-        final OutputStream os10 = new FileOutputStream(tempPath + \"grateful-dead.json\");\n+        final OutputStream os10 = new FileOutputStream(new File(tempPath, \"grateful-dead.json\"));\n         GraphSONWriter.build().mapper(GraphSONMapper.build().version(GraphSONVersion.V3_0)\n                 .typeInfo(TypeInfo.PARTIAL_TYPES).create())\n                 .create()",
                "deletions": 72
            },
            {
                "sha": "51b698979423b9d99d2e9bccb53e5235eebe34ef",
                "filename": "tinkergraph-gremlin/src/test/java/org/apache/tinkerpop/gremlin/tinkergraph/structure/TinkerGraphTest.java",
                "blob_url": "https://github.com/apache/tinkerpop/blob/1088cd9be6ecdcb37bee357a783f01f01bdc366a/tinkergraph-gremlin/src/test/java/org/apache/tinkerpop/gremlin/tinkergraph/structure/TinkerGraphTest.java",
                "raw_url": "https://github.com/apache/tinkerpop/raw/1088cd9be6ecdcb37bee357a783f01f01bdc366a/tinkergraph-gremlin/src/test/java/org/apache/tinkerpop/gremlin/tinkergraph/structure/TinkerGraphTest.java",
                "status": "modified",
                "changes": 13,
                "additions": 7,
                "contents_url": "https://api.github.com/repos/apache/tinkerpop/contents/tinkergraph-gremlin/src/test/java/org/apache/tinkerpop/gremlin/tinkergraph/structure/TinkerGraphTest.java?ref=1088cd9be6ecdcb37bee357a783f01f01bdc366a",
                "patch": "@@ -427,7 +427,7 @@ public void shouldRequireGraphFormatIfLocationIsSet() {\n \n     @Test\n     public void shouldPersistToGraphML() {\n-        final String graphLocation = TestHelper.makeTestDataDirectory(TinkerGraphTest.class) + \"shouldPersistToGraphML.xml\";\n+        final String graphLocation = TestHelper.makeTestDataFile(TinkerGraphTest.class, \"shouldPersistToGraphML.xml\");\n         final File f = new File(graphLocation);\n         if (f.exists() && f.isFile()) f.delete();\n \n@@ -445,7 +445,7 @@ public void shouldPersistToGraphML() {\n \n     @Test\n     public void shouldPersistToGraphSON() {\n-        final String graphLocation = TestHelper.makeTestDataDirectory(TinkerGraphTest.class) + \"shouldPersistToGraphSON.json\";\n+        final String graphLocation = TestHelper.makeTestDataFile(TinkerGraphTest.class, \"shouldPersistToGraphSON.json\");\n         final File f = new File(graphLocation);\n         if (f.exists() && f.isFile()) f.delete();\n \n@@ -463,7 +463,7 @@ public void shouldPersistToGraphSON() {\n \n     @Test\n     public void shouldPersistToGryo() {\n-        final String graphLocation = TestHelper.makeTestDataDirectory(TinkerGraphTest.class) + \"shouldPersistToGryo.kryo\";\n+        final String graphLocation = TestHelper.makeTestDataFile(TinkerGraphTest.class, \"shouldPersistToGryo.kryo\");\n         final File f = new File(graphLocation);\n         if (f.exists() && f.isFile()) f.delete();\n \n@@ -481,7 +481,7 @@ public void shouldPersistToGryo() {\n \n     @Test\n     public void shouldPersistToGryoAndHandleMultiProperties() {\n-        final String graphLocation = TestHelper.makeTestDataDirectory(TinkerGraphTest.class) + \"shouldPersistToGryoMulti.kryo\";\n+        final String graphLocation = TestHelper.makeTestDataFile(TinkerGraphTest.class, \"shouldPersistToGryoMulti.kryo\");\n         final File f = new File(graphLocation);\n         if (f.exists() && f.isFile()) f.delete();\n \n@@ -501,7 +501,8 @@ public void shouldPersistToGryoAndHandleMultiProperties() {\n     @Test\n     public void shouldPersistWithRelativePath() {\n         final String graphLocation = TestHelper.convertToRelative(TinkerGraphTest.class,\n-                new File(TestHelper.makeTestDataDirectory(TinkerGraphTest.class)))  + \"shouldPersistToGryoRelative.kryo\";\n+                                                                  TestHelper.makeTestDataPath(TinkerGraphTest.class))\n+                                     + \"shouldPersistToGryoRelative.kryo\";\n         final File f = new File(graphLocation);\n         if (f.exists() && f.isFile()) f.delete();\n \n@@ -519,7 +520,7 @@ public void shouldPersistWithRelativePath() {\n \n     @Test\n     public void shouldPersistToAnyGraphFormat() {\n-        final String graphLocation = TestHelper.makeTestDataDirectory(TinkerGraphTest.class) + \"shouldPersistToAnyGraphFormat.dat\";\n+        final String graphLocation = TestHelper.makeTestDataFile(TinkerGraphTest.class, \"shouldPersistToAnyGraphFormat.dat\");\n         final File f = new File(graphLocation);\n         if (f.exists() && f.isFile()) f.delete();\n ",
                "deletions": 6
            }
        ],
        "patched_files": [
            "SparkContextStorageCheck.java",
            "GraphVariableHelper.java",
            "TimeUtil.java",
            "EarlyLimitStrategy.java",
            "TinkerGraph.java",
            "GraphSONUtil.java",
            "ScriptEngineCache.java",
            "Gremlin.java",
            "Constants.java",
            "Io.java",
            "Comparators.java",
            "IteratorUtils.java",
            "StringFactory.java",
            "FunctionUtils.java",
            "SparkContextStorage.java",
            "CoreTestHelper.java",
            "IoCore.java",
            "MultiMap.java",
            "AbstractIoRegistryCheck.java",
            "Storage.java",
            "ResponseHandlerContext.java",
            "OrderLimitStrategy.java",
            "InputOutputHelper.java",
            "TinkerGraphProvider.java",
            "ElementHelper.java",
            "BulkLoaderVertexProgram.java",
            "AbstractHadoopGraphComputer.java",
            "HadoopGraphProvider.java",
            "AbstractStorageCheck.java",
            "GraphFactory.java",
            "SparkHadoopGraphGryoSerializerProvider.java",
            "SparkHadoopGraphProvider.java",
            "Order.java",
            "DriverRemoteAcceptor.java",
            "FileSystemStorageCheck.java",
            "DefaultScriptCustomizer.java",
            "Log4jRecordingAppender.java",
            "Serializer.java",
            "Spark.java",
            "GremlinExecutor.java",
            "ScriptFileGremlinPlugin.java",
            "ServerTestHelper.java",
            "GraphProvider.java",
            "FileSystemStorage.java",
            "TinkerGraphUUIDProvider.java",
            "GraphMigrator.java",
            "GraphSONTokens.java"
        ],
        "unit_tests": [
            "GremlinGroovyScriptEngineFileSandboxTest.java",
            "OrderTest.java",
            "AbstractHadoopGraphComputerTest.java",
            "GryoSerializerIntegrateTest.java",
            "DefaultScriptCustomizerTest.java",
            "StringFactoryTest.java",
            "PersistedInputOutputRDDIntegrateTest.java",
            "BulkLoaderVertexProgramTest.java",
            "DependencyGrabberIntegrateTest.java",
            "LocalPropertyTest.java",
            "BindingsScriptEngineTest.java",
            "ScriptEngineCacheTest.java",
            "SerializerTest.java",
            "ElementHelperTest.java",
            "ResponseHandlerContextTest.java",
            "IoTest.java",
            "TinkerGraphTest.java",
            "OrderLimitStrategyTest.java",
            "GraphVariableHelperTest.java",
            "SparkTest.java",
            "GraphSONTokensTest.java",
            "GremlinDriverIntegrateTest.java",
            "IoCoreTest.java",
            "ComparatorsTest.java",
            "FunctionUtilsTest.java",
            "GremlinExecutorTest.java",
            "Log4jRecordingAppenderTest.java",
            "ScriptFileGremlinPluginTest.java",
            "IoDataGenerationTest.java",
            "IoGraphTest.java",
            "RecordReaderWriterTest.java",
            "TestHelper.java",
            "GremlinTest.java",
            "GraphSONUtilTest.java",
            "DriverRemoteAcceptorTest.java",
            "MultiMapTest.java",
            "GraphFactoryTest.java",
            "IteratorUtilsTest.java",
            "TimeUtilTest.java",
            "EarlyLimitStrategyTest.java",
            "GraphMigratorTest.java",
            "DriverRemoteAcceptorIntegrateTest.java"
        ]
    }
}