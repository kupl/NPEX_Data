[
    {
        "repo": "httpcomponents-client",
        "commit": "https://github.com/apache/httpcomponents-client/commit/bb902afa4fb4b6575e500c965c31cabf82791ec1",
        "bug_id": "httpcomponents-client_bb902af",
        "message": "Follow up to HTTPCLIENT-1381: fixes another NPE\nContributed by Ricardo Pereira <thc202 at gmail.com>\n\ngit-svn-id: https://svn.apache.org/repos/asf/httpcomponents/httpclient/trunk@1500401 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/httpcomponents-client/commit/f17ef0ad1159c60933ba41adb927839f238d8fc3",
        "patched_files": [
            "NTLMEngineImpl.java"
        ],
        "file": [
            {
                "status": "modified",
                "additions": 11,
                "raw_url": "https://github.com/apache/httpcomponents-client/raw/bb902afa4fb4b6575e500c965c31cabf82791ec1/httpclient/src/main/java/org/apache/http/impl/auth/NTLMEngineImpl.java",
                "contents_url": "https://api.github.com/repos/apache/httpcomponents-client/contents/httpclient/src/main/java/org/apache/http/impl/auth/NTLMEngineImpl.java?ref=bb902afa4fb4b6575e500c965c31cabf82791ec1",
                "filename": "httpclient/src/main/java/org/apache/http/impl/auth/NTLMEngineImpl.java",
                "deletions": 7,
                "sha": "b2fb4c9572ddbd9aff54fa60748425310d38f600",
                "blob_url": "https://github.com/apache/httpcomponents-client/blob/bb902afa4fb4b6575e500c965c31cabf82791ec1/httpclient/src/main/java/org/apache/http/impl/auth/NTLMEngineImpl.java",
                "patch": "@@ -624,7 +624,7 @@ public CipherGen(final String domain, final String user, final String password,\n             final MD4 md4 = new MD4();\n             md4.update(unicodePassword);\n             return md4.getOutput();\n-        } catch (java.io.UnsupportedEncodingException e) {\n+        } catch (UnsupportedEncodingException e) {\n             throw new NTLMEngineException(\"Unicode not supported: \" + e.getMessage(), e);\n         }\n     }\n@@ -641,9 +641,11 @@ public CipherGen(final String domain, final String user, final String password,\n             final HMACMD5 hmacMD5 = new HMACMD5(ntlmHash);\n             // Upper case username, upper case domain!\n             hmacMD5.update(user.toUpperCase(Locale.US).getBytes(\"UnicodeLittleUnmarked\"));\n-            hmacMD5.update(domain.toUpperCase(Locale.US).getBytes(\"UnicodeLittleUnmarked\"));\n+            if (domain != null) {\n+                hmacMD5.update(domain.toUpperCase(Locale.US).getBytes(\"UnicodeLittleUnmarked\"));\n+            }\n             return hmacMD5.getOutput();\n-        } catch (java.io.UnsupportedEncodingException e) {\n+        } catch (UnsupportedEncodingException e) {\n             throw new NTLMEngineException(\"Unicode not supported! \" + e.getMessage(), e);\n         }\n     }\n@@ -660,9 +662,11 @@ public CipherGen(final String domain, final String user, final String password,\n             final HMACMD5 hmacMD5 = new HMACMD5(ntlmHash);\n             // Upper case username, mixed case target!!\n             hmacMD5.update(user.toUpperCase(Locale.US).getBytes(\"UnicodeLittleUnmarked\"));\n-            hmacMD5.update(domain.getBytes(\"UnicodeLittleUnmarked\"));\n+            if (domain != null) {\n+                hmacMD5.update(domain.getBytes(\"UnicodeLittleUnmarked\"));\n+            }\n             return hmacMD5.getOutput();\n-        } catch (java.io.UnsupportedEncodingException e) {\n+        } catch (UnsupportedEncodingException e) {\n             throw new NTLMEngineException(\"Unicode not supported! \" + e.getMessage(), e);\n         }\n     }\n@@ -981,7 +985,7 @@ String getResponse() {\n                 hostBytes = unqualifiedHost != null? unqualifiedHost.getBytes(\"ASCII\") : null;\n                 domainBytes = unqualifiedDomain != null ? unqualifiedDomain\n                         .toUpperCase(Locale.US).getBytes(\"ASCII\") : null;\n-            } catch (java.io.UnsupportedEncodingException e) {\n+            } catch (UnsupportedEncodingException e) {\n                 throw new NTLMEngineException(\"Unicode unsupported: \" + e.getMessage(), e);\n             }\n         }\n@@ -1104,7 +1108,7 @@ String getResponse() {\n                 if (bytes.length != 0) {\n                     try {\n                         target = new String(bytes, \"UnicodeLittleUnmarked\");\n-                    } catch (java.io.UnsupportedEncodingException e) {\n+                    } catch (UnsupportedEncodingException e) {\n                         throw new NTLMEngineException(e.getMessage(), e);\n                     }\n                 }",
                "changes": 18
            },
            {
                "status": "modified",
                "additions": 38,
                "raw_url": "https://github.com/apache/httpcomponents-client/raw/bb902afa4fb4b6575e500c965c31cabf82791ec1/httpclient/src/test/java/org/apache/http/impl/client/integration/TestClientAuthenticationFakeNTLM.java",
                "contents_url": "https://api.github.com/repos/apache/httpcomponents-client/contents/httpclient/src/test/java/org/apache/http/impl/client/integration/TestClientAuthenticationFakeNTLM.java?ref=bb902afa4fb4b6575e500c965c31cabf82791ec1",
                "filename": "httpclient/src/test/java/org/apache/http/impl/client/integration/TestClientAuthenticationFakeNTLM.java",
                "deletions": 6,
                "sha": "684b39bdc69152cf5bbfa44794492fce58a6274b",
                "blob_url": "https://github.com/apache/httpcomponents-client/blob/bb902afa4fb4b6575e500c965c31cabf82791ec1/httpclient/src/test/java/org/apache/http/impl/client/integration/TestClientAuthenticationFakeNTLM.java",
                "patch": "@@ -99,7 +99,13 @@ public void testNTLMAuthenticationFailure() throws Exception {\n                 response.getStatusLine().getStatusCode());\n     }\n \n-    static class NtlmType2ResponseHandler implements HttpRequestHandler {\n+    static class NtlmType2MessageResponseHandler implements HttpRequestHandler {\n+\n+        private final String authenticateHeaderValue;\n+\n+        public NtlmType2MessageResponseHandler(final String type2Message) {\n+            this.authenticateHeaderValue = \"NTLM \" + type2Message;\n+        }\n \n         public void handle(\n                 final HttpRequest request,\n@@ -113,16 +119,42 @@ public void handle(\n             if (!request.containsHeader(HttpHeaders.AUTHORIZATION)) {\n                 response.setHeader(HttpHeaders.WWW_AUTHENTICATE, \"NTLM\");\n             } else {\n-                response.setHeader(HttpHeaders.WWW_AUTHENTICATE, \"NTLM TlRMTVNTUAACAA\" +\n-                        \"AADAAMADgAAAAzwoICLgEjRWfCicKrw43DrwAAAAAAAAAAAAAAAAAAAAAGAHAX\" +\n-                        \"AAAAD1MAZQByAHYAZQByAA==\");\n+                response.setHeader(HttpHeaders.WWW_AUTHENTICATE, authenticateHeaderValue);\n             }\n         }\n     }\n \n     @Test\n-    public void testNTLMType2() throws Exception {\n-        this.localServer.register(\"*\", new NtlmType2ResponseHandler());\n+    public void testNTLMv1Type2Message() throws Exception {\n+        this.localServer.register(\"*\", new NtlmType2MessageResponseHandler(\"TlRMTVNTUAACAA\" +\n+                \"AADAAMADgAAAAzggLiASNFZ4mrze8AAAAAAAAAAAAAAAAAAAAABgBwFwAAAA9T\" +\n+                \"AGUAcgB2AGUAcgA=\"));\n+        this.localServer.start();\n+\n+        final BasicCredentialsProvider credsProvider = new BasicCredentialsProvider();\n+        credsProvider.setCredentials(AuthScope.ANY,\n+                new NTCredentials(\"test\", \"test\", null, null));\n+\n+        this.httpclient = HttpClients.custom()\n+                .setDefaultCredentialsProvider(credsProvider)\n+                .build();\n+\n+        final HttpContext context = HttpClientContext.create();\n+\n+        final HttpHost targethost = getServerHttp();\n+        final HttpGet httpget = new HttpGet(\"/\");\n+\n+        final HttpResponse response = this.httpclient.execute(targethost, httpget, context);\n+        EntityUtils.consume(response.getEntity());\n+        Assert.assertEquals(HttpStatus.SC_UNAUTHORIZED,\n+                response.getStatusLine().getStatusCode());\n+    }\n+\n+    @Test\n+    public void testNTLMv2Type2Message() throws Exception {\n+        this.localServer.register(\"*\", new NtlmType2MessageResponseHandler(\"TlRMTVNTUAACAA\" +\n+                \"AADAAMADgAAAAzgoriASNFZ4mrze8AAAAAAAAAACQAJABEAAAABgBwFwAAAA9T\" +\n+                \"AGUAcgB2AGUAcgACAAwARABvAG0AYQBpAG4AAQAMAFMAZQByAHYAZQByAAAAAAA=\"));\n         this.localServer.start();\n \n         final BasicCredentialsProvider credsProvider = new BasicCredentialsProvider();",
                "changes": 44
            }
        ],
        "unit_tests": [
            "TestClientAuthenticationFakeNTLM.java",
            "TestNTLMEngineImpl.java"
        ]
    },
    {
        "buggy": false,
        "test_file": "httpclient/src/test/java/org/apache/http/impl/client/integration/TestClientAuthenticationFakeNTLM.java",
        "buggy_files": [
            "httpclient/src/main/java/org/apache/http/impl/auth/NTLMEngineImpl.java"
        ],
        "fixed": true
    }
]