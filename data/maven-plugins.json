{
    "maven-plugins_0090471": {
        "bug_id": "maven-plugins_0090471",
        "commit": "https://github.com/apache/maven-plugins/commit/00904719cfe73d3ec63bc9c5a62bebbb5224e328",
        "file": [
            {
                "additions": 4,
                "blob_url": "https://github.com/apache/maven-plugins/blob/00904719cfe73d3ec63bc9c5a62bebbb5224e328/maven-war-plugin/src/main/java/org/apache/maven/plugin/war/util/WebappStructure.java",
                "changes": 4,
                "contents_url": "https://api.github.com/repos/apache/maven-plugins/contents/maven-war-plugin/src/main/java/org/apache/maven/plugin/war/util/WebappStructure.java?ref=00904719cfe73d3ec63bc9c5a62bebbb5224e328",
                "deletions": 0,
                "filename": "maven-war-plugin/src/main/java/org/apache/maven/plugin/war/util/WebappStructure.java",
                "patch": "@@ -106,6 +106,10 @@ public List getDependenciesInfo()\n     public List getDependencies()\n     {\n         final List result = new ArrayList();\n+        if ( dependenciesInfo == null )\n+        {\n+            return result;\n+        }\n         final Iterator it = dependenciesInfo.iterator();\n         while ( it.hasNext() )\n         {",
                "raw_url": "https://github.com/apache/maven-plugins/raw/00904719cfe73d3ec63bc9c5a62bebbb5224e328/maven-war-plugin/src/main/java/org/apache/maven/plugin/war/util/WebappStructure.java",
                "sha": "8f440fa90ca0b494f9c6001833e9171110a54dd6",
                "status": "modified"
            }
        ],
        "message": "[MWAR-170] fix possible NPE\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/plugins/trunk@712569 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/maven-plugins/commit/243cb72d81ada77420e28f81651e3f1844d477e2",
        "repo": "maven-plugins",
        "unit_tests": [
            "WebappStructureTest.java"
        ]
    },
    "maven-plugins_0530f0c": {
        "bug_id": "maven-plugins_0530f0c",
        "commit": "https://github.com/apache/maven-plugins/commit/0530f0c3140b694e068486115675f4f6d6b4b75e",
        "file": [
            {
                "additions": 4,
                "blob_url": "https://github.com/apache/maven-plugins/blob/0530f0c3140b694e068486115675f4f6d6b4b75e/maven-help-plugin/pom.xml",
                "changes": 6,
                "contents_url": "https://api.github.com/repos/apache/maven-plugins/contents/maven-help-plugin/pom.xml?ref=0530f0c3140b694e068486115675f4f6d6b4b75e",
                "deletions": 2,
                "filename": "maven-help-plugin/pom.xml",
                "patch": "@@ -1,4 +1,6 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\"?><project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd\">\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd\">\n   <parent>\n     <artifactId>maven-plugins</artifactId>\n     <groupId>org.apache.maven.plugins</groupId>\n@@ -8,7 +10,7 @@\n   <artifactId>maven-help-plugin</artifactId>\n   <packaging>maven-plugin</packaging>\n   <name>Maven Help Plugin</name>\n-  <version>2.1-SNAPSHOT</version>\n+  <version>2.0.1-SNAPSHOT</version>\n   <description>\n     The Maven Help plugin provides goals aimed at helping to make sense out of\n     the build environment. It includes the ability to view the effective",
                "raw_url": "https://github.com/apache/maven-plugins/raw/0530f0c3140b694e068486115675f4f6d6b4b75e/maven-help-plugin/pom.xml",
                "sha": "1e01028c501fba646fc2c1f9a314a16bc73dae59",
                "status": "modified"
            },
            {
                "additions": 7,
                "blob_url": "https://github.com/apache/maven-plugins/blob/0530f0c3140b694e068486115675f4f6d6b4b75e/maven-help-plugin/src/main/java/org/apache/maven/plugins/help/DescribeMojo.java",
                "changes": 8,
                "contents_url": "https://api.github.com/repos/apache/maven-plugins/contents/maven-help-plugin/src/main/java/org/apache/maven/plugins/help/DescribeMojo.java?ref=0530f0c3140b694e068486115675f4f6d6b4b75e",
                "deletions": 1,
                "filename": "maven-help-plugin/src/main/java/org/apache/maven/plugins/help/DescribeMojo.java",
                "patch": "@@ -60,7 +60,7 @@\n \n     /**\n      * The plugin/mojo to describe. This must be specified in one of three ways:\n-     *\n+     * <p/>\n      * 1. plugin-prefix\n      * 2. groupId:artifactId\n      * 3. groupId:artifactId:version\n@@ -347,6 +347,12 @@ else if ( pi.groupId != null && pi.artifactId != null )\n             }\n         }\n \n+        if ( descriptor == null )\n+        {\n+            throw new MojoFailureException(\n+                \"Plugin could not be found. If you believe it is correct, check your pluginGroups setting, and run with -U to update the remote configuration\" );\n+        }\n+\n         return descriptor;\n     }\n ",
                "raw_url": "https://github.com/apache/maven-plugins/raw/0530f0c3140b694e068486115675f4f6d6b4b75e/maven-help-plugin/src/main/java/org/apache/maven/plugins/help/DescribeMojo.java",
                "sha": "c3dd2f3b488ba87f9df4d09dcd8528eb2129164a",
                "status": "modified"
            }
        ],
        "message": "[MPH-10] avoid NPE if plugin is not found\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/plugins/trunk@390935 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/maven-plugins/commit/d561090f0a46dbda726c348f13aa7b1b3938a5ef",
        "repo": "maven-plugins",
        "unit_tests": [
            "DescribeMojoTest.java"
        ]
    },
    "maven-plugins_0c179ba": {
        "bug_id": "maven-plugins_0c179ba",
        "commit": "https://github.com/apache/maven-plugins/commit/0c179ba3d7268b91bfb12cb164a9573c2296de91",
        "file": [
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/maven-plugins/blob/0c179ba3d7268b91bfb12cb164a9573c2296de91/maven-changes-plugin/src/main/java/org/apache/maven/plugin/announcement/AnnouncementMojo.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/maven-plugins/contents/maven-changes-plugin/src/main/java/org/apache/maven/plugin/announcement/AnnouncementMojo.java?ref=0c179ba3d7268b91bfb12cb164a9573c2296de91",
                "deletions": 1,
                "filename": "maven-changes-plugin/src/main/java/org/apache/maven/plugin/announcement/AnnouncementMojo.java",
                "patch": "@@ -372,7 +372,7 @@ public Release getLatestRelease( List releases )\n         {\n             release = (Release) releases.get( i );\n \n-            if ( release.getVersion().equals( pomVersion ) )\n+            if ( release.getVersion() != null && release.getVersion().equals( pomVersion ) )\n             {\n                 isFound = true;\n                 return release;",
                "raw_url": "https://github.com/apache/maven-plugins/raw/0c179ba3d7268b91bfb12cb164a9573c2296de91/maven-changes-plugin/src/main/java/org/apache/maven/plugin/announcement/AnnouncementMojo.java",
                "sha": "f51628541a1f920a895078be62fe4245e3d31622",
                "status": "modified"
            }
        ],
        "message": "[MCHANGES-70] NPE if the version attribute is not set properly in the changes.xml file\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/plugins/trunk@554276 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/maven-plugins/commit/efa28cc3e78ace01fbb1dc07d4cfe8acbcefc682",
        "repo": "maven-plugins",
        "unit_tests": [
            "AnnouncementMojoTest.java"
        ]
    },
    "maven-plugins_151475f": {
        "bug_id": "maven-plugins_151475f",
        "commit": "https://github.com/apache/maven-plugins/commit/151475f30b1fe048737cbf92dd86b2a404c2daec",
        "file": [
            {
                "additions": 18,
                "blob_url": "https://github.com/apache/maven-plugins/blob/151475f30b1fe048737cbf92dd86b2a404c2daec/maven-dependency-plugin/src/it/projects/mdep-506-dependency-without-version-in-depmgt/invoker.properties",
                "changes": 18,
                "contents_url": "https://api.github.com/repos/apache/maven-plugins/contents/maven-dependency-plugin/src/it/projects/mdep-506-dependency-without-version-in-depmgt/invoker.properties?ref=151475f30b1fe048737cbf92dd86b2a404c2daec",
                "deletions": 0,
                "filename": "maven-dependency-plugin/src/it/projects/mdep-506-dependency-without-version-in-depmgt/invoker.properties",
                "patch": "@@ -0,0 +1,18 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+# \n+#   http://www.apache.org/licenses/LICENSE-2.0\n+# \n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+\n+invoker.goals=${project.groupId}:${project.artifactId}:${project.version}:analyze-dep-mgt",
                "raw_url": "https://github.com/apache/maven-plugins/raw/151475f30b1fe048737cbf92dd86b2a404c2daec/maven-dependency-plugin/src/it/projects/mdep-506-dependency-without-version-in-depmgt/invoker.properties",
                "sha": "d1074d2e6c787118a43a230a4212780a2e780891",
                "status": "added"
            },
            {
                "additions": 60,
                "blob_url": "https://github.com/apache/maven-plugins/blob/151475f30b1fe048737cbf92dd86b2a404c2daec/maven-dependency-plugin/src/it/projects/mdep-506-dependency-without-version-in-depmgt/pom.xml",
                "changes": 60,
                "contents_url": "https://api.github.com/repos/apache/maven-plugins/contents/maven-dependency-plugin/src/it/projects/mdep-506-dependency-without-version-in-depmgt/pom.xml?ref=151475f30b1fe048737cbf92dd86b2a404c2daec",
                "deletions": 0,
                "filename": "maven-dependency-plugin/src/it/projects/mdep-506-dependency-without-version-in-depmgt/pom.xml",
                "patch": "@@ -0,0 +1,60 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<!--\n+  ~ Licensed to the Apache Software Foundation (ASF) under one\n+  ~ or more contributor license agreements.  See the NOTICE file\n+  ~ distributed with this work for additional information\n+  ~ regarding copyright ownership.  The ASF licenses this file\n+  ~ to you under the Apache License, Version 2.0 (the\n+  ~ \"License\"); you may not use this file except in compliance\n+  ~ with the License.  You may obtain a copy of the License at\n+  ~\n+  ~   http://www.apache.org/licenses/LICENSE-2.0\n+  ~\n+  ~ Unless required by applicable law or agreed to in writing,\n+  ~ software distributed under the License is distributed on an\n+  ~ \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+  ~ KIND, either express or implied.  See the License for the\n+  ~ specific language governing permissions and limitations\n+  ~ under the License.\n+  -->\n+\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\"\n+         xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+  <modelVersion>4.0.0</modelVersion>\n+\n+  <groupId>org.apache.maven.its.dependency</groupId>\n+  <artifactId>dependency-without-version-in-depmgt</artifactId>\n+  <version>1.0</version>\n+  <packaging>pom</packaging>\n+  <name>Analyze-dep-mgt should not fail with NPE when dependency in depMgt is partial</name>\n+\n+  <properties>\n+    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\n+    <spring-boot.version>1.2.6.RELEASE</spring-boot.version>\n+  </properties>\n+\n+  <dependencyManagement>\n+    <dependencies>\n+      <dependency>\n+        <groupId>org.springframework.boot</groupId>\n+         <artifactId>spring-boot-dependencies</artifactId>\n+         <version>${spring-boot.version}</version>\n+         <type>pom</type>\n+         <scope>import</scope>\n+       </dependency>\n+       <dependency>\n+         <groupId>org.springframework.cloud</groupId>\n+         <artifactId>spring-cloud-spring-service-connector</artifactId>\n+       </dependency>\n+     </dependencies>\n+   </dependencyManagement>\n+\n+   <dependencies>\n+     <dependency>\n+       <groupId>org.springframework.boot</groupId>\n+       <artifactId>spring-boot-starter-cloud-connectors</artifactId>\n+     </dependency>\n+   </dependencies>\n+</project>\n+",
                "raw_url": "https://github.com/apache/maven-plugins/raw/151475f30b1fe048737cbf92dd86b2a404c2daec/maven-dependency-plugin/src/it/projects/mdep-506-dependency-without-version-in-depmgt/pom.xml",
                "sha": "b81f6766401bbb792a3ab1c4bd449aa03ba06b6f",
                "status": "added"
            },
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/maven-plugins/blob/151475f30b1fe048737cbf92dd86b2a404c2daec/maven-dependency-plugin/src/main/java/org/apache/maven/plugins/dependency/analyze/AnalyzeDepMgt.java",
                "changes": 3,
                "contents_url": "https://api.github.com/repos/apache/maven-plugins/contents/maven-dependency-plugin/src/main/java/org/apache/maven/plugins/dependency/analyze/AnalyzeDepMgt.java?ref=151475f30b1fe048737cbf92dd86b2a404c2daec",
                "deletions": 1,
                "filename": "maven-dependency-plugin/src/main/java/org/apache/maven/plugins/dependency/analyze/AnalyzeDepMgt.java",
                "patch": "@@ -270,7 +270,8 @@ public String getExclusionKey( Exclusion ex )\n                 //workaround for MNG-2961\n                 dependencyArtifact.isSnapshot();\n \n-                if ( !depFromDepMgt.getVersion().equals( dependencyArtifact.getBaseVersion() ) )\n+                if ( depFromDepMgt.getVersion() != null\n+                        && !depFromDepMgt.getVersion().equals( dependencyArtifact.getBaseVersion() ) )\n                 {\n                     mismatchMap.put( dependencyArtifact, depFromDepMgt );\n                 }",
                "raw_url": "https://github.com/apache/maven-plugins/raw/151475f30b1fe048737cbf92dd86b2a404c2daec/maven-dependency-plugin/src/main/java/org/apache/maven/plugins/dependency/analyze/AnalyzeDepMgt.java",
                "sha": "8a28e70381869e1a3d73ce4e73cabf369467edf1",
                "status": "modified"
            }
        ],
        "message": "[MDEP-506] NPE in AnalyzeDepMgt.getMismatch\n\nSubmitted by: Olivier Orand <olivier.orand@orange.com>\t\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/plugins/trunk@1708923 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/maven-plugins/commit/fdb225431e4c6c18ec16941fd85e4646b21d0c68",
        "repo": "maven-plugins",
        "unit_tests": [
            "TestAnalyzeDepMgt.java"
        ]
    },
    "maven-plugins_19cae18": {
        "bug_id": "maven-plugins_19cae18",
        "commit": "https://github.com/apache/maven-plugins/commit/19cae1820f9d97e313e11e6833f070ec23991e66",
        "file": [
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/maven-plugins/blob/19cae1820f9d97e313e11e6833f070ec23991e66/maven-javadoc-plugin/src/main/java/org/apache/maven/plugin/javadoc/AbstractJavadocMojo.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/maven-plugins/contents/maven-javadoc-plugin/src/main/java/org/apache/maven/plugin/javadoc/AbstractJavadocMojo.java?ref=19cae1820f9d97e313e11e6833f070ec23991e66",
                "deletions": 1,
                "filename": "maven-javadoc-plugin/src/main/java/org/apache/maven/plugin/javadoc/AbstractJavadocMojo.java",
                "patch": "@@ -4759,7 +4759,7 @@ private List getDependenciesLinks()\n         {\n             Artifact artifact = (Artifact) it.next();\n \n-            if ( artifact != null && artifact.getFile().exists() )\n+            if ( artifact != null && artifact.getFile() != null && artifact.getFile().exists() )\n             {\n                 try\n                 {",
                "raw_url": "https://github.com/apache/maven-plugins/raw/19cae1820f9d97e313e11e6833f070ec23991e66/maven-javadoc-plugin/src/main/java/org/apache/maven/plugin/javadoc/AbstractJavadocMojo.java",
                "sha": "176b331229a8b7c6c798005f17fdceddd4d1e9a2",
                "status": "modified"
            }
        ],
        "message": "prevent potential NPE.\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/plugins/trunk@911264 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/maven-plugins/commit/277ccf6a8e9e19706ecb317c64b11a9bca650c79",
        "repo": "maven-plugins",
        "unit_tests": [
            "AbstractJavadocMojoTest.java"
        ]
    },
    "maven-plugins_20b3dac": {
        "bug_id": "maven-plugins_20b3dac",
        "commit": "https://github.com/apache/maven-plugins/commit/20b3dac4f2817451eaf86c232b92bae8f0f98daf",
        "file": [
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/maven-plugins/blob/20b3dac4f2817451eaf86c232b92bae8f0f98daf/maven-war-plugin/pom.xml",
                "changes": 10,
                "contents_url": "https://api.github.com/repos/apache/maven-plugins/contents/maven-war-plugin/pom.xml?ref=20b3dac4f2817451eaf86c232b92bae8f0f98daf",
                "deletions": 9,
                "filename": "maven-war-plugin/pom.xml",
                "patch": "@@ -22,7 +22,7 @@ under the License.\n   <parent>\n     <artifactId>maven-plugins</artifactId>\n     <groupId>org.apache.maven.plugins</groupId>\n-    <version>10</version>\n+    <version>11-SNAPSHOT</version>\n   </parent>\n   <modelVersion>4.0.0</modelVersion>\n   <artifactId>maven-war-plugin</artifactId>\n@@ -118,14 +118,6 @@ under the License.\n     </dependency>\n   </dependencies>\n   <build>\n-    <pluginManagement>\n-       <plugins>\n-         <plugin>\n-           <artifactId>maven-surefire-plugin</artifactId>\n-           <version>2.4.1</version>\n-         </plugin>\n-       </plugins>\n-    </pluginManagement>\n     <plugins>\n       <plugin>\n         <groupId>org.apache.maven.plugins</groupId>",
                "raw_url": "https://github.com/apache/maven-plugins/raw/20b3dac4f2817451eaf86c232b92bae8f0f98daf/maven-war-plugin/pom.xml",
                "sha": "07f0da078e2f6e4842d6a5514e7d10ca7808cab9",
                "status": "modified"
            },
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/maven-plugins/blob/20b3dac4f2817451eaf86c232b92bae8f0f98daf/maven-war-plugin/src/main/java/org/apache/maven/plugin/war/util/WebappStructure.java",
                "changes": 3,
                "contents_url": "https://api.github.com/repos/apache/maven-plugins/contents/maven-war-plugin/src/main/java/org/apache/maven/plugin/war/util/WebappStructure.java?ref=20b3dac4f2817451eaf86c232b92bae8f0f98daf",
                "deletions": 1,
                "filename": "maven-war-plugin/src/main/java/org/apache/maven/plugin/war/util/WebappStructure.java",
                "patch": "@@ -25,6 +25,7 @@\n \n import java.io.IOException;\n import java.util.ArrayList;\n+import java.util.Collections;\n import java.util.HashMap;\n import java.util.Iterator;\n import java.util.List;\n@@ -447,7 +448,7 @@ private List createDependenciesInfoList( List dependencies )\n     {\n         if ( dependencies == null )\n         {\n-            return null;\n+            return Collections.EMPTY_LIST;\n         }\n         final List result = new ArrayList();\n         final Iterator it = dependencies.iterator();",
                "raw_url": "https://github.com/apache/maven-plugins/raw/20b3dac4f2817451eaf86c232b92bae8f0f98daf/maven-war-plugin/src/main/java/org/apache/maven/plugin/war/util/WebappStructure.java",
                "sha": "775c57de863f763948213f0a147054ff3a135a2c",
                "status": "modified"
            }
        ],
        "message": "- fix possible NPE when building a war project without dependency\n- upgrade to parent snapshot (temove redundant plugin declaration)\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/plugins/trunk@636544 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/maven-plugins/commit/6a87c1bc29e42fb8760e5febd6100f71b915b6f4",
        "repo": "maven-plugins",
        "unit_tests": [
            "WebappStructureTest.java"
        ]
    },
    "maven-plugins_26abff5": {
        "bug_id": "maven-plugins_26abff5",
        "commit": "https://github.com/apache/maven-plugins/commit/26abff51c4652009c050865de76495e1498d56ef",
        "file": [
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/maven-plugins/blob/26abff51c4652009c050865de76495e1498d56ef/maven-changelog-plugin/pom.xml",
                "changes": 1,
                "contents_url": "https://api.github.com/repos/apache/maven-plugins/contents/maven-changelog-plugin/pom.xml?ref=26abff51c4652009c050865de76495e1498d56ef",
                "deletions": 0,
                "filename": "maven-changelog-plugin/pom.xml",
                "patch": "@@ -343,6 +343,7 @@ under the License.\n                 <goal>clean</goal>\n                 <goal>site</goal>\n               </goals>\n+              <showErrors>true</showErrors>\n             </configuration>\n             <executions>\n               <execution>",
                "raw_url": "https://github.com/apache/maven-plugins/raw/26abff51c4652009c050865de76495e1498d56ef/maven-changelog-plugin/pom.xml",
                "sha": "192a52f29a89894dc0ac4e9765711e3e5e753c99",
                "status": "modified"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/maven-plugins/blob/26abff51c4652009c050865de76495e1498d56ef/maven-changelog-plugin/src/it/with-svnjava-maven-2.x/pom.xml",
                "changes": 1,
                "contents_url": "https://api.github.com/repos/apache/maven-plugins/contents/maven-changelog-plugin/src/it/with-svnjava-maven-2.x/pom.xml?ref=26abff51c4652009c050865de76495e1498d56ef",
                "deletions": 0,
                "filename": "maven-changelog-plugin/src/it/with-svnjava-maven-2.x/pom.xml",
                "patch": "@@ -74,6 +74,7 @@\n       <plugin>\n         <groupId>org.apache.maven.plugins</groupId>\n         <artifactId>maven-changelog-plugin</artifactId>\n+        <version>@pom.version@</version>\n         <configuration>\n           <providerImplementations>\n             <svn>javasvn</svn>",
                "raw_url": "https://github.com/apache/maven-plugins/raw/26abff51c4652009c050865de76495e1498d56ef/maven-changelog-plugin/src/it/with-svnjava-maven-2.x/pom.xml",
                "sha": "9625645a80d3eeb764d43ec7f92aa7423b40fad5",
                "status": "modified"
            },
            {
                "additions": 0,
                "blob_url": "https://github.com/apache/maven-plugins/blob/26abff51c4652009c050865de76495e1498d56ef/maven-changelog-plugin/src/it/with-svnjava-maven-3/invoker.properties",
                "changes": 0,
                "contents_url": "https://api.github.com/repos/apache/maven-plugins/contents/maven-changelog-plugin/src/it/with-svnjava-maven-3/invoker.properties?ref=26abff51c4652009c050865de76495e1498d56ef",
                "deletions": 0,
                "filename": "maven-changelog-plugin/src/it/with-svnjava-maven-3/invoker.properties",
                "previous_filename": "maven-changelog-plugin/src/it/with-svnjava/invoker.properties",
                "raw_url": "https://github.com/apache/maven-plugins/raw/26abff51c4652009c050865de76495e1498d56ef/maven-changelog-plugin/src/it/with-svnjava-maven-3/invoker.properties",
                "sha": "3e60bf58627dfa04999731835e6cb8e4af9a6bdf",
                "status": "renamed"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/maven-plugins/blob/26abff51c4652009c050865de76495e1498d56ef/maven-changelog-plugin/src/it/with-svnjava-maven-3/pom.xml",
                "changes": 1,
                "contents_url": "https://api.github.com/repos/apache/maven-plugins/contents/maven-changelog-plugin/src/it/with-svnjava-maven-3/pom.xml?ref=26abff51c4652009c050865de76495e1498d56ef",
                "deletions": 0,
                "filename": "maven-changelog-plugin/src/it/with-svnjava-maven-3/pom.xml",
                "patch": "@@ -63,6 +63,7 @@\n             <plugin>\n               <groupId>org.apache.maven.plugins</groupId>\n               <artifactId>maven-changelog-plugin</artifactId>\n+              <version>@pom.version@</version>\n               <configuration>\n                 <issueIDRegexPattern>[A-Z]{2,}-\\d+</issueIDRegexPattern>\n                 <issueLinkUrl>http://jira.example.co.uk</issueLinkUrl>",
                "previous_filename": "maven-changelog-plugin/src/it/with-svnjava/pom.xml",
                "raw_url": "https://github.com/apache/maven-plugins/raw/26abff51c4652009c050865de76495e1498d56ef/maven-changelog-plugin/src/it/with-svnjava-maven-3/pom.xml",
                "sha": "808fa48e8bf2fa55322df223ea3be41858fb01cb",
                "status": "renamed"
            },
            {
                "additions": 0,
                "blob_url": "https://github.com/apache/maven-plugins/blob/26abff51c4652009c050865de76495e1498d56ef/maven-changelog-plugin/src/it/with-svnjava-maven-3/verify.groovy",
                "changes": 0,
                "contents_url": "https://api.github.com/repos/apache/maven-plugins/contents/maven-changelog-plugin/src/it/with-svnjava-maven-3/verify.groovy?ref=26abff51c4652009c050865de76495e1498d56ef",
                "deletions": 0,
                "filename": "maven-changelog-plugin/src/it/with-svnjava-maven-3/verify.groovy",
                "previous_filename": "maven-changelog-plugin/src/it/with-svnjava/verify.groovy",
                "raw_url": "https://github.com/apache/maven-plugins/raw/26abff51c4652009c050865de76495e1498d56ef/maven-changelog-plugin/src/it/with-svnjava-maven-3/verify.groovy",
                "sha": "268098f9de45beab172a5bc7455a5081bc3d18fb",
                "status": "renamed"
            },
            {
                "additions": 15,
                "blob_url": "https://github.com/apache/maven-plugins/blob/26abff51c4652009c050865de76495e1498d56ef/maven-changelog-plugin/src/main/java/org/apache/maven/plugin/changelog/FileActivityComparator.java",
                "changes": 17,
                "contents_url": "https://api.github.com/repos/apache/maven-plugins/contents/maven-changelog-plugin/src/main/java/org/apache/maven/plugin/changelog/FileActivityComparator.java?ref=26abff51c4652009c050865de76495e1498d56ef",
                "deletions": 2,
                "filename": "maven-changelog-plugin/src/main/java/org/apache/maven/plugin/changelog/FileActivityComparator.java",
                "patch": "@@ -19,6 +19,7 @@\n  * under the License.\n  */\n \n+import org.apache.commons.lang.StringUtils;\n import org.apache.maven.scm.ChangeFile;\n \n import java.util.Comparator;\n@@ -34,7 +35,9 @@\n public class FileActivityComparator\n     implements Comparator\n {\n-    /** {@inheritDoc} */\n+    /**\n+     * {@inheritDoc}\n+     */\n     public int compare( Object o1, Object o2 )\n         throws ClassCastException\n     {\n@@ -98,6 +101,16 @@ private int sortByRevision( List list1, List list2 )\n \n         String revision2 = getLatestRevision( list2 );\n \n+        if ( revision1 == null )\n+        {\n+            return -1;\n+        }\n+\n+        if ( revision2 == null )\n+        {\n+            return 1;\n+        }\n+\n         return revision1.compareTo( revision2 );\n     }\n \n@@ -115,7 +128,7 @@ private String getLatestRevision( List list )\n         {\n             ChangeFile file = (ChangeFile) i.next();\n \n-            if ( latest.length() == 0 )\n+            if ( StringUtils.isNotBlank( latest) )\n             {\n                 latest = file.getRevision();\n             }",
                "raw_url": "https://github.com/apache/maven-plugins/raw/26abff51c4652009c050865de76495e1498d56ef/maven-changelog-plugin/src/main/java/org/apache/maven/plugin/changelog/FileActivityComparator.java",
                "sha": "c27342cdb138e4be09058fd1e6bb6251ec017779",
                "status": "modified"
            }
        ],
        "message": "force version in it poms and add NPE check in FileActivityComparator\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/plugins/trunk@1171987 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/maven-plugins/commit/968b4359f5ceff619ba958ae78ed72d32d181917",
        "repo": "maven-plugins",
        "unit_tests": [
            "FileActivityComparatorTest.java"
        ]
    },
    "maven-plugins_27a79b0": {
        "bug_id": "maven-plugins_27a79b0",
        "commit": "https://github.com/apache/maven-plugins/commit/27a79b02c8d6af0c3504433e957357542596f7c6",
        "file": [
            {
                "additions": 18,
                "blob_url": "https://github.com/apache/maven-plugins/blob/27a79b02c8d6af0c3504433e957357542596f7c6/maven-shade-plugin/src/main/java/org/apache/maven/plugins/shade/mojo/ShadeMojo.java",
                "changes": 38,
                "contents_url": "https://api.github.com/repos/apache/maven-plugins/contents/maven-shade-plugin/src/main/java/org/apache/maven/plugins/shade/mojo/ShadeMojo.java?ref=27a79b02c8d6af0c3504433e957357542596f7c6",
                "deletions": 20,
                "filename": "maven-shade-plugin/src/main/java/org/apache/maven/plugins/shade/mojo/ShadeMojo.java",
                "patch": "@@ -193,6 +193,7 @@\n      * </pre>\n      * <em>Note:</em> Support for includes exists only since version 1.4.\n      */\n+    @SuppressWarnings( \"MismatchedReadAndWriteOfArray\" )\n     @Parameter\n     private PackageRelocation[] relocations;\n \n@@ -224,6 +225,7 @@\n      * &lt;/filters&gt;\n      * </pre>\n      */\n+    @SuppressWarnings( \"MismatchedReadAndWriteOfArray\" )\n     @Parameter\n     private ArchiveFilter[] filters;\n \n@@ -539,20 +541,23 @@ else if ( !renamed )\n                 {\n                     getLog().info( \"Replacing original artifact with shaded artifact.\" );\n                     File originalArtifact = project.getArtifact().getFile();\n-                    replaceFile( originalArtifact, outputJar );\n-\n-                    if ( createSourcesJar )\n+                    if (originalArtifact != null)\n                     {\n-                        File shadedSources = shadedSourcesArtifactFile();\n+                        replaceFile( originalArtifact, outputJar );\n \n-                        replaceFile( shadedSources, sourcesJar );\n+                        if ( createSourcesJar )\n+                        {\n+                            File shadedSources = shadedSourcesArtifactFile();\n \n-                        projectHelper.attachArtifact( project, \"jar\", \"sources\", shadedSources );\n-                    }\n+                            replaceFile( shadedSources, sourcesJar );\n \n-                    if ( createDependencyReducedPom )\n-                    {\n-                        createDependencyReducedPom( artifactIds );\n+                            projectHelper.attachArtifact( project, \"jar\", \"sources\", shadedSources );\n+                        }\n+\n+                        if ( createDependencyReducedPom )\n+                        {\n+                            createDependencyReducedPom( artifactIds );\n+                        }\n                     }\n                 }\n             }\n@@ -671,10 +676,8 @@ private File resolveArtifactSources( Artifact artifact )\n             return relocators;\n         }\n \n-        for ( int i = 0; i < relocations.length; i++ )\n+        for ( PackageRelocation r : relocations )\n         {\n-            PackageRelocation r = relocations[i];\n-\n             relocators.add( new SimpleRelocator( r.getPattern(), r.getShadedPattern(), r.getIncludes(), r.getExcludes(),\n                                                  r.isRawString() ) );\n         }\n@@ -901,24 +904,19 @@ private void createDependencyReducedPom( Set<String> artifactsToRemove )\n \n                 if ( f.exists() )\n                 {\n+                    //noinspection ResultOfMethodCallIgnored\n                     f.delete();\n                 }\n \n                 Writer w = WriterFactory.newXmlWriter( f );\n \n-                String origRelativePath = null;\n                 String replaceRelativePath = null;\n                 if ( model.getParent() != null )\n                 {\n-                    origRelativePath = model.getParent().getRelativePath();\n+                    replaceRelativePath = model.getParent().getRelativePath();\n \n                 }\n-                replaceRelativePath = origRelativePath;\n \n-                if ( origRelativePath == null )\n-                {\n-                    origRelativePath = \"../pom.xml\";\n-                }\n \n                 if ( model.getParent() != null )\n                 {",
                "raw_url": "https://github.com/apache/maven-plugins/raw/27a79b02c8d6af0c3504433e957357542596f7c6/maven-shade-plugin/src/main/java/org/apache/maven/plugins/shade/mojo/ShadeMojo.java",
                "sha": "05aecd3ec31b95194091a23aa82d063beeca32fb",
                "status": "modified"
            }
        ],
        "message": "[MSHADE-127] Fixed npe\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/plugins/trunk@1482543 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/maven-plugins/commit/e1e482a96d9a4b91d63978792e979cd403f3d119",
        "repo": "maven-plugins",
        "unit_tests": [
            "ShadeMojoTest.java"
        ]
    },
    "maven-plugins_303c53f": {
        "bug_id": "maven-plugins_303c53f",
        "commit": "https://github.com/apache/maven-plugins/commit/303c53f4e9851a3f0eb081b8981c4fbae2a56c37",
        "file": [
            {
                "additions": 61,
                "blob_url": "https://github.com/apache/maven-plugins/blob/303c53f4e9851a3f0eb081b8981c4fbae2a56c37/maven-ant-plugin/src/it/javadoc-it/pom.xml",
                "changes": 61,
                "contents_url": "https://api.github.com/repos/apache/maven-plugins/contents/maven-ant-plugin/src/it/javadoc-it/pom.xml?ref=303c53f4e9851a3f0eb081b8981c4fbae2a56c37",
                "deletions": 0,
                "filename": "maven-ant-plugin/src/it/javadoc-it/pom.xml",
                "patch": "@@ -0,0 +1,61 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\"\n+  xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+  xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd\">\n+  <modelVersion>4.0.0</modelVersion>\n+\n+  <groupId>org.apache.maven.plugins.maven-ant-plugin.it</groupId>\n+  <artifactId>javadoc-it</artifactId>\n+  <version>1.0-SNAPSHOT</version>\n+\n+  <build>\n+    <finalName>${project.artifactId}</finalName>\n+    <plugins>\n+      <plugin>\n+        <groupId>org.apache.maven.plugins</groupId>\n+        <artifactId>maven-ant-plugin</artifactId>\n+        <version>@pom.version@</version>\n+      </plugin>\n+      <plugin>\n+        <groupId>org.apache.maven.plugins</groupId>\n+        <artifactId>maven-clean-plugin</artifactId>\n+        <version>2.2</version>\n+        <configuration>\n+          <filesets>\n+            <fileset>\n+              <directory>${basedir}</directory>\n+              <includes>\n+                <include>build.xml</include>\n+                <include>maven-build.*</include>\n+              </includes>\n+            </fileset>\n+          </filesets>\n+        </configuration>\n+      </plugin>\n+    </plugins>\n+  </build>\n+\n+  <reporting>\n+    <plugins>\n+      <plugin>\n+        <groupId>org.apache.maven.plugins</groupId>\n+        <artifactId>maven-javadoc-plugin</artifactId>\n+        <version>2.4</version>\n+        <configuration>\n+          <tags>\n+            <tag>\n+              <name>requirement</name>\n+              <placement>a</placement>\n+              <head>Software Requirement:</head>\n+            </tag>\n+          </tags>\n+        </configuration>\n+      </plugin>\n+    </plugins>\n+  </reporting>\n+\n+  <properties>\n+    <build.compiler>extJavac</build.compiler>\n+  </properties>\n+\n+</project>",
                "raw_url": "https://github.com/apache/maven-plugins/raw/303c53f4e9851a3f0eb081b8981c4fbae2a56c37/maven-ant-plugin/src/it/javadoc-it/pom.xml",
                "sha": "7996857286fa0c40b5a52ea4b69fbf75db9ea9ae",
                "status": "added"
            },
            {
                "additions": 3,
                "blob_url": "https://github.com/apache/maven-plugins/blob/303c53f4e9851a3f0eb081b8981c4fbae2a56c37/maven-ant-plugin/src/it/javadoc-it/src/main/java/Main.java",
                "changes": 3,
                "contents_url": "https://api.github.com/repos/apache/maven-plugins/contents/maven-ant-plugin/src/it/javadoc-it/src/main/java/Main.java?ref=303c53f4e9851a3f0eb081b8981c4fbae2a56c37",
                "deletions": 0,
                "filename": "maven-ant-plugin/src/it/javadoc-it/src/main/java/Main.java",
                "patch": "@@ -0,0 +1,3 @@\n+public class Main\n+{\n+}",
                "raw_url": "https://github.com/apache/maven-plugins/raw/303c53f4e9851a3f0eb081b8981c4fbae2a56c37/maven-ant-plugin/src/it/javadoc-it/src/main/java/Main.java",
                "sha": "27ccb83201ed6ec40983a4e13432b1128718b805",
                "status": "added"
            },
            {
                "additions": 124,
                "blob_url": "https://github.com/apache/maven-plugins/blob/303c53f4e9851a3f0eb081b8981c4fbae2a56c37/maven-ant-plugin/src/main/java/org/apache/maven/plugin/ant/AntBuildWriterUtil.java",
                "changes": 195,
                "contents_url": "https://api.github.com/repos/apache/maven-plugins/contents/maven-ant-plugin/src/main/java/org/apache/maven/plugin/ant/AntBuildWriterUtil.java?ref=303c53f4e9851a3f0eb081b8981c4fbae2a56c37",
                "deletions": 71,
                "filename": "maven-ant-plugin/src/main/java/org/apache/maven/plugin/ant/AntBuildWriterUtil.java",
                "patch": "@@ -39,7 +39,6 @@\n import org.apache.maven.project.MavenProject;\n import org.apache.maven.wagon.PathUtils;\n import org.apache.xpath.XPathAPI;\n-import org.apache.xpath.objects.XObject;\n import org.codehaus.plexus.util.StringUtils;\n import org.codehaus.plexus.util.xml.XMLWriter;\n import org.codehaus.plexus.util.xml.Xpp3Dom;\n@@ -535,10 +534,11 @@ public static void writeJavadocTask( XMLWriter writer, MavenProject project, Art\n         {\n             for ( int i = 0; i < tags.length; i++ )\n             {\n+                Map props = (Map) tags[i].get( \"tag\" );\n                 writer.startElement( \"tag\" );\n-                writer.addAttribute( \"name\", (String) tags[i].get( \"name\" ) );\n-                addWrapAttribute( writer, \"javadoc\", \"scope\", (String) tags[i].get( \"placement\" ), 4 );\n-                addWrapAttribute( writer, \"javadoc\", \"description\", (String) tags[i].get( \"head\" ), 4 );\n+                writer.addAttribute( \"name\", (String) props.get( \"name\" ) );\n+                addWrapAttribute( writer, \"javadoc\", \"scope\", (String) props.get( \"placement\" ), 4 );\n+                addWrapAttribute( writer, \"javadoc\", \"description\", (String) props.get( \"head\" ), 4 );\n                 writer.endElement(); // tag\n             }\n         }\n@@ -1131,98 +1131,103 @@ private static Map getMavenPluginConfigurationsImpl( MavenProject project, Strin\n                 Document doc = DocumentBuilderFactory.newInstance().newDocumentBuilder()\n                     .parse( new ByteArrayInputStream( pluginConf.toString().getBytes( \"UTF-8\" ) ) );\n \n-                XObject obj = XPathAPI.eval( doc, \"//configuration/\" + optionName );\n-\n-                NodeList nodeList = obj.nodelist();\n-                if ( nodeList.getLength() > 0 && isList( nodeList.item( 0 ) ) )\n+                NodeList nodeList = XPathAPI.eval( doc, \"//configuration/\" + optionName ).nodelist();\n+                if ( nodeList.getLength() > 0 )\n                 {\n-                    /*\n-                     * <optionNames>\n-                     *   <optionName>\n-                     *    <param1>value1</param1>\n-                     *    <param2>value2</param2>\n-                     *   </optionName>\n-                     * </optionNames>\n-                     */\n-                    Map options = new HashMap();\n-\n-                    List optionNames = new ArrayList();\n-                    NodeList childs = nodeList.item( 0 ).getChildNodes();\n-                    for ( int i = 0; i < childs.getLength(); i++ )\n-                    {\n-                        if ( childs.item( i ).getNodeType() == Node.ELEMENT_NODE )\n-                        {\n-                            Map option = new HashMap();\n+                    Node optionNode = nodeList.item( 0 );\n \n-                            obj = XPathAPI.eval( doc, \"//configuration/\" + childs.item( i ).getNodeName() );\n+                    if ( isList( optionNode ) )\n+                    {\n+                        /*\n+                         * <optionNames>\n+                         *   <optionName>\n+                         *    <param1>value1</param1>\n+                         *    <param2>value2</param2>\n+                         *   </optionName>\n+                         * </optionNames>\n+                         */\n+                        Map options = new HashMap();\n \n-                            if ( StringUtils.isNotEmpty( obj.toString() ) )\n+                        List optionNames = new ArrayList();\n+                        NodeList childs = optionNode.getChildNodes();\n+                        for ( int i = 0; i < childs.getLength(); i++ )\n+                        {\n+                            Node child = childs.item( i );\n+                            if ( child.getNodeType() == Node.ELEMENT_NODE )\n                             {\n-                                Map properties = new HashMap();\n-                                NodeList childs2 = childs.item( i ).getChildNodes();\n-                                if ( childs2.getLength() > 0 )\n+                                Map option = new HashMap();\n+\n+                                if ( isElementContent( child ) )\n                                 {\n-                                    for ( int j = 0; j < childs2.getLength(); j++ )\n+                                    Map properties = new HashMap();\n+                                    NodeList childs2 = child.getChildNodes();\n+                                    if ( childs2.getLength() > 0 )\n                                     {\n-                                        if ( childs2.item( j ).getNodeType() == Node.ELEMENT_NODE )\n+                                        for ( int j = 0; j < childs2.getLength(); j++ )\n                                         {\n-                                            properties.put( childs2.item( j ).getNodeName(), childs2.item( j )\n-                                                .getFirstChild().getNodeValue() );\n+                                            Node child2 = childs2.item( j );\n+                                            if ( child2.getNodeType() == Node.ELEMENT_NODE )\n+                                            {\n+                                                properties.put( child2.getNodeName(), getTextContent( child2 ) );\n+                                            }\n                                         }\n+                                        option.put( child.getNodeName(), properties );\n                                     }\n-                                    option.put( childs.item( i ).getNodeName(), properties );\n                                 }\n-                            }\n-                            else\n-                            {\n-                                option.put( childs.item( i ).getNodeName(), childs.item( i ).getFirstChild()\n-                                    .getNodeValue() );\n-                            }\n+                                else\n+                                {\n+                                    option.put( child.getNodeName(), getTextContent( child ) );\n+                                }\n \n-                            optionNames.add( option );\n+                                optionNames.add( option );\n+                            }\n                         }\n-                    }\n-\n-                    options.put( optionName, optionNames.toArray( new Map[0] ) );\n \n-                    return options;\n-                }\n+                        options.put( optionName, optionNames.toArray( new Map[0] ) );\n \n-                /*\n-                 * <optionName>\n-                 *  <param1>value1</param1>\n-                 *  <param2>value2</param2>\n-                 * </optionName>\n-                 */\n-                if ( StringUtils.isNotEmpty( obj.toString() ) )\n-                {\n-                    Map option = new HashMap();\n+                        return options;\n+                    }\n \n-                    NodeList childs = nodeList.item( 0 ).getChildNodes();\n-                    if ( childs.getLength() > 1 )\n+                    if ( isElementContent( optionNode ) )\n                     {\n-                        Map parameters = new HashMap();\n+                        /*\n+                         * <optionName>\n+                         *  <param1>value1</param1>\n+                         *  <param2>value2</param2>\n+                         * </optionName>\n+                         */\n+                        Map option = new HashMap();\n \n-                        for ( int i = 0; i < childs.getLength(); i++ )\n+                        NodeList childs = optionNode.getChildNodes();\n+                        if ( childs.getLength() > 1 )\n                         {\n-                            if ( childs.item( i ).getNodeType() == Node.ELEMENT_NODE )\n+                            Map parameters = new HashMap();\n+\n+                            for ( int i = 0; i < childs.getLength(); i++ )\n                             {\n-                                parameters.put( childs.item( i ).getNodeName(), childs.item( i ).getFirstChild()\n-                                    .getNodeValue() );\n+                                Node child = childs.item( i );\n+                                if ( child.getNodeType() == Node.ELEMENT_NODE )\n+                                {\n+                                    parameters.put( child.getNodeName(), getTextContent( child ) );\n+                                }\n                             }\n+\n+                            option.put( optionName, parameters );\n                         }\n \n-                        option.put( optionName, parameters );\n+                        return option;\n                     }\n                     else\n                     {\n                         /*\n                          * <optionName>value1</optionName>\n                          */\n-                        option.put( optionName, obj.toString() );\n-                    }\n+                        Map option = new HashMap();\n+\n+                        option.put( optionName, getTextContent( optionNode ) );\n \n-                    return option;\n+                        return option;\n+                    }\n                 }\n             }\n             catch ( Exception e )\n@@ -1286,7 +1291,7 @@ private static void writeCopyLib( XMLWriter writer, MavenProject project, String\n      * &lt;/options&gt;\n      * </pre>\n      *\n-     * @param node a given node\n+     * @param node a given node, may be <code>null</code>.\n      * @return true if the node is a list, false otherwise.\n      */\n     private static boolean isList( Node node )\n@@ -1296,13 +1301,13 @@ private static boolean isList( Node node )\n             return false;\n         }\n \n-        NodeList childs = node.getChildNodes();\n+        NodeList children = node.getChildNodes();\n \n         boolean isList = false;\n         String lastNodeName = null;\n-        for ( int i = 0; i < childs.getLength(); i++ )\n+        for ( int i = 0; i < children.getLength(); i++ )\n         {\n-            Node child = childs.item( i );\n+            Node child = children.item( i );\n             if ( child.getNodeType() == Node.ELEMENT_NODE )\n             {\n                 isList = isList || ( child.getNodeName().equals( lastNodeName ) );\n@@ -1317,6 +1322,54 @@ private static boolean isList( Node node )\n         return isList;\n     }\n \n+    /**\n+     * Checks whether the specified node has element content or consists only of character data.\n+     * \n+     * @param node The node to test, may be <code>null</code>.\n+     * @return <code>true</code> if any child node is an element, <code>false</code> otherwise.\n+     */\n+    private static boolean isElementContent( Node node )\n+    {\n+        if ( node == null )\n+        {\n+            return false;\n+        }\n+        NodeList children = node.getChildNodes();\n+        for ( int i = 0; i < children.getLength(); i++ )\n+        {\n+            Node child = children.item( i );\n+            if ( child.getNodeType() == Node.ELEMENT_NODE )\n+            {\n+                return true;\n+            }\n+        }\n+        return false;\n+    }\n+\n+    /**\n+     * Gets the text content of the specified node.\n+     * \n+     * @param node The node whose text contents should be retrieved, may be <code>null</code>.\n+     * @return The text content of the node, can be empty but never <code>null</code>.\n+     */\n+    private static String getTextContent( Node node )\n+    {\n+        StringBuffer buffer = new StringBuffer();\n+        if ( node != null )\n+        {\n+            NodeList children = node.getChildNodes();\n+            for ( int i = 0; i < children.getLength(); i++ )\n+            {\n+                Node child = children.item( i );\n+                if ( child.getNodeType() == Node.TEXT_NODE || child.getNodeType() == Node.CDATA_SECTION_NODE )\n+                {\n+                    buffer.append( child.getNodeValue() );\n+                }\n+            }\n+        }\n+        return buffer.toString();\n+    }\n+\n     /**\n      * Gets the singular form of the specified (English) plural form. For example:\n      * ",
                "raw_url": "https://github.com/apache/maven-plugins/raw/303c53f4e9851a3f0eb081b8981c4fbae2a56c37/maven-ant-plugin/src/main/java/org/apache/maven/plugin/ant/AntBuildWriterUtil.java",
                "sha": "b0aa3c7f3773961f125de0ebbe0020a14a69461e",
                "status": "modified"
            },
            {
                "additions": 11,
                "blob_url": "https://github.com/apache/maven-plugins/blob/303c53f4e9851a3f0eb081b8981c4fbae2a56c37/maven-ant-plugin/src/test/java/org/apache/maven/plugin/ant/AntBuildWriterUtilTest.java",
                "changes": 11,
                "contents_url": "https://api.github.com/repos/apache/maven-plugins/contents/maven-ant-plugin/src/test/java/org/apache/maven/plugin/ant/AntBuildWriterUtilTest.java?ref=303c53f4e9851a3f0eb081b8981c4fbae2a56c37",
                "deletions": 0,
                "filename": "maven-ant-plugin/src/test/java/org/apache/maven/plugin/ant/AntBuildWriterUtilTest.java",
                "patch": "@@ -21,6 +21,7 @@\n \n import java.io.File;\n import java.io.StringWriter;\n+import java.util.Map;\n \n import org.apache.maven.embedder.MavenEmbedder;\n import org.apache.maven.embedder.MavenEmbedderConsoleLogger;\n@@ -164,6 +165,16 @@ public void testGetMavenJavadocPluginConfiguration()\n         assertNotNull( AntBuildWriterUtil.getMavenJavadocPluginOptions( project, \"docletArtifacts\", null ) );\n         assertEquals( AntBuildWriterUtil.getMavenJavadocPluginOptions( project, \"docletArtifacts\", null ).length, 2 );\n \n+        Map[] options = AntBuildWriterUtil.getMavenJavadocPluginOptions( project, \"tags\", null );\n+        assertNotNull( options );\n+        assertEquals( options.length, 1 );\n+        assertEquals( 1, options[0].size() );\n+        Map properties = (Map) options[0].get( \"tag\" );\n+        assertNotNull( properties );\n+        assertEquals( \"requirement\", properties.get( \"name\" ) );\n+        assertEquals( \"a\", properties.get( \"placement\" ) );\n+        assertEquals( \"Software Requirement:\", properties.get( \"head\" ) );\n+\n         maven.stop();\n     }\n ",
                "raw_url": "https://github.com/apache/maven-plugins/raw/303c53f4e9851a3f0eb081b8981c4fbae2a56c37/maven-ant-plugin/src/test/java/org/apache/maven/plugin/ant/AntBuildWriterUtilTest.java",
                "sha": "e1b7cb70eec63a190688a2fe34e5078f8e79bc40",
                "status": "modified"
            },
            {
                "additions": 7,
                "blob_url": "https://github.com/apache/maven-plugins/blob/303c53f4e9851a3f0eb081b8981c4fbae2a56c37/maven-ant-plugin/src/test/resources/unit/ant-javadoc-test/pom.xml",
                "changes": 8,
                "contents_url": "https://api.github.com/repos/apache/maven-plugins/contents/maven-ant-plugin/src/test/resources/unit/ant-javadoc-test/pom.xml?ref=303c53f4e9851a3f0eb081b8981c4fbae2a56c37",
                "deletions": 1,
                "filename": "maven-ant-plugin/src/test/resources/unit/ant-javadoc-test/pom.xml",
                "patch": "@@ -111,7 +111,13 @@ under the License.\n               <version>4.5</version>\n             </docletArtifact>\n           </docletArtifacts>\n-\n+          <tags>\n+            <tag>\n+              <name>requirement</name>\n+              <placement>a</placement>\n+              <head>Software Requirement:</head>\n+            </tag>\n+          </tags>\n         </configuration>\n       </plugin>\n   </plugins>",
                "raw_url": "https://github.com/apache/maven-plugins/raw/303c53f4e9851a3f0eb081b8981c4fbae2a56c37/maven-ant-plugin/src/test/resources/unit/ant-javadoc-test/pom.xml",
                "sha": "17199d7121423db816d07574264904d05470504f",
                "status": "modified"
            }
        ],
        "message": "[MANT-41] mvn ant:ant fails with NPE when maven-javadoc-plugin custom tag is specified in pom.xml\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/plugins/trunk@663768 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/maven-plugins/commit/fcc653b11d7b942f07827b2bfb2d2291a43ad880",
        "repo": "maven-plugins",
        "unit_tests": [
            "MainTest.java",
            "AntBuildWriterUtilTest.java"
        ]
    },
    "maven-plugins_3ae0cf8": {
        "bug_id": "maven-plugins_3ae0cf8",
        "commit": "https://github.com/apache/maven-plugins/commit/3ae0cf89ed57e2b06bf4e641a1cd23e0ccb5697c",
        "file": [
            {
                "additions": 6,
                "blob_url": "https://github.com/apache/maven-plugins/blob/3ae0cf89ed57e2b06bf4e641a1cd23e0ccb5697c/maven-pdf-plugin/src/main/java/org/apache/maven/plugins/pdf/PdfMojo.java",
                "changes": 6,
                "contents_url": "https://api.github.com/repos/apache/maven-plugins/contents/maven-pdf-plugin/src/main/java/org/apache/maven/plugins/pdf/PdfMojo.java?ref=3ae0cf89ed57e2b06bf4e641a1cd23e0ccb5697c",
                "deletions": 0,
                "filename": "maven-pdf-plugin/src/main/java/org/apache/maven/plugins/pdf/PdfMojo.java",
                "patch": "@@ -49,6 +49,7 @@\n import org.apache.maven.doxia.docrenderer.DocumentRendererContext;\n import org.apache.maven.doxia.docrenderer.DocumentRendererException;\n import org.apache.maven.doxia.docrenderer.pdf.PdfRenderer;\n+import org.apache.maven.doxia.document.DocumentMeta;\n import org.apache.maven.doxia.document.DocumentModel;\n import org.apache.maven.doxia.document.DocumentTOCItem;\n import org.apache.maven.doxia.document.io.xpp3.DocumentXpp3Writer;\n@@ -782,6 +783,11 @@ private DocumentModel getDocumentModelFromDescriptor( Locale locale )\n             throw new MojoExecutionException( \"Error opening DocumentDescriptor!\", io );\n         }\n \n+        if ( model.getMeta() == null )\n+        {\n+            model.setMeta( new DocumentMeta() );\n+        }\n+\n         if ( StringUtils.isEmpty( model.getMeta().getLanguage() ) )\n         {\n             model.getMeta().setLanguage( locale.getLanguage() );",
                "raw_url": "https://github.com/apache/maven-plugins/raw/3ae0cf89ed57e2b06bf4e641a1cd23e0ccb5697c/maven-pdf-plugin/src/main/java/org/apache/maven/plugins/pdf/PdfMojo.java",
                "sha": "b588667fd8700df82636f7f1b444fd622d042b2f",
                "status": "modified"
            }
        ],
        "message": "[MPDF-35] NPE when document descriptor has no meta information\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/plugins/trunk@891591 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/maven-plugins/commit/8bc5b09b59a91c7d511c232b6b63e0f8c8206ee0",
        "repo": "maven-plugins",
        "unit_tests": [
            "PdfMojoTest.java"
        ]
    },
    "maven-plugins_3dc04f9": {
        "bug_id": "maven-plugins_3dc04f9",
        "commit": "https://github.com/apache/maven-plugins/commit/3dc04f9fe64e231c3762ef3d90fb3cce38d79be4",
        "file": [
            {
                "additions": 57,
                "blob_url": "https://github.com/apache/maven-plugins/blob/3dc04f9fe64e231c3762ef3d90fb3cce38d79be4/maven-invoker-plugin/src/it/staging-pom/pom.xml",
                "changes": 57,
                "contents_url": "https://api.github.com/repos/apache/maven-plugins/contents/maven-invoker-plugin/src/it/staging-pom/pom.xml?ref=3dc04f9fe64e231c3762ef3d90fb3cce38d79be4",
                "deletions": 0,
                "filename": "maven-invoker-plugin/src/it/staging-pom/pom.xml",
                "patch": "@@ -0,0 +1,57 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<!--\n+  ~ Licensed to the Apache Software Foundation (ASF) under one\n+  ~ or more contributor license agreements.  See the NOTICE file\n+  ~ distributed with this work for additional information\n+  ~ regarding copyright ownership.  The ASF licenses this file\n+  ~ to you under the Apache License, Version 2.0 (the\n+  ~ \"License\"); you may not use this file except in compliance\n+  ~ with the License.  You may obtain a copy of the License at\n+  ~\n+  ~   http://www.apache.org/licenses/LICENSE-2.0\n+  ~\n+  ~ Unless required by applicable law or agreed to in writing,\n+  ~ software distributed under the License is distributed on an\n+  ~ \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+  ~ KIND, either express or implied.  See the License for the\n+  ~ specific language governing permissions and limitations\n+  ~ under the License.\n+  -->\n+\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\"\n+         xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd\">\n+  <modelVersion>4.0.0</modelVersion>\n+\n+  <groupId>test</groupId>\n+  <artifactId>pom-packaging</artifactId>\n+  <version>1.0-SNAPSHOT</version>\n+  <packaging>pom</packaging>\n+\n+  <description>\n+    Test to check for MINVOKER-51, i.e. NPE when packaging is pom.\n+  </description>\n+\n+  <build>\n+    <plugins>\n+      <plugin>\n+        <groupId>org.apache.maven.plugins</groupId>\n+        <artifactId>maven-invoker-plugin</artifactId>\n+        <version>@pom.version@</version>\n+        <configuration>\n+          <localRepositoryPath>${project.build.directory}/it-repo</localRepositoryPath>\n+        </configuration>\n+        <executions>\n+          <execution>\n+            <id>integration-test</id>\n+            <phase>integration-test</phase>\n+            <goals>\n+              <goal>install</goal>\n+            </goals>\n+          </execution>\n+        </executions>\n+      </plugin>\n+    </plugins>\n+  </build>\n+\n+</project>",
                "raw_url": "https://github.com/apache/maven-plugins/raw/3dc04f9fe64e231c3762ef3d90fb3cce38d79be4/maven-invoker-plugin/src/it/staging-pom/pom.xml",
                "sha": "cf6e7a6808ab1a2283d6f863ce1173c59a015bcf",
                "status": "added"
            },
            {
                "additions": 35,
                "blob_url": "https://github.com/apache/maven-plugins/blob/3dc04f9fe64e231c3762ef3d90fb3cce38d79be4/maven-invoker-plugin/src/it/staging-pom/verify.bsh",
                "changes": 35,
                "contents_url": "https://api.github.com/repos/apache/maven-plugins/contents/maven-invoker-plugin/src/it/staging-pom/verify.bsh?ref=3dc04f9fe64e231c3762ef3d90fb3cce38d79be4",
                "deletions": 0,
                "filename": "maven-invoker-plugin/src/it/staging-pom/verify.bsh",
                "patch": "@@ -0,0 +1,35 @@\n+import java.io.*;\n+import java.util.*;\n+import java.util.regex.*;\n+\n+try\n+{\n+    File itRepoDir = new File( basedir, \"target/it-repo\" );\n+    System.out.println( \"Checking for existence of: \" + itRepoDir );\n+    if ( !itRepoDir.isDirectory() )\n+    {\n+        System.out.println( \"FAILED!\" );\n+        return false;\n+    }\n+\n+    String[] files = {\n+            \"test/pom-packaging/1.0-SNAPSHOT/pom-packaging-1.0-SNAPSHOT.pom\",\n+      };\n+    for ( String file : files )\n+    {\n+        File stagedFile = new File( itRepoDir, file );\n+        System.out.println( \"Checking for existence of: \" + stagedFile );\n+        if ( !stagedFile.isFile() )\n+        {\n+            System.out.println( \"FAILED!\" );\n+            return false;\n+        }\n+    }\n+}\n+catch( Throwable t )\n+{\n+    t.printStackTrace();\n+    return false;\n+}\n+\n+return true;",
                "raw_url": "https://github.com/apache/maven-plugins/raw/3dc04f9fe64e231c3762ef3d90fb3cce38d79be4/maven-invoker-plugin/src/it/staging-pom/verify.bsh",
                "sha": "32ebe7f9269a2007ff20e2b3f90823a36ff5ecf0",
                "status": "added"
            },
            {
                "additions": 5,
                "blob_url": "https://github.com/apache/maven-plugins/blob/3dc04f9fe64e231c3762ef3d90fb3cce38d79be4/maven-invoker-plugin/src/main/java/org/apache/maven/plugin/invoker/InstallMojo.java",
                "changes": 6,
                "contents_url": "https://api.github.com/repos/apache/maven-plugins/contents/maven-invoker-plugin/src/main/java/org/apache/maven/plugin/invoker/InstallMojo.java?ref=3dc04f9fe64e231c3762ef3d90fb3cce38d79be4",
                "deletions": 1,
                "filename": "maven-invoker-plugin/src/main/java/org/apache/maven/plugin/invoker/InstallMojo.java",
                "patch": "@@ -176,7 +176,11 @@ private void installProjectArtifacts( MavenProject mvnProject, ArtifactRepositor\n             installProjectPom( mvnProject, testRepository );\n \n             // Install the main project artifact\n-            installer.install( mvnProject.getArtifact().getFile(), mvnProject.getArtifact(), testRepository );\n+            File artifactFile = mvnProject.getArtifact().getFile();\n+            if ( artifactFile != null )\n+            {\n+                installer.install( artifactFile, mvnProject.getArtifact(), testRepository );\n+            }\n \n             // Install any attached project artifacts\n             Collection attachedArtifacts = mvnProject.getAttachedArtifacts();",
                "raw_url": "https://github.com/apache/maven-plugins/raw/3dc04f9fe64e231c3762ef3d90fb3cce38d79be4/maven-invoker-plugin/src/main/java/org/apache/maven/plugin/invoker/InstallMojo.java",
                "sha": "2797f622dd45aad25b1ad681bd5d6fcb8a7c1ba7",
                "status": "modified"
            }
        ],
        "message": "[MINVOKER-51] NPE when packaging is pom\nSubmitted by: Peter Janes\nReviewed by: Benjamin Bentmann\n\no Applied with minor modifications/additions\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/plugins/trunk@685574 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/maven-plugins/commit/fa3ecec1bf3e84a8941b5665b0a30adffa8b0278",
        "repo": "maven-plugins",
        "unit_tests": [
            "InstallMojoTest.java"
        ]
    },
    "maven-plugins_4e75ea4": {
        "bug_id": "maven-plugins_4e75ea4",
        "commit": "https://github.com/apache/maven-plugins/commit/4e75ea42c471402c27bbbf0498d88cd37b7f48d3",
        "file": [
            {
                "additions": 4,
                "blob_url": "https://github.com/apache/maven-plugins/blob/4e75ea42c471402c27bbbf0498d88cd37b7f48d3/maven-javadoc-plugin/src/main/java/org/apache/maven/plugin/javadoc/AbstractJavadocMojo.java",
                "changes": 5,
                "contents_url": "https://api.github.com/repos/apache/maven-plugins/contents/maven-javadoc-plugin/src/main/java/org/apache/maven/plugin/javadoc/AbstractJavadocMojo.java?ref=4e75ea42c471402c27bbbf0498d88cd37b7f48d3",
                "deletions": 1,
                "filename": "maven-javadoc-plugin/src/main/java/org/apache/maven/plugin/javadoc/AbstractJavadocMojo.java",
                "patch": "@@ -1517,7 +1517,10 @@ protected List getSourcePaths()\n         else\n         {\n             sourcePaths = new ArrayList( Arrays.asList( sourcepath.split( \"[;]\" ) ) );\n-            sourcePaths.add( getJavadocDirectory().getAbsolutePath() );\n+            if ( getJavadocDirectory() != null )\n+            {\n+                sourcePaths.add( getJavadocDirectory().getAbsolutePath() );\n+            }\n             sourcePaths = pruneSourceDirs( sourcePaths );\n         }\n ",
                "raw_url": "https://github.com/apache/maven-plugins/raw/4e75ea42c471402c27bbbf0498d88cd37b7f48d3/maven-javadoc-plugin/src/main/java/org/apache/maven/plugin/javadoc/AbstractJavadocMojo.java",
                "sha": "b78a39df703d1471f552c0257fc294a92c9b4605",
                "status": "modified"
            }
        ],
        "message": "o fixed a possible NPE\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/plugins/trunk@554202 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/maven-plugins/commit/539534caeaea831ddfd1ad20530afa53d39fcfd8",
        "repo": "maven-plugins",
        "unit_tests": [
            "AbstractJavadocMojoTest.java"
        ]
    },
    "maven-plugins_6289433": {
        "bug_id": "maven-plugins_6289433",
        "commit": "https://github.com/apache/maven-plugins/commit/62894335cc7af35fcdbeb25581aefb5b68d64d5a",
        "file": [
            {
                "additions": 11,
                "blob_url": "https://github.com/apache/maven-plugins/blob/62894335cc7af35fcdbeb25581aefb5b68d64d5a/maven-deploy-plugin/src/main/java/org/apache/maven/plugin/deploy/DeployFileMojo.java",
                "changes": 19,
                "contents_url": "https://api.github.com/repos/apache/maven-plugins/contents/maven-deploy-plugin/src/main/java/org/apache/maven/plugin/deploy/DeployFileMojo.java?ref=62894335cc7af35fcdbeb25581aefb5b68d64d5a",
                "deletions": 8,
                "filename": "maven-deploy-plugin/src/main/java/org/apache/maven/plugin/deploy/DeployFileMojo.java",
                "patch": "@@ -235,15 +235,18 @@ public void execute()\n         }\n \n         // Upload the POM if requested, generating one if need be\n-        if ( generatePom )\n+        if ( !\"pom\".equals( packaging ) )\n         {\n-            ArtifactMetadata metadata = new ProjectArtifactMetadata( artifact, generatePomFile() );\n-            artifact.addMetadata( metadata );\n-        }\n-        else\n-        {\n-            ArtifactMetadata metadata = new ProjectArtifactMetadata( artifact, pomFile );\n-            artifact.addMetadata( metadata );\n+            if ( pomFile != null )\n+            {\n+                ArtifactMetadata metadata = new ProjectArtifactMetadata( artifact, pomFile );\n+                artifact.addMetadata( metadata );\n+            }\n+            else if ( generatePom )\n+            {\n+                ArtifactMetadata metadata = new ProjectArtifactMetadata( artifact, generatePomFile() );\n+                artifact.addMetadata( metadata );\n+            }\n         }\n \n         try",
                "raw_url": "https://github.com/apache/maven-plugins/raw/62894335cc7af35fcdbeb25581aefb5b68d64d5a/maven-deploy-plugin/src/main/java/org/apache/maven/plugin/deploy/DeployFileMojo.java",
                "sha": "190017147c3ba3501419516bcb3c9a223b2f9bfc",
                "status": "modified"
            }
        ],
        "message": "[MDEPLOY-84] NPE when deploy-file with generatePom=false \n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/plugins/trunk@754784 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/maven-plugins/commit/e75c8b441cf0cb48ebd4cdec64e01795193f5d8c",
        "repo": "maven-plugins",
        "unit_tests": [
            "DeployFileMojoTest.java"
        ]
    },
    "maven-plugins_6f9300b": {
        "bug_id": "maven-plugins_6f9300b",
        "commit": "https://github.com/apache/maven-plugins/commit/6f9300bcfda7d17fa00a75a042a44ea06daa1a42",
        "file": [
            {
                "additions": 13,
                "blob_url": "https://github.com/apache/maven-plugins/blob/6f9300bcfda7d17fa00a75a042a44ea06daa1a42/maven-javadoc-plugin/src/main/java/org/apache/maven/plugin/javadoc/JavadocReport.java",
                "changes": 14,
                "contents_url": "https://api.github.com/repos/apache/maven-plugins/contents/maven-javadoc-plugin/src/main/java/org/apache/maven/plugin/javadoc/JavadocReport.java?ref=6f9300bcfda7d17fa00a75a042a44ea06daa1a42",
                "deletions": 1,
                "filename": "maven-javadoc-plugin/src/main/java/org/apache/maven/plugin/javadoc/JavadocReport.java",
                "patch": "@@ -237,7 +237,19 @@ public File getReportOutputDirectory()\n      */\n     public void setReportOutputDirectory( File reportOutputDirectory )\n     {\n-        if ( ( reportOutputDirectory != null ) && ( !reportOutputDirectory.getAbsolutePath().endsWith( destDir ) ) )\n+        updateReportOutputDirectory( reportOutputDirectory, destDir );\n+    }\n+\n+    public void setDestDir( String destDir )\n+    {\n+        this.destDir = destDir;\n+        updateReportOutputDirectory( reportOutputDirectory, destDir );\n+    }\n+\n+    private void updateReportOutputDirectory( File reportOutputDirectory, String destDir )\n+    {\n+        if ( reportOutputDirectory != null && destDir != null\n+             && !reportOutputDirectory.getAbsolutePath().endsWith( destDir ) )\n         {\n             this.reportOutputDirectory = new File( reportOutputDirectory, destDir );\n         }",
                "raw_url": "https://github.com/apache/maven-plugins/raw/6f9300bcfda7d17fa00a75a042a44ea06daa1a42/maven-javadoc-plugin/src/main/java/org/apache/maven/plugin/javadoc/JavadocReport.java",
                "sha": "562c3d42a40f9324004dfe38dfb8a74c34982bba",
                "status": "modified"
            },
            {
                "additions": 13,
                "blob_url": "https://github.com/apache/maven-plugins/blob/6f9300bcfda7d17fa00a75a042a44ea06daa1a42/maven-javadoc-plugin/src/main/java/org/apache/maven/plugin/javadoc/TestJavadocReport.java",
                "changes": 14,
                "contents_url": "https://api.github.com/repos/apache/maven-plugins/contents/maven-javadoc-plugin/src/main/java/org/apache/maven/plugin/javadoc/TestJavadocReport.java?ref=6f9300bcfda7d17fa00a75a042a44ea06daa1a42",
                "deletions": 1,
                "filename": "maven-javadoc-plugin/src/main/java/org/apache/maven/plugin/javadoc/TestJavadocReport.java",
                "patch": "@@ -195,7 +195,19 @@ public File getReportOutputDirectory()\n      */\n     public void setReportOutputDirectory( File reportOutputDirectory )\n     {\n-        if ( ( reportOutputDirectory != null ) && ( !reportOutputDirectory.getAbsolutePath().endsWith( destDir ) ) )\n+        updateReportOutputDirectory( reportOutputDirectory, destDir );\n+    }\n+\n+    public void setDestDir( String destDir )\n+    {\n+        this.destDir = destDir;\n+        updateReportOutputDirectory( reportOutputDirectory, destDir );\n+    }\n+\n+    private void updateReportOutputDirectory( File reportOutputDirectory, String destDir )\n+    {\n+        if ( reportOutputDirectory != null && destDir != null\n+             && !reportOutputDirectory.getAbsolutePath().endsWith( destDir ) )\n         {\n             this.reportOutputDirectory = new File( reportOutputDirectory, destDir );\n         }",
                "raw_url": "https://github.com/apache/maven-plugins/raw/6f9300bcfda7d17fa00a75a042a44ea06daa1a42/maven-javadoc-plugin/src/main/java/org/apache/maven/plugin/javadoc/TestJavadocReport.java",
                "sha": "b161d778618a969c1008d31a51e87ab88e5867e0",
                "status": "modified"
            }
        ],
        "message": "[MJAVADOC-251] Configuration of javadoc:javadoc fails with NPE upon disadvantageous order of config injection\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/plugins/trunk@800618 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/maven-plugins/commit/f583868e85e992a7e024e89aaf9b74094b7e6ca4",
        "repo": "maven-plugins",
        "unit_tests": [
            "JavadocReportTest.java",
            "TestJavadocReport.java",
            "TestJavadocReportTest.java"
        ]
    },
    "maven-plugins_752efed": {
        "bug_id": "maven-plugins_752efed",
        "commit": "https://github.com/apache/maven-plugins/commit/752efed2db6c1fee64d78a52c5d3842a5726dd2c",
        "file": [
            {
                "additions": 3,
                "blob_url": "https://github.com/apache/maven-plugins/blob/752efed2db6c1fee64d78a52c5d3842a5726dd2c/maven-repository-plugin/src/main/java/org/apache/maven/plugins/repository/BundleCreateMojo.java",
                "changes": 6,
                "contents_url": "https://api.github.com/repos/apache/maven-plugins/contents/maven-repository-plugin/src/main/java/org/apache/maven/plugins/repository/BundleCreateMojo.java?ref=752efed2db6c1fee64d78a52c5d3842a5726dd2c",
                "deletions": 3,
                "filename": "maven-repository-plugin/src/main/java/org/apache/maven/plugins/repository/BundleCreateMojo.java",
                "patch": "@@ -18,15 +18,15 @@\n  */\n package org.apache.maven.plugins.repository;\n \n-import java.io.File;\n-\n import org.apache.maven.artifact.handler.manager.ArtifactHandlerManager;\n import org.apache.maven.plugin.AbstractMojo;\n import org.apache.maven.plugin.MojoExecutionException;\n import org.apache.maven.project.MavenProject;\n import org.codehaus.plexus.archiver.jar.JarArchiver;\n import org.codehaus.plexus.util.StringUtils;\n \n+import java.io.File;\n+\n /**\n  * Goal which creates an upload bundle for a project built with maven.\n  *\n@@ -53,7 +53,7 @@\n \n     /**\n      * Jar archiver.\n-     * @parameter expression=\"{component.org.codehaus.plexus.archiver.Archiver#jar}\"\n+     * @parameter expression=\"${component.org.codehaus.plexus.archiver.Archiver#jar}\"\n      * @required\n      * @readonly\n      */",
                "raw_url": "https://github.com/apache/maven-plugins/raw/752efed2db6c1fee64d78a52c5d3842a5726dd2c/maven-repository-plugin/src/main/java/org/apache/maven/plugins/repository/BundleCreateMojo.java",
                "sha": "0facae703f1d28b5c756532ac494276f3312cd03",
                "status": "modified"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/maven-plugins/blob/752efed2db6c1fee64d78a52c5d3842a5726dd2c/maven-repository-plugin/src/main/java/org/apache/maven/plugins/repository/BundlePackMojo.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/maven-plugins/contents/maven-repository-plugin/src/main/java/org/apache/maven/plugins/repository/BundlePackMojo.java?ref=752efed2db6c1fee64d78a52c5d3842a5726dd2c",
                "deletions": 1,
                "filename": "maven-repository-plugin/src/main/java/org/apache/maven/plugins/repository/BundlePackMojo.java",
                "patch": "@@ -58,7 +58,7 @@\n \n     /**\n      * Jar archiver.\n-     * @parameter expression=\"{component.org.codehaus.plexus.archiver.Archiver#jar}\"\n+     * @parameter expression=\"${component.org.codehaus.plexus.archiver.Archiver#jar}\"\n      * @required\n      * @readonly\n      */",
                "raw_url": "https://github.com/apache/maven-plugins/raw/752efed2db6c1fee64d78a52c5d3842a5726dd2c/maven-repository-plugin/src/main/java/org/apache/maven/plugins/repository/BundlePackMojo.java",
                "sha": "20c7e70730bef30553f59d109fa61a62542c3421",
                "status": "modified"
            }
        ],
        "message": "added $ back into the expressions, was throwing NPE in the test cases on the jarArchiver\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/plugins/trunk@501627 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/maven-plugins/commit/973259529c5a0f5a9320a8e45acf42f827484287",
        "repo": "maven-plugins",
        "unit_tests": [
            "BundleCreateMojoTest.java",
            "BundlePackMojoTest.java"
        ]
    },
    "maven-plugins_77a2228": {
        "bug_id": "maven-plugins_77a2228",
        "commit": "https://github.com/apache/maven-plugins/commit/77a2228ef3f0708669a593a8de1483fab78b0af1",
        "file": [
            {
                "additions": 8,
                "blob_url": "https://github.com/apache/maven-plugins/blob/77a2228ef3f0708669a593a8de1483fab78b0af1/maven-checkstyle-plugin/src/main/java/org/apache/maven/plugin/checkstyle/CheckstyleResults.java",
                "changes": 10,
                "contents_url": "https://api.github.com/repos/apache/maven-plugins/contents/maven-checkstyle-plugin/src/main/java/org/apache/maven/plugin/checkstyle/CheckstyleResults.java?ref=77a2228ef3f0708669a593a8de1483fab78b0af1",
                "deletions": 2,
                "filename": "maven-checkstyle-plugin/src/main/java/org/apache/maven/plugin/checkstyle/CheckstyleResults.java",
                "patch": "@@ -57,15 +57,21 @@ public CheckstyleResults()\n         else\n         {\n             violations = new LinkedList<AuditEvent>();\n-            this.files.put( file, violations );\n+            if ( file != null )\n+            {\n+                this.files.put( file, violations );\n+            }\n         }\n \n         return violations;\n     }\n \n     public void setFileViolations( String file, List<AuditEvent> violations )\n     {\n-        this.files.put( file, violations );\n+        if ( file != null )\n+        {\n+            this.files.put( file, violations );\n+        }\n     }\n \n     public Map<String, List<AuditEvent>> getFiles()",
                "raw_url": "https://github.com/apache/maven-plugins/raw/77a2228ef3f0708669a593a8de1483fab78b0af1/maven-checkstyle-plugin/src/main/java/org/apache/maven/plugin/checkstyle/CheckstyleResults.java",
                "sha": "a3bc6365c7d62ca96969acc27425768d51a46123",
                "status": "modified"
            }
        ],
        "message": "[MCHECKSTYLE-205] NPE in CheckstyleReportGenerator.doFilesSummary:654 version 2.11 regression\nSubmitted by: Bob Fields\nReviewed by: Dennis Lundberg\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/plugins/trunk@1570752 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/maven-plugins/commit/689f2c83445dd7c4fb65c6b92141c5a6d647300f",
        "repo": "maven-plugins",
        "unit_tests": [
            "CheckstyleResultsTest.java"
        ]
    },
    "maven-plugins_787b2db": {
        "bug_id": "maven-plugins_787b2db",
        "commit": "https://github.com/apache/maven-plugins/commit/787b2db1b0aed827cd28178e2f74e8a39bdc1e05",
        "file": [
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/maven-plugins/blob/787b2db1b0aed827cd28178e2f74e8a39bdc1e05/maven-assembly-plugin/src/main/java/org/apache/maven/plugin/assembly/mojos/AbstractAssemblyMojo.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/maven-plugins/contents/maven-assembly-plugin/src/main/java/org/apache/maven/plugin/assembly/mojos/AbstractAssemblyMojo.java?ref=787b2db1b0aed827cd28178e2f74e8a39bdc1e05",
                "deletions": 1,
                "filename": "maven-assembly-plugin/src/main/java/org/apache/maven/plugin/assembly/mojos/AbstractAssemblyMojo.java",
                "patch": "@@ -186,7 +186,7 @@\n     /**\n      * Directory for site generated.\n      *\n-     * @parameter default-value=\"${project.build.directory}/site\"\n+     * @parameter default-value=\"${project.reporting.outputDirectory}\"\n      * @readonly\n      */\n     private File siteDirectory;",
                "raw_url": "https://github.com/apache/maven-plugins/raw/787b2db1b0aed827cd28178e2f74e8a39bdc1e05/maven-assembly-plugin/src/main/java/org/apache/maven/plugin/assembly/mojos/AbstractAssemblyMojo.java",
                "sha": "03b3885264cf054ad07ba032aa5d94c3883fb3c5",
                "status": "modified"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/maven-plugins/blob/787b2db1b0aed827cd28178e2f74e8a39bdc1e05/maven-changelog-plugin/src/main/java/org/apache/maven/changelog/ChangeLogReport.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/maven-plugins/contents/maven-changelog-plugin/src/main/java/org/apache/maven/changelog/ChangeLogReport.java?ref=787b2db1b0aed827cd28178e2f74e8a39bdc1e05",
                "deletions": 1,
                "filename": "maven-changelog-plugin/src/main/java/org/apache/maven/changelog/ChangeLogReport.java",
                "patch": "@@ -200,7 +200,7 @@\n     /**\n      * The directory where the report will be generated\n      *\n-     * @parameter expression=\"${project.build.directory}/site\"\n+     * @parameter expression=\"${project.reporting.outputDirectory}\"\n      * @required\n      * @readonly\n      */",
                "raw_url": "https://github.com/apache/maven-plugins/raw/787b2db1b0aed827cd28178e2f74e8a39bdc1e05/maven-changelog-plugin/src/main/java/org/apache/maven/changelog/ChangeLogReport.java",
                "sha": "cc6061ded1dd232ec9c24c0b7674ecd926ecfeb3",
                "status": "modified"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/maven-plugins/blob/787b2db1b0aed827cd28178e2f74e8a39bdc1e05/maven-changes-plugin/src/main/java/org/apache/maven/plugin/changes/ChangesMojo.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/maven-plugins/contents/maven-changes-plugin/src/main/java/org/apache/maven/plugin/changes/ChangesMojo.java?ref=787b2db1b0aed827cd28178e2f74e8a39bdc1e05",
                "deletions": 1,
                "filename": "maven-changes-plugin/src/main/java/org/apache/maven/plugin/changes/ChangesMojo.java",
                "patch": "@@ -41,7 +41,7 @@\n     /**\n      * Directory where reports will go.\n      *\n-     * @parameter expression=\"${project.build.directory}/site \"\n+     * @parameter expression=\"${project.reporting.outputDirectory}\"\n      * @required\n      * @readonly\n      */",
                "raw_url": "https://github.com/apache/maven-plugins/raw/787b2db1b0aed827cd28178e2f74e8a39bdc1e05/maven-changes-plugin/src/main/java/org/apache/maven/plugin/changes/ChangesMojo.java",
                "sha": "1efff639a172045e9029cdc15924bdd6577fed77",
                "status": "modified"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/maven-plugins/blob/787b2db1b0aed827cd28178e2f74e8a39bdc1e05/maven-changes-plugin/src/main/java/org/apache/maven/plugin/jira/JiraMojo.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/maven-plugins/contents/maven-changes-plugin/src/main/java/org/apache/maven/plugin/jira/JiraMojo.java?ref=787b2db1b0aed827cd28178e2f74e8a39bdc1e05",
                "deletions": 1,
                "filename": "maven-changes-plugin/src/main/java/org/apache/maven/plugin/jira/JiraMojo.java",
                "patch": "@@ -39,7 +39,7 @@\n     /**\n      * Output Directory of the report.\n      * \n-     * @parameter expression=\"${project.build.directory}/site \"\n+     * @parameter expression=\"${project.reporting.outputDirectory}\"\n      * @required\n      * @readonly\n      */",
                "raw_url": "https://github.com/apache/maven-plugins/raw/787b2db1b0aed827cd28178e2f74e8a39bdc1e05/maven-changes-plugin/src/main/java/org/apache/maven/plugin/jira/JiraMojo.java",
                "sha": "9336a97cbf000e9a9fa094f311480a2abb3b2ca4",
                "status": "modified"
            },
            {
                "additions": 10,
                "blob_url": "https://github.com/apache/maven-plugins/blob/787b2db1b0aed827cd28178e2f74e8a39bdc1e05/maven-checkstyle-plugin/src/main/java/org/apache/maven/plugin/checkstyle/CheckstyleReport.java",
                "changes": 11,
                "contents_url": "https://api.github.com/repos/apache/maven-plugins/contents/maven-checkstyle-plugin/src/main/java/org/apache/maven/plugin/checkstyle/CheckstyleReport.java?ref=787b2db1b0aed827cd28178e2f74e8a39bdc1e05",
                "deletions": 1,
                "filename": "maven-checkstyle-plugin/src/main/java/org/apache/maven/plugin/checkstyle/CheckstyleReport.java",
                "patch": "@@ -387,7 +387,7 @@\n     /**\n      * Location of the Xrefs to link to.\n      *\n-     * @parameter default-value=\"${project.build.directory}/site/xref\"\n+     * @parameter default-value=\"${project.reporting.outputDirectory}/xref\"\n      */\n     private File xrefLocation;\n \n@@ -1036,4 +1036,13 @@ public boolean canGenerateReport()\n         // TODO: would be good to scan the files here\n         return sourceDirectory.exists();\n     }\n+\n+    /**\n+     * @see org.apache.maven.reporting.AbstractMavenReport#setReportOutputDirectory(java.io.File)\n+     */\n+    public void setReportOutputDirectory( File reportOutputDirectory )\n+    {\n+        super.setReportOutputDirectory( reportOutputDirectory );\n+        this.outputDirectory = reportOutputDirectory;\n+    }\n }",
                "raw_url": "https://github.com/apache/maven-plugins/raw/787b2db1b0aed827cd28178e2f74e8a39bdc1e05/maven-checkstyle-plugin/src/main/java/org/apache/maven/plugin/checkstyle/CheckstyleReport.java",
                "sha": "8304981679cf7e24e06fb5cb074ccbff6d0b9209",
                "status": "modified"
            },
            {
                "additions": 15,
                "blob_url": "https://github.com/apache/maven-plugins/blob/787b2db1b0aed827cd28178e2f74e8a39bdc1e05/maven-clover-plugin/src/main/java/org/apache/maven/plugin/clover/CloverReportMojo.java",
                "changes": 15,
                "contents_url": "https://api.github.com/repos/apache/maven-plugins/contents/maven-clover-plugin/src/main/java/org/apache/maven/plugin/clover/CloverReportMojo.java?ref=787b2db1b0aed827cd28178e2f74e8a39bdc1e05",
                "deletions": 0,
                "filename": "maven-clover-plugin/src/main/java/org/apache/maven/plugin/clover/CloverReportMojo.java",
                "patch": "@@ -389,4 +389,19 @@ public boolean canGenerateReport()\n \n         return canGenerate;\n     }\n+\n+    /**\n+     * @see org.apache.maven.reporting.AbstractMavenReport#setReportOutputDirectory(java.io.File)\n+     */\n+    public void setReportOutputDirectory( File reportOutputDirectory )\n+    {\n+        if ( ( reportOutputDirectory != null ) && ( !reportOutputDirectory.getAbsolutePath().endsWith( \"clover\" ) ) )\n+        {\n+            this.outputDirectory = new File( reportOutputDirectory, \"clover\" );\n+        }\n+        else\n+        {\n+            this.outputDirectory = reportOutputDirectory;\n+        }\n+    }\n }",
                "raw_url": "https://github.com/apache/maven-plugins/raw/787b2db1b0aed827cd28178e2f74e8a39bdc1e05/maven-clover-plugin/src/main/java/org/apache/maven/plugin/clover/CloverReportMojo.java",
                "sha": "6f2c034d64f245b3ed02f2694826afff686bee55",
                "status": "modified"
            },
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/maven-plugins/blob/787b2db1b0aed827cd28178e2f74e8a39bdc1e05/maven-javadoc-plugin/src/main/java/org/apache/maven/plugin/javadoc/AbstractJavadocMojo.java",
                "changes": 4,
                "contents_url": "https://api.github.com/repos/apache/maven-plugins/contents/maven-javadoc-plugin/src/main/java/org/apache/maven/plugin/javadoc/AbstractJavadocMojo.java?ref=787b2db1b0aed827cd28178e2f74e8a39bdc1e05",
                "deletions": 2,
                "filename": "maven-javadoc-plugin/src/main/java/org/apache/maven/plugin/javadoc/AbstractJavadocMojo.java",
                "patch": "@@ -86,7 +86,7 @@\n      * Specifies the destination directory where javadoc saves the generated HTML files.\n      * See <a href=\"http://java.sun.com/j2se/1.4.2/docs/tooldocs/windows/javadoc.html#d\">d</a>.\n      *\n-     * @parameter expression=\"${destDir}\" alias=\"destDir\" default-value=\"${project.build.directory}/site/apidocs\"\n+     * @parameter expression=\"${destDir}\" alias=\"destDir\" default-value=\"${project.build.directory}/apidocs\"\n      * @required\n      */\n     protected File outputDirectory;\n@@ -1124,7 +1124,7 @@ private String getBottomText( String inceptionYear )\n         }\n         else\n         {\n-\t\tbottom = StringUtils.replace( bottom, \"{inceptionYear}-\", \"\" );\n+            bottom = StringUtils.replace( bottom, \"{inceptionYear}-\", \"\" );\n         }\n         return bottom;\n     }",
                "raw_url": "https://github.com/apache/maven-plugins/raw/787b2db1b0aed827cd28178e2f74e8a39bdc1e05/maven-javadoc-plugin/src/main/java/org/apache/maven/plugin/javadoc/AbstractJavadocMojo.java",
                "sha": "d0d452df78a6d48c516f4321c02a5df4a9ce9021",
                "status": "modified"
            },
            {
                "additions": 27,
                "blob_url": "https://github.com/apache/maven-plugins/blob/787b2db1b0aed827cd28178e2f74e8a39bdc1e05/maven-javadoc-plugin/src/main/java/org/apache/maven/plugin/javadoc/JavadocReport.java",
                "changes": 41,
                "contents_url": "https://api.github.com/repos/apache/maven-plugins/contents/maven-javadoc-plugin/src/main/java/org/apache/maven/plugin/javadoc/JavadocReport.java?ref=787b2db1b0aed827cd28178e2f74e8a39bdc1e05",
                "deletions": 14,
                "filename": "maven-javadoc-plugin/src/main/java/org/apache/maven/plugin/javadoc/JavadocReport.java",
                "patch": "@@ -32,8 +32,8 @@\n import java.util.Locale;\n \n /**\n- * Generates documentation for the Java code in the project using the standard\n- * <a href=\"http://java.sun.com/j2se/javadoc/\">Javadoc Tool</a> tool.\n+ * Generates documentation for the Java code in the project using the standard <a\n+ * href=\"http://java.sun.com/j2se/javadoc/\">Javadoc Tool</a> tool.\n  *\n  * @author <a href=\"mailto:evenisse@apache.org\">Emmanuel Venisse</a>\n  * @author <a href=\"mailto:vincent.siveton@gmail.com\">Vincent Siveton</a>\n@@ -58,6 +58,12 @@\n      */\n     private Renderer siteRenderer;\n \n+    /**\n+     * Specifies the destination directory where javadoc saves the generated HTML files.\n+     *\n+     * @parameter expression=\"${project.reporting.outputDirectory}/apidocs\"\n+     * @required\n+     */\n     private File reportOutputDirectory;\n \n     // ----------------------------------------------------------------------\n@@ -103,6 +109,7 @@ protected Renderer getSiteRenderer()\n     public void generate( Sink sink, Locale locale )\n         throws MavenReportException\n     {\n+        outputDirectory = getReportOutputDirectory();\n         executeReport( locale );\n     }\n \n@@ -142,7 +149,7 @@ public boolean canGenerateReport()\n         }\n         return canGenerate;\n     }\n-    \n+\n     /**\n      * @see org.apache.maven.reporting.MavenReport#getCategoryName()\n      */\n@@ -158,8 +165,9 @@ public File getReportOutputDirectory()\n     {\n         if ( reportOutputDirectory == null )\n         {\n-            reportOutputDirectory = new File( getOutputDirectory() );\n+            return outputDirectory;\n         }\n+\n         return reportOutputDirectory;\n     }\n \n@@ -170,7 +178,14 @@ public File getReportOutputDirectory()\n      */\n     public void setReportOutputDirectory( File reportOutputDirectory )\n     {\n-        this.reportOutputDirectory = reportOutputDirectory;\n+        if ( ( reportOutputDirectory != null ) && ( !reportOutputDirectory.getAbsolutePath().endsWith( \"apidocs\" ) ) )\n+        {\n+            this.reportOutputDirectory = new File( reportOutputDirectory, \"apidocs\" );\n+        }\n+        else\n+        {\n+            this.reportOutputDirectory = reportOutputDirectory;\n+        }\n     }\n \n     /**\n@@ -181,26 +196,24 @@ public void execute()\n     {\n         try\n         {\n-            String outputDirectory = getOutputDirectory();\n-\n-            SiteRendererSink sink = siteRenderer.createSink( new File( outputDirectory ), getOutputName() + \".html\" );\n+            SiteRendererSink sink = siteRenderer.createSink( getReportOutputDirectory(), getOutputName() + \".html\" );\n \n             generate( sink, Locale.getDefault() );\n         }\n         catch ( RendererException e )\n         {\n-            throw new MojoExecutionException(\n-                \"An error has occurred in \" + getName( Locale.ENGLISH ) + \" report generation.\", e );\n+            throw new MojoExecutionException( \"An error has occurred in \" + getName( Locale.ENGLISH )\n+                + \" report generation.\", e );\n         }\n         catch ( IOException e )\n         {\n-            throw new MojoExecutionException(\n-                \"An error has occurred in \" + getName( Locale.ENGLISH ) + \" report generation.\", e );\n+            throw new MojoExecutionException( \"An error has occurred in \" + getName( Locale.ENGLISH )\n+                + \" report generation.\", e );\n         }\n         catch ( MavenReportException e )\n         {\n-            throw new MojoExecutionException(\n-                \"An error has occurred in \" + getName( Locale.ENGLISH ) + \" report generation.\", e );\n+            throw new MojoExecutionException( \"An error has occurred in \" + getName( Locale.ENGLISH )\n+                + \" report generation.\", e );\n         }\n     }\n }",
                "raw_url": "https://github.com/apache/maven-plugins/raw/787b2db1b0aed827cd28178e2f74e8a39bdc1e05/maven-javadoc-plugin/src/main/java/org/apache/maven/plugin/javadoc/JavadocReport.java",
                "sha": "1da68824e5e1db25329b9ea650f96c78be47a19d",
                "status": "modified"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/maven-plugins/blob/787b2db1b0aed827cd28178e2f74e8a39bdc1e05/maven-jxr-plugin/src/main/java/org/apache/maven/plugin/jxr/AbstractJxrReport.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/maven-plugins/contents/maven-jxr-plugin/src/main/java/org/apache/maven/plugin/jxr/AbstractJxrReport.java?ref=787b2db1b0aed827cd28178e2f74e8a39bdc1e05",
                "deletions": 1,
                "filename": "maven-jxr-plugin/src/main/java/org/apache/maven/plugin/jxr/AbstractJxrReport.java",
                "patch": "@@ -61,7 +61,7 @@\n     /**\n      * Output folder where the main page of the report will be generated.\n      *\n-     * @parameter expression=\"${project.build.directory}/site\"\n+     * @parameter expression=\"${project.reporting.outputDirectory}\"\n      * @required\n      */\n     private String outputDirectory;",
                "raw_url": "https://github.com/apache/maven-plugins/raw/787b2db1b0aed827cd28178e2f74e8a39bdc1e05/maven-jxr-plugin/src/main/java/org/apache/maven/plugin/jxr/AbstractJxrReport.java",
                "sha": "90fc8053f55a4641b7d0ebde8126e939c842965e",
                "status": "modified"
            },
            {
                "additions": 17,
                "blob_url": "https://github.com/apache/maven-plugins/blob/787b2db1b0aed827cd28178e2f74e8a39bdc1e05/maven-jxr-plugin/src/main/java/org/apache/maven/plugin/jxr/JxrReport.java",
                "changes": 19,
                "contents_url": "https://api.github.com/repos/apache/maven-plugins/contents/maven-jxr-plugin/src/main/java/org/apache/maven/plugin/jxr/JxrReport.java?ref=787b2db1b0aed827cd28178e2f74e8a39bdc1e05",
                "deletions": 2,
                "filename": "maven-jxr-plugin/src/main/java/org/apache/maven/plugin/jxr/JxrReport.java",
                "patch": "@@ -46,14 +46,14 @@\n     /**\n      * Folder where the Xref files will be copied to.\n      *\n-     * @parameter expression=\"${project.build.directory}/site/xref\"\n+     * @parameter expression=\"${project.reporting.outputDirectory}/xref\"\n      */\n     private String destDir;\n \n     /**\n      * Folder where Javadoc is generated for this project.\n      *\n-     * @parameter expression=\"${project.build.directory}/site/apidocs\"\n+     * @parameter expression=\"${project.reporting.outputDirectory}/apidocs\"\n      */\n     private File javadocDir;\n \n@@ -156,4 +156,19 @@ protected String getJavadocLocation()\n         }\n         return location;\n     }\n+\n+    /**\n+     * @see org.apache.maven.reporting.AbstractMavenReport#setReportOutputDirectory(java.io.File)\n+     */\n+    public void setReportOutputDirectory( File reportOutputDirectory )\n+    {\n+        if ( ( reportOutputDirectory != null ) && ( !reportOutputDirectory.getAbsolutePath().endsWith( \"xref\" ) ) )\n+        {\n+            this.destDir = new File( reportOutputDirectory, \"xref\" ).getAbsolutePath();\n+        }\n+        else\n+        {\n+            this.destDir = reportOutputDirectory.getAbsolutePath();\n+        }\n+    }\n }",
                "raw_url": "https://github.com/apache/maven-plugins/raw/787b2db1b0aed827cd28178e2f74e8a39bdc1e05/maven-jxr-plugin/src/main/java/org/apache/maven/plugin/jxr/JxrReport.java",
                "sha": "c8c85c2122e62b125dab02408b604e8e28a48d96",
                "status": "modified"
            },
            {
                "additions": 17,
                "blob_url": "https://github.com/apache/maven-plugins/blob/787b2db1b0aed827cd28178e2f74e8a39bdc1e05/maven-jxr-plugin/src/main/java/org/apache/maven/plugin/jxr/JxrTestReport.java",
                "changes": 18,
                "contents_url": "https://api.github.com/repos/apache/maven-plugins/contents/maven-jxr-plugin/src/main/java/org/apache/maven/plugin/jxr/JxrTestReport.java?ref=787b2db1b0aed827cd28178e2f74e8a39bdc1e05",
                "deletions": 1,
                "filename": "maven-jxr-plugin/src/main/java/org/apache/maven/plugin/jxr/JxrTestReport.java",
                "patch": "@@ -18,6 +18,7 @@\n \n import org.apache.maven.project.MavenProject;\n \n+import java.io.File;\n import java.util.List;\n import java.util.Locale;\n \n@@ -44,7 +45,7 @@\n     /**\n      * Folder where the Xref files will be copied to.\n      *\n-     * @parameter expression=\"${project.build.directory}/site/xref-test\"\n+     * @parameter expression=\"${project.reporting.outputDirectory}/xref-test\"\n      */\n     private String destDir;\n \n@@ -110,4 +111,19 @@ protected String getJavadocLocation()\n         // Don't link Javadoc\n         return null;\n     }\n+\n+    /**\n+     * @see org.apache.maven.reporting.AbstractMavenReport#setReportOutputDirectory(java.io.File)\n+     */\n+    public void setReportOutputDirectory( File reportOutputDirectory )\n+    {\n+        if ( ( reportOutputDirectory != null ) && ( !reportOutputDirectory.getAbsolutePath().endsWith( \"xref-test\" ) ) )\n+        {\n+            this.destDir = new File( reportOutputDirectory, \"xref-test\" ).getAbsolutePath();\n+        }\n+        else\n+        {\n+            this.destDir = reportOutputDirectory.getAbsolutePath();\n+        }\n+    }\n }",
                "raw_url": "https://github.com/apache/maven-plugins/raw/787b2db1b0aed827cd28178e2f74e8a39bdc1e05/maven-jxr-plugin/src/main/java/org/apache/maven/plugin/jxr/JxrTestReport.java",
                "sha": "c935892c7fe9e7e32074ebadcfe6e6d8f76bee77",
                "status": "modified"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/maven-plugins/blob/787b2db1b0aed827cd28178e2f74e8a39bdc1e05/maven-pmd-plugin/src/main/java/org/apache/maven/plugin/pmd/AbstractPmdReport.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/maven-plugins/contents/maven-pmd-plugin/src/main/java/org/apache/maven/plugin/pmd/AbstractPmdReport.java?ref=787b2db1b0aed827cd28178e2f74e8a39bdc1e05",
                "deletions": 1,
                "filename": "maven-pmd-plugin/src/main/java/org/apache/maven/plugin/pmd/AbstractPmdReport.java",
                "patch": "@@ -92,7 +92,7 @@\n     /**\n      * Location of the Xrefs to link to.\n      *\n-     * @parameter default-value=\"${project.build.directory}/site/xref\"\n+     * @parameter default-value=\"${project.reporting.outputDirectory}/xref\"\n      */\n     private File xrefLocation;\n ",
                "raw_url": "https://github.com/apache/maven-plugins/raw/787b2db1b0aed827cd28178e2f74e8a39bdc1e05/maven-pmd-plugin/src/main/java/org/apache/maven/plugin/pmd/AbstractPmdReport.java",
                "sha": "e3270775bf951cfff33114809ad55ae864adf6d1",
                "status": "modified"
            },
            {
                "additions": 144,
                "blob_url": "https://github.com/apache/maven-plugins/blob/787b2db1b0aed827cd28178e2f74e8a39bdc1e05/maven-project-info-reports-plugin/src/main/java/org/apache/maven/report/projectinfo/DependenciesReport.java",
                "changes": 234,
                "contents_url": "https://api.github.com/repos/apache/maven-plugins/contents/maven-project-info-reports-plugin/src/main/java/org/apache/maven/report/projectinfo/DependenciesReport.java?ref=787b2db1b0aed827cd28178e2f74e8a39bdc1e05",
                "deletions": 90,
                "filename": "maven-project-info-reports-plugin/src/main/java/org/apache/maven/report/projectinfo/DependenciesReport.java",
                "patch": "@@ -34,6 +34,7 @@\n import org.apache.maven.artifact.repository.ArtifactRepository;\n import org.apache.maven.artifact.repository.ArtifactRepositoryPolicy;\n import org.apache.maven.artifact.resolver.ArtifactCollector;\n+import org.apache.maven.artifact.resolver.ArtifactNotFoundException;\n import org.apache.maven.artifact.resolver.ArtifactResolutionException;\n import org.apache.maven.artifact.versioning.InvalidVersionSpecificationException;\n import org.apache.maven.artifact.versioning.VersionRange;\n@@ -44,6 +45,7 @@\n import org.apache.maven.project.MavenProject;\n import org.apache.maven.project.MavenProjectBuilder;\n import org.apache.maven.project.ProjectBuildingException;\n+import org.apache.maven.project.artifact.InvalidDependencyVersionException;\n import org.apache.maven.report.projectinfo.ReportResolutionListener.Node;\n import org.apache.maven.reporting.AbstractMavenReportRenderer;\n import org.apache.maven.settings.Proxy;\n@@ -67,6 +69,7 @@\n import org.codehaus.plexus.context.Context;\n import org.codehaus.plexus.context.ContextException;\n import org.codehaus.plexus.personality.plexus.lifecycle.phase.Contextualizable;\n+import org.codehaus.plexus.util.StringUtils;\n \n /**\n  * Generates the Project Dependencies report.\n@@ -97,7 +100,7 @@\n      * @component\n      */\n     private ArtifactCollector collector;\n-    \n+\n     /**\n      * @component\n      */\n@@ -111,19 +114,19 @@\n      * @readonly\n      */\n     private Settings settings;\n-    \n+\n     /**\n      * @parameter expression=\"${dependency.details.enabled}\" default-value=\"true\"\n      */\n     private boolean dependencyDetailsEnabled;\n-    \n+\n     /**\n      * @parameter expression=\"${dependency.locations.enabled}\" default-value=\"false\"\n      */\n     private boolean dependencyLocationsEnabled;\n-    \n+\n     private PlexusContainer container;\n-    \n+\n     /**\n      * Will be filled with license name / list of projects.\n      */\n@@ -173,6 +176,11 @@ private ReportResolutionListener resolveProject()\n \n         try\n         {\n+            // TODO site:run Why do we need to resolve this...\n+            if ( project.getDependencyArtifacts() == null )\n+            {\n+                project.setDependencyArtifacts( project.createArtifacts( factory, null, null ) );\n+            }\n             collector.collect( project.getDependencyArtifacts(), project.getArtifact(), managedVersions,\n                                localRepository, project.getRemoteArtifactRepositories(), artifactMetadataSource, null,\n                                Collections.singletonList( listener ) );\n@@ -181,6 +189,10 @@ private ReportResolutionListener resolveProject()\n         {\n             getLog().error( \"An error occurred while resolving project dependencies.\", e );\n         }\n+        catch ( InvalidDependencyVersionException e )\n+        {\n+            getLog().error( \"An error occurred while resolving project dependencies.\", e );\n+        }\n \n         return listener;\n     }\n@@ -206,8 +218,8 @@ private Map createManagedVersionMap( String projectId, DependencyManagement depe\n                 }\n                 catch ( InvalidVersionSpecificationException e )\n                 {\n-                    throw new ProjectBuildingException( projectId, \"Unable to parse version '\" + d.getVersion() +\n-                        \"' for dependency '\" + d.getManagementKey() + \"': \" + e.getMessage(), e );\n+                    throw new ProjectBuildingException( projectId, \"Unable to parse version '\" + d.getVersion()\n+                        + \"' for dependency '\" + d.getManagementKey() + \"': \" + e.getMessage(), e );\n                 }\n             }\n         }\n@@ -240,41 +252,43 @@ public void contextualize( Context context )\n \n         public Dependencies( MavenProject project, ReportResolutionListener listener )\n         {\n-            /* Workaround to ensure proper File objects in the \n-             * Artifacts from the ReportResolutionListener\n+            /*\n+             * Workaround to ensure proper File objects in the Artifacts from the ReportResolutionListener\n              */\n             Map projectMap = new HashMap();\n             Iterator it = project.getArtifacts().iterator();\n-            while(it.hasNext())\n+            while ( it.hasNext() )\n             {\n                 Artifact artifact = (Artifact) it.next();\n                 projectMap.put( ArtifactUtils.versionlessKey( artifact ), artifact );\n             }\n-            \n-            mapArtifactFiles(listener.getRootNode(), projectMap);\n-            \n+\n+            mapArtifactFiles( listener.getRootNode(), projectMap );\n+\n             this.projectDependencies = listener.getRootNode().getChildren();\n             this.resolvedDependencies = listener;\n         }\n \n         private void mapArtifactFiles( Node node, Map projectMap )\n         {\n             List childs = node.getChildren();\n-            if( (childs == null) || childs.isEmpty() ) {\n+            if ( ( childs == null ) || childs.isEmpty() )\n+            {\n                 return;\n             }\n-            \n+\n             Iterator it = childs.iterator();\n-            while(it.hasNext())\n+            while ( it.hasNext() )\n             {\n                 Node anode = (ReportResolutionListener.Node) it.next();\n                 String key = ArtifactUtils.versionlessKey( anode.getArtifact() );\n                 Artifact projartifact = (Artifact) projectMap.get( key );\n-                if( projartifact != null ) {\n-                    anode.getArtifact().setFile(  projartifact.getFile() );\n+                if ( projartifact != null )\n+                {\n+                    anode.getArtifact().setFile( projartifact.getFile() );\n                 }\n-                \n-                mapArtifactFiles(anode, projectMap);\n+\n+                mapArtifactFiles( anode, projectMap );\n             }\n         }\n \n@@ -422,12 +436,12 @@ private void renderDependenciesForAllScopes( String[] tableHeader, Map dependenc\n                                         (List) dependenciesByScope.get( Artifact.SCOPE_COMPILE ), tableHeader );\n             renderDependenciesForScope( Artifact.SCOPE_RUNTIME,\n                                         (List) dependenciesByScope.get( Artifact.SCOPE_RUNTIME ), tableHeader );\n-            renderDependenciesForScope( Artifact.SCOPE_TEST, \n-                                        (List) dependenciesByScope.get( Artifact.SCOPE_TEST ), tableHeader );\n-            renderDependenciesForScope( Artifact.SCOPE_PROVIDED, \n-                                        (List) dependenciesByScope.get( Artifact.SCOPE_PROVIDED ), tableHeader );\n-            renderDependenciesForScope( Artifact.SCOPE_SYSTEM, \n-                                        (List) dependenciesByScope.get( Artifact.SCOPE_SYSTEM ), tableHeader );\n+            renderDependenciesForScope( Artifact.SCOPE_TEST, (List) dependenciesByScope.get( Artifact.SCOPE_TEST ),\n+                                        tableHeader );\n+            renderDependenciesForScope( Artifact.SCOPE_PROVIDED, (List) dependenciesByScope\n+                .get( Artifact.SCOPE_PROVIDED ), tableHeader );\n+            renderDependenciesForScope( Artifact.SCOPE_SYSTEM, (List) dependenciesByScope.get( Artifact.SCOPE_SYSTEM ),\n+                                        tableHeader );\n         }\n \n         private void renderSectionProjectTransitiveDependencies( Dependencies dependencies )\n@@ -459,7 +473,7 @@ private void renderSectionProjectDependencyGraph()\n \n             // === Section: Dependency Tree\n             renderSectionDependencyTree();\n-            \n+\n             // === Section: Dependency Listings\n             renderSectionDependencyListing();\n \n@@ -468,7 +482,7 @@ private void renderSectionProjectDependencyGraph()\n \n         private void renderSectionDependencyTree()\n         {\n-            //for Dependencies Graph Tree\n+            // for Dependencies Graph Tree\n             startSection( getReportString( \"report.dependencies.graph.tree.title\" ) );\n             sink.paragraph();\n             sink.list();\n@@ -497,7 +511,7 @@ private void renderSectionDependencyFileDetails( Dependencies dependencies )\n \n             String[] tableHeader = new String[] { filename, size, entries, classes, packages, jdkrev, debug, sealed };\n             tableHeader( tableHeader );\n-            \n+\n             int totaldeps = 0;\n             long totaldepsize = 0;\n             int totalentries = 0;\n@@ -506,15 +520,37 @@ private void renderSectionDependencyFileDetails( Dependencies dependencies )\n             double highestjdk = 0.0;\n             int totaldebug = 0;\n             int totalsealed = 0;\n-            \n-            DecimalFormat decFormat = new DecimalFormat(\"#,##0\");\n+\n+            DecimalFormat decFormat = new DecimalFormat( \"#,##0\" );\n \n             for ( Iterator it = alldeps.iterator(); it.hasNext(); )\n             {\n                 Artifact artifact = (Artifact) it.next();\n-                \n+\n                 if ( !Artifact.SCOPE_SYSTEM.equals( artifact.getScope() ) )\n                 {\n+                    // TODO site:run Why do we need to resolve this...\n+                    if ( artifact.getFile() == null )\n+                    {\n+                        try\n+                        {\n+                            List remoteRepositories = new ArrayList();\n+                            remoteRepositories.addAll( project.getPluginArtifactRepositories() );\n+                            remoteRepositories.addAll( project.getRemoteArtifactRepositories() );\n+                            resolver.resolve( artifact, remoteRepositories, localRepository );\n+                        }\n+                        catch ( ArtifactResolutionException e )\n+                        {\n+                            getLog().error( \"Artifact: \" + artifact.getId() + \" has no file.\", e );\n+                            continue;\n+                        }\n+                        catch ( ArtifactNotFoundException e )\n+                        {\n+                            getLog().error( \"Artifact: \" + artifact.getId() + \" has no file.\", e );\n+                            continue;\n+                        }\n+                    }\n+\n                     if ( artifact.getFile() == null )\n                     {\n                         getLog().error( \"Artifact: \" + artifact.getId() + \" has no file.\" );\n@@ -613,7 +649,7 @@ private void renderSectionDependencyFileDetails( Dependencies dependencies )\n                     }\n                 }\n             }\n-            \n+\n             tableRow( new String[] {\n                 \"\" + totaldeps + \" total dependencies\",\n                 decFormat.format( totaldepsize ),\n@@ -627,47 +663,47 @@ private void renderSectionDependencyFileDetails( Dependencies dependencies )\n             endTable();\n             endSection();\n         }\n-        \n+\n         private void populateRepositoryMap( Map repos, List rawRepos )\n         {\n             Iterator it = rawRepos.iterator();\n-            while(it.hasNext())\n+            while ( it.hasNext() )\n             {\n                 ArtifactRepository repo = (ArtifactRepository) it.next();\n                 repos.put( repo.getId(), repo );\n             }\n         }\n-        \n+\n         private void renderSectionDependencyRepositoryLocations( Dependencies dependencies )\n         {\n             startSection( getReportString( \"report.dependencies.repo.locations.title\" ) );\n-            \n+\n             // Collect Alphabetical Dependencies\n             List alldeps = dependencies.getAllDependencies();\n             Collections.sort( alldeps, getArtifactComparator() );\n-            \n+\n             // Collect Repositories\n             Map repoMap = new HashMap();\n-            \n+\n             populateRepositoryMap( repoMap, project.getRemoteArtifactRepositories() );\n-            \n+\n             for ( Iterator it = alldeps.iterator(); it.hasNext(); )\n             {\n                 Artifact artifact = (Artifact) it.next();\n                 try\n                 {\n                     MavenProject artifactProject = getMavenProjectFromRepository( artifact, localRepository );\n-                    \n+\n                     populateRepositoryMap( repoMap, artifactProject.getRemoteArtifactRepositories() );\n                 }\n                 catch ( ProjectBuildingException e )\n                 {\n                     getLog().warn( \"Unable to create maven project from repository.\", e );\n                 }\n             }\n-            \n+\n             // Render Repository List\n-            \n+\n             startTable();\n             String repoid = getReportString( \"report.dependencies.repo.locations.column.repoid\" );\n             String url = getReportString( \"report.dependencies.repo.locations.column.url\" );\n@@ -676,13 +712,13 @@ private void renderSectionDependencyRepositoryLocations( Dependencies dependenci\n \n             String[] tableHeader = new String[] { repoid, url, release, snapshot };\n             tableHeader( tableHeader );\n-            \n+\n             String releaseEnabled = getReportString( \"report.dependencies.repo.locations.cell.release.enabled\" );\n             String releaseDisabled = getReportString( \"report.dependencies.repo.locations.cell.release.disabled\" );\n-            \n+\n             String snapshotEnabled = getReportString( \"report.dependencies.repo.locations.cell.snapshot.enabled\" );\n             String snapshotDisabled = getReportString( \"report.dependencies.repo.locations.cell.snapshot.disabled\" );\n-            \n+\n             for ( Iterator it = repoMap.keySet().iterator(); it.hasNext(); )\n             {\n                 String key = (String) it.next();\n@@ -696,100 +732,102 @@ private void renderSectionDependencyRepositoryLocations( Dependencies dependenci\n                 sink.text( repo.getUrl() );\n                 sink.link_();\n                 sink.tableCell_();\n-                \n+\n                 ArtifactRepositoryPolicy releasePolicy = repo.getReleases();\n                 tableCell( releasePolicy.isEnabled() ? releaseEnabled : releaseDisabled );\n \n                 ArtifactRepositoryPolicy snapshotPolicy = repo.getSnapshots();\n                 tableCell( snapshotPolicy.isEnabled() ? snapshotEnabled : snapshotDisabled );\n                 sink.tableRow_();\n             }\n-            \n+\n             endTable();\n-            \n+\n             // Render Aritfact Breakdown.\n-            \n+\n             sink.paragraph();\n             sink.text( getReportString( \"report.dependencies.repo.locations.artifact.breakdown\" ) );\n             sink.paragraph_();\n-            \n+\n             List repoIdList = new ArrayList( repoMap.keySet() );\n \n             startTable();\n             String artifact = getReportString( \"report.dependencies.repo.locations.column.artifact\" );\n             tableHeader = new String[repoIdList.size() + 1];\n             tableHeader[0] = artifact;\n             int idnum = 1;\n-            \n-            for (Iterator it = repoIdList.iterator(); it.hasNext();)\n+\n+            for ( Iterator it = repoIdList.iterator(); it.hasNext(); )\n             {\n                 String id = (String) it.next();\n                 tableHeader[idnum++] = id;\n             }\n-            \n+\n             tableHeader( tableHeader );\n-            \n+\n             for ( Iterator it = alldeps.iterator(); it.hasNext(); )\n             {\n                 Artifact dependency = (Artifact) it.next();\n-                \n+\n                 if ( !Artifact.SCOPE_SYSTEM.equals( dependency.getScope() ) )\n                 {\n                     sink.tableRow();\n-                    \n+\n                     tableCell( dependency.getId() );\n-                    \n-                    for(Iterator itrepo = repoIdList.iterator(); itrepo.hasNext();)\n+\n+                    for ( Iterator itrepo = repoIdList.iterator(); itrepo.hasNext(); )\n                     {\n                         String repokey = (String) itrepo.next();\n                         ArtifactRepository repo = (ArtifactRepository) repoMap.get( repokey );\n-                        \n+\n                         String depUrl = repo.getUrl() + \"/\" + repo.pathOf( dependency );\n-                        \n-                        if(dependencyExistsInRepo(repo, dependency))\n+\n+                        if ( dependencyExistsInRepo( repo, dependency ) )\n                         {\n                             sink.tableCell();\n                             sink.link( depUrl );\n-                            \n+\n                             sink.figure();\n                             sink.figureCaption();\n                             sink.text( \"Found at \" + repo.getUrl() );\n                             sink.figureCaption_();\n                             sink.figureGraphics( \"images/icon_success_sml.gif\" );\n                             sink.figure_();\n-                            \n+\n                             sink.link_();\n                             sink.tableCell_();\n-                        } else {\n+                        }\n+                        else\n+                        {\n                             sink.tableCell();\n-                            sink.text(\"-\");\n+                            sink.text( \"-\" );\n                             sink.tableCell_();\n                         }\n                     }\n-                    \n+\n                     sink.tableRow_();\n                 }\n             }\n-            \n+\n             endTable();\n-            \n+\n             endSection();\n         }\n-        \n+\n         private boolean dependencyExistsInRepo( ArtifactRepository repo, Artifact artifact )\n         {\n             Wagon wagon;\n-            \n+\n             try\n             {\n-                wagon = wagonManager.getWagon(repo.getProtocol());\n+                wagon = wagonManager.getWagon( repo.getProtocol() );\n             }\n             catch ( UnsupportedProtocolException e )\n             {\n                 getLog().error( \"Unsupported protocol: '\" + repo.getProtocol() + \"'\", e );\n                 return false;\n             }\n-            \n+\n             try\n             {\n                 Debug debug = new Debug();\n@@ -845,7 +883,7 @@ private boolean dependencyExistsInRepo( ArtifactRepository repo, Artifact artifa\n                 }\n             }\n         }\n-        \n+\n         /**\n          * Convenience method to map a <code>Proxy</code> object from the user system settings to a\n          * <code>ProxyInfo</code> object.\n@@ -869,15 +907,15 @@ public ProxyInfo getProxyInfo( Settings settings )\n             }\n \n             return proxyInfo;\n-        }        \n+        }\n \n         private void renderSectionDependencyListing()\n         {\n             startSection( getReportString( \"report.dependencies.graph.tables.title\" ) );\n             printDescriptionsAndURLs( listener.getRootNode() );\n             endSection();\n         }\n-        \n+\n         private void renderSectionDependencyLicenseListing()\n         {\n             startSection( getReportString( \"report.dependencies.graph.tables.licenses\" ) );\n@@ -937,8 +975,13 @@ else if ( !a1.isOptional() && a2.isOptional() )\n \n         private String[] getArtifactRow( Artifact artifact )\n         {\n-            return new String[]{artifact.getGroupId(), artifact.getArtifactId(), artifact.getVersion(),\n-                artifact.getClassifier(), artifact.getType(), artifact.isOptional() ? \"(optional)\" : \" \"};\n+            return new String[] {\n+                artifact.getGroupId(),\n+                artifact.getArtifactId(),\n+                artifact.getVersion(),\n+                artifact.getClassifier(),\n+                artifact.getType(),\n+                artifact.isOptional() ? \"(optional)\" : \" \" };\n         }\n \n         private void printDependencyListing( ReportResolutionListener.Node node )\n@@ -972,7 +1015,7 @@ private void printDescriptionsAndURLs( ReportResolutionListener.Node node )\n         {\n             Artifact artifact = node.getArtifact();\n             String id = artifact.getDependencyConflictId();\n-            \n+\n             String unknownLicenseMessage = getReportString( \"report.dependencies.graph.tables.unknown\" );\n \n             if ( !Artifact.SCOPE_SYSTEM.equals( artifact.getScope() ) )\n@@ -987,7 +1030,7 @@ private void printDescriptionsAndURLs( ReportResolutionListener.Node node )\n \n                     sink.paragraph();\n                     sink.anchor( id );\n-                    //                     startSection( artifactName );\n+                    // startSection( artifactName );\n                     sink.bold();\n                     sink.text( artifactName );\n                     sink.bold_();\n@@ -1036,8 +1079,12 @@ private void printDescriptionsAndURLs( ReportResolutionListener.Node node )\n                             {\n                                 projectsWithSameLicense = new ArrayList();\n                                 licenseMap.put( licenseName, projectsWithSameLicense );\n+\n+                            }\n+                            if ( !projectsWithSameLicense.contains( artifactName ) )\n+                            {\n+                                projectsWithSameLicense.add( artifactName );\n                             }\n-                            projectsWithSameLicense.add( artifactName );\n \n                         }\n                     }\n@@ -1051,11 +1098,14 @@ private void printDescriptionsAndURLs( ReportResolutionListener.Node node )\n                             projectsWithSameLicense = new ArrayList();\n                             licenseMap.put( unknownLicenseMessage, projectsWithSameLicense );\n                         }\n-                        projectsWithSameLicense.add( artifactName );\n+                        if ( !projectsWithSameLicense.contains( artifactName ) )\n+                        {\n+                            projectsWithSameLicense.add( artifactName );\n+                        }\n                     }\n                     sink.paragraph_();\n \n-                    //                    endSection();\n+                    // endSection();\n                     sink.horizontalRule();\n                 }\n                 catch ( ProjectBuildingException e )\n@@ -1084,15 +1134,22 @@ private void printDescriptionsAndURLs( ReportResolutionListener.Node node )\n                 sink.paragraph_();\n             }\n         }\n-        \n+\n         private void printGroupedLicenses()\n         {\n             for ( Iterator iter = licenseMap.keySet().iterator(); iter.hasNext(); )\n             {\n                 String licenseName = (String) iter.next();\n                 sink.paragraph();\n                 sink.bold();\n-                sink.text( licenseName );\n+                if ( StringUtils.isEmpty( licenseName ) )\n+                {\n+                    sink.text( i18n.getString( \"project-info-report\", locale, \"report.dependencies.unamed\" ) );\n+                }\n+                else\n+                {\n+                    sink.text( licenseName );\n+                }\n                 sink.text( \": \" );\n                 sink.bold_();\n \n@@ -1115,13 +1172,12 @@ private void printGroupedLicenses()\n         }\n \n         /**\n-         * Get the <code>Maven project</code> from the repository depending\n-         * the <code>Artifact</code> given.\n+         * Get the <code>Maven project</code> from the repository depending the <code>Artifact</code> given.\n          *\n          * @param artifact an artifact\n          * @return the Maven project for the given artifact\n          * @throws org.apache.maven.project.ProjectBuildingException\n-         *          if any\n+         *             if any\n          */\n         private MavenProject getMavenProjectFromRepository( Artifact artifact, ArtifactRepository localRepository )\n             throws ProjectBuildingException\n@@ -1145,7 +1201,5 @@ private String getReportString( String key )\n         {\n             return i18n.getString( \"project-info-report\", locale, key );\n         }\n-\n     }\n-\n }",
                "raw_url": "https://github.com/apache/maven-plugins/raw/787b2db1b0aed827cd28178e2f74e8a39bdc1e05/maven-project-info-reports-plugin/src/main/java/org/apache/maven/report/projectinfo/DependenciesReport.java",
                "sha": "c356c73b8184a891e3b1e45a16fa5db3414cee6e",
                "status": "modified"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/maven-plugins/blob/787b2db1b0aed827cd28178e2f74e8a39bdc1e05/maven-project-info-reports-plugin/src/main/resources/project-info-report.properties",
                "changes": 1,
                "contents_url": "https://api.github.com/repos/apache/maven-plugins/contents/maven-project-info-reports-plugin/src/main/resources/project-info-report.properties?ref=787b2db1b0aed827cd28178e2f74e8a39bdc1e05",
                "deletions": 0,
                "filename": "maven-project-info-reports-plugin/src/main/resources/project-info-report.properties",
                "patch": "@@ -81,6 +81,7 @@ report.dependencies.repo.locations.column.snapshot                 = Snapshot\n report.dependencies.repo.locations.column.url                      = URL\n report.dependencies.repo.locations.title                           = Dependency Repository Locations\n report.dependencies.title                                          = Project Dependencies\n+report.dependencies.unamed                                         = Unamed\n report.dependency-convergence.convergence.caption                  = Dependencies used in sub-projects\n report.dependency-convergence.description                          = This document presents the convergence of dependency versions across the entire project, and its sub modules.\n report.dependency-convergence.legend                               = Legend",
                "raw_url": "https://github.com/apache/maven-plugins/raw/787b2db1b0aed827cd28178e2f74e8a39bdc1e05/maven-project-info-reports-plugin/src/main/resources/project-info-report.properties",
                "sha": "104d9e501a17ecfa7dbad3b8a031d49224c3d887",
                "status": "modified"
            },
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/maven-plugins/blob/787b2db1b0aed827cd28178e2f74e8a39bdc1e05/maven-project-info-reports-plugin/src/main/resources/project-info-report_fr.properties",
                "changes": 3,
                "contents_url": "https://api.github.com/repos/apache/maven-plugins/contents/maven-project-info-reports-plugin/src/main/resources/project-info-report_fr.properties?ref=787b2db1b0aed827cd28178e2f74e8a39bdc1e05",
                "deletions": 1,
                "filename": "maven-project-info-reports-plugin/src/main/resources/project-info-report_fr.properties",
                "patch": "@@ -47,7 +47,7 @@ report.dependencies.graph.tables.column.version                    = Version\n report.dependencies.graph.tables.licenses                          = License\n report.dependencies.graph.tables.notAttached                       = Non attach\\u00E9e\n report.dependencies.graph.tables.title                             = Liste des d\\u00E9pendances\n-report.dependencies.graph.tables.unknown                           = \n+report.dependencies.graph.tables.unknown                           = Inconnu\n report.dependencies.graph.title                                    = Graphe des d\\u00E9pendances du projet\n report.dependencies.graph.tree.title                               = Arbre des d\\u00E9pendances\n report.dependencies.graph.url.default                              = Aucun URL d\\u00E9fini\n@@ -60,6 +60,7 @@ report.dependencies.intro.test                                     = Ce qui suit\n report.dependencies.name                                           = D\\u00E9pendances\n report.dependencies.nolist                                         = Il n'y a aucune d\\u00E9pendance pour ce projet. C'est une application autonome qui ne d\\u00E9pend d'aucun autre projet.\n report.dependencies.title                                          = D\\u00E9pendances du projet\n+report.dependencies.unamed                                         = Non-sp\\u00E9cifi\\u00E9\n report.dependency-convergence.convergence.caption                  = D\\u00E9pendances utilis\\u00E9es dans les sous projets\n report.dependency-convergence.description                          = Ce document pr\\u00E9sente la convergence des versions des d\\u00E9pendances \\u00E0 travers le projet entier, et de ses sous modules.\n report.dependency-convergence.legend                               = L\\u00E9gende",
                "raw_url": "https://github.com/apache/maven-plugins/raw/787b2db1b0aed827cd28178e2f74e8a39bdc1e05/maven-project-info-reports-plugin/src/main/resources/project-info-report_fr.properties",
                "sha": "9e8bab35996824d529a3f225f25bb3b12dab1007",
                "status": "modified"
            },
            {
                "additions": 12,
                "blob_url": "https://github.com/apache/maven-plugins/blob/787b2db1b0aed827cd28178e2f74e8a39bdc1e05/maven-site-plugin/src/main/java/org/apache/maven/plugins/site/ReportDocumentRenderer.java",
                "changes": 17,
                "contents_url": "https://api.github.com/repos/apache/maven-plugins/contents/maven-site-plugin/src/main/java/org/apache/maven/plugins/site/ReportDocumentRenderer.java?ref=787b2db1b0aed827cd28178e2f74e8a39bdc1e05",
                "deletions": 5,
                "filename": "maven-site-plugin/src/main/java/org/apache/maven/plugins/site/ReportDocumentRenderer.java",
                "patch": "@@ -28,7 +28,6 @@\n import org.apache.maven.reporting.MavenReport;\n import org.apache.maven.reporting.MavenMultiPageReport;\n import org.apache.maven.reporting.MavenReportException;\n-import org.apache.maven.reporting.MavenReport;\n \n import java.io.FileNotFoundException;\n import java.io.IOException;\n@@ -68,14 +67,14 @@ public ReportDocumentRenderer( MavenReport report, RenderingContext renderingCon\n         private File outputDir;\n \n         private String outputName;\n-            \n+\n         public MySink( File outputDir, String outputName, RenderingContext ctx )\n         {\n             super( ctx );\n             this.outputName = outputName;\n-        this.outputDir = outputDir;\n+            this.outputDir = outputDir;\n         }\n-        \n+\n         public String getOutputName()\n         {\n             return outputName;\n@@ -93,7 +92,7 @@ public File getOutputDir()\n         private RenderingContext context;\n \n         private List sinks = new ArrayList();\n-            \n+\n         public MySinkFactory( RenderingContext ctx )\n         {\n             this.context = ctx;\n@@ -190,4 +189,12 @@ public boolean isOverwrite()\n         // TODO: would be nice to query the report to see if it is modified\n         return true;\n     }\n+\n+    /**\n+     * @return true if the current report is external, false otherwise\n+     */\n+    public boolean isExternalReport()\n+    {\n+        return report.isExternalReport();\n+    }\n }",
                "raw_url": "https://github.com/apache/maven-plugins/raw/787b2db1b0aed827cd28178e2f74e8a39bdc1e05/maven-site-plugin/src/main/java/org/apache/maven/plugins/site/ReportDocumentRenderer.java",
                "sha": "7f16981bbe466b4398988e4822ebaf134e87f31f",
                "status": "modified"
            },
            {
                "additions": 10,
                "blob_url": "https://github.com/apache/maven-plugins/blob/787b2db1b0aed827cd28178e2f74e8a39bdc1e05/maven-site-plugin/src/main/java/org/apache/maven/plugins/site/SiteRunMojo.java",
                "changes": 10,
                "contents_url": "https://api.github.com/repos/apache/maven-plugins/contents/maven-site-plugin/src/main/java/org/apache/maven/plugins/site/SiteRunMojo.java?ref=787b2db1b0aed827cd28178e2f74e8a39bdc1e05",
                "deletions": 0,
                "filename": "maven-site-plugin/src/main/java/org/apache/maven/plugins/site/SiteRunMojo.java",
                "patch": "@@ -19,6 +19,7 @@\n import org.apache.maven.doxia.siterenderer.SiteRenderingContext;\n import org.apache.maven.plugin.MojoExecutionException;\n import org.apache.maven.plugin.MojoFailureException;\n+import org.apache.maven.reporting.MavenReport;\n import org.codehaus.plexus.util.IOUtil;\n import org.mortbay.jetty.Connector;\n import org.mortbay.jetty.Handler;\n@@ -32,6 +33,7 @@\n import java.io.FileOutputStream;\n import java.io.IOException;\n import java.io.InputStream;\n+import java.util.Iterator;\n import java.util.List;\n import java.util.Locale;\n import java.util.Map;\n@@ -137,6 +139,14 @@ private WebAppContext createWebApplication()\n         webapp.setResourceBase( tempWebappDirectory.getAbsolutePath() );\n         webapp.setAttribute( \"siteRenderer\", siteRenderer );\n \n+        // For external reports\n+        project.getReporting().setOutputDirectory( tempWebappDirectory.getAbsolutePath() );\n+        for ( Iterator i = reports.iterator(); i.hasNext(); )\n+        {\n+            MavenReport report = ( MavenReport ) i.next();\n+            report.setReportOutputDirectory( tempWebappDirectory );\n+        }\n+\n         List filteredReports = filterReports( reports );\n \n         List localesList = getAvailableLocales();",
                "raw_url": "https://github.com/apache/maven-plugins/raw/787b2db1b0aed827cd28178e2f74e8a39bdc1e05/maven-site-plugin/src/main/java/org/apache/maven/plugins/site/SiteRunMojo.java",
                "sha": "6397078e131821577eda1b542af27a6cb0fcbaad",
                "status": "modified"
            },
            {
                "additions": 29,
                "blob_url": "https://github.com/apache/maven-plugins/blob/787b2db1b0aed827cd28178e2f74e8a39bdc1e05/maven-site-plugin/src/main/java/org/apache/maven/plugins/site/webapp/DoxiaFilter.java",
                "changes": 32,
                "contents_url": "https://api.github.com/repos/apache/maven-plugins/contents/maven-site-plugin/src/main/java/org/apache/maven/plugins/site/webapp/DoxiaFilter.java?ref=787b2db1b0aed827cd28178e2f74e8a39bdc1e05",
                "deletions": 3,
                "filename": "maven-site-plugin/src/main/java/org/apache/maven/plugins/site/webapp/DoxiaFilter.java",
                "patch": "@@ -20,6 +20,7 @@\n import org.apache.maven.doxia.siterenderer.Renderer;\n import org.apache.maven.doxia.siterenderer.RendererException;\n import org.apache.maven.doxia.siterenderer.SiteRenderingContext;\n+import org.apache.maven.plugins.site.ReportDocumentRenderer;\n \n import javax.servlet.Filter;\n import javax.servlet.FilterChain;\n@@ -54,6 +55,9 @@\n \n     private List originalSiteDirectories;\n \n+    /**\n+     * @see javax.servlet.Filter#init(javax.servlet.FilterConfig)\n+     */\n     public void init( FilterConfig filterConfig )\n         throws ServletException\n     {\n@@ -65,6 +69,9 @@ public void init( FilterConfig filterConfig )\n         originalSiteDirectories = new ArrayList( context.getSiteDirectories() );\n     }\n \n+    /**\n+     * @see javax.servlet.Filter#doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse, javax.servlet.FilterChain)\n+     */\n     public void doFilter( ServletRequest servletRequest, ServletResponse servletResponse, FilterChain filterChain )\n         throws IOException, ServletException\n     {\n@@ -87,6 +94,22 @@ public void doFilter( ServletRequest servletRequest, ServletResponse servletResp\n             {\n                 DocumentRenderer renderer = (DocumentRenderer) documents.get( path );\n                 renderer.renderDocument( servletResponse.getWriter(), siteRenderer, context );\n+\n+                if (renderer instanceof ReportDocumentRenderer)\n+                {\n+                    ReportDocumentRenderer reportDocumentRenderer = (ReportDocumentRenderer) renderer;\n+                    if (reportDocumentRenderer.isExternalReport())\n+                    {\n+                        try\n+                        {\n+                            filterChain.doFilter( servletRequest, servletResponse );\n+                        }\n+                        catch ( Exception e )\n+                        {\n+                            throw new ServletException( e );\n+                        }\n+                    }\n+                }\n             }\n             catch ( RendererException e )\n             {\n@@ -99,14 +122,14 @@ else if ( generatedSiteDirectory != null && generatedSiteDirectory.exists() )\n             context.addSiteDirectory( generatedSiteDirectory );\n             try\n             {\n-                Map documents = siteRenderer.locateDocumentFiles( context );\n+                Map locateDocuments = siteRenderer.locateDocumentFiles( context );\n \n-                if ( documents.containsKey( path ) )\n+                if ( locateDocuments.containsKey( path ) )\n                 {\n                     // TODO: documents are not right for the locale\n                     context.setLocale( req.getLocale() );\n \n-                    DocumentRenderer renderer = (DocumentRenderer) documents.get( path );\n+                    DocumentRenderer renderer = (DocumentRenderer) locateDocuments.get( path );\n                     renderer.renderDocument( servletResponse.getWriter(), siteRenderer, context );\n                 }\n             }\n@@ -126,6 +149,9 @@ else if ( generatedSiteDirectory != null && generatedSiteDirectory.exists() )\n         }\n     }\n \n+    /**\n+     * @see javax.servlet.Filter#destroy()\n+     */\n     public void destroy()\n     {\n     }",
                "raw_url": "https://github.com/apache/maven-plugins/raw/787b2db1b0aed827cd28178e2f74e8a39bdc1e05/maven-site-plugin/src/main/java/org/apache/maven/plugins/site/webapp/DoxiaFilter.java",
                "sha": "d33072138a2d88935d2ef47095b86e11c1852b1e",
                "status": "modified"
            },
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/maven-plugins/blob/787b2db1b0aed827cd28178e2f74e8a39bdc1e05/maven-surefire-report-plugin/src/main/java/org/apache/maven/plugins/surefire/report/SurefireReportMojo.java",
                "changes": 4,
                "contents_url": "https://api.github.com/repos/apache/maven-plugins/contents/maven-surefire-report-plugin/src/main/java/org/apache/maven/plugins/surefire/report/SurefireReportMojo.java?ref=787b2db1b0aed827cd28178e2f74e8a39bdc1e05",
                "deletions": 2,
                "filename": "maven-surefire-report-plugin/src/main/java/org/apache/maven/plugins/surefire/report/SurefireReportMojo.java",
                "patch": "@@ -45,7 +45,7 @@\n     /**\n      * Location where generated html will be created.\n      *\n-     * @parameter expression=\"${project.build.directory}/site \"\n+     * @parameter expression=\"${project.reporting.outputDirectory}\"\n      */\n     private String outputDirectory;\n \n@@ -92,7 +92,7 @@\n     /**\n      * Location of the Xrefs to link.\n      *\n-     * @parameter default-value=\"${project.build.directory}/site/xref-test\"\n+     * @parameter default-value=\"${project.reporting.outputDirectory}/xref-test\"\n      */\n     private File xrefLocation;\n ",
                "raw_url": "https://github.com/apache/maven-plugins/raw/787b2db1b0aed827cd28178e2f74e8a39bdc1e05/maven-surefire-report-plugin/src/main/java/org/apache/maven/plugins/surefire/report/SurefireReportMojo.java",
                "sha": "917bf4c09818697be337601d0521abf8b3fb8fd0",
                "status": "modified"
            }
        ],
        "message": "MSITE-138: site:stage does not create xref\n\no replaced all annotations for outputdirectory in Mojo Reports: ${project.build.directory}/site =>  ${project.reporting.outputDirectory}\no setReportOutputDirectory() in all Mojo reports (if required).\no handle outputdirectory for external reports in SiteRunMojo and in DoxiaFilter\no handle NPE for dependencies when site:run is called (due to MPIR-55)\n\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/plugins/trunk@433277 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/maven-plugins/commit/a41e724a09de22336eb052e043db8b00e5b5f77f",
        "repo": "maven-plugins",
        "unit_tests": [
            "ChangeLogReportTest.java",
            "JiraMojoTest.java",
            "CheckstyleReportTest.java",
            "AbstractJavadocMojoTest.java",
            "JavadocReportTest.java",
            "TestJavadocReport.java",
            "AbstractPmdReportTest.java",
            "DependenciesReportTest.java"
        ]
    },
    "maven-plugins_8402648": {
        "bug_id": "maven-plugins_8402648",
        "commit": "https://github.com/apache/maven-plugins/commit/84026488e6cf68cc15a07d30348326cc88b0d610",
        "file": [
            {
                "additions": 32,
                "blob_url": "https://github.com/apache/maven-plugins/blob/84026488e6cf68cc15a07d30348326cc88b0d610/maven-project-info-reports-plugin/src/main/java/org/apache/maven/report/projectinfo/ScmReport.java",
                "changes": 35,
                "contents_url": "https://api.github.com/repos/apache/maven-plugins/contents/maven-project-info-reports-plugin/src/main/java/org/apache/maven/report/projectinfo/ScmReport.java?ref=84026488e6cf68cc15a07d30348326cc88b0d610",
                "deletions": 3,
                "filename": "maven-project-info-reports-plugin/src/main/java/org/apache/maven/report/projectinfo/ScmReport.java",
                "patch": "@@ -196,6 +196,19 @@ public void renderBody()\n             anonymousConnection = scm.getConnection();\n             devConnection = scm.getDeveloperConnection();\n \n+            if ( StringUtils.isEmpty( anonymousConnection ) &&\n+                StringUtils.isEmpty( devConnection ) &&\n+                StringUtils.isEmpty( scm.getUrl() ) )\n+            {\n+                startSection( getTitle() );\n+\n+                paragraph( getBundle( locale ).getString( \"report.scm.noscm\" ) );\n+\n+                endSection();\n+\n+                return;\n+            }\n+            \n             ScmRepository anonymousRepository = getScmRepository( anonymousConnection );\n             ScmRepository devRepository = getScmRepository( devConnection );\n \n@@ -264,7 +277,7 @@ private void renderWebAccesSection( String scmUrl )\n         {\n             startSection( getBundle( locale ).getString( \"report.scm.webaccess.title\" ) );\n \n-            if ( scmUrl == null )\n+            if ( StringUtils.isEmpty( scmUrl ) )\n             {\n                 paragraph( getBundle( locale ).getString( \"report.scm.webaccess.nourl\" ) );\n             }\n@@ -288,7 +301,8 @@ private void renderAnonymousAccessSection( ScmRepository anonymousRepository )\n         {\n             if ( ( isScmSystem( anonymousRepository, \"clearcase\" ) )\n                 || ( isScmSystem( anonymousRepository, \"perforce\" ) )\n-                || ( isScmSystem( anonymousRepository, \"starteam\" ) ) )\n+                || ( isScmSystem( anonymousRepository, \"starteam\" ) ) \n+                || ( StringUtils.isEmpty( anonymousConnection ) ) )\n             {\n                 return;\n             }\n@@ -313,6 +327,11 @@ else if ( ( anonymousRepository != null ) && ( isScmSystem( anonymousRepository,\n             {\n                 paragraph( getBundle( locale ).getString( \"report.scm.anonymousaccess.general.intro\" ) );\n \n+                if ( anonymousConnection.length() < 4 )\n+                {\n+                    throw new IllegalArgumentException( \"The source repository connection is too short.\" );\n+                }\n+\n                 verbatimText( anonymousConnection.substring( 4 ) );\n             }\n \n@@ -326,6 +345,11 @@ else if ( ( anonymousRepository != null ) && ( isScmSystem( anonymousRepository,\n          */\n         private void renderDeveloperAccessSection( ScmRepository devRepository )\n         {\n+            if ( StringUtils.isEmpty( devConnection ) )\n+            {\n+                return;\n+            }\n+            \n             startSection( getBundle( locale ).getString( \"report.scm.devaccess.title\" ) );\n \n             if ( ( devRepository != null ) && ( isScmSystem( devRepository, \"clearcase\" ) ) )\n@@ -365,6 +389,11 @@ else if ( ( devRepository != null ) && ( isScmSystem( devRepository, \"svn\" ) ) )\n             {\n                 paragraph( getBundle( locale ).getString( \"report.scm.devaccess.general.intro\" ) );\n \n+                if ( devConnection.length() < 4 )\n+                {\n+                    throw new IllegalArgumentException( \"The source repository connection is too short.\" );\n+                }\n+\n                 verbatimText( devConnection.substring( 4 ) );\n             }\n \n@@ -622,7 +651,7 @@ private void developerAccessSVN( SvnScmProviderRepository svnRepo )\n          */\n         public ScmRepository getScmRepository( String scmUrl )\n         {\n-            if ( scmUrl == null )\n+            if ( StringUtils.isEmpty( scmUrl ) )\n             {\n                 return null;\n             }",
                "raw_url": "https://github.com/apache/maven-plugins/raw/84026488e6cf68cc15a07d30348326cc88b0d610/maven-project-info-reports-plugin/src/main/java/org/apache/maven/report/projectinfo/ScmReport.java",
                "sha": "d94905136a33afcd2ccf984ed9e28590608493c2",
                "status": "modified"
            },
            {
                "additions": 56,
                "blob_url": "https://github.com/apache/maven-plugins/blob/84026488e6cf68cc15a07d30348326cc88b0d610/maven-project-info-reports-plugin/src/test/projects/project-info-reports-plugin-test11/pom.xml",
                "changes": 56,
                "contents_url": "https://api.github.com/repos/apache/maven-plugins/contents/maven-project-info-reports-plugin/src/test/projects/project-info-reports-plugin-test11/pom.xml?ref=84026488e6cf68cc15a07d30348326cc88b0d610",
                "deletions": 0,
                "filename": "maven-project-info-reports-plugin/src/test/projects/project-info-reports-plugin-test11/pom.xml",
                "patch": "@@ -0,0 +1,56 @@\n+<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n+\n+<!--\n+/*\n+ * Copyright 2001-2005 The Apache Software Foundation.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+ -->\n+\n+<project>\n+  <modelVersion>4.0.0</modelVersion>\n+  <groupId>org.apache.maven.report.projectinfo.test11</groupId>\n+  <artifactId>project-info-reports-plugin-test11</artifactId>\n+  <packaging>jar</packaging>\n+  <version>1.0-SNAPSHOT</version>\n+  <inceptionYear>2005</inceptionYear>\n+  <name>Maven ProjectInfo Report Test11</name>\n+  <description>MNG-695 developerConnection is empty</description>\n+  <url>http://maven.apache.org</url>\n+  <scm>\n+    <connection>scm:cvs:pserver:anoncvs@cvs.apache.org:/home/cvspublic:maven-plugins/dist</connection>\n+    <developerConnection/>\n+    <url>http://cvs.apache.org/</url>\n+  </scm>\n+  <developers>\n+    <developer>\n+      <id>vsiveton</id>\n+      <name>Vincent Siveton</name>\n+      <email>vsiveton@apache.org</email>\n+      <organization>Apache Software Foundation</organization>\n+      <roles>\n+        <role>Java Developer</role>\n+      </roles>\n+      <timezone>-5</timezone>\n+    </developer>\n+  </developers>\n+  <reporting>\n+    <plugins>\n+      <plugin>\n+        <groupId>org.apache.maven.plugins</groupId>\n+        <artifactId>maven-project-info-reports-plugin</artifactId>\n+      </plugin>\n+    </plugins>\n+  </reporting>\n+</project>",
                "raw_url": "https://github.com/apache/maven-plugins/raw/84026488e6cf68cc15a07d30348326cc88b0d610/maven-project-info-reports-plugin/src/test/projects/project-info-reports-plugin-test11/pom.xml",
                "sha": "facf24045c4ab06d58c15f407ef8a29ada47db94",
                "status": "added"
            }
        ],
        "message": "MNG-695: Added more tests on anonymousConnection, devConnection and scmUrl to prevent NPE. Added the test case num 11.\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk/maven-plugins@230612 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/maven-plugins/commit/1eeeb39b3505fe62c957d172d371e1e78f1b58d2",
        "repo": "maven-plugins",
        "unit_tests": [
            "ScmReportTest.java"
        ]
    },
    "maven-plugins_87f7d53": {
        "bug_id": "maven-plugins_87f7d53",
        "commit": "https://github.com/apache/maven-plugins/commit/87f7d53cbecc973340f3cc5c6b9ea11e9f3a576d",
        "file": [
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/maven-plugins/blob/87f7d53cbecc973340f3cc5c6b9ea11e9f3a576d/maven-javadoc-plugin/pom.xml",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/maven-plugins/contents/maven-javadoc-plugin/pom.xml?ref=87f7d53cbecc973340f3cc5c6b9ea11e9f3a576d",
                "deletions": 1,
                "filename": "maven-javadoc-plugin/pom.xml",
                "patch": "@@ -266,7 +266,7 @@ under the License.\n         <plugin>\n           <groupId>org.apache.maven.plugins</groupId>\n           <artifactId>maven-shade-plugin</artifactId>\n-          <version>1.2.1</version>\n+          <version>2.0</version>\n         </plugin>\n       </plugins>\n     </pluginManagement>",
                "raw_url": "https://github.com/apache/maven-plugins/raw/87f7d53cbecc973340f3cc5c6b9ea11e9f3a576d/maven-javadoc-plugin/pom.xml",
                "sha": "cbc53febb39922cb2a7eebad94cd9b23dd7d9964",
                "status": "modified"
            },
            {
                "additions": 17,
                "blob_url": "https://github.com/apache/maven-plugins/blob/87f7d53cbecc973340f3cc5c6b9ea11e9f3a576d/maven-javadoc-plugin/src/main/java/org/apache/maven/plugin/javadoc/AbstractJavadocMojo.java",
                "changes": 72,
                "contents_url": "https://api.github.com/repos/apache/maven-plugins/contents/maven-javadoc-plugin/src/main/java/org/apache/maven/plugin/javadoc/AbstractJavadocMojo.java?ref=87f7d53cbecc973340f3cc5c6b9ea11e9f3a576d",
                "deletions": 55,
                "filename": "maven-javadoc-plugin/src/main/java/org/apache/maven/plugin/javadoc/AbstractJavadocMojo.java",
                "patch": "@@ -26,11 +26,7 @@\n import org.apache.maven.artifact.handler.ArtifactHandler;\n import org.apache.maven.artifact.metadata.ArtifactMetadataSource;\n import org.apache.maven.artifact.repository.ArtifactRepository;\n-import org.apache.maven.artifact.resolver.ArtifactNotFoundException;\n-import org.apache.maven.artifact.resolver.ArtifactResolutionException;\n-import org.apache.maven.artifact.resolver.ArtifactResolutionResult;\n-import org.apache.maven.artifact.resolver.ArtifactResolver;\n-import org.apache.maven.artifact.resolver.MultipleArtifactsNotFoundException;\n+import org.apache.maven.artifact.resolver.*;\n import org.apache.maven.artifact.resolver.filter.AndArtifactFilter;\n import org.apache.maven.artifact.resolver.filter.ArtifactFilter;\n import org.apache.maven.artifact.resolver.filter.IncludesArtifactFilter;\n@@ -42,16 +38,7 @@\n import org.apache.maven.model.Resource;\n import org.apache.maven.plugin.AbstractMojo;\n import org.apache.maven.plugin.MojoExecutionException;\n-import org.apache.maven.plugin.javadoc.options.BootclasspathArtifact;\n-import org.apache.maven.plugin.javadoc.options.DocletArtifact;\n-import org.apache.maven.plugin.javadoc.options.Group;\n-import org.apache.maven.plugin.javadoc.options.JavadocOptions;\n-import org.apache.maven.plugin.javadoc.options.JavadocPathArtifact;\n-import org.apache.maven.plugin.javadoc.options.OfflineLink;\n-import org.apache.maven.plugin.javadoc.options.ResourcesArtifact;\n-import org.apache.maven.plugin.javadoc.options.Tag;\n-import org.apache.maven.plugin.javadoc.options.Taglet;\n-import org.apache.maven.plugin.javadoc.options.TagletArtifact;\n+import org.apache.maven.plugin.javadoc.options.*;\n import org.apache.maven.plugin.javadoc.options.io.xpp3.JavadocOptionsXpp3Writer;\n import org.apache.maven.plugin.javadoc.resolver.JavadocBundle;\n import org.apache.maven.plugin.javadoc.resolver.ResourceResolver;\n@@ -76,43 +63,15 @@\n import org.codehaus.plexus.archiver.manager.ArchiverManager;\n import org.codehaus.plexus.archiver.manager.NoSuchArchiverException;\n import org.codehaus.plexus.components.io.fileselectors.IncludeExcludeFileSelector;\n-import org.codehaus.plexus.util.FileUtils;\n-import org.codehaus.plexus.util.IOUtil;\n-import org.codehaus.plexus.util.ReaderFactory;\n-import org.codehaus.plexus.util.StringUtils;\n-import org.codehaus.plexus.util.WriterFactory;\n+import org.codehaus.plexus.util.*;\n import org.codehaus.plexus.util.cli.CommandLineException;\n import org.codehaus.plexus.util.cli.CommandLineUtils;\n import org.codehaus.plexus.util.cli.Commandline;\n import org.codehaus.plexus.util.xml.Xpp3Dom;\n \n-import java.io.File;\n-import java.io.FileOutputStream;\n-import java.io.FileWriter;\n-import java.io.IOException;\n-import java.io.InputStream;\n-import java.io.OutputStream;\n-import java.io.Writer;\n-import java.net.MalformedURLException;\n-import java.net.URI;\n-import java.net.URISyntaxException;\n-import java.net.URL;\n-import java.net.URLClassLoader;\n-import java.util.ArrayList;\n-import java.util.Arrays;\n-import java.util.Calendar;\n-import java.util.Collection;\n-import java.util.Collections;\n-import java.util.HashMap;\n-import java.util.HashSet;\n-import java.util.LinkedHashSet;\n-import java.util.LinkedList;\n-import java.util.List;\n-import java.util.Locale;\n-import java.util.Map;\n-import java.util.Properties;\n-import java.util.Set;\n-import java.util.StringTokenizer;\n+import java.io.*;\n+import java.net.*;\n+import java.util.*;\n \n import static org.apache.maven.plugin.javadoc.JavadocUtil.*;\n import static org.codehaus.plexus.util.IOUtil.close;\n@@ -2102,14 +2061,17 @@ protected void executeReport( Locale unusedLocale )\n                             sourcePaths.addAll( JavadocUtil.pruneDirs( subProject, sourceRoots ) );\n                         }\n \n-                        String javadocDirRelative =\n-                            PathUtils.toRelative( project.getBasedir(), getJavadocDirectory().getAbsolutePath() );\n-                        File javadocDir = new File( subProject.getBasedir(), javadocDirRelative );\n-                        if ( javadocDir.exists() && javadocDir.isDirectory() )\n+                        if ( getJavadocDirectory() != null )\n                         {\n-                            List<String> l = JavadocUtil.pruneDirs( subProject, Collections.singletonList(\n-                                javadocDir.getAbsolutePath() ) );\n-                            sourcePaths.addAll( l );\n+                            String javadocDirRelative =\n+                                    PathUtils.toRelative( project.getBasedir(), getJavadocDirectory().getAbsolutePath() );\n+                            File javadocDir = new File( subProject.getBasedir(), javadocDirRelative );\n+                            if ( javadocDir.exists() && javadocDir.isDirectory() )\n+                            {\n+                                List<String> l = JavadocUtil.pruneDirs( subProject, Collections.singletonList(\n+                                        javadocDir.getAbsolutePath() ) );\n+                                sourcePaths.addAll( l );\n+                            }\n                         }\n                     }\n                 }\n@@ -4026,7 +3988,7 @@ private void copyJavadocResources( File anOutputDirectory )\n         {\n             for ( MavenProject subProject : reactorProjects )\n             {\n-                if ( subProject != project )\n+                if ( subProject != project && getJavadocDirectory() != null )\n                 {\n                     String javadocDirRelative =\n                         PathUtils.toRelative( project.getBasedir(), getJavadocDirectory().getAbsolutePath() );",
                "raw_url": "https://github.com/apache/maven-plugins/raw/87f7d53cbecc973340f3cc5c6b9ea11e9f3a576d/maven-javadoc-plugin/src/main/java/org/apache/maven/plugin/javadoc/AbstractJavadocMojo.java",
                "sha": "b61be0e648339bcec02b2aa35fbd6058192cc407",
                "status": "modified"
            }
        ],
        "message": "MJAVADOC-342: An incomplete fix for the NPE bugs in AbstractJavadocMojo.java\no protect all the calls to getJavadocDirectory\no update to threadsafe version of maven-shade-plugin.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/plugins/trunk@1385200 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/maven-plugins/commit/02610b8c41c5d062d64dddaf11984c8fd5f89dd1",
        "repo": "maven-plugins",
        "unit_tests": [
            "AbstractJavadocMojoTest.java"
        ]
    },
    "maven-plugins_894ff1d": {
        "bug_id": "maven-plugins_894ff1d",
        "commit": "https://github.com/apache/maven-plugins/commit/894ff1d1512eb999ba8590655b97f3a695eae037",
        "file": [
            {
                "additions": 14,
                "blob_url": "https://github.com/apache/maven-plugins/blob/894ff1d1512eb999ba8590655b97f3a695eae037/maven-shade-plugin/src/main/java/org/apache/maven/plugins/shade/filter/MinijarFilter.java",
                "changes": 15,
                "contents_url": "https://api.github.com/repos/apache/maven-plugins/contents/maven-shade-plugin/src/main/java/org/apache/maven/plugins/shade/filter/MinijarFilter.java?ref=894ff1d1512eb999ba8590655b97f3a695eae037",
                "deletions": 1,
                "filename": "maven-shade-plugin/src/main/java/org/apache/maven/plugins/shade/filter/MinijarFilter.java",
                "patch": "@@ -31,6 +31,7 @@\n import java.io.FileInputStream;\n import java.io.IOException;\n import java.io.InputStream;\n+import java.util.Collections;\n import java.util.HashSet;\n import java.util.Iterator;\n import java.util.List;\n@@ -53,6 +54,16 @@\n \n     private int classesRemoved;\n \n+    public MinijarFilter( MavenProject project, Log log )\n+        throws IOException\n+    {\n+        this( project, log, Collections.<SimpleFilter>emptyList() );\n+    }\n+\n+    /**\n+     *\n+     * @since 1.6\n+     */\n     public MinijarFilter( MavenProject project, Log log, List<SimpleFilter> simpleFilters )\n         throws IOException\n     {\n@@ -84,7 +95,9 @@ public MinijarFilter( MavenProject project, Log log, List<SimpleFilter> simpleFi\n         removePackages( artifactUnit );\n         removable.removeAll( artifactUnit.getClazzes() );\n         removable.removeAll( artifactUnit.getTransitiveDependencies() );\n-        removeSpecificallyIncludedClasses( project, simpleFilters );\n+        removeSpecificallyIncludedClasses( project, simpleFilters == null\n+            ? Collections.<SimpleFilter>emptyList()\n+            : simpleFilters );\n     }\n \n     private void removePackages( ClazzpathUnit artifactUnit )",
                "raw_url": "https://github.com/apache/maven-plugins/raw/894ff1d1512eb999ba8590655b97f3a695eae037/maven-shade-plugin/src/main/java/org/apache/maven/plugins/shade/filter/MinijarFilter.java",
                "sha": "3042ccf155557c4a714117f9e1b03e2dcc95dfe2",
                "status": "modified"
            }
        ],
        "message": "backward comp and take care of NPE\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/plugins/trunk@1300049 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/maven-plugins/commit/589d0047a5c79681ffb2761e2eca2e475cc481da",
        "repo": "maven-plugins",
        "unit_tests": [
            "MinijarFilterTest.java"
        ]
    },
    "maven-plugins_9c88186": {
        "bug_id": "maven-plugins_9c88186",
        "commit": "https://github.com/apache/maven-plugins/commit/9c881867c8e6b3dade149b47e1fb7913f8fec9d2",
        "file": [
            {
                "additions": 5,
                "blob_url": "https://github.com/apache/maven-plugins/blob/9c881867c8e6b3dade149b47e1fb7913f8fec9d2/maven-project-info-reports-plugin/src/main/java/org/apache/maven/report/projectinfo/ProjectInfoReportUtils.java",
                "changes": 7,
                "contents_url": "https://api.github.com/repos/apache/maven-plugins/contents/maven-project-info-reports-plugin/src/main/java/org/apache/maven/report/projectinfo/ProjectInfoReportUtils.java?ref=9c881867c8e6b3dade149b47e1fb7913f8fec9d2",
                "deletions": 2,
                "filename": "maven-project-info-reports-plugin/src/main/java/org/apache/maven/report/projectinfo/ProjectInfoReportUtils.java",
                "patch": "@@ -24,6 +24,7 @@\n import java.net.Authenticator;\n import java.net.PasswordAuthentication;\n import java.net.URL;\n+import java.util.Collections;\n import java.util.List;\n import java.util.Properties;\n \n@@ -168,8 +169,10 @@ public static String getArtifactUrl( ArtifactFactory factory, Artifact artifact,\n         }\n         try\n         {\n-            MavenProject pluginProject = mavenProjectBuilder.buildFromRepository( copyArtifact, remoteRepositories,\n-                                                                                  localRepository );\n+            MavenProject pluginProject =\n+                mavenProjectBuilder.buildFromRepository( copyArtifact,\n+                                                         remoteRepositories == null ? Collections.EMPTY_LIST\n+                                                                         : remoteRepositories, localRepository );\n \n             if ( isArtifactUrlValid( pluginProject.getUrl() ) )\n             {",
                "raw_url": "https://github.com/apache/maven-plugins/raw/9c881867c8e6b3dade149b47e1fb7913f8fec9d2/maven-project-info-reports-plugin/src/main/java/org/apache/maven/report/projectinfo/ProjectInfoReportUtils.java",
                "sha": "a5f80fb609d62812a6bb14c21b7bfd2cb0b72da1",
                "status": "modified"
            }
        ],
        "message": "fix junit (prevent NPE in core)\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/plugins/trunk@817018 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/maven-plugins/commit/75cc072292eec7810fe07d3022a18c413ae43564",
        "repo": "maven-plugins",
        "unit_tests": [
            "ProjectInfoReportUtilsTest.java"
        ]
    },
    "maven-plugins_a3e0650": {
        "bug_id": "maven-plugins_a3e0650",
        "commit": "https://github.com/apache/maven-plugins/commit/a3e0650a4f9bda62489060c13ebd972ad43e5bd5",
        "file": [
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/maven-plugins/blob/a3e0650a4f9bda62489060c13ebd972ad43e5bd5/maven-dependency-plugin/src/main/java/org/apache/maven/plugin/dependency/fromDependencies/UnpackDependenciesMojo.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/maven-plugins/contents/maven-dependency-plugin/src/main/java/org/apache/maven/plugin/dependency/fromDependencies/UnpackDependenciesMojo.java?ref=a3e0650a4f9bda62489060c13ebd972ad43e5bd5",
                "deletions": 1,
                "filename": "maven-dependency-plugin/src/main/java/org/apache/maven/plugin/dependency/fromDependencies/UnpackDependenciesMojo.java",
                "patch": "@@ -95,7 +95,7 @@ protected void doExecute()\n \n         for ( Artifact artifact : dss.getSkippedDependencies() )\n         {\n-            getLog().info( artifact.getFile().getName() + \" already exists in destination.\" );\n+            getLog().info( artifact.getId() + \" already exists in destination.\" );\n         }\n     }\n ",
                "raw_url": "https://github.com/apache/maven-plugins/raw/a3e0650a4f9bda62489060c13ebd972ad43e5bd5/maven-dependency-plugin/src/main/java/org/apache/maven/plugin/dependency/fromDependencies/UnpackDependenciesMojo.java",
                "sha": "7d7b059f0048ef884707cc9abe2e2ef9a4be62f3",
                "status": "modified"
            }
        ],
        "message": "[MDEP-483] NullPointerException when using classifier and markers\n NPE prevented cause don't access the file attribute of the \n artifact which can be null under different circumstances.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/plugins/trunk@1677079 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/maven-plugins/commit/8e67b29f66f402f50a1c60699970985630d3b079",
        "repo": "maven-plugins",
        "unit_tests": [
            "TestUnpackDependenciesMojo.java"
        ]
    },
    "maven-plugins_ad12509": {
        "bug_id": "maven-plugins_ad12509",
        "commit": "https://github.com/apache/maven-plugins/commit/ad125098b203e5c340041718a203d11ac259c17e",
        "file": [
            {
                "additions": 13,
                "blob_url": "https://github.com/apache/maven-plugins/blob/ad125098b203e5c340041718a203d11ac259c17e/maven-shade-plugin/src/main/java/org/apache/maven/plugins/shade/mojo/ShadeMojo.java",
                "changes": 13,
                "contents_url": "https://api.github.com/repos/apache/maven-plugins/contents/maven-shade-plugin/src/main/java/org/apache/maven/plugins/shade/mojo/ShadeMojo.java?ref=ad125098b203e5c340041718a203d11ac259c17e",
                "deletions": 0,
                "filename": "maven-shade-plugin/src/main/java/org/apache/maven/plugins/shade/mojo/ShadeMojo.java",
                "patch": "@@ -239,6 +239,19 @@ public void execute()\n         Set artifactIds = new LinkedHashSet();\n         Set sourceArtifacts = new LinkedHashSet();\n \n+        if ( project.getArtifact().getFile() == null )\n+        {\n+            getLog().error( \"The project main artifact does not exist. This could have the following\" );\n+            getLog().error( \"reasons:\" );\n+            getLog().error( \"- You have invoked the goal directly from the command line. This is not\" );\n+            getLog().error( \"  supported. Please add the goal to the default lifecycle via an\" );\n+            getLog().error( \"  <execution> element in your POM and use \\\"mvn package\\\" to have it run.\" );\n+            getLog().error( \"- You have bound the goal to a lifecycle phase before \\\"package\\\". Please\" );\n+            getLog().error( \"  remove this binding from your POM such that the goal will be run in\" );\n+            getLog().error( \"  the proper phase.\" );\n+            throw new MojoExecutionException( \"Failed to create shaded artifact.\",\n+                                              new IllegalStateException( \"Project main artifact does not exist.\" ) );\n+        }\n         artifacts.add( project.getArtifact().getFile() );\n \n         if ( createSourcesJar )",
                "raw_url": "https://github.com/apache/maven-plugins/raw/ad125098b203e5c340041718a203d11ac259c17e/maven-shade-plugin/src/main/java/org/apache/maven/plugins/shade/mojo/ShadeMojo.java",
                "sha": "48f40286321e571bfbf399eb38bc1466b6f40b1c",
                "status": "modified"
            }
        ],
        "message": "[MSHADE-21] NPE when calling mvn shade:shade\n\no Made the goal fail gracefully with a user-friendly error message\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/plugins/trunk@644068 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/maven-plugins/commit/b611453fd913aed2c2d511a986c9f786fd1683b6",
        "repo": "maven-plugins",
        "unit_tests": [
            "ShadeMojoTest.java"
        ]
    },
    "maven-plugins_b6d3b9d": {
        "bug_id": "maven-plugins_b6d3b9d",
        "commit": "https://github.com/apache/maven-plugins/commit/b6d3b9d42b1e4f2ba7265d2870eb791c6209d25a",
        "file": [
            {
                "additions": 8,
                "blob_url": "https://github.com/apache/maven-plugins/blob/b6d3b9d42b1e4f2ba7265d2870eb791c6209d25a/maven-help-plugin/src/main/java/org/apache/maven/plugins/help/DescribeMojo.java",
                "changes": 10,
                "contents_url": "https://api.github.com/repos/apache/maven-plugins/contents/maven-help-plugin/src/main/java/org/apache/maven/plugins/help/DescribeMojo.java?ref=b6d3b9d42b1e4f2ba7265d2870eb791c6209d25a",
                "deletions": 2,
                "filename": "maven-help-plugin/src/main/java/org/apache/maven/plugins/help/DescribeMojo.java",
                "patch": "@@ -573,14 +573,20 @@ private void describePlugin( PluginDescriptor pd, StringBuffer buffer )\n         append( buffer, \"Goal Prefix\", pd.getGoalPrefix(), 0 );\n         buffer.append( \"\\n\" );\n \n+        List mojos = pd.getMojos();\n+\n+        if ( mojos == null )\n+        {\n+            append( buffer, \"This plugin has no goals.\", 0 );\n+            return;\n+        }\n+\n         if ( ( detail || medium ) && !minimal )\n         {\n             append( buffer, \"This plugin has \" + pd.getMojos().size() + \" goal\"\n                 + ( pd.getMojos().size() > 1 ? \"s\" : \"\" ) + \":\", 0 );\n             buffer.append( \"\\n\" );\n \n-            List mojos = pd.getMojos();\n-\n             PluginUtils.sortMojos( mojos );\n \n             for ( Iterator it = mojos.iterator(); it.hasNext(); )",
                "raw_url": "https://github.com/apache/maven-plugins/raw/b6d3b9d42b1e4f2ba7265d2870eb791c6209d25a/maven-help-plugin/src/main/java/org/apache/maven/plugins/help/DescribeMojo.java",
                "sha": "6c6aa2ae108e0ba038e4d403bf2f344c52188c5a",
                "status": "modified"
            }
        ],
        "message": "o fixed potential NPE if no goals\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/plugins/trunk@690677 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/maven-plugins/commit/444f4fccb75645ca02c14738129b667d0b29abde",
        "repo": "maven-plugins",
        "unit_tests": [
            "DescribeMojoTest.java"
        ]
    },
    "maven-plugins_bec7976": {
        "bug_id": "maven-plugins_bec7976",
        "commit": "https://github.com/apache/maven-plugins/commit/bec797636e724fea942bcf1ff53ef0907aed41b3",
        "file": [
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/maven-plugins/blob/bec797636e724fea942bcf1ff53ef0907aed41b3/maven-assembly-plugin/src/main/java/org/apache/maven/plugin/assembly/archive/task/AddFileSetsTask.java",
                "changes": 4,
                "contents_url": "https://api.github.com/repos/apache/maven-plugins/contents/maven-assembly-plugin/src/main/java/org/apache/maven/plugin/assembly/archive/task/AddFileSetsTask.java?ref=bec797636e724fea942bcf1ff53ef0907aed41b3",
                "deletions": 2,
                "filename": "maven-assembly-plugin/src/main/java/org/apache/maven/plugin/assembly/archive/task/AddFileSetsTask.java",
                "patch": "@@ -97,13 +97,13 @@ protected void addFileSet( FileSet fileSet, Archiver archiver, AssemblerConfigur\n \n         FileSetFormatter fileSetFormatter = new FileSetFormatter( configSource, logger );\n \n-        File basedir = project.getBasedir();\n-\n         if ( project == null )\n         {\n             project = configSource.getProject();\n         }\n \n+        File basedir = project.getBasedir();\n+\n         String destDirectory = fileSet.getOutputDirectory();\n \n         if ( destDirectory == null )",
                "raw_url": "https://github.com/apache/maven-plugins/raw/bec797636e724fea942bcf1ff53ef0907aed41b3/maven-assembly-plugin/src/main/java/org/apache/maven/plugin/assembly/archive/task/AddFileSetsTask.java",
                "sha": "518f4c85340bf7764715eed21557011ed12f16f0",
                "status": "modified"
            }
        ],
        "message": "[MASSEMBLY-277] Fixing potential NPE in AddFileSetsTask.\nSubmitted by: Sejal Patel\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/plugins/trunk@628942 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/maven-plugins/commit/5ddb9f686253a3f5f5794cc1c84a2071b1de6890",
        "repo": "maven-plugins",
        "unit_tests": [
            "AddFileSetsTaskTest.java"
        ]
    },
    "maven-plugins_c60e7c5": {
        "bug_id": "maven-plugins_c60e7c5",
        "commit": "https://github.com/apache/maven-plugins/commit/c60e7c5a714ea33d35aea935b9a75a0067fd493d",
        "file": [
            {
                "additions": 8,
                "blob_url": "https://github.com/apache/maven-plugins/blob/c60e7c5a714ea33d35aea935b9a75a0067fd493d/maven-war-plugin/src/main/java/org/apache/maven/plugin/war/util/WebappStructure.java",
                "changes": 13,
                "contents_url": "https://api.github.com/repos/apache/maven-plugins/contents/maven-war-plugin/src/main/java/org/apache/maven/plugin/war/util/WebappStructure.java?ref=c60e7c5a714ea33d35aea935b9a75a0067fd493d",
                "deletions": 5,
                "filename": "maven-war-plugin/src/main/java/org/apache/maven/plugin/war/util/WebappStructure.java",
                "patch": "@@ -386,13 +386,16 @@ else if ( dependency.isOptional() != previousDep.isOptional() )\n      */\n     public void registerTargetFileName( Artifact artifact, String targetFileName )\n     {\n-        final Iterator it = dependenciesInfo.iterator();\n-        while ( it.hasNext() )\n+        if ( dependenciesInfo != null )\n         {\n-            DependencyInfo dependencyInfo = (DependencyInfo) it.next();\n-            if ( WarUtils.isRelated( artifact, dependencyInfo.getDependency() ) )\n+            final Iterator it = dependenciesInfo.iterator();\n+            while ( it.hasNext() )\n             {\n-                dependencyInfo.setTargetFileName( targetFileName );\n+                DependencyInfo dependencyInfo = (DependencyInfo) it.next();\n+                if ( WarUtils.isRelated( artifact, dependencyInfo.getDependency() ) )\n+                {\n+                    dependencyInfo.setTargetFileName( targetFileName );\n+                }\n             }\n         }\n     }",
                "raw_url": "https://github.com/apache/maven-plugins/raw/c60e7c5a714ea33d35aea935b9a75a0067fd493d/maven-war-plugin/src/main/java/org/apache/maven/plugin/war/util/WebappStructure.java",
                "sha": "27a5e7f90e5304fce2af4b71afa8e5786f6274cd",
                "status": "modified"
            }
        ],
        "message": "[MWAR-275] An incomplete fix for the NPE bugs in WebappStructure.java\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/plugins/trunk@1390192 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/maven-plugins/commit/a91bc99a550bbe73de7638175fb03b6741d69409",
        "repo": "maven-plugins",
        "unit_tests": [
            "WebappStructureTest.java"
        ]
    },
    "maven-plugins_c695b18": {
        "bug_id": "maven-plugins_c695b18",
        "commit": "https://github.com/apache/maven-plugins/commit/c695b1831b8262406269088e1a5df37e6402e579",
        "file": [
            {
                "additions": 10,
                "blob_url": "https://github.com/apache/maven-plugins/blob/c695b1831b8262406269088e1a5df37e6402e579/maven-javadoc-plugin/src/main/java/org/apache/maven/plugin/javadoc/JavadocReport.java",
                "changes": 16,
                "contents_url": "https://api.github.com/repos/apache/maven-plugins/contents/maven-javadoc-plugin/src/main/java/org/apache/maven/plugin/javadoc/JavadocReport.java?ref=c695b1831b8262406269088e1a5df37e6402e579",
                "deletions": 6,
                "filename": "maven-javadoc-plugin/src/main/java/org/apache/maven/plugin/javadoc/JavadocReport.java",
                "patch": "@@ -816,13 +816,17 @@ else if ( \"private\".equalsIgnoreCase( show ) )\n             String year = String.valueOf( actualYear );\n \n             bottom = StringUtils.replace( bottom, \"{currentYear}\", year );\n-            if ( model.getInceptionYear().equals( year ) )\n-            {\n-                bottom = StringUtils.replace( bottom, \"{inceptionYear}-\", \"\" );                \n-            }\n-            else\n+\n+            if ( model != null  && model.getInceptionYear() != null )\n             {\n-                bottom = StringUtils.replace( bottom, \"{inceptionYear}\", model.getInceptionYear() );                \n+                if ( model.getInceptionYear().equals( year ) )\n+                {\n+                    bottom = StringUtils.replace( bottom, \"{inceptionYear}-\", \"\" );                \n+                }\n+                else\n+                {\n+                    bottom = StringUtils.replace( bottom, \"{inceptionYear}\", model.getInceptionYear() );                \n+                }\n             }\n \n             if ( StringUtils.isEmpty( stylesheetfile ) )",
                "raw_url": "https://github.com/apache/maven-plugins/raw/c695b1831b8262406269088e1a5df37e6402e579/maven-javadoc-plugin/src/main/java/org/apache/maven/plugin/javadoc/JavadocReport.java",
                "sha": "836bd75c0500a2b507f2d06343b4f42976f6ec5c",
                "status": "modified"
            }
        ],
        "message": "Fix NPE\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/plugins/trunk@367807 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/maven-plugins/commit/1443f689210918e8383453f9a6cbf94a1a1ab352",
        "repo": "maven-plugins",
        "unit_tests": [
            "JavadocReportTest.java",
            "TestJavadocReport.java"
        ]
    },
    "maven-plugins_c913d27": {
        "bug_id": "maven-plugins_c913d27",
        "commit": "https://github.com/apache/maven-plugins/commit/c913d27773db87dce415a9ec00b66d6913ed9a17",
        "file": [
            {
                "additions": 7,
                "blob_url": "https://github.com/apache/maven-plugins/blob/c913d27773db87dce415a9ec00b66d6913ed9a17/maven-javadoc-plugin/src/main/java/org/apache/maven/plugin/javadoc/AbstractJavadocMojo.java",
                "changes": 11,
                "contents_url": "https://api.github.com/repos/apache/maven-plugins/contents/maven-javadoc-plugin/src/main/java/org/apache/maven/plugin/javadoc/AbstractJavadocMojo.java?ref=c913d27773db87dce415a9ec00b66d6913ed9a17",
                "deletions": 4,
                "filename": "maven-javadoc-plugin/src/main/java/org/apache/maven/plugin/javadoc/AbstractJavadocMojo.java",
                "patch": "@@ -1502,11 +1502,14 @@ protected List getSourcePaths()\n                             sourcePaths.addAll( sourceRoots );\n                         }\n \n-                        String javadocDirRelative = PathUtils.toRelative( project.getBasedir(), getJavadocDirectory().getAbsolutePath() );\n-                        File javadocDir = new File( subProject.getExecutionProject().getBasedir(), javadocDirRelative );\n-                        if ( javadocDir.exists() && javadocDir.isDirectory() )\n+                        if ( subProject.getExecutionProject() != null )\n                         {\n-                            sourcePaths.add( javadocDir.getAbsolutePath() );\n+                            String javadocDirRelative = PathUtils.toRelative( project.getBasedir(), getJavadocDirectory().getAbsolutePath() );\n+                            File javadocDir = new File( subProject.getExecutionProject().getBasedir(), javadocDirRelative );\n+                            if ( javadocDir.exists() && javadocDir.isDirectory() )\n+                            {\n+                                sourcePaths.add( javadocDir.getAbsolutePath() );\n+                            }\n                         }\n                     }\n                 }",
                "raw_url": "https://github.com/apache/maven-plugins/raw/c913d27773db87dce415a9ec00b66d6913ed9a17/maven-javadoc-plugin/src/main/java/org/apache/maven/plugin/javadoc/AbstractJavadocMojo.java",
                "sha": "3cd10b01d600c0d3514c39fa017ac2374be16f01",
                "status": "modified"
            }
        ],
        "message": "MJAVADOC-139: NPE out of AbstractJavadocMojo::getSourcePaths() on multimodule project using aggregate\n\no as suggested, added subProject.getExecutionProject() != null condition\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/plugins/trunk@562710 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/maven-plugins/commit/814206b83314a626537bb3f1c19db716ceab8046",
        "repo": "maven-plugins",
        "unit_tests": [
            "AbstractJavadocMojoTest.java"
        ]
    },
    "maven-plugins_cc35973": {
        "bug_id": "maven-plugins_cc35973",
        "commit": "https://github.com/apache/maven-plugins/commit/cc35973255a45d71515349af36f58ea3a4cb35b9",
        "file": [
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/maven-plugins/blob/cc35973255a45d71515349af36f58ea3a4cb35b9/maven-pmd-plugin/src/main/java/org/apache/maven/plugin/pmd/PmdReport.java",
                "changes": 4,
                "contents_url": "https://api.github.com/repos/apache/maven-plugins/contents/maven-pmd-plugin/src/main/java/org/apache/maven/plugin/pmd/PmdReport.java?ref=cc35973255a45d71515349af36f58ea3a4cb35b9",
                "deletions": 2,
                "filename": "maven-pmd-plugin/src/main/java/org/apache/maven/plugin/pmd/PmdReport.java",
                "patch": "@@ -203,7 +203,7 @@ private Report generateReport( Locale locale )\n         Sink sink = getSink();\n \n         PMDConfiguration pmdConfiguration = getPMDConfiguration();\n-        final PmdReportListener reportSink = new PmdReportListener( sink, getBundle( locale ), aggregate );\n+        final PmdReportListener reportSink = new PmdReportListener( getLog(), sink, getBundle( locale ), aggregate );\n         RuleContext ruleContext = new RuleContext()\n         {\n             @Override\n@@ -272,7 +272,7 @@ public void setReport( Report report )\n         List<DataSource> dataSources = new ArrayList<DataSource>( files.size() );\n         for ( File f : files.keySet() )\n         {\n-            dataSources.add( new FileDataSource( f ) );\n+            dataSources.add( new FileDataSource( f.getAbsoluteFile() ) );\n         }\n \n         try",
                "raw_url": "https://github.com/apache/maven-plugins/raw/cc35973255a45d71515349af36f58ea3a4cb35b9/maven-pmd-plugin/src/main/java/org/apache/maven/plugin/pmd/PmdReport.java",
                "sha": "370b2d9e9603cf16aeeef9bbccb3f8d098a5b7a2",
                "status": "modified"
            },
            {
                "additions": 32,
                "blob_url": "https://github.com/apache/maven-plugins/blob/cc35973255a45d71515349af36f58ea3a4cb35b9/maven-pmd-plugin/src/main/java/org/apache/maven/plugin/pmd/PmdReportListener.java",
                "changes": 58,
                "contents_url": "https://api.github.com/repos/apache/maven-plugins/contents/maven-pmd-plugin/src/main/java/org/apache/maven/plugin/pmd/PmdReportListener.java?ref=cc35973255a45d71515349af36f58ea3a4cb35b9",
                "deletions": 26,
                "filename": "maven-pmd-plugin/src/main/java/org/apache/maven/plugin/pmd/PmdReportListener.java",
                "patch": "@@ -19,21 +19,22 @@\n  * under the License.\n  */\n \n-import net.sourceforge.pmd.ReportListener;\n-import net.sourceforge.pmd.RuleViolation;\n-import net.sourceforge.pmd.stat.Metric;\n-import org.apache.maven.doxia.sink.Sink;\n-import org.codehaus.plexus.util.StringUtils;\n-\n import java.io.File;\n import java.util.ArrayList;\n import java.util.Collections;\n import java.util.Comparator;\n-import java.util.HashMap;\n import java.util.List;\n import java.util.Map;\n import java.util.ResourceBundle;\n \n+import net.sourceforge.pmd.ReportListener;\n+import net.sourceforge.pmd.RuleViolation;\n+import net.sourceforge.pmd.stat.Metric;\n+\n+import org.apache.maven.doxia.sink.Sink;\n+import org.apache.maven.plugin.logging.Log;\n+import org.codehaus.plexus.util.StringUtils;\n+\n /**\n  * Handle events from PMD, converting them into Doxia events.\n  *\n@@ -43,14 +44,14 @@\n public class PmdReportListener\n     implements ReportListener\n {\n+    private Log log;\n+\n     private Sink sink;\n \n     private String currentFilename;\n \n     private ResourceBundle bundle;\n \n-    private PmdFileInfo fileInfo;\n-\n     private List<RuleViolation> violations = new ArrayList<RuleViolation>();\n \n     private boolean aggregate;\n@@ -62,8 +63,9 @@\n \n //    private List<Metric> metrics = new ArrayList<Metric>();\n \n-    public PmdReportListener( Sink sink, ResourceBundle bundle, boolean aggregate )\n+    public PmdReportListener(Log log, Sink sink, ResourceBundle bundle, boolean aggregate )\n     {\n+        this.log = log;\n         this.sink = sink;\n         this.bundle = bundle;\n         this.aggregate = aggregate;\n@@ -93,14 +95,20 @@ private void startFileSection( String currentFilename, PmdFileInfo fileInfo )\n         sink.sectionTitle2();\n \n         // prepare the filename\n-        this.currentFilename =\n-            StringUtils.substring( currentFilename, fileInfo.getSourceDirectory().getAbsolutePath().length() + 1 );\n+        this.currentFilename = currentFilename;\n+        if ( fileInfo != null && fileInfo.getSourceDirectory() != null ) {\n+            this.currentFilename =\n+                    StringUtils.substring( currentFilename, fileInfo.getSourceDirectory().getAbsolutePath().length() + 1 );\n+        } else {\n+            log.warn( \"Unfortunately there was no PmdFileInfo available or the SourceDirectory is not known for \"\n+                    + \" file \" + currentFilename );\n+        }\n         this.currentFilename = StringUtils.replace( this.currentFilename, \"\\\\\", \"/\" );\n \n         String title = this.currentFilename;\n         if ( aggregate )\n         {\n-            title = fileInfo.getProject().getName() + \" - \" + currentFilename;\n+            title = fileInfo.getProject().getName() + \" - \" + this.currentFilename;\n         }\n         sink.text( title );\n         sink.sectionTitle2_();\n@@ -122,7 +130,7 @@ private void endFileSection()\n         sink.section2_();\n     }\n \n-    private void processSingleRuleViolation( RuleViolation ruleViolation )\n+    private void processSingleRuleViolation( RuleViolation ruleViolation, PmdFileInfo fileInfo )\n     {\n         sink.tableRow();\n         sink.tableCell();\n@@ -131,12 +139,12 @@ private void processSingleRuleViolation( RuleViolation ruleViolation )\n         sink.tableCell();\n \n         int beginLine = ruleViolation.getBeginLine();\n-        outputLineLink( beginLine );\n+        outputLineLink( beginLine, fileInfo );\n         int endLine = ruleViolation.getEndLine();\n         if ( endLine != beginLine )\n         {\n             sink.text( \" - \" );\n-            outputLineLink( endLine );\n+            outputLineLink( endLine, fileInfo );\n         }\n \n         sink.tableCell_();\n@@ -166,30 +174,24 @@ public int compare( RuleViolation o1, RuleViolation o2 )\n             }\n         } );\n \n-        Map<String, PmdFileInfo> fileLookup = new HashMap<String, PmdFileInfo>( fileCount );\n-        for ( Map.Entry<File, PmdFileInfo> entry : files.entrySet() )\n-        {\n-            fileLookup.put( entry.getKey().getAbsolutePath(), entry.getValue() );\n-        }\n-\n         boolean fileSectionStarted = false;\n         String previousFilename = null;\n         for ( RuleViolation ruleViolation : violations )\n         {\n             String currentFn = ruleViolation.getFilename();\n+            PmdFileInfo fileInfo = files.get( new File ( currentFn ) );\n             if ( !currentFn.equalsIgnoreCase( previousFilename ) && fileSectionStarted )\n             {\n                 endFileSection();\n                 fileSectionStarted = false;\n             }\n             if ( !fileSectionStarted )\n             {\n-                fileInfo = fileLookup.get( currentFn );\n                 startFileSection( currentFn, fileInfo );\n                 fileSectionStarted = true;\n             }\n \n-            processSingleRuleViolation( ruleViolation );\n+            processSingleRuleViolation( ruleViolation, fileInfo );\n \n             previousFilename = currentFn;\n         }\n@@ -200,9 +202,13 @@ public int compare( RuleViolation o1, RuleViolation o2 )\n         }\n     }\n \n-    private void outputLineLink( int line )\n+    private void outputLineLink( int line, PmdFileInfo fileInfo )\n     {\n-        String xrefLocation = fileInfo.getXrefLocation();\n+        String xrefLocation = null;\n+        if ( fileInfo != null ) {\n+            xrefLocation = fileInfo.getXrefLocation();\n+        }\n+\n         if ( xrefLocation != null )\n         {\n             sink.link( xrefLocation + \"/\" + currentFilename.replaceAll( \"\\\\.java$\", \".html\" ) + \"#\" + line );",
                "raw_url": "https://github.com/apache/maven-plugins/raw/cc35973255a45d71515349af36f58ea3a4cb35b9/maven-pmd-plugin/src/main/java/org/apache/maven/plugin/pmd/PmdReportListener.java",
                "sha": "21ca69c98a7dab93e17aec16ed906dcfddfeac09",
                "status": "modified"
            }
        ],
        "message": "[MPMD-149] Fix Potential NPE in PmdReportListener\nSubmitted by Andreas Dangel.\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/plugins/trunk@1342953 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/maven-plugins/commit/9b69c9fe1927d8528f010b0f9bc753011387e981",
        "repo": "maven-plugins",
        "unit_tests": [
            "PmdReportTest.java"
        ]
    },
    "maven-plugins_dc8c79e": {
        "bug_id": "maven-plugins_dc8c79e",
        "commit": "https://github.com/apache/maven-plugins/commit/dc8c79eb3dc9deed81dd33b32d248b4bb60927cc",
        "file": [
            {
                "additions": 23,
                "blob_url": "https://github.com/apache/maven-plugins/blob/dc8c79eb3dc9deed81dd33b32d248b4bb60927cc/maven-project-info-reports-plugin/src/main/java/org/apache/maven/report/projectinfo/DependenciesReport.java",
                "changes": 36,
                "contents_url": "https://api.github.com/repos/apache/maven-plugins/contents/maven-project-info-reports-plugin/src/main/java/org/apache/maven/report/projectinfo/DependenciesReport.java?ref=dc8c79eb3dc9deed81dd33b32d248b4bb60927cc",
                "deletions": 13,
                "filename": "maven-project-info-reports-plugin/src/main/java/org/apache/maven/report/projectinfo/DependenciesReport.java",
                "patch": "@@ -17,6 +17,7 @@\n  */\n \n import org.apache.maven.artifact.Artifact;\n+import org.apache.maven.artifact.repository.ArtifactRepository;\n import org.apache.maven.artifact.factory.ArtifactFactory;\n import org.apache.maven.model.Dependency;\n import org.apache.maven.project.MavenProject;\n@@ -84,6 +85,13 @@\n      */\n     private MavenProjectBuilder mavenProjectBuilder;\n \n+    /**\n+     * @parameter expression=\"${localRepository}\"\n+     * @required\n+     * @readonly\n+     */\n+    private ArtifactRepository localRepository;\n+\n     /**\n      * @see org.apache.maven.reporting.MavenReport#getName(java.util.Locale)\n      */\n@@ -139,7 +147,7 @@ public void executeReport( Locale locale )\n         throws MavenReportException\n     {\n         DependenciesRenderer r = new DependenciesRenderer( getSink(), getProject(), locale, mavenProjectBuilder,\n-                                                           artifactFactory );\n+                                                           artifactFactory, localRepository );\n \n         r.render();\n     }\n@@ -163,8 +171,11 @@ public String getOutputName()\n \n         private MavenProjectBuilder mavenProjectBuilder;\n \n+        private ArtifactRepository localRepository;\n+\n         public DependenciesRenderer( Sink sink, MavenProject project, Locale locale,\n-                                    MavenProjectBuilder mavenProjectBuilder, ArtifactFactory artifactFactory )\n+                                    MavenProjectBuilder mavenProjectBuilder, ArtifactFactory artifactFactory,\n+                                    ArtifactRepository localRepository )\n         {\n             super( sink );\n \n@@ -175,6 +186,8 @@ public DependenciesRenderer( Sink sink, MavenProject project, Locale locale,\n             this.mavenProjectBuilder = mavenProjectBuilder;\n \n             this.artifactFactory = artifactFactory;\n+\n+            this.localRepository = localRepository;\n         }\n \n         public String getTitle()\n@@ -187,7 +200,7 @@ public void renderBody()\n             // Dependencies report\n             List dependencies = project.getDependencies();\n \n-            if ( ( dependencies == null ) || ( dependencies.isEmpty() ) )\n+            if ( dependencies == null || dependencies.isEmpty() )\n             {\n                 startSection( getTitle() );\n \n@@ -224,7 +237,7 @@ public void renderBody()\n                 MavenProject artifactProject = null;\n                 try\n                 {\n-                    artifactProject = getMavenProjectFromRepository( artifact );\n+                    artifactProject = getMavenProjectFromRepository( artifact, localRepository );\n                 }\n                 catch ( ProjectBuildingException e )\n                 {\n@@ -269,16 +282,14 @@ public void renderBody()\n                     MavenProject artifactProject = null;\n                     try\n                     {\n-                        artifactProject = getMavenProjectFromRepository( artifact );\n+                        artifactProject = getMavenProjectFromRepository( artifact, localRepository );\n                     }\n                     catch ( ProjectBuildingException e )\n                     {\n                         throw new IllegalArgumentException(\n                                                             \"Can't find a valid Maven project in the repository for the artifact [\"\n                                                                 + artifact + \"].\" );\n                     }\n-                    System.out.println( \"nklj-----------------------------\" );\n-                    System.out.println( artifactProject.getUrl() );\n                     tableRow( new String[] {\n                         artifact.getGroupId(),\n                         artifact.getArtifactId(),\n@@ -308,7 +319,7 @@ private Set getTransitiveDependencies( MavenProject project )\n             List dependencies = project.getDependencies();\n             Set artifacts = project.getArtifacts();\n \n-            if ( ( dependencies == null ) || ( artifacts == null ) )\n+            if ( dependencies == null || artifacts == null )\n             {\n                 return transitiveDependencies;\n             }\n@@ -341,18 +352,17 @@ private Set getTransitiveDependencies( MavenProject project )\n         /**\n          * Get the <code>Maven project</code> from the repository depending\n          * the <code>Artifact</code> given.\n-         * \n+         *\n          * @param artifact\n          *            an artifact\n          * @return the Maven project for the given artifact\n-         * @throws ProjectBuildingException\n+         * @throws org.apache.maven.project.ProjectBuildingException\n          *             if any\n          */\n-        private MavenProject getMavenProjectFromRepository( Artifact artifact )\n+        private MavenProject getMavenProjectFromRepository( Artifact artifact, ArtifactRepository localRepository )\n             throws ProjectBuildingException\n         {\n-            return mavenProjectBuilder.buildFromRepository( artifact, project.getRepositories(), artifact\n-                .getRepository() );\n+            return mavenProjectBuilder.buildFromRepository( artifact, project.getRepositories(), localRepository );\n         }\n     }\n ",
                "raw_url": "https://github.com/apache/maven-plugins/raw/dc8c79eb3dc9deed81dd33b32d248b4bb60927cc/maven-project-info-reports-plugin/src/main/java/org/apache/maven/report/projectinfo/DependenciesReport.java",
                "sha": "bbb8d7d317b790695e9e328d267589ff5efdcd49",
                "status": "modified"
            }
        ],
        "message": "fix NPE in dependencies report\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk/maven-plugins@220050 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/maven-plugins/commit/be57decf2f91ac92a8c3b845c8e2482fa7a1b891",
        "repo": "maven-plugins",
        "unit_tests": [
            "DependenciesReportTest.java"
        ]
    },
    "maven-plugins_eae2f25": {
        "bug_id": "maven-plugins_eae2f25",
        "commit": "https://github.com/apache/maven-plugins/commit/eae2f25f2ce0ce204754e97310193e6c49b4430e",
        "file": [
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/maven-plugins/blob/eae2f25f2ce0ce204754e97310193e6c49b4430e/maven-dependency-plugin/src/main/java/org/apache/maven/plugin/dependency/fromDependencies/CopyDependenciesMojo.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/maven-plugins/contents/maven-dependency-plugin/src/main/java/org/apache/maven/plugin/dependency/fromDependencies/CopyDependenciesMojo.java?ref=eae2f25f2ce0ce204754e97310193e6c49b4430e",
                "deletions": 1,
                "filename": "maven-dependency-plugin/src/main/java/org/apache/maven/plugin/dependency/fromDependencies/CopyDependenciesMojo.java",
                "patch": "@@ -153,7 +153,7 @@ protected void doExecute()\n         Set<Artifact> skippedArtifacts = dss.getSkippedDependencies();\n         for ( Artifact artifact : skippedArtifacts )\n         {\n-            getLog().info( artifact.getFile().getName() + \" already exists in destination.\" );\n+            getLog().info( artifact.getId() + \" already exists in destination.\" ) ;\n         }\n \n         if ( isCopyPom() && !useRepositoryLayout )",
                "raw_url": "https://github.com/apache/maven-plugins/raw/eae2f25f2ce0ce204754e97310193e6c49b4430e/maven-dependency-plugin/src/main/java/org/apache/maven/plugin/dependency/fromDependencies/CopyDependenciesMojo.java",
                "sha": "2e1dd7b51724192d9874a75161a0c6d836f5da5b",
                "status": "modified"
            }
        ],
        "message": "[MDEP-448]\n - NPE prevented cause don't access the file attribute of the \n   artifact which can be null under different circumstances.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/plugins/trunk@1622859 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/maven-plugins/commit/cacaaa6ec28cb82311d832ef964506dfb906fa80",
        "repo": "maven-plugins",
        "unit_tests": [
            "TestCopyDependenciesMojo.java"
        ]
    }
}