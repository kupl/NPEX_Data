{
    "maven-plugin-tools_805e0f8": {
        "bug_id": "maven-plugin-tools_805e0f8",
        "commit": "https://github.com/apache/maven-plugin-tools/commit/805e0f84a7700740458015444559496ad2304f65",
        "file": [
            {
                "additions": 3,
                "blob_url": "https://github.com/apache/maven-plugin-tools/blob/805e0f84a7700740458015444559496ad2304f65/maven-plugin-tools-generators/src/main/java/org/apache/maven/tools/plugin/generator/PluginDescriptorGenerator.java",
                "changes": 4,
                "contents_url": "https://api.github.com/repos/apache/maven-plugin-tools/contents/maven-plugin-tools-generators/src/main/java/org/apache/maven/tools/plugin/generator/PluginDescriptorGenerator.java?ref=805e0f84a7700740458015444559496ad2304f65",
                "deletions": 1,
                "filename": "maven-plugin-tools-generators/src/main/java/org/apache/maven/tools/plugin/generator/PluginDescriptorGenerator.java",
                "patch": "@@ -28,6 +28,7 @@\n import org.apache.maven.tools.plugin.ExtendedMojoDescriptor;\n import org.apache.maven.tools.plugin.PluginToolsRequest;\n import org.apache.maven.tools.plugin.util.PluginUtils;\n+import org.codehaus.plexus.logging.AbstractLogEnabled;\n import org.codehaus.plexus.util.IOUtil;\n import org.codehaus.plexus.util.StringUtils;\n import org.codehaus.plexus.util.xml.PrettyPrintXMLWriter;\n@@ -56,6 +57,7 @@\n  * get validation directives to help users in IDEs.\n  */\n public class PluginDescriptorGenerator\n+    extends AbstractLogEnabled\n     implements Generator\n {\n \n@@ -66,7 +68,7 @@ public void execute( File destinationDirectory, PluginToolsRequest request )\n         throws GeneratorException\n     {\n         // eventually rewrite help mojo class to match actual package name\n-        PluginHelpGenerator.rewriteHelpMojo( request );\n+        PluginHelpGenerator.rewriteHelpMojo( request, getLogger() );\n \n         try\n         {",
                "raw_url": "https://github.com/apache/maven-plugin-tools/raw/805e0f84a7700740458015444559496ad2304f65/maven-plugin-tools-generators/src/main/java/org/apache/maven/tools/plugin/generator/PluginDescriptorGenerator.java",
                "sha": "f49fa13d9d35e3c6d738dfed466e7eaa87fcc838",
                "status": "modified"
            },
            {
                "additions": 50,
                "blob_url": "https://github.com/apache/maven-plugin-tools/blob/805e0f84a7700740458015444559496ad2304f65/maven-plugin-tools-generators/src/main/java/org/apache/maven/tools/plugin/generator/PluginHelpGenerator.java",
                "changes": 78,
                "contents_url": "https://api.github.com/repos/apache/maven-plugin-tools/contents/maven-plugin-tools-generators/src/main/java/org/apache/maven/tools/plugin/generator/PluginHelpGenerator.java?ref=805e0f84a7700740458015444559496ad2304f65",
                "deletions": 28,
                "filename": "maven-plugin-tools-generators/src/main/java/org/apache/maven/tools/plugin/generator/PluginHelpGenerator.java",
                "patch": "@@ -285,7 +285,7 @@ static String getPluginHelpPath( MavenProject mavenProject )\n      * @param request\n      * @throws GeneratorException\n      */\n-    static void rewriteHelpMojo( PluginToolsRequest request )\n+    static void rewriteHelpMojo( PluginToolsRequest request, Logger log )\n         throws GeneratorException\n     {\n         File tmpPropertiesFile =\n@@ -303,8 +303,22 @@ static void rewriteHelpMojo( PluginToolsRequest request )\n         // if helpPackageName property is empty, we have to rewrite the class with a better package name than empty\n         if ( StringUtils.isEmpty( helpPackageName ) )\n         {\n-            File destinationDirectory = new File( properties.getProperty( \"destinationDirectory\" ) );\n-            String helpMojoImplementation = rewriteHelpClassToMojoPackage( request, destinationDirectory );\n+            String destDir = properties.getProperty( \"destinationDirectory\" );\n+            File destinationDirectory;\n+            if ( StringUtils.isEmpty( destDir ) )\n+            {\n+                // writeHelpPropertiesFile() creates 2 properties: find one without the other should not be possible\n+                log.warn( \"\\n\\nUnexpected situation: destinationDirectory not defined in \" + HELP_PROPERTIES_FILENAME\n+                    + \" during help mojo source generation but expected during XML descriptor generation.\" );\n+                log.warn( \"Please check helpmojo goal version used in previous build phase.\" );\n+                destinationDirectory = new File( \"target/generated-sources/plugin\" );\n+                log.warn( \"Trying default location: \" + destinationDirectory );\n+            }\n+            else\n+            {\n+                destinationDirectory = new File( destDir );\n+            }\n+            String helpMojoImplementation = rewriteHelpClassToMojoPackage( request, destinationDirectory, log );\n \n             if ( helpMojoImplementation != null )\n             {\n@@ -314,7 +328,7 @@ static void rewriteHelpMojo( PluginToolsRequest request )\n         }\n     }\n \n-    private static String rewriteHelpClassToMojoPackage( PluginToolsRequest request, File destinationDirectory )\n+    private static String rewriteHelpClassToMojoPackage( PluginToolsRequest request, File destinationDirectory, Logger log )\n         throws GeneratorException\n     {\n         String destinationPackage = GeneratorUtils.discoverPackageName( request.getPluginDescriptor() );\n@@ -333,34 +347,42 @@ private static String rewriteHelpClassToMojoPackage( PluginToolsRequest request,\n \n         // rewrite help mojo source\n         File helpSourceFile = new File( destinationDirectory, HELP_MOJO_CLASS_NAME + \".java\" );\n-        File helpSourceFileNew = new File( destinationDirectory, packageAsDirectory + '/' + HELP_MOJO_CLASS_NAME + \".java\" );\n-        if ( !helpSourceFileNew.getParentFile().exists() )\n-        {\n-            helpSourceFileNew.getParentFile().mkdirs();\n-        }\n-        Reader sourceReader = null;\n-        PrintWriter sourceWriter = null;\n-        try\n-        {\n-            sourceReader = new InputStreamReader( new FileInputStream( helpSourceFile ), request.getEncoding() );\n-            sourceWriter =\n-                new PrintWriter( new OutputStreamWriter( new FileOutputStream( helpSourceFileNew ),\n-                                                         request.getEncoding() ) );\n-\n-            sourceWriter.println( \"package \" + destinationPackage + \";\" );\n-            IOUtil.copy( sourceReader, sourceWriter );\n-        }\n-        catch ( IOException e )\n+        if ( !helpSourceFile.exists() )\n         {\n-            throw new GeneratorException( e.getMessage(), e );\n+            log.warn( \"HelpMojo.java not found in default location: \" + helpSourceFile.getAbsolutePath() );\n+            log.warn( \"Help goal source won't be moved to package: \" + destinationPackage );\n         }\n-        finally\n+        else\n         {\n-            IOUtil.close( sourceReader );\n-            IOUtil.close( sourceWriter );\n+            File helpSourceFileNew = new File( destinationDirectory, packageAsDirectory + '/' + HELP_MOJO_CLASS_NAME + \".java\" );\n+            if ( !helpSourceFileNew.getParentFile().exists() )\n+            {\n+                helpSourceFileNew.getParentFile().mkdirs();\n+            }\n+            Reader sourceReader = null;\n+            PrintWriter sourceWriter = null;\n+            try\n+            {\n+                sourceReader = new InputStreamReader( new FileInputStream( helpSourceFile ), request.getEncoding() );\n+                sourceWriter =\n+                    new PrintWriter( new OutputStreamWriter( new FileOutputStream( helpSourceFileNew ),\n+                                                             request.getEncoding() ) );\n+    \n+                sourceWriter.println( \"package \" + destinationPackage + \";\" );\n+                IOUtil.copy( sourceReader, sourceWriter );\n+            }\n+            catch ( IOException e )\n+            {\n+                throw new GeneratorException( e.getMessage(), e );\n+            }\n+            finally\n+            {\n+                IOUtil.close( sourceReader );\n+                IOUtil.close( sourceWriter );\n+            }\n+            helpSourceFileNew.setLastModified( helpSourceFile.lastModified() );\n+            helpSourceFile.delete();\n         }\n-        helpSourceFileNew.setLastModified( helpSourceFile.lastModified() );\n-        helpSourceFile.delete();\n \n         // rewrite help mojo .class\n         File rewriteHelpClassFile =",
                "raw_url": "https://github.com/apache/maven-plugin-tools/raw/805e0f84a7700740458015444559496ad2304f65/maven-plugin-tools-generators/src/main/java/org/apache/maven/tools/plugin/generator/PluginHelpGenerator.java",
                "sha": "6fc53b0cba279e030494e030c8d492d94557b28f",
                "status": "modified"
            }
        ],
        "message": "[MPLUGIN-227]\no avoid NPE but get (intended-)explicit warning when unexpected situation happens (probably caused by using different plugin version between source generation and XML descriptor generation phases)\no try guessing the directory in such situation, using default location\no but don't fail in any case: \n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/plugin-tools/trunk@1406480 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/maven-plugin-tools/commit/5d366fc36f7a2e59c0447c343e57c982d83063a3",
        "repo": "maven-plugin-tools",
        "unit_tests": [
            "PluginHelpGeneratorTest.java"
        ]
    }
}