{
    "maven-wagon_02a071d": {
        "bug_id": "maven-wagon_02a071d",
        "commit": "https://github.com/apache/maven-wagon/commit/02a071d6736d74d8cbf770ad678559cd7e19c73c",
        "file": [
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/maven-wagon/blob/02a071d6736d74d8cbf770ad678559cd7e19c73c/wagon-providers/wagon-ftp/pom.xml",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/maven-wagon/contents/wagon-providers/wagon-ftp/pom.xml?ref=02a071d6736d74d8cbf770ad678559cd7e19c73c",
                "deletions": 1,
                "filename": "wagon-providers/wagon-ftp/pom.xml",
                "patch": "@@ -8,7 +8,7 @@\n     <version>1.0-alpha-4</version>\n   </parent>\n   <artifactId>wagon-ftp</artifactId>\n-  <version>1.0-alpha-4</version>\n+  <version>1.0-alpha-5-SNAPSHOT</version>\n   <name>Maven Wagon FTP Provider</name>\n   <dependencies>\n     <dependency>",
                "raw_url": "https://github.com/apache/maven-wagon/raw/02a071d6736d74d8cbf770ad678559cd7e19c73c/wagon-providers/wagon-ftp/pom.xml",
                "sha": "777752bfed36ea9ca8efe769c266ef89e0b3bd8f",
                "status": "modified"
            },
            {
                "additions": 7,
                "blob_url": "https://github.com/apache/maven-wagon/blob/02a071d6736d74d8cbf770ad678559cd7e19c73c/wagon-providers/wagon-ftp/src/main/java/org/apache/maven/wagon/providers/ftp/FtpWagon.java",
                "changes": 12,
                "contents_url": "https://api.github.com/repos/apache/maven-wagon/contents/wagon-providers/wagon-ftp/src/main/java/org/apache/maven/wagon/providers/ftp/FtpWagon.java?ref=02a071d6736d74d8cbf770ad678559cd7e19c73c",
                "deletions": 5,
                "filename": "wagon-providers/wagon-ftp/src/main/java/org/apache/maven/wagon/providers/ftp/FtpWagon.java",
                "patch": "@@ -31,6 +31,7 @@\n import org.apache.maven.wagon.TransferFailedException;\n import org.apache.maven.wagon.WagonConstants;\n import org.apache.maven.wagon.authentication.AuthenticationException;\n+import org.apache.maven.wagon.authentication.AuthenticationInfo;\n import org.apache.maven.wagon.repository.RepositoryPermissions;\n import org.apache.maven.wagon.resource.Resource;\n \n@@ -47,14 +48,16 @@\n     public void openConnection()\n         throws ConnectionException, AuthenticationException\n     {\n-        if ( authenticationInfo == null )\n+        AuthenticationInfo authInfo = getRepository().getAuthenticationInfo();\n+\n+        if ( authInfo == null )\n         {\n             throw new IllegalArgumentException( \"Authentication Credentials cannot be null for FTP protocol\" );\n         }\n \n-        String username = authenticationInfo.getUserName();\n+        String username = authInfo.getUserName();\n \n-        String password = authenticationInfo.getPassword();\n+        String password = authInfo.getPassword();\n \n         String host = getRepository().getHost();\n \n@@ -128,7 +131,6 @@ public void openConnection()\n             // Set to binary mode.\n             ftp.setFileType( FTP.BINARY_FILE_TYPE );\n \n-\n             // Use passive mode as default because most of us are\n             // behind firewalls these days.\n             // TODO [BP]: make optional based on a flag\n@@ -199,7 +201,7 @@ protected void fireGetCompleted( Resource resource, File localFile )\n     public void closeConnection()\n         throws ConnectionException\n     {\n-        if ( ftp.isConnected() )\n+        if ( ftp != null && ftp.isConnected() )\n         {\n             try\n             {",
                "raw_url": "https://github.com/apache/maven-wagon/raw/02a071d6736d74d8cbf770ad678559cd7e19c73c/wagon-providers/wagon-ftp/src/main/java/org/apache/maven/wagon/providers/ftp/FtpWagon.java",
                "sha": "d7b706a0605db5454a0d99a07391bfaca345d634",
                "status": "modified"
            }
        ],
        "message": "PR: WAGONFTP-5\nftp may be null in closeConnection(), avoid NPE\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/wagon/trunk@220351 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/maven-wagon/commit/75e1613706c02173847a2eb5fb123a56a92292e0",
        "repo": "maven-wagon",
        "unit_tests": [
            "FtpWagonTest.java"
        ]
    },
    "maven-wagon_0eed00c": {
        "bug_id": "maven-wagon_0eed00c",
        "commit": "https://github.com/apache/maven-wagon/commit/0eed00cf95e2f42167b3680b59347e14d8a842b7",
        "file": [
            {
                "additions": 10,
                "blob_url": "https://github.com/apache/maven-wagon/blob/0eed00cf95e2f42167b3680b59347e14d8a842b7/wagon-providers/wagon-ssh-common/src/main/java/org/apache/maven/wagon/providers/ssh/knownhost/AbstractKnownHostsProvider.java",
                "changes": 15,
                "contents_url": "https://api.github.com/repos/apache/maven-wagon/contents/wagon-providers/wagon-ssh-common/src/main/java/org/apache/maven/wagon/providers/ssh/knownhost/AbstractKnownHostsProvider.java?ref=0eed00cf95e2f42167b3680b59347e14d8a842b7",
                "deletions": 5,
                "filename": "wagon-providers/wagon-ssh-common/src/main/java/org/apache/maven/wagon/providers/ssh/knownhost/AbstractKnownHostsProvider.java",
                "patch": "@@ -34,7 +34,7 @@\n {\n     /**\n      * Valid values are ask, yes, no.\n-     * \n+     *\n      * @plexus.configuration default-value=\"ask\"\n      */\n     private String hostKeyChecking = \"ask\";\n@@ -43,7 +43,7 @@\n      * the known hosts, in the openssh format\n      */\n     protected String contents;\n-    \n+\n     protected Set<KnownHostEntry> knownHosts = new HashSet<KnownHostEntry>();\n \n     public void setHostKeyChecking( String hostKeyChecking )\n@@ -60,11 +60,16 @@ public String getContents()\n     {\n         return contents;\n     }\n-    \n+\n     public void storeKnownHosts( String contents )\n         throws IOException\n     {\n     }\n-    \n-    \n+\n+    public void addKnownHost( KnownHostEntry knownHost )\n+        throws IOException\n+    {\n+    }\n+\n+\n }",
                "raw_url": "https://github.com/apache/maven-wagon/raw/0eed00cf95e2f42167b3680b59347e14d8a842b7/wagon-providers/wagon-ssh-common/src/main/java/org/apache/maven/wagon/providers/ssh/knownhost/AbstractKnownHostsProvider.java",
                "sha": "6b9117a598c5a23bb6c55859e945516ecd3abf48",
                "status": "modified"
            },
            {
                "additions": 14,
                "blob_url": "https://github.com/apache/maven-wagon/blob/0eed00cf95e2f42167b3680b59347e14d8a842b7/wagon-providers/wagon-ssh-common/src/main/java/org/apache/maven/wagon/providers/ssh/knownhost/FileKnownHostsProvider.java",
                "changes": 17,
                "contents_url": "https://api.github.com/repos/apache/maven-wagon/contents/wagon-providers/wagon-ssh-common/src/main/java/org/apache/maven/wagon/providers/ssh/knownhost/FileKnownHostsProvider.java?ref=0eed00cf95e2f42167b3680b59347e14d8a842b7",
                "deletions": 3,
                "filename": "wagon-providers/wagon-ssh-common/src/main/java/org/apache/maven/wagon/providers/ssh/knownhost/FileKnownHostsProvider.java",
                "patch": "@@ -33,7 +33,7 @@\n  *\n  * @author Juan F. Codagnone\n  * @since Sep 12, 2005\n- * \n+ *\n  * @plexus.component role=\"org.apache.maven.wagon.providers.ssh.knownhost.KnownHostsProvider\"\n  *    role-hint=\"file\"\n  *    instantiation-strategy=\"per-lookup\"\n@@ -72,15 +72,26 @@ public void storeKnownHosts( String contents )\n         throws IOException\n     {\n         Set<KnownHostEntry> hosts = this.loadKnownHosts( contents );\n-        \n+\n         if ( ! this.knownHosts.equals( hosts ) )\n         {\n             file.getParentFile().mkdirs();\n             FileUtils.fileWrite( file.getAbsolutePath(), contents );\n             this.knownHosts = hosts;\n         }\n     }\n-    \n+\n+    public void addKnownHost( KnownHostEntry knownHostEntry )\n+        throws IOException\n+    {\n+        if ( !this.knownHosts.contains( knownHostEntry ) )\n+        {\n+            String knownHost = knownHostEntry.getHostName() + \" \" + knownHostEntry.getKeyType() + \" \"\n+                + knownHostEntry.getKeyValue() + \"\\n\";\n+            FileUtils.fileAppend( file.getAbsolutePath(), knownHost );\n+        }\n+    }\n+\n     public File getFile()\n     {\n         return file;",
                "raw_url": "https://github.com/apache/maven-wagon/raw/0eed00cf95e2f42167b3680b59347e14d8a842b7/wagon-providers/wagon-ssh-common/src/main/java/org/apache/maven/wagon/providers/ssh/knownhost/FileKnownHostsProvider.java",
                "sha": "48ab250621f66108f70a6b8fffb06956bb68d999",
                "status": "modified"
            },
            {
                "additions": 3,
                "blob_url": "https://github.com/apache/maven-wagon/blob/0eed00cf95e2f42167b3680b59347e14d8a842b7/wagon-providers/wagon-ssh-common/src/main/java/org/apache/maven/wagon/providers/ssh/knownhost/KnownHostsProvider.java",
                "changes": 3,
                "contents_url": "https://api.github.com/repos/apache/maven-wagon/contents/wagon-providers/wagon-ssh-common/src/main/java/org/apache/maven/wagon/providers/ssh/knownhost/KnownHostsProvider.java?ref=0eed00cf95e2f42167b3680b59347e14d8a842b7",
                "deletions": 0,
                "filename": "wagon-providers/wagon-ssh-common/src/main/java/org/apache/maven/wagon/providers/ssh/knownhost/KnownHostsProvider.java",
                "patch": "@@ -34,6 +34,9 @@\n     void storeKnownHosts( String contents )\n         throws IOException;\n \n+    void addKnownHost( KnownHostEntry knownHost )\n+        throws IOException;\n+\n     void setHostKeyChecking( String hostKeyChecking );\n \n     String getHostKeyChecking();",
                "raw_url": "https://github.com/apache/maven-wagon/raw/0eed00cf95e2f42167b3680b59347e14d8a842b7/wagon-providers/wagon-ssh-common/src/main/java/org/apache/maven/wagon/providers/ssh/knownhost/KnownHostsProvider.java",
                "sha": "abaebefdb09c2457f3c6b26d16b9c1fc0507c4ce",
                "status": "modified"
            },
            {
                "additions": 27,
                "blob_url": "https://github.com/apache/maven-wagon/blob/0eed00cf95e2f42167b3680b59347e14d8a842b7/wagon-providers/wagon-ssh/src/main/java/org/apache/maven/wagon/providers/ssh/jsch/AbstractJschWagon.java",
                "changes": 56,
                "contents_url": "https://api.github.com/repos/apache/maven-wagon/contents/wagon-providers/wagon-ssh/src/main/java/org/apache/maven/wagon/providers/ssh/jsch/AbstractJschWagon.java?ref=0eed00cf95e2f42167b3680b59347e14d8a842b7",
                "deletions": 29,
                "filename": "wagon-providers/wagon-ssh/src/main/java/org/apache/maven/wagon/providers/ssh/jsch/AbstractJschWagon.java",
                "patch": "@@ -25,8 +25,6 @@\n import java.io.IOException;\n import java.io.InputStream;\n import java.io.InputStreamReader;\n-import java.io.PrintWriter;\n-import java.io.StringWriter;\n import java.util.List;\n import java.util.Properties;\n \n@@ -48,17 +46,14 @@\n import org.apache.maven.wagon.providers.ssh.interactive.NullInteractiveUserInfo;\n import org.apache.maven.wagon.providers.ssh.jsch.interactive.UserInfoUIKeyboardInteractiveProxy;\n import org.apache.maven.wagon.providers.ssh.knownhost.KnownHostChangedException;\n+import org.apache.maven.wagon.providers.ssh.knownhost.KnownHostEntry;\n import org.apache.maven.wagon.providers.ssh.knownhost.KnownHostsProvider;\n import org.apache.maven.wagon.providers.ssh.knownhost.UnknownHostException;\n import org.apache.maven.wagon.proxy.ProxyInfo;\n import org.apache.maven.wagon.resource.Resource;\n import org.codehaus.plexus.util.IOUtil;\n import org.codehaus.plexus.util.StringInputStream;\n \n-import com.jcraft.jsch.agentproxy.AgentProxyException;\n-import com.jcraft.jsch.agentproxy.Connector;\n-import com.jcraft.jsch.agentproxy.ConnectorFactory;\n-import com.jcraft.jsch.agentproxy.RemoteIdentityRepository;\n import com.jcraft.jsch.ChannelExec;\n import com.jcraft.jsch.HostKey;\n import com.jcraft.jsch.HostKeyRepository;\n@@ -71,6 +66,10 @@\n import com.jcraft.jsch.Session;\n import com.jcraft.jsch.UIKeyboardInteractive;\n import com.jcraft.jsch.UserInfo;\n+import com.jcraft.jsch.agentproxy.AgentProxyException;\n+import com.jcraft.jsch.agentproxy.Connector;\n+import com.jcraft.jsch.agentproxy.ConnectorFactory;\n+import com.jcraft.jsch.agentproxy.RemoteIdentityRepository;\n \n /**\n  * AbstractJschWagon\n@@ -251,24 +250,9 @@ public void openConnectionInternal()\n \n         session.setUserInfo( ui );\n \n-        StringWriter stringWriter = new StringWriter();\n         try\n         {\n             session.connect();\n-\n-            if ( getKnownHostsProvider() != null )\n-            {\n-                PrintWriter w = new PrintWriter( stringWriter );\n-\n-                HostKeyRepository hkr = sch.getHostKeyRepository();\n-                HostKey[] keys = hkr.getHostKey();\n-\n-                for ( int i = 0; keys != null && i < keys.length; i++ )\n-                {\n-                    HostKey key = keys[i];\n-                    w.println( key.getHost() + \" \" + key.getType() + \" \" + key.getKey() );\n-                }\n-            }\n         }\n         catch ( JSchException e )\n         {\n@@ -286,16 +270,30 @@ else if ( e.getMessage().contains( \"HostKey has been changed\" ) )\n             }\n         }\n \n-        try\n-        {\n-            getKnownHostsProvider().storeKnownHosts( stringWriter.toString() );\n-        }\n-        catch ( IOException e )\n+        if ( getKnownHostsProvider() != null )\n         {\n-            closeConnection();\n+            HostKeyRepository hkr = sch.getHostKeyRepository();\n \n-            throw new AuthenticationException(\n-                \"Connection aborted - failed to write to known_hosts. Reason: \" + e.getMessage(), e );\n+            HostKey[] hk = hkr.getHostKey( host, null );\n+            try\n+            {\n+                if ( hk != null )\n+                {\n+                    for ( HostKey hostKey : hk )\n+                    {\n+                        KnownHostEntry knownHostEntry = new KnownHostEntry( hostKey.getHost(), hostKey.getType(),\n+                            hostKey.getKey() );\n+                        getKnownHostsProvider().addKnownHost( knownHostEntry );\n+                    }\n+                }\n+            }\n+            catch ( IOException e )\n+            {\n+                closeConnection();\n+\n+                throw new AuthenticationException(\n+                    \"Connection aborted - failed to write to known_hosts. Reason: \" + e.getMessage(), e );\n+            }\n         }\n     }\n ",
                "raw_url": "https://github.com/apache/maven-wagon/raw/0eed00cf95e2f42167b3680b59347e14d8a842b7/wagon-providers/wagon-ssh/src/main/java/org/apache/maven/wagon/providers/ssh/jsch/AbstractJschWagon.java",
                "sha": "84288e92ffe8e25f2e7f65dd2763e1efe67aeca6",
                "status": "modified"
            },
            {
                "additions": 6,
                "blob_url": "https://github.com/apache/maven-wagon/blob/0eed00cf95e2f42167b3680b59347e14d8a842b7/wagon-providers/wagon-ssh/src/test/java/org/apache/maven/wagon/providers/ssh/jsch/EmbeddedScpWagonTest.java",
                "changes": 6,
                "contents_url": "https://api.github.com/repos/apache/maven-wagon/contents/wagon-providers/wagon-ssh/src/test/java/org/apache/maven/wagon/providers/ssh/jsch/EmbeddedScpWagonTest.java?ref=0eed00cf95e2f42167b3680b59347e14d8a842b7",
                "deletions": 0,
                "filename": "wagon-providers/wagon-ssh/src/test/java/org/apache/maven/wagon/providers/ssh/jsch/EmbeddedScpWagonTest.java",
                "patch": "@@ -21,6 +21,7 @@\n \n import org.apache.maven.wagon.Wagon;\n import org.apache.maven.wagon.providers.ssh.AbstractEmbeddedScpWagonTest;\n+import org.apache.maven.wagon.providers.ssh.knownhost.KnownHostEntry;\n import org.apache.maven.wagon.providers.ssh.knownhost.KnownHostsProvider;\n \n import java.io.IOException;\n@@ -47,6 +48,11 @@ public void storeKnownHosts( String contents )\n \n             }\n \n+            public void addKnownHost( KnownHostEntry knownHost )\n+                throws IOException\n+            {\n+            }\n+\n             public void setHostKeyChecking( String hostKeyChecking )\n             {\n             }",
                "raw_url": "https://github.com/apache/maven-wagon/raw/0eed00cf95e2f42167b3680b59347e14d8a842b7/wagon-providers/wagon-ssh/src/test/java/org/apache/maven/wagon/providers/ssh/jsch/EmbeddedScpWagonTest.java",
                "sha": "72dc1c0918d80b3bf2fb470196fc84c4894caec0",
                "status": "modified"
            },
            {
                "additions": 6,
                "blob_url": "https://github.com/apache/maven-wagon/blob/0eed00cf95e2f42167b3680b59347e14d8a842b7/wagon-providers/wagon-ssh/src/test/java/org/apache/maven/wagon/providers/ssh/jsch/EmbeddedScpWagonWithKeyTest.java",
                "changes": 6,
                "contents_url": "https://api.github.com/repos/apache/maven-wagon/contents/wagon-providers/wagon-ssh/src/test/java/org/apache/maven/wagon/providers/ssh/jsch/EmbeddedScpWagonWithKeyTest.java?ref=0eed00cf95e2f42167b3680b59347e14d8a842b7",
                "deletions": 0,
                "filename": "wagon-providers/wagon-ssh/src/test/java/org/apache/maven/wagon/providers/ssh/jsch/EmbeddedScpWagonWithKeyTest.java",
                "patch": "@@ -22,6 +22,7 @@\n import org.apache.maven.wagon.Wagon;\n import org.apache.maven.wagon.authentication.AuthenticationInfo;\n import org.apache.maven.wagon.providers.ssh.AbstractEmbeddedScpWagonWithKeyTest;\n+import org.apache.maven.wagon.providers.ssh.knownhost.KnownHostEntry;\n import org.apache.maven.wagon.providers.ssh.knownhost.KnownHostsProvider;\n \n import java.io.File;\n@@ -50,6 +51,11 @@ public void storeKnownHosts( String contents )\n \n             }\n \n+            public void addKnownHost( KnownHostEntry knownHost )\n+                    throws IOException\n+            {\n+            }\n+\n             public void setHostKeyChecking( String hostKeyChecking )\n             {\n             }",
                "raw_url": "https://github.com/apache/maven-wagon/raw/0eed00cf95e2f42167b3680b59347e14d8a842b7/wagon-providers/wagon-ssh/src/test/java/org/apache/maven/wagon/providers/ssh/jsch/EmbeddedScpWagonWithKeyTest.java",
                "sha": "47d642db666697defcbea0ce1327f20a0a18e777",
                "status": "modified"
            }
        ],
        "message": "\"[WAGON-426] Prevent fingerprints loss in known_hosts. Recommit fc34bf340 with proper handling of NPE\"",
        "parent": "https://github.com/apache/maven-wagon/commit/8863ded43b40a030bef525f5a42b5adc3a0cb8de",
        "repo": "maven-wagon",
        "unit_tests": [
            "FileKnownHostsProviderTest.java",
            "KnownHostsProviderTest.java"
        ]
    },
    "maven-wagon_16ae4b5": {
        "bug_id": "maven-wagon_16ae4b5",
        "commit": "https://github.com/apache/maven-wagon/commit/16ae4b593c1a250a88f1b745b9e2dc11e7c8a259",
        "file": [
            {
                "additions": 34,
                "blob_url": "https://github.com/apache/maven-wagon/blob/16ae4b593c1a250a88f1b745b9e2dc11e7c8a259/wagon-provider-api/src/main/java/org/apache/maven/wagon/repository/Repository.java",
                "changes": 43,
                "contents_url": "https://api.github.com/repos/apache/maven-wagon/contents/wagon-provider-api/src/main/java/org/apache/maven/wagon/repository/Repository.java?ref=16ae4b593c1a250a88f1b745b9e2dc11e7c8a259",
                "deletions": 9,
                "filename": "wagon-provider-api/src/main/java/org/apache/maven/wagon/repository/Repository.java",
                "patch": "@@ -66,15 +66,28 @@\n \n     private String password = null;\n \n+    /**\n+     * @deprecated use {@link #Repository(String, String)}\n+     */\n     public Repository()\n     {\n \n     }\n \n     public Repository( String id, String url )\n     {\n+        if ( id == null )\n+        {\n+            throw new NullPointerException( \"id can not be null\" );\n+        }\n+        \n         setId( id );\n \n+        if ( url == null )\n+        {\n+            throw new NullPointerException( \"url can not be null\" );\n+        }\n+        \n         setUrl( url );\n     }\n \n@@ -88,7 +101,6 @@ public void setId( String id )\n         this.id = id;\n     }\n \n-\n     public String getBasedir()\n     {\n         return basedir;\n@@ -238,18 +250,31 @@ public void setParameters( Properties parameters )\n         this.parameters = parameters;\n     }\n \n-    // ========================================================================\n-    // id is the unique identifier for Repositories, so let's enforce that.\n-    // ========================================================================\n-    public boolean equals( Object other )\n+    public int hashCode()\n     {\n-        return ( other == this ||\n-            ( ( other instanceof Repository ) && ( (Repository) other ).getId().equals( getId() ) ) );\n+        final int prime = 31;\n+        int result = 1;\n+        result = prime * result + ( ( id == null ) ? 0 : id.hashCode() );\n+        return result;\n     }\n \n-    public int hashCode()\n+    public boolean equals( Object obj )\n     {\n-        return getId().hashCode();\n+        if ( this == obj )\n+            return true;\n+        if ( obj == null )\n+            return false;\n+        if ( getClass() != obj.getClass() )\n+            return false;\n+        final Repository other = (Repository) obj;\n+        if ( id == null )\n+        {\n+            if ( other.id != null )\n+                return false;\n+        }\n+        else if ( !id.equals( other.id ) )\n+            return false;\n+        return true;\n     }\n \n     public String getUsername()",
                "raw_url": "https://github.com/apache/maven-wagon/raw/16ae4b593c1a250a88f1b745b9e2dc11e7c8a259/wagon-provider-api/src/main/java/org/apache/maven/wagon/repository/Repository.java",
                "sha": "5f35c3e7144f46ca911719258b32fe1fab049048",
                "status": "modified"
            }
        ],
        "message": "[WAGON-105] guard against NPE in hashCode\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/wagon/trunk@656236 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/maven-wagon/commit/3c0de3800cfa30edaa343389ed05835425bcd4ff",
        "repo": "maven-wagon",
        "unit_tests": [
            "RepositoryTest.java"
        ]
    },
    "maven-wagon_215bc4d": {
        "bug_id": "maven-wagon_215bc4d",
        "commit": "https://github.com/apache/maven-wagon/commit/215bc4dadb74a5cc50431ab706c661a495c756a9",
        "file": [
            {
                "additions": 4,
                "blob_url": "https://github.com/apache/maven-wagon/blob/215bc4dadb74a5cc50431ab706c661a495c756a9/wagon-provider-api/src/main/java/org/apache/maven/wagon/LazyFileOutputStream.java",
                "changes": 5,
                "contents_url": "https://api.github.com/repos/apache/maven-wagon/contents/wagon-provider-api/src/main/java/org/apache/maven/wagon/LazyFileOutputStream.java?ref=215bc4dadb74a5cc50431ab706c661a495c756a9",
                "deletions": 1,
                "filename": "wagon-provider-api/src/main/java/org/apache/maven/wagon/LazyFileOutputStream.java",
                "patch": "@@ -74,7 +74,10 @@ public boolean equals( Object obj )\n     public void flush()\n         throws IOException\n     {\n-        delegee.flush();\n+        if ( delegee != null )\n+        {\n+            delegee.flush();\n+        }\n     }\n \n ",
                "raw_url": "https://github.com/apache/maven-wagon/raw/215bc4dadb74a5cc50431ab706c661a495c756a9/wagon-provider-api/src/main/java/org/apache/maven/wagon/LazyFileOutputStream.java",
                "sha": "637ec25b7d134cdebf08460073c6dd66a42f660e",
                "status": "modified"
            }
        ],
        "message": "[WAGON-222] Empty file transfer causes NPE\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/wagon/trunk@668181 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/maven-wagon/commit/a86c3d3bb63b1b7057a19ddf646f1713951a3897",
        "repo": "maven-wagon",
        "unit_tests": [
            "LazyFileOutputStreamTest.java"
        ]
    },
    "maven-wagon_216cdad": {
        "bug_id": "maven-wagon_216cdad",
        "commit": "https://github.com/apache/maven-wagon/commit/216cdadcf2ebc78cd5182131a94ce9f35d0807fe",
        "file": [
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/maven-wagon/blob/216cdadcf2ebc78cd5182131a94ce9f35d0807fe/wagon-provider-api/src/main/java/org/apache/maven/wagon/observers/ChecksumObserver.java",
                "changes": 3,
                "contents_url": "https://api.github.com/repos/apache/maven-wagon/contents/wagon-provider-api/src/main/java/org/apache/maven/wagon/observers/ChecksumObserver.java?ref=216cdadcf2ebc78cd5182131a94ce9f35d0807fe",
                "deletions": 1,
                "filename": "wagon-provider-api/src/main/java/org/apache/maven/wagon/observers/ChecksumObserver.java",
                "patch": "@@ -83,7 +83,8 @@ public void transferCompleted( TransferEvent transferEvent )\n \n     public void transferError( TransferEvent transferEvent )\n     {\n-        digester = null;\n+        digester.reset();\n+        \n         actualChecksum = null;\n     }\n ",
                "raw_url": "https://github.com/apache/maven-wagon/raw/216cdadcf2ebc78cd5182131a94ce9f35d0807fe/wagon-provider-api/src/main/java/org/apache/maven/wagon/observers/ChecksumObserver.java",
                "sha": "40231868b6f18d9747442034e2ea35b823710db6",
                "status": "modified"
            },
            {
                "additions": 92,
                "blob_url": "https://github.com/apache/maven-wagon/blob/216cdadcf2ebc78cd5182131a94ce9f35d0807fe/wagon-provider-api/src/test/java/org/apache/maven/wagon/observers/ChecksumObserverTest.java",
                "changes": 92,
                "contents_url": "https://api.github.com/repos/apache/maven-wagon/contents/wagon-provider-api/src/test/java/org/apache/maven/wagon/observers/ChecksumObserverTest.java?ref=216cdadcf2ebc78cd5182131a94ce9f35d0807fe",
                "deletions": 0,
                "filename": "wagon-provider-api/src/test/java/org/apache/maven/wagon/observers/ChecksumObserverTest.java",
                "patch": "@@ -0,0 +1,92 @@\n+package org.apache.maven.wagon.observers;\n+\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+import java.io.File;\n+import java.io.IOException;\n+import java.security.NoSuchAlgorithmException;\n+\n+import junit.framework.TestCase;\n+\n+import org.apache.maven.wagon.ConnectionException;\n+import org.apache.maven.wagon.ResourceDoesNotExistException;\n+import org.apache.maven.wagon.TransferFailedException;\n+import org.apache.maven.wagon.Wagon;\n+import org.apache.maven.wagon.WagonMock;\n+import org.apache.maven.wagon.authorization.AuthorizationException;\n+import org.apache.maven.wagon.events.TransferListener;\n+import org.apache.maven.wagon.repository.Repository;\n+\n+public class ChecksumObserverTest\n+    extends TestCase\n+{\n+    private Wagon wagon;\n+\n+    public void setUp()\n+        throws Exception\n+    {\n+        super.setUp();\n+\n+        wagon = new WagonMock( true );\n+\n+        Repository repository = new Repository();\n+        wagon.connect( repository );        \n+    }\n+    \n+    public void tearDown()\n+        throws ConnectionException\n+    {\n+        wagon.disconnect();\n+    }\n+\n+    public void testSubsequentTransfersAfterTransferError()\n+        throws NoSuchAlgorithmException, ResourceDoesNotExistException,\n+        AuthorizationException, IOException\n+    {\n+        TransferListener listener = new ChecksumObserver();\n+\n+        wagon.addTransferListener( listener );\n+\n+        File testFile = File.createTempFile( \"wagon\", \"tmp\" );\n+        testFile.deleteOnExit();\n+        \n+        try\n+        {\n+            wagon.get( \"resource\", testFile );\n+            fail();\n+        }\n+        catch ( TransferFailedException e )\n+        {\n+            assertTrue( true );\n+        }\n+\n+        try\n+        {\n+            wagon.get( \"resource\", testFile );\n+            fail();\n+        }\n+        catch ( TransferFailedException e )\n+        {\n+            assertTrue( true );\n+        }\n+        \n+        testFile.delete();\n+    }\n+}",
                "raw_url": "https://github.com/apache/maven-wagon/raw/216cdadcf2ebc78cd5182131a94ce9f35d0807fe/wagon-provider-api/src/test/java/org/apache/maven/wagon/observers/ChecksumObserverTest.java",
                "sha": "5ba5f2f6f1270a43c4e82db35b872b00af73fea8",
                "status": "added"
            }
        ],
        "message": "[WAGON-224] do not throw a NPE on subsequent transfers if a previous transfer failed in error\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/wagon/trunk@680225 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/maven-wagon/commit/2b8ada1f225a31fc70647369e784965ca53b91be",
        "repo": "maven-wagon",
        "unit_tests": [
            "ChecksumObserverTest.java"
        ]
    },
    "maven-wagon_246c6da": {
        "bug_id": "maven-wagon_246c6da",
        "commit": "https://github.com/apache/maven-wagon/commit/246c6daf1ca3fba385f71c89fdf798d2b519ced6",
        "file": [
            {
                "additions": 4,
                "blob_url": "https://github.com/apache/maven-wagon/blob/246c6daf1ca3fba385f71c89fdf798d2b519ced6/wagon-provider-api/src/main/java/org/apache/maven/wagon/AbstractWagon.java",
                "changes": 7,
                "contents_url": "https://api.github.com/repos/apache/maven-wagon/contents/wagon-provider-api/src/main/java/org/apache/maven/wagon/AbstractWagon.java?ref=246c6daf1ca3fba385f71c89fdf798d2b519ced6",
                "deletions": 3,
                "filename": "wagon-provider-api/src/main/java/org/apache/maven/wagon/AbstractWagon.java",
                "patch": "@@ -371,13 +371,14 @@ protected void getTransfer( Resource resource, OutputStream output, InputStream\n         {\n             transfer( resource, input, output, TransferEvent.REQUEST_GET, maxSize );\n \n+            finishGetTransfer( resource, input, output );\n+\n             if ( closeInput )\n             {\n                 input.close();\n                 input = null;\n             }\n \n-            finishGetTransfer( resource, input, output );\n         }\n         catch ( IOException e )\n         {\n@@ -471,13 +472,13 @@ protected void putTransfer( Resource resource, InputStream input, OutputStream o\n                           ? Long.MAX_VALUE\n                           : resource.getContentLength() );\n \n+            finishPutTransfer( resource, input, output );\n+\n             if ( closeOutput )\n             {\n                 output.close();\n                 output = null;\n             }\n-\n-            finishPutTransfer( resource, input, output );\n         }\n         catch ( IOException e )\n         {",
                "raw_url": "https://github.com/apache/maven-wagon/raw/246c6daf1ca3fba385f71c89fdf798d2b519ced6/wagon-provider-api/src/main/java/org/apache/maven/wagon/AbstractWagon.java",
                "sha": "949726049ef1816e478f4a88472c57ce4fa25207",
                "status": "modified"
            },
            {
                "additions": 27,
                "blob_url": "https://github.com/apache/maven-wagon/blob/246c6daf1ca3fba385f71c89fdf798d2b519ced6/wagon-providers/wagon-ssh/src/main/java/org/apache/maven/wagon/providers/ssh/jsch/AbstractJschWagon.java",
                "changes": 31,
                "contents_url": "https://api.github.com/repos/apache/maven-wagon/contents/wagon-providers/wagon-ssh/src/main/java/org/apache/maven/wagon/providers/ssh/jsch/AbstractJschWagon.java?ref=246c6daf1ca3fba385f71c89fdf798d2b519ced6",
                "deletions": 4,
                "filename": "wagon-providers/wagon-ssh/src/main/java/org/apache/maven/wagon/providers/ssh/jsch/AbstractJschWagon.java",
                "patch": "@@ -305,34 +305,42 @@ public void closeConnection()\n         }\n     }\n \n-    public Streams executeCommand( String command, boolean ignoreFailures )\n+    public Streams executeCommand( String command, boolean ignoreStdErr, boolean ignoreNoneZeroExitCode )\n         throws CommandExecutionException\n     {\n         ChannelExec channel = null;\n         BufferedReader stdoutReader = null;\n         BufferedReader stderrReader = null;\n+        Streams streams = null;\n         try\n         {\n             channel = (ChannelExec) session.openChannel( EXEC_CHANNEL );\n \n+            fireSessionDebug( \"Executing: \" + command );\n             channel.setCommand( command + \"\\n\" );\n \n             stdoutReader = new BufferedReader( new InputStreamReader( channel.getInputStream() ) );\n             stderrReader = new BufferedReader( new InputStreamReader( channel.getErrStream() ) );\n \n             channel.connect();\n \n-            Streams streams = CommandExecutorStreamProcessor.processStreams( stderrReader, stdoutReader );\n+            streams = CommandExecutorStreamProcessor.processStreams( stderrReader, stdoutReader );\n \n             stdoutReader.close();\n             stdoutReader = null;\n \n             stderrReader.close();\n             stderrReader = null;\n \n-            if ( streams.getErr().length() > 0 && !ignoreFailures )\n+            int exitCode = channel.getExitStatus();\n+\n+            if ( streams.getErr().length() > 0 && !ignoreStdErr )\n+            {\n+                throw new CommandExecutionException( \"Exit code: \" + exitCode + \" - \" + streams.getErr() );\n+            }\n+\n+            if ( exitCode != 0 && !ignoreNoneZeroExitCode )\n             {\n-                int exitCode = channel.getExitStatus();\n                 throw new CommandExecutionException( \"Exit code: \" + exitCode + \" - \" + streams.getErr() );\n             }\n \n@@ -348,6 +356,12 @@ public Streams executeCommand( String command, boolean ignoreFailures )\n         }\n         finally\n         {\n+            if ( streams != null )\n+            {\n+                fireSessionDebug( \"Stdout results:\" + streams.getOut() );\n+                fireSessionDebug( \"Stderr results:\" + streams.getErr() );\n+            }\n+\n             IOUtil.close( stdoutReader );\n             IOUtil.close( stderrReader );\n             if ( channel != null )\n@@ -400,6 +414,15 @@ public void executeCommand( String command )\n         executeCommand( command, false );\n     }\n \n+    public Streams executeCommand( String command, boolean ignoreFailures )\n+            throws CommandExecutionException\n+    {\n+        fireTransferDebug( \"Executing command: \" + command );\n+\n+        //backward compatible with wagon 2.10\n+        return executeCommand( command, ignoreFailures, ignoreFailures );\n+    }\n+\n     public InteractiveUserInfo getInteractiveUserInfo()\n     {\n         return this.interactiveUserInfo;",
                "raw_url": "https://github.com/apache/maven-wagon/raw/246c6daf1ca3fba385f71c89fdf798d2b519ced6/wagon-providers/wagon-ssh/src/main/java/org/apache/maven/wagon/providers/ssh/jsch/AbstractJschWagon.java",
                "sha": "8695235941d62163da65ee45d3ec4fb230723e2f",
                "status": "modified"
            }
        ],
        "message": "[WAGON-465] add options ignore stderr and/or none 0 exit code\n\n* Introduce a new wagon-ssh execute interface the handle the options\n\n* No new behavior changes for current interface\n\n* dump stdout/sterr exec outputs  to session listen\n\n* Fix a couple of NPE when session listener is enable",
        "parent": "https://github.com/apache/maven-wagon/commit/87338f924f1e4c1194ee8c6afa6a97c85b344463",
        "repo": "maven-wagon",
        "unit_tests": [
            "AbstractWagonTest.java"
        ]
    },
    "maven-wagon_2b8ada1": {
        "bug_id": "maven-wagon_2b8ada1",
        "commit": "https://github.com/apache/maven-wagon/commit/2b8ada1f225a31fc70647369e784965ca53b91be",
        "file": [
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/maven-wagon/blob/2b8ada1f225a31fc70647369e784965ca53b91be/wagon-provider-api/src/main/java/org/apache/maven/wagon/AbstractWagon.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/maven-wagon/contents/wagon-provider-api/src/main/java/org/apache/maven/wagon/AbstractWagon.java?ref=2b8ada1f225a31fc70647369e784965ca53b91be",
                "deletions": 1,
                "filename": "wagon-provider-api/src/main/java/org/apache/maven/wagon/AbstractWagon.java",
                "patch": "@@ -150,7 +150,7 @@ public void connect( Repository repository, AuthenticationInfo authenticationInf\n         {\n             public ProxyInfo getProxyInfo( String protocol )\n             {\n-                if ( protocol == null || protocol.equalsIgnoreCase( proxy.getType() ) )\n+                if ( protocol == null || proxy == null || protocol.equalsIgnoreCase( proxy.getType() ) )\n                 {\n                     return proxy;\n                 }",
                "raw_url": "https://github.com/apache/maven-wagon/raw/2b8ada1f225a31fc70647369e784965ca53b91be/wagon-provider-api/src/main/java/org/apache/maven/wagon/AbstractWagon.java",
                "sha": "a32dfb413f68845bc8f6738a5229b926e580a64f",
                "status": "modified"
            },
            {
                "additions": 12,
                "blob_url": "https://github.com/apache/maven-wagon/blob/2b8ada1f225a31fc70647369e784965ca53b91be/wagon-provider-api/src/test/java/org/apache/maven/wagon/AbstractWagonTest.java",
                "changes": 12,
                "contents_url": "https://api.github.com/repos/apache/maven-wagon/contents/wagon-provider-api/src/test/java/org/apache/maven/wagon/AbstractWagonTest.java?ref=2b8ada1f225a31fc70647369e784965ca53b91be",
                "deletions": 0,
                "filename": "wagon-provider-api/src/test/java/org/apache/maven/wagon/AbstractWagonTest.java",
                "patch": "@@ -115,6 +115,18 @@ public void testNoProxyConfiguration() throws ConnectionException, Authenticatio\n         assertNull( wagon.getProxyInfo( \"http\", \"localhost\" ) );\n     }\n \n+    public void testNullProxyConfiguration() throws ConnectionException, AuthenticationException\n+    {\n+        Repository repository = new Repository();\n+        wagon.connect( repository, (ProxyInfo) null );\n+        assertNull( wagon.getProxyInfo() );\n+        assertNull( wagon.getProxyInfo( \"http\", \"www.example.com\" ) );\n+        assertNull( wagon.getProxyInfo( \"dav\", \"www.example.com\" ) );\n+        assertNull( wagon.getProxyInfo( \"scp\", \"www.example.com\" ) );\n+        assertNull( wagon.getProxyInfo( \"ftp\", \"www.example.com\" ) );\n+        assertNull( wagon.getProxyInfo( \"http\", \"localhost\" ) );\n+    }\n+\n     public void testLegacyProxyConfiguration() throws ConnectionException, AuthenticationException\n     {\n         ProxyInfo proxyInfo = new ProxyInfo();",
                "raw_url": "https://github.com/apache/maven-wagon/raw/2b8ada1f225a31fc70647369e784965ca53b91be/wagon-provider-api/src/test/java/org/apache/maven/wagon/AbstractWagonTest.java",
                "sha": "fe576fb56f496e1f64f95f1278e10ffdb35c5a37",
                "status": "modified"
            }
        ],
        "message": "[WAGON-225] guard against NPE\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/wagon/trunk@680112 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/maven-wagon/commit/891847b43a13fbf44a1cc3206e77cd4f080ee97c",
        "repo": "maven-wagon",
        "unit_tests": [
            "AbstractWagonTest.java"
        ]
    },
    "maven-wagon_51aa401": {
        "bug_id": "maven-wagon_51aa401",
        "commit": "https://github.com/apache/maven-wagon/commit/51aa4013d6d6074335e914d290e6677c6b2a3d01",
        "file": [
            {
                "additions": 4,
                "blob_url": "https://github.com/apache/maven-wagon/blob/51aa4013d6d6074335e914d290e6677c6b2a3d01/wagon-providers/wagon-ssh/src/main/java/org/apache/maven/wagon/providers/ssh/ScpWagon.java",
                "changes": 9,
                "contents_url": "https://api.github.com/repos/apache/maven-wagon/contents/wagon-providers/wagon-ssh/src/main/java/org/apache/maven/wagon/providers/ssh/ScpWagon.java?ref=51aa4013d6d6074335e914d290e6677c6b2a3d01",
                "deletions": 5,
                "filename": "wagon-providers/wagon-ssh/src/main/java/org/apache/maven/wagon/providers/ssh/ScpWagon.java",
                "patch": "@@ -242,19 +242,18 @@ public void put( File source, String resourceName )\n         firePutInitiated( resource, source );\n \n         String umaskCmd = \"\";\n+\n         if ( getRepository().getPermissions() != null )\n         {\n-            final String dirPerms = getRepository().getPermissions().getDirectoryMode();\n+            String dirPerms = getRepository().getPermissions().getDirectoryMode();\n+\n             if ( dirPerms != null )\n             {\n                 umaskCmd = \"umask \" + PermissionModeUtils.getUserMaskFor( dirPerms ) + \"\\n\";\n-                executeCommand( umaskCmd );\n             }\n         }\n \n-        String mkdirCmd = umaskCmd + \"mkdir -p -m \"\n-                          + getRepository().getPermissions().getDirectoryMode()\n-                          + \" \" + basedir + \"/\" + dir + \"\\n\";\n+        String mkdirCmd = umaskCmd + \"mkdir -p -m \" + basedir + \"/\" + dir + \"\\n\";\n \n         executeCommand( mkdirCmd );\n ",
                "raw_url": "https://github.com/apache/maven-wagon/raw/51aa4013d6d6074335e914d290e6677c6b2a3d01/wagon-providers/wagon-ssh/src/main/java/org/apache/maven/wagon/providers/ssh/ScpWagon.java",
                "sha": "c47165df6bc38e4df86a222d836139ce412b3c5b",
                "status": "modified"
            }
        ],
        "message": "Fixing WAGONSSH-14: \"another NPE introduced by me :(\"\no Problem and patch created by Juan F. Codagnone.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/wagon/trunk@290699 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/maven-wagon/commit/fe3063ba212910f3dcd4341d38e19bbe2a9a01b8",
        "repo": "maven-wagon",
        "unit_tests": [
            "ScpWagonTest.java"
        ]
    },
    "maven-wagon_9abfc57": {
        "bug_id": "maven-wagon_9abfc57",
        "commit": "https://github.com/apache/maven-wagon/commit/9abfc571577545d6f08594f0e5d4debc3d3b438c",
        "file": [
            {
                "additions": 3,
                "blob_url": "https://github.com/apache/maven-wagon/blob/9abfc571577545d6f08594f0e5d4debc3d3b438c/wagon-providers/wagon-ftp/src/main/java/org/apache/maven/wagon/providers/ftp/FtpWagon.java",
                "changes": 4,
                "contents_url": "https://api.github.com/repos/apache/maven-wagon/contents/wagon-providers/wagon-ftp/src/main/java/org/apache/maven/wagon/providers/ftp/FtpWagon.java?ref=9abfc571577545d6f08594f0e5d4debc3d3b438c",
                "deletions": 1,
                "filename": "wagon-providers/wagon-ftp/src/main/java/org/apache/maven/wagon/providers/ftp/FtpWagon.java",
                "patch": "@@ -25,6 +25,7 @@\n import java.io.InputStream;\n import java.io.OutputStream;\n import java.util.ArrayList;\n+import java.util.Calendar;\n import java.util.List;\n \n import org.apache.commons.net.ProtocolCommandEvent;\n@@ -353,7 +354,8 @@ public void fillInputData( InputData inputData )\n             //@todo check how it works! javadoc of common login says:\n             // Returns the file timestamp. This usually the last modification time.\n             //\n-            long lastModified = ftpFiles[0].getTimestamp().getTimeInMillis();\n+            Calendar timestamp = ftpFiles[0].getTimestamp();\n+            long lastModified = timestamp != null ? timestamp.getTimeInMillis() : 0;\n \n             resource.setContentLength( contentLength );\n ",
                "raw_url": "https://github.com/apache/maven-wagon/raw/9abfc571577545d6f08594f0e5d4debc3d3b438c/wagon-providers/wagon-ftp/src/main/java/org/apache/maven/wagon/providers/ftp/FtpWagon.java",
                "sha": "a1d05df0e5a547e93186bfe47189957a87eaaec6",
                "status": "modified"
            }
        ],
        "message": "[WAGON-242] guard against NPE\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/wagon/trunk@745732 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/maven-wagon/commit/d588a17a4d48e90380ae69238225ac072f9a4fcc",
        "repo": "maven-wagon",
        "unit_tests": [
            "FtpWagonTest.java"
        ]
    },
    "maven-wagon_aae08e1": {
        "bug_id": "maven-wagon_aae08e1",
        "commit": "https://github.com/apache/maven-wagon/commit/aae08e124964492ff178a3fa8f0e2c21312644be",
        "file": [
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/maven-wagon/blob/aae08e124964492ff178a3fa8f0e2c21312644be/wagon-providers/wagon-file/src/main/java/org/apache/maven/wagon/providers/file/FileWagon.java",
                "changes": 3,
                "contents_url": "https://api.github.com/repos/apache/maven-wagon/contents/wagon-providers/wagon-file/src/main/java/org/apache/maven/wagon/providers/file/FileWagon.java?ref=aae08e124964492ff178a3fa8f0e2c21312644be",
                "deletions": 1,
                "filename": "wagon-providers/wagon-file/src/main/java/org/apache/maven/wagon/providers/file/FileWagon.java",
                "patch": "@@ -135,7 +135,8 @@ public void closeConnection()\n \n     public boolean supportsDirectoryCopy()\n     {\n-        return ( getRepository().getBasedir() != null );\n+        // TODO: should we test for null basedir here?\n+        return true;\n     }\n \n     public void putDirectory( File sourceDirectory, String destinationDirectory )",
                "raw_url": "https://github.com/apache/maven-wagon/raw/aae08e124964492ff178a3fa8f0e2c21312644be/wagon-providers/wagon-file/src/main/java/org/apache/maven/wagon/providers/file/FileWagon.java",
                "sha": "dad885e027758edae617f647ae818c488a15301e",
                "status": "modified"
            }
        ],
        "message": "Addressing NPE on OSX\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/wagon/trunk@485713 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/maven-wagon/commit/711cb1f47a539ace24ba70ea88828de3e422beb0",
        "repo": "maven-wagon",
        "unit_tests": [
            "FileWagonTest.java"
        ]
    },
    "maven-wagon_af6e4e9": {
        "bug_id": "maven-wagon_af6e4e9",
        "commit": "https://github.com/apache/maven-wagon/commit/af6e4e9003173ec968f0742743056e9bbf16c07f",
        "file": [
            {
                "additions": 15,
                "blob_url": "https://github.com/apache/maven-wagon/blob/af6e4e9003173ec968f0742743056e9bbf16c07f/wagon-providers/wagon-ssh/src/main/java/org/apache/maven/wagon/providers/ssh/SftpWagon.java",
                "changes": 24,
                "contents_url": "https://api.github.com/repos/apache/maven-wagon/contents/wagon-providers/wagon-ssh/src/main/java/org/apache/maven/wagon/providers/ssh/SftpWagon.java?ref=af6e4e9003173ec968f0742743056e9bbf16c07f",
                "deletions": 9,
                "filename": "wagon-providers/wagon-ssh/src/main/java/org/apache/maven/wagon/providers/ssh/SftpWagon.java",
                "patch": "@@ -160,17 +160,23 @@ public void put( File source, String resourceName )\n      */\n     private int getDirectoryMode( RepositoryPermissions permissions )\n     {\n-        try\n-        {\n-            return Integer.valueOf( permissions.getDirectoryMode(), 8 ).intValue();\n-        }\n-        catch ( NumberFormatException e )\n+        int ret = -1;\n+        \n+        if ( permissions != null ) \n         {\n-            // TODO: warning level\n-            fireTransferDebug( \"the file mode must be a numerical mode for SFTP\" );\n-\n-            return -1;\n+            try\n+            {\n+                ret = Integer.valueOf( permissions.getDirectoryMode(), 8 ).intValue();\n+            }\n+            catch ( NumberFormatException e )\n+            {\n+                // TODO: warning level\n+                fireTransferDebug( \"the file mode must be a numerical mode for SFTP\" );\n+                ret = -1;\n+            }\n         }\n+        \n+        return ret;\n     }\n \n     private void mkdirs( ChannelSftp channel, String resourceName, int mode )",
                "raw_url": "https://github.com/apache/maven-wagon/raw/af6e4e9003173ec968f0742743056e9bbf16c07f/wagon-providers/wagon-ssh/src/main/java/org/apache/maven/wagon/providers/ssh/SftpWagon.java",
                "sha": "764068087b9767173a2413c21b207ded41891f26",
                "status": "modified"
            }
        ],
        "message": "Fixing WAGON-SSH-10: \"fix NPE introduced in WAGONSSH-9\"\nPatch by Juan F. Codagnone.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/wagon/trunk@280300 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/maven-wagon/commit/333e66954d91e562be019ddbbc50323283eafb9c",
        "repo": "maven-wagon",
        "unit_tests": [
            "SftpWagonTest.java"
        ]
    },
    "maven-wagon_b4bf4a0": {
        "bug_id": "maven-wagon_b4bf4a0",
        "commit": "https://github.com/apache/maven-wagon/commit/b4bf4a0709d8114995a7a11949a8527d3e608a0e",
        "file": [
            {
                "additions": 10,
                "blob_url": "https://github.com/apache/maven-wagon/blob/b4bf4a0709d8114995a7a11949a8527d3e608a0e/wagon-provider-api/src/main/java/org/apache/maven/wagon/repository/Repository.java",
                "changes": 19,
                "contents_url": "https://api.github.com/repos/apache/maven-wagon/contents/wagon-provider-api/src/main/java/org/apache/maven/wagon/repository/Repository.java?ref=b4bf4a0709d8114995a7a11949a8527d3e608a0e",
                "deletions": 9,
                "filename": "wagon-provider-api/src/main/java/org/apache/maven/wagon/repository/Repository.java",
                "patch": "@@ -19,13 +19,13 @@\n  * under the License.\n  */\n \n-import java.io.Serializable;\n-import java.util.Properties;\n-\n import org.apache.maven.wagon.PathUtils;\n import org.apache.maven.wagon.WagonConstants;\n import org.codehaus.plexus.util.StringUtils;\n \n+import java.io.Serializable;\n+import java.util.Properties;\n+\n /**\n  * This class is an abstraction of the location from/to resources\n  * can be transfered.\n@@ -34,7 +34,8 @@\n  * @version $Id$\n  * @todo [BP] some things are specific to certain wagons (eg key stuff in authInfo, permissions)\n  */\n-public class Repository implements Serializable\n+public class Repository\n+    implements Serializable\n {\n     private static final long serialVersionUID = 1312227676322136247L;\n \n@@ -77,16 +78,16 @@ public Repository( String id, String url )\n     {\n         if ( id == null )\n         {\n-            throw new NullPointerException( \"id can not be null\" );\n+            throw new NullPointerException( \"id can not be null for Repository with url=\" + url );\n         }\n-        \n+\n         setId( id );\n \n         if ( url == null )\n         {\n-            throw new NullPointerException( \"url can not be null\" );\n+            throw new NullPointerException( \"url can not be null for Repository with id=\" + id );\n         }\n-        \n+\n         setUrl( url );\n     }\n \n@@ -103,7 +104,7 @@ public void setId( String id )\n     /**\n      * Retrieve the base directory of the repository. This is derived from the full repository URL, and\n      * contains the entire path component.\n-     * \n+     *\n      * @return the base directory\n      */\n     public String getBasedir()",
                "raw_url": "https://github.com/apache/maven-wagon/raw/b4bf4a0709d8114995a7a11949a8527d3e608a0e/wagon-provider-api/src/main/java/org/apache/maven/wagon/repository/Repository.java",
                "sha": "c857297386de4a26c26c667e68c32beca92dbfc6",
                "status": "modified"
            }
        ],
        "message": "[WAGON-285] Repository constructor NPE should be more verbose.\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/wagon/trunk@1174193 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/maven-wagon/commit/beb74c62ca39ae29fc9e03e91285015e9fed4249",
        "repo": "maven-wagon",
        "unit_tests": [
            "RepositoryTest.java"
        ]
    }
}