[
    {
        "repo": "chemistry",
        "message": "Avoid NPE if children list of a folder is empty\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/chemistry/trunk@928744 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/chemistry/commit/6ad25468d54a4edbcb6791c2a0fdbad20d70643e",
        "parent": "https://github.com/apache/chemistry/commit/656e3ac43cf84497227e3b0babc2c019ab029a15",
        "bug_id": "chemistry_1",
        "file": [
            {
                "sha": "5671c66818b0ec1859f6220bbd9d982c338b2f07",
                "filename": "opencmis/opencmis-server/opencmis-server-support/src/main/java/org/apache/opencmis/server/support/ObjectInfoHelper.java",
                "blob_url": "https://github.com/apache/chemistry/blob/6ad25468d54a4edbcb6791c2a0fdbad20d70643e/opencmis/opencmis-server/opencmis-server-support/src/main/java/org/apache/opencmis/server/support/ObjectInfoHelper.java",
                "raw_url": "https://github.com/apache/chemistry/raw/6ad25468d54a4edbcb6791c2a0fdbad20d70643e/opencmis/opencmis-server/opencmis-server-support/src/main/java/org/apache/opencmis/server/support/ObjectInfoHelper.java",
                "status": "modified",
                "changes": 20,
                "additions": 10,
                "contents_url": "https://api.github.com/repos/apache/chemistry/contents/opencmis/opencmis-server/opencmis-server-support/src/main/java/org/apache/opencmis/server/support/ObjectInfoHelper.java?ref=6ad25468d54a4edbcb6791c2a0fdbad20d70643e",
                "patch": "@@ -348,7 +348,7 @@ public void fillObjectInfoHolder(\n         ObjectInFolderList objList,\r\n         ObjectInfoHolder objectInfos)\r\n     {\r\n-        if (null == objectInfos || null == objList)\r\n+        if (null == objectInfos || null == objList || objList.getObjects() == null)\r\n             return;\r\n \r\n         // Fill object information for all children in result list\r\n@@ -405,7 +405,6 @@ public void fillObjectInfoHolderFolderContainer(\n     {\r\n         if (null == objectInfos || null == oifcList)\r\n             return;\r\n-\r\n           \r\n         for (ObjectInFolderContainer object : oifcList) {\r\n             fillObjectInfoHolderFolderContainer(context, repositoryId, object, objectInfos);\r\n@@ -418,16 +417,17 @@ private void fillObjectInfoHolderFolderContainer(\n         ObjectInFolderContainer oifc,\r\n         ObjectInfoHolder objectInfos)\r\n     {\r\n-        if (null == objectInfos || null == oifc)\r\n-            return;\r\n+      if (null == objectInfos || null == oifc || oifc.getObject() == null\r\n+          || oifc.getObject().getObject() == null)\r\n+        return;\r\n \r\n-        fillObjectInfoHolder(context, repositoryId, oifc.getObject().getObject(), objectInfos);\r\n+      fillObjectInfoHolder(context, repositoryId, oifc.getObject().getObject(), objectInfos);\r\n \r\n-        if (null!=oifc.getChildren())\r\n-            for (ObjectInFolderContainer object : oifc.getChildren()) {\r\n-                // call recursively\r\n-                fillObjectInfoHolderFolderContainer(context, repositoryId, object, objectInfos);\r\n-            }    \r\n+      if (null!=oifc.getChildren())\r\n+        for (ObjectInFolderContainer object : oifc.getChildren()) {\r\n+          // call recursively\r\n+          fillObjectInfoHolderFolderContainer(context, repositoryId, object, objectInfos);\r\n+        }    \r\n     }\r\n \r\n     private Boolean getBooleanProperty(Map<String, PropertyData<?>> props, String key) {\r",
                "deletions": 10
            }
        ]
    },
    {
        "repo": "chemistry",
        "message": "CMIS-102: fix NPE in SimpleConnection.getObjectByPath\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/chemistry/trunk@908583 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/chemistry/commit/7356a1bde8c0ba0e30e3998de875e4e1d4f2a1ff",
        "parent": "https://github.com/apache/chemistry/commit/199b1b01d4f3555b25e86fac50357cb18dcf8eae",
        "bug_id": "chemistry_2",
        "file": [
            {
                "sha": "8d5cee087f50f2303436a75d598c8912de4ba9c0",
                "filename": "chemistry/chemistry-commons/src/main/java/org/apache/chemistry/impl/simple/SimpleConnection.java",
                "blob_url": "https://github.com/apache/chemistry/blob/7356a1bde8c0ba0e30e3998de875e4e1d4f2a1ff/chemistry/chemistry-commons/src/main/java/org/apache/chemistry/impl/simple/SimpleConnection.java",
                "raw_url": "https://github.com/apache/chemistry/raw/7356a1bde8c0ba0e30e3998de875e4e1d4f2a1ff/chemistry/chemistry-commons/src/main/java/org/apache/chemistry/impl/simple/SimpleConnection.java",
                "status": "modified",
                "changes": 7,
                "additions": 6,
                "contents_url": "https://api.github.com/repos/apache/chemistry/contents/chemistry/chemistry-commons/src/main/java/org/apache/chemistry/impl/simple/SimpleConnection.java?ref=7356a1bde8c0ba0e30e3998de875e4e1d4f2a1ff",
                "patch": "@@ -13,6 +13,7 @@\n  *\n  * Authors:\n  *     Florent Guillaume, Nuxeo\n+ *     Michael Durig, Day\n  */\n package org.apache.chemistry.impl.simple;\n \n@@ -469,8 +470,12 @@ public ObjectEntry getObjectByPath(String path, Inclusion inclusion) {\n                     throw new IllegalArgumentException(\n                             \"Path must not contain // : \" + path);\n                 }\n+                Set<String> children = repository.children.get(id);\n+                if (children == null) {\n+                    return null;\n+                }\n                 String foundId = null;\n-                for (String childId : repository.children.get(id)) {\n+                for (String childId : children) {\n                     SimpleData data = repository.datas.get(childId);\n                     String name = (String) data.get(Property.NAME);\n                     if (segment.equals(name)) {",
                "deletions": 1
            },
            {
                "sha": "500072e5c88d6d468793195563d8771840549732",
                "filename": "chemistry/chemistry-tests/src/main/java/org/apache/chemistry/test/BasicTestCase.java",
                "blob_url": "https://github.com/apache/chemistry/blob/7356a1bde8c0ba0e30e3998de875e4e1d4f2a1ff/chemistry/chemistry-tests/src/main/java/org/apache/chemistry/test/BasicTestCase.java",
                "raw_url": "https://github.com/apache/chemistry/raw/7356a1bde8c0ba0e30e3998de875e4e1d4f2a1ff/chemistry/chemistry-tests/src/main/java/org/apache/chemistry/test/BasicTestCase.java",
                "status": "modified",
                "changes": 5,
                "additions": 4,
                "contents_url": "https://api.github.com/repos/apache/chemistry/contents/chemistry/chemistry-tests/src/main/java/org/apache/chemistry/test/BasicTestCase.java?ref=7356a1bde8c0ba0e30e3998de875e4e1d4f2a1ff",
                "patch": "@@ -327,7 +327,10 @@ public void testGetObjectByPath() {\n         assertNotNull(spi.getObjectByPath(\"/folder 1/folder 2\", null));\n         assertNotNull(spi.getObjectByPath(\"/folder 1/folder 2/doc 2\", null));\n         assertNotNull(spi.getObjectByPath(\"/folder 1/folder 2/doc 3\", null));\n-        assertNull(spi.getObjectByPath(\"/notsuchname\", null));\n+        assertNull(spi.getObjectByPath(\"/nosuchname\", null));\n+        assertNull(spi.getObjectByPath(\"/nosuchname/foo\", null));\n+        assertNull(spi.getObjectByPath(\"/folder 1/nosuchname\", null));\n+        assertNull(spi.getObjectByPath(\"/folder 1/doc 1/nosuchname\", null));\n \n         assertNotNull(conn.getFolder(\"/\"));\n         assertNotNull(conn.getFolder(\"/folder 1\"));",
                "deletions": 1
            }
        ]
    },
    {
        "repo": "chemistry",
        "message": "Fix NPE when retrieving empty list of folder children via OpenCMIS folder.getChildren()\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/chemistry/trunk@920861 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/chemistry/commit/f421789987ec7a664a20b7ed8b18da1bd142baa2",
        "parent": "https://github.com/apache/chemistry/commit/8c37f50bb71a1d1217c093668737a5ff1a2cddc4",
        "bug_id": "chemistry_3",
        "file": [
            {
                "sha": "6aa9562bc505bc79c95a0b129231f8c400bf196c",
                "filename": "opencmis/opencmis-client/opencmis-client-impl/src/main/java/org/apache/opencmis/client/runtime/PersistentFolderImpl.java",
                "blob_url": "https://github.com/apache/chemistry/blob/f421789987ec7a664a20b7ed8b18da1bd142baa2/opencmis/opencmis-client/opencmis-client-impl/src/main/java/org/apache/opencmis/client/runtime/PersistentFolderImpl.java",
                "raw_url": "https://github.com/apache/chemistry/raw/f421789987ec7a664a20b7ed8b18da1bd142baa2/opencmis/opencmis-client/opencmis-client-impl/src/main/java/org/apache/opencmis/client/runtime/PersistentFolderImpl.java",
                "status": "modified",
                "changes": 9,
                "additions": 6,
                "contents_url": "https://api.github.com/repos/apache/chemistry/contents/opencmis/opencmis-client/opencmis-client-impl/src/main/java/org/apache/opencmis/client/runtime/PersistentFolderImpl.java?ref=f421789987ec7a664a20b7ed8b18da1bd142baa2",
                "patch": "@@ -240,9 +240,12 @@ protected FetchResult fetchPage(int pageNumber) {\n \r\n         // convert objects\r\n         List<CmisObject> page = new ArrayList<CmisObject>();\r\n-        for (ObjectInFolderData objectData : children.getObjects()) {\r\n-          if (objectData.getObject() != null) {\r\n-            page.add(objectFactory.convertObject(objectData.getObject(), ctxt));\r\n+        List<ObjectInFolderData> childObjects = children.getObjects();\r\n+        if (childObjects != null) {\r\n+          for (ObjectInFolderData objectData : childObjects) {\r\n+            if (objectData.getObject() != null) {\r\n+              page.add(objectFactory.convertObject(objectData.getObject(), ctxt));\r\n+            }\r\n           }\r\n         }\r\n \r",
                "deletions": 3
            }
        ]
    },
    {
        "repo": "chemistry",
        "message": "CMIS-95: fix NPE in SimpleConnection#getChildren, throw proper exceptions instead\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/chemistry/trunk@898825 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/chemistry/commit/d648534272695afd0acb651d7322358e5e16d130",
        "parent": "https://github.com/apache/chemistry/commit/5b5351a41344ba62dc720cd222e95645778542ee",
        "bug_id": "chemistry_4",
        "file": [
            {
                "sha": "0b6caf2176431870f990041d0a3dc71686485138",
                "filename": "chemistry/chemistry-atompub-client/src/main/java/org/apache/chemistry/atompub/client/APPConnection.java",
                "blob_url": "https://github.com/apache/chemistry/blob/d648534272695afd0acb651d7322358e5e16d130/chemistry/chemistry-atompub-client/src/main/java/org/apache/chemistry/atompub/client/APPConnection.java",
                "raw_url": "https://github.com/apache/chemistry/raw/d648534272695afd0acb651d7322358e5e16d130/chemistry/chemistry-atompub-client/src/main/java/org/apache/chemistry/atompub/client/APPConnection.java",
                "status": "modified",
                "changes": 19,
                "additions": 12,
                "contents_url": "https://api.github.com/repos/apache/chemistry/contents/chemistry/chemistry-atompub-client/src/main/java/org/apache/chemistry/atompub/client/APPConnection.java?ref=d648534272695afd0acb651d7322358e5e16d130",
                "patch": "@@ -214,7 +214,7 @@ protected void accumulateFolders(ObjectId folder, int depth,\n \n     public List<ObjectEntry> getDescendants(ObjectId folder, int depth,\n             String orderBy, Inclusion inclusion) {\n-        String href = getObjectEntry(folder).getLink(AtomPub.LINK_DOWN,\n+        String href = getFolderEntry(folder).getLink(AtomPub.LINK_DOWN,\n                 AtomPubCMIS.MEDIA_TYPE_CMIS_TREE);\n         Request req = new Request(href);\n         req.setParameter(AtomPubCMIS.PARAM_DEPTH, Integer.toString(depth));\n@@ -253,7 +253,7 @@ protected void accumulateFolders(ObjectId folder, int depth,\n     public ListPage<ObjectEntry> getChildren(ObjectId folder,\n             Inclusion inclusion, String orderBy, Paging paging) {\n         // TODO filter, includeRelationship, includeAllowableActions, orderBy\n-        String href = getObjectEntry(folder).getLink(AtomPub.LINK_DOWN,\n+        String href = getFolderEntry(folder).getLink(AtomPub.LINK_DOWN,\n                 AtomPub.MEDIA_TYPE_ATOM_FEED);\n         Request req = new Request(href);\n         if (paging != null) {\n@@ -273,11 +273,8 @@ protected void accumulateFolders(ObjectId folder, int depth,\n \n     public ObjectEntry getFolderParent(ObjectId folder, String filter) {\n         // TODO filter\n-        APPObjectEntry current = getObjectEntry(folder);\n-        if (!current.getBaseType().equals(BaseType.FOLDER)) {\n-            throw new IllegalArgumentException(\"Not a folder: \" + folder);\n-        }\n-        String rootId = current.connection.getRootFolder().getId();\n+        APPObjectEntry current = getFolderEntry(folder);\n+        String rootId = repository.getInfo().getRootFolderId().getId();\n         if (current.getId().equals(rootId)) {\n             return null;\n         }\n@@ -346,6 +343,14 @@ protected APPObjectEntry getObjectEntry(ObjectId objectId) {\n         return (APPObjectEntry) resp.getObject(new ReadContext(this));\n     }\n \n+    protected APPObjectEntry getFolderEntry(ObjectId objectId) {\n+        APPObjectEntry entry = getObjectEntry(objectId);\n+        if (!entry.getBaseType().equals(BaseType.FOLDER)) {\n+            throw new IllegalArgumentException(\"Not a folder: \" + objectId);\n+        }\n+        return entry;\n+    }\n+\n     protected String replace(String template, String param, String value) {\n         return template.replace('{' + param + '}', value);\n     }",
                "deletions": 7
            },
            {
                "sha": "60d2e5c5ed1f8b12f36a984328044db1fedf7863",
                "filename": "chemistry/chemistry-commons/src/main/java/org/apache/chemistry/impl/simple/SimpleConnection.java",
                "blob_url": "https://github.com/apache/chemistry/blob/d648534272695afd0acb651d7322358e5e16d130/chemistry/chemistry-commons/src/main/java/org/apache/chemistry/impl/simple/SimpleConnection.java",
                "raw_url": "https://github.com/apache/chemistry/raw/d648534272695afd0acb651d7322358e5e16d130/chemistry/chemistry-commons/src/main/java/org/apache/chemistry/impl/simple/SimpleConnection.java",
                "status": "modified",
                "changes": 17,
                "additions": 17,
                "contents_url": "https://api.github.com/repos/apache/chemistry/contents/chemistry/chemistry-commons/src/main/java/org/apache/chemistry/impl/simple/SimpleConnection.java?ref=d648534272695afd0acb651d7322358e5e16d130",
                "patch": "@@ -180,6 +180,7 @@ protected void accumulateFolders(ObjectId folder, int depth,\n \n     public List<ObjectEntry> getFolderTree(ObjectId folder, int depth,\n             Inclusion inclusion) {\n+        checkFolder(folder);\n         List<ObjectEntry> list = new ArrayList<ObjectEntry>();\n         accumulateFolders(folder, depth, inclusion, list);\n         return list;\n@@ -206,6 +207,7 @@ protected void accumulateDescendants(ObjectId folder, int depth,\n \n     public List<ObjectEntry> getDescendants(ObjectId folder, int depth,\n             String orderBy, Inclusion inclusion) {\n+        checkFolder(folder);\n         List<ObjectEntry> list = new ArrayList<ObjectEntry>();\n         accumulateDescendants(folder, depth, inclusion, orderBy, list);\n         return list;\n@@ -214,6 +216,7 @@ protected void accumulateDescendants(ObjectId folder, int depth,\n     public ListPage<ObjectEntry> getChildren(ObjectId folder,\n             Inclusion inclusion, String orderBy, Paging paging) {\n         // TODO orderBy\n+        checkFolder(folder);\n         Set<String> ids = repository.children.get(folder.getId());\n         List<ObjectEntry> all = new ArrayList<ObjectEntry>(ids.size());\n         for (String id : ids) {\n@@ -223,6 +226,20 @@ protected void accumulateDescendants(ObjectId folder, int depth,\n         return getListPage(all, paging);\n     }\n \n+    protected void checkFolder(ObjectId object) throws ObjectNotFoundException,\n+            ConstraintViolationException {\n+        String id = object.getId();\n+        SimpleData data = repository.datas.get(id);\n+        if (data == null) {\n+            throw new ObjectNotFoundException(id);\n+        }\n+        String baseTypeId = (String) data.get(Property.BASE_TYPE_ID);\n+        if (baseTypeId != BaseType.FOLDER.getId()) {\n+            throw new IllegalArgumentException(\"Not a folder: \" + id);\n+        }\n+\n+    }\n+\n     /**\n      * Extracts part of a list according to given paging parameters.\n      *",
                "deletions": 0
            },
            {
                "sha": "17db71f2dc1d6f9fb817ee71c9d8916d770a81ec",
                "filename": "chemistry/chemistry-tests/src/main/java/org/apache/chemistry/test/BasicTestCase.java",
                "blob_url": "https://github.com/apache/chemistry/blob/d648534272695afd0acb651d7322358e5e16d130/chemistry/chemistry-tests/src/main/java/org/apache/chemistry/test/BasicTestCase.java",
                "raw_url": "https://github.com/apache/chemistry/raw/d648534272695afd0acb651d7322358e5e16d130/chemistry/chemistry-tests/src/main/java/org/apache/chemistry/test/BasicTestCase.java",
                "status": "modified",
                "changes": 42,
                "additions": 42,
                "contents_url": "https://api.github.com/repos/apache/chemistry/contents/chemistry/chemistry-tests/src/main/java/org/apache/chemistry/test/BasicTestCase.java?ref=d648534272695afd0acb651d7322358e5e16d130",
                "patch": "@@ -318,18 +318,60 @@ public void testGetChildren() {\n         assertEquals(2, page.size());\n         assertTrue(page.getHasMoreItems());\n         assertEquals(3, page.getNumItems());\n+\n+        ObjectEntry doc1 = spi.getObjectByPath(\"/folder 1/doc 1\", null);\n+        try {\n+            spi.getChildren(doc1, null, null, null);\n+            fail();\n+        } catch (IllegalArgumentException e) {\n+            // ok\n+        }\n+        try {\n+            spi.getChildren(spi.newObjectId(\"no-such-id\"), null, null, null);\n+            fail();\n+        } catch (ObjectNotFoundException e) {\n+            // ok\n+        }\n     }\n \n     public void testGetFolderTree() {\n         Folder root = conn.getRootFolder();\n         List<ObjectEntry> desc = spi.getFolderTree(root, 4, null);\n         assertEquals(2, desc.size());\n+\n+        ObjectEntry doc1 = spi.getObjectByPath(\"/folder 1/doc 1\", null);\n+        try {\n+            spi.getFolderTree(doc1, -1, null);\n+            fail();\n+        } catch (IllegalArgumentException e) {\n+            // ok\n+        }\n+        try {\n+            spi.getFolderTree(spi.newObjectId(\"no-such-id\"), -1, null);\n+            fail();\n+        } catch (ObjectNotFoundException e) {\n+            // ok\n+        }\n     }\n \n     public void testGetDescendants() {\n         Folder root = conn.getRootFolder();\n         List<ObjectEntry> desc = spi.getDescendants(root, 4, null, null);\n         assertEquals(6, desc.size());\n+\n+        ObjectEntry doc1 = spi.getObjectByPath(\"/folder 1/doc 1\", null);\n+        try {\n+            spi.getDescendants(doc1, -1, null, null);\n+            fail();\n+        } catch (IllegalArgumentException e) {\n+            // ok\n+        }\n+        try {\n+            spi.getDescendants(spi.newObjectId(\"no-such-id\"), -1, null, null);\n+            fail();\n+        } catch (ObjectNotFoundException e) {\n+            // ok\n+        }\n     }\n \n     public void testGetFolderParent() {",
                "deletions": 0
            }
        ]
    }
]