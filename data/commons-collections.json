{
    "commons-collections_0145c16": {
        "bug_id": "commons-collections_0145c16",
        "commit": "https://github.com/apache/commons-collections/commit/0145c16a6ff8dced5e3cdb899a250dcd49ef780f",
        "file": [
            {
                "additions": 3,
                "blob_url": "https://github.com/apache/commons-collections/blob/0145c16a6ff8dced5e3cdb899a250dcd49ef780f/pom.xml",
                "changes": 3,
                "contents_url": "https://api.github.com/repos/apache/commons-collections/contents/pom.xml?ref=0145c16a6ff8dced5e3cdb899a250dcd49ef780f",
                "deletions": 0,
                "filename": "pom.xml",
                "patch": "@@ -350,6 +350,9 @@\n     <contributor>\n       <name>Serhiy Yevtushenko</name>\n     </contributor>\n+    <contributor>\n+      <name>Sai Zhang</name>\n+    </contributor>\n     <contributor>\n       <name>Jason van Zyl</name>\n     </contributor>",
                "raw_url": "https://github.com/apache/commons-collections/raw/0145c16a6ff8dced5e3cdb899a250dcd49ef780f/pom.xml",
                "sha": "2edbcb455c0efcb8ce262060edd049305f2f7d01",
                "status": "modified"
            },
            {
                "additions": 6,
                "blob_url": "https://github.com/apache/commons-collections/blob/0145c16a6ff8dced5e3cdb899a250dcd49ef780f/src/java/org/apache/commons/collections/iterators/FilterListIterator.java",
                "changes": 6,
                "contents_url": "https://api.github.com/repos/apache/commons-collections/contents/src/java/org/apache/commons/collections/iterators/FilterListIterator.java?ref=0145c16a6ff8dced5e3cdb899a250dcd49ef780f",
                "deletions": 0,
                "filename": "src/java/org/apache/commons/collections/iterators/FilterListIterator.java",
                "patch": "@@ -227,6 +227,9 @@ private boolean setNextObject() {\n             clearNextObject();\n         }\n \n+        if (iterator == null) {\n+            return false;\n+        }\n         while (iterator.hasNext()) {\n             E object = iterator.next();\n             if (predicate.evaluate(object)) {\n@@ -256,6 +259,9 @@ private boolean setPreviousObject() {\n             clearPreviousObject();\n         }\n \n+        if (iterator == null) {\n+            return false;\n+        }\n         while (iterator.hasPrevious()) {\n             E object = iterator.previous();\n             if (predicate.evaluate(object)) {",
                "raw_url": "https://github.com/apache/commons-collections/raw/0145c16a6ff8dced5e3cdb899a250dcd49ef780f/src/java/org/apache/commons/collections/iterators/FilterListIterator.java",
                "sha": "8c2d65002b5875d9f1a0a88e34687d09582628bb",
                "status": "modified"
            },
            {
                "additions": 16,
                "blob_url": "https://github.com/apache/commons-collections/blob/0145c16a6ff8dced5e3cdb899a250dcd49ef780f/src/test/org/apache/commons/collections/iterators/TestFilterListIterator.java",
                "changes": 16,
                "contents_url": "https://api.github.com/repos/apache/commons-collections/contents/src/test/org/apache/commons/collections/iterators/TestFilterListIterator.java?ref=0145c16a6ff8dced5e3cdb899a250dcd49ef780f",
                "deletions": 0,
                "filename": "src/test/org/apache/commons/collections/iterators/TestFilterListIterator.java",
                "patch": "@@ -17,12 +17,16 @@\n package org.apache.commons.collections.iterators;\n \n import java.util.ArrayList;\n+import java.util.Collection;\n import java.util.List;\n import java.util.ListIterator;\n import java.util.Random;\n \n import junit.framework.TestCase;\n import org.apache.commons.collections.Predicate;\n+import org.apache.commons.collections.PredicateUtils;\n+import org.apache.commons.collections.list.GrowthList;\n+import org.junit.Assert;\n \n /**\n  * Tests the FilterListIterator class.\n@@ -279,6 +283,18 @@ public void testFailingHasNextBug() {\n         assertEquals(expected.previous(), filtered.previous());\n     }\n \n+    /**\n+     * Test for {@link https://issues.apache.org/jira/browse/COLLECTIONS-360 COLLECTIONS-360}.\n+     */\n+    public void testCollections360() throws Throwable {\n+        Collection<Predicate<Object>> var7 = new GrowthList<Predicate<Object>>();\n+        Predicate<Object> var9 = PredicateUtils.anyPredicate(var7);\n+        FilterListIterator<Object> var13 = new FilterListIterator<Object>(var9);\n+        Assert.assertFalse(var13.hasNext());\n+        FilterListIterator<Object> var14 = new FilterListIterator<Object>(var9);\n+        Assert.assertFalse(var14.hasPrevious());\n+    }\n+\n     // Utilities\n \n     private void walkForward(ListIterator<?> expected, ListIterator<?> testing) {",
                "raw_url": "https://github.com/apache/commons-collections/raw/0145c16a6ff8dced5e3cdb899a250dcd49ef780f/src/test/org/apache/commons/collections/iterators/TestFilterListIterator.java",
                "sha": "a18514db8ade18b2e2488c0140227d36fc63bb67",
                "status": "modified"
            }
        ],
        "message": "PR: COLLECTIONS-360\nPrevent an NPE in FilterListIterator.next() and FilterListIterator.previous()\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/collections/trunk@1076034 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/commons-collections/commit/152588c28661b0dee5d9456baf8b8d0035c3739d",
        "repo": "commons-collections",
        "unit_tests": [
            "FilterListIteratorTest.java"
        ]
    },
    "commons-collections_34bc1b5": {
        "bug_id": "commons-collections_34bc1b5",
        "commit": "https://github.com/apache/commons-collections/commit/34bc1b54db9d78b983e9d48a0f1a5a1156393a95",
        "file": [
            {
                "additions": 5,
                "blob_url": "https://github.com/apache/commons-collections/blob/34bc1b54db9d78b983e9d48a0f1a5a1156393a95/src/java/org/apache/commons/collections/map/LRUMap.java",
                "changes": 5,
                "contents_url": "https://api.github.com/repos/apache/commons-collections/contents/src/java/org/apache/commons/collections/map/LRUMap.java?ref=34bc1b54db9d78b983e9d48a0f1a5a1156393a95",
                "deletions": 0,
                "filename": "src/java/org/apache/commons/collections/map/LRUMap.java",
                "patch": "@@ -191,6 +191,11 @@ protected void moveToMRU(LinkEntry entry) {\n         if (entry.after != header) {\n             modCount++;\n             // remove\n+            if(entry.before == null) {\n+                throw new IllegalStateException(\"Entry.before is null.\" + \n+                    \" Please check that your keys are immutable, and that you have used synchronization properly.\" +\n+                    \" If so, then please report this to dev@commons.apache.org as a bug.\");\n+            }\n             entry.before.after = entry.after;\n             entry.after.before = entry.before;\n             // add first",
                "raw_url": "https://github.com/apache/commons-collections/raw/34bc1b54db9d78b983e9d48a0f1a5a1156393a95/src/java/org/apache/commons/collections/map/LRUMap.java",
                "sha": "d0da4edd355baf6c7e0b26ce25885ba8e1c21664",
                "status": "modified"
            }
        ],
        "message": "Adding a state check as per COLLECTIONS-3. I got an NPE when running through tests without synchronization\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/collections/trunk@643755 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/commons-collections/commit/975baeba6172fd711f2a13db791464e6b272a120",
        "repo": "commons-collections",
        "unit_tests": [
            "LRUMapTest.java"
        ]
    }
}