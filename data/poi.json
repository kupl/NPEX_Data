{
    "poi_0167a32": {
        "bug_id": "poi_0167a32",
        "commit": "https://github.com/apache/poi/commit/0167a32f7fe195a9bcaa5ea9227dd96e3de7d4eb",
        "file": [
            {
                "additions": 10,
                "blob_url": "https://github.com/apache/poi/blob/0167a32f7fe195a9bcaa5ea9227dd96e3de7d4eb/src/ooxml/java/org/apache/poi/xslf/usermodel/XSLFTextParagraph.java",
                "changes": 12,
                "contents_url": "https://api.github.com/repos/apache/poi/contents/src/ooxml/java/org/apache/poi/xslf/usermodel/XSLFTextParagraph.java?ref=0167a32f7fe195a9bcaa5ea9227dd96e3de7d4eb",
                "deletions": 2,
                "filename": "src/ooxml/java/org/apache/poi/xslf/usermodel/XSLFTextParagraph.java",
                "patch": "@@ -752,6 +752,10 @@ public String toString(){\n     }\r\n \r\n \r\n+    /**\r\n+     * @return master style text paragraph properties, or <code>null</code> if \r\n+     * there are no master slides or the master slides do not contain a text paragraph\r\n+     */\r\n     /* package */ CTTextParagraphProperties getDefaultMasterStyle(){\r\n         CTPlaceholder ph = _shape.getCTPlaceholder();\r\n         String defaultStyleSelector;  \r\n@@ -932,7 +936,11 @@ private static boolean doubleEquals(Double d1, Double d2) {\n     public Double getDefaultFontSize() {\r\n         CTTextCharacterProperties endPr = _p.getEndParaRPr();\r\n         if (endPr == null || !endPr.isSetSz()) {\r\n-            endPr = getDefaultMasterStyle().getDefRPr();\r\n+            // inherit the font size from the master style\r\n+            CTTextParagraphProperties masterStyle = getDefaultMasterStyle();\r\n+            if (masterStyle != null) {\r\n+                endPr = masterStyle.getDefRPr();\r\n+            }\r\n         }\r\n         return (endPr == null || !endPr.isSetSz()) ? 12 : (endPr.getSz() / 100.);\r\n     }\r\n@@ -1068,4 +1076,4 @@ public boolean isHeaderOrFooter() {\n     protected XSLFTextRun newTextRun(CTRegularTextRun r) {\r\n         return new XSLFTextRun(r, this);\r\n     }\r\n-}\n\\ No newline at end of file\n+}\r",
                "raw_url": "https://github.com/apache/poi/raw/0167a32f7fe195a9bcaa5ea9227dd96e3de7d4eb/src/ooxml/java/org/apache/poi/xslf/usermodel/XSLFTextParagraph.java",
                "sha": "c5a2ce069ded361ad49af6c818c70ea4c2f30ff9",
                "status": "modified"
            }
        ],
        "message": "bug 60005: fix NPE in XSLFTextParagraph.getDefaultFontSize()\n\ngit-svn-id: https://svn.apache.org/repos/asf/poi/trunk@1756397 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/poi/commit/d4e3df319246882118d3970daec3c9ccb56e8b0e",
        "repo": "poi",
        "unit_tests": [
            "TestXSLFTextParagraph.java"
        ]
    },
    "poi_0591f0e": {
        "bug_id": "poi_0591f0e",
        "commit": "https://github.com/apache/poi/commit/0591f0edbebddaaa37afc8e8259be1fda37882af",
        "file": [
            {
                "additions": 5,
                "blob_url": "https://github.com/apache/poi/blob/0591f0edbebddaaa37afc8e8259be1fda37882af/src/java/org/apache/poi/poifs/crypt/Decryptor.java",
                "changes": 5,
                "contents_url": "https://api.github.com/repos/apache/poi/contents/src/java/org/apache/poi/poifs/crypt/Decryptor.java?ref=0591f0edbebddaaa37afc8e8259be1fda37882af",
                "deletions": 0,
                "filename": "src/java/org/apache/poi/poifs/crypt/Decryptor.java",
                "patch": "@@ -96,6 +96,11 @@ protected static int getBlockSize(int algorithm) {\n \n     protected byte[] hashPassword(EncryptionInfo info,\n                                   String password) throws NoSuchAlgorithmException {\n+        // If no password was given, use the default\n+        if (password == null) {\n+            password = DEFAULT_PASSWORD;\n+        }\n+        \n         MessageDigest sha1 = MessageDigest.getInstance(\"SHA-1\");\n         byte[] bytes;\n         try {",
                "raw_url": "https://github.com/apache/poi/raw/0591f0edbebddaaa37afc8e8259be1fda37882af/src/java/org/apache/poi/poifs/crypt/Decryptor.java",
                "sha": "9832ccea4079a675ce61aa75c68f970562246967",
                "status": "modified"
            }
        ],
        "message": "Avoid a NPE if no password was given - use the default office one instead\n\ngit-svn-id: https://svn.apache.org/repos/asf/poi/trunk@1494571 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/poi/commit/b1e02dea83b58a77a860cfa257940522224679cf",
        "repo": "poi",
        "unit_tests": [
            "TestDecryptor.java"
        ]
    },
    "poi_16c68c9": {
        "bug_id": "poi_16c68c9",
        "commit": "https://github.com/apache/poi/commit/16c68c9f05595287f96efeff5cf4ec15fd0795e8",
        "file": [
            {
                "additions": 5,
                "blob_url": "https://github.com/apache/poi/blob/16c68c9f05595287f96efeff5cf4ec15fd0795e8/src/scratchpad/src/org/apache/poi/hwpf/usermodel/Picture.java",
                "changes": 7,
                "contents_url": "https://api.github.com/repos/apache/poi/contents/src/scratchpad/src/org/apache/poi/hwpf/usermodel/Picture.java?ref=16c68c9f05595287f96efeff5cf4ec15fd0795e8",
                "deletions": 2,
                "filename": "src/scratchpad/src/org/apache/poi/hwpf/usermodel/Picture.java",
                "patch": "@@ -421,8 +421,11 @@ public String getMimeType()\n \n         if ( escherRecord instanceof EscherBSERecord )\n         {\n-            return ( (EscherBSERecord) escherRecord ).getBlipRecord()\n-                    .getPicturedata();\n+            EscherBlipRecord blip = ( (EscherBSERecord) escherRecord ).getBlipRecord();\n+            if (blip != null) {\n+                return blip.getPicturedata();\n+            \n+            }\n         }\n         return new byte[0];\n     }",
                "raw_url": "https://github.com/apache/poi/raw/16c68c9f05595287f96efeff5cf4ec15fd0795e8/src/scratchpad/src/org/apache/poi/hwpf/usermodel/Picture.java",
                "sha": "7eb3af2834fdd364a09deaae5ef6e69c45b05cfc",
                "status": "modified"
            }
        ],
        "message": "bug 60484: avoid NPE\n\ngit-svn-id: https://svn.apache.org/repos/asf/poi/trunk@1777063 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/poi/commit/d45616031e9b27859b1f884da1a0891c4def0ba5",
        "repo": "poi",
        "unit_tests": [
            "TestPicture.java"
        ]
    },
    "poi_268d7ff": {
        "bug_id": "poi_268d7ff",
        "commit": "https://github.com/apache/poi/commit/268d7ff219fab2b908a76973664a3091273e2130",
        "file": [
            {
                "additions": 8,
                "blob_url": "https://github.com/apache/poi/blob/268d7ff219fab2b908a76973664a3091273e2130/src/scratchpad/src/org/apache/poi/hwpf/usermodel/TableRow.java",
                "changes": 13,
                "contents_url": "https://api.github.com/repos/apache/poi/contents/src/scratchpad/src/org/apache/poi/hwpf/usermodel/TableRow.java?ref=268d7ff219fab2b908a76973664a3091273e2130",
                "deletions": 5,
                "filename": "src/scratchpad/src/org/apache/poi/hwpf/usermodel/TableRow.java",
                "patch": "@@ -174,12 +174,15 @@ private void initCells()\n             cells.add( tableCell );\n         }\n \n-        TableCell lastCell = cells.get( cells.size() - 1 );\n-        if ( lastCell.numParagraphs() == 1\n-                && ( lastCell.getParagraph( 0 ).isTableRowEnd() ) )\n+        if ( !cells.isEmpty() )\n         {\n-            // remove \"fake\" cell\n-            cells.remove( cells.size() - 1 );\n+            TableCell lastCell = cells.get( cells.size() - 1 );\n+            if ( lastCell.numParagraphs() == 1\n+                    && ( lastCell.getParagraph( 0 ).isTableRowEnd() ) )\n+            {\n+                // remove \"fake\" cell\n+                cells.remove( cells.size() - 1 );\n+            }\n         }\n \n         if ( cells.size() != expectedCellsCount )",
                "raw_url": "https://github.com/apache/poi/raw/268d7ff219fab2b908a76973664a3091273e2130/src/scratchpad/src/org/apache/poi/hwpf/usermodel/TableRow.java",
                "sha": "0d861dac86e306de7e24459e4d4c5fc85562b606",
                "status": "modified"
            }
        ],
        "message": "NPE check\n\ngit-svn-id: https://svn.apache.org/repos/asf/poi/trunk@1145405 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/poi/commit/1cd82a49678b443e70df50abd0472ef3dc4f3fa2",
        "repo": "poi",
        "unit_tests": [
            "TestTableRow.java"
        ]
    },
    "poi_3ef803b": {
        "bug_id": "poi_3ef803b",
        "commit": "https://github.com/apache/poi/commit/3ef803b932608d76d19f4c9116f8fdadff61c77d",
        "file": [
            {
                "additions": 21,
                "blob_url": "https://github.com/apache/poi/blob/3ef803b932608d76d19f4c9116f8fdadff61c77d/src/java/org/apache/poi/hssf/usermodel/HSSFSheet.java",
                "changes": 41,
                "contents_url": "https://api.github.com/repos/apache/poi/contents/src/java/org/apache/poi/hssf/usermodel/HSSFSheet.java?ref=3ef803b932608d76d19f4c9116f8fdadff61c77d",
                "deletions": 20,
                "filename": "src/java/org/apache/poi/hssf/usermodel/HSSFSheet.java",
                "patch": "@@ -1748,27 +1748,28 @@ public void autoSizeColumn(short column) {\n                 } else if (cell.getCellType() == HSSFCell.CELL_TYPE_BOOLEAN) {\n                     sval = String.valueOf(cell.getBooleanCellValue());\n                 }\n+                if(sval != null) {\n+                    String txt = sval + defaultChar;\n+                    str = new AttributedString(txt);\n+                    copyAttributes(font, str, 0, txt.length());\n \n-                String txt = sval + defaultChar;\n-                str = new AttributedString(txt);\n-                copyAttributes(font, str, 0, txt.length());\n-\n-                layout = new TextLayout(str.getIterator(), frc);\n-                if(style.getRotation() != 0){\n-                    /*\n-                     * Transform the text using a scale so that it's height is increased by a multiple of the leading,\n-                     * and then rotate the text before computing the bounds. The scale results in some whitespace around\n-                     * the unrotated top and bottom of the text that normally wouldn't be present if unscaled, but\n-                     * is added by the standard Excel autosize.\n-                     */\n-                    AffineTransform trans = new AffineTransform();\n-                    trans.concatenate(AffineTransform.getRotateInstance(style.getRotation()*2.0*Math.PI/360.0));\n-                    trans.concatenate(\n-                    AffineTransform.getScaleInstance(1, fontHeightMultiple)\n-                    );\n-                    width = Math.max(width, layout.getOutline(trans).getBounds().getWidth() / defaultCharWidth);\n-                } else {\n-                    width = Math.max(width, layout.getBounds().getWidth() / defaultCharWidth);\n+                    layout = new TextLayout(str.getIterator(), frc);\n+                    if(style.getRotation() != 0){\n+                        /*\n+                         * Transform the text using a scale so that it's height is increased by a multiple of the leading,\n+                         * and then rotate the text before computing the bounds. The scale results in some whitespace around\n+                         * the unrotated top and bottom of the text that normally wouldn't be present if unscaled, but\n+                         * is added by the standard Excel autosize.\n+                         */\n+                        AffineTransform trans = new AffineTransform();\n+                        trans.concatenate(AffineTransform.getRotateInstance(style.getRotation()*2.0*Math.PI/360.0));\n+                        trans.concatenate(\n+                        AffineTransform.getScaleInstance(1, fontHeightMultiple)\n+                        );\n+                        width = Math.max(width, layout.getOutline(trans).getBounds().getWidth() / defaultCharWidth);\n+                    } else {\n+                        width = Math.max(width, layout.getBounds().getWidth() / defaultCharWidth);\n+                    }\n                 }\n             }\n ",
                "raw_url": "https://github.com/apache/poi/raw/3ef803b932608d76d19f4c9116f8fdadff61c77d/src/java/org/apache/poi/hssf/usermodel/HSSFSheet.java",
                "sha": "0250a4cbaab23ea830e847e518fbbb8a01d4d79a",
                "status": "modified"
            }
        ],
        "message": "add a check to prevent NPE in HSSFSheet.autoSizeColumn(). See Bug 44246\n\ngit-svn-id: https://svn.apache.org/repos/asf/poi/trunk@613396 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/poi/commit/de3e7e7838d0b298c8e3059f45c9ee2b44413c6b",
        "repo": "poi",
        "unit_tests": [
            "TestHSSFSheet.java"
        ]
    },
    "poi_4ce3e5d": {
        "bug_id": "poi_4ce3e5d",
        "commit": "https://github.com/apache/poi/commit/4ce3e5def53c893012d6ba709e9beff95a149d48",
        "file": [
            {
                "additions": 10,
                "blob_url": "https://github.com/apache/poi/blob/4ce3e5def53c893012d6ba709e9beff95a149d48/src/ooxml/java/org/apache/poi/xssf/eventusermodel/XSSFReader.java",
                "changes": 10,
                "contents_url": "https://api.github.com/repos/apache/poi/contents/src/ooxml/java/org/apache/poi/xssf/eventusermodel/XSSFReader.java?ref=4ce3e5def53c893012d6ba709e9beff95a149d48",
                "deletions": 0,
                "filename": "src/ooxml/java/org/apache/poi/xssf/eventusermodel/XSSFReader.java",
                "patch": "@@ -37,6 +37,8 @@ Licensed to the Apache Software Foundation (ASF) under one or more\n import org.apache.poi.openxml4j.opc.PackageRelationshipCollection;\n import org.apache.poi.openxml4j.opc.PackageRelationshipTypes;\n import org.apache.poi.openxml4j.opc.PackagingURIHelper;\n+import org.apache.poi.util.POILogFactory;\n+import org.apache.poi.util.POILogger;\n import org.apache.poi.xssf.model.CommentsTable;\n import org.apache.poi.xssf.model.SharedStringsTable;\n import org.apache.poi.xssf.model.StylesTable;\n@@ -57,6 +59,9 @@ Licensed to the Apache Software Foundation (ASF) under one or more\n  *  for XSSF.\n  */\n public class XSSFReader {\n+\n+    private static final POILogger LOGGER = POILogFactory.getLogger(XSSFReader.class);\n+\n     private OPCPackage pkg;\n     private PackagePart workbookPart;\n \n@@ -318,6 +323,11 @@ public CommentsTable getSheetComments() {\n                   PackageRelationship drawings = drawingsList.getRelationship(i);\n                   PackagePartName drawingsName = PackagingURIHelper.createPartName(drawings.getTargetURI());\n                   PackagePart drawingsPart = sheetPkg.getPackage().getPart(drawingsName);\n+                  if (drawingsPart == null) {\n+                      //parts can go missing; Excel ignores them silently -- TIKA-2134\n+                      LOGGER.log(POILogger.WARN, \"Missing drawing: \"+drawingsName +\". Skipping it.\");\n+                      continue;\n+                  }\n                   XSSFDrawing drawing = new XSSFDrawing(drawingsPart);\n                   for (XSSFShape shape : drawing.getShapes()){\n                       shapes.add(shape);",
                "raw_url": "https://github.com/apache/poi/raw/4ce3e5def53c893012d6ba709e9beff95a149d48/src/ooxml/java/org/apache/poi/xssf/eventusermodel/XSSFReader.java",
                "sha": "e5c9cb25b10333e922d7fa51b3c2c7af0e7be1e4",
                "status": "modified"
            }
        ],
        "message": "bug 60584 -- avoid NPE by checking for null/missing image in XSSFReader's getShapes().\n\ngit-svn-id: https://svn.apache.org/repos/asf/poi/trunk@1778664 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/poi/commit/bdc2e2fe04bcf322d790c1c633fcc4c392b07458",
        "repo": "poi",
        "unit_tests": [
            "TestXSSFReader.java"
        ]
    },
    "poi_4eb322b": {
        "bug_id": "poi_4eb322b",
        "commit": "https://github.com/apache/poi/commit/4eb322bae7e3fc8353f3a1f5290562ccf019a9e4",
        "file": [
            {
                "additions": 3,
                "blob_url": "https://github.com/apache/poi/blob/4eb322bae7e3fc8353f3a1f5290562ccf019a9e4/src/scratchpad/src/org/apache/poi/hwpf/model/StyleSheet.java",
                "changes": 5,
                "contents_url": "https://api.github.com/repos/apache/poi/contents/src/scratchpad/src/org/apache/poi/hwpf/model/StyleSheet.java?ref=4eb322bae7e3fc8353f3a1f5290562ccf019a9e4",
                "deletions": 2,
                "filename": "src/scratchpad/src/org/apache/poi/hwpf/model/StyleSheet.java",
                "patch": "@@ -278,14 +278,15 @@ private void createChp(int istd)\n           CharacterProperties parentCHP = new CharacterProperties();\n           if(baseIndex != NIL_STYLE)\n           {\n-\n               parentCHP = _styleDescriptions[baseIndex].getCHP();\n               if(parentCHP == null)\n               {\n                   createChp(baseIndex);\n                   parentCHP = _styleDescriptions[baseIndex].getCHP();\n               }\n-\n+              if(parentCHP == null) {\n+                  parentCHP = new CharacterProperties();\n+              }\n           }\n \n           chp = CharacterSprmUncompressor.uncompressCHP(parentCHP, chpx, 0);",
                "raw_url": "https://github.com/apache/poi/raw/4eb322bae7e3fc8353f3a1f5290562ccf019a9e4/src/scratchpad/src/org/apache/poi/hwpf/model/StyleSheet.java",
                "sha": "ba213b7a4e477181db205ed6718700699ca89498",
                "status": "modified"
            }
        ],
        "message": "Fix bug 54725 - HWPF where no parent style CHP exists, use an empty\n set when processing the style to avoid a NPE\n\ngit-svn-id: https://svn.apache.org/repos/asf/poi/trunk@1614926 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/poi/commit/a4e29760f894f8af8a1b7225cbcc3df3eb000251",
        "repo": "poi",
        "unit_tests": [
            "TestStyleSheet.java"
        ]
    },
    "poi_735760f": {
        "bug_id": "poi_735760f",
        "commit": "https://github.com/apache/poi/commit/735760f21e91a0e40efe7bff30477099b7d31de0",
        "file": [
            {
                "additions": 8,
                "blob_url": "https://github.com/apache/poi/blob/735760f21e91a0e40efe7bff30477099b7d31de0/src/scratchpad/src/org/apache/poi/hsmf/extractor/OutlookTextExtactor.java",
                "changes": 11,
                "contents_url": "https://api.github.com/repos/apache/poi/contents/src/scratchpad/src/org/apache/poi/hsmf/extractor/OutlookTextExtactor.java?ref=735760f21e91a0e40efe7bff30477099b7d31de0",
                "deletions": 3,
                "filename": "src/scratchpad/src/org/apache/poi/hsmf/extractor/OutlookTextExtactor.java",
                "patch": "@@ -25,6 +25,7 @@ Licensed to the Apache Software Foundation (ASF) under one or more\n import org.apache.poi.POIOLE2TextExtractor;\n import org.apache.poi.hsmf.MAPIMessage;\n import org.apache.poi.hsmf.datatypes.AttachmentChunks;\n+import org.apache.poi.hsmf.datatypes.StringChunk;\n import org.apache.poi.hsmf.exceptions.ChunkNotFoundException;\n import org.apache.poi.poifs.filesystem.DirectoryNode;\n import org.apache.poi.poifs.filesystem.NPOIFSFileSystem;\n@@ -65,6 +66,7 @@ public static void main(String[] args) throws Exception {\n                new NPOIFSFileSystem(new File(filename))\n          );\n          System.out.println( extractor.getText() );\n+         extractor.close();\n       }\n    }\n \n@@ -146,12 +148,15 @@ public String getText() {\n       // Display attachment names\n       // To get the attachments, use ExtractorFactory\n       for(AttachmentChunks att : msg.getAttachmentFiles()) {\n-         String ats = att.attachLongFileName.getValue();\n+         StringChunk name = att.attachLongFileName;\n+         if (name == null) name = att.attachFileName;\n+         String attName = name.getValue();\n+          \n          if(att.attachMimeTag != null && \n                att.attachMimeTag.getValue() != null) {\n-            ats = att.attachMimeTag.getValue() + \" = \" + ats; \n+             attName = att.attachMimeTag.getValue() + \" = \" + attName; \n          }\n-         s.append(\"Attachment: \" + ats + \"\\n\");\n+         s.append(\"Attachment: \" + attName + \"\\n\");\n       }\n       \n       try {",
                "raw_url": "https://github.com/apache/poi/raw/735760f21e91a0e40efe7bff30477099b7d31de0/src/scratchpad/src/org/apache/poi/hsmf/extractor/OutlookTextExtactor.java",
                "sha": "4cdaf16f82d661a859b9f1fd6ed983758f1099fd",
                "status": "modified"
            },
            {
                "additions": 19,
                "blob_url": "https://github.com/apache/poi/blob/735760f21e91a0e40efe7bff30477099b7d31de0/src/scratchpad/testcases/org/apache/poi/hsmf/extractor/TestOutlookTextExtractor.java",
                "changes": 19,
                "contents_url": "https://api.github.com/repos/apache/poi/contents/src/scratchpad/testcases/org/apache/poi/hsmf/extractor/TestOutlookTextExtractor.java?ref=735760f21e91a0e40efe7bff30477099b7d31de0",
                "deletions": 0,
                "filename": "src/scratchpad/testcases/org/apache/poi/hsmf/extractor/TestOutlookTextExtractor.java",
                "patch": "@@ -209,6 +209,25 @@ public void testWithAttachments() throws Exception {\n       ext.close();\n    }\n    \n+   public void testWithAttachedMessage() throws Exception {\n+       POIFSFileSystem simple = new POIFSFileSystem(\n+               new FileInputStream(samples.getFile(\"58214_with_attachment.msg\"))\n+         );\n+         MAPIMessage msg = new MAPIMessage(simple);\n+         OutlookTextExtactor ext = new OutlookTextExtactor(msg);\n+         String text = ext.getText();\n+         \n+         // Check we got bits from the main message\n+         assertContains(text, \"Master mail\");\n+         assertContains(text, \"ante in lacinia euismod\");\n+         \n+         // But not the attached message\n+         assertNotContained(text, \"Test mail attachment\");\n+         assertNotContained(text, \"Lorem ipsum dolor sit\");\n+         \n+         ext.close();\n+   }\n+   \n    public void testEncodings() throws Exception {\n       POIFSFileSystem simple = new POIFSFileSystem(\n             new FileInputStream(samples.getFile(\"chinese-traditional.msg\"))",
                "raw_url": "https://github.com/apache/poi/raw/735760f21e91a0e40efe7bff30477099b7d31de0/src/scratchpad/testcases/org/apache/poi/hsmf/extractor/TestOutlookTextExtractor.java",
                "sha": "5550adbb619c2778d4b66cf21837d76b7c9218f8",
                "status": "modified"
            },
            {
                "additions": 6,
                "blob_url": "https://github.com/apache/poi/blob/735760f21e91a0e40efe7bff30477099b7d31de0/src/testcases/org/apache/poi/POITestCase.java",
                "changes": 6,
                "contents_url": "https://api.github.com/repos/apache/poi/contents/src/testcases/org/apache/poi/POITestCase.java?ref=735760f21e91a0e40efe7bff30477099b7d31de0",
                "deletions": 0,
                "filename": "src/testcases/org/apache/poi/POITestCase.java",
                "patch": "@@ -33,6 +33,12 @@ public static void assertContains(String haystack, String needle) {\n               haystack.contains(needle)\n         );\n      }\n+    public static void assertNotContained(String haystack, String needle) {\n+        assertFalse(\n+              \"Unexpectedly found text '\" + needle + \"' in text:\\n\" + haystack,\n+              haystack.contains(needle)\n+        );\n+     }\n     \n     public static <T> void assertEquals(T[] expected, T[] actual)\n     {",
                "raw_url": "https://github.com/apache/poi/raw/735760f21e91a0e40efe7bff30477099b7d31de0/src/testcases/org/apache/poi/POITestCase.java",
                "sha": "3d0cea51dc30983cc2e58d7a6c1a665054e6493f",
                "status": "modified"
            }
        ],
        "message": "NPE fix for text extraction from MSG files with only a short name\n\ngit-svn-id: https://svn.apache.org/repos/asf/poi/trunk@1694255 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/poi/commit/c90272d65ecb7167f9ed0dd271a9ce6f26692293",
        "repo": "poi",
        "unit_tests": [
            "TestPOITestCase.java"
        ]
    },
    "poi_7b15cc3": {
        "bug_id": "poi_7b15cc3",
        "commit": "https://github.com/apache/poi/commit/7b15cc372e8f5564bb6e781f6a62fa2f0dae1a93",
        "file": [
            {
                "additions": 23,
                "blob_url": "https://github.com/apache/poi/blob/7b15cc372e8f5564bb6e781f6a62fa2f0dae1a93/src/ooxml/java/org/apache/poi/xwpf/usermodel/XWPFParagraph.java",
                "changes": 30,
                "contents_url": "https://api.github.com/repos/apache/poi/contents/src/ooxml/java/org/apache/poi/xwpf/usermodel/XWPFParagraph.java?ref=7b15cc372e8f5564bb6e781f6a62fa2f0dae1a93",
                "deletions": 7,
                "filename": "src/ooxml/java/org/apache/poi/xwpf/usermodel/XWPFParagraph.java",
                "patch": "@@ -817,14 +817,30 @@ public void setBorderBetween(Borders border) {\n      * @return boolean - if page break is set\n      */\n     public boolean isPageBreak() {\n-        CTPPr ppr = getCTPPr();\n-        CTOnOff ctPageBreak = ppr.isSetPageBreakBefore() ? ppr\n-                .getPageBreakBefore() : null;\n-        if (ctPageBreak != null\n-                && ctPageBreak.getVal().intValue() == STOnOff.INT_TRUE) {\n-            return true;\n+        final CTPPr ppr = getCTPPr();\n+        final CTOnOff ctPageBreak = ppr.isSetPageBreakBefore() ? ppr.getPageBreakBefore() : null;\n+        if (ctPageBreak == null) {\n+            return false;\n+        }\n+        return isTruelike(ctPageBreak.getVal(), false);\n+    }\n+\n+    private static boolean isTruelike(final STOnOff.Enum value, boolean defaultValue) {\n+        if (value == null) {\n+            return defaultValue;\n+        }\n+        switch (value.intValue()) {\n+            case STOnOff.INT_TRUE:\n+            case STOnOff.INT_X_1:\n+            case STOnOff.INT_ON:\n+                return true;\n+            case STOnOff.INT_FALSE:\n+            case STOnOff.INT_X_0:\n+            case STOnOff.INT_OFF:\n+                return false;\n+            default:\n+                return defaultValue;\n         }\n-        return false;\n     }\n \n     /**",
                "raw_url": "https://github.com/apache/poi/raw/7b15cc372e8f5564bb6e781f6a62fa2f0dae1a93/src/ooxml/java/org/apache/poi/xwpf/usermodel/XWPFParagraph.java",
                "sha": "64af4f4a6e2190cdbadb1088dffacf87fd1488e2",
                "status": "modified"
            }
        ],
        "message": "github-53: fix NPE when iterating over paragraphs in certain *.docx files. Thanks to Praful Kumar Vaishnav! This closes #53.\nhttps://github.com/apache/poi/pull/53\n\ngit-svn-id: https://svn.apache.org/repos/asf/poi/trunk@1795254 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/poi/commit/980f319270f3eff03d1db16584a335a21dae8eaf",
        "repo": "poi",
        "unit_tests": [
            "TestXWPFParagraph.java"
        ]
    },
    "poi_7e74976": {
        "bug_id": "poi_7e74976",
        "commit": "https://github.com/apache/poi/commit/7e74976c04fb51724dff868585cecd63b3e9338b",
        "file": [
            {
                "additions": 13,
                "blob_url": "https://github.com/apache/poi/blob/7e74976c04fb51724dff868585cecd63b3e9338b/src/scratchpad/src/org/apache/poi/hwpf/model/ListTables.java",
                "changes": 13,
                "contents_url": "https://api.github.com/repos/apache/poi/contents/src/scratchpad/src/org/apache/poi/hwpf/model/ListTables.java?ref=7e74976c04fb51724dff868585cecd63b3e9338b",
                "deletions": 0,
                "filename": "src/scratchpad/src/org/apache/poi/hwpf/model/ListTables.java",
                "patch": "@@ -135,9 +135,22 @@ public int getOverrideIndexFromListID( int lsid )\n         return _plfLfo.getIlfoByLsid( lsid );\n     }\n \n+    /**\n+     * Get the ListLevel for a given lsid and level\n+     * @param lsid\n+     * @param level\n+     * @return ListLevel if found, or <code>null</code> if ListData can't be found or if level is > that available\n+     */\n   public ListLevel getLevel(int lsid, int level)\n   {\n     ListData lst = _listMap.get(Integer.valueOf(lsid));\n+    if (lst == null) {\n+        if (log.check(POILogger.WARN)) {\n+            log.log(POILogger.WARN, \"ListData for \" +\n+                    lsid + \" was null.\");\n+        }\n+        return null;\n+    }\n     if(level < lst.numLevels()) {\n     \tListLevel lvl = lst.getLevels()[level];\n     \treturn lvl;",
                "raw_url": "https://github.com/apache/poi/raw/7e74976c04fb51724dff868585cecd63b3e9338b/src/scratchpad/src/org/apache/poi/hwpf/model/ListTables.java",
                "sha": "d3865d25ce234ed42b0357a7341b39bd7d64422b",
                "status": "modified"
            }
        ],
        "message": "Bug 60574 prevent rare NPE in ListTables\n\ngit-svn-id: https://svn.apache.org/repos/asf/poi/trunk@1778320 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/poi/commit/cf37b13c3ab1277fdaa722d3f0abc5fe8b7ebe3c",
        "repo": "poi",
        "unit_tests": [
            "TestListTables.java"
        ]
    },
    "poi_c6f365f": {
        "bug_id": "poi_c6f365f",
        "commit": "https://github.com/apache/poi/commit/c6f365f4e438dc66d8810773c33e80d4feed82ca",
        "file": [
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/poi/blob/c6f365f4e438dc66d8810773c33e80d4feed82ca/src/ooxml/java/org/apache/poi/xssf/usermodel/helpers/ColumnHelper.java",
                "changes": 1,
                "contents_url": "https://api.github.com/repos/apache/poi/contents/src/ooxml/java/org/apache/poi/xssf/usermodel/helpers/ColumnHelper.java?ref=c6f365f4e438dc66d8810773c33e80d4feed82ca",
                "deletions": 0,
                "filename": "src/ooxml/java/org/apache/poi/xssf/usermodel/helpers/ColumnHelper.java",
                "patch": "@@ -319,6 +319,7 @@ private boolean columnExists(CTCols cols, long min, long max) {\n     }\n \n     public int getIndexOfColumn(CTCols cols, CTCol searchCol) {\n+        if (cols == null || searchCol == null) return -1;\n         int i = 0;\n         for (CTCol col : cols.getColArray()) {\n             if (col.getMin() == searchCol.getMin() && col.getMax() == searchCol.getMax()) {",
                "raw_url": "https://github.com/apache/poi/raw/c6f365f4e438dc66d8810773c33e80d4feed82ca/src/ooxml/java/org/apache/poi/xssf/usermodel/helpers/ColumnHelper.java",
                "sha": "b27100656beae45abe195a4b59afc2dddfceacd7",
                "status": "modified"
            }
        ],
        "message": "fix NPE\n\ngit-svn-id: https://svn.apache.org/repos/asf/poi/trunk@1761844 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/poi/commit/5b6d4546c22e98d7e43bb9b1e65dcedf3be1348a",
        "repo": "poi",
        "unit_tests": [
            "TestColumnHelper.java"
        ]
    },
    "poi_cfde042": {
        "bug_id": "poi_cfde042",
        "commit": "https://github.com/apache/poi/commit/cfde042818dbac0b16072a05f31f78e5b72ccce3",
        "file": [
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/poi/blob/cfde042818dbac0b16072a05f31f78e5b72ccce3/src/java/org/apache/poi/hssf/record/NameRecord.java",
                "changes": 3,
                "contents_url": "https://api.github.com/repos/apache/poi/contents/src/java/org/apache/poi/hssf/record/NameRecord.java?ref=cfde042818dbac0b16072a05f31f78e5b72ccce3",
                "deletions": 1,
                "filename": "src/java/org/apache/poi/hssf/record/NameRecord.java",
                "patch": "@@ -755,7 +755,8 @@ public String toString() {\n             .append(\"\\n\");\n         buffer.append(\"    .Name (Unicode text)  = \").append( field_12_name_text )\n             .append(\"\\n\");\n-        buffer.append(\"    .Formula data (RPN token array without size field)      = \").append( HexDump.toHex( field_13_raw_name_definition ) )\n+        buffer.append(\"    .Formula data (RPN token array without size field)      = \").append( HexDump.toHex( \n+                       ((field_13_raw_name_definition != null) ? field_13_raw_name_definition : new byte[0] ) ) )\n             .append(\"\\n\");\n         buffer.append(\"    .Menu text (Unicode string without length field)        = \").append( field_14_custom_menu_text )\n             .append(\"\\n\");",
                "raw_url": "https://github.com/apache/poi/raw/cfde042818dbac0b16072a05f31f78e5b72ccce3/src/java/org/apache/poi/hssf/record/NameRecord.java",
                "sha": "be3c9d6c05a67b1f6a243643189256456433bbff",
                "status": "modified"
            }
        ],
        "message": "fixed bug http://nagoya.apache.org/bugzilla/show_bug.cgi?id=13092 NameRecord\nno longer throws an NPE.  I think this is due to unknown PTGs. -Andy\nPR:\nObtained from:\nSubmitted by:\nReviewed by:\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/poi/trunk@352875 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/poi/commit/e191c1b553a363ce49f79c2419d6862fa89243b9",
        "repo": "poi",
        "unit_tests": [
            "TestNameRecord.java"
        ]
    },
    "poi_d52b3ed": {
        "bug_id": "poi_d52b3ed",
        "commit": "https://github.com/apache/poi/commit/d52b3ed45202198b67610d262988b6d7d80ff5e8",
        "file": [
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/poi/blob/d52b3ed45202198b67610d262988b6d7d80ff5e8/src/java/org/apache/poi/hssf/record/LbsDataSubRecord.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/poi/contents/src/java/org/apache/poi/hssf/record/LbsDataSubRecord.java?ref=d52b3ed45202198b67610d262988b6d7d80ff5e8",
                "deletions": 1,
                "filename": "src/java/org/apache/poi/hssf/record/LbsDataSubRecord.java",
                "patch": "@@ -243,7 +243,7 @@ public String toString() {\n         sb.append(\"[ftLbsData]\\n\");\r\n         sb.append(\"    .unknownShort1 =\").append(HexDump.shortToHex(_cbFContinued)).append(\"\\n\");\r\n         sb.append(\"    .formula        = \").append('\\n');\r\n-        sb.append(_linkPtg.toString()).append(_linkPtg.getRVAType()).append('\\n');\r\n+        if(_linkPtg != null) sb.append(_linkPtg.toString()).append(_linkPtg.getRVAType()).append('\\n');\r\n         sb.append(\"    .nEntryCount   =\").append(HexDump.shortToHex(_cLines)).append(\"\\n\");\r\n         sb.append(\"    .selEntryIx    =\").append(HexDump.shortToHex(_iSel)).append(\"\\n\");\r\n         sb.append(\"    .style         =\").append(HexDump.shortToHex(_flags)).append(\"\\n\");\r",
                "raw_url": "https://github.com/apache/poi/raw/d52b3ed45202198b67610d262988b6d7d80ff5e8/src/java/org/apache/poi/hssf/record/LbsDataSubRecord.java",
                "sha": "57ebb203965e77c9c65682c02b5eda99c16a7068",
                "status": "modified"
            }
        ],
        "message": "fixed possible NPE in LbsDataSubRecord.toString()\n\ngit-svn-id: https://svn.apache.org/repos/asf/poi/trunk@892461 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/poi/commit/bed01967f0dd8dcc012b5011f6778f51d2d573c9",
        "repo": "poi",
        "unit_tests": [
            "TestLbsDataSubRecord.java"
        ]
    },
    "poi_d76ef83": {
        "bug_id": "poi_d76ef83",
        "commit": "https://github.com/apache/poi/commit/d76ef83dc62f185838acf7c3731fb486c8b36b1a",
        "file": [
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/poi/blob/d76ef83dc62f185838acf7c3731fb486c8b36b1a/src/ooxml/java/org/apache/poi/xwpf/usermodel/XWPFRun.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/poi/contents/src/ooxml/java/org/apache/poi/xwpf/usermodel/XWPFRun.java?ref=d76ef83dc62f185838acf7c3731fb486c8b36b1a",
                "deletions": 1,
                "filename": "src/ooxml/java/org/apache/poi/xwpf/usermodel/XWPFRun.java",
                "patch": "@@ -1077,7 +1077,7 @@ public String text() {\n                 if (ctfldChar.getFldCharType() == STFldCharType.BEGIN) {\n                     if (ctfldChar.getFfData() != null) {\n                         for (CTFFCheckBox checkBox : ctfldChar.getFfData().getCheckBoxList()) {\n-                            if (checkBox.getDefault().getVal() == STOnOff.X_1) {\n+                            if (checkBox.getDefault() != null && checkBox.getDefault().getVal() == STOnOff.X_1) {\n                                 text.append(\"|X|\");\n                             } else {\n                                 text.append(\"|_|\");",
                "raw_url": "https://github.com/apache/poi/raw/d76ef83dc62f185838acf7c3731fb486c8b36b1a/src/ooxml/java/org/apache/poi/xwpf/usermodel/XWPFRun.java",
                "sha": "c2718ab43ca6ee5b4732bf3084de3a1f1307ac88",
                "status": "modified"
            }
        ],
        "message": "BUG-60286 avoid NPE XWPFRun.  Didn't add unit test or document...didn't seem to be worth it.\n\ngit-svn-id: https://svn.apache.org/repos/asf/poi/trunk@1765863 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/poi/commit/489bebba0ee749cc961ce092bb4007d7c23343d2",
        "repo": "poi",
        "unit_tests": [
            "TestXWPFRun.java"
        ]
    },
    "poi_f1b20be": {
        "bug_id": "poi_f1b20be",
        "commit": "https://github.com/apache/poi/commit/f1b20beca1975cd53c5337ad94b7cc516c158129",
        "file": [
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/poi/blob/f1b20beca1975cd53c5337ad94b7cc516c158129/src/documentation/content/xdocs/changes.xml",
                "changes": 1,
                "contents_url": "https://api.github.com/repos/apache/poi/contents/src/documentation/content/xdocs/changes.xml?ref=f1b20beca1975cd53c5337ad94b7cc516c158129",
                "deletions": 0,
                "filename": "src/documentation/content/xdocs/changes.xml",
                "patch": "@@ -37,6 +37,7 @@\n \n \t\t<!-- Don't forget to update status.xml too! -->\n         <release version=\"3.5-beta5\" date=\"2008-??-??\">\n+           <action dev=\"POI-DEVELOPERS\" type=\"fix\">46472 - Avoid NPE in HPSFPropertiesExtractor when no properties exist</action>\n            <action dev=\"POI-DEVELOPERS\" type=\"fix\">46479 - fixed bugs related to cached formula values and HSSFFormulaEvaluator.evaluateInCell()</action>\n            <action dev=\"POI-DEVELOPERS\" type=\"add\">45031 - added implementation for CHOOSE() function</action>\n            <action dev=\"POI-DEVELOPERS\" type=\"fix\">46361 - resolve licensing issues around the HDGF resource file, chunks_parse_cmds.tbl</action>",
                "raw_url": "https://github.com/apache/poi/raw/f1b20beca1975cd53c5337ad94b7cc516c158129/src/documentation/content/xdocs/changes.xml",
                "sha": "63002aae8da6e3fc6fd27174c5273bdd4f0e5829",
                "status": "modified"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/poi/blob/f1b20beca1975cd53c5337ad94b7cc516c158129/src/documentation/content/xdocs/status.xml",
                "changes": 1,
                "contents_url": "https://api.github.com/repos/apache/poi/contents/src/documentation/content/xdocs/status.xml?ref=f1b20beca1975cd53c5337ad94b7cc516c158129",
                "deletions": 0,
                "filename": "src/documentation/content/xdocs/status.xml",
                "patch": "@@ -34,6 +34,7 @@\n \t<!-- Don't forget to update changes.xml too! -->\n     <changes>\n         <release version=\"3.5-beta5\" date=\"2008-??-??\">\n+           <action dev=\"POI-DEVELOPERS\" type=\"fix\">46472 - Avoid NPE in HPSFPropertiesExtractor when no properties exist</action>\n            <action dev=\"POI-DEVELOPERS\" type=\"fix\">46479 - fixed bugs related to cached formula values and HSSFFormulaEvaluator.evaluateInCell()</action>\n            <action dev=\"POI-DEVELOPERS\" type=\"add\">45031 - added implementation for CHOOSE() function</action>\n            <action dev=\"POI-DEVELOPERS\" type=\"fix\">46361 - resolve licensing issues around the HDGF resource file, chunks_parse_cmds.tbl</action>",
                "raw_url": "https://github.com/apache/poi/raw/f1b20beca1975cd53c5337ad94b7cc516c158129/src/documentation/content/xdocs/status.xml",
                "sha": "8878fce6f8cfb4483c3334ae15b1fe0853f78c49",
                "status": "modified"
            },
            {
                "additions": 7,
                "blob_url": "https://github.com/apache/poi/blob/f1b20beca1975cd53c5337ad94b7cc516c158129/src/java/org/apache/poi/hpsf/extractor/HPSFPropertiesExtractor.java",
                "changes": 12,
                "contents_url": "https://api.github.com/repos/apache/poi/contents/src/java/org/apache/poi/hpsf/extractor/HPSFPropertiesExtractor.java?ref=f1b20beca1975cd53c5337ad94b7cc516c158129",
                "deletions": 5,
                "filename": "src/java/org/apache/poi/hpsf/extractor/HPSFPropertiesExtractor.java",
                "patch": "@@ -56,11 +56,13 @@ public String getDocumentSummaryInformationText() {\n \t\t\n \t\t// Now custom ones\n \t\tCustomProperties cps = dsi.getCustomProperties();\n-\t\tIterator keys = cps.keySet().iterator();\n-\t\twhile(keys.hasNext()) {\n-\t\t\tString key = (String)keys.next();\n-\t\t\tString val = getPropertyValueText( cps.get(key) );\n-\t\t\ttext.append(key + \" = \" + val + \"\\n\");\n+\t\tif(cps != null) {\n+\t\t\tIterator keys = cps.keySet().iterator();\n+\t\t\twhile(keys.hasNext()) {\n+\t\t\t\tString key = (String)keys.next();\n+\t\t\t\tString val = getPropertyValueText( cps.get(key) );\n+\t\t\t\ttext.append(key + \" = \" + val + \"\\n\");\n+\t\t\t}\n \t\t}\n \t\t\n \t\t// All done",
                "raw_url": "https://github.com/apache/poi/raw/f1b20beca1975cd53c5337ad94b7cc516c158129/src/java/org/apache/poi/hpsf/extractor/HPSFPropertiesExtractor.java",
                "sha": "ca1cfb46dd62a4ee8543645bd34a68bd7d357245",
                "status": "modified"
            }
        ],
        "message": "Fix bug #46472 - Avoid NPE in HPSFPropertiesExtractor when no properties exist\n\ngit-svn-id: https://svn.apache.org/repos/asf/poi/trunk@732058 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/poi/commit/96c48a981c682b69a18ae5b77bfea2e07f4cc53f",
        "repo": "poi",
        "unit_tests": [
            "TestHPSFPropertiesExtractor.java"
        ]
    },
    "poi_fac34b6": {
        "bug_id": "poi_fac34b6",
        "commit": "https://github.com/apache/poi/commit/fac34b6740ae41756588c2e04e7087f9b1c238ca",
        "file": [
            {
                "additions": 8,
                "blob_url": "https://github.com/apache/poi/blob/fac34b6740ae41756588c2e04e7087f9b1c238ca/src/java/org/apache/poi/poifs/crypt/CryptoFunctions.java",
                "changes": 8,
                "contents_url": "https://api.github.com/repos/apache/poi/contents/src/java/org/apache/poi/poifs/crypt/CryptoFunctions.java?ref=fac34b6740ae41756588c2e04e7087f9b1c238ca",
                "deletions": 0,
                "filename": "src/java/org/apache/poi/poifs/crypt/CryptoFunctions.java",
                "patch": "@@ -374,6 +374,10 @@ public static void registerBouncyCastle() {\n      * @return the verifier (actually a short value)\n      */\n     public static int createXorVerifier1(String password) {\n+        if (password == null) {\n+            throw new IllegalArgumentException(\"Password cannot be null\");\n+        }\n+\n         byte[] arrByteChars = toAnsiPassword(password);\n         \n         // SET Verifier TO 0x0000\n@@ -412,6 +416,10 @@ public static int createXorVerifier1(String password) {\n      * @see <a href=\"http://www.aspose.com/blogs/aspose-blogs/vladimir-averkin/archive/2007/08/20/funny-how-the-new-powerful-cryptography-implemented-in-word-2007-turns-it-into-a-perfect-tool-for-document-password-removal.html\">Funny: How the new powerful cryptography implemented in Word 2007 turns it into a perfect tool for document password removal.</a>\n      */\n     public static int createXorVerifier2(String password) {\n+        if (password == null) {\n+            throw new IllegalArgumentException(\"Password cannot be null\");\n+        }\n+\n         //Array to hold Key Values\n         byte[] generatedKey = new byte[4];\n ",
                "raw_url": "https://github.com/apache/poi/raw/fac34b6740ae41756588c2e04e7087f9b1c238ca/src/java/org/apache/poi/poifs/crypt/CryptoFunctions.java",
                "sha": "6a16e3f9dc53fd1e650732d75b31ae49216489f1",
                "status": "modified"
            },
            {
                "additions": 3,
                "blob_url": "https://github.com/apache/poi/blob/fac34b6740ae41756588c2e04e7087f9b1c238ca/src/java/org/apache/poi/ss/formula/eval/StringEval.java",
                "changes": 3,
                "contents_url": "https://api.github.com/repos/apache/poi/contents/src/java/org/apache/poi/ss/formula/eval/StringEval.java?ref=fac34b6740ae41756588c2e04e7087f9b1c238ca",
                "deletions": 0,
                "filename": "src/java/org/apache/poi/ss/formula/eval/StringEval.java",
                "patch": "@@ -17,6 +17,8 @@ Licensed to the Apache Software Foundation (ASF) under one or more\n \n package org.apache.poi.ss.formula.eval;\n \n+//import org.checkerframework.checker.nullness.qual.NonNull;\n+\n import org.apache.poi.ss.formula.ptg.Ptg;\n import org.apache.poi.ss.formula.ptg.StringPtg;\n \n@@ -27,6 +29,7 @@ Licensed to the Apache Software Foundation (ASF) under one or more\n \n \tpublic static final StringEval EMPTY_INSTANCE = new StringEval(\"\");\n \n+\t//@NotNull\n \tprivate final String _value;\n \n \tpublic StringEval(Ptg ptg) {",
                "raw_url": "https://github.com/apache/poi/raw/fac34b6740ae41756588c2e04e7087f9b1c238ca/src/java/org/apache/poi/ss/formula/eval/StringEval.java",
                "sha": "61515e438f795535d31286bbffca9ab3c4607096",
                "status": "modified"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/poi/blob/fac34b6740ae41756588c2e04e7087f9b1c238ca/src/java/org/apache/poi/ss/usermodel/FractionFormat.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/poi/contents/src/java/org/apache/poi/ss/usermodel/FractionFormat.java?ref=fac34b6740ae41756588c2e04e7087f9b1c238ca",
                "deletions": 1,
                "filename": "src/java/org/apache/poi/ss/usermodel/FractionFormat.java",
                "patch": "@@ -150,7 +150,7 @@ public String format(Number num) {\n         }\n         \n         //if whole part has to go into the numerator\n-        if (wholePartFormatString.isEmpty()){\n+        if (wholePartFormatString == null || wholePartFormatString.isEmpty()){\n             int trueNum = (fract.getDenominator()*(int)wholePart)+fract.getNumerator();\n             sb.append(trueNum).append(\"/\").append(fract.getDenominator());\n             return sb.toString();",
                "raw_url": "https://github.com/apache/poi/raw/fac34b6740ae41756588c2e04e7087f9b1c238ca/src/java/org/apache/poi/ss/usermodel/FractionFormat.java",
                "sha": "d90d50068b77250376fd40f3db4541f0b1f25fc2",
                "status": "modified"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/poi/blob/fac34b6740ae41756588c2e04e7087f9b1c238ca/src/ooxml/java/org/apache/poi/poifs/crypt/dsig/services/RelationshipTransformService.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/poi/contents/src/ooxml/java/org/apache/poi/poifs/crypt/dsig/services/RelationshipTransformService.java?ref=fac34b6740ae41756588c2e04e7087f9b1c238ca",
                "deletions": 1,
                "filename": "src/ooxml/java/org/apache/poi/poifs/crypt/dsig/services/RelationshipTransformService.java",
                "patch": "@@ -205,7 +205,7 @@ public Data transform(Data data, XMLCryptoContext context) throws TransformExcep\n                 String id = el.getAttribute(\"Id\");\n                 if (sourceIds.contains(id)) {\n                     String targetMode = el.getAttribute(\"TargetMode\");\n-                    if (targetMode.isEmpty()) {\n+                    if (targetMode == null || targetMode.isEmpty()) {\n                         el.setAttribute(\"TargetMode\", \"Internal\");\n                     }\n                     rsList.put(id, el);",
                "raw_url": "https://github.com/apache/poi/raw/fac34b6740ae41756588c2e04e7087f9b1c238ca/src/ooxml/java/org/apache/poi/poifs/crypt/dsig/services/RelationshipTransformService.java",
                "sha": "0b8037d3ae8c52fc61f46cd2435eacdc176feabf",
                "status": "modified"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/poi/blob/fac34b6740ae41756588c2e04e7087f9b1c238ca/src/ooxml/java/org/apache/poi/xslf/usermodel/XSLFTextRun.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/poi/contents/src/ooxml/java/org/apache/poi/xslf/usermodel/XSLFTextRun.java?ref=fac34b6740ae41756588c2e04e7087f9b1c238ca",
                "deletions": 1,
                "filename": "src/ooxml/java/org/apache/poi/xslf/usermodel/XSLFTextRun.java",
                "patch": "@@ -845,7 +845,7 @@ private CTTextFont getCTTextFont(CTTextCharacterProperties props, boolean create\n                 }\n                 // SYMBOL is missing\n                 \n-                if (font == null || !font.isSetTypeface() || font.getTypeface().isEmpty()) {\n+                if (font == null || !font.isSetTypeface() || \"\".equals(font.getTypeface())) {\n                     font = coll.getLatin();\n                 }\n             }",
                "raw_url": "https://github.com/apache/poi/raw/fac34b6740ae41756588c2e04e7087f9b1c238ca/src/ooxml/java/org/apache/poi/xslf/usermodel/XSLFTextRun.java",
                "sha": "ea533600840cbe234585b9b7862bc31be3b79675",
                "status": "modified"
            }
        ],
        "message": "cleanup for r1812476: avoid NPEs from string.isEmpty()\n\ngit-svn-id: https://svn.apache.org/repos/asf/poi/trunk@1812516 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/poi/commit/2ef3af567ce9a248dafb5e1f74bdadc5456f9ab0",
        "repo": "poi",
        "unit_tests": [
            "TestXSLFTextRun.java"
        ]
    },
    "poi_fce9af1": {
        "bug_id": "poi_fce9af1",
        "commit": "https://github.com/apache/poi/commit/fce9af10cf542b064e7e1f58c0ae426743dd218b",
        "file": [
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/poi/blob/fce9af10cf542b064e7e1f58c0ae426743dd218b/src/documentation/content/xdocs/status.xml",
                "changes": 1,
                "contents_url": "https://api.github.com/repos/apache/poi/contents/src/documentation/content/xdocs/status.xml?ref=fce9af10cf542b064e7e1f58c0ae426743dd218b",
                "deletions": 0,
                "filename": "src/documentation/content/xdocs/status.xml",
                "patch": "@@ -34,6 +34,7 @@\n \n     <changes>\n         <release version=\"3.7-beta4\" date=\"2010-??-??\">\n+           <action dev=\"poi-developers\" type=\"fix\">50075 - avoid NPE in ListLevel.getNumberText() when numberText is null </action>\n            <action dev=\"poi-developers\" type=\"fix\">50067 - marked commons-logging and log4j as optional dependencies in POI poms</action>\n            <action dev=\"poi-developers\" type=\"add\">49928 - allow overridden built-in formats in XSSFCellStyle</action>\n            <action dev=\"poi-developers\" type=\"fix\">49919 - support for BorderCode in HWPF</action>",
                "raw_url": "https://github.com/apache/poi/raw/fce9af10cf542b064e7e1f58c0ae426743dd218b/src/documentation/content/xdocs/status.xml",
                "sha": "a0cf1a988a890c999eabfc21609e5d4a76d2a0b1",
                "status": "modified"
            },
            {
                "additions": 4,
                "blob_url": "https://github.com/apache/poi/blob/fce9af10cf542b064e7e1f58c0ae426743dd218b/src/scratchpad/src/org/apache/poi/hwpf/model/ListLevel.java",
                "changes": 5,
                "contents_url": "https://api.github.com/repos/apache/poi/contents/src/scratchpad/src/org/apache/poi/hwpf/model/ListLevel.java?ref=fce9af10cf542b064e7e1f58c0ae426743dd218b",
                "deletions": 1,
                "filename": "src/scratchpad/src/org/apache/poi/hwpf/model/ListLevel.java",
                "patch": "@@ -141,7 +141,10 @@ public int getAlignment()\n \n   public String getNumberText()\n   {\n-    return new String(_numberText);\n+    if (_numberText != null)\n+      return new String(_numberText);\n+    else\n+      return null;\n   }\n \n   public void setStartAt(int startAt)",
                "raw_url": "https://github.com/apache/poi/raw/fce9af10cf542b064e7e1f58c0ae426743dd218b/src/scratchpad/src/org/apache/poi/hwpf/model/ListLevel.java",
                "sha": "b8939b381779a78ab7ba8587065e9f23d800551d",
                "status": "modified"
            },
            {
                "additions": 41,
                "blob_url": "https://github.com/apache/poi/blob/fce9af10cf542b064e7e1f58c0ae426743dd218b/src/scratchpad/testcases/org/apache/poi/hwpf/usermodel/TestBug50075.java",
                "changes": 41,
                "contents_url": "https://api.github.com/repos/apache/poi/contents/src/scratchpad/testcases/org/apache/poi/hwpf/usermodel/TestBug50075.java?ref=fce9af10cf542b064e7e1f58c0ae426743dd218b",
                "deletions": 0,
                "filename": "src/scratchpad/testcases/org/apache/poi/hwpf/usermodel/TestBug50075.java",
                "patch": "@@ -0,0 +1,41 @@\n+/* ====================================================================\r\n+   Licensed to the Apache Software Foundation (ASF) under one or more\r\n+   contributor license agreements.  See the NOTICE file distributed with\r\n+   this work for additional information regarding copyright ownership.\r\n+   The ASF licenses this file to You under the Apache License, Version 2.0\r\n+   (the \"License\"); you may not use this file except in compliance with\r\n+   the License.  You may obtain a copy of the License at\r\n+\r\n+       http://www.apache.org/licenses/LICENSE-2.0\r\n+\r\n+   Unless required by applicable law or agreed to in writing, software\r\n+   distributed under the License is distributed on an \"AS IS\" BASIS,\r\n+   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n+   See the License for the specific language governing permissions and\r\n+   limitations under the License.\r\n+==================================================================== */\r\n+package org.apache.poi.hwpf.usermodel;\r\n+\r\n+import org.apache.poi.hwpf.HWPFDocument;\r\n+import org.apache.poi.hwpf.HWPFTestDataSamples;\r\n+import org.apache.poi.hwpf.model.ListFormatOverride;\r\n+import org.apache.poi.hwpf.model.ListLevel;\r\n+\r\n+import junit.framework.TestCase;\r\n+\r\n+public class TestBug50075 extends TestCase\r\n+{\r\n+\r\n+  public void test() {\r\n+    HWPFDocument doc = HWPFTestDataSamples.openSampleFile(\"Bug50075.doc\");\r\n+    Range range = doc.getRange();\r\n+    assertEquals(1, range.numParagraphs());\r\n+    ListEntry entry = (ListEntry) range.getParagraph(0);\r\n+    ListFormatOverride override = doc.getListTables().getOverride(entry.getIlfo());\r\n+    ListLevel level = doc.getListTables().getLevel(override.getLsid(), entry.getIlvl());\r\n+    \r\n+    // the bug reproduces, if this call fails with NullPointerException\r\n+    level.getNumberText();\r\n+  }\r\n+  \r\n+}\r",
                "raw_url": "https://github.com/apache/poi/raw/fce9af10cf542b064e7e1f58c0ae426743dd218b/src/scratchpad/testcases/org/apache/poi/hwpf/usermodel/TestBug50075.java",
                "sha": "24ac72fe402ed7909bef735ee9ac8c53b65985d1",
                "status": "added"
            },
            {
                "additions": 0,
                "blob_url": "https://github.com/apache/poi/blob/fce9af10cf542b064e7e1f58c0ae426743dd218b/test-data/document/Bug50075.doc",
                "changes": 0,
                "contents_url": "https://api.github.com/repos/apache/poi/contents/test-data/document/Bug50075.doc?ref=fce9af10cf542b064e7e1f58c0ae426743dd218b",
                "deletions": 0,
                "filename": "test-data/document/Bug50075.doc",
                "raw_url": "https://github.com/apache/poi/raw/fce9af10cf542b064e7e1f58c0ae426743dd218b/test-data/document/Bug50075.doc",
                "sha": "15303a46fe5d99a65208e2525cfde9596fe70016",
                "status": "added"
            }
        ],
        "message": "avoid NPE in ListLevel.getNumberText() when numberText is null, see Bugzilla 50075\n\ngit-svn-id: https://svn.apache.org/repos/asf/poi/trunk@1022456 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/poi/commit/6f62a4397dd74099c83ad49622afc22db28eaaa9",
        "repo": "poi",
        "unit_tests": [
            "TestBug50075.java"
        ]
    }
}