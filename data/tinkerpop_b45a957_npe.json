[
    {
        "repo": "tinkerpop",
        "commit": "https://github.com/apache/tinkerpop/commit/b45a957c52da9d4e3c180baaf7f16672e94d6abd",
        "bug_id": "tinkerpop_b45a957",
        "message": "Fixed an NPE around path and nested children with path processors. Added some TODO notes in PrunePathStrategyTest about why keepLabels are the way they are -- I believe that nesting is not sound and should be looked into more. And more tests added.",
        "parent": "https://github.com/apache/tinkerpop/commit/9d205f89d99c9c04ece93e4bdb713701a1010652",
        "patched_files": [
            "PrunePathStrategy.java"
        ],
        "file": [
            {
                "status": "modified",
                "additions": 1,
                "raw_url": "https://github.com/apache/tinkerpop/raw/b45a957c52da9d4e3c180baaf7f16672e94d6abd/gremlin-core/src/main/java/org/apache/tinkerpop/gremlin/process/traversal/strategy/optimization/PrunePathStrategy.java",
                "contents_url": "https://api.github.com/repos/apache/tinkerpop/contents/gremlin-core/src/main/java/org/apache/tinkerpop/gremlin/process/traversal/strategy/optimization/PrunePathStrategy.java?ref=b45a957c52da9d4e3c180baaf7f16672e94d6abd",
                "filename": "gremlin-core/src/main/java/org/apache/tinkerpop/gremlin/process/traversal/strategy/optimization/PrunePathStrategy.java",
                "deletions": 1,
                "sha": "358af7a7f65ad2e05d6eff8619fafe6ed5633799",
                "blob_url": "https://github.com/apache/tinkerpop/blob/b45a957c52da9d4e3c180baaf7f16672e94d6abd/gremlin-core/src/main/java/org/apache/tinkerpop/gremlin/process/traversal/strategy/optimization/PrunePathStrategy.java",
                "patch": "@@ -90,7 +90,7 @@ public static PrunePathStrategy instance() {\n                 do {\n                     // if this is the top level traversal, propagate all nested labels\n                     // to previous PathProcess steps\n-                    if (step instanceof PathProcessor) {\n+                    if (step instanceof PathProcessor && null != ((PathProcessor) step).getKeepLabels()) {\n                         ((PathProcessor) step).getKeepLabels().addAll(referencedLabels);\n                     }\n                     step = step.getPreviousStep();",
                "changes": 2
            },
            {
                "status": "modified",
                "additions": 8,
                "raw_url": "https://github.com/apache/tinkerpop/raw/b45a957c52da9d4e3c180baaf7f16672e94d6abd/gremlin-core/src/test/java/org/apache/tinkerpop/gremlin/process/traversal/strategy/optimization/PrunePathStrategyTest.java",
                "contents_url": "https://api.github.com/repos/apache/tinkerpop/contents/gremlin-core/src/test/java/org/apache/tinkerpop/gremlin/process/traversal/strategy/optimization/PrunePathStrategyTest.java?ref=b45a957c52da9d4e3c180baaf7f16672e94d6abd",
                "filename": "gremlin-core/src/test/java/org/apache/tinkerpop/gremlin/process/traversal/strategy/optimization/PrunePathStrategyTest.java",
                "deletions": 3,
                "sha": "72ee294de86ee4555c32c95afa89ce616efaab73",
                "blob_url": "https://github.com/apache/tinkerpop/blob/b45a957c52da9d4e3c180baaf7f16672e94d6abd/gremlin-core/src/test/java/org/apache/tinkerpop/gremlin/process/traversal/strategy/optimization/PrunePathStrategyTest.java",
                "patch": "@@ -73,7 +73,7 @@ public void doTest() {\n             currentTraversal.setStrategies(currentStrategies);\n             currentTraversal.applyStrategies();\n             final List<Object> keepLabels = getKeepLabels(currentTraversal);\n-            assertEquals(this.labels, keepLabels);\n+            assertEquals(keepLabels, this.labels);\n             if (null != optimized)\n                 assertEquals(currentTraversal, optimized);\n         }\n@@ -84,9 +84,8 @@ public void doTest() {\n         for (Step step : traversal.getSteps()) {\n             if (step instanceof PathProcessor) {\n                 final Set<String> keepers = ((PathProcessor) step).getKeepLabels();\n-                if (keepers != null) {\n+                if (keepers != null)\n                     keepLabels.add(keepers);\n-                }\n             }\n             if (step instanceof TraversalParent) {\n                 final TraversalParent parent = (TraversalParent) step;\n@@ -135,6 +134,12 @@ public void doTest() {\n                 {__.V().as(\"a\").out().as(\"b\").where(P.gt(\"a\")).out().out(), Arrays.asList(Collections.emptySet()), __.V().as(\"a\").out().as(\"b\").where(P.gt(\"a\")).barrier(MAX_BARRIER_SIZE).out().out()},\n                 {__.V().as(\"a\").out().as(\"b\").where(P.gt(\"a\")).count(), Arrays.asList(Collections.emptySet()), __.V().as(\"a\").out().as(\"b\").where(P.gt(\"a\")).count()},\n                 {__.V().as(\"a\").out().as(\"b\").select(\"a\").as(\"c\").where(P.gt(\"b\")).out(), Arrays.asList(Collections.singleton(\"b\"), Collections.emptySet()), __.V().as(\"a\").out().as(\"b\").select(\"a\").as(\"c\").barrier(MAX_BARRIER_SIZE).where(P.gt(\"b\")).barrier(MAX_BARRIER_SIZE).out()},\n+                // TODO: why is the local child preserving c and e?\n+                {__.V().as(\"a\").out().as(\"b\").select(\"a\").select(\"b\").local(as(\"c\").out().as(\"d\", \"e\").select(\"c\", \"e\").out().select(\"c\")).out().select(\"c\"),\n+                        Arrays.asList(new HashSet<>(Arrays.asList(\"b\", \"c\", \"e\")), new HashSet<>(Arrays.asList(\"c\", \"e\")), Arrays.asList(new HashSet<>(Arrays.asList(\"c\", \"e\")), new HashSet<>(Arrays.asList(\"c\", \"e\"))), Collections.emptySet()), null},\n+                // TODO: same as above but note how path() makes things react\n+                {__.V().as(\"a\").out().as(\"b\").select(\"a\").select(\"b\").path().local(as(\"c\").out().as(\"d\", \"e\").select(\"c\", \"e\").out().select(\"c\")).out().select(\"c\"),\n+                        Arrays.asList(Arrays.asList(new HashSet<>(Arrays.asList(\"c\", \"e\")), new HashSet<>(Arrays.asList(\"c\", \"e\")))), null},\n         });\n     }\n }",
                "changes": 11
            }
        ],
        "unit_tests": [
            "PrunePathStrategyTest.java"
        ]
    },
    {
        "buggy": false,
        "test_file": "gremlin-core/src/test/java/org/apache/tinkerpop/gremlin/process/traversal/strategy/optimization/PrunePathStrategyTest.java",
        "buggy_files": [
            "gremlin-core/src/main/java/org/apache/tinkerpop/gremlin/process/traversal/strategy/optimization/PrunePathStrategy.java"
        ],
        "fixed": true
    }
]