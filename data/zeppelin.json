{
    "zeppelin_008a0d4": {
        "bug_id": "zeppelin_008a0d4",
        "commit": "https://github.com/apache/zeppelin/commit/008a0d498a7acea3b93099a7479d78008d31dbcb",
        "file": [
            {
                "additions": 14,
                "blob_url": "https://github.com/apache/zeppelin/blob/008a0d498a7acea3b93099a7479d78008d31dbcb/zeppelin-zengine/src/main/java/com/nflabs/zeppelin/notebook/Notebook.java",
                "changes": 15,
                "contents_url": "https://api.github.com/repos/apache/zeppelin/contents/zeppelin-zengine/src/main/java/com/nflabs/zeppelin/notebook/Notebook.java?ref=008a0d498a7acea3b93099a7479d78008d31dbcb",
                "deletions": 1,
                "filename": "zeppelin-zengine/src/main/java/com/nflabs/zeppelin/notebook/Notebook.java",
                "patch": "@@ -93,10 +93,23 @@ private void loadAllNotes() throws IOException{\n \tpublic List<Note> getAllNotes(){\n \t\tsynchronized(notes){\n             List<Note> noteList = new ArrayList<Note>(notes.values());\n+            logger.info(\"\"+noteList.size());\n             Collections.sort(noteList, new Comparator() {\n                 @Override\n                 public int compare(Object one, Object two) {\n-                    return ((Note) one).getName().compareTo(((Note) two).getName());\n+                    Note note1 = (Note) one;\n+                    Note note2 = (Note) two;\n+\n+                    String name1 = note1.id();\n+                    if (note1.getName() != null) {\n+                        name1 = note1.getName();\n+                    }\n+                    String name2 = note2.id();\n+                    if (note2.getName() != null) {\n+                        name2 = note2.getName();\n+                    }\n+                    ((Note) one).getName();\n+                    return name1.compareTo(name2);\n                 }\n             });\n             return noteList;",
                "raw_url": "https://github.com/apache/zeppelin/raw/008a0d498a7acea3b93099a7479d78008d31dbcb/zeppelin-zengine/src/main/java/com/nflabs/zeppelin/notebook/Notebook.java",
                "sha": "0960eb88f290fbaf869cb18984c91aa0b763f04a",
                "status": "modified"
            }
        ],
        "message": "fix npe",
        "parent": "https://github.com/apache/zeppelin/commit/f117aba3cf4f82fd84fdb1425e094b58c19fd9c2",
        "repo": "zeppelin",
        "unit_tests": [
            "NotebookTest.java"
        ]
    },
    "zeppelin_124d334": {
        "bug_id": "zeppelin_124d334",
        "commit": "https://github.com/apache/zeppelin/commit/124d3342a1f24ca89b3759985e83cc3ee73b2a56",
        "file": [
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/zeppelin/blob/124d3342a1f24ca89b3759985e83cc3ee73b2a56/zeppelin-interpreter/src/main/java/com/nflabs/zeppelin/interpreter/remote/RemoteInterpreterServer.java",
                "changes": 3,
                "contents_url": "https://api.github.com/repos/apache/zeppelin/contents/zeppelin-interpreter/src/main/java/com/nflabs/zeppelin/interpreter/remote/RemoteInterpreterServer.java?ref=124d3342a1f24ca89b3759985e83cc3ee73b2a56",
                "deletions": 1,
                "filename": "zeppelin-interpreter/src/main/java/com/nflabs/zeppelin/interpreter/remote/RemoteInterpreterServer.java",
                "patch": "@@ -25,6 +25,7 @@\n import com.nflabs.zeppelin.interpreter.InterpreterException;\n import com.nflabs.zeppelin.interpreter.InterpreterGroup;\n import com.nflabs.zeppelin.interpreter.InterpreterResult;\n+import com.nflabs.zeppelin.interpreter.LazyOpenInterpreter;\n import com.nflabs.zeppelin.interpreter.thrift.RemoteInterpreterContext;\n import com.nflabs.zeppelin.interpreter.thrift.RemoteInterpreterResult;\n import com.nflabs.zeppelin.interpreter.thrift.RemoteInterpreterService;\n@@ -112,7 +113,7 @@ public void createInterpreter(String className, Map<String, String> properties)\n       repl.setClassloaderUrls(new URL[]{});\n \n       synchronized (interpreterGroup) {\n-        interpreterGroup.add(new ClassloaderInterpreter(repl, cl));\n+        interpreterGroup.add(new LazyOpenInterpreter((new ClassloaderInterpreter(repl, cl))));\n       }\n \n       logger.info(\"Instantiate interpreter {}\", className);",
                "raw_url": "https://github.com/apache/zeppelin/raw/124d3342a1f24ca89b3759985e83cc3ee73b2a56/zeppelin-interpreter/src/main/java/com/nflabs/zeppelin/interpreter/remote/RemoteInterpreterServer.java",
                "sha": "4b7dd7d4272174bb202d7a0c789681b62c3185b7",
                "status": "modified"
            }
        ],
        "message": "Fix NPE when %sql is called before %spark",
        "parent": "https://github.com/apache/zeppelin/commit/1012fb46988f1f06d3e5342b8fbd144766fcbd13",
        "repo": "zeppelin",
        "unit_tests": [
            "RemoteInterpreterServerTest.java"
        ]
    },
    "zeppelin_1b5c3a3": {
        "bug_id": "zeppelin_1b5c3a3",
        "commit": "https://github.com/apache/zeppelin/commit/1b5c3a3f37c36f62a049cb3bdf2228d320e250d4",
        "file": [
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/zeppelin/blob/1b5c3a3f37c36f62a049cb3bdf2228d320e250d4/zeppelin-server/src/main/java/org/apache/zeppelin/socket/NotebookServer.java",
                "changes": 3,
                "contents_url": "https://api.github.com/repos/apache/zeppelin/contents/zeppelin-server/src/main/java/org/apache/zeppelin/socket/NotebookServer.java?ref=1b5c3a3f37c36f62a049cb3bdf2228d320e250d4",
                "deletions": 1,
                "filename": "zeppelin-server/src/main/java/org/apache/zeppelin/socket/NotebookServer.java",
                "patch": "@@ -193,7 +193,8 @@ public void onMessage(NotebookSocket conn, String msg) {\n       }\n \n       String ticket = TicketContainer.instance.getTicket(messagereceived.principal);\n-      if (ticket != null && !ticket.equals(messagereceived.ticket)) {\n+      if (ticket != null &&\n+          (messagereceived.ticket == null || !ticket.equals(messagereceived.ticket))) {\n         /* not to pollute logs, log instead of exception */\n         if (StringUtils.isEmpty(messagereceived.ticket)) {\n           LOG.debug(\"{} message: invalid ticket {} != {}\", messagereceived.op,",
                "raw_url": "https://github.com/apache/zeppelin/raw/1b5c3a3f37c36f62a049cb3bdf2228d320e250d4/zeppelin-server/src/main/java/org/apache/zeppelin/socket/NotebookServer.java",
                "sha": "128d59d85be27d7716d42263984c7ceaecc4c4ab",
                "status": "modified"
            }
        ],
        "message": "[ZEPPELIN-2282] NPE on NotebookServer.java when client send null ticket.\n\n### What is this PR for?\nWhen client (zeppelin-web) send message with null ticket, NotebookServer does not handle and throw NPE.\n\n### What type of PR is it?\nBug Fix\n\n### Todos\n* [x] - Null check\n\n### What is the Jira issue?\nhttps://issues.apache.org/jira/browse/ZEPPELIN-2282\n\n### Questions:\n* Does the licenses files need update? no\n* Is there breaking changes for older versions? no\n* Does this needs documentation? no\n\nAuthor: Lee moon soo <moon@apache.org>\n\nCloses #2153 from Leemoonsoo/ZEPPELIN-2282 and squashes the following commits:\n\n1a05bed [Lee moon soo] prevent NPE",
        "parent": "https://github.com/apache/zeppelin/commit/2463731ede1698a8235cb03edb30c5e39d4f7402",
        "repo": "zeppelin",
        "unit_tests": [
            "NotebookServerTest.java"
        ]
    },
    "zeppelin_31f584c": {
        "bug_id": "zeppelin_31f584c",
        "commit": "https://github.com/apache/zeppelin/commit/31f584cfee41598aab16da8d84752e69b80b083c",
        "file": [
            {
                "additions": 11,
                "blob_url": "https://github.com/apache/zeppelin/blob/31f584cfee41598aab16da8d84752e69b80b083c/bin/interpreter.sh",
                "changes": 14,
                "contents_url": "https://api.github.com/repos/apache/zeppelin/contents/bin/interpreter.sh?ref=31f584cfee41598aab16da8d84752e69b80b083c",
                "deletions": 3,
                "filename": "bin/interpreter.sh",
                "patch": "@@ -23,7 +23,7 @@ function usage() {\n     echo \"usage) $0 -p <port> -d <interpreter dir to load> -l <local interpreter repo dir to load>\"\n }\n \n-while getopts \"hp:d:l:v\" o; do\n+while getopts \"hp:d:l:v:u:\" o; do\n     case ${o} in\n         h)\n             usage\n@@ -42,6 +42,14 @@ while getopts \"hp:d:l:v\" o; do\n             . \"${bin}/common.sh\"\n             getZeppelinVersion\n             ;;\n+        u)\n+            ZEPPELIN_IMPERSONATE_USER=\"${OPTARG}\"\n+            if [[ -z \"$ZEPPELIN_IMPERSONATE_CMD\" ]]; then\n+              ZEPPELIN_IMPERSONATE_RUN_CMD=`echo \"ssh ${ZEPPELIN_IMPERSONATE_USER}@localhost\" `\n+            else\n+              ZEPPELIN_IMPERSONATE_RUN_CMD=$(eval \"echo ${ZEPPELIN_IMPERSONATE_CMD} \")\n+            fi\n+            ;;\n         esac\n done\n \n@@ -178,9 +186,9 @@ addJarInDirForIntp \"${LOCAL_INTERPRETER_REPO}\"\n CLASSPATH+=\":${ZEPPELIN_INTP_CLASSPATH}\"\n \n if [[ -n \"${SPARK_SUBMIT}\" ]]; then\n-    ${SPARK_SUBMIT} --class ${ZEPPELIN_SERVER} --driver-class-path \"${ZEPPELIN_INTP_CLASSPATH_OVERRIDES}:${CLASSPATH}\" --driver-java-options \"${JAVA_INTP_OPTS}\" ${SPARK_SUBMIT_OPTIONS} ${SPARK_APP_JAR} ${PORT} &\n+    ${ZEPPELIN_IMPERSONATE_RUN_CMD} `${SPARK_SUBMIT} --class ${ZEPPELIN_SERVER} --driver-class-path \"${ZEPPELIN_INTP_CLASSPATH_OVERRIDES}:${CLASSPATH}\" --driver-java-options \"${JAVA_INTP_OPTS}\" ${SPARK_SUBMIT_OPTIONS} ${SPARK_APP_JAR} ${PORT} &`\n else\n-    ${ZEPPELIN_RUNNER} ${JAVA_INTP_OPTS} ${ZEPPELIN_INTP_MEM} -cp ${ZEPPELIN_INTP_CLASSPATH_OVERRIDES}:${CLASSPATH} ${ZEPPELIN_SERVER} ${PORT} &\n+    ${ZEPPELIN_IMPERSONATE_RUN_CMD} ${ZEPPELIN_RUNNER} ${JAVA_INTP_OPTS} ${ZEPPELIN_INTP_MEM} -cp ${ZEPPELIN_INTP_CLASSPATH_OVERRIDES}:${CLASSPATH} ${ZEPPELIN_SERVER} ${PORT} &\n fi\n \n pid=$!",
                "raw_url": "https://github.com/apache/zeppelin/raw/31f584cfee41598aab16da8d84752e69b80b083c/bin/interpreter.sh",
                "sha": "b1e1a157cb054a742e445e0d898a6299240d2964",
                "status": "modified"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/zeppelin/blob/31f584cfee41598aab16da8d84752e69b80b083c/conf/zeppelin-env.sh.template",
                "changes": 1,
                "contents_url": "https://api.github.com/repos/apache/zeppelin/contents/conf/zeppelin-env.sh.template?ref=31f584cfee41598aab16da8d84752e69b80b083c",
                "deletions": 0,
                "filename": "conf/zeppelin-env.sh.template",
                "patch": "@@ -79,3 +79,4 @@\n # export ZEPPELINHUB_API_ADDRESS\t\t# Refers to the address of the ZeppelinHub service in use\n # export ZEPPELINHUB_API_TOKEN\t\t\t# Refers to the Zeppelin instance token of the user\n # export ZEPPELINHUB_USER_KEY\t\t\t# Optional, when using Zeppelin with authentication.\n+# export ZEPPELIN_IMPERSONATE_CMD       # Optional, when user want to run interpreter as end web user. eg) 'sudo -u ${ZEPPELIN_IMPERSONATE_USER}'",
                "raw_url": "https://github.com/apache/zeppelin/raw/31f584cfee41598aab16da8d84752e69b80b083c/conf/zeppelin-env.sh.template",
                "sha": "a35adba663cc5fec0b2d0a244cebafc7bb009eea",
                "status": "modified"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/zeppelin/blob/31f584cfee41598aab16da8d84752e69b80b083c/docs/_includes/themes/zeppelin/_navigation.html",
                "changes": 1,
                "contents_url": "https://api.github.com/repos/apache/zeppelin/contents/docs/_includes/themes/zeppelin/_navigation.html?ref=31f584cfee41598aab16da8d84752e69b80b083c",
                "deletions": 0,
                "filename": "docs/_includes/themes/zeppelin/_navigation.html",
                "patch": "@@ -46,6 +46,7 @@\n                 <li><a href=\"{{BASE_PATH}}/manual/interpreterinstallation.html\">Interpreter Installation</a></li>\n                 <!--<li><a href=\"{{BASE_PATH}}/manual/dynamicinterpreterload.html\">Dynamic Interpreter Loading</a></li>-->\n                 <li><a href=\"{{BASE_PATH}}/manual/dependencymanagement.html\">Interpreter Dependency Management</a></li>\n+                <li><a href=\"{{BASE_PATH}}/manual/userimpersonation.html\">Interpreter User Impersonation</a></li>\n                 <li role=\"separator\" class=\"divider\"></li>\n                 <li class=\"title\"><span><b>Available Interpreters</b><span></li>\n                 <li><a href=\"{{BASE_PATH}}/interpreter/alluxio.html\">Alluxio</a></li>",
                "raw_url": "https://github.com/apache/zeppelin/raw/31f584cfee41598aab16da8d84752e69b80b083c/docs/_includes/themes/zeppelin/_navigation.html",
                "sha": "6ed8d5ae801d74d1b60b95e12b1aaf39baeef470",
                "status": "modified"
            },
            {
                "additions": 0,
                "blob_url": "https://github.com/apache/zeppelin/blob/31f584cfee41598aab16da8d84752e69b80b083c/docs/assets/themes/zeppelin/img/screenshots/user-impersonation.gif",
                "changes": 0,
                "contents_url": "https://api.github.com/repos/apache/zeppelin/contents/docs/assets/themes/zeppelin/img/screenshots/user-impersonation.gif?ref=31f584cfee41598aab16da8d84752e69b80b083c",
                "deletions": 0,
                "filename": "docs/assets/themes/zeppelin/img/screenshots/user-impersonation.gif",
                "raw_url": "https://github.com/apache/zeppelin/raw/31f584cfee41598aab16da8d84752e69b80b083c/docs/assets/themes/zeppelin/img/screenshots/user-impersonation.gif",
                "sha": "eb39bc8dac8d095164347f71a696733f9fa018e1",
                "status": "added"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/zeppelin/blob/31f584cfee41598aab16da8d84752e69b80b083c/docs/index.md",
                "changes": 1,
                "contents_url": "https://api.github.com/repos/apache/zeppelin/contents/docs/index.md?ref=31f584cfee41598aab16da8d84752e69b80b083c",
                "deletions": 0,
                "filename": "docs/index.md",
                "patch": "@@ -142,6 +142,7 @@ Join to our [Mailing list](https://zeppelin.apache.org/community.html) and repor\n * Usage\n   * [Interpreter Installation](./manual/interpreterinstallation.html): Install not only community managed interpreters but also 3rd party interpreters\n   * [Interpreter Dependency Management](./manual/dependencymanagement.html) when you include external libraries to interpreter\n+  * [Interpreter User Impersonation](./manual/userimpersonation.html) when you want to run interpreter as end user\n * Available Interpreters: currently, about 20 interpreters are available in Apache Zeppelin.\n \n ####Display System",
                "raw_url": "https://github.com/apache/zeppelin/raw/31f584cfee41598aab16da8d84752e69b80b083c/docs/index.md",
                "sha": "db5931e5abd3c5bde92ecef0f0f6cdd69b92bc76",
                "status": "modified"
            },
            {
                "additions": 66,
                "blob_url": "https://github.com/apache/zeppelin/blob/31f584cfee41598aab16da8d84752e69b80b083c/docs/manual/processenduser.md",
                "changes": 66,
                "contents_url": "https://api.github.com/repos/apache/zeppelin/contents/docs/manual/processenduser.md?ref=31f584cfee41598aab16da8d84752e69b80b083c",
                "deletions": 0,
                "filename": "docs/manual/processenduser.md",
                "patch": "@@ -0,0 +1,66 @@\n+---\n+layout: page\n+title: \"Run zeppelin interpreter process as web front end user\"\n+description: \"Set up zeppelin interpreter process as web front end user.\"\n+group: manual\n+---\n+<!--\n+Licensed under the Apache License, Version 2.0 (the \"License\");\n+you may not use this file except in compliance with the License.\n+You may obtain a copy of the License at\n+\n+http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing, software\n+distributed under the License is distributed on an \"AS IS\" BASIS,\n+WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+See the License for the specific language governing permissions and\n+limitations under the License.\n+-->\n+{% include JB/setup %}\n+\n+## Run zeppelin interpreter process as web front end user\n+\n+ * Enable shiro auth in shiro.ini\n+\n+```\n+[users]\n+user1 = password1, role1\n+user2 = password2, role2\n+```\n+\n+ * Enable password-less ssh for the user you want to impersonate (say user1).\n+\n+```\n+adduser user1\n+#ssh-keygen (optional if you don't already have generated ssh-key.\n+ssh user1@localhost mkdir -p .ssh\n+cat ~/.ssh/id_rsa.pub | ssh user1@localhost 'cat >> .ssh/authorized_keys'\n+```\n+\n+ * Start zeppelin server.\n+ \n+<hr>\n+<div class=\"row\">\n+  <div class=\"col-md-12\">\n+         <b> Screenshot </b>\n+         <br /><br />\n+  </div>\n+  <div class=\"col-md-12\" >\n+      <a data-lightbox=\"compiler\" href=\"../assets/themes/zeppelin/img/screenshots/user-impersonation.gif\">\n+        <img class=\"img-responsive\" src=\"../assets/themes/zeppelin/img/screenshots/user-impersonation.gif\" />\n+      </a>\n+    \n+  </div>\n+</div>\n+<hr>\n+ \n+ * Go to interpreter setting page, and enable \"User Impersonate\" in any of the interpreter (in my example its shell interpreter)\n+ \n+ * Test with a simple paragraph\n+\n+```\n+%sh\n+whoami\n+```\n+",
                "raw_url": "https://github.com/apache/zeppelin/raw/31f584cfee41598aab16da8d84752e69b80b083c/docs/manual/processenduser.md",
                "sha": "363c62dbc534a52d20e62a2fd5e72f23562f766d",
                "status": "added"
            },
            {
                "additions": 9,
                "blob_url": "https://github.com/apache/zeppelin/blob/31f584cfee41598aab16da8d84752e69b80b083c/zeppelin-interpreter/src/main/java/org/apache/zeppelin/interpreter/InterpreterOption.java",
                "changes": 9,
                "contents_url": "https://api.github.com/repos/apache/zeppelin/contents/zeppelin-interpreter/src/main/java/org/apache/zeppelin/interpreter/InterpreterOption.java?ref=31f584cfee41598aab16da8d84752e69b80b083c",
                "deletions": 0,
                "filename": "zeppelin-interpreter/src/main/java/org/apache/zeppelin/interpreter/InterpreterOption.java",
                "patch": "@@ -37,6 +37,7 @@\n   boolean isExistingProcess;\n   boolean setPermission;\n   List<String> users;\n+  boolean isUserImpersonate;\n \n   public boolean isExistingProcess() {\n     return isExistingProcess;\n@@ -66,6 +67,14 @@ public void setUserPermission(boolean setPermission) {\n     return users;\n   }\n \n+  public boolean isUserImpersonate() {\n+    return isUserImpersonate;\n+  }\n+\n+  public void setUserImpersonate(boolean userImpersonate) {\n+    isUserImpersonate = userImpersonate;\n+  }\n+\n   public InterpreterOption() {\n     this(false);\n   }",
                "raw_url": "https://github.com/apache/zeppelin/raw/31f584cfee41598aab16da8d84752e69b80b083c/zeppelin-interpreter/src/main/java/org/apache/zeppelin/interpreter/InterpreterOption.java",
                "sha": "3e789babf313081dade67c40b46953b7305bae68",
                "status": "modified"
            },
            {
                "additions": 18,
                "blob_url": "https://github.com/apache/zeppelin/blob/31f584cfee41598aab16da8d84752e69b80b083c/zeppelin-interpreter/src/main/java/org/apache/zeppelin/interpreter/remote/RemoteInterpreter.java",
                "changes": 22,
                "contents_url": "https://api.github.com/repos/apache/zeppelin/contents/zeppelin-interpreter/src/main/java/org/apache/zeppelin/interpreter/remote/RemoteInterpreter.java?ref=31f584cfee41598aab16da8d84752e69b80b083c",
                "deletions": 4,
                "filename": "zeppelin-interpreter/src/main/java/org/apache/zeppelin/interpreter/remote/RemoteInterpreter.java",
                "patch": "@@ -59,6 +59,8 @@\n   private int maxPoolSize;\n   private String host;\n   private int port;\n+  private String userName;\n+  private Boolean isUserImpersonate;\n \n   /**\n    * Remote interpreter and manage interpreter process\n@@ -72,7 +74,9 @@ public RemoteInterpreter(Properties property,\n                            int connectTimeout,\n                            int maxPoolSize,\n                            RemoteInterpreterProcessListener remoteInterpreterProcessListener,\n-                           ApplicationEventListener appListener) {\n+                           ApplicationEventListener appListener,\n+                           String userName,\n+                           Boolean isUserImpersonate) {\n     super(property);\n     this.noteId = noteId;\n     this.className = className;\n@@ -85,6 +89,8 @@ public RemoteInterpreter(Properties property,\n     this.maxPoolSize = maxPoolSize;\n     this.remoteInterpreterProcessListener = remoteInterpreterProcessListener;\n     this.applicationEventListener = appListener;\n+    this.userName = userName;\n+    this.isUserImpersonate = isUserImpersonate;\n   }\n \n \n@@ -100,7 +106,9 @@ public RemoteInterpreter(\n       int connectTimeout,\n       int maxPoolSize,\n       RemoteInterpreterProcessListener remoteInterpreterProcessListener,\n-      ApplicationEventListener appListener) {\n+      ApplicationEventListener appListener,\n+      String userName,\n+      Boolean isUserImpersonate) {\n     super(property);\n     this.noteId = noteId;\n     this.className = className;\n@@ -111,6 +119,8 @@ public RemoteInterpreter(\n     this.maxPoolSize = maxPoolSize;\n     this.remoteInterpreterProcessListener = remoteInterpreterProcessListener;\n     this.applicationEventListener = appListener;\n+    this.userName = userName;\n+    this.isUserImpersonate = isUserImpersonate;\n   }\n \n \n@@ -125,7 +135,9 @@ public RemoteInterpreter(\n       Map<String, String> env,\n       int connectTimeout,\n       RemoteInterpreterProcessListener remoteInterpreterProcessListener,\n-      ApplicationEventListener appListener) {\n+      ApplicationEventListener appListener,\n+      String userName,\n+      Boolean isUserImpersonate) {\n     super(property);\n     this.className = className;\n     this.noteId = noteId;\n@@ -138,6 +150,8 @@ public RemoteInterpreter(\n     this.maxPoolSize = 10;\n     this.remoteInterpreterProcessListener = remoteInterpreterProcessListener;\n     this.applicationEventListener = appListener;\n+    this.userName = userName;\n+    this.isUserImpersonate = isUserImpersonate;\n   }\n \n   private Map<String, String> getEnvFromInterpreterProperty(Properties property) {\n@@ -205,7 +219,7 @@ public synchronized void init() {\n     RemoteInterpreterProcess interpreterProcess = getInterpreterProcess();\n \n     final InterpreterGroup interpreterGroup = getInterpreterGroup();\n-    interpreterProcess.reference(interpreterGroup);\n+    interpreterProcess.reference(interpreterGroup, userName, isUserImpersonate);\n     interpreterProcess.setMaxPoolSize(\n         Math.max(this.maxPoolSize, interpreterProcess.getMaxPoolSize()));\n     String groupId = interpreterGroup.getId();",
                "raw_url": "https://github.com/apache/zeppelin/raw/31f584cfee41598aab16da8d84752e69b80b083c/zeppelin-interpreter/src/main/java/org/apache/zeppelin/interpreter/remote/RemoteInterpreter.java",
                "sha": "b2a4fbef53456ebd4b300bad6746eddd3f6ab446",
                "status": "modified"
            },
            {
                "additions": 5,
                "blob_url": "https://github.com/apache/zeppelin/blob/31f584cfee41598aab16da8d84752e69b80b083c/zeppelin-interpreter/src/main/java/org/apache/zeppelin/interpreter/remote/RemoteInterpreterManagedProcess.java",
                "changes": 6,
                "contents_url": "https://api.github.com/repos/apache/zeppelin/contents/zeppelin-interpreter/src/main/java/org/apache/zeppelin/interpreter/remote/RemoteInterpreterManagedProcess.java?ref=31f584cfee41598aab16da8d84752e69b80b083c",
                "deletions": 1,
                "filename": "zeppelin-interpreter/src/main/java/org/apache/zeppelin/interpreter/remote/RemoteInterpreterManagedProcess.java",
                "patch": "@@ -88,7 +88,7 @@ public int getPort() {\n   }\n \n   @Override\n-  public void start() {\n+  public void start(String userName, Boolean isUserImpersonate) {\n     // start server process\n     try {\n       port = RemoteInterpreterUtils.findRandomAvailablePortOnAllLocalInterfaces();\n@@ -101,6 +101,10 @@ public void start() {\n     cmdLine.addArgument(interpreterDir, false);\n     cmdLine.addArgument(\"-p\", false);\n     cmdLine.addArgument(Integer.toString(port), false);\n+    if (isUserImpersonate && !userName.equals(\"anonymous\")) {\n+      cmdLine.addArgument(\"-u\", false);\n+      cmdLine.addArgument(userName, false);\n+    }\n     cmdLine.addArgument(\"-l\", false);\n     cmdLine.addArgument(localRepoDir, false);\n ",
                "raw_url": "https://github.com/apache/zeppelin/raw/31f584cfee41598aab16da8d84752e69b80b083c/zeppelin-interpreter/src/main/java/org/apache/zeppelin/interpreter/remote/RemoteInterpreterManagedProcess.java",
                "sha": "f3d5f91485268619e5e4f485d40116b03840ae54",
                "status": "modified"
            },
            {
                "additions": 4,
                "blob_url": "https://github.com/apache/zeppelin/blob/31f584cfee41598aab16da8d84752e69b80b083c/zeppelin-interpreter/src/main/java/org/apache/zeppelin/interpreter/remote/RemoteInterpreterProcess.java",
                "changes": 7,
                "contents_url": "https://api.github.com/repos/apache/zeppelin/contents/zeppelin-interpreter/src/main/java/org/apache/zeppelin/interpreter/remote/RemoteInterpreterProcess.java?ref=31f584cfee41598aab16da8d84752e69b80b083c",
                "deletions": 3,
                "filename": "zeppelin-interpreter/src/main/java/org/apache/zeppelin/interpreter/remote/RemoteInterpreterProcess.java",
                "patch": "@@ -63,18 +63,19 @@ public RemoteInterpreterProcess(\n \n   public abstract String getHost();\n   public abstract int getPort();\n-  public abstract void start();\n+  public abstract void start(String userName, Boolean isUserImpersonate);\n   public abstract void stop();\n   public abstract boolean isRunning();\n \n   public int getConnectTimeout() {\n     return connectTimeout;\n   }\n \n-  public int reference(InterpreterGroup interpreterGroup) {\n+  public int reference(InterpreterGroup interpreterGroup, String userName,\n+                       Boolean isUserImpersonate) {\n     synchronized (referenceCount) {\n       if (!isRunning()) {\n-        start();\n+        start(userName, isUserImpersonate);\n       }\n \n       if (clientPool == null) {",
                "raw_url": "https://github.com/apache/zeppelin/raw/31f584cfee41598aab16da8d84752e69b80b083c/zeppelin-interpreter/src/main/java/org/apache/zeppelin/interpreter/remote/RemoteInterpreterProcess.java",
                "sha": "c7b2205226dce0ca27beda707d731e0b09b46479",
                "status": "modified"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/zeppelin/blob/31f584cfee41598aab16da8d84752e69b80b083c/zeppelin-interpreter/src/main/java/org/apache/zeppelin/interpreter/remote/RemoteInterpreterRunningProcess.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/zeppelin/contents/zeppelin-interpreter/src/main/java/org/apache/zeppelin/interpreter/remote/RemoteInterpreterRunningProcess.java?ref=31f584cfee41598aab16da8d84752e69b80b083c",
                "deletions": 1,
                "filename": "zeppelin-interpreter/src/main/java/org/apache/zeppelin/interpreter/remote/RemoteInterpreterRunningProcess.java",
                "patch": "@@ -51,7 +51,7 @@ public int getPort() {\n   }\n \n   @Override\n-  public void start() {\n+  public void start(String userName, Boolean isUserImpersonate) {\n     // assume process is externally managed. nothing to do\n   }\n ",
                "raw_url": "https://github.com/apache/zeppelin/raw/31f584cfee41598aab16da8d84752e69b80b083c/zeppelin-interpreter/src/main/java/org/apache/zeppelin/interpreter/remote/RemoteInterpreterRunningProcess.java",
                "sha": "bb176bea590c322f57ea1d6179d7578de5473841",
                "status": "modified"
            },
            {
                "additions": 3,
                "blob_url": "https://github.com/apache/zeppelin/blob/31f584cfee41598aab16da8d84752e69b80b083c/zeppelin-interpreter/src/test/java/org/apache/zeppelin/interpreter/remote/RemoteAngularObjectTest.java",
                "changes": 4,
                "contents_url": "https://api.github.com/repos/apache/zeppelin/contents/zeppelin-interpreter/src/test/java/org/apache/zeppelin/interpreter/remote/RemoteAngularObjectTest.java?ref=31f584cfee41598aab16da8d84752e69b80b083c",
                "deletions": 1,
                "filename": "zeppelin-interpreter/src/test/java/org/apache/zeppelin/interpreter/remote/RemoteAngularObjectTest.java",
                "patch": "@@ -74,7 +74,9 @@ public void setUp() throws Exception {\n         env,\n         10 * 1000,\n         null,\n-        null\n+        null,\n+        \"anonymous\",\n+        false\n     );\n \n     intpGroup.put(\"note\", new LinkedList<Interpreter>());",
                "raw_url": "https://github.com/apache/zeppelin/raw/31f584cfee41598aab16da8d84752e69b80b083c/zeppelin-interpreter/src/test/java/org/apache/zeppelin/interpreter/remote/RemoteAngularObjectTest.java",
                "sha": "e876ef9316810dbe4ce7ecc4ec50e0c76c63aafa",
                "status": "modified"
            },
            {
                "additions": 3,
                "blob_url": "https://github.com/apache/zeppelin/blob/31f584cfee41598aab16da8d84752e69b80b083c/zeppelin-interpreter/src/test/java/org/apache/zeppelin/interpreter/remote/RemoteInterpreterOutputTestStream.java",
                "changes": 4,
                "contents_url": "https://api.github.com/repos/apache/zeppelin/contents/zeppelin-interpreter/src/test/java/org/apache/zeppelin/interpreter/remote/RemoteInterpreterOutputTestStream.java?ref=31f584cfee41598aab16da8d84752e69b80b083c",
                "deletions": 1,
                "filename": "zeppelin-interpreter/src/test/java/org/apache/zeppelin/interpreter/remote/RemoteInterpreterOutputTestStream.java",
                "patch": "@@ -72,7 +72,9 @@ private RemoteInterpreter createMockInterpreter() {\n         env,\n         10 * 1000,\n         this,\n-        null);\n+        null,\n+        \"anonymous\",\n+        false);\n \n     intpGroup.get(\"note\").add(intp);\n     intp.setInterpreterGroup(intpGroup);",
                "raw_url": "https://github.com/apache/zeppelin/raw/31f584cfee41598aab16da8d84752e69b80b083c/zeppelin-interpreter/src/test/java/org/apache/zeppelin/interpreter/remote/RemoteInterpreterOutputTestStream.java",
                "sha": "95a34b9acf7c7a2b468f805c1f2fc05da6a45dd7",
                "status": "modified"
            },
            {
                "additions": 4,
                "blob_url": "https://github.com/apache/zeppelin/blob/31f584cfee41598aab16da8d84752e69b80b083c/zeppelin-interpreter/src/test/java/org/apache/zeppelin/interpreter/remote/RemoteInterpreterProcessTest.java",
                "changes": 8,
                "contents_url": "https://api.github.com/repos/apache/zeppelin/contents/zeppelin-interpreter/src/test/java/org/apache/zeppelin/interpreter/remote/RemoteInterpreterProcessTest.java?ref=31f584cfee41598aab16da8d84752e69b80b083c",
                "deletions": 4,
                "filename": "zeppelin-interpreter/src/test/java/org/apache/zeppelin/interpreter/remote/RemoteInterpreterProcessTest.java",
                "patch": "@@ -46,8 +46,8 @@ public void testStartStop() {\n         10 * 1000, null, null);\n     assertFalse(rip.isRunning());\n     assertEquals(0, rip.referenceCount());\n-    assertEquals(1, rip.reference(intpGroup));\n-    assertEquals(2, rip.reference(intpGroup));\n+    assertEquals(1, rip.reference(intpGroup, \"anonymous\", false));\n+    assertEquals(2, rip.reference(intpGroup, \"anonymous\", false));\n     assertEquals(true, rip.isRunning());\n     assertEquals(1, rip.dereference());\n     assertEquals(true, rip.isRunning());\n@@ -61,7 +61,7 @@ public void testClientFactory() throws Exception {\n     RemoteInterpreterManagedProcess rip = new RemoteInterpreterManagedProcess(\n         INTERPRETER_SCRIPT, \"nonexists\", \"fakeRepo\", new HashMap<String, String>(),\n         mock(RemoteInterpreterEventPoller.class), 10 * 1000);\n-    rip.reference(intpGroup);\n+    rip.reference(intpGroup, \"anonymous\", false);\n     assertEquals(0, rip.getNumActiveClient());\n     assertEquals(0, rip.getNumIdleClient());\n \n@@ -106,7 +106,7 @@ public void testStartStopRemoteInterpreter() throws TException, InterruptedExcep\n         , 10 * 1000);\n     assertFalse(rip.isRunning());\n     assertEquals(0, rip.referenceCount());\n-    assertEquals(1, rip.reference(intpGroup));\n+    assertEquals(1, rip.reference(intpGroup, \"anonymous\", false));\n     assertEquals(true, rip.isRunning());\n   }\n }",
                "raw_url": "https://github.com/apache/zeppelin/raw/31f584cfee41598aab16da8d84752e69b80b083c/zeppelin-interpreter/src/test/java/org/apache/zeppelin/interpreter/remote/RemoteInterpreterProcessTest.java",
                "sha": "99ab63b34a71563298645b55c5c880e4eca6084c",
                "status": "modified"
            },
            {
                "additions": 17,
                "blob_url": "https://github.com/apache/zeppelin/blob/31f584cfee41598aab16da8d84752e69b80b083c/zeppelin-interpreter/src/test/java/org/apache/zeppelin/interpreter/remote/RemoteInterpreterTest.java",
                "changes": 23,
                "contents_url": "https://api.github.com/repos/apache/zeppelin/contents/zeppelin-interpreter/src/test/java/org/apache/zeppelin/interpreter/remote/RemoteInterpreterTest.java?ref=31f584cfee41598aab16da8d84752e69b80b083c",
                "deletions": 6,
                "filename": "zeppelin-interpreter/src/test/java/org/apache/zeppelin/interpreter/remote/RemoteInterpreterTest.java",
                "patch": "@@ -90,7 +90,9 @@ private RemoteInterpreter createMockInterpreterA(Properties p, String noteId) {\n             env,\n             10 * 1000,\n             null,\n-            null);\n+            null,\n+        \"anonymous\",\n+        false);\n   }\n \n   private RemoteInterpreter createMockInterpreterB(Properties p) {\n@@ -108,7 +110,9 @@ private RemoteInterpreter createMockInterpreterB(Properties p, String noteId) {\n             env,\n             10 * 1000,\n             null,\n-            null);\n+            null,\n+        \"anonymous\",\n+        false);\n   }\n \n   @Test\n@@ -207,7 +211,9 @@ public void testRemoteSchedulerSharing() throws TTransportException, IOException\n         env,\n         10 * 1000,\n         null,\n-        null);\n+        null,\n+        \"anonymous\",\n+        false);\n \n \n     intpGroup.get(\"note\").add(intpA);\n@@ -223,7 +229,9 @@ public void testRemoteSchedulerSharing() throws TTransportException, IOException\n         env,\n         10 * 1000,\n         null,\n-        null);\n+        null,\n+        \"anonymous\",\n+        false);\n \n     intpGroup.get(\"note\").add(intpB);\n     intpB.setInterpreterGroup(intpGroup);\n@@ -687,7 +695,8 @@ public void should_push_local_angular_repo_to_remote() throws Exception {\n     //Given\n     final Client client = Mockito.mock(Client.class);\n     final RemoteInterpreter intr = new RemoteInterpreter(new Properties(), \"noteId\",\n-            MockInterpreterA.class.getName(), \"runner\", \"path\",\"localRepo\", env, 10 * 1000, null, null);\n+        MockInterpreterA.class.getName(), \"runner\", \"path\", \"localRepo\", env, 10 * 1000, null,\n+        null, \"anonymous\", false);\n     final AngularObjectRegistry registry = new AngularObjectRegistry(\"spark\", null);\n     registry.add(\"name\", \"DuyHai DOAN\", \"nodeId\", \"paragraphId\");\n     final InterpreterGroup interpreterGroup = new InterpreterGroup(\"groupId\");\n@@ -733,7 +742,9 @@ public void testEnvronmentAndPropertySet() {\n         env,\n         10 * 1000,\n         null,\n-        null);\n+        null,\n+        \"anonymous\",\n+        false);\n \n     intpGroup.put(\"note\", new LinkedList<Interpreter>());\n     intpGroup.get(\"note\").add(intp);",
                "raw_url": "https://github.com/apache/zeppelin/raw/31f584cfee41598aab16da8d84752e69b80b083c/zeppelin-interpreter/src/test/java/org/apache/zeppelin/interpreter/remote/RemoteInterpreterTest.java",
                "sha": "ec7c02a8d4cb324a4293c0f181fe37b3744ad885",
                "status": "modified"
            },
            {
                "additions": 6,
                "blob_url": "https://github.com/apache/zeppelin/blob/31f584cfee41598aab16da8d84752e69b80b083c/zeppelin-interpreter/src/test/java/org/apache/zeppelin/resource/DistributedResourcePoolTest.java",
                "changes": 8,
                "contents_url": "https://api.github.com/repos/apache/zeppelin/contents/zeppelin-interpreter/src/test/java/org/apache/zeppelin/resource/DistributedResourcePoolTest.java?ref=31f584cfee41598aab16da8d84752e69b80b083c",
                "deletions": 2,
                "filename": "zeppelin-interpreter/src/test/java/org/apache/zeppelin/resource/DistributedResourcePoolTest.java",
                "patch": "@@ -70,7 +70,9 @@ public void setUp() throws Exception {\n         env,\n         10 * 1000,\n         null,\n-        null\n+        null,\n+        \"anonymous\",\n+        false\n     );\n \n     intpGroup1 = new InterpreterGroup(\"intpGroup1\");\n@@ -88,7 +90,9 @@ public void setUp() throws Exception {\n         env,\n         10 * 1000,\n         null,\n-        null\n+        null,\n+        \"anonymous\",\n+        false\n     );\n \n     intpGroup2 = new InterpreterGroup(\"intpGroup2\");",
                "raw_url": "https://github.com/apache/zeppelin/raw/31f584cfee41598aab16da8d84752e69b80b083c/zeppelin-interpreter/src/test/java/org/apache/zeppelin/resource/DistributedResourcePoolTest.java",
                "sha": "b76f06350749640ffcd8c03a14cd59038616cce1",
                "status": "modified"
            },
            {
                "additions": 6,
                "blob_url": "https://github.com/apache/zeppelin/blob/31f584cfee41598aab16da8d84752e69b80b083c/zeppelin-interpreter/src/test/java/org/apache/zeppelin/scheduler/RemoteSchedulerTest.java",
                "changes": 8,
                "contents_url": "https://api.github.com/repos/apache/zeppelin/contents/zeppelin-interpreter/src/test/java/org/apache/zeppelin/scheduler/RemoteSchedulerTest.java?ref=31f584cfee41598aab16da8d84752e69b80b083c",
                "deletions": 2,
                "filename": "zeppelin-interpreter/src/test/java/org/apache/zeppelin/scheduler/RemoteSchedulerTest.java",
                "patch": "@@ -81,7 +81,9 @@ public void test() throws Exception {\n         env,\n         10 * 1000,\n         this,\n-        null);\n+        null,\n+        \"anonymous\",\n+        false);\n \n     intpGroup.put(\"note\", new LinkedList<Interpreter>());\n     intpGroup.get(\"note\").add(intpA);\n@@ -170,7 +172,9 @@ public void testAbortOnPending() throws Exception {\n         env,\n         10 * 1000,\n         this,\n-        null);\n+        null,\n+        \"anonymous\",\n+        false);\n \n     intpGroup.put(\"note\", new LinkedList<Interpreter>());\n     intpGroup.get(\"note\").add(intpA);",
                "raw_url": "https://github.com/apache/zeppelin/raw/31f584cfee41598aab16da8d84752e69b80b083c/zeppelin-interpreter/src/test/java/org/apache/zeppelin/scheduler/RemoteSchedulerTest.java",
                "sha": "c67211c5f8b41951306b4266b909cf1d1a28af47",
                "status": "modified"
            },
            {
                "additions": 14,
                "blob_url": "https://github.com/apache/zeppelin/blob/31f584cfee41598aab16da8d84752e69b80b083c/zeppelin-web/src/app/interpreter/interpreter-create/interpreter-create.html",
                "changes": 15,
                "contents_url": "https://api.github.com/repos/apache/zeppelin/contents/zeppelin-web/src/app/interpreter/interpreter-create/interpreter-create.html?ref=31f584cfee41598aab16da8d84752e69b80b083c",
                "deletions": 1,
                "filename": "zeppelin-web/src/app/interpreter/interpreter-create/interpreter-create.html",
                "patch": "@@ -196,7 +196,20 @@ <h5>Option</h5>\n             </div>\n           </div>\n         </div>\n-        <div class=\"row interpreter\" style=\"margin-top: 5px;\">\n+        <div class=\"row interpreter\" style=\"margin-top: 5px;\"\n+             ng-show=\"getInterpreterRunningOption(setting.id)=='Per User' && getPerUserOption(setting.id)=='isolated'\">\n+          <div class=\"col-md-12\">\n+            <div class=\"checkbox remove-margin-top-bottom\">\n+          <span class=\"input-group\" style=\"line-height:30px;\">\n+            <label>\n+              <input type=\"checkbox\" style=\"width:20px\" ng-model=\"setting.option.isUserImpersonate\" />\n+                User Impersonate\n+            </label>\n+          </span>\n+            </div>\n+          </div>\n+        </div>\n+        <div class=\"row interpreter\">\n           <div class=\"col-md-12\">\n             <div class=\"checkbox remove-margin-top-bottom\">\n           <span class=\"input-group\" style=\"line-height:30px;\">",
                "raw_url": "https://github.com/apache/zeppelin/raw/31f584cfee41598aab16da8d84752e69b80b083c/zeppelin-web/src/app/interpreter/interpreter-create/interpreter-create.html",
                "sha": "bae234a2408d0c28e0606ec88f06d69e42a7cb4c",
                "status": "modified"
            },
            {
                "additions": 7,
                "blob_url": "https://github.com/apache/zeppelin/blob/31f584cfee41598aab16da8d84752e69b80b083c/zeppelin-web/src/app/interpreter/interpreter.controller.js",
                "changes": 7,
                "contents_url": "https://api.github.com/repos/apache/zeppelin/contents/zeppelin-web/src/app/interpreter/interpreter.controller.js?ref=31f584cfee41598aab16da8d84752e69b80b083c",
                "deletions": 0,
                "filename": "zeppelin-web/src/app/interpreter/interpreter.controller.js",
                "patch": "@@ -327,6 +327,13 @@\n             if (setting.option.setPermission === undefined) {\n               setting.option.setPermission = false;\n             }\n+            if (setting.option.isUserImpersonate === undefined) {\n+              setting.option.isUserImpersonate = false;\n+            }\n+            if (!($scope.getInterpreterRunningOption(settingId) === 'Per User' &&\n+                $scope.getPerUserOption(settingId) === 'isolated')) {\n+              setting.option.isUserImpersonate = false;\n+            }\n             if (setting.option.remote === undefined) {\n               // remote always true for now\n               setting.option.remote = true;",
                "raw_url": "https://github.com/apache/zeppelin/raw/31f584cfee41598aab16da8d84752e69b80b083c/zeppelin-web/src/app/interpreter/interpreter.controller.js",
                "sha": "ed5a45c9c5e15c640b5d92b3226667865e15b21f",
                "status": "modified"
            },
            {
                "additions": 17,
                "blob_url": "https://github.com/apache/zeppelin/blob/31f584cfee41598aab16da8d84752e69b80b083c/zeppelin-web/src/app/interpreter/interpreter.html",
                "changes": 18,
                "contents_url": "https://api.github.com/repos/apache/zeppelin/contents/zeppelin-web/src/app/interpreter/interpreter.html?ref=31f584cfee41598aab16da8d84752e69b80b083c",
                "deletions": 1,
                "filename": "zeppelin-web/src/app/interpreter/interpreter.html",
                "patch": "@@ -313,7 +313,23 @@ <h5>Option</h5>\n         </div>\n       </div>\n     </div>\n-    <div class=\"row interpreter\" style=\"margin-top: 5px;\">\n+\n+    <div class=\"row interpreter\" style=\"margin-top: 5px;\"\n+         ng-show=\"getInterpreterRunningOption(setting.id)=='Per User' && getPerUserOption(setting.id)=='isolated'\">\n+      <div class=\"col-md-12\">\n+        <div class=\"checkbox remove-margin-top-bottom\">\n+          <span class=\"input-group\" style=\"line-height:30px;\">\n+            <label>\n+              <input type=\"checkbox\" style=\"width:20px\"\n+                     ng-model=\"setting.option.isUserImpersonate\"\n+                     ng-disabled=\"!valueform.$visible\" />\n+            User Impersonate\n+            </label>\n+          </span>\n+        </div>\n+      </div>\n+    </div>\n+    <div class=\"row interpreter\">\n       <div class=\"col-md-12\">\n         <div class=\"checkbox remove-margin-top-bottom\">\n           <span class=\"input-group\" style=\"line-height:30px;\">",
                "raw_url": "https://github.com/apache/zeppelin/raw/31f584cfee41598aab16da8d84752e69b80b083c/zeppelin-web/src/app/interpreter/interpreter.html",
                "sha": "e91dabe214f84b53978fdd2e1e30667561c69ee0",
                "status": "modified"
            },
            {
                "additions": 8,
                "blob_url": "https://github.com/apache/zeppelin/blob/31f584cfee41598aab16da8d84752e69b80b083c/zeppelin-zengine/src/main/java/org/apache/zeppelin/interpreter/InterpreterFactory.java",
                "changes": 15,
                "contents_url": "https://api.github.com/repos/apache/zeppelin/contents/zeppelin-zengine/src/main/java/org/apache/zeppelin/interpreter/InterpreterFactory.java?ref=31f584cfee41598aab16da8d84752e69b80b083c",
                "deletions": 7,
                "filename": "zeppelin-zengine/src/main/java/org/apache/zeppelin/interpreter/InterpreterFactory.java",
                "patch": "@@ -776,10 +776,10 @@ public void createInterpretersForNote(InterpreterSetting interpreterSetting, Str\n         if (option.isExistingProcess()) {\n           interpreter =\n               connectToRemoteRepl(noteId, info.getClassName(), option.getHost(), option.getPort(),\n-                  properties);\n+                  properties, user, option.isUserImpersonate);\n         } else {\n           interpreter = createRemoteRepl(path, key, info.getClassName(), properties,\n-              interpreterSetting.getId());\n+              interpreterSetting.getId(), user, option.isUserImpersonate());\n         }\n       } else {\n         interpreter = createRepl(interpreterSetting.getPath(), info.getClassName(), properties);\n@@ -1100,25 +1100,26 @@ private Interpreter createRepl(String dirName, String className, Properties prop\n   }\n \n   private Interpreter connectToRemoteRepl(String noteId, String className, String host, int port,\n-      Properties property) {\n+      Properties property, String userName, Boolean isUserImpersonate) {\n     int connectTimeout = conf.getInt(ConfVars.ZEPPELIN_INTERPRETER_CONNECT_TIMEOUT);\n     int maxPoolSize = conf.getInt(ConfVars.ZEPPELIN_INTERPRETER_MAX_POOL_SIZE);\n     LazyOpenInterpreter intp = new LazyOpenInterpreter(\n         new RemoteInterpreter(property, noteId, className, host, port, connectTimeout, maxPoolSize,\n-            remoteInterpreterProcessListener, appEventListener));\n+            remoteInterpreterProcessListener, appEventListener, userName, isUserImpersonate));\n     return intp;\n   }\n \n   private Interpreter createRemoteRepl(String interpreterPath, String noteId, String className,\n-      Properties property, String interpreterSettingId) {\n+      Properties property, String interpreterSettingId, String userName,\n+      Boolean isUserImpersonate) {\n     int connectTimeout = conf.getInt(ConfVars.ZEPPELIN_INTERPRETER_CONNECT_TIMEOUT);\n     String localRepoPath = conf.getInterpreterLocalRepoPath() + \"/\" + interpreterSettingId;\n     int maxPoolSize = conf.getInt(ConfVars.ZEPPELIN_INTERPRETER_MAX_POOL_SIZE);\n \n     RemoteInterpreter remoteInterpreter =\n         new RemoteInterpreter(property, noteId, className, conf.getInterpreterRemoteRunnerPath(),\n             interpreterPath, localRepoPath, connectTimeout, maxPoolSize,\n-            remoteInterpreterProcessListener, appEventListener);\n+            remoteInterpreterProcessListener, appEventListener, userName, isUserImpersonate);\n     remoteInterpreter.addEnv(env);\n \n     return new LazyOpenInterpreter(remoteInterpreter);\n@@ -1414,7 +1415,7 @@ private Interpreter getDevInterpreter() {\n       InterpreterGroup interpreterGroup = createInterpreterGroup(\"dev\", option);\n \n       devInterpreter = connectToRemoteRepl(\"dev\", DevInterpreter.class.getName(), \"localhost\",\n-          ZeppelinDevServer.DEFAULT_TEST_INTERPRETER_PORT, new Properties());\n+          ZeppelinDevServer.DEFAULT_TEST_INTERPRETER_PORT, new Properties(), \"anonymous\", false);\n \n       LinkedList<Interpreter> intpList = new LinkedList<>();\n       intpList.add(devInterpreter);",
                "raw_url": "https://github.com/apache/zeppelin/raw/31f584cfee41598aab16da8d84752e69b80b083c/zeppelin-zengine/src/main/java/org/apache/zeppelin/interpreter/InterpreterFactory.java",
                "sha": "1b46ca4a3b1d43af2cf0d51b170cfadebfa3aa30",
                "status": "modified"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/zeppelin/blob/31f584cfee41598aab16da8d84752e69b80b083c/zeppelin-zengine/src/main/java/org/apache/zeppelin/notebook/Paragraph.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/zeppelin/contents/zeppelin-zengine/src/main/java/org/apache/zeppelin/notebook/Paragraph.java?ref=31f584cfee41598aab16da8d84752e69b80b083c",
                "deletions": 1,
                "filename": "zeppelin-zengine/src/main/java/org/apache/zeppelin/notebook/Paragraph.java",
                "patch": "@@ -589,7 +589,7 @@ public String getMagic() {\n   }\n \n   private boolean isValidInterpreter(String replName) {\n-    return factory.getInterpreter(\"\",\n+    return factory.getInterpreter(user,\n         note.getId(), replName) != null;\n   }\n }",
                "raw_url": "https://github.com/apache/zeppelin/raw/31f584cfee41598aab16da8d84752e69b80b083c/zeppelin-zengine/src/main/java/org/apache/zeppelin/notebook/Paragraph.java",
                "sha": "a536978db49d45b74e985f0651a61634b1096b2a",
                "status": "modified"
            }
        ],
        "message": "[ZEPPELIN-1320] Run zeppelin interpreter process as web front end user\n\nHave recreated this from https://github.com/apache/zeppelin/pull/1322\n### What is this PR for?\n\nWhile running a Notebook using shell, spark, python uses same user as which zeppelin server is running. Which means these interprets have same permission on file system as zeppelin server.\nIMO users should be able to impersonate themselves as a complete security system.\n### What type of PR is it?\n\n[Improvement]\n### Todos\n- [x] - Update doc\n- [x] - FIX NPEs\n- [x] - FIX CI\n### What is the Jira issue?\n- [ZEPPELIN-1320](https://issues.apache.org/jira/browse/ZEPPELIN-1320)\n### How should this be tested?\n- Enable shiro auth in shiro.ini\n- Add ssh key for the same user you want to try and impersonate (say user1).\n\n```\nadduser user1\nssh-keygen\nssh user1localhost mkdir -p .ssh\ncat ~/.ssh/id_rsa.pub | ssh user1localhost 'cat >> .ssh/authorized_keys'\n```\n- Start zeppelin server, try and run following in paragraph in a notebook\n- Go to interpreter setting page, and enable \"User Impersonate\" in any of the interpreter (in my example its shell interpreter)\n\n```\n%sh\nwhoami\n```\n\nCheck that it should run as new user, i.e. \"user1\"\n### Screenshots (if appropriate)\n\n![user impersonate](https://cloud.githubusercontent.com/assets/674497/20213127/f32fdc52-a82c-11e6-8e33-aebd6a943c5f.gif)\n\n### Questions:\n- Does the licenses files need update? no\n- Is there breaking changes for older versions? no\n- Does this needs documentation? yes\n\nAuthor: Prabhjyot Singh <prabhjyotsingh@gmail.org>\n\nCloses #1554 from prabhjyotsingh/ZEPPELIN-1320-2 and squashes the following commits:\n\ndc69c9d [Prabhjyot Singh] @Leemoonsoo review comment: making ZEPPELIN_SSH_COMMAND configurable\n1b26cc0 [Prabhjyot Singh] add doc\n5a76839 [Prabhjyot Singh] show User Impersonate only when interpreter setting is \"per user\" and \"isolated\"\n02c3084 [Prabhjyot Singh] Merge remote-tracking branch 'origin/master' into ZEPPELIN-1320-2\n03b2f20 [Prabhjyot Singh] use user instead of \"\"\n0ff80ec [Prabhjyot Singh] Merge remote-tracking branch 'origin/master' into ZEPPELIN-1320-2\ndd0731d [Prabhjyot Singh] fix missing test cases\naff1bf0 [Prabhjyot Singh] user should have option to run these interpreters as different user.",
        "parent": "https://github.com/apache/zeppelin/commit/f28c2b308e063fcc92b7bd1e56c4e743fd20f18f",
        "repo": "zeppelin",
        "unit_tests": [
            "ParagraphTest.java"
        ]
    },
    "zeppelin_41c74f5": {
        "bug_id": "zeppelin_41c74f5",
        "commit": "https://github.com/apache/zeppelin/commit/41c74f59a25bcf0bb5bceac2fad4c723db2165f4",
        "file": [
            {
                "additions": 10,
                "blob_url": "https://github.com/apache/zeppelin/blob/41c74f59a25bcf0bb5bceac2fad4c723db2165f4/zeppelin-zengine/src/main/java/org/apache/zeppelin/interpreter/InterpreterFactory.java",
                "changes": 14,
                "contents_url": "https://api.github.com/repos/apache/zeppelin/contents/zeppelin-zengine/src/main/java/org/apache/zeppelin/interpreter/InterpreterFactory.java?ref=41c74f59a25bcf0bb5bceac2fad4c723db2165f4",
                "deletions": 4,
                "filename": "zeppelin-zengine/src/main/java/org/apache/zeppelin/interpreter/InterpreterFactory.java",
                "patch": "@@ -212,8 +212,11 @@ public boolean accept(Path entry) throws IOException {\n           if (null != infos) {\n             Properties p = new Properties();\n             for (RegisteredInterpreter info : infos) {\n-              for (String key : info.getProperties().keySet()) {\n-                p.put(key, info.getProperties().get(key).getValue());\n+              Map<String, InterpreterProperty> interpreterProperties = info.getProperties();\n+              if (null != interpreterProperties) {\n+                for (String key : info.getProperties().keySet()) {\n+                  p.put(key, info.getProperties().get(key).getValue());\n+                }\n               }\n             }\n             add(groupName, groupName, new LinkedList<Dependency>(), defaultOption, p);\n@@ -224,8 +227,11 @@ public boolean accept(Path entry) throws IOException {\n           List<RegisteredInterpreter> infos = groupClassNameMap.get(groupName);\n           Properties p = new Properties();\n           for (RegisteredInterpreter info : infos) {\n-            for (String key : info.getProperties().keySet()) {\n-              p.put(key, info.getProperties().get(key).getValue());\n+            Map<String, InterpreterProperty> interpreterProperties = info.getProperties();\n+            if (null != interpreterProperties) {\n+              for (String key : info.getProperties().keySet()) {\n+                p.put(key, info.getProperties().get(key).getValue());\n+              }\n             }\n           }\n           add(groupName, groupName, new LinkedList<Dependency>(), defaultOption, p);",
                "raw_url": "https://github.com/apache/zeppelin/raw/41c74f59a25bcf0bb5bceac2fad4c723db2165f4/zeppelin-zengine/src/main/java/org/apache/zeppelin/interpreter/InterpreterFactory.java",
                "sha": "a691628cb029af111985ca16f4dfcbe37c456cc0",
                "status": "modified"
            }
        ],
        "message": "[HOTFIX] NPE when there's no properties field in interpreter-setting.json\n\n### What is this PR for?\nFixing NPE while initializing interpreters from interpreter-setting.json\n\n### What type of PR is it?\n[Bug Fix | Hot Fix]\n\n### Todos\n* [x] - Fix NPE\n\n### What is the Jira issue?\nN/A\n\n### How should this be tested?\n1. delete `properties` in one of `interpreter-setting.json`\n1. Build and run\n1. Got error\n1. Apply this PR\n1. Build and run\n1. Run it successfully\n\n### Screenshots (if appropriate)\n\n### Questions:\n* Does the licenses files need update? No\n* Is there breaking changes for older versions? No\n* Does this needs documentation? No\n\nAuthor: Jongyoul Lee <jongyoul@gmail.com>\n\nCloses #1128 from jongyoul/hotfix/interpreter-properties-is-null and squashes the following commits:\n\n1dcf562 [Jongyoul Lee] Fixed NPE when there's no properties field in interpreter-setting.json",
        "parent": "https://github.com/apache/zeppelin/commit/a29fe14735e54d812a377b457922bd9039953da5",
        "repo": "zeppelin",
        "unit_tests": [
            "InterpreterFactoryTest.java"
        ]
    },
    "zeppelin_623b4ac": {
        "bug_id": "zeppelin_623b4ac",
        "commit": "https://github.com/apache/zeppelin/commit/623b4ace9e5c8f1667bd34c21b944b9d4636a2bd",
        "file": [
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/zeppelin/blob/623b4ace9e5c8f1667bd34c21b944b9d4636a2bd/jdbc/src/main/java/org/apache/zeppelin/jdbc/SqlCompleter.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/zeppelin/contents/jdbc/src/main/java/org/apache/zeppelin/jdbc/SqlCompleter.java?ref=623b4ace9e5c8f1667bd34c21b944b9d4636a2bd",
                "deletions": 0,
                "filename": "jdbc/src/main/java/org/apache/zeppelin/jdbc/SqlCompleter.java",
                "patch": "@@ -111,6 +111,8 @@ public int complete(String buffer, int cursor, List<CharSequence> candidates) {\n       try {\n         while (schemas.next()) {\n           String schemaName = schemas.getString(\"TABLE_SCHEM\");\n+          if (schemaName == null)\n+            schemaName = \"\";\n           if (schemaFilter.equals(\"\") || schemaFilter == null || schemaName.matches(\n                   schemaFilter.replace(\"_\", \".\").replace(\"%\", \".*?\"))) {\n             res.add(schemaName);",
                "raw_url": "https://github.com/apache/zeppelin/raw/623b4ace9e5c8f1667bd34c21b944b9d4636a2bd/jdbc/src/main/java/org/apache/zeppelin/jdbc/SqlCompleter.java",
                "sha": "bf2a25ea3a9cbdeedf2e8ffd2a225d938380f729",
                "status": "modified"
            }
        ],
        "message": "ZEPPELIN-2241: JDBC interpreter throws npe on connecting to any db that has a schema with \"null\" name\n\n### What is this PR for?\nA few sentences describing the overall goals of the pull request's commits.\nFirst time? Check out the contributing guide - https://zeppelin.apache.org/contribution/contributions.html\n\nPrevents JDBC interpreter from throwing a stacktrace when the database has a schema with no name (null).\n\n### What type of PR is it?\n[Bug Fix]\n\n### Todos\n* [ ] - Task\n\n### What is the Jira issue?\n* Open an issue on Jira https://issues.apache.org/jira/browse/ZEPPELIN/\n* Put link here, and add [ZEPPELIN-*Jira number*] in PR title, eg. [ZEPPELIN-533]\n\nhttps://issues.apache.org/jira/browse/ZEPPELIN-2241\n\n### How should this be tested?\nOutline the steps to test the PR here.\n\nUse JDBC interpreter to connect to any database that has a schema without a name. Apache Phoenix in particular has such a schema by default.\n\n### Screenshots (if appropriate)\n\n### Questions:\n* Does the licenses files need update?\n\nNo\n\n* Is there breaking changes for older versions?\n\nNo\n\n* Does this needs documentation?\n\nNo\n\nAuthor: Randy Gelhausen <rgelhau@gmail.com>\n\nCloses #2117 from randerzander/master and squashes the following commits:\n\n49d33f9 [Randy Gelhausen] Removing comment per feedback\n79d8a23 [Randy Gelhausen] Added comment to the change\n0101296 [Randy Gelhausen] ZEPPELIN-2241: JDBC interpreter throws npe on connecting to any db that has a schema with \"null\" name",
        "parent": "https://github.com/apache/zeppelin/commit/1ec6e1265338976d2bb928a8450de5fd8cd0f56d",
        "repo": "zeppelin",
        "unit_tests": [
            "SqlCompleterTest.java"
        ]
    },
    "zeppelin_6854bdd": {
        "bug_id": "zeppelin_6854bdd",
        "commit": "https://github.com/apache/zeppelin/commit/6854bdd7d31d5b0c4edd7a5b8dfc4c99dc26f3dc",
        "file": [
            {
                "additions": 4,
                "blob_url": "https://github.com/apache/zeppelin/blob/6854bdd7d31d5b0c4edd7a5b8dfc4c99dc26f3dc/zeppelin-zengine/src/main/java/org/apache/zeppelin/interpreter/InterpreterSettingManager.java",
                "changes": 6,
                "contents_url": "https://api.github.com/repos/apache/zeppelin/contents/zeppelin-zengine/src/main/java/org/apache/zeppelin/interpreter/InterpreterSettingManager.java?ref=6854bdd7d31d5b0c4edd7a5b8dfc4c99dc26f3dc",
                "deletions": 2,
                "filename": "zeppelin-zengine/src/main/java/org/apache/zeppelin/interpreter/InterpreterSettingManager.java",
                "patch": "@@ -518,8 +518,10 @@ private ResourceSet getAllResourcesExcept(String interpreterGroupExcludsion) {\n                 return client.resourcePoolGetAll();\n               }\n             });\n-        for (String res : resourceList) {\n-          resourceSet.add(Resource.fromJson(res));\n+        if (resourceList != null) {\n+          for (String res : resourceList) {\n+            resourceSet.add(Resource.fromJson(res));\n+          }\n         }\n       }\n     }",
                "raw_url": "https://github.com/apache/zeppelin/raw/6854bdd7d31d5b0c4edd7a5b8dfc4c99dc26f3dc/zeppelin-zengine/src/main/java/org/apache/zeppelin/interpreter/InterpreterSettingManager.java",
                "sha": "d730db4b40a6ed7b01db051bd168f89a5baf7354",
                "status": "modified"
            }
        ],
        "message": "[ZEPPELIN-3726] Fix NPE for resourceList function \"getAllResourcesExcept\".\n\n### What is this PR for?\nTrivial fix for exclude NPE in org.apache.zeppelin.interpreter.InterpreterSettingManager#getAllResourcesExcept\n\n### What type of PR is it?\nBug Fix\n\n### What is the Jira issue?\n[[ZEPPELIN-3726]](https://issues.apache.org/jira/browse/ZEPPELIN-3726)\n\n### Questions:\n* Does the licenses files need update? no\n* Is there breaking changes for older versions? no\n* Does this needs documentation? no\n\nAuthor: Maxim Belousov <mebelousov@ya.ru>\n\nCloses #3147 from mebelousov/DW-17923 and squashes the following commits:\n\nfa1b799c8 [Maxim Belousov] Merge branch 'master' of https://github.com/apache/zeppelin\n60a6d040a [Maxim Belousov] Fix possible NPE for resourceList function \"getAllResourcesExcept\".",
        "parent": "https://github.com/apache/zeppelin/commit/041c8d37782cf05a6a8ddb1103f3f741166111ec",
        "repo": "zeppelin",
        "unit_tests": [
            "InterpreterSettingManagerTest.java"
        ]
    },
    "zeppelin_6e3a1d2": {
        "bug_id": "zeppelin_6e3a1d2",
        "commit": "https://github.com/apache/zeppelin/commit/6e3a1d26ffc3e9bae355df3533430791cdcfd5e4",
        "file": [
            {
                "additions": 6,
                "blob_url": "https://github.com/apache/zeppelin/blob/6e3a1d26ffc3e9bae355df3533430791cdcfd5e4/zeppelin-zengine/src/main/java/org/apache/zeppelin/notebook/repo/NotebookRepoSync.java",
                "changes": 10,
                "contents_url": "https://api.github.com/repos/apache/zeppelin/contents/zeppelin-zengine/src/main/java/org/apache/zeppelin/notebook/repo/NotebookRepoSync.java?ref=6e3a1d26ffc3e9bae355df3533430791cdcfd5e4",
                "deletions": 4,
                "filename": "zeppelin-zengine/src/main/java/org/apache/zeppelin/notebook/repo/NotebookRepoSync.java",
                "patch": "@@ -186,7 +186,8 @@ void sync(int sourceRepoIndex, int destRepoIndex, AuthenticationInfo subject) th\n     List <NoteInfo> srcNotes = auth.filterByUser(allSrcNotes, subject);\n     List <NoteInfo> dstNotes = dstRepo.list(subject);\n \n-    Map<String, List<String>> noteIDs = notesCheckDiff(srcNotes, srcRepo, dstNotes, dstRepo);\n+    Map<String, List<String>> noteIDs = notesCheckDiff(srcNotes, srcRepo, dstNotes, dstRepo,\n+        subject);\n     List<String> pushNoteIDs = noteIDs.get(pushKey);\n     List<String> pullNoteIDs = noteIDs.get(pullKey);\n     List<String> delDstNoteIDs = noteIDs.get(delDstKey);\n@@ -263,7 +264,8 @@ NotebookRepo getRepo(int repoIndex) throws IOException {\n   }\n \n   private Map<String, List<String>> notesCheckDiff(List<NoteInfo> sourceNotes,\n-      NotebookRepo sourceRepo, List<NoteInfo> destNotes, NotebookRepo destRepo)\n+      NotebookRepo sourceRepo, List<NoteInfo> destNotes, NotebookRepo destRepo,\n+      AuthenticationInfo subject)\n       throws IOException {\n     List <String> pushIDs = new ArrayList<String>();\n     List <String> pullIDs = new ArrayList<String>();\n@@ -275,8 +277,8 @@ NotebookRepo getRepo(int repoIndex) throws IOException {\n       dnote = containsID(destNotes, snote.getId());\n       if (dnote != null) {\n         /* note exists in source and destination storage systems */\n-        sdate = lastModificationDate(sourceRepo.get(snote.getId(), null));\n-        ddate = lastModificationDate(destRepo.get(dnote.getId(), null));\n+        sdate = lastModificationDate(sourceRepo.get(snote.getId(), subject));\n+        ddate = lastModificationDate(destRepo.get(dnote.getId(), subject));\n \n         if (sdate.compareTo(ddate) != 0) {\n           if (sdate.after(ddate) || oneWaySync) {",
                "raw_url": "https://github.com/apache/zeppelin/raw/6e3a1d26ffc3e9bae355df3533430791cdcfd5e4/zeppelin-zengine/src/main/java/org/apache/zeppelin/notebook/repo/NotebookRepoSync.java",
                "sha": "fdf7e782653bfc55e88975c9250e52804c922d2f",
                "status": "modified"
            }
        ],
        "message": "[ZEPPELIN-1487] Resolve possible NPEs in storage sync mechanism\n\n### What is this PR for?\nThis is to resolve possible NPEs in storage mechanism related to empty subject\n\n### What type of PR is it?\nBug Fix\n\n### Todos\n* [x] - pass `subject` instead of `null`\n\n### What is the Jira issue?\n[ZEPPELIN-1487](https://issues.apache.org/jira/browse/ZEPPELIN-1487)\n\n### How should this be tested?\nstorage tests pass, CI green\n\n### Screenshots (if appropriate)\n\n### Questions:\n* Does the licenses files need update? no\n* Is there breaking changes for older versions? no\n* Does this needs documentation? no\n\nAuthor: Khalid Huseynov <khalidhnv@gmail.com>\n\nCloses #1459 from khalidhuseynov/fix/storage-npe and squashes the following commits:\n\n1f2dcd3 [Khalid Huseynov] pass subject to get method in sync",
        "parent": "https://github.com/apache/zeppelin/commit/b77f9ea8d7bb2b4e8a5a7a15fa828fcd33abf0d5",
        "repo": "zeppelin",
        "unit_tests": [
            "NotebookRepoSyncTest.java"
        ]
    },
    "zeppelin_722ed82": {
        "bug_id": "zeppelin_722ed82",
        "commit": "https://github.com/apache/zeppelin/commit/722ed823193ed49d4e42ef17be2241cf6d48cd97",
        "file": [
            {
                "additions": 4,
                "blob_url": "https://github.com/apache/zeppelin/blob/722ed823193ed49d4e42ef17be2241cf6d48cd97/zeppelin-zengine/src/main/java/org/apache/zeppelin/helium/HeliumBundleFactory.java",
                "changes": 6,
                "contents_url": "https://api.github.com/repos/apache/zeppelin/contents/zeppelin-zengine/src/main/java/org/apache/zeppelin/helium/HeliumBundleFactory.java?ref=722ed823193ed49d4e42ef17be2241cf6d48cd97",
                "deletions": 2,
                "filename": "zeppelin-zengine/src/main/java/org/apache/zeppelin/helium/HeliumBundleFactory.java",
                "patch": "@@ -462,8 +462,10 @@ public boolean accept(File dir, String name) {\n     };\n \n     File[] localModuleCaches = yarnCacheDir.listFiles(filter);\n-    for (File f : localModuleCaches) {\n-      FileUtils.deleteQuietly(f);\n+    if (localModuleCaches != null) {\n+      for (File f : localModuleCaches) {\n+        FileUtils.deleteQuietly(f);\n+      }\n     }\n   }\n ",
                "raw_url": "https://github.com/apache/zeppelin/raw/722ed823193ed49d4e42ef17be2241cf6d48cd97/zeppelin-zengine/src/main/java/org/apache/zeppelin/helium/HeliumBundleFactory.java",
                "sha": "bf2804e4ee2e60d79c21401374d1d26aa07bdb6a",
                "status": "modified"
            }
        ],
        "message": "Prevent NPE on delete local module cache\n\n### What is this PR for?\nPrevent NPE on delete local module cache in HeliumBundleFactory\n\n```\nCaused by: java.lang.NullPointerException\n\tat org.apache.zeppelin.helium.HeliumBundleFactory.deleteYarnCache(HeliumBundleFactory.java:465)\n\tat org.apache.zeppelin.helium.HeliumBundleFactory.copyFrameworkModulesToInstallPath(HeliumBundleFactory.java:487)\n\tat org.apache.zeppelin.helium.HeliumBundleFactory.buildPackage(HeliumBundleFactory.java:403)\n\tat org.apache.zeppelin.helium.Helium.enable(Helium.java:314)\n\tat org.apache.zeppelin.rest.HeliumRestApi.enablePackage(HeliumRestApi.java:193)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:497)\n\tat org.apache.cxf.service.invoker.AbstractInvoker.performInvocation(AbstractInvoker.java:180)\n\tat org.apache.cxf.service.invoker.AbstractInvoker.invoke(AbstractInvoker.java:96)\n\t... 50 more\n```\n\n### What type of PR is it?\nBug Fix\n\n### Questions:\n* Does the licenses files need update? no\n* Is there breaking changes for older versions? no\n* Does this needs documentation? no\n\nAuthor: Lee moon soo <moon@apache.org>\n\nCloses #2259 from Leemoonsoo/prevent_npe_helium_bundle_factory and squashes the following commits:\n\n0934af8 [Lee moon soo] Prevent NPE on delete local module cache",
        "parent": "https://github.com/apache/zeppelin/commit/7b585c7399f29492c308f83e342cac29b0c7ca07",
        "repo": "zeppelin",
        "unit_tests": [
            "HeliumBundleFactoryTest.java"
        ]
    },
    "zeppelin_78e2e91": {
        "bug_id": "zeppelin_78e2e91",
        "commit": "https://github.com/apache/zeppelin/commit/78e2e912b6f9014e9a83c929cde339dcb8459bdc",
        "file": [
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/zeppelin/blob/78e2e912b6f9014e9a83c929cde339dcb8459bdc/zeppelin-zengine/src/main/java/org/apache/zeppelin/interpreter/InterpreterSettingManager.java",
                "changes": 3,
                "contents_url": "https://api.github.com/repos/apache/zeppelin/contents/zeppelin-zengine/src/main/java/org/apache/zeppelin/interpreter/InterpreterSettingManager.java?ref=78e2e912b6f9014e9a83c929cde339dcb8459bdc",
                "deletions": 1,
                "filename": "zeppelin-zengine/src/main/java/org/apache/zeppelin/interpreter/InterpreterSettingManager.java",
                "patch": "@@ -514,7 +514,8 @@ private Properties convertInterpreterProperties(Map<String, InterpreterProperty>\n         }\n       }\n     } catch (NullPointerException e) {\n-      logger.warn(\"Couldn't get interpreter editor setting\");\n+      // Use `debug` level because this log occurs frequently\n+      logger.debug(\"Couldn't get interpreter editor setting\");\n     }\n     return editor;\n   }",
                "raw_url": "https://github.com/apache/zeppelin/raw/78e2e912b6f9014e9a83c929cde339dcb8459bdc/zeppelin-zengine/src/main/java/org/apache/zeppelin/interpreter/InterpreterSettingManager.java",
                "sha": "f0315919f86ce9f500f78ef9e3dddf433776be33",
                "status": "modified"
            }
        ],
        "message": "[ZEPPELIN-2211] Too many WARN logs: \"Couldn't get interpreter editor setting\"\n\n### What is this PR for?\n\nevery time we insert invalid backend magic (e.g `sparc`), `InterpreterSettingManager` throws WARN log.\n\nI changed the log level to debug because\n\n- WARN level should not be used for this kind of situation.\n- This log doesn't provide any useful information for user.  So info level is not proper as well.\n\nI attached a screenshot.\n\n### What type of PR is it?\n[Improvement]\n\n### Todos\n\nNONE\n\n### What is the Jira issue?\n\n[ZEPPELIN-2211](https://issues.apache.org/jira/browse/ZEPPELIN-2211)\n\n### How should this be tested?\n\n- Insert invalid magic in your paragraph. For example `sparc` or `marcdown`\n\n### Screenshots (if appropriate)\n\n![interpreter_setting_manager](https://cloud.githubusercontent.com/assets/4968473/24235266/cbecbbf4-0fdf-11e7-9fcc-f1a95a5e82ab.gif)\n\n### Questions:\n* Does the licenses files need update? - NO\n* Is there breaking changes for older versions? - NO\n* Does this needs documentation? - NO\n\nAuthor: 1ambda <1amb4a@gmail.com>\n\nCloses #2179 from 1ambda/ZEPPELIN-2211/change-log-level-ISM-NPE and squashes the following commits:\n\ne333c1c [1ambda] fix: Change log level to debug from warn",
        "parent": "https://github.com/apache/zeppelin/commit/15641d0981395a0b52b1d05de7a81e6261dedd2d",
        "repo": "zeppelin",
        "unit_tests": [
            "InterpreterSettingManagerTest.java"
        ]
    },
    "zeppelin_7954d80": {
        "bug_id": "zeppelin_7954d80",
        "commit": "https://github.com/apache/zeppelin/commit/7954d8071f2b1c46259c449983825f26afce6d6d",
        "file": [
            {
                "additions": 4,
                "blob_url": "https://github.com/apache/zeppelin/blob/7954d8071f2b1c46259c449983825f26afce6d6d/zeppelin-zengine/src/main/java/org/apache/zeppelin/notebook/Note.java",
                "changes": 4,
                "contents_url": "https://api.github.com/repos/apache/zeppelin/contents/zeppelin-zengine/src/main/java/org/apache/zeppelin/notebook/Note.java?ref=7954d8071f2b1c46259c449983825f26afce6d6d",
                "deletions": 0,
                "filename": "zeppelin-zengine/src/main/java/org/apache/zeppelin/notebook/Note.java",
                "patch": "@@ -195,6 +195,10 @@ public void setPath(String path) {\n   }\n \n   public String getDefaultInterpreterGroup() {\n+    if (defaultInterpreterGroup == null) {\n+      defaultInterpreterGroup = ZeppelinConfiguration.create()\n+          .getString(ZeppelinConfiguration.ConfVars.ZEPPELIN_INTERPRETER_GROUP_DEFAULT);\n+    }\n     return defaultInterpreterGroup;\n   }\n ",
                "raw_url": "https://github.com/apache/zeppelin/raw/7954d8071f2b1c46259c449983825f26afce6d6d/zeppelin-zengine/src/main/java/org/apache/zeppelin/notebook/Note.java",
                "sha": "74b08b25ca8efe9240609ce5f0a2a5b145d3226b",
                "status": "modified"
            }
        ],
        "message": "ZEPPELIN-3794. NPE when running paragraph without interpreter specified\n\n### What is this PR for?\nThis issue happens for the old note where no defaultInterpreterGroup is specified in note.json.\n\n### What type of PR is it?\n[Bug Fix]\n\n### Todos\n* [ ] - Task\n\n### What is the Jira issue?\n* https://issues.apache.org/jira/browse/ZEPPELIN-3794\n\n### How should this be tested?\n* CI pass\n\n### Screenshots (if appropriate)\n\n### Questions:\n* Does the licenses files need update? No\n* Is there breaking changes for older versions? No\n* Does this needs documentation? No\n\nAuthor: Jeff Zhang <zjffdu@apache.org>\n\nCloses #3191 from zjffdu/ZEPPELIN-3794 and squashes the following commits:\n\na8a469fa0 [Jeff Zhang] ZEPPELIN-3794. NPE when running paragraph without interpreter specified",
        "parent": "https://github.com/apache/zeppelin/commit/f28e9631737da554a0a12323f6c00ccae3ec6282",
        "repo": "zeppelin",
        "unit_tests": [
            "NoteTest.java"
        ]
    },
    "zeppelin_79ace93": {
        "bug_id": "zeppelin_79ace93",
        "commit": "https://github.com/apache/zeppelin/commit/79ace932a9d7de247f7cb0f932cd146d459e617b",
        "file": [
            {
                "additions": 5,
                "blob_url": "https://github.com/apache/zeppelin/blob/79ace932a9d7de247f7cb0f932cd146d459e617b/docs/interpreter/jdbc.md",
                "changes": 5,
                "contents_url": "https://api.github.com/repos/apache/zeppelin/contents/docs/interpreter/jdbc.md?ref=79ace932a9d7de247f7cb0f932cd146d459e617b",
                "deletions": 0,
                "filename": "docs/interpreter/jdbc.md",
                "patch": "@@ -427,8 +427,13 @@ Here are some examples you can refer to. Including the below connectors, you can\n     <td>default.password</td>\n     <td>hive_password</td>\n   </tr>\n+  <tr>\n+    <td>hive.proxy.user</td>\n+    <td>true or false</td>\n </table>\n \n+Connection to Hive JDBC with a proxy user can be disabled with `hive.proxy.user` property (set to true by default)\n+\n [Apache Hive 1 JDBC Driver Docs](https://cwiki.apache.org/confluence/display/Hive/HiveServer2+Clients#HiveServer2Clients-JDBC)\n [Apache Hive 2 JDBC Driver Docs](https://cwiki.apache.org/confluence/display/Hive/HiveServer2+Clients#HiveServer2Clients-JDBC)\n ",
                "raw_url": "https://github.com/apache/zeppelin/raw/79ace932a9d7de247f7cb0f932cd146d459e617b/docs/interpreter/jdbc.md",
                "sha": "75da51fd1a9f08880add3b3552e62750b265f3b3",
                "status": "modified"
            },
            {
                "additions": 9,
                "blob_url": "https://github.com/apache/zeppelin/blob/79ace932a9d7de247f7cb0f932cd146d459e617b/jdbc/src/main/java/org/apache/zeppelin/jdbc/JDBCInterpreter.java",
                "changes": 14,
                "contents_url": "https://api.github.com/repos/apache/zeppelin/contents/jdbc/src/main/java/org/apache/zeppelin/jdbc/JDBCInterpreter.java?ref=79ace932a9d7de247f7cb0f932cd146d459e617b",
                "deletions": 5,
                "filename": "jdbc/src/main/java/org/apache/zeppelin/jdbc/JDBCInterpreter.java",
                "patch": "@@ -378,16 +378,20 @@ public Connection getConnection(String propertyKey, InterpreterContext interpret\n                 if (lastIndexOfUrl == -1) {\n                   lastIndexOfUrl = connectionUrl.length();\n                 }\n-                connectionUrl.insert(lastIndexOfUrl, \";hive.server2.proxy.user=\" + user + \";\");\n+                boolean hasProxyUser = property.containsKey(\"hive.proxy.user\");\n+                if (!hasProxyUser || !property.getProperty(\"hive.proxy.user\").equals(\"false\")){\n+                  logger.debug(\"Using hive proxy user\");\n+                  connectionUrl.insert(lastIndexOfUrl, \";hive.server2.proxy.user=\" + user + \";\");\n+                }\n                 connection = getConnectionFromPool(connectionUrl.toString(),\n-                    user, propertyKey, properties);\n+                        user, propertyKey, properties);\n               } else {\n                 UserGroupInformation ugi = null;\n                 try {\n-                  ugi = UserGroupInformation.createProxyUser(user,\n-                    UserGroupInformation.getCurrentUser());\n+                  ugi = UserGroupInformation.createProxyUser(\n+                          user, UserGroupInformation.getCurrentUser());\n                 } catch (Exception e) {\n-                  logger.error(\"Error in createProxyUser\", e);\n+                  logger.error(\"Error in getCurrentUser\", e);\n                   StringBuilder stringBuilder = new StringBuilder();\n                   stringBuilder.append(e.getMessage()).append(\"\\n\");\n                   stringBuilder.append(e.getCause());",
                "raw_url": "https://github.com/apache/zeppelin/raw/79ace932a9d7de247f7cb0f932cd146d459e617b/jdbc/src/main/java/org/apache/zeppelin/jdbc/JDBCInterpreter.java",
                "sha": "0b25a23fcd3bb8f04f2a5239a086f8a111a0fccb",
                "status": "modified"
            }
        ],
        "message": "[ZEPPELIN-1968] Added property to disable hive user impersonation\n\n### What is this PR for?\n\nAdded new property \"hive.proxy.user\"  to disable hive impersonation (on some clusters, this option is disabled) in order to make Hive Interpreter even without this\n\n### What type of PR is it?\nFeature\n\n### Todos\n\n### What is the Jira issue?\nhttps://issues.apache.org/jira/browse/ZEPPELIN-1968\n\n### How should this be tested?\nSet \"hive.proxy.user\" to true in the jdbc interpreter setttings, and you should see \"Using hive proxy user\" in the jdbc logs.\n\nIf \"hive.proxy.user\" has another value, this is not mentionned in the logs\n\nYou can also test with the appropriate hive configuration, but this could take longer :)\n\n### Screenshots (if appropriate)\n\n### Questions:\n* Does the licenses files need update? No\n* Is there breaking changes for older versions? No\n* Does this needs documentation? Yes\n\nAuthor: Paolo Genissel <paolo.genissel-monsallier@1000mercis.com>\n\nCloses #2051 from gfalcone/hive_impersonation and squashes the following commits:\n\na39d11c [Paolo Genissel] Fixed last NPE\n1f7f685 [Paolo Genissel] Fixed NPE when getting hive.proxy.user property\n433eefb [Paolo Genissel] Added documentation for feature\nd6f0c62 [Paolo Genissel] Added property to disable hive user impersonation",
        "parent": "https://github.com/apache/zeppelin/commit/89386342fdf0c94fc5f12da1a6320b97e89610af",
        "repo": "zeppelin",
        "unit_tests": [
            "JDBCInterpreterTest.java"
        ]
    },
    "zeppelin_79fd3a0": {
        "bug_id": "zeppelin_79fd3a0",
        "commit": "https://github.com/apache/zeppelin/commit/79fd3a0242df9f7324410cfc5d987850ee3de405",
        "file": [
            {
                "additions": 0,
                "blob_url": "https://github.com/apache/zeppelin/blob/79fd3a0242df9f7324410cfc5d987850ee3de405/docs/assets/themes/zeppelin/img/docs-img/interpreter-add-repo2.png",
                "changes": 0,
                "contents_url": "https://api.github.com/repos/apache/zeppelin/contents/docs/assets/themes/zeppelin/img/docs-img/interpreter-add-repo2.png?ref=79fd3a0242df9f7324410cfc5d987850ee3de405",
                "deletions": 0,
                "filename": "docs/assets/themes/zeppelin/img/docs-img/interpreter-add-repo2.png",
                "raw_url": "https://github.com/apache/zeppelin/raw/79fd3a0242df9f7324410cfc5d987850ee3de405/docs/assets/themes/zeppelin/img/docs-img/interpreter-add-repo2.png",
                "sha": "62708c600018982b774e5a408d6b579fcf026ed9",
                "status": "modified"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/zeppelin/blob/79fd3a0242df9f7324410cfc5d987850ee3de405/docs/manual/dependencymanagement.md",
                "changes": 1,
                "contents_url": "https://api.github.com/repos/apache/zeppelin/contents/docs/manual/dependencymanagement.md?ref=79fd3a0242df9f7324410cfc5d987850ee3de405",
                "deletions": 0,
                "filename": "docs/manual/dependencymanagement.md",
                "patch": "@@ -68,6 +68,7 @@ When your code requires external library, instead of doing download/copy/restart\n       <li> If you need to resolve dependencies from other than central maven repository or\n   \t   local ~/.m2 repository, hit <i class=\"fa fa-plus\"></i> icon next to repository lists. </li>\n       <li> Fill out the form and click 'Add' button, then you will be able to see that new repository is added. </li>\n+      <li> Optionally, if you are behind a corporate firewall, you can specify also all proxy settings so that Zeppelin can download the dependencies using the given credentials</li>\n     </ol>\n   </div>\n </div>",
                "raw_url": "https://github.com/apache/zeppelin/raw/79fd3a0242df9f7324410cfc5d987850ee3de405/docs/manual/dependencymanagement.md",
                "sha": "44068dae1fd324e678319dd262e06adb84511956",
                "status": "modified"
            },
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/zeppelin/blob/79fd3a0242df9f7324410cfc5d987850ee3de405/zeppelin-interpreter/src/main/java/org/apache/zeppelin/dep/AbstractDependencyResolver.java",
                "changes": 3,
                "contents_url": "https://api.github.com/repos/apache/zeppelin/contents/zeppelin-interpreter/src/main/java/org/apache/zeppelin/dep/AbstractDependencyResolver.java?ref=79fd3a0242df9f7324410cfc5d987850ee3de405",
                "deletions": 1,
                "filename": "zeppelin-interpreter/src/main/java/org/apache/zeppelin/dep/AbstractDependencyResolver.java",
                "patch": "@@ -72,7 +72,7 @@ public void addRepo(String id, String url, boolean snapshot) {\n     }\n   }\n \n-  public void addRepo(String id, String url, boolean snapshot, Authentication auth) {\n+  public void addRepo(String id, String url, boolean snapshot, Authentication auth, Proxy proxy) {\n     synchronized (repos) {\n       delRepo(id);\n       RemoteRepository rr = new RemoteRepository(id, \"default\", url);\n@@ -81,6 +81,7 @@ public void addRepo(String id, String url, boolean snapshot, Authentication auth\n           RepositoryPolicy.UPDATE_POLICY_DAILY,\n           RepositoryPolicy.CHECKSUM_POLICY_WARN));\n       rr.setAuthentication(auth);\n+      rr.setProxy(proxy);\n       repos.add(rr);\n     }\n   }",
                "raw_url": "https://github.com/apache/zeppelin/raw/79fd3a0242df9f7324410cfc5d987850ee3de405/zeppelin-interpreter/src/main/java/org/apache/zeppelin/dep/AbstractDependencyResolver.java",
                "sha": "da3d0c02b4f3337076b6d5cfeb800862df3d1d97",
                "status": "modified"
            },
            {
                "additions": 10,
                "blob_url": "https://github.com/apache/zeppelin/blob/79fd3a0242df9f7324410cfc5d987850ee3de405/zeppelin-interpreter/src/main/java/org/apache/zeppelin/dep/DependencyResolver.java",
                "changes": 14,
                "contents_url": "https://api.github.com/repos/apache/zeppelin/contents/zeppelin-interpreter/src/main/java/org/apache/zeppelin/dep/DependencyResolver.java?ref=79fd3a0242df9f7324410cfc5d987850ee3de405",
                "deletions": 4,
                "filename": "zeppelin-interpreter/src/main/java/org/apache/zeppelin/dep/DependencyResolver.java",
                "patch": "@@ -33,6 +33,7 @@\n import org.sonatype.aether.RepositoryException;\n import org.sonatype.aether.artifact.Artifact;\n import org.sonatype.aether.collection.CollectRequest;\n+import org.sonatype.aether.collection.DependencyCollectionException;\n import org.sonatype.aether.graph.Dependency;\n import org.sonatype.aether.graph.DependencyFilter;\n import org.sonatype.aether.repository.RemoteRepository;\n@@ -42,6 +43,7 @@\n import org.sonatype.aether.util.artifact.JavaScopes;\n import org.sonatype.aether.util.filter.DependencyFilterUtils;\n import org.sonatype.aether.util.filter.PatternExclusionsDependencyFilter;\n+import org.sonatype.aether.util.graph.DefaultDependencyNode;\n \n \n /**\n@@ -157,11 +159,11 @@ public synchronized void copyLocalDependency(String srcPath, File destPath)\n    */\n   @Override\n   public List<ArtifactResult> getArtifactsWithDep(String dependency,\n-      Collection<String> excludes) throws RepositoryException {\n+    Collection<String> excludes) throws RepositoryException {\n     Artifact artifact = new DefaultArtifact(dependency);\n     DependencyFilter classpathFilter = DependencyFilterUtils.classpathFilter(JavaScopes.COMPILE);\n     PatternExclusionsDependencyFilter exclusionFilter =\n-        new PatternExclusionsDependencyFilter(excludes);\n+            new PatternExclusionsDependencyFilter(excludes);\n \n     CollectRequest collectRequest = new CollectRequest();\n     collectRequest.setRoot(new Dependency(artifact, JavaScopes.COMPILE));\n@@ -172,7 +174,11 @@ public synchronized void copyLocalDependency(String srcPath, File destPath)\n       }\n     }\n     DependencyRequest dependencyRequest = new DependencyRequest(collectRequest,\n-        DependencyFilterUtils.andFilter(exclusionFilter, classpathFilter));\n-    return system.resolveDependencies(session, dependencyRequest).getArtifactResults();\n+            DependencyFilterUtils.andFilter(exclusionFilter, classpathFilter));\n+    try {\n+      return system.resolveDependencies(session, dependencyRequest).getArtifactResults();\n+    } catch (NullPointerException ex) {\n+      throw new RepositoryException(String.format(\"Cannot fetch dependencies for %s\", dependency));\n+    }\n   }\n }",
                "raw_url": "https://github.com/apache/zeppelin/raw/79fd3a0242df9f7324410cfc5d987850ee3de405/zeppelin-interpreter/src/main/java/org/apache/zeppelin/dep/DependencyResolver.java",
                "sha": "7ca4a4d173d2215ab806e35afeedc607ef3feec8",
                "status": "modified"
            },
            {
                "additions": 21,
                "blob_url": "https://github.com/apache/zeppelin/blob/79fd3a0242df9f7324410cfc5d987850ee3de405/zeppelin-interpreter/src/main/java/org/apache/zeppelin/dep/Repository.java",
                "changes": 21,
                "contents_url": "https://api.github.com/repos/apache/zeppelin/contents/zeppelin-interpreter/src/main/java/org/apache/zeppelin/dep/Repository.java?ref=79fd3a0242df9f7324410cfc5d987850ee3de405",
                "deletions": 0,
                "filename": "zeppelin-interpreter/src/main/java/org/apache/zeppelin/dep/Repository.java",
                "patch": "@@ -16,7 +16,11 @@\n  */\n \n package org.apache.zeppelin.dep;\n+import static org.apache.commons.lang3.StringUtils.isNotBlank;\n+\n import org.sonatype.aether.repository.Authentication;\n+import org.sonatype.aether.repository.Proxy;\n+\n /**\n  *\n  *\n@@ -27,6 +31,11 @@\n   private String url;\n   private String username = null;\n   private String password = null;\n+  private String proxyProtocol = \"HTTP\";\n+  private String proxyHost = null;\n+  private Integer proxyPort = null;\n+  private String proxyLogin = null;\n+  private String proxyPassword = null;\n \n   public Repository(String id){\n     this.id = id;\n@@ -77,4 +86,16 @@ public Authentication getAuthentication() {\n     }\n     return auth;\n   }\n+\n+  public Proxy getProxy() {\n+    if (isNotBlank(proxyHost) && proxyPort != null) {\n+      if (isNotBlank(proxyLogin)) {\n+        return new Proxy(proxyProtocol, proxyHost, proxyPort,\n+                new Authentication(proxyLogin, proxyPassword));\n+      } else {\n+        return new Proxy(proxyProtocol, proxyHost, proxyPort, null);\n+      }\n+    }\n+    return null;\n+  }\n }",
                "raw_url": "https://github.com/apache/zeppelin/raw/79fd3a0242df9f7324410cfc5d987850ee3de405/zeppelin-interpreter/src/main/java/org/apache/zeppelin/dep/Repository.java",
                "sha": "34fe4f05478be2afe9cf9d49d7d4ebf4c2f10cae",
                "status": "modified"
            },
            {
                "additions": 13,
                "blob_url": "https://github.com/apache/zeppelin/blob/79fd3a0242df9f7324410cfc5d987850ee3de405/zeppelin-interpreter/src/test/java/org/apache/zeppelin/dep/DependencyResolverTest.java",
                "changes": 13,
                "contents_url": "https://api.github.com/repos/apache/zeppelin/contents/zeppelin-interpreter/src/test/java/org/apache/zeppelin/dep/DependencyResolverTest.java?ref=79fd3a0242df9f7324410cfc5d987850ee3de405",
                "deletions": 0,
                "filename": "zeppelin-interpreter/src/test/java/org/apache/zeppelin/dep/DependencyResolverTest.java",
                "patch": "@@ -20,6 +20,7 @@\n import static org.junit.Assert.assertEquals;\n \n import java.io.File;\n+import java.io.FileNotFoundException;\n import java.util.Collections;\n \n import org.apache.commons.io.FileUtils;\n@@ -36,6 +37,9 @@\n   private static File testCopyPath;\n   private static File tmpDir;\n \n+  @Rule\n+  public ExpectedException expectedException = ExpectedException.none();\n+\n   @BeforeClass\n   public static void setUp() throws Exception {\n     tmpDir = new File(System.getProperty(\"java.io.tmpdir\")+\"/ZeppelinLTest_\"+System.currentTimeMillis());\n@@ -90,4 +94,13 @@ public void testLoad() throws Exception {\n     exception.expect(RepositoryException.class);\n     resolver.load(\"com.agimatec:agimatec-validation:0.9.3\", testCopyPath);\n   }\n+\n+  @Test\n+  public void should_throw_exception_if_dependency_not_found() throws Exception {\n+    expectedException.expectMessage(\"Source 'one.two:1.0' does not exist\");\n+    expectedException.expect(FileNotFoundException.class);\n+\n+    resolver.load(\"one.two:1.0\", testCopyPath);\n+  }\n+\n }\n\\ No newline at end of file",
                "raw_url": "https://github.com/apache/zeppelin/raw/79fd3a0242df9f7324410cfc5d987850ee3de405/zeppelin-interpreter/src/test/java/org/apache/zeppelin/dep/DependencyResolverTest.java",
                "sha": "876e8e7c88c5291d88408b6bd466658f40af7e76",
                "status": "modified"
            },
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/zeppelin/blob/79fd3a0242df9f7324410cfc5d987850ee3de405/zeppelin-server/src/main/java/org/apache/zeppelin/rest/InterpreterRestApi.java",
                "changes": 7,
                "contents_url": "https://api.github.com/repos/apache/zeppelin/contents/zeppelin-server/src/main/java/org/apache/zeppelin/rest/InterpreterRestApi.java?ref=79fd3a0242df9f7324410cfc5d987850ee3de405",
                "deletions": 5,
                "filename": "zeppelin-server/src/main/java/org/apache/zeppelin/rest/InterpreterRestApi.java",
                "patch": "@@ -35,7 +35,6 @@\n import org.apache.commons.lang.exception.ExceptionUtils;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n-import org.sonatype.aether.RepositoryException;\n import org.sonatype.aether.repository.RemoteRepository;\n \n import org.apache.zeppelin.annotation.ZeppelinApi;\n@@ -73,9 +72,7 @@ public InterpreterRestApi(InterpreterFactory interpreterFactory) {\n   @Path(\"setting\")\n   @ZeppelinApi\n   public Response listSettings() {\n-    List<InterpreterSetting> interpreterSettings;\n-    interpreterSettings = interpreterFactory.get();\n-    return new JsonResponse<>(Status.OK, \"\", interpreterSettings).build();\n+    return new JsonResponse<>(Status.OK, \"\", interpreterFactory.get()).build();\n   }\n \n   /**\n@@ -202,7 +199,7 @@ public Response addRepository(String message) {\n     try {\n       Repository request = gson.fromJson(message, Repository.class);\n       interpreterFactory.addRepository(request.getId(), request.getUrl(), request.isSnapshot(),\n-          request.getAuthentication());\n+        request.getAuthentication(), request.getProxy());\n       logger.info(\"New repository {} added\", request.getId());\n     } catch (Exception e) {\n       logger.error(\"Exception in InterpreterRestApi while adding repository \", e);",
                "raw_url": "https://github.com/apache/zeppelin/raw/79fd3a0242df9f7324410cfc5d987850ee3de405/zeppelin-server/src/main/java/org/apache/zeppelin/rest/InterpreterRestApi.java",
                "sha": "5b1773b584f5059e8b05eef8bd085dc9b2007277",
                "status": "modified"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/zeppelin/blob/79fd3a0242df9f7324410cfc5d987850ee3de405/zeppelin-web/src/app/app.js",
                "changes": 1,
                "contents_url": "https://api.github.com/repos/apache/zeppelin/contents/zeppelin-web/src/app/app.js?ref=79fd3a0242df9f7324410cfc5d987850ee3de405",
                "deletions": 0,
                "filename": "zeppelin-web/src/app/app.js",
                "patch": "@@ -90,6 +90,7 @@\n           ngToastProvider.configure({\n             dismissButton: true,\n             dismissOnClick: false,\n+            combineDuplications: true,\n             timeout: 6000\n           });\n         });",
                "raw_url": "https://github.com/apache/zeppelin/raw/79fd3a0242df9f7324410cfc5d987850ee3de405/zeppelin-web/src/app/app.js",
                "sha": "603171f10a6d026f01d9efad1695e4365aa9db1a",
                "status": "modified"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/zeppelin/blob/79fd3a0242df9f7324410cfc5d987850ee3de405/zeppelin-web/src/app/configuration/configuration.controller.js",
                "changes": 1,
                "contents_url": "https://api.github.com/repos/apache/zeppelin/contents/zeppelin-web/src/app/configuration/configuration.controller.js?ref=79fd3a0242df9f7324410cfc5d987850ee3de405",
                "deletions": 0,
                "filename": "zeppelin-web/src/app/configuration/configuration.controller.js",
                "patch": "@@ -21,6 +21,7 @@\n   function ConfigurationCtrl($scope, $rootScope, $http, baseUrlSrv, ngToast) {\n     $scope.configrations = [];\n     $scope._ = _;\n+    ngToast.dismiss();\n \n     var getConfigurations = function() {\n       $http.get(baseUrlSrv.getRestApiBase() + '/configurations/all').",
                "raw_url": "https://github.com/apache/zeppelin/raw/79fd3a0242df9f7324410cfc5d987850ee3de405/zeppelin-web/src/app/configuration/configuration.controller.js",
                "sha": "8960ca55f50b6831baf3962f5c6c6244c2981d03",
                "status": "modified"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/zeppelin/blob/79fd3a0242df9f7324410cfc5d987850ee3de405/zeppelin-web/src/app/credential/credential.controller.js",
                "changes": 1,
                "contents_url": "https://api.github.com/repos/apache/zeppelin/contents/zeppelin-web/src/app/credential/credential.controller.js?ref=79fd3a0242df9f7324410cfc5d987850ee3de405",
                "deletions": 0,
                "filename": "zeppelin-web/src/app/credential/credential.controller.js",
                "patch": "@@ -20,6 +20,7 @@\n \n   function CredentialCtrl($scope, $rootScope, $http, baseUrlSrv, ngToast) {\n     $scope._ = _;\n+    ngToast.dismiss();\n \n     $scope.credentialInfo = [];\n     $scope.showAddNewCredentialInfo = false;",
                "raw_url": "https://github.com/apache/zeppelin/raw/79fd3a0242df9f7324410cfc5d987850ee3de405/zeppelin-web/src/app/credential/credential.controller.js",
                "sha": "7145299f70845d7b2daf844db83460ca11fc91d2",
                "status": "modified"
            },
            {
                "additions": 4,
                "blob_url": "https://github.com/apache/zeppelin/blob/79fd3a0242df9f7324410cfc5d987850ee3de405/zeppelin-web/src/app/home/home.controller.js",
                "changes": 6,
                "contents_url": "https://api.github.com/repos/apache/zeppelin/contents/zeppelin-web/src/app/home/home.controller.js?ref=79fd3a0242df9f7324410cfc5d987850ee3de405",
                "deletions": 2,
                "filename": "zeppelin-web/src/app/home/home.controller.js",
                "patch": "@@ -21,10 +21,12 @@\n     'notebookListDataFactory',\n     'websocketMsgSrv',\n     '$rootScope',\n-    'arrayOrderingSrv'\n+    'arrayOrderingSrv',\n+    'ngToast'\n   ];\n \n-  function HomeCtrl($scope, notebookListDataFactory, websocketMsgSrv, $rootScope, arrayOrderingSrv) {\n+  function HomeCtrl($scope, notebookListDataFactory, websocketMsgSrv, $rootScope, arrayOrderingSrv, ngToast) {\n+    ngToast.dismiss();\n     var vm = this;\n     vm.notes = notebookListDataFactory;\n     vm.websocketMsgSrv = websocketMsgSrv;",
                "raw_url": "https://github.com/apache/zeppelin/raw/79fd3a0242df9f7324410cfc5d987850ee3de405/zeppelin-web/src/app/home/home.controller.js",
                "sha": "9063e33e48276a4c1971d0e63af1b104e783d324",
                "status": "modified"
            },
            {
                "additions": 17,
                "blob_url": "https://github.com/apache/zeppelin/blob/79fd3a0242df9f7324410cfc5d987850ee3de405/zeppelin-web/src/app/interpreter/interpreter.controller.js",
                "changes": 22,
                "contents_url": "https://api.github.com/repos/apache/zeppelin/contents/zeppelin-web/src/app/interpreter/interpreter.controller.js?ref=79fd3a0242df9f7324410cfc5d987850ee3de405",
                "deletions": 5,
                "filename": "zeppelin-web/src/app/interpreter/interpreter.controller.js",
                "patch": "@@ -25,6 +25,7 @@\n     $scope.showAddNewSetting = false;\n     $scope.showRepositoryInfo = false;\n     $scope._ = _;\n+    ngToast.dismiss();\n \n     $scope.openPermissions = function() {\n       $scope.showInterpreterAuth = true;\n@@ -108,12 +109,19 @@\n \n     var checkDownloadingDependencies = function() {\n       var isDownloading = false;\n-      for (var setting = 0; setting < $scope.interpreterSettings.length; setting++) {\n-        if ($scope.interpreterSettings[setting].status === 'DOWNLOADING_DEPENDENCIES') {\n+      for (var index = 0; index < $scope.interpreterSettings.length; index++) {\n+        var setting = $scope.interpreterSettings[index];\n+        if (setting.status === 'DOWNLOADING_DEPENDENCIES') {\n           isDownloading = true;\n-          break;\n+        }\n+\n+        if (setting.status === 'ERROR' || setting.errorReason) {\n+          ngToast.danger({content: 'Error setting properties for interpreter \\'' +\n+            setting.group + '.' + setting.name + '\\': ' + setting.errorReason,\n+            verticalPosition: 'top', dismissOnTimeout: false});\n         }\n       }\n+\n       if (isDownloading) {\n         $timeout(function() {\n           if ($route.current.$$route.originalPath === '/interpreter') {\n@@ -236,7 +244,6 @@\n                 $scope.interpreterSettings[index] = data.body;\n                 removeTMPSettings(index);\n                 thisConfirm.close();\n-                checkDownloadingDependencies();\n                 $route.reload();\n               })\n               .error(function(data, status, headers, config) {\n@@ -508,7 +515,12 @@\n         url: '',\n         snapshot: false,\n         username: '',\n-        password: ''\n+        password: '',\n+        proxyProtocol: 'HTTP',\n+        proxyHost: '',\n+        proxyPort: null,\n+        proxyLogin: '',\n+        proxyPassword: ''\n       };\n     };\n ",
                "raw_url": "https://github.com/apache/zeppelin/raw/79fd3a0242df9f7324410cfc5d987850ee3de405/zeppelin-web/src/app/interpreter/interpreter.controller.js",
                "sha": "3fe355fe1b8f6e622057dff32b68b027af26ba88",
                "status": "modified"
            },
            {
                "additions": 3,
                "blob_url": "https://github.com/apache/zeppelin/blob/79fd3a0242df9f7324410cfc5d987850ee3de405/zeppelin-web/src/app/interpreter/interpreter.html",
                "changes": 4,
                "contents_url": "https://api.github.com/repos/apache/zeppelin/contents/zeppelin-web/src/app/interpreter/interpreter.html?ref=79fd3a0242df9f7324410cfc5d987850ee3de405",
                "deletions": 1,
                "filename": "zeppelin-web/src/app/interpreter/interpreter.html",
                "patch": "@@ -65,7 +65,9 @@ <h4>Repositories</h4>\n              popover-html-unsafe=\"<label>URL: </label>\n                {{repo.url}}<br>\n                <label>Username: </label>\n-               {{repo.authentication.username}}\">\n+               {{repo.authentication.username}}<br>\n+               <label>Proxy host: </label>\n+               {{repo.proxy.host}}\">\n             <span class=\"fa fa-database\"></span>\n             {{repo.id}}&nbsp;\n             <span ng-if=\"!isDefaultRepository(repo.id)\" class=\"fa fa-close blackOpc\"",
                "raw_url": "https://github.com/apache/zeppelin/raw/79fd3a0242df9f7324410cfc5d987850ee3de405/zeppelin-web/src/app/interpreter/interpreter.html",
                "sha": "57b305ee67c815c5e021c8ffaf93f5b81f5766ac",
                "status": "modified"
            },
            {
                "additions": 3,
                "blob_url": "https://github.com/apache/zeppelin/blob/79fd3a0242df9f7324410cfc5d987850ee3de405/zeppelin-web/src/app/jobmanager/jobmanager.controller.js",
                "changes": 5,
                "contents_url": "https://api.github.com/repos/apache/zeppelin/contents/zeppelin-web/src/app/jobmanager/jobmanager.controller.js?ref=79fd3a0242df9f7324410cfc5d987850ee3de405",
                "deletions": 2,
                "filename": "zeppelin-web/src/app/jobmanager/jobmanager.controller.js",
                "patch": "@@ -16,9 +16,10 @@\n \n   angular.module('zeppelinWebApp').controller('JobmanagerCtrl', JobmanagerCtrl);\n \n-  JobmanagerCtrl.$inject = ['$scope', 'websocketMsgSrv', '$interval'];\n+  JobmanagerCtrl.$inject = ['$scope', 'websocketMsgSrv', '$interval', 'ngToast'];\n \n-  function JobmanagerCtrl($scope, websocketMsgSrv, $interval) {\n+  function JobmanagerCtrl($scope, websocketMsgSrv, $interval, ngToast) {\n+    ngToast.dismiss();\n     $scope.filterValueToName = function(filterValue) {\n       var index = _.findIndex($scope.ACTIVE_INTERPRETERS, {value: filterValue});\n ",
                "raw_url": "https://github.com/apache/zeppelin/raw/79fd3a0242df9f7324410cfc5d987850ee3de405/zeppelin-web/src/app/jobmanager/jobmanager.controller.js",
                "sha": "d28b374ec9d34886c7cfd4ca8e0628cc64347761",
                "status": "modified"
            },
            {
                "additions": 7,
                "blob_url": "https://github.com/apache/zeppelin/blob/79fd3a0242df9f7324410cfc5d987850ee3de405/zeppelin-web/src/app/notebook/notebook.controller.js",
                "changes": 9,
                "contents_url": "https://api.github.com/repos/apache/zeppelin/contents/zeppelin-web/src/app/notebook/notebook.controller.js?ref=79fd3a0242df9f7324410cfc5d987850ee3de405",
                "deletions": 2,
                "filename": "zeppelin-web/src/app/notebook/notebook.controller.js",
                "patch": "@@ -26,11 +26,16 @@\n     'websocketMsgSrv',\n     'baseUrlSrv',\n     '$timeout',\n-    'saveAsService'\n+    'saveAsService',\n+    'ngToast'\n   ];\n \n   function NotebookCtrl($scope, $route, $routeParams, $location, $rootScope,\n-                        $http, websocketMsgSrv, baseUrlSrv, $timeout, saveAsService) {\n+                        $http, websocketMsgSrv, baseUrlSrv, $timeout, saveAsService,\n+                        ngToast) {\n+\n+    ngToast.dismiss();\n+\n     $scope.note = null;\n     $scope.moment = moment;\n     $scope.editorToggled = false;",
                "raw_url": "https://github.com/apache/zeppelin/raw/79fd3a0242df9f7324410cfc5d987850ee3de405/zeppelin-web/src/app/notebook/notebook.controller.js",
                "sha": "f2aa67d2e86acc27a1d4ff1c9a4c545848f7ed3c",
                "status": "modified"
            },
            {
                "additions": 38,
                "blob_url": "https://github.com/apache/zeppelin/blob/79fd3a0242df9f7324410cfc5d987850ee3de405/zeppelin-web/src/components/repository-create/repository-dialog.html",
                "changes": 38,
                "contents_url": "https://api.github.com/repos/apache/zeppelin/contents/zeppelin-web/src/components/repository-create/repository-dialog.html?ref=79fd3a0242df9f7324410cfc5d987850ee3de405",
                "deletions": 0,
                "filename": "zeppelin-web/src/components/repository-create/repository-dialog.html",
                "patch": "@@ -62,6 +62,44 @@ <h4 class=\"modal-title\">Add New Repository</h4>\n                 <input type=\"password\" class=\"form-control\" id=\"repoPassword\" ng-model=\"newRepoSetting.password\" />\n               </div>\n             </div>\n+            <hr/>\n+            <div class=\"center-block\"><h4>Proxy Settings (optional)</h4></div>\n+            <br/>\n+            <div class=\"form-group\">\n+              <div class=\"col-sm-10\">\n+                <label class=\"control-label col-sm-2\" for=\"proxyProtocol1\">Protocol</label>\n+                <label class=\"radio-inline\">\n+                    <input type=\"radio\" name=\"proxyProtocol\" id=\"proxyProtocol1\" value=\"HTTP\" ng-model=\"newRepoSetting.proxyProtocol\"/> HTTP\n+                </label>\n+                <label class=\"radio-inline\">\n+                    <input type=\"radio\" name=\"proxyProtocol\" id=\"proxyProtocol2\" value=\"HTTPS\" ng-model=\"newRepoSetting.proxyProtocol\"/> HTTPS\n+                </label>\n+              </div>\n+            </div>\n+            <div class=\"form-group\">\n+              <label class=\"control-label col-sm-2\" for=\"proxyHost\">Host</label>\n+              <div class=\"col-sm-10\">\n+                <input type=\"text\" class=\"form-control\" id=\"proxyHost\" ng-model=\"newRepoSetting.proxyHost\" />\n+              </div>\n+            </div>\n+            <div class=\"form-group\">\n+              <label class=\"control-label col-sm-2\" for=\"proxyPort\">Port</label>\n+              <div class=\"col-sm-10\">\n+                <input type=\"text\" class=\"form-control\" id=\"proxyPort\" ng-model=\"newRepoSetting.proxyPort\" />\n+              </div>\n+            </div>\n+            <div class=\"form-group\">\n+                <label class=\"control-label col-sm-2\" for=\"proxyLogin\">Login</label>\n+                <div class=\"col-sm-10\">\n+                    <input type=\"text\" class=\"form-control\" id=\"proxyLogin\" ng-model=\"newRepoSetting.proxyLogin\" />\n+                </div>\n+            </div>\n+            <div class=\"form-group\">\n+                <label class=\"control-label col-sm-2\" for=\"proxyPassword\">Password</label>\n+                <div class=\"col-sm-10\">\n+                    <input type=\"text\" class=\"form-control\" id=\"proxyPassword\" ng-model=\"newRepoSetting.proxyPassword\" />\n+                </div>\n+            </div>\n         </div>\n         <div class=\"modal-footer\">\n           <button type=\"submit\"",
                "raw_url": "https://github.com/apache/zeppelin/raw/79fd3a0242df9f7324410cfc5d987850ee3de405/zeppelin-web/src/components/repository-create/repository-dialog.html",
                "sha": "ab678b767e0f1421b108a29d6215998a19186a97",
                "status": "modified"
            },
            {
                "additions": 8,
                "blob_url": "https://github.com/apache/zeppelin/blob/79fd3a0242df9f7324410cfc5d987850ee3de405/zeppelin-zengine/src/main/java/org/apache/zeppelin/interpreter/InterpreterFactory.java",
                "changes": 13,
                "contents_url": "https://api.github.com/repos/apache/zeppelin/contents/zeppelin-zengine/src/main/java/org/apache/zeppelin/interpreter/InterpreterFactory.java?ref=79fd3a0242df9f7324410cfc5d987850ee3de405",
                "deletions": 5,
                "filename": "zeppelin-zengine/src/main/java/org/apache/zeppelin/interpreter/InterpreterFactory.java",
                "patch": "@@ -62,6 +62,7 @@\n import org.slf4j.LoggerFactory;\n import org.sonatype.aether.RepositoryException;\n import org.sonatype.aether.repository.Authentication;\n+import org.sonatype.aether.repository.Proxy;\n import org.sonatype.aether.repository.RemoteRepository;\n \n import org.apache.zeppelin.conf.ZeppelinConfiguration;\n@@ -432,6 +433,7 @@ private void loadFromFile() throws IOException {\n \n   private void loadInterpreterDependencies(final InterpreterSetting setting) {\n     setting.setStatus(InterpreterSetting.Status.DOWNLOADING_DEPENDENCIES);\n+    setting.setErrorReason(null);\n     interpreterSettings.put(setting.getId(), setting);\n     synchronized (interpreterSettings) {\n       final Thread t = new Thread() {\n@@ -460,11 +462,12 @@ public void run() {\n             }\n \n             setting.setStatus(InterpreterSetting.Status.READY);\n+            setting.setErrorReason(null);\n           } catch (Exception e) {\n             logger.error(String.format(\"Error while downloading repos for interpreter group : %s,\" +\n                     \" go to interpreter setting page click on edit and save it again to make \" +\n-                    \"this interpreter work properly.\",\n-                setting.getGroup()), e);\n+                    \"this interpreter work properly. : %s\",\n+                setting.getGroup(), e.getLocalizedMessage()), e);\n             setting.setErrorReason(e.getLocalizedMessage());\n             setting.setStatus(InterpreterSetting.Status.ERROR);\n           } finally {\n@@ -1307,9 +1310,9 @@ public Interpreter getInterpreter(String noteId, String replName) {\n     return this.interpreterRepositories;\n   }\n \n-  public void addRepository(String id, String url, boolean snapshot, Authentication auth)\n-      throws IOException {\n-    depResolver.addRepo(id, url, snapshot, auth);\n+  public void addRepository(String id, String url, boolean snapshot, Authentication auth,\n+      Proxy proxy) throws IOException {\n+    depResolver.addRepo(id, url, snapshot, auth, proxy);\n     saveToFile();\n   }\n ",
                "raw_url": "https://github.com/apache/zeppelin/raw/79fd3a0242df9f7324410cfc5d987850ee3de405/zeppelin-zengine/src/main/java/org/apache/zeppelin/interpreter/InterpreterFactory.java",
                "sha": "494361b304f8300e7fc9925c713c9fa4779b189d",
                "status": "modified"
            }
        ],
        "message": "[ZEPPELIN-1376] Add proxy credentials for dependency repo for corporate firewall use-cases\n\n### What is this PR for?\nWhen using Zeppelin behind corporate firewall, sometimes the dependencies download just fails silently. This PR has 2 objectives:\n\n* add proxy credentials information for dependencies repo\n* raise clear error message in case of dependencies download failure\n\nThere are 3 commits.\n\nThe first one add extra inputs in the form for adding new repository\n\n![add_repo](https://cloud.githubusercontent.com/assets/1532977/18017489/0b486fda-6bd2-11e6-90c7-ceda18c53575.png)\n\nThe second commit fixes some issues and display a clear and explicit error message when download of dependencies fail.\n\nBefore that, when the download fails, we can see the below behaviour\n\n![irrelevant_double_error_message](https://cloud.githubusercontent.com/assets/1532977/18017541/3cf0de1e-6bd2-11e6-8285-af03f222e8d2.gif)\n\n* the error message is displayed twice because the call twice the method `checkDownloadingDependencies();`. One in the success callback of:\n\n```javascript\n $scope.updateInterpreterSetting = function(form, settingId) {\n              ...\n            $http.put(baseUrlSrv.getRestApiBase() + '/interpreter/setting/' + settingId, request)\n              .success(function(data, status, headers, config) {\n                $scope.interpreterSettings[index] = data.body;\n                removeTMPSettings(index);\n                thisConfirm.close();\n                checkDownloadingDependencies();\n                $route.reload();\n              })\n              .error(function(data, status, headers, config) {\n             ...\n    };\n```\n\nAnother call is inside success callback of `getInterpreterSettings()`\n\n```javascript\nvar getInterpreterSettings = function() {\n      $http.get(baseUrlSrv.getRestApiBase() + '/interpreter/setting')\n      .success(function(data, status, headers, config) {\n        $scope.interpreterSettings = data.body;\n        checkDownloadingDependencies();\n      }).error(function(data, status, headers, config) {\n      ....\n```\n\nThe problem is that `$route.reload();` in the success callback of `updateInterpreterSetting()` will trigger `init()` then `getInterpreterSettings()` so `checkDownloadingDependencies()` is called twice.\n\nI remove the call to `checkDownloadingDependencies()` from success callback of `updateInterpreterSetting()`\n\nThe second modification is on class `DependencyResolver`. In the screen capture above, we get a **cryptic** NullPointerException coming from `DefaultRepositorySystem`. I now catch this NPE to wrap it into a more sensible and clearer exception:\n\n```java\n\n  public List<ArtifactResult> getArtifactsWithDep(String dependency,\n    Collection<String> excludes) throws RepositoryException {\n    Artifact artifact = new DefaultArtifact(dependency);\n    DependencyFilter classpathFilter = DependencyFilterUtils.classpathFilter(JavaScopes.COMPILE);\n    PatternExclusionsDependencyFilter exclusionFilter =\n            new PatternExclusionsDependencyFilter(excludes);\n\n    CollectRequest collectRequest = new CollectRequest();\n    collectRequest.setRoot(new Dependency(artifact, JavaScopes.COMPILE));\n\n    synchronized (repos) {\n      for (RemoteRepository repo : repos) {\n        collectRequest.addRepository(repo);\n      }\n    }\n    DependencyRequest dependencyRequest = new DependencyRequest(collectRequest,\n            DependencyFilterUtils.andFilter(exclusionFilter, classpathFilter));\n\n //Catch NPE thrown by aether and give a proper error message\n    try {\n      return system.resolveDependencies(session, dependencyRequest).getArtifactResults();\n    } catch (NullPointerException ex) {\n      throw new RepositoryException(String.format(\"Cannot fetch dependencies for %s\", dependency));\n    }\n  }\n```\n\nThe result is much more cleaner\n\n![dependencies_download_error_popup](https://cloud.githubusercontent.com/assets/1532977/18033855/1be5fe9a-6d2e-11e6-91f9-2f5ea66cab26.gif)\n\nThe last commit is just doc update\n\n![updated_docs](https://cloud.githubusercontent.com/assets/1532977/18017797/97302f14-6bd3-11e6-97cc-77bd52f25cde.png)\n\n### What type of PR is it?\n[Improvement]\n\n### Todos\n* [ ] - Code Review\n* [ ] - Simple test with no Internet connection\n* [ ] - Test within a corporate firewall env with a third-party dependency, requiring download\n\n### What is the Jira issue?\n**[ZEPPELIN-1376]**\n\n### How should this be tested?\n\n##### Simple test\n* `git fetch origin pull/1369/head:WebProxy`\n* `git checkout WebProxy`\n* `mvn clean package -DskipTests`\n* `bin/zeppelin-daemon.sh restart`\n* disconnect from the Internet (pull out the cable, shutdown wifi ...)\n* add a random dependency to the Spark interpreter (take `info.archinnov:achilles-core:4.2.2` for example)\n* validate the change, you should see an error popup on the top-right corner saying that Zeppelin cannot download the dependency\n\n##### Corporate firewall test\n* follow the steps above for simple test\n* create a new repository (see how to **[here]**) and set the proxy information\n* retry the steps above to ensure that the download is successful\n\n### Screenshots (if appropriate)\nSee above\n\n### Questions:\n* Does the licenses files need update? --> **NO**\n* Is there breaking changes for older versions? --> **NO**\n* Does this needs documentation?  --> **YES, DONE**\n\n[ZEPPELIN-1376]: https://issues.apache.org/jira/browse/ZEPPELIN-1376\n[here]: http://localhost:4000/manual/dependencymanagement.html\n\nAuthor: DuyHai DOAN <doanduyhai@gmail.com>\nAuthor: doanduyhai <doanduyhai@apache.org>\n\nCloses #1369 from doanduyhai/ZEPPELIN-1376 and squashes the following commits:\n\nb8d44e7 [doanduyhai] [ZEPPELIN-1376] Improve error popup display\n177fbd3 [DuyHai DOAN] [ZEPPELIN-1376] Fixes JS bug to display error popup for other interpreters\n9f76ef4 [DuyHai DOAN] [ZEPPELIN-1376] Do not repeat the same error popup multiple times\nb264193 [DuyHai DOAN] [ZEPPELIN-1376] Add unit test and fix impl for DependencyResolver to catch NPE\n1913a0a [DuyHai DOAN] [ZEPPELIN-1376] Update documentation\nf01be9b [DuyHai DOAN] [ZEPPELIN-1376] Raise clear error message in case of dependencies download failure\n6f2b6f8 [DuyHai DOAN] [ZEPPELIN-1376] Add proxy credentials information for dependencies repo",
        "parent": "https://github.com/apache/zeppelin/commit/821b61bb6bdc8ed0622aad04b3c6918ee73f52c5",
        "repo": "zeppelin",
        "unit_tests": [
            "InterpreterFactoryTest.java"
        ]
    },
    "zeppelin_7f6f739": {
        "bug_id": "zeppelin_7f6f739",
        "commit": "https://github.com/apache/zeppelin/commit/7f6f739ae396e07de573bea4ef16a388c54e77b8",
        "file": [
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/zeppelin/blob/7f6f739ae396e07de573bea4ef16a388c54e77b8/zeppelin-zengine/src/main/java/org/apache/zeppelin/interpreter/InterpreterFactory.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/zeppelin/contents/zeppelin-zengine/src/main/java/org/apache/zeppelin/interpreter/InterpreterFactory.java?ref=7f6f739ae396e07de573bea4ef16a388c54e77b8",
                "deletions": 1,
                "filename": "zeppelin-zengine/src/main/java/org/apache/zeppelin/interpreter/InterpreterFactory.java",
                "patch": "@@ -1382,9 +1382,9 @@ public void setEnv(Map<String, String> env) {\n   public Map<String, Object> getEditorSetting(String user, String noteId, String replName) {\n     Interpreter intp = getInterpreter(user, noteId, replName);\n     Map<String, Object> editor = DEFAULT_EDITOR;\n-    String defaultSettingName = getDefaultInterpreterSetting(noteId).getName();\n     String group = StringUtils.EMPTY;\n     try {\n+      String defaultSettingName = getDefaultInterpreterSetting(noteId).getName();\n       List<InterpreterSetting> intpSettings = getInterpreterSettings(noteId);\n       for (InterpreterSetting intpSetting : intpSettings) {\n         String[] replNameSplit = replName.split(\"\\\\.\");",
                "raw_url": "https://github.com/apache/zeppelin/raw/7f6f739ae396e07de573bea4ef16a388c54e77b8/zeppelin-zengine/src/main/java/org/apache/zeppelin/interpreter/InterpreterFactory.java",
                "sha": "4564e3a518d1c36c0522a5b4ff662d8392bd9727",
                "status": "modified"
            }
        ],
        "message": "HOT FIX: Fix NPE while getting default interpreter setting\n\n### What is this PR for?\nNPE while starting Zeppelin for the first time without interpreter settings\n\n### What type of PR is it?\nHot Fix\n\n### What is the Jira issue?\nn/a\n\n### How should this be tested?\nremove conf/interpreter.json and start Zeppelin\n\n### Logs\n**Before**\n`\njava.lang.NullPointerException\n        at org.apache.zeppelin.interpreter.InterpreterFactory.getEditorSetting(InterpreterFactory.java:1385)\n        at org.apache.zeppelin.socket.NotebookServer.getEditorSetting(NotebookServer.java:1796)\n        at org.apache.zeppelin.socket.NotebookServer.onMessage(NotebookServer.java:290)\n        at org.apache.zeppelin.socket.NotebookSocket.onWebSocketText(NotebookSocket.java:59)\n        at org.eclipse.jetty.websocket.common.events.JettyListenerEventDriver.onTextMessage(JettyListenerEventDriver.java:128)\n        at org.eclipse.jetty.websocket.common.message.SimpleTextMessage.messageComplete(SimpleTextMessage.java:69)\n        at org.eclipse.jetty.websocket.common.events.AbstractEventDriver.appendMessage(AbstractEventDriver.java:65)\n        at org.eclipse.jetty.websocket.common.events.JettyListenerEventDriver.onTextFrame(JettyListenerEventDriver.java:122)\n        at org.eclipse.jetty.websocket.common.events.AbstractEventDriver.incomingFrame(AbstractEventDriver.java:161)\n        at org.eclipse.jetty.websocket.common.WebSocketSession.incomingFrame(WebSocketSession.java:309)\n        at org.eclipse.jetty.websocket.common.extensions.ExtensionStack.incomingFrame(ExtensionStack.java:214)\n        at org.eclipse.jetty.websocket.common.Parser.notifyFrame(Parser.java:220)\n        at org.eclipse.jetty.websocket.common.Parser.parse(Parser.java:258)\n        at org.eclipse.jetty.websocket.common.io.AbstractWebSocketConnection.readParse(AbstractWebSocketConnection.java:632)\n        at org.eclipse.jetty.websocket.common.io.AbstractWebSocketConnection.onFillable(AbstractWebSocketConnection.java:480)\n        at org.eclipse.jetty.io.AbstractConnection$2.run(AbstractConnection.java:544)\n        at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:635)\n        at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:555)\n        at java.lang.Thread.run(Thread.java:745)\n`\n\n**After**\n`\n WARN [2016-11-22 18:52:16,890] ({qtp1702660825-60} InterpreterFactory.java[getEditorSetting]:1405) - Couldn't get interpreter editor setting\n`\n\n### Questions:\n* Does the licenses files need update? n/a\n* Is there breaking changes for older versions? n/a\n* Does this needs documentation? n/a\n\nAuthor: Renjith Kamath <renjith.kamath@gmail.com>\n\nCloses #1669 from r-kamath/npe-interpreter-setting and squashes the following commits:\n\ne162689 [Renjith Kamath] Fix NPE while getting default interpreter setting",
        "parent": "https://github.com/apache/zeppelin/commit/4dd36bfa312285a13347fb15beadcb0baa30ed23",
        "repo": "zeppelin",
        "unit_tests": [
            "InterpreterFactoryTest.java"
        ]
    },
    "zeppelin_85ee2dd": {
        "bug_id": "zeppelin_85ee2dd",
        "commit": "https://github.com/apache/zeppelin/commit/85ee2ddbcb7d3a4e5839c5bad88870a3d844530c",
        "file": [
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/zeppelin/blob/85ee2ddbcb7d3a4e5839c5bad88870a3d844530c/python/src/main/java/org/apache/zeppelin/python/PythonInterpreter.java",
                "changes": 4,
                "contents_url": "https://api.github.com/repos/apache/zeppelin/contents/python/src/main/java/org/apache/zeppelin/python/PythonInterpreter.java?ref=85ee2ddbcb7d3a4e5839c5bad88870a3d844530c",
                "deletions": 2,
                "filename": "python/src/main/java/org/apache/zeppelin/python/PythonInterpreter.java",
                "patch": "@@ -161,8 +161,8 @@ public int getProgress(InterpreterContext context) {\n \n   @Override\n   public Scheduler getScheduler() {\n-    return SchedulerFactory.singleton().createOrGetParallelScheduler(\n-        PythonInterpreter.class.getName() + this.hashCode(), 10);\n+    return SchedulerFactory.singleton().createOrGetFIFOScheduler(\n+        PythonInterpreter.class.getName() + this.hashCode());\n   }\n \n   @Override",
                "raw_url": "https://github.com/apache/zeppelin/raw/85ee2ddbcb7d3a4e5839c5bad88870a3d844530c/python/src/main/java/org/apache/zeppelin/python/PythonInterpreter.java",
                "sha": "b1da98192d4de8808ef4cfc39c2b448f7db301f8",
                "status": "modified"
            }
        ],
        "message": "Python: fix for 'run all' paragraphs\n\n### What is this PR for?\nSwitch to FIFO scheduler as in current implementation `.interpret()` is not thread-safe and so in parallel one 'Run All' fails some paragraphs with NPE in logs\n\n### What type of PR is it?\nBug Fix | Improvement\n\n### How should this be tested?\n'Run All' passes without NPE in logs i.e on this [Zeppelin notebook for python](https://www.zeppelinhub.com/viewer/notebooks/aHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL2J6ei9pbmN1YmF0b3ItemVwcGVsaW4vMTkyZjU3YjZjMGZkMjc4NzgwZDI3NDAzMGY1YmJlOTZlZThkNzdiYi9ub3RlYm9vay8yQlFBMzVDSlovbm90ZS5qc29u)\n### Questions:\n* Does the licenses files need update? No\n* Is there breaking changes for older versions? No\n* Does this needs documentation? No\n\nAuthor: Alexander Bezzubov <bzz@apache.org>\n\nCloses #1033 from bzz/fix/python-run-all and squashes the following commits:\n\n72e9d62 [Alexander Bezzubov] Python: switch to FIFO scheduler",
        "parent": "https://github.com/apache/zeppelin/commit/70d22d3d0a19b0d8863fbce4089913269a288a1d",
        "repo": "zeppelin",
        "unit_tests": [
            "PythonInterpreterTest.java"
        ]
    },
    "zeppelin_8744032": {
        "bug_id": "zeppelin_8744032",
        "commit": "https://github.com/apache/zeppelin/commit/8744032563718dfe9aac0c9b968254fcdca7b004",
        "file": [
            {
                "additions": 6,
                "blob_url": "https://github.com/apache/zeppelin/blob/8744032563718dfe9aac0c9b968254fcdca7b004/zeppelin-zengine/src/main/java/org/apache/zeppelin/interpreter/InterpreterSettingManager.java",
                "changes": 8,
                "contents_url": "https://api.github.com/repos/apache/zeppelin/contents/zeppelin-zengine/src/main/java/org/apache/zeppelin/interpreter/InterpreterSettingManager.java?ref=8744032563718dfe9aac0c9b968254fcdca7b004",
                "deletions": 2,
                "filename": "zeppelin-zengine/src/main/java/org/apache/zeppelin/interpreter/InterpreterSettingManager.java",
                "patch": "@@ -887,14 +887,18 @@ public void removeRepository(String id) throws IOException {\n     saveToFile();\n   }\n \n-  public void removeNoteInterpreterSettingBinding(String user, String noteId) {\n+  public void removeNoteInterpreterSettingBinding(String user, String noteId) throws IOException {\n     synchronized (interpreterSettings) {\n       List<String> settingIds = (interpreterBindings.containsKey(noteId) ?\n           interpreterBindings.remove(noteId) :\n           Collections.<String>emptyList());\n       for (String settingId : settingIds) {\n-        this.removeInterpretersForNote(get(settingId), user, noteId);\n+        InterpreterSetting setting = get(settingId);\n+        if (setting != null) {\n+          this.removeInterpretersForNote(setting, user, noteId);\n+        }\n       }\n+      saveToFile();\n     }\n   }\n ",
                "raw_url": "https://github.com/apache/zeppelin/raw/8744032563718dfe9aac0c9b968254fcdca7b004/zeppelin-zengine/src/main/java/org/apache/zeppelin/interpreter/InterpreterSettingManager.java",
                "sha": "1b05a7608acb8064972ffd3cdb2dac0f7fa6e7c3",
                "status": "modified"
            },
            {
                "additions": 5,
                "blob_url": "https://github.com/apache/zeppelin/blob/8744032563718dfe9aac0c9b968254fcdca7b004/zeppelin-zengine/src/main/java/org/apache/zeppelin/notebook/Notebook.java",
                "changes": 6,
                "contents_url": "https://api.github.com/repos/apache/zeppelin/contents/zeppelin-zengine/src/main/java/org/apache/zeppelin/notebook/Notebook.java?ref=8744032563718dfe9aac0c9b968254fcdca7b004",
                "deletions": 1,
                "filename": "zeppelin-zengine/src/main/java/org/apache/zeppelin/notebook/Notebook.java",
                "patch": "@@ -338,7 +338,11 @@ public void removeNote(String id, AuthenticationInfo subject) {\n       note = notes.remove(id);\n       folders.removeNote(note);\n     }\n-    interpreterSettingManager.removeNoteInterpreterSettingBinding(subject.getUser(), id);\n+    try {\n+      interpreterSettingManager.removeNoteInterpreterSettingBinding(subject.getUser(), id);\n+    } catch (IOException e) {\n+      logger.error(e.toString(), e);\n+    }\n     noteSearchService.deleteIndexDocs(note);\n     notebookAuthorization.removeNote(id);\n ",
                "raw_url": "https://github.com/apache/zeppelin/raw/8744032563718dfe9aac0c9b968254fcdca7b004/zeppelin-zengine/src/main/java/org/apache/zeppelin/notebook/Notebook.java",
                "sha": "720a3bea8215a44a7edd68b03bef6cbc5e8d92b2",
                "status": "modified"
            }
        ],
        "message": "[ZEPPELIN-2431] Corrected deletion of notes by incorrect interpreter.json\n\n## What is this PR for?\n\nWe sometimes can not delete a note, or we will be accompanied by an NPE for deleting a note.\n\nThis problem occurs when:\nWhen interpreter.json 's note binding is wrong, or there is a problem.\nIf you are configuring an interpreter that is not through zeppelin's user interface.\nAs a result, it happens when synchronization of notes deletion and setting retention is not normal.\nTherefore, we should add handling for note deletion and exception handling for nonexistent interpreter bindings.\nIt reduces the synchronization problem of interpreter.json.\n\n### What type of PR is it?\nBug Fix\n\n### What is the Jira issue?\nhttps://issues.apache.org/jira/browse/ZEPPELIN-2431\n\n### How should this be tested?\n1. zeppelin stop\n2. edit con/interpreter.json and `interpreterBindings`\n  fix any notes or incorrect information.\n  for example\n  ```\n    },\n  \"interpreterBindings\": {\n    \"2CFS9YSM5\": [\n      \"2CFRR1D3TINVALIDINVALIDINVALID\", <-- edit\n      \"2CFZ1JKUR\",\n      \"2CEAJK1VW\",\n      \"2CGSESWBH\",\n      \"2CERNPGW5\",\n   }\n  ```\n3. zeppelin start\n4. You can try remove invalid interpreter bind note on web. (on example = `2CFS9YSM5`)\n\nresult :\nIf the modifications to this PR are not reflected,\nIt will not be deleted or an error will appear on the server.\nAlso, the interpreterBindings information in interpreter.json does not respond to delete events.\n\n### Screenshots (if appropriate)\nproblem animation\n![cantremove](https://cloud.githubusercontent.com/assets/10525473/25327785/7031f960-2910-11e7-88c7-d322da21290c.gif)\n\n### Questions:\n* Does the licenses files need update? no\n* Is there breaking changes for older versions? no\n* Does this needs documentation? no\n\nAuthor: CloverHearts <cloverheartsdev@gmail.com>\n\nCloses #2278 from cloverhearts/fix/invalidsyncInterpreterJson and squashes the following commits:\n\n35da524c [CloverHearts] notebook interpreter binding synchronization process",
        "parent": "https://github.com/apache/zeppelin/commit/c8cd1cf5065605269cf83ebc8fe7b265337e34a2",
        "repo": "zeppelin",
        "unit_tests": [
            "NotebookTest.java"
        ]
    },
    "zeppelin_88c5c3c": {
        "bug_id": "zeppelin_88c5c3c",
        "commit": "https://github.com/apache/zeppelin/commit/88c5c3ccd9e346d48637d3c63c8dff5ba53c8d8e",
        "file": [
            {
                "additions": 3,
                "blob_url": "https://github.com/apache/zeppelin/blob/88c5c3ccd9e346d48637d3c63c8dff5ba53c8d8e/zeppelin-zengine/src/main/java/org/apache/zeppelin/helium/HeliumBundleFactory.java",
                "changes": 5,
                "contents_url": "https://api.github.com/repos/apache/zeppelin/contents/zeppelin-zengine/src/main/java/org/apache/zeppelin/helium/HeliumBundleFactory.java?ref=88c5c3ccd9e346d48637d3c63c8dff5ba53c8d8e",
                "deletions": 2,
                "filename": "zeppelin-zengine/src/main/java/org/apache/zeppelin/helium/HeliumBundleFactory.java",
                "patch": "@@ -164,9 +164,10 @@ private ProxyConfig getProxyConfig(boolean isSecure) {\n             System.getenv(\"HTTPS_PROXY\") : System.getenv(\"https_proxy\");\n \n     try {\n-      if (isSecure)\n+      if (isSecure && StringUtils.isNotBlank(httpsProxy))\n         proxies.add(generateProxy(\"secure\", new URI(httpsProxy)));\n-      else proxies.add(generateProxy(\"insecure\", new URI(httpProxy)));\n+      else if (!isSecure && StringUtils.isNotBlank(httpProxy))\n+        proxies.add(generateProxy(\"insecure\", new URI(httpProxy)));\n     } catch (Exception ex) {\n       logger.error(ex.getMessage(), ex);\n     }",
                "raw_url": "https://github.com/apache/zeppelin/raw/88c5c3ccd9e346d48637d3c63c8dff5ba53c8d8e/zeppelin-zengine/src/main/java/org/apache/zeppelin/helium/HeliumBundleFactory.java",
                "sha": "52e4f6d204e774ce12bac611cdf6617da2d0fd60",
                "status": "modified"
            },
            {
                "additions": 4,
                "blob_url": "https://github.com/apache/zeppelin/blob/88c5c3ccd9e346d48637d3c63c8dff5ba53c8d8e/zeppelin-zengine/src/main/java/org/apache/zeppelin/helium/HeliumOnlineRegistry.java",
                "changes": 8,
                "contents_url": "https://api.github.com/repos/apache/zeppelin/contents/zeppelin-zengine/src/main/java/org/apache/zeppelin/helium/HeliumOnlineRegistry.java?ref=88c5c3ccd9e346d48637d3c63c8dff5ba53c8d8e",
                "deletions": 4,
                "filename": "zeppelin-zengine/src/main/java/org/apache/zeppelin/helium/HeliumOnlineRegistry.java",
                "patch": "@@ -31,7 +31,6 @@\n \n import java.io.*;\n import java.net.URI;\n-import java.net.URISyntaxException;\n import java.util.LinkedList;\n import java.util.List;\n import java.util.Map;\n@@ -119,17 +118,18 @@ private HttpHost getProxy(String uri) {\n \n     try {\n       String scheme = new URI(uri).getScheme();\n-      if (scheme.toLowerCase().startsWith(\"https\")) {\n+      if (scheme.toLowerCase().startsWith(\"https\") && StringUtils.isNotBlank(httpsProxy)) {\n         URI httpsProxyUri = new URI(httpsProxy);\n         return new HttpHost(httpsProxyUri.getHost(),\n                 httpsProxyUri.getPort(), httpsProxyUri.getScheme());\n       }\n-      else {\n+      else if (scheme.toLowerCase().startsWith(\"http\") && StringUtils.isNotBlank(httpProxy)){\n         URI httpProxyUri = new URI(httpProxy);\n         return new HttpHost(httpProxyUri.getHost(),\n                 httpProxyUri.getPort(), httpProxyUri.getScheme());\n       }\n-    } catch (URISyntaxException ex) {\n+      else return null;\n+    } catch (Exception ex) {\n       logger.error(ex.getMessage(), ex);\n       return null;\n     }",
                "raw_url": "https://github.com/apache/zeppelin/raw/88c5c3ccd9e346d48637d3c63c8dff5ba53c8d8e/zeppelin-zengine/src/main/java/org/apache/zeppelin/helium/HeliumOnlineRegistry.java",
                "sha": "1ea19827b060530d3f271add18bb1d0b7f93be88",
                "status": "modified"
            }
        ],
        "message": "[ZEPPELIN-2152] Fix for npe in Helium loading when no proxies are set\n\n### What is this PR for?\nEmergency fix for npe when calling Helium and with no proxies env variables set.\n\n### What type of PR is it?\nBug Fix\n\n### What is the Jira issue?\nhttps://issues.apache.org/jira/browse/ZEPPELIN-2152\n\n### How should this be tested?\n* clone new zeppelin repository\n* unset http_proxy/https_proxy env variables (if set)\n* build ` mvn clean package -DskipTests;`\n* start zeppelin instance\n\n### Questions:\n* Does the licenses files need update? No\n* Is there breaking changes for older versions? No\n* Does this needs documentation? No\n\nAuthor: Nelson Costa <nelson.costa85@gmail.com>\n\nCloses #2380 from necosta/zeppelin2152-patch and squashes the following commits:\n\ncb25cd7 [Nelson Costa] [ZEPPELIN-2152] Fix for npe in Helium loading when no proxies are set",
        "parent": "https://github.com/apache/zeppelin/commit/87480056a0b10effaf5556d000f8d0c5186848d0",
        "repo": "zeppelin",
        "unit_tests": [
            "HeliumOnlineRegistryTest.java"
        ]
    },
    "zeppelin_927f482": {
        "bug_id": "zeppelin_927f482",
        "commit": "https://github.com/apache/zeppelin/commit/927f482256d6da052edaf99d41ddbddf80334f7c",
        "file": [
            {
                "additions": 25,
                "blob_url": "https://github.com/apache/zeppelin/blob/927f482256d6da052edaf99d41ddbddf80334f7c/zeppelin-server/src/test/java/org/apache/zeppelin/rest/ZeppelinRestApiTest.java",
                "changes": 32,
                "contents_url": "https://api.github.com/repos/apache/zeppelin/contents/zeppelin-server/src/test/java/org/apache/zeppelin/rest/ZeppelinRestApiTest.java?ref=927f482256d6da052edaf99d41ddbddf80334f7c",
                "deletions": 7,
                "filename": "zeppelin-server/src/test/java/org/apache/zeppelin/rest/ZeppelinRestApiTest.java",
                "patch": "@@ -17,12 +17,6 @@\n \n package org.apache.zeppelin.rest;\n \n-import static org.junit.Assert.assertEquals;\n-import static org.junit.Assert.assertNotNull;\n-import static org.junit.Assert.assertNull;\n-import static org.junit.Assert.assertThat;\n-import static org.junit.Assert.assertTrue;\n-\n import java.io.IOException;\n import java.util.List;\n import java.util.Map;\n@@ -46,6 +40,8 @@\n import com.google.gson.Gson;\n import com.google.gson.reflect.TypeToken;\n \n+import static org.junit.Assert.*;\n+\n /**\n  * BASIC Zeppelin rest api tests\n  *\n@@ -530,6 +526,28 @@ public void testCronJobs() throws InterruptedException, IOException{\n     assertThat(\"\", deleteCron, isAllowed());\n     deleteCron.releaseConnection();\n     ZeppelinServer.notebook.removeNote(note.getId());\n-  }  \n+  }\n+\n+  @Test\n+  public void testRegressionZEPPELIN_527() throws IOException {\n+    Note note = ZeppelinServer.notebook.createNote();\n+\n+    note.setName(\"note for run test\");\n+    Paragraph paragraph = note.addParagraph();\n+    paragraph.setText(\"%spark\\nval param = z.input(\\\"param\\\").toString\\nprintln(param)\");\n+\n+    note.persist();\n+\n+    GetMethod getNoteJobs = httpGet(\"/notebook/job/\" + note.getId());\n+    assertThat(\"test notebook jobs run:\", getNoteJobs, isAllowed());\n+    Map<String, Object> resp = gson.fromJson(getNoteJobs.getResponseBodyAsString(), new TypeToken<Map<String, Object>>() {\n+    }.getType());\n+    List<Map<String, String>> body = (List<Map<String, String>>) resp.get(\"body\");\n+    assertFalse(body.get(0).containsKey(\"started\"));\n+    assertFalse(body.get(0).containsKey(\"finished\"));\n+    getNoteJobs.releaseConnection();\n+\n+    ZeppelinServer.notebook.removeNote(note.getId());\n+  }\n }\n ",
                "raw_url": "https://github.com/apache/zeppelin/raw/927f482256d6da052edaf99d41ddbddf80334f7c/zeppelin-server/src/test/java/org/apache/zeppelin/rest/ZeppelinRestApiTest.java",
                "sha": "2db30924027a60e365ef4403695161b743df5cd1",
                "status": "modified"
            },
            {
                "additions": 6,
                "blob_url": "https://github.com/apache/zeppelin/blob/927f482256d6da052edaf99d41ddbddf80334f7c/zeppelin-zengine/src/main/java/org/apache/zeppelin/notebook/Note.java",
                "changes": 8,
                "contents_url": "https://api.github.com/repos/apache/zeppelin/contents/zeppelin-zengine/src/main/java/org/apache/zeppelin/notebook/Note.java?ref=927f482256d6da052edaf99d41ddbddf80334f7c",
                "deletions": 2,
                "filename": "zeppelin-zengine/src/main/java/org/apache/zeppelin/notebook/Note.java",
                "patch": "@@ -312,8 +312,12 @@ public Paragraph getLastParagraph() {\n         Map<String, String> info = new HashMap<>();\n         info.put(\"id\", p.getId());\n         info.put(\"status\", p.getStatus().toString());\n-        info.put(\"started\", p.getDateStarted().toString());\n-        info.put(\"finished\", p.getDateFinished().toString());\n+        if (p.getDateStarted() != null) {\n+          info.put(\"started\", p.getDateStarted().toString());\n+        }\n+        if (p.getDateFinished() != null) {\n+          info.put(\"finished\", p.getDateFinished().toString());\n+        }\n         paragraphsInfo.add(info);\n       }\n     }",
                "raw_url": "https://github.com/apache/zeppelin/raw/927f482256d6da052edaf99d41ddbddf80334f7c/zeppelin-zengine/src/main/java/org/apache/zeppelin/notebook/Note.java",
                "sha": "d193ecc04f55ffb4b68966d1815b72b98ec6f9e7",
                "status": "modified"
            }
        ],
        "message": "ZEPPELIN-527 Fix NPE while retrieving job status from notebook\n\n### What is this PR for?\n\nFix NPE while retrieving job status from notebook which contains \"never run\" / \"first run but not finished\".\n\n### What type of PR is it?\nBug Fix\n\n### Todos\n\n### Is there a relevant Jira issue?\n\nhttps://issues.apache.org/jira/browse/ZEPPELIN-527\n\n### How should this be tested?\n\n1. Create a new notebook (```but don't run notebook!```)\n2. Open ```http://<zeppelin host>:<zeppelin port>/api/notebook/job/<new notebook id>```\n3. You can see HTTP STATUS 500 before this PR, but you can see HTTP STATUS 200 after this PR.\n\n### Screenshots (if appropriate)\n\n![2015-12-22 1 25 36](https://cloud.githubusercontent.com/assets/1317309/11947812/87605786-a8af-11e5-9d3f-3fda7efd12da.png)\n\n### Questions:\n* Does the licenses files need update? (No)\n* Is there breaking changes for older versions? (No)\n* Does this needs documentation? (No)\n\nAuthor: Jungtaek Lim <kabhwan@gmail.com>\n\nCloses #562 from HeartSaVioR/ZEPPELIN-527 and squashes the following commits:\n\na1eacb6 [Jungtaek Lim] Merge branch 'master' into ZEPPELIN-527\ne08519e [Jungtaek Lim] ZEPPELIN-527 Don't include null value to the Map\nf296406 [Jungtaek Lim] ZEPPELIN-527 Fix NPE while retrieving job status from notebook",
        "parent": "https://github.com/apache/zeppelin/commit/ad7a6c0821840d32c8ddc87c9835c8b0cf1d33e1",
        "repo": "zeppelin",
        "unit_tests": [
            "NoteTest.java"
        ]
    },
    "zeppelin_bfb04af": {
        "bug_id": "zeppelin_bfb04af",
        "commit": "https://github.com/apache/zeppelin/commit/bfb04af395b7815c8765e709639e4b86bdd64884",
        "file": [
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/zeppelin/blob/bfb04af395b7815c8765e709639e4b86bdd64884/zeppelin-zengine/src/main/java/org/apache/zeppelin/notebook/Paragraph.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/zeppelin/contents/zeppelin-zengine/src/main/java/org/apache/zeppelin/notebook/Paragraph.java?ref=bfb04af395b7815c8765e709639e4b86bdd64884",
                "deletions": 1,
                "filename": "zeppelin-zengine/src/main/java/org/apache/zeppelin/notebook/Paragraph.java",
                "patch": "@@ -728,7 +728,7 @@ public void updateRuntimeInfos(String label, String tooltip, Map<String, String>\n    * @param settingId\n    */\n   public void clearRuntimeInfo(String settingId) {\n-    if (settingId != null) {\n+    if (settingId != null && runtimeInfos != null) {\n       Set<String> keys = runtimeInfos.keySet();\n       if (keys.size() > 0) {\n         List<String> infosToRemove = new ArrayList<>();",
                "raw_url": "https://github.com/apache/zeppelin/raw/bfb04af395b7815c8765e709639e4b86bdd64884/zeppelin-zengine/src/main/java/org/apache/zeppelin/notebook/Paragraph.java",
                "sha": "76c48c844ca65559eee37b5eb9bceebd56f43e60",
                "status": "modified"
            }
        ],
        "message": "[ZEPPELIN-3241] fix NPE when restarting Interpreter\n\n### What is this PR for?\nWe often (but not always) face an NPE when restarting Spark interpreter. Our Spark interpreter run in scoped mode per note. The restart then is not possible, only restart of whole zeppelin daemon helps out.\n\nThis PR fixes this NPE.\n\n### What type of PR is it?\nBug Fix\n\n### Todos\n\n### What is the Jira issue?\n[https://issues.apache.org/jira/browse/ZEPPELIN-3241](https://issues.apache.org/jira/browse/ZEPPELIN-3241)\n\n### How should this be tested?\n- manual\n\n### Screenshots (if appropriate)\n\n### Questions:\n* Does the licenses files need update? no\n* Is there breaking changes for older versions? no\n* Does this needs documentation? no\n\nAuthor: Andreas Weise <a.weise@avm.de>\n\nCloses #2806 from weand/ZEPPELIN-3241 and squashes the following commits:\n\n85c0448 [Andreas Weise] ZEPPELIN-3241: NPE when restarting Interpreter",
        "parent": "https://github.com/apache/zeppelin/commit/bf923dc13c6051bc1a2622724300c56458d7ca08",
        "repo": "zeppelin",
        "unit_tests": [
            "ParagraphTest.java"
        ]
    },
    "zeppelin_d47418b": {
        "bug_id": "zeppelin_d47418b",
        "commit": "https://github.com/apache/zeppelin/commit/d47418bb4fecc8587da8cebd70d99cf34f6eb288",
        "file": [
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/zeppelin/blob/d47418bb4fecc8587da8cebd70d99cf34f6eb288/zeppelin-zengine/src/main/java/org/apache/zeppelin/interpreter/InterpreterFactory.java",
                "changes": 3,
                "contents_url": "https://api.github.com/repos/apache/zeppelin/contents/zeppelin-zengine/src/main/java/org/apache/zeppelin/interpreter/InterpreterFactory.java?ref=d47418bb4fecc8587da8cebd70d99cf34f6eb288",
                "deletions": 1,
                "filename": "zeppelin-zengine/src/main/java/org/apache/zeppelin/interpreter/InterpreterFactory.java",
                "patch": "@@ -627,7 +627,8 @@ public void putNoteInterpreterSettingBinding(String noteId,\n \n   public void removeNoteInterpreterSettingBinding(String noteId) {\n     synchronized (interpreterSettings) {\n-      List<String> settingIds = interpreterBindings.remove(noteId);\n+      List<String> settingIds = (interpreterBindings.containsKey(noteId) ?\n+          interpreterBindings.remove(noteId) : Collections.<String>emptyList());\n       for (String settingId : settingIds) {\n         this.removeInterpretersForNote(get(settingId), noteId);\n       }",
                "raw_url": "https://github.com/apache/zeppelin/raw/d47418bb4fecc8587da8cebd70d99cf34f6eb288/zeppelin-zengine/src/main/java/org/apache/zeppelin/interpreter/InterpreterFactory.java",
                "sha": "7df7bb39e501e06d3c3f085d54a72e480c3a57e8",
                "status": "modified"
            }
        ],
        "message": "Fix removing notes without specified interpreter settings\n\n### What is this PR for?\nThis PR fixes incorrect behavior when trying to remove note without saving its interpreter binding settings.\n\n### What type of PR is it?\nBug Fix\n\n### Todos\n* [x] - don't let null return value\n\n### What is the Jira issue?\n[ZEPPELIN-765] (https://issues.apache.org/jira/browse/ZEPPELIN-765)\n\n### How should this be tested?\nTry to remove some notebook without saving its interpreter bindings when first entering it\n\n### Screenshots (if appropriate)\nBefore:\n![remove_before](https://cloud.githubusercontent.com/assets/1642088/14064278/8f1737ea-f438-11e5-978c-44cdaddfd94f.gif)\n\nAfter:\n![remove_after](https://cloud.githubusercontent.com/assets/1642088/14064281/9a034e6e-f438-11e5-999f-e4cc802b234a.gif)\n\n### Questions:\n* Does the licenses files need update? No\n* Is there breaking changes for older versions? No\n* Does this needs documentation? No\n\nAuthor: Khalid Huseynov <khalidhnv@nflabs.com>\n\nCloses #798 from khalidhuseynov/fix/remove-note-binding-npe and squashes the following commits:\n\n4efb77b [Khalid Huseynov] fix warning\n71a0308 [Khalid Huseynov] dont return null for bindings",
        "parent": "https://github.com/apache/zeppelin/commit/c4917ade11c07b005af7859fc1d70dc3d2058ec2",
        "repo": "zeppelin",
        "unit_tests": [
            "InterpreterFactoryTest.java"
        ]
    },
    "zeppelin_e7e9e19": {
        "bug_id": "zeppelin_e7e9e19",
        "commit": "https://github.com/apache/zeppelin/commit/e7e9e19cf1be6ada5b5e8d56fc2a7d8809f85f79",
        "file": [
            {
                "additions": 3,
                "blob_url": "https://github.com/apache/zeppelin/blob/e7e9e19cf1be6ada5b5e8d56fc2a7d8809f85f79/zeppelin-server/src/main/java/org/apache/zeppelin/rest/NotebookRestApi.java",
                "changes": 3,
                "contents_url": "https://api.github.com/repos/apache/zeppelin/contents/zeppelin-server/src/main/java/org/apache/zeppelin/rest/NotebookRestApi.java?ref=e7e9e19cf1be6ada5b5e8d56fc2a7d8809f85f79",
                "deletions": 0,
                "filename": "zeppelin-server/src/main/java/org/apache/zeppelin/rest/NotebookRestApi.java",
                "patch": "@@ -797,6 +797,9 @@ public Response runParagraphSynchronously(@PathParam(\"noteId\") String noteId,\n       note.initializeJobListenerForParagraph(paragraph);\n     }\n \n+    AuthenticationInfo subject = new AuthenticationInfo(SecurityUtils.getPrincipal());\n+    paragraph.setAuthenticationInfo(subject);\n+\n     paragraph.run();\n \n     final InterpreterResult result = paragraph.getResult();",
                "raw_url": "https://github.com/apache/zeppelin/raw/e7e9e19cf1be6ada5b5e8d56fc2a7d8809f85f79/zeppelin-server/src/main/java/org/apache/zeppelin/rest/NotebookRestApi.java",
                "sha": "2042c4c202413fc908d09d028ae5fea27c1c4eb5",
                "status": "modified"
            }
        ],
        "message": "[ZEPPELIN-3189] NPE on paragraph run via API\n\n### What is this PR for?\nBugfix over NPE when running REST API command to run paragraph synchronously.\n\n### What type of PR is it?\n[Bug Fix]\n\n### Todos\n* [ ] - Task\n\n### What is the Jira issue?\nhttps://issues.apache.org/jira/browse/ZEPPELIN-3189\n\n### How should this be tested?\n1. Build Zep (mvn clean package -DskipTests)\n2. Start Zep\n3. Run curl command in shell (curl -i -X POST http://localhost:8080/api/notebook/run/{noteId}/{paragraphId}\n\n### Screenshots (if appropriate)\n\n### Questions:\n* Does the licenses files need update? N\n* Is there breaking changes for older versions? N\n* Does this needs documentation? N\n\nAuthor: Nelson Costa <nelson.costa85@gmail.com>\n\nCloses #2745 from necosta/zeppelin3189 and squashes the following commits:\n\n9d1e2a569 [Nelson Costa] [ZEPPELIN-3189] NPE on paragraph run via API",
        "parent": "https://github.com/apache/zeppelin/commit/7fbb5985ffd13dbdb76e708fcf8f5705b2df0a54",
        "repo": "zeppelin",
        "unit_tests": [
            "NotebookRestApiTest.java"
        ]
    },
    "zeppelin_f3f24f3": {
        "bug_id": "zeppelin_f3f24f3",
        "commit": "https://github.com/apache/zeppelin/commit/f3f24f3000274260ab413d65f15915b6050e8bd1",
        "file": [
            {
                "additions": 8,
                "blob_url": "https://github.com/apache/zeppelin/blob/f3f24f3000274260ab413d65f15915b6050e8bd1/zeppelin-server/src/main/java/org/apache/zeppelin/rest/NotebookRestApi.java",
                "changes": 14,
                "contents_url": "https://api.github.com/repos/apache/zeppelin/contents/zeppelin-server/src/main/java/org/apache/zeppelin/rest/NotebookRestApi.java?ref=f3f24f3000274260ab413d65f15915b6050e8bd1",
                "deletions": 6,
                "filename": "zeppelin-server/src/main/java/org/apache/zeppelin/rest/NotebookRestApi.java",
                "patch": "@@ -332,14 +332,16 @@ public Response importNote(String req) throws IOException {\n   public Response createNote(String message) throws IOException {\n     String user = SecurityUtils.getPrincipal();\n     LOG.info(\"Create new note by JSON {}\", message);\n-    NewNoteRequest request = gson.fromJson(message, NewNoteRequest.class);\n     AuthenticationInfo subject = new AuthenticationInfo(user);\n     Note note = notebook.createNote(subject);\n-    List<NewParagraphRequest> initialParagraphs = request.getParagraphs();\n-    if (initialParagraphs != null) {\n-      for (NewParagraphRequest paragraphRequest : initialParagraphs) {\n-        Paragraph p = note.addNewParagraph(subject);\n-        initParagraph(p, paragraphRequest, user);\n+    NewNoteRequest request = gson.fromJson(message, NewNoteRequest.class);\n+    if (request != null) {\n+      List<NewParagraphRequest> initialParagraphs = request.getParagraphs();\n+      if (initialParagraphs != null) {\n+        for (NewParagraphRequest paragraphRequest : initialParagraphs) {\n+          Paragraph p = note.addNewParagraph(subject);\n+          initParagraph(p, paragraphRequest, user);\n+        }\n       }\n     }\n     note.addNewParagraph(subject); // add one paragraph to the last",
                "raw_url": "https://github.com/apache/zeppelin/raw/f3f24f3000274260ab413d65f15915b6050e8bd1/zeppelin-server/src/main/java/org/apache/zeppelin/rest/NotebookRestApi.java",
                "sha": "e18a2e7f02985dc09ac832c9344a43b21cccc79d",
                "status": "modified"
            }
        ],
        "message": "[ZEPPELIN-2713] Fix NPE of notebook creat rest api  if message is nul\u2026\n\n\u2026l or empty\n\n### What is this PR for?\nNotebook create rest api will cause NPE when the message is null or empty.\n\n### What type of PR is it?\n[Bug Fix ]\n\n### Todos\n* [ ] - Task\n\n### What is the Jira issue?\n* Open an issue on Jira https://issues.apache.org/jira/browse/ZEPPELIN/\n* https://issues.apache.org/jira/projects/ZEPPELIN/issues/ZEPPELIN-2713?filter=allopenissues\n\n### How should this be tested?\nPost to rest api (api/notebook) with nothing, test if NPE\n\n### Screenshots (if appropriate)\n\n### Questions:\n* Does the licenses files need update?   No\n* Is there breaking changes for older versions? No\n* Does this needs documentation? No\n\nAuthor: lichenyang <lichenyang@cmss.chinamobile.com>\n\nCloses #2457 from reminia/ZEPPELIN-2713 and squashes the following commits:\n\n36e3b46b9 [lichenyang] [ZEPPELIN-2713] Fix NPE of notebook create rest api if message is null or empty",
        "parent": "https://github.com/apache/zeppelin/commit/62d9539012031d2d6447837f8344c0540c92b7e0",
        "repo": "zeppelin",
        "unit_tests": [
            "NotebookRestApiTest.java"
        ]
    }
}