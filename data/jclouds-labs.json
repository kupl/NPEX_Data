{
    "jclouds-labs_686b608": {
        "bug_id": "jclouds-labs_686b608",
        "commit": "https://github.com/apache/jclouds-labs/commit/686b608f08ba60be71c9b8bc48b027fbf429d5b5",
        "file": [
            {
                "additions": 7,
                "blob_url": "https://github.com/apache/jclouds-labs/blob/686b608f08ba60be71c9b8bc48b027fbf429d5b5/dimensiondata/src/main/java/org/jclouds/dimensiondata/cloudcontrol/compute/functions/ServerWithNatRuleToNodeMetadata.java",
                "changes": 12,
                "contents_url": "https://api.github.com/repos/apache/jclouds-labs/contents/dimensiondata/src/main/java/org/jclouds/dimensiondata/cloudcontrol/compute/functions/ServerWithNatRuleToNodeMetadata.java?ref=686b608f08ba60be71c9b8bc48b027fbf429d5b5",
                "deletions": 5,
                "filename": "dimensiondata/src/main/java/org/jclouds/dimensiondata/cloudcontrol/compute/functions/ServerWithNatRuleToNodeMetadata.java",
                "patch": "@@ -48,10 +48,10 @@\n \n    private static final Map<State, NodeMetadata.Status> serverStateToNodeStatus = ImmutableMap.<State, NodeMetadata.Status>builder()\n          .put(State.PENDING_DELETE, NodeMetadata.Status.PENDING).put(State.PENDING_CHANGE, NodeMetadata.Status.PENDING)\n-         .put(State.FAILED_ADD, NodeMetadata.Status.ERROR).put(State.FAILED_CHANGE, NodeMetadata.Status.ERROR)\n-         .put(State.FAILED_DELETE, NodeMetadata.Status.ERROR).put(State.DELETED, NodeMetadata.Status.TERMINATED)\n-         .put(State.NORMAL, NodeMetadata.Status.RUNNING).put(State.UNRECOGNIZED, NodeMetadata.Status.UNRECOGNIZED)\n-         .build();\n+         .put(State.PENDING_ADD, NodeMetadata.Status.PENDING).put(State.FAILED_ADD, NodeMetadata.Status.ERROR)\n+         .put(State.FAILED_CHANGE, NodeMetadata.Status.ERROR).put(State.FAILED_DELETE, NodeMetadata.Status.ERROR)\n+         .put(State.DELETED, NodeMetadata.Status.TERMINATED).put(State.NORMAL, NodeMetadata.Status.RUNNING)\n+         .put(State.UNRECOGNIZED, NodeMetadata.Status.UNRECOGNIZED).build();\n \n    private final Supplier<Set<? extends Location>> locations;\n    private final GroupNamingConvention nodeNamingConvention;\n@@ -80,7 +80,9 @@ public NodeMetadata apply(final ServerWithExternalIp serverWithExternalIp) {\n       builder.hardware(serverToHardware.apply(serverWithExternalIp.server()));\n       builder.imageId(server.sourceImageId());\n       builder.operatingSystem(operatingSystemToOperatingSystem.apply(server.guest().operatingSystem()));\n-      builder.status(serverStateToNodeStatus.get(server.state()));\n+      builder.status(server.started() ?\n+            serverStateToNodeStatus.get(server.state()) :\n+            NodeMetadata.Status.SUSPENDED);\n \n       Set<String> privateAddresses = new HashSet<String>();\n       if (server.networkInfo() != null) {",
                "raw_url": "https://github.com/apache/jclouds-labs/raw/686b608f08ba60be71c9b8bc48b027fbf429d5b5/dimensiondata/src/main/java/org/jclouds/dimensiondata/cloudcontrol/compute/functions/ServerWithNatRuleToNodeMetadata.java",
                "sha": "403e4e45ed9c2ab774f90949fb33ee15e51bc087",
                "status": "modified"
            },
            {
                "additions": 0,
                "blob_url": "https://github.com/apache/jclouds-labs/blob/686b608f08ba60be71c9b8bc48b027fbf429d5b5/dimensiondata/src/main/java/org/jclouds/dimensiondata/cloudcontrol/domain/OsImage.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/jclouds-labs/contents/dimensiondata/src/main/java/org/jclouds/dimensiondata/cloudcontrol/domain/OsImage.java?ref=686b608f08ba60be71c9b8bc48b027fbf429d5b5",
                "deletions": 2,
                "filename": "dimensiondata/src/main/java/org/jclouds/dimensiondata/cloudcontrol/domain/OsImage.java",
                "patch": "@@ -18,7 +18,6 @@\n \n import com.google.auto.value.AutoValue;\n import com.google.common.collect.ImmutableList;\n-import org.jclouds.javax.annotation.Nullable;\n import org.jclouds.json.SerializedNames;\n \n import java.util.Date;\n@@ -32,7 +31,6 @@\n       type = TYPE;\n    }\n \n-   @Nullable\n    public abstract String osImageKey();\n \n    @SerializedNames({ \"id\", \"name\", \"description\", \"cluster\", \"guest\", \"datacenterId\", \"cpu\", \"memoryGb\", \"nic\", \"disk\",",
                "raw_url": "https://github.com/apache/jclouds-labs/raw/686b608f08ba60be71c9b8bc48b027fbf429d5b5/dimensiondata/src/main/java/org/jclouds/dimensiondata/cloudcontrol/domain/OsImage.java",
                "sha": "7b179e5138a7ba0c6bd877034b3839b30e4b1952",
                "status": "modified"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/jclouds-labs/blob/686b608f08ba60be71c9b8bc48b027fbf429d5b5/dimensiondata/src/main/java/org/jclouds/dimensiondata/cloudcontrol/domain/State.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/jclouds-labs/contents/dimensiondata/src/main/java/org/jclouds/dimensiondata/cloudcontrol/domain/State.java?ref=686b608f08ba60be71c9b8bc48b027fbf429d5b5",
                "deletions": 1,
                "filename": "dimensiondata/src/main/java/org/jclouds/dimensiondata/cloudcontrol/domain/State.java",
                "patch": "@@ -22,7 +22,7 @@\n \n public enum State {\n \n-   NORMAL, FAILED_ADD, FAILED_CHANGE, FAILED_DELETE, PENDING_DELETE, DELETED, UNRECOGNIZED, PENDING_CHANGE, PENDING_CLEAN, REQUIRES_SUPPORT;\n+   NORMAL, FAILED_ADD, FAILED_CHANGE, FAILED_DELETE, PENDING_DELETE, DELETED, UNRECOGNIZED, PENDING_CHANGE, PENDING_ADD, PENDING_CLEAN, REQUIRES_SUPPORT;\n \n    @Override\n    public String toString() {",
                "raw_url": "https://github.com/apache/jclouds-labs/raw/686b608f08ba60be71c9b8bc48b027fbf429d5b5/dimensiondata/src/main/java/org/jclouds/dimensiondata/cloudcontrol/domain/State.java",
                "sha": "e0dbe54ea37db2085dbea603db9150c17c4979e4",
                "status": "modified"
            },
            {
                "additions": 29,
                "blob_url": "https://github.com/apache/jclouds-labs/blob/686b608f08ba60be71c9b8bc48b027fbf429d5b5/dimensiondata/src/test/java/org/jclouds/dimensiondata/cloudcontrol/compute/functions/ServerWithNatRuleToNodeMetadataTest.java",
                "changes": 31,
                "contents_url": "https://api.github.com/repos/apache/jclouds-labs/contents/dimensiondata/src/test/java/org/jclouds/dimensiondata/cloudcontrol/compute/functions/ServerWithNatRuleToNodeMetadataTest.java?ref=686b608f08ba60be71c9b8bc48b027fbf429d5b5",
                "deletions": 2,
                "filename": "dimensiondata/src/test/java/org/jclouds/dimensiondata/cloudcontrol/compute/functions/ServerWithNatRuleToNodeMetadataTest.java",
                "patch": "@@ -106,7 +106,7 @@ public void setUp() throws Exception {\n \n       server = Server.builder().id(\"serverId\").name(serverName).datacenterId(datacenterId)\n             .networkInfo(NetworkInfo.create(networkDomainId, nic, new ArrayList<NIC>())).cpu(cpu).deployed(true)\n-            .state(State.NORMAL).sourceImageId(\"imageId\").started(false).createTime(new Date()).memoryGb(1024)\n+            .state(State.NORMAL).sourceImageId(\"imageId\").started(true).createTime(new Date()).memoryGb(1024)\n             .guest(Guest.builder().osCustomization(false).operatingSystem(os).build()).build();\n \n       serverWithNatRuleToNodeMetadata = new ServerWithNatRuleToNodeMetadata(locations, conventionFactory,\n@@ -140,7 +140,7 @@ public void testApplyWithNullables() {\n \n       server = Server.builder().id(\"serverId\").name(serverName).datacenterId(datacenterId)\n             .networkInfo(NetworkInfo.create(networkDomainId, nic, new ArrayList<NIC>())).cpu(cpu).deployed(true)\n-            .state(State.DELETED).sourceImageId(\"imageId\").started(false).createTime(new Date()).memoryGb(1024)\n+            .state(State.DELETED).sourceImageId(\"imageId\").started(true).createTime(new Date()).memoryGb(1024)\n             .guest(Guest.builder().osCustomization(false).operatingSystem(os).build()).build();\n \n       serverWithExternalIp = ServerWithExternalIp.create(server, null);\n@@ -155,6 +155,33 @@ public void testApplyWithNullables() {\n             NodeMetadata.Status.TERMINATED, ImmutableSet.<String>of(), ImmutableSet.<String>of());\n    }\n \n+   @Test(dependsOnMethods = \"testApplyWithNullables\")\n+   public void testApplyServerStopped() {\n+\n+      server = Server.builder().id(\"serverId\").name(serverName).datacenterId(datacenterId)\n+            .networkInfo(NetworkInfo.create(networkDomainId, nic, new ArrayList<NIC>())).cpu(cpu).deployed(true)\n+            .state(State.DELETED).sourceImageId(\"imageId\").started(false).createTime(new Date()).memoryGb(1024)\n+            .guest(Guest.builder().osCustomization(false).operatingSystem(os).build()).build();\n+\n+      serverWithExternalIp = ServerWithExternalIp.create(server, externalIp);\n+\n+      org.jclouds.compute.domain.OperatingSystem operatingSystem = org.jclouds.compute.domain.OperatingSystem.builder()\n+            .description(\"Windows 10 x64\").name(\"Win10x64\").is64Bit(true).family(OsFamily.WINDOWS).build();\n+\n+      expect(image.getId()).andReturn(\"imageId\");\n+      expect(image.getOperatingSystem()).andReturn(operatingSystem);\n+      expect(nic.privateIpv4()).andReturn(\"192.168.1.1\").anyTimes();\n+      expect(nodeNamingConvention.groupInUniqueNameOrNull(serverName)).andReturn(\"[\" + serverName + \"]\").anyTimes();\n+      expect(serverToHardware.apply(server)).andReturn(hardware);\n+      expect(operatingSystemToOperatingSystem.apply(os)).andReturn(operatingSystem);\n+\n+      EasyMock.replay(nodeNamingConvention, serverImageApi, image, nic, serverToHardware, operatingSystemToOperatingSystem);\n+\n+      assertNodeMetadata(serverWithNatRuleToNodeMetadata.apply(serverWithExternalIp), operatingSystem,\n+                  serverWithExternalIp.server().sourceImageId(), NodeMetadata.Status.SUSPENDED,\n+                  ImmutableSet.of(nic.privateIpv4()), ImmutableSet.of(externalIp));\n+   }\n+\n    private void assertNodeMetadata(NodeMetadata result, org.jclouds.compute.domain.OperatingSystem os, String imageId,\n          NodeMetadata.Status status, ImmutableSet<String> privateIpAddresses, ImmutableSet<String> publicIpAddresses) {\n       assertNotNull(result);",
                "raw_url": "https://github.com/apache/jclouds-labs/raw/686b608f08ba60be71c9b8bc48b027fbf429d5b5/dimensiondata/src/test/java/org/jclouds/dimensiondata/cloudcontrol/compute/functions/ServerWithNatRuleToNodeMetadataTest.java",
                "sha": "5f83775ff41d4d54351f7b398d8690b4517ce5b9",
                "status": "modified"
            }
        ],
        "message": "JCLOUD-96-JCLOUD-91-Fix NPE and Remove Nullable osImageKey From OsImage",
        "parent": "https://github.com/apache/jclouds-labs/commit/6dec3774ab82616bac5deb977d9003eea8845632",
        "repo": "jclouds-labs",
        "unit_tests": [
            "ServerWithNatRuleToNodeMetadataTest.java"
        ]
    }
}