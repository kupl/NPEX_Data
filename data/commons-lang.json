{
    "commons-lang_1a7e46f": {
        "bug_id": "commons-lang_1a7e46f",
        "commit": "https://github.com/apache/commons-lang/commit/1a7e46f430df71ac883706f595f0698617a8dc3d",
        "file": [
            {
                "additions": 9,
                "blob_url": "https://github.com/apache/commons-lang/blob/1a7e46f430df71ac883706f595f0698617a8dc3d/src/main/java/org/apache/commons/lang3/text/StrBuilder.java",
                "changes": 17,
                "contents_url": "https://api.github.com/repos/apache/commons-lang/contents/src/main/java/org/apache/commons/lang3/text/StrBuilder.java?ref=1a7e46f430df71ac883706f595f0698617a8dc3d",
                "deletions": 8,
                "filename": "src/main/java/org/apache/commons/lang3/text/StrBuilder.java",
                "patch": "@@ -1486,19 +1486,20 @@ public StrBuilder insert(final int index, final Object obj) {\n      * @return this, to enable chaining\n      * @throws IndexOutOfBoundsException if the index is invalid\n      */\n-    @SuppressWarnings(\"null\") // str cannot be null\n     public StrBuilder insert(final int index, String str) {\n         validateIndex(index);\n         if (str == null) {\n             str = nullText;\n         }\n-        final int strLen = (str == null ? 0 : str.length());\n-        if (strLen > 0) {\n-            final int newSize = size + strLen;\n-            ensureCapacity(newSize);\n-            System.arraycopy(buffer, index, buffer, index + strLen, size - index);\n-            size = newSize;\n-            str.getChars(0, strLen, buffer, index); // str cannot be null here\n+        if (str != null) {\n+            final int strLen = str.length();\n+            if (strLen > 0) {\n+                final int newSize = size + strLen;\n+                ensureCapacity(newSize);\n+                System.arraycopy(buffer, index, buffer, index + strLen, size - index);\n+                size = newSize;\n+                str.getChars(0, strLen, buffer, index);\n+            }\n         }\n         return this;\n     }",
                "raw_url": "https://github.com/apache/commons-lang/raw/1a7e46f430df71ac883706f595f0698617a8dc3d/src/main/java/org/apache/commons/lang3/text/StrBuilder.java",
                "sha": "e2f78a89fd832c2f8bb7bd7759df9725f162a1f7",
                "status": "modified"
            }
        ],
        "message": "Rewrite to avoid (im)possible NPE warning\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/lang/trunk@1478506 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/commons-lang/commit/d1350bf73ff5cea1fdd85ce23940c5ca96889f2a",
        "repo": "commons-lang",
        "unit_tests": [
            "StrBuilderTest.java"
        ]
    },
    "commons-lang_c92f2bc": {
        "bug_id": "commons-lang_c92f2bc",
        "commit": "https://github.com/apache/commons-lang/commit/c92f2bcf4cc274062acaa7e9d31a67dc977662d8",
        "file": [
            {
                "additions": 3,
                "blob_url": "https://github.com/apache/commons-lang/blob/c92f2bcf4cc274062acaa7e9d31a67dc977662d8/src/main/java/org/apache/commons/lang3/time/DateUtils.java",
                "changes": 10,
                "contents_url": "https://api.github.com/repos/apache/commons-lang/contents/src/main/java/org/apache/commons/lang3/time/DateUtils.java?ref=c92f2bcf4cc274062acaa7e9d31a67dc977662d8",
                "deletions": 7,
                "filename": "src/main/java/org/apache/commons/lang3/time/DateUtils.java",
                "patch": "@@ -312,7 +312,8 @@ private static Date parseDateWithLeniency(String str, String[] parsePatterns,\n             throw new IllegalArgumentException(\"Date and Patterns must not be null\");\n         }\n         \n-        SimpleDateFormat parser = null;\n+        SimpleDateFormat parser = new SimpleDateFormat();\n+        parser.setLenient(lenient);\n         ParsePosition pos = new ParsePosition(0);\n         for (int i = 0; i < parsePatterns.length; i++) {\n \n@@ -323,12 +324,7 @@ private static Date parseDateWithLeniency(String str, String[] parsePatterns,\n                 pattern = pattern.substring(0, pattern.length() - 1);\n             }\n             \n-            if (i == 0) {\n-                parser = new SimpleDateFormat(pattern);\n-                parser.setLenient(lenient);\n-            } else {\n-                parser.applyPattern(pattern); // cannot be null if i != 0\n-            }\n+            parser.applyPattern(pattern);\n             pos.setIndex(0);\n \n             String str2 = str;",
                "raw_url": "https://github.com/apache/commons-lang/raw/c92f2bcf4cc274062acaa7e9d31a67dc977662d8/src/main/java/org/apache/commons/lang3/time/DateUtils.java",
                "sha": "2b6fc6feca7288f9375b0ce02776102a4ed2cb9d",
                "status": "modified"
            }
        ],
        "message": "Simplify code (eliminate conditional check) and avoid NPE warning\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/lang/trunk@902955 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/commons-lang/commit/a6c13a17c066f2cd89d71ed1879aed2f286921ad",
        "repo": "commons-lang",
        "unit_tests": [
            "DateUtilsTest.java"
        ]
    },
    "commons-lang_cccbf94": {
        "bug_id": "commons-lang_cccbf94",
        "commit": "https://github.com/apache/commons-lang/commit/cccbf94e72fcdfadcaad5800acc8f871e4ef3246",
        "file": [
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/commons-lang/blob/cccbf94e72fcdfadcaad5800acc8f871e4ef3246/src/main/java/org/apache/commons/lang3/AnnotationUtils.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/commons-lang/contents/src/main/java/org/apache/commons/lang3/AnnotationUtils.java?ref=cccbf94e72fcdfadcaad5800acc8f871e4ef3246",
                "deletions": 1,
                "filename": "src/main/java/org/apache/commons/lang3/AnnotationUtils.java",
                "patch": "@@ -59,7 +59,7 @@ protected String getShortClassName(java.lang.Class<?> cls) {\n                     break;\n                 }\n             }\n-            return new StringBuilder(annotationType == null ? null : annotationType.getName())\n+            return new StringBuilder(annotationType == null ? \"\" : annotationType.getName())\n                     .insert(0, '@').toString();\n         }\n ",
                "raw_url": "https://github.com/apache/commons-lang/raw/cccbf94e72fcdfadcaad5800acc8f871e4ef3246/src/main/java/org/apache/commons/lang3/AnnotationUtils.java",
                "sha": "273ccae3bb7dabe2f5f215dc3a279a3a46b3c371",
                "status": "modified"
            }
        ],
        "message": "Changing the StringBuilder to build around an empty String and not null, as null will cause an NPE. Reported by FindBugs\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/lang/trunk@1006333 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/commons-lang/commit/039f4566a9445d917b327156f69d0c16954ee756",
        "repo": "commons-lang",
        "unit_tests": [
            "AnnotationUtilsTest.java"
        ]
    },
    "commons-lang_d34dce4": {
        "bug_id": "commons-lang_d34dce4",
        "commit": "https://github.com/apache/commons-lang/commit/d34dce48e5cd02ef1f078a939741d79fab3c39d0",
        "file": [
            {
                "additions": 12,
                "blob_url": "https://github.com/apache/commons-lang/blob/d34dce48e5cd02ef1f078a939741d79fab3c39d0/src/main/java/org/apache/commons/lang3/BooleanUtils.java",
                "changes": 12,
                "contents_url": "https://api.github.com/repos/apache/commons-lang/contents/src/main/java/org/apache/commons/lang3/BooleanUtils.java?ref=d34dce48e5cd02ef1f078a939741d79fab3c39d0",
                "deletions": 0,
                "filename": "src/main/java/org/apache/commons/lang3/BooleanUtils.java",
                "patch": "@@ -52,6 +52,8 @@ public BooleanUtils() {\n      * \n      * <p>If <code>null</code> is passed in, <code>null</code> will be returned.</p>\n      *\n+     * <p>NOTE: This returns null and will throw a NullPointerException if autoboxed to a boolean. </p>\n+     *\n      * <pre>\n      *   BooleanUtils.negate(Boolean.TRUE)  = Boolean.FALSE;\n      *   BooleanUtils.negate(Boolean.FALSE) = Boolean.TRUE;\n@@ -234,6 +236,8 @@ public static Boolean toBooleanObject(int value) {\n      * \n      * <p><code>null</code> will be converted to <code>null</code>.</p>\n      *\n+     * <p>NOTE: This returns null and will throw a NullPointerException if autoboxed to a boolean. </p>\n+     *\n      * <pre>\n      *   BooleanUtils.toBoolean(new Integer(0))    = Boolean.FALSE\n      *   BooleanUtils.toBoolean(new Integer(1))    = Boolean.TRUE\n@@ -315,6 +319,8 @@ public static boolean toBoolean(Integer value, Integer trueValue, Integer falseV\n     /**\n      * <p>Converts an int to a Boolean specifying the conversion values.</p>\n      * \n+     * <p>NOTE: This returns null and will throw a NullPointerException if autoboxed to a boolean. </p>\n+     *\n      * <pre>\n      *   BooleanUtils.toBooleanObject(0, 0, 2, 3) = Boolean.TRUE\n      *   BooleanUtils.toBooleanObject(2, 1, 2, 3) = Boolean.FALSE\n@@ -343,6 +349,8 @@ public static Boolean toBooleanObject(int value, int trueValue, int falseValue,\n     /**\n      * <p>Converts an Integer to a Boolean specifying the conversion values.</p>\n      * \n+     * <p>NOTE: This returns null and will throw a NullPointerException if autoboxed to a boolean. </p>\n+     *\n      * <pre>\n      *   BooleanUtils.toBooleanObject(new Integer(0), new Integer(0), new Integer(2), new Integer(3)) = Boolean.TRUE\n      *   BooleanUtils.toBooleanObject(new Integer(2), new Integer(1), new Integer(2), new Integer(3)) = Boolean.FALSE\n@@ -528,6 +536,8 @@ public static Integer toIntegerObject(Boolean bool, Integer trueValue, Integer f\n      * (case insensitive) will return <code>false</code>.\n      * Otherwise, <code>null</code> is returned.</p>\n      *\n+     * <p>NOTE: This returns null and will throw a NullPointerException if autoboxed to a boolean. </p>\n+     *\n      * <pre>\n      *   BooleanUtils.toBooleanObject(null)    = null\n      *   BooleanUtils.toBooleanObject(\"true\")  = Boolean.TRUE\n@@ -642,6 +652,8 @@ public static Boolean toBooleanObject(String str) {\n     /**\n      * <p>Converts a String to a Boolean throwing an exception if no match.</p>\n      *\n+     * <p>NOTE: This returns null and will throw a NullPointerException if autoboxed to a boolean. </p>\n+     *\n      * <pre>\n      *   BooleanUtils.toBooleanObject(\"true\", \"true\", \"false\", \"null\")  = Boolean.TRUE\n      *   BooleanUtils.toBooleanObject(\"false\", \"true\", \"false\", \"null\") = Boolean.FALSE",
                "raw_url": "https://github.com/apache/commons-lang/raw/d34dce48e5cd02ef1f078a939741d79fab3c39d0/src/main/java/org/apache/commons/lang3/BooleanUtils.java",
                "sha": "c7eae2d05fe02059193200cd73b2347c13792f99",
                "status": "modified"
            }
        ],
        "message": "Adding note on potential NPE if autoboxing occurs per LANG-676\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/lang/trunk@1067606 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/commons-lang/commit/4a29061ad70319e9545f71d208327db3e4192b5e",
        "repo": "commons-lang",
        "unit_tests": [
            "BooleanUtilsTest.java"
        ]
    },
    "commons-lang_d68d218": {
        "bug_id": "commons-lang_d68d218",
        "commit": "https://github.com/apache/commons-lang/commit/d68d21856dd624d79632f32ef45588da72b3ae85",
        "file": [
            {
                "additions": 145,
                "blob_url": "https://github.com/apache/commons-lang/blob/d68d21856dd624d79632f32ef45588da72b3ae85/src/java/org/apache/commons/lang/SystemUtils.java",
                "changes": 194,
                "contents_url": "https://api.github.com/repos/apache/commons-lang/contents/src/java/org/apache/commons/lang/SystemUtils.java?ref=d68d21856dd624d79632f32ef45588da72b3ae85",
                "deletions": 49,
                "filename": "src/java/org/apache/commons/lang/SystemUtils.java",
                "patch": "@@ -66,7 +66,7 @@\n  * @author <a href=\"mailto:ggregory@seagullsw.com\">Gary Gregory</a>\n  * @author Michael Becke\n  * @since 1.0\n- * @version $Id: SystemUtils.java,v 1.10 2003/05/22 21:51:26 scolebourne Exp $\n+ * @version $Id: SystemUtils.java,v 1.11 2003/05/24 12:06:37 scolebourne Exp $\n  */\n public class SystemUtils {\n     \n@@ -81,6 +81,7 @@\n     public SystemUtils() {\n     }\n \n+    //-----------------------------------------------------------------------\n     /**\n      * The <code>file.separator</code> System Property.\n      * File separator (\"/\" on UNIX).\n@@ -90,7 +91,6 @@ public SystemUtils() {\n      * security access to read this property.\n      */\n     public static final String FILE_SEPARATOR = getSystemProperty(\"file.separator\");\n-    \n \n     /**\n      * The <code>java.class.path</code> System Property.\n@@ -101,7 +101,6 @@ public SystemUtils() {\n      * security access to read this property.\n      */\n     public static final String JAVA_CLASS_PATH = getSystemProperty(\"java.class.path\");\n-    \n \n     /**\n      * The <code>java.class.version</code> System Property.\n@@ -112,7 +111,6 @@ public SystemUtils() {\n      * security access to read this property.\n      */\n     public static final String JAVA_CLASS_VERSION = getSystemProperty(\"java.class.version\");\n-    \n \n     /**\n      * The <code>java.compiler</code> System Property.\n@@ -123,7 +121,6 @@ public SystemUtils() {\n      * security access to read this property.\n      */\n     public static final String JAVA_COMPILER = getSystemProperty(\"java.compiler\");\n-    \n \n     /**\n      * The <code>java.ext.dirs</code> System Property.\n@@ -134,7 +131,6 @@ public SystemUtils() {\n      * security access to read this property.\n      */\n     public static final String JAVA_EXT_DIRS = getSystemProperty(\"java.ext.dirs\");\n-    \n \n     /**\n      * The <code>java.home</code> System Property.\n@@ -145,7 +141,6 @@ public SystemUtils() {\n      * security access to read this property.\n      */\n     public static final String JAVA_HOME = getSystemProperty(\"java.home\");\n-    \n \n     /**\n      * The <code>java.io.tmpdir</code> System Property.\n@@ -156,7 +151,6 @@ public SystemUtils() {\n      * security access to read this property.\n      */\n     public static final String JAVA_IO_TMPDIR = getSystemProperty(\"java.io.tmpdir\");\n-    \n \n     /**\n      * The <code>java.library.path</code> System Property.\n@@ -167,7 +161,6 @@ public SystemUtils() {\n      * security access to read this property.\n      */\n     public static final String JAVA_LIBRARY_PATH = getSystemProperty(\"java.library.path\");\n-    \n \n     /**\n      * The <code>java.specification.name</code> System Property.\n@@ -178,7 +171,6 @@ public SystemUtils() {\n      * security access to read this property.\n      */\n     public static final String JAVA_SPECIFICATION_NAME = getSystemProperty(\"java.specification.name\");\n-    \n \n     /**\n      * The <code>java.specification.vendor</code> System Property.\n@@ -189,7 +181,6 @@ public SystemUtils() {\n      * security access to read this property.\n      */\n     public static final String JAVA_SPECIFICATION_VENDOR = getSystemProperty(\"java.specification.vendor\");\n-    \n \n     /**\n      * The <code>java.specification.version</code> System Property.\n@@ -200,7 +191,6 @@ public SystemUtils() {\n      * security access to read this property.\n      */\n     public static final String JAVA_SPECIFICATION_VERSION = getSystemProperty(\"java.specification.version\");\n-    \n \n     /**\n      * The <code>java.vendor</code> System Property.\n@@ -211,7 +201,6 @@ public SystemUtils() {\n      * security access to read this property.\n      */\n     public static final String JAVA_VENDOR = getSystemProperty(\"java.vendor\");\n-    \n \n     /**\n      * The <code>java.vendor.url</code> System Property.\n@@ -222,7 +211,6 @@ public SystemUtils() {\n      * security access to read this property.\n      */\n     public static final String JAVA_VENDOR_URL = getSystemProperty(\"java.vendor.url\");\n-    \n \n     /**\n      * The <code>java.version</code> System Property.\n@@ -233,7 +221,6 @@ public SystemUtils() {\n      * security access to read this property.\n      */\n     public static final String JAVA_VERSION = getSystemProperty(\"java.version\");\n-    \n \n     /**\n      * The <code>java.vm.name</code> System Property.\n@@ -244,7 +231,6 @@ public SystemUtils() {\n      * security access to read this property.\n      */\n     public static final String JAVA_VM_NAME = getSystemProperty(\"java.vm.name\");\n-    \n \n     /**\n      * The <code>java.vm.specification.name</code> System Property.\n@@ -255,7 +241,6 @@ public SystemUtils() {\n      * security access to read this property.\n      */\n     public static final String JAVA_VM_SPECIFICATION_NAME = getSystemProperty(\"java.vm.specification.name\");\n-    \n \n     /**\n      * The <code>java.vm.specification.vendor</code> System Property.\n@@ -266,7 +251,6 @@ public SystemUtils() {\n      * security access to read this property.\n      */\n     public static final String JAVA_VM_SPECIFICATION_VENDOR = getSystemProperty(\"java.vm.specification.vendor\");\n-    \n \n     /**\n      * The <code>java.vm.specification.version</code> System Property.\n@@ -277,7 +261,6 @@ public SystemUtils() {\n      * security access to read this property.\n      */\n     public static final String JAVA_VM_SPECIFICATION_VERSION = getSystemProperty(\"java.vm.specification.version\");\n-    \n \n     /**\n      * The <code>java.vm.vendor</code> System Property.\n@@ -288,7 +271,6 @@ public SystemUtils() {\n      * security access to read this property.\n      */\n     public static final String JAVA_VM_VENDOR = getSystemProperty(\"java.vm.vendor\");\n-    \n \n     /**\n      * The <code>java.vm.version</code> System Property.\n@@ -299,7 +281,6 @@ public SystemUtils() {\n      * security access to read this property.\n      */\n     public static final String JAVA_VM_VERSION = getSystemProperty(\"java.vm.version\");\n-    \n \n     /**\n      * The <code>line.separator</code> System Property.\n@@ -310,7 +291,6 @@ public SystemUtils() {\n      * security access to read this property.\n      */\n     public static final String LINE_SEPARATOR = getSystemProperty(\"line.separator\");\n-    \n \n     /**\n      * The <code>os.arch</code> System Property.\n@@ -321,7 +301,6 @@ public SystemUtils() {\n      * security access to read this property.\n      */\n     public static final String OS_ARCH = getSystemProperty(\"os.arch\");\n-    \n \n     /**\n      * The <code>os.name</code> System Property.\n@@ -332,7 +311,6 @@ public SystemUtils() {\n      * security access to read this property.\n      */\n     public static final String OS_NAME = getSystemProperty(\"os.name\");\n-    \n \n     /**\n      * The <code>os.version</code> System Property.\n@@ -343,7 +321,6 @@ public SystemUtils() {\n      * security access to read this property.\n      */\n     public static final String OS_VERSION = getSystemProperty(\"os.version\");\n-    \n \n     /**\n      * The <code>path.separator</code> System Property.\n@@ -354,7 +331,6 @@ public SystemUtils() {\n      * security access to read this property.\n      */\n     public static final String PATH_SEPARATOR = getSystemProperty(\"path.separator\");\n-    \n \n     /**\n      * The <code>user.dir</code> System Property.\n@@ -365,7 +341,6 @@ public SystemUtils() {\n      * security access to read this property.\n      */\n     public static final String USER_DIR = getSystemProperty(\"user.dir\");\n-    \n \n     /**\n      * The <code>user.home</code> System Property.\n@@ -376,7 +351,6 @@ public SystemUtils() {\n      * security access to read this property.\n      */\n     public static final String USER_HOME = getSystemProperty(\"user.home\");\n-    \n \n     /**\n      * The <code>user.name</code> System Property.\n@@ -387,34 +361,69 @@ public SystemUtils() {\n      * security access to read this property.\n      */\n     public static final String USER_NAME = getSystemProperty(\"user.name\");\n-    \n-    \n-    /** \n+\n+    //-----------------------------------------------------------------------\n+    /**\n      * Is <code>true</code> if this is Java version 1.1 (also 1.1.x versions).\n+     * <p>\n+     * The field will return false if <code>JAVA_VERSION</code> is <code>null</code>.\n      */\n-    public static final boolean IS_JAVA_1_1 = JAVA_VERSION.startsWith(\"1.1.\");\n+    public static final boolean IS_JAVA_1_1 = getJavaVersionMatches(\"1.1\");\n \n-    /** \n+    /**\n      * Is <code>true</code> if this is Java version 1.2 (also 1.2.x versions).\n+     * <p>\n+     * The field will return false if <code>JAVA_VERSION</code> is <code>null</code>.\n      */\n-    public static final boolean IS_JAVA_1_2 = JAVA_VERSION.startsWith(\"1.2.\");\n+    public static final boolean IS_JAVA_1_2 = getJavaVersionMatches(\"1.2\");\n \n-    /** \n+    /**\n      * Is <code>true</code> if this is Java version 1.3 (also 1.3.x versions).\n+     * <p>\n+     * The field will return false if <code>JAVA_VERSION</code> is <code>null</code>.\n      */\n-    public static final boolean IS_JAVA_1_3 = JAVA_VERSION.startsWith(\"1.3.\");\n+    public static final boolean IS_JAVA_1_3 = getJavaVersionMatches(\"1.3\");\n \n-    /** \n+    /**\n      * Is <code>true</code> if this is Java version 1.4 (also 1.4.x versions).\n+     * <p>\n+     * The field will return false if <code>JAVA_VERSION</code> is <code>null</code>.\n      */\n-    public static final boolean IS_JAVA_1_4 = JAVA_VERSION.startsWith(\"1.4.\");\n+    public static final boolean IS_JAVA_1_4 = getJavaVersionMatches(\"1.4\");\n \n-    /** \n+    /**\n      * Is <code>true</code> if this is Java version 1.5 (also 1.5.x versions).\n+     * <p>\n+     * The field will return false if <code>JAVA_VERSION</code> is <code>null</code>.\n      */\n-    public static final boolean IS_JAVA_1_5 = JAVA_VERSION.startsWith(\"1.5.\");\n+    public static final boolean IS_JAVA_1_5 = getJavaVersionMatches(\"1.5\");\n \n+    //-----------------------------------------------------------------------\n+    /**\n+     * Gets the Java version as a <code>float</code>.\n+     * Example output:\n+     * <ul>\n+     *  <li><code>1.2f</code> for JDK 1.2\n+     *  <li><code>1.31f</code> for JDK 1.3.1\n+     * </ul>\n+     * <p>\n+     * The field will return zero if <code>JAVA_VERSION</code> is <code>null</code>.\n+     */\n+    public static final float JAVA_VERSION_FLOAT = getJavaVersionAsFloat();\n \n+    /**\n+     * Gets the Java version as an <code>int</code>.\n+     * Example output:\n+     * <ul>\n+     *  <li><code>120</code> for JDK 1.2\n+     *  <li><code>131</code> for JDK 1.3.1\n+     * </ul>\n+     * <p>\n+     * The field will return zero if <code>JAVA_VERSION</code> is <code>null</code>.\n+     */\n+    public static final int JAVA_VERSION_INT = getJavaVersionAsInt();\n+\n+    //-----------------------------------------------------------------------\n     /**\n      * Gets a System property, defaulting to the given value if the property \n      * cannot be read.\n@@ -428,10 +437,81 @@ private static String getSystemProperty(String property) {\n             \n         } catch (SecurityException ex) {\n             // we are not allowed to look at this property\n+            System.err.println(\n+                \"SecurityException thrown when reading system property '\" + property \n+                + \"' - property value will default to null\"\n+            );\n             return null;\n         }\n     }    \n \n+    /**\n+     * Decides if the java version matches.\n+     * \n+     * @param versionPrefix  the prefix for the java version\n+     * @return true if matches, or false if not or can't determine\n+     */\n+    private static boolean getJavaVersionMatches(String versionPrefix) {\n+        if (JAVA_VERSION == null) {\n+            return false;\n+        }\n+        return JAVA_VERSION.startsWith(versionPrefix);\n+    }    \n+\n+    /**\n+     * <p>Get the Java version number as a <code>float</code>.</p>\n+     *\n+     * <p>Example output:</p>\n+     * <ul>\n+     *  <li><code>1.2f</code> for JDK 1.2\n+     *  <li><code>1.31f</code> for JDK 1.3.1\n+     * </ul>\n+     * \n+     * <p>Patch releases are not reported.\n+     * Zero is returned if JAVA_VERSION is <code>null</code>.</p>\n+     * \n+     * @return the version, for example 1.31f for JDK 1.3.1\n+     */\n+    private static float getJavaVersionAsFloat() {\n+        if (JAVA_VERSION == null) {\n+            return 0f;\n+        }\n+        String str = JAVA_VERSION.substring(0, 3);\n+        if (JAVA_VERSION.length() >= 5) {\n+            str = str + JAVA_VERSION.substring(4, 5);\n+        }\n+        return Float.parseFloat(str);\n+    }\n+    \n+    /**\n+     * <p>Get the Java version number as an <code>int</code>.</p>\n+     *\n+     * <p>Example output:</p>\n+     * <ul>\n+     *  <li><code>120</code> for JDK 1.2\n+     *  <li><code>131</code> for JDK 1.3.1\n+     * </ul>\n+     * \n+     * <p>Patch releases are not reported.\n+     * Zero is returned if JAVA_VERSION is <code>null</code>.</p>\n+     * \n+     * @return the version, for example 131 for JDK 1.3.1\n+     */\n+    private static int getJavaVersionAsInt() {\n+        if (JAVA_VERSION == null) {\n+            return 0;\n+        }\n+        String str = JAVA_VERSION.substring(0, 1);\n+        str = str + JAVA_VERSION.substring(2, 3);\n+        if (JAVA_VERSION.length() >= 5) {\n+            str = str + JAVA_VERSION.substring(4, 5);\n+        } else {\n+            str = str + \"0\";\n+        }\n+        return Integer.parseInt(str);\n+    }\n+    \n+    //-----------------------------------------------------------------------    \n     // Parsing operating system may stay here, or it may be moved somewhere else entirely\n //    /** True iff this is running on Windows */\n //    public static final boolean IS_WINDOWS;\n@@ -531,6 +611,7 @@ private static String getSystemProperty(String property) {\n //        }\n //    }\n \n+    //-----------------------------------------------------------------------\n     /**\n      * <p>Get the Java version number as a <code>float</code>.</p>\n      *\n@@ -540,31 +621,46 @@ private static String getSystemProperty(String property) {\n      *  <li><code>1.31f</code> for JDK 1.3.1\n      * </ul>\n      * \n+     * @deprecated Use JAVA_VERSION_FLOAT instead.\n+     *             Will be removed in Commons Lang 3.0.\n      * @return the version, for example 1.31f for JDK 1.3.1\n      */\n     public static float getJavaVersion() {\n-        String str = JAVA_VERSION.substring(0, 3);\n-        if (JAVA_VERSION.length() >= 5) {\n-            str = str + JAVA_VERSION.substring(4, 5);\n-        }\n-        return Float.parseFloat(str);\n+        return JAVA_VERSION_FLOAT;\n     }\n     \n     /**\n-     * <p>Is the Java version at the the requested version.</p>\n+     * <p>Is the Java version at least the requested version.</p>\n      *\n      * <p>Example input:</p>\n      * <ul>\n-     *  <li><code>1.2f</code> for JDK 1.2\n-     *  <li><code>1.31f</code> for JDK 1.3.1\n+     *  <li><code>1.2f</code> to test for JDK 1.2\n+     *  <li><code>1.31f</code> to test for JDK 1.3.1\n      * </ul>\n      * \n      * @param requiredVersion  the required version, for example 1.31f\n      * @return <code>true</code> if the actual version is equal or greater\n      *  than the required version\n      */\n     public static boolean isJavaVersionAtLeast(float requiredVersion) {\n-        return (getJavaVersion() >= requiredVersion);\n+        return (JAVA_VERSION_FLOAT >= requiredVersion);\n+    }\n+    \n+    /**\n+     * <p>Is the Java version at least the requested version.</p>\n+     *\n+     * <p>Example input:</p>\n+     * <ul>\n+     *  <li><code>120</code> to test for JDK 1.2 or greater\n+     *  <li><code>131</code> to test for JDK 1.3.1 or greater\n+     * </ul>\n+     * \n+     * @param requiredVersion  the required version, for example 131\n+     * @return <code>true</code> if the actual version is equal or greater\n+     *  than the required version\n+     */\n+    public static boolean isJavaVersionAtLeast(int requiredVersion) {\n+        return (JAVA_VERSION_INT >= requiredVersion);\n     }\n     \n }",
                "raw_url": "https://github.com/apache/commons-lang/raw/d68d21856dd624d79632f32ef45588da72b3ae85/src/java/org/apache/commons/lang/SystemUtils.java",
                "sha": "7974cbae098030cbe4a44306aa130eba7ae1442f",
                "status": "modified"
            }
        ],
        "message": "Update to protect against NPEs\nTidy up Java version code\nAdd Java version int to supplement float\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/lang/trunk@137336 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/commons-lang/commit/34cca2038ab95a3c43e3d385ea3f83eddcb9e87d",
        "repo": "commons-lang",
        "unit_tests": [
            "SystemUtilsTest.java"
        ]
    }
}