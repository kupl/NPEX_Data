[{"commit": "https://github.com/apache/openmeetings/commit/6824f7a8422aaa4589cc1795543b8559d6aad5f0", "parent": "https://github.com/apache/openmeetings/commit/dd079e6e4d90004220f17e25c418488fd1735399", "message": "[OPENMEETINGS-1649] NPE in stream clean-up is fixed, work with xstream is improved", "bug_id": "openmeetings_1", "file": [{"additions": 10, "raw_url": "https://github.com/apache/openmeetings/raw/6824f7a8422aaa4589cc1795543b8559d6aad5f0/openmeetings-core/src/main/java/org/apache/openmeetings/core/remote/KurentoHandler.java", "blob_url": "https://github.com/apache/openmeetings/blob/6824f7a8422aaa4589cc1795543b8559d6aad5f0/openmeetings-core/src/main/java/org/apache/openmeetings/core/remote/KurentoHandler.java", "sha": "3b8695786acd679415820ad5f6dbf5cdadd23008", "changes": 17, "status": "modified", "deletions": 7, "contents_url": "https://api.github.com/repos/apache/openmeetings/contents/openmeetings-core/src/main/java/org/apache/openmeetings/core/remote/KurentoHandler.java?ref=6824f7a8422aaa4589cc1795543b8559d6aad5f0", "patch": "@@ -66,10 +66,10 @@\n \n public class KurentoHandler {\n \tprivate final static Logger log = LoggerFactory.getLogger(KurentoHandler.class);\n-\tfinal static String MODE_TEST = \"test\";\n-\tfinal static String TAG_KUID = \"kuid\";\n-\tfinal static String TAG_MODE = \"mode\";\n-\tfinal static String TAG_ROOM = \"roomId\";\n+\tprivate final static String MODE_TEST = \"test\";\n+\tprivate final static String TAG_KUID = \"kuid\";\n+\tprivate final static String TAG_MODE = \"mode\";\n+\tprivate final static String TAG_ROOM = \"roomId\";\n \tprivate final static String HMAC_SHA1_ALGORITHM = \"HmacSHA1\";\n \tpublic final static String KURENTO_TYPE = \"kurento\";\n \tprivate long checkTimeout = 200; //ms\n@@ -114,7 +114,7 @@ public void destroy() {\n \t\t}\n \t}\n \n-\tstatic Map<String, String> tagsAsMap(MediaObject pipe) {\n+\tprivate static Map<String, String> tagsAsMap(MediaObject pipe) {\n \t\tMap<String, String> map = new HashMap<>();\n \t\tfor (Tag t : pipe.getTags()) {\n \t\t\tmap.put(t.getKey(), t.getValue());\n@@ -313,8 +313,11 @@ public void remove(IWsClient _c) {\n \t\t\t\tusersByUid.remove(uid);\n \t\t\t}\n \t\t}\n-\t\tif (!test) {\n-\t\t\tClient c = (Client)_c;\n+\t\tif (test) {\n+\t\t\treturn;\n+\t\t}\n+\t\tClient c = (Client)_c;\n+\t\tif (c.getRoomId() != null) {\n \t\t\tKRoom room = rooms.get(c.getRoomId());\n \t\t\tif (room != null) {\n \t\t\t\troom.leave(c);", "filename": "openmeetings-core/src/main/java/org/apache/openmeetings/core/remote/KurentoHandler.java"}, {"additions": 10, "raw_url": "https://github.com/apache/openmeetings/raw/6824f7a8422aaa4589cc1795543b8559d6aad5f0/openmeetings-install/src/main/java/org/apache/openmeetings/backup/converter/WbConverter.java", "blob_url": "https://github.com/apache/openmeetings/blob/6824f7a8422aaa4589cc1795543b8559d6aad5f0/openmeetings-install/src/main/java/org/apache/openmeetings/backup/converter/WbConverter.java", "sha": "16196b16e45825bacbceb700db3040ded2e65cd7", "changes": 13, "status": "modified", "deletions": 3, "contents_url": "https://api.github.com/repos/apache/openmeetings/contents/openmeetings-install/src/main/java/org/apache/openmeetings/backup/converter/WbConverter.java?ref=6824f7a8422aaa4589cc1795543b8559d6aad5f0", "patch": "@@ -51,6 +51,9 @@\n import com.github.openjson.JSONObject;\n import com.thoughtworks.xstream.XStream;\n import com.thoughtworks.xstream.io.xml.XppDriver;\n+import com.thoughtworks.xstream.security.NoTypePermission;\n+import com.thoughtworks.xstream.security.NullPermission;\n+import com.thoughtworks.xstream.security.PrimitiveTypePermission;\n \n public class WbConverter {\n \tprivate static final Logger log = LoggerFactory.getLogger(WbConverter.class);\n@@ -305,10 +308,14 @@ public static Whiteboard convert(FileItem fi) {\n \t\tFile file = new File(OmFileHelper.getUploadWmlDir(), name);\n \t\tlog.debug(\"filepathComplete: {}\", file);\n \n-\t\tXStream xStream = new XStream(new XppDriver());\n-\t\txStream.setMode(XStream.NO_REFERENCES);\n+\t\tXStream xstream = new XStream(new XppDriver());\n+\t\txstream.setMode(XStream.NO_REFERENCES);\n+\t\txstream.addPermission(NoTypePermission.NONE);\n+\t\txstream.addPermission(NullPermission.NULL);\n+\t\txstream.addPermission(PrimitiveTypePermission.PRIMITIVES);\n+\t\txstream.allowTypeHierarchy(List.class);\n \t\ttry (InputStream is = new FileInputStream(file); BufferedReader reader = new BufferedReader(new InputStreamReader(is, UTF_8))) {\n-\t\t\treturn (List<?>) xStream.fromXML(reader);\n+\t\t\treturn (List<?>) xstream.fromXML(reader);\n \t\t} catch (Exception err) {\n \t\t\tlog.error(\"loadWmlFile\", err);\n \t\t}", "filename": "openmeetings-install/src/main/java/org/apache/openmeetings/backup/converter/WbConverter.java"}, {"additions": 0, "raw_url": "https://github.com/apache/openmeetings/raw/6824f7a8422aaa4589cc1795543b8559d6aad5f0/openmeetings-web/src/main/java/org/apache/openmeetings/web/room/RoomPanel.java", "blob_url": "https://github.com/apache/openmeetings/blob/6824f7a8422aaa4589cc1795543b8559d6aad5f0/openmeetings-web/src/main/java/org/apache/openmeetings/web/room/RoomPanel.java", "sha": "b9e4c6c92e60ec2eb75715a594d9525588a99f5f", "changes": 4, "status": "modified", "deletions": 4, "contents_url": "https://api.github.com/repos/apache/openmeetings/contents/openmeetings-web/src/main/java/org/apache/openmeetings/web/room/RoomPanel.java?ref=6824f7a8422aaa4589cc1795543b8559d6aad5f0", "patch": "@@ -488,10 +488,6 @@ public void onEvent(IEvent<?> event) {\n \t\t\t\t\t\t\t\tlog.error(\"Not existing user in rightUpdated {} !!!!\", uid);\n \t\t\t\t\t\t\t\treturn;\n \t\t\t\t\t\t\t}\n-\t\t\t\t\t\t\tboolean self = _c.getUid().equals(c.getUid());\n-\t\t\t\t\t\t\t/* FIXME TODO handler.appendJavaScript(String.format(\"VideoManager.update(%s);\"\n-\t\t\t\t\t\t\t\t\t, c.streamJson(_c.getSid(), self, scm).toString(new NullStringer())\n-\t\t\t\t\t\t\t\t\t));*/\n \t\t\t\t\t\t\tsidebar.update(handler);\n \t\t\t\t\t\t\tmenu.update(handler);\n \t\t\t\t\t\t\twb.update(handler);", "filename": "openmeetings-web/src/main/java/org/apache/openmeetings/web/room/RoomPanel.java"}, {"additions": 9, "raw_url": "https://github.com/apache/openmeetings/raw/6824f7a8422aaa4589cc1795543b8559d6aad5f0/openmeetings-web/src/main/java/org/apache/openmeetings/web/util/UserDashboardPersister.java", "blob_url": "https://github.com/apache/openmeetings/blob/6824f7a8422aaa4589cc1795543b8559d6aad5f0/openmeetings-web/src/main/java/org/apache/openmeetings/web/util/UserDashboardPersister.java", "sha": "cc58b4879e81224abb174523d5ce773d8bee634f", "changes": 9, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/openmeetings/contents/openmeetings-web/src/main/java/org/apache/openmeetings/web/util/UserDashboardPersister.java?ref=6824f7a8422aaa4589cc1795543b8559d6aad5f0", "patch": "@@ -27,6 +27,7 @@\n import java.io.FileOutputStream;\n import java.io.InputStream;\n import java.io.OutputStream;\n+import java.util.ArrayList;\n import java.util.Collections;\n \n import org.slf4j.Logger;\n@@ -37,6 +38,9 @@\n \n import com.thoughtworks.xstream.XStream;\n import com.thoughtworks.xstream.io.xml.DomDriver;\n+import com.thoughtworks.xstream.security.NoTypePermission;\n+import com.thoughtworks.xstream.security.NullPermission;\n+import com.thoughtworks.xstream.security.PrimitiveTypePermission;\n \n public class UserDashboardPersister implements DashboardPersister {\n \tprivate static final Logger log = LoggerFactory.getLogger(UserDashboardPersister.class);\n@@ -60,6 +64,11 @@ public XStreamDashboardPersister() {\n \n \t\t\txstream = new XStream(new DomDriver(UTF_8.name()));\n \t\t\txstream.setMode(XStream.NO_REFERENCES);\n+\t\t\txstream.addPermission(NoTypePermission.NONE);\n+\t\t\txstream.addPermission(NullPermission.NULL);\n+\t\t\txstream.addPermission(PrimitiveTypePermission.PRIMITIVES);\n+\t\t\txstream.allowTypeHierarchy(ArrayList.class);\n+\t\t\txstream.allowTypeHierarchy(UserDashboard.class);\n \t\t\txstream.alias(\"dashboard\", UserDashboard.class);\n \t\t}\n ", "filename": "openmeetings-web/src/main/java/org/apache/openmeetings/web/util/UserDashboardPersister.java"}, {"additions": 1, "raw_url": "https://github.com/apache/openmeetings/raw/6824f7a8422aaa4589cc1795543b8559d6aad5f0/openmeetings-web/src/main/webapp/WEB-INF/classes/META-INF/mysql_persistence.xml", "blob_url": "https://github.com/apache/openmeetings/blob/6824f7a8422aaa4589cc1795543b8559d6aad5f0/openmeetings-web/src/main/webapp/WEB-INF/classes/META-INF/mysql_persistence.xml", "sha": "f42310267eb0bf425148bc623a6e37ad3c7b32d1", "changes": 2, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/openmeetings/contents/openmeetings-web/src/main/webapp/WEB-INF/classes/META-INF/mysql_persistence.xml?ref=6824f7a8422aaa4589cc1795543b8559d6aad5f0", "patch": "@@ -62,7 +62,7 @@\n \t\t\t<property name=\"openjpa.RuntimeUnenhancedClasses\" value=\"unsupported\" />\n \t\t\t<property name=\"openjpa.ConnectionDriverName\" value=\"org.apache.commons.dbcp2.BasicDataSource\" />\n \t\t\t<property name=\"openjpa.ConnectionProperties\"\n-\t\t\t\tvalue=\"DriverClassName=com.mysql.jdbc.Driver\n+\t\t\t\tvalue=\"DriverClassName=com.mysql.cj.jdbc.Driver\n \t\t\t\t\t, Url=jdbc:mysql://localhost:3306/openmeetings?autoReconnect=true&amp;useUnicode=true&amp;createDatabaseIfNotExist=true&amp;characterEncoding=utf-8&amp;connectionCollation=utf8_general_ci&amp;cachePrepStmts=true&amp;cacheCallableStatements=true&amp;cacheServerConfiguration=true&amp;useLocalSessionState=true&amp;elideSetAutoCommits=true&amp;alwaysSendSetIsolation=false&amp;enableQueryTimeouts=false&amp;prepStmtCacheSize=3000&amp;prepStmtCacheSqlLimit=1000&amp;useSSL=false&amp;nullNamePatternMatchesAll=true\n \t\t\t\t\t, MaxActive=100\n \t\t\t\t\t, MaxWait=10000", "filename": "openmeetings-web/src/main/webapp/WEB-INF/classes/META-INF/mysql_persistence.xml"}], "repo": "openmeetings"}, {"commit": "https://github.com/apache/openmeetings/commit/82951c0ab8237254c88e61e844b0ae7c4f6d8e49", "parent": "https://github.com/apache/openmeetings/commit/21dc9b9560e956457cbc88baf61d887b503ff6ec", "message": "[OPENMEETINGS-1836] more NPEs are fixed", "bug_id": "openmeetings_2", "file": [{"additions": 7, "raw_url": "https://github.com/apache/openmeetings/raw/82951c0ab8237254c88e61e844b0ae7c4f6d8e49/openmeetings-web/src/main/java/org/apache/openmeetings/web/room/RoomPanel.java", "blob_url": "https://github.com/apache/openmeetings/blob/82951c0ab8237254c88e61e844b0ae7c4f6d8e49/openmeetings-web/src/main/java/org/apache/openmeetings/web/room/RoomPanel.java", "sha": "28e144d5d56f6cb05fbfb91977d8ed2c794cee40", "changes": 16, "status": "modified", "deletions": 9, "contents_url": "https://api.github.com/repos/apache/openmeetings/contents/openmeetings-web/src/main/java/org/apache/openmeetings/web/room/RoomPanel.java?ref=82951c0ab8237254c88e61e844b0ae7c4f6d8e49", "patch": "@@ -395,7 +395,8 @@ public void onClose(IPartialPageRequestHandler handler, DialogButton button) {\n \n \t@Override\n \tpublic void onEvent(IEvent<?> event) {\n-\t\tif (event.getPayload() instanceof WebSocketPushPayload) {\n+\t\tClient _c = getClient();\n+\t\tif (_c != null && event.getPayload() instanceof WebSocketPushPayload) {\n \t\t\tWebSocketPushPayload wsEvent = (WebSocketPushPayload) event.getPayload();\n \t\t\tif (wsEvent.getMessage() instanceof RoomMessage) {\n \t\t\t\tRoomMessage m = (RoomMessage)wsEvent.getMessage();\n@@ -472,7 +473,6 @@ public void onEvent(IEvent<?> event) {\n \t\t\t\t\t\t\t\tlog.error(\"Not existing user in rightUpdated {} !!!!\", uid);\n \t\t\t\t\t\t\t\treturn;\n \t\t\t\t\t\t\t}\n-\t\t\t\t\t\t\tClient _c = getClient();\n \t\t\t\t\t\t\tboolean self = _c.getUid().equals(c.getUid());\n \t\t\t\t\t\t\thandler.appendJavaScript(String.format(\"VideoManager.update(%s);\"\n \t\t\t\t\t\t\t\t\t, c.streamJson(_c.getSid(), self, getBean(StreamClientManager.class)).toString(new NullStringer())\n@@ -496,7 +496,6 @@ public void onEvent(IEvent<?> event) {\n \t\t\t\t\t\t\tlog.error(\"Not existing user in newStream {} !!!!\", uid);\n \t\t\t\t\t\t\treturn;\n \t\t\t\t\t\t}\n-\t\t\t\t\t\tClient _c = getClient();\n \t\t\t\t\t\tboolean self = _c.getSid().equals(c.getSid());\n \t\t\t\t\t\tStreamClientManager mgr = getBean(StreamClientManager.class);\n \t\t\t\t\t\tif (!self || Client.Type.room != mgr.get(uid).getType()) { // stream from others or self external video\n@@ -516,7 +515,6 @@ public void onEvent(IEvent<?> event) {\n \t\t\t\t\t\tClient c = cm.getBySid(obj.getString(\"sid\"));\n \t\t\t\t\t\tif (c != null) {\n \t\t\t\t\t\t\t//c == null means client exits the room\n-\t\t\t\t\t\t\tClient _c = getClient();\n \t\t\t\t\t\t\tif (_c.getUid().equals(c.getUid())) {\n \t\t\t\t\t\t\t\tcm.update(c.removeStream(uid));\n \t\t\t\t\t\t\t}\n@@ -569,18 +567,18 @@ public void onEvent(IEvent<?> event) {\n \t\t\t\t\t\tsidebar.removeActivity(((TextRoomMessage)m).getText(), handler);\n \t\t\t\t\t\tbreak;\n \t\t\t\t\tcase haveQuestion:\n-\t\t\t\t\t\tif (getClient().hasRight(Room.Right.moderator) || getUserId().equals(m.getUserId())) {\n+\t\t\t\t\t\tif (_c.hasRight(Room.Right.moderator) || getUserId().equals(m.getUserId())) {\n \t\t\t\t\t\t\tsidebar.addActivity(new Activity((TextRoomMessage)m, Activity.Type.haveQuestion), handler);\n \t\t\t\t\t\t}\n \t\t\t\t\t\tbreak;\n \t\t\t\t\tcase kick:\n \t\t\t\t\t\t{\n \t\t\t\t\t\t\tString uid = ((TextRoomMessage)m).getText();\n-\t\t\t\t\t\t\tif (getClient().getUid().equals(uid)) {\n+\t\t\t\t\t\t\tif (_c.getUid().equals(uid)) {\n \t\t\t\t\t\t\t\thandler.add(room.setVisible(false));\n \t\t\t\t\t\t\t\tgetMainPanel().getChat().toggle(handler, false);\n \t\t\t\t\t\t\t\tclientKicked.open(handler);\n-\t\t\t\t\t\t\t\tcm.exitRoom(getClient());\n+\t\t\t\t\t\t\t\tcm.exitRoom(_c);\n \t\t\t\t\t\t\t}\n \t\t\t\t\t\t}\n \t\t\t\t\t\tbreak;\n@@ -592,7 +590,7 @@ public void onEvent(IEvent<?> event) {\n \t\t\t\t\t\t\tlog.error(\"Not existing user in audioActivity {} !!!!\", obj);\n \t\t\t\t\t\t\treturn;\n \t\t\t\t\t\t}\n-\t\t\t\t\t\tif (!getClient().getUid().equals(c.getUid())) {\n+\t\t\t\t\t\tif (!_c.getUid().equals(c.getUid())) {\n \t\t\t\t\t\t\thandler.appendJavaScript(String.format(\"if (typeof(VideoManager) !== 'undefined') {VideoManager.micActivity('%s', %s);}\", c.getUid(), obj.getBoolean(\"active\")));\n \t\t\t\t\t\t}\n \t\t\t\t\t}\n@@ -605,7 +603,7 @@ public void onEvent(IEvent<?> event) {\n \t\t\t\t\t\t\tlog.error(\"Not existing user in mute {} !!!!\", obj);\n \t\t\t\t\t\t\treturn;\n \t\t\t\t\t\t}\n-\t\t\t\t\t\tif (!getClient().getUid().equals(c.getUid())) {\n+\t\t\t\t\t\tif (!_c.getUid().equals(c.getUid())) {\n \t\t\t\t\t\t\thandler.appendJavaScript(String.format(\"if (typeof(VideoManager) !== 'undefined') {VideoManager.mute('%s', %s);}\", obj.getString(\"uid\"), obj.getBoolean(\"mute\")));\n \t\t\t\t\t\t}\n \t\t\t\t\t}", "filename": "openmeetings-web/src/main/java/org/apache/openmeetings/web/room/RoomPanel.java"}, {"additions": 1, "raw_url": "https://github.com/apache/openmeetings/raw/82951c0ab8237254c88e61e844b0ae7c4f6d8e49/openmeetings-web/src/main/java/org/apache/openmeetings/web/room/sidebar/RoomSidebar.java", "blob_url": "https://github.com/apache/openmeetings/blob/82951c0ab8237254c88e61e844b0ae7c4f6d8e49/openmeetings-web/src/main/java/org/apache/openmeetings/web/room/sidebar/RoomSidebar.java", "sha": "721cc23b33515a8eae832163ae2fd58e146adf03", "changes": 2, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/openmeetings/contents/openmeetings-web/src/main/java/org/apache/openmeetings/web/room/sidebar/RoomSidebar.java?ref=82951c0ab8237254c88e61e844b0ae7c4f6d8e49", "patch": "@@ -296,7 +296,7 @@ private void updateShowFiles(IPartialPageRequestHandler handler) {\n \t}\n \n \tpublic void update(IPartialPageRequestHandler handler) {\n-\t\tif (room.getRoom() == null) {\n+\t\tif (room.getRoom() == null || room.getClient() != null) {\n \t\t\treturn;\n \t\t}\n \t\tupdateShowFiles(handler);", "filename": "openmeetings-web/src/main/java/org/apache/openmeetings/web/room/sidebar/RoomSidebar.java"}, {"additions": 3, "raw_url": "https://github.com/apache/openmeetings/raw/82951c0ab8237254c88e61e844b0ae7c4f6d8e49/openmeetings-web/src/main/java/org/apache/openmeetings/web/room/wb/WbPanel.java", "blob_url": "https://github.com/apache/openmeetings/blob/82951c0ab8237254c88e61e844b0ae7c4f6d8e49/openmeetings-web/src/main/java/org/apache/openmeetings/web/room/wb/WbPanel.java", "sha": "77e860c10d5b6f8c2cfeac66523282c2f7b703af", "changes": 3, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/openmeetings/contents/openmeetings-web/src/main/java/org/apache/openmeetings/web/room/wb/WbPanel.java?ref=82951c0ab8237254c88e61e844b0ae7c4f6d8e49", "patch": "@@ -199,6 +199,9 @@ protected void updateWbActionAttributes(AjaxRequestAttributes attributes) {\n \t@Override\n \tprotected void processWbAction(WbAction a, JSONObject obj, AjaxRequestTarget target) throws IOException {\n \t\tClient c = rp.getClient();\n+\t\tif (c == null) {\n+\t\t\treturn;\n+\t\t}\n \t\tWhiteboardManager wbm = getBean(WhiteboardManager.class);\n \t\tswitch (a) {\n \t\t\tcase createObj:", "filename": "openmeetings-web/src/main/java/org/apache/openmeetings/web/room/wb/WbPanel.java"}], "repo": "openmeetings"}, {"commit": "https://github.com/apache/openmeetings/commit/b200a54fcb1eae62cd7be89e11b32593878c7ade", "parent": "https://github.com/apache/openmeetings/commit/5aa47cbd28c0a5bf03bc0b209c45bdc50f3b125a", "message": "[OPENMEETINGS-1836] more NPEs are fixed", "bug_id": "openmeetings_3", "file": [{"additions": 7, "raw_url": "https://github.com/apache/openmeetings/raw/b200a54fcb1eae62cd7be89e11b32593878c7ade/openmeetings-web/src/main/java/org/apache/openmeetings/web/room/RoomPanel.java", "blob_url": "https://github.com/apache/openmeetings/blob/b200a54fcb1eae62cd7be89e11b32593878c7ade/openmeetings-web/src/main/java/org/apache/openmeetings/web/room/RoomPanel.java", "sha": "23ac29c1017d8459c803704ee38b7058044ad514", "changes": 16, "status": "modified", "deletions": 9, "contents_url": "https://api.github.com/repos/apache/openmeetings/contents/openmeetings-web/src/main/java/org/apache/openmeetings/web/room/RoomPanel.java?ref=b200a54fcb1eae62cd7be89e11b32593878c7ade", "patch": "@@ -393,7 +393,8 @@ public void onClose(IPartialPageRequestHandler handler, DialogButton button) {\n \n \t@Override\n \tpublic void onEvent(IEvent<?> event) {\n-\t\tif (event.getPayload() instanceof WebSocketPushPayload) {\n+\t\tClient _c = getClient();\n+\t\tif (_c != null && event.getPayload() instanceof WebSocketPushPayload) {\n \t\t\tWebSocketPushPayload wsEvent = (WebSocketPushPayload) event.getPayload();\n \t\t\tif (wsEvent.getMessage() instanceof RoomMessage) {\n \t\t\t\tRoomMessage m = (RoomMessage)wsEvent.getMessage();\n@@ -471,7 +472,6 @@ public void onEvent(IEvent<?> event) {\n \t\t\t\t\t\t\t\tlog.error(\"Not existing user in rightUpdated {} !!!!\", uid);\n \t\t\t\t\t\t\t\treturn;\n \t\t\t\t\t\t\t}\n-\t\t\t\t\t\t\tClient _c = getClient();\n \t\t\t\t\t\t\tboolean self = _c.getUid().equals(c.getUid());\n \t\t\t\t\t\t\thandler.appendJavaScript(String.format(\"VideoManager.update(%s);\"\n \t\t\t\t\t\t\t\t\t, c.streamJson(_c.getSid(), self, getBean(StreamClientManager.class)).toString(new NullStringer())\n@@ -495,7 +495,6 @@ public void onEvent(IEvent<?> event) {\n \t\t\t\t\t\t\tlog.error(\"Not existing user in newStream {} !!!!\", uid);\n \t\t\t\t\t\t\treturn;\n \t\t\t\t\t\t}\n-\t\t\t\t\t\tClient _c = getClient();\n \t\t\t\t\t\tboolean self = _c.getSid().equals(c.getSid());\n \t\t\t\t\t\tStreamClientManager mgr = getBean(StreamClientManager.class);\n \t\t\t\t\t\tif (!self || Client.Type.room != mgr.get(uid).getType()) { // stream from others or self external video\n@@ -515,7 +514,6 @@ public void onEvent(IEvent<?> event) {\n \t\t\t\t\t\tClient c = cm.getBySid(obj.getString(\"sid\"));\n \t\t\t\t\t\tif (c != null) {\n \t\t\t\t\t\t\t//c == null means client exits the room\n-\t\t\t\t\t\t\tClient _c = getClient();\n \t\t\t\t\t\t\tif (_c.getUid().equals(c.getUid())) {\n \t\t\t\t\t\t\t\tcm.update(c.removeStream(uid));\n \t\t\t\t\t\t\t}\n@@ -568,18 +566,18 @@ public void onEvent(IEvent<?> event) {\n \t\t\t\t\t\tsidebar.removeActivity(((TextRoomMessage)m).getText(), handler);\n \t\t\t\t\t\tbreak;\n \t\t\t\t\tcase haveQuestion:\n-\t\t\t\t\t\tif (getClient().hasRight(Room.Right.moderator) || getUserId().equals(m.getUserId())) {\n+\t\t\t\t\t\tif (_c.hasRight(Room.Right.moderator) || getUserId().equals(m.getUserId())) {\n \t\t\t\t\t\t\tsidebar.addActivity(new Activity((TextRoomMessage)m, Activity.Type.haveQuestion), handler);\n \t\t\t\t\t\t}\n \t\t\t\t\t\tbreak;\n \t\t\t\t\tcase kick:\n \t\t\t\t\t\t{\n \t\t\t\t\t\t\tString uid = ((TextRoomMessage)m).getText();\n-\t\t\t\t\t\t\tif (getClient().getUid().equals(uid)) {\n+\t\t\t\t\t\t\tif (_c.getUid().equals(uid)) {\n \t\t\t\t\t\t\t\thandler.add(room.setVisible(false));\n \t\t\t\t\t\t\t\tgetMainPanel().getChat().toggle(handler, false);\n \t\t\t\t\t\t\t\tclientKicked.open(handler);\n-\t\t\t\t\t\t\t\tcm.exitRoom(getClient());\n+\t\t\t\t\t\t\t\tcm.exitRoom(_c);\n \t\t\t\t\t\t\t}\n \t\t\t\t\t\t}\n \t\t\t\t\t\tbreak;\n@@ -591,7 +589,7 @@ public void onEvent(IEvent<?> event) {\n \t\t\t\t\t\t\tlog.error(\"Not existing user in audioActivity {} !!!!\", obj);\n \t\t\t\t\t\t\treturn;\n \t\t\t\t\t\t}\n-\t\t\t\t\t\tif (!getClient().getUid().equals(c.getUid())) {\n+\t\t\t\t\t\tif (!_c.getUid().equals(c.getUid())) {\n \t\t\t\t\t\t\thandler.appendJavaScript(String.format(\"if (typeof(VideoManager) !== 'undefined') {VideoManager.micActivity('%s', %s);}\", c.getUid(), obj.getBoolean(\"active\")));\n \t\t\t\t\t\t}\n \t\t\t\t\t}\n@@ -604,7 +602,7 @@ public void onEvent(IEvent<?> event) {\n \t\t\t\t\t\t\tlog.error(\"Not existing user in mute {} !!!!\", obj);\n \t\t\t\t\t\t\treturn;\n \t\t\t\t\t\t}\n-\t\t\t\t\t\tif (!getClient().getUid().equals(c.getUid())) {\n+\t\t\t\t\t\tif (!_c.getUid().equals(c.getUid())) {\n \t\t\t\t\t\t\thandler.appendJavaScript(String.format(\"if (typeof(VideoManager) !== 'undefined') {VideoManager.mute('%s', %s);}\", obj.getString(\"uid\"), obj.getBoolean(\"mute\")));\n \t\t\t\t\t\t}\n \t\t\t\t\t}", "filename": "openmeetings-web/src/main/java/org/apache/openmeetings/web/room/RoomPanel.java"}, {"additions": 1, "raw_url": "https://github.com/apache/openmeetings/raw/b200a54fcb1eae62cd7be89e11b32593878c7ade/openmeetings-web/src/main/java/org/apache/openmeetings/web/room/sidebar/RoomSidebar.java", "blob_url": "https://github.com/apache/openmeetings/blob/b200a54fcb1eae62cd7be89e11b32593878c7ade/openmeetings-web/src/main/java/org/apache/openmeetings/web/room/sidebar/RoomSidebar.java", "sha": "4f0500e5d4d246d54cb158d8560e61ec4731d838", "changes": 2, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/openmeetings/contents/openmeetings-web/src/main/java/org/apache/openmeetings/web/room/sidebar/RoomSidebar.java?ref=b200a54fcb1eae62cd7be89e11b32593878c7ade", "patch": "@@ -294,7 +294,7 @@ private void updateShowFiles(IPartialPageRequestHandler handler) {\n \t}\n \n \tpublic void update(IPartialPageRequestHandler handler) {\n-\t\tif (room.getRoom() == null) {\n+\t\tif (room.getRoom() == null || room.getClient() != null) {\n \t\t\treturn;\n \t\t}\n \t\tupdateShowFiles(handler);", "filename": "openmeetings-web/src/main/java/org/apache/openmeetings/web/room/sidebar/RoomSidebar.java"}, {"additions": 3, "raw_url": "https://github.com/apache/openmeetings/raw/b200a54fcb1eae62cd7be89e11b32593878c7ade/openmeetings-web/src/main/java/org/apache/openmeetings/web/room/wb/WbPanel.java", "blob_url": "https://github.com/apache/openmeetings/blob/b200a54fcb1eae62cd7be89e11b32593878c7ade/openmeetings-web/src/main/java/org/apache/openmeetings/web/room/wb/WbPanel.java", "sha": "02167a096e6babd90ff86bdbbc290ec1f7b11516", "changes": 3, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/openmeetings/contents/openmeetings-web/src/main/java/org/apache/openmeetings/web/room/wb/WbPanel.java?ref=b200a54fcb1eae62cd7be89e11b32593878c7ade", "patch": "@@ -200,6 +200,9 @@ protected void updateWbActionAttributes(AjaxRequestAttributes attributes) {\n \t@Override\n \tprotected void processWbAction(WbAction a, JSONObject obj, AjaxRequestTarget target) throws IOException {\n \t\tClient c = rp.getClient();\n+\t\tif (c == null) {\n+\t\t\treturn;\n+\t\t}\n \t\tWhiteboardManager wbm = getBean(WhiteboardManager.class);\n \t\tswitch (a) {\n \t\t\tcase createObj:", "filename": "openmeetings-web/src/main/java/org/apache/openmeetings/web/room/wb/WbPanel.java"}], "repo": "openmeetings"}, {"commit": "https://github.com/apache/openmeetings/commit/21dc9b9560e956457cbc88baf61d887b503ff6ec", "parent": "https://github.com/apache/openmeetings/commit/ad0ed6611b85a1cf02149ae3d758a9ef22dd74ae", "message": "[OPENMEETINGS-1836] some NPEs are fixed", "bug_id": "openmeetings_4", "file": [{"additions": 1, "raw_url": "https://github.com/apache/openmeetings/raw/21dc9b9560e956457cbc88baf61d887b503ff6ec/openmeetings-web/src/main/java/org/apache/openmeetings/web/room/sidebar/SelfIconsPanel.html", "blob_url": "https://github.com/apache/openmeetings/blob/21dc9b9560e956457cbc88baf61d887b503ff6ec/openmeetings-web/src/main/java/org/apache/openmeetings/web/room/sidebar/SelfIconsPanel.html", "sha": "d050375ac463219ed76859e7efc2993ed22c53dd", "changes": 1, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/openmeetings/contents/openmeetings-web/src/main/java/org/apache/openmeetings/web/room/sidebar/SelfIconsPanel.html?ref=21dc9b9560e956457cbc88baf61d887b503ff6ec", "patch": "@@ -30,5 +30,6 @@\n \t<span wicket:id=\"right-remote-control\"></span>\n \t<span wicket:id=\"right-exclsv\"></span>\n \t<span wicket:id=\"right-moder\"></span>\n+\t<div class=\"clear\"></div>\n </wicket:panel>\n </html>", "filename": "openmeetings-web/src/main/java/org/apache/openmeetings/web/room/sidebar/SelfIconsPanel.html"}, {"additions": 3, "raw_url": "https://github.com/apache/openmeetings/raw/21dc9b9560e956457cbc88baf61d887b503ff6ec/openmeetings-web/src/main/java/org/apache/openmeetings/web/room/sidebar/icon/KickIcon.java", "blob_url": "https://github.com/apache/openmeetings/blob/21dc9b9560e956457cbc88baf61d887b503ff6ec/openmeetings-web/src/main/java/org/apache/openmeetings/web/room/sidebar/icon/KickIcon.java", "sha": "55c7a8613283f06e4fbf02d5b9a7409853e42daa", "changes": 4, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/openmeetings/contents/openmeetings-web/src/main/java/org/apache/openmeetings/web/room/sidebar/icon/KickIcon.java?ref=21dc9b9560e956457cbc88baf61d887b503ff6ec", "patch": "@@ -20,6 +20,7 @@\n \n import static org.apache.openmeetings.web.room.sidebar.RoomSidebar.FUNC_ACTION;\n \n+import org.apache.openmeetings.db.entity.basic.Client;\n import org.apache.openmeetings.db.entity.room.Room.Right;\n import org.apache.openmeetings.web.room.RoomPanel.Action;\n \n@@ -43,7 +44,8 @@ protected boolean isClickable() {\n \n \t@Override\n \tprotected String getScript() {\n-\t\treturn String.format(\"%s('%s', '%s');\", FUNC_ACTION, Action.kick.name(), getClient().getUid());\n+\t\tClient c = getClient();\n+\t\treturn c == null ? \"\" : String.format(\"%s('%s', '%s');\", FUNC_ACTION, Action.kick.name(), c.getUid());\n \t}\n \n \t@Override", "filename": "openmeetings-web/src/main/java/org/apache/openmeetings/web/room/sidebar/icon/KickIcon.java"}, {"additions": 1, "raw_url": "https://github.com/apache/openmeetings/raw/21dc9b9560e956457cbc88baf61d887b503ff6ec/openmeetings-web/src/main/java/org/apache/openmeetings/web/room/sidebar/icon/RefreshIcon.java", "blob_url": "https://github.com/apache/openmeetings/blob/21dc9b9560e956457cbc88baf61d887b503ff6ec/openmeetings-web/src/main/java/org/apache/openmeetings/web/room/sidebar/icon/RefreshIcon.java", "sha": "66de9014ac05817b7fa8d078fbd74a916a424a00", "changes": 2, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/openmeetings/contents/openmeetings-web/src/main/java/org/apache/openmeetings/web/room/sidebar/icon/RefreshIcon.java?ref=21dc9b9560e956457cbc88baf61d887b503ff6ec", "patch": "@@ -46,7 +46,7 @@ protected String getAlign() {\n \t@Override\n \tprotected boolean isClickable() {\n \t\tfinal Client c = getClient();\n-\t\treturn c.hasActivity(Activity.broadcastA) || c.hasActivity(Activity.broadcastV);\n+\t\treturn c != null && (c.hasActivity(Activity.broadcastA) || c.hasActivity(Activity.broadcastV));\n \t}\n \n \t@Override", "filename": "openmeetings-web/src/main/java/org/apache/openmeetings/web/room/sidebar/icon/RefreshIcon.java"}, {"additions": 3, "raw_url": "https://github.com/apache/openmeetings/raw/21dc9b9560e956457cbc88baf61d887b503ff6ec/openmeetings-web/src/main/java/org/apache/openmeetings/web/room/sidebar/icon/UserSpeaksIcon.java", "blob_url": "https://github.com/apache/openmeetings/blob/21dc9b9560e956457cbc88baf61d887b503ff6ec/openmeetings-web/src/main/java/org/apache/openmeetings/web/room/sidebar/icon/UserSpeaksIcon.java", "sha": "e186c2a86b884c8e51e96d9c2d8644be4cfadf8c", "changes": 4, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/openmeetings/contents/openmeetings-web/src/main/java/org/apache/openmeetings/web/room/sidebar/icon/UserSpeaksIcon.java?ref=21dc9b9560e956457cbc88baf61d887b503ff6ec", "patch": "@@ -18,6 +18,7 @@\n  */\n package org.apache.openmeetings.web.room.sidebar.icon;\n \n+import org.apache.openmeetings.db.entity.basic.Client;\n import org.apache.openmeetings.db.entity.basic.Client.Activity;\n import org.apache.openmeetings.db.entity.room.Room;\n \n@@ -30,7 +31,8 @@ public UserSpeaksIcon(String id, String uid) {\n \t}\n \n \tprivate boolean isActive() {\n-\t\treturn getClient().hasActivity(Activity.broadcastA) && roomHasRight(Room.Right.exclusive);\n+\t\tClient c = getClient();\n+\t\treturn c != null && (c.hasActivity(Activity.broadcastA) && roomHasRight(Room.Right.exclusive));\n \t}\n \n \t@Override", "filename": "openmeetings-web/src/main/java/org/apache/openmeetings/web/room/sidebar/icon/UserSpeaksIcon.java"}, {"additions": 1, "raw_url": "https://github.com/apache/openmeetings/raw/21dc9b9560e956457cbc88baf61d887b503ff6ec/openmeetings-web/src/main/java/org/apache/openmeetings/web/room/sidebar/icon/right/ModeratorRightIcon.java", "blob_url": "https://github.com/apache/openmeetings/blob/21dc9b9560e956457cbc88baf61d887b503ff6ec/openmeetings-web/src/main/java/org/apache/openmeetings/web/room/sidebar/icon/right/ModeratorRightIcon.java", "sha": "267e74c304afedfe254b3885d90d11c1baa7c40e", "changes": 2, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/openmeetings/contents/openmeetings-web/src/main/java/org/apache/openmeetings/web/room/sidebar/icon/right/ModeratorRightIcon.java?ref=21dc9b9560e956457cbc88baf61d887b503ff6ec", "patch": "@@ -31,7 +31,7 @@ public ModeratorRightIcon(String id, String uid) {\n \t@Override\n \tprotected String getTitle() {\n \t\tString title;\n-\t\tif (getClient().hasRight(right)) {\n+\t\tif (hasRight()) {\n \t\t\ttitle = isSelf() ? \"688\" : \"675\";\n \t\t} else {\n \t\t\ttitle = isSelf() ? \"81\" : \"676\";", "filename": "openmeetings-web/src/main/java/org/apache/openmeetings/web/room/sidebar/icon/right/ModeratorRightIcon.java"}, {"additions": 1, "raw_url": "https://github.com/apache/openmeetings/raw/21dc9b9560e956457cbc88baf61d887b503ff6ec/openmeetings-web/src/main/java/org/apache/openmeetings/web/room/sidebar/icon/right/PresenterRightIcon.java", "blob_url": "https://github.com/apache/openmeetings/blob/21dc9b9560e956457cbc88baf61d887b503ff6ec/openmeetings-web/src/main/java/org/apache/openmeetings/web/room/sidebar/icon/right/PresenterRightIcon.java", "sha": "b4f0392f14b8de95bc73bb8b8d3292b68a0f9769", "changes": 2, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/openmeetings/contents/openmeetings-web/src/main/java/org/apache/openmeetings/web/room/sidebar/icon/right/PresenterRightIcon.java?ref=21dc9b9560e956457cbc88baf61d887b503ff6ec", "patch": "@@ -33,7 +33,7 @@ public PresenterRightIcon(String id, String uid) {\n \t@Override\n \tprotected String getTitle() {\n \t\tString title;\n-\t\tif (hasRight(right)) {\n+\t\tif (hasRight()) {\n \t\t\ttitle = isSelf() ? \"right.presenter.allowed.self\" : \"right.presenter.remove\";\n \t\t} else {\n \t\t\ttitle = isSelf() ? \"right.presenter.request.self\" : \"right.presenter.request\";", "filename": "openmeetings-web/src/main/java/org/apache/openmeetings/web/room/sidebar/icon/right/PresenterRightIcon.java"}, {"additions": 2, "raw_url": "https://github.com/apache/openmeetings/raw/21dc9b9560e956457cbc88baf61d887b503ff6ec/openmeetings-web/src/main/java/org/apache/openmeetings/web/room/sidebar/icon/right/WhiteboardRightIcon.java", "blob_url": "https://github.com/apache/openmeetings/blob/21dc9b9560e956457cbc88baf61d887b503ff6ec/openmeetings-web/src/main/java/org/apache/openmeetings/web/room/sidebar/icon/right/WhiteboardRightIcon.java", "sha": "1a3cdc1221fcf4d5b70dcd11d3eabd2424776201", "changes": 4, "status": "modified", "deletions": 2, "contents_url": "https://api.github.com/repos/apache/openmeetings/contents/openmeetings-web/src/main/java/org/apache/openmeetings/web/room/sidebar/icon/right/WhiteboardRightIcon.java?ref=21dc9b9560e956457cbc88baf61d887b503ff6ec", "patch": "@@ -34,7 +34,7 @@ public WhiteboardRightIcon(String id, String uid) {\n \t@Override\n \tprotected String getTitle() {\n \t\tString title;\n-\t\tif (getClient().hasRight(right)) {\n+\t\tif (hasRight()) {\n \t\t\ttitle = isSelf() ? \"689\" : \"612\";\n \t\t} else {\n \t\t\ttitle = isSelf() ? \"686\" : \"694\";\n@@ -45,7 +45,7 @@ protected String getTitle() {\n \t@Override\n \tprotected boolean hasRight() {\n \t\tfinal Client c = getClient();\n-\t\treturn c.hasRight(Right.presenter) || c.hasRight(right);\n+\t\treturn c != null && (c.hasRight(Right.presenter) || c.hasRight(right));\n \t}\n \n \t@Override", "filename": "openmeetings-web/src/main/java/org/apache/openmeetings/web/room/sidebar/icon/right/WhiteboardRightIcon.java"}, {"additions": 0, "raw_url": "https://github.com/apache/openmeetings/raw/21dc9b9560e956457cbc88baf61d887b503ff6ec/openmeetings-web/src/main/webapp/css/room.css", "blob_url": "https://github.com/apache/openmeetings/blob/21dc9b9560e956457cbc88baf61d887b503ff6ec/openmeetings-web/src/main/webapp/css/room.css", "sha": "d48519379d09be29bd3f5d4fb4daee1d51dc4ddc", "changes": 1, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/openmeetings/contents/openmeetings-web/src/main/webapp/css/room.css?ref=21dc9b9560e956457cbc88baf61d887b503ff6ec", "patch": "@@ -106,7 +106,6 @@\n \tpadding: 0;\n }\n .room.sidebar .user.header {\n-\theight: 45px;\n \tpadding-left: 5px;\n }\n .room.sidebar .user.header .ui-icon {", "filename": "openmeetings-web/src/main/webapp/css/room.css"}], "repo": "openmeetings"}, {"commit": "https://github.com/apache/openmeetings/commit/5aa47cbd28c0a5bf03bc0b209c45bdc50f3b125a", "parent": "https://github.com/apache/openmeetings/commit/1ca1bc545634bc755c48c29556a4d8ea78940d8c", "message": "[OPENMEETINGS-1836] some NPEs are fixed", "bug_id": "openmeetings_5", "file": [{"additions": 1, "raw_url": "https://github.com/apache/openmeetings/raw/5aa47cbd28c0a5bf03bc0b209c45bdc50f3b125a/openmeetings-web/src/main/java/org/apache/openmeetings/web/room/sidebar/SelfIconsPanel.html", "blob_url": "https://github.com/apache/openmeetings/blob/5aa47cbd28c0a5bf03bc0b209c45bdc50f3b125a/openmeetings-web/src/main/java/org/apache/openmeetings/web/room/sidebar/SelfIconsPanel.html", "sha": "d050375ac463219ed76859e7efc2993ed22c53dd", "changes": 1, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/openmeetings/contents/openmeetings-web/src/main/java/org/apache/openmeetings/web/room/sidebar/SelfIconsPanel.html?ref=5aa47cbd28c0a5bf03bc0b209c45bdc50f3b125a", "patch": "@@ -30,5 +30,6 @@\n \t<span wicket:id=\"right-remote-control\"></span>\n \t<span wicket:id=\"right-exclsv\"></span>\n \t<span wicket:id=\"right-moder\"></span>\n+\t<div class=\"clear\"></div>\n </wicket:panel>\n </html>", "filename": "openmeetings-web/src/main/java/org/apache/openmeetings/web/room/sidebar/SelfIconsPanel.html"}, {"additions": 3, "raw_url": "https://github.com/apache/openmeetings/raw/5aa47cbd28c0a5bf03bc0b209c45bdc50f3b125a/openmeetings-web/src/main/java/org/apache/openmeetings/web/room/sidebar/icon/KickIcon.java", "blob_url": "https://github.com/apache/openmeetings/blob/5aa47cbd28c0a5bf03bc0b209c45bdc50f3b125a/openmeetings-web/src/main/java/org/apache/openmeetings/web/room/sidebar/icon/KickIcon.java", "sha": "55c7a8613283f06e4fbf02d5b9a7409853e42daa", "changes": 4, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/openmeetings/contents/openmeetings-web/src/main/java/org/apache/openmeetings/web/room/sidebar/icon/KickIcon.java?ref=5aa47cbd28c0a5bf03bc0b209c45bdc50f3b125a", "patch": "@@ -20,6 +20,7 @@\n \n import static org.apache.openmeetings.web.room.sidebar.RoomSidebar.FUNC_ACTION;\n \n+import org.apache.openmeetings.db.entity.basic.Client;\n import org.apache.openmeetings.db.entity.room.Room.Right;\n import org.apache.openmeetings.web.room.RoomPanel.Action;\n \n@@ -43,7 +44,8 @@ protected boolean isClickable() {\n \n \t@Override\n \tprotected String getScript() {\n-\t\treturn String.format(\"%s('%s', '%s');\", FUNC_ACTION, Action.kick.name(), getClient().getUid());\n+\t\tClient c = getClient();\n+\t\treturn c == null ? \"\" : String.format(\"%s('%s', '%s');\", FUNC_ACTION, Action.kick.name(), c.getUid());\n \t}\n \n \t@Override", "filename": "openmeetings-web/src/main/java/org/apache/openmeetings/web/room/sidebar/icon/KickIcon.java"}, {"additions": 1, "raw_url": "https://github.com/apache/openmeetings/raw/5aa47cbd28c0a5bf03bc0b209c45bdc50f3b125a/openmeetings-web/src/main/java/org/apache/openmeetings/web/room/sidebar/icon/RefreshIcon.java", "blob_url": "https://github.com/apache/openmeetings/blob/5aa47cbd28c0a5bf03bc0b209c45bdc50f3b125a/openmeetings-web/src/main/java/org/apache/openmeetings/web/room/sidebar/icon/RefreshIcon.java", "sha": "66de9014ac05817b7fa8d078fbd74a916a424a00", "changes": 2, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/openmeetings/contents/openmeetings-web/src/main/java/org/apache/openmeetings/web/room/sidebar/icon/RefreshIcon.java?ref=5aa47cbd28c0a5bf03bc0b209c45bdc50f3b125a", "patch": "@@ -46,7 +46,7 @@ protected String getAlign() {\n \t@Override\n \tprotected boolean isClickable() {\n \t\tfinal Client c = getClient();\n-\t\treturn c.hasActivity(Activity.broadcastA) || c.hasActivity(Activity.broadcastV);\n+\t\treturn c != null && (c.hasActivity(Activity.broadcastA) || c.hasActivity(Activity.broadcastV));\n \t}\n \n \t@Override", "filename": "openmeetings-web/src/main/java/org/apache/openmeetings/web/room/sidebar/icon/RefreshIcon.java"}, {"additions": 3, "raw_url": "https://github.com/apache/openmeetings/raw/5aa47cbd28c0a5bf03bc0b209c45bdc50f3b125a/openmeetings-web/src/main/java/org/apache/openmeetings/web/room/sidebar/icon/UserSpeaksIcon.java", "blob_url": "https://github.com/apache/openmeetings/blob/5aa47cbd28c0a5bf03bc0b209c45bdc50f3b125a/openmeetings-web/src/main/java/org/apache/openmeetings/web/room/sidebar/icon/UserSpeaksIcon.java", "sha": "e186c2a86b884c8e51e96d9c2d8644be4cfadf8c", "changes": 4, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/openmeetings/contents/openmeetings-web/src/main/java/org/apache/openmeetings/web/room/sidebar/icon/UserSpeaksIcon.java?ref=5aa47cbd28c0a5bf03bc0b209c45bdc50f3b125a", "patch": "@@ -18,6 +18,7 @@\n  */\n package org.apache.openmeetings.web.room.sidebar.icon;\n \n+import org.apache.openmeetings.db.entity.basic.Client;\n import org.apache.openmeetings.db.entity.basic.Client.Activity;\n import org.apache.openmeetings.db.entity.room.Room;\n \n@@ -30,7 +31,8 @@ public UserSpeaksIcon(String id, String uid) {\n \t}\n \n \tprivate boolean isActive() {\n-\t\treturn getClient().hasActivity(Activity.broadcastA) && roomHasRight(Room.Right.exclusive);\n+\t\tClient c = getClient();\n+\t\treturn c != null && (c.hasActivity(Activity.broadcastA) && roomHasRight(Room.Right.exclusive));\n \t}\n \n \t@Override", "filename": "openmeetings-web/src/main/java/org/apache/openmeetings/web/room/sidebar/icon/UserSpeaksIcon.java"}, {"additions": 1, "raw_url": "https://github.com/apache/openmeetings/raw/5aa47cbd28c0a5bf03bc0b209c45bdc50f3b125a/openmeetings-web/src/main/java/org/apache/openmeetings/web/room/sidebar/icon/right/ModeratorRightIcon.java", "blob_url": "https://github.com/apache/openmeetings/blob/5aa47cbd28c0a5bf03bc0b209c45bdc50f3b125a/openmeetings-web/src/main/java/org/apache/openmeetings/web/room/sidebar/icon/right/ModeratorRightIcon.java", "sha": "267e74c304afedfe254b3885d90d11c1baa7c40e", "changes": 2, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/openmeetings/contents/openmeetings-web/src/main/java/org/apache/openmeetings/web/room/sidebar/icon/right/ModeratorRightIcon.java?ref=5aa47cbd28c0a5bf03bc0b209c45bdc50f3b125a", "patch": "@@ -31,7 +31,7 @@ public ModeratorRightIcon(String id, String uid) {\n \t@Override\n \tprotected String getTitle() {\n \t\tString title;\n-\t\tif (getClient().hasRight(right)) {\n+\t\tif (hasRight()) {\n \t\t\ttitle = isSelf() ? \"688\" : \"675\";\n \t\t} else {\n \t\t\ttitle = isSelf() ? \"81\" : \"676\";", "filename": "openmeetings-web/src/main/java/org/apache/openmeetings/web/room/sidebar/icon/right/ModeratorRightIcon.java"}, {"additions": 1, "raw_url": "https://github.com/apache/openmeetings/raw/5aa47cbd28c0a5bf03bc0b209c45bdc50f3b125a/openmeetings-web/src/main/java/org/apache/openmeetings/web/room/sidebar/icon/right/PresenterRightIcon.java", "blob_url": "https://github.com/apache/openmeetings/blob/5aa47cbd28c0a5bf03bc0b209c45bdc50f3b125a/openmeetings-web/src/main/java/org/apache/openmeetings/web/room/sidebar/icon/right/PresenterRightIcon.java", "sha": "b4f0392f14b8de95bc73bb8b8d3292b68a0f9769", "changes": 2, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/openmeetings/contents/openmeetings-web/src/main/java/org/apache/openmeetings/web/room/sidebar/icon/right/PresenterRightIcon.java?ref=5aa47cbd28c0a5bf03bc0b209c45bdc50f3b125a", "patch": "@@ -33,7 +33,7 @@ public PresenterRightIcon(String id, String uid) {\n \t@Override\n \tprotected String getTitle() {\n \t\tString title;\n-\t\tif (hasRight(right)) {\n+\t\tif (hasRight()) {\n \t\t\ttitle = isSelf() ? \"right.presenter.allowed.self\" : \"right.presenter.remove\";\n \t\t} else {\n \t\t\ttitle = isSelf() ? \"right.presenter.request.self\" : \"right.presenter.request\";", "filename": "openmeetings-web/src/main/java/org/apache/openmeetings/web/room/sidebar/icon/right/PresenterRightIcon.java"}, {"additions": 2, "raw_url": "https://github.com/apache/openmeetings/raw/5aa47cbd28c0a5bf03bc0b209c45bdc50f3b125a/openmeetings-web/src/main/java/org/apache/openmeetings/web/room/sidebar/icon/right/WhiteboardRightIcon.java", "blob_url": "https://github.com/apache/openmeetings/blob/5aa47cbd28c0a5bf03bc0b209c45bdc50f3b125a/openmeetings-web/src/main/java/org/apache/openmeetings/web/room/sidebar/icon/right/WhiteboardRightIcon.java", "sha": "1a3cdc1221fcf4d5b70dcd11d3eabd2424776201", "changes": 4, "status": "modified", "deletions": 2, "contents_url": "https://api.github.com/repos/apache/openmeetings/contents/openmeetings-web/src/main/java/org/apache/openmeetings/web/room/sidebar/icon/right/WhiteboardRightIcon.java?ref=5aa47cbd28c0a5bf03bc0b209c45bdc50f3b125a", "patch": "@@ -34,7 +34,7 @@ public WhiteboardRightIcon(String id, String uid) {\n \t@Override\n \tprotected String getTitle() {\n \t\tString title;\n-\t\tif (getClient().hasRight(right)) {\n+\t\tif (hasRight()) {\n \t\t\ttitle = isSelf() ? \"689\" : \"612\";\n \t\t} else {\n \t\t\ttitle = isSelf() ? \"686\" : \"694\";\n@@ -45,7 +45,7 @@ protected String getTitle() {\n \t@Override\n \tprotected boolean hasRight() {\n \t\tfinal Client c = getClient();\n-\t\treturn c.hasRight(Right.presenter) || c.hasRight(right);\n+\t\treturn c != null && (c.hasRight(Right.presenter) || c.hasRight(right));\n \t}\n \n \t@Override", "filename": "openmeetings-web/src/main/java/org/apache/openmeetings/web/room/sidebar/icon/right/WhiteboardRightIcon.java"}, {"additions": 0, "raw_url": "https://github.com/apache/openmeetings/raw/5aa47cbd28c0a5bf03bc0b209c45bdc50f3b125a/openmeetings-web/src/main/webapp/css/room.css", "blob_url": "https://github.com/apache/openmeetings/blob/5aa47cbd28c0a5bf03bc0b209c45bdc50f3b125a/openmeetings-web/src/main/webapp/css/room.css", "sha": "d48519379d09be29bd3f5d4fb4daee1d51dc4ddc", "changes": 1, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/openmeetings/contents/openmeetings-web/src/main/webapp/css/room.css?ref=5aa47cbd28c0a5bf03bc0b209c45bdc50f3b125a", "patch": "@@ -106,7 +106,6 @@\n \tpadding: 0;\n }\n .room.sidebar .user.header {\n-\theight: 45px;\n \tpadding-left: 5px;\n }\n .room.sidebar .user.header .ui-icon {", "filename": "openmeetings-web/src/main/webapp/css/room.css"}], "repo": "openmeetings"}, {"commit": "https://github.com/apache/openmeetings/commit/e1190b6ca3e4005c91f6a018674cbfca6e1cba66", "parent": "https://github.com/apache/openmeetings/commit/09340dc0bffd6be2b10261d25aeb2c68164b0e3c", "message": "[OPENMEETINGS-1836] NPE checks are added, visual artifacts are fixed", "bug_id": "openmeetings_6", "file": [{"additions": 10, "raw_url": "https://github.com/apache/openmeetings/raw/e1190b6ca3e4005c91f6a018674cbfca6e1cba66/openmeetings-core/src/main/java/org/apache/openmeetings/core/remote/ScopeApplicationAdapter.java", "blob_url": "https://github.com/apache/openmeetings/blob/e1190b6ca3e4005c91f6a018674cbfca6e1cba66/openmeetings-core/src/main/java/org/apache/openmeetings/core/remote/ScopeApplicationAdapter.java", "sha": "80e1543623bcede642c5c80084aa5316a7e6a27c", "changes": 15, "status": "modified", "deletions": 5, "contents_url": "https://api.github.com/repos/apache/openmeetings/contents/openmeetings-core/src/main/java/org/apache/openmeetings/core/remote/ScopeApplicationAdapter.java?ref=e1190b6ca3e4005c91f6a018674cbfca6e1cba66", "patch": "@@ -938,11 +938,16 @@ public void stopInterviewRecording(org.apache.openmeetings.db.entity.basic.IClie\n \tpublic void micActivity(boolean active) {\n \t\tIConnection current = Red5.getConnectionLocal();\n \t\tStreamClient client = streamClientManager.get(IClientUtil.getId(current.getClient()));\n-\t\tWebSocketHelper.sendRoom(client.getRoomId(), new JSONObject()\n-\t\t\t\t.put(\"type\", \"mic\")\n-\t\t\t\t.put(\"id\", \"activity\")\n-\t\t\t\t.put(\"uid\", clientManager.uidBySid(client.getSid()))\n-\t\t\t\t.put(\"active\", active));\n+\t\tif (client != null && client.getRoomId() != null) {\n+\t\t\tfinal String uid = clientManager.uidBySid(client.getSid());\n+\t\t\tif (uid != null) {\n+\t\t\t\tWebSocketHelper.sendRoom(client.getRoomId(), new JSONObject()\n+\t\t\t\t\t\t.put(\"type\", \"mic\")\n+\t\t\t\t\t\t.put(\"id\", \"activity\")\n+\t\t\t\t\t\t.put(\"uid\", uid)\n+\t\t\t\t\t\t.put(\"active\", active));\n+\t\t\t}\n+\t\t}\n \t}\n \n \t/*", "filename": "openmeetings-core/src/main/java/org/apache/openmeetings/core/remote/ScopeApplicationAdapter.java"}, {"additions": 9, "raw_url": "https://github.com/apache/openmeetings/raw/e1190b6ca3e4005c91f6a018674cbfca6e1cba66/openmeetings-web/src/main/java/org/apache/openmeetings/web/room/sidebar/RoomSidebar.html", "blob_url": "https://github.com/apache/openmeetings/blob/e1190b6ca3e4005c91f6a018674cbfca6e1cba66/openmeetings-web/src/main/java/org/apache/openmeetings/web/room/sidebar/RoomSidebar.html", "sha": "4093440815ff242fb64362f1db198bc8ed29ccda", "changes": 14, "status": "modified", "deletions": 5, "contents_url": "https://api.github.com/repos/apache/openmeetings/contents/openmeetings-web/src/main/java/org/apache/openmeetings/web/room/sidebar/RoomSidebar.html?ref=e1190b6ca3e4005c91f6a018674cbfca6e1cba66", "patch": "@@ -36,15 +36,19 @@\n \t\t</ul>\n \t\t<div id=\"room-sidebar-tab-users\">\n \t\t\t<div wicket:id=\"icons\" class=\"user header\"></div>\n-\t\t\t<div class=\"user list clear\" wicket:id=\"user-list\">\n-\t\t\t\t<div wicket:id=\"user\" class=\"user entry ui-corner-all ui-widget-content\">\n-\t\t\t\t\t<div wicket:id=\"user\"></div>\n+\t\t\t<div class=\"user list clear\">\n+\t\t\t\t<div wicket:id=\"user-list\">\n+\t\t\t\t\t<div wicket:id=\"user\" class=\"user entry ui-corner-all ui-widget-content\">\n+\t\t\t\t\t\t<div wicket:id=\"user\"></div>\n+\t\t\t\t\t</div>\n \t\t\t\t</div>\n \t\t\t</div>\n-\t\t\t<script>Room.setSize();</script>\n+\t\t\t<script type=\"text/javascript\">Room.setSize();</script>\n \t\t</div>\n \t\t<div id=\"room-sidebar-tab-files\" wicket:enclosure=\"tree\">\n-\t\t\t<div class=\"file list\" wicket:id=\"tree\"></div>\n+\t\t\t<div class=\"file list\">\n+\t\t\t\t<div wicket:id=\"tree\"></div>\n+\t\t\t</div>\n \t\t</div>\n \t</div>\n \t<div wicket:id=\"activities\"></div>", "filename": "openmeetings-web/src/main/java/org/apache/openmeetings/web/room/sidebar/RoomSidebar.html"}, {"additions": 4, "raw_url": "https://github.com/apache/openmeetings/raw/e1190b6ca3e4005c91f6a018674cbfca6e1cba66/openmeetings-web/src/main/webapp/css/room.css", "blob_url": "https://github.com/apache/openmeetings/blob/e1190b6ca3e4005c91f6a018674cbfca6e1cba66/openmeetings-web/src/main/webapp/css/room.css", "sha": "510d98126e167b6f7eaaf8b6f81617d3dae3c781", "changes": 4, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/openmeetings/contents/openmeetings-web/src/main/webapp/css/room.css?ref=e1190b6ca3e4005c91f6a018674cbfca6e1cba66", "patch": "@@ -394,6 +394,10 @@\n \tline-height: 30px;\n \twidth: auto;\n \tmax-width: 80px;\n+}\n+.room.sidebar .tab.om-icon.big .label {\n+\tmax-width: 50px;\n+\tdisplay: inline-block;\n \ttext-overflow: ellipsis;\n \toverflow: hidden;\n \twhite-space: nowrap;", "filename": "openmeetings-web/src/main/webapp/css/room.css"}], "repo": "openmeetings"}, {"commit": "https://github.com/apache/openmeetings/commit/47b322278e05f1aaae0048a4a201584e40ee7d05", "parent": "https://github.com/apache/openmeetings/commit/a7a870252cd17f3ce7662cbc235b4e4c26a72b88", "message": "no jira: possible NPE is fixed", "bug_id": "openmeetings_7", "file": [{"additions": 1, "raw_url": "https://github.com/apache/openmeetings/raw/47b322278e05f1aaae0048a4a201584e40ee7d05/openmeetings-db/src/main/java/org/apache/openmeetings/db/dao/basic/ConfigurationDao.java", "blob_url": "https://github.com/apache/openmeetings/blob/47b322278e05f1aaae0048a4a201584e40ee7d05/openmeetings-db/src/main/java/org/apache/openmeetings/db/dao/basic/ConfigurationDao.java", "sha": "fbee826ffa49e98a9811ab45766f1b5f78d7c449", "changes": 6, "status": "modified", "deletions": 5, "contents_url": "https://api.github.com/repos/apache/openmeetings/contents/openmeetings-db/src/main/java/org/apache/openmeetings/db/dao/basic/ConfigurationDao.java?ref=47b322278e05f1aaae0048a4a201584e40ee7d05", "patch": "@@ -220,11 +220,7 @@ public int getInt(String key, int def) {\n \n \tpublic String getString(String key, String def) {\n \t\tConfiguration c = get(key);\n-\n-\t\tif (c != null) {\n-\t\t\treturn c.getValue() == null ? def : c.getValue();\n-\t\t}\n-\t\treturn def;\n+\t\treturn c != null && c.getValue() != null ? c.getValue() : def;\n \t}\n \n \t@Override", "filename": "openmeetings-db/src/main/java/org/apache/openmeetings/db/dao/basic/ConfigurationDao.java"}], "repo": "openmeetings"}, {"commit": "https://github.com/apache/openmeetings/commit/a7a870252cd17f3ce7662cbc235b4e4c26a72b88", "parent": "https://github.com/apache/openmeetings/commit/bd81bd0f46d993cf8040b58efcf384dc948c5300", "message": "no jira: possible NPE is fixed", "bug_id": "openmeetings_8", "file": [{"additions": 1, "raw_url": "https://github.com/apache/openmeetings/raw/a7a870252cd17f3ce7662cbc235b4e4c26a72b88/openmeetings-db/src/main/java/org/apache/openmeetings/db/dao/basic/ConfigurationDao.java", "blob_url": "https://github.com/apache/openmeetings/blob/a7a870252cd17f3ce7662cbc235b4e4c26a72b88/openmeetings-db/src/main/java/org/apache/openmeetings/db/dao/basic/ConfigurationDao.java", "sha": "b42231a78f790c381c866c4a340233b7891f3a3a", "changes": 2, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/openmeetings/contents/openmeetings-db/src/main/java/org/apache/openmeetings/db/dao/basic/ConfigurationDao.java?ref=a7a870252cd17f3ce7662cbc235b4e4c26a72b88", "patch": "@@ -222,7 +222,7 @@ public String getString(String key, String def) {\n \t\tConfiguration c = get(key);\n \n \t\tif (c != null) {\n-\t\t\treturn c.getValue();\n+\t\t\treturn c.getValue() == null ? def : c.getValue();\n \t\t}\n \t\treturn def;\n \t}", "filename": "openmeetings-db/src/main/java/org/apache/openmeetings/db/dao/basic/ConfigurationDao.java"}], "repo": "openmeetings"}, {"commit": "https://github.com/apache/openmeetings/commit/8d54fae1aa33f2ae320da2a9d076d45794c223e1", "parent": "https://github.com/apache/openmeetings/commit/e25958529e16a4080c6315e06160244ba9d26c82", "message": "no jira: couple NPEs are fixed", "bug_id": "openmeetings_9", "file": [{"additions": 1, "raw_url": "https://github.com/apache/openmeetings/raw/8d54fae1aa33f2ae320da2a9d076d45794c223e1/openmeetings-core/src/main/java/org/apache/openmeetings/core/converter/BaseConverter.java", "blob_url": "https://github.com/apache/openmeetings/blob/8d54fae1aa33f2ae320da2a9d076d45794c223e1/openmeetings-core/src/main/java/org/apache/openmeetings/core/converter/BaseConverter.java", "sha": "a8dffe2ae6af663c917d3bb02b9241fff0538f78", "changes": 2, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/openmeetings/contents/openmeetings-core/src/main/java/org/apache/openmeetings/core/converter/BaseConverter.java?ref=8d54fae1aa33f2ae320da2a9d076d45794c223e1", "patch": "@@ -104,7 +104,7 @@ protected File getStreamFolder(Recording recording) {\n \t}\n \n \tprotected long diff(Date from, Date to) {\n-\t\treturn from.getTime() - to.getTime();\n+\t\treturn from == null || to == null ? 0 : from.getTime() - to.getTime();\n \t}\n \n \tprotected double diffSeconds(Date from, Date to) {", "filename": "openmeetings-core/src/main/java/org/apache/openmeetings/core/converter/BaseConverter.java"}, {"additions": 5, "raw_url": "https://github.com/apache/openmeetings/raw/8d54fae1aa33f2ae320da2a9d076d45794c223e1/openmeetings-util/src/main/java/org/apache/openmeetings/util/OmFileHelper.java", "blob_url": "https://github.com/apache/openmeetings/blob/8d54fae1aa33f2ae320da2a9d076d45794c223e1/openmeetings-util/src/main/java/org/apache/openmeetings/util/OmFileHelper.java", "sha": "02bfdb1cf6b025772c52565fd398d4e87b8a0299", "changes": 7, "status": "modified", "deletions": 2, "contents_url": "https://api.github.com/repos/apache/openmeetings/contents/openmeetings-util/src/main/java/org/apache/openmeetings/util/OmFileHelper.java?ref=8d54fae1aa33f2ae320da2a9d076d45794c223e1", "patch": "@@ -137,8 +137,11 @@ public static File getDefaultProfilePicture() {\n \t}\n \n \tpublic static File getUserProfilePicture(Long userId, String uri) {\n-\t\tFile img = new File(getUploadProfilesUserDir(userId), uri == null ? \"\" : uri);\n-\t\tif (!img.exists() || img.isDirectory()) {\n+\t\tFile img = null;\n+\t\tif (userId != null) {\n+\t\t\timg = new File(getUploadProfilesUserDir(userId), uri == null ? \"\" : uri);\n+\t\t}\n+\t\tif (img == null || !img.exists() || img.isDirectory()) {\n \t\t\timg = getDefaultProfilePicture();\n \t\t}\n \t\treturn img;", "filename": "openmeetings-util/src/main/java/org/apache/openmeetings/util/OmFileHelper.java"}, {"additions": 2, "raw_url": "https://github.com/apache/openmeetings/raw/8d54fae1aa33f2ae320da2a9d076d45794c223e1/openmeetings-web/src/main/java/org/apache/openmeetings/web/util/FileItemResourceReference.java", "blob_url": "https://github.com/apache/openmeetings/blob/8d54fae1aa33f2ae320da2a9d076d45794c223e1/openmeetings-web/src/main/java/org/apache/openmeetings/web/util/FileItemResourceReference.java", "sha": "680159d8a50e8f244f68de997100aa5e64a9d9b1", "changes": 2, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/openmeetings/contents/openmeetings-web/src/main/java/org/apache/openmeetings/web/util/FileItemResourceReference.java?ref=8d54fae1aa33f2ae320da2a9d076d45794c223e1", "patch": "@@ -58,6 +58,8 @@ protected ResourceResponse newResourceResponse(Attributes attr) {\n \t\t\t\tr = getFileItem(attr);\n \t\t\t\tif (r != null) {\n \t\t\t\t\tfile = getFile(r, attr);\n+\t\t\t\t}\n+\t\t\t\tif (file != null && file.exists()) {\n \t\t\t\t\tResourceResponse rr = createResourceResponse(attr, file.toPath());\n \t\t\t\t\trr.setFileName(getFileName(r));\n \t\t\t\t\treturn rr;", "filename": "openmeetings-web/src/main/java/org/apache/openmeetings/web/util/FileItemResourceReference.java"}, {"additions": 6, "raw_url": "https://github.com/apache/openmeetings/raw/8d54fae1aa33f2ae320da2a9d076d45794c223e1/openmeetings-web/src/main/java/org/apache/openmeetings/web/util/ProfileImageResourceReference.java", "blob_url": "https://github.com/apache/openmeetings/blob/8d54fae1aa33f2ae320da2a9d076d45794c223e1/openmeetings-web/src/main/java/org/apache/openmeetings/web/util/ProfileImageResourceReference.java", "sha": "a5de7c074789c358600c54d96aaaf7d9d381da67", "changes": 8, "status": "modified", "deletions": 2, "contents_url": "https://api.github.com/repos/apache/openmeetings/contents/openmeetings-web/src/main/java/org/apache/openmeetings/web/util/ProfileImageResourceReference.java?ref=8d54fae1aa33f2ae320da2a9d076d45794c223e1", "patch": "@@ -85,8 +85,12 @@ protected ResourceResponse newResourceResponse(Attributes attributes) {\n \t\t\t\tResourceResponse rr;\n \t\t\t\tif (WebSession.get().isSignedIn()) {\n \t\t\t\t\tPageParameters params = attributes.getParameters();\n-\t\t\t\t\tuserId = params.get(\"id\").toOptionalLong();\n-\t\t\t\t\turi = getBean(UserDao.class).get(userId).getPictureuri();\n+\t\t\t\t\ttry {\n+\t\t\t\t\t\tuserId = params.get(\"id\").toOptionalLong();\n+\t\t\t\t\t\turi = getBean(UserDao.class).get(userId).getPictureuri();\n+\t\t\t\t\t} catch (Exception e) {\n+\t\t\t\t\t\t// no-op, junk filter\n+\t\t\t\t\t}\n \t\t\t\t\trr = super.newResourceResponse(attributes);\n \t\t\t\t\trr.disableCaching();\n \t\t\t\t} else {", "filename": "openmeetings-web/src/main/java/org/apache/openmeetings/web/util/ProfileImageResourceReference.java"}, {"additions": 6, "raw_url": "https://github.com/apache/openmeetings/raw/8d54fae1aa33f2ae320da2a9d076d45794c223e1/openmeetings-web/src/main/java/org/apache/openmeetings/web/util/UserChoiceProvider.java", "blob_url": "https://github.com/apache/openmeetings/blob/8d54fae1aa33f2ae320da2a9d076d45794c223e1/openmeetings-web/src/main/java/org/apache/openmeetings/web/util/UserChoiceProvider.java", "sha": "b5af75505908c80676394750be4e97caa3f92f69", "changes": 10, "status": "modified", "deletions": 4, "contents_url": "https://api.github.com/repos/apache/openmeetings/contents/openmeetings-web/src/main/java/org/apache/openmeetings/web/util/UserChoiceProvider.java?ref=8d54fae1aa33f2ae320da2a9d076d45794c223e1", "patch": "@@ -68,10 +68,12 @@ public static User getUser(String value) {\n \t\t\t} else {\n \t\t\t\temail = value;\n \t\t\t}\n-\t\t\tValidatable<String> valEmail = new Validatable<>(email);\n-\t\t\tRfcCompliantEmailAddressValidator.getInstance().validate(valEmail);\n-\t\t\tif (valEmail.isValid()) {\n-\t\t\t\tu = getBean(UserDao.class).getContact(email, fName, lName, getUserId());\n+\t\t\tif (!Strings.isEmpty(email)) {\n+\t\t\t\tValidatable<String> valEmail = new Validatable<>(email);\n+\t\t\t\tRfcCompliantEmailAddressValidator.getInstance().validate(valEmail);\n+\t\t\t\tif (valEmail.isValid()) {\n+\t\t\t\t\tu = getBean(UserDao.class).getContact(email, fName, lName, getUserId());\n+\t\t\t\t}\n \t\t\t}\n \t\t}\n \t\treturn u;", "filename": "openmeetings-web/src/main/java/org/apache/openmeetings/web/util/UserChoiceProvider.java"}], "repo": "openmeetings"}, {"commit": "https://github.com/apache/openmeetings/commit/18639721e211b6921df3a3f8238b87ba973878ac", "parent": "https://github.com/apache/openmeetings/commit/a415a24a4455e1018503d90f2a39c1dd53ff99c8", "message": "no jira: NPE in captcha is fixed", "bug_id": "openmeetings_10", "file": [{"additions": 6, "raw_url": "https://github.com/apache/openmeetings/raw/18639721e211b6921df3a3f8238b87ba973878ac/openmeetings-web/src/main/java/org/apache/openmeetings/web/common/Captcha.java", "blob_url": "https://github.com/apache/openmeetings/blob/18639721e211b6921df3a3f8238b87ba973878ac/openmeetings-web/src/main/java/org/apache/openmeetings/web/common/Captcha.java", "sha": "19027e7cb3a20cc75231ba2fd55ae4400544ece1", "changes": 8, "status": "modified", "deletions": 2, "contents_url": "https://api.github.com/repos/apache/openmeetings/contents/openmeetings-web/src/main/java/org/apache/openmeetings/web/common/Captcha.java?ref=18639721e211b6921df3a3f8238b87ba973878ac", "patch": "@@ -19,6 +19,7 @@\n package org.apache.openmeetings.web.common;\n \n import org.apache.wicket.ajax.AjaxRequestTarget;\n+import org.apache.wicket.core.request.handler.IPartialPageRequestHandler;\n import org.apache.wicket.extensions.markup.html.captcha.CaptchaImageResource;\n import org.apache.wicket.markup.html.form.RequiredTextField;\n import org.apache.wicket.markup.html.image.Image;\n@@ -67,7 +68,7 @@ public void validate(IValidatable<String> validatable) {\n \t\t\t\t\tvalidatable.error(new ValidationError(getString(\"bad.captcha.text\")));\n \t\t\t\t}\n \t\t\t}\n-\t\t}));\n+\t\t}).setOutputMarkupId(true));\n \t\tadd(new AjaxLink<String>(\"refresh\") {\n \t\t\tprivate static final long serialVersionUID = 1L;\n \n@@ -98,9 +99,12 @@ private static String randomString(int min, int max) {\n \t\treturn new String(b);\n \t}\n \n-\tpublic Image refresh() {\n+\tpublic Image refresh(IPartialPageRequestHandler handler) {\n \t\tcaptchaImageResource.invalidate();\n \t\tcaptchaText.setModelObject(\"\");\n+\t\tif (handler != null) {\n+\t\t\thandler.add(captchaText, captcha);\n+\t\t}\n \t\treturn captcha;\n \t}\n }", "filename": "openmeetings-web/src/main/java/org/apache/openmeetings/web/common/Captcha.java"}, {"additions": 32, "raw_url": "https://github.com/apache/openmeetings/raw/18639721e211b6921df3a3f8238b87ba973878ac/openmeetings-web/src/main/java/org/apache/openmeetings/web/pages/auth/ForgetPasswordDialog.java", "blob_url": "https://github.com/apache/openmeetings/blob/18639721e211b6921df3a3f8238b87ba973878ac/openmeetings-web/src/main/java/org/apache/openmeetings/web/pages/auth/ForgetPasswordDialog.java", "sha": "3e0b29a57652e366b96cdd1dba258fdbd1169f3e", "changes": 54, "status": "modified", "deletions": 22, "contents_url": "https://api.github.com/repos/apache/openmeetings/contents/openmeetings-web/src/main/java/org/apache/openmeetings/web/pages/auth/ForgetPasswordDialog.java?ref=18639721e211b6921df3a3f8238b87ba973878ac", "patch": "@@ -47,9 +47,7 @@\n import org.apache.wicket.markup.html.form.Radio;\n import org.apache.wicket.markup.html.form.RadioGroup;\n import org.apache.wicket.markup.html.form.RequiredTextField;\n-import org.apache.wicket.model.IModel;\n import org.apache.wicket.model.Model;\n-import org.apache.wicket.model.PropertyModel;\n import org.apache.wicket.request.mapper.parameter.PageParameters;\n import org.apache.wicket.validation.IValidatable;\n import org.apache.wicket.validation.IValidator;\n@@ -70,11 +68,12 @@\n \tprivate final DialogButton cancel = new DialogButton(\"cancel\", Application.getString(122));\n \tprivate final KendoFeedbackPanel feedback = new KendoFeedbackPanel(\"feedback\", new Options(\"button\", true));\n \tprivate final IValidator<String> emailValidator = RfcCompliantEmailAddressValidator.getInstance();\n-\tprivate RequiredTextField<String> nameField;\n+\tprivate final RequiredTextField<String> name = new RequiredTextField<>(\"name\", Model.of((String)null));\n+\tprivate final RadioGroup<Type> rg = new RadioGroup<>(\"type\", Model.of(Type.email));\n+\tprivate final Label label = new Label(\"label\", Model.of(Application.getString(315)));\n+\tprivate final Captcha captcha = new Captcha(\"captcha\");\n \tprivate Form<String> form;\n \tprivate SignInDialog s;\n-\tprivate String name;\n-\tprivate Type type = Type.email;\n \tfinal MessageDialog confirmDialog;\n \n \tenum Type {\n@@ -86,16 +85,12 @@ public ForgetPasswordDialog(String id) {\n \t\tsuper(id, Application.getString(312));\n \t\tadd(form = new Form<String>(\"form\") {\n \t\t\tprivate static final long serialVersionUID = 1L;\n-\t\t\tprivate IModel<String> lblModel = Model.of(Application.getString(315));\n-\t\t\tprivate Label label = new Label(\"label\", lblModel);\n \n \t\t\t{\n \t\t\t\tadd(feedback.setOutputMarkupId(true));\n \t\t\t\tadd(label.setOutputMarkupId(true));\n-\t\t\t\tadd(nameField = new RequiredTextField<>(\"name\", new PropertyModel<String>(ForgetPasswordDialog.this, \"name\")));\n-\t\t\t\tnameField.setLabel(Model.of(Application.getString(type == Type.email ? 315 : 316)));\n-\t\t\t\tadd(new Captcha(\"captcha\"));\n-\t\t\t\tRadioGroup<Type> rg = new RadioGroup<>(\"type\", new PropertyModel<Type>(ForgetPasswordDialog.this, \"type\"));\n+\t\t\t\tadd(name.setOutputMarkupId(true));\n+\t\t\t\tadd(captcha);\n \t\t\t\tadd(rg.add(new Radio<>(\"email\", Model.of(Type.email)).setOutputMarkupId(true))\n \t\t\t\t\t\t.add(new Radio<>(\"login\", Model.of(Type.login)).setOutputMarkupId(true))\n \t\t\t\t\t\t.setOutputMarkupId(true));\n@@ -104,9 +99,7 @@ public ForgetPasswordDialog(String id) {\n \n \t\t\t\t\t@Override\n \t\t\t\t\tprotected void onUpdate(AjaxRequestTarget target) {\n-\t\t\t\t\t\tlblModel.setObject(Application.getString(type == Type.email ? 315 : 316));\n-\t\t\t\t\t\tnameField.setLabel(Model.of(Application.getString(type == Type.email ? 315 : 316)));\n-\t\t\t\t\t\ttarget.add(label);\n+\t\t\t\t\t\tupdateLabel(target);\n \t\t\t\t\t}\n \t\t\t\t});\n \t\t\t\tadd(new AjaxButton(\"submit\") { //FAKE button so \"submit-on-enter\" works as expected\n@@ -122,13 +115,15 @@ protected void onError(AjaxRequestTarget target) {\n \t\t\t\t\t\tForgetPasswordDialog.this.onError(target);\n \t\t\t\t\t}\n \t\t\t\t});\n+\t\t\t\tupdateLabel(null);\n \t\t\t}\n \n \t\t\t@Override\n \t\t\tprotected void onValidate() {\n-\t\t\t\tString n = nameField.getConvertedInput();\n+\t\t\t\tString n = name.getConvertedInput();\n \t\t\t\tif (n != null) {\n \t\t\t\t\tIValidatable<String> val = new Validatable<>(n);\n+\t\t\t\t\tType type = rg.getModelObject();\n \t\t\t\t\tif (type == Type.email) {\n \t\t\t\t\t\temailValidator.validate(val);\n \t\t\t\t\t\tif (!val.isValid()) {\n@@ -140,12 +135,6 @@ protected void onValidate() {\n \t\t\t\t\t}\n \t\t\t\t}\n \t\t\t}\n-\n-\t\t\t@Override\n-\t\t\tprotected void onDetach() {\n-\t\t\t\tlblModel.detach();\n-\t\t\t\tsuper.onDetach();\n-\t\t\t}\n \t\t});\n \t\tconfirmDialog = new NonClosableMessageDialog(\"confirmDialog\", Application.getString(312), Application.getString(321)){\n \t\t\tprivate static final long serialVersionUID = 1L;\n@@ -158,6 +147,25 @@ public void onClose(IPartialPageRequestHandler handler, DialogButton button) {\n \t\tadd(confirmDialog);\n \t}\n \n+\tprivate void updateLabel(IPartialPageRequestHandler handler) {\n+\t\tString lbl = Application.getString(rg.getModelObject() == Type.email ? 315 : 316);\n+\t\tname.setLabel(Model.of(lbl));\n+\t\tlabel.setDefaultModelObject(lbl);\n+\t\tif (handler != null) {\n+\t\t\thandler.add(name, label);\n+\t\t}\n+\t}\n+\n+\t@Override\n+\tprotected void onOpen(IPartialPageRequestHandler handler) {\n+\t\tsuper.onOpen(handler);\n+\t\tname.setModelObject(null);\n+\t\trg.setModelObject(Type.email);\n+\t\tcaptcha.refresh(handler);\n+\t\thandler.add(rg);\n+\t\tupdateLabel(handler);\n+\t}\n+\n \t@Override\n \tpublic boolean isDefaultCloseEventEnabled()\t{\n \t\treturn true;\n@@ -198,7 +206,9 @@ protected void onError(AjaxRequestTarget target) {\n \n \t@Override\n \tprotected void onSubmit(AjaxRequestTarget target) {\n-\t\tresetUser(type == Type.email ? name : \"\", type == Type.login ? name : \"\"\n+\t\tString nm = name.getModelObject();\n+\t\tType type = rg.getModelObject();\n+\t\tresetUser(type == Type.email ? nm : \"\", type == Type.login ? nm : \"\"\n \t\t\t, getBean(ConfigurationDao.class).getBaseUrl() + getRequestCycle().urlFor(ResetPage.class, new PageParameters()).toString().substring(2));\n \t}\n ", "filename": "openmeetings-web/src/main/java/org/apache/openmeetings/web/pages/auth/ForgetPasswordDialog.java"}, {"additions": 4, "raw_url": "https://github.com/apache/openmeetings/raw/18639721e211b6921df3a3f8238b87ba973878ac/openmeetings-web/src/main/java/org/apache/openmeetings/web/pages/auth/RegisterDialog.java", "blob_url": "https://github.com/apache/openmeetings/blob/18639721e211b6921df3a3f8238b87ba973878ac/openmeetings-web/src/main/java/org/apache/openmeetings/web/pages/auth/RegisterDialog.java", "sha": "98ed96412a8d4877ddea0e05e92cd63304206de0", "changes": 8, "status": "modified", "deletions": 4, "contents_url": "https://api.github.com/repos/apache/openmeetings/contents/openmeetings-web/src/main/java/org/apache/openmeetings/web/pages/auth/RegisterDialog.java?ref=18639721e211b6921df3a3f8238b87ba973878ac", "patch": "@@ -102,7 +102,7 @@ public void onClose(IPartialPageRequestHandler handler, DialogButton button) {\n \t\t\t}\n \t\t};\n \t\tadd(confirmRegistration);\n-\t\treset();\n+\t\treset(null);\n \t}\n \n \tpublic void setSignInDialog(SignInDialog s) {\n@@ -123,7 +123,7 @@ public int getWidth() {\n \t\treturn Arrays.asList(registerBtn, cancelBtn);\n \t}\n \n-\tpublic void reset() {\n+\tpublic void reset(IPartialPageRequestHandler handler) {\n \t\tfirstName = null;\n \t\tlastName = null;\n \t\tlogin = null;\n@@ -132,7 +132,7 @@ public void reset() {\n \t\temail = null;\n \t\tlang = WebSession.get().getLanguageByBrowserLocale();\n \t\tcountry = WebSession.get().getBrowserLocale().getCountry();\n-\t\tcaptcha.refresh();\n+\t\tcaptcha.refresh(handler);\n \t}\n \n \t@Override\n@@ -149,7 +149,7 @@ protected void onOpen(IPartialPageRequestHandler handler) {\n \t\t\tmessageCode = 1591;\n \t\t}\n \t\tconfirmRegistration.setModelObject(getString(\"\" + messageCode));\n-\t\treset();\n+\t\treset(handler);\n \t\thandler.add(form);\n \t}\n ", "filename": "openmeetings-web/src/main/java/org/apache/openmeetings/web/pages/auth/RegisterDialog.java"}], "repo": "openmeetings"}, {"commit": "https://github.com/apache/openmeetings/commit/cf1a11f0b921528a4e46b4e2ffbd7848cd21a437", "parent": "https://github.com/apache/openmeetings/commit/ef8261c8bb6212baba96ae72b1cf31633a8bda46", "message": "[OPENMEETINGS-1610] couple of NPE are fixed", "bug_id": "openmeetings_11", "file": [{"additions": 4, "raw_url": "https://github.com/apache/openmeetings/raw/cf1a11f0b921528a4e46b4e2ffbd7848cd21a437/openmeetings-service/src/main/java/org/apache/openmeetings/service/quartz/scheduler/CleanupJob.java", "blob_url": "https://github.com/apache/openmeetings/blob/cf1a11f0b921528a4e46b4e2ffbd7848cd21a437/openmeetings-service/src/main/java/org/apache/openmeetings/service/quartz/scheduler/CleanupJob.java", "sha": "400cb83186b2bcef8e23bf22eac7e3e584635846", "changes": 5, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/openmeetings/contents/openmeetings-service/src/main/java/org/apache/openmeetings/service/quartz/scheduler/CleanupJob.java?ref=cf1a11f0b921528a4e46b4e2ffbd7848cd21a437", "patch": "@@ -168,7 +168,10 @@ public void cleanExpiredRecordings() {\n \t\tprocessExpiringRecordings(true, (rec, days) -> {\r\n \t\t\tif (days < 0) {\r\n \t\t\t\tlog.debug(\"cleanExpiredRecordings:: following recording will be deleted {}\", rec);\r\n-\t\t\t\trec.getFile(EXTENSION_MP4).delete();\r\n+\t\t\t\tFile f = rec.getFile(EXTENSION_MP4);\r\n+\t\t\t\tif (f != null && f.exists()) {\r\n+\t\t\t\t\tf.delete();\r\n+\t\t\t\t}\r\n \t\t\t\trecordingDao.delete(rec);\r\n \t\t\t}\r\n \t\t});\r", "filename": "openmeetings-service/src/main/java/org/apache/openmeetings/service/quartz/scheduler/CleanupJob.java"}, {"additions": 1, "raw_url": "https://github.com/apache/openmeetings/raw/cf1a11f0b921528a4e46b4e2ffbd7848cd21a437/openmeetings-web/src/main/java/org/apache/openmeetings/web/user/calendar/AppointmentDialog.java", "blob_url": "https://github.com/apache/openmeetings/blob/cf1a11f0b921528a4e46b4e2ffbd7848cd21a437/openmeetings-web/src/main/java/org/apache/openmeetings/web/user/calendar/AppointmentDialog.java", "sha": "976a2068b8d5f7367ed3328f82ed05fc1def52b9", "changes": 2, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/openmeetings/contents/openmeetings-web/src/main/java/org/apache/openmeetings/web/user/calendar/AppointmentDialog.java?ref=cf1a11f0b921528a4e46b4e2ffbd7848cd21a437", "patch": "@@ -496,7 +496,7 @@ protected void onUpdate(AjaxRequestTarget target) {\n \r\n \t\t@Override\r\n \t\tprotected void onValidate() {\r\n-\t\t\tif (null != end.getConvertedInput() && null != end.getConvertedInput() && end.getConvertedInput().isBefore(start.getConvertedInput())) {\r\n+\t\t\tif (null != start.getConvertedInput() && null != end.getConvertedInput() && end.getConvertedInput().isBefore(start.getConvertedInput())) {\r\n \t\t\t\terror(Application.getString(1592));\r\n \t\t\t}\r\n \t\t}\r", "filename": "openmeetings-web/src/main/java/org/apache/openmeetings/web/user/calendar/AppointmentDialog.java"}], "repo": "openmeetings"}, {"commit": "https://github.com/apache/openmeetings/commit/faff0fe76e2bb9d0ed8f13ca83c6eaa5474a0a8a", "parent": "https://github.com/apache/openmeetings/commit/c7b2f498f7e98949cd4ed123cf7cb0c6683b97d6", "message": "no jira: couple NPEs are fixed", "bug_id": "openmeetings_12", "file": [{"additions": 12, "raw_url": "https://github.com/apache/openmeetings/raw/faff0fe76e2bb9d0ed8f13ca83c6eaa5474a0a8a/openmeetings-core/src/main/java/org/apache/openmeetings/core/remote/RecordingService.java", "blob_url": "https://github.com/apache/openmeetings/blob/faff0fe76e2bb9d0ed8f13ca83c6eaa5474a0a8a/openmeetings-core/src/main/java/org/apache/openmeetings/core/remote/RecordingService.java", "sha": "eae5bc05c209714a5f794443799c99105596be34", "changes": 25, "status": "modified", "deletions": 13, "contents_url": "https://api.github.com/repos/apache/openmeetings/contents/openmeetings-core/src/main/java/org/apache/openmeetings/core/remote/RecordingService.java?ref=faff0fe76e2bb9d0ed8f13ca83c6eaa5474a0a8a", "patch": "@@ -52,6 +52,7 @@\n import org.red5.server.api.service.IPendingServiceCall;\n import org.red5.server.api.service.IPendingServiceCallback;\n import org.red5.server.api.service.IServiceCapableConnection;\n+import org.red5.server.api.stream.IBroadcastStream;\n import org.red5.server.api.stream.IStreamListener;\n import org.red5.server.stream.ClientBroadcastStream;\n import org.slf4j.Logger;\n@@ -250,22 +251,10 @@ private void recordShow(IConnection conn, String broadcastid, String streamName,\n \t */\n \tpublic void stopRecordingShow(IScope scope, String broadcastId, Long metaId) {\n \t\ttry {\n-\t\t\tif (metaId == null) {\n-\t\t\t\t// this should be fixed, can be useful for debugging, after all this is an error\n-\t\t\t\t// but we don't want the application to completely stop the process\n-\t\t\t\tlog.error(\"recordingMetaDataId is null\");\n-\t\t\t}\n-\n \t\t\tlog.debug(\"** stopRecordingShow: \" + scope);\n \t\t\tlog.debug(\"### Stop recording show for broadcastId: \" + broadcastId + \" || \" + scope.getContextPath());\n \n-\t\t\tObject streamToClose = scopeApplicationAdapter.getBroadcastStream(scope, broadcastId);\n-\n-\t\t\tStreamListener listenerAdapter = streamListeners.get(metaId);\n-\n-\t\t\tlog.debug(\"Stream Closing :: \" + metaId);\n-\n-\t\t\tClientBroadcastStream stream = (ClientBroadcastStream) streamToClose;\n+\t\t\tIBroadcastStream stream = scopeApplicationAdapter.getBroadcastStream(scope, broadcastId);\n \n \t\t\t// the stream can be null if the user just closes the browser\n \t\t\t// without canceling the recording before leaving\n@@ -278,6 +267,16 @@ public void stopRecordingShow(IScope scope, String broadcastId, Long metaId) {\n \t\t\t\t}\n \t\t\t}\n \n+\t\t\tif (metaId == null) {\n+\t\t\t\t// this should be fixed, can be useful for debugging, after all this is an error\n+\t\t\t\t// but we don't want the application to completely stop the process\n+\t\t\t\tlog.error(\"recordingMetaDataId is null\");\n+\t\t\t\treturn;\n+\t\t\t}\n+\n+\t\t\tStreamListener listenerAdapter = streamListeners.get(metaId);\n+\t\t\tlog.debug(\"Stream Closing :: \" + metaId);\n+\n \t\t\tRecordingMetaData metaData = metaDataDao.get(metaId);\n \t\t\tBaseConverter.printMetaInfo(metaData, \"Stopping the stream\");\n \t\t\t// Manually call finish on the stream so that there is no endless loop waiting in the RecordingConverter waiting for the stream to finish", "filename": "openmeetings-core/src/main/java/org/apache/openmeetings/core/remote/RecordingService.java"}, {"additions": 1, "raw_url": "https://github.com/apache/openmeetings/raw/faff0fe76e2bb9d0ed8f13ca83c6eaa5474a0a8a/openmeetings-db/src/main/java/org/apache/openmeetings/db/entity/basic/Configuration.java", "blob_url": "https://github.com/apache/openmeetings/blob/faff0fe76e2bb9d0ed8f13ca83c6eaa5474a0a8a/openmeetings-db/src/main/java/org/apache/openmeetings/db/entity/basic/Configuration.java", "sha": "5319d0470b411f23a745383efa1e1467a6571ffd", "changes": 2, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/openmeetings/contents/openmeetings-db/src/main/java/org/apache/openmeetings/db/entity/basic/Configuration.java?ref=faff0fe76e2bb9d0ed8f13ca83c6eaa5474a0a8a", "patch": "@@ -41,7 +41,7 @@\n \n @Entity\n @NamedQueries({\n-\t\t@NamedQuery(name = \"forceGetConfigurationByKey\", query = \"SELECT c FROM Configuration c \" \n+\t\t@NamedQuery(name = \"forceGetConfigurationByKey\", query = \"SELECT c FROM Configuration c \"\n \t\t\t\t+ \"WHERE c.key LIKE :key\"),\n \t\t@NamedQuery(name = \"getConfigurationsByKeys\", query = \"SELECT c FROM Configuration c \"\n \t\t\t\t+ \"WHERE c.key IN :keys and c.deleted = false\"),", "filename": "openmeetings-db/src/main/java/org/apache/openmeetings/db/entity/basic/Configuration.java"}], "repo": "openmeetings"}, {"commit": "https://github.com/apache/openmeetings/commit/3eb0fec6aaf87be7f1c4f8264413f8b486f82cc6", "parent": "https://github.com/apache/openmeetings/commit/0a410f36e85e1bdbb22ee07050bf35029c20b84f", "message": "[OPENMEETINGS-1595] couple NPEs are fixed", "bug_id": "openmeetings_13", "file": [{"additions": 6, "raw_url": "https://github.com/apache/openmeetings/raw/3eb0fec6aaf87be7f1c4f8264413f8b486f82cc6/openmeetings-db/src/main/java/org/apache/openmeetings/db/dao/record/RecordingMetaDataDao.java", "blob_url": "https://github.com/apache/openmeetings/blob/3eb0fec6aaf87be7f1c4f8264413f8b486f82cc6/openmeetings-db/src/main/java/org/apache/openmeetings/db/dao/record/RecordingMetaDataDao.java", "sha": "d7188eeea5d2ebb820b782d73bd0e19860121fb9", "changes": 13, "status": "modified", "deletions": 7, "contents_url": "https://api.github.com/repos/apache/openmeetings/contents/openmeetings-db/src/main/java/org/apache/openmeetings/db/dao/record/RecordingMetaDataDao.java?ref=3eb0fec6aaf87be7f1c4f8264413f8b486f82cc6", "patch": "@@ -131,13 +131,12 @@ public Long updateEndDate(Long metaId, Date recordEnd) {\n \t\ttry {\n \t\t\tRecordingMetaData meta = get(metaId);\n \n-\t\t\tmeta.setRecordEnd(recordEnd);\n-\t\t\t\n-\t\t\tlog.debug(\"updateEndDate :: Start Date :\" + meta.getRecordStart());\n-\t\t\tlog.debug(\"updateEndDate :: End Date :\" + meta.getRecordEnd());\n-\t\t\t\n-\t\t\tupdate(meta);\n-\t\t\t\n+\t\t\tif (meta != null) {\n+\t\t\t\tmeta.setRecordEnd(recordEnd);\n+\t\t\t\tlog.debug(\"updateEndDate :: Start Date :\" + meta.getRecordStart());\n+\t\t\t\tlog.debug(\"updateEndDate :: End Date :\" + meta.getRecordEnd());\n+\t\t\t\tupdate(meta);\n+\t\t\t}\n \t\t\treturn metaId;\n \t\t} catch (Exception ex2) {\n \t\t\tlog.error(\"[updateEndDate]: \", ex2);", "filename": "openmeetings-db/src/main/java/org/apache/openmeetings/db/dao/record/RecordingMetaDataDao.java"}, {"additions": 5, "raw_url": "https://github.com/apache/openmeetings/raw/3eb0fec6aaf87be7f1c4f8264413f8b486f82cc6/openmeetings-web/src/main/java/org/apache/openmeetings/web/common/MainPanel.java", "blob_url": "https://github.com/apache/openmeetings/blob/3eb0fec6aaf87be7f1c4f8264413f8b486f82cc6/openmeetings-web/src/main/java/org/apache/openmeetings/web/common/MainPanel.java", "sha": "3055c86be22609579d110383df36316927ea1ce8", "changes": 8, "status": "modified", "deletions": 3, "contents_url": "https://api.github.com/repos/apache/openmeetings/contents/openmeetings-web/src/main/java/org/apache/openmeetings/web/common/MainPanel.java?ref=3eb0fec6aaf87be7f1c4f8264413f8b486f82cc6", "patch": "@@ -261,9 +261,11 @@ protected void onError(WebSocketRequestHandler handler, ErrorMessage msg) {\n \n \t\t\tprivate void closeHandler(AbstractClientMessage msg) {\n \t\t\t\t//no chance to stop pingTimer here :(\n-\t\t\t\tlog.debug(\"WebSocketBehavior::closeHandler [uid: {}, session: {}, key: {}]\", client.getUid(), msg.getSessionId(), msg.getKey());\n-\t\t\t\texit(client);\n-\t\t\t\tclient = null;\n+\t\t\t\tif (client != null) {\n+\t\t\t\t\tlog.debug(\"WebSocketBehavior::closeHandler [uid: {}, session: {}, key: {}]\", client.getUid(), msg.getSessionId(), msg.getKey());\n+\t\t\t\t\texit(client);\n+\t\t\t\t\tclient = null;\n+\t\t\t\t}\n \t\t\t}\n \t\t});\n \t\tadd(new OmAjaxClientInfoBehavior());", "filename": "openmeetings-web/src/main/java/org/apache/openmeetings/web/common/MainPanel.java"}], "repo": "openmeetings"}, {"commit": "https://github.com/apache/openmeetings/commit/35e7f1781640a365f2fd210c515b774eb319e1d6", "parent": "https://github.com/apache/openmeetings/commit/014c313882fdfd445e2cd4e3a140edd9fbdaa3e1", "message": "[OPENMEETINGS-1546] NPE in websockets is fixed", "bug_id": "openmeetings_14", "file": [{"additions": 5, "raw_url": "https://github.com/apache/openmeetings/raw/35e7f1781640a365f2fd210c515b774eb319e1d6/openmeetings-server/src/main/assembly/components/all.xml", "blob_url": "https://github.com/apache/openmeetings/blob/35e7f1781640a365f2fd210c515b774eb319e1d6/openmeetings-server/src/main/assembly/components/all.xml", "sha": "02b966ef0bd36644fb74ba3b7009579d9ad14fbe", "changes": 5, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/openmeetings/contents/openmeetings-server/src/main/assembly/components/all.xml?ref=35e7f1781640a365f2fd210c515b774eb319e1d6", "patch": "@@ -33,6 +33,7 @@\n \t\t\t\t<exclude>webapps/root/index.html</exclude>\n \t\t\t\t<exclude>lib/commons-io*.jar</exclude>\n \t\t\t\t<exclude>*.sh</exclude>\n+\t\t\t\t<exclude>conf/jee-container.xml</exclude>\n \t\t\t</excludes>\n \t\t</fileSet>\n \t\t<fileSet>\n@@ -52,6 +53,10 @@\n \t\t\t<directory>src/main/assembly/root</directory>\n \t\t\t<outputDirectory>${root.webapp}</outputDirectory>\n \t\t</fileSet>\n+\t\t<fileSet>\n+\t\t\t<directory>src/main/assembly/conf</directory>\n+\t\t\t<outputDirectory>conf</outputDirectory>\n+\t\t</fileSet>\n \t\t<fileSet>\n \t\t\t<directory>${project.parent.basedir}/openmeetings-screenshare/target/jnlp</directory>\n \t\t\t<outputDirectory>${om.webapp}/screenshare</outputDirectory>", "filename": "openmeetings-server/src/main/assembly/components/all.xml"}, {"additions": 122, "raw_url": "https://github.com/apache/openmeetings/raw/35e7f1781640a365f2fd210c515b774eb319e1d6/openmeetings-server/src/main/assembly/conf/jee-container.xml", "blob_url": "https://github.com/apache/openmeetings/blob/35e7f1781640a365f2fd210c515b774eb319e1d6/openmeetings-server/src/main/assembly/conf/jee-container.xml", "sha": "503bd5f77997e7bff8ac8b8a240565911ec33074", "changes": 122, "status": "added", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/openmeetings/contents/openmeetings-server/src/main/assembly/conf/jee-container.xml?ref=35e7f1781640a365f2fd210c515b774eb319e1d6", "patch": "@@ -0,0 +1,122 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<!--\n+   Licensed to the Apache Software Foundation (ASF) under one or more\n+   contributor license agreements.  See the NOTICE file distributed with\n+   this work for additional information regarding copyright ownership.\n+   The ASF licenses this file to You under the Apache License, Version 2.0\n+   (the \"License\"); you may not use this file except in compliance with\n+   the License.  You may obtain a copy of the License at\n+\n+\t\thttp://www.apache.org/licenses/LICENSE-2.0\n+\n+   Unless required by applicable law or agreed to in writing, software\n+   distributed under the License is distributed on an \"AS IS\" BASIS,\n+   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+   See the License for the specific language governing permissions and\n+   limitations under the License.\n+-->\n+<beans xmlns=\"http://www.springframework.org/schema/beans\"\n+\t\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+\t\txmlns:lang=\"http://www.springframework.org/schema/lang\"\n+\t\txsi:schemaLocation=\"\n+\t\t\t\thttp://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd\n+\t\t\t\thttp://www.springframework.org/schema/lang http://www.springframework.org/schema/lang/spring-lang.xsd\n+\t\t\">\n+\t<!-- War deployer -->\n+\t<bean id=\"warDeployer\" class=\"org.red5.server.tomcat.WarDeployer\">\n+\t\t<property name=\"checkInterval\" value=\"${war.deploy.server.check.interval}\"/>\n+\t\t<property name=\"webappFolder\" value=\"${red5.root}/webapps\"/>\n+\t\t<!-- Expand war files prior to startup of the remaining services -->\n+\t\t<property name=\"expandWars\" value=\"true\" />\n+\t</bean>\n+\t<!--\n+\tThe tomcat connectors may be blocking or non-blocking. Select between either option via the protocol property.\n+\t\tBlocking I/O:\n+\t\t\t<property name=\"protocol\" value=\"org.apache.coyote.http11.Http11Protocol\" />\n+\t\tNon-blocking I/O:\n+\t\t\t<property name=\"protocol\" value=\"org.apache.coyote.http11.Http11NioProtocol\" />  \n+\t -->\n+\t<!-- Tomcat without SSL enabled -->\n+\t<bean id=\"tomcat.server\" class=\"org.red5.server.tomcat.TomcatLoader\" depends-on=\"context.loader,warDeployer\" lazy-init=\"true\">\n+\t\t<property name=\"webappFolder\" value=\"${red5.root}/webapps\" />\n+\t\t<property name=\"connectors\">\n+\t\t\t<list>\n+\t\t\t\t<bean name=\"httpConnector\" class=\"org.red5.server.tomcat.TomcatConnector\">\n+\t\t\t\t\t<property name=\"protocol\" value=\"org.apache.coyote.http11.Http11NioProtocol\" />\n+\t\t\t\t\t<property name=\"address\" value=\"${http.host}:${http.port}\" />\n+\t\t\t\t\t<property name=\"redirectPort\" value=\"${https.port}\" />\n+\t\t\t\t\t<property name=\"connectionProperties\">\n+\t\t\t\t\t\t<map>\n+\t\t\t\t\t\t\t<entry key=\"maxKeepAliveRequests\" value=\"${http.max_keep_alive_requests}\"/>\n+\t\t\t\t\t\t\t<entry key=\"keepAliveTimout\" value=\"-1\"/>\n+\t\t\t\t\t\t</map>\n+\t\t\t\t\t</property>\n+\t\t\t\t</bean>\n+\t\t\t</list>\n+\t\t</property>\n+\t\t<property name=\"baseHost\">\n+\t\t\t<bean class=\"org.apache.catalina.core.StandardHost\">\n+\t\t\t\t<property name=\"name\" value=\"${http.host}\" />\n+\t\t\t</bean>\n+\t\t</property>\n+\t\t<property name=\"valves\">\n+\t\t\t<list>\n+\t\t\t\t<bean id=\"valve.access\" class=\"org.apache.catalina.valves.AccessLogValve\">\n+\t\t\t\t\t<property name=\"directory\" value=\"log\" />\n+\t\t\t\t\t<property name=\"prefix\" value=\"${http.host}_access.\" />\n+\t\t\t\t\t<property name=\"suffix\" value=\".log\" />\n+\t\t\t\t\t<property name=\"pattern\" value=\"common\" />\n+\t\t\t\t\t<property name=\"rotatable\" value=\"true\" />\n+\t\t\t\t</bean>\n+\t\t\t</list>\n+\t\t</property>\n+\t</bean>\n+\n+\t<!-- Tomcat with SSL enabled -->\n+<!--\n+\t<bean id=\"tomcat.server\" class=\"org.red5.server.tomcat.TomcatLoader\" depends-on=\"context.loader\" lazy-init=\"true\">\n+\t\t<property name=\"webappFolder\" value=\"${red5.root}/webapps\" />\n+\t\t<property name=\"connectors\">\n+\t\t\t<list>\n+\t\t\t\t<bean name=\"httpConnector\" class=\"org.red5.server.tomcat.TomcatConnector\">\n+\t\t\t\t\t<property name=\"protocol\" value=\"org.apache.coyote.http11.Http11NioProtocol\" />\n+\t\t\t\t\t<property name=\"address\" value=\"${http.host}:${http.port}\" />\n+\t\t\t\t\t<property name=\"redirectPort\" value=\"${https.port}\" />\n+\t\t\t\t</bean>\n+\t\t\t\t<bean name=\"httpsConnector\" class=\"org.red5.server.tomcat.TomcatConnector\">\n+\t\t\t\t\t<property name=\"secure\" value=\"true\" />\n+\t\t\t\t\t<property name=\"protocol\" value=\"org.apache.coyote.http11.Http11NioProtocol\" />\n+\t\t\t\t\t<property name=\"address\" value=\"${http.host}:${https.port}\" />\n+\t\t\t\t\t<property name=\"redirectPort\" value=\"${http.port}\" />\n+\t\t\t\t\t<property name=\"connectionProperties\">\n+\t\t\t\t\t\t<map>\n+\t\t\t\t\t\t\t<entry key=\"port\" value=\"${https.port}\" />\n+\t\t\t\t\t\t\t<entry key=\"redirectPort\" value=\"${http.port}\" />\n+\t\t\t\t\t\t\t<entry key=\"SSLEnabled\" value=\"true\" />\n+\t\t\t\t\t\t\t<entry key=\"sslProtocol\" value=\"TLS\" />\n+\t\t\t\t\t\t\t<entry key=\"keystoreFile\" value=\"${rtmps.keystorefile}\" />\n+\t\t\t\t\t\t\t<entry key=\"keystorePass\" value=\"${rtmps.keystorepass}\" />\n+\t\t\t\t\t\t\t<entry key=\"keystoreType\" value=\"JKS\" />\n+\t\t\t\t\t\t\t<entry key=\"truststoreFile\" value=\"${rtmps.truststorefile}\" />\n+\t\t\t\t\t\t\t<entry key=\"truststorePass\" value=\"${rtmps.truststorepass}\" />\n+\t\t\t\t\t\t\t<entry key=\"clientAuth\" value=\"false\" />\n+\t\t\t\t\t\t\t<entry key=\"allowUnsafeLegacyRenegotiation\" value=\"true\" />\t\t\t\t\t\t\t \n+\t\t\t\t\t\t\t<entry key=\"maxKeepAliveRequests\" value=\"${http.max_keep_alive_requests}\"/>\n+\t\t\t\t\t\t\t<entry key=\"keepAliveTimout\" value=\"-1\"/>\n+\t\t\t\t\t\t\t<entry key=\"useExecutor\" value=\"true\"/>\n+\t\t\t\t\t\t\t<entry key=\"maxThreads\" value=\"${http.max_threads}\"/>\n+\t\t\t\t\t\t\t<entry key=\"acceptorThreadCount\" value=\"${http.acceptor_thread_count}\"/>\n+\t\t\t\t\t\t\t<entry key=\"processorCache\" value=\"${http.processor_cache}\"/>\n+\t\t\t\t\t\t</map>\n+\t\t\t\t\t</property>\n+\t\t\t\t</bean>\n+\t\t\t</list>\n+\t\t</property>\n+\t\t<property name=\"baseHost\">\n+\t\t\t<bean class=\"org.apache.catalina.core.StandardHost\">\n+\t\t\t\t<property name=\"name\" value=\"${http.host}\" />\n+\t\t\t</bean>\n+\t\t</property>\n+\t</bean>\n+-->\n+</beans>", "filename": "openmeetings-server/src/main/assembly/conf/jee-container.xml"}, {"additions": 3, "raw_url": "https://github.com/apache/openmeetings/raw/35e7f1781640a365f2fd210c515b774eb319e1d6/openmeetings-web/src/main/java/org/apache/openmeetings/web/app/WebSession.java", "blob_url": "https://github.com/apache/openmeetings/blob/35e7f1781640a365f2fd210c515b774eb319e1d6/openmeetings-web/src/main/java/org/apache/openmeetings/web/app/WebSession.java", "sha": "8a97272fb1201c8fd2b2e56d90b4d8f7e195cfc5", "changes": 6, "status": "modified", "deletions": 3, "contents_url": "https://api.github.com/repos/apache/openmeetings/contents/openmeetings-web/src/main/java/org/apache/openmeetings/web/app/WebSession.java?ref=35e7f1781640a365f2fd210c515b774eb319e1d6", "patch": "@@ -180,7 +180,7 @@ public void checkHashes(StringValue secure, StringValue invitation) {\n \t\t\t\tif (!isSignedIn() || soap == null || !soap.getHash().equals(secure.toString())) {\n \t\t\t\t\t// otherwise already logged-in with the same hash\n \t\t\t\t\tif (isSignedIn()) {\n-\t\t\t\t\t\tinvalidate();\n+\t\t\t\t\t\tinvalidateNow();\n \t\t\t\t\t}\n \t\t\t\t\tsignIn(secure.toString(), true);\n \t\t\t\t}\n@@ -189,7 +189,7 @@ public void checkHashes(StringValue secure, StringValue invitation) {\n \t\t\t\tif (!isSignedIn() || i == null || !i.getHash().equals(invitation.toString())) {\n \t\t\t\t\t// otherwise already logged-in with the same hash\n \t\t\t\t\tif (isSignedIn()) {\n-\t\t\t\t\t\tinvalidate();\n+\t\t\t\t\t\tinvalidateNow();\n \t\t\t\t\t}\n \t\t\t\t\ti = getBean(InvitationDao.class).getByHash(invitation.toString(), false, true);\n \t\t\t\t\tif (i != null && i.isAllowEntry()) {\n@@ -603,7 +603,7 @@ private static void checkIsInvalid() {\n \t\t\tsetKickedByAdmin(true);\n \t\t\tremoveInvalidSession(get().getId());\n \t\t\torg.apache.wicket.Session session = get();\n-\t\t\tsession.invalidate();\n+\t\t\tsession.invalidateNow();\n \t\t\tApplication.get().restartResponseAtSignInPage();\n \t\t}\n \t}", "filename": "openmeetings-web/src/main/java/org/apache/openmeetings/web/app/WebSession.java"}, {"additions": 4, "raw_url": "https://github.com/apache/openmeetings/raw/35e7f1781640a365f2fd210c515b774eb319e1d6/openmeetings-web/src/main/java/org/apache/openmeetings/web/common/MainPanel.java", "blob_url": "https://github.com/apache/openmeetings/blob/35e7f1781640a365f2fd210c515b774eb319e1d6/openmeetings-web/src/main/java/org/apache/openmeetings/web/common/MainPanel.java", "sha": "a23cc51485707bed3bcdc194f17a3407b9464427", "changes": 6, "status": "modified", "deletions": 2, "contents_url": "https://api.github.com/repos/apache/openmeetings/contents/openmeetings-web/src/main/java/org/apache/openmeetings/web/common/MainPanel.java?ref=35e7f1781640a365f2fd210c515b774eb319e1d6", "patch": "@@ -145,6 +145,7 @@ public MainPanel(String id) {\n \tpublic MainPanel(String id, BasePanel _panel) {\n \t\tsuper(id);\n \t\tthis.panel = _panel;\n+\t\tsetOutputMarkupId(true);\n \t\tadd(topControls.setOutputMarkupPlaceholderTag(true).setMarkupId(\"topControls\"));\n \t\tmenu = new MenuPanel(\"menu\", getMainMenu());\n \t\tcontents = new WebMarkupContainer(\"contents\");\n@@ -200,7 +201,7 @@ public void onClose(IPartialPageRequestHandler handler, DialogButton button) {\n \t\t\tprotected void respond(AjaxRequestTarget target) {\n \t\t\t\tuserInfo.open(target, getParam(getComponent(), PARAM_USER_ID).toLong());\n \t\t\t}\n-\t\t\t\n+\n \t\t\t@Override\n \t\t\tpublic void renderHead(Component component, IHeaderResponse response) {\n \t\t\t\tsuper.renderHead(component, response);\n@@ -235,7 +236,7 @@ public void renderHead(Component component, IHeaderResponse response) {\n \t\t\t\tresponse.render(new PriorityHeaderItem(getNamedFunction(\"privateMessage\", this, explicit(PARAM_USER_ID))));\n \t\t\t}\n \t\t});\n-\t\tadd(pingTimer, new WebSocketBehavior() {\n+\t\tadd(new WebSocketBehavior() {\n \t\t\tprivate static final long serialVersionUID = 1L;\n \n \t\t\t@Override\n@@ -251,6 +252,7 @@ protected void onMessage(WebSocketRequestHandler handler, TextMessage msg) {\n \t\t\t\tif (\"socketConnected\".equals(msg.getText())) {\n \t\t\t\t\tif (panel != null) {\n \t\t\t\t\t\tupdateContents(panel, handler);\n+\t\t\t\t\t\thandler.add(MainPanel.this.add(pingTimer));\n \t\t\t\t\t}\n \t\t\t\t}\n \t\t\t}", "filename": "openmeetings-web/src/main/java/org/apache/openmeetings/web/common/MainPanel.java"}], "repo": "openmeetings"}, {"commit": "https://github.com/apache/openmeetings/commit/b075156565dc5e9c4f71ef49b95b3f4a0912b836", "parent": "https://github.com/apache/openmeetings/commit/d99b5f43337acc3dc29435cab96280764f07a242", "message": "[OPENMEETINGS-1502] NPE while ldap user check should be fixed", "bug_id": "openmeetings_15", "file": [{"additions": 1, "raw_url": "https://github.com/apache/openmeetings/raw/b075156565dc5e9c4f71ef49b95b3f4a0912b836/openmeetings-db/src/main/java/org/apache/openmeetings/db/dao/user/UserDao.java", "blob_url": "https://github.com/apache/openmeetings/blob/b075156565dc5e9c4f71ef49b95b3f4a0912b836/openmeetings-db/src/main/java/org/apache/openmeetings/db/dao/user/UserDao.java", "sha": "193f5d1c696ec4d78641c44fe640a1bec25116f8", "changes": 1, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/openmeetings/contents/openmeetings-db/src/main/java/org/apache/openmeetings/db/dao/user/UserDao.java?ref=b075156565dc5e9c4f71ef49b95b3f4a0912b836", "patch": "@@ -375,6 +375,7 @@ public User getByLogin(String login, Type type, Long domainId) {\n \t\t\t\t\t.setParameter(\"type\", type)\n \t\t\t\t\t.setParameter(\"domainId\", domainId == null ? Long.valueOf(0) : domainId)\n \t\t\t\t\t.getSingleResult();\n+\t\t\tu.getGroupUsers().size(); // this will initiate lazy collection\n \t\t} catch (NoResultException ex) {\n \t\t}\n \t\treturn u;", "filename": "openmeetings-db/src/main/java/org/apache/openmeetings/db/dao/user/UserDao.java"}, {"additions": 1, "raw_url": "https://github.com/apache/openmeetings/raw/b075156565dc5e9c4f71ef49b95b3f4a0912b836/openmeetings-db/src/main/java/org/apache/openmeetings/db/entity/user/User.java", "blob_url": "https://github.com/apache/openmeetings/blob/b075156565dc5e9c4f71ef49b95b3f4a0912b836/openmeetings-db/src/main/java/org/apache/openmeetings/db/entity/user/User.java", "sha": "4d09d69034d29ed89601de3d5f9fc3b6ab95c0e1", "changes": 5, "status": "modified", "deletions": 4, "contents_url": "https://api.github.com/repos/apache/openmeetings/contents/openmeetings-db/src/main/java/org/apache/openmeetings/db/entity/user/User.java?ref=b075156565dc5e9c4f71ef49b95b3f4a0912b836", "patch": "@@ -249,7 +249,7 @@ public static Salutation get(int type) {\n \tprivate Address address;\n \n \t@OneToMany(fetch = FetchType.LAZY, cascade = CascadeType.ALL, orphanRemoval = true)\n-\t@JoinColumn(name = \"user_id\", insertable = true, updatable = true)\n+\t@JoinColumn(name = \"user_id\", insertable = true, updatable = true, nullable = false)\n \t@ElementList(name = \"organisations\", required = false)\n \t@ElementDependent\n \tprivate List<GroupUser> groupUsers = new ArrayList<>();\n@@ -481,9 +481,6 @@ public void setLanguageId(long languageId) {\n \t}\n \n \tpublic List<GroupUser> getGroupUsers() {\n-\t\tif (groupUsers == null) {\n-\t\t\tgroupUsers = new ArrayList<>();\n-\t\t}\n \t\treturn groupUsers;\n \t}\n ", "filename": "openmeetings-db/src/main/java/org/apache/openmeetings/db/entity/user/User.java"}, {"additions": 7, "raw_url": "https://github.com/apache/openmeetings/raw/b075156565dc5e9c4f71ef49b95b3f4a0912b836/openmeetings-web/src/main/webapp/WEB-INF/classes/META-INF/derby_persistence.xml", "blob_url": "https://github.com/apache/openmeetings/blob/b075156565dc5e9c4f71ef49b95b3f4a0912b836/openmeetings-web/src/main/webapp/WEB-INF/classes/META-INF/derby_persistence.xml", "sha": "1d2b86bdb8c373781c74fecefdf9077384674227", "changes": 14, "status": "modified", "deletions": 7, "contents_url": "https://api.github.com/repos/apache/openmeetings/contents/openmeetings-web/src/main/webapp/WEB-INF/classes/META-INF/derby_persistence.xml?ref=b075156565dc5e9c4f71ef49b95b3f4a0912b836", "patch": "@@ -69,13 +69,13 @@\n \t\t\t<property name=\"openjpa.ConnectionDriverName\" value=\"org.apache.commons.dbcp2.BasicDataSource\" />\n \t\t\t<property name=\"openjpa.ConnectionProperties\"\n \t\t\t\tvalue=\"DriverClassName=org.apache.derby.jdbc.EmbeddedDriver,\n-                                  Url=jdbc:derby:openmeetings;create=true, \n-                                  create=true,\n-                                  MaxActive=100, \n-                                  MaxWait=10000, \n-                                  TestOnBorrow=true, \n-                                  Username=user, \n-                                  Password=secret\" />\n+\t\t\t\t\t\tUrl=jdbc:derby:openmeetings;create=true,\n+\t\t\t\t\t\tcreate=true,\n+\t\t\t\t\t\tMaxActive=100,\n+\t\t\t\t\t\tMaxWait=10000,\n+\t\t\t\t\t\tTestOnBorrow=true,\n+\t\t\t\t\t\tUsername=user,\n+\t\t\t\t\t\tPassword=secret\" />\n \t\t\t<property name=\"openjpa.jdbc.SynchronizeMappings\" value=\"buildSchema\" />\n \t\t\t<property name=\"openjpa.Log\" value=\"DefaultLevel=WARN, Tool=INFO\" />\n \t\t\t<property name=\"openjpa.DataCache\" value=\"true\" />", "filename": "openmeetings-web/src/main/webapp/WEB-INF/classes/META-INF/derby_persistence.xml"}, {"additions": 30, "raw_url": "https://github.com/apache/openmeetings/raw/b075156565dc5e9c4f71ef49b95b3f4a0912b836/openmeetings-web/src/test/java/org/apache/openmeetings/test/AbstractJUnitDefaults.java", "blob_url": "https://github.com/apache/openmeetings/blob/b075156565dc5e9c4f71ef49b95b3f4a0912b836/openmeetings-web/src/test/java/org/apache/openmeetings/test/AbstractJUnitDefaults.java", "sha": "9984ed4ee4905332d7b79096f8cda49607e72ca3", "changes": 39, "status": "modified", "deletions": 9, "contents_url": "https://api.github.com/repos/apache/openmeetings/contents/openmeetings-web/src/test/java/org/apache/openmeetings/test/AbstractJUnitDefaults.java?ref=b075156565dc5e9c4f71ef49b95b3f4a0912b836", "patch": "@@ -23,12 +23,14 @@\n import static org.junit.Assert.assertNotNull;\n \n import java.util.Date;\n+import java.util.UUID;\n \n import org.apache.openmeetings.db.dao.basic.ConfigurationDao;\n import org.apache.openmeetings.db.dao.calendar.AppointmentDao;\n import org.apache.openmeetings.db.dao.user.UserDao;\n import org.apache.openmeetings.db.entity.calendar.Appointment;\n import org.apache.openmeetings.db.entity.room.Room;\n+import org.apache.openmeetings.db.entity.user.Address;\n import org.apache.openmeetings.db.entity.user.User;\n import org.apache.openmeetings.installation.ImportInitvalues;\n import org.apache.openmeetings.installation.InstallationConfig;\n@@ -138,19 +140,34 @@ public Appointment createAppointment(Date start, Date end) {\n \t\treturn ap;\n \t}\n \n-\tpublic User getUser(int rnd) throws Exception {\n+\tpublic User getUser() throws Exception {\n+\t\treturn getUser(UUID.randomUUID().toString());\n+\t}\n+\n+\tprotected String getRandomPass(String uuid) {\n+\t\treturn \"pass\" + uuid;\n+\t}\n+\n+\tpublic User getUser(String uuid) throws Exception {\n \t\tUser u = new User();\n \t\t// add user\n-\t\tu.setFirstname(\"firstname\" + rnd);\n-\t\tu.setLastname(\"lastname\" + rnd);\n-\t\tu.setLogin(\"login\" + rnd);\n-\t\tu.updatePassword(cfgDao, \"pass\" + rnd);\n+\t\tu.setFirstname(\"firstname\" + uuid);\n+\t\tu.setLastname(\"lastname\" + uuid);\n+\t\tu.setLogin(\"login\" + uuid);\n+\t\tu.setAddress(new Address());\n+\t\tu.getAddress().setEmail(String.format(\"email%s@local\", uuid));\n+\t\tu.setRights(UserDao.getDefaultRights());\n+\t\tu.updatePassword(cfgDao, getRandomPass(uuid));\n \t\tu.setLanguageId(1L);\n \t\treturn u;\n \t}\n \n-\tpublic User createUser(int rnd) throws Exception {\n-\t\tUser u = getUser(rnd);\n+\tpublic User createUser() throws Exception {\n+\t\treturn createUser(UUID.randomUUID().toString());\n+\t}\n+\n+\tpublic User createUser(String uuid) throws Exception {\n+\t\tUser u = getUser(uuid);\n \t\tu = userDao.update(u, null);\n \t\tassertNotNull(\"Can't add user\", u);\n \t\treturn u;\n@@ -166,8 +183,12 @@ private void makeDefaultScheme() throws Exception {\n \t\timportInitvalues.loadAll(cfg, false);\n \t}\n \n-\tpublic User createUserContact(int rnd, Long ownerId) {\n-\t\tUser user = userDao.getContact(\"email\" + rnd, \"firstname\" + rnd, \"lastname\" + rnd, ownerId);\n+\tpublic User createUserContact(Long ownerId) {\n+\t\treturn createUserContact(UUID.randomUUID().toString(), ownerId);\n+\t}\n+\n+\tpublic User createUserContact(String uuid, Long ownerId) {\n+\t\tUser user = userDao.getContact(\"email\" + uuid, \"firstname\" + uuid, \"lastname\" + uuid, ownerId);\n \t\tuser = userDao.update(user, ownerId);\n \t\tassertNotNull(\"Cann't add user\", user);\n \t\treturn user;", "filename": "openmeetings-web/src/test/java/org/apache/openmeetings/test/AbstractJUnitDefaults.java"}, {"additions": 3, "raw_url": "https://github.com/apache/openmeetings/raw/b075156565dc5e9c4f71ef49b95b3f4a0912b836/openmeetings-web/src/test/java/org/apache/openmeetings/test/calendar/TestDatabaseStructureGetAppointmentByRange.java", "blob_url": "https://github.com/apache/openmeetings/blob/b075156565dc5e9c4f71ef49b95b3f4a0912b836/openmeetings-web/src/test/java/org/apache/openmeetings/test/calendar/TestDatabaseStructureGetAppointmentByRange.java", "sha": "c92ce7fec04c3c7f0831ac221f727e65fe584b22", "changes": 8, "status": "modified", "deletions": 5, "contents_url": "https://api.github.com/repos/apache/openmeetings/contents/openmeetings-web/src/test/java/org/apache/openmeetings/test/calendar/TestDatabaseStructureGetAppointmentByRange.java?ref=b075156565dc5e9c4f71ef49b95b3f4a0912b836", "patch": "@@ -23,7 +23,6 @@\n \n import java.util.ArrayList;\n import java.util.Calendar;\n-import java.util.Random;\n \n import org.apache.openmeetings.db.dao.calendar.AppointmentDao;\n import org.apache.openmeetings.db.entity.calendar.Appointment;\n@@ -45,7 +44,6 @@ public void test() {\n \t\tlog.debug(\"Test started\");\n \t\tLong userId = 1L;\n \t\t\n-\t\tRandom rnd = new Random();\n \t\tCalendar now = Calendar.getInstance();\n \t\tCalendar rangeStart = Calendar.getInstance();\n \t\trangeStart.setTime(now.getTime());\n@@ -64,19 +62,19 @@ public void test() {\n \t\ta2.setTitle(\"AppointmentByRange_a2\");\n \t\ta2.setMeetingMembers(new ArrayList<MeetingMember>());\n \t\tMeetingMember mm1 = new MeetingMember();\n-\t\tmm1.setUser(createUserContact(rnd.nextInt(), userId));\n+\t\tmm1.setUser(createUserContact(userId));\n \t\tmm1.setAppointment(a2);\n \t\ta2.getMeetingMembers().add(mm1);\n \t\t\n \t\tAppointment a3 = getAppointment(now.getTime(), a1End.getTime());\n \t\ta3.setTitle(\"AppointmentByRange_a3\");\n \t\ta3.setMeetingMembers(new ArrayList<MeetingMember>());\n \t\tMeetingMember mm2 = new MeetingMember();\n-\t\tmm2.setUser(createUserContact(rnd.nextInt(), userId));\n+\t\tmm2.setUser(createUserContact(userId));\n \t\tmm2.setAppointment(a3);\n \t\ta3.getMeetingMembers().add(mm2);\n \t\tMeetingMember mm3 = new MeetingMember();\n-\t\tmm3.setUser(createUserContact(rnd.nextInt(), userId));\n+\t\tmm3.setUser(createUserContact(userId));\n \t\tmm3.setAppointment(a3);\n \t\ta3.getMeetingMembers().add(mm3);\n \t\t", "filename": "openmeetings-web/src/test/java/org/apache/openmeetings/test/calendar/TestDatabaseStructureGetAppointmentByRange.java"}, {"additions": 12, "raw_url": "https://github.com/apache/openmeetings/raw/b075156565dc5e9c4f71ef49b95b3f4a0912b836/openmeetings-web/src/test/java/org/apache/openmeetings/test/user/TestUserContact.java", "blob_url": "https://github.com/apache/openmeetings/blob/b075156565dc5e9c4f71ef49b95b3f4a0912b836/openmeetings-web/src/test/java/org/apache/openmeetings/test/user/TestUserContact.java", "sha": "14f00a871bea1176e094224844304e62f18815eb", "changes": 25, "status": "modified", "deletions": 13, "contents_url": "https://api.github.com/repos/apache/openmeetings/contents/openmeetings-web/src/test/java/org/apache/openmeetings/test/user/TestUserContact.java?ref=b075156565dc5e9c4f71ef49b95b3f4a0912b836", "patch": "@@ -25,7 +25,7 @@\n import static org.junit.Assert.assertTrue;\r\n \r\n import java.util.List;\r\n-import java.util.Random;\r\n+import java.util.UUID;\r\n \r\n import org.apache.openmeetings.db.dao.user.GroupDao;\r\n import org.apache.openmeetings.db.dao.user.UserDao;\r\n@@ -40,7 +40,6 @@\n \tprivate UserDao userDao;\r\n \t@Autowired\r\n \tprivate GroupDao groupDao;\r\n-\tRandom random = new Random();\r\n \t\r\n \t@Test\r\n \tpublic void testGetUser() throws Exception {\r\n@@ -49,11 +48,11 @@ public void testGetUser() throws Exception {\n \t\r\n \t@Test\r\n \tpublic void createUserWithGroup() throws Exception {\r\n-\t\tint rnd = random.nextInt();\r\n-\t\tUser u = getUser(rnd);\r\n+\t\tString uuid = UUID.randomUUID().toString();\r\n+\t\tUser u = getUser(uuid);\r\n \t\tu.getGroupUsers().add(new GroupUser(groupDao.get(1L), u));\r\n \t\tu = userDao.update(u, null);\r\n-\t\tassertTrue(\"Password should be set as expected\", userDao.verifyPassword(u.getId(), \"pass\" + rnd));\r\n+\t\tassertTrue(\"Password should be set as expected\", userDao.verifyPassword(u.getId(), getRandomPass(uuid)));\r\n \t\t\r\n \t\tUser u1 = userDao.get(u.getId());\r\n \t\tassertNotNull(\"Just created user should not be null\", u1);\r\n@@ -62,10 +61,10 @@ public void createUserWithGroup() throws Exception {\n \t}\r\n \t\r\n \t@Test\r\n-\tpublic void createUser() throws Exception {\r\n-\t\tint rnd = random.nextInt();\r\n-\t\tUser u = createUser(rnd);\r\n-\t\tassertTrue(\"Password should be set as expected\", userDao.verifyPassword(u.getId(), \"pass\" + rnd));\r\n+\tpublic void testCreateUser() throws Exception {\r\n+\t\tString uuid = UUID.randomUUID().toString();\r\n+\t\tUser u = createUser(uuid);\r\n+\t\tassertTrue(\"Password should be set as expected\", userDao.verifyPassword(u.getId(), getRandomPass(uuid)));\r\n \t}\r\n \t\r\n \t@Test\r\n@@ -76,7 +75,7 @@ public void addContactByOwner() throws Exception {\n \t\tassertNotNull(\"User list should not be null \", users);\r\n \t\tassertFalse(\"User list should not be empty \", users.isEmpty());\r\n \t\t\r\n-\t\tUser contact = createUserContact(random.nextInt(), getUserId());\r\n+\t\tUser contact = createUserContact(getUserId());\r\n \t\tString email = contact.getAddress().getEmail();\r\n \t\tList<User> l = userDao.get(email, false, 0, 9999);\r\n \t\t// check that contact is visible for admin\r\n@@ -91,9 +90,9 @@ public void addContactByOwner() throws Exception {\n \t\tl = userDao.get(email, false, 0, 9999);\r\n \t\tassertTrue(\"Contact list should be empty after deletion\", l.isEmpty());\r\n \r\n-\t\tUser u = createUser(random.nextInt());\r\n-\t\tUser u1 = createUser(random.nextInt());\r\n-\t\tcontact = createUserContact(random.nextInt(), u.getId());\r\n+\t\tUser u = createUser();\r\n+\t\tUser u1 = createUser();\r\n+\t\tcontact = createUserContact(u.getId());\r\n \t\temail = contact.getAddress().getEmail();\r\n \t\t// check that contact is not visible for user that is not owner of this contact\r\n \t\tl = userDao.get(email, 0, 9999, null, true, u1.getId());\r", "filename": "openmeetings-web/src/test/java/org/apache/openmeetings/test/user/TestUserContact.java"}, {"additions": 5, "raw_url": "https://github.com/apache/openmeetings/raw/b075156565dc5e9c4f71ef49b95b3f4a0912b836/openmeetings-web/src/test/java/org/apache/openmeetings/test/user/TestUserCount.java", "blob_url": "https://github.com/apache/openmeetings/blob/b075156565dc5e9c4f71ef49b95b3f4a0912b836/openmeetings-web/src/test/java/org/apache/openmeetings/test/user/TestUserCount.java", "sha": "bd8e3b472d83312547b5622007cceeb911bfa524", "changes": 13, "status": "modified", "deletions": 8, "contents_url": "https://api.github.com/repos/apache/openmeetings/contents/openmeetings-web/src/test/java/org/apache/openmeetings/test/user/TestUserCount.java?ref=b075156565dc5e9c4f71ef49b95b3f4a0912b836", "patch": "@@ -21,8 +21,6 @@\n import static org.apache.openmeetings.web.app.WebSession.getUserId;\r\n import static org.junit.Assert.assertTrue;\r\n \r\n-import java.util.Random;\r\n-\r\n import org.apache.openmeetings.db.dao.user.UserDao;\r\n import org.apache.openmeetings.db.entity.user.User;\r\n import org.apache.openmeetings.test.AbstractWicketTester;\r\n@@ -32,25 +30,24 @@\n public class TestUserCount extends AbstractWicketTester {\r\n \t@Autowired\r\n \tprivate UserDao userDao;\r\n-\tRandom random = new Random();\r\n \r\n \t@Test\r\n \tpublic void testCountSearchUsers() throws Exception {\r\n-\t\tUser u = createUser(random.nextInt());\r\n+\t\tUser u = createUser();\r\n \t\tassertTrue(\"Account of search users should be one\", userDao.count(u.getFirstname()) == 1);\r\n \t}\r\n \r\n \t@Test\r\n \tpublic void testCountFilteredUsers() throws Exception {\r\n-\t\tUser u = createUser(random.nextInt());\r\n-\t\tUser contact = createUserContact(random.nextInt(), u.getId());\r\n+\t\tUser u = createUser();\r\n+\t\tUser contact = createUserContact(u.getId());\r\n \t\tassertTrue(\"Account of filtered user should be one\", userDao.count(contact.getFirstname(), true, u.getId()) == 1);\r\n \t}\r\n \r\n \t@Test\r\n \tpublic void testCountUnfilteredUsers() throws Exception {\r\n-\t\tUser u = createUser(random.nextInt());\r\n-\t\tcreateUserContact(random.nextInt(), u.getId());\r\n+\t\tUser u = createUser();\r\n+\t\tcreateUserContact(u.getId());\r\n \t\tassertTrue(\"Account of unfiltered should be more then one\", userDao.count(\"firstname\", false, getUserId()) > 1);\r\n \t}\r\n \t\t\r", "filename": "openmeetings-web/src/test/java/org/apache/openmeetings/test/user/TestUserCount.java"}, {"additions": 43, "raw_url": "https://github.com/apache/openmeetings/raw/b075156565dc5e9c4f71ef49b95b3f4a0912b836/openmeetings-web/src/test/java/org/apache/openmeetings/test/user/TestUserGroup.java", "blob_url": "https://github.com/apache/openmeetings/blob/b075156565dc5e9c4f71ef49b95b3f4a0912b836/openmeetings-web/src/test/java/org/apache/openmeetings/test/user/TestUserGroup.java", "sha": "5a66d29332d00a688a3ce803ff86d3a9d3817cdc", "changes": 54, "status": "modified", "deletions": 11, "contents_url": "https://api.github.com/repos/apache/openmeetings/contents/openmeetings-web/src/test/java/org/apache/openmeetings/test/user/TestUserGroup.java?ref=b075156565dc5e9c4f71ef49b95b3f4a0912b836", "patch": "@@ -23,7 +23,7 @@\n import static org.junit.Assert.fail;\n \n import java.util.List;\n-import java.util.Random;\n+import java.util.UUID;\n \n import org.apache.openmeetings.db.dao.user.GroupDao;\n import org.apache.openmeetings.db.dao.user.GroupUserDao;\n@@ -33,6 +33,7 @@\n import org.apache.openmeetings.db.entity.user.User;\n import org.apache.openmeetings.test.AbstractJUnitDefaults;\n import org.apache.openmeetings.test.selenium.HeavyTests;\n+import org.apache.openmeetings.util.OmException;\n import org.junit.Test;\n import org.springframework.beans.factory.annotation.Autowired;\n \n@@ -44,17 +45,17 @@\n \t@Autowired\n \tprivate UserDao userDao;\n \tpublic static final String GROUP_NAME = \"Test Group\";\n-\t\n+\n \tprivate User getValidUser() {\n \t\tfor (User u : userDao.getAllBackupUsers()) {\n \t\t\tif (!u.isDeleted() && u.getGroupUsers().size() > 0) {\n \t\t\t\treturn u;\n \t\t\t}\n \t\t}\n \t\tfail(\"Unable to find valid user\");\n-\t\treturn null;  //unreachable\n+\t\treturn null; //unreachable\n \t}\n-\t\n+\n \t@Test\n \tpublic void getUsersByGroupId() {\n \t\tUser u = getValidUser();\n@@ -63,20 +64,52 @@ public void getUsersByGroupId() {\n \t\tassertTrue(\"Default Group should contain at least 1 user: \" + ul.size(), ul.size() > 0);\n \t\t\n \t\tGroupUser ou = groupUserDao.getByGroupAndUser(groupId, u.getId());\n-\t\tassertNotNull(\"Unable to found [group, user] pair - [\" + groupId + \",\" + u.getId() + \"]\", ou);\n+\t\tassertNotNull(\"Unable to find [group, user] pair - [\" + groupId + \",\" + u.getId() + \"]\", ou);\n \t}\n-\t\n+\n \t@Test\n \tpublic void addGroup() {\n-\t\tGroup o = new Group();\n-\t\to.setName(GROUP_NAME);\n-\t\tLong groupId = groupDao.update(o, null).getId(); //inserted by not checked\n+\t\tGroup g = new Group();\n+\t\tg.setName(GROUP_NAME);\n+\t\tLong groupId = groupDao.update(g, null).getId(); //inserted by not checked\n \t\tassertNotNull(\"New Group have valid id\", groupId);\n \t\t\n \t\tList<GroupUser> ul = groupUserDao.get(groupId, 0, 9999);\n \t\tassertTrue(\"New Group should contain NO users: \" + ul.size(), ul.size() == 0);\n \t}\n \n+\t@Test\n+\tpublic void addUserWithoutGroup() throws Exception {\n+\t\tString uuid = UUID.randomUUID().toString();\n+\t\tUser u = getUser(uuid);\n+\t\tu = userDao.update(u, null);\n+\t\tassertNotNull(\"User successfully created\", u.getId());\n+\t\tcheckEmptyGroup(\"dao.get()\", userDao.get(u.getId()));\n+\t\ttry {\n+\t\t\tcheckEmptyGroup(\"dao.login()\", userDao.login(u.getAddress().getEmail(), getRandomPass(uuid)));\n+\t\t\tfail(\"User with no Group is unable to login\");\n+\t\t} catch (OmException e) {\n+\t\t\tassertTrue(\"Expected Om Exception\", \"No Group assigned to user\".equals(e.getMessage()));\n+\t\t}\n+\t\tcheckEmptyGroup(\"dao.getByLogin(user)\", userDao.getByLogin(u.getLogin(), u.getType(), u.getDomainId()));\n+\t}\n+\n+\n+\t@Test\n+\tpublic void addLdapUserWithoutGroup() throws Exception {\n+\t\tUser u1 = getUser();\n+\t\tu1.setType(User.Type.ldap);\n+\t\tu1.setDomainId(1L);\n+\t\tu1 = userDao.update(u1, null);\n+\t\tcheckEmptyGroup(\"dao.getByLogin(ldap)\", userDao.getByLogin(u1.getLogin(), u1.getType(), u1.getDomainId()));\n+\t}\n+\n+\tprivate void checkEmptyGroup(String prefix, User u) {\n+\t\tassertNotNull(prefix + \":: Created user should be available\", u);\n+\t\tassertNotNull(prefix + \":: List<GroupUser> for newly created user should not be null\", u.getGroupUsers());\n+\t\tassertTrue(prefix + \":: List<GroupUser> for newly created user should be empty\", u.getGroupUsers().isEmpty());\n+\t}\n+\n \t@Test\n \t@HeavyTests\n \tpublic void add10kUsers() throws Exception {\n@@ -89,9 +122,8 @@ public void add10kUsers() throws Exception {\n \t\t} else {\n \t\t\tg = groups.get(0);\n \t\t}\n-\t\tRandom rnd = new Random();\n \t\tfor (int i = 0; i < 10000; ++i) {\n-\t\t\tUser u = createUser(rnd.nextInt());\n+\t\t\tUser u = createUser();\n \t\t\tu.getGroupUsers().add(new GroupUser(g, u));\n \t\t\tuserDao.update(u, null);\n \t\t}", "filename": "openmeetings-web/src/test/java/org/apache/openmeetings/test/user/TestUserGroup.java"}, {"additions": 2, "raw_url": "https://github.com/apache/openmeetings/raw/b075156565dc5e9c4f71ef49b95b3f4a0912b836/openmeetings-web/src/test/java/org/apache/openmeetings/test/webservice/AbstractWebServiceTest.java", "blob_url": "https://github.com/apache/openmeetings/blob/b075156565dc5e9c4f71ef49b95b3f4a0912b836/openmeetings-web/src/test/java/org/apache/openmeetings/test/webservice/AbstractWebServiceTest.java", "sha": "fa2d9082e07056d87950aa23c86dcc96057ca3e6", "changes": 5, "status": "modified", "deletions": 3, "contents_url": "https://api.github.com/repos/apache/openmeetings/contents/openmeetings-web/src/test/java/org/apache/openmeetings/test/webservice/AbstractWebServiceTest.java?ref=b075156565dc5e9c4f71ef49b95b3f4a0912b836", "patch": "@@ -23,7 +23,7 @@\n \n import java.io.File;\n import java.nio.file.Files;\n-import java.util.Random;\n+import java.util.UUID;\n \n import org.apache.catalina.LifecycleState;\n import org.apache.catalina.startup.Tomcat;\n@@ -39,7 +39,6 @@\n \tpublic final static String CONTEXT = \"/openmeetings\";\n \tpublic final static String BASE_SERVICES_URL = \"http://localhost:8080\" + CONTEXT + \"/services\";\n \tpublic final static String USER_SERVICE_URL = BASE_SERVICES_URL + \"/user\";\n-\tprotected static final Random rnd = new Random();\n \n \tpublic static WebClient getClient(String url) {\n \t\treturn WebClient.create(url).accept(\"application/json\").type(\"application/json\");\n@@ -56,7 +55,7 @@ public static ServiceResult login() {\n \tpublic static void initialize() throws Exception {\n \t\ttomcat = new Tomcat();\n \t\ttomcat.setPort(8080);\n-\t\tFile wd = Files.createTempDirectory(\"om\" + rnd.nextInt()).toFile();\n+\t\tFile wd = Files.createTempDirectory(\"om\" + UUID.randomUUID().toString()).toFile();\n \t\ttomcat.setBaseDir(wd.getCanonicalPath());\n \t\ttomcat.getHost().setAppBase(wd.getCanonicalPath());\n \t\ttomcat.getHost().setAutoDeploy(true);", "filename": "openmeetings-web/src/test/java/org/apache/openmeetings/test/webservice/AbstractWebServiceTest.java"}, {"additions": 4, "raw_url": "https://github.com/apache/openmeetings/raw/b075156565dc5e9c4f71ef49b95b3f4a0912b836/openmeetings-web/src/test/java/org/apache/openmeetings/test/webservice/TestRecordingService.java", "blob_url": "https://github.com/apache/openmeetings/blob/b075156565dc5e9c4f71ef49b95b3f4a0912b836/openmeetings-web/src/test/java/org/apache/openmeetings/test/webservice/TestRecordingService.java", "sha": "a6202cecaa9607035df1bc7ba8e31abe4e972579", "changes": 6, "status": "modified", "deletions": 2, "contents_url": "https://api.github.com/repos/apache/openmeetings/contents/openmeetings-web/src/test/java/org/apache/openmeetings/test/webservice/TestRecordingService.java?ref=b075156565dc5e9c4f71ef49b95b3f4a0912b836", "patch": "@@ -23,6 +23,7 @@\n import static org.junit.Assert.assertTrue;\n \n import java.util.Collection;\n+import java.util.UUID;\n \n import org.apache.openmeetings.db.dao.record.RecordingDao;\n import org.apache.openmeetings.db.dao.user.UserDao;\n@@ -42,9 +43,10 @@\n \tprivate UserDao userDao;\n \n \tprivate User getExternalUser() throws Exception {\n-\t\tUser u = getUser(rnd.nextInt());\n+\t\tString uuid = UUID.randomUUID().toString();\n+\t\tUser u = getUser(uuid);\n \t\tu.setExternalType(UNIT_TEST_GROUP);\n-\t\tu.setExternalId(\"\" + rnd.nextInt());\n+\t\tu.setExternalId(uuid);\n \t\tu = userDao.update(u, null);\n \t\treturn u;\n \t}", "filename": "openmeetings-web/src/test/java/org/apache/openmeetings/test/webservice/TestRecordingService.java"}], "repo": "openmeetings"}, {"commit": "https://github.com/apache/openmeetings/commit/3ce3cc1eb62528617e3bbafac36f06c6a6cea087", "parent": "https://github.com/apache/openmeetings/commit/2ded8aad83e8328a551446b4d7b398459c18d177", "message": "no jira: potential NPEs are fixed", "bug_id": "openmeetings_16", "file": [{"additions": 26, "raw_url": "https://github.com/apache/openmeetings/raw/3ce3cc1eb62528617e3bbafac36f06c6a6cea087/openmeetings-core/src/main/java/org/apache/openmeetings/core/remote/ConferenceLibrary.java", "blob_url": "https://github.com/apache/openmeetings/blob/3ce3cc1eb62528617e3bbafac36f06c6a6cea087/openmeetings-core/src/main/java/org/apache/openmeetings/core/remote/ConferenceLibrary.java", "sha": "73423f812859f40029fd5b80b5ba4dc140694da1", "changes": 46, "status": "modified", "deletions": 20, "contents_url": "https://api.github.com/repos/apache/openmeetings/contents/openmeetings-core/src/main/java/org/apache/openmeetings/core/remote/ConferenceLibrary.java?ref=3ce3cc1eb62528617e3bbafac36f06c6a6cea087", "patch": "@@ -39,10 +39,12 @@\n import org.apache.openmeetings.db.dao.server.SessiondataDao;\n import org.apache.openmeetings.db.dao.user.UserDao;\n import org.apache.openmeetings.db.dto.file.LibraryPresentation;\n+import org.apache.openmeetings.db.dto.server.ClientSessionInfo;\n import org.apache.openmeetings.db.entity.file.FileExplorerItem;\n import org.apache.openmeetings.db.entity.file.FileItem;\n import org.apache.openmeetings.db.entity.file.FileItem.Type;\n import org.apache.openmeetings.db.entity.room.Client;\n+import org.apache.openmeetings.db.entity.server.Sessiondata;\n import org.apache.openmeetings.db.util.AuthLevelUtil;\n import org.apache.openmeetings.util.OmFileHelper;\n import org.red5.logging.Red5LoggerFactory;\n@@ -64,7 +66,7 @@\n \t@Autowired\n \tprivate ISessionManager sessionManager;\n \t@Autowired\n-\tprivate SessiondataDao sessiondataDao;\n+\tprivate SessiondataDao sessionDao;\n \t@Autowired\n \tprivate UserDao userDao;\n \t@Autowired\n@@ -74,13 +76,13 @@\n \t@Autowired\n \tprivate ScopeApplicationAdapter scopeAdapter;\n \n-\tpublic LibraryPresentation getPresentationPreviewFileExplorer(String SID, String parentFolder) {\n+\tpublic LibraryPresentation getPresentationPreviewFileExplorer(String sid, String parentFolder) {\n \t\ttry {\n-\t\t\tLong users_id = sessiondataDao.check(SID);\n+\t\t\tSessiondata sd = sessionDao.check(sid);\n \n-\t\t\tlog.debug(\"#############users_id : \" + users_id);\n+\t\t\tlog.debug(\"#############users_id : \" + sd.getUserId());\n \n-\t\t\tif (AuthLevelUtil.hasUserLevel(userDao.getRights(users_id))) {\n+\t\t\tif (AuthLevelUtil.hasUserLevel(userDao.getRights(sd.getUserId()))) {\n \t\t\t\tFile working_dir = new File(OmFileHelper.getUploadFilesDir(), parentFolder);\n \t\t\t\tlog.debug(\"############# working_dir : \" + working_dir);\n \n@@ -103,16 +105,16 @@ public LibraryPresentation getPresentationPreviewFileExplorer(String SID, String\n \t * \n \t * Save an Object to the library and returns the file-explorer Id\n \t * \n-\t * @param SID\n+\t * @param sid\n \t * @param roomId\n \t * @param fileName\n \t * @param tObjectRef\n \t * @return - file-explorer Id in case of success, -1 otherwise\n \t */\n-\tpublic Long saveAsObject(String SID, Long roomId, String fileName, Object tObjectRef) {\n+\tpublic Long saveAsObject(String sid, Long roomId, String fileName, Object tObjectRef) {\n \t\ttry {\n-\t\t\tLong userId = sessiondataDao.check(SID);\n-\t\t\tif (AuthLevelUtil.hasUserLevel(userDao.getRights(userId))) {\n+\t\t\tSessiondata sd = sessionDao.check(sid);\n+\t\t\tif (AuthLevelUtil.hasUserLevel(userDao.getRights(sd.getUserId()))) {\n \t\t\t\t// LinkedHashMap tObject = (LinkedHashMap)t;\n \t\t\t\t// ArrayList tObject = (ArrayList)t;\n \n@@ -124,7 +126,7 @@ public Long saveAsObject(String SID, Long roomId, String fileName, Object tObjec\n \n \t\t\t\tlog.debug(\"saveAsObject\" + tObject.size());\n \n-\t\t\t\tFileExplorerItem file = fileDao.add(fileName, null, null, roomId, userId, Type.WmlFile, \"\", \"\");\n+\t\t\t\tFileExplorerItem file = fileDao.add(fileName, null, null, roomId, sd.getUserId(), Type.WmlFile, \"\", \"\");\n \t\t\t\tLibraryDocumentConverter.writeToLocalFolder(file.getHash(), tObject);\n \n \t\t\t\treturn file.getId();\n@@ -144,7 +146,12 @@ public Long saveAsObject(String SID, Long roomId, String fileName, Object tObjec\n \t * @param fi - FileItem of the Wml being loaded\n \t */\n \tpublic void sendToWhiteboard(String uid, Long wbId, FileItem fi) {\n-\t\tClient client = sessionManager.getClientByPublicSIDAnyServer(uid).getRcl();\n+\t\tClientSessionInfo csi = sessionManager.getClientByPublicSIDAnyServer(uid);\n+\t\tif (csi == null) {\n+\t\t\tlog.warn(\"No client was found to send Wml:: {}\", uid);\n+\t\t\treturn;\n+\t\t}\n+\t\tClient client = csi.getRcl();\n \n \t\tif (client == null) {\n \t\t\tlog.warn(\"No client was found to send Wml:: {}\", uid);\n@@ -181,16 +188,16 @@ public void sendToWhiteboard(String uid, Long wbId, FileItem fi) {\n \t * \n \t * Loads a chart object\n \t * \n-\t * @param SID\n+\t * @param sid\n \t * @param room_id\n \t * @param fileName\n \t * @return - chart object\n \t */\n \t@SuppressWarnings(\"rawtypes\")\n-\tpublic ArrayList loadChartObject(String SID, Long room_id, String fileName) {\n+\tpublic ArrayList loadChartObject(String sid, Long room_id, String fileName) {\n \t\ttry {\n-\t\t\tLong users_id = sessiondataDao.check(SID);\n-\t\t\tif (AuthLevelUtil.hasUserLevel(userDao.getRights(users_id))) {\n+\t\t\tSessiondata sd = sessionDao.check(sid);\n+\t\t\tif (AuthLevelUtil.hasUserLevel(userDao.getRights(sd.getUserId()))) {\n \t\t\t\treturn LibraryChartLoader.getInstance().loadChart(OmFileHelper.getUploadRoomDir(room_id.toString()), fileName);\n \t\t\t}\n \t\t} catch (Exception err) {\n@@ -200,15 +207,14 @@ public ArrayList loadChartObject(String SID, Long room_id, String fileName) {\n \t}\n \n \t/**\n-\t * @param SID\n+\t * @param sid\n \t * @param flvFileExplorerId\n \t * @return 1 in case of success, -1 otherwise\n \t */\n-\tpublic Long copyFileToCurrentRoom(String SID, Long flvFileExplorerId) {\n+\tpublic Long copyFileToCurrentRoom(String sid, Long flvFileExplorerId) {\n \t\ttry {\n-\t\t\tLong users_id = sessiondataDao.check(SID);\n-\n-\t\t\tif (AuthLevelUtil.hasUserLevel(userDao.getRights(users_id))) {\n+\t\t\tSessiondata sd = sessionDao.check(sid);\n+\t\t\tif (AuthLevelUtil.hasUserLevel(userDao.getRights(sd.getUserId()))) {\n \n \t\t\t\tIConnection current = Red5.getConnectionLocal();\n \t\t\t\tString streamid = current.getClient().getId();", "filename": "openmeetings-core/src/main/java/org/apache/openmeetings/core/remote/ConferenceLibrary.java"}, {"additions": 42, "raw_url": "https://github.com/apache/openmeetings/raw/3ce3cc1eb62528617e3bbafac36f06c6a6cea087/openmeetings-core/src/main/java/org/apache/openmeetings/core/remote/ConferenceService.java", "blob_url": "https://github.com/apache/openmeetings/blob/3ce3cc1eb62528617e3bbafac36f06c6a6cea087/openmeetings-core/src/main/java/org/apache/openmeetings/core/remote/ConferenceService.java", "sha": "e03ea6e00e21d75a297ffb8c056d5de58df41959", "changes": 84, "status": "modified", "deletions": 42, "contents_url": "https://api.github.com/repos/apache/openmeetings/contents/openmeetings-core/src/main/java/org/apache/openmeetings/core/remote/ConferenceService.java?ref=3ce3cc1eb62528617e3bbafac36f06c6a6cea087", "patch": "@@ -37,6 +37,7 @@\n import org.apache.openmeetings.db.entity.room.Client;\n import org.apache.openmeetings.db.entity.room.Room;\n import org.apache.openmeetings.db.entity.room.RoomModerator;\n+import org.apache.openmeetings.db.entity.server.Sessiondata;\n import org.apache.openmeetings.db.entity.room.RoomGroup;\n import org.apache.openmeetings.db.util.AuthLevelUtil;\n import org.red5.logging.Red5LoggerFactory;\n@@ -54,7 +55,7 @@\n \t@Autowired\n \tprivate AppointmentDao appointmentDao;\n \t@Autowired\n-\tprivate SessiondataDao sessiondataDao;\n+\tprivate SessiondataDao sessionDao;\n \t@Autowired\n \tprivate UserDao userDao;\n \t@Autowired\n@@ -66,10 +67,10 @@\n \t@Autowired\n \tprivate ISessionManager sessionManager = null;\n \n-\tpublic List<RoomGroup> getRoomsByGroupWithoutType(String SID, long groupId) {\n+\tpublic List<RoomGroup> getRoomsByGroupWithoutType(String sid, long groupId) {\n \t\ttry {\n-\t\t\tLong userId = sessiondataDao.check(SID);\n-\t\t\tif (AuthLevelUtil.hasUserLevel(userDao.getRights(userId))) {\n+\t\t\tSessiondata sd = sessionDao.check(sid);\n+\t\t\tif (AuthLevelUtil.hasUserLevel(userDao.getRights(sd.getUserId()))) {\n \t\t\t\tlog.debug(\"getRoomsByGroupWithoutType\");\n \t\t\t\tList<RoomGroup> roomGroupsList = roomManager.getRoomGroupByGroupId(groupId);\n \t\t\t\t\n@@ -88,16 +89,16 @@\n \t/**\n \t * get a List of all public availible rooms (non-appointments)\n \t * \n-\t * @param SID\n+\t * @param sid\n \t * @param typeId\n \t * @return - public rooms with given type, null in case of the error\n \t */\n-\tpublic List<Room> getRoomsPublic(String SID, Long typeId) {\n+\tpublic List<Room> getRoomsPublic(String sid, Long typeId) {\n \t\ttry {\n \t\t\tlog.debug(\"getRoomsPublic\");\n \n-\t\t\tLong userId = sessiondataDao.check(SID);\n-\t\t\tif (AuthLevelUtil.hasUserLevel(userDao.getRights(userId))) {\n+\t\t\tSessiondata sd = sessionDao.check(sid);\n+\t\t\tif (AuthLevelUtil.hasUserLevel(userDao.getRights(sd.getUserId()))) {\n \t\n \t\t\t\tList<Room> roomList = roomDao.getPublicRooms(Room.Type.get(typeId));\n \t\n@@ -121,10 +122,10 @@\n \t\treturn null;\n \t}\n \n-\tpublic List<Room> getRoomsPublicWithoutType(String SID) {\n+\tpublic List<Room> getRoomsPublicWithoutType(String sid) {\n \t\ttry {\n-\t\t\tLong userId = sessiondataDao.check(SID);\n-\t\t\tif (AuthLevelUtil.hasUserLevel(userDao.getRights(userId))) {\n+\t\t\tSessiondata sd = sessionDao.check(sid);\n+\t\t\tif (AuthLevelUtil.hasUserLevel(userDao.getRights(sd.getUserId()))) {\n \t\n \t\t\t\tList<Room> roomList = roomDao.getPublicRooms();\n \t\t\t\t\n@@ -155,13 +156,12 @@ public Date getServerTime() {\n \n \t// --------------------------------------------------------------------------------------------\n \n-\tpublic List<Room> getAppointedMeetingRoomsWithoutType(String SID) {\n+\tpublic List<Room> getAppointedMeetingRoomsWithoutType(String sid) {\n \t\tlog.debug(\"ConferenceService.getAppointedMeetings\");\n \t\ttry {\n-\t\t\tLong userId = sessiondataDao.check(SID);\n-\n-\t\t\tif (AuthLevelUtil.hasUserLevel(userDao.getRights(userId))) {\n-\t\t\t\tList<Appointment> appointments = appointmentDao.getForToday(userId);\n+\t\t\tSessiondata sd = sessionDao.check(sid);\n+\t\t\tif (AuthLevelUtil.hasUserLevel(userDao.getRights(sd.getUserId()))) {\n+\t\t\t\tList<Appointment> appointments = appointmentDao.getForToday(sd.getUserId());\n \t\t\t\tList<Room> result = new ArrayList<Room>();\n \n \t\t\t\tif (appointments != null) {\n@@ -185,10 +185,10 @@ public Date getServerTime() {\n \t\treturn null;\n \t}\n \n-\tpublic Room getRoomWithCurrentUsersById(String SID, long roomId) {\n+\tpublic Room getRoomWithCurrentUsersById(String sid, long roomId) {\n \t\tRoom room = null;\n-\t\tLong userId = sessiondataDao.check(SID);\n-\t\tif (AuthLevelUtil.hasUserLevel(userDao.getRights(userId))) {\n+\t\tSessiondata sd = sessionDao.check(sid);\n+\t\tif (AuthLevelUtil.hasUserLevel(userDao.getRights(sd.getUserId()))) {\n \t\t\troom = roomDao.get(roomId);\n \t\t\troom.setCurrentusers(sessionManager.getClientListByRoom(room.getId()));\n \t\t}\n@@ -198,37 +198,37 @@ public Room getRoomWithCurrentUsersById(String SID, long roomId) {\n \t/**\n \t * gets a list of all available rooms\n \t * \n-\t * @param SID\n+\t * @param sid\n \t * @param start\n \t * @param max\n \t * @param orderby\n \t * @param asc\n \t * @return - list of rooms being searched\n \t */\n-\tpublic SearchResult<Room> getRooms(String SID, int start, int max, String orderby, boolean asc, String search) {\n+\tpublic SearchResult<Room> getRooms(String sid, int start, int max, String orderby, boolean asc, String search) {\n \t\tlog.debug(\"getRooms\");\n \n-\t\tLong userId = sessiondataDao.check(SID);\n-\t\tif (AuthLevelUtil.hasAdminLevel(userDao.getRights(userId))) {\n+\t\tSessiondata sd = sessionDao.check(sid);\n+\t\tif (AuthLevelUtil.hasAdminLevel(userDao.getRights(sd.getUserId()))) {\n \t\t\treturn roomManager.getRooms(start, max, orderby, asc, search);\n \t\t}\n \t\treturn null;\n \t}\n \n-\tpublic SearchResult<Room> getRoomsWithCurrentUsers(String SID, int start, int max, String orderby, boolean asc) {\n+\tpublic SearchResult<Room> getRoomsWithCurrentUsers(String sid, int start, int max, String orderby, boolean asc) {\n \t\tlog.debug(\"getRooms\");\n \n-\t\tLong userId = sessiondataDao.check(SID);\n-\t\tif (AuthLevelUtil.hasAdminLevel(userDao.getRights(userId))) {\n+\t\tSessiondata sd = sessionDao.check(sid);\n+\t\tif (AuthLevelUtil.hasAdminLevel(userDao.getRights(sd.getUserId()))) {\n \t\t\treturn roomManager.getRoomsWithCurrentUsers(start, max, orderby, asc);\n \t\t}\n \t\treturn null;\n \t}\n \n-\tpublic List<RoomModerator> getRoomModeratorsByRoomId(String SID, Long roomId) {\n+\tpublic List<RoomModerator> getRoomModeratorsByRoomId(String sid, Long roomId) {\n \t\ttry {\n-\t\t\tLong userId = sessiondataDao.check(SID);\n-\t\t\tif (AuthLevelUtil.hasUserLevel(userDao.getRights(userId))) {\n+\t\t\tSessiondata sd = sessionDao.check(sid);\n+\t\t\tif (AuthLevelUtil.hasUserLevel(userDao.getRights(sd.getUserId()))) {\n \t\t\t\treturn roomModeratorDao.getByRoomId(roomId);\n \t\t\t}\n \t\t} catch (Exception err) {\n@@ -247,37 +247,37 @@ public Room getRoomWithCurrentUsersById(String SID, long roomId) {\n \t\treturn sessionManager.getClientListByRoom(roomId);\n \t}\n \n-\tpublic List<Room> getRoomsWithCurrentUsersByList(String SID, int start, int max, String orderby, boolean asc) {\n+\tpublic List<Room> getRoomsWithCurrentUsersByList(String sid, int start, int max, String orderby, boolean asc) {\n \t\tlog.debug(\"getRoomsWithCurrentUsersByList\");\n \n-\t\tLong userId = sessiondataDao.check(SID);\n-\t\tif (AuthLevelUtil.hasAdminLevel(userDao.getRights(userId))) {\n+\t\tSessiondata sd = sessionDao.check(sid);\n+\t\tif (AuthLevelUtil.hasAdminLevel(userDao.getRights(sd.getUserId()))) {\n \t\t\treturn roomManager.getRoomsWithCurrentUsersByList(start, max, orderby, asc);\n \t\t}\n \t\treturn null;\n \t}\n \n-\tpublic List<Room> getRoomsWithCurrentUsersByListAndType(String SID, int start, int max, String orderby, boolean asc, String externalType) {\n+\tpublic List<Room> getRoomsWithCurrentUsersByListAndType(String sid, int start, int max, String orderby, boolean asc, String externalType) {\n \t\tlog.debug(\"getRoomsWithCurrentUsersByListAndType\");\n \n-\t\tLong userId = sessiondataDao.check(SID);\n-\t\tif (AuthLevelUtil.hasAdminLevel(userDao.getRights(userId))) {\n+\t\tSessiondata sd = sessionDao.check(sid);\n+\t\tif (AuthLevelUtil.hasAdminLevel(userDao.getRights(sd.getUserId()))) {\n \t\t\treturn roomManager.getRoomsWithCurrentUsersByListAndType(start, max, orderby, asc, externalType);\n \t\t}\n \t\treturn null;\n \t}\n \n-\tpublic Room getRoomByOwnerAndType(String SID, Long typeId, String roomName) {\n-\t\tLong userId = sessiondataDao.check(SID);\n-\t\tif (AuthLevelUtil.hasUserLevel(userDao.getRights(userId))) {\n-\t\t\treturn roomDao.getUserRoom(userId, Room.Type.get(typeId), roomName);\n+\tpublic Room getRoomByOwnerAndType(String sid, Long typeId, String roomName) {\n+\t\tSessiondata sd = sessionDao.check(sid);\n+\t\tif (AuthLevelUtil.hasUserLevel(userDao.getRights(sd.getUserId()))) {\n+\t\t\treturn roomDao.getUserRoom(sd.getUserId(), Room.Type.get(typeId), roomName);\n \t\t}\n \t\treturn null;\n \t}\n \n-\tpublic Room getRoomById(String SID, Long roomId) {\n-\t\tLong userId = sessiondataDao.check(SID);\n-\t\tif (AuthLevelUtil.hasUserLevel(userDao.getRights(userId))) {\n+\tpublic Room getRoomById(String sid, Long roomId) {\n+\t\tSessiondata sd = sessionDao.check(sid);\n+\t\tif (AuthLevelUtil.hasUserLevel(userDao.getRights(sd.getUserId()))) {\n \t\t\treturn roomDao.get(roomId);\n \t\t}\n \t\treturn null;", "filename": "openmeetings-core/src/main/java/org/apache/openmeetings/core/remote/ConferenceService.java"}, {"additions": 10, "raw_url": "https://github.com/apache/openmeetings/raw/3ce3cc1eb62528617e3bbafac36f06c6a6cea087/openmeetings-core/src/main/java/org/apache/openmeetings/core/remote/InvitationService.java", "blob_url": "https://github.com/apache/openmeetings/blob/3ce3cc1eb62528617e3bbafac36f06c6a6cea087/openmeetings-core/src/main/java/org/apache/openmeetings/core/remote/InvitationService.java", "sha": "8303bfaef31eb47da15630a328e5a8f22774c7e9", "changes": 19, "status": "modified", "deletions": 9, "contents_url": "https://api.github.com/repos/apache/openmeetings/contents/openmeetings-core/src/main/java/org/apache/openmeetings/core/remote/InvitationService.java?ref=3ce3cc1eb62528617e3bbafac36f06c6a6cea087", "patch": "@@ -31,6 +31,7 @@\n import org.apache.openmeetings.db.entity.room.Invitation;\n import org.apache.openmeetings.db.entity.room.Invitation.MessageType;\n import org.apache.openmeetings.db.entity.room.Invitation.Valid;\n+import org.apache.openmeetings.db.entity.server.Sessiondata;\n import org.apache.openmeetings.db.entity.user.User;\n import org.apache.openmeetings.db.util.AuthLevelUtil;\n import org.apache.openmeetings.util.CalendarHelper;\n@@ -48,7 +49,7 @@\n \t@Autowired\n \tprivate ISessionManager sessionManager;\n \t@Autowired\n-\tprivate SessiondataDao sessiondataDao;\n+\tprivate SessiondataDao sessionDao;\n \t@Autowired\n \tprivate UserDao userDao;\n \t@Autowired\n@@ -75,7 +76,7 @@ private static Date getDate(String date, String time, String tzId) {\n \t/**\n \t * send an invitation to another user by Mail\n \t * \n-\t * @param SID\n+\t * @param sid\n \t * @param firstname\n \t * @param lastname\n \t * @param message\n@@ -94,15 +95,16 @@ private static Date getDate(String date, String time, String tzId) {\n      * @param iCalTz\n \t * @return - invitation object in case of success, \"Sys - Error\" string or null in case of error\n \t */\n-\tpublic Object sendInvitationHash(String SID, String firstname, String lastname,\n+\tpublic Object sendInvitationHash(String sid, String firstname, String lastname,\n \t\t\tString message, String email, String subject,\n \t\t\tLong roomId, String conferencedomain, Boolean isPasswordProtected,\n \t\t\tString invitationpass, Integer valid, String validFromDate,\n \t\t\tString validFromTime, String validToDate, String validToTime,\n \t\t\tLong languageId, String iCalTz, boolean sendMail) {\n \n \t\ttry {\n-\t\t\tLong userId = sessiondataDao.check(SID);\n+\t\t\tSessiondata sd = sessionDao.check(sid);\n+\t\t\tLong userId = sd.getUserId();\n \n \t\t\tif (AuthLevelUtil.hasUserLevel(userDao.getRights(userId))) {\n \t\t\t\tlog.debug(\"sendInvitationHash: \");\n@@ -141,10 +143,9 @@ public Object sendInvitationHash(String SID, String firstname, String lastname,\n \t\treturn null;\n \t}\n \n-\tpublic String sendInvitationByHash(String SID, String invitationHash, String message, String subject, Long languageId) throws Exception {\n-\t\tLong userId = sessiondataDao.check(SID);\n-\n-\t\tif (AuthLevelUtil.hasUserLevel(userDao.getRights(userId))) {\n+\tpublic String sendInvitationByHash(String sid, String invitationHash, String message, String subject, Long languageId) throws Exception {\n+\t\tSessiondata sd = sessionDao.check(sid);\n+\t\tif (AuthLevelUtil.hasUserLevel(userDao.getRights(sd.getUserId()))) {\n \t\t\tInvitation inv = (Invitation)invitationManager.getInvitationByHashCode(invitationHash, false);\n \t\t\tinv.getInvitee().setLanguageId(languageId);\n \t\t\tinvitationManager.sendInvitationLink(inv, MessageType.Create, subject, message, false);\n@@ -161,7 +162,7 @@ public Object getInvitationByHash(String SID, String hashCode) {\n \t\t\tif (i.isAllowEntry()) {\n \t\t\t\tUser u = i.getInvitee();\n \t\t\t\tLong userId = -u.getId(); //TODO check this, extremely weird\n-\t\t\t\tsessiondataDao.updateUser(SID, userId);\n+\t\t\t\tsessionDao.updateUser(SID, userId);\n \t\t\t\tIConnection current = Red5.getConnectionLocal();\n \t\t\t\tString streamId = current.getClient().getId();\n \t\t\t\tClient client = sessionManager.getClientByStreamId(streamId, null);", "filename": "openmeetings-core/src/main/java/org/apache/openmeetings/core/remote/InvitationService.java"}, {"additions": 26, "raw_url": "https://github.com/apache/openmeetings/raw/3ce3cc1eb62528617e3bbafac36f06c6a6cea087/openmeetings-core/src/main/java/org/apache/openmeetings/core/remote/MainService.java", "blob_url": "https://github.com/apache/openmeetings/blob/3ce3cc1eb62528617e3bbafac36f06c6a6cea087/openmeetings-core/src/main/java/org/apache/openmeetings/core/remote/MainService.java", "sha": "9909291776e0166b515f09ba738ad9ce4b3eba17", "changes": 52, "status": "modified", "deletions": 26, "contents_url": "https://api.github.com/repos/apache/openmeetings/contents/openmeetings-core/src/main/java/org/apache/openmeetings/core/remote/MainService.java?ref=3ce3cc1eb62528617e3bbafac36f06c6a6cea087", "patch": "@@ -78,7 +78,7 @@\n \t@Autowired\n \tprivate ScopeApplicationAdapter scopeApplicationAdapter;\n \t@Autowired\n-\tprivate SessiondataDao sessiondataDao;\n+\tprivate SessiondataDao sessionDao;\n \t@Autowired\n \tprivate ConfigurationDao configurationDao;\n \t@Autowired\n@@ -103,14 +103,14 @@\n \t/**\n \t * gets a user by its SID\n \t * \n-\t * @param SID\n+\t * @param sid\n \t * @param userId\n \t * @return - user with SID given\n \t */\n-\tpublic User getUser(String SID, long userId) {\n+\tpublic User getUser(String sid, long userId) {\n \t\tUser users = new User();\n-\t\tLong users_id = sessiondataDao.check(SID);\n-\t\tSet<Right> rights = userDao.getRights(users_id);\n+\t\tSessiondata sd = sessionDao.check(sid);\n+\t\tSet<Right> rights = userDao.getRights(sd.getUserId());\n \t\tif (AuthLevelUtil.hasAdminLevel(rights) || AuthLevelUtil.hasWebServiceLevel(rights)) {\n \t\t\tusers = userDao.get(userId);\n \t\t} else {\n@@ -141,12 +141,12 @@ public Client getCurrentRoomClient(String SID) {\n \t * @return a unique session identifier\n \t */\n \tpublic Sessiondata getsessiondata() {\n-\t\treturn sessiondataDao.create();\n+\t\treturn sessionDao.create();\n \t}\n \n \tpublic Long setCurrentUserGroup(String SID, Long groupId) {\n \t\ttry {\n-\t\t\tsessiondataDao.updateUserGroup(SID, groupId);\n+\t\t\tsessionDao.updateUserGroup(SID, groupId);\n \t\t\treturn 1L;\n \t\t} catch (Exception err) {\n \t\t\tlog.error(\"[setCurrentUserGroup]\", err);\n@@ -204,7 +204,8 @@ public boolean isRoomAllowedToUser(Room r, User u) {\n \t\n \tpublic User loginWicket(String wicketSID, Long wicketroomid) {\n \t\tlog.debug(\"[loginWicket] wicketSID: '{}'; wicketroomid: '{}'\", wicketSID, wicketroomid);\n-\t\tLong userId = sessiondataDao.check(wicketSID);\n+\t\tSessiondata sd = sessionDao.check(wicketSID);\n+\t\tLong userId = sd.getUserId();\n \t\tUser u = userId == null ? null : userDao.get(userId);\n \t\tif (u != null && wicketroomid != null) {\n \t\t\tlog.debug(\"[loginWicket] user and roomid are not empty: \" + userId + \", \" + wicketroomid);\n@@ -214,7 +215,7 @@ public User loginWicket(String wicketSID, Long wicketroomid) {\n \t\t\t\tClient currentClient = sessionManager.getClientByStreamId(streamId, null);\n \t\t\t\t\n \t\t\t\tif (!u.getGroupUsers().isEmpty()) {\n-\t\t\t\t\tu.setSessionData(sessiondataDao.get(wicketSID));\n+\t\t\t\t\tu.setSessionData(sd);\n \t\t\t\t\tcurrentClient.setUserId(u.getId());\n \t\t\t\t\tcurrentClient.setRoomId(wicketroomid);\n \t\t\t\t\tSessionVariablesUtil.setUserId(current.getClient(), u.getId());\n@@ -268,7 +269,7 @@ public Object secureLoginByRemote(String SID, String secureHash) {\n \t\t\tClient currentClient = sessionManager.getClientByStreamId(streamId, null);\n \n \t\t\tif (currentClient.getUserId() != null) {\n-\t\t\t\tsessiondataDao.updateUser(SID, currentClient.getUserId());\n+\t\t\t\tsessionDao.updateUser(SID, currentClient.getUserId());\n \t\t\t}\n \n \t\t\tcurrentClient.setAllowRecording(soapLogin.isAllowRecording());\n@@ -352,15 +353,14 @@ public Long setUserNickName(String firstname, String lastname, String email) {\n \t * Attention! This SID is NOT the default session id! its the Session id\n \t * retrieved in the call from the SOAP Gateway!\n \t * \n-\t * @param SID\n+\t * @param sid\n \t * @return - 1 in case of success, -1 otherwise\n \t */\n-\tpublic Long loginUserByRemote(String SID) {\n+\tpublic Long loginUserByRemote(String sid) {\n \t\ttry {\n-\t\t\tLong users_id = sessiondataDao.check(SID);\n-\t\t\tif (AuthLevelUtil.hasUserLevel(userDao.getRights(users_id))) {\n-\t\t\t\tSessiondata sd = sessiondataDao.get(SID);\n-\t\t\t\tif (sd == null || sd.getXml() == null) {\n+\t\t\tSessiondata sd = sessionDao.check(sid);\n+\t\t\tif (AuthLevelUtil.hasUserLevel(userDao.getRights(sd.getUserId()))) {\n+\t\t\t\tif (sd.getXml() == null) {\n \t\t\t\t\treturn -37L;\n \t\t\t\t} else {\n \t\t\t\t\tRemoteSessionObject userObject = RemoteSessionObject.fromXml(sd.getXml());\n@@ -404,7 +404,7 @@ public Long loginUserByRemote(String SID) {\n \t\t\t\t\t\t} else {\n \t\t\t\t\t\t\tuser.setPictureuri(userObject.getPictureUrl());\n \n-\t\t\t\t\t\t\tuserDao.update(user, users_id);\n+\t\t\t\t\t\t\tuserDao.update(user, sd.getUserId());\n \n \t\t\t\t\t\t\tcurrentClient.setUserId(user.getId());\n \t\t\t\t\t\t\tSessionVariablesUtil.setUserId(current.getClient(), user.getId());\n@@ -420,7 +420,7 @@ public Long loginUserByRemote(String SID) {\n \t\t\t\t\tlog.debug(\"UPDATE USER BY STREAMID \" + streamId);\n \n \t\t\t\t\tif (currentClient.getUserId() != null) {\n-\t\t\t\t\t\tsessiondataDao.updateUser(SID, currentClient.getUserId());\n+\t\t\t\t\t\tsessionDao.updateUser(sid, currentClient.getUserId());\n \t\t\t\t\t}\n \n \t\t\t\t\tsessionManager.updateClientByStreamId(streamId, currentClient, false, null);\n@@ -437,20 +437,20 @@ public Long loginUserByRemote(String SID) {\n \t/**\n \t * clear this session id\n \t * \n-\t * @param SID\n+\t * @param sid\n \t * @return string value if completed\n \t */\n-\tpublic Long logoutUser(String SID) {\n+\tpublic Long logoutUser(String sid) {\n \t\ttry {\n-\t\t\tLong users_id = sessiondataDao.check(SID);\n+\t\t\tSessiondata sd = sessionDao.check(sid);\n \t\t\tIConnection current = Red5.getConnectionLocal();\n \t\t\tClient currentClient = sessionManager.getClientByStreamId(current.getClient().getId(), null);\n \t\t\t\n \t\t\tscopeApplicationAdapter.roomLeaveByScope(currentClient,current.getScope(), false);\n \t\t\t\n \t\t\tcurrentClient.setUserObject(null, null, null, null);\n \t\t\t\n-\t\t\treturn userManager.logout(SID, users_id);\n+\t\t\treturn userManager.logout(sid, sd.getUserId());\n \t\t} catch (Exception err) {\n \t\t\tlog.error(\"[logoutUser]\",err);\n \t\t}\n@@ -466,10 +466,10 @@ public Long logoutUser(String SID) {\n \t\treturn null;\n \t}\n \n-\tpublic List<Userdata> getUserdata(String SID) {\n-\t\tLong users_id = sessiondataDao.check(SID);\n-\t\tif (AuthLevelUtil.hasUserLevel(userDao.getRights(users_id))) {\n-\t\t\treturn userManager.getUserdataDashBoard(users_id);\n+\tpublic List<Userdata> getUserdata(String sid) {\n+\t\tSessiondata sd = sessionDao.check(sid);\n+\t\tif (AuthLevelUtil.hasUserLevel(userDao.getRights(sd.getUserId()))) {\n+\t\t\treturn userManager.getUserdataDashBoard(sd.getUserId());\n \t\t}\n \t\treturn null;\n \t}", "filename": "openmeetings-core/src/main/java/org/apache/openmeetings/core/remote/MainService.java"}, {"additions": 22, "raw_url": "https://github.com/apache/openmeetings/raw/3ce3cc1eb62528617e3bbafac36f06c6a6cea087/openmeetings-core/src/main/java/org/apache/openmeetings/core/remote/UserService.java", "blob_url": "https://github.com/apache/openmeetings/blob/3ce3cc1eb62528617e3bbafac36f06c6a6cea087/openmeetings-core/src/main/java/org/apache/openmeetings/core/remote/UserService.java", "sha": "68bba2c9a983d07d20256b01a07bfb4895dfe249", "changes": 43, "status": "modified", "deletions": 21, "contents_url": "https://api.github.com/repos/apache/openmeetings/contents/openmeetings-core/src/main/java/org/apache/openmeetings/core/remote/UserService.java?ref=3ce3cc1eb62528617e3bbafac36f06c6a6cea087", "patch": "@@ -33,6 +33,7 @@\n import org.apache.openmeetings.db.dao.user.UserDao;\n import org.apache.openmeetings.db.entity.room.Client;\n import org.apache.openmeetings.db.entity.server.Server;\n+import org.apache.openmeetings.db.entity.server.Sessiondata;\n import org.apache.openmeetings.db.entity.user.User;\n import org.apache.openmeetings.db.util.AuthLevelUtil;\n import org.apache.wicket.Application;\n@@ -55,7 +56,7 @@\n \t@Autowired\n \tprivate ScopeApplicationAdapter scopeApplicationAdapter;\n \t@Autowired\n-\tprivate SessiondataDao sessiondataDao;\n+\tprivate SessiondataDao sessionDao;\n \t@Autowired\n \tprivate UserDao userDao;\n \t@Autowired\n@@ -66,13 +67,13 @@\n \t/**\n \t * get user by id, admin only\n \t * \n-\t * @param SID\n+\t * @param sid\n \t * @param userId\n \t * @return User with the id given\n \t */\n-\tpublic User getUserById(String SID, long userId) {\n-\t\tLong authUserId = sessiondataDao.check(SID);\n-\t\tif (AuthLevelUtil.hasUserLevel(userDao.getRights(authUserId))) {\n+\tpublic User getUserById(String sid, long userId) {\n+\t\tSessiondata sd = sessionDao.check(sid);\n+\t\tif (AuthLevelUtil.hasUserLevel(userDao.getRights(sd.getUserId()))) {\n \t\t\treturn userDao.get(userId);\n \t\t}\n \t\treturn null;\n@@ -86,7 +87,7 @@ public User getUserById(String SID, long userId) {\n \t */\n \tpublic String refreshSession(String SID) {\n \t\ttry {\n-\t\t\tsessiondataDao.check(SID);\n+\t\t\tsessionDao.check(SID);\n \t\t\treturn \"ok\";\n \t\t} catch (Exception err) {\n \t\t\tlog.error(\"[refreshSession]\", err);\n@@ -97,15 +98,15 @@ public String refreshSession(String SID) {\n \t/**\n \t * gets a whole user-list(admin-role only)\n \t * \n-\t * @param SID\n+\t * @param sid\n \t * @param start\n \t * @param max\n \t * @param orderby\n \t * @return whole user-list\n \t */\n-\tpublic List<User> getUserList(String SID, int start, int max, String orderby, boolean asc) {\n-\t\tLong userId = sessiondataDao.check(SID);\n-\t\tif (AuthLevelUtil.hasAdminLevel(userDao.getRights(userId))) {\n+\tpublic List<User> getUserList(String sid, int start, int max, String orderby, boolean asc) {\n+\t\tSessiondata sd = sessionDao.check(sid);\n+\t\tif (AuthLevelUtil.hasAdminLevel(userDao.getRights(sd.getUserId()))) {\n \t\t\treturn userDao.get(\"\", start, max, orderby + (asc ? \" ASC\" : \" DESC\"));\n \t\t}\n \t\treturn null;\n@@ -115,19 +116,19 @@ public String refreshSession(String SID) {\n \t * kicks a user from the server, also from slaves if needed, this method is\n \t * only invoked by the connection administration UI\n \t * \n-\t * @param SID\n+\t * @param sid\n \t * @param streamid\n \t * @param serverId\n \t *            0 means the session is locally, otherwise we have to perform a\n \t *            REST call\n \t * @return - true if user has sufficient permissions, false otherwise\n \t */\n \t@Override\n-\tpublic boolean kickUserByStreamId(String SID, String streamid, long serverId) {\n+\tpublic boolean kickUserByStreamId(String sid, String streamid, long serverId) {\n \t\ttry {\n-\t\t\tLong userId = sessiondataDao.check(SID);\n+\t\t\tSessiondata sd = sessionDao.check(sid);\n \t\t\t// admins only\n-\t\t\tif (AuthLevelUtil.hasAdminLevel(userDao.getRights(userId))) {\n+\t\t\tif (AuthLevelUtil.hasAdminLevel(userDao.getRights(sd.getUserId()))) {\n \t\t\t\tif (serverId == 0) {\n \t\t\t\t\tClient rcl = sessionManager.getClientByStreamId(streamid, null);\n \n@@ -173,15 +174,15 @@ public boolean kickUserByStreamId(String SID, String streamid, long serverId) {\n \t * invoked from inside the conference room, that means all clients are on the\n \t * same server, no matter if clustered or not.\n \t * \n-\t * @param SID\n+\t * @param sid\n \t * @param publicSID\n \t * @return - true in case user have sufficient permissions, null otherwise\n \t */\n-\tpublic boolean kickUserByPublicSID(String SID, String publicSID) {\n+\tpublic boolean kickUserByPublicSID(String sid, String publicSID) {\n \t\ttry {\n-\t\t\tLong userId = sessiondataDao.check(SID);\n+\t\t\tSessiondata sd = sessionDao.check(sid);\n \t\t\t// users only\n-\t\t\tif (AuthLevelUtil.hasUserLevel(userDao.getRights(userId))) {\n+\t\t\tif (AuthLevelUtil.hasUserLevel(userDao.getRights(sd.getUserId()))) {\n \t\t\t\tClient rcl = sessionManager.getClientByPublicSID(publicSID, null);\n \n \t\t\t\tif (rcl == null) {\n@@ -208,11 +209,11 @@ public boolean kickUserByPublicSID(String SID, String publicSID) {\n \t}\n \n \t@Override\n-\tpublic boolean kickUserBySessionId(String SID, long userId, String sessionId) {\n+\tpublic boolean kickUserBySessionId(String sid, long userId, String sessionId) {\n \t\ttry {\n-\t\t\tLong users_id = sessiondataDao.check(SID);\n+\t\t\tSessiondata sd = sessionDao.check(sid);\n \t\t\t// admin only\n-\t\t\tif (AuthLevelUtil.hasAdminLevel(userDao.getRights(users_id))) {\n+\t\t\tif (AuthLevelUtil.hasAdminLevel(userDao.getRights(sd.getUserId()))) {\n \t\t\t\t((IApplication)Application.get(wicketApplicationName)).invalidateClient(userId, sessionId);\n \t\t\t\treturn true;\n \t\t\t}", "filename": "openmeetings-core/src/main/java/org/apache/openmeetings/core/remote/UserService.java"}, {"additions": 16, "raw_url": "https://github.com/apache/openmeetings/raw/3ce3cc1eb62528617e3bbafac36f06c6a6cea087/openmeetings-core/src/main/java/org/apache/openmeetings/core/remote/WhiteBoardService.java", "blob_url": "https://github.com/apache/openmeetings/blob/3ce3cc1eb62528617e3bbafac36f06c6a6cea087/openmeetings-core/src/main/java/org/apache/openmeetings/core/remote/WhiteBoardService.java", "sha": "b900075a4ddf871025380f101727c5e950b58ae2", "changes": 35, "status": "modified", "deletions": 19, "contents_url": "https://api.github.com/repos/apache/openmeetings/contents/openmeetings-core/src/main/java/org/apache/openmeetings/core/remote/WhiteBoardService.java?ref=3ce3cc1eb62528617e3bbafac36f06c6a6cea087", "patch": "@@ -41,6 +41,7 @@\n import org.apache.openmeetings.db.dto.room.WhiteboardObjectList;\n import org.apache.openmeetings.db.dto.room.WhiteboardSyncLockObject;\n import org.apache.openmeetings.db.entity.room.Client;\n+import org.apache.openmeetings.db.entity.server.Sessiondata;\n import org.apache.openmeetings.db.util.AuthLevelUtil;\n import org.apache.openmeetings.util.OmFileHelper;\n import org.red5.logging.Red5LoggerFactory;\n@@ -70,7 +71,7 @@\n \t@Autowired\n \tprivate WhiteBoardObjectListManagerById wbListManagerById;\n \t@Autowired\n-\tprivate SessiondataDao sessiondataDao;\n+\tprivate SessiondataDao sessionDao;\n \n \tpublic Long getNewWhiteboardId() {\n \t\ttry {\n@@ -142,20 +143,19 @@ public WhiteboardObjectList getRoomItemsBy() {\n \t * besides the Moderator to draw on the whiteboard, only a Moderator is\n \t * allowed to trigger this function\n \t * \n-\t * @param SID\n+\t * @param sid\n \t * @param publicSID\n \t * @param canDraw\n \t * @return null in case of success, false otherwise\n \t */\n-\tpublic boolean setCanDraw(String SID, String publicSID, boolean canDraw) {\n+\tpublic boolean setCanDraw(String sid, String publicSID, boolean canDraw) {\n \t\ttry {\n \t\t\tIConnection current = Red5.getConnectionLocal();\n \t\t\tString streamid = current.getClient().getId();\n \t\t\tClient currentClient = sessionManager.getClientByStreamId(streamid, null);\n \n-\t\t\tLong users_id = sessiondataDao.check(SID);\n-\n-\t\t\tif (AuthLevelUtil.hasUserLevel(userDao.getRights(users_id))) {\n+\t\t\tSessiondata sd = sessionDao.check(sid);\n+\t\t\tif (AuthLevelUtil.hasUserLevel(userDao.getRights(sd.getUserId()))) {\n \t\t\t\tif (currentClient.getIsMod()) {\n \t\t\t\t\tClient rcl = sessionManager.getClientByPublicSID(publicSID, null);\n \n@@ -177,15 +177,14 @@ public boolean setCanDraw(String SID, String publicSID, boolean canDraw) {\n \t\treturn false;\n \t}\n \n-\tpublic boolean setCanShare(String SID, String publicSID, boolean canShare) {\n+\tpublic boolean setCanShare(String sid, String publicSID, boolean canShare) {\n \t\ttry {\n \t\t\tIConnection current = Red5.getConnectionLocal();\n \t\t\tString streamid = current.getClient().getId();\n \t\t\tClient currentClient = sessionManager.getClientByStreamId(streamid, null);\n \n-\t\t\tLong users_id = sessiondataDao.check(SID);\n-\n-\t\t\tif (AuthLevelUtil.hasUserLevel(userDao.getRights(users_id))) {\n+\t\t\tSessiondata sd = sessionDao.check(sid);\n+\t\t\tif (AuthLevelUtil.hasUserLevel(userDao.getRights(sd.getUserId()))) {\n \t\t\t\tif (currentClient.getIsMod()) {\n \t\t\t\t\tClient rcl = sessionManager.getClientByPublicSID(publicSID, null);\n \n@@ -207,15 +206,14 @@ public boolean setCanShare(String SID, String publicSID, boolean canShare) {\n \t\treturn false;\n \t}\n \n-\tpublic boolean setCanRemote(String SID, String publicSID, boolean canRemote) {\n+\tpublic boolean setCanRemote(String sid, String publicSID, boolean canRemote) {\n \t\ttry {\n \t\t\tIConnection current = Red5.getConnectionLocal();\n \t\t\tString streamid = current.getClient().getId();\n \t\t\tClient currentClient = sessionManager.getClientByStreamId(streamid, null);\n \n-\t\t\tLong userId = sessiondataDao.check(SID);\n-\n-\t\t\tif (AuthLevelUtil.hasUserLevel(userDao.getRights(userId))) {\n+\t\t\tSessiondata sd = sessionDao.check(sid);\n+\t\t\tif (AuthLevelUtil.hasUserLevel(userDao.getRights(sd.getUserId()))) {\n \t\t\t\tif (currentClient.getIsMod()) {\n \t\t\t\t\tClient rcl = sessionManager.getClientByPublicSID(publicSID, null);\n \n@@ -237,16 +235,15 @@ public boolean setCanRemote(String SID, String publicSID, boolean canRemote) {\n \t\treturn false;\n \t}\n \n-    public boolean setCanGiveAudio(String SID, String publicSID, boolean canGiveAudio) {\n+\tpublic boolean setCanGiveAudio(String sid, String publicSID, boolean canGiveAudio) {\n \t\ttry {\n-            log.debug(\"[setCanGiveAudio] \" + SID + \", \" + publicSID + \", \" + canGiveAudio);\n+\t\t\tlog.debug(\"[setCanGiveAudio] \" + sid + \", \" + publicSID + \", \" + canGiveAudio);\n \t\t\tIConnection current = Red5.getConnectionLocal();\n \t\t\tString streamid = current.getClient().getId();\n \t\t\tClient currentClient = sessionManager.getClientByStreamId(streamid, null);\n \n-\t\t\tLong users_id = sessiondataDao.check(SID);\n-\n-\t\t\tif (AuthLevelUtil.hasUserLevel(userDao.getRights(users_id))) {\n+\t\t\tSessiondata sd = sessionDao.check(sid);\n+\t\t\tif (AuthLevelUtil.hasUserLevel(userDao.getRights(sd.getUserId()))) {\n \t\t\t\tif (currentClient.getIsMod()) {\n \t\t\t\t\tClient rcl = sessionManager.getClientByPublicSID(publicSID, null);\n ", "filename": "openmeetings-core/src/main/java/org/apache/openmeetings/core/remote/WhiteBoardService.java"}, {"additions": 7, "raw_url": "https://github.com/apache/openmeetings/raw/3ce3cc1eb62528617e3bbafac36f06c6a6cea087/openmeetings-core/src/main/java/org/apache/openmeetings/core/remote/red5/ScopeApplicationAdapter.java", "blob_url": "https://github.com/apache/openmeetings/blob/3ce3cc1eb62528617e3bbafac36f06c6a6cea087/openmeetings-core/src/main/java/org/apache/openmeetings/core/remote/red5/ScopeApplicationAdapter.java", "sha": "c4f81f57865a74182f51156c5da6fb0fe26f4ca1", "changes": 8, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/openmeetings/contents/openmeetings-core/src/main/java/org/apache/openmeetings/core/remote/red5/ScopeApplicationAdapter.java?ref=3ce3cc1eb62528617e3bbafac36f06c6a6cea087", "patch": "@@ -52,6 +52,7 @@\n import org.apache.openmeetings.db.dao.user.UserDao;\n import org.apache.openmeetings.db.dto.room.BrowserStatus;\n import org.apache.openmeetings.db.dto.room.RoomStatus;\n+import org.apache.openmeetings.db.dto.server.ClientSessionInfo;\n import org.apache.openmeetings.db.entity.file.FileItem;\n import org.apache.openmeetings.db.entity.log.ConferenceLog;\n import org.apache.openmeetings.db.entity.room.Client;\n@@ -1438,7 +1439,12 @@ private static Point getSize(FileItem fi) {\n \t}\n \t\n \tpublic void sendToWhiteboard(String uid, Long wbId, FileItem fi, String url) {\n-\t\tClient client = sessionManager.getClientByPublicSIDAnyServer(uid).getRcl();\n+\t\tClientSessionInfo csi = sessionManager.getClientByPublicSIDAnyServer(uid);\n+\t\tif (csi == null) {\n+\t\t\tlog.warn(\"No client was found to send Wml:: {}\", uid);\n+\t\t\treturn;\n+\t\t}\n+\t\tClient client = csi.getRcl();\n \t\t\n \t\tList<?> wbObject = new ArrayList<>();\n \t\tswitch (fi.getType()) {", "filename": "openmeetings-core/src/main/java/org/apache/openmeetings/core/remote/red5/ScopeApplicationAdapter.java"}, {"additions": 1, "raw_url": "https://github.com/apache/openmeetings/raw/3ce3cc1eb62528617e3bbafac36f06c6a6cea087/openmeetings-db/src/main/java/org/apache/openmeetings/db/dao/label/LabelDao.java", "blob_url": "https://github.com/apache/openmeetings/blob/3ce3cc1eb62528617e3bbafac36f06c6a6cea087/openmeetings-db/src/main/java/org/apache/openmeetings/db/dao/label/LabelDao.java", "sha": "eef0162a78a35a6c75848525bbae4e9148e55e57", "changes": 2, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/openmeetings/contents/openmeetings-db/src/main/java/org/apache/openmeetings/db/dao/label/LabelDao.java?ref=3ce3cc1eb62528617e3bbafac36f06c6a6cea087", "patch": "@@ -120,7 +120,7 @@ private static File getLangFile() {\n \t\treturn new File(OmFileHelper.getLanguagesDir(), OmFileHelper.nameOfLanguageFile);\r\n \t}\r\n \t\r\n-\tpublic static Class<?> getAppClass() throws ClassNotFoundException {\r\n+\tpublic static synchronized Class<?> getAppClass() throws ClassNotFoundException {\r\n \t\tif (APP == null) {\r\n \t\t\t//FIXME HACK to resolve package dependencies\r\n \t\t\tAPP = Class.forName(\"org.apache.openmeetings.web.app.Application\");\r", "filename": "openmeetings-db/src/main/java/org/apache/openmeetings/db/dao/label/LabelDao.java"}, {"additions": 23, "raw_url": "https://github.com/apache/openmeetings/raw/3ce3cc1eb62528617e3bbafac36f06c6a6cea087/openmeetings-db/src/main/java/org/apache/openmeetings/db/dao/server/SessiondataDao.java", "blob_url": "https://github.com/apache/openmeetings/blob/3ce3cc1eb62528617e3bbafac36f06c6a6cea087/openmeetings-db/src/main/java/org/apache/openmeetings/db/dao/server/SessiondataDao.java", "sha": "73a2e8c54659b4acba53762327278798e8e37f8a", "changes": 74, "status": "modified", "deletions": 51, "contents_url": "https://api.github.com/repos/apache/openmeetings/contents/openmeetings-db/src/main/java/org/apache/openmeetings/db/dao/server/SessiondataDao.java?ref=3ce3cc1eb62528617e3bbafac36f06c6a6cea087", "patch": "@@ -49,74 +49,46 @@\n \t@Autowired\n \tprivate ISessionManager sessionManager;\n \n-\t/**\n-\t * creates a new session-object in the database\n-\t * \n-\t * @return\n-\t */\n-\tpublic Sessiondata create() {\n+\tprivate static Sessiondata newInstance() {\n \t\tlog.debug(\"startsession :: startsession\");\n \n \t\tSessiondata sd = new Sessiondata();\n \t\tsd.setSessionId(UUID.randomUUID().toString());\n \t\tsd.setCreated(new Date());\n \t\tsd.setUserId(null);\n \n-\t\treturn update(sd);\n+\t\treturn sd;\n \t}\n-\n-\tpublic Sessiondata get(String SID) {\n-\t\ttry {\n-\t\t\tlog.debug(\"updateUser User SID: \" + SID);\n-\n-\t\t\tTypedQuery<Sessiondata> q = em.createNamedQuery(\"getSessionById\", Sessiondata.class).setParameter(\"sessionId\", SID);\n-\n-\t\t\tList<Sessiondata> fullList = q.getResultList();\n-\t\t\tif (fullList.size() == 0) {\n-\t\t\t\tlog.error(\"Could not find session to update: \" + SID);\n-\t\t\t\treturn null;\n-\t\t\t}\n-\n-\t\t\tSessiondata sd = fullList.get(0);\n-\n-\t\t\treturn sd;\n-\t\t} catch (Exception ex2) {\n-\t\t\tlog.error(\"[getSessionByHash]: \", ex2);\n-\t\t}\n-\t\treturn null;\n+\t\n+\t/**\n+\t * creates a new session-object in the database\n+\t * \n+\t * @return created Sessiondata with random UID\n+\t */\n+\tpublic Sessiondata create() {\n+\t\tlog.debug(\"create :: create\");\n+\t\treturn update(newInstance());\n \t}\n \n \t/**\n \t * \n \t * @param SID\n \t * @return\n \t */\n-\tpublic Long check(String SID) {\n-\t\ttry {\n-\t\t\tTypedQuery<Sessiondata> query = em.createNamedQuery(\"getSessionById\", Sessiondata.class).setParameter(\"sessionId\", SID);\n-\t\t\tList<Sessiondata> sessions = query.getResultList();\n+\tpublic Sessiondata check(String SID) {\n+\t\tList<Sessiondata> sessions = em.createNamedQuery(\"getSessionById\", Sessiondata.class).setParameter(\"sessionId\", SID).getResultList();\n \n-\t\t\tSessiondata sd = null;\n-\t\t\tif (sessions != null && sessions.size() > 0) {\n-\t\t\t\tsd = sessions.get(0);\n-\t\t\t}\n-\n-\t\t\t// Update the Session Object\n-\t\t\tif (sd != null) {\n-\t\t\t\tupdate(sd);\n-\t\t\t}\n+\t\tSessiondata sd = null;\n+\t\tif (sessions != null && sessions.size() > 0) {\n+\t\t\tsd = sessions.get(0);\n+\t\t}\n \n-\t\t\t// Checks if wether the Session or the User Object of that Session\n-\t\t\t// is set yet\n-\t\t\tif (sd == null || sd.getUserId() == null || sd.getUserId().equals(new Long(0))) {\n-\t\t\t\treturn new Long(0);\n-\t\t\t} else {\n-\t\t\t\treturn sd.getUserId();\n-\t\t\t}\n-\t\t} catch (Exception ex2) {\n-\t\t\tlog.error(\"[checkSession]: \", ex2);\n+\t\t// Checks if wether the Session or the User Object of that Session\n+\t\t// is set yet\n+\t\tif (sd == null || sd.getUserId() == null || sd.getUserId().equals(new Long(0))) {\n+\t\t\treturn newInstance();\n \t\t}\n-\t\treturn null;\n+\t\treturn update(sd);\n \t}\n \n \t/**\n@@ -288,7 +260,7 @@ public void clearSessionByRoomId(Long roomId) {\n \t\t\t\t}\n \t\t\t\tString SID = aux.substring(init_pos, end_pos);\n \n-\t\t\t\tSessiondata sData = get(SID);\n+\t\t\t\tSessiondata sData = check(SID);\n \t\t\t\tif (sData != null) {\n \t\t\t\t\tem.remove(sData);\n \t\t\t\t}", "filename": "openmeetings-db/src/main/java/org/apache/openmeetings/db/dao/server/SessiondataDao.java"}, {"additions": 4, "raw_url": "https://github.com/apache/openmeetings/raw/3ce3cc1eb62528617e3bbafac36f06c6a6cea087/openmeetings-db/src/main/java/org/apache/openmeetings/db/dao/user/UserDao.java", "blob_url": "https://github.com/apache/openmeetings/blob/3ce3cc1eb62528617e3bbafac36f06c6a6cea087/openmeetings-db/src/main/java/org/apache/openmeetings/db/dao/user/UserDao.java", "sha": "a9312420aed8272adb57b4f50cb5fe664b3e22b8", "changes": 6, "status": "modified", "deletions": 2, "contents_url": "https://api.github.com/repos/apache/openmeetings/contents/openmeetings-db/src/main/java/org/apache/openmeetings/db/dao/user/UserDao.java?ref=3ce3cc1eb62528617e3bbafac36f06c6a6cea087", "patch": "@@ -685,8 +685,10 @@ public User addUser(Set<Right> rights, String firstname, String login, String la\n \t\t}\n \t\tu.setDeleted(false);\n \t\tu.setPictureuri(pictureuri);\n-\t\tfor (Long grpId : groupIds) {\n-\t\t\tu.getGroupUsers().add(new GroupUser(groupDao.get(grpId), u));\n+\t\tif (groupIds != null) {\n+\t\t\tfor (Long grpId : groupIds) {\n+\t\t\t\tu.getGroupUsers().add(new GroupUser(groupDao.get(grpId), u));\n+\t\t\t}\n \t\t}\n \t\t\n \t\treturn update(u, null);", "filename": "openmeetings-db/src/main/java/org/apache/openmeetings/db/dao/user/UserDao.java"}, {"additions": 14, "raw_url": "https://github.com/apache/openmeetings/raw/3ce3cc1eb62528617e3bbafac36f06c6a6cea087/openmeetings-screenshare/src/main/java/org/apache/openmeetings/screen/webstart/CoreScreenShare.java", "blob_url": "https://github.com/apache/openmeetings/blob/3ce3cc1eb62528617e3bbafac36f06c6a6cea087/openmeetings-screenshare/src/main/java/org/apache/openmeetings/screen/webstart/CoreScreenShare.java", "sha": "1c29f57e4637d506337e10f6fc2b99cec4608b48", "changes": 36, "status": "modified", "deletions": 22, "contents_url": "https://api.github.com/repos/apache/openmeetings/contents/openmeetings-screenshare/src/main/java/org/apache/openmeetings/screen/webstart/CoreScreenShare.java?ref=3ce3cc1eb62528617e3bbafac36f06c6a6cea087", "patch": "@@ -657,31 +657,30 @@ public void resultReceived(IPendingServiceCall call) {\n \n \t\t\tString method = call.getServiceMethodName();\n \t\t\tObject o = call.getResult();\n+\t\t\tif (log.isTraceEnabled()) {\n+\t\t\t\tlog.trace(\"Result Map Type \" + (o == null ? null : o.getClass().getName()));\n+\t\t\t\tlog.trace(\"\" + o);\n+\t\t\t}\n+\t\t\t@SuppressWarnings(\"unchecked\")\n+\t\t\tMap<String, Object> returnMap = (o != null && o instanceof Map) ? (Map<String, Object>) o : new HashMap<String, Object>();\n \t\t\tlog.trace(\"call ### get Method Name \" + method);\n \t\t\tif (\"connect\".equals(method)) {\n-\t\t\t\tif (o instanceof Map) {\n-\t\t\t\t\t@SuppressWarnings(\"unchecked\")\n-\t\t\t\t\tMap<String, Object> map = (Map<String, Object>) o;\n-\t\t\t\t\tObject code = map.get(\"code\");\n-\t\t\t\t\tif (\"NetConnection.Connect.Rejected\".equals(code) || \"NetConnection.Connect.Failed\".equals(code)) {\n-\t\t\t\t\t\tframe.setStatus(String.format(\"Error: %s %s\", code, map.get(\"description\")));\n-\t\t\t\t\t\treturn;\n-\t\t\t\t\t}\n+\t\t\t\tObject code = returnMap.get(\"code\");\n+\t\t\t\tif (\"NetConnection.Connect.Rejected\".equals(code) || \"NetConnection.Connect.Failed\".equals(code)) {\n+\t\t\t\t\tframe.setStatus(String.format(\"Error: %s %s\", code, returnMap.get(\"description\")));\n+\t\t\t\t\treturn;\n \t\t\t\t}\n \t\t\t\tisConnected = true;\n \t\t\t\tsetConnectionAsSharingClient();\n \t\t\t} else if (\"setConnectionAsSharingClient\".equals(method)) {\n-\t\t\t\t@SuppressWarnings(\"unchecked\")\n-\t\t\t\tMap<String, Object> returnMap = (Map<String, Object>) o;\n-\n-\t\t\t\tif (o == null || !bool(returnMap.get(\"alreadyPublished\"))) {\n+\t\t\t\tif (!bool(returnMap.get(\"alreadyPublished\"))) {\n \t\t\t\t\tlog.trace(\"Stream not yet started - do it \");\n \n \t\t\t\t\tinstance.createStream(this);\n \t\t\t\t} else {\n \t\t\t\t\tlog.trace(\"The Stream was already started \");\n \t\t\t\t}\n-\t\t\t\tif (returnMap != null) {\n+\t\t\t\tif (o != null) {\n \t\t\t\t\tObject modus = returnMap.get(\"modus\");\n \t\t\t\t\tif (\"startStreaming\".equals(modus)) {\n \t\t\t\t\t\tframe.setSharingStatus(true, false);\n@@ -703,8 +702,8 @@ public void resultReceived(IPendingServiceCall call) {\n \t\t\t\t}\n \t\t\t} else if (\"createStream\".equals(method)) {\n \t\t\t\tif (startRecording || startStreaming) {\n-\t\t\t\t\tif (call.getResult() != null) {\n-\t\t\t\t\t\tgetCapture().setStreamId((Number)call.getResult());\n+\t\t\t\t\tif (o != null && o instanceof Number) {\n+\t\t\t\t\t\tgetCapture().setStreamId((Number)o);\n \t\t\t\t\t}\n \t\t\t\t\tlog.debug(\"createPublishStream result stream id: {}; name: {}\", getCapture().getStreamId(), publishName);\n \t\t\t\t\tinstance.publish(getCapture().getStreamId(), publishName, \"live\", this);\n@@ -717,13 +716,6 @@ public void resultReceived(IPendingServiceCall call) {\n \t\t\t\t\t}\n \t\t\t\t}\n \t\t\t} else if (\"screenSharerAction\".equals(method)) {\n-\t\t\t\tif (log.isTraceEnabled()) {\n-\t\t\t\t\tlog.trace(\"Result Map Type \" + (o == null ? null : o.getClass().getName()));\n-\t\t\t\t\tlog.trace(\"\" + o);\n-\t\t\t\t}\n-\n-\t\t\t\t@SuppressWarnings(\"unchecked\")\n-\t\t\t\tMap<String, Object> returnMap = (Map<String, Object>)o;\n \t\t\t\tObject result = returnMap.get(\"result\");\n \t\t\t\tif (\"stopAll\".equals(result)) {\n \t\t\t\t\tlog.trace(\"Stopping to stream, there is neither a Desktop Sharing nor Recording anymore\");", "filename": "openmeetings-screenshare/src/main/java/org/apache/openmeetings/screen/webstart/CoreScreenShare.java"}, {"additions": 12, "raw_url": "https://github.com/apache/openmeetings/raw/3ce3cc1eb62528617e3bbafac36f06c6a6cea087/openmeetings-service/src/main/java/org/apache/openmeetings/service/user/UserManager.java", "blob_url": "https://github.com/apache/openmeetings/blob/3ce3cc1eb62528617e3bbafac36f06c6a6cea087/openmeetings-service/src/main/java/org/apache/openmeetings/service/user/UserManager.java", "sha": "58f58c23314c4ba7e3c184fac47e616a8a3bc52e", "changes": 27, "status": "modified", "deletions": 15, "contents_url": "https://api.github.com/repos/apache/openmeetings/contents/openmeetings-service/src/main/java/org/apache/openmeetings/service/user/UserManager.java?ref=3ce3cc1eb62528617e3bbafac36f06c6a6cea087", "patch": "@@ -84,7 +84,7 @@\n \tprivate EntityManager em;\n \n \t@Autowired\n-\tprivate SessiondataDao sessiondataDao;\n+\tprivate SessiondataDao sessionDao;\n \t@Autowired\n \tprivate ConfigurationDao cfgDao;\n \t@Autowired\n@@ -143,14 +143,13 @@\n \tpublic User loginUserByRemoteHash(String SID, String remoteHash) {\n \t\ttry {\n \n-\t\t\tSessiondata sessionData = sessiondataDao\n-\t\t\t\t\t.get(remoteHash);\n+\t\t\tSessiondata sessionData = sessionDao.check(remoteHash);\n \n \t\t\tif (sessionData != null) {\n \n \t\t\t\tUser u = userDao.get(sessionData.getUserId());\n \n-\t\t\t\tsessiondataDao.updateUserWithoutSession(SID, u.getId());\n+\t\t\t\tsessionDao.updateUserWithoutSession(SID, u.getId());\n \n \t\t\t\treturn u;\n \t\t\t}\n@@ -163,7 +162,7 @@ public User loginUserByRemoteHash(String SID, String remoteHash) {\n \n \t@Override\n \tpublic Long logout(String SID, long userId) {\n-\t\tsessiondataDao.updateUser(SID, null, false, 0);\n+\t\tsessionDao.updateUser(SID, null, false, 0);\n \t\treturn -12L;\n \t}\n \n@@ -412,19 +411,18 @@ public Long registerUserInit(Set<Right> rights, String login, String password, S\n \t}\n \n \t/**\n-\t * @param admin\n+\t * @param sid\n \t * @param room_id\n \t * @return\n \t */\n \t@Override\n-\tpublic boolean kickUserByStreamId(String SID, Long room_id) {\n+\tpublic boolean kickUserByStreamId(String sid, Long room_id) {\n \t\ttry {\n-\t\t\tLong users_id = sessiondataDao.check(SID);\n-\n+\t\t\tSessiondata sd = sessionDao.check(sid);\n \t\t\t// admins only\n-\t\t\tif (AuthLevelUtil.hasAdminLevel(userDao.getRights(users_id))) {\n+\t\t\tif (AuthLevelUtil.hasAdminLevel(userDao.getRights(sd.getUserId()))) {\n \n-\t\t\t\tsessiondataDao.clearSessionByRoomId(room_id);\n+\t\t\t\tsessionDao.clearSessionByRoomId(room_id);\n \n \t\t\t\tfor (Client rcl : sessionManager.getClientListByRoom(room_id)) {\n \t\t\t\t\tif (rcl == null) {\n@@ -450,12 +448,11 @@ public boolean kickUserByStreamId(String SID, Long room_id) {\n \t}\n \n \t@Override\n-\tpublic boolean kickUserByPublicSID(String SID, String publicSID) {\n+\tpublic boolean kickUserByPublicSID(String sid, String publicSID) {\n \t\ttry {\n-\t\t\tLong userId = sessiondataDao.check(SID);\n-\n+\t\t\tSessiondata sd = sessionDao.check(sid);\n \t\t\t// admins only\n-\t\t\tif (AuthLevelUtil.hasWebServiceLevel(userDao.getRights(userId))) {\n+\t\t\tif (AuthLevelUtil.hasWebServiceLevel(userDao.getRights(sd.getUserId()))) {\n \t\t\t\tClient rcl = sessionManager.getClientByPublicSID(publicSID, null);\n \n \t\t\t\tif (rcl == null) {", "filename": "openmeetings-service/src/main/java/org/apache/openmeetings/service/user/UserManager.java"}, {"additions": 5, "raw_url": "https://github.com/apache/openmeetings/raw/3ce3cc1eb62528617e3bbafac36f06c6a6cea087/openmeetings-web/src/main/java/org/apache/openmeetings/web/app/Application.java", "blob_url": "https://github.com/apache/openmeetings/blob/3ce3cc1eb62528617e3bbafac36f06c6a6cea087/openmeetings-web/src/main/java/org/apache/openmeetings/web/app/Application.java", "sha": "bd91e077238af20311a26a6806a06c3756e5f30a", "changes": 7, "status": "modified", "deletions": 2, "contents_url": "https://api.github.com/repos/apache/openmeetings/contents/openmeetings-web/src/main/java/org/apache/openmeetings/web/app/Application.java?ref=3ce3cc1eb62528617e3bbafac36f06c6a6cea087", "patch": "@@ -219,9 +219,12 @@ public static void removeOnlineUser(Client c) {\n \t\n \t@Override\n \tpublic org.apache.openmeetings.db.entity.room.Client updateClient(org.apache.openmeetings.db.entity.room.Client rcl) {\n+\t\tif (rcl == null) {\n+\t\t\treturn null;\n+\t\t}\n \t\tClient client = getOnlineClient(rcl.getPublicSID());\n-\t\tif (rcl == null || client == null) {\n-\t\t\treturn rcl;\n+\t\tif (client == null) {\n+\t\t\treturn null;\n \t\t}\n \t\trcl.setIsSuperModerator(client.hasRight(Right.superModerator));\n \t\trcl.setIsMod(client.hasRight(Right.moderator));", "filename": "openmeetings-web/src/main/java/org/apache/openmeetings/web/app/Application.java"}, {"additions": 8, "raw_url": "https://github.com/apache/openmeetings/raw/3ce3cc1eb62528617e3bbafac36f06c6a6cea087/openmeetings-web/src/main/java/org/apache/openmeetings/web/app/WebSession.java", "blob_url": "https://github.com/apache/openmeetings/blob/3ce3cc1eb62528617e3bbafac36f06c6a6cea087/openmeetings-web/src/main/java/org/apache/openmeetings/web/app/WebSession.java", "sha": "8f87e209d0d4eb52acca2a5f4911f5dfa305143f", "changes": 17, "status": "modified", "deletions": 9, "contents_url": "https://api.github.com/repos/apache/openmeetings/contents/openmeetings-web/src/main/java/org/apache/openmeetings/web/app/WebSession.java?ref=3ce3cc1eb62528617e3bbafac36f06c6a6cea087", "patch": "@@ -202,8 +202,8 @@ public boolean signIn(String secureHash, boolean markUsed) {\n \t\t}\n \t\tif (!soapLogin.isUsed() || soapLogin.getAllowSameURLMultipleTimes()) {\n \t\t\tSessiondataDao sessionDao = getBean(SessiondataDao.class);\n-\t\t\tSessiondata sd = sessionDao.get(soapLogin.getSessionHash());\n-\t\t\tif (sd != null && sd.getXml() != null) {\n+\t\t\tSessiondata sd = sessionDao.check(soapLogin.getSessionHash());\n+\t\t\tif (sd.getXml() != null) {\n \t\t\t\tRemoteSessionObject remoteUser = RemoteSessionObject.fromXml(sd.getXml());\n \t\t\t\tif (remoteUser != null && !Strings.isEmpty(remoteUser.getExternalUserId())) {\n \t\t\t\t\tUserDao userDao = getBean(UserDao.class);\n@@ -330,17 +330,16 @@ public static long getLanguage() {\n \t\n \tpublic String getValidatedSid() {\n \t\tSessiondataDao sessionDao = getBean(SessiondataDao.class);\n-\t\tLong _userId = sessionDao.check(SID);\n-\t\tif (_userId == null || !_userId.equals(userId)) {\n-\t\t\tSessiondata sessionData = sessionDao.get(SID);\n-\t\t\tif (sessionData == null) {\n-\t\t\t\tsessionData = sessionDao.create();\n+\t\tSessiondata sd = sessionDao.check(SID);\n+\t\tif (sd.getUserId() == null || !sd.getUserId().equals(userId)) {\n+\t\t\tif (sd.getId() == null) {\n+\t\t\t\tsd = sessionDao.create();\n \t\t\t}\n-\t\t\tif (!sessionDao.updateUser(sessionData.getSessionId(), userId, false, languageId)) {\n+\t\t\tif (!sessionDao.updateUser(sd.getSessionId(), userId, false, languageId)) {\n \t\t\t\t//something bad, force user to re-login\n \t\t\t\tinvalidate();\n \t\t\t} else {\n-\t\t\t\tSID = sessionData.getSessionId();\n+\t\t\t\tSID = sd.getSessionId();\n \t\t\t}\n \t\t}\n \t\treturn SID;", "filename": "openmeetings-web/src/main/java/org/apache/openmeetings/web/app/WebSession.java"}, {"additions": 25, "raw_url": "https://github.com/apache/openmeetings/raw/3ce3cc1eb62528617e3bbafac36f06c6a6cea087/openmeetings-webservice/src/main/java/org/apache/openmeetings/webservice/CalendarWebService.java", "blob_url": "https://github.com/apache/openmeetings/blob/3ce3cc1eb62528617e3bbafac36f06c6a6cea087/openmeetings-webservice/src/main/java/org/apache/openmeetings/webservice/CalendarWebService.java", "sha": "e68cf130d23320080fddca870dcdb801dd8e39a4", "changes": 49, "status": "modified", "deletions": 24, "contents_url": "https://api.github.com/repos/apache/openmeetings/contents/openmeetings-webservice/src/main/java/org/apache/openmeetings/webservice/CalendarWebService.java?ref=3ce3cc1eb62528617e3bbafac36f06c6a6cea087", "patch": "@@ -43,6 +43,7 @@\n import org.apache.openmeetings.db.dao.user.UserDao;\n import org.apache.openmeetings.db.dto.calendar.AppointmentDTO;\n import org.apache.openmeetings.db.entity.calendar.Appointment;\n+import org.apache.openmeetings.db.entity.server.Sessiondata;\n import org.apache.openmeetings.db.entity.user.User.Right;\n import org.apache.openmeetings.db.util.AuthLevelUtil;\n import org.apache.openmeetings.webservice.error.ServiceException;\n@@ -92,9 +93,9 @@\n \t{\n \t\tlog.debug(\"range : startdate - \" + start.getTime() + \", enddate - \" + end.getTime());\n \t\ttry {\n-\t\t\tLong userId = sessionDao.check(sid);\n-\t\t\tif (AuthLevelUtil.hasUserLevel(userDao.getRights(userId))) {\n-\t\t\t\treturn AppointmentDTO.list(appointmentDao.getInRange(userId, start.getTime(), end.getTime()));\n+\t\t\tSessiondata sd = sessionDao.check(sid);\n+\t\t\tif (AuthLevelUtil.hasUserLevel(userDao.getRights(sd.getUserId()))) {\n+\t\t\t\treturn AppointmentDTO.list(appointmentDao.getInRange(sd.getUserId(), start.getTime(), end.getTime()));\n \t\t\t} else {\n \t\t\t\tthrow new ServiceException(\"Insufficient permissions\"); //TODO code -26\n \t\t\t}\n@@ -132,8 +133,8 @@\n \t{\n \t\tlog.debug(\"rangeForUser : startdate - \" + start.getTime() + \", enddate - \" + end.getTime());\n \t\ttry {\n-\t\t\tLong authUserId = sessionDao.check(sid);\n-\t\t\tif (AuthLevelUtil.hasWebServiceLevel(userDao.getRights(authUserId))) {\n+\t\t\tSessiondata sd = sessionDao.check(sid);\n+\t\t\tif (AuthLevelUtil.hasWebServiceLevel(userDao.getRights(sd.getUserId()))) {\n \t\t\t\treturn AppointmentDTO.list(appointmentDao.getInRange(userid, start.getTime(), end.getTime()));\n \t\t\t} else {\n \t\t\t\tthrow new ServiceException(\"Insufficient permissions\"); //TODO code -26\n@@ -158,9 +159,9 @@\n \t@Path(\"/next\")\n \tpublic AppointmentDTO next(@QueryParam(\"sid\") @WebParam(name=\"sid\") String sid) throws ServiceException {\n \t\ttry {\n-\t\t\tLong userId = sessionDao.check(sid);\n-\t\t\tif (AuthLevelUtil.hasUserLevel(userDao.getRights(userId))) {\n-\t\t\t\tAppointment a = appointmentDao.getNext(userId, new Date());\n+\t\t\tSessiondata sd = sessionDao.check(sid);\n+\t\t\tif (AuthLevelUtil.hasUserLevel(userDao.getRights(sd.getUserId()))) {\n+\t\t\t\tAppointment a = appointmentDao.getNext(sd.getUserId(), new Date());\n \t\t\t\treturn a == null ? null : new AppointmentDTO(a);\n \t\t\t} else {\n \t\t\t\tthrow new ServiceException(\"Insufficient permissions\"); //TODO code -26\n@@ -188,8 +189,8 @@ public AppointmentDTO next(@QueryParam(\"sid\") @WebParam(name=\"sid\") String sid)\n \t@Path(\"/next/{userid}\")\n \tpublic AppointmentDTO nextForUser(@QueryParam(\"sid\") @WebParam(name=\"sid\") String sid, @PathParam(\"userid\") @WebParam(name=\"userid\") long userid) throws ServiceException {\n \t\ttry {\n-\t\t\tLong authUserId = sessionDao.check(sid);\n-\t\t\tif (AuthLevelUtil.hasWebServiceLevel(userDao.getRights(authUserId))) {\n+\t\t\tSessiondata sd = sessionDao.check(sid);\n+\t\t\tif (AuthLevelUtil.hasWebServiceLevel(userDao.getRights(sd.getUserId()))) {\n \t\t\t\tAppointment a = appointmentDao.getNext(userid, new Date());\n \t\t\t\treturn a == null ? null : new AppointmentDTO(a);\n \t\t\t} else {\n@@ -216,9 +217,9 @@ public AppointmentDTO nextForUser(@QueryParam(\"sid\") @WebParam(name=\"sid\") Strin\n \t@Path(\"/room/{roomid}\")\n \tpublic AppointmentDTO getByRoom(@QueryParam(\"sid\") @WebParam(name=\"sid\") String sid, @PathParam(\"roomid\") @WebParam(name=\"roomid\") long roomid) throws ServiceException {\n \t\ttry {\n-\t\t\tLong userId = sessionDao.check(sid);\n-\t\t\tif (AuthLevelUtil.hasUserLevel(userDao.getRights(userId))) {\n-\t\t\t\tAppointment app = appointmentDao.getByRoom(userId, roomid);\n+\t\t\tSessiondata sd = sessionDao.check(sid);\n+\t\t\tif (AuthLevelUtil.hasUserLevel(userDao.getRights(sd.getUserId()))) {\n+\t\t\t\tAppointment app = appointmentDao.getByRoom(sd.getUserId(), roomid);\n \t\t\t\tif (app != null) {\n \t\t\t\t\treturn new AppointmentDTO(app);\n \t\t\t\t}\n@@ -249,9 +250,9 @@ public AppointmentDTO getByRoom(@QueryParam(\"sid\") @WebParam(name=\"sid\") String\n \t@Path(\"/title/{title}\")\n \tpublic List<AppointmentDTO> getByTitle(@QueryParam(\"sid\") @WebParam(name=\"sid\") String sid, @PathParam(\"title\") @WebParam(name=\"title\") String title) throws ServiceException {\n \t\ttry {\n-\t\t\tLong userId = sessionDao.check(sid);\n-\t\t\tif (AuthLevelUtil.hasUserLevel(userDao.getRights(userId))) {\n-\t\t\t\treturn AppointmentDTO.list(appointmentDao.searchAppointmentsByTitle(userId, title));\n+\t\t\tSessiondata sd = sessionDao.check(sid);\n+\t\t\tif (AuthLevelUtil.hasUserLevel(userDao.getRights(sd.getUserId()))) {\n+\t\t\t\treturn AppointmentDTO.list(appointmentDao.searchAppointmentsByTitle(sd.getUserId(), title));\n \t\t\t} else {\n \t\t\t\tthrow new ServiceException(\"Insufficient permissions\"); //TODO code -26\n \t\t\t}\n@@ -281,12 +282,12 @@ public AppointmentDTO save(@QueryParam(\"sid\") @WebParam(name=\"sid\") String sid,\n \t\tlog.debug(\"save SID:\" + sid);\n \n \t\ttry {\n-\t\t\tLong userId = sessionDao.check(sid);\n-\t\t\tlog.debug(\"save userId:\" + userId);\n+\t\t\tSessiondata sd = sessionDao.check(sid);\n+\t\t\tlog.debug(\"save userId:\" + sd);\n \n-\t\t\tif (AuthLevelUtil.hasUserLevel(userDao.getRights(userId))) {\n+\t\t\tif (AuthLevelUtil.hasUserLevel(userDao.getRights(sd.getUserId()))) {\n \t\t\t\tAppointment a = appointment.get(userDao, appointmentDao);\n-\t\t\t\treturn new AppointmentDTO(appointmentDao.update(a, userId));\n+\t\t\t\treturn new AppointmentDTO(appointmentDao.update(a, sd.getUserId()));\n \t\t\t} else {\n \t\t\t\tlog.error(\"save : wrong user level\");\n \t\t\t\tthrow new ServiceException(\"Insufficient permissions\"); //TODO code -26\n@@ -318,21 +319,21 @@ public AppointmentDTO save(@QueryParam(\"sid\") @WebParam(name=\"sid\") String sid,\n \t@Path(\"/{id}\")\n \tpublic void delete(@QueryParam(\"sid\") @WebParam(name=\"sid\") String sid, @PathParam(\"id\") @WebParam(name=\"id\") Long id) throws ServiceException {\n \t\ttry {\n-\t\t\tLong userId = sessionDao.check(sid);\n-\t\t\tSet<Right> rights = userDao.getRights(userId);\n+\t\t\tSessiondata sd = sessionDao.check(sid);\n+\t\t\tSet<Right> rights = userDao.getRights(sd.getUserId());\n \n \t\t\tAppointment a = appointmentDao.get(id);\n \t\t\tif (AuthLevelUtil.hasWebServiceLevel(rights) || AuthLevelUtil.hasAdminLevel(rights)) {\n \t\t\t\t// fine\n \t\t\t} else if (AuthLevelUtil.hasUserLevel(rights)) {\n \t\t\t\t// check if the appointment belongs to the current user\n-\t\t\t\tif (!a.getOwner().getId().equals(userId)) {\n+\t\t\t\tif (!a.getOwner().getId().equals(sd.getUserId())) {\n \t\t\t\t\tthrow new ServiceException(\"The Appointment cannot be updated by the given user\");\n \t\t\t\t}\n \t\t\t} else {\n \t\t\t\tthrow new ServiceException(\"Not allowed to preform that action, Authenticate the SID first\");\n \t\t\t}\n-\t\t\tappointmentDao.delete(a, userId);\n+\t\t\tappointmentDao.delete(a, sd.getUserId());\n \t\t} catch (ServiceException err) {\n \t\t\tthrow err;\n \t\t} catch (Exception err) {", "filename": "openmeetings-webservice/src/main/java/org/apache/openmeetings/webservice/CalendarWebService.java"}, {"additions": 7, "raw_url": "https://github.com/apache/openmeetings/raw/3ce3cc1eb62528617e3bbafac36f06c6a6cea087/openmeetings-webservice/src/main/java/org/apache/openmeetings/webservice/ErrorWebService.java", "blob_url": "https://github.com/apache/openmeetings/blob/3ce3cc1eb62528617e3bbafac36f06c6a6cea087/openmeetings-webservice/src/main/java/org/apache/openmeetings/webservice/ErrorWebService.java", "sha": "87599ea3a22c80efec6225b446662a4d3ffeef59", "changes": 13, "status": "modified", "deletions": 6, "contents_url": "https://api.github.com/repos/apache/openmeetings/contents/openmeetings-webservice/src/main/java/org/apache/openmeetings/webservice/ErrorWebService.java?ref=3ce3cc1eb62528617e3bbafac36f06c6a6cea087", "patch": "@@ -38,6 +38,7 @@\n import org.apache.openmeetings.db.dao.server.SessiondataDao;\n import org.apache.openmeetings.db.dto.basic.ServiceResult;\n import org.apache.openmeetings.db.entity.basic.ErrorValue;\n+import org.apache.openmeetings.db.entity.server.Sessiondata;\n import org.red5.logging.Red5LoggerFactory;\n import org.slf4j.Logger;\n import org.springframework.beans.factory.annotation.Autowired;\n@@ -105,11 +106,11 @@ public ServiceResult get(@WebParam(name=\"id\") @PathParam(\"id\") long id, @WebPara\n \t@POST\n \t@Path(\"/report/\")\n \tpublic void report(@WebParam(name=\"sid\") @QueryParam(\"sid\") String sid, @WebParam(name=\"message\") @QueryParam(\"message\") String message) {\n-    \tif (sid != null && message != null) {\n-\t    \tLong userId = sessionDao.check(sid);\n-\t    \tif (userId != null && userId != 0) {\n-\t    \t\tlog.error(\"[CLIENT MESSAGE] \" + message);\n-\t    \t}\n-    \t}\n+\t\tif (sid != null && message != null) {\n+\t\t\tSessiondata sd = sessionDao.check(sid);\n+\t\t\tif (sd.getId() != null) {\n+\t\t\t\tlog.error(\"[CLIENT MESSAGE] \" + message);\n+\t\t\t}\n+\t\t}\n \t}\n }", "filename": "openmeetings-webservice/src/main/java/org/apache/openmeetings/webservice/ErrorWebService.java"}, {"additions": 21, "raw_url": "https://github.com/apache/openmeetings/raw/3ce3cc1eb62528617e3bbafac36f06c6a6cea087/openmeetings-webservice/src/main/java/org/apache/openmeetings/webservice/FileWebService.java", "blob_url": "https://github.com/apache/openmeetings/blob/3ce3cc1eb62528617e3bbafac36f06c6a6cea087/openmeetings-webservice/src/main/java/org/apache/openmeetings/webservice/FileWebService.java", "sha": "8ba3dd74dba0e21cc4e0f3e85f53c205bdb054e0", "changes": 38, "status": "modified", "deletions": 17, "contents_url": "https://api.github.com/repos/apache/openmeetings/contents/openmeetings-webservice/src/main/java/org/apache/openmeetings/webservice/FileWebService.java?ref=3ce3cc1eb62528617e3bbafac36f06c6a6cea087", "patch": "@@ -54,6 +54,7 @@\n import org.apache.openmeetings.db.dto.file.FileExplorerObject;\n import org.apache.openmeetings.db.dto.file.LibraryPresentation;\n import org.apache.openmeetings.db.entity.file.FileExplorerItem;\n+import org.apache.openmeetings.db.entity.server.Sessiondata;\n import org.apache.openmeetings.db.entity.user.User.Right;\n import org.apache.openmeetings.db.util.AuthLevelUtil;\n import org.apache.openmeetings.util.OmFileHelper;\n@@ -103,12 +104,13 @@\n \t@Path(\"/{id}\")\n \tpublic ServiceResult delete(@QueryParam(\"sid\") @WebParam(name=\"sid\") String sid, @PathParam(\"id\") @WebParam(name=\"id\") Long id) throws ServiceException {\n \t\ttry {\n-\t\t\tLong userId = sessionDao.check(sid);\n+\t\t\tSessiondata sd = sessionDao.check(sid);\n \n \t\t\tFileExplorerItem f = fileDao.get(id);\n \t\t\tif (f == null) {\n \t\t\t\treturn new ServiceResult(-1L, \"Bad id\", Type.ERROR);\n \t\t\t}\n+\t\t\tLong userId = sd.getUserId();\n \t\t\tSet<Right> rights = userDao.getRights(userId);\n \t\t\tif (AuthLevelUtil.hasWebServiceLevel(rights)\n \t\t\t\t|| (AuthLevelUtil.hasUserLevel(rights) && userId.equals(f.getOwnerId())))\n@@ -145,9 +147,9 @@ public ServiceResult deleteExternal(\n \t\t\t) throws ServiceException\n \t{\n \t\ttry {\n-\t\t\tLong userId = sessionDao.check(sid);\n+\t\t\tSessiondata sd = sessionDao.check(sid);\n \t\t\t\n-\t\t\tif (AuthLevelUtil.hasWebServiceLevel(userDao.getRights(userId))) {\n+\t\t\tif (AuthLevelUtil.hasWebServiceLevel(userDao.getRights(sd.getUserId()))) {\n \t\t\t\tFileExplorerItem f = fileDao.get(externalId, externalType);\n \t\t\t\tfileDao.delete(f);\n \t\t\t\treturn new ServiceResult(f.getId(), \"Deleted\", Type.SUCCESS);\n@@ -181,7 +183,8 @@ public FileExplorerItemDTO add(@WebParam(name=\"sid\") @QueryParam(\"sid\") String s\n \t\t\t) throws ServiceException\n \t{\n \t\ttry {\n-\t\t\tLong userId = sessionDao.check(sid);\n+\t\t\tSessiondata sd = sessionDao.check(sid);\n+\t\t\tLong userId = sd.getUserId();\n \n \t\t\tFileExplorerItem f = file == null ? null : file.get();\n \t\t\tif (f == null || f.getId() != null) {\n@@ -219,20 +222,19 @@ public FileExplorerItemDTO add(@WebParam(name=\"sid\") @QueryParam(\"sid\") String s\n \t/**\n \t * Get a LibraryPresentation-Object for a certain file\n \t * \n-\t * @param SID\n+\t * @param sid\n+\t *            The SID of the User. This SID must be marked as logged in\n \t * @param parentFolder\n \t * \n \t * @return - LibraryPresentation-Object for a certain file\n \t * @throws ServiceException\n \t */\n-\tpublic LibraryPresentation getPresentationPreviewFileExplorer(String SID, String parentFolder)\n+\tpublic LibraryPresentation getPresentationPreviewFileExplorer(String sid, String parentFolder)\n \t\t\tthrows ServiceException {\n \n \t\ttry {\n-\n-\t\t\tLong userId = sessionDao.check(SID);\n-\n-\t\t\tif (AuthLevelUtil.hasWebServiceLevel(userDao.getRights(userId))) {\n+\t\t\tSessiondata sd = sessionDao.check(sid);\n+\t\t\tif (AuthLevelUtil.hasWebServiceLevel(userDao.getRights(sd.getUserId()))) {\n \n \t\t\t\tFile working_dir = new File(OmFileHelper.getUploadProfilesDir(), parentFolder);\n \t\t\t\tlog.debug(\"############# working_dir : \" + working_dir);\n@@ -269,7 +271,7 @@ private long getSize(List<FileExplorerItem> list) {\n \t * \n \t * @param sid\n \t *            The SID of the User. This SID must be marked as logged in\n-\t * @param id\n+\t * @param roomId\n \t *            Room Id\n \t * @return - File Explorer Object by a given Room\n \t * @throws ServiceException\n@@ -282,7 +284,8 @@ public FileExplorerObject getRoom(@WebParam(name=\"sid\") @QueryParam(\"sid\") Strin\n \t\t\t) throws ServiceException\n \t{\n \t\ttry {\n-\t\t\tLong userId = sessionDao.check(sid);\n+\t\t\tSessiondata sd = sessionDao.check(sid);\n+\t\t\tLong userId = sd.getUserId();\n \n \t\t\tif (AuthLevelUtil.hasUserLevel(userDao.getRights(userId))) {\n \t\t\t\tlog.debug(\"roomId \" + roomId);\n@@ -331,7 +334,8 @@ public FileExplorerObject getRoom(@WebParam(name=\"sid\") @QueryParam(\"sid\") Strin\n \t\t\t) throws ServiceException\n \t{\n \t\ttry {\n-\t\t\tLong userId = sessionDao.check(sid);\n+\t\t\tSessiondata sd = sessionDao.check(sid);\n+\t\t\tLong userId = sd.getUserId();\n \n \t\t\tif (AuthLevelUtil.hasUserLevel(userDao.getRights(userId))) {\n \t\t\t\tlog.debug(\"getRoomByParent \" + parentId);\n@@ -379,9 +383,8 @@ public FileExplorerItemDTO rename(@WebParam(name=\"sid\") @QueryParam(\"sid\") Strin\n \t\t\t, @WebParam(name=\"name\") @PathParam(\"name\") String name) throws ServiceException\n \t{\n \t\ttry {\n-\t\t\tLong userId = sessionDao.check(sid);\n-\n-\t\t\tif (AuthLevelUtil.hasUserLevel(userDao.getRights(userId))) {\n+\t\t\tSessiondata sd = sessionDao.check(sid);\n+\t\t\tif (AuthLevelUtil.hasUserLevel(userDao.getRights(sd.getUserId()))) {\n \t\t\t\t// FIXME TODO: check if this user is allowed to change this file\n \n \t\t\t\tlog.debug(\"rename \" + id);\n@@ -419,7 +422,8 @@ public FileExplorerItemDTO move(@WebParam(name=\"sid\") @QueryParam(\"sid\") String\n \t\t\t, @WebParam(name=\"parentid\") @PathParam(\"parentid\") long parentId) throws ServiceException\n \t{\n \t\ttry {\n-\t\t\tLong userId = sessionDao.check(sid);\n+\t\t\tSessiondata sd = sessionDao.check(sid);\n+\t\t\tLong userId = sd.getUserId();\n \t\t\tif (AuthLevelUtil.hasUserLevel(userDao.getRights(userId))) {\n \t\t\t\t// FIXME TODO A test is required that checks if the user is allowed to move the file\n \t\t\t\tlog.debug(\"move \" + id);", "filename": "openmeetings-webservice/src/main/java/org/apache/openmeetings/webservice/FileWebService.java"}, {"additions": 15, "raw_url": "https://github.com/apache/openmeetings/raw/3ce3cc1eb62528617e3bbafac36f06c6a6cea087/openmeetings-webservice/src/main/java/org/apache/openmeetings/webservice/GroupWebService.java", "blob_url": "https://github.com/apache/openmeetings/blob/3ce3cc1eb62528617e3bbafac36f06c6a6cea087/openmeetings-webservice/src/main/java/org/apache/openmeetings/webservice/GroupWebService.java", "sha": "617b98697f607678cdc9b489e07e1e22c6ed51e8", "changes": 24, "status": "modified", "deletions": 9, "contents_url": "https://api.github.com/repos/apache/openmeetings/contents/openmeetings-webservice/src/main/java/org/apache/openmeetings/webservice/GroupWebService.java?ref=3ce3cc1eb62528617e3bbafac36f06c6a6cea087", "patch": "@@ -49,6 +49,7 @@\n import org.apache.openmeetings.db.dto.user.UserSearchResult;\n import org.apache.openmeetings.db.entity.room.Room;\n import org.apache.openmeetings.db.entity.room.RoomGroup;\n+import org.apache.openmeetings.db.entity.server.Sessiondata;\n import org.apache.openmeetings.db.entity.user.Group;\n import org.apache.openmeetings.db.entity.user.GroupUser;\n import org.apache.openmeetings.db.entity.user.User;\n@@ -97,7 +98,8 @@\n \t@POST\n \t@Path(\"/\")\n \tpublic ServiceResult add(@QueryParam(\"sid\") @WebParam(name=\"sid\") String sid, @QueryParam(\"name\") @WebParam(name=\"name\") String name) throws ServiceException {\n-\t\tLong userId = sessionDao.check(sid);\n+\t\tSessiondata sd = sessionDao.check(sid);\n+\t\tLong userId = sd.getUserId();\n \t\tif (AuthLevelUtil.hasWebServiceLevel(userDao.getRights(userId))) {\n \t\t\tGroup o = new Group();\n \t\t\to.setName(name);\n@@ -119,8 +121,8 @@ public ServiceResult add(@QueryParam(\"sid\") @WebParam(name=\"sid\") String sid, @Q\n \t@GET\n \t@Path(\"/\")\n \tpublic List<Group> get(@QueryParam(\"sid\") @WebParam(name=\"sid\") String sid) throws ServiceException {\n-\t\tLong userId = sessionDao.check(sid);\n-\t\tif (AuthLevelUtil.hasWebServiceLevel(userDao.getRights(userId))) {\n+\t\tSessiondata sd = sessionDao.check(sid);\n+\t\tif (AuthLevelUtil.hasWebServiceLevel(userDao.getRights(sd.getUserId()))) {\n \t\t\treturn groupDao.get(0, Integer.MAX_VALUE);\n \t\t} else {\n \t\t\tlog.error(\"Insufficient permissions\");\n@@ -149,7 +151,8 @@ public ServiceResult addUser(\n \t\t\t) throws ServiceException\n \t{\n \t\ttry {\n-\t\t\tLong authUserId = sessionDao.check(sid);\n+\t\t\tSessiondata sd = sessionDao.check(sid);\n+\t\t\tLong authUserId = sd.getUserId();\n \t\t\tif (AuthLevelUtil.hasWebServiceLevel(userDao.getRights(authUserId))) {\n \t\t\t\tif (!groupUserDao.isUserInGroup(id, userid)) {\n \t\t\t\t\tUser u = userDao.get(userid);\n@@ -187,7 +190,8 @@ public ServiceResult removeUser(\n \t\t\t) throws ServiceException\n \t{\n \t\ttry {\n-\t\t\tLong authUserId = sessionDao.check(sid);\n+\t\t\tSessiondata sd = sessionDao.check(sid);\n+\t\t\tLong authUserId = sd.getUserId();\n \t\t\tif (AuthLevelUtil.hasWebServiceLevel(userDao.getRights(authUserId))) {\n \t\t\t\tif (groupUserDao.isUserInGroup(id, userid)) {\n \t\t\t\t\tUser u = userDao.get(userid);\n@@ -227,7 +231,8 @@ public ServiceResult addRoom(\n \t\t\t) throws ServiceException\n \t{\n \t\ttry {\n-\t\t\tLong userId = sessionDao.check(sid);\n+\t\t\tSessiondata sd = sessionDao.check(sid);\n+\t\t\tLong userId = sd.getUserId();\n \t\t\tif (AuthLevelUtil.hasWebServiceLevel(userDao.getRights(userId))) {\n \t\t\t\tRoom r = roomDao.get(roomid);\n \t\t\t\tif (r != null) {\n@@ -285,10 +290,10 @@ public UserSearchResult getUsers(\n \t\t\t) throws ServiceException\n \t{\n \t\ttry {\n-\t\t\tLong userId = sessionDao.check(sid);\n+\t\t\tSessiondata sd = sessionDao.check(sid);\n \t\t\tSearchResult<User> result = new SearchResult<User>();\n \t\t\tresult.setObjectName(User.class.getName());\n-\t\t\tif (AuthLevelUtil.hasWebServiceLevel(userDao.getRights(userId))) {\n+\t\t\tif (AuthLevelUtil.hasWebServiceLevel(userDao.getRights(sd.getUserId()))) {\n \t\t\t\tresult.setRecords(groupUserDao.count(id));\n \t\t\t\tresult.setResult(new ArrayList<User>());\n \t\t\t\tfor (GroupUser ou : groupUserDao.get(id, null, start, max, orderby + \" \" + (asc ? \"ASC\" : \"DESC\"))) {\n@@ -320,7 +325,8 @@ public UserSearchResult getUsers(\n \t@Path(\"/{id}\")\n \tpublic ServiceResult delete(@WebParam(name=\"sid\") @QueryParam(\"sid\") String sid, @WebParam(name=\"id\") @PathParam(\"id\") long id) throws ServiceException {\n \t\ttry {\n-\t\t\tLong authUserId = sessionDao.check(sid);\n+\t\t\tSessiondata sd = sessionDao.check(sid);\n+\t\t\tLong authUserId = sd.getUserId();\n \n \t\t\tif (AuthLevelUtil.hasAdminLevel(userDao.getRights(authUserId))) {\n \t\t\t\tgroupDao.delete(groupDao.get(id), authUserId);", "filename": "openmeetings-webservice/src/main/java/org/apache/openmeetings/webservice/GroupWebService.java"}, {"additions": 9, "raw_url": "https://github.com/apache/openmeetings/raw/3ce3cc1eb62528617e3bbafac36f06c6a6cea087/openmeetings-webservice/src/main/java/org/apache/openmeetings/webservice/RecordingWebService.java", "blob_url": "https://github.com/apache/openmeetings/blob/3ce3cc1eb62528617e3bbafac36f06c6a6cea087/openmeetings-webservice/src/main/java/org/apache/openmeetings/webservice/RecordingWebService.java", "sha": "36b76f68b31070f54aec6c0533adcbf90347f163", "changes": 21, "status": "modified", "deletions": 12, "contents_url": "https://api.github.com/repos/apache/openmeetings/contents/openmeetings-webservice/src/main/java/org/apache/openmeetings/webservice/RecordingWebService.java?ref=3ce3cc1eb62528617e3bbafac36f06c6a6cea087", "patch": "@@ -39,6 +39,7 @@\n import org.apache.openmeetings.db.dao.server.SessiondataDao;\n import org.apache.openmeetings.db.dao.user.UserDao;\n import org.apache.openmeetings.db.dto.record.RecordingDTO;\n+import org.apache.openmeetings.db.entity.server.Sessiondata;\n import org.apache.openmeetings.db.util.AuthLevelUtil;\n import org.apache.openmeetings.webservice.error.ServiceException;\n import org.red5.logging.Red5LoggerFactory;\n@@ -79,9 +80,8 @@\n \t@Path(\"/{id}\")\n \tpublic void delete(@QueryParam(\"sid\") @WebParam(name=\"sid\") String sid, @PathParam(\"id\") @WebParam(name=\"id\") Long id) throws ServiceException {\n \t\ttry {\n-\t\t\tLong userId = sessionDao.check(sid);\n-\n-\t\t\tif (AuthLevelUtil.hasWebServiceLevel(userDao.getRights(userId))) {\n+\t\t\tSessiondata sd = sessionDao.check(sid);\n+\t\t\tif (AuthLevelUtil.hasWebServiceLevel(userDao.getRights(sd.getUserId()))) {\n \t\t\t\trecordingDao.delete(recordingDao.get(id));\n \t\t\t} else {\n \t\t\t\tthrow new ServiceException(\"Not allowed to preform that action, Authenticate the SID first\");\n@@ -111,9 +111,8 @@ public void delete(@QueryParam(\"sid\") @WebParam(name=\"sid\") String sid, @PathPar\n \t\t\t, @PathParam(\"externaltype\") @WebParam(name=\"externaltype\") String externalType\n \t\t\t, @PathParam(\"externalid\") @WebParam(name=\"externalid\") String externalId) throws ServiceException {\n \t\ttry {\n-\t\t\tLong userId = sessionDao.check(sid);\n-\n-\t\t\tif (AuthLevelUtil.hasWebServiceLevel(userDao.getRights(userId))) {\n+\t\t\tSessiondata sd = sessionDao.check(sid);\n+\t\t\tif (AuthLevelUtil.hasWebServiceLevel(userDao.getRights(sd.getUserId()))) {\n \t\t\t\treturn RecordingDTO.list(recordingDao.getByExternalId(externalId, externalType));\n \t\t\t} else {\n \t\t\t\tthrow new ServiceException(\"Not allowed to preform that action, Authenticate the SID first\");\n@@ -142,9 +141,8 @@ public void delete(@QueryParam(\"sid\") @WebParam(name=\"sid\") String sid, @PathPar\n \tpublic List<RecordingDTO> getExternalByType(@WebParam(name=\"sid\") @QueryParam(\"sid\") String sid\n \t\t\t, @PathParam(\"externaltype\") @WebParam(name=\"externaltype\") String externalType) throws ServiceException {\n \t\ttry {\n-\t\t\tLong userId = sessionDao.check(sid);\n-\n-\t\t\tif (AuthLevelUtil.hasWebServiceLevel(userDao.getRights(userId))) {\n+\t\t\tSessiondata sd = sessionDao.check(sid);\n+\t\t\tif (AuthLevelUtil.hasWebServiceLevel(userDao.getRights(sd.getUserId()))) {\n \t\t\t\treturn RecordingDTO.list(recordingDao.getByExternalType(externalType));\n \t\t\t} else {\n \t\t\t\tthrow new ServiceException(\"Not allowed to preform that action, Authenticate the SID first\");\n@@ -173,9 +171,8 @@ public void delete(@QueryParam(\"sid\") @WebParam(name=\"sid\") String sid, @PathPar\n \tpublic List<RecordingDTO> getExternalByRoom(@WebParam(name=\"sid\") @QueryParam(\"sid\") String sid\n \t\t\t, @PathParam(\"roomid\") @WebParam(name=\"roomid\") Long roomId) throws ServiceException {\n \t\ttry {\n-\t\t\tLong userId = sessionDao.check(sid);\n-\n-\t\t\tif (AuthLevelUtil.hasWebServiceLevel(userDao.getRights(userId))) {\n+\t\t\tSessiondata sd = sessionDao.check(sid);\n+\t\t\tif (AuthLevelUtil.hasWebServiceLevel(userDao.getRights(sd.getUserId()))) {\n \t\t\t\treturn RecordingDTO.list(recordingDao.getByRoomId(roomId));\n \t\t\t} else {\n \t\t\t\tthrow new ServiceException(\"Not allowed to preform that action, Authenticate the SID first\");", "filename": "openmeetings-webservice/src/main/java/org/apache/openmeetings/webservice/RecordingWebService.java"}, {"additions": 21, "raw_url": "https://github.com/apache/openmeetings/raw/3ce3cc1eb62528617e3bbafac36f06c6a6cea087/openmeetings-webservice/src/main/java/org/apache/openmeetings/webservice/RoomWebService.java", "blob_url": "https://github.com/apache/openmeetings/blob/3ce3cc1eb62528617e3bbafac36f06c6a6cea087/openmeetings-webservice/src/main/java/org/apache/openmeetings/webservice/RoomWebService.java", "sha": "4c7e8ee759eba094c097834591f621344a8f3849", "changes": 36, "status": "modified", "deletions": 15, "contents_url": "https://api.github.com/repos/apache/openmeetings/contents/openmeetings-webservice/src/main/java/org/apache/openmeetings/webservice/RoomWebService.java?ref=3ce3cc1eb62528617e3bbafac36f06c6a6cea087", "patch": "@@ -53,6 +53,7 @@\n import org.apache.openmeetings.db.dto.room.RoomDTO;\n import org.apache.openmeetings.db.entity.room.Invitation;\n import org.apache.openmeetings.db.entity.room.Invitation.MessageType;\n+import org.apache.openmeetings.db.entity.server.Sessiondata;\n import org.apache.openmeetings.db.entity.room.Room;\n import org.apache.openmeetings.db.util.AuthLevelUtil;\n import org.apache.openmeetings.util.message.RoomMessage;\n@@ -109,9 +110,8 @@\n \t@Path(\"/public/{type}\")\n \tpublic List<RoomDTO> getPublic(@QueryParam(\"sid\") @WebParam(name=\"sid\") String sid, @PathParam(\"type\") @WebParam(name=\"type\") String type) throws ServiceException {\n \t\ttry {\n-\t\t\tLong userId = sessionDao.check(sid);\n-\n-\t\t\tif (AuthLevelUtil.hasUserLevel(userDao.getRights(userId))) {\n+\t\t\tSessiondata sd = sessionDao.check(sid);\n+\t\t\tif (AuthLevelUtil.hasUserLevel(userDao.getRights(sd.getUserId()))) {\n \t\t\t\treturn RoomDTO.list(roomDao.getPublicRooms(Room.Type.valueOf(type)));\n \t\t\t} else {\n \t\t\t\tthrow new ServiceException(\"Insufficient permissions\"); //TODO code -26\n@@ -135,8 +135,8 @@\n \t@GET\n \t@Path(\"/{id}\")\n \tpublic RoomDTO getRoomById(@QueryParam(\"sid\") @WebParam(name=\"sid\") String sid, @PathParam(\"id\") @WebParam(name=\"id\") Long id) throws ServiceException {\n-\t\tLong userId = sessionDao.check(sid);\n-\t\tif (AuthLevelUtil.hasUserLevel(userDao.getRights(userId))) {\n+\t\tSessiondata sd = sessionDao.check(sid);\n+\t\tif (AuthLevelUtil.hasUserLevel(userDao.getRights(sd.getUserId()))) {\n \t\t\treturn new RoomDTO(roomDao.get(id));\n \t\t} else {\n \t\t\tthrow new ServiceException(\"Insufficient permissions\"); //TODO code -26\n@@ -172,7 +172,8 @@ public RoomDTO getExternal(@WebParam(name=\"sid\") @QueryParam(\"sid\") String sid\n \t\t\t, @PathParam(\"externalid\") @WebParam(name=\"externalid\") Long externalId\n \t\t\t, @WebParam(name=\"room\") @QueryParam(\"room\") RoomDTO room) throws ServiceException {\n \t\ttry {\n-\t\t\tLong userId = sessionDao.check(sid);\n+\t\t\tSessiondata sd = sessionDao.check(sid);\n+\t\t\tLong userId = sd.getUserId();\n \t\t\tif (AuthLevelUtil.hasWebServiceLevel(userDao.getRights(userId))) {\n \t\t\t\tRoom r = roomDao.getExternal(Room.Type.valueOf(type), externalType, externalId);\n \t\t\t\tif (r == null) {\n@@ -209,7 +210,8 @@ public RoomDTO getExternal(@WebParam(name=\"sid\") @QueryParam(\"sid\") String sid\n \t@Path(\"/\")\n \tpublic RoomDTO add(@WebParam(name=\"sid\") @QueryParam(\"sid\") String sid, @WebParam(name=\"room\") @FormParam(\"room\") RoomDTO room) throws ServiceException {\n \t\ttry {\n-\t\t\tLong userId = sessionDao.check(sid);\n+\t\t\tSessiondata sd = sessionDao.check(sid);\n+\t\t\tLong userId = sd.getUserId();\n \t\t\tif (AuthLevelUtil.hasWebServiceLevel(userDao.getRights(userId))) {\n \t\t\t\tRoom r = room.get();\n \t\t\t\tr = roomDao.update(r, userId);\n@@ -273,7 +275,8 @@ public RoomDTO update(@WebParam(name=\"sid\") @QueryParam(\"sid\") String sid, @Path\n \t@DELETE\n \t@Path(\"/{id}\")\n \tpublic ServiceResult delete(@WebParam(name=\"sid\") @QueryParam(\"sid\") String sid, @WebParam(name=\"id\") @PathParam(\"id\") long id) throws ServiceException {\n-\t\tLong userId = sessionDao.check(sid);\n+\t\tSessiondata sd = sessionDao.check(sid);\n+\t\tLong userId = sd.getUserId();\n \t\tif (AuthLevelUtil.hasWebServiceLevel(userDao.getRights(userId))) {\n \t\t\tRoom r = roomDao.get(id);\n \t\t\tif (r != null) {\n@@ -307,7 +310,8 @@ public ServiceResult delete(@WebParam(name=\"sid\") @QueryParam(\"sid\") String sid,\n \t@Path(\"/close/{id}\")\n \tpublic ServiceResult close(@WebParam(name=\"sid\") @QueryParam(\"sid\") String sid, @WebParam(name=\"id\") @PathParam(\"id\") long id) throws ServiceException {\n \t\ttry {\n-\t\t\tLong userId = sessionDao.check(sid);\n+\t\t\tSessiondata sd = sessionDao.check(sid);\n+\t\t\tLong userId = sd.getUserId();\n \t\t\tlog.debug(\"close \" + id);\n \n \t\t\tif (AuthLevelUtil.hasWebServiceLevel(userDao.getRights(userId))) {\n@@ -351,7 +355,8 @@ public ServiceResult close(@WebParam(name=\"sid\") @QueryParam(\"sid\") String sid,\n \t@Path(\"/open/{id}\")\n \tpublic ServiceResult open(@WebParam(name=\"sid\") @QueryParam(\"sid\") String sid, @WebParam(name=\"id\") @PathParam(\"id\") long id) throws ServiceException {\n \t\ttry {\n-\t\t\tLong userId = sessionDao.check(sid);\n+\t\t\tSessiondata sd = sessionDao.check(sid);\n+\t\t\tLong userId = sd.getUserId();\n \t\t\tlog.debug(\"open \" + id);\n \n \t\t\tif (AuthLevelUtil.hasWebServiceLevel(userDao.getRights(userId))) {\n@@ -388,8 +393,8 @@ public ServiceResult open(@WebParam(name=\"sid\") @QueryParam(\"sid\") String sid, @\n \t@Path(\"/kick/{id}\")\n \tpublic ServiceResult kick(@WebParam(name=\"sid\") @QueryParam(\"sid\") String sid, @WebParam(name=\"id\") @PathParam(\"id\") long id) throws ServiceException {\n \t\ttry {\n-\t\t\tLong userId = sessionDao.check(sid);\n-\t\t\tif (AuthLevelUtil.hasWebServiceLevel(userDao.getRights(userId))) {\n+\t\t\tSessiondata sd = sessionDao.check(sid);\n+\t\t\tif (AuthLevelUtil.hasWebServiceLevel(userDao.getRights(sd.getUserId()))) {\n \t\t\t\tboolean result = userManager.kickUserByStreamId(sid, id);\n \t\t\t\treturn new ServiceResult(result ? 1L : 0L, \"Kicked\", Type.SUCCESS);\n \t\t\t} else {\n@@ -417,8 +422,8 @@ public ServiceResult kick(@WebParam(name=\"sid\") @QueryParam(\"sid\") String sid, @\n \tpublic List<RoomCountBean> counters(@WebParam(name=\"sid\") @QueryParam(\"sid\") String sid, @WebParam(name=\"id\") @QueryParam(\"id\") List<Long> ids) throws ServiceException {\n \t\tList<RoomCountBean> roomBeans = new ArrayList<RoomCountBean>();\n \t\ttry {\n-\t\t\tLong userId = sessionDao.check(sid);\n-\t\t\tif (AuthLevelUtil.hasWebServiceLevel(userDao.getRights(userId))) {\n+\t\t\tSessiondata sd = sessionDao.check(sid);\n+\t\t\tif (AuthLevelUtil.hasWebServiceLevel(userDao.getRights(sd.getUserId()))) {\n \t\t\t\tList<Room> rooms = roomDao.get(ids);\n \n \t\t\t\tfor (Room room : rooms) {\n@@ -460,7 +465,8 @@ private ServiceResult hash(@WebParam(name=\"sid\") @QueryParam(\"sid\") String sid\n \t\t\t) throws ServiceException\n \t{\n \t\ttry {\n-\t\t\tLong userId = sessionDao.check(sid);\n+\t\t\tSessiondata sd = sessionDao.check(sid);\n+\t\t\tLong userId = sd.getUserId();\n \t\t\tif (AuthLevelUtil.hasWebServiceLevel(userDao.getRights(userId))) {\n \t\t\t\tInvitation i = invite.get(userId, userDao, roomDao);\n \t\t\t\ti = invitationDao.update(i);", "filename": "openmeetings-webservice/src/main/java/org/apache/openmeetings/webservice/RoomWebService.java"}, {"additions": 9, "raw_url": "https://github.com/apache/openmeetings/raw/3ce3cc1eb62528617e3bbafac36f06c6a6cea087/openmeetings-webservice/src/main/java/org/apache/openmeetings/webservice/ServerWebService.java", "blob_url": "https://github.com/apache/openmeetings/blob/3ce3cc1eb62528617e3bbafac36f06c6a6cea087/openmeetings-webservice/src/main/java/org/apache/openmeetings/webservice/ServerWebService.java", "sha": "949c79ed4c6e07cce71626d2a61d4dea720dd128", "changes": 15, "status": "modified", "deletions": 6, "contents_url": "https://api.github.com/repos/apache/openmeetings/contents/openmeetings-webservice/src/main/java/org/apache/openmeetings/webservice/ServerWebService.java?ref=3ce3cc1eb62528617e3bbafac36f06c6a6cea087", "patch": "@@ -43,6 +43,7 @@\n import org.apache.openmeetings.db.dto.basic.ServiceResult.Type;\r\n import org.apache.openmeetings.db.dto.server.ServerDTO;\r\n import org.apache.openmeetings.db.entity.server.Server;\r\n+import org.apache.openmeetings.db.entity.server.Sessiondata;\r\n import org.apache.openmeetings.db.util.AuthLevelUtil;\r\n import org.apache.openmeetings.webservice.error.ServiceException;\r\n import org.red5.logging.Red5LoggerFactory;\r\n@@ -90,9 +91,9 @@\n \t\t\t) throws ServiceException\r\n \t{\r\n \t\tlog.debug(\"getServers enter\");\r\n-\t\tLong userId = sessionDao.check(sid);\r\n+\t\tSessiondata sd = sessionDao.check(sid);\r\n \r\n-\t\tif (AuthLevelUtil.hasWebServiceLevel(userDao.getRights(userId))) {\r\n+\t\tif (AuthLevelUtil.hasWebServiceLevel(userDao.getRights(sd.getUserId()))) {\r\n \t\t\treturn ServerDTO.list(serverDao.get(start, max));\r\n \t\t} else {\r\n \t\t\tlog.warn(\"Insuffisient permissions\");\r\n@@ -113,9 +114,9 @@\n \t@Path(\"/count\")\r\n \tpublic long count(@QueryParam(\"sid\") @WebParam(name=\"sid\") String sid) throws ServiceException {\r\n \t\tlog.debug(\"getServerCount enter\");\r\n-\t\tLong userId = sessionDao.check(sid);\r\n+\t\tSessiondata sd = sessionDao.check(sid);\r\n \r\n-\t\tif (AuthLevelUtil.hasWebServiceLevel(userDao.getRights(userId))) {\r\n+\t\tif (AuthLevelUtil.hasWebServiceLevel(userDao.getRights(sd.getUserId()))) {\r\n \t\t\treturn serverDao.count();\r\n \t\t} else {\r\n \t\t\tthrow new ServiceException(\"Insufficient permissions\"); //TODO code -26\r\n@@ -136,7 +137,8 @@ public long count(@QueryParam(\"sid\") @WebParam(name=\"sid\") String sid) throws Se\n \t@Path(\"/\")\r\n \tpublic ServerDTO add(@WebParam(name=\"sid\") @QueryParam(\"sid\") String sid, @WebParam(name=\"server\") @QueryParam(\"server\") ServerDTO server) throws ServiceException {\r\n \t\tlog.debug(\"saveServerCount enter\");\r\n-\t\tLong userId = sessionDao.check(sid);\r\n+\t\tSessiondata sd = sessionDao.check(sid);\r\n+\t\tLong userId = sd.getUserId();\r\n \t\tif (AuthLevelUtil.hasWebServiceLevel(userDao.getRights(userId))) {\r\n \t\t\tServer s = server.get();\r\n \t\t\treturn new ServerDTO(serverDao.update(s, userId));\r\n@@ -160,7 +162,8 @@ public ServerDTO add(@WebParam(name=\"sid\") @QueryParam(\"sid\") String sid, @WebPa\n \t@Path(\"/{id}\")\r\n \tpublic ServiceResult delete(@WebParam(name=\"sid\") @QueryParam(\"sid\") String sid, @WebParam(name=\"id\") @PathParam(\"id\") long id) throws ServiceException {\r\n \t\tlog.debug(\"saveServerCount enter\");\r\n-\t\tLong userId = sessionDao.check(sid);\r\n+\t\tSessiondata sd = sessionDao.check(sid);\r\n+\t\tLong userId = sd.getUserId();\r\n \r\n \t\tif (AuthLevelUtil.hasWebServiceLevel(userDao.getRights(userId))) {\r\n \t\t\tServer s = serverDao.get(id);\r", "filename": "openmeetings-webservice/src/main/java/org/apache/openmeetings/webservice/ServerWebService.java"}, {"additions": 17, "raw_url": "https://github.com/apache/openmeetings/raw/3ce3cc1eb62528617e3bbafac36f06c6a6cea087/openmeetings-webservice/src/main/java/org/apache/openmeetings/webservice/UserWebService.java", "blob_url": "https://github.com/apache/openmeetings/blob/3ce3cc1eb62528617e3bbafac36f06c6a6cea087/openmeetings-webservice/src/main/java/org/apache/openmeetings/webservice/UserWebService.java", "sha": "f06e06c5120b7e292368630b39c23c08c57de5b6", "changes": 40, "status": "modified", "deletions": 23, "contents_url": "https://api.github.com/repos/apache/openmeetings/contents/openmeetings-webservice/src/main/java/org/apache/openmeetings/webservice/UserWebService.java?ref=3ce3cc1eb62528617e3bbafac36f06c6a6cea087", "patch": "@@ -132,9 +132,8 @@ public ServiceResult login(@WebParam(name=\"user\") @QueryParam(\"user\") String use\n \t@Path(\"/\")\n \tpublic List<UserDTO> get(@WebParam(name=\"sid\") @QueryParam(\"sid\") String sid) throws ServiceException {\n \t\ttry {\n-\t\t\tLong authUserId = sessionDao.check(sid);\n-\t\n-\t\t\tif (AuthLevelUtil.hasWebServiceLevel(userDao.getRights(authUserId))) {\n+\t\t\tSessiondata sd = sessionDao.check(sid);\n+\t\t\tif (AuthLevelUtil.hasWebServiceLevel(userDao.getRights(sd.getUserId()))) {\n \t\t\t\treturn UserDTO.list(userDao.getAllUsers());\n \t\t\t} else {\n \t\t\t\tthrow new ServiceException(\"Insufficient permissions\"); //TODO code -26\n@@ -159,9 +158,8 @@ public UserDTO add(\n \t\t\t) throws ServiceException\n \t{\n \t\ttry {\n-\t\t\tLong authUserId = sessionDao.check(sid);\n-\n-\t\t\tif (AuthLevelUtil.hasWebServiceLevel(userDao.getRights(authUserId))) {\n+\t\t\tSessiondata sd = sessionDao.check(sid);\n+\t\t\tif (AuthLevelUtil.hasWebServiceLevel(userDao.getRights(sd.getUserId()))) {\n \t\t\t\tUser testUser = userDao.getExternalUser(user.getExternalId(), user.getExternalType());\n \n \t\t\t\tif (testUser != null) {\n@@ -200,7 +198,7 @@ public UserDTO add(\n \t\t\t\t\tu.setExternalType(user.getExternalType());\n \t\t\t\t}\n \n-\t\t\t\tu = userDao.update(u, authUserId);\n+\t\t\t\tu = userDao.update(u, sd.getUserId());\n \n \t\t\t\treturn new UserDTO(u);\n \t\t\t} else {\n@@ -223,10 +221,9 @@ public UserDTO add(\n \t@Path(\"/{id}\")\n \tpublic ServiceResult delete(@WebParam(name=\"sid\") @QueryParam(\"sid\") String sid, @WebParam(name=\"id\") @PathParam(\"id\") long id) throws ServiceException {\n \t\ttry {\n-\t\t\tLong authUserId = sessionDao.check(sid);\n-\n-\t\t\tif (AuthLevelUtil.hasAdminLevel(userDao.getRights(authUserId))) {\n-\t\t\t\tuserDao.delete(userDao.get(id), authUserId);\n+\t\t\tSessiondata sd = sessionDao.check(sid);\n+\t\t\tif (AuthLevelUtil.hasAdminLevel(userDao.getRights(sd.getUserId()))) {\n+\t\t\t\tuserDao.delete(userDao.get(id), sd.getUserId());\n \n \t\t\t\treturn new ServiceResult(id, \"Deleted\", Type.SUCCESS);\n \t\t\t} else {\n@@ -251,13 +248,12 @@ public ServiceResult deleteExternal(\n \t\t\t) throws ServiceException\n \t{\n \t\ttry {\n-\t\t\tLong authUserId = sessionDao.check(sid);\n-\n-\t\t\tif (AuthLevelUtil.hasAdminLevel(userDao.getRights(authUserId))) {\n+\t\t\tSessiondata sd = sessionDao.check(sid);\n+\t\t\tif (AuthLevelUtil.hasAdminLevel(userDao.getRights(sd.getUserId()))) {\n \t\t\t\tUser user = userDao.getExternalUser(externalId, externalType);\n \n \t\t\t\t// Setting user deleted\n-\t\t\t\tuserDao.delete(user, authUserId);\n+\t\t\t\tuserDao.delete(user, sd.getUserId());\n \n \t\t\t\treturn new ServiceResult(user.getId(), \"Deleted\", Type.SUCCESS);\n \t\t\t} else {\n@@ -283,8 +279,8 @@ public ServiceResult getRoomHash(\n \t\t\t) throws ServiceException\n \t{\n \t\ttry {\n-\t\t\tLong userId = sessionDao.check(sid);\n-\t\t\tif (AuthLevelUtil.hasWebServiceLevel(userDao.getRights(userId))) {\n+\t\t\tSessiondata sd = sessionDao.check(sid);\n+\t\t\tif (AuthLevelUtil.hasWebServiceLevel(userDao.getRights(sd.getUserId()))) {\n \t\t\t\tRemoteSessionObject remoteSessionObject = new RemoteSessionObject(\n \t\t\t\t\t\tuser.getLogin(), user.getFirstname(), user.getLastname()\n \t\t\t\t\t\t, user.getProfilePictureUrl(), user.getEmail()\n@@ -306,7 +302,6 @@ public ServiceResult getRoomHash(\n \t\t\t\t\t\t);\n \n \t\t\t\tif (hash != null) {\n-\t\t\t\t\tSessiondata sd = sessionDao.get(sid);\n \t\t\t\t\tif (options.isAllowSameURLMultipleTimes()) {\n \t\t\t\t\t\tsd.setPermanent(true);\n \t\t\t\t\t}\n@@ -333,8 +328,8 @@ public ServiceResult getRoomHash(\n \t@Path(\"/kick/{publicsid}\")\n \tpublic ServiceResult kick(@WebParam(name=\"sid\") @QueryParam(\"sid\") String sid, @WebParam(name=\"publicsid\") @PathParam(\"publicsid\") String publicSID) throws ServiceException {\n \t\ttry {\n-\t\t\tLong userId = sessionDao.check(sid);\n-\t\t\tif (AuthLevelUtil.hasWebServiceLevel(userDao.getRights(userId))) {\n+\t\t\tSessiondata sd = sessionDao.check(sid);\n+\t\t\tif (AuthLevelUtil.hasWebServiceLevel(userDao.getRights(sd.getUserId()))) {\n \t\t\t\tBoolean success = userManagement.kickUserByPublicSID(sid, publicSID);\n \t\n \t\t\t\treturn new ServiceResult(Boolean.TRUE.equals(success) ? 1L : 0L, Boolean.TRUE.equals(success) ? \"deleted\" : \"not deleted\", Type.SUCCESS);\n@@ -355,9 +350,8 @@ public ServiceResult kick(@WebParam(name=\"sid\") @QueryParam(\"sid\") String sid, @\n \t@GET\n \t@Path(\"/count/{roomid}\")\n \tpublic int count(@WebParam(name=\"sid\") @QueryParam(\"sid\") String sid, @WebParam(name=\"roomid\") @PathParam(\"roomid\") Long roomId) {\n-\t\tLong userId = sessionDao.check(sid);\n-\n-\t\tif (AuthLevelUtil.hasUserLevel(userDao.getRights(userId))) {\n+\t\tSessiondata sd = sessionDao.check(sid);\n+\t\tif (AuthLevelUtil.hasUserLevel(userDao.getRights(sd.getUserId()))) {\n \t\t\treturn conferenceService.getRoomClientsListByRoomId(roomId).size();\n \t\t}\n \t\treturn -1;", "filename": "openmeetings-webservice/src/main/java/org/apache/openmeetings/webservice/UserWebService.java"}], "repo": "openmeetings"}, {"commit": "https://github.com/apache/openmeetings/commit/1323164ece8c4c45e742b6c6e7a557c6d840993c", "parent": "https://github.com/apache/openmeetings/commit/2df1fee181123bf0844de29cceee67de949cd598", "message": "[OPENMEETINGS-1551] Next dev version is set; NPE check is added to date validation; code clean-up", "bug_id": "openmeetings_17", "file": [{"additions": 25, "raw_url": "https://github.com/apache/openmeetings/raw/1323164ece8c4c45e742b6c6e7a557c6d840993c/openmeetings-web/src/main/java/org/apache/openmeetings/web/common/MainPanel.java", "blob_url": "https://github.com/apache/openmeetings/blob/1323164ece8c4c45e742b6c6e7a557c6d840993c/openmeetings-web/src/main/java/org/apache/openmeetings/web/common/MainPanel.java", "sha": "311ecdef9fee8521c6b3c1e98570c80a2045039d", "changes": 25, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/openmeetings/contents/openmeetings-web/src/main/java/org/apache/openmeetings/web/common/MainPanel.java?ref=1323164ece8c4c45e742b6c6e7a557c6d840993c", "patch": "@@ -58,22 +58,26 @@\n import org.apache.openmeetings.web.user.UserInfoDialog;\n import org.apache.openmeetings.web.user.chat.ChatPanel;\n import org.apache.openmeetings.web.util.ContactsHelper;\n+import org.apache.openmeetings.web.util.ExtendedClientProperties;\n import org.apache.openmeetings.web.util.OmUrlFragment;\n import org.apache.wicket.Component;\n import org.apache.wicket.MarkupContainer;\n import org.apache.wicket.ajax.AbstractAjaxTimerBehavior;\n import org.apache.wicket.ajax.AbstractDefaultAjaxBehavior;\n+import org.apache.wicket.ajax.AjaxClientInfoBehavior;\n import org.apache.wicket.ajax.AjaxRequestTarget;\n import org.apache.wicket.ajax.markup.html.AjaxLink;\n import org.apache.wicket.core.request.handler.IPartialPageRequestHandler;\n import org.apache.wicket.devutils.debugbar.DebugBar;\n import org.apache.wicket.markup.head.IHeaderResponse;\n+import org.apache.wicket.markup.head.JavaScriptHeaderItem;\n import org.apache.wicket.markup.head.PriorityHeaderItem;\n import org.apache.wicket.markup.html.WebMarkupContainer;\n import org.apache.wicket.markup.html.form.Form;\n import org.apache.wicket.markup.html.panel.EmptyPanel;\n import org.apache.wicket.markup.html.panel.Panel;\n import org.apache.wicket.model.CompoundPropertyModel;\n+import org.apache.wicket.protocol.http.request.WebClientInfo;\n import org.apache.wicket.protocol.ws.WebSocketSettings;\n import org.apache.wicket.protocol.ws.api.IWebSocketConnection;\n import org.apache.wicket.protocol.ws.api.WebSocketBehavior;\n@@ -86,6 +90,8 @@\n import org.apache.wicket.protocol.ws.api.registry.IWebSocketConnectionRegistry;\n import org.apache.wicket.protocol.ws.api.registry.PageIdKey;\n import org.apache.wicket.protocol.ws.concurrent.Executor;\n+import org.apache.wicket.request.cycle.RequestCycle;\n+import org.apache.wicket.request.resource.JavaScriptResourceReference;\n import org.apache.wicket.util.time.Duration;\n import org.red5.logging.Red5LoggerFactory;\n import org.slf4j.Logger;\n@@ -137,6 +143,7 @@ public void run() {\n \t\t\t}\n \t\t}\n \t};\n+\tprivate final ExtendedClientProperties extProps = new ExtendedClientProperties();\n \n \tpublic MainPanel(String id) {\n \t\tthis(id, null);\n@@ -280,6 +287,20 @@ private void closeHandler(AbstractClientMessage msg) {\n \t\t\t\tclient = null;\n \t\t\t}\n \t\t});\n+\t\tadd(new AjaxClientInfoBehavior() {\n+\t\t\tprivate static final long serialVersionUID = 1L;\n+\n+\t\t\t@Override\n+\t\t\tpublic void renderHead(Component component, IHeaderResponse response) {\n+\t\t\t\tsuper.renderHead(component, response);\n+\t\t\t\tresponse.render(JavaScriptHeaderItem.forReference(new JavaScriptResourceReference(MainPanel.class, \"main.js\")));\n+\t\t\t}\n+\n+\t\t\t@Override\n+\t\t\tprotected WebClientInfo newWebClientInfo(RequestCycle requestCycle) {\n+\t\t\t\treturn new WebClientInfo(requestCycle, extProps);\n+\t\t\t}\n+\t\t});\n \t}\n \n \t@Override\n@@ -377,4 +398,8 @@ public ChatPanel getChat() {\n \tpublic Client getClient() {\n \t\treturn client;\n \t}\n+\n+\tpublic ExtendedClientProperties getExtendedProperties() {\n+\t\treturn extProps;\n+\t}\n }", "filename": "openmeetings-web/src/main/java/org/apache/openmeetings/web/common/MainPanel.java"}, {"additions": 35, "raw_url": "https://github.com/apache/openmeetings/raw/1323164ece8c4c45e742b6c6e7a557c6d840993c/openmeetings-web/src/main/java/org/apache/openmeetings/web/common/main.js", "blob_url": "https://github.com/apache/openmeetings/blob/1323164ece8c4c45e742b6c6e7a557c6d840993c/openmeetings-web/src/main/java/org/apache/openmeetings/web/common/main.js", "sha": "9c87bafe8bfe7fad61d0d1945c7667cc1afbbb33", "changes": 35, "status": "added", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/openmeetings/contents/openmeetings-web/src/main/java/org/apache/openmeetings/web/common/main.js?ref=1323164ece8c4c45e742b6c6e7a557c6d840993c", "patch": "@@ -0,0 +1,35 @@\n+/**\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\") +  you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+Wicket.BrowserInfo.collectExtraInfo = function(info) {\n+\tvar l = window.location;\n+\tinfo.codebase = l.origin + l.pathname;\n+\tinfo.settings = JSON.stringify(getSettings());\n+};\n+function getSettings() {\n+\tvar s = localStorage.getItem(\"openmeetings\");\n+\tif (!!s) {\n+\t\ts = JSON.parse(s);\n+\t}\n+\treturn s || {};\n+}\n+function saveSetting(name, val) {\n+\tvar s = getSettings();\n+\ts[name] = val;\n+\tlocalStorage.setItem(\"openmeetings\", JSON.stringify(s));\n+}", "filename": "openmeetings-web/src/main/java/org/apache/openmeetings/web/common/main.js"}, {"additions": 6, "raw_url": "https://github.com/apache/openmeetings/raw/1323164ece8c4c45e742b6c6e7a557c6d840993c/openmeetings-web/src/main/java/org/apache/openmeetings/web/room/RoomPanel.java", "blob_url": "https://github.com/apache/openmeetings/blob/1323164ece8c4c45e742b6c6e7a557c6d840993c/openmeetings-web/src/main/java/org/apache/openmeetings/web/room/RoomPanel.java", "sha": "3f38c7c0cb3111b40da71250a40a961104bfa92b", "changes": 15, "status": "modified", "deletions": 9, "contents_url": "https://api.github.com/repos/apache/openmeetings/contents/openmeetings-web/src/main/java/org/apache/openmeetings/web/room/RoomPanel.java?ref=1323164ece8c4c45e742b6c6e7a557c6d840993c", "patch": "@@ -26,16 +26,13 @@\n import static org.apache.openmeetings.web.app.WebSession.getDateFormat;\n import static org.apache.openmeetings.web.app.WebSession.getUserId;\n \n-import java.net.MalformedURLException;\n-import java.net.URL;\n import java.util.Calendar;\n import java.util.Map.Entry;\n import java.util.UUID;\n \n import org.apache.directory.api.util.Strings;\n import org.apache.openmeetings.core.remote.ConferenceLibrary;\n import org.apache.openmeetings.core.remote.red5.ScopeApplicationAdapter;\n-import org.apache.openmeetings.db.dao.basic.ConfigurationDao;\n import org.apache.openmeetings.db.dao.calendar.AppointmentDao;\n import org.apache.openmeetings.db.dao.user.UserDao;\n import org.apache.openmeetings.db.entity.calendar.Appointment;\n@@ -112,7 +109,7 @@\n \n \t\t@Override\n \t\tprotected void respond(AjaxRequestTarget target) {\n-\t\t\ttarget.appendJavaScript(\"setHeight();\");\n+\t\t\ttarget.appendJavaScript(\"setRoomSizes();\");\n \t\t\t//TODO SID etc\n \t\t\tConfigurationDao cfgDao = getBean(ConfigurationDao.class);\n \t\t\ttry {\n@@ -132,14 +129,14 @@ protected void respond(AjaxRequestTarget target) {\n \t\t\t\t\t\t\t\t, \"1429\", \"1430\", \"775\", \"452\", \"767\", \"764\", \"765\", \"918\", \"54\", \"761\", \"762\"))\n \t\t\t\t\t\t.toString()\n \t\t\t\t\t\t));\n-\t\t\t\tbroadcast(new RoomMessage(r.getId(), getUserId(), RoomMessage.Type.roomEnter));\n-\t\t\t\tgetMainPanel().getChat().roomEnter(r, target);\n-\t\t\t\tif (r.isFilesOpened()) {\n-\t\t\t\t\tsidebar.setFilesActive(target);\n-\t\t\t\t}\n \t\t\t} catch (MalformedURLException e) {\n \t\t\t\tlog.error(\"Error while constructing room parameters\", e);\n \t\t\t}\n+\t\t\tbroadcast(new RoomMessage(r.getId(), getUserId(), RoomMessage.Type.roomEnter));\n+\t\t\tgetMainPanel().getChat().roomEnter(r, target);\n+\t\t\tif (r.isFilesOpened()) {\n+\t\t\t\tsidebar.setFilesActive(target);\n+\t\t\t}\n \t\t}\n \t};\n \tprivate RedirectMessageDialog roomClosed;", "filename": "openmeetings-web/src/main/java/org/apache/openmeetings/web/room/RoomPanel.java"}, {"additions": 2, "raw_url": "https://github.com/apache/openmeetings/raw/1323164ece8c4c45e742b6c6e7a557c6d840993c/openmeetings-web/src/main/java/org/apache/openmeetings/web/room/menu/RoomMenuPanel.java", "blob_url": "https://github.com/apache/openmeetings/blob/1323164ece8c4c45e742b6c6e7a557c6d840993c/openmeetings-web/src/main/java/org/apache/openmeetings/web/room/menu/RoomMenuPanel.java", "sha": "1bc1b7065e9fb1e49af8de0239d4409e2804bc6c", "changes": 3, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/openmeetings/contents/openmeetings-web/src/main/java/org/apache/openmeetings/web/room/menu/RoomMenuPanel.java?ref=1323164ece8c4c45e742b6c6e7a557c6d840993c", "patch": "@@ -204,7 +204,8 @@ public RoomMenuPanel(String id, final RoomPanel room) {\n \t\tadd((roomName = new Label(\"roomName\", r.getName())).setOutputMarkupPlaceholderTag(true).setOutputMarkupId(true));\n \t\tString tag = getGroup().getTag();\n \t\tadd(logo, new Label(\"tag\", tag).setVisible(!Strings.isEmpty(tag)));\n-\t\tadd((shareBtn = new StartSharingButton(\"share\", room.getClient())).setOutputMarkupPlaceholderTag(true).setOutputMarkupId(true));\n+\t\tadd((shareBtn = new StartSharingButton(\"share\", room.getClient(), room.getMainPanel().getExtendedProperties()))\n+\t\t\t\t.setOutputMarkupPlaceholderTag(true).setOutputMarkupId(true));\n \t\tRoomInvitationForm rif = new RoomInvitationForm(\"form\", room.getRoom().getId());\n \t\tadd(invite = new InvitationDialog(\"invite\", rif));\n \t\trif.setDialog(invite);", "filename": "openmeetings-web/src/main/java/org/apache/openmeetings/web/room/menu/RoomMenuPanel.java"}, {"additions": 8, "raw_url": "https://github.com/apache/openmeetings/raw/1323164ece8c4c45e742b6c6e7a557c6d840993c/openmeetings-web/src/main/java/org/apache/openmeetings/web/room/menu/StartSharingButton.java", "blob_url": "https://github.com/apache/openmeetings/blob/1323164ece8c4c45e742b6c6e7a557c6d840993c/openmeetings-web/src/main/java/org/apache/openmeetings/web/room/menu/StartSharingButton.java", "sha": "af1a11328581b0fa8d30af38244e9e9fbb1f1773", "changes": 60, "status": "modified", "deletions": 52, "contents_url": "https://api.github.com/repos/apache/openmeetings/contents/openmeetings-web/src/main/java/org/apache/openmeetings/web/room/menu/StartSharingButton.java?ref=1323164ece8c4c45e742b6c6e7a557c6d840993c", "patch": "@@ -24,7 +24,6 @@\n import static org.apache.openmeetings.util.OpenmeetingsVariables.CONFIG_SCREENSHARING_FPS_SHOW;\n import static org.apache.openmeetings.util.OpenmeetingsVariables.CONFIG_SCREENSHARING_QUALITY;\n import static org.apache.openmeetings.util.OpenmeetingsVariables.webAppRootKey;\n-import static org.apache.openmeetings.web.app.Application.HASH_MAPPING;\n import static org.apache.openmeetings.web.app.Application.getBean;\n import static org.apache.openmeetings.web.app.WebSession.getLanguage;\n import static org.apache.openmeetings.web.room.RoomBroadcaster.getClient;\n@@ -47,16 +46,9 @@\n import org.apache.openmeetings.web.app.Application;\n import org.apache.openmeetings.web.common.OmButton;\n import org.apache.openmeetings.web.util.AjaxDownload;\n-import org.apache.wicket.Component;\n-import org.apache.wicket.ajax.AjaxClientInfoBehavior;\n+import org.apache.openmeetings.web.util.ExtendedClientProperties;\n import org.apache.wicket.ajax.AjaxRequestTarget;\n import org.apache.wicket.behavior.AttributeAppender;\n-import org.apache.wicket.markup.head.IHeaderResponse;\n-import org.apache.wicket.markup.head.JavaScriptHeaderItem;\n-import org.apache.wicket.protocol.http.ClientProperties;\n-import org.apache.wicket.protocol.http.request.WebClientInfo;\n-import org.apache.wicket.request.IRequestParameters;\n-import org.apache.wicket.request.cycle.RequestCycle;\n import org.apache.wicket.util.resource.StringResourceStream;\n import org.apache.wicket.util.string.Strings;\n import org.red5.logging.Red5LoggerFactory;\n@@ -69,17 +61,18 @@\n \tprivate static final String CDATA_END = \"]]>\";\n \tprivate final AjaxDownload download;\n \tprivate final org.apache.openmeetings.web.app.Client c;\n-\tprivate final ExtendedClientProperties extProps = new ExtendedClientProperties();\n+\tprivate final ExtendedClientProperties extProps;\n \tprivate enum Protocol {\n \t\trtmp\n \t\t, rtmpe\n \t\t, rtmps\n \t\t, rtmpt\n \t}\n \n-\tpublic StartSharingButton(String id, org.apache.openmeetings.web.app.Client c) {\n+\tpublic StartSharingButton(String id, org.apache.openmeetings.web.app.Client c, final ExtendedClientProperties extProps) {\n \t\tsuper(id);\n \t\tthis.c = c;\n+\t\tthis.extProps = extProps;\n \t\tsetOutputMarkupPlaceholderTag(true);\n \t\tsetVisible(false);\n \t\tadd(new AttributeAppender(\"title\", Application.getString(1480)));\n@@ -91,20 +84,6 @@ protected String getFileName() {\n \t\t\t\treturn String.format(\"public_%s.jnlp\", StartSharingButton.this.c.getRoomId());\n \t\t\t}\n \t\t});\n-\t\tadd(new AjaxClientInfoBehavior() {\n-\t\t\tprivate static final long serialVersionUID = 1L;\n-\n-\t\t\t@Override\n-\t\t\tpublic void renderHead(Component component, IHeaderResponse response) {\n-\t\t\t\tsuper.renderHead(component, response);\n-\t\t\t\tresponse.render(JavaScriptHeaderItem.forScript(\"Wicket.BrowserInfo.collectExtraInfo = function(info) { var l = window.location; info.codebase = l.origin + l.pathname; };\", \"extended-client-info\"));\n-\t\t\t}\n-\n-\t\t\t@Override\n-\t\t\tprotected WebClientInfo newWebClientInfo(RequestCycle requestCycle) {\n-\t\t\t\treturn new WebClientInfo(requestCycle, extProps);\n-\t\t\t}\n-\t\t});\n \t}\n \n \t@Override\n@@ -183,18 +162,18 @@ private static String addKeystore(Client rc, String app, Protocol protocol) {\n \t\t\t\ttry (FileInputStream fis = new FileInputStream(keyStore); FileInputStream ris = new FileInputStream(new File(conf, \"red5.properties\"))) {\n \t\t\t\t\tProperties red5Props = new Properties();\n \t\t\t\t\tred5Props.load(ris);\n-\t\t\t\t\t\n+\n \t\t\t\t\tbyte keyBytes[] = new byte[(int)keyStore.length()];\n \t\t\t\t\tfis.read(keyBytes);\n-\t\t\t\t\t\n+\n \t\t\t\t\tkeystore = Hex.encodeHexString(keyBytes);\n \t\t\t\t\tpassword = red5Props.getProperty(\"rtmps.screen.keystorepass\");\n-\t\t\t\t\t\n+\n \t\t\t\t\t/*\n \t\t\t\t\tKeyStore ksIn = KeyStore.getInstance(KeyStore.getDefaultType());\n \t\t\t\t\tksIn.load(new FileInputStream(keyStore), red5Props.getProperty(\"rtmps.keystorepass\").toCharArray());\n \t\t\t\t\tByteArrayInputStream bin = new ByteArrayInputStream()\n-\t\t\t\t\t\n+\n \t\t\t\t\tbyte fileContent[] = new byte[(int)file.length()];\n \t\t\t\t\tsb = addArgument(sb, Object arg)\n \t\t\t\t\tctx.put(\"$KEYSTORE\", users_id);\n@@ -215,27 +194,4 @@ private static String addKeystore(Client rc, String app, Protocol protocol) {\n \t\t\t\t.replace(\"$keystore\", CDATA_BEGIN + keystore + CDATA_END)\n \t\t\t\t.replace(\"$password\", CDATA_BEGIN + password + CDATA_END);\n \t}\n-\n-\tprivate static class ExtendedClientProperties extends ClientProperties {\n-\t\tprivate static final long serialVersionUID = 1L;\n-\t\tprivate String codebase;\n-\n-\t\tpublic String getCodebase() {\n-\t\t\treturn codebase;\n-\t\t}\n-\n-\t\t@Override\n-\t\tpublic void read(IRequestParameters parameters) {\n-\t\t\tsuper.read(parameters);\n-\t\t\tString _url = parameters.getParameterValue(\"codebase\").toString(\"N/A\");\n-\t\t\tStringBuilder sb = new StringBuilder(_url);\n-\t\t\tif (_url.endsWith(HASH_MAPPING)) {\n-\t\t\t\tsb.setLength(_url.length() - HASH_MAPPING.length());\n-\t\t\t}\n-\t\t\tif (sb.charAt(sb.length() - 1) != '/') {\n-\t\t\t\tsb.append('/');\n-\t\t\t}\n-\t\t\tcodebase = sb.append(\"screenshare\").toString();\n-\t\t}\n-\t}\n }", "filename": "openmeetings-web/src/main/java/org/apache/openmeetings/web/room/menu/StartSharingButton.java"}, {"additions": 7, "raw_url": "https://github.com/apache/openmeetings/raw/1323164ece8c4c45e742b6c6e7a557c6d840993c/openmeetings-web/src/main/java/org/apache/openmeetings/web/room/room.js", "blob_url": "https://github.com/apache/openmeetings/blob/1323164ece8c4c45e742b6c6e7a557c6d840993c/openmeetings-web/src/main/java/org/apache/openmeetings/web/room/room.js", "sha": "6a0499b88bddbeb3c4ab54436ab2dbd5d0cd0318", "changes": 17, "status": "modified", "deletions": 10, "contents_url": "https://api.github.com/repos/apache/openmeetings/contents/openmeetings-web/src/main/java/org/apache/openmeetings/web/room/room.js?ref=1323164ece8c4c45e742b6c6e7a557c6d840993c", "patch": "@@ -56,7 +56,11 @@ function initVideo(_options) {\n \tr.dialog({dialogClass: \"video\"});\n }\n \n-function setHeight() {\n+function setRoomSizes() {\n+\tvar w = $(window).width() - $(\".room.sidebar.left\").width() - 5;\n+\t$(\".room.wb.area\").width(w);\n+\t$(\".room.wb.area .wb\").width(w);\n+\n \tvar h = $(window).height() - $('#menu').height();\n \t$(\".room.sidebar.left\").height(h);\n \tvar p = $(\".room.sidebar.left .tabs\");\n@@ -65,11 +69,6 @@ function setHeight() {\n \t$(\".room.wb.area\").height(h);\n \t$(\".room.wb.area .wb\").height(h);\n }\n-function alignBlocks() {\n-\tvar w = $(window).width() - $(\".room.sidebar.left\").width() - 5;\n-\t$(\".room.wb.area\").width(w);\n-\t$(\".room.wb.area .wb\").width(w);\n-}\n function roomReload(event, ui) {\n \twindow.location.reload();\n }\n@@ -94,12 +93,10 @@ function roomClosed(jqEvent, msg) {\n }\n function roomLoad() {\n \t$(\".room.sidebar.left\").ready(function() {\n-\t\talignBlocks();\n-\t\tsetHeight();\n+\t\tsetRoomSizes();\n \t});\n \t$(window).on('resize.openmeetings', function() {\n-\t\talignBlocks();\n-\t\tsetHeight();\n+\t\tsetRoomSizes();\n \t});\n \t$(\".room.sidebar.left\").resizable({\n \t\thandles: \"e\"", "filename": "openmeetings-web/src/main/java/org/apache/openmeetings/web/room/room.js"}, {"additions": 1, "raw_url": "https://github.com/apache/openmeetings/raw/1323164ece8c4c45e742b6c6e7a557c6d840993c/openmeetings-web/src/main/java/org/apache/openmeetings/web/room/sidebar/RoomSidebar.html", "blob_url": "https://github.com/apache/openmeetings/blob/1323164ece8c4c45e742b6c6e7a557c6d840993c/openmeetings-web/src/main/java/org/apache/openmeetings/web/room/sidebar/RoomSidebar.html", "sha": "a174b10a67265fdb2e474cee7718e8b749de2b4a", "changes": 2, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/openmeetings/contents/openmeetings-web/src/main/java/org/apache/openmeetings/web/room/sidebar/RoomSidebar.html?ref=1323164ece8c4c45e742b6c6e7a557c6d840993c", "patch": "@@ -30,7 +30,7 @@\n \t\t\t\t<div wicket:id=\"user\"></div>\n \t\t\t</div>\n \t\t</div>\n-\t\t<script>setHeight();</script>\n+\t\t<script>setRoomSizes();</script>\n \t</wicket:fragment>\n \n \t<wicket:fragment wicket:id=\"file-panel\">", "filename": "openmeetings-web/src/main/java/org/apache/openmeetings/web/room/sidebar/RoomSidebar.html"}, {"additions": 10, "raw_url": "https://github.com/apache/openmeetings/raw/1323164ece8c4c45e742b6c6e7a557c6d840993c/openmeetings-web/src/main/java/org/apache/openmeetings/web/room/sidebar/RoomSidebar.java", "blob_url": "https://github.com/apache/openmeetings/blob/1323164ece8c4c45e742b6c6e7a557c6d840993c/openmeetings-web/src/main/java/org/apache/openmeetings/web/room/sidebar/RoomSidebar.java", "sha": "4776eaac0874dd5c95bcb87afe5342c9fdcc32e7", "changes": 33, "status": "modified", "deletions": 23, "contents_url": "https://api.github.com/repos/apache/openmeetings/contents/openmeetings-web/src/main/java/org/apache/openmeetings/web/room/sidebar/RoomSidebar.java?ref=1323164ece8c4c45e742b6c6e7a557c6d840993c", "patch": "@@ -25,7 +25,6 @@\n import static org.apache.wicket.ajax.attributes.CallbackParameter.explicit;\n \n import java.util.ArrayList;\n-import java.util.Arrays;\n import java.util.List;\n \n import org.apache.openmeetings.db.entity.room.Room;\n@@ -253,7 +252,9 @@ public String getCssClass() {\n \n \t\t\t@Override\n \t\t\tpublic WebMarkupContainer getPanel(String containerId) {\n-\t\t\t\treturn new UserFragment(containerId, \"user-panel\");\n+\t\t\t\tWebMarkupContainer p = new Fragment(containerId, \"user-panel\", RoomSidebar.this);\n+\t\t\t\tp.add(selfRights, updateUsers());\n+\t\t\t\treturn p;\n \t\t\t}\n \t\t};\n \t\tfileTab = new OmTab() {\n@@ -276,7 +277,9 @@ public String getCssClass() {\n \n \t\t\t@Override\n \t\t\tpublic WebMarkupContainer getPanel(String containerId) {\n-\t\t\t\treturn new FileFragment(containerId, \"file-panel\");\n+\t\t\t\tWebMarkupContainer p = new Fragment(containerId, \"file-panel\", RoomSidebar.this);\n+\t\t\t\tp.add(roomFiles);\n+\t\t\t\treturn p;\n \t\t\t}\n \t\t};\n \t\tadd((tabs = new TabbedPanel(\"tabs\", newTabModel()) {\n@@ -332,7 +335,10 @@ private TabListModel newTabModel() {\n \n \t\t\t@Override\n \t\t\tprotected List<ITab> load() {\n-\t\t\t\treturn Arrays.asList(userTab, fileTab);\n+\t\t\t\tList<ITab> l = new ArrayList<>();\n+\t\t\t\tl.add(userTab);\n+\t\t\t\tl.add(fileTab);\n+\t\t\t\treturn l;\n \t\t\t}\n \t\t};\n \t}\n@@ -352,25 +358,6 @@ public void renderHead(IHeaderResponse response) {\n \t\treturn users;\n \t}\n \n-\tpublic class UserFragment extends Fragment {\n-\t\tprivate static final long serialVersionUID = 1L;\n-\n-\t\tpublic UserFragment(String id, String markupId) {\n-\t\t\tsuper(id, markupId, RoomSidebar.this);\n-\t\t\tadd(selfRights);\n-\t\t\tadd(updateUsers());\n-\t\t}\n-\t}\n-\n-\tpublic class FileFragment extends Fragment {\n-\t\tprivate static final long serialVersionUID = 1L;\n-\n-\t\tpublic FileFragment(String id, String markupId) {\n-\t\t\tsuper(id, markupId, RoomSidebar.this);\n-\t\t\tadd(roomFiles);\n-\t\t}\n-\t}\n-\n \tprivate void updateShowFiles() {\n \t\tshowFiles = !room.getRoom().isHidden(RoomElement.Files) && room.getClient().hasRight(Right.whiteBoard);\n \t}", "filename": "openmeetings-web/src/main/java/org/apache/openmeetings/web/room/sidebar/RoomSidebar.java"}, {"additions": 2, "raw_url": "https://github.com/apache/openmeetings/raw/1323164ece8c4c45e742b6c6e7a557c6d840993c/openmeetings-web/src/main/java/org/apache/openmeetings/web/user/calendar/AppointmentDialog.java", "blob_url": "https://github.com/apache/openmeetings/blob/1323164ece8c4c45e742b6c6e7a557c6d840993c/openmeetings-web/src/main/java/org/apache/openmeetings/web/user/calendar/AppointmentDialog.java", "sha": "115ff61239d8b541ef64f248bd7ccf0416d01810", "changes": 5, "status": "modified", "deletions": 3, "contents_url": "https://api.github.com/repos/apache/openmeetings/contents/openmeetings-web/src/main/java/org/apache/openmeetings/web/user/calendar/AppointmentDialog.java?ref=1323164ece8c4c45e742b6c6e7a557c6d840993c", "patch": "@@ -346,8 +346,7 @@ public AppointmentForm(String id, CompoundPropertyModel<Appointment> model) {\n \t\t\tadd(feedback.setOutputMarkupId(true));\r\n \t\t\t//General\r\n \t\t\tadd(new RequiredTextField<String>(\"title\").setLabel(Model.of(Application.getString(572))));\r\n-\t\t\tadd(start);\r\n-\t\t\tadd(end);\r\n+\t\t\tadd(start.setRequired(true), end.setRequired(true));\r\n \t\t\tadd(ownerPanel.add(owner));\r\n \t\t\tadd(new UserMultiChoice(\"attendees\", attendeesModel));\r\n \t\t\tadd(new TextField<String>(\"location\"));\r\n@@ -433,7 +432,7 @@ protected void onUpdate(AjaxRequestTarget target) {\n \r\n \t\t@Override\r\n \t\tprotected void onValidate() {\r\n-\t\t\tif (end.getConvertedInput().isBefore(start.getConvertedInput())) {\r\n+\t\t\tif (null != end.getConvertedInput() && null != end.getConvertedInput() && end.getConvertedInput().isBefore(start.getConvertedInput())) {\r\n \t\t\t\terror(Application.getString(1592));\r\n \t\t\t}\r\n \t\t}\r", "filename": "openmeetings-web/src/main/java/org/apache/openmeetings/web/user/calendar/AppointmentDialog.java"}, {"additions": 1, "raw_url": "https://github.com/apache/openmeetings/raw/1323164ece8c4c45e742b6c6e7a557c6d840993c/openmeetings-web/src/main/java/org/apache/openmeetings/web/user/profile/WidgetsPanel.java", "blob_url": "https://github.com/apache/openmeetings/blob/1323164ece8c4c45e742b6c6e7a557c6d840993c/openmeetings-web/src/main/java/org/apache/openmeetings/web/user/profile/WidgetsPanel.java", "sha": "32c7fcc5fc18c69c063a348163c4744b6322f458", "changes": 2, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/openmeetings/contents/openmeetings-web/src/main/java/org/apache/openmeetings/web/user/profile/WidgetsPanel.java?ref=1323164ece8c4c45e742b6c6e7a557c6d840993c", "patch": "@@ -55,7 +55,7 @@ private static Widget isDisplayed(WidgetDescriptor wd) {\n \t}\n \tpublic WidgetsPanel(String id) {\n \t\tsuper(id);\n-\t\t\n+\n \t\tConfigurationDao cfgDao = getBean(ConfigurationDao.class);\n \t\tboolean confShowMyRooms = 1 == cfgDao.getConfValue(CONFIG_DASHBOARD_SHOW_MYROOMS_KEY, Integer.class, \"0\");\n \t\tboolean confShowRss = 1 == cfgDao.getConfValue(CONFIG_DASHBOARD_SHOW_RSS_KEY, Integer.class, \"0\");", "filename": "openmeetings-web/src/main/java/org/apache/openmeetings/web/user/profile/WidgetsPanel.java"}, {"additions": 59, "raw_url": "https://github.com/apache/openmeetings/raw/1323164ece8c4c45e742b6c6e7a557c6d840993c/openmeetings-web/src/main/java/org/apache/openmeetings/web/util/ExtendedClientProperties.java", "blob_url": "https://github.com/apache/openmeetings/blob/1323164ece8c4c45e742b6c6e7a557c6d840993c/openmeetings-web/src/main/java/org/apache/openmeetings/web/util/ExtendedClientProperties.java", "sha": "c0fefb15693aab57174ee39316d526b97e997ff7", "changes": 59, "status": "added", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/openmeetings/contents/openmeetings-web/src/main/java/org/apache/openmeetings/web/util/ExtendedClientProperties.java?ref=1323164ece8c4c45e742b6c6e7a557c6d840993c", "patch": "@@ -0,0 +1,59 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\") +  you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.openmeetings.web.util;\n+\n+import static org.apache.openmeetings.web.app.Application.HASH_MAPPING;\n+\n+import org.apache.wicket.protocol.http.ClientProperties;\n+import org.apache.wicket.request.IRequestParameters;\n+import org.json.JSONObject;\n+\n+public class ExtendedClientProperties extends ClientProperties {\n+\tprivate static final long serialVersionUID = 1L;\n+\tprivate String codebase;\n+\tprivate String settings;\n+\n+\tpublic String getCodebase() {\n+\t\treturn codebase;\n+\t}\n+\n+\tpublic JSONObject getSettings() {\n+\t\ttry {\n+\t\t\treturn new JSONObject(settings.toString());\n+\t\t} catch (Exception e) {\n+\t\t\t//can throw, no op\n+\t\t}\n+\t\treturn new JSONObject();\n+\t}\n+\n+\t@Override\n+\tpublic void read(IRequestParameters parameters) {\n+\t\tsuper.read(parameters);\n+\t\tString _url = parameters.getParameterValue(\"codebase\").toString(\"N/A\");\n+\t\tStringBuilder sb = new StringBuilder(_url);\n+\t\tif (_url.endsWith(HASH_MAPPING)) {\n+\t\t\tsb.setLength(_url.length() - HASH_MAPPING.length());\n+\t\t}\n+\t\tif (sb.charAt(sb.length() - 1) != '/') {\n+\t\t\tsb.append('/');\n+\t\t}\n+\t\tcodebase = sb.append(\"screenshare\").toString();\n+\t\tsettings = parameters.getParameterValue(\"settings\").toString(\"{}\");\n+\t}\n+}", "filename": "openmeetings-web/src/main/java/org/apache/openmeetings/web/util/ExtendedClientProperties.java"}], "repo": "openmeetings"}]
