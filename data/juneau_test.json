{
    "juneau_9475ed2": {
        "bug_id": "juneau_9475ed2",
        "commit": "https://github.com/apache/juneau/commit/9475ed212e035be5e6eeb681b000cfbd98f83bc1",
        "file": [
            {
                "additions": 10,
                "blob_url": "https://github.com/apache/juneau/blob/9475ed212e035be5e6eeb681b000cfbd98f83bc1/juneau-core/src/main/java/org/apache/juneau/transforms/CalendarSwap.java",
                "changes": 10,
                "contents_url": "https://api.github.com/repos/apache/juneau/contents/juneau-core/src/main/java/org/apache/juneau/transforms/CalendarSwap.java?ref=9475ed212e035be5e6eeb681b000cfbd98f83bc1",
                "deletions": 0,
                "filename": "juneau-core/src/main/java/org/apache/juneau/transforms/CalendarSwap.java",
                "patch": "@@ -142,6 +142,8 @@ public Calendar unswap(BeanSession session, String o, ClassMeta<?> hint) throws\n \r\n \t\t@Override /* PojoSwap */\r\n \t\tpublic String swap(BeanSession session, Calendar o) {\r\n+\t\t\tif (o == null)\r\n+\t\t\t\treturn null;\r\n \t\t\to = setTimeZone(session, o);\r\n \t\t\treturn DatatypeConverter.printDateTime(o);\r\n \t\t}\r\n@@ -173,6 +175,8 @@ public Calendar unswap(BeanSession session, String o, ClassMeta<?> hint) throws\n \r\n \t\t@Override /* PojoSwap */\r\n \t\tpublic String swap(BeanSession session, Calendar o) {\r\n+\t\t\tif (o == null)\r\n+\t\t\t\treturn null;\r\n \t\t\tif (o.getTimeZone().getRawOffset() != 0) {\r\n \t\t\t\tCalendar c = Calendar.getInstance(GMT);\r\n \t\t\t\tc.setTime(o.getTime());\r\n@@ -192,6 +196,8 @@ public String swap(BeanSession session, Calendar o) {\n \r\n \t\t@Override /* PojoSwap */\r\n \t\tpublic String swap(BeanSession session, Calendar o) {\r\n+\t\t\tif (o == null)\r\n+\t\t\t\treturn null;\r\n \t\t\tString s = super.swap(session, o);\r\n \t\t\treturn String.format(\"%s.%03d%s\", s.substring(0, 19), o.get(Calendar.MILLISECOND), s.substring(19));\r\n \t\t}\r\n@@ -207,6 +213,8 @@ public String swap(BeanSession session, Calendar o) {\n \r\n \t\t@Override /* PojoSwap */\r\n \t\tpublic String swap(BeanSession session, Calendar o) {\r\n+\t\t\tif (o == null)\r\n+\t\t\t\treturn null;\r\n \t\t\tString s = super.swap(session, o);\r\n \t\t\treturn String.format(\"%s.%03d%s\", s.substring(0, 19), o.get(Calendar.MILLISECOND), s.substring(19));\r\n \t\t}\r\n@@ -552,6 +560,8 @@ else if (c != null && ! c.getTimeZone().equals(df.getTimeZone())) {\n \t */\r\n \t@Override /* PojoSwap */\r\n \tpublic String swap(BeanSession session, Calendar o) {\r\n+\t\tif (o == null)\r\n+\t\t\treturn null;\r\n \t\treturn getDateFormat(session, o).format(o.getTime());\r\n \t}\r\n \r",
                "raw_url": "https://github.com/apache/juneau/raw/9475ed212e035be5e6eeb681b000cfbd98f83bc1/juneau-core/src/main/java/org/apache/juneau/transforms/CalendarSwap.java",
                "sha": "02294aba46cfd5c9bae5f0d03a70a55b5ad20738",
                "status": "modified"
            },
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/juneau/blob/9475ed212e035be5e6eeb681b000cfbd98f83bc1/juneau-core/src/main/java/org/apache/juneau/transforms/DateLongSwap.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/juneau/contents/juneau-core/src/main/java/org/apache/juneau/transforms/DateLongSwap.java?ref=9475ed212e035be5e6eeb681b000cfbd98f83bc1",
                "deletions": 0,
                "filename": "juneau-core/src/main/java/org/apache/juneau/transforms/DateLongSwap.java",
                "patch": "@@ -28,6 +28,8 @@\n \t */\r\n \t@Override /* PojoSwap */\r\n \tpublic Long swap(BeanSession session, Date o) {\r\n+\t\tif (o == null)\r\n+\t\t\treturn null;\r\n \t\treturn o.getTime();\r\n \t}\r\n \r",
                "raw_url": "https://github.com/apache/juneau/raw/9475ed212e035be5e6eeb681b000cfbd98f83bc1/juneau-core/src/main/java/org/apache/juneau/transforms/DateLongSwap.java",
                "sha": "93162806656eb6d9534e0bbc6d8cf60f016da58c",
                "status": "modified"
            },
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/juneau/blob/9475ed212e035be5e6eeb681b000cfbd98f83bc1/juneau-core/src/main/java/org/apache/juneau/transforms/DateMapSwap.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/juneau/contents/juneau-core/src/main/java/org/apache/juneau/transforms/DateMapSwap.java?ref=9475ed212e035be5e6eeb681b000cfbd98f83bc1",
                "deletions": 0,
                "filename": "juneau-core/src/main/java/org/apache/juneau/transforms/DateMapSwap.java",
                "patch": "@@ -29,6 +29,8 @@\n \t */\r\n \t@Override /* PojoSwap */\r\n \tpublic Map swap(BeanSession session, Date o) {\r\n+\t\tif (o == null)\r\n+\t\t\treturn null;\r\n \t\tObjectMap m = new ObjectMap();\r\n \t\tm.put(\"time\", o.getTime());\r\n \t\treturn m;\r",
                "raw_url": "https://github.com/apache/juneau/raw/9475ed212e035be5e6eeb681b000cfbd98f83bc1/juneau-core/src/main/java/org/apache/juneau/transforms/DateMapSwap.java",
                "sha": "fcaafe015b44e5933f4f7344c38d124fd257126c",
                "status": "modified"
            },
            {
                "additions": 10,
                "blob_url": "https://github.com/apache/juneau/blob/9475ed212e035be5e6eeb681b000cfbd98f83bc1/juneau-core/src/main/java/org/apache/juneau/transforms/DateSwap.java",
                "changes": 10,
                "contents_url": "https://api.github.com/repos/apache/juneau/contents/juneau-core/src/main/java/org/apache/juneau/transforms/DateSwap.java?ref=9475ed212e035be5e6eeb681b000cfbd98f83bc1",
                "deletions": 0,
                "filename": "juneau-core/src/main/java/org/apache/juneau/transforms/DateSwap.java",
                "patch": "@@ -141,6 +141,8 @@ public Date unswap(BeanSession session, String o, ClassMeta<?> hint) throws Pars\n \r\n \t\t@Override /* PojoSwap */\r\n \t\tpublic String swap(BeanSession session, Date o) {\r\n+\t\t\tif (o == null)\r\n+\t\t\t\treturn null;\r\n \t\t\tCalendar c = new GregorianCalendar();\r\n \t\t\tc.setTime(o);\r\n \t\t\tc = setTimeZone(session, c);\r\n@@ -174,6 +176,8 @@ public Date unswap(BeanSession session, String o, ClassMeta<?> hint) throws Pars\n \r\n \t\t@Override /* PojoSwap */\r\n \t\tpublic String swap(BeanSession session, Date o) {\r\n+\t\t\tif (o == null)\r\n+\t\t\t\treturn null;\r\n \t\t\tCalendar c = new GregorianCalendar();\r\n \t\t\tc.setTime(o);\r\n \t\t\tif (c.getTimeZone().getRawOffset() != 0) {\r\n@@ -195,6 +199,8 @@ public String swap(BeanSession session, Date o) {\n \r\n \t\t@Override /* PojoSwap */\r\n \t\tpublic String swap(BeanSession session, Date o) {\r\n+\t\t\tif (o == null)\r\n+\t\t\t\treturn null;\r\n \t\t\tCalendar c = new GregorianCalendar();\r\n \t\t\tc.setTime(o);\r\n \t\t\tString s = super.swap(session, o);\r\n@@ -212,6 +218,8 @@ public String swap(BeanSession session, Date o) {\n \r\n \t\t@Override /* PojoSwap */\r\n \t\tpublic String swap(BeanSession session, Date o) {\r\n+\t\t\tif (o == null)\r\n+\t\t\t\treturn null;\r\n \t\t\tCalendar c = new GregorianCalendar();\r\n \t\t\tc.setTime(o);\r\n \t\t\tString s = super.swap(session, o);\r\n@@ -553,6 +561,8 @@ else if (session.getTimeZone() != null)\n \t */\r\n \t@Override /* PojoSwap */\r\n \tpublic String swap(BeanSession session, Date o) {\r\n+\t\tif (o == null)\r\n+\t\t\treturn null;\r\n \t\treturn getDateFormat(session).format(o.getTime());\r\n \t}\r\n \r",
                "raw_url": "https://github.com/apache/juneau/raw/9475ed212e035be5e6eeb681b000cfbd98f83bc1/juneau-core/src/main/java/org/apache/juneau/transforms/DateSwap.java",
                "sha": "3de5ba354b97788605cffb1202ab1cc20e36c7a0",
                "status": "modified"
            }
        ],
        "message": "Fix possible NPEs in Calendar and Date swaps.",
        "parent": "https://github.com/apache/juneau/commit/d5ba839707e462f6791a18ba752d45e623e14bdd",
        "patched_files": [
            "DateSwap.java",
            "CalendarSwap.java"
        ],
        "repo": "juneau",
        "unit_tests": [
            "DateSwapTest.java",
            "CalendarSwapTest.java"
        ]
    },
    "juneau_9d08644": {
        "bug_id": "juneau_9d08644",
        "commit": "https://github.com/apache/juneau/commit/9d086440ead9c596c824f5a04bd5048ba47e6b71",
        "file": [
            {
                "additions": 10,
                "blob_url": "https://github.com/apache/juneau/blob/9d086440ead9c596c824f5a04bd5048ba47e6b71/juneau-core-test/src/test/java/org/apache/juneau/ObjectListTest.java",
                "changes": 10,
                "contents_url": "https://api.github.com/repos/apache/juneau/contents/juneau-core-test/src/test/java/org/apache/juneau/ObjectListTest.java?ref=9d086440ead9c596c824f5a04bd5048ba47e6b71",
                "deletions": 0,
                "filename": "juneau-core-test/src/test/java/org/apache/juneau/ObjectListTest.java",
                "patch": "@@ -12,8 +12,10 @@\n // ***************************************************************************************************************************\r\n package org.apache.juneau;\r\n \r\n+import static org.apache.juneau.TestUtils.*;\r\n import static org.junit.Assert.*;\r\n \r\n+import java.io.*;\r\n import java.util.*;\r\n \r\n import org.junit.*;\r\n@@ -96,4 +98,12 @@ public void testAtMethods() throws Exception {\n \t\tl.deleteAt(\"2\");\r\n \t\tassertEquals(\"[{foo:'bing'},{baz:123}]\", l.toString());\r\n \t}\r\n+\r\n+\t//====================================================================================================\r\n+\t// ObjectList(Reader)\r\n+\t//====================================================================================================\r\n+\t@Test\r\n+\tpublic void testFromReader() throws Exception {\r\n+\t\tassertObjectEquals(\"[1,2,3]\", new ObjectList(new StringReader(\"[1,2,3]\")));\r\n+\t}\r\n }\n\\ No newline at end of file",
                "raw_url": "https://github.com/apache/juneau/raw/9d086440ead9c596c824f5a04bd5048ba47e6b71/juneau-core-test/src/test/java/org/apache/juneau/ObjectListTest.java",
                "sha": "0f136e6db68fa0b191adc6fe7c31b7e38e54a5be",
                "status": "modified"
            },
            {
                "additions": 10,
                "blob_url": "https://github.com/apache/juneau/blob/9d086440ead9c596c824f5a04bd5048ba47e6b71/juneau-core-test/src/test/java/org/apache/juneau/ObjectMapTest.java",
                "changes": 10,
                "contents_url": "https://api.github.com/repos/apache/juneau/contents/juneau-core-test/src/test/java/org/apache/juneau/ObjectMapTest.java?ref=9d086440ead9c596c824f5a04bd5048ba47e6b71",
                "deletions": 0,
                "filename": "juneau-core-test/src/test/java/org/apache/juneau/ObjectMapTest.java",
                "patch": "@@ -15,6 +15,8 @@\n import static org.apache.juneau.TestUtils.*;\r\n import static org.junit.Assert.*;\r\n \r\n+import java.io.*;\r\n+\r\n import org.apache.juneau.utils.*;\r\n import org.junit.*;\r\n \r\n@@ -311,4 +313,12 @@ public void testAtMethods() throws Exception {\n \t\tm.deleteAt(\"a/1\");\r\n \t\tassertEquals(\"{a:[{b:'d'}]}\", m.toString());\r\n \t}\r\n+\r\n+\t//====================================================================================================\r\n+\t// ObjectMap(Reader)\r\n+\t//====================================================================================================\r\n+\t@Test\r\n+\tpublic void testFromReader() throws Exception {\r\n+\t\tassertObjectEquals(\"{foo:'bar'}\", new ObjectMap(new StringReader(\"{foo:'bar'}\")));\r\n+\t}\r\n }\n\\ No newline at end of file",
                "raw_url": "https://github.com/apache/juneau/raw/9d086440ead9c596c824f5a04bd5048ba47e6b71/juneau-core-test/src/test/java/org/apache/juneau/ObjectMapTest.java",
                "sha": "850eef3a8252d21681281bf8470fa40be4356179",
                "status": "modified"
            },
            {
                "additions": 13,
                "blob_url": "https://github.com/apache/juneau/blob/9d086440ead9c596c824f5a04bd5048ba47e6b71/juneau-core/src/main/java/org/apache/juneau/ObjectList.java",
                "changes": 13,
                "contents_url": "https://api.github.com/repos/apache/juneau/contents/juneau-core/src/main/java/org/apache/juneau/ObjectList.java?ref=9d086440ead9c596c824f5a04bd5048ba47e6b71",
                "deletions": 0,
                "filename": "juneau-core/src/main/java/org/apache/juneau/ObjectList.java",
                "patch": "@@ -162,9 +162,22 @@ public ObjectList(CharSequence s) throws ParseException {\n \t * @throws IOException If a problem occurred trying to read from the reader.\r\n \t */\r\n \tpublic ObjectList(Reader r, Parser p) throws ParseException, IOException {\r\n+\t\tthis(p == null ? BeanContext.DEFAULT.createSession() : p.getBeanContext().createSession());\r\n \t\tparseReader(r, p);\r\n \t}\r\n \r\n+\t/**\r\n+\t * Shortcut for <code><jk>new</jk> ObjectList(reader, JsonParser.<jsf>DEFAULT</jsf>)</code>.\r\n+\t *\r\n+\t * @param r The reader to read from.  The reader will be wrapped in a {@link BufferedReader} if it isn't already.\r\n+\t * @throws ParseException If the input contains a syntax error or is malformed.\r\n+\t * @throws IOException If a problem occurred trying to read from the reader.\r\n+\t */\r\n+\tpublic ObjectList(Reader r) throws ParseException, IOException {\r\n+\t\tthis(BeanContext.DEFAULT.createSession());\r\n+\t\tparseReader(r, JsonParser.DEFAULT);\r\n+\t}\r\n+\r\n \tprivate void parseReader(Reader r, Parser p) throws ParseException {\r\n \t\tif (p == null)\r\n \t\t\tp = JsonParser.DEFAULT;\r",
                "raw_url": "https://github.com/apache/juneau/raw/9d086440ead9c596c824f5a04bd5048ba47e6b71/juneau-core/src/main/java/org/apache/juneau/ObjectList.java",
                "sha": "0629d3f89d7b3a7f1e63d4a7949e0c1cf84dd4e9",
                "status": "modified"
            },
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/juneau/blob/9d086440ead9c596c824f5a04bd5048ba47e6b71/juneau-core/src/main/java/org/apache/juneau/ObjectMap.java",
                "changes": 3,
                "contents_url": "https://api.github.com/repos/apache/juneau/contents/juneau-core/src/main/java/org/apache/juneau/ObjectMap.java?ref=9d086440ead9c596c824f5a04bd5048ba47e6b71",
                "deletions": 1,
                "filename": "juneau-core/src/main/java/org/apache/juneau/ObjectMap.java",
                "patch": "@@ -173,6 +173,7 @@ public ObjectMap(CharSequence s) throws ParseException {\n \t * @throws IOException If a problem occurred trying to read from the reader.\r\n \t */\r\n \tpublic ObjectMap(Reader r, Parser p) throws ParseException, IOException {\r\n+\t\tthis(p == null ? BeanContext.DEFAULT.createSession() : p.getBeanContext().createSession());\r\n \t\tparseReader(r, p);\r\n \t}\r\n \r\n@@ -184,6 +185,7 @@ public ObjectMap(Reader r, Parser p) throws ParseException, IOException {\n \t * @throws IOException If a problem occurred trying to read from the reader.\r\n \t */\r\n \tpublic ObjectMap(Reader r) throws ParseException, IOException {\r\n+\t\tthis(BeanContext.DEFAULT.createSession());\r\n \t\tparseReader(r, JsonParser.DEFAULT);\r\n \t}\r\n \r\n@@ -206,7 +208,6 @@ public ObjectMap() {\n \t * @param session The bean session to use for creating beans.\r\n \t */\r\n \tpublic ObjectMap(BeanSession session) {\r\n-\t\tsuper();\r\n \t\tthis.session = session;\r\n \t}\r\n \r",
                "raw_url": "https://github.com/apache/juneau/raw/9d086440ead9c596c824f5a04bd5048ba47e6b71/juneau-core/src/main/java/org/apache/juneau/ObjectMap.java",
                "sha": "110c84dd0b45c3c7de98f8cf59b22346c61ee291",
                "status": "modified"
            }
        ],
        "message": "Fix NPE when using ObjectMap(Reader)",
        "parent": "https://github.com/apache/juneau/commit/9475ed212e035be5e6eeb681b000cfbd98f83bc1",
        "patched_files": [
            "ObjectList.java",
            "ObjectMap.java"
        ],
        "repo": "juneau",
        "unit_tests": [
            "ObjectListTest.java",
            "ObjectMapTest.java"
        ]
    }
}