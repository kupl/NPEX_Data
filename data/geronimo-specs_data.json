[
    {
        "repo": "geronimo-specs",
        "message": "FLEECE-7 avoid NPE, thanks Handruk Saly\n\ngit-svn-id: https://svn.apache.org/repos/asf/geronimo/specs/trunk@1609892 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/geronimo-specs/commit/8af02a25d6b03531c5e3ddd4ad16e060090ea5a0",
        "parent": "https://github.com/apache/geronimo-specs/commit/d07e73dcf28ac7058656a6068a02aac53280ee44",
        "bug_id": "geronimo-specs_1",
        "file": [
            {
                "sha": "365ae79634bdef405ebddda7aecd680e591c6fe8",
                "filename": "geronimo-json_1.0_spec/src/main/java/javax/json/JsonValue.java",
                "blob_url": "https://github.com/apache/geronimo-specs/blob/8af02a25d6b03531c5e3ddd4ad16e060090ea5a0/geronimo-json_1.0_spec/src/main/java/javax/json/JsonValue.java",
                "raw_url": "https://github.com/apache/geronimo-specs/raw/8af02a25d6b03531c5e3ddd4ad16e060090ea5a0/geronimo-json_1.0_spec/src/main/java/javax/json/JsonValue.java",
                "status": "modified",
                "changes": 2,
                "additions": 1,
                "contents_url": "https://api.github.com/repos/apache/geronimo-specs/contents/geronimo-json_1.0_spec/src/main/java/javax/json/JsonValue.java?ref=8af02a25d6b03531c5e3ddd4ad16e060090ea5a0",
                "patch": "@@ -35,7 +35,7 @@ public int hashCode() {\n \n         @Override\n         public String toString() {\n-            return String.valueOf(null);\n+            return \"null\";\n         }\n     };\n     static final JsonValue TRUE = new JsonValue() {",
                "deletions": 1
            }
        ]
    },
    {
        "repo": "geronimo-specs",
        "message": "GERONIMO-6484: NPE in MimetypesFileTypeMap \n\ngit-svn-id: https://svn.apache.org/repos/asf/geronimo/specs/trunk@1504952 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/geronimo-specs/commit/d45b043544517cf0c7b2bb90b1613155773de5af",
        "parent": "https://github.com/apache/geronimo-specs/commit/9d9f8d03708548dbe218b546663423be0ce16f48",
        "bug_id": "geronimo-specs_2",
        "file": [
            {
                "sha": "4386910788a2b3dac45d90581c6b3508a5779f7a",
                "filename": "geronimo-activation_1.1_spec/src/main/java/javax/activation/MimetypesFileTypeMap.java",
                "blob_url": "https://github.com/apache/geronimo-specs/blob/d45b043544517cf0c7b2bb90b1613155773de5af/geronimo-activation_1.1_spec/src/main/java/javax/activation/MimetypesFileTypeMap.java",
                "raw_url": "https://github.com/apache/geronimo-specs/raw/d45b043544517cf0c7b2bb90b1613155773de5af/geronimo-activation_1.1_spec/src/main/java/javax/activation/MimetypesFileTypeMap.java",
                "status": "modified",
                "changes": 3,
                "additions": 3,
                "contents_url": "https://api.github.com/repos/apache/geronimo-specs/contents/geronimo-activation_1.1_spec/src/main/java/javax/activation/MimetypesFileTypeMap.java?ref=d45b043544517cf0c7b2bb90b1613155773de5af",
                "patch": "@@ -59,6 +59,9 @@ public MimetypesFileTypeMap() {\n         // defaults from resources called /META-INF/mime.types\n         try {\n             ClassLoader cl = MimetypesFileTypeMap.class.getClassLoader();\n+            if (cl == null) {\n+                cl = ClassLoader.getSystemClassLoader();\n+            }\n             Enumeration e = cl.getResources(\"/META-INF/mime.types\");\n             while (e.hasMoreElements()) {\n                 URL url = (URL) e.nextElement();",
                "deletions": 0
            }
        ]
    },
    {
        "repo": "geronimo-specs",
        "message": "GERONIMO-6330: NPE in CompositeELResolver (and fix formatting a bit)\n\ngit-svn-id: https://svn.apache.org/repos/asf/geronimo/specs/trunk@1327712 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/geronimo-specs/commit/6ba231c3de16f0d1ff462df5b366b33e10c8946e",
        "parent": "https://github.com/apache/geronimo-specs/commit/b3214d4c0a839eaf92d8a9842995a0e6459b7284",
        "bug_id": "geronimo-specs_3",
        "file": [
            {
                "sha": "89e7cad17a4f022ca6b2907f85bb5ae2f4cce568",
                "filename": "geronimo-el_2.2_spec/src/main/java/javax/el/CompositeELResolver.java",
                "blob_url": "https://github.com/apache/geronimo-specs/blob/6ba231c3de16f0d1ff462df5b366b33e10c8946e/geronimo-el_2.2_spec/src/main/java/javax/el/CompositeELResolver.java",
                "raw_url": "https://github.com/apache/geronimo-specs/raw/6ba231c3de16f0d1ff462df5b366b33e10c8946e/geronimo-el_2.2_spec/src/main/java/javax/el/CompositeELResolver.java",
                "status": "modified",
                "changes": 70,
                "additions": 38,
                "contents_url": "https://api.github.com/repos/apache/geronimo-specs/contents/geronimo-el_2.2_spec/src/main/java/javax/el/CompositeELResolver.java?ref=6ba231c3de16f0d1ff462df5b366b33e10c8946e",
                "patch": "@@ -47,12 +47,12 @@ synchronized public void add(ELResolver elResolver) {\n     public Object getValue(ELContext context, Object base, Object property)\n             throws NullPointerException, PropertyNotFoundException, ELException {\n         context.setPropertyResolved(false);\n-                int sz;\n-                ELResolver[] rslvrs;\n-                synchronized (this) {\n-                    sz = this.size;\n-                    rslvrs = this.resolvers;\n-                }\n+        int sz;\n+        ELResolver[] rslvrs;\n+        synchronized (this) {\n+            sz = this.size;\n+            rslvrs = this.resolvers;\n+        }\n         Object result = null;\n         for (int i = 0; i < sz; i++) {\n             result = rslvrs[i].getValue(context, base, property);\n@@ -68,12 +68,12 @@ public void setValue(ELContext context, Object base, Object property,\n             PropertyNotFoundException, PropertyNotWritableException,\n             ELException {\n         context.setPropertyResolved(false);\n-                int sz;\n-                ELResolver[] rslvrs;\n-                synchronized (this) {\n-                    sz = this.size;\n-                    rslvrs = this.resolvers;\n-                }\n+        int sz;\n+        ELResolver[] rslvrs;\n+        synchronized (this) {\n+            sz = this.size;\n+            rslvrs = this.resolvers;\n+        }\n         for (int i = 0; i < sz; i++) {\n             rslvrs[i].setValue(context, base, property, value);\n             if (context.isPropertyResolved()) {\n@@ -85,12 +85,12 @@ public void setValue(ELContext context, Object base, Object property,\n     public boolean isReadOnly(ELContext context, Object base, Object property)\n             throws NullPointerException, PropertyNotFoundException, ELException {\n         context.setPropertyResolved(false);\n-                int sz;\n-                ELResolver[] rslvrs;\n-                synchronized (this) {\n-                    sz = this.size;\n-                    rslvrs = this.resolvers;\n-                }\n+        int sz;\n+        ELResolver[] rslvrs;\n+        synchronized (this) {\n+            sz = this.size;\n+            rslvrs = this.resolvers;\n+        }\n         boolean readOnly = false;\n         for (int i = 0; i < sz; i++) {\n             readOnly = rslvrs[i].isReadOnly(context, base, property);\n@@ -106,12 +106,12 @@ public boolean isReadOnly(ELContext context, Object base, Object property)\n     }\n \n     public Class<?> getCommonPropertyType(ELContext context, Object base) {\n-                int sz;\n-                ELResolver[] rslvrs;\n-                synchronized (this) {\n-                    sz = this.size;\n-                    rslvrs = this.resolvers;\n-                }\n+        int sz;\n+        ELResolver[] rslvrs;\n+        synchronized (this) {\n+            sz = this.size;\n+            rslvrs = this.resolvers;\n+        }\n         Class<?> commonType = null, type = null;\n         for (int i = 0; i < sz; i++) {\n             type = rslvrs[i].getCommonPropertyType(context, base);\n@@ -126,12 +126,12 @@ public boolean isReadOnly(ELContext context, Object base, Object property)\n     public Class<?> getType(ELContext context, Object base, Object property)\n             throws NullPointerException, PropertyNotFoundException, ELException {\n         context.setPropertyResolved(false);\n-                int sz;\n-                ELResolver[] rslvrs;\n-                synchronized (this) {\n-                    sz = this.size;\n-                    rslvrs = this.resolvers;\n-                }\n+        int sz;\n+        ELResolver[] rslvrs;\n+        synchronized (this) {\n+            sz = this.size;\n+            rslvrs = this.resolvers;\n+        }\n         Class<?> type;\n         for (int i = 0; i < sz; i++) {\n             type = rslvrs[i].getType(context, base, property);\n@@ -220,9 +220,15 @@ public Object invoke(ELContext context, Object base, Object method, Class<?>[] p\n         if (context.getContext(ExpressionFactory.class) == null) {\n             context.putContext(ExpressionFactory.class, expressionFactory);\n         }\n+        int sz;\n+        ELResolver[] rslvrs;\n+        synchronized (this) {\n+            sz = this.size;\n+            rslvrs = this.resolvers;\n+        }\n         Object retValue = null;\n-        for (ELResolver resolver : resolvers) {\n-            retValue = resolver.invoke(context, base, targetMethod, paramTypes, params);\n+        for (int i = 0; i < sz; i++) {\n+            retValue = rslvrs[i].invoke(context, base, targetMethod, paramTypes, params);\n             if (context.isPropertyResolved()) {\n                 return retValue;\n             }",
                "deletions": 32
            }
        ]
    },
    {
        "repo": "geronimo-specs",
        "message": "GERONIMO-4126 NPE if null argument specified for InternetHeaders.getMatchingHeaders()\n\nProblem uncovered by running with James test cases. \n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/geronimo/specs/trunk@669143 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/geronimo-specs/commit/f19b083e7a0d1a43daf494d609b7ff63246d0886",
        "parent": "https://github.com/apache/geronimo-specs/commit/d0ab9ec83a7b5d7156a5ef0136c28d2ff130f510",
        "bug_id": "geronimo-specs_4",
        "file": [
            {
                "sha": "1b92692e1c93f8712f44df38f2f860c157fdc0fd",
                "filename": "geronimo-javamail_1.4_spec/src/main/java/javax/mail/internet/InternetHeaders.java",
                "blob_url": "https://github.com/apache/geronimo-specs/blob/f19b083e7a0d1a43daf494d609b7ff63246d0886/geronimo-javamail_1.4_spec/src/main/java/javax/mail/internet/InternetHeaders.java",
                "raw_url": "https://github.com/apache/geronimo-specs/raw/f19b083e7a0d1a43daf494d609b7ff63246d0886/geronimo-javamail_1.4_spec/src/main/java/javax/mail/internet/InternetHeaders.java",
                "status": "modified",
                "changes": 6,
                "additions": 6,
                "contents_url": "https://api.github.com/repos/apache/geronimo-specs/contents/geronimo-javamail_1.4_spec/src/main/java/javax/mail/internet/InternetHeaders.java?ref=f19b083e7a0d1a43daf494d609b7ff63246d0886",
                "patch": "@@ -469,6 +469,12 @@ public Enumeration getAllHeaders() {\n      *         for a complete mismatch.\n      */\n     private boolean matchHeader(String name, String[] names) {\n+        // the list of names is not required, so treat this as if it \n+        // was an empty list and we didn't get a match. \n+        if (names == null) {\n+            return false; \n+        }\n+        \n         for (int i = 0; i < names.length; i++) {\n             if (name.equalsIgnoreCase(names[i])) {\n                 return true;",
                "deletions": 0
            }
        ]
    },
    {
        "repo": "geronimo-specs",
        "message": "GERONIMO-1956 \n\nThere are multiple problems with the MimeMessage.writeTo() method when used to write MultiPart message data to an output stream.\n\n1) The intenret headers are missing a space between the \":\" delimiter and the header data.\n2) The filtering version of MimeMessage.writeTo() is not properly processing the header ignore list.\n3) The setDataHandler() method of MimeMessage and MimeBodyPart are not clearing existing Content-Type and Content-Transfer-Encoding headers.\n4) The MimeMessage and MimeBodyPart classes are not setting a default Content-TransferEncoding header when saveChanges() is called.\n5) Remove header improperly gives a NullPointerException when removing a non-existent header. \n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/geronimo/specs/trunk@398618 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/geronimo-specs/commit/e00fbac2115584a3f5fffc2c4c2810423157bba3",
        "parent": "https://github.com/apache/geronimo-specs/commit/04bf370fd1268e52e80ebf9ad3b1156838d72426",
        "bug_id": "geronimo-specs_5",
        "file": [
            {
                "sha": "9ec2daae0a11f50347db05d127a88cd8a7412313",
                "filename": "geronimo-spec-javamail/src/main/java/javax/mail/internet/InternetHeaders.java",
                "blob_url": "https://github.com/apache/geronimo-specs/blob/e00fbac2115584a3f5fffc2c4c2810423157bba3/geronimo-spec-javamail/src/main/java/javax/mail/internet/InternetHeaders.java",
                "raw_url": "https://github.com/apache/geronimo-specs/raw/e00fbac2115584a3f5fffc2c4c2810423157bba3/geronimo-spec-javamail/src/main/java/javax/mail/internet/InternetHeaders.java",
                "status": "modified",
                "changes": 12,
                "additions": 10,
                "contents_url": "https://api.github.com/repos/apache/geronimo-specs/contents/geronimo-spec-javamail/src/main/java/javax/mail/internet/InternetHeaders.java?ref=e00fbac2115584a3f5fffc2c4c2810423157bba3",
                "patch": "@@ -264,7 +264,10 @@ public void addHeader(String name, String value) {\n      */\n     public void removeHeader(String name) {\n         List list = getHeaderList(name);\n-        list.clear();\n+        // it's possible we might not have the named header.  This is a nop if the header doesn't exist.\n+        if (list != null) {\n+            list.clear();\n+        }\n     }\n \n     /**\n@@ -402,7 +405,11 @@ private void setHeaderList(String name, List list) {\n     void writeTo(OutputStream out, String[] ignore) throws IOException {\n         Map map = new LinkedHashMap(headers);\n         if (ignore != null) {\n-            map.keySet().removeAll(Arrays.asList(ignore));\n+            // remove each of these from the header list (note, they are stored as lower case keys).\n+            for (int i = 0; i < ignore.length; i++) {\n+                String key = ignore[i].toLowerCase();\n+                map.remove(key);\n+            }\n         }\n         for (Iterator i = map.entrySet().iterator(); i.hasNext();) {\n             Map.Entry entry = (Map.Entry) i.next();\n@@ -413,6 +420,7 @@ void writeTo(OutputStream out, String[] ignore) throws IOException {\n                     InternetHeader header = (InternetHeader) headers.get(j);\n                     out.write(header.getName().getBytes());\n                     out.write(':');\n+                    out.write(' ');\n                     out.write(header.getValue().getBytes());\n                     out.write(13);\n                     out.write(10);",
                "deletions": 2
            },
            {
                "sha": "2b721d4a4471bbf3aed408daabb5ae16fdcefe7f",
                "filename": "geronimo-spec-javamail/src/main/java/javax/mail/internet/MimeBodyPart.java",
                "blob_url": "https://github.com/apache/geronimo-specs/blob/e00fbac2115584a3f5fffc2c4c2810423157bba3/geronimo-spec-javamail/src/main/java/javax/mail/internet/MimeBodyPart.java",
                "raw_url": "https://github.com/apache/geronimo-specs/raw/e00fbac2115584a3f5fffc2c4c2810423157bba3/geronimo-spec-javamail/src/main/java/javax/mail/internet/MimeBodyPart.java",
                "status": "modified",
                "changes": 14,
                "additions": 11,
                "contents_url": "https://api.github.com/repos/apache/geronimo-specs/contents/geronimo-spec-javamail/src/main/java/javax/mail/internet/MimeBodyPart.java?ref=e00fbac2115584a3f5fffc2c4c2810423157bba3",
                "patch": "@@ -18,21 +18,23 @@\n package javax.mail.internet;\n \n import java.io.ByteArrayInputStream;\n+import java.io.ByteArrayOutputStream;\n import java.io.IOException;\n import java.io.InputStream;\n import java.io.OutputStream;\n-import java.io.ByteArrayOutputStream;\n import java.io.UnsupportedEncodingException;\n import java.util.Enumeration;\n+\n import javax.activation.DataHandler;\n import javax.mail.BodyPart;\n import javax.mail.MessagingException;\n import javax.mail.Multipart;\n import javax.mail.Part;\n import javax.mail.internet.HeaderTokenizer.Token;\n+import javax.swing.text.AbstractDocument.Content;\n \n-import org.apache.geronimo.mail.util.SessionUtil;\n import org.apache.geronimo.mail.util.ASCIIUtil;\n+import org.apache.geronimo.mail.util.SessionUtil;\n \n /**\n  * @version $Rev$ $Date$\n@@ -374,6 +376,12 @@ public Object getContent() throws MessagingException, IOException {\n \n     public void setDataHandler(DataHandler handler) throws MessagingException {\n         dh = handler;\n+        // if we have a handler override, then we need to invalidate any content\n+        // headers that define the types.  This information will be derived from the\n+        // data heander unless subsequently overridden.\n+        removeHeader(\"Content-Type\");\n+        removeHeader(\"Content-Transfer-Encoding\");\n+\n     }\n \n     public void setContent(Object content, String type) throws MessagingException {\n@@ -502,7 +510,7 @@ protected void updateHeaders() throws MessagingException {\n             else if (!content.match(\"message/rfc822\")) {\n                 // simple part, we need to update the header type information\n                 // if no encoding is set yet, figure this out from the data handler.\n-                if (getHeader(\"Content-Transfer-Encoding\") == null) {\n+                if (getSingleHeader(\"Content-Transfer-Encoding\") == null) {\n                     setHeader(\"Content-Transfer-Encoding\", MimeUtility.getEncoding(handler));\n                 }\n ",
                "deletions": 3
            },
            {
                "sha": "fde8a68e51de29a907eb65a517b4bcf7f3c0a644",
                "filename": "geronimo-spec-javamail/src/main/java/javax/mail/internet/MimeMessage.java",
                "blob_url": "https://github.com/apache/geronimo-specs/blob/e00fbac2115584a3f5fffc2c4c2810423157bba3/geronimo-spec-javamail/src/main/java/javax/mail/internet/MimeMessage.java",
                "raw_url": "https://github.com/apache/geronimo-specs/raw/e00fbac2115584a3f5fffc2c4c2810423157bba3/geronimo-spec-javamail/src/main/java/javax/mail/internet/MimeMessage.java",
                "status": "modified",
                "changes": 7,
                "additions": 6,
                "contents_url": "https://api.github.com/repos/apache/geronimo-specs/contents/geronimo-spec-javamail/src/main/java/javax/mail/internet/MimeMessage.java?ref=e00fbac2115584a3f5fffc2c4c2810423157bba3",
                "patch": "@@ -915,6 +915,11 @@ public Object getContent() throws MessagingException, IOException {\n \n     public void setDataHandler(DataHandler handler) throws MessagingException {\n         dh = handler;\n+        // if we have a handler override, then we need to invalidate any content\n+        // headers that define the types.  This information will be derived from the\n+        // data heander unless subsequently overridden.\n+        removeHeader(\"Content-Type\");\n+        removeHeader(\"Content-Transfer-Encoding\");\n     }\n \n     public void setContent(Object content, String type) throws MessagingException {\n@@ -1338,7 +1343,7 @@ protected void updateHeaders() throws MessagingException {\n             else if (!content.match(\"message/rfc822\")) {\n                 // simple part, we need to update the header type information\n                 // if no encoding is set yet, figure this out from the data handler content.\n-                if (getHeader(\"Content-Transfer-Encoding\") == null) {\n+                if (getSingleHeader(\"Content-Transfer-Encoding\") == null) {\n                     setHeader(\"Content-Transfer-Encoding\", MimeUtility.getEncoding(handler));\n                 }\n ",
                "deletions": 1
            },
            {
                "sha": "143fe4648f5c5ae81379a0a8aa5ae1b693662bfc",
                "filename": "geronimo-spec-javamail/src/main/java/javax/mail/internet/MimeMultipart.java",
                "blob_url": "https://github.com/apache/geronimo-specs/blob/e00fbac2115584a3f5fffc2c4c2810423157bba3/geronimo-spec-javamail/src/main/java/javax/mail/internet/MimeMultipart.java",
                "raw_url": "https://github.com/apache/geronimo-specs/raw/e00fbac2115584a3f5fffc2c4c2810423157bba3/geronimo-spec-javamail/src/main/java/javax/mail/internet/MimeMultipart.java",
                "status": "modified",
                "changes": 2,
                "additions": 1,
                "contents_url": "https://api.github.com/repos/apache/geronimo-specs/contents/geronimo-spec-javamail/src/main/java/javax/mail/internet/MimeMultipart.java?ref=e00fbac2115584a3f5fffc2c4c2810423157bba3",
                "patch": "@@ -212,7 +212,7 @@ private synchronized static String getBoundary() {\n             i = part++;\n         }\n         StringBuffer buf = new StringBuffer(64);\n-        buf.append(\"----=_Part_\").append(i).append('.').append(System.currentTimeMillis());\n+        buf.append(\"----=_Part_\").append(i).append('_').append((new Object()).hashCode()).append('.').append(System.currentTimeMillis());\n         return buf.toString();\n     }\n ",
                "deletions": 1
            }
        ]
    }
]