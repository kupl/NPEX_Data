[{"commit": "https://github.com/apache/geronimo-specs/commit/8af02a25d6b03531c5e3ddd4ad16e060090ea5a0", "parent": "https://github.com/apache/geronimo-specs/commit/d07e73dcf28ac7058656a6068a02aac53280ee44", "message": "FLEECE-7 avoid NPE, thanks Handruk Saly\n\ngit-svn-id: https://svn.apache.org/repos/asf/geronimo/specs/trunk@1609892 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "geronimo-specs_1", "file": [{"additions": 1, "raw_url": "https://github.com/apache/geronimo-specs/raw/8af02a25d6b03531c5e3ddd4ad16e060090ea5a0/geronimo-json_1.0_spec/src/main/java/javax/json/JsonValue.java", "blob_url": "https://github.com/apache/geronimo-specs/blob/8af02a25d6b03531c5e3ddd4ad16e060090ea5a0/geronimo-json_1.0_spec/src/main/java/javax/json/JsonValue.java", "sha": "365ae79634bdef405ebddda7aecd680e591c6fe8", "changes": 2, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/geronimo-specs/contents/geronimo-json_1.0_spec/src/main/java/javax/json/JsonValue.java?ref=8af02a25d6b03531c5e3ddd4ad16e060090ea5a0", "patch": "@@ -35,7 +35,7 @@ public int hashCode() {\n \n         @Override\n         public String toString() {\n-            return String.valueOf(null);\n+            return \"null\";\n         }\n     };\n     static final JsonValue TRUE = new JsonValue() {", "filename": "geronimo-json_1.0_spec/src/main/java/javax/json/JsonValue.java"}], "repo": "geronimo-specs"}, {"commit": "https://github.com/apache/geronimo-specs/commit/d45b043544517cf0c7b2bb90b1613155773de5af", "parent": "https://github.com/apache/geronimo-specs/commit/9d9f8d03708548dbe218b546663423be0ce16f48", "message": "GERONIMO-6484: NPE in MimetypesFileTypeMap \n\ngit-svn-id: https://svn.apache.org/repos/asf/geronimo/specs/trunk@1504952 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "geronimo-specs_2", "file": [{"additions": 3, "raw_url": "https://github.com/apache/geronimo-specs/raw/d45b043544517cf0c7b2bb90b1613155773de5af/geronimo-activation_1.1_spec/src/main/java/javax/activation/MimetypesFileTypeMap.java", "blob_url": "https://github.com/apache/geronimo-specs/blob/d45b043544517cf0c7b2bb90b1613155773de5af/geronimo-activation_1.1_spec/src/main/java/javax/activation/MimetypesFileTypeMap.java", "sha": "4386910788a2b3dac45d90581c6b3508a5779f7a", "changes": 3, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/geronimo-specs/contents/geronimo-activation_1.1_spec/src/main/java/javax/activation/MimetypesFileTypeMap.java?ref=d45b043544517cf0c7b2bb90b1613155773de5af", "patch": "@@ -59,6 +59,9 @@ public MimetypesFileTypeMap() {\n         // defaults from resources called /META-INF/mime.types\n         try {\n             ClassLoader cl = MimetypesFileTypeMap.class.getClassLoader();\n+            if (cl == null) {\n+                cl = ClassLoader.getSystemClassLoader();\n+            }\n             Enumeration e = cl.getResources(\"/META-INF/mime.types\");\n             while (e.hasMoreElements()) {\n                 URL url = (URL) e.nextElement();", "filename": "geronimo-activation_1.1_spec/src/main/java/javax/activation/MimetypesFileTypeMap.java"}], "repo": "geronimo-specs"}, {"commit": "https://github.com/apache/geronimo-specs/commit/6ba231c3de16f0d1ff462df5b366b33e10c8946e", "parent": "https://github.com/apache/geronimo-specs/commit/b3214d4c0a839eaf92d8a9842995a0e6459b7284", "message": "GERONIMO-6330: NPE in CompositeELResolver (and fix formatting a bit)\n\ngit-svn-id: https://svn.apache.org/repos/asf/geronimo/specs/trunk@1327712 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "geronimo-specs_3", "file": [{"additions": 38, "raw_url": "https://github.com/apache/geronimo-specs/raw/6ba231c3de16f0d1ff462df5b366b33e10c8946e/geronimo-el_2.2_spec/src/main/java/javax/el/CompositeELResolver.java", "blob_url": "https://github.com/apache/geronimo-specs/blob/6ba231c3de16f0d1ff462df5b366b33e10c8946e/geronimo-el_2.2_spec/src/main/java/javax/el/CompositeELResolver.java", "sha": "89e7cad17a4f022ca6b2907f85bb5ae2f4cce568", "changes": 70, "status": "modified", "deletions": 32, "contents_url": "https://api.github.com/repos/apache/geronimo-specs/contents/geronimo-el_2.2_spec/src/main/java/javax/el/CompositeELResolver.java?ref=6ba231c3de16f0d1ff462df5b366b33e10c8946e", "patch": "@@ -47,12 +47,12 @@ synchronized public void add(ELResolver elResolver) {\n     public Object getValue(ELContext context, Object base, Object property)\n             throws NullPointerException, PropertyNotFoundException, ELException {\n         context.setPropertyResolved(false);\n-                int sz;\n-                ELResolver[] rslvrs;\n-                synchronized (this) {\n-                    sz = this.size;\n-                    rslvrs = this.resolvers;\n-                }\n+        int sz;\n+        ELResolver[] rslvrs;\n+        synchronized (this) {\n+            sz = this.size;\n+            rslvrs = this.resolvers;\n+        }\n         Object result = null;\n         for (int i = 0; i < sz; i++) {\n             result = rslvrs[i].getValue(context, base, property);\n@@ -68,12 +68,12 @@ public void setValue(ELContext context, Object base, Object property,\n             PropertyNotFoundException, PropertyNotWritableException,\n             ELException {\n         context.setPropertyResolved(false);\n-                int sz;\n-                ELResolver[] rslvrs;\n-                synchronized (this) {\n-                    sz = this.size;\n-                    rslvrs = this.resolvers;\n-                }\n+        int sz;\n+        ELResolver[] rslvrs;\n+        synchronized (this) {\n+            sz = this.size;\n+            rslvrs = this.resolvers;\n+        }\n         for (int i = 0; i < sz; i++) {\n             rslvrs[i].setValue(context, base, property, value);\n             if (context.isPropertyResolved()) {\n@@ -85,12 +85,12 @@ public void setValue(ELContext context, Object base, Object property,\n     public boolean isReadOnly(ELContext context, Object base, Object property)\n             throws NullPointerException, PropertyNotFoundException, ELException {\n         context.setPropertyResolved(false);\n-                int sz;\n-                ELResolver[] rslvrs;\n-                synchronized (this) {\n-                    sz = this.size;\n-                    rslvrs = this.resolvers;\n-                }\n+        int sz;\n+        ELResolver[] rslvrs;\n+        synchronized (this) {\n+            sz = this.size;\n+            rslvrs = this.resolvers;\n+        }\n         boolean readOnly = false;\n         for (int i = 0; i < sz; i++) {\n             readOnly = rslvrs[i].isReadOnly(context, base, property);\n@@ -106,12 +106,12 @@ public boolean isReadOnly(ELContext context, Object base, Object property)\n     }\n \n     public Class<?> getCommonPropertyType(ELContext context, Object base) {\n-                int sz;\n-                ELResolver[] rslvrs;\n-                synchronized (this) {\n-                    sz = this.size;\n-                    rslvrs = this.resolvers;\n-                }\n+        int sz;\n+        ELResolver[] rslvrs;\n+        synchronized (this) {\n+            sz = this.size;\n+            rslvrs = this.resolvers;\n+        }\n         Class<?> commonType = null, type = null;\n         for (int i = 0; i < sz; i++) {\n             type = rslvrs[i].getCommonPropertyType(context, base);\n@@ -126,12 +126,12 @@ public boolean isReadOnly(ELContext context, Object base, Object property)\n     public Class<?> getType(ELContext context, Object base, Object property)\n             throws NullPointerException, PropertyNotFoundException, ELException {\n         context.setPropertyResolved(false);\n-                int sz;\n-                ELResolver[] rslvrs;\n-                synchronized (this) {\n-                    sz = this.size;\n-                    rslvrs = this.resolvers;\n-                }\n+        int sz;\n+        ELResolver[] rslvrs;\n+        synchronized (this) {\n+            sz = this.size;\n+            rslvrs = this.resolvers;\n+        }\n         Class<?> type;\n         for (int i = 0; i < sz; i++) {\n             type = rslvrs[i].getType(context, base, property);\n@@ -220,9 +220,15 @@ public Object invoke(ELContext context, Object base, Object method, Class<?>[] p\n         if (context.getContext(ExpressionFactory.class) == null) {\n             context.putContext(ExpressionFactory.class, expressionFactory);\n         }\n+        int sz;\n+        ELResolver[] rslvrs;\n+        synchronized (this) {\n+            sz = this.size;\n+            rslvrs = this.resolvers;\n+        }\n         Object retValue = null;\n-        for (ELResolver resolver : resolvers) {\n-            retValue = resolver.invoke(context, base, targetMethod, paramTypes, params);\n+        for (int i = 0; i < sz; i++) {\n+            retValue = rslvrs[i].invoke(context, base, targetMethod, paramTypes, params);\n             if (context.isPropertyResolved()) {\n                 return retValue;\n             }", "filename": "geronimo-el_2.2_spec/src/main/java/javax/el/CompositeELResolver.java"}], "repo": "geronimo-specs"}, {"commit": "https://github.com/apache/geronimo-specs/commit/f19b083e7a0d1a43daf494d609b7ff63246d0886", "parent": "https://github.com/apache/geronimo-specs/commit/d0ab9ec83a7b5d7156a5ef0136c28d2ff130f510", "message": "GERONIMO-4126 NPE if null argument specified for InternetHeaders.getMatchingHeaders()\n\nProblem uncovered by running with James test cases. \n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/geronimo/specs/trunk@669143 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "geronimo-specs_4", "file": [{"additions": 6, "raw_url": "https://github.com/apache/geronimo-specs/raw/f19b083e7a0d1a43daf494d609b7ff63246d0886/geronimo-javamail_1.4_spec/src/main/java/javax/mail/internet/InternetHeaders.java", "blob_url": "https://github.com/apache/geronimo-specs/blob/f19b083e7a0d1a43daf494d609b7ff63246d0886/geronimo-javamail_1.4_spec/src/main/java/javax/mail/internet/InternetHeaders.java", "sha": "1b92692e1c93f8712f44df38f2f860c157fdc0fd", "changes": 6, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/geronimo-specs/contents/geronimo-javamail_1.4_spec/src/main/java/javax/mail/internet/InternetHeaders.java?ref=f19b083e7a0d1a43daf494d609b7ff63246d0886", "patch": "@@ -469,6 +469,12 @@ public Enumeration getAllHeaders() {\n      *         for a complete mismatch.\n      */\n     private boolean matchHeader(String name, String[] names) {\n+        // the list of names is not required, so treat this as if it \n+        // was an empty list and we didn't get a match. \n+        if (names == null) {\n+            return false; \n+        }\n+        \n         for (int i = 0; i < names.length; i++) {\n             if (name.equalsIgnoreCase(names[i])) {\n                 return true;", "filename": "geronimo-javamail_1.4_spec/src/main/java/javax/mail/internet/InternetHeaders.java"}], "repo": "geronimo-specs"}]
