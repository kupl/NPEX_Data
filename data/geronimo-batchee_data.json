[
    {
        "repo": "geronimo-batchee",
        "message": "BATCHEE-127 fixed NPE if context not active",
        "commit": "https://github.com/apache/geronimo-batchee/commit/92ca9f78a0b42ee347a3448395ffe42d2e3c9b42",
        "parent": "https://github.com/apache/geronimo-batchee/commit/38f3e9842f6a58f00c307547bea17117c897595f",
        "bug_id": "geronimo-batchee_1",
        "file": [
            {
                "sha": "5680dd3a4ce66a1b4fb21dd9bbce1d658b01f99b",
                "filename": "extensions/cdi/src/main/java/org/apache/batchee/cdi/impl/JobContextImpl.java",
                "blob_url": "https://github.com/apache/geronimo-batchee/blob/92ca9f78a0b42ee347a3448395ffe42d2e3c9b42/extensions/cdi/src/main/java/org/apache/batchee/cdi/impl/JobContextImpl.java",
                "raw_url": "https://github.com/apache/geronimo-batchee/raw/92ca9f78a0b42ee347a3448395ffe42d2e3c9b42/extensions/cdi/src/main/java/org/apache/batchee/cdi/impl/JobContextImpl.java",
                "status": "modified",
                "changes": 8,
                "additions": 7,
                "contents_url": "https://api.github.com/repos/apache/geronimo-batchee/contents/extensions/cdi/src/main/java/org/apache/batchee/cdi/impl/JobContextImpl.java?ref=92ca9f78a0b42ee347a3448395ffe42d2e3c9b42",
                "patch": "@@ -23,6 +23,7 @@\n import java.util.concurrent.ConcurrentMap;\n import java.util.concurrent.atomic.AtomicInteger;\n \n+import javax.batch.runtime.context.JobContext;\n import javax.enterprise.inject.Typed;\n import javax.enterprise.inject.spi.BeanManager;\n \n@@ -44,7 +45,12 @@\n \n     @Override\n     protected Long currentKey() {\n-        return getContextResolver().getJobContext().getExecutionId();\n+        JobContext jobContext = getContextResolver().getJobContext();\n+        if (jobContext == null) {\n+            return null;\n+        }\n+\n+        return jobContext.getExecutionId();\n     }\n \n ",
                "deletions": 1
            },
            {
                "sha": "8c530bbb90d7164f864b29f4ee99668f9cba4cb7",
                "filename": "extensions/cdi/src/main/java/org/apache/batchee/cdi/impl/StepContextImpl.java",
                "blob_url": "https://github.com/apache/geronimo-batchee/blob/92ca9f78a0b42ee347a3448395ffe42d2e3c9b42/extensions/cdi/src/main/java/org/apache/batchee/cdi/impl/StepContextImpl.java",
                "raw_url": "https://github.com/apache/geronimo-batchee/raw/92ca9f78a0b42ee347a3448395ffe42d2e3c9b42/extensions/cdi/src/main/java/org/apache/batchee/cdi/impl/StepContextImpl.java",
                "status": "modified",
                "changes": 8,
                "additions": 7,
                "contents_url": "https://api.github.com/repos/apache/geronimo-batchee/contents/extensions/cdi/src/main/java/org/apache/batchee/cdi/impl/StepContextImpl.java?ref=92ca9f78a0b42ee347a3448395ffe42d2e3c9b42",
                "patch": "@@ -20,6 +20,7 @@\n \n import java.lang.annotation.Annotation;\n \n+import javax.batch.runtime.context.StepContext;\n import javax.enterprise.inject.Typed;\n import javax.enterprise.inject.spi.BeanManager;\n \n@@ -39,7 +40,12 @@\n \n     @Override\n     protected Long currentKey() {\n-        return getContextResolver().getStepContext().getStepExecutionId();\n+        StepContext stepContext = getContextResolver().getStepContext();\n+        if (stepContext == null) {\n+            return null;\n+        }\n+\n+        return stepContext.getStepExecutionId();\n     }\n \n     public void exitStep() {",
                "deletions": 1
            }
        ]
    },
    {
        "repo": "geronimo-batchee",
        "message": "fix possible NPE",
        "commit": "https://github.com/apache/geronimo-batchee/commit/37efd249a5f01428ebfbd21d9ae4bf8573c1c3fa",
        "parent": "https://github.com/apache/geronimo-batchee/commit/f4e69ab6ea84621b63cc83b339a2c3cabeae1ebc",
        "bug_id": "geronimo-batchee_2",
        "file": [
            {
                "sha": "87cf32b3647a100328896e55bf301940e4caa805",
                "filename": "gui/servlet/src/main/java/org/apache/batchee/servlet/JBatchController.java",
                "blob_url": "https://github.com/apache/geronimo-batchee/blob/37efd249a5f01428ebfbd21d9ae4bf8573c1c3fa/gui/servlet/src/main/java/org/apache/batchee/servlet/JBatchController.java",
                "raw_url": "https://github.com/apache/geronimo-batchee/raw/37efd249a5f01428ebfbd21d9ae4bf8573c1c3fa/gui/servlet/src/main/java/org/apache/batchee/servlet/JBatchController.java",
                "status": "modified",
                "changes": 10,
                "additions": 5,
                "contents_url": "https://api.github.com/repos/apache/geronimo-batchee/contents/gui/servlet/src/main/java/org/apache/batchee/servlet/JBatchController.java?ref=37efd249a5f01428ebfbd21d9ae4bf8573c1c3fa",
                "patch": "@@ -92,20 +92,20 @@ protected void service(final HttpServletRequest req, final HttpServletResponse r\n         req.setAttribute(\"mapping\", mapping);\n \n         final String path = req.getPathInfo();\n-        if (path.startsWith(EXECUTIONS_MAPPING)) {\n+        if (path != null && path.startsWith(EXECUTIONS_MAPPING)) {\n             final String name = URLDecoder.decode(path.substring(EXECUTIONS_MAPPING.length()), \"UTF-8\");\n             final int start = extractInt(req, \"start\", -1);\n             listExecutions(req, name, executionByPage, start);\n-        } else if (path.startsWith(STEP_EXECUTIONS_MAPPING)) {\n+        } else if (path != null && path.startsWith(STEP_EXECUTIONS_MAPPING)) {\n             final int executionId = Integer.parseInt(path.substring(STEP_EXECUTIONS_MAPPING.length()));\n             listStepExecutions(req, executionId);\n-        } else if (path.startsWith(VIEW_MAPPING)) {\n+        } else if (path != null && path.startsWith(VIEW_MAPPING)) {\n             final String name = URLDecoder.decode(path.substring(VIEW_MAPPING.length()), \"UTF-8\");\n             view(req, name);\n-        } else if (path.startsWith(START_MAPPING)) {\n+        } else if (path != null && path.startsWith(START_MAPPING)) {\n             final String name = URLDecoder.decode(path.substring(START_MAPPING.length()), \"UTF-8\");\n             start(req, name);\n-        } else if (path.startsWith(DO_START_MAPPING)) {\n+        } else if (path != null && path.startsWith(DO_START_MAPPING)) {\n             String name = URLDecoder.decode(path.substring(DO_START_MAPPING.length()), \"UTF-8\");\n             if (name.isEmpty()) {\n                 name = req.getParameter(FORM_JOB_NAME);",
                "deletions": 5
            }
        ]
    }
]