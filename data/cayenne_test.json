{
    "cayenne_04a5284": {
        "bug_id": "cayenne_04a5284",
        "commit": "https://github.com/apache/cayenne/commit/04a528440a90fd9846f9e1bb3c679e59c30f4ff8",
        "file": [
            {
                "additions": 3,
                "blob_url": "https://github.com/apache/cayenne/blob/04a528440a90fd9846f9e1bb3c679e59c30f4ff8/framework/cayenne-jdk1.5-unpublished/src/main/java/org/apache/cayenne/merge/AbstractToModelToken.java",
                "changes": 3,
                "contents_url": "https://api.github.com/repos/apache/cayenne/contents/framework/cayenne-jdk1.5-unpublished/src/main/java/org/apache/cayenne/merge/AbstractToModelToken.java?ref=04a528440a90fd9846f9e1bb3c679e59c30f4ff8",
                "deletions": 0,
                "filename": "framework/cayenne-jdk1.5-unpublished/src/main/java/org/apache/cayenne/merge/AbstractToModelToken.java",
                "patch": "@@ -53,6 +53,9 @@ protected void synchronizeWithObjEntity(DbEntity entity) {\n         Set<ObjEntity> objEntities = new HashSet<ObjEntity>();\n         MappingNamespace mns = entity.getDataMap().getNamespace();\n         for (ObjEntity objEntity : mns.getObjEntities()) {\n+            if (objEntity.getDbEntity() == null) {\n+                continue;\n+            }\n             if (objEntity.getDbEntity().equals(entity)) {\n                 objEntities.add(objEntity);\n             }",
                "raw_url": "https://github.com/apache/cayenne/raw/04a528440a90fd9846f9e1bb3c679e59c30f4ff8/framework/cayenne-jdk1.5-unpublished/src/main/java/org/apache/cayenne/merge/AbstractToModelToken.java",
                "sha": "b2d826635cb6e6296523a25bdca83bcb4ce86045",
                "status": "modified"
            },
            {
                "additions": 3,
                "blob_url": "https://github.com/apache/cayenne/blob/04a528440a90fd9846f9e1bb3c679e59c30f4ff8/framework/cayenne-jdk1.5-unpublished/src/test/java/org/apache/cayenne/merge/CreateTableToModelTest.java",
                "changes": 3,
                "contents_url": "https://api.github.com/repos/apache/cayenne/contents/framework/cayenne-jdk1.5-unpublished/src/test/java/org/apache/cayenne/merge/CreateTableToModelTest.java?ref=04a528440a90fd9846f9e1bb3c679e59c30f4ff8",
                "deletions": 0,
                "filename": "framework/cayenne-jdk1.5-unpublished/src/test/java/org/apache/cayenne/merge/CreateTableToModelTest.java",
                "patch": "@@ -60,6 +60,9 @@ public void testAddTable() throws Exception {\n \n         ObjEntity objEntity = null;\n         for (ObjEntity candiate : map.getObjEntities()) {\n+            if (candiate.getDbEntity() == null) {\n+                continue;\n+            }\n             if (candiate.getDbEntity().getName().equalsIgnoreCase(dbEntity.getName())) {\n                 objEntity = candiate;\n                 break;",
                "raw_url": "https://github.com/apache/cayenne/raw/04a528440a90fd9846f9e1bb3c679e59c30f4ff8/framework/cayenne-jdk1.5-unpublished/src/test/java/org/apache/cayenne/merge/CreateTableToModelTest.java",
                "sha": "547fc40f8da390dfd36e9c69a946aa81861a0dae",
                "status": "modified"
            }
        ],
        "message": "merge: fix NPE in objEntity.getDbEntity()\n\ngit-svn-id: https://svn.apache.org/repos/asf/cayenne/main/trunk@615405 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/cayenne/commit/22f361488fdb23e9072fecf7d72a16d7146122fa",
        "patched_files": [
            "AbstractToModelToken.java",
            "CreateTableToModel.java"
        ],
        "repo": "cayenne",
        "unit_tests": [
            "CreateTableToModelTest.java"
        ]
    },
    "cayenne_04d67fd": {
        "bug_id": "cayenne_04d67fd",
        "commit": "https://github.com/apache/cayenne/commit/04d67fdc9645ff22c0c306b1bbfe49e4b6ebbfec",
        "file": [
            {
                "additions": 73,
                "blob_url": "https://github.com/apache/cayenne/blob/04d67fdc9645ff22c0c306b1bbfe49e4b6ebbfec/framework/cayenne-jdk1.5-unpublished/src/main/java/org/apache/cayenne/access/FlattenedArcKey.java",
                "changes": 85,
                "contents_url": "https://api.github.com/repos/apache/cayenne/contents/framework/cayenne-jdk1.5-unpublished/src/main/java/org/apache/cayenne/access/FlattenedArcKey.java?ref=04d67fdc9645ff22c0c306b1bbfe49e4b6ebbfec",
                "deletions": 12,
                "filename": "framework/cayenne-jdk1.5-unpublished/src/main/java/org/apache/cayenne/access/FlattenedArcKey.java",
                "patch": "@@ -19,17 +19,21 @@\n \n package org.apache.cayenne.access;\n \n+import java.util.ArrayList;\n import java.util.Collection;\n import java.util.Collections;\n import java.util.HashMap;\n import java.util.List;\n import java.util.Map;\n \n import org.apache.cayenne.CayenneRuntimeException;\n+import org.apache.cayenne.DataRow;\n import org.apache.cayenne.ObjectId;\n import org.apache.cayenne.access.DataDomainSyncBucket.PropagatedValueFactory;\n import org.apache.cayenne.access.util.DefaultOperationObserver;\n import org.apache.cayenne.dba.DbAdapter;\n+import org.apache.cayenne.dba.QuotingStrategy;\n+import org.apache.cayenne.dba.TypesMapping;\n import org.apache.cayenne.map.DbAttribute;\n import org.apache.cayenne.map.DbEntity;\n import org.apache.cayenne.map.DbJoin;\n@@ -168,23 +172,57 @@ List buildJoinSnapshotsForDelete(DataNode node) {\n         // TODO: this should be optimized in the future, but now DeleteBatchQuery\n         // expects a PK snapshot, so we must provide it.\n \n+        final boolean quotesNeeded;\n+        if (joinEntity.getDataMap() != null\n+                && joinEntity.getDataMap().isQuotingSQLIdentifiers()) {\n+            quotesNeeded = true;\n+        }\n+        else {\n+            quotesNeeded = false;\n+        }\n+\n+        QuotingStrategy quoter = node.getAdapter().getQuotingStrategy(quotesNeeded);\n+\n         StringBuilder sql = new StringBuilder(\"SELECT \");\n         Collection<DbAttribute> pk = joinEntity.getPrimaryKeys();\n+        final List<DbAttribute> pkList = pk instanceof List\n+                ? (List<DbAttribute>) pk\n+                : new ArrayList<DbAttribute>(pk);\n \n-        int i = pk.size();\n-        for (DbAttribute attribute : joinEntity.getPrimaryKeys()) {\n-            sql.append(\"#result('\");\n-            sql.append(attribute.getName());\n-            sql.append(\"')\");\n-            if (--i > 0) {\n+        for (int i = 0; i < pkList.size(); i++) {\n+\n+            if (i > 0) {\n                 sql.append(\", \");\n             }\n+\n+            DbAttribute attribute = pkList.get(i);\n+\n+            sql.append(\"#result('\");\n+            sql.append(quoter.quoteString(attribute.getName()));\n+\n+            if (quotesNeeded) {\n+                // since the name of the column can potentially be quoted and use reserved\n+                // keywords as name, let's specify\n+                // generated column name parameters to ensure the query doesn't explode\n+                sql.append(\"' '\").append(\n+                        TypesMapping.getJavaBySqlType(attribute.getType()));\n+                sql.append(\"' '\").append(\"pk\").append(i);\n+            }\n+\n+            sql.append(\"')\");\n         }\n \n-        sql.append(\" FROM \").append(joinEntity.getFullyQualifiedName()).append(\" WHERE \");\n-        i = snapshot.size();\n+        sql\n+                .append(\" FROM \")\n+                .append(quoter.quoteFullyQualifiedName(joinEntity))\n+                .append(\" WHERE \");\n+        int i = snapshot.size();\n         for (Object key : snapshot.keySet()) {\n-            sql.append(key).append(\" #bindEqual($\").append(key).append(\")\");\n+            sql\n+                    .append(quoter.quoteString(String.valueOf(key)))\n+                    .append(\" #bindEqual($\")\n+                    .append(key)\n+                    .append(\")\");\n \n             if (--i > 0) {\n                 sql.append(\" AND \");\n@@ -202,13 +240,36 @@ List buildJoinSnapshotsForDelete(DataNode node) {\n \n                     @Override\n                     public void nextRows(Query query, List dataRows) {\n+\n+                        if (quotesNeeded && !dataRows.isEmpty()) {\n+                            // decode results...\n+\n+                            List<DataRow> fixedRows = new ArrayList<DataRow>(dataRows\n+                                    .size());\n+                            for(Object o : dataRows) {\n+                                DataRow row = (DataRow) o;\n+                                \n+                                DataRow fixedRow = new DataRow(2);\n+                                \n+                                for (int i = 0; i < pkList.size(); i++) {\n+                                    DbAttribute attribute = pkList.get(i);\n+                                    fixedRow.put(attribute.getName(), row.get(\"pk\" + i));\n+                                }\n+                                \n+                                fixedRows.add(fixedRow);\n+                            }\n+                            \n+                            dataRows = fixedRows;\n+                        }\n+\n                         result[0] = dataRows;\n                     }\n-                    \n+\n                     @Override\n                     public void nextQueryException(Query query, Exception ex) {\n-                        throw new CayenneRuntimeException(\"Raising from query exception.\", Util\n-                                .unwindException(ex));\n+                        throw new CayenneRuntimeException(\n+                                \"Raising from query exception.\",\n+                                Util.unwindException(ex));\n                     }\n \n                     @Override",
                "raw_url": "https://github.com/apache/cayenne/raw/04d67fdc9645ff22c0c306b1bbfe49e4b6ebbfec/framework/cayenne-jdk1.5-unpublished/src/main/java/org/apache/cayenne/access/FlattenedArcKey.java",
                "sha": "3c38d2e180d2f6501f3776a89cc7310376a03566",
                "status": "modified"
            }
        ],
        "message": "CAY-1725 NullPointerException from call to removeToManyTarget\n\nproper quoting of the query\n\ngit-svn-id: https://svn.apache.org/repos/asf/cayenne/main/trunk@1361358 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/cayenne/commit/382feb7699136b85fa35463ade6242e70bedd278",
        "patched_files": [
            "FlattenedArcKey.java"
        ],
        "repo": "cayenne",
        "unit_tests": [
            "FlattenedArcKeyTest.java"
        ]
    },
    "cayenne_11dc22c": {
        "bug_id": "cayenne_11dc22c",
        "commit": "https://github.com/apache/cayenne/commit/11dc22c3a3f80524e24ef22976b1a9010bfc7dc6",
        "file": [
            {
                "additions": 3,
                "blob_url": "https://github.com/apache/cayenne/blob/11dc22c3a3f80524e24ef22976b1a9010bfc7dc6/framework/cayenne-tools/src/main/java/org/apache/cayenne/tools/dbimport/DbImportAction.java",
                "changes": 8,
                "contents_url": "https://api.github.com/repos/apache/cayenne/contents/framework/cayenne-tools/src/main/java/org/apache/cayenne/tools/dbimport/DbImportAction.java?ref=11dc22c3a3f80524e24ef22976b1a9010bfc7dc6",
                "deletions": 5,
                "filename": "framework/cayenne-tools/src/main/java/org/apache/cayenne/tools/dbimport/DbImportAction.java",
                "patch": "@@ -201,15 +201,13 @@ DataMap createDataMap(DbImportParameters parameters) throws IOException {\n                 dataMap.clearResultSets();\n             }\n         } else {\n-\n-            // the name and URL are important for the save to work\n             String dataMapName = name.substring(0, name.length() - DATA_MAP_LOCATION_SUFFIX.length());\n-            URL dataMapUrl = dataMapFile.toURI().toURL();\n-\n             dataMap = new DataMap(dataMapName);\n-            dataMap.setConfigurationSource(new URLResource(dataMapUrl));\n         }\n \n+        URL dataMapUrl = dataMapFile.toURI().toURL();\n+        dataMap.setConfigurationSource(new URLResource(dataMapUrl));\n+\n         // update map defaults\n \n         // do not override default package of existing DataMap unless it is",
                "raw_url": "https://github.com/apache/cayenne/raw/11dc22c3a3f80524e24ef22976b1a9010bfc7dc6/framework/cayenne-tools/src/main/java/org/apache/cayenne/tools/dbimport/DbImportAction.java",
                "sha": "3591d2e2e3293b2e9ae335b55dd2a7a352a96cfe",
                "status": "modified"
            },
            {
                "additions": 41,
                "blob_url": "https://github.com/apache/cayenne/blob/11dc22c3a3f80524e24ef22976b1a9010bfc7dc6/framework/cayenne-tools/src/test/java/org/apache/cayenne/tools/dbimport/DbImportActionTest.java",
                "changes": 46,
                "contents_url": "https://api.github.com/repos/apache/cayenne/contents/framework/cayenne-tools/src/test/java/org/apache/cayenne/tools/dbimport/DbImportActionTest.java?ref=11dc22c3a3f80524e24ef22976b1a9010bfc7dc6",
                "deletions": 5,
                "filename": "framework/cayenne-tools/src/test/java/org/apache/cayenne/tools/dbimport/DbImportActionTest.java",
                "patch": "@@ -21,6 +21,8 @@\n import static org.mockito.Mockito.mock;\n \n import java.io.File;\n+import java.io.PrintWriter;\n+import java.net.MalformedURLException;\n import java.net.URL;\n import java.sql.Connection;\n \n@@ -32,9 +34,11 @@\n import org.apache.cayenne.di.DIBootstrap;\n import org.apache.cayenne.di.Injector;\n import org.apache.cayenne.map.DataMap;\n+import org.apache.cayenne.map.DbEntity;\n import org.apache.cayenne.resource.URLResource;\n import org.apache.cayenne.tools.configuration.ToolsModule;\n import org.apache.cayenne.util.Util;\n+import org.apache.cayenne.util.XMLEncoder;\n import org.apache.commons.logging.Log;\n \n public class DbImportActionTest extends TestCase {\n@@ -113,16 +117,13 @@ public void testSaveLoaded() throws Exception {\n         assertTrue(\"Has no project version saved\", contents.contains(\"project-version=\\\"\"));\n     }\n \n-    public void testCreateDataMap() throws Exception {\n+    public void testCreateDataMap_New() throws Exception {\n         Log log = mock(Log.class);\n         Injector i = DIBootstrap.createInjector(new ToolsModule(log), new DbImportModule());\n \n         DbImportAction action = i.getInstance(DbImportAction.class);\n \n-        String packagePath = getClass().getPackage().getName().replace('.', '/');\n-        URL packageUrl = getClass().getClassLoader().getResource(packagePath);\n-        assertNotNull(packageUrl);\n-        URL outUrl = new URL(packageUrl, \"dbimport/testCreateDataMap1.map.xml\");\n+        URL outUrl = dataMapUrl(\"testCreateDataMap1.map.xml\");\n \n         File out = new File(outUrl.toURI());\n         out.delete();\n@@ -134,4 +135,39 @@ public void testCreateDataMap() throws Exception {\n         assertEquals(\"testCreateDataMap1\", dataMap.getName());\n         assertEquals(outUrl, dataMap.getConfigurationSource().getURL());\n     }\n+\n+    public void testCreateDataMap_Existing() throws Exception {\n+\n+        URL outUrl = dataMapUrl(\"testCreateDataMap2.map.xml\");\n+\n+        File out = new File(outUrl.toURI());\n+        out.delete();\n+        assertFalse(out.isFile());\n+\n+        DataMap tempMap = new DataMap();\n+        tempMap.addDbEntity(new DbEntity(\"X\"));\n+        \n+        PrintWriter writer = new PrintWriter(out);\n+        tempMap.encodeAsXML(new XMLEncoder(writer));\n+        writer.close();\n+        assertTrue(out.isFile());\n+        \n+        Log log = mock(Log.class);\n+        Injector i = DIBootstrap.createInjector(new ToolsModule(log), new DbImportModule());\n+\n+        DbImportAction action = i.getInstance(DbImportAction.class);\n+\n+        DbImportParameters parameters = new DbImportParameters();\n+        parameters.setDataMapFile(out);\n+        DataMap dataMap = action.createDataMap(parameters);\n+        assertEquals(\"testCreateDataMap2\", dataMap.getName());\n+        assertEquals(outUrl, dataMap.getConfigurationSource().getURL());\n+    }\n+\n+    private URL dataMapUrl(String name) throws MalformedURLException {\n+        String packagePath = getClass().getPackage().getName().replace('.', '/');\n+        URL packageUrl = getClass().getClassLoader().getResource(packagePath);\n+        assertNotNull(packageUrl);\n+        return new URL(packageUrl, \"dbimport/\" + name);\n+    }\n }",
                "raw_url": "https://github.com/apache/cayenne/raw/11dc22c3a3f80524e24ef22976b1a9010bfc7dc6/framework/cayenne-tools/src/test/java/org/apache/cayenne/tools/dbimport/DbImportActionTest.java",
                "sha": "8da7af646d4cd2ffade454d49e17149006232664",
                "status": "modified"
            }
        ],
        "message": "CAY-1758 cdbimport improvements\n\nfixing NPE on save of the existing datamap\n\ngit-svn-id: https://svn.apache.org/repos/asf/cayenne/main/trunk@1407929 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/cayenne/commit/73a225f4ab69767851aa041042130e41d6588a25",
        "patched_files": [
            "DbImportAction.java"
        ],
        "repo": "cayenne",
        "unit_tests": [
            "DbImportActionTest.java"
        ]
    },
    "cayenne_2029433": {
        "bug_id": "cayenne_2029433",
        "commit": "https://github.com/apache/cayenne/commit/2029433135d8539e0d57f31530f5498042955049",
        "file": [
            {
                "additions": 5,
                "blob_url": "https://github.com/apache/cayenne/blob/2029433135d8539e0d57f31530f5498042955049/framework/cayenne-jdk1.5-unpublished/src/main/java/org/apache/cayenne/exp/parser/SimpleNode.java",
                "changes": 6,
                "contents_url": "https://api.github.com/repos/apache/cayenne/contents/framework/cayenne-jdk1.5-unpublished/src/main/java/org/apache/cayenne/exp/parser/SimpleNode.java?ref=2029433135d8539e0d57f31530f5498042955049",
                "deletions": 1,
                "filename": "framework/cayenne-jdk1.5-unpublished/src/main/java/org/apache/cayenne/exp/parser/SimpleNode.java",
                "patch": "@@ -280,7 +280,11 @@ public final int jjtGetNumChildren() {\n     protected void connectChildren() {\n         if (children != null) {\n             for (int i = 0; i < children.length; i++) {\n-                children[i].jjtSetParent(this);\n+                // although nulls are expected to be wrapped in scalar, still doing a\n+                // check here to make it more robust\n+                if (children[i] != null) {\n+                    children[i].jjtSetParent(this);\n+                }\n             }\n         }\n     }",
                "raw_url": "https://github.com/apache/cayenne/raw/2029433135d8539e0d57f31530f5498042955049/framework/cayenne-jdk1.5-unpublished/src/main/java/org/apache/cayenne/exp/parser/SimpleNode.java",
                "sha": "148d838f482ed4e9677a7645ee46257f1c9f4e79",
                "status": "modified"
            },
            {
                "additions": 12,
                "blob_url": "https://github.com/apache/cayenne/blob/2029433135d8539e0d57f31530f5498042955049/framework/cayenne-jdk1.5-unpublished/src/test/java/org/apache/cayenne/exp/ExpressionFactoryTest.java",
                "changes": 14,
                "contents_url": "https://api.github.com/repos/apache/cayenne/contents/framework/cayenne-jdk1.5-unpublished/src/test/java/org/apache/cayenne/exp/ExpressionFactoryTest.java?ref=2029433135d8539e0d57f31530f5498042955049",
                "deletions": 2,
                "filename": "framework/cayenne-jdk1.5-unpublished/src/test/java/org/apache/cayenne/exp/ExpressionFactoryTest.java",
                "patch": "@@ -151,15 +151,15 @@ public void testInExp1() throws Exception {\n     }\n \n     public void testInExp2() throws Exception {\n-        List v = new ArrayList();\n+        List<Object> v = new ArrayList<Object>();\n         v.add(\"a\");\n         v.add(\"b\");\n         Expression exp = ExpressionFactory.inExp(\"abc\", v);\n         assertEquals(Expression.IN, exp.getType());\n     }\n \n     public void testInExp3() throws Exception {\n-        List v = new ArrayList();\n+        List<Object> v = new ArrayList<Object>();\n         Expression exp = ExpressionFactory.inExp(\"abc\", v);\n         assertEquals(Expression.FALSE, exp.getType());\n     }\n@@ -205,4 +205,14 @@ public void testNotLikeIgnoreCaseExp() throws Exception {\n         Expression exp = ExpressionFactory.notLikeIgnoreCaseExp(\"abc\", v);\n         assertEquals(Expression.NOT_LIKE_IGNORE_CASE, exp.getType());\n     }\n+    \n+    // testing CAY-941 bug\n+    public void testLikeExpNull() throws Exception {\n+        Expression exp = ExpressionFactory.likeExp(\"abc\", null);\n+        assertEquals(Expression.LIKE, exp.getType());\n+\n+        Expression path = (Expression) exp.getOperand(0);\n+        assertEquals(Expression.OBJ_PATH, path.getType());\n+        assertNull(exp.getOperand(1));\n+    }\n }",
                "raw_url": "https://github.com/apache/cayenne/raw/2029433135d8539e0d57f31530f5498042955049/framework/cayenne-jdk1.5-unpublished/src/test/java/org/apache/cayenne/exp/ExpressionFactoryTest.java",
                "sha": "d22503540620736ba6f35dcb0a7afc9a20f362d8",
                "status": "modified"
            }
        ],
        "message": "CAY-941 NPE in SimpleNode.connectChildren()\n(while 3.0 is not affected, I still added a unit test and a null check for extra robustness)\n\ngit-svn-id: https://svn.apache.org/repos/asf/cayenne/main/trunk@604601 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/cayenne/commit/deddd919fd46af896e90af32c044e03631be6af5",
        "patched_files": [
            "SimpleNode.java",
            "ExpressionFactory.java"
        ],
        "repo": "cayenne",
        "unit_tests": [
            "ExpressionFactoryTest.java"
        ]
    },
    "cayenne_2a41d5d": {
        "bug_id": "cayenne_2a41d5d",
        "commit": "https://github.com/apache/cayenne/commit/2a41d5d9ddaefe99983625c438dd9624b5d3687e",
        "file": [
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/cayenne/blob/2a41d5d9ddaefe99983625c438dd9624b5d3687e/framework/cayenne-jdk1.4-unpublished/src/main/java/org/apache/cayenne/access/DataDomain.java",
                "changes": 1,
                "contents_url": "https://api.github.com/repos/apache/cayenne/contents/framework/cayenne-jdk1.4-unpublished/src/main/java/org/apache/cayenne/access/DataDomain.java?ref=2a41d5d9ddaefe99983625c438dd9624b5d3687e",
                "deletions": 0,
                "filename": "framework/cayenne-jdk1.4-unpublished/src/main/java/org/apache/cayenne/access/DataDomain.java",
                "patch": "@@ -252,6 +252,7 @@ public void initWithProperties(Map properties) {\n         }\n \n         if (queryCacheFactory != null\n+                && dataContextFactory != null\n                 && !Util.isEmptyString(dataContextFactory.toString())) {\n             queryCacheFactory = (QueryCacheFactory) createInstance(queryCacheFactory\n                     .toString(), QueryCacheFactory.class);",
                "raw_url": "https://github.com/apache/cayenne/raw/2a41d5d9ddaefe99983625c438dd9624b5d3687e/framework/cayenne-jdk1.4-unpublished/src/main/java/org/apache/cayenne/access/DataDomain.java",
                "sha": "0e3806b0f7b04c24b68083a4710c0a4c7689d8f4",
                "status": "modified"
            },
            {
                "additions": 6,
                "blob_url": "https://github.com/apache/cayenne/blob/2a41d5d9ddaefe99983625c438dd9624b5d3687e/framework/cayenne-jdk1.4-unpublished/src/main/java/org/apache/cayenne/conf/DriverDataSourceFactory.java",
                "changes": 8,
                "contents_url": "https://api.github.com/repos/apache/cayenne/contents/framework/cayenne-jdk1.4-unpublished/src/main/java/org/apache/cayenne/conf/DriverDataSourceFactory.java?ref=2a41d5d9ddaefe99983625c438dd9624b5d3687e",
                "deletions": 2,
                "filename": "framework/cayenne-jdk1.4-unpublished/src/main/java/org/apache/cayenne/conf/DriverDataSourceFactory.java",
                "patch": "@@ -251,13 +251,17 @@ private String passwordFromInputStream(InputStream inputStream) {\n             }\n             finally {\n                 try {\n-                    bufferedReader.close();\n+                    if (bufferedReader != null) {\n+                        bufferedReader.close();\n+                    }\n                 }\n                 catch (Exception exception) {\n                 }\n \n                 try {\n-                    inputStreamReader.close();\n+                    if (inputStreamReader != null) {\n+                        inputStreamReader.close();\n+                    }\n                 }\n                 catch (Exception exception) {\n                 }",
                "raw_url": "https://github.com/apache/cayenne/raw/2a41d5d9ddaefe99983625c438dd9624b5d3687e/framework/cayenne-jdk1.4-unpublished/src/main/java/org/apache/cayenne/conf/DriverDataSourceFactory.java",
                "sha": "a5340e153fbbb5616c620c2df2e631ab8c8efb0d",
                "status": "modified"
            }
        ],
        "message": "NPE protection.\n\ngit-svn-id: https://svn.apache.org/repos/asf/cayenne/main/trunk@584610 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/cayenne/commit/2b5c5739d3b34e27687f26e8a21b430b47ccfb3a",
        "patched_files": [
            "DataDomain.java"
        ],
        "repo": "cayenne",
        "unit_tests": [
            "DataDomainTest.java"
        ]
    },
    "cayenne_382feb7": {
        "bug_id": "cayenne_382feb7",
        "commit": "https://github.com/apache/cayenne/commit/382feb7699136b85fa35463ade6242e70bedd278",
        "file": [
            {
                "additions": 14,
                "blob_url": "https://github.com/apache/cayenne/blob/382feb7699136b85fa35463ade6242e70bedd278/framework/cayenne-jdk1.5-unpublished/src/main/java/org/apache/cayenne/access/FlattenedArcKey.java",
                "changes": 14,
                "contents_url": "https://api.github.com/repos/apache/cayenne/contents/framework/cayenne-jdk1.5-unpublished/src/main/java/org/apache/cayenne/access/FlattenedArcKey.java?ref=382feb7699136b85fa35463ade6242e70bedd278",
                "deletions": 0,
                "filename": "framework/cayenne-jdk1.5-unpublished/src/main/java/org/apache/cayenne/access/FlattenedArcKey.java",
                "patch": "@@ -37,6 +37,7 @@\n import org.apache.cayenne.map.ObjRelationship;\n import org.apache.cayenne.query.Query;\n import org.apache.cayenne.query.SQLTemplate;\n+import org.apache.cayenne.util.Util;\n \n /**\n  * A holder of flattened relationship modification data.\n@@ -203,6 +204,19 @@ List buildJoinSnapshotsForDelete(DataNode node) {\n                     public void nextRows(Query query, List dataRows) {\n                         result[0] = dataRows;\n                     }\n+                    \n+                    @Override\n+                    public void nextQueryException(Query query, Exception ex) {\n+                        throw new CayenneRuntimeException(\"Raising from query exception.\", Util\n+                                .unwindException(ex));\n+                    }\n+\n+                    @Override\n+                    public void nextGlobalException(Exception ex) {\n+                        throw new CayenneRuntimeException(\n+                                \"Raising from underlyingQueryEngine exception.\",\n+                                Util.unwindException(ex));\n+                    }\n                 });\n \n         return result[0];",
                "raw_url": "https://github.com/apache/cayenne/raw/382feb7699136b85fa35463ade6242e70bedd278/framework/cayenne-jdk1.5-unpublished/src/main/java/org/apache/cayenne/access/FlattenedArcKey.java",
                "sha": "af8f46d4f2cb3e52dc5113a9a2e2b561f7544dc4",
                "status": "modified"
            }
        ],
        "message": "CAY-1725 NullPointerException from call to removeToManyTarget\n\ndo not swallow the underlying exception that confuses the users downstream\n\ngit-svn-id: https://svn.apache.org/repos/asf/cayenne/main/trunk@1361357 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/cayenne/commit/c4bd3cdc373fb1cb9b07eb65e9836decf81b2b73",
        "patched_files": [
            "FlattenedArcKey.java"
        ],
        "repo": "cayenne",
        "unit_tests": [
            "FlattenedArcKeyTest.java"
        ]
    },
    "cayenne_3c55684": {
        "bug_id": "cayenne_3c55684",
        "commit": "https://github.com/apache/cayenne/commit/3c556849d832f44c5304d765fa86ac5b1db039b8",
        "file": [
            {
                "additions": 6,
                "blob_url": "https://github.com/apache/cayenne/blob/3c556849d832f44c5304d765fa86ac5b1db039b8/framework/cayenne-jdk1.4-unpublished/src/main/java/org/apache/cayenne/access/DataDomainQueryAction.java",
                "changes": 9,
                "contents_url": "https://api.github.com/repos/apache/cayenne/contents/framework/cayenne-jdk1.4-unpublished/src/main/java/org/apache/cayenne/access/DataDomainQueryAction.java?ref=3c556849d832f44c5304d765fa86ac5b1db039b8",
                "deletions": 3,
                "filename": "framework/cayenne-jdk1.4-unpublished/src/main/java/org/apache/cayenne/access/DataDomainQueryAction.java",
                "patch": "@@ -168,10 +168,10 @@ private boolean interceptOIDQuery() {\n         if (query instanceof ObjectIdQuery) {\n \n             ObjectIdQuery oidQuery = (ObjectIdQuery) query;\n-\n             DataRow row = null;\n \n-            if (!oidQuery.isFetchMandatory()) {\n+            if (cache != null\n+                    && !oidQuery.isFetchMandatory()) {\n                 row = cache.getCachedSnapshot(oidQuery.getObjectId());\n             }\n \n@@ -214,8 +214,11 @@ private boolean interceptRelationshipQuery() {\n                 return !DONE;\n             }\n \n+            if(cache == null) {\n+                return !DONE;\n+            }\n+            \n             DataRow sourceRow = cache.getCachedSnapshot(relationshipQuery.getObjectId());\n-\n             if (sourceRow == null) {\n                 return !DONE;\n             }",
                "raw_url": "https://github.com/apache/cayenne/raw/3c556849d832f44c5304d765fa86ac5b1db039b8/framework/cayenne-jdk1.4-unpublished/src/main/java/org/apache/cayenne/access/DataDomainQueryAction.java",
                "sha": "c7165bcf8bbc9359f43f4064e4cc71a7cb734cf8",
                "status": "modified"
            },
            {
                "additions": 8,
                "blob_url": "https://github.com/apache/cayenne/blob/3c556849d832f44c5304d765fa86ac5b1db039b8/framework/cayenne-jdk1.4-unpublished/src/main/java/org/apache/cayenne/map/AshwoodEntitySorter.java",
                "changes": 10,
                "contents_url": "https://api.github.com/repos/apache/cayenne/contents/framework/cayenne-jdk1.4-unpublished/src/main/java/org/apache/cayenne/map/AshwoodEntitySorter.java?ref=3c556849d832f44c5304d765fa86ac5b1db039b8",
                "deletions": 2,
                "filename": "framework/cayenne-jdk1.4-unpublished/src/main/java/org/apache/cayenne/map/AshwoodEntitySorter.java",
                "patch": "@@ -302,16 +302,22 @@ protected Object findReflexiveMaster(\n \n         // find committed snapshot - so we can't fetch from the context as it will return\n         // dirty snapshot; must go down the stack instead\n+\n+        // how do we handle this for NEW objects correctly? For now bail from the method\n+        if (object.getObjectId().isTemporary()) {\n+            return null;\n+        }\n+\n         ObjectIdQuery query = new ObjectIdQuery(\n                 object.getObjectId(),\n                 true,\n                 ObjectIdQuery.CACHE);\n         QueryResponse response = context.getChannel().onQuery(null, query);\n         List result = response.firstList();\n-        if(result == null || result.size() == 0) {\n+        if (result == null || result.size() == 0) {\n             return null;\n         }\n-        \n+\n         DataRow snapshot = (DataRow) result.get(0);\n \n         ObjectId id = snapshot.createTargetObjectId(targetEntityName, finalRel);",
                "raw_url": "https://github.com/apache/cayenne/raw/3c556849d832f44c5304d765fa86ac5b1db039b8/framework/cayenne-jdk1.4-unpublished/src/main/java/org/apache/cayenne/map/AshwoodEntitySorter.java",
                "sha": "cb2480248a51ecdadb62c46996e0fed9a1c3829b",
                "status": "modified"
            }
        ],
        "message": "DataDomainQueryAction NPE fix\n\ngit-svn-id: https://svn.apache.org/repos/asf/cayenne/main/trunk@565900 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/cayenne/commit/bf11dd32fa4ff49bb99d96759191e2746c723b3f",
        "patched_files": [
            "AshwoodEntitySorter.java"
        ],
        "repo": "cayenne",
        "unit_tests": [
            "AshwoodEntitySorterTest.java"
        ]
    },
    "cayenne_446034a": {
        "bug_id": "cayenne_446034a",
        "commit": "https://github.com/apache/cayenne/commit/446034ae56f72fbd4c95f5561e4ca893c2b75b67",
        "file": [
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/cayenne/blob/446034ae56f72fbd4c95f5561e4ca893c2b75b67/framework/cayenne-jdk1.4-unpublished/src/main/java/org/apache/cayenne/intercept/DataChannelCallbackInterceptor.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/cayenne/contents/framework/cayenne-jdk1.4-unpublished/src/main/java/org/apache/cayenne/intercept/DataChannelCallbackInterceptor.java?ref=446034ae56f72fbd4c95f5561e4ca893c2b75b67",
                "deletions": 1,
                "filename": "framework/cayenne-jdk1.4-unpublished/src/main/java/org/apache/cayenne/intercept/DataChannelCallbackInterceptor.java",
                "patch": "@@ -81,7 +81,7 @@ public QueryResponse onQuery(ObjectContext originatingContext, Query query) {\n             List list = response.firstList();\n             if (list != null\n                     && !list.isEmpty()\n-                    && !(query.getMetaData(originatingContext.getEntityResolver()))\n+                    && !(query.getMetaData(channel.getEntityResolver()))\n                             .isFetchingDataRows()) {\n                 callbackRegistry.performCallbacks(LifecycleListener.POST_LOAD, list);\n             }",
                "raw_url": "https://github.com/apache/cayenne/raw/446034ae56f72fbd4c95f5561e4ca893c2b75b67/framework/cayenne-jdk1.4-unpublished/src/main/java/org/apache/cayenne/intercept/DataChannelCallbackInterceptor.java",
                "sha": "eba1a73d58502aeffd3f906ea79291db2af40dca",
                "status": "modified"
            },
            {
                "additions": 67,
                "blob_url": "https://github.com/apache/cayenne/blob/446034ae56f72fbd4c95f5561e4ca893c2b75b67/framework/cayenne-jdk1.4-unpublished/src/test/java/org/apache/cayenne/CayenneContextWithDataContextTest.java",
                "changes": 70,
                "contents_url": "https://api.github.com/repos/apache/cayenne/contents/framework/cayenne-jdk1.4-unpublished/src/test/java/org/apache/cayenne/CayenneContextWithDataContextTest.java?ref=446034ae56f72fbd4c95f5561e4ca893c2b75b67",
                "deletions": 3,
                "filename": "framework/cayenne-jdk1.4-unpublished/src/test/java/org/apache/cayenne/CayenneContextWithDataContextTest.java",
                "patch": "@@ -25,12 +25,15 @@\n import org.apache.cayenne.access.ClientServerChannel;\n import org.apache.cayenne.query.ObjectIdQuery;\n import org.apache.cayenne.query.SelectQuery;\n+import org.apache.cayenne.reflect.LifecycleCallbackRegistry;\n import org.apache.cayenne.remote.ClientChannel;\n import org.apache.cayenne.remote.ClientConnection;\n import org.apache.cayenne.remote.RemoteIncrementalFaultList;\n import org.apache.cayenne.remote.service.LocalConnection;\n+import org.apache.cayenne.testdo.mt.ClientMtReflexive;\n import org.apache.cayenne.testdo.mt.ClientMtTable1;\n import org.apache.cayenne.testdo.mt.ClientMtTable2;\n+import org.apache.cayenne.testdo.mt.MtReflexive;\n import org.apache.cayenne.testdo.mt.MtTable1;\n import org.apache.cayenne.unit.AccessStack;\n import org.apache.cayenne.unit.CayenneCase;\n@@ -40,9 +43,70 @@\n public class CayenneContextWithDataContextTest extends CayenneCase {\n \n     protected AccessStack buildAccessStack() {\n-        return CayenneResources\n-                .getResources()\n-                .getAccessStack(MULTI_TIER_ACCESS_STACK);\n+        return CayenneResources.getResources().getAccessStack(MULTI_TIER_ACCESS_STACK);\n+    }\n+\n+    public void testCAY830() throws Exception {\n+\n+        deleteTestData();\n+\n+        // must enable callbacks\n+        ClientServerChannel csChannel = new ClientServerChannel(getDomain());\n+        csChannel.setLifecycleCallbacksEnabled(true);\n+\n+        // an exception was triggered within POST_LOAD callback\n+        LifecycleCallbackRegistry callbackRegistry = csChannel\n+                .getEntityResolver()\n+                .getCallbackRegistry();\n+\n+        try {\n+            callbackRegistry.addListener(MtReflexive.class, new LifecycleListener() {\n+\n+                public void postLoad(Object entity) {\n+                }\n+\n+                public void postPersist(Object entity) {\n+                }\n+\n+                public void postRemove(Object entity) {\n+                }\n+\n+                public void postUpdate(Object entity) {\n+                }\n+\n+                public void prePersist(Object entity) {\n+                }\n+\n+                public void preRemove(Object entity) {\n+                }\n+\n+                public void preUpdate(Object entity) {\n+                }\n+            });\n+\n+            ClientConnection connection = new LocalConnection(csChannel);\n+            ClientChannel channel = new ClientChannel(connection);\n+\n+            CayenneContext context = new CayenneContext(channel);\n+\n+            ClientMtReflexive o1 = (ClientMtReflexive) context\n+                    .newObject(ClientMtReflexive.class);\n+            o1.setName(\"parent\");\n+\n+            ClientMtReflexive o2 = (ClientMtReflexive) context\n+                    .newObject(ClientMtReflexive.class);\n+            o2.setName(\"child\");\n+            o2.setToParent(o1);\n+            context.commitChanges();\n+\n+            context.deleteObject(o1);\n+            context.deleteObject(o2);\n+            context.commitChanges();\n+            // per CAY-830 an exception is thrown here\n+        }\n+        finally {\n+            callbackRegistry.clear();\n+        }\n     }\n \n     public void testCreateFault() throws Exception {",
                "raw_url": "https://github.com/apache/cayenne/raw/446034ae56f72fbd4c95f5561e4ca893c2b75b67/framework/cayenne-jdk1.4-unpublished/src/test/java/org/apache/cayenne/CayenneContextWithDataContextTest.java",
                "sha": "bb05c38958294d9a2ad8cb48a14015e9179a20cf",
                "status": "modified"
            },
            {
                "additions": 10,
                "blob_url": "https://github.com/apache/cayenne/blob/446034ae56f72fbd4c95f5561e4ca893c2b75b67/framework/cayenne-jdk1.4-unpublished/src/test/java/org/apache/cayenne/testdo/mt/ClientMtReflexive.java",
                "changes": 10,
                "contents_url": "https://api.github.com/repos/apache/cayenne/contents/framework/cayenne-jdk1.4-unpublished/src/test/java/org/apache/cayenne/testdo/mt/ClientMtReflexive.java?ref=446034ae56f72fbd4c95f5561e4ca893c2b75b67",
                "deletions": 0,
                "filename": "framework/cayenne-jdk1.4-unpublished/src/test/java/org/apache/cayenne/testdo/mt/ClientMtReflexive.java",
                "patch": "@@ -0,0 +1,10 @@\n+package org.apache.cayenne.testdo.mt;\n+\n+import org.apache.cayenne.testdo.mt.auto._ClientMtReflexive;\n+\n+/**\n+ * A persistent class mapped as \"MtReflexive\" Cayenne entity.\n+ */\n+public class ClientMtReflexive extends _ClientMtReflexive {\n+\n+}",
                "raw_url": "https://github.com/apache/cayenne/raw/446034ae56f72fbd4c95f5561e4ca893c2b75b67/framework/cayenne-jdk1.4-unpublished/src/test/java/org/apache/cayenne/testdo/mt/ClientMtReflexive.java",
                "sha": "3eb25d7a83ed4b6831da5f0f4453fffad670b4c4",
                "status": "added"
            },
            {
                "additions": 10,
                "blob_url": "https://github.com/apache/cayenne/blob/446034ae56f72fbd4c95f5561e4ca893c2b75b67/framework/cayenne-jdk1.4-unpublished/src/test/java/org/apache/cayenne/testdo/mt/MtReflexive.java",
                "changes": 10,
                "contents_url": "https://api.github.com/repos/apache/cayenne/contents/framework/cayenne-jdk1.4-unpublished/src/test/java/org/apache/cayenne/testdo/mt/MtReflexive.java?ref=446034ae56f72fbd4c95f5561e4ca893c2b75b67",
                "deletions": 0,
                "filename": "framework/cayenne-jdk1.4-unpublished/src/test/java/org/apache/cayenne/testdo/mt/MtReflexive.java",
                "patch": "@@ -0,0 +1,10 @@\n+package org.apache.cayenne.testdo.mt;\n+\n+import org.apache.cayenne.testdo.mt.auto._MtReflexive;\n+\n+public class MtReflexive extends _MtReflexive {\n+\n+}\n+\n+\n+",
                "raw_url": "https://github.com/apache/cayenne/raw/446034ae56f72fbd4c95f5561e4ca893c2b75b67/framework/cayenne-jdk1.4-unpublished/src/test/java/org/apache/cayenne/testdo/mt/MtReflexive.java",
                "sha": "73c5979c9ad3257fedae977c0151fb8e9a2458ba",
                "status": "added"
            },
            {
                "additions": 83,
                "blob_url": "https://github.com/apache/cayenne/blob/446034ae56f72fbd4c95f5561e4ca893c2b75b67/framework/cayenne-jdk1.4-unpublished/src/test/java/org/apache/cayenne/testdo/mt/auto/_ClientMtReflexive.java",
                "changes": 83,
                "contents_url": "https://api.github.com/repos/apache/cayenne/contents/framework/cayenne-jdk1.4-unpublished/src/test/java/org/apache/cayenne/testdo/mt/auto/_ClientMtReflexive.java?ref=446034ae56f72fbd4c95f5561e4ca893c2b75b67",
                "deletions": 0,
                "filename": "framework/cayenne-jdk1.4-unpublished/src/test/java/org/apache/cayenne/testdo/mt/auto/_ClientMtReflexive.java",
                "patch": "@@ -0,0 +1,83 @@\n+package org.apache.cayenne.testdo.mt.auto;\n+\n+import java.util.List;\n+\n+import org.apache.cayenne.PersistentObject;\n+import org.apache.cayenne.ValueHolder;\n+import org.apache.cayenne.testdo.mt.ClientMtReflexive;\n+\n+/**\n+ * A generated persistent class mapped as \"MtReflexive\" Cayenne entity. It is a good idea to\n+ * avoid changing this class manually, since it will be overwritten next time code is\n+ * regenerated. If you need to make any customizations, put them in a subclass.\n+ */\n+public class _ClientMtReflexive extends PersistentObject {\n+\n+    public static final String NAME_PROPERTY = \"name\";\n+    public static final String CHILDREN_PROPERTY = \"children\";\n+    public static final String TO_PARENT_PROPERTY = \"toParent\";\n+\n+    protected String name;\n+    protected List children;\n+    protected ValueHolder toParent;\n+\n+    public String getName() {\n+        if(objectContext != null) {\n+            objectContext.prepareForAccess(this, \"name\", false);\n+        }\n+        \n+        return name;\n+    }\n+    public void setName(String name) {\n+        if(objectContext != null) {\n+            objectContext.prepareForAccess(this, \"name\", false);\n+        }\n+        \n+        Object oldValue = this.name;\n+        this.name = name;\n+        \n+        // notify objectContext about simple property change\n+        if(objectContext != null) {\n+            objectContext.propertyChanged(this, \"name\", oldValue, name);\n+        }\n+    }\n+    \n+    \n+    public List getChildren() {\n+        if(objectContext != null) {\n+            objectContext.prepareForAccess(this, \"children\", true);\n+        }\n+        \n+        return children;\n+    }\n+    public void addToChildren(ClientMtReflexive object) {\n+        if(objectContext != null) {\n+            objectContext.prepareForAccess(this, \"children\", true);\n+        }\n+        \n+        this.children.add(object);\n+    }\n+    public void removeFromChildren(ClientMtReflexive object) {\n+        if(objectContext != null) {\n+            objectContext.prepareForAccess(this, \"children\", true);\n+        }\n+        \n+        this.children.remove(object);\n+    }\n+    \n+    public ClientMtReflexive getToParent() {\n+        if(objectContext != null) {\n+            objectContext.prepareForAccess(this, \"toParent\", true);\n+        }\n+        \n+        return (ClientMtReflexive) toParent.getValue();\n+    }\n+    public void setToParent(ClientMtReflexive toParent) {\n+        if(objectContext != null) {\n+            objectContext.prepareForAccess(this, \"toParent\", true);\n+        }\n+        \n+        this.toParent.setValue(toParent);\n+    }\n+    \n+}",
                "raw_url": "https://github.com/apache/cayenne/raw/446034ae56f72fbd4c95f5561e4ca893c2b75b67/framework/cayenne-jdk1.4-unpublished/src/test/java/org/apache/cayenne/testdo/mt/auto/_ClientMtReflexive.java",
                "sha": "6fbdc697e2fd45cb906f42d090cc87ad400a5bc7",
                "status": "added"
            },
            {
                "additions": 46,
                "blob_url": "https://github.com/apache/cayenne/blob/446034ae56f72fbd4c95f5561e4ca893c2b75b67/framework/cayenne-jdk1.4-unpublished/src/test/java/org/apache/cayenne/testdo/mt/auto/_MtReflexive.java",
                "changes": 46,
                "contents_url": "https://api.github.com/repos/apache/cayenne/contents/framework/cayenne-jdk1.4-unpublished/src/test/java/org/apache/cayenne/testdo/mt/auto/_MtReflexive.java?ref=446034ae56f72fbd4c95f5561e4ca893c2b75b67",
                "deletions": 0,
                "filename": "framework/cayenne-jdk1.4-unpublished/src/test/java/org/apache/cayenne/testdo/mt/auto/_MtReflexive.java",
                "patch": "@@ -0,0 +1,46 @@\n+package org.apache.cayenne.testdo.mt.auto;\n+\n+import java.util.List;\n+\n+/** Class _MtReflexive was generated by Cayenne.\n+  * It is probably a good idea to avoid changing this class manually, \n+  * since it may be overwritten next time code is regenerated. \n+  * If you need to make any customizations, please use subclass. \n+  */\n+public class _MtReflexive extends org.apache.cayenne.CayenneDataObject {\n+\n+    public static final String NAME_PROPERTY = \"name\";\n+    public static final String CHILDREN_PROPERTY = \"children\";\n+    public static final String TO_PARENT_PROPERTY = \"toParent\";\n+\n+    public static final String ID_PK_COLUMN = \"ID\";\n+\n+    public void setName(String name) {\n+        writeProperty(\"name\", name);\n+    }\n+    public String getName() {\n+        return (String)readProperty(\"name\");\n+    }\n+    \n+    \n+    public void addToChildren(org.apache.cayenne.testdo.mt.MtReflexive obj) {\n+        addToManyTarget(\"children\", obj, true);\n+    }\n+    public void removeFromChildren(org.apache.cayenne.testdo.mt.MtReflexive obj) {\n+        removeToManyTarget(\"children\", obj, true);\n+    }\n+    public List getChildren() {\n+        return (List)readProperty(\"children\");\n+    }\n+    \n+    \n+    public void setToParent(org.apache.cayenne.testdo.mt.MtReflexive toParent) {\n+        setToOneTarget(\"toParent\", toParent, true);\n+    }\n+\n+    public org.apache.cayenne.testdo.mt.MtReflexive getToParent() {\n+        return (org.apache.cayenne.testdo.mt.MtReflexive)readProperty(\"toParent\");\n+    } \n+    \n+    \n+}",
                "raw_url": "https://github.com/apache/cayenne/raw/446034ae56f72fbd4c95f5561e4ca893c2b75b67/framework/cayenne-jdk1.4-unpublished/src/test/java/org/apache/cayenne/testdo/mt/auto/_MtReflexive.java",
                "sha": "25ef966764c6387667cc7f5e80b1706603e557a2",
                "status": "added"
            },
            {
                "additions": 16,
                "blob_url": "https://github.com/apache/cayenne/blob/446034ae56f72fbd4c95f5561e4ca893c2b75b67/framework/cayenne-jdk1.4-unpublished/src/test/resources/multi-tier.map.xml",
                "changes": 16,
                "contents_url": "https://api.github.com/repos/apache/cayenne/contents/framework/cayenne-jdk1.4-unpublished/src/test/resources/multi-tier.map.xml?ref=446034ae56f72fbd4c95f5561e4ca893c2b75b67",
                "deletions": 0,
                "filename": "framework/cayenne-jdk1.4-unpublished/src/test/resources/multi-tier.map.xml",
                "patch": "@@ -26,6 +26,11 @@\n \t\t<db-attribute name=\"TABLE4_ID\" type=\"INTEGER\" isPrimaryKey=\"true\" isMandatory=\"true\"/>\n \t\t<db-attribute name=\"TABLE5_ID\" type=\"INTEGER\" isPrimaryKey=\"true\" isMandatory=\"true\"/>\n \t</db-entity>\n+\t<db-entity name=\"MT_REFLEXIVE\">\n+\t\t<db-attribute name=\"ID\" type=\"INTEGER\" isPrimaryKey=\"true\" isMandatory=\"true\"/>\n+\t\t<db-attribute name=\"NAME\" type=\"VARCHAR\" isMandatory=\"true\" length=\"200\"/>\n+\t\t<db-attribute name=\"PARENT_ID\" type=\"INTEGER\"/>\n+\t</db-entity>\n \t<db-entity name=\"MT_TABLE1\">\n \t\t<db-attribute name=\"GLOBAL_ATTRIBUTE1\" type=\"VARCHAR\" length=\"100\"/>\n \t\t<db-attribute name=\"SERVER_ATTRIBUTE1\" type=\"VARCHAR\" length=\"100\"/>\n@@ -60,6 +65,9 @@\n \t<obj-entity name=\"MtDeleteRule\" className=\"org.apache.cayenne.testdo.mt.MtDeleteRule\" clientClassName=\"org.apache.cayenne.testdo.mt.ClientMtDeleteRule\" dbEntityName=\"MT_DELETE_RULE\">\n \t\t<obj-attribute name=\"name\" type=\"java.lang.String\" db-attribute-path=\"NAME\"/>\n \t</obj-entity>\n+\t<obj-entity name=\"MtReflexive\" className=\"org.apache.cayenne.testdo.mt.MtReflexive\" clientClassName=\"org.apache.cayenne.testdo.mt.ClientMtReflexive\" dbEntityName=\"MT_REFLEXIVE\">\n+\t\t<obj-attribute name=\"name\" type=\"java.lang.String\" db-attribute-path=\"NAME\"/>\n+\t</obj-entity>\n \t<obj-entity name=\"MtTable1\" className=\"org.apache.cayenne.testdo.mt.MtTable1\" clientClassName=\"org.apache.cayenne.testdo.mt.ClientMtTable1\" dbEntityName=\"MT_TABLE1\">\n \t\t<obj-attribute name=\"globalAttribute1\" type=\"java.lang.String\" db-attribute-path=\"GLOBAL_ATTRIBUTE1\"/>\n \t\t<obj-attribute name=\"serverAttribute1\" type=\"java.lang.String\" db-attribute-path=\"SERVER_ATTRIBUTE1\"/>\n@@ -103,6 +111,12 @@\n \t<db-relationship name=\"toTable5\" source=\"MT_JOIN45\" target=\"MT_TABLE5\" toMany=\"false\">\n \t\t<db-attribute-pair source=\"TABLE5_ID\" target=\"ID\"/>\n \t</db-relationship>\n+\t<db-relationship name=\"children\" source=\"MT_REFLEXIVE\" target=\"MT_REFLEXIVE\" toMany=\"true\">\n+\t\t<db-attribute-pair source=\"ID\" target=\"PARENT_ID\"/>\n+\t</db-relationship>\n+\t<db-relationship name=\"toParent\" source=\"MT_REFLEXIVE\" target=\"MT_REFLEXIVE\" toMany=\"false\">\n+\t\t<db-attribute-pair source=\"PARENT_ID\" target=\"ID\"/>\n+\t</db-relationship>\n \t<db-relationship name=\"table2Array\" source=\"MT_TABLE1\" target=\"MT_TABLE2\" toMany=\"true\">\n \t\t<db-attribute-pair source=\"TABLE1_ID\" target=\"TABLE1_ID\"/>\n \t</db-relationship>\n@@ -121,6 +135,8 @@\n \t<obj-relationship name=\"fromCascade\" source=\"MtDeleteRule\" target=\"MtDeleteCascade\" db-relationship-path=\"fromCascade\"/>\n \t<obj-relationship name=\"fromDeny\" source=\"MtDeleteRule\" target=\"MtDeleteDeny\" db-relationship-path=\"fromDeny\"/>\n \t<obj-relationship name=\"fromNullify\" source=\"MtDeleteRule\" target=\"MtDeleteNullify\" db-relationship-path=\"fromNullify\"/>\n+\t<obj-relationship name=\"children\" source=\"MtReflexive\" target=\"MtReflexive\" db-relationship-path=\"children\"/>\n+\t<obj-relationship name=\"toParent\" source=\"MtReflexive\" target=\"MtReflexive\" db-relationship-path=\"toParent\"/>\n \t<obj-relationship name=\"table2Array\" source=\"MtTable1\" target=\"MtTable2\" db-relationship-path=\"table2Array\"/>\n \t<obj-relationship name=\"table1\" source=\"MtTable2\" target=\"MtTable1\" db-relationship-path=\"table1\"/>\n \t<obj-relationship name=\"table5s\" source=\"MtTable4\" target=\"MtTable5\" db-relationship-path=\"joins.toTable5\"/>",
                "raw_url": "https://github.com/apache/cayenne/raw/446034ae56f72fbd4c95f5561e4ca893c2b75b67/framework/cayenne-jdk1.4-unpublished/src/test/resources/multi-tier.map.xml",
                "sha": "c43015548e670ec28beac94c36545077266c5ecf",
                "status": "modified"
            }
        ],
        "message": "CAY-830 DataChannelCallbackInterceptor.onQuery NPE\n\ngit-svn-id: https://svn.apache.org/repos/asf/cayenne/main/trunk@556338 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/cayenne/commit/4c983420c786c19626763bc0e2e53cc2e893bbfc",
        "patched_files": [
            "_MtReflexive.java",
            "ClientMtReflexive.java",
            "multi-tier.java",
            "_ClientMtReflexive.java",
            "DataChannelCallbackInterceptor.java",
            "MtReflexive.java"
        ],
        "repo": "cayenne",
        "unit_tests": [
            "DataChannelCallbackInterceptorTest.java",
            "CayenneContextWithDataContextTest.java"
        ]
    },
    "cayenne_48dbd36": {
        "bug_id": "cayenne_48dbd36",
        "commit": "https://github.com/apache/cayenne/commit/48dbd3642011febf0f0395b94fb72d4e0190d47a",
        "file": [
            {
                "additions": 6,
                "blob_url": "https://github.com/apache/cayenne/blob/48dbd3642011febf0f0395b94fb72d4e0190d47a/framework/cayenne-jdk1.5-unpublished/src/main/java/org/apache/cayenne/access/DataContext.java",
                "changes": 10,
                "contents_url": "https://api.github.com/repos/apache/cayenne/contents/framework/cayenne-jdk1.5-unpublished/src/main/java/org/apache/cayenne/access/DataContext.java?ref=48dbd3642011febf0f0395b94fb72d4e0190d47a",
                "deletions": 4,
                "filename": "framework/cayenne-jdk1.5-unpublished/src/main/java/org/apache/cayenne/access/DataContext.java",
                "patch": "@@ -95,15 +95,17 @@ public DataContext() {\n      */\n     public DataContext(DataChannel channel, ObjectStore objectStore) {\n \n-        if (channel != null) {\n-            attachToChannel(channel);\n-        }\n-\n         // inject self as parent context\n         if (objectStore != null) {\n             this.objectStore = objectStore;\n             objectStore.setContext(this);\n+        }\n+        \n+        if (channel != null) {\n+            attachToChannel(channel);\n+        }\n \n+        if (objectStore != null) {\n             DataDomain domain = getParentDataDomain();\n             this.usingSharedSnaphsotCache = domain != null\n                     && objectStore.getDataRowCache() == domain.getSharedSnapshotCache();",
                "raw_url": "https://github.com/apache/cayenne/raw/48dbd3642011febf0f0395b94fb72d4e0190d47a/framework/cayenne-jdk1.5-unpublished/src/main/java/org/apache/cayenne/access/DataContext.java",
                "sha": "33dc5d95a929411d98a38849bcd6a4c28da56162",
                "status": "modified"
            }
        ],
        "message": "CAY-1583 context.getObjectStore() returning null causing NullpointerException in DataMergeHandler\n\ninitializing objectStore before attaching context to parent channel\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/cayenne/main/trunk@1147169 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/cayenne/commit/2fb0fe8e0254f83789b7b8bde4481669527896ae",
        "patched_files": [
            "DataContext.java"
        ],
        "repo": "cayenne",
        "unit_tests": [
            "DataContextTest.java"
        ]
    },
    "cayenne_4bd2cad": {
        "bug_id": "cayenne_4bd2cad",
        "commit": "https://github.com/apache/cayenne/commit/4bd2cad0c06c4d444b51f5417b9bfb22aefe2075",
        "file": [
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/cayenne/blob/4bd2cad0c06c4d444b51f5417b9bfb22aefe2075/cayenne-server/src/test/java/org/apache/cayenne/access/dbsync/BaseSchemaUpdateStrategy_ConcurrencyTest.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/cayenne/contents/cayenne-server/src/test/java/org/apache/cayenne/access/dbsync/BaseSchemaUpdateStrategy_ConcurrencyTest.java?ref=4bd2cad0c06c4d444b51f5417b9bfb22aefe2075",
                "deletions": 1,
                "filename": "cayenne-server/src/test/java/org/apache/cayenne/access/dbsync/BaseSchemaUpdateStrategy_ConcurrencyTest.java",
                "patch": "@@ -80,7 +80,7 @@ protected void processSchemaUpdate(DataNode dataNode) throws SQLException {\n                 public void run() {\n                     try {\n                         strategy.updateSchema(dataNode);\n-                    } catch (SQLException e) {\n+                    } catch (Throwable e) {\n                         LOGGER.error(\"error in test\", e);\n                         errors.set(true);\n                     }",
                "raw_url": "https://github.com/apache/cayenne/raw/4bd2cad0c06c4d444b51f5417b9bfb22aefe2075/cayenne-server/src/test/java/org/apache/cayenne/access/dbsync/BaseSchemaUpdateStrategy_ConcurrencyTest.java",
                "sha": "d1f22cefc5cc357c39182bcc1c7a0395e8864f63",
                "status": "modified"
            }
        ],
        "message": "NPE in BaseSchemaUpdateStrategy",
        "parent": "https://github.com/apache/cayenne/commit/627a67334ca8da09ffc5ed22920b227ae2c97ff3",
        "patched_files": [],
        "repo": "cayenne",
        "unit_tests": [
            "BaseSchemaUpdateStrategy_ConcurrencyTest.java"
        ]
    },
    "cayenne_4dcb157": {
        "bug_id": "cayenne_4dcb157",
        "commit": "https://github.com/apache/cayenne/commit/4dcb1571068b9e0363dbd091686d6eb9901d16c5",
        "file": [
            {
                "additions": 9,
                "blob_url": "https://github.com/apache/cayenne/blob/4dcb1571068b9e0363dbd091686d6eb9901d16c5/framework/cayenne-jpa-unpublished/src/main/java/org/apache/cayenne/jpa/conf/EntityMapDefaultsProcessor.java",
                "changes": 12,
                "contents_url": "https://api.github.com/repos/apache/cayenne/contents/framework/cayenne-jpa-unpublished/src/main/java/org/apache/cayenne/jpa/conf/EntityMapDefaultsProcessor.java?ref=4dcb1571068b9e0363dbd091686d6eb9901d16c5",
                "deletions": 3,
                "filename": "framework/cayenne-jpa-unpublished/src/main/java/org/apache/cayenne/jpa/conf/EntityMapDefaultsProcessor.java",
                "patch": "@@ -126,7 +126,8 @@ public boolean onStartNode(ProjectPath path) {\n                     JpaTable table = new JpaTable(AnnotationPrototypes.getTable());\n \n                     // unclear whether we need to apply any other name transformations ...\n-                    // or even if we need to uppercase the name. Per default examples looks\n+                    // or even if we need to uppercase the name. Per default examples\n+                    // looks\n                     // like we need. table.setName(entity.getName().toUpperCase());\n                     table.setName(entity.getName());\n                     entity.setTable(table);\n@@ -207,7 +208,8 @@ public boolean onStartNode(ProjectPath path) {\n                 jpaBasic.setColumn(column);\n             }\n \n-            JpaEntity entity = (JpaEntity) path.firstInstanceOf(JpaEntity.class);\n+            JpaAbstractEntity entity = (JpaAbstractEntity) path\n+                    .firstInstanceOf(JpaAbstractEntity.class);\n \n             // process temporal type defaults\n             if (jpaBasic.getTemporal() == null && jpaBasic.getEnumerated() == null) {\n@@ -282,7 +284,11 @@ public boolean onStartNode(ProjectPath path) {\n \n             if (column.getTable() == null) {\n                 JpaEntity entity = (JpaEntity) path.firstInstanceOf(JpaEntity.class);\n-                column.setTable(entity.getTable().getName());\n+\n+                // parent can be a mapped superclass\n+                if (entity != null) {\n+                    column.setTable(entity.getTable().getName());\n+                }\n             }\n \n             if (parent.getPropertyDescriptor().isStringType()) {",
                "raw_url": "https://github.com/apache/cayenne/raw/4dcb1571068b9e0363dbd091686d6eb9901d16c5/framework/cayenne-jpa-unpublished/src/main/java/org/apache/cayenne/jpa/conf/EntityMapDefaultsProcessor.java",
                "sha": "d018ee66152849769602e2d2ef0dc7ff401eba75",
                "status": "modified"
            }
        ],
        "message": "fixing npe\n\ngit-svn-id: https://svn.apache.org/repos/asf/cayenne/main/trunk@571952 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/cayenne/commit/f9e7f1439fcc207e5eaf374c4cdc27ea41f668be",
        "patched_files": [
            "EntityMapDefaultsProcessor.java"
        ],
        "repo": "cayenne",
        "unit_tests": [
            "EntityMapDefaultsProcessorTest.java"
        ]
    },
    "cayenne_5692a6a": {
        "bug_id": "cayenne_5692a6a",
        "commit": "https://github.com/apache/cayenne/commit/5692a6a7ddbc27600f67d2442183d14e6ed637d6",
        "file": [
            {
                "additions": 13,
                "blob_url": "https://github.com/apache/cayenne/blob/5692a6a7ddbc27600f67d2442183d14e6ed637d6/framework/cayenne-jdk1.5-unpublished/src/main/java/org/apache/cayenne/tools/DbGeneratorTask.java",
                "changes": 19,
                "contents_url": "https://api.github.com/repos/apache/cayenne/contents/framework/cayenne-jdk1.5-unpublished/src/main/java/org/apache/cayenne/tools/DbGeneratorTask.java?ref=5692a6a7ddbc27600f67d2442183d14e6ed637d6",
                "deletions": 6,
                "filename": "framework/cayenne-jdk1.5-unpublished/src/main/java/org/apache/cayenne/tools/DbGeneratorTask.java",
                "patch": "@@ -30,6 +30,7 @@\n import org.apache.tools.ant.Project;\n import org.xml.sax.InputSource;\n \n+\n import java.io.File;\n import java.sql.Driver;\n \n@@ -41,7 +42,7 @@\n  */\n // TODO: support classpath attribute for loading the driver\n public class DbGeneratorTask extends CayenneTask {\n-\n+    \n     protected DbAdapter adapter;\n     protected File map;\n     protected String driver;\n@@ -64,14 +65,14 @@ public void execute() {\n         if (adapter == null) {\n             adapter = new JdbcAdapter();\n         }\n-\n+        \n         log(String.format(\"connection settings - [driver: %s, url: %s, username: %s]\", driver, url, userName), Project.MSG_VERBOSE);\n \n         log(String.format(\"generator options - [dropTables: %s, dropPK: %s, createTables: %s, createPK: %s, createFK: %s]\",\n                 dropTables, dropPK, createTables, createPK, createFK), Project.MSG_VERBOSE);\n \n         validateAttributes();\n-\n+        \n         try {\n \n             // Load the data map and run the db generator.\n@@ -168,15 +169,21 @@ public void setMap(File map) {\n      * @param adapter The db adapter to set.\n      */\n     public void setAdapter(String adapter) {\n-\n+        ClassLoader loader = null;\n         if (adapter != null) {\n             // Try to create an instance of the DB adapter.\n             try {\n-                Class<?> c = Class.forName(adapter);\n+                loader = Thread.currentThread().getContextClassLoader();\n+                Thread.currentThread().setContextClassLoader(DbGeneratorTask.class.getClassLoader());\n+\n+                Class<?> c = Util.getJavaClass(adapter);\n                 this.adapter = (DbAdapter) c.newInstance();\n             }\n             catch (Exception e) {\n-                throw new BuildException(\"Can't load DbAdapter: \" + adapter);\n+                throw new BuildException(\"Can't load DbAdapter: \" + adapter,e);\n+            }\n+            finally{\n+                Thread.currentThread().setContextClassLoader(loader);\n             }\n         }\n     }",
                "raw_url": "https://github.com/apache/cayenne/raw/5692a6a7ddbc27600f67d2442183d14e6ed637d6/framework/cayenne-jdk1.5-unpublished/src/main/java/org/apache/cayenne/tools/DbGeneratorTask.java",
                "sha": "81908f7689815615b0be7a97bbfafc09b8415310",
                "status": "modified"
            }
        ],
        "message": "CAY-1170 cdbgen task fails due to NPE when instantiating TypesHandler\n\na patch by Dima Loiko that addresses cdbgen classloader issues\ncan't yet reproduce the problem the way the user described it\n\ngit-svn-id: https://svn.apache.org/repos/asf/cayenne/main/trunk@743287 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/cayenne/commit/ff59c130e2565f6a480d5461462fac4d4d30b543",
        "patched_files": [
            "DbGeneratorTask.java"
        ],
        "repo": "cayenne",
        "unit_tests": [
            "DbGeneratorTaskTest.java"
        ]
    },
    "cayenne_65c1a73": {
        "bug_id": "cayenne_65c1a73",
        "commit": "https://github.com/apache/cayenne/commit/65c1a738737ea5b3f753a7c0d02ecb808ba4e39a",
        "file": [
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/cayenne/blob/65c1a738737ea5b3f753a7c0d02ecb808ba4e39a/framework/cayenne-jdk1.5-unpublished/src/main/java/org/apache/cayenne/access/FlattenedArcKey.java",
                "changes": 3,
                "contents_url": "https://api.github.com/repos/apache/cayenne/contents/framework/cayenne-jdk1.5-unpublished/src/main/java/org/apache/cayenne/access/FlattenedArcKey.java?ref=65c1a738737ea5b3f753a7c0d02ecb808ba4e39a",
                "deletions": 2,
                "filename": "framework/cayenne-jdk1.5-unpublished/src/main/java/org/apache/cayenne/access/FlattenedArcKey.java",
                "patch": "@@ -190,9 +190,8 @@ List buildJoinSnapshotsForDelete(DataNode node) {\n             }\n         }\n \n-        SQLTemplate query = new SQLTemplate(joinEntity.getDataMap(), sql.toString());\n+        SQLTemplate query = new SQLTemplate(joinEntity.getDataMap(), sql.toString(), true);\n         query.setParameters(snapshot);\n-        query.setFetchingDataRows(true);\n \n         final List[] result = new List[1];\n ",
                "raw_url": "https://github.com/apache/cayenne/raw/65c1a738737ea5b3f753a7c0d02ecb808ba4e39a/framework/cayenne-jdk1.5-unpublished/src/main/java/org/apache/cayenne/access/FlattenedArcKey.java",
                "sha": "e7c82560403b2b5499e15dcd08fca87aa2b4eac1",
                "status": "modified"
            },
            {
                "additions": 5,
                "blob_url": "https://github.com/apache/cayenne/blob/65c1a738737ea5b3f753a7c0d02ecb808ba4e39a/framework/cayenne-jdk1.5-unpublished/src/main/java/org/apache/cayenne/access/ObjectResolver.java",
                "changes": 5,
                "contents_url": "https://api.github.com/repos/apache/cayenne/contents/framework/cayenne-jdk1.5-unpublished/src/main/java/org/apache/cayenne/access/ObjectResolver.java?ref=65c1a738737ea5b3f753a7c0d02ecb808ba4e39a",
                "deletions": 0,
                "filename": "framework/cayenne-jdk1.5-unpublished/src/main/java/org/apache/cayenne/access/ObjectResolver.java",
                "patch": "@@ -57,6 +57,11 @@\n     ObjectResolver(DataContext context, ClassDescriptor descriptor, boolean refresh) {\n \n         // sanity check\n+        if (descriptor == null || descriptor.getEntity() == null) {\n+            throw new CayenneRuntimeException(\n+                    \"Set up Object entity or use rowFetchingQuery\");\n+        }\n+\n         DbEntity dbEntity = descriptor.getEntity().getDbEntity();\n         if (dbEntity == null) {\n             throw new CayenneRuntimeException(\"ObjEntity '\"",
                "raw_url": "https://github.com/apache/cayenne/raw/65c1a738737ea5b3f753a7c0d02ecb808ba4e39a/framework/cayenne-jdk1.5-unpublished/src/main/java/org/apache/cayenne/access/ObjectResolver.java",
                "sha": "57504c100ae02862f477da0d6a65a000456d2143",
                "status": "modified"
            },
            {
                "additions": 11,
                "blob_url": "https://github.com/apache/cayenne/blob/65c1a738737ea5b3f753a7c0d02ecb808ba4e39a/framework/cayenne-jdk1.5-unpublished/src/main/java/org/apache/cayenne/query/SQLTemplate.java",
                "changes": 13,
                "contents_url": "https://api.github.com/repos/apache/cayenne/contents/framework/cayenne-jdk1.5-unpublished/src/main/java/org/apache/cayenne/query/SQLTemplate.java?ref=65c1a738737ea5b3f753a7c0d02ecb808ba4e39a",
                "deletions": 2,
                "filename": "framework/cayenne-jdk1.5-unpublished/src/main/java/org/apache/cayenne/query/SQLTemplate.java",
                "patch": "@@ -101,11 +101,21 @@ public SQLTemplate() {\n \n     /**\n      * @since 1.2\n+     * @deprecated since 3.1, use SQLTemplate(DataMap rootMap, String defaultTemplate,\n+     *             boolean isFetchingDataRows) instead\n      */\n+    @Deprecated\n     public SQLTemplate(DataMap rootMap, String defaultTemplate) {\n+        this(rootMap, defaultTemplate, false);\n+    }\n+\n+    /**\n+     * @since 3.1\n+     */\n+    public SQLTemplate(DataMap rootMap, String defaultTemplate, boolean isFetchingDataRows) {\n         setDefaultTemplate(defaultTemplate);\n         setRoot(rootMap);\n-        setFetchingDataRows(true); // ObjEntity not passed, so it's DataRow query\n+        setFetchingDataRows(isFetchingDataRows);\n     }\n \n     /**\n@@ -566,7 +576,6 @@ public void setColumnNamesCapitalization(CapsStrategy columnNameCapitalization)\n      * @since 3.0\n      */\n     public void setResult(SQLResult resultSet) {\n-        setFetchingDataRows(false); // turn off mapping to DataRows, use explicit\n         this.result = resultSet;\n     }\n ",
                "raw_url": "https://github.com/apache/cayenne/raw/65c1a738737ea5b3f753a7c0d02ecb808ba4e39a/framework/cayenne-jdk1.5-unpublished/src/main/java/org/apache/cayenne/query/SQLTemplate.java",
                "sha": "ec007782477912e384447fc7e03242521745395a",
                "status": "modified"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/cayenne/blob/65c1a738737ea5b3f753a7c0d02ecb808ba4e39a/framework/cayenne-jdk1.5-unpublished/src/test/java/org/apache/cayenne/CayenneTest.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/cayenne/contents/framework/cayenne-jdk1.5-unpublished/src/test/java/org/apache/cayenne/CayenneTest.java?ref=65c1a738737ea5b3f753a7c0d02ecb808ba4e39a",
                "deletions": 1,
                "filename": "framework/cayenne-jdk1.5-unpublished/src/test/java/org/apache/cayenne/CayenneTest.java",
                "patch": "@@ -80,7 +80,7 @@ public void testScalarObjectForQuery() throws Exception {\n         String sql = \"SELECT count(1) AS X FROM ARTIST\";\n \n         DataMap map = getDomain().getMap(\"testmap\");\n-        SQLTemplate query = new SQLTemplate(map, sql);\n+        SQLTemplate query = new SQLTemplate(map, sql, false);\n         query.setTemplate(\n                 FrontBaseAdapter.class.getName(),\n                 \"SELECT COUNT(ARTIST_ID) AS X FROM ARTIST\");",
                "raw_url": "https://github.com/apache/cayenne/raw/65c1a738737ea5b3f753a7c0d02ecb808ba4e39a/framework/cayenne-jdk1.5-unpublished/src/test/java/org/apache/cayenne/CayenneTest.java",
                "sha": "30dc5d417728c89f0756477dd34a1ae9bc70fa17",
                "status": "modified"
            },
            {
                "additions": 3,
                "blob_url": "https://github.com/apache/cayenne/blob/65c1a738737ea5b3f753a7c0d02ecb808ba4e39a/framework/cayenne-jdk1.5-unpublished/src/test/java/org/apache/cayenne/access/DataContextSQLTemplateTest.java",
                "changes": 6,
                "contents_url": "https://api.github.com/repos/apache/cayenne/contents/framework/cayenne-jdk1.5-unpublished/src/test/java/org/apache/cayenne/access/DataContextSQLTemplateTest.java?ref=65c1a738737ea5b3f753a7c0d02ecb808ba4e39a",
                "deletions": 3,
                "filename": "framework/cayenne-jdk1.5-unpublished/src/test/java/org/apache/cayenne/access/DataContextSQLTemplateTest.java",
                "patch": "@@ -62,7 +62,7 @@ public void testSQLResultSetMappingMixed() throws Exception {\n                 + \"ORDER BY t0.ARTIST_ID\";\n \n         DataMap map = getDomain().getMap(\"testmap\");\n-        SQLTemplate query = new SQLTemplate(map, sql);\n+        SQLTemplate query = new SQLTemplate(map, sql, false);\n         query.setColumnNamesCapitalization(CapsStrategy.UPPER);\n \n         EntityResult artistResult = new EntityResult(Artist.class);\n@@ -102,7 +102,7 @@ public void testSQLResultSetMappingScalar() throws Exception {\n         String sql = \"SELECT count(1) AS X FROM ARTIST\";\n \n         DataMap map = getDomain().getMap(\"testmap\");\n-        SQLTemplate query = new SQLTemplate(map, sql);\n+        SQLTemplate query = new SQLTemplate(map, sql, false);\n         query.setTemplate(\n                 FrontBaseAdapter.class.getName(),\n                 \"SELECT COUNT(ARTIST_ID) X FROM ARTIST\");\n@@ -129,7 +129,7 @@ public void testSQLResultSetMappingScalarArray() throws Exception {\n         String sql = \"SELECT count(1) AS X, 77 AS Y FROM ARTIST\";\n \n         DataMap map = getDomain().getMap(\"testmap\");\n-        SQLTemplate query = new SQLTemplate(map, sql);\n+        SQLTemplate query = new SQLTemplate(map, sql, false);\n         query.setTemplate(\n                 FrontBaseAdapter.class.getName(),\n                 \"SELECT COUNT(ARTIST_ID) X, 77 Y FROM ARTIST GROUP BY Y\");",
                "raw_url": "https://github.com/apache/cayenne/raw/65c1a738737ea5b3f753a7c0d02ecb808ba4e39a/framework/cayenne-jdk1.5-unpublished/src/test/java/org/apache/cayenne/access/DataContextSQLTemplateTest.java",
                "sha": "d1effc36a65af2d19bf3ee05d3c816b56a6f38d5",
                "status": "modified"
            },
            {
                "additions": 23,
                "blob_url": "https://github.com/apache/cayenne/blob/65c1a738737ea5b3f753a7c0d02ecb808ba4e39a/framework/cayenne-jdk1.5-unpublished/src/test/java/org/apache/cayenne/query/SQLTemplateTest.java",
                "changes": 26,
                "contents_url": "https://api.github.com/repos/apache/cayenne/contents/framework/cayenne-jdk1.5-unpublished/src/test/java/org/apache/cayenne/query/SQLTemplateTest.java?ref=65c1a738737ea5b3f753a7c0d02ecb808ba4e39a",
                "deletions": 3,
                "filename": "framework/cayenne-jdk1.5-unpublished/src/test/java/org/apache/cayenne/query/SQLTemplateTest.java",
                "patch": "@@ -25,6 +25,7 @@\n import java.util.List;\n import java.util.Map;\n \n+import org.apache.cayenne.CayenneRuntimeException;\n import org.apache.cayenne.DataRow;\n import org.apache.cayenne.access.DataContext;\n import org.apache.cayenne.map.DataMap;\n@@ -49,22 +50,41 @@ protected void setUp() throws Exception {\n \n     public void testSQLTemplateForDataMap() {\n         DataMap testDataMap = context.getEntityResolver().getDataMap(\"testmap\");\n-        SQLTemplate q1 = new SQLTemplate(testDataMap, \"SELECT * FROM ARTIST\");\n+        SQLTemplate q1 = new SQLTemplate(testDataMap, \"SELECT * FROM ARTIST\", true);\n         List<DataRow> result = context.performQuery(q1);\n         assertEquals(0, result.size());\n     }\n \n     public void testSQLTemplateForDataMapWithInsert() {\n         DataMap testDataMap = context.getEntityResolver().getDataMap(\"testmap\");\n         String sql = \"INSERT INTO ARTIST VALUES (15, 'Surikov', null)\";\n-        SQLTemplate q1 = new SQLTemplate(testDataMap, sql);\n+        SQLTemplate q1 = new SQLTemplate(testDataMap, sql, true);\n         context.performNonSelectingQuery(q1);\n \n-        SQLTemplate q2 = new SQLTemplate(testDataMap, \"SELECT * FROM ARTIST\");\n+        SQLTemplate q2 = new SQLTemplate(testDataMap, \"SELECT * FROM ARTIST\", true);\n         List<DataRow> result = context.performQuery(q2);\n         assertEquals(1, result.size());\n     }\n \n+    public void testSQLTemplateForDataMapWithInsertException() {\n+        DataMap testDataMap = context.getEntityResolver().getDataMap(\"testmap\");\n+        String sql = \"INSERT INTO ARTIST VALUES (15, 'Surikov', null)\";\n+        SQLTemplate q1 = new SQLTemplate(testDataMap, sql, true);\n+        context.performNonSelectingQuery(q1);\n+\n+        SQLTemplate q2 = new SQLTemplate(testDataMap, \"SELECT * FROM ARTIST\", false);\n+        boolean gotRuntimeException = false;\n+        try {\n+            context.performQuery(q2);\n+        }\n+        catch (CayenneRuntimeException e) {\n+            gotRuntimeException = true;\n+        }\n+        assertTrue(\n+                \"If fetchingDataRows is false and ObjectEntity not set, shoulb be thrown exception\",\n+                gotRuntimeException);\n+    }\n+\n     public void testColumnNameCapitalization() {\n         SQLTemplate q1 = new SQLTemplate(\"E1\", \"SELECT\");\n         assertSame(CapsStrategy.DEFAULT, q1.getColumnNamesCapitalization());",
                "raw_url": "https://github.com/apache/cayenne/raw/65c1a738737ea5b3f753a7c0d02ecb808ba4e39a/framework/cayenne-jdk1.5-unpublished/src/test/java/org/apache/cayenne/query/SQLTemplateTest.java",
                "sha": "dad1e9d1c6f05211fa3ff2dba2d8f8078121d624",
                "status": "modified"
            }
        ],
        "message": "CAY-1328 SQLTemplate for DataMap is not working\n\nChanged constructor to have dataRowFatching option.\nAdd handling of case when dataRowFatching is false and ObjectEntity not set as CayenneRuntimeException instead of NullPointerException. Fix some tests\n\ngit-svn-id: https://svn.apache.org/repos/asf/cayenne/main/trunk@940121 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/cayenne/commit/ef79fc9ed78fc796ee51dc8e5b747d1c190e3e55",
        "patched_files": [
            "ObjectResolver.java",
            "FlattenedArcKey.java",
            "SQLTemplate.java",
            "Cayenne.java"
        ],
        "repo": "cayenne",
        "unit_tests": [
            "DataContextSQLTemplateTest.java",
            "FlattenedArcKeyTest.java",
            "CayenneTest.java",
            "SQLTemplateTest.java"
        ]
    },
    "cayenne_65ebda9": {
        "bug_id": "cayenne_65ebda9",
        "commit": "https://github.com/apache/cayenne/commit/65ebda996b5dff7b9887a45fc1d5c5759192f8e3",
        "file": [
            {
                "additions": 7,
                "blob_url": "https://github.com/apache/cayenne/blob/65ebda996b5dff7b9887a45fc1d5c5759192f8e3/cayenne-server/src/main/java/org/apache/cayenne/reflect/LifecycleCallbackEventHandler.java",
                "changes": 16,
                "contents_url": "https://api.github.com/repos/apache/cayenne/contents/cayenne-server/src/main/java/org/apache/cayenne/reflect/LifecycleCallbackEventHandler.java?ref=65ebda996b5dff7b9887a45fc1d5c5759192f8e3",
                "deletions": 9,
                "filename": "cayenne-server/src/main/java/org/apache/cayenne/reflect/LifecycleCallbackEventHandler.java",
                "patch": "@@ -20,7 +20,6 @@\n \n import org.apache.cayenne.Persistent;\n import org.apache.cayenne.map.EntityResolver;\n-import org.apache.cayenne.map.ObjEntity;\n \n import java.lang.reflect.Method;\n import java.util.ArrayList;\n@@ -111,21 +110,20 @@ void addListener(Class<?> entityClass, Object listener, Method method) {\n      * Registers a callback object to be invoked when a lifecycle event occurs.\n      */\n     private void addCallback(Class<?> entityClass, AbstractCallback callback) {\n-        Collection<AbstractCallback> entityListeners = listeners.get(entityClass\n-                .getName());\n-\n-        if (entityListeners == null) {\n-            entityListeners = new ArrayList<>(3);\n-            listeners.put(entityClass.getName(), entityListeners);\n-        }\n-\n+        Collection<AbstractCallback> entityListeners = listeners\n+                .computeIfAbsent(entityClass.getName(), k -> new ArrayList<>(3));\n         entityListeners.add(callback);\n     }\n \n     /**\n      * Invokes callbacks for a given entity object.\n      */\n     void performCallbacks(Persistent object) {\n+        if(object == null) {\n+            // this can happen if object resolved to null from some query with outer join\n+            // (e.g. in EJBQL or SQLTemplate)\n+            return;\n+        }\n \n         // default listeners are invoked first\n         if (!defaultListeners.isEmpty()) {",
                "raw_url": "https://github.com/apache/cayenne/raw/65ebda996b5dff7b9887a45fc1d5c5759192f8e3/cayenne-server/src/main/java/org/apache/cayenne/reflect/LifecycleCallbackEventHandler.java",
                "sha": "fd044a63408e74adb8a08578ceeaf5ecd6f50cdc",
                "status": "modified"
            },
            {
                "additions": 29,
                "blob_url": "https://github.com/apache/cayenne/blob/65ebda996b5dff7b9887a45fc1d5c5759192f8e3/cayenne-server/src/test/java/org/apache/cayenne/query/EJBQLQueryIT.java",
                "changes": 29,
                "contents_url": "https://api.github.com/repos/apache/cayenne/contents/cayenne-server/src/test/java/org/apache/cayenne/query/EJBQLQueryIT.java?ref=65ebda996b5dff7b9887a45fc1d5c5759192f8e3",
                "deletions": 0,
                "filename": "cayenne-server/src/test/java/org/apache/cayenne/query/EJBQLQueryIT.java",
                "patch": "@@ -28,6 +28,8 @@\n import org.apache.cayenne.exp.Expression;\n import org.apache.cayenne.map.EJBQLQueryDescriptor;\n import org.apache.cayenne.map.EntityResolver;\n+import org.apache.cayenne.map.LifecycleEvent;\n+import org.apache.cayenne.reflect.LifecycleCallbackRegistry;\n import org.apache.cayenne.test.jdbc.DBHelper;\n import org.apache.cayenne.test.jdbc.TableHelper;\n import org.apache.cayenne.testdo.testmap.Artist;\n@@ -645,4 +647,31 @@ public void testNullObjects() throws Exception {\n         }\n     }\n \n+    @Test\n+    public void testNullObjectsCallback() throws Exception {\n+        tArtist.insert(1, \"a1\");\n+        tArtist.insert(2, \"a2\");\n+        tArtist.insert(3, \"a3\");\n+\n+        tPainting.insert(1, 2, \"title1\");\n+        tPainting.insert(2, 1, \"title2\");\n+        tPainting.insert(3, 1, \"title3\");\n+\n+        // set callback to be called\n+        LifecycleCallbackRegistry registry = runtime\n+                .getDataDomain()\n+                .getEntityResolver()\n+                .getCallbackRegistry();\n+        registry.addCallback(LifecycleEvent.POST_LOAD, Painting.class, \"postAddCallback\");\n+\n+        // select Paintings, where one of it will be null\n+        EJBQLQuery queryFullProduct = new EJBQLQuery(\"select a.paintingArray+ from Artist a order by a.artistName\");\n+        List<Painting> result1 = context.performQuery(queryFullProduct);\n+        assertEquals(4, result1.size());\n+        assertNull(result1.get(3));\n+        for(int i=0; i<3; i++) {\n+            assertNotNull(result1.get(i));\n+            assertTrue(result1.get(i).isPostAdded());\n+        }\n+    }\n }",
                "raw_url": "https://github.com/apache/cayenne/raw/65ebda996b5dff7b9887a45fc1d5c5759192f8e3/cayenne-server/src/test/java/org/apache/cayenne/query/EJBQLQueryIT.java",
                "sha": "a760f3c91468540c20f9d78ea72556a3b54b1b45",
                "status": "modified"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/cayenne/blob/65ebda996b5dff7b9887a45fc1d5c5759192f8e3/docs/doc/src/main/resources/RELEASE-NOTES.txt",
                "changes": 1,
                "contents_url": "https://api.github.com/repos/apache/cayenne/contents/docs/doc/src/main/resources/RELEASE-NOTES.txt?ref=65ebda996b5dff7b9887a45fc1d5c5759192f8e3",
                "deletions": 0,
                "filename": "docs/doc/src/main/resources/RELEASE-NOTES.txt",
                "patch": "@@ -38,6 +38,7 @@ CAY-2353 Broken paginated column select with only one entity in the result\n CAY-2354 DbGenerator.runGenerator must commit its connection\n CAY-2356 EJBQL: Incorrect COUNT() on outer joined table\n CAY-2357 Generic select queries silently convert result to nulls if no PK column found\n+CAY-2358 NPE when callbacks invoked on null objects\n \n ----------------------------------\n Release: 4.0.B1",
                "raw_url": "https://github.com/apache/cayenne/raw/65ebda996b5dff7b9887a45fc1d5c5759192f8e3/docs/doc/src/main/resources/RELEASE-NOTES.txt",
                "sha": "d80050a6238b528a68414242fa345e9cd20142fb",
                "status": "modified"
            }
        ],
        "message": "CAY-2358 NPE when callbacks invoked on null objects",
        "parent": "https://github.com/apache/cayenne/commit/8452d41def3796502d297456043d97822665e3b3",
        "patched_files": [
            "LifecycleCallbackEventHandler.java"
        ],
        "repo": "cayenne",
        "unit_tests": [
            "LifecycleCallbackEventHandlerTest.java"
        ]
    },
    "cayenne_6d832a8": {
        "bug_id": "cayenne_6d832a8",
        "commit": "https://github.com/apache/cayenne/commit/6d832a862370f2064b11cb212c2563c05527b239",
        "file": [
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/cayenne/blob/6d832a862370f2064b11cb212c2563c05527b239/docs/doc/src/main/resources/RELEASE-NOTES.txt",
                "changes": 1,
                "contents_url": "https://api.github.com/repos/apache/cayenne/contents/docs/doc/src/main/resources/RELEASE-NOTES.txt?ref=6d832a862370f2064b11cb212c2563c05527b239",
                "deletions": 0,
                "filename": "docs/doc/src/main/resources/RELEASE-NOTES.txt",
                "patch": "@@ -120,6 +120,7 @@ CAY-1500 MySQL JDBC Batching\n Bug Fixes Since 3.0.1:\n \n CAY-1403 Method \"readNestedProperty\" Should Resolve Through Iterative Invocations onto DataObject and Not Complete Within Cayenne.readNestedProperty\n+CAY-1444 NPE when persisting a newly instatiated object\n CAY-1456 Investigate auto-increment columns on DB2 and switch the adapter policy to support them\n CAY-1484 Flattened attribute queries are incorrectly generated\n CAY-1485 Memory information for about dialog",
                "raw_url": "https://github.com/apache/cayenne/raw/6d832a862370f2064b11cb212c2563c05527b239/docs/doc/src/main/resources/RELEASE-NOTES.txt",
                "sha": "e97e67ee77b6f71a41a17905d937e13597928d5a",
                "status": "modified"
            },
            {
                "additions": 7,
                "blob_url": "https://github.com/apache/cayenne/blob/6d832a862370f2064b11cb212c2563c05527b239/framework/cayenne-jdk1.5-unpublished/src/main/java/org/apache/cayenne/access/DataDomainInsertBucket.java",
                "changes": 7,
                "contents_url": "https://api.github.com/repos/apache/cayenne/contents/framework/cayenne-jdk1.5-unpublished/src/main/java/org/apache/cayenne/access/DataDomainInsertBucket.java?ref=6d832a862370f2064b11cb212c2563c05527b239",
                "deletions": 0,
                "filename": "framework/cayenne-jdk1.5-unpublished/src/main/java/org/apache/cayenne/access/DataDomainInsertBucket.java",
                "patch": "@@ -20,6 +20,7 @@\n package org.apache.cayenne.access;\n \n import java.util.Collection;\n+import java.util.HashMap;\n import java.util.Iterator;\n import java.util.List;\n import java.util.Map;\n@@ -79,6 +80,12 @@ void appendQueriesInternal(Collection<Query> queries) {\n                     Map<Object, Object> snapshot = diffBuilder.buildDBDiff(parent\n                             .objectDiff(o.getObjectId()));\n \n+                    // we need to insert even if there is no changes to default values\n+                    // so creating an empty changes map\n+                    if (snapshot == null) {\n+                        snapshot = new HashMap<Object, Object>();\n+                    }\n+\n                     batch.add(snapshot, o.getObjectId());\n                 }\n             }",
                "raw_url": "https://github.com/apache/cayenne/raw/6d832a862370f2064b11cb212c2563c05527b239/framework/cayenne-jdk1.5-unpublished/src/main/java/org/apache/cayenne/access/DataDomainInsertBucket.java",
                "sha": "0d1e41c8959601bf5800b2209387f4eb60731424",
                "status": "modified"
            },
            {
                "additions": 14,
                "blob_url": "https://github.com/apache/cayenne/blob/6d832a862370f2064b11cb212c2563c05527b239/framework/cayenne-jdk1.5-unpublished/src/test/java/org/apache/cayenne/access/DataContextCommitTest.java",
                "changes": 14,
                "contents_url": "https://api.github.com/repos/apache/cayenne/contents/framework/cayenne-jdk1.5-unpublished/src/test/java/org/apache/cayenne/access/DataContextCommitTest.java?ref=6d832a862370f2064b11cb212c2563c05527b239",
                "deletions": 0,
                "filename": "framework/cayenne-jdk1.5-unpublished/src/test/java/org/apache/cayenne/access/DataContextCommitTest.java",
                "patch": "@@ -22,6 +22,7 @@\n import org.apache.cayenne.graph.GraphDiff;\n import org.apache.cayenne.graph.MockGraphChangeHandler;\n import org.apache.cayenne.testdo.testmap.Artist;\n+import org.apache.cayenne.testdo.testmap.NullTestEntity;\n import org.apache.cayenne.testdo.testmap.Painting;\n import org.apache.cayenne.unit.CayenneCase;\n \n@@ -82,5 +83,18 @@ public void nodeIdChanged(Object nodeId, Object newId) {\n         diff2.apply(diffChecker2);\n         assertEquals(1, diffChecker2.getCallbackCount());\n         assertSame(p.getObjectId(), newIds2[0]);\n+        \n+        //commit new object with uninitialized attributes\n+        \n+        context = createDataContext();\n+        \n+        context.newObject(NullTestEntity.class);\n+        \n+        assertTrue(context.hasChanges());\n+        \n+        GraphDiff diff3 = context.flushToParent(true);\n+        assertNotNull(diff3);\n+        assertFalse(context.hasChanges());\n+        \n     }\n }",
                "raw_url": "https://github.com/apache/cayenne/raw/6d832a862370f2064b11cb212c2563c05527b239/framework/cayenne-jdk1.5-unpublished/src/test/java/org/apache/cayenne/access/DataContextCommitTest.java",
                "sha": "208055002971e077a12ebe7ab17a7cd3ac77ec0a",
                "status": "modified"
            },
            {
                "additions": 15,
                "blob_url": "https://github.com/apache/cayenne/blob/6d832a862370f2064b11cb212c2563c05527b239/framework/cayenne-jdk1.5-unpublished/src/test/java/org/apache/cayenne/access/DataContextTest.java",
                "changes": 15,
                "contents_url": "https://api.github.com/repos/apache/cayenne/contents/framework/cayenne-jdk1.5-unpublished/src/test/java/org/apache/cayenne/access/DataContextTest.java?ref=6d832a862370f2064b11cb212c2563c05527b239",
                "deletions": 0,
                "filename": "framework/cayenne-jdk1.5-unpublished/src/test/java/org/apache/cayenne/access/DataContextTest.java",
                "patch": "@@ -46,6 +46,7 @@\n import org.apache.cayenne.di.Inject;\n import org.apache.cayenne.exp.Expression;\n import org.apache.cayenne.exp.ExpressionFactory;\n+import org.apache.cayenne.graph.GraphDiff;\n import org.apache.cayenne.map.EntityResolver;\n import org.apache.cayenne.query.EJBQLQuery;\n import org.apache.cayenne.query.ObjectIdQuery;\n@@ -60,6 +61,7 @@\n import org.apache.cayenne.test.jdbc.TableHelper;\n import org.apache.cayenne.testdo.testmap.Artist;\n import org.apache.cayenne.testdo.testmap.Exhibit;\n+import org.apache.cayenne.testdo.testmap.NullTestEntity;\n import org.apache.cayenne.testdo.testmap.Painting;\n import org.apache.cayenne.testdo.testmap.ROArtist;\n import org.apache.cayenne.unit.AccessStackAdapter;\n@@ -723,6 +725,19 @@ public void testBeforeHollowDeleteShouldChangeStateToCommited() throws Exception\n         assertEquals(PersistenceState.DELETED, hollow.getPersistenceState());\n     }\n \n+    public void testCommitUnchangedInsert() throws Exception {\n+        \n+        // see CAY-1444 - reproducible on DB's that support auto incremented PK\n+        \n+        NullTestEntity newObject = context.newObject(NullTestEntity.class);\n+\n+        assertTrue(context.hasChanges());\n+        context.commitChanges();\n+        assertFalse(context.hasChanges());\n+\n+        assertEquals(PersistenceState.COMMITTED, newObject.getPersistenceState());\n+    }\n+\n     private void changeMaxConnections(int delta) {\n         PoolManager manager = (PoolManager) dataSource;\n         manager.setMaxConnections(manager.getMaxConnections() + delta);",
                "raw_url": "https://github.com/apache/cayenne/raw/6d832a862370f2064b11cb212c2563c05527b239/framework/cayenne-jdk1.5-unpublished/src/test/java/org/apache/cayenne/access/DataContextTest.java",
                "sha": "cbef3e3f7f25af1afeaa92a429beda8247b2dafa",
                "status": "modified"
            },
            {
                "additions": 27,
                "blob_url": "https://github.com/apache/cayenne/blob/6d832a862370f2064b11cb212c2563c05527b239/framework/cayenne-jdk1.5-unpublished/src/test/java/org/apache/cayenne/testdo/testmap/NullTestEntity.java",
                "changes": 27,
                "contents_url": "https://api.github.com/repos/apache/cayenne/contents/framework/cayenne-jdk1.5-unpublished/src/test/java/org/apache/cayenne/testdo/testmap/NullTestEntity.java?ref=6d832a862370f2064b11cb212c2563c05527b239",
                "deletions": 0,
                "filename": "framework/cayenne-jdk1.5-unpublished/src/test/java/org/apache/cayenne/testdo/testmap/NullTestEntity.java",
                "patch": "@@ -0,0 +1,27 @@\n+/*****************************************************************\n+ *   Licensed to the Apache Software Foundation (ASF) under one\n+ *  or more contributor license agreements.  See the NOTICE file\n+ *  distributed with this work for additional information\n+ *  regarding copyright ownership.  The ASF licenses this file\n+ *  to you under the Apache License, Version 2.0 (the\n+ *  \"License\"); you may not use this file except in compliance\n+ *  with the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing,\n+ *  software distributed under the License is distributed on an\n+ *  \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ *  KIND, either express or implied.  See the License for the\n+ *  specific language governing permissions and limitations\n+ *  under the License.\n+ ****************************************************************/\n+package org.apache.cayenne.testdo.testmap;\n+\n+import org.apache.cayenne.testdo.testmap.auto._NullTestEntity;\n+\n+public class NullTestEntity extends _NullTestEntity {\n+\n+}\n+\n+",
                "raw_url": "https://github.com/apache/cayenne/raw/6d832a862370f2064b11cb212c2563c05527b239/framework/cayenne-jdk1.5-unpublished/src/test/java/org/apache/cayenne/testdo/testmap/NullTestEntity.java",
                "sha": "1d3f78169b2986593b585339bb2c142aa9cbd136",
                "status": "added"
            },
            {
                "additions": 24,
                "blob_url": "https://github.com/apache/cayenne/blob/6d832a862370f2064b11cb212c2563c05527b239/framework/cayenne-jdk1.5-unpublished/src/test/java/org/apache/cayenne/testdo/testmap/auto/_NullTestEntity.java",
                "changes": 24,
                "contents_url": "https://api.github.com/repos/apache/cayenne/contents/framework/cayenne-jdk1.5-unpublished/src/test/java/org/apache/cayenne/testdo/testmap/auto/_NullTestEntity.java?ref=6d832a862370f2064b11cb212c2563c05527b239",
                "deletions": 0,
                "filename": "framework/cayenne-jdk1.5-unpublished/src/test/java/org/apache/cayenne/testdo/testmap/auto/_NullTestEntity.java",
                "patch": "@@ -0,0 +1,24 @@\n+package org.apache.cayenne.testdo.testmap.auto;\n+\n+import org.apache.cayenne.CayenneDataObject;\n+\n+/**\n+ * Class _NullTestEntity was generated by Cayenne.\n+ * It is probably a good idea to avoid changing this class manually,\n+ * since it may be overwritten next time code is regenerated.\n+ * If you need to make any customizations, please use subclass.\n+ */\n+public abstract class _NullTestEntity extends CayenneDataObject {\n+\n+    public static final String NAME_PROPERTY = \"name\";\n+\n+    public static final String ID_PK_COLUMN = \"ID\";\n+\n+    public void setName(String name) {\n+        writeProperty(\"name\", name);\n+    }\n+    public String getName() {\n+        return (String)readProperty(\"name\");\n+    }\n+\n+}",
                "raw_url": "https://github.com/apache/cayenne/raw/6d832a862370f2064b11cb212c2563c05527b239/framework/cayenne-jdk1.5-unpublished/src/test/java/org/apache/cayenne/testdo/testmap/auto/_NullTestEntity.java",
                "sha": "74fa0c76c7b3a7b78cc8981dce2c45b320a1327e",
                "status": "added"
            },
            {
                "additions": 7,
                "blob_url": "https://github.com/apache/cayenne/blob/6d832a862370f2064b11cb212c2563c05527b239/framework/cayenne-jdk1.5-unpublished/src/test/resources/testmap.map.xml",
                "changes": 7,
                "contents_url": "https://api.github.com/repos/apache/cayenne/contents/framework/cayenne-jdk1.5-unpublished/src/test/resources/testmap.map.xml?ref=6d832a862370f2064b11cb212c2563c05527b239",
                "deletions": 0,
                "filename": "framework/cayenne-jdk1.5-unpublished/src/test/resources/testmap.map.xml",
                "patch": "@@ -208,6 +208,10 @@\n \t<db-entity name=\"NO_PK_TEST\">\n \t\t<db-attribute name=\"ATTRIBUTE1\" type=\"INTEGER\"/>\n \t</db-entity>\n+\t<db-entity name=\"NULL_TEST\">\n+\t\t<db-attribute name=\"ID\" type=\"BIGINT\" isPrimaryKey=\"true\" isGenerated=\"true\" isMandatory=\"true\"/>\n+\t\t<db-attribute name=\"NAME\" type=\"VARCHAR\" length=\"100\"/>\n+\t</db-entity>\n \t<db-entity name=\"PAINTING\">\n \t\t<db-attribute name=\"ARTIST_ID\" type=\"BIGINT\"/>\n \t\t<db-attribute name=\"ESTIMATED_PRICE\" type=\"DECIMAL\" length=\"10\" scale=\"2\"/>\n@@ -448,6 +452,9 @@\n \t<obj-entity name=\"NoPkTestEntity\" className=\"org.apache.cayenne.testdo.testmap.NoPkTestEntity\" dbEntityName=\"NO_PK_TEST\">\n \t\t<obj-attribute name=\"attribute1\" type=\"java.lang.Integer\" db-attribute-path=\"ATTRIBUTE1\"/>\n \t</obj-entity>\n+\t<obj-entity name=\"NullTestEntity\" className=\"org.apache.cayenne.testdo.testmap.NullTestEntity\" dbEntityName=\"NULL_TEST\">\n+\t\t<obj-attribute name=\"name\" type=\"java.lang.String\" db-attribute-path=\"NAME\"/>\n+\t</obj-entity>\n \t<obj-entity name=\"Painting\" className=\"org.apache.cayenne.testdo.testmap.Painting\" dbEntityName=\"PAINTING\" superClassName=\"org.apache.cayenne.testdo.testmap.ArtDataObject\">\n \t\t<obj-attribute name=\"estimatedPrice\" type=\"java.math.BigDecimal\" db-attribute-path=\"ESTIMATED_PRICE\"/>\n \t\t<obj-attribute name=\"paintingDescription\" type=\"java.lang.String\" db-attribute-path=\"PAINTING_DESCRIPTION\"/>",
                "raw_url": "https://github.com/apache/cayenne/raw/6d832a862370f2064b11cb212c2563c05527b239/framework/cayenne-jdk1.5-unpublished/src/test/resources/testmap.map.xml",
                "sha": "f4ff5f9f1f4d2e9dd3f20e0b6b82afc7af538c79",
                "status": "modified"
            }
        ],
        "message": "CAY-1444 NPE when persisting a newly instatiated object\n\npatch by Dzmitry Kazimirchyk\nsome small edits + extra unit test by aadamchik\n\ngit-svn-id: https://svn.apache.org/repos/asf/cayenne/main/trunk@1090117 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/cayenne/commit/48525f1759b7685b738d0c074acf99c38a72bed3",
        "patched_files": [
            "NullTestEntity.java",
            "DataDomainInsertBucket.java",
            "_NullTestEntity.java",
            "DataContext.java",
            "RELEASE-NOTES.java"
        ],
        "repo": "cayenne",
        "unit_tests": [
            "testmap.java",
            "DataContextTest.java",
            "DataContextCommitTest.java"
        ]
    },
    "cayenne_77f976a": {
        "bug_id": "cayenne_77f976a",
        "commit": "https://github.com/apache/cayenne/commit/77f976a73a2fe42c332190228a5ec4b13aa3caea",
        "file": [
            {
                "additions": 0,
                "blob_url": "https://github.com/apache/cayenne/blob/77f976a73a2fe42c332190228a5ec4b13aa3caea/framework/cayenne-jdk1.5-unpublished/src/main/java/org/apache/cayenne/project/NamedObjectFactory.java",
                "changes": 1,
                "contents_url": "https://api.github.com/repos/apache/cayenne/contents/framework/cayenne-jdk1.5-unpublished/src/main/java/org/apache/cayenne/project/NamedObjectFactory.java?ref=77f976a73a2fe42c332190228a5ec4b13aa3caea",
                "deletions": 1,
                "filename": "framework/cayenne-jdk1.5-unpublished/src/main/java/org/apache/cayenne/project/NamedObjectFactory.java",
                "patch": "@@ -297,7 +297,6 @@ public void setNameBase(String nameBase) {\n \n         @Override\n         protected String nameBase() {\n-            System.out.println(\"nameBase\");\n             if (getNameBase() == null) {\n                 setNameBase(\"UntitledEmbeddable\");\n             }",
                "raw_url": "https://github.com/apache/cayenne/raw/77f976a73a2fe42c332190228a5ec4b13aa3caea/framework/cayenne-jdk1.5-unpublished/src/main/java/org/apache/cayenne/project/NamedObjectFactory.java",
                "sha": "4f364cd7437bbb5727532723591541c4e2021760",
                "status": "modified"
            },
            {
                "additions": 4,
                "blob_url": "https://github.com/apache/cayenne/blob/77f976a73a2fe42c332190228a5ec4b13aa3caea/framework/cayenne-modeler/src/main/java/org/apache/cayenne/modeler/action/CreateNodeAction.java",
                "changes": 14,
                "contents_url": "https://api.github.com/repos/apache/cayenne/contents/framework/cayenne-modeler/src/main/java/org/apache/cayenne/modeler/action/CreateNodeAction.java?ref=77f976a73a2fe42c332190228a5ec4b13aa3caea",
                "deletions": 10,
                "filename": "framework/cayenne-modeler/src/main/java/org/apache/cayenne/modeler/action/CreateNodeAction.java",
                "patch": "@@ -118,15 +118,9 @@ DataNodeDescriptor buildDataNode(DataChannelDescriptor domain) {\n                 .getName()\n                 + \"Node\");\n \n-        \n-        // ensure that DataNode exposes DataSource directly, so that UI widgets could work\n-        // with it.\n-        return new DataNodeDescriptor(name) \n-        {\n-\n-            public DataSourceInfo getDataSourceDescriptor() {\n-                return dataSourceDescriptor;\n-            }\n-        };\n+        DataNodeDescriptor node = new DataNodeDescriptor(name);\n+        node.setDataChannelDescriptor(domain);\n+       \n+        return node;\n     }\n }",
                "raw_url": "https://github.com/apache/cayenne/raw/77f976a73a2fe42c332190228a5ec4b13aa3caea/framework/cayenne-modeler/src/main/java/org/apache/cayenne/modeler/action/CreateNodeAction.java",
                "sha": "884f63b523b6e6a7ada285fac3213551b2a5c715",
                "status": "modified"
            }
        ],
        "message": "CAY-1339 Remove org.apache.cayenne.project package from runtime\n\n* fix: I created a new project with 2 empty DataMaps and one empty DataNode. I get this on save:\n\n\tjava.lang.NullPointerException\n       \t\tat org.apache.cayenne.project2.validation.DataNodeValidator.validateName(DataNodeValidator.java:69)\n\t        at org.apache.cayenne.project2.validation.DataNodeValidator.validate(DataNodeValidator.java:30)\n\ngit-svn-id: https://svn.apache.org/repos/asf/cayenne/main/trunk@920789 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/cayenne/commit/673866db6b5d23c6a47403a6d5568b240ab2e72b",
        "patched_files": [
            "CreateNodeAction.java"
        ],
        "repo": "cayenne",
        "unit_tests": [
            "CreateNodeActionTest.java"
        ]
    },
    "cayenne_7e97172": {
        "bug_id": "cayenne_7e97172",
        "commit": "https://github.com/apache/cayenne/commit/7e971729b7c4cb720a232d06ec0779e6abee4c4b",
        "file": [
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/cayenne/blob/7e971729b7c4cb720a232d06ec0779e6abee4c4b/cayenne-dbsync/src/main/java/org/apache/cayenne/dbsync/merge/DbMerger.java",
                "changes": 3,
                "contents_url": "https://api.github.com/repos/apache/cayenne/contents/cayenne-dbsync/src/main/java/org/apache/cayenne/dbsync/merge/DbMerger.java?ref=7e971729b7c4cb720a232d06ec0779e6abee4c4b",
                "deletions": 1,
                "filename": "cayenne-dbsync/src/main/java/org/apache/cayenne/dbsync/merge/DbMerger.java",
                "patch": "@@ -131,7 +131,8 @@ public int compare(MergerToken o1, MergerToken o2) {\n     private Collection<DbEntity> filter(DataMap existing, FiltersConfig filtersConfig) {\n         Collection<DbEntity> existingFiltered = new LinkedList<>();\n         for (DbEntity entity : existing.getDbEntities()) {\n-            if (filtersConfig.tableFilter(entity.getCatalog(), entity.getSchema()).isIncludeTable(entity.getName()) != null) {\n+            TableFilter tableFilter = filtersConfig.tableFilter(entity.getCatalog(), entity.getSchema());\n+            if (tableFilter != null && tableFilter.isIncludeTable(entity.getName()) != null) {\n                 existingFiltered.add(entity);\n             }\n         }",
                "raw_url": "https://github.com/apache/cayenne/raw/7e971729b7c4cb720a232d06ec0779e6abee4c4b/cayenne-dbsync/src/main/java/org/apache/cayenne/dbsync/merge/DbMerger.java",
                "sha": "319ef26a255fc79f4f725018ad24bbe420f4c71d",
                "status": "modified"
            },
            {
                "additions": 4,
                "blob_url": "https://github.com/apache/cayenne/blob/7e971729b7c4cb720a232d06ec0779e6abee4c4b/cayenne-dbsync/src/main/java/org/apache/cayenne/dbsync/reverse/filters/FiltersConfig.java",
                "changes": 6,
                "contents_url": "https://api.github.com/repos/apache/cayenne/contents/cayenne-dbsync/src/main/java/org/apache/cayenne/dbsync/reverse/filters/FiltersConfig.java?ref=7e971729b7c4cb720a232d06ec0779e6abee4c4b",
                "deletions": 2,
                "filename": "cayenne-dbsync/src/main/java/org/apache/cayenne/dbsync/reverse/filters/FiltersConfig.java",
                "patch": "@@ -41,11 +41,13 @@ public FiltersConfig(CatalogFilter ... catalogs) {\n     }\n \n     public PatternFilter proceduresFilter(String catalog, String schema) {\n-        return getSchemaFilter(catalog, schema).procedures;\n+        SchemaFilter schemaFilter = getSchemaFilter(catalog, schema);\n+        return schemaFilter == null ? null : schemaFilter.procedures;\n     }\n \n     public TableFilter tableFilter(String catalog, String schema) {\n-        return getSchemaFilter(catalog, schema).tables;\n+        SchemaFilter schemaFilter = getSchemaFilter(catalog, schema);\n+        return schemaFilter == null ? null : schemaFilter.tables;\n     }\n \n     protected SchemaFilter getSchemaFilter(String catalog, String schema) {",
                "raw_url": "https://github.com/apache/cayenne/raw/7e971729b7c4cb720a232d06ec0779e6abee4c4b/cayenne-dbsync/src/main/java/org/apache/cayenne/dbsync/reverse/filters/FiltersConfig.java",
                "sha": "41e5a14996356d9cbaeb3926a90f84d54325ef96",
                "status": "modified"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/cayenne/blob/7e971729b7c4cb720a232d06ec0779e6abee4c4b/docs/doc/src/main/resources/RELEASE-NOTES.txt",
                "changes": 1,
                "contents_url": "https://api.github.com/repos/apache/cayenne/contents/docs/doc/src/main/resources/RELEASE-NOTES.txt?ref=7e971729b7c4cb720a232d06ec0779e6abee4c4b",
                "deletions": 0,
                "filename": "docs/doc/src/main/resources/RELEASE-NOTES.txt",
                "patch": "@@ -61,6 +61,7 @@ CAY-2122 Vertical Inheritance: Cannot Insert Record For Implementing Class with\n CAY-2125 SchemaUpdateStrategy doesn't work with multiple DataNodes\n CAY-2126 Modeler cannot upgrade project from v7 to v9\n CAY-2128 Modeler stored procedures are not imported\n+CAY-2131 Modeler NullPointerException in reverse engineering when importing different catalogs in one datamap\n \n ----------------------------------\n Release: 4.0.M3",
                "raw_url": "https://github.com/apache/cayenne/raw/7e971729b7c4cb720a232d06ec0779e6abee4c4b/docs/doc/src/main/resources/RELEASE-NOTES.txt",
                "sha": "a21e0f98f62e4e4849d82bd716038e2f2d2b491a",
                "status": "modified"
            }
        ],
        "message": "[CAY-2131] Modeler. NullPointerException in reverse engineering when importing different catalogs in one datamap",
        "parent": "https://github.com/apache/cayenne/commit/469bacb44b3c47f4912d40977c6f3cd83ff85f24",
        "patched_files": [
            "DbMerger.java",
            "FiltersConfig.java"
        ],
        "repo": "cayenne",
        "unit_tests": [
            "FiltersConfigTest.java",
            "DbMergerTest.java"
        ]
    },
    "cayenne_84e4df3": {
        "bug_id": "cayenne_84e4df3",
        "commit": "https://github.com/apache/cayenne/commit/84e4df343db86df6fd7214871b44310fe9c9134b",
        "file": [
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/cayenne/blob/84e4df343db86df6fd7214871b44310fe9c9134b/docs/doc/src/main/resources/RELEASE-NOTES.txt",
                "changes": 1,
                "contents_url": "https://api.github.com/repos/apache/cayenne/contents/docs/doc/src/main/resources/RELEASE-NOTES.txt?ref=84e4df343db86df6fd7214871b44310fe9c9134b",
                "deletions": 0,
                "filename": "docs/doc/src/main/resources/RELEASE-NOTES.txt",
                "patch": "@@ -72,6 +72,7 @@ Bug Fixes Since 3.0.1:\n CAY-1484 Flattened attribute queries are incorrectly generated\n CAY-1485 Memory information for about dialog\n CAY-1488 OutOfMemory when selecting \"Remove Foreign Keys Mapped as Object Attributes\"\n+CAY-1489 NPE using DataContext.objectFromDataRow for a nested context\n CAY-1490 Maven cgen: all and datamap modes can not be activated\n CAY-1496 Problem in derby: comparison operators are not supported on Clob object values.\n ",
                "raw_url": "https://github.com/apache/cayenne/raw/84e4df343db86df6fd7214871b44310fe9c9134b/docs/doc/src/main/resources/RELEASE-NOTES.txt",
                "sha": "3ae70b20e4e8401a5ccc8ecc12af05aca3dd86f3",
                "status": "modified"
            },
            {
                "additions": 15,
                "blob_url": "https://github.com/apache/cayenne/blob/84e4df343db86df6fd7214871b44310fe9c9134b/framework/cayenne-jdk1.5-unpublished/src/main/java/org/apache/cayenne/access/DataContext.java",
                "changes": 15,
                "contents_url": "https://api.github.com/repos/apache/cayenne/contents/framework/cayenne-jdk1.5-unpublished/src/main/java/org/apache/cayenne/access/DataContext.java?ref=84e4df343db86df6fd7214871b44310fe9c9134b",
                "deletions": 0,
                "filename": "framework/cayenne-jdk1.5-unpublished/src/main/java/org/apache/cayenne/access/DataContext.java",
                "patch": "@@ -458,10 +458,25 @@ public boolean visitToOne(ToOneProperty property) {\n     public List objectsFromDataRows(\n             ClassDescriptor descriptor,\n             List<? extends DataRow> dataRows) {\n+        // TODO: If data row cache is not available it means that current data context is\n+        // child. We need to redirect this method call to parent data context as an\n+        // internal query. It is not obvious and has some overhead. Redesign for nested\n+        // contexts should be done.\n+        if (getObjectStore().getDataRowCache() == null) {\n+            return objectsFromDataRowsFromParentContext(descriptor, dataRows);\n+        }\n         return new ObjectResolver(this, descriptor, true)\n                 .synchronizedObjectsFromDataRows(dataRows);\n     }\n \n+    private List objectsFromDataRowsFromParentContext(\n+            ClassDescriptor descriptor,\n+            List<? extends DataRow> dataRows) {\n+        return getChannel().onQuery(\n+                this,\n+                new ObjectsFromDataRowsQuery(descriptor, dataRows)).firstList();\n+    }\n+\n     /**\n      * Creates a DataObject from DataRow.\n      * ",
                "raw_url": "https://github.com/apache/cayenne/raw/84e4df343db86df6fd7214871b44310fe9c9134b/framework/cayenne-jdk1.5-unpublished/src/main/java/org/apache/cayenne/access/DataContext.java",
                "sha": "631c10c33d713642c39bed9e11f8755067c191bc",
                "status": "modified"
            },
            {
                "additions": 19,
                "blob_url": "https://github.com/apache/cayenne/blob/84e4df343db86df6fd7214871b44310fe9c9134b/framework/cayenne-jdk1.5-unpublished/src/main/java/org/apache/cayenne/access/DataContextQueryAction.java",
                "changes": 19,
                "contents_url": "https://api.github.com/repos/apache/cayenne/contents/framework/cayenne-jdk1.5-unpublished/src/main/java/org/apache/cayenne/access/DataContextQueryAction.java?ref=84e4df343db86df6fd7214871b44310fe9c9134b",
                "deletions": 0,
                "filename": "framework/cayenne-jdk1.5-unpublished/src/main/java/org/apache/cayenne/access/DataContextQueryAction.java",
                "patch": "@@ -42,9 +42,28 @@\n  */\n class DataContextQueryAction extends ObjectContextQueryAction {\n \n+    protected DataContext actingDataContext;\n+\n     public DataContextQueryAction(DataContext actingContext, ObjectContext targetContext,\n             Query query) {\n         super(actingContext, targetContext, query);\n+        actingDataContext = actingContext;\n+    }\n+\n+    @Override\n+    protected boolean interceptInternalQuery() {\n+        return interceptObjectFromDataRowsQuery();\n+    }\n+\n+    private boolean interceptObjectFromDataRowsQuery() {\n+        if (query instanceof ObjectsFromDataRowsQuery) {\n+            ObjectsFromDataRowsQuery objectsFromDataRowsQuery = (ObjectsFromDataRowsQuery) query;\n+            response = new ListResponse(actingDataContext.objectsFromDataRows(\n+                    objectsFromDataRowsQuery.getDescriptor(),\n+                    objectsFromDataRowsQuery.getDataRows()));\n+            return DONE;\n+        }\n+        return !DONE;\n     }\n \n     /**",
                "raw_url": "https://github.com/apache/cayenne/raw/84e4df343db86df6fd7214871b44310fe9c9134b/framework/cayenne-jdk1.5-unpublished/src/main/java/org/apache/cayenne/access/DataContextQueryAction.java",
                "sha": "8e5ba22ccc9291fd7600bafecbd65a439d4e6603",
                "status": "modified"
            },
            {
                "additions": 151,
                "blob_url": "https://github.com/apache/cayenne/blob/84e4df343db86df6fd7214871b44310fe9c9134b/framework/cayenne-jdk1.5-unpublished/src/main/java/org/apache/cayenne/access/ObjectsFromDataRowsQuery.java",
                "changes": 151,
                "contents_url": "https://api.github.com/repos/apache/cayenne/contents/framework/cayenne-jdk1.5-unpublished/src/main/java/org/apache/cayenne/access/ObjectsFromDataRowsQuery.java?ref=84e4df343db86df6fd7214871b44310fe9c9134b",
                "deletions": 0,
                "filename": "framework/cayenne-jdk1.5-unpublished/src/main/java/org/apache/cayenne/access/ObjectsFromDataRowsQuery.java",
                "patch": "@@ -0,0 +1,151 @@\n+/*****************************************************************\n+ *   Licensed to the Apache Software Foundation (ASF) under one\n+ *  or more contributor license agreements.  See the NOTICE file\n+ *  distributed with this work for additional information\n+ *  regarding copyright ownership.  The ASF licenses this file\n+ *  to you under the Apache License, Version 2.0 (the\n+ *  \"License\"); you may not use this file except in compliance\n+ *  with the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing,\n+ *  software distributed under the License is distributed on an\n+ *  \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ *  KIND, either express or implied.  See the License for the\n+ *  specific language governing permissions and limitations\n+ *  under the License.\n+ ****************************************************************/\n+package org.apache.cayenne.access;\n+\n+import java.util.List;\n+import java.util.Map;\n+\n+import org.apache.cayenne.DataRow;\n+import org.apache.cayenne.configuration.ConfigurationNodeVisitor;\n+import org.apache.cayenne.map.DataMap;\n+import org.apache.cayenne.map.DbEntity;\n+import org.apache.cayenne.map.EntityResolver;\n+import org.apache.cayenne.map.ObjEntity;\n+import org.apache.cayenne.map.Procedure;\n+import org.apache.cayenne.query.PrefetchTreeNode;\n+import org.apache.cayenne.query.Query;\n+import org.apache.cayenne.query.QueryCacheStrategy;\n+import org.apache.cayenne.query.QueryMetadata;\n+import org.apache.cayenne.query.QueryRouter;\n+import org.apache.cayenne.query.SQLAction;\n+import org.apache.cayenne.query.SQLActionVisitor;\n+import org.apache.cayenne.reflect.ClassDescriptor;\n+\n+class ObjectsFromDataRowsQuery implements Query, QueryMetadata {\n+\n+    private ClassDescriptor descriptor;\n+\n+    private List<? extends DataRow> dataRows;\n+\n+    public ObjectsFromDataRowsQuery(ClassDescriptor descriptor,\n+            List<? extends DataRow> dataRows) {\n+        super();\n+        this.descriptor = descriptor;\n+        this.dataRows = dataRows;\n+    }\n+\n+    public ClassDescriptor getDescriptor() {\n+        return descriptor;\n+    }\n+\n+    public List<? extends DataRow> getDataRows() {\n+        return dataRows;\n+    }\n+\n+    public <T> T acceptVisitor(ConfigurationNodeVisitor<T> visitor) {\n+        return visitor.visitQuery(this);\n+    }\n+\n+    public QueryMetadata getMetaData(EntityResolver resolver) {\n+        return this;\n+    }\n+\n+    public void route(QueryRouter router, EntityResolver resolver, Query substitutedQuery) {\n+    }\n+\n+    public SQLAction createSQLAction(SQLActionVisitor visitor) {\n+        return null;\n+    }\n+\n+    public String getName() {\n+        return null;\n+    }\n+\n+    public DataMap getDataMap() {\n+        return null;\n+    }\n+\n+    public ClassDescriptor getClassDescriptor() {\n+        return null;\n+    }\n+\n+    public ObjEntity getObjEntity() {\n+        return null;\n+    }\n+\n+    public DbEntity getDbEntity() {\n+        return null;\n+    }\n+\n+    public Procedure getProcedure() {\n+        return null;\n+    }\n+\n+    public QueryCacheStrategy getCacheStrategy() {\n+        return null;\n+    }\n+\n+    public String getCacheKey() {\n+        return null;\n+    }\n+\n+    public String[] getCacheGroups() {\n+        return null;\n+    }\n+\n+    public boolean isFetchingDataRows() {\n+        return false;\n+    }\n+\n+    public boolean isRefreshingObjects() {\n+        return false;\n+    }\n+\n+    public int getPageSize() {\n+        return 0;\n+    }\n+\n+    public int getFetchOffset() {\n+        return 0;\n+    }\n+\n+    public int getFetchLimit() {\n+        return 0;\n+    }\n+\n+    public Query getOrginatingQuery() {\n+        return null;\n+    }\n+\n+    public PrefetchTreeNode getPrefetchTree() {\n+        return null;\n+    }\n+\n+    public Map<String, String> getPathSplitAliases() {\n+        return null;\n+    }\n+\n+    public List<Object> getResultSetMapping() {\n+        return null;\n+    }\n+\n+    public int getStatementFetchSize() {\n+        return 0;\n+    }\n+}",
                "raw_url": "https://github.com/apache/cayenne/raw/84e4df343db86df6fd7214871b44310fe9c9134b/framework/cayenne-jdk1.5-unpublished/src/main/java/org/apache/cayenne/access/ObjectsFromDataRowsQuery.java",
                "sha": "a6876c103031d094e8db29108b8448f62f20b921",
                "status": "added"
            },
            {
                "additions": 14,
                "blob_url": "https://github.com/apache/cayenne/blob/84e4df343db86df6fd7214871b44310fe9c9134b/framework/cayenne-jdk1.5-unpublished/src/main/java/org/apache/cayenne/util/ObjectContextQueryAction.java",
                "changes": 27,
                "contents_url": "https://api.github.com/repos/apache/cayenne/contents/framework/cayenne-jdk1.5-unpublished/src/main/java/org/apache/cayenne/util/ObjectContextQueryAction.java?ref=84e4df343db86df6fd7214871b44310fe9c9134b",
                "deletions": 13,
                "filename": "framework/cayenne-jdk1.5-unpublished/src/main/java/org/apache/cayenne/util/ObjectContextQueryAction.java",
                "patch": "@@ -88,13 +88,7 @@ public QueryResponse execute() {\n             if (interceptRelationshipQuery() != DONE) {\n                 if (interceptRefreshQuery() != DONE) {\n                     if (interceptLocalCache() != DONE) {\n-                        // when changing the flow below, make sure to update\n-                        // 'getCacheObjectFactory' method that mimics the interceptors\n-                        // below 'interceptLocalCache'. See comment in an inner class\n-                        // factory in this method...\n-                        if (interceptPaginatedQuery() != DONE) {\n-                            runQuery();\n-                        }\n+                        executePostCache();\n                     }\n                 }\n             }\n@@ -104,6 +98,14 @@ public QueryResponse execute() {\n         return response;\n     }\n \n+    private void executePostCache() {\n+        if (interceptInternalQuery() != DONE) {\n+            if (interceptPaginatedQuery() != DONE) {\n+                runQuery();\n+            }\n+        }\n+    }\n+\n     /**\n      * Transfers fetched objects into the target context if it is different from \"acting\"\n      * context. Note that when this method is invoked, result objects are already\n@@ -150,6 +152,10 @@ protected void interceptObjectConversion() {\n \n     }\n \n+    protected boolean interceptInternalQuery() {\n+        return !DONE;\n+    }\n+\n     protected boolean interceptOIDQuery() {\n         if (query instanceof ObjectIdQuery) {\n             ObjectIdQuery oidQuery = (ObjectIdQuery) query;\n@@ -317,12 +323,7 @@ protected QueryCacheEntryFactory getCacheObjectFactory() {\n         return new QueryCacheEntryFactory() {\n \n             public Object createObject() {\n-                // must follow the same logic as 'execute' below locla cache interceptor\n-                // method... reuse that code somehow???\n-                if (interceptPaginatedQuery() != DONE) {\n-                    runQuery();\n-                }\n-\n+                executePostCache();\n                 return response.firstList();\n             }\n         };",
                "raw_url": "https://github.com/apache/cayenne/raw/84e4df343db86df6fd7214871b44310fe9c9134b/framework/cayenne-jdk1.5-unpublished/src/main/java/org/apache/cayenne/util/ObjectContextQueryAction.java",
                "sha": "10990ec821a3b45c43b6a1698d2fa43d2f9bcd4b",
                "status": "modified"
            },
            {
                "additions": 22,
                "blob_url": "https://github.com/apache/cayenne/blob/84e4df343db86df6fd7214871b44310fe9c9134b/framework/cayenne-jdk1.5-unpublished/src/test/java/org/apache/cayenne/access/NestedDataContextReadTest.java",
                "changes": 22,
                "contents_url": "https://api.github.com/repos/apache/cayenne/contents/framework/cayenne-jdk1.5-unpublished/src/test/java/org/apache/cayenne/access/NestedDataContextReadTest.java?ref=84e4df343db86df6fd7214871b44310fe9c9134b",
                "deletions": 0,
                "filename": "framework/cayenne-jdk1.5-unpublished/src/test/java/org/apache/cayenne/access/NestedDataContextReadTest.java",
                "patch": "@@ -19,11 +19,13 @@\n \n package org.apache.cayenne.access;\n \n+import java.util.Date;\n import java.util.Iterator;\n import java.util.List;\n \n import org.apache.cayenne.Cayenne;\n import org.apache.cayenne.DataObject;\n+import org.apache.cayenne.DataRow;\n import org.apache.cayenne.ObjectContext;\n import org.apache.cayenne.ObjectId;\n import org.apache.cayenne.PersistenceState;\n@@ -476,4 +478,24 @@ public void testPrefetchingToMany() throws Exception {\n             unblockQueries();\n         }\n     }\n+\n+    public void testObjectFromDataRow() throws Exception {\n+        deleteTestData();\n+\n+        DataContext context = createDataContext();\n+        DataContext childContext = (DataContext) context.createChildContext();\n+\n+        DataRow row = new DataRow(8);\n+        row.put(\"ARTIST_ID\", 5l);\n+        row.put(\"ARTIST_NAME\", \"A\");\n+        row.put(\"DATE_OF_BIRTH\", new Date());\n+\n+        Artist artist = childContext.objectFromDataRow(Artist.class, row, true);\n+        assertNotNull(artist);\n+        assertEquals(PersistenceState.COMMITTED, artist.getPersistenceState());\n+        assertSame(childContext, artist.getObjectContext());\n+        Object parentArtist = context.getObjectStore().getNode(artist.getObjectId());\n+        assertNotNull(parentArtist);\n+        assertNotSame(artist, parentArtist);\n+    }\n }",
                "raw_url": "https://github.com/apache/cayenne/raw/84e4df343db86df6fd7214871b44310fe9c9134b/framework/cayenne-jdk1.5-unpublished/src/test/java/org/apache/cayenne/access/NestedDataContextReadTest.java",
                "sha": "7545f34e61c51687eef239da4a0d08a66cc320cd",
                "status": "modified"
            }
        ],
        "message": "CAY-1489 NPE using DataContext.objectFromDataRow for a nested context\n\nPatch by Andrei Veprev\n\ngit-svn-id: https://svn.apache.org/repos/asf/cayenne/main/trunk@1026083 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/cayenne/commit/15875523fc872f9ae2efa28f68225821374b0408",
        "patched_files": [
            "ObjectsFromDataRowsQuery.java",
            "DataContext.java",
            "ObjectContextQueryAction.java",
            "DataContextQueryAction.java",
            "RELEASE-NOTES.java"
        ],
        "repo": "cayenne",
        "unit_tests": [
            "DataContextTest.java",
            "NestedDataContextReadTest.java"
        ]
    },
    "cayenne_872f231": {
        "bug_id": "cayenne_872f231",
        "commit": "https://github.com/apache/cayenne/commit/872f231a1984033771867628b1e4f660dfec2b28",
        "file": [
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/cayenne/blob/872f231a1984033771867628b1e4f660dfec2b28/RELEASE-NOTES.txt",
                "changes": 1,
                "contents_url": "https://api.github.com/repos/apache/cayenne/contents/RELEASE-NOTES.txt?ref=872f231a1984033771867628b1e4f660dfec2b28",
                "deletions": 0,
                "filename": "RELEASE-NOTES.txt",
                "patch": "@@ -59,6 +59,7 @@ CAY-2425 Modeler: Migrate DB Direction field is locked if no option was selected\n CAY-2427 Modeler: Undo throws exception\n CAY-2429 Generate classes: Invalid template type: EMBEDDABLE_SINGLE_CLASS\n CAY-2430 Modeler: Redo throws NPE\n+CAY-2436 NPE in CayenneRuntimeException constructor\n \n ----------------------------------\n Release: 4.1.M1",
                "raw_url": "https://github.com/apache/cayenne/raw/872f231a1984033771867628b1e4f660dfec2b28/RELEASE-NOTES.txt",
                "sha": "3806615e348c704318fc4fc7b2500ee5c4ddfae6",
                "status": "modified"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/cayenne/blob/872f231a1984033771867628b1e4f660dfec2b28/cayenne-server/src/main/java/org/apache/cayenne/CayenneRuntimeException.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/cayenne/contents/cayenne-server/src/main/java/org/apache/cayenne/CayenneRuntimeException.java?ref=872f231a1984033771867628b1e4f660dfec2b28",
                "deletions": 1,
                "filename": "cayenne-server/src/main/java/org/apache/cayenne/CayenneRuntimeException.java",
                "patch": "@@ -37,7 +37,7 @@ public CayenneRuntimeException() {\n      * conventions.\n      */\n     public CayenneRuntimeException(String messageFormat, Object... messageArgs) {\n-        super(String.format(messageFormat, messageArgs));\n+        super(messageFormat == null ? null : String.format(messageFormat, messageArgs));\n     }\n \n     /**",
                "raw_url": "https://github.com/apache/cayenne/raw/872f231a1984033771867628b1e4f660dfec2b28/cayenne-server/src/main/java/org/apache/cayenne/CayenneRuntimeException.java",
                "sha": "135b50ce2b9e6495186b1408028dca2638be2a79",
                "status": "modified"
            },
            {
                "additions": 23,
                "blob_url": "https://github.com/apache/cayenne/blob/872f231a1984033771867628b1e4f660dfec2b28/cayenne-server/src/test/java/org/apache/cayenne/CayenneRuntimeExceptionTest.java",
                "changes": 33,
                "contents_url": "https://api.github.com/repos/apache/cayenne/contents/cayenne-server/src/test/java/org/apache/cayenne/CayenneRuntimeExceptionTest.java?ref=872f231a1984033771867628b1e4f660dfec2b28",
                "deletions": 10,
                "filename": "cayenne-server/src/test/java/org/apache/cayenne/CayenneRuntimeExceptionTest.java",
                "patch": "@@ -29,26 +29,24 @@\n import static org.junit.Assert.assertSame;\n import static org.junit.Assert.assertTrue;\n \n-/**\n- */\n public class CayenneRuntimeExceptionTest {\n \n     @Test\n-    public void testConstructor1() throws Exception {\n+    public void testConstructor1() {\n         CayenneRuntimeException ex = new CayenneRuntimeException();\n         assertNull(ex.getCause());\n         assertTrue(ex.getMessage().startsWith(CayenneException.getExceptionLabel()));\n     }\n \n     @Test\n-    public void testConstructor2() throws Exception {\n+    public void testConstructor2() {\n         CayenneRuntimeException ex = new CayenneRuntimeException(\"abc\");\n         assertNull(ex.getCause());\n         assertEquals(CayenneException.getExceptionLabel() + \"abc\", ex.getMessage());\n     }\n \n     @Test\n-    public void testConstructor3() throws Exception {\n+    public void testConstructor3() {\n         Throwable cause = new Throwable();\n         CayenneRuntimeException ex = new CayenneRuntimeException(cause);\n         assertSame(cause, ex.getCause());\n@@ -58,15 +56,30 @@ public void testConstructor3() throws Exception {\n     }\n \n     @Test\n-    public void testConstructor4() throws Exception {\n+    public void testConstructor4() {\n         Throwable cause = new Throwable();\n         CayenneRuntimeException ex = new CayenneRuntimeException(\"abc\", cause);\n         assertSame(cause, ex.getCause());\n         assertEquals(CayenneException.getExceptionLabel() + \"abc\", ex.getMessage());\n     }\n \n     @Test\n-    public void testThrow1() throws Exception {\n+    public void testConstructorNullMessage() {\n+        Throwable cause = new Throwable();\n+\n+        CayenneRuntimeException ex = new CayenneRuntimeException(null, cause);\n+        assertSame(cause, ex.getCause());\n+        assertEquals(CayenneException.getExceptionLabel() + \"(no message)\", ex.getMessage());\n+        assertNull(ex.getUnlabeledMessage());\n+\n+        CayenneRuntimeException ex2 = new CayenneRuntimeException((String)null);\n+        assertNull(ex2.getCause());\n+        assertEquals(CayenneException.getExceptionLabel() + \"(no message)\", ex2.getMessage());\n+        assertNull(ex2.getUnlabeledMessage());\n+    }\n+\n+    @Test\n+    public void testThrow1() {\n         try {\n             throw new CayenneRuntimeException();\n         }\n@@ -77,7 +90,7 @@ public void testThrow1() throws Exception {\n     }\n \n     @Test\n-    public void testThrow2() throws Exception {\n+    public void testThrow2() {\n         try {\n             try {\n                 throw new Throwable(\"Test Cause\");\n@@ -93,13 +106,13 @@ public void testThrow2() throws Exception {\n     }\n \n     @Test\n-    public void testMessageFormatting1() throws Exception {\n+    public void testMessageFormatting1() {\n         CayenneRuntimeException ex = new CayenneRuntimeException(\"x%sx%sx\", \"a\", \"b\");\n         assertEquals(\"xaxbx\", ex.getUnlabeledMessage());\n     }\n \n     @Test\n-    public void testMessageFormatting2() throws Exception {\n+    public void testMessageFormatting2() {\n         Throwable cause = new Throwable();\n         CayenneRuntimeException ex = new CayenneRuntimeException(\"x%sx%sx\", cause, \"a\", \"b\");\n         assertEquals(\"xaxbx\", ex.getUnlabeledMessage());",
                "raw_url": "https://github.com/apache/cayenne/raw/872f231a1984033771867628b1e4f660dfec2b28/cayenne-server/src/test/java/org/apache/cayenne/CayenneRuntimeExceptionTest.java",
                "sha": "0e60ecfc17b09137bfeadee488a83510a60b564e",
                "status": "modified"
            }
        ],
        "message": "CAY-2436 NPE in CayenneRuntimeException constructor",
        "parent": "https://github.com/apache/cayenne/commit/57361b635f58afe0f06c332f8f57449dd2963836",
        "patched_files": [
            "RELEASE-NOTES.java",
            "CayenneRuntimeException.java"
        ],
        "repo": "cayenne",
        "unit_tests": [
            "CayenneRuntimeExceptionTest.java"
        ]
    },
    "cayenne_876f16d": {
        "bug_id": "cayenne_876f16d",
        "commit": "https://github.com/apache/cayenne/commit/876f16d40cfaa04fad57ac42b26d0ecee0dacaa8",
        "file": [
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/cayenne/blob/876f16d40cfaa04fad57ac42b26d0ecee0dacaa8/docs/doc/src/main/resources/RELEASE-NOTES.txt",
                "changes": 1,
                "contents_url": "https://api.github.com/repos/apache/cayenne/contents/docs/doc/src/main/resources/RELEASE-NOTES.txt?ref=876f16d40cfaa04fad57ac42b26d0ecee0dacaa8",
                "deletions": 0,
                "filename": "docs/doc/src/main/resources/RELEASE-NOTES.txt",
                "patch": "@@ -29,6 +29,7 @@ Bug Fixes Since 3.1M3:\n CAY-1477 Modeler: Better validation for erroneous horizontal inheritance mapping\n CAY-1513 Deadlock in PoolManager\n CAY-1623 [PATCH] PersistentObjectList.setValue does not work\n+CAY-1624 [PATCH] PersistentObjectHolder throws NPE is object is transient - not in an ObjectContext\n CAY-1627 CayenneModeler: collection types for to-many relationships are not saved\n CAY-1628 ClassCastException when using java.util.Set or java.util.Map as collection type for to-many relationship\n CAY-1631 Oracle - passing blobs as stored procedure parameters",
                "raw_url": "https://github.com/apache/cayenne/raw/876f16d40cfaa04fad57ac42b26d0ecee0dacaa8/docs/doc/src/main/resources/RELEASE-NOTES.txt",
                "sha": "2de815dc20ff6e27839fdfa490f7664a54ba3c23",
                "status": "modified"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/cayenne/blob/876f16d40cfaa04fad57ac42b26d0ecee0dacaa8/framework/cayenne-jdk1.5-unpublished/src/main/java/org/apache/cayenne/util/PersistentObjectHolder.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/cayenne/contents/framework/cayenne-jdk1.5-unpublished/src/main/java/org/apache/cayenne/util/PersistentObjectHolder.java?ref=876f16d40cfaa04fad57ac42b26d0ecee0dacaa8",
                "deletions": 1,
                "filename": "framework/cayenne-jdk1.5-unpublished/src/main/java/org/apache/cayenne/util/PersistentObjectHolder.java",
                "patch": "@@ -86,7 +86,7 @@ public synchronized Object setValue(Object value) throws CayenneRuntimeException\n         }\n \n         Object oldValue = setValueDirectly(value);\n-        if (oldValue != value) {\n+        if (oldValue != value && relationshipOwner.getObjectContext() != null) {\n             relationshipOwner.getObjectContext().propertyChanged(relationshipOwner, relationshipName, oldValue, value);\n     \n             if (oldValue instanceof Persistent) {",
                "raw_url": "https://github.com/apache/cayenne/raw/876f16d40cfaa04fad57ac42b26d0ecee0dacaa8/framework/cayenne-jdk1.5-unpublished/src/main/java/org/apache/cayenne/util/PersistentObjectHolder.java",
                "sha": "078fa1eb3d03eb3e4abc3713f8f648413716db26",
                "status": "modified"
            }
        ],
        "message": "CAY-1624 [PATCH] PersistentObjectHolder throws NPE is object is transient - not in an ObjectContext\n\npatch by John Huss\n\ngit-svn-id: https://svn.apache.org/repos/asf/cayenne/main/trunk@1207109 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/cayenne/commit/b5d0c2d6862ad6f6b442049a282677a3431fd438",
        "patched_files": [
            "PersistentObjectHolder.java"
        ],
        "repo": "cayenne",
        "unit_tests": [
            "PersistentObjectHolderTest.java"
        ]
    },
    "cayenne_a54a49a": {
        "bug_id": "cayenne_a54a49a",
        "commit": "https://github.com/apache/cayenne/commit/a54a49a29401735fe7c2612f637f2376b2da8151",
        "file": [
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/cayenne/blob/a54a49a29401735fe7c2612f637f2376b2da8151/docs/doc/src/main/resources/RELEASE-NOTES.txt",
                "changes": 1,
                "contents_url": "https://api.github.com/repos/apache/cayenne/contents/docs/doc/src/main/resources/RELEASE-NOTES.txt?ref=a54a49a29401735fe7c2612f637f2376b2da8151",
                "deletions": 0,
                "filename": "docs/doc/src/main/resources/RELEASE-NOTES.txt",
                "patch": "@@ -47,6 +47,7 @@ CAY-1246 Naming strategy getting stuck in (incorrect) preferences location\n CAY-1248 ClassCastException with OracleLOBBatchAction\n CAY-1250 Prefetching doesn't work with prefetched subentity\n CAY-1252 Bad XML generated when saving DBEntity qualifiers\n+CAY-1257 NullPointerException in Class Qualifier when using \"field = null\"\n CAY-1259 Wrong Mapping for NUMERIC Type\n CAY-1265 error while search inheritance relationship\n CAY-1274 CreateTableToDb should not create existing AUTO_PK_SUPPORT",
                "raw_url": "https://github.com/apache/cayenne/raw/a54a49a29401735fe7c2612f637f2376b2da8151/docs/doc/src/main/resources/RELEASE-NOTES.txt",
                "sha": "dbc0a41ad6e20c5040484fc3c3f5639dc12f8aac",
                "status": "modified"
            },
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/cayenne/blob/a54a49a29401735fe7c2612f637f2376b2da8151/framework/cayenne-jdk1.5-unpublished/src/main/java/org/apache/cayenne/exp/parser/SimpleNode.java",
                "changes": 3,
                "contents_url": "https://api.github.com/repos/apache/cayenne/contents/framework/cayenne-jdk1.5-unpublished/src/main/java/org/apache/cayenne/exp/parser/SimpleNode.java?ref=a54a49a29401735fe7c2612f637f2376b2da8151",
                "deletions": 1,
                "filename": "framework/cayenne-jdk1.5-unpublished/src/main/java/org/apache/cayenne/exp/parser/SimpleNode.java",
                "patch": "@@ -312,7 +312,8 @@ protected void connectChildren() {\n     }\n \n     protected Object evaluateChild(int index, Object o) throws Exception {\n-        return ((SimpleNode) jjtGetChild(index)).evaluate(o);\n+    \tSimpleNode node = (SimpleNode) jjtGetChild(index);\n+    \treturn node != null ? node.evaluate(o) : null;\n     }\n \n     @Override",
                "raw_url": "https://github.com/apache/cayenne/raw/a54a49a29401735fe7c2612f637f2376b2da8151/framework/cayenne-jdk1.5-unpublished/src/main/java/org/apache/cayenne/exp/parser/SimpleNode.java",
                "sha": "ead1590407de1601cb38feed5cf37a781d6b15cb",
                "status": "modified"
            },
            {
                "additions": 12,
                "blob_url": "https://github.com/apache/cayenne/blob/a54a49a29401735fe7c2612f637f2376b2da8151/framework/cayenne-jdk1.5-unpublished/src/test/java/org/apache/cayenne/map/ObjEntityTest.java",
                "changes": 12,
                "contents_url": "https://api.github.com/repos/apache/cayenne/contents/framework/cayenne-jdk1.5-unpublished/src/test/java/org/apache/cayenne/map/ObjEntityTest.java?ref=a54a49a29401735fe7c2612f637f2376b2da8151",
                "deletions": 0,
                "filename": "framework/cayenne-jdk1.5-unpublished/src/test/java/org/apache/cayenne/map/ObjEntityTest.java",
                "patch": "@@ -26,7 +26,9 @@\n import org.apache.art.Artist;\n import org.apache.cayenne.CayenneDataObject;\n import org.apache.cayenne.CayenneRuntimeException;\n+import org.apache.cayenne.ObjectContext;\n import org.apache.cayenne.exp.Expression;\n+import org.apache.cayenne.exp.ExpressionFactory;\n import org.apache.cayenne.exp.parser.ASTObjPath;\n import org.apache.cayenne.unit.CayenneCase;\n import org.apache.cayenne.util.Util;\n@@ -437,4 +439,14 @@ public void testTranslateToRelatedEntityMultiplePaths() throws Exception {\n                                 + \"and db:toArtist.artistExhibitArray.toExhibit.CLOSING_DATE = $d\"),\n                 translated);\n     }\n+    \n+    public void testTranslateNullArg() {\n+        ObjectContext context = createDataContext();\n+        ObjEntity entity = context.getEntityResolver().getObjEntity(\"Artist\");\n+        \n+        Expression exp = ExpressionFactory.noMatchExp(\"dateOfBirth\", null);\n+        Expression translated = entity.translateToDbPath(exp);\n+        \n+        assertFalse(translated.match(new Artist()));\n+    } \n }",
                "raw_url": "https://github.com/apache/cayenne/raw/a54a49a29401735fe7c2612f637f2376b2da8151/framework/cayenne-jdk1.5-unpublished/src/test/java/org/apache/cayenne/map/ObjEntityTest.java",
                "sha": "eebd3faf8eff17e1b9063806284035a6e815ed77",
                "status": "modified"
            }
        ],
        "message": "CAY-1257 NullPointerException in Class Qualifier when using \"field = null\"\n\ngit-svn-id: https://svn.apache.org/repos/asf/cayenne/main/trunk@824131 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/cayenne/commit/f642be93cb17808c221f8148f1d9d7cbc7e9e6b5",
        "patched_files": [
            "ObjEntity.java",
            "SimpleNode.java",
            "RELEASE-NOTES.java"
        ],
        "repo": "cayenne",
        "unit_tests": [
            "ObjEntityTest.java"
        ]
    },
    "cayenne_aa75754": {
        "bug_id": "cayenne_aa75754",
        "commit": "https://github.com/apache/cayenne/commit/aa7575454f3c2851d7d3fe3fd9d393919277a71f",
        "file": [
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/cayenne/blob/aa7575454f3c2851d7d3fe3fd9d393919277a71f/docs/doc/src/main/resources/RELEASE-NOTES.txt",
                "changes": 1,
                "contents_url": "https://api.github.com/repos/apache/cayenne/contents/docs/doc/src/main/resources/RELEASE-NOTES.txt?ref=aa7575454f3c2851d7d3fe3fd9d393919277a71f",
                "deletions": 0,
                "filename": "docs/doc/src/main/resources/RELEASE-NOTES.txt",
                "patch": "@@ -36,6 +36,7 @@ CAY-832 enum-mapped columns improperly handled in in expressions\n CAY-835 setting meaningful pk to zero turn on autogenerated keys\n CAY-845 DataContext.localObject() object update race condition\n CAY-847 Expression NULL handling\n+CAY-852 NPE in Util.delete for read-protected directories\n \n \n ----------------------------------",
                "raw_url": "https://github.com/apache/cayenne/raw/aa7575454f3c2851d7d3fe3fd9d393919277a71f/docs/doc/src/main/resources/RELEASE-NOTES.txt",
                "sha": "7860b1c8223fcbaf3c0ff952c0afb2db841520f5",
                "status": "modified"
            },
            {
                "additions": 7,
                "blob_url": "https://github.com/apache/cayenne/blob/aa7575454f3c2851d7d3fe3fd9d393919277a71f/framework/cayenne-jdk1.4-unpublished/src/main/java/org/apache/cayenne/util/Util.java",
                "changes": 10,
                "contents_url": "https://api.github.com/repos/apache/cayenne/contents/framework/cayenne-jdk1.4-unpublished/src/main/java/org/apache/cayenne/util/Util.java?ref=aa7575454f3c2851d7d3fe3fd9d393919277a71f",
                "deletions": 3,
                "filename": "framework/cayenne-jdk1.4-unpublished/src/main/java/org/apache/cayenne/util/Util.java",
                "patch": "@@ -201,9 +201,13 @@ public static boolean delete(String filePath, boolean recursive) {\n             return file.delete();\n \n         String[] list = file.list();\n-        for (int i = 0; i < list.length; i++) {\n-            if (!delete(filePath + File.separator + list[i], true))\n-                return false;\n+        \n+        // list can be null if directory doesn't have an 'x' permission bit set for the user\n+        if (list != null) {\n+            for (int i = 0; i < list.length; i++) {\n+                if (!delete(filePath + File.separator + list[i], true))\n+                    return false;\n+            }\n         }\n \n         return file.delete();",
                "raw_url": "https://github.com/apache/cayenne/raw/aa7575454f3c2851d7d3fe3fd9d393919277a71f/framework/cayenne-jdk1.4-unpublished/src/main/java/org/apache/cayenne/util/Util.java",
                "sha": "e42cd0e0ed570390fcb76c53777736336507863e",
                "status": "modified"
            }
        ],
        "message": "CAY-852 NPE in Util.delete for read-protected directories\n\ngit-svn-id: https://svn.apache.org/repos/asf/cayenne/main/trunk@569042 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/cayenne/commit/2bc3cad36e8459182a8f278f516441be653b3e24",
        "patched_files": [
            "Util.java"
        ],
        "repo": "cayenne",
        "unit_tests": [
            "UtilTest.java"
        ]
    },
    "cayenne_bc4933d": {
        "bug_id": "cayenne_bc4933d",
        "commit": "https://github.com/apache/cayenne/commit/bc4933dde64cb28edae9de8e7b1413e1f5f15339",
        "file": [
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/cayenne/blob/bc4933dde64cb28edae9de8e7b1413e1f5f15339/cayenne-server/src/main/java/org/apache/cayenne/configuration/server/DataContextFactory.java",
                "changes": 1,
                "contents_url": "https://api.github.com/repos/apache/cayenne/contents/cayenne-server/src/main/java/org/apache/cayenne/configuration/server/DataContextFactory.java?ref=bc4933dde64cb28edae9de8e7b1413e1f5f15339",
                "deletions": 0,
                "filename": "cayenne-server/src/main/java/org/apache/cayenne/configuration/server/DataContextFactory.java",
                "patch": "@@ -103,6 +103,7 @@ protected ObjectContext createFromDataContext(DataContext parent) {\n         context.setValidatingObjectsOnCommit(parent.isValidatingObjectsOnCommit());\n         context.setUsingSharedSnapshotCache(parent.isUsingSharedSnapshotCache());\n         context.setQueryCache(new NestedQueryCache(queryCache));\n+        context.setTransactionFactory(transactionFactory);\n \n         return context;\n     }",
                "raw_url": "https://github.com/apache/cayenne/raw/bc4933dde64cb28edae9de8e7b1413e1f5f15339/cayenne-server/src/main/java/org/apache/cayenne/configuration/server/DataContextFactory.java",
                "sha": "b6b51a164a6faf038c24a3982acc84b8993f4aab",
                "status": "modified"
            },
            {
                "additions": 14,
                "blob_url": "https://github.com/apache/cayenne/blob/bc4933dde64cb28edae9de8e7b1413e1f5f15339/cayenne-server/src/test/java/org/apache/cayenne/access/NestedDataContextReadIT.java",
                "changes": 14,
                "contents_url": "https://api.github.com/repos/apache/cayenne/contents/cayenne-server/src/test/java/org/apache/cayenne/access/NestedDataContextReadIT.java?ref=bc4933dde64cb28edae9de8e7b1413e1f5f15339",
                "deletions": 0,
                "filename": "cayenne-server/src/test/java/org/apache/cayenne/access/NestedDataContextReadIT.java",
                "patch": "@@ -185,6 +185,20 @@ public void testSelect() throws Exception {\n         }\n     }\n \n+    @Test\n+    public void testPageableSelect() throws Exception {\n+        createArtistsDataSet();\n+        ObjectContext child = runtime.newContext(context);\n+\n+        SelectQuery<Artist> query = SelectQuery.query(Artist.class);\n+        query.addOrdering(Artist.ARTIST_NAME.desc());\n+        query.setPageSize(1);\n+        IncrementalFaultList<Artist> records = (IncrementalFaultList) child.performQuery(query);\n+\n+        assertEquals(4, records.size());\n+        assertEquals(1, records.getPageSize());\n+    }\n+\n     @Test\n     public void testReadToOneRelationship() throws Exception {\n         createRelationshipDataSet();",
                "raw_url": "https://github.com/apache/cayenne/raw/bc4933dde64cb28edae9de8e7b1413e1f5f15339/cayenne-server/src/test/java/org/apache/cayenne/access/NestedDataContextReadIT.java",
                "sha": "cac997d626bebf806686e19497f516c6153fe03d",
                "status": "modified"
            }
        ],
        "message": "fix NullPointerException for nested ObjectContext",
        "parent": "https://github.com/apache/cayenne/commit/c110454f1445a46260a1da2a2bdae633faf56c75",
        "patched_files": [
            "DataContextFactory.java"
        ],
        "repo": "cayenne",
        "unit_tests": [
            "DataContextFactoryTest.java"
        ]
    },
    "cayenne_d973891": {
        "bug_id": "cayenne_d973891",
        "commit": "https://github.com/apache/cayenne/commit/d973891f10d8e839bca3c3ce7e42cbfef1b925cb",
        "file": [
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/cayenne/blob/d973891f10d8e839bca3c3ce7e42cbfef1b925cb/framework/cayenne-jdk1.5-unpublished/src/main/java/org/apache/cayenne/conf/ConfigSaver.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/cayenne/contents/framework/cayenne-jdk1.5-unpublished/src/main/java/org/apache/cayenne/conf/ConfigSaver.java?ref=d973891f10d8e839bca3c3ce7e42cbfef1b925cb",
                "deletions": 1,
                "filename": "framework/cayenne-jdk1.5-unpublished/src/main/java/org/apache/cayenne/conf/ConfigSaver.java",
                "patch": "@@ -195,7 +195,7 @@ public void storeDataNode(PrintWriter pw, Project project, DataSourceInfo info)\n \n         if (info.getPasswordLocation().equals(DataSourceInfo.PASSWORD_LOCATION_MODEL)) {\n             PasswordEncoding encoder = info.getPasswordEncoder();\n-            if (encoder != null) {\n+            if (encoder != null && info.getPassword() != null) {\n                 pw.print(attribute(\"password\", encoder.encodePassword(\n                         info.getPassword(),\n                         info.getPasswordEncoderKey())));",
                "raw_url": "https://github.com/apache/cayenne/raw/d973891f10d8e839bca3c3ce7e42cbfef1b925cb/framework/cayenne-jdk1.5-unpublished/src/main/java/org/apache/cayenne/conf/ConfigSaver.java",
                "sha": "ae0eb913a74e79e409f57aa7ba5f15da82cc9ddd",
                "status": "modified"
            }
        ],
        "message": "adding password NPE check that prevents project save errors on invalid modeler inputs\n\ngit-svn-id: https://svn.apache.org/repos/asf/cayenne/main/trunk@688324 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/cayenne/commit/7efda9e09d03bf94ac15b42f85f73cb360fe6dfc",
        "patched_files": [
            "ConfigSaver.java"
        ],
        "repo": "cayenne",
        "unit_tests": [
            "ConfigSaverTest.java"
        ]
    },
    "cayenne_e77e278": {
        "bug_id": "cayenne_e77e278",
        "commit": "https://github.com/apache/cayenne/commit/e77e278b296525364c43554c14a681daaf5b4c0b",
        "file": [
            {
                "additions": 98,
                "blob_url": "https://github.com/apache/cayenne/blob/e77e278b296525364c43554c14a681daaf5b4c0b/cayenne-server/src/test/java/org/apache/cayenne/access/dbsync/BaseSchemaUpdateStrategy_ConcurrencyTest.java",
                "changes": 98,
                "contents_url": "https://api.github.com/repos/apache/cayenne/contents/cayenne-server/src/test/java/org/apache/cayenne/access/dbsync/BaseSchemaUpdateStrategy_ConcurrencyTest.java?ref=e77e278b296525364c43554c14a681daaf5b4c0b",
                "deletions": 0,
                "filename": "cayenne-server/src/test/java/org/apache/cayenne/access/dbsync/BaseSchemaUpdateStrategy_ConcurrencyTest.java",
                "patch": "@@ -0,0 +1,98 @@\n+/*\n+ *    Licensed to the Apache Software Foundation (ASF) under one\n+ *    or more contributor license agreements.  See the NOTICE file\n+ *    distributed with this work for additional information\n+ *    regarding copyright ownership.  The ASF licenses this file\n+ *    to you under the Apache License, Version 2.0 (the\n+ *    \"License\"); you may not use this file except in compliance\n+ *    with the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *    Unless required by applicable law or agreed to in writing,\n+ *    software distributed under the License is distributed on an\n+ *    \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ *    KIND, either express or implied.  See the License for the\n+ *    specific language governing permissions and limitations\n+ *    under the License.\n+ */\n+package org.apache.cayenne.access.dbsync;\n+\n+import org.apache.cayenne.access.DataNode;\n+import org.apache.commons.logging.Log;\n+import org.apache.commons.logging.LogFactory;\n+import org.junit.After;\n+import org.junit.Before;\n+import org.junit.Test;\n+\n+import java.sql.SQLException;\n+import java.util.ArrayList;\n+import java.util.Collection;\n+import java.util.concurrent.ExecutionException;\n+import java.util.concurrent.ExecutorService;\n+import java.util.concurrent.Executors;\n+import java.util.concurrent.Future;\n+import java.util.concurrent.TimeUnit;\n+import java.util.concurrent.TimeoutException;\n+import java.util.concurrent.atomic.AtomicBoolean;\n+import java.util.concurrent.atomic.AtomicInteger;\n+\n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertFalse;\n+import static org.mockito.Mockito.mock;\n+\n+public class BaseSchemaUpdateStrategy_ConcurrencyTest {\n+\n+    private static final Log LOGGER = LogFactory.getLog(BaseSchemaUpdateStrategy_ConcurrencyTest.class);\n+\n+    private ExecutorService threadPool;\n+    private DataNode dataNode;\n+\n+    @Before\n+    public void before() {\n+        threadPool = Executors.newFixedThreadPool(2);\n+        dataNode = mock(DataNode.class);\n+    }\n+\n+    @After\n+    public void after() {\n+        threadPool.shutdownNow();\n+    }\n+\n+    @Test\n+    public void testUpdateSchema_Concurrency() throws InterruptedException, ExecutionException, TimeoutException {\n+\n+        final AtomicInteger counter = new AtomicInteger();\n+        final AtomicBoolean errors = new AtomicBoolean(false);\n+\n+        final BaseSchemaUpdateStrategy strategy = new BaseSchemaUpdateStrategy() {\n+            @Override\n+            protected void processSchemaUpdate(DataNode dataNode) throws SQLException {\n+                counter.incrementAndGet();\n+            }\n+        };\n+\n+        Collection<Future<?>> tasks = new ArrayList<>();\n+\n+        for (int i = 0; i < 20; i++) {\n+            tasks.add(threadPool.submit(new Runnable() {\n+                @Override\n+                public void run() {\n+                    try {\n+                        strategy.updateSchema(dataNode);\n+                    } catch (SQLException e) {\n+                        LOGGER.error(\"error in test\", e);\n+                        errors.set(true);\n+                    }\n+                }\n+            }));\n+        }\n+\n+        for(Future<?> f : tasks) {\n+            f.get(1, TimeUnit.SECONDS);\n+        }\n+\n+        assertFalse(errors.get());\n+        assertEquals(1, counter.get());\n+    }\n+}",
                "raw_url": "https://github.com/apache/cayenne/raw/e77e278b296525364c43554c14a681daaf5b4c0b/cayenne-server/src/test/java/org/apache/cayenne/access/dbsync/BaseSchemaUpdateStrategy_ConcurrencyTest.java",
                "sha": "695202d6ad7bbdb73b4d186c37174f74934b92f1",
                "status": "added"
            }
        ],
        "message": "CAY-2143 NPE in BaseSchemaUpdateStrategy\n\n* tests",
        "parent": "https://github.com/apache/cayenne/commit/5708e3530cbbea0b3c39739e71e9713f54d6dad5",
        "patched_files": [],
        "repo": "cayenne",
        "unit_tests": [
            "BaseSchemaUpdateStrategy_ConcurrencyTest.java"
        ]
    },
    "cayenne_efd15c8": {
        "bug_id": "cayenne_efd15c8",
        "commit": "https://github.com/apache/cayenne/commit/efd15c859c8190c6b0bdcf5b3773e22e1d2580a1",
        "file": [
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/cayenne/blob/efd15c859c8190c6b0bdcf5b3773e22e1d2580a1/docs/doc/src/main/resources/RELEASE-NOTES.txt",
                "changes": 1,
                "contents_url": "https://api.github.com/repos/apache/cayenne/contents/docs/doc/src/main/resources/RELEASE-NOTES.txt?ref=efd15c859c8190c6b0bdcf5b3773e22e1d2580a1",
                "deletions": 0,
                "filename": "docs/doc/src/main/resources/RELEASE-NOTES.txt",
                "patch": "@@ -27,6 +27,7 @@ Bug Fixes:\n CAY-1695 Unexpected null value in bidirectional one-to-one prefetch \n CAY-1736 IllegalArgumentException when synchronizing entities in the Modeler\n CAY-1857 Problem with hotkeys \n+CAY-1859 NullPointerException when importing EOModel \n \n ----------------------------------\n Release: 3.2M1",
                "raw_url": "https://github.com/apache/cayenne/raw/efd15c859c8190c6b0bdcf5b3773e22e1d2580a1/docs/doc/src/main/resources/RELEASE-NOTES.txt",
                "sha": "faa8e8c8aaeb049e4f0ac07e8d70ccb36874046d",
                "status": "modified"
            },
            {
                "additions": 9,
                "blob_url": "https://github.com/apache/cayenne/blob/efd15c859c8190c6b0bdcf5b3773e22e1d2580a1/framework/cayenne-wocompat-unpublished/src/main/java/org/apache/cayenne/wocompat/EOObjEntity.java",
                "changes": 13,
                "contents_url": "https://api.github.com/repos/apache/cayenne/contents/framework/cayenne-wocompat-unpublished/src/main/java/org/apache/cayenne/wocompat/EOObjEntity.java?ref=efd15c859c8190c6b0bdcf5b3773e22e1d2580a1",
                "deletions": 4,
                "filename": "framework/cayenne-wocompat-unpublished/src/main/java/org/apache/cayenne/wocompat/EOObjEntity.java",
                "patch": "@@ -29,17 +29,19 @@\n \n import org.apache.cayenne.CayenneRuntimeException;\n import org.apache.cayenne.exp.Expression;\n+import org.apache.cayenne.exp.ExpressionException;\n import org.apache.cayenne.exp.ExpressionFactory;\n import org.apache.cayenne.map.Entity;\n import org.apache.cayenne.map.ObjEntity;\n+import org.apache.cayenne.map.Relationship;\n import org.apache.cayenne.query.Query;\n import org.apache.commons.collections.Transformer;\n \n /**\n  * An extension of ObjEntity used to accomodate extra EOModel entity properties.\n  */\n public class EOObjEntity extends ObjEntity {\n-\n+    \n     protected boolean subclass;\n     protected boolean abstractEntity;\n \n@@ -200,9 +202,12 @@ public Object transform(Object input) {\n \n                     buffer.append(chunk);\n \n-                    entity = (EOObjEntity) entity\n-                            .getRelationship(chunk)\n-                            .getTargetEntity();\n+                    Relationship r = entity.getRelationship(chunk);\n+                    if (r == null) {\n+                        throw new ExpressionException(\"Invalid path component: \" + chunk);\n+                    }\n+\n+                    entity = (EOObjEntity) r.getTargetEntity();\n                 }\n                 // this is an attribute...\n                 else {",
                "raw_url": "https://github.com/apache/cayenne/raw/efd15c859c8190c6b0bdcf5b3773e22e1d2580a1/framework/cayenne-wocompat-unpublished/src/main/java/org/apache/cayenne/wocompat/EOObjEntity.java",
                "sha": "76890749b6bc244764cf0ba644070b0d5368c9eb",
                "status": "modified"
            },
            {
                "additions": 6,
                "blob_url": "https://github.com/apache/cayenne/blob/efd15c859c8190c6b0bdcf5b3773e22e1d2580a1/framework/cayenne-wocompat-unpublished/src/main/java/org/apache/cayenne/wocompat/EOQuery.java",
                "changes": 9,
                "contents_url": "https://api.github.com/repos/apache/cayenne/contents/framework/cayenne-wocompat-unpublished/src/main/java/org/apache/cayenne/wocompat/EOQuery.java?ref=efd15c859c8190c6b0bdcf5b3773e22e1d2580a1",
                "deletions": 3,
                "filename": "framework/cayenne-wocompat-unpublished/src/main/java/org/apache/cayenne/wocompat/EOQuery.java",
                "patch": "@@ -496,9 +496,12 @@ else if (value instanceof String) {\n             Expression keyExp = Expression.fromString(key);\n             try {\n                 entity.lastPathComponent(keyExp, Collections.emptyMap());\n-            }\n-            catch (ExpressionException e) {\n-                keyExp = entity.translateToDbPath(keyExp);\n+            } catch (ExpressionException e) {\n+                try {\n+                    keyExp = entity.translateToDbPath(keyExp);\n+                } catch (Exception dbpathEx) {\n+                    return null;\n+                }\n             }\n \n             try {",
                "raw_url": "https://github.com/apache/cayenne/raw/efd15c859c8190c6b0bdcf5b3773e22e1d2580a1/framework/cayenne-wocompat-unpublished/src/main/java/org/apache/cayenne/wocompat/EOQuery.java",
                "sha": "3baf47140cce8771e9a11b05027a51c6757a9812",
                "status": "modified"
            }
        ],
        "message": "CAY-1859  NullPointerException when importing EOModel\n\ngit-svn-id: https://svn.apache.org/repos/asf/cayenne/main/trunk@1509573 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/cayenne/commit/03e563f73a813f83a8d1cc3d4bc9177566cc4f4f",
        "patched_files": [
            "EOQuery.java"
        ],
        "repo": "cayenne",
        "unit_tests": [
            "EOQueryTest.java"
        ]
    },
    "cayenne_f3ed2e0": {
        "bug_id": "cayenne_f3ed2e0",
        "commit": "https://github.com/apache/cayenne/commit/f3ed2e00cd0a78aac51847759a2f3d6750126a71",
        "file": [
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/cayenne/blob/f3ed2e00cd0a78aac51847759a2f3d6750126a71/docs/doc/src/main/resources/RELEASE-NOTES.txt",
                "changes": 1,
                "contents_url": "https://api.github.com/repos/apache/cayenne/contents/docs/doc/src/main/resources/RELEASE-NOTES.txt?ref=f3ed2e00cd0a78aac51847759a2f3d6750126a71",
                "deletions": 0,
                "filename": "docs/doc/src/main/resources/RELEASE-NOTES.txt",
                "patch": "@@ -54,6 +54,7 @@ CAY-1018 Enums fetched via SQLTemplate\n CAY-1020 Problem accessing toMany Set relationships on client.\n CAY-1028 NPE's in the Modeler for incomplete relationships\n CAY-1043 NPE in ConnectionWrapper on rollback\n+CAY-1044 NPE on commit when the new object was deleted before commit\n \n ----------------------------------\n Release: 3.0M3",
                "raw_url": "https://github.com/apache/cayenne/raw/f3ed2e00cd0a78aac51847759a2f3d6750126a71/docs/doc/src/main/resources/RELEASE-NOTES.txt",
                "sha": "9d4fa07d72cc0ec173fa5d7f4ee9ffca2afa100e",
                "status": "modified"
            },
            {
                "additions": 6,
                "blob_url": "https://github.com/apache/cayenne/blob/f3ed2e00cd0a78aac51847759a2f3d6750126a71/framework/cayenne-jdk1.5-unpublished/src/main/java/org/apache/cayenne/access/ChildDiffLoader.java",
                "changes": 6,
                "contents_url": "https://api.github.com/repos/apache/cayenne/contents/framework/cayenne-jdk1.5-unpublished/src/main/java/org/apache/cayenne/access/ChildDiffLoader.java?ref=f3ed2e00cd0a78aac51847759a2f3d6750126a71",
                "deletions": 0,
                "filename": "framework/cayenne-jdk1.5-unpublished/src/main/java/org/apache/cayenne/access/ChildDiffLoader.java",
                "patch": "@@ -159,6 +159,12 @@ public void arcCreated(Object nodeId, Object targetNodeId, Object arcId) {\n         final Persistent source = findObject(nodeId);\n         final Persistent target = findObject(targetNodeId);\n \n+        // if a target was later deleted, the diff for arcCreated is still preserved and\n+        // can result in NULL target here.\n+        if (target == null) {\n+            return;\n+        }\n+\n         ClassDescriptor descriptor = context.getEntityResolver().getClassDescriptor(\n                 ((ObjectId) nodeId).getEntityName());\n         ArcProperty property = (ArcProperty) descriptor.getProperty(arcId.toString());",
                "raw_url": "https://github.com/apache/cayenne/raw/f3ed2e00cd0a78aac51847759a2f3d6750126a71/framework/cayenne-jdk1.5-unpublished/src/main/java/org/apache/cayenne/access/ChildDiffLoader.java",
                "sha": "ff63da9f3d2336333132fcef58fff358f3d9d3c0",
                "status": "modified"
            },
            {
                "additions": 27,
                "blob_url": "https://github.com/apache/cayenne/blob/f3ed2e00cd0a78aac51847759a2f3d6750126a71/framework/cayenne-jdk1.5-unpublished/src/test/java/org/apache/cayenne/access/NestedDataContextWriteTest.java",
                "changes": 29,
                "contents_url": "https://api.github.com/repos/apache/cayenne/contents/framework/cayenne-jdk1.5-unpublished/src/test/java/org/apache/cayenne/access/NestedDataContextWriteTest.java?ref=f3ed2e00cd0a78aac51847759a2f3d6750126a71",
                "deletions": 2,
                "filename": "framework/cayenne-jdk1.5-unpublished/src/test/java/org/apache/cayenne/access/NestedDataContextWriteTest.java",
                "patch": "@@ -369,8 +369,7 @@ public void testCommitChangesToParentPropagatedKey() throws Exception {\n         Painting childMaster = childContext.newObject(Painting.class);\n         childMaster.setPaintingTitle(\"Master\");\n \n-        PaintingInfo childDetail1 = childContext\n-                .newObject(PaintingInfo.class);\n+        PaintingInfo childDetail1 = childContext.newObject(PaintingInfo.class);\n         childDetail1.setTextReview(\"Detail1\");\n         childDetail1.setPainting(childMaster);\n \n@@ -543,4 +542,30 @@ public void testCommitChangesToParentFlattenedMultipleFlush() throws Exception {\n             unblockQueries();\n         }\n     }\n+\n+    public void testAddRemove() {\n+\n+        DataContext context = createDataContext();\n+        DataContext child = context.createChildDataContext();\n+\n+        Artist a = child.newObject(Artist.class);\n+        a.setArtistName(\"X\");\n+        child.commitChanges();\n+\n+        Painting p1 = child.newObject(Painting.class);\n+        p1.setPaintingTitle(\"P1\");\n+        a.addToPaintingArray(p1);\n+\n+        Painting p2 = child.newObject(Painting.class);\n+        p2.setPaintingTitle(\"P2\");\n+        a.addToPaintingArray(p2);\n+\n+        a.removeFromPaintingArray(p2);\n+\n+        // this causes an error on commit\n+        child.deleteObject(p2);\n+\n+        child.commitChangesToParent();\n+\n+    }\n }",
                "raw_url": "https://github.com/apache/cayenne/raw/f3ed2e00cd0a78aac51847759a2f3d6750126a71/framework/cayenne-jdk1.5-unpublished/src/test/java/org/apache/cayenne/access/NestedDataContextWriteTest.java",
                "sha": "c0bf49a35db34425270f33752ac5cba4f9bb129e",
                "status": "modified"
            }
        ],
        "message": "CAY-1044 NPE on commit when the new object was deleted before commit\n\ngit-svn-id: https://svn.apache.org/repos/asf/cayenne/main/trunk@652383 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/cayenne/commit/8056f253eff78436aa2281df95ffe7ff60b0fd30",
        "patched_files": [
            "ChildDiffLoader.java",
            "RELEASE-NOTES.java"
        ],
        "repo": "cayenne",
        "unit_tests": [
            "NestedDataContextWriteTest.java"
        ]
    },
    "cayenne_f60ff78": {
        "bug_id": "cayenne_f60ff78",
        "commit": "https://github.com/apache/cayenne/commit/f60ff78dd6584ee195a11a091d5e41020b349408",
        "file": [
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/cayenne/blob/f60ff78dd6584ee195a11a091d5e41020b349408/docs/doc/src/main/resources/RELEASE-NOTES.txt",
                "changes": 1,
                "contents_url": "https://api.github.com/repos/apache/cayenne/contents/docs/doc/src/main/resources/RELEASE-NOTES.txt?ref=f60ff78dd6584ee195a11a091d5e41020b349408",
                "deletions": 0,
                "filename": "docs/doc/src/main/resources/RELEASE-NOTES.txt",
                "patch": "@@ -42,6 +42,7 @@ CAY-1155 Modeler template for SQLServer driver has a typo in the driver name\n CAY-1157 Modeler: Concurrent mod exception on removing DbRelationship\n CAY-1160 Default delete rule is not used when migrating schema (to model)\n CAY-1166 Type checking in the modeler\n+CAY-1170 cdbgen task fails due to NPE when instantiating TypesHandler\n CAY-1176 missing classes in ROP cayenne-client render nested contexts unusable\n CAY-1180 Model marked as dirty when leaving DataMap name field\n CAY-1183 commitToParent() makes object persistence state committed, produces exception when using object in parent context (ROP)",
                "raw_url": "https://github.com/apache/cayenne/raw/f60ff78dd6584ee195a11a091d5e41020b349408/docs/doc/src/main/resources/RELEASE-NOTES.txt",
                "sha": "8236725d345d3781938fda3cf5ccc4e66b6ea1f7",
                "status": "modified"
            },
            {
                "additions": 6,
                "blob_url": "https://github.com/apache/cayenne/blob/f60ff78dd6584ee195a11a091d5e41020b349408/framework/cayenne-jdk1.5-unpublished/src/main/java/org/apache/cayenne/tools/DbGeneratorTask.java",
                "changes": 6,
                "contents_url": "https://api.github.com/repos/apache/cayenne/contents/framework/cayenne-jdk1.5-unpublished/src/main/java/org/apache/cayenne/tools/DbGeneratorTask.java?ref=f60ff78dd6584ee195a11a091d5e41020b349408",
                "deletions": 0,
                "filename": "framework/cayenne-jdk1.5-unpublished/src/main/java/org/apache/cayenne/tools/DbGeneratorTask.java",
                "patch": "@@ -73,7 +73,10 @@ public void execute() {\n \n         validateAttributes();\n         \n+        ClassLoader loader = null;\n         try {\n+            loader = Thread.currentThread().getContextClassLoader();\n+            Thread.currentThread().setContextClassLoader(DbGeneratorTask.class.getClassLoader());\n \n             // Load the data map and run the db generator.\n             DataMap dataMap = loadDataMap();\n@@ -102,6 +105,9 @@ public void execute() {\n             super.log(message);\n             throw new BuildException(message, th);\n         }\n+        finally{\n+            Thread.currentThread().setContextClassLoader(loader);\n+        }\n     }\n \n     /**",
                "raw_url": "https://github.com/apache/cayenne/raw/f60ff78dd6584ee195a11a091d5e41020b349408/framework/cayenne-jdk1.5-unpublished/src/main/java/org/apache/cayenne/tools/DbGeneratorTask.java",
                "sha": "2e29f5af7d9558f62a316502d66dbc9fc416968a",
                "status": "modified"
            }
        ],
        "message": "CAY-1170 cdbgen task fails due to NPE when instantiating TypesHandler\n\npatch by Dima Loiko. Issue fixed\n\ngit-svn-id: https://svn.apache.org/repos/asf/cayenne/main/trunk@760797 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/cayenne/commit/5274ab1f1a2dad090e5fa68ab9805f98160e663f",
        "patched_files": [
            "DbGeneratorTask.java"
        ],
        "repo": "cayenne",
        "unit_tests": [
            "DbGeneratorTaskTest.java"
        ]
    },
    "cayenne_f93e708": {
        "bug_id": "cayenne_f93e708",
        "commit": "https://github.com/apache/cayenne/commit/f93e70888dab894142766935e94f3a093c3cc121",
        "file": [
            {
                "additions": 6,
                "blob_url": "https://github.com/apache/cayenne/blob/f93e70888dab894142766935e94f3a093c3cc121/cayenne-server/src/main/java/org/apache/cayenne/access/ResultScanParentAttachmentStrategy.java",
                "changes": 6,
                "contents_url": "https://api.github.com/repos/apache/cayenne/contents/cayenne-server/src/main/java/org/apache/cayenne/access/ResultScanParentAttachmentStrategy.java?ref=f93e70888dab894142766935e94f3a093c3cc121",
                "deletions": 0,
                "filename": "cayenne-server/src/main/java/org/apache/cayenne/access/ResultScanParentAttachmentStrategy.java",
                "patch": "@@ -100,6 +100,12 @@ private void indexParents() {\n         partitionByChild = new HashMap<Object, List<Persistent>>();\n \n         List<Persistent> objects = parentNode.getObjects();\n+        \n+        // this can be null if parent node returned no rows\n+        if(objects == null) {\n+            return;\n+        }\n+        \n         List<DataRow> rows = parentNode.getDataRows();\n         int size = objects.size();\n         for (int i = 0; i < size; i++) {",
                "raw_url": "https://github.com/apache/cayenne/raw/f93e70888dab894142766935e94f3a093c3cc121/cayenne-server/src/main/java/org/apache/cayenne/access/ResultScanParentAttachmentStrategy.java",
                "sha": "0e579bc1c05fa3a29733b6383d0ed315021b79cf",
                "status": "modified"
            },
            {
                "additions": 50,
                "blob_url": "https://github.com/apache/cayenne/blob/f93e70888dab894142766935e94f3a093c3cc121/cayenne-server/src/test/java/org/apache/cayenne/access/DataContextPrefetchMultistepTest.java",
                "changes": 50,
                "contents_url": "https://api.github.com/repos/apache/cayenne/contents/cayenne-server/src/test/java/org/apache/cayenne/access/DataContextPrefetchMultistepTest.java?ref=f93e70888dab894142766935e94f3a093c3cc121",
                "deletions": 0,
                "filename": "cayenne-server/src/test/java/org/apache/cayenne/access/DataContextPrefetchMultistepTest.java",
                "patch": "@@ -39,6 +39,7 @@\n import org.apache.cayenne.testdo.testmap.ArtistExhibit;\n import org.apache.cayenne.testdo.testmap.Exhibit;\n import org.apache.cayenne.testdo.testmap.Gallery;\n+import org.apache.cayenne.testdo.testmap.Painting;\n import org.apache.cayenne.unit.di.server.ServerCase;\n import org.apache.cayenne.unit.di.server.UseServerRuntime;\n \n@@ -100,6 +101,15 @@ protected void createTwoArtistsWithExhibitsDataSet() throws Exception {\n         tArtistExhibit.insert(101, 2);\n         tArtistExhibit.insert(101, 4);\n     }\n+    \n+    protected void createGalleriesAndArtists() throws Exception {\n+        tArtist.insert(11, \"artist2\");\n+        tArtist.insert(101, \"artist3\");\n+\n+        tGallery.insert(25, \"gallery1\");\n+        tGallery.insert(31, \"gallery2\");\n+        tGallery.insert(45, \"gallery3\");\n+    }\n \n     public void testToManyToManyFirstStepUnresolved() throws Exception {\n \n@@ -258,4 +268,44 @@ public void testMixedPrefetch2() throws Exception {\n         ArtistExhibit ae1 = aexhibits.get(0);\n         assertEquals(PersistenceState.COMMITTED, ae1.getPersistenceState());\n     }\n+    \n+    public void testToManyToOne_EmptyToMany() throws Exception {\n+\n+        createGalleriesAndArtists();\n+\n+        SelectQuery<Gallery> q = SelectQuery.query(Gallery.class, Gallery.GALLERY_NAME.eq(\"gallery2\"));\n+        q.addPrefetch(Gallery.PAINTING_ARRAY.disjoint());\n+        q.addPrefetch(Gallery.PAINTING_ARRAY.dot(Painting.TO_ARTIST).disjoint());\n+\n+        List<Gallery> galleries = context.select(q);\n+        assertEquals(1, galleries.size());\n+\n+        Gallery g2 = galleries.get(0);\n+\n+        // this relationship should be resolved\n+        assertTrue(g2.readPropertyDirectly(Gallery.PAINTING_ARRAY.getName()) instanceof ValueHolder);\n+        List<Painting> exhibits = (List<Painting>) g2.readPropertyDirectly(Gallery.PAINTING_ARRAY.getName());\n+        assertFalse(((ValueHolder) exhibits).isFault());\n+        assertEquals(0, exhibits.size());\n+    }\n+    \n+    public void testToManyToOne_EmptyToMany_NoRootQualifier() throws Exception {\n+\n+        createGalleriesAndArtists();\n+\n+        SelectQuery<Gallery> q = SelectQuery.query(Gallery.class);\n+        q.addPrefetch(Gallery.PAINTING_ARRAY.disjoint());\n+        q.addPrefetch(Gallery.PAINTING_ARRAY.dot(Painting.TO_ARTIST).disjoint());\n+\n+        List<Gallery> galleries = context.select(q);\n+        assertEquals(3, galleries.size());\n+\n+        Gallery g = galleries.get(0);\n+\n+        // this relationship should be resolved\n+        assertTrue(g.readPropertyDirectly(Gallery.PAINTING_ARRAY.getName()) instanceof ValueHolder);\n+        List<Painting> exhibits = (List<Painting>) g.readPropertyDirectly(Gallery.PAINTING_ARRAY.getName());\n+        assertFalse(((ValueHolder) exhibits).isFault());\n+        assertEquals(0, exhibits.size());\n+    }\n }",
                "raw_url": "https://github.com/apache/cayenne/raw/f93e70888dab894142766935e94f3a093c3cc121/cayenne-server/src/test/java/org/apache/cayenne/access/DataContextPrefetchMultistepTest.java",
                "sha": "59100e151b5f1bf07258a59e08139b5e86c3753d",
                "status": "modified"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/cayenne/blob/f93e70888dab894142766935e94f3a093c3cc121/docs/doc/src/main/resources/RELEASE-NOTES.txt",
                "changes": 1,
                "contents_url": "https://api.github.com/repos/apache/cayenne/contents/docs/doc/src/main/resources/RELEASE-NOTES.txt?ref=f93e70888dab894142766935e94f3a093c3cc121",
                "deletions": 0,
                "filename": "docs/doc/src/main/resources/RELEASE-NOTES.txt",
                "patch": "@@ -56,6 +56,7 @@ CAY-1877 In-memory evaluation of expression may fail with UnsupportedOpeartionEx\n CAY-1880 objectStore snapshots never cleared from RefreshQuery when \"use shared cache\" unchecked\n CAY-1881 CayenneModeler (Mac version) doesn't work with Java 7\n CAY-1885 Null value in subclass's field.\n+CAY-1905 Multi-step prefetching NPE : 1..N..1 with absent N and root with no qualifier\n \n ----------------------------------\n Release: 3.2M1",
                "raw_url": "https://github.com/apache/cayenne/raw/f93e70888dab894142766935e94f3a093c3cc121/docs/doc/src/main/resources/RELEASE-NOTES.txt",
                "sha": "1e9dda78e81ab5dd629c8b4f8a9ed5d673ac5b69",
                "status": "modified"
            }
        ],
        "message": "CAY-1905 Multi-step prefetching NPE : 1..N..1 with absent N and root with no qualifier\n\ngit-svn-id: https://svn.apache.org/repos/asf/cayenne/main/trunk@1576302 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/cayenne/commit/4680533dd55e89bc332b5acb272de1cf2921ea64",
        "patched_files": [
            "RELEASE-NOTES.java",
            "ResultScanParentAttachmentStrategy.java"
        ],
        "repo": "cayenne",
        "unit_tests": [
            "DataContextPrefetchMultistepTest.java"
        ]
    },
    "cayenne_f9e7f14": {
        "bug_id": "cayenne_f9e7f14",
        "commit": "https://github.com/apache/cayenne/commit/f9e7f1439fcc207e5eaf374c4cdc27ea41f668be",
        "file": [
            {
                "additions": 7,
                "blob_url": "https://github.com/apache/cayenne/blob/f9e7f1439fcc207e5eaf374c4cdc27ea41f668be/framework/cayenne-jpa-unpublished/src/main/java/org/apache/cayenne/jpa/bridge/DataMapConverter.java",
                "changes": 7,
                "contents_url": "https://api.github.com/repos/apache/cayenne/contents/framework/cayenne-jpa-unpublished/src/main/java/org/apache/cayenne/jpa/bridge/DataMapConverter.java?ref=f9e7f1439fcc207e5eaf374c4cdc27ea41f668be",
                "deletions": 0,
                "filename": "framework/cayenne-jpa-unpublished/src/main/java/org/apache/cayenne/jpa/bridge/DataMapConverter.java",
                "patch": "@@ -414,6 +414,13 @@ public boolean onStartNode(ProjectPath path) {\n             JpaId jpaTargetId = targetEntity.getAttributes().getId(\n                     jpaJoin.getReferencedColumnName());\n \n+            if (jpaTargetId == null) {\n+                throw new IllegalArgumentException(\"Null id \"\n+                        + targetEntity.getName()\n+                        + \".\"\n+                        + jpaJoin.getReferencedColumnName());\n+            }\n+\n             ObjRelationship objRelationship = (ObjRelationship) targetPath.getObject();\n             DataMap dataMap = objRelationship.getSourceEntity().getDataMap();\n ",
                "raw_url": "https://github.com/apache/cayenne/raw/f9e7f1439fcc207e5eaf374c4cdc27ea41f668be/framework/cayenne-jpa-unpublished/src/main/java/org/apache/cayenne/jpa/bridge/DataMapConverter.java",
                "sha": "2e53b245ab696cb223874a978c086ed140236e59",
                "status": "modified"
            }
        ],
        "message": "better NPE detection\n\ngit-svn-id: https://svn.apache.org/repos/asf/cayenne/main/trunk@571946 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/cayenne/commit/dedf848eac3111fbf60d6f9ceb0c6c814154d66f",
        "patched_files": [
            "DataMapConverter.java"
        ],
        "repo": "cayenne",
        "unit_tests": [
            "DataMapConverterTest.java"
        ]
    }
}