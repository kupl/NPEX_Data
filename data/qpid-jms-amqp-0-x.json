{
    "qpid-jms-amqp-0-x_3d4dd69": {
        "bug_id": "qpid-jms-amqp-0-x_3d4dd69",
        "commit": "https://github.com/apache/qpid-jms-amqp-0-x/commit/3d4dd6921516432ed8ea4db24513be5e664976c5",
        "file": [
            {
                "additions": 8,
                "blob_url": "https://github.com/apache/qpid-jms-amqp-0-x/blob/3d4dd6921516432ed8ea4db24513be5e664976c5/common/src/main/java/org/apache/qpid/util/FileUtils.java",
                "changes": 15,
                "contents_url": "https://api.github.com/repos/apache/qpid-jms-amqp-0-x/contents/common/src/main/java/org/apache/qpid/util/FileUtils.java?ref=3d4dd6921516432ed8ea4db24513be5e664976c5",
                "deletions": 7,
                "filename": "common/src/main/java/org/apache/qpid/util/FileUtils.java",
                "patch": "@@ -246,18 +246,19 @@ public static boolean delete(File file, boolean recursive)\n      {\n          boolean success = true;\n \n+         // If we have nothing to delete then it must be ok to say it was deleted.\n+         if (file == null)\n+         {\n+             return true;\n+         }\n+\n          if (file.isDirectory())\n          {\n              if (recursive)\n              {\n-                 try{\n-                     for (File subFile : file.listFiles())\n-                     {\n-                         success = delete(subFile, true) & success ;\n-                     }\n-                 }catch (NullPointerException npe)\n+                 for (File subFile : file.listFiles())\n                  {\n-                     success = false;\n+                     success = delete(subFile, true) & success ;\n                  }\n \n                  return success && file.delete();",
                "raw_url": "https://github.com/apache/qpid-jms-amqp-0-x/raw/3d4dd6921516432ed8ea4db24513be5e664976c5/common/src/main/java/org/apache/qpid/util/FileUtils.java",
                "sha": "585657c8bb65e7c6c894bb084131413f6fa48bdd",
                "status": "modified"
            }
        ],
        "message": "FileUtils : Was not correctly handling the case where a File object became null, it would previously have thrown a NPE which was erroneously caught this and declared the delete to have failed. If there is nothing to delete (signified by the Null File object) then the delete should pass.",
        "parent": "https://github.com/apache/qpid-jms-amqp-0-x/commit/e86a4b25e8e7bce808420c4fc1e210d5ea9fcc38",
        "repo": "qpid-jms-amqp-0-x",
        "unit_tests": [
            "FileUtilsTest.java",
            "TestFileUtils.java"
        ]
    },
    "qpid-jms-amqp-0-x_9191c2f": {
        "bug_id": "qpid-jms-amqp-0-x_9191c2f",
        "commit": "https://github.com/apache/qpid-jms-amqp-0-x/commit/9191c2fbc1c5445f1a1a32fcea43017bc5cdce9e",
        "file": [
            {
                "additions": 10,
                "blob_url": "https://github.com/apache/qpid-jms-amqp-0-x/blob/9191c2fbc1c5445f1a1a32fcea43017bc5cdce9e/common/src/main/java/org/apache/qpid/util/FileUtils.java",
                "changes": 12,
                "contents_url": "https://api.github.com/repos/apache/qpid-jms-amqp-0-x/contents/common/src/main/java/org/apache/qpid/util/FileUtils.java?ref=9191c2fbc1c5445f1a1a32fcea43017bc5cdce9e",
                "deletions": 2,
                "filename": "common/src/main/java/org/apache/qpid/util/FileUtils.java",
                "patch": "@@ -250,9 +250,17 @@ public static boolean delete(File file, boolean recursive)\n          {\n              if (recursive)\n              {\n-                 for (File subFile : file.listFiles())\n+                 File[] files = file.listFiles();\n+\n+                 // This can occur if the file is deleted outside the JVM\n+                 if (files == null)\n+                 {\n+                     return false;\n+                 }\n+\n+                 for (int i = 0; i < files.length; i++)\n                  {\n-                     success = delete(subFile, true) && success;\n+                     success = delete(files[i], true) && success;\n                  }\n \n                  return success && file.delete();",
                "raw_url": "https://github.com/apache/qpid-jms-amqp-0-x/raw/9191c2fbc1c5445f1a1a32fcea43017bc5cdce9e/common/src/main/java/org/apache/qpid/util/FileUtils.java",
                "sha": "63222b50dbb3388a97f67b1b163e85fbd6eb831d",
                "status": "modified"
            }
        ],
        "message": "QPID-1803 : Fixed potential NPE in FileUtils.delete",
        "parent": "https://github.com/apache/qpid-jms-amqp-0-x/commit/a2d1e294924f8dc029bf0cd7a77c5301add1c660",
        "repo": "qpid-jms-amqp-0-x",
        "unit_tests": [
            "FileUtilsTest.java",
            "TestFileUtils.java"
        ]
    },
    "qpid-jms-amqp-0-x_c688883": {
        "bug_id": "qpid-jms-amqp-0-x_c688883",
        "commit": "https://github.com/apache/qpid-jms-amqp-0-x/commit/c6888830df344eb707696468c14532c12f763e75",
        "file": [
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/qpid-jms-amqp-0-x/blob/c6888830df344eb707696468c14532c12f763e75/client/src/main/java/org/apache/qpid/client/AMQConnection.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/qpid-jms-amqp-0-x/contents/client/src/main/java/org/apache/qpid/client/AMQConnection.java?ref=c6888830df344eb707696468c14532c12f763e75",
                "deletions": 1,
                "filename": "client/src/main/java/org/apache/qpid/client/AMQConnection.java",
                "patch": "@@ -124,7 +124,7 @@\n      * the handler deals with this. It also deals with the initial dispatch of any protocol frames to their appropriate\n      * handler.\n      */\n-    private AMQProtocolHandler _protocolHandler;\n+    private final AMQProtocolHandler _protocolHandler;\n \n     /** Maps from session id (Integer) to AMQSession instance */\n     private final ChannelToSessionMap _sessions = new ChannelToSessionMap();",
                "raw_url": "https://github.com/apache/qpid-jms-amqp-0-x/raw/c6888830df344eb707696468c14532c12f763e75/client/src/main/java/org/apache/qpid/client/AMQConnection.java",
                "sha": "7b0de011cd7e7aa5477f81be59ee2644119f4113",
                "status": "modified"
            },
            {
                "additions": 9,
                "blob_url": "https://github.com/apache/qpid-jms-amqp-0-x/blob/c6888830df344eb707696468c14532c12f763e75/client/src/main/java/org/apache/qpid/client/AMQProtocolHandler.java",
                "changes": 13,
                "contents_url": "https://api.github.com/repos/apache/qpid-jms-amqp-0-x/contents/client/src/main/java/org/apache/qpid/client/AMQProtocolHandler.java?ref=c6888830df344eb707696468c14532c12f763e75",
                "deletions": 4,
                "filename": "client/src/main/java/org/apache/qpid/client/AMQProtocolHandler.java",
                "patch": "@@ -109,16 +109,16 @@\n     /** Used to provide a condition to wait upon for operations that are required to wait for failover to complete. */\n     private CountDownLatch _failoverLatch;\n \n+    /** Object to lock on when changing the _failoverLatch  */\n+    private final Object _failoverLatchChange = new Object();\n+\n     /** The last failover exception that occurred */\n     private FailoverException _lastFailoverException;\n \n     /** Defines the default timeout to use for synchronous protocol commands. */\n     private final long DEFAULT_SYNC_TIMEOUT = Long.getLong(ClientProperties.QPID_SYNC_OP_TIMEOUT,\n                                                            Long.getLong(AMQJ_DEFAULT_SYNCWRITE_TIMEOUT,\n                                                                         ClientProperties.DEFAULT_SYNC_OPERATION_TIMEOUT));\n-\n-    /** Object to lock on when changing the latch */\n-    private Object _failoverLatchChange = new Object();\n     private ClientDecoder _decoder;\n \n     private ProtocolVersion _suggestedProtocolVersion;\n@@ -744,13 +744,18 @@ public String generateQueueName()\n \n     public CountDownLatch getFailoverLatch()\n     {\n-        return _failoverLatch;\n+        synchronized (_failoverLatchChange)\n+        {\n+            _logger.debug(\"Failover latch retrieved : {}\", _failoverLatch);\n+            return _failoverLatch;\n+        }\n     }\n \n     public void setFailoverLatch(CountDownLatch failoverLatch)\n     {\n         synchronized (_failoverLatchChange)\n         {\n+            _logger.debug(\"Failover latch set : {}\", failoverLatch);\n             _failoverLatch = failoverLatch;\n         }\n     }",
                "raw_url": "https://github.com/apache/qpid-jms-amqp-0-x/raw/c6888830df344eb707696468c14532c12f763e75/client/src/main/java/org/apache/qpid/client/AMQProtocolHandler.java",
                "sha": "8f33374c34965bc43073dcffe9d9a566ea5a46b1",
                "status": "modified"
            }
        ],
        "message": "QPID-7077: [Java Client] Make access to _failoverLatch thread safe\n\n* Also added logging to better understand the sporadic NPE.",
        "parent": "https://github.com/apache/qpid-jms-amqp-0-x/commit/5ad6ffa51768c806665dd48102f4ceee2804e801",
        "repo": "qpid-jms-amqp-0-x",
        "unit_tests": [
            "AMQProtocolHandlerTest.java"
        ]
    },
    "qpid-jms-amqp-0-x_e84c44f": {
        "bug_id": "qpid-jms-amqp-0-x_e84c44f",
        "commit": "https://github.com/apache/qpid-jms-amqp-0-x/commit/e84c44f82e77ec557b382eb4ea6aeb34bae71068",
        "file": [
            {
                "additions": 13,
                "blob_url": "https://github.com/apache/qpid-jms-amqp-0-x/blob/e84c44f82e77ec557b382eb4ea6aeb34bae71068/client/src/main/java/org/apache/qpid/client/AMQSession_0_10.java",
                "changes": 18,
                "contents_url": "https://api.github.com/repos/apache/qpid-jms-amqp-0-x/contents/client/src/main/java/org/apache/qpid/client/AMQSession_0_10.java?ref=e84c44f82e77ec557b382eb4ea6aeb34bae71068",
                "deletions": 5,
                "filename": "client/src/main/java/org/apache/qpid/client/AMQSession_0_10.java",
                "patch": "@@ -1159,15 +1159,23 @@ public boolean isQueueExist(String queueName, boolean assertNode,\n         }\n         catch(SessionException e)\n         {\n-            if (e.getException().getErrorCode() == ExecutionErrorCode.RESOURCE_DELETED\n-                    || e.getException().getErrorCode() == ExecutionErrorCode.NOT_FOUND)\n+            final ExecutionException underlying = e.getException();\n+            if (underlying == null)\n             {\n-                match = false;\n+                throw new QpidException(\"Error querying queue\", e);\n             }\n             else\n             {\n-                throw new AMQException(AMQConstant.getConstant(e.getException().getErrorCode().getValue()),\n-                        \"Error querying queue\",e);\n+                if (underlying.getErrorCode() == ExecutionErrorCode.RESOURCE_DELETED\n+                    || underlying.getErrorCode() == ExecutionErrorCode.NOT_FOUND)\n+                {\n+                    match = false;\n+                }\n+                else\n+                {\n+                    throw new AMQException(AMQConstant.getConstant(underlying.getErrorCode().getValue()),\n+                                           \"Error querying queue\", e);\n+                }\n             }\n         }\n         return match;",
                "raw_url": "https://github.com/apache/qpid-jms-amqp-0-x/raw/e84c44f82e77ec557b382eb4ea6aeb34bae71068/client/src/main/java/org/apache/qpid/client/AMQSession_0_10.java",
                "sha": "00932953c597774d68520b5fe3e27cddd3fca4b1",
                "status": "modified"
            }
        ],
        "message": "QPID-7507: [Java Client] Prevent AMQSession_0_10#isQueueExist() failing with NPE if AMQP times-out",
        "parent": "https://github.com/apache/qpid-jms-amqp-0-x/commit/7163547faee673e30037fe6325fc904c5d74b7ca",
        "repo": "qpid-jms-amqp-0-x",
        "unit_tests": [
            "AMQSession_0_10Test.java"
        ]
    },
    "qpid-jms-amqp-0-x_f56f17e": {
        "bug_id": "qpid-jms-amqp-0-x_f56f17e",
        "commit": "https://github.com/apache/qpid-jms-amqp-0-x/commit/f56f17e16cb8903971dd7930b7a05ae6b09905de",
        "file": [
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/qpid-jms-amqp-0-x/blob/f56f17e16cb8903971dd7930b7a05ae6b09905de/client/src/main/java/org/apache/qpid/client/message/AMQMessageDelegate_0_10.java",
                "changes": 3,
                "contents_url": "https://api.github.com/repos/apache/qpid-jms-amqp-0-x/contents/client/src/main/java/org/apache/qpid/client/message/AMQMessageDelegate_0_10.java?ref=f56f17e16cb8903971dd7930b7a05ae6b09905de",
                "deletions": 1,
                "filename": "client/src/main/java/org/apache/qpid/client/message/AMQMessageDelegate_0_10.java",
                "patch": "@@ -732,7 +732,8 @@ public String getStringProperty(String propertyName) throws JMSException\n     {\n         if (propertyName.equals(CustomJMSXProperty.JMSXUserID.toString()))\n         {\n-            return new String(_messageProps.getUserId());\n+            final byte[] userIdBytes = _messageProps.getUserId();\n+            return userIdBytes == null ? null : new String(userIdBytes);\n         }\n         else if (QpidMessageProperties.AMQP_0_10_APP_ID.equals(propertyName) &&\n                 _messageProps.getAppId() != null)",
                "raw_url": "https://github.com/apache/qpid-jms-amqp-0-x/raw/f56f17e16cb8903971dd7930b7a05ae6b09905de/client/src/main/java/org/apache/qpid/client/message/AMQMessageDelegate_0_10.java",
                "sha": "ad9a37479e15b717719b406e883f474755c5e84f",
                "status": "modified"
            }
        ],
        "message": "QPID-5569 : NPE on getStringProperty(\"JMSXUserId\")",
        "parent": "https://github.com/apache/qpid-jms-amqp-0-x/commit/0c7a23c7621a4982b66b125ef7c5fb0c9a80a301",
        "repo": "qpid-jms-amqp-0-x",
        "unit_tests": [
            "AMQMessageDelegate_0_10Test.java"
        ]
    }
}