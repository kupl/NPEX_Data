[
    {
        "repo": "maven-scm",
        "commit": "https://github.com/apache/maven-scm/commit/0f7292086489b0ecc79fff14f00ba20f9efa2bd9",
        "bug_id": "maven-scm_0f72920",
        "message": "[SCM-441] NPE when using Git SCM 1.2-SNAPSHOT\nSubmitted by Mark Struberg \n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/scm/trunk@755751 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/maven-scm/commit/6345f6737b95f33a010e1355881a0585769ca752",
        "patched_files": [
            "git-update-latest-rev.out",
            "GitUpdateCommand.java",
            "GitUpdateCommandConsumer.java",
            "GitLatestRevisionCommandConsumer.java"
        ],
        "file": [
            {
                "status": "added",
                "additions": 100,
                "raw_url": "https://github.com/apache/maven-scm/raw/0f7292086489b0ecc79fff14f00ba20f9efa2bd9/maven-scm-providers/maven-scm-providers-git/maven-scm-provider-gitexe/src/main/java/org/apache/maven/scm/provider/git/gitexe/command/update/GitLatestRevisionCommandConsumer.java",
                "contents_url": "https://api.github.com/repos/apache/maven-scm/contents/maven-scm-providers/maven-scm-providers-git/maven-scm-provider-gitexe/src/main/java/org/apache/maven/scm/provider/git/gitexe/command/update/GitLatestRevisionCommandConsumer.java?ref=0f7292086489b0ecc79fff14f00ba20f9efa2bd9",
                "filename": "maven-scm-providers/maven-scm-providers-git/maven-scm-provider-gitexe/src/main/java/org/apache/maven/scm/provider/git/gitexe/command/update/GitLatestRevisionCommandConsumer.java",
                "deletions": 0,
                "sha": "d008d4a0b05732e3957c00569147af43ed43f141",
                "blob_url": "https://github.com/apache/maven-scm/blob/0f7292086489b0ecc79fff14f00ba20f9efa2bd9/maven-scm-providers/maven-scm-providers-git/maven-scm-provider-gitexe/src/main/java/org/apache/maven/scm/provider/git/gitexe/command/update/GitLatestRevisionCommandConsumer.java",
                "patch": "@@ -0,0 +1,100 @@\n+package org.apache.maven.scm.provider.git.gitexe.command.update;\n+\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+import org.apache.maven.scm.log.ScmLogger;\n+import org.apache.maven.scm.util.AbstractConsumer;\n+import org.apache.regexp.RE;\n+import org.apache.regexp.RESyntaxException;\n+import org.codehaus.plexus.util.StringUtils;\n+\n+/**\n+ * @author <a href=\"mailto:struberg@yahoo.de\">Mark Struberg</a>\n+ * @version $Id$\n+ */\n+public class GitLatestRevisionCommandConsumer\n+    extends AbstractConsumer\n+{\n+\n+    /**\n+     * The pattern used to match git log latest revision lines\n+     */\n+    private static final String LATESTREV_PATTERN = \"^commit \\\\s*(.*)\";\n+\n+    /**\n+     * The regular expression used to match git log latest revision lines\n+     */\n+    private RE latestRevRegexp;\n+\n+    private String latestRevision;\n+\n+    public GitLatestRevisionCommandConsumer( ScmLogger logger )\n+    {\n+        super( logger );\n+\n+        try\n+        {\n+            latestRevRegexp = new RE( LATESTREV_PATTERN );\n+        }\n+        catch ( RESyntaxException ex )\n+        {\n+            throw new RuntimeException(\n+                                        \"INTERNAL ERROR: Could not create regexp to parse git log file. This shouldn't happen. Something is probably wrong with the oro installation.\",\n+                                        ex );\n+        }\n+\n+    }\n+\n+    /** {@inheritDoc} */\n+    public void consumeLine( String line )\n+    {\n+        if ( getLogger().isDebugEnabled() )\n+        {\n+            getLogger().debug( \"GitLatestRevisionCommandConsumer consumeLine : \" + line );\n+        }\n+        if ( line == null || StringUtils.isEmpty( line ) )\n+        {\n+            return;\n+        }\n+\n+        processGetLatestRevision( line );\n+    }\n+\n+    public String getLatestRevision()\n+    {\n+        return latestRevision;\n+    }\n+\n+    /**\n+     * Process the current input line for the latest revision\n+     *\n+     * @param line A line of text from the git log output\n+     */\n+    private void processGetLatestRevision( String line )\n+    {\n+        if ( !latestRevRegexp.match( line ) )\n+        {\n+            return;\n+        }\n+\n+        latestRevision = latestRevRegexp.getParen( 1 );\n+    }\n+\n+}",
                "changes": 100
            },
            {
                "status": "modified",
                "additions": 52,
                "raw_url": "https://github.com/apache/maven-scm/raw/0f7292086489b0ecc79fff14f00ba20f9efa2bd9/maven-scm-providers/maven-scm-providers-git/maven-scm-provider-gitexe/src/main/java/org/apache/maven/scm/provider/git/gitexe/command/update/GitUpdateCommand.java",
                "contents_url": "https://api.github.com/repos/apache/maven-scm/contents/maven-scm-providers/maven-scm-providers-git/maven-scm-provider-gitexe/src/main/java/org/apache/maven/scm/provider/git/gitexe/command/update/GitUpdateCommand.java?ref=0f7292086489b0ecc79fff14f00ba20f9efa2bd9",
                "filename": "maven-scm-providers/maven-scm-providers-git/maven-scm-provider-gitexe/src/main/java/org/apache/maven/scm/provider/git/gitexe/command/update/GitUpdateCommand.java",
                "deletions": 4,
                "sha": "99c2c9df08facdf988c7f3d0de8e748059a8c6aa",
                "blob_url": "https://github.com/apache/maven-scm/blob/0f7292086489b0ecc79fff14f00ba20f9efa2bd9/maven-scm-providers/maven-scm-providers-git/maven-scm-provider-gitexe/src/main/java/org/apache/maven/scm/provider/git/gitexe/command/update/GitUpdateCommand.java",
                "patch": "@@ -19,6 +19,8 @@\n  * under the License.\n  */\n \n+import java.io.File;\n+\n import org.apache.maven.scm.ScmBranch;\n import org.apache.maven.scm.ScmException;\n import org.apache.maven.scm.ScmFileSet;\n@@ -63,7 +65,7 @@ protected UpdateScmResult executeUpdateCommand( ScmProviderRepository repo, ScmF\n \n         CommandLineUtils.StringStreamConsumer stderr = new CommandLineUtils.StringStreamConsumer();\n \n-        Commandline cl = createCommandLine( repository, fileSet, scmVersion );\n+        Commandline cl = createCommandLine( repository, fileSet.getBasedir(), scmVersion );\n         exitCode = GitCommandLineUtils.execute( cl, consumer, stderr, getLogger() );\n         if ( exitCode != 0 )\n         {\n@@ -74,7 +76,23 @@ protected UpdateScmResult executeUpdateCommand( ScmProviderRepository repo, ScmF\n             return new UpdateScmResult( cl.toString(), \"The git-pull origin master command failed.\",\n                                         stderr.getOutput(), false );\n         }\n-        return new UpdateScmResultWithRevision( cl.toString(), consumer.getUpdatedFiles(), null );\n+        \n+        // now let's get the latest version\n+        Commandline clRev = createLatestRevisionCommandLine( repository, fileSet.getBasedir(), scmVersion );\n+        GitLatestRevisionCommandConsumer consumerRev = new GitLatestRevisionCommandConsumer( getLogger() );\n+        exitCode = GitCommandLineUtils.execute( clRev, consumerRev, stderr, getLogger() );\n+        if ( exitCode != 0 )\n+        {\n+            if ( getLogger().isWarnEnabled() )\n+            {\n+                getLogger().warn( \"failed to update git, return code \" + exitCode );\n+            }\n+            return new UpdateScmResult( cl.toString(), \"The git-log command failed.\",\n+                                        stderr.getOutput(), false );\n+        }\n+        String latestRevision = consumerRev.getLatestRevision();\n+        \n+        return new UpdateScmResultWithRevision( cl.toString(), consumer.getUpdatedFiles(), latestRevision );\n     }\n \n     /** {@inheritDoc} */\n@@ -89,9 +107,9 @@ protected ChangeLogCommand getChangeLogCommand()\n     /**\n      * create the command line for updating the current branch with the info from the foreign repository. \n      */\n-    public static Commandline createCommandLine( GitScmProviderRepository repository, ScmFileSet fileSet, ScmVersion scmVersion ) \n+    public static Commandline createCommandLine( GitScmProviderRepository repository, File workingDirectory, ScmVersion scmVersion ) \n     {\n-        Commandline cl = GitCommandLineUtils.getBaseGitCommandLine( fileSet.getBasedir(), \"pull\" );\n+        Commandline cl = GitCommandLineUtils.getBaseGitCommandLine( workingDirectory, \"pull\" );\n         \n         cl.createArg().setLine( \"origin\" );\n \n@@ -107,4 +125,34 @@ public static Commandline createCommandLine( GitScmProviderRepository repository\n         \n         return cl;\n     }\n+    \n+    /**\n+     * @param scmVersion a valid branch or <code>null</code> if the master branch should be taken\n+     * @return CommandLine for getting the latest commit on the given branch\n+     */\n+    public static Commandline createLatestRevisionCommandLine(GitScmProviderRepository repository, File workingDirectory,\n+                                                               ScmVersion scmVersion)\n+    {\n+        Commandline cl = GitCommandLineUtils.getBaseGitCommandLine( workingDirectory, \"log\" );\n+        \n+        // only show exactly 1 commit\n+        cl.createArg().setValue( \"-n1\" ); \n+        \n+        // same as --topo-order, but ensure ordering of merges\n+        cl.createArg().setValue( \"--date-order\" );\n+        \n+        if ( scmVersion != null && scmVersion instanceof ScmBranch && \n+             scmVersion.getName() != null && scmVersion.getName().length() > 0 )\n+        {\n+            // if any branch is given, lets take em\n+            cl.createArg().setValue( scmVersion.getName() );\n+        }\n+        else\n+        {\n+            // otherwise we work on the master branch\n+            cl.createArg().setValue( \"master\" );\n+        }\n+        \n+        return cl;\n+    }\n }",
                "changes": 56
            },
            {
                "status": "added",
                "additions": 77,
                "raw_url": "https://github.com/apache/maven-scm/raw/0f7292086489b0ecc79fff14f00ba20f9efa2bd9/maven-scm-providers/maven-scm-providers-git/maven-scm-provider-gitexe/src/test/java/org/apache/maven/scm/provider/git/gitexe/command/update/GitLatestRevisionCommandConsumerTest.java",
                "contents_url": "https://api.github.com/repos/apache/maven-scm/contents/maven-scm-providers/maven-scm-providers-git/maven-scm-provider-gitexe/src/test/java/org/apache/maven/scm/provider/git/gitexe/command/update/GitLatestRevisionCommandConsumerTest.java?ref=0f7292086489b0ecc79fff14f00ba20f9efa2bd9",
                "filename": "maven-scm-providers/maven-scm-providers-git/maven-scm-provider-gitexe/src/test/java/org/apache/maven/scm/provider/git/gitexe/command/update/GitLatestRevisionCommandConsumerTest.java",
                "deletions": 0,
                "sha": "59c9c2942c77c93078fc276dd6612cf5ae17de66",
                "blob_url": "https://github.com/apache/maven-scm/blob/0f7292086489b0ecc79fff14f00ba20f9efa2bd9/maven-scm-providers/maven-scm-providers-git/maven-scm-provider-gitexe/src/test/java/org/apache/maven/scm/provider/git/gitexe/command/update/GitLatestRevisionCommandConsumerTest.java",
                "patch": "@@ -0,0 +1,77 @@\n+package org.apache.maven.scm.provider.git.gitexe.command.update;\n+\n+import java.io.BufferedReader;\n+import java.io.File;\n+import java.io.Reader;\n+\n+import org.apache.maven.scm.log.DefaultLog;\n+import org.codehaus.plexus.PlexusTestCase;\n+import org.codehaus.plexus.util.ReaderFactory;\n+\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+/**\n+ * @author <a href=\"mailto:struberg@yahoo.de\">Mark Struberg</a>\n+ * @since 1.2\n+ * @version $Id$\n+ */\n+public class GitLatestRevisionCommandConsumerTest\n+    extends PlexusTestCase\n+{\n+    public void testUpToDate()\n+        throws Exception\n+    {\n+\n+        GitLatestRevisionCommandConsumer consumer = buildGitLatestRevisionCommandConsumer( \"/src/test/resources/git/update/git-update-latest-rev.out\" );\n+\n+        String latestRev = consumer.getLatestRevision();\n+\n+        assertNotNull( latestRev );\n+        assertEquals( \"a300c56a341bae8d0eb5ec4ed5551a11c75a5a6e\", latestRev );\n+    }\n+\n+    \n+    // utils methods\n+\n+    private GitLatestRevisionCommandConsumer buildGitLatestRevisionCommandConsumer( String fileName )\n+        throws Exception\n+    {\n+        GitLatestRevisionCommandConsumer consumer = new GitLatestRevisionCommandConsumer( new DefaultLog() );\n+\n+        BufferedReader r = getGitLogBufferedReader( fileName );\n+\n+        String line;\n+\n+        while ( ( line = r.readLine() ) != null )\n+        {\n+            //System.out.println(\" line \" + line );\n+            consumer.consumeLine( line );\n+        }\n+        return consumer;\n+    }\n+\n+    private BufferedReader getGitLogBufferedReader( String fileName )\n+        throws Exception\n+    {\n+        File f = getTestFile( fileName );\n+        Reader reader = ReaderFactory.newReader( f, \"UTF-8\" );\n+        return new BufferedReader( reader );\n+    }\n+}",
                "changes": 77
            },
            {
                "status": "modified",
                "additions": 4,
                "raw_url": "https://github.com/apache/maven-scm/raw/0f7292086489b0ecc79fff14f00ba20f9efa2bd9/maven-scm-providers/maven-scm-providers-git/maven-scm-provider-gitexe/src/test/java/org/apache/maven/scm/provider/git/gitexe/command/update/GitUpdateCommandConsumerTest.java",
                "contents_url": "https://api.github.com/repos/apache/maven-scm/contents/maven-scm-providers/maven-scm-providers-git/maven-scm-provider-gitexe/src/test/java/org/apache/maven/scm/provider/git/gitexe/command/update/GitUpdateCommandConsumerTest.java?ref=0f7292086489b0ecc79fff14f00ba20f9efa2bd9",
                "filename": "maven-scm-providers/maven-scm-providers-git/maven-scm-provider-gitexe/src/test/java/org/apache/maven/scm/provider/git/gitexe/command/update/GitUpdateCommandConsumerTest.java",
                "deletions": 2,
                "sha": "3ede9539fa54a4ace1eca4c32f91240c1438bd85",
                "blob_url": "https://github.com/apache/maven-scm/blob/0f7292086489b0ecc79fff14f00ba20f9efa2bd9/maven-scm-providers/maven-scm-providers-git/maven-scm-provider-gitexe/src/test/java/org/apache/maven/scm/provider/git/gitexe/command/update/GitUpdateCommandConsumerTest.java",
                "patch": "@@ -98,8 +98,10 @@ public void testOneUpdateOtherFormat()\n     \n     \n     \n-    // utils methods\n-\n+    // ----------------------------------------------------------------------\n+    // private helper functions\n+    // ----------------------------------------------------------------------\n+    \n     private void assertOneUpdate( String fileName )\n         throws Exception\n     {",
                "changes": 6
            },
            {
                "status": "added",
                "additions": 89,
                "raw_url": "https://github.com/apache/maven-scm/raw/0f7292086489b0ecc79fff14f00ba20f9efa2bd9/maven-scm-providers/maven-scm-providers-git/maven-scm-provider-gitexe/src/test/java/org/apache/maven/scm/provider/git/gitexe/command/update/GitUpdateCommandTest.java",
                "contents_url": "https://api.github.com/repos/apache/maven-scm/contents/maven-scm-providers/maven-scm-providers-git/maven-scm-provider-gitexe/src/test/java/org/apache/maven/scm/provider/git/gitexe/command/update/GitUpdateCommandTest.java?ref=0f7292086489b0ecc79fff14f00ba20f9efa2bd9",
                "filename": "maven-scm-providers/maven-scm-providers-git/maven-scm-provider-gitexe/src/test/java/org/apache/maven/scm/provider/git/gitexe/command/update/GitUpdateCommandTest.java",
                "deletions": 0,
                "sha": "57e609a1134ea3a741874b437dcc85194dacc504",
                "blob_url": "https://github.com/apache/maven-scm/blob/0f7292086489b0ecc79fff14f00ba20f9efa2bd9/maven-scm-providers/maven-scm-providers-git/maven-scm-provider-gitexe/src/test/java/org/apache/maven/scm/provider/git/gitexe/command/update/GitUpdateCommandTest.java",
                "patch": "@@ -0,0 +1,89 @@\n+package org.apache.maven.scm.provider.git.gitexe.command.update;\n+\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+import org.apache.maven.scm.ScmBranch;\n+import org.apache.maven.scm.ScmTestCase;\n+import org.apache.maven.scm.ScmVersion;\n+import org.apache.maven.scm.provider.git.repository.GitScmProviderRepository;\n+import org.apache.maven.scm.repository.ScmRepository;\n+import org.codehaus.plexus.util.cli.Commandline;\n+\n+import java.io.File;\n+\n+/**\n+ * @author <a href=\"mailto:struberg@yahoo.de\">Mark Struberg</a>\n+ * @version $Id$\n+ */\n+public class GitUpdateCommandTest\n+    extends ScmTestCase\n+{\n+    public void testCommandLineNoBranch()\n+        throws Exception\n+    {\n+        testCommandLine( \"scm:git:http://foo.com/git\", null, \"git pull origin master\" );\n+    }\n+\n+    public void testCommandLineWithBranch()\n+    throws Exception\n+    {\n+        testCommandLine( \"scm:git:http://foo.com/git\", new ScmBranch( \"mybranch\" ), \"git pull origin mybranch\" );\n+    }\n+\n+\n+    public void testCommandLineLatestRevision()\n+        throws Exception\n+    {\n+        testLatestRevisionCommandLine( \"scm:git:http://foo.com/git\", null, \"git log -n1 --date-order master\"  );\n+    }\n+    \n+    // ----------------------------------------------------------------------\n+    // private helper functions\n+    // ----------------------------------------------------------------------\n+\n+    private void testCommandLine( String scmUrl, ScmVersion branch, String commandLine )\n+        throws Exception\n+    {\n+        File workingDirectory = getTestFile( \"target/git-update-command-test\" );\n+\n+        ScmRepository repository = getScmManager().makeScmRepository( scmUrl );\n+\n+        GitScmProviderRepository gitRepository = (GitScmProviderRepository) repository.getProviderRepository();\n+\n+        Commandline cl = GitUpdateCommand.createCommandLine( gitRepository, workingDirectory, branch );\n+\n+        assertCommandLine( commandLine, workingDirectory, cl );\n+    }\n+\n+    private void testLatestRevisionCommandLine( String scmUrl, ScmBranch branch, String commandLine )\n+    throws Exception\n+    {\n+        File workingDirectory = getTestFile( \"target/git-update-command-test\" );\n+    \n+        ScmRepository repository = getScmManager().makeScmRepository( scmUrl );\n+    \n+        GitScmProviderRepository gitRepository = (GitScmProviderRepository) repository.getProviderRepository();\n+    \n+        Commandline cl = GitUpdateCommand.createLatestRevisionCommandLine( gitRepository, workingDirectory, branch );\n+    \n+        assertCommandLine( commandLine, workingDirectory, cl );\n+    }\n+\n+}",
                "changes": 89
            },
            {
                "status": "added",
                "additions": 5,
                "raw_url": "https://github.com/apache/maven-scm/raw/0f7292086489b0ecc79fff14f00ba20f9efa2bd9/maven-scm-providers/maven-scm-providers-git/maven-scm-provider-gitexe/src/test/resources/git/update/git-update-latest-rev.out",
                "contents_url": "https://api.github.com/repos/apache/maven-scm/contents/maven-scm-providers/maven-scm-providers-git/maven-scm-provider-gitexe/src/test/resources/git/update/git-update-latest-rev.out?ref=0f7292086489b0ecc79fff14f00ba20f9efa2bd9",
                "filename": "maven-scm-providers/maven-scm-providers-git/maven-scm-provider-gitexe/src/test/resources/git/update/git-update-latest-rev.out",
                "deletions": 0,
                "sha": "8349bee81afc5ddb59a489607b1a345d3fbbfc82",
                "blob_url": "https://github.com/apache/maven-scm/blob/0f7292086489b0ecc79fff14f00ba20f9efa2bd9/maven-scm-providers/maven-scm-providers-git/maven-scm-provider-gitexe/src/test/resources/git/update/git-update-latest-rev.out",
                "patch": "@@ -0,0 +1,5 @@\n+commit a300c56a341bae8d0eb5ec4ed5551a11c75a5a6e\n+Author: Mark Struberg <struberg@yahoo.de>\n+Date:   Wed Mar 18 15:59:31 2009 +0100\n+\n+    No msg",
                "changes": 5
            }
        ],
        "unit_tests": [
            "GitUpdateCommandTest.java",
            "GitUpdateCommandConsumerTest.java",
            "GitLatestRevisionCommandConsumerTest.java"
        ]
    },
    {
        "buggy": false,
        "test_file": "maven-scm-providers/maven-scm-providers-git/maven-scm-provider-gitexe/src/test/java/org/apache/maven/scm/provider/git/gitexe/command/update/GitUpdateCommandConsumerTest.java",
        "buggy_files": [
            "maven-scm-providers/maven-scm-providers-git/maven-scm-provider-gitexe/target/test-classes/git/update/git-update-latest-rev.out",
            "maven-scm-providers/maven-scm-providers-git/maven-scm-provider-gitexe/src/test/resources/git/update/git-update-latest-rev.out",
            "maven-scm-providers/maven-scm-providers-git/maven-scm-provider-gitexe/src/main/java/org/apache/maven/scm/provider/git/gitexe/command/update/GitUpdateCommand.java",
            "maven-scm-providers/maven-scm-providers-git/maven-scm-provider-gitexe/src/main/java/org/apache/maven/scm/provider/git/gitexe/command/update/GitUpdateCommandConsumer.java",
            "maven-scm-providers/maven-scm-providers-git/maven-scm-provider-gitexe/src/main/java/org/apache/maven/scm/provider/git/gitexe/command/update/GitLatestRevisionCommandConsumer.java"
        ],
        "fixed": true
    }
]