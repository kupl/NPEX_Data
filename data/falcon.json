{
    "falcon_52586b3": {
        "bug_id": "falcon_52586b3",
        "commit": "https://github.com/apache/falcon/commit/52586b3e36b93dd71d9325f190dcb0917a42bda7",
        "file": [
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/falcon/blob/52586b3e36b93dd71d9325f190dcb0917a42bda7/CHANGES.txt",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/falcon/contents/CHANGES.txt?ref=52586b3e36b93dd71d9325f190dcb0917a42bda7",
                "deletions": 0,
                "filename": "CHANGES.txt",
                "patch": "@@ -23,6 +23,8 @@ Trunk (Unreleased)\n   OPTIMIZATIONS\n \n   BUG FIXES\n+    FALCON-1461 NPE in DateValidator validate(Raghav Kumar Gautam via Sowmya Ramesh)\n+\n     FALCON-1446 Flaky TaskLogRetrieverYarnTest(Narayan Periwal via Pallavi Rao)\n \n     FALCON-1443 NPE in shutdown hook(Pallavi Rao via Ajay Yadava)",
                "raw_url": "https://github.com/apache/falcon/raw/52586b3e36b93dd71d9325f190dcb0917a42bda7/CHANGES.txt",
                "sha": "b7a28316efe1d9139555361272ad6b33940f5836",
                "status": "modified"
            },
            {
                "additions": 5,
                "blob_url": "https://github.com/apache/falcon/blob/52586b3e36b93dd71d9325f190dcb0917a42bda7/client/src/main/java/org/apache/falcon/entity/v0/DateValidator.java",
                "changes": 6,
                "contents_url": "https://api.github.com/repos/apache/falcon/contents/client/src/main/java/org/apache/falcon/entity/v0/DateValidator.java?ref=52586b3e36b93dd71d9325f190dcb0917a42bda7",
                "deletions": 1,
                "filename": "client/src/main/java/org/apache/falcon/entity/v0/DateValidator.java",
                "patch": "@@ -17,6 +17,8 @@\n  */\n package org.apache.falcon.entity.v0;\n \n+import org.apache.commons.lang3.StringUtils;\n+\n import java.util.regex.Matcher;\n import java.util.regex.Pattern;\n \n@@ -39,7 +41,9 @@ private DateValidator() {\n      * @return true valid date fromat, false invalid date format\n      */\n     public static boolean validate(final String date) {\n-\n+        if (StringUtils.isBlank(date)) {\n+            return false;\n+        }\n         Matcher matcher = PATTERN.matcher(date);\n \n         if (matcher.matches()) {",
                "raw_url": "https://github.com/apache/falcon/raw/52586b3e36b93dd71d9325f190dcb0917a42bda7/client/src/main/java/org/apache/falcon/entity/v0/DateValidator.java",
                "sha": "e211f57d01ddcd974fe1c3be3915f1821148531a",
                "status": "modified"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/falcon/blob/52586b3e36b93dd71d9325f190dcb0917a42bda7/client/src/test/java/org/apache/falcon/entity/v0/DateValidatorTest.java",
                "changes": 1,
                "contents_url": "https://api.github.com/repos/apache/falcon/contents/client/src/test/java/org/apache/falcon/entity/v0/DateValidatorTest.java?ref=52586b3e36b93dd71d9325f190dcb0917a42bda7",
                "deletions": 0,
                "filename": "client/src/test/java/org/apache/falcon/entity/v0/DateValidatorTest.java",
                "patch": "@@ -62,6 +62,7 @@\n             new Object[]{\"2010-6-31T00:00Z\", }, new Object[]{\"2010-06-31T00:00Z\", },\n             new Object[]{\"2010-9-31T00:00Z\", }, new Object[]{\"2010-09-31T00:00Z\", },\n             new Object[]{\"2010-11-31T00:00Z\", }, new Object[]{\"1999-04-31T01:00Z\", },\n+            new Object[]{null, }, new Object[]{\"\", }, new Object[]{\"      \", },\n         };\n     }\n ",
                "raw_url": "https://github.com/apache/falcon/raw/52586b3e36b93dd71d9325f190dcb0917a42bda7/client/src/test/java/org/apache/falcon/entity/v0/DateValidatorTest.java",
                "sha": "a1adb2440c059f83d6dde79701535e32ff323d5a",
                "status": "modified"
            }
        ],
        "message": "FALCON-1461 NPE in DateValidator validate. Contributed by Raghav Kumar Gautam",
        "parent": "https://github.com/apache/falcon/commit/947ed13b71aa80236396cbe86549feeb1c509a1c",
        "repo": "falcon",
        "unit_tests": [
            "DateValidatorTest.java"
        ]
    },
    "falcon_662adb2": {
        "bug_id": "falcon_662adb2",
        "commit": "https://github.com/apache/falcon/commit/662adb2154cbd47bbdaebceae529013ed37d125f",
        "file": [
            {
                "additions": 3,
                "blob_url": "https://github.com/apache/falcon/blob/662adb2154cbd47bbdaebceae529013ed37d125f/CHANGES.txt",
                "changes": 3,
                "contents_url": "https://api.github.com/repos/apache/falcon/contents/CHANGES.txt?ref=662adb2154cbd47bbdaebceae529013ed37d125f",
                "deletions": 0,
                "filename": "CHANGES.txt",
                "patch": "@@ -16,6 +16,9 @@ Trunk (Unreleased)\n   OPTIMIZATIONS\n \n   BUG FIXES\n+   FALCON-459 Lineage resource API fails with NPE for bad query params\n+   (Sowmya Ramesh via Venkatesh Seetharam)\n+\n    FALCON-456 Custom DistCp conflict with core DistCp in container classpath\n    fails falcon workflows (Venkatesh Seetharam)\n ",
                "raw_url": "https://github.com/apache/falcon/raw/662adb2154cbd47bbdaebceae529013ed37d125f/CHANGES.txt",
                "sha": "b24fc4b0f4de27d5ac55cc2a559eb5631c401cef",
                "status": "modified"
            },
            {
                "additions": 30,
                "blob_url": "https://github.com/apache/falcon/blob/662adb2154cbd47bbdaebceae529013ed37d125f/prism/src/main/java/org/apache/falcon/resource/metadata/LineageMetadataResource.java",
                "changes": 42,
                "contents_url": "https://api.github.com/repos/apache/falcon/contents/prism/src/main/java/org/apache/falcon/resource/metadata/LineageMetadataResource.java?ref=662adb2154cbd47bbdaebceae529013ed37d125f",
                "deletions": 12,
                "filename": "prism/src/main/java/org/apache/falcon/resource/metadata/LineageMetadataResource.java",
                "patch": "@@ -38,6 +38,7 @@\n import org.codehaus.jettison.json.JSONObject;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n+import org.apache.commons.lang.StringUtils;\n \n import javax.ws.rs.DefaultValue;\n import javax.ws.rs.GET;\n@@ -143,6 +144,7 @@ public Response getVertices() {\n     public Response getVertex(@PathParam(\"id\") final String vertexId) {\n         checkIfMetadataMappingServiceIsEnabled();\n         LOG.info(\"Get vertex for vertexId= {}\", vertexId);\n+        validateInputs(\"Invalid argument: vertex id passed is null or empty.\", vertexId);\n         try {\n             Vertex vertex = findVertex(vertexId);\n \n@@ -182,6 +184,7 @@ public Response getVertexProperties(@PathParam(\"id\") final String vertexId,\n                                         final String relationships) {\n         checkIfMetadataMappingServiceIsEnabled();\n         LOG.info(\"Get vertex for vertexId= {}\", vertexId);\n+        validateInputs(\"Invalid argument: vertex id passed is null or empty.\", vertexId);\n         try {\n             Vertex vertex = findVertex(vertexId);\n \n@@ -281,6 +284,7 @@ public Response getVertices(@QueryParam(\"key\") final String key,\n                                 @QueryParam(\"value\") final String value) {\n         checkIfMetadataMappingServiceIsEnabled();\n         LOG.info(\"Get vertices for property key= {}, value= {}\", key, value);\n+        validateInputs(\"Invalid argument: key or value passed is null or empty.\", key, value);\n         try {\n             JSONObject response = buildJSONResponse(getGraph().getVertices(key, value));\n             return Response.ok(response).build();\n@@ -305,6 +309,8 @@ public Response getVertexEdges(@PathParam(\"id\") String vertexId,\n                                    @PathParam(\"direction\") String direction) {\n         checkIfMetadataMappingServiceIsEnabled();\n         LOG.info(\"Get vertex edges for vertexId= {}, direction= {}\", vertexId, direction);\n+        // Validate vertex id. Direction is validated in VertexQueryArguments.\n+        validateInputs(\"Invalid argument: vertex id or direction passed is null or empty.\", vertexId, direction);\n         try {\n             Vertex vertex = findVertex(vertexId);\n \n@@ -394,6 +400,7 @@ public Response getEdges() {\n     public Response getEdge(@PathParam(\"id\") final String edgeId) {\n         checkIfMetadataMappingServiceIsEnabled();\n         LOG.info(\"Get vertex for edgeId= {}\", edgeId);\n+        validateInputs(\"Invalid argument: edge id passed is null or empty.\", edgeId);\n         try {\n             Edge edge = getGraph().getEdge(edgeId);\n             if (edge == null) {\n@@ -439,6 +446,17 @@ private void checkIfMetadataMappingServiceIsEnabled() {\n         }\n     }\n \n+    private static void validateInputs(String errorMsg, String... inputs) {\n+        for (String input : inputs) {\n+            if (StringUtils.isEmpty(input)) {\n+                throw new WebApplicationException(Response.status(Response.Status.BAD_REQUEST)\n+                        .entity(errorMsg)\n+                        .type(\"text/plain\")\n+                        .build());\n+            }\n+        }\n+    }\n+\n     private enum ReturnType {VERTICES, EDGES, COUNT, VERTEX_IDS}\n \n     public static final String OUT_E = \"outE\";\n@@ -464,51 +482,51 @@ private void checkIfMetadataMappingServiceIsEnabled() {\n         private final boolean countOnly;\n \n         public VertexQueryArguments(String directionSegment) {\n-            if (directionSegment.equals(OUT_E)) {\n+            if (OUT_E.equals(directionSegment)) {\n                 returnType = ReturnType.EDGES;\n                 queryDirection = Direction.OUT;\n                 countOnly = false;\n-            } else if (directionSegment.equals(IN_E)) {\n+            } else if (IN_E.equals(directionSegment)) {\n                 returnType = ReturnType.EDGES;\n                 queryDirection = Direction.IN;\n                 countOnly = false;\n-            } else if (directionSegment.equals(BOTH_E)) {\n+            } else if (BOTH_E.equals(directionSegment)) {\n                 returnType = ReturnType.EDGES;\n                 queryDirection = Direction.BOTH;\n                 countOnly = false;\n-            } else if (directionSegment.equals(OUT)) {\n+            } else if (OUT.equals(directionSegment)) {\n                 returnType = ReturnType.VERTICES;\n                 queryDirection = Direction.OUT;\n                 countOnly = false;\n-            } else if (directionSegment.equals(IN)) {\n+            } else if (IN.equals(directionSegment)) {\n                 returnType = ReturnType.VERTICES;\n                 queryDirection = Direction.IN;\n                 countOnly = false;\n-            } else if (directionSegment.equals(BOTH)) {\n+            } else if (BOTH.equals(directionSegment)) {\n                 returnType = ReturnType.VERTICES;\n                 queryDirection = Direction.BOTH;\n                 countOnly = false;\n-            } else if (directionSegment.equals(BOTH_COUNT)) {\n+            } else if (BOTH_COUNT.equals(directionSegment)) {\n                 returnType = ReturnType.COUNT;\n                 queryDirection = Direction.BOTH;\n                 countOnly = true;\n-            } else if (directionSegment.equals(IN_COUNT)) {\n+            } else if (IN_COUNT.equals(directionSegment)) {\n                 returnType = ReturnType.COUNT;\n                 queryDirection = Direction.IN;\n                 countOnly = true;\n-            } else if (directionSegment.equals(OUT_COUNT)) {\n+            } else if (OUT_COUNT.equals(directionSegment)) {\n                 returnType = ReturnType.COUNT;\n                 queryDirection = Direction.OUT;\n                 countOnly = true;\n-            } else if (directionSegment.equals(BOTH_IDS)) {\n+            } else if (BOTH_IDS.equals(directionSegment)) {\n                 returnType = ReturnType.VERTEX_IDS;\n                 queryDirection = Direction.BOTH;\n                 countOnly = false;\n-            } else if (directionSegment.equals(IN_IDS)) {\n+            } else if (IN_IDS.equals(directionSegment)) {\n                 returnType = ReturnType.VERTEX_IDS;\n                 queryDirection = Direction.IN;\n                 countOnly = false;\n-            } else if (directionSegment.equals(OUT_IDS)) {\n+            } else if (OUT_IDS.equals(directionSegment)) {\n                 returnType = ReturnType.VERTEX_IDS;\n                 queryDirection = Direction.OUT;\n                 countOnly = false;",
                "raw_url": "https://github.com/apache/falcon/raw/662adb2154cbd47bbdaebceae529013ed37d125f/prism/src/main/java/org/apache/falcon/resource/metadata/LineageMetadataResource.java",
                "sha": "cf6b6b1ea3fa47a0105ae5a0a118f9aa560355ff",
                "status": "modified"
            },
            {
                "additions": 21,
                "blob_url": "https://github.com/apache/falcon/blob/662adb2154cbd47bbdaebceae529013ed37d125f/prism/src/test/java/org/apache/falcon/resource/metadata/LineageMetadataResourceTest.java",
                "changes": 21,
                "contents_url": "https://api.github.com/repos/apache/falcon/contents/prism/src/test/java/org/apache/falcon/resource/metadata/LineageMetadataResourceTest.java?ref=662adb2154cbd47bbdaebceae529013ed37d125f",
                "deletions": 0,
                "filename": "prism/src/test/java/org/apache/falcon/resource/metadata/LineageMetadataResourceTest.java",
                "patch": "@@ -214,6 +214,18 @@ public void testGetVerticesWithKeyValue() throws Exception {\n         assertBasicVertexProperties(vertex, vertexProperties);\n     }\n \n+    @Test\n+    public void testGetVerticesWithInvalidKeyValue() throws Exception {\n+        LineageMetadataResource resource = new LineageMetadataResource();\n+        try {\n+            resource.getVertices(null, null);\n+        } catch(WebApplicationException e) {\n+            Assert.assertEquals(e.getResponse().getStatus(), Response.Status.BAD_REQUEST.getStatusCode());\n+            Assert.assertEquals(e.getResponse().getEntity().toString(),\n+                    \"Invalid argument: key or value passed is null or empty.\");\n+        }\n+    }\n+\n     @Test\n     public void testVertexEdgesForIdAndDirectionOut() throws Exception {\n         String processInstance = PROCESS_ENTITY_NAME + \"/2014-01-01T01:00Z\";\n@@ -265,6 +277,15 @@ public void testVertexEdgesForIdAndDirectionBoth() throws Exception {\n         verifyVertexEdgesCount(vertexId, LineageMetadataResource.BOTH_IDS, expectedSize);\n     }\n \n+\n+\n+    @Test (expectedExceptions = WebApplicationException.class)\n+    public void testVertexEdgesForIdAndInvalidDirection() throws Exception {\n+        LineageMetadataResource resource = new LineageMetadataResource();\n+        resource.getVertexEdges(\"0\", \"blah\");\n+        Assert.fail(\"The API call should have thrown an exception\");\n+    }\n+\n     private void verifyVertexEdges(String vertexId, String direction,\n                                    int expectedSize, List<String> expected) {\n         LineageMetadataResource resource = new LineageMetadataResource();",
                "raw_url": "https://github.com/apache/falcon/raw/662adb2154cbd47bbdaebceae529013ed37d125f/prism/src/test/java/org/apache/falcon/resource/metadata/LineageMetadataResourceTest.java",
                "sha": "26c24c70f9a476e81ca2cd8aad08fa9a55cdf675",
                "status": "modified"
            }
        ],
        "message": "FALCON-459 Lineage resource API fails with NPE for bad query params. Contributed by Sowmya Ramesh",
        "parent": "https://github.com/apache/falcon/commit/ab07b44bb76237765e6dc2d8c576d69ac70a59a9",
        "repo": "falcon",
        "unit_tests": [
            "LineageMetadataResourceTest.java"
        ]
    },
    "falcon_8542798": {
        "bug_id": "falcon_8542798",
        "commit": "https://github.com/apache/falcon/commit/85427981afeacef84ef3c10fc5fc4190cf291545",
        "file": [
            {
                "additions": 3,
                "blob_url": "https://github.com/apache/falcon/blob/85427981afeacef84ef3c10fc5fc4190cf291545/CHANGES.txt",
                "changes": 3,
                "contents_url": "https://api.github.com/repos/apache/falcon/contents/CHANGES.txt?ref=85427981afeacef84ef3c10fc5fc4190cf291545",
                "deletions": 0,
                "filename": "CHANGES.txt",
                "patch": "@@ -61,6 +61,9 @@ Trunk (Unreleased)\n   OPTIMIZATIONS\n \n   BUG FIXES\n+   FALCON-598 ProcessHelper throws NPE if the process has no inputs OR no\n+   outputs defined (Balu Vellanki via Venkatesh Seetharam)\n+\n    FALCON-583 Post processing is broken in current trunk\n    (Venkatesh Seetharam via Suhas Vasu)\n ",
                "raw_url": "https://github.com/apache/falcon/raw/85427981afeacef84ef3c10fc5fc4190cf291545/CHANGES.txt",
                "sha": "ae8e03d675b16250a4cf749373db003633078664",
                "status": "modified"
            },
            {
                "additions": 10,
                "blob_url": "https://github.com/apache/falcon/blob/85427981afeacef84ef3c10fc5fc4190cf291545/client/src/main/java/org/apache/falcon/resource/EntityList.java",
                "changes": 16,
                "contents_url": "https://api.github.com/repos/apache/falcon/contents/client/src/main/java/org/apache/falcon/resource/EntityList.java?ref=85427981afeacef84ef3c10fc5fc4190cf291545",
                "deletions": 6,
                "filename": "client/src/main/java/org/apache/falcon/resource/EntityList.java",
                "patch": "@@ -140,14 +140,18 @@ public String toString() {\n         }\n \n         if (process != null) {\n-            for (Input i : process.getInputs().getInputs()) {\n-                if (i.getFeed().equals(entityNameToMatch)) {\n-                    tagList.add(\"Input\");\n+            if (process.getInputs() != null) {\n+                for (Input i : process.getInputs().getInputs()) {\n+                    if (i.getFeed().equals(entityNameToMatch)) {\n+                        tagList.add(\"Input\");\n+                    }\n                 }\n             }\n-            for (Output o : process.getOutputs().getOutputs()) {\n-                if (o.getFeed().equals(entityNameToMatch)) {\n-                    tagList.add(\"Output\");\n+            if (process.getOutputs() != null) {\n+                for (Output o : process.getOutputs().getOutputs()) {\n+                    if (o.getFeed().equals(entityNameToMatch)) {\n+                        tagList.add(\"Output\");\n+                    }\n                 }\n             }\n         }",
                "raw_url": "https://github.com/apache/falcon/raw/85427981afeacef84ef3c10fc5fc4190cf291545/client/src/main/java/org/apache/falcon/resource/EntityList.java",
                "sha": "2de177d19def70091476fe36f025b3565da6c091",
                "status": "modified"
            },
            {
                "additions": 8,
                "blob_url": "https://github.com/apache/falcon/blob/85427981afeacef84ef3c10fc5fc4190cf291545/common/src/main/java/org/apache/falcon/entity/ProcessHelper.java",
                "changes": 14,
                "contents_url": "https://api.github.com/repos/apache/falcon/contents/common/src/main/java/org/apache/falcon/entity/ProcessHelper.java?ref=85427981afeacef84ef3c10fc5fc4190cf291545",
                "deletions": 6,
                "filename": "common/src/main/java/org/apache/falcon/entity/ProcessHelper.java",
                "patch": "@@ -59,16 +59,18 @@ public static String getProcessWorkflowName(String workflowName, String processN\n             return storageType;\n         }\n \n-        for (Input input : process.getInputs().getInputs()) {\n-            Feed feed = EntityUtil.getEntity(EntityType.FEED, input.getFeed());\n-            storageType = FeedHelper.getStorageType(feed, cluster);\n-            if (Storage.TYPE.TABLE == storageType) {\n-                break;\n+        if (process.getInputs() != null) {\n+            for (Input input : process.getInputs().getInputs()) {\n+                Feed feed = EntityUtil.getEntity(EntityType.FEED, input.getFeed());\n+                storageType = FeedHelper.getStorageType(feed, cluster);\n+                if (Storage.TYPE.TABLE == storageType) {\n+                    break;\n+                }\n             }\n         }\n \n         // If input feeds storage type is file system check storage type of output feeds\n-        if (Storage.TYPE.FILESYSTEM == storageType) {\n+        if (process.getOutputs() != null && Storage.TYPE.FILESYSTEM == storageType) {\n             for (Output output : process.getOutputs().getOutputs()) {\n                 Feed feed = EntityUtil.getEntity(EntityType.FEED, output.getFeed());\n                 storageType = FeedHelper.getStorageType(feed, cluster);",
                "raw_url": "https://github.com/apache/falcon/raw/85427981afeacef84ef3c10fc5fc4190cf291545/common/src/main/java/org/apache/falcon/entity/ProcessHelper.java",
                "sha": "8e0c87a2087ccdd1f3f6676d07f73ba7aa0cd26b",
                "status": "modified"
            },
            {
                "additions": 10,
                "blob_url": "https://github.com/apache/falcon/blob/85427981afeacef84ef3c10fc5fc4190cf291545/common/src/main/java/org/apache/falcon/metadata/EntityRelationshipGraphBuilder.java",
                "changes": 14,
                "contents_url": "https://api.github.com/repos/apache/falcon/contents/common/src/main/java/org/apache/falcon/metadata/EntityRelationshipGraphBuilder.java?ref=85427981afeacef84ef3c10fc5fc4190cf291545",
                "deletions": 4,
                "filename": "common/src/main/java/org/apache/falcon/metadata/EntityRelationshipGraphBuilder.java",
                "patch": "@@ -358,8 +358,11 @@ private void updateProcessInputs(Inputs oldProcessInputs, Inputs newProcessInput\n     }\n \n     public static boolean areSame(Inputs oldProcessInputs, Inputs newProcessInputs) {\n-        if (oldProcessInputs == null && newProcessInputs == null\n-                || oldProcessInputs == null || newProcessInputs == null\n+        if (oldProcessInputs == null && newProcessInputs == null) {\n+            return true;\n+        }\n+\n+        if (oldProcessInputs == null || newProcessInputs == null\n                 || oldProcessInputs.getInputs().size() != newProcessInputs.getInputs().size()) {\n             return false;\n         }\n@@ -418,8 +421,11 @@ private void updateProcessOutputs(Outputs oldProcessOutputs, Outputs newProcessO\n     }\n \n     public static boolean areSame(Outputs oldProcessOutputs, Outputs newProcessOutputs) {\n-        if (oldProcessOutputs == null && newProcessOutputs == null\n-                || oldProcessOutputs == null || newProcessOutputs == null\n+        if (oldProcessOutputs == null && newProcessOutputs == null) {\n+            return true;\n+        }\n+\n+        if (oldProcessOutputs == null || newProcessOutputs == null\n                 || oldProcessOutputs.getOutputs().size() != newProcessOutputs.getOutputs().size()) {\n             return false;\n         }",
                "raw_url": "https://github.com/apache/falcon/raw/85427981afeacef84ef3c10fc5fc4190cf291545/common/src/main/java/org/apache/falcon/metadata/EntityRelationshipGraphBuilder.java",
                "sha": "1b7a068a321e5e2a2836799996e054aa629f163a",
                "status": "modified"
            },
            {
                "additions": 37,
                "blob_url": "https://github.com/apache/falcon/blob/85427981afeacef84ef3c10fc5fc4190cf291545/common/src/test/java/org/apache/falcon/metadata/MetadataMappingServiceTest.java",
                "changes": 38,
                "contents_url": "https://api.github.com/repos/apache/falcon/contents/common/src/test/java/org/apache/falcon/metadata/MetadataMappingServiceTest.java?ref=85427981afeacef84ef3c10fc5fc4190cf291545",
                "deletions": 1,
                "filename": "common/src/test/java/org/apache/falcon/metadata/MetadataMappingServiceTest.java",
                "patch": "@@ -34,6 +34,10 @@\n import org.apache.falcon.entity.v0.feed.LocationType;\n import org.apache.falcon.entity.v0.feed.Locations;\n import org.apache.falcon.entity.v0.process.EngineType;\n+import org.apache.falcon.entity.v0.process.Input;\n+import org.apache.falcon.entity.v0.process.Inputs;\n+import org.apache.falcon.entity.v0.process.Output;\n+import org.apache.falcon.entity.v0.process.Outputs;\n import org.apache.falcon.entity.v0.process.Process;\n import org.apache.falcon.security.CurrentUser;\n import org.apache.falcon.service.Services;\n@@ -261,7 +265,8 @@ public void testOnFeedEntityChange() throws Exception {\n         Feed oldFeed = inputFeeds.get(0);\n         Feed newFeed = EntityBuilderTestUtil.buildFeed(oldFeed.getName(), clusterEntity,\n                 \"classified-as=Secured,source=data-warehouse\", \"reporting\");\n-        addStorage(newFeed, Storage.TYPE.FILESYSTEM, \"jail://global:00/falcon/impression-feed/20140101\");\n+        addStorage(newFeed, Storage.TYPE.FILESYSTEM,\n+                \"jail://global:00/falcon/impression-feed/20140101\");\n \n         try {\n             configStore.initiateUpdate(newFeed);\n@@ -324,6 +329,37 @@ public void testOnProcessEntityChange() throws Exception {\n         Assert.assertEquals(getEdgesCount(service.getGraph()), 69); // -6 = -2 outputs, -1 tag, -1 cluster, -2 pipelines\n     }\n \n+    @Test(dependsOnMethods = \"testOnProcessEntityChange\")\n+    public void testAreSame() throws Exception {\n+\n+        Inputs inputs1 = new Inputs();\n+        Inputs inputs2 = new Inputs();\n+        Outputs outputs1 = new Outputs();\n+        Outputs outputs2 = new Outputs();\n+        // return true when both are null\n+        Assert.assertTrue(EntityRelationshipGraphBuilder.areSame(inputs1, inputs2));\n+        Assert.assertTrue(EntityRelationshipGraphBuilder.areSame(outputs1, outputs2));\n+\n+        Input i1 = new Input();\n+        i1.setName(\"input1\");\n+        Input i2 = new Input();\n+        i2.setName(\"input2\");\n+        Output o1 = new Output();\n+        o1.setName(\"output1\");\n+        Output o2 = new Output();\n+        o2.setName(\"output2\");\n+\n+        inputs1.getInputs().add(i1);\n+        Assert.assertFalse(EntityRelationshipGraphBuilder.areSame(inputs1, inputs2));\n+        outputs1.getOutputs().add(o1);\n+        Assert.assertFalse(EntityRelationshipGraphBuilder.areSame(outputs1, outputs2));\n+\n+        inputs2.getInputs().add(i1);\n+        Assert.assertTrue(EntityRelationshipGraphBuilder.areSame(inputs1, inputs2));\n+        outputs2.getOutputs().add(o1);\n+        Assert.assertTrue(EntityRelationshipGraphBuilder.areSame(outputs1, outputs2));\n+    }\n+\n     private void verifyUpdatedEdges(Process newProcess) {\n         Vertex processVertex = getEntityVertex(newProcess.getName(), RelationshipType.PROCESS_ENTITY);\n ",
                "raw_url": "https://github.com/apache/falcon/raw/85427981afeacef84ef3c10fc5fc4190cf291545/common/src/test/java/org/apache/falcon/metadata/MetadataMappingServiceTest.java",
                "sha": "b51caf89fd15320f5904eb3d65971d428b2de3a6",
                "status": "modified"
            },
            {
                "additions": 72,
                "blob_url": "https://github.com/apache/falcon/blob/85427981afeacef84ef3c10fc5fc4190cf291545/oozie/src/test/java/org/apache/falcon/oozie/process/OozieProcessWorkflowBuilderTest.java",
                "changes": 79,
                "contents_url": "https://api.github.com/repos/apache/falcon/contents/oozie/src/test/java/org/apache/falcon/oozie/process/OozieProcessWorkflowBuilderTest.java?ref=85427981afeacef84ef3c10fc5fc4190cf291545",
                "deletions": 7,
                "filename": "oozie/src/test/java/org/apache/falcon/oozie/process/OozieProcessWorkflowBuilderTest.java",
                "patch": "@@ -461,7 +461,8 @@ public void testHiveProcessWithNoInputsAndOutputs(String secureOption) throws Ex\n \n         ACTION hiveNode = getAction(parentWorkflow, \"user-action\");\n \n-        JAXBElement<org.apache.falcon.oozie.hive.ACTION> actionJaxbElement = OozieUtils.unMarshalHiveAction(hiveNode);\n+        JAXBElement<org.apache.falcon.oozie.hive.ACTION> actionJaxbElement = OozieUtils.unMarshalHiveAction(\n+                hiveNode);\n         org.apache.falcon.oozie.hive.ACTION hiveAction = actionJaxbElement.getValue();\n \n         Assert.assertEquals(hiveAction.getScript(),\n@@ -572,14 +573,18 @@ public void testProcessMapperForTableStorage(String secureOption) throws Excepti\n     private Map<String, String> getExpectedProperties(Feed inFeed, Feed outFeed,\n                                                       Process process) throws FalconException {\n         Map<String, String> expected = new HashMap<String, String>();\n-        for (Input input : process.getInputs().getInputs()) {\n-            CatalogStorage storage = (CatalogStorage) FeedHelper.createStorage(cluster, inFeed);\n-            propagateStorageProperties(input.getName(), storage, expected);\n+        if (process.getInputs() != null) {\n+            for (Input input : process.getInputs().getInputs()) {\n+                CatalogStorage storage = (CatalogStorage) FeedHelper.createStorage(cluster, inFeed);\n+                propagateStorageProperties(input.getName(), storage, expected);\n+            }\n         }\n \n-        for (Output output : process.getOutputs().getOutputs()) {\n-            CatalogStorage storage = (CatalogStorage) FeedHelper.createStorage(cluster, outFeed);\n-            propagateStorageProperties(output.getName(), storage, expected);\n+        if (process.getOutputs() != null) {\n+            for (Output output : process.getOutputs().getOutputs()) {\n+                CatalogStorage storage = (CatalogStorage) FeedHelper.createStorage(cluster, outFeed);\n+                propagateStorageProperties(output.getName(), storage, expected);\n+            }\n         }\n \n         return expected;\n@@ -696,4 +701,64 @@ public void testProcessWithNoInputsAndOutputs() throws Exception {\n             Assert.assertTrue(props.containsKey(property), \"expected property missing: \" + property);\n         }\n     }\n+\n+    @Test\n+    public void testProcessWithInputsNoOutputs() throws Exception {\n+        ClusterHelper.getInterface(cluster, Interfacetype.WRITE).setEndpoint(hdfsUrl);\n+\n+        URL resource = this.getClass().getResource(\"/config/process/process-no-outputs.xml\");\n+        Process processEntity = (Process) EntityType.PROCESS.getUnmarshaller().unmarshal(resource);\n+        ConfigurationStore.get().publish(EntityType.PROCESS, processEntity);\n+\n+        OozieEntityBuilder builder = OozieEntityBuilder.get(processEntity);\n+        Path bundlePath = new Path(\"/falcon/staging/workflows\", processEntity.getName());\n+        builder.build(cluster, bundlePath);\n+        assertTrue(fs.exists(bundlePath));\n+\n+        BUNDLEAPP bundle = getBundle(fs, bundlePath);\n+        assertEquals(EntityUtil.getWorkflowName(processEntity).toString(), bundle.getName());\n+        assertEquals(1, bundle.getCoordinator().size());\n+        assertEquals(EntityUtil.getWorkflowName(Tag.DEFAULT, processEntity).toString(),\n+                bundle.getCoordinator().get(0).getName());\n+        String coordPath = bundle.getCoordinator().get(0).getAppPath().replace(\"${nameNode}\", \"\");\n+\n+        COORDINATORAPP coord = getCoordinator(fs, new Path(coordPath));\n+        HashMap<String, String> props = getCoordProperties(coord);\n+        verifyEntityProperties(processEntity, cluster,\n+                WorkflowExecutionContext.EntityOperations.GENERATE, props);\n+        verifyBrokerProperties(cluster, props);\n+\n+        Assert.assertEquals(props.get(WorkflowExecutionArgs.INPUT_FEED_NAMES.getName()), \"clicks\");\n+        Assert.assertEquals(props.get(WorkflowExecutionArgs.FEED_NAMES.getName()), \"NONE\");\n+    }\n+\n+    @Test\n+    public void testProcessNoInputsWithOutputs() throws Exception {\n+        ClusterHelper.getInterface(cluster, Interfacetype.WRITE).setEndpoint(hdfsUrl);\n+\n+        URL resource = this.getClass().getResource(\"/config/process/process-no-inputs.xml\");\n+        Process processEntity = (Process) EntityType.PROCESS.getUnmarshaller().unmarshal(resource);\n+        ConfigurationStore.get().publish(EntityType.PROCESS, processEntity);\n+\n+        OozieEntityBuilder builder = OozieEntityBuilder.get(processEntity);\n+        Path bundlePath = new Path(\"/falcon/staging/workflows\", processEntity.getName());\n+        builder.build(cluster, bundlePath);\n+        assertTrue(fs.exists(bundlePath));\n+\n+        BUNDLEAPP bundle = getBundle(fs, bundlePath);\n+        assertEquals(EntityUtil.getWorkflowName(processEntity).toString(), bundle.getName());\n+        assertEquals(1, bundle.getCoordinator().size());\n+        assertEquals(EntityUtil.getWorkflowName(Tag.DEFAULT, processEntity).toString(),\n+                bundle.getCoordinator().get(0).getName());\n+        String coordPath = bundle.getCoordinator().get(0).getAppPath().replace(\"${nameNode}\", \"\");\n+\n+        COORDINATORAPP coord = getCoordinator(fs, new Path(coordPath));\n+        HashMap<String, String> props = getCoordProperties(coord);\n+        verifyEntityProperties(processEntity, cluster,\n+                WorkflowExecutionContext.EntityOperations.GENERATE, props);\n+        verifyBrokerProperties(cluster, props);\n+\n+        Assert.assertEquals(props.get(WorkflowExecutionArgs.FEED_NAMES.getName()), \"impressions\");\n+        Assert.assertEquals(props.get(WorkflowExecutionArgs.INPUT_FEED_NAMES.getName()), \"NONE\");\n+    }\n }",
                "raw_url": "https://github.com/apache/falcon/raw/85427981afeacef84ef3c10fc5fc4190cf291545/oozie/src/test/java/org/apache/falcon/oozie/process/OozieProcessWorkflowBuilderTest.java",
                "sha": "4daf5d8bd8df6b6a1cd9ac44bbc69a8700798a6d",
                "status": "modified"
            },
            {
                "additions": 43,
                "blob_url": "https://github.com/apache/falcon/blob/85427981afeacef84ef3c10fc5fc4190cf291545/oozie/src/test/resources/config/process/process-no-inputs.xml",
                "changes": 43,
                "contents_url": "https://api.github.com/repos/apache/falcon/contents/oozie/src/test/resources/config/process/process-no-inputs.xml?ref=85427981afeacef84ef3c10fc5fc4190cf291545",
                "deletions": 0,
                "filename": "oozie/src/test/resources/config/process/process-no-inputs.xml",
                "patch": "@@ -0,0 +1,43 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<!--\n+  Licensed to the Apache Software Foundation (ASF) under one\n+  or more contributor license agreements.  See the NOTICE file\n+  distributed with this work for additional information\n+  regarding copyright ownership.  The ASF licenses this file\n+  to you under the Apache License, Version 2.0 (the\n+  \"License\"); you may not use this file except in compliance\n+  with the License.  You may obtain a copy of the License at\n+\n+      http://www.apache.org/licenses/LICENSE-2.0\n+\n+  Unless required by applicable law or agreed to in writing, software\n+  distributed under the License is distributed on an \"AS IS\" BASIS,\n+  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+  See the License for the specific language governing permissions and\n+  limitations under the License.\n+  -->\n+<process name=\"process-no-inputs\" xmlns=\"uri:falcon:process:0.1\">\n+    <!-- where -->\n+    <clusters>\n+        <cluster name=\"corp\">\n+            <validity start=\"2011-11-02T00:00Z\" end=\"2011-12-30T00:00Z\"/>\n+        </cluster>\n+    </clusters>\n+\n+    <!-- when -->\n+    <parallel>1</parallel>\n+    <order>LIFO</order>\n+    <frequency>hours(1)</frequency>\n+    <timezone>UTC</timezone>\n+\n+    <!-- what = outputs only -->\n+    <outputs>\n+        <output name=\"clicksummary\" feed=\"impressions\" instance=\"today(0,0)\"/>\n+    </outputs>\n+\n+    <!-- how -->\n+    <workflow engine=\"pig\" path=\"/apps/pig/id.pig\"/>\n+\n+    <retry policy=\"periodic\" delay=\"hours(10)\" attempts=\"3\"/>\n+\n+</process>",
                "raw_url": "https://github.com/apache/falcon/raw/85427981afeacef84ef3c10fc5fc4190cf291545/oozie/src/test/resources/config/process/process-no-inputs.xml",
                "sha": "85d01dba2ee0761a4237f42527ad4f82e7edd5b3",
                "status": "added"
            },
            {
                "additions": 43,
                "blob_url": "https://github.com/apache/falcon/blob/85427981afeacef84ef3c10fc5fc4190cf291545/oozie/src/test/resources/config/process/process-no-outputs.xml",
                "changes": 43,
                "contents_url": "https://api.github.com/repos/apache/falcon/contents/oozie/src/test/resources/config/process/process-no-outputs.xml?ref=85427981afeacef84ef3c10fc5fc4190cf291545",
                "deletions": 0,
                "filename": "oozie/src/test/resources/config/process/process-no-outputs.xml",
                "patch": "@@ -0,0 +1,43 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<!--\n+  Licensed to the Apache Software Foundation (ASF) under one\n+  or more contributor license agreements.  See the NOTICE file\n+  distributed with this work for additional information\n+  regarding copyright ownership.  The ASF licenses this file\n+  to you under the Apache License, Version 2.0 (the\n+  \"License\"); you may not use this file except in compliance\n+  with the License.  You may obtain a copy of the License at\n+\n+      http://www.apache.org/licenses/LICENSE-2.0\n+\n+  Unless required by applicable law or agreed to in writing, software\n+  distributed under the License is distributed on an \"AS IS\" BASIS,\n+  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+  See the License for the specific language governing permissions and\n+  limitations under the License.\n+  -->\n+<process name=\"process-no-outputs\" xmlns=\"uri:falcon:process:0.1\">\n+    <!-- where -->\n+    <clusters>\n+        <cluster name=\"corp\">\n+            <validity start=\"2011-11-02T00:00Z\" end=\"2011-12-30T00:00Z\"/>\n+        </cluster>\n+    </clusters>\n+\n+    <!-- when -->\n+    <parallel>1</parallel>\n+    <order>LIFO</order>\n+    <frequency>hours(1)</frequency>\n+    <timezone>UTC</timezone>\n+\n+    <!-- what = inputs only -->\n+    <inputs>\n+        <input name=\"click\" feed=\"clicks\" start=\"yesterday(0,0)\" end=\"latest(0)\" partition=\"*/US\"/>\n+    </inputs>\n+\n+    <!-- how -->\n+    <workflow engine=\"pig\" path=\"/apps/pig/id.pig\"/>\n+\n+    <retry policy=\"periodic\" delay=\"hours(10)\" attempts=\"3\"/>\n+\n+</process>",
                "raw_url": "https://github.com/apache/falcon/raw/85427981afeacef84ef3c10fc5fc4190cf291545/oozie/src/test/resources/config/process/process-no-outputs.xml",
                "sha": "0acba6048eb6c203739bf5821e4cd3627ad15984",
                "status": "added"
            },
            {
                "additions": 7,
                "blob_url": "https://github.com/apache/falcon/blob/85427981afeacef84ef3c10fc5fc4190cf291545/rerun/src/main/java/org/apache/falcon/rerun/handler/LateRerunHandler.java",
                "changes": 12,
                "contents_url": "https://api.github.com/repos/apache/falcon/contents/rerun/src/main/java/org/apache/falcon/rerun/handler/LateRerunHandler.java?ref=85427981afeacef84ef3c10fc5fc4190cf291545",
                "deletions": 5,
                "filename": "rerun/src/main/java/org/apache/falcon/rerun/handler/LateRerunHandler.java",
                "patch": "@@ -154,11 +154,13 @@ public static Date getCutOffTime(Entity entity, String nominalTime) throws Falco\n             for (LateInput lp : process.getLateProcess().getLateInputs()) {\n                 Feed feed = null;\n                 String endInstanceTime = \"\";\n-                for (Input input : process.getInputs().getInputs()) {\n-                    if (input.getName().equals(lp.getInput())) {\n-                        endInstanceTime = input.getEnd();\n-                        feed = store.get(EntityType.FEED, input.getFeed());\n-                        break;\n+                if (process.getInputs() != null) {\n+                    for (Input input : process.getInputs().getInputs()) {\n+                        if (input.getName().equals(lp.getInput())) {\n+                            endInstanceTime = input.getEnd();\n+                            feed = store.get(EntityType.FEED, input.getFeed());\n+                            break;\n+                        }\n                     }\n                 }\n                 if (feed == null) {",
                "raw_url": "https://github.com/apache/falcon/raw/85427981afeacef84ef3c10fc5fc4190cf291545/rerun/src/main/java/org/apache/falcon/rerun/handler/LateRerunHandler.java",
                "sha": "bacc20f09f1fc7180aebf3c2c51acae6c2fa9a3d",
                "status": "modified"
            }
        ],
        "message": "FALCON-598 ProcessHelper throws NPE if the process has no inputs OR no outputs defined. Contributed by Balu Vellanki",
        "parent": "https://github.com/apache/falcon/commit/7827c39ea92d351865e02a60a3f82149670bfde1",
        "repo": "falcon",
        "unit_tests": [
            "ProcessHelperTest.java",
            "TestLateRerunHandler.java"
        ]
    },
    "falcon_9aad374": {
        "bug_id": "falcon_9aad374",
        "commit": "https://github.com/apache/falcon/commit/9aad374ab75ca477ada47c4bd2b0aaacd656602a",
        "file": [
            {
                "additions": 3,
                "blob_url": "https://github.com/apache/falcon/blob/9aad374ab75ca477ada47c4bd2b0aaacd656602a/CHANGES.txt",
                "changes": 3,
                "contents_url": "https://api.github.com/repos/apache/falcon/contents/CHANGES.txt?ref=9aad374ab75ca477ada47c4bd2b0aaacd656602a",
                "deletions": 0,
                "filename": "CHANGES.txt",
                "patch": "@@ -77,6 +77,9 @@ Trunk (Unreleased)\n   OPTIMIZATIONS\n \n   BUG FIXES\n+   FALCON-669 Missing optional workflow execution listeners configuration\n+   results in NPE (Raghav Kumar Gautam via Venkatesh Seetharam)\n+\n    FALCON-644 Falcon message producer masks errors in Post processing\n    (Venkatesh Seetharam)\n ",
                "raw_url": "https://github.com/apache/falcon/raw/9aad374ab75ca477ada47c4bd2b0aaacd656602a/CHANGES.txt",
                "sha": "4a3bbc47a4dcd068642b54d1965bcfc13a46910b",
                "status": "modified"
            },
            {
                "additions": 5,
                "blob_url": "https://github.com/apache/falcon/blob/9aad374ab75ca477ada47c4bd2b0aaacd656602a/common/src/main/java/org/apache/falcon/workflow/WorkflowJobEndNotificationService.java",
                "changes": 5,
                "contents_url": "https://api.github.com/repos/apache/falcon/contents/common/src/main/java/org/apache/falcon/workflow/WorkflowJobEndNotificationService.java?ref=9aad374ab75ca477ada47c4bd2b0aaacd656602a",
                "deletions": 0,
                "filename": "common/src/main/java/org/apache/falcon/workflow/WorkflowJobEndNotificationService.java",
                "patch": "@@ -18,6 +18,7 @@\n \n package org.apache.falcon.workflow;\n \n+import org.apache.commons.lang.StringUtils;\n import org.apache.falcon.FalconException;\n import org.apache.falcon.aspect.GenericAlert;\n import org.apache.falcon.entity.v0.SchemaHelper;\n@@ -54,6 +55,10 @@ public String getName() {\n     public void init() throws FalconException {\n         String listenerClassNames = StartupProperties.get().getProperty(\n                 \"workflow.execution.listeners\");\n+        if (StringUtils.isEmpty(listenerClassNames)) {\n+            return;\n+        }\n+\n         for (String listenerClassName : listenerClassNames.split(\",\")) {\n             listenerClassName = listenerClassName.trim();\n             if (listenerClassName.isEmpty()) {",
                "raw_url": "https://github.com/apache/falcon/raw/9aad374ab75ca477ada47c4bd2b0aaacd656602a/common/src/main/java/org/apache/falcon/workflow/WorkflowJobEndNotificationService.java",
                "sha": "fb2d58d119aeaebd7b56509865fbcc72828c6312",
                "status": "modified"
            }
        ],
        "message": "FALCON-669 Missing optional workflow execution listeners configuration results in NPE. Contributed by Raghav Kumar Gautam",
        "parent": "https://github.com/apache/falcon/commit/331ad145e172c4a862bb294578dfb333b39d28d6",
        "repo": "falcon",
        "unit_tests": [
            "WorkflowJobEndNotificationServiceTest.java"
        ]
    },
    "falcon_b08eacb": {
        "bug_id": "falcon_b08eacb",
        "commit": "https://github.com/apache/falcon/commit/b08eacb4a240bf25200762cce0caef2809279a5c",
        "file": [
            {
                "additions": 3,
                "blob_url": "https://github.com/apache/falcon/blob/b08eacb4a240bf25200762cce0caef2809279a5c/CHANGES.txt",
                "changes": 3,
                "contents_url": "https://api.github.com/repos/apache/falcon/contents/CHANGES.txt?ref=b08eacb4a240bf25200762cce0caef2809279a5c",
                "deletions": 0,
                "filename": "CHANGES.txt",
                "patch": "@@ -134,6 +134,9 @@ Release Version: 0.5-incubating\n     FALCON-123 Improve build speeds in falcon. (Srikanth Sundarrajan via Shwetha GS)\n \n   BUG FIXES\n+    FALCON-429 Falcon CLI entity list command throws NPE stack trace in case\n+    of no entities (Satish Mittal via Venkatesh Seetharam)\n+\n     FALCON-427 Update default falcon endpoint URL in runtime.properties for\n     prism setup to work out of box (Satish Mittal via Venkatesh Seetharam)\n ",
                "raw_url": "https://github.com/apache/falcon/raw/b08eacb4a240bf25200762cce0caef2809279a5c/CHANGES.txt",
                "sha": "6b20f60dd51950b0b183fbba52454cbe380638f6",
                "status": "modified"
            },
            {
                "additions": 3,
                "blob_url": "https://github.com/apache/falcon/blob/b08eacb4a240bf25200762cce0caef2809279a5c/client/src/main/java/org/apache/falcon/cli/FalconCLI.java",
                "changes": 4,
                "contents_url": "https://api.github.com/repos/apache/falcon/contents/client/src/main/java/org/apache/falcon/cli/FalconCLI.java?ref=b08eacb4a240bf25200762cce0caef2809279a5c",
                "deletions": 1,
                "filename": "client/src/main/java/org/apache/falcon/cli/FalconCLI.java",
                "patch": "@@ -28,6 +28,7 @@\n import org.apache.falcon.client.FalconCLIException;\n import org.apache.falcon.client.FalconClient;\n import org.apache.falcon.entity.v0.SchemaHelper;\n+import org.apache.falcon.resource.EntityList;\n \n import java.io.IOException;\n import java.io.InputStream;\n@@ -347,7 +348,8 @@ private void entityCommand(CommandLine commandLine, FalconClient client)\n             result = client.getDependency(entityType, entityName).toString();\n         } else if (optionsList.contains(LIST_OPT)) {\n             validateColo(optionsList);\n-            result = client.getEntityList(entityType).toString();\n+            EntityList entityList = client.getEntityList(entityType);\n+            result = entityList != null ? entityList.toString() : \"No entity of type (\" + entityType + \") found.\";\n         } else if (optionsList.contains(HELP_CMD)) {\n             OUT.get().println(\"Falcon Help\");\n         } else {",
                "raw_url": "https://github.com/apache/falcon/raw/b08eacb4a240bf25200762cce0caef2809279a5c/client/src/main/java/org/apache/falcon/cli/FalconCLI.java",
                "sha": "2fb072926e7b192562c8bde8d5d2691f7683fae3",
                "status": "modified"
            }
        ],
        "message": "FALCON-429 Falcon CLI entity list command throws NPE stack trace in case of no entities. Contributed by Satish Mittal",
        "parent": "https://github.com/apache/falcon/commit/c4035db227a3424547eddb953b1e28f92a2040d4",
        "repo": "falcon",
        "unit_tests": [
            "FalconCLITest.java"
        ]
    },
    "falcon_b5baefb": {
        "bug_id": "falcon_b5baefb",
        "commit": "https://github.com/apache/falcon/commit/b5baefbdbe4ab3bb319dbdcdd116bb527a1929e1",
        "file": [
            {
                "additions": 4,
                "blob_url": "https://github.com/apache/falcon/blob/b5baefbdbe4ab3bb319dbdcdd116bb527a1929e1/webapp/src/main/java/org/apache/ivory/resource/EntityManager.java",
                "changes": 4,
                "contents_url": "https://api.github.com/repos/apache/falcon/contents/webapp/src/main/java/org/apache/ivory/resource/EntityManager.java?ref=b5baefbdbe4ab3bb319dbdcdd116bb527a1929e1",
                "deletions": 0,
                "filename": "webapp/src/main/java/org/apache/ivory/resource/EntityManager.java",
                "patch": "@@ -251,6 +251,10 @@ public String getEntityDefinition(@PathParam(\"type\") String type,\n \t\t\tEntityType entityType = EntityType.valueOf(type.toUpperCase());\n \t\t\tConfigurationStore configStore = ConfigurationStore.get();\n \t\t\tEntity entity= configStore.get(entityType, entityName);\n+\t\t\tif(entity==null){\n+\t\t\t\tLOG.error(entityName+\" does not exists\");\n+\t\t\t\treturn new APIResult(APIResult.Status.FAILED, entityName+\" does not exists\").toString();\t\n+\t\t\t}\n \t\t\tLOG.info(\"Returned entity: \" + entity);\n \t\t\treturn entity.toString();\n \t\t} catch (IllegalArgumentException e) {",
                "raw_url": "https://github.com/apache/falcon/raw/b5baefbdbe4ab3bb319dbdcdd116bb527a1929e1/webapp/src/main/java/org/apache/ivory/resource/EntityManager.java",
                "sha": "72e473a027c0e64e74c191a209f9667893d6bd99",
                "status": "modified"
            }
        ],
        "message": "DE187 rally fix NPE exception in console dump",
        "parent": "https://github.com/apache/falcon/commit/1981f0050bd821fe87513f29e545d3e2a702f62e",
        "repo": "falcon",
        "unit_tests": [
            "EntityManagerTest.java"
        ]
    },
    "falcon_d718ad7": {
        "bug_id": "falcon_d718ad7",
        "commit": "https://github.com/apache/falcon/commit/d718ad737d63399e545a187d71420f106620913d",
        "file": [
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/falcon/blob/d718ad737d63399e545a187d71420f106620913d/CHANGES.txt",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/falcon/contents/CHANGES.txt?ref=d718ad737d63399e545a187d71420f106620913d",
                "deletions": 0,
                "filename": "CHANGES.txt",
                "patch": "@@ -117,6 +117,8 @@ Trunk (Unreleased)\n    (Suhas vasu)\n \n   BUG FIXES\n+   FALCON-1099 FeedReplicator: throws NPE (Sowmya Ramesh via Suhas Vasu)\n+\n    FALCON-1064 Build hangs at the following test: JMSMessageProducerTest\n    (Sowmya Ramesh via Suhas Vasu)\n ",
                "raw_url": "https://github.com/apache/falcon/raw/d718ad737d63399e545a187d71420f106620913d/CHANGES.txt",
                "sha": "7a52e95873026699f802a154b81b5c2fdd022868",
                "status": "modified"
            },
            {
                "additions": 7,
                "blob_url": "https://github.com/apache/falcon/blob/d718ad737d63399e545a187d71420f106620913d/replication/src/main/java/org/apache/falcon/replication/FeedReplicator.java",
                "changes": 10,
                "contents_url": "https://api.github.com/repos/apache/falcon/contents/replication/src/main/java/org/apache/falcon/replication/FeedReplicator.java?ref=d718ad737d63399e545a187d71420f106620913d",
                "deletions": 3,
                "filename": "replication/src/main/java/org/apache/falcon/replication/FeedReplicator.java",
                "patch": "@@ -69,10 +69,14 @@ public int run(String[] args) throws Exception {\n         final boolean includePathSet = (includePathConf != null)\n                 && !IGNORE.equalsIgnoreCase(includePathConf);\n \n+        String availabilityFlagOpt = cmd.getOptionValue(\"availabilityFlag\");\n+        if (StringUtils.isEmpty(availabilityFlagOpt)) {\n+            availabilityFlagOpt = \"NA\";\n+        }\n         String availabilityFlag = EntityUtil.SUCCEEDED_FILE_NAME;\n         if (cmd.getOptionValue(\"falconFeedStorageType\").equals(Storage.TYPE.FILESYSTEM.name())) {\n-            availabilityFlag = cmd.getOptionValue(\"availabilityFlag\").equals(\"NA\")\n-                    ? availabilityFlag : cmd.getOptionValue(\"availabilityFlag\");\n+            availabilityFlag = \"NA\".equals(availabilityFlagOpt)\n+                    ? availabilityFlag : availabilityFlagOpt;\n         }\n \n         conf.set(\"falcon.feed.availability.flag\", availabilityFlag);\n@@ -136,7 +140,7 @@ protected DistCpOptions getDistCpOptions(CommandLine cmd) {\n     }\n \n     private List<Path> getPaths(String[] paths) {\n-        List<Path> listPaths = new ArrayList<Path>();\n+        List<Path> listPaths = new ArrayList<>();\n         for (String path : paths) {\n             listPaths.add(new Path(path));\n         }",
                "raw_url": "https://github.com/apache/falcon/raw/d718ad737d63399e545a187d71420f106620913d/replication/src/main/java/org/apache/falcon/replication/FeedReplicator.java",
                "sha": "aa58aa90c48070bab7fa207b7f9604ec269d0f06",
                "status": "modified"
            }
        ],
        "message": "FALCON-1099 FeedReplicator: throws NPE. Contributed by Sowmya Ramesh",
        "parent": "https://github.com/apache/falcon/commit/693e8af52e46e673e2a47f0e3b9b44d6dd2e8422",
        "repo": "falcon",
        "unit_tests": [
            "FeedReplicatorTest.java"
        ]
    },
    "falcon_e01dd79": {
        "bug_id": "falcon_e01dd79",
        "commit": "https://github.com/apache/falcon/commit/e01dd79c73fa6bc9623dbdd87e7981eff1796c6c",
        "file": [
            {
                "additions": 3,
                "blob_url": "https://github.com/apache/falcon/blob/e01dd79c73fa6bc9623dbdd87e7981eff1796c6c/CHANGES.txt",
                "changes": 3,
                "contents_url": "https://api.github.com/repos/apache/falcon/contents/CHANGES.txt?ref=e01dd79c73fa6bc9623dbdd87e7981eff1796c6c",
                "deletions": 0,
                "filename": "CHANGES.txt",
                "patch": "@@ -16,6 +16,9 @@ Trunk (Unreleased)\n   OPTIMIZATIONS\n \n   BUG FIXES\n+   FALCON-460 Concurrent deletion of same entity results in NPE (Sowmya Ramesh\n+   via Venkatesh Seetharam)\n+\n    FALCON-459 Lineage resource API fails with NPE for bad query params\n    (Sowmya Ramesh via Venkatesh Seetharam)\n ",
                "raw_url": "https://github.com/apache/falcon/raw/e01dd79c73fa6bc9623dbdd87e7981eff1796c6c/CHANGES.txt",
                "sha": "98b782bbbb4cd02fe6fa7c01300b72e009ce8460",
                "status": "modified"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/falcon/blob/e01dd79c73fa6bc9623dbdd87e7981eff1796c6c/common/src/main/java/org/apache/falcon/entity/store/ConfigurationStore.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/falcon/contents/common/src/main/java/org/apache/falcon/entity/store/ConfigurationStore.java?ref=e01dd79c73fa6bc9623dbdd87e7981eff1796c6c",
                "deletions": 1,
                "filename": "common/src/main/java/org/apache/falcon/entity/store/ConfigurationStore.java",
                "patch": "@@ -275,7 +275,7 @@ public synchronized void initiateUpdate(Entity entity) throws FalconException {\n      *         exist\n      * @throws FalconException\n      */\n-    public boolean remove(EntityType type, String name) throws FalconException {\n+    public synchronized boolean remove(EntityType type, String name) throws FalconException {\n         Map<String, Entity> entityMap = dictionary.get(type);\n         if (entityMap.containsKey(name)) {\n             try {",
                "raw_url": "https://github.com/apache/falcon/raw/e01dd79c73fa6bc9623dbdd87e7981eff1796c6c/common/src/main/java/org/apache/falcon/entity/store/ConfigurationStore.java",
                "sha": "cb594d1c7ccc769cd9f5d1a8540b1dad35d21f0c",
                "status": "modified"
            },
            {
                "additions": 18,
                "blob_url": "https://github.com/apache/falcon/blob/e01dd79c73fa6bc9623dbdd87e7981eff1796c6c/common/src/test/java/org/apache/falcon/entity/store/ConfigurationStoreTest.java",
                "changes": 18,
                "contents_url": "https://api.github.com/repos/apache/falcon/contents/common/src/test/java/org/apache/falcon/entity/store/ConfigurationStoreTest.java?ref=e01dd79c73fa6bc9623dbdd87e7981eff1796c6c",
                "deletions": 0,
                "filename": "common/src/test/java/org/apache/falcon/entity/store/ConfigurationStoreTest.java",
                "patch": "@@ -98,6 +98,7 @@ public void testRemove() throws Exception {\n         Process process = new Process();\n         process.setName(\"remove\");\n         store.publish(EntityType.PROCESS, process);\n+\n         Process p = store.get(EntityType.PROCESS, \"remove\");\n         Assert.assertEquals(p, process);\n         store.remove(EntityType.PROCESS, \"remove\");\n@@ -115,6 +116,23 @@ public void testRemove() throws Exception {\n         store.unregisterListener(listener);\n     }\n \n+\n+    @Test(threadPoolSize = 3, invocationCount = 6)\n+    public void testConcurrentRemoves() throws Exception {\n+        Process process = new Process();\n+        process.setName(\"remove\");\n+        try {\n+            store.publish(EntityType.PROCESS, process);\n+        } catch(EntityAlreadyExistsException e) {\n+            // Ignore this\n+        }\n+        Process p = store.get(EntityType.PROCESS, \"remove\");\n+        Assert.assertEquals(p, process);\n+        store.remove(EntityType.PROCESS, \"remove\");\n+        p = store.get(EntityType.PROCESS, \"remove\");\n+        Assert.assertNull(p);\n+    }\n+\n     @BeforeSuite\n     @AfterSuite\n     public void cleanup() throws IOException {",
                "raw_url": "https://github.com/apache/falcon/raw/e01dd79c73fa6bc9623dbdd87e7981eff1796c6c/common/src/test/java/org/apache/falcon/entity/store/ConfigurationStoreTest.java",
                "sha": "9886d883c4ecc5b9393dd91b829646af30dfc2b6",
                "status": "modified"
            }
        ],
        "message": "FALCON-460 Concurrent deletion of same entity results in NPE. Contributed by Sowmya Ramesh",
        "parent": "https://github.com/apache/falcon/commit/662adb2154cbd47bbdaebceae529013ed37d125f",
        "repo": "falcon",
        "unit_tests": [
            "ConfigurationStoreTest.java"
        ]
    }
}