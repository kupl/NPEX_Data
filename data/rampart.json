{
    "rampart_7ca10a2": {
        "bug_id": "rampart_7ca10a2",
        "commit": "https://github.com/apache/rampart/commit/7ca10a210a2881c0b902913228d055c91d14b024",
        "file": [
            {
                "additions": 17,
                "blob_url": "https://github.com/apache/rampart/blob/7ca10a210a2881c0b902913228d055c91d14b024/modules/rampart-core/src/main/java/org/apache/rampart/RampartEngine.java",
                "changes": 27,
                "contents_url": "https://api.github.com/repos/apache/rampart/contents/modules/rampart-core/src/main/java/org/apache/rampart/RampartEngine.java?ref=7ca10a210a2881c0b902913228d055c91d14b024",
                "deletions": 10,
                "filename": "modules/rampart-core/src/main/java/org/apache/rampart/RampartEngine.java",
                "patch": "@@ -75,7 +75,7 @@ public Vector process(MessageContext msgCtx) throws WSSPolicyException,\n \t\t\tmsgCtx.setEnvelope(env);\n \t\t\tAxis2Util.useDOOM(false);\n \t\t\tif(doDebug){\n-\t\t\t\tlog.debug(\"Return process(MessageContext msgCtx)\");\n+\t\t\t\tlog.debug(\"Return process MessageContext msgCtx)\");\n \t\t\t}\n \t\t\treturn null;\n \t\t}\n@@ -88,17 +88,24 @@ public Vector process(MessageContext msgCtx) throws WSSPolicyException,\n \t\tValidatorData data = new ValidatorData(rmd);\n \n \t\tArrayList headerBlocks = rmd.getMsgContext().getEnvelope()\n-\t\t.getHeader().getHeaderBlocksWithNSURI(WSConstants.WSSE_NS);\n-\t\tIterator headerBlocksIterator = headerBlocks.iterator();\n+\t\t    .getHeader().getHeaderBlocksWithNSURI(WSConstants.WSSE_NS);\n \t\tSOAPHeaderBlock secHeader = null;\n-\t\twhile (headerBlocksIterator.hasNext()) {\n-\t\t\tSOAPHeaderBlock elem = (SOAPHeaderBlock) headerBlocksIterator.next();\n-\t\t\tif(elem.getLocalName().equals(WSConstants.WSSE_LN)) {\n-\t\t\t\tsecHeader = elem;\n-\t\t\t\tbreak;\n-\t\t\t}\n+\t\t//Issue is axiom - a returned collection must not be null\n+\t\tif(headerBlocks != null) {\n+    \t\tIterator headerBlocksIterator = headerBlocks.iterator();\n+    \t\twhile (headerBlocksIterator.hasNext()) {\n+    \t\t\tSOAPHeaderBlock elem = (SOAPHeaderBlock) headerBlocksIterator.next();\n+    \t\t\tif(elem.getLocalName().equals(WSConstants.WSSE_LN)) {\n+    \t\t\t\tsecHeader = elem;\n+    \t\t\t\tbreak;\n+    \t\t\t}\n+    \t\t}\n \t\t}\n-\n+\t\t\n+\t\tif(secHeader == null) {\n+\t\t    throw new RampartException(\"missingSecurityHeader\");\n+\t\t}\n+\t\t\n \t\tlong t0=0, t1=0, t2=0, t3=0;\n \t\tif(dotDebug){\n \t\t\tt0 = System.currentTimeMillis();",
                "raw_url": "https://github.com/apache/rampart/raw/7ca10a210a2881c0b902913228d055c91d14b024/modules/rampart-core/src/main/java/org/apache/rampart/RampartEngine.java",
                "sha": "b79b59a7078beada5de7abe981c3982c37d36edc",
                "status": "modified"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/rampart/blob/7ca10a210a2881c0b902913228d055c91d14b024/modules/rampart-core/src/main/java/org/apache/rampart/errors.properties",
                "changes": 1,
                "contents_url": "https://api.github.com/repos/apache/rampart/contents/modules/rampart-core/src/main/java/org/apache/rampart/errors.properties?ref=7ca10a210a2881c0b902913228d055c91d14b024",
                "deletions": 0,
                "filename": "modules/rampart-core/src/main/java/org/apache/rampart/errors.properties",
                "patch": "@@ -63,6 +63,7 @@ noSecurityToken = Missing security token\n noSecurityResults= No security processing results from the incoming message\n missingEncryptedKeyInRequest=There was no EncryptedKey in the request message\n rampartConigMissing = Please include configured RampartConfiguration assertion in policy\n+missingSecurityHeader = Missing wsse:Security header in request\n \n #Errors in processors\n errorProcessingUT = Error in processing UsernameToken",
                "raw_url": "https://github.com/apache/rampart/raw/7ca10a210a2881c0b902913228d055c91d14b024/modules/rampart-core/src/main/java/org/apache/rampart/errors.properties",
                "sha": "708cf06deb41f95843406ef11a01eaeb8302146f",
                "status": "modified"
            },
            {
                "additions": 48,
                "blob_url": "https://github.com/apache/rampart/blob/7ca10a210a2881c0b902913228d055c91d14b024/modules/rampart-tests/src/test/java/org/apache/rampart/RampartEngineTest.java",
                "changes": 48,
                "contents_url": "https://api.github.com/repos/apache/rampart/contents/modules/rampart-tests/src/test/java/org/apache/rampart/RampartEngineTest.java?ref=7ca10a210a2881c0b902913228d055c91d14b024",
                "deletions": 0,
                "filename": "modules/rampart-tests/src/test/java/org/apache/rampart/RampartEngineTest.java",
                "patch": "@@ -0,0 +1,48 @@\n+/*\n+ * Copyright 2004,2005 The Apache Software Foundation.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.rampart;\n+\n+import org.apache.axis2.context.MessageContext;\n+import org.apache.neethi.Policy;\n+\n+public class RampartEngineTest extends MessageBuilderTestBase {\n+\n+\n+    public RampartEngineTest(String name) {\n+        super(name);\n+    }\n+    \n+    public void testEmptySOAPMessage() throws Exception {\n+        \n+       try {\n+           MessageContext ctx = getMsgCtx();\n+           \n+           String policyXml = \"test-resources/policy/rampart-asymm-binding-6-3des-r15.xml\";\n+           Policy policy = this.loadPolicy(policyXml);\n+           \n+           ctx.setProperty(RampartMessageData.KEY_RAMPART_POLICY, policy);\n+           \n+           RampartEngine engine = new RampartEngine();\n+           engine.process(ctx);\n+        } catch (RampartException e) {\n+           assertEquals(\n+                    \"Expected rampart to complain about missing security header\",\n+                    \"Missing wsse:Security header in request\", e.getMessage()); \n+        }\n+    }\n+\n+}",
                "raw_url": "https://github.com/apache/rampart/raw/7ca10a210a2881c0b902913228d055c91d14b024/modules/rampart-tests/src/test/java/org/apache/rampart/RampartEngineTest.java",
                "sha": "b5145f80c069d2006c5e887986b22aefed67e51b",
                "status": "added"
            }
        ],
        "message": "Added and NPE check\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/rampart/trunk/java@568940 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/rampart/commit/c6c4670950ee3b28eeb15fac417ff7ac53888cbc",
        "repo": "rampart",
        "unit_tests": [
            "RampartEngineTest.java"
        ]
    },
    "rampart_b100670": {
        "bug_id": "rampart_b100670",
        "commit": "https://github.com/apache/rampart/commit/b100670c62978ec2c2784ec64e711f61d315e0ca",
        "file": [
            {
                "additions": 7,
                "blob_url": "https://github.com/apache/rampart/blob/b100670c62978ec2c2784ec64e711f61d315e0ca/modules/rampart-core/src/main/java/org/apache/rampart/RampartEngine.java",
                "changes": 9,
                "contents_url": "https://api.github.com/repos/apache/rampart/contents/modules/rampart-core/src/main/java/org/apache/rampart/RampartEngine.java?ref=b100670c62978ec2c2784ec64e711f61d315e0ca",
                "deletions": 2,
                "filename": "modules/rampart-core/src/main/java/org/apache/rampart/RampartEngine.java",
                "patch": "@@ -18,6 +18,7 @@\n \n import org.apache.axiom.om.OMElement;\n import org.apache.axiom.soap.SOAPEnvelope;\n+import org.apache.axiom.soap.SOAPHeader;\n import org.apache.axiom.soap.SOAPHeaderBlock;\n import org.apache.axis2.AxisFault;\n import org.apache.axis2.context.MessageContext;\n@@ -87,8 +88,12 @@ public Vector process(MessageContext msgCtx) throws WSSPolicyException,\n \n \t\tValidatorData data = new ValidatorData(rmd);\n \n-\t\tArrayList headerBlocks = rmd.getMsgContext().getEnvelope()\n-\t\t    .getHeader().getHeaderBlocksWithNSURI(WSConstants.WSSE_NS);\n+\t\tSOAPHeader header = rmd.getMsgContext().getEnvelope().getHeader();\n+\t\tif(header == null) {\n+\t\t    throw new RampartException(\"missingSOAPHeader\");\n+\t\t}\n+\t\t\n+        ArrayList headerBlocks = header.getHeaderBlocksWithNSURI(WSConstants.WSSE_NS);\n \t\tSOAPHeaderBlock secHeader = null;\n \t\t//Issue is axiom - a returned collection must not be null\n \t\tif(headerBlocks != null) {",
                "raw_url": "https://github.com/apache/rampart/raw/b100670c62978ec2c2784ec64e711f61d315e0ca/modules/rampart-core/src/main/java/org/apache/rampart/RampartEngine.java",
                "sha": "44a291e38867d01348ab37bdbd71386ac8b67f35",
                "status": "modified"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/rampart/blob/b100670c62978ec2c2784ec64e711f61d315e0ca/modules/rampart-core/src/main/java/org/apache/rampart/errors.properties",
                "changes": 1,
                "contents_url": "https://api.github.com/repos/apache/rampart/contents/modules/rampart-core/src/main/java/org/apache/rampart/errors.properties?ref=b100670c62978ec2c2784ec64e711f61d315e0ca",
                "deletions": 0,
                "filename": "modules/rampart-core/src/main/java/org/apache/rampart/errors.properties",
                "patch": "@@ -64,6 +64,7 @@ noSecurityResults= No security processing results from the incoming message\n missingEncryptedKeyInRequest=There was no EncryptedKey in the request message\n rampartConigMissing = Please include configured RampartConfiguration assertion in policy\n missingSecurityHeader = Missing wsse:Security header in request\n+missingSOAPHeader = SOAP header missing\n \n #Errors in processors\n errorProcessingUT = Error in processing UsernameToken",
                "raw_url": "https://github.com/apache/rampart/raw/b100670c62978ec2c2784ec64e711f61d315e0ca/modules/rampart-core/src/main/java/org/apache/rampart/errors.properties",
                "sha": "6187336f4c29ee0fb785e8bda03849426f0518e4",
                "status": "modified"
            }
        ],
        "message": "Added an NPE check\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/rampart/trunk/java@584382 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/rampart/commit/fa5d32b0cc32774110bac9d15850356677c59f81",
        "repo": "rampart",
        "unit_tests": [
            "RampartEngineTest.java"
        ]
    }
}