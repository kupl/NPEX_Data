{
    "attic-wink_ae7f801": {
        "bug_id": "attic-wink_ae7f801",
        "commit": "https://github.com/apache/attic-wink/commit/ae7f801d03ad72888711772b15fee04e53c4ea04",
        "file": [
            {
                "additions": 30,
                "blob_url": "https://github.com/apache/attic-wink/blob/ae7f801d03ad72888711772b15fee04e53c4ea04/wink-common/src/main/java/org/apache/wink/common/internal/registry/ProvidersRegistry.java",
                "changes": 30,
                "contents_url": "https://api.github.com/repos/apache/attic-wink/contents/wink-common/src/main/java/org/apache/wink/common/internal/registry/ProvidersRegistry.java?ref=ae7f801d03ad72888711772b15fee04e53c4ea04",
                "deletions": 0,
                "filename": "wink-common/src/main/java/org/apache/wink/common/internal/registry/ProvidersRegistry.java",
                "patch": "@@ -89,6 +89,9 @@ public ProvidersRegistry(OFFactoryRegistry factoryRegistry,\n \r\n     @SuppressWarnings(\"unchecked\")\r\n     public boolean addProvider(Class<?> cls, double priority) {\r\n+        if (cls == null) {\r\n+            throw new NullPointerException(\"cls\");\r\n+        }\r\n         writersLock.lock();\r\n         try {\r\n             ObjectFactory<?> objectFactory = factoryFactoryRegistry.getObjectFactory(cls);\r\n@@ -100,6 +103,9 @@ public boolean addProvider(Class<?> cls, double priority) {\n \r\n     @SuppressWarnings(\"unchecked\")\r\n     public boolean addProvider(Object provider, double priority) {\r\n+        if (provider == null) {\r\n+            throw new NullPointerException(\"provider\");\r\n+        }\r\n         writersLock.lock();\r\n         try {\r\n             ObjectFactory<?> objectFactory = factoryFactoryRegistry.getObjectFactory(provider);\r\n@@ -155,6 +161,12 @@ public boolean addProvider(Object provider) {\n     @SuppressWarnings(\"unchecked\")\r\n     public <T> ContextResolver<T> getContextResolver(final Class<T> contextType,\r\n         MediaType mediaType, RuntimeContext runtimeContext) {\r\n+        if (contextType == null) {\r\n+            throw new NullPointerException(\"contextType\");\r\n+        }\r\n+        if (mediaType == null) {\r\n+            throw new NullPointerException(\"mediaType\");\r\n+        }\r\n         readersLock.lock();\r\n         try {\r\n             final List<ObjectFactory<ContextResolver<?>>> factories = contextResolvers.getProvidersByMediaType(\r\n@@ -207,6 +219,9 @@ public Object invoke(Object proxy, Method method, Object[] args)\n     @SuppressWarnings(\"unchecked\")\r\n     public <T extends Throwable> ExceptionMapper<T> getExceptionMapper(Class<T> type,\r\n         RuntimeContext runtimeContext) {\r\n+        if (type == null) {\r\n+            throw new NullPointerException(\"type\");\r\n+        }\r\n         readersLock.lock();\r\n         try {\r\n             List<ExceptionMapper<?>> matchingMappers = new ArrayList<ExceptionMapper<?>>();\r\n@@ -251,6 +266,12 @@ public Object invoke(Object proxy, Method method, Object[] args)\n     @SuppressWarnings(\"unchecked\")\r\n     public <T> MessageBodyReader<T> getMessageBodyReader(Class<T> type, Type genericType,\r\n         Annotation[] annotations, MediaType mediaType, RuntimeContext runtimeContext) {\r\n+        if (type == null) {\r\n+            throw new NullPointerException(\"type\");\r\n+        }\r\n+        if (mediaType == null) {\r\n+            throw new NullPointerException(\"mediaType\");\r\n+        }\r\n         readersLock.lock();\r\n         try {\r\n             List<ObjectFactory<MessageBodyReader<?>>> factories = messageBodyReaders.getProvidersByMediaType(\r\n@@ -270,6 +291,12 @@ public Object invoke(Object proxy, Method method, Object[] args)\n     @SuppressWarnings(\"unchecked\")\r\n     public <T> MessageBodyWriter<T> getMessageBodyWriter(Class<T> type, Type genericType,\r\n         Annotation[] annotations, MediaType mediaType, RuntimeContext runtimeContext) {\r\n+        if (type == null) {\r\n+            throw new NullPointerException(\"type\");\r\n+        }\r\n+        if (mediaType == null) {\r\n+            throw new NullPointerException(\"mediaType\");\r\n+        }\r\n         readersLock.lock();\r\n         try {\r\n             List<ObjectFactory<MessageBodyWriter<?>>> writersFactories = messageBodyWriters.getProvidersByMediaType(\r\n@@ -287,6 +314,9 @@ public Object invoke(Object proxy, Method method, Object[] args)\n     }\r\n \r\n     public Set<MediaType> getMessageBodyWriterMediaTypes(Class<?> type) {\r\n+        if (type == null) {\r\n+            throw new NullPointerException(\"type\");\r\n+        }\r\n         Set<MediaType> mediaTypes = messageBodyWriters.getProvidersMediaTypes(type);\r\n         return mediaTypes;\r\n     }\r",
                "raw_url": "https://github.com/apache/attic-wink/raw/ae7f801d03ad72888711772b15fee04e53c4ea04/wink-common/src/main/java/org/apache/wink/common/internal/registry/ProvidersRegistry.java",
                "sha": "cd5ae4ce743f71ac1907d6ba067dad3a385da161",
                "status": "modified"
            }
        ],
        "message": "throw NPE explicitly, when required parameters are null\nSee [WINK-37]\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/wink/trunk@792093 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/attic-wink/commit/fba40aabb0848757706f722bc2a487824ea65a26",
        "repo": "attic-wink",
        "unit_tests": [
            "ProvidersRegistryTest.java"
        ]
    },
    "attic-wink_fe82718": {
        "bug_id": "attic-wink_fe82718",
        "commit": "https://github.com/apache/attic-wink/commit/fe82718ba15fd01506b141f3ba7f1c9be3390356",
        "file": [
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/attic-wink/blob/fe82718ba15fd01506b141f3ba7f1c9be3390356/wink-server/src/main/java/org/apache/wink/server/internal/registry/ResourceRecordFactory.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/attic-wink/contents/wink-server/src/main/java/org/apache/wink/server/internal/registry/ResourceRecordFactory.java?ref=fe82718ba15fd01506b141f3ba7f1c9be3390356",
                "deletions": 1,
                "filename": "wink-server/src/main/java/org/apache/wink/server/internal/registry/ResourceRecordFactory.java",
                "patch": "@@ -51,7 +51,7 @@\n \n     public ResourceRecordFactory(LifecycleManagersRegistry lifecycleManagerRegistry) {\n         if (lifecycleManagerRegistry == null) {\n-            throw new NullPointerException();\n+            throw new NullPointerException(\"lifecycleManagerRegistry\"); //$NON-NLS-1$\n         }\n         this.lifecycleManagerRegistry = lifecycleManagerRegistry;\n         this.cacheByClass = new HashMap<Class<?>, ResourceRecord>();",
                "raw_url": "https://github.com/apache/attic-wink/raw/fe82718ba15fd01506b141f3ba7f1c9be3390356/wink-server/src/main/java/org/apache/wink/server/internal/registry/ResourceRecordFactory.java",
                "sha": "72b1d3ba6164dfa3f83be18e2f1104b1775d724d",
                "status": "modified"
            }
        ],
        "message": "Update NPE with actual variable to help debug\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/wink/trunk@952888 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/attic-wink/commit/531771e5b2bf2f470fe728efe25e471d3b23659f",
        "repo": "attic-wink",
        "unit_tests": [
            "ResourceRecordFactoryTest.java"
        ]
    }
}