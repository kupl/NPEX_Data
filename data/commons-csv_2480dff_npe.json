[
    {
        "repo": "commons-csv",
        "commit": "https://github.com/apache/commons-csv/commit/2480dffa6d8343b189c6fb57b88b325c45f0b83f",
        "bug_id": "commons-csv_2480dff",
        "message": "<action issue=\"CSV-118\" type=\"fix\" dev=\"ggregory\" due-to=\"Enrique Lara\">CSVRecord.toMap() throws NPE on formats with no headers.</action>\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1594966 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/commons-csv/commit/0331565fbaf33fab24bfd588948e653475e795d9",
        "patched_files": [
            "changes.xml",
            "CSVRecord.java"
        ],
        "file": [
            {
                "status": "modified",
                "additions": 14,
                "raw_url": "https://github.com/apache/commons-csv/raw/2480dffa6d8343b189c6fb57b88b325c45f0b83f/src/changes/changes.xml",
                "contents_url": "https://api.github.com/repos/apache/commons-csv/contents/src/changes/changes.xml?ref=2480dffa6d8343b189c6fb57b88b325c45f0b83f",
                "filename": "src/changes/changes.xml",
                "deletions": 6,
                "sha": "7132bff85ec5d6b56e18be3b6ca6b3760f1614d9",
                "blob_url": "https://github.com/apache/commons-csv/blob/2480dffa6d8343b189c6fb57b88b325c45f0b83f/src/changes/changes.xml",
                "patch": "@@ -40,11 +40,15 @@\n   <body>\n \n     <release version=\"1.0\" date=\"TBD\" description=\"First release\">\n+      <action issue=\"CSV-118\" type=\"fix\" dev=\"ggregory\" due-to=\"Enrique Lara\">CSVRecord.toMap() throws NPE on formats with no\n+        headers.</action>\n       <action issue=\"CSV-113\" type=\"fix\" dev=\"sebb\">Check whether ISE/IAE are being used appropriately</action>\n       <action issue=\"CSV-114\" type=\"fix\" dev=\"sebb\">CSVFormat constructor should reject a header array with duplicate\n-        entries</action>\n+        entries\n+      </action>\n       <action issue=\"CSV-112\" type=\"fix\" dev=\"britter\">HeaderMap is inconsistent when it is parsed from an input with\n-        duplicate columns names</action>\n+        duplicate columns names\n+      </action>\n       <action issue=\"CSV-111\" type=\"fix\" dev=\"ggregory\">CSVRecord.toMap() fails if row length shorter than header length\n       </action>\n       <action issue=\"CSV-106\" type=\"fix\" dev=\"ggregory\">CSVFormat.format allways append null</action>\n@@ -55,18 +59,21 @@\n       </action>\n       <action issue=\"CSV-99\" type=\"update\" dev=\"britter\">Revert Builder implementation in CSVFormat</action>\n       <action issue=\"CSV-53\" type=\"fix\" dev=\"britter\">CSVRecord does not verify that the length of the header mapping\n-        matches the number of values</action>\n+        matches the number of values\n+      </action>\n       <action issue=\"CSV-93\" type=\"update\" dev=\"ggregory\">Allow the handling of NULL values</action>\n       <action issue=\"CSV-68\" type=\"update\" dev=\"ggregory\">Use the Builder pattern for CSVFormat</action>\n       <action issue=\"CSV-84\" type=\"update\" dev=\"sebb\">Clarify comment handling</action>\n       <action issue=\"CSV-25\" type=\"update\" dev=\"ebourg\">CSVParser.nextValue() seems pointless</action>\n       <action issue=\"CSV-97\" type=\"update\" dev=\"ggregory\">Allow the String value for null to be customized for the CSV\n-        printer</action>\n+        printer\n+      </action>\n       <action issue=\"CSV-88\" type=\"update\" dev=\"ggregory\">Not possible to create a CSVFormat from scratch</action>\n       <action issue=\"CSV-52\" type=\"add\" dev=\"ggregory\">Keep track of record number</action>\n       <action issue=\"CSV-94\" type=\"update\" dev=\"sebb\">Lexer should only use char fields</action>\n       <action issue=\"CSV-92\" type=\"add\" dev=\"ggregory\">Need a way to extract parsed headers, e.g. for use in formatting\n-        output</action>\n+        output\n+      </action>\n       <action issue=\"CSV-65\" type=\"add\" dev=\"ebourg\">Header support</action>\n       <action issue=\"CSV-54\" type=\"fix\" dev=\"sebb\">Confusing semantic of the ignore leading/trailing spaces parameters\n       </action>\n@@ -76,7 +83,8 @@\n       <action issue=\"CSV-55\" type=\"update\" dev=\"britter\">Replace while(true)-loop in CSVParser.getRecord with do-while-loop\n       </action>\n       <action issue=\"CSV-34\" type=\"fix\" dev=\"sebb\">CSVFormat describes itself as immutable, but it is not - in\n-        particular it is not thread-safe</action>\n+        particular it is not thread-safe\n+      </action>\n       <action issue=\"CSV-36\" type=\"fix\" dev=\"yonik\">Endless loops in CSV parser</action>\n       <action issue=\"CSV-13\" type=\"fix\" dev=\"ebourg\">NullPointerException in CSVPrinter.print()/println()</action>\n       <action issue=\"CSV-45\" type=\"update\" dev=\"yonik\">CSVPrinter overhaul</action>",
                "changes": 20
            },
            {
                "status": "modified",
                "additions": 3,
                "raw_url": "https://github.com/apache/commons-csv/raw/2480dffa6d8343b189c6fb57b88b325c45f0b83f/src/main/java/org/apache/commons/csv/CSVRecord.java",
                "contents_url": "https://api.github.com/repos/apache/commons-csv/contents/src/main/java/org/apache/commons/csv/CSVRecord.java?ref=2480dffa6d8343b189c6fb57b88b325c45f0b83f",
                "filename": "src/main/java/org/apache/commons/csv/CSVRecord.java",
                "deletions": 0,
                "sha": "e814b707c6401fb204b8401ac612ff1640e8d63f",
                "blob_url": "https://github.com/apache/commons-csv/blob/2480dffa6d8343b189c6fb57b88b325c45f0b83f/src/main/java/org/apache/commons/csv/CSVRecord.java",
                "patch": "@@ -177,6 +177,9 @@ public boolean isSet(final String name) {\n      * @return the given map.\n      */\n     <M extends Map<String, String>> M putIn(final M map) {\n+        if (mapping == null) {\n+            return map;\n+        }\n         for (final Entry<String, Integer> entry : mapping.entrySet()) {\n             final int col = entry.getValue().intValue();\n             if (col < values.length) {",
                "changes": 3
            },
            {
                "status": "modified",
                "additions": 10,
                "raw_url": "https://github.com/apache/commons-csv/raw/2480dffa6d8343b189c6fb57b88b325c45f0b83f/src/test/java/org/apache/commons/csv/CSVRecordTest.java",
                "contents_url": "https://api.github.com/repos/apache/commons-csv/contents/src/test/java/org/apache/commons/csv/CSVRecordTest.java?ref=2480dffa6d8343b189c6fb57b88b325c45f0b83f",
                "filename": "src/test/java/org/apache/commons/csv/CSVRecordTest.java",
                "deletions": 0,
                "sha": "1ef6e28e4169cffe0a7178238a3e705925cdcc60",
                "blob_url": "https://github.com/apache/commons-csv/blob/2480dffa6d8343b189c6fb57b88b325c45f0b83f/src/test/java/org/apache/commons/csv/CSVRecordTest.java",
                "patch": "@@ -18,6 +18,7 @@\n \n import static org.junit.Assert.assertEquals;\n import static org.junit.Assert.assertFalse;\n+import static org.junit.Assert.assertNotNull;\n import static org.junit.Assert.assertNull;\n import static org.junit.Assert.assertTrue;\n \n@@ -166,6 +167,15 @@ public void testToMapWithShortRecord() throws Exception {\n        final CSVRecord shortRec = parser.iterator().next();\n        shortRec.toMap();\n     }\n+\n+    @Test\n+    public void testToMapWithNoHeader() throws Exception {\n+       final CSVParser parser =  CSVParser.parse(\"a,b\", CSVFormat.newFormat(','));\n+       final CSVRecord shortRec = parser.iterator().next();\n+       Map<String, String> map = shortRec.toMap();\n+       assertNotNull(\"Map is not null.\", map);\n+       assertTrue(\"Map is empty.\", map.isEmpty());\n+    }\n     \n     private void validateMap(final Map<String, String> map, final boolean allowsNulls) {\n         assertTrue(map.containsKey(\"first\"));",
                "changes": 10
            }
        ],
        "unit_tests": [
            "CSVRecordTest.java"
        ]
    },
    {
        "buggy": false,
        "test_file": "src/test/java/org/apache/commons/csv/CSVRecordTest.java",
        "buggy_files": [
            "src/changes/changes.xml",
            "src/main/java/org/apache/commons/csv/CSVRecord.java"
        ],
        "fixed": true
    }
]