[{"commit": "https://github.com/apache/geronimo-devtools/commit/3af2423639afeaa4312af5dc1ae0ea05e62c4a23", "parent": "https://github.com/apache/geronimo-devtools/commit/50087f2c6cba9655907bcdbff79ae3b98a7c8016", "message": "Fix NPE thrown while editing geronimo-application.xml\n\ngit-svn-id: https://svn.apache.org/repos/asf/geronimo/devtools/eclipse-plugin/trunk@642269 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "geronimo-devtools_1", "file": [{"additions": 17, "raw_url": "https://github.com/apache/geronimo-devtools/raw/3af2423639afeaa4312af5dc1ae0ea05e62c4a23/plugins/org.apache.geronimo.st.v21.ui/src/main/java/org/apache/geronimo/st/v21/ui/sections/CommonGeneralSection.java", "blob_url": "https://github.com/apache/geronimo-devtools/blob/3af2423639afeaa4312af5dc1ae0ea05e62c4a23/plugins/org.apache.geronimo.st.v21.ui/src/main/java/org/apache/geronimo/st/v21/ui/sections/CommonGeneralSection.java", "sha": "95c464b23977a73ad6e826ecfb5a5a8bd0dedc7a", "changes": 29, "status": "modified", "deletions": 12, "contents_url": "https://api.github.com/repos/apache/geronimo-devtools/contents/plugins/org.apache.geronimo.st.v21.ui/src/main/java/org/apache/geronimo/st/v21/ui/sections/CommonGeneralSection.java?ref=3af2423639afeaa4312af5dc1ae0ea05e62c4a23", "patch": "@@ -27,6 +27,7 @@\n import org.apache.geronimo.jee.deployment.Dependency;\r\n import org.apache.geronimo.jee.deployment.Environment;\r\n import org.apache.geronimo.jee.deployment.ObjectFactory;\r\n+import org.apache.geronimo.jee.application.Application;\r\n import org.apache.geronimo.jee.connector.Connector;\r\n import org.apache.geronimo.st.ui.CommonMessages;\r\n import org.apache.geronimo.st.ui.sections.AbstractSectionPart;\r\n@@ -304,25 +305,29 @@ private Artifact getSharedLibDependency(Dependencies dependencies) {\n \t// Need to support both WebApp and Connector \r\n \t//\r\n \tprivate Environment getEnvironment(boolean create) {\r\n-\t\t\r\n \t\tEnvironment type = null;\r\n \t\tObject plan = getPlan().getValue();\r\n-\t\tif ( WebApp.class.isInstance( plan ) ) {\r\n-\t\t\ttype = ((WebApp)plan).getEnvironment();\r\n+\t\tif (WebApp.class.isInstance(plan)) {\r\n+\t\t\ttype = ((WebApp) plan).getEnvironment();\r\n \t\t\tif (type == null && create) {\r\n-                type = getDeploymentObjectFactory().createEnvironment();\r\n-                ((WebApp)plan).setEnvironment( type );\r\n+\t\t\t\ttype = getDeploymentObjectFactory().createEnvironment();\r\n+\t\t\t\t((WebApp) plan).setEnvironment(type);\r\n \t\t\t}\r\n-\t\t}\r\n-\t\tif ( Connector.class.isInstance( plan ) ) {\r\n-\t\t\ttype = ((Connector)plan).getEnvironment();\r\n+\t\t} else if (Connector.class.isInstance(plan)) {\r\n+\t\t\ttype = ((Connector) plan).getEnvironment();\r\n \t\t\tif (type == null && create) {\r\n-                type = getDeploymentObjectFactory().createEnvironment();\r\n-                ((Connector)plan).setEnvironment( type );\r\n+\t\t\t\ttype = getDeploymentObjectFactory().createEnvironment();\r\n+\t\t\t\t((Connector) plan).setEnvironment(type);\r\n+\t\t\t}\r\n+\t\t} else if (Application.class.isInstance(plan)) {\r\n+\t\t\ttype = ((Application) plan).getEnvironment();\r\n+\t\t\tif (type == null && create) {\r\n+\t\t\t\ttype = getDeploymentObjectFactory().createEnvironment();\r\n+\t\t\t\t((Application) plan).setEnvironment(type);\r\n \t\t\t}\r\n \t\t}\r\n-        return type;\r\n-\t\t\r\n+\t\t// TODO add support for open-ejb & app-client clients\r\n+\t\treturn type;\r\n \t}\r\n \t\r\n \tprivate Dependencies getDependencies(boolean create) {\r", "filename": "plugins/org.apache.geronimo.st.v21.ui/src/main/java/org/apache/geronimo/st/v21/ui/sections/CommonGeneralSection.java"}], "repo": "geronimo-devtools"}, {"commit": "https://github.com/apache/geronimo-devtools/commit/e9432dec2922c11cbd38353261a29108dad01029", "parent": "https://github.com/apache/geronimo-devtools/commit/62a3397e3abda896c54519c07884e6bd5aec3a34", "message": "fix npe on shutdown\n\ngit-svn-id: https://svn.apache.org/repos/asf/geronimo/devtools/eclipse-plugin/trunk@405509 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "geronimo-devtools_2", "file": [{"additions": 1, "raw_url": "https://github.com/apache/geronimo-devtools/raw/e9432dec2922c11cbd38353261a29108dad01029/plugins/org.apache.geronimo.st.core/src/org/apache/geronimo/st/core/internal/Trace.java", "blob_url": "https://github.com/apache/geronimo-devtools/blob/e9432dec2922c11cbd38353261a29108dad01029/plugins/org.apache.geronimo.st.core/src/org/apache/geronimo/st/core/internal/Trace.java", "sha": "3f23600b74e08de787dd1f3422bee85752edde4e", "changes": 2, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/geronimo-devtools/contents/plugins/org.apache.geronimo.st.core/src/org/apache/geronimo/st/core/internal/Trace.java?ref=e9432dec2922c11cbd38353261a29108dad01029", "patch": "@@ -67,7 +67,7 @@ public static void trace(byte level, String s) {\n \t *            a throwable\n \t */\n \tpublic static void trace(byte level, String s, Throwable t) {\n-\t\tif (!Activator.getDefault().isDebugging())\n+\t\tif (Activator.getDefault() == null || !Activator.getDefault().isDebugging())\n \t\t\treturn;\n \n \t\tSystem.out.println(Activator.PLUGIN_ID + \":  \" + s);", "filename": "plugins/org.apache.geronimo.st.core/src/org/apache/geronimo/st/core/internal/Trace.java"}], "repo": "geronimo-devtools"}, {"commit": "https://github.com/apache/geronimo-devtools/commit/e3a9ec31a7a50b1cd88bd0f2aca50a9857aba55d", "parent": "https://github.com/apache/geronimo-devtools/commit/43f400be6c4832acaf65963ad12e749937673ae0", "message": "fix NPE\n\ngit-svn-id: https://svn.apache.org/repos/asf/geronimo/devtools/trunk/modules/eclipse-plugin@372861 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "geronimo-devtools_3", "file": [{"additions": 8, "raw_url": "https://github.com/apache/geronimo-devtools/raw/e3a9ec31a7a50b1cd88bd0f2aca50a9857aba55d/plugins/org.apache.geronimo.ui/src/org/apache/geronimo/ui/internal/GeronimoServerRuntimeWizardFragment.java", "blob_url": "https://github.com/apache/geronimo-devtools/blob/e3a9ec31a7a50b1cd88bd0f2aca50a9857aba55d/plugins/org.apache.geronimo.ui/src/org/apache/geronimo/ui/internal/GeronimoServerRuntimeWizardFragment.java", "sha": "05605b0e43310f37838fac9880df108488c5d5e1", "changes": 12, "status": "modified", "deletions": 4, "contents_url": "https://api.github.com/repos/apache/geronimo-devtools/contents/plugins/org.apache.geronimo.ui/src/org/apache/geronimo/ui/internal/GeronimoServerRuntimeWizardFragment.java?ref=e3a9ec31a7a50b1cd88bd0f2aca50a9857aba55d", "patch": "@@ -119,11 +119,15 @@ public void createContent(Composite parent, IWizardHandle handle) {\n \t\tdata.horizontalSpan = 3;\n \t\tlabel.setLayoutData(data);\n \t\tlabel.setToolTipText(Messages.tooltipLoc);\n-\t\t\n-\t\tString currentValue = getRuntimeDelegate().getRuntimeWorkingCopy().getLocation().toOSString();\n \n \t\tinstallDir = new Text(composite, SWT.BORDER);\n-\t\tinstallDir.setText(currentValue);\n+\n+\t\tIPath currentLocation = getRuntimeDelegate().getRuntimeWorkingCopy()\n+\t\t\t\t.getLocation();\n+\t\tif (currentLocation != null) {\n+\t\t\tinstallDir.setText(currentLocation.toOSString());\n+\t\t}\n+\n \t\tdata = new GridData(GridData.FILL_HORIZONTAL);\n \t\tdata.horizontalSpan = 2;\n \t\tinstallDir.setLayoutData(data);\n@@ -135,7 +139,7 @@ public void modifyText(ModifyEvent e) {\n \t\t\t\tvalidate();\n \t\t\t}\n \t\t});\n-\t\n+\n \t\tfinal Composite browseComp = composite;\n \t\tButton browse = SWTUtil.createButton(composite, Messages.browse);\n \t\tbrowse.addSelectionListener(new SelectionAdapter() {", "filename": "plugins/org.apache.geronimo.ui/src/org/apache/geronimo/ui/internal/GeronimoServerRuntimeWizardFragment.java"}], "repo": "geronimo-devtools"}, {"commit": "https://github.com/apache/geronimo-devtools/commit/dadcefdc5db627745cad9693f3eb4f0a302baf2d", "parent": "https://github.com/apache/geronimo-devtools/commit/def7303fbdcff5a1891b18ba14a3477d89f051cb", "message": "GERONIMODEVTOOLS-791: Simplify code a bit and make it consistent with other related feature. Fix NPE on start.\n\ngit-svn-id: https://svn.apache.org/repos/asf/geronimo/devtools/eclipse-plugin/trunk@1363511 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "geronimo-devtools_4", "file": [{"additions": 7, "raw_url": "https://github.com/apache/geronimo-devtools/raw/dadcefdc5db627745cad9693f3eb4f0a302baf2d/plugins/org.apache.geronimo.st.v30.core/src/main/java/org/apache/geronimo/st/v30/core/DeploymentUtils.java", "blob_url": "https://github.com/apache/geronimo-devtools/blob/dadcefdc5db627745cad9693f3eb4f0a302baf2d/plugins/org.apache.geronimo.st.v30.core/src/main/java/org/apache/geronimo/st/v30/core/DeploymentUtils.java", "sha": "d943ced6598a1672a3c1cf903a8a8cab1d0d9dca", "changes": 9, "status": "modified", "deletions": 2, "contents_url": "https://api.github.com/repos/apache/geronimo-devtools/contents/plugins/org.apache.geronimo.st.v30.core/src/main/java/org/apache/geronimo/st/v30/core/DeploymentUtils.java?ref=dadcefdc5db627745cad9693f3eb4f0a302baf2d", "patch": "@@ -137,13 +137,18 @@ public static File getTargetFile(IServer server, IModule module) throws CoreExce\n             //file = generateRunFromWorkspaceConfig(getModule());\n             throw new CoreException(new Status(IStatus.ERROR, Activator.PLUGIN_ID, \"Run from workspace is unsupported.\"));\n         } else {\n-            IPath outputDir = DeploymentUtils.STATE_LOC.append(\"server_\" + server.getId());\n-            outputDir.toFile().mkdirs();\n+            IPath outputDir = getServerDirectory(server);\n             file = DeploymentUtils.createJarFile(module, outputDir);\n         }\n         return file;\n     }\n     \n+    public static IPath getServerDirectory(IServer server) {\n+        IPath outputDir = DeploymentUtils.STATE_LOC.append(\"server_\" + server.getId());\n+        outputDir.toFile().mkdirs();\n+        return outputDir;\n+    }\n+    \n     public static int getModuleState(IServer server, IModule module) {\n         return server.getModuleState(new IModule[] {module});\n     }", "filename": "plugins/org.apache.geronimo.st.v30.core/src/main/java/org/apache/geronimo/st/v30/core/DeploymentUtils.java"}, {"additions": 17, "raw_url": "https://github.com/apache/geronimo-devtools/raw/dadcefdc5db627745cad9693f3eb4f0a302baf2d/plugins/org.apache.geronimo.st.v30.core/src/main/java/org/apache/geronimo/st/v30/core/GeronimoLaunchConfigurationDelegate.java", "blob_url": "https://github.com/apache/geronimo-devtools/blob/dadcefdc5db627745cad9693f3eb4f0a302baf2d/plugins/org.apache.geronimo.st.v30.core/src/main/java/org/apache/geronimo/st/v30/core/GeronimoLaunchConfigurationDelegate.java", "sha": "f3308cc71b3c47f465edf07b7ed89c8ed450b302", "changes": 19, "status": "modified", "deletions": 2, "contents_url": "https://api.github.com/repos/apache/geronimo-devtools/contents/plugins/org.apache.geronimo.st.v30.core/src/main/java/org/apache/geronimo/st/v30/core/GeronimoLaunchConfigurationDelegate.java?ref=dadcefdc5db627745cad9693f3eb4f0a302baf2d", "patch": "@@ -139,10 +139,25 @@ public void launch(ILaunchConfiguration configuration, String mode, ILaunch laun\n         Trace.trace(Trace.INFO, \"GeronimoLaunchConfigurationDelegate: manageApplicationStart:=\" + managedApplicationStart, Activator.traceCore);\n         if (managedApplicationStart) {\n             Set<String> modifiedConfigs = server.getModifiedConfigIds();\n+            Set<String> deletedConfigs = server.getDeletedConfigIds();\n+            int params = 0;\n             if (!modifiedConfigs.isEmpty()) {\n-                String[] newJvmArguments = new String[jvmArguments.length + 1];\n+                params++;\n+            }\n+            if (!deletedConfigs.isEmpty()) {\n+                params++;\n+            }            \n+            if (params > 0) {\n+                String[] newJvmArguments = new String[jvmArguments.length + params];\n                 System.arraycopy(jvmArguments, 0, newJvmArguments, 0, jvmArguments.length);\n-                newJvmArguments[jvmArguments.length] = toString(\"-Dgeronimo.loadOnlyConfigList=\", modifiedConfigs);\n+                int index = jvmArguments.length;\n+                if (!modifiedConfigs.isEmpty()) {\n+                    newJvmArguments[index] = toString(\"-Dgeronimo.loadOnlyConfigList=\", modifiedConfigs);\n+                    index++;\n+                }\n+                if (!deletedConfigs.isEmpty()) {\n+                    newJvmArguments[index] = toString(\"-Dgeronimo.removedArtifactList=\", deletedConfigs);\n+                }\n                 return newJvmArguments;\n             }\n         }", "filename": "plugins/org.apache.geronimo.st.v30.core/src/main/java/org/apache/geronimo/st/v30/core/GeronimoLaunchConfigurationDelegate.java"}, {"additions": 18, "raw_url": "https://github.com/apache/geronimo-devtools/raw/dadcefdc5db627745cad9693f3eb4f0a302baf2d/plugins/org.apache.geronimo.st.v30.core/src/main/java/org/apache/geronimo/st/v30/core/GeronimoServerBehaviourDelegate.java", "blob_url": "https://github.com/apache/geronimo-devtools/blob/dadcefdc5db627745cad9693f3eb4f0a302baf2d/plugins/org.apache.geronimo.st.v30.core/src/main/java/org/apache/geronimo/st/v30/core/GeronimoServerBehaviourDelegate.java", "sha": "217dc383bce4b4144d3365a92648da656f736b10", "changes": 27, "status": "modified", "deletions": 9, "contents_url": "https://api.github.com/repos/apache/geronimo-devtools/contents/plugins/org.apache.geronimo.st.v30.core/src/main/java/org/apache/geronimo/st/v30/core/GeronimoServerBehaviourDelegate.java?ref=dadcefdc5db627745cad9693f3eb4f0a302baf2d", "patch": "@@ -54,7 +54,7 @@\n import org.apache.geronimo.st.v30.core.commands.DeploymentCommandFactory;\n import org.apache.geronimo.st.v30.core.internal.DependencyHelper;\n import org.apache.geronimo.st.v30.core.internal.Messages;\n-import org.apache.geronimo.st.v30.core.internal.ServerDelegateHelper;\n+import org.apache.geronimo.st.v30.core.internal.RemovedModuleHelper;\n import org.apache.geronimo.st.v30.core.internal.Trace;\n import org.apache.geronimo.st.v30.core.operations.ISharedLibEntryCreationDataModelProperties;\n import org.apache.geronimo.st.v30.core.operations.SharedLibEntryCreationOperation;\n@@ -135,6 +135,8 @@\n     \n     private DefaultModuleHandler defaultModuleHandler;\n     private OSGiModuleHandler osgiModuleHandler;\n+    \n+    private RemovedModuleHelper removedModuleHelper;\n \n     protected ClassLoader getContextClassLoader() {\n         return Kernel.class.getClassLoader();\n@@ -845,6 +847,8 @@ protected void initialize(IProgressMonitor monitor) {\n         defaultModuleHandler = new DefaultModuleHandler(this);\n         osgiModuleHandler = new OSGiModuleHandler(this);\n         \n+        removedModuleHelper = new RemovedModuleHelper(this);\n+        \n         Trace.tracePoint(\"Exit \", Activator.traceCore, \"GeronimoServerBehaviourDelegate.initialize\");\n     }\n \n@@ -907,14 +911,7 @@ public void setServerStarted() {\n         setServerState(IServer.STATE_STARTED);\n         GeronimoConnectionFactory.getInstance().destroy(getServer());\n         startSynchronizeProjectOnServerTask();\n-        \n-        ServerDelegateHelper helper = getServerDelegate().getServerDelegateHelper();\n-        String jvmArgs = helper.deleteRemovedArtifactListFromJVMArgs(getServerDelegate().getVMArgs());\n-        try {\n-            helper.persistJVMArgs(jvmArgs, new NullProgressMonitor());\n-        } catch (CoreException e) {\n-            Trace.trace(Trace.ERROR, e.getMessage(), e, Activator.traceCore);\n-        }\n+        removedModuleHelper.clearRemoveModules();\n     }\n \n     public void setServerStopped() {\n@@ -1710,4 +1707,16 @@ public boolean hasChanged(IModule rootModule) {\n         Trace.tracePoint(\"Exit\", Activator.traceCore, \"GeronimoServerBehaviourDelegate.getModifiedConfigIds\", configIds);        \n         return configIds;\n     }\n+    \n+    public Set<String> getDeletedConfigIds() {\n+        Trace.tracePoint(\"Entry\", Activator.traceCore, \"GeronimoServerBehaviourDelegate.getDeletedConfigIds\");\n+        Set<String> configIds = removedModuleHelper.getRemovedConfigIds();\n+        Trace.tracePoint(\"Exit\", Activator.traceCore, \"GeronimoServerBehaviourDelegate.getDeletedConfigIds\", configIds);        \n+        return configIds;\n+    }\n+    \n+    protected RemovedModuleHelper getRemovedModuleHelper() {\n+        return removedModuleHelper;\n+    }\n+    \n }", "filename": "plugins/org.apache.geronimo.st.v30.core/src/main/java/org/apache/geronimo/st/v30/core/GeronimoServerBehaviourDelegate.java"}, {"additions": 12, "raw_url": "https://github.com/apache/geronimo-devtools/raw/dadcefdc5db627745cad9693f3eb4f0a302baf2d/plugins/org.apache.geronimo.st.v30.core/src/main/java/org/apache/geronimo/st/v30/core/GeronimoServerDelegate.java", "blob_url": "https://github.com/apache/geronimo-devtools/blob/dadcefdc5db627745cad9693f3eb4f0a302baf2d/plugins/org.apache.geronimo.st.v30.core/src/main/java/org/apache/geronimo/st/v30/core/GeronimoServerDelegate.java", "sha": "bc92b07f10023d419db4e5b26abc32ffcfb1bd62", "changes": 27, "status": "modified", "deletions": 15, "contents_url": "https://api.github.com/repos/apache/geronimo-devtools/contents/plugins/org.apache.geronimo.st.v30.core/src/main/java/org/apache/geronimo/st/v30/core/GeronimoServerDelegate.java?ref=dadcefdc5db627745cad9693f3eb4f0a302baf2d", "patch": "@@ -38,7 +38,6 @@\n import org.apache.geronimo.crypto.EncryptionManager;\n import org.apache.geronimo.deployment.plugin.factories.DeploymentFactoryImpl;\n import org.apache.geronimo.deployment.plugin.jmx.JMXDeploymentManager;\n-import org.apache.geronimo.st.v30.core.internal.ServerDelegateHelper;\n import org.apache.geronimo.st.v30.core.internal.Trace;\n import org.apache.geronimo.st.v30.core.osgi.AriesHelper;\n import org.apache.geronimo.st.v30.core.osgi.OsgiConstants;\n@@ -153,8 +152,6 @@\n     \n     public static final String ENABLE_REMOTE_KARAF_SHELL = \"-Dkaraf.startRemoteShell=true\";\n     \n-    public static final String REMOVE_ARTIFACT_LIST = \"-Dgeronimo.removedArtifactList\";\n-    \n     public static final int KARAF_SHELL_DEFAULT_TIMEOUT = 0;\n     \n     public static final int KARAF_SHELL_DEFAULT_KEEPALIVE = 300;\n@@ -165,8 +162,6 @@\n \n     private static DeploymentFactory deploymentFactory = new DeploymentFactoryImpl();\n     \n-    private final ServerDelegateHelper serverDelegateHelper = new ServerDelegateHelper(this);\n-    \n     private boolean suspendArgUpdates;\n     \n     /*\n@@ -262,12 +257,13 @@ public void modifyModules(IModule[] add, IModule[] remove, IProgressMonitor moni\n         // Now, only handle the remov/add modules when the server is shutdown \n         // and the attribute org.apache.geronimo.st.v30.core.manageApplicationStart is true\n         int serverState = getServer().getServerState();\n-        if(serverState == IServer.STATE_STOPPED && isManageApplicationStart()) {\n-            if(remove != null && remove.length > 0) {\n-                serverDelegateHelper.markRemoveModules(remove, monitor);\n+        if (serverState == IServer.STATE_STOPPED && isManageApplicationStart()) {\n+            GeronimoServerBehaviourDelegate delegate = (GeronimoServerBehaviourDelegate) getServer().loadAdapter(GeronimoServerBehaviourDelegate.class, monitor);\n+            if (remove != null && remove.length > 0) {\n+                delegate.getRemovedModuleHelper().markRemoveModules(remove, monitor);\n             } \n-            if(add != null && add.length > 0) {\n-                serverDelegateHelper.unMarkRemoveModules(add, monitor);\n+            if (add != null && add.length > 0) {\n+                delegate.getRemovedModuleHelper().unMarkRemoveModules(add, monitor);\n             }\n         }\n         // TODO servermodule.info should be pushed to here and set as instance\n@@ -534,6 +530,11 @@ public URL getModuleRootURL(IModule module) {\n         return null;        \n     }\n \n+    @Override\n+    protected void initialize() {\n+        Trace.tracePoint(\"Entry\", Activator.traceCore, \"GeronimoServerDelegate.initialize\");\n+        Trace.tracePoint(\"Exit\", Activator.traceCore, \"GeronimoServerDelegate.initialize\");\n+    }\n \n     /**\n      * Initialize this server with default values when a new server is created\n@@ -1203,9 +1204,5 @@ public Map getServerInstanceProperties() {\n     public void setServerInstanceProperties(Map map) {\n         setAttribute(GeronimoRuntimeDelegate.SERVER_INSTANCE_PROPERTIES, map);\n     }\n-    \n-    public ServerDelegateHelper getServerDelegateHelper() {\n-        return serverDelegateHelper;\n-    }\n-    \n+\n }", "filename": "plugins/org.apache.geronimo.st.v30.core/src/main/java/org/apache/geronimo/st/v30/core/GeronimoServerDelegate.java"}, {"additions": 140, "raw_url": "https://github.com/apache/geronimo-devtools/raw/dadcefdc5db627745cad9693f3eb4f0a302baf2d/plugins/org.apache.geronimo.st.v30.core/src/main/java/org/apache/geronimo/st/v30/core/internal/RemovedModuleHelper.java", "blob_url": "https://github.com/apache/geronimo-devtools/blob/dadcefdc5db627745cad9693f3eb4f0a302baf2d/plugins/org.apache.geronimo.st.v30.core/src/main/java/org/apache/geronimo/st/v30/core/internal/RemovedModuleHelper.java", "sha": "c78c6dd0ef0237d04e359a9bc4b5c196580efead", "changes": 140, "status": "added", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/geronimo-devtools/contents/plugins/org.apache.geronimo.st.v30.core/src/main/java/org/apache/geronimo/st/v30/core/internal/RemovedModuleHelper.java?ref=dadcefdc5db627745cad9693f3eb4f0a302baf2d", "patch": "@@ -0,0 +1,140 @@\n+/**\n+ *  Licensed to the Apache Software Foundation (ASF) under one or more\n+ *  contributor license agreements.  See the NOTICE file distributed with\n+ *  this work for additional information regarding copyright ownership.\n+ *  The ASF licenses this file to You under the Apache License, Version 2.0\n+ *  (the \"License\"); you may not use this file except in compliance with\n+ *  the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing, software\n+ *  distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *  See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ */\n+package org.apache.geronimo.st.v30.core.internal;\n+\n+import java.io.BufferedInputStream;\n+import java.io.BufferedOutputStream;\n+import java.io.File;\n+import java.io.FileInputStream;\n+import java.io.FileOutputStream;\n+import java.io.IOException;\n+import java.io.ObjectInputStream;\n+import java.io.ObjectOutputStream;\n+import java.util.HashSet;\n+import java.util.Set;\n+\n+import org.apache.geronimo.kernel.util.IOUtils;\n+import org.apache.geronimo.st.v30.core.Activator;\n+import org.apache.geronimo.st.v30.core.DeploymentUtils;\n+import org.apache.geronimo.st.v30.core.GeronimoServerBehaviourDelegate;\n+import org.eclipse.core.runtime.CoreException;\n+import org.eclipse.core.runtime.IPath;\n+import org.eclipse.core.runtime.IProgressMonitor;\n+import org.eclipse.wst.server.core.IModule;\n+\n+/**\n+ * Using the class to help the Server delegate\n+ * \n+ * @version $Rev$ $Date: 2012-07-05 09:57:06 -0400 (Thu, 05 Jul 2012)\n+ *          $\n+ */\n+public class RemovedModuleHelper {\n+\n+    private final GeronimoServerBehaviourDelegate serverDelegate;\n+    private final IPath dataFile;\n+    private final Set<String> deletedConfigs;\n+\n+    public RemovedModuleHelper(GeronimoServerBehaviourDelegate serverDelegate) {\n+        this.serverDelegate = serverDelegate;\n+        this.dataFile = DeploymentUtils.getServerDirectory(serverDelegate.getServer()).append(\"deleted-modules.dat\");\n+        this.deletedConfigs = loadDataFile();\n+    }\n+\n+    public synchronized void markRemoveModules(IModule[] modules, IProgressMonitor monitor) throws CoreException {\n+        // mark the module as removed\n+        boolean needChange = false;\n+        for (IModule rModule : modules) {\n+            String configId = DeploymentUtils.getConfigId(serverDelegate.getServer(), rModule);\n+            if (!deletedConfigs.contains(configId)) {\n+                deletedConfigs.add(configId);\n+                needChange = true;\n+            }\n+        }\n+\n+        if (needChange) {\n+            saveDataFile();\n+        }\n+    }\n+\n+    public synchronized void unMarkRemoveModules(IModule[] modules, IProgressMonitor monitor) throws CoreException {\n+        boolean needChange = false;\n+        for (IModule rModule : modules) {\n+            String configId = DeploymentUtils.getConfigId(serverDelegate.getServer(), rModule);\n+            if (deletedConfigs.remove(configId)) {\n+                needChange = true;\n+            }\n+        }\n+\n+        if (needChange) {\n+            saveDataFile();\n+        }\n+    }\n+\n+    public synchronized void clearRemoveModules() {\n+        deletedConfigs.clear();\n+        deleteDataFile();\n+    }\n+    \n+    public synchronized Set<String> getRemovedConfigIds() {\n+        return new HashSet<String>(deletedConfigs);\n+    }\n+\n+    private void deleteDataFile() {\n+        Trace.tracePoint(\"Entry\", Activator.traceCore, \"ServerDelegateHelper.deleteDataFile\", dataFile);\n+        File file = dataFile.toFile();\n+        boolean rs = file.delete();\n+        Trace.tracePoint(\"Exit\", Activator.traceCore, \"ServerDelegateHelper.deleteDataFile\", rs);\n+    }\n+    \n+    private Set<String> loadDataFile() {\n+        Trace.tracePoint(\"Entry\", Activator.traceCore, \"ServerDelegateHelper.loadDataFile\", dataFile);\n+        File file = dataFile.toFile();  \n+        Set<String> set = null;\n+        if (file.exists()) {\n+            ObjectInputStream oi = null;\n+            try {\n+                oi = new ObjectInputStream(new BufferedInputStream(new FileInputStream(file)));\n+                set = (Set<String>) oi.readObject();\n+            } catch (Exception e) {\n+                Trace.trace(Trace.ERROR, e.getMessage(), e, Activator.logCore);\n+            } finally {\n+                IOUtils.close(oi);\n+            }\n+        }\n+        if (set == null) {\n+            set = new HashSet<String>();\n+        }\n+        Trace.tracePoint(\"Exit\", Activator.traceCore, \"ServerDelegateHelper.loadDataFile\", set);\n+        return set;\n+    }\n+\n+    private void saveDataFile() {\n+        Trace.tracePoint(\"Entry\", Activator.traceCore, \"ServerDelegateHelper.saveDataFile\", dataFile, deletedConfigs);\n+        File file = dataFile.toFile();\n+        ObjectOutputStream oo = null;\n+        try {\n+            oo = new ObjectOutputStream(new BufferedOutputStream(new FileOutputStream(file)));\n+            oo.writeObject(deletedConfigs);\n+        } catch (IOException e) {\n+            Trace.trace(Trace.ERROR, e.getMessage(), e, Activator.logCore);\n+        } finally {\n+            IOUtils.close(oo);\n+        }\n+        Trace.tracePoint(\"Exit\", Activator.traceCore, \"ServerDelegateHelper.saveDataFile\");\n+    }\n+\n+}", "filename": "plugins/org.apache.geronimo.st.v30.core/src/main/java/org/apache/geronimo/st/v30/core/internal/RemovedModuleHelper.java"}, {"additions": 0, "raw_url": "https://github.com/apache/geronimo-devtools/raw/def7303fbdcff5a1891b18ba14a3477d89f051cb/plugins/org.apache.geronimo.st.v30.core/src/main/java/org/apache/geronimo/st/v30/core/internal/ServerDelegateHelper.java", "blob_url": "https://github.com/apache/geronimo-devtools/blob/def7303fbdcff5a1891b18ba14a3477d89f051cb/plugins/org.apache.geronimo.st.v30.core/src/main/java/org/apache/geronimo/st/v30/core/internal/ServerDelegateHelper.java", "sha": "d4c611d7b7af5c698066a3f02b6c2bd79166b2f4", "changes": 159, "status": "removed", "deletions": 159, "contents_url": "https://api.github.com/repos/apache/geronimo-devtools/contents/plugins/org.apache.geronimo.st.v30.core/src/main/java/org/apache/geronimo/st/v30/core/internal/ServerDelegateHelper.java?ref=def7303fbdcff5a1891b18ba14a3477d89f051cb", "patch": "@@ -1,159 +0,0 @@\n-/**\n- *  Licensed to the Apache Software Foundation (ASF) under one or more\n- *  contributor license agreements.  See the NOTICE file distributed with\n- *  this work for additional information regarding copyright ownership.\n- *  The ASF licenses this file to You under the Apache License, Version 2.0\n- *  (the \"License\"); you may not use this file except in compliance with\n- *  the License.  You may obtain a copy of the License at\n- *\n- *     http://www.apache.org/licenses/LICENSE-2.0\n- *\n- *  Unless required by applicable law or agreed to in writing, software\n- *  distributed under the License is distributed on an \"AS IS\" BASIS,\n- *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n- *  See the License for the specific language governing permissions and\n- *  limitations under the License.\n- */\n-package org.apache.geronimo.st.v30.core.internal;\n-\n-import java.util.ArrayList;\n-import java.util.Arrays;\n-import java.util.Iterator;\n-import java.util.List;\n-\n-import org.apache.geronimo.st.v30.core.Activator;\n-import org.apache.geronimo.st.v30.core.DeploymentUtils;\n-import org.apache.geronimo.st.v30.core.GeronimoServerDelegate;\n-import org.eclipse.core.runtime.CoreException;\n-import org.eclipse.core.runtime.IProgressMonitor;\n-import org.eclipse.debug.core.ILaunchConfigurationWorkingCopy;\n-import org.eclipse.jdt.launching.IJavaLaunchConfigurationConstants;\n-import org.eclipse.wst.server.core.IModule;\n-\n-/**\n- * Using the class to help the Server delegate\n- *\n- * @version $Rev$ $Date$\n- */\n-public class ServerDelegateHelper {\n-    public final GeronimoServerDelegate serverDelegate;\n-    \n-    public ServerDelegateHelper(GeronimoServerDelegate serverDelegate) {\n-        this.serverDelegate = serverDelegate;\n-    }\n-    \n-    public void markRemoveModules(IModule[] modules, IProgressMonitor monitor) throws CoreException {\n-        String jvmArgs = serverDelegate.getVMArgs();\n-        String trimedJvmArgs = deleteRemovedArtifactListFromJVMArgs(jvmArgs);\n-        String removedModuleString = getRemovedModuleStringFromJVMArgs(jvmArgs);\n-        \n-        // mark the module as removed\n-        for(IModule rModule : modules) {\n-            String configId = DeploymentUtils.getConfigId(serverDelegate.getServer(), rModule);\n-            \n-            boolean needChange = true;\n-            if(! removedModuleString.equals(\"\")) {\n-                String[] rArtifactIds = removedModuleString.split(\",\");\n-                \n-                for(String rArtifactId : rArtifactIds) {\n-                    if(rArtifactId.equals(configId)) {\n-                        needChange = false;\n-                        break;\n-                    }\n-                }\n-            } else {// it means no modules need to be removed before, so just adds it\n-                needChange = true;// \n-            }\n-            if(needChange) {\n-                removedModuleString = removedModuleString == \"\" ? configId : removedModuleString + \",\" + configId;\n-                //persist the removed module to jvm args\n-                trimedJvmArgs = trimedJvmArgs.endsWith(\" \") ? trimedJvmArgs : trimedJvmArgs + \" \";\n-                persistJVMArgs(trimedJvmArgs + GeronimoServerDelegate.REMOVE_ARTIFACT_LIST + \"=\" + removedModuleString, monitor);\n-                Trace.trace(Trace.INFO, rModule.getName() + \":\" + rModule.getModuleType() + \" is marked as REMOVED\", Activator.traceCore);\n-            }\n-        }\n-    }\n-\n-    public void unMarkRemoveModules(IModule[] modules, IProgressMonitor monitor) throws CoreException {\n-        String jvmArgs = serverDelegate.getVMArgs();\n-        String trimedJvmArgs = deleteRemovedArtifactListFromJVMArgs(jvmArgs);\n-        String removedModuleString = getRemovedModuleStringFromJVMArgs(jvmArgs);\n-        \n-        for(IModule rModule : modules) {\n-            String configId = DeploymentUtils.getConfigId(serverDelegate.getServer(), rModule);\n-            List<String> rArtifactList = new ArrayList<String>();\n-            boolean needChange = false;\n-            \n-            if(! removedModuleString.equals(\"\")) {\n-                String[] rArtifactIds = removedModuleString.split(\",\");\n-                \n-                rArtifactList.addAll(Arrays.asList(rArtifactIds));\n-                Iterator<String> iter = rArtifactList.iterator();\n-                while(iter.hasNext()) {\n-                    if(iter.next().equals(configId)) {\n-                        iter.remove();\n-                        needChange = true;\n-                        break;\n-                    }\n-                }\n-            }\n-            if(needChange) {\n-                Iterator<String> iter = rArtifactList.iterator();\n-                StringBuilder sBuilder = new StringBuilder(\"\");\n-                while(iter.hasNext()) {\n-                    sBuilder.append(iter.next()).append(\",\");\n-                }\n-                if(sBuilder.length() > 0) {\n-                    removedModuleString = sBuilder.substring(0, sBuilder.length() - 1);\n-                    trimedJvmArgs = trimedJvmArgs.endsWith(\" \") ? trimedJvmArgs : trimedJvmArgs + \" \";\n-                    trimedJvmArgs = trimedJvmArgs + GeronimoServerDelegate.REMOVE_ARTIFACT_LIST + \"=\" + removedModuleString;\n-                }\n-                //persist the removed module to jvm args\n-                persistJVMArgs(trimedJvmArgs, monitor);\n-                Trace.trace(Trace.INFO, rModule.getName() + \":\" + rModule.getModuleType() + \" is unmarked\", Activator.traceCore);\n-            }\n-        }\n-    }\n-    \n-    public String deleteRemovedArtifactListFromJVMArgs(String jvmArgs) {\n-        String newJvmArgs = \"\";\n-        \n-        int index = jvmArgs.indexOf(GeronimoServerDelegate.REMOVE_ARTIFACT_LIST);\n-        if(index >= 0) {\n-            newJvmArgs = jvmArgs.substring(0, index);\n-            int splitIndex = jvmArgs.indexOf(0x20, index);\n-            \n-            if(splitIndex > 0) {\n-                newJvmArgs += jvmArgs.substring(splitIndex + 1);// the new jvm args eliminate the -Dgeronimo.removedArtifactList=...\n-            }\n-            return newJvmArgs;\n-        }\n-        return jvmArgs;\n-    }\n-    \n-    public String getRemovedModuleStringFromJVMArgs(String jvmArgs) {\n-        String removedModuleString = \"\";\n-        \n-        int index = jvmArgs.indexOf(GeronimoServerDelegate.REMOVE_ARTIFACT_LIST);\n-        if(index >= 0) {\n-            removedModuleString = jvmArgs.substring(index);\n-            int splitIndex = removedModuleString.indexOf(0x20);\n-            \n-            if(splitIndex == -1) {// it means the -Dgeronimo.removedArtifactList=... is the last jvm arg\n-                removedModuleString = removedModuleString.substring(GeronimoServerDelegate.REMOVE_ARTIFACT_LIST.length() + 1);\n-            } else if(splitIndex > 0) {\n-                removedModuleString = removedModuleString.substring(GeronimoServerDelegate.REMOVE_ARTIFACT_LIST.length() + 1, splitIndex);\n-            }\n-        }\n-        return removedModuleString;\n-    }\n-    \n-    public void persistJVMArgs(String jvmArgs, IProgressMonitor monitor) throws CoreException {\n-        jvmArgs = jvmArgs.trim();\n-        ILaunchConfigurationWorkingCopy launchConfigWc = serverDelegate.getServer().getLaunchConfiguration(true, monitor).getWorkingCopy();\n-        launchConfigWc.setAttribute(IJavaLaunchConfigurationConstants.ATTR_VM_ARGUMENTS, jvmArgs);\n-        launchConfigWc.doSave();\n-\n-        serverDelegate.setVMArgs(jvmArgs);\n-    }\n-}", "filename": "plugins/org.apache.geronimo.st.v30.core/src/main/java/org/apache/geronimo/st/v30/core/internal/ServerDelegateHelper.java"}], "repo": "geronimo-devtools"}, {"commit": "https://github.com/apache/geronimo-devtools/commit/43a3eabb80b0628e1946c84af68e8e658d807885", "parent": "https://github.com/apache/geronimo-devtools/commit/af2c06cf8d1645911bd026a2b45917dbdfd00c42", "message": "GERONIMODEVTOOLS-709: Fix NPE when changing server or JVM arguments\n\ngit-svn-id: https://svn.apache.org/repos/asf/geronimo/devtools/eclipse-plugin/trunk@1141232 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "geronimo-devtools_5", "file": [{"additions": 1, "raw_url": "https://github.com/apache/geronimo-devtools/raw/43a3eabb80b0628e1946c84af68e8e658d807885/plugins/org.apache.geronimo.st.v30.core/src/main/java/org/apache/geronimo/st/v30/core/GeronimoServerDelegate.java", "blob_url": "https://github.com/apache/geronimo-devtools/blob/43a3eabb80b0628e1946c84af68e8e658d807885/plugins/org.apache.geronimo.st.v30.core/src/main/java/org/apache/geronimo/st/v30/core/GeronimoServerDelegate.java", "sha": "83a641f1ecead2547aac002ef0afa6f3688564b4", "changes": 9, "status": "modified", "deletions": 8, "contents_url": "https://api.github.com/repos/apache/geronimo-devtools/contents/plugins/org.apache.geronimo.st.v30.core/src/main/java/org/apache/geronimo/st/v30/core/GeronimoServerDelegate.java?ref=43a3eabb80b0628e1946c84af68e8e658d807885", "patch": "@@ -751,7 +751,6 @@ public String getVMArgs() {\n         return getInstanceProperty(PROPERTY_VM_ARGS);\n     }\n     public void setVMArgs(String value) {\n-        Trace.tracePoint(\"Entry\", Activator.traceCore, \"GeronimoServerDelegate.getVMArgs\", value);\n         setInstanceProperty(PROPERTY_VM_ARGS, value);\n     }\n \n@@ -770,7 +769,6 @@ public String getProgramArgs() {\n         return getInstanceProperty(PROPERTY_PROGRAM_ARGS);\n     }\n     public void setProgramArgs(String value) {\n-        Trace.tracePoint(\"Entry\", Activator.traceCore, \"GeronimoServerDelegate.getProgramArgs\", value);\n         setInstanceProperty(PROPERTY_PROGRAM_ARGS, value);\n     }\n     \n@@ -913,12 +911,7 @@ public String getInstanceProperty(String name) {\n     public void setInstanceProperty(String name, String value) {\n         Map map = getServerInstanceProperties();\n         map.put(name, value);\n-        try {\n-            setServerInstanceProperties(map);\n-        } catch (Exception e) {\n-            // TODO WTF? Need to figure out why this fails...  seems to fail before setDefaults is called.\n-            Trace.trace(Trace.INFO, \"GeronimoServerDelegate.setInstanceProperty(name = \" + name + \", value = \" + value + \" )\", e, Activator.traceCore);\n-        }\n+        setServerInstanceProperties(map);\n     }\n \n     public Map getServerInstanceProperties() {", "filename": "plugins/org.apache.geronimo.st.v30.core/src/main/java/org/apache/geronimo/st/v30/core/GeronimoServerDelegate.java"}, {"additions": 5, "raw_url": "https://github.com/apache/geronimo-devtools/raw/43a3eabb80b0628e1946c84af68e8e658d807885/plugins/org.apache.geronimo.st.v30.ui/src/main/java/org/apache/geronimo/st/v30/ui/internal/GeronimoLaunchConfigurationTabGroup.java", "blob_url": "https://github.com/apache/geronimo-devtools/blob/43a3eabb80b0628e1946c84af68e8e658d807885/plugins/org.apache.geronimo.st.v30.ui/src/main/java/org/apache/geronimo/st/v30/ui/internal/GeronimoLaunchConfigurationTabGroup.java", "sha": "3cbb572765e1bfb7cffe07211f4d403f4d2294b5", "changes": 8, "status": "modified", "deletions": 3, "contents_url": "https://api.github.com/repos/apache/geronimo-devtools/contents/plugins/org.apache.geronimo.st.v30.ui/src/main/java/org/apache/geronimo/st/v30/ui/internal/GeronimoLaunchConfigurationTabGroup.java?ref=43a3eabb80b0628e1946c84af68e8e658d807885", "patch": "@@ -31,6 +31,7 @@\n import org.eclipse.jface.dialogs.MessageDialog;\n import org.eclipse.swt.widgets.Display;\n import org.eclipse.wst.server.core.IServer;\n+import org.eclipse.wst.server.core.IServerWorkingCopy;\n import org.eclipse.wst.server.core.ServerUtil;\n import org.eclipse.wst.server.ui.ServerLaunchConfigurationTab;\n \n@@ -68,17 +69,18 @@ public void performApply(ILaunchConfigurationWorkingCopy configuration) {\n              super.performApply(configuration);\n              \n              IServer server = ServerUtil.getServer(configuration);\n-             GeronimoServerDelegate sd = (GeronimoServerDelegate) server.getAdapter(GeronimoServerDelegate.class);\n+             IServerWorkingCopy swc = server.createWorkingCopy();\n+             GeronimoServerDelegate sd = (GeronimoServerDelegate) swc.loadAdapter(GeronimoServerDelegate.class, null);\n              \n              String oldValue = sd.getProgramArgs();\n              String newValue = configuration.getAttribute(IJavaLaunchConfigurationConstants.ATTR_PROGRAM_ARGUMENTS, oldValue);\n              sd.setProgramArgs(newValue);\n-             //sd.updatePropertiesFromProgramArgs(newValue);\n              \n              oldValue = sd.getVMArgs();\n              newValue = configuration.getAttribute(IJavaLaunchConfigurationConstants.ATTR_VM_ARGUMENTS, oldValue);\n              sd.setVMArgs(newValue);     \n-             //sd.updatePropertiesFromVMArgs(newValue);\n+             \n+             swc.save(true, null);\n                        \n          } catch (CoreException e) {\n         \t  MessageDialog.openError(Display.getCurrent().getActiveShell(),\"Error\", e.getMessage());", "filename": "plugins/org.apache.geronimo.st.v30.ui/src/main/java/org/apache/geronimo/st/v30/ui/internal/GeronimoLaunchConfigurationTabGroup.java"}], "repo": "geronimo-devtools"}, {"commit": "https://github.com/apache/geronimo-devtools/commit/bb72d754aa68ddb3dd906e53fba79316673afe33", "parent": "https://github.com/apache/geronimo-devtools/commit/82e1f948d372f407bce3cf3c806331d409eded75", "message": "GERONIMODEVTOOLS-719: NPE if delete a project which is deployed on geronimo server\n\ngit-svn-id: https://svn.apache.org/repos/asf/geronimo/devtools/eclipse-plugin/trunk@1138309 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "geronimo-devtools_6", "file": [{"additions": 6, "raw_url": "https://github.com/apache/geronimo-devtools/raw/bb72d754aa68ddb3dd906e53fba79316673afe33/plugins/org.apache.geronimo.st.v30.core/src/main/java/org/apache/geronimo/st/v30/core/GeronimoServerBehaviourDelegate.java", "blob_url": "https://github.com/apache/geronimo-devtools/blob/bb72d754aa68ddb3dd906e53fba79316673afe33/plugins/org.apache.geronimo.st.v30.core/src/main/java/org/apache/geronimo/st/v30/core/GeronimoServerBehaviourDelegate.java", "sha": "4425c4951cf062464380b33c681053bebda28ad4", "changes": 11, "status": "modified", "deletions": 5, "contents_url": "https://api.github.com/repos/apache/geronimo-devtools/contents/plugins/org.apache.geronimo.st.v30.core/src/main/java/org/apache/geronimo/st/v30/core/GeronimoServerBehaviourDelegate.java?ref=bb72d754aa68ddb3dd906e53fba79316673afe33", "patch": "@@ -1057,16 +1057,15 @@ private String getLastKnowConfigurationId(IModule module, String configId) throw\n     protected void doRemoved(IModule module, IProgressMonitor monitor) throws Exception {\n         Trace.tracePoint(\"Entry\", Activator.traceCore, \"GeronimoServerBehaviourDelegate.doRemoved\", module.getName());\n \n-        Map<String, String> artifactsMap = ModuleArtifactMapper.getInstance().getServerArtifactsMap(getServer());\n+        ModuleArtifactMapper mapper = ModuleArtifactMapper.getInstance();\n+        Map<String, String> artifactsMap = mapper.getServerArtifactsMap(getServer());\n         if (artifactsMap != null) {\n             synchronized (artifactsMap) {\n                 try {\n                     _doRemove(module, monitor);\n                 } finally {\n-                    // remove the mapping - even if things failed to undeploy\n-                    if (module.getProject() != null) {\n-                        artifactsMap.remove(module.getProject().getName());\n-                    }\n+                    // remove the mapping - even if module failed to undeploy\n+                    mapper.removeArtifactEntry(getServer(), module);\n                 }\n             }    \n         } else {\n@@ -1097,6 +1096,8 @@ protected void doNoChange(IModule module, IProgressMonitor monitor) throws Excep\n             } else {\n                 setModuleState(rootModule, IServer.STATE_UNKNOWN);\n             }\n+            ModuleArtifactMapper mapper = ModuleArtifactMapper.getInstance();\n+            mapper.addArtifactEntry(getServer(), module, configId);\n         } else {\n             doAdded(module, null, monitor);\n         }", "filename": "plugins/org.apache.geronimo.st.v30.core/src/main/java/org/apache/geronimo/st/v30/core/GeronimoServerBehaviourDelegate.java"}, {"additions": 1, "raw_url": "https://github.com/apache/geronimo-devtools/raw/bb72d754aa68ddb3dd906e53fba79316673afe33/plugins/org.apache.geronimo.st.v30.core/src/main/java/org/apache/geronimo/st/v30/core/GeronimoUtils.java", "blob_url": "https://github.com/apache/geronimo-devtools/blob/bb72d754aa68ddb3dd906e53fba79316673afe33/plugins/org.apache.geronimo.st.v30.core/src/main/java/org/apache/geronimo/st/v30/core/GeronimoUtils.java", "sha": "d383462371e2cd7330785b993583db79c17848de", "changes": 18, "status": "modified", "deletions": 17, "contents_url": "https://api.github.com/repos/apache/geronimo-devtools/contents/plugins/org.apache.geronimo.st.v30.core/src/main/java/org/apache/geronimo/st/v30/core/GeronimoUtils.java?ref=bb72d754aa68ddb3dd906e53fba79316673afe33", "patch": "@@ -36,18 +36,14 @@\n import org.eclipse.core.resources.IFile;\n import org.eclipse.core.resources.IProject;\n import org.eclipse.core.runtime.IPath;\n-import org.eclipse.core.runtime.NullProgressMonitor;\n import org.eclipse.core.runtime.Path;\n import org.eclipse.jst.j2ee.internal.deployables.J2EEFlexProjDeployable;\n import org.eclipse.jst.j2ee.internal.project.J2EEProjectUtilities;\n import org.eclipse.jst.server.core.IWebModule;\n-import org.eclipse.wst.common.componentcore.ArtifactEdit;\n import org.eclipse.wst.common.componentcore.ComponentCore;\n import org.eclipse.wst.common.componentcore.internal.util.IModuleConstants;\n import org.eclipse.wst.common.componentcore.resources.IVirtualComponent;\n import org.eclipse.wst.server.core.IModule;\n-import org.eclipse.wst.server.core.internal.ModuleFactory;\n-import org.eclipse.wst.server.core.internal.ServerPlugin;\n import org.osgi.framework.Version;\n \n /**\n@@ -449,17 +445,5 @@ public static JAXBElement getConnectorDeploymentPlan(IFile file) throws Exceptio\n         Trace.tracePoint(\"EXIT\", Activator.traceCore, \"GeronimoUtils.getConnectorDeploymentPlan\", element);\n         return element;\n     }\n-    \n-    public static IModule[] getModules(IProject project) {\n-        ModuleFactory[] factories = ServerPlugin.getModuleFactories();\n-        if (factories != null) {\n-            for (ModuleFactory factory : factories) {\n-                IModule[] modules = factory.getModules(project, new NullProgressMonitor());\n-                if (modules != null && modules.length != 0) {\n-                    return modules;\n-                }\n-            }\n-        }\n-        return new IModule [0];\n-    }\n+\n }", "filename": "plugins/org.apache.geronimo.st.v30.core/src/main/java/org/apache/geronimo/st/v30/core/GeronimoUtils.java"}, {"additions": 21, "raw_url": "https://github.com/apache/geronimo-devtools/raw/bb72d754aa68ddb3dd906e53fba79316673afe33/plugins/org.apache.geronimo.st.v30.core/src/main/java/org/apache/geronimo/st/v30/core/ModuleArtifactMapper.java", "blob_url": "https://github.com/apache/geronimo-devtools/blob/bb72d754aa68ddb3dd906e53fba79316673afe33/plugins/org.apache.geronimo.st.v30.core/src/main/java/org/apache/geronimo/st/v30/core/ModuleArtifactMapper.java", "sha": "d60b6c1e636bee096bab6892af31d70a990f8758", "changes": 33, "status": "modified", "deletions": 12, "contents_url": "https://api.github.com/repos/apache/geronimo-devtools/contents/plugins/org.apache.geronimo.st.v30.core/src/main/java/org/apache/geronimo/st/v30/core/ModuleArtifactMapper.java?ref=bb72d754aa68ddb3dd906e53fba79316673afe33", "patch": "@@ -31,7 +31,6 @@\n import java.util.HashMap;\n import java.util.Map;\n \n-import org.eclipse.core.resources.IProject;\n import org.eclipse.core.runtime.IPath;\n import org.eclipse.wst.server.core.IModule;\n import org.eclipse.wst.server.core.IServer;\n@@ -59,28 +58,38 @@ public static ModuleArtifactMapper getInstance() {\n         return instance;\n     }\n \n+    private static String getId(IModule module) {\n+        String id = module.getId();\n+        if (id == null || id.length() == 0) {\n+            throw new IllegalStateException(\"Module has no id: \" + module);\n+        }\n+        return id;\n+    }\n+    \n     synchronized public void addArtifactEntry(IServer server, IModule module, String configId) {\n         Map<String, String> artifactEntries = getServerArtifactsMap(server);\n         if (artifactEntries != null) {\n-            artifactEntries.put(module.getProject().getName(), configId); \n+            artifactEntries.put(getId(module), configId); \n         }       \n     }\n        \n-    synchronized public String resolveArtifact(IServer server, IModule module) {        \n-        if (module != null) {\n-            return resolveArtifact(server, module.getProject());\n-        }\n-        return null;\n+    synchronized public void removeArtifactEntry(IServer server, IModule module) {\n+        Map<String, String> artifactEntries = getServerArtifactsMap(server);\n+        if (artifactEntries != null) {\n+            artifactEntries.remove(getId(module)); \n+        }       \n     }\n     \n-    synchronized public String resolveArtifact(IServer server, IProject project) {\n-        Map<String, String> artifactEntries = serverArtifactEntries.get(server.getRuntime().getLocation().toFile());\n-        if (artifactEntries != null && project != null) {\n-            return artifactEntries.get(project.getName());\n+    synchronized public String resolveArtifact(IServer server, IModule module) {  \n+        if (module != null) {\n+            Map<String, String> artifactEntries = getServerArtifactsMap(server);\n+            if (artifactEntries != null) {\n+                return artifactEntries.get(getId(module));\n+            }\n         }\n         return null;\n     }\n-         \n+          \n     synchronized public Map<String, String> getServerArtifactsMap(IServer server) {\n         if (!SocketUtil.isLocalhost(server.getHost())) {\n             return null;", "filename": "plugins/org.apache.geronimo.st.v30.core/src/main/java/org/apache/geronimo/st/v30/core/ModuleArtifactMapper.java"}, {"additions": 12, "raw_url": "https://github.com/apache/geronimo-devtools/raw/bb72d754aa68ddb3dd906e53fba79316673afe33/plugins/org.apache.geronimo.st.v30.core/src/main/java/org/apache/geronimo/st/v30/core/SynchronizeProjectOnServerTask.java", "blob_url": "https://github.com/apache/geronimo-devtools/blob/bb72d754aa68ddb3dd906e53fba79316673afe33/plugins/org.apache.geronimo.st.v30.core/src/main/java/org/apache/geronimo/st/v30/core/SynchronizeProjectOnServerTask.java", "sha": "34e59b6f8b4bae7a600b2e1b204a03ccaec30633", "changes": 27, "status": "modified", "deletions": 15, "contents_url": "https://api.github.com/repos/apache/geronimo-devtools/contents/plugins/org.apache.geronimo.st.v30.core/src/main/java/org/apache/geronimo/st/v30/core/SynchronizeProjectOnServerTask.java?ref=bb72d754aa68ddb3dd906e53fba79316673afe33", "patch": "@@ -34,15 +34,14 @@\n \r\n import org.apache.geronimo.st.v30.core.commands.DeploymentCommandFactory;\r\n import org.apache.geronimo.st.v30.core.internal.Trace;\r\n-import org.eclipse.core.resources.IProject;\r\n-import org.eclipse.core.resources.ResourcesPlugin;\r\n import org.eclipse.core.runtime.CoreException;\r\n import org.eclipse.core.runtime.IProgressMonitor;\r\n import org.eclipse.core.runtime.NullProgressMonitor;\r\n import org.eclipse.wst.server.core.IModule;\r\n import org.eclipse.wst.server.core.IServer;\r\n import org.eclipse.wst.server.core.IServerWorkingCopy;\r\n import org.eclipse.wst.server.core.ServerCore;\r\n+import org.eclipse.wst.server.core.ServerUtil;\r\n \r\n public class SynchronizeProjectOnServerTask extends TimerTask {\r\n \r\n@@ -82,24 +81,22 @@ public void run() {\n                         TargetModuleID[] availableIds = dm.getAvailableModules(null, targets);\r\n                         Set<String> availableConfigIds = createSet(availableIds);\r\n \r\n-                        for (Map.Entry<String, String> entry : projectsOnServer.entrySet()) {\r\n-                            String projectName = entry.getKey();\r\n+                        for (Map.Entry<String, String> entry : projectsOnServer.entrySet()) {   \r\n+                            String moduleID = entry.getKey();\r\n                             String configID = entry.getValue();\r\n \r\n-                            IProject project = ResourcesPlugin.getWorkspace().getRoot().getProject(projectName);\r\n-                            IModule[] modules = GeronimoUtils.getModules(project);\r\n-\r\n-                            if (runningConfigIds.contains(configID)) {\r\n-                                delegate.setModulesState(modules, IServer.STATE_STARTED);\r\n-                            } else if (nonRunningConfigIds.contains(configID)) {\r\n-                                delegate.setModulesState(modules, IServer.STATE_STOPPED);\r\n-                            } else if (!availableConfigIds.contains(configID)) {\r\n-                                // it's not running, stopped or available - so remove it\r\n-                                for (IModule module : modules) {\r\n+                            IModule module = ServerUtil.getModule(moduleID);\r\n+                            if (module != null && ServerUtil.containsModule(server, module, null)) {\r\n+                                if (runningConfigIds.contains(configID)) {\r\n+                                    delegate.setModulesState(new IModule[] { module }, IServer.STATE_STARTED);\r\n+                                } else if (nonRunningConfigIds.contains(configID)) {\r\n+                                    delegate.setModulesState(new IModule[] { module }, IServer.STATE_STOPPED);\r\n+                                } else if (!availableConfigIds.contains(configID)) {\r\n+                                    // it's not running, stopped or available - so remove it\r\n                                     removedModules.add(module);\r\n                                 }\r\n                             }\r\n-                        }\r\n+                        }                        \r\n \r\n                         if (!removedModules.isEmpty()) {\r\n                             removeModules(removedModules);\r", "filename": "plugins/org.apache.geronimo.st.v30.core/src/main/java/org/apache/geronimo/st/v30/core/SynchronizeProjectOnServerTask.java"}], "repo": "geronimo-devtools"}, {"commit": "https://github.com/apache/geronimo-devtools/commit/2480db864e82197faeb143eee0c63428646d24fe", "parent": "https://github.com/apache/geronimo-devtools/commit/dc291f9de1b430786c7cf53b2943e5a842b00fdd", "message": "GERONIMODEVTOOLS-704 fix NPE when defining new server where existingParms is null...\n\ngit-svn-id: https://svn.apache.org/repos/asf/geronimo/devtools/eclipse-plugin/trunk@1069071 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "geronimo-devtools_7", "file": [{"additions": 6, "raw_url": "https://github.com/apache/geronimo-devtools/raw/2480db864e82197faeb143eee0c63428646d24fe/plugins/org.apache.geronimo.st.v30.core/src/main/java/org/apache/geronimo/st/v30/core/GeronimoServerBehaviourDelegate.java", "blob_url": "https://github.com/apache/geronimo-devtools/blob/2480db864e82197faeb143eee0c63428646d24fe/plugins/org.apache.geronimo.st.v30.core/src/main/java/org/apache/geronimo/st/v30/core/GeronimoServerBehaviourDelegate.java", "sha": "7ef966bc7893ad1bac899584f714087adf910444", "changes": 7, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/geronimo-devtools/contents/plugins/org.apache.geronimo.st.v30.core/src/main/java/org/apache/geronimo/st/v30/core/GeronimoServerBehaviourDelegate.java?ref=2480db864e82197faeb143eee0c63428646d24fe", "patch": "@@ -160,10 +160,15 @@ public void setupLaunchConfiguration(ILaunchConfigurationWorkingCopy wc, IProgre\n      * @return\n      */\n     private String getServerProgramArgs(String existingProgArgs, GeronimoServerDelegate serverDelegate) {\n-        List<String> parms = new ArrayList<String>(Arrays.asList(existingProgArgs.split(\"\\\\s+\")));\n         Set<String> parmsSet = serverDelegate.getProgramArgs();\n         Set<String> parmsNotSet = serverDelegate.getProgramArgsNotSet();\n         Set<String> parmsSeen = new HashSet<String>(parmsSet.size());\n+        List<String> parms;\n+        if (existingProgArgs == null) {\n+            parms = new ArrayList<String>(parmsSet.size());\n+        } else {\n+            parms = new ArrayList<String>(Arrays.asList(existingProgArgs.split(\"\\\\s+\")));\n+        }\n         // remove notSet and duplicate set paramaters from the list\n         for(ListIterator<String> iterator = parms.listIterator(); iterator.hasNext();) {\n             String parm = iterator.next();", "filename": "plugins/org.apache.geronimo.st.v30.core/src/main/java/org/apache/geronimo/st/v30/core/GeronimoServerBehaviourDelegate.java"}], "repo": "geronimo-devtools"}, {"commit": "https://github.com/apache/geronimo-devtools/commit/6c35c662df02464c0f2d79461845c5a1ff0be210", "parent": "https://github.com/apache/geronimo-devtools/commit/5db9886ed8dc50ea757a7e7f66056f8c774a5f70", "message": "GERONIMODEVTOOLS-452  Selecting 'Specify as Gbean Pattern' leads a NPE\n\ngit-svn-id: https://svn.apache.org/repos/asf/geronimo/devtools/eclipse-plugin/trunk@680276 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "geronimo-devtools_8", "file": [{"additions": 3, "raw_url": "https://github.com/apache/geronimo-devtools/raw/6c35c662df02464c0f2d79461845c5a1ff0be210/plugins/org.apache.geronimo.st.v21.ui/src/main/java/org/apache/geronimo/st/v21/ui/sections/WebContainerSection.java", "blob_url": "https://github.com/apache/geronimo-devtools/blob/6c35c662df02464c0f2d79461845c5a1ff0be210/plugins/org.apache.geronimo.st.v21.ui/src/main/java/org/apache/geronimo/st/v21/ui/sections/WebContainerSection.java", "sha": "c1cfbce5fde42f6615c34b4e65ac56b3936323e7", "changes": 4, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/geronimo-devtools/contents/plugins/org.apache.geronimo.st.v21.ui/src/main/java/org/apache/geronimo/st/v21/ui/sections/WebContainerSection.java?ref=6c35c662df02464c0f2d79461845c5a1ff0be210", "patch": "@@ -190,7 +190,9 @@ public void widgetSelected(SelectionEvent e) {\n         specifyAsPattern.addSelectionListener(new SelectionAdapter() {\n             public void widgetSelected(SelectionEvent e) {\n                 if (specifyAsPattern.getSelection()) {\n-                \tplan.getWebContainer().setGbeanLink (null);\n+                \tif (plan.getWebContainer() != null) {\n+                \t    plan.getWebContainer().setGbeanLink (null);\n+                \t}\n                     if (group.getText().length() > 0) {\n                         getPattern().setGroupId(group.getText());\n                     }", "filename": "plugins/org.apache.geronimo.st.v21.ui/src/main/java/org/apache/geronimo/st/v21/ui/sections/WebContainerSection.java"}], "repo": "geronimo-devtools"}, {"commit": "https://github.com/apache/geronimo-devtools/commit/e9a83d72d351ba64eedb0ab4a28f57fb7277c123", "parent": "https://github.com/apache/geronimo-devtools/commit/cf3544951127f0d8fcb77e2f55cc45aadbb41e55", "message": "fix npe, get config id from plan using 12 util\n\ngit-svn-id: https://svn.apache.org/repos/asf/geronimo/devtools/eclipse-plugin/trunk@513435 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "geronimo-devtools_9", "file": [{"additions": 2, "raw_url": "https://github.com/apache/geronimo-devtools/raw/e9a83d72d351ba64eedb0ab4a28f57fb7277c123/plugins/org.apache.geronimo.st.v20.core/src/org/apache/geronimo/st/v20/core/GeronimoV20VersionHandler.java", "blob_url": "https://github.com/apache/geronimo-devtools/blob/e9a83d72d351ba64eedb0ab4a28f57fb7277c123/plugins/org.apache.geronimo.st.v20.core/src/org/apache/geronimo/st/v20/core/GeronimoV20VersionHandler.java", "sha": "b9772b3cee125ed81bfb319144e459d42ed0d962", "changes": 3, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/geronimo-devtools/contents/plugins/org.apache.geronimo.st.v20.core/src/org/apache/geronimo/st/v20/core/GeronimoV20VersionHandler.java?ref=e9a83d72d351ba64eedb0ab4a28f57fb7277c123", "patch": "@@ -20,6 +20,7 @@\n \n import org.apache.geronimo.deployment.plugin.TargetModuleIDImpl;\n import org.apache.geronimo.st.core.IGeronimoVersionHandler;\n+import org.apache.geronimo.st.v12.core.GeronimoV12Utils;\n import org.eclipse.wst.server.core.IModule;\n \n /**\n@@ -34,7 +35,7 @@\n \t */\n \tpublic String getConfigID(IModule module) {\n         //TODO\n-        return null;\n+\t\treturn GeronimoV12Utils.getConfigId2(module);\n \t}\n \t\n \t/* (non-Javadoc)", "filename": "plugins/org.apache.geronimo.st.v20.core/src/org/apache/geronimo/st/v20/core/GeronimoV20VersionHandler.java"}], "repo": "geronimo-devtools"}, {"commit": "https://github.com/apache/geronimo-devtools/commit/f735c662c5061a6230986c07d04f128e2c5d5cb7", "parent": "https://github.com/apache/geronimo-devtools/commit/6a187c341a84a9b81f040d36cab5607ec4208aa5", "message": "add status for timeout fixes NPE on status check\n\ngit-svn-id: https://svn.apache.org/repos/asf/geronimo/devtools/eclipse-plugin/trunk@453288 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "geronimo-devtools_10", "file": [{"additions": 3, "raw_url": "https://github.com/apache/geronimo-devtools/raw/f735c662c5061a6230986c07d04f128e2c5d5cb7/plugins/org.apache.geronimo.st.core/src/org/apache/geronimo/st/core/commands/SynchronizedDeploymentOp.java", "blob_url": "https://github.com/apache/geronimo-devtools/blob/f735c662c5061a6230986c07d04f128e2c5d5cb7/plugins/org.apache.geronimo.st.core/src/org/apache/geronimo/st/core/commands/SynchronizedDeploymentOp.java", "sha": "a8aabb847671764ec8f25acfa44af5f94dc99465", "changes": 4, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/geronimo-devtools/contents/plugins/org.apache.geronimo.st.core/src/org/apache/geronimo/st/core/commands/SynchronizedDeploymentOp.java?ref=f735c662c5061a6230986c07d04f128e2c5d5cb7", "patch": "@@ -43,7 +43,7 @@\n public class SynchronizedDeploymentOp implements ProgressListener,\n \t\tIDeploymentCommand {\n \n-\tprivate static final long TIMEOUT = 10000;\n+\tprivate static final long TIMEOUT = 600000;\n \n \tprivate IDeploymentCommand command;\n \n@@ -95,6 +95,8 @@ private synchronized ProgressObject run() throws Exception {\n \t\t\tpo.removeProgressListener(this);\n \t\t\tif (timedOut) {\n \t\t\t\tTrace.trace(Trace.SEVERE, \"Command Timed Out!\");\n+\t\t\t\tstatus = new MultiStatus(Activator.PLUGIN_ID, 0, \"\", null);\n+\t\t\t\tstatus.add(new Status(IStatus.ERROR, Activator.PLUGIN_ID, 0, command.getCommandType() + \" timed out.\", null));\n \t\t\t}\n \t\t}\n ", "filename": "plugins/org.apache.geronimo.st.core/src/org/apache/geronimo/st/core/commands/SynchronizedDeploymentOp.java"}], "repo": "geronimo-devtools"}, {"commit": "https://github.com/apache/geronimo-devtools/commit/d5d022b306cc263055690e6c59f543e279b13793", "parent": "https://github.com/apache/geronimo-devtools/commit/e339f501764af5a22ee71efbabd3363bdee869a4", "message": "fix server not starting due to classpath override and NPE on opening editor\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/geronimo/devtools/trunk/modules/eclipse-plugin@357475 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "geronimo-devtools_11", "file": [{"additions": 4, "raw_url": "https://github.com/apache/geronimo-devtools/raw/d5d022b306cc263055690e6c59f543e279b13793/plugins/org.apache.geronimo.devtools.eclipse.core/src/org/apache/geronimo/core/internal/GeronimoServerBehaviour.java", "blob_url": "https://github.com/apache/geronimo-devtools/blob/d5d022b306cc263055690e6c59f543e279b13793/plugins/org.apache.geronimo.devtools.eclipse.core/src/org/apache/geronimo/core/internal/GeronimoServerBehaviour.java", "sha": "648928b189eecbb0b20c76d3e4b56cd608ac2077", "changes": 8, "status": "modified", "deletions": 4, "contents_url": "https://api.github.com/repos/apache/geronimo-devtools/contents/plugins/org.apache.geronimo.devtools.eclipse.core/src/org/apache/geronimo/core/internal/GeronimoServerBehaviour.java?ref=d5d022b306cc263055690e6c59f543e279b13793", "patch": "@@ -296,11 +296,11 @@ public String getRMINamingPort() {\n \t}\r\n \t\r\n \tpublic void setupLaunchConfiguration(ILaunchConfigurationWorkingCopy workingCopy, IProgressMonitor monitor) throws CoreException {\r\n-\t\tString defaultArgs = getServerDefinition().getResolver().resolveProperties(getServerDefinition().getStop().getProgramArgumentsAsString());\r\n-\t\tString existingVMArgs = workingCopy.getAttribute(IJavaLaunchConfigurationConstants.ATTR_VM_ARGUMENTS,defaultArgs);\r\n+\t\tString defaultArgs = getServerDefinition().getResolver().resolveProperties(getServerDefinition().getStart().getProgramArgumentsAsString());\r\n+\t\tString existingPrgArgs = workingCopy.getAttribute(IJavaLaunchConfigurationConstants.ATTR_PROGRAM_ARGUMENTS,defaultArgs);\r\n         super.setupLaunchConfiguration(workingCopy, monitor);\r\n-\t\tif(existingVMArgs !=null) {\r\n-            workingCopy.setAttribute(IJavaLaunchConfigurationConstants.ATTR_VM_ARGUMENTS,existingVMArgs);\r\n+\t\tif(existingPrgArgs !=null) {\r\n+            workingCopy.setAttribute(IJavaLaunchConfigurationConstants.ATTR_PROGRAM_ARGUMENTS,existingPrgArgs);\r\n         }\r\n \t}\r\n \t\t\r", "filename": "plugins/org.apache.geronimo.devtools.eclipse.core/src/org/apache/geronimo/core/internal/GeronimoServerBehaviour.java"}, {"additions": 3, "raw_url": "https://github.com/apache/geronimo-devtools/raw/d5d022b306cc263055690e6c59f543e279b13793/plugins/org.apache.geronimo.ui/project.xml", "blob_url": "https://github.com/apache/geronimo-devtools/blob/d5d022b306cc263055690e6c59f543e279b13793/plugins/org.apache.geronimo.ui/project.xml", "sha": "49713b69d9194eccc2761e7bb70855d0599be249", "changes": 6, "status": "modified", "deletions": 3, "contents_url": "https://api.github.com/repos/apache/geronimo-devtools/contents/plugins/org.apache.geronimo.ui/project.xml?ref=d5d022b306cc263055690e6c59f543e279b13793", "patch": "@@ -36,10 +36,10 @@\n         </includes>\n       </resource>\n       <resource>\n-        <targetPath>icons/obj16/</targetPath>\n-        <directory>icons/obj16</directory>\n+        <targetPath>icons</targetPath>\n+        <directory>icons</directory>\n         <includes>\n-          <include>*.gif</include>\n+          <include>**/*.gif</include>\n         </includes>\n       </resource>\n       <resource>", "filename": "plugins/org.apache.geronimo.ui/project.xml"}], "repo": "geronimo-devtools"}, {"commit": "https://github.com/apache/geronimo-devtools/commit/40138f84e58bf7ae8b9ff2855c64efd643a449f0", "parent": "https://github.com/apache/geronimo-devtools/commit/48030edc3c54bc5061c0ab54e10a27686898ae2b", "message": "force activation on class load to avoid NPE on Eclipse 3.7.2 - https://bugs.eclipse.org/bugs/show_bug.cgi?id=357199\n\ngit-svn-id: https://svn.apache.org/repos/asf/geronimo/devtools/eclipse-plugin/trunk@1409450 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "geronimo-devtools_12", "file": [{"additions": 1, "raw_url": "https://github.com/apache/geronimo-devtools/raw/40138f84e58bf7ae8b9ff2855c64efd643a449f0/plugins/org.apache.geronimo.runtime.common/META-INF/MANIFEST.MF", "blob_url": "https://github.com/apache/geronimo-devtools/blob/40138f84e58bf7ae8b9ff2855c64efd643a449f0/plugins/org.apache.geronimo.runtime.common/META-INF/MANIFEST.MF", "sha": "2e4a82475a4e082d70c2ba6759ea856c36f07099", "changes": 1, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/geronimo-devtools/contents/plugins/org.apache.geronimo.runtime.common/META-INF/MANIFEST.MF?ref=40138f84e58bf7ae8b9ff2855c64efd643a449f0", "patch": "@@ -78,3 +78,4 @@ Export-Package:\n  org.apache.geronimo.specs.activation\n Bundle-Vendor: Apache Software Foundation\n Import-Package: javax.xml.namespace\n+Bundle-ActivationPolicy: lazy", "filename": "plugins/org.apache.geronimo.runtime.common/META-INF/MANIFEST.MF"}], "repo": "geronimo-devtools"}, {"commit": "https://github.com/apache/geronimo-devtools/commit/6d823f34217f68d1bb6295f2f48b1e2f531b0bcd", "parent": "https://github.com/apache/geronimo-devtools/commit/cacb99626e36d6cf574e84781a98d1e6dda61eae", "message": "GERONIMODEVTOOLS-502 Fix NPE when adding references to naming page of deployment plan editors -- Thanks to BJ Reed for the patch!!\n\ngit-svn-id: https://svn.apache.org/repos/asf/geronimo/devtools/eclipse-plugin/trunk@688879 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "geronimo-devtools_13", "file": [{"additions": 1, "raw_url": "https://github.com/apache/geronimo-devtools/raw/6d823f34217f68d1bb6295f2f48b1e2f531b0bcd/plugins/org.apache.geronimo.st.ui/src/main/java/org/apache/geronimo/st/ui/wizards/AbstractTableWizard.java", "blob_url": "https://github.com/apache/geronimo-devtools/blob/6d823f34217f68d1bb6295f2f48b1e2f531b0bcd/plugins/org.apache.geronimo.st.ui/src/main/java/org/apache/geronimo/st/ui/wizards/AbstractTableWizard.java", "sha": "fb05a33342a33eb5970e9e41acc17a623d26c75c", "changes": 1, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/geronimo-devtools/contents/plugins/org.apache.geronimo.st.ui/src/main/java/org/apache/geronimo/st/ui/wizards/AbstractTableWizard.java?ref=6d823f34217f68d1bb6295f2f48b1e2f531b0bcd", "patch": "@@ -47,6 +47,7 @@ public DynamicWizardPage(String pageName) {\n \n         public void createControl(Composite parent) {\n             Composite composite = createComposite(parent);\n+            createEditFields(composite);\n             doCustom(composite);\n             setControl(composite);\n             textEntries[0].setFocus();", "filename": "plugins/org.apache.geronimo.st.ui/src/main/java/org/apache/geronimo/st/ui/wizards/AbstractTableWizard.java"}], "repo": "geronimo-devtools"}, {"commit": "https://github.com/apache/geronimo-devtools/commit/4218c0a6b931bd9aecb6bb40e385bc0ec0c933a1", "parent": "https://github.com/apache/geronimo-devtools/commit/58547e25d00ae01692aa700ab09b78a66adfd14f", "message": " r3165@sppatel-009027040242:  sppatel | 2006-12-05 12:31:45 -0500\n G1526 local branch\n r3166@sppatel-009027040242:  sppatel | 2006-12-05 12:49:05 -0500\n update EclipseDeployable to new interface\n r3167@sppatel-009027040242:  sppatel | 2006-12-05 12:51:52 -0500\n throw DeploymentException on constructor\n r3168@sppatel-009027040242:  sppatel | 2006-12-05 13:27:17 -0500\n make EclipseDeployable a gbean and create plan\n r3194@sppatel-009027040242:  sppatel | 2006-12-06 13:54:53 -0500\n need empty constructor\n r3214@sppatel-009027040242:  sppatel | 2006-12-07 13:15:06 -0500\n add dependency\n r3215@sppatel-009027040242:  sppatel | 2006-12-07 13:17:18 -0500\n enable run resource from workspace\n r3216@sppatel-009027040242:  sppatel | 2006-12-07 13:18:30 -0500\n move config gen to command\n r3217@sppatel-009027040242:  sppatel | 2006-12-07 13:19:27 -0500\n remove moved methods\n r3218@sppatel-009027040242:  sppatel | 2006-12-07 14:11:10 -0500\n need to make dependency on configuration due to class cast\n r3224@sppatel-009027040242:  sppatel | 2006-12-07 15:29:29 -0500\n fix resolve and getModuleContextResource methods\n r3233@sppatel-009027040242:  sppatel | 2006-12-07 16:51:26 -0500\n fix NPE\n r3237@sppatel-009027040242:  sppatel | 2006-12-07 18:11:47 -0500\n utility method to get deployment plan file\n r3238@sppatel-009027040242:  sppatel | 2006-12-07 18:12:34 -0500\n pass in deployment plan for redeploy\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/geronimo/devtools/eclipse-plugin/branches/1.2.1@485778 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "geronimo-devtools_14", "file": [{"additions": 2, "raw_url": "https://github.com/apache/geronimo-devtools/raw/4218c0a6b931bd9aecb6bb40e385bc0ec0c933a1/modules/eclipse-support/pom.xml", "blob_url": "https://github.com/apache/geronimo-devtools/blob/4218c0a6b931bd9aecb6bb40e385bc0ec0c933a1/modules/eclipse-support/pom.xml", "sha": "96eca7d11f70e7dc93d1eb4ad7fce603b19e0bec", "changes": 4, "status": "modified", "deletions": 2, "contents_url": "https://api.github.com/repos/apache/geronimo-devtools/contents/modules/eclipse-support/pom.xml?ref=4218c0a6b931bd9aecb6bb40e385bc0ec0c933a1", "patch": "@@ -42,11 +42,11 @@\n \t<version>1.0-SNAPSHOT</version>\n \t<name>Geronimo Eclipse Plugin :: Eclipse Deployment Support</name>\n \t<dependencies>\n-\t\t<!--<dependency>\n+\t\t<dependency>\n \t\t\t<groupId>org.apache.geronimo.modules</groupId>\n \t\t\t<artifactId>geronimo-deployment</artifactId>\n \t\t\t<version>1.2-SNAPSHOT</version>\n-\t\t</dependency>-->\n+\t\t</dependency>\n \t\t<dependency>\n \t\t\t<groupId>xmlbeans</groupId>\n \t\t\t<artifactId>xbean</artifactId>", "filename": "modules/eclipse-support/pom.xml"}, {"additions": 68, "raw_url": "https://github.com/apache/geronimo-devtools/raw/4218c0a6b931bd9aecb6bb40e385bc0ec0c933a1/modules/eclipse-support/src/main/java/org/apache/geronimo/deployment/EclipseDeployableModule.java", "blob_url": "https://github.com/apache/geronimo-devtools/blob/4218c0a6b931bd9aecb6bb40e385bc0ec0c933a1/modules/eclipse-support/src/main/java/org/apache/geronimo/deployment/EclipseDeployableModule.java", "sha": "59c2cbaa83991b5860fd92d2a37c7337141fe72f", "changes": 120, "status": "modified", "deletions": 52, "contents_url": "https://api.github.com/repos/apache/geronimo-devtools/contents/modules/eclipse-support/src/main/java/org/apache/geronimo/deployment/EclipseDeployableModule.java?ref=4218c0a6b931bd9aecb6bb40e385bc0ec0c933a1", "patch": "@@ -1,20 +1,3 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one or more\n- * contributor license agreements.  See the NOTICE file distributed with\n- * this work for additional information regarding copyright ownership.\n- * The ASF licenses this file to You under the Apache License, Version 2.0\n- * (the \"License\"); you may not use this file except in compliance with\n- * the License.  You may obtain a copy of the License at\n- *\n- *    http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing, software\n- * distributed under the License is distributed on an \"AS IS\" BASIS,\n- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n- * See the License for the specific language governing permissions and\n- * limitations under the License.\n- */\n-\n /*\n  * Licensed to the Apache Software Foundation (ASF) under one or more\n  * contributor license agreements.  See the NOTICE file distributed with\n@@ -36,40 +19,44 @@\n import java.io.File;\n import java.io.IOException;\n import java.net.URL;\n+import java.util.jar.JarFile;\n \n+import org.apache.geronimo.common.DeploymentException;\n+import org.apache.geronimo.gbean.GBeanInfo;\n+import org.apache.geronimo.gbean.GBeanInfoBuilder;\n import org.apache.geronimo.xbeans.eclipse.deployment.ModuleDocument;\n import org.apache.geronimo.xbeans.eclipse.deployment.ClassesDocument.Classes;\n import org.apache.geronimo.xbeans.eclipse.deployment.ModuleDocument.Module;\n import org.apache.geronimo.xbeans.eclipse.deployment.ResourcesDocument.Resources;\n-import org.apache.xmlbeans.XmlException;\n \n /**\n  * @version $Rev$ $Date$\n  */\n-public class EclipseDeployableModule /*implements DeployableModule*/ {\n+public class EclipseDeployableModule implements DeployableModule {\n \n \tprivate Module module = null;\n \n \tprivate File root;\n-\t\n+\n \tprivate String uri;\n \n \tprivate File[] classesFolders = null;\n \n \tprivate File[] resourcesFolders = null;\n \n-\t//private DeployableModule[] children = null;\n-\t\n+\tprivate DeployableModule[] children = null;\n+\n \tprivate boolean archived = false;\n-\t\n-\tpublic EclipseDeployableModule(File config) {\n+\n+\tpublic EclipseDeployableModule() {\n+\t}\n+\n+\tpublic EclipseDeployableModule(File config) throws DeploymentException {\n \t\ttry {\n \t\t\tmodule = ModuleDocument.Factory.parse(config).getModule();\n \t\t\tinit();\n-\t\t} catch (XmlException e) {\n-\t\t\te.printStackTrace();\n-\t\t} catch (IOException e) {\n-\t\t\te.printStackTrace();\n+\t\t} catch (Exception e) {\n+\t\t\tthrow new DeploymentException(e);\n \t\t}\n \t}\n \n@@ -125,13 +112,9 @@ public void cleanup() {\n \n \t\tResources[] resources = module.getResourcesArray();\n \t\tresourcesFolders = new File[resources.length];\n-\t\tfor (int i = 0; i < classesFolders.length; i++) {\n+\t\tfor (int i = 0; i < resourcesFolders.length; i++) {\n \t\t\tFile file = new File(resources[i].getPath());\n-\t\t\tif (file.exists()) {\n-\t\t\t\tresourcesFolders[i] = file;\n-\t\t\t} else {\n-\n-\t\t\t}\n+\t\t\tresourcesFolders[i] = file;\n \t\t}\n \n \t\treturn resourcesFolders;\n@@ -142,20 +125,24 @@ public void cleanup() {\n \t * \n \t * @see org.apache.geronimo.deployment.DeployableModule#getModules()\n \t */\n-\t/*public DeployableModule[] getModules() {\n+\tpublic DeployableModule[] getModules() {\n \t\tif (children != null) {\n \t\t\treturn children;\n \t\t}\n \n-\t\tModule[] childModules = module.getChildren().getModuleArray();\n-\t\tchildren = new DeployableModule[childModules.length];\n-\t\tfor (int i = 0; i < childModules.length; i++) {\n-\t\t\tModule child = childModules[i];\n-\t\t\tchildren[i] = new EclipseDeployableModule(child);\n+\t\tif (module.getChildren() != null) {\n+\t\t\tModule[] childModules = module.getChildren().getModuleArray();\n+\t\t\tchildren = new DeployableModule[childModules.length];\n+\t\t\tfor (int i = 0; i < childModules.length; i++) {\n+\t\t\t\tModule child = childModules[i];\n+\t\t\t\tchildren[i] = new EclipseDeployableModule(child);\n+\t\t\t}\n+\t\t} else {\n+\t\t\tchildren = new EclipseDeployableModule[]{};\n \t\t}\n \n \t\treturn children;\n-\t}*/\n+\t}\n \n \t/*\n \t * (non-Javadoc)\n@@ -166,7 +153,11 @@ public File getRoot() {\n \t\tif (root != null) {\n \t\t\treturn root;\n \t\t}\n-\t\troot = new File(module.getPath());\n+\t\tif (module.getPath() != null) {\n+\t\t\troot = new File(module.getPath());\n+\t\t} else {\n+\t\t\troot = new File(module.getResourcesArray(0).getPath());\n+\t\t}\n \t\treturn root;\n \t}\n \n@@ -176,7 +167,7 @@ public File getRoot() {\n \t * @see org.apache.geronimo.deployment.DeployableModule#getURI()\n \t */\n \tpublic String getURI() {\n-\t\tif(uri != null) {\n+\t\tif (uri != null) {\n \t\t\treturn uri;\n \t\t}\n \t\turi = module.getName();\n@@ -198,12 +189,14 @@ public boolean isArchived() {\n \t * @see org.apache.geronimo.deployment.DeployableModule#resolve(java.lang.String)\n \t */\n \tpublic URL resolve(String path) throws IOException {\n+\t\tSystem.out.println(\"Resolving: \" + path);\n \t\tFile[] search = getModuleContextResources();\n-\t\tfor(int i = 0; i <  search.length; i++) {\n-\t\t\tString findPath = search[i].getAbsolutePath().concat(path);\n-\t\t\tFile file = new File(findPath);\n-\t\t\tif(file.exists()) \n+\t\tfor (int i = 0; i < search.length; i++) {\n+\t\t\tFile file = new File(search[i].getAbsolutePath(), path);\n+\t\t\tif (file.exists()) {\n+\t\t\t\tSystem.out.println(\"Resolved to: \" + file);\n \t\t\t\treturn file.toURL();\n+\t\t\t}\n \t\t}\n \t\treturn null;\n \t}\n@@ -213,17 +206,40 @@ public URL resolve(String path) throws IOException {\n \t * \n \t * @see org.apache.geronimo.deployment.DeployableModule#resolveModule(java.lang.String)\n \t */\n-/*\tpublic DeployableModule resolveModule(String uri) throws IOException {\n+\tpublic DeployableModule resolveModule(String uri) throws IOException {\n \t\tDeployableModule[] children = getModules();\n-\t\tfor(int i = 0; i < children.length; i++) {\n-\t\t\tif(children[i].getURI().equals(uri)) {\n+\t\tfor (int i = 0; i < children.length; i++) {\n+\t\t\tif (children[i].getURI().equals(uri)) {\n \t\t\t\treturn children[i];\n \t\t\t}\n \t\t}\n \t\treturn null;\n-\t}*/\n-\t\n+\t}\n+\n+\t/*\n+\t * (non-Javadoc)\n+\t * \n+\t * @see org.apache.geronimo.deployment.DeployableModule#getArchive()\n+\t */\n+\tpublic JarFile getArchive() {\n+\t\treturn null;\n+\t}\n+\n \tprivate void init() {\n \t\tarchived = getRoot().isFile();\n \t}\n+\n+\tpublic static final GBeanInfo GBEAN_INFO;\n+\n+\tstatic {\n+\t\tGBeanInfoBuilder infoBuilder = GBeanInfoBuilder.createStatic(\n+\t\t\t\tEclipseDeployableModule.class, \"DeployableModule\");\n+\t\tinfoBuilder.addInterface(DeployableModule.class);\n+\t\tGBEAN_INFO = infoBuilder.getBeanInfo();\n+\t}\n+\n+\tpublic static GBeanInfo getGBeanInfo() {\n+\t\treturn GBEAN_INFO;\n+\t}\n+\n }", "filename": "modules/eclipse-support/src/main/java/org/apache/geronimo/deployment/EclipseDeployableModule.java"}, {"additions": 49, "raw_url": "https://github.com/apache/geronimo-devtools/raw/4218c0a6b931bd9aecb6bb40e385bc0ec0c933a1/modules/eclipse-support/src/main/resources/geronimo-service.xml", "blob_url": "https://github.com/apache/geronimo-devtools/blob/4218c0a6b931bd9aecb6bb40e385bc0ec0c933a1/modules/eclipse-support/src/main/resources/geronimo-service.xml", "sha": "6d8eb5c3fe4c81a5ecc4e6c870a24a5c155eae0b", "changes": 49, "status": "added", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/geronimo-devtools/contents/modules/eclipse-support/src/main/resources/geronimo-service.xml?ref=4218c0a6b931bd9aecb6bb40e385bc0ec0c933a1", "patch": "@@ -0,0 +1,49 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<!--\n+\tLicensed to the Apache Software Foundation (ASF) under one or more\n+\tcontributor license agreements.  See the NOTICE file distributed with\n+\tthis work for additional information regarding copyright ownership.\n+\tThe ASF licenses this file to You under the Apache License, Version 2.0\n+\t(the \"License\"); you may not use this file except in compliance with\n+\tthe License.  You may obtain a copy of the License at\n+\t\n+\thttp://www.apache.org/licenses/LICENSE-2.0\n+\t\n+\tUnless required by applicable law or agreed to in writing, software\n+\tdistributed under the License is distributed on an \"AS IS\" BASIS,\n+\tWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+\tSee the License for the specific language governing permissions and\n+\tlimitations under the License.\n+-->\n+<module xmlns=\"http://geronimo.apache.org/xml/ns/deployment-1.1\">\n+\t<environment>\n+\t\t<moduleId>\n+\t\t\t<groupId>org.apache.geronimo.eclipse.deployment</groupId>\n+\t\t\t<artifactId>eclipse-deployment-support</artifactId>\n+\t\t\t<version>1.0-SNAPSHOT</version>\n+\t\t\t<type>car</type>\n+\t\t</moduleId>\n+\t\t<dependencies>\n+\t\t\t<dependency>\n+\t\t\t\t<groupId>org.apache.geronimo.configs</groupId>\n+      \t\t\t<artifactId>geronimo-gbean-deployer</artifactId>\n+      \t\t\t<version>1.2-SNAPSHOT</version>\n+      \t\t\t<type>car</type>\n+\t\t\t</dependency>\n+\t\t\t<dependency>\n+\t\t\t\t<groupId>xmlbeans</groupId>\n+\t\t\t\t<artifactId>xbean</artifactId>\n+\t\t\t\t<version>2.0.0</version>\n+\t\t\t\t<type>jar</type>\n+\t\t\t\t<import>classes</import>\n+\t\t\t</dependency>\n+\t\t\t <dependency>\n+                <groupId>stax</groupId>\n+                <artifactId>stax-api</artifactId>\n+                <version>1.0</version>\n+                <type>jar</type>\n+            </dependency>\n+\t\t</dependencies>\n+\t</environment>\n+\t<gbean name=\"EclipseDeployable\" class=\"org.apache.geronimo.deployment.EclipseDeployableModule\" />\n+</module>\n\\ No newline at end of file", "filename": "modules/eclipse-support/src/main/resources/geronimo-service.xml"}, {"additions": 1, "raw_url": "https://github.com/apache/geronimo-devtools/raw/4218c0a6b931bd9aecb6bb40e385bc0ec0c933a1/plugins/org.apache.geronimo.st.core/src/org/apache/geronimo/st/core/GeronimoServerBehaviourDelegate.java", "blob_url": "https://github.com/apache/geronimo-devtools/blob/4218c0a6b931bd9aecb6bb40e385bc0ec0c933a1/plugins/org.apache.geronimo.st.core/src/org/apache/geronimo/st/core/GeronimoServerBehaviourDelegate.java", "sha": "57280461ff2d0fbb4edd65345738683d56f171b7", "changes": 80, "status": "modified", "deletions": 79, "contents_url": "https://api.github.com/repos/apache/geronimo-devtools/contents/plugins/org.apache.geronimo.st.core/src/org/apache/geronimo/st/core/GeronimoServerBehaviourDelegate.java?ref=4218c0a6b931bd9aecb6bb40e385bc0ec0c933a1", "patch": "@@ -16,8 +16,6 @@\n  */\n package org.apache.geronimo.st.core;\n \n-import java.io.File;\n-import java.io.IOException;\n import java.net.MalformedURLException;\n import java.net.URL;\n import java.util.ArrayList;\n@@ -43,12 +41,7 @@\n import org.apache.geronimo.st.core.operations.ISharedLibEntryCreationDataModelProperties;\n import org.apache.geronimo.st.core.operations.SharedLibEntryCreationOperation;\n import org.apache.geronimo.st.core.operations.SharedLibEntryDataModelProvider;\n-import org.apache.geronimo.xbeans.eclipse.deployment.ModuleDocument;\n-import org.apache.geronimo.xbeans.eclipse.deployment.ChildrenDocument.Children;\n-import org.apache.geronimo.xbeans.eclipse.deployment.ModuleDocument.Module;\n-import org.apache.xmlbeans.XmlOptions;\n import org.eclipse.core.commands.ExecutionException;\n-import org.eclipse.core.resources.IContainer;\n import org.eclipse.core.runtime.CoreException;\n import org.eclipse.core.runtime.IPath;\n import org.eclipse.core.runtime.IProgressMonitor;\n@@ -67,11 +60,6 @@\n import org.eclipse.jdt.launching.IRuntimeClasspathEntry;\n import org.eclipse.jdt.launching.IVMInstall;\n import org.eclipse.jdt.launching.JavaRuntime;\n-import org.eclipse.jst.j2ee.internal.deployables.J2EEFlexProjDeployable;\n-import org.eclipse.wst.common.componentcore.ComponentCore;\n-import org.eclipse.wst.common.componentcore.internal.resources.VirtualArchiveComponent;\n-import org.eclipse.wst.common.componentcore.resources.IVirtualComponent;\n-import org.eclipse.wst.common.componentcore.resources.IVirtualReference;\n import org.eclipse.wst.common.frameworks.datamodel.DataModelFactory;\n import org.eclipse.wst.common.frameworks.datamodel.IDataModel;\n import org.eclipse.wst.common.frameworks.datamodel.IDataModelOperation;\n@@ -364,7 +352,6 @@ protected void stopImpl() {\n \t}\n \n \tprotected void invokeCommand(int deltaKind, IModule module) throws CoreException {\n-\t\tgenerateRunFromWorkspaceConfig(module);\n \t\t\n \t\tClassLoader old = Thread.currentThread().getContextClassLoader();\n \t\ttry {\n@@ -398,72 +385,7 @@ protected void invokeCommand(int deltaKind, IModule module) throws CoreException\n \t\t} finally {\n \t\t\tThread.currentThread().setContextClassLoader(old);\n \t\t}\n-\t}\n-\t\n-\tprivate void generateRunFromWorkspaceConfig(IModule module) {\n-\t\tif (getGeronimoServer().isRunFromWorkspace()) {\n-\t\t\tIPath configDir = Activator.getDefault().getStateLocation().append(\"looseconfig\").append(\"server_\" + getServer().getId());\n-\t\t\tconfigDir.toFile().mkdirs();\n-\n-\t\t\tModuleDocument doc = ModuleDocument.Factory.newInstance();\n-\t\t\tModule deployable = doc.addNewModule();\n-\t\t\tprocessModuleConfig(deployable, module);\n-\n-\t\t\tXmlOptions options = new XmlOptions();\n-\t\t\toptions.setSavePrettyPrint();\n-\t\t\tFile file = configDir.append(module.getName()).addFileExtension(\"xml\").toFile();\n-\t\t\tTrace.trace(Trace.INFO,doc.xmlText(options));\n-\t\t\ttry {\n-\t\t\t\tdoc.save(file, options);\n-\t\t\t} catch (IOException e) {\n-\t\t\t\te.printStackTrace();\n-\t\t\t}\n-\t\t}\n-\t}\n-\n-\tprivate void processModuleConfig(Module deployable, IModule serverModule) {\n-\t\t\n-\t\tdeployable.setName(serverModule.getName());\n-\t\t\n-\t\tJ2EEFlexProjDeployable j2eeModule = (J2EEFlexProjDeployable) serverModule.loadAdapter(J2EEFlexProjDeployable.class, null);\n-\t\tif (j2eeModule != null) {\n-\t\t\t\n-\t\t\tif(j2eeModule.isBinary()) {\n-\t\t\t\tdeployable.setPath(serverModule.getName());\n-\t\t\t\treturn;\n-\t\t\t}\n-\t\t\t\n-\t\t\tIContainer[] containers = j2eeModule.getResourceFolders();\n-\t\t\tfor (int i = 0; i < containers.length; i++) {\n-\t\t\t\tdeployable.addNewResources().setPath(containers[i].getLocation().toOSString());\n-\t\t\t}\n-\t\t\tcontainers = j2eeModule.getJavaOutputFolders();\n-\t\t\tfor (int i = 0; i < containers.length; i++) {\n-\t\t\t\tdeployable.addNewClasses().setPath(containers[i].getLocation().toOSString());\n-\t\t\t}\n-\t\t}\n-\n-\t\tIModule[] children = j2eeModule.getChildModules();\t\t\n-\t\tif (children.length > 0) {\n-\t\t\tChildren modChild = deployable.addNewChildren();\n-\t\t\tfor (int i = 0; i < children.length; i++) {\n-\t\t\t\tprocessModuleConfig(modChild.addNewModule(), children[i]);\n-\t\t\t}\n-\t\t}\n-\t\t\n-\t\tIVirtualComponent vc = ComponentCore.createComponent(serverModule.getProject());\n-\t\tIVirtualReference[] refs = vc.getReferences();\n-\t\tfor(int i = 0; i< refs.length; i++) {\n-\t\t\tIVirtualComponent refComp = refs[i].getReferencedComponent();\n-\t\t\tif(refComp.isBinary()) {\n-\t\t\t\tChildren modChild = deployable.getChildren() == null ? deployable.addNewChildren() : deployable.getChildren();\n-\t\t\t\tModule binaryModule = modChild.addNewModule();\n-\t\t\t\tVirtualArchiveComponent archiveComp = (VirtualArchiveComponent) refComp;\n-\t\t\t\tbinaryModule.setName(archiveComp.getUnderlyingDiskFile().getName());\n-\t\t\t\tbinaryModule.setPath(archiveComp.getUnderlyingDiskFile().getAbsolutePath());\n-\t\t\t}\n-\t\t}\n-\t}\n+\t}\t\n \n \t/**\n \t * @param module", "filename": "plugins/org.apache.geronimo.st.core/src/org/apache/geronimo/st/core/GeronimoServerBehaviourDelegate.java"}, {"additions": 21, "raw_url": "https://github.com/apache/geronimo-devtools/raw/4218c0a6b931bd9aecb6bb40e385bc0ec0c933a1/plugins/org.apache.geronimo.st.core/src/org/apache/geronimo/st/core/GeronimoUtils.java", "blob_url": "https://github.com/apache/geronimo-devtools/blob/4218c0a6b931bd9aecb6bb40e385bc0ec0c933a1/plugins/org.apache.geronimo.st.core/src/org/apache/geronimo/st/core/GeronimoUtils.java", "sha": "9458e071e8c1827989463d1ad45001312f03665a", "changes": 21, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/geronimo-devtools/contents/plugins/org.apache.geronimo.st.core/src/org/apache/geronimo/st/core/GeronimoUtils.java?ref=4218c0a6b931bd9aecb6bb40e385bc0ec0c933a1", "patch": "@@ -23,6 +23,7 @@\n \n import org.apache.geronimo.st.core.internal.Trace;\n import org.eclipse.core.resources.IFile;\n+import org.eclipse.core.resources.IProject;\n import org.eclipse.core.runtime.IPath;\n import org.eclipse.core.runtime.Path;\n import org.eclipse.emf.common.util.URI;\n@@ -31,9 +32,11 @@\n import org.eclipse.emf.ecore.resource.ResourceSet;\n import org.eclipse.emf.ecore.xmi.XMIResource;\n import org.eclipse.jst.j2ee.internal.deployables.J2EEFlexProjDeployable;\n+import org.eclipse.jst.j2ee.internal.project.J2EEProjectUtilities;\n import org.eclipse.jst.server.core.IWebModule;\n import org.eclipse.wst.common.componentcore.ArtifactEdit;\n import org.eclipse.wst.common.componentcore.ComponentCore;\n+import org.eclipse.wst.common.componentcore.internal.util.IModuleConstants;\n import org.eclipse.wst.common.componentcore.resources.IVirtualComponent;\n import org.eclipse.wst.server.core.IModule;\n \n@@ -86,6 +89,24 @@ public static ModuleType getJSR88ModuleType(IModule module) {\n \t\t\treturn null;\n \t\t}\n \t}\n+\t\n+\tpublic static IFile getDeploymentPlanFile(IModule module) {\n+\t\tIProject project = module.getProject();\n+\t\tIVirtualComponent comp = ComponentCore.createComponent(project);\n+\t\tString type = J2EEProjectUtilities.getJ2EEProjectType(project);\n+\t\tif (IModuleConstants.JST_WEB_MODULE.equals(type)) {\n+\t\t\treturn getWebDeploymentPlanFile(comp);\n+\t\t} else if (IModuleConstants.JST_EJB_MODULE.equals(type)) {\n+\t\t\treturn getOpenEjbDeploymentPlanFile(comp);\n+\t\t} else if (IModuleConstants.JST_EAR_MODULE.equals(type)) {\n+\t\t\treturn getApplicationDeploymentPlanFile(comp);\n+\t\t} else if (IModuleConstants.JST_CONNECTOR_MODULE.equals(type)) {\n+\t\t\treturn getConnectorDeploymentPlanFile(comp);\n+\t\t} else if (IModuleConstants.JST_UTILITY_MODULE.equals(type)) {\n+\t\t\treturn getServiceDeploymentPlanFile(comp);\n+\t\t}\n+\t\treturn null;\n+\t}\n \n \tpublic static IFile getWebDeploymentPlanFile(IVirtualComponent comp) {\n \t\tIPath deployPlanPath = comp.getRootFolder().getUnderlyingFolder().getProjectRelativePath().append(\"WEB-INF\").append(WEB_PLAN_NAME);", "filename": "plugins/org.apache.geronimo.st.core/src/org/apache/geronimo/st/core/GeronimoUtils.java"}, {"additions": 77, "raw_url": "https://github.com/apache/geronimo-devtools/raw/4218c0a6b931bd9aecb6bb40e385bc0ec0c933a1/plugins/org.apache.geronimo.st.core/src/org/apache/geronimo/st/core/commands/DeployCommand.java", "blob_url": "https://github.com/apache/geronimo-devtools/blob/4218c0a6b931bd9aecb6bb40e385bc0ec0c933a1/plugins/org.apache.geronimo.st.core/src/org/apache/geronimo/st/core/commands/DeployCommand.java", "sha": "673d60a7d0c0cc346f204239be44d3bdec39bdf3", "changes": 93, "status": "modified", "deletions": 16, "contents_url": "https://api.github.com/repos/apache/geronimo-devtools/contents/plugins/org.apache.geronimo.st.core/src/org/apache/geronimo/st/core/commands/DeployCommand.java?ref=4218c0a6b931bd9aecb6bb40e385bc0ec0c933a1", "patch": "@@ -17,15 +17,23 @@\n package org.apache.geronimo.st.core.commands;\n \n import java.io.File;\n+import java.io.IOException;\n \n+import org.apache.geronimo.st.core.Activator;\n import org.apache.geronimo.st.core.DeploymentUtils;\n-import org.apache.geronimo.st.core.GeronimoUtils;\n import org.apache.geronimo.st.core.IGeronimoServer;\n import org.apache.geronimo.st.core.internal.Trace;\n+import org.apache.geronimo.xbeans.eclipse.deployment.ModuleDocument;\n+import org.apache.geronimo.xbeans.eclipse.deployment.ChildrenDocument.Children;\n+import org.apache.geronimo.xbeans.eclipse.deployment.ModuleDocument.Module;\n+import org.apache.xmlbeans.XmlOptions;\n+import org.eclipse.core.resources.IContainer;\n import org.eclipse.core.runtime.IPath;\n-import org.eclipse.wst.common.componentcore.internal.StructureEdit;\n-import org.eclipse.wst.common.componentcore.internal.WorkbenchComponent;\n-import org.eclipse.wst.common.componentcore.internal.impl.WorkbenchComponentImpl;\n+import org.eclipse.jst.j2ee.internal.deployables.J2EEFlexProjDeployable;\n+import org.eclipse.wst.common.componentcore.ComponentCore;\n+import org.eclipse.wst.common.componentcore.internal.resources.VirtualArchiveComponent;\n+import org.eclipse.wst.common.componentcore.resources.IVirtualComponent;\n+import org.eclipse.wst.common.componentcore.resources.IVirtualReference;\n import org.eclipse.wst.server.core.IModule;\n import org.eclipse.wst.server.core.IServer;\n \n@@ -45,25 +53,78 @@ public DeployCommand(IServer server, IModule module) {\n \tpublic File getTargetFile() {\n \t\tFile file = null;\n \t\tIGeronimoServer gs = getGeronimoServer();\n-\t\tif (gs.isRunFromWorkspace() && !GeronimoUtils.isEarModule(getModule())) {\n-\t\t\tStructureEdit moduleCore = StructureEdit.getStructureEditForRead(getModule().getProject());\n-\t\t\ttry {\n-\t\t\t\tWorkbenchComponent component = moduleCore.getComponent();\n-\t\t\t\tIPath loc = ((WorkbenchComponentImpl) component).getDefaultSourceRoot();\n-\t\t\t\tfile = getModule().getProject().findMember(loc).getLocation().toFile();\n-\t\t\t} finally {\n-\t\t\t\tif (moduleCore != null)\n-\t\t\t\t\tmoduleCore.dispose();\n-\t\t\t}\n+\t\tif (gs.isRunFromWorkspace()) {\n+\t\t\tfile = generateRunFromWorkspaceConfig(getModule());\n \t\t} else {\n \t\t\tIPath outputDir = DeploymentUtils.STATE_LOC.append(\"server_\" + getServer().getId());\n \t\t\toutputDir.toFile().mkdirs();\n \t\t\tfile = DeploymentUtils.createJarFile(getModule(), outputDir);\n \t\t}\n-\t\t\n \t\tTrace.trace(Trace.INFO, \"File: \" + file.getAbsolutePath());\n-\t\t\n \t\treturn file;\n \t}\n \n+\tprotected File generateRunFromWorkspaceConfig(IModule module) {\n+\t\tIPath configDir = Activator.getDefault().getStateLocation().append(\"looseconfig\").append(\"server_\" + getServer().getId());\n+\t\tconfigDir.toFile().mkdirs();\n+\n+\t\tModuleDocument doc = ModuleDocument.Factory.newInstance();\n+\t\tModule deployable = doc.addNewModule();\n+\t\tprocessModuleConfig(deployable, module);\n+\n+\t\tXmlOptions options = new XmlOptions();\n+\t\toptions.setSavePrettyPrint();\n+\t\tFile file = configDir.append(module.getName()).addFileExtension(\"xml\").toFile();\n+\t\tTrace.trace(Trace.INFO,doc.xmlText(options));\n+\t\ttry {\n+\t\t\tdoc.save(file, options);\n+\t\t\treturn file;\n+\t\t} catch (IOException e) {\n+\t\t\te.printStackTrace();\n+\t\t}\n+\t\treturn null;\n+\t}\n+\n+\tprivate void processModuleConfig(Module deployable, IModule serverModule) {\n+\t\tdeployable.setName(serverModule.getName());\n+\t\tJ2EEFlexProjDeployable j2eeModule = (J2EEFlexProjDeployable) serverModule.loadAdapter(J2EEFlexProjDeployable.class, null);\n+\t\tif (j2eeModule != null) {\n+\n+\t\t\tif(j2eeModule.isBinary()) {\n+\t\t\t\tdeployable.setPath(serverModule.getName());\n+\t\t\t\treturn;\n+\t\t\t}\n+\n+\t\t\tIContainer[] containers = j2eeModule.getResourceFolders();\n+\t\t\tfor (int i = 0; i < containers.length; i++) {\n+\t\t\t\tdeployable.addNewResources().setPath(containers[i].getLocation().toOSString());\n+\t\t\t}\n+\t\t\tcontainers = j2eeModule.getJavaOutputFolders();\n+\t\t\tfor (int i = 0; i < containers.length; i++) {\n+\t\t\t\tdeployable.addNewClasses().setPath(containers[i].getLocation().toOSString());\n+\t\t\t}\n+\t\t}\n+\n+\t\tIModule[] children = j2eeModule.getChildModules();\t\t\n+\t\tif (children.length > 0) {\n+\t\t\tChildren modChild = deployable.addNewChildren();\n+\t\t\tfor (int i = 0; i < children.length; i++) {\n+\t\t\t\tprocessModuleConfig(modChild.addNewModule(), children[i]);\n+\t\t\t}\n+\t\t}\n+\n+\t\tIVirtualComponent vc = ComponentCore.createComponent(serverModule.getProject());\n+\t\tIVirtualReference[] refs = vc.getReferences();\n+\t\tfor(int i = 0; i< refs.length; i++) {\n+\t\t\tIVirtualComponent refComp = refs[i].getReferencedComponent();\n+\t\t\tif(refComp.isBinary()) {\n+\t\t\t\tChildren modChild = deployable.getChildren() == null ? deployable.addNewChildren() : deployable.getChildren();\n+\t\t\t\tModule binaryModule = modChild.addNewModule();\n+\t\t\t\tVirtualArchiveComponent archiveComp = (VirtualArchiveComponent) refComp;\n+\t\t\t\tbinaryModule.setName(archiveComp.getUnderlyingDiskFile().getName());\n+\t\t\t\tbinaryModule.setPath(archiveComp.getUnderlyingDiskFile().getAbsolutePath());\n+\t\t\t}\n+\t\t}\n+\t}\n+\n }", "filename": "plugins/org.apache.geronimo.st.core/src/org/apache/geronimo/st/core/commands/DeployCommand.java"}, {"additions": 2, "raw_url": "https://github.com/apache/geronimo-devtools/raw/4218c0a6b931bd9aecb6bb40e385bc0ec0c933a1/plugins/org.apache.geronimo.st.core/src/org/apache/geronimo/st/core/commands/RedeployCommand.java", "blob_url": "https://github.com/apache/geronimo-devtools/blob/4218c0a6b931bd9aecb6bb40e385bc0ec0c933a1/plugins/org.apache.geronimo.st.core/src/org/apache/geronimo/st/core/commands/RedeployCommand.java", "sha": "615e56d4239ba16c8de65d576ddb4278f898d135", "changes": 3, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/geronimo-devtools/contents/plugins/org.apache.geronimo.st.core/src/org/apache/geronimo/st/core/commands/RedeployCommand.java?ref=4218c0a6b931bd9aecb6bb40e385bc0ec0c933a1", "patch": "@@ -20,6 +20,7 @@\n import javax.enterprise.deploy.spi.TargetModuleID;\n \n import org.apache.geronimo.st.core.DeploymentUtils;\n+import org.apache.geronimo.st.core.GeronimoUtils;\n import org.apache.geronimo.st.core.IGeronimoServer;\n import org.apache.geronimo.st.core.ModuleArtifactMapper;\n import org.eclipse.core.runtime.CoreException;\n@@ -57,7 +58,7 @@ public IStatus execute(IProgressMonitor monitor) throws TargetModuleIdNotFoundEx\n \t\t\tids = new TargetModuleID[] {id};\n \t\t}\n \t\t\n-\t\treturn new DeploymentCmdStatus(Status.OK_STATUS, getDeploymentManager().redeploy(ids, getTargetFile(), null));\n+\t\treturn new DeploymentCmdStatus(Status.OK_STATUS, getDeploymentManager().redeploy(ids, getTargetFile(), GeronimoUtils.getDeploymentPlanFile(getModule()).getLocation().toFile()));\n \t}\n \n \t/*", "filename": "plugins/org.apache.geronimo.st.core/src/org/apache/geronimo/st/core/commands/RedeployCommand.java"}, {"additions": 2, "raw_url": "https://github.com/apache/geronimo-devtools/raw/4218c0a6b931bd9aecb6bb40e385bc0ec0c933a1/plugins/org.apache.geronimo.st.v11.ui/src/org/apache/geronimo/st/v11/ui/sections/ServerEditorTestEnvSection.java", "blob_url": "https://github.com/apache/geronimo-devtools/blob/4218c0a6b931bd9aecb6bb40e385bc0ec0c933a1/plugins/org.apache.geronimo.st.v11.ui/src/org/apache/geronimo/st/v11/ui/sections/ServerEditorTestEnvSection.java", "sha": "ff805747fcaa0d9488370dc2c30726c3b9aa9e4a", "changes": 5, "status": "modified", "deletions": 3, "contents_url": "https://api.github.com/repos/apache/geronimo-devtools/contents/plugins/org.apache.geronimo.st.v11.ui/src/org/apache/geronimo/st/v11/ui/sections/ServerEditorTestEnvSection.java?ref=4218c0a6b931bd9aecb6bb40e385bc0ec0c933a1", "patch": "@@ -87,12 +87,11 @@ public void widgetDefaultSelected(SelectionEvent e) {\n \t\trunFromWorkspace = toolkit.createButton(composite, Messages.editorSectionRunFromWorkspace, SWT.CHECK);\n \t\trunFromWorkspace.setSelection(gs.isRunFromWorkspace());\n \t\t// TODO temporarily disable support until new implementation\n-\t\trunFromWorkspace.setEnabled(false);\n+\t\t//runFromWorkspace.setEnabled(false);\n \t\trunFromWorkspace.addSelectionListener(new SelectionListener() {\n \n \t\t\tpublic void widgetSelected(SelectionEvent e) {\n-\t\t\t\texecute(new SetRunFromWorkspaceCommand(server, runFromWorkspace\n-\t\t\t\t\t\t.getSelection()));\n+\t\t\t\texecute(new SetRunFromWorkspaceCommand(server, runFromWorkspace.getSelection()));\n \t\t\t}\n \n \t\t\tpublic void widgetDefaultSelected(SelectionEvent e) {", "filename": "plugins/org.apache.geronimo.st.v11.ui/src/org/apache/geronimo/st/v11/ui/sections/ServerEditorTestEnvSection.java"}], "repo": "geronimo-devtools"}, {"commit": "https://github.com/apache/geronimo-devtools/commit/1a3ed8f826acb1f7c30054b75bb245c9b25f1e0d", "parent": "https://github.com/apache/geronimo-devtools/commit/86e83c3140a6490002b634bc5c1c41271e660984", "message": " r3165@sppatel-009027040242:  sppatel | 2006-12-05 12:31:45 -0500\n G1526 local branch\n r3166@sppatel-009027040242:  sppatel | 2006-12-05 12:49:05 -0500\n update EclipseDeployable to new interface\n r3167@sppatel-009027040242:  sppatel | 2006-12-05 12:51:52 -0500\n throw DeploymentException on constructor\n r3168@sppatel-009027040242:  sppatel | 2006-12-05 13:27:17 -0500\n make EclipseDeployable a gbean and create plan\n r3194@sppatel-009027040242:  sppatel | 2006-12-06 13:54:53 -0500\n need empty constructor\n r3214@sppatel-009027040242:  sppatel | 2006-12-07 13:15:06 -0500\n add dependency\n r3215@sppatel-009027040242:  sppatel | 2006-12-07 13:17:18 -0500\n enable run resource from workspace\n r3216@sppatel-009027040242:  sppatel | 2006-12-07 13:18:30 -0500\n move config gen to command\n r3217@sppatel-009027040242:  sppatel | 2006-12-07 13:19:27 -0500\n remove moved methods\n r3218@sppatel-009027040242:  sppatel | 2006-12-07 14:11:10 -0500\n need to make dependency on configuration due to class cast\n r3224@sppatel-009027040242:  sppatel | 2006-12-07 15:29:29 -0500\n fix resolve and getModuleContextResource methods\n r3233@sppatel-009027040242:  sppatel | 2006-12-07 16:51:26 -0500\n fix NPE\n r3237@sppatel-009027040242:  sppatel | 2006-12-07 18:11:47 -0500\n utility method to get deployment plan file\n r3238@sppatel-009027040242:  sppatel | 2006-12-07 18:12:34 -0500\n pass in deployment plan for redeploy\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/geronimo/devtools/eclipse-plugin/trunk@485779 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "geronimo-devtools_15", "file": [{"additions": 2, "raw_url": "https://github.com/apache/geronimo-devtools/raw/1a3ed8f826acb1f7c30054b75bb245c9b25f1e0d/modules/eclipse-support/pom.xml", "blob_url": "https://github.com/apache/geronimo-devtools/blob/1a3ed8f826acb1f7c30054b75bb245c9b25f1e0d/modules/eclipse-support/pom.xml", "sha": "96eca7d11f70e7dc93d1eb4ad7fce603b19e0bec", "changes": 4, "status": "modified", "deletions": 2, "contents_url": "https://api.github.com/repos/apache/geronimo-devtools/contents/modules/eclipse-support/pom.xml?ref=1a3ed8f826acb1f7c30054b75bb245c9b25f1e0d", "patch": "@@ -42,11 +42,11 @@\n \t<version>1.0-SNAPSHOT</version>\n \t<name>Geronimo Eclipse Plugin :: Eclipse Deployment Support</name>\n \t<dependencies>\n-\t\t<!--<dependency>\n+\t\t<dependency>\n \t\t\t<groupId>org.apache.geronimo.modules</groupId>\n \t\t\t<artifactId>geronimo-deployment</artifactId>\n \t\t\t<version>1.2-SNAPSHOT</version>\n-\t\t</dependency>-->\n+\t\t</dependency>\n \t\t<dependency>\n \t\t\t<groupId>xmlbeans</groupId>\n \t\t\t<artifactId>xbean</artifactId>", "filename": "modules/eclipse-support/pom.xml"}, {"additions": 68, "raw_url": "https://github.com/apache/geronimo-devtools/raw/1a3ed8f826acb1f7c30054b75bb245c9b25f1e0d/modules/eclipse-support/src/main/java/org/apache/geronimo/deployment/EclipseDeployableModule.java", "blob_url": "https://github.com/apache/geronimo-devtools/blob/1a3ed8f826acb1f7c30054b75bb245c9b25f1e0d/modules/eclipse-support/src/main/java/org/apache/geronimo/deployment/EclipseDeployableModule.java", "sha": "59c2cbaa83991b5860fd92d2a37c7337141fe72f", "changes": 120, "status": "modified", "deletions": 52, "contents_url": "https://api.github.com/repos/apache/geronimo-devtools/contents/modules/eclipse-support/src/main/java/org/apache/geronimo/deployment/EclipseDeployableModule.java?ref=1a3ed8f826acb1f7c30054b75bb245c9b25f1e0d", "patch": "@@ -1,20 +1,3 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one or more\n- * contributor license agreements.  See the NOTICE file distributed with\n- * this work for additional information regarding copyright ownership.\n- * The ASF licenses this file to You under the Apache License, Version 2.0\n- * (the \"License\"); you may not use this file except in compliance with\n- * the License.  You may obtain a copy of the License at\n- *\n- *    http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing, software\n- * distributed under the License is distributed on an \"AS IS\" BASIS,\n- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n- * See the License for the specific language governing permissions and\n- * limitations under the License.\n- */\n-\n /*\n  * Licensed to the Apache Software Foundation (ASF) under one or more\n  * contributor license agreements.  See the NOTICE file distributed with\n@@ -36,40 +19,44 @@\n import java.io.File;\n import java.io.IOException;\n import java.net.URL;\n+import java.util.jar.JarFile;\n \n+import org.apache.geronimo.common.DeploymentException;\n+import org.apache.geronimo.gbean.GBeanInfo;\n+import org.apache.geronimo.gbean.GBeanInfoBuilder;\n import org.apache.geronimo.xbeans.eclipse.deployment.ModuleDocument;\n import org.apache.geronimo.xbeans.eclipse.deployment.ClassesDocument.Classes;\n import org.apache.geronimo.xbeans.eclipse.deployment.ModuleDocument.Module;\n import org.apache.geronimo.xbeans.eclipse.deployment.ResourcesDocument.Resources;\n-import org.apache.xmlbeans.XmlException;\n \n /**\n  * @version $Rev$ $Date$\n  */\n-public class EclipseDeployableModule /*implements DeployableModule*/ {\n+public class EclipseDeployableModule implements DeployableModule {\n \n \tprivate Module module = null;\n \n \tprivate File root;\n-\t\n+\n \tprivate String uri;\n \n \tprivate File[] classesFolders = null;\n \n \tprivate File[] resourcesFolders = null;\n \n-\t//private DeployableModule[] children = null;\n-\t\n+\tprivate DeployableModule[] children = null;\n+\n \tprivate boolean archived = false;\n-\t\n-\tpublic EclipseDeployableModule(File config) {\n+\n+\tpublic EclipseDeployableModule() {\n+\t}\n+\n+\tpublic EclipseDeployableModule(File config) throws DeploymentException {\n \t\ttry {\n \t\t\tmodule = ModuleDocument.Factory.parse(config).getModule();\n \t\t\tinit();\n-\t\t} catch (XmlException e) {\n-\t\t\te.printStackTrace();\n-\t\t} catch (IOException e) {\n-\t\t\te.printStackTrace();\n+\t\t} catch (Exception e) {\n+\t\t\tthrow new DeploymentException(e);\n \t\t}\n \t}\n \n@@ -125,13 +112,9 @@ public void cleanup() {\n \n \t\tResources[] resources = module.getResourcesArray();\n \t\tresourcesFolders = new File[resources.length];\n-\t\tfor (int i = 0; i < classesFolders.length; i++) {\n+\t\tfor (int i = 0; i < resourcesFolders.length; i++) {\n \t\t\tFile file = new File(resources[i].getPath());\n-\t\t\tif (file.exists()) {\n-\t\t\t\tresourcesFolders[i] = file;\n-\t\t\t} else {\n-\n-\t\t\t}\n+\t\t\tresourcesFolders[i] = file;\n \t\t}\n \n \t\treturn resourcesFolders;\n@@ -142,20 +125,24 @@ public void cleanup() {\n \t * \n \t * @see org.apache.geronimo.deployment.DeployableModule#getModules()\n \t */\n-\t/*public DeployableModule[] getModules() {\n+\tpublic DeployableModule[] getModules() {\n \t\tif (children != null) {\n \t\t\treturn children;\n \t\t}\n \n-\t\tModule[] childModules = module.getChildren().getModuleArray();\n-\t\tchildren = new DeployableModule[childModules.length];\n-\t\tfor (int i = 0; i < childModules.length; i++) {\n-\t\t\tModule child = childModules[i];\n-\t\t\tchildren[i] = new EclipseDeployableModule(child);\n+\t\tif (module.getChildren() != null) {\n+\t\t\tModule[] childModules = module.getChildren().getModuleArray();\n+\t\t\tchildren = new DeployableModule[childModules.length];\n+\t\t\tfor (int i = 0; i < childModules.length; i++) {\n+\t\t\t\tModule child = childModules[i];\n+\t\t\t\tchildren[i] = new EclipseDeployableModule(child);\n+\t\t\t}\n+\t\t} else {\n+\t\t\tchildren = new EclipseDeployableModule[]{};\n \t\t}\n \n \t\treturn children;\n-\t}*/\n+\t}\n \n \t/*\n \t * (non-Javadoc)\n@@ -166,7 +153,11 @@ public File getRoot() {\n \t\tif (root != null) {\n \t\t\treturn root;\n \t\t}\n-\t\troot = new File(module.getPath());\n+\t\tif (module.getPath() != null) {\n+\t\t\troot = new File(module.getPath());\n+\t\t} else {\n+\t\t\troot = new File(module.getResourcesArray(0).getPath());\n+\t\t}\n \t\treturn root;\n \t}\n \n@@ -176,7 +167,7 @@ public File getRoot() {\n \t * @see org.apache.geronimo.deployment.DeployableModule#getURI()\n \t */\n \tpublic String getURI() {\n-\t\tif(uri != null) {\n+\t\tif (uri != null) {\n \t\t\treturn uri;\n \t\t}\n \t\turi = module.getName();\n@@ -198,12 +189,14 @@ public boolean isArchived() {\n \t * @see org.apache.geronimo.deployment.DeployableModule#resolve(java.lang.String)\n \t */\n \tpublic URL resolve(String path) throws IOException {\n+\t\tSystem.out.println(\"Resolving: \" + path);\n \t\tFile[] search = getModuleContextResources();\n-\t\tfor(int i = 0; i <  search.length; i++) {\n-\t\t\tString findPath = search[i].getAbsolutePath().concat(path);\n-\t\t\tFile file = new File(findPath);\n-\t\t\tif(file.exists()) \n+\t\tfor (int i = 0; i < search.length; i++) {\n+\t\t\tFile file = new File(search[i].getAbsolutePath(), path);\n+\t\t\tif (file.exists()) {\n+\t\t\t\tSystem.out.println(\"Resolved to: \" + file);\n \t\t\t\treturn file.toURL();\n+\t\t\t}\n \t\t}\n \t\treturn null;\n \t}\n@@ -213,17 +206,40 @@ public URL resolve(String path) throws IOException {\n \t * \n \t * @see org.apache.geronimo.deployment.DeployableModule#resolveModule(java.lang.String)\n \t */\n-/*\tpublic DeployableModule resolveModule(String uri) throws IOException {\n+\tpublic DeployableModule resolveModule(String uri) throws IOException {\n \t\tDeployableModule[] children = getModules();\n-\t\tfor(int i = 0; i < children.length; i++) {\n-\t\t\tif(children[i].getURI().equals(uri)) {\n+\t\tfor (int i = 0; i < children.length; i++) {\n+\t\t\tif (children[i].getURI().equals(uri)) {\n \t\t\t\treturn children[i];\n \t\t\t}\n \t\t}\n \t\treturn null;\n-\t}*/\n-\t\n+\t}\n+\n+\t/*\n+\t * (non-Javadoc)\n+\t * \n+\t * @see org.apache.geronimo.deployment.DeployableModule#getArchive()\n+\t */\n+\tpublic JarFile getArchive() {\n+\t\treturn null;\n+\t}\n+\n \tprivate void init() {\n \t\tarchived = getRoot().isFile();\n \t}\n+\n+\tpublic static final GBeanInfo GBEAN_INFO;\n+\n+\tstatic {\n+\t\tGBeanInfoBuilder infoBuilder = GBeanInfoBuilder.createStatic(\n+\t\t\t\tEclipseDeployableModule.class, \"DeployableModule\");\n+\t\tinfoBuilder.addInterface(DeployableModule.class);\n+\t\tGBEAN_INFO = infoBuilder.getBeanInfo();\n+\t}\n+\n+\tpublic static GBeanInfo getGBeanInfo() {\n+\t\treturn GBEAN_INFO;\n+\t}\n+\n }", "filename": "modules/eclipse-support/src/main/java/org/apache/geronimo/deployment/EclipseDeployableModule.java"}, {"additions": 49, "raw_url": "https://github.com/apache/geronimo-devtools/raw/1a3ed8f826acb1f7c30054b75bb245c9b25f1e0d/modules/eclipse-support/src/main/resources/geronimo-service.xml", "blob_url": "https://github.com/apache/geronimo-devtools/blob/1a3ed8f826acb1f7c30054b75bb245c9b25f1e0d/modules/eclipse-support/src/main/resources/geronimo-service.xml", "sha": "6d8eb5c3fe4c81a5ecc4e6c870a24a5c155eae0b", "changes": 49, "status": "added", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/geronimo-devtools/contents/modules/eclipse-support/src/main/resources/geronimo-service.xml?ref=1a3ed8f826acb1f7c30054b75bb245c9b25f1e0d", "patch": "@@ -0,0 +1,49 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<!--\n+\tLicensed to the Apache Software Foundation (ASF) under one or more\n+\tcontributor license agreements.  See the NOTICE file distributed with\n+\tthis work for additional information regarding copyright ownership.\n+\tThe ASF licenses this file to You under the Apache License, Version 2.0\n+\t(the \"License\"); you may not use this file except in compliance with\n+\tthe License.  You may obtain a copy of the License at\n+\t\n+\thttp://www.apache.org/licenses/LICENSE-2.0\n+\t\n+\tUnless required by applicable law or agreed to in writing, software\n+\tdistributed under the License is distributed on an \"AS IS\" BASIS,\n+\tWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+\tSee the License for the specific language governing permissions and\n+\tlimitations under the License.\n+-->\n+<module xmlns=\"http://geronimo.apache.org/xml/ns/deployment-1.1\">\n+\t<environment>\n+\t\t<moduleId>\n+\t\t\t<groupId>org.apache.geronimo.eclipse.deployment</groupId>\n+\t\t\t<artifactId>eclipse-deployment-support</artifactId>\n+\t\t\t<version>1.0-SNAPSHOT</version>\n+\t\t\t<type>car</type>\n+\t\t</moduleId>\n+\t\t<dependencies>\n+\t\t\t<dependency>\n+\t\t\t\t<groupId>org.apache.geronimo.configs</groupId>\n+      \t\t\t<artifactId>geronimo-gbean-deployer</artifactId>\n+      \t\t\t<version>1.2-SNAPSHOT</version>\n+      \t\t\t<type>car</type>\n+\t\t\t</dependency>\n+\t\t\t<dependency>\n+\t\t\t\t<groupId>xmlbeans</groupId>\n+\t\t\t\t<artifactId>xbean</artifactId>\n+\t\t\t\t<version>2.0.0</version>\n+\t\t\t\t<type>jar</type>\n+\t\t\t\t<import>classes</import>\n+\t\t\t</dependency>\n+\t\t\t <dependency>\n+                <groupId>stax</groupId>\n+                <artifactId>stax-api</artifactId>\n+                <version>1.0</version>\n+                <type>jar</type>\n+            </dependency>\n+\t\t</dependencies>\n+\t</environment>\n+\t<gbean name=\"EclipseDeployable\" class=\"org.apache.geronimo.deployment.EclipseDeployableModule\" />\n+</module>\n\\ No newline at end of file", "filename": "modules/eclipse-support/src/main/resources/geronimo-service.xml"}, {"additions": 1, "raw_url": "https://github.com/apache/geronimo-devtools/raw/1a3ed8f826acb1f7c30054b75bb245c9b25f1e0d/plugins/org.apache.geronimo.st.core/src/org/apache/geronimo/st/core/GeronimoServerBehaviourDelegate.java", "blob_url": "https://github.com/apache/geronimo-devtools/blob/1a3ed8f826acb1f7c30054b75bb245c9b25f1e0d/plugins/org.apache.geronimo.st.core/src/org/apache/geronimo/st/core/GeronimoServerBehaviourDelegate.java", "sha": "57280461ff2d0fbb4edd65345738683d56f171b7", "changes": 80, "status": "modified", "deletions": 79, "contents_url": "https://api.github.com/repos/apache/geronimo-devtools/contents/plugins/org.apache.geronimo.st.core/src/org/apache/geronimo/st/core/GeronimoServerBehaviourDelegate.java?ref=1a3ed8f826acb1f7c30054b75bb245c9b25f1e0d", "patch": "@@ -16,8 +16,6 @@\n  */\n package org.apache.geronimo.st.core;\n \n-import java.io.File;\n-import java.io.IOException;\n import java.net.MalformedURLException;\n import java.net.URL;\n import java.util.ArrayList;\n@@ -43,12 +41,7 @@\n import org.apache.geronimo.st.core.operations.ISharedLibEntryCreationDataModelProperties;\n import org.apache.geronimo.st.core.operations.SharedLibEntryCreationOperation;\n import org.apache.geronimo.st.core.operations.SharedLibEntryDataModelProvider;\n-import org.apache.geronimo.xbeans.eclipse.deployment.ModuleDocument;\n-import org.apache.geronimo.xbeans.eclipse.deployment.ChildrenDocument.Children;\n-import org.apache.geronimo.xbeans.eclipse.deployment.ModuleDocument.Module;\n-import org.apache.xmlbeans.XmlOptions;\n import org.eclipse.core.commands.ExecutionException;\n-import org.eclipse.core.resources.IContainer;\n import org.eclipse.core.runtime.CoreException;\n import org.eclipse.core.runtime.IPath;\n import org.eclipse.core.runtime.IProgressMonitor;\n@@ -67,11 +60,6 @@\n import org.eclipse.jdt.launching.IRuntimeClasspathEntry;\n import org.eclipse.jdt.launching.IVMInstall;\n import org.eclipse.jdt.launching.JavaRuntime;\n-import org.eclipse.jst.j2ee.internal.deployables.J2EEFlexProjDeployable;\n-import org.eclipse.wst.common.componentcore.ComponentCore;\n-import org.eclipse.wst.common.componentcore.internal.resources.VirtualArchiveComponent;\n-import org.eclipse.wst.common.componentcore.resources.IVirtualComponent;\n-import org.eclipse.wst.common.componentcore.resources.IVirtualReference;\n import org.eclipse.wst.common.frameworks.datamodel.DataModelFactory;\n import org.eclipse.wst.common.frameworks.datamodel.IDataModel;\n import org.eclipse.wst.common.frameworks.datamodel.IDataModelOperation;\n@@ -364,7 +352,6 @@ protected void stopImpl() {\n \t}\n \n \tprotected void invokeCommand(int deltaKind, IModule module) throws CoreException {\n-\t\tgenerateRunFromWorkspaceConfig(module);\n \t\t\n \t\tClassLoader old = Thread.currentThread().getContextClassLoader();\n \t\ttry {\n@@ -398,72 +385,7 @@ protected void invokeCommand(int deltaKind, IModule module) throws CoreException\n \t\t} finally {\n \t\t\tThread.currentThread().setContextClassLoader(old);\n \t\t}\n-\t}\n-\t\n-\tprivate void generateRunFromWorkspaceConfig(IModule module) {\n-\t\tif (getGeronimoServer().isRunFromWorkspace()) {\n-\t\t\tIPath configDir = Activator.getDefault().getStateLocation().append(\"looseconfig\").append(\"server_\" + getServer().getId());\n-\t\t\tconfigDir.toFile().mkdirs();\n-\n-\t\t\tModuleDocument doc = ModuleDocument.Factory.newInstance();\n-\t\t\tModule deployable = doc.addNewModule();\n-\t\t\tprocessModuleConfig(deployable, module);\n-\n-\t\t\tXmlOptions options = new XmlOptions();\n-\t\t\toptions.setSavePrettyPrint();\n-\t\t\tFile file = configDir.append(module.getName()).addFileExtension(\"xml\").toFile();\n-\t\t\tTrace.trace(Trace.INFO,doc.xmlText(options));\n-\t\t\ttry {\n-\t\t\t\tdoc.save(file, options);\n-\t\t\t} catch (IOException e) {\n-\t\t\t\te.printStackTrace();\n-\t\t\t}\n-\t\t}\n-\t}\n-\n-\tprivate void processModuleConfig(Module deployable, IModule serverModule) {\n-\t\t\n-\t\tdeployable.setName(serverModule.getName());\n-\t\t\n-\t\tJ2EEFlexProjDeployable j2eeModule = (J2EEFlexProjDeployable) serverModule.loadAdapter(J2EEFlexProjDeployable.class, null);\n-\t\tif (j2eeModule != null) {\n-\t\t\t\n-\t\t\tif(j2eeModule.isBinary()) {\n-\t\t\t\tdeployable.setPath(serverModule.getName());\n-\t\t\t\treturn;\n-\t\t\t}\n-\t\t\t\n-\t\t\tIContainer[] containers = j2eeModule.getResourceFolders();\n-\t\t\tfor (int i = 0; i < containers.length; i++) {\n-\t\t\t\tdeployable.addNewResources().setPath(containers[i].getLocation().toOSString());\n-\t\t\t}\n-\t\t\tcontainers = j2eeModule.getJavaOutputFolders();\n-\t\t\tfor (int i = 0; i < containers.length; i++) {\n-\t\t\t\tdeployable.addNewClasses().setPath(containers[i].getLocation().toOSString());\n-\t\t\t}\n-\t\t}\n-\n-\t\tIModule[] children = j2eeModule.getChildModules();\t\t\n-\t\tif (children.length > 0) {\n-\t\t\tChildren modChild = deployable.addNewChildren();\n-\t\t\tfor (int i = 0; i < children.length; i++) {\n-\t\t\t\tprocessModuleConfig(modChild.addNewModule(), children[i]);\n-\t\t\t}\n-\t\t}\n-\t\t\n-\t\tIVirtualComponent vc = ComponentCore.createComponent(serverModule.getProject());\n-\t\tIVirtualReference[] refs = vc.getReferences();\n-\t\tfor(int i = 0; i< refs.length; i++) {\n-\t\t\tIVirtualComponent refComp = refs[i].getReferencedComponent();\n-\t\t\tif(refComp.isBinary()) {\n-\t\t\t\tChildren modChild = deployable.getChildren() == null ? deployable.addNewChildren() : deployable.getChildren();\n-\t\t\t\tModule binaryModule = modChild.addNewModule();\n-\t\t\t\tVirtualArchiveComponent archiveComp = (VirtualArchiveComponent) refComp;\n-\t\t\t\tbinaryModule.setName(archiveComp.getUnderlyingDiskFile().getName());\n-\t\t\t\tbinaryModule.setPath(archiveComp.getUnderlyingDiskFile().getAbsolutePath());\n-\t\t\t}\n-\t\t}\n-\t}\n+\t}\t\n \n \t/**\n \t * @param module", "filename": "plugins/org.apache.geronimo.st.core/src/org/apache/geronimo/st/core/GeronimoServerBehaviourDelegate.java"}, {"additions": 21, "raw_url": "https://github.com/apache/geronimo-devtools/raw/1a3ed8f826acb1f7c30054b75bb245c9b25f1e0d/plugins/org.apache.geronimo.st.core/src/org/apache/geronimo/st/core/GeronimoUtils.java", "blob_url": "https://github.com/apache/geronimo-devtools/blob/1a3ed8f826acb1f7c30054b75bb245c9b25f1e0d/plugins/org.apache.geronimo.st.core/src/org/apache/geronimo/st/core/GeronimoUtils.java", "sha": "9458e071e8c1827989463d1ad45001312f03665a", "changes": 21, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/geronimo-devtools/contents/plugins/org.apache.geronimo.st.core/src/org/apache/geronimo/st/core/GeronimoUtils.java?ref=1a3ed8f826acb1f7c30054b75bb245c9b25f1e0d", "patch": "@@ -23,6 +23,7 @@\n \n import org.apache.geronimo.st.core.internal.Trace;\n import org.eclipse.core.resources.IFile;\n+import org.eclipse.core.resources.IProject;\n import org.eclipse.core.runtime.IPath;\n import org.eclipse.core.runtime.Path;\n import org.eclipse.emf.common.util.URI;\n@@ -31,9 +32,11 @@\n import org.eclipse.emf.ecore.resource.ResourceSet;\n import org.eclipse.emf.ecore.xmi.XMIResource;\n import org.eclipse.jst.j2ee.internal.deployables.J2EEFlexProjDeployable;\n+import org.eclipse.jst.j2ee.internal.project.J2EEProjectUtilities;\n import org.eclipse.jst.server.core.IWebModule;\n import org.eclipse.wst.common.componentcore.ArtifactEdit;\n import org.eclipse.wst.common.componentcore.ComponentCore;\n+import org.eclipse.wst.common.componentcore.internal.util.IModuleConstants;\n import org.eclipse.wst.common.componentcore.resources.IVirtualComponent;\n import org.eclipse.wst.server.core.IModule;\n \n@@ -86,6 +89,24 @@ public static ModuleType getJSR88ModuleType(IModule module) {\n \t\t\treturn null;\n \t\t}\n \t}\n+\t\n+\tpublic static IFile getDeploymentPlanFile(IModule module) {\n+\t\tIProject project = module.getProject();\n+\t\tIVirtualComponent comp = ComponentCore.createComponent(project);\n+\t\tString type = J2EEProjectUtilities.getJ2EEProjectType(project);\n+\t\tif (IModuleConstants.JST_WEB_MODULE.equals(type)) {\n+\t\t\treturn getWebDeploymentPlanFile(comp);\n+\t\t} else if (IModuleConstants.JST_EJB_MODULE.equals(type)) {\n+\t\t\treturn getOpenEjbDeploymentPlanFile(comp);\n+\t\t} else if (IModuleConstants.JST_EAR_MODULE.equals(type)) {\n+\t\t\treturn getApplicationDeploymentPlanFile(comp);\n+\t\t} else if (IModuleConstants.JST_CONNECTOR_MODULE.equals(type)) {\n+\t\t\treturn getConnectorDeploymentPlanFile(comp);\n+\t\t} else if (IModuleConstants.JST_UTILITY_MODULE.equals(type)) {\n+\t\t\treturn getServiceDeploymentPlanFile(comp);\n+\t\t}\n+\t\treturn null;\n+\t}\n \n \tpublic static IFile getWebDeploymentPlanFile(IVirtualComponent comp) {\n \t\tIPath deployPlanPath = comp.getRootFolder().getUnderlyingFolder().getProjectRelativePath().append(\"WEB-INF\").append(WEB_PLAN_NAME);", "filename": "plugins/org.apache.geronimo.st.core/src/org/apache/geronimo/st/core/GeronimoUtils.java"}, {"additions": 77, "raw_url": "https://github.com/apache/geronimo-devtools/raw/1a3ed8f826acb1f7c30054b75bb245c9b25f1e0d/plugins/org.apache.geronimo.st.core/src/org/apache/geronimo/st/core/commands/DeployCommand.java", "blob_url": "https://github.com/apache/geronimo-devtools/blob/1a3ed8f826acb1f7c30054b75bb245c9b25f1e0d/plugins/org.apache.geronimo.st.core/src/org/apache/geronimo/st/core/commands/DeployCommand.java", "sha": "673d60a7d0c0cc346f204239be44d3bdec39bdf3", "changes": 93, "status": "modified", "deletions": 16, "contents_url": "https://api.github.com/repos/apache/geronimo-devtools/contents/plugins/org.apache.geronimo.st.core/src/org/apache/geronimo/st/core/commands/DeployCommand.java?ref=1a3ed8f826acb1f7c30054b75bb245c9b25f1e0d", "patch": "@@ -17,15 +17,23 @@\n package org.apache.geronimo.st.core.commands;\n \n import java.io.File;\n+import java.io.IOException;\n \n+import org.apache.geronimo.st.core.Activator;\n import org.apache.geronimo.st.core.DeploymentUtils;\n-import org.apache.geronimo.st.core.GeronimoUtils;\n import org.apache.geronimo.st.core.IGeronimoServer;\n import org.apache.geronimo.st.core.internal.Trace;\n+import org.apache.geronimo.xbeans.eclipse.deployment.ModuleDocument;\n+import org.apache.geronimo.xbeans.eclipse.deployment.ChildrenDocument.Children;\n+import org.apache.geronimo.xbeans.eclipse.deployment.ModuleDocument.Module;\n+import org.apache.xmlbeans.XmlOptions;\n+import org.eclipse.core.resources.IContainer;\n import org.eclipse.core.runtime.IPath;\n-import org.eclipse.wst.common.componentcore.internal.StructureEdit;\n-import org.eclipse.wst.common.componentcore.internal.WorkbenchComponent;\n-import org.eclipse.wst.common.componentcore.internal.impl.WorkbenchComponentImpl;\n+import org.eclipse.jst.j2ee.internal.deployables.J2EEFlexProjDeployable;\n+import org.eclipse.wst.common.componentcore.ComponentCore;\n+import org.eclipse.wst.common.componentcore.internal.resources.VirtualArchiveComponent;\n+import org.eclipse.wst.common.componentcore.resources.IVirtualComponent;\n+import org.eclipse.wst.common.componentcore.resources.IVirtualReference;\n import org.eclipse.wst.server.core.IModule;\n import org.eclipse.wst.server.core.IServer;\n \n@@ -45,25 +53,78 @@ public DeployCommand(IServer server, IModule module) {\n \tpublic File getTargetFile() {\n \t\tFile file = null;\n \t\tIGeronimoServer gs = getGeronimoServer();\n-\t\tif (gs.isRunFromWorkspace() && !GeronimoUtils.isEarModule(getModule())) {\n-\t\t\tStructureEdit moduleCore = StructureEdit.getStructureEditForRead(getModule().getProject());\n-\t\t\ttry {\n-\t\t\t\tWorkbenchComponent component = moduleCore.getComponent();\n-\t\t\t\tIPath loc = ((WorkbenchComponentImpl) component).getDefaultSourceRoot();\n-\t\t\t\tfile = getModule().getProject().findMember(loc).getLocation().toFile();\n-\t\t\t} finally {\n-\t\t\t\tif (moduleCore != null)\n-\t\t\t\t\tmoduleCore.dispose();\n-\t\t\t}\n+\t\tif (gs.isRunFromWorkspace()) {\n+\t\t\tfile = generateRunFromWorkspaceConfig(getModule());\n \t\t} else {\n \t\t\tIPath outputDir = DeploymentUtils.STATE_LOC.append(\"server_\" + getServer().getId());\n \t\t\toutputDir.toFile().mkdirs();\n \t\t\tfile = DeploymentUtils.createJarFile(getModule(), outputDir);\n \t\t}\n-\t\t\n \t\tTrace.trace(Trace.INFO, \"File: \" + file.getAbsolutePath());\n-\t\t\n \t\treturn file;\n \t}\n \n+\tprotected File generateRunFromWorkspaceConfig(IModule module) {\n+\t\tIPath configDir = Activator.getDefault().getStateLocation().append(\"looseconfig\").append(\"server_\" + getServer().getId());\n+\t\tconfigDir.toFile().mkdirs();\n+\n+\t\tModuleDocument doc = ModuleDocument.Factory.newInstance();\n+\t\tModule deployable = doc.addNewModule();\n+\t\tprocessModuleConfig(deployable, module);\n+\n+\t\tXmlOptions options = new XmlOptions();\n+\t\toptions.setSavePrettyPrint();\n+\t\tFile file = configDir.append(module.getName()).addFileExtension(\"xml\").toFile();\n+\t\tTrace.trace(Trace.INFO,doc.xmlText(options));\n+\t\ttry {\n+\t\t\tdoc.save(file, options);\n+\t\t\treturn file;\n+\t\t} catch (IOException e) {\n+\t\t\te.printStackTrace();\n+\t\t}\n+\t\treturn null;\n+\t}\n+\n+\tprivate void processModuleConfig(Module deployable, IModule serverModule) {\n+\t\tdeployable.setName(serverModule.getName());\n+\t\tJ2EEFlexProjDeployable j2eeModule = (J2EEFlexProjDeployable) serverModule.loadAdapter(J2EEFlexProjDeployable.class, null);\n+\t\tif (j2eeModule != null) {\n+\n+\t\t\tif(j2eeModule.isBinary()) {\n+\t\t\t\tdeployable.setPath(serverModule.getName());\n+\t\t\t\treturn;\n+\t\t\t}\n+\n+\t\t\tIContainer[] containers = j2eeModule.getResourceFolders();\n+\t\t\tfor (int i = 0; i < containers.length; i++) {\n+\t\t\t\tdeployable.addNewResources().setPath(containers[i].getLocation().toOSString());\n+\t\t\t}\n+\t\t\tcontainers = j2eeModule.getJavaOutputFolders();\n+\t\t\tfor (int i = 0; i < containers.length; i++) {\n+\t\t\t\tdeployable.addNewClasses().setPath(containers[i].getLocation().toOSString());\n+\t\t\t}\n+\t\t}\n+\n+\t\tIModule[] children = j2eeModule.getChildModules();\t\t\n+\t\tif (children.length > 0) {\n+\t\t\tChildren modChild = deployable.addNewChildren();\n+\t\t\tfor (int i = 0; i < children.length; i++) {\n+\t\t\t\tprocessModuleConfig(modChild.addNewModule(), children[i]);\n+\t\t\t}\n+\t\t}\n+\n+\t\tIVirtualComponent vc = ComponentCore.createComponent(serverModule.getProject());\n+\t\tIVirtualReference[] refs = vc.getReferences();\n+\t\tfor(int i = 0; i< refs.length; i++) {\n+\t\t\tIVirtualComponent refComp = refs[i].getReferencedComponent();\n+\t\t\tif(refComp.isBinary()) {\n+\t\t\t\tChildren modChild = deployable.getChildren() == null ? deployable.addNewChildren() : deployable.getChildren();\n+\t\t\t\tModule binaryModule = modChild.addNewModule();\n+\t\t\t\tVirtualArchiveComponent archiveComp = (VirtualArchiveComponent) refComp;\n+\t\t\t\tbinaryModule.setName(archiveComp.getUnderlyingDiskFile().getName());\n+\t\t\t\tbinaryModule.setPath(archiveComp.getUnderlyingDiskFile().getAbsolutePath());\n+\t\t\t}\n+\t\t}\n+\t}\n+\n }", "filename": "plugins/org.apache.geronimo.st.core/src/org/apache/geronimo/st/core/commands/DeployCommand.java"}, {"additions": 2, "raw_url": "https://github.com/apache/geronimo-devtools/raw/1a3ed8f826acb1f7c30054b75bb245c9b25f1e0d/plugins/org.apache.geronimo.st.core/src/org/apache/geronimo/st/core/commands/RedeployCommand.java", "blob_url": "https://github.com/apache/geronimo-devtools/blob/1a3ed8f826acb1f7c30054b75bb245c9b25f1e0d/plugins/org.apache.geronimo.st.core/src/org/apache/geronimo/st/core/commands/RedeployCommand.java", "sha": "615e56d4239ba16c8de65d576ddb4278f898d135", "changes": 3, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/geronimo-devtools/contents/plugins/org.apache.geronimo.st.core/src/org/apache/geronimo/st/core/commands/RedeployCommand.java?ref=1a3ed8f826acb1f7c30054b75bb245c9b25f1e0d", "patch": "@@ -20,6 +20,7 @@\n import javax.enterprise.deploy.spi.TargetModuleID;\n \n import org.apache.geronimo.st.core.DeploymentUtils;\n+import org.apache.geronimo.st.core.GeronimoUtils;\n import org.apache.geronimo.st.core.IGeronimoServer;\n import org.apache.geronimo.st.core.ModuleArtifactMapper;\n import org.eclipse.core.runtime.CoreException;\n@@ -57,7 +58,7 @@ public IStatus execute(IProgressMonitor monitor) throws TargetModuleIdNotFoundEx\n \t\t\tids = new TargetModuleID[] {id};\n \t\t}\n \t\t\n-\t\treturn new DeploymentCmdStatus(Status.OK_STATUS, getDeploymentManager().redeploy(ids, getTargetFile(), null));\n+\t\treturn new DeploymentCmdStatus(Status.OK_STATUS, getDeploymentManager().redeploy(ids, getTargetFile(), GeronimoUtils.getDeploymentPlanFile(getModule()).getLocation().toFile()));\n \t}\n \n \t/*", "filename": "plugins/org.apache.geronimo.st.core/src/org/apache/geronimo/st/core/commands/RedeployCommand.java"}, {"additions": 2, "raw_url": "https://github.com/apache/geronimo-devtools/raw/1a3ed8f826acb1f7c30054b75bb245c9b25f1e0d/plugins/org.apache.geronimo.st.v11.ui/src/org/apache/geronimo/st/v11/ui/sections/ServerEditorTestEnvSection.java", "blob_url": "https://github.com/apache/geronimo-devtools/blob/1a3ed8f826acb1f7c30054b75bb245c9b25f1e0d/plugins/org.apache.geronimo.st.v11.ui/src/org/apache/geronimo/st/v11/ui/sections/ServerEditorTestEnvSection.java", "sha": "ff805747fcaa0d9488370dc2c30726c3b9aa9e4a", "changes": 5, "status": "modified", "deletions": 3, "contents_url": "https://api.github.com/repos/apache/geronimo-devtools/contents/plugins/org.apache.geronimo.st.v11.ui/src/org/apache/geronimo/st/v11/ui/sections/ServerEditorTestEnvSection.java?ref=1a3ed8f826acb1f7c30054b75bb245c9b25f1e0d", "patch": "@@ -87,12 +87,11 @@ public void widgetDefaultSelected(SelectionEvent e) {\n \t\trunFromWorkspace = toolkit.createButton(composite, Messages.editorSectionRunFromWorkspace, SWT.CHECK);\n \t\trunFromWorkspace.setSelection(gs.isRunFromWorkspace());\n \t\t// TODO temporarily disable support until new implementation\n-\t\trunFromWorkspace.setEnabled(false);\n+\t\t//runFromWorkspace.setEnabled(false);\n \t\trunFromWorkspace.addSelectionListener(new SelectionListener() {\n \n \t\t\tpublic void widgetSelected(SelectionEvent e) {\n-\t\t\t\texecute(new SetRunFromWorkspaceCommand(server, runFromWorkspace\n-\t\t\t\t\t\t.getSelection()));\n+\t\t\t\texecute(new SetRunFromWorkspaceCommand(server, runFromWorkspace.getSelection()));\n \t\t\t}\n \n \t\t\tpublic void widgetDefaultSelected(SelectionEvent e) {", "filename": "plugins/org.apache.geronimo.st.v11.ui/src/org/apache/geronimo/st/v11/ui/sections/ServerEditorTestEnvSection.java"}], "repo": "geronimo-devtools"}]
