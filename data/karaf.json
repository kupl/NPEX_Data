{
    "karaf_05fbd39": {
        "bug_id": "karaf_05fbd39",
        "commit": "https://github.com/apache/karaf/commit/05fbd3907eb580fdab1cc8e2738a421f59ab53e9",
        "file": [
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/karaf/blob/05fbd3907eb580fdab1cc8e2738a421f59ab53e9/gshell/gshell-features/src/main/java/org/apache/servicemix/gshell/features/internal/FeaturesServiceImpl.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/karaf/contents/gshell/gshell-features/src/main/java/org/apache/servicemix/gshell/features/internal/FeaturesServiceImpl.java?ref=05fbd3907eb580fdab1cc8e2738a421f59ab53e9",
                "deletions": 1,
                "filename": "gshell/gshell-features/src/main/java/org/apache/servicemix/gshell/features/internal/FeaturesServiceImpl.java",
                "patch": "@@ -173,7 +173,7 @@ protected Bundle installBundleIfNeeded(String bundleLocation) throws IOException\n             Version v = vStr == null ? Version.emptyVersion : Version.parseVersion(vStr);\n             boolean install = true;\n             for (Bundle b : bundleContext.getBundles()) {\n-                if (b.getSymbolicName().equals(sn)) {\n+                if (b.getSymbolicName() != null && b.getSymbolicName().equals(sn)) {\n                     vStr = (String) b.getHeaders().get(Constants.BUNDLE_VERSION);\n                     Version bv = vStr == null ? Version.emptyVersion : Version.parseVersion(vStr);\n                     if (v.equals(bv)) {",
                "raw_url": "https://github.com/apache/karaf/raw/05fbd3907eb580fdab1cc8e2738a421f59ab53e9/gshell/gshell-features/src/main/java/org/apache/servicemix/gshell/features/internal/FeaturesServiceImpl.java",
                "sha": "3fad0ac98c43f5ff776035450b5c3b331aa936e3",
                "status": "modified"
            }
        ],
        "message": "SMX4-72: NPE when doing 'features install'\n\ngit-svn-id: https://svn.apache.org/repos/asf/servicemix/smx4/kernel/trunk@679694 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/karaf/commit/ed06101aa6f2e0e394bbabc260f24c45dd7c2963",
        "repo": "karaf",
        "unit_tests": [
            "FeaturesServiceImplTest.java"
        ]
    },
    "karaf_0b6a673": {
        "bug_id": "karaf_0b6a673",
        "commit": "https://github.com/apache/karaf/commit/0b6a6736cb461f098e9d59f1986e25e2a480c460",
        "file": [
            {
                "additions": 8,
                "blob_url": "https://github.com/apache/karaf/blob/0b6a6736cb461f098e9d59f1986e25e2a480c460/client/src/main/java/org/apache/karaf/client/Main.java",
                "changes": 10,
                "contents_url": "https://api.github.com/repos/apache/karaf/contents/client/src/main/java/org/apache/karaf/client/Main.java?ref=0b6a6736cb461f098e9d59f1986e25e2a480c460",
                "deletions": 2,
                "filename": "client/src/main/java/org/apache/karaf/client/Main.java",
                "patch": "@@ -51,8 +51,6 @@\n import org.apache.sshd.client.channel.PtyCapableChannelSession;\n import org.apache.sshd.client.future.ConnectFuture;\n import org.apache.sshd.client.session.ClientSession;\n-import org.apache.sshd.common.FactoryManager;\n-import org.apache.sshd.common.PropertyResolverUtils;\n import org.apache.sshd.common.RuntimeSshException;\n import org.apache.sshd.common.channel.PtyMode;\n import org.apache.sshd.common.config.keys.FilePasswordProvider;\n@@ -178,8 +176,16 @@ else if (console != null) {\n             session.auth().verify();\n \n             int exitStatus = 0;\n+            String type = System.getProperty(TerminalBuilder.PROP_TYPE);\n+            if (type == null) {\n+                type = System.getenv(\"TERM\");\n+            }\n+            if (type == null) {\n+                type = Terminal.TYPE_DUMB;\n+            }\n             try (Terminal terminal = TerminalBuilder.builder()\n                         .nativeSignals(true)\n+                        .type(type)\n                         .signalHandler(Terminal.SignalHandler.SIG_IGN)\n                         .build()) {\n                 if (config.getCommand().length() > 0) {",
                "raw_url": "https://github.com/apache/karaf/raw/0b6a6736cb461f098e9d59f1986e25e2a480c460/client/src/main/java/org/apache/karaf/client/Main.java",
                "sha": "3e90b1a9f678e1e4b2168d557955aba822ac684b",
                "status": "modified"
            }
        ],
        "message": "[KARAF-5778] NPE in the ssh client if TERM is null",
        "parent": "https://github.com/apache/karaf/commit/c1af4ffcd53cda555056df792aedeccc5de1b880",
        "repo": "karaf",
        "unit_tests": [
            "MainTest.java"
        ]
    },
    "karaf_0c12184": {
        "bug_id": "karaf_0c12184",
        "commit": "https://github.com/apache/karaf/commit/0c1218406bf44d8501aaba531cb4437d474dc843",
        "file": [
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/karaf/blob/0c1218406bf44d8501aaba531cb4437d474dc843/profile/src/main/java/org/apache/karaf/profile/impl/Profiles.java",
                "changes": 3,
                "contents_url": "https://api.github.com/repos/apache/karaf/contents/profile/src/main/java/org/apache/karaf/profile/impl/Profiles.java?ref=0c1218406bf44d8501aaba531cb4437d474dc843",
                "deletions": 1,
                "filename": "profile/src/main/java/org/apache/karaf/profile/impl/Profiles.java",
                "patch": "@@ -52,7 +52,8 @@\n                 ProfileBuilder builder;\n                 @Override\n                 public FileVisitResult preVisitDirectory(Path dir, BasicFileAttributes attrs) throws IOException {\n-                    if (dir.getFileName().toString().endsWith(PROFILE_FOLDER_SUFFIX)) {\n+                    Path fileName = dir.getFileName();\n+                    if (fileName != null && fileName.toString().endsWith(PROFILE_FOLDER_SUFFIX)) {\n                         String profileId = root.relativize(dir).toString();\n                         profileId = profileId.replaceAll(root.getFileSystem().getSeparator(), \"-\");\n                         profileId = profileId.substring(0, profileId.length() - PROFILE_FOLDER_SUFFIX.length());",
                "raw_url": "https://github.com/apache/karaf/raw/0c1218406bf44d8501aaba531cb4437d474dc843/profile/src/main/java/org/apache/karaf/profile/impl/Profiles.java",
                "sha": "7f8d483cb1fe9f626678b0ba58438a6009bd604d",
                "status": "modified"
            }
        ],
        "message": "[KARAF-3404] Fix possible NPE",
        "parent": "https://github.com/apache/karaf/commit/db1143e8966acd535d039cd2b2dbd61ffe9e2092",
        "repo": "karaf",
        "unit_tests": [
            "ProfilesTest.java"
        ]
    },
    "karaf_1996fca": {
        "bug_id": "karaf_1996fca",
        "commit": "https://github.com/apache/karaf/commit/1996fca4587053dc4ef7b135e64ae3c62559aa6b",
        "file": [
            {
                "additions": 53,
                "blob_url": "https://github.com/apache/karaf/blob/1996fca4587053dc4ef7b135e64ae3c62559aa6b/features/core/src/main/java/org/apache/karaf/features/internal/region/SubsystemResolver.java",
                "changes": 100,
                "contents_url": "https://api.github.com/repos/apache/karaf/contents/features/core/src/main/java/org/apache/karaf/features/internal/region/SubsystemResolver.java?ref=1996fca4587053dc4ef7b135e64ae3c62559aa6b",
                "deletions": 47,
                "filename": "features/core/src/main/java/org/apache/karaf/features/internal/region/SubsystemResolver.java",
                "patch": "@@ -21,14 +21,7 @@\n import java.nio.file.Files;\n import java.nio.file.Paths;\n import java.nio.file.StandardOpenOption;\n-import java.util.ArrayList;\n-import java.util.Collection;\n-import java.util.Collections;\n-import java.util.HashMap;\n-import java.util.Iterator;\n-import java.util.List;\n-import java.util.Map;\n-import java.util.Set;\n+import java.util.*;\n \n import org.apache.felix.utils.collections.DictionaryAsMap;\n import org.apache.karaf.features.BundleInfo;\n@@ -172,7 +165,10 @@ public void prepare(\n     }\n \n     public Set<String> collectPrerequisites() throws Exception {\n-        return root.collectPrerequisites();\n+        if (root != null) {\n+            return root.collectPrerequisites();\n+        }\n+        return new HashSet<String>();\n     }\n \n     public Map<Resource, List<Wire>> resolve(\n@@ -279,15 +275,17 @@ private Object toJson(Resource resource) {\n     }\n \n     private void addBundleInfos(Subsystem subsystem) {\n-        String region = getFlatSubsystemsMap().get(subsystem.getName());\n-        Map<String, BundleInfo> bis = bundleInfos.get(region);\n-        if (bis == null) {\n-            bis = new HashMap<>();\n-            bundleInfos.put(region, bis);\n-        }\n-        bis.putAll(subsystem.getBundleInfos());\n-        for (Subsystem child : subsystem.getChildren()) {\n-            addBundleInfos(child);\n+        if (subsystem != null) {\n+            String region = getFlatSubsystemsMap().get(subsystem.getName());\n+            Map<String, BundleInfo> bis = bundleInfos.get(region);\n+            if (bis == null) {\n+                bis = new HashMap<>();\n+                bundleInfos.put(region, bis);\n+            }\n+            bis.putAll(subsystem.getBundleInfos());\n+            for (Subsystem child : subsystem.getChildren()) {\n+                addBundleInfos(child);\n+            }\n         }\n     }\n \n@@ -303,28 +301,30 @@ public RegionDigraph getFlatDigraph() throws BundleException, InvalidSyntaxExcep\n         if (flatDigraph == null) {\n             flatDigraph = new StandardRegionDigraph(null, null);\n             Map<String, String> flats = getFlatSubsystemsMap();\n-            for (Region r : digraph.getRegions()) {\n-                if (r.getName().equals(flats.get(r.getName()))) {\n-                    flatDigraph.createRegion(r.getName());\n+            if (digraph != null) {\n+                for (Region r : digraph.getRegions()) {\n+                    if (r.getName().equals(flats.get(r.getName()))) {\n+                        flatDigraph.createRegion(r.getName());\n+                    }\n                 }\n-            }\n-            for (Region r : digraph.getRegions()) {\n-                for (RegionDigraph.FilteredRegion fr : digraph.getEdges(r)) {\n-                    String rt = flats.get(r.getName());\n-                    String rh = flats.get(fr.getRegion().getName());\n-                    if (!rh.equals(rt)) {\n-                        Region tail = flatDigraph.getRegion(rt);\n-                        Region head = flatDigraph.getRegion(rh);\n-                        RegionFilterBuilder rfb = flatDigraph.createRegionFilterBuilder();\n-                        for (Map.Entry<String, Collection<String>> entry : fr.getFilter().getSharingPolicy().entrySet()) {\n-                            // Discard osgi.identity namespace\n-                            if (!IDENTITY_NAMESPACE.equals(entry.getKey())) {\n-                                for (String f : entry.getValue()) {\n-                                    rfb.allow(entry.getKey(), f);\n+                for (Region r : digraph.getRegions()) {\n+                    for (RegionDigraph.FilteredRegion fr : digraph.getEdges(r)) {\n+                        String rt = flats.get(r.getName());\n+                        String rh = flats.get(fr.getRegion().getName());\n+                        if (!rh.equals(rt)) {\n+                            Region tail = flatDigraph.getRegion(rt);\n+                            Region head = flatDigraph.getRegion(rh);\n+                            RegionFilterBuilder rfb = flatDigraph.createRegionFilterBuilder();\n+                            for (Map.Entry<String, Collection<String>> entry : fr.getFilter().getSharingPolicy().entrySet()) {\n+                                // Discard osgi.identity namespace\n+                                if (!IDENTITY_NAMESPACE.equals(entry.getKey())) {\n+                                    for (String f : entry.getValue()) {\n+                                        rfb.allow(entry.getKey(), f);\n+                                    }\n                                 }\n                             }\n+                            flatDigraph.connect(tail, rfb.build(), head);\n                         }\n-                        flatDigraph.connect(tail, rfb.build(), head);\n                     }\n                 }\n             }\n@@ -390,14 +390,16 @@ public RegionDigraph getFlatDigraph() throws BundleException, InvalidSyntaxExcep\n         Map<Resource, String> resources = new HashMap<>();\n         SimpleFilter sf = createFilter(IDENTITY_NAMESPACE, \"*\",\n                 CAPABILITY_TYPE_ATTRIBUTE, TYPE_SUBSYSTEM);\n-        for (Resource resource : wiring.keySet()) {\n-            if (findMatchingCapability(resourceFilter, resource.getCapabilities(null)) != null) {\n-                // Find the subsystem where this feature is installed\n-                Wire wire = findMatchingWire(sf, wiring.get(resource));\n-                if (wire != null) {\n-                    String region = (String) wire.getCapability().getAttributes().get(IDENTITY_NAMESPACE);\n-                    region = flats.get(region);\n-                    resources.put(resource, region);\n+        if (wiring != null) {\n+            for (Resource resource : wiring.keySet()) {\n+                if (findMatchingCapability(resourceFilter, resource.getCapabilities(null)) != null) {\n+                    // Find the subsystem where this feature is installed\n+                    Wire wire = findMatchingWire(sf, wiring.get(resource));\n+                    if (wire != null) {\n+                        String region = (String) wire.getCapability().getAttributes().get(IDENTITY_NAMESPACE);\n+                        region = flats.get(region);\n+                        resources.put(resource, region);\n+                    }\n                 }\n             }\n         }\n@@ -483,13 +485,17 @@ private void findSubsystemsToFlatten(Subsystem subsystem, Map<String, String> to\n         while (isFlat(nonFlat)) {\n             nonFlat = nonFlat.getParent();\n         }\n-        toFlatten.put(subsystem.getName(), nonFlat.getName());\n-        for (Subsystem child : subsystem.getChildren()) {\n-            findSubsystemsToFlatten(child, toFlatten);\n+        if (subsystem != null) {\n+            toFlatten.put(subsystem.getName(), nonFlat.getName());\n+            for (Subsystem child : subsystem.getChildren()) {\n+                findSubsystemsToFlatten(child, toFlatten);\n+            }\n         }\n     }\n \n     private boolean isFlat(Subsystem subsystem) {\n+        if (subsystem == null || subsystem.getFeature() == null)\n+            return false;\n         return subsystem.getFeature() != null && subsystem.getFeature().getScoping() == null;\n     }\n ",
                "raw_url": "https://github.com/apache/karaf/raw/1996fca4587053dc4ef7b135e64ae3c62559aa6b/features/core/src/main/java/org/apache/karaf/features/internal/region/SubsystemResolver.java",
                "sha": "d162e9e43a92aaf4a79ee1172001e5a4684c9cf0",
                "status": "modified"
            },
            {
                "additions": 22,
                "blob_url": "https://github.com/apache/karaf/blob/1996fca4587053dc4ef7b135e64ae3c62559aa6b/features/core/src/main/java/org/apache/karaf/features/internal/service/Deployer.java",
                "changes": 38,
                "contents_url": "https://api.github.com/repos/apache/karaf/contents/features/core/src/main/java/org/apache/karaf/features/internal/service/Deployer.java?ref=1996fca4587053dc4ef7b135e64ae3c62559aa6b",
                "deletions": 16,
                "filename": "features/core/src/main/java/org/apache/karaf/features/internal/service/Deployer.java",
                "patch": "@@ -345,20 +345,24 @@ public void deploy(DeploymentState dstate, DeploymentRequest request) throws Exc\n             Set<? extends Resource> unmanaged = apply(flatten(unmanagedBundles), adapt(BundleRevision.class));\n             Set<Resource> requested = new HashSet<>();\n             // Gather bundles required by a feature\n-            for (List<Wire> wires : resolver.getWiring().values()) {\n-                for (Wire wire : wires) {\n-                    if (features.contains(wire.getRequirer()) && unmanaged.contains(wire.getProvider())) {\n-                        requested.add(wire.getProvider());\n+            if (resolver != null && resolver.getWiring() != null) {\n+                for (List<Wire> wires : resolver.getWiring().values()) {\n+                    for (Wire wire : wires) {\n+                        if (features.contains(wire.getRequirer()) && unmanaged.contains(wire.getProvider())) {\n+                            requested.add(wire.getProvider());\n+                        }\n                     }\n                 }\n             }\n             // Now, we know which bundles are completely unmanaged\n             unmanaged.removeAll(requested);\n             // Check if bundles have wires from really unmanaged bundles\n-            for (List<Wire> wires : resolver.getWiring().values()) {\n-                for (Wire wire : wires) {\n-                    if (requested.contains(wire.getProvider()) && unmanaged.contains(wire.getRequirer())) {\n-                        requested.remove(wire.getProvider());\n+            if (resolver != null && resolver.getWiring() != null) {\n+                for (List<Wire> wires : resolver.getWiring().values()) {\n+                    for (Wire wire : wires) {\n+                        if (requested.contains(wire.getProvider()) && unmanaged.contains(wire.getRequirer())) {\n+                            requested.remove(wire.getProvider());\n+                        }\n                     }\n                 }\n             }\n@@ -919,14 +923,16 @@ private void computeBundlesToRefresh(Map<Bundle, String> toRefresh, Collection<B\n         for (Bundle bundle : bundles) {\n             newFragments.put(bundle, new HashSet<Resource>());\n         }\n-        for (Resource res : resolution.keySet()) {\n-            for (Wire wire : resolution.get(res)) {\n-                if (HOST_NAMESPACE.equals(wire.getCapability().getNamespace())) {\n-                    Bundle bundle = resources.get(wire.getProvider());\n-                    if (bundle != null) {\n-                        Bundle b = resources.get(wire.getRequirer());\n-                        Resource r = b != null ? b.adapt(BundleRevision.class) : wire.getRequirer();\n-                        newFragments.get(bundle).add(r);\n+        if (resolution != null) {\n+            for (Resource res : resolution.keySet()) {\n+                for (Wire wire : resolution.get(res)) {\n+                    if (HOST_NAMESPACE.equals(wire.getCapability().getNamespace())) {\n+                        Bundle bundle = resources.get(wire.getProvider());\n+                        if (bundle != null) {\n+                            Bundle b = resources.get(wire.getRequirer());\n+                            Resource r = b != null ? b.adapt(BundleRevision.class) : wire.getRequirer();\n+                            newFragments.get(bundle).add(r);\n+                        }\n                     }\n                 }\n             }",
                "raw_url": "https://github.com/apache/karaf/raw/1996fca4587053dc4ef7b135e64ae3c62559aa6b/features/core/src/main/java/org/apache/karaf/features/internal/service/Deployer.java",
                "sha": "1414b70630a6682c930fc920c9a5841d7d6f1c85",
                "status": "modified"
            }
        ],
        "message": "KARAF-4254 - Prevent NPE in deployer and subsystem resolver",
        "parent": "https://github.com/apache/karaf/commit/2831b0f873aeefa6444a791b1b832a4130bff090",
        "repo": "karaf",
        "unit_tests": [
            "DeployerTest.java"
        ]
    },
    "karaf_2b501cf": {
        "bug_id": "karaf_2b501cf",
        "commit": "https://github.com/apache/karaf/commit/2b501cf411006983759fcc392f965fd719c3d8c3",
        "file": [
            {
                "additions": 6,
                "blob_url": "https://github.com/apache/karaf/blob/2b501cf411006983759fcc392f965fd719c3d8c3/main/src/main/java/org/apache/karaf/main/BootstrapLogManager.java",
                "changes": 6,
                "contents_url": "https://api.github.com/repos/apache/karaf/contents/main/src/main/java/org/apache/karaf/main/BootstrapLogManager.java?ref=2b501cf411006983759fcc392f965fd719c3d8c3",
                "deletions": 0,
                "filename": "main/src/main/java/org/apache/karaf/main/BootstrapLogManager.java",
                "patch": "@@ -65,6 +65,12 @@ public static Handler getDefaultHandler () {\n                     }\n                 }\n             }\n+\n+            if (props.getProperty(\"log4j.appender.out.file\") == null) {\n+                // manage if the log4j.appender.out.file property is not present in\n+                // the etc/org.ops4j.pax.logging.cfg file\n+                props.setProperty(\"log4j.appender.out.file\", \"${karaf.data}/log/karaf.log\");\n+            }\n             filename = Main.substVars(props.getProperty(\"log4j.appender.out.file\"),\"log4j.appender.out.file\", null, null);\n             log = new File(filename);\n         }",
                "raw_url": "https://github.com/apache/karaf/raw/2b501cf411006983759fcc392f965fd719c3d8c3/main/src/main/java/org/apache/karaf/main/BootstrapLogManager.java",
                "sha": "964bdaad08c61721a1a40c8b58a356f0c714373f",
                "status": "modified"
            }
        ],
        "message": "[KARAF-625] Missing property log4j.appender.out.file in the file etc/org.ops4j.pax.logging.cfg cause a NPE.\n\ngit-svn-id: https://svn.apache.org/repos/asf/karaf/trunk@1101562 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/karaf/commit/dd7879adaa30b2f3797e579911e50ebc84f5afbc",
        "repo": "karaf",
        "unit_tests": [
            "BootstrapLogManagerTest.java"
        ]
    },
    "karaf_2d04de2": {
        "bug_id": "karaf_2d04de2",
        "commit": "https://github.com/apache/karaf/commit/2d04de2a7b06d6f39ecb670f217ad0606f884139",
        "file": [
            {
                "additions": 4,
                "blob_url": "https://github.com/apache/karaf/blob/2d04de2a7b06d6f39ecb670f217ad0606f884139/service/guard/src/main/java/org/apache/karaf/service/guard/tools/ACLConfigurationParser.java",
                "changes": 5,
                "contents_url": "https://api.github.com/repos/apache/karaf/contents/service/guard/src/main/java/org/apache/karaf/service/guard/tools/ACLConfigurationParser.java?ref=2d04de2a7b06d6f39ecb670f217ad0606f884139",
                "deletions": 1,
                "filename": "service/guard/src/main/java/org/apache/karaf/service/guard/tools/ACLConfigurationParser.java",
                "patch": "@@ -202,7 +202,8 @@ private static Object getExactArgSignature(String methodName, String[] signature\n             else\n                 sb.append(',');\n             sb.append('\"');\n-            sb.append(param.toString().trim());\n+            if (param != null)\n+                sb.append(param.toString().trim());\n             sb.append('\"');\n         }\n         sb.append(']');\n@@ -295,6 +296,8 @@ private static boolean allParamsMatch(List<String> regexArgs, Object[] params) {\n             return false;\n \n         for (int i = 0; i < regexArgs.size(); i++) {\n+            if (params[i] == null)\n+                return false;\n             if (!params[i].toString().trim().matches(regexArgs.get(i))) {\n                 return false;\n             }",
                "raw_url": "https://github.com/apache/karaf/raw/2d04de2a7b06d6f39ecb670f217ad0606f884139/service/guard/src/main/java/org/apache/karaf/service/guard/tools/ACLConfigurationParser.java",
                "sha": "5a5af3eb0595d17b8b0290cca2671d4fe8b47d13",
                "status": "modified"
            }
        ],
        "message": "Prevent NPE in Guard ACLConfigurationParser when an argument is null\n\ngit-svn-id: https://svn.apache.org/repos/asf/karaf/trunk@1546593 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/karaf/commit/f680f9c720892f26e2308d197fe6efeec24e5063",
        "repo": "karaf",
        "unit_tests": [
            "ACLConfigurationParserTest.java"
        ]
    },
    "karaf_4eed514": {
        "bug_id": "karaf_4eed514",
        "commit": "https://github.com/apache/karaf/commit/4eed5140dd6af7f4ab857a8aa54339e9621a4d9f",
        "file": [
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/karaf/blob/4eed5140dd6af7f4ab857a8aa54339e9621a4d9f/features/core/src/main/java/org/apache/karaf/features/internal/service/Deployer.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/karaf/contents/features/core/src/main/java/org/apache/karaf/features/internal/service/Deployer.java?ref=4eed5140dd6af7f4ab857a8aa54339e9621a4d9f",
                "deletions": 1,
                "filename": "features/core/src/main/java/org/apache/karaf/features/internal/service/Deployer.java",
                "patch": "@@ -961,7 +961,7 @@ private void computeBundlesToRefresh(Map<Bundle, String> toRefresh, Collection<B\n                     continue;\n                 }\n                 // Ignore bundles that won't be wired\n-                List<Wire> newWires = resolution.get(resource);\n+                List<Wire> newWires = resolution != null ? resolution.get(resource) : null;\n                 if (newWires == null) {\n                     continue;\n                 }",
                "raw_url": "https://github.com/apache/karaf/raw/4eed5140dd6af7f4ab857a8aa54339e9621a4d9f/features/core/src/main/java/org/apache/karaf/features/internal/service/Deployer.java",
                "sha": "b7b7af6b27b8b819e63e99a3b8c6caaef7eedf3e",
                "status": "modified"
            }
        ],
        "message": "Fix possible NPE",
        "parent": "https://github.com/apache/karaf/commit/01ffa23d4ea446e5985bb4287eb87af3785146ef",
        "repo": "karaf",
        "unit_tests": [
            "DeployerTest.java"
        ]
    },
    "karaf_58f6fb7": {
        "bug_id": "karaf_58f6fb7",
        "commit": "https://github.com/apache/karaf/commit/58f6fb73dd261e2fe1e4880ceb7fd571673ac1fb",
        "file": [
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/karaf/blob/58f6fb73dd261e2fe1e4880ceb7fd571673ac1fb/tooling/karaf-maven-plugin/src/main/java/org/apache/karaf/tooling/features/GenerateDescriptorMojo.java",
                "changes": 1,
                "contents_url": "https://api.github.com/repos/apache/karaf/contents/tooling/karaf-maven-plugin/src/main/java/org/apache/karaf/tooling/features/GenerateDescriptorMojo.java?ref=58f6fb73dd261e2fe1e4880ceb7fd571673ac1fb",
                "deletions": 0,
                "filename": "tooling/karaf-maven-plugin/src/main/java/org/apache/karaf/tooling/features/GenerateDescriptorMojo.java",
                "patch": "@@ -386,6 +386,7 @@ private Manifest getManifest(File file) throws IOException {\n             is = new BufferedInputStream(new FileInputStream(file));\n         } catch (Exception e) {\n             getLogger().warn(\"Error while opening artifact\", e);\n+            return null;\n         }\n \n         try {",
                "raw_url": "https://github.com/apache/karaf/raw/58f6fb73dd261e2fe1e4880ceb7fd571673ac1fb/tooling/karaf-maven-plugin/src/main/java/org/apache/karaf/tooling/features/GenerateDescriptorMojo.java",
                "sha": "2aa483bf0bf0bd02d373b592088a88cd6a04efcb",
                "status": "modified"
            }
        ],
        "message": "Fixing NPE in build as is may have been null below\n\ngit-svn-id: https://svn.apache.org/repos/asf/karaf/trunk@1341020 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/karaf/commit/74b9fddfbbf7bc17240ace93c902089dd3885428",
        "repo": "karaf",
        "unit_tests": [
            "GenerateDescriptorMojoTest.java"
        ]
    },
    "karaf_5ab0681": {
        "bug_id": "karaf_5ab0681",
        "commit": "https://github.com/apache/karaf/commit/5ab0681619c287688885ed7bb06ba78690cc981a",
        "file": [
            {
                "additions": 6,
                "blob_url": "https://github.com/apache/karaf/blob/5ab0681619c287688885ed7bb06ba78690cc981a/features/core/src/main/java/org/apache/karaf/features/internal/osgi/Activator.java",
                "changes": 8,
                "contents_url": "https://api.github.com/repos/apache/karaf/contents/features/core/src/main/java/org/apache/karaf/features/internal/osgi/Activator.java?ref=5ab0681619c287688885ed7bb06ba78690cc981a",
                "deletions": 2,
                "filename": "features/core/src/main/java/org/apache/karaf/features/internal/osgi/Activator.java",
                "patch": "@@ -303,8 +303,12 @@ public void modifiedService(ServiceReference<FeaturesListener> reference, Featur\n     \n                     @Override\n                     public void removedService(ServiceReference<FeaturesListener> reference, FeaturesListener service) {\n-                        featuresService.unregisterListener(service);\n-                        bundleContext.ungetService(reference);\n+                        if (featuresService != null && service != null) {\n+                            featuresService.unregisterListener(service);\n+                        }\n+                        if (bundleContext != null && reference != null) {\n+                            bundleContext.ungetService(reference);\n+                        }\n                     }\n                 }\n         );",
                "raw_url": "https://github.com/apache/karaf/raw/5ab0681619c287688885ed7bb06ba78690cc981a/features/core/src/main/java/org/apache/karaf/features/internal/osgi/Activator.java",
                "sha": "28226e6d359257472af188d24f562a4408c58c67",
                "status": "modified"
            }
        ],
        "message": "Merge pull request #877 from jbonofre/KARAF-6329\n\n[KARAF-6329] Prevent NPE on shutdown in features service",
        "parent": "https://github.com/apache/karaf/commit/a0629fac921754e0254eee3305bd85a6fa7d2925",
        "repo": "karaf",
        "unit_tests": [
            "ActivatorTest.java"
        ]
    },
    "karaf_5dcbf17": {
        "bug_id": "karaf_5dcbf17",
        "commit": "https://github.com/apache/karaf/commit/5dcbf1779c7060cbd75b69289a79260fe09503eb",
        "file": [
            {
                "additions": 5,
                "blob_url": "https://github.com/apache/karaf/blob/5dcbf1779c7060cbd75b69289a79260fe09503eb/jaas/modules/src/main/java/org/apache/karaf/jaas/modules/syncope/SyncopeLoginModule.java",
                "changes": 8,
                "contents_url": "https://api.github.com/repos/apache/karaf/contents/jaas/modules/src/main/java/org/apache/karaf/jaas/modules/syncope/SyncopeLoginModule.java?ref=5dcbf1779c7060cbd75b69289a79260fe09503eb",
                "deletions": 3,
                "filename": "jaas/modules/src/main/java/org/apache/karaf/jaas/modules/syncope/SyncopeLoginModule.java",
                "patch": "@@ -84,7 +84,9 @@ public boolean login() throws LoginException {\n         Credentials creds = new UsernamePasswordCredentials(user, password);\n         client.getCredentialsProvider().setCredentials(AuthScope.ANY, creds);\n         HttpGet get = new HttpGet(address + \"/users/self\");\n-        if (version.equals(\"2.x\") || version.equals(\"2\")) {\n+\n+        boolean version2 = version != null && (version.equals(\"2.x\") || version.equals(\"2\"));\n+        if (version2) {\n             get.setHeader(\"Content-Type\", \"application/json\");\n         } else {\n             get.setHeader(\"Content-Type\", \"application/xml\");\n@@ -102,7 +104,7 @@ public boolean login() throws LoginException {\n             principals.add(new UserPrincipal(user));\n             LOGGER.debug(\"Retrieving user {} roles\", user);\n             String responseSt = EntityUtils.toString(response.getEntity());\n-            if (version.equals(\"2.x\") || version.equals(\"2\")) {\n+            if (version2) {\n                 roles = extractingRolesSyncope2(responseSt);\n             } else {\n                 roles = extractingRolesSyncope1(responseSt);\n@@ -136,7 +138,7 @@ public boolean login() throws LoginException {\n                 response = response.substring(index + \"<memberships>\".length());\n                 index = response.indexOf(\"</memberships>\");\n                 response = response.substring(0, index);\n-    \n+\n                 // looking for the roleName elements\n                 index = response.indexOf(\"<roleName>\");\n                 while (index != -1) {",
                "raw_url": "https://github.com/apache/karaf/raw/5dcbf1779c7060cbd75b69289a79260fe09503eb/jaas/modules/src/main/java/org/apache/karaf/jaas/modules/syncope/SyncopeLoginModule.java",
                "sha": "0e4ae973333ee90acda938f5c6b33faf69fd1d28",
                "status": "modified"
            }
        ],
        "message": "Merge pull request #398 from coheigea/KARAF-5496\n\nKARAF-5496 - NPEs in SyncopeLoginModule if \"version\" is not specified",
        "parent": "https://github.com/apache/karaf/commit/a23ee51742dbefab22810d0803ffd1aeff2b8df8",
        "repo": "karaf",
        "unit_tests": [
            "SyncopeLoginModuleTest.java"
        ]
    },
    "karaf_63bce35": {
        "bug_id": "karaf_63bce35",
        "commit": "https://github.com/apache/karaf/commit/63bce35cda6bf662e779db63fe8e418ee527a037",
        "file": [
            {
                "additions": 4,
                "blob_url": "https://github.com/apache/karaf/blob/63bce35cda6bf662e779db63fe8e418ee527a037/main/src/main/java/org/apache/karaf/main/Main.java",
                "changes": 6,
                "contents_url": "https://api.github.com/repos/apache/karaf/contents/main/src/main/java/org/apache/karaf/main/Main.java?ref=63bce35cda6bf662e779db63fe8e418ee527a037",
                "deletions": 2,
                "filename": "main/src/main/java/org/apache/karaf/main/Main.java",
                "patch": "@@ -469,8 +469,10 @@ public static void main(String[] args) throws Exception {\n \t\t\ttry {\n \t\t\t\tmanager = main.launch();\n \t\t\t} catch (Throwable ex) {\n-\t\t\t\tmain.lifecycleManager.destroyKaraf();\n-\t\t\t\texitCode = -1;\n+                if (main.lifecycleManager != null) {\n+                    main.lifecycleManager.destroyKaraf();\n+                }\n+                exitCode = -1;\n \t\t\t\tSystem.err.println(\"Could not create framework: \" + ex);\n \t\t\t\tex.printStackTrace();\n \t\t\t}",
                "raw_url": "https://github.com/apache/karaf/raw/63bce35cda6bf662e779db63fe8e418ee527a037/main/src/main/java/org/apache/karaf/main/Main.java",
                "sha": "1f227adbfa50160e630c0a39b8ddfb5a53307ced",
                "status": "modified"
            }
        ],
        "message": "try to avoid an npe for early start failures\n\ngit-svn-id: https://svn.apache.org/repos/asf/karaf/trunk@1173914 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/karaf/commit/397a0c3557041da41af358d3a33c9e582d24ac44",
        "repo": "karaf",
        "unit_tests": [
            "MainTest.java"
        ]
    },
    "karaf_735580d": {
        "bug_id": "karaf_735580d",
        "commit": "https://github.com/apache/karaf/commit/735580d25a83e350bd40de63f00d567c9b40a298",
        "file": [
            {
                "additions": 6,
                "blob_url": "https://github.com/apache/karaf/blob/735580d25a83e350bd40de63f00d567c9b40a298/features/core/src/main/java/org/apache/karaf/features/internal/FeaturesServiceImpl.java",
                "changes": 7,
                "contents_url": "https://api.github.com/repos/apache/karaf/contents/features/core/src/main/java/org/apache/karaf/features/internal/FeaturesServiceImpl.java?ref=735580d25a83e350bd40de63f00d567c9b40a298",
                "deletions": 1,
                "filename": "features/core/src/main/java/org/apache/karaf/features/internal/FeaturesServiceImpl.java",
                "patch": "@@ -650,7 +650,12 @@ public void uninstallFeature(String name, String version) throws Exception {\n \n         //Also remove bundles installed as conditionals\n         for (Conditional conditional : feature.getConditional()) {\n-            bundles.addAll(installed.remove(conditional.asFeature(feature.getName(),feature.getVersion())));\n+            Feature conditionalFeature = conditional.asFeature(feature.getName(),feature.getVersion());\n+            if (installed.containsKey(conditionalFeature)) {\n+            \tbundles.addAll(installed.remove(conditionalFeature));\n+            } else {\n+            \tLOGGER.info(\"Conditional feature {}, hasn't been installed!\");\n+            }\n         }\n \n         for (Set<Long> b : installed.values()) {",
                "raw_url": "https://github.com/apache/karaf/raw/735580d25a83e350bd40de63f00d567c9b40a298/features/core/src/main/java/org/apache/karaf/features/internal/FeaturesServiceImpl.java",
                "sha": "1412e4b4c370fa9d3e54070b11fc0b6274b84103",
                "status": "modified"
            }
        ],
        "message": "test fixes: checked for NPE ... \n\ngit-svn-id: https://svn.apache.org/repos/asf/karaf/trunk@1496022 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/karaf/commit/595de92418350e3a2e6cc1e5ede8cb7c682c3759",
        "repo": "karaf",
        "unit_tests": [
            "FeaturesServiceImplTest.java"
        ]
    },
    "karaf_915894b": {
        "bug_id": "karaf_915894b",
        "commit": "https://github.com/apache/karaf/commit/915894b5d10f2cd3ca14d537291dc9365003d6a1",
        "file": [
            {
                "additions": 5,
                "blob_url": "https://github.com/apache/karaf/blob/915894b5d10f2cd3ca14d537291dc9365003d6a1/jaas/modules/src/main/java/org/apache/karaf/jaas/modules/syncope/SyncopeLoginModule.java",
                "changes": 8,
                "contents_url": "https://api.github.com/repos/apache/karaf/contents/jaas/modules/src/main/java/org/apache/karaf/jaas/modules/syncope/SyncopeLoginModule.java?ref=915894b5d10f2cd3ca14d537291dc9365003d6a1",
                "deletions": 3,
                "filename": "jaas/modules/src/main/java/org/apache/karaf/jaas/modules/syncope/SyncopeLoginModule.java",
                "patch": "@@ -84,7 +84,9 @@ public boolean login() throws LoginException {\n         Credentials creds = new UsernamePasswordCredentials(user, password);\n         client.getCredentialsProvider().setCredentials(AuthScope.ANY, creds);\n         HttpGet get = new HttpGet(address + \"/users/self\");\n-        if (version.equals(\"2.x\") || version.equals(\"2\")) {\n+\n+        boolean version2 = version != null && (version.equals(\"2.x\") || version.equals(\"2\"));\n+        if (version2) {\n             get.setHeader(\"Content-Type\", \"application/json\");\n         } else {\n             get.setHeader(\"Content-Type\", \"application/xml\");\n@@ -102,7 +104,7 @@ public boolean login() throws LoginException {\n             principals.add(new UserPrincipal(user));\n             LOGGER.debug(\"Retrieving user {} roles\", user);\n             String responseSt = EntityUtils.toString(response.getEntity());\n-            if (version.equals(\"2.x\") || version.equals(\"2\")) {\n+            if (version2) {\n                 roles = extractingRolesSyncope2(responseSt);\n             } else {\n                 roles = extractingRolesSyncope1(responseSt);\n@@ -136,7 +138,7 @@ public boolean login() throws LoginException {\n                 response = response.substring(index + \"<memberships>\".length());\n                 index = response.indexOf(\"</memberships>\");\n                 response = response.substring(0, index);\n-    \n+\n                 // looking for the roleName elements\n                 index = response.indexOf(\"<roleName>\");\n                 while (index != -1) {",
                "raw_url": "https://github.com/apache/karaf/raw/915894b5d10f2cd3ca14d537291dc9365003d6a1/jaas/modules/src/main/java/org/apache/karaf/jaas/modules/syncope/SyncopeLoginModule.java",
                "sha": "0e4ae973333ee90acda938f5c6b33faf69fd1d28",
                "status": "modified"
            }
        ],
        "message": "KARAF-5496 - NPEs in SyncopeLoginModule if \"version\" is not specified",
        "parent": "https://github.com/apache/karaf/commit/75f345cbf990134f9dad551591380e76d887bb36",
        "repo": "karaf",
        "unit_tests": [
            "SyncopeLoginModuleTest.java"
        ]
    },
    "karaf_9b4a050": {
        "bug_id": "karaf_9b4a050",
        "commit": "https://github.com/apache/karaf/commit/9b4a050ec78869f4e690c81d06a4b129ce3defca",
        "file": [
            {
                "additions": 4,
                "blob_url": "https://github.com/apache/karaf/blob/9b4a050ec78869f4e690c81d06a4b129ce3defca/service/core/src/main/java/org/apache/karaf/service/command/ListServices.java",
                "changes": 7,
                "contents_url": "https://api.github.com/repos/apache/karaf/contents/service/core/src/main/java/org/apache/karaf/service/command/ListServices.java?ref=9b4a050ec78869f4e690c81d06a4b129ce3defca",
                "deletions": 3,
                "filename": "service/core/src/main/java/org/apache/karaf/service/command/ListServices.java",
                "patch": "@@ -122,9 +122,10 @@ private void printServiceRef(ServiceReference<?> serviceRef) {\n         String bundleName = ShellUtil.getBundleName(serviceRef.getBundle());\n         System.out.println(\"Provided by : \");\n         System.out.println(\" \" + bundleName);\n-        if (serviceRef.getUsingBundles() != null) {\n-        System.out.println(\"Used by: \");\n-            for (Bundle bundle : serviceRef.getUsingBundles()) {\n+        Bundle[] usingBundles = serviceRef.getUsingBundles();\n+        if (usingBundles != null) {\n+            System.out.println(\"Used by: \");\n+            for (Bundle bundle : usingBundles) {\n                 System.out.println(\" \" + ShellUtil.getBundleName(bundle));\n             }\n         }",
                "raw_url": "https://github.com/apache/karaf/raw/9b4a050ec78869f4e690c81d06a4b129ce3defca/service/core/src/main/java/org/apache/karaf/service/command/ListServices.java",
                "sha": "aed352ef1ef5be9d666da6ed34d160471856ce53",
                "status": "modified"
            }
        ],
        "message": "Fix possible NPE",
        "parent": "https://github.com/apache/karaf/commit/981239128f69f31dbd89cb6ddabf8a416d1606e1",
        "repo": "karaf",
        "unit_tests": [
            "ListServicesTest.java"
        ]
    },
    "karaf_9ebb25a": {
        "bug_id": "karaf_9ebb25a",
        "commit": "https://github.com/apache/karaf/commit/9ebb25a9d7578d7ee278f26c4fddd851c669a651",
        "file": [
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/karaf/blob/9ebb25a9d7578d7ee278f26c4fddd851c669a651/features/core/src/main/java/org/apache/karaf/features/internal/service/Deployer.java",
                "changes": 4,
                "contents_url": "https://api.github.com/repos/apache/karaf/contents/features/core/src/main/java/org/apache/karaf/features/internal/service/Deployer.java?ref=9ebb25a9d7578d7ee278f26c4fddd851c669a651",
                "deletions": 2,
                "filename": "features/core/src/main/java/org/apache/karaf/features/internal/service/Deployer.java",
                "patch": "@@ -727,8 +727,8 @@ public void deploy(DeploymentState dstate, DeploymentRequest request) throws Exc\n                             && isUpdateable(resource) && !deployment.bundleChecksums.containsKey(bundle.getBundleId())) {\n                         deployment.bundleChecksums.put(bundle.getBundleId(), crc);\n                     }\n-                    int startLevel = startLevels.get(resource);\n-                    if (startLevel != dstate.initialBundleStartLevel) {\n+                    Integer startLevel = startLevels.get(resource);\n+                    if (startLevel != null && startLevel != dstate.initialBundleStartLevel) {\n                         callback.setBundleStartLevel(bundle, startLevel);\n                     }\n                     FeatureState reqState = states.get(resource);",
                "raw_url": "https://github.com/apache/karaf/raw/9ebb25a9d7578d7ee278f26c4fddd851c669a651/features/core/src/main/java/org/apache/karaf/features/internal/service/Deployer.java",
                "sha": "aded8af4acb0ccd59b90b9649bbbd64ac68e6989",
                "status": "modified"
            }
        ],
        "message": "Avoid NPE",
        "parent": "https://github.com/apache/karaf/commit/210af29312197178a44c03ea1b439ce63a1c83fa",
        "repo": "karaf",
        "unit_tests": [
            "DeployerTest.java"
        ]
    },
    "karaf_a8562f0": {
        "bug_id": "karaf_a8562f0",
        "commit": "https://github.com/apache/karaf/commit/a8562f09711da32f0094d4edaf77377c16277118",
        "file": [
            {
                "additions": 3,
                "blob_url": "https://github.com/apache/karaf/blob/a8562f09711da32f0094d4edaf77377c16277118/features/core/src/main/java/org/apache/karaf/features/internal/FeaturesServiceImpl.java",
                "changes": 3,
                "contents_url": "https://api.github.com/repos/apache/karaf/contents/features/core/src/main/java/org/apache/karaf/features/internal/FeaturesServiceImpl.java?ref=a8562f09711da32f0094d4edaf77377c16277118",
                "deletions": 0,
                "filename": "features/core/src/main/java/org/apache/karaf/features/internal/FeaturesServiceImpl.java",
                "patch": "@@ -557,6 +557,9 @@ protected Bundle installBundleIfNeeded(InstallationState state, BundleInfo bundl\n             is.mark(256 * 1024);\n             JarInputStream jar = new JarInputStream(is);\n             Manifest m = jar.getManifest();\n+            if(m == null) {\n+                throw new BundleException(\"Manifest not present in the first entry of the zip\");\n+            }\n             String sn = m.getMainAttributes().getValue(Constants.BUNDLE_SYMBOLICNAME);\n             String vStr = m.getMainAttributes().getValue(Constants.BUNDLE_VERSION);\n             Version v = vStr == null ? Version.emptyVersion : Version.parseVersion(vStr);",
                "raw_url": "https://github.com/apache/karaf/raw/a8562f09711da32f0094d4edaf77377c16277118/features/core/src/main/java/org/apache/karaf/features/internal/FeaturesServiceImpl.java",
                "sha": "8e971a894b421d1f7f1385408310d4a562d42b6e",
                "status": "modified"
            }
        ],
        "message": "KARAF-133: NPE when installing a bundle with a MANIFEST.MF not in the first entry of the zip\nPatch provided by Ioannis Canellos\n\ngit-svn-id: https://svn.apache.org/repos/asf/karaf/trunk@985818 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/karaf/commit/0605a289bc98a0d1dbde2b9b98052c4c23a4d3bc",
        "repo": "karaf",
        "unit_tests": [
            "FeaturesServiceImplTest.java"
        ]
    },
    "karaf_ab4c9e8": {
        "bug_id": "karaf_ab4c9e8",
        "commit": "https://github.com/apache/karaf/commit/ab4c9e857c5b5a0938622efc6a457b145644bfe8",
        "file": [
            {
                "additions": 3,
                "blob_url": "https://github.com/apache/karaf/blob/ab4c9e857c5b5a0938622efc6a457b145644bfe8/http/src/main/java/org/apache/karaf/http/core/internal/osgi/Activator.java",
                "changes": 4,
                "contents_url": "https://api.github.com/repos/apache/karaf/contents/http/src/main/java/org/apache/karaf/http/core/internal/osgi/Activator.java?ref=ab4c9e857c5b5a0938622efc6a457b145644bfe8",
                "deletions": 1,
                "filename": "http/src/main/java/org/apache/karaf/http/core/internal/osgi/Activator.java",
                "patch": "@@ -98,6 +98,8 @@ protected void doStop() {\n \n     @Override\n     public void updated(Dictionary<String, ?> properties) {\n-        proxyService.initProxies();\n+        if (proxyService != null) {\n+            proxyService.initProxies();\n+        }\n     }\n }",
                "raw_url": "https://github.com/apache/karaf/raw/ab4c9e857c5b5a0938622efc6a457b145644bfe8/http/src/main/java/org/apache/karaf/http/core/internal/osgi/Activator.java",
                "sha": "6be368ba05ff7e27488d72bfefcc3c26d6599f48",
                "status": "modified"
            }
        ],
        "message": "add NPE guard for proxyService",
        "parent": "https://github.com/apache/karaf/commit/cc06aeb296a1866727692280a6907ef563ce8e42",
        "repo": "karaf",
        "unit_tests": [
            "ActivatorTest.java"
        ]
    },
    "karaf_b220722": {
        "bug_id": "karaf_b220722",
        "commit": "https://github.com/apache/karaf/commit/b220722c3652bf02ca00150d0decb2509b83adc0",
        "file": [
            {
                "additions": 3,
                "blob_url": "https://github.com/apache/karaf/blob/b220722c3652bf02ca00150d0decb2509b83adc0/jaas/modules/src/main/java/org/apache/karaf/jaas/modules/properties/PropertiesLoginModule.java",
                "changes": 5,
                "contents_url": "https://api.github.com/repos/apache/karaf/contents/jaas/modules/src/main/java/org/apache/karaf/jaas/modules/properties/PropertiesLoginModule.java?ref=b220722c3652bf02ca00150d0decb2509b83adc0",
                "deletions": 2,
                "filename": "jaas/modules/src/main/java/org/apache/karaf/jaas/modules/properties/PropertiesLoginModule.java",
                "patch": "@@ -59,9 +59,10 @@ public void initialize(Subject sub, CallbackHandler handler, Map sharedState, Ma\n             LOGGER.debug(\"Initialized debug={} usersFile={}\", debug, usersFile);\n         }\n        \n-        if (propertiesInstaller == null || !usersFile.equals(propertiesInstaller.getUsersFileName()) ) {\n+        if (propertiesInstaller == null \n+            || (usersFile != null && !usersFile.equals(propertiesInstaller.getUsersFileName())) ) {\n        \n-            LOG.debug(\"Register PropertiesInstaller service\");\n+            LOGGER.debug(\"Register PropertiesInstaller service\");\n             \n             propertiesInstaller = new PropertiesInstaller(this, usersFile);\n             if (this.bundleContext != null) {",
                "raw_url": "https://github.com/apache/karaf/raw/b220722c3652bf02ca00150d0decb2509b83adc0/jaas/modules/src/main/java/org/apache/karaf/jaas/modules/properties/PropertiesLoginModule.java",
                "sha": "c11d54a473f211ce8fc6b8de7f7feb5bf4c44e37",
                "status": "modified"
            }
        ],
        "message": "add a NPE checker",
        "parent": "https://github.com/apache/karaf/commit/f74a1dcdcf28f0615ab28519716b844c20b84edc",
        "repo": "karaf",
        "unit_tests": [
            "PropertiesLoginModuleTest.java"
        ]
    },
    "karaf_b867058": {
        "bug_id": "karaf_b867058",
        "commit": "https://github.com/apache/karaf/commit/b867058ed1b875778382b4fb241a24efb5158bd5",
        "file": [
            {
                "additions": 3,
                "blob_url": "https://github.com/apache/karaf/blob/b867058ed1b875778382b4fb241a24efb5158bd5/config/src/main/java/org/apache/karaf/config/command/EditCommand.java",
                "changes": 3,
                "contents_url": "https://api.github.com/repos/apache/karaf/contents/config/src/main/java/org/apache/karaf/config/command/EditCommand.java?ref=b867058ed1b875778382b4fb241a24efb5158bd5",
                "deletions": 0,
                "filename": "config/src/main/java/org/apache/karaf/config/command/EditCommand.java",
                "patch": "@@ -50,6 +50,9 @@ protected Object doExecute() throws Exception {\n         \n         if (pid.startsWith(\"(\")) {\n         \tConfiguration[] configs = this.configRepository.getConfigAdmin().listConfigurations(pid);\n+            if (configs == null) {\n+                throw new RuntimeException(\"No config found\");\n+            }\n         \tif (configs.length == 0) {\n         \t\tthrow new RuntimeException(\"Filter matches no config\");\n         \t}",
                "raw_url": "https://github.com/apache/karaf/raw/b867058ed1b875778382b4fb241a24efb5158bd5/config/src/main/java/org/apache/karaf/config/command/EditCommand.java",
                "sha": "3fcd82063133c0d865a16bc517d88e6473129f1d",
                "status": "modified"
            }
        ],
        "message": "[KARAF-3487] Fix NPE on config:edit command",
        "parent": "https://github.com/apache/karaf/commit/afbd611de8a9d728f50c67bd8c627ce47c0a8f50",
        "repo": "karaf",
        "unit_tests": [
            "EditCommandTest.java"
        ]
    },
    "karaf_bb6b274": {
        "bug_id": "karaf_bb6b274",
        "commit": "https://github.com/apache/karaf/commit/bb6b2744d51da2834eea9da3718aff19bb526481",
        "file": [
            {
                "additions": 8,
                "blob_url": "https://github.com/apache/karaf/blob/bb6b2744d51da2834eea9da3718aff19bb526481/management/mbeans/config/src/main/java/org/apache/karaf/management/mbeans/config/internal/ConfigMBeanImpl.java",
                "changes": 8,
                "contents_url": "https://api.github.com/repos/apache/karaf/contents/management/mbeans/config/src/main/java/org/apache/karaf/management/mbeans/config/internal/ConfigMBeanImpl.java?ref=bb6b2744d51da2834eea9da3718aff19bb526481",
                "deletions": 0,
                "filename": "management/mbeans/config/src/main/java/org/apache/karaf/management/mbeans/config/internal/ConfigMBeanImpl.java",
                "patch": "@@ -85,6 +85,8 @@ public void delete(String pid) throws Exception {\n             throw new IllegalArgumentException(\"Configuration PID \" + pid + \" doesn't exist\");\n         }\n         Dictionary dictionary = configuration.getProperties();\n+        if (dictionary == null)\n+            dictionary = new java.util.Properties();\n         Map<String, String> propertiesMap = new HashMap<String, String>();\n         for (Enumeration e = dictionary.keys(); e.hasMoreElements(); ) {\n             Object key = e.nextElement();\n@@ -100,6 +102,8 @@ public void propdel(String pid, String key) throws Exception {\n             throw new IllegalArgumentException(\"Configuration PID \" + pid + \" doesn't exist\");\n         }\n         Dictionary dictionary = configuration.getProperties();\n+        if (dictionary == null)\n+            dictionary = new java.util.Properties();\n         dictionary.remove(key);\n         store(pid, dictionary, false);\n     }\n@@ -110,6 +114,8 @@ public void propappend(String pid, String key, String value) throws Exception {\n             throw new IllegalArgumentException(\"Configuration PID \" + pid + \" doesn't exist\");\n         }\n         Dictionary dictionary = configuration.getProperties();\n+        if (dictionary == null)\n+            dictionary = new java.util.Properties();\n         Object currentValue = dictionary.get(key);\n         if (currentValue == null) {\n             dictionary.put(key, value);\n@@ -127,6 +133,8 @@ public void propset(String pid, String key, String value) throws Exception {\n             throw new IllegalArgumentException(\"Configuration PID \" + pid + \" doesn't exist\");\n         }\n         Dictionary dictionary = configuration.getProperties();\n+        if (dictionary == null)\n+            dictionary = new java.util.Properties();\n         dictionary.put(key, value);\n         store(pid, dictionary, false);\n     }",
                "raw_url": "https://github.com/apache/karaf/raw/bb6b2744d51da2834eea9da3718aff19bb526481/management/mbeans/config/src/main/java/org/apache/karaf/management/mbeans/config/internal/ConfigMBeanImpl.java",
                "sha": "7d7de01f47503ca4462b1cc01b294b0979c7cca7",
                "status": "modified"
            }
        ],
        "message": "[KARAF-932] Initialize the config properties if null to avoid NPE\n\ngit-svn-id: https://svn.apache.org/repos/asf/karaf/trunk@1182538 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/karaf/commit/45891db199958664a3e224ac786899842a694d87",
        "repo": "karaf",
        "unit_tests": [
            "ConfigMBeanImplTest.java"
        ]
    },
    "karaf_c7860d7": {
        "bug_id": "karaf_c7860d7",
        "commit": "https://github.com/apache/karaf/commit/c7860d7d36b46f890c8e24b7ac058891b7bb9aa1",
        "file": [
            {
                "additions": 4,
                "blob_url": "https://github.com/apache/karaf/blob/c7860d7d36b46f890c8e24b7ac058891b7bb9aa1/features/core/src/main/java/org/apache/felix/karaf/features/internal/FeaturesServiceImpl.java",
                "changes": 5,
                "contents_url": "https://api.github.com/repos/apache/karaf/contents/features/core/src/main/java/org/apache/felix/karaf/features/internal/FeaturesServiceImpl.java?ref=c7860d7d36b46f890c8e24b7ac058891b7bb9aa1",
                "deletions": 1,
                "filename": "features/core/src/main/java/org/apache/felix/karaf/features/internal/FeaturesServiceImpl.java",
                "patch": "@@ -301,7 +301,10 @@ public void uninstallFeature(String name, String version) throws Exception {\n             bundles.removeAll(b);\n         }\n         for (long bundleId : bundles) {\n-            getBundleContext().getBundle(bundleId).uninstall();\n+            Bundle b = getBundleContext().getBundle(bundleId);\n+            if (b != null) {\n+                b.uninstall();\n+            }\n         }\n         callListeners(new FeatureEvent(feature, FeatureEvent.EventType.FeatureInstalled, false));\n         saveState();",
                "raw_url": "https://github.com/apache/karaf/raw/c7860d7d36b46f890c8e24b7ac058891b7bb9aa1/features/core/src/main/java/org/apache/felix/karaf/features/internal/FeaturesServiceImpl.java",
                "sha": "421de12863716757b6f8c661543a3a20bf60f590",
                "status": "modified"
            }
        ],
        "message": "FELIX-1566: Possible NPE when uninstalling a feature\n\ngit-svn-id: https://svn.apache.org/repos/asf/felix/trunk/karaf@812386 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/karaf/commit/789dcc99f087965aef0e816e364495c18784bea6",
        "repo": "karaf",
        "unit_tests": [
            "FeaturesServiceImplTest.java"
        ]
    },
    "karaf_da4aa4c": {
        "bug_id": "karaf_da4aa4c",
        "commit": "https://github.com/apache/karaf/commit/da4aa4c59698c39929d565ae83cf0696311ab671",
        "file": [
            {
                "additions": 5,
                "blob_url": "https://github.com/apache/karaf/blob/da4aa4c59698c39929d565ae83cf0696311ab671/jaas/modules/src/main/java/org/apache/karaf/jaas/modules/impl/KarafRealm.java",
                "changes": 8,
                "contents_url": "https://api.github.com/repos/apache/karaf/contents/jaas/modules/src/main/java/org/apache/karaf/jaas/modules/impl/KarafRealm.java?ref=da4aa4c59698c39929d565ae83cf0696311ab671",
                "deletions": 3,
                "filename": "jaas/modules/src/main/java/org/apache/karaf/jaas/modules/impl/KarafRealm.java",
                "patch": "@@ -67,9 +67,11 @@ private void populateDefault(Map<String, Object> props) {\n     public void updated(Dictionary<String, ?> properties) throws ConfigurationException {\n         Map<String, Object> props = new HashMap<String, Object>();\n         populateDefault(props);\n-        for (Enumeration<String> keyEnum = properties.keys(); keyEnum.hasMoreElements(); ) {\n-            String key = keyEnum.nextElement();\n-            props.put(key, properties.get(key));\n+        if (properties != null) {\n+            for (Enumeration<String> keyEnum = properties.keys(); keyEnum.hasMoreElements(); ) {\n+                String key = keyEnum.nextElement();\n+                props.put(key, properties.get(key));\n+            }\n         }\n         this.properties = props;\n     }",
                "raw_url": "https://github.com/apache/karaf/raw/da4aa4c59698c39929d565ae83cf0696311ab671/jaas/modules/src/main/java/org/apache/karaf/jaas/modules/impl/KarafRealm.java",
                "sha": "a04d5ac8277fa31b043d8867dd6f036812e35ef2",
                "status": "modified"
            },
            {
                "additions": 4,
                "blob_url": "https://github.com/apache/karaf/blob/da4aa4c59698c39929d565ae83cf0696311ab671/shell/core/src/main/java/org/apache/karaf/shell/impl/console/osgi/Activator.java",
                "changes": 6,
                "contents_url": "https://api.github.com/repos/apache/karaf/contents/shell/core/src/main/java/org/apache/karaf/shell/impl/console/osgi/Activator.java?ref=da4aa4c59698c39929d565ae83cf0696311ab671",
                "deletions": 2,
                "filename": "shell/core/src/main/java/org/apache/karaf/shell/impl/console/osgi/Activator.java",
                "patch": "@@ -80,11 +80,13 @@ public void start(BundleContext context) throws Exception {\n     @Override\n     public void stop(BundleContext context) throws Exception {\n         sessionFactoryRegistration.unregister();\n-        localConsoleManager.stop();\n+        if (localConsoleManager != null) {\n+            localConsoleManager.stop();\n+            terminalFactory.destroy();\n+        }\n         sessionFactory.stop();\n         actionExtender.stop(context);\n         threadIO.stop();\n-        terminalFactory.destroy();\n         if (eventAdminListener != null) {\n             eventAdminListener.close();\n         }",
                "raw_url": "https://github.com/apache/karaf/raw/da4aa4c59698c39929d565ae83cf0696311ab671/shell/core/src/main/java/org/apache/karaf/shell/impl/console/osgi/Activator.java",
                "sha": "9c328d4e05cd354c1dc73324badbff2ace645012",
                "status": "modified"
            }
        ],
        "message": "Fix possible NPE",
        "parent": "https://github.com/apache/karaf/commit/687ba286974f1edd15c5bae0330864d3502b8339",
        "repo": "karaf",
        "unit_tests": [
            "ActivatorTest.java"
        ]
    },
    "karaf_e192fff": {
        "bug_id": "karaf_e192fff",
        "commit": "https://github.com/apache/karaf/commit/e192fffc3f8a0ae894e78cd37b0a1387075756e5",
        "file": [
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/karaf/blob/e192fffc3f8a0ae894e78cd37b0a1387075756e5/features/core/src/main/java/org/apache/karaf/features/internal/service/FeatureConfigInstaller.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/karaf/contents/features/core/src/main/java/org/apache/karaf/features/internal/service/FeatureConfigInstaller.java?ref=e192fffc3f8a0ae894e78cd37b0a1387075756e5",
                "deletions": 1,
                "filename": "features/core/src/main/java/org/apache/karaf/features/internal/service/FeatureConfigInstaller.java",
                "patch": "@@ -112,7 +112,7 @@ public void installFeatureConfigs(Feature feature) throws IOException, InvalidSy\n             if (cfg == null) {\n             \t\n             \tFile cfgFile = null;\n-            \t if (storage != null && configCfgStore) {\n+            \t if (storage != null) {\n             \t\t cfgFile = new File(storage, cid.fullPid + \".cfg\");\n             \t }\n             \t if (!cfgFile.exists()) {",
                "raw_url": "https://github.com/apache/karaf/raw/e192fffc3f8a0ae894e78cd37b0a1387075756e5/features/core/src/main/java/org/apache/karaf/features/internal/service/FeatureConfigInstaller.java",
                "sha": "66ec66dc951529800f05812b0c6b59394290bae8",
                "status": "modified"
            }
        ],
        "message": "[KARAF-6160] Avoid NPE when configCfgStore=false in etc/org.apache.karaf.features.cfg",
        "parent": "https://github.com/apache/karaf/commit/386940d9f3ae59d153c9d4b4875fe52b0eb98212",
        "repo": "karaf",
        "unit_tests": [
            "FeatureConfigInstallerTest.java"
        ]
    },
    "karaf_e390a81": {
        "bug_id": "karaf_e390a81",
        "commit": "https://github.com/apache/karaf/commit/e390a81eaf89c408a2ba8c5c3671b82d99ae5fac",
        "file": [
            {
                "additions": 18,
                "blob_url": "https://github.com/apache/karaf/blob/e390a81eaf89c408a2ba8c5c3671b82d99ae5fac/client/src/main/java/org/apache/karaf/client/Main.java",
                "changes": 32,
                "contents_url": "https://api.github.com/repos/apache/karaf/contents/client/src/main/java/org/apache/karaf/client/Main.java?ref=e390a81eaf89c408a2ba8c5c3671b82d99ae5fac",
                "deletions": 14,
                "filename": "client/src/main/java/org/apache/karaf/client/Main.java",
                "patch": "@@ -77,31 +77,35 @@ public static void main(String[] args) throws Exception {\n         Terminal terminal = null;\n         int exitStatus = 0;\n         try {\n-            final Console console = System.console();\n             client = SshClient.setUpDefaultClient();\n             setupAgent(config.getUser(), config.getKeyFile(), client);\n-            client.setUserInteraction(new UserInteraction() {\n-                public void welcome(String banner) {\n-                    System.out.println(banner);\n-                }\n+            final Console console = System.console();\n+            if (console != null) {\n+                client.setUserInteraction(new UserInteraction() {\n+                    public void welcome(String banner) {\n+                        System.out.println(banner);\n+                    }\n \n-                public String[] interactive(String destination, String name, String instruction, String[] prompt, boolean[] echo) {\n-                    String[] answers = new String[prompt.length];\n-                    try {\n-                        for (int i = 0; i < prompt.length; i++) {\n-                            if (console != null) {\n+                    public String[] interactive(String destination, String name, String instruction, String[] prompt, boolean[] echo) {\n+                        String[] answers = new String[prompt.length];\n+                        try {\n+                            for (int i = 0; i < prompt.length; i++) {\n                                 if (echo[i]) {\n                                     answers[i] = console.readLine(prompt[i] + \" \");\n                                 } else {\n                                     answers[i] = new String(console.readPassword(prompt[i] + \" \"));\n                                 }\n+                                if (answers[i] == null) {\n+                                    return null;\n+                                }\n                             }\n+                            return answers;\n+                        } catch (IOError e) {\n+                            return null;\n                         }\n-                    } catch (IOError e) {\n                     }\n-                    return answers;\n-                }\n-            });\n+                });\n+            }\n             client.start();\n             if (console != null) {\n                 console.printf(\"Logging in as %s\\n\", config.getUser());",
                "raw_url": "https://github.com/apache/karaf/raw/e390a81eaf89c408a2ba8c5c3671b82d99ae5fac/client/src/main/java/org/apache/karaf/client/Main.java",
                "sha": "65bcedf83ae6cd5bf9fe4fe01ed16aa96f549899",
                "status": "modified"
            }
        ],
        "message": "[kARAF-3651] The karaf client can cause a NPE in org.apache.sshd.common.util.Buffer.putString(Buffer.java:434)",
        "parent": "https://github.com/apache/karaf/commit/762bae6e85932bfc059a32bbb4aa98894cb3f366",
        "repo": "karaf",
        "unit_tests": [
            "MainTest.java"
        ]
    },
    "karaf_ea78c61": {
        "bug_id": "karaf_ea78c61",
        "commit": "https://github.com/apache/karaf/commit/ea78c61ef44d60f2f7234157b11cce9e2ea9cdc6",
        "file": [
            {
                "additions": 7,
                "blob_url": "https://github.com/apache/karaf/blob/ea78c61ef44d60f2f7234157b11cce9e2ea9cdc6/main/src/main/java/org/apache/karaf/main/Main.java",
                "changes": 12,
                "contents_url": "https://api.github.com/repos/apache/karaf/contents/main/src/main/java/org/apache/karaf/main/Main.java?ref=ea78c61ef44d60f2f7234157b11cce9e2ea9cdc6",
                "deletions": 5,
                "filename": "main/src/main/java/org/apache/karaf/main/Main.java",
                "patch": "@@ -32,6 +32,7 @@\n import java.util.List;\n import java.util.Properties;\n import java.util.StringTokenizer;\n+import java.util.logging.Level;\n import java.util.logging.Logger;\n \n import org.apache.karaf.info.ServerInfo;\n@@ -167,10 +168,9 @@ public static void main(String[] args) throws Exception {\n             try {\n                 main.launch();\n             } catch (Throwable ex) {\n+                main.LOG.log(Level.SEVERE, \"Could not launch framework\", ex);\n                 main.destroy();\n                 main.setExitCode(-1);\n-                System.err.println(\"Could not create framework: \" + ex);\n-                ex.printStackTrace();\n             }\n             try {\n                 main.awaitShutdown();\n@@ -206,6 +206,8 @@ public void setShutdownCallback(ShutdownCallback shutdownCallback) {\n \n     public void launch() throws Exception {\n         config = new ConfigProperties();\n+        Lock lock = createLock();\n+        lockManager = new LockManager(lock, new KarafLockCallback(), config.lockDelay);\n         InstanceHelper.updateInstancePid(config.karafHome, config.karafBase);\n         BootstrapLogManager.setProperties(config.props);\n         LOG.addHandler(BootstrapLogManager.getDefaultHandler());\n@@ -235,8 +237,6 @@ public void launch() throws Exception {\n         activatorManager = new KarafActivatorManager(classLoader, framework);\n         activatorManager.startKarafActivators();\n         \n-        Lock lock = createLock();\n-        lockManager = new LockManager(lock, new KarafLockCallback(), config.lockDelay);\n         setStartLevel(config.lockStartLevel);\n         lockManager.startLockMonitor();\n     }\n@@ -441,7 +441,9 @@ public void run() {\n             }\n             return false;\n         } finally {\n-            lockManager.stopLockMonitor();\n+            if (lockManager != null) {\n+                lockManager.stopLockMonitor();\n+            }\n         }\n     }\n     ",
                "raw_url": "https://github.com/apache/karaf/raw/ea78c61ef44d60f2f7234157b11cce9e2ea9cdc6/main/src/main/java/org/apache/karaf/main/Main.java",
                "sha": "bea1e37e667d378eebfa80a5311cc29ed46315d0",
                "status": "modified"
            }
        ],
        "message": "KARAF-1296 Bugfix. Avoid NPE when there is an exception in launch and lockManager is not yet initialized\n\ngit-svn-id: https://svn.apache.org/repos/asf/karaf/trunk@1334999 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/karaf/commit/ca2286f899e1847672b61463882ffa6cce6fe89c",
        "repo": "karaf",
        "unit_tests": [
            "MainTest.java"
        ]
    },
    "karaf_f734dfc": {
        "bug_id": "karaf_f734dfc",
        "commit": "https://github.com/apache/karaf/commit/f734dfc42fb705d91a3df0a2e1f3ee2a5047c856",
        "file": [
            {
                "additions": 6,
                "blob_url": "https://github.com/apache/karaf/blob/f734dfc42fb705d91a3df0a2e1f3ee2a5047c856/features/core/src/main/java/org/apache/karaf/features/internal/osgi/Activator.java",
                "changes": 8,
                "contents_url": "https://api.github.com/repos/apache/karaf/contents/features/core/src/main/java/org/apache/karaf/features/internal/osgi/Activator.java?ref=f734dfc42fb705d91a3df0a2e1f3ee2a5047c856",
                "deletions": 2,
                "filename": "features/core/src/main/java/org/apache/karaf/features/internal/osgi/Activator.java",
                "patch": "@@ -303,8 +303,12 @@ public void modifiedService(ServiceReference<FeaturesListener> reference, Featur\n     \n                     @Override\n                     public void removedService(ServiceReference<FeaturesListener> reference, FeaturesListener service) {\n-                        featuresService.unregisterListener(service);\n-                        bundleContext.ungetService(reference);\n+                        if (featuresService != null && service != null) {\n+                            featuresService.unregisterListener(service);\n+                        }\n+                        if (bundleContext != null && reference != null) {\n+                            bundleContext.ungetService(reference);\n+                        }\n                     }\n                 }\n         );",
                "raw_url": "https://github.com/apache/karaf/raw/f734dfc42fb705d91a3df0a2e1f3ee2a5047c856/features/core/src/main/java/org/apache/karaf/features/internal/osgi/Activator.java",
                "sha": "28226e6d359257472af188d24f562a4408c58c67",
                "status": "modified"
            }
        ],
        "message": "[KARAF-6329] Prevent NPE on shutdown in features service",
        "parent": "https://github.com/apache/karaf/commit/c5cd8e5522b5f64c267fe8d10b4e0c1a181b6c64",
        "repo": "karaf",
        "unit_tests": [
            "ActivatorTest.java"
        ]
    }
}