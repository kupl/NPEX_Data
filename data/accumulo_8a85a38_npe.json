[
    {
        "repo": "accumulo",
        "commit": "https://github.com/apache/accumulo/commit/8a85a3847bf77a11569f115eda17c7b7045431d3",
        "bug_id": "accumulo_8a85a38",
        "message": "Fix NPE in BCFile. Fixes #1021 (#1022)\n\n* Add cache to old RFile tests to test for this error",
        "parent": "https://github.com/apache/accumulo/commit/b17d0ae6f9a5d6d15145ffbca9700d8fcbd6058b",
        "patched_files": [
            "BCFile.java",
            "RFile.java"
        ],
        "file": [
            {
                "status": "modified",
                "additions": 2,
                "raw_url": "https://github.com/apache/accumulo/raw/8a85a3847bf77a11569f115eda17c7b7045431d3/core/src/main/java/org/apache/accumulo/core/file/rfile/bcfile/BCFile.java",
                "contents_url": "https://api.github.com/repos/apache/accumulo/contents/core/src/main/java/org/apache/accumulo/core/file/rfile/bcfile/BCFile.java?ref=8a85a3847bf77a11569f115eda17c7b7045431d3",
                "filename": "core/src/main/java/org/apache/accumulo/core/file/rfile/bcfile/BCFile.java",
                "deletions": 0,
                "sha": "d19db5beb18c5aa58ec4d5029924c087990168d0",
                "blob_url": "https://github.com/apache/accumulo/blob/8a85a3847bf77a11569f115eda17c7b7045431d3/core/src/main/java/org/apache/accumulo/core/file/rfile/bcfile/BCFile.java",
                "patch": "@@ -36,6 +36,7 @@\n import org.apache.accumulo.core.crypto.CryptoUtils;\n import org.apache.accumulo.core.cryptoImpl.CryptoEnvironmentImpl;\n import org.apache.accumulo.core.cryptoImpl.NoFileDecrypter;\n+import org.apache.accumulo.core.cryptoImpl.NoFileEncrypter;\n import org.apache.accumulo.core.file.rfile.bcfile.Compression.Algorithm;\n import org.apache.accumulo.core.file.rfile.bcfile.Utils.Version;\n import org.apache.accumulo.core.file.streams.BoundedRangeFileInputStream;\n@@ -634,6 +635,7 @@ public long getRawSize() {\n       // backwards compatibility\n       if (version.equals(API_VERSION_1)) {\n         LOG.trace(\"Found a version 1 file to read.\");\n+        decryptionParams = new NoFileEncrypter().getDecryptionParameters();\n         this.decrypter = new NoFileDecrypter();\n       } else {\n         // read crypto parameters and get decrypter",
                "changes": 2
            },
            {
                "status": "modified",
                "additions": 18,
                "raw_url": "https://github.com/apache/accumulo/raw/8a85a3847bf77a11569f115eda17c7b7045431d3/core/src/test/java/org/apache/accumulo/core/file/rfile/RFileTest.java",
                "contents_url": "https://api.github.com/repos/apache/accumulo/contents/core/src/test/java/org/apache/accumulo/core/file/rfile/RFileTest.java?ref=8a85a3847bf77a11569f115eda17c7b7045431d3",
                "filename": "core/src/test/java/org/apache/accumulo/core/file/rfile/RFileTest.java",
                "deletions": 10,
                "sha": "9e70010b617080c0f99f99df2fd9c28b30d2224a",
                "blob_url": "https://github.com/apache/accumulo/blob/8a85a3847bf77a11569f115eda17c7b7045431d3/core/src/test/java/org/apache/accumulo/core/file/rfile/RFileTest.java",
                "patch": "@@ -1702,28 +1702,28 @@ public void testReseekUnconsumed() throws Exception {\n \n   @Test(expected = NullPointerException.class)\n   public void testMissingUnreleasedVersions() throws Exception {\n-    runVersionTest(5, DefaultConfiguration.getInstance());\n+    runVersionTest(5, getAccumuloConfig(CryptoTest.CRYPTO_OFF_CONF));\n   }\n \n   @Test\n   public void testOldVersions() throws Exception {\n-    AccumuloConfiguration defaultConfiguration = DefaultConfiguration.getInstance();\n-    runVersionTest(3, defaultConfiguration);\n-    runVersionTest(4, defaultConfiguration);\n-    runVersionTest(6, defaultConfiguration);\n-    runVersionTest(7, defaultConfiguration);\n+    ConfigurationCopy defaultConf = getAccumuloConfig(CryptoTest.CRYPTO_OFF_CONF);\n+    runVersionTest(3, defaultConf);\n+    runVersionTest(4, defaultConf);\n+    runVersionTest(6, defaultConf);\n+    runVersionTest(7, defaultConf);\n   }\n \n   @Test\n   public void testOldVersionsWithCrypto() throws Exception {\n-    AccumuloConfiguration cryptoOnConf = getAccumuloConfig(CryptoTest.CRYPTO_ON_CONF);\n+    ConfigurationCopy cryptoOnConf = getAccumuloConfig(CryptoTest.CRYPTO_ON_CONF);\n     runVersionTest(3, cryptoOnConf);\n     runVersionTest(4, cryptoOnConf);\n     runVersionTest(6, cryptoOnConf);\n     runVersionTest(7, cryptoOnConf);\n   }\n \n-  private void runVersionTest(int version, AccumuloConfiguration aconf) throws IOException {\n+  private void runVersionTest(int version, ConfigurationCopy aconf) throws Exception {\n     InputStream in = this.getClass().getClassLoader()\n         .getResourceAsStream(\"org/apache/accumulo/core/file/rfile/ver_\" + version + \".rf\");\n     ByteArrayOutputStream baos = new ByteArrayOutputStream();\n@@ -1735,8 +1735,15 @@ private void runVersionTest(int version, AccumuloConfiguration aconf) throws IOE\n     byte[] data = baos.toByteArray();\n     SeekableByteArrayInputStream bais = new SeekableByteArrayInputStream(data);\n     FSDataInputStream in2 = new FSDataInputStream(bais);\n+    aconf.set(Property.TSERV_CACHE_MANAGER_IMPL, LruBlockCacheManager.class.getName());\n+    aconf.set(Property.TSERV_DEFAULT_BLOCKSIZE, Long.toString(100000));\n+    aconf.set(Property.TSERV_DATACACHE_SIZE, Long.toString(100000000));\n+    aconf.set(Property.TSERV_INDEXCACHE_SIZE, Long.toString(100000000));\n+    BlockCacheManager manager = BlockCacheManagerFactory.getInstance(aconf);\n+    manager.start(new BlockCacheConfiguration(aconf));\n     CachableBuilder cb = new CachableBuilder().input(in2).length(data.length).conf(hadoopConf)\n-        .cryptoService(CryptoServiceFactory.newInstance(aconf, ClassloaderType.JAVA));\n+        .cryptoService(CryptoServiceFactory.newInstance(aconf, ClassloaderType.JAVA))\n+        .index(manager.getBlockCache(CacheType.INDEX)).data(manager.getBlockCache(CacheType.DATA));\n     Reader reader = new RFile.Reader(cb);\n     checkIndex(reader);\n \n@@ -1779,10 +1786,11 @@ private void runVersionTest(int version, AccumuloConfiguration aconf) throws IOE\n       assertFalse(iter.hasTop());\n     }\n \n+    manager.stop();\n     reader.close();\n   }\n \n-  public static AccumuloConfiguration getAccumuloConfig(String cryptoOn) {\n+  public static ConfigurationCopy getAccumuloConfig(String cryptoOn) {\n     ConfigurationCopy cfg = new ConfigurationCopy(DefaultConfiguration.getInstance());\n     switch (cryptoOn) {\n       case CryptoTest.CRYPTO_ON_CONF:",
                "changes": 28
            }
        ],
        "unit_tests": [
            "RFileTest.java"
        ]
    },
    {
        "buggy": false,
        "test_file": "core/src/test/java/org/apache/accumulo/core/file/rfile/RFileTest.java",
        "buggy_files": [
            "core/src/main/java/org/apache/accumulo/core/file/rfile/bcfile/BCFile.java",
            "core/src/main/java/org/apache/accumulo/core/client/rfile/RFile.java",
            "core/src/main/java/org/apache/accumulo/core/file/rfile/RFile.java"
        ],
        "fixed": true
    }
]