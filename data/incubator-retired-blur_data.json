[
    {
        "repo": "incubator-retired-blur",
        "message": "Fixing NPE.",
        "commit": "https://github.com/apache/incubator-retired-blur/commit/1985869099fefa12f90ee386a736401e2c4bc04d",
        "parent": "https://github.com/apache/incubator-retired-blur/commit/1c7aba2619270aa64747f2dae6fc7756e51d382a",
        "bug_id": "incubator-retired-blur_1",
        "file": [
            {
                "sha": "7447673a53a8db042091fb2425a1a5d38f1d6cda",
                "filename": "blur-mapred/src/main/java/org/apache/blur/mapreduce/lib/update/Driver.java",
                "blob_url": "https://github.com/apache/incubator-retired-blur/blob/1985869099fefa12f90ee386a736401e2c4bc04d/blur-mapred/src/main/java/org/apache/blur/mapreduce/lib/update/Driver.java",
                "raw_url": "https://github.com/apache/incubator-retired-blur/raw/1985869099fefa12f90ee386a736401e2c4bc04d/blur-mapred/src/main/java/org/apache/blur/mapreduce/lib/update/Driver.java",
                "status": "modified",
                "changes": 4,
                "additions": 3,
                "contents_url": "https://api.github.com/repos/apache/incubator-retired-blur/contents/blur-mapred/src/main/java/org/apache/blur/mapreduce/lib/update/Driver.java?ref=1985869099fefa12f90ee386a736401e2c4bc04d",
                "patch": "@@ -144,7 +144,9 @@ public int run(String[] args) throws Exception {\n         LOG.error(\"Indexing job failed!\");\n         movePathList(fileSystem, newData, inprogressPathList);\n       }\n-      client.removeSnapshot(table, MRUPDATE_SNAPSHOT);\n+      if (client != null) {\n+        client.removeSnapshot(table, MRUPDATE_SNAPSHOT);\n+      }\n     }\n \n     if (success) {",
                "deletions": 1
            }
        ]
    },
    {
        "repo": "incubator-retired-blur",
        "message": "Fixing NPE.",
        "commit": "https://github.com/apache/incubator-retired-blur/commit/9b832793b4d06ce165f0066ac62fb619d3ccaacb",
        "parent": "https://github.com/apache/incubator-retired-blur/commit/b4dfa04f57db095cbeec526577825cacd792df85",
        "bug_id": "incubator-retired-blur_2",
        "file": [
            {
                "sha": "975022a4486f3b040896a13f4a265c94fc8c425f",
                "filename": "blur-core/src/main/java/org/apache/blur/manager/writer/BlurIndexSimpleWriter.java",
                "blob_url": "https://github.com/apache/incubator-retired-blur/blob/9b832793b4d06ce165f0066ac62fb619d3ccaacb/blur-core/src/main/java/org/apache/blur/manager/writer/BlurIndexSimpleWriter.java",
                "raw_url": "https://github.com/apache/incubator-retired-blur/raw/9b832793b4d06ce165f0066ac62fb619d3ccaacb/blur-core/src/main/java/org/apache/blur/manager/writer/BlurIndexSimpleWriter.java",
                "status": "modified",
                "changes": 6,
                "additions": 4,
                "contents_url": "https://api.github.com/repos/apache/incubator-retired-blur/contents/blur-core/src/main/java/org/apache/blur/manager/writer/BlurIndexSimpleWriter.java?ref=9b832793b4d06ce165f0066ac62fb619d3ccaacb",
                "patch": "@@ -663,8 +663,10 @@ public boolean accept(Path path) {\n     }\n \n     public void cleanupFiles(List<Path> unsortedPaths, Path sorted) throws IOException {\n-      for (Path p : unsortedPaths) {\n-        _fileSystem.delete(p, false);\n+      if (unsortedPaths != null) {\n+        for (Path p : unsortedPaths) {\n+          _fileSystem.delete(p, false);\n+        }\n       }\n       if (sorted != null) {\n         _fileSystem.delete(sorted, false);",
                "deletions": 2
            }
        ]
    },
    {
        "repo": "incubator-retired-blur",
        "message": "Fixing another NPE.",
        "commit": "https://github.com/apache/incubator-retired-blur/commit/146214d9c8d6230a102dddba4455f5c66934260e",
        "parent": "https://github.com/apache/incubator-retired-blur/commit/1985869099fefa12f90ee386a736401e2c4bc04d",
        "bug_id": "incubator-retired-blur_3",
        "file": [
            {
                "sha": "04cd81ea0e6b26182bbe8cd07c48bc1936424e65",
                "filename": "blur-mapred/src/main/java/org/apache/blur/mapreduce/lib/update/Driver.java",
                "blob_url": "https://github.com/apache/incubator-retired-blur/blob/146214d9c8d6230a102dddba4455f5c66934260e/blur-mapred/src/main/java/org/apache/blur/mapreduce/lib/update/Driver.java",
                "raw_url": "https://github.com/apache/incubator-retired-blur/raw/146214d9c8d6230a102dddba4455f5c66934260e/blur-mapred/src/main/java/org/apache/blur/mapreduce/lib/update/Driver.java",
                "status": "modified",
                "changes": 4,
                "additions": 1,
                "contents_url": "https://api.github.com/repos/apache/incubator-retired-blur/contents/blur-mapred/src/main/java/org/apache/blur/mapreduce/lib/update/Driver.java?ref=146214d9c8d6230a102dddba4455f5c66934260e",
                "patch": "@@ -105,10 +105,8 @@ public int run(String[] args) throws Exception {\n       inprogressPathList = movePathList(fileSystem, inprogressData, srcPathList);\n \n       Job job = Job.getInstance(getConf(), \"Blur Row Updater for table [\" + table + \"]\");\n-\n-      waitForOtherSnapshotsToBeRemoved(client, table, MRUPDATE_SNAPSHOT);\n-\n       client = BlurClient.getClientFromZooKeeperConnectionStr(blurZkConnection);\n+      waitForOtherSnapshotsToBeRemoved(client, table, MRUPDATE_SNAPSHOT);\n       client.createSnapshot(table, MRUPDATE_SNAPSHOT);\n       TableDescriptor descriptor = client.describe(table);\n       Path tablePath = new Path(descriptor.getTableUri());",
                "deletions": 3
            }
        ]
    },
    {
        "repo": "incubator-retired-blur",
        "message": "Fixing a NPE.",
        "commit": "https://github.com/apache/incubator-retired-blur/commit/7734b86fd5885d6d57cd1cf56e46d742f29792b7",
        "parent": "https://github.com/apache/incubator-retired-blur/commit/582eaa854f87840315b63c7b058e6dcd7d2078cd",
        "bug_id": "incubator-retired-blur_4",
        "file": [
            {
                "sha": "7ae57610c41b7ee96e1e5a55480fdcee5b43a437",
                "filename": "blur-core/src/main/java/org/apache/blur/manager/clusterstatus/ZookeeperClusterStatus.java",
                "blob_url": "https://github.com/apache/incubator-retired-blur/blob/7734b86fd5885d6d57cd1cf56e46d742f29792b7/blur-core/src/main/java/org/apache/blur/manager/clusterstatus/ZookeeperClusterStatus.java",
                "raw_url": "https://github.com/apache/incubator-retired-blur/raw/7734b86fd5885d6d57cd1cf56e46d742f29792b7/blur-core/src/main/java/org/apache/blur/manager/clusterstatus/ZookeeperClusterStatus.java",
                "status": "modified",
                "changes": 5,
                "additions": 4,
                "contents_url": "https://api.github.com/repos/apache/incubator-retired-blur/contents/blur-core/src/main/java/org/apache/blur/manager/clusterstatus/ZookeeperClusterStatus.java?ref=7734b86fd5885d6d57cd1cf56e46d742f29792b7",
                "patch": "@@ -609,7 +609,10 @@ private void assignTableUri(TableDescriptor tableDescriptor) {\n \n   private void assignMapReduceWorkingPath(TableDescriptor tableDescriptor) throws IOException {\n     Map<String, String> tableProperties = tableDescriptor.getTableProperties();\n-    String mrIncWorkingPathStr = tableProperties.get(BlurConstants.BLUR_BULK_UPDATE_WORKING_PATH);\n+    String mrIncWorkingPathStr = null;\n+    if (tableProperties != null) {\n+      mrIncWorkingPathStr = tableProperties.get(BlurConstants.BLUR_BULK_UPDATE_WORKING_PATH);\n+    }\n     if (mrIncWorkingPathStr == null) {\n       // If not set on the table, try to use cluster default\n       mrIncWorkingPathStr = _configuration.get(BlurConstants.BLUR_BULK_UPDATE_WORKING_PATH);",
                "deletions": 1
            }
        ]
    },
    {
        "repo": "incubator-retired-blur",
        "message": "Fixing a NPE.",
        "commit": "https://github.com/apache/incubator-retired-blur/commit/2da8d8f91c4a02856ee234ba774958cb3d0a08fe",
        "parent": "https://github.com/apache/incubator-retired-blur/commit/0e4e324acf064d6e9cc11e2fb741ad715cb54673",
        "bug_id": "incubator-retired-blur_5",
        "file": [
            {
                "sha": "21d49419e4f5135e062904771b136c49eee45f63",
                "filename": "blur-core/src/main/java/org/apache/blur/manager/writer/BlurIndexSimpleWriter.java",
                "blob_url": "https://github.com/apache/incubator-retired-blur/blob/2da8d8f91c4a02856ee234ba774958cb3d0a08fe/blur-core/src/main/java/org/apache/blur/manager/writer/BlurIndexSimpleWriter.java",
                "raw_url": "https://github.com/apache/incubator-retired-blur/raw/2da8d8f91c4a02856ee234ba774958cb3d0a08fe/blur-core/src/main/java/org/apache/blur/manager/writer/BlurIndexSimpleWriter.java",
                "status": "modified",
                "changes": 4,
                "additions": 3,
                "contents_url": "https://api.github.com/repos/apache/incubator-retired-blur/contents/blur-core/src/main/java/org/apache/blur/manager/writer/BlurIndexSimpleWriter.java?ref=2da8d8f91c4a02856ee234ba774958cb3d0a08fe",
                "patch": "@@ -425,7 +425,9 @@ private Closeable makeCloseable(final BlurIndexWriter blurIndexWriter) {\n     return new Closeable() {\n       @Override\n       public void close() throws IOException {\n-        blurIndexWriter.close(false);\n+        if (blurIndexWriter != null) {\n+          blurIndexWriter.close(false);\n+        }\n       }\n     };\n   }",
                "deletions": 1
            }
        ]
    },
    {
        "repo": "incubator-retired-blur",
        "message": "Fixing a NPE.",
        "commit": "https://github.com/apache/incubator-retired-blur/commit/b6000cd2b7cc43ffcee59fae85db02fff3c6f1be",
        "parent": "https://github.com/apache/incubator-retired-blur/commit/b2d75ec9d1626c44d397681605ee72db04b52298",
        "bug_id": "incubator-retired-blur_6",
        "file": [
            {
                "sha": "d94b17e9e411f4199d161c0252ae1c77455f5551",
                "filename": "blur-util/src/main/java/org/apache/blur/concurrent/ThreadWatcher.java",
                "blob_url": "https://github.com/apache/incubator-retired-blur/blob/b6000cd2b7cc43ffcee59fae85db02fff3c6f1be/blur-util/src/main/java/org/apache/blur/concurrent/ThreadWatcher.java",
                "raw_url": "https://github.com/apache/incubator-retired-blur/raw/b6000cd2b7cc43ffcee59fae85db02fff3c6f1be/blur-util/src/main/java/org/apache/blur/concurrent/ThreadWatcher.java",
                "status": "modified",
                "changes": 8,
                "additions": 8,
                "contents_url": "https://api.github.com/repos/apache/incubator-retired-blur/contents/blur-util/src/main/java/org/apache/blur/concurrent/ThreadWatcher.java?ref=b6000cd2b7cc43ffcee59fae85db02fff3c6f1be",
                "patch": "@@ -237,6 +237,10 @@ public synchronized static ThreadWatcher instance() {\n   }\n \n   public static void status(String task, float complete) {\n+    if (_instance == null) {\n+      LOG.warn(\"Call to resetStatus on thread no being watched.\");\n+      return;\n+    }\n     Watch watch = _instance._threads.get(Thread.currentThread());\n     if (watch == null) {\n       return;\n@@ -245,6 +249,10 @@ public static void status(String task, float complete) {\n   }\n \n   public static void resetStatus() {\n+    if (_instance == null) {\n+      LOG.warn(\"Call to resetStatus on thread no being watched.\");\n+      return;\n+    }\n     Watch watch = _instance._threads.get(Thread.currentThread());\n     if (watch == null) {\n       return;",
                "deletions": 0
            }
        ]
    },
    {
        "repo": "incubator-retired-blur",
        "message": "Fixed NPE.",
        "commit": "https://github.com/apache/incubator-retired-blur/commit/c7385fb29de3d0f553c458336b01c6709d80e605",
        "parent": "https://github.com/apache/incubator-retired-blur/commit/510de9917c1db85a2c573c15de0c2612691f7f22",
        "bug_id": "incubator-retired-blur_7",
        "file": [
            {
                "sha": "70f6c3c05179c9274c87191aecc8e5918249f879",
                "filename": "blur-query/src/main/java/org/apache/blur/analysis/HdfsFieldManager.java",
                "blob_url": "https://github.com/apache/incubator-retired-blur/blob/c7385fb29de3d0f553c458336b01c6709d80e605/blur-query/src/main/java/org/apache/blur/analysis/HdfsFieldManager.java",
                "raw_url": "https://github.com/apache/incubator-retired-blur/raw/c7385fb29de3d0f553c458336b01c6709d80e605/blur-query/src/main/java/org/apache/blur/analysis/HdfsFieldManager.java",
                "status": "modified",
                "changes": 14,
                "additions": 11,
                "contents_url": "https://api.github.com/repos/apache/incubator-retired-blur/contents/blur-query/src/main/java/org/apache/blur/analysis/HdfsFieldManager.java?ref=c7385fb29de3d0f553c458336b01c6709d80e605",
                "patch": "@@ -38,6 +38,8 @@\n \n public class HdfsFieldManager extends BaseFieldManager {\n \n+  private static final List<String> EMPTY_LIST = new ArrayList<String>();\n+\n   public static abstract class Lock {\n \n     public abstract void lock();\n@@ -86,14 +88,20 @@ public HdfsFieldManager(String fieldLessField, Analyzer defaultAnalyzerForQueryi\n     _configuration = configuration;\n     _fileSystem = _storagePath.getFileSystem(_configuration);\n   }\n-  \n+\n   @Override\n   protected List<String> getFieldNamesToLoad() throws IOException {\n+    if (!_fileSystem.exists(_storagePath)) {\n+      return EMPTY_LIST;\n+    }\n     FileStatus[] listStatus = _fileSystem.listStatus(_storagePath);\n-    List<String> fieldNames = new ArrayList<String>();\n+    if (listStatus == null) {\n+      return EMPTY_LIST;\n+    }\n+    List<String> fieldNames = EMPTY_LIST;\n     for (FileStatus fileStatus : listStatus) {\n       if (!fileStatus.isDir()) {\n-        fieldNames.add(fileStatus.getPath().getName());  \n+        fieldNames.add(fileStatus.getPath().getName());\n       }\n     }\n     return fieldNames;",
                "deletions": 3
            }
        ]
    },
    {
        "repo": "incubator-retired-blur",
        "message": "fix NPE on bad row/record mutations.",
        "commit": "https://github.com/apache/incubator-retired-blur/commit/218c773485fa8748f1bd84c4092ca93472241c0c",
        "parent": "https://github.com/apache/incubator-retired-blur/commit/7734b86fd5885d6d57cd1cf56e46d742f29792b7",
        "bug_id": "incubator-retired-blur_8",
        "file": [
            {
                "sha": "63ab7195ada2cb27dca36a124396b2ce8a835642",
                "filename": "blur-core/src/main/java/org/apache/blur/utils/ShardUtil.java",
                "blob_url": "https://github.com/apache/incubator-retired-blur/blob/218c773485fa8748f1bd84c4092ca93472241c0c/blur-core/src/main/java/org/apache/blur/utils/ShardUtil.java",
                "raw_url": "https://github.com/apache/incubator-retired-blur/raw/218c773485fa8748f1bd84c4092ca93472241c0c/blur-core/src/main/java/org/apache/blur/utils/ShardUtil.java",
                "status": "modified",
                "changes": 5,
                "additions": 5,
                "contents_url": "https://api.github.com/repos/apache/incubator-retired-blur/contents/blur-core/src/main/java/org/apache/blur/utils/ShardUtil.java?ref=218c773485fa8748f1bd84c4092ca93472241c0c",
                "patch": "@@ -19,6 +19,8 @@\n import org.apache.blur.thrift.generated.Column;\n import org.apache.blur.thrift.generated.Record;\n \n+import com.google.common.base.Strings;\n+\n public class ShardUtil {\n   \n   public static String getShardName(int id) {\n@@ -57,6 +59,9 @@ public static void validateRowIdAndRecord(String rowId, Record record) {\n   }\n \n   public static boolean validate(String s) {\n+    if(Strings.isNullOrEmpty(s)) {\n+      return false;\n+    }\n     int length = s.length();\n     for (int i = 0; i < length; i++) {\n       char c = s.charAt(i);",
                "deletions": 0
            },
            {
                "sha": "c4812bd39aa81d00da1ec48b879756feb443fab1",
                "filename": "blur-core/src/test/java/org/apache/blur/utils/ShardUtilTest.java",
                "blob_url": "https://github.com/apache/incubator-retired-blur/blob/218c773485fa8748f1bd84c4092ca93472241c0c/blur-core/src/test/java/org/apache/blur/utils/ShardUtilTest.java",
                "raw_url": "https://github.com/apache/incubator-retired-blur/raw/218c773485fa8748f1bd84c4092ca93472241c0c/blur-core/src/test/java/org/apache/blur/utils/ShardUtilTest.java",
                "status": "added",
                "changes": 14,
                "additions": 14,
                "contents_url": "https://api.github.com/repos/apache/incubator-retired-blur/contents/blur-core/src/test/java/org/apache/blur/utils/ShardUtilTest.java?ref=218c773485fa8748f1bd84c4092ca93472241c0c",
                "patch": "@@ -0,0 +1,14 @@\n+package org.apache.blur.utils;\n+\n+import static org.junit.Assert.*;\n+\n+import org.junit.Test;\n+\n+public class ShardUtilTest {\n+\n+  @Test\n+  public void nullFamilyAndColumnNamesShouldFail() {\n+    assertFalse(\"Null names should fail.\", ShardUtil.validate(null));\n+  }\n+\n+}",
                "deletions": 0
            }
        ]
    },
    {
        "repo": "incubator-retired-blur",
        "message": "Fixed NPE.",
        "commit": "https://github.com/apache/incubator-retired-blur/commit/500114e6d2331d7f34b7ad6513280b0920638168",
        "parent": "https://github.com/apache/incubator-retired-blur/commit/6d05a5e8f8acd20409a4ceadbd03c40a331d6704",
        "bug_id": "incubator-retired-blur_9",
        "file": [
            {
                "sha": "725174a93e4f1923b37b2018475908c29daab9ec",
                "filename": "src/blur-core/src/main/java/org/apache/blur/manager/IndexManager.java",
                "blob_url": "https://github.com/apache/incubator-retired-blur/blob/500114e6d2331d7f34b7ad6513280b0920638168/src/blur-core/src/main/java/org/apache/blur/manager/IndexManager.java",
                "raw_url": "https://github.com/apache/incubator-retired-blur/raw/500114e6d2331d7f34b7ad6513280b0920638168/src/blur-core/src/main/java/org/apache/blur/manager/IndexManager.java",
                "status": "modified",
                "changes": 6,
                "additions": 3,
                "contents_url": "https://api.github.com/repos/apache/incubator-retired-blur/contents/src/blur-core/src/main/java/org/apache/blur/manager/IndexManager.java?ref=500114e6d2331d7f34b7ad6513280b0920638168",
                "patch": "@@ -106,7 +106,6 @@\n import org.apache.lucene.search.TopDocs;\n import org.apache.lucene.util.ReaderUtil;\n \n-\n public class IndexManager {\n \n   private static final String NOT_FOUND = \"NOT_FOUND\";\n@@ -123,7 +122,6 @@\n   private BlurMetrics _blurMetrics;\n   private QueryMetrics _queryMetrics;\n   private long _defaultParallelCallTimeout = TimeUnit.MINUTES.toMillis(1);\n-  \n \n   public void setMaxClauseCount(int maxClauseCount) {\n     BooleanQuery.setMaxClauseCount(maxClauseCount);\n@@ -867,7 +865,9 @@ private void doUpdateRowMutation(RowMutation mutation, BlurIndex blurIndex) thro\n       long s = System.nanoTime();\n       // Finally, replace the existing row with the new row we have built.\n       blurIndex.replaceRow(mutation.waitToBeVisible, mutation.wal, newRow);\n-      _queryMetrics.recordDataMutate(System.nanoTime() - s, newRow.records.size());\n+      if (newRow != null && newRow.records != null) {\n+        _queryMetrics.recordDataMutate(System.nanoTime() - s, newRow.records.size());\n+      }\n     } else {\n       throw new BException(\"Mutation cannot update row that does not exist.\", mutation);\n     }",
                "deletions": 3
            }
        ]
    },
    {
        "repo": "incubator-retired-blur",
        "message": "Fixing NPE in schema command",
        "commit": "https://github.com/apache/incubator-retired-blur/commit/9482f8ec6c4febd90b0b7938634454b739beb0d0",
        "parent": "https://github.com/apache/incubator-retired-blur/commit/7785babaf01c9d6fa8b27fe695590eb54c4510b3",
        "bug_id": "incubator-retired-blur_10",
        "file": [
            {
                "sha": "dad0ce40eb3a7364ca65ec87cf0b87e0656d1bfa",
                "filename": "blur-shell/src/main/java/org/apache/blur/shell/SchemaTableCommand.java",
                "blob_url": "https://github.com/apache/incubator-retired-blur/blob/9482f8ec6c4febd90b0b7938634454b739beb0d0/blur-shell/src/main/java/org/apache/blur/shell/SchemaTableCommand.java",
                "raw_url": "https://github.com/apache/incubator-retired-blur/raw/9482f8ec6c4febd90b0b7938634454b739beb0d0/blur-shell/src/main/java/org/apache/blur/shell/SchemaTableCommand.java",
                "status": "modified",
                "changes": 22,
                "additions": 13,
                "contents_url": "https://api.github.com/repos/apache/incubator-retired-blur/contents/blur-shell/src/main/java/org/apache/blur/shell/SchemaTableCommand.java?ref=9482f8ec6c4febd90b0b7938634454b739beb0d0",
                "patch": "@@ -56,17 +56,21 @@ public void doit(PrintWriter out, Blur.Iface client, String[] args) throws Comma\n         Map<String, String> properties = columnDefinition.getProperties();\n         String subColumnName = columnDefinition.getSubColumnName();\n         if (subColumnName != null) {\n-          out.println(  \"\\t\\t\\tsubName   : \" + subColumnName);\n-          out.println(  \"\\t\\t\\tfieldType : \" + fieldType);\n-          Map<String, String> props = new TreeMap<String, String>(properties);\n-          for (Entry<String, String> e : props.entrySet()) {\n-            out.println(\"\\t\\t\\tprop      : \" + e);\n+          out.println(\"\\t\\t\\tsubName   : \" + subColumnName);\n+          out.println(\"\\t\\t\\tfieldType : \" + fieldType);\n+          if (properties != null) {\n+            Map<String, String> props = new TreeMap<String, String>(properties);\n+            for (Entry<String, String> e : props.entrySet()) {\n+              out.println(\"\\t\\t\\tprop      : \" + e);\n+            }\n           }\n         } else {\n-          out.println(  \"\\t\\tfieldType : \" + fieldType);\n-          Map<String, String> props = new TreeMap<String, String>(properties);\n-          for (Entry<String, String> e : props.entrySet()) {\n-            out.println(\"\\t\\tprop      : \" + e);\n+          out.println(\"\\t\\tfieldType : \" + fieldType);\n+          if (properties != null) {\n+            Map<String, String> props = new TreeMap<String, String>(properties);\n+            for (Entry<String, String> e : props.entrySet()) {\n+              out.println(\"\\t\\tprop      : \" + e);\n+            }\n           }\n         }\n       }",
                "deletions": 9
            }
        ]
    },
    {
        "repo": "incubator-retired-blur",
        "message": "Fixing NPE in schema command",
        "commit": "https://github.com/apache/incubator-retired-blur/commit/dd1db1c1ffa3860a640392ac103ae2247768d959",
        "parent": "https://github.com/apache/incubator-retired-blur/commit/194740f53fdbc2aeef5b74585bb7c0c3de699cc1",
        "bug_id": "incubator-retired-blur_11",
        "file": [
            {
                "sha": "dad0ce40eb3a7364ca65ec87cf0b87e0656d1bfa",
                "filename": "blur-shell/src/main/java/org/apache/blur/shell/SchemaTableCommand.java",
                "blob_url": "https://github.com/apache/incubator-retired-blur/blob/dd1db1c1ffa3860a640392ac103ae2247768d959/blur-shell/src/main/java/org/apache/blur/shell/SchemaTableCommand.java",
                "raw_url": "https://github.com/apache/incubator-retired-blur/raw/dd1db1c1ffa3860a640392ac103ae2247768d959/blur-shell/src/main/java/org/apache/blur/shell/SchemaTableCommand.java",
                "status": "modified",
                "changes": 22,
                "additions": 13,
                "contents_url": "https://api.github.com/repos/apache/incubator-retired-blur/contents/blur-shell/src/main/java/org/apache/blur/shell/SchemaTableCommand.java?ref=dd1db1c1ffa3860a640392ac103ae2247768d959",
                "patch": "@@ -56,17 +56,21 @@ public void doit(PrintWriter out, Blur.Iface client, String[] args) throws Comma\n         Map<String, String> properties = columnDefinition.getProperties();\n         String subColumnName = columnDefinition.getSubColumnName();\n         if (subColumnName != null) {\n-          out.println(  \"\\t\\t\\tsubName   : \" + subColumnName);\n-          out.println(  \"\\t\\t\\tfieldType : \" + fieldType);\n-          Map<String, String> props = new TreeMap<String, String>(properties);\n-          for (Entry<String, String> e : props.entrySet()) {\n-            out.println(\"\\t\\t\\tprop      : \" + e);\n+          out.println(\"\\t\\t\\tsubName   : \" + subColumnName);\n+          out.println(\"\\t\\t\\tfieldType : \" + fieldType);\n+          if (properties != null) {\n+            Map<String, String> props = new TreeMap<String, String>(properties);\n+            for (Entry<String, String> e : props.entrySet()) {\n+              out.println(\"\\t\\t\\tprop      : \" + e);\n+            }\n           }\n         } else {\n-          out.println(  \"\\t\\tfieldType : \" + fieldType);\n-          Map<String, String> props = new TreeMap<String, String>(properties);\n-          for (Entry<String, String> e : props.entrySet()) {\n-            out.println(\"\\t\\tprop      : \" + e);\n+          out.println(\"\\t\\tfieldType : \" + fieldType);\n+          if (properties != null) {\n+            Map<String, String> props = new TreeMap<String, String>(properties);\n+            for (Entry<String, String> e : props.entrySet()) {\n+              out.println(\"\\t\\tprop      : \" + e);\n+            }\n           }\n         }\n       }",
                "deletions": 9
            }
        ]
    },
    {
        "repo": "incubator-retired-blur",
        "message": "Fixing a NPE in the hdfs index input class.",
        "commit": "https://github.com/apache/incubator-retired-blur/commit/7f837cb84ff5bb59dfd695ab00f2424dd0c21878",
        "parent": "https://github.com/apache/incubator-retired-blur/commit/397d30590beb3cf7ad7411bdccf830ffd93e2a9c",
        "bug_id": "incubator-retired-blur_12",
        "file": [
            {
                "sha": "6c4e9391ec1e363e73e1706fda495e37ac9e7639",
                "filename": "blur-store/src/main/java/org/apache/blur/store/hdfs/HdfsIndexInput.java",
                "blob_url": "https://github.com/apache/incubator-retired-blur/blob/7f837cb84ff5bb59dfd695ab00f2424dd0c21878/blur-store/src/main/java/org/apache/blur/store/hdfs/HdfsIndexInput.java",
                "raw_url": "https://github.com/apache/incubator-retired-blur/raw/7f837cb84ff5bb59dfd695ab00f2424dd0c21878/blur-store/src/main/java/org/apache/blur/store/hdfs/HdfsIndexInput.java",
                "status": "modified",
                "changes": 3,
                "additions": 2,
                "contents_url": "https://api.github.com/repos/apache/incubator-retired-blur/contents/blur-store/src/main/java/org/apache/blur/store/hdfs/HdfsIndexInput.java?ref=7f837cb84ff5bb59dfd695ab00f2424dd0c21878",
                "patch": "@@ -78,11 +78,11 @@ protected void readInternal(byte[] b, int offset, int length) throws IOException\n         } else {\n           LOG.debug(\"Current Pos [{0}] Prev Pos [{1}] Diff [{2}]\", filePointer, _prevFilePointer, filePointer\n               - _prevFilePointer);\n+          _sequentialReadControl.reset();\n         }\n       }\n     }\n     if (_sequentialReadControl.switchToSequentialRead()) {\n-\n       _sequentialReadControl.setEnabled(true);\n       if (_sequentialInput == null) {\n         Tracer trace = Trace.trace(\"filesystem - read - openForSequentialInput\", Trace.param(\"file\", toString()),\n@@ -131,6 +131,7 @@ public IndexInput clone() {\n     HdfsIndexInput clone = (HdfsIndexInput) super.clone();\n     clone._sequentialInput = null;\n     clone._sequentialReadControl = _sequentialReadControl.clone();\n+    clone._sequentialReadControl.reset();\n     return clone;\n   }\n ",
                "deletions": 1
            },
            {
                "sha": "ac72eb9bf4b72e4b8c197eecfd5a68bc3bab20bc",
                "filename": "blur-store/src/main/java/org/apache/blur/store/hdfs/SequentialReadControl.java",
                "blob_url": "https://github.com/apache/incubator-retired-blur/blob/7f837cb84ff5bb59dfd695ab00f2424dd0c21878/blur-store/src/main/java/org/apache/blur/store/hdfs/SequentialReadControl.java",
                "raw_url": "https://github.com/apache/incubator-retired-blur/raw/7f837cb84ff5bb59dfd695ab00f2424dd0c21878/blur-store/src/main/java/org/apache/blur/store/hdfs/SequentialReadControl.java",
                "status": "modified",
                "changes": 8,
                "additions": 7,
                "contents_url": "https://api.github.com/repos/apache/incubator-retired-blur/contents/blur-store/src/main/java/org/apache/blur/store/hdfs/SequentialReadControl.java?ref=7f837cb84ff5bb59dfd695ab00f2424dd0c21878",
                "patch": "@@ -27,11 +27,12 @@\n public class SequentialReadControl implements Cloneable {\n \n   private final BlurConfiguration _configuration;\n+  private final boolean _sequentialReadAllowed = true;\n \n   private long _sequentialReadThreshold;\n   private long _sequentialReadSkipThreshold;\n+\n   private int _sequentialReadDetectorCounter = 0;\n-  private boolean _sequentialReadAllowed = true;\n   private boolean _sequentialRead;\n \n   public SequentialReadControl(BlurConfiguration configuration) {\n@@ -89,4 +90,9 @@ public void setEnabled(boolean sequentialRead) {\n     _sequentialRead = sequentialRead;\n   }\n \n+  public void reset() {\n+    _sequentialRead = false;\n+    _sequentialReadDetectorCounter = 0;\n+  }\n+\n }",
                "deletions": 1
            },
            {
                "sha": "b1d8c8b0990022ce32aed3e95579f4e41923e81d",
                "filename": "blur-store/src/test/java/org/apache/blur/store/BaseDirectoryTestSuite.java",
                "blob_url": "https://github.com/apache/incubator-retired-blur/blob/7f837cb84ff5bb59dfd695ab00f2424dd0c21878/blur-store/src/test/java/org/apache/blur/store/BaseDirectoryTestSuite.java",
                "raw_url": "https://github.com/apache/incubator-retired-blur/raw/7f837cb84ff5bb59dfd695ab00f2424dd0c21878/blur-store/src/test/java/org/apache/blur/store/BaseDirectoryTestSuite.java",
                "status": "modified",
                "changes": 29,
                "additions": 29,
                "contents_url": "https://api.github.com/repos/apache/incubator-retired-blur/contents/blur-store/src/test/java/org/apache/blur/store/BaseDirectoryTestSuite.java?ref=7f837cb84ff5bb59dfd695ab00f2424dd0c21878",
                "patch": "@@ -56,6 +56,8 @@\n import org.junit.Test;\n \n public abstract class BaseDirectoryTestSuite {\n+  private static final String OUT_DAT = \"out.dat\";\n+\n   protected static final File TMPDIR = new File(System.getProperty(\"blur.tmp.dir\",\n       \"./target/tmp/BaseDirectoryTestSuite\"));\n \n@@ -231,6 +233,33 @@ public void testCreateIndex() throws IOException {\n     long e = System.nanoTime();\n     System.out.println(\"Total time [\" + (e - s) / 1000000.0 + \" ms]\");\n   }\n+  \n+  @Test\n+  public void testLongReadAndClone() throws IOException {\n+    FSDirectory control = FSDirectory.open(fileControl);\n+    Directory dir = getControlDir(control, directory);\n+    String name = writeFile(dir,10*1000*1000);\n+    IndexInput input = dir.openInput(name, IOContext.DEFAULT);\n+    readFile(input,1000*1000);\n+    IndexInput clone = input.clone();\n+    clone.readByte();\n+    input.close();\n+  }\n+\n+  private void readFile(IndexInput input, long length) throws IOException {\n+    for (long l = 0;l<length;l++) {\n+      input.readByte();\n+    }\n+  }\n+\n+  private String writeFile(Directory dir, long length) throws IOException {\n+    IndexOutput output = dir.createOutput(OUT_DAT, IOContext.DEFAULT);\n+    for (long l = 0;l<length;l++) {\n+      output.writeByte((byte) 1);\n+    }\n+    output.close();\n+    return OUT_DAT;\n+  }\n \n   private void addDocuments(IndexWriter writer, int numDocs) throws IOException {\n     for (int i = 0; i < numDocs; i++) {",
                "deletions": 0
            }
        ]
    },
    {
        "repo": "incubator-retired-blur",
        "message": "Fixed a NPE on server startup",
        "commit": "https://github.com/apache/incubator-retired-blur/commit/b44ebeb46b88f136321176e287aaaaf40164d247",
        "parent": "https://github.com/apache/incubator-retired-blur/commit/ce74aa2041b946c399c382ea7539c311f9bdc2e7",
        "bug_id": "incubator-retired-blur_13",
        "file": [
            {
                "sha": "8b693cbd93fd72e46c49b7b91c705fc44222af04",
                "filename": "blur-console/src/main/java/org/apache/blur/console/JettyServer.java",
                "blob_url": "https://github.com/apache/incubator-retired-blur/blob/b44ebeb46b88f136321176e287aaaaf40164d247/blur-console/src/main/java/org/apache/blur/console/JettyServer.java",
                "raw_url": "https://github.com/apache/incubator-retired-blur/raw/b44ebeb46b88f136321176e287aaaaf40164d247/blur-console/src/main/java/org/apache/blur/console/JettyServer.java",
                "status": "modified",
                "changes": 4,
                "additions": 2,
                "contents_url": "https://api.github.com/repos/apache/incubator-retired-blur/contents/blur-console/src/main/java/org/apache/blur/console/JettyServer.java?ref=b44ebeb46b88f136321176e287aaaaf40164d247",
                "patch": "@@ -65,9 +65,9 @@ private void createServer() {\n \t\t// for localhost:port/console/index.html and whatever else is in the webapp directory\n \t    URL warUrl = null;\n         if (devMode) {\n-            this.getClass().getClassLoader().getResource(DEV_WEBAPPDIR);\n+            warUrl = this.getClass().getClassLoader().getResource(DEV_WEBAPPDIR);\n         } else {\n-            this.getClass().getClassLoader().getResource(PROD_WEBAPPDIR);\n+            warUrl = this.getClass().getClassLoader().getResource(PROD_WEBAPPDIR);\n         }\n \t    String warUrlString = warUrl.toExternalForm();\n \t    server.setHandler(new WebAppContext(warUrlString, CONTEXTPATH));",
                "deletions": 2
            }
        ]
    },
    {
        "repo": "incubator-retired-blur",
        "message": "Fixing NPE in the Ref dir.",
        "commit": "https://github.com/apache/incubator-retired-blur/commit/20a63d58f1c5f53a585a43c433184fa43ff1ac8d",
        "parent": "https://github.com/apache/incubator-retired-blur/commit/817420840207dd789449b1aa4867bf78cfe3de4e",
        "bug_id": "incubator-retired-blur_14",
        "file": [
            {
                "sha": "6522d6a3bddb4b190524854a252ae4b232683ff5",
                "filename": "blur-store/src/main/java/org/apache/blur/lucene/store/refcounter/DirectoryReferenceFileGC.java",
                "blob_url": "https://github.com/apache/incubator-retired-blur/blob/20a63d58f1c5f53a585a43c433184fa43ff1ac8d/blur-store/src/main/java/org/apache/blur/lucene/store/refcounter/DirectoryReferenceFileGC.java",
                "raw_url": "https://github.com/apache/incubator-retired-blur/raw/20a63d58f1c5f53a585a43c433184fa43ff1ac8d/blur-store/src/main/java/org/apache/blur/lucene/store/refcounter/DirectoryReferenceFileGC.java",
                "status": "modified",
                "changes": 2,
                "additions": 1,
                "contents_url": "https://api.github.com/repos/apache/incubator-retired-blur/contents/blur-store/src/main/java/org/apache/blur/lucene/store/refcounter/DirectoryReferenceFileGC.java?ref=20a63d58f1c5f53a585a43c433184fa43ff1ac8d",
                "patch": "@@ -58,7 +58,7 @@ public Value(Directory directory, String name, Map<String, AtomicInteger> refs)\n \n     public boolean tryToDelete() throws IOException {\n       AtomicInteger counter = refs.get(name);\n-      if (counter.get() <= 0) {\n+      if (counter == null || counter.get() <= 0) {\n         refs.remove(name);\n         LOG.debug(\"Removing file [{0}]\", name);\n         directory.deleteFile(name);",
                "deletions": 1
            }
        ]
    },
    {
        "repo": "incubator-retired-blur",
        "message": "Fixing NPE in the Ref dir.",
        "commit": "https://github.com/apache/incubator-retired-blur/commit/c529affb0fd7bb1138b0dbc4c1ebff7180b9aed4",
        "parent": "https://github.com/apache/incubator-retired-blur/commit/2aa01dcf34f37d410ddc4720ed8744c4eff94484",
        "bug_id": "incubator-retired-blur_15",
        "file": [
            {
                "sha": "6522d6a3bddb4b190524854a252ae4b232683ff5",
                "filename": "blur-store/src/main/java/org/apache/blur/lucene/store/refcounter/DirectoryReferenceFileGC.java",
                "blob_url": "https://github.com/apache/incubator-retired-blur/blob/c529affb0fd7bb1138b0dbc4c1ebff7180b9aed4/blur-store/src/main/java/org/apache/blur/lucene/store/refcounter/DirectoryReferenceFileGC.java",
                "raw_url": "https://github.com/apache/incubator-retired-blur/raw/c529affb0fd7bb1138b0dbc4c1ebff7180b9aed4/blur-store/src/main/java/org/apache/blur/lucene/store/refcounter/DirectoryReferenceFileGC.java",
                "status": "modified",
                "changes": 2,
                "additions": 1,
                "contents_url": "https://api.github.com/repos/apache/incubator-retired-blur/contents/blur-store/src/main/java/org/apache/blur/lucene/store/refcounter/DirectoryReferenceFileGC.java?ref=c529affb0fd7bb1138b0dbc4c1ebff7180b9aed4",
                "patch": "@@ -58,7 +58,7 @@ public Value(Directory directory, String name, Map<String, AtomicInteger> refs)\n \n     public boolean tryToDelete() throws IOException {\n       AtomicInteger counter = refs.get(name);\n-      if (counter.get() <= 0) {\n+      if (counter == null || counter.get() <= 0) {\n         refs.remove(name);\n         LOG.debug(\"Removing file [{0}]\", name);\n         directory.deleteFile(name);",
                "deletions": 1
            }
        ]
    },
    {
        "repo": "incubator-retired-blur",
        "message": "Fixing a NPE in the top command",
        "commit": "https://github.com/apache/incubator-retired-blur/commit/681b40e97ad4a22df16ee4d2f516dd6810660896",
        "parent": "https://github.com/apache/incubator-retired-blur/commit/4f0ec84aa0337afa8411a2869c0175c20b06d9da",
        "bug_id": "incubator-retired-blur_16",
        "file": [
            {
                "sha": "0c7bb10c69caadc9f56eaaa3fa1ad85a85b05baf",
                "filename": "blur-shell/src/main/java/org/apache/blur/shell/TopCommand.java",
                "blob_url": "https://github.com/apache/incubator-retired-blur/blob/681b40e97ad4a22df16ee4d2f516dd6810660896/blur-shell/src/main/java/org/apache/blur/shell/TopCommand.java",
                "raw_url": "https://github.com/apache/incubator-retired-blur/raw/681b40e97ad4a22df16ee4d2f516dd6810660896/blur-shell/src/main/java/org/apache/blur/shell/TopCommand.java",
                "status": "modified",
                "changes": 19,
                "additions": 13,
                "contents_url": "https://api.github.com/repos/apache/incubator-retired-blur/contents/blur-shell/src/main/java/org/apache/blur/shell/TopCommand.java?ref=681b40e97ad4a22df16ee4d2f516dd6810660896",
                "patch": "@@ -171,9 +171,8 @@ public void doitInternal(PrintWriter out, Blur.Iface client, String[] args) thro\n       } else {\n         output.append(truncate(String.format(header.toString(), (Object[]) labels)) + \"\\n\");\n         lineCount++;\n-        SERVER:\n-        for (Entry<String, AtomicReference<Client>> e : new TreeMap<String, AtomicReference<Client>>(shardClients)\n-            .entrySet()) {\n+        SERVER: for (Entry<String, AtomicReference<Client>> e : new TreeMap<String, AtomicReference<Client>>(\n+            shardClients).entrySet()) {\n           String shardServer = e.getKey();\n           AtomicReference<Client> ref = e.getValue();\n           Map<String, Metric> metrics = getMetrics(shardServer, ref, keys);\n@@ -193,10 +192,18 @@ public void doitInternal(PrintWriter out, Blur.Iface client, String[] args) thro\n             for (int i = 1; i < labels.length; i++) {\n               String mn = metricNames.get(labels[i]);\n               Metric metric = metrics.get(mn);\n-              Map<String, Double> doubleMap = metric.getDoubleMap();\n-              Double value = doubleMap.get(\"oneMinuteRate\");\n+              Double value;\n+              if (metric == null) {\n+                value = null;\n+              } else {\n+                Map<String, Double> doubleMap = metric.getDoubleMap();\n+                value = doubleMap.get(\"oneMinuteRate\");\n+                if (value == null) {\n+                  value = doubleMap.get(\"value\");\n+                }\n+              }\n               if (value == null) {\n-                value = doubleMap.get(\"value\");\n+                value = 0.0;\n               }\n               cols[c++] = humanize(value, sizes.contains(mn));\n               sb.append(\" %10s\");",
                "deletions": 6
            }
        ]
    },
    {
        "repo": "incubator-retired-blur",
        "message": "Fixing a NPE in the top command",
        "commit": "https://github.com/apache/incubator-retired-blur/commit/81df87ee7a1a67bbe0a548e3606620fdee74e0f6",
        "parent": "https://github.com/apache/incubator-retired-blur/commit/fb2877f08889041e2f69cb61835f10ac3639e859",
        "bug_id": "incubator-retired-blur_17",
        "file": [
            {
                "sha": "0c7bb10c69caadc9f56eaaa3fa1ad85a85b05baf",
                "filename": "blur-shell/src/main/java/org/apache/blur/shell/TopCommand.java",
                "blob_url": "https://github.com/apache/incubator-retired-blur/blob/81df87ee7a1a67bbe0a548e3606620fdee74e0f6/blur-shell/src/main/java/org/apache/blur/shell/TopCommand.java",
                "raw_url": "https://github.com/apache/incubator-retired-blur/raw/81df87ee7a1a67bbe0a548e3606620fdee74e0f6/blur-shell/src/main/java/org/apache/blur/shell/TopCommand.java",
                "status": "modified",
                "changes": 19,
                "additions": 13,
                "contents_url": "https://api.github.com/repos/apache/incubator-retired-blur/contents/blur-shell/src/main/java/org/apache/blur/shell/TopCommand.java?ref=81df87ee7a1a67bbe0a548e3606620fdee74e0f6",
                "patch": "@@ -171,9 +171,8 @@ public void doitInternal(PrintWriter out, Blur.Iface client, String[] args) thro\n       } else {\n         output.append(truncate(String.format(header.toString(), (Object[]) labels)) + \"\\n\");\n         lineCount++;\n-        SERVER:\n-        for (Entry<String, AtomicReference<Client>> e : new TreeMap<String, AtomicReference<Client>>(shardClients)\n-            .entrySet()) {\n+        SERVER: for (Entry<String, AtomicReference<Client>> e : new TreeMap<String, AtomicReference<Client>>(\n+            shardClients).entrySet()) {\n           String shardServer = e.getKey();\n           AtomicReference<Client> ref = e.getValue();\n           Map<String, Metric> metrics = getMetrics(shardServer, ref, keys);\n@@ -193,10 +192,18 @@ public void doitInternal(PrintWriter out, Blur.Iface client, String[] args) thro\n             for (int i = 1; i < labels.length; i++) {\n               String mn = metricNames.get(labels[i]);\n               Metric metric = metrics.get(mn);\n-              Map<String, Double> doubleMap = metric.getDoubleMap();\n-              Double value = doubleMap.get(\"oneMinuteRate\");\n+              Double value;\n+              if (metric == null) {\n+                value = null;\n+              } else {\n+                Map<String, Double> doubleMap = metric.getDoubleMap();\n+                value = doubleMap.get(\"oneMinuteRate\");\n+                if (value == null) {\n+                  value = doubleMap.get(\"value\");\n+                }\n+              }\n               if (value == null) {\n-                value = doubleMap.get(\"value\");\n+                value = 0.0;\n               }\n               cols[c++] = humanize(value, sizes.contains(mn));\n               sb.append(\" %10s\");",
                "deletions": 6
            }
        ]
    },
    {
        "repo": "incubator-retired-blur",
        "message": "Updating lucene doc security lib to fix a NPE.",
        "commit": "https://github.com/apache/incubator-retired-blur/commit/86a795b6835b08796aae071ea2911ed514dc7469",
        "parent": "https://github.com/apache/incubator-retired-blur/commit/36b2cda32efd48f78de9f146e4b2119e94eac360",
        "bug_id": "incubator-retired-blur_18",
        "file": [
            {
                "sha": "43d299da1d9440c358200a9837458ad767676c15",
                "filename": "blur-store/pom.xml",
                "blob_url": "https://github.com/apache/incubator-retired-blur/blob/86a795b6835b08796aae071ea2911ed514dc7469/blur-store/pom.xml",
                "raw_url": "https://github.com/apache/incubator-retired-blur/raw/86a795b6835b08796aae071ea2911ed514dc7469/blur-store/pom.xml",
                "status": "modified",
                "changes": 2,
                "additions": 1,
                "contents_url": "https://api.github.com/repos/apache/incubator-retired-blur/contents/blur-store/pom.xml?ref=86a795b6835b08796aae071ea2911ed514dc7469",
                "patch": "@@ -64,7 +64,7 @@\n \t\t<dependency>\n \t\t\t<groupId>com.github.amccurry</groupId>\n \t\t\t<artifactId>lucene-document-security</artifactId>\n-\t\t\t<version>0.1.1</version>\n+\t\t\t<version>0.1.2</version>\n \t\t</dependency>\n \t\t<dependency>\n \t\t\t<groupId>commons-cli</groupId>",
                "deletions": 1
            },
            {
                "sha": "fb75545841b1a4c084b882aa786d660b129b8598",
                "filename": "lib/com/github/amccurry/lucene-document-security/0.1.1/lucene-document-security-0.1.1-tests.jar",
                "blob_url": "https://github.com/apache/incubator-retired-blur/blob/36b2cda32efd48f78de9f146e4b2119e94eac360/lib/com/github/amccurry/lucene-document-security/0.1.1/lucene-document-security-0.1.1-tests.jar",
                "raw_url": "https://github.com/apache/incubator-retired-blur/raw/36b2cda32efd48f78de9f146e4b2119e94eac360/lib/com/github/amccurry/lucene-document-security/0.1.1/lucene-document-security-0.1.1-tests.jar",
                "status": "removed",
                "changes": 0,
                "additions": 0,
                "contents_url": "https://api.github.com/repos/apache/incubator-retired-blur/contents/lib/com/github/amccurry/lucene-document-security/0.1.1/lucene-document-security-0.1.1-tests.jar?ref=36b2cda32efd48f78de9f146e4b2119e94eac360",
                "deletions": 0
            },
            {
                "sha": "dc4cad664a451d0cfdc218556ca939f341e17cfb",
                "filename": "lib/com/github/amccurry/lucene-document-security/0.1.1/lucene-document-security-0.1.1.jar",
                "blob_url": "https://github.com/apache/incubator-retired-blur/blob/36b2cda32efd48f78de9f146e4b2119e94eac360/lib/com/github/amccurry/lucene-document-security/0.1.1/lucene-document-security-0.1.1.jar",
                "raw_url": "https://github.com/apache/incubator-retired-blur/raw/36b2cda32efd48f78de9f146e4b2119e94eac360/lib/com/github/amccurry/lucene-document-security/0.1.1/lucene-document-security-0.1.1.jar",
                "status": "removed",
                "changes": 0,
                "additions": 0,
                "contents_url": "https://api.github.com/repos/apache/incubator-retired-blur/contents/lib/com/github/amccurry/lucene-document-security/0.1.1/lucene-document-security-0.1.1.jar?ref=36b2cda32efd48f78de9f146e4b2119e94eac360",
                "deletions": 0
            },
            {
                "sha": "8ef5f59b42615f48f3df763d6b32ba9dc6003af3",
                "filename": "lib/com/github/amccurry/lucene-document-security/0.1.2/lucene-document-security-0.1.2-tests.jar",
                "blob_url": "https://github.com/apache/incubator-retired-blur/blob/86a795b6835b08796aae071ea2911ed514dc7469/lib/com/github/amccurry/lucene-document-security/0.1.2/lucene-document-security-0.1.2-tests.jar",
                "raw_url": "https://github.com/apache/incubator-retired-blur/raw/86a795b6835b08796aae071ea2911ed514dc7469/lib/com/github/amccurry/lucene-document-security/0.1.2/lucene-document-security-0.1.2-tests.jar",
                "status": "added",
                "changes": 0,
                "additions": 0,
                "contents_url": "https://api.github.com/repos/apache/incubator-retired-blur/contents/lib/com/github/amccurry/lucene-document-security/0.1.2/lucene-document-security-0.1.2-tests.jar?ref=86a795b6835b08796aae071ea2911ed514dc7469",
                "deletions": 0
            },
            {
                "sha": "ce76c19f03a68713f0a38bbb7bcb9f1a74235091",
                "filename": "lib/com/github/amccurry/lucene-document-security/0.1.2/lucene-document-security-0.1.2.jar",
                "blob_url": "https://github.com/apache/incubator-retired-blur/blob/86a795b6835b08796aae071ea2911ed514dc7469/lib/com/github/amccurry/lucene-document-security/0.1.2/lucene-document-security-0.1.2.jar",
                "raw_url": "https://github.com/apache/incubator-retired-blur/raw/86a795b6835b08796aae071ea2911ed514dc7469/lib/com/github/amccurry/lucene-document-security/0.1.2/lucene-document-security-0.1.2.jar",
                "status": "added",
                "changes": 0,
                "additions": 0,
                "contents_url": "https://api.github.com/repos/apache/incubator-retired-blur/contents/lib/com/github/amccurry/lucene-document-security/0.1.2/lucene-document-security-0.1.2.jar?ref=86a795b6835b08796aae071ea2911ed514dc7469",
                "deletions": 0
            },
            {
                "sha": "d124b2a72588c4be444410b0bc10adba60e93dcd",
                "filename": "lib/com/github/amccurry/lucene-document-security/0.1.2/lucene-document-security-0.1.2.pom",
                "blob_url": "https://github.com/apache/incubator-retired-blur/blob/86a795b6835b08796aae071ea2911ed514dc7469/lib/com/github/amccurry/lucene-document-security/0.1.2/lucene-document-security-0.1.2.pom",
                "raw_url": "https://github.com/apache/incubator-retired-blur/raw/86a795b6835b08796aae071ea2911ed514dc7469/lib/com/github/amccurry/lucene-document-security/0.1.2/lucene-document-security-0.1.2.pom",
                "status": "renamed",
                "changes": 2,
                "additions": 1,
                "contents_url": "https://api.github.com/repos/apache/incubator-retired-blur/contents/lib/com/github/amccurry/lucene-document-security/0.1.2/lucene-document-security-0.1.2.pom?ref=86a795b6835b08796aae071ea2911ed514dc7469",
                "patch": "@@ -22,7 +22,7 @@ under the License.\n \t<modelVersion>4.0.0</modelVersion>\n \t<groupId>com.github.amccurry</groupId>\n \t<artifactId>lucene-document-security</artifactId>\n-\t<version>0.1.1</version>\n+\t<version>0.1.2</version>\n \t<packaging>jar</packaging>\n \t<name>Lucene Document Security</name>\n \t<description>Provides an API for Document level security in Lucene.</description>",
                "deletions": 1,
                "previous_filename": "lib/com/github/amccurry/lucene-document-security/0.1.1/lucene-document-security-0.1.1.pom"
            }
        ]
    },
    {
        "repo": "incubator-retired-blur",
        "message": "Fixed a NPE when accessing thrit through the TServelet",
        "commit": "https://github.com/apache/incubator-retired-blur/commit/0ac70060fad2c9f5ab5ebfe0323e19140008e325",
        "parent": "https://github.com/apache/incubator-retired-blur/commit/5e7edf81ad4a4be74945cf882e3c1f14f193cc37",
        "bug_id": "incubator-retired-blur_19",
        "file": [
            {
                "sha": "0e440e0355aa9250d659b1901932cf3b817192ba",
                "filename": "blur-core/src/main/java/org/apache/blur/utils/BlurUtil.java",
                "blob_url": "https://github.com/apache/incubator-retired-blur/blob/0ac70060fad2c9f5ab5ebfe0323e19140008e325/blur-core/src/main/java/org/apache/blur/utils/BlurUtil.java",
                "raw_url": "https://github.com/apache/incubator-retired-blur/raw/0ac70060fad2c9f5ab5ebfe0323e19140008e325/blur-core/src/main/java/org/apache/blur/utils/BlurUtil.java",
                "status": "modified",
                "changes": 12,
                "additions": 10,
                "contents_url": "https://api.github.com/repos/apache/incubator-retired-blur/contents/blur-core/src/main/java/org/apache/blur/utils/BlurUtil.java?ref=0ac70060fad2c9f5ab5ebfe0323e19140008e325",
                "patch": "@@ -162,10 +162,18 @@ public Object invoke(Object proxy, Method method, Object[] args) throws Throwabl\n         String connectionString;\n         if (controller) {\n           ControllerServerContext controllerServerContext = ControllerServerContext.getShardServerContext();\n-          connectionString = controllerServerContext.getConnectionString();\n+          if (controllerServerContext == null) {\n+            connectionString = \"unknown\";\n+          } else {\n+            connectionString = controllerServerContext.getConnectionString();  \n+          }\n         } else {\n           ShardServerContext shardServerContext = ShardServerContext.getShardServerContext();\n-          connectionString = shardServerContext.getConnectionString();\n+          if (shardServerContext == null) {\n+            connectionString = \"unknown\";\n+          } else {\n+            connectionString = shardServerContext.getConnectionString();\n+          }\n         }\n         String argsStr = null;\n         long start = System.nanoTime();",
                "deletions": 2
            }
        ]
    },
    {
        "repo": "incubator-retired-blur",
        "message": "Fixed a NPE when accessing thrit through the TServelet",
        "commit": "https://github.com/apache/incubator-retired-blur/commit/e9b42ee099275cde3cb56a08e5bd5f0334d5fe95",
        "parent": "https://github.com/apache/incubator-retired-blur/commit/bdb9a7f141901b329c1accaae8b2e0f86518fc3b",
        "bug_id": "incubator-retired-blur_20",
        "file": [
            {
                "sha": "0e440e0355aa9250d659b1901932cf3b817192ba",
                "filename": "blur-core/src/main/java/org/apache/blur/utils/BlurUtil.java",
                "blob_url": "https://github.com/apache/incubator-retired-blur/blob/e9b42ee099275cde3cb56a08e5bd5f0334d5fe95/blur-core/src/main/java/org/apache/blur/utils/BlurUtil.java",
                "raw_url": "https://github.com/apache/incubator-retired-blur/raw/e9b42ee099275cde3cb56a08e5bd5f0334d5fe95/blur-core/src/main/java/org/apache/blur/utils/BlurUtil.java",
                "status": "modified",
                "changes": 12,
                "additions": 10,
                "contents_url": "https://api.github.com/repos/apache/incubator-retired-blur/contents/blur-core/src/main/java/org/apache/blur/utils/BlurUtil.java?ref=e9b42ee099275cde3cb56a08e5bd5f0334d5fe95",
                "patch": "@@ -162,10 +162,18 @@ public Object invoke(Object proxy, Method method, Object[] args) throws Throwabl\n         String connectionString;\n         if (controller) {\n           ControllerServerContext controllerServerContext = ControllerServerContext.getShardServerContext();\n-          connectionString = controllerServerContext.getConnectionString();\n+          if (controllerServerContext == null) {\n+            connectionString = \"unknown\";\n+          } else {\n+            connectionString = controllerServerContext.getConnectionString();  \n+          }\n         } else {\n           ShardServerContext shardServerContext = ShardServerContext.getShardServerContext();\n-          connectionString = shardServerContext.getConnectionString();\n+          if (shardServerContext == null) {\n+            connectionString = \"unknown\";\n+          } else {\n+            connectionString = shardServerContext.getConnectionString();\n+          }\n         }\n         String argsStr = null;\n         long start = System.nanoTime();",
                "deletions": 2
            }
        ]
    },
    {
        "repo": "incubator-retired-blur",
        "message": "Unit test was breaking because of a NPE.",
        "commit": "https://github.com/apache/incubator-retired-blur/commit/ebce22d9c57bbe3f0558100f19c23e3306cc0cc2",
        "parent": "https://github.com/apache/incubator-retired-blur/commit/07f0756fd7ecd571aabfe51b15584f52d768fb16",
        "bug_id": "incubator-retired-blur_21",
        "file": [
            {
                "sha": "4d04459ae1c07aed4ca524afad780cd8eed95c11",
                "filename": "blur-core/src/main/java/org/apache/blur/manager/IndexManager.java",
                "blob_url": "https://github.com/apache/incubator-retired-blur/blob/ebce22d9c57bbe3f0558100f19c23e3306cc0cc2/blur-core/src/main/java/org/apache/blur/manager/IndexManager.java",
                "raw_url": "https://github.com/apache/incubator-retired-blur/raw/ebce22d9c57bbe3f0558100f19c23e3306cc0cc2/blur-core/src/main/java/org/apache/blur/manager/IndexManager.java",
                "status": "modified",
                "changes": 40,
                "additions": 24,
                "contents_url": "https://api.github.com/repos/apache/incubator-retired-blur/contents/blur-core/src/main/java/org/apache/blur/manager/IndexManager.java?ref=ebce22d9c57bbe3f0558100f19c23e3306cc0cc2",
                "patch": "@@ -154,11 +154,13 @@ public void setMaxClauseCount(int maxClauseCount) {\n   }\n \n   public void init() {\n-    _readRecordsMeter = Metrics.newMeter(new MetricName(ORG_APACHE_BLUR, BLUR, \"Read Records/s\"), \"Records/s\", TimeUnit.SECONDS);\n+    _readRecordsMeter = Metrics.newMeter(new MetricName(ORG_APACHE_BLUR, BLUR, \"Read Records/s\"), \"Records/s\",\n+        TimeUnit.SECONDS);\n     _readRowMeter = Metrics.newMeter(new MetricName(ORG_APACHE_BLUR, BLUR, \"Read Row/s\"), \"Row/s\", TimeUnit.SECONDS);\n-    _writeRecordsMeter = Metrics.newMeter(new MetricName(ORG_APACHE_BLUR, BLUR, \"Write Records/s\"), \"Records/s\", TimeUnit.SECONDS);\n+    _writeRecordsMeter = Metrics.newMeter(new MetricName(ORG_APACHE_BLUR, BLUR, \"Write Records/s\"), \"Records/s\",\n+        TimeUnit.SECONDS);\n     _writeRowMeter = Metrics.newMeter(new MetricName(ORG_APACHE_BLUR, BLUR, \"Write Row/s\"), \"Row/s\", TimeUnit.SECONDS);\n-    \n+\n     _queriesExternalMeter = Metrics.newMeter(new MetricName(ORG_APACHE_BLUR, BLUR, \"External Queries/s\"),\n         \"External Queries/s\", TimeUnit.SECONDS);\n     _queriesInternalMeter = Metrics.newMeter(new MetricName(ORG_APACHE_BLUR, BLUR, \"Internal Queries/s\"),\n@@ -204,13 +206,15 @@ public void fetchRow(String table, Selector selector, FetchResult fetchResult) t\n       Map<String, BlurIndex> blurIndexes = _indexServer.getIndexes(table);\n       if (blurIndexes == null) {\n         LOG.error(\"Table [{0}] not found\", table);\n-        //@TODO probably should make a enum for not found on this server so the controller knows to try another server.\n+        // @TODO probably should make a enum for not found on this server so the\n+        // controller knows to try another server.\n         throw new BException(\"Table [\" + table + \"] not found\");\n       }\n       index = blurIndexes.get(shard);\n       if (index == null) {\n         LOG.error(\"Shard [{0}] not found in table [{1}]\", shard, table);\n-        //@TODO probably should make a enum for not found on this server so the controller knows to try another server.\n+        // @TODO probably should make a enum for not found on this server so the\n+        // controller knows to try another server.\n         throw new BException(\"Shard [\" + shard + \"] not found in table [\" + table + \"]\");\n       }\n     } catch (BlurException e) {\n@@ -235,7 +239,8 @@ public void fetchRow(String table, Selector selector, FetchResult fetchResult) t\n \n       Query highlightQuery = getHighlightQuery(selector, table, analyzer);\n \n-      fetchRow(searcher.getIndexReader(), table, shard, selector, fetchResult, highlightQuery, analyzer, _maxHeapPerRowFetch);\n+      fetchRow(searcher.getIndexReader(), table, shard, selector, fetchResult, highlightQuery, analyzer,\n+          _maxHeapPerRowFetch);\n       if (fetchResult.rowResult != null) {\n         if (fetchResult.rowResult.row != null && fetchResult.rowResult.row.records != null) {\n           _readRecordsMeter.mark(fetchResult.rowResult.row.records.size());\n@@ -419,7 +424,7 @@ public void cancel() {\n       BlurQueryStatus queryStatus = status.getQueryStatus();\n       QueryState state = queryStatus.getState();\n       if (state == QueryState.BACK_PRESSURE_INTERRUPTED) {\n-        throw new BlurException(\"Cannot execute query right now.\", null, ErrorType.BACK_PRESSURE);  \n+        throw new BlurException(\"Cannot execute query right now.\", null, ErrorType.BACK_PRESSURE);\n       } else if (state == QueryState.INTERRUPTED) {\n         throw new BlurException(\"Cannot execute query right now.\", null, ErrorType.QUERY_CANCEL);\n       }\n@@ -428,7 +433,7 @@ public void cancel() {\n       BlurQueryStatus queryStatus = status.getQueryStatus();\n       QueryState state = queryStatus.getState();\n       if (state == QueryState.BACK_PRESSURE_INTERRUPTED) {\n-        throw new BlurException(\"Cannot execute query right now.\", null, ErrorType.BACK_PRESSURE);  \n+        throw new BlurException(\"Cannot execute query right now.\", null, ErrorType.BACK_PRESSURE);\n       } else if (state == QueryState.INTERRUPTED) {\n         throw new BlurException(\"Cannot execute query right now.\", null, ErrorType.QUERY_CANCEL);\n       }\n@@ -511,13 +516,14 @@ public BlurQueryStatus queryStatus(String table, long uuid) {\n     return _statusManager.queryStatusIdList(table);\n   }\n \n-  public static void fetchRow(IndexReader reader, String table, String shard, Selector selector, FetchResult fetchResult,\n-      Query highlightQuery, int maxHeap) throws CorruptIndexException, IOException {\n+  public static void fetchRow(IndexReader reader, String table, String shard, Selector selector,\n+      FetchResult fetchResult, Query highlightQuery, int maxHeap) throws CorruptIndexException, IOException {\n     fetchRow(reader, table, shard, selector, fetchResult, highlightQuery, null, maxHeap);\n   }\n \n-  public static void fetchRow(IndexReader reader, String table, String shard, Selector selector, FetchResult fetchResult,\n-      Query highlightQuery, BlurAnalyzer analyzer, int maxHeap) throws CorruptIndexException, IOException {\n+  public static void fetchRow(IndexReader reader, String table, String shard, Selector selector,\n+      FetchResult fetchResult, Query highlightQuery, BlurAnalyzer analyzer, int maxHeap) throws CorruptIndexException,\n+      IOException {\n     fetchResult.table = table;\n     String locationId = selector.locationId;\n     int lastSlash = locationId.lastIndexOf('/');\n@@ -962,7 +968,10 @@ private void doMutate(RowMutation mutation) throws BlurException, IOException {\n \n   private Row updateMetrics(Row row) {\n     _writeRowMeter.mark();\n-    _writeRecordsMeter.mark(row.getRecords().size());\n+    List<Record> records = row.getRecords();\n+    if (records != null) {\n+      _writeRecordsMeter.mark(records.size());\n+    }\n     return row;\n   }\n \n@@ -1184,14 +1193,13 @@ public void optimize(String table, int numberOfSegmentsPerShard) throws BExcepti\n   public void setClusterStatus(ClusterStatus clusterStatus) {\n     _clusterStatus = clusterStatus;\n   }\n-  \n+\n   public void setFetchCount(int fetchCount) {\n     _fetchCount = fetchCount;\n   }\n-  \n+\n   public void setMaxHeapPerRowFetch(int maxHeapPerRowFetch) {\n     _maxHeapPerRowFetch = maxHeapPerRowFetch;\n   }\n-  \n \n }",
                "deletions": 16
            }
        ]
    },
    {
        "repo": "incubator-retired-blur",
        "message": "Hit a bug during startup that caused a NPE.",
        "commit": "https://github.com/apache/incubator-retired-blur/commit/7ef345f8f01e459435e5b1302754ce12dbe10d0f",
        "parent": "https://github.com/apache/incubator-retired-blur/commit/be55844a7047c2a1a8026576202956f915321405",
        "bug_id": "incubator-retired-blur_22",
        "file": [
            {
                "sha": "4597ffac95b693fa2d8897bf043221e022fbefae",
                "filename": "blur-store/src/main/java/org/apache/blur/store/blockcache/BlockCache.java",
                "blob_url": "https://github.com/apache/incubator-retired-blur/blob/7ef345f8f01e459435e5b1302754ce12dbe10d0f/blur-store/src/main/java/org/apache/blur/store/blockcache/BlockCache.java",
                "raw_url": "https://github.com/apache/incubator-retired-blur/raw/7ef345f8f01e459435e5b1302754ce12dbe10d0f/blur-store/src/main/java/org/apache/blur/store/blockcache/BlockCache.java",
                "status": "modified",
                "changes": 3,
                "additions": 3,
                "contents_url": "https://api.github.com/repos/apache/incubator-retired-blur/contents/blur-store/src/main/java/org/apache/blur/store/blockcache/BlockCache.java?ref=7ef345f8f01e459435e5b1302754ce12dbe10d0f",
                "patch": "@@ -262,6 +262,9 @@ private ByteBuffer getSlab(int slabId) {\n   }\n \n   public int getSize() {\n+    if (_cache == null) {\n+      return 0;\n+    }\n     return _cache.size();\n   }\n ",
                "deletions": 0
            }
        ]
    },
    {
        "repo": "incubator-retired-blur",
        "message": "Adding an error message instead of NPE for missing required argument.  Fixed BLUR-351.",
        "commit": "https://github.com/apache/incubator-retired-blur/commit/1c7aba2619270aa64747f2dae6fc7756e51d382a",
        "parent": "https://github.com/apache/incubator-retired-blur/commit/47ff43380157b75c0f703d3e482f13e5e2335656",
        "bug_id": "incubator-retired-blur_23",
        "file": [
            {
                "sha": "2533813b4d66bc0aac3d8dc35808e1a87df4fb8d",
                "filename": "blur-query/src/main/java/org/apache/blur/analysis/type/spatial/BaseSpatialFieldTypeDefinition.java",
                "blob_url": "https://github.com/apache/incubator-retired-blur/blob/1c7aba2619270aa64747f2dae6fc7756e51d382a/blur-query/src/main/java/org/apache/blur/analysis/type/spatial/BaseSpatialFieldTypeDefinition.java",
                "raw_url": "https://github.com/apache/incubator-retired-blur/raw/1c7aba2619270aa64747f2dae6fc7756e51d382a/blur-query/src/main/java/org/apache/blur/analysis/type/spatial/BaseSpatialFieldTypeDefinition.java",
                "status": "modified",
                "changes": 7,
                "additions": 5,
                "contents_url": "https://api.github.com/repos/apache/incubator-retired-blur/contents/blur-query/src/main/java/org/apache/blur/analysis/type/spatial/BaseSpatialFieldTypeDefinition.java?ref=1c7aba2619270aa64747f2dae6fc7756e51d382a",
                "patch": "@@ -122,9 +122,12 @@ protected Shape getShape(Column column) {\n     return _shapeReadWriter.readShape(column.getValue());\n   }\n \n-  protected SpatialPrefixTree getSpatialPrefixTree(Map<String, String> properties) {\n+  protected SpatialPrefixTree getSpatialPrefixTree(String field, Map<String, String> properties) {\n     String spatialPrefixTreeStr = properties.get(SPATIAL_PREFIX_TREE);\n-    if (spatialPrefixTreeStr.equals(GEOHASH_PREFIX_TREE)) {\n+    if (spatialPrefixTreeStr == null) {\n+      throw new IllegalArgumentException(\"Property [\" + SPATIAL_PREFIX_TREE + \"] is missing from type def for field [\"\n+          + field + \"]\");\n+    } else if (spatialPrefixTreeStr.equals(GEOHASH_PREFIX_TREE)) {\n       int maxLevels = getMaxLevels(properties);\n       return new GeohashPrefixTree(_ctx, maxLevels);\n     } else if (spatialPrefixTreeStr.equals(QUAD_PREFIX_TREE)) {",
                "deletions": 2
            },
            {
                "sha": "879cd0d3fe346e7b91adf912ef78111686f41f20",
                "filename": "blur-query/src/main/java/org/apache/blur/analysis/type/spatial/SpatialRecursivePrefixTreeStrategyFieldTypeDefinition.java",
                "blob_url": "https://github.com/apache/incubator-retired-blur/blob/1c7aba2619270aa64747f2dae6fc7756e51d382a/blur-query/src/main/java/org/apache/blur/analysis/type/spatial/SpatialRecursivePrefixTreeStrategyFieldTypeDefinition.java",
                "raw_url": "https://github.com/apache/incubator-retired-blur/raw/1c7aba2619270aa64747f2dae6fc7756e51d382a/blur-query/src/main/java/org/apache/blur/analysis/type/spatial/SpatialRecursivePrefixTreeStrategyFieldTypeDefinition.java",
                "status": "modified",
                "changes": 2,
                "additions": 1,
                "contents_url": "https://api.github.com/repos/apache/incubator-retired-blur/contents/blur-query/src/main/java/org/apache/blur/analysis/type/spatial/SpatialRecursivePrefixTreeStrategyFieldTypeDefinition.java?ref=1c7aba2619270aa64747f2dae6fc7756e51d382a",
                "patch": "@@ -52,7 +52,7 @@ public Analyzer getAnalyzerForIndex(String fieldName) {\n   @Override\n   public void configure(String fieldNameForThisInstance, Map<String, String> properties, Configuration configuration) {\n     _ctx = SpatialContext.GEO;\n-    _grid = getSpatialPrefixTree(properties);\n+    _grid = getSpatialPrefixTree(fieldNameForThisInstance, properties);\n     boolean docValue = false;\n     if (properties.get(DOC_VALUE) != null) {\n       docValue = true;",
                "deletions": 1
            },
            {
                "sha": "3ad7bf89896208f46cab7033fae40f0fa1df934a",
                "filename": "blur-query/src/main/java/org/apache/blur/analysis/type/spatial/SpatialTermQueryPrefixTreeStrategyFieldTypeDefinition.java",
                "blob_url": "https://github.com/apache/incubator-retired-blur/blob/1c7aba2619270aa64747f2dae6fc7756e51d382a/blur-query/src/main/java/org/apache/blur/analysis/type/spatial/SpatialTermQueryPrefixTreeStrategyFieldTypeDefinition.java",
                "raw_url": "https://github.com/apache/incubator-retired-blur/raw/1c7aba2619270aa64747f2dae6fc7756e51d382a/blur-query/src/main/java/org/apache/blur/analysis/type/spatial/SpatialTermQueryPrefixTreeStrategyFieldTypeDefinition.java",
                "status": "modified",
                "changes": 2,
                "additions": 1,
                "contents_url": "https://api.github.com/repos/apache/incubator-retired-blur/contents/blur-query/src/main/java/org/apache/blur/analysis/type/spatial/SpatialTermQueryPrefixTreeStrategyFieldTypeDefinition.java?ref=1c7aba2619270aa64747f2dae6fc7756e51d382a",
                "patch": "@@ -56,7 +56,7 @@ public void configure(String fieldNameForThisInstance, Map<String, String> prope\n     if (properties.get(DOC_VALUE) != null) {\n       docValue = true;\n     }\n-    _grid = getSpatialPrefixTree(properties);\n+    _grid = getSpatialPrefixTree(fieldNameForThisInstance, properties);\n     _strategy = new TermQueryPrefixTreeStrategy(_grid, fieldNameForThisInstance, docValue);\n     _shapeReadWriter = new ShapeReadWriter<SpatialContext>(_ctx);\n     addSupportedIndexedShapes(Point.class);",
                "deletions": 1
            }
        ]
    },
    {
        "repo": "incubator-retired-blur",
        "message": "fix npe on search page when there are no tables",
        "commit": "https://github.com/apache/incubator-retired-blur/commit/0b98f42e150b73e386c986b893ef1250bb8d2b5d",
        "parent": "https://github.com/apache/incubator-retired-blur/commit/1ccb5ae6f6d04b8c0679032a9fb43cefd724c8f7",
        "bug_id": "incubator-retired-blur_24",
        "file": [
            {
                "sha": "99b8a88e61934362dc1593dcac0082fdd6829249",
                "filename": "blur-admin/app/views/search/show.html.haml",
                "blob_url": "https://github.com/apache/incubator-retired-blur/blob/0b98f42e150b73e386c986b893ef1250bb8d2b5d/blur-admin/app/views/search/show.html.haml",
                "raw_url": "https://github.com/apache/incubator-retired-blur/raw/0b98f42e150b73e386c986b893ef1250bb8d2b5d/blur-admin/app/views/search/show.html.haml",
                "status": "modified",
                "changes": 2,
                "additions": 1,
                "contents_url": "https://api.github.com/repos/apache/incubator-retired-blur/contents/blur-admin/app/views/search/show.html.haml?ref=0b98f42e150b73e386c986b893ef1250bb8d2b5d",
                "patch": "@@ -14,7 +14,7 @@\n               :src => image_path(\"loader.gif\"),\n               :alt => \"Loading...\"}\n         #blur-table\n-          = select_tag :blur_table, grouped_options_for_select(@filter_table_collection, @blur_table.id)\n+          = select_tag :blur_table, grouped_options_for_select(@filter_table_collection, @blur_table ? @blur_table.id : nil)\n         #advanced\n           .header\n             Advanced",
                "deletions": 1
            }
        ]
    },
    {
        "repo": "incubator-retired-blur",
        "message": "Fixing possible NPE for metric when asked for metric before construction of cache map is complete.",
        "commit": "https://github.com/apache/incubator-retired-blur/commit/19749a390bf29ca799c911cc93a662fd57ad2c6d",
        "parent": "https://github.com/apache/incubator-retired-blur/commit/77e1f4f2f0f73c1e7c392e4453abf0566d868b76",
        "bug_id": "incubator-retired-blur_25",
        "file": [
            {
                "sha": "382fecd392b972c8d32b4e549d4ad280c74c370b",
                "filename": "blur-core/src/main/java/org/apache/blur/server/cache/ThriftCache.java",
                "blob_url": "https://github.com/apache/incubator-retired-blur/blob/19749a390bf29ca799c911cc93a662fd57ad2c6d/blur-core/src/main/java/org/apache/blur/server/cache/ThriftCache.java",
                "raw_url": "https://github.com/apache/incubator-retired-blur/raw/19749a390bf29ca799c911cc93a662fd57ad2c6d/blur-core/src/main/java/org/apache/blur/server/cache/ThriftCache.java",
                "status": "modified",
                "changes": 32,
                "additions": 16,
                "contents_url": "https://api.github.com/repos/apache/incubator-retired-blur/contents/blur-core/src/main/java/org/apache/blur/server/cache/ThriftCache.java?ref=19749a390bf29ca799c911cc93a662fd57ad2c6d",
                "patch": "@@ -84,6 +84,22 @@ public ThriftCache(long totalNumberOfBytes) {\n     _hits = Metrics.newMeter(new MetricName(ORG_APACHE_BLUR, THRIFT_CACHE, HIT), HIT, TimeUnit.SECONDS);\n     _misses = Metrics.newMeter(new MetricName(ORG_APACHE_BLUR, THRIFT_CACHE, MISS), MISS, TimeUnit.SECONDS);\n     _evictions = Metrics.newMeter(new MetricName(ORG_APACHE_BLUR, THRIFT_CACHE, EVICTION), EVICTION, TimeUnit.SECONDS);\n+    _cacheMap = new ConcurrentLinkedHashMap.Builder<ThriftCacheKey<?>, ThriftCacheValue<?>>()\n+        .weigher(new EntryWeigher<ThriftCacheKey<?>, ThriftCacheValue<?>>() {\n+          @Override\n+          public int weightOf(ThriftCacheKey<?> key, ThriftCacheValue<?> value) {\n+            return key.size() + value.size();\n+          }\n+        }).listener(new EvictionListener<ThriftCacheKey<?>, ThriftCacheValue<?>>() {\n+          @Override\n+          public void onEviction(ThriftCacheKey<?> key, ThriftCacheValue<?> value) {\n+            _evictions.mark();\n+            _evictionsAtomicLong.incrementAndGet();\n+          }\n+        }).maximumWeightedCapacity(totalNumberOfBytes).build();\n+    _hitsAtomicLong = new AtomicLong();\n+    _missesAtomicLong = new AtomicLong();\n+    _evictionsAtomicLong = new AtomicLong();\n     Metrics.newGauge(new MetricName(ORG_APACHE_BLUR, THRIFT_CACHE, SIZE), new Gauge<Long>() {\n       @Override\n       public Long value() {\n@@ -102,22 +118,6 @@ public Long value() {\n         return (long) _attributeKeys.size();\n       }\n     });\n-    _cacheMap = new ConcurrentLinkedHashMap.Builder<ThriftCacheKey<?>, ThriftCacheValue<?>>()\n-        .weigher(new EntryWeigher<ThriftCacheKey<?>, ThriftCacheValue<?>>() {\n-          @Override\n-          public int weightOf(ThriftCacheKey<?> key, ThriftCacheValue<?> value) {\n-            return key.size() + value.size();\n-          }\n-        }).listener(new EvictionListener<ThriftCacheKey<?>, ThriftCacheValue<?>>() {\n-          @Override\n-          public void onEviction(ThriftCacheKey<?> key, ThriftCacheValue<?> value) {\n-            _evictions.mark();\n-            _evictionsAtomicLong.incrementAndGet();\n-          }\n-        }).maximumWeightedCapacity(totalNumberOfBytes).build();\n-    _hitsAtomicLong = new AtomicLong();\n-    _missesAtomicLong = new AtomicLong();\n-    _evictionsAtomicLong = new AtomicLong();\n   }\n \n   public <K extends TBase<?, ?>, V extends TBase<?, ?>> V put(ThriftCacheKey<K> key, V t) throws BlurException {",
                "deletions": 16
            }
        ]
    },
    {
        "repo": "incubator-retired-blur",
        "message": "Fixing a NPE if a table is disabled and commands are trying to be executed.",
        "commit": "https://github.com/apache/incubator-retired-blur/commit/ddeaf8da339acf8197ca2f15ceca1fa54ff420c0",
        "parent": "https://github.com/apache/incubator-retired-blur/commit/310d0c62164b6171299410c95b6811f7cd4ae368",
        "bug_id": "incubator-retired-blur_26",
        "file": [
            {
                "sha": "a29867be22ebf88ed441d5d931b9f34e3879a5ef",
                "filename": "blur-core/src/main/java/org/apache/blur/thrift/BlurControllerServer.java",
                "blob_url": "https://github.com/apache/incubator-retired-blur/blob/ddeaf8da339acf8197ca2f15ceca1fa54ff420c0/blur-core/src/main/java/org/apache/blur/thrift/BlurControllerServer.java",
                "raw_url": "https://github.com/apache/incubator-retired-blur/raw/ddeaf8da339acf8197ca2f15ceca1fa54ff420c0/blur-core/src/main/java/org/apache/blur/thrift/BlurControllerServer.java",
                "status": "modified",
                "changes": 6,
                "additions": 6,
                "contents_url": "https://api.github.com/repos/apache/incubator-retired-blur/contents/blur-core/src/main/java/org/apache/blur/thrift/BlurControllerServer.java?ref=ddeaf8da339acf8197ca2f15ceca1fa54ff420c0",
                "patch": "@@ -1604,7 +1604,13 @@ public boolean isValidServer(Server server, Set<String> tables, Set<Shard> shard\n             return true;\n           }\n           Map<String, Map<String, String>> layout = _shardServerLayout.get();\n+          if (layout == null) {\n+            return false;\n+          }\n           Map<String, String> shardIdToServerMap = layout.get(table);\n+          if (shardIdToServerMap == null) {\n+            return false;\n+          }\n           for (Shard shard : shards) {\n             String serverId = shardIdToServerMap.get(shard.getShard());\n             if (serverId.equals(server.getServer())) {",
                "deletions": 0
            }
        ]
    },
    {
        "repo": "incubator-retired-blur",
        "message": "Fixing a NPE when accessing the length of a evicted detachable cache value.",
        "commit": "https://github.com/apache/incubator-retired-blur/commit/d9ebd44f0d4dd5b9c3cacef0fbe0cddae271e865",
        "parent": "https://github.com/apache/incubator-retired-blur/commit/87f6fa5d84e6fb8ea9008619407769435c7075b9",
        "bug_id": "incubator-retired-blur_27",
        "file": [
            {
                "sha": "d98637bc7291e913c7059c16af7e792e92741fc2",
                "filename": "blur-store/src/main/java/org/apache/blur/store/blockcache_v2/BaseCache.java",
                "blob_url": "https://github.com/apache/incubator-retired-blur/blob/d9ebd44f0d4dd5b9c3cacef0fbe0cddae271e865/blur-store/src/main/java/org/apache/blur/store/blockcache_v2/BaseCache.java",
                "raw_url": "https://github.com/apache/incubator-retired-blur/raw/d9ebd44f0d4dd5b9c3cacef0fbe0cddae271e865/blur-store/src/main/java/org/apache/blur/store/blockcache_v2/BaseCache.java",
                "status": "modified",
                "changes": 6,
                "additions": 5,
                "contents_url": "https://api.github.com/repos/apache/incubator-retired-blur/contents/blur-store/src/main/java/org/apache/blur/store/blockcache_v2/BaseCache.java?ref=d9ebd44f0d4dd5b9c3cacef0fbe0cddae271e865",
                "patch": "@@ -74,7 +74,11 @@ public void onEviction(CacheKey key, CacheValue value) {\n   class BaseCacheWeigher implements Weigher<CacheValue> {\n     @Override\n     public int weightOf(CacheValue value) {\n-      return value.length();\n+      try {\n+        return value.length();\n+      } catch (EvictionException e) {\n+        return 0;\n+      }\n     }\n   }\n ",
                "deletions": 1
            },
            {
                "sha": "dfdbccceaeb9f88826262aa6294b2c6b53eecdf4",
                "filename": "blur-store/src/main/java/org/apache/blur/store/blockcache_v2/CacheIndexInput.java",
                "blob_url": "https://github.com/apache/incubator-retired-blur/blob/d9ebd44f0d4dd5b9c3cacef0fbe0cddae271e865/blur-store/src/main/java/org/apache/blur/store/blockcache_v2/CacheIndexInput.java",
                "raw_url": "https://github.com/apache/incubator-retired-blur/raw/d9ebd44f0d4dd5b9c3cacef0fbe0cddae271e865/blur-store/src/main/java/org/apache/blur/store/blockcache_v2/CacheIndexInput.java",
                "status": "modified",
                "changes": 6,
                "additions": 5,
                "contents_url": "https://api.github.com/repos/apache/incubator-retired-blur/contents/blur-store/src/main/java/org/apache/blur/store/blockcache_v2/CacheIndexInput.java?ref=d9ebd44f0d4dd5b9c3cacef0fbe0cddae271e865",
                "patch": "@@ -364,7 +364,11 @@ private byte readByteFromCache() throws EvictionException {\n   }\n \n   private int remaining() {\n-    return _cacheValue.length() - _blockPosition;\n+    try {\n+      return _cacheValue.length() - _blockPosition;\n+    } catch (EvictionException e) {\n+      return 0;\n+    }\n   }\n \n   private void tryToFill() throws IOException {",
                "deletions": 1
            },
            {
                "sha": "2d5c567eacb686e058dea325932357806d9a8149",
                "filename": "blur-store/src/main/java/org/apache/blur/store/blockcache_v2/CacheValue.java",
                "blob_url": "https://github.com/apache/incubator-retired-blur/blob/d9ebd44f0d4dd5b9c3cacef0fbe0cddae271e865/blur-store/src/main/java/org/apache/blur/store/blockcache_v2/CacheValue.java",
                "raw_url": "https://github.com/apache/incubator-retired-blur/raw/d9ebd44f0d4dd5b9c3cacef0fbe0cddae271e865/blur-store/src/main/java/org/apache/blur/store/blockcache_v2/CacheValue.java",
                "status": "modified",
                "changes": 3,
                "additions": 2,
                "contents_url": "https://api.github.com/repos/apache/incubator-retired-blur/contents/blur-store/src/main/java/org/apache/blur/store/blockcache_v2/CacheValue.java?ref=d9ebd44f0d4dd5b9c3cacef0fbe0cddae271e865",
                "patch": "@@ -32,8 +32,9 @@\n    * The length of the data in this block.\n    * \n    * @return the length.\n+   * @throws EvictionException \n    */\n-  int length();\n+  int length() throws EvictionException;\n \n   /**\n    * Writes data out to a given position in this block.",
                "deletions": 1
            },
            {
                "sha": "968edab4f58373aba50eeaa277cc673e1fde57d3",
                "filename": "blur-store/src/main/java/org/apache/blur/store/blockcache_v2/CacheValueBufferPool.java",
                "blob_url": "https://github.com/apache/incubator-retired-blur/blob/d9ebd44f0d4dd5b9c3cacef0fbe0cddae271e865/blur-store/src/main/java/org/apache/blur/store/blockcache_v2/CacheValueBufferPool.java",
                "raw_url": "https://github.com/apache/incubator-retired-blur/raw/d9ebd44f0d4dd5b9c3cacef0fbe0cddae271e865/blur-store/src/main/java/org/apache/blur/store/blockcache_v2/CacheValueBufferPool.java",
                "status": "modified",
                "changes": 14,
                "additions": 9,
                "contents_url": "https://api.github.com/repos/apache/incubator-retired-blur/contents/blur-store/src/main/java/org/apache/blur/store/blockcache_v2/CacheValueBufferPool.java?ref=d9ebd44f0d4dd5b9c3cacef0fbe0cddae271e865",
                "patch": "@@ -91,13 +91,17 @@ private CacheValue createCacheValue(int cacheBlockSize) {\n   }\n \n   public void returnToPool(CacheValue cacheValue) {\n-    if (cacheValue == null) {\n+    if (cacheValue == null || cacheValue.isEvicted()) {\n       return;\n     }\n-    BlockingQueue<CacheValue> blockingQueue = getPool(cacheValue.length());\n-    if (!blockingQueue.offer(cacheValue)) {\n-      _detroyed.mark();\n-      cacheValue.release();\n+    try {\n+      BlockingQueue<CacheValue> blockingQueue = getPool(cacheValue.length());\n+      if (!blockingQueue.offer(cacheValue)) {\n+        _detroyed.mark();\n+        cacheValue.release();\n+      }\n+    } catch (EvictionException e) {\n+      return;\n     }\n   }\n ",
                "deletions": 5
            },
            {
                "sha": "e5ce99d6f8ee72f69467f050e632a9f0def51778",
                "filename": "blur-store/src/main/java/org/apache/blur/store/blockcache_v2/cachevalue/DetachableCacheValue.java",
                "blob_url": "https://github.com/apache/incubator-retired-blur/blob/d9ebd44f0d4dd5b9c3cacef0fbe0cddae271e865/blur-store/src/main/java/org/apache/blur/store/blockcache_v2/cachevalue/DetachableCacheValue.java",
                "raw_url": "https://github.com/apache/incubator-retired-blur/raw/d9ebd44f0d4dd5b9c3cacef0fbe0cddae271e865/blur-store/src/main/java/org/apache/blur/store/blockcache_v2/cachevalue/DetachableCacheValue.java",
                "status": "modified",
                "changes": 3,
                "additions": 2,
                "contents_url": "https://api.github.com/repos/apache/incubator-retired-blur/contents/blur-store/src/main/java/org/apache/blur/store/blockcache_v2/cachevalue/DetachableCacheValue.java?ref=d9ebd44f0d4dd5b9c3cacef0fbe0cddae271e865",
                "patch": "@@ -63,7 +63,8 @@ public CacheValue detachFromCache() {\n   }\n \n   @Override\n-  public int length() {\n+  public int length() throws EvictionException {\n+    checkEviction();\n     return _baseCacheValue.length();\n   }\n ",
                "deletions": 1
            },
            {
                "sha": "a87f28f87b32db963212087cfc310d142b70f2f9",
                "filename": "blur-store/src/test/java/org/apache/blur/store/blockcache_v2/CacheIndexInputTest.java",
                "blob_url": "https://github.com/apache/incubator-retired-blur/blob/d9ebd44f0d4dd5b9c3cacef0fbe0cddae271e865/blur-store/src/test/java/org/apache/blur/store/blockcache_v2/CacheIndexInputTest.java",
                "raw_url": "https://github.com/apache/incubator-retired-blur/raw/d9ebd44f0d4dd5b9c3cacef0fbe0cddae271e865/blur-store/src/test/java/org/apache/blur/store/blockcache_v2/CacheIndexInputTest.java",
                "status": "modified",
                "changes": 6,
                "additions": 5,
                "contents_url": "https://api.github.com/repos/apache/incubator-retired-blur/contents/blur-store/src/test/java/org/apache/blur/store/blockcache_v2/CacheIndexInputTest.java?ref=d9ebd44f0d4dd5b9c3cacef0fbe0cddae271e865",
                "patch": "@@ -184,7 +184,11 @@ public void onEviction(CacheKey key, CacheValue value) {\n     Weigher<CacheValue> weigher = new Weigher<CacheValue>() {\n       @Override\n       public int weightOf(CacheValue value) {\n-        return value.length();\n+        try {\n+          return value.length();\n+        } catch (EvictionException e) {\n+          return 0;\n+        }\n       }\n     };\n     long maximumWeightedCapacity = 1 * 1024 * 1024;",
                "deletions": 1
            }
        ]
    },
    {
        "repo": "incubator-retired-blur",
        "message": "Fixed the NPE with an incorrect option for the terms command",
        "commit": "https://github.com/apache/incubator-retired-blur/commit/00668043ca8d50ef27ec17be9fdf6e139c53c929",
        "parent": "https://github.com/apache/incubator-retired-blur/commit/fa96db6f23950b30f7b3c700c1e73f7f1b610011",
        "bug_id": "incubator-retired-blur_28",
        "file": [
            {
                "sha": "823b1456ccd02e7352d7e352ffe8381f16b5c171",
                "filename": "blur-shell/src/main/java/org/apache/blur/shell/TermsDataCommand.java",
                "blob_url": "https://github.com/apache/incubator-retired-blur/blob/00668043ca8d50ef27ec17be9fdf6e139c53c929/blur-shell/src/main/java/org/apache/blur/shell/TermsDataCommand.java",
                "raw_url": "https://github.com/apache/incubator-retired-blur/raw/00668043ca8d50ef27ec17be9fdf6e139c53c929/blur-shell/src/main/java/org/apache/blur/shell/TermsDataCommand.java",
                "status": "modified",
                "changes": 49,
                "additions": 23,
                "contents_url": "https://api.github.com/repos/apache/incubator-retired-blur/contents/blur-shell/src/main/java/org/apache/blur/shell/TermsDataCommand.java?ref=00668043ca8d50ef27ec17be9fdf6e139c53c929",
                "patch": "@@ -29,11 +29,9 @@\n import org.apache.blur.thirdparty.thrift_0_9_0.TException;\n import org.apache.blur.thrift.generated.Blur;\n import org.apache.blur.thrift.generated.BlurException;\n-import org.apache.blur.thrift.generated.TableDescriptor;\n import org.apache.commons.cli.CommandLine;\n import org.apache.commons.cli.CommandLineParser;\n import org.apache.commons.cli.HelpFormatter;\n-import org.apache.commons.cli.Option;\n import org.apache.commons.cli.OptionBuilder;\n import org.apache.commons.cli.Options;\n import org.apache.commons.cli.ParseException;\n@@ -48,45 +46,46 @@ public void doit(PrintWriter outPw, Blur.Iface client, String[] args) throws Com\n       throw new CommandException(\"Invalid args: \" + help());\n     }\n \n-    try{\n-      doitInternal(outPw,client,args);\n-    }\n-    catch (FinishedException e) {\n+    try {\n+      doitInternal(outPw, client, args);\n+    } catch (FinishedException e) {\n       if (Main.debug) {\n         e.printStackTrace();\n       }\n     }\n   }\n \n   private void doitInternal(PrintWriter outPw, Blur.Iface client, String[] args) throws FinishedException,\n-    BlurException, TException{\n+      BlurException, TException {\n     PagingPrintWriter out = new PagingPrintWriter(outPw);\n     CommandLine cmd = parse(args, outPw);\n+    if (cmd == null) {\n+      return;\n+    }\n \n     String tablename = args[1];\n     String familyPlusColumn = args[2];\n     String family = null;\n     String column = familyPlusColumn;\n     String startWith = \"\";\n     short size = 100;\n-      \n-        \n-    if (familyPlusColumn.contains(\".\")){\n+\n+    if (familyPlusColumn.contains(\".\")) {\n       int index = familyPlusColumn.indexOf(\".\");\n       family = familyPlusColumn.substring(0, index);\n       column = familyPlusColumn.substring(index + 1);\n     }\n \n-    if (cmd.hasOption(\"n\")){\n+    if (cmd.hasOption(\"n\")) {\n       size = Short.parseShort(cmd.getOptionValue(\"n\"));\n     }\n \n-    if (cmd.hasOption(\"s\")){\n+    if (cmd.hasOption(\"s\")) {\n       startWith = cmd.getOptionValue(\"s\");\n     }\n \n     boolean checkFreq = false;\n-    if (cmd.hasOption(\"F\")){\n+    if (cmd.hasOption(\"F\")) {\n       checkFreq = true;\n     }\n \n@@ -98,13 +97,11 @@ private void doitInternal(PrintWriter outPw, Blur.Iface client, String[] args) t\n       out.setLineLimit(terminal.getHeight() - 2);\n     }\n \n-    List<String> terms = client.terms(tablename,family,column,startWith,size);\n-    for (int i=0;i<terms.size(); i++){\n-      if (checkFreq){\n-        out.println(terms.get(i)+\"\\t\"+client.recordFrequency(tablename,family,column,terms.get(i)));\n-      }\n-      else\n-      {\n+    List<String> terms = client.terms(tablename, family, column, startWith, size);\n+    for (int i = 0; i < terms.size(); i++) {\n+      if (checkFreq) {\n+        out.println(terms.get(i) + \"\\t\" + client.recordFrequency(tablename, family, column, terms.get(i)));\n+      } else {\n         out.println(terms.get(i));\n       }\n     }\n@@ -128,10 +125,10 @@ public String name() {\n   @SuppressWarnings(\"static-access\")\n   private static CommandLine parse(String[] otherArgs, Writer out) {\n     Options options = new Options();\n-    options.addOption(OptionBuilder.withArgName(\"startwith\").hasArg()\n-        .withDescription(\"The value to start with.\").create(\"s\"));\n-    options.addOption(OptionBuilder.withArgName(\"size\").hasArg()\n-        .withDescription(\"The number of terms to return.\").create(\"n\"));\n+    options.addOption(OptionBuilder.withArgName(\"startwith\").hasArg().withDescription(\"The value to start with.\")\n+        .create(\"s\"));\n+    options.addOption(OptionBuilder.withArgName(\"size\").hasArg().withDescription(\"The number of terms to return.\")\n+        .create(\"n\"));\n     options.addOption(OptionBuilder.withDescription(\"Get the frequency of each term.\").create(\"F\"));\n \n     CommandLineParser parser = new PosixParser();\n@@ -141,8 +138,8 @@ private static CommandLine parse(String[] otherArgs, Writer out) {\n     } catch (ParseException e) {\n       HelpFormatter formatter = new HelpFormatter();\n       PrintWriter pw = new PrintWriter(out, true);\n-      formatter.printHelp(pw, HelpFormatter.DEFAULT_WIDTH, \"terms\", null, options,\n-          HelpFormatter.DEFAULT_LEFT_PAD, HelpFormatter.DEFAULT_DESC_PAD, null, false);\n+      formatter.printHelp(pw, HelpFormatter.DEFAULT_WIDTH, \"terms\", null, options, HelpFormatter.DEFAULT_LEFT_PAD,\n+          HelpFormatter.DEFAULT_DESC_PAD, null, false);\n       return null;\n     }\n     return cmd;",
                "deletions": 26
            }
        ]
    },
    {
        "repo": "incubator-retired-blur",
        "message": "(#123) Allow the last record in a row to be deleted without throwing a NullPointerException.  This results in the row being removed altogether because the row has no records left.",
        "commit": "https://github.com/apache/incubator-retired-blur/commit/f66660e9f2bd57633c179463060da6b75a3b9e95",
        "parent": "https://github.com/apache/incubator-retired-blur/commit/5a36a196621d2b59a044413b0f4975c840bafbda",
        "bug_id": "incubator-retired-blur_29",
        "file": [
            {
                "sha": "72569a1ecbefff089bcf0bbbd04bc2793174ada4",
                "filename": "src/blur-core/src/main/java/com/nearinfinity/blur/utils/RowWalIndexWriter.java",
                "blob_url": "https://github.com/apache/incubator-retired-blur/blob/f66660e9f2bd57633c179463060da6b75a3b9e95/src/blur-core/src/main/java/com/nearinfinity/blur/utils/RowWalIndexWriter.java",
                "raw_url": "https://github.com/apache/incubator-retired-blur/raw/f66660e9f2bd57633c179463060da6b75a3b9e95/src/blur-core/src/main/java/com/nearinfinity/blur/utils/RowWalIndexWriter.java",
                "status": "modified",
                "changes": 6,
                "additions": 4,
                "contents_url": "https://api.github.com/repos/apache/incubator-retired-blur/contents/src/blur-core/src/main/java/com/nearinfinity/blur/utils/RowWalIndexWriter.java?ref=f66660e9f2bd57633c179463060da6b75a3b9e95",
                "patch": "@@ -72,8 +72,10 @@ public void replace(boolean wal, Row row) throws IOException {\n   private void append(boolean wal, Row row, boolean replace) throws IOException {\n     primeDocSet = false;\n     List<Document> documents = new ArrayList<Document>();\n-    for (Record record : row.records) {\n-      convert(row.id, record, documents);\n+    if (row.records != null) {\n+      for (Record record : row.records) {\n+        convert(row.id, record, documents);\n+      }\n     }\n     if (replace) {\n       _indexWriter.updateDocuments(wal, new Term(ROW_ID, row.id), documents, _analyzer);",
                "deletions": 2
            },
            {
                "sha": "29e632423e99b35ed2ea31b3f4013c8decdef5cb",
                "filename": "src/blur-core/src/test/java/com/nearinfinity/blur/manager/IndexManagerTest.java",
                "blob_url": "https://github.com/apache/incubator-retired-blur/blob/f66660e9f2bd57633c179463060da6b75a3b9e95/src/blur-core/src/test/java/com/nearinfinity/blur/manager/IndexManagerTest.java",
                "raw_url": "https://github.com/apache/incubator-retired-blur/raw/f66660e9f2bd57633c179463060da6b75a3b9e95/src/blur-core/src/test/java/com/nearinfinity/blur/manager/IndexManagerTest.java",
                "status": "modified",
                "changes": 17,
                "additions": 17,
                "contents_url": "https://api.github.com/repos/apache/incubator-retired-blur/contents/src/blur-core/src/test/java/com/nearinfinity/blur/manager/IndexManagerTest.java?ref=f66660e9f2bd57633c179463060da6b75a3b9e95",
                "patch": "@@ -54,6 +54,8 @@\n import com.nearinfinity.blur.thrift.generated.FetchRecordResult;\n import com.nearinfinity.blur.thrift.generated.FetchResult;\n import com.nearinfinity.blur.thrift.generated.Record;\n+import com.nearinfinity.blur.thrift.generated.RecordMutation;\n+import com.nearinfinity.blur.thrift.generated.RecordMutationType;\n import com.nearinfinity.blur.thrift.generated.Row;\n import com.nearinfinity.blur.thrift.generated.RowMutation;\n import com.nearinfinity.blur.thrift.generated.RowMutationType;\n@@ -411,4 +413,19 @@ public void testMutationDeleteRow() throws Exception {\n     assertNull(\"row should be deleted\", fetchResult.rowResult);\n   }\n \n+  @Test\n+  public void testMutationUpdateRowDeleteLastRecord() throws Exception {\n+    RecordMutation recordMutation = newRecordMutation(\"test-family\", \"record-2\");\n+    recordMutation.setRecordMutationType(RecordMutationType.DELETE_ENTIRE_RECORD);\n+\n+    RowMutation rowMutation = newRowMutation(TABLE, \"row-2\", recordMutation);\n+    rowMutation.setRowMutationType(RowMutationType.UPDATE_ROW);\n+    indexManager.mutate(rowMutation);\n+\n+    Selector selector = new Selector().setRowId(\"row-2\");\n+    FetchResult fetchResult = new FetchResult();\n+    indexManager.fetchRow(TABLE, selector, fetchResult);\n+    assertNull(\"row should not exist\", fetchResult.rowResult);\n+  }\n+\n }",
                "deletions": 0
            }
        ]
    },
    {
        "repo": "incubator-retired-blur",
        "message": "Add some more terms coverage; fix NPE when terms is called with a startsWith value that doesn't exist",
        "commit": "https://github.com/apache/incubator-retired-blur/commit/ce7fecc5dcb45caed939acec8c0a6835db2b9bcb",
        "parent": "https://github.com/apache/incubator-retired-blur/commit/dc0bb7ccbd651503cb7b29da98aee45f0e179a51",
        "bug_id": "incubator-retired-blur_30",
        "file": [
            {
                "sha": "0fad37410e284b4a52d23f4d56926a5bc6d76334",
                "filename": "blur-core/src/main/java/org/apache/blur/manager/IndexManager.java",
                "blob_url": "https://github.com/apache/incubator-retired-blur/blob/ce7fecc5dcb45caed939acec8c0a6835db2b9bcb/blur-core/src/main/java/org/apache/blur/manager/IndexManager.java",
                "raw_url": "https://github.com/apache/incubator-retired-blur/raw/ce7fecc5dcb45caed939acec8c0a6835db2b9bcb/blur-core/src/main/java/org/apache/blur/manager/IndexManager.java",
                "status": "modified",
                "changes": 12,
                "additions": 8,
                "contents_url": "https://api.github.com/repos/apache/incubator-retired-blur/contents/blur-core/src/main/java/org/apache/blur/manager/IndexManager.java?ref=ce7fecc5dcb45caed939acec8c0a6835db2b9bcb",
                "patch": "@@ -111,6 +111,7 @@\n import org.apache.lucene.index.Term;\n import org.apache.lucene.index.Terms;\n import org.apache.lucene.index.TermsEnum;\n+import org.apache.lucene.index.TermsEnum.SeekStatus;\n import org.apache.lucene.queries.BooleanFilter;\n import org.apache.lucene.queryparser.classic.ParseException;\n import org.apache.lucene.search.BooleanClause.Occur;\n@@ -1013,15 +1014,18 @@ public static long recordFrequency(IndexReader reader, String columnFamily, Stri\n     List<String> terms = new ArrayList<String>(size);\n     AtomicReader areader = BlurUtil.getAtomicReader(reader);\n     Terms termsAll = areader.terms(term.field());\n-\n+    \n     if (termsAll == null) {\n       return terms;\n     }\n \n     TermsEnum termEnum = termsAll.iterator(null);\n-\n-    termEnum.seekCeil(term.bytes());\n-\n+    SeekStatus status = termEnum.seekCeil(term.bytes());\n+    \n+    if (status == SeekStatus.END) {\n+      return terms;\n+    }\n+    \n     BytesRef currentTermText = termEnum.term();\n     do {\n       terms.add(currentTermText.utf8ToString());",
                "deletions": 4
            },
            {
                "sha": "ae906fef3f2d67f28d3dd5d824d6ee89f0e80bc2",
                "filename": "blur-core/src/test/java/org/apache/blur/thrift/TermsTests.java",
                "blob_url": "https://github.com/apache/incubator-retired-blur/blob/ce7fecc5dcb45caed939acec8c0a6835db2b9bcb/blur-core/src/test/java/org/apache/blur/thrift/TermsTests.java",
                "raw_url": "https://github.com/apache/incubator-retired-blur/raw/ce7fecc5dcb45caed939acec8c0a6835db2b9bcb/blur-core/src/test/java/org/apache/blur/thrift/TermsTests.java",
                "status": "modified",
                "changes": 54,
                "additions": 53,
                "contents_url": "https://api.github.com/repos/apache/incubator-retired-blur/contents/blur-core/src/test/java/org/apache/blur/thrift/TermsTests.java?ref=ce7fecc5dcb45caed939acec8c0a6835db2b9bcb",
                "patch": "@@ -16,6 +16,7 @@\n  * limitations under the License.\n  */\n import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertNotNull;\n \n import java.io.IOException;\n import java.util.List;\n@@ -27,7 +28,7 @@\n import com.google.common.collect.Lists;\n \n public class TermsTests extends BaseClusterTest {\n-\n+  \n   @Test\n   public void testTermsList() throws BlurException, TException, IOException, InterruptedException {\n     final String tableName = \"testTermsList\";\n@@ -39,6 +40,57 @@ public void testTermsList() throws BlurException, TException, IOException, Inter\n     \n     assertEquals(list, terms);\n   }\n+  \n+  @Test\n+  public void shouldBeAbleToSkipToTerms() throws Exception {\n+    final String tableName = \"shouldBeAbleToNavigateTerms\";\n+    TableGen.define(tableName)\n+      .cols(\"test\", \"col1\")\n+      .addRecord(\"1\",\"1\", \"aaa\")\n+      .addRecord(\"2\",\"2\", \"bbb\")\n+      .addRecord(\"3\",\"3\", \"ccc\")\n+      .addRecord(\"4\",\"4\", \"ddd\")\n+      .build(getClient());\n+    \n+    List<String> terms = getClient().terms(tableName, \"test\", \"col1\", \"c\", (short)10);\n+    List<String> expected = Lists.newArrayList(\"ccc\", \"ddd\");\n+    \n+    assertEquals(expected, terms);\n+  }\n+  \n+  @Test\n+  public void shouldOnlyReturnNumberOfTermsRequested() throws Exception {\n+    final String tableName = \"shouldOnlyReturnNumberOfTermsRequested\";\n+    TableGen.define(tableName)\n+      .cols(\"test\", \"col1\")\n+      .addRecord(\"1\",\"1\", \"aaa\")\n+      .addRecord(\"2\",\"2\", \"bbb\")\n+      .addRecord(\"3\",\"3\", \"ccc\")\n+      .addRecord(\"4\",\"4\", \"ddd\")\n+      .build(getClient());\n+    \n+    List<String> terms = getClient().terms(tableName, \"test\", \"col1\", \"c\", (short)1);\n+    List<String> expected = Lists.newArrayList(\"ccc\");\n+    \n+    assertEquals(expected, terms);\n+  }\n+  \n+  @Test\n+  public void shouldGetEmptyListForNonExistentTerms() throws Exception {\n+    final String tableName = \"shouldGetEmptyListForNonExistantTerms\";\n+    TableGen.define(tableName)\n+      .cols(\"test\", \"col1\")\n+      .addRecord(\"1\",\"1\", \"aaa\")\n+      .addRecord(\"2\",\"2\", \"bbb\")\n+      .addRecord(\"3\",\"3\", \"ccc\")\n+      .addRecord(\"4\",\"4\", \"ddd\")\n+      .build(getClient());\n+    \n+    List<String> terms = getClient().terms(tableName, \"test\", \"col1\", \"z\", (short)1);\n+    assertNotNull(terms);\n+    assertEquals(0, terms.size());\n+  }\n+  \n   @Test(expected=BlurException.class)\n   public void termsShouldFailOnUnknownTable() throws BlurException, TException {\n     getClient().terms(\"termsShouldFailOnUnknownTable\", \"test\",\"col1\", null, (short)10);",
                "deletions": 1
            }
        ]
    },
    {
        "repo": "incubator-retired-blur",
        "message": "Dealing with a NPE exception likely not a real error, but maksing the real issue with the test.",
        "commit": "https://github.com/apache/incubator-retired-blur/commit/77e65aed23bcbf2835fc6e4850347e9478ebf173",
        "parent": "https://github.com/apache/incubator-retired-blur/commit/0756d357d21da8826cca52db71abe498a69feb72",
        "bug_id": "incubator-retired-blur_31",
        "file": [
            {
                "sha": "0dd0d3c7caccecca38d58f49a0b3fa516acbb634",
                "filename": "blur-util/src/test/java/org/apache/blur/zookeeper/ZkMiniCluster.java",
                "blob_url": "https://github.com/apache/incubator-retired-blur/blob/77e65aed23bcbf2835fc6e4850347e9478ebf173/blur-util/src/test/java/org/apache/blur/zookeeper/ZkMiniCluster.java",
                "raw_url": "https://github.com/apache/incubator-retired-blur/raw/77e65aed23bcbf2835fc6e4850347e9478ebf173/blur-util/src/test/java/org/apache/blur/zookeeper/ZkMiniCluster.java",
                "status": "modified",
                "changes": 4,
                "additions": 3,
                "contents_url": "https://api.github.com/repos/apache/incubator-retired-blur/contents/blur-util/src/test/java/org/apache/blur/zookeeper/ZkMiniCluster.java?ref=77e65aed23bcbf2835fc6e4850347e9478ebf173",
                "patch": "@@ -174,7 +174,9 @@ public void process(WatchedEvent event) {\n   }\n \n   public void shutdownZooKeeper() {\n-    zooKeeperServerMain.shutdown();\n+    if (zooKeeperServerMain != null) {\n+      zooKeeperServerMain.shutdown();\n+    }\n   }\n \n   private static void rm(File file) {",
                "deletions": 1
            }
        ]
    },
    {
        "repo": "incubator-retired-blur",
        "message": "Fixed a NPE in the fetching of a row with both columns to fetch and families to fetch being used with different families.",
        "commit": "https://github.com/apache/incubator-retired-blur/commit/ae3141357d358f8423b7449611644acee96a7ede",
        "parent": "https://github.com/apache/incubator-retired-blur/commit/d72ce236fdfae218bc113652b87e30df0b28643d",
        "bug_id": "incubator-retired-blur_32",
        "file": [
            {
                "sha": "da1b0ddc3c3cc9317db37fbb1f259b8a2ff7be6c",
                "filename": "blur-core/src/main/java/org/apache/blur/utils/BlurUtil.java",
                "blob_url": "https://github.com/apache/incubator-retired-blur/blob/ae3141357d358f8423b7449611644acee96a7ede/blur-core/src/main/java/org/apache/blur/utils/BlurUtil.java",
                "raw_url": "https://github.com/apache/incubator-retired-blur/raw/ae3141357d358f8423b7449611644acee96a7ede/blur-core/src/main/java/org/apache/blur/utils/BlurUtil.java",
                "status": "modified",
                "changes": 4,
                "additions": 4,
                "contents_url": "https://api.github.com/repos/apache/incubator-retired-blur/contents/blur-core/src/main/java/org/apache/blur/utils/BlurUtil.java?ref=ae3141357d358f8423b7449611644acee96a7ede",
                "patch": "@@ -856,6 +856,10 @@ public static int countDocuments(IndexReader reader, Term term) throws IOExcepti\n     if (columnFamiliesToFetch == null || columnFamiliesToFetch.isEmpty()) {\n       return docs;\n     }\n+    Map<String, Set<String>> columnsToFetch = selector.getColumnsToFetch();\n+    if (columnsToFetch != null) {\n+      columnFamiliesToFetch.addAll(columnsToFetch.keySet());\n+    }\n     final Map<String, Integer> familyOrdering = getFamilyOrdering(columnFamiliesToFetch);\n     Collections.sort(docs, new Comparator<Document>() {\n       @Override",
                "deletions": 0
            },
            {
                "sha": "e805930a814ff15950ca0aa5939ebcac945a6761",
                "filename": "blur-core/src/test/java/org/apache/blur/manager/IndexManagerTest.java",
                "blob_url": "https://github.com/apache/incubator-retired-blur/blob/ae3141357d358f8423b7449611644acee96a7ede/blur-core/src/test/java/org/apache/blur/manager/IndexManagerTest.java",
                "raw_url": "https://github.com/apache/incubator-retired-blur/raw/ae3141357d358f8423b7449611644acee96a7ede/blur-core/src/test/java/org/apache/blur/manager/IndexManagerTest.java",
                "status": "modified",
                "changes": 43,
                "additions": 43,
                "contents_url": "https://api.github.com/repos/apache/incubator-retired-blur/contents/blur-core/src/test/java/org/apache/blur/manager/IndexManagerTest.java?ref=ae3141357d358f8423b7449611644acee96a7ede",
                "patch": "@@ -40,6 +40,7 @@\n import java.io.IOException;\n import java.util.ArrayList;\n import java.util.Arrays;\n+import java.util.HashSet;\n import java.util.List;\n import java.util.Random;\n import java.util.UUID;\n@@ -595,6 +596,48 @@ public void testFetchRowByRowId() throws Exception {\n     assertEquals(row, fetchResult.rowResult.row);\n   }\n \n+  @Test\n+  public void testFetchRowByRowIdWithFamilySet() throws Exception {\n+    Selector selector = new Selector().setRowId(\"row-6\");\n+    selector.addToColumnFamiliesToFetch(FAMILY2);\n+    FetchResult fetchResult = new FetchResult();\n+    indexManager.fetchRow(TABLE, selector, fetchResult);\n+    assertNotNull(fetchResult.rowResult.row);\n+    Row row = newRow(\"row-6\", newRecord(FAMILY2, \"record-6C\", newColumn(\"testcol18\", \"value501\")));\n+    row.recordCount = 1;\n+    assertEquals(row, fetchResult.rowResult.row);\n+  }\n+\n+  @Test\n+  public void testFetchRowByRowIdWithColumnSet() throws Exception {\n+    Selector selector = new Selector().setRowId(\"row-6\");\n+    selector.putToColumnsToFetch(FAMILY, new HashSet<String>(Arrays.asList(\"testcol12\")));\n+\n+    FetchResult fetchResult = new FetchResult();\n+    indexManager.fetchRow(TABLE, selector, fetchResult);\n+    assertNotNull(fetchResult.rowResult.row);\n+    Row row = newRow(\"row-6\", newRecord(FAMILY, \"record-6A\", newColumn(\"testcol12\", \"value110\")),\n+        newRecord(FAMILY, \"record-6B\", newColumn(\"testcol12\", \"value101\")));\n+    row.recordCount = 2;\n+    assertEquals(row, fetchResult.rowResult.row);\n+  }\n+\n+  @Test\n+  public void testFetchRowByRowIdWithFamilyAndColumnSet() throws Exception {\n+    Selector selector = new Selector().setRowId(\"row-6\");\n+    selector.addToColumnFamiliesToFetch(FAMILY2);\n+    selector.putToColumnsToFetch(FAMILY, new HashSet<String>(Arrays.asList(\"testcol12\")));\n+\n+    FetchResult fetchResult = new FetchResult();\n+    indexManager.fetchRow(TABLE, selector, fetchResult);\n+    assertNotNull(fetchResult.rowResult.row);\n+    Row row = newRow(\"row-6\", newRecord(FAMILY2, \"record-6C\", newColumn(\"testcol18\", \"value501\")),\n+        newRecord(FAMILY, \"record-6A\", newColumn(\"testcol12\", \"value110\")),\n+        newRecord(FAMILY, \"record-6B\", newColumn(\"testcol12\", \"value101\")));\n+    row.recordCount = 3;\n+    assertEquals(row, fetchResult.rowResult.row);\n+  }\n+\n   @Test\n   public void testFetchRowByRowIdWithFilter() throws Exception {\n     IndexManagerTestReadInterceptor.interceptor = new ReadInterceptor(null) {",
                "deletions": 0
            }
        ]
    },
    {
        "repo": "incubator-retired-blur",
        "message": "Fixed a NPE in the fetching of a row with both columns to fetch and families to fetch being used with different families.",
        "commit": "https://github.com/apache/incubator-retired-blur/commit/417f39251048ec0a14117824f76c676108009505",
        "parent": "https://github.com/apache/incubator-retired-blur/commit/2498bcb9154eab4bb044cd2f19c908e272e9071d",
        "bug_id": "incubator-retired-blur_33",
        "file": [
            {
                "sha": "da1b0ddc3c3cc9317db37fbb1f259b8a2ff7be6c",
                "filename": "blur-core/src/main/java/org/apache/blur/utils/BlurUtil.java",
                "blob_url": "https://github.com/apache/incubator-retired-blur/blob/417f39251048ec0a14117824f76c676108009505/blur-core/src/main/java/org/apache/blur/utils/BlurUtil.java",
                "raw_url": "https://github.com/apache/incubator-retired-blur/raw/417f39251048ec0a14117824f76c676108009505/blur-core/src/main/java/org/apache/blur/utils/BlurUtil.java",
                "status": "modified",
                "changes": 4,
                "additions": 4,
                "contents_url": "https://api.github.com/repos/apache/incubator-retired-blur/contents/blur-core/src/main/java/org/apache/blur/utils/BlurUtil.java?ref=417f39251048ec0a14117824f76c676108009505",
                "patch": "@@ -856,6 +856,10 @@ public static int countDocuments(IndexReader reader, Term term) throws IOExcepti\n     if (columnFamiliesToFetch == null || columnFamiliesToFetch.isEmpty()) {\n       return docs;\n     }\n+    Map<String, Set<String>> columnsToFetch = selector.getColumnsToFetch();\n+    if (columnsToFetch != null) {\n+      columnFamiliesToFetch.addAll(columnsToFetch.keySet());\n+    }\n     final Map<String, Integer> familyOrdering = getFamilyOrdering(columnFamiliesToFetch);\n     Collections.sort(docs, new Comparator<Document>() {\n       @Override",
                "deletions": 0
            },
            {
                "sha": "e805930a814ff15950ca0aa5939ebcac945a6761",
                "filename": "blur-core/src/test/java/org/apache/blur/manager/IndexManagerTest.java",
                "blob_url": "https://github.com/apache/incubator-retired-blur/blob/417f39251048ec0a14117824f76c676108009505/blur-core/src/test/java/org/apache/blur/manager/IndexManagerTest.java",
                "raw_url": "https://github.com/apache/incubator-retired-blur/raw/417f39251048ec0a14117824f76c676108009505/blur-core/src/test/java/org/apache/blur/manager/IndexManagerTest.java",
                "status": "modified",
                "changes": 43,
                "additions": 43,
                "contents_url": "https://api.github.com/repos/apache/incubator-retired-blur/contents/blur-core/src/test/java/org/apache/blur/manager/IndexManagerTest.java?ref=417f39251048ec0a14117824f76c676108009505",
                "patch": "@@ -40,6 +40,7 @@\n import java.io.IOException;\n import java.util.ArrayList;\n import java.util.Arrays;\n+import java.util.HashSet;\n import java.util.List;\n import java.util.Random;\n import java.util.UUID;\n@@ -595,6 +596,48 @@ public void testFetchRowByRowId() throws Exception {\n     assertEquals(row, fetchResult.rowResult.row);\n   }\n \n+  @Test\n+  public void testFetchRowByRowIdWithFamilySet() throws Exception {\n+    Selector selector = new Selector().setRowId(\"row-6\");\n+    selector.addToColumnFamiliesToFetch(FAMILY2);\n+    FetchResult fetchResult = new FetchResult();\n+    indexManager.fetchRow(TABLE, selector, fetchResult);\n+    assertNotNull(fetchResult.rowResult.row);\n+    Row row = newRow(\"row-6\", newRecord(FAMILY2, \"record-6C\", newColumn(\"testcol18\", \"value501\")));\n+    row.recordCount = 1;\n+    assertEquals(row, fetchResult.rowResult.row);\n+  }\n+\n+  @Test\n+  public void testFetchRowByRowIdWithColumnSet() throws Exception {\n+    Selector selector = new Selector().setRowId(\"row-6\");\n+    selector.putToColumnsToFetch(FAMILY, new HashSet<String>(Arrays.asList(\"testcol12\")));\n+\n+    FetchResult fetchResult = new FetchResult();\n+    indexManager.fetchRow(TABLE, selector, fetchResult);\n+    assertNotNull(fetchResult.rowResult.row);\n+    Row row = newRow(\"row-6\", newRecord(FAMILY, \"record-6A\", newColumn(\"testcol12\", \"value110\")),\n+        newRecord(FAMILY, \"record-6B\", newColumn(\"testcol12\", \"value101\")));\n+    row.recordCount = 2;\n+    assertEquals(row, fetchResult.rowResult.row);\n+  }\n+\n+  @Test\n+  public void testFetchRowByRowIdWithFamilyAndColumnSet() throws Exception {\n+    Selector selector = new Selector().setRowId(\"row-6\");\n+    selector.addToColumnFamiliesToFetch(FAMILY2);\n+    selector.putToColumnsToFetch(FAMILY, new HashSet<String>(Arrays.asList(\"testcol12\")));\n+\n+    FetchResult fetchResult = new FetchResult();\n+    indexManager.fetchRow(TABLE, selector, fetchResult);\n+    assertNotNull(fetchResult.rowResult.row);\n+    Row row = newRow(\"row-6\", newRecord(FAMILY2, \"record-6C\", newColumn(\"testcol18\", \"value501\")),\n+        newRecord(FAMILY, \"record-6A\", newColumn(\"testcol12\", \"value110\")),\n+        newRecord(FAMILY, \"record-6B\", newColumn(\"testcol12\", \"value101\")));\n+    row.recordCount = 3;\n+    assertEquals(row, fetchResult.rowResult.row);\n+  }\n+\n   @Test\n   public void testFetchRowByRowIdWithFilter() throws Exception {\n     IndexManagerTestReadInterceptor.interceptor = new ReadInterceptor(null) {",
                "deletions": 0
            }
        ]
    },
    {
        "repo": "incubator-retired-blur",
        "message": "Adding test for deletion of column during row update where the record mutation type is replace columns.  If the column value is null then the column is removed form the record.  Also fixing a NPE in the transaction recorder.",
        "commit": "https://github.com/apache/incubator-retired-blur/commit/faab2e145d159391bdaedd9128fdf5d6d7b001ce",
        "parent": "https://github.com/apache/incubator-retired-blur/commit/f76fa04daf94b9ba979e0e4c43e7ba9e5b677a26",
        "bug_id": "incubator-retired-blur_34",
        "file": [
            {
                "sha": "605fe32054ac1760af2123aa458cd649301991d5",
                "filename": "blur-core/src/main/java/org/apache/blur/manager/writer/TransactionRecorder.java",
                "blob_url": "https://github.com/apache/incubator-retired-blur/blob/faab2e145d159391bdaedd9128fdf5d6d7b001ce/blur-core/src/main/java/org/apache/blur/manager/writer/TransactionRecorder.java",
                "raw_url": "https://github.com/apache/incubator-retired-blur/raw/faab2e145d159391bdaedd9128fdf5d6d7b001ce/blur-core/src/main/java/org/apache/blur/manager/writer/TransactionRecorder.java",
                "status": "modified",
                "changes": 7,
                "additions": 7,
                "contents_url": "https://api.github.com/repos/apache/incubator-retired-blur/contents/blur-core/src/main/java/org/apache/blur/manager/writer/TransactionRecorder.java?ref=faab2e145d159391bdaedd9128fdf5d6d7b001ce",
                "patch": "@@ -273,13 +273,20 @@ private static void writeDelete(DataOutputStream outputStream, String deleteRowI\n   }\n \n   private static void writeString(DataOutputStream outputStream, String s) throws IOException {\n+    if (s == null) {\n+      Utils.writeVInt(outputStream, -1);  \n+      return;\n+    }\n     byte[] bs = s.getBytes();\n     Utils.writeVInt(outputStream, bs.length);\n     outputStream.write(bs);\n   }\n \n   private static String readString(DataInputStream inputStream) throws IOException {\n     int length = Utils.readVInt(inputStream);\n+    if (length == -1) {\n+      return null;\n+    }\n     byte[] buffer = new byte[length];\n     inputStream.readFully(buffer);\n     return new String(buffer);",
                "deletions": 0
            },
            {
                "sha": "8edb2d782e5f8ad74f46afbd955574b8f68f5c68",
                "filename": "blur-core/src/test/java/org/apache/blur/manager/IndexManagerTest.java",
                "blob_url": "https://github.com/apache/incubator-retired-blur/blob/faab2e145d159391bdaedd9128fdf5d6d7b001ce/blur-core/src/test/java/org/apache/blur/manager/IndexManagerTest.java",
                "raw_url": "https://github.com/apache/incubator-retired-blur/raw/faab2e145d159391bdaedd9128fdf5d6d7b001ce/blur-core/src/test/java/org/apache/blur/manager/IndexManagerTest.java",
                "status": "modified",
                "changes": 22,
                "additions": 22,
                "contents_url": "https://api.github.com/repos/apache/incubator-retired-blur/contents/blur-core/src/test/java/org/apache/blur/manager/IndexManagerTest.java?ref=faab2e145d159391bdaedd9128fdf5d6d7b001ce",
                "patch": "@@ -1000,6 +1000,28 @@ public void testMutationUpdateRowReplaceExistingColumns() throws Exception {\n     }\n     assertTrue(\"column 3 should be unmodified\", foundUnmodifiedColumn);\n   }\n+  \n+  @Test\n+  public void testMutationUpdateRowReplaceExistingColumnsWhileDeletingAColumn() throws Exception {\n+    Column c1 = newColumn(\"testcol1\", \"value999\");\n+    Column c2 = newColumn(\"testcol2\", null);\n+    String rec = \"record-1\";\n+    RecordMutation rm = newRecordMutation(REPLACE_COLUMNS, FAMILY, rec, c1, c2);\n+\n+    Record r = updateAndFetchRecord(\"row-1\", rec, rm);\n+\n+    assertNotNull(\"record should exist\", r);\n+    assertEquals(\"only 2 columns in record\", 2, r.getColumnsSize());\n+    assertTrue(\"column 1 should be in record\", r.columns.contains(c1));\n+    boolean foundUnmodifiedColumn = false;\n+    for (Column column : r.columns) {\n+      if (column.name.equals(\"testcol3\") && column.value.equals(\"value3\")) {\n+        foundUnmodifiedColumn = true;\n+        break;\n+      }\n+    }\n+    assertTrue(\"column 3 should be unmodified\", foundUnmodifiedColumn);\n+  }\n \n   @Test\n   public void testMutationUpdateRowReplaceExistingDuplicateColumns() throws Exception {",
                "deletions": 0
            }
        ]
    }
]