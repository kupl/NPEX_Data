[
    {
        "repo": "maven-surefire",
        "commit": "https://github.com/apache/maven-surefire/commit/cb5173d0846edb4b83ebf20fe8618bf881ddba0c",
        "bug_id": "maven-surefire_cb5173d",
        "message": "[SUREFIRE-1439] NullPointerException on JDK10",
        "parent": "https://github.com/apache/maven-surefire/commit/47af38f54e20beeac1c98202521157c5e1d4d8df",
        "patched_files": [
            "CheckTestNgListenerReporterIT.java",
            "AbstractJigsawIT.java",
            "Surefire1211JUnitTestNgIT.java",
            "Surefire1177TestngParallelSuitesIT.java",
            "JUnit47WithCucumberIT.java",
            "SystemUtils.java",
            "AbstractSurefireMojo.java",
            "HelperAssertions.java"
        ],
        "file": [
            {
                "status": "modified",
                "additions": 9,
                "raw_url": "https://github.com/apache/maven-surefire/raw/cb5173d0846edb4b83ebf20fe8618bf881ddba0c/maven-surefire-common/src/main/java/org/apache/maven/plugin/surefire/AbstractSurefireMojo.java",
                "contents_url": "https://api.github.com/repos/apache/maven-surefire/contents/maven-surefire-common/src/main/java/org/apache/maven/plugin/surefire/AbstractSurefireMojo.java?ref=cb5173d0846edb4b83ebf20fe8618bf881ddba0c",
                "filename": "maven-surefire-common/src/main/java/org/apache/maven/plugin/surefire/AbstractSurefireMojo.java",
                "deletions": 8,
                "sha": "dca5c564adaa173dd323144ac8dcc6bc394c6782",
                "blob_url": "https://github.com/apache/maven-surefire/blob/cb5173d0846edb4b83ebf20fe8618bf881ddba0c/maven-surefire-common/src/main/java/org/apache/maven/plugin/surefire/AbstractSurefireMojo.java",
                "patch": "@@ -96,6 +96,7 @@\n import java.io.IOException;\n import java.lang.reflect.Array;\n import java.lang.reflect.Method;\n+import java.math.BigDecimal;\n import java.util.ArrayList;\n import java.util.Collections;\n import java.util.Enumeration;\n@@ -115,18 +116,17 @@\n import static java.util.Arrays.asList;\n import static java.util.Collections.addAll;\n import static java.util.Collections.singletonMap;\n-import static org.apache.commons.lang3.JavaVersion.JAVA_1_7;\n-import static org.apache.commons.lang3.JavaVersion.JAVA_9;\n-import static org.apache.commons.lang3.JavaVersion.JAVA_RECENT;\n import static org.apache.commons.lang3.StringUtils.substringBeforeLast;\n import static org.apache.commons.lang3.SystemUtils.IS_OS_WINDOWS;\n-import static org.apache.commons.lang3.SystemUtils.isJavaVersionAtLeast;\n import static org.apache.maven.shared.utils.StringUtils.capitalizeFirstLetter;\n import static org.apache.maven.shared.utils.StringUtils.isEmpty;\n import static org.apache.maven.shared.utils.StringUtils.isNotBlank;\n import static org.apache.maven.shared.utils.StringUtils.isNotEmpty;\n import static org.apache.maven.shared.utils.StringUtils.split;\n+import static org.apache.maven.surefire.booter.SystemUtils.JAVA_SPECIFICATION_VERSION;\n import static org.apache.maven.surefire.booter.SystemUtils.endsWithJavaPath;\n+import static org.apache.maven.surefire.booter.SystemUtils.isBuiltInJava7AtLeast;\n+import static org.apache.maven.surefire.booter.SystemUtils.isBuiltInJava9AtLeast;\n import static org.apache.maven.surefire.booter.SystemUtils.isJava9AtLeast;\n import static org.apache.maven.surefire.booter.SystemUtils.toJdkHomeFromJvmExec;\n import static org.apache.maven.surefire.booter.SystemUtils.toJdkVersionFromReleaseFile;\n@@ -2208,7 +2208,7 @@ private JdkAttributes getEffectiveJvm() throws MojoFailureException\n             }\n \n             File jdkHome = toJdkHomeFromJvmExec( pathToJava.getPath() );\n-            Double version = jdkHome == null ? null : toJdkVersionFromReleaseFile( jdkHome );\n+            BigDecimal version = jdkHome == null ? null : toJdkVersionFromReleaseFile( jdkHome );\n             boolean javaVersion9 = version == null ? isJava9AtLeast( pathToJava.getPath() ) : isJava9AtLeast( version );\n             return new JdkAttributes( pathToJava.getPath(), javaVersion9 );\n         }\n@@ -2238,9 +2238,10 @@ private JdkAttributes getEffectiveJvm() throws MojoFailureException\n \n         // use the same JVM as the one used to run Maven (the \"java.home\" one)\n         String jvmToUse = System.getProperty( \"java.home\" ) + File.separator + \"bin\" + File.separator + \"java\";\n-        getConsoleLogger().debug( \"Using JVM: \" + jvmToUse + \" with Java version \" + JAVA_RECENT.toString() );\n+        getConsoleLogger().debug( \"Using JVM: \" + jvmToUse + \" with Java version \"\n+                + JAVA_SPECIFICATION_VERSION.toPlainString() );\n \n-        return new JdkAttributes( jvmToUse, isJavaVersionAtLeast( JAVA_9 ) );\n+        return new JdkAttributes( jvmToUse, isBuiltInJava9AtLeast() );\n     }\n \n     private Artifact getSurefireBooterArtifact()\n@@ -3043,7 +3044,7 @@ File createSurefireBootDirectoryInBuild()\n     // todo use Java7 java.nio.file.Files.createTempDirectory()\n     File createSurefireBootDirectoryInTemp()\n     {\n-        if ( isJavaVersionAtLeast( JAVA_1_7 ) )\n+        if ( isBuiltInJava7AtLeast() )\n         {\n             try\n             {",
                "changes": 17
            },
            {
                "status": "modified",
                "additions": 3,
                "raw_url": "https://github.com/apache/maven-surefire/raw/cb5173d0846edb4b83ebf20fe8618bf881ddba0c/maven-surefire-common/src/test/java/org/apache/maven/plugin/surefire/AbstractSurefireMojoTest.java",
                "contents_url": "https://api.github.com/repos/apache/maven-surefire/contents/maven-surefire-common/src/test/java/org/apache/maven/plugin/surefire/AbstractSurefireMojoTest.java?ref=cb5173d0846edb4b83ebf20fe8618bf881ddba0c",
                "filename": "maven-surefire-common/src/test/java/org/apache/maven/plugin/surefire/AbstractSurefireMojoTest.java",
                "deletions": 4,
                "sha": "0fbe91ba1afd7dea8ba84abb8470cc4a617b533e",
                "blob_url": "https://github.com/apache/maven-surefire/blob/cb5173d0846edb4b83ebf20fe8618bf881ddba0c/maven-surefire-common/src/test/java/org/apache/maven/plugin/surefire/AbstractSurefireMojoTest.java",
                "patch": "@@ -57,9 +57,8 @@\n import static java.io.File.separatorChar;\n import static java.util.Arrays.asList;\n import static java.util.Collections.singleton;\n-import static org.apache.commons.lang3.JavaVersion.JAVA_1_7;\n import static org.apache.commons.lang3.SystemUtils.IS_OS_WINDOWS;\n-import static org.apache.commons.lang3.SystemUtils.isJavaVersionAtLeast;\n+import static org.apache.maven.surefire.booter.SystemUtils.isBuiltInJava7AtLeast;\n import static org.fest.assertions.Assertions.assertThat;\n import static org.junit.Assume.assumeTrue;\n import static org.mockito.ArgumentMatchers.anyString;\n@@ -326,7 +325,7 @@ public void shouldHaveStartupConfigForModularClasspath()\n     @Test\n     public void shouldHaveTmpDirectory() throws IOException\n     {\n-        assumeTrue( isJavaVersionAtLeast( JAVA_1_7 ) );\n+        assumeTrue( isBuiltInJava7AtLeast() );\n \n         Path path = ( Path ) AbstractSurefireMojo.createTmpDirectoryWithJava7( \"surefire\" );\n \n@@ -348,7 +347,7 @@ public void shouldHaveTmpDirectory() throws IOException\n     @Test\n     public void shouldHaveTmpDirectoryName() throws IOException\n     {\n-        assumeTrue( isJavaVersionAtLeast( JAVA_1_7 ) );\n+        assumeTrue( isBuiltInJava7AtLeast() );\n \n         String dir = AbstractSurefireMojo.createTmpDirectoryNameWithJava7( \"surefire\" );\n ",
                "changes": 7
            },
            {
                "status": "modified",
                "additions": 63,
                "raw_url": "https://github.com/apache/maven-surefire/raw/cb5173d0846edb4b83ebf20fe8618bf881ddba0c/surefire-booter/src/main/java/org/apache/maven/surefire/booter/SystemUtils.java",
                "contents_url": "https://api.github.com/repos/apache/maven-surefire/contents/surefire-booter/src/main/java/org/apache/maven/surefire/booter/SystemUtils.java?ref=cb5173d0846edb4b83ebf20fe8618bf881ddba0c",
                "filename": "surefire-booter/src/main/java/org/apache/maven/surefire/booter/SystemUtils.java",
                "deletions": 14,
                "sha": "0a68a80bc92109d12c1a78a1e25d5c05c0ddc9ef",
                "blob_url": "https://github.com/apache/maven-surefire/blob/cb5173d0846edb4b83ebf20fe8618bf881ddba0c/surefire-booter/src/main/java/org/apache/maven/surefire/booter/SystemUtils.java",
                "patch": "@@ -29,19 +29,18 @@\n import java.io.InputStream;\n import java.lang.management.ManagementFactory;\n import java.lang.reflect.Method;\n+import java.math.BigDecimal;\n import java.util.Properties;\n import java.util.StringTokenizer;\n \n+import static java.lang.Character.isDigit;\n import static java.lang.Thread.currentThread;\n import static org.apache.commons.io.IOUtils.closeQuietly;\n-import static org.apache.commons.lang3.JavaVersion.JAVA_9;\n-import static org.apache.commons.lang3.JavaVersion.JAVA_RECENT;\n import static org.apache.commons.lang3.StringUtils.isNumeric;\n import static org.apache.commons.lang3.SystemUtils.IS_OS_FREE_BSD;\n import static org.apache.commons.lang3.SystemUtils.IS_OS_LINUX;\n import static org.apache.commons.lang3.SystemUtils.IS_OS_NET_BSD;\n import static org.apache.commons.lang3.SystemUtils.IS_OS_OPEN_BSD;\n-import static org.apache.commons.lang3.SystemUtils.isJavaVersionAtLeast;\n import static org.apache.maven.surefire.util.ReflectionUtils.invokeMethodChain;\n import static org.apache.maven.surefire.util.ReflectionUtils.tryLoadClass;\n import static org.apache.maven.surefire.util.internal.ObjectUtils.requireNonNull;\n@@ -54,7 +53,11 @@\n  */\n public final class SystemUtils\n {\n-    private static final double JIGSAW_JAVA_VERSION = 9.0d;\n+    public static final BigDecimal JAVA_SPECIFICATION_VERSION = getJavaSpecificationVersion();\n+\n+    private static final BigDecimal JAVA_VERSION_7 = new BigDecimal( \"1.7\" );\n+\n+    private static final BigDecimal JIGSAW_JAVA_VERSION = new BigDecimal( 9 );\n \n     private static final int PROC_STATUS_PID_FIRST_CHARS = 20;\n \n@@ -127,7 +130,7 @@ static File toJdkHomeFromJre( String jreHome )\n         return \"jre\".equals( pathToJreOrJdk.getName() ) ? pathToJreOrJdk.getParentFile() : pathToJreOrJdk;\n     }\n \n-    public static Double toJdkVersionFromReleaseFile( File jdkHome )\n+    public static BigDecimal toJdkVersionFromReleaseFile( File jdkHome )\n     {\n         File release = new File( requireNonNull( jdkHome ).getAbsoluteFile(), \"release\" );\n         if ( !release.isFile() )\n@@ -158,7 +161,7 @@ else if ( versions.countTokens() >= 2 )\n                 return null;\n             }\n \n-            return Double.valueOf( javaVersion );\n+            return new BigDecimal( javaVersion );\n         }\n         catch ( IOException e )\n         {\n@@ -170,6 +173,43 @@ else if ( versions.countTokens() >= 2 )\n         }\n     }\n \n+    /**\n+     * Safely extracts major and minor version as fractional number from\n+     * <pre>\n+     *     $MAJOR.$MINOR.$SECURITY\n+     * </pre>.\n+     * <br>\n+     *     The security version is usually not needed to know.\n+     *     It can be applied to not certified JRE.\n+     *\n+     * @return major.minor version derived from java specification version of <em>this</em> JVM, e.g. 1.8, 9, etc.\n+     */\n+    private static BigDecimal getJavaSpecificationVersion()\n+    {\n+        StringBuilder fractionalVersion = new StringBuilder( \"0\" );\n+        for ( char c : org.apache.commons.lang3.SystemUtils.JAVA_SPECIFICATION_VERSION.toCharArray() )\n+        {\n+            if ( isDigit( c ) )\n+            {\n+                fractionalVersion.append( c );\n+            }\n+            else if ( c == '.' )\n+            {\n+                if ( fractionalVersion.indexOf( \".\" ) == -1 )\n+                {\n+                    fractionalVersion.append( '.' );\n+                }\n+                else\n+                {\n+                    break;\n+                }\n+            }\n+        }\n+        String majorMinorVersion = fractionalVersion.toString();\n+        return new BigDecimal( majorMinorVersion.endsWith( \".\" ) ? majorMinorVersion + \"0\" : majorMinorVersion )\n+                .stripTrailingZeros();\n+    }\n+\n     public static boolean isJava9AtLeast( String jvmExecutablePath )\n     {\n         File externalJavaHome = toJdkHomeFromJvmExec( jvmExecutablePath );\n@@ -178,23 +218,32 @@ public static boolean isJava9AtLeast( String jvmExecutablePath )\n         {\n             return isBuiltInJava9AtLeast();\n         }\n-        Double releaseFileVersion = externalJavaHome == null ? null : toJdkVersionFromReleaseFile( externalJavaHome );\n-        return SystemUtils.isJava9AtLeast( releaseFileVersion );\n+        else\n+        {\n+            BigDecimal releaseFileVersion =\n+                    externalJavaHome == null ? null : toJdkVersionFromReleaseFile( externalJavaHome );\n+            return isJava9AtLeast( releaseFileVersion );\n+        }\n+    }\n+\n+    public static boolean isBuiltInJava9AtLeast()\n+    {\n+        return JAVA_SPECIFICATION_VERSION.compareTo( JIGSAW_JAVA_VERSION ) >= 0;\n     }\n \n-    static boolean isBuiltInJava9AtLeast()\n+    public static boolean isBuiltInJava7AtLeast()\n     {\n-        return isJavaVersionAtLeast( JAVA_9 );\n+        return JAVA_SPECIFICATION_VERSION.compareTo( JAVA_VERSION_7 ) >= 0;\n     }\n \n-    public static boolean isJava9AtLeast( Double version )\n+    public static boolean isJava9AtLeast( BigDecimal version )\n     {\n-        return version != null && version >= JIGSAW_JAVA_VERSION;\n+        return version != null && version.compareTo( JIGSAW_JAVA_VERSION ) >= 0;\n     }\n \n     public static ClassLoader platformClassLoader()\n     {\n-        if ( JAVA_RECENT.atLeast( JAVA_9 ) )\n+        if ( isBuiltInJava9AtLeast() )\n         {\n             return reflectClassLoader( ClassLoader.class, \"getPlatformClassLoader\" );\n         }\n@@ -203,7 +252,7 @@ public static ClassLoader platformClassLoader()\n \n     public static Long pid()\n     {\n-        if ( JAVA_RECENT.atLeast( JAVA_9 ) )\n+        if ( isBuiltInJava9AtLeast() )\n         {\n             Long pid = pidOnJava9();\n             if ( pid != null )",
                "changes": 77
            },
            {
                "status": "modified",
                "additions": 15,
                "raw_url": "https://github.com/apache/maven-surefire/raw/cb5173d0846edb4b83ebf20fe8618bf881ddba0c/surefire-booter/src/test/java/org/apache/maven/surefire/booter/SystemUtilsTest.java",
                "contents_url": "https://api.github.com/repos/apache/maven-surefire/contents/surefire-booter/src/test/java/org/apache/maven/surefire/booter/SystemUtilsTest.java?ref=cb5173d0846edb4b83ebf20fe8618bf881ddba0c",
                "filename": "surefire-booter/src/test/java/org/apache/maven/surefire/booter/SystemUtilsTest.java",
                "deletions": 6,
                "sha": "d1ba04fd04f61dae9ceee2792d475f76fc3db073",
                "blob_url": "https://github.com/apache/maven-surefire/blob/cb5173d0846edb4b83ebf20fe8618bf881ddba0c/surefire-booter/src/test/java/org/apache/maven/surefire/booter/SystemUtilsTest.java",
                "patch": "@@ -22,13 +22,13 @@\n import org.junit.Test;\n import org.junit.experimental.runners.Enclosed;\n import org.junit.runner.RunWith;\n-import org.mockito.Mockito;\n import org.powermock.core.classloader.annotations.PrepareForTest;\n import org.powermock.modules.junit4.PowerMockRunner;\n \n import java.io.File;\n import java.io.IOException;\n import java.lang.management.ManagementFactory;\n+import java.math.BigDecimal;\n \n import static java.io.File.separator;\n import static org.apache.commons.lang3.JavaVersion.JAVA_9;\n@@ -40,12 +40,12 @@\n import static org.fest.assertions.Assertions.assertThat;\n import static org.junit.Assume.assumeTrue;\n import static org.mockito.Matchers.any;\n-import static org.mockito.Matchers.anyDouble;\n import static org.mockito.Matchers.anyString;\n import static org.mockito.Mockito.times;\n import static org.mockito.Mockito.when;\n import static org.powermock.api.mockito.PowerMockito.mockStatic;\n import static org.powermock.api.mockito.PowerMockito.verifyStatic;\n+import static org.powermock.reflect.Whitebox.invokeMethod;\n \n /**\n  * Test of {@link SystemUtils}.\n@@ -59,6 +59,15 @@\n     public static class PlainUnitTests\n     {\n \n+        @Test\n+        public void shouldMatchJavaSpecVersion() throws Exception\n+        {\n+            BigDecimal actual = invokeMethod( SystemUtils.class, \"getJavaSpecificationVersion\" );\n+            BigDecimal expected = new BigDecimal( System.getProperty( \"java.specification.version\" ) );\n+            assertThat( actual ).isEqualTo( expected );\n+            assertThat( SystemUtils.JAVA_SPECIFICATION_VERSION ).isEqualTo( expected );\n+        }\n+\n         @Test\n         public void shouldParseProprietaryReleaseFile() throws IOException\n         {\n@@ -169,9 +178,9 @@ public void shouldExtractJdkHomeFromRealPath()\n         @Test\n         public void shouldBeJavaVersion()\n         {\n-            assertThat( SystemUtils.isJava9AtLeast( (Double) null ) ).isFalse();\n-            assertThat( SystemUtils.isJava9AtLeast( 1.8d ) ).isFalse();\n-            assertThat( SystemUtils.isJava9AtLeast( 9.0d ) ).isTrue();\n+            assertThat( SystemUtils.isJava9AtLeast( (BigDecimal ) null ) ).isFalse();\n+            assertThat( SystemUtils.isJava9AtLeast( new BigDecimal( \"1.8\" ) ) ).isFalse();\n+            assertThat( SystemUtils.isJava9AtLeast( new BigDecimal( 9 ) ) ).isTrue();\n         }\n \n         @Test\n@@ -328,7 +337,7 @@ private static void testIsJava9AtLeast( File pathInJdk ) throws IOException\n             when( SystemUtils.toJdkVersionFromReleaseFile( any( File.class ) ) )\n                     .thenCallRealMethod();\n \n-            when( SystemUtils.isJava9AtLeast( anyDouble() ) )\n+            when( SystemUtils.isJava9AtLeast( any( BigDecimal.class ) ) )\n                     .thenCallRealMethod();\n \n             if ( JAVA_RECENT.atLeast( JAVA_9 ) )",
                "changes": 21
            },
            {
                "status": "modified",
                "additions": 8,
                "raw_url": "https://github.com/apache/maven-surefire/raw/cb5173d0846edb4b83ebf20fe8618bf881ddba0c/surefire-integration-tests/src/test/java/org/apache/maven/surefire/its/AbstractJigsawIT.java",
                "contents_url": "https://api.github.com/repos/apache/maven-surefire/contents/surefire-integration-tests/src/test/java/org/apache/maven/surefire/its/AbstractJigsawIT.java?ref=cb5173d0846edb4b83ebf20fe8618bf881ddba0c",
                "filename": "surefire-integration-tests/src/test/java/org/apache/maven/surefire/its/AbstractJigsawIT.java",
                "deletions": 5,
                "sha": "5063a2d7aef8c85468ff99526a1b7aac9013bfee",
                "blob_url": "https://github.com/apache/maven-surefire/blob/cb5173d0846edb4b83ebf20fe8618bf881ddba0c/surefire-integration-tests/src/test/java/org/apache/maven/surefire/its/AbstractJigsawIT.java",
                "patch": "@@ -29,8 +29,6 @@\n import java.util.Properties;\n import java.util.StringTokenizer;\n \n-import static org.apache.commons.lang3.JavaVersion.JAVA_9;\n-import static org.apache.commons.lang3.JavaVersion.JAVA_RECENT;\n import static org.junit.Assert.fail;\n import static org.junit.Assume.assumeTrue;\n \n@@ -52,7 +50,7 @@\n     protected SurefireLauncher assumeJigsaw() throws IOException\n     {\n         assumeTrue( \"There's no JDK 9 provided.\",\n-                          JAVA_RECENT.atLeast( JAVA_9 ) || JDK_HOME != null && isExtJava9AtLeast() );\n+                          isJavaVersion9AtLeast() || JDK_HOME != null && isExtJavaVerion9AtLeast() );\n         // fail( JDK_HOME_KEY + \" was provided with value \" + JDK_HOME + \" but it is not Jigsaw Java 9.\" );\n \n         SurefireLauncher launcher = unpack();\n@@ -67,7 +65,7 @@ protected SurefireLauncher assumeJigsaw() throws IOException\n \n     protected SurefireLauncher assumeJava9Property() throws IOException\n     {\n-        assumeTrue( \"There's no JDK 9 provided.\", JDK_HOME != null && isExtJava9AtLeast() );\n+        assumeTrue( \"There's no JDK 9 provided.\", JDK_HOME != null && isExtJavaVerion9AtLeast() );\n         return unpack();\n     }\n \n@@ -76,7 +74,12 @@ private SurefireLauncher unpack()\n         return unpack( getProjectDirectoryName() );\n     }\n \n-    private static boolean isExtJava9AtLeast() throws IOException\n+    private static boolean isJavaVersion9AtLeast()\n+    {\n+        return Double.valueOf( System.getProperty( \"java.specification.version\" ) ) >= JIGSAW_JAVA_VERSION;\n+    }\n+\n+    private static boolean isExtJavaVerion9AtLeast() throws IOException\n     {\n         File release = new File( JDK_HOME, \"release\" );\n ",
                "changes": 13
            },
            {
                "status": "modified",
                "additions": 9,
                "raw_url": "https://github.com/apache/maven-surefire/raw/cb5173d0846edb4b83ebf20fe8618bf881ddba0c/surefire-integration-tests/src/test/java/org/apache/maven/surefire/its/CheckTestNgListenerReporterIT.java",
                "contents_url": "https://api.github.com/repos/apache/maven-surefire/contents/surefire-integration-tests/src/test/java/org/apache/maven/surefire/its/CheckTestNgListenerReporterIT.java?ref=cb5173d0846edb4b83ebf20fe8618bf881ddba0c",
                "filename": "surefire-integration-tests/src/test/java/org/apache/maven/surefire/its/CheckTestNgListenerReporterIT.java",
                "deletions": 12,
                "sha": "2c618d08368787f9af90b12615420b65255702b5",
                "blob_url": "https://github.com/apache/maven-surefire/blob/cb5173d0846edb4b83ebf20fe8618bf881ddba0c/surefire-integration-tests/src/test/java/org/apache/maven/surefire/its/CheckTestNgListenerReporterIT.java",
                "patch": "@@ -19,7 +19,6 @@\n  * under the License.\n  */\n \n-import org.apache.commons.lang3.JavaVersion;\n import org.apache.maven.surefire.its.fixture.SurefireJUnit4IntegrationTestCase;\n import org.apache.maven.surefire.its.fixture.SurefireLauncher;\n import org.junit.Test;\n@@ -29,8 +28,6 @@\n import java.util.Arrays;\n import java.util.Collection;\n \n-import static org.apache.commons.lang3.JavaVersion.JAVA_1_5;\n-import static org.apache.commons.lang3.JavaVersion.JAVA_1_7;\n import static org.apache.maven.surefire.its.fixture.HelperAssertions.assumeJavaVersion;\n import static org.junit.runners.Parameterized.Parameter;\n import static org.junit.runners.Parameterized.Parameters;\n@@ -49,10 +46,10 @@\n     public static Collection<Object[]> data()\n     {\n         return Arrays.asList(new Object[][] {\n-            { \"5.6\", \"jdk15\", JAVA_1_5 }, // First TestNG version with reporter support\n-            { \"5.7\", \"jdk15\", JAVA_1_5 }, // default version from pom of the test case\n-            { \"5.10\", \"jdk15\", JAVA_1_5 },\n-            { \"5.13\", null, JAVA_1_5 }, // \"reporterslist\" param becomes String instead of List<ReporterConfig>\n+            { \"5.6\", \"jdk15\", 1.5d }, // First TestNG version with reporter support\n+            { \"5.7\", \"jdk15\", 1.5d }, // default version from pom of the test case\n+            { \"5.10\", \"jdk15\", 1.5d },\n+            { \"5.13\", null, 1.5d }, // \"reporterslist\" param becomes String instead of List<ReporterConfig>\n                         // \"listener\" param becomes String instead of List<Class>\n \n                 // configure(Map) in 5.14.1 and 5.14.2 is transforming List<Class> into a String with a space as separator.\n@@ -71,10 +68,10 @@\n             //{ \"5.14.4\", null, \"1.5\" }, { \"5.14.5\", null, \"1.5\" }, // Fails: not able to test due to system dependency org.testng:guice missed the path and use to break CI\n                                         // ClassNotFoundException: com.beust.jcommander.ParameterException\n \n-            { \"5.14.6\", null, JAVA_1_5 }, // Usage of org.testng:guice removed\n-            { \"5.14.9\", null, JAVA_1_5 }, // Latest 5.14.x TestNG version\n-            { \"6.0\", null, JAVA_1_5 },\n-            { \"6.9.9\", null, JAVA_1_7 } // Currently latest TestNG version\n+            { \"5.14.6\", null, 1.5d }, // Usage of org.testng:guice removed\n+            { \"5.14.9\", null, 1.5d }, // Latest 5.14.x TestNG version\n+            { \"6.0\", null, 1.5d },\n+            { \"6.9.9\", null, 1.7d } // Currently latest TestNG version\n         });\n     }\n \n@@ -85,7 +82,7 @@\n     public String classifier;\n \n     @Parameter(2)\n-    public JavaVersion javaVersion;\n+    public double javaVersion;\n \n     @Test\n     public void testNgListenerReporter()",
                "changes": 21
            },
            {
                "status": "modified",
                "additions": 1,
                "raw_url": "https://github.com/apache/maven-surefire/raw/cb5173d0846edb4b83ebf20fe8618bf881ddba0c/surefire-integration-tests/src/test/java/org/apache/maven/surefire/its/JUnit47WithCucumberIT.java",
                "contents_url": "https://api.github.com/repos/apache/maven-surefire/contents/surefire-integration-tests/src/test/java/org/apache/maven/surefire/its/JUnit47WithCucumberIT.java?ref=cb5173d0846edb4b83ebf20fe8618bf881ddba0c",
                "filename": "surefire-integration-tests/src/test/java/org/apache/maven/surefire/its/JUnit47WithCucumberIT.java",
                "deletions": 2,
                "sha": "38c2eae8324c6f9180b226c23dbcfad04a24fa93",
                "blob_url": "https://github.com/apache/maven-surefire/blob/cb5173d0846edb4b83ebf20fe8618bf881ddba0c/surefire-integration-tests/src/test/java/org/apache/maven/surefire/its/JUnit47WithCucumberIT.java",
                "patch": "@@ -23,7 +23,6 @@\n import org.junit.Before;\n import org.junit.Test;\n \n-import static org.apache.commons.lang3.JavaVersion.JAVA_1_6;\n import static org.apache.maven.surefire.its.fixture.HelperAssertions.assumeJavaVersion;\n \n /**\n@@ -41,7 +40,7 @@\n     @Before\n     public void assumeJdk16()\n     {\n-        assumeJavaVersion( JAVA_1_6 );\n+        assumeJavaVersion( 1.6d );\n     }\n \n     @Test",
                "changes": 3
            },
            {
                "status": "modified",
                "additions": 4,
                "raw_url": "https://github.com/apache/maven-surefire/raw/cb5173d0846edb4b83ebf20fe8618bf881ddba0c/surefire-integration-tests/src/test/java/org/apache/maven/surefire/its/fixture/HelperAssertions.java",
                "contents_url": "https://api.github.com/repos/apache/maven-surefire/contents/surefire-integration-tests/src/test/java/org/apache/maven/surefire/its/fixture/HelperAssertions.java?ref=cb5173d0846edb4b83ebf20fe8618bf881ddba0c",
                "filename": "surefire-integration-tests/src/test/java/org/apache/maven/surefire/its/fixture/HelperAssertions.java",
                "deletions": 6,
                "sha": "ed0d40cf55cce0816943392059d62afe79308f32",
                "blob_url": "https://github.com/apache/maven-surefire/blob/cb5173d0846edb4b83ebf20fe8618bf881ddba0c/surefire-integration-tests/src/test/java/org/apache/maven/surefire/its/fixture/HelperAssertions.java",
                "patch": "@@ -18,8 +18,6 @@\n  * under the License.\n  */\n \n-import org.apache.commons.lang3.JavaVersion;\n-import org.apache.commons.lang3.SystemUtils;\n import org.apache.maven.plugin.surefire.log.api.ConsoleLogger;\n import org.apache.maven.plugin.surefire.log.api.PrintStreamLogger;\n import org.apache.maven.plugins.surefire.report.ReportTestSuite;\n@@ -32,7 +30,6 @@\n \n import static junit.framework.Assert.assertEquals;\n import static junit.framework.Assert.assertTrue;\n-import static org.apache.commons.lang3.SystemUtils.JAVA_SPECIFICATION_VERSION;\n import static org.junit.Assume.assumeTrue;\n \n @SuppressWarnings( { \"JavaDoc\" } )\n@@ -168,9 +165,10 @@ public static IntegrationTestSuiteResults parseReportList( List<ReportTestSuite>\n         }\n     }\n \n-    public static void assumeJavaVersion( JavaVersion version )\n+    public static void assumeJavaVersion( double expectedVersion )\n     {\n-        assumeTrue( \"java.specification.version: \" + JAVA_SPECIFICATION_VERSION,\n-                SystemUtils.isJavaVersionAtLeast( version ) );\n+        String thisVersion = System.getProperty( \"java.specification.version\" );\n+        assumeTrue( \"java.specification.version: \" + thisVersion,\n+                Double.valueOf( thisVersion ) >= expectedVersion );\n     }\n }",
                "changes": 10
            },
            {
                "status": "modified",
                "additions": 1,
                "raw_url": "https://github.com/apache/maven-surefire/raw/cb5173d0846edb4b83ebf20fe8618bf881ddba0c/surefire-integration-tests/src/test/java/org/apache/maven/surefire/its/jiras/Surefire1177TestngParallelSuitesIT.java",
                "contents_url": "https://api.github.com/repos/apache/maven-surefire/contents/surefire-integration-tests/src/test/java/org/apache/maven/surefire/its/jiras/Surefire1177TestngParallelSuitesIT.java?ref=cb5173d0846edb4b83ebf20fe8618bf881ddba0c",
                "filename": "surefire-integration-tests/src/test/java/org/apache/maven/surefire/its/jiras/Surefire1177TestngParallelSuitesIT.java",
                "deletions": 2,
                "sha": "8c2c21363efed4f6fe212812e389b2d04ef7bb02",
                "blob_url": "https://github.com/apache/maven-surefire/blob/cb5173d0846edb4b83ebf20fe8618bf881ddba0c/surefire-integration-tests/src/test/java/org/apache/maven/surefire/its/jiras/Surefire1177TestngParallelSuitesIT.java",
                "patch": "@@ -24,7 +24,6 @@\n import org.apache.maven.surefire.its.fixture.SurefireLauncher;\n import org.junit.Test;\n \n-import static org.apache.commons.lang3.JavaVersion.JAVA_1_7;\n import static org.apache.maven.surefire.its.fixture.HelperAssertions.assumeJavaVersion;\n import static org.hamcrest.Matchers.containsString;\n import static org.hamcrest.Matchers.is;\n@@ -43,7 +42,7 @@\n     public void shouldRunTwoSuitesInParallel()\n         throws VerificationException\n     {\n-        assumeJavaVersion( JAVA_1_7 );\n+        assumeJavaVersion( 1.7d );\n \n         unpack().executeTest()\n             .verifyErrorFree( 2 )",
                "changes": 3
            },
            {
                "status": "modified",
                "additions": 2,
                "raw_url": "https://github.com/apache/maven-surefire/raw/cb5173d0846edb4b83ebf20fe8618bf881ddba0c/surefire-integration-tests/src/test/java/org/apache/maven/surefire/its/jiras/Surefire1211JUnitTestNgIT.java",
                "contents_url": "https://api.github.com/repos/apache/maven-surefire/contents/surefire-integration-tests/src/test/java/org/apache/maven/surefire/its/jiras/Surefire1211JUnitTestNgIT.java?ref=cb5173d0846edb4b83ebf20fe8618bf881ddba0c",
                "filename": "surefire-integration-tests/src/test/java/org/apache/maven/surefire/its/jiras/Surefire1211JUnitTestNgIT.java",
                "deletions": 3,
                "sha": "53cd764673b6834e59f7c20ae238bca867ef825d",
                "blob_url": "https://github.com/apache/maven-surefire/blob/cb5173d0846edb4b83ebf20fe8618bf881ddba0c/surefire-integration-tests/src/test/java/org/apache/maven/surefire/its/jiras/Surefire1211JUnitTestNgIT.java",
                "patch": "@@ -23,7 +23,6 @@\n import org.apache.maven.surefire.its.fixture.SurefireLauncher;\n import org.junit.Test;\n \n-import static org.apache.commons.lang3.JavaVersion.JAVA_1_7;\n import static org.apache.maven.surefire.its.fixture.HelperAssertions.assumeJavaVersion;\n \n /**\n@@ -38,7 +37,7 @@\n     @Test\n     public void withJUnit()\n     {\n-        assumeJavaVersion( JAVA_1_7 );\n+        assumeJavaVersion( 1.7d );\n \n         unpack().threadCount( 1 )\n                 .executeTest()\n@@ -48,7 +47,7 @@ public void withJUnit()\n     @Test\n     public void withoutJUnit()\n     {\n-        assumeJavaVersion( JAVA_1_7 );\n+        assumeJavaVersion( 1.7d );\n \n         unpack().threadCount( 1 )\n                 .sysProp( \"junit\", \"false\" )",
                "changes": 5
            }
        ],
        "unit_tests": [
            "SystemUtilsTest.java",
            "AbstractSurefireMojoTest.java"
        ]
    },
    {
        "buggy": false,
        "test_file": "surefire-booter/src/test/java/org/apache/maven/surefire/booter/SystemUtilsTest.java",
        "buggy_files": [
            "surefire-integration-tests/src/test/java/org/apache/maven/surefire/its/CheckTestNgListenerReporterIT.java",
            "surefire-integration-tests/src/test/java/org/apache/maven/surefire/its/AbstractJigsawIT.java",
            "surefire-integration-tests/src/test/java/org/apache/maven/surefire/its/jiras/Surefire1211JUnitTestNgIT.java",
            "surefire-integration-tests/src/test/java/org/apache/maven/surefire/its/jiras/Surefire1177TestngParallelSuitesIT.java",
            "surefire-integration-tests/src/test/java/org/apache/maven/surefire/its/JUnit47WithCucumberIT.java",
            "surefire-booter/src/main/java/org/apache/maven/surefire/booter/SystemUtils.java",
            "maven-surefire-common/src/main/java/org/apache/maven/plugin/surefire/AbstractSurefireMojo.java",
            "surefire-integration-tests/src/test/java/org/apache/maven/surefire/its/fixture/HelperAssertions.java"
        ],
        "fixed": true
    }
]