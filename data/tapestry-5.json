{
    "tapestry-5_1001156": {
        "bug_id": "tapestry-5_1001156",
        "commit": "https://github.com/apache/tapestry-5/commit/1001156c1eed7f1fb2d1da7808bec55cad54ba17",
        "file": [
            {
                "additions": 42,
                "blob_url": "https://github.com/apache/tapestry-5/blob/1001156c1eed7f1fb2d1da7808bec55cad54ba17/tapestry-hibernate/src/main/java/org/apache/tapestry/internal/hibernate/HibernateEntityValueEncoder.java",
                "changes": 75,
                "contents_url": "https://api.github.com/repos/apache/tapestry-5/contents/tapestry-hibernate/src/main/java/org/apache/tapestry/internal/hibernate/HibernateEntityValueEncoder.java?ref=1001156c1eed7f1fb2d1da7808bec55cad54ba17",
                "deletions": 33,
                "filename": "tapestry-hibernate/src/main/java/org/apache/tapestry/internal/hibernate/HibernateEntityValueEncoder.java",
                "patch": "@@ -14,46 +14,55 @@\n \n package org.apache.tapestry.internal.hibernate;\n \n-import java.io.Serializable;\n-\n import org.apache.tapestry.ValueEncoder;\n import org.apache.tapestry.ioc.internal.util.Defense;\n+import org.apache.tapestry.ioc.internal.util.InternalUtils;\n import org.apache.tapestry.ioc.services.TypeCoercer;\n import org.hibernate.Session;\n import org.hibernate.mapping.PersistentClass;\n import org.hibernate.mapping.Property;\n import org.hibernate.property.Getter;\n \n+import java.io.Serializable;\n+\n public final class HibernateEntityValueEncoder<E> implements ValueEncoder<E> {\n-\tprivate final Class<E> _entityClass;\n-\tprivate final PersistentClass _persistentClass;\n-\tprivate final Session _session;\n-\tprivate final TypeCoercer _typeCoercer;\n-\tprivate final Getter _idGetter;\n-\t\n-\tpublic HibernateEntityValueEncoder(Class<E> entityClass, PersistentClass persistentClass, Session session, TypeCoercer typeCoercer) {\n-\t\tsuper();\n-\t\t_entityClass = entityClass;\n-\t\t_persistentClass = persistentClass;\n-\t\t_session = session;\n-\t\t_typeCoercer = typeCoercer;\n-\t\t\n-\t\tProperty property = _persistentClass.getIdentifierProperty();\n-\t\t_idGetter = property.getPropertyAccessor(_entityClass).getGetter(_entityClass, property.getName());\n-\t}\n-\t\t\n-\tpublic String toClient(E value) {\n-\t\tObject id = _idGetter.get(value);\n-\t\treturn _typeCoercer.coerce(id, String.class);\n-\t}\n-\n-\t@SuppressWarnings(\"unchecked\")\n-\tpublic E toValue(String clientValue) {\n-\t\tClass<?> idType = _idGetter.getReturnType();\n-\t\t\n-\t\tObject id = _typeCoercer.coerce(clientValue, idType);\n-\t\tSerializable ser = Defense.cast(id, Serializable.class, \"id\");\n-\t\treturn (E)_session.get(_entityClass, ser);\n-\t}\n-\t\n+    private final Class<E> _entityClass;\n+    private final PersistentClass _persistentClass;\n+    private final Session _session;\n+    private final TypeCoercer _typeCoercer;\n+    private final Getter _idGetter;\n+\n+    public HibernateEntityValueEncoder(Class<E> entityClass, PersistentClass persistentClass, Session session, TypeCoercer typeCoercer) {\n+        super();\n+        _entityClass = entityClass;\n+        _persistentClass = persistentClass;\n+        _session = session;\n+        _typeCoercer = typeCoercer;\n+\n+        Property property = _persistentClass.getIdentifierProperty();\n+        _idGetter = property.getPropertyAccessor(_entityClass).getGetter(_entityClass, property.getName());\n+    }\n+\n+    public String toClient(E value) {\n+\n+        if (value == null) return null;\n+\n+        Object id = _idGetter.get(value);\n+\n+        return _typeCoercer.coerce(id, String.class);\n+    }\n+\n+    @SuppressWarnings(\"unchecked\")\n+    public E toValue(String clientValue) {\n+\n+        if (InternalUtils.isBlank(clientValue)) return null;\n+\n+\n+        Class<?> idType = _idGetter.getReturnType();\n+\n+        Object id = _typeCoercer.coerce(clientValue, idType);\n+        Serializable ser = Defense.cast(id, Serializable.class, \"id\");\n+        return (E) _session.get(_entityClass, ser);\n+    }\n+\n }",
                "raw_url": "https://github.com/apache/tapestry-5/raw/1001156c1eed7f1fb2d1da7808bec55cad54ba17/tapestry-hibernate/src/main/java/org/apache/tapestry/internal/hibernate/HibernateEntityValueEncoder.java",
                "sha": "d1f29e61f7934d7ad9d315f4bed0809318fdbc5e",
                "status": "modified"
            }
        ],
        "message": "TAPESTRY-2260: Null relationships cause an NPE inside Hibernate when being value encoded by RadioGroup\n\ngit-svn-id: https://svn.apache.org/repos/asf/tapestry/tapestry5/trunk@637271 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/tapestry-5/commit/f7b09d7449aa3da94427e9d9bbed802b6febcd80",
        "repo": "tapestry-5",
        "unit_tests": [
            "HibernateEntityValueEncoderTest.java"
        ]
    },
    "tapestry-5_4dd0bec": {
        "bug_id": "tapestry-5_4dd0bec",
        "commit": "https://github.com/apache/tapestry-5/commit/4dd0bec529585289f51b810753733017288d1a70",
        "file": [
            {
                "additions": 4,
                "blob_url": "https://github.com/apache/tapestry-5/blob/4dd0bec529585289f51b810753733017288d1a70/tapestry-core/src/main/java/org/apache/tapestry5/corelib/components/Form.java",
                "changes": 10,
                "contents_url": "https://api.github.com/repos/apache/tapestry-5/contents/tapestry-core/src/main/java/org/apache/tapestry5/corelib/components/Form.java?ref=4dd0bec529585289f51b810753733017288d1a70",
                "deletions": 6,
                "filename": "tapestry-core/src/main/java/org/apache/tapestry5/corelib/components/Form.java",
                "patch": "@@ -499,12 +499,16 @@ Object onAction(EventContext context) throws IOException\n \n         try\n         {\n+            environment.push(BeanValidationContext.class, new BeanValidationContextImpl(validate));\n+\n             resources.triggerContextEvent(EventConstants.PREPARE_FOR_SUBMIT, context, eventCallback);\n \n             if (eventCallback.isAborted())\n                 return true;\n \n             resources.triggerContextEvent(EventConstants.PREPARE, context, eventCallback);\n+            if (eventCallback.isAborted())\n+                return true;\n \n             if (isFormCancelled())\n             {\n@@ -513,12 +517,6 @@ Object onAction(EventContext context) throws IOException\n                     return true;\n             }\n \n-\n-            environment.push(BeanValidationContext.class, new BeanValidationContextImpl(validate));\n-\n-            if (eventCallback.isAborted())\n-                return true;\n-\n             executeStoredActions();\n \n             heartbeat.end();",
                "raw_url": "https://github.com/apache/tapestry-5/raw/4dd0bec529585289f51b810753733017288d1a70/tapestry-core/src/main/java/org/apache/tapestry5/corelib/components/Form.java",
                "sha": "f7339ab21cea65277573431a4585836fed56754b",
                "status": "modified"
            }
        ],
        "message": "TAP5-1580: A Form with an event listener for \"canceled\" event can cause an NPE popping off a BeanEditContext from the Environment that wasn't pushed\n\ngit-svn-id: https://svn.apache.org/repos/asf/tapestry/tapestry5/trunk@1148599 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/tapestry-5/commit/c8dd48a2ca6bc45c0fb187d90b5fe9df2f5add8f",
        "repo": "tapestry-5",
        "unit_tests": [
            "FormTest.java",
            "FormTests.java"
        ]
    },
    "tapestry-5_cc5e26f": {
        "bug_id": "tapestry-5_cc5e26f",
        "commit": "https://github.com/apache/tapestry-5/commit/cc5e26f66e7df5bfbadc9bf5831b62cbfa1b2394",
        "file": [
            {
                "additions": 16,
                "blob_url": "https://github.com/apache/tapestry-5/blob/cc5e26f66e7df5bfbadc9bf5831b62cbfa1b2394/tapestry-core/src/main/java/org/apache/tapestry5/corelib/components/Form.java",
                "changes": 28,
                "contents_url": "https://api.github.com/repos/apache/tapestry-5/contents/tapestry-core/src/main/java/org/apache/tapestry5/corelib/components/Form.java?ref=cc5e26f66e7df5bfbadc9bf5831b62cbfa1b2394",
                "deletions": 12,
                "filename": "tapestry-core/src/main/java/org/apache/tapestry5/corelib/components/Form.java",
                "patch": "@@ -426,15 +426,12 @@ private void linkFormToZone(Link link)\n      * <p/>\n      * This method may also be invoked as the handler for the \"internalCreateRenderTimeFormSupport\" event.\n      *\n-     * @param clientId\n-     *         the client-side id for the rendered form\n-     *         element\n-     * @param actionSink\n-     *         used to collect component actions that will, ultimately, be\n-     *         written as the t:formdata hidden\n-     *         field\n-     * @param allocator\n-     *         used to allocate unique ids\n+     * @param clientId   the client-side id for the rendered form\n+     *                   element\n+     * @param actionSink used to collect component actions that will, ultimately, be\n+     *                   written as the t:formdata hidden\n+     *                   field\n+     * @param allocator  used to allocate unique ids\n      * @return form support object\n      */\n     @OnEvent(\"internalCreateRenderTimeFormSupport\")\n@@ -497,10 +494,10 @@ Object onAction(EventContext context) throws IOException\n \n         heartbeat.begin();\n \n+        boolean didPushBeanValidationContext = false;\n+\n         try\n         {\n-            environment.push(BeanValidationContext.class, new BeanValidationContextImpl(validate));\n-\n             resources.triggerContextEvent(EventConstants.PREPARE_FOR_SUBMIT, context, eventCallback);\n \n             if (eventCallback.isAborted())\n@@ -517,6 +514,10 @@ Object onAction(EventContext context) throws IOException\n                     return true;\n             }\n \n+            environment.push(BeanValidationContext.class, new BeanValidationContextImpl(validate));\n+\n+            didPushBeanValidationContext = true;\n+\n             executeStoredActions();\n \n             heartbeat.end();\n@@ -559,7 +560,10 @@ Object onAction(EventContext context) throws IOException\n \n             environment.pop(ValidationTracker.class);\n \n-            environment.pop(BeanValidationContext.class);\n+            if (didPushBeanValidationContext)\n+            {\n+                environment.pop(BeanValidationContext.class);\n+            }\n \n             activeTracker = null;\n         }",
                "raw_url": "https://github.com/apache/tapestry-5/raw/cc5e26f66e7df5bfbadc9bf5831b62cbfa1b2394/tapestry-core/src/main/java/org/apache/tapestry5/corelib/components/Form.java",
                "sha": "bc27f3970209b05ddd60328f07da7586d7f12683",
                "status": "modified"
            }
        ],
        "message": "TAP5-1580: A Form with an event listener for \"canceled\" event can cause an NPE popping off a BeanEditContext from the Environment that wasn't pushed\n\ngit-svn-id: https://svn.apache.org/repos/asf/tapestry/tapestry5/trunk@1148606 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/tapestry-5/commit/5a55a0f3a182df6b2efa3d013f84b96bf1830a06",
        "repo": "tapestry-5",
        "unit_tests": [
            "FormTest.java",
            "FormTests.java"
        ]
    }
}