[
    {
        "repo": "gora",
        "commit": "https://github.com/apache/gora/commit/f267370f1bb3a3bc3c69550be8c2d9d7d33affc7",
        "bug_id": "gora_f267370",
        "message": "GORA-389: Document or List mapping change cause NPE in clearDirty()\n\nThis close PR #15\n\nSquashed commit of the following:\n\ncommit f07ac202b1890afd27d5e071dff5eafdc34bc044\nAuthor: Damien Raude-Morvan <drazzib@drazzib.com>\nDate:   Sat Nov 1 12:16:38 2014 +0100\n\n    GORA-389 Add MongoStore specific tests for Map/List handling\n\ncommit 75805e2eaf3c1c69573dc1b2b2df12a25aec8d25\nAuthor: Damien Raude-Morvan <damien@dictanova.com>\nDate:   Wed Oct 8 20:03:36 2014 +0200\n\n    Don't perform clearDirty() multiple times.\n\ncommit d7a6a4794f2fef492f1e116e1108b59d8e9c81bb\nAuthor: Damien Raude-Morvan <damien@dictanova.com>\nDate:   Wed Oct 8 20:04:06 2014 +0200\n\n    Return empty DirtyListWrapper or DirtyMapWrapper instead of null.",
        "parent": "https://github.com/apache/gora/commit/0126ecd900ec6c9b036db4312073d5ec8ad5f1ca",
        "patched_files": [
            "MongoStore.java",
            "MongoDBResult.java"
        ],
        "file": [
            {
                "status": "modified",
                "additions": 0,
                "raw_url": "https://github.com/apache/gora/raw/f267370f1bb3a3bc3c69550be8c2d9d7d33affc7/gora-mongodb/src/main/java/org/apache/gora/mongodb/query/MongoDBResult.java",
                "contents_url": "https://api.github.com/repos/apache/gora/contents/gora-mongodb/src/main/java/org/apache/gora/mongodb/query/MongoDBResult.java?ref=f267370f1bb3a3bc3c69550be8c2d9d7d33affc7",
                "filename": "gora-mongodb/src/main/java/org/apache/gora/mongodb/query/MongoDBResult.java",
                "deletions": 4,
                "sha": "5524345ac8fb00d683847eb4756a1702cbb2efca",
                "blob_url": "https://github.com/apache/gora/blob/f267370f1bb3a3bc3c69550be8c2d9d7d33affc7/gora-mongodb/src/main/java/org/apache/gora/mongodb/query/MongoDBResult.java",
                "patch": "@@ -74,10 +74,6 @@ protected boolean nextInner() throws IOException {\n     key = (K) obj.get(\"_id\");\n     persistent = ((MongoStore<K, T>) getDataStore()).newInstance(obj,\n         getQuery().getFields());\n-    if (persistent != null) {\n-      persistent.clearDirty();\n-    }\n-\n     return persistent != null;\n   }\n ",
                "changes": 4
            },
            {
                "status": "modified",
                "additions": 14,
                "raw_url": "https://github.com/apache/gora/raw/f267370f1bb3a3bc3c69550be8c2d9d7d33affc7/gora-mongodb/src/main/java/org/apache/gora/mongodb/store/MongoStore.java",
                "contents_url": "https://api.github.com/repos/apache/gora/contents/gora-mongodb/src/main/java/org/apache/gora/mongodb/store/MongoStore.java?ref=f267370f1bb3a3bc3c69550be8c2d9d7d33affc7",
                "filename": "gora-mongodb/src/main/java/org/apache/gora/mongodb/store/MongoStore.java",
                "deletions": 19,
                "sha": "2eea3b89d5fd0196019c2bd9dbe216da874115cd",
                "blob_url": "https://github.com/apache/gora/blob/f267370f1bb3a3bc3c69550be8c2d9d7d33affc7/gora-mongodb/src/main/java/org/apache/gora/mongodb/store/MongoStore.java",
                "patch": "@@ -369,13 +369,8 @@ public T get(final K key, final String[] fields) {\n     }\n     // Execute the query\n     DBObject res = mongoClientColl.findOne(q, proj);\n-    // Build the corresponding persistent and clears its states\n-    T persistent = newInstance(res, dbFields);\n-    if (persistent != null) {\n-      persistent.clearDirty();\n-    }\n-    // Done\n-    return persistent;\n+    // Build the corresponding persistent\n+    return newInstance(res, dbFields);\n   }\n \n   /**\n@@ -666,14 +661,14 @@ private Object fromMongoRecord(final Schema fieldSchema, final String docf,\n     return result;\n   }\n \n-  private Object fromMongoList(final String docf, final Schema fieldSchema,\n-      final BSONDecorator easybson, final Field f) {\n+  /* pp */ Object fromMongoList(final String docf, final Schema fieldSchema,\n+                       final BSONDecorator easybson, final Field f) {\n     List<Object> list = easybson.getDBList(docf);\n+    List<Object> rlist = new ArrayList<Object>();\n     if (list == null) {\n-      return null;\n+      return new DirtyListWrapper(rlist);\n     }\n \n-    List<Object> rlist = new ArrayList<Object>();\n \n     for (Object item : list) {\n       DocumentFieldType storeType = mapping.getDocumentFieldType(docf);\n@@ -684,13 +679,13 @@ private Object fromMongoList(final String docf, final Schema fieldSchema,\n     return new DirtyListWrapper<Object>(rlist);\n   }\n \n-  private Object fromMongoMap(final String docf, final Schema fieldSchema,\n-      final BSONDecorator easybson, final Field f) {\n+  /* pp */ Object fromMongoMap(final String docf, final Schema fieldSchema,\n+                      final BSONDecorator easybson, final Field f) {\n     BasicDBObject map = easybson.getDBObject(docf);\n+    Map<Utf8, Object> rmap = new HashMap<Utf8, Object>();\n     if (map == null) {\n-      return null;\n+        return new DirtyMapWrapper(rmap);\n     }\n-    Map<Utf8, Object> rmap = new HashMap<Utf8, Object>();\n     for (Entry<String, Object> e : map.entrySet()) {\n       String mapKey = e.getKey();\n       String decodedMapKey = decodeFieldKey(mapKey);\n@@ -960,12 +955,12 @@ private Object stringToMongo(final Schema fieldSchema,\n   private BasicDBObject mapToMongo(final String docf,\n       final Map<CharSequence, ?> value, final Schema fieldSchema,\n       final Type fieldType) {\n+    BasicDBObject map = new BasicDBObject();\n     // Handle null case\n     if (value == null)\n-      return null;\n+      return map;\n \n     // Handle regular cases\n-    BasicDBObject map = new BasicDBObject();\n     for (Entry<CharSequence, ?> e : value.entrySet()) {\n       String mapKey = e.getKey().toString();\n       String encodedMapKey = encodeFieldKey(mapKey);\n@@ -993,12 +988,12 @@ private BasicDBObject mapToMongo(final String docf,\n    */\n   private BasicDBList listToMongo(final String docf, final Collection<?> array,\n       final Schema fieldSchema, final Type fieldType) {\n+    BasicDBList list = new BasicDBList();\n     // Handle null case\n     if (array == null)\n-      return null;\n+      return list;\n \n     // Handle regular cases\n-    BasicDBList list = new BasicDBList();\n     for (Object item : array) {\n       DocumentFieldType storeType = mapping.getDocumentFieldType(docf);\n       Object result = toDBObject(docf, fieldSchema, fieldType, storeType, item);",
                "changes": 33
            },
            {
                "status": "modified",
                "additions": 46,
                "raw_url": "https://github.com/apache/gora/raw/f267370f1bb3a3bc3c69550be8c2d9d7d33affc7/gora-mongodb/src/test/java/org/apache/gora/mongodb/store/TestMongoStore.java",
                "contents_url": "https://api.github.com/repos/apache/gora/contents/gora-mongodb/src/test/java/org/apache/gora/mongodb/store/TestMongoStore.java?ref=f267370f1bb3a3bc3c69550be8c2d9d7d33affc7",
                "filename": "gora-mongodb/src/test/java/org/apache/gora/mongodb/store/TestMongoStore.java",
                "deletions": 0,
                "sha": "0f01173939e677f4bb04528b37e996b2c37c5017",
                "blob_url": "https://github.com/apache/gora/blob/f267370f1bb3a3bc3c69550be8c2d9d7d33affc7/gora-mongodb/src/test/java/org/apache/gora/mongodb/store/TestMongoStore.java",
                "patch": "@@ -17,15 +17,22 @@\n  */\n package org.apache.gora.mongodb.store;\n \n+import static org.junit.Assert.assertNotNull;\n+\n import java.io.IOException;\n \n import org.apache.gora.examples.generated.Employee;\n import org.apache.gora.examples.generated.WebPage;\n import org.apache.gora.mongodb.GoraMongodbTestDriver;\n+import org.apache.gora.mongodb.utils.BSONDecorator;\n import org.apache.gora.store.DataStore;\n import org.apache.gora.store.DataStoreTestBase;\n import org.junit.Before;\n import org.junit.Ignore;\n+import org.junit.Test;\n+\n+import com.mongodb.BasicDBList;\n+import com.mongodb.BasicDBObject;\n \n public class TestMongoStore extends DataStoreTestBase {\n \n@@ -74,4 +81,43 @@ public void testGet3UnionField() throws IOException, Exception {\n     // MongoStore doesn't support 3 types union field yet\n   }\n \n+  @Test\n+  public void testFromMongoList_null() throws Exception {\n+    MongoStore store = new MongoStore();\n+    BasicDBObject noField = new BasicDBObject();\n+    String field = \"myField\";\n+    Object item = store.fromMongoList(field, null, new BSONDecorator(noField),\n+        null);\n+    assertNotNull(item);\n+  }\n+\n+  @Test\n+  public void testFromMongoList_empty() throws Exception {\n+    MongoStore store = new MongoStore();\n+    String field = \"myField\";\n+    BasicDBObject emptyField = new BasicDBObject(field, new BasicDBList());\n+    Object item = store.fromMongoList(field, null,\n+        new BSONDecorator(emptyField), null);\n+    assertNotNull(item);\n+  }\n+\n+  @Test\n+  public void testFromMongoMap_null() throws Exception {\n+    MongoStore store = new MongoStore();\n+    BasicDBObject noField = new BasicDBObject();\n+    String field = \"myField\";\n+    Object item = store.fromMongoMap(field, null, new BSONDecorator(noField),\n+        null);\n+    assertNotNull(item);\n+  }\n+\n+  @Test\n+  public void testFromMongoMap_empty() throws Exception {\n+    MongoStore store = new MongoStore();\n+    String field = \"myField\";\n+    BasicDBObject emptyField = new BasicDBObject(field, new BasicDBObject());\n+    Object item = store.fromMongoMap(field, null,\n+        new BSONDecorator(emptyField), null);\n+    assertNotNull(item);\n+  }\n }",
                "changes": 46
            }
        ],
        "unit_tests": [
            "TestMongoStore.java"
        ]
    },
    {
        "buggy": false,
        "test_file": "gora-mongodb/src/test/java/org/apache/gora/mongodb/store/TestMongoStore.java",
        "buggy_files": [
            "gora-mongodb/src/main/java/org/apache/gora/mongodb/store/MongoStore.java",
            "gora-mongodb/src/main/java/org/apache/gora/mongodb/query/MongoDBResult.java"
        ],
        "fixed": true
    }
]