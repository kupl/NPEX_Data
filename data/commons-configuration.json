{
    "commons-configuration_3af8e6e": {
        "bug_id": "commons-configuration_3af8e6e",
        "commit": "https://github.com/apache/commons-configuration/commit/3af8e6e23b211cd7d564b4d32cd214987131183d",
        "file": [
            {
                "additions": 29,
                "blob_url": "https://github.com/apache/commons-configuration/blob/3af8e6e23b211cd7d564b4d32cd214987131183d/src/main/java/org/apache/commons/configuration2/plist/XMLPropertyListConfiguration.java",
                "changes": 40,
                "contents_url": "https://api.github.com/repos/apache/commons-configuration/contents/src/main/java/org/apache/commons/configuration2/plist/XMLPropertyListConfiguration.java?ref=3af8e6e23b211cd7d564b4d32cd214987131183d",
                "deletions": 11,
                "filename": "src/main/java/org/apache/commons/configuration2/plist/XMLPropertyListConfiguration.java",
                "patch": "@@ -47,6 +47,7 @@\n import org.apache.commons.configuration2.HierarchicalConfiguration;\n import org.apache.commons.configuration2.MapConfiguration;\n import org.apache.commons.configuration2.ex.ConfigurationException;\n+import org.apache.commons.configuration2.ex.ConfigurationRuntimeException;\n import org.apache.commons.configuration2.io.FileLocator;\n import org.apache.commons.configuration2.io.FileLocatorAware;\n import org.apache.commons.configuration2.tree.ImmutableNode;\n@@ -413,7 +414,7 @@ else if (value instanceof Map)\n         }\n         else if (value instanceof byte[])\n         {\n-            String base64 = null;\n+            String base64;\n             try\n             {\n                 base64 = new String(Base64.encodeBase64((byte[]) value), DATA_ENCODING);\n@@ -501,6 +502,23 @@ private PListNodeBuilder peek()\n             }\n         }\n \n+        /**\n+         * Returns the node on top of the non-empty stack. Throws an exception if the\n+         * stack is empty.\n+         *\n+         * @return the top node of the stack\n+         * @throws ConfigurationRuntimeException if the stack is empty\n+         */\n+        private PListNodeBuilder peekNE()\n+        {\n+            PListNodeBuilder result = peek();\n+            if (result == null)\n+            {\n+                throw new ConfigurationRuntimeException(\"Access to empty stack!\");\n+            }\n+            return result;\n+        }\n+\n         /**\n          * Remove and return the node on the top of the stack.\n          */\n@@ -549,7 +567,7 @@ public void endElement(String uri, String localName, String qName) throws SAXExc\n                 // create a new node, link it to its parent and push it on the stack\n                 PListNodeBuilder node = new PListNodeBuilder();\n                 node.setName(buffer.toString());\n-                peek().addChild(node);\n+                peekNE().addChild(node);\n                 push(node);\n             }\n             else if (\"dict\".equals(qName))\n@@ -562,41 +580,41 @@ else if (\"dict\".equals(qName))\n                     XMLPropertyListConfiguration config = new XMLPropertyListConfiguration(builder.createNode());\n \n                     // add it to the ArrayNodeBuilder\n-                    ArrayNodeBuilder node = (ArrayNodeBuilder) peek();\n+                    ArrayNodeBuilder node = (ArrayNodeBuilder) peekNE();\n                     node.addValue(config);\n                 }\n             }\n             else\n             {\n                 if (\"string\".equals(qName))\n                 {\n-                    peek().addValue(buffer.toString());\n+                    peekNE().addValue(buffer.toString());\n                 }\n                 else if (\"integer\".equals(qName))\n                 {\n-                    peek().addIntegerValue(buffer.toString());\n+                    peekNE().addIntegerValue(buffer.toString());\n                 }\n                 else if (\"real\".equals(qName))\n                 {\n-                    peek().addRealValue(buffer.toString());\n+                    peekNE().addRealValue(buffer.toString());\n                 }\n                 else if (\"true\".equals(qName))\n                 {\n-                    peek().addTrueValue();\n+                    peekNE().addTrueValue();\n                 }\n                 else if (\"false\".equals(qName))\n                 {\n-                    peek().addFalseValue();\n+                    peekNE().addFalseValue();\n                 }\n                 else if (\"data\".equals(qName))\n                 {\n-                    peek().addDataValue(buffer.toString());\n+                    peekNE().addDataValue(buffer.toString());\n                 }\n                 else if (\"date\".equals(qName))\n                 {\n                     try\n                     {\n-                        peek().addDateValue(buffer.toString());\n+                        peekNE().addDateValue(buffer.toString());\n                     }\n                     catch (IllegalArgumentException iex)\n                     {\n@@ -607,7 +625,7 @@ else if (\"date\".equals(qName))\n                 else if (\"array\".equals(qName))\n                 {\n                     ArrayNodeBuilder array = (ArrayNodeBuilder) pop();\n-                    peek().addList(array);\n+                    peekNE().addList(array);\n                 }\n \n                 // remove the plist node on the stack once the value has been parsed,",
                "raw_url": "https://github.com/apache/commons-configuration/raw/3af8e6e23b211cd7d564b4d32cd214987131183d/src/main/java/org/apache/commons/configuration2/plist/XMLPropertyListConfiguration.java",
                "sha": "4951804b8c0ca9343af354db9b2c9534d300cc6e",
                "status": "modified"
            }
        ],
        "message": "Fixed IntelliJ warnings related to potential NPEs.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/configuration/trunk@1674555 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/commons-configuration/commit/997f50595fd7b2df1730c7d4f9a0332ae9aad9f6",
        "repo": "commons-configuration",
        "unit_tests": [
            "TestXMLPropertyListConfiguration.java"
        ]
    },
    "commons-configuration_4975496": {
        "bug_id": "commons-configuration_4975496",
        "commit": "https://github.com/apache/commons-configuration/commit/4975496a3ec2c152fb48a7b681000447c784d336",
        "file": [
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/commons-configuration/blob/4975496a3ec2c152fb48a7b681000447c784d336/src/main/java/org/apache/commons/configuration2/plist/XMLPropertyListConfiguration.java",
                "changes": 1,
                "contents_url": "https://api.github.com/repos/apache/commons-configuration/contents/src/main/java/org/apache/commons/configuration2/plist/XMLPropertyListConfiguration.java?ref=4975496a3ec2c152fb48a7b681000447c784d336",
                "deletions": 0,
                "filename": "src/main/java/org/apache/commons/configuration2/plist/XMLPropertyListConfiguration.java",
                "patch": "@@ -574,6 +574,7 @@ else if (\"dict\".equals(qName))\n             {\n                 // remove the root of the XMLPropertyListConfiguration previously pushed on the stack\n                 PListNodeBuilder builder = pop();\n+                assert builder != null : \"Stack was empty!\";\n                 if (peek() instanceof ArrayNodeBuilder)\n                 {\n                     // create the configuration",
                "raw_url": "https://github.com/apache/commons-configuration/raw/4975496a3ec2c152fb48a7b681000447c784d336/src/main/java/org/apache/commons/configuration2/plist/XMLPropertyListConfiguration.java",
                "sha": "0a3a3dd8d6343ef98885953f8486631a1c3e9bc8",
                "status": "modified"
            }
        ],
        "message": "Fixed another IntelliJ warning related to a potential NPE.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/configuration/trunk@1674558 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/commons-configuration/commit/55f62e3f0a761ba60300f70285d10b038092c36f",
        "repo": "commons-configuration",
        "unit_tests": [
            "TestXMLPropertyListConfiguration.java"
        ]
    },
    "commons-configuration_97e542e": {
        "bug_id": "commons-configuration_97e542e",
        "commit": "https://github.com/apache/commons-configuration/commit/97e542e3afed5e1045b64c983ebb428448e78d44",
        "file": [
            {
                "additions": 6,
                "blob_url": "https://github.com/apache/commons-configuration/blob/97e542e3afed5e1045b64c983ebb428448e78d44/src/java/org/apache/commons/configuration/ConfigurationUtils.java",
                "changes": 6,
                "contents_url": "https://api.github.com/repos/apache/commons-configuration/contents/src/java/org/apache/commons/configuration/ConfigurationUtils.java?ref=97e542e3afed5e1045b64c983ebb428448e78d44",
                "deletions": 0,
                "filename": "src/java/org/apache/commons/configuration/ConfigurationUtils.java",
                "patch": "@@ -258,6 +258,12 @@ public static URL locate(String name)\n      */\n     public static URL locate(String base, String name)\n     {\n+        if (name == null)\n+        {\n+            // undefined, always return null\n+            return null;\n+        }\n+        \n         URL url = null;\n \n         // attempt to create an URL directly",
                "raw_url": "https://github.com/apache/commons-configuration/raw/97e542e3afed5e1045b64c983ebb428448e78d44/src/java/org/apache/commons/configuration/ConfigurationUtils.java",
                "sha": "9e45fdd3295813ab6da07c2cc185027bb0f65ae7",
                "status": "modified"
            }
        ],
        "message": "Fixed a NPE in locate()\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/configuration/trunk@234094 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/commons-configuration/commit/36bc1584500da7fb876211d26cfb4f2c0420f88c",
        "repo": "commons-configuration",
        "unit_tests": [
            "TestConfigurationUtils.java"
        ]
    },
    "commons-configuration_ef6627d": {
        "bug_id": "commons-configuration_ef6627d",
        "commit": "https://github.com/apache/commons-configuration/commit/ef6627d9de7f2d926ee211110bbe46fcad163010",
        "file": [
            {
                "additions": 20,
                "blob_url": "https://github.com/apache/commons-configuration/blob/ef6627d9de7f2d926ee211110bbe46fcad163010/src/java/org/apache/commons/configuration/XMLConfiguration.java",
                "changes": 35,
                "contents_url": "https://api.github.com/repos/apache/commons-configuration/contents/src/java/org/apache/commons/configuration/XMLConfiguration.java?ref=ef6627d9de7f2d926ee211110bbe46fcad163010",
                "deletions": 15,
                "filename": "src/java/org/apache/commons/configuration/XMLConfiguration.java",
                "patch": "@@ -50,7 +50,7 @@\n  * @author J\ufffdrg Schaible\n  * @author <a href=\"mailto:kelvint@apache.org\">Kelvin Tan</a>\n  * @author <a href=\"mailto:dlr@apache.org\">Daniel Rall</a>\n- * @version $Revision: 1.4 $, $Date: 2004/07/12 12:14:38 $\n+ * @version $Revision: 1.5 $, $Date: 2004/07/12 14:40:54 $\n  */\n public class XMLConfiguration extends BasePathConfiguration\n {\n@@ -81,11 +81,20 @@\n \n     /**\n      * Empty construtor.  You must provide a file/fileName\n-     * and call the load method\n-     *\n+     * to save the configuration.\n      */\n     public XMLConfiguration()\n     {\n+        // build an empty document.\n+        DocumentBuilder builder = null;\n+        try {\n+            builder = DocumentBuilderFactory.newInstance().newDocumentBuilder();\n+        } catch (ParserConfigurationException e) {\n+            throw new ConfigurationRuntimeException(e.getMessage(), e);\n+        }\n+\n+        document = builder.newDocument();\n+        document.appendChild(document.createElement(\"configuration\"));\n     }\n \n     /**\n@@ -126,19 +135,19 @@ public void load() throws ConfigurationException\n         }\n         catch (IOException de)\n         {\n-            throw new ConfigurationException(\"Could not load from \" + file.getAbsolutePath());\n+            throw new ConfigurationException(\"Could not load from \" + file.getAbsolutePath(), de);\n         }\n         catch (ParserConfigurationException ex)\n         {\n-            throw new ConfigurationException(\"Could not configure parser\");\n+            throw new ConfigurationException(\"Could not configure parser\", ex);\n \t\t}\n         catch (FactoryConfigurationError ex)\n         {\n-            throw new ConfigurationException(\"Could not create parser\");\n+            throw new ConfigurationException(\"Could not create parser\", ex);\n         }\n         catch (SAXException ex)\n         {\n-            throw new ConfigurationException(\"Error parsing file \" + file.getAbsolutePath());\n+            throw new ConfigurationException(\"Error parsing file \" + file.getAbsolutePath(), ex);\n \t\t}\n \n         initProperties(document.getDocumentElement(), new StringBuffer());\n@@ -204,13 +213,9 @@ private void processAttributes(String hierarchy, Element element)\n         NamedNodeMap attributes = element.getAttributes();\n         for (int i = 0; i < attributes.getLength(); ++i)\n         {\n-            Node node = attributes.item(i);\n-            if (node instanceof Attr)\n-            {\n-                Attr attr = (Attr) node;\n-                String attrName = hierarchy + '[' + ATTRIB_MARKER + attr.getName() + ']';\n-                super.addProperty(attrName, attr.getValue());\n-            }\n+            Attr attr = (Attr) attributes.item(i);\n+            String attrName = hierarchy + '[' + ATTRIB_MARKER + attr.getName() + ']';\n+            super.addProperty(attrName, attr.getValue());\n         }\n     }\n \n@@ -441,7 +446,7 @@ public void setFileName(String fileName)\n \n     /**\n      * Returns the fileName.\n-     * \n+     *\n      * @return String\n      */\n     public String getFileName()",
                "raw_url": "https://github.com/apache/commons-configuration/raw/ef6627d9de7f2d926ee211110bbe46fcad163010/src/java/org/apache/commons/configuration/XMLConfiguration.java",
                "sha": "0843f410c37a0d43033dd3990bd1417e202e2663",
                "status": "modified"
            }
        ],
        "message": "Fixed bug 29722 (addProperty throws a NPE in DOMConfiguration)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/configuration/trunk@141888 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/commons-configuration/commit/d2f445fe15b4bcee24802885f3e09113dba43e62",
        "repo": "commons-configuration",
        "unit_tests": [
            "TestXMLConfiguration.java"
        ]
    },
    "commons-configuration_fc7db34": {
        "bug_id": "commons-configuration_fc7db34",
        "commit": "https://github.com/apache/commons-configuration/commit/fc7db34c11272bceda6fee8a28607d31ee1f0782",
        "file": [
            {
                "additions": 7,
                "blob_url": "https://github.com/apache/commons-configuration/blob/fc7db34c11272bceda6fee8a28607d31ee1f0782/src/java/org/apache/commons/configuration/XMLConfiguration.java",
                "changes": 9,
                "contents_url": "https://api.github.com/repos/apache/commons-configuration/contents/src/java/org/apache/commons/configuration/XMLConfiguration.java?ref=fc7db34c11272bceda6fee8a28607d31ee1f0782",
                "deletions": 2,
                "filename": "src/java/org/apache/commons/configuration/XMLConfiguration.java",
                "patch": "@@ -68,7 +68,7 @@\n  * @author <a href=\"mailto:kelvint@apache.org\">Kelvin Tan </a>\n  * @author <a href=\"mailto:dlr@apache.org\">Daniel Rall </a>\n  * @author Emmanuel Bourg\n- * @version $Revision: 1.11 $, $Date: 2004/09/03 16:36:20 $\n+ * @version $Revision: 1.12 $, $Date: 2004/09/06 11:40:34 $\n  */\n public class XMLConfiguration extends BasePathConfiguration {\n     // For conformance with xpath\n@@ -166,6 +166,11 @@ private static File resourceURLToFile(String resource) {\n         if (confURL == null) {\n             confURL = ClassLoader.getSystemResource(resource);\n         }\n+        if (confURL == null) {\n+            throw new IllegalArgumentException(\"Resource: \"\n+                    + resource + \" not found through context or \"\n+                    + \"system classloaders.\");\n+        }\n         return new File(confURL.getFile());\n     }\n \n@@ -696,4 +701,4 @@ protected static String parseAttributeName(String key) {\n \n         return name;\n     }\n-}\n\\ No newline at end of file\n+}",
                "raw_url": "https://github.com/apache/commons-configuration/raw/fc7db34c11272bceda6fee8a28607d31ee1f0782/src/java/org/apache/commons/configuration/XMLConfiguration.java",
                "sha": "780131acac6e148f893ce6c22b3278aaaf39d9cb",
                "status": "modified"
            }
        ],
        "message": "Handle NPE when missing resource. Patch from Bean Hutchison\n<Ben.Hutchison@sensis.com.au>.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/configuration/trunk@141935 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/commons-configuration/commit/b9987345e00d42463328a978bf839e2e780e2829",
        "repo": "commons-configuration",
        "unit_tests": [
            "TestXMLConfiguration.java"
        ]
    }
}