{
    "attic-polygene-java_d930661": {
        "bug_id": "attic-polygene-java_d930661",
        "commit": "https://github.com/apache/attic-polygene-java/commit/d93066101075e3533567d4b63d21173d2de74fce",
        "file": [
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/attic-polygene-java/blob/d93066101075e3533567d4b63d21173d2de74fce/api/src/main/java/org/qi4j/composite/AmbiguousMixinTypeException.java",
                "changes": 3,
                "contents_url": "https://api.github.com/repos/apache/attic-polygene-java/contents/api/src/main/java/org/qi4j/composite/AmbiguousMixinTypeException.java?ref=d93066101075e3533567d4b63d21173d2de74fce",
                "deletions": 1,
                "filename": "api/src/main/java/org/qi4j/composite/AmbiguousMixinTypeException.java",
                "patch": "@@ -17,7 +17,8 @@\n  */\n package org.qi4j.composite;\n \n-/** This Exception is thrown when more than one Composite implements a MixinType that one tries\n+/**\n+ * This Exception is thrown when more than one Composite implements a MixinType that one tries\n  * to use to create a Composite instance from.\n  * <p>\n  * For instance;",
                "raw_url": "https://github.com/apache/attic-polygene-java/raw/d93066101075e3533567d4b63d21173d2de74fce/api/src/main/java/org/qi4j/composite/AmbiguousMixinTypeException.java",
                "sha": "4233240625cef864f287ccb9aa439c4762d88977",
                "status": "modified"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/attic-polygene-java/blob/d93066101075e3533567d4b63d21173d2de74fce/api/src/main/java/org/qi4j/composite/Composite.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/attic-polygene-java/contents/api/src/main/java/org/qi4j/composite/Composite.java?ref=d93066101075e3533567d4b63d21173d2de74fce",
                "deletions": 1,
                "filename": "api/src/main/java/org/qi4j/composite/Composite.java",
                "patch": "@@ -14,8 +14,8 @@\n  */\n package org.qi4j.composite;\n \n-import org.qi4j.property.PropertyMixin;\n import java.io.Serializable;\n+import org.qi4j.property.PropertyMixin;\n \n /**\n  * All Composite objects must implement this interface. Let the",
                "raw_url": "https://github.com/apache/attic-polygene-java/raw/d93066101075e3533567d4b63d21173d2de74fce/api/src/main/java/org/qi4j/composite/Composite.java",
                "sha": "ec5428d7034f695829a1d90eee8dd390c700bc37",
                "status": "modified"
            },
            {
                "additions": 40,
                "blob_url": "https://github.com/apache/attic-polygene-java/blob/d93066101075e3533567d4b63d21173d2de74fce/api/src/main/java/org/qi4j/composite/CompositeNotRegisteredException.java",
                "changes": 40,
                "contents_url": "https://api.github.com/repos/apache/attic-polygene-java/contents/api/src/main/java/org/qi4j/composite/CompositeNotRegisteredException.java?ref=d93066101075e3533567d4b63d21173d2de74fce",
                "deletions": 0,
                "filename": "api/src/main/java/org/qi4j/composite/CompositeNotRegisteredException.java",
                "patch": "@@ -0,0 +1,40 @@\n+/*\n+ * Copyright (c) 2008, Niclas Hedhman. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ *\n+ */\n+package org.qi4j.composite;\n+\n+import org.qi4j.structure.Module;\n+\n+public class CompositeNotRegisteredException extends InvalidApplicationException\n+{\n+    private Class<? extends Composite> compositeType;\n+    private Module module;\n+\n+    public CompositeNotRegisteredException( Class<? extends Composite> compositeType, Module module )\n+    {\n+        super( \"Trying to find unregistered composite of type [\" + compositeType.getName() + \"] in module [\" +\n+               module.name().get() + \"].\" );\n+        this.compositeType = compositeType;\n+        this.module = module;\n+    }\n+\n+    public Class<? extends Composite> compositeType()\n+    {\n+        return compositeType;\n+    }\n+\n+    public Module module()\n+    {\n+        return module;\n+    }\n+}",
                "raw_url": "https://github.com/apache/attic-polygene-java/raw/d93066101075e3533567d4b63d21173d2de74fce/api/src/main/java/org/qi4j/composite/CompositeNotRegisteredException.java",
                "sha": "2c5616731cfd9e53dd5a0a0d35d7d344ae90ef15",
                "status": "added"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/attic-polygene-java/blob/d93066101075e3533567d4b63d21173d2de74fce/api/src/main/java/org/qi4j/composite/InvalidApplicationException.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/attic-polygene-java/contents/api/src/main/java/org/qi4j/composite/InvalidApplicationException.java?ref=d93066101075e3533567d4b63d21173d2de74fce",
                "deletions": 1,
                "filename": "api/src/main/java/org/qi4j/composite/InvalidApplicationException.java",
                "patch": "@@ -19,7 +19,7 @@\n  * This happens primarily when client code tries to instantiate Composites\n  * and objects which have not been registered in the ModuleAssembly.\n  */\n-public class InvalidApplicationException\n+public abstract class InvalidApplicationException\n     extends RuntimeException\n {\n     public InvalidApplicationException( String string )",
                "raw_url": "https://github.com/apache/attic-polygene-java/raw/d93066101075e3533567d4b63d21173d2de74fce/api/src/main/java/org/qi4j/composite/InvalidApplicationException.java",
                "sha": "03c0318e5ba4d157877faa481c1a7128930f1f5b",
                "status": "modified"
            },
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/attic-polygene-java/blob/d93066101075e3533567d4b63d21173d2de74fce/api/src/main/java/org/qi4j/composite/MixinMappingException.java",
                "changes": 3,
                "contents_url": "https://api.github.com/repos/apache/attic-polygene-java/contents/api/src/main/java/org/qi4j/composite/MixinMappingException.java?ref=d93066101075e3533567d4b63d21173d2de74fce",
                "deletions": 1,
                "filename": "api/src/main/java/org/qi4j/composite/MixinMappingException.java",
                "patch": "@@ -17,7 +17,8 @@\n  */\n package org.qi4j.composite;\n \n-/** This Exception is thrown when it is not possible to map the MixinType to a valid\n+/**\n+ * This Exception is thrown when it is not possible to map the MixinType to a valid\n  * CompositeType.\n  */\n public class MixinMappingException extends RuntimeException",
                "raw_url": "https://github.com/apache/attic-polygene-java/raw/d93066101075e3533567d4b63d21173d2de74fce/api/src/main/java/org/qi4j/composite/MixinMappingException.java",
                "sha": "9e25ba70c8e807a6957b478a018cf4e466036d3b",
                "status": "modified"
            },
            {
                "additions": 3,
                "blob_url": "https://github.com/apache/attic-polygene-java/blob/d93066101075e3533567d4b63d21173d2de74fce/api/src/main/java/org/qi4j/composite/ObjectBuilder.java",
                "changes": 5,
                "contents_url": "https://api.github.com/repos/apache/attic-polygene-java/contents/api/src/main/java/org/qi4j/composite/ObjectBuilder.java?ref=d93066101075e3533567d4b63d21173d2de74fce",
                "deletions": 2,
                "filename": "api/src/main/java/org/qi4j/composite/ObjectBuilder.java",
                "patch": "@@ -38,10 +38,11 @@\n      */\r\n     ObjectBuilder<T> use( Object... objects );\r\n \r\n-    /** Creates a new instance from this ObjectBuilder.\r\n+    /**\r\n+     * Creates a new instance from this ObjectBuilder.\r\n      *\r\n      * @return An object of type <code><i>T</i></code>.\r\n-     * @throws InstantiationException If the object class is not compatible with the  \r\n+     * @throws InstantiationException If the object class is not compatible with the\r\n      */\r\n     T newInstance()\r\n         throws InstantiationException;\r",
                "raw_url": "https://github.com/apache/attic-polygene-java/raw/d93066101075e3533567d4b63d21173d2de74fce/api/src/main/java/org/qi4j/composite/ObjectBuilder.java",
                "sha": "22ca82420262aab1ab055d996c707e5a2b421b96",
                "status": "modified"
            },
            {
                "additions": 40,
                "blob_url": "https://github.com/apache/attic-polygene-java/blob/d93066101075e3533567d4b63d21173d2de74fce/api/src/main/java/org/qi4j/composite/ObjectNotRegisteredException.java",
                "changes": 40,
                "contents_url": "https://api.github.com/repos/apache/attic-polygene-java/contents/api/src/main/java/org/qi4j/composite/ObjectNotRegisteredException.java?ref=d93066101075e3533567d4b63d21173d2de74fce",
                "deletions": 0,
                "filename": "api/src/main/java/org/qi4j/composite/ObjectNotRegisteredException.java",
                "patch": "@@ -0,0 +1,40 @@\n+/*\n+ * Copyright (c) 2008, Niclas Hedhman. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ *\n+ */\n+package org.qi4j.composite;\n+\n+import org.qi4j.structure.Module;\n+\n+public class ObjectNotRegisteredException extends InvalidApplicationException\n+{\n+    private Class<?> objectType;\n+    private Module module;\n+\n+    public ObjectNotRegisteredException( Class<?> type, Module module )\n+    {\n+        super( \"Trying to find unregistered object of type [\" + type.getName() + \"] in module [\" +\n+               module.name().get() + \"].\" );\n+        this.objectType = type;\n+        this.module = module;\n+    }\n+\n+    public Class<?> objectType()\n+    {\n+        return objectType;\n+    }\n+\n+    public Module module()\n+    {\n+        return module;\n+    }\n+}\n\\ No newline at end of file",
                "raw_url": "https://github.com/apache/attic-polygene-java/raw/d93066101075e3533567d4b63d21173d2de74fce/api/src/main/java/org/qi4j/composite/ObjectNotRegisteredException.java",
                "sha": "a2da3c0bc80d28bbd734cce2d73cfbacdfe3d76e",
                "status": "added"
            },
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/attic-polygene-java/blob/d93066101075e3533567d4b63d21173d2de74fce/api/src/main/java/org/qi4j/composite/internal/package.html",
                "changes": 3,
                "contents_url": "https://api.github.com/repos/apache/attic-polygene-java/contents/api/src/main/java/org/qi4j/composite/internal/package.html?ref=d93066101075e3533567d4b63d21173d2de74fce",
                "deletions": 1,
                "filename": "api/src/main/java/org/qi4j/composite/internal/package.html",
                "patch": "@@ -1,7 +1,8 @@\n <html>\n <body>\n <h1>Internal/Private package for the API</h1>\n+\n <p>This is an internal package, and no classes in this package is part of the API and compatibility\n-with these classes will not be attempted.</p>\n+    with these classes will not be attempted.</p>\n </body>\n </html>\n\\ No newline at end of file",
                "raw_url": "https://github.com/apache/attic-polygene-java/raw/d93066101075e3533567d4b63d21173d2de74fce/api/src/main/java/org/qi4j/composite/internal/package.html",
                "sha": "985a2adf16ffd5e1f4315078de7e419425406c73",
                "status": "modified"
            },
            {
                "additions": 42,
                "blob_url": "https://github.com/apache/attic-polygene-java/blob/d93066101075e3533567d4b63d21173d2de74fce/api/src/main/java/org/qi4j/entity/EntityNotRegisteredException.java",
                "changes": 42,
                "contents_url": "https://api.github.com/repos/apache/attic-polygene-java/contents/api/src/main/java/org/qi4j/entity/EntityNotRegisteredException.java?ref=d93066101075e3533567d4b63d21173d2de74fce",
                "deletions": 0,
                "filename": "api/src/main/java/org/qi4j/entity/EntityNotRegisteredException.java",
                "patch": "@@ -0,0 +1,42 @@\n+/*\n+ * Copyright (c) 2008, Niclas Hedhman. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ *\n+ */\n+package org.qi4j.entity;\n+\n+import org.qi4j.composite.InvalidApplicationException;\n+import org.qi4j.composite.Composite;\n+import org.qi4j.structure.Module;\n+\n+public class EntityNotRegisteredException extends InvalidApplicationException\n+{\n+    private Class<? extends EntityComposite> entityType;\n+    private Module module;\n+\n+    public EntityNotRegisteredException( Class<? extends EntityComposite> entityType, Module module )\n+    {\n+        super( \"Trying to find unregistered composite of type [\" + entityType.getName() + \"] in module [\" +\n+                        module.name().get() + \"].\" );\n+        this.entityType = entityType;\n+        this.module = module;\n+    }\n+\n+    public Class<? extends EntityComposite> compositeType()\n+    {\n+        return entityType;\n+    }\n+\n+    public Module module()\n+    {\n+        return this.module;\n+    }\n+}\n\\ No newline at end of file",
                "raw_url": "https://github.com/apache/attic-polygene-java/raw/d93066101075e3533567d4b63d21173d2de74fce/api/src/main/java/org/qi4j/entity/EntityNotRegisteredException.java",
                "sha": "d3dccefd893bfab0fbbfb6da450c1f8ea096b56c",
                "status": "added"
            },
            {
                "additions": 33,
                "blob_url": "https://github.com/apache/attic-polygene-java/blob/d93066101075e3533567d4b63d21173d2de74fce/api/src/main/java/org/qi4j/service/ServiceNotRegisteredException.java",
                "changes": 33,
                "contents_url": "https://api.github.com/repos/apache/attic-polygene-java/contents/api/src/main/java/org/qi4j/service/ServiceNotRegisteredException.java?ref=d93066101075e3533567d4b63d21173d2de74fce",
                "deletions": 0,
                "filename": "api/src/main/java/org/qi4j/service/ServiceNotRegisteredException.java",
                "patch": "@@ -0,0 +1,33 @@\n+/*\n+ * Copyright (c) 2008, Niclas Hedhman. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ *\n+ */\n+package org.qi4j.service;\n+\n+import org.qi4j.composite.InvalidApplicationException;\n+import org.qi4j.composite.Composite;\n+\n+public class ServiceNotRegisteredException extends InvalidApplicationException\n+{\n+    private Class<? extends ServiceComposite> serviceType;\n+\n+    public ServiceNotRegisteredException( Class<? extends ServiceComposite> serviceType, String message )\n+    {\n+        super( message );\n+        this.serviceType = serviceType;\n+    }\n+\n+    public Class<? extends ServiceComposite> serviceType()\n+    {\n+        return serviceType;\n+    }\n+}\n\\ No newline at end of file",
                "raw_url": "https://github.com/apache/attic-polygene-java/raw/d93066101075e3533567d4b63d21173d2de74fce/api/src/main/java/org/qi4j/service/ServiceNotRegisteredException.java",
                "sha": "55686104f50b4762d1b9b0d03af4d46d42d58a64",
                "status": "added"
            },
            {
                "additions": 33,
                "blob_url": "https://github.com/apache/attic-polygene-java/blob/d93066101075e3533567d4b63d21173d2de74fce/runtime/src/main/java/org/qi4j/runtime/entity/InvalidAssociationAccessException.java",
                "changes": 33,
                "contents_url": "https://api.github.com/repos/apache/attic-polygene-java/contents/runtime/src/main/java/org/qi4j/runtime/entity/InvalidAssociationAccessException.java?ref=d93066101075e3533567d4b63d21173d2de74fce",
                "deletions": 0,
                "filename": "runtime/src/main/java/org/qi4j/runtime/entity/InvalidAssociationAccessException.java",
                "patch": "@@ -0,0 +1,33 @@\n+/*\n+ * Copyright (c) 2008, Niclas Hedhman. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ *\n+ */\n+package org.qi4j.runtime.entity;\n+\n+import org.qi4j.composite.InvalidApplicationException;\n+import java.lang.reflect.Method;\n+\n+public class InvalidAssociationAccessException extends InvalidApplicationException\n+{\n+    private Method accessor;\n+\n+    public InvalidAssociationAccessException( Method accessor )\n+    {\n+        super( \"May not use Associations in Composites that are not accessed through a UnitOfWork: \" + accessor.getName() );\n+        this.accessor = accessor;\n+    }\n+\n+    public Method associationAccessor()\n+    {\n+        return accessor;\n+    }\n+}",
                "raw_url": "https://github.com/apache/attic-polygene-java/raw/d93066101075e3533567d4b63d21173d2de74fce/runtime/src/main/java/org/qi4j/runtime/entity/InvalidAssociationAccessException.java",
                "sha": "56daedfdd712dba7cf333c3c567e3debef2dfedb",
                "status": "added"
            },
            {
                "additions": 24,
                "blob_url": "https://github.com/apache/attic-polygene-java/blob/d93066101075e3533567d4b63d21173d2de74fce/runtime/src/main/java/org/qi4j/runtime/entity/ObjectAccessException.java",
                "changes": 24,
                "contents_url": "https://api.github.com/repos/apache/attic-polygene-java/contents/runtime/src/main/java/org/qi4j/runtime/entity/ObjectAccessException.java?ref=d93066101075e3533567d4b63d21173d2de74fce",
                "deletions": 0,
                "filename": "runtime/src/main/java/org/qi4j/runtime/entity/ObjectAccessException.java",
                "patch": "@@ -0,0 +1,24 @@\n+/*\n+ * Copyright (c) 2008, Niclas Hedhman. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ *\n+ */\n+package org.qi4j.runtime.entity;\n+\n+import org.qi4j.composite.InvalidApplicationException;\n+\n+public class ObjectAccessException extends InvalidApplicationException\n+{\n+    public ObjectAccessException( String message )\n+    {\n+        super( message );\n+    }\n+}",
                "raw_url": "https://github.com/apache/attic-polygene-java/raw/d93066101075e3533567d4b63d21173d2de74fce/runtime/src/main/java/org/qi4j/runtime/entity/ObjectAccessException.java",
                "sha": "f88f6c8f8f8c20213367d23f19980eaabdfc2e62",
                "status": "added"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/attic-polygene-java/blob/d93066101075e3533567d4b63d21173d2de74fce/runtime/src/main/java/org/qi4j/runtime/entity/UnitOfWorkCompositeBuilder.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/attic-polygene-java/contents/runtime/src/main/java/org/qi4j/runtime/entity/UnitOfWorkCompositeBuilder.java?ref=d93066101075e3533567d4b63d21173d2de74fce",
                "deletions": 1,
                "filename": "runtime/src/main/java/org/qi4j/runtime/entity/UnitOfWorkCompositeBuilder.java",
                "patch": "@@ -80,7 +80,7 @@ public UnitOfWorkCompositeBuilder( ModuleInstance moduleInstance, CompositeConte\n \n     public CompositeBuilder<T> use( Object... usedObjects )\n     {\n-        throw new InvalidApplicationException( \"Entities may not use other objects\" );\n+        throw new ObjectAccessException( \"Entities may not use other objects\" );\n     }\n \n     public T newInstance()",
                "raw_url": "https://github.com/apache/attic-polygene-java/raw/d93066101075e3533567d4b63d21173d2de74fce/runtime/src/main/java/org/qi4j/runtime/entity/UnitOfWorkCompositeBuilder.java",
                "sha": "a73da22234dd3a8008882cc14cc1b5579e54fa68",
                "status": "modified"
            },
            {
                "additions": 13,
                "blob_url": "https://github.com/apache/attic-polygene-java/blob/d93066101075e3533567d4b63d21173d2de74fce/runtime/src/main/java/org/qi4j/runtime/entity/UnitOfWorkInstance.java",
                "changes": 23,
                "contents_url": "https://api.github.com/repos/apache/attic-polygene-java/contents/runtime/src/main/java/org/qi4j/runtime/entity/UnitOfWorkInstance.java?ref=d93066101075e3533567d4b63d21173d2de74fce",
                "deletions": 10,
                "filename": "runtime/src/main/java/org/qi4j/runtime/entity/UnitOfWorkInstance.java",
                "patch": "@@ -33,6 +33,7 @@\n import org.qi4j.entity.UnitOfWork;\n import org.qi4j.entity.UnitOfWorkCompletionException;\n import org.qi4j.entity.UnitOfWorkException;\n+import org.qi4j.entity.EntityNotRegisteredException;\n import org.qi4j.query.Query;\n import org.qi4j.query.QueryBuilderFactory;\n import org.qi4j.runtime.composite.CompositeContext;\n@@ -48,6 +49,7 @@\n import org.qi4j.spi.entity.QualifiedIdentity;\n import org.qi4j.spi.entity.StateCommitter;\n import org.qi4j.spi.structure.CompositeDescriptor;\n+import org.qi4j.spi.composite.CompositeResolution;\n import org.qi4j.structure.Module;\n \n public final class UnitOfWorkInstance\n@@ -166,18 +168,22 @@ public void remove( Object entity )\n \n                 if( module == null )\n                 {\n-                    throw new InvalidApplicationException(\n-                        \"Trying to find unregistered composite of type [\" + compositeType.getName() + \"] in module [\" +\n-                        moduleInstance.getModule().name().get() + \"].\"\n-                    );\n+                    throw new EntityNotRegisteredException( compositeType, moduleInstance.getModule() );\n                 }\n \n                 CompositeContext compositeContext = module.getModuleInstance().getModuleContext().getCompositeContext( compositeType );\n+                if( compositeContext == null )\n+                {\n+                    throw new EntityNotRegisteredException( compositeType, moduleInstance.getModule() );\n+                }\n \n-                EntityState state = null;\n+                EntityState state;\n                 try\n                 {\n-                    state = store.getEntityState( compositeContext.getCompositeResolution().getCompositeDescriptor(), new QualifiedIdentity( identity, compositeType.getName() ) );\n+                    CompositeResolution compositeResolution = compositeContext.getCompositeResolution();\n+                    CompositeDescriptor descriptor = compositeResolution.getCompositeDescriptor();\n+                    QualifiedIdentity qualifiedIdentity = new QualifiedIdentity( identity, compositeType.getName() );\n+                    state = store.getEntityState( descriptor, qualifiedIdentity );\n                 }\n                 catch( EntityNotFoundException e )\n                 {\n@@ -237,10 +243,7 @@ public void remove( Object entity )\n \n             if( module == null )\n             {\n-                throw new InvalidApplicationException(\n-                    \"Trying to get reference unregistered composite of type [\" + compositeType.getName() + \"] in module [\" +\n-                    moduleInstance.getModule().name().get() + \"].\"\n-                );\n+                throw new EntityNotRegisteredException( compositeType, moduleInstance.getModule() );\n             }\n \n             CompositeContext compositeContext = module.getModuleInstance().getModuleContext().getCompositeContext( compositeType );",
                "raw_url": "https://github.com/apache/attic-polygene-java/raw/d93066101075e3533567d4b63d21173d2de74fce/runtime/src/main/java/org/qi4j/runtime/entity/UnitOfWorkInstance.java",
                "sha": "172a16141e41efd59c73cbd9a58fe160c408afe4",
                "status": "modified"
            },
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/attic-polygene-java/blob/d93066101075e3533567d4b63d21173d2de74fce/runtime/src/main/java/org/qi4j/runtime/structure/CompositeBuilderImpl.java",
                "changes": 3,
                "contents_url": "https://api.github.com/repos/apache/attic-polygene-java/contents/runtime/src/main/java/org/qi4j/runtime/structure/CompositeBuilderImpl.java?ref=d93066101075e3533567d4b63d21173d2de74fce",
                "deletions": 1,
                "filename": "runtime/src/main/java/org/qi4j/runtime/structure/CompositeBuilderImpl.java",
                "patch": "@@ -33,6 +33,7 @@\n import org.qi4j.runtime.composite.CompositeContext;\r\n import org.qi4j.runtime.composite.CompositeInstance;\r\n import org.qi4j.runtime.property.PropertyContext;\r\n+import org.qi4j.runtime.entity.InvalidAssociationAccessException;\r\n import org.qi4j.spi.composite.PropertyResolution;\r\n import org.qi4j.spi.property.ImmutablePropertyInstance;\r\n import org.qi4j.spi.property.PropertyBinding;\r\n@@ -230,7 +231,7 @@ public Property getProperty( Method method )\n \r\n         public AbstractAssociation getAssociation( Method qualifiedName )\r\n         {\r\n-            throw new InvalidApplicationException( \"May not use Associations in Composites that are not accessed through a UnitOfWork\" );\r\n+            throw new InvalidAssociationAccessException( qualifiedName );\r\n         }\r\n     }\r\n }\r",
                "raw_url": "https://github.com/apache/attic-polygene-java/raw/d93066101075e3533567d4b63d21173d2de74fce/runtime/src/main/java/org/qi4j/runtime/structure/CompositeBuilderImpl.java",
                "sha": "9c9fa03ac8abde5508de90426b7f9d065dce072f",
                "status": "modified"
            },
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/attic-polygene-java/blob/d93066101075e3533567d4b63d21173d2de74fce/runtime/src/main/java/org/qi4j/runtime/structure/ModuleCompositeBuilderFactory.java",
                "changes": 14,
                "contents_url": "https://api.github.com/repos/apache/attic-polygene-java/contents/runtime/src/main/java/org/qi4j/runtime/structure/ModuleCompositeBuilderFactory.java?ref=d93066101075e3533567d4b63d21173d2de74fce",
                "deletions": 12,
                "filename": "runtime/src/main/java/org/qi4j/runtime/structure/ModuleCompositeBuilderFactory.java",
                "patch": "@@ -18,6 +18,7 @@\n import org.qi4j.composite.CompositeBuilder;\n import org.qi4j.composite.CompositeBuilderFactory;\n import org.qi4j.composite.InvalidApplicationException;\n+import org.qi4j.composite.CompositeNotRegisteredException;\n import static org.qi4j.composite.NullArgumentException.*;\n import org.qi4j.runtime.composite.CompositeContext;\n import org.qi4j.spi.structure.ModuleBinding;\n@@ -50,18 +51,7 @@ public ModuleCompositeBuilderFactory( ModuleInstance moduleInstance )\n \n         if( compositeContext == null )\n         {\n-            String compositeTypeName = compositeType.getName();\n-\n-            ModuleContext moduleContext = moduleInstance.getModuleContext();\n-            ModuleBinding moduleBinding = moduleContext.getModuleBinding();\n-            ModuleResolution moduleResolution = moduleBinding.getModuleResolution();\n-            ModuleModel moduleModel = moduleResolution.getModuleModel();\n-            String moduleModelName = moduleModel.getName();\n-\n-            throw new InvalidApplicationException(\n-                \"Trying to create unregistered composite of type [\" + compositeTypeName + \"] in module [\" +\n-                moduleModelName + \"].\"\n-            );\n+            throw new CompositeNotRegisteredException(compositeType, compositeModuleInstance.getModule() );\n         }\n \n         return createBuilder( compositeModuleInstance, compositeContext );",
                "raw_url": "https://github.com/apache/attic-polygene-java/raw/d93066101075e3533567d4b63d21173d2de74fce/runtime/src/main/java/org/qi4j/runtime/structure/ModuleCompositeBuilderFactory.java",
                "sha": "1f1d087998efa735853704bcbfe6b81ea9f4673b",
                "status": "modified"
            },
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/attic-polygene-java/blob/d93066101075e3533567d4b63d21173d2de74fce/runtime/src/main/java/org/qi4j/runtime/structure/ModuleObjectBuilderFactory.java",
                "changes": 3,
                "contents_url": "https://api.github.com/repos/apache/attic-polygene-java/contents/runtime/src/main/java/org/qi4j/runtime/structure/ModuleObjectBuilderFactory.java?ref=d93066101075e3533567d4b63d21173d2de74fce",
                "deletions": 1,
                "filename": "runtime/src/main/java/org/qi4j/runtime/structure/ModuleObjectBuilderFactory.java",
                "patch": "@@ -17,6 +17,7 @@\n import org.qi4j.composite.InvalidApplicationException;\n import org.qi4j.composite.ObjectBuilder;\n import org.qi4j.composite.ObjectBuilderFactory;\n+import org.qi4j.composite.ObjectNotRegisteredException;\n import org.qi4j.runtime.composite.ObjectContext;\n \n /**\n@@ -49,7 +50,7 @@ public ModuleObjectBuilderFactory( ModuleInstance moduleInstance )\n         // Check if this Composite has been registered properly\n         if( objectContext == null )\n         {\n-            throw new InvalidApplicationException( \"Trying to create unregistered object of type \" + objectType.getName() + \" in module \" + moduleInstance.getModuleContext().getModuleBinding().getModuleResolution().getModuleModel().getName() );\n+            throw new ObjectNotRegisteredException( objectType, moduleInstance.getModule() );\n         }\n \n         // Create a builder",
                "raw_url": "https://github.com/apache/attic-polygene-java/raw/d93066101075e3533567d4b63d21173d2de74fce/runtime/src/main/java/org/qi4j/runtime/structure/ModuleObjectBuilderFactory.java",
                "sha": "80e2b88da5a13c0f8b477b3c417edc0f47b100c2",
                "status": "modified"
            },
            {
                "additions": 32,
                "blob_url": "https://github.com/apache/attic-polygene-java/blob/d93066101075e3533567d4b63d21173d2de74fce/spi/src/main/java/org/qi4j/spi/query/IndexingMeta.java",
                "changes": 32,
                "contents_url": "https://api.github.com/repos/apache/attic-polygene-java/contents/spi/src/main/java/org/qi4j/spi/query/IndexingMeta.java?ref=d93066101075e3533567d4b63d21173d2de74fce",
                "deletions": 0,
                "filename": "spi/src/main/java/org/qi4j/spi/query/IndexingMeta.java",
                "patch": "@@ -0,0 +1,32 @@\n+/*\n+ * Copyright (c) 2008, Niclas Hedhman. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ *\n+ */\n+package org.qi4j.spi.query;\n+\n+import java.io.Serializable;\n+\n+public class IndexingMeta\n+    implements Serializable\n+{\n+    private boolean ignore;\n+\n+    public IndexingMeta( boolean ignore )\n+    {\n+        this.ignore = ignore;\n+    }\n+\n+    public boolean ignore()\n+    {\n+        return ignore;\n+    }\n+}",
                "raw_url": "https://github.com/apache/attic-polygene-java/raw/d93066101075e3533567d4b63d21173d2de74fce/spi/src/main/java/org/qi4j/spi/query/IndexingMeta.java",
                "sha": "f6b1e93a6e911f86d9b9eb50c00c586da19a2730",
                "status": "added"
            },
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/attic-polygene-java/blob/d93066101075e3533567d4b63d21173d2de74fce/spi/src/main/java/org/qi4j/spi/query/IndexingSideEffect.java",
                "changes": 6,
                "contents_url": "https://api.github.com/repos/apache/attic-polygene-java/contents/spi/src/main/java/org/qi4j/spi/query/IndexingSideEffect.java?ref=d93066101075e3533567d4b63d21173d2de74fce",
                "deletions": 4,
                "filename": "spi/src/main/java/org/qi4j/spi/query/IndexingSideEffect.java",
                "patch": "@@ -33,19 +33,17 @@\n  * @author Alin Dreghiciu\n  * @since March 18, 2008\n  */\n-public abstract class IndexingSideEffect\n-    extends SideEffectOf<EntityStore>\n+public abstract class IndexingSideEffect extends SideEffectOf<EntityStore>\n     implements EntityStore\n {\n-    @Service EntityIndexer indexer;\n+    @Service private EntityIndexer indexer;\n \n     public StateCommitter prepare( Iterable<EntityState> newStates,\n                                    Iterable<EntityState> loadedStates,\n                                    Iterable<QualifiedIdentity> removedStates,\n                                    Module module )\n         throws EntityStoreException\n     {\n-\n         indexer.index( newStates, loadedStates, removedStates, module );\n         return null;\n     }",
                "raw_url": "https://github.com/apache/attic-polygene-java/raw/d93066101075e3533567d4b63d21173d2de74fce/spi/src/main/java/org/qi4j/spi/query/IndexingSideEffect.java",
                "sha": "e435b660c8822b74e9025bd8f1c18c5ce6c84913",
                "status": "modified"
            }
        ],
        "message": "o Modularizing the RDF Indexer so we can have persisted and remote repositories.\no Added some more descriptive Exceptions for non-registered Composites/Entities/Services. Also, found one case where the UOW would throw a NPE instead of reporting a missing registration.\n\n\ngit-svn-id: https://scm.ops4j.org/repos/ops4j/projects/qi4j/core@11648 9b982a3c-3ae5-0310-a4bc-d9a3335569bd",
        "parent": "https://github.com/apache/attic-polygene-java/commit/37c1e28de7c14ad822a220e0ae36a9ce0d53ccf9",
        "repo": "attic-polygene-java",
        "unit_tests": [
            "ObjectBuilderTest.java"
        ]
    }
}