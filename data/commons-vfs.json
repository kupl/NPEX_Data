{
    "commons-vfs_3286bf4": {
        "bug_id": "commons-vfs_3286bf4",
        "commit": "https://github.com/apache/commons-vfs/commit/3286bf48497f3f831f5034569c8d37da1ed6e76f",
        "file": [
            {
                "additions": 16,
                "blob_url": "https://github.com/apache/commons-vfs/blob/3286bf48497f3f831f5034569c8d37da1ed6e76f/commons-vfs2/src/main/java/org/apache/commons/vfs2/impl/StandardFileSystemManager.java",
                "changes": 23,
                "contents_url": "https://api.github.com/repos/apache/commons-vfs/contents/commons-vfs2/src/main/java/org/apache/commons/vfs2/impl/StandardFileSystemManager.java?ref=3286bf48497f3f831f5034569c8d37da1ed6e76f",
                "deletions": 7,
                "filename": "commons-vfs2/src/main/java/org/apache/commons/vfs2/impl/StandardFileSystemManager.java",
                "patch": "@@ -22,6 +22,7 @@\n import java.net.URL;\n import java.util.ArrayList;\n import java.util.Enumeration;\n+import java.util.Objects;\n \n import javax.xml.parsers.DocumentBuilder;\n import javax.xml.parsers.DocumentBuilderFactory;\n@@ -138,13 +139,11 @@ private ClassLoader findClassLoader() {\n         if (classLoader != null) {\n             return classLoader;\n         }\n-\n         ClassLoader cl = Thread.currentThread().getContextClassLoader();\n-        if (cl == null) {\n-            cl = getClass().getClassLoader();\n+        if (cl != null) {\n+            return cl;\n         }\n-\n-        return cl;\n+        return getValidClassLoader(getClass());\n     }\n \n     protected DefaultFileReplicator createDefaultFileReplicator() {\n@@ -404,6 +403,15 @@ private boolean findClass(final String className) {\n         return schemas.toArray(new String[schemas.size()]);\n     }\n \n+    private ClassLoader getValidClassLoader(final Class<?> clazz) {\n+        return validateClassLoader(clazz.getClassLoader(), clazz);\n+    }\n+\n+    private ClassLoader validateClassLoader(final ClassLoader clazzLoader, final Class<?> clazz) {\n+        return Objects.requireNonNull(clazzLoader, \"The class loader for \" + clazz\n+                + \" is null; some Java implementions use null for the bootstrap class loader.\");\n+    }\n+\n     /**\n      * Creates a provider.\n      */\n@@ -426,7 +434,7 @@ private Object createInstance(final String className) throws FileSystemException\n         try {\n             return findClassLoader().loadClass(className);\n         } catch (final ClassNotFoundException e) {\n-            return getClass().getClassLoader().loadClass(className);\n+            return getValidClassLoader(getClass()).loadClass(className);\n         }\n     }\n \n@@ -439,8 +447,9 @@ private Object createInstance(final String className) throws FileSystemException\n     private Enumeration<URL> loadResources(final String name) throws IOException {\n         Enumeration<URL> res = findClassLoader().getResources(name);\n         if (res == null || !res.hasMoreElements()) {\n-            res = getClass().getClassLoader().getResources(name);\n+            res = getValidClassLoader(getClass()).getResources(name);\n         }\n         return res;\n     }\n+    \n }",
                "raw_url": "https://github.com/apache/commons-vfs/raw/3286bf48497f3f831f5034569c8d37da1ed6e76f/commons-vfs2/src/main/java/org/apache/commons/vfs2/impl/StandardFileSystemManager.java",
                "sha": "06ecf39def4165c7002d5826903816c783bac5cd",
                "status": "modified"
            },
            {
                "additions": 3,
                "blob_url": "https://github.com/apache/commons-vfs/blob/3286bf48497f3f831f5034569c8d37da1ed6e76f/src/changes/changes.xml",
                "changes": 3,
                "contents_url": "https://api.github.com/repos/apache/commons-vfs/contents/src/changes/changes.xml?ref=3286bf48497f3f831f5034569c8d37da1ed6e76f",
                "deletions": 0,
                "filename": "src/changes/changes.xml",
                "patch": "@@ -80,6 +80,9 @@ The <action> type attribute can be add,update,fix,remove.\n       <action issue=\"VFS-667\" dev=\"ggregory\" type=\"fix\">\n         org.apache.commons.vfs2.provider.res.ResourceFileProvider.findFile(FileObject, String, FileSystemOptions) should throw a org.apache.commons.vfs2.FileSystemException instead of a NPE when the class loader is null.\n       </action>\n+      <action issue=\"VFS-668\" dev=\"ggregory\" type=\"update\">\n+        Throw a NPE with a better message when a class loader is null.\n+      </action>\n     </release>\n     <release version=\"2.2\" date=\"2017-10-06\" description=\"New features and bug fix release.\">\n       <action issue=\"VFS-642\" dev=\"pschumacher\" type=\"update\" due-to=\"ilangoldfeld\">",
                "raw_url": "https://github.com/apache/commons-vfs/raw/3286bf48497f3f831f5034569c8d37da1ed6e76f/src/changes/changes.xml",
                "sha": "cac2865d3b2f4001af1efe1e9dbc8e380270db58",
                "status": "modified"
            }
        ],
        "message": "[VFS-668] Throw a NPE with a better message when a class loader is null.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/vfs/trunk@1836502 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/commons-vfs/commit/516f44080f6f8ae0c013c1cd33dbdbf25f8c7911",
        "repo": "commons-vfs",
        "unit_tests": [
            "StandardFileSystemManagerTest.java"
        ]
    },
    "commons-vfs_cd37b90": {
        "bug_id": "commons-vfs_cd37b90",
        "commit": "https://github.com/apache/commons-vfs/commit/cd37b90bc7220c5edebce1edebd36433ee454909",
        "file": [
            {
                "additions": 5,
                "blob_url": "https://github.com/apache/commons-vfs/blob/cd37b90bc7220c5edebce1edebd36433ee454909/commons-vfs2/src/main/java/org/apache/commons/vfs2/impl/StandardFileSystemManager.java",
                "changes": 5,
                "contents_url": "https://api.github.com/repos/apache/commons-vfs/contents/commons-vfs2/src/main/java/org/apache/commons/vfs2/impl/StandardFileSystemManager.java?ref=cd37b90bc7220c5edebce1edebd36433ee454909",
                "deletions": 0,
                "filename": "commons-vfs2/src/main/java/org/apache/commons/vfs2/impl/StandardFileSystemManager.java",
                "patch": "@@ -129,6 +129,11 @@ protected void configurePlugins() throws FileSystemException {\n         }\n     }\n \n+    /**\n+     * Returns a class loader or null since some Java implementation is null for the bootstrap class loader.\n+     * \n+     * @return A class loader or null since some Java implementation is null for the bootstrap class loader.\n+     */\n     private ClassLoader findClassLoader() {\n         if (classLoader != null) {\n             return classLoader;",
                "raw_url": "https://github.com/apache/commons-vfs/raw/cd37b90bc7220c5edebce1edebd36433ee454909/commons-vfs2/src/main/java/org/apache/commons/vfs2/impl/StandardFileSystemManager.java",
                "sha": "def3fd2d6fd0509118a8146de4390106c9a559f3",
                "status": "modified"
            }
        ],
        "message": "Internal Javadoc related to same issue as [VFS-667]: org.apache.commons.vfs2.provider.res.ResourceFileProvider.findFile(FileObject, String, FileSystemOptions) should throw a org.apache.commons.vfs2.FileSystemException instead of a NPE when the class loader is null.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/vfs/trunk@1836499 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/commons-vfs/commit/14285f15b092abb2f063dd3c3ff51de7039f5c33",
        "repo": "commons-vfs",
        "unit_tests": [
            "StandardFileSystemManagerTest.java"
        ]
    }
}