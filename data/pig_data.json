[
    {
        "repo": "pig",
        "message": "PIG-5375: NullPointerException for multi-level self unions with Tez UnionOptimizer (knoguchi)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/pig/trunk@1862504 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/pig/commit/a5caea17126f5780054700870fb3fc9a0017f8b8",
        "parent": "https://github.com/apache/pig/commit/35a7de6239512784eaae6db2855d32136984a419",
        "bug_id": "pig_1",
        "file": [
            {
                "sha": "2922cdc8b06315c8d3fd28fbc917e0450e6e978c",
                "filename": "CHANGES.txt",
                "blob_url": "https://github.com/apache/pig/blob/a5caea17126f5780054700870fb3fc9a0017f8b8/CHANGES.txt",
                "raw_url": "https://github.com/apache/pig/raw/a5caea17126f5780054700870fb3fc9a0017f8b8/CHANGES.txt",
                "status": "modified",
                "changes": 6,
                "additions": 4,
                "contents_url": "https://api.github.com/repos/apache/pig/contents/CHANGES.txt?ref=a5caea17126f5780054700870fb3fc9a0017f8b8",
                "patch": "@@ -92,9 +92,11 @@ OPTIMIZATIONS\n  \n BUG FIXES\n \n-PIG-5386: Pig local mode with bundled Hadoop broken\n+PIG-5375: NullPointerException for multi-level self unions with Tez UnionOptimizer (knoguchi)\n \n-PIG-5387: Test failures on JRE 11\n+PIG-5386: Pig local mode with bundled Hadoop broken (nkollar)\n+\n+PIG-5387: Test failures on JRE 11 (nkollar)\n \n PIG-5383: OrcStorage fails when \"bytearray\" represents unknown type (knoguchi)\n ",
                "deletions": 2
            },
            {
                "sha": "6ea5a8b09d49ea688760962d0bf00f5d99988c14",
                "filename": "src/org/apache/pig/backend/hadoop/executionengine/tez/plan/optimizer/UnionOptimizer.java",
                "blob_url": "https://github.com/apache/pig/blob/a5caea17126f5780054700870fb3fc9a0017f8b8/src/org/apache/pig/backend/hadoop/executionengine/tez/plan/optimizer/UnionOptimizer.java",
                "raw_url": "https://github.com/apache/pig/raw/a5caea17126f5780054700870fb3fc9a0017f8b8/src/org/apache/pig/backend/hadoop/executionengine/tez/plan/optimizer/UnionOptimizer.java",
                "status": "modified",
                "changes": 77,
                "additions": 34,
                "contents_url": "https://api.github.com/repos/apache/pig/contents/src/org/apache/pig/backend/hadoop/executionengine/tez/plan/optimizer/UnionOptimizer.java?ref=a5caea17126f5780054700870fb3fc9a0017f8b8",
                "patch": "@@ -289,18 +289,16 @@ public void visitTezOp(TezOperator tezOp) throws VisitorException {\n                 if (storeVertexGroupOps[i] != null) {\n                     continue;\n                 }\n-            }\n-            if (existingVertexGroup != null) {\n-                storeVertexGroupOps[i] = existingVertexGroup;\n-                existingVertexGroup.getVertexGroupMembers().remove(unionOp.getOperatorKey());\n-                existingVertexGroup.getVertexGroupMembers().addAll(unionOp.getUnionMembers());\n-                existingVertexGroup.getVertexGroupInfo().removeInput(unionOp.getOperatorKey());\n-            } else {\n                 storeVertexGroupOps[i] = new TezOperator(OperatorKey.genOpKey(scope));\n                 storeVertexGroupOps[i].setVertexGroupInfo(new VertexGroupInfo(unionStoreOutputs.get(i)));\n                 storeVertexGroupOps[i].getVertexGroupInfo().setSFile(unionStoreOutputs.get(i).getSFile());\n                 storeVertexGroupOps[i].setVertexGroupMembers(new ArrayList<OperatorKey>(unionOp.getUnionMembers()));\n                 tezPlan.add(storeVertexGroupOps[i]);\n+            } else {\n+                storeVertexGroupOps[i] = existingVertexGroup;\n+                existingVertexGroup.getVertexGroupMembers().remove(unionOp.getOperatorKey());\n+                existingVertexGroup.getVertexGroupMembers().addAll(unionOp.getUnionMembers());\n+                existingVertexGroup.getVertexGroupInfo().removeInput(unionOp.getOperatorKey());\n             }\n         }\n \n@@ -320,19 +318,36 @@ public void visitTezOp(TezOperator tezOp) throws VisitorException {\n         TezOperator[] outputVertexGroupOps = new TezOperator[unionOutputKeys.size()];\n         String[] newOutputKeys = new String[unionOutputKeys.size()];\n         for (int i=0; i < outputVertexGroupOps.length; i++) {\n-            for (int j = 0; j < i; j++) {\n-                if (unionOutputKeys.get(i).equals(unionOutputKeys.get(j))) {\n-                    outputVertexGroupOps[i] = outputVertexGroupOps[j];\n-                    break;\n+            TezOperator existingVertexGroup = null;\n+            if (successors != null) {\n+                for (TezOperator succ : successors) {\n+                    if (succ.isVertexGroup()\n+                        && unionOutputKeys.get(i).equals(succ.getVertexGroupInfo().getOutput()) ) {\n+                        existingVertexGroup = succ;\n+                        break;\n+                    }\n                 }\n             }\n-            if (outputVertexGroupOps[i] != null) {\n-                continue;\n+            if (existingVertexGroup == null) {\n+                for (int j = 0; j < i; j++) {\n+                    if (unionOutputKeys.get(i).equals(unionOutputKeys.get(j))) {\n+                        outputVertexGroupOps[i] = outputVertexGroupOps[j];\n+                        break;\n+                    }\n+                }\n+                if (outputVertexGroupOps[i] != null) {\n+                    continue;\n+                }\n+                outputVertexGroupOps[i] = new TezOperator(OperatorKey.genOpKey(scope));\n+                outputVertexGroupOps[i].setVertexGroupInfo(new VertexGroupInfo());\n+                outputVertexGroupOps[i].getVertexGroupInfo().setOutput(unionOutputKeys.get(i));\n+                outputVertexGroupOps[i].setVertexGroupMembers(new ArrayList<OperatorKey>(unionOp.getUnionMembers()));\n+            } else {\n+                outputVertexGroupOps[i] = existingVertexGroup;\n+                existingVertexGroup.getVertexGroupMembers().remove(unionOp.getOperatorKey());\n+                existingVertexGroup.getVertexGroupMembers().addAll(unionOp.getUnionMembers());\n+                existingVertexGroup.getVertexGroupInfo().removeInput(unionOp.getOperatorKey());\n             }\n-            outputVertexGroupOps[i] = new TezOperator(OperatorKey.genOpKey(scope));\n-            outputVertexGroupOps[i].setVertexGroupInfo(new VertexGroupInfo());\n-            outputVertexGroupOps[i].getVertexGroupInfo().setOutput(unionOutputKeys.get(i));\n-            outputVertexGroupOps[i].setVertexGroupMembers(new ArrayList<OperatorKey>(unionOp.getUnionMembers()));\n             newOutputKeys[i] = outputVertexGroupOps[i].getOperatorKey().toString();\n             tezPlan.add(outputVertexGroupOps[i]);\n         }\n@@ -619,18 +634,6 @@ private void connectVertexGroupsToSuccessors(TezOperator unionOp,\n         // Connect to outputVertexGroupOps\n         for (Entry<OperatorKey, TezEdgeDescriptor> entry : unionOp.outEdges.entrySet()) {\n             TezOperator succOp = tezPlan.getOperator(entry.getKey());\n-            // Case of union followed by union.\n-            // unionOp.outEdges will not point to vertex group, but to its output.\n-            // So find the vertex group if there is one.\n-            TezOperator succOpVertexGroup = null;\n-            for (TezOperator succ : successors) {\n-                if (succ.isVertexGroup()\n-                        && succOp.getOperatorKey().toString()\n-                                .equals(succ.getVertexGroupInfo().getOutput())) {\n-                    succOpVertexGroup = succ;\n-                    break;\n-                }\n-            }\n             TezEdgeDescriptor edge = entry.getValue();\n             // Edge cannot be one to one as it will get input from two or\n             // more union predecessors. Change it to SCATTER_GATHER\n@@ -641,26 +644,14 @@ private void connectVertexGroupsToSuccessors(TezOperator unionOp,\n                 edge.inputClassName = UnorderedKVInput.class.getName();\n             }\n             TezOperator vertexGroupOp = outputVertexGroupOps[unionOutputKeys.indexOf(entry.getKey().toString())];\n-            for (OperatorKey predKey : vertexGroupOp.getVertexGroupMembers()) {\n+            for (OperatorKey predKey : unionOp.getUnionMembers()) {\n                 TezOperator pred = tezPlan.getOperator(predKey);\n                 // Keep the output edge directly to successor\n                 // Don't need to keep output edge for vertexgroup\n                 pred.outEdges.put(entry.getKey(), edge);\n                 succOp.inEdges.put(predKey, edge);\n-                if (succOpVertexGroup != null) {\n-                    succOpVertexGroup.getVertexGroupMembers().add(predKey);\n-                    succOpVertexGroup.getVertexGroupInfo().addInput(predKey);\n-                    // Connect directly to the successor vertex group\n-                    tezPlan.disconnect(pred, vertexGroupOp);\n-                    tezPlan.connect(pred, succOpVertexGroup);\n-                }\n             }\n-            if (succOpVertexGroup != null) {\n-                succOpVertexGroup.getVertexGroupMembers().remove(unionOp.getOperatorKey());\n-                succOpVertexGroup.getVertexGroupInfo().removeInput(unionOp.getOperatorKey());\n-                //Discard the new vertex group created\n-                tezPlan.remove(vertexGroupOp);\n-            } else {\n+            if(!tezPlan.pathExists(vertexGroupOp, succOp)) {\n                 tezPlan.connect(vertexGroupOp, succOp);\n             }\n         }",
                "deletions": 43
            },
            {
                "sha": "b470d373527758df96abc50d6bc6fa8c36039ef8",
                "filename": "test/e2e/pig/tests/multiquery.conf",
                "blob_url": "https://github.com/apache/pig/blob/a5caea17126f5780054700870fb3fc9a0017f8b8/test/e2e/pig/tests/multiquery.conf",
                "raw_url": "https://github.com/apache/pig/raw/a5caea17126f5780054700870fb3fc9a0017f8b8/test/e2e/pig/tests/multiquery.conf",
                "status": "modified",
                "changes": 13,
                "additions": 13,
                "contents_url": "https://api.github.com/repos/apache/pig/contents/test/e2e/pig/tests/multiquery.conf?ref=a5caea17126f5780054700870fb3fc9a0017f8b8",
                "patch": "@@ -773,6 +773,19 @@ u3 = UNION ONSCHEMA e, f;\n SPLIT u3 INTO t if age > 75, u OTHERWISE;\r\n v = JOIN t BY name LEFT, c BY votername;\r\n store v into ':OUTPATH:';\\,\r\n+            },\r\n+            {\r\n+            # PIG-5375. multi-level Unions with splits\r\n+            'num' => 15,\r\n+            'pig' => q\\a = load ':INPATH:/singlefile/studentnulltab10k' as (name, age:int, gpa);\r\n+b= load ':INPATH:/singlefile/studentnulltab10k' as (name, age:int, gpa);\r\n+c= load ':INPATH:/singlefile/studentnulltab10k' as (name, age:int, gpa);\r\n+a_and_b = UNION ONSCHEMA a, b;\r\n+SPLIT a_and_b INTO a_and_b2 IF age < 30, a_and_b3 OTHERWISE;\r\n+a_and_b_and_c = UNION ONSCHEMA c, a_and_b;\r\n+v = UNION ONSCHEMA a_and_b_and_c, a_and_b2, a_and_b3;\r\n+v2 = GROUP v by *;\r\n+store v2 into ':OUTPATH:';\\,\r\n             }\r\n             ] # end of tests\r\n         },\r",
                "deletions": 0
            },
            {
                "sha": "db95b77ac884d0d275e39fa617d79522eba5faa0",
                "filename": "test/org/apache/pig/test/data/GoldenFiles/tez/TEZC-Union-10.gld",
                "blob_url": "https://github.com/apache/pig/blob/a5caea17126f5780054700870fb3fc9a0017f8b8/test/org/apache/pig/test/data/GoldenFiles/tez/TEZC-Union-10.gld",
                "raw_url": "https://github.com/apache/pig/raw/a5caea17126f5780054700870fb3fc9a0017f8b8/test/org/apache/pig/test/data/GoldenFiles/tez/TEZC-Union-10.gld",
                "status": "modified",
                "changes": 16,
                "additions": 8,
                "contents_url": "https://api.github.com/repos/apache/pig/contents/test/org/apache/pig/test/data/GoldenFiles/tez/TEZC-Union-10.gld?ref=a5caea17126f5780054700870fb3fc9a0017f8b8",
                "patch": "@@ -34,13 +34,13 @@ e: Split - scope-61\n     |---d: Load(file:///tmp/input1:org.apache.pig.builtin.PigStorage) - scope-17\n Tez vertex scope-37\n # Plan on vertex\n-e: Split - scope-66\n+e: Split - scope-65\n |   |\n-|   e: Store(file:///tmp/pigoutput1:org.apache.pig.builtin.PigStorage) - scope-67\t->\t scope-29\n+|   e: Store(file:///tmp/pigoutput1:org.apache.pig.builtin.PigStorage) - scope-66\t->\t scope-29\n |   |\n-|   f: Local Rearrange[tuple]{int}(false) - scope-68\t->\t scope-53\n+|   f: Local Rearrange[tuple]{int}(false) - scope-67\t->\t scope-53\n |   |   |\n-|   |   Project[int][0] - scope-69\n+|   |   Project[int][0] - scope-68\n |\n |---a: New For Each(false,false)[bag] - scope-7\n     |   |\n@@ -55,13 +55,13 @@ e: Split - scope-66\n     |---a: Load(file:///tmp/input:org.apache.pig.builtin.PigStorage) - scope-0\n Tez vertex scope-38\n # Plan on vertex\n-e: Split - scope-70\n+e: Split - scope-69\n |   |\n-|   e: Store(file:///tmp/pigoutput1:org.apache.pig.builtin.PigStorage) - scope-71\t->\t scope-29\n+|   e: Store(file:///tmp/pigoutput1:org.apache.pig.builtin.PigStorage) - scope-70\t->\t scope-29\n |   |\n-|   f: Local Rearrange[tuple]{int}(false) - scope-72\t->\t scope-53\n+|   f: Local Rearrange[tuple]{int}(false) - scope-71\t->\t scope-53\n |   |   |\n-|   |   Project[int][0] - scope-73\n+|   |   Project[int][0] - scope-72\n |\n |---c: New For Each(false,false)[bag] - scope-15\n     |   |",
                "deletions": 8
            },
            {
                "sha": "27bced27e34e7d533b0aa0ba5d6ada8323f8b6f7",
                "filename": "test/org/apache/pig/test/data/GoldenFiles/tez/TEZC-Union-21.gld",
                "blob_url": "https://github.com/apache/pig/blob/a5caea17126f5780054700870fb3fc9a0017f8b8/test/org/apache/pig/test/data/GoldenFiles/tez/TEZC-Union-21.gld",
                "raw_url": "https://github.com/apache/pig/raw/a5caea17126f5780054700870fb3fc9a0017f8b8/test/org/apache/pig/test/data/GoldenFiles/tez/TEZC-Union-21.gld",
                "status": "modified",
                "changes": 146,
                "additions": 73,
                "contents_url": "https://api.github.com/repos/apache/pig/contents/test/org/apache/pig/test/data/GoldenFiles/tez/TEZC-Union-21.gld?ref=a5caea17126f5780054700870fb3fc9a0017f8b8",
                "patch": "@@ -27,77 +27,77 @@ d: Local Rearrange[tuple]{chararray}(false) - scope-29\t->\t scope-84\n     |---c: Load(file:///tmp/input:org.apache.pig.builtin.PigStorage) - scope-18\n Tez vertex scope-74\n # Plan on vertex\n-1-3: Split - scope-166\n+1-3: Split - scope-165\n |   |\n-|   d: Local Rearrange[tuple]{chararray}(false) - scope-171\t->\t scope-84\n+|   d: Local Rearrange[tuple]{chararray}(false) - scope-170\t->\t scope-84\n |   |   |\n-|   |   Project[chararray][0] - scope-172\n+|   |   Project[chararray][0] - scope-171\n |   |\n-|   |---r: Filter[bag] - scope-167\n+|   |---r: Filter[bag] - scope-166\n |       |   |\n-|       |   Not Equal To[boolean] - scope-170\n+|       |   Not Equal To[boolean] - scope-169\n |       |   |\n-|       |   |---Project[chararray][0] - scope-168\n+|       |   |---Project[chararray][0] - scope-167\n |       |   |\n-|       |   |---Constant() - scope-169\n+|       |   |---Constant() - scope-168\n |   |\n-|   u2: Split - scope-181\n+|   u2: Split - scope-180\n |   |   |\n-|   |   POValueOutputTez - scope-191\t->\t [scope-104]\n+|   |   POValueOutputTez - scope-190\t->\t [scope-104]\n |   |   |\n-|   |   |---v: Limit - scope-190\n+|   |   |---v: Limit - scope-189\n |   |       |\n-|   |       |---t: Filter[bag] - scope-186\n+|   |       |---t: Filter[bag] - scope-185\n |   |           |   |\n-|   |           |   Not Equal To[boolean] - scope-189\n+|   |           |   Not Equal To[boolean] - scope-188\n |   |           |   |\n-|   |           |   |---Project[chararray][0] - scope-187\n+|   |           |   |---Project[chararray][0] - scope-186\n |   |           |   |\n-|   |           |   |---Constant() - scope-188\n+|   |           |   |---Constant() - scope-187\n |   |           |\n-|   |           |---e: Filter[bag] - scope-182\n+|   |           |---e: Filter[bag] - scope-181\n |   |               |   |\n-|   |               |   Equal To[boolean] - scope-185\n+|   |               |   Equal To[boolean] - scope-184\n |   |               |   |\n-|   |               |   |---Project[chararray][0] - scope-183\n+|   |               |   |---Project[chararray][0] - scope-182\n |   |               |   |\n-|   |               |   |---Constant() - scope-184\n+|   |               |   |---Constant() - scope-183\n |   |   |\n-|   |   POValueOutputTez - scope-201\t->\t [scope-104]\n+|   |   POValueOutputTez - scope-200\t->\t [scope-104]\n |   |   |\n-|   |   |---v: Limit - scope-200\n+|   |   |---v: Limit - scope-199\n |   |       |\n-|   |       |---t: Filter[bag] - scope-196\n+|   |       |---t: Filter[bag] - scope-195\n |   |           |   |\n-|   |           |   Not Equal To[boolean] - scope-199\n+|   |           |   Not Equal To[boolean] - scope-198\n |   |           |   |\n-|   |           |   |---Project[chararray][0] - scope-197\n+|   |           |   |---Project[chararray][0] - scope-196\n |   |           |   |\n-|   |           |   |---Constant() - scope-198\n+|   |           |   |---Constant() - scope-197\n |   |           |\n-|   |           |---f: Filter[bag] - scope-192\n+|   |           |---f: Filter[bag] - scope-191\n |   |               |   |\n-|   |               |   Equal To[boolean] - scope-195\n+|   |               |   Equal To[boolean] - scope-194\n |   |               |   |\n-|   |               |   |---Project[chararray][0] - scope-193\n+|   |               |   |---Project[chararray][0] - scope-192\n |   |               |   |\n-|   |               |   |---Constant(m) - scope-194\n+|   |               |   |---Constant(m) - scope-193\n |   |\n-|   |---u2: New For Each(false,false)[bag] - scope-180\n+|   |---u2: New For Each(false,false)[bag] - scope-179\n |       |   |\n-|       |   Project[chararray][0] - scope-178\n+|       |   Project[chararray][0] - scope-177\n |       |   |\n-|       |   Constant(DummyVal) - scope-179\n+|       |   Constant(DummyVal) - scope-178\n |       |\n-|       |---s: Filter[bag] - scope-173\n+|       |---s: Filter[bag] - scope-172\n |           |   |\n-|           |   Not[boolean] - scope-177\n+|           |   Not[boolean] - scope-176\n |           |   |\n-|           |   |---Not Equal To[boolean] - scope-176\n+|           |   |---Not Equal To[boolean] - scope-175\n |           |       |\n-|           |       |---Project[chararray][0] - scope-174\n+|           |       |---Project[chararray][0] - scope-173\n |           |       |\n-|           |       |---Constant() - scope-175\n+|           |       |---Constant() - scope-174\n |\n |---a: New For Each(false)[bag] - scope-6\n     |   |\n@@ -108,77 +108,77 @@ Tez vertex scope-74\n     |---a: Load(file:///tmp/input:org.apache.pig.builtin.PigStorage) - scope-2\n Tez vertex scope-75\n # Plan on vertex\n-1-3: Split - scope-202\n+1-3: Split - scope-201\n |   |\n-|   d: Local Rearrange[tuple]{chararray}(false) - scope-207\t->\t scope-84\n+|   d: Local Rearrange[tuple]{chararray}(false) - scope-206\t->\t scope-84\n |   |   |\n-|   |   Project[chararray][0] - scope-208\n+|   |   Project[chararray][0] - scope-207\n |   |\n-|   |---r: Filter[bag] - scope-203\n+|   |---r: Filter[bag] - scope-202\n |       |   |\n-|       |   Not Equal To[boolean] - scope-206\n+|       |   Not Equal To[boolean] - scope-205\n |       |   |\n-|       |   |---Project[chararray][0] - scope-204\n+|       |   |---Project[chararray][0] - scope-203\n |       |   |\n-|       |   |---Constant() - scope-205\n+|       |   |---Constant() - scope-204\n |   |\n-|   u2: Split - scope-217\n+|   u2: Split - scope-216\n |   |   |\n-|   |   POValueOutputTez - scope-227\t->\t [scope-104]\n+|   |   POValueOutputTez - scope-226\t->\t [scope-104]\n |   |   |\n-|   |   |---v: Limit - scope-226\n+|   |   |---v: Limit - scope-225\n |   |       |\n-|   |       |---t: Filter[bag] - scope-222\n+|   |       |---t: Filter[bag] - scope-221\n |   |           |   |\n-|   |           |   Not Equal To[boolean] - scope-225\n+|   |           |   Not Equal To[boolean] - scope-224\n |   |           |   |\n-|   |           |   |---Project[chararray][0] - scope-223\n+|   |           |   |---Project[chararray][0] - scope-222\n |   |           |   |\n-|   |           |   |---Constant() - scope-224\n+|   |           |   |---Constant() - scope-223\n |   |           |\n-|   |           |---e: Filter[bag] - scope-218\n+|   |           |---e: Filter[bag] - scope-217\n |   |               |   |\n-|   |               |   Equal To[boolean] - scope-221\n+|   |               |   Equal To[boolean] - scope-220\n |   |               |   |\n-|   |               |   |---Project[chararray][0] - scope-219\n+|   |               |   |---Project[chararray][0] - scope-218\n |   |               |   |\n-|   |               |   |---Constant() - scope-220\n+|   |               |   |---Constant() - scope-219\n |   |   |\n-|   |   POValueOutputTez - scope-237\t->\t [scope-104]\n+|   |   POValueOutputTez - scope-236\t->\t [scope-104]\n |   |   |\n-|   |   |---v: Limit - scope-236\n+|   |   |---v: Limit - scope-235\n |   |       |\n-|   |       |---t: Filter[bag] - scope-232\n+|   |       |---t: Filter[bag] - scope-231\n |   |           |   |\n-|   |           |   Not Equal To[boolean] - scope-235\n+|   |           |   Not Equal To[boolean] - scope-234\n |   |           |   |\n-|   |           |   |---Project[chararray][0] - scope-233\n+|   |           |   |---Project[chararray][0] - scope-232\n |   |           |   |\n-|   |           |   |---Constant() - scope-234\n+|   |           |   |---Constant() - scope-233\n |   |           |\n-|   |           |---f: Filter[bag] - scope-228\n+|   |           |---f: Filter[bag] - scope-227\n |   |               |   |\n-|   |               |   Equal To[boolean] - scope-231\n+|   |               |   Equal To[boolean] - scope-230\n |   |               |   |\n-|   |               |   |---Project[chararray][0] - scope-229\n+|   |               |   |---Project[chararray][0] - scope-228\n |   |               |   |\n-|   |               |   |---Constant(m) - scope-230\n+|   |               |   |---Constant(m) - scope-229\n |   |\n-|   |---u2: New For Each(false,false)[bag] - scope-216\n+|   |---u2: New For Each(false,false)[bag] - scope-215\n |       |   |\n-|       |   Project[chararray][0] - scope-214\n+|       |   Project[chararray][0] - scope-213\n |       |   |\n-|       |   Constant(DummyVal) - scope-215\n+|       |   Constant(DummyVal) - scope-214\n |       |\n-|       |---s: Filter[bag] - scope-209\n+|       |---s: Filter[bag] - scope-208\n |           |   |\n-|           |   Not[boolean] - scope-213\n+|           |   Not[boolean] - scope-212\n |           |   |\n-|           |   |---Not Equal To[boolean] - scope-212\n+|           |   |---Not Equal To[boolean] - scope-211\n |           |       |\n-|           |       |---Project[chararray][0] - scope-210\n+|           |       |---Project[chararray][0] - scope-209\n |           |       |\n-|           |       |---Constant() - scope-211\n+|           |       |---Constant() - scope-210\n |\n |---b: New For Each(false)[bag] - scope-11\n     |   |\n@@ -254,7 +254,7 @@ u2: Split - scope-122\n         |   |---Constant({()}) - scope-35\n         |\n         |---d: Package(Packager)[tuple]{chararray} - scope-26\n-Tez vertex group scope-121\t<-\t [scope-84, scope-84, scope-76, scope-74, scope-75]\t->\t scope-104\n+Tez vertex group scope-121\t<-\t [scope-84, scope-84, scope-74, scope-74, scope-75, scope-75]\t->\t scope-104\n # No plan on vertex group\n Tez vertex scope-104\n # Plan on vertex",
                "deletions": 73
            }
        ]
    },
    {
        "repo": "pig",
        "message": "PIG-5372: SAMPLE/RANDOM(udf) before skewed join failing with NPE (knoguchi)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/pig/trunk@1852183 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/pig/commit/f203e5cd4f25bb4850be57a019ad8971ee635e40",
        "parent": "https://github.com/apache/pig/commit/72b3e4f8320614aecd2d50eaabf6aeaa18d2cac9",
        "bug_id": "pig_2",
        "file": [
            {
                "sha": "ceba83de46d545efee0e2147fb16796ef78f5cfe",
                "filename": "CHANGES.txt",
                "blob_url": "https://github.com/apache/pig/blob/f203e5cd4f25bb4850be57a019ad8971ee635e40/CHANGES.txt",
                "raw_url": "https://github.com/apache/pig/raw/f203e5cd4f25bb4850be57a019ad8971ee635e40/CHANGES.txt",
                "status": "modified",
                "changes": 1,
                "additions": 1,
                "contents_url": "https://api.github.com/repos/apache/pig/contents/CHANGES.txt?ref=f203e5cd4f25bb4850be57a019ad8971ee635e40",
                "patch": "@@ -87,6 +87,7 @@ PIG-5251: Bump joda-time to 2.9.9 (dbist13 via rohini)\n OPTIMIZATIONS\n  \n BUG FIXES\n+PIG-5372: SAMPLE/RANDOM(udf) before skewed join failing with NPE (knoguchi)\n \n PIG-5374: Use CircularFifoBuffer in InterRecordReader (szita)\n ",
                "deletions": 0
            },
            {
                "sha": "1209989808511324633db5a30f7da6cae5d4adb2",
                "filename": "src/org/apache/pig/backend/hadoop/executionengine/mapReduceLayer/partitioners/SkewedPartitioner.java",
                "blob_url": "https://github.com/apache/pig/blob/f203e5cd4f25bb4850be57a019ad8971ee635e40/src/org/apache/pig/backend/hadoop/executionengine/mapReduceLayer/partitioners/SkewedPartitioner.java",
                "raw_url": "https://github.com/apache/pig/raw/f203e5cd4f25bb4850be57a019ad8971ee635e40/src/org/apache/pig/backend/hadoop/executionengine/mapReduceLayer/partitioners/SkewedPartitioner.java",
                "status": "modified",
                "changes": 2,
                "additions": 0,
                "contents_url": "https://api.github.com/repos/apache/pig/contents/src/org/apache/pig/backend/hadoop/executionengine/mapReduceLayer/partitioners/SkewedPartitioner.java?ref=f203e5cd4f25bb4850be57a019ad8971ee635e40",
                "patch": "@@ -112,8 +112,6 @@ public int getPartition(PigNullableWritable wrappedKey, Writable value, int numP\n     @Override\n     public void setConf(Configuration job) {\n         conf = job;\n-        PigMapReduce.sJobConfInternal.set(conf);\n-        PigMapReduce.sJobConf = conf;\n     }\n \n     @Override",
                "deletions": 2
            },
            {
                "sha": "ec931f6507bcc7a2da1ca54806512225bf677237",
                "filename": "src/org/apache/pig/backend/hadoop/executionengine/util/MapRedUtil.java",
                "blob_url": "https://github.com/apache/pig/blob/f203e5cd4f25bb4850be57a019ad8971ee635e40/src/org/apache/pig/backend/hadoop/executionengine/util/MapRedUtil.java",
                "raw_url": "https://github.com/apache/pig/raw/f203e5cd4f25bb4850be57a019ad8971ee635e40/src/org/apache/pig/backend/hadoop/executionengine/util/MapRedUtil.java",
                "status": "modified",
                "changes": 8,
                "additions": 4,
                "contents_url": "https://api.github.com/repos/apache/pig/contents/src/org/apache/pig/backend/hadoop/executionengine/util/MapRedUtil.java?ref=f203e5cd4f25bb4850be57a019ad8971ee635e40",
                "patch": "@@ -93,10 +93,10 @@\n             conf.set(\"yarn.resourcemanager.principal\", mapConf.get(\"yarn.resourcemanager.principal\"));\n         }\n \n-        if (PigMapReduce.sJobConfInternal.get().get(\"fs.file.impl\")!=null)\n-            conf.set(\"fs.file.impl\", PigMapReduce.sJobConfInternal.get().get(\"fs.file.impl\"));\n-        if (PigMapReduce.sJobConfInternal.get().get(\"fs.hdfs.impl\")!=null)\n-            conf.set(\"fs.hdfs.impl\", PigMapReduce.sJobConfInternal.get().get(\"fs.hdfs.impl\"));\n+        if (mapConf.get(\"fs.file.impl\")!=null)\n+            conf.set(\"fs.file.impl\", mapConf.get(\"fs.file.impl\"));\n+        if (mapConf.get(\"fs.hdfs.impl\")!=null)\n+            conf.set(\"fs.hdfs.impl\", mapConf.get(\"fs.hdfs.impl\"));\n \n         copyTmpFileConfigurationValues(PigMapReduce.sJobConfInternal.get(), conf);\n ",
                "deletions": 4
            },
            {
                "sha": "e1ad73cb04d95b21b1ce7bcc64ce420188ed522d",
                "filename": "test/org/apache/pig/test/TestSkewedJoin.java",
                "blob_url": "https://github.com/apache/pig/blob/f203e5cd4f25bb4850be57a019ad8971ee635e40/test/org/apache/pig/test/TestSkewedJoin.java",
                "raw_url": "https://github.com/apache/pig/raw/f203e5cd4f25bb4850be57a019ad8971ee635e40/test/org/apache/pig/test/TestSkewedJoin.java",
                "status": "modified",
                "changes": 47,
                "additions": 38,
                "contents_url": "https://api.github.com/repos/apache/pig/contents/test/org/apache/pig/test/TestSkewedJoin.java?ref=f203e5cd4f25bb4850be57a019ad8971ee635e40",
                "patch": "@@ -207,7 +207,6 @@ public void testSkewedJoinMapLeftEmpty() throws IOException{\n         assertEquals(0, count);\n     }\n \n-\n     @Test\n     public void testSkewedJoinWithGroup() throws IOException{\n         pigServer.registerQuery(\"A = LOAD '\" + INPUT_FILE1 + \"' as (id, name, n);\");\n@@ -354,7 +353,7 @@ public void testSkewedJoinNullKeys() throws IOException {\n         try {\n             DataBag dbfrj = BagFactory.getInstance().newDefaultBag();\n             {\n-                pigServer.registerQuery(\"C = join A by id, B by id using 'skewed';\");\n+                pigServer.registerQuery(\"C = join A by id, B by id using 'skewed' parallel 2;\");\n                 Iterator<Tuple> iter = pigServer.openIterator(\"C\");\n \n                 while(iter.hasNext()) {\n@@ -375,23 +374,23 @@ public void testSkewedJoinOuter() throws IOException {\n         pigServer.registerQuery(\"B = LOAD '\" + INPUT_FILE5 + \"' as (id,name);\");\n         DataBag dbfrj = BagFactory.getInstance().newDefaultBag();\n         {\n-            pigServer.registerQuery(\"C = join A by id left, B by id using 'skewed';\");\n+            pigServer.registerQuery(\"C = join A by id left, B by id using 'skewed' parallel 2;\");\n             Iterator<Tuple> iter = pigServer.openIterator(\"C\");\n \n             while(iter.hasNext()) {\n                 dbfrj.add(iter.next());\n             }\n         }\n         {\n-            pigServer.registerQuery(\"C = join A by id right, B by id using 'skewed';\");\n+            pigServer.registerQuery(\"C = join A by id right, B by id using 'skewed' parallel 2;\");\n             Iterator<Tuple> iter = pigServer.openIterator(\"C\");\n \n             while(iter.hasNext()) {\n                 dbfrj.add(iter.next());\n             }\n         }\n         {\n-            pigServer.registerQuery(\"C = join A by id full, B by id using 'skewed';\");\n+            pigServer.registerQuery(\"C = join A by id full, B by id using 'skewed' parallel 2;\");\n             Iterator<Tuple> iter = pigServer.openIterator(\"C\");\n \n             while(iter.hasNext()) {\n@@ -413,7 +412,7 @@ public void testSkewedJoinOneValue() throws IOException {\n \n         DataBag dbfrj = BagFactory.getInstance().newDefaultBag(), dbrj = BagFactory.getInstance().newDefaultBag();\n         {\n-            pigServer.registerQuery(\"E = join C by id, D by id using 'skewed';\");\n+            pigServer.registerQuery(\"E = join C by id, D by id using 'skewed' parallel 2;\");\n             Iterator<Tuple> iter = pigServer.openIterator(\"E\");\n \n             while(iter.hasNext()) {\n@@ -487,7 +486,7 @@ public void testSkewedJoinEmptyInput() throws IOException {\n         pigServer.registerQuery(\"a = load 'left.dat' as (nums:chararray);\");\n         pigServer.registerQuery(\"b = load 'right.dat' as (number:chararray,text:chararray);\");\n         pigServer.registerQuery(\"c = filter a by nums == '7';\");\n-        pigServer.registerQuery(\"d = join c by nums LEFT OUTER, b by number USING 'skewed';\");\n+        pigServer.registerQuery(\"d = join c by nums LEFT OUTER, b by number USING 'skewed' parallel 2;\");\n \n         Iterator<Tuple> iter = pigServer.openIterator(\"d\");\n \n@@ -515,7 +514,7 @@ public void testRecursiveFileListing() throws IOException {\n \n         pigServer.registerQuery(\"a = load 'foo' as (nums:chararray);\");\n         pigServer.registerQuery(\"b = load 'foo' as (nums:chararray);\");\n-        pigServer.registerQuery(\"d = join a by nums, b by nums USING 'skewed';\");\n+        pigServer.registerQuery(\"d = join a by nums, b by nums USING 'skewed' parallel 2;\");\n \n         Iterator<Tuple> iter = pigServer.openIterator(\"d\");\n         int count = 0;\n@@ -569,7 +568,7 @@ public void testNonExistingInputPathInSkewJoin() throws Exception {\n           \"exists = LOAD '\" + INPUT_FILE2 + \"' AS (a:long, x:chararray);\" +\n           \"missing = LOAD '/non/existing/directory' AS (a:long);\" +\n           \"missing = FOREACH ( GROUP missing BY a ) GENERATE $0 AS a, COUNT_STAR($1);\" +\n-          \"joined = JOIN exists BY a, missing BY a USING 'skewed';\";\n+          \"joined = JOIN exists BY a, missing BY a USING 'skewed' parallel 2;\";\n \n         String logFile = Util.createTempFileDelOnExit(\"tmp\", \".log\").getAbsolutePath();\n         Logger logger = Logger.getLogger(\"org.apache.pig\");\n@@ -619,4 +618,34 @@ public void testNonExistingInputPathInSkewJoin() throws Exception {\n         }\n     }\n \n+    // PIG-5372\n+    @Test\n+    public void testSkewedJoinWithRANDOMudf() throws IOException{\n+        pigServer.registerQuery(\"A = LOAD '\" + INPUT_FILE1 + \"' as (id, name, n);\");\n+        pigServer.registerQuery(\"B = LOAD '\" + INPUT_FILE2 + \"' as (id, name);\");\n+        pigServer.registerQuery(\"A2 = FOREACH A GENERATE id, RANDOM() as randnum;\");\n+\n+        DataBag dbfrj = BagFactory.getInstance().newDefaultBag(), dbshj = BagFactory.getInstance().newDefaultBag();\n+        {\n+            pigServer.registerQuery(\"D = join A2 by id, B by id using 'skewed' parallel 2;\");\n+            Iterator<Tuple> iter = pigServer.openIterator(\"D\");\n+\n+            while(iter.hasNext()) {\n+                dbfrj.add(iter.next());\n+            }\n+        }\n+        {\n+            pigServer.registerQuery(\"D = join A2 by id, B by id;\");\n+            Iterator<Tuple> iter = pigServer.openIterator(\"D\");\n+\n+            while(iter.hasNext()) {\n+                dbshj.add(iter.next());\n+            }\n+        }\n+        assertTrue(dbfrj.size()>0);\n+        assertTrue(dbshj.size()>0);\n+        assertEquals(dbfrj.size(), dbshj.size());\n+    }\n+\n+\n }",
                "deletions": 9
            }
        ]
    },
    {
        "repo": "pig",
        "message": "PIG-5307: NPE in TezOperDependencyParallelismEstimator (rohini)\n\ngit-svn-id: https://svn.apache.org/repos/asf/pig/trunk@1810606 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/pig/commit/da257e255e9bb5be8fdc1dcdbef31000fe035184",
        "parent": "https://github.com/apache/pig/commit/aba818160437bd3d9d94bf427ba7015637b59eab",
        "bug_id": "pig_3",
        "file": [
            {
                "sha": "99df4cb76dcc3a25ded7b8e722b77e601f7223d7",
                "filename": "CHANGES.txt",
                "blob_url": "https://github.com/apache/pig/blob/da257e255e9bb5be8fdc1dcdbef31000fe035184/CHANGES.txt",
                "raw_url": "https://github.com/apache/pig/raw/da257e255e9bb5be8fdc1dcdbef31000fe035184/CHANGES.txt",
                "status": "modified",
                "changes": 2,
                "additions": 2,
                "contents_url": "https://api.github.com/repos/apache/pig/contents/CHANGES.txt?ref=da257e255e9bb5be8fdc1dcdbef31000fe035184",
                "patch": "@@ -52,6 +52,8 @@ OPTIMIZATIONS\n  \n BUG FIXES\n \n+PIG-5307: NPE in TezOperDependencyParallelismEstimator (rohini)\n+\n PIG-5272: BagToTuple output schema is incorrect (juen1jp via rohini)\n \n PIG-5271: StackOverflowError when compiling in Tez mode (with union and replicated join) (knoguchi)",
                "deletions": 0
            },
            {
                "sha": "b4223db592fdb0ac2f1e1553db56ce9771595f0f",
                "filename": "src/org/apache/pig/backend/hadoop/executionengine/tez/plan/optimizer/TezOperDependencyParallelismEstimator.java",
                "blob_url": "https://github.com/apache/pig/blob/da257e255e9bb5be8fdc1dcdbef31000fe035184/src/org/apache/pig/backend/hadoop/executionengine/tez/plan/optimizer/TezOperDependencyParallelismEstimator.java",
                "raw_url": "https://github.com/apache/pig/raw/da257e255e9bb5be8fdc1dcdbef31000fe035184/src/org/apache/pig/backend/hadoop/executionengine/tez/plan/optimizer/TezOperDependencyParallelismEstimator.java",
                "status": "modified",
                "changes": 2,
                "additions": 1,
                "contents_url": "https://api.github.com/repos/apache/pig/contents/src/org/apache/pig/backend/hadoop/executionengine/tez/plan/optimizer/TezOperDependencyParallelismEstimator.java?ref=da257e255e9bb5be8fdc1dcdbef31000fe035184",
                "patch": "@@ -217,7 +217,7 @@ public TezParallelismFactorVisitor(TezOperator tezOp, TezOperator successor) {\n         public void visitFilter(POFilter fl) throws VisitorException {\n             if (fl.getPlan().size()==1 && fl.getPlan().getRoots().get(0) instanceof ConstantExpression) {\n                 ConstantExpression cons = (ConstantExpression)fl.getPlan().getRoots().get(0);\n-                if (cons.getValue().equals(Boolean.TRUE)) {\n+                if (Boolean.TRUE.equals(cons.getValue())) {\n                     // skip all true condition\n                     return;\n                 }",
                "deletions": 1
            }
        ]
    },
    {
        "repo": "pig",
        "message": "PIG-4733: Avoid NullPointerException in JVMReuseImpl for builtin classes (rohini)\n\ngit-svn-id: https://svn.apache.org/repos/asf/pig/trunk@1714257 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/pig/commit/3aee11cd4f45ede2fa82d8700dde063365869afd",
        "parent": "https://github.com/apache/pig/commit/9f7129c5111ad6750f4ddc36042e0c8202bc256b",
        "bug_id": "pig_4",
        "file": [
            {
                "sha": "1c27e7e05342aa56bcd8c9e7e685eb3787c65f26",
                "filename": "CHANGES.txt",
                "blob_url": "https://github.com/apache/pig/blob/3aee11cd4f45ede2fa82d8700dde063365869afd/CHANGES.txt",
                "raw_url": "https://github.com/apache/pig/raw/3aee11cd4f45ede2fa82d8700dde063365869afd/CHANGES.txt",
                "status": "modified",
                "changes": 2,
                "additions": 2,
                "contents_url": "https://api.github.com/repos/apache/pig/contents/CHANGES.txt?ref=3aee11cd4f45ede2fa82d8700dde063365869afd",
                "patch": "@@ -69,6 +69,8 @@ PIG-4639: Add better parser for Apache HTTPD access log (nielsbasjes via daijy)\n \n BUG FIXES\n \n+PIG-4733: Avoid NullPointerException in JVMReuseImpl for builtin classes (rohini)\n+\n PIG-4722: [Pig on Tez] NPE while running Combiner (rohini)\n \n PIG-4730: [Pig on Tez] Total parallelism estimation does not account load parallelism (rohini)",
                "deletions": 0
            },
            {
                "sha": "087853ebfcc37ad4cd1bccc207b611d734cf3704",
                "filename": "src/org/apache/pig/JVMReuseImpl.java",
                "blob_url": "https://github.com/apache/pig/blob/3aee11cd4f45ede2fa82d8700dde063365869afd/src/org/apache/pig/JVMReuseImpl.java",
                "raw_url": "https://github.com/apache/pig/raw/3aee11cd4f45ede2fa82d8700dde063365869afd/src/org/apache/pig/JVMReuseImpl.java",
                "status": "modified",
                "changes": 29,
                "additions": 26,
                "contents_url": "https://api.github.com/repos/apache/pig/contents/src/org/apache/pig/JVMReuseImpl.java?ref=3aee11cd4f45ede2fa82d8700dde063365869afd",
                "patch": "@@ -22,12 +22,34 @@\n \n import org.apache.commons.logging.Log;\n import org.apache.commons.logging.LogFactory;\n+import org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigCombiner;\n+import org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigGenericMapReduce;\n+import org.apache.pig.backend.hadoop.executionengine.physicalLayer.PhysicalOperator;\n+import org.apache.pig.classification.InterfaceAudience;\n+import org.apache.pig.classification.InterfaceStability;\n+import org.apache.pig.impl.PigContext;\n+import org.apache.pig.impl.util.SpillableMemoryManager;\n+import org.apache.pig.impl.util.UDFContext;\n+import org.apache.pig.tools.pigstats.PigStatusReporter;\n \n+@InterfaceAudience.Private\n+@InterfaceStability.Unstable\n public class JVMReuseImpl {\n \n     private static Log LOG = LogFactory.getLog(JVMReuseImpl.class);\n \n     public void cleanupStaticData() {\n+\n+        // Calling Pig builtin ones directly without reflection for optimization\n+        // and to reduce probability of NPE in PIG-4418\n+        SpillableMemoryManager.staticDataCleanup();\n+        PhysicalOperator.staticDataCleanup();\n+        PigContext.staticDataCleanup();\n+        UDFContext.staticDataCleanup();\n+        PigGenericMapReduce.staticDataCleanup();\n+        PigStatusReporter.staticDataCleanup();\n+        PigCombiner.Combine.staticDataCleanup();\n+\n         String className = null;\n         String msg = null;\n         List<Method> staticCleanupMethods = JVMReuseManager.getInstance()\n@@ -45,15 +67,16 @@ public void cleanupStaticData() {\n                 m.invoke(null);\n                 msg = null;\n             } catch (Exception e) {\n-                LOG.error(\"Exception while calling static methods:\" + getMethodNames() + \". \" + msg, e);\n+                LOG.error(\"Exception while calling static methods:\"\n+                        + getMethodNames(staticCleanupMethods) + \". \" + msg, e);\n                 throw new RuntimeException(\"Error while \" + msg, e);\n             }\n         }\n     }\n \n-    private String getMethodNames() {\n+    private String getMethodNames(List<Method> staticCleanupMethods) {\n         StringBuilder sb = new StringBuilder();\n-        for (Method m : JVMReuseManager.getInstance().getStaticDataCleanupMethods()) {\n+        for (Method m : staticCleanupMethods) {\n             if (m == null) {\n                 sb.append(\"null,\");\n             } else {",
                "deletions": 3
            },
            {
                "sha": "76ea41cc9a37bd985f0ae75e2b384d6e01eb5fe4",
                "filename": "src/org/apache/pig/backend/hadoop/executionengine/mapReduceLayer/PigCombiner.java",
                "blob_url": "https://github.com/apache/pig/blob/3aee11cd4f45ede2fa82d8700dde063365869afd/src/org/apache/pig/backend/hadoop/executionengine/mapReduceLayer/PigCombiner.java",
                "raw_url": "https://github.com/apache/pig/raw/3aee11cd4f45ede2fa82d8700dde063365869afd/src/org/apache/pig/backend/hadoop/executionengine/mapReduceLayer/PigCombiner.java",
                "status": "modified",
                "changes": 8,
                "additions": 1,
                "contents_url": "https://api.github.com/repos/apache/pig/contents/src/org/apache/pig/backend/hadoop/executionengine/mapReduceLayer/PigCombiner.java?ref=3aee11cd4f45ede2fa82d8700dde063365869afd",
                "patch": "@@ -27,9 +27,7 @@\n import org.apache.hadoop.io.Writable;\n import org.apache.hadoop.mapreduce.Reducer;\n import org.apache.log4j.PropertyConfigurator;\n-import org.apache.pig.JVMReuseManager;\n import org.apache.pig.PigException;\n-import org.apache.pig.StaticDataCleanup;\n import org.apache.pig.backend.executionengine.ExecException;\n import org.apache.pig.backend.hadoop.HDataType;\n import org.apache.pig.backend.hadoop.executionengine.physicalLayer.POStatus;\n@@ -76,11 +74,7 @@\n         PigContext pigContext = null;\n         private volatile boolean initialized = false;\n \n-        static {\n-            JVMReuseManager.getInstance().registerForStaticDataCleanup(Combine.class);\n-        }\n-\n-        @StaticDataCleanup\n+        //@StaticDataCleanup\n         public static void staticDataCleanup() {\n             firstTime = true;\n         }",
                "deletions": 7
            },
            {
                "sha": "b22a9238a1990eafad5c69c592c536db25034160",
                "filename": "src/org/apache/pig/backend/hadoop/executionengine/mapReduceLayer/PigGenericMapReduce.java",
                "blob_url": "https://github.com/apache/pig/blob/3aee11cd4f45ede2fa82d8700dde063365869afd/src/org/apache/pig/backend/hadoop/executionengine/mapReduceLayer/PigGenericMapReduce.java",
                "raw_url": "https://github.com/apache/pig/raw/3aee11cd4f45ede2fa82d8700dde063365869afd/src/org/apache/pig/backend/hadoop/executionengine/mapReduceLayer/PigGenericMapReduce.java",
                "status": "modified",
                "changes": 8,
                "additions": 1,
                "contents_url": "https://api.github.com/repos/apache/pig/contents/src/org/apache/pig/backend/hadoop/executionengine/mapReduceLayer/PigGenericMapReduce.java?ref=3aee11cd4f45ede2fa82d8700dde063365869afd",
                "patch": "@@ -30,10 +30,8 @@\n import org.apache.hadoop.mapred.jobcontrol.Job;\n import org.apache.hadoop.mapreduce.JobContext;\n import org.apache.hadoop.mapreduce.Reducer;\n-import org.apache.pig.JVMReuseManager;\n import org.apache.pig.PigConstants;\n import org.apache.pig.PigException;\n-import org.apache.pig.StaticDataCleanup;\n import org.apache.pig.backend.executionengine.ExecException;\n import org.apache.pig.backend.hadoop.HDataType;\n import org.apache.pig.backend.hadoop.datastorage.ConfigurationUtil;\n@@ -103,11 +101,7 @@\n \n     public static ThreadLocal<Configuration> sJobConfInternal = new ThreadLocal<Configuration>();\n \n-    static {\n-        JVMReuseManager.getInstance().registerForStaticDataCleanup(PigGenericMapReduce.class);\n-    }\n-\n-    @StaticDataCleanup\n+    //@StaticDataCleanup\n     public static void staticDataCleanup() {\n         sJobContext = null;\n         sJobConf = null;",
                "deletions": 7
            },
            {
                "sha": "65df3cc3e86f12077bc7cd2daffa0458f6492126",
                "filename": "src/org/apache/pig/backend/hadoop/executionengine/physicalLayer/PhysicalOperator.java",
                "blob_url": "https://github.com/apache/pig/blob/3aee11cd4f45ede2fa82d8700dde063365869afd/src/org/apache/pig/backend/hadoop/executionengine/physicalLayer/PhysicalOperator.java",
                "raw_url": "https://github.com/apache/pig/raw/3aee11cd4f45ede2fa82d8700dde063365869afd/src/org/apache/pig/backend/hadoop/executionengine/physicalLayer/PhysicalOperator.java",
                "status": "modified",
                "changes": 8,
                "additions": 1,
                "contents_url": "https://api.github.com/repos/apache/pig/contents/src/org/apache/pig/backend/hadoop/executionengine/physicalLayer/PhysicalOperator.java?ref=3aee11cd4f45ede2fa82d8700dde063365869afd",
                "patch": "@@ -24,8 +24,6 @@\n \n import org.apache.commons.logging.Log;\n import org.apache.commons.logging.LogFactory;\n-import org.apache.pig.JVMReuseManager;\n-import org.apache.pig.StaticDataCleanup;\n import org.apache.pig.backend.executionengine.ExecException;\n import org.apache.pig.backend.hadoop.executionengine.physicalLayer.plans.PhyPlanVisitor;\n import org.apache.pig.backend.hadoop.executionengine.physicalLayer.plans.PhysicalPlan;\n@@ -122,10 +120,6 @@\n \n     private List<OriginalLocation> originalLocations =  new ArrayList<OriginalLocation>();\n \n-    static {\n-        JVMReuseManager.getInstance().registerForStaticDataCleanup(PhysicalOperator.class);\n-    }\n-\n     public PhysicalOperator(OperatorKey k) {\n         this(k, -1, null);\n     }\n@@ -458,7 +452,7 @@ public static void setReporter(PigProgressable reporter) {\n         PhysicalOperator.reporter.set(reporter);\n     }\n \n-    @StaticDataCleanup\n+    //@StaticDataCleanup\n     public static void staticDataCleanup() {\n         reporter = new ThreadLocal<PigProgressable>();\n     }",
                "deletions": 7
            },
            {
                "sha": "7d8e1c1db965411c93ae67981397ebbf8e39fb03",
                "filename": "src/org/apache/pig/backend/hadoop/executionengine/tez/runtime/PigProcessor.java",
                "blob_url": "https://github.com/apache/pig/blob/3aee11cd4f45ede2fa82d8700dde063365869afd/src/org/apache/pig/backend/hadoop/executionengine/tez/runtime/PigProcessor.java",
                "raw_url": "https://github.com/apache/pig/raw/3aee11cd4f45ede2fa82d8700dde063365869afd/src/org/apache/pig/backend/hadoop/executionengine/tez/runtime/PigProcessor.java",
                "status": "modified",
                "changes": 1,
                "additions": 0,
                "contents_url": "https://api.github.com/repos/apache/pig/contents/src/org/apache/pig/backend/hadoop/executionengine/tez/runtime/PigProcessor.java?ref=3aee11cd4f45ede2fa82d8700dde063365869afd",
                "patch": "@@ -162,7 +162,6 @@ public void handleEvents(List<Event> processorEvents) {\n \n     @Override\n     public void close() throws Exception {\n-\n         execPlan = null;\n         fileOutputs = null;\n         leaf = null;",
                "deletions": 1
            },
            {
                "sha": "f95e303c52ce041a36614d06024299268f711805",
                "filename": "src/org/apache/pig/builtin/Distinct.java",
                "blob_url": "https://github.com/apache/pig/blob/3aee11cd4f45ede2fa82d8700dde063365869afd/src/org/apache/pig/builtin/Distinct.java",
                "raw_url": "https://github.com/apache/pig/raw/3aee11cd4f45ede2fa82d8700dde063365869afd/src/org/apache/pig/builtin/Distinct.java",
                "status": "modified",
                "changes": 12,
                "additions": 0,
                "contents_url": "https://api.github.com/repos/apache/pig/contents/src/org/apache/pig/builtin/Distinct.java?ref=3aee11cd4f45ede2fa82d8700dde063365869afd",
                "patch": "@@ -22,9 +22,7 @@\n \n import org.apache.pig.Algebraic;\n import org.apache.pig.EvalFunc;\n-import org.apache.pig.JVMReuseManager;\n import org.apache.pig.PigConfiguration;\n-import org.apache.pig.StaticDataCleanup;\n import org.apache.pig.backend.executionengine.ExecException;\n import org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigMapReduce;\n import org.apache.pig.data.BagFactory;\n@@ -45,16 +43,6 @@\n     private static boolean initialized = false;\n     private static boolean useDefaultBag = false;\n \n-    static {\n-        JVMReuseManager.getInstance().registerForStaticDataCleanup(Distinct.class);\n-    }\n-\n-    @StaticDataCleanup\n-    public static void staticDataCleanup() {\n-        initialized = false;\n-        useDefaultBag = false;\n-    }\n-\n     @Override\n     public DataBag exec(Tuple input) throws IOException {\n         return getDistinct(input);",
                "deletions": 12
            },
            {
                "sha": "064bb5b913d0a8633d4e75b1d43b9d4086bee295",
                "filename": "src/org/apache/pig/impl/PigContext.java",
                "blob_url": "https://github.com/apache/pig/blob/3aee11cd4f45ede2fa82d8700dde063365869afd/src/org/apache/pig/impl/PigContext.java",
                "raw_url": "https://github.com/apache/pig/raw/3aee11cd4f45ede2fa82d8700dde063365869afd/src/org/apache/pig/impl/PigContext.java",
                "status": "modified",
                "changes": 8,
                "additions": 1,
                "contents_url": "https://api.github.com/repos/apache/pig/contents/src/org/apache/pig/impl/PigContext.java?ref=3aee11cd4f45ede2fa82d8700dde063365869afd",
                "patch": "@@ -52,9 +52,7 @@\n import org.apache.pig.ExecType;\n import org.apache.pig.ExecTypeProvider;\n import org.apache.pig.FuncSpec;\n-import org.apache.pig.JVMReuseManager;\n import org.apache.pig.PigException;\n-import org.apache.pig.StaticDataCleanup;\n import org.apache.pig.backend.datastorage.DataStorage;\n import org.apache.pig.backend.datastorage.DataStorageException;\n import org.apache.pig.backend.datastorage.ElementDescriptor;\n@@ -171,11 +169,7 @@\n     // List of paths skipped for automatic shipping\n     List<String> skippedShipPaths = new ArrayList<String>();\n \n-    static {\n-        JVMReuseManager.getInstance().registerForStaticDataCleanup(PigContext.class);\n-    }\n-\n-    @StaticDataCleanup\n+    //@StaticDataCleanup\n     public static void staticDataCleanup() {\n         packageImportList.set(null);\n     }",
                "deletions": 7
            },
            {
                "sha": "433b8d7657261bc2c2fdbe7c526673df113388c9",
                "filename": "src/org/apache/pig/impl/util/SpillableMemoryManager.java",
                "blob_url": "https://github.com/apache/pig/blob/3aee11cd4f45ede2fa82d8700dde063365869afd/src/org/apache/pig/impl/util/SpillableMemoryManager.java",
                "raw_url": "https://github.com/apache/pig/raw/3aee11cd4f45ede2fa82d8700dde063365869afd/src/org/apache/pig/impl/util/SpillableMemoryManager.java",
                "status": "modified",
                "changes": 10,
                "additions": 2,
                "contents_url": "https://api.github.com/repos/apache/pig/contents/src/org/apache/pig/impl/util/SpillableMemoryManager.java?ref=3aee11cd4f45ede2fa82d8700dde063365869afd",
                "patch": "@@ -36,8 +36,6 @@\n \n import org.apache.commons.logging.Log;\n import org.apache.commons.logging.LogFactory;\n-import org.apache.pig.JVMReuseManager;\n-import org.apache.pig.StaticDataCleanup;\n \n /**\n  * This class Tracks the tenured pool and a list of Spillable objects. When memory gets low, this\n@@ -93,12 +91,8 @@\n \n     private static final SpillableMemoryManager manager = new SpillableMemoryManager();\n \n-    static {\n-        JVMReuseManager.getInstance().registerForStaticDataCleanup(SpillableMemoryManager.class);\n-    }\n-\n-    @StaticDataCleanup\n-    public static void cleanupStaticData() {\n+    //@StaticDataCleanup\n+    public static void staticDataCleanup() {\n         manager.spillables.clear();\n         manager.accumulatedFreeSize = 0L;\n     }",
                "deletions": 8
            },
            {
                "sha": "1f63798158a59c3c444b40716a9c4e5d5afcaf3a",
                "filename": "src/org/apache/pig/impl/util/UDFContext.java",
                "blob_url": "https://github.com/apache/pig/blob/3aee11cd4f45ede2fa82d8700dde063365869afd/src/org/apache/pig/impl/util/UDFContext.java",
                "raw_url": "https://github.com/apache/pig/raw/3aee11cd4f45ede2fa82d8700dde063365869afd/src/org/apache/pig/impl/util/UDFContext.java",
                "status": "modified",
                "changes": 10,
                "additions": 2,
                "contents_url": "https://api.github.com/repos/apache/pig/contents/src/org/apache/pig/impl/util/UDFContext.java?ref=3aee11cd4f45ede2fa82d8700dde063365869afd",
                "patch": "@@ -26,8 +26,6 @@\n import java.util.Properties;\n \n import org.apache.hadoop.conf.Configuration;\n-import org.apache.pig.JVMReuseManager;\n-import org.apache.pig.StaticDataCleanup;\n import org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.MRConfiguration;\n \n public class UDFContext {\n@@ -46,10 +44,6 @@ public UDFContext initialValue() {\n         }\n     };\n \n-    static {\n-        JVMReuseManager.getInstance().registerForStaticDataCleanup(UDFContext.class);\n-    }\n-\n     private UDFContext() {\n         udfConfs = new HashMap<UDFContextKey, Properties>();\n     }\n@@ -71,8 +65,8 @@ public static void setUdfContext(UDFContext udfContext) {\n     /*\n      *  internal pig use only - should NOT be called from user code\n      */\n-    @StaticDataCleanup\n-    public static void cleanupStaticData() {\n+    //@StaticDataCleanup\n+    public static void staticDataCleanup() {\n         tss = new ThreadLocal<UDFContext>() {\n             @Override\n             public UDFContext initialValue() {",
                "deletions": 8
            },
            {
                "sha": "5396535301b0e90dc5d3be2064cfe0bdf488bf6a",
                "filename": "src/org/apache/pig/tools/pigstats/PigStatusReporter.java",
                "blob_url": "https://github.com/apache/pig/blob/3aee11cd4f45ede2fa82d8700dde063365869afd/src/org/apache/pig/tools/pigstats/PigStatusReporter.java",
                "raw_url": "https://github.com/apache/pig/raw/3aee11cd4f45ede2fa82d8700dde063365869afd/src/org/apache/pig/tools/pigstats/PigStatusReporter.java",
                "status": "modified",
                "changes": 8,
                "additions": 1,
                "contents_url": "https://api.github.com/repos/apache/pig/contents/src/org/apache/pig/tools/pigstats/PigStatusReporter.java?ref=3aee11cd4f45ede2fa82d8700dde063365869afd",
                "patch": "@@ -21,8 +21,6 @@\n import org.apache.hadoop.mapreduce.Counter;\n import org.apache.hadoop.mapreduce.StatusReporter;\n import org.apache.hadoop.util.Progressable;\n-import org.apache.pig.JVMReuseManager;\n-import org.apache.pig.StaticDataCleanup;\n import org.apache.pig.backend.hadoop.executionengine.TaskContext;\n import org.apache.pig.classification.InterfaceAudience;\n import org.apache.pig.classification.InterfaceStability;\n@@ -35,11 +33,7 @@\n \n     private TaskContext<?> context = null;\n \n-    static {\n-        JVMReuseManager.getInstance().registerForStaticDataCleanup(PigStatusReporter.class);\n-    }\n-\n-    @StaticDataCleanup\n+    //@StaticDataCleanup\n     public static void staticDataCleanup() {\n         reporter = null;\n     }",
                "deletions": 7
            }
        ]
    },
    {
        "repo": "pig",
        "message": "PIG-4418: NullPointerException in JVMReuseImpl (rohini)\n\ngit-svn-id: https://svn.apache.org/repos/asf/pig/trunk@1681163 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/pig/commit/9f8d39f0a413efd4ad5655aa4e997dc228817431",
        "parent": "https://github.com/apache/pig/commit/d835cada4253983270b9158eafde265620c6e3b7",
        "bug_id": "pig_5",
        "file": [
            {
                "sha": "295e4acd50994f09772ce60b1c4b4a7da3b9ef73",
                "filename": "CHANGES.txt",
                "blob_url": "https://github.com/apache/pig/blob/9f8d39f0a413efd4ad5655aa4e997dc228817431/CHANGES.txt",
                "raw_url": "https://github.com/apache/pig/raw/9f8d39f0a413efd4ad5655aa4e997dc228817431/CHANGES.txt",
                "status": "modified",
                "changes": 2,
                "additions": 2,
                "contents_url": "https://api.github.com/repos/apache/pig/contents/CHANGES.txt?ref=9f8d39f0a413efd4ad5655aa4e997dc228817431",
                "patch": "@@ -76,6 +76,8 @@ PIG-4333: Split BigData tests into multiple groups (rohini)\n  \n BUG FIXES\n \n+PIG-4418: NullPointerException in JVMReuseImpl (rohini)\n+\n PIG-4562: Typo in DataType.toDateTime (daijy)\n \n PIG-4559: Fix several new tez e2e test failures (daijy)",
                "deletions": 0
            },
            {
                "sha": "d71251291cc5493cf6a19366b46bdf7fc49c98e5",
                "filename": "src/org/apache/pig/JVMReuseImpl.java",
                "blob_url": "https://github.com/apache/pig/blob/9f8d39f0a413efd4ad5655aa4e997dc228817431/src/org/apache/pig/JVMReuseImpl.java",
                "raw_url": "https://github.com/apache/pig/raw/9f8d39f0a413efd4ad5655aa4e997dc228817431/src/org/apache/pig/JVMReuseImpl.java",
                "status": "modified",
                "changes": 31,
                "additions": 25,
                "contents_url": "https://api.github.com/repos/apache/pig/contents/src/org/apache/pig/JVMReuseImpl.java?ref=9f8d39f0a413efd4ad5655aa4e997dc228817431",
                "patch": "@@ -28,23 +28,42 @@\n     private static Log LOG = LogFactory.getLog(JVMReuseImpl.class);\n \n     public void cleanupStaticData() {\n+        String className = null;\n+        String msg = null;\n         List<Method> staticCleanupMethods = JVMReuseManager.getInstance()\n                 .getStaticDataCleanupMethods();\n         for (Method m : staticCleanupMethods) {\n             try {\n-                String msg = \"Invoking method \" + m.getName() + \" in class \"\n-                        + m.getDeclaringClass().getName() + \" for static data cleanup\";\n-                if (m.getDeclaringClass().getName().startsWith(\"org.apache.pig\")) {\n+                className = m.getDeclaringClass() == null ? \"anonymous\" : m.getDeclaringClass().getName();\n+                msg = \"Invoking method \" + m.getName() + \" in class \"\n+                        + className + \" for static data cleanup\";\n+                if (className.startsWith(\"org.apache.pig\")) {\n                     LOG.debug(msg);\n                 } else {\n                     LOG.info(msg);\n                 }\n                 m.invoke(null);\n+                msg = null;\n             } catch (Exception e) {\n-                throw new RuntimeException(\"Error while invoking method \"\n-                        + m.getName() + \" in class \" + m.getDeclaringClass().getName()\n-                        + \" for static data cleanup\", e);\n+                LOG.error(\"Exception while calling static methods:\" + getMethodNames() + \". \" + msg, e);\n+                throw new RuntimeException(\"Error while \" + msg, e);\n             }\n         }\n     }\n+\n+    private String getMethodNames() {\n+        StringBuilder sb = new StringBuilder();\n+        for (Method m : JVMReuseManager.getInstance().getStaticDataCleanupMethods()) {\n+            if (m == null) {\n+                sb.append(\"null,\");\n+            } else {\n+                sb.append(m.getDeclaringClass() == null ? \"anonymous\" : m.getDeclaringClass().getName());\n+                sb.append(\".\").append(m.getName()).append(\",\");\n+            }\n+        }\n+        if (sb.length() > 1) {\n+            sb.deleteCharAt(sb.length() - 1);\n+        }\n+        return sb.toString();\n+    }\n }",
                "deletions": 6
            }
        ]
    },
    {
        "repo": "pig",
        "message": "PIG-3726: Ranking empty records leads to NullPointerException\n\ngit-svn-id: https://svn.apache.org/repos/asf/pig/trunk@1563200 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/pig/commit/2e49045d2f4593796e1b615e5d5f749fb450a6ea",
        "parent": "https://github.com/apache/pig/commit/378c234675fd4671b5ac6dc16e7752121bd4d47f",
        "bug_id": "pig_6",
        "file": [
            {
                "sha": "1f471a653621fb355a288a335a59eef08ad9c8d1",
                "filename": "CHANGES.txt",
                "blob_url": "https://github.com/apache/pig/blob/2e49045d2f4593796e1b615e5d5f749fb450a6ea/CHANGES.txt",
                "raw_url": "https://github.com/apache/pig/raw/2e49045d2f4593796e1b615e5d5f749fb450a6ea/CHANGES.txt",
                "status": "modified",
                "changes": 2,
                "additions": 2,
                "contents_url": "https://api.github.com/repos/apache/pig/contents/CHANGES.txt?ref=2e49045d2f4593796e1b615e5d5f749fb450a6ea",
                "patch": "@@ -76,6 +76,8 @@ OPTIMIZATIONS\n  \n BUG FIXES\n \n+PIG-3726: Ranking empty records leads to NullPointerException (jarcec via daijy)\n+\n PIG-3652: Pigmix parser (PigPerformanceLoader) deletes chars during parsing (keren3000 via daijy)\n \n PIG-3722: Udf deserialization for registered classes fails in local_mode (aniket486)",
                "deletions": 0
            },
            {
                "sha": "0cbcbed1c06d7210b12c573f9bbeb3bccfe05469",
                "filename": "src/org/apache/pig/backend/hadoop/executionengine/mapReduceLayer/JobControlCompiler.java",
                "blob_url": "https://github.com/apache/pig/blob/2e49045d2f4593796e1b615e5d5f749fb450a6ea/src/org/apache/pig/backend/hadoop/executionengine/mapReduceLayer/JobControlCompiler.java",
                "raw_url": "https://github.com/apache/pig/raw/2e49045d2f4593796e1b615e5d5f749fb450a6ea/src/org/apache/pig/backend/hadoop/executionengine/mapReduceLayer/JobControlCompiler.java",
                "status": "modified",
                "changes": 20,
                "additions": 19,
                "contents_url": "https://api.github.com/repos/apache/pig/contents/src/org/apache/pig/backend/hadoop/executionengine/mapReduceLayer/JobControlCompiler.java?ref=2e49045d2f4593796e1b615e5d5f749fb450a6ea",
                "patch": "@@ -110,6 +110,7 @@\n import org.apache.pig.impl.util.Pair;\n import org.apache.pig.impl.util.UDFContext;\n import org.apache.pig.impl.util.Utils;\n+import org.apache.pig.tools.pigstats.mapreduce.MRPigStatsUtil;\n import org.apache.pig.tools.pigstats.mapreduce.MRScriptState;\n \n /**\n@@ -375,7 +376,24 @@ private void saveCounters(Job job, String operationID) {\n \n         try {\n             counters = HadoopShims.getCounters(job);\n-            groupCounters = counters.getGroup(getGroupName(counters.getGroupNames()));\n+\n+            String groupName = getGroupName(counters.getGroupNames());\n+            // In case that the counter group was not find, we need to find\n+            // out why. Only acceptable state is that the relation has been\n+            // empty.\n+            if (groupName == null) {\n+                Counter outputRecords =\n+                    counters.getGroup(MRPigStatsUtil.TASK_COUNTER_GROUP)\n+                    .getCounterForName(MRPigStatsUtil.MAP_OUTPUT_RECORDS);\n+\n+                if(outputRecords.getCounter() == 0) {\n+                    globalCounters.put(operationID, new ArrayList<Pair<String, Long>>());\n+                    return;\n+                } else {\n+                  throw new RuntimeException(\"Did not found RANK counter group for operationId: \" + operationID);\n+                }\n+            }\n+            groupCounters = counters.getGroup(groupName);\n \n             Iterator<Counter> it = groupCounters.iterator();\n             HashMap<Integer,Long> counterList = new HashMap<Integer, Long>();",
                "deletions": 1
            },
            {
                "sha": "e73d11558bfdb63cd0e8a60c54469f35ea899505",
                "filename": "test/org/apache/pig/test/TestRank3.java",
                "blob_url": "https://github.com/apache/pig/blob/2e49045d2f4593796e1b615e5d5f749fb450a6ea/test/org/apache/pig/test/TestRank3.java",
                "raw_url": "https://github.com/apache/pig/raw/2e49045d2f4593796e1b615e5d5f749fb450a6ea/test/org/apache/pig/test/TestRank3.java",
                "status": "modified",
                "changes": 14,
                "additions": 14,
                "contents_url": "https://api.github.com/repos/apache/pig/contents/test/org/apache/pig/test/TestRank3.java?ref=2e49045d2f4593796e1b615e5d5f749fb450a6ea",
                "patch": "@@ -52,6 +52,7 @@ public void setUp() throws Exception {\n             pigServer = new PigServer(\"local\");\n \n             data = resetData(pigServer);\n+            data.set(\"empty\");\n             data.set(\n                     \"testcascade\",\n                     tuple(3,2,3),\n@@ -142,6 +143,19 @@ public void testRankCascade() throws IOException {\n         verifyExpected(data.get(\"result\"), expected);\n     }\n \n+    // See PIG-3726\n+    @Test\n+    public void testRankEmptyRelation() throws Exception {\n+      String query = \"DATA = LOAD 'empty' USING mock.Storage();\"\n+        + \"A = rank DATA;\"\n+        + \"store A into 'empty_result' using mock.Storage();\";\n+\n+      Util.registerMultiLineQuery(pigServer, query);\n+\n+      Set<Tuple> expected = ImmutableSet.of();\n+      verifyExpected(data.get(\"empty_result\"), expected);\n+    }\n+\n     public void verifyExpected(List<Tuple> out, Set<Tuple> expected) {\n         for (Tuple tup : out) {\n             assertTrue(expected + \" contains \" + tup, expected.contains(tup));",
                "deletions": 0
            }
        ]
    },
    {
        "repo": "pig",
        "message": "PIG-2275: NullPointerException from ILLUSTRATE\n\ngit-svn-id: https://svn.apache.org/repos/asf/pig/trunk@1196483 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/pig/commit/b53556016447dbe94d4743f4e6a4b4bd559c0f05",
        "parent": "https://github.com/apache/pig/commit/b59d0dabd3eadbda1ea00544f7a295b046979ba0",
        "bug_id": "pig_7",
        "file": [
            {
                "sha": "05469d7ae0699800243103b1b9a01ed7e009aeff",
                "filename": "CHANGES.txt",
                "blob_url": "https://github.com/apache/pig/blob/b53556016447dbe94d4743f4e6a4b4bd559c0f05/CHANGES.txt",
                "raw_url": "https://github.com/apache/pig/raw/b53556016447dbe94d4743f4e6a4b4bd559c0f05/CHANGES.txt",
                "status": "modified",
                "changes": 2,
                "additions": 2,
                "contents_url": "https://api.github.com/repos/apache/pig/contents/CHANGES.txt?ref=b53556016447dbe94d4743f4e6a4b4bd559c0f05",
                "patch": "@@ -156,6 +156,8 @@ PIG-2228: support partial aggregation in map task (thejas)\n \n BUG FIXES\n \n+PIG-2275: NullPointerException from ILLUSTRATE (daijy)\n+\n PIG-2119: DuplicateForEachColumnRewrite makes assumptions about the position of LOGGenerate in the plan (daijy)\n \n PIG-2290: TOBAG wraps tuple parameters in another tuple (ryan.hoegg via thejas)",
                "deletions": 0
            },
            {
                "sha": "ab2bdb0933d0e61911464aa1e1b293703234a913",
                "filename": "src/org/apache/pig/backend/hadoop/executionengine/physicalLayer/expressionOperators/UnaryComparisonOperator.java",
                "blob_url": "https://github.com/apache/pig/blob/b53556016447dbe94d4743f4e6a4b4bd559c0f05/src/org/apache/pig/backend/hadoop/executionengine/physicalLayer/expressionOperators/UnaryComparisonOperator.java",
                "raw_url": "https://github.com/apache/pig/raw/b53556016447dbe94d4743f4e6a4b4bd559c0f05/src/org/apache/pig/backend/hadoop/executionengine/physicalLayer/expressionOperators/UnaryComparisonOperator.java",
                "status": "modified",
                "changes": 2,
                "additions": 1,
                "contents_url": "https://api.github.com/repos/apache/pig/contents/src/org/apache/pig/backend/hadoop/executionengine/physicalLayer/expressionOperators/UnaryComparisonOperator.java?ref=b53556016447dbe94d4743f4e6a4b4bd559c0f05",
                "patch": "@@ -55,7 +55,7 @@ public void setOperandType(byte operandType) {\n     @Override\n     public Tuple illustratorMarkup(Object in, Object out, int eqClassIndex) {\n         if(illustrator != null) {\n-\n+            illustrator.setSubExpResult(eqClassIndex == 0);\n         }\n         return null;\n     }",
                "deletions": 1
            },
            {
                "sha": "84e58cf636d91809a6e1c2d186b46cd0524bfd6a",
                "filename": "src/org/apache/pig/pen/AugmentBaseDataVisitor.java",
                "blob_url": "https://github.com/apache/pig/blob/b53556016447dbe94d4743f4e6a4b4bd559c0f05/src/org/apache/pig/pen/AugmentBaseDataVisitor.java",
                "raw_url": "https://github.com/apache/pig/raw/b53556016447dbe94d4743f4e6a4b4bd559c0f05/src/org/apache/pig/pen/AugmentBaseDataVisitor.java",
                "status": "modified",
                "changes": 21,
                "additions": 19,
                "contents_url": "https://api.github.com/repos/apache/pig/contents/src/org/apache/pig/pen/AugmentBaseDataVisitor.java?ref=b53556016447dbe94d4743f4e6a4b4bd559c0f05",
                "patch": "@@ -61,6 +61,7 @@\n import org.apache.pig.newplan.logical.expression.LessThanEqualExpression;\n import org.apache.pig.newplan.logical.relational.LOLoad;\n import org.apache.pig.newplan.logical.relational.LogicalPlan;\n+import org.apache.pig.newplan.logical.expression.IsNullExpression;\n import org.apache.pig.newplan.logical.expression.ModExpression;\n import org.apache.pig.newplan.logical.expression.LogicalExpression;\n import org.apache.pig.newplan.logical.expression.MultiplyExpression;\n@@ -69,6 +70,7 @@\n import org.apache.pig.newplan.logical.expression.OrExpression;\n import org.apache.pig.newplan.logical.expression.ProjectExpression;\n import org.apache.pig.newplan.logical.expression.RegexExpression;\n+import org.apache.pig.newplan.logical.expression.UserFuncExpression;\n import org.apache.pig.newplan.logical.relational.LOSort;\n import org.apache.pig.newplan.logical.relational.LOSplit;\n import org.apache.pig.newplan.logical.relational.LOStore;\n@@ -510,10 +512,10 @@ public void visit(LOFilter filter) throws FrontendException {\n         } catch (Exception e) {\n             log\n                     .error(\"Error visiting Load during Augmentation phase of Example Generator! \"\n-                            + e.getMessage());\n+                            + e.getMessage(), e);\n             throw new FrontendException(\n                     \"Error visiting Load during Augmentation phase of Example Generator! \"\n-                            + e.getMessage());\n+                            + e.getMessage(), e);\n         }\n     }\n \n@@ -946,6 +948,12 @@ void GenerateMatchingTupleHelper(Tuple t, Operator pred,\n                     invert);\n         else if (pred instanceof NotExpression)\n             GenerateMatchingTupleHelper(t, (NotExpression) pred, invert);\n+        else if (pred instanceof IsNullExpression)\n+            GenerateMatchingTupleHelper(t, (IsNullExpression) pred, invert);\n+        else if (pred instanceof UserFuncExpression)\n+            // Don't know how to generate input tuple for UDF, return null\n+            // to suppress the generation \n+            t = null;\n         else\n             throw new FrontendException(\"Unknown operator in filter predicate\");\n     }\n@@ -1151,6 +1159,15 @@ void GenerateMatchingTupleHelper(Tuple t, NotExpression op, boolean invert)\n         GenerateMatchingTupleHelper(t, input, !invert);\n \n     }\n+    \n+    void GenerateMatchingTupleHelper(Tuple t, IsNullExpression op, boolean invert)\n+            throws FrontendException, ExecException {\n+        byte type = op.getExpression().getType();\n+        if (!invert)\n+            t.set(0, null);\n+        else\n+            t.set(0, generateData(type, \"0\"));\n+    }\n \n     Object GetUnequalValue(Object v) {\n         byte type = DataType.findType(v);",
                "deletions": 2
            },
            {
                "sha": "d10bbca4168078d9652c7d429d4718b84eed0141",
                "filename": "test/org/apache/pig/test/TestExampleGenerator.java",
                "blob_url": "https://github.com/apache/pig/blob/b53556016447dbe94d4743f4e6a4b4bd559c0f05/test/org/apache/pig/test/TestExampleGenerator.java",
                "raw_url": "https://github.com/apache/pig/raw/b53556016447dbe94d4743f4e6a4b4bd559c0f05/test/org/apache/pig/test/TestExampleGenerator.java",
                "status": "modified",
                "changes": 29,
                "additions": 29,
                "contents_url": "https://api.github.com/repos/apache/pig/contents/test/org/apache/pig/test/TestExampleGenerator.java?ref=b53556016447dbe94d4743f4e6a4b4bd559c0f05",
                "patch": "@@ -361,4 +361,33 @@ public void testLimit() throws Exception {\n \n         assertTrue(derivedData != null);\n     }\n+    \n+    //see PIG-2275\n+    @Test\n+    public void testFilterWithIsNull() throws ExecException, IOException {\n+        PigServer pigServer = new PigServer(pigContext);\n+\n+        pigServer.registerQuery(\"A = load \" + A\n+                + \" using PigStorage() as (x : int, y : int);\");\n+        pigServer.registerQuery(\"B = filter A by x is not null;\");\n+\n+        Map<Operator, DataBag> derivedData = pigServer.getExamples(\"B\");\n+\n+        assertTrue(derivedData != null);\n+    }\n+    \n+    @Test\n+    public void testFilterWithUDF() throws ExecException, IOException {\n+        PigServer pigServer = new PigServer(pigContext);\n+\n+        pigServer.registerQuery(\"A = load \" + A\n+                + \" using PigStorage() as (x : int, y : int);\");\n+        pigServer.registerQuery(\"B = group A by x;\");\n+        pigServer.registerQuery(\"C = filter B by NOT IsEmpty(A.y);\");\n+\n+        Map<Operator, DataBag> derivedData = pigServer.getExamples(\"C\");\n+\n+        assertTrue(derivedData != null);\n+    }\n+\n }",
                "deletions": 0
            }
        ]
    },
    {
        "repo": "pig",
        "message": "PIG-2185: NullPointerException while Accessing Empty Bag in FOREACH { FILTER }\n\ngit-svn-id: https://svn.apache.org/repos/asf/pig/trunk@1159791 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/pig/commit/e18428dc6488ea7b5e71afefc6ae0efcce12582e",
        "parent": "https://github.com/apache/pig/commit/73305065255083ab5a1b2026ea119ae2d06eb06a",
        "bug_id": "pig_8",
        "file": [
            {
                "sha": "f95d7dbdbcbdd674ce6b5f80368ec69ce041bc25",
                "filename": "CHANGES.txt",
                "blob_url": "https://github.com/apache/pig/blob/e18428dc6488ea7b5e71afefc6ae0efcce12582e/CHANGES.txt",
                "raw_url": "https://github.com/apache/pig/raw/e18428dc6488ea7b5e71afefc6ae0efcce12582e/CHANGES.txt",
                "status": "modified",
                "changes": 2,
                "additions": 2,
                "contents_url": "https://api.github.com/repos/apache/pig/contents/CHANGES.txt?ref=e18428dc6488ea7b5e71afefc6ae0efcce12582e",
                "patch": "@@ -111,6 +111,8 @@ PIG-2011: Speed up TestTypedMap.java (dvryaboy)\n \n BUG FIXES\n \n+PIG-2185: NullPointerException while Accessing Empty Bag in FOREACH { FILTER } (daijy)\n+\n PIG-2227: Wrong jars copied into lib directory in e2e tests when invoked from top level (gates)\n \n PIG-2219: Pig tests fail if ${user.home}/pigtest/conf does not already exist (cwsteinbach via gates)",
                "deletions": 0
            },
            {
                "sha": "826b4b2f299b98694b523af4d79940840dd28011",
                "filename": "src/org/apache/pig/backend/hadoop/executionengine/physicalLayer/expressionOperators/POProject.java",
                "blob_url": "https://github.com/apache/pig/blob/e18428dc6488ea7b5e71afefc6ae0efcce12582e/src/org/apache/pig/backend/hadoop/executionengine/physicalLayer/expressionOperators/POProject.java",
                "raw_url": "https://github.com/apache/pig/raw/e18428dc6488ea7b5e71afefc6ae0efcce12582e/src/org/apache/pig/backend/hadoop/executionengine/physicalLayer/expressionOperators/POProject.java",
                "status": "modified",
                "changes": 20,
                "additions": 12,
                "contents_url": "https://api.github.com/repos/apache/pig/contents/src/org/apache/pig/backend/hadoop/executionengine/physicalLayer/expressionOperators/POProject.java?ref=e18428dc6488ea7b5e71afefc6ae0efcce12582e",
                "patch": "@@ -444,15 +444,19 @@ public Result getNext(Tuple t) throws ExecException {\n             }\n \n             if(overloaded){\n-                DataBag retBag = (DataBag)ret;\n-                bagIterator = retBag.iterator();\n-                if(bagIterator.hasNext()){\n-                    processingBagOfTuples = true;\n-                    res.result = bagIterator.next();\n-                }\n-                // If the bag contains no tuple, set the returnStatus to STATUS_EOP\n-                if (!processingBagOfTuples)\n+                if (ret!=null) {\n+                    DataBag retBag = (DataBag)ret;\n+                    bagIterator = retBag.iterator();\n+                    if(bagIterator.hasNext()){\n+                        processingBagOfTuples = true;\n+                        res.result = bagIterator.next();\n+                    }\n+                    // If the bag contains no tuple, set the returnStatus to STATUS_EOP\n+                    if (!processingBagOfTuples)\n+                        res.returnStatus = POStatus.STATUS_EOP;\n+                } else {\n                     res.returnStatus = POStatus.STATUS_EOP;\n+                }\n             }\n             else {\n                 res.result = (Tuple)ret;",
                "deletions": 8
            },
            {
                "sha": "0b7b391bf01f9569c1f0b1029b0a763d507a61c8",
                "filename": "test/org/apache/pig/test/TestEvalPipeline2.java",
                "blob_url": "https://github.com/apache/pig/blob/e18428dc6488ea7b5e71afefc6ae0efcce12582e/test/org/apache/pig/test/TestEvalPipeline2.java",
                "raw_url": "https://github.com/apache/pig/raw/e18428dc6488ea7b5e71afefc6ae0efcce12582e/test/org/apache/pig/test/TestEvalPipeline2.java",
                "status": "modified",
                "changes": 30,
                "additions": 30,
                "contents_url": "https://api.github.com/repos/apache/pig/contents/test/org/apache/pig/test/TestEvalPipeline2.java?ref=e18428dc6488ea7b5e71afefc6ae0efcce12582e",
                "patch": "@@ -1585,4 +1585,34 @@ public void testUnionOnSchemaUidGeneration() throws Exception{\n         Assert.assertFalse(iter.hasNext());\n         \n     }\n+    \n+    // See PIG-2185\n+    @Test\n+    public void testProjectEmptyBag() throws Exception{\n+        String[] input = {\n+                \"{(12)}\",\n+                \"{(23)}\",\n+                \"\"\n+        };\n+        \n+        Util.createInputFile(cluster, \"table_testProjectEmptyBag\", input);\n+        \n+        pigServer.registerQuery(\"A = load 'table_testProjectEmptyBag' as (bg:bag{});\");\n+        pigServer.registerQuery(\"B = FOREACH A { x = FILTER bg BY $0 == '12'; GENERATE x; };\");\n+\n+        Iterator<Tuple> iter = pigServer.openIterator(\"B\");\n+        \n+        Tuple t = iter.next();\n+        Assert.assertTrue(t.toString().equals(\"({(12)})\"));\n+        \n+        t = iter.next();\n+        Assert.assertTrue(t.toString().equals(\"({})\"));\n+        \n+        Assert.assertTrue(iter.hasNext());\n+        \n+        t = iter.next();\n+        Assert.assertTrue(t.toString().equals(\"({})\"));\n+        \n+        Assert.assertFalse(iter.hasNext());\n+    }\n }",
                "deletions": 0
            }
        ]
    },
    {
        "repo": "pig",
        "message": "PIG-2110: NullPointerException in piggybank.evaluation.util.apachelogparser.SearchTermExtractor\n\ngit-svn-id: https://svn.apache.org/repos/asf/pig/trunk@1143623 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/pig/commit/82339f46bef83884f33d001628e00e5bd4fff7fa",
        "parent": "https://github.com/apache/pig/commit/a31ea71fd7ad2980cfc1b375d4861febc8d9dda5",
        "bug_id": "pig_9",
        "file": [
            {
                "sha": "39c44262fdefcdf9bfb6b957579da8880e4d3434",
                "filename": "CHANGES.txt",
                "blob_url": "https://github.com/apache/pig/blob/82339f46bef83884f33d001628e00e5bd4fff7fa/CHANGES.txt",
                "raw_url": "https://github.com/apache/pig/raw/82339f46bef83884f33d001628e00e5bd4fff7fa/CHANGES.txt",
                "status": "modified",
                "changes": 2,
                "additions": 2,
                "contents_url": "https://api.github.com/repos/apache/pig/contents/CHANGES.txt?ref=82339f46bef83884f33d001628e00e5bd4fff7fa",
                "patch": "@@ -62,6 +62,8 @@ PIG-2011: Speed up TestTypedMap.java (dvryaboy)\n \n BUG FIXES\n \n+PIG-2110: NullPointerException in piggybank.evaluation.util.apachelogparser.SearchTermExtractor (dale_jin via daijy)\n+\n PIG-2144: ClassCastException when using IsEmpty(DIFF()) (thejas)\n \n PIG-2139: LogicalExpressionSimplifier optimizer rule should check if udf is",
                "deletions": 0
            },
            {
                "sha": "b555dd5f100e16cee23ebee767dcda4c0901a894",
                "filename": "contrib/piggybank/java/src/main/java/org/apache/pig/piggybank/evaluation/util/apachelogparser/SearchTermExtractor.java",
                "blob_url": "https://github.com/apache/pig/blob/82339f46bef83884f33d001628e00e5bd4fff7fa/contrib/piggybank/java/src/main/java/org/apache/pig/piggybank/evaluation/util/apachelogparser/SearchTermExtractor.java",
                "raw_url": "https://github.com/apache/pig/raw/82339f46bef83884f33d001628e00e5bd4fff7fa/contrib/piggybank/java/src/main/java/org/apache/pig/piggybank/evaluation/util/apachelogparser/SearchTermExtractor.java",
                "status": "modified",
                "changes": 1,
                "additions": 1,
                "contents_url": "https://api.github.com/repos/apache/pig/contents/contrib/piggybank/java/src/main/java/org/apache/pig/piggybank/evaluation/util/apachelogparser/SearchTermExtractor.java?ref=82339f46bef83884f33d001628e00e5bd4fff7fa",
                "patch": "@@ -167,6 +167,7 @@ public String exec(Tuple input) throws IOException {\n       if (HOSTS.containsKey(host) || host.contains(\"google.co\")\n           || host.contains(\"search.yahoo\")) {\n         String queryString = urlObject.getQuery();\n+        if (queryString == null) { return null; }\n         TERM_MATCHER.reset(queryString);\n         if (TERM_MATCHER.find()) {\n           String terms = TERM_MATCHER.group(1);",
                "deletions": 0
            },
            {
                "sha": "fc94875041ff2a3d31584c367946a992314166ac",
                "filename": "contrib/piggybank/java/src/test/java/org/apache/pig/piggybank/test/evaluation/util/apachelogparser/TestSearchTermExtractor.java",
                "blob_url": "https://github.com/apache/pig/blob/82339f46bef83884f33d001628e00e5bd4fff7fa/contrib/piggybank/java/src/test/java/org/apache/pig/piggybank/test/evaluation/util/apachelogparser/TestSearchTermExtractor.java",
                "raw_url": "https://github.com/apache/pig/raw/82339f46bef83884f33d001628e00e5bd4fff7fa/contrib/piggybank/java/src/test/java/org/apache/pig/piggybank/test/evaluation/util/apachelogparser/TestSearchTermExtractor.java",
                "status": "modified",
                "changes": 1,
                "additions": 1,
                "contents_url": "https://api.github.com/repos/apache/pig/contents/contrib/piggybank/java/src/test/java/org/apache/pig/piggybank/test/evaluation/util/apachelogparser/TestSearchTermExtractor.java?ref=82339f46bef83884f33d001628e00e5bd4fff7fa",
                "patch": "@@ -26,6 +26,7 @@\n public class TestSearchTermExtractor extends TestCase {\n     private static HashMap<String, String> tests = new HashMap<String, String>();\n     static {\n+        tests.put(\"http://www.google.com/search\", null);\n         tests.put(\"http://www.google.com/search?hl=en&q=a+simple+test&btnG=Google+Search\", \"a simple test\");\n         tests.put(\"http://www.google.co.uk/search?hl=en&q=a+simple+test&btnG=Google+Search&meta=\", \"a simple test\");\n         tests.put(\"http://www.google.co.jp/search?hl=ja&q=a+simple+test&btnG=Google+%E6%A4%9C%E7%B4%A2&lr=\", \"a simple test\");",
                "deletions": 0
            }
        ]
    },
    {
        "repo": "pig",
        "message": "PIG-1697: NullPointerException if log4j.properties is Used\n\ngit-svn-id: https://svn.apache.org/repos/asf/pig/trunk@1092782 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/pig/commit/c3853d09c7f6fff345e54f71a3b2272cc2be6404",
        "parent": "https://github.com/apache/pig/commit/5d6bf47b8e2a6ab39acfc9e018bd1f24c449813e",
        "bug_id": "pig_10",
        "file": [
            {
                "sha": "77fb3e89d34d01330db966acd8d80beac1217d87",
                "filename": "CHANGES.txt",
                "blob_url": "https://github.com/apache/pig/blob/c3853d09c7f6fff345e54f71a3b2272cc2be6404/CHANGES.txt",
                "raw_url": "https://github.com/apache/pig/raw/c3853d09c7f6fff345e54f71a3b2272cc2be6404/CHANGES.txt",
                "status": "modified",
                "changes": 2,
                "additions": 2,
                "contents_url": "https://api.github.com/repos/apache/pig/contents/CHANGES.txt?ref=c3853d09c7f6fff345e54f71a3b2272cc2be6404",
                "patch": "@@ -147,6 +147,8 @@ PIG-1696: Performance: Use System.arraycopy() instead of manually copying the by\n \n BUG FIXES\n \n+PIG-1697: NullPointerException if log4j.properties is Used (laukik via daijy)\n+\n PIG-1929:Type checker failed to catch invalid type comparison (thejas)\n \n PIG-1928: Type Checking, incorrect error message (thejas)",
                "deletions": 0
            },
            {
                "sha": "384e12fe0a001c40d9aa983d4dbdfd70991284b8",
                "filename": "src/org/apache/pig/Main.java",
                "blob_url": "https://github.com/apache/pig/blob/c3853d09c7f6fff345e54f71a3b2272cc2be6404/src/org/apache/pig/Main.java",
                "raw_url": "https://github.com/apache/pig/raw/c3853d09c7f6fff345e54f71a3b2272cc2be6404/src/org/apache/pig/Main.java",
                "status": "modified",
                "changes": 3,
                "additions": 3,
                "contents_url": "https://api.github.com/repos/apache/pig/contents/src/org/apache/pig/Main.java?ref=c3853d09c7f6fff345e54f71a3b2272cc2be6404",
                "patch": "@@ -660,6 +660,9 @@ private static void configureLog4J(Properties properties, PigContext pigContext)\n \n     PropertyConfigurator.configure(props);\n     logLevel = Logger.getLogger(\"org.apache.pig\").getLevel();\n+    if (logLevel==null) {\n+    \tlogLevel = Logger.getLogger(\"org.apache.pig\").getEffectiveLevel();\n+    }\n     Properties backendProps = pigContext.getLog4jProperties();\n     backendProps.setProperty(\"log4j.logger.org.apache.pig\", logLevel.toString());\n     pigContext.setLog4jProperties(backendProps);",
                "deletions": 0
            }
        ]
    },
    {
        "repo": "pig",
        "message": "PIG-1233: NullPointerException in AVG  (ankur via olgan)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/pig/trunk@912057 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/pig/commit/a18157990d213480158b518d8ef4e33c637f73e6",
        "parent": "https://github.com/apache/pig/commit/35d66a043b87eca36a833129bc739f64c6e0773e",
        "bug_id": "pig_11",
        "file": [
            {
                "sha": "7ab01f162dd8e2d4a24549b6f889d613bf08089a",
                "filename": "CHANGES.txt",
                "blob_url": "https://github.com/apache/pig/blob/a18157990d213480158b518d8ef4e33c637f73e6/CHANGES.txt",
                "raw_url": "https://github.com/apache/pig/raw/a18157990d213480158b518d8ef4e33c637f73e6/CHANGES.txt",
                "status": "modified",
                "changes": 2,
                "additions": 2,
                "contents_url": "https://api.github.com/repos/apache/pig/contents/CHANGES.txt?ref=a18157990d213480158b518d8ef4e33c637f73e6",
                "patch": "@@ -55,6 +55,8 @@ manner (rding via pradeepkth)\n \n IMPROVEMENTS\n \n+PIG-1233: NullPointerException in AVG  (ankur via olgan)\n+\n PIG-1218: Use distributed cache to store samples (rding via pradeepkth)\n \n PIG-1226: suuport for additional jar files (thejas via olgan)",
                "deletions": 0
            },
            {
                "sha": "f6c8892e731882f2e3b09edaa05ec3f05fa5cb09",
                "filename": "src/org/apache/pig/builtin/AVG.java",
                "blob_url": "https://github.com/apache/pig/blob/a18157990d213480158b518d8ef4e33c637f73e6/src/org/apache/pig/builtin/AVG.java",
                "raw_url": "https://github.com/apache/pig/raw/a18157990d213480158b518d8ef4e33c637f73e6/src/org/apache/pig/builtin/AVG.java",
                "status": "modified",
                "changes": 2,
                "additions": 1,
                "contents_url": "https://api.github.com/repos/apache/pig/contents/src/org/apache/pig/builtin/AVG.java?ref=a18157990d213480158b518d8ef4e33c637f73e6",
                "patch": "@@ -306,7 +306,7 @@ public void cleanup() {\n     @Override\n     public Double getValue() {\n         Double avg = null;\n-        if (intermediateCount > 0) {\n+        if (intermediateCount != null && intermediateCount > 0) {\n             avg = new Double(intermediateSum / intermediateCount);\n         }\n         return avg;",
                "deletions": 1
            },
            {
                "sha": "e5273e17a64b601d654470d39590b7d4c01fded6",
                "filename": "src/org/apache/pig/builtin/DoubleAvg.java",
                "blob_url": "https://github.com/apache/pig/blob/a18157990d213480158b518d8ef4e33c637f73e6/src/org/apache/pig/builtin/DoubleAvg.java",
                "raw_url": "https://github.com/apache/pig/raw/a18157990d213480158b518d8ef4e33c637f73e6/src/org/apache/pig/builtin/DoubleAvg.java",
                "status": "modified",
                "changes": 2,
                "additions": 1,
                "contents_url": "https://api.github.com/repos/apache/pig/contents/src/org/apache/pig/builtin/DoubleAvg.java?ref=a18157990d213480158b518d8ef4e33c637f73e6",
                "patch": "@@ -277,7 +277,7 @@ public void cleanup() {\n     @Override\n     public Double getValue() {\n         Double avg = null;\n-        if (intermediateCount > 0) {\n+        if (intermediateCount != null && intermediateCount > 0) {\n             avg = new Double(intermediateSum / intermediateCount);\n         }\n         return avg;",
                "deletions": 1
            },
            {
                "sha": "ad0b74fd180772142d86acf02549994b45e44af8",
                "filename": "src/org/apache/pig/builtin/FloatAvg.java",
                "blob_url": "https://github.com/apache/pig/blob/a18157990d213480158b518d8ef4e33c637f73e6/src/org/apache/pig/builtin/FloatAvg.java",
                "raw_url": "https://github.com/apache/pig/raw/a18157990d213480158b518d8ef4e33c637f73e6/src/org/apache/pig/builtin/FloatAvg.java",
                "status": "modified",
                "changes": 2,
                "additions": 1,
                "contents_url": "https://api.github.com/repos/apache/pig/contents/src/org/apache/pig/builtin/FloatAvg.java?ref=a18157990d213480158b518d8ef4e33c637f73e6",
                "patch": "@@ -274,7 +274,7 @@ public void cleanup() {\n     @Override\n     public Double getValue() {\n         Double avg = null;\n-        if (intermediateCount > 0) {\n+        if (intermediateCount != null && intermediateCount > 0) {\n             avg = new Double(intermediateSum / intermediateCount);\n         }\n         return avg;",
                "deletions": 1
            },
            {
                "sha": "ae3c51a3166436fb9fb729edea185684415b39df",
                "filename": "src/org/apache/pig/builtin/IntAvg.java",
                "blob_url": "https://github.com/apache/pig/blob/a18157990d213480158b518d8ef4e33c637f73e6/src/org/apache/pig/builtin/IntAvg.java",
                "raw_url": "https://github.com/apache/pig/raw/a18157990d213480158b518d8ef4e33c637f73e6/src/org/apache/pig/builtin/IntAvg.java",
                "status": "modified",
                "changes": 2,
                "additions": 1,
                "contents_url": "https://api.github.com/repos/apache/pig/contents/src/org/apache/pig/builtin/IntAvg.java?ref=a18157990d213480158b518d8ef4e33c637f73e6",
                "patch": "@@ -279,7 +279,7 @@ public void cleanup() {\n     @Override\n     public Double getValue() {\n         Double avg = null;\n-        if (intermediateCount > 0) {\n+        if (intermediateCount != null && intermediateCount > 0) {\n             avg = new Double(intermediateSum / intermediateCount);\n         }\n         return avg;",
                "deletions": 1
            },
            {
                "sha": "b3fe33c3b7dae8db3950e602d924e133d8adc300",
                "filename": "src/org/apache/pig/builtin/LongAvg.java",
                "blob_url": "https://github.com/apache/pig/blob/a18157990d213480158b518d8ef4e33c637f73e6/src/org/apache/pig/builtin/LongAvg.java",
                "raw_url": "https://github.com/apache/pig/raw/a18157990d213480158b518d8ef4e33c637f73e6/src/org/apache/pig/builtin/LongAvg.java",
                "status": "modified",
                "changes": 2,
                "additions": 1,
                "contents_url": "https://api.github.com/repos/apache/pig/contents/src/org/apache/pig/builtin/LongAvg.java?ref=a18157990d213480158b518d8ef4e33c637f73e6",
                "patch": "@@ -274,7 +274,7 @@ public void cleanup() {\n     @Override\n     public Double getValue() {\n         Double avg = null;\n-        if (intermediateCount > 0) {\n+        if (intermediateCount != null && intermediateCount > 0) {\n             avg = new Double(intermediateSum / intermediateCount);\n         }\n         return avg;",
                "deletions": 1
            },
            {
                "sha": "839e144a3d6e0661e6b41112c0d5fd5d24a16d17",
                "filename": "test/org/apache/pig/test/TestAccumulator.java",
                "blob_url": "https://github.com/apache/pig/blob/a18157990d213480158b518d8ef4e33c637f73e6/test/org/apache/pig/test/TestAccumulator.java",
                "raw_url": "https://github.com/apache/pig/raw/a18157990d213480158b518d8ef4e33c637f73e6/test/org/apache/pig/test/TestAccumulator.java",
                "status": "modified",
                "changes": 54,
                "additions": 49,
                "contents_url": "https://api.github.com/repos/apache/pig/contents/test/org/apache/pig/test/TestAccumulator.java?ref=a18157990d213480158b518d8ef4e33c637f73e6",
                "patch": "@@ -43,6 +43,9 @@ public TestAccumulator() throws ExecException, IOException{\n         pigServer.getPigContext().getProperties().setProperty(\"pig.accumulative.batchsize\", \"2\");     \n         pigServer.getPigContext().getProperties().setProperty(\"pig.exec.batchsize\", \"2\");\n         pigServer.getPigContext().getProperties().setProperty(\"pig.exec.nocombiner\", \"true\");\n+        // reducing the number of retry attempts to speed up test completion\n+        pigServer.getPigContext().getProperties().setProperty(\"mapred.map.max.attempts\",\"1\");\n+        pigServer.getPigContext().getProperties().setProperty(\"mapred.reduce.max.attempts\",\"1\");\n     }\n     \n     @Before\n@@ -86,6 +89,8 @@ private void createFiles() throws IOException {\n         w.println(\"200\\t3.1\");\n         w.println(\"100\\t5.0\");\n         w.println(\"300\\t3.3\");\n+        w.println(\"400\\t\");\n+        w.println(\"400\\t\");\n         w.close();   \n         \n         Util.copyFromLocalToCluster(cluster, INPUT_FILE3, INPUT_FILE3);\n@@ -407,23 +412,62 @@ public void testAccumWithSort() throws IOException{\n         }                                   \n     }\n     \n+    public void testAccumWithBuildinAvg() throws IOException {\n+      HashMap<Integer, Double> expected = new HashMap<Integer, Double>();\n+      expected.put(100, 3.0);\n+      expected.put(200, 2.1);\n+      expected.put(300, 3.3);\n+      expected.put(400, null);\n+      // Test all the averages for correct behaviour with null values\n+      String[] types = { \"double\", \"float\", \"int\", \"long\" };\n+      for (int i = 0; i < types.length; i++) {\n+        if (i > 1) { // adjust decimal error for non real types\n+          expected.put(200, 2.0);\n+          expected.put(300, 3.0);\n+        }\n+        pigServer.registerQuery(\"A = load '\" + INPUT_FILE3 + \"' as (id:int, v:\"\n+            + types[i] + \");\");\n+        pigServer.registerQuery(\"C = group A by id;\");\n+        pigServer.registerQuery(\"D = foreach C generate group, AVG(A.v);\");\n+        Iterator<Tuple> iter = pigServer.openIterator(\"D\");\n+\n+        while (iter.hasNext()) {\n+          Tuple t = iter.next();\n+          Double v = expected.get((Integer) t.get(0));\n+          if (v != null) {\n+            assertEquals(v.doubleValue(), ((Number) t.get(1)).doubleValue(),\n+                0.0001);\n+          } else {\n+            assertEquals(null, t.get(1));\n+          }\n+        }\n+      }\n+    }\n+    \n     public void testAccumWithBuildin() throws IOException{\n         pigServer.registerQuery(\"A = load '\" + INPUT_FILE3 + \"' as (id:int, v:double);\");\n         pigServer.registerQuery(\"C = group A by id;\");\n-        pigServer.registerQuery(\"D = foreach C generate group, SUM(A.v), AVG(A.v), COUNT(A.v), MIN(A.v), MAX(A.v);\");       \n+        // moving AVG accumulator test to separate test case\n+        pigServer.registerQuery(\"D = foreach C generate group, SUM(A.v), COUNT(A.v), MIN(A.v), MAX(A.v);\");       \n \n         HashMap<Integer, Double[]> expected = new HashMap<Integer, Double[]>();\n-        expected.put(100, new Double[]{15.0,3.0,5.0,1.0,5.0});\n-        expected.put(200, new Double[]{6.3,2.1,3.0,1.1,3.1});\n-        expected.put(300, new Double[]{3.3,3.3,1.0,3.3,3.3});\n+        expected.put(100, new Double[]{15.0, 5.0, 1.0, 5.0});\n+        expected.put(200, new Double[]{6.3, 3.0, 1.1, 3.1});\n+        expected.put(300, new Double[]{3.3, 1.0, 3.3, 3.3});\n+        expected.put(400, new Double[] { null, 0.0, null, null });\n                   \n         Iterator<Tuple> iter = pigServer.openIterator(\"D\");\n         \n         while(iter.hasNext()) {\n             Tuple t = iter.next();\n             Double[] v = expected.get((Integer)t.get(0));\n             for(int i=0; i<v.length; i++) {\n-                assertEquals(v[i].doubleValue(), ((Number)t.get(i+1)).doubleValue(), 0.0001);\n+              if (v[i] != null) {\n+                assertEquals(v[i].doubleValue(), ((Number) t.get(i + 1))\n+                    .doubleValue(), 0.0001);\n+              } else {\n+                assertEquals(null, t.get(i + 1));\n+              }\n             }            \n         }    \n     }",
                "deletions": 5
            }
        ]
    },
    {
        "repo": "pig",
        "message": "PIG-1142: Got NullPointerException merge join with pruning\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/pig/trunk@889755 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/pig/commit/41aa1b49b5d7a5cb96385500639d793153dc8659",
        "parent": "https://github.com/apache/pig/commit/f01017f099d21216cf83e4fbea3a8855d104fbce",
        "bug_id": "pig_12",
        "file": [
            {
                "sha": "6b47b465e2054eba98f4a973f891cecb8dbcc9c1",
                "filename": "src/org/apache/pig/impl/logicalLayer/LOCogroup.java",
                "blob_url": "https://github.com/apache/pig/blob/41aa1b49b5d7a5cb96385500639d793153dc8659/src/org/apache/pig/impl/logicalLayer/LOCogroup.java",
                "raw_url": "https://github.com/apache/pig/raw/41aa1b49b5d7a5cb96385500639d793153dc8659/src/org/apache/pig/impl/logicalLayer/LOCogroup.java",
                "status": "modified",
                "changes": 3,
                "additions": 2,
                "contents_url": "https://api.github.com/repos/apache/pig/contents/src/org/apache/pig/impl/logicalLayer/LOCogroup.java?ref=41aa1b49b5d7a5cb96385500639d793153dc8659",
                "patch": "@@ -822,7 +822,8 @@ public boolean pruneColumns(List<Pair<Integer, Integer>> columns)\n                     errCode, PigException.BUG);\n         }\n \n-        for (Pair<Integer, Integer> column : columns) {\n+        for (int i=columns.size()-1;i>=0;i--) {\n+            Pair<Integer, Integer> column = columns.get(i);\n             if (column.first < 0 || column.first > predecessors.size()) {\n                 int errCode = 2191;\n                 throw new FrontendException(\"No input \" + column.first",
                "deletions": 1
            },
            {
                "sha": "3b26e1cced364f2f6f60736cddf0538221661a9c",
                "filename": "src/org/apache/pig/impl/logicalLayer/LOFilter.java",
                "blob_url": "https://github.com/apache/pig/blob/41aa1b49b5d7a5cb96385500639d793153dc8659/src/org/apache/pig/impl/logicalLayer/LOFilter.java",
                "raw_url": "https://github.com/apache/pig/raw/41aa1b49b5d7a5cb96385500639d793153dc8659/src/org/apache/pig/impl/logicalLayer/LOFilter.java",
                "status": "modified",
                "changes": 3,
                "additions": 2,
                "contents_url": "https://api.github.com/repos/apache/pig/contents/src/org/apache/pig/impl/logicalLayer/LOFilter.java?ref=41aa1b49b5d7a5cb96385500639d793153dc8659",
                "patch": "@@ -268,7 +268,8 @@ public boolean pruneColumns(List<Pair<Integer, Integer>> columns)\n                     .warn(\"Cannot prune columns in filter, no schema information found\");\n             return false;\n         }\n-        for (Pair<Integer, Integer> column : columns) {\n+        for (int i=columns.size()-1;i>=0;i--) {\n+            Pair<Integer, Integer> column = columns.get(i);\n             if (column.first != 0) {\n                 int errCode = 2191;\n                 throw new FrontendException(",
                "deletions": 1
            },
            {
                "sha": "adf75e36421c28894053521920e08efd2514c22b",
                "filename": "src/org/apache/pig/impl/logicalLayer/LOSort.java",
                "blob_url": "https://github.com/apache/pig/blob/41aa1b49b5d7a5cb96385500639d793153dc8659/src/org/apache/pig/impl/logicalLayer/LOSort.java",
                "raw_url": "https://github.com/apache/pig/raw/41aa1b49b5d7a5cb96385500639d793153dc8659/src/org/apache/pig/impl/logicalLayer/LOSort.java",
                "status": "modified",
                "changes": 3,
                "additions": 2,
                "contents_url": "https://api.github.com/repos/apache/pig/contents/src/org/apache/pig/impl/logicalLayer/LOSort.java?ref=41aa1b49b5d7a5cb96385500639d793153dc8659",
                "patch": "@@ -385,7 +385,8 @@ public boolean pruneColumns(List<Pair<Integer, Integer>> columns)\n         if (predecessors == null)\n             return false;\n \n-        for (Pair<Integer, Integer> column : columns) {\n+        for (int i=columns.size()-1;i>=0;i--) {\n+            Pair<Integer, Integer> column = columns.get(i);\n             if (column.first != 0) {\n                 int errCode = 2191;\n                 throw new FrontendException(",
                "deletions": 1
            },
            {
                "sha": "15612e00ef79aee50024db8934f338d4ce5c53b3",
                "filename": "src/org/apache/pig/impl/logicalLayer/LOSplitOutput.java",
                "blob_url": "https://github.com/apache/pig/blob/41aa1b49b5d7a5cb96385500639d793153dc8659/src/org/apache/pig/impl/logicalLayer/LOSplitOutput.java",
                "raw_url": "https://github.com/apache/pig/raw/41aa1b49b5d7a5cb96385500639d793153dc8659/src/org/apache/pig/impl/logicalLayer/LOSplitOutput.java",
                "status": "modified",
                "changes": 3,
                "additions": 2,
                "contents_url": "https://api.github.com/repos/apache/pig/contents/src/org/apache/pig/impl/logicalLayer/LOSplitOutput.java?ref=41aa1b49b5d7a5cb96385500639d793153dc8659",
                "patch": "@@ -283,7 +283,8 @@ public boolean pruneColumns(List<Pair<Integer, Integer>> columns)\n             return false;\n         }\n \n-        for (Pair<Integer, Integer> column : columns) {\n+        for (int i=columns.size()-1;i>=0;i--) {\n+            Pair<Integer, Integer> column = columns.get(i);\n             if (column.first != 0) {\n                 int errCode = 2191;\n                 throw new FrontendException(",
                "deletions": 1
            },
            {
                "sha": "cc07991c1870b92445ffabbbd7220995265ed8ab",
                "filename": "test/org/apache/pig/test/TestPruneColumn.java",
                "blob_url": "https://github.com/apache/pig/blob/41aa1b49b5d7a5cb96385500639d793153dc8659/test/org/apache/pig/test/TestPruneColumn.java",
                "raw_url": "https://github.com/apache/pig/raw/41aa1b49b5d7a5cb96385500639d793153dc8659/test/org/apache/pig/test/TestPruneColumn.java",
                "status": "modified",
                "changes": 91,
                "additions": 90,
                "contents_url": "https://api.github.com/repos/apache/pig/contents/test/org/apache/pig/test/TestPruneColumn.java?ref=41aa1b49b5d7a5cb96385500639d793153dc8659",
                "patch": "@@ -1566,5 +1566,94 @@ public void testJoin4() throws Exception {\n         \n         assertTrue(checkLogFileMessage(new String[]{\"No column pruned for A\", \n                 \"No map keys pruned for A\", \"Columns pruned for B: $0, $1\", \"No map keys pruned for B\"}));\n-     }\n+    }\n+    \n+    @Test\n+    public void testFilter4() throws Exception {\n+        pigServer.registerQuery(\"A = load '\"+ Util.generateURI(tmpFile1.toString()) + \"' AS (a0, a1, a2:int);\");\n+        pigServer.registerQuery(\"B = filter A by a2==3;\");\n+        pigServer.registerQuery(\"C = foreach B generate $2;\");\n+        \n+        Iterator<Tuple> iter = pigServer.openIterator(\"C\");\n+        \n+        assertTrue(iter.hasNext());\n+        Tuple t = iter.next();\n+        assertTrue(t.toString().equals(\"(3)\"));\n+        \n+        assertFalse(iter.hasNext());\n+        \n+        assertTrue(checkLogFileMessage(new String[]{\"Columns pruned for A: $0, $1\", \n+                \"No map keys pruned for A\"}));\n+    }\n+    \n+    @Test\n+    public void testSplit3() throws Exception {\n+        pigServer.registerQuery(\"A = load '\"+ Util.generateURI(tmpFile1.toString()) + \"' AS (a0, a1, a2:int);\");\n+        pigServer.registerQuery(\"split A into B if a2==3, C if a2<3;\");\n+        pigServer.registerQuery(\"C = foreach B generate $2;\");\n+        \n+        Iterator<Tuple> iter = pigServer.openIterator(\"C\");\n+        \n+        assertTrue(iter.hasNext());\n+        Tuple t = iter.next();\n+        assertTrue(t.toString().equals(\"(3)\"));\n+        \n+        assertFalse(iter.hasNext());\n+        \n+        assertTrue(checkLogFileMessage(new String[]{\"Columns pruned for A: $0, $1\", \n+                \"No map keys pruned for A\"}));\n+    }\n+    \n+    @Test\n+    public void testOrderBy3() throws Exception {\n+        pigServer.registerQuery(\"A = load '\"+ Util.generateURI(tmpFile1.toString()) + \"' AS (a0, a1, a2);\");\n+        pigServer.registerQuery(\"B = order A by a2;\");\n+        pigServer.registerQuery(\"C = foreach B generate a2;\");\n+        Iterator<Tuple> iter = pigServer.openIterator(\"C\");\n+        \n+        assertTrue(iter.hasNext());\n+        Tuple t = iter.next();\n+        \n+        assertTrue(t.size()==1);\n+        assertTrue(t.toString().equals(\"(2)\"));\n+        \n+        assertTrue(iter.hasNext());\n+        t = iter.next();\n+        \n+        assertTrue(t.size()==1);\n+        assertTrue(t.toString().equals(\"(3)\"));\n+\n+        assertFalse(iter.hasNext());\n+        \n+        assertTrue(checkLogFileMessage(new String[]{\"Columns pruned for A: $0, $1\", \n+            \"No map keys pruned for A\"}));\n+    }\n+    \n+    @Test\n+    public void testCogroup9() throws Exception {\n+        pigServer.registerQuery(\"A = load '\"+ Util.generateURI(tmpFile1.toString()) + \"' AS (a0, a1, a2);\");\n+        pigServer.registerQuery(\"B = load '\"+ Util.generateURI(tmpFile1.toString()) + \"' AS (b0, b1, b2);\");\n+        pigServer.registerQuery(\"C = load '\"+ Util.generateURI(tmpFile1.toString()) + \"' AS (c0, c1, c2);\");\n+        pigServer.registerQuery(\"D = cogroup A by a2, B by b2, C by c2;\");\n+        pigServer.registerQuery(\"E = foreach D generate $1, $2;\");\n+        Iterator<Tuple> iter = pigServer.openIterator(\"E\");\n+        \n+        assertTrue(iter.hasNext());\n+        Tuple t = iter.next();\n+        \n+        assertTrue(t.size()==2);\n+        assertTrue(t.toString().equals(\"({(2,5,2)},{(2,5,2)})\"));\n+        \n+        assertTrue(iter.hasNext());\n+        t = iter.next();\n+        \n+        assertTrue(t.size()==2);\n+        assertTrue(t.toString().equals(\"({(1,2,3)},{(1,2,3)})\"));\n+\n+        assertFalse(iter.hasNext());\n+        \n+        assertTrue(checkLogFileMessage(new String[]{\"Columns pruned for C: $0, $1\", \n+            \"No map keys pruned for C\"}));\n+    }\n+\n }",
                "deletions": 1
            }
        ]
    },
    {
        "repo": "pig",
        "message": "PIG-1142: Got NullPointerException merge join with pruning\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/pig/trunk@889346 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/pig/commit/cb4cfcd478f07dba8d3c421c3fd841396f852c47",
        "parent": "https://github.com/apache/pig/commit/78822feb85ed575434a9f9bbca6d259127941329",
        "bug_id": "pig_13",
        "file": [
            {
                "sha": "3870fc31e4ad8bbdca7da355e43776f7c1cee6c6",
                "filename": "CHANGES.txt",
                "blob_url": "https://github.com/apache/pig/blob/cb4cfcd478f07dba8d3c421c3fd841396f852c47/CHANGES.txt",
                "raw_url": "https://github.com/apache/pig/raw/cb4cfcd478f07dba8d3c421c3fd841396f852c47/CHANGES.txt",
                "status": "modified",
                "changes": 2,
                "additions": 2,
                "contents_url": "https://api.github.com/repos/apache/pig/contents/CHANGES.txt?ref=cb4cfcd478f07dba8d3c421c3fd841396f852c47",
                "patch": "@@ -269,6 +269,8 @@ PIG-1133: UDFContext should be made available to LoadFunc.bindTo (daijy)\n \n PIG-1132: Column Pruner issues in dealing with unprunable loader (daijy)\n \n+PIG-1142: Got NullPointerException merge join with pruning (daijy)\n+\n Release 0.5.0\n \n INCOMPATIBLE CHANGES",
                "deletions": 0
            },
            {
                "sha": "78a59cc99b2709695f95c860a662c084078b07ab",
                "filename": "src/org/apache/pig/impl/logicalLayer/LOJoin.java",
                "blob_url": "https://github.com/apache/pig/blob/cb4cfcd478f07dba8d3c421c3fd841396f852c47/src/org/apache/pig/impl/logicalLayer/LOJoin.java",
                "raw_url": "https://github.com/apache/pig/raw/cb4cfcd478f07dba8d3c421c3fd841396f852c47/src/org/apache/pig/impl/logicalLayer/LOJoin.java",
                "status": "modified",
                "changes": 3,
                "additions": 2,
                "contents_url": "https://api.github.com/repos/apache/pig/contents/src/org/apache/pig/impl/logicalLayer/LOJoin.java?ref=cb4cfcd478f07dba8d3c421c3fd841396f852c47",
                "patch": "@@ -617,7 +617,8 @@ public boolean pruneColumns(List<Pair<Integer, Integer>> columns)\n                     errCode, PigException.BUG);\n         }\n \n-        for (Pair<Integer, Integer> column : columns) {\n+        for (int i=columns.size()-1;i>=0;i--) {\n+            Pair<Integer, Integer> column = columns.get(i);\n             if (column.first < 0 || column.first > predecessors.size()) {\n                 int errCode = 2191;\n                 throw new FrontendException(\"No input \" + column.first",
                "deletions": 1
            },
            {
                "sha": "67804a6b3b8241755df7477ce54b55a72da039e5",
                "filename": "test/org/apache/pig/test/TestPruneColumn.java",
                "blob_url": "https://github.com/apache/pig/blob/cb4cfcd478f07dba8d3c421c3fd841396f852c47/test/org/apache/pig/test/TestPruneColumn.java",
                "raw_url": "https://github.com/apache/pig/raw/cb4cfcd478f07dba8d3c421c3fd841396f852c47/test/org/apache/pig/test/TestPruneColumn.java",
                "status": "modified",
                "changes": 29,
                "additions": 28,
                "contents_url": "https://api.github.com/repos/apache/pig/contents/test/org/apache/pig/test/TestPruneColumn.java?ref=cb4cfcd478f07dba8d3c421c3fd841396f852c47",
                "patch": "@@ -1539,5 +1539,32 @@ public void testSharedSchemaObject() throws Exception {\n         \n         assertTrue(checkLogFileMessage(new String[]{\"Columns pruned for A: $0, $2\", \n                 \"No map keys pruned for A\"}));\n-     } \n+    }\n+    \n+    // See PIG-1142\n+    @Test\n+    public void testJoin4() throws Exception {\n+        pigServer.registerQuery(\"A = load '\"+ Util.generateURI(tmpFile1.toString()) + \"' AS (a0, a1, a2);\");\n+        pigServer.registerQuery(\"B = load '\"+ Util.generateURI(tmpFile1.toString()) + \"' AS (b0, b1, b2);\");\n+        pigServer.registerQuery(\"C = join A by a2, B by b2;\");\n+        pigServer.registerQuery(\"D = foreach C generate $0,  $1,  $2;\");\n+        \n+        Iterator<Tuple> iter = pigServer.openIterator(\"D\");\n+        Collection<String> results = new HashSet<String>();\n+        results.add(\"(1,2,3)\");\n+        results.add(\"(2,5,2)\");\n+        \n+        assertTrue(iter.hasNext());\n+        Tuple t = iter.next();\n+        assertTrue(results.contains(t.toString()));\n+        \n+        assertTrue(iter.hasNext());\n+        t = iter.next();\n+        assertTrue(results.contains(t.toString()));\n+        \n+        assertFalse(iter.hasNext());\n+        \n+        assertTrue(checkLogFileMessage(new String[]{\"No column pruned for A\", \n+                \"No map keys pruned for A\", \"Columns pruned for B: $0, $1\", \"No map keys pruned for B\"}));\n+     }\n }",
                "deletions": 1
            }
        ]
    },
    {
        "repo": "pig",
        "message": "PIG-4376: NullPointerException accessing a field of an invalid bag from a nested foreach\n\ngit-svn-id: https://svn.apache.org/repos/asf/pig/trunk@1652257 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/pig/commit/51d0e8fde9073d7314c3141895648ac802eba763",
        "parent": "https://github.com/apache/pig/commit/ff5405aea25a7ea4f5cff562a47fb090d12d3c3f",
        "bug_id": "pig_14",
        "file": [
            {
                "sha": "c7d78f53dba55e3256689145b01389e2d2932b5b",
                "filename": "CHANGES.txt",
                "blob_url": "https://github.com/apache/pig/blob/51d0e8fde9073d7314c3141895648ac802eba763/CHANGES.txt",
                "raw_url": "https://github.com/apache/pig/raw/51d0e8fde9073d7314c3141895648ac802eba763/CHANGES.txt",
                "status": "modified",
                "changes": 3,
                "additions": 3,
                "contents_url": "https://api.github.com/repos/apache/pig/contents/CHANGES.txt?ref=51d0e8fde9073d7314c3141895648ac802eba763",
                "patch": "@@ -42,6 +42,9 @@ PIG-4333: Split BigData tests into multiple groups (rohini)\n  \n BUG FIXES\n \n+PIG-4376: NullPointerException accessing a field of an invalid bag from a nested foreach\n+ (kspringborn via daijy)\n+\n PIG-4355: Piggybank: XPath cant handle namespace in xpath, nor can it return more than one match\n  (cavanaug via daijy)\n ",
                "deletions": 0
            },
            {
                "sha": "89ebe14f4163ccb20de3e5733e761eae8fade213",
                "filename": "src/org/apache/pig/newplan/logical/expression/DereferenceExpression.java",
                "blob_url": "https://github.com/apache/pig/blob/51d0e8fde9073d7314c3141895648ac802eba763/src/org/apache/pig/newplan/logical/expression/DereferenceExpression.java",
                "raw_url": "https://github.com/apache/pig/raw/51d0e8fde9073d7314c3141895648ac802eba763/src/org/apache/pig/newplan/logical/expression/DereferenceExpression.java",
                "status": "modified",
                "changes": 2,
                "additions": 1,
                "contents_url": "https://api.github.com/repos/apache/pig/contents/src/org/apache/pig/newplan/logical/expression/DereferenceExpression.java?ref=51d0e8fde9073d7314c3141895648ac802eba763",
                "patch": "@@ -206,7 +206,7 @@ public String toString() {\n             \t    throw new FrontendException(\"Index \"+rawColumn + \" out of range in schema:\" + schema.toString(false), 1127);\n             \t}\n                 columns.add( (Integer)rawColumn );\n-            } else {\n+            } else if (schema!=null) {\n                 int pos = schema.getFieldPosition((String)rawColumn);\n                 if( pos != -1) {\n                     columns.add( pos );",
                "deletions": 1
            },
            {
                "sha": "291a81c69ca1ee2363c43d96ef33e802187bfe2b",
                "filename": "test/org/apache/pig/parser/TestColumnAliasConversion.java",
                "blob_url": "https://github.com/apache/pig/blob/51d0e8fde9073d7314c3141895648ac802eba763/test/org/apache/pig/parser/TestColumnAliasConversion.java",
                "raw_url": "https://github.com/apache/pig/raw/51d0e8fde9073d7314c3141895648ac802eba763/test/org/apache/pig/parser/TestColumnAliasConversion.java",
                "status": "modified",
                "changes": 16,
                "additions": 16,
                "contents_url": "https://api.github.com/repos/apache/pig/contents/test/org/apache/pig/parser/TestColumnAliasConversion.java?ref=51d0e8fde9073d7314c3141895648ac802eba763",
                "patch": "@@ -159,6 +159,22 @@ public void testNegative5() throws RecognitionException, ParsingFailureException\n         Assert.fail( \"Query should fail to validate.\" );\n     }\n \n+    @Test\n+    public void testInvalidNestedProjection() throws Exception {\n+        String query = \"A = load 'x' as (field);\" +\n+                       \"B = foreach A {\" +\n+                       \"  C = LIMIT invalidName 1;\" +\n+                       \"  generate C.foo;\" +\n+                       \"};\";\n+        try {\n+            validate( query );\n+        } catch(PlanValidationException ex) {\n+            System.out.println(ex.getMessage());\n+            return;\n+        }\n+        Assert.fail( \"Query should fail to validate.\" );\n+    }\n+\n     private LogicalPlan validate(String query) throws RecognitionException, ParsingFailureException, IOException {\n         LogicalPlan plan = ParserTestingUtils.generateLogicalPlan( query );\n         ColumnAliasConversionVisitor visitor = new ColumnAliasConversionVisitor( plan );",
                "deletions": 0
            }
        ]
    },
    {
        "repo": "pig",
        "message": "PIG-4967: NPE in PigJobControl.run() when job status is null\n\ngit-svn-id: https://svn.apache.org/repos/asf/pig/trunk@1758708 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/pig/commit/4057a6ed9ce0c3782f1f6cce33ab2a91dde8122f",
        "parent": "https://github.com/apache/pig/commit/8715957748e20e18ccec6d9c6a345219ebf4e3db",
        "bug_id": "pig_15",
        "file": [
            {
                "sha": "9c75f6d49ae35b3b8ed8cd8559a3bce55d210f76",
                "filename": "CHANGES.txt",
                "blob_url": "https://github.com/apache/pig/blob/4057a6ed9ce0c3782f1f6cce33ab2a91dde8122f/CHANGES.txt",
                "raw_url": "https://github.com/apache/pig/raw/4057a6ed9ce0c3782f1f6cce33ab2a91dde8122f/CHANGES.txt",
                "status": "modified",
                "changes": 2,
                "additions": 2,
                "contents_url": "https://api.github.com/repos/apache/pig/contents/CHANGES.txt?ref=4057a6ed9ce0c3782f1f6cce33ab2a91dde8122f",
                "patch": "@@ -40,6 +40,8 @@ OPTIMIZATIONS\n \u00a0\n BUG FIXES\n \n+PIG-4967: NPE in PigJobControl.run() when job status is null (water via daijy)\n+\n PIG-4972: StreamingIO_1 fail on perl 5.22 (daijy)\n \n PIG-4933: TestDataBagAccess.testBagConstantFlatten1/TestLogicalPlanBuilder.testQuery90 broken after PIG-2315 (knoguchi)",
                "deletions": 0
            },
            {
                "sha": "6439611ae1b983266a9832bd54e653862bdc9564",
                "filename": "shims/src/hadoop23/org/apache/pig/backend/hadoop23/PigJobControl.java",
                "blob_url": "https://github.com/apache/pig/blob/4057a6ed9ce0c3782f1f6cce33ab2a91dde8122f/shims/src/hadoop23/org/apache/pig/backend/hadoop23/PigJobControl.java",
                "raw_url": "https://github.com/apache/pig/raw/4057a6ed9ce0c3782f1f6cce33ab2a91dde8122f/shims/src/hadoop23/org/apache/pig/backend/hadoop23/PigJobControl.java",
                "status": "modified",
                "changes": 13,
                "additions": 12,
                "contents_url": "https://api.github.com/repos/apache/pig/contents/shims/src/hadoop23/org/apache/pig/backend/hadoop23/PigJobControl.java?ref=4057a6ed9ce0c3782f1f6cce33ab2a91dde8122f",
                "patch": "@@ -179,7 +179,18 @@ public void run() {\n           }\n           while(it.hasNext()) {\n             ControlledJob j = it.next();\n-            log.debug(\"Checking state of job \"+j);\n+\n+            // TODO: Need to re-visit the following try...catch\n+            // when Pig picks up a Hadoop release with MAPREDUCE-6762 applied\n+            // as its dependency.\n+            try {\n+              log.debug(\"Checking state of job \" + j);\n+            } catch(NullPointerException npe) {\n+              log.warn(\"Failed to get job name \" +\n+                \"when checking state of job. \" +\n+                \"Check if job status is null.\", npe);\n+            }\n+\n             switch(checkState(j)) {\n             case SUCCESS:\n               getJobs(successfulJobs).add(j);",
                "deletions": 1
            }
        ]
    },
    {
        "repo": "pig",
        "message": "PIG-3940: NullPointerException writing .pig_header for field with null name in JsonMetadata.java (mrflip via cheolsoo)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/pig/trunk@1596063 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/pig/commit/e81028183b680d7feabb18e9950299ff7fefe03b",
        "parent": "https://github.com/apache/pig/commit/b8a5c4d1c88fd55e47d7f95c5d8b42c9510bea7e",
        "bug_id": "pig_16",
        "file": [
            {
                "sha": "944ccc39ffd87b293f96fd196e668a0601b311cc",
                "filename": "CHANGES.txt",
                "blob_url": "https://github.com/apache/pig/blob/e81028183b680d7feabb18e9950299ff7fefe03b/CHANGES.txt",
                "raw_url": "https://github.com/apache/pig/raw/e81028183b680d7feabb18e9950299ff7fefe03b/CHANGES.txt",
                "status": "modified",
                "changes": 2,
                "additions": 2,
                "contents_url": "https://api.github.com/repos/apache/pig/contents/CHANGES.txt?ref=e81028183b680d7feabb18e9950299ff7fefe03b",
                "patch": "@@ -133,6 +133,8 @@ PIG-3882: Multiquery off mode execution is not done in batch and very inefficien\n  \n BUG FIXES\n \n+PIG-3940: NullPointerException writing .pig_header for field with null name in JsonMetadata.java (mrflip via cheolsoo)\n+\n PIG-3944: PigNullableWritable toString method throws NPE on null value (mauzhang via cheolsoo)\n \n PIG-3936: DBStorage fails on storing nulls for non varchar columns (jeremykarn via cheolsoo) ",
                "deletions": 0
            },
            {
                "sha": "08a6f5dfdefa1147d27a250b75e064237e9284c8",
                "filename": "src/org/apache/pig/builtin/JsonMetadata.java",
                "blob_url": "https://github.com/apache/pig/blob/e81028183b680d7feabb18e9950299ff7fefe03b/src/org/apache/pig/builtin/JsonMetadata.java",
                "raw_url": "https://github.com/apache/pig/raw/e81028183b680d7feabb18e9950299ff7fefe03b/src/org/apache/pig/builtin/JsonMetadata.java",
                "status": "modified",
                "changes": 9,
                "additions": 4,
                "contents_url": "https://api.github.com/repos/apache/pig/contents/src/org/apache/pig/builtin/JsonMetadata.java?ref=e81028183b680d7feabb18e9950299ff7fefe03b",
                "patch": "@@ -122,9 +122,7 @@ public JsonMetadata(String schemaFileName, String headerFileName, String statFil\n \n                     if (descriptor instanceof HFile) {\n                         Path descriptorPath = ((HPath) descriptor).getPath();\n-                        String fileName = descriptorPath.getName();\n                         Path parent = descriptorPath.getParent();\n-                        String parentName = parent.toString();\n                         container = new HDirectory((HDataStorage)storage,parent);\n                     } else { // descriptor instanceof HDirectory\n                         container = (HDirectory)descriptor;\n@@ -314,10 +312,11 @@ public void storeSchema(ResourceSchema schema, String location, Job job) throws\n                 OutputStream os = headerFilePath.create();\n                 try {\n                     String[] names = schema.fieldNames();\n-\n+                    String fn;\n                     for (int i=0; i < names.length; i++) {\n-                        os.write(names[i].getBytes(\"UTF-8\"));\n-                        if (i <names.length-1) {\n+                        fn = ( (names[i] == null) ? (\"$\"+i) : names[i] );\n+                        os.write(fn.getBytes(\"UTF-8\"));\n+                        if (i < names.length-1) {\n                             os.write(fieldDel);\n                         } else {\n                             os.write(recordDel);",
                "deletions": 5
            },
            {
                "sha": "f958a5a0742cf15b62b6a9b96bf24741b82e12ca",
                "filename": "test/org/apache/pig/test/TestPigStorage.java",
                "blob_url": "https://github.com/apache/pig/blob/e81028183b680d7feabb18e9950299ff7fefe03b/test/org/apache/pig/test/TestPigStorage.java",
                "raw_url": "https://github.com/apache/pig/raw/e81028183b680d7feabb18e9950299ff7fefe03b/test/org/apache/pig/test/TestPigStorage.java",
                "status": "modified",
                "changes": 22,
                "additions": 19,
                "contents_url": "https://api.github.com/repos/apache/pig/contents/test/org/apache/pig/test/TestPigStorage.java?ref=e81028183b680d7feabb18e9950299ff7fefe03b",
                "patch": "@@ -438,9 +438,7 @@ public void testByteArrayConversion() throws IOException {\n         Iterator<Tuple> sessions = pig.openIterator(\"Sessions\");\n         while (sessions.hasNext()) {\n             System.out.println(sessions.next());\n-}\n-\n-\n+        }\n     }\n \n     // See PIG-1993\n@@ -471,6 +469,24 @@ public void testColumnPrune() throws IOException {\n         Assert.assertFalse(sessions.hasNext());\n     }\n \n+    @Test\n+    public void testPigStorageSchemaHeader() throws Exception {\n+        pigContext.connect();\n+        String query = \"a = LOAD '\" + datadir + \"originput' using PigStorage(',') \" +\n+                \"as (foo:chararray, bar:int);\";\n+        pig.registerQuery(query);\n+        pig.registerQuery(\"a2 = FOREACH a GENERATE *, 1;\"); // adds a field with a null schema name\n+        pig.registerQuery(\"STORE a2 into '\" + datadir + \"nout' using PigStorage('\\\\t', '-schema');\");\n+\n+        String outPath = FileLocalizer.fullPath(datadir + \"nout/.pig_header\",\n+                pig.getPigContext());\n+        Assert.assertTrue(FileLocalizer.fileExists(outPath,\n+                pig.getPigContext()));\n+\n+        String[] header = Util.readOutput(pig.getPigContext(), outPath);\n+        Assert.assertArrayEquals(\"Headers are not the same.\", new String[] {\"foo\\tbar\\t$2\"}, header);\n+    }\n+\n     @Test\n     public void testPigStorageSchemaHeaderDelimiter() throws Exception {\n         pigContext.connect();",
                "deletions": 3
            }
        ]
    },
    {
        "repo": "pig",
        "message": "PIG-3469: Skewed join can cause unrecoverable NullPointerException when one of its inputs is missing (Jarek Jarcec Cecho  via xuefuz)\n\ngit-svn-id: https://svn.apache.org/repos/asf/pig/trunk@1529011 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/pig/commit/fedfe64481d1c7b3691fb5913e055e9077db8b94",
        "parent": "https://github.com/apache/pig/commit/dca4c10a1dbbe459d80e79ffd048826fe3de2638",
        "bug_id": "pig_17",
        "file": [
            {
                "sha": "7c18229e1c63510992075a143985983445fbaad9",
                "filename": "CHANGES.txt",
                "blob_url": "https://github.com/apache/pig/blob/fedfe64481d1c7b3691fb5913e055e9077db8b94/CHANGES.txt",
                "raw_url": "https://github.com/apache/pig/raw/fedfe64481d1c7b3691fb5913e055e9077db8b94/CHANGES.txt",
                "status": "modified",
                "changes": 1,
                "additions": 1,
                "contents_url": "https://api.github.com/repos/apache/pig/contents/CHANGES.txt?ref=fedfe64481d1c7b3691fb5913e055e9077db8b94",
                "patch": "@@ -32,6 +32,7 @@ OPTIMIZATIONS\n  \n BUG FIXES\n \n+PIG-3469: Skewed join can cause unrecoverable NullPointerException when one of its inputs is missing (Jarek Jarcec Cecho  via xuefuz)\n \n Release 0.12.0 (unreleased changes)\n ",
                "deletions": 0
            },
            {
                "sha": "80777768dc81b42909b3e64203e898d3a129bc72",
                "filename": "src/org/apache/pig/backend/hadoop/executionengine/mapReduceLayer/JobControlCompiler.java",
                "blob_url": "https://github.com/apache/pig/blob/fedfe64481d1c7b3691fb5913e055e9077db8b94/src/org/apache/pig/backend/hadoop/executionengine/mapReduceLayer/JobControlCompiler.java",
                "raw_url": "https://github.com/apache/pig/raw/fedfe64481d1c7b3691fb5913e055e9077db8b94/src/org/apache/pig/backend/hadoop/executionengine/mapReduceLayer/JobControlCompiler.java",
                "status": "modified",
                "changes": 2,
                "additions": 1,
                "contents_url": "https://api.github.com/repos/apache/pig/contents/src/org/apache/pig/backend/hadoop/executionengine/mapReduceLayer/JobControlCompiler.java?ref=fedfe64481d1c7b3691fb5913e055e9077db8b94",
                "patch": "@@ -864,7 +864,7 @@ public void adjustNumReducers(MROperPlan plan, MapReduceOper mro,\n             org.apache.hadoop.mapreduce.Job nwJob) throws IOException {\n         int jobParallelism = calculateRuntimeReducers(mro, nwJob);\n \n-        if (mro.isSampler()) {\n+        if (mro.isSampler() && plan.getSuccessors(mro) != null) {\n             // We need to calculate the final number of reducers of the next job (order-by or skew-join)\n             // to generate the quantfile.\n             MapReduceOper nextMro = plan.getSuccessors(mro).get(0);",
                "deletions": 1
            },
            {
                "sha": "483fa48d475ff9c12c342c9a3d0ca4863c616cf2",
                "filename": "test/org/apache/pig/test/TestPigServer.java",
                "blob_url": "https://github.com/apache/pig/blob/fedfe64481d1c7b3691fb5913e055e9077db8b94/test/org/apache/pig/test/TestPigServer.java",
                "raw_url": "https://github.com/apache/pig/raw/fedfe64481d1c7b3691fb5913e055e9077db8b94/test/org/apache/pig/test/TestPigServer.java",
                "status": "modified",
                "changes": 19,
                "additions": 19,
                "contents_url": "https://api.github.com/repos/apache/pig/contents/test/org/apache/pig/test/TestPigServer.java?ref=fedfe64481d1c7b3691fb5913e055e9077db8b94",
                "patch": "@@ -601,6 +601,25 @@ public void testRegisterRemoteScript() throws Throwable {\n         assertFalse(iter.hasNext());\n     }\n \n+    // PIG-3469\n+    @Test\n+    public void testNonExistingSecondDirectoryInSkewJoin() throws Exception {\n+        String script =\n+          \"exists = LOAD 'test/org/apache/pig/test/data/InputFiles/jsTst1.txt' AS (x:chararray, a:long);\" +\n+          \"missing = LOAD '/non/existing/directory' AS (a:long);\" +\n+          \"missing = FOREACH ( GROUP missing BY a ) GENERATE $0 AS a, COUNT_STAR($1);\" +\n+          \"joined = JOIN exists BY a, missing BY a USING 'skewed';\" +\n+          \"STORE joined INTO '/tmp/test_out.tsv';\";\n+\n+        PigServer pig = new PigServer(ExecType.LOCAL);\n+        // Execution of the script should fail, but without throwing any exceptions (such as NPE)\n+        try {\n+            pig.registerScript(new ByteArrayInputStream(script.getBytes(\"UTF-8\")));\n+        } catch(Exception ex) {\n+            fail(\"Unexpected exception: \" + ex);\n+        }\n+    }\n+\n     @Test\n     public void testParamSubstitution() throws Exception{\n         // using params map",
                "deletions": 0
            }
        ]
    },
    {
        "repo": "pig",
        "message": "PIG-92: Fix NullPointerException in PIgContext due to uninitialized conf reference.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/pig/trunk@620878 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/pig/commit/4689a16a4bed09533a7720383e3b13aebf3aeab4",
        "parent": "https://github.com/apache/pig/commit/debcf490b7c75443e15ee04c0fe2fc81335f4595",
        "bug_id": "pig_18",
        "file": [
            {
                "sha": "187234fff0304f4d12aa0031effe775cb8423ac6",
                "filename": "CHANGES.txt",
                "blob_url": "https://github.com/apache/pig/blob/4689a16a4bed09533a7720383e3b13aebf3aeab4/CHANGES.txt",
                "raw_url": "https://github.com/apache/pig/raw/4689a16a4bed09533a7720383e3b13aebf3aeab4/CHANGES.txt",
                "status": "modified",
                "changes": 3,
                "additions": 3,
                "contents_url": "https://api.github.com/repos/apache/pig/contents/CHANGES.txt?ref=4689a16a4bed09533a7720383e3b13aebf3aeab4",
                "patch": "@@ -94,3 +94,6 @@ Trunk (unreleased changes)\n \n \tPIG-97: Turn off combiner in the case of Cogroup, as it doesn't work when\n \tmore than one bag is involved (gates).\n+\n+\tPIG-92: Fix NullPointerException in PIgContext due to uninitialized conf\n+\treference. (francisoud via gates)",
                "deletions": 0
            },
            {
                "sha": "040b355e2e3413db3b1bb6722e98647ab3b40546",
                "filename": "src/org/apache/pig/impl/PigContext.java",
                "blob_url": "https://github.com/apache/pig/blob/4689a16a4bed09533a7720383e3b13aebf3aeab4/src/org/apache/pig/impl/PigContext.java",
                "raw_url": "https://github.com/apache/pig/raw/4689a16a4bed09533a7720383e3b13aebf3aeab4/src/org/apache/pig/impl/PigContext.java",
                "status": "modified",
                "changes": 4,
                "additions": 1,
                "contents_url": "https://api.github.com/repos/apache/pig/contents/src/org/apache/pig/impl/PigContext.java?ref=4689a16a4bed09533a7720383e3b13aebf3aeab4",
                "patch": "@@ -67,7 +67,7 @@\n     private ExecType execType;;    \n \n     //  configuration for connecting to hadoop\n-    transient private Properties conf = null;        \n+    transient private Properties conf = new Properties();\n     \n     //  extra jar files that are needed to run a job\n     transient public List<URL> extraJars = new LinkedList<URL>();              \n@@ -164,8 +164,6 @@ public void connect() throws ExecException {\n             switch (execType) {\n             case LOCAL:\n             {\n-                conf = new Properties();\n-\n                 lfs = new HDataStorage(URI.create(\"file:///\"),\n                                        new Configuration());\n                 ",
                "deletions": 3
            }
        ]
    },
    {
        "repo": "pig",
        "message": "PIG-4832: Fix TestPrumeColumn NPE failure\n\ngit-svn-id: https://svn.apache.org/repos/asf/pig/trunk@1736096 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/pig/commit/b50a67b24062be13e57d61591a0a2f78973425d8",
        "parent": "https://github.com/apache/pig/commit/9a704c453d6cee19d57f7b4fd4b255ec0afbd8b8",
        "bug_id": "pig_19",
        "file": [
            {
                "sha": "433cf0dc5055c9017e32d24516f928c1fbec59e1",
                "filename": "CHANGES.txt",
                "blob_url": "https://github.com/apache/pig/blob/b50a67b24062be13e57d61591a0a2f78973425d8/CHANGES.txt",
                "raw_url": "https://github.com/apache/pig/raw/b50a67b24062be13e57d61591a0a2f78973425d8/CHANGES.txt",
                "status": "modified",
                "changes": 2,
                "additions": 2,
                "contents_url": "https://api.github.com/repos/apache/pig/contents/CHANGES.txt?ref=b50a67b24062be13e57d61591a0a2f78973425d8",
                "patch": "@@ -99,6 +99,8 @@ PIG-4639: Add better parser for Apache HTTPD access log (nielsbasjes via daijy)\n \n BUG FIXES\n \n+PIG-4832: Fix TestPrumeColumn NPE failure (kellyzly via daijy)\n+\n PIG-4833 TestBuiltin.testURIWithCurlyBrace in TEZ failing after PIG-4819 (knoguchi)\n \n PIG-4819: RANDOM() udf can lead to missing or redundant records (knoguchi)",
                "deletions": 0
            },
            {
                "sha": "e0e0bc2d657c5cf6ac63175ef2f2351f97c2c090",
                "filename": "src/org/apache/pig/backend/hadoop/executionengine/physicalLayer/relationalOperators/POStore.java",
                "blob_url": "https://github.com/apache/pig/blob/b50a67b24062be13e57d61591a0a2f78973425d8/src/org/apache/pig/backend/hadoop/executionengine/physicalLayer/relationalOperators/POStore.java",
                "raw_url": "https://github.com/apache/pig/raw/b50a67b24062be13e57d61591a0a2f78973425d8/src/org/apache/pig/backend/hadoop/executionengine/physicalLayer/relationalOperators/POStore.java",
                "status": "modified",
                "changes": 6,
                "additions": 4,
                "contents_url": "https://api.github.com/repos/apache/pig/contents/src/org/apache/pig/backend/hadoop/executionengine/physicalLayer/relationalOperators/POStore.java?ref=b50a67b24062be13e57d61591a0a2f78973425d8",
                "patch": "@@ -247,9 +247,11 @@ public Schema getSchema() {\n \n \n     public StoreFuncInterface getStoreFunc() {\n-        if(storer == null){\n-            storer = (StoreFuncInterface)PigContext.instantiateFuncFromSpec(sFile.getFuncSpec());\n+        if (storer == null) {\n+            storer = (StoreFuncInterface) PigContext.instantiateFuncFromSpec(sFile.getFuncSpec());\n             storer.setStoreFuncUDFContextSignature(signature);\n+        }\n+        if (sDecorator == null) {\n             // Init the Decorator we use for writing Tuples\n             setStoreFuncDecorator(new StoreFuncDecorator(storer, signature));\n         }",
                "deletions": 2
            }
        ]
    },
    {
        "repo": "pig",
        "message": "PIG-5064: NPE in TestScriptUDF#testPythonBuiltinModuleImport1 when JAVA_HOME is not set\n\ngit-svn-id: https://svn.apache.org/repos/asf/pig/trunk@1770733 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/pig/commit/c38ea926a48e1f5d5a9635a03e619dbaca957317",
        "parent": "https://github.com/apache/pig/commit/73ca9f6e972cba9efcb85b4240844593643858ea",
        "bug_id": "pig_20",
        "file": [
            {
                "sha": "196539f5a46e3d304fcee18aa5994ff7c988885d",
                "filename": "CHANGES.txt",
                "blob_url": "https://github.com/apache/pig/blob/c38ea926a48e1f5d5a9635a03e619dbaca957317/CHANGES.txt",
                "raw_url": "https://github.com/apache/pig/raw/c38ea926a48e1f5d5a9635a03e619dbaca957317/CHANGES.txt",
                "status": "modified",
                "changes": 2,
                "additions": 2,
                "contents_url": "https://api.github.com/repos/apache/pig/contents/CHANGES.txt?ref=c38ea926a48e1f5d5a9635a03e619dbaca957317",
                "patch": "@@ -155,6 +155,8 @@ OPTIMIZATIONS\n \n BUG FIXES\n \n+PIG-5064: NPE in TestScriptUDF#testPythonBuiltinModuleImport1 when JAVA_HOME is not set (water via daijy)\n+\n PIG-5048: HiveUDTF fail if it is the first expression in projection (nkollar via daijy)\n \n PIG-4951: Rename PIG_ATS_ENABLED constant (szita via daijy)",
                "deletions": 0
            },
            {
                "sha": "8dc5818d3f574a77588e387a6abb87ea63a869cd",
                "filename": "test/org/apache/pig/test/TestScriptUDF.java",
                "blob_url": "https://github.com/apache/pig/blob/c38ea926a48e1f5d5a9635a03e619dbaca957317/test/org/apache/pig/test/TestScriptUDF.java",
                "raw_url": "https://github.com/apache/pig/raw/c38ea926a48e1f5d5a9635a03e619dbaca957317/test/org/apache/pig/test/TestScriptUDF.java",
                "status": "modified",
                "changes": 6,
                "additions": 5,
                "contents_url": "https://api.github.com/repos/apache/pig/contents/test/org/apache/pig/test/TestScriptUDF.java?ref=c38ea926a48e1f5d5a9635a03e619dbaca957317",
                "patch": "@@ -247,7 +247,11 @@ public void testPythonBuiltinModuleImport1() throws Exception {\n         Assert.assertTrue(t.get(0).toString().equals(System.getenv(input[0])));\n         Assert.assertTrue(iter.hasNext());\n         t = iter.next();\n-        Assert.assertTrue(t.get(0).toString().equals(System.getenv(input[1])));\n+        if (System.getenv(input[1]) != null) {  // JAVA_HOME is set, t.get(0) is not null\n+            Assert.assertTrue(t.get(0).toString().equals(System.getenv(input[1])));\n+        } else {  // JAVA_HOME is not set, t.get(0) is null\n+            Assert.assertNull(t.get(0));\n+        }\n         Assert.assertFalse(iter.hasNext());\n     }\n ",
                "deletions": 1
            }
        ]
    },
    {
        "repo": "pig",
        "message": "PIG-4722: [Pig on Tez] NPE while running Combiner (rohini)\n\ngit-svn-id: https://svn.apache.org/repos/asf/pig/trunk@1714256 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/pig/commit/9f7129c5111ad6750f4ddc36042e0c8202bc256b",
        "parent": "https://github.com/apache/pig/commit/a7ecd08f2ba4354282dbff3c40a01e2a4c816040",
        "bug_id": "pig_21",
        "file": [
            {
                "sha": "54b5ead7dfe8408efc26e35e3bdb67841df2d19d",
                "filename": "CHANGES.txt",
                "blob_url": "https://github.com/apache/pig/blob/9f7129c5111ad6750f4ddc36042e0c8202bc256b/CHANGES.txt",
                "raw_url": "https://github.com/apache/pig/raw/9f7129c5111ad6750f4ddc36042e0c8202bc256b/CHANGES.txt",
                "status": "modified",
                "changes": 2,
                "additions": 2,
                "contents_url": "https://api.github.com/repos/apache/pig/contents/CHANGES.txt?ref=9f7129c5111ad6750f4ddc36042e0c8202bc256b",
                "patch": "@@ -69,6 +69,8 @@ PIG-4639: Add better parser for Apache HTTPD access log (nielsbasjes via daijy)\n \n BUG FIXES\n \n+PIG-4722: [Pig on Tez] NPE while running Combiner (rohini)\n+\n PIG-4730: [Pig on Tez] Total parallelism estimation does not account load parallelism (rohini)\n \n PIG-4689: CSV Writes incorrect header if two CSV files are created in one script (nielsbasjes via daijy)",
                "deletions": 0
            },
            {
                "sha": "164b75fc8dfc2aa00b8f2e85f200183c5ad15e81",
                "filename": "src/org/apache/pig/backend/hadoop/executionengine/physicalLayer/PhysicalOperator.java",
                "blob_url": "https://github.com/apache/pig/blob/9f7129c5111ad6750f4ddc36042e0c8202bc256b/src/org/apache/pig/backend/hadoop/executionengine/physicalLayer/PhysicalOperator.java",
                "raw_url": "https://github.com/apache/pig/raw/9f7129c5111ad6750f4ddc36042e0c8202bc256b/src/org/apache/pig/backend/hadoop/executionengine/physicalLayer/PhysicalOperator.java",
                "status": "modified",
                "changes": 5,
                "additions": 3,
                "contents_url": "https://api.github.com/repos/apache/pig/contents/src/org/apache/pig/backend/hadoop/executionengine/physicalLayer/PhysicalOperator.java?ref=9f7129c5111ad6750f4ddc36042e0c8202bc256b",
                "patch": "@@ -299,8 +299,9 @@ public Result processInput() throws ExecException {\n             }\n \n             // Should be removed once the model is clear\n-            if (getReporter() != null) {\n-                getReporter().progress();\n+            PigProgressable progRep = getReporter();\n+            if (progRep != null) {\n+                progRep.progress();\n             }\n \n             if (!isInputAttached()) {",
                "deletions": 2
            }
        ]
    },
    {
        "repo": "pig",
        "message": "PIG-4635: NPE while running pig script in tez mode\n\ngit-svn-id: https://svn.apache.org/repos/asf/pig/trunk@1705335 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/pig/commit/c4dac937bf9aa90f34a6d3cebcf9e391df667f6b",
        "parent": "https://github.com/apache/pig/commit/55a0bbbe7b087fbda8fe7327a0510c2a73285685",
        "bug_id": "pig_22",
        "file": [
            {
                "sha": "1085ffaa11a5d01c36c7e90f3ee0ae8032ff6b2a",
                "filename": "CHANGES.txt",
                "blob_url": "https://github.com/apache/pig/blob/c4dac937bf9aa90f34a6d3cebcf9e391df667f6b/CHANGES.txt",
                "raw_url": "https://github.com/apache/pig/raw/c4dac937bf9aa90f34a6d3cebcf9e391df667f6b/CHANGES.txt",
                "status": "modified",
                "changes": 2,
                "additions": 2,
                "contents_url": "https://api.github.com/repos/apache/pig/contents/CHANGES.txt?ref=c4dac937bf9aa90f34a6d3cebcf9e391df667f6b",
                "patch": "@@ -47,6 +47,8 @@ PIG-4639: Add better parser for Apache HTTPD access log (nielsbasjes via daijy)\n \n BUG FIXES\n \n+PIG-4635: NPE while running pig script in tez mode (daijy)\n+\n PIG-4683: Nested order is broken after PIG-3591 in some cases (daijy)\n \n PIG-4679: Performance degradation due to InputSizeReducerEstimator since PIG-3754 (daijy)",
                "deletions": 0
            },
            {
                "sha": "52764ab09991369c716aea647a9526ef05c9e73b",
                "filename": "src/org/apache/pig/backend/hadoop/executionengine/tez/plan/TezOperator.java",
                "blob_url": "https://github.com/apache/pig/blob/c4dac937bf9aa90f34a6d3cebcf9e391df667f6b/src/org/apache/pig/backend/hadoop/executionengine/tez/plan/TezOperator.java",
                "raw_url": "https://github.com/apache/pig/raw/c4dac937bf9aa90f34a6d3cebcf9e391df667f6b/src/org/apache/pig/backend/hadoop/executionengine/tez/plan/TezOperator.java",
                "status": "modified",
                "changes": 4,
                "additions": 3,
                "contents_url": "https://api.github.com/repos/apache/pig/contents/src/org/apache/pig/backend/hadoop/executionengine/tez/plan/TezOperator.java?ref=c4dac937bf9aa90f34a6d3cebcf9e391df667f6b",
                "patch": "@@ -189,6 +189,7 @@\n     private transient VertexGroupInfo vertexGroupInfo;\n     // Mapping of OperatorKey of POStore OperatorKey to vertexGroup TezOperator\n     private Map<OperatorKey, OperatorKey> vertexGroupStores = null;\n+    private boolean isVertexGroup = false;\n \n     public static class LoaderInfo implements Serializable {\n         private List<POLoad> loads = null;\n@@ -487,7 +488,7 @@ public void setVertexGroupMembers(List<OperatorKey> vertexGroupMembers) {\n     // Union is the only operator that uses alias vertex (VertexGroup) now. But\n     // more operators could be added to the list in the future.\n     public boolean isVertexGroup() {\n-        return vertexGroupInfo != null;\n+        return isVertexGroup;\n     }\n \n     public VertexGroupInfo getVertexGroupInfo() {\n@@ -496,6 +497,7 @@ public VertexGroupInfo getVertexGroupInfo() {\n \n     public void setVertexGroupInfo(VertexGroupInfo vertexGroup) {\n         this.vertexGroupInfo = vertexGroup;\n+        this.isVertexGroup = true;\n     }\n \n     public void addVertexGroupStore(OperatorKey storeKey, OperatorKey vertexGroupKey) {",
                "deletions": 1
            },
            {
                "sha": "ce5d98176d0546575aa1ef0bca323f9673210091",
                "filename": "src/org/apache/pig/backend/hadoop/executionengine/tez/plan/TezPrinter.java",
                "blob_url": "https://github.com/apache/pig/blob/c4dac937bf9aa90f34a6d3cebcf9e391df667f6b/src/org/apache/pig/backend/hadoop/executionengine/tez/plan/TezPrinter.java",
                "raw_url": "https://github.com/apache/pig/raw/c4dac937bf9aa90f34a6d3cebcf9e391df667f6b/src/org/apache/pig/backend/hadoop/executionengine/tez/plan/TezPrinter.java",
                "status": "modified",
                "changes": 10,
                "additions": 7,
                "contents_url": "https://api.github.com/repos/apache/pig/contents/src/org/apache/pig/backend/hadoop/executionengine/tez/plan/TezPrinter.java?ref=c4dac937bf9aa90f34a6d3cebcf9e391df667f6b",
                "patch": "@@ -55,9 +55,13 @@ public void setVerbose(boolean verbose) {\n     public void visitTezOp(TezOperator tezOper) throws VisitorException {\n         if (tezOper.isVertexGroup()) {\n             VertexGroupInfo info = tezOper.getVertexGroupInfo();\n-            mStream.println(\"Tez vertex group \"\n-                    + tezOper.getOperatorKey().toString() + \"\\t<-\\t \"\n-                    + info.getInputs() + \"\\t->\\t \" + info.getOutput());\n+            mStream.print(\"Tez vertex group \"\n+                    + tezOper.getOperatorKey().toString());\n+            if (info!=null) {\n+                mStream.println(\"\\t<-\\t \" + info.getInputs() + \"\\t->\\t \" + info.getOutput());\n+            } else {\n+                mStream.println();\n+            }\n             mStream.println(\"# No plan on vertex group\");\n         } else {\n             mStream.println(\"Tez vertex \" + tezOper.getOperatorKey().toString());",
                "deletions": 3
            },
            {
                "sha": "cf8d19c55fa2de818f3776675c4f0b9951336872",
                "filename": "test/org/apache/pig/tez/TestTezGraceParallelism.java",
                "blob_url": "https://github.com/apache/pig/blob/c4dac937bf9aa90f34a6d3cebcf9e391df667f6b/test/org/apache/pig/tez/TestTezGraceParallelism.java",
                "raw_url": "https://github.com/apache/pig/raw/c4dac937bf9aa90f34a6d3cebcf9e391df667f6b/test/org/apache/pig/tez/TestTezGraceParallelism.java",
                "status": "modified",
                "changes": 34,
                "additions": 34,
                "contents_url": "https://api.github.com/repos/apache/pig/contents/test/org/apache/pig/tez/TestTezGraceParallelism.java?ref=c4dac937bf9aa90f34a6d3cebcf9e391df667f6b",
                "patch": "@@ -26,6 +26,7 @@\n import java.io.IOException;\n import java.io.PrintWriter;\n import java.io.StringWriter;\n+import java.util.Arrays;\n import java.util.Iterator;\n import java.util.List;\n import java.util.Random;\n@@ -248,4 +249,37 @@ public void testJoinWithDifferentDepth2() throws IOException{\n             Util.removeLogAppender(PigGraceShuffleVertexManager.class, \"testJoinWithDifferentDepth2\");\n         }\n     }\n+\n+    @Test\n+    // See PIG-4635 for a NPE in TezOperDependencyParallelismEstimator\n+    public void testJoinWithUnion() throws IOException{\n+        NodeIdGenerator.reset();\n+        PigServer.resetScope();\n+        StringWriter writer = new StringWriter();\n+        Util.createLogAppender(\"testJoinWithUnion\", writer, PigGraceShuffleVertexManager.class);\n+        try {\n+            // DAG: 29 -> 32 -> 41 \\\n+            //                       -> 70 (vertex group) -> 61\n+            //      42 -> 45 -> 54 /\n+            pigServer.registerQuery(\"A = load '\" + INPUT_DIR + \"/\" + INPUT_FILE2 + \"' as (name:chararray, gender:chararray);\");\n+            pigServer.registerQuery(\"B = distinct A;\");\n+            pigServer.registerQuery(\"C = group B by name;\");\n+            pigServer.registerQuery(\"D = load '\" + INPUT_DIR + \"/\" + INPUT_FILE2 + \"' as (name:chararray, gender:chararray);\");\n+            pigServer.registerQuery(\"E = distinct D;\");\n+            pigServer.registerQuery(\"F = group E by name;\");\n+            pigServer.registerQuery(\"G = union C, F;\");\n+            pigServer.registerQuery(\"H = distinct G;\");\n+            Iterator<Tuple> iter = pigServer.openIterator(\"H\");\n+            int count = 0;\n+            while (iter.hasNext()) {\n+                iter.next();\n+                count++;\n+            }\n+            assertEquals(count, 20);\n+            assertTrue(writer.toString().contains(\"time to set parallelism for scope-41\"));\n+            assertTrue(writer.toString().contains(\"time to set parallelism for scope-54\"));\n+        } finally {\n+            Util.removeLogAppender(PigGraceShuffleVertexManager.class, \"testJoinWithUnion\");\n+        }\n+    }\n }",
                "deletions": 0
            }
        ]
    },
    {
        "repo": "pig",
        "message": "PIG-4497: [Pig on Tez] NPE for null scalar (rohini)\n\ngit-svn-id: https://svn.apache.org/repos/asf/pig/trunk@1671155 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/pig/commit/e0994bbd8871f9ec0746744b419de8a12420b5b4",
        "parent": "https://github.com/apache/pig/commit/721eaae08a868ea49b6f9e185d854f2552fb9358",
        "bug_id": "pig_23",
        "file": [
            {
                "sha": "47c0d77b1714a463fb55a5aaf9776bd59d31eb54",
                "filename": "CHANGES.txt",
                "blob_url": "https://github.com/apache/pig/blob/e0994bbd8871f9ec0746744b419de8a12420b5b4/CHANGES.txt",
                "raw_url": "https://github.com/apache/pig/raw/e0994bbd8871f9ec0746744b419de8a12420b5b4/CHANGES.txt",
                "status": "modified",
                "changes": 2,
                "additions": 2,
                "contents_url": "https://api.github.com/repos/apache/pig/contents/CHANGES.txt?ref=e0994bbd8871f9ec0746744b419de8a12420b5b4",
                "patch": "@@ -58,6 +58,8 @@ PIG-4333: Split BigData tests into multiple groups (rohini)\n  \n BUG FIXES\n \n+PIG-4497: [Pig on Tez] NPE for null scalar (rohini)\n+\n PIG-4493: Pig on Tez gives wrong results if Union is followed by Split (rohini)\n \n PIG-4491: Streaming Python Bytearray Bugs (jeremykarn via daijy)",
                "deletions": 0
            },
            {
                "sha": "df04f2f476b8824cd836f4e2a04badb7542ded2b",
                "filename": "src/org/apache/pig/backend/hadoop/executionengine/tez/plan/udf/ReadScalarsTez.java",
                "blob_url": "https://github.com/apache/pig/blob/e0994bbd8871f9ec0746744b419de8a12420b5b4/src/org/apache/pig/backend/hadoop/executionengine/tez/plan/udf/ReadScalarsTez.java",
                "raw_url": "https://github.com/apache/pig/raw/e0994bbd8871f9ec0746744b419de8a12420b5b4/src/org/apache/pig/backend/hadoop/executionengine/tez/plan/udf/ReadScalarsTez.java",
                "status": "modified",
                "changes": 3,
                "additions": 3,
                "contents_url": "https://api.github.com/repos/apache/pig/contents/src/org/apache/pig/backend/hadoop/executionengine/tez/plan/udf/ReadScalarsTez.java?ref=e0994bbd8871f9ec0746744b419de8a12420b5b4",
                "patch": "@@ -100,6 +100,9 @@ public void attachInputs(Map<String, LogicalInput> inputs,\n \n     @Override\n     public Object exec(Tuple input) throws IOException {\n+        if (t == null) {\n+            return null;\n+        }\n         int pos = (Integer) input.get(0);\n         Object obj = t.get(pos);\n         return obj;",
                "deletions": 0
            },
            {
                "sha": "7c88219bb90faf5fc7aaee92ac57ad74917ef65f",
                "filename": "test/org/apache/pig/test/TestScalarAliasesLocal.java",
                "blob_url": "https://github.com/apache/pig/blob/e0994bbd8871f9ec0746744b419de8a12420b5b4/test/org/apache/pig/test/TestScalarAliasesLocal.java",
                "raw_url": "https://github.com/apache/pig/raw/e0994bbd8871f9ec0746744b419de8a12420b5b4/test/org/apache/pig/test/TestScalarAliasesLocal.java",
                "status": "modified",
                "changes": 22,
                "additions": 22,
                "contents_url": "https://api.github.com/repos/apache/pig/contents/test/org/apache/pig/test/TestScalarAliasesLocal.java?ref=e0994bbd8871f9ec0746744b419de8a12420b5b4",
                "patch": "@@ -25,8 +25,10 @@\n import java.io.File;\n import java.io.IOException;\n import java.util.Iterator;\n+import java.util.List;\n \n import org.apache.pig.PigServer;\n+import org.apache.pig.builtin.mock.Storage;\n import org.apache.pig.data.BagFactory;\n import org.apache.pig.data.Tuple;\n import org.apache.pig.data.TupleFactory;\n@@ -556,4 +558,24 @@ public void testScalarWithNoProjection() throws Exception{\n         );\n     }\n \n+    @Test\n+    public void testScalarNullValue() throws Exception{\n+        Storage.Data data = Storage.resetData(pigServer);\n+        data.set(\"input\", Storage.tuple(\"a\", 1), Storage.tuple(\"b\", 2));\n+\n+        pigServer.setBatchOn();\n+        pigServer.registerQuery(\"A = load 'input' using mock.Storage() as (a:chararray, b:int);\");\n+        pigServer.registerQuery(\"B = FILTER A by a == 'c';\");\n+        pigServer.registerQuery(\"C = FOREACH A generate a, b + B.b;\");\n+        pigServer.registerQuery(\"store C into 'output' using mock.Storage();\");\n+\n+        pigServer.executeBatch();\n+\n+        List<Tuple> actualResults = data.get(\"output\");\n+        List<Tuple> expectedResults = Util.getTuplesFromConstantTupleStrings(\n+                new String[] {\"('a', null)\", \"('b', null)\"});\n+        Util.checkQueryOutputsAfterSort(actualResults.iterator(), expectedResults);\n+\n+    }\n+\n }",
                "deletions": 0
            }
        ]
    },
    {
        "repo": "pig",
        "message": "PIG-4873: InputSplit.getLocations return null and result a NPE in Pig\n\ngit-svn-id: https://svn.apache.org/repos/asf/pig/trunk@1744313 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/pig/commit/5c797150b232fb1ece7117630831ba0a8f9e558c",
        "parent": "https://github.com/apache/pig/commit/77d014014fb078bd6a35a2672d7ee4267f0a4a08",
        "bug_id": "pig_24",
        "file": [
            {
                "sha": "5d917b0533962ce629770571128ad9920ba996d9",
                "filename": "CHANGES.txt",
                "blob_url": "https://github.com/apache/pig/blob/5c797150b232fb1ece7117630831ba0a8f9e558c/CHANGES.txt",
                "raw_url": "https://github.com/apache/pig/raw/5c797150b232fb1ece7117630831ba0a8f9e558c/CHANGES.txt",
                "status": "modified",
                "changes": 2,
                "additions": 2,
                "contents_url": "https://api.github.com/repos/apache/pig/contents/CHANGES.txt?ref=5c797150b232fb1ece7117630831ba0a8f9e558c",
                "patch": "@@ -127,6 +127,8 @@ PIG-4639: Add better parser for Apache HTTPD access log (nielsbasjes via daijy)\n \n BUG FIXES\n \n+PIG-4873: InputSplit.getLocations return null and result a NPE in Pig (daijy)\n+\n PIG-4895: User UDFs relying on mapreduce.job.maps broken in Tez (rohini)\n \n PIG-4883: MapKeyType of splitter was set wrongly in specific multiquery case (kellyzly via rohini)",
                "deletions": 0
            },
            {
                "sha": "e866b28c1bcdadcb5c0201d80c9648868dd6b3ca",
                "filename": "src/org/apache/pig/backend/hadoop/executionengine/mapReduceLayer/PigSplit.java",
                "blob_url": "https://github.com/apache/pig/blob/5c797150b232fb1ece7117630831ba0a8f9e558c/src/org/apache/pig/backend/hadoop/executionengine/mapReduceLayer/PigSplit.java",
                "raw_url": "https://github.com/apache/pig/raw/5c797150b232fb1ece7117630831ba0a8f9e558c/src/org/apache/pig/backend/hadoop/executionengine/mapReduceLayer/PigSplit.java",
                "status": "modified",
                "changes": 8,
                "additions": 5,
                "contents_url": "https://api.github.com/repos/apache/pig/contents/src/org/apache/pig/backend/hadoop/executionengine/mapReduceLayer/PigSplit.java?ref=5c797150b232fb1ece7117630831ba0a8f9e558c",
                "patch": "@@ -463,9 +463,11 @@ public String toString() {\n             for (int i = 0; i < wrappedSplits.length; i++) {\n                 st.append(\"Input split[\"+i+\"]:\\n   Length = \"+ wrappedSplits[i].getLength()+\"\\n   ClassName: \" +\n                     wrappedSplits[i].getClass().getName() + \"\\n   Locations:\\n\");\n-                for (String location :  wrappedSplits[i].getLocations())\n-                    st.append(\"    \"+location+\"\\n\");\n-                st.append(\"\\n-----------------------\\n\");\n+                if (wrappedSplits[i]!=null && wrappedSplits[i].getLocations()!=null) {\n+                    for (String location :  wrappedSplits[i].getLocations())\n+                        st.append(\"    \"+location+\"\\n\");\n+                    st.append(\"\\n-----------------------\\n\");\n+                }\n           }\n         } catch (IOException e) {\n           return null;",
                "deletions": 3
            }
        ]
    },
    {
        "repo": "pig",
        "message": "PIG-4880: Overlapping of parameter substitution names inside&outside a macro fails with NPE (knoguchi)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/pig/trunk@1743527 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/pig/commit/c7006ffa7ea3c278528de36b787efe8cf24d60a8",
        "parent": "https://github.com/apache/pig/commit/f96a424dd0886951fc091c793fdef30fd9e0e261",
        "bug_id": "pig_25",
        "file": [
            {
                "sha": "cfc219cb85e38587a9bbbdb6fc4326271ca98d2b",
                "filename": "CHANGES.txt",
                "blob_url": "https://github.com/apache/pig/blob/c7006ffa7ea3c278528de36b787efe8cf24d60a8/CHANGES.txt",
                "raw_url": "https://github.com/apache/pig/raw/c7006ffa7ea3c278528de36b787efe8cf24d60a8/CHANGES.txt",
                "status": "modified",
                "changes": 2,
                "additions": 2,
                "contents_url": "https://api.github.com/repos/apache/pig/contents/CHANGES.txt?ref=c7006ffa7ea3c278528de36b787efe8cf24d60a8",
                "patch": "@@ -119,6 +119,8 @@ PIG-4639: Add better parser for Apache HTTPD access log (nielsbasjes via daijy)\n \n BUG FIXES\n \n+PIG-4880: Overlapping of parameter substitution names inside&outside a macro fails with NPE (knoguchi)\n+\n PIG-4881: TestBuiltin.testUniqueID failing on hadoop-1.x (knoguchi)\n \n PIG-4888: Line number off when reporting syntax error inside a macro (knoguchi)",
                "deletions": 0
            },
            {
                "sha": "1f84af48c5346690b461a1f1a65f576f43bf6cbd",
                "filename": "src/org/apache/pig/parser/PigMacro.java",
                "blob_url": "https://github.com/apache/pig/blob/c7006ffa7ea3c278528de36b787efe8cf24d60a8/src/org/apache/pig/parser/PigMacro.java",
                "raw_url": "https://github.com/apache/pig/raw/c7006ffa7ea3c278528de36b787efe8cf24d60a8/src/org/apache/pig/parser/PigMacro.java",
                "status": "modified",
                "changes": 11,
                "additions": 3,
                "contents_url": "https://api.github.com/repos/apache/pig/contents/src/org/apache/pig/parser/PigMacro.java?ref=c7006ffa7ea3c278528de36b787efe8cf24d60a8",
                "patch": "@@ -168,14 +168,9 @@ private String substituteParams(String[] inputs, String[] outputs,\n \n             Map<String, String> paramVal = pc.getParamVal();\n             for (Map.Entry<String, String> e : pigContext.getParamVal().entrySet()) {\n-                if (paramVal.containsKey(e.getKey())) {\n-                    throw new ParserException(\n-                        \"Macro contains argument or return value \" + e.getKey() + \" which conflicts \" +\n-                        \"with a Pig parameter of the same name.\"\n-                    );\n-                } else {\n-                    paramVal.put(e.getKey(), e.getValue());\n-                }\n+                // overwrite=false since macro parameters should have precedence\n+                // over commandline parameters (if keys overlap)\n+                pc.processOrdLine(e.getKey(), e.getValue(), false);\n             }\n             \n             ParameterSubstitutionPreprocessor psp = new ParameterSubstitutionPreprocessor(pc);",
                "deletions": 8
            },
            {
                "sha": "0328b072166536e02a0568b574f3cdfe36f9ad49",
                "filename": "test/org/apache/pig/test/TestMacroExpansion.java",
                "blob_url": "https://github.com/apache/pig/blob/c7006ffa7ea3c278528de36b787efe8cf24d60a8/test/org/apache/pig/test/TestMacroExpansion.java",
                "raw_url": "https://github.com/apache/pig/raw/c7006ffa7ea3c278528de36b787efe8cf24d60a8/test/org/apache/pig/test/TestMacroExpansion.java",
                "status": "modified",
                "changes": 129,
                "additions": 129,
                "contents_url": "https://api.github.com/repos/apache/pig/contents/test/org/apache/pig/test/TestMacroExpansion.java?ref=c7006ffa7ea3c278528de36b787efe8cf24d60a8",
                "patch": "@@ -2280,6 +2280,135 @@ public void testNestedImport() throws Exception {\n         verify(script, expected);\n     }\n \n+    // When  declare-in-macro, macro param and command-line param contain the\n+    // same name, last declare wins\n+    @Test\n+    public void testParamOverLap1() throws Exception {\n+        String macro =\n+            \"DEFINE mygroupby(REL, key, number) RETURNS G {\\n\" +\n+            \"    %declare number 333;\\n\"  +\n+            \"    $G = GROUP $REL by $key parallel $number;\\n\" +\n+            \"};\";\n+        createFile(\"my_macro.pig\", macro);\n+\n+        String script =\n+            \"%declare number 111;\\n\" +\n+            \"IMPORT 'my_macro.pig';\\n\" +\n+            \"data = LOAD '1234.txt' USING PigStorage() AS (i: int);\\n\" +\n+            \"result = mygroupby(data, i, 222);\\n\" +\n+            \"STORE result INTO 'test.out' USING PigStorage();\";\n+\n+        String expected =\n+            \"data = LOAD '1234.txt' USING PigStorage() AS i:int;\\n\" +\n+            \"result = GROUP data by (i) parallel 333;\\n\" +\n+            \"STORE result INTO 'test.out' USING PigStorage();\\n\";\n+\n+        verify(script, expected);\n+    }\n+\n+    // When  default-in-macro, macro param and command-line param contain the\n+    // same name, then default should be ignored and macro param to be taken\n+    @Test\n+    public void testParamOverLap2() throws Exception {\n+        String macro =\n+            \"DEFINE mygroupby(REL, key, number) RETURNS G {\\n\" +\n+            \"    %default number 333;\\n\"  +\n+            \"    $G = GROUP $REL by $key parallel $number;\\n\" +\n+            \"};\";\n+        createFile(\"my_macro.pig\", macro);\n+\n+        String script =\n+            \"%declare number 111;\\n\" +\n+            \"IMPORT 'my_macro.pig';\\n\" +\n+            \"data = LOAD '1234.txt' USING PigStorage() AS (i: int);\\n\" +\n+            \"result = mygroupby(data, i, 222);\\n\" +\n+            \"STORE result INTO 'test.out' USING PigStorage();\";\n+\n+        String expected =\n+            \"data = LOAD '1234.txt' USING PigStorage() AS i:int;\\n\" +\n+            \"result = GROUP data by (i) parallel 222;\\n\" +\n+            \"STORE result INTO 'test.out' USING PigStorage();\\n\";\n+\n+        verify(script, expected);\n+    }\n+\n+    // Overlapping of  macro param and command-line param used to be disallowed.\n+    // Now, simply taking the macro param when this happens\n+    @Test\n+    public void testParamOverLap3() throws Exception {\n+        String macro =\n+            \"DEFINE mygroupby(REL, key, number) RETURNS G {\\n\" +\n+            \"    $G = GROUP $REL by $key parallel $number;\\n\" +\n+            \"};\";\n+        createFile(\"my_macro.pig\", macro);\n+\n+        String script =\n+            \"%default number 111;\\n\" +\n+            \"IMPORT 'my_macro.pig';\\n\" +\n+            \"data = LOAD '1234.txt' USING PigStorage() AS (i: int);\\n\" +\n+            \"result = mygroupby(data, i, 222);\\n\" +\n+            \"STORE result INTO 'test.out' USING PigStorage();\";\n+\n+        String expected =\n+            \"data = LOAD '1234.txt' USING PigStorage() AS i:int;\\n\" +\n+            \"result = GROUP data by (i) parallel 222;\\n\" +\n+            \"STORE result INTO 'test.out' USING PigStorage();\\n\";\n+\n+        verify(script, expected);\n+    }\n+\n+    // Testing inline declare and commandline param overlap.\n+    // testParamOverLap1 should cover this case as well but creating a specific\n+    // case since this pair used to fail with NPE\n+    @Test\n+    public void testParamOverLap4() throws Exception {\n+        String macro =\n+            \"DEFINE mygroupby(REL, key) RETURNS G {\\n\" +\n+            \"    %declare number 333;\\n\"  +\n+            \"    $G = GROUP $REL by $key parallel $number;\\n\" +\n+            \"};\";\n+        createFile(\"my_macro.pig\", macro);\n+\n+        String script =\n+            \"%default number 111;\\n\" +\n+            \"IMPORT 'my_macro.pig';\\n\" +\n+            \"data = LOAD '1234.txt' USING PigStorage() AS (i: int);\\n\" +\n+            \"result = mygroupby(data, i);\\n\" +\n+            \"STORE result INTO 'test.out' USING PigStorage();\";\n+\n+        String expected =\n+            \"data = LOAD '1234.txt' USING PigStorage() AS i:int;\\n\" +\n+            \"result = GROUP data by (i) parallel 333;\\n\" +\n+            \"STORE result INTO 'test.out' USING PigStorage();\\n\";\n+\n+        verify(script, expected);\n+    }\n+\n+    // default-in-macro should yield to command-line param\n+    @Test\n+    public void testParamOverLap5() throws Exception {\n+        String macro =\n+            \"DEFINE mygroupby(REL, key) RETURNS G {\\n\" +\n+            \"    %default number 333;\\n\"  +\n+            \"    $G = GROUP $REL by $key parallel $number;\\n\" +\n+            \"};\";\n+        createFile(\"my_macro.pig\", macro);\n+\n+        String script =\n+            \"%declare number 111;\\n\" +\n+            \"IMPORT 'my_macro.pig';\\n\" +\n+            \"data = LOAD '1234.txt' USING PigStorage() AS (i: int);\\n\" +\n+            \"result = mygroupby(data, i);\\n\" +\n+            \"STORE result INTO 'test.out' USING PigStorage();\";\n+\n+        String expected =\n+            \"data = LOAD '1234.txt' USING PigStorage() AS i:int;\\n\" +\n+            \"result = GROUP data by (i) parallel 111;\\n\" +\n+            \"STORE result INTO 'test.out' USING PigStorage();\\n\";\n+\n+        verify(script, expected);\n+    }\n+\n     //-------------------------------------------------------------------------\n     \n     private void testMacro(String content) throws Exception {",
                "deletions": 0
            }
        ]
    },
    {
        "repo": "pig",
        "message": "PIG-4169: NPE in ConstantCalculator\n\ngit-svn-id: https://svn.apache.org/repos/asf/pig/trunk@1625205 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/pig/commit/d4fc36bbdaf4847147a8e3941f50b06228f541ec",
        "parent": "https://github.com/apache/pig/commit/f72c0b8627547957a7f0d99aa1603ea226bd0ecf",
        "bug_id": "pig_26",
        "file": [
            {
                "sha": "860fa474ea59bf6126a37d46740fc9d6d3df0f06",
                "filename": "src/org/apache/pig/newplan/logical/rules/ConstantCalculator.java",
                "blob_url": "https://github.com/apache/pig/blob/d4fc36bbdaf4847147a8e3941f50b06228f541ec/src/org/apache/pig/newplan/logical/rules/ConstantCalculator.java",
                "raw_url": "https://github.com/apache/pig/raw/d4fc36bbdaf4847147a8e3941f50b06228f541ec/src/org/apache/pig/newplan/logical/rules/ConstantCalculator.java",
                "status": "modified",
                "changes": 11,
                "additions": 5,
                "contents_url": "https://api.github.com/repos/apache/pig/contents/src/org/apache/pig/newplan/logical/rules/ConstantCalculator.java?ref=d4fc36bbdaf4847147a8e3941f50b06228f541ec",
                "patch": "@@ -26,8 +26,8 @@\n \n import org.apache.pig.backend.executionengine.ExecException;\n import org.apache.pig.backend.hadoop.datastorage.ConfigurationUtil;\n+import org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigHadoopLogger;\n import org.apache.pig.backend.hadoop.executionengine.physicalLayer.PhysicalOperator;\n-import org.apache.pig.backend.hadoop.executionengine.physicalLayer.Result;\n import org.apache.pig.backend.hadoop.executionengine.physicalLayer.plans.PhysicalPlan;\n import org.apache.pig.impl.PigContext;\n import org.apache.pig.impl.logicalLayer.FrontendException;\n@@ -149,15 +149,14 @@ protected void execute(LogicalExpression op) throws FrontendException {\n                     PhysicalOperator root = expPhysicalPlan.getLeaves().get(0);\n                     try {\n                         UDFContext.getUDFContext().addJobConf(ConfigurationUtil.toConfiguration(pc.getProperties(), true));\n-                        Result ret= root.getNext(root.getResultType());\n-                        if (ret.result != null) {\n-                            val = ret.result;\n-                            valSet = true;\n-                        }\n+                        PigHadoopLogger pigHadoopLogger = PigHadoopLogger.getInstance();\n+                        PhysicalOperator.setPigLogger(pigHadoopLogger);\n+                        val = root.getNext(root.getResultType()).result;\n                         UDFContext.getUDFContext().addJobConf(null);\n                     } catch (ExecException e) {\n                         throw new FrontendException(e);\n                     }\n+                    valSet = true;\n                 } else if (op instanceof UserFuncExpression) {\n                     // If solo UDF, calculate UDF\n                     UserFuncExpression udf = (UserFuncExpression)op;",
                "deletions": 6
            }
        ]
    },
    {
        "repo": "pig",
        "message": "PIG-4169: NPE in ConstantCalculator (cheolsoo)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/pig/trunk@1624611 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/pig/commit/fafded26168d0c3079de7b4e81254d2c93098da8",
        "parent": "https://github.com/apache/pig/commit/6ab412d9a189fc8b04531c99f1ef1601e547ef5d",
        "bug_id": "pig_27",
        "file": [
            {
                "sha": "234073e4fd15efb3ec54f8e6b265b3f6811d607d",
                "filename": "CHANGES.txt",
                "blob_url": "https://github.com/apache/pig/blob/fafded26168d0c3079de7b4e81254d2c93098da8/CHANGES.txt",
                "raw_url": "https://github.com/apache/pig/raw/fafded26168d0c3079de7b4e81254d2c93098da8/CHANGES.txt",
                "status": "modified",
                "changes": 2,
                "additions": 2,
                "contents_url": "https://api.github.com/repos/apache/pig/contents/CHANGES.txt?ref=fafded26168d0c3079de7b4e81254d2c93098da8",
                "patch": "@@ -70,6 +70,8 @@ OPTIMIZATIONS\n  \n BUG FIXES\n \n+PIG-4169: NPE in ConstantCalculator (cheolsoo)\n+\n PIG-4161: check for latest Hive snapshot dependencies (daijy)\n \n PIG-4102: Adding e2e tests and several improvements for Orc predicate pushdown (daijy)",
                "deletions": 0
            },
            {
                "sha": "761781c1e3ab01b84316b45a7c23d6c873592ee8",
                "filename": "src/org/apache/pig/newplan/logical/rules/ConstantCalculator.java",
                "blob_url": "https://github.com/apache/pig/blob/fafded26168d0c3079de7b4e81254d2c93098da8/src/org/apache/pig/newplan/logical/rules/ConstantCalculator.java",
                "raw_url": "https://github.com/apache/pig/raw/fafded26168d0c3079de7b4e81254d2c93098da8/src/org/apache/pig/newplan/logical/rules/ConstantCalculator.java",
                "status": "modified",
                "changes": 8,
                "additions": 6,
                "contents_url": "https://api.github.com/repos/apache/pig/contents/src/org/apache/pig/newplan/logical/rules/ConstantCalculator.java?ref=fafded26168d0c3079de7b4e81254d2c93098da8",
                "patch": "@@ -27,6 +27,7 @@\n import org.apache.pig.backend.executionengine.ExecException;\n import org.apache.pig.backend.hadoop.datastorage.ConfigurationUtil;\n import org.apache.pig.backend.hadoop.executionengine.physicalLayer.PhysicalOperator;\n+import org.apache.pig.backend.hadoop.executionengine.physicalLayer.Result;\n import org.apache.pig.backend.hadoop.executionengine.physicalLayer.plans.PhysicalPlan;\n import org.apache.pig.impl.PigContext;\n import org.apache.pig.impl.logicalLayer.FrontendException;\n@@ -148,12 +149,15 @@ protected void execute(LogicalExpression op) throws FrontendException {\n                     PhysicalOperator root = expPhysicalPlan.getLeaves().get(0);\n                     try {\n                         UDFContext.getUDFContext().addJobConf(ConfigurationUtil.toConfiguration(pc.getProperties(), true));\n-                        val = root.getNext(root.getResultType()).result;\n+                        Result ret= root.getNext(root.getResultType());\n+                        if (ret.result != null) {\n+                            val = ret.result;\n+                            valSet = true;\n+                        }\n                         UDFContext.getUDFContext().addJobConf(null);\n                     } catch (ExecException e) {\n                         throw new FrontendException(e);\n                     }\n-                    valSet = true;\n                 } else if (op instanceof UserFuncExpression) {\n                     // If solo UDF, calculate UDF\n                     UserFuncExpression udf = (UserFuncExpression)op;",
                "deletions": 2
            }
        ]
    },
    {
        "repo": "pig",
        "message": "PIG-4156: [PATCH] fix NPE when running scripts stored on hdfs://\n\ngit-svn-id: https://svn.apache.org/repos/asf/pig/trunk@1623608 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/pig/commit/ee639573fc17b96e1472a20cbd7decbe948e4058",
        "parent": "https://github.com/apache/pig/commit/e4248242bc9000b08b466f1bd1cdc06f5c09c4eb",
        "bug_id": "pig_28",
        "file": [
            {
                "sha": "4f8376b59e9bd16905750bb3f2fcc43735300546",
                "filename": "CHANGES.txt",
                "blob_url": "https://github.com/apache/pig/blob/ee639573fc17b96e1472a20cbd7decbe948e4058/CHANGES.txt",
                "raw_url": "https://github.com/apache/pig/raw/ee639573fc17b96e1472a20cbd7decbe948e4058/CHANGES.txt",
                "status": "modified",
                "changes": 2,
                "additions": 2,
                "contents_url": "https://api.github.com/repos/apache/pig/contents/CHANGES.txt?ref=ee639573fc17b96e1472a20cbd7decbe948e4058",
                "patch": "@@ -70,6 +70,8 @@ OPTIMIZATIONS\n  \n BUG FIXES\n \n+PIG-4156: [PATCH] fix NPE when running scripts stored on hdfs:// (acoliver via daijy)\n+\n PIG-4159: TestGroupConstParallelTez and TestJobSubmissionTez should be excluded in Hadoop 20 unit tests (cheolsoo)\n \n PIG-4154: ScriptState#setScript(File) does not close resources (lars_francke via daijy)",
                "deletions": 0
            },
            {
                "sha": "2ffa4ebed3fa4a22065c28334e0f3361f1b4e03f",
                "filename": "src/org/apache/pig/impl/io/FileLocalizer.java",
                "blob_url": "https://github.com/apache/pig/blob/ee639573fc17b96e1472a20cbd7decbe948e4058/src/org/apache/pig/impl/io/FileLocalizer.java",
                "raw_url": "https://github.com/apache/pig/raw/ee639573fc17b96e1472a20cbd7decbe948e4058/src/org/apache/pig/impl/io/FileLocalizer.java",
                "status": "modified",
                "changes": 3,
                "additions": 2,
                "contents_url": "https://api.github.com/repos/apache/pig/contents/src/org/apache/pig/impl/io/FileLocalizer.java?ref=ee639573fc17b96e1472a20cbd7decbe948e4058",
                "patch": "@@ -800,7 +800,8 @@ public static FetchFileRet fetchFile(Properties properties, String filePath) thr\n                 && uri.getScheme() == null )||\n                 // For Windows local files\n                 (uri.getScheme() == null && uri.getPath().matches(\"^/[A-Za-z]:.*\")) ||\n-                uri.getScheme().equals(\"local\") ) {\n+                (uri.getScheme() != null && uri.getScheme().equals(\"local\")) \n+            ) {\n             srcFs = localFs;\n         } else {\n             srcFs = path.getFileSystem(conf);",
                "deletions": 1
            }
        ]
    },
    {
        "repo": "pig",
        "message": "PIG-4017: NPE thrown from JobControlCompiler.shipToHdfs (cheolsoo)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/pig/trunk@1603315 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/pig/commit/2f5f7c4db36b06fd3fcf7bd961cd532d185e1fe3",
        "parent": "https://github.com/apache/pig/commit/1fe3a09b9d18bd4402fe75911fbe77497d110c2a",
        "bug_id": "pig_29",
        "file": [
            {
                "sha": "dba86c9ade6aa95d040f79ba8e05a19186f49384",
                "filename": "CHANGES.txt",
                "blob_url": "https://github.com/apache/pig/blob/2f5f7c4db36b06fd3fcf7bd961cd532d185e1fe3/CHANGES.txt",
                "raw_url": "https://github.com/apache/pig/raw/2f5f7c4db36b06fd3fcf7bd961cd532d185e1fe3/CHANGES.txt",
                "status": "modified",
                "changes": 2,
                "additions": 2,
                "contents_url": "https://api.github.com/repos/apache/pig/contents/CHANGES.txt?ref=2f5f7c4db36b06fd3fcf7bd961cd532d185e1fe3",
                "patch": "@@ -193,6 +193,8 @@ PIG-3882: Multiquery off mode execution is not done in batch and very inefficien\n  \n BUG FIXES\n \n+PIG-4017: NPE thrown from JobControlCompiler.shipToHdfs (cheolsoo)\n+\n PIG-3997: Issue on Pig docs: Testing and Diagnostics (zjffdu via cheolsoo)\n \n PIG-3998: Documentation fix: invalid page links, wrong Groovy udf example (lbendig via cheolsoo)",
                "deletions": 0
            },
            {
                "sha": "37341ce948d89c3b66d7a4860e5ba83a98d3c4a8",
                "filename": "src/org/apache/pig/backend/hadoop/executionengine/mapReduceLayer/JobControlCompiler.java",
                "blob_url": "https://github.com/apache/pig/blob/2f5f7c4db36b06fd3fcf7bd961cd532d185e1fe3/src/org/apache/pig/backend/hadoop/executionengine/mapReduceLayer/JobControlCompiler.java",
                "raw_url": "https://github.com/apache/pig/raw/2f5f7c4db36b06fd3fcf7bd961cd532d185e1fe3/src/org/apache/pig/backend/hadoop/executionengine/mapReduceLayer/JobControlCompiler.java",
                "status": "modified",
                "changes": 4,
                "additions": 3,
                "contents_url": "https://api.github.com/repos/apache/pig/contents/src/org/apache/pig/backend/hadoop/executionengine/mapReduceLayer/JobControlCompiler.java?ref=2f5f7c4db36b06fd3fcf7bd961cd532d185e1fe3",
                "patch": "@@ -1687,7 +1687,9 @@ private static Path shipToHDFS(\n         } finally {\n             org.apache.commons.io.IOUtils.closeQuietly(is);\n             // IOUtils should not close stream to HDFS quietly\n-            os.close();\n+            if (os != null) {\n+                os.close();\n+            }\n         }\n         return dst;\n     }",
                "deletions": 1
            }
        ]
    },
    {
        "repo": "pig",
        "message": "PIG-3806: PigServer constructor throws NPE after PIG-3765 (aniket486)\n\ngit-svn-id: https://svn.apache.org/repos/asf/pig/trunk@1576549 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/pig/commit/c36f78b64b021e085fb535ae324c7ca8cd9041e5",
        "parent": "https://github.com/apache/pig/commit/d2af8ee692492ce1717d28a356caaa9e9bdbbaf3",
        "bug_id": "pig_30",
        "file": [
            {
                "sha": "70b6d59884318e7be39758c61b14231baeb4a70c",
                "filename": "CHANGES.txt",
                "blob_url": "https://github.com/apache/pig/blob/c36f78b64b021e085fb535ae324c7ca8cd9041e5/CHANGES.txt",
                "raw_url": "https://github.com/apache/pig/raw/c36f78b64b021e085fb535ae324c7ca8cd9041e5/CHANGES.txt",
                "status": "modified",
                "changes": 2,
                "additions": 2,
                "contents_url": "https://api.github.com/repos/apache/pig/contents/CHANGES.txt?ref=c36f78b64b021e085fb535ae324c7ca8cd9041e5",
                "patch": "@@ -99,6 +99,8 @@ OPTIMIZATIONS\n  \n BUG FIXES\n \n+PIG-3806: PigServer constructor throws NPE after PIG-3765 (aniket486)\n+\n PIG-3801: Auto local mode does not call storeSchema (aniket486)\n \n PIG-3754: InputSizeReducerEstimator.getTotalInputFileSize reports incorrect size (aniket486)",
                "deletions": 0
            },
            {
                "sha": "54515206ca52220ccb68faf19ff54c6a034d2255",
                "filename": "src/org/apache/pig/PigServer.java",
                "blob_url": "https://github.com/apache/pig/blob/c36f78b64b021e085fb535ae324c7ca8cd9041e5/src/org/apache/pig/PigServer.java",
                "raw_url": "https://github.com/apache/pig/raw/c36f78b64b021e085fb535ae324c7ca8cd9041e5/src/org/apache/pig/PigServer.java",
                "status": "modified",
                "changes": 4,
                "additions": 2,
                "contents_url": "https://api.github.com/repos/apache/pig/contents/src/org/apache/pig/PigServer.java?ref=c36f78b64b021e085fb535ae324c7ca8cd9041e5",
                "patch": "@@ -233,6 +233,8 @@ public PigServer(PigContext context, boolean connect) throws ExecException {\n         if (connect) {\n             pigContext.connect();\n         }\n+        \n+        this.filter = new BlackAndWhitelistFilter(this);\n \n         addJarsFromProperties();\n         markPredeployedJarsFromProperties();\n@@ -244,8 +246,6 @@ public PigServer(PigContext context, boolean connect) throws ExecException {\n         if (ScriptState.get() == null) {\n             ScriptState.start(pigContext.getExecutionEngine().instantiateScriptState());\n         }\n-\n-        this.filter = new BlackAndWhitelistFilter(this);\n     }\n \n     private void addJarsFromProperties() throws ExecException {",
                "deletions": 2
            }
        ]
    },
    {
        "repo": "pig",
        "message": "PIG-3657: New partition filter extractor fails with NPE (cheolsoo)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/pig/trunk@1556906 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/pig/commit/6157b483753be2cffce9e900be12a1b9bcac72ef",
        "parent": "https://github.com/apache/pig/commit/edc9fe4cca373f1d7126d72c24d3ff936c34c9a3",
        "bug_id": "pig_31",
        "file": [
            {
                "sha": "8a1a55416db28006123ac83491dc8c25d8883064",
                "filename": "CHANGES.txt",
                "blob_url": "https://github.com/apache/pig/blob/6157b483753be2cffce9e900be12a1b9bcac72ef/CHANGES.txt",
                "raw_url": "https://github.com/apache/pig/raw/6157b483753be2cffce9e900be12a1b9bcac72ef/CHANGES.txt",
                "status": "modified",
                "changes": 2,
                "additions": 2,
                "contents_url": "https://api.github.com/repos/apache/pig/contents/CHANGES.txt?ref=6157b483753be2cffce9e900be12a1b9bcac72ef",
                "patch": "@@ -64,6 +64,8 @@ OPTIMIZATIONS\n  \n BUG FIXES\n \n+PIG-3657: New partition filter extractor fails with NPE (cheolsoo)\n+\n PIG-3617: problem with temp file deletion in MAPREDUCE operator (nezihyigitbasi via cheolsoo)\n \n PIG-3649: POPartialAgg incorrectly calculates size reduction when multiple values aggregated (tmwoodruff via daijy)",
                "deletions": 0
            },
            {
                "sha": "2a327d37af69e195757e3599e934f6afc6bc5aee",
                "filename": "src/org/apache/pig/newplan/FilterExtractor.java",
                "blob_url": "https://github.com/apache/pig/blob/6157b483753be2cffce9e900be12a1b9bcac72ef/src/org/apache/pig/newplan/FilterExtractor.java",
                "raw_url": "https://github.com/apache/pig/raw/6157b483753be2cffce9e900be12a1b9bcac72ef/src/org/apache/pig/newplan/FilterExtractor.java",
                "status": "modified",
                "changes": 18,
                "additions": 15,
                "contents_url": "https://api.github.com/repos/apache/pig/contents/src/org/apache/pig/newplan/FilterExtractor.java?ref=6157b483753be2cffce9e900be12a1b9bcac72ef",
                "patch": "@@ -180,23 +180,35 @@ private LogicalExpression addToFilterPlan(LogicalExpression op) throws FrontendE\n     }\n \n     private LogicalExpression andLogicalExpressions(\n-            LogicalExpressionPlan plan, LogicalExpression a, LogicalExpression b) {\n+            LogicalExpressionPlan plan, LogicalExpression a, LogicalExpression b) throws FrontendException {\n         if (a == null) {\n             return b;\n         }\n         if (b == null) {\n             return a;\n         }\n+        if (!plan.ops.contains(a)) {\n+            a = a.deepCopy(plan);\n+        }\n+        if (!plan.ops.contains(b)) {\n+            b = b.deepCopy(plan);\n+        }\n         LogicalExpression andOp = new AndExpression(plan, a, b);\n         return andOp;\n     }\n \n     private LogicalExpression orLogicalExpressions(\n-            LogicalExpressionPlan plan, LogicalExpression a, LogicalExpression b) {\n+            LogicalExpressionPlan plan, LogicalExpression a, LogicalExpression b) throws FrontendException {\n         // Or 2 operators if they are not null\n         if (a == null || b == null) {\n             return null;\n         }\n+        if (!plan.ops.contains(a)) {\n+            a = a.deepCopy(plan);\n+        }\n+        if (!plan.ops.contains(b)) {\n+            b = b.deepCopy(plan);\n+        }\n         LogicalExpression orOp = new OrExpression(plan, a, b);\n         return orOp;\n     }\n@@ -234,7 +246,7 @@ private KeyState checkPushDown(BinaryExpression binExpr) throws FrontendExceptio\n             //              AND (leftState.filterExpr OR rightState.pushdownExpr)\n             //              AND (leftState.filterExpr OR rightState.filterExpr)\n             state.pushdownExpr = orLogicalExpressions(pushdownExprPlan, leftState.pushdownExpr, rightState.pushdownExpr);\n-            if(state.pushdownExpr == null) {\n+            if (state.pushdownExpr == null) {\n                 // Whatever we did so far on the right tree is all wasted :(\n                 // Undo all the mutation (AND OR distributions) until now\n                 removeFromFilteredPlan(leftState.filterExpr);",
                "deletions": 3
            },
            {
                "sha": "703d86f738dd882605cb4ab1bc85cd55d34625d0",
                "filename": "test/org/apache/pig/test/TestNewPartitionFilterPushDown.java",
                "blob_url": "https://github.com/apache/pig/blob/6157b483753be2cffce9e900be12a1b9bcac72ef/test/org/apache/pig/test/TestNewPartitionFilterPushDown.java",
                "raw_url": "https://github.com/apache/pig/raw/6157b483753be2cffce9e900be12a1b9bcac72ef/test/org/apache/pig/test/TestNewPartitionFilterPushDown.java",
                "status": "modified",
                "changes": 15,
                "additions": 15,
                "contents_url": "https://api.github.com/repos/apache/pig/contents/test/org/apache/pig/test/TestNewPartitionFilterPushDown.java?ref=6157b483753be2cffce9e900be12a1b9bcac72ef",
                "patch": "@@ -61,6 +61,7 @@\n import org.apache.pig.newplan.logical.expression.ProjectExpression;\n import org.apache.pig.newplan.logical.optimizer.LogicalPlanOptimizer;\n import org.apache.pig.newplan.logical.relational.LOFilter;\n+import org.apache.pig.newplan.logical.relational.LogToPhyTranslationVisitor;\n import org.apache.pig.newplan.logical.relational.LogicalPlan;\n import org.apache.pig.newplan.logical.rules.LoadTypeCastInserter;\n import org.apache.pig.newplan.logical.rules.PartitionFilterOptimizer;\n@@ -466,6 +467,10 @@ private void testFull(String q, String partFilter, String filterExpr, boolean un\n                         (it.next() instanceof LOFilter));\n             }\n         }\n+\n+        // Test that the filtered plan can be translated to physical plan (PIG-3657)\n+        LogToPhyTranslationVisitor translator = new LogToPhyTranslationVisitor(newLogicalPlan);\n+        translator.visit();\n     }\n \n     /**\n@@ -671,6 +676,16 @@ public void testOrWithNonPartitionCondition() throws Exception {\n         negativeTest(q, Arrays.asList(\"srcid\", \"mrkt\", \"dstid\"));\n     }\n \n+    // PIG-3657\n+    @Test\n+    public void testFilteredPlanWithLogToPhyTranslator() throws Exception {\n+        String q = \"a = load 'foo' using \" + TestLoader.class.getName() +\n+                \"('srcid:int, mrkt:chararray', 'srcid') as (f1, f2);\" +\n+                \"b = filter a by (f1 < 5 or (f1 == 10 and f2 == 'UK'));\" +\n+                \"store b into 'out';\";\n+        testFull(q, \"((srcid < 5) or (srcid == 10))\", \"((f1 < 5) or (f2 == 'UK'))\", false);\n+    }\n+\n     //// helper methods ///////\n     private FilterExtractor test(String query, List<String> partitionCols,\n             String expPartFilterString, String expFilterString)",
                "deletions": 0
            }
        ]
    },
    {
        "repo": "pig",
        "message": "PIG-4774: Fix NPE in SUM,AVG,MIN,MAX UDFs for null bag input (rohini)\n\ngit-svn-id: https://svn.apache.org/repos/asf/pig/trunk@1723972 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/pig/commit/23e1cd0946b2b0ea4283d50dac0d6ec504308097",
        "parent": "https://github.com/apache/pig/commit/615ae5c8bcd014f312c79efdbffb4d71969a64fb",
        "bug_id": "pig_32",
        "file": [
            {
                "sha": "92003cd62079ad44d3b712e1e4cf2fb6904d63a1",
                "filename": "CHANGES.txt",
                "blob_url": "https://github.com/apache/pig/blob/23e1cd0946b2b0ea4283d50dac0d6ec504308097/CHANGES.txt",
                "raw_url": "https://github.com/apache/pig/raw/23e1cd0946b2b0ea4283d50dac0d6ec504308097/CHANGES.txt",
                "status": "modified",
                "changes": 2,
                "additions": 2,
                "contents_url": "https://api.github.com/repos/apache/pig/contents/CHANGES.txt?ref=23e1cd0946b2b0ea4283d50dac0d6ec504308097",
                "patch": "@@ -77,6 +77,8 @@ PIG-4639: Add better parser for Apache HTTPD access log (nielsbasjes via daijy)\n \n BUG FIXES\n \n+PIG-4774: Fix NPE in SUM,AVG,MIN,MAX UDFs for null bag input (rohini)\n+\n PIG-4757: Job stats on successfully read/output records wrong with multiple inputs/outputs (rohini)\n \n PIG-4769: UnionOptimizer hits errors when merging vertex group into split (rohini)",
                "deletions": 0
            },
            {
                "sha": "f14dce1086bb89b43cc07306b64899621d176c42",
                "filename": "src/org/apache/pig/builtin/AVG.java",
                "blob_url": "https://github.com/apache/pig/blob/23e1cd0946b2b0ea4283d50dac0d6ec504308097/src/org/apache/pig/builtin/AVG.java",
                "raw_url": "https://github.com/apache/pig/raw/23e1cd0946b2b0ea4283d50dac0d6ec504308097/src/org/apache/pig/builtin/AVG.java",
                "status": "modified",
                "changes": 7,
                "additions": 5,
                "contents_url": "https://api.github.com/repos/apache/pig/contents/src/org/apache/pig/builtin/AVG.java?ref=23e1cd0946b2b0ea4283d50dac0d6ec504308097",
                "patch": "@@ -27,14 +27,14 @@\n import org.apache.pig.EvalFunc;\n import org.apache.pig.FuncSpec;\n import org.apache.pig.PigException;\n+import org.apache.pig.backend.executionengine.ExecException;\n import org.apache.pig.data.DataBag;\n import org.apache.pig.data.DataByteArray;\n import org.apache.pig.data.DataType;\n import org.apache.pig.data.Tuple;\n import org.apache.pig.data.TupleFactory;\n import org.apache.pig.impl.logicalLayer.FrontendException;\n import org.apache.pig.impl.logicalLayer.schema.Schema;\n-import org.apache.pig.backend.executionengine.ExecException;\n \n \n /**\n@@ -79,14 +79,17 @@ public Double exec(Tuple input) throws IOException {\n         }\n     }\n \n+    @Override\n     public String getInitial() {\n         return Initial.class.getName();\n     }\n \n+    @Override\n     public String getIntermed() {\n         return Intermediate.class.getName();\n     }\n \n+    @Override\n     public String getFinal() {\n         return Final.class.getName();\n     }\n@@ -230,7 +233,7 @@ static protected Double sum(Tuple input) throws ExecException, IOException {\n         DataBag values = (DataBag)input.get(0);\n \n         // if we were handed an empty bag, return NULL\n-        if(values.size() == 0) {\n+        if(values == null || values.size() == 0) {\n             return null;\n         }\n ",
                "deletions": 2
            },
            {
                "sha": "e16221096d7e5f4d4e5060bcc0bbe22b57614c5e",
                "filename": "src/org/apache/pig/builtin/AlgebraicBigDecimalMathBase.java",
                "blob_url": "https://github.com/apache/pig/blob/23e1cd0946b2b0ea4283d50dac0d6ec504308097/src/org/apache/pig/builtin/AlgebraicBigDecimalMathBase.java",
                "raw_url": "https://github.com/apache/pig/raw/23e1cd0946b2b0ea4283d50dac0d6ec504308097/src/org/apache/pig/builtin/AlgebraicBigDecimalMathBase.java",
                "status": "modified",
                "changes": 4,
                "additions": 2,
                "contents_url": "https://api.github.com/repos/apache/pig/contents/src/org/apache/pig/builtin/AlgebraicBigDecimalMathBase.java?ref=23e1cd0946b2b0ea4283d50dac0d6ec504308097",
                "patch": "@@ -18,8 +18,8 @@\n package org.apache.pig.builtin;\n \n import java.io.IOException;\n-import java.util.Iterator;\n import java.math.BigDecimal;\n+import java.util.Iterator;\n \n import org.apache.pig.Accumulator;\n import org.apache.pig.PigException;\n@@ -88,7 +88,7 @@ protected static BigDecimal doTupleWork(Tuple input, KnownOpProvider opProvider)\n         DataBag values = (DataBag)input.get(0);\n         // if we were handed an empty bag, return NULL\n         // this is in compliance with SQL standard\n-        if(values.size() == 0) {\n+        if(values == null || values.size() == 0) {\n             return null;\n         }\n         BigDecimal sofar = AlgebraicBigDecimalMathBase.getSeed(opProvider.getOp());",
                "deletions": 2
            },
            {
                "sha": "7b9be4a6e3e87c1896c072cca5cbc06238e8e0e2",
                "filename": "src/org/apache/pig/builtin/AlgebraicBigIntegerMathBase.java",
                "blob_url": "https://github.com/apache/pig/blob/23e1cd0946b2b0ea4283d50dac0d6ec504308097/src/org/apache/pig/builtin/AlgebraicBigIntegerMathBase.java",
                "raw_url": "https://github.com/apache/pig/raw/23e1cd0946b2b0ea4283d50dac0d6ec504308097/src/org/apache/pig/builtin/AlgebraicBigIntegerMathBase.java",
                "status": "modified",
                "changes": 4,
                "additions": 2,
                "contents_url": "https://api.github.com/repos/apache/pig/contents/src/org/apache/pig/builtin/AlgebraicBigIntegerMathBase.java?ref=23e1cd0946b2b0ea4283d50dac0d6ec504308097",
                "patch": "@@ -18,8 +18,8 @@\n package org.apache.pig.builtin;\n \n import java.io.IOException;\n-import java.util.Iterator;\n import java.math.BigInteger;\n+import java.util.Iterator;\n \n import org.apache.pig.Accumulator;\n import org.apache.pig.PigException;\n@@ -88,7 +88,7 @@ protected static BigInteger doTupleWork(Tuple input, KnownOpProvider opProvider)\n         DataBag values = (DataBag)input.get(0);\n         // if we were handed an empty bag, return NULL\n         // this is in compliance with SQL standard\n-        if(values.size() == 0) {\n+        if(values == null || values.size() == 0) {\n             return null;\n         }\n         BigInteger sofar = AlgebraicBigIntegerMathBase.getSeed(opProvider.getOp());",
                "deletions": 2
            },
            {
                "sha": "b6e694dba74d1c5cc8ccfd97b1b41a7b2fc33589",
                "filename": "src/org/apache/pig/builtin/AlgebraicByteArrayMathBase.java",
                "blob_url": "https://github.com/apache/pig/blob/23e1cd0946b2b0ea4283d50dac0d6ec504308097/src/org/apache/pig/builtin/AlgebraicByteArrayMathBase.java",
                "raw_url": "https://github.com/apache/pig/raw/23e1cd0946b2b0ea4283d50dac0d6ec504308097/src/org/apache/pig/builtin/AlgebraicByteArrayMathBase.java",
                "status": "modified",
                "changes": 2,
                "additions": 1,
                "contents_url": "https://api.github.com/repos/apache/pig/contents/src/org/apache/pig/builtin/AlgebraicByteArrayMathBase.java?ref=23e1cd0946b2b0ea4283d50dac0d6ec504308097",
                "patch": "@@ -67,7 +67,7 @@ protected static Double doTupleWork(Tuple input, KnownOpProvider opProvider, byt\n         DataBag values = (DataBag)input.get(0);\n         // if we were handed an empty bag, return NULL\n         // this is in compliance with SQL standard\n-        if(values.size() == 0) {\n+        if(values == null || values.size() == 0) {\n             return null;\n         }\n         double sofar = AlgebraicByteArrayMathBase.getSeed(opProvider.getOp());",
                "deletions": 1
            },
            {
                "sha": "b6dc77c6c18138de51b235d8c539f15052e00fb9",
                "filename": "src/org/apache/pig/builtin/AlgebraicDoubleMathBase.java",
                "blob_url": "https://github.com/apache/pig/blob/23e1cd0946b2b0ea4283d50dac0d6ec504308097/src/org/apache/pig/builtin/AlgebraicDoubleMathBase.java",
                "raw_url": "https://github.com/apache/pig/raw/23e1cd0946b2b0ea4283d50dac0d6ec504308097/src/org/apache/pig/builtin/AlgebraicDoubleMathBase.java",
                "status": "modified",
                "changes": 2,
                "additions": 1,
                "contents_url": "https://api.github.com/repos/apache/pig/contents/src/org/apache/pig/builtin/AlgebraicDoubleMathBase.java?ref=23e1cd0946b2b0ea4283d50dac0d6ec504308097",
                "patch": "@@ -64,7 +64,7 @@ protected static Double doTupleWork(Tuple input, KnownOpProvider opProvider) thr\n         DataBag values = (DataBag)input.get(0);\n         // if we were handed an empty bag, return NULL\n         // this is in compliance with SQL standard\n-        if(values.size() == 0) {\n+        if(values == null || values.size() == 0) {\n             return null;\n         }\n         double sofar = AlgebraicDoubleMathBase.getSeed(opProvider.getOp());",
                "deletions": 1
            },
            {
                "sha": "7e360cc57b77760b29edaed93132e23e9fd1b121",
                "filename": "src/org/apache/pig/builtin/AlgebraicFloatMathBase.java",
                "blob_url": "https://github.com/apache/pig/blob/23e1cd0946b2b0ea4283d50dac0d6ec504308097/src/org/apache/pig/builtin/AlgebraicFloatMathBase.java",
                "raw_url": "https://github.com/apache/pig/raw/23e1cd0946b2b0ea4283d50dac0d6ec504308097/src/org/apache/pig/builtin/AlgebraicFloatMathBase.java",
                "status": "modified",
                "changes": 2,
                "additions": 1,
                "contents_url": "https://api.github.com/repos/apache/pig/contents/src/org/apache/pig/builtin/AlgebraicFloatMathBase.java?ref=23e1cd0946b2b0ea4283d50dac0d6ec504308097",
                "patch": "@@ -64,7 +64,7 @@ protected static Float doTupleWork(Tuple input, KnownOpProvider opProvider) thro\n         DataBag values = (DataBag)input.get(0);\n         // if we were handed an empty bag, return NULL\n         // this is in compliance with SQL standard\n-        if(values.size() == 0) {\n+        if(values == null || values.size() == 0) {\n             return null;\n         }\n         Float sofar = AlgebraicFloatMathBase.getSeed(opProvider.getOp());",
                "deletions": 1
            },
            {
                "sha": "4b58f9d241e2d79eaa527aefe639863eb7718f3b",
                "filename": "src/org/apache/pig/builtin/AlgebraicIntMathBase.java",
                "blob_url": "https://github.com/apache/pig/blob/23e1cd0946b2b0ea4283d50dac0d6ec504308097/src/org/apache/pig/builtin/AlgebraicIntMathBase.java",
                "raw_url": "https://github.com/apache/pig/raw/23e1cd0946b2b0ea4283d50dac0d6ec504308097/src/org/apache/pig/builtin/AlgebraicIntMathBase.java",
                "status": "modified",
                "changes": 2,
                "additions": 1,
                "contents_url": "https://api.github.com/repos/apache/pig/contents/src/org/apache/pig/builtin/AlgebraicIntMathBase.java?ref=23e1cd0946b2b0ea4283d50dac0d6ec504308097",
                "patch": "@@ -64,7 +64,7 @@ protected static Integer doTupleWork(Tuple input, KnownOpProvider opProvider) th\n         DataBag values = (DataBag)input.get(0);\n         // if we were handed an empty bag, return NULL\n         // this is in compliance with SQL standard\n-        if(values.size() == 0) {\n+        if(values == null || values.size() == 0) {\n             return null;\n         }\n         int sofar = AlgebraicIntMathBase.getSeed(opProvider.getOp());",
                "deletions": 1
            },
            {
                "sha": "38674b25345a0d3352653ad191839ad5561c036d",
                "filename": "src/org/apache/pig/builtin/AlgebraicLongMathBase.java",
                "blob_url": "https://github.com/apache/pig/blob/23e1cd0946b2b0ea4283d50dac0d6ec504308097/src/org/apache/pig/builtin/AlgebraicLongMathBase.java",
                "raw_url": "https://github.com/apache/pig/raw/23e1cd0946b2b0ea4283d50dac0d6ec504308097/src/org/apache/pig/builtin/AlgebraicLongMathBase.java",
                "status": "modified",
                "changes": 2,
                "additions": 1,
                "contents_url": "https://api.github.com/repos/apache/pig/contents/src/org/apache/pig/builtin/AlgebraicLongMathBase.java?ref=23e1cd0946b2b0ea4283d50dac0d6ec504308097",
                "patch": "@@ -64,7 +64,7 @@ protected static Long doTupleWork(Tuple input, KnownOpProvider opProvider) throw\n         DataBag values = (DataBag)input.get(0);\n         // if we were handed an empty bag, return NULL\n         // this is in compliance with SQL standard\n-        if(values.size() == 0) {\n+        if(values == null || values.size() == 0) {\n             return null;\n         }\n         Long sofar = AlgebraicLongMathBase.getSeed(opProvider.getOp());",
                "deletions": 1
            },
            {
                "sha": "f9452aef3105b49d9401966d62d4da301ec36590",
                "filename": "src/org/apache/pig/builtin/BigDecimalAvg.java",
                "blob_url": "https://github.com/apache/pig/blob/23e1cd0946b2b0ea4283d50dac0d6ec504308097/src/org/apache/pig/builtin/BigDecimalAvg.java",
                "raw_url": "https://github.com/apache/pig/raw/23e1cd0946b2b0ea4283d50dac0d6ec504308097/src/org/apache/pig/builtin/BigDecimalAvg.java",
                "status": "modified",
                "changes": 9,
                "additions": 6,
                "contents_url": "https://api.github.com/repos/apache/pig/contents/src/org/apache/pig/builtin/BigDecimalAvg.java?ref=23e1cd0946b2b0ea4283d50dac0d6ec504308097",
                "patch": "@@ -18,20 +18,20 @@\n package org.apache.pig.builtin;\n \n import java.io.IOException;\n-import java.util.Iterator;\n import java.math.BigDecimal;\n import java.math.MathContext;\n+import java.util.Iterator;\n \n import org.apache.pig.Accumulator;\n import org.apache.pig.Algebraic;\n import org.apache.pig.EvalFunc;\n import org.apache.pig.PigException;\n+import org.apache.pig.backend.executionengine.ExecException;\n import org.apache.pig.data.DataBag;\n import org.apache.pig.data.DataType;\n import org.apache.pig.data.Tuple;\n import org.apache.pig.data.TupleFactory;\n import org.apache.pig.impl.logicalLayer.schema.Schema;\n-import org.apache.pig.backend.executionengine.ExecException;\n \n \n /**\n@@ -61,14 +61,17 @@ public BigDecimal exec(Tuple input) throws IOException {\n         }\n     }\n \n+    @Override\n     public String getInitial() {\n         return Initial.class.getName();\n     }\n \n+    @Override\n     public String getIntermed() {\n         return Intermediate.class.getName();\n     }\n \n+    @Override\n     public String getFinal() {\n         return Final.class.getName();\n     }\n@@ -199,7 +202,7 @@ static protected BigDecimal sum(Tuple input) throws ExecException, IOException {\n         DataBag values = (DataBag)input.get(0);\n \n         // if we were handed an empty bag, return NULL\n-        if(values.size() == 0) {\n+        if(values == null || values.size() == 0) {\n             return null;\n         }\n ",
                "deletions": 3
            },
            {
                "sha": "a388adb83dca6fecf92c343ade401952738209c9",
                "filename": "src/org/apache/pig/builtin/BigIntegerAvg.java",
                "blob_url": "https://github.com/apache/pig/blob/23e1cd0946b2b0ea4283d50dac0d6ec504308097/src/org/apache/pig/builtin/BigIntegerAvg.java",
                "raw_url": "https://github.com/apache/pig/raw/23e1cd0946b2b0ea4283d50dac0d6ec504308097/src/org/apache/pig/builtin/BigIntegerAvg.java",
                "status": "modified",
                "changes": 9,
                "additions": 6,
                "contents_url": "https://api.github.com/repos/apache/pig/contents/src/org/apache/pig/builtin/BigIntegerAvg.java?ref=23e1cd0946b2b0ea4283d50dac0d6ec504308097",
                "patch": "@@ -18,21 +18,21 @@\n package org.apache.pig.builtin;\n \n import java.io.IOException;\n-import java.util.Iterator;\n import java.math.BigDecimal;\n import java.math.BigInteger;\n import java.math.MathContext;\n+import java.util.Iterator;\n \n import org.apache.pig.Accumulator;\n import org.apache.pig.Algebraic;\n import org.apache.pig.EvalFunc;\n import org.apache.pig.PigException;\n+import org.apache.pig.backend.executionengine.ExecException;\n import org.apache.pig.data.DataBag;\n import org.apache.pig.data.DataType;\n import org.apache.pig.data.Tuple;\n import org.apache.pig.data.TupleFactory;\n import org.apache.pig.impl.logicalLayer.schema.Schema;\n-import org.apache.pig.backend.executionengine.ExecException;\n \n \n /**\n@@ -62,14 +62,17 @@ public BigDecimal exec(Tuple input) throws IOException {\n         }\n     }\n \n+    @Override\n     public String getInitial() {\n         return Initial.class.getName();\n     }\n \n+    @Override\n     public String getIntermed() {\n         return Intermediate.class.getName();\n     }\n \n+    @Override\n     public String getFinal() {\n         return Final.class.getName();\n     }\n@@ -201,7 +204,7 @@ static protected BigInteger sum(Tuple input) throws ExecException, IOException {\n         DataBag values = (DataBag)input.get(0);\n \n         // if we were handed an empty bag, return NULL\n-        if (values.size() == 0) {\n+        if (values == null || values.size() == 0) {\n             return null;\n         }\n ",
                "deletions": 3
            },
            {
                "sha": "ce08bc4aab9abc097951304c7435f2068b22332c",
                "filename": "src/org/apache/pig/builtin/DateTimeMax.java",
                "blob_url": "https://github.com/apache/pig/blob/23e1cd0946b2b0ea4283d50dac0d6ec504308097/src/org/apache/pig/builtin/DateTimeMax.java",
                "raw_url": "https://github.com/apache/pig/raw/23e1cd0946b2b0ea4283d50dac0d6ec504308097/src/org/apache/pig/builtin/DateTimeMax.java",
                "status": "modified",
                "changes": 10,
                "additions": 6,
                "contents_url": "https://api.github.com/repos/apache/pig/contents/src/org/apache/pig/builtin/DateTimeMax.java?ref=23e1cd0946b2b0ea4283d50dac0d6ec504308097",
                "patch": "@@ -20,8 +20,6 @@\n import java.io.IOException;\n import java.util.Iterator;\n \n-import org.joda.time.DateTime;\n-\n import org.apache.pig.Accumulator;\n import org.apache.pig.Algebraic;\n import org.apache.pig.EvalFunc;\n@@ -32,6 +30,7 @@\n import org.apache.pig.data.Tuple;\n import org.apache.pig.data.TupleFactory;\n import org.apache.pig.impl.logicalLayer.schema.Schema;\n+import org.joda.time.DateTime;\n \n /**\n  * This method should never be used directly, use {@link MAX}.\n@@ -47,14 +46,17 @@ public DateTime exec(Tuple input) throws IOException {\n         }\n     }\n \n+    @Override\n     public String getInitial() {\n         return Initial.class.getName();\n     }\n \n+    @Override\n     public String getIntermed() {\n         return Intermediate.class.getName();\n     }\n \n+    @Override\n     public String getFinal() {\n         return Final.class.getName();\n     }\n@@ -120,7 +122,7 @@ static protected DateTime max(Tuple input) throws ExecException {\n \n         // if we were handed an empty bag, return NULL\n         // this is in compliance with SQL standard\n-        if(values.size() == 0) {\n+        if(values == null || values.size() == 0) {\n             return null;\n         }\n \n@@ -153,7 +155,7 @@ static protected DateTime max(Tuple input) throws ExecException {\n \n     @Override\n     public Schema outputSchema(Schema input) {\n-        return new Schema(new Schema.FieldSchema(null, DataType.DATETIME)); \n+        return new Schema(new Schema.FieldSchema(null, DataType.DATETIME));\n     }\n \n ",
                "deletions": 4
            },
            {
                "sha": "20739e1a8fd0b4783c357aee7240ddb14e722afa",
                "filename": "src/org/apache/pig/builtin/DateTimeMin.java",
                "blob_url": "https://github.com/apache/pig/blob/23e1cd0946b2b0ea4283d50dac0d6ec504308097/src/org/apache/pig/builtin/DateTimeMin.java",
                "raw_url": "https://github.com/apache/pig/raw/23e1cd0946b2b0ea4283d50dac0d6ec504308097/src/org/apache/pig/builtin/DateTimeMin.java",
                "status": "modified",
                "changes": 8,
                "additions": 5,
                "contents_url": "https://api.github.com/repos/apache/pig/contents/src/org/apache/pig/builtin/DateTimeMin.java?ref=23e1cd0946b2b0ea4283d50dac0d6ec504308097",
                "patch": "@@ -20,8 +20,6 @@\n import java.io.IOException;\n import java.util.Iterator;\n \n-import org.joda.time.DateTime;\n-\n import org.apache.pig.Accumulator;\n import org.apache.pig.Algebraic;\n import org.apache.pig.EvalFunc;\n@@ -32,6 +30,7 @@\n import org.apache.pig.data.Tuple;\n import org.apache.pig.data.TupleFactory;\n import org.apache.pig.impl.logicalLayer.schema.Schema;\n+import org.joda.time.DateTime;\n \n /**\n  * This method should never be used directly, use {@link MAX}.\n@@ -47,14 +46,17 @@ public DateTime exec(Tuple input) throws IOException {\n         }\n     }\n \n+    @Override\n     public String getInitial() {\n         return Initial.class.getName();\n     }\n \n+    @Override\n     public String getIntermed() {\n         return Intermediate.class.getName();\n     }\n \n+    @Override\n     public String getFinal() {\n         return Final.class.getName();\n     }\n@@ -120,7 +122,7 @@ static protected DateTime min(Tuple input) throws ExecException {\n \n         // if we were handed an empty bag, return NULL\n         // this is in compliance with SQL standard\n-        if(values.size() == 0) {\n+        if(values == null || values.size() == 0) {\n             return null;\n         }\n ",
                "deletions": 3
            },
            {
                "sha": "8ae937ca542c56955fae215f0ffb54693a2456b4",
                "filename": "src/org/apache/pig/builtin/DoubleAvg.java",
                "blob_url": "https://github.com/apache/pig/blob/23e1cd0946b2b0ea4283d50dac0d6ec504308097/src/org/apache/pig/builtin/DoubleAvg.java",
                "raw_url": "https://github.com/apache/pig/raw/23e1cd0946b2b0ea4283d50dac0d6ec504308097/src/org/apache/pig/builtin/DoubleAvg.java",
                "status": "modified",
                "changes": 46,
                "additions": 23,
                "contents_url": "https://api.github.com/repos/apache/pig/contents/src/org/apache/pig/builtin/DoubleAvg.java?ref=23e1cd0946b2b0ea4283d50dac0d6ec504308097",
                "patch": "@@ -18,28 +18,25 @@\n package org.apache.pig.builtin;\n \n import java.io.IOException;\n-import java.util.HashMap;\n import java.util.Iterator;\n \n import org.apache.pig.Accumulator;\n import org.apache.pig.Algebraic;\n import org.apache.pig.EvalFunc;\n-import org.apache.pig.FuncSpec;\n import org.apache.pig.PigException;\n+import org.apache.pig.backend.executionengine.ExecException;\n import org.apache.pig.data.DataBag;\n import org.apache.pig.data.DataType;\n import org.apache.pig.data.Tuple;\n import org.apache.pig.data.TupleFactory;\n-import org.apache.pig.impl.logicalLayer.FrontendException;\n import org.apache.pig.impl.logicalLayer.schema.Schema;\n-import org.apache.pig.backend.executionengine.ExecException;\n \n \n /**\n  * This method should never be used directly, use {@link AVG}.\n  */\n public class DoubleAvg extends EvalFunc<Double> implements Algebraic, Accumulator<Double> {\n-    \n+\n     private static TupleFactory mTupleFactory = TupleFactory.getInstance();\n \n     @Override\n@@ -56,21 +53,24 @@ public Double exec(Tuple input) throws IOException {\n             Double avg = null;\n             if (count > 0)\n                 avg = new Double(sum / count);\n-    \n+\n             return avg;\n         } catch (ExecException ee) {\n             throw ee;\n         }\n     }\n \n+    @Override\n     public String getInitial() {\n         return Initial.class.getName();\n     }\n \n+    @Override\n     public String getIntermed() {\n         return Intermediate.class.getName();\n     }\n \n+    @Override\n     public String getFinal() {\n         return Final.class.getName();\n     }\n@@ -91,7 +91,7 @@ public Tuple exec(Tuple input) throws IOException {\n                 t.set(0, d);\n                 if (d != null){\n                     t.set(1, 1L);\n-                }else{    \n+                } else {\n                     t.set(1, 0L);\n                 }\n                 return t;\n@@ -100,9 +100,9 @@ public Tuple exec(Tuple input) throws IOException {\n             } catch (Exception e) {\n                 int errCode = 2106;\n                 String msg = \"Error while computing average in \" + this.getClass().getSimpleName();\n-                throw new ExecException(msg, errCode, PigException.BUG, e);           \n+                throw new ExecException(msg, errCode, PigException.BUG, e);\n             }\n-                \n+\n         }\n     }\n \n@@ -117,7 +117,7 @@ public Tuple exec(Tuple input) throws IOException {\n             } catch (Exception e) {\n                 int errCode = 2106;\n                 String msg = \"Error while computing average in \" + this.getClass().getSimpleName();\n-                throw new ExecException(msg, errCode, PigException.BUG, e);            \n+                throw new ExecException(msg, errCode, PigException.BUG, e);\n             }\n         }\n     }\n@@ -145,7 +145,7 @@ public Double exec(Tuple input) throws IOException {\n             } catch (Exception e) {\n                 int errCode = 2106;\n                 String msg = \"Error while computing average in \" + this.getClass().getSimpleName();\n-                throw new ExecException(msg, errCode, PigException.BUG, e);            \n+                throw new ExecException(msg, errCode, PigException.BUG, e);\n             }\n         }\n     }\n@@ -166,7 +166,7 @@ static protected Tuple combine(DataBag values) throws ExecException {\n             Tuple t = it.next();\n             Double d = (Double)t.get(0);\n             // we count nulls in avg as contributing 0\n-            // a departure from SQL for performance of \n+            // a departure from SQL for performance of\n             // COUNT() which implemented by just inspecting\n             // size of the bag\n             if(d == null) {\n@@ -200,9 +200,9 @@ static protected long count(Tuple input) throws ExecException {\n \n     static protected Double sum(Tuple input) throws ExecException, IOException {\n         DataBag values = (DataBag)input.get(0);\n-        \n+\n         // if we were handed an empty bag, return NULL\n-        if(values.size() == 0) {\n+        if(values == null || values.size() == 0) {\n             return null;\n         }\n \n@@ -228,17 +228,17 @@ static protected Double sum(Tuple input) throws ExecException, IOException {\n             return null;\n         }\n     }\n-    \n+\n     @Override\n     public Schema outputSchema(Schema input) {\n-        return new Schema(new Schema.FieldSchema(null, DataType.DOUBLE)); \n+        return new Schema(new Schema.FieldSchema(null, DataType.DOUBLE));\n     }\n-    \n+\n     /* Accumulator interface */\n-    \n+\n     private Double intermediateSum = null;\n     private Double intermediateCount = null;\n-    \n+\n     @Override\n     public void accumulate(Tuple b) throws IOException {\n         try {\n@@ -251,7 +251,7 @@ public void accumulate(Tuple b) throws IOException {\n                 intermediateSum = 0.0;\n                 intermediateCount = 0.0;\n             }\n-            \n+\n             double count = (Long)count(b);\n \n             if (count > 0) {\n@@ -263,9 +263,9 @@ public void accumulate(Tuple b) throws IOException {\n         } catch (Exception e) {\n             int errCode = 2106;\n             String msg = \"Error while computing average in \" + this.getClass().getSimpleName();\n-            throw new ExecException(msg, errCode, PigException.BUG, e);           \n+            throw new ExecException(msg, errCode, PigException.BUG, e);\n         }\n-    }        \n+    }\n \n     @Override\n     public void cleanup() {\n@@ -280,5 +280,5 @@ public Double getValue() {\n             avg = new Double(intermediateSum / intermediateCount);\n         }\n         return avg;\n-    }    \n+    }\n }",
                "deletions": 23
            },
            {
                "sha": "ddf0b127798ff9090f10ff3fdc59997a085d916d",
                "filename": "src/org/apache/pig/builtin/FloatAvg.java",
                "blob_url": "https://github.com/apache/pig/blob/23e1cd0946b2b0ea4283d50dac0d6ec504308097/src/org/apache/pig/builtin/FloatAvg.java",
                "raw_url": "https://github.com/apache/pig/raw/23e1cd0946b2b0ea4283d50dac0d6ec504308097/src/org/apache/pig/builtin/FloatAvg.java",
                "status": "modified",
                "changes": 39,
                "additions": 21,
                "contents_url": "https://api.github.com/repos/apache/pig/contents/src/org/apache/pig/builtin/FloatAvg.java?ref=23e1cd0946b2b0ea4283d50dac0d6ec504308097",
                "patch": "@@ -24,19 +24,19 @@\n import org.apache.pig.Algebraic;\n import org.apache.pig.EvalFunc;\n import org.apache.pig.PigException;\n+import org.apache.pig.backend.executionengine.ExecException;\n import org.apache.pig.data.DataBag;\n import org.apache.pig.data.DataType;\n import org.apache.pig.data.Tuple;\n import org.apache.pig.data.TupleFactory;\n import org.apache.pig.impl.logicalLayer.schema.Schema;\n-import org.apache.pig.backend.executionengine.ExecException;\n \n \n /**\n  * This method should never be used directly, use {@link AVG}.\n  */\n public class FloatAvg extends EvalFunc<Double> implements Algebraic, Accumulator<Double> {\n-    \n+\n     private static TupleFactory mTupleFactory = TupleFactory.getInstance();\n \n     @Override\n@@ -53,21 +53,24 @@ public Double exec(Tuple input) throws IOException {\n             Double avg = null;\n             if (count > 0)\n                 avg = new Double(sum / count);\n-    \n+\n             return avg;\n         } catch (ExecException ee) {\n             throw ee;\n         }\n     }\n \n+    @Override\n     public String getInitial() {\n         return Initial.class.getName();\n     }\n \n+    @Override\n     public String getIntermed() {\n         return Intermediate.class.getName();\n     }\n \n+    @Override\n     public String getFinal() {\n         return Final.class.getName();\n     }\n@@ -96,9 +99,9 @@ public Tuple exec(Tuple input) throws IOException {\n             } catch (Exception e) {\n                 int errCode = 2106;\n                 String msg = \"Error while computing average in \" + this.getClass().getSimpleName();\n-                throw new ExecException(msg, errCode, PigException.BUG, e);           \n+                throw new ExecException(msg, errCode, PigException.BUG, e);\n             }\n-                \n+\n         }\n     }\n \n@@ -113,7 +116,7 @@ public Tuple exec(Tuple input) throws IOException {\n             } catch (Exception e) {\n                 int errCode = 2106;\n                 String msg = \"Error while computing average in \" + this.getClass().getSimpleName();\n-                throw new ExecException(msg, errCode, PigException.BUG, e);           \n+                throw new ExecException(msg, errCode, PigException.BUG, e);\n             }\n         }\n     }\n@@ -141,7 +144,7 @@ public Double exec(Tuple input) throws IOException {\n             } catch (Exception e) {\n                 int errCode = 2106;\n                 String msg = \"Error while computing average in \" + this.getClass().getSimpleName();\n-                throw new ExecException(msg, errCode, PigException.BUG, e);           \n+                throw new ExecException(msg, errCode, PigException.BUG, e);\n             }\n         }\n     }\n@@ -162,7 +165,7 @@ static protected Tuple combine(DataBag values) throws ExecException {\n             Tuple t = it.next();\n             Double d = (Double)t.get(0);\n             // we count nulls in avg as contributing 0\n-            // a departure from SQL for performance of \n+            // a departure from SQL for performance of\n             // COUNT() which implemented by just inspecting\n             // size of the bag\n             if(d == null) {\n@@ -199,7 +202,7 @@ static protected Double sum(Tuple input) throws ExecException, IOException {\n         DataBag values = (DataBag)input.get(0);\n \n         // if we were handed an empty bag, return NULL\n-        if(values.size() == 0) {\n+        if(values == null || values.size() == 0) {\n             return null;\n         }\n \n@@ -225,17 +228,17 @@ static protected Double sum(Tuple input) throws ExecException, IOException {\n             return null;\n         }\n     }\n-    \n+\n     @Override\n     public Schema outputSchema(Schema input) {\n-        return new Schema(new Schema.FieldSchema(null, DataType.DOUBLE)); \n+        return new Schema(new Schema.FieldSchema(null, DataType.DOUBLE));\n     }\n-    \n+\n     /* Accumulator interface */\n \n     private Double intermediateSum = null;\n     private Double intermediateCount = null;\n-    \n+\n     @Override\n     public void accumulate(Tuple b) throws IOException {\n         try {\n@@ -248,9 +251,9 @@ public void accumulate(Tuple b) throws IOException {\n                 intermediateSum = 0.0;\n                 intermediateCount = 0.0;\n             }\n-            \n+\n             double count = (Long)count(b);\n-            \n+\n             if (count > 0) {\n                 intermediateCount += count;\n                 intermediateSum += sum;\n@@ -260,9 +263,9 @@ public void accumulate(Tuple b) throws IOException {\n         } catch (Exception e) {\n             int errCode = 2106;\n             String msg = \"Error while computing average in \" + this.getClass().getSimpleName();\n-            throw new ExecException(msg, errCode, PigException.BUG, e);           \n+            throw new ExecException(msg, errCode, PigException.BUG, e);\n         }\n-    }        \n+    }\n \n     @Override\n     public void cleanup() {\n@@ -277,6 +280,6 @@ public Double getValue() {\n             avg = new Double(intermediateSum / intermediateCount);\n         }\n         return avg;\n-    }    \n+    }\n \n }",
                "deletions": 18
            },
            {
                "sha": "7e224c6e33a484f01958cc982192d1276443387e",
                "filename": "src/org/apache/pig/builtin/IntAvg.java",
                "blob_url": "https://github.com/apache/pig/blob/23e1cd0946b2b0ea4283d50dac0d6ec504308097/src/org/apache/pig/builtin/IntAvg.java",
                "raw_url": "https://github.com/apache/pig/raw/23e1cd0946b2b0ea4283d50dac0d6ec504308097/src/org/apache/pig/builtin/IntAvg.java",
                "status": "modified",
                "changes": 37,
                "additions": 20,
                "contents_url": "https://api.github.com/repos/apache/pig/contents/src/org/apache/pig/builtin/IntAvg.java?ref=23e1cd0946b2b0ea4283d50dac0d6ec504308097",
                "patch": "@@ -24,19 +24,19 @@\n import org.apache.pig.Algebraic;\n import org.apache.pig.EvalFunc;\n import org.apache.pig.PigException;\n+import org.apache.pig.backend.executionengine.ExecException;\n import org.apache.pig.data.DataBag;\n import org.apache.pig.data.DataType;\n import org.apache.pig.data.Tuple;\n import org.apache.pig.data.TupleFactory;\n import org.apache.pig.impl.logicalLayer.schema.Schema;\n-import org.apache.pig.backend.executionengine.ExecException;\n \n \n /**\n  * This method should never be used directly, use {@link AVG}.\n  */\n public class IntAvg extends EvalFunc<Double> implements Algebraic, Accumulator<Double> {\n-    \n+\n     private static TupleFactory mTupleFactory = TupleFactory.getInstance();\n \n     @Override\n@@ -53,29 +53,32 @@ public Double exec(Tuple input) throws IOException {\n             Double avg = null;\n             if (count > 0)\n                 avg = new Double(sum / count);\n-    \n+\n             return avg;\n         } catch (ExecException ee) {\n             throw ee;\n         }\n     }\n \n+    @Override\n     public String getInitial() {\n         return Initial.class.getName();\n     }\n \n+    @Override\n     public String getIntermed() {\n         return Intermediate.class.getName();\n     }\n \n+    @Override\n     public String getFinal() {\n         return Final.class.getName();\n     }\n \n     static public class Initial extends EvalFunc<Tuple> {\n         @Override\n         public Tuple exec(Tuple input) throws IOException {\n-            \n+\n             try {\n                 Tuple t = mTupleFactory.newTuple(2);\n                 // input is a bag with one tuple containing\n@@ -97,9 +100,9 @@ public Tuple exec(Tuple input) throws IOException {\n             } catch (Exception e) {\n                 int errCode = 2106;\n                 String msg = \"Error while computing average in \" + this.getClass().getSimpleName();\n-                throw new ExecException(msg, errCode, PigException.BUG, e);           \n+                throw new ExecException(msg, errCode, PigException.BUG, e);\n             }\n-                \n+\n         }\n     }\n \n@@ -114,7 +117,7 @@ public Tuple exec(Tuple input) throws IOException {\n             } catch (Exception e) {\n                 int errCode = 2106;\n                 String msg = \"Error while computing average in \" + this.getClass().getSimpleName();\n-                throw new ExecException(msg, errCode, PigException.BUG, e);           \n+                throw new ExecException(msg, errCode, PigException.BUG, e);\n             }\n         }\n     }\n@@ -142,7 +145,7 @@ public Double exec(Tuple input) throws IOException {\n             } catch (Exception e) {\n                 int errCode = 2106;\n                 String msg = \"Error while computing average in \" + this.getClass().getSimpleName();\n-                throw new ExecException(msg, errCode, PigException.BUG, e);           \n+                throw new ExecException(msg, errCode, PigException.BUG, e);\n             }\n         }\n     }\n@@ -163,7 +166,7 @@ static protected Tuple combine(DataBag values) throws ExecException {\n             Tuple t = it.next();\n             Long l = (Long)t.get(0);\n             // we count nulls in avg as contributing 0\n-            // a departure from SQL for performance of \n+            // a departure from SQL for performance of\n             // COUNT() which implemented by just inspecting\n             // size of the bag\n             if(l == null) {\n@@ -200,7 +203,7 @@ static protected Long sum(Tuple input) throws ExecException, IOException {\n         DataBag values = (DataBag)input.get(0);\n \n         // if we were handed an empty bag, return NULL\n-        if(values.size() == 0) {\n+        if(values == null || values.size() == 0) {\n             return null;\n         }\n \n@@ -211,7 +214,7 @@ static protected Long sum(Tuple input) throws ExecException, IOException {\n             try {\n                 Integer i = (Integer)(t.get(0));\n                 // we count nulls in avg as contributing 0\n-                // a departure from SQL for performance of \n+                // a departure from SQL for performance of\n                 // COUNT() which implemented by just inspecting\n                 // size of the bag\n                 if (i == null) continue;\n@@ -230,17 +233,17 @@ static protected Long sum(Tuple input) throws ExecException, IOException {\n             return null;\n         }\n     }\n-    \n+\n     @Override\n     public Schema outputSchema(Schema input) {\n-        return new Schema(new Schema.FieldSchema(null, DataType.DOUBLE)); \n+        return new Schema(new Schema.FieldSchema(null, DataType.DOUBLE));\n     }\n \n     /* Accumulator interface */\n \n     private Long intermediateSum = null;\n     private Double intermediateCount = null;\n-    \n+\n     @Override\n     public void accumulate(Tuple b) throws IOException {\n         try {\n@@ -253,7 +256,7 @@ public void accumulate(Tuple b) throws IOException {\n                 intermediateSum = 0L;\n                 intermediateCount = 0.0;\n             }\n-            \n+\n             double count = (Long)count(b);\n \n             if (count > 0) {\n@@ -265,9 +268,9 @@ public void accumulate(Tuple b) throws IOException {\n         } catch (Exception e) {\n             int errCode = 2106;\n             String msg = \"Error while computing average in \" + this.getClass().getSimpleName();\n-            throw new ExecException(msg, errCode, PigException.BUG, e);           \n+            throw new ExecException(msg, errCode, PigException.BUG, e);\n         }\n-    }        \n+    }\n \n     @Override\n     public void cleanup() {",
                "deletions": 17
            },
            {
                "sha": "de16c957492d13399953e2f4714602b152c4133b",
                "filename": "src/org/apache/pig/builtin/LongAvg.java",
                "blob_url": "https://github.com/apache/pig/blob/23e1cd0946b2b0ea4283d50dac0d6ec504308097/src/org/apache/pig/builtin/LongAvg.java",
                "raw_url": "https://github.com/apache/pig/raw/23e1cd0946b2b0ea4283d50dac0d6ec504308097/src/org/apache/pig/builtin/LongAvg.java",
                "status": "modified",
                "changes": 37,
                "additions": 20,
                "contents_url": "https://api.github.com/repos/apache/pig/contents/src/org/apache/pig/builtin/LongAvg.java?ref=23e1cd0946b2b0ea4283d50dac0d6ec504308097",
                "patch": "@@ -24,19 +24,19 @@\n import org.apache.pig.Algebraic;\n import org.apache.pig.EvalFunc;\n import org.apache.pig.PigException;\n+import org.apache.pig.backend.executionengine.ExecException;\n import org.apache.pig.data.DataBag;\n import org.apache.pig.data.DataType;\n import org.apache.pig.data.Tuple;\n import org.apache.pig.data.TupleFactory;\n import org.apache.pig.impl.logicalLayer.schema.Schema;\n-import org.apache.pig.backend.executionengine.ExecException;\n \n \n /**\n  * This method should never be used directly, use {@link AVG}.\n  */\n public class LongAvg extends EvalFunc<Double> implements Algebraic, Accumulator<Double> {\n-    \n+\n     private static TupleFactory mTupleFactory = TupleFactory.getInstance();\n \n     @Override\n@@ -53,21 +53,24 @@ public Double exec(Tuple input) throws IOException {\n             Double avg = null;\n             if (count > 0)\n                 avg = new Double(sum / count);\n-    \n+\n             return avg;\n         } catch (ExecException ee) {\n             throw ee;\n         }\n     }\n \n+    @Override\n     public String getInitial() {\n         return Initial.class.getName();\n     }\n \n+    @Override\n     public String getIntermed() {\n         return Intermediate.class.getName();\n     }\n \n+    @Override\n     public String getFinal() {\n         return Final.class.getName();\n     }\n@@ -96,9 +99,9 @@ public Tuple exec(Tuple input) throws IOException {\n             } catch (Exception e) {\n                 int errCode = 2106;\n                 String msg = \"Error while computing average in \" + this.getClass().getSimpleName();\n-                throw new ExecException(msg, errCode, PigException.BUG, e);           \n+                throw new ExecException(msg, errCode, PigException.BUG, e);\n             }\n-                \n+\n         }\n     }\n \n@@ -113,7 +116,7 @@ public Tuple exec(Tuple input) throws IOException {\n             } catch (Exception e) {\n                 int errCode = 2106;\n                 String msg = \"Error while computing average in \" + this.getClass().getSimpleName();\n-                throw new ExecException(msg, errCode, PigException.BUG, e);           \n+                throw new ExecException(msg, errCode, PigException.BUG, e);\n             }\n         }\n     }\n@@ -141,7 +144,7 @@ public Double exec(Tuple input) throws IOException {\n             } catch (Exception e) {\n                 int errCode = 2106;\n                 String msg = \"Error while computing average in \" + this.getClass().getSimpleName();\n-                throw new ExecException(msg, errCode, PigException.BUG, e);           \n+                throw new ExecException(msg, errCode, PigException.BUG, e);\n             }\n         }\n     }\n@@ -162,7 +165,7 @@ static protected Tuple combine(DataBag values) throws ExecException {\n             Tuple t = it.next();\n             Long l = (Long)t.get(0);\n             // we count nulls in avg as contributing 0\n-            // a departure from SQL for performance of \n+            // a departure from SQL for performance of\n             // COUNT() which implemented by just inspecting\n             // size of the bag\n             if(l == null) {\n@@ -199,7 +202,7 @@ static protected Long sum(Tuple input) throws ExecException, IOException {\n         DataBag values = (DataBag)input.get(0);\n \n         // if we were handed an empty bag, return NULL\n-        if(values.size() == 0) {\n+        if(values == null || values.size() == 0) {\n             return null;\n         }\n \n@@ -225,17 +228,17 @@ static protected Long sum(Tuple input) throws ExecException, IOException {\n             return null;\n         }\n     }\n-    \n+\n     @Override\n     public Schema outputSchema(Schema input) {\n-        return new Schema(new Schema.FieldSchema(null, DataType.DOUBLE)); \n+        return new Schema(new Schema.FieldSchema(null, DataType.DOUBLE));\n     }\n-    \n+\n     /* Accumulator interface */\n-   \n+\n     private Long intermediateSum = null;\n     private Double intermediateCount = null;\n-    \n+\n     @Override\n     public void accumulate(Tuple b) throws IOException {\n         try {\n@@ -248,7 +251,7 @@ public void accumulate(Tuple b) throws IOException {\n                 intermediateSum = 0L;\n                 intermediateCount = 0.0;\n             }\n-            \n+\n             double count = (Long)count(b);\n \n             if (count > 0) {\n@@ -260,9 +263,9 @@ public void accumulate(Tuple b) throws IOException {\n         } catch (Exception e) {\n             int errCode = 2106;\n             String msg = \"Error while computing average in \" + this.getClass().getSimpleName();\n-            throw new ExecException(msg, errCode, PigException.BUG, e);           \n+            throw new ExecException(msg, errCode, PigException.BUG, e);\n         }\n-    }        \n+    }\n \n     @Override\n     public void cleanup() {",
                "deletions": 17
            },
            {
                "sha": "788bc779e53172b4954d062af9a7bbfc40beba1a",
                "filename": "src/org/apache/pig/builtin/StringMax.java",
                "blob_url": "https://github.com/apache/pig/blob/23e1cd0946b2b0ea4283d50dac0d6ec504308097/src/org/apache/pig/builtin/StringMax.java",
                "raw_url": "https://github.com/apache/pig/raw/23e1cd0946b2b0ea4283d50dac0d6ec504308097/src/org/apache/pig/builtin/StringMax.java",
                "status": "modified",
                "changes": 27,
                "additions": 15,
                "contents_url": "https://api.github.com/repos/apache/pig/contents/src/org/apache/pig/builtin/StringMax.java?ref=23e1cd0946b2b0ea4283d50dac0d6ec504308097",
                "patch": "@@ -45,14 +45,17 @@ public String exec(Tuple input) throws IOException {\n         }\n     }\n \n+    @Override\n     public String getInitial() {\n         return Initial.class.getName();\n     }\n \n+    @Override\n     public String getIntermed() {\n         return Intermediate.class.getName();\n     }\n \n+    @Override\n     public String getFinal() {\n         return Final.class.getName();\n     }\n@@ -77,7 +80,7 @@ public Tuple exec(Tuple input) throws IOException {\n             } catch (Exception e) {\n                 int errCode = 2106;\n                 String msg = \"Error while computing max in \" + this.getClass().getSimpleName();\n-                throw new ExecException(msg, errCode, PigException.BUG, e);           \n+                throw new ExecException(msg, errCode, PigException.BUG, e);\n             }\n         }\n     }\n@@ -94,7 +97,7 @@ public Tuple exec(Tuple input) throws IOException {\n             } catch (Exception e) {\n                 int errCode = 2106;\n                 String msg = \"Error while computing max in \" + this.getClass().getSimpleName();\n-                throw new ExecException(msg, errCode, PigException.BUG, e);           \n+                throw new ExecException(msg, errCode, PigException.BUG, e);\n             }\n         }\n     }\n@@ -108,17 +111,17 @@ public String exec(Tuple input) throws IOException {\n             } catch (Exception e) {\n                 int errCode = 2106;\n                 String msg = \"Error while computing max in \" + this.getClass().getSimpleName();\n-                throw new ExecException(msg, errCode, PigException.BUG, e);           \n+                throw new ExecException(msg, errCode, PigException.BUG, e);\n             }\n         }\n     }\n \n     static protected String max(Tuple input) throws ExecException {\n         DataBag values = (DataBag)input.get(0);\n-        \n+\n         // if we were handed an empty bag, return NULL\n         // this is in compliance with SQL standard\n-        if(values.size() == 0) {\n+        if(values == null || values.size() == 0) {\n             return null;\n         }\n \n@@ -129,7 +132,7 @@ static protected String max(Tuple input) throws ExecException {\n             Tuple t = it.next();\n             curMax = (String)(t.get(0));\n         }\n-        \n+\n         for (; it.hasNext();) {\n             Tuple t = it.next();\n             try {\n@@ -138,26 +141,26 @@ static protected String max(Tuple input) throws ExecException {\n                 if( s.compareTo(curMax) > 0) {\n                     curMax = s;\n                 }\n-                \n+\n             } catch (RuntimeException exp) {\n                 int errCode = 2103;\n                 String msg = \"Problem while computing max of strings.\";\n                 throw new ExecException(msg, errCode, PigException.BUG, exp);\n             }\n         }\n-    \n+\n         return curMax;\n     }\n \n     @Override\n     public Schema outputSchema(Schema input) {\n-        return new Schema(new Schema.FieldSchema(null, DataType.CHARARRAY)); \n+        return new Schema(new Schema.FieldSchema(null, DataType.CHARARRAY));\n     }\n \n \n     /* accumulator interface */\n     private String intermediateMax = null;\n-    \n+\n     @Override\n     public void accumulate(Tuple b) throws IOException {\n         try {\n@@ -168,14 +171,14 @@ public void accumulate(Tuple b) throws IOException {\n             // check if it lexicographically follows curMax\n             if (intermediateMax == null || intermediateMax.compareTo(curMax) < 0) {\n                 intermediateMax = curMax;\n-            }            \n+            }\n \n         } catch (ExecException ee) {\n             throw ee;\n         } catch (Exception e) {\n             int errCode = 2106;\n             String msg = \"Error while computing max in \" + this.getClass().getSimpleName();\n-            throw new ExecException(msg, errCode, PigException.BUG, e);           \n+            throw new ExecException(msg, errCode, PigException.BUG, e);\n         }\n     }\n ",
                "deletions": 12
            },
            {
                "sha": "f71c2eb4494ec42eb6f832e62e51a7b62b9b4356",
                "filename": "src/org/apache/pig/builtin/StringMin.java",
                "blob_url": "https://github.com/apache/pig/blob/23e1cd0946b2b0ea4283d50dac0d6ec504308097/src/org/apache/pig/builtin/StringMin.java",
                "raw_url": "https://github.com/apache/pig/raw/23e1cd0946b2b0ea4283d50dac0d6ec504308097/src/org/apache/pig/builtin/StringMin.java",
                "status": "modified",
                "changes": 29,
                "additions": 16,
                "contents_url": "https://api.github.com/repos/apache/pig/contents/src/org/apache/pig/builtin/StringMin.java?ref=23e1cd0946b2b0ea4283d50dac0d6ec504308097",
                "patch": "@@ -46,14 +46,17 @@ public String exec(Tuple input) throws IOException {\n         }\n     }\n \n+    @Override\n     public String getInitial() {\n         return Initial.class.getName();\n     }\n \n+    @Override\n     public String getIntermed() {\n         return Intermediate.class.getName();\n     }\n \n+    @Override\n     public String getFinal() {\n         return Final.class.getName();\n     }\n@@ -78,7 +81,7 @@ public Tuple exec(Tuple input) throws IOException {\n             } catch (Exception e) {\n                 int errCode = 2106;\n                 String msg = \"Error while computing min in \" + this.getClass().getSimpleName();\n-                throw new ExecException(msg, errCode, PigException.BUG, e);           \n+                throw new ExecException(msg, errCode, PigException.BUG, e);\n             }\n         }\n     }\n@@ -95,7 +98,7 @@ public Tuple exec(Tuple input) throws IOException {\n             } catch (Exception e) {\n                 int errCode = 2106;\n                 String msg = \"Error while computing min in \" + this.getClass().getSimpleName();\n-                throw new ExecException(msg, errCode, PigException.BUG, e);           \n+                throw new ExecException(msg, errCode, PigException.BUG, e);\n             }\n         }\n     }\n@@ -109,17 +112,17 @@ public String exec(Tuple input) throws IOException {\n             } catch (Exception e) {\n                 int errCode = 2106;\n                 String msg = \"Error while computing min in \" + this.getClass().getSimpleName();\n-                throw new ExecException(msg, errCode, PigException.BUG, e);           \n+                throw new ExecException(msg, errCode, PigException.BUG, e);\n             }\n         }\n     }\n \n     static protected String min(Tuple input) throws ExecException {\n         DataBag values = (DataBag)input.get(0);\n-        \n+\n         // if we were handed an empty bag, return NULL\n         // this is in compliance with SQL standard\n-        if(values.size() == 0) {\n+        if(values == null || values.size() == 0) {\n             return null;\n         }\n \n@@ -130,7 +133,7 @@ static protected String min(Tuple input) throws ExecException {\n             Tuple t = it.next();\n             curMin = (String)(t.get(0));\n         }\n-        \n+\n         for (; it.hasNext();) {\n             Tuple t = it.next();\n             try {\n@@ -139,25 +142,25 @@ static protected String min(Tuple input) throws ExecException {\n                 if( s.compareTo(curMin) < 0) {\n                     curMin = s;\n                 }\n-                \n+\n             } catch (RuntimeException exp) {\n                 int errCode = 2103;\n                 String msg = \"Problem while computing min of strings.\";\n                 throw new ExecException(msg, errCode, PigException.BUG, exp);\n             }\n         }\n-    \n+\n         return curMin;\n     }\n \n     @Override\n     public Schema outputSchema(Schema input) {\n-        return new Schema(new Schema.FieldSchema(null, DataType.CHARARRAY)); \n+        return new Schema(new Schema.FieldSchema(null, DataType.CHARARRAY));\n     }\n-    \n+\n     /* accumulator interface */\n     private String intermediateMin = null;\n-    \n+\n     @Override\n     public void accumulate(Tuple b) throws IOException {\n         try {\n@@ -168,14 +171,14 @@ public void accumulate(Tuple b) throws IOException {\n             // check if it lexicographically follows curMax\n             if (intermediateMin == null || intermediateMin.compareTo(curMin) > 0) {\n                 intermediateMin = curMin;\n-            }            \n+            }\n \n         } catch (ExecException ee) {\n             throw ee;\n         } catch (Exception e) {\n             int errCode = 2106;\n             String msg = \"Error while computing max in \" + this.getClass().getSimpleName();\n-            throw new ExecException(msg, errCode, PigException.BUG, e);           \n+            throw new ExecException(msg, errCode, PigException.BUG, e);\n         }\n     }\n ",
                "deletions": 13
            },
            {
                "sha": "50afa26f2d32be15fad3b50203190c4dfc955074",
                "filename": "test/org/apache/pig/test/TestBuiltin.java",
                "blob_url": "https://github.com/apache/pig/blob/23e1cd0946b2b0ea4283d50dac0d6ec504308097/test/org/apache/pig/test/TestBuiltin.java",
                "raw_url": "https://github.com/apache/pig/raw/23e1cd0946b2b0ea4283d50dac0d6ec504308097/test/org/apache/pig/test/TestBuiltin.java",
                "status": "modified",
                "changes": 19,
                "additions": 18,
                "contents_url": "https://api.github.com/repos/apache/pig/contents/test/org/apache/pig/test/TestBuiltin.java?ref=23e1cd0946b2b0ea4283d50dac0d6ec504308097",
                "patch": "@@ -143,6 +143,8 @@\n     private TupleFactory tupleFactory = TupleFactory.getInstance();\n     private BagFactory bagFactory = DefaultBagFactory.getInstance();\n \n+    private static Tuple NULL_INPUT_TUPLE;\n+\n     // some inputs\n     private static Integer[] intInput = { 3, 1, 2, 4, 5, 7, null, 6, 8, 9, 10 };\n     private static Long[] intAsLong = { 3L, 1L, 2L, 4L, 5L, 7L, null, 6L, 8L, 9L, 10L };\n@@ -222,6 +224,9 @@ public void setUp() throws Exception {\n         // first set up EvalFuncMap and expectedMap\n         setupEvalFuncMap();\n \n+        NULL_INPUT_TUPLE = TupleFactory.getInstance().newTuple(1);\n+        NULL_INPUT_TUPLE.set(0, null);\n+\n         expectedMap.put(\"SUM\", new Double(55));\n         expectedMap.put(\"DoubleSum\", new Double(170.567391834593));\n         expectedMap.put(\"IntSum\", new Long(55));\n@@ -955,6 +960,9 @@ public void testAVG() throws Exception {\n             } else {\n                 assertEquals(msg, (Double)output, (Double)getExpected(avgTypes[k]), 0.00001);\n             }\n+\n+            // Check null input\n+            assertNull(avg.exec(NULL_INPUT_TUPLE));\n         }\n     }\n \n@@ -1423,6 +1431,9 @@ else if (inputType == \"BigInteger\")\n             else {\n                 assertEquals(msg, (Double)output, (Double)getExpected(sumTypes[k]), 0.00001);\n             }\n+\n+            // Check null input\n+            assertNull(sum.exec(NULL_INPUT_TUPLE));\n         }\n     }\n \n@@ -1488,6 +1499,9 @@ public void testMIN() throws Exception {\n             String msg = \"[Testing \" + minTypes[k] + \" on input type: \" + getInputType(minTypes[k]) + \" ( (output) \" +\n                            output + \" == \" + getExpected(minTypes[k]) + \" (expected) )]\";\n             assertForInputType(inputType, msg, getExpected(minTypes[k]), output);\n+\n+            // Check null input\n+            assertNull(min.exec(NULL_INPUT_TUPLE));\n         }\n     }\n \n@@ -1554,6 +1568,9 @@ public void testMAX() throws Exception {\n             String msg = \"[Testing \" + maxTypes[k] + \" on input type: \" + getInputType(maxTypes[k]) + \" ( (output) \" +\n                            output + \" == \" + getExpected(maxTypes[k]) + \" (expected) )]\";\n             assertForInputType(inputType, msg, getExpected(maxTypes[k]), output);\n+\n+            // Check null input\n+            assertNull(max.exec(NULL_INPUT_TUPLE));\n         }\n     }\n \n@@ -3223,6 +3240,6 @@ public void testToMapSchema() throws Exception {\n         pigServer.registerQuery(\"B = foreach A generate TOMAP(a);\");\n         s = pigServer.dumpSchema(\"B\");\n         Assert.assertEquals(s.toString(), \"{map[]}\");\n-        \n+\n     }\n }",
                "deletions": 1
            }
        ]
    },
    {
        "repo": "pig",
        "message": "PIG:3302: JSONStorage throws NPE if map has null values (rohini)\n\ngit-svn-id: https://svn.apache.org/repos/asf/pig/trunk@1482145 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/pig/commit/15ce1b1b69787f03173c7fec381f61052342da95",
        "parent": "https://github.com/apache/pig/commit/38926adbeecfc42764ea4bf16ad2873ed97c5ec7",
        "bug_id": "pig_33",
        "file": [
            {
                "sha": "ccaf586525b8bf2dc6c46d11cd8f356e571b8ddd",
                "filename": "CHANGES.txt",
                "blob_url": "https://github.com/apache/pig/blob/15ce1b1b69787f03173c7fec381f61052342da95/CHANGES.txt",
                "raw_url": "https://github.com/apache/pig/raw/15ce1b1b69787f03173c7fec381f61052342da95/CHANGES.txt",
                "status": "modified",
                "changes": 2,
                "additions": 2,
                "contents_url": "https://api.github.com/repos/apache/pig/contents/CHANGES.txt?ref=15ce1b1b69787f03173c7fec381f61052342da95",
                "patch": "@@ -176,6 +176,8 @@ PIG-3013: BinInterSedes improve chararray sort performance (rohini)\n \n BUG FIXES\n \n+PIG:3302: JSONStorage throws NPE if map has null values (rohini)\n+\n PIG-3309: TestJsonLoaderStorage fails with IBM JDK 6/7 (lrangel via daijy)\n \n PIG-3097: HiveColumnarLoader doesn't correctly load partitioned Hive table (maczech via daijy)",
                "deletions": 0
            },
            {
                "sha": "fe67767cf8242dde9b13cc7065979c74265968e0",
                "filename": "src/org/apache/pig/builtin/JsonLoader.java",
                "blob_url": "https://github.com/apache/pig/blob/15ce1b1b69787f03173c7fec381f61052342da95/src/org/apache/pig/builtin/JsonLoader.java",
                "raw_url": "https://github.com/apache/pig/raw/15ce1b1b69787f03173c7fec381f61052342da95/src/org/apache/pig/builtin/JsonLoader.java",
                "status": "modified",
                "changes": 2,
                "additions": 1,
                "contents_url": "https://api.github.com/repos/apache/pig/contents/src/org/apache/pig/builtin/JsonLoader.java?ref=15ce1b1b69787f03173c7fec381f61052342da95",
                "patch": "@@ -225,7 +225,7 @@ private Object readField(JsonParser p,\n             Map<String, String> m = new HashMap<String, String>();\n             while (p.nextToken() != JsonToken.END_OBJECT) {\n                 String k = p.getCurrentName();\n-                String v = p.getText();\n+                String v = p.getCurrentToken() == JsonToken.VALUE_NULL ? null : p.getText();\n                 m.put(k, v);\n             }\n             return m;",
                "deletions": 1
            },
            {
                "sha": "d1f3d2dc08aebbb96139d594366627da84f063cc",
                "filename": "src/org/apache/pig/builtin/JsonStorage.java",
                "blob_url": "https://github.com/apache/pig/blob/15ce1b1b69787f03173c7fec381f61052342da95/src/org/apache/pig/builtin/JsonStorage.java",
                "raw_url": "https://github.com/apache/pig/raw/15ce1b1b69787f03173c7fec381f61052342da95/src/org/apache/pig/builtin/JsonStorage.java",
                "status": "modified",
                "changes": 2,
                "additions": 1,
                "contents_url": "https://api.github.com/repos/apache/pig/contents/src/org/apache/pig/builtin/JsonStorage.java?ref=15ce1b1b69787f03173c7fec381f61052342da95",
                "patch": "@@ -199,7 +199,7 @@ private void writeField(JsonGenerator json,\n             json.writeFieldName(field.getName());\n             json.writeStartObject();\n             for (Map.Entry<String, Object> e : ((Map<String, Object>)d).entrySet()) {\n-                json.writeStringField(e.getKey(), e.getValue().toString());\n+                json.writeStringField(e.getKey(), e.getValue() == null ? null : e.getValue().toString());\n             }\n             json.writeEndObject();\n             return;",
                "deletions": 1
            },
            {
                "sha": "587fead95cc5323cdd64e4473390f62d06bf09b6",
                "filename": "test/org/apache/pig/test/data/jsonStorage1.result",
                "blob_url": "https://github.com/apache/pig/blob/15ce1b1b69787f03173c7fec381f61052342da95/test/org/apache/pig/test/data/jsonStorage1.result",
                "raw_url": "https://github.com/apache/pig/raw/15ce1b1b69787f03173c7fec381f61052342da95/test/org/apache/pig/test/data/jsonStorage1.result",
                "status": "modified",
                "changes": 2,
                "additions": 1,
                "contents_url": "https://api.github.com/repos/apache/pig/contents/test/org/apache/pig/test/data/jsonStorage1.result?ref=15ce1b1b69787f03173c7fec381f61052342da95",
                "patch": "@@ -1,2 +1,2 @@\n {\"a0\":1,\"a1\":[{\"a10\":1,\"a11\":\"tom\"},{\"a10\":2,\"a11\":\"jerry\"}],\"a2\":{\"a20\":1.01,\"a21\":\"sun\"},\"a3\":{\"key3\":\"c\",\"key2\":\"b\",\"key1\":\"a\"}}\n-{\"a0\":2,\"a1\":[{\"a10\":6,\"a11\":\"cat\"},{\"a10\":7,\"a11\":\"dog\"},{\"a10\":8,\"a11\":\"pig\"}],\"a2\":{\"a20\":2.3,\"a21\":\"moon\"},\"a3\":{\"key4\":\"value4\",\"key1\":\"value1\"}}\n+{\"a0\":2,\"a1\":[{\"a10\":6,\"a11\":\"cat\"},{\"a10\":7,\"a11\":\"dog\"},{\"a10\":8,\"a11\":\"pig\"}],\"a2\":{\"a20\":2.3,\"a21\":\"moon\"},\"a3\":{\"key4\":\"value4\",\"key1\":\"value1\",\"key2\":null}}",
                "deletions": 1
            },
            {
                "sha": "1df3eb88d3c6b227eb75914c866019b612047d6c",
                "filename": "test/org/apache/pig/test/data/jsonStorage1.txt",
                "blob_url": "https://github.com/apache/pig/blob/15ce1b1b69787f03173c7fec381f61052342da95/test/org/apache/pig/test/data/jsonStorage1.txt",
                "raw_url": "https://github.com/apache/pig/raw/15ce1b1b69787f03173c7fec381f61052342da95/test/org/apache/pig/test/data/jsonStorage1.txt",
                "status": "modified",
                "changes": 2,
                "additions": 1,
                "contents_url": "https://api.github.com/repos/apache/pig/contents/test/org/apache/pig/test/data/jsonStorage1.txt?ref=15ce1b1b69787f03173c7fec381f61052342da95",
                "patch": "@@ -1,2 +1,2 @@\n 1\t{(1,tom),(2,jerry)}\t(1.01,sun)\t[key3#c,key2#b,key1#a]\n-2\t{(6,cat),(7,dog),(8,pig)}\t(2.3,moon)\t[key4#value4,key1#value1]\n+2\t{(6,cat),(7,dog),(8,pig)}\t(2.3,moon)\t[key4#value4,key1#value1,key2#]",
                "deletions": 1
            }
        ]
    },
    {
        "repo": "pig",
        "message": "PIG-3132: NPE when illustrating a relation with HCatLoader\n\ngit-svn-id: https://svn.apache.org/repos/asf/pig/trunk@1460784 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/pig/commit/790917fd98bd548e0bbc7e2c72e7da6ab48c0a1f",
        "parent": "https://github.com/apache/pig/commit/344c43c5229f37673e6789e7d8386fe2429472cb",
        "bug_id": "pig_34",
        "file": [
            {
                "sha": "4d8151f7bc2fdca14ca543707eea4965cc267e9c",
                "filename": "test/org/apache/pig/test/utils/UDFContextTestLoaderWithSignature.java",
                "blob_url": "https://github.com/apache/pig/blob/790917fd98bd548e0bbc7e2c72e7da6ab48c0a1f/test/org/apache/pig/test/utils/UDFContextTestLoaderWithSignature.java",
                "raw_url": "https://github.com/apache/pig/raw/790917fd98bd548e0bbc7e2c72e7da6ab48c0a1f/test/org/apache/pig/test/utils/UDFContextTestLoaderWithSignature.java",
                "status": "modified",
                "changes": 17,
                "additions": 17,
                "contents_url": "https://api.github.com/repos/apache/pig/contents/test/org/apache/pig/test/utils/UDFContextTestLoaderWithSignature.java?ref=790917fd98bd548e0bbc7e2c72e7da6ab48c0a1f",
                "patch": "@@ -1,3 +1,20 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n package org.apache.pig.test.utils;\n \n import java.io.IOException;",
                "deletions": 0
            }
        ]
    },
    {
        "repo": "pig",
        "message": "PIG-3132: NPE when illustrating a relation with HCatLoader\n\ngit-svn-id: https://svn.apache.org/repos/asf/pig/trunk@1457884 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/pig/commit/9e2c218bf7b2cd27cb86a4b398b7add596eda961",
        "parent": "https://github.com/apache/pig/commit/5dd233013be37ca7bc3e1ae58e3e1b92094ec85d",
        "bug_id": "pig_35",
        "file": [
            {
                "sha": "3cfdf3bf19430b05c51a10a420746257790707dc",
                "filename": "CHANGES.txt",
                "blob_url": "https://github.com/apache/pig/blob/9e2c218bf7b2cd27cb86a4b398b7add596eda961/CHANGES.txt",
                "raw_url": "https://github.com/apache/pig/raw/9e2c218bf7b2cd27cb86a4b398b7add596eda961/CHANGES.txt",
                "status": "modified",
                "changes": 2,
                "additions": 2,
                "contents_url": "https://api.github.com/repos/apache/pig/contents/CHANGES.txt?ref=9e2c218bf7b2cd27cb86a4b398b7add596eda961",
                "patch": "@@ -249,6 +249,8 @@ OPTIMIZATIONS\n \n BUG FIXES\n \n+PIG-3132: NPE when illustrating a relation with HCatLoader (daijy)\n+\n PIG-3194: Changes to ObjectSerializer.java break compatibility with Hadoop 0.20.2 (prkommireddi via dvryaboy)\n \n PIG-3241: ConcurrentModificationException in POPartialAgg (dvryaboy)",
                "deletions": 0
            },
            {
                "sha": "55bd896245c8e3c42b8c25d2d8d78e12f853ea58",
                "filename": "src/org/apache/pig/backend/hadoop/executionengine/physicalLayer/relationalOperators/POLoad.java",
                "blob_url": "https://github.com/apache/pig/blob/9e2c218bf7b2cd27cb86a4b398b7add596eda961/src/org/apache/pig/backend/hadoop/executionengine/physicalLayer/relationalOperators/POLoad.java",
                "raw_url": "https://github.com/apache/pig/raw/9e2c218bf7b2cd27cb86a4b398b7add596eda961/src/org/apache/pig/backend/hadoop/executionengine/physicalLayer/relationalOperators/POLoad.java",
                "status": "modified",
                "changes": 2,
                "additions": 1,
                "contents_url": "https://api.github.com/repos/apache/pig/contents/src/org/apache/pig/backend/hadoop/executionengine/physicalLayer/relationalOperators/POLoad.java?ref=9e2c218bf7b2cd27cb86a4b398b7add596eda961",
                "patch": "@@ -93,7 +93,7 @@ public void setUp() throws IOException{\n         loader = new ReadToEndLoader((LoadFunc)\n                 PigContext.instantiateFuncFromSpec(lFile.getFuncSpec()), \n                 ConfigurationUtil.toConfiguration(pc.getProperties()), \n-                lFile.getFileName(),0);\n+                lFile.getFileName(),0, signature);\n     }\n     \n     /**",
                "deletions": 1
            },
            {
                "sha": "8435a3590e79f51b2e6043fe08bf8e22251a4edf",
                "filename": "src/org/apache/pig/impl/io/ReadToEndLoader.java",
                "blob_url": "https://github.com/apache/pig/blob/9e2c218bf7b2cd27cb86a4b398b7add596eda961/src/org/apache/pig/impl/io/ReadToEndLoader.java",
                "raw_url": "https://github.com/apache/pig/raw/9e2c218bf7b2cd27cb86a4b398b7add596eda961/src/org/apache/pig/impl/io/ReadToEndLoader.java",
                "status": "modified",
                "changes": 20,
                "additions": 19,
                "contents_url": "https://api.github.com/repos/apache/pig/contents/src/org/apache/pig/impl/io/ReadToEndLoader.java?ref=9e2c218bf7b2cd27cb86a4b398b7add596eda961",
                "patch": "@@ -106,6 +106,8 @@\n     private InputFormat inputFormat = null;\n     \n     private PigContext pigContext;\n+    \n+    private String udfContextSignature = null;\n \n     /**\n      * @param wrappedLoadFunc\n@@ -133,6 +135,16 @@ public ReadToEndLoader(LoadFunc wrappedLoadFunc, Configuration conf,\n         this.pigContext = pigContext;\n         init();\n     }\n+    \n+    public ReadToEndLoader(LoadFunc wrappedLoadFunc, Configuration conf,\n+            String inputLocation, int splitIndex, String signature) throws IOException {\n+        this.udfContextSignature = signature;\n+        this.wrappedLoadFunc = wrappedLoadFunc;\n+        this.inputLocation = inputLocation;\n+        this.conf = conf;\n+        this.curSplitIndex = splitIndex;\n+        init();\n+    }\n \n     /**\n      * This constructor takes an array of split indexes (toReadSplitIdxs) of the \n@@ -167,6 +179,7 @@ private void init() throws IOException {\n \n         // let's initialize the wrappedLoadFunc \n         Job job = new Job(conf);\n+        wrappedLoadFunc.setUDFContextSignature(this.udfContextSignature);\n         wrappedLoadFunc.setLocation(inputLocation, \n                 job);\n         // The above setLocation call could write to the conf within\n@@ -277,7 +290,7 @@ public void prepareToRead(RecordReader reader, PigSplit split) {\n \n     @Override\n     public void setLocation(String location, Job job) throws IOException {\n-        //no-op\n+        wrappedLoadFunc.setLocation(location, job);\n     }\n \n     @Override\n@@ -313,4 +326,9 @@ public void setPartitionFilter(Expression partitionFilter) throws IOException {\n              ((LoadMetadata) wrappedLoadFunc).setPartitionFilter(partitionFilter);\n         }\n     }\n+    \n+    @Override\n+    public void setUDFContextSignature(String signature) {\n+        this.udfContextSignature = signature;\n+    }\n }",
                "deletions": 1
            },
            {
                "sha": "416c78fd0a3fbb0d5b9d5ec9e5b60ca282557639",
                "filename": "src/org/apache/pig/pen/LocalMapReduceSimulator.java",
                "blob_url": "https://github.com/apache/pig/blob/9e2c218bf7b2cd27cb86a4b398b7add596eda961/src/org/apache/pig/pen/LocalMapReduceSimulator.java",
                "raw_url": "https://github.com/apache/pig/raw/9e2c218bf7b2cd27cb86a4b398b7add596eda961/src/org/apache/pig/pen/LocalMapReduceSimulator.java",
                "status": "modified",
                "changes": 1,
                "additions": 1,
                "contents_url": "https://api.github.com/repos/apache/pig/contents/src/org/apache/pig/pen/LocalMapReduceSimulator.java?ref=9e2c218bf7b2cd27cb86a4b398b7add596eda961",
                "patch": "@@ -105,6 +105,7 @@ public void launchPig(PhysicalPlan php, Map<LOLoad, DataBag> baseData,\n         // jc is null only when mrp.size == 0\n         boolean needFileInput;\n         final ArrayList<OperatorKey> emptyInpTargets = new ArrayList<OperatorKey>();\n+        pc.getProperties().setProperty(\"pig.illustrating\", \"true\");\n         while(mrp.size() != 0) {\n             jc = jcc.compile(mrp, \"Illustrator\");\n             if(jc == null) {",
                "deletions": 0
            },
            {
                "sha": "f9b5203c4329b963f500136cb9e2e76bdd607f43",
                "filename": "test/org/apache/pig/test/TestExampleGenerator.java",
                "blob_url": "https://github.com/apache/pig/blob/9e2c218bf7b2cd27cb86a4b398b7add596eda961/test/org/apache/pig/test/TestExampleGenerator.java",
                "raw_url": "https://github.com/apache/pig/raw/9e2c218bf7b2cd27cb86a4b398b7add596eda961/test/org/apache/pig/test/TestExampleGenerator.java",
                "status": "modified",
                "changes": 10,
                "additions": 10,
                "contents_url": "https://api.github.com/repos/apache/pig/contents/test/org/apache/pig/test/TestExampleGenerator.java?ref=9e2c218bf7b2cd27cb86a4b398b7add596eda961",
                "patch": "@@ -33,6 +33,7 @@\n import org.apache.pig.data.DataBag;\n import org.apache.pig.impl.PigContext;\n import org.apache.pig.newplan.Operator;\n+import org.apache.pig.test.utils.UDFContextTestLoaderWithSignature;\n import org.junit.BeforeClass;\n import org.junit.Test;\n \n@@ -394,5 +395,14 @@ public void testFilterGroupCountStore() throws Exception {\n     \n         assertNotNull(derivedData);\n     }\n+    \n+    @Test\n+    public void testLoaderWithContext() throws Exception {\n+        PigServer pigServer = new PigServer(pigContext);\n+        pigServer.registerQuery(\"A = load \" + A.toString() + \" using \" + UDFContextTestLoaderWithSignature.class.getName() + \"('a') as (x, y);\");\n+        Map<Operator, DataBag> derivedData = pigServer.getExamples(\"A\");\n+        \n+        assertNotNull(derivedData);\n+    }\n \n }",
                "deletions": 0
            }
        ]
    },
    {
        "repo": "pig",
        "message": "PIG-4712: [Pig on Tez] NPE in Bloom UDF after Union (rohini)\n\ngit-svn-id: https://svn.apache.org/repos/asf/pig/trunk@1710672 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/pig/commit/b7409ebf25d53909b7b2be4af0c72d7bf1e4ea72",
        "parent": "https://github.com/apache/pig/commit/0eab5a83de64ea0d245f6ee2b4a6b3fd8e5724a2",
        "bug_id": "pig_36",
        "file": [
            {
                "sha": "1227b5d828077b56466c32c5b94709e99baceb2a",
                "filename": "CHANGES.txt",
                "blob_url": "https://github.com/apache/pig/blob/b7409ebf25d53909b7b2be4af0c72d7bf1e4ea72/CHANGES.txt",
                "raw_url": "https://github.com/apache/pig/raw/b7409ebf25d53909b7b2be4af0c72d7bf1e4ea72/CHANGES.txt",
                "status": "modified",
                "changes": 2,
                "additions": 2,
                "contents_url": "https://api.github.com/repos/apache/pig/contents/CHANGES.txt?ref=b7409ebf25d53909b7b2be4af0c72d7bf1e4ea72",
                "patch": "@@ -57,6 +57,8 @@ PIG-4639: Add better parser for Apache HTTPD access log (nielsbasjes via daijy)\n \n BUG FIXES\n \n+PIG-4712: [Pig on Tez] NPE in Bloom UDF after Union (rohini)\n+\n PIG-4707: [Pig on Tez] Streaming job hangs with pig.exec.mapPartAgg=true (rohini)\n \n PIG-4703: TezOperator.stores shall not ship to backend (daijy)",
                "deletions": 0
            },
            {
                "sha": "818bb4c01fee40bd4a05dfa1387ed1f6c4b643f1",
                "filename": "src/org/apache/pig/backend/hadoop/executionengine/physicalLayer/expressionOperators/POUserFunc.java",
                "blob_url": "https://github.com/apache/pig/blob/b7409ebf25d53909b7b2be4af0c72d7bf1e4ea72/src/org/apache/pig/backend/hadoop/executionengine/physicalLayer/expressionOperators/POUserFunc.java",
                "raw_url": "https://github.com/apache/pig/raw/b7409ebf25d53909b7b2be4af0c72d7bf1e4ea72/src/org/apache/pig/backend/hadoop/executionengine/physicalLayer/expressionOperators/POUserFunc.java",
                "status": "modified",
                "changes": 2,
                "additions": 2,
                "contents_url": "https://api.github.com/repos/apache/pig/contents/src/org/apache/pig/backend/hadoop/executionengine/physicalLayer/expressionOperators/POUserFunc.java?ref=b7409ebf25d53909b7b2be4af0c72d7bf1e4ea72",
                "patch": "@@ -566,6 +566,8 @@ public POUserFunc clone() throws CloneNotSupportedException {\n             requestedParallelism, null, funcSpec.clone());\n         clone.setResultType(resultType);\n         clone.signature = signature;\n+        clone.cacheFiles = cacheFiles;\n+        clone.shipFiles = shipFiles;\n         return clone;\n     }\n ",
                "deletions": 0
            },
            {
                "sha": "644de3bd92b48c1325309eed88b546ecb0e695b1",
                "filename": "test/e2e/pig/tests/nightly.conf",
                "blob_url": "https://github.com/apache/pig/blob/b7409ebf25d53909b7b2be4af0c72d7bf1e4ea72/test/e2e/pig/tests/nightly.conf",
                "raw_url": "https://github.com/apache/pig/raw/b7409ebf25d53909b7b2be4af0c72d7bf1e4ea72/test/e2e/pig/tests/nightly.conf",
                "status": "modified",
                "changes": 24,
                "additions": 24,
                "contents_url": "https://api.github.com/repos/apache/pig/contents/test/e2e/pig/tests/nightly.conf?ref=b7409ebf25d53909b7b2be4af0c72d7bf1e4ea72",
                "patch": "@@ -5148,6 +5148,30 @@ store C into ':OUTPATH:';\\,\n                                 C = load ':INPATH:/singlefile/votertab10k'as (name:chararray, age:int, reg:chararray, contrib:float);\n                                 D = join C by name, B by name;\n                                 store D into ':OUTPATH:';\",\n+                    },{\n+                        'num' => 4,\n+                        'pig' => \"set pig.optimizer.rules.disabled PushUpFilter;\n+                                define bb BuildBloom('Hash.JENKINS_HASH', 'fixed', '128', '3');\n+                                A = LOAD ':INPATH:/singlefile/studenttab10k' AS (name:chararray, age:int, gpa:double);\n+                                B = filter A by name == 'alice allen';\n+                                C = group B all;\n+                                D = foreach C generate bb(B.name);\n+                                store D into ':HDFSTMP:/mybloom_4';\n+                                exec;\n+                                define bloom Bloom(':HDFSTMP:/mybloom_4');\n+                                E = LOAD ':INPATH:/singlefile/studenttab10k' AS (name:chararray, age:int, gpa:double);\n+                                F = LOAD ':INPATH:/singlefile/studenttab10k' AS (name:chararray, age:int, gpa:double);\n+                                G = union E, F;\n+                                -- PushUpFilter is disabled to avoid filter being pushed before union\n+                                H = filter G by bloom(name);\n+                                store H into ':OUTPATH:';\",\n+                        'notmq' => 1,\n+                        'verify_pig_script' => \"\n+                                A = LOAD ':INPATH:/singlefile/studenttab10k' AS (name, age:int ,gpa:double);\n+                                B = LOAD ':INPATH:/singlefile/studenttab10k' AS (name, age:int ,gpa:double);\n+                                C = UNION A,B;\n+                                D = filter C by name == 'alice allen';\n+                                store D into ':OUTPATH:';\",\n                     }\n                 ],\n             },{",
                "deletions": 0
            }
        ]
    },
    {
        "repo": "pig",
        "message": "Tiny fix: NPE introduced by PIG-2332\n\ngit-svn-id: https://svn.apache.org/repos/asf/pig/trunk@1208338 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/pig/commit/ef27d74c726891893f3959960b8dddf4ee48b625",
        "parent": "https://github.com/apache/pig/commit/dd7d854d5b953152aaa9ef5583107922f8566aaf",
        "bug_id": "pig_37",
        "file": [
            {
                "sha": "1cae5cf820b2b4137484b6ac7dedf34a3409b9cb",
                "filename": "src/org/apache/pig/LoadFunc.java",
                "blob_url": "https://github.com/apache/pig/blob/ef27d74c726891893f3959960b8dddf4ee48b625/src/org/apache/pig/LoadFunc.java",
                "raw_url": "https://github.com/apache/pig/raw/ef27d74c726891893f3959960b8dddf4ee48b625/src/org/apache/pig/LoadFunc.java",
                "status": "modified",
                "changes": 3,
                "additions": 2,
                "contents_url": "https://api.github.com/repos/apache/pig/contents/src/org/apache/pig/LoadFunc.java?ref=ef27d74c726891893f3959960b8dddf4ee48b625",
                "patch": "@@ -303,6 +303,7 @@ public void setUDFContextSignature(String signature) {\n      */\n     public final void warn(String msg, Enum warningEnum) {\n         Counter counter = PigStatusReporter.getInstance().getCounter(warningEnum);\n-        counter.increment(1);\n+        if (counter!=null)\n+            counter.increment(1);\n     }\n }",
                "deletions": 1
            }
        ]
    },
    {
        "repo": "pig",
        "message": "PIG-2313: NPE in ILLUSTRATE trying to get StatusReporter in STORE\n\ngit-svn-id: https://svn.apache.org/repos/asf/pig/trunk@1196882 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/pig/commit/4be7050cc130d78d505b23e3767e0b195a55156e",
        "parent": "https://github.com/apache/pig/commit/d8c08df61de3d4089eeff95c25a39a9b0c3fb65b",
        "bug_id": "pig_38",
        "file": [
            {
                "sha": "598899e865d17e5dcfc46e6ecdee8f42445067e2",
                "filename": "CHANGES.txt",
                "blob_url": "https://github.com/apache/pig/blob/4be7050cc130d78d505b23e3767e0b195a55156e/CHANGES.txt",
                "raw_url": "https://github.com/apache/pig/raw/4be7050cc130d78d505b23e3767e0b195a55156e/CHANGES.txt",
                "status": "modified",
                "changes": 2,
                "additions": 2,
                "contents_url": "https://api.github.com/repos/apache/pig/contents/CHANGES.txt?ref=4be7050cc130d78d505b23e3767e0b195a55156e",
                "patch": "@@ -158,6 +158,8 @@ PIG-2228: support partial aggregation in map task (thejas)\n \n BUG FIXES\n \n+PIG-2313: NPE in ILLUSTRATE trying to get StatusReporter in STORE (daijy)\n+\n PIG-2335: bin/pig does not work with bash 3.0 (azaroth)\n \n PIG-2275: NullPointerException from ILLUSTRATE (daijy)",
                "deletions": 0
            },
            {
                "sha": "8bdfa2cea5575cac9f262dafbfa997c897e92e89",
                "filename": "shims/src/hadoop20/org/apache/pig/backend/hadoop/executionengine/mapReduceLayer/PigMapBase.java",
                "blob_url": "https://github.com/apache/pig/blob/4be7050cc130d78d505b23e3767e0b195a55156e/shims/src/hadoop20/org/apache/pig/backend/hadoop/executionengine/mapReduceLayer/PigMapBase.java",
                "raw_url": "https://github.com/apache/pig/raw/4be7050cc130d78d505b23e3767e0b195a55156e/shims/src/hadoop20/org/apache/pig/backend/hadoop/executionengine/mapReduceLayer/PigMapBase.java",
                "status": "modified",
                "changes": 32,
                "additions": 0,
                "contents_url": "https://api.github.com/repos/apache/pig/contents/shims/src/hadoop20/org/apache/pig/backend/hadoop/executionengine/mapReduceLayer/PigMapBase.java?ref=4be7050cc130d78d505b23e3767e0b195a55156e",
                "patch": "@@ -60,38 +60,6 @@ public Context getIllustratorContext(Configuration conf, DataBag input,\n     public boolean inIllustrator(Context context) {\n         return (context instanceof PigMapBase.IllustratorContext);\n     }\n-\n-    /**\n-     * Dummy implementation of StatusReporter for illustrate mode\n-     *\n-     */\n-    @SuppressWarnings(\"deprecation\")\n-    public static class IllustrateDummyReporter extends StatusReporter{\n-\n-\n-        Counters countGen = new Counters();\n-        \n-        @Override\n-        public Counter getCounter(Enum<?> arg0) {\n-            return countGen.findCounter(arg0);\n-        }\n-\n-        @Override\n-        public Counter getCounter(String group, String name) {\n-            return countGen.findCounter(group, name);\n-        }\n-\n-        @Override\n-        public void progress() {\n-            //no-op\n-        }\n-\n-        @Override\n-        public void setStatus(String arg0) {\n-            //no-op\n-        }\n-        \n-    }\n     \n     public class IllustratorContext extends Context {\n         private DataBag input;",
                "deletions": 32
            },
            {
                "sha": "50d3b1b50db86ce871db50ce09a735d1a52b7889",
                "filename": "shims/src/hadoop20/org/apache/pig/backend/hadoop/executionengine/mapReduceLayer/PigMapReduce.java",
                "blob_url": "https://github.com/apache/pig/blob/4be7050cc130d78d505b23e3767e0b195a55156e/shims/src/hadoop20/org/apache/pig/backend/hadoop/executionengine/mapReduceLayer/PigMapReduce.java",
                "raw_url": "https://github.com/apache/pig/raw/4be7050cc130d78d505b23e3767e0b195a55156e/shims/src/hadoop20/org/apache/pig/backend/hadoop/executionengine/mapReduceLayer/PigMapReduce.java",
                "status": "modified",
                "changes": 2,
                "additions": 1,
                "contents_url": "https://api.github.com/repos/apache/pig/contents/shims/src/hadoop20/org/apache/pig/backend/hadoop/executionengine/mapReduceLayer/PigMapReduce.java?ref=4be7050cc130d78d505b23e3767e0b195a55156e",
                "patch": "@@ -70,7 +70,7 @@ public IllustratorContext(Job job,\n                   POPackage pkg\n                   ) throws IOException, InterruptedException {\n                 super(job.getJobConf(), new TaskAttemptID(), new FakeRawKeyValueIterator(input.iterator().hasNext()),\n-                    null, null, null, null, null, null, PigNullableWritable.class, NullableTuple.class);\n+                    null, null, null, null, new IllustrateDummyReporter(), null, PigNullableWritable.class, NullableTuple.class);\n                 bos = new ByteArrayOutputStream();\n                 dos = new DataOutputStream(bos);\n                 org.apache.hadoop.mapreduce.Job nwJob = new org.apache.hadoop.mapreduce.Job(job.getJobConf());",
                "deletions": 1
            },
            {
                "sha": "cbbdb0c6435ab3ce83a01847539715d08d197863",
                "filename": "shims/src/hadoop23/org/apache/pig/backend/hadoop/executionengine/mapReduceLayer/PigMapBase.java",
                "blob_url": "https://github.com/apache/pig/blob/4be7050cc130d78d505b23e3767e0b195a55156e/shims/src/hadoop23/org/apache/pig/backend/hadoop/executionengine/mapReduceLayer/PigMapBase.java",
                "raw_url": "https://github.com/apache/pig/raw/4be7050cc130d78d505b23e3767e0b195a55156e/shims/src/hadoop23/org/apache/pig/backend/hadoop/executionengine/mapReduceLayer/PigMapBase.java",
                "status": "modified",
                "changes": 2,
                "additions": 1,
                "contents_url": "https://api.github.com/repos/apache/pig/contents/shims/src/hadoop23/org/apache/pig/backend/hadoop/executionengine/mapReduceLayer/PigMapBase.java?ref=4be7050cc130d78d505b23e3767e0b195a55156e",
                "patch": "@@ -85,7 +85,7 @@ public Context getIllustratorContext(Configuration conf, DataBag input,\n         public IllustratorContext(Configuration conf, DataBag input,\n               List<Pair<PigNullableWritable, Writable>> output,\n               InputSplit split) throws IOException, InterruptedException {\n-            super(conf, new TaskAttemptID(), null, null, null, null, split);\n+            super(conf, new TaskAttemptID(), null, null, null, new IllustrateDummyReporter(), split);\n             if (output == null)\n                 throw new IOException(\"Null output can not be used\");\n             this.input = input; this.output = output;",
                "deletions": 1
            },
            {
                "sha": "783ae552f070ca79bc550d1f03dae3c183757315",
                "filename": "shims/src/hadoop23/org/apache/pig/backend/hadoop/executionengine/mapReduceLayer/PigMapReduce.java",
                "blob_url": "https://github.com/apache/pig/blob/4be7050cc130d78d505b23e3767e0b195a55156e/shims/src/hadoop23/org/apache/pig/backend/hadoop/executionengine/mapReduceLayer/PigMapReduce.java",
                "raw_url": "https://github.com/apache/pig/raw/4be7050cc130d78d505b23e3767e0b195a55156e/shims/src/hadoop23/org/apache/pig/backend/hadoop/executionengine/mapReduceLayer/PigMapReduce.java",
                "status": "modified",
                "changes": 2,
                "additions": 1,
                "contents_url": "https://api.github.com/repos/apache/pig/contents/shims/src/hadoop23/org/apache/pig/backend/hadoop/executionengine/mapReduceLayer/PigMapReduce.java?ref=4be7050cc130d78d505b23e3767e0b195a55156e",
                "patch": "@@ -112,7 +112,7 @@ public IllustratorContextImpl(Job job,\n                   POPackage pkg\n                   ) throws IOException, InterruptedException {\n                 super(job.getJobConf(), new TaskAttemptID(), new FakeRawKeyValueIterator(input.iterator().hasNext()),\n-                    null, null, null, null, null, null, PigNullableWritable.class, NullableTuple.class);\n+                    null, null, null, null, new IllustrateDummyReporter(), null, PigNullableWritable.class, NullableTuple.class);\n                 bos = new ByteArrayOutputStream();\n                 dos = new DataOutputStream(bos);\n                 org.apache.hadoop.mapreduce.Job nwJob = new org.apache.hadoop.mapreduce.Job(job.getJobConf());",
                "deletions": 1
            },
            {
                "sha": "c3ebeeb906aec9d0297f13eb68839d361f0a5d80",
                "filename": "src/org/apache/pig/backend/hadoop/executionengine/mapReduceLayer/IllustrateDummyReporter.java",
                "blob_url": "https://github.com/apache/pig/blob/4be7050cc130d78d505b23e3767e0b195a55156e/src/org/apache/pig/backend/hadoop/executionengine/mapReduceLayer/IllustrateDummyReporter.java",
                "raw_url": "https://github.com/apache/pig/raw/4be7050cc130d78d505b23e3767e0b195a55156e/src/org/apache/pig/backend/hadoop/executionengine/mapReduceLayer/IllustrateDummyReporter.java",
                "status": "added",
                "changes": 59,
                "additions": 59,
                "contents_url": "https://api.github.com/repos/apache/pig/contents/src/org/apache/pig/backend/hadoop/executionengine/mapReduceLayer/IllustrateDummyReporter.java?ref=4be7050cc130d78d505b23e3767e0b195a55156e",
                "patch": "@@ -0,0 +1,59 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.pig.backend.hadoop.executionengine.mapReduceLayer;\n+\n+import org.apache.hadoop.mapred.Counters;\n+import org.apache.hadoop.mapreduce.Counter;\n+import org.apache.hadoop.mapreduce.StatusReporter;\n+\n+/**\n+ * Dummy implementation of StatusReporter for illustrate mode\n+ *\n+ */\n+@SuppressWarnings(\"deprecation\")\n+public class IllustrateDummyReporter extends StatusReporter{\n+\n+\n+    Counters countGen = new Counters();\n+    \n+    @Override\n+    public Counter getCounter(Enum<?> arg0) {\n+        return countGen.findCounter(arg0);\n+    }\n+\n+    @Override\n+    public Counter getCounter(String group, String name) {\n+        return countGen.findCounter(group, name);\n+    }\n+\n+    @Override\n+    public void progress() {\n+        //no-op\n+    }\n+\n+    @Override\n+    public void setStatus(String arg0) {\n+        //no-op\n+    }\n+\n+    public float getProgress() {\n+        return 0;\n+    }\n+    \n+}\n\\ No newline at end of file",
                "deletions": 0
            },
            {
                "sha": "ac74a68d5b381e3627063e0e330c7a466c2e3cd7",
                "filename": "src/org/apache/pig/backend/hadoop/executionengine/mapReduceLayer/PigGenericMapBase.java",
                "blob_url": "https://github.com/apache/pig/blob/4be7050cc130d78d505b23e3767e0b195a55156e/src/org/apache/pig/backend/hadoop/executionengine/mapReduceLayer/PigGenericMapBase.java",
                "raw_url": "https://github.com/apache/pig/raw/4be7050cc130d78d505b23e3767e0b195a55156e/src/org/apache/pig/backend/hadoop/executionengine/mapReduceLayer/PigGenericMapBase.java",
                "status": "modified",
                "changes": 30,
                "additions": 17,
                "contents_url": "https://api.github.com/repos/apache/pig/contents/src/org/apache/pig/backend/hadoop/executionengine/mapReduceLayer/PigGenericMapBase.java?ref=4be7050cc130d78d505b23e3767e0b195a55156e",
                "patch": "@@ -124,14 +124,16 @@ public void cleanup(Context context) throws IOException, InterruptedException {\n             runPipeline(leaf);\n         }\n \n-        for (POStore store: stores) {\n-            if (!initialized) {\n-                MapReducePOStoreImpl impl \n-                    = new MapReducePOStoreImpl(context);\n-                store.setStoreImpl(impl);\n-                store.setUp();\n+        if (!inIllustrator) {\n+            for (POStore store: stores) {\n+                if (!initialized) {\n+                    MapReducePOStoreImpl impl \n+                        = new MapReducePOStoreImpl(context);\n+                    store.setStoreImpl(impl);\n+                    store.setUp();\n+                }\n+                store.tearDown();\n             }\n-            store.tearDown();\n         }\n         \n         //Calling EvalFunc.finish()\n@@ -227,12 +229,14 @@ protected void map(Text key, Tuple inpTuple, Context context) throws IOException\n             pigReporter.setRep(context);\n             PhysicalOperator.setReporter(pigReporter);\n            \n-            for (POStore store: stores) {\n-                MapReducePOStoreImpl impl \n-                    = new MapReducePOStoreImpl(context);\n-                store.setStoreImpl(impl);\n-                if (!pigContext.inIllustrator)\n-                    store.setUp();\n+            if (!inIllustrator) {\n+                for (POStore store: stores) {\n+                    MapReducePOStoreImpl impl \n+                        = new MapReducePOStoreImpl(context);\n+                    store.setStoreImpl(impl);\n+                    if (!pigContext.inIllustrator)\n+                        store.setUp();\n+                }\n             }\n             \n             boolean aggregateWarning = \"true\".equalsIgnoreCase(pigContext.getProperties().getProperty(\"aggregate.warning\"));",
                "deletions": 13
            },
            {
                "sha": "d41f8d6232a0dad43f45addc60eff61f7e576a52",
                "filename": "src/org/apache/pig/backend/hadoop/executionengine/mapReduceLayer/PigGenericMapReduce.java",
                "blob_url": "https://github.com/apache/pig/blob/4be7050cc130d78d505b23e3767e0b195a55156e/src/org/apache/pig/backend/hadoop/executionengine/mapReduceLayer/PigGenericMapReduce.java",
                "raw_url": "https://github.com/apache/pig/raw/4be7050cc130d78d505b23e3767e0b195a55156e/src/org/apache/pig/backend/hadoop/executionengine/mapReduceLayer/PigGenericMapReduce.java",
                "status": "modified",
                "changes": 16,
                "additions": 9,
                "contents_url": "https://api.github.com/repos/apache/pig/contents/src/org/apache/pig/backend/hadoop/executionengine/mapReduceLayer/PigGenericMapReduce.java?ref=4be7050cc130d78d505b23e3767e0b195a55156e",
                "patch": "@@ -518,14 +518,16 @@ protected void cleanup(Context context) throws IOException, InterruptedException\n                 runPipeline(leaf);\n             }\n \n-            for (POStore store: stores) {\n-                if (!initialized) {\n-                    MapReducePOStoreImpl impl \n-                        = new MapReducePOStoreImpl(context);\n-                    store.setStoreImpl(impl);\n-                    store.setUp();\n+            if (!inIllustrator) {\n+                for (POStore store: stores) {\n+                    if (!initialized) {\n+                        MapReducePOStoreImpl impl \n+                            = new MapReducePOStoreImpl(context);\n+                        store.setStoreImpl(impl);\n+                        store.setUp();\n+                    }\n+                    store.tearDown();\n                 }\n-                store.tearDown();\n             }\n                         \n             //Calling EvalFunc.finish()",
                "deletions": 7
            },
            {
                "sha": "4babccbd292da3874ac8c8a3cbfb344659d6bbfd",
                "filename": "test/org/apache/pig/test/TestExampleGenerator.java",
                "blob_url": "https://github.com/apache/pig/blob/4be7050cc130d78d505b23e3767e0b195a55156e/test/org/apache/pig/test/TestExampleGenerator.java",
                "raw_url": "https://github.com/apache/pig/raw/4be7050cc130d78d505b23e3767e0b195a55156e/test/org/apache/pig/test/TestExampleGenerator.java",
                "status": "modified",
                "changes": 18,
                "additions": 18,
                "contents_url": "https://api.github.com/repos/apache/pig/contents/test/org/apache/pig/test/TestExampleGenerator.java?ref=4be7050cc130d78d505b23e3767e0b195a55156e",
                "patch": "@@ -390,4 +390,22 @@ public void testFilterWithUDF() throws ExecException, IOException {\n         assertTrue(derivedData != null);\n     }\n \n+    @Test\n+    public void testFilterGroupCountStore() throws Exception {\n+        File out = File.createTempFile(\"testFilterGroupCountStoreOutput\", \"\");\n+        out.deleteOnExit();\n+        out.delete();\n+    \n+        PigServer pigServer = new PigServer(pigContext);\n+        pigServer.setBatchOn();\n+        pigServer.registerQuery(\"A = load \" + A.toString() + \" as (x, y);\");\n+        pigServer.registerQuery(\"B = filter A by x < 5;\");\n+        pigServer.registerQuery(\"C = group B by x;\");\n+        pigServer.registerQuery(\"D = foreach C generate group as x, COUNT(B) as the_count;\");\n+        pigServer.registerQuery(\"store D into '\" +  out.getAbsolutePath() + \"';\");\n+        Map<Operator, DataBag> derivedData = pigServer.getExamples(null);\n+    \n+        assertTrue(derivedData != null);\n+    }\n+\n }",
                "deletions": 0
            }
        ]
    },
    {
        "repo": "pig",
        "message": "PIG-2170: NPE thrown during illustrate\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/pig/trunk@1154068 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/pig/commit/a5a19af7d31d04e9923b8dce5d5cf68db697799a",
        "parent": "https://github.com/apache/pig/commit/6c286691a66e87ae659aa1e4d6c9c2a3b98a32e7",
        "bug_id": "pig_39",
        "file": [
            {
                "sha": "a82fca94d3ead8b200ec141293f03d000e9bc72b",
                "filename": "CHANGES.txt",
                "blob_url": "https://github.com/apache/pig/blob/a5a19af7d31d04e9923b8dce5d5cf68db697799a/CHANGES.txt",
                "raw_url": "https://github.com/apache/pig/raw/a5a19af7d31d04e9923b8dce5d5cf68db697799a/CHANGES.txt",
                "status": "modified",
                "changes": 2,
                "additions": 2,
                "contents_url": "https://api.github.com/repos/apache/pig/contents/CHANGES.txt?ref=a5a19af7d31d04e9923b8dce5d5cf68db697799a",
                "patch": "@@ -99,6 +99,8 @@ PIG-2011: Speed up TestTypedMap.java (dvryaboy)\n \n BUG FIXES\n \n+PIG-2170: NPE thrown during illustrate (thejas)\n+\n PIG-2186: PigStorage new warnings about missing schema file \n  can be confusing (thejas)\n ",
                "deletions": 0
            },
            {
                "sha": "6c4e78e0898a3476aee7648121fd2df1bb44666b",
                "filename": "shims/src/hadoop20/org/apache/pig/backend/hadoop/executionengine/mapReduceLayer/PigMapBase.java",
                "blob_url": "https://github.com/apache/pig/blob/a5a19af7d31d04e9923b8dce5d5cf68db697799a/shims/src/hadoop20/org/apache/pig/backend/hadoop/executionengine/mapReduceLayer/PigMapBase.java",
                "raw_url": "https://github.com/apache/pig/raw/a5a19af7d31d04e9923b8dce5d5cf68db697799a/shims/src/hadoop20/org/apache/pig/backend/hadoop/executionengine/mapReduceLayer/PigMapBase.java",
                "status": "modified",
                "changes": 49,
                "additions": 43,
                "contents_url": "https://api.github.com/repos/apache/pig/contents/shims/src/hadoop20/org/apache/pig/backend/hadoop/executionengine/mapReduceLayer/PigMapBase.java?ref=a5a19af7d31d04e9923b8dce5d5cf68db697799a",
                "patch": "@@ -24,7 +24,10 @@\n import org.apache.hadoop.conf.Configuration;\n import org.apache.hadoop.io.Text;\n import org.apache.hadoop.io.Writable;\n+import org.apache.hadoop.mapreduce.Counter;\n+import org.apache.hadoop.mapred.Counters;\n import org.apache.hadoop.mapreduce.InputSplit;\n+import org.apache.hadoop.mapreduce.StatusReporter;\n import org.apache.hadoop.mapreduce.TaskAttemptID;\n import org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigGenericMapBase;\n import org.apache.pig.data.DataBag;\n@@ -34,7 +37,7 @@\n \n abstract public class PigMapBase extends PigGenericMapBase {\n     /**\n-     * \n+     *  \n      * Get mapper's illustrator context\n      * \n      * @param conf  Configuration\n@@ -52,6 +55,40 @@ public Context getIllustratorContext(Configuration conf, DataBag input,\n         return new IllustratorContext(conf, input, output, split);\n     }\n     \n+    \n+\n+    /**\n+     * Dummy implementation of StatusReporter for illustrate mode\n+     *\n+     */\n+    @SuppressWarnings(\"deprecation\")\n+    public static class IllustrateDummyReporter extends StatusReporter{\n+\n+\n+        Counters countGen = new Counters();\n+        \n+        @Override\n+        public Counter getCounter(Enum<?> arg0) {\n+            return countGen.findCounter(arg0);\n+        }\n+\n+        @Override\n+        public Counter getCounter(String group, String name) {\n+            return countGen.findCounter(group, name);\n+        }\n+\n+        @Override\n+        public void progress() {\n+            //no-op\n+        }\n+\n+        @Override\n+        public void setStatus(String arg0) {\n+            //no-op\n+        }\n+        \n+    }\n+    \n     public class IllustratorContext extends Context {\n         private DataBag input;\n         List<Pair<PigNullableWritable, Writable>> output;\n@@ -62,12 +99,12 @@ public Context getIllustratorContext(Configuration conf, DataBag input,\n         public IllustratorContext(Configuration conf, DataBag input,\n               List<Pair<PigNullableWritable, Writable>> output,\n               InputSplit split) throws IOException, InterruptedException {\n-              super(conf, new TaskAttemptID(), null, null, null, null, split);\n-              if (output == null)\n-                  throw new IOException(\"Null output can not be used\");\n-              this.input = input; this.output = output;\n+            super(conf, new TaskAttemptID(), null, null, null, new IllustrateDummyReporter(), split);\n+            if (output == null)\n+                throw new IOException(\"Null output can not be used\");\n+            this.input = input; this.output = output;\n         }\n-        \n+\n         @Override\n         public boolean nextKeyValue() throws IOException, InterruptedException {\n             if (input == null) {",
                "deletions": 6
            },
            {
                "sha": "63089f50b7acacd7e5a6362c96dd3f6727d7fae7",
                "filename": "src/org/apache/pig/pen/IllustratorAttacher.java",
                "blob_url": "https://github.com/apache/pig/blob/a5a19af7d31d04e9923b8dce5d5cf68db697799a/src/org/apache/pig/pen/IllustratorAttacher.java",
                "raw_url": "https://github.com/apache/pig/raw/a5a19af7d31d04e9923b8dce5d5cf68db697799a/src/org/apache/pig/pen/IllustratorAttacher.java",
                "status": "modified",
                "changes": 22,
                "additions": 10,
                "contents_url": "https://api.github.com/repos/apache/pig/contents/src/org/apache/pig/pen/IllustratorAttacher.java?ref=a5a19af7d31d04e9923b8dce5d5cf68db697799a",
                "patch": "@@ -283,56 +283,56 @@ public void visitProject(POProject proj) throws VisitorException{\n     @Override\n     public void visitGreaterThan(GreaterThanExpr grt) throws VisitorException{\n         setIllustrator(grt, 0);\n-        if (!revisit)\n+        if (!revisit && subExpResults != null)\n             subExpResults.add(grt.getIllustrator().getSubExpResult());\n     }\n     \n     @Override\n     public void visitLessThan(LessThanExpr lt) throws VisitorException{\n         setIllustrator(lt, 0);\n-        if (!revisit)\n+        if (!revisit && subExpResults != null)\n             subExpResults.add(lt.getIllustrator().getSubExpResult());\n     }\n     \n     @Override\n     public void visitGTOrEqual(GTOrEqualToExpr gte) throws VisitorException{\n         setIllustrator(gte, 0);\n-        if (!revisit)\n+        if (!revisit && subExpResults != null)\n             subExpResults.add(gte.getIllustrator().getSubExpResult());\n     }\n     \n     @Override\n     public void visitLTOrEqual(LTOrEqualToExpr lte) throws VisitorException{\n         setIllustrator(lte, 0);\n-        if (!revisit)\n+        if (!revisit && subExpResults != null)\n             subExpResults.add(lte.getIllustrator().getSubExpResult());\n     }\n     \n     @Override\n     public void visitEqualTo(EqualToExpr eq) throws VisitorException{\n         setIllustrator(eq, 0);\n-        if (!revisit)\n+        if (!revisit && subExpResults != null)\n             subExpResults.add(eq.getIllustrator().getSubExpResult());\n     }\n     \n     @Override\n     public void visitNotEqualTo(NotEqualToExpr eq) throws VisitorException{\n         setIllustrator(eq, 0);\n-        if (!revisit)\n+        if (!revisit && subExpResults != null)\n             subExpResults.add(eq.getIllustrator().getSubExpResult());\n     }\n     \n     @Override\n     public void visitRegexp(PORegexp re) throws VisitorException{\n         setIllustrator(re, 0);\n-        if (!revisit)\n+        if (!revisit && subExpResults != null)\n             subExpResults.add(re.getIllustrator().getSubExpResult());\n     }\n \n     @Override\n     public void visitIsNull(POIsNull isNull) throws VisitorException {\n         setIllustrator(isNull, 0);\n-        if (!revisit)\n+        if (!revisit && subExpResults != null)\n             subExpResults.add(isNull.getIllustrator().getSubExpResult());\n     }\n     \n@@ -349,15 +349,13 @@ public void visitOr(POOr or) throws VisitorException {\n     @Override\n     public void visitNot(PONot not) throws VisitorException {\n         setIllustrator(not, 0);\n-        if (!revisit)\n+        if (!revisit && subExpResults != null)\n             subExpResults.add(not.getIllustrator().getSubExpResult());\n     }\n \n     @Override\n     public void visitBinCond(POBinCond binCond) {\n-        setIllustrator(binCond, 0);\n-        if (!revisit)\n-            subExpResults.add(binCond.getIllustrator().getSubExpResult());\n+\n     }\n \n     @Override",
                "deletions": 12
            },
            {
                "sha": "9a56344f2670c44a6f3e4bb4208f2a0dc70f61a4",
                "filename": "test/org/apache/pig/test/TestExampleGenerator.java",
                "blob_url": "https://github.com/apache/pig/blob/a5a19af7d31d04e9923b8dce5d5cf68db697799a/test/org/apache/pig/test/TestExampleGenerator.java",
                "raw_url": "https://github.com/apache/pig/raw/a5a19af7d31d04e9923b8dce5d5cf68db697799a/test/org/apache/pig/test/TestExampleGenerator.java",
                "status": "modified",
                "changes": 77,
                "additions": 49,
                "contents_url": "https://api.github.com/repos/apache/pig/contents/test/org/apache/pig/test/TestExampleGenerator.java?ref=a5a19af7d31d04e9923b8dce5d5cf68db697799a",
                "patch": "@@ -18,14 +18,15 @@\n \n package org.apache.pig.test;\n \n+import static org.junit.Assert.assertTrue;\n+\n import java.io.File;\n import java.io.FileOutputStream;\n import java.io.IOException;\n import java.util.Map;\n+import java.util.Properties;\n import java.util.Random;\n \n-import junit.framework.TestCase;\n-\n import org.apache.pig.ExecType;\n import org.apache.pig.PigServer;\n import org.apache.pig.backend.executionengine.ExecException;\n@@ -34,22 +35,20 @@\n import org.apache.pig.impl.io.FileLocalizer;\n import org.apache.pig.newplan.Operator;\n import org.junit.AfterClass;\n-import org.junit.Before;\n+import org.junit.BeforeClass;\n import org.junit.Test;\n-import org.junit.runner.RunWith;\n-import org.junit.runners.JUnit4;\n \n-@RunWith(JUnit4.class)\n-public class TestExampleGenerator extends TestCase {\n \n-    static MiniCluster cluster = MiniCluster.buildCluster();\n-    PigContext pigContext = new PigContext(ExecType.MAPREDUCE, cluster\n-            .getProperties());\n+public class TestExampleGenerator {\n \n-    Random rand = new Random();\n-    int MAX = 100;\n-    String A, B;\n+    \n+    static PigContext pigContext = new PigContext(ExecType.LOCAL, new Properties());\n \n+   \n+    static int MAX = 100;\n+    static String A, B;\n+    static  File fileA, fileB;\n+    \n     {\n         try {\n             pigContext.connect();\n@@ -59,32 +58,26 @@\n         }\n     }\n \n-    @Before\n-    public void setUp() throws Exception {\n-        File fileA, fileB;\n+    @BeforeClass\n+    public static void oneTimeSetup() throws Exception {\n+       \n \n         fileA = File.createTempFile(\"dataA\", \".dat\");\n         fileB = File.createTempFile(\"dataB\", \".dat\");\n \n         writeData(fileA);\n         writeData(fileB);\n+     \n \n-        A = \"'\" + FileLocalizer.hadoopify(fileA.toString(), pigContext) + \"'\";\n-        B = \"'\" + FileLocalizer.hadoopify(fileB.toString(), pigContext) + \"'\";\n-        System.out.println(\"A : \" + A + \"\\n\" + \"B : \" + B);\n-        System.out.println(\"Test data created.\");\n         fileA.deleteOnExit();\n         fileB.deleteOnExit();\n-          \n-    }\n-\n-    \n-    @AfterClass\n-    public static void oneTimeTearDown() throws Exception {\n-        cluster.shutDown();\n+        A = \"'\" + fileA.getPath() + \"'\";\n+        B = \"'\" + fileB.getPath() + \"'\";\n+        System.out.println(\"A : \" + A + \"\\n\" + \"B : \" + B);\n+        System.out.println(\"Test data created.\");\n     }\n \n-    private void writeData(File dataFile) throws Exception {\n+    private static void writeData(File dataFile) throws Exception {\n         // File dataFile = File.createTempFile(name, \".dat\");\n         FileOutputStream dat = new FileOutputStream(dataFile);\n \n@@ -176,6 +169,34 @@ public void testForeach() throws ExecException, IOException {\n \n         assertTrue(derivedData != null);\n     }\n+    \n+    //see PIG-2170\n+    @Test\n+    public void testForeachBinCondWithBooleanExp() throws ExecException, IOException {\n+        PigServer pigServer = new PigServer(pigContext);\n+\n+        pigServer.registerQuery(\"A = load \" + A\n+                + \" using PigStorage() as (x : int, y : int);\");\n+        pigServer.registerQuery(\"B = foreach A generate  (x + 1 > y ? 0 : 1);\");\n+\n+        Map<Operator, DataBag> derivedData = pigServer.getExamples(\"B\");\n+\n+        assertTrue(derivedData != null);\n+    }\n+    \n+    @Test\n+    public void testForeachWithTypeCastCounter() throws ExecException, IOException {\n+        PigServer pigServer = new PigServer(pigContext);\n+        //cast error results in counter being incremented and was resulting\n+        // in a NPE exception in illustrate\n+        pigServer.registerQuery(\"A = load \" + A\n+                + \" using PigStorage() as (x : int, y : int);\");\n+        pigServer.registerQuery(\"B = foreach A generate x, (int)'InvalidInt';\");\n+\n+        Map<Operator, DataBag> derivedData = pigServer.getExamples(\"B\");\n+\n+        assertTrue(derivedData != null);\n+    }\n \n     @Test\n     public void testJoin() throws IOException, ExecException {",
                "deletions": 28
            }
        ]
    },
    {
        "repo": "pig",
        "message": "PIG-2006: Regression: NPE when Pig processes an empty script file\n\ngit-svn-id: https://svn.apache.org/repos/asf/pig/trunk@1096189 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/pig/commit/57309d6cd7bc28fe0e6c9ad571360f8f3a2c3d2a",
        "parent": "https://github.com/apache/pig/commit/0a633669715ebee7afd005c2a8ebab2dd436761f",
        "bug_id": "pig_40",
        "file": [
            {
                "sha": "e2cfd67b9ac211c003e002abf6bee3685985611a",
                "filename": "CHANGES.txt",
                "blob_url": "https://github.com/apache/pig/blob/57309d6cd7bc28fe0e6c9ad571360f8f3a2c3d2a/CHANGES.txt",
                "raw_url": "https://github.com/apache/pig/raw/57309d6cd7bc28fe0e6c9ad571360f8f3a2c3d2a/CHANGES.txt",
                "status": "modified",
                "changes": 2,
                "additions": 2,
                "contents_url": "https://api.github.com/repos/apache/pig/contents/CHANGES.txt?ref=57309d6cd7bc28fe0e6c9ad571360f8f3a2c3d2a",
                "patch": "@@ -44,6 +44,8 @@ PIG-1876: Typed map for Pig (daijy)\n \n IMPROVEMENTS\n \n+PIG-2006: Regression: NPE when Pig processes an empty script file, fix test case (xuefu)\n+\n PIG-2006: Regression: NPE when Pig processes an empty script file (xuefu)\n \n PIG-2007: Parsing error when map key referred directly from udf in nested foreach (xuefu)",
                "deletions": 0
            },
            {
                "sha": "6c0fb1d49cd3f5854938054861562b27ec0e4146",
                "filename": "test/org/apache/pig/test/TestPigRunner.java",
                "blob_url": "https://github.com/apache/pig/blob/57309d6cd7bc28fe0e6c9ad571360f8f3a2c3d2a/test/org/apache/pig/test/TestPigRunner.java",
                "raw_url": "https://github.com/apache/pig/raw/57309d6cd7bc28fe0e6c9ad571360f8f3a2c3d2a/test/org/apache/pig/test/TestPigRunner.java",
                "status": "modified",
                "changes": 1,
                "additions": 0,
                "contents_url": "https://api.github.com/repos/apache/pig/contents/test/org/apache/pig/test/TestPigRunner.java?ref=57309d6cd7bc28fe0e6c9ad571360f8f3a2c3d2a",
                "patch": "@@ -604,7 +604,6 @@ public void fsCommandTest() throws Exception {\n     @Test // PIG-2006\n     public void testEmptyFile() throws IOException {\n         File f1 = new File(\"myscript.pig\");\n-        f1.deleteOnExit();\n         \n         FileWriter fw1 = new FileWriter(f1);\n         fw1.close();",
                "deletions": 1
            }
        ]
    },
    {
        "repo": "pig",
        "message": "PIG-2006: Regression: NPE when Pig processes an empty script file\n\ngit-svn-id: https://svn.apache.org/repos/asf/pig/trunk@1096087 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/pig/commit/61922f268cc969a5041dc2a7ab6b152020fd5f79",
        "parent": "https://github.com/apache/pig/commit/b7ad4e779fe0482332642c2f6babca2847f628ed",
        "bug_id": "pig_41",
        "file": [
            {
                "sha": "623d1fb5cd91a5dac92fe957d9bdeef821625b11",
                "filename": "CHANGES.txt",
                "blob_url": "https://github.com/apache/pig/blob/61922f268cc969a5041dc2a7ab6b152020fd5f79/CHANGES.txt",
                "raw_url": "https://github.com/apache/pig/raw/61922f268cc969a5041dc2a7ab6b152020fd5f79/CHANGES.txt",
                "status": "modified",
                "changes": 2,
                "additions": 2,
                "contents_url": "https://api.github.com/repos/apache/pig/contents/CHANGES.txt?ref=61922f268cc969a5041dc2a7ab6b152020fd5f79",
                "patch": "@@ -44,6 +44,8 @@ PIG-1876: Typed map for Pig (daijy)\n \n IMPROVEMENTS\n \n+PIG-2006: Regression: NPE when Pig processes an empty script file (xuefu)\n+\n PIG-2007: Parsing error when map key referred directly from udf in nested foreach (xuefu)\n \n PIG-2000: Pig gives incorrect error message dealing with scalar projection (xuefu)",
                "deletions": 0
            }
        ]
    },
    {
        "repo": "pig",
        "message": "PIG-2006: Regression: NPE when Pig processes an empty script file\n\ngit-svn-id: https://svn.apache.org/repos/asf/pig/trunk@1096086 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/pig/commit/b7ad4e779fe0482332642c2f6babca2847f628ed",
        "parent": "https://github.com/apache/pig/commit/fb22738fce8798d51f85197e2e3a615515326405",
        "bug_id": "pig_42",
        "file": [
            {
                "sha": "69a7cbcbd3d7ba77725d3158ba3f485dd18214d1",
                "filename": "src/org/apache/pig/scripting/ScriptEngine.java",
                "blob_url": "https://github.com/apache/pig/blob/b7ad4e779fe0482332642c2f6babca2847f628ed/src/org/apache/pig/scripting/ScriptEngine.java",
                "raw_url": "https://github.com/apache/pig/raw/b7ad4e779fe0482332642c2f6babca2847f628ed/src/org/apache/pig/scripting/ScriptEngine.java",
                "status": "modified",
                "changes": 4,
                "additions": 4,
                "contents_url": "https://api.github.com/repos/apache/pig/contents/src/org/apache/pig/scripting/ScriptEngine.java?ref=b7ad4e779fe0482332642c2f6babca2847f628ed",
                "patch": "@@ -83,6 +83,8 @@ private SupportedScriptLang(String[] shebangs, String[] extensions, String engin\n          * @param firstLine The first line of the file (possibly containing #!...)\n          */\n         public boolean accepts(String file, String firstLine) {\n+            if( firstLine == null )\n+            \treturn false;\n             \n             for (String shebang : shebangs) {\n                 Pattern p = Pattern.compile(\"^#!.*/\" + shebang + \"\\\\s*$\");\n@@ -109,6 +111,8 @@ public String getEngineClassName() {\n     private static final Pattern shebangPattern = Pattern.compile(\"^#!.+\");\n     \n     private static boolean declaresShebang(String firstLine) {\n+    \tif( firstLine == null )\n+    \t\treturn false;\n         return shebangPattern.matcher(firstLine).matches();\n     }\n     ",
                "deletions": 0
            },
            {
                "sha": "7e27529fd9d68a5c44c54096cb11f846619915f2",
                "filename": "test/org/apache/pig/test/TestPigRunner.java",
                "blob_url": "https://github.com/apache/pig/blob/b7ad4e779fe0482332642c2f6babca2847f628ed/test/org/apache/pig/test/TestPigRunner.java",
                "raw_url": "https://github.com/apache/pig/raw/b7ad4e779fe0482332642c2f6babca2847f628ed/test/org/apache/pig/test/TestPigRunner.java",
                "status": "modified",
                "changes": 17,
                "additions": 17,
                "contents_url": "https://api.github.com/repos/apache/pig/contents/test/org/apache/pig/test/TestPigRunner.java?ref=b7ad4e779fe0482332642c2f6babca2847f628ed",
                "patch": "@@ -23,6 +23,7 @@\n \n import java.io.File;\n import java.io.FileWriter;\n+import java.io.IOException;\n import java.io.PrintWriter;\n import java.util.HashMap;\n import java.util.Iterator;\n@@ -600,6 +601,22 @@ public void fsCommandTest() throws Exception {\n         }\n     }\n     \n+    @Test // PIG-2006\n+    public void testEmptyFile() throws IOException {\n+        File f1 = new File(\"myscript.pig\");\n+        f1.deleteOnExit();\n+        \n+        FileWriter fw1 = new FileWriter(f1);\n+        fw1.close();\n+\n+        String[] args = { \"-x\", \"local\", \"-c\", \"myscript.pig\" };\n+        PigStats stats = PigRunner.run(args, null);\n+       \n+        Assert.assertTrue(stats.isSuccessful());\n+        Assert.assertEquals( 0, stats.getReturnCode() );\n+        Assert.assertEquals( null, stats.getErrorMessage() );\n+    }\n+    \n     @Test\n     public void returnCodeTest() throws Exception {\n         PrintWriter w = new PrintWriter(new FileWriter(PIG_FILE));",
                "deletions": 0
            }
        ]
    },
    {
        "repo": "pig",
        "message": "PIG-1993: PigStorageSchema throw NPE with ColumnPruning\n\ngit-svn-id: https://svn.apache.org/repos/asf/pig/trunk@1091988 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/pig/commit/0fb102c85be8e7e07ac5592827b4190df103453e",
        "parent": "https://github.com/apache/pig/commit/6188c555a4e7a3440740a5ce4dc3d3cf831bf2b6",
        "bug_id": "pig_43",
        "file": [
            {
                "sha": "14ee89df938109938a1c3d538da2797bf7209e7f",
                "filename": "CHANGES.txt",
                "blob_url": "https://github.com/apache/pig/blob/0fb102c85be8e7e07ac5592827b4190df103453e/CHANGES.txt",
                "raw_url": "https://github.com/apache/pig/raw/0fb102c85be8e7e07ac5592827b4190df103453e/CHANGES.txt",
                "status": "modified",
                "changes": 2,
                "additions": 2,
                "contents_url": "https://api.github.com/repos/apache/pig/contents/CHANGES.txt?ref=0fb102c85be8e7e07ac5592827b4190df103453e",
                "patch": "@@ -429,6 +429,8 @@ PIG-1309: Map-side Cogroup (ashutoshc)\n \n BUG FIXES\n \n+PIG-1993: PigStorageSchema throw NPE with ColumnPruning (daijy)\n+\n PIG-1935: New logical plan: Should not push up filter in front of Bincond (daijy)\n \n PIG-1912: non-deterministic output when a file is loaded multiple times (daijy)",
                "deletions": 0
            },
            {
                "sha": "f920263f6f586f59026e693d7f85b9c7e22c578a",
                "filename": "contrib/piggybank/java/src/main/java/org/apache/pig/piggybank/storage/PigStorageSchema.java",
                "blob_url": "https://github.com/apache/pig/blob/0fb102c85be8e7e07ac5592827b4190df103453e/contrib/piggybank/java/src/main/java/org/apache/pig/piggybank/storage/PigStorageSchema.java",
                "raw_url": "https://github.com/apache/pig/raw/0fb102c85be8e7e07ac5592827b4190df103453e/contrib/piggybank/java/src/main/java/org/apache/pig/piggybank/storage/PigStorageSchema.java",
                "status": "modified",
                "changes": 2,
                "additions": 1,
                "contents_url": "https://api.github.com/repos/apache/pig/contents/contrib/piggybank/java/src/main/java/org/apache/pig/piggybank/storage/PigStorageSchema.java?ref=0fb102c85be8e7e07ac5592827b4190df103453e",
                "patch": "@@ -91,7 +91,7 @@ public Tuple getNext() throws IOException {\n             // We walk the requiredColumns array to find required fields,\n             // and cast those.\n             for (int i = 0; i < fieldSchemas.length; i++) {\n-                if (mRequiredColumns == null || mRequiredColumns[i]) {\n+                if (mRequiredColumns == null || (mRequiredColumns.length>i && mRequiredColumns[i])) {\n                     Object val = null;\n                     if(tup.get(tupleIdx) != null){\n                         byte[] bytes = ((DataByteArray) tup.get(tupleIdx)).get();",
                "deletions": 1
            },
            {
                "sha": "068347843832e0efdf6bc89fff5b528e888b7919",
                "filename": "contrib/piggybank/java/src/test/java/org/apache/pig/piggybank/test/TestPigStorageSchema.java",
                "blob_url": "https://github.com/apache/pig/blob/0fb102c85be8e7e07ac5592827b4190df103453e/contrib/piggybank/java/src/test/java/org/apache/pig/piggybank/test/TestPigStorageSchema.java",
                "raw_url": "https://github.com/apache/pig/raw/0fb102c85be8e7e07ac5592827b4190df103453e/contrib/piggybank/java/src/test/java/org/apache/pig/piggybank/test/TestPigStorageSchema.java",
                "status": "modified",
                "changes": 28,
                "additions": 28,
                "contents_url": "https://api.github.com/repos/apache/pig/contents/contrib/piggybank/java/src/test/java/org/apache/pig/piggybank/test/TestPigStorageSchema.java?ref=0fb102c85be8e7e07ac5592827b4190df103453e",
                "patch": "@@ -219,4 +219,32 @@ public void testByteArrayConversion() throws IOException {\n \n \n     }\n+    \n+    // See PIG-1993\n+    @Test\n+    public void testColumnPrune() throws IOException {\n+        Util.createInputFile(cluster, \"originput2\",\n+                new String[] {\"peter\\t1\", \"samir\\t2\", \"michael\\t4\",\n+                \"peter\\t2\", \"peter\\t4\", \"samir\\t1\", \"john\\t\"\n+        });\n+        Util.createInputFile(cluster, \".pig_schema\",\n+                new String[] {\n+                \"{\\\"fields\\\":[{\\\"name\\\":\\\"name\\\",\\\"type\\\":55,\\\"schema\\\":null,\" +\n+                \"\\\"description\\\":\\\"autogenerated from Pig Field Schema\\\"},\" +\n+                \"{\\\"name\\\":\\\"val\\\",\\\"type\\\":10,\\\"schema\\\":null,\\\"description\\\":\"+\n+                \"\\\"autogenerated from Pig Field Schema\\\"}],\\\"version\\\":0,\" +\n+                \"\\\"sortKeys\\\":[],\\\"sortKeyOrders\\\":[]}\"\n+        });\n+        pig.registerQuery(\"Events = LOAD 'originput2' USING org.apache.pig.piggybank.storage.PigStorageSchema();\");\n+        pig.registerQuery(\"EventsName = foreach Events generate name;\");\n+        Iterator<Tuple> sessions = pig.openIterator(\"EventsName\");\n+        sessions.next().toString().equals(\"(1)\");\n+        sessions.next().toString().equals(\"(2)\");\n+        sessions.next().toString().equals(\"(4)\");\n+        sessions.next().toString().equals(\"(2)\");\n+        sessions.next().toString().equals(\"(4)\");\n+        sessions.next().toString().equals(\"(1)\");\n+        sessions.next().toString().equals(\"()\");\n+        Assert.assertFalse(sessions.hasNext());\n+    }\n }",
                "deletions": 0
            }
        ]
    },
    {
        "repo": "pig",
        "message": "PIG-1988: Importing an empty macro file causing NPE\n\ngit-svn-id: https://svn.apache.org/repos/asf/pig/trunk@1091242 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/pig/commit/86915318fd9c5cbba886611cfe4d655321737d41",
        "parent": "https://github.com/apache/pig/commit/5daf9c50131fb2cf2120a179f8a9d7878db70683",
        "bug_id": "pig_44",
        "file": [
            {
                "sha": "15d13c4258b9b1e7db03a202956ee40b9c310c68",
                "filename": "CHANGES.txt",
                "blob_url": "https://github.com/apache/pig/blob/86915318fd9c5cbba886611cfe4d655321737d41/CHANGES.txt",
                "raw_url": "https://github.com/apache/pig/raw/86915318fd9c5cbba886611cfe4d655321737d41/CHANGES.txt",
                "status": "modified",
                "changes": 2,
                "additions": 2,
                "contents_url": "https://api.github.com/repos/apache/pig/contents/CHANGES.txt?ref=86915318fd9c5cbba886611cfe4d655321737d41",
                "patch": "@@ -142,6 +142,8 @@ PIG-1696: Performance: Use System.arraycopy() instead of manually copying the by\n \n BUG FIXES\n \n+PIG-1988: Importing an empty macro file causing NPE (rding)\n+\n PIG-1977: \"Stream closed\" error while reading Pig temp files (results of intermediate jobs) (rding)\n \n PIG-1963: in nested foreach, accumutive udf taking input from order-by does not get results in order (thejas)",
                "deletions": 0
            },
            {
                "sha": "9a3f26db7746e5a96a41f4fc5d6957d869f6c987",
                "filename": "src/org/apache/pig/parser/QueryParserUtils.java",
                "blob_url": "https://github.com/apache/pig/blob/86915318fd9c5cbba886611cfe4d655321737d41/src/org/apache/pig/parser/QueryParserUtils.java",
                "raw_url": "https://github.com/apache/pig/raw/86915318fd9c5cbba886611cfe4d655321737d41/src/org/apache/pig/parser/QueryParserUtils.java",
                "status": "modified",
                "changes": 5,
                "additions": 4,
                "contents_url": "https://api.github.com/repos/apache/pig/contents/src/org/apache/pig/parser/QueryParserUtils.java?ref=86915318fd9c5cbba886611cfe4d655321737d41",
                "patch": "@@ -191,7 +191,10 @@ static void replaceNodeWithNodeList(Tree oldNode, CommonTree newTree,\n \n         for (int i = 0; i < count; i++) {\n             if (i == idx) {\n-                parent.addChildren(macroList);\n+                // add only there is something to add\n+                if (macroList != null) {\n+                    parent.addChildren(macroList);\n+                }\n             } else {\n                 parent.addChild((Tree) childList.get(i));\n             }",
                "deletions": 1
            },
            {
                "sha": "3536751e15982f9c3fecb03112b099337fc31197",
                "filename": "test/org/apache/pig/test/TestMacroExpansion.java",
                "blob_url": "https://github.com/apache/pig/blob/86915318fd9c5cbba886611cfe4d655321737d41/test/org/apache/pig/test/TestMacroExpansion.java",
                "raw_url": "https://github.com/apache/pig/raw/86915318fd9c5cbba886611cfe4d655321737d41/test/org/apache/pig/test/TestMacroExpansion.java",
                "status": "modified",
                "changes": 31,
                "additions": 30,
                "contents_url": "https://api.github.com/repos/apache/pig/contents/test/org/apache/pig/test/TestMacroExpansion.java?ref=86915318fd9c5cbba886611cfe4d655321737d41",
                "patch": "@@ -1663,6 +1663,31 @@ public void test35() throws Exception {\n         testMacro( query, expected );\n     }\n     \n+    // PIG-1988\n+    @Test\n+    public void test36() throws Exception {\n+        File f = new File(\"mymacro.pig\");\n+        f.deleteOnExit();\n+        \n+        FileWriter fw = new FileWriter(f);\n+        fw.append(\" \");\n+        fw.close();\n+\n+        String query = \"import 'mymacro.pig';\" +\n+            \"define macro1() returns dummy {}; \" + \n+            \"A = load '1.txt' as (a0:int, a1:chararray);\" +\n+            \"dummy = macro1();\" +\n+            \"B = group A by a0;\" + \n+            \"store B into 'output';\";\n+        \n+        String expected = \n+            \"A = load '1.txt' as (a0:int, a1:chararray);\\n\" +\n+            \"B = group A by (a0);\\n\" +\n+            \"store B INTO 'output';\\n\";\n+        \n+        verify(query, expected);\n+    }\n+    \n     @Test\n     public void testCommentInMacro() throws Exception {\n         String query = \"a = load 'testComplexCast' as (m);\\n\" +\n@@ -1734,7 +1759,11 @@ private void verify(String s, String expected) throws Exception {\n         \n         String[] args = { \"-Dpig.import.search.path=/tmp\", \"-x\", \"local\", \"-c\", \"myscript.pig\" };\n         PigStats stats = PigRunner.run(args, null);\n- \n+        \n+        if (!stats.isSuccessful()) {\n+            System.out.println(\"error msg: \" + stats.getErrorMessage());\n+        }\n+        \n         assertTrue(stats.isSuccessful());\n         \n         String[] args2 = { \"-Dpig.import.search.path=/tmp\", \"-x\", \"local\", \"-r\", \"myscript.pig\" };",
                "deletions": 1
            }
        ]
    },
    {
        "repo": "pig",
        "message": "PIG-1843: NPE in schema generation\n\ngit-svn-id: https://svn.apache.org/repos/asf/pig/trunk@1071857 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/pig/commit/a39376fb21036b903bf20cd67395cf482e954ae3",
        "parent": "https://github.com/apache/pig/commit/996d534ea560e15c1b714a40893f6c126f8b2b1e",
        "bug_id": "pig_45",
        "file": [
            {
                "sha": "d796576317136fe0291a8cac7459ba4b49b030af",
                "filename": "CHANGES.txt",
                "blob_url": "https://github.com/apache/pig/blob/a39376fb21036b903bf20cd67395cf482e954ae3/CHANGES.txt",
                "raw_url": "https://github.com/apache/pig/raw/a39376fb21036b903bf20cd67395cf482e954ae3/CHANGES.txt",
                "status": "modified",
                "changes": 2,
                "additions": 2,
                "contents_url": "https://api.github.com/repos/apache/pig/contents/CHANGES.txt?ref=a39376fb21036b903bf20cd67395cf482e954ae3",
                "patch": "@@ -299,6 +299,8 @@ PIG-1309: Map-side Cogroup (ashutoshc)\n \n BUG FIXES\n \n+PIG-1843: NPE in schema generation (daijy)\n+\n PIG-1820: New logical plan: FilterLogicExpressionSimplifier fail to deal with UDF (daijy)\n \n PIG-1854: Pig returns exit code 0 for the failed Pig script (rding)",
                "deletions": 0
            },
            {
                "sha": "13640657c4258336dd1469007b39db5d77c8d3b3",
                "filename": "src/org/apache/pig/EvalFunc.java",
                "blob_url": "https://github.com/apache/pig/blob/a39376fb21036b903bf20cd67395cf482e954ae3/src/org/apache/pig/EvalFunc.java",
                "raw_url": "https://github.com/apache/pig/raw/a39376fb21036b903bf20cd67395cf482e954ae3/src/org/apache/pig/EvalFunc.java",
                "status": "modified",
                "changes": 2,
                "additions": 1,
                "contents_url": "https://api.github.com/repos/apache/pig/contents/src/org/apache/pig/EvalFunc.java?ref=a39376fb21036b903bf20cd67395cf482e954ae3",
                "patch": "@@ -73,7 +73,7 @@\n     private static int nextSchemaId; // for assigning unique ids to UDF columns\n     protected String getSchemaName(String name, Schema input) {\n         String alias = name + \"_\";\n-        if (input.getAliases().size() > 0){\n+        if (input!=null && input.getAliases().size() > 0){\n             alias += input.getAliases().iterator().next() + \"_\";\n         }\n ",
                "deletions": 1
            },
            {
                "sha": "9d285f9499223426d8a38116e73767712cd63443",
                "filename": "test/org/apache/pig/test/TestEvalPipeline2.java",
                "blob_url": "https://github.com/apache/pig/blob/a39376fb21036b903bf20cd67395cf482e954ae3/test/org/apache/pig/test/TestEvalPipeline2.java",
                "raw_url": "https://github.com/apache/pig/raw/a39376fb21036b903bf20cd67395cf482e954ae3/test/org/apache/pig/test/TestEvalPipeline2.java",
                "status": "modified",
                "changes": 25,
                "additions": 21,
                "contents_url": "https://api.github.com/repos/apache/pig/contents/test/org/apache/pig/test/TestEvalPipeline2.java?ref=a39376fb21036b903bf20cd67395cf482e954ae3",
                "patch": "@@ -973,13 +973,13 @@ public void testBinStorageByteCast() throws Exception{\n     \n     // See PIG-1761\n     @Test\n-    public void testBagDereferenceInMiddle() throws Exception{\n+    public void testBagDereferenceInMiddle1() throws Exception{\n         String[] input1 = {\n                 \"foo@apache#44\",\n         };\n         \n-        Util.createInputFile(cluster, \"table_testBagDereferenceInMiddle\", input1);\n-        pigServer.registerQuery(\"a = load 'table_testBagDereferenceInMiddle' as (a0:chararray);\");\n+        Util.createInputFile(cluster, \"table_testBagDereferenceInMiddle1\", input1);\n+        pigServer.registerQuery(\"a = load 'table_testBagDereferenceInMiddle1' as (a0:chararray);\");\n         pigServer.registerQuery(\"b = foreach a generate UPPER(REGEX_EXTRACT_ALL(a0, '.*@(.*)#.*').$0);\");\n         \n         Iterator<Tuple> iter = pigServer.openIterator(\"b\");\n@@ -988,6 +988,23 @@ public void testBagDereferenceInMiddle() throws Exception{\n         assertTrue(t.get(0).equals(\"APACHE\"));\n     }\n     \n+    // See PIG-1843\n+    @Test\n+    public void testBagDereferenceInMiddle2() throws Exception{\n+        String[] input1 = {\n+                \"foo apache\",\n+        };\n+        \n+        Util.createInputFile(cluster, \"table_testBagDereferenceInMiddle2\", input1);\n+        pigServer.registerQuery(\"a = load 'table_testBagDereferenceInMiddle2' as (a0:chararray);\");\n+        pigServer.registerQuery(\"b = foreach a generate \" + MapGenerate.class.getName() + \" (STRSPLIT(a0).$0);\");\n+        \n+        Iterator<Tuple> iter = pigServer.openIterator(\"b\");\n+        Tuple t = iter.next();\n+        assertTrue(t.size()==1);\n+        assertTrue(t.toString().equals(\"([key#1])\"));\n+    }\n+    \n     // See PIG-1766\n     @Test\n     public void testForEachSameOriginColumn1() throws Exception{\n@@ -1048,7 +1065,7 @@ public Map exec(Tuple input) throws IOException {\n         \n         @Override\n         public Schema outputSchema(Schema input) {\n-            return new Schema(new Schema.FieldSchema(null, DataType.MAP));\n+            return new Schema(new Schema.FieldSchema(getSchemaName(\"parselong\", input), DataType.MAP));\n         }\n     }\n     ",
                "deletions": 4
            }
        ]
    },
    {
        "repo": "pig",
        "message": "PIG-1647: Logical simplifier throws a NPE (yanz)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/pig/trunk@1001838 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/pig/commit/b4e4e0987b3775905dd44ed3a99e480a527f6cef",
        "parent": "https://github.com/apache/pig/commit/0f7b649310c03826779daa944e877edd52325f19",
        "bug_id": "pig_46",
        "file": [
            {
                "sha": "30784b3126d6c135f09ff6988132413a0577a7b0",
                "filename": "CHANGES.txt",
                "blob_url": "https://github.com/apache/pig/blob/b4e4e0987b3775905dd44ed3a99e480a527f6cef/CHANGES.txt",
                "raw_url": "https://github.com/apache/pig/raw/b4e4e0987b3775905dd44ed3a99e480a527f6cef/CHANGES.txt",
                "status": "modified",
                "changes": 2,
                "additions": 2,
                "contents_url": "https://api.github.com/repos/apache/pig/contents/CHANGES.txt?ref=b4e4e0987b3775905dd44ed3a99e480a527f6cef",
                "patch": "@@ -207,6 +207,8 @@ PIG-1309: Map-side Cogroup (ashutoshc)\n \n BUG FIXES\n \n+PIG-1647: Logical simplifier throws a NPE (yanz)\n+\n PIG-1642: Order by doesn't use estimation to determine the parallelism (rding)\n \n PIG-1644: New logical plan: Plan.connect with position is misused in some",
                "deletions": 0
            },
            {
                "sha": "9d471eef540eef18a119d98ab2356ac06a9a4883",
                "filename": "src/org/apache/pig/newplan/logical/rules/DNFPlanGenerator.java",
                "blob_url": "https://github.com/apache/pig/blob/b4e4e0987b3775905dd44ed3a99e480a527f6cef/src/org/apache/pig/newplan/logical/rules/DNFPlanGenerator.java",
                "raw_url": "https://github.com/apache/pig/raw/b4e4e0987b3775905dd44ed3a99e480a527f6cef/src/org/apache/pig/newplan/logical/rules/DNFPlanGenerator.java",
                "status": "modified",
                "changes": 40,
                "additions": 30,
                "contents_url": "https://api.github.com/repos/apache/pig/contents/src/org/apache/pig/newplan/logical/rules/DNFPlanGenerator.java?ref=b4e4e0987b3775905dd44ed3a99e480a527f6cef",
                "patch": "@@ -147,20 +147,30 @@ else if (!isRhsOr) {\n                     int lsize = lhsChildren.length, rsize = rhsChildren.length;\n                     LogicalExpression[][] grandChildrenL = new LogicalExpression[lsize][];;\n                     for (int i = 0; i < lsize; i++) {\n-                        if (lhsChildren[i] instanceof AndExpression || lhsChildren[i] instanceof DNFExpression) grandChildrenL[i] = dnfPlan.getSuccessors(\n-                                        lhsChildren[i]).toArray(\n-                                        new LogicalExpression[0]);\n-                        else {\n+                        if (lhsChildren[i] instanceof AndExpression) {\n+                            grandChildrenL[i] = lhsChildren[i].getPlan().getSuccessors(\n+                              lhsChildren[i]).toArray(\n+                              new LogicalExpression[0]);\n+                        } else if (lhsChildren[i] instanceof DNFExpression) {\n+                            grandChildrenL[i] = dnfPlan.getSuccessors(\n+                              lhsChildren[i]).toArray(\n+                              new LogicalExpression[0]);\n+                        } else {\n                             grandChildrenL[i] = new LogicalExpression[1];\n                             grandChildrenL[i][0] = (LogicalExpression) lhsChildren[i];\n                         }\n                     }\n                     LogicalExpression[][] grandChildrenR = new LogicalExpression[rsize][];;\n                     for (int i = 0; i < rsize; i++) {\n-                        if (rhsChildren[i] instanceof AndExpression || rhsChildren[i] instanceof DNFExpression) grandChildrenR[i] = dnfPlan.getSuccessors(\n-                                        rhsChildren[i]).toArray(\n-                                        new LogicalExpression[0]);\n-                        else {\n+                        if (rhsChildren[i] instanceof AndExpression) {\n+                            grandChildrenR[i] = rhsChildren[i].getPlan().getSuccessors(\n+                              rhsChildren[i]).toArray(\n+                              new LogicalExpression[0]);\n+                        } else if (rhsChildren[i] instanceof DNFExpression) {\n+                            grandChildrenR[i] = dnfPlan.getSuccessors(\n+                              rhsChildren[i]).toArray(\n+                              new LogicalExpression[0]);\n+                        } else {\n                             grandChildrenR[i] = new LogicalExpression[1];\n                             grandChildrenR[i][0] = (LogicalExpression) rhsChildren[i];\n                         }\n@@ -248,9 +258,14 @@ private void mergeSimpleOr(LogicalExpression current,\n         int size = orChildren.length;\n         LogicalExpression[][] grandChildrenOr = new LogicalExpression[size][];;\n         for (int i = 0; i < size; i++) {\n-            if (orChildren[i] instanceof AndExpression || orChildren[i] instanceof DNFExpression) grandChildrenOr[i] = dnfPlan.getSuccessors(\n+            if (orChildren[i] instanceof DNFExpression)\n+              grandChildrenOr[i] = dnfPlan.getSuccessors(\n                             orChildren[i]).toArray(\n                             new LogicalExpression[0]);\n+            else if (orChildren[i] instanceof AndExpression)\n+              grandChildrenOr[i] = orChildren[i].getPlan().getSuccessors(\n+                  orChildren[i]).toArray(\n+                  new LogicalExpression[0]);\n             else {\n                 grandChildrenOr[i] = new LogicalExpression[1];\n                 grandChildrenOr[i][0] = (LogicalExpression) orChildren[i];\n@@ -302,9 +317,14 @@ private void mergeAndOr(LogicalExpression current,\n         boolean andDNF = and.getPlan() == dnfPlan, orDNF = or.getPlan() == dnfPlan;\n         LogicalExpression[][] grandChildrenOr = new LogicalExpression[orSize][];;\n         for (int i = 0; i < orSize; i++) {\n-            if (orChildren[i] instanceof AndExpression || orChildren[i] instanceof DNFExpression) grandChildrenOr[i] = dnfPlan.getSuccessors(\n+            if (orChildren[i] instanceof DNFExpression)\n+              grandChildrenOr[i] = dnfPlan.getSuccessors(\n                             orChildren[i]).toArray(\n                             new LogicalExpression[0]);\n+            else if (orChildren[i] instanceof AndExpression)\n+              grandChildrenOr[i] = orChildren[i].getPlan().getSuccessors(\n+                  orChildren[i]).toArray(\n+                      new LogicalExpression[0]);\n             else {\n                 grandChildrenOr[i] = new LogicalExpression[1];\n                 grandChildrenOr[i][0] = (LogicalExpression) orChildren[i];",
                "deletions": 10
            },
            {
                "sha": "73773e7e061133cc51c8f26b2fe7fec85dbc4148",
                "filename": "test/org/apache/pig/test/TestFilterSimplification.java",
                "blob_url": "https://github.com/apache/pig/blob/b4e4e0987b3775905dd44ed3a99e480a527f6cef/test/org/apache/pig/test/TestFilterSimplification.java",
                "raw_url": "https://github.com/apache/pig/raw/b4e4e0987b3775905dd44ed3a99e480a527f6cef/test/org/apache/pig/test/TestFilterSimplification.java",
                "status": "modified",
                "changes": 104,
                "additions": 104,
                "contents_url": "https://api.github.com/repos/apache/pig/contents/test/org/apache/pig/test/TestFilterSimplification.java?ref=b4e4e0987b3775905dd44ed3a99e480a527f6cef",
                "patch": "@@ -666,6 +666,110 @@ public void test3() throws Exception {\n         assertTrue(expected.isEqual(newLogicalPlan));\n     }\n \n+    @Test\n+    public void test4() throws Exception {\n+        LogicalPlanTester lpt = new LogicalPlanTester(pc);\n+        lpt.buildPlan(\"b = filter (load 'd.txt' as (a:chararray, b:long, c:map[], d:chararray, e:chararray)) by a == 'v' and b == 117L and c#'p1' == 'h' and c#'p2' == 'to' and ((d is not null and d != '') or (e is not null and e != ''));\"); \n+\n+        org.apache.pig.impl.logicalLayer.LogicalPlan plan = lpt.buildPlan(\"store b into 'empty';\");\n+        LogicalPlan newLogicalPlan = migratePlan(plan);\n+\n+        PlanOptimizer optimizer = new MyPlanOptimizer(newLogicalPlan, 10);\n+        optimizer.optimize();\n+\n+        lpt = new LogicalPlanTester(pc);\n+        lpt.buildPlan(\"b = filter (load 'd.txt' as (a:chararray, b:long, c:map[], d:chararray, e:chararray)) by a == 'v' and b == 117L and c#'p1' == 'h' and c#'p2' == 'to' and ((d is not null and d != '') or (e is not null and e != ''));\"); \n+        plan = lpt.buildPlan(\"store b into 'empty';\");\n+        LogicalPlan expected = migratePlan(plan);\n+\n+        assertTrue(expected.isEqual(newLogicalPlan));\n+\n+        // mirror of the above\n+        lpt.buildPlan(\"b = filter (load 'd.txt' as (a:chararray, b:long, c:map[], d:chararray, e:chararray)) by ((d is not null and d != '') or (e is not null and e != '')) and a == 'v' and b == 117L and c#'p1' == 'h' and c#'p2' == 'to';\"); \n+\n+        plan = lpt.buildPlan(\"store b into 'empty';\");\n+        newLogicalPlan = migratePlan(plan);\n+\n+        optimizer = new MyPlanOptimizer(newLogicalPlan, 10);\n+        optimizer.optimize();\n+\n+        lpt = new LogicalPlanTester(pc);\n+        lpt.buildPlan(\"b = filter (load 'd.txt' as (a:chararray, b:long, c:map[], d:chararray, e:chararray)) by ((d is not null and d != '') or (e is not null and e != '')) and a == 'v' and b == 117L and c#'p1' == 'h' and c#'p2' == 'to';\"); \n+        plan = lpt.buildPlan(\"store b into 'empty';\");\n+        expected = migratePlan(plan);\n+\n+        assertTrue(expected.isEqual(newLogicalPlan));\n+\n+    }\n+\n+    @Test\n+    public void test5() throws Exception {\n+        // 2-level combo: 8 possibilities\n+        boolean[] booleans = {false, true};\n+        for (boolean b1 : booleans)\n+        for (boolean b2 : booleans)\n+        for (boolean b3 : booleans)\n+            comboRunner2(b1, b2, b3);\n+    }\n+\n+    private void comboRunner2(boolean b1, boolean b2, boolean b3) throws Exception {\n+        StringBuilder sb = new StringBuilder();\n+        sb.append(\"b = filter (load 'd.txt' as (a:int, b:int, c:int, d:int)) by (((a < 1) \" + (b1 ? \"and\" : \"or\") + \" (b < 2)) \" + (b2 ? \"and\" : \"or\") + \" ((c < 3) \" + (b3 ? \"and\" : \"or\") + \" (d < 4)));\");  \n+        String query = sb.toString();\n+\n+        LogicalPlanTester lpt = new LogicalPlanTester(pc);\n+        lpt.buildPlan(query); \n+\n+        org.apache.pig.impl.logicalLayer.LogicalPlan plan = lpt.buildPlan(\"store b into 'empty';\");\n+        LogicalPlan newLogicalPlan = migratePlan(plan);\n+\n+        PlanOptimizer optimizer = new MyPlanOptimizer(newLogicalPlan, 10);\n+        optimizer.optimize();\n+\n+        lpt = new LogicalPlanTester(pc);\n+        lpt.buildPlan(query); \n+        plan = lpt.buildPlan(\"store b into 'empty';\");\n+        LogicalPlan expected = migratePlan(plan);\n+\n+        assertTrue(expected.isEqual(newLogicalPlan));\n+    }\n+\n+    @Test\n+    public void test6() throws Exception {\n+        // 3-level combo: 128 possibilities\n+        boolean[] booleans = {false, true};\n+        for (boolean b1 : booleans)\n+        for (boolean b2 : booleans)\n+        for (boolean b3 : booleans)\n+        for (boolean b4 : booleans)\n+        for (boolean b5 : booleans)\n+        for (boolean b6 : booleans)\n+        for (boolean b7 : booleans)\n+            comboRunner3(b1, b2, b3, b4, b5, b6, b7);\n+    }\n+\n+    private void comboRunner3(boolean b1, boolean b2, boolean b3, boolean b4, boolean b5, boolean b6, boolean b7) throws Exception {\n+        StringBuilder sb = new StringBuilder();\n+        sb.append(\"b = filter (load 'd.txt' as (a:int, b:int, c:int, d:int, e:int, f:int, g:int, h:int)) by ((((a < 1) \" + (b1 ? \"and\" : \"or\") + \" (b < 2)) \" + (b2 ? \"and\" : \"or\") + \" ((c < 3) \" + (b3 ? \"and\" : \"or\") + \" (d < 4))) \" + (b4 ? \"and\" : \"or\") + \" (((e < 5) \" + (b5 ? \"and\" : \"or\") + \" (f < 6)) \" + (b6 ? \"and\" : \"or\") + \" ((g < 7) \" + (b7 ? \"and\" : \"or\") + \" (h < 8))));\");  \n+        String query = sb.toString();\n+\n+        LogicalPlanTester lpt = new LogicalPlanTester(pc);\n+        lpt.buildPlan(query); \n+\n+        org.apache.pig.impl.logicalLayer.LogicalPlan plan = lpt.buildPlan(\"store b into 'empty';\");\n+        LogicalPlan newLogicalPlan = migratePlan(plan);\n+\n+        PlanOptimizer optimizer = new MyPlanOptimizer(newLogicalPlan, 10);\n+        optimizer.optimize();\n+\n+        lpt = new LogicalPlanTester(pc);\n+        lpt.buildPlan(query); \n+        plan = lpt.buildPlan(\"store b into 'empty';\");\n+        LogicalPlan expected = migratePlan(plan);\n+\n+        assertTrue(expected.isEqual(newLogicalPlan));\n+    }\n+\n     public class MyPlanOptimizer extends LogicalPlanOptimizer {\n \n         protected MyPlanOptimizer(OperatorPlan p, int iterations) {",
                "deletions": 0
            }
        ]
    },
    {
        "repo": "pig",
        "message": "PIG-810: Fixed NPE in PigStats (gates)\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/pig/trunk@774989 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/pig/commit/7512a33a5a5582b47a1b45b2b60380a1a5e710eb",
        "parent": "https://github.com/apache/pig/commit/20b08c0e050e914531fb0d82ab9ee08344cf8aa8",
        "bug_id": "pig_47",
        "file": [
            {
                "sha": "7175634f5ea7e879154ab9c4e3b01273594f21fe",
                "filename": "CHANGES.txt",
                "blob_url": "https://github.com/apache/pig/blob/7512a33a5a5582b47a1b45b2b60380a1a5e710eb/CHANGES.txt",
                "raw_url": "https://github.com/apache/pig/raw/7512a33a5a5582b47a1b45b2b60380a1a5e710eb/CHANGES.txt",
                "status": "modified",
                "changes": 2,
                "additions": 2,
                "contents_url": "https://api.github.com/repos/apache/pig/contents/CHANGES.txt?ref=7512a33a5a5582b47a1b45b2b60380a1a5e710eb",
                "patch": "@@ -44,6 +44,8 @@ PIG-626: Add access to hadoop counters (shubhamc via gates).\n \n BUG FIXES\n \n+PIG-810: Fixed NPE in PigStats (gates)\n+\n PIG-804: problem with lineage with double map redirection (pradeepkth)\n \n PIG-733: Order by sampling dumps entire sample to hdfs which causes dfs",
                "deletions": 0
            },
            {
                "sha": "f0b87c7074e838c8a3fd0cb4aedc9a874f71ce09",
                "filename": "src/org/apache/pig/tools/pigstats/PigStats.java",
                "blob_url": "https://github.com/apache/pig/blob/7512a33a5a5582b47a1b45b2b60380a1a5e710eb/src/org/apache/pig/tools/pigstats/PigStats.java",
                "raw_url": "https://github.com/apache/pig/raw/7512a33a5a5582b47a1b45b2b60380a1a5e710eb/src/org/apache/pig/tools/pigstats/PigStats.java",
                "status": "modified",
                "changes": 2,
                "additions": 1,
                "contents_url": "https://api.github.com/repos/apache/pig/contents/src/org/apache/pig/tools/pigstats/PigStats.java?ref=7512a33a5a5582b47a1b45b2b60380a1a5e710eb",
                "patch": "@@ -172,7 +172,7 @@ else if(mode == ExecType.LOCAL)\n             \n         }\n         \n-        lastJobID = lastJob.getAssignedJobID().toString();\n+        if (lastJob != null) lastJobID = lastJob.getAssignedJobID().toString();\n         return stats;\n     }\n     ",
                "deletions": 1
            }
        ]
    },
    {
        "repo": "pig",
        "message": "PIG-288: NPE in Optimizer\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/pig/branches/types@674780 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/pig/commit/328e74e39b0fa5be55fdc7273c559d07e438be7b",
        "parent": "https://github.com/apache/pig/commit/7e473d164bb8149d5558d29c5f46219f5b9b27fc",
        "bug_id": "pig_48",
        "file": [
            {
                "sha": "0839d61c6ea96b593e346b3b074284a08f72f5fa",
                "filename": "src/org/apache/pig/impl/logicalLayer/LOCogroup.java",
                "blob_url": "https://github.com/apache/pig/blob/328e74e39b0fa5be55fdc7273c559d07e438be7b/src/org/apache/pig/impl/logicalLayer/LOCogroup.java",
                "raw_url": "https://github.com/apache/pig/raw/328e74e39b0fa5be55fdc7273c559d07e438be7b/src/org/apache/pig/impl/logicalLayer/LOCogroup.java",
                "status": "modified",
                "changes": 19,
                "additions": 19,
                "contents_url": "https://api.github.com/repos/apache/pig/contents/src/org/apache/pig/impl/logicalLayer/LOCogroup.java?ref=328e74e39b0fa5be55fdc7273c559d07e438be7b",
                "patch": "@@ -273,4 +273,23 @@ public void visit(LOVisitor v) throws VisitorException {\n         v.visit(this);\n     }\n \n+    /***\n+     *\n+     * This does switch the mapping\n+     *\n+     * oldOp -> List of inner plans\n+     *         to\n+     * newOp -> List of inner plans\n+     *\n+     * which is useful when there is a structural change in LogicalPlan\n+     *\n+     * @param oldOp the old operator\n+     * @param newOp the new operator\n+     */\n+    public void switchGroupByPlanOp(LogicalOperator oldOp,\n+                                    LogicalOperator newOp) {\n+        Collection<LogicalPlan> innerPlans = mGroupByPlans.removeKey(oldOp) ;\n+        mGroupByPlans.put(newOp, innerPlans);\n+    }\n+\n }",
                "deletions": 0
            },
            {
                "sha": "cd6d558a8d5ec49bd8b6d47952a991e24ca5d522",
                "filename": "src/org/apache/pig/impl/logicalLayer/optimizer/LogicalTransformer.java",
                "blob_url": "https://github.com/apache/pig/blob/328e74e39b0fa5be55fdc7273c559d07e438be7b/src/org/apache/pig/impl/logicalLayer/optimizer/LogicalTransformer.java",
                "raw_url": "https://github.com/apache/pig/raw/328e74e39b0fa5be55fdc7273c559d07e438be7b/src/org/apache/pig/impl/logicalLayer/optimizer/LogicalTransformer.java",
                "status": "modified",
                "changes": 10,
                "additions": 8,
                "contents_url": "https://api.github.com/repos/apache/pig/contents/src/org/apache/pig/impl/logicalLayer/optimizer/LogicalTransformer.java?ref=328e74e39b0fa5be55fdc7273c559d07e438be7b",
                "patch": "@@ -130,7 +130,7 @@ protected void visit(LOProject p) throws VisitorException {\n      * successors and reconnecting them to the new node as well as rebuilding\n      * all of the schemas.\n      * @param after Node to insert the new node after\n-     * @param newnode New node to insert\n+     * @param newNode New node to insert\n      * @param before Node to insert this node before\n      * @param projectionMapping A map that defines how projections in after\n      * relate to projections in newnode.  Keys are the projection offsets in\n@@ -148,6 +148,12 @@ protected void insertBetween(\n         mPlan.add(newNode);\n         mPlan.insertBetween(after, newNode, before);\n \n+        // Fix up COGroup internal wiring\n+        if (before instanceof LOCogroup) {\n+            LOCogroup cg = (LOCogroup) before ;\n+            cg.switchGroupByPlanOp(after, newNode);\n+        }\n+\n         // Visit all the inner plans of before and change their projects to\n         // connect to newNode instead of after.\n         // Find right inner plan(s) to visit\n@@ -181,7 +187,7 @@ protected void insertBetween(\n      * all of the schemas.  This function\n      * assumes that the node has only one predecessor.\n      * @param after Node to insert the new node after\n-     * @param newnode New node to insert\n+     * @param newNode New node to insert\n      * @param projectionMapping A map that defines how projections in after\n      * relate to projections in newnode.  Keys are the projection offsets in\n      * after, values are the new offsets in newnode.  If this field is null,",
                "deletions": 2
            },
            {
                "sha": "fea16361b0cf44e9b7b2189391dfb50de1ffdd12",
                "filename": "src/org/apache/pig/impl/logicalLayer/optimizer/SchemaCalculator.java",
                "blob_url": "https://github.com/apache/pig/blob/328e74e39b0fa5be55fdc7273c559d07e438be7b/src/org/apache/pig/impl/logicalLayer/optimizer/SchemaCalculator.java",
                "raw_url": "https://github.com/apache/pig/raw/328e74e39b0fa5be55fdc7273c559d07e438be7b/src/org/apache/pig/impl/logicalLayer/optimizer/SchemaCalculator.java",
                "status": "modified",
                "changes": 9,
                "additions": 2,
                "contents_url": "https://api.github.com/repos/apache/pig/contents/src/org/apache/pig/impl/logicalLayer/optimizer/SchemaCalculator.java?ref=328e74e39b0fa5be55fdc7273c559d07e438be7b",
                "patch": "@@ -186,7 +186,7 @@ protected void visit(LOCast cast) throws VisitorException {\n      * \n      * @param regexp\n      *            the logical regexp operator that has to be visited\n-     * @throws ParseException\n+     * @throws VisitorException\n      */\n     protected void visit(LORegexp regexp) throws VisitorException {\n         try {\n@@ -207,12 +207,7 @@ protected void visit(LOLoad load) throws VisitorException{\n     }\n     \n     protected void visit(LOStore store) throws VisitorException{\n-        try {\n-            store.getSchema();\n-            super.visit(store);\n-        } catch (FrontendException fe) {\n-            throw new VisitorException(fe);\n-        }\n+        // We don't calculate schema of LOStore\n     }\n     \n     protected void visit(LOConst c) throws VisitorException{",
                "deletions": 7
            },
            {
                "sha": "5b43820dd0c88ff5cdd5140cc0152395f9352728",
                "filename": "src/org/apache/pig/impl/plan/MultiMap.java",
                "blob_url": "https://github.com/apache/pig/blob/328e74e39b0fa5be55fdc7273c559d07e438be7b/src/org/apache/pig/impl/plan/MultiMap.java",
                "raw_url": "https://github.com/apache/pig/raw/328e74e39b0fa5be55fdc7273c559d07e438be7b/src/org/apache/pig/impl/plan/MultiMap.java",
                "status": "modified",
                "changes": 9,
                "additions": 9,
                "contents_url": "https://api.github.com/repos/apache/pig/contents/src/org/apache/pig/impl/plan/MultiMap.java?ref=328e74e39b0fa5be55fdc7273c559d07e438be7b",
                "patch": "@@ -113,6 +113,15 @@ public V remove(K key, V value) {\n         return keeper;\n     }\n \n+    /**\n+     * Remove all the values associated with the given key\n+     * @param key the key to be removed\n+     * @return list of all value being removed\n+     */\n+    public Collection<V> removeKey(K key) {\n+        return mMap.remove(key) ;\n+    }\n+\n     /**\n      * Get a set of all the keys in this map.\n      * @return Set of keys.",
                "deletions": 0
            }
        ]
    },
    {
        "repo": "pig",
        "message": "PIG-4315: MergeJoin or Split followed by order by gives NPE in Tez (rohini)\n\ngit-svn-id: https://svn.apache.org/repos/asf/pig/trunk@1700912 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/pig/commit/2e3e044bc11fb7cf67e96945c9e1fa8e5656d87e",
        "parent": "https://github.com/apache/pig/commit/97aa09dc59f496b44b8050f9292ef58de7d99452",
        "bug_id": "pig_49",
        "file": [
            {
                "sha": "ef6e4878ac5fa11828fc7a322cedcb536373a62f",
                "filename": "CHANGES.txt",
                "blob_url": "https://github.com/apache/pig/blob/2e3e044bc11fb7cf67e96945c9e1fa8e5656d87e/CHANGES.txt",
                "raw_url": "https://github.com/apache/pig/raw/2e3e044bc11fb7cf67e96945c9e1fa8e5656d87e/CHANGES.txt",
                "status": "modified",
                "changes": 2,
                "additions": 2,
                "contents_url": "https://api.github.com/repos/apache/pig/contents/CHANGES.txt?ref=2e3e044bc11fb7cf67e96945c9e1fa8e5656d87e",
                "patch": "@@ -38,6 +38,8 @@ PIG-4639: Add better parser for Apache HTTPD access log (nielsbasjes via daijy)\n \n BUG FIXES\n \n+PIG-4315: MergeJoin or Split followed by order by gives NPE in Tez (rohini)\n+\n PIG-4654: Reduce tez memory.reserve-fraction and clear spillables for better memory utilization (rohini)\n \n PIG-4628: Pig 0.14 job with order by fails in mapreduce mode with Oozie (knoguchi)",
                "deletions": 0
            },
            {
                "sha": "6fbcec68e9fcbc99c34c1be86f20f638ea50c0fe",
                "filename": "src/org/apache/pig/backend/hadoop/executionengine/tez/plan/TezOperPlan.java",
                "blob_url": "https://github.com/apache/pig/blob/2e3e044bc11fb7cf67e96945c9e1fa8e5656d87e/src/org/apache/pig/backend/hadoop/executionengine/tez/plan/TezOperPlan.java",
                "raw_url": "https://github.com/apache/pig/raw/2e3e044bc11fb7cf67e96945c9e1fa8e5656d87e/src/org/apache/pig/backend/hadoop/executionengine/tez/plan/TezOperPlan.java",
                "status": "modified",
                "changes": 8,
                "additions": 3,
                "contents_url": "https://api.github.com/repos/apache/pig/contents/src/org/apache/pig/backend/hadoop/executionengine/tez/plan/TezOperPlan.java?ref=2e3e044bc11fb7cf67e96945c9e1fa8e5656d87e",
                "patch": "@@ -193,10 +193,8 @@ public boolean disconnect(TezOperator from, TezOperator to) {\n     public void moveTree(TezOperator root, TezOperPlan newPlan) throws PlanException {\n         List<TezOperator> list = new ArrayList<TezOperator>();\n         list.add(root);\n-        int prevSize = 0;\n         int pos = 0;\n-        while (list.size() > prevSize) {\n-            prevSize = list.size();\n+        while (list.size() > pos) {\n             TezOperator node = list.get(pos);\n             if (getSuccessors(node)!=null) {\n                 for (TezOperator succ : getSuccessors(node)) {\n@@ -243,11 +241,11 @@ public void moveTree(TezOperator root, TezOperPlan newPlan) throws PlanException\n         }\n     }\n \n-    // This method is used in PigGraceShuffleVertexManager to get a list of grandparents. \n+    // This method is used in PigGraceShuffleVertexManager to get a list of grandparents.\n     // Also need to exclude grandparents which also a parent (a is both parent and grandparent in the diagram below)\n     //    a   ->    c\n     //      \\  b  /\n-    // \n+    //\n     public static List<TezOperator> getGrandParentsForGraceParallelism(TezOperPlan tezPlan, TezOperator op) {\n         List<TezOperator> grandParents = new ArrayList<TezOperator>();\n         List<TezOperator> preds = tezPlan.getPredecessors(op);",
                "deletions": 5
            },
            {
                "sha": "dec86863b4ad5238fe093d67ed1f974fe95c1c3c",
                "filename": "src/org/apache/pig/backend/hadoop/executionengine/tez/plan/operator/POFRJoinTez.java",
                "blob_url": "https://github.com/apache/pig/blob/2e3e044bc11fb7cf67e96945c9e1fa8e5656d87e/src/org/apache/pig/backend/hadoop/executionengine/tez/plan/operator/POFRJoinTez.java",
                "raw_url": "https://github.com/apache/pig/raw/2e3e044bc11fb7cf67e96945c9e1fa8e5656d87e/src/org/apache/pig/backend/hadoop/executionengine/tez/plan/operator/POFRJoinTez.java",
                "status": "modified",
                "changes": 2,
                "additions": 1,
                "contents_url": "https://api.github.com/repos/apache/pig/contents/src/org/apache/pig/backend/hadoop/executionengine/tez/plan/operator/POFRJoinTez.java?ref=2e3e044bc11fb7cf67e96945c9e1fa8e5656d87e",
                "patch": "@@ -73,7 +73,7 @@ public POFRJoinTez(POFRJoin copy, List<String> inputKeys) throws ExecException {\n \n     @Override\n     public void replaceInput(String oldInputKey, String newInputKey) {\n-        if (inputKeys.remove(oldInputKey)) {\n+        while (inputKeys.remove(oldInputKey)) {\n             inputKeys.add(newInputKey);\n         }\n     }",
                "deletions": 1
            },
            {
                "sha": "bb88af4a23d0819309f14ac11ff9620ff2dfa09f",
                "filename": "src/org/apache/pig/backend/hadoop/executionengine/tez/plan/operator/POShuffleTezLoad.java",
                "blob_url": "https://github.com/apache/pig/blob/2e3e044bc11fb7cf67e96945c9e1fa8e5656d87e/src/org/apache/pig/backend/hadoop/executionengine/tez/plan/operator/POShuffleTezLoad.java",
                "raw_url": "https://github.com/apache/pig/raw/2e3e044bc11fb7cf67e96945c9e1fa8e5656d87e/src/org/apache/pig/backend/hadoop/executionengine/tez/plan/operator/POShuffleTezLoad.java",
                "status": "modified",
                "changes": 2,
                "additions": 1,
                "contents_url": "https://api.github.com/repos/apache/pig/contents/src/org/apache/pig/backend/hadoop/executionengine/tez/plan/operator/POShuffleTezLoad.java?ref=2e3e044bc11fb7cf67e96945c9e1fa8e5656d87e",
                "patch": "@@ -73,7 +73,7 @@ public POShuffleTezLoad(POPackage pack) {\n \n     @Override\n     public void replaceInput(String oldInputKey, String newInputKey) {\n-        if (inputKeys.remove(oldInputKey)) {\n+        while (inputKeys.remove(oldInputKey)) {\n             inputKeys.add(newInputKey);\n         }\n     }",
                "deletions": 1
            },
            {
                "sha": "cdde2d16351575c26912cf35dfdfcf1ebad69329",
                "filename": "src/org/apache/pig/backend/hadoop/executionengine/tez/plan/operator/POShuffledValueInputTez.java",
                "blob_url": "https://github.com/apache/pig/blob/2e3e044bc11fb7cf67e96945c9e1fa8e5656d87e/src/org/apache/pig/backend/hadoop/executionengine/tez/plan/operator/POShuffledValueInputTez.java",
                "raw_url": "https://github.com/apache/pig/raw/2e3e044bc11fb7cf67e96945c9e1fa8e5656d87e/src/org/apache/pig/backend/hadoop/executionengine/tez/plan/operator/POShuffledValueInputTez.java",
                "status": "modified",
                "changes": 2,
                "additions": 1,
                "contents_url": "https://api.github.com/repos/apache/pig/contents/src/org/apache/pig/backend/hadoop/executionengine/tez/plan/operator/POShuffledValueInputTez.java?ref=2e3e044bc11fb7cf67e96945c9e1fa8e5656d87e",
                "patch": "@@ -71,7 +71,7 @@ public POShuffledValueInputTez(OperatorKey k) {\n \n     @Override\n     public void replaceInput(String oldInputKey, String newInputKey) {\n-        if (inputKeys.remove(oldInputKey)) {\n+        while (inputKeys.remove(oldInputKey)) {\n             inputKeys.add(newInputKey);\n         }\n     }",
                "deletions": 1
            },
            {
                "sha": "f8065e1de41db9ec4878f875407bdd88a4860a3e",
                "filename": "src/org/apache/pig/backend/hadoop/executionengine/tez/plan/operator/POValueOutputTez.java",
                "blob_url": "https://github.com/apache/pig/blob/2e3e044bc11fb7cf67e96945c9e1fa8e5656d87e/src/org/apache/pig/backend/hadoop/executionengine/tez/plan/operator/POValueOutputTez.java",
                "raw_url": "https://github.com/apache/pig/raw/2e3e044bc11fb7cf67e96945c9e1fa8e5656d87e/src/org/apache/pig/backend/hadoop/executionengine/tez/plan/operator/POValueOutputTez.java",
                "status": "modified",
                "changes": 2,
                "additions": 1,
                "contents_url": "https://api.github.com/repos/apache/pig/contents/src/org/apache/pig/backend/hadoop/executionengine/tez/plan/operator/POValueOutputTez.java?ref=2e3e044bc11fb7cf67e96945c9e1fa8e5656d87e",
                "patch": "@@ -96,7 +96,7 @@ public void initialize(ProcessorContext processorContext)\n \n     @Override\n     public void replaceOutput(String oldOutputKey, String newOutputKey) {\n-        if (outputKeys.remove(oldOutputKey)) {\n+        while (outputKeys.remove(oldOutputKey)) {\n             outputKeys.add(newOutputKey);\n         }\n     }",
                "deletions": 1
            },
            {
                "sha": "7fce1b32995c9dd08503a187c0bad55b61b09a80",
                "filename": "src/org/apache/pig/backend/hadoop/executionengine/tez/plan/optimizer/MultiQueryOptimizerTez.java",
                "blob_url": "https://github.com/apache/pig/blob/2e3e044bc11fb7cf67e96945c9e1fa8e5656d87e/src/org/apache/pig/backend/hadoop/executionengine/tez/plan/optimizer/MultiQueryOptimizerTez.java",
                "raw_url": "https://github.com/apache/pig/raw/2e3e044bc11fb7cf67e96945c9e1fa8e5656d87e/src/org/apache/pig/backend/hadoop/executionengine/tez/plan/optimizer/MultiQueryOptimizerTez.java",
                "status": "modified",
                "changes": 39,
                "additions": 3,
                "contents_url": "https://api.github.com/repos/apache/pig/contents/src/org/apache/pig/backend/hadoop/executionengine/tez/plan/optimizer/MultiQueryOptimizerTez.java?ref=2e3e044bc11fb7cf67e96945c9e1fa8e5656d87e",
                "patch": "@@ -23,20 +23,14 @@\n import java.util.Map.Entry;\n import java.util.Set;\n \n-import org.apache.commons.lang.ArrayUtils;\n import org.apache.pig.backend.hadoop.executionengine.physicalLayer.PhysicalOperator;\n-import org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.POUserFunc;\n import org.apache.pig.backend.hadoop.executionengine.physicalLayer.plans.PhysicalPlan;\n import org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POSplit;\n-import org.apache.pig.backend.hadoop.executionengine.physicalLayer.util.PlanHelper;\n import org.apache.pig.backend.hadoop.executionengine.tez.plan.TezEdgeDescriptor;\n import org.apache.pig.backend.hadoop.executionengine.tez.plan.TezOpPlanVisitor;\n import org.apache.pig.backend.hadoop.executionengine.tez.plan.TezOperPlan;\n import org.apache.pig.backend.hadoop.executionengine.tez.plan.TezOperator;\n import org.apache.pig.backend.hadoop.executionengine.tez.plan.operator.POValueOutputTez;\n-import org.apache.pig.backend.hadoop.executionengine.tez.plan.udf.ReadScalarsTez;\n-import org.apache.pig.backend.hadoop.executionengine.tez.runtime.TezInput;\n-import org.apache.pig.backend.hadoop.executionengine.tez.runtime.TezOutput;\n import org.apache.pig.backend.hadoop.executionengine.tez.util.TezCompilerUtil;\n import org.apache.pig.impl.plan.OperatorKey;\n import org.apache.pig.impl.plan.PlanException;\n@@ -214,22 +208,12 @@ private void removeSplittee(TezOperPlan plan, TezOperator splitter,\n \n         if (plan.getPredecessors(splittee) != null) {\n             for (TezOperator pred : new ArrayList<TezOperator>(plan.getPredecessors(splittee))) {\n-                List<TezOutput> tezOutputs = PlanHelper.getPhysicalOperators(pred.plan,\n-                        TezOutput.class);\n-                for (TezOutput tezOut : tezOutputs) {\n-                    if (ArrayUtils.contains(tezOut.getTezOutputs(), spliteeKey)) {\n-                        tezOut.replaceOutput(spliteeKey, splitterKey);\n-                    }\n-                }\n-\n                 TezEdgeDescriptor edge = pred.outEdges.remove(splittee.getOperatorKey());\n                 if (edge == null) {\n                     throw new VisitorException(\"Edge description is empty\");\n                 }\n-                pred.outEdges.put(splitter.getOperatorKey(), edge);\n-                splitter.inEdges.put(pred.getOperatorKey(), edge);\n                 plan.disconnect(pred, splittee);\n-                plan.connect(pred, splitter);\n+                TezCompilerUtil.connectTezOpToNewSuccesor(plan, pred, splitter, edge, spliteeKey);\n             }\n         }\n \n@@ -244,27 +228,10 @@ private void removeSplittee(TezOperPlan plan, TezOperator splitter,\n \n                 // Do not connect again in case of self join/cross/cogroup or union\n                 if (splitterSuccs == null || !splitterSuccs.contains(succTezOperator)) {\n-                    TezCompilerUtil.connect(plan, splitter, succTezOperator, edge);\n+                    TezCompilerUtil.connectTezOpToNewPredecessor(plan, succTezOperator, splitter, edge, null);\n                 }\n \n-                try {\n-                    List<TezInput> inputs = PlanHelper.getPhysicalOperators(succTezOperator.plan, TezInput.class);\n-                    for (TezInput input : inputs) {\n-                        input.replaceInput(spliteeKey,\n-                                splitterKey);\n-                    }\n-                    List<POUserFunc> userFuncs = PlanHelper.getPhysicalOperators(succTezOperator.plan, POUserFunc.class);\n-                    for (POUserFunc userFunc : userFuncs) {\n-                        if (userFunc.getFunc() instanceof ReadScalarsTez) {\n-                            TezInput tezInput = (TezInput)userFunc.getFunc();\n-                            tezInput.replaceInput(spliteeKey,\n-                                    splitterKey);\n-                            userFunc.getFuncSpec().setCtorArgs(tezInput.getTezInputs());\n-                        }\n-                    }\n-                } catch (VisitorException e) {\n-                    throw new PlanException(e);\n-                }\n+                TezCompilerUtil.replaceInput(succTezOperator, spliteeKey, splitterKey);\n \n                 if (succTezOperator.isUnion()) {\n                     int index = succTezOperator.getUnionMembers().indexOf(splittee.getOperatorKey());",
                "deletions": 36
            },
            {
                "sha": "94a578c27dce31ac6eddf34f2f48e33ad767500a",
                "filename": "src/org/apache/pig/backend/hadoop/executionengine/tez/plan/optimizer/UnionOptimizer.java",
                "blob_url": "https://github.com/apache/pig/blob/2e3e044bc11fb7cf67e96945c9e1fa8e5656d87e/src/org/apache/pig/backend/hadoop/executionengine/tez/plan/optimizer/UnionOptimizer.java",
                "raw_url": "https://github.com/apache/pig/raw/2e3e044bc11fb7cf67e96945c9e1fa8e5656d87e/src/org/apache/pig/backend/hadoop/executionengine/tez/plan/optimizer/UnionOptimizer.java",
                "status": "modified",
                "changes": 32,
                "additions": 4,
                "contents_url": "https://api.github.com/repos/apache/pig/contents/src/org/apache/pig/backend/hadoop/executionengine/tez/plan/optimizer/UnionOptimizer.java?ref=2e3e044bc11fb7cf67e96945c9e1fa8e5656d87e",
                "patch": "@@ -26,7 +26,6 @@\n import java.util.Map.Entry;\n import java.util.Set;\n \n-import org.apache.commons.lang.ArrayUtils;\n import org.apache.pig.backend.hadoop.executionengine.physicalLayer.PhysicalOperator;\n import org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.POUserFunc;\n import org.apache.pig.backend.hadoop.executionengine.physicalLayer.plans.PhysicalPlan;\n@@ -43,6 +42,7 @@\n import org.apache.pig.backend.hadoop.executionengine.tez.plan.udf.ReadScalarsTez;\n import org.apache.pig.backend.hadoop.executionengine.tez.runtime.TezInput;\n import org.apache.pig.backend.hadoop.executionengine.tez.runtime.TezOutput;\n+import org.apache.pig.backend.hadoop.executionengine.tez.util.TezCompilerUtil;\n import org.apache.pig.builtin.RoundRobinPartitioner;\n import org.apache.pig.impl.plan.OperatorKey;\n import org.apache.pig.impl.plan.PlanException;\n@@ -274,14 +274,9 @@ private void connectUnionNonMemberPredecessorsToSplit(TezOperator unionOp,\n                 }\n \n                 for (TezOperator actualPred : actualPreds) {\n-                    List<TezOutput> tezOutputs = PlanHelper.getPhysicalOperators(actualPred.plan,\n-                                    TezOutput.class);\n \n-                    for (TezOutput tezOut : tezOutputs) {\n-                        if (ArrayUtils.contains(tezOut.getTezOutputs(), unionOpKey)) {\n-                            tezOut.replaceOutput(unionOpKey, splitPredKey.toString());\n-                        }\n-                    }\n+                    TezCompilerUtil.replaceOutput(actualPred, unionOpKey, splitPredKey.toString());\n+\n                     TezEdgeDescriptor edge = actualPred.outEdges.remove(unionOp.getOperatorKey());\n                     if (edge == null) {\n                         throw new VisitorException(\"Edge description is empty\");\n@@ -343,27 +338,8 @@ private void connectSplitOpToUnionSuccessors(TezOperator unionOp,\n                 }\n \n                 for (TezOperator actualSucc : actualSuccs) {\n-                    LinkedList<TezInput> inputs = PlanHelper.getPhysicalOperators(succ.plan, TezInput.class);\n-                    for (TezInput tezInput : inputs) {\n-                        for (String inputKey : tezInput.getTezInputs()) {\n-                            if (inputKey.equals(unionOpKey)) {\n-                                tezInput.replaceInput(inputKey, splitPredOpKey);\n-                            }\n-                        }\n-                    }\n \n-                    List<POUserFunc> userFuncs = PlanHelper.getPhysicalOperators(succ.plan, POUserFunc.class);\n-                    for (POUserFunc userFunc : userFuncs) {\n-                        if (userFunc.getFunc() instanceof ReadScalarsTez) {\n-                            TezInput tezInput = (TezInput)userFunc.getFunc();\n-                            for (String inputKey : tezInput.getTezInputs()) {\n-                                if (inputKey.equals(unionOpKey)) {\n-                                    tezInput.replaceInput(inputKey, splitPredOpKey);\n-                                    userFunc.getFuncSpec().setCtorArgs(tezInput.getTezInputs());\n-                                }\n-                            }\n-                        }\n-                    }\n+                    TezCompilerUtil.replaceInput(succ, unionOpKey, splitPredOpKey);\n \n                     TezEdgeDescriptor edge = actualSucc.inEdges.remove(unionOp.getOperatorKey());\n                     if (edge == null) {",
                "deletions": 28
            },
            {
                "sha": "71083de0ac2ca6f45672d30eead4b93c922d9158",
                "filename": "src/org/apache/pig/backend/hadoop/executionengine/tez/util/TezCompilerUtil.java",
                "blob_url": "https://github.com/apache/pig/blob/2e3e044bc11fb7cf67e96945c9e1fa8e5656d87e/src/org/apache/pig/backend/hadoop/executionengine/tez/util/TezCompilerUtil.java",
                "raw_url": "https://github.com/apache/pig/raw/2e3e044bc11fb7cf67e96945c9e1fa8e5656d87e/src/org/apache/pig/backend/hadoop/executionengine/tez/util/TezCompilerUtil.java",
                "status": "modified",
                "changes": 75,
                "additions": 67,
                "contents_url": "https://api.github.com/repos/apache/pig/contents/src/org/apache/pig/backend/hadoop/executionengine/tez/util/TezCompilerUtil.java?ref=2e3e044bc11fb7cf67e96945c9e1fa8e5656d87e",
                "patch": "@@ -22,10 +22,12 @@\n import java.util.LinkedList;\n import java.util.List;\n \n+import org.apache.commons.lang.ArrayUtils;\n import org.apache.pig.PigException;\n import org.apache.pig.backend.executionengine.ExecException;\n import org.apache.pig.backend.hadoop.executionengine.physicalLayer.PhysicalOperator;\n import org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.POProject;\n+import org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.POUserFunc;\n import org.apache.pig.backend.hadoop.executionengine.physicalLayer.plans.PhysicalPlan;\n import org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POForEach;\n import org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POPackage;\n@@ -37,6 +39,9 @@\n import org.apache.pig.backend.hadoop.executionengine.tez.plan.operator.POLocalRearrangeTez;\n import org.apache.pig.backend.hadoop.executionengine.tez.plan.operator.POStoreTez;\n import org.apache.pig.backend.hadoop.executionengine.tez.plan.operator.POValueOutputTez;\n+import org.apache.pig.backend.hadoop.executionengine.tez.plan.udf.ReadScalarsTez;\n+import org.apache.pig.backend.hadoop.executionengine.tez.runtime.TezInput;\n+import org.apache.pig.backend.hadoop.executionengine.tez.runtime.TezOutput;\n import org.apache.pig.builtin.RoundRobinPartitioner;\n import org.apache.pig.data.DataType;\n import org.apache.pig.data.TupleFactory;\n@@ -123,19 +128,73 @@ static public TezEdgeDescriptor connect(TezOperPlan plan, TezOperator from, TezO\n \n     static public void connect(TezOperPlan plan, TezOperator from, TezOperator to, TezEdgeDescriptor edge) throws PlanException {\n         plan.connect(from, to);\n-        if (from.plan.getLeaves()!=null && !from.plan.getLeaves().isEmpty()) {\n-            PhysicalOperator leaf = from.plan.getLeaves().get(0);\n-            // It could be POStoreTez incase of sampling job in order by\n-            if (leaf instanceof POLocalRearrangeTez) {\n-                POLocalRearrangeTez lr = (POLocalRearrangeTez) leaf;\n-                lr.setOutputKey(to.getOperatorKey().toString());\n-            }\n-        }\n+\n         // Add edge descriptors to old and new operators\n         to.inEdges.put(from.getOperatorKey(), edge);\n         from.outEdges.put(to.getOperatorKey(), edge);\n     }\n \n+    static public void connectTezOpToNewPredecessor(TezOperPlan plan,\n+            TezOperator tezOp, TezOperator newPredecessor,\n+            TezEdgeDescriptor edge, String oldInputKey) throws PlanException {\n+        plan.connect(newPredecessor, tezOp);\n+        // Add edge descriptors to old and new operators\n+        tezOp.inEdges.put(newPredecessor.getOperatorKey(), edge);\n+        newPredecessor.outEdges.put(tezOp.getOperatorKey(), edge);\n+\n+        if (oldInputKey != null) {\n+            replaceInput(tezOp, oldInputKey, newPredecessor.getOperatorKey().toString());\n+        }\n+    }\n+\n+    public static void replaceInput(TezOperator tezOp, String oldInputKey,\n+            String newInputKey) throws PlanException {\n+        try {\n+            List<TezInput> inputs = PlanHelper.getPhysicalOperators(tezOp.plan, TezInput.class);\n+            for (TezInput input : inputs) {\n+                input.replaceInput(oldInputKey, newInputKey);\n+            }\n+            List<POUserFunc> userFuncs = PlanHelper.getPhysicalOperators(tezOp.plan, POUserFunc.class);\n+            for (POUserFunc userFunc : userFuncs) {\n+                if (userFunc.getFunc() instanceof ReadScalarsTez) {\n+                    TezInput input = (TezInput)userFunc.getFunc();\n+                    input.replaceInput(oldInputKey, newInputKey);\n+                    userFunc.getFuncSpec().setCtorArgs(input.getTezInputs());\n+                }\n+            }\n+        } catch (VisitorException e) {\n+            throw new PlanException(e);\n+        }\n+    }\n+\n+    static public void connectTezOpToNewSuccesor(TezOperPlan plan,\n+            TezOperator tezOp, TezOperator newSuccessor,\n+            TezEdgeDescriptor edge, String oldOutputKey) throws PlanException {\n+        plan.connect(tezOp, newSuccessor);\n+        // Add edge descriptors to old and new operators\n+        newSuccessor.inEdges.put(tezOp.getOperatorKey(), edge);\n+        tezOp.outEdges.put(newSuccessor.getOperatorKey(), edge);\n+\n+        if (oldOutputKey != null) {\n+            replaceOutput(tezOp, oldOutputKey, newSuccessor.getOperatorKey().toString());\n+        }\n+    }\n+\n+    public static void replaceOutput(TezOperator tezOp, String oldOutputKey,\n+            String newOutputKey) throws PlanException {\n+        try {\n+            List<TezOutput> tezOutputs = PlanHelper.getPhysicalOperators(tezOp.plan,\n+                    TezOutput.class);\n+            for (TezOutput tezOut : tezOutputs) {\n+                if (ArrayUtils.contains(tezOut.getTezOutputs(), oldOutputKey)) {\n+                    tezOut.replaceOutput(oldOutputKey, newOutputKey);\n+                }\n+            }\n+        } catch (VisitorException e) {\n+            throw new PlanException(e);\n+        }\n+    }\n+\n     static public POForEach getForEach(POProject project, int rp, String scope, NodeIdGenerator nig) {\n         PhysicalPlan forEachPlan = new PhysicalPlan();\n         forEachPlan.add(project);",
                "deletions": 8
            },
            {
                "sha": "8d2ad85388416ec825165fca16db7ba9cc5693ae",
                "filename": "test/org/apache/pig/test/TestHBaseStorage.java",
                "blob_url": "https://github.com/apache/pig/blob/2e3e044bc11fb7cf67e96945c9e1fa8e5656d87e/test/org/apache/pig/test/TestHBaseStorage.java",
                "raw_url": "https://github.com/apache/pig/raw/2e3e044bc11fb7cf67e96945c9e1fa8e5656d87e/test/org/apache/pig/test/TestHBaseStorage.java",
                "status": "modified",
                "changes": 11,
                "additions": 4,
                "contents_url": "https://api.github.com/repos/apache/pig/contents/test/org/apache/pig/test/TestHBaseStorage.java?ref=2e3e044bc11fb7cf67e96945c9e1fa8e5656d87e",
                "patch": "@@ -37,7 +37,6 @@\n import org.apache.hadoop.hbase.client.ResultScanner;\n import org.apache.hadoop.hbase.client.Scan;\n import org.apache.hadoop.hbase.util.Bytes;\n-import org.apache.pig.ExecType;\n import org.apache.pig.PigServer;\n import org.apache.pig.backend.executionengine.ExecException;\n import org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.MRConfiguration;\n@@ -49,7 +48,6 @@\n import org.junit.After;\n import org.junit.AfterClass;\n import org.junit.Assert;\n-import org.junit.Assume;\n import org.junit.Before;\n import org.junit.BeforeClass;\n import org.junit.Test;\n@@ -835,7 +833,6 @@ public void testLoadWithProjection_2() throws IOException {\n      */\n     @Test\n     public void testMergeJoin() throws IOException {\n-        Assume.assumeTrue(\"Skip this test for TEZ. See PIG-4315\", pig.getPigContext().getExecType().equals(ExecType.LOCAL));\n         prepareTable(TESTTABLE_1, true, DataFormat.HBaseBinary);\n         prepareTable(TESTTABLE_2, true, DataFormat.HBaseBinary);\n         pig.registerQuery(\"a = load 'hbase://\" + TESTTABLE_1 + \"' using \"\n@@ -1078,7 +1075,7 @@ public void testStoreToHBase_1_with_timestamp() throws IOException {\n             long col_a_ts = getColTimestamp(result, TESTCOLUMN_A);\n             long col_b_ts = getColTimestamp(result, TESTCOLUMN_B);\n             long col_c_ts = getColTimestamp(result, TESTCOLUMN_C);\n-            \n+\n             Assert.assertEquals(timestamp, col_a_ts);\n             Assert.assertEquals(timestamp, col_b_ts);\n             Assert.assertEquals(timestamp, col_c_ts);\n@@ -1125,7 +1122,7 @@ public void testStoreToHBase_1_with_datetime_timestamp() throws IOException {\n             long col_a_ts = getColTimestamp(result, TESTCOLUMN_A);\n             long col_b_ts = getColTimestamp(result, TESTCOLUMN_B);\n             long col_c_ts = getColTimestamp(result, TESTCOLUMN_C);\n-            \n+\n             Assert.assertEquals(timestamp, col_a_ts);\n             Assert.assertEquals(timestamp, col_b_ts);\n             Assert.assertEquals(timestamp, col_c_ts);\n@@ -1172,7 +1169,7 @@ public void testStoreToHBase_1_with_bytearray_timestamp() throws IOException {\n             long col_a_ts = getColTimestamp(result, TESTCOLUMN_A);\n             long col_b_ts = getColTimestamp(result, TESTCOLUMN_B);\n             long col_c_ts = getColTimestamp(result, TESTCOLUMN_C);\n-            \n+\n             Assert.assertEquals(timestamp, col_a_ts);\n             Assert.assertEquals(timestamp, col_b_ts);\n             Assert.assertEquals(timestamp, col_c_ts);\n@@ -1217,7 +1214,7 @@ public void testStoreToHBase_1_with_delete() throws IOException {\n             long col_a_ts = getColTimestamp(result, TESTCOLUMN_A);\n             long col_b_ts = getColTimestamp(result, TESTCOLUMN_B);\n             long col_c_ts = getColTimestamp(result, TESTCOLUMN_C);\n-            \n+\n             Assert.assertEquals(\"00\".substring(v.length()) + v, rowKey);\n             Assert.assertEquals(i, col_a);\n             Assert.assertEquals(i + 0.0, col_b, 1e-6);",
                "deletions": 7
            }
        ]
    },
    {
        "repo": "pig",
        "message": "PIG-69: NPE in PigContext.setJobtrackerLocation \n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/pig/trunk@616129 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/pig/commit/2cdb4de34e4ffae394615c14cc360405492a04d3",
        "parent": "https://github.com/apache/pig/commit/243ab4e809ad0b2c1f25f934c685d6806894e8e0",
        "bug_id": "pig_50",
        "file": [
            {
                "sha": "753522e8873809dd0598dbcef443af92cbe84a34",
                "filename": "CHANGES.txt",
                "blob_url": "https://github.com/apache/pig/blob/2cdb4de34e4ffae394615c14cc360405492a04d3/CHANGES.txt",
                "raw_url": "https://github.com/apache/pig/raw/2cdb4de34e4ffae394615c14cc360405492a04d3/CHANGES.txt",
                "status": "modified",
                "changes": 2,
                "additions": 2,
                "contents_url": "https://api.github.com/repos/apache/pig/contents/CHANGES.txt?ref=2cdb4de34e4ffae394615c14cc360405492a04d3",
                "patch": "@@ -72,3 +72,5 @@ Trunk (unreleased changes)\n \tPIG-77: Added eclipse specific files to svn:ignore\n \n \tPIG-57: Fixed NPE in PigContext.fixUpDomain (francisoud via gates)\n+\n+\tPIG-69: NPE in PigContext.setJobtrackerLocation (francisoud via gates)",
                "deletions": 0
            },
            {
                "sha": "4b74a2bc61f940a31b3efb53f70af4e37da9b567",
                "filename": "src/org/apache/pig/impl/PigContext.java",
                "blob_url": "https://github.com/apache/pig/blob/2cdb4de34e4ffae394615c14cc360405492a04d3/src/org/apache/pig/impl/PigContext.java",
                "raw_url": "https://github.com/apache/pig/raw/2cdb4de34e4ffae394615c14cc360405492a04d3/src/org/apache/pig/impl/PigContext.java",
                "status": "modified",
                "changes": 12,
                "additions": 9,
                "contents_url": "https://api.github.com/repos/apache/pig/contents/src/org/apache/pig/impl/PigContext.java?ref=2cdb4de34e4ffae394615c14cc360405492a04d3",
                "patch": "@@ -74,7 +74,7 @@\n     private ExecType execType;;    \n \n     //  configuration for connecting to hadoop\n-    transient private JobConf conf = null;        \n+    transient private JobConf conf = new JobConf();\n     \n     //  extra jar files that are needed to run a job\n     transient public List<URL> extraJars = new LinkedList<URL>();              \n@@ -179,7 +179,6 @@ public void connect(){\n \t\t     \t}\n \t\t\telse\n \t\t\t{\n-\t\t\t\tconf = new JobConf();\n         \t\t\tString cluster = System.getProperty(\"cluster\");\n         \t\t\tif (cluster!=null && cluster.length() > 0){\n \t        \t\t\tif(cluster.indexOf(':') < 0) {\n@@ -435,10 +434,14 @@ public JobConf getConf() {\n         return conf;\n     }\n \n+    @Deprecated\n+    /** @deprecated use setConf() instead */\n     public void setJobtrackerLocation(String newLocation) {\n         conf.set(\"mapred.job.tracker\", newLocation);\n     }\n \n+    @Deprecated\n+    /** @deprecated use setConf() instead */\n     public void setFilesystemLocation(String newLocation) {\n         conf.set(\"fs.default.name\", newLocation);\n     }\n@@ -605,5 +608,8 @@ public Object instantiateFuncFromAlias(String alias) throws IOException {\n \tpublic void setExecType(ExecType execType) {\n \t\tthis.execType = execType;\n \t}\n-\t\t\n+\n+\tpublic void setConf(JobConf conf) {\n+\t\tthis.conf = conf;\n+\t}\n }",
                "deletions": 3
            }
        ]
    },
    {
        "repo": "pig",
        "message": "PIG-57: Fixed NPE in PigContext.fixUpDomain\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/pig/trunk@616108 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/pig/commit/243ab4e809ad0b2c1f25f934c685d6806894e8e0",
        "parent": "https://github.com/apache/pig/commit/c2b478d341d42de3bfcd2da51c520fc807094678",
        "bug_id": "pig_51",
        "file": [
            {
                "sha": "d91e1d70e2a1abbc8634fb9c09eef2384684f234",
                "filename": "CHANGES.txt",
                "blob_url": "https://github.com/apache/pig/blob/243ab4e809ad0b2c1f25f934c685d6806894e8e0/CHANGES.txt",
                "raw_url": "https://github.com/apache/pig/raw/243ab4e809ad0b2c1f25f934c685d6806894e8e0/CHANGES.txt",
                "status": "modified",
                "changes": 2,
                "additions": 2,
                "contents_url": "https://api.github.com/repos/apache/pig/contents/CHANGES.txt?ref=243ab4e809ad0b2c1f25f934c685d6806894e8e0",
                "patch": "@@ -70,3 +70,5 @@ Trunk (unreleased changes)\n \tPIG-63: Fix for non-ascii UTF-8 data (breed@ and olgan@)\n \n \tPIG-77: Added eclipse specific files to svn:ignore\n+\n+\tPIG-57: Fixed NPE in PigContext.fixUpDomain (francisoud via gates)",
                "deletions": 0
            },
            {
                "sha": "42135b84844d583e11c90f99455897e8277fc33b",
                "filename": "src/org/apache/pig/impl/PigContext.java",
                "blob_url": "https://github.com/apache/pig/blob/243ab4e809ad0b2c1f25f934c685d6806894e8e0/src/org/apache/pig/impl/PigContext.java",
                "raw_url": "https://github.com/apache/pig/raw/243ab4e809ad0b2c1f25f934c685d6806894e8e0/src/org/apache/pig/impl/PigContext.java",
                "status": "modified",
                "changes": 14,
                "additions": 14,
                "contents_url": "https://api.github.com/repos/apache/pig/contents/src/org/apache/pig/impl/PigContext.java?ref=243ab4e809ad0b2c1f25f934c685d6806894e8e0",
                "patch": "@@ -351,9 +351,23 @@ public String getJobName(){\n         }\n         throw new RuntimeException(\"Could not scrape needed information.\");\n     }\n+    \n+    /**\n+     * Transform from \"hostname:port\" to \"ip:port\".\n+     * @param hostPort \"hostname:port\"\n+     * @throws IllegalArgumentException if hostPort doesn't match pattern 'host:port'\n+     * @return \"ip:port\"\n+     */\n     private String fixUpDomain(String hostPort) throws UnknownHostException {\n+      if (hostPort == null) {\n+        return null;\n+      }\n         String parts[] = hostPort.split(\":\");\n+        if (parts.length < 2) {\n+          throw new IllegalArgumentException(\"Invalid 'host:port' parameter was: \" + hostPort);\n+        }\n         if (parts[0].indexOf('.') == -1) {\n+          // FIXME don't hardcode \"inktomisearch\" strings\n             parts[0] = parts[0] + \".inktomisearch.com\";\n         }\n         InetAddress.getByName(parts[0]);",
                "deletions": 0
            }
        ]
    },
    {
        "repo": "pig",
        "message": "PIG-2509: Util.getSchemaFromString fails with java.lang.NullPointerException when a tuple in a bag has no name (as when used in MongoStorage UDF)\n\ngit-svn-id: https://svn.apache.org/repos/asf/pig/trunk@1295994 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/pig/commit/be22caceed47a761b2483e23b5e4717f0d0c29b2",
        "parent": "https://github.com/apache/pig/commit/e65d01535766cfcd59c73e47a4557e7a67a25ba0",
        "bug_id": "pig_52",
        "file": [
            {
                "sha": "869464ef5367693903aa6fef4f5bdce9cd0a2ea6",
                "filename": "CHANGES.txt",
                "blob_url": "https://github.com/apache/pig/blob/be22caceed47a761b2483e23b5e4717f0d0c29b2/CHANGES.txt",
                "raw_url": "https://github.com/apache/pig/raw/be22caceed47a761b2483e23b5e4717f0d0c29b2/CHANGES.txt",
                "status": "modified",
                "changes": 2,
                "additions": 2,
                "contents_url": "https://api.github.com/repos/apache/pig/contents/CHANGES.txt?ref=be22caceed47a761b2483e23b5e4717f0d0c29b2",
                "patch": "@@ -265,6 +265,8 @@ PIG-2228: support partial aggregation in map task (thejas)\n \n BUG FIXES\n \n+PIG-2509: Util.getSchemaFromString fails with java.lang.NullPointerException when a tuple in a bag has no name (as when used in MongoStorage UDF) (jcoveney via daijy)\n+\n PIG-2559: Embedded pig in python; invoking sys.exit(0) causes script failure (vivekp via daijy)\n \n PIG-2530: Reusing alias name in nested foreach causes incorrect results (daijy)",
                "deletions": 0
            },
            {
                "sha": "b6ba421f3e6763989097200033685a8ef8fe25a2",
                "filename": "src/org/apache/pig/parser/QueryParser.g",
                "blob_url": "https://github.com/apache/pig/blob/be22caceed47a761b2483e23b5e4717f0d0c29b2/src/org/apache/pig/parser/QueryParser.g",
                "raw_url": "https://github.com/apache/pig/raw/be22caceed47a761b2483e23b5e4717f0d0c29b2/src/org/apache/pig/parser/QueryParser.g",
                "status": "modified",
                "changes": 4,
                "additions": 3,
                "contents_url": "https://api.github.com/repos/apache/pig/contents/src/org/apache/pig/parser/QueryParser.g?ref=be22caceed47a761b2483e23b5e4717f0d0c29b2",
                "patch": "@@ -315,7 +315,9 @@ tuple_type : TUPLE? LEFT_PAREN field_def_list? RIGHT_PAREN\n           -> ^( TUPLE_TYPE field_def_list? )\n ;\n \n-bag_type : BAG? LEFT_CURLY ( ( identifier COLON )? tuple_type )? RIGHT_CURLY\n+bag_type : BAG? LEFT_CURLY ( null_keyword COLON tuple_type? ) RIGHT_CURLY\n+        -> ^( BAG_TYPE tuple_type? )\n+         | BAG? LEFT_CURLY ( ( identifier COLON )? tuple_type )? RIGHT_CURLY\n         -> ^( BAG_TYPE identifier? tuple_type? )\n ;\n ",
                "deletions": 1
            },
            {
                "sha": "38b6821eee13dc0f9ca9e1e46b17da55ffac4b6a",
                "filename": "test/org/apache/pig/test/TestSchema.java",
                "blob_url": "https://github.com/apache/pig/blob/be22caceed47a761b2483e23b5e4717f0d0c29b2/test/org/apache/pig/test/TestSchema.java",
                "raw_url": "https://github.com/apache/pig/raw/be22caceed47a761b2483e23b5e4717f0d0c29b2/test/org/apache/pig/test/TestSchema.java",
                "status": "modified",
                "changes": 3,
                "additions": 2,
                "contents_url": "https://api.github.com/repos/apache/pig/contents/test/org/apache/pig/test/TestSchema.java?ref=be22caceed47a761b2483e23b5e4717f0d0c29b2",
                "patch": "@@ -882,7 +882,8 @@ public void testGetStringFromSchema() throws ParserException {\n             \"a:double,b:float,t:tuple(x:int,b:bag{t:tuple(a:int,b:float,c:double,x:tuple(z:bag{r:tuple(z:bytearray)}))},z:bytearray)\",\n             \"a,b,t:tuple(x,b:bag{t:tuple(a,b,c,x:tuple(z:bag{r:tuple(z)}))},z)\",\n             \"a:bag{t:tuple(a:bag{t:tuple(a:bag{t:tuple(a:bag{t:tuple(a:bag{t:tuple(a:bag{t:tuple(a:int,b:float)})})})})})}\",\n-            \"a:bag{}\"\n+            \"a:bag{}\",\n+            \"b:{null:(a:int)}\"\n         };\n         for (String schemaString : schemaStrings) {\n             Schema s1 = Utils.getSchemaFromString(schemaString);",
                "deletions": 1
            }
        ]
    },
    {
        "repo": "pig",
        "message": "PIG-4503: [Pig on Tez] NPE in UnionOptimizer with multiple levels of union (rohini)\n\ngit-svn-id: https://svn.apache.org/repos/asf/pig/trunk@1674348 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/pig/commit/00aae0ef8159381612de3ccdc6427dbe5c06e4f9",
        "parent": "https://github.com/apache/pig/commit/3056787406382d44b4a699cf350e78d61cda3f2e",
        "bug_id": "pig_53",
        "file": [
            {
                "sha": "6c2882643ac34c27173202e604b37f2e9d984fb1",
                "filename": "CHANGES.txt",
                "blob_url": "https://github.com/apache/pig/blob/00aae0ef8159381612de3ccdc6427dbe5c06e4f9/CHANGES.txt",
                "raw_url": "https://github.com/apache/pig/raw/00aae0ef8159381612de3ccdc6427dbe5c06e4f9/CHANGES.txt",
                "status": "modified",
                "changes": 2,
                "additions": 2,
                "contents_url": "https://api.github.com/repos/apache/pig/contents/CHANGES.txt?ref=00aae0ef8159381612de3ccdc6427dbe5c06e4f9",
                "patch": "@@ -62,6 +62,8 @@ PIG-4333: Split BigData tests into multiple groups (rohini)\n  \n BUG FIXES\n \n+PIG-4503: [Pig on Tez] NPE in UnionOptimizer with multiple levels of union (rohini)\n+\n PIG-4509: [Pig on Tez] Unassigned applications not killed on shutdown (rohini)\n \n PIG-4508: [Pig on Tez] PigProcessor check for commit only on MROutput (rohini)",
                "deletions": 0
            },
            {
                "sha": "41bddcfb8055737fcd455b6488a24c529d07d137",
                "filename": "src/org/apache/pig/backend/hadoop/executionengine/tez/plan/optimizer/UnionOptimizer.java",
                "blob_url": "https://github.com/apache/pig/blob/00aae0ef8159381612de3ccdc6427dbe5c06e4f9/src/org/apache/pig/backend/hadoop/executionengine/tez/plan/optimizer/UnionOptimizer.java",
                "raw_url": "https://github.com/apache/pig/raw/00aae0ef8159381612de3ccdc6427dbe5c06e4f9/src/org/apache/pig/backend/hadoop/executionengine/tez/plan/optimizer/UnionOptimizer.java",
                "status": "modified",
                "changes": 8,
                "additions": 5,
                "contents_url": "https://api.github.com/repos/apache/pig/contents/src/org/apache/pig/backend/hadoop/executionengine/tez/plan/optimizer/UnionOptimizer.java?ref=00aae0ef8159381612de3ccdc6427dbe5c06e4f9",
                "patch": "@@ -153,13 +153,15 @@ public void visitTezOp(TezOperator tezOp) throws VisitorException {\n             TezOperator existingVertexGroup = null;\n             if (successors != null) {\n                 for (TezOperator succ : successors) {\n-                    if (succ.isVertexGroup() && succ.getVertexGroupInfo().getSFile().equals(unionStoreOutputs.get(i).getSFile())) {\n+                    if (succ.isVertexGroup() && unionStoreOutputs.get(i).getSFile().equals(succ.getVertexGroupInfo().getSFile())) {\n                         existingVertexGroup = succ;\n                     }\n                 }\n             }\n             if (existingVertexGroup != null) {\n                 storeVertexGroupOps[i] = existingVertexGroup;\n+                existingVertexGroup.getVertexGroupMembers().remove(unionOp.getOperatorKey());\n+                existingVertexGroup.getVertexGroupInfo().removeInput(unionOp.getOperatorKey());\n             } else {\n                 storeVertexGroupOps[i] = new TezOperator(OperatorKey.genOpKey(scope));\n                 storeVertexGroupOps[i].setVertexGroupInfo(new VertexGroupInfo(unionStoreOutputs.get(i)));\n@@ -471,8 +473,8 @@ private void connectVertexGroupsToSuccessors(TezOperator unionOp,\n             TezOperator succOpVertexGroup = null;\n             for (TezOperator succ : successors) {\n                 if (succ.isVertexGroup()\n-                        && succ.getVertexGroupInfo().getOutput()\n-                                .equals(succOp.getOperatorKey().toString())) {\n+                        && succOp.getOperatorKey().toString()\n+                                .equals(succ.getVertexGroupInfo().getOutput())) {\n                     succOpVertexGroup = succ;\n                     break;\n                 }",
                "deletions": 3
            },
            {
                "sha": "3fc7248cd795009ff1a7129bef5c40ce83b99a5f",
                "filename": "test/org/apache/pig/test/data/GoldenFiles/tez/TEZC-Union-10-OPTOFF.gld",
                "blob_url": "https://github.com/apache/pig/blob/00aae0ef8159381612de3ccdc6427dbe5c06e4f9/test/org/apache/pig/test/data/GoldenFiles/tez/TEZC-Union-10-OPTOFF.gld",
                "raw_url": "https://github.com/apache/pig/raw/00aae0ef8159381612de3ccdc6427dbe5c06e4f9/test/org/apache/pig/test/data/GoldenFiles/tez/TEZC-Union-10-OPTOFF.gld",
                "status": "modified",
                "changes": 48,
                "additions": 26,
                "contents_url": "https://api.github.com/repos/apache/pig/contents/test/org/apache/pig/test/data/GoldenFiles/tez/TEZC-Union-10-OPTOFF.gld?ref=00aae0ef8159381612de3ccdc6427dbe5c06e4f9",
                "patch": "@@ -4,16 +4,16 @@\n #--------------------------------------------------\n # TEZ DAG plan: pig-0_scope-0\n #--------------------------------------------------\n-Tez vertex scope-31\t->\tTez vertex scope-33,\n-Tez vertex scope-32\t->\tTez vertex scope-33,\n-Tez vertex scope-33\t->\tTez vertex scope-38,\n-Tez vertex scope-37\t->\tTez vertex scope-38,\n-Tez vertex scope-38\t->\tTez vertex scope-42,\n-Tez vertex scope-42\n+Tez vertex scope-37\t->\tTez vertex scope-39,\n+Tez vertex scope-38\t->\tTez vertex scope-39,\n+Tez vertex scope-39\t->\tTez vertex scope-44,\n+Tez vertex scope-43\t->\tTez vertex scope-44,\n+Tez vertex scope-44\t->\tTez vertex scope-53,\n+Tez vertex scope-53\n \n-Tez vertex scope-31\n+Tez vertex scope-37\n # Plan on vertex\n-POValueOutputTez - scope-35\t->\t [scope-33]\n+POValueOutputTez - scope-41\t->\t [scope-39]\n |\n |---a: New For Each(false,false)[bag] - scope-7\n     |   |\n@@ -26,9 +26,9 @@ POValueOutputTez - scope-35\t->\t [scope-33]\n     |   |---Project[bytearray][1] - scope-4\n     |\n     |---a: Load(file:///tmp/input:org.apache.pig.builtin.PigStorage) - scope-0\n-Tez vertex scope-32\n+Tez vertex scope-38\n # Plan on vertex\n-POValueOutputTez - scope-36\t->\t [scope-33]\n+POValueOutputTez - scope-42\t->\t [scope-39]\n |\n |---c: New For Each(false,false)[bag] - scope-15\n     |   |\n@@ -41,14 +41,14 @@ POValueOutputTez - scope-36\t->\t [scope-33]\n     |   |---Project[bytearray][0] - scope-12\n     |\n     |---b: Load(file:///tmp/input:org.apache.pig.builtin.PigStorage) - scope-8\n-Tez vertex scope-33\n+Tez vertex scope-39\n # Plan on vertex\n-POValueOutputTez - scope-40\t->\t [scope-38]\n+POValueOutputTez - scope-46\t->\t [scope-44]\n |\n-|---POShuffledValueInputTez - scope-34\t<-\t [scope-31, scope-32]\n-Tez vertex scope-37\n+|---POShuffledValueInputTez - scope-40\t<-\t [scope-37, scope-38]\n+Tez vertex scope-43\n # Plan on vertex\n-POValueOutputTez - scope-41\t->\t [scope-38]\n+POValueOutputTez - scope-47\t->\t [scope-44]\n |\n |---d: New For Each(false,false)[bag] - scope-24\n     |   |\n@@ -61,15 +61,19 @@ POValueOutputTez - scope-41\t->\t [scope-38]\n     |   |---Project[bytearray][1] - scope-21\n     |\n     |---d: Load(file:///tmp/input1:org.apache.pig.builtin.PigStorage) - scope-17\n-Tez vertex scope-38\n+Tez vertex scope-44\n # Plan on vertex\n-f: Local Rearrange[tuple]{int}(false) - scope-28\t->\t scope-42\n+e: Split - scope-54\n+|   |\n+|   e: Store(file:///tmp/output1:org.apache.pig.builtin.PigStorage) - scope-29\n |   |\n-|   Project[int][0] - scope-29\n+|   f: Local Rearrange[tuple]{int}(false) - scope-34\t->\t scope-53\n+|   |   |\n+|   |   Project[int][0] - scope-35\n |\n-|---POShuffledValueInputTez - scope-39\t<-\t [scope-33, scope-37]\n-Tez vertex scope-42\n+|---POShuffledValueInputTez - scope-45\t<-\t [scope-39, scope-43]\n+Tez vertex scope-53\n # Plan on vertex\n-f: Store(file:///tmp/output:org.apache.pig.builtin.PigStorage) - scope-30\n+f: Store(file:///tmp/output2:org.apache.pig.builtin.PigStorage) - scope-36\n |\n-|---f: Package(Packager)[tuple]{int} - scope-27\n+|---f: Package(Packager)[tuple]{int} - scope-33",
                "deletions": 22
            },
            {
                "sha": "dfcc8e7fee0d026e06753ef573fb6e2686289f9a",
                "filename": "test/org/apache/pig/test/data/GoldenFiles/tez/TEZC-Union-10.gld",
                "blob_url": "https://github.com/apache/pig/blob/00aae0ef8159381612de3ccdc6427dbe5c06e4f9/test/org/apache/pig/test/data/GoldenFiles/tez/TEZC-Union-10.gld",
                "raw_url": "https://github.com/apache/pig/raw/00aae0ef8159381612de3ccdc6427dbe5c06e4f9/test/org/apache/pig/test/data/GoldenFiles/tez/TEZC-Union-10.gld",
                "status": "modified",
                "changes": 51,
                "additions": 33,
                "contents_url": "https://api.github.com/repos/apache/pig/contents/test/org/apache/pig/test/data/GoldenFiles/tez/TEZC-Union-10.gld?ref=00aae0ef8159381612de3ccdc6427dbe5c06e4f9",
                "patch": "@@ -4,17 +4,22 @@\n #--------------------------------------------------\n # TEZ DAG plan: pig-0_scope-0\n #--------------------------------------------------\n-Tez vertex scope-37\t->\tTez vertex group scope-43,\n-Tez vertex scope-31\t->\tTez vertex group scope-43,\n-Tez vertex scope-32\t->\tTez vertex group scope-43,\n-Tez vertex group scope-43\t->\tTez vertex scope-42,\n-Tez vertex scope-42\n+Tez vertex scope-43\t->\tTez vertex group scope-55,Tez vertex group scope-56,\n+Tez vertex scope-37\t->\tTez vertex group scope-55,Tez vertex group scope-56,\n+Tez vertex scope-38\t->\tTez vertex group scope-55,Tez vertex group scope-56,\n+Tez vertex group scope-56\t->\tTez vertex scope-53,\n+Tez vertex scope-53\n+Tez vertex group scope-55\n \n-Tez vertex scope-37\n+Tez vertex scope-43\n # Plan on vertex\n-f: Local Rearrange[tuple]{int}(false) - scope-46\t->\t scope-42\n+e: Split - scope-61\n+|   |\n+|   e: Store(file:///tmp/output1:org.apache.pig.builtin.PigStorage) - scope-62\t->\t scope-29\n |   |\n-|   Project[int][0] - scope-47\n+|   f: Local Rearrange[tuple]{int}(false) - scope-63\t->\t scope-53\n+|   |   |\n+|   |   Project[int][0] - scope-64\n |\n |---d: New For Each(false,false)[bag] - scope-24\n     |   |\n@@ -27,11 +32,15 @@ f: Local Rearrange[tuple]{int}(false) - scope-46\t->\t scope-42\n     |   |---Project[bytearray][1] - scope-21\n     |\n     |---d: Load(file:///tmp/input1:org.apache.pig.builtin.PigStorage) - scope-17\n-Tez vertex scope-31\n+Tez vertex scope-37\n # Plan on vertex\n-f: Local Rearrange[tuple]{int}(false) - scope-49\t->\t scope-42\n+e: Split - scope-66\n |   |\n-|   Project[int][0] - scope-50\n+|   e: Store(file:///tmp/output1:org.apache.pig.builtin.PigStorage) - scope-67\t->\t scope-29\n+|   |\n+|   f: Local Rearrange[tuple]{int}(false) - scope-68\t->\t scope-53\n+|   |   |\n+|   |   Project[int][0] - scope-69\n |\n |---a: New For Each(false,false)[bag] - scope-7\n     |   |\n@@ -44,11 +53,15 @@ f: Local Rearrange[tuple]{int}(false) - scope-49\t->\t scope-42\n     |   |---Project[bytearray][1] - scope-4\n     |\n     |---a: Load(file:///tmp/input:org.apache.pig.builtin.PigStorage) - scope-0\n-Tez vertex scope-32\n+Tez vertex scope-38\n # Plan on vertex\n-f: Local Rearrange[tuple]{int}(false) - scope-51\t->\t scope-42\n+e: Split - scope-70\n+|   |\n+|   e: Store(file:///tmp/output1:org.apache.pig.builtin.PigStorage) - scope-71\t->\t scope-29\n |   |\n-|   Project[int][0] - scope-52\n+|   f: Local Rearrange[tuple]{int}(false) - scope-72\t->\t scope-53\n+|   |   |\n+|   |   Project[int][0] - scope-73\n |\n |---c: New For Each(false,false)[bag] - scope-15\n     |   |\n@@ -61,10 +74,12 @@ f: Local Rearrange[tuple]{int}(false) - scope-51\t->\t scope-42\n     |   |---Project[bytearray][0] - scope-12\n     |\n     |---b: Load(file:///tmp/input:org.apache.pig.builtin.PigStorage) - scope-8\n-Tez vertex group scope-43\t<-\t [scope-37, scope-31, scope-32]\t->\t scope-42\n+Tez vertex group scope-56\t<-\t [scope-43, scope-37, scope-38]\t->\t scope-53\n # No plan on vertex group\n-Tez vertex scope-42\n+Tez vertex scope-53\n # Plan on vertex\n-f: Store(file:///tmp/output:org.apache.pig.builtin.PigStorage) - scope-30\n+f: Store(file:///tmp/output2:org.apache.pig.builtin.PigStorage) - scope-36\n |\n-|---f: Package(Packager)[tuple]{int} - scope-27\n+|---f: Package(Packager)[tuple]{int} - scope-33\n+Tez vertex group scope-55\t<-\t [scope-43, scope-37, scope-38]\t->\t null\n+# No plan on vertex group",
                "deletions": 18
            },
            {
                "sha": "aca935cb452377018ec5049345832af4df998f41",
                "filename": "test/org/apache/pig/test/data/GoldenFiles/tez/TEZC-Union-11.gld",
                "blob_url": "https://github.com/apache/pig/blob/00aae0ef8159381612de3ccdc6427dbe5c06e4f9/test/org/apache/pig/test/data/GoldenFiles/tez/TEZC-Union-11.gld",
                "raw_url": "https://github.com/apache/pig/raw/00aae0ef8159381612de3ccdc6427dbe5c06e4f9/test/org/apache/pig/test/data/GoldenFiles/tez/TEZC-Union-11.gld",
                "status": "modified",
                "changes": 2,
                "additions": 1,
                "contents_url": "https://api.github.com/repos/apache/pig/contents/test/org/apache/pig/test/data/GoldenFiles/tez/TEZC-Union-11.gld?ref=00aae0ef8159381612de3ccdc6427dbe5c06e4f9",
                "patch": "@@ -54,5 +54,5 @@ e: Store(file:///tmp/output:org.apache.pig.builtin.PigStorage) - scope-42\t->\t sc\n     |   |---Project[bytearray][0] - scope-12\n     |\n     |---b: Load(file:///tmp/input:org.apache.pig.builtin.PigStorage) - scope-8\n-Tez vertex group scope-38\t<-\t [scope-29, scope-33, scope-27, scope-28]\t->\t null\n+Tez vertex group scope-38\t<-\t [scope-33, scope-27, scope-28]\t->\t null\n # No plan on vertex group",
                "deletions": 1
            },
            {
                "sha": "87f8efe0c1c8ad05f3059318d32970cf518639ba",
                "filename": "test/org/apache/pig/test/data/GoldenFiles/tez/TEZC-Union-17-OPTOFF.gld",
                "blob_url": "https://github.com/apache/pig/blob/00aae0ef8159381612de3ccdc6427dbe5c06e4f9/test/org/apache/pig/test/data/GoldenFiles/tez/TEZC-Union-17-OPTOFF.gld",
                "raw_url": "https://github.com/apache/pig/raw/00aae0ef8159381612de3ccdc6427dbe5c06e4f9/test/org/apache/pig/test/data/GoldenFiles/tez/TEZC-Union-17-OPTOFF.gld",
                "status": "added",
                "changes": 87,
                "additions": 87,
                "contents_url": "https://api.github.com/repos/apache/pig/contents/test/org/apache/pig/test/data/GoldenFiles/tez/TEZC-Union-17-OPTOFF.gld?ref=00aae0ef8159381612de3ccdc6427dbe5c06e4f9",
                "patch": "@@ -0,0 +1,87 @@\n+#--------------------------------------------------\n+# There are 1 DAGs in the session\n+#--------------------------------------------------\n+#--------------------------------------------------\n+# TEZ DAG plan: pig-0_scope-0\n+#--------------------------------------------------\n+Tez vertex scope-44\t->\tTez vertex scope-45,Tez vertex scope-46,\n+Tez vertex scope-45\t->\tTez vertex scope-47,\n+Tez vertex scope-46\t->\tTez vertex scope-47,\n+Tez vertex scope-47\n+\n+Tez vertex scope-44\n+# Plan on vertex\n+POValueOutputTez - scope-51\t->\t [scope-45, scope-46]\n+|\n+|---d: New For Each(false,false)[bag] - scope-15\n+    |   |\n+    |   Cast[int] - scope-10\n+    |   |\n+    |   |---Project[bytearray][0] - scope-9\n+    |   |\n+    |   Cast[chararray] - scope-13\n+    |   |\n+    |   |---Project[bytearray][1] - scope-12\n+    |\n+    |---d: Load(file:///tmp/input1:org.apache.pig.builtin.PigStorage) - scope-8\n+Tez vertex scope-45\n+# Plan on vertex\n+POValueOutputTez - scope-49\t->\t [scope-47]\n+|\n+|---e: Filter[bag] - scope-17\n+    |   |\n+    |   Equal To[boolean] - scope-22\n+    |   |\n+    |   |---Project[int][0] - scope-18\n+    |   |\n+    |   |---POUserFunc(org.apache.pig.backend.hadoop.executionengine.tez.plan.udf.ReadScalarsTez)[int] - scope-21\n+    |       |\n+    |       |---Constant(0) - scope-19\n+    |\n+    |---a: New For Each(false,false)[bag] - scope-7\n+        |   |\n+        |   Cast[int] - scope-2\n+        |   |\n+        |   |---Project[bytearray][0] - scope-1\n+        |   |\n+        |   Cast[chararray] - scope-5\n+        |   |\n+        |   |---Project[bytearray][1] - scope-4\n+        |\n+        |---a: Load(file:///tmp/input:org.apache.pig.builtin.PigStorage) - scope-0\n+Tez vertex scope-46\n+# Plan on vertex\n+POValueOutputTez - scope-50\t->\t [scope-47]\n+|\n+|---c: New For Each(false,false)[bag] - scope-41\n+    |   |\n+    |   Project[int][1] - scope-37\n+    |   |\n+    |   Project[chararray][0] - scope-39\n+    |\n+    |---Filter[bag] - scope-31\n+        |   |\n+        |   Equal To[boolean] - scope-36\n+        |   |\n+        |   |---Project[int][1] - scope-32\n+        |   |\n+        |   |---POUserFunc(org.apache.pig.backend.hadoop.executionengine.tez.plan.udf.ReadScalarsTez)[int] - scope-35\n+        |       |\n+        |       |---Constant(0) - scope-33\n+        |\n+        |---b: New For Each(false,false)[bag] - scope-30\n+            |   |\n+            |   Cast[chararray] - scope-25\n+            |   |\n+            |   |---Project[bytearray][0] - scope-24\n+            |   |\n+            |   Cast[int] - scope-28\n+            |   |\n+            |   |---Project[bytearray][1] - scope-27\n+            |\n+            |---b: Load(file:///tmp/input:org.apache.pig.builtin.PigStorage) - scope-23\n+Tez vertex scope-47\n+# Plan on vertex\n+e: Store(file:///tmp/output:org.apache.pig.builtin.PigStorage) - scope-43\n+|\n+|---POShuffledValueInputTez - scope-48\t<-\t [scope-45, scope-46]",
                "deletions": 0
            },
            {
                "sha": "8be94ab46ec8cd59ac8262c08e15b58bded9eba7",
                "filename": "test/org/apache/pig/test/data/GoldenFiles/tez/TEZC-Union-17.gld",
                "blob_url": "https://github.com/apache/pig/blob/00aae0ef8159381612de3ccdc6427dbe5c06e4f9/test/org/apache/pig/test/data/GoldenFiles/tez/TEZC-Union-17.gld",
                "raw_url": "https://github.com/apache/pig/raw/00aae0ef8159381612de3ccdc6427dbe5c06e4f9/test/org/apache/pig/test/data/GoldenFiles/tez/TEZC-Union-17.gld",
                "status": "added",
                "changes": 84,
                "additions": 84,
                "contents_url": "https://api.github.com/repos/apache/pig/contents/test/org/apache/pig/test/data/GoldenFiles/tez/TEZC-Union-17.gld?ref=00aae0ef8159381612de3ccdc6427dbe5c06e4f9",
                "patch": "@@ -0,0 +1,84 @@\n+#--------------------------------------------------\n+# There are 1 DAGs in the session\n+#--------------------------------------------------\n+#--------------------------------------------------\n+# TEZ DAG plan: pig-0_scope-0\n+#--------------------------------------------------\n+Tez vertex scope-44\t->\tTez vertex scope-45,Tez vertex scope-46,\n+Tez vertex scope-45\t->\tTez vertex group scope-52,\n+Tez vertex scope-46\t->\tTez vertex group scope-52,\n+Tez vertex group scope-52\n+\n+Tez vertex scope-44\n+# Plan on vertex\n+POValueOutputTez - scope-51\t->\t [scope-45, scope-46]\n+|\n+|---d: New For Each(false,false)[bag] - scope-15\n+    |   |\n+    |   Cast[int] - scope-10\n+    |   |\n+    |   |---Project[bytearray][0] - scope-9\n+    |   |\n+    |   Cast[chararray] - scope-13\n+    |   |\n+    |   |---Project[bytearray][1] - scope-12\n+    |\n+    |---d: Load(file:///tmp/input1:org.apache.pig.builtin.PigStorage) - scope-8\n+Tez vertex scope-45\n+# Plan on vertex\n+e: Store(file:///tmp/output:org.apache.pig.builtin.PigStorage) - scope-53\t->\t scope-43\n+|\n+|---e: Filter[bag] - scope-17\n+    |   |\n+    |   Equal To[boolean] - scope-22\n+    |   |\n+    |   |---Project[int][0] - scope-18\n+    |   |\n+    |   |---POUserFunc(org.apache.pig.backend.hadoop.executionengine.tez.plan.udf.ReadScalarsTez)[int] - scope-21\n+    |       |\n+    |       |---Constant(0) - scope-19\n+    |\n+    |---a: New For Each(false,false)[bag] - scope-7\n+        |   |\n+        |   Cast[int] - scope-2\n+        |   |\n+        |   |---Project[bytearray][0] - scope-1\n+        |   |\n+        |   Cast[chararray] - scope-5\n+        |   |\n+        |   |---Project[bytearray][1] - scope-4\n+        |\n+        |---a: Load(file:///tmp/input:org.apache.pig.builtin.PigStorage) - scope-0\n+Tez vertex scope-46\n+# Plan on vertex\n+e: Store(file:///tmp/output:org.apache.pig.builtin.PigStorage) - scope-54\t->\t scope-43\n+|\n+|---c: New For Each(false,false)[bag] - scope-41\n+    |   |\n+    |   Project[int][1] - scope-37\n+    |   |\n+    |   Project[chararray][0] - scope-39\n+    |\n+    |---Filter[bag] - scope-31\n+        |   |\n+        |   Equal To[boolean] - scope-36\n+        |   |\n+        |   |---Project[int][1] - scope-32\n+        |   |\n+        |   |---POUserFunc(org.apache.pig.backend.hadoop.executionengine.tez.plan.udf.ReadScalarsTez)[int] - scope-35\n+        |       |\n+        |       |---Constant(0) - scope-33\n+        |\n+        |---b: New For Each(false,false)[bag] - scope-30\n+            |   |\n+            |   Cast[chararray] - scope-25\n+            |   |\n+            |   |---Project[bytearray][0] - scope-24\n+            |   |\n+            |   Cast[int] - scope-28\n+            |   |\n+            |   |---Project[bytearray][1] - scope-27\n+            |\n+            |---b: Load(file:///tmp/input:org.apache.pig.builtin.PigStorage) - scope-23\n+Tez vertex group scope-52\t<-\t [scope-45, scope-46]\t->\t null\n+# No plan on vertex group",
                "deletions": 0
            },
            {
                "sha": "d63afeadbe7491c9b274dafc1368fab110e5ddc0",
                "filename": "test/org/apache/pig/test/data/GoldenFiles/tez/TEZC-Union-18-OPTOFF.gld",
                "blob_url": "https://github.com/apache/pig/blob/00aae0ef8159381612de3ccdc6427dbe5c06e4f9/test/org/apache/pig/test/data/GoldenFiles/tez/TEZC-Union-18-OPTOFF.gld",
                "raw_url": "https://github.com/apache/pig/raw/00aae0ef8159381612de3ccdc6427dbe5c06e4f9/test/org/apache/pig/test/data/GoldenFiles/tez/TEZC-Union-18-OPTOFF.gld",
                "status": "added",
                "changes": 71,
                "additions": 71,
                "contents_url": "https://api.github.com/repos/apache/pig/contents/test/org/apache/pig/test/data/GoldenFiles/tez/TEZC-Union-18-OPTOFF.gld?ref=00aae0ef8159381612de3ccdc6427dbe5c06e4f9",
                "patch": "@@ -0,0 +1,71 @@\n+#--------------------------------------------------\n+# There are 1 DAGs in the session\n+#--------------------------------------------------\n+#--------------------------------------------------\n+# TEZ DAG plan: pig-0_scope-0\n+#--------------------------------------------------\n+Tez vertex scope-33\t->\tTez vertex scope-35,\n+Tez vertex scope-34\t->\tTez vertex scope-35,\n+Tez vertex scope-35\t->\tTez vertex scope-39,\n+Tez vertex scope-39\n+\n+Tez vertex scope-33\n+# Plan on vertex\n+POValueOutputTez - scope-37\t->\t [scope-35]\n+|\n+|---a: New For Each(false,false)[bag] - scope-15\n+    |   |\n+    |   Cast[int] - scope-10\n+    |   |\n+    |   |---Project[bytearray][0] - scope-9\n+    |   |\n+    |   Cast[chararray] - scope-13\n+    |   |\n+    |   |---Project[bytearray][1] - scope-12\n+    |\n+    |---a: Load(file:///tmp/input:org.apache.pig.builtin.PigStorage) - scope-8\n+Tez vertex scope-34\n+# Plan on vertex\n+POValueOutputTez - scope-38\t->\t [scope-35]\n+|\n+|---c: New For Each(false,false)[bag] - scope-23\n+    |   |\n+    |   Cast[int] - scope-18\n+    |   |\n+    |   |---Project[bytearray][1] - scope-17\n+    |   |\n+    |   Cast[chararray] - scope-21\n+    |   |\n+    |   |---Project[bytearray][0] - scope-20\n+    |\n+    |---b: Load(file:///tmp/input:org.apache.pig.builtin.PigStorage) - scope-16\n+Tez vertex scope-35\n+# Plan on vertex\n+POValueOutputTez - scope-40\t->\t [scope-39]\n+|\n+|---POShuffledValueInputTez - scope-36\t<-\t [scope-33, scope-34]\n+Tez vertex scope-39\n+# Plan on vertex\n+e: Store(file:///tmp/output:org.apache.pig.builtin.PigStorage) - scope-32\n+|\n+|---e: Filter[bag] - scope-26\n+    |   |\n+    |   Equal To[boolean] - scope-31\n+    |   |\n+    |   |---Project[int][0] - scope-27\n+    |   |\n+    |   |---POUserFunc(org.apache.pig.backend.hadoop.executionengine.tez.plan.udf.ReadScalarsTez)[int] - scope-30\n+    |       |\n+    |       |---Constant(0) - scope-28\n+    |\n+    |---d: New For Each(false,false)[bag] - scope-7\n+        |   |\n+        |   Cast[int] - scope-2\n+        |   |\n+        |   |---Project[bytearray][0] - scope-1\n+        |   |\n+        |   Cast[chararray] - scope-5\n+        |   |\n+        |   |---Project[bytearray][1] - scope-4\n+        |\n+        |---d: Load(file:///tmp/input1:org.apache.pig.builtin.PigStorage) - scope-0",
                "deletions": 0
            },
            {
                "sha": "5c32197613d818b53bed4662ebeb98857f464fe0",
                "filename": "test/org/apache/pig/test/data/GoldenFiles/tez/TEZC-Union-18.gld",
                "blob_url": "https://github.com/apache/pig/blob/00aae0ef8159381612de3ccdc6427dbe5c06e4f9/test/org/apache/pig/test/data/GoldenFiles/tez/TEZC-Union-18.gld",
                "raw_url": "https://github.com/apache/pig/raw/00aae0ef8159381612de3ccdc6427dbe5c06e4f9/test/org/apache/pig/test/data/GoldenFiles/tez/TEZC-Union-18.gld",
                "status": "added",
                "changes": 68,
                "additions": 68,
                "contents_url": "https://api.github.com/repos/apache/pig/contents/test/org/apache/pig/test/data/GoldenFiles/tez/TEZC-Union-18.gld?ref=00aae0ef8159381612de3ccdc6427dbe5c06e4f9",
                "patch": "@@ -0,0 +1,68 @@\n+#--------------------------------------------------\n+# There are 1 DAGs in the session\n+#--------------------------------------------------\n+#--------------------------------------------------\n+# TEZ DAG plan: pig-0_scope-0\n+#--------------------------------------------------\n+Tez vertex scope-33\t->\tTez vertex group scope-41,\n+Tez vertex scope-34\t->\tTez vertex group scope-41,\n+Tez vertex group scope-41\t->\tTez vertex scope-39,\n+Tez vertex scope-39\n+\n+Tez vertex scope-33\n+# Plan on vertex\n+POValueOutputTez - scope-42\t->\t [scope-39]\n+|\n+|---a: New For Each(false,false)[bag] - scope-15\n+    |   |\n+    |   Cast[int] - scope-10\n+    |   |\n+    |   |---Project[bytearray][0] - scope-9\n+    |   |\n+    |   Cast[chararray] - scope-13\n+    |   |\n+    |   |---Project[bytearray][1] - scope-12\n+    |\n+    |---a: Load(file:///tmp/input:org.apache.pig.builtin.PigStorage) - scope-8\n+Tez vertex scope-34\n+# Plan on vertex\n+POValueOutputTez - scope-43\t->\t [scope-39]\n+|\n+|---c: New For Each(false,false)[bag] - scope-23\n+    |   |\n+    |   Cast[int] - scope-18\n+    |   |\n+    |   |---Project[bytearray][1] - scope-17\n+    |   |\n+    |   Cast[chararray] - scope-21\n+    |   |\n+    |   |---Project[bytearray][0] - scope-20\n+    |\n+    |---b: Load(file:///tmp/input:org.apache.pig.builtin.PigStorage) - scope-16\n+Tez vertex group scope-41\t<-\t [scope-33, scope-34]\t->\t scope-39\n+# No plan on vertex group\n+Tez vertex scope-39\n+# Plan on vertex\n+e: Store(file:///tmp/output:org.apache.pig.builtin.PigStorage) - scope-32\n+|\n+|---e: Filter[bag] - scope-26\n+    |   |\n+    |   Equal To[boolean] - scope-31\n+    |   |\n+    |   |---Project[int][0] - scope-27\n+    |   |\n+    |   |---POUserFunc(org.apache.pig.backend.hadoop.executionengine.tez.plan.udf.ReadScalarsTez)[int] - scope-30\n+    |       |\n+    |       |---Constant(0) - scope-28\n+    |\n+    |---d: New For Each(false,false)[bag] - scope-7\n+        |   |\n+        |   Cast[int] - scope-2\n+        |   |\n+        |   |---Project[bytearray][0] - scope-1\n+        |   |\n+        |   Cast[chararray] - scope-5\n+        |   |\n+        |   |---Project[bytearray][1] - scope-4\n+        |\n+        |---d: Load(file:///tmp/input1:org.apache.pig.builtin.PigStorage) - scope-0",
                "deletions": 0
            },
            {
                "sha": "d42a27f124947fd961f93007c7444a95482272fc",
                "filename": "test/org/apache/pig/tez/TestTezCompiler.java",
                "blob_url": "https://github.com/apache/pig/blob/00aae0ef8159381612de3ccdc6427dbe5c06e4f9/test/org/apache/pig/tez/TestTezCompiler.java",
                "raw_url": "https://github.com/apache/pig/raw/00aae0ef8159381612de3ccdc6427dbe5c06e4f9/test/org/apache/pig/tez/TestTezCompiler.java",
                "status": "modified",
                "changes": 36,
                "additions": 35,
                "contents_url": "https://api.github.com/repos/apache/pig/contents/test/org/apache/pig/tez/TestTezCompiler.java?ref=00aae0ef8159381612de3ccdc6427dbe5c06e4f9",
                "patch": "@@ -618,13 +618,15 @@ public void testUnionUnion() throws Exception {\n                 \"d = load 'file:///tmp/input1' as (x:int, y:chararray);\" +\n                 \"e = union onschema c, d;\" +\n                 \"f = group e by x;\" +\n-                \"store f into 'file:///tmp/output';\";\n+                \"store e into 'file:///tmp/output1';\" +\n+                \"store f into 'file:///tmp/output2';\";\n \n         setProperty(PigConfiguration.PIG_TEZ_OPT_UNION, \"\" + true);\n         run(query, \"test/org/apache/pig/test/data/GoldenFiles/tez/TEZC-Union-10.gld\");\n         resetScope();\n         setProperty(PigConfiguration.PIG_TEZ_OPT_UNION, \"\" + false);\n         run(query, \"test/org/apache/pig/test/data/GoldenFiles/tez/TEZC-Union-10-OPTOFF.gld\");\n+\n     }\n \n     @Test\n@@ -732,6 +734,38 @@ public void testUnionSplitSkewedJoin() throws Exception {\n         run(query, \"test/org/apache/pig/test/data/GoldenFiles/tez/TEZC-Union-16-OPTOFF.gld\");\n     }\n \n+    @Test\n+    public void testUnionScalar() throws Exception {\n+        String query =\n+                \"a = load 'file:///tmp/input' as (x:int, y:chararray);\" +\n+                \"b = load 'file:///tmp/input' as (y:chararray, x:int);\" +\n+                \"c = union onschema a, b;\" +\n+                \"d = load 'file:///tmp/input1' as (x:int, z:chararray);\" +\n+                \"e = filter c by x == d.x;\" +\n+                \"store e into 'file:///tmp/output';\";\n+\n+        setProperty(PigConfiguration.PIG_TEZ_OPT_UNION, \"\" + true);\n+        run(query, \"test/org/apache/pig/test/data/GoldenFiles/tez/TEZC-Union-17.gld\");\n+        resetScope();\n+        setProperty(PigConfiguration.PIG_TEZ_OPT_UNION, \"\" + false);\n+        run(query, \"test/org/apache/pig/test/data/GoldenFiles/tez/TEZC-Union-17-OPTOFF.gld\");\n+\n+        query =\n+                \"a = load 'file:///tmp/input' as (x:int, y:chararray);\" +\n+                \"b = load 'file:///tmp/input' as (y:chararray, x:int);\" +\n+                \"c = union onschema a, b;\" +\n+                \"d = load 'file:///tmp/input1' as (x:int, z:chararray);\" +\n+                \"e = filter d by x == c.x;\" +\n+                \"store e into 'file:///tmp/output';\";\n+\n+        resetScope();\n+        setProperty(PigConfiguration.PIG_TEZ_OPT_UNION, \"\" + true);\n+        run(query, \"test/org/apache/pig/test/data/GoldenFiles/tez/TEZC-Union-18.gld\");\n+        resetScope();\n+        setProperty(PigConfiguration.PIG_TEZ_OPT_UNION, \"\" + false);\n+        run(query, \"test/org/apache/pig/test/data/GoldenFiles/tez/TEZC-Union-18-OPTOFF.gld\");\n+    }\n+\n     @Test\n     public void testRank() throws Exception {\n         String query =",
                "deletions": 1
            }
        ]
    },
    {
        "repo": "pig",
        "message": "PIG-4220: MapReduce-based Rank failing with NPE due to missing Counters (knoguchi)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/pig/trunk@1629766 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/pig/commit/3016e1790e5db6193edfface5aafe4e93e0a2495",
        "parent": "https://github.com/apache/pig/commit/c3015a36527d54daf5c1264137956180e1120028",
        "bug_id": "pig_54",
        "file": [
            {
                "sha": "30ba06b03fe0569a71be01bb557a99d6056c8e4a",
                "filename": "CHANGES.txt",
                "blob_url": "https://github.com/apache/pig/blob/3016e1790e5db6193edfface5aafe4e93e0a2495/CHANGES.txt",
                "raw_url": "https://github.com/apache/pig/raw/3016e1790e5db6193edfface5aafe4e93e0a2495/CHANGES.txt",
                "status": "modified",
                "changes": 2,
                "additions": 2,
                "contents_url": "https://api.github.com/repos/apache/pig/contents/CHANGES.txt?ref=3016e1790e5db6193edfface5aafe4e93e0a2495",
                "patch": "@@ -92,6 +92,8 @@ OPTIMIZATIONS\n  \n BUG FIXES\n \n+PIG-4220: MapReduce-based Rank failing with NPE due to missing Counters (knoguchi)\n+\n PIG-3985: Multiquery execution of RANK with RANK BY causes NPE (rohini)\n \n PIG-4218: Pig OrcStorage fail to load a map with null key (daijy)",
                "deletions": 0
            },
            {
                "sha": "38668bc2c0eca058318ab357a6bcb8143da14085",
                "filename": "src/org/apache/pig/backend/hadoop/executionengine/mapReduceLayer/PigMapReduceCounter.java",
                "blob_url": "https://github.com/apache/pig/blob/3016e1790e5db6193edfface5aafe4e93e0a2495/src/org/apache/pig/backend/hadoop/executionengine/mapReduceLayer/PigMapReduceCounter.java",
                "raw_url": "https://github.com/apache/pig/raw/3016e1790e5db6193edfface5aafe4e93e0a2495/src/org/apache/pig/backend/hadoop/executionengine/mapReduceLayer/PigMapReduceCounter.java",
                "status": "modified",
                "changes": 41,
                "additions": 19,
                "contents_url": "https://api.github.com/repos/apache/pig/contents/src/org/apache/pig/backend/hadoop/executionengine/mapReduceLayer/PigMapReduceCounter.java?ref=3016e1790e5db6193edfface5aafe4e93e0a2495",
                "patch": "@@ -60,6 +60,13 @@ public void setup(Context context) throws IOException, InterruptedException {\n                     pOperator = mp.getPredecessors(pOperator).get(0);\n                 }\n             }\n+\n+            PigStatusReporter reporter = PigStatusReporter.getInstance();\n+            if (reporter != null) {\n+                reporter.incrCounter(\n+                        JobControlCompiler.PIG_MAP_RANK_NAME\n+                        + context.getJobID().toString(), taskID, 0);\n+            }\n         }\n \n         /**\n@@ -69,15 +76,11 @@ public void setup(Context context) throws IOException, InterruptedException {\n         public void collect(Context context, Tuple tuple)\n         throws InterruptedException, IOException {\n             context.write(null, tuple);\n-            try {\n-                PigStatusReporter reporter = PigStatusReporter.getInstance();\n-                if (reporter != null) {\n-                    reporter.incrCounter(\n-                            JobControlCompiler.PIG_MAP_RANK_NAME\n-                            + context.getJobID().toString(), taskID, 1);\n-                }\n-            } catch (Exception ex) {\n-                log.error(\"Error on incrementer of PigMapCounter\");\n+            PigStatusReporter reporter = PigStatusReporter.getInstance();\n+            if (reporter != null) {\n+                reporter.incrCounter(\n+                        JobControlCompiler.PIG_MAP_RANK_NAME\n+                        + context.getJobID().toString(), taskID, 1);\n             }\n         }\n     }\n@@ -116,6 +119,7 @@ protected void setup(Context context) throws IOException, InterruptedException {\n             }\n \n             this.context = context;\n+            incrementCounter(0L);\n         }\n \n         /**\n@@ -127,21 +131,14 @@ protected void setup(Context context) throws IOException, InterruptedException {\n          * @param increment is the value to add to the corresponding global counter.\n          **/\n         public static void incrementCounter(Long increment) {\n-            try {\n-                PigStatusReporter reporter = PigStatusReporter.getInstance();\n-                if (reporter != null) {\n-\n-                    if(leaf instanceof POCounter){\n-                        reporter.incrCounter(\n-                                JobControlCompiler.PIG_MAP_RANK_NAME\n-                                + context.getJobID().toString(), taskID, increment);\n-                    }\n-\n+            PigStatusReporter reporter = PigStatusReporter.getInstance();\n+            if (reporter != null) {\n+                if(leaf instanceof POCounter){\n+                    reporter.incrCounter(\n+                            JobControlCompiler.PIG_MAP_RANK_NAME\n+                            + context.getJobID().toString(), taskID, increment);\n                 }\n-            } catch (Exception ex) {\n-                log.error(\"Error on incrementer of PigReduceCounter\");\n             }\n-\n         }\n     }\n }",
                "deletions": 22
            }
        ]
    },
    {
        "repo": "pig",
        "message": "PIG-3985: Multiquery execution of RANK with RANK BY causes NPE (rohini)\n\ngit-svn-id: https://svn.apache.org/repos/asf/pig/trunk@1629020 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/pig/commit/3519fa65cb89bd4e9006aa91adae08ebced46e56",
        "parent": "https://github.com/apache/pig/commit/761d85d8f9d8e0003c024f0c8a323cd7e67da0c7",
        "bug_id": "pig_55",
        "file": [
            {
                "sha": "07a83a71c160b4d532cb5f65c76ec92294da039d",
                "filename": "CHANGES.txt",
                "blob_url": "https://github.com/apache/pig/blob/3519fa65cb89bd4e9006aa91adae08ebced46e56/CHANGES.txt",
                "raw_url": "https://github.com/apache/pig/raw/3519fa65cb89bd4e9006aa91adae08ebced46e56/CHANGES.txt",
                "status": "modified",
                "changes": 2,
                "additions": 2,
                "contents_url": "https://api.github.com/repos/apache/pig/contents/CHANGES.txt?ref=3519fa65cb89bd4e9006aa91adae08ebced46e56",
                "patch": "@@ -92,6 +92,8 @@ OPTIMIZATIONS\n  \n BUG FIXES\n \n+PIG-3985: Multiquery execution of RANK with RANK BY causes NPE (rohini)\n+\n PIG-4218: Pig OrcStorage fail to load a map with null key (daijy)\n \n PIG-4164: After Pig job finish, Pig client spend too much time retry to connect to AM (daijy)",
                "deletions": 0
            },
            {
                "sha": "b5611db44512b2b4765badb4fee81abe57c935c9",
                "filename": "src/org/apache/pig/backend/hadoop/executionengine/mapReduceLayer/MapReduceOper.java",
                "blob_url": "https://github.com/apache/pig/blob/3519fa65cb89bd4e9006aa91adae08ebced46e56/src/org/apache/pig/backend/hadoop/executionengine/mapReduceLayer/MapReduceOper.java",
                "raw_url": "https://github.com/apache/pig/raw/3519fa65cb89bd4e9006aa91adae08ebced46e56/src/org/apache/pig/backend/hadoop/executionengine/mapReduceLayer/MapReduceOper.java",
                "status": "modified",
                "changes": 33,
                "additions": 22,
                "contents_url": "https://api.github.com/repos/apache/pig/contents/src/org/apache/pig/backend/hadoop/executionengine/mapReduceLayer/MapReduceOper.java?ref=3519fa65cb89bd4e9006aa91adae08ebced46e56",
                "patch": "@@ -21,13 +21,15 @@\n import java.util.ArrayList;\n import java.util.HashSet;\n import java.util.Iterator;\n+import java.util.List;\n import java.util.Set;\n \n import org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.plans.MROpPlanVisitor;\n import org.apache.pig.backend.hadoop.executionengine.physicalLayer.PhysicalOperator;\n import org.apache.pig.backend.hadoop.executionengine.physicalLayer.plans.PhysicalPlan;\n import org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POCounter;\n import org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.PORank;\n+import org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POStore;\n import org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POUnion;\n import org.apache.pig.impl.plan.NodeIdGenerator;\n import org.apache.pig.impl.plan.Operator;\n@@ -523,23 +525,32 @@ public String getOperationID() {\n     }\n \n     private POCounter getCounterOperation() {\n-        PhysicalOperator operator;\n-        Iterator<PhysicalOperator> it =  this.mapPlan.getLeaves().iterator();\n-\n-        while(it.hasNext()) {\n-            operator = it.next();\n-            if(operator instanceof POCounter)\n-                return (POCounter) operator;\n+        POCounter counter = getCounterOperation(this.mapPlan);\n+        if (counter == null) {\n+            counter = getCounterOperation(this.reducePlan);\n         }\n+        return counter;\n+    }\n \n-        it =  this.reducePlan.getLeaves().iterator();\n+    private POCounter getCounterOperation(PhysicalPlan plan) {\n+        PhysicalOperator operator;\n+        Iterator<PhysicalOperator> it = plan.getLeaves().iterator();\n \n-        while(it.hasNext()) {\n+        while (it.hasNext()) {\n             operator = it.next();\n-            if(operator instanceof POCounter)\n+            if (operator instanceof POCounter) {\n                 return (POCounter) operator;\n+            } else if (operator instanceof POStore) {\n+                List<PhysicalOperator> preds = plan.getPredecessors(operator);\n+                if (preds != null) {\n+                    for (PhysicalOperator pred : preds) {\n+                        if (pred instanceof POCounter) {\n+                            return (POCounter) pred;\n+                        }\n+                    }\n+                }\n+            }\n         }\n-\n         return null;\n     }\n }",
                "deletions": 11
            },
            {
                "sha": "5331766a96d10831efd55a198a0eb6ad25a8ece0",
                "filename": "src/org/apache/pig/backend/hadoop/executionengine/mapReduceLayer/MultiQueryOptimizer.java",
                "blob_url": "https://github.com/apache/pig/blob/3519fa65cb89bd4e9006aa91adae08ebced46e56/src/org/apache/pig/backend/hadoop/executionengine/mapReduceLayer/MultiQueryOptimizer.java",
                "raw_url": "https://github.com/apache/pig/raw/3519fa65cb89bd4e9006aa91adae08ebced46e56/src/org/apache/pig/backend/hadoop/executionengine/mapReduceLayer/MultiQueryOptimizer.java",
                "status": "modified",
                "changes": 5,
                "additions": 5,
                "contents_url": "https://api.github.com/repos/apache/pig/contents/src/org/apache/pig/backend/hadoop/executionengine/mapReduceLayer/MultiQueryOptimizer.java?ref=3519fa65cb89bd4e9006aa91adae08ebced46e56",
                "patch": "@@ -121,6 +121,11 @@ public void visitMROp(MapReduceOper mr) throws VisitorException {\n                         + \" uses customPartitioner, do not merge it\");\n                 continue;\n             }\n+            if (successor.isCounterOperation()) {\n+                log.debug(\"Splittee \" + successor.getOperatorKey().getId()\n+                        + \" has POCounter, do not merge it\");\n+                continue;\n+            }\n             if (isMapOnly(successor)) {\n                 if (isSingleLoadMapperPlan(successor.mapPlan)\n                         && isSinglePredecessor(successor)) {",
                "deletions": 0
            },
            {
                "sha": "b9ce3604a7488453936794a5f7a117838ae4b6c1",
                "filename": "test/org/apache/pig/test/TestPOPartialAgg.java",
                "blob_url": "https://github.com/apache/pig/blob/3519fa65cb89bd4e9006aa91adae08ebced46e56/test/org/apache/pig/test/TestPOPartialAgg.java",
                "raw_url": "https://github.com/apache/pig/raw/3519fa65cb89bd4e9006aa91adae08ebced46e56/test/org/apache/pig/test/TestPOPartialAgg.java",
                "status": "modified",
                "changes": 7,
                "additions": 4,
                "contents_url": "https://api.github.com/repos/apache/pig/contents/test/org/apache/pig/test/TestPOPartialAgg.java?ref=3519fa65cb89bd4e9006aa91adae08ebced46e56",
                "patch": "@@ -17,7 +17,8 @@\n  */\n package org.apache.pig.test;\n \n-import static org.junit.Assert.*;\n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.fail;\n \n import java.util.ArrayList;\n import java.util.List;\n@@ -324,15 +325,15 @@ private void checkInputAndOutput(String[] inputTups, String[] outputTups,\n \n             res = partAggOp.getNextTuple();\n             assertEquals(POStatus.STATUS_EOP, res.returnStatus);\n-            Util.compareActualAndExpectedResults(outputs, expectedOuts);\n+            Util.checkQueryOutputsAfterSort(outputs, expectedOuts);\n         } else {\n             while (true) {\n                 Result res = partAggOp.getNextTuple();\n                 if (!addResults(res, outputs)) {\n                     break;\n                 }\n             }\n-            Util.compareActualAndExpectedResults(outputs, expectedOuts);\n+            Util.checkQueryOutputsAfterSort(outputs, expectedOuts);\n         }\n \n     }",
                "deletions": 3
            },
            {
                "sha": "a4a0ab57668468568b07f6137c6912cc244e9eea",
                "filename": "test/org/apache/pig/test/TestRank3.java",
                "blob_url": "https://github.com/apache/pig/blob/3519fa65cb89bd4e9006aa91adae08ebced46e56/test/org/apache/pig/test/TestRank3.java",
                "raw_url": "https://github.com/apache/pig/raw/3519fa65cb89bd4e9006aa91adae08ebced46e56/test/org/apache/pig/test/TestRank3.java",
                "status": "modified",
                "changes": 39,
                "additions": 39,
                "contents_url": "https://api.github.com/repos/apache/pig/contents/test/org/apache/pig/test/TestRank3.java?ref=3519fa65cb89bd4e9006aa91adae08ebced46e56",
                "patch": "@@ -53,6 +53,12 @@ public void setUp() throws Exception {\n \n             data = resetData(pigServer);\n             data.set(\"empty\");\n+            data.set(\"testsplit\",\n+                    tuple(1, 2),\n+                    tuple(1, 2),\n+                    tuple(3, 1),\n+                    tuple(2, 4),\n+                    tuple(2, 3));\n             data.set(\n                     \"testcascade\",\n                     tuple(3,2,3),\n@@ -156,6 +162,39 @@ public void testRankEmptyRelation() throws Exception {\n       verifyExpected(data.get(\"empty_result\"), expected);\n     }\n \n+    @Test\n+    public void testRankWithSplitInMap() throws Exception {\n+        String query = \"R1 = LOAD 'testsplit' USING mock.Storage() AS (a:int,b:int);\"\n+            + \"R2 = rank R1 by a ;\"\n+            + \"R3 = rank R1 ;\"\n+            + \"R4 = union R2, R3;\"\n+            + \"store R4 into 'R4' using mock.Storage();\";\n+\n+        Util.registerMultiLineQuery(pigServer, query);\n+        List<Tuple> expectedResults = Util\n+                .getTuplesFromConstantTupleStrings(new String[] { \"(1L,1,2)\",\n+                        \"(2L,1,2)\", \"(3L,3,1)\", \"(4L,2,4)\", \"(5L,2,3)\", \"(1L,1,2)\",\n+                        \"(1L,1,2)\", \"(3L,2,3)\", \"(3L,2,4)\", \"(5L,3,1)\" });\n+        Util.checkQueryOutputsAfterSort(data.get(\"R4\"), expectedResults);\n+    }\n+\n+    @Test\n+    public void testRankWithSplitInReduce() throws Exception {\n+        String query = \"R1 = LOAD 'testsplit' USING mock.Storage() AS (a:int,b:int);\"\n+            + \"R1 = ORDER R1 by b;\"\n+            + \"R2 = rank R1 by a ;\"\n+            + \"R3 = rank R1;\"\n+            + \"R4 = union R2, R3;\"\n+            + \"store R4 into 'R4' using mock.Storage();\";\n+\n+        Util.registerMultiLineQuery(pigServer, query);\n+        List<Tuple> expectedResults = Util\n+                .getTuplesFromConstantTupleStrings(new String[] { \"(1L,3,1)\",\n+                        \"(2L,1,2)\", \"(3L,1,2)\", \"(4L,2,3)\", \"(5L,2,4)\", \"(1L,1,2)\",\n+                        \"(1L,1,2)\", \"(3L,2,4)\", \"(3L,2,3)\", \"(5L,3,1)\" });\n+        Util.checkQueryOutputsAfterSort(data.get(\"R4\"), expectedResults);\n+    }\n+\n     public void verifyExpected(List<Tuple> out, Set<Tuple> expected) {\n         for (Tuple tup : out) {\n             assertTrue(expected + \" contains \" + tup, expected.contains(tup));",
                "deletions": 0
            },
            {
                "sha": "fa1bacbb73d8b5cb4e6443becd7eccbfb873db0f",
                "filename": "test/org/apache/pig/test/TestUnionOnSchema.java",
                "blob_url": "https://github.com/apache/pig/blob/3519fa65cb89bd4e9006aa91adae08ebced46e56/test/org/apache/pig/test/TestUnionOnSchema.java",
                "raw_url": "https://github.com/apache/pig/raw/3519fa65cb89bd4e9006aa91adae08ebced46e56/test/org/apache/pig/test/TestUnionOnSchema.java",
                "status": "modified",
                "changes": 3,
                "additions": 2,
                "contents_url": "https://api.github.com/repos/apache/pig/contents/test/org/apache/pig/test/TestUnionOnSchema.java?ref=3519fa65cb89bd4e9006aa91adae08ebced46e56",
                "patch": "@@ -492,7 +492,7 @@ public void testUnionOnSchemaAdditionalColumnsWithImplicitSplit() throws IOExcep\n                                 \"(4,5,6,null)\",\n                         });\n         \n-        Util.compareActualAndExpectedResults(list1, expectedRes);\n+        Util.checkQueryOutputsAfterSort(list1, expectedRes);\n         \n         assertEquals(0, list2.size());\n     }\n@@ -852,6 +852,7 @@ public void testUnionOnSchemaUdfTypeEvolution2() throws IOException, ParserExcep\n      * Udf that has schema of tuple column with no inner schema \n      */\n     public static class UDFTupleNullSchema extends EvalFunc <Tuple> {\n+        @Override\n         public Tuple exec(Tuple input) {\n             return input;\n         }",
                "deletions": 1
            },
            {
                "sha": "2e0a46ce8148d00e8eba64007c0879f208827745",
                "filename": "test/org/apache/pig/test/Util.java",
                "blob_url": "https://github.com/apache/pig/blob/3519fa65cb89bd4e9006aa91adae08ebced46e56/test/org/apache/pig/test/Util.java",
                "raw_url": "https://github.com/apache/pig/raw/3519fa65cb89bd4e9006aa91adae08ebced46e56/test/org/apache/pig/test/Util.java",
                "status": "modified",
                "changes": 8,
                "additions": 2,
                "contents_url": "https://api.github.com/repos/apache/pig/contents/test/org/apache/pig/test/Util.java?ref=3519fa65cb89bd4e9006aa91adae08ebced46e56",
                "patch": "@@ -540,14 +540,10 @@ static public void checkQueryOutputsAfterSort(Iterator<Tuple> actualResultsIt,\n          while(actualResultsIt.hasNext()){\n              actualResList.add(actualResultsIt.next());\n          }\n-\n-         compareActualAndExpectedResults(actualResList, expectedResList);\n-\n+         checkQueryOutputsAfterSort(actualResList, expectedResList);\n      }\n \n-\n-\n-     static public void compareActualAndExpectedResults(\n+     static public void checkQueryOutputsAfterSort(\n             List<Tuple> actualResList, List<Tuple> expectedResList) {\n          Collections.sort(actualResList);\n          Collections.sort(expectedResList);",
                "deletions": 6
            }
        ]
    },
    {
        "repo": "pig",
        "message": "PIG-4112: NPE in packager when union + group-by followed by replicated join in Tez (rohini via cheolsoo)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/pig/trunk@1617200 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/pig/commit/28e8cc03116fb1e7f79c699a4e9d3d93efe22ee8",
        "parent": "https://github.com/apache/pig/commit/07b15fb6134216cf35a55ee56cd7716adfe97430",
        "bug_id": "pig_56",
        "file": [
            {
                "sha": "3dc0179f7e52f0de9d243c7f6d808c3b8801ae87",
                "filename": "CHANGES.txt",
                "blob_url": "https://github.com/apache/pig/blob/28e8cc03116fb1e7f79c699a4e9d3d93efe22ee8/CHANGES.txt",
                "raw_url": "https://github.com/apache/pig/raw/28e8cc03116fb1e7f79c699a4e9d3d93efe22ee8/CHANGES.txt",
                "status": "modified",
                "changes": 2,
                "additions": 2,
                "contents_url": "https://api.github.com/repos/apache/pig/contents/CHANGES.txt?ref=28e8cc03116fb1e7f79c699a4e9d3d93efe22ee8",
                "patch": "@@ -56,6 +56,8 @@ OPTIMIZATIONS\n  \n BUG FIXES\n \n+PIG-4112: NPE in packager when union + group-by followed by replicated join in Tez (rohini via cheolsoo)\n+\n PIG-4113: TEZ-1386 breaks hadoop 2 compilation in trunk (cheolsoo)\n \n PIG-4110: TEZ-1382 breaks Hadoop 2 compilation (cheolsoo)",
                "deletions": 0
            },
            {
                "sha": "725ffd9ceb1c0a3182bb09a81ce0411f19343630",
                "filename": "src/org/apache/pig/backend/hadoop/executionengine/tez/TezLauncher.java",
                "blob_url": "https://github.com/apache/pig/blob/28e8cc03116fb1e7f79c699a4e9d3d93efe22ee8/src/org/apache/pig/backend/hadoop/executionengine/tez/TezLauncher.java",
                "raw_url": "https://github.com/apache/pig/raw/28e8cc03116fb1e7f79c699a4e9d3d93efe22ee8/src/org/apache/pig/backend/hadoop/executionengine/tez/TezLauncher.java",
                "status": "modified",
                "changes": 3,
                "additions": 0,
                "contents_url": "https://api.github.com/repos/apache/pig/contents/src/org/apache/pig/backend/hadoop/executionengine/tez/TezLauncher.java?ref=28e8cc03116fb1e7f79c699a4e9d3d93efe22ee8",
                "patch": "@@ -137,9 +137,6 @@ public void run() {\n             task.setUncaughtExceptionHandler(jctExceptionHandler);\n             task.setContextClassLoader(PigContext.getClassLoader());\n \n-            // TezJobControl always holds a single TezJob. We use JobControl\n-            // only because it is convenient to launch the job via\n-            // ControlledJob.submit().\n             tezStats.setTezJob(runningJob);\n \n             // Mark the times that the jobs were submitted so it's reflected in job",
                "deletions": 3
            },
            {
                "sha": "94122a5dae612c818d33ccfbbb4cafa194ddde60",
                "filename": "src/org/apache/pig/backend/hadoop/executionengine/tez/TezPOPackageAnnotator.java",
                "blob_url": "https://github.com/apache/pig/blob/28e8cc03116fb1e7f79c699a4e9d3d93efe22ee8/src/org/apache/pig/backend/hadoop/executionengine/tez/TezPOPackageAnnotator.java",
                "raw_url": "https://github.com/apache/pig/raw/28e8cc03116fb1e7f79c699a4e9d3d93efe22ee8/src/org/apache/pig/backend/hadoop/executionengine/tez/TezPOPackageAnnotator.java",
                "status": "modified",
                "changes": 2,
                "additions": 1,
                "contents_url": "https://api.github.com/repos/apache/pig/contents/src/org/apache/pig/backend/hadoop/executionengine/tez/TezPOPackageAnnotator.java?ref=28e8cc03116fb1e7f79c699a4e9d3d93efe22ee8",
                "patch": "@@ -140,7 +140,7 @@ public LoRearrangeDiscoverer(PhysicalPlan plan, TezOperator pkgTezOp, POPackage\n         @Override\n         public void visitLocalRearrange(POLocalRearrange lrearrange) throws VisitorException {\n             POLocalRearrangeTez lr = (POLocalRearrangeTez) lrearrange;\n-            if (!lr.getOutputKey().equals(pkgTezOp.getOperatorKey().toString())) {\n+            if (!(lr.isConnectedToPackage() && lr.getOutputKey().equals(pkgTezOp.getOperatorKey().toString()))) {\n                 return;\n             }\n             loRearrangeFound++;",
                "deletions": 1
            },
            {
                "sha": "bc288d99d086483d045dbeac7fdc76571e9745a8",
                "filename": "test/e2e/pig/tests/nightly.conf",
                "blob_url": "https://github.com/apache/pig/blob/28e8cc03116fb1e7f79c699a4e9d3d93efe22ee8/test/e2e/pig/tests/nightly.conf",
                "raw_url": "https://github.com/apache/pig/raw/28e8cc03116fb1e7f79c699a4e9d3d93efe22ee8/test/e2e/pig/tests/nightly.conf",
                "status": "modified",
                "changes": 10,
                "additions": 10,
                "contents_url": "https://api.github.com/repos/apache/pig/contents/test/e2e/pig/tests/nightly.conf?ref=28e8cc03116fb1e7f79c699a4e9d3d93efe22ee8",
                "patch": "@@ -1493,6 +1493,16 @@ c = union a, b;\n d = foreach c generate (name is not NULL? UPPER(name) : 'FNU LNU') as name, (age < 30 ? -1 : age) as age, (gpa is NULL ? 0.0 : ((gpa > 0.5 AND gpa < 1.0) ? 1 : gpa)) as gpa;\n e = filter d by (name matches '.*MIKE.*') OR (NOT (gpa + 1.5 > 4));\n store e into ':OUTPATH:';\\,\n+            },\n+            {\n+            'num' => 13,\n+            'pig' => q\\a = load ':INPATH:/singlefile/studenttab10k' as (name, age, gpa);\n+b = load ':INPATH:/singlefile/studentcolon10k' using PigStorage(':') as (name, age, gpa);\n+c = union a, b;\n+d = group c by name;\n+e = load ':INPATH:/singlefile/votertab10k' as (name, age, registration, contributions);\n+f = join d by group, e by name using 'replicated';\n+store f into ':OUTPATH:';\\,\n             },\n \t\t]\n \t\t},",
                "deletions": 0
            }
        ]
    },
    {
        "repo": "pig",
        "message": "PIG-3988: PigStorage: CommandLineParser is not thread safe (tmwoodruff via rohini) - Fix NPE with commons-cli-1.0.jar\n\ngit-svn-id: https://svn.apache.org/repos/asf/pig/trunk@1601993 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/pig/commit/8fe2cc60a0341b2678c0a1741ca47d908898d5b3",
        "parent": "https://github.com/apache/pig/commit/6565f6e59449bdb42881ccb8edb046e95209c0f3",
        "bug_id": "pig_57",
        "file": [
            {
                "sha": "675f138fc36e2595b430225c2dca3853ed82656e",
                "filename": "src/org/apache/pig/builtin/PigStorage.java",
                "blob_url": "https://github.com/apache/pig/blob/8fe2cc60a0341b2678c0a1741ca47d908898d5b3/src/org/apache/pig/builtin/PigStorage.java",
                "raw_url": "https://github.com/apache/pig/raw/8fe2cc60a0341b2678c0a1741ca47d908898d5b3/src/org/apache/pig/builtin/PigStorage.java",
                "status": "modified",
                "changes": 3,
                "additions": 1,
                "contents_url": "https://api.github.com/repos/apache/pig/contents/src/org/apache/pig/builtin/PigStorage.java?ref=8fe2cc60a0341b2678c0a1741ca47d908898d5b3",
                "patch": "@@ -28,7 +28,6 @@\n import org.apache.commons.cli.GnuParser;\n import org.apache.commons.cli.HelpFormatter;\n import org.apache.commons.cli.Option;\n-import org.apache.commons.cli.OptionBuilder;\n import org.apache.commons.cli.Options;\n import org.apache.commons.cli.ParseException;\n import org.apache.commons.logging.Log;\n@@ -166,7 +165,7 @@ private Options populateValidOptions() {\n         validOptions.addOption(TAG_SOURCE_FILE, false, \"Appends input source file name to beginning of each tuple.\");\n         validOptions.addOption(TAG_SOURCE_PATH, false, \"Appends input source file path to beginning of each tuple.\");\n         validOptions.addOption(\"tagsource\", false, \"Appends input source file name to beginning of each tuple.\");\n-        Option overwrite = new Option(null, \"Overwrites the destination.\");\n+        Option overwrite = new Option(\" \", \"Overwrites the destination.\");\n         overwrite.setLongOpt(\"overwrite\");\n         overwrite.setOptionalArg(true);\n         overwrite.setArgs(1);",
                "deletions": 2
            }
        ]
    },
    {
        "repo": "pig",
        "message": "PIG-3944: PigNullableWritable toString method throws NPE on null value (mauzhang via cheolsoo)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/pig/trunk@1596062 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/pig/commit/b8a5c4d1c88fd55e47d7f95c5d8b42c9510bea7e",
        "parent": "https://github.com/apache/pig/commit/55fbcd9e73d98ff53391103cabcc269398f4b1cf",
        "bug_id": "pig_58",
        "file": [
            {
                "sha": "7bfc6563cc05b59f87036e44df3a7911e802dfbb",
                "filename": "CHANGES.txt",
                "blob_url": "https://github.com/apache/pig/blob/b8a5c4d1c88fd55e47d7f95c5d8b42c9510bea7e/CHANGES.txt",
                "raw_url": "https://github.com/apache/pig/raw/b8a5c4d1c88fd55e47d7f95c5d8b42c9510bea7e/CHANGES.txt",
                "status": "modified",
                "changes": 2,
                "additions": 2,
                "contents_url": "https://api.github.com/repos/apache/pig/contents/CHANGES.txt?ref=b8a5c4d1c88fd55e47d7f95c5d8b42c9510bea7e",
                "patch": "@@ -133,6 +133,8 @@ PIG-3882: Multiquery off mode execution is not done in batch and very inefficien\n  \n BUG FIXES\n \n+PIG-3944: PigNullableWritable toString method throws NPE on null value (mauzhang via cheolsoo)\n+\n PIG-3936: DBStorage fails on storing nulls for non varchar columns (jeremykarn via cheolsoo) \n \n PIG-3945: Ant not sending hadoopversion to piggybank sub-ant (mrflip via cheolsoo)",
                "deletions": 0
            },
            {
                "sha": "3941c7ae970db1a37760699fe19e41800dd86ea2",
                "filename": "src/org/apache/pig/impl/io/PigNullableWritable.java",
                "blob_url": "https://github.com/apache/pig/blob/b8a5c4d1c88fd55e47d7f95c5d8b42c9510bea7e/src/org/apache/pig/impl/io/PigNullableWritable.java",
                "raw_url": "https://github.com/apache/pig/raw/b8a5c4d1c88fd55e47d7f95c5d8b42c9510bea7e/src/org/apache/pig/impl/io/PigNullableWritable.java",
                "status": "modified",
                "changes": 2,
                "additions": 1,
                "contents_url": "https://api.github.com/repos/apache/pig/contents/src/org/apache/pig/impl/io/PigNullableWritable.java?ref=b8a5c4d1c88fd55e47d7f95c5d8b42c9510bea7e",
                "patch": "@@ -181,6 +181,6 @@ public boolean equals(Object arg0) {\n \n     @Override\n     public String toString() {\n-        return \"Null: \" + mNull + \" index: \" + mIndex + \" \" + mValue.toString();\n+        return \"Null: \" + mNull + \" index: \" + mIndex + (mNull ? \"\" : \" \" + mValue.toString());\n     }\n }",
                "deletions": 1
            }
        ]
    },
    {
        "repo": "pig",
        "message": "PIG-3746: NPE is thrown if Pig fails before PigStats is intialized (cheolsoo)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/pig/trunk@1569497 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/pig/commit/26270da3f6af2107e7b1bc5f0e778a73be37781a",
        "parent": "https://github.com/apache/pig/commit/b284b44f24fc9ef518e64562b1271f15e9bd31e4",
        "bug_id": "pig_59",
        "file": [
            {
                "sha": "3c7cb9d46f2ca6011cb23f5a477c199aa3f3af5b",
                "filename": "CHANGES.txt",
                "blob_url": "https://github.com/apache/pig/blob/26270da3f6af2107e7b1bc5f0e778a73be37781a/CHANGES.txt",
                "raw_url": "https://github.com/apache/pig/raw/26270da3f6af2107e7b1bc5f0e778a73be37781a/CHANGES.txt",
                "status": "modified",
                "changes": 2,
                "additions": 2,
                "contents_url": "https://api.github.com/repos/apache/pig/contents/CHANGES.txt?ref=26270da3f6af2107e7b1bc5f0e778a73be37781a",
                "patch": "@@ -89,6 +89,8 @@ OPTIMIZATIONS\n  \n BUG FIXES\n \n+PIG-3746: NPE is thrown if Pig fails before PigStats is intialized (cheolsoo)\n+\n PIG-3747: Update skewed join documentation (cheolsoo)\n \n PIG-3755: auto local mode selection does not check lower bound for size (aniket486)",
                "deletions": 0
            },
            {
                "sha": "e690b8dd16365ec18ca174c304407818ff51a3b2",
                "filename": "src/org/apache/pig/tools/pigstats/PigStatsUtil.java",
                "blob_url": "https://github.com/apache/pig/blob/26270da3f6af2107e7b1bc5f0e778a73be37781a/src/org/apache/pig/tools/pigstats/PigStatsUtil.java",
                "raw_url": "https://github.com/apache/pig/raw/26270da3f6af2107e7b1bc5f0e778a73be37781a/src/org/apache/pig/tools/pigstats/PigStatsUtil.java",
                "status": "modified",
                "changes": 15,
                "additions": 12,
                "contents_url": "https://api.github.com/repos/apache/pig/contents/src/org/apache/pig/tools/pigstats/PigStatsUtil.java?ref=26270da3f6af2107e7b1bc5f0e778a73be37781a",
                "patch": "@@ -142,15 +142,24 @@ public static PigStats getPigStats(int code) {\n \n \n     public static void setErrorMessage(String msg) {\n-        PigStats.get().setErrorMessage(msg);\n+        PigStats ps = PigStats.get();\n+        if (ps != null) {\n+            ps.setErrorMessage(msg);\n+        }\n     }\n \n     public static void setErrorCode(int code) {\n-        PigStats.get().setErrorCode(code);\n+        PigStats ps = PigStats.get();\n+        if (ps != null) {\n+            ps.setErrorCode(code);\n+        }\n     }\n \n     public static void setErrorThrowable(Throwable t) {\n-        PigStats.get().setErrorThrowable(t);\n+        PigStats ps = PigStats.get();\n+        if (ps != null) {\n+            ps.setErrorThrowable(t);\n+        }\n     }\n \n     private static Pattern pattern = Pattern.compile(\"tmp(-)?[\\\\d]{1,10}$\");",
                "deletions": 3
            }
        ]
    },
    {
        "repo": "pig",
        "message": "PIG-3576: NPE due to PIG-3549 when job never gets submitted (lbendig via cheolsoo)\n\ngit-svn-id: https://svn.apache.org/repos/asf/pig/trunk@1546204 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/pig/commit/87720aa5ff00408994b7aa95b66d5ddac7dbb5d3",
        "parent": "https://github.com/apache/pig/commit/0edcf063e32dfceb82c035e90941c0e8a7b0b1e6",
        "bug_id": "pig_60",
        "file": [
            {
                "sha": "b984bf081207dbf96aa6ecba15f63bbee97bd079",
                "filename": "CHANGES.txt",
                "blob_url": "https://github.com/apache/pig/blob/87720aa5ff00408994b7aa95b66d5ddac7dbb5d3/CHANGES.txt",
                "raw_url": "https://github.com/apache/pig/raw/87720aa5ff00408994b7aa95b66d5ddac7dbb5d3/CHANGES.txt",
                "status": "modified",
                "changes": 4,
                "additions": 2,
                "contents_url": "https://api.github.com/repos/apache/pig/contents/CHANGES.txt?ref=87720aa5ff00408994b7aa95b66d5ddac7dbb5d3",
                "patch": "@@ -62,8 +62,6 @@ PIG-3285: Jobs using HBaseStorage fail to ship dependency jars (ndimiduk via che\n \n PIG-3582: Document SUM, MIN, MAX, and AVG functions for BigInteger and BigDecimal (harichinnan via cheolsoo)\n \n-PIG-3576: NPE due to PIG-3549 when job never gets submitted (lbendig via cheolsoo)\n-\n PIG-3525: PigStats.get() and ScriptState.get() shouldn't return MR-specific objects (cheolsoo)\n \n PIG-3568: Define the semantics of POStatus.STATUS_NULL (mwagner via cheolsoo)\n@@ -121,6 +119,8 @@ PIG-3480: TFile-based tmpfile compression crashes in some cases (dvryaboy via an\n \n BUG FIXES\n \n+PIG-3576: NPE due to PIG-3549 when job never gets submitted (lbendig via cheolsoo)\n+\n PIG-3567: LogicalPlanPrinter throws OOM for large scripts (aniket486)\n \n PIG-3579: pig.script's deserialized version does not maintain line numbers (jgzhang via aniket486)",
                "deletions": 2
            },
            {
                "sha": "059db0c04a5509178d72270af91fd66486e4e2bd",
                "filename": "src/org/apache/pig/backend/hadoop/executionengine/mapReduceLayer/MapReduceLauncher.java",
                "blob_url": "https://github.com/apache/pig/blob/87720aa5ff00408994b7aa95b66d5ddac7dbb5d3/src/org/apache/pig/backend/hadoop/executionengine/mapReduceLayer/MapReduceLauncher.java",
                "raw_url": "https://github.com/apache/pig/raw/87720aa5ff00408994b7aa95b66d5ddac7dbb5d3/src/org/apache/pig/backend/hadoop/executionengine/mapReduceLayer/MapReduceLauncher.java",
                "status": "modified",
                "changes": 4,
                "additions": 2,
                "contents_url": "https://api.github.com/repos/apache/pig/contents/src/org/apache/pig/backend/hadoop/executionengine/mapReduceLayer/MapReduceLauncher.java?ref=87720aa5ff00408994b7aa95b66d5ddac7dbb5d3",
                "patch": "@@ -102,7 +102,7 @@ public void kill() {\n                     RunningJob runningJob = job.getJobClient().getJob(job.getAssignedJobID());\n                     if (runningJob!=null)\n                         runningJob.killJob();\n-                    log.info(\"Job \" + job.getAssignedJobID().toString() + \" killed\");\n+                    log.info(\"Job \" + job.getAssignedJobID() + \" killed\");\n                 }\n             }\n         } catch (Exception e) {\n@@ -536,7 +536,7 @@ private void checkStopOnFailure(boolean stop_on_failure) throws ExecException{\n \n             for (int i=0; i<jc.getFailedJobs().size(); i++) {\n                 Job j = jc.getFailedJobs().get(i);\n-                msg.append(\"JobID: \" + String.valueOf(j.getAssignedJobID()) + \" Reason: \" + j.getMessage());\n+                msg.append(\"JobID: \" + j.getAssignedJobID() + \" Reason: \" + j.getMessage());\n                 if (i!=jc.getFailedJobs().size()-1) {\n                     msg.append(\"\\n\");\n                 }",
                "deletions": 2
            }
        ]
    },
    {
        "repo": "pig",
        "message": "PIG-3576: NPE due to PIG-3549 when job never gets submitted (lbendig via cheolsoo)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/pig/trunk@1543100 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/pig/commit/1a1cd4cce7a289818d4a3ae60e91dd1b9b8270ec",
        "parent": "https://github.com/apache/pig/commit/c8834937c51743dca7f770f7795281d0468c130f",
        "bug_id": "pig_61",
        "file": [
            {
                "sha": "45cf4674f178f46489942dbfd531a8e83fcfe5fb",
                "filename": "CHANGES.txt",
                "blob_url": "https://github.com/apache/pig/blob/1a1cd4cce7a289818d4a3ae60e91dd1b9b8270ec/CHANGES.txt",
                "raw_url": "https://github.com/apache/pig/raw/1a1cd4cce7a289818d4a3ae60e91dd1b9b8270ec/CHANGES.txt",
                "status": "modified",
                "changes": 2,
                "additions": 2,
                "contents_url": "https://api.github.com/repos/apache/pig/contents/CHANGES.txt?ref=1a1cd4cce7a289818d4a3ae60e91dd1b9b8270ec",
                "patch": "@@ -54,6 +54,8 @@ OPTIMIZATIONS\n  \n BUG FIXES\n \n+PIG-3576: NPE due to PIG-3549 when job never gets submitted (lbendig via cheolsoo)\n+\n PIG-3525: PigStats.get() and ScriptState.get() shouldn't return MR-specific objects (cheolsoo)\n \n PIG-3568: Define the semantics of POStatus.STATUS_NULL (mwagner via cheolsoo)",
                "deletions": 0
            },
            {
                "sha": "9580c265546de226889318a1e37b134c38ccb982",
                "filename": "src/org/apache/pig/backend/hadoop/executionengine/mapReduceLayer/MapReduceLauncher.java",
                "blob_url": "https://github.com/apache/pig/blob/1a1cd4cce7a289818d4a3ae60e91dd1b9b8270ec/src/org/apache/pig/backend/hadoop/executionengine/mapReduceLayer/MapReduceLauncher.java",
                "raw_url": "https://github.com/apache/pig/raw/1a1cd4cce7a289818d4a3ae60e91dd1b9b8270ec/src/org/apache/pig/backend/hadoop/executionengine/mapReduceLayer/MapReduceLauncher.java",
                "status": "modified",
                "changes": 2,
                "additions": 1,
                "contents_url": "https://api.github.com/repos/apache/pig/contents/src/org/apache/pig/backend/hadoop/executionengine/mapReduceLayer/MapReduceLauncher.java?ref=1a1cd4cce7a289818d4a3ae60e91dd1b9b8270ec",
                "patch": "@@ -536,7 +536,7 @@ private void checkStopOnFailure(boolean stop_on_failure) throws ExecException{\n \n             for (int i=0; i<jc.getFailedJobs().size(); i++) {\n                 Job j = jc.getFailedJobs().get(i);\n-                msg.append(\"JobID: \" + j.getAssignedJobID().toString() + \" Reason: \" + j.getMessage());\n+                msg.append(\"JobID: \" + String.valueOf(j.getAssignedJobID()) + \" Reason: \" + j.getMessage());\n                 if (i!=jc.getFailedJobs().size()-1) {\n                     msg.append(\"\\n\");\n                 }",
                "deletions": 1
            }
        ]
    },
    {
        "repo": "pig",
        "message": "PIG-3377: New AvroStorage throws NPE when storing untyped map/bag/tuple (jadler via cheolsoo)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/pig/trunk@1536044 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/pig/commit/1ed45193e0fa37c389addd6043df2e8172b7381c",
        "parent": "https://github.com/apache/pig/commit/405db4040c753649ea11ffa944a1d6d323a49111",
        "bug_id": "pig_62",
        "file": [
            {
                "sha": "5897047b19536b3afaea6d64045740c3330e4b51",
                "filename": "CHANGES.txt",
                "blob_url": "https://github.com/apache/pig/blob/1ed45193e0fa37c389addd6043df2e8172b7381c/CHANGES.txt",
                "raw_url": "https://github.com/apache/pig/raw/1ed45193e0fa37c389addd6043df2e8172b7381c/CHANGES.txt",
                "status": "modified",
                "changes": 2,
                "additions": 2,
                "contents_url": "https://api.github.com/repos/apache/pig/contents/CHANGES.txt?ref=1ed45193e0fa37c389addd6043df2e8172b7381c",
                "patch": "@@ -40,6 +40,8 @@ OPTIMIZATIONS\n  \n BUG FIXES\n \n+PIG-3377: New AvroStorage throws NPE when storing untyped map/array/bag (jadler via cheolsoo)\n+\n PIG-3542: Javadoc of REGEX_EXTRACT_ALL (nyigitba via daijy)\n \n PIG-3518: Need to ship jruby.jar in the release (daijy)",
                "deletions": 0
            },
            {
                "sha": "fb89e9c766de24eccd2d7485d39f799cfd0397f8",
                "filename": "src/org/apache/pig/impl/util/avro/AvroStorageSchemaConversionUtilities.java",
                "blob_url": "https://github.com/apache/pig/blob/1ed45193e0fa37c389addd6043df2e8172b7381c/src/org/apache/pig/impl/util/avro/AvroStorageSchemaConversionUtilities.java",
                "raw_url": "https://github.com/apache/pig/raw/1ed45193e0fa37c389addd6043df2e8172b7381c/src/org/apache/pig/impl/util/avro/AvroStorageSchemaConversionUtilities.java",
                "status": "modified",
                "changes": 15,
                "additions": 13,
                "contents_url": "https://api.github.com/repos/apache/pig/contents/src/org/apache/pig/impl/util/avro/AvroStorageSchemaConversionUtilities.java?ref=1ed45193e0fa37c389addd6043df2e8172b7381c",
                "patch": "@@ -427,6 +427,9 @@ private static Schema resourceFieldSchemaToAvroSchema(\n           schema.getFields()[0].getSchema(), name, null,\n           definedRecordNames,\n           doubleColonsToDoubleUnderscores);\n+      if (innerBagSchema == null) {\n+        throw new IOException(\"AvroStorage can't save bags with untyped values; please specify a value type or a schema.\");\n+      }\n       return createNullableUnion(Schema.createArray(innerBagSchema));\n     case DataType.BIGCHARARRAY:\n       return createNullableUnion(Type.STRING);\n@@ -457,10 +460,15 @@ private static Schema resourceFieldSchemaToAvroSchema(\n     case DataType.LONG:\n       return createNullableUnion(Type.LONG);\n     case DataType.MAP:\n+      if (schema == null) {\n+        throw new IOException(\"AvroStorage can't save maps with untyped values; please specify a value type or a schema.\");\n+      }\n       byte innerType = schema.getFields()[0].getType();\n       String desc = schema.getFields()[0].getDescription();\n-      if (desc.equals(\"autogenerated from Pig Field Schema\")) {\n-        desc = null;\n+      if (desc != null) {\n+        if (desc.equals(\"autogenerated from Pig Field Schema\")) {\n+          desc = null;\n+        }\n       }\n       Schema innerSchema;\n       if (DataType.isComplex(innerType)) {\n@@ -480,6 +488,9 @@ private static Schema resourceFieldSchemaToAvroSchema(\n     case DataType.NULL:\n       return Schema.create(Type.NULL);\n     case DataType.TUPLE:\n+      if (schema == null) {\n+        throw new IOException(\"AvroStorage can't save tuples with untyped values; please specify a value type or a schema.\");\n+      }\n       Schema returnSchema = createNullableUnion(\n           resourceSchemaToAvroSchema(schema, name, null,\n               definedRecordNames, doubleColonsToDoubleUnderscores));",
                "deletions": 2
            }
        ]
    },
    {
        "repo": "pig",
        "message": "PIG-3322: AvroStorage give NPE on reading file with union as top level schema (viraj via rohini)\n\ngit-svn-id: https://svn.apache.org/repos/asf/pig/trunk@1489264 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/pig/commit/84109c6af5098931e5fcec53c37c37a6d4b88bb5",
        "parent": "https://github.com/apache/pig/commit/6aa213f20dc723c4e96dee8c7716ef41df23bdec",
        "bug_id": "pig_63",
        "file": [
            {
                "sha": "78f65afae8d4995f4f59f8ff83e1c6272f1e3104",
                "filename": "CHANGES.txt",
                "blob_url": "https://github.com/apache/pig/blob/84109c6af5098931e5fcec53c37c37a6d4b88bb5/CHANGES.txt",
                "raw_url": "https://github.com/apache/pig/raw/84109c6af5098931e5fcec53c37c37a6d4b88bb5/CHANGES.txt",
                "status": "modified",
                "changes": 2,
                "additions": 2,
                "contents_url": "https://api.github.com/repos/apache/pig/contents/CHANGES.txt?ref=84109c6af5098931e5fcec53c37c37a6d4b88bb5",
                "patch": "@@ -192,6 +192,8 @@ PIG-3013: BinInterSedes improve chararray sort performance (rohini)\n \n BUG FIXES\n \n+PIG-3322: AvroStorage give NPE on reading file with union as top level schema (viraj via rohini)\n+\n PIG-2828: Handle nulls in DataType.compare (aniket486)\n \n PIG-3335: TestErrorHandling.tesNegative7 fails on MR2 (xuefuz)",
                "deletions": 0
            },
            {
                "sha": "997cf4c182dc0b45c402caeee4e970a7015a3ca9",
                "filename": "contrib/piggybank/java/src/main/java/org/apache/pig/piggybank/storage/avro/AvroStorage.java",
                "blob_url": "https://github.com/apache/pig/blob/84109c6af5098931e5fcec53c37c37a6d4b88bb5/contrib/piggybank/java/src/main/java/org/apache/pig/piggybank/storage/avro/AvroStorage.java",
                "raw_url": "https://github.com/apache/pig/raw/84109c6af5098931e5fcec53c37c37a6d4b88bb5/contrib/piggybank/java/src/main/java/org/apache/pig/piggybank/storage/avro/AvroStorage.java",
                "status": "modified",
                "changes": 1,
                "additions": 0,
                "contents_url": "https://api.github.com/repos/apache/pig/contents/contrib/piggybank/java/src/main/java/org/apache/pig/piggybank/storage/avro/AvroStorage.java?ref=84109c6af5098931e5fcec53c37c37a6d4b88bb5",
                "patch": "@@ -534,7 +534,6 @@ else if (inputs.containsKey(\"schema_file\")) {\n                 AvroStorageLog.details(\"data path=\" + path.toUri().toString());\n                 FileSystem fs = FileSystem.get(path.toUri(), new Configuration());\n                 outputAvroSchema = getAvroSchema(path, fs);\n-                userSpecifiedAvroSchema = outputAvroSchema;\n             } else if (name.equalsIgnoreCase(\"nullable\")) {\n                 nullable = (Boolean) value;\n             } else if (name.equalsIgnoreCase(\"schema\")) {",
                "deletions": 1
            },
            {
                "sha": "531030467ea8d2b92394103b903d8a99ad4c9694",
                "filename": "contrib/piggybank/java/src/main/java/org/apache/pig/piggybank/storage/avro/PigAvroRecordReader.java",
                "blob_url": "https://github.com/apache/pig/blob/84109c6af5098931e5fcec53c37c37a6d4b88bb5/contrib/piggybank/java/src/main/java/org/apache/pig/piggybank/storage/avro/PigAvroRecordReader.java",
                "raw_url": "https://github.com/apache/pig/raw/84109c6af5098931e5fcec53c37c37a6d4b88bb5/contrib/piggybank/java/src/main/java/org/apache/pig/piggybank/storage/avro/PigAvroRecordReader.java",
                "status": "modified",
                "changes": 7,
                "additions": 6,
                "contents_url": "https://api.github.com/repos/apache/pig/contents/contrib/piggybank/java/src/main/java/org/apache/pig/piggybank/storage/avro/PigAvroRecordReader.java?ref=84109c6af5098931e5fcec53c37c37a6d4b88bb5",
                "patch": "@@ -141,7 +141,12 @@ public Writable getCurrentValue() throws IOException, InterruptedException {\n             AvroStorageLog.details(\"Class =\" + obj.getClass());\n             result = (Tuple) obj;\n         } else {\n-            AvroStorageLog.details(\"Wrap calss \" + obj.getClass() + \" as a tuple.\");\n+            if (obj != null) {\n+                AvroStorageLog.details(\"Wrap class \" + obj.getClass() + \" as a tuple.\");\n+            }\n+            else {\n+                AvroStorageLog.details(\"Wrap null as a tuple.\");\n+            }\n             result = wrapAsTuple(obj);\n         }\n         if (schemaToMergedSchemaMap != null) {",
                "deletions": 1
            },
            {
                "sha": "dad54449161c84100cf2b77b5cf1255f9f849224",
                "filename": "contrib/piggybank/java/src/test/java/org/apache/pig/piggybank/test/storage/avro/TestAvroStorage.java",
                "blob_url": "https://github.com/apache/pig/blob/84109c6af5098931e5fcec53c37c37a6d4b88bb5/contrib/piggybank/java/src/test/java/org/apache/pig/piggybank/test/storage/avro/TestAvroStorage.java",
                "raw_url": "https://github.com/apache/pig/raw/84109c6af5098931e5fcec53c37c37a6d4b88bb5/contrib/piggybank/java/src/test/java/org/apache/pig/piggybank/test/storage/avro/TestAvroStorage.java",
                "status": "modified",
                "changes": 40,
                "additions": 40,
                "contents_url": "https://api.github.com/repos/apache/pig/contents/contrib/piggybank/java/src/test/java/org/apache/pig/piggybank/test/storage/avro/TestAvroStorage.java?ref=84109c6af5098931e5fcec53c37c37a6d4b88bb5",
                "patch": "@@ -16,6 +16,10 @@\n  */\n package org.apache.pig.piggybank.test.storage.avro;\n \n+import static org.apache.pig.builtin.mock.Storage.resetData;\n+import static org.apache.pig.builtin.mock.Storage.schema;\n+import static org.apache.pig.builtin.mock.Storage.tuple;\n+\n import org.apache.avro.file.DataFileStream;\n import org.apache.avro.generic.GenericDatumReader;\n import org.apache.commons.logging.Log;\n@@ -33,6 +37,8 @@\n import org.apache.pig.backend.executionengine.ExecJob;\n import org.apache.pig.backend.executionengine.ExecJob.JOB_STATUS;\n import org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.JobCreationException;\n+import org.apache.pig.builtin.mock.Storage.Data;\n+import org.apache.pig.data.Tuple;\n import org.apache.pig.impl.io.FileLocalizer;\n import org.apache.pig.impl.logicalLayer.FrontendException;\n import org.apache.pig.piggybank.storage.avro.AvroStorage;\n@@ -181,6 +187,7 @@ private static String getInputFile(String file) {\n     final private String testMultipleSchemas1File = getInputFile(\"test_primitive_types/*\");\n     final private String testMultipleSchemas2File = getInputFile(\"test_complex_types/*\");\n     final private String testUserDefinedLoadSchemaFile = getInputFile(\"test_user_defined_load_schema/*\");\n+    final private String testLoadwithNullValues = getInputFile(\"test_loadavrowithnulls.avro\");\n \n     @BeforeClass\n     public static void setup() throws ExecException, IOException {\n@@ -1075,6 +1082,39 @@ public void testCorruptedFile2() throws IOException {\n         verifyResults(output, expected);\n     }\n \n+    @Test\n+    // Schema for the generated avro file test_loadavrowithnulls.avro\n+    // [\"null\",{\"type\":\"record\",\"name\":\"TUPLE_0\",\n+    // \"fields\":[\n+    // {\"name\":\"name\",\"type\":[\"null\",\"string\"],\"doc\":\"autogenerated from Pig Field Schema\"},\n+    // {\"name\":\"age\",\"type\":[\"null\",\"int\"],\"doc\":\"autogenerated from Pig Field Schema\"},\n+    // {\"name\":\"gpa\",\"type\":[\"null\",\"double\"],\"doc\":\"autogenerated from Pig Field Schema\"}]}]\n+    public void testLoadwithNullValues() throws IOException {\n+    //Input is supposed to have empty tuples\n+    PigSchema2Avro.setTupleIndex(0);\n+    Data data = resetData(pigServerLocal);\n+    String output = outbasedir + \"testLoadwithNulls\";\n+    deleteDirectory(new File(output));\n+    String [] queries = {\n+       \" A = load '\" +  testLoadwithNullValues + \"' USING \" +\n+          \" org.apache.pig.piggybank.storage.avro.AvroStorage(); \",\n+       \" B = order A by name;\",\n+       \" store B into '\" +  output +\"' USING mock.Storage();\"\n+       };\n+    testAvroStorage(queries);\n+    List<Tuple> out = data.get(output);\n+    assertEquals(out + \" size\", 4, out.size());\n+\n+    assertEquals(schema(\"name:chararray,age:int,gpa:double\"), data.getSchema(output));\n+\n+    // sorted data ordered by name\n+    assertEquals(tuple((String)null),out.get(0));\n+    assertEquals(tuple((String)null),out.get(1));\n+    assertEquals(tuple(\"calvin ellison\", 24, 0.71), out.get(2));\n+    assertEquals(tuple(\"wendy johnson\", 60, 0.07), out.get(3));\n+\n+   }\n+\n     private static void deleteDirectory (File path) {\n         if ( path.exists()) {\n             File [] files = path.listFiles();",
                "deletions": 0
            },
            {
                "sha": "1fcaf4c2d277c82af23e4bb1fd79b98ae26ff4a1",
                "filename": "contrib/piggybank/java/src/test/java/org/apache/pig/piggybank/test/storage/avro/avro_test_files/test_loadavrowithnulls.avro",
                "blob_url": "https://github.com/apache/pig/blob/84109c6af5098931e5fcec53c37c37a6d4b88bb5/contrib/piggybank/java/src/test/java/org/apache/pig/piggybank/test/storage/avro/avro_test_files/test_loadavrowithnulls.avro",
                "raw_url": "https://github.com/apache/pig/raw/84109c6af5098931e5fcec53c37c37a6d4b88bb5/contrib/piggybank/java/src/test/java/org/apache/pig/piggybank/test/storage/avro/avro_test_files/test_loadavrowithnulls.avro",
                "status": "added",
                "changes": 0,
                "additions": 0,
                "contents_url": "https://api.github.com/repos/apache/pig/contents/contrib/piggybank/java/src/test/java/org/apache/pig/piggybank/test/storage/avro/avro_test_files/test_loadavrowithnulls.avro?ref=84109c6af5098931e5fcec53c37c37a6d4b88bb5",
                "deletions": 0
            }
        ]
    },
    {
        "repo": "pig",
        "message": "PIG-3132:  NPE when illustrating a relation with HCatLoader (check in missing UDFContextTestLoaderWithSignature.java)\n\ngit-svn-id: https://svn.apache.org/repos/asf/pig/trunk@1458036 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/pig/commit/8adfa6b2eb4d71224fd377d4400555be219db3b8",
        "parent": "https://github.com/apache/pig/commit/213ad2ed2080f7e20de8ad9cb1c1ffce665ce708",
        "bug_id": "pig_64",
        "file": [
            {
                "sha": "db1c62e0c5b80c977e87603f490adbb956a31bc2",
                "filename": "test/org/apache/pig/test/utils/UDFContextTestLoaderWithSignature.java",
                "blob_url": "https://github.com/apache/pig/blob/8adfa6b2eb4d71224fd377d4400555be219db3b8/test/org/apache/pig/test/utils/UDFContextTestLoaderWithSignature.java",
                "raw_url": "https://github.com/apache/pig/raw/8adfa6b2eb4d71224fd377d4400555be219db3b8/test/org/apache/pig/test/utils/UDFContextTestLoaderWithSignature.java",
                "status": "added",
                "changes": 37,
                "additions": 37,
                "contents_url": "https://api.github.com/repos/apache/pig/contents/test/org/apache/pig/test/utils/UDFContextTestLoaderWithSignature.java?ref=8adfa6b2eb4d71224fd377d4400555be219db3b8",
                "patch": "@@ -0,0 +1,37 @@\n+package org.apache.pig.test.utils;\n+\n+import java.io.IOException;\n+import java.util.Properties;\n+\n+import org.apache.hadoop.mapreduce.Job;\n+import org.apache.pig.builtin.PigStorage;\n+import org.apache.pig.data.Tuple;\n+import org.apache.pig.impl.util.UDFContext;\n+\n+public class UDFContextTestLoaderWithSignature extends PigStorage {\n+    private String val;\n+    \n+    public UDFContextTestLoaderWithSignature(String v1) {\n+        val = v1;\n+    }\n+    \n+    @Override\n+    public void setLocation(String location, Job job)\n+            throws IOException {\n+        super.setLocation(location, job);\n+        Properties p = UDFContext.getUDFContext().getUDFProperties(this.getClass());\n+        if (p.get(signature)==null) {\n+            p.put(\"test_\" + signature, val);\n+        }\n+    }\n+    \n+    @Override\n+    public Tuple getNext() throws IOException {\n+        Tuple t = super.getNext();\n+        if (t!=null) {\n+            Properties p = UDFContext.getUDFContext().getUDFProperties(this.getClass());\n+            t.append(p.get(\"test_\" + signature));\n+        }\n+        return t;\n+    }\n+}",
                "deletions": 0
            }
        ]
    },
    {
        "repo": "pig",
        "message": "PIG-2644: Piggybank's HadoopJobHistoryLoader throws NPE when reading broken history file\n\ngit-svn-id: https://svn.apache.org/repos/asf/pig/trunk@1328551 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/pig/commit/d53b4c5dfbff9dd235edb0c9fe8fb2224cca75e9",
        "parent": "https://github.com/apache/pig/commit/89f2d6b9bb9b57910d7abbff3650fdd5c5c99e03",
        "bug_id": "pig_65",
        "file": [
            {
                "sha": "821cdd2a28de04b843aa235d11d87610c37a8db1",
                "filename": "CHANGES.txt",
                "blob_url": "https://github.com/apache/pig/blob/d53b4c5dfbff9dd235edb0c9fe8fb2224cca75e9/CHANGES.txt",
                "raw_url": "https://github.com/apache/pig/raw/d53b4c5dfbff9dd235edb0c9fe8fb2224cca75e9/CHANGES.txt",
                "status": "modified",
                "changes": 2,
                "additions": 2,
                "contents_url": "https://api.github.com/repos/apache/pig/contents/CHANGES.txt?ref=d53b4c5dfbff9dd235edb0c9fe8fb2224cca75e9",
                "patch": "@@ -106,6 +106,8 @@ OPTIMIZATIONS\n \n BUG FIXES\n \n+PIG-2644: Piggybank's HadoopJobHistoryLoader throws NPE when reading broken history file (herberts via daijy)\n+\n PIG-2627: Custom partitioner not set when POSplit is involved in Plan (aniket486 via daijy)\n \n PIG-2596: Jython UDF does not handle boolean output (aniket486 via daijy)",
                "deletions": 0
            },
            {
                "sha": "c1aba97daa9aa6a9ef04cbe08b3eaa6cda0e1cfe",
                "filename": "contrib/piggybank/java/src/main/java/org/apache/pig/piggybank/storage/HadoopJobHistoryLoader.java",
                "blob_url": "https://github.com/apache/pig/blob/d53b4c5dfbff9dd235edb0c9fe8fb2224cca75e9/contrib/piggybank/java/src/main/java/org/apache/pig/piggybank/storage/HadoopJobHistoryLoader.java",
                "raw_url": "https://github.com/apache/pig/raw/d53b4c5dfbff9dd235edb0c9fe8fb2224cca75e9/contrib/piggybank/java/src/main/java/org/apache/pig/piggybank/storage/HadoopJobHistoryLoader.java",
                "status": "modified",
                "changes": 2,
                "additions": 1,
                "contents_url": "https://api.github.com/repos/apache/pig/contents/contrib/piggybank/java/src/main/java/org/apache/pig/piggybank/storage/HadoopJobHistoryLoader.java?ref=d53b4c5dfbff9dd235edb0c9fe8fb2224cca75e9",
                "patch": "@@ -482,7 +482,7 @@ private static void populateMapReduceTaskLists (MRJobInfo value,\n             // CHECK_IT: Only one SUCCESSFUL TASK ATTEMPT\n             Map.Entry<String, JobHistory.TaskAttempt> tae = kv.next();\n             JobHistory.TaskAttempt attempt = tae.getValue();\n-            if (attempt.getValues().get(JobHistory.Keys.TASK_STATUS).equals(\n+            if (null != attempt && null != attempt.getValues() && attempt.getValues().containsKey(JobHistory.Keys.TASK_STATUS) && attempt.getValues().get(JobHistory.Keys.TASK_STATUS).equals(\n                     \"SUCCESS\")) {\n                 return attempt.getValues();\n             }",
                "deletions": 1
            }
        ]
    },
    {
        "repo": "pig",
        "message": "PIG-2027: NPE if Pig don't have permission for log file\n\ngit-svn-id: https://svn.apache.org/repos/asf/pig/trunk@1148855 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/pig/commit/637fb18d4f7be3ce6144635b4fdc178c0477c9e2",
        "parent": "https://github.com/apache/pig/commit/e302f65c25ebb49fbad7fbb8588663bce33a48af",
        "bug_id": "pig_66",
        "file": [
            {
                "sha": "1a69b4590c82b33e2cd002bb6f38c370c3cff797",
                "filename": "CHANGES.txt",
                "blob_url": "https://github.com/apache/pig/blob/637fb18d4f7be3ce6144635b4fdc178c0477c9e2/CHANGES.txt",
                "raw_url": "https://github.com/apache/pig/raw/637fb18d4f7be3ce6144635b4fdc178c0477c9e2/CHANGES.txt",
                "status": "modified",
                "changes": 2,
                "additions": 2,
                "contents_url": "https://api.github.com/repos/apache/pig/contents/CHANGES.txt?ref=637fb18d4f7be3ce6144635b4fdc178c0477c9e2",
                "patch": "@@ -89,6 +89,8 @@ PIG-2011: Speed up TestTypedMap.java (dvryaboy)\n \n BUG FIXES\n \n+PIG-2027: NPE if Pig don't have permission for log file (daijy)\n+\n PIG-2171: TestScriptLanguage is broken on trunk (daijy and thejas)\n \n PIG-2172: Fix test failure for ant 1.8.x (daijy)",
                "deletions": 0
            },
            {
                "sha": "b5b519efebd586d236622c4052992f55d39d8456",
                "filename": "src/org/apache/pig/impl/util/LogUtils.java",
                "blob_url": "https://github.com/apache/pig/blob/637fb18d4f7be3ce6144635b4fdc178c0477c9e2/src/org/apache/pig/impl/util/LogUtils.java",
                "raw_url": "https://github.com/apache/pig/raw/637fb18d4f7be3ce6144635b4fdc178c0477c9e2/src/org/apache/pig/impl/util/LogUtils.java",
                "status": "modified",
                "changes": 3,
                "additions": 2,
                "contents_url": "https://api.github.com/repos/apache/pig/contents/src/org/apache/pig/impl/util/LogUtils.java?ref=637fb18d4f7be3ce6144635b4fdc178c0477c9e2",
                "patch": "@@ -169,7 +169,8 @@ public static void writeLog(Throwable t, String logFileName, Log log, boolean ve\n             log.error(bs.toString());\n         } finally {\n             try {\n-                fos.close();\n+                if (fos!=null)\n+                    fos.close();\n             } catch (IOException e) {\n             }\n         }",
                "deletions": 1
            }
        ]
    },
    {
        "repo": "pig",
        "message": "PIG-2072: NPE when udf has project-star argument and input schema is null\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/pig/trunk@1103776 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/pig/commit/e4c190b4e4deccc55b02cc2044354ad3fd9b9f0d",
        "parent": "https://github.com/apache/pig/commit/6a91447f4a337437b8c5bdc331e02c174ff972f6",
        "bug_id": "pig_67",
        "file": [
            {
                "sha": "f54ed36f5a29de568faa9a75bfb7a20a3108c870",
                "filename": "CHANGES.txt",
                "blob_url": "https://github.com/apache/pig/blob/e4c190b4e4deccc55b02cc2044354ad3fd9b9f0d/CHANGES.txt",
                "raw_url": "https://github.com/apache/pig/raw/e4c190b4e4deccc55b02cc2044354ad3fd9b9f0d/CHANGES.txt",
                "status": "modified",
                "changes": 6,
                "additions": 4,
                "contents_url": "https://api.github.com/repos/apache/pig/contents/CHANGES.txt?ref=e4c190b4e4deccc55b02cc2044354ad3fd9b9f0d",
                "patch": "@@ -44,8 +44,6 @@ BUG FIXES\n \n PIG-2044: Patten match bug in org.apache.pig.newplan.optimizer.Rule (knoguchi via daijy)\n \n-PIG-1938: support project-range as udf argument (thejas)\n-\n PIG-2048: Add zookeeper to pig jar (gbowyer via gates)\n \n PIG-2008: Cache outputFormat in HBaseStorage (thedatachef via gates)\n@@ -72,6 +70,8 @@ PIG-1876: Typed map for Pig (daijy)\n \n IMPROVEMENTS\n \n+PIG-1938: support project-range as udf argument (thejas)\n+\n PIG-2059: PIG doesn't validate incomplete query in batch mode even if -c option is given (xuefu)\n \n PIG-2062: Script silently ended (xuefu)\n@@ -224,6 +224,8 @@ PIG-1696: Performance: Use System.arraycopy() instead of manually copying the by\n \n BUG FIXES\n \n+PIG-2072: NPE when udf has project-star argument and input schema is null (thejas)\n+\n PIG-2075: Bring back TestNewPlanPushUpFilter (daijy)\n \n PIG-1827: When passing a parameter to Pig, if the value contains $ it has to be escaped for no apparent reason (rding)",
                "deletions": 2
            },
            {
                "sha": "bd4e8947e4a866b35f93a541efc7df6c13bf03b3",
                "filename": "src/org/apache/pig/newplan/logical/visitor/TypeCheckingExpVisitor.java",
                "blob_url": "https://github.com/apache/pig/blob/e4c190b4e4deccc55b02cc2044354ad3fd9b9f0d/src/org/apache/pig/newplan/logical/visitor/TypeCheckingExpVisitor.java",
                "raw_url": "https://github.com/apache/pig/raw/e4c190b4e4deccc55b02cc2044354ad3fd9b9f0d/src/org/apache/pig/newplan/logical/visitor/TypeCheckingExpVisitor.java",
                "status": "modified",
                "changes": 10,
                "additions": 9,
                "contents_url": "https://api.github.com/repos/apache/pig/contents/src/org/apache/pig/newplan/logical/visitor/TypeCheckingExpVisitor.java?ref=e4c190b4e4deccc55b02cc2044354ad3fd9b9f0d",
                "patch": "@@ -973,6 +973,8 @@ private boolean byteArrayFound(UserFuncExpression func, Schema s) throws Visitor\n         for(int i=0;i<s.size();i++){\n             try {\n                 FieldSchema fs=s.getField(i);\n+                if(fs == null)\n+                    return false;\n                 if(fs.type==DataType.BYTEARRAY){\n                     return true;\n                 }\n@@ -1098,7 +1100,10 @@ public static boolean schemaEqualsForMatching(Schema inputSchema,\n \n             FieldSchema inputFieldSchema = i.next();\n             FieldSchema udfFieldSchema = j.next();\n-\n+            if(inputFieldSchema == null)\n+                return false;\n+            \n+            \n             if(ignoreByteArrays && inputFieldSchema.type == DataType.BYTEARRAY) {\n                 continue;\n             }\n@@ -1249,6 +1254,9 @@ private long fitPossible(Schema s1, Schema s2) {\n         int castCnt=0;\n         for(int i=0;i<sFields.size();i++){\n             FieldSchema sFS = sFields.get(i);\n+            if(sFS == null){\n+                return INF;\n+            }\n \n             // if we have a byte array do not include it\n             // in the computation of the score - bytearray",
                "deletions": 1
            },
            {
                "sha": "43cbdee6e742794146ace28a943eacc0c02c4872",
                "filename": "test/org/apache/pig/test/TestProjectStarRangeInUdf.java",
                "blob_url": "https://github.com/apache/pig/blob/e4c190b4e4deccc55b02cc2044354ad3fd9b9f0d/test/org/apache/pig/test/TestProjectStarRangeInUdf.java",
                "raw_url": "https://github.com/apache/pig/raw/e4c190b4e4deccc55b02cc2044354ad3fd9b9f0d/test/org/apache/pig/test/TestProjectStarRangeInUdf.java",
                "status": "modified",
                "changes": 24,
                "additions": 24,
                "contents_url": "https://api.github.com/repos/apache/pig/contents/test/org/apache/pig/test/TestProjectStarRangeInUdf.java?ref=e4c190b4e4deccc55b02cc2044354ad3fd9b9f0d",
                "patch": "@@ -99,6 +99,30 @@ public void testProjStarExpandInForeach1Negative() throws IOException{\n                 \"org.apache.pig.builtin.CONCAT\");\n     }\n     \n+    @Test\n+    public void testProjStarExpandInForeach1NegativeNoSchema() throws IOException{\n+        \n+        String query;\n+\n+        query =\n+            \"  l1 = load '\" + INP_FILE_5FIELDS + \"' ;\"\n+            + \"f = foreach l1 generate CONCAT(*) as ct;\"\n+            ; \n+        Util.checkExceptionMessage(query, \"f\",\n+                \"Could not infer the matching function for \" +\n+                \"org.apache.pig.builtin.CONCAT\");\n+\n+\n+        query =\n+            \"  l1 = load '\" + INP_FILE_5FIELDS + \"' ;\"\n+            + \"f = foreach l1 generate SIZE(*) as ct;\"\n+            ; \n+        Util.checkExceptionMessage(query, \"f\",\n+                \"Could not infer the matching function for \" +\n+                \"org.apache.pig.builtin.SIZE\");\n+        \n+    }\n+    \n     @Test\n     public void testProjStarExpandInForeach2() throws IOException {\n ",
                "deletions": 0
            }
        ]
    },
    {
        "repo": "pig",
        "message": "PIG-2018: NPE for co-group with group-by column having complex schema and\n different load functions for each input (thejas)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/pig/trunk@1098027 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/pig/commit/0258db20c54f5ee7e2c1cc946dde69ca3d0ac3b0",
        "parent": "https://github.com/apache/pig/commit/cdc5ebd6a60e145fd8f220189612fb448ff54a7f",
        "bug_id": "pig_68",
        "file": [
            {
                "sha": "5fe7c28bc906dd8856c97de0c088c2771130a4ad",
                "filename": "CHANGES.txt",
                "blob_url": "https://github.com/apache/pig/blob/0258db20c54f5ee7e2c1cc946dde69ca3d0ac3b0/CHANGES.txt",
                "raw_url": "https://github.com/apache/pig/raw/0258db20c54f5ee7e2c1cc946dde69ca3d0ac3b0/CHANGES.txt",
                "status": "modified",
                "changes": 5,
                "additions": 4,
                "contents_url": "https://api.github.com/repos/apache/pig/contents/CHANGES.txt?ref=0258db20c54f5ee7e2c1cc946dde69ca3d0ac3b0",
                "patch": "@@ -188,6 +188,9 @@ PIG-1696: Performance: Use System.arraycopy() instead of manually copying the by\n \n BUG FIXES\n \n+PIG-2018: NPE for co-group with group-by column having complex schema and \n+ different load functions for each input (thejas)\n+\n PIG-2015: Explain writes out logical plan twice (alangates)\n \n PIG-2017: consumeMap() fails with EmptyStackException (thedatachef via daijy)\n@@ -845,7 +848,7 @@ PIG-1414: Problem with parameter substitution (rding)\n PIG-1407: Logging starts before being configured (azaroth via daijy)\n \n PIG-1391: pig unit tests leave behind files in temp directory because \n-MiniCluster files don't get deleted (tejas)\n+ MiniCluster files don't get deleted (thejas)\n \n PIG-1211: Pig script runs half way after which it reports syntax error\n (pradeepkth)",
                "deletions": 1
            },
            {
                "sha": "51cc7ab6af96faaaad81247b3556c201985ac06a",
                "filename": "src/org/apache/pig/newplan/logical/visitor/LineageFindRelVisitor.java",
                "blob_url": "https://github.com/apache/pig/blob/0258db20c54f5ee7e2c1cc946dde69ca3d0ac3b0/src/org/apache/pig/newplan/logical/visitor/LineageFindRelVisitor.java",
                "raw_url": "https://github.com/apache/pig/raw/0258db20c54f5ee7e2c1cc946dde69ca3d0ac3b0/src/org/apache/pig/newplan/logical/visitor/LineageFindRelVisitor.java",
                "status": "modified",
                "changes": 1,
                "additions": 0,
                "contents_url": "https://api.github.com/repos/apache/pig/contents/src/org/apache/pig/newplan/logical/visitor/LineageFindRelVisitor.java?ref=0258db20c54f5ee7e2c1cc946dde69ca3d0ac3b0",
                "patch": "@@ -507,7 +507,6 @@ void mapMatchLoadFuncToUid(\n                 //check if all func spec match\n                 if(!funcSpec1.equals(uid2LoadFuncMap.get(fs.uid))){\n                     allMatch = false;\n-                    break;\n                 }\n                 //check if all inner schema match for use later\n                 if(outFS.schema == null ||  !outFS.schema.isEqual(fs.schema)){",
                "deletions": 1
            },
            {
                "sha": "adf3c68527f77b173cf2cc670dfd7695dc77905f",
                "filename": "test/org/apache/pig/test/TestTypeCheckingValidatorNewLP.java",
                "blob_url": "https://github.com/apache/pig/blob/0258db20c54f5ee7e2c1cc946dde69ca3d0ac3b0/test/org/apache/pig/test/TestTypeCheckingValidatorNewLP.java",
                "raw_url": "https://github.com/apache/pig/raw/0258db20c54f5ee7e2c1cc946dde69ca3d0ac3b0/test/org/apache/pig/test/TestTypeCheckingValidatorNewLP.java",
                "status": "modified",
                "changes": 13,
                "additions": 13,
                "contents_url": "https://api.github.com/repos/apache/pig/contents/test/org/apache/pig/test/TestTypeCheckingValidatorNewLP.java?ref=0258db20c54f5ee7e2c1cc946dde69ca3d0ac3b0",
                "patch": "@@ -4106,4 +4106,17 @@ public void testUDFNoInnerSchema() throws FrontendException {\n             checkLastForeachCastLoadFunc(query, null, 0);\n         }\n \n+        //see PIG-2018\n+        @Test\n+        public void testCoGroupComplex(){\n+            String query = \n+                \"l1 = load 'x' using PigStorage(':') as (a : (i : int),b,c);\"\n+                + \"l2 = load 'x' as (a,b,c);\"\n+                + \"cg = cogroup l1 by a, l2 by a;\";\n+            try {\n+                createAndProcessLPlan(query);\n+            } catch (FrontendException e) {\n+                fail(\"caught exception creating lp\");\n+            }\n+        }\n }",
                "deletions": 0
            }
        ]
    },
    {
        "repo": "pig",
        "message": "PIG-1596: NPE's thrown when attempting to load hbase columns containing null values (zjffdu)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/pig/trunk@992926 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/pig/commit/55d6dfb22e00de38b091ff4ecac9bea402bc2ae2",
        "parent": "https://github.com/apache/pig/commit/4cc9da7b63f4cd881eb9cc9b50fb1befa1a92e64",
        "bug_id": "pig_69",
        "file": [
            {
                "sha": "e59239caf1aa17a8cd0217f612d6f5c160bed6db",
                "filename": "CHANGES.txt",
                "blob_url": "https://github.com/apache/pig/blob/55d6dfb22e00de38b091ff4ecac9bea402bc2ae2/CHANGES.txt",
                "raw_url": "https://github.com/apache/pig/raw/55d6dfb22e00de38b091ff4ecac9bea402bc2ae2/CHANGES.txt",
                "status": "modified",
                "changes": 2,
                "additions": 2,
                "contents_url": "https://api.github.com/repos/apache/pig/contents/CHANGES.txt?ref=55d6dfb22e00de38b091ff4ecac9bea402bc2ae2",
                "patch": "@@ -197,6 +197,8 @@ PIG-1309: Map-side Cogroup (ashutoshc)\n \n BUG FIXES\n \n+PIG-1596: NPE's thrown when attempting to load hbase columns containing null values (zjffdu)\n+\n PIG-1597: Development snapshot jar no longer picked up by bin/pig (dvryaboy)\n \n PIG-1599: pig gives generic message for few cases (nrai via rding)",
                "deletions": 0
            },
            {
                "sha": "1b4e5a28ffa6f23f3e08911203c4729b86dda88f",
                "filename": "src/org/apache/pig/backend/hadoop/hbase/HBaseStorage.java",
                "blob_url": "https://github.com/apache/pig/blob/55d6dfb22e00de38b091ff4ecac9bea402bc2ae2/src/org/apache/pig/backend/hadoop/hbase/HBaseStorage.java",
                "raw_url": "https://github.com/apache/pig/raw/55d6dfb22e00de38b091ff4ecac9bea402bc2ae2/src/org/apache/pig/backend/hadoop/hbase/HBaseStorage.java",
                "status": "modified",
                "changes": 6,
                "additions": 5,
                "contents_url": "https://api.github.com/repos/apache/pig/contents/src/org/apache/pig/backend/hadoop/hbase/HBaseStorage.java?ref=55d6dfb22e00de38b091ff4ecac9bea402bc2ae2",
                "patch": "@@ -247,7 +247,11 @@ public Tuple getNext() throws IOException {\n                     startIndex++;\n                 }\n                 for (int i=0;i<columnList_.size();++i){\n-                    tuple.set(i+startIndex, new DataByteArray(result.getValue(columnList_.get(i))));\n+                \tbyte[] cell=result.getValue(columnList_.get(i));\n+                \tif (cell!=null)\n+                \t    tuple.set(i+startIndex, new DataByteArray(cell));\n+                \telse\n+                \t    tuple.set(i+startIndex, null);\n                 }\n                 return tuple;\n             }",
                "deletions": 1
            },
            {
                "sha": "d8f5f6e5bb4a197d77d82815850b1b3f16df7549",
                "filename": "test/org/apache/pig/test/TestHBaseStorage.java",
                "blob_url": "https://github.com/apache/pig/blob/55d6dfb22e00de38b091ff4ecac9bea402bc2ae2/test/org/apache/pig/test/TestHBaseStorage.java",
                "raw_url": "https://github.com/apache/pig/raw/55d6dfb22e00de38b091ff4ecac9bea402bc2ae2/test/org/apache/pig/test/TestHBaseStorage.java",
                "status": "modified",
                "changes": 7,
                "additions": 4,
                "contents_url": "https://api.github.com/repos/apache/pig/contents/test/org/apache/pig/test/TestHBaseStorage.java?ref=55d6dfb22e00de38b091ff4ecac9bea402bc2ae2",
                "patch": "@@ -171,8 +171,8 @@ public void testLoadFromHBase() throws IOException {\n \t\tprepareTable(TESTTABLE_1, true, DataFormat.UTF8PlainText);\n \t\tpig.registerQuery(\"a = load 'hbase://\" + TESTTABLE_1 + \"' using \"\n \t\t\t\t+ \"org.apache.pig.backend.hadoop.hbase.HBaseStorage('\"\n-\t\t\t\t+ TESTCOLUMN_A + \" \" + TESTCOLUMN_B + \" \" + TESTCOLUMN_C\n-\t\t\t\t+ \"') as (col_a, col_b, col_c);\");\n+\t\t\t\t+ TESTCOLUMN_A + \" \" + TESTCOLUMN_B + \" \" + TESTCOLUMN_C +\" pig:col_d\"\n+\t\t\t\t+ \"') as (col_a, col_b, col_c, col_d);\");\n \t\tIterator<Tuple> it = pig.openIterator(\"a\");\n \t\tint count = 0;\n \t\tLOG.info(\"LoadFromHBase Starting\");\n@@ -182,10 +182,11 @@ public void testLoadFromHBase() throws IOException {\n \t\t\tString col_a = ((DataByteArray) t.get(0)).toString();\n \t\t\tString col_b = ((DataByteArray) t.get(1)).toString();\n \t\t\tString col_c = ((DataByteArray) t.get(2)).toString();\n-\n+\t\t\tObject col_d = t.get(3);       // empty cell\n \t\t\tAssert.assertEquals(count, Integer.parseInt(col_a));\n \t\t\tAssert.assertEquals(count + 0.0, Double.parseDouble(col_b), 1e-6);\n \t\t\tAssert.assertEquals(\"Text_\" + count, col_c);\n+\t\t\tAssert.assertNull(col_d);\n \t\t\tcount++;\n \t\t}\n \t\tAssert.assertEquals(TEST_ROW_COUNT, count);",
                "deletions": 3
            }
        ]
    },
    {
        "repo": "pig",
        "message": "PIG-1597: NPEs thrown when attempting to load hbase columns containing null values\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/pig/trunk@992677 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/pig/commit/5b68bfe494ed42a9f6e1056605dd65f0ae0c06b8",
        "parent": "https://github.com/apache/pig/commit/1bf236617370c8bd95277261eb2f38ffe2639e5a",
        "bug_id": "pig_70",
        "file": [
            {
                "sha": "0a82df22dc789bb98fa33795e91fa90c1f9e2a8a",
                "filename": "CHANGES.txt",
                "blob_url": "https://github.com/apache/pig/blob/5b68bfe494ed42a9f6e1056605dd65f0ae0c06b8/CHANGES.txt",
                "raw_url": "https://github.com/apache/pig/raw/5b68bfe494ed42a9f6e1056605dd65f0ae0c06b8/CHANGES.txt",
                "status": "modified",
                "changes": 2,
                "additions": 2,
                "contents_url": "https://api.github.com/repos/apache/pig/contents/CHANGES.txt?ref=5b68bfe494ed42a9f6e1056605dd65f0ae0c06b8",
                "patch": "@@ -197,6 +197,8 @@ PIG-1309: Map-side Cogroup (ashutoshc)\n \n BUG FIXES\n \n+PIG-1597: NPE's thrown when attempting to load hbase columns containing null values (dvryaboy)\n+\n PIG-1599: pig gives generic message for few cases (nrai via rding)\n \n PIG-1595: casting relation to scalar- problem with handling of data from non PigStorage loaders (thejas)",
                "deletions": 0
            },
            {
                "sha": "ffb155c3d21d7c7cb0f85914b866239141388500",
                "filename": "bin/pig",
                "blob_url": "https://github.com/apache/pig/blob/5b68bfe494ed42a9f6e1056605dd65f0ae0c06b8/bin/pig",
                "raw_url": "https://github.com/apache/pig/raw/5b68bfe494ed42a9f6e1056605dd65f0ae0c06b8/bin/pig",
                "status": "modified",
                "changes": 2,
                "additions": 1,
                "contents_url": "https://api.github.com/repos/apache/pig/contents/bin/pig?ref=5b68bfe494ed42a9f6e1056605dd65f0ae0c06b8",
                "patch": "@@ -131,7 +131,7 @@ for f in $PIG_HOME/pig-*-core.jar; do\n done\n \n # during development pig jar might be in build\n-for f in $PIG_HOME/build/pig-*-dev.jar; do\n+for f in $PIG_HOME/build/pig-*-SNAPSHOT.jar; do\n     CLASSPATH=${CLASSPATH}:$f;\n done\n ",
                "deletions": 1
            }
        ]
    },
    {
        "repo": "pig",
        "message": "PIG-1366: PigStorage's pushProjection implementation results in NPE under certain data conditions (pradeepkth)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/pig/trunk@932144 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/pig/commit/0b151edc7d75955c1e855cf5a4ef103b5b9bed0b",
        "parent": "https://github.com/apache/pig/commit/afb3e3dba276219b70c4bfe3657fecd8408a2253",
        "bug_id": "pig_71",
        "file": [
            {
                "sha": "65cdc4e1b4b077c66a5de982a765cedf9c449f58",
                "filename": "CHANGES.txt",
                "blob_url": "https://github.com/apache/pig/blob/0b151edc7d75955c1e855cf5a4ef103b5b9bed0b/CHANGES.txt",
                "raw_url": "https://github.com/apache/pig/raw/0b151edc7d75955c1e855cf5a4ef103b5b9bed0b/CHANGES.txt",
                "status": "modified",
                "changes": 3,
                "additions": 3,
                "contents_url": "https://api.github.com/repos/apache/pig/contents/CHANGES.txt?ref=0b151edc7d75955c1e855cf5a4ef103b5b9bed0b",
                "patch": "@@ -39,6 +39,9 @@ PIG-1309: Map-side Cogroup (ashutoshc)\n \n BUG FIXES\n \n+PIG-1366: PigStorage's pushProjection implementation results in NPE under\n+certain data conditions (pradeepkth)\n+\n PIG-1365: WrappedIOException is missing from Pig.jar (pradeepkth)\n \n PIG-1313: PigServer leaks memory over time (billgraham via daijy)",
                "deletions": 0
            },
            {
                "sha": "de877f55ecfab3b0de9fa955bcc9bb5d304989e8",
                "filename": "src/org/apache/pig/builtin/PigStorage.java",
                "blob_url": "https://github.com/apache/pig/blob/0b151edc7d75955c1e855cf5a4ef103b5b9bed0b/src/org/apache/pig/builtin/PigStorage.java",
                "raw_url": "https://github.com/apache/pig/raw/0b151edc7d75955c1e855cf5a4ef103b5b9bed0b/src/org/apache/pig/builtin/PigStorage.java",
                "status": "modified",
                "changes": 6,
                "additions": 1,
                "contents_url": "https://api.github.com/repos/apache/pig/contents/src/org/apache/pig/builtin/PigStorage.java?ref=0b151edc7d75955c1e855cf5a4ef103b5b9bed0b",
                "patch": "@@ -97,6 +97,7 @@ public PigStorage(String delimiter) {\n \n     @Override\n     public Tuple getNext() throws IOException {\n+        mProtoTuple = new ArrayList<Object>();\n         if (!mRequiredColumnsInitialized) {\n             if (signature!=null) {\n                 Properties p = UDFContext.getUDFContext().getUDFProperties(this.getClass());\n@@ -127,7 +128,6 @@ public Tuple getNext() throws IOException {\n                 readField(buf, start, len);\n             }\n             Tuple t =  mTupleFactory.newTupleNoCopy(mProtoTuple);\n-            mProtoTuple = null;\n             return t;\n         } catch (InterruptedException e) {\n             int errCode = 6018;\n@@ -171,10 +171,6 @@ public void putNext(Tuple f) throws IOException {\n     }\n \n     private void readField(byte[] buf, int start, int end) {\n-        if (mProtoTuple == null) {\n-            mProtoTuple = new ArrayList<Object>();\n-        }\n-\n         if (start == end) {\n             // NULL value\n             mProtoTuple.add(null);",
                "deletions": 5
            },
            {
                "sha": "356b082d8aa0bee9ef02022c664b311990f91ef4",
                "filename": "test/org/apache/pig/test/TestPigStorage.java",
                "blob_url": "https://github.com/apache/pig/blob/0b151edc7d75955c1e855cf5a4ef103b5b9bed0b/test/org/apache/pig/test/TestPigStorage.java",
                "raw_url": "https://github.com/apache/pig/raw/0b151edc7d75955c1e855cf5a4ef103b5b9bed0b/test/org/apache/pig/test/TestPigStorage.java",
                "status": "modified",
                "changes": 66,
                "additions": 47,
                "contents_url": "https://api.github.com/repos/apache/pig/contents/test/org/apache/pig/test/TestPigStorage.java?ref=0b151edc7d75955c1e855cf5a4ef103b5b9bed0b",
                "patch": "@@ -26,46 +26,47 @@\n import java.io.IOException;\n import java.io.PrintWriter;\n import java.util.Iterator;\n+import java.util.Properties;\n+import java.util.Map.Entry;\n \n import junit.framework.Assert;\n \n import org.apache.commons.logging.Log;\n import org.apache.commons.logging.LogFactory;\n+import org.apache.pig.ExecType;\n import org.apache.pig.PigServer;\n import org.apache.pig.backend.executionengine.ExecException;\n+import org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.POProject;\n import org.apache.pig.data.Tuple;\n-import org.junit.AfterClass;\n-import org.junit.BeforeClass;\n+import org.apache.pig.impl.io.FileLocalizer;\n+import org.junit.Before;\n import org.junit.Test;\n \n-public class TestPigStorage {\n+public class TestPigStorage  {\n         \n     protected final Log log = LogFactory.getLog(getClass());\n     \n     private static MiniCluster cluster = MiniCluster.buildCluster();\n-    private static PigServer pigServer = null;\n     \n-    \n-    @BeforeClass\n-    public static void setup() {\n-        try {\n-            pigServer = new PigServer(MAPREDUCE, cluster.getProperties());\n-        } catch (ExecException e) {\n-            e.printStackTrace();\n-            Assert.fail();\n-        }\n-    }\n-    \n-    @AfterClass\n-    public static void shutdown() {\n-        pigServer.shutdown();\n+    @Before\n+    public void setup() {\n+        // some tests are in map-reduce mode and some in local - so before\n+        // each test, we will de-initialize FileLocalizer so that temp files\n+        // are created correctly depending on the ExecType in the test.\n+        FileLocalizer.setInitialized(false);\n     }\n     \n     @Test\n-    public void testBlockBoundary() {\n+    public void testBlockBoundary() throws ExecException {\n         \n         // This tests PigStorage loader with records exectly \n         // on the boundary of the file blocks.\n+        Properties props = new Properties();\n+        for (Entry<Object, Object> entry : cluster.getProperties().entrySet()) {\n+            props.put(entry.getKey(), entry.getValue());\n+        }\n+        props.setProperty(\"mapred.max.split.size\", \"20\");\n+        PigServer pigServer = new PigServer(MAPREDUCE, props);\n         String[] inputs = {\n                 \"abcdefgh1\", \"abcdefgh2\", \"abcdefgh3\", \n                 \"abcdefgh4\", \"abcdefgh5\", \"abcdefgh6\",\n@@ -115,5 +116,32 @@ public void testBlockBoundary() {\n             }\n         }\n     } \n+    \n+    /**\n+     * Test to verify that PigStorage works fine in the following scenario:\n+     * The column prune optimization determines only columns 2 and 3 are needed\n+     * and there are records in the data which have only 1 column (malformed data).\n+     * In this case, PigStorage should return an empty tuple to represent columns\n+     * 2 and 3 and {@link POProject} would handle catching any \n+     * {@link IndexOutOfBoundsException} resulting from accessing a field in the\n+     * tuple and substitute a null. \n+     */\n+    @Test\n+    public void testPruneColumnsWithMissingFields() throws IOException {\n+        String inputFileName = \"TestPigStorage-testPruneColumnsWithMissingFields-input.txt\";\n+        Util.createLocalInputFile(\n+                inputFileName, \n+                new String[] {\"1\\t2\\t3\", \"4\", \"5\\t6\\t7\"});\n+        PigServer ps = new PigServer(ExecType.LOCAL);\n+        String script = \"a = load '\" + inputFileName + \"' as (i:int, j:int, k:int);\" +\n+        \t\t\"b = foreach a generate j, k;\";\n+        Util.registerMultiLineQuery(ps, script);\n+        Iterator<Tuple> it = ps.openIterator(\"b\");\n+        assertEquals(Util.createTuple(new Integer[] { 2, 3}), it.next());\n+        assertEquals(Util.createTuple(new Integer[] { null, null}), it.next());\n+        assertEquals(Util.createTuple(new Integer[] { 6, 7}), it.next());\n+        assertFalse(it.hasNext());\n+                \n+    }\n \n }",
                "deletions": 19
            }
        ]
    },
    {
        "repo": "pig",
        "message": "PIG-942: Maps are not implicitly casted (fixed a possible NPE from earlier commit for this patch) (pradeepkth)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/pig/trunk@818929 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/pig/commit/c9a54ffd96cdaa937ac70c704225bb2df660007e",
        "parent": "https://github.com/apache/pig/commit/60a14047423b00e9a3aa21ceb4b9e872ed5b9d9a",
        "bug_id": "pig_72",
        "file": [
            {
                "sha": "1757078a8b8f87358e73d53af144749559b606f9",
                "filename": "src/org/apache/pig/impl/logicalLayer/LOCast.java",
                "blob_url": "https://github.com/apache/pig/blob/c9a54ffd96cdaa937ac70c704225bb2df660007e/src/org/apache/pig/impl/logicalLayer/LOCast.java",
                "raw_url": "https://github.com/apache/pig/raw/c9a54ffd96cdaa937ac70c704225bb2df660007e/src/org/apache/pig/impl/logicalLayer/LOCast.java",
                "status": "modified",
                "changes": 4,
                "additions": 3,
                "contents_url": "https://api.github.com/repos/apache/pig/contents/src/org/apache/pig/impl/logicalLayer/LOCast.java?ref=c9a54ffd96cdaa937ac70c704225bb2df660007e",
                "patch": "@@ -70,7 +70,9 @@ public Schema getSchema() {\n     public Schema.FieldSchema getFieldSchema() throws FrontendException {\n         if(!mIsFieldSchemaComputed) {\n             mFieldSchema = new Schema.FieldSchema(null, mType);\n-            mFieldSchema.setParent(getExpression().mFieldSchema.canonicalName, getExpression());\n+            Schema.FieldSchema parFs  = getExpression().getFieldSchema();\n+            String canonicalName = (parFs != null ? parFs.canonicalName : null);\n+            mFieldSchema.setParent(canonicalName, getExpression());\n             mIsFieldSchemaComputed = true;\n         }\n         return mFieldSchema;",
                "deletions": 1
            }
        ]
    },
    {
        "repo": "pig",
        "message": "PIG-372 Fix NPE in dump schema when there is no known schema.\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/pig/branches/types@689292 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/pig/commit/0cb76a2ce0253ceb8e64a955164046338071e1a8",
        "parent": "https://github.com/apache/pig/commit/8bd847926aaff022b39826af7e1f0583cd99b6ce",
        "bug_id": "pig_73",
        "file": [
            {
                "sha": "b8f9b6fae28c97b05ae2352f1e2af311183321c4",
                "filename": "src/org/apache/pig/PigServer.java",
                "blob_url": "https://github.com/apache/pig/blob/0cb76a2ce0253ceb8e64a955164046338071e1a8/src/org/apache/pig/PigServer.java",
                "raw_url": "https://github.com/apache/pig/raw/0cb76a2ce0253ceb8e64a955164046338071e1a8/src/org/apache/pig/PigServer.java",
                "status": "modified",
                "changes": 3,
                "additions": 2,
                "contents_url": "https://api.github.com/repos/apache/pig/contents/src/org/apache/pig/PigServer.java?ref=0cb76a2ce0253ceb8e64a955164046338071e1a8",
                "patch": "@@ -287,7 +287,8 @@ public void dumpSchema(String alias) throws IOException{\n                 throw new FrontendException(e.getMessage());\n             }\n             Schema schema = lp.getLeaves().get(0).getSchema();\n-            System.out.println(schema.toString());    \n+            if (schema != null) System.out.println(schema.toString());    \n+            else System.out.println(\"Schema for \" + alias + \" unknown.\");\n         } catch (FrontendException fe) {\n             throw WrappedIOException.wrap(\n                 \"Unable to describe schema for alias \" + alias, fe);",
                "deletions": 1
            }
        ]
    },
    {
        "repo": "pig",
        "message": "PIG-1420: Make CONCAT act on all fields of a tuple, instead of just the first two fields of a tuple (fix NPE)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/pig/trunk@947105 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/pig/commit/8859cef813e1d1ae4e05d789c139936131a65ac3",
        "parent": "https://github.com/apache/pig/commit/fbdf3541e9029bbbd00f43eb2d100c57fccf9091",
        "bug_id": "pig_74",
        "file": [
            {
                "sha": "815479d7d33ee74b09034127389a5360a2b038fa",
                "filename": "src/org/apache/pig/builtin/CONCAT.java",
                "blob_url": "https://github.com/apache/pig/blob/8859cef813e1d1ae4e05d789c139936131a65ac3/src/org/apache/pig/builtin/CONCAT.java",
                "raw_url": "https://github.com/apache/pig/raw/8859cef813e1d1ae4e05d789c139936131a65ac3/src/org/apache/pig/builtin/CONCAT.java",
                "status": "modified",
                "changes": 2,
                "additions": 2,
                "contents_url": "https://api.github.com/repos/apache/pig/contents/src/org/apache/pig/builtin/CONCAT.java?ref=8859cef813e1d1ae4e05d789c139936131a65ac3",
                "patch": "@@ -45,6 +45,8 @@ public DataByteArray exec(Tuple input) throws IOException {\n \n             DataByteArray db = new DataByteArray();\n             for (int i = 0; i < input.size(); i++) {\n+                if (input.get(i)==null)\n+                    return null;\n                 db.append((DataByteArray)(input.get(i)));\n             }\n             return db;",
                "deletions": 0
            },
            {
                "sha": "815e3bf89e22f0a943d891de4c1305bed11bc44b",
                "filename": "src/org/apache/pig/builtin/StringConcat.java",
                "blob_url": "https://github.com/apache/pig/blob/8859cef813e1d1ae4e05d789c139936131a65ac3/src/org/apache/pig/builtin/StringConcat.java",
                "raw_url": "https://github.com/apache/pig/raw/8859cef813e1d1ae4e05d789c139936131a65ac3/src/org/apache/pig/builtin/StringConcat.java",
                "status": "modified",
                "changes": 4,
                "additions": 3,
                "contents_url": "https://api.github.com/repos/apache/pig/contents/src/org/apache/pig/builtin/StringConcat.java?ref=8859cef813e1d1ae4e05d789c139936131a65ac3",
                "patch": "@@ -39,7 +39,9 @@ public String exec(Tuple input) throws IOException {\n \n           StringBuilder sb = new StringBuilder();\n           for (int i = 0; i < input.size(); i++){\n-            sb.append(String.valueOf(input.get(i)));\n+              if (input.get(i)==null)\n+                  return null;\n+              sb.append(String.valueOf(input.get(i)));\n           }\n           return sb.toString();\n         } catch (ExecException exp) {",
                "deletions": 1
            }
        ]
    }
]