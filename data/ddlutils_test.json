{
    "ddlutils_10c4683": {
        "repo": "ddlutils",
        "message": "Fix for DDLUTILS-204: NullPointerException in PlatformImplBase\n\ngit-svn-id: https://svn.apache.org/repos/asf/db/ddlutils/trunk@668046 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/ddlutils/commit/10c468338f1bd3c37e0ae04a6e5f100bd061ed31",
        "parent": "https://github.com/apache/ddlutils/commit/849bdbd18d8637100132fe43be32207da42b7d28",
        "bug_id": "ddlutils_10c4683",
        "file": [
            {
                "sha": "ca67ff3f4031ae65e80cda94f1e019635d59ba36",
                "filename": "src/main/java/org/apache/ddlutils/platform/PlatformImplBase.java",
                "blob_url": "https://github.com/apache/ddlutils/blob/10c468338f1bd3c37e0ae04a6e5f100bd061ed31/src/main/java/org/apache/ddlutils/platform/PlatformImplBase.java",
                "raw_url": "https://github.com/apache/ddlutils/raw/10c468338f1bd3c37e0ae04a6e5f100bd061ed31/src/main/java/org/apache/ddlutils/platform/PlatformImplBase.java",
                "status": "modified",
                "changes": 2,
                "additions": 1,
                "contents_url": "https://api.github.com/repos/apache/ddlutils/contents/src/main/java/org/apache/ddlutils/platform/PlatformImplBase.java?ref=10c468338f1bd3c37e0ae04a6e5f100bd061ed31",
                "patch": "@@ -1457,7 +1457,7 @@ public void processChange(Database            currentModel,\n         else\r\n         {\r\n             getSqlBuilder().dropTable(changedTable);\r\n-            getSqlBuilder().createTable(currentModel, targetTable, params.getParametersFor(targetTable));\r\n+            getSqlBuilder().createTable(currentModel, targetTable, parameters);\r\n         }\r\n \r\n         change.apply(currentModel, isDelimitedIdentifierModeOn());\r",
                "deletions": 1
            }
        ],
        "patched_files": [
            "PlatformImplBase.java"
        ],
        "unit_tests": [
            "TestPlatformImplBase.java"
        ]
    },
    "ddlutils_7c30513": {
        "repo": "ddlutils",
        "message": "Fix and test for DDLUTILS-227: NullPointerException in ModelBasedResultSetIterator\n\ngit-svn-id: https://svn.apache.org/repos/asf/db/ddlutils/trunk@711686 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/ddlutils/commit/7c30513e4be87a6077b67b18d1399b67ab9ab16b",
        "parent": "https://github.com/apache/ddlutils/commit/b37209b48880e5977d25ed59f38b0fe10b7abec7",
        "bug_id": "ddlutils_7c30513",
        "file": [
            {
                "sha": "0ec97bcf71edfe0cd25f70732bbaea38108e6d84",
                "filename": "src/main/java/org/apache/ddlutils/platform/ModelBasedResultSetIterator.java",
                "blob_url": "https://github.com/apache/ddlutils/blob/7c30513e4be87a6077b67b18d1399b67ab9ab16b/src/main/java/org/apache/ddlutils/platform/ModelBasedResultSetIterator.java",
                "raw_url": "https://github.com/apache/ddlutils/raw/7c30513e4be87a6077b67b18d1399b67ab9ab16b/src/main/java/org/apache/ddlutils/platform/ModelBasedResultSetIterator.java",
                "status": "modified",
                "changes": 2,
                "additions": 1,
                "contents_url": "https://api.github.com/repos/apache/ddlutils/contents/src/main/java/org/apache/ddlutils/platform/ModelBasedResultSetIterator.java?ref=7c30513e4be87a6077b67b18d1399b67ab9ab16b",
                "patch": "@@ -135,7 +135,7 @@ private void initFromMetaData(Database model) throws SQLException\n                 // the JDBC driver gave us enough meta data info\r\n                 table = model.findTable(tableOfColumn, _caseSensitive);\r\n             }\r\n-            else\r\n+            if (table == null)\r\n             {\r\n                 // not enough info in the meta data of the result set, lets try the\r\n                 // user-supplied query hints\r",
                "deletions": 1
            },
            {
                "sha": "c19e3ffb4ee34e0a7ccf89e3cc802f787a8796ef",
                "filename": "src/test/java/org/apache/ddlutils/io/TestMisc.java",
                "blob_url": "https://github.com/apache/ddlutils/blob/7c30513e4be87a6077b67b18d1399b67ab9ab16b/src/test/java/org/apache/ddlutils/io/TestMisc.java",
                "raw_url": "https://github.com/apache/ddlutils/raw/7c30513e4be87a6077b67b18d1399b67ab9ab16b/src/test/java/org/apache/ddlutils/io/TestMisc.java",
                "status": "modified",
                "changes": 73,
                "additions": 73,
                "contents_url": "https://api.github.com/repos/apache/ddlutils/contents/src/test/java/org/apache/ddlutils/io/TestMisc.java?ref=7c30513e4be87a6077b67b18d1399b67ab9ab16b",
                "patch": "@@ -34,7 +34,12 @@\n import org.apache.commons.beanutils.DynaBean;\r\n import org.apache.ddlutils.TestAgainstLiveDatabaseBase;\r\n import org.apache.ddlutils.model.Database;\r\n+import org.apache.ddlutils.model.Table;\r\n+import org.apache.ddlutils.platform.derby.DerbyPlatform;\r\n import org.apache.ddlutils.platform.hsqldb.HsqlDbPlatform;\r\n+import org.apache.ddlutils.platform.mysql.MySql50Platform;\r\n+import org.apache.ddlutils.platform.mysql.MySqlPlatform;\r\n+import org.apache.ddlutils.platform.postgresql.PostgreSqlPlatform;\r\n import org.apache.ddlutils.platform.sybase.SybasePlatform;\r\n import org.dom4j.Document;\r\n import org.dom4j.Element;\r\n@@ -1215,4 +1220,72 @@ public void testDdlUtils214() throws Exception\n         assertEquals(new Integer(2), beans2.get(0), \"pk1\");\r\n         assertEquals((Object)\"bar\",  beans2.get(0), \"pk2\");\r\n     }\r\n+\r\n+    /**\r\n+     * Test for DDLUTILS-227.\r\n+     */\r\n+    public void testDdlUtils227() throws Exception\r\n+    {\r\n+        final String modelXml = \r\n+            \"<?xml version='1.0' encoding='ISO-8859-1'?>\\n\"+\r\n+            \"<database xmlns='\" + DatabaseIO.DDLUTILS_NAMESPACE + \"' name='roundtriptest'>\\n\"+\r\n+            \"  <table name='Roundtrip'>\\n\"+\r\n+            \"    <column name='Pk' type='INTEGER' primaryKey='true' required='true'/>\\n\"+\r\n+            \"    <column name='Avalue' type='VARCHAR'/>\\n\"+\r\n+            \"  </table>\\n\"+\r\n+            \"</database>\";\r\n+\r\n+        createDatabase(modelXml);\r\n+\r\n+        Database readModel = readModelFromDatabase(\"roundtriptest\");\r\n+        \r\n+        assertEquals(getAdjustedModel(),\r\n+                     readModel);\r\n+\r\n+        insertRow(\"Roundtrip\", new Object[] { new Integer(1), \"foo\" });\r\n+\r\n+        List beans = getRows(\"Roundtrip\");\r\n+\r\n+        assertEquals(1, beans.size());\r\n+        assertEquals(new Integer(1), beans.get(0), \"Pk\");\r\n+        assertEquals((Object)\"foo\",  beans.get(0), \"Avalue\");\r\n+\r\n+        Table        table = getModel().findTable(\"Roundtrip\", getPlatform().isDelimitedIdentifierModeOn());\r\n+        StringBuffer query = new StringBuffer();\r\n+\r\n+        query.append(\"SELECT * FROM (SELECT * FROM \");\r\n+        if (getPlatform().isDelimitedIdentifierModeOn())\r\n+        {\r\n+            query.append(getPlatformInfo().getDelimiterToken());\r\n+        }\r\n+        query.append(table.getName());\r\n+        if (getPlatform().isDelimitedIdentifierModeOn())\r\n+        {\r\n+            query.append(getPlatformInfo().getDelimiterToken());\r\n+        }\r\n+        query.append(\")\");\r\n+        // Some JDBC drivers do not allow us to perform the query without an explicit alias \r\n+        if (MySqlPlatform.DATABASENAME.equals(getPlatform().getName()) ||\r\n+            MySql50Platform.DATABASENAME.equals(getPlatform().getName()) ||\r\n+            PostgreSqlPlatform.DATABASENAME.equals(getPlatform().getName()) ||\r\n+            DerbyPlatform.DATABASENAME.equals(getPlatform().getName()))\r\n+        {\r\n+            query.append(\" AS \");\r\n+            if (getPlatform().isDelimitedIdentifierModeOn())\r\n+            {\r\n+                query.append(getPlatformInfo().getDelimiterToken());\r\n+            }\r\n+            query.append(table.getName());\r\n+            if (getPlatform().isDelimitedIdentifierModeOn())\r\n+            {\r\n+                query.append(getPlatformInfo().getDelimiterToken());\r\n+            }\r\n+        }\r\n+\r\n+        beans = getPlatform().fetch(getModel(), query.toString(), new Table[] { table });\r\n+\r\n+        assertEquals(1, beans.size());\r\n+        assertEquals(new Integer(1), beans.get(0), \"Pk\");\r\n+        assertEquals((Object)\"foo\",  beans.get(0), \"Avalue\");\r\n+    }\r\n }\r",
                "deletions": 0
            }
        ],
        "patched_files": [
            "ModelBasedResultSetIterator.java"
        ],
        "unit_tests": [
            "TestMisc.java"
        ]
    }
}