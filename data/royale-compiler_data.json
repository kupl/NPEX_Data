[
    {
        "repo": "royale-compiler",
        "message": "- Update to avoid an NPE in case of a not provided FLASHPLAYER_DEBUGGER environment variable",
        "commit": "https://github.com/apache/royale-compiler/commit/7bb1e37246e06b52d16991afe4b63ee133c442e5",
        "parent": "https://github.com/apache/royale-compiler/commit/02bd0aa8afe6f5ec25ed837bdb937fb98ec7611d",
        "bug_id": "royale-compiler_1",
        "file": [
            {
                "sha": "dde7d020e8d92a6e0161763b1c032024e4499a22",
                "filename": "src/main/script/prerequisiteCheck.groovy",
                "blob_url": "https://github.com/apache/royale-compiler/blob/7bb1e37246e06b52d16991afe4b63ee133c442e5/src/main/script/prerequisiteCheck.groovy",
                "raw_url": "https://github.com/apache/royale-compiler/raw/7bb1e37246e06b52d16991afe4b63ee133c442e5/src/main/script/prerequisiteCheck.groovy",
                "status": "modified",
                "changes": 9,
                "additions": 5,
                "contents_url": "https://api.github.com/repos/apache/royale-compiler/contents/src/main/script/prerequisiteCheck.groovy?ref=7bb1e37246e06b52d16991afe4b63ee133c442e5",
                "patch": "@@ -32,11 +32,12 @@ Check if the Flash player executable is specified and available at the specified\n def detectFlashPlayer() {\n     print \"Detecting FlashPlayer Debugger:  \"\n     String flashplayerDebuggerPath = System.getenv(\"FLASHPLAYER_DEBUGGER\")\n-    // If the property is specified with surrounding double-quotes, remove them.\n-    if(flashplayerDebuggerPath.startsWith(\"\\\"\") && flashplayerDebuggerPath.endsWith(\"\\\"\")) {\n-        flashplayerDebuggerPath = flashplayerDebuggerPath.substring(1, flashplayerDebuggerPath.length() - 1)\n-    }\n     if(flashplayerDebuggerPath != null) {\n+        // If the property is specified with surrounding double-quotes, remove them.\n+        if(flashplayerDebuggerPath.startsWith(\"\\\"\") && flashplayerDebuggerPath.endsWith(\"\\\"\")) {\n+            flashplayerDebuggerPath = flashplayerDebuggerPath.substring(1, flashplayerDebuggerPath.length() - 1)\n+        }\n+\n         File flashplayerDebuggerFile = new File(flashplayerDebuggerPath)\n         if(flashplayerDebuggerFile.exists()) {\n             if(!flashplayerDebuggerFile.isFile()) {",
                "deletions": 4
            }
        ]
    },
    {
        "repo": "royale-compiler",
        "message": "Avoid NullPointerException on dynamic objects\n\nFixes #69",
        "commit": "https://github.com/apache/royale-compiler/commit/2e8c9a5f46b5dc7f121ee1746d206689338c4fc5",
        "parent": "https://github.com/apache/royale-compiler/commit/ba4bd15032d4592a4cb1e1c9e6cff3844f4e447d",
        "bug_id": "royale-compiler_2",
        "file": [
            {
                "sha": "90dbd7b8bad8ff5929987841bccc3722bc10146f",
                "filename": "compiler-jx/src/main/java/org/apache/royale/compiler/internal/codegen/js/jx/VarDeclarationEmitter.java",
                "blob_url": "https://github.com/apache/royale-compiler/blob/2e8c9a5f46b5dc7f121ee1746d206689338c4fc5/compiler-jx/src/main/java/org/apache/royale/compiler/internal/codegen/js/jx/VarDeclarationEmitter.java",
                "raw_url": "https://github.com/apache/royale-compiler/raw/2e8c9a5f46b5dc7f121ee1746d206689338c4fc5/compiler-jx/src/main/java/org/apache/royale/compiler/internal/codegen/js/jx/VarDeclarationEmitter.java",
                "status": "modified",
                "changes": 2,
                "additions": 1,
                "contents_url": "https://api.github.com/repos/apache/royale-compiler/contents/compiler-jx/src/main/java/org/apache/royale/compiler/internal/codegen/js/jx/VarDeclarationEmitter.java?ref=2e8c9a5f46b5dc7f121ee1746d206689338c4fc5",
                "patch": "@@ -154,7 +154,7 @@ else if (avnode.getNodeID() == ASTNodeID.ArrayIndexExpressionID)\n         \t\t\tIDefinition leftDef = dyn.getLeftOperandNode().resolveType(getProject());\n         \t\t\tIDefinition rightDef = dyn.getRightOperandNode().resolveType(getProject());\n         \t\t\t// numeric indexing?\n-        \t\t\tif (rightDef.getQualifiedName().equals(IASLanguageConstants.Number))\n+        \t\t\tif (leftDef != null && rightDef.getQualifiedName().equals(IASLanguageConstants.Number))\n         \t\t\t{\n         \t\t\t\tIMetaTag[] metas = leftDef.getAllMetaTags();\n         \t\t\t\tfor (IMetaTag meta : metas)",
                "deletions": 1
            }
        ]
    },
    {
        "repo": "royale-compiler",
        "message": "GoogDepsWriter: another NullPointerException fix",
        "commit": "https://github.com/apache/royale-compiler/commit/e70161eccf4e576287805accf87b182b12fcd8e5",
        "parent": "https://github.com/apache/royale-compiler/commit/0b28687e40304eaba3185331a170225c16307b2e",
        "bug_id": "royale-compiler_3",
        "file": [
            {
                "sha": "2480a3469d636d51b7c338dd3a3ea61a4385fe96",
                "filename": "compiler-jx/src/main/java/org/apache/royale/compiler/internal/graph/GoogDepsWriter.java",
                "blob_url": "https://github.com/apache/royale-compiler/blob/e70161eccf4e576287805accf87b182b12fcd8e5/compiler-jx/src/main/java/org/apache/royale/compiler/internal/graph/GoogDepsWriter.java",
                "raw_url": "https://github.com/apache/royale-compiler/raw/e70161eccf4e576287805accf87b182b12fcd8e5/compiler-jx/src/main/java/org/apache/royale/compiler/internal/graph/GoogDepsWriter.java",
                "status": "modified",
                "changes": 6,
                "additions": 6,
                "contents_url": "https://api.github.com/repos/apache/royale-compiler/contents/compiler-jx/src/main/java/org/apache/royale/compiler/internal/graph/GoogDepsWriter.java?ref=e70161eccf4e576287805accf87b182b12fcd8e5",
                "patch": "@@ -274,7 +274,13 @@ private boolean buildDB()\n \t\t\t\tif (isGoogClass(name)) continue;\n \t\t\t\tGoogDep dep = depMap.get(name);\n \t\t\t\tif (dep == null)\n+\t\t\t\t{\n \t\t\t\t\tSystem.out.println(\"No GoogDep for \" + name);\n+\t\t\t\t\t//added this to prevent a NullPointerException when the\n+\t\t\t\t\t//GoogDep is null. -JT\n+\t\t\t\t\tproblems.add(new FileNotFoundProblem(name));\n+\t\t\t\t\tcontinue;\n+\t\t\t\t}\n \t\t\t\tdepsInOrder.add(dep);\n \t\t\t}\n \t\t\treturn depsInOrder;",
                "deletions": 0
            }
        ]
    },
    {
        "repo": "royale-compiler",
        "message": "ModuleExample was failing due to NPE",
        "commit": "https://github.com/apache/royale-compiler/commit/334901479c20e26c0bcec54a67b98272db5c65d9",
        "parent": "https://github.com/apache/royale-compiler/commit/bd326b4231b5a7b4880f9a9d8ee0622eaf292206",
        "bug_id": "royale-compiler_4",
        "file": [
            {
                "sha": "5437c7049d16e85ec09c0fa6d6853d32b230af4c",
                "filename": "compiler-jx/src/main/java/org/apache/royale/compiler/utils/JSClosureCompilerWrapper.java",
                "blob_url": "https://github.com/apache/royale-compiler/blob/334901479c20e26c0bcec54a67b98272db5c65d9/compiler-jx/src/main/java/org/apache/royale/compiler/utils/JSClosureCompilerWrapper.java",
                "raw_url": "https://github.com/apache/royale-compiler/raw/334901479c20e26c0bcec54a67b98272db5c65d9/compiler-jx/src/main/java/org/apache/royale/compiler/utils/JSClosureCompilerWrapper.java",
                "status": "modified",
                "changes": 30,
                "additions": 18,
                "contents_url": "https://api.github.com/repos/apache/royale-compiler/contents/compiler-jx/src/main/java/org/apache/royale/compiler/utils/JSClosureCompilerWrapper.java?ref=334901479c20e26c0bcec54a67b98272db5c65d9",
                "patch": "@@ -177,24 +177,30 @@ public void compile()\n         {\n         \tFile outputFile = new File(outputFolder, variableMapOutputPath);\n         \tVariableMap map = CompilerMapFetcher.getVariableMap(compiler_);\n-        \ttry {\n-\t\t\t\tmap.save(outputFile.getAbsolutePath());\n-\t\t\t} catch (IOException e) {\n-\t\t\t\t// TODO Auto-generated catch block\n-\t\t\t\te.printStackTrace();\n-\t\t\t}\n+        \tif (map != null)\n+        \t{\n+\t        \ttry {\n+\t\t\t\t\tmap.save(outputFile.getAbsolutePath());\n+\t\t\t\t} catch (IOException e) {\n+\t\t\t\t\t// TODO Auto-generated catch block\n+\t\t\t\t\te.printStackTrace();\n+\t\t\t\t}\n+        \t}\n         }\n         \n         if (propertyMapOutputPath != null)\n         {\n         \tFile outputFile = new File(outputFolder, propertyMapOutputPath);\n         \tVariableMap map = CompilerMapFetcher.getPropertyMap(compiler_);\n-        \ttry {\n-\t\t\t\tmap.save(outputFile.getAbsolutePath());\n-\t\t\t} catch (IOException e) {\n-\t\t\t\t// TODO Auto-generated catch block\n-\t\t\t\te.printStackTrace();\n-\t\t\t}\n+        \tif (map != null)\n+        \t{\n+\t        \ttry {\n+\t\t\t\t\tmap.save(outputFile.getAbsolutePath());\n+\t\t\t\t} catch (IOException e) {\n+\t\t\t\t\t// TODO Auto-generated catch block\n+\t\t\t\t\te.printStackTrace();\n+\t\t\t\t}\n+        \t}\n         }\n         \n         /*",
                "deletions": 12
            }
        ]
    },
    {
        "repo": "royale-compiler",
        "message": "fix NPE on write-only properties",
        "commit": "https://github.com/apache/royale-compiler/commit/eaf1e32df22752e00ddbc7d758835ec6f325b25d",
        "parent": "https://github.com/apache/royale-compiler/commit/87e4ffcd97f555c5a482ec993b3ce68ec057503f",
        "bug_id": "royale-compiler_5",
        "file": [
            {
                "sha": "569d36ee213da4d3cc0a01fe16748f6d4ab6438f",
                "filename": "compiler/src/main/java/org/apache/royale/compiler/internal/tree/mxml/MXMLClassReferenceNodeBase.java",
                "blob_url": "https://github.com/apache/royale-compiler/blob/eaf1e32df22752e00ddbc7d758835ec6f325b25d/compiler/src/main/java/org/apache/royale/compiler/internal/tree/mxml/MXMLClassReferenceNodeBase.java",
                "raw_url": "https://github.com/apache/royale-compiler/raw/eaf1e32df22752e00ddbc7d758835ec6f325b25d/compiler/src/main/java/org/apache/royale/compiler/internal/tree/mxml/MXMLClassReferenceNodeBase.java",
                "status": "modified",
                "changes": 6,
                "additions": 4,
                "contents_url": "https://api.github.com/repos/apache/royale-compiler/contents/compiler/src/main/java/org/apache/royale/compiler/internal/tree/mxml/MXMLClassReferenceNodeBase.java?ref=eaf1e32df22752e00ddbc7d758835ec6f325b25d",
                "patch": "@@ -722,11 +722,13 @@ protected void processChildNonWhitespaceUnit(MXMLTreeBuilder builder, IMXMLTagDa\n     {\n         // Non-whitespace may be the value of a default property.\n         IVariableDefinition defaultPropertyDefinition = getDefaultPropertyDefinition(builder);\n+        IVariableDefinition getterDefinition = (defaultPropertyDefinition instanceof ISetterDefinition) ? \n+        \t\t((ISetterDefinition)defaultPropertyDefinition).resolveCorrespondingAccessor(builder.getProject()) :null;\n         if (defaultPropertyDefinition != null && \n         \t\t(defaultPropertyDefinition.getTypeAsDisplayString().equals(IASLanguageConstants.String) ||\n         \t\t (defaultPropertyDefinition.getMetaTagByName(IMetaAttributeConstants.ATTRIBUTE_RICHTEXTCONTENT) != null) ||\n-        \t\t (defaultPropertyDefinition instanceof ISetterDefinition && \n-        \t\t     ((ISetterDefinition)defaultPropertyDefinition).resolveCorrespondingAccessor(builder.getProject()).getMetaTagByName(IMetaAttributeConstants.ATTRIBUTE_RICHTEXTCONTENT) != null)))\n+        \t\t (getterDefinition != null && \n+        \t\t     (getterDefinition.getMetaTagByName(IMetaAttributeConstants.ATTRIBUTE_RICHTEXTCONTENT) != null))))\n         {\n             MXMLSpecifierNodeBase childNode =\n                     createSpecifierNode(builder, defaultPropertyDefinition.getBaseName());",
                "deletions": 2
            }
        ]
    },
    {
        "repo": "royale-compiler",
        "message": "try to get better error handling for a reported NPE",
        "commit": "https://github.com/apache/royale-compiler/commit/7cbe411589369cf96fd5226225584aae8d1d5ddf",
        "parent": "https://github.com/apache/royale-compiler/commit/743d1bba17bcefc5fea425aeca38c7c1288fdcd7",
        "bug_id": "royale-compiler_6",
        "file": [
            {
                "sha": "9ad5f6d693866a4221b88987da563cc898b181b8",
                "filename": "compiler/src/main/java/org/apache/royale/compiler/internal/as/codegen/MXMLClassDirectiveProcessor.java",
                "blob_url": "https://github.com/apache/royale-compiler/blob/7cbe411589369cf96fd5226225584aae8d1d5ddf/compiler/src/main/java/org/apache/royale/compiler/internal/as/codegen/MXMLClassDirectiveProcessor.java",
                "raw_url": "https://github.com/apache/royale-compiler/raw/7cbe411589369cf96fd5226225584aae8d1d5ddf/compiler/src/main/java/org/apache/royale/compiler/internal/as/codegen/MXMLClassDirectiveProcessor.java",
                "status": "modified",
                "changes": 5,
                "additions": 5,
                "contents_url": "https://api.github.com/repos/apache/royale-compiler/contents/compiler/src/main/java/org/apache/royale/compiler/internal/as/codegen/MXMLClassDirectiveProcessor.java?ref=7cbe411589369cf96fd5226225584aae8d1d5ddf",
                "patch": "@@ -159,6 +159,7 @@\n import org.apache.royale.compiler.internal.tree.as.VariableNode;\n import org.apache.royale.compiler.mxml.IMXMLLanguageConstants;\n import org.apache.royale.compiler.mxml.IMXMLTypeConstants;\n+import org.apache.royale.compiler.problems.AccessUndefinedPropertyProblem;\n import org.apache.royale.compiler.problems.CSSCodeGenProblem;\n import org.apache.royale.compiler.problems.ICompilerProblem;\n import org.apache.royale.compiler.problems.MXMLExecutableStatementsInScriptBlockProblem;\n@@ -3670,6 +3671,10 @@ else if (propertyName.equals(\"beads\"))\n                         \n                         context.stopUsing(IL.PROPERTIES, 1);                        \n                     }\n+                    else if (propDef == null)\n+                    {\n+                    \tgetProblems().add(new AccessUndefinedPropertyProblem(propertyNode, propertyName));\n+                    }\n                     else if (propDef.isPublic())\n                     {\n                         context.startUsing(IL.PROPERTIES);",
                "deletions": 0
            }
        ]
    },
    {
        "repo": "royale-compiler",
        "message": "NPE check",
        "commit": "https://github.com/apache/royale-compiler/commit/8227a4ae40166346fb672c6331bf03de2aade6e7",
        "parent": "https://github.com/apache/royale-compiler/commit/e179daeb2d33793021830ec5529558bd12a3f1bc",
        "bug_id": "royale-compiler_7",
        "file": [
            {
                "sha": "ccad9d69506bbe951f129918f041b820f06b85d2",
                "filename": "compiler/src/main/java/org/apache/royale/compiler/internal/tree/as/IdentifierNode.java",
                "blob_url": "https://github.com/apache/royale-compiler/blob/8227a4ae40166346fb672c6331bf03de2aade6e7/compiler/src/main/java/org/apache/royale/compiler/internal/tree/as/IdentifierNode.java",
                "raw_url": "https://github.com/apache/royale-compiler/raw/8227a4ae40166346fb672c6331bf03de2aade6e7/compiler/src/main/java/org/apache/royale/compiler/internal/tree/as/IdentifierNode.java",
                "status": "modified",
                "changes": 2,
                "additions": 1,
                "contents_url": "https://api.github.com/repos/apache/royale-compiler/contents/compiler/src/main/java/org/apache/royale/compiler/internal/tree/as/IdentifierNode.java?ref=8227a4ae40166346fb672c6331bf03de2aade6e7",
                "patch": "@@ -418,7 +418,7 @@ else if (isMemberRef)\n             }\n         }\n \n-        if (project instanceof RoyaleProject && ((RoyaleProject)project).apiReportFile != null)\n+        if (result != null && project instanceof RoyaleProject && ((RoyaleProject)project).apiReportFile != null)\n         {\n         \tif (isMemberRef())\n         \t{",
                "deletions": 1
            }
        ]
    },
    {
        "repo": "royale-compiler",
        "message": "fix an NPE",
        "commit": "https://github.com/apache/royale-compiler/commit/9f6266b6fcc5603e2a132c781e0931307b324644",
        "parent": "https://github.com/apache/royale-compiler/commit/96147830f7c9fae8cc2df65f36ae855bfabb44d2",
        "bug_id": "royale-compiler_8",
        "file": [
            {
                "sha": "94d1f309c0c008955ea62e8233f63c0d77ebc271",
                "filename": "compiler/src/main/java/org/apache/flex/compiler/internal/projects/FlexProject.java",
                "blob_url": "https://github.com/apache/royale-compiler/blob/9f6266b6fcc5603e2a132c781e0931307b324644/compiler/src/main/java/org/apache/flex/compiler/internal/projects/FlexProject.java",
                "raw_url": "https://github.com/apache/royale-compiler/raw/9f6266b6fcc5603e2a132c781e0931307b324644/compiler/src/main/java/org/apache/flex/compiler/internal/projects/FlexProject.java",
                "status": "modified",
                "changes": 1,
                "additions": 1,
                "contents_url": "https://api.github.com/repos/apache/royale-compiler/contents/compiler/src/main/java/org/apache/flex/compiler/internal/projects/FlexProject.java?ref=9f6266b6fcc5603e2a132c781e0931307b324644",
                "patch": "@@ -2301,6 +2301,7 @@ public boolean isValidTypeConversion(IASNode node, IDefinition actualDefinition,\n                 }\n             }\n         }\n+        if (func == null) return false;\n \t\tIMetaTag[] metas = func.getAllMetaTags();\n \t\tfor (IMetaTag meta : metas)\n \t\t{",
                "deletions": 0
            }
        ]
    },
    {
        "repo": "royale-compiler",
        "message": "report error instead of NPE if namespace isn't right",
        "commit": "https://github.com/apache/royale-compiler/commit/2f5a3751c54e0ef6d3dccd02de57941c0f0700c7",
        "parent": "https://github.com/apache/royale-compiler/commit/3e8c099a095c345b7a68c165f7e7f59ef2688ed5",
        "bug_id": "royale-compiler_9",
        "file": [
            {
                "sha": "575580ed800b20ff33b802f3cec52eccc1117cc8",
                "filename": "compiler/src/main/java/org/apache/flex/compiler/internal/definitions/AccessorDefinition.java",
                "blob_url": "https://github.com/apache/royale-compiler/blob/2f5a3751c54e0ef6d3dccd02de57941c0f0700c7/compiler/src/main/java/org/apache/flex/compiler/internal/definitions/AccessorDefinition.java",
                "raw_url": "https://github.com/apache/royale-compiler/raw/2f5a3751c54e0ef6d3dccd02de57941c0f0700c7/compiler/src/main/java/org/apache/flex/compiler/internal/definitions/AccessorDefinition.java",
                "status": "modified",
                "changes": 6,
                "additions": 6,
                "contents_url": "https://api.github.com/repos/apache/royale-compiler/contents/compiler/src/main/java/org/apache/flex/compiler/internal/definitions/AccessorDefinition.java?ref=2f5a3751c54e0ef6d3dccd02de57941c0f0700c7",
                "patch": "@@ -31,6 +31,7 @@\n import org.apache.flex.compiler.definitions.INamespaceDefinition;\n import org.apache.flex.compiler.definitions.IPackageDefinition;\n import org.apache.flex.compiler.definitions.ISetterDefinition;\n+import org.apache.flex.compiler.problems.UnresolvedNamespaceProblem;\n import org.apache.flex.compiler.projects.ICompilerProject;\n import org.apache.flex.compiler.scopes.IDefinitionSet;\n import org.apache.flex.compiler.tree.as.IVariableNode;\n@@ -163,6 +164,11 @@ private AccessorDefinition findCorrespondingAccessor(ASScope scope, ICompilerPro\n                     {\n                         INamespaceReference testDefRef = definition.getNamespaceReference();\n                         INamespaceDefinition testNamespaceDef = testDefRef.resolveNamespaceReference(project);\n+                        if (testNamespaceDef == null)\n+                        {\n+                        \tproject.getProblems().add(new UnresolvedNamespaceProblem(definition.getNode()));\n+                        \treturn null;\n+                        }\n                         final boolean testBindable = ((NamespaceDefinition)testNamespaceDef).getAETNamespace().getName().equals(\n                                 BindableHelper.bindableNamespaceDefinition.getAETNamespace().getName());\n                         /* aharui: namespaces shouldn't have to match.  A subclass may only override",
                "deletions": 0
            }
        ]
    },
    {
        "repo": "royale-compiler",
        "message": "fix npe",
        "commit": "https://github.com/apache/royale-compiler/commit/1dc3e4851c266d6a2a6212ad750d70143945ac31",
        "parent": "https://github.com/apache/royale-compiler/commit/b7e9b15f010cd27a418e6783184094b065a48929",
        "bug_id": "royale-compiler_10",
        "file": [
            {
                "sha": "7ef928c2bc435e367b213ad6a2cbe0f41e6cbb82",
                "filename": "compiler-jx/src/main/java/org/apache/flex/compiler/internal/codegen/mxml/flexjs/MXMLFlexJSEmitter.java",
                "blob_url": "https://github.com/apache/royale-compiler/blob/1dc3e4851c266d6a2a6212ad750d70143945ac31/compiler-jx/src/main/java/org/apache/flex/compiler/internal/codegen/mxml/flexjs/MXMLFlexJSEmitter.java",
                "raw_url": "https://github.com/apache/royale-compiler/raw/1dc3e4851c266d6a2a6212ad750d70143945ac31/compiler-jx/src/main/java/org/apache/flex/compiler/internal/codegen/mxml/flexjs/MXMLFlexJSEmitter.java",
                "status": "modified",
                "changes": 5,
                "additions": 3,
                "contents_url": "https://api.github.com/repos/apache/royale-compiler/contents/compiler-jx/src/main/java/org/apache/flex/compiler/internal/codegen/mxml/flexjs/MXMLFlexJSEmitter.java?ref=1dc3e4851c266d6a2a6212ad750d70143945ac31",
                "patch": "@@ -254,9 +254,10 @@ else if (sawRequires)\n \t            \t\t\tif (mxmlFile != null)\n \t            \t\t\t{\n \t            \t\t\t\tITargetAttributes attrs = mxmlFile.getTargetAttributes(flexJSProject);\n-\t            \t\t\t\tif (!attrs.getUsePreloader())\n+\t            \t\t\t\tif (attrs != null && attrs.getUsePreloader() != null)\n \t            \t\t\t\t{\n-\t            \t\t\t\t\tString preloaderInject = sep + IMXMLLanguageConstants.ATTRIBUTE_USE_PRELOADER + \": false\";\n+\t            \t\t\t\t\tString preloaderInject = sep + IMXMLLanguageConstants.ATTRIBUTE_USE_PRELOADER + \": \";\n+\t            \t\t\t\t\tpreloaderInject += attrs.getUsePreloader() == Boolean.TRUE ? \"true\" : \"false\";\n \t        \t\t            \tsep = \",\\n\";\n \t        \t\t            \tinfoInject += preloaderInject;\n \t            \t\t\t\t}",
                "deletions": 2
            }
        ]
    },
    {
        "repo": "royale-compiler",
        "message": "- Fixed a NPE error",
        "commit": "https://github.com/apache/royale-compiler/commit/052632ea60d2220721a929892c01d118e9514a48",
        "parent": "https://github.com/apache/royale-compiler/commit/d6937205ad57102249755c705b3605ceb316d414",
        "bug_id": "royale-compiler_11",
        "file": [
            {
                "sha": "4a3a6137f8553b9f617e0aff2081b78554a87e00",
                "filename": "compiler.jx/src/org/apache/flex/compiler/internal/codegen/js/flexjs/JSFlexJSDocEmitter.java",
                "blob_url": "https://github.com/apache/royale-compiler/blob/052632ea60d2220721a929892c01d118e9514a48/compiler.jx/src/org/apache/flex/compiler/internal/codegen/js/flexjs/JSFlexJSDocEmitter.java",
                "raw_url": "https://github.com/apache/royale-compiler/raw/052632ea60d2220721a929892c01d118e9514a48/compiler.jx/src/org/apache/flex/compiler/internal/codegen/js/flexjs/JSFlexJSDocEmitter.java",
                "status": "modified",
                "changes": 6,
                "additions": 4,
                "contents_url": "https://api.github.com/repos/apache/royale-compiler/contents/compiler.jx/src/org/apache/flex/compiler/internal/codegen/js/flexjs/JSFlexJSDocEmitter.java?ref=052632ea60d2220721a929892c01d118e9514a48",
                "patch": "@@ -135,11 +135,13 @@ public void emitMethodDoc(IFunctionNode node, ICompilerProject project)\n                             .resolve(project, (ASScope) classDefinition\n                                     .getContainingScope(),\n                                     DependencyType.INHERITANCE, true);\n-                    if (type == null)\n+                    if (type == null) {\n                         System.out.println(iReference.getDisplayString()\n                                 + \" not resolved in \"\n                                 + classDefinition.getQualifiedName());\n-                    emitImplements(type, project.getActualPackageName(type.getPackageName()));\n+                    } else {\n+                        emitImplements(type, project.getActualPackageName(type.getPackageName()));\n+                    }\n                 }\n             }\n             else",
                "deletions": 2
            }
        ]
    },
    {
        "repo": "royale-compiler",
        "message": "Revert \"Fix NPE\"\n\nThis reverts commit 49fee9146f9095f8bb5098de4f742508ca5a13d0.",
        "commit": "https://github.com/apache/royale-compiler/commit/185c3776c4eab430c5ad11fa681d5403d35f1fbc",
        "parent": "https://github.com/apache/royale-compiler/commit/49fee9146f9095f8bb5098de4f742508ca5a13d0",
        "bug_id": "royale-compiler_12",
        "file": [
            {
                "sha": "132ea31bb603e346eb135be45af9e61bbfc18a0b",
                "filename": "flex-compiler-oem/src/flex2/tools/Tool.java",
                "blob_url": "https://github.com/apache/royale-compiler/blob/185c3776c4eab430c5ad11fa681d5403d35f1fbc/flex-compiler-oem/src/flex2/tools/Tool.java",
                "raw_url": "https://github.com/apache/royale-compiler/raw/185c3776c4eab430c5ad11fa681d5403d35f1fbc/flex-compiler-oem/src/flex2/tools/Tool.java",
                "status": "modified",
                "changes": 20,
                "additions": 8,
                "contents_url": "https://api.github.com/repos/apache/royale-compiler/contents/flex-compiler-oem/src/flex2/tools/Tool.java?ref=185c3776c4eab430c5ad11fa681d5403d35f1fbc",
                "patch": "@@ -190,18 +190,14 @@ private static ConfigurationBuffer loadConfig(String[] args)\n             throws org.apache.flex.compiler.exceptions.ConfigurationException\n     {\n         final String configFilePath = ArgumentUtil.getValue(args, \"-load-config\");\n-        if (configFilePath != null)\n-        {\n-            final File configFile = new File(configFilePath);\n-            final FileSpecification fileSpecification = new FileSpecification(configFile.getAbsolutePath());\n-            final ConfigurationBuffer cfgbuf = createConfigurationBuffer(Configuration.class);\n-            \n-            FileConfigurator.load(cfgbuf, fileSpecification, new File(configFile.getPath()).getParent(), \"flex-config\",\n-                                  false);\n-            \n-            return cfgbuf;\n-        }\n-        return null;\n+        final File configFile = new File(configFilePath);\n+        final FileSpecification fileSpecification = new FileSpecification(configFile.getAbsolutePath());\n+        final ConfigurationBuffer cfgbuf = createConfigurationBuffer(Configuration.class);\n+\n+        FileConfigurator.load(cfgbuf, fileSpecification, new File(configFile.getPath()).getParent(), \"flex-config\",\n+                false);\n+\n+        return cfgbuf;\n     }\n \n     private static ConfigurationBuffer createConfigurationBuffer(Class<? extends Configuration> configurationClass)",
                "deletions": 12
            }
        ]
    },
    {
        "repo": "royale-compiler",
        "message": "FLEX-35323 compiler: fixed issue in BindingDestinationMaker where setting a dynmaic property with binding would result in a NullPointerException.\n\nDynamic properties are public, and the InstructionList is only created for non-public properties. We can simply check that the definition is null or not to fix this issue.",
        "commit": "https://github.com/apache/royale-compiler/commit/57a56977f5f75fb8c41144cf035d78eadd9a75d0",
        "parent": "https://github.com/apache/royale-compiler/commit/74d148746be4e7c386399c6752180437a378a11d",
        "bug_id": "royale-compiler_13",
        "file": [
            {
                "sha": "89ad6a2fb41521ed9aaf214af4bf7295ab8ffb5c",
                "filename": "compiler/src/main/java/org/apache/flex/compiler/internal/codegen/databinding/BindingDestinationMaker.java",
                "blob_url": "https://github.com/apache/royale-compiler/blob/57a56977f5f75fb8c41144cf035d78eadd9a75d0/compiler/src/main/java/org/apache/flex/compiler/internal/codegen/databinding/BindingDestinationMaker.java",
                "raw_url": "https://github.com/apache/royale-compiler/raw/57a56977f5f75fb8c41144cf035d78eadd9a75d0/compiler/src/main/java/org/apache/flex/compiler/internal/codegen/databinding/BindingDestinationMaker.java",
                "status": "modified",
                "changes": 21,
                "additions": 13,
                "contents_url": "https://api.github.com/repos/apache/royale-compiler/contents/compiler/src/main/java/org/apache/flex/compiler/internal/codegen/databinding/BindingDestinationMaker.java?ref=57a56977f5f75fb8c41144cf035d78eadd9a75d0",
                "patch": "@@ -128,15 +128,20 @@ else if (parent instanceof IMXMLPropertySpecifierNode && dbnode instanceof IMXML\n         {\n             IMXMLPropertySpecifierNode psn = (IMXMLPropertySpecifierNode)parent;\n             IDefinition d = psn.getDefinition();\n-            Binding b = host.getInstanceScope().getBinding(d);\n-            INamespaceReference ns = psn.getDefinition().getNamespaceReference();\n-            if (ns != NamespaceDefinition.getPublicNamespaceDefinition())\n+            //it's possible for the definition to be null if we're dealing with\n+            //a dynamic property on a class like Object -JT\n+            if (d != null)\n             {\n-                InstructionList insns = new InstructionList();\n-                insns.addInstruction(OP_getlocal0);\n-                insns.addInstruction(OP_getlocal1);\n-                insns.addInstruction(OP_setproperty, b.getName());\n-                ret = new InstructionListNode(insns);    // Wrap the IL in a node and return it\n+                Binding b = host.getInstanceScope().getBinding(d);\n+                INamespaceReference ns = d.getNamespaceReference();\n+                if (ns != NamespaceDefinition.getPublicNamespaceDefinition())\n+                {\n+                    InstructionList insns = new InstructionList();\n+                    insns.addInstruction(OP_getlocal0);\n+                    insns.addInstruction(OP_getlocal1);\n+                    insns.addInstruction(OP_setproperty, b.getName());\n+                    ret = new InstructionListNode(insns);    // Wrap the IL in a node and return it\n+                }\n             }\n         }\n         return ret;   ",
                "deletions": 8
            }
        ]
    },
    {
        "repo": "royale-compiler",
        "message": "Fix NPE\n\nIf '-output' is left out of the cli arguments, and no '-load-config' is specified, an uncaught NPE was thrown\n\nSigned-off-by: Erik de Bruin <erik@ixsoftware.nl>",
        "commit": "https://github.com/apache/royale-compiler/commit/49fee9146f9095f8bb5098de4f742508ca5a13d0",
        "parent": "https://github.com/apache/royale-compiler/commit/7ad42479d865f621cb4ef61b859bf4168e74ae25",
        "bug_id": "royale-compiler_14",
        "file": [
            {
                "sha": "73d8b4fbc2f68ab88a9b70484c3c3383cc859965",
                "filename": "flex-compiler-oem/src/flex2/tools/Tool.java",
                "blob_url": "https://github.com/apache/royale-compiler/blob/49fee9146f9095f8bb5098de4f742508ca5a13d0/flex-compiler-oem/src/flex2/tools/Tool.java",
                "raw_url": "https://github.com/apache/royale-compiler/raw/49fee9146f9095f8bb5098de4f742508ca5a13d0/flex-compiler-oem/src/flex2/tools/Tool.java",
                "status": "modified",
                "changes": 20,
                "additions": 12,
                "contents_url": "https://api.github.com/repos/apache/royale-compiler/contents/flex-compiler-oem/src/flex2/tools/Tool.java?ref=49fee9146f9095f8bb5098de4f742508ca5a13d0",
                "patch": "@@ -190,14 +190,18 @@ private static ConfigurationBuffer loadConfig(String[] args)\n             throws org.apache.flex.compiler.exceptions.ConfigurationException\n     {\n         final String configFilePath = ArgumentUtil.getValue(args, \"-load-config\");\n-        final File configFile = new File(configFilePath);\n-        final FileSpecification fileSpecification = new FileSpecification(configFile.getAbsolutePath());\n-        final ConfigurationBuffer cfgbuf = createConfigurationBuffer(Configuration.class);\n-\n-        FileConfigurator.load(cfgbuf, fileSpecification, new File(configFile.getPath()).getParent(), \"flex-config\",\n-                false);\n-\n-        return cfgbuf;\n+        if (configFilePath != null)\n+        {\n+            final File configFile = new File(configFilePath);\n+            final FileSpecification fileSpecification = new FileSpecification(configFile.getAbsolutePath());\n+            final ConfigurationBuffer cfgbuf = createConfigurationBuffer(Configuration.class);\n+            \n+            FileConfigurator.load(cfgbuf, fileSpecification, new File(configFile.getPath()).getParent(), \"flex-config\",\n+                                  false);\n+            \n+            return cfgbuf;\n+        }\n+        return null;\n     }\n \n     private static ConfigurationBuffer createConfigurationBuffer(Class<? extends Configuration> configurationClass)",
                "deletions": 8
            }
        ]
    },
    {
        "repo": "royale-compiler",
        "message": "Added a null-check to prevent NPEs in case of interfaces annotated with [Bindable]",
        "commit": "https://github.com/apache/royale-compiler/commit/151c6c93ead376710b0b5b0b887a36dba94c5c90",
        "parent": "https://github.com/apache/royale-compiler/commit/92750cda4147654241c9ada6beee1e876bb34f71",
        "bug_id": "royale-compiler_15",
        "file": [
            {
                "sha": "54cd6e009ba9f9b63df7e97227ea2ed9dcf87497",
                "filename": "compiler/src/org/apache/flex/compiler/internal/units/ASCompilationUnit.java",
                "blob_url": "https://github.com/apache/royale-compiler/blob/151c6c93ead376710b0b5b0b887a36dba94c5c90/compiler/src/org/apache/flex/compiler/internal/units/ASCompilationUnit.java",
                "raw_url": "https://github.com/apache/royale-compiler/raw/151c6c93ead376710b0b5b0b887a36dba94c5c90/compiler/src/org/apache/flex/compiler/internal/units/ASCompilationUnit.java",
                "status": "modified",
                "changes": 2,
                "additions": 1,
                "contents_url": "https://api.github.com/repos/apache/royale-compiler/contents/compiler/src/org/apache/flex/compiler/internal/units/ASCompilationUnit.java?ref=151c6c93ead376710b0b5b0b887a36dba94c5c90",
                "patch": "@@ -378,7 +378,7 @@ protected ISyntaxTreeRequestResult handleSyntaxTreeRequest() throws InterruptedE\n                             }\n                         }\n                     }\n-                    if (isBindable)\n+                    if (isBindable && (classNode != null))\n                     {\n                         IExpressionNode baseNode = classNode.getBaseClassNode();\n                         Collection<IImportNode> importNodes = new ArrayList<IImportNode>();",
                "deletions": 1
            }
        ]
    },
    {
        "repo": "royale-compiler",
        "message": "Fix NPE\n\nThis time such that the diff looks nicer ;-)\n\nSigned-off-by: Erik de Bruin <erik@ixsoftware.nl>",
        "commit": "https://github.com/apache/royale-compiler/commit/099263d45f8fbdc7f332e801704f14129ea9bdbb",
        "parent": "https://github.com/apache/royale-compiler/commit/185c3776c4eab430c5ad11fa681d5403d35f1fbc",
        "bug_id": "royale-compiler_16",
        "file": [
            {
                "sha": "1e4c516c772d974a78cd09feb3197a9963598720",
                "filename": "flex-compiler-oem/src/flex2/tools/Tool.java",
                "blob_url": "https://github.com/apache/royale-compiler/blob/099263d45f8fbdc7f332e801704f14129ea9bdbb/flex-compiler-oem/src/flex2/tools/Tool.java",
                "raw_url": "https://github.com/apache/royale-compiler/raw/099263d45f8fbdc7f332e801704f14129ea9bdbb/flex-compiler-oem/src/flex2/tools/Tool.java",
                "status": "modified",
                "changes": 4,
                "additions": 4,
                "contents_url": "https://api.github.com/repos/apache/royale-compiler/contents/flex-compiler-oem/src/flex2/tools/Tool.java?ref=099263d45f8fbdc7f332e801704f14129ea9bdbb",
                "patch": "@@ -190,6 +190,10 @@ private static ConfigurationBuffer loadConfig(String[] args)\n             throws org.apache.flex.compiler.exceptions.ConfigurationException\n     {\n         final String configFilePath = ArgumentUtil.getValue(args, \"-load-config\");\n+        if (configFilePath == null)\n+        {\n+            return null;\n+        }\n         final File configFile = new File(configFilePath);\n         final FileSpecification fileSpecification = new FileSpecification(configFile.getAbsolutePath());\n         final ConfigurationBuffer cfgbuf = createConfigurationBuffer(Configuration.class);",
                "deletions": 0
            }
        ]
    },
    {
        "repo": "royale-compiler",
        "message": "Various checks for NPE situations not encountered in FlexJS\n\nSigned-off-by: Erik de Bruin <erik@ixsoftware.nl>",
        "commit": "https://github.com/apache/royale-compiler/commit/0734ae475d61b158aea7dab3632444b106ea6e5a",
        "parent": "https://github.com/apache/royale-compiler/commit/5e47b16da5b5322f606aac80215bad6419a00ea6",
        "bug_id": "royale-compiler_17",
        "file": [
            {
                "sha": "1ff495c3436835cf86c6ba5e993f02f106ebf0fd",
                "filename": "compiler.jx/src/org/apache/flex/compiler/internal/codegen/js/vf2js/JSVF2JSEmitter.java",
                "blob_url": "https://github.com/apache/royale-compiler/blob/0734ae475d61b158aea7dab3632444b106ea6e5a/compiler.jx/src/org/apache/flex/compiler/internal/codegen/js/vf2js/JSVF2JSEmitter.java",
                "raw_url": "https://github.com/apache/royale-compiler/raw/0734ae475d61b158aea7dab3632444b106ea6e5a/compiler.jx/src/org/apache/flex/compiler/internal/codegen/js/vf2js/JSVF2JSEmitter.java",
                "status": "modified",
                "changes": 6,
                "additions": 4,
                "contents_url": "https://api.github.com/repos/apache/royale-compiler/contents/compiler.jx/src/org/apache/flex/compiler/internal/codegen/js/vf2js/JSVF2JSEmitter.java?ref=0734ae475d61b158aea7dab3632444b106ea6e5a",
                "patch": "@@ -678,6 +678,9 @@ else if (parentNodeId == ASTNodeID.ContainerID\n                             && ((FunctionDefinition) nodeDef)\n                                     .getFunctionClassification() == IFunctionDefinition.FunctionClassification.LOCAL;\n \n+                    if (nodeDef instanceof IParameterDefinition)\n+                    \treturn false;\n+                    \n                     return !identifierIsLocalFunction;\n                 }\n             }\n@@ -743,7 +746,7 @@ public void emitIdentifier(IIdentifierNode node)\n         boolean emitName = true;\n \n         if (nodeDef != null\n-                && nodeDef.isStatic())\n+                && nodeDef.isStatic() && nodeDef.getParent() != null)\n         {\n             String sname = nodeDef.getParent().getQualifiedName();\n             if (sname.length() > 0)\n@@ -930,7 +933,6 @@ else if (type == SUPER_FUNCTION_CALL)\n         IClassNode cnode = (IClassNode) node\n                 .getAncestorOfType(IClassNode.class);\n \n-        // ToDo (erikdebruin): add VF2JS conditional -> only use check during full SDK compilation\n         if (cnode == null)\n             return;\n         ",
                "deletions": 2
            }
        ]
    },
    {
        "repo": "royale-compiler",
        "message": "FLEX-33252 Falcon NPE in FlexFXG2SWFTranscoder Moved definitions initialization to constructor, in some cases recursion would not call transcode() which would result in the NPE\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/flex/falcon/trunk@1409271 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/royale-compiler/commit/cf4571e20d88b900879fb789ac9ff843107165b2",
        "parent": "https://github.com/apache/royale-compiler/commit/d379d902af51cda552257dd11f6f5869d3bb595f",
        "bug_id": "royale-compiler_18",
        "file": [
            {
                "sha": "aec3437d8a2189b1087daf96d1a955d0e00fc3db",
                "filename": "compiler/src/org/apache/flex/compiler/fxg/flex/FlexFXG2SWFTranscoder.java",
                "blob_url": "https://github.com/apache/royale-compiler/blob/cf4571e20d88b900879fb789ac9ff843107165b2/compiler/src/org/apache/flex/compiler/fxg/flex/FlexFXG2SWFTranscoder.java",
                "raw_url": "https://github.com/apache/royale-compiler/raw/cf4571e20d88b900879fb789ac9ff843107165b2/compiler/src/org/apache/flex/compiler/fxg/flex/FlexFXG2SWFTranscoder.java",
                "status": "modified",
                "changes": 3,
                "additions": 1,
                "contents_url": "https://api.github.com/repos/apache/royale-compiler/contents/compiler/src/org/apache/flex/compiler/fxg/flex/FlexFXG2SWFTranscoder.java?ref=cf4571e20d88b900879fb789ac9ff843107165b2",
                "patch": "@@ -121,13 +121,12 @@ public FlexFXG2SWFTranscoder(ICompilerProject project)\n         anyType = (ITypeDefinition)project.getBuiltinType(IASLanguageConstants.BuiltinType.ANY_TYPE);\n         \n         nameCounter = new HashMap<String, Integer>();\n+        dependencies = new HashMap<String, ITypeDefinition>();\n     }\n \n     @Override\n     public FXGSymbolClass transcode(IFXGNode node, String packageName, String className, Map<ITag, ITag> extraTags, Collection<ICompilerProblem> problems)\n     {\n-        dependencies = new HashMap<String, ITypeDefinition>();\n-        \n         this.packageName = packageName;\n         super.transcode(node, packageName, className, extraTags, problems);\n         ",
                "deletions": 2
            }
        ]
    },
    {
        "repo": "royale-compiler",
        "message": "Falcon: Added three nontrivial tests for parsing <Object> tag, and fixed an NPE that was causing two of them to fail.\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/flex/falcon/trunk@1405174 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/royale-compiler/commit/691709d7d27f6fd69dc3fbda81c6f446cee5714e",
        "parent": "https://github.com/apache/royale-compiler/commit/cda201dc82d3d95fa570809d46ddb7210b5b3416",
        "bug_id": "royale-compiler_19",
        "file": [
            {
                "sha": "519f90087bc05448727ea64c026c66955d277d58",
                "filename": "compiler.tests/unit-tests/org/apache/flex/compiler/internal/tree/mxml/MXMLObjectNodeTests.java",
                "blob_url": "https://github.com/apache/royale-compiler/blob/691709d7d27f6fd69dc3fbda81c6f446cee5714e/compiler.tests/unit-tests/org/apache/flex/compiler/internal/tree/mxml/MXMLObjectNodeTests.java",
                "raw_url": "https://github.com/apache/royale-compiler/raw/691709d7d27f6fd69dc3fbda81c6f446cee5714e/compiler.tests/unit-tests/org/apache/flex/compiler/internal/tree/mxml/MXMLObjectNodeTests.java",
                "status": "modified",
                "changes": 58,
                "additions": 58,
                "contents_url": "https://api.github.com/repos/apache/royale-compiler/contents/compiler.tests/unit-tests/org/apache/flex/compiler/internal/tree/mxml/MXMLObjectNodeTests.java?ref=691709d7d27f6fd69dc3fbda81c6f446cee5714e",
                "patch": "@@ -25,6 +25,8 @@\n import org.apache.flex.compiler.tree.ASTNodeID;\n import org.apache.flex.compiler.tree.mxml.IMXMLObjectNode;\n import org.apache.flex.compiler.tree.mxml.IMXMLFileNode;\n+import org.apache.flex.compiler.tree.mxml.IMXMLPropertySpecifierNode;\n+import org.apache.flex.compiler.tree.mxml.IMXMLStringNode;\n import org.junit.Test;\n \n /**\n@@ -34,6 +36,8 @@\n  */\n public class MXMLObjectNodeTests extends MXMLInstanceNodeTests\n {\n+\tprivate static String EOL = \"\\n\\t\\t\";\n+\t\n \tprivate IMXMLObjectNode getMXMLObjectNode(String code)\n \t{\n \t\tIMXMLFileNode fileNode = getMXMLFileNode(code);\n@@ -66,4 +70,58 @@ public void MXMLObjectNode_empty3()\n \t\tIMXMLObjectNode node = getMXMLObjectNode(code);\n \t\tassertThat(\"getChildCount\", node.getChildCount(), is(0));\n \t}\n+\t\t\n+\t@Test\n+\tpublic void MXMLArrayNode_two_string_properties1()\n+\t{\n+\t\tString code =\n+\t\t\t\"<fx:Object>\" + EOL +\n+\t\t    \"    <fx:a>\" + EOL +\n+\t\t    \"        <fx:String>xxx</fx:String>\" + EOL +\n+\t\t    \"    </fx:a>\" + EOL +\n+\t\t    \"    <fx:b>\" + EOL +\n+\t\t    \"        <fx:String>yyy</fx:String>\" + EOL +\n+\t\t    \"    </fx:b>\" + EOL +\n+\t\t\t\"</fx:Object>\";\n+\t\tIMXMLObjectNode node = getMXMLObjectNode(code);\n+\t\tassertThat(\"getChildCount\", node.getChildCount(), is(2));\n+\t\tIMXMLPropertySpecifierNode child0 = (IMXMLPropertySpecifierNode)node.getChild(0);\n+\t\tassertThat(\"[0]name\", child0.getName(), is(\"a\"));\n+\t\tassertThat(\"[0]value\", ((IMXMLStringNode)child0.getInstanceNode()).getValue(), is(\"xxx\"));\n+\t\tIMXMLPropertySpecifierNode child1 = (IMXMLPropertySpecifierNode)node.getChild(1);\n+\t\tassertThat(\"[1]name\", child1.getName(), is(\"b\"));\n+\t\tassertThat(\"[1]value\", ((IMXMLStringNode)child1.getInstanceNode()).getValue(), is(\"yyy\"));\n+\t}\n+\t\n+\t@Test\n+\tpublic void MXMLArrayNode_two_string_properties2()\n+\t{\n+\t\tString code =\n+\t\t\t\"<fx:Object>\" + EOL +\n+\t\t    \"    <fx:a>xxx</fx:a>\" + EOL +\n+\t\t    \"    <fx:b>yyy</fx:b>\" + EOL +\n+\t\t\t\"</fx:Object>\";\n+\t\tIMXMLObjectNode node = getMXMLObjectNode(code);\n+\t\tassertThat(\"getChildCount\", node.getChildCount(), is(2));\n+\t\tIMXMLPropertySpecifierNode child0 = (IMXMLPropertySpecifierNode)node.getChild(0);\n+\t\tassertThat(\"[0]name\", child0.getName(), is(\"a\"));\n+\t\tassertThat(\"[0]value\", ((IMXMLStringNode)child0.getInstanceNode()).getValue(), is(\"xxx\"));\n+\t\tIMXMLPropertySpecifierNode child1 = (IMXMLPropertySpecifierNode)node.getChild(1);\n+\t\tassertThat(\"[1]name\", child1.getName(), is(\"b\"));\n+\t\tassertThat(\"[1]value\", ((IMXMLStringNode)child1.getInstanceNode()).getValue(), is(\"yyy\"));\n+\t}\n+\t\n+\t@Test\n+\tpublic void MXMLArrayNode_two_string_properties3()\n+\t{\n+\t\tString code = \"<fx:Object a='xxx' b='yyy'/>\";\n+\t\tIMXMLObjectNode node = getMXMLObjectNode(code);\n+\t\tassertThat(\"getChildCount\", node.getChildCount(), is(2));\n+\t\tIMXMLPropertySpecifierNode child0 = (IMXMLPropertySpecifierNode)node.getChild(0);\n+\t\tassertThat(\"[0]name\", child0.getName(), is(\"a\"));\n+\t\tassertThat(\"[0]value\", ((IMXMLStringNode)child0.getInstanceNode()).getValue(), is(\"xxx\"));\n+\t\tIMXMLPropertySpecifierNode child1 = (IMXMLPropertySpecifierNode)node.getChild(1);\n+\t\tassertThat(\"[1]name\", child1.getName(), is(\"b\"));\n+\t\tassertThat(\"[1]value\", ((IMXMLStringNode)child1.getInstanceNode()).getValue(), is(\"yyy\"));\n+\t}\n }",
                "deletions": 0
            },
            {
                "sha": "5c26062d0775351c99acdf14f3028962a6e6055d",
                "filename": "compiler/src/org/apache/flex/compiler/internal/projects/FlexProject.java",
                "blob_url": "https://github.com/apache/royale-compiler/blob/691709d7d27f6fd69dc3fbda81c6f446cee5714e/compiler/src/org/apache/flex/compiler/internal/projects/FlexProject.java",
                "raw_url": "https://github.com/apache/royale-compiler/raw/691709d7d27f6fd69dc3fbda81c6f446cee5714e/compiler/src/org/apache/flex/compiler/internal/projects/FlexProject.java",
                "status": "modified",
                "changes": 2,
                "additions": 1,
                "contents_url": "https://api.github.com/repos/apache/royale-compiler/contents/compiler/src/org/apache/flex/compiler/internal/projects/FlexProject.java?ref=691709d7d27f6fd69dc3fbda81c6f446cee5714e",
                "patch": "@@ -995,7 +995,7 @@ public void setDeferredInstantiationUIComponentInterface(String deferredInstanti\n     \n     public Integer getNamedColor(String colorName)\n     {\n-        return namedColors.get(colorName);\n+        return namedColors != null ? namedColors.get(colorName) : null;\n     }\n     \n     public void setNamedColors(Map<String, Integer> namedColors)",
                "deletions": 1
            }
        ]
    },
    {
        "repo": "royale-compiler",
        "message": "FLEX-33713: An NPE is thrown by this code when compiling 'spark.swc' from the SDK. The null check bypasses the issue, it doesn't do anything to fix the root cause...\n\nSigned-off-by: Erik de Bruin <erik@ixsoftware.nl>",
        "commit": "https://github.com/apache/royale-compiler/commit/78cbff9f0342e2de9f28abb88dab6c656e061e95",
        "parent": "https://github.com/apache/royale-compiler/commit/f7956f9a413f87318f8e88a4761d3b2d031e5a25",
        "bug_id": "royale-compiler_20",
        "file": [
            {
                "sha": "29d2a7b4c99ceaf579d0390a068f994aecf5fb2c",
                "filename": "compiler/src/org/apache/flex/compiler/internal/as/codegen/ClassDirectiveProcessor.java",
                "blob_url": "https://github.com/apache/royale-compiler/blob/78cbff9f0342e2de9f28abb88dab6c656e061e95/compiler/src/org/apache/flex/compiler/internal/as/codegen/ClassDirectiveProcessor.java",
                "raw_url": "https://github.com/apache/royale-compiler/raw/78cbff9f0342e2de9f28abb88dab6c656e061e95/compiler/src/org/apache/flex/compiler/internal/as/codegen/ClassDirectiveProcessor.java",
                "status": "modified",
                "changes": 16,
                "additions": 13,
                "contents_url": "https://api.github.com/repos/apache/royale-compiler/contents/compiler/src/org/apache/flex/compiler/internal/as/codegen/ClassDirectiveProcessor.java?ref=78cbff9f0342e2de9f28abb88dab6c656e061e95",
                "patch": "@@ -533,9 +533,19 @@ else if ( !this.iinitInsns.isEmpty() )\n \n             cinit_insns.addInstruction(OP_returnvoid);\n \n-            this.classStaticScope.methodBodyVisitor.visitInstructionList(cinit_insns);\n-            this.classStaticScope.methodBodyVisitor.visitEnd();\n-            this.classStaticScope.methodVisitor.visitEnd();\n+            /*\n+             * FIXME: NPE while compiling 'spark.swc'\n+             * \n+             * erikdebruin: I'm just bypassing that with this null check. Someone \n+             *              who knows what's going on here should probably take a\n+             *              look WHY this was failing...\n+             */\n+            if (this.classStaticScope.methodBodyVisitor != null)\n+            {\n+                this.classStaticScope.methodBodyVisitor.visitInstructionList(cinit_insns);\n+                this.classStaticScope.methodBodyVisitor.visitEnd();\n+                this.classStaticScope.methodVisitor.visitEnd();\n+            }\n         }\n         else\n         {",
                "deletions": 3
            }
        ]
    }
]