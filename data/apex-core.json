{
    "apex-core_0ce507e": {
        "bug_id": "apex-core_0ce507e",
        "commit": "https://github.com/apache/apex-core/commit/0ce507e2b00df95e4394bb452439c57849eec62b",
        "file": [
            {
                "additions": 6,
                "blob_url": "https://github.com/apache/apex-core/blob/0ce507e2b00df95e4394bb452439c57849eec62b/engine/src/main/java/com/datatorrent/stram/StreamingContainerManager.java",
                "changes": 10,
                "contents_url": "https://api.github.com/repos/apache/apex-core/contents/engine/src/main/java/com/datatorrent/stram/StreamingContainerManager.java?ref=0ce507e2b00df95e4394bb452439c57849eec62b",
                "deletions": 4,
                "filename": "engine/src/main/java/com/datatorrent/stram/StreamingContainerManager.java",
                "patch": "@@ -1006,7 +1006,7 @@ public ContainerHeartbeatResponse processHeartbeat(ContainerHeartbeat heartbeat)\n       PTOperator oper = this.plan.getAllOperators().get(shb.getNodeId());\n \n       if (oper == null) {\n-        LOG.error(\"Heartbeat for unknown operator {} (container {})\", shb.getNodeId(), heartbeat.getContainerId());\n+        LOG.info(\"Heartbeat for unknown operator {} (container {})\", shb.getNodeId(), heartbeat.getContainerId());\n         sca.undeployOpers.add(shb.nodeId);\n         continue;\n       }\n@@ -1817,9 +1817,11 @@ private LogicalOperatorInfo fillLogicalOperatorInfo(OperatorMeta operator)\n         loi.status.put(physicalOperator.getState().toString(), count);\n       }\n       count.increment();\n-      long recoveryWindowId = toWsWindowId(physicalOperator.getRecoveryCheckpoint().windowId);\n-      if (loi.recoveryWindowId == 0 || loi.recoveryWindowId > recoveryWindowId) {\n-        loi.recoveryWindowId = recoveryWindowId;\n+      if (physicalOperator.getRecoveryCheckpoint() != null) {\n+        long recoveryWindowId = toWsWindowId(physicalOperator.getRecoveryCheckpoint().windowId);\n+        if (loi.recoveryWindowId == 0 || loi.recoveryWindowId > recoveryWindowId) {\n+          loi.recoveryWindowId = recoveryWindowId;\n+        }\n       }\n       PTContainer container = physicalOperator.getContainer();\n       if (container != null) {",
                "raw_url": "https://github.com/apache/apex-core/raw/0ce507e2b00df95e4394bb452439c57849eec62b/engine/src/main/java/com/datatorrent/stram/StreamingContainerManager.java",
                "sha": "68bfd47c5923f4d336d2b1028163fd5bc97644ae",
                "status": "modified"
            }
        ],
        "message": "SPOI-3288: fixed npe in fillLogicalPlanInfo",
        "parent": "https://github.com/apache/apex-core/commit/a2137e6c7c323e79ec019b67d9701cc1132d23ea",
        "repo": "apex-core",
        "unit_tests": [
            "StreamingContainerManagerTest.java"
        ]
    },
    "apex-core_2028959": {
        "bug_id": "apex-core_2028959",
        "commit": "https://github.com/apache/apex-core/commit/202895914e927eff8bfa46236d7fd818ed9e7f1a",
        "file": [
            {
                "additions": 5,
                "blob_url": "https://github.com/apache/apex-core/blob/202895914e927eff8bfa46236d7fd818ed9e7f1a/engine/src/main/java/com/datatorrent/stram/StreamingContainerManager.java",
                "changes": 9,
                "contents_url": "https://api.github.com/repos/apache/apex-core/contents/engine/src/main/java/com/datatorrent/stram/StreamingContainerManager.java?ref=202895914e927eff8bfa46236d7fd818ed9e7f1a",
                "deletions": 4,
                "filename": "engine/src/main/java/com/datatorrent/stram/StreamingContainerManager.java",
                "patch": "@@ -60,6 +60,7 @@\n import com.datatorrent.stram.plan.logical.LogicalPlan.OperatorMeta;\n import com.datatorrent.stram.plan.logical.LogicalPlanConfiguration;\n import com.datatorrent.stram.plan.logical.Operators;\n+import com.datatorrent.stram.plan.logical.Operators.PortContextPair;\n import com.datatorrent.stram.plan.logical.requests.LogicalPlanRequest;\n import com.datatorrent.stram.plan.physical.*;\n import com.datatorrent.stram.plan.physical.OperatorStatus.PortStatus;\n@@ -2182,16 +2183,16 @@ public void setLoggersLevel(Map<String, String> changedLoggers)\n \n     Operators.PortMappingDescriptor portMap = new Operators.PortMappingDescriptor();\n     Operators.describe(logicalOperator.getOperator(), portMap);\n-    InputPort<?> inputPort = portMap.inputPorts.get(portName).component;\n+    PortContextPair<InputPort<?>> inputPort = portMap.inputPorts.get(portName);\n     if (inputPort != null) {\n-      return logicalOperator.getMeta(inputPort).getAttributes().clone();\n+      return logicalOperator.getMeta(inputPort.component).getAttributes().clone();\n     }\n     else {\n-      OutputPort<?> outputPort = portMap.outputPorts.get(portName).component;\n+      PortContextPair<OutputPort<?>> outputPort = portMap.outputPorts.get(portName);\n       if (outputPort == null) {\n         throw new IllegalArgumentException(\"Invalid port name \" + portName);\n       }\n-      return logicalOperator.getMeta(outputPort).getAttributes().clone();\n+      return logicalOperator.getMeta(outputPort.component).getAttributes().clone();\n     }\n   }\n ",
                "raw_url": "https://github.com/apache/apex-core/raw/202895914e927eff8bfa46236d7fd818ed9e7f1a/engine/src/main/java/com/datatorrent/stram/StreamingContainerManager.java",
                "sha": "3538abb6075f044f911ffb2931049712ff2a5289",
                "status": "modified"
            }
        ],
        "message": "Fixed NPE for getting port attributes",
        "parent": "https://github.com/apache/apex-core/commit/08c6e68fa04b043fc941ce0f869de3e8dba9b673",
        "repo": "apex-core",
        "unit_tests": [
            "StreamingContainerManagerTest.java"
        ]
    },
    "apex-core_73c6701": {
        "bug_id": "apex-core_73c6701",
        "commit": "https://github.com/apache/apex-core/commit/73c6701b664b748dfe066b8ed9220cf60ad88412",
        "file": [
            {
                "additions": 3,
                "blob_url": "https://github.com/apache/apex-core/blob/73c6701b664b748dfe066b8ed9220cf60ad88412/engine/src/main/java/com/datatorrent/stram/StreamingContainerManager.java",
                "changes": 4,
                "contents_url": "https://api.github.com/repos/apache/apex-core/contents/engine/src/main/java/com/datatorrent/stram/StreamingContainerManager.java?ref=73c6701b664b748dfe066b8ed9220cf60ad88412",
                "deletions": 1,
                "filename": "engine/src/main/java/com/datatorrent/stram/StreamingContainerManager.java",
                "patch": "@@ -1212,7 +1212,9 @@ public void deploy(Set<PTContainer> releaseContainers, Collection<PTOperator> un\n   @Override\n   public void recordEventAsync(StramEvent ev)\n   {\n-    eventBus.publishAsync(ev);\n+    if (eventBus != null) {\n+      eventBus.publishAsync(ev);\n+    }\n   }\n \n   @Override",
                "raw_url": "https://github.com/apache/apex-core/raw/73c6701b664b748dfe066b8ed9220cf60ad88412/engine/src/main/java/com/datatorrent/stram/StreamingContainerManager.java",
                "sha": "1619ec9b7896619d04f6469d8d6a6da6a9b12a1b",
                "status": "modified"
            }
        ],
        "message": "fix NPE",
        "parent": "https://github.com/apache/apex-core/commit/ae9f3195eb7202257cdb8c7f3e184a914357afd7",
        "repo": "apex-core",
        "unit_tests": [
            "StreamingContainerManagerTest.java"
        ]
    },
    "apex-core_7459993": {
        "bug_id": "apex-core_7459993",
        "commit": "https://github.com/apache/apex-core/commit/7459993cb82f057c679ac261e5517af810da9d09",
        "file": [
            {
                "additions": 23,
                "blob_url": "https://github.com/apache/apex-core/blob/7459993cb82f057c679ac261e5517af810da9d09/engine/src/main/java/com/datatorrent/stram/engine/StreamingContainer.java",
                "changes": 24,
                "contents_url": "https://api.github.com/repos/apache/apex-core/contents/engine/src/main/java/com/datatorrent/stram/engine/StreamingContainer.java?ref=7459993cb82f057c679ac261e5517af810da9d09",
                "deletions": 1,
                "filename": "engine/src/main/java/com/datatorrent/stram/engine/StreamingContainer.java",
                "patch": "@@ -41,6 +41,7 @@\n import com.datatorrent.bufferserver.storage.DiskStorage;\n import com.datatorrent.bufferserver.util.Codec;\n import com.datatorrent.common.util.ScheduledThreadPoolExecutor;\n+import com.datatorrent.common.util.Slice;\n import com.datatorrent.netlet.DefaultEventLoop;\n import com.datatorrent.stram.ComponentContextPair;\n import com.datatorrent.stram.RecoverableRpcProxy;\n@@ -1115,7 +1116,7 @@ private void deployInputStreams(List<OperatorDeployInfo> operatorList, HashMap<S\n                * generally speaking we do not have partitions on the inline streams so the control should not\n                * come here but if it comes, then we are ready to handle it using the partition aware streams.\n                */\n-              PartitionAwareSink<Object> pas = new PartitionAwareSink<Object>((StreamCodec<Object>)streamCodec, nidi.partitionKeys, nidi.partitionMask, stream);\n+              PartitionAwareSink<Object> pas = new PartitionAwareSink<Object>(streamCodec == null ? nonSerializingStreamCodec : (StreamCodec<Object>) streamCodec, nidi.partitionKeys, nidi.partitionMask, stream);\n               ((Stream.MultiSinkCapableStream)pair.component).setSink(sinkIdentifier, pas);\n             }\n \n@@ -1515,5 +1516,26 @@ private void handleChangeLoggersRequest(StramToNodeChangeLoggersRequest request)\n     DTLoggerFactory.getInstance().changeLoggersLevel(request.getTargetChanges());\n   }\n \n+  private final StreamCodec<Object> nonSerializingStreamCodec = new StreamCodec<Object>()\n+  {\n+    @Override\n+    public Object fromByteArray(Slice fragment)\n+    {\n+      return null;\n+    }\n+\n+    @Override\n+    public Slice toByteArray(Object o)\n+    {\n+      return null;\n+    }\n+\n+    @Override\n+    public int getPartition(Object o)\n+    {\n+      return o.hashCode();\n+    }\n+  };\n+\n   private static final Logger logger = LoggerFactory.getLogger(StreamingContainer.class);\n }",
                "raw_url": "https://github.com/apache/apex-core/raw/7459993cb82f057c679ac261e5517af810da9d09/engine/src/main/java/com/datatorrent/stram/engine/StreamingContainer.java",
                "sha": "9b0f581522ad864991d5390aa85f6d7752b0bb20",
                "status": "modified"
            },
            {
                "additions": 36,
                "blob_url": "https://github.com/apache/apex-core/blob/7459993cb82f057c679ac261e5517af810da9d09/engine/src/test/java/com/datatorrent/stram/StreamingContainerManagerTest.java",
                "changes": 36,
                "contents_url": "https://api.github.com/repos/apache/apex-core/contents/engine/src/test/java/com/datatorrent/stram/StreamingContainerManagerTest.java?ref=7459993cb82f057c679ac261e5517af810da9d09",
                "deletions": 0,
                "filename": "engine/src/test/java/com/datatorrent/stram/StreamingContainerManagerTest.java",
                "patch": "@@ -44,13 +44,15 @@\n import com.datatorrent.stram.engine.DefaultUnifier;\n import com.datatorrent.stram.engine.GenericTestOperator;\n import com.datatorrent.stram.engine.TestGeneratorInputOperator;\n+import com.datatorrent.stram.plan.TestPlanContext;\n import com.datatorrent.stram.plan.logical.LogicalPlan;\n import com.datatorrent.stram.plan.logical.LogicalPlan.OperatorMeta;\n import com.datatorrent.stram.plan.physical.OperatorStatus.PortStatus;\n import com.datatorrent.stram.plan.physical.PTContainer;\n import com.datatorrent.stram.plan.physical.PTOperator;\n import com.datatorrent.stram.plan.physical.PhysicalPlan;\n import com.datatorrent.stram.plan.physical.PhysicalPlanTest;\n+import com.datatorrent.stram.support.StramTestSupport;\n import com.datatorrent.stram.support.StramTestSupport.MemoryStorageAgent;\n import com.datatorrent.stram.support.StramTestSupport.TestMeta;\n import com.datatorrent.stram.tuple.Tuple;\n@@ -686,4 +688,38 @@ public void testValidInputOperatorDeployInfoType()\n     OperatorDeployInfo o1DeployInfo = getDeployInfo(scm.getContainerAgent(containerId)).get(0);\n     Assert.assertEquals(\"type \" + o1DeployInfo, OperatorDeployInfo.OperatorType.INPUT, o1DeployInfo.type);\n   }\n+\n+\n+  private void testDownStreamPartition(Locality locality) throws Exception\n+  {\n+    LogicalPlan dag = new LogicalPlan();\n+    TestGeneratorInputOperator o1 = dag.addOperator(\"o1\", TestGeneratorInputOperator.class);\n+    GenericTestOperator o2 = dag.addOperator(\"o2\", GenericTestOperator.class);\n+    dag.setAttribute(o2, OperatorContext.PARTITIONER, new StatelessPartitioner<GenericTestOperator>(2));\n+    dag.addStream(\"o1Output1\", o1.outport, o2.inport1).setLocality(locality);\n+\n+    int maxContainers = 5;\n+    dag.setAttribute(LogicalPlan.CONTAINERS_MAX_COUNT, maxContainers);\n+    dag.setAttribute(OperatorContext.STORAGE_AGENT, new StramTestSupport.MemoryStorageAgent());\n+    dag.validate();\n+    PhysicalPlan plan = new PhysicalPlan(dag, new TestPlanContext());\n+    Assert.assertEquals(\"number of containers\", 1, plan.getContainers().size());\n+\n+    PTContainer container1 = plan.getContainers().get(0);\n+    Assert.assertEquals(\"number operators \" + container1, 3, container1.getOperators().size());\n+    StramLocalCluster slc = new StramLocalCluster(dag);\n+    slc.run(5000);\n+  }\n+\n+  @Test\n+  public void testOIODownstreamPartition() throws Exception\n+  {\n+    testDownStreamPartition(Locality.THREAD_LOCAL);\n+  }\n+\n+  @Test\n+  public void testContainerLocalDownstreamPartition() throws Exception\n+  {\n+    testDownStreamPartition(Locality.CONTAINER_LOCAL);\n+  }\n }",
                "raw_url": "https://github.com/apache/apex-core/raw/7459993cb82f057c679ac261e5517af810da9d09/engine/src/test/java/com/datatorrent/stram/StreamingContainerManagerTest.java",
                "sha": "d4b04ba0846dcd743d0f00631b145d12fa5df5f2",
                "status": "modified"
            }
        ],
        "message": "SPOI-3752 #comment Fixed NPE due to null streamcodec by setting non serializing streamcodec",
        "parent": "https://github.com/apache/apex-core/commit/4d1a5d4324e7ab5d7dab5a09b4840d03ed80ff41",
        "repo": "apex-core",
        "unit_tests": [
            "StreamingContainerTest.java"
        ]
    },
    "apex-core_7bbb4cf": {
        "bug_id": "apex-core_7bbb4cf",
        "commit": "https://github.com/apache/apex-core/commit/7bbb4cfd2af6d5c5c99c58222c44a848bc6534b2",
        "file": [
            {
                "additions": 6,
                "blob_url": "https://github.com/apache/apex-core/blob/7bbb4cfd2af6d5c5c99c58222c44a848bc6534b2/engine/src/main/java/com/datatorrent/stram/StreamingContainerManager.java",
                "changes": 8,
                "contents_url": "https://api.github.com/repos/apache/apex-core/contents/engine/src/main/java/com/datatorrent/stram/StreamingContainerManager.java?ref=7bbb4cfd2af6d5c5c99c58222c44a848bc6534b2",
                "deletions": 2,
                "filename": "engine/src/main/java/com/datatorrent/stram/StreamingContainerManager.java",
                "patch": "@@ -1700,8 +1700,12 @@ public void run()\n           if (stats.windowId > currentEndWindowStatsWindowId) {\n             Map<Integer, EndWindowStats> endWindowStatsMap = endWindowStatsOperatorMap.get(stats.windowId);\n             if (endWindowStatsMap == null) {\n-              endWindowStatsOperatorMap.putIfAbsent(stats.windowId, new ConcurrentSkipListMap<Integer, EndWindowStats>());\n-              endWindowStatsMap = endWindowStatsOperatorMap.get(stats.windowId);\n+              endWindowStatsMap = new ConcurrentSkipListMap<Integer, EndWindowStats>();\n+              Map<Integer, EndWindowStats> endWindowStatsMapPrevious =\n+                  endWindowStatsOperatorMap.putIfAbsent(stats.windowId, endWindowStatsMap);\n+              if (endWindowStatsMapPrevious != null) {\n+                endWindowStatsMap = endWindowStatsMapPrevious;\n+              }\n             }\n             endWindowStatsMap.put(shb.getNodeId(), endWindowStats);\n ",
                "raw_url": "https://github.com/apache/apex-core/raw/7bbb4cfd2af6d5c5c99c58222c44a848bc6534b2/engine/src/main/java/com/datatorrent/stram/StreamingContainerManager.java",
                "sha": "aa79243c1db5f3e54ae6c1fb7d7d6b32362aeecd",
                "status": "modified"
            }
        ],
        "message": "APEXCORE-362 - NPE in StreamingContainerManager. Fixed race condition between the thread that insert into endWindowStatsOperatorMap and the thread that removes entries when  endWindowStatsOperatorMap exceeds 1000 entries.",
        "parent": "https://github.com/apache/apex-core/commit/00939d54b32541766319a105badbb611a6843111",
        "repo": "apex-core",
        "unit_tests": [
            "StreamingContainerManagerTest.java"
        ]
    },
    "apex-core_9df827d": {
        "bug_id": "apex-core_9df827d",
        "commit": "https://github.com/apache/apex-core/commit/9df827df9fe4005d166d4e8223f64e0d5c474e3f",
        "file": [
            {
                "additions": 7,
                "blob_url": "https://github.com/apache/apex-core/blob/9df827df9fe4005d166d4e8223f64e0d5c474e3f/engine/src/main/java/com/datatorrent/stram/webapp/StramWebServices.java",
                "changes": 12,
                "contents_url": "https://api.github.com/repos/apache/apex-core/contents/engine/src/main/java/com/datatorrent/stram/webapp/StramWebServices.java?ref=9df827df9fe4005d166d4e8223f64e0d5c474e3f",
                "deletions": 5,
                "filename": "engine/src/main/java/com/datatorrent/stram/webapp/StramWebServices.java",
                "patch": "@@ -210,11 +210,13 @@ public JSONObject getOperatorClasses(@QueryParam(\"parent\") String parent)\n     JSONObject result = new JSONObject();\n     JSONArray classNames = new JSONArray();\n \n-    if (parent.equals(\"chart\")) {\n-      parent = \"com.datatorrent.lib.chart.ChartOperator\";\n-    }\n-    else if (parent.equals(\"filter\")) {\n-      parent = \"com.datatorrent.lib.util.SimpleFilterOperator\";\n+    if (parent != null) {\n+      if (parent.equals(\"chart\")) {\n+        parent = \"com.datatorrent.lib.chart.ChartOperator\";\n+      }\n+      else if (parent.equals(\"filter\")) {\n+        parent = \"com.datatorrent.lib.util.SimpleFilterOperator\";\n+      }\n     }\n \n     try {",
                "raw_url": "https://github.com/apache/apex-core/raw/9df827df9fe4005d166d4e8223f64e0d5c474e3f/engine/src/main/java/com/datatorrent/stram/webapp/StramWebServices.java",
                "sha": "082a005b98abb58cfaf405ca498524e01539321a",
                "status": "modified"
            }
        ],
        "message": "fixed NPE in operatorClasses call",
        "parent": "https://github.com/apache/apex-core/commit/5a6e1b1030aa315cb8f503a9beba40d8855a7a6a",
        "repo": "apex-core",
        "unit_tests": [
            "StramWebServicesTest.java"
        ]
    },
    "apex-core_bd67f3d": {
        "bug_id": "apex-core_bd67f3d",
        "commit": "https://github.com/apache/apex-core/commit/bd67f3d11ca688c2cfc3d985166ab766edcf8fee",
        "file": [
            {
                "additions": 23,
                "blob_url": "https://github.com/apache/apex-core/blob/bd67f3d11ca688c2cfc3d985166ab766edcf8fee/engine/src/main/java/com/datatorrent/stram/engine/StreamingContainer.java",
                "changes": 24,
                "contents_url": "https://api.github.com/repos/apache/apex-core/contents/engine/src/main/java/com/datatorrent/stram/engine/StreamingContainer.java?ref=bd67f3d11ca688c2cfc3d985166ab766edcf8fee",
                "deletions": 1,
                "filename": "engine/src/main/java/com/datatorrent/stram/engine/StreamingContainer.java",
                "patch": "@@ -41,6 +41,7 @@\n import com.datatorrent.bufferserver.storage.DiskStorage;\n import com.datatorrent.bufferserver.util.Codec;\n import com.datatorrent.common.util.ScheduledThreadPoolExecutor;\n+import com.datatorrent.common.util.Slice;\n import com.datatorrent.netlet.DefaultEventLoop;\n import com.datatorrent.stram.ComponentContextPair;\n import com.datatorrent.stram.RecoverableRpcProxy;\n@@ -1114,7 +1115,7 @@ private void deployInputStreams(List<OperatorDeployInfo> operatorList, HashMap<S\n                * generally speaking we do not have partitions on the inline streams so the control should not\n                * come here but if it comes, then we are ready to handle it using the partition aware streams.\n                */\n-              PartitionAwareSink<Object> pas = new PartitionAwareSink<Object>((StreamCodec<Object>)streamCodec, nidi.partitionKeys, nidi.partitionMask, stream);\n+              PartitionAwareSink<Object> pas = new PartitionAwareSink<Object>(streamCodec == null ? nonSerializingStreamCodec : (StreamCodec<Object>) streamCodec, nidi.partitionKeys, nidi.partitionMask, stream);\n               ((Stream.MultiSinkCapableStream)pair.component).setSink(sinkIdentifier, pas);\n             }\n \n@@ -1514,5 +1515,26 @@ private void handleChangeLoggersRequest(StramToNodeChangeLoggersRequest request)\n     DTLoggerFactory.getInstance().changeLoggersLevel(request.getTargetChanges());\n   }\n \n+  private final StreamCodec<Object> nonSerializingStreamCodec = new StreamCodec<Object>()\n+  {\n+    @Override\n+    public Object fromByteArray(Slice fragment)\n+    {\n+      return null;\n+    }\n+\n+    @Override\n+    public Slice toByteArray(Object o)\n+    {\n+      return null;\n+    }\n+\n+    @Override\n+    public int getPartition(Object o)\n+    {\n+      return o.hashCode();\n+    }\n+  };\n+\n   private static final Logger logger = LoggerFactory.getLogger(StreamingContainer.class);\n }",
                "raw_url": "https://github.com/apache/apex-core/raw/bd67f3d11ca688c2cfc3d985166ab766edcf8fee/engine/src/main/java/com/datatorrent/stram/engine/StreamingContainer.java",
                "sha": "f60bd222d8141a9b49c2cd69e6f3c175359000cc",
                "status": "modified"
            },
            {
                "additions": 36,
                "blob_url": "https://github.com/apache/apex-core/blob/bd67f3d11ca688c2cfc3d985166ab766edcf8fee/engine/src/test/java/com/datatorrent/stram/StreamingContainerManagerTest.java",
                "changes": 36,
                "contents_url": "https://api.github.com/repos/apache/apex-core/contents/engine/src/test/java/com/datatorrent/stram/StreamingContainerManagerTest.java?ref=bd67f3d11ca688c2cfc3d985166ab766edcf8fee",
                "deletions": 0,
                "filename": "engine/src/test/java/com/datatorrent/stram/StreamingContainerManagerTest.java",
                "patch": "@@ -27,13 +27,15 @@\n import com.datatorrent.stram.engine.DefaultUnifier;\n import com.datatorrent.stram.engine.GenericTestOperator;\n import com.datatorrent.stram.engine.TestGeneratorInputOperator;\n+import com.datatorrent.stram.plan.TestPlanContext;\n import com.datatorrent.stram.plan.logical.LogicalPlan;\n import com.datatorrent.stram.plan.logical.LogicalPlan.OperatorMeta;\n import com.datatorrent.stram.plan.physical.OperatorStatus.PortStatus;\n import com.datatorrent.stram.plan.physical.PTContainer;\n import com.datatorrent.stram.plan.physical.PTOperator;\n import com.datatorrent.stram.plan.physical.PhysicalPlan;\n import com.datatorrent.stram.plan.physical.PhysicalPlanTest;\n+import com.datatorrent.stram.support.StramTestSupport;\n import com.datatorrent.stram.support.StramTestSupport.MemoryStorageAgent;\n import com.datatorrent.stram.support.StramTestSupport.TestMeta;\n import com.datatorrent.stram.tuple.Tuple;\n@@ -678,4 +680,38 @@ public void testValidInputOperatorDeployInfoType()\n     OperatorDeployInfo o1DeployInfo = getDeployInfo(scm.getContainerAgent(containerId)).get(0);\n     Assert.assertEquals(\"type \" + o1DeployInfo, OperatorDeployInfo.OperatorType.INPUT, o1DeployInfo.type);\n   }\n+\n+\n+  private void testDownStreamPartition(Locality locality) throws Exception\n+  {\n+    LogicalPlan dag = new LogicalPlan();\n+    TestGeneratorInputOperator o1 = dag.addOperator(\"o1\", TestGeneratorInputOperator.class);\n+    GenericTestOperator o2 = dag.addOperator(\"o2\", GenericTestOperator.class);\n+    dag.setAttribute(o2, OperatorContext.PARTITIONER, new StatelessPartitioner<GenericTestOperator>(2));\n+    dag.addStream(\"o1Output1\", o1.outport, o2.inport1).setLocality(locality);\n+\n+    int maxContainers = 5;\n+    dag.setAttribute(LogicalPlan.CONTAINERS_MAX_COUNT, maxContainers);\n+    dag.setAttribute(OperatorContext.STORAGE_AGENT, new StramTestSupport.MemoryStorageAgent());\n+    dag.validate();\n+    PhysicalPlan plan = new PhysicalPlan(dag, new TestPlanContext());\n+    Assert.assertEquals(\"number of containers\", 1, plan.getContainers().size());\n+\n+    PTContainer container1 = plan.getContainers().get(0);\n+    Assert.assertEquals(\"number operators \" + container1, 3, container1.getOperators().size());\n+    StramLocalCluster slc = new StramLocalCluster(dag);\n+    slc.run(5000);\n+  }\n+\n+  @Test\n+  public void testOIODownstreamPartition() throws Exception\n+  {\n+    testDownStreamPartition(Locality.THREAD_LOCAL);\n+  }\n+\n+  @Test\n+  public void testContainerLocalDownstreamPartition() throws Exception\n+  {\n+    testDownStreamPartition(Locality.CONTAINER_LOCAL);\n+  }\n }",
                "raw_url": "https://github.com/apache/apex-core/raw/bd67f3d11ca688c2cfc3d985166ab766edcf8fee/engine/src/test/java/com/datatorrent/stram/StreamingContainerManagerTest.java",
                "sha": "bc9a42bd5b636f3defb78b7eb4b9a757f4947582",
                "status": "modified"
            }
        ],
        "message": "SPOI-3752 #comment Fixed NPE due to null streamcodec by setting non serializing streamcodec",
        "parent": "https://github.com/apache/apex-core/commit/bee52bd61700e2ea49da6541ddf628de2bac83d0",
        "repo": "apex-core",
        "unit_tests": [
            "StreamingContainerTest.java"
        ]
    },
    "apex-core_c6b3a92": {
        "bug_id": "apex-core_c6b3a92",
        "commit": "https://github.com/apache/apex-core/commit/c6b3a925a408e767796230ff54055fd2d9f19480",
        "file": [
            {
                "additions": 4,
                "blob_url": "https://github.com/apache/apex-core/blob/c6b3a925a408e767796230ff54055fd2d9f19480/engine/src/main/java/com/datatorrent/stram/StreamingContainerManager.java",
                "changes": 4,
                "contents_url": "https://api.github.com/repos/apache/apex-core/contents/engine/src/main/java/com/datatorrent/stram/StreamingContainerManager.java?ref=c6b3a925a408e767796230ff54055fd2d9f19480",
                "deletions": 0,
                "filename": "engine/src/main/java/com/datatorrent/stram/StreamingContainerManager.java",
                "patch": "@@ -1570,6 +1570,10 @@ public void run()\n           entry.getValue().recordingId = null;\n         }\n         for (ContainerStats.OperatorStats stats : statsList) {\n+          if (stats == null) {\n+            LOG.warn(\"Operator {} statistics list contains null element\", shb.getNodeId());\n+            continue;\n+          }\n \n           /* report checkpoint-ed WindowId status of the operator */\n           if (stats.checkpoint instanceof Checkpoint) {",
                "raw_url": "https://github.com/apache/apex-core/raw/c6b3a925a408e767796230ff54055fd2d9f19480/engine/src/main/java/com/datatorrent/stram/StreamingContainerManager.java",
                "sha": "ae7972821adf77a2ad1c8f1b620b1dd3b7b00b17",
                "status": "modified"
            }
        ],
        "message": "APEXCORE-363 - NPE in StreamingContainerManager. Skip null in the statistics list in case it was inserted as a result of incorrect CircularBuffer usage in the OperatorContext.",
        "parent": "https://github.com/apache/apex-core/commit/c2eb06c686e93419764140a0e07b046a73d172be",
        "repo": "apex-core",
        "unit_tests": [
            "StreamingContainerManagerTest.java"
        ]
    },
    "apex-core_f92d4ee": {
        "bug_id": "apex-core_f92d4ee",
        "commit": "https://github.com/apache/apex-core/commit/f92d4ee4e3717cdba545013020551f4f558bb156",
        "file": [
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/apex-core/blob/f92d4ee4e3717cdba545013020551f4f558bb156/engine/src/main/java/com/malhartech/dag/AbstractNode.java",
                "changes": 3,
                "contents_url": "https://api.github.com/repos/apache/apex-core/contents/engine/src/main/java/com/malhartech/dag/AbstractNode.java?ref=f92d4ee4e3717cdba545013020551f4f558bb156",
                "deletions": 1,
                "filename": "engine/src/main/java/com/malhartech/dag/AbstractNode.java",
                "patch": "@@ -317,6 +317,7 @@ final public void activate(NodeContext ctx)\n     long currentWindowId = 0;\n     alive = true;\n \n+    logger.debug(\"activating \" + this);\n     do {\n       shouldWait = true;\n \n@@ -439,7 +440,7 @@ else if (t.getWindowId() == currentWindowId) {\n                  * We need to make sure that the END_STREAM comes outside of the window.\n                  */\n                 totalQueues--;\n-                activeQueues.remove(activePort);\n+                inputs.remove(activePort.id);\n                 if (totalQueues == 0) {\n                   alive = false;\n                 }",
                "raw_url": "https://github.com/apache/apex-core/raw/f92d4ee4e3717cdba545013020551f4f558bb156/engine/src/main/java/com/malhartech/dag/AbstractNode.java",
                "sha": "1ae63a892ff3658cf9e25109dfe324080e833354",
                "status": "modified"
            },
            {
                "additions": 3,
                "blob_url": "https://github.com/apache/apex-core/blob/f92d4ee4e3717cdba545013020551f4f558bb156/engine/src/main/java/com/malhartech/lib/io/HttpOutputNode.java",
                "changes": 4,
                "contents_url": "https://api.github.com/repos/apache/apex-core/contents/engine/src/main/java/com/malhartech/lib/io/HttpOutputNode.java?ref=f92d4ee4e3717cdba545013020551f4f558bb156",
                "deletions": 1,
                "filename": "engine/src/main/java/com/malhartech/lib/io/HttpOutputNode.java",
                "patch": "@@ -60,8 +60,10 @@ public void setup(NodeConfiguration config)  {\n \n   @Override\n   public void teardown() {\n+    if (wsClient != null) {\n+      wsClient.destroy();\n+    }\n     super.teardown();\n-    wsClient.destroy();\n   }\n \n   @Override",
                "raw_url": "https://github.com/apache/apex-core/raw/f92d4ee4e3717cdba545013020551f4f558bb156/engine/src/main/java/com/malhartech/lib/io/HttpOutputNode.java",
                "sha": "eb99c3ef998a553c64edad86187d32bb7fe25f53",
                "status": "modified"
            },
            {
                "additions": 3,
                "blob_url": "https://github.com/apache/apex-core/blob/f92d4ee4e3717cdba545013020551f4f558bb156/engine/src/main/java/com/malhartech/stram/StramLocalCluster.java",
                "changes": 4,
                "contents_url": "https://api.github.com/repos/apache/apex-core/contents/engine/src/main/java/com/malhartech/stram/StramLocalCluster.java?ref=f92d4ee4e3717cdba545013020551f4f558bb156",
                "deletions": 1,
                "filename": "engine/src/main/java/com/malhartech/stram/StramLocalCluster.java",
                "patch": "@@ -116,7 +116,9 @@ public StramToNodeRequest processPartioningDetails() {\n     public LocalStramChild(String containerId, StreamingNodeUmbilicalProtocol umbilical, WindowGenerator wgen)\n     {\n       super(containerId, new Configuration(), umbilical);\n-      super.addWindowGenerator(containerId, wgen);\n+      if (wgen != null) {\n+        super.addWindowGenerator(containerId, wgen);\n+      }\n     }\n \n     @Override",
                "raw_url": "https://github.com/apache/apex-core/raw/f92d4ee4e3717cdba545013020551f4f558bb156/engine/src/main/java/com/malhartech/stram/StramLocalCluster.java",
                "sha": "add6a11e778c14869629d02f0a87478cd41e075c",
                "status": "modified"
            },
            {
                "additions": 4,
                "blob_url": "https://github.com/apache/apex-core/blob/f92d4ee4e3717cdba545013020551f4f558bb156/engine/src/test/resources/clusterTest.tplg.properties",
                "changes": 5,
                "contents_url": "https://api.github.com/repos/apache/apex-core/contents/engine/src/test/resources/clusterTest.tplg.properties?ref=f92d4ee4e3717cdba545013020551f4f558bb156",
                "deletions": 1,
                "filename": "engine/src/test/resources/clusterTest.tplg.properties",
                "patch": "@@ -12,10 +12,13 @@ stram.node.node2.template=nt1\n stram.node.inputNode.classname=com.malhartech.stram.NumberGeneratorInputAdapter\n stram.node.inputNode.maxTuples=10\n \n+stram.node.httpOut.classname=com.malhartech.lib.io.HttpOutputNode\n+stram.node.httpOut.resourceUrl=http://localhost:9999/resourcecontext\n+\n stram.stream.input1.source=inputNode.outputPort\n stram.stream.input1.sinks=node1.input1\n stram.stream.input1.template=streamtempl1\n \n stram.stream.n1n2.source=node1.output1\n-stram.stream.n1n2.sinks=node2.input1\n+stram.stream.n1n2.sinks=node2.input1,httpOut.input\n stram.stream.n1n2.template=streamtempl1",
                "raw_url": "https://github.com/apache/apex-core/raw/f92d4ee4e3717cdba545013020551f4f558bb156/engine/src/test/resources/clusterTest.tplg.properties",
                "sha": "00e7fcaa3e6d0f9925460d2d5074afebecba4d64",
                "status": "modified"
            }
        ],
        "message": "fix npe in local mode and concurrent modification in AbstractNode",
        "parent": "https://github.com/apache/apex-core/commit/17d1b57292de7743d9b66a6a46fd8af9ad53d12b",
        "repo": "apex-core",
        "unit_tests": [
            "StramLocalClusterTest.java"
        ]
    }
}