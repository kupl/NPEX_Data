{
    "ant-ivy_03be6a1": {
        "bug_id": "ant-ivy_03be6a1",
        "commit": "https://github.com/apache/ant-ivy/commit/03be6a16ec7561d643c1d3d91eb31e30514c45ad",
        "file": [
            {
                "additions": 4,
                "blob_url": "https://github.com/apache/ant-ivy/blob/03be6a16ec7561d643c1d3d91eb31e30514c45ad/src/java/org/apache/ivy/plugins/parser/m2/PomModuleDescriptorWriter.java",
                "changes": 4,
                "contents_url": "https://api.github.com/repos/apache/ant-ivy/contents/src/java/org/apache/ivy/plugins/parser/m2/PomModuleDescriptorWriter.java?ref=03be6a16ec7561d643c1d3d91eb31e30514c45ad",
                "deletions": 0,
                "filename": "src/java/org/apache/ivy/plugins/parser/m2/PomModuleDescriptorWriter.java",
                "patch": "@@ -167,6 +167,10 @@ private static void printDependencies(ModuleDescriptor md, PrintWriter out,\n             \n             // now print the dependencies listed in the ModuleDescriptor\n             ConfigurationScopeMapping mapping = options.getMapping();\n+            if (mapping == null) {\n+                mapping = DEFAULT_MAPPING;\n+            }\n+            \n             for (int i = 0; i < dds.length; i++) {\n                 ModuleRevisionId mrid = dds[i].getDependencyRevisionId();\n                 out.println(\"    <dependency>\");",
                "raw_url": "https://github.com/apache/ant-ivy/raw/03be6a16ec7561d643c1d3d91eb31e30514c45ad/src/java/org/apache/ivy/plugins/parser/m2/PomModuleDescriptorWriter.java",
                "sha": "3e4d80de315181937da2f342e26feb641b226e59",
                "status": "modified"
            }
        ],
        "message": "Fixed NPE\n\ngit-svn-id: https://svn.apache.org/repos/asf/ant/ivy/core/trunk@984586 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/ant-ivy/commit/3ce8d6bf0bf163206774946d3581efd039c31036",
        "patched_files": [
            "PomModuleDescriptorWriter.java"
        ],
        "repo": "ant-ivy",
        "unit_tests": [
            "PomModuleDescriptorWriterTest.java"
        ]
    },
    "ant-ivy_05aad8f": {
        "bug_id": "ant-ivy_05aad8f",
        "commit": "https://github.com/apache/ant-ivy/commit/05aad8f60f29be97aae99288775dc6240307bc5c",
        "file": [
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/ant-ivy/blob/05aad8f60f29be97aae99288775dc6240307bc5c/CHANGES.txt",
                "changes": 1,
                "contents_url": "https://api.github.com/repos/apache/ant-ivy/contents/CHANGES.txt?ref=05aad8f60f29be97aae99288775dc6240307bc5c",
                "deletions": 0,
                "filename": "CHANGES.txt",
                "patch": "@@ -76,6 +76,7 @@ for detailed view of each issue, please consult http://issues.apache.org/jira/br\n - IMPROVEMENT: Change allownomd and skipbuildwithoutivy into a more semantically correct name (IVY-297)\n - IMPROVEMENT: Smarter determination if an expression is exact or not for RegexpPatternMatcher and GlobPatternMatcher\n \n+- FIX: NullPointerException during ResovleEngine.downloadArtifacts. (IVY-592)\n - FIX: setting m2compatible on ibiblio resolver overwrite root and pattern settings (IVY-437) (thanks to Jing Xue)\n - FIX: unable to resolve snapshot versions (IVY-501)\n - FIX: No error or warning when a resolver references a non-existent cache (IVY-777)",
                "raw_url": "https://github.com/apache/ant-ivy/raw/05aad8f60f29be97aae99288775dc6240307bc5c/CHANGES.txt",
                "sha": "cf88682d9bb8dd28a9eba591e249f1b9b6786887",
                "status": "modified"
            },
            {
                "additions": 4,
                "blob_url": "https://github.com/apache/ant-ivy/blob/05aad8f60f29be97aae99288775dc6240307bc5c/src/java/org/apache/ivy/ant/IvyArtifactReport.java",
                "changes": 6,
                "contents_url": "https://api.github.com/repos/apache/ant-ivy/contents/src/java/org/apache/ivy/ant/IvyArtifactReport.java?ref=05aad8f60f29be97aae99288775dc6240307bc5c",
                "deletions": 2,
                "filename": "src/java/org/apache/ivy/ant/IvyArtifactReport.java",
                "patch": "@@ -42,6 +42,7 @@\n import org.apache.ivy.core.report.ArtifactDownloadReport;\n import org.apache.ivy.core.resolve.IvyNode;\n import org.apache.ivy.core.resolve.ResolveOptions;\n+import org.apache.ivy.core.resolve.ResolvedModuleRevision;\n import org.apache.ivy.core.retrieve.RetrieveOptions;\n import org.apache.tools.ant.BuildException;\n import org.apache.tools.ant.Project;\n@@ -199,9 +200,10 @@ private void startModule(TransformerHandler saxHandler, IvyNode dependency)\n         moduleAttrs.addAttribute(null, \"organisation\", \"organisation\", \"CDATA\", dependency\n                 .getModuleId().getOrganisation());\n         moduleAttrs.addAttribute(null, \"name\", \"name\", \"CDATA\", dependency.getModuleId().getName());\n-        moduleAttrs.addAttribute(null, \"rev\", \"rev\", \"CDATA\", dependency.getModuleRevision()\n+        ResolvedModuleRevision moduleRevision = dependency.getModuleRevision();\n+        moduleAttrs.addAttribute(null, \"rev\", \"rev\", \"CDATA\", moduleRevision\n                 .getId().getRevision());\n-        moduleAttrs.addAttribute(null, \"status\", \"status\", \"CDATA\", dependency.getModuleRevision()\n+        moduleAttrs.addAttribute(null, \"status\", \"status\", \"CDATA\", moduleRevision\n                 .getDescriptor().getStatus());\n         saxHandler.startElement(null, \"module\", \"module\", moduleAttrs);\n     }",
                "raw_url": "https://github.com/apache/ant-ivy/raw/05aad8f60f29be97aae99288775dc6240307bc5c/src/java/org/apache/ivy/ant/IvyArtifactReport.java",
                "sha": "91edca470005e91bf32a2deaf7f4ef9e448dcedd",
                "status": "modified"
            },
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/ant-ivy/blob/05aad8f60f29be97aae99288775dc6240307bc5c/src/java/org/apache/ivy/core/resolve/ResolveEngine.java",
                "changes": 3,
                "contents_url": "https://api.github.com/repos/apache/ant-ivy/contents/src/java/org/apache/ivy/core/resolve/ResolveEngine.java?ref=05aad8f60f29be97aae99288775dc6240307bc5c",
                "deletions": 1,
                "filename": "src/java/org/apache/ivy/core/resolve/ResolveEngine.java",
                "patch": "@@ -334,7 +334,8 @@ public void downloadArtifacts(\n         for (int i = 0; i < dependencies.length; i++) {\n             checkInterrupted();\n             // download artifacts required in all asked configurations\n-            if (!dependencies[i].isCompletelyEvicted() && !dependencies[i].hasProblem()) {\n+            if (!dependencies[i].isCompletelyEvicted() && !dependencies[i].hasProblem()\n+                    && dependencies[i].getModuleRevision() != null) {\n                 DependencyResolver resolver = dependencies[i].getModuleRevision()\n                         .getArtifactResolver();\n                 Artifact[] selectedArtifacts = dependencies[i].getSelectedArtifacts(artifactFilter);",
                "raw_url": "https://github.com/apache/ant-ivy/raw/05aad8f60f29be97aae99288775dc6240307bc5c/src/java/org/apache/ivy/core/resolve/ResolveEngine.java",
                "sha": "bc43b003522712a2e4b20f569c4f08d08ed2a28f",
                "status": "modified"
            }
        ],
        "message": "FIX: NullPointerException during ResovleEngine.downloadArtifacts. (IVY-592)\n\ngit-svn-id: https://svn.apache.org/repos/asf/ant/ivy/core/trunk@644402 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/ant-ivy/commit/af395c546ec2e331e5ad70ad7601a2711aed962f",
        "patched_files": [
            "IvyArtifactReport.java",
            "ResolveEngine.java"
        ],
        "repo": "ant-ivy",
        "unit_tests": [
            "ResolveEngineTest.java",
            "IvyArtifactReportTest.java"
        ]
    },
    "ant-ivy_1ae9dfa": {
        "bug_id": "ant-ivy_1ae9dfa",
        "commit": "https://github.com/apache/ant-ivy/commit/1ae9dfaf45e0a51ee7d604551f7e1932d1787975",
        "file": [
            {
                "additions": 14,
                "blob_url": "https://github.com/apache/ant-ivy/blob/1ae9dfaf45e0a51ee7d604551f7e1932d1787975/src/java/org/apache/ivy/ant/IvyResolve.java",
                "changes": 24,
                "contents_url": "https://api.github.com/repos/apache/ant-ivy/contents/src/java/org/apache/ivy/ant/IvyResolve.java?ref=1ae9dfaf45e0a51ee7d604551f7e1932d1787975",
                "deletions": 10,
                "filename": "src/java/org/apache/ivy/ant/IvyResolve.java",
                "patch": "@@ -357,17 +357,21 @@ public void doExecute() throws BuildException {\n                     String parentModule = parent.getResolvedParentRevisionId().getName();\n                     String parentRevision = parent.getResolvedParentRevisionId().getRevision();\n                     String parentBranch = parent.getResolvedParentRevisionId().getBranch();\n-                    getProject().setProperty(\"ivy.parent[\"+i+\"].organisation\", parentOrg);\n-                    settings.setVariable(\"ivy.parent[\"+i+\"].organisation\", parentOrg);\n-                    getProject().setProperty(\"ivy.parent[\"+i+\"].module\", parentModule);\n-                    settings.setVariable(\"ivy.parent[\"+i+\"].module\", parentModule);\n-                    getProject().setProperty(\"ivy.parent[\"+i+\"].revision\", parentRevision);\n-                    settings.setVariable(\"ivy.parent[\"+i+\"].revision\", parentRevision);\n-                    getProject().setProperty(\"ivy.parent[\"+i+\"].branch\", parentBranch);\n-                    settings.setVariable(\"ivy.parent[\"+i+\"].branch\", parentBranch);\n+                    getProject().setProperty(\"ivy.parent[\" + i + \"].organisation\", parentOrg);\n+                    settings.setVariable(\"ivy.parent[\" + i + \"].organisation\", parentOrg);\n+                    getProject().setProperty(\"ivy.parent[\" + i + \"].module\", parentModule);\n+                    settings.setVariable(\"ivy.parent[\" + i + \"].module\", parentModule);\n+                    getProject().setProperty(\"ivy.parent[\" + i + \"].revision\", parentRevision);\n+                    settings.setVariable(\"ivy.parent[\" + i + \"].revision\", parentRevision);\n+                    if (parentBranch != null) {\n+                        getProject().setProperty(\"ivy.parent[\" + i + \"].branch\", parentBranch);\n+                        settings.setVariable(\"ivy.parent[\" + i + \"].branch\", parentBranch);\n+                    }\n                 }\n-                getProject().setProperty(\"ivy.parents.count\", String.valueOf(md.getInheritedDescriptors().length));\n-                settings.setVariable(\"ivy.parents.count\", String.valueOf(md.getInheritedDescriptors().length));\n+                getProject().setProperty(\"ivy.parents.count\",\n+                    String.valueOf(md.getInheritedDescriptors().length));\n+                settings.setVariable(\"ivy.parents.count\",\n+                    String.valueOf(md.getInheritedDescriptors().length));\n \n                 Boolean hasChanged = null;\n                 if (getCheckIfChanged()) {",
                "raw_url": "https://github.com/apache/ant-ivy/raw/1ae9dfaf45e0a51ee7d604551f7e1932d1787975/src/java/org/apache/ivy/ant/IvyResolve.java",
                "sha": "c4de8b20106305a5c8d94faca47f7bb216c6fed1",
                "status": "modified"
            }
        ],
        "message": "IVY-1288 : fix NPE when there is no branch\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/ant/ivy/core/trunk@1373369 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/ant-ivy/commit/2e7597726743c34058cf9ad6c6ba5839ff9ec4dd",
        "patched_files": [
            "IvyResolve.java"
        ],
        "repo": "ant-ivy",
        "unit_tests": [
            "IvyResolveTest.java"
        ]
    },
    "ant-ivy_26c458f": {
        "bug_id": "ant-ivy_26c458f",
        "commit": "https://github.com/apache/ant-ivy/commit/26c458f09bc858537d02b3749868e8318b167a68",
        "file": [
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/ant-ivy/blob/26c458f09bc858537d02b3749868e8318b167a68/CHANGES.txt",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/ant-ivy/contents/CHANGES.txt?ref=26c458f09bc858537d02b3749868e8318b167a68",
                "deletions": 0,
                "filename": "CHANGES.txt",
                "patch": "@@ -46,6 +46,7 @@ for detailed view of each issue, please consult http://issues.apache.org/jira/br\n \tScott Hebert\n \tMatt Inger\n \tAnders Janmyr\n+\tSteve Jones\n \tChrister Jonsson\n \tMichael Kebe\n \tMatthias Kilian\n@@ -101,6 +102,7 @@ for detailed view of each issue, please consult http://issues.apache.org/jira/br\n - IMPROVEMENT: Trace a message when a property file referenced from the settings doesn't exixts (IVY-1074)\n - IMPROVEMENT: use defaultconf in combination with defaultconfmapping (IVY-1135) (thanks to Jon Schneider)\n \n+- FIX: Artifact report throws NPE when artifact is not in cache (IVY-1150) (thanks to Steve Jones)\n - FIX: resolve fails for transitive relocated maven modules when the type of the dependency was set to 'jar'\n - FIX: optional dependencies, sources and javadocs aren't resolved when a maven module is relocated\n - FIX: Encountered 'multiple artifacts retrieved to same file' error when module does not have multiple artifacts (IVY-1148)",
                "raw_url": "https://github.com/apache/ant-ivy/raw/26c458f09bc858537d02b3749868e8318b167a68/CHANGES.txt",
                "sha": "b3b730224c67f3a384b0d14ee5c6b73a9535d444",
                "status": "modified"
            },
            {
                "additions": 8,
                "blob_url": "https://github.com/apache/ant-ivy/blob/26c458f09bc858537d02b3749868e8318b167a68/src/java/org/apache/ivy/ant/IvyArtifactReport.java",
                "changes": 15,
                "contents_url": "https://api.github.com/repos/apache/ant-ivy/contents/src/java/org/apache/ivy/ant/IvyArtifactReport.java?ref=26c458f09bc858537d02b3749868e8318b167a68",
                "deletions": 7,
                "filename": "src/java/org/apache/ivy/ant/IvyArtifactReport.java",
                "patch": "@@ -154,8 +154,7 @@ private void generateXml(IvyNode[] dependencies,\n                             startArtifact(saxHandler, artifact.getArtifact());\n \n                             writeOriginLocationIfPresent(cache, saxHandler, artifact);\n-\n-                            writeCacheLocation(cache, saxHandler, artifact);\n+                            writeCacheLocationIfPresent(cache, saxHandler, artifact);\n \n                             Set artifactDestPaths = (Set) artifactsToCopy.get(artifact);\n                             for (Iterator iterator = artifactDestPaths.iterator(); iterator\n@@ -243,14 +242,16 @@ private void writeOriginLocationIfPresent(\n         }\n     }\n \n-    private void writeCacheLocation(RepositoryCacheManager cache, TransformerHandler saxHandler,\n+    private void writeCacheLocationIfPresent(RepositoryCacheManager cache, TransformerHandler saxHandler,\n             ArtifactDownloadReport artifact) throws SAXException {\n         File archiveInCache = artifact.getLocalFile();\n \n-        saxHandler.startElement(null, \"cache-location\", \"cache-location\", new AttributesImpl());\n-        char[] archiveInCacheAsChars = archiveInCache.getPath().replace('\\\\', '/').toCharArray();\n-        saxHandler.characters(archiveInCacheAsChars, 0, archiveInCacheAsChars.length);\n-        saxHandler.endElement(null, \"cache-location\", \"cache-location\");\n+        if (archiveInCache != null) {\n+            saxHandler.startElement(null, \"cache-location\", \"cache-location\", new AttributesImpl());\n+            char[] archiveInCacheAsChars = archiveInCache.getPath().replace('\\\\', '/').toCharArray();\n+            saxHandler.characters(archiveInCacheAsChars, 0, archiveInCacheAsChars.length);\n+            saxHandler.endElement(null, \"cache-location\", \"cache-location\");\n+        }\n     }\n \n     private void writeRetrieveLocation(TransformerHandler saxHandler, String artifactDestPath)",
                "raw_url": "https://github.com/apache/ant-ivy/raw/26c458f09bc858537d02b3749868e8318b167a68/src/java/org/apache/ivy/ant/IvyArtifactReport.java",
                "sha": "905c230dfccd02ddd496f473f89117fbd0aeb50e",
                "status": "modified"
            }
        ],
        "message": "FIX: Artifact report throws NPE when artifact is not in cache (IVY-1150) (thanks to Steve Jones)\n\ngit-svn-id: https://svn.apache.org/repos/asf/ant/ivy/core/trunk@892370 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/ant-ivy/commit/47e26f11f0901db6f132a3328b64dfbcc459a7a0",
        "patched_files": [
            "IvyArtifactReport.java"
        ],
        "repo": "ant-ivy",
        "unit_tests": [
            "IvyArtifactReportTest.java"
        ]
    },
    "ant-ivy_283f77d": {
        "bug_id": "ant-ivy_283f77d",
        "commit": "https://github.com/apache/ant-ivy/commit/283f77d29ab46c5ae47d312455641a0317c58f58",
        "file": [
            {
                "additions": 27,
                "blob_url": "https://github.com/apache/ant-ivy/blob/283f77d29ab46c5ae47d312455641a0317c58f58/src/java/org/apache/ivy/core/resolve/IvyNode.java",
                "changes": 39,
                "contents_url": "https://api.github.com/repos/apache/ant-ivy/contents/src/java/org/apache/ivy/core/resolve/IvyNode.java?ref=283f77d29ab46c5ae47d312455641a0317c58f58",
                "deletions": 12,
                "filename": "src/java/org/apache/ivy/core/resolve/IvyNode.java",
                "patch": "@@ -98,6 +98,10 @@ public int hashCode() {\n             //CheckStyle:MagicNumber| OFF\n             return hash;\n         }\n+        \n+        public String toString() {\n+            return \"NodeConf(\" + conf + \")\";\n+        }\n     }\n \n     // //////// CONTEXT\n@@ -182,14 +186,21 @@ private void init(ResolveData data) {\n      */\n     public boolean loadData(String rootModuleConf, IvyNode parent, String parentConf, String conf,\n             boolean shouldBePublic) {\n+        Message.debug(\"loadData of \" + this.toString() + \" of rootConf=\" + rootModuleConf);\n         if (!isRoot() && (data.getReport() != null)) {\n             data.getReport().addDependency(this);\n         }\n \n         boolean loaded = false;\n-        if (!isEvicted(rootModuleConf)\n-                && (hasConfigurationsToLoad() || !isRootModuleConfLoaded(rootModuleConf))\n-                && !hasProblem()) {\n+        if (hasProblem()) {\n+            Message.debug(\"Node has problem.  Skip loading\");\n+            handleConfiguration(loaded, rootModuleConf, parent, parentConf, conf, shouldBePublic);\n+            return false;\n+        } else if (isEvicted(rootModuleConf)) {\n+            Message.debug(rootModuleConf + \" is evicted.  Skip loading\");\n+        } else if (!hasConfigurationsToLoad() && isRootModuleConfLoaded(rootModuleConf)) {\n+            Message.debug(rootModuleConf + \" is loaded and no conf to load.  Skip loading\");\n+        } else {\n             markRootModuleConfLoaded(rootModuleConf);\n             if (md == null) {\n                 DependencyResolver resolver = data.getSettings().getResolver(getModuleId());\n@@ -309,11 +320,6 @@ public boolean loadData(String rootModuleConf, IvyNode parent, String parentConf\n                 loaded = true;\n             }\n         }\n-        if (hasProblem()) {\n-            return handleConfiguration(loaded, rootModuleConf, parent, parentConf, conf,\n-                shouldBePublic)\n-                    && loaded;\n-        }\n         if (!handleConfiguration(loaded, rootModuleConf, parent, parentConf, conf, shouldBePublic)) {\n             return false;\n         }\n@@ -347,8 +353,7 @@ public Collection getDependencies(String rootModuleConf, String conf, String req\n                     \"impossible to get dependencies when data has not been loaded\");\n         }\n         DependencyDescriptor[] dds = md.getDependencies();\n-        Collection dependencies = new LinkedHashSet(); // it's important to respect dependencies\n-        // order\n+        Collection dependencies = new LinkedHashSet(); // it's important to respect order\n         for (int i = 0; i < dds.length; i++) {\n             DependencyDescriptor dd = dds[i];\n             String[] dependencyConfigurations = dd.getDependencyConfigurations(conf, requestedConf);\n@@ -547,6 +552,7 @@ public Configuration getConfiguration(String conf) {\n         return (String[]) depConfs.toArray(new String[depConfs.size()]);\n     }\n \n+    //This is never called.  Could we remove it?\n     public void discardConf(String rootModuleConf, String conf) {\n         Set depConfs = (Set) rootModuleConfs.get(rootModuleConf);\n         if (depConfs == null) {\n@@ -750,7 +756,13 @@ private void updateMapOfSetForKey(Map from, Map to, Object key) {\n             // no configuration required => no artifact required\n             return new Artifact[0];\n         }\n+        if (md == null) {\n+            throw new IllegalStateException(\n+                    \"impossible to get artefacts when data has not been loaded. IvyNode = \"\n+                    + this.toString());\n+        }\n \n+        \n         Set artifacts = new HashSet(); // the set we fill before returning\n \n         // we check if we have dependencyArtifacts includes description for this rootModuleConf\n@@ -909,7 +921,8 @@ public IvyNode getRoot() {\n     public ConflictManager getConflictManager(ModuleId mid) {\n         if (md == null) {\n             throw new IllegalStateException(\n-                    \"impossible to get conflict manager when data has not been loaded\");\n+                    \"impossible to get conflict manager when data has not been loaded. IvyNode = \"\n+                    + this.toString());\n         }\n         ConflictManager cm = md.getConflictManager(mid);\n         return cm == null ? settings.getConflictManager(mid) : cm;\n@@ -1097,7 +1110,9 @@ public boolean isEvicted(String rootModuleConf) {\n \n     public void markEvicted(String rootModuleConf, IvyNode node, ConflictManager conflictManager,\n             Collection resolved) {\n-        eviction.markEvicted(rootModuleConf, node, conflictManager, resolved);\n+        EvictionData evictionData = new EvictionData(rootModuleConf, node, conflictManager,\n+                resolved);\n+        markEvicted(evictionData);\n     }\n \n     public void setEvictedNodes(ModuleId moduleId, String rootModuleConf, Collection evicted) {",
                "raw_url": "https://github.com/apache/ant-ivy/raw/283f77d29ab46c5ae47d312455641a0317c58f58/src/java/org/apache/ivy/core/resolve/IvyNode.java",
                "sha": "f005cec21122792a4cb64aee1c3a65f1da1528f1",
                "status": "modified"
            },
            {
                "additions": 11,
                "blob_url": "https://github.com/apache/ant-ivy/blob/283f77d29ab46c5ae47d312455641a0317c58f58/src/java/org/apache/ivy/core/resolve/IvyNodeEviction.java",
                "changes": 21,
                "contents_url": "https://api.github.com/repos/apache/ant-ivy/contents/src/java/org/apache/ivy/core/resolve/IvyNodeEviction.java?ref=283f77d29ab46c5ae47d312455641a0317c58f58",
                "deletions": 10,
                "filename": "src/java/org/apache/ivy/core/resolve/IvyNodeEviction.java",
                "patch": "@@ -91,6 +91,10 @@ public Collection getSelected() {\n         public String getRootModuleConf() {\n             return rootModuleConf;\n         }\n+\n+        public boolean isTransitivelyEvicted() {\n+            return parent == null;\n+        }\n     }\n \n     private static final class ModuleIdConf {\n@@ -235,9 +239,13 @@ public void setEvictedNodes(ModuleId moduleId, String rootModuleConf, Collection\n     public boolean isEvicted(String rootModuleConf) {\n         cleanEvicted();\n         IvyNode root = node.getRoot();\n-        return root != node\n-                && !root.getResolvedRevisions(node.getId().getModuleId(), rootModuleConf).contains(\n-                    node.getResolvedId()) && getEvictedData(rootModuleConf) != null;\n+        ModuleId moduleId = node.getId().getModuleId();\n+        Collection resolvedRevisions = root.getResolvedRevisions(moduleId, rootModuleConf);\n+        EvictionData evictedData = getEvictedData(rootModuleConf);\n+        return root != node && evictedData != null \n+            && (!resolvedRevisions.contains(node.getResolvedId())\n+                || evictedData.isTransitivelyEvicted()\n+               );\n     }\n \n     public boolean isCompletelyEvicted() {\n@@ -273,13 +281,6 @@ private void cleanEvicted() {\n         }\n     }\n \n-    public void markEvicted(String rootModuleConf, IvyNode node, ConflictManager conflictManager,\n-            Collection resolved) {\n-        EvictionData evictionData = new EvictionData(rootModuleConf, node, conflictManager,\n-                resolved);\n-        markEvicted(evictionData);\n-    }\n-\n     public void markEvicted(EvictionData evictionData) {\n         evicted.put(evictionData.getRootModuleConf(), evictionData);\n     }",
                "raw_url": "https://github.com/apache/ant-ivy/raw/283f77d29ab46c5ae47d312455641a0317c58f58/src/java/org/apache/ivy/core/resolve/IvyNodeEviction.java",
                "sha": "9e4fb559b9d50b430a90936c62a57c2e9e2ab156",
                "status": "modified"
            },
            {
                "additions": 20,
                "blob_url": "https://github.com/apache/ant-ivy/blob/283f77d29ab46c5ae47d312455641a0317c58f58/src/java/org/apache/ivy/core/resolve/ResolveEngine.java",
                "changes": 39,
                "contents_url": "https://api.github.com/repos/apache/ant-ivy/contents/src/java/org/apache/ivy/core/resolve/ResolveEngine.java?ref=283f77d29ab46c5ae47d312455641a0317c58f58",
                "deletions": 19,
                "filename": "src/java/org/apache/ivy/core/resolve/ResolveEngine.java",
                "patch": "@@ -548,10 +548,11 @@ private void fetchDependencies(VisitNode node, String conf, boolean shouldBePubl\n         } else {\n             Message.verbose(\"== resolving dependencies for \" + node.getId() + \" [\" + conf + \"]\");\n         }\n-        resolveConflict(node);\n+        resolveConflict(node, conf);\n \n         if (node.loadData(conf, shouldBePublic)) {\n-            resolveConflict(node);\n+            resolveConflict(node, conf); //We just did it. Should it be redone? \n+                                   //NB:removing it break a unit test.\n             if (!node.isEvicted()) {\n                 String[] confs = node.getRealConfs(conf);\n                 for (int i = 0; i < confs.length; i++) {\n@@ -672,8 +673,8 @@ private boolean isDependenciesFetched(IvyNode node, String conf) {\n         return false;\n     }\n \n-    private void resolveConflict(VisitNode node) {\n-        resolveConflict(node, node.getParent(), Collections.EMPTY_SET);\n+    private void resolveConflict(VisitNode node, String conf) {\n+        resolveConflict(node, node.getParent(), conf,Collections.EMPTY_SET);\n     }\n \n     /**\n@@ -689,7 +690,8 @@ private void resolveConflict(VisitNode node) {\n      *            descendants of ancestor)\n      * @return true if conflict resolution has been done, false it can't be done yet\n      */\n-    private boolean resolveConflict(VisitNode node, VisitNode ancestor, Collection toevict) {\n+    private boolean resolveConflict(VisitNode node, VisitNode ancestor, String conf,\n+            Collection toevict) {\n         if (ancestor == null || node == ancestor) {\n             return true;\n         }\n@@ -702,7 +704,7 @@ private boolean resolveConflict(VisitNode node, VisitNode ancestor, Collection t\n             // job is done and node is selected, nothing to do for this ancestor, but we still have\n             // to check higher levels, for which conflict resolution might have been impossible\n             // before\n-            if (resolveConflict(node, ancestor.getParent(), toevict)) {\n+            if (resolveConflict(node, ancestor.getParent(), conf, toevict)) {\n                 // now that conflict resolution is ok in ancestors\n                 // we just have to check if the node wasn't previously evicted in root ancestor\n                 EvictionData evictionData = node.getEvictionDataInRoot(node.getRootModuleConf(),\n@@ -730,7 +732,7 @@ private boolean resolveConflict(VisitNode node, VisitNode ancestor, Collection t\n             node.getModuleId(), node.getRootModuleConf()));\n         resolvedNodes.addAll(ancestor.getNode().getPendingConflicts(node.getRootModuleConf(),\n             node.getModuleId()));\n-        Collection conflicts = computeConflicts(node, ancestor, toevict, resolvedNodes);\n+        Collection conflicts = computeConflicts(node, ancestor, conf, toevict, resolvedNodes);\n \n         if (settings.debugConflictResolution()) {\n             Message.debug(\"found conflicting revisions for \" + node + \" in \" + ancestor + \": \"\n@@ -788,7 +790,7 @@ private boolean resolveConflict(VisitNode node, VisitNode ancestor, Collection t\n             ancestor.getNode().setPendingConflicts(node.getModuleId(), node.getRootModuleConf(),\n                 Collections.EMPTY_SET);\n \n-            return resolveConflict(node, ancestor.getParent(), toevict);\n+            return resolveConflict(node, ancestor.getParent(), conf, toevict);\n         } else {\n             // node has been evicted for the current parent\n             if (resolved.isEmpty()) {\n@@ -827,16 +829,16 @@ private boolean resolveConflict(VisitNode node, VisitNode ancestor, Collection t\n                     IvyNode sel = (IvyNode) iter.next();\n                     if (!prevResolved.contains(sel)) {\n                         solved &= resolveConflict(node.gotoNode(sel), ancestor.getParent(),\n-                            toevict);\n+                            conf, toevict);\n                     }\n                 }\n             }\n             return solved;\n         }\n     }\n \n-    private Collection computeConflicts(VisitNode node, VisitNode ancestor, Collection toevict,\n-            Collection resolvedNodes) {\n+    private Collection computeConflicts(VisitNode node, VisitNode ancestor, String conf,\n+            Collection toevict, Collection resolvedNodes) {\n         Collection conflicts = new HashSet();\n         conflicts.add(node.getNode());\n         if (resolvedNodes.removeAll(toevict)) {\n@@ -853,14 +855,13 @@ private Collection computeConflicts(VisitNode node, VisitNode ancestor, Collecti\n                         .addAll(dep.getResolvedNodes(node.getModuleId(), node.getRootModuleConf()));\n             }\n         } else if (resolvedNodes.isEmpty() && node.getParent() != ancestor) {\n-            DependencyDescriptor[] dds = ancestor.getDescriptor().getDependencies();\n-            for (int i = 0; i < dds.length; i++) {\n-                if (dds[i].getDependencyId().equals(node.getModuleId())) {\n-                    IvyNode n = node.getNode().findNode(dds[i].getDependencyRevisionId());\n-                    if (n != null) {\n-                        conflicts.add(n);\n-                        break;\n-                    }\n+            //Conflict must only be computed per root configuration at this step.\n+            Collection ancestorDepIvyNodes = node.getParent().getNode()\n+                        .getDependencies(node.getRootModuleConf(), new String[] {conf});\n+            for (Iterator it = ancestorDepIvyNodes.iterator(); it.hasNext();) {\n+                IvyNode ancestorDep = (IvyNode) it.next();\n+                if (ancestorDep.getModuleId().equals(node.getModuleId())) {\n+                    conflicts.add(ancestorDep);\n                 }\n             }\n         } else {",
                "raw_url": "https://github.com/apache/ant-ivy/raw/283f77d29ab46c5ae47d312455641a0317c58f58/src/java/org/apache/ivy/core/resolve/ResolveEngine.java",
                "sha": "edde0089fea900171f436fe58b2a236ab00d63b6",
                "status": "modified"
            },
            {
                "additions": 6,
                "blob_url": "https://github.com/apache/ant-ivy/blob/283f77d29ab46c5ae47d312455641a0317c58f58/test/java/org/apache/ivy/core/resolve/ResolveTest.java",
                "changes": 20,
                "contents_url": "https://api.github.com/repos/apache/ant-ivy/contents/test/java/org/apache/ivy/core/resolve/ResolveTest.java?ref=283f77d29ab46c5ae47d312455641a0317c58f58",
                "deletions": 14,
                "filename": "test/java/org/apache/ivy/core/resolve/ResolveTest.java",
                "patch": "@@ -18,9 +18,6 @@\n package org.apache.ivy.core.resolve;\n \n import java.io.File;\n-import java.io.IOException;\n-import java.net.MalformedURLException;\n-import java.text.ParseException;\n import java.util.ArrayList;\n import java.util.Arrays;\n import java.util.Collection;\n@@ -35,7 +32,6 @@\n \n import org.apache.ivy.Ivy;\n import org.apache.ivy.TestHelper;\n-import org.apache.ivy.core.IvyContext;\n import org.apache.ivy.core.cache.ArtifactOrigin;\n import org.apache.ivy.core.cache.CacheManager;\n import org.apache.ivy.core.module.descriptor.Artifact;\n@@ -58,9 +54,7 @@\n import org.apache.ivy.plugins.resolver.DualResolver;\n import org.apache.ivy.plugins.resolver.FileSystemResolver;\n import org.apache.ivy.util.CacheCleaner;\n-import org.apache.ivy.util.DefaultMessageLogger;\n import org.apache.ivy.util.FileUtil;\n-import org.apache.ivy.util.Message;\n import org.apache.tools.ant.Project;\n import org.apache.tools.ant.taskdefs.Delete;\n import org.xml.sax.SAXException;\n@@ -675,8 +669,6 @@ public void testResolveMultipleConfsWithConflicts() throws Exception {\n             ModuleRevisionId.newInstance(\"org1\", \"mod1.2\", \"2.1\")).exists());\n         assertTrue(getArchiveFileInCache(\"org1\", \"mod1.2\", \"2.1\", \"mod1.2\", \"jar\", \"jar\").exists());\n \n-        assertFalse(cacheManager.getIvyFileInCache(\n-            ModuleRevisionId.newInstance(\"org1\", \"mod1.2\", \"2.0\")).exists());\n         assertFalse(getArchiveFileInCache(\"org1\", \"mod1.2\", \"2.0\", \"mod1.2\", \"jar\", \"jar\").exists());\n     }\n \n@@ -1474,7 +1466,7 @@ public void testResolveConflictFromPoms() throws Exception {\n     public void testTransitiveEviction() throws Exception {\n         // mod7.3 depends on mod7.2 v1.0 and on mod7.1 v2.0\n         // mod7.2 v1.0 depends on mod7.1 v1.0 (which then should be evicted)\n-        // mod7.1 v1.0 depends on mod 1.2 v1.0 (which should be evicted by transitivity)\n+        // mod7.1 v1.0 depends on mod 1.2 v2.0 (which should be evicted by transitivity)\n \n         ResolveReport report = ivy.resolve(new File(\"test/repositories/2/mod7.3/ivy-1.0.xml\")\n                 .toURL(), getResolveOptions(new String[] {\"*\"}));\n@@ -1495,9 +1487,9 @@ public void testTransitiveEviction() throws Exception {\n             ModuleRevisionId.newInstance(\"org7\", \"mod7.1\", \"2.0\")).exists());\n         assertTrue(getArchiveFileInCache(\"org7\", \"mod7.1\", \"2.0\", \"mod7.1\", \"jar\", \"jar\").exists());\n \n-        assertTrue(!getArchiveFileInCache(\"org7\", \"mod7.1\", \"1.0\", \"mod7.1\", \"jar\", \"jar\").exists());\n+        assertFalse(getArchiveFileInCache(\"org7\", \"mod7.1\", \"1.0\", \"mod7.1\", \"jar\", \"jar\").exists());\n \n-        assertTrue(!getArchiveFileInCache(\"org1\", \"mod1.2\", \"2.0\", \"mod1.2\", \"jar\", \"jar\").exists());\n+        assertFalse(getArchiveFileInCache(\"org1\", \"mod1.2\", \"2.0\", \"mod1.2\", \"jar\", \"jar\").exists());\n     }\n \n     public void testTransitiveEviction2() throws Exception {\n@@ -1753,15 +1745,15 @@ public void testEvictWithConfInMultiConf2() throws Exception {\n                 .newInstance(\"org5\", \"mod5.1\", \"4.2\")).length);\n     }\n \n-    /*\n+    \n     public void testMultipleEviction() throws Exception {\n         \n         ResolveReport report = ivy.resolve(\n             new File(\"test/repositories/1/IVY-644/M1/ivys/ivy-1.0.xml\").toURL(),\n-            getResolveOptions(new String[] {\"*\"}));\n+            getResolveOptions(new String[] {\"test\" , \"runtime\" })); //NB the order impact the bug\n         assertFalse(report.hasError());\n     }\n-    */\n+    \n     \n     public void testResolveForce() throws Exception {\n         // mod4.1 v 4.2 depends on",
                "raw_url": "https://github.com/apache/ant-ivy/raw/283f77d29ab46c5ae47d312455641a0317c58f58/test/java/org/apache/ivy/core/resolve/ResolveTest.java",
                "sha": "021b8c5388c264ce703d6a7866cde59f6d0ec8d6",
                "status": "modified"
            }
        ],
        "message": "IVY-644 fix NPE in case of eviction by 2 modules on 2 different confs mixed with extends\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/ivy/core/trunk@596998 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/ant-ivy/commit/556ccd95c84d75e459d7d21df8c4c10818fad16a",
        "patched_files": [
            "IvyNode.java",
            "IvyNodeEviction.java",
            "ResolveEngine.java"
        ],
        "repo": "ant-ivy",
        "unit_tests": [
            "ResolveEngineTest.java",
            "ResolveTest.java"
        ]
    },
    "ant-ivy_320a562": {
        "bug_id": "ant-ivy_320a562",
        "commit": "https://github.com/apache/ant-ivy/commit/320a562244c9139a129f83addb7e93e8d4d0fdb0",
        "file": [
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/ant-ivy/blob/320a562244c9139a129f83addb7e93e8d4d0fdb0/CHANGES.txt",
                "changes": 1,
                "contents_url": "https://api.github.com/repos/apache/ant-ivy/contents/CHANGES.txt?ref=320a562244c9139a129f83addb7e93e8d4d0fdb0",
                "deletions": 0,
                "filename": "CHANGES.txt",
                "patch": "@@ -77,6 +77,7 @@ for detailed view of each issue, please consult http://issues.apache.org/jira/br\n - IMPROVEMENT: Downgrade Ant version requirement to 1.6 to build Ivy (IVY-687)\n - IMPROVEMENT: In the ResolveReport class, add the possibility to filter the evicted module while getting the list of DownloadArtifact (IVY-704) (thanks to Nicolas Lalev\ufffde)\n \n+- FIX: NullPointerException reported instead of error in ivy:cachepath (IVY-690)\n - FIX: NPE when calling retrieve if some artifacts are not available locally (IVY-712)\n - FIX: When in ssh plugin we does not set username in scheme, Ivy always try to connect with guest username, even if we change one in panel. (IVY-710) (thanks to Ruslan Shevchenko)\n - FIX: NPE in SshCache during publish with ssh resolver without passFile (IVY-709) (thanks to Ruslan Shevchenko)",
                "raw_url": "https://github.com/apache/ant-ivy/raw/320a562244c9139a129f83addb7e93e8d4d0fdb0/CHANGES.txt",
                "sha": "0729fb7b193aaacd65df3f77633e03fd3bb6af81",
                "status": "modified"
            },
            {
                "additions": 8,
                "blob_url": "https://github.com/apache/ant-ivy/blob/320a562244c9139a129f83addb7e93e8d4d0fdb0/src/java/org/apache/ivy/core/resolve/ResolveEngine.java",
                "changes": 19,
                "contents_url": "https://api.github.com/repos/apache/ant-ivy/contents/src/java/org/apache/ivy/core/resolve/ResolveEngine.java?ref=320a562244c9139a129f83addb7e93e8d4d0fdb0",
                "deletions": 11,
                "filename": "src/java/org/apache/ivy/core/resolve/ResolveEngine.java",
                "patch": "@@ -36,6 +36,7 @@\n \n import org.apache.ivy.Ivy;\n import org.apache.ivy.core.IvyContext;\n+import org.apache.ivy.core.LogOptions;\n import org.apache.ivy.core.cache.ResolutionCacheManager;\n import org.apache.ivy.core.event.EventManager;\n import org.apache.ivy.core.event.download.PrepareDownloadEvent;\n@@ -142,24 +143,20 @@ public ResolveReport resolve(URL ivySource) throws ParseException, IOException {\n     public ResolveReport resolve(final ModuleRevisionId mrid, ResolveOptions options,\n             boolean changing) throws ParseException, IOException {\n         DefaultModuleDescriptor md;\n+        ResolveOptions optionsToUse = new ResolveOptions(options);\n \n         if (options.useSpecialConfs()) {\n             // create new resolve options because this is a different resolve than the real resolve\n             // (which will be a resolve of a newCallerInstance module)\n             ResolvedModuleRevision rmr = findModule(mrid, new ResolveOptions(options));\n             if (rmr == null) {\n                 Message.verbose(\"module not found \" + mrid);\n+                \n+                // we will continue the resolve anyway to get a nice error message back\n+                // to the user, however reduce the amount of logging in this case\n+                optionsToUse.setLog(LogOptions.LOG_DOWNLOAD_ONLY);\n                 md = DefaultModuleDescriptor.newCallerInstance(mrid, \n-                    options.getConfs(rmr.getDescriptor()), options.isTransitive(), changing);\n-                return new ResolveReport(md, options.getResolveId()) {\n-                    public boolean hasError() {\n-                        return true;\n-                    }\n-\n-                    public List getProblemMessages() {\n-                        return Arrays.asList(new String[] {\"module not found: \" + mrid});\n-                    }\n-                };\n+                    new String[] {\"default\"}, options.isTransitive(), changing);\n             } else {\n                 String[] confs = options.getConfs(rmr.getDescriptor());\n                 md = DefaultModuleDescriptor.newCallerInstance(ModuleRevisionId.newInstance(mrid,\n@@ -170,7 +167,7 @@ public List getProblemMessages() {\n                 , options.isTransitive(), changing);\n         }\n \n-        return resolve(md, options);\n+        return resolve(md, optionsToUse);\n     }\n \n     /**",
                "raw_url": "https://github.com/apache/ant-ivy/raw/320a562244c9139a129f83addb7e93e8d4d0fdb0/src/java/org/apache/ivy/core/resolve/ResolveEngine.java",
                "sha": "881dada90c442d97f08e4c194af08b4c681ed605",
                "status": "modified"
            },
            {
                "additions": 14,
                "blob_url": "https://github.com/apache/ant-ivy/blob/320a562244c9139a129f83addb7e93e8d4d0fdb0/test/java/org/apache/ivy/ant/IvyResolveTest.java",
                "changes": 14,
                "contents_url": "https://api.github.com/repos/apache/ant-ivy/contents/test/java/org/apache/ivy/ant/IvyResolveTest.java?ref=320a562244c9139a129f83addb7e93e8d4d0fdb0",
                "deletions": 0,
                "filename": "test/java/org/apache/ivy/ant/IvyResolveTest.java",
                "patch": "@@ -116,6 +116,20 @@ public void testInline() throws Exception {\n         assertTrue(getArchiveFileInCache(\"org1\", \"mod1.2\", \"2.0\", \"mod1.2\", \"jar\", \"jar\").exists());\n     }\n \n+    public void testInlineForNonExistingModule() throws Exception {\n+        resolve.setOrganisation(\"org1XX\");\n+        resolve.setModule(\"mod1.2\");\n+        resolve.setRevision(\"2.0\");\n+        resolve.setInline(true);\n+        resolve.setHaltonfailure(false);\n+        resolve.setFailureProperty(\"failure.property\");\n+        resolve.execute();\n+\n+        // the resolve must have failed -> the failure property must be set\n+        String failure = resolve.getProject().getProperty(\"failure.property\");\n+        assertTrue(\"Failure property must have been specified!\", Boolean.valueOf(failure).booleanValue());\n+    }\n+\n     public void testWithSlashes() throws Exception {\n         resolve.setFile(new File(\"test/java/org/apache/ivy/core/resolve/ivy-198.xml\"));\n         resolve.execute();",
                "raw_url": "https://github.com/apache/ant-ivy/raw/320a562244c9139a129f83addb7e93e8d4d0fdb0/test/java/org/apache/ivy/ant/IvyResolveTest.java",
                "sha": "aea817abf0a7a63866d0bdd1bd8671d8d58296ce",
                "status": "modified"
            },
            {
                "additions": 66,
                "blob_url": "https://github.com/apache/ant-ivy/blob/320a562244c9139a129f83addb7e93e8d4d0fdb0/test/java/org/apache/ivy/core/resolve/ResolveEngineTest.java",
                "changes": 66,
                "contents_url": "https://api.github.com/repos/apache/ant-ivy/contents/test/java/org/apache/ivy/core/resolve/ResolveEngineTest.java?ref=320a562244c9139a129f83addb7e93e8d4d0fdb0",
                "deletions": 0,
                "filename": "test/java/org/apache/ivy/core/resolve/ResolveEngineTest.java",
                "patch": "@@ -0,0 +1,66 @@\n+/*\r\n+ *  Licensed to the Apache Software Foundation (ASF) under one or more\r\n+ *  contributor license agreements.  See the NOTICE file distributed with\r\n+ *  this work for additional information regarding copyright ownership.\r\n+ *  The ASF licenses this file to You under the Apache License, Version 2.0\r\n+ *  (the \"License\"); you may not use this file except in compliance with\r\n+ *  the License.  You may obtain a copy of the License at\r\n+ *\r\n+ *      http://www.apache.org/licenses/LICENSE-2.0\r\n+ *\r\n+ *  Unless required by applicable law or agreed to in writing, software\r\n+ *  distributed under the License is distributed on an \"AS IS\" BASIS,\r\n+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n+ *  See the License for the specific language governing permissions and\r\n+ *  limitations under the License.\r\n+ *\r\n+ */\r\n+package org.apache.ivy.core.resolve;\r\n+\r\n+import java.io.File;\r\n+\r\n+import junit.framework.TestCase;\r\n+\r\n+import org.apache.ivy.Ivy;\r\n+import org.apache.ivy.core.module.id.ModuleRevisionId;\r\n+import org.apache.ivy.core.report.ResolveReport;\r\n+import org.apache.ivy.util.CacheCleaner;\r\n+\r\n+public class ResolveEngineTest extends TestCase {\r\n+\r\n+    private Ivy ivy;\r\n+\r\n+    private File cache;\r\n+\r\n+    protected void setUp() throws Exception {\r\n+        cache = new File(\"build/cache\");\r\n+        System.setProperty(\"ivy.cache.dir\", cache.getAbsolutePath());\r\n+        createCache();\r\n+\r\n+        ivy = Ivy.newInstance();\r\n+        ivy.configure(new File(\"test/repositories/ivysettings.xml\"));\r\n+    }\r\n+\r\n+    protected void tearDown() throws Exception {\r\n+        CacheCleaner.deleteDir(cache);\r\n+    }\r\n+\r\n+    public void testInlineResolveWithNonExistingModule() throws Exception {\r\n+        ResolveEngine engine = new ResolveEngine(ivy.getSettings(), \r\n+            ivy.getEventManager(), ivy.getSortEngine());\r\n+        \r\n+        ResolveOptions options = new ResolveOptions();\r\n+        options.setConfs(new String[] {\"*\"});\r\n+        \r\n+        ModuleRevisionId mRevId = ModuleRevisionId.newInstance(\"org1XX\", \"mod1.0XX\", \"1.0XX\");\r\n+        ResolveReport report = engine.resolve(mRevId, options, true);\r\n+        \r\n+        assertNotNull(\"The ResolveReport may never be null\", report);\r\n+        assertTrue(report.hasError());\r\n+        assertTrue(report.getModuleIds().isEmpty());\r\n+    }\r\n+\r\n+    private void createCache() {\r\n+        cache.mkdirs();\r\n+    }\r\n+}\r",
                "raw_url": "https://github.com/apache/ant-ivy/raw/320a562244c9139a129f83addb7e93e8d4d0fdb0/test/java/org/apache/ivy/core/resolve/ResolveEngineTest.java",
                "sha": "5ce380f9c6a69ef0aeeaf207d3143d245e6e28db",
                "status": "added"
            }
        ],
        "message": "FIX: NullPointerException reported instead of error in ivy:cachepath (IVY-690)\n\ngit-svn-id: https://svn.apache.org/repos/asf/ant/ivy/core/trunk@618445 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/ant-ivy/commit/e94b444bb38f3e31e283dc0622f1e466dd2f3144",
        "patched_files": [
            "IvyResolve.java",
            "CHANGES.java",
            "ResolveEngine.java"
        ],
        "repo": "ant-ivy",
        "unit_tests": [
            "ResolveEngineTest.java",
            "IvyResolveTest.java"
        ]
    },
    "ant-ivy_391d296": {
        "bug_id": "ant-ivy_391d296",
        "commit": "https://github.com/apache/ant-ivy/commit/391d296bf5314d8183a17a60564fafa52c3aede7",
        "file": [
            {
                "additions": 4,
                "blob_url": "https://github.com/apache/ant-ivy/blob/391d296bf5314d8183a17a60564fafa52c3aede7/src/java/fr/jayasoft/ivy/resolver/BasicResolver.java",
                "changes": 8,
                "contents_url": "https://api.github.com/repos/apache/ant-ivy/contents/src/java/fr/jayasoft/ivy/resolver/BasicResolver.java?ref=391d296bf5314d8183a17a60564fafa52c3aede7",
                "deletions": 4,
                "filename": "src/java/fr/jayasoft/ivy/resolver/BasicResolver.java",
                "patch": "@@ -160,12 +160,12 @@ public ResolvedModuleRevision getDependency(DependencyDescriptor dd, ResolveData\n                 }\r\n             }\r\n         }\r\n-        if (getIvy().isInterrupted()) {\r\n+        if (getIvy() != null && getIvy().isInterrupted()) {\r\n         \tthrow new RuntimeException(\"interrupted\");\r\n         }\r\n         URL cachedIvyURL = null;\r\n         ResolvedResource ivyRef = findIvyFileRef(dd, data);\r\n-        if (getIvy().isInterrupted()) {\r\n+        if (getIvy() != null && getIvy().isInterrupted()) {\r\n         \tthrow new RuntimeException(\"interrupted\");\r\n         }\r\n         searched = true;\r\n@@ -183,7 +183,7 @@ public ResolvedModuleRevision getDependency(DependencyDescriptor dd, ResolveData\n             parser = XmlModuleDescriptorParser.getInstance();\r\n             md = DefaultModuleDescriptor.newDefaultInstance(mrid, dd.getAllDependencyArtifactsIncludes());\r\n             ResolvedResource artifactRef = findFirstArtifactRef(md, dd, data);\r\n-            if (getIvy().isInterrupted()) {\r\n+            if (getIvy() != null && getIvy().isInterrupted()) {\r\n             \tthrow new RuntimeException(\"interrupted\");\r\n             }\r\n             if (artifactRef == null) {\r\n@@ -688,7 +688,7 @@ public DownloadReport download(Artifact[] artifacts, Ivy ivy, File cache) {\n                 \tMessage.warn(\"\\t[FAILED     ] \"+artifacts[i]+\" : \"+ex.getMessage()+\" (\"+(System.currentTimeMillis()-start)+\"ms)\");\r\n                 \tadr.setDownloadStatus(DownloadStatus.FAILED);\r\n                 }\r\n-                if (getIvy().isInterrupted()) {\r\n+                if (getIvy() != null && getIvy().isInterrupted()) {\r\n                 \tthrow new RuntimeException(\"interrupted\");\r\n                 }\r\n         \t}\r",
                "raw_url": "https://github.com/apache/ant-ivy/raw/391d296bf5314d8183a17a60564fafa52c3aede7/src/java/fr/jayasoft/ivy/resolver/BasicResolver.java",
                "sha": "e8e8cc8cbc7652fa348d9707c670b7721e1775bc",
                "status": "modified"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/ant-ivy/blob/391d296bf5314d8183a17a60564fafa52c3aede7/src/java/fr/jayasoft/ivy/resolver/ChainResolver.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/ant-ivy/contents/src/java/fr/jayasoft/ivy/resolver/ChainResolver.java?ref=391d296bf5314d8183a17a60564fafa52c3aede7",
                "deletions": 1,
                "filename": "src/java/fr/jayasoft/ivy/resolver/ChainResolver.java",
                "patch": "@@ -77,7 +77,7 @@ public ResolvedModuleRevision getDependency(DependencyDescriptor dd, ResolveData\n                     setLatest(resolver, oldLatest);\r\n                 }\r\n             }\r\n-            if (getIvy().isInterrupted()) {\r\n+            if (getIvy() != null && getIvy().isInterrupted()) {\r\n             \tthrow new RuntimeException(\"interrupted\");\r\n             }\r\n             if (mr != null) {\r",
                "raw_url": "https://github.com/apache/ant-ivy/raw/391d296bf5314d8183a17a60564fafa52c3aede7/src/java/fr/jayasoft/ivy/resolver/ChainResolver.java",
                "sha": "a0e7840cb024c1dbcda0caa58f3dd116d029f84e",
                "status": "modified"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/ant-ivy/blob/391d296bf5314d8183a17a60564fafa52c3aede7/src/java/fr/jayasoft/ivy/resolver/DualResolver.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/ant-ivy/contents/src/java/fr/jayasoft/ivy/resolver/DualResolver.java?ref=391d296bf5314d8183a17a60564fafa52c3aede7",
                "deletions": 1,
                "filename": "src/java/fr/jayasoft/ivy/resolver/DualResolver.java",
                "patch": "@@ -57,7 +57,7 @@ public ResolvedModuleRevision getDependency(DependencyDescriptor dd, ResolveData\n         data = new ResolveData(data, doValidate(data));\r\n         final ResolvedModuleRevision mr = _ivyResolver.getDependency(dd, data);\r\n         if (mr == null) {\r\n-            if (getIvy().isInterrupted()) {\r\n+            if (getIvy() != null && getIvy().isInterrupted()) {\r\n             \tthrow new RuntimeException(\"interrupted\");\r\n             }\r\n             if (isAllownomd()) {\r",
                "raw_url": "https://github.com/apache/ant-ivy/raw/391d296bf5314d8183a17a60564fafa52c3aede7/src/java/fr/jayasoft/ivy/resolver/DualResolver.java",
                "sha": "6bbba2701b618d2f962ef9b9805004970d64f7c3",
                "status": "modified"
            }
        ],
        "message": "prevent NPE\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/ivy/trunk@484449 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/ant-ivy/commit/cefe582655f9b3f13191c500bd78304257e10746",
        "patched_files": [
            "DualResolver.java",
            "ChainResolver.java"
        ],
        "repo": "ant-ivy",
        "unit_tests": [
            "ChainResolverTest.java",
            "DualResolverTest.java"
        ]
    },
    "ant-ivy_4b9e05f": {
        "bug_id": "ant-ivy_4b9e05f",
        "commit": "https://github.com/apache/ant-ivy/commit/4b9e05f940da94ce9eacb3e89f900dcb40712fc8",
        "file": [
            {
                "additions": 6,
                "blob_url": "https://github.com/apache/ant-ivy/blob/4b9e05f940da94ce9eacb3e89f900dcb40712fc8/src/java/org/apache/ivy/plugins/parser/m2/PomModuleDescriptorParser.java",
                "changes": 7,
                "contents_url": "https://api.github.com/repos/apache/ant-ivy/contents/src/java/org/apache/ivy/plugins/parser/m2/PomModuleDescriptorParser.java?ref=4b9e05f940da94ce9eacb3e89f900dcb40712fc8",
                "deletions": 1,
                "filename": "src/java/org/apache/ivy/plugins/parser/m2/PomModuleDescriptorParser.java",
                "patch": "@@ -171,7 +171,12 @@ public ModuleDescriptor parseDescriptor(ParserSettings ivySettings, URL descript\n                         domReader.getParentVersion());\n                     ResolvedModuleRevision parentModule = parseOtherPom(ivySettings, \n                         parentModRevID);\n-                    parentDescr = parentModule.getDescriptor();\n+                    if (parentModule != null) {\n+                        parentDescr = parentModule.getDescriptor();\n+                    } else {\n+                       Message.warn(\"impossible to load parent for \" + descriptorURL + \".\"\n+                           + \" Parent=\" + parentModRevID); \n+                    }\n                 }\n                                 \n                 Map pomProperties = domReader.getPomProperties();",
                "raw_url": "https://github.com/apache/ant-ivy/raw/4b9e05f940da94ce9eacb3e89f900dcb40712fc8/src/java/org/apache/ivy/plugins/parser/m2/PomModuleDescriptorParser.java",
                "sha": "c09814483445cefb53293f4f6a4465b765fea19f",
                "status": "modified"
            }
        ],
        "message": "prevent NPE when loading parent pom failed\n\ngit-svn-id: https://svn.apache.org/repos/asf/ant/ivy/core/trunk@635977 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/ant-ivy/commit/3e5b60de4f90c3cffc88e3df769bb4531c0dc89e",
        "patched_files": [
            "PomModuleDescriptorParser.java"
        ],
        "repo": "ant-ivy",
        "unit_tests": [
            "PomModuleDescriptorParserTest.java"
        ]
    },
    "ant-ivy_4f5d252": {
        "bug_id": "ant-ivy_4f5d252",
        "commit": "https://github.com/apache/ant-ivy/commit/4f5d25205a9cec988de300a452d641a155406b79",
        "file": [
            {
                "additions": 4,
                "blob_url": "https://github.com/apache/ant-ivy/blob/4f5d25205a9cec988de300a452d641a155406b79/src/java/org/apache/ivy/plugins/report/XmlReportParser.java",
                "changes": 5,
                "contents_url": "https://api.github.com/repos/apache/ant-ivy/contents/src/java/org/apache/ivy/plugins/report/XmlReportParser.java?ref=4f5d25205a9cec988de300a452d641a155406b79",
                "deletions": 1,
                "filename": "src/java/org/apache/ivy/plugins/report/XmlReportParser.java",
                "patch": "@@ -104,7 +104,10 @@ public void startElement(String uri, String localName, String qName,\n                             realMrids.add(mrid);\n                         }\n                         try {\n-                            pubdate = Ivy.DATE_FORMAT.parse(attributes.getValue(\"pubdate\"));\n+                            String pubDateAttr = attributes.getValue(\"pubdate\");\n+                            if (pubDateAttr != null) {\n+                                pubdate = Ivy.DATE_FORMAT.parse(pubDateAttr);\n+                            }\n                             skip = false;\n                         } catch (ParseException e) {\n                             throw new IllegalArgumentException(\"invalid publication date for \"",
                "raw_url": "https://github.com/apache/ant-ivy/raw/4f5d25205a9cec988de300a452d641a155406b79/src/java/org/apache/ivy/plugins/report/XmlReportParser.java",
                "sha": "d094d112752e01880cdac5ce4018d1320aeb6967",
                "status": "modified"
            }
        ],
        "message": "Avoid NPE if pubdate is null for some reason...\n\ngit-svn-id: https://svn.apache.org/repos/asf/ant/ivy/core/trunk@786260 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/ant-ivy/commit/79ee424b36cbc489b3bef05f6231e81d05f0b5e0",
        "patched_files": [
            "XmlReportParser.java"
        ],
        "repo": "ant-ivy",
        "unit_tests": [
            "XmlReportParserTest.java"
        ]
    },
    "ant-ivy_5121916": {
        "bug_id": "ant-ivy_5121916",
        "commit": "https://github.com/apache/ant-ivy/commit/51219169df2367a8cc1b4a612b6c9d569c29173e",
        "file": [
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/ant-ivy/blob/51219169df2367a8cc1b4a612b6c9d569c29173e/CHANGES.txt",
                "changes": 1,
                "contents_url": "https://api.github.com/repos/apache/ant-ivy/contents/CHANGES.txt?ref=51219169df2367a8cc1b4a612b6c9d569c29173e",
                "deletions": 0,
                "filename": "CHANGES.txt",
                "patch": "@@ -73,6 +73,7 @@ for detailed view of each issue, please consult http://issues.apache.org/jira/br\n - IMPROVEMENT: Parse description and home page from poms (IVY-767)\n - IMPROVEMENT: Smarter determination if an expression is exact or not for RegexpPatternMatcher and GlobPatternMatcher\n \n+- FIX: NPE when specifying both resolveId and inline in an Ivy:Resolve (IVY-776)\n - FIX: repreport task not working against a repository structured by branches (IVY-716)\n - FIX: Ivy reports a conflict when the same file is supposed to be retrieved at the same location twice (or more) (IVY-743)\n - FIX: StackOverflowError when configuration extends itself (IVY-696)",
                "raw_url": "https://github.com/apache/ant-ivy/raw/51219169df2367a8cc1b4a612b6c9d569c29173e/CHANGES.txt",
                "sha": "7b769c5be531c091d2746651daae9a25ce5672e5",
                "status": "modified"
            },
            {
                "additions": 6,
                "blob_url": "https://github.com/apache/ant-ivy/blob/51219169df2367a8cc1b4a612b6c9d569c29173e/src/java/org/apache/ivy/ant/IvyResolve.java",
                "changes": 10,
                "contents_url": "https://api.github.com/repos/apache/ant-ivy/contents/src/java/org/apache/ivy/ant/IvyResolve.java?ref=51219169df2367a8cc1b4a612b6c9d569c29173e",
                "deletions": 4,
                "filename": "src/java/org/apache/ivy/ant/IvyResolve.java",
                "patch": "@@ -299,10 +299,12 @@ public void doExecute() throws BuildException {\n                                 .setProperty(\"ivy.resolved.configurations.\" + resolveId, conf);\n                         settings.setVariable(\"ivy.resolved.configurations.\" + resolveId, conf);\n                     }\n-                    getProject().setProperty(\"ivy.resolved.file.\" + resolveId,\n-                        file.getAbsolutePath());\n-                    settings\n-                            .setVariable(\"ivy.resolved.file.\" + resolveId, file.getAbsolutePath());\n+                    if (file != null) {\n+                        getProject().setProperty(\"ivy.resolved.file.\" + resolveId,\n+                            file.getAbsolutePath());\n+                        settings\n+                                .setVariable(\"ivy.resolved.file.\" + resolveId, file.getAbsolutePath());\n+                    }\n                 }\n             }\n         } catch (MalformedURLException e) {",
                "raw_url": "https://github.com/apache/ant-ivy/raw/51219169df2367a8cc1b4a612b6c9d569c29173e/src/java/org/apache/ivy/ant/IvyResolve.java",
                "sha": "1e2c554eca17ea5dc0a50bf40eeedcf4a8367ede",
                "status": "modified"
            },
            {
                "additions": 16,
                "blob_url": "https://github.com/apache/ant-ivy/blob/51219169df2367a8cc1b4a612b6c9d569c29173e/test/java/org/apache/ivy/ant/IvyResolveTest.java",
                "changes": 16,
                "contents_url": "https://api.github.com/repos/apache/ant-ivy/contents/test/java/org/apache/ivy/ant/IvyResolveTest.java?ref=51219169df2367a8cc1b4a612b6c9d569c29173e",
                "deletions": 0,
                "filename": "test/java/org/apache/ivy/ant/IvyResolveTest.java",
                "patch": "@@ -115,6 +115,22 @@ public void testInline() throws Exception {\n         assertTrue(getArchiveFileInCache(\"org1\", \"mod1.2\", \"2.0\", \"mod1.2\", \"jar\", \"jar\").exists());\n     }\n \n+    public void testInlineWithResolveId() throws Exception {\n+        // same as before, but expressing dependency directly without ivy file\n+        resolve.setOrganisation(\"org1\");\n+        resolve.setModule(\"mod1.2\");\n+        resolve.setRevision(\"2.0\");\n+        resolve.setInline(true);\n+        resolve.setResolveId(\"testInlineWithResolveId\");\n+        resolve.setKeep(true);\n+        resolve.execute();\n+\n+        // dependencies\n+        assertTrue(getIvyFileInCache(ModuleRevisionId.newInstance(\"org1\", \"mod1.2\", \"2.0\"))\n+                .exists());\n+        assertTrue(getArchiveFileInCache(\"org1\", \"mod1.2\", \"2.0\", \"mod1.2\", \"jar\", \"jar\").exists());\n+    }\n+\n     public void testInlineForNonExistingModule() throws Exception {\n         resolve.setOrganisation(\"org1XX\");\n         resolve.setModule(\"mod1.2\");",
                "raw_url": "https://github.com/apache/ant-ivy/raw/51219169df2367a8cc1b4a612b6c9d569c29173e/test/java/org/apache/ivy/ant/IvyResolveTest.java",
                "sha": "57f2e0213b45704161bfe1e881f4a67ea5d84040",
                "status": "modified"
            }
        ],
        "message": "FIX: NPE when specifying both resolveId and inline in an Ivy:Resolve (IVY-776)\n\ngit-svn-id: https://svn.apache.org/repos/asf/ant/ivy/core/trunk@638627 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/ant-ivy/commit/66310f553103e515ab41aa573aaf2e4101efa635",
        "patched_files": [
            "IvyResolve.java",
            "CHANGES.java"
        ],
        "repo": "ant-ivy",
        "unit_tests": [
            "IvyResolveTest.java"
        ]
    },
    "ant-ivy_51d967f": {
        "bug_id": "ant-ivy_51d967f",
        "commit": "https://github.com/apache/ant-ivy/commit/51d967fddb09497e0677b835140c32caf9be1dd4",
        "file": [
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/ant-ivy/blob/51d967fddb09497e0677b835140c32caf9be1dd4/CHANGES.txt",
                "changes": 1,
                "contents_url": "https://api.github.com/repos/apache/ant-ivy/contents/CHANGES.txt?ref=51d967fddb09497e0677b835140c32caf9be1dd4",
                "deletions": 0,
                "filename": "CHANGES.txt",
                "patch": "@@ -86,6 +86,7 @@ for detailed view of each issue, please consult http://issues.apache.org/jira/br\n - IMPROVEMENT: Change allownomd and skipbuildwithoutivy into a more semantically correct name (IVY-297)\n - IMPROVEMENT: Smarter determination if an expression is exact or not for RegexpPatternMatcher and GlobPatternMatcher\n \n+- FIX: NPE in ivy:install if ivy.settings.xml contains custom attribute for a module (IVY-838)\n - FIX: Ivy unit tests fail because 'classifier' attribute of 'artifacts' element is missing in ivy.xsd (IVY-837)\n - FIX: Ivy build system: fix build.xml to allow \"ant coverage-report\" behind a proxy (IVY-832)\n - FIX: NPE in AbstractResolver.exists() if a resource cannot be found (IVY-831)",
                "raw_url": "https://github.com/apache/ant-ivy/raw/51d967fddb09497e0677b835140c32caf9be1dd4/CHANGES.txt",
                "sha": "692fe9c545ee8cae2f4531cbd402254751b72610",
                "status": "modified"
            },
            {
                "additions": 5,
                "blob_url": "https://github.com/apache/ant-ivy/blob/51d967fddb09497e0677b835140c32caf9be1dd4/src/java/org/apache/ivy/plugins/matcher/MapMatcher.java",
                "changes": 7,
                "contents_url": "https://api.github.com/repos/apache/ant-ivy/contents/src/java/org/apache/ivy/plugins/matcher/MapMatcher.java?ref=51d967fddb09497e0677b835140c32caf9be1dd4",
                "deletions": 2,
                "filename": "src/java/org/apache/ivy/plugins/matcher/MapMatcher.java",
                "patch": "@@ -45,11 +45,14 @@ public MapMatcher(Map attributes, PatternMatcher pm) {\n     public boolean matches(Map/*<String,String>*/ m) {\n         for (Iterator iter = matchers.entrySet().iterator(); iter.hasNext();) {\n             Entry entry = (Entry) iter.next();\n-            if (!((Matcher) entry.getValue())\n-                    .matches((String) m.get(entry.getKey()))) {\n+            \n+            Matcher matcher = (Matcher) entry.getValue();\n+            String value = (String) m.get(entry.getKey());\n+            if ((value == null) || !matcher.matches(value)) {\n                 return false;\n             }\n         }\n+        \n         return true;\n     }\n ",
                "raw_url": "https://github.com/apache/ant-ivy/raw/51d967fddb09497e0677b835140c32caf9be1dd4/src/java/org/apache/ivy/plugins/matcher/MapMatcher.java",
                "sha": "a915f3c1bb0f3861210d8b5a25e0965914f46f03",
                "status": "modified"
            },
            {
                "additions": 8,
                "blob_url": "https://github.com/apache/ant-ivy/blob/51d967fddb09497e0677b835140c32caf9be1dd4/test/java/org/apache/ivy/core/settings/XmlSettingsParserTest.java",
                "changes": 8,
                "contents_url": "https://api.github.com/repos/apache/ant-ivy/contents/test/java/org/apache/ivy/core/settings/XmlSettingsParserTest.java?ref=51d967fddb09497e0677b835140c32caf9be1dd4",
                "deletions": 0,
                "filename": "test/java/org/apache/ivy/core/settings/XmlSettingsParserTest.java",
                "patch": "@@ -174,6 +174,14 @@ public void testResolveMode() throws Exception {\n         assertEquals(\"dynamic\", settings.getResolveMode(new ModuleId(\"apache\", \"ivyde\")));\n         assertEquals(\"default\", settings.getResolveMode(new ModuleId(\"apache\", \"ant\")));\n     }\n+    \n+    public void testExtraModuleAttribute() throws Exception {\n+        IvySettings settings = new IvySettings();\n+        XmlSettingsParser parser = new XmlSettingsParser(settings);\n+        parser.parse(XmlSettingsParserTest.class.getResource(\"ivysettings-extra-module-attribute.xml\"));\n+\n+        assertEquals(\"default\", settings.getResolveMode(new ModuleId(\"foo\", \"bar\")));\n+    }\n \n     public void testCache() throws Exception {\n         IvySettings settings = new IvySettings();",
                "raw_url": "https://github.com/apache/ant-ivy/raw/51d967fddb09497e0677b835140c32caf9be1dd4/test/java/org/apache/ivy/core/settings/XmlSettingsParserTest.java",
                "sha": "a7b7605f5f746c8c7a21e608ba44fc456df5b703",
                "status": "modified"
            },
            {
                "additions": 24,
                "blob_url": "https://github.com/apache/ant-ivy/blob/51d967fddb09497e0677b835140c32caf9be1dd4/test/java/org/apache/ivy/core/settings/ivysettings-extra-module-attribute.xml",
                "changes": 24,
                "contents_url": "https://api.github.com/repos/apache/ant-ivy/contents/test/java/org/apache/ivy/core/settings/ivysettings-extra-module-attribute.xml?ref=51d967fddb09497e0677b835140c32caf9be1dd4",
                "deletions": 0,
                "filename": "test/java/org/apache/ivy/core/settings/ivysettings-extra-module-attribute.xml",
                "patch": "@@ -0,0 +1,24 @@\n+<!--\r\n+   Licensed to the Apache Software Foundation (ASF) under one\r\n+   or more contributor license agreements.  See the NOTICE file\r\n+   distributed with this work for additional information\r\n+   regarding copyright ownership.  The ASF licenses this file\r\n+   to you under the Apache License, Version 2.0 (the\r\n+   \"License\"); you may not use this file except in compliance\r\n+   with the License.  You may obtain a copy of the License at\r\n+\r\n+     http://www.apache.org/licenses/LICENSE-2.0\r\n+\r\n+   Unless required by applicable law or agreed to in writing,\r\n+   software distributed under the License is distributed on an\r\n+   \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n+   KIND, either express or implied.  See the License for the\r\n+   specific language governing permissions and limitations\r\n+   under the License.    \r\n+-->\r\n+<ivysettings>\r\n+\t<modules>\r\n+\t\t<module organisation=\"apache\" name=\"ivy\" myattr=\"test.*\" matcher=\"regexp\" resolveMode=\"dynamic\" />\r\n+\t\t<module organisation=\"apache\" name=\".*\" />\r\n+\t</modules>\r\n+</ivysettings>\r",
                "raw_url": "https://github.com/apache/ant-ivy/raw/51d967fddb09497e0677b835140c32caf9be1dd4/test/java/org/apache/ivy/core/settings/ivysettings-extra-module-attribute.xml",
                "sha": "ce34439006e62b34fc607a35538abdab9e17de1b",
                "status": "added"
            }
        ],
        "message": "FIX: NPE in ivy:install if ivy.settings.xml contains custom attribute for a module (IVY-838)\n\ngit-svn-id: https://svn.apache.org/repos/asf/ant/ivy/core/trunk@667269 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/ant-ivy/commit/b5c63335ec25862ffcef6f583888f723d09b200f",
        "patched_files": [
            "ivysettings-extra-module-attribute.java",
            "XmlSettingsParser.java",
            "CHANGES.java",
            "MapMatcher.java"
        ],
        "repo": "ant-ivy",
        "unit_tests": [
            "XmlSettingsParserTest.java"
        ]
    },
    "ant-ivy_5a8ac62": {
        "bug_id": "ant-ivy_5a8ac62",
        "commit": "https://github.com/apache/ant-ivy/commit/5a8ac6281ab6ef236a8742059aae81cfda0c87be",
        "file": [
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/ant-ivy/blob/5a8ac6281ab6ef236a8742059aae81cfda0c87be/CHANGES.txt",
                "changes": 1,
                "contents_url": "https://api.github.com/repos/apache/ant-ivy/contents/CHANGES.txt?ref=5a8ac6281ab6ef236a8742059aae81cfda0c87be",
                "deletions": 0,
                "filename": "CHANGES.txt",
                "patch": "@@ -91,6 +91,7 @@ for detailed view of each issue, please consult http://issues.apache.org/jira/br\n - IMPROVEMENT: Change allownomd and skipbuildwithoutivy into a more semantically correct name (IVY-297)\n - IMPROVEMENT: Smarter determination if an expression is exact or not for RegexpPatternMatcher and GlobPatternMatcher\n \n+- FIX: NPE in Ivy:install task if the repository cache dir has been cleared (IVY-843)\n - FIX: Maven version ranges with ( ) are not supported (IVY-678) (thanks to Michael Kebe)\n - FIX: Ignore maven metadata files when listing revisions (IVY-765)\n - FIX: haltonmissing on publish task does not prevent the other files to be published, even with an atomic publisher (IVY-656)",
                "raw_url": "https://github.com/apache/ant-ivy/raw/5a8ac6281ab6ef236a8742059aae81cfda0c87be/CHANGES.txt",
                "sha": "f71d12a6667f9a1f41e0ea19ce093724216bf9c0",
                "status": "modified"
            },
            {
                "additions": 21,
                "blob_url": "https://github.com/apache/ant-ivy/blob/5a8ac6281ab6ef236a8742059aae81cfda0c87be/src/java/org/apache/ivy/plugins/namespace/NameSpaceHelper.java",
                "changes": 22,
                "contents_url": "https://api.github.com/repos/apache/ant-ivy/contents/src/java/org/apache/ivy/plugins/namespace/NameSpaceHelper.java?ref=5a8ac6281ab6ef236a8742059aae81cfda0c87be",
                "deletions": 1,
                "filename": "src/java/org/apache/ivy/plugins/namespace/NameSpaceHelper.java",
                "patch": "@@ -26,6 +26,7 @@\n import org.apache.ivy.core.module.id.ArtifactId;\n import org.apache.ivy.core.module.id.ModuleId;\n import org.apache.ivy.core.module.id.ModuleRevisionId;\n+import org.apache.ivy.core.report.MetadataArtifactDownloadReport;\n import org.apache.ivy.core.resolve.ResolvedModuleRevision;\n \n public final class NameSpaceHelper {\n@@ -54,7 +55,8 @@ public static ResolvedModuleRevision toSystem(ResolvedModuleRevision rmr, Namesp\n             return rmr;\n         }\n         return new ResolvedModuleRevision(\n-            rmr.getResolver(), rmr.getArtifactResolver(), md, rmr.getReport());\n+            rmr.getResolver(), rmr.getArtifactResolver(), md, \n+            transform(rmr.getReport(), ns.getToSystemTransformer()));\n     }\n \n     public static Artifact transform(Artifact artifact, NamespaceTransformer t) {\n@@ -70,6 +72,24 @@ public static Artifact transform(Artifact artifact, NamespaceTransformer t) {\n                         .getQualifiedExtraAttributes());\n     }\n \n+    public static MetadataArtifactDownloadReport transform(\n+            MetadataArtifactDownloadReport report, NamespaceTransformer t) {\n+        if (t.isIdentity()) {\n+            return report;\n+        }\n+        MetadataArtifactDownloadReport madr = \n+            new MetadataArtifactDownloadReport(transform(report.getArtifact(), t));\n+        madr.setSearched(report.isSearched());\n+        madr.setDownloadStatus(report.getDownloadStatus());\n+        madr.setDownloadDetails(report.getDownloadDetails());\n+        madr.setArtifactOrigin(report.getArtifactOrigin());\n+        madr.setDownloadTimeMillis(report.getDownloadTimeMillis());\n+        madr.setOriginalLocalFile(report.getOriginalLocalFile());\n+        madr.setLocalFile(report.getLocalFile());\n+        madr.setSize(report.getSize());\n+        return madr;\n+    }\n+\n     public static ArtifactId transform(ArtifactId artifactId, NamespaceTransformer t) {\n         if (t.isIdentity()) {\n             return artifactId;",
                "raw_url": "https://github.com/apache/ant-ivy/raw/5a8ac6281ab6ef236a8742059aae81cfda0c87be/src/java/org/apache/ivy/plugins/namespace/NameSpaceHelper.java",
                "sha": "fb9636d7c32372c2e27bc61de51dd50c434e2587",
                "status": "modified"
            },
            {
                "additions": 5,
                "blob_url": "https://github.com/apache/ant-ivy/blob/5a8ac6281ab6ef236a8742059aae81cfda0c87be/src/java/org/apache/ivy/plugins/resolver/AbstractResolver.java",
                "changes": 5,
                "contents_url": "https://api.github.com/repos/apache/ant-ivy/contents/src/java/org/apache/ivy/plugins/resolver/AbstractResolver.java?ref=5a8ac6281ab6ef236a8742059aae81cfda0c87be",
                "deletions": 0,
                "filename": "src/java/org/apache/ivy/plugins/resolver/AbstractResolver.java",
                "patch": "@@ -40,6 +40,7 @@\n import org.apache.ivy.core.report.ArtifactDownloadReport;\n import org.apache.ivy.core.report.DownloadReport;\n import org.apache.ivy.core.report.DownloadStatus;\n+import org.apache.ivy.core.report.MetadataArtifactDownloadReport;\n import org.apache.ivy.core.resolve.DownloadOptions;\n import org.apache.ivy.core.resolve.IvyNode;\n import org.apache.ivy.core.resolve.ResolveData;\n@@ -290,6 +291,10 @@ protected Artifact toSystem(Artifact artifact) {\n         return NameSpaceHelper.transform(artifact, getNamespace().getToSystemTransformer());\n     }\n \n+    protected MetadataArtifactDownloadReport toSystem(MetadataArtifactDownloadReport report) {\n+        return NameSpaceHelper.transform(report, getNamespace().getToSystemTransformer());\n+    }\n+\n     protected ResolvedModuleRevision toSystem(ResolvedModuleRevision rmr) {\n         return NameSpaceHelper.toSystem(rmr, getNamespace());\n     }",
                "raw_url": "https://github.com/apache/ant-ivy/raw/5a8ac6281ab6ef236a8742059aae81cfda0c87be/src/java/org/apache/ivy/plugins/resolver/AbstractResolver.java",
                "sha": "c96d889c3cda33e104389f04ce2e2bff9d2fc9f8",
                "status": "modified"
            },
            {
                "additions": 4,
                "blob_url": "https://github.com/apache/ant-ivy/blob/5a8ac6281ab6ef236a8742059aae81cfda0c87be/src/java/org/apache/ivy/plugins/resolver/BasicResolver.java",
                "changes": 15,
                "contents_url": "https://api.github.com/repos/apache/ant-ivy/contents/src/java/org/apache/ivy/plugins/resolver/BasicResolver.java?ref=5a8ac6281ab6ef236a8742059aae81cfda0c87be",
                "deletions": 11,
                "filename": "src/java/org/apache/ivy/plugins/resolver/BasicResolver.java",
                "patch": "@@ -241,7 +241,8 @@ public ResolvedModuleRevision getDependency(DependencyDescriptor dde, ResolveDat\n                         throw new UnresolvedDependencyException();\n                     }\n                 }\n-                if (!rmr.getReport().isDownloaded()) {\n+                if (!rmr.getReport().isDownloaded() \n+                        && rmr.getReport().getLocalFile() != null) {\n                     return toSystem(rmr);\n                 } else {\n                     nsMd = rmr.getDescriptor();\n@@ -264,16 +265,8 @@ public ResolvedModuleRevision getDependency(DependencyDescriptor dde, ResolveDat\n                             checkDescriptorConsistency(systemMrid, systemMd, ivyRef);\n                         }\n                     }\n-                    MetadataArtifactDownloadReport madr = \n-                        new MetadataArtifactDownloadReport(systemMd.getMetadataArtifact());\n-                    madr.setDownloadStatus(rmr.getReport().getDownloadStatus());\n-                    madr.setDownloadDetails(rmr.getReport().getDownloadDetails());\n-                    madr.setArtifactOrigin(rmr.getReport().getArtifactOrigin());\n-                    madr.setDownloadTimeMillis(rmr.getReport().getDownloadTimeMillis());\n-                    madr.setSize(rmr.getReport().getSize());\n-                    madr.setOriginalLocalFile(rmr.getReport().getOriginalLocalFile());\n-                    madr.setSearched(true);\n-                    rmr = new ResolvedModuleRevision(this, this, systemMd, madr);\n+                    rmr = new ResolvedModuleRevision(\n+                        this, this, systemMd, toSystem(rmr.getReport()));\n                 }\n             }\n ",
                "raw_url": "https://github.com/apache/ant-ivy/raw/5a8ac6281ab6ef236a8742059aae81cfda0c87be/src/java/org/apache/ivy/plugins/resolver/BasicResolver.java",
                "sha": "15ff50fbf19a936ba1207fc36664de8c25303d5e",
                "status": "modified"
            },
            {
                "additions": 20,
                "blob_url": "https://github.com/apache/ant-ivy/blob/5a8ac6281ab6ef236a8742059aae81cfda0c87be/test/java/org/apache/ivy/ant/IvyInstallTest.java",
                "changes": 20,
                "contents_url": "https://api.github.com/repos/apache/ant-ivy/contents/test/java/org/apache/ivy/ant/IvyInstallTest.java?ref=5a8ac6281ab6ef236a8742059aae81cfda0c87be",
                "deletions": 0,
                "filename": "test/java/org/apache/ivy/ant/IvyInstallTest.java",
                "patch": "@@ -59,6 +59,7 @@ private void cleanCache() {\n \n     private void cleanInstall() {\n         FileUtil.forceDelete(new File(\"build/test/install\"));\n+        FileUtil.forceDelete(new File(\"build/test/install2\"));\n     }\n \n     public void testInstallDummyDefault() {\n@@ -81,6 +82,25 @@ public void testInstallDummyDefault() {\n         assertTrue(new File(\"build/test/install/org1/mod1.2/mod1.2-2.2.jar\").exists());\n     }\n \n+    public void testIVY843() {\n+        project.setProperty(\"ivy.settings.file\", \"test/repositories/ivysettings-IVY843.xml\");\n+        install.setOrganisation(\"org1\");\n+        install.setModule(\"mod1.4\");\n+        install.setRevision(\"1.0.1\");\n+        install.setFrom(\"test\");\n+        install.setTo(\"install\");\n+\n+        install.execute();\n+        \n+        cleanCache();\n+        \n+        install.setFrom(\"install\");\n+        install.setTo(\"install2\");\n+        install.execute();\n+\n+        assertTrue(new File(\"build/test/install2/org1/mod1.4/ivy-1.0.1.xml\").exists());\n+    }\n+\n     public void testInstallWithBranch() {\n         project.setProperty(\"ivy.settings.file\", \"test/repositories/branches/ivysettings.xml\");\n         install.setOrganisation(\"foo\");",
                "raw_url": "https://github.com/apache/ant-ivy/raw/5a8ac6281ab6ef236a8742059aae81cfda0c87be/test/java/org/apache/ivy/ant/IvyInstallTest.java",
                "sha": "b6717eb22e258ae1e7c5e631eef25732f0fcea79",
                "status": "modified"
            },
            {
                "additions": 52,
                "blob_url": "https://github.com/apache/ant-ivy/blob/5a8ac6281ab6ef236a8742059aae81cfda0c87be/test/repositories/ivysettings-IVY843.xml",
                "changes": 52,
                "contents_url": "https://api.github.com/repos/apache/ant-ivy/contents/test/repositories/ivysettings-IVY843.xml?ref=5a8ac6281ab6ef236a8742059aae81cfda0c87be",
                "deletions": 0,
                "filename": "test/repositories/ivysettings-IVY843.xml",
                "patch": "@@ -0,0 +1,52 @@\n+<!--\n+   Licensed to the Apache Software Foundation (ASF) under one\n+   or more contributor license agreements.  See the NOTICE file\n+   distributed with this work for additional information\n+   regarding copyright ownership.  The ASF licenses this file\n+   to you under the Apache License, Version 2.0 (the\n+   \"License\"); you may not use this file except in compliance\n+   with the License.  You may obtain a copy of the License at\n+\n+     http://www.apache.org/licenses/LICENSE-2.0\n+\n+   Unless required by applicable law or agreed to in writing,\n+   software distributed under the License is distributed on an\n+   \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+   KIND, either express or implied.  See the License for the\n+   specific language governing permissions and limitations\n+   under the License.    \n+-->\n+<ivysettings>\n+\t<properties file=\"${ivy.settings.dir}/ivysettings.properties\" />\n+\t<settings defaultResolver=\"dummy\" />\n+\t<caches defaultCacheDir=\"${cache.dir}\" useOrigin=\"true\" />\n+\t<resolvers>\n+\t\t<chain name=\"test\">\n+\t\t\t<filesystem name=\"1\">\n+\t\t\t\t<ivy pattern=\"${ivy.settings.dir}/1/[organisation]/[module]/ivys/ivy-[revision].xml\"/>\n+\t\t\t\t<artifact pattern=\"${ivy.settings.dir}/1/[organisation]/[module]/[type]s/[artifact]-[revision].[ext]\"/>\n+\t\t\t</filesystem>\n+\t\t\t<dual name=\"2\">\n+\t\t\t\t<filesystem name=\"2-ivy\">\n+\t\t\t\t\t<ivy pattern=\"${ivy.settings.dir}/2/[module]/ivy-[revision].xml\"/>\n+\t\t\t\t</filesystem>\n+\t\t\t\t<filesystem name=\"2-artifact\">\n+\t\t\t\t\t<artifact pattern=\"${ivy.settings.dir}/2/[module]/[artifact]-[revision].[ext]\"/>\n+\t\t\t\t\t<artifact pattern=\"${ivy.settings.dir}/2/[module]/[artifact].[ext]\"/>\n+\t\t\t\t</filesystem>\n+\t\t\t</dual>\n+\t\t</chain>\n+\t\t<filesystem name=\"dummy\">\n+\t\t\t<ivy pattern=\"dummy/[organisation]/[module]/[artifact]-[revision].[ext]\"/>\n+\t\t\t<artifact pattern=\"dummy/[organisation]/[module]/[artifact]-[revision].[ext]\"/>\n+\t\t</filesystem>\n+\t\t<filesystem name=\"install\">\n+\t\t\t<ivy pattern=\"build/test/install/[organisation]/[module]/[artifact]-[revision].[ext]\"/>\n+\t\t\t<artifact pattern=\"build/test/install/[organisation]/[module]/[artifact]-[revision].[ext]\"/>\n+\t\t</filesystem>\n+\t\t<filesystem name=\"install2\">\n+\t\t\t<ivy pattern=\"build/test/install2/[organisation]/[module]/[artifact]-[revision].[ext]\"/>\n+\t\t\t<artifact pattern=\"build/test/install2/[organisation]/[module]/[artifact]-[revision].[ext]\"/>\n+\t\t</filesystem>\n+\t</resolvers>\n+</ivysettings>",
                "raw_url": "https://github.com/apache/ant-ivy/raw/5a8ac6281ab6ef236a8742059aae81cfda0c87be/test/repositories/ivysettings-IVY843.xml",
                "sha": "ff38e2ecb23d7c0e573bcd951ba0083e2bbe367e",
                "status": "added"
            }
        ],
        "message": "FIX: NPE in Ivy:install task if the repository cache dir has been cleared (IVY-843)\n\ngit-svn-id: https://svn.apache.org/repos/asf/ant/ivy/core/trunk@673998 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/ant-ivy/commit/ae6d4c23378e2c2ebf9d72a88278a7e91d1be88a",
        "patched_files": [
            "NameSpaceHelper.java",
            "ivysettings-IVY843.java",
            "BasicResolver.java",
            "CHANGES.java",
            "IvyInstall.java",
            "AbstractResolver.java"
        ],
        "repo": "ant-ivy",
        "unit_tests": [
            "IvyInstallTest.java",
            "NameSpaceHelperTest.java"
        ]
    },
    "ant-ivy_5fe1d58": {
        "bug_id": "ant-ivy_5fe1d58",
        "commit": "https://github.com/apache/ant-ivy/commit/5fe1d584d0be0dfa750259944fe81d43d8f8e095",
        "file": [
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/ant-ivy/blob/5fe1d584d0be0dfa750259944fe81d43d8f8e095/CHANGES.txt",
                "changes": 1,
                "contents_url": "https://api.github.com/repos/apache/ant-ivy/contents/CHANGES.txt?ref=5fe1d584d0be0dfa750259944fe81d43d8f8e095",
                "deletions": 0,
                "filename": "CHANGES.txt",
                "patch": "@@ -84,6 +84,7 @@ for detailed view of each issue, please consult http://issues.apache.org/jira/br\n - IMPROVEMENT: Error messages on use of relative paths can be cyrptic (IVY-909)\n - IMPROVEMENT: Maven accepts illegal XML for its pom's, Ivy not (IVY-921)\n \n+- FIX: NullPointerException when Ivy cannot locate pom parent (IVY-927)\n - FIX: Cannot configure items with java.io.File attributes (IVY-905)\n - FIX: Environment properties in ivy settings are no longer resolved (IVY-907)\n - FIX: Resolve failed on certain proxy environment (IVY-911)",
                "raw_url": "https://github.com/apache/ant-ivy/raw/5fe1d584d0be0dfa750259944fe81d43d8f8e095/CHANGES.txt",
                "sha": "7e7bbb5291b6559dc4434395f4d6ec3a9a78e1e2",
                "status": "modified"
            },
            {
                "additions": 8,
                "blob_url": "https://github.com/apache/ant-ivy/blob/5fe1d584d0be0dfa750259944fe81d43d8f8e095/src/java/org/apache/ivy/plugins/parser/m2/PomModuleDescriptorParser.java",
                "changes": 15,
                "contents_url": "https://api.github.com/repos/apache/ant-ivy/contents/src/java/org/apache/ivy/plugins/parser/m2/PomModuleDescriptorParser.java?ref=5fe1d584d0be0dfa750259944fe81d43d8f8e095",
                "deletions": 7,
                "filename": "src/java/org/apache/ivy/plugins/parser/m2/PomModuleDescriptorParser.java",
                "patch": "@@ -137,13 +137,14 @@ public ModuleDescriptor parseDescriptor(ParserSettings ivySettings, URL descript\n                    Message.warn(\"impossible to load parent for \" + descriptorURL + \".\"\n                        + \" Parent=\" + parentModRevID); \n                 }\n-                \n-                Map parentPomProps = PomModuleDescriptorBuilder.extractPomProperties(\n-                                                                parentDescr.getExtraInfo());\n-                for (Iterator iter = parentPomProps.entrySet().iterator(); iter.hasNext();) {\n-                    Map.Entry prop = (Map.Entry) iter.next();\n-                    domReader.setProperty((String) prop.getKey(), (String) prop.getValue());\n-                }                    \n+                if (parentDescr != null) {\n+                    Map parentPomProps = PomModuleDescriptorBuilder.extractPomProperties(\n+                        parentDescr.getExtraInfo());\n+                    for (Iterator iter = parentPomProps.entrySet().iterator(); iter.hasNext();) {\n+                        Map.Entry prop = (Map.Entry) iter.next();\n+                        domReader.setProperty((String) prop.getKey(), (String) prop.getValue());\n+                    }                    \n+                }\n             }\n                             \n             String groupId = domReader.getGroupId();",
                "raw_url": "https://github.com/apache/ant-ivy/raw/5fe1d584d0be0dfa750259944fe81d43d8f8e095/src/java/org/apache/ivy/plugins/parser/m2/PomModuleDescriptorParser.java",
                "sha": "1a5bb83b498c9552b8205946ac9fe4887afd07ab",
                "status": "modified"
            }
        ],
        "message": "FIX: NullPointerException when Ivy cannot locate pom parent (IVY-927)\n\ngit-svn-id: https://svn.apache.org/repos/asf/ant/ivy/core/trunk@700792 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/ant-ivy/commit/7aa5ba380ef6aea0f2f594873b4c7378adab0f18",
        "patched_files": [
            "PomModuleDescriptorParser.java"
        ],
        "repo": "ant-ivy",
        "unit_tests": [
            "PomModuleDescriptorParserTest.java"
        ]
    },
    "ant-ivy_6526a5e": {
        "bug_id": "ant-ivy_6526a5e",
        "commit": "https://github.com/apache/ant-ivy/commit/6526a5e83c1fb9644da34e44fdc5a3bb8a357c84",
        "file": [
            {
                "additions": 7,
                "blob_url": "https://github.com/apache/ant-ivy/blob/6526a5e83c1fb9644da34e44fdc5a3bb8a357c84/src/java/org/apache/ivy/util/url/BasicURLHandler.java",
                "changes": 12,
                "contents_url": "https://api.github.com/repos/apache/ant-ivy/contents/src/java/org/apache/ivy/util/url/BasicURLHandler.java?ref=6526a5e83c1fb9644da34e44fdc5a3bb8a357c84",
                "deletions": 5,
                "filename": "src/java/org/apache/ivy/util/url/BasicURLHandler.java",
                "patch": "@@ -108,11 +108,13 @@ public static String getCharSetFromContentType(String contentType) {\n \n         String charSet = null;\n \n-        String[] elements = contentType.split(\";\");\n-        for (int i = 0; i < elements.length; i++) {\n-            String element = elements[i].trim();\n-            if (element.toLowerCase().startsWith(\"charset=\")) {\n-                charSet = element.substring(\"charset=\".length());\n+        if (contentType != null) {\n+            String[] elements = contentType.split(\";\");\n+            for (int i = 0; i < elements.length; i++) {\n+                String element = elements[i].trim();\n+                if (element.toLowerCase().startsWith(\"charset=\")) {\n+                    charSet = element.substring(\"charset=\".length());\n+                }\n             }\n         }\n ",
                "raw_url": "https://github.com/apache/ant-ivy/raw/6526a5e83c1fb9644da34e44fdc5a3bb8a357c84/src/java/org/apache/ivy/util/url/BasicURLHandler.java",
                "sha": "d9f1cca54a833be1ff36c24c4c649c54a13bae59",
                "status": "modified"
            }
        ],
        "message": "fix NPE: some server seems to not return any content type\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/ant/ivy/core/trunk@1398334 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/ant-ivy/commit/fd9a406ee4cfa64b8ff4e898564d20ad142a8765",
        "patched_files": [
            "BasicURLHandler.java"
        ],
        "repo": "ant-ivy",
        "unit_tests": [
            "BasicURLHandlerTest.java"
        ]
    },
    "ant-ivy_7126e67": {
        "bug_id": "ant-ivy_7126e67",
        "commit": "https://github.com/apache/ant-ivy/commit/7126e673ceb6ff1fbac0ad53f82b268685cee9ff",
        "file": [
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/ant-ivy/blob/7126e673ceb6ff1fbac0ad53f82b268685cee9ff/CHANGES.txt",
                "changes": 3,
                "contents_url": "https://api.github.com/repos/apache/ant-ivy/contents/CHANGES.txt?ref=7126e673ceb6ff1fbac0ad53f82b268685cee9ff",
                "deletions": 1,
                "filename": "CHANGES.txt",
                "patch": "@@ -16,7 +16,8 @@ for detailed view of each issue, please consult http://jira.jayasoft.org/\n - IMPROVE: Add a unit test to verify that latest.integration accepts released modules (IVY-394) (thanks to Gilles Scokart)\r\n - IMPROVE: New \"modules in use\" section in console report at the end of resolve (IVY-373) (thanks to John Wiliams)\r\n \r\n-- FIX:  FileUtil#copy(File src, File dest, CopyProgressListener l, boolean overwrite) (IVY-420)\r\n+- FIX: NPE when no organisation or no name is provided in module element of ivyconf (IVY-422)\r\n+- FIX: FileUtil#copy(File src, File dest, CopyProgressListener l, boolean overwrite) (IVY-420)\r\n - FIX: Ivy doesn't recognize maven2 classifiers (IVY-418)\r\n - FIX: Static revision replacement is not working when delivering an artifact with a dependency having extra attributes (IVY-415)\r\n - FIX: Static revision replacement is not working when delivering an artifact with a dependency on a branch (IVY-404)\r",
                "raw_url": "https://github.com/apache/ant-ivy/raw/7126e673ceb6ff1fbac0ad53f82b268685cee9ff/CHANGES.txt",
                "sha": "c9ce3f049166c17e98e304a5bb59729d641bcbf1",
                "status": "modified"
            },
            {
                "additions": 6,
                "blob_url": "https://github.com/apache/ant-ivy/blob/7126e673ceb6ff1fbac0ad53f82b268685cee9ff/src/java/org/apache/ivy/core/module/id/ModuleId.java",
                "changes": 8,
                "contents_url": "https://api.github.com/repos/apache/ant-ivy/contents/src/java/org/apache/ivy/core/module/id/ModuleId.java?ref=7126e673ceb6ff1fbac0ad53f82b268685cee9ff",
                "deletions": 2,
                "filename": "src/java/org/apache/ivy/core/module/id/ModuleId.java",
                "patch": "@@ -49,14 +49,18 @@ public boolean equals(Object obj) {\n             return false;\r\n         }\r\n         ModuleId other = (ModuleId)obj;\r\n-        return other._organisation.equals(_organisation) && other._name.equals(_name);\r\n+        if (other._organisation == null) {\r\n+        \treturn _organisation == null && other._name.equals(_name);\r\n+        } else {\r\n+        \treturn other._organisation.equals(_organisation) && other._name.equals(_name);\r\n+        }\r\n     }\r\n     public int hashCode() {\r\n         return _hash;\r\n     }\r\n     public int _hashCode() {\r\n         int hash = 31;\r\n-        hash = hash * 13 + _organisation.hashCode();\r\n+        hash = hash * 13 + (_organisation == null ? 0 : _organisation.hashCode());\r\n         hash = hash * 13 + _name.hashCode();\r\n         return hash;\r\n     }\r",
                "raw_url": "https://github.com/apache/ant-ivy/raw/7126e673ceb6ff1fbac0ad53f82b268685cee9ff/src/java/org/apache/ivy/core/module/id/ModuleId.java",
                "sha": "fc60cb288f3daae0872fba3de1fc2be75977489f",
                "status": "modified"
            },
            {
                "additions": 9,
                "blob_url": "https://github.com/apache/ant-ivy/blob/7126e673ceb6ff1fbac0ad53f82b268685cee9ff/src/java/org/apache/ivy/core/settings/XmlSettingsParser.java",
                "changes": 10,
                "contents_url": "https://api.github.com/repos/apache/ant-ivy/contents/src/java/org/apache/ivy/core/settings/XmlSettingsParser.java?ref=7126e673ceb6ff1fbac0ad53f82b268685cee9ff",
                "deletions": 1,
                "filename": "src/java/org/apache/ivy/core/settings/XmlSettingsParser.java",
                "patch": "@@ -296,10 +296,18 @@ public void startElement(String uri, String localName, String qName, Attributes\n                 String cm = _ivy.substitute((String)attributes.get(\"conflict-manager\"));\r\n                 String matcher = _ivy.substitute((String)attributes.get(\"matcher\"));\r\n                 matcher = matcher == null ? PatternMatcher.EXACT_OR_REGEXP : matcher;\r\n+                if (organisation == null) {\r\n+                    throw new IllegalArgumentException(\"'organisation' is mandatory in module element: check your configuration\");\r\n+                }\r\n+                if (module == null) {\r\n+                    throw new IllegalArgumentException(\"'name' is mandatory in module element: check your configuration\");\r\n+                }\r\n                 _ivy.addModuleConfiguration(new ModuleId(organisation, module), _ivy.getMatcher(matcher), resolver, branch, cm);\r\n             }\r\n-        } catch (Exception ex) {\r\n+        } catch (ParseException ex) {\r\n             throw new SAXException(\"problem in config file: \"+ex.getMessage(), ex);\r\n+        } catch (IOException ex) {\r\n+            throw new SAXException(\"io problem while parsing config file: \"+ex.getMessage(), ex);\r\n         }\r\n     }\r\n \r",
                "raw_url": "https://github.com/apache/ant-ivy/raw/7126e673ceb6ff1fbac0ad53f82b268685cee9ff/src/java/org/apache/ivy/core/settings/XmlSettingsParser.java",
                "sha": "e7a43ad9fbafe411ef6a3c4fd33ec9ff3ec00559",
                "status": "modified"
            },
            {
                "additions": 4,
                "blob_url": "https://github.com/apache/ant-ivy/blob/7126e673ceb6ff1fbac0ad53f82b268685cee9ff/src/java/org/apache/ivy/plugins/matcher/ModuleIdMatcher.java",
                "changes": 5,
                "contents_url": "https://api.github.com/repos/apache/ant-ivy/contents/src/java/org/apache/ivy/plugins/matcher/ModuleIdMatcher.java?ref=7126e673ceb6ff1fbac0ad53f82b268685cee9ff",
                "deletions": 1,
                "filename": "src/java/org/apache/ivy/plugins/matcher/ModuleIdMatcher.java",
                "patch": "@@ -29,7 +29,10 @@\n     public ModuleIdMatcher(ModuleId mid, PatternMatcher pm) {\r\n         _mid = mid;\r\n         _pm = pm;\r\n-        _orgMatcher = pm.getMatcher(mid.getOrganisation());\r\n+        _orgMatcher = pm.getMatcher(\r\n+        \t\tmid.getOrganisation()==null?\r\n+        \t\t\t\tPatternMatcher.ANY_EXPRESSION\r\n+        \t\t\t\t:mid.getOrganisation());\r\n         _moduleMatcher = pm.getMatcher(mid.getName());\r\n     }\r\n     \r",
                "raw_url": "https://github.com/apache/ant-ivy/raw/7126e673ceb6ff1fbac0ad53f82b268685cee9ff/src/java/org/apache/ivy/plugins/matcher/ModuleIdMatcher.java",
                "sha": "d3cfb8ca52535111235bc6c0f733d661153dbf92",
                "status": "modified"
            },
            {
                "additions": 24,
                "blob_url": "https://github.com/apache/ant-ivy/blob/7126e673ceb6ff1fbac0ad53f82b268685cee9ff/test/java/org/apache/ivy/core/settings/XmlSettingsParserTest.java",
                "changes": 24,
                "contents_url": "https://api.github.com/repos/apache/ant-ivy/contents/test/java/org/apache/ivy/core/settings/XmlSettingsParserTest.java?ref=7126e673ceb6ff1fbac0ad53f82b268685cee9ff",
                "deletions": 0,
                "filename": "test/java/org/apache/ivy/core/settings/XmlSettingsParserTest.java",
                "patch": "@@ -18,6 +18,8 @@\n package org.apache.ivy.core.settings;\r\n \r\n import java.io.File;\r\n+import java.io.IOException;\r\n+import java.text.ParseException;\r\n import java.util.List;\r\n \r\n import junit.framework.TestCase;\r\n@@ -100,6 +102,28 @@ public void test() throws Exception {\n         assertEquals(\"int1\", settings.getResolver(new ModuleId(\"apache\", \"ivy\")).getName());\r\n         assertEquals(\"int1\", settings.getResolver(new ModuleId(\"apache\", \"ivyde\")).getName());        \r\n     }\r\n+    \r\n+    public void testNoOrgInModule() throws Exception {\r\n+        IvySettings settings = new IvySettings();\r\n+        XmlSettingsParser parser = new XmlSettingsParser(settings);\r\n+        try {\r\n+\t\t\tparser.parse(XmlSettingsParserTest.class.getResource(\"ivyconf-no-org-in-module.xml\"));\r\n+\t\t\tfail(\"no organisation in module is supposed to raise an exception\");\r\n+\t\t} catch (ParseException e) {\r\n+\t\t\tassertTrue(\"bad exception message: \"+e.getMessage(), e.getMessage().indexOf(\"'organisation'\") != -1);\r\n+\t\t}\r\n+    }\r\n+\r\n+    public void testNoNameInModule() throws Exception {\r\n+        IvySettings settings = new IvySettings();\r\n+        XmlSettingsParser parser = new XmlSettingsParser(settings);\r\n+        try {\r\n+\t\t\tparser.parse(XmlSettingsParserTest.class.getResource(\"ivyconf-no-name-in-module.xml\"));\r\n+\t\t\tfail(\"no name in module is supposed to raise an exception\");\r\n+\t\t} catch (ParseException e) {\r\n+\t\t\tassertTrue(\"bad exception message: \"+e.getMessage(), e.getMessage().indexOf(\"'name'\") != -1);\r\n+\t\t}\r\n+    }\r\n \r\n     public void testTypedef() throws Exception {\r\n     \tIvySettings settings = new IvySettings();\r",
                "raw_url": "https://github.com/apache/ant-ivy/raw/7126e673ceb6ff1fbac0ad53f82b268685cee9ff/test/java/org/apache/ivy/core/settings/XmlSettingsParserTest.java",
                "sha": "7f06f34d070784c0ae29d20bd1b959f8838888bb",
                "status": "modified"
            },
            {
                "additions": 5,
                "blob_url": "https://github.com/apache/ant-ivy/blob/7126e673ceb6ff1fbac0ad53f82b268685cee9ff/test/java/org/apache/ivy/core/settings/ivyconf-no-name-in-module.xml",
                "changes": 5,
                "contents_url": "https://api.github.com/repos/apache/ant-ivy/contents/test/java/org/apache/ivy/core/settings/ivyconf-no-name-in-module.xml?ref=7126e673ceb6ff1fbac0ad53f82b268685cee9ff",
                "deletions": 0,
                "filename": "test/java/org/apache/ivy/core/settings/ivyconf-no-name-in-module.xml",
                "patch": "@@ -0,0 +1,5 @@\n+<ivyconf>\r\n+\t<modules>\r\n+\t\t<module organisation=\".*\" branch=\"internal\"/>\r\n+\t</modules>\r\n+</ivyconf>\r",
                "raw_url": "https://github.com/apache/ant-ivy/raw/7126e673ceb6ff1fbac0ad53f82b268685cee9ff/test/java/org/apache/ivy/core/settings/ivyconf-no-name-in-module.xml",
                "sha": "e57fdbbb42a097c38e75c80975d3ebcd9dbdd65e",
                "status": "added"
            },
            {
                "additions": 5,
                "blob_url": "https://github.com/apache/ant-ivy/blob/7126e673ceb6ff1fbac0ad53f82b268685cee9ff/test/java/org/apache/ivy/core/settings/ivyconf-no-org-in-module.xml",
                "changes": 5,
                "contents_url": "https://api.github.com/repos/apache/ant-ivy/contents/test/java/org/apache/ivy/core/settings/ivyconf-no-org-in-module.xml?ref=7126e673ceb6ff1fbac0ad53f82b268685cee9ff",
                "deletions": 0,
                "filename": "test/java/org/apache/ivy/core/settings/ivyconf-no-org-in-module.xml",
                "patch": "@@ -0,0 +1,5 @@\n+<ivyconf>\r\n+\t<modules>\r\n+\t\t<module name=\".*\" branch=\"internal\"/>\r\n+\t</modules>\r\n+</ivyconf>\r",
                "raw_url": "https://github.com/apache/ant-ivy/raw/7126e673ceb6ff1fbac0ad53f82b268685cee9ff/test/java/org/apache/ivy/core/settings/ivyconf-no-org-in-module.xml",
                "sha": "08b1681c4c43a8e4e3c67cee0a7599329fa8ed13",
                "status": "added"
            }
        ],
        "message": "FIX: NPE when no organisation or no name is provided in module element of ivyconf (IVY-422)\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/ivy/core/trunk@516010 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/ant-ivy/commit/de07bb13f0a395c2c9b7469b13736e0212eebcca",
        "patched_files": [
            "CHANGES.java",
            "ivyconf-no-name-in-module.java",
            "ModuleIdMatcher.java",
            "XmlSettingsParser.java",
            "ModuleId.java",
            "ivyconf-no-org-in-module.java"
        ],
        "repo": "ant-ivy",
        "unit_tests": [
            "XmlSettingsParserTest.java"
        ]
    },
    "ant-ivy_7217b9d": {
        "bug_id": "ant-ivy_7217b9d",
        "commit": "https://github.com/apache/ant-ivy/commit/7217b9d270e31fe1e68803c8e25b0a03869f1556",
        "file": [
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/ant-ivy/blob/7217b9d270e31fe1e68803c8e25b0a03869f1556/doc/release-notes.html",
                "changes": 1,
                "contents_url": "https://api.github.com/repos/apache/ant-ivy/contents/doc/release-notes.html?ref=7217b9d270e31fe1e68803c8e25b0a03869f1556",
                "deletions": 0,
                "filename": "doc/release-notes.html",
                "patch": "@@ -58,6 +58,7 @@ <h2>List of Changes in this Release</h2>\n  \n List of changes since Ivy 2.4.0:\n \n+- FIX: NullPointerException in dependencytree with no dependencies (IVY-1539)\n - FIX: checkIfChanged is not settable attribute for checkdepsupdate ant task (IVY-1549)\n - FIX: ArrayIndexOutOfBoundsException when using a p2 repository for dependencies (IVY-1504)\n - FIX: fixdeps remove transitive 'kept' dependencies",
                "raw_url": "https://github.com/apache/ant-ivy/raw/7217b9d270e31fe1e68803c8e25b0a03869f1556/doc/release-notes.html",
                "sha": "bb8d3e8bd5d0f87c261fe105282a14070636f1ac",
                "status": "modified"
            },
            {
                "additions": 4,
                "blob_url": "https://github.com/apache/ant-ivy/blob/7217b9d270e31fe1e68803c8e25b0a03869f1556/src/java/org/apache/ivy/ant/IvyDependencyTree.java",
                "changes": 5,
                "contents_url": "https://api.github.com/repos/apache/ant-ivy/contents/src/java/org/apache/ivy/ant/IvyDependencyTree.java?ref=7217b9d270e31fe1e68803c8e25b0a03869f1556",
                "deletions": 1,
                "filename": "src/java/org/apache/ivy/ant/IvyDependencyTree.java",
                "patch": "@@ -49,7 +49,10 @@ public void doExecute() throws BuildException {\n             IvyNode dependency = (IvyNode) iterator.next();\n             populateDependencyTree(dependency, mrid, report);\n         }\n-        printDependencies((List) dependencies.get(mrid), 0);\n+        List dependencyList = (List) dependencies.get(mrid);\n+        if (dependencyList != null) {\n+            printDependencies(dependencyList, 0);\n+        }\n     }\n \n     private void printDependencies(List/* <IvyNode> */dependencyList, int indent) {",
                "raw_url": "https://github.com/apache/ant-ivy/raw/7217b9d270e31fe1e68803c8e25b0a03869f1556/src/java/org/apache/ivy/ant/IvyDependencyTree.java",
                "sha": "bb7c2797985fe2e2077f12711976bdc55d4372dd",
                "status": "modified"
            },
            {
                "additions": 7,
                "blob_url": "https://github.com/apache/ant-ivy/blob/7217b9d270e31fe1e68803c8e25b0a03869f1556/test/java/org/apache/ivy/ant/IvyDependencyTreeTest.java",
                "changes": 7,
                "contents_url": "https://api.github.com/repos/apache/ant-ivy/contents/test/java/org/apache/ivy/ant/IvyDependencyTreeTest.java?ref=7217b9d270e31fe1e68803c8e25b0a03869f1556",
                "deletions": 0,
                "filename": "test/java/org/apache/ivy/ant/IvyDependencyTreeTest.java",
                "patch": "@@ -51,6 +51,13 @@ public void testSimple() throws Exception {\n         assertLogContaining(\"\\\\- org1#mod1.2;2.0\");\n     }\n \n+    public void testEmpty() throws Exception {\n+        dependencyTree.setFile(new File(\"test/java/org/apache/ivy/ant/ivy-empty.xml\"));\n+        dependencyTree.execute();\n+        assertLogContaining(\"Dependency tree for apache-resolve-empty\");\n+        assertLogNotContaining(\"\\\\-\");\n+    }\n+\n     public void testWithResolveId() throws Exception {\n         IvyResolve resolve = new IvyResolve();\n         resolve.setProject(project);",
                "raw_url": "https://github.com/apache/ant-ivy/raw/7217b9d270e31fe1e68803c8e25b0a03869f1556/test/java/org/apache/ivy/ant/IvyDependencyTreeTest.java",
                "sha": "adfe37c3f00d4e4db60357a510adcbd64b5dcc03",
                "status": "modified"
            },
            {
                "additions": 26,
                "blob_url": "https://github.com/apache/ant-ivy/blob/7217b9d270e31fe1e68803c8e25b0a03869f1556/test/java/org/apache/ivy/ant/ivy-empty.xml",
                "changes": 26,
                "contents_url": "https://api.github.com/repos/apache/ant-ivy/contents/test/java/org/apache/ivy/ant/ivy-empty.xml?ref=7217b9d270e31fe1e68803c8e25b0a03869f1556",
                "deletions": 0,
                "filename": "test/java/org/apache/ivy/ant/ivy-empty.xml",
                "patch": "@@ -0,0 +1,26 @@\n+<!--\n+   Licensed to the Apache Software Foundation (ASF) under one\n+   or more contributor license agreements.  See the NOTICE file\n+   distributed with this work for additional information\n+   regarding copyright ownership.  The ASF licenses this file\n+   to you under the Apache License, Version 2.0 (the\n+   \"License\"); you may not use this file except in compliance\n+   with the License.  You may obtain a copy of the License at\n+\n+     http://www.apache.org/licenses/LICENSE-2.0\n+\n+   Unless required by applicable law or agreed to in writing,\n+   software distributed under the License is distributed on an\n+   \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+   KIND, either express or implied.  See the License for the\n+   specific language governing permissions and limitations\n+   under the License.    \n+-->\n+<ivy-module version=\"1.0\"> \n+\t<info organisation=\"apache\"\n+\t       module=\"resolve-empty\"\n+\t       revision=\"1.0\"\n+\t       status=\"release\"\n+\t/>\n+\t<dependencies />\n+</ivy-module>",
                "raw_url": "https://github.com/apache/ant-ivy/raw/7217b9d270e31fe1e68803c8e25b0a03869f1556/test/java/org/apache/ivy/ant/ivy-empty.xml",
                "sha": "48c8759bd667b546d73ff9374bcd5353b28328fd",
                "status": "added"
            }
        ],
        "message": "Fix NullPointerException in dependencytree with no dependencies (IVY-1539)",
        "parent": "https://github.com/apache/ant-ivy/commit/f463013f34a5c5c61b7dba22c9ed4096fbd3b218",
        "patched_files": [
            "IvyDependencyTree.java",
            "ivy-empty.java",
            "release-notes.java"
        ],
        "repo": "ant-ivy",
        "unit_tests": [
            "IvyDependencyTreeTest.java"
        ]
    },
    "ant-ivy_79e8ea9": {
        "bug_id": "ant-ivy_79e8ea9",
        "commit": "https://github.com/apache/ant-ivy/commit/79e8ea94db5f613b1d0d69bffb45eda968a41f04",
        "file": [
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/ant-ivy/blob/79e8ea94db5f613b1d0d69bffb45eda968a41f04/CHANGES.txt",
                "changes": 1,
                "contents_url": "https://api.github.com/repos/apache/ant-ivy/contents/CHANGES.txt?ref=79e8ea94db5f613b1d0d69bffb45eda968a41f04",
                "deletions": 0,
                "filename": "CHANGES.txt",
                "patch": "@@ -85,6 +85,7 @@ for detailed view of each issue, please consult http://issues.apache.org/jira/br\n =====================================\n - FIX: Log levels aren't respected in certain cases using the standalone functionality (IVY-960) (thanks to Patrick Woodworth)\n - FIX: Listing of URL's under a given URL does not handle fully specified URL's (IVY-959) (thanks to Randy Nott)\n+- FIX: NPE in LogReportOutputter (IVY-961)\n \n    2.0.0-rc2\n =====================================",
                "raw_url": "https://github.com/apache/ant-ivy/raw/79e8ea94db5f613b1d0d69bffb45eda968a41f04/CHANGES.txt",
                "sha": "a2c130afbab71a62421cc21346cdf6171cd5f389",
                "status": "modified"
            },
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/ant-ivy/blob/79e8ea94db5f613b1d0d69bffb45eda968a41f04/src/java/org/apache/ivy/plugins/report/LogReportOutputter.java",
                "changes": 3,
                "contents_url": "https://api.github.com/repos/apache/ant-ivy/contents/src/java/org/apache/ivy/plugins/report/LogReportOutputter.java?ref=79e8ea94db5f613b1d0d69bffb45eda968a41f04",
                "deletions": 1,
                "filename": "src/java/org/apache/ivy/plugins/report/LogReportOutputter.java",
                "patch": "@@ -48,6 +48,7 @@ public void output(\n             ResolveReport report, ResolutionCacheManager cacheMgr, ResolveOptions options) \n             throws IOException {\n         IvySettings settings = IvyContext.getContext().getSettings();\n+\n         if (settings.logModulesInUse() && ResolveOptions.LOG_DEFAULT.equals(options.getLog())) {\n             Message.info(\"\\t:: modules in use:\");\n             List dependencies = new ArrayList(report.getDependencies());\n@@ -56,7 +57,7 @@ public void output(\n                 String[] confs = report.getConfigurations();\n                 for (int i = 0; i < dependencies.size(); i++) {\n                     IvyNode node = (IvyNode) dependencies.get(i);\n-                    if (node.isCompletelyEvicted()) {\n+                    if (node.isCompletelyEvicted() || node.hasProblem()) {\n                         continue;\n                     }\n                     List nodeConfs = new ArrayList(confs.length);",
                "raw_url": "https://github.com/apache/ant-ivy/raw/79e8ea94db5f613b1d0d69bffb45eda968a41f04/src/java/org/apache/ivy/plugins/report/LogReportOutputter.java",
                "sha": "35aa519a6e65dd0fc3c99ec746fc832e988cf058",
                "status": "modified"
            },
            {
                "additions": 10,
                "blob_url": "https://github.com/apache/ant-ivy/blob/79e8ea94db5f613b1d0d69bffb45eda968a41f04/test/java/org/apache/ivy/ant/IvyResolveTest.java",
                "changes": 10,
                "contents_url": "https://api.github.com/repos/apache/ant-ivy/contents/test/java/org/apache/ivy/ant/IvyResolveTest.java?ref=79e8ea94db5f613b1d0d69bffb45eda968a41f04",
                "deletions": 0,
                "filename": "test/java/org/apache/ivy/ant/IvyResolveTest.java",
                "patch": "@@ -241,6 +241,16 @@ public void testFailure() throws Exception {\n         }\n     }\n \n+    public void testIvyLogModulesInUseWithFailure() throws Exception {\n+        resolve.getProject().setProperty(\"ivy.log.modules.in.use\", \"true\");\n+        resolve.setFile(new File(\"test/java/org/apache/ivy/ant/ivy-failure.xml\"));\n+        resolve.setHaltonfailure(false);\n+        resolve.execute();\n+        \n+        // we did manage to get here, so no NPE has been thrown (IVY-961)\n+    }\n+\n+    \n     public void testFailureWithMissingConfigurations() throws Exception {\n         try {\n             resolve.setFile(new File(\"test/java/org/apache/ivy/ant/ivy-simple.xml\"));",
                "raw_url": "https://github.com/apache/ant-ivy/raw/79e8ea94db5f613b1d0d69bffb45eda968a41f04/test/java/org/apache/ivy/ant/IvyResolveTest.java",
                "sha": "c0e09784d7c2f96b85496923c996153abe8ebb86",
                "status": "modified"
            }
        ],
        "message": "FIX: NPE in LogReportOutputter (IVY-961)\n\ngit-svn-id: https://svn.apache.org/repos/asf/ant/ivy/core/trunk@710178 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/ant-ivy/commit/cc06ae9bf7a1fb6cee46c40d2a6388ac05d3f5d1",
        "patched_files": [
            "LogReportOutputter.java",
            "IvyResolve.java",
            "CHANGES.java"
        ],
        "repo": "ant-ivy",
        "unit_tests": [
            "IvyResolveTest.java"
        ]
    },
    "ant-ivy_902a680": {
        "bug_id": "ant-ivy_902a680",
        "commit": "https://github.com/apache/ant-ivy/commit/902a680951f318488a4bbe0184a3a223c5709b01",
        "file": [
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/ant-ivy/blob/902a680951f318488a4bbe0184a3a223c5709b01/CHANGES.txt",
                "changes": 1,
                "contents_url": "https://api.github.com/repos/apache/ant-ivy/contents/CHANGES.txt?ref=902a680951f318488a4bbe0184a3a223c5709b01",
                "deletions": 0,
                "filename": "CHANGES.txt",
                "patch": "@@ -153,6 +153,7 @@ for detailed view of each issue, please consult http://issues.apache.org/jira/br\n - FIX: The SSH resolvers fails if the un-required jsch jar is missing (IVY-1471)\n - FIX: failed to resolve dynamic revisions in some cases for URL repositories (IVY-1472)\n - FIX: ClassCastException in Eclipse 4.4.1 (IVY-1487) (Thanks to Carsten Pfeiffer)\n+- FIX: NullPointerException when accessing charset to invalid URL (IVY-1452) (Thanks to Fr\u00e9d\u00e9ric Riviere)\n \n    2.4.0-rc1\n =====================================",
                "raw_url": "https://github.com/apache/ant-ivy/raw/902a680951f318488a4bbe0184a3a223c5709b01/CHANGES.txt",
                "sha": "4d18a9df045c47af07c78a3d6eea5f63149e8052",
                "status": "modified"
            },
            {
                "additions": 8,
                "blob_url": "https://github.com/apache/ant-ivy/blob/902a680951f318488a4bbe0184a3a223c5709b01/src/java/org/apache/ivy/util/url/ApacheURLLister.java",
                "changes": 9,
                "contents_url": "https://api.github.com/repos/apache/ant-ivy/contents/src/java/org/apache/ivy/util/url/ApacheURLLister.java?ref=902a680951f318488a4bbe0184a3a223c5709b01",
                "deletions": 1,
                "filename": "src/java/org/apache/ivy/util/url/ApacheURLLister.java",
                "patch": "@@ -29,6 +29,7 @@\n \n import org.apache.ivy.util.FileUtil;\n import org.apache.ivy.util.Message;\n+import org.apache.ivy.util.url.URLHandler.URLInfo;\n \n /**\n  * Utility class which helps to list urls under a given url. This has been tested with Apache 1.3.33\n@@ -108,7 +109,13 @@ public List retrieveListing(URL url, boolean includeFiles, boolean includeDirect\n         }\n \n         URLHandler urlHandler = URLHandlerRegistry.getDefault();\n-        String charset = urlHandler.getURLInfo(url).getBodyCharset();\n+        URLInfo urlInfo = urlHandler.getURLInfo(url);\n+        if (urlInfo == URLHandler.UNAVAILABLE) {\n+            return urlList; // not found => return empty list\n+        }\n+        // here, urlInfo is valid\n+        String charset = urlInfo.getBodyCharset();\n+\n         InputStream contentStream = urlHandler.openStream(url);\n         BufferedReader r = new BufferedReader(new InputStreamReader(contentStream, charset));\n ",
                "raw_url": "https://github.com/apache/ant-ivy/raw/902a680951f318488a4bbe0184a3a223c5709b01/src/java/org/apache/ivy/util/url/ApacheURLLister.java",
                "sha": "2df69b08407c9f91deb14cb968e69c547fb2eb03",
                "status": "modified"
            }
        ],
        "message": "IVY-1452: NullPointerException when accessing charset to invalid URL (Thanks to Fr\u00e9d\u00e9ric Riviere)",
        "parent": "https://github.com/apache/ant-ivy/commit/9f5f0c09886964b75a9804b08ec77ee5bf72e902",
        "patched_files": [
            "ApacheURLLister.java"
        ],
        "repo": "ant-ivy",
        "unit_tests": [
            "ApacheURLListerTest.java"
        ]
    },
    "ant-ivy_9bf25f5": {
        "bug_id": "ant-ivy_9bf25f5",
        "commit": "https://github.com/apache/ant-ivy/commit/9bf25f5b4c33634393fedc8f97d6ffd53480f548",
        "file": [
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/ant-ivy/blob/9bf25f5b4c33634393fedc8f97d6ffd53480f548/CHANGES.txt",
                "changes": 1,
                "contents_url": "https://api.github.com/repos/apache/ant-ivy/contents/CHANGES.txt?ref=9bf25f5b4c33634393fedc8f97d6ffd53480f548",
                "deletions": 0,
                "filename": "CHANGES.txt",
                "patch": "@@ -51,6 +51,7 @@ for detailed view of each issue, please consult http://issues.apache.org/jira/br\n \n    version in SVN\n =====================================\n+- FIX: NullPointerException whilst resolving transitive dependencies (IVY-590)\n - FIX: cachepath based on a resolve done in a previous build broken (IVY-583)\n \n - IMPROVEMENT: artifactproperty should not overwrite the existing properties (IVY-587)",
                "raw_url": "https://github.com/apache/ant-ivy/raw/9bf25f5b4c33634393fedc8f97d6ffd53480f548/CHANGES.txt",
                "sha": "6beee3ba4b933df9bf23b535106ceb8050997be8",
                "status": "modified"
            },
            {
                "additions": 25,
                "blob_url": "https://github.com/apache/ant-ivy/blob/9bf25f5b4c33634393fedc8f97d6ffd53480f548/src/java/org/apache/ivy/core/resolve/IvyNodeEviction.java",
                "changes": 38,
                "contents_url": "https://api.github.com/repos/apache/ant-ivy/contents/src/java/org/apache/ivy/core/resolve/IvyNodeEviction.java?ref=9bf25f5b4c33634393fedc8f97d6ffd53480f548",
                "deletions": 13,
                "filename": "src/java/org/apache/ivy/core/resolve/IvyNodeEviction.java",
                "patch": "@@ -28,31 +28,43 @@\n import org.apache.ivy.plugins.conflict.ConflictManager;\n \n public class IvyNodeEviction {\n+    /**\n+     * This class contains data about the eviction of an {@link IvyNode}.\n+     */\n     public static class EvictionData {\n-        private IvyNode parent; // can be null in case of transitive eviction\n-\n-        private ConflictManager conflictManager; // can be null in case of transitive eviction\n+        /**\n+         * Can be null in case of transitive eviction.\n+         */\n+        private IvyNode parent;\n \n-        private Collection selected; // Collection(IvyNode); can be null in case of transitive\n+        /**\n+         * Can be null in case of transitive eviction.\n+         */\n+        private ConflictManager conflictManager;\n \n-        // eviction\n+        /**\n+         * Can be null in case of transitive eviction.\n+         */\n+        private Collection selected; // Collection(IvyNode)\n \n         private String rootModuleConf;\n \n+        /**\n+         * Creates a new object containing the eviction data of an {@link IvyNode}.\n+         * \n+         * @param rootModuleConf the rootmodule configuration\n+         * @param parent the parent node (or <tt>null</tt> in case of transitive eviction)\n+         * @param conflictManager the conflictmanager which evicted the node (or <tt>null</tt> in\n+         *                        case of transitive eviction)\n+         * @param selected a collection of {@link IvyNode}s which evict the evicted node (or \n+         *                 <tt>null</tt> in case of transitive eviction)\n+         */\n         public EvictionData(String rootModuleConf, IvyNode parent, ConflictManager conflictManager,\n                 Collection selected) {\n             this.rootModuleConf = rootModuleConf;\n             this.parent = parent;\n             this.conflictManager = conflictManager;\n             this.selected = selected;\n-            for (Iterator iter = selected.iterator(); iter.hasNext();) {\n-                Object o = (Object) iter.next();\n-                if (!(o instanceof IvyNode)) {\n-                    throw new IllegalArgumentException(\n-                            \"selected nodes must be instance of IvyNode. Found: \"\n-                                    + o.getClass().getName());\n-                }\n-            }\n         }\n \n         public String toString() {",
                "raw_url": "https://github.com/apache/ant-ivy/raw/9bf25f5b4c33634393fedc8f97d6ffd53480f548/src/java/org/apache/ivy/core/resolve/IvyNodeEviction.java",
                "sha": "9249abb41bc92708d84b9a2452dfca680275eaba",
                "status": "modified"
            },
            {
                "additions": 25,
                "blob_url": "https://github.com/apache/ant-ivy/blob/9bf25f5b4c33634393fedc8f97d6ffd53480f548/test/java/org/apache/ivy/core/resolve/ResolveTest.java",
                "changes": 25,
                "contents_url": "https://api.github.com/repos/apache/ant-ivy/contents/test/java/org/apache/ivy/core/resolve/ResolveTest.java?ref=9bf25f5b4c33634393fedc8f97d6ffd53480f548",
                "deletions": 0,
                "filename": "test/java/org/apache/ivy/core/resolve/ResolveTest.java",
                "patch": "@@ -20,6 +20,7 @@\n import java.io.File;\n import java.util.ArrayList;\n import java.util.Arrays;\n+import java.util.Collection;\n import java.util.Date;\n import java.util.HashSet;\n import java.util.List;\n@@ -1499,6 +1500,30 @@ public void testTransitiveEviction2() throws Exception {\n         assertFalse(getArchiveFileInCache(\"org1\", \"mod1.2\", \"2.0\", \"mod1.2\", \"jar\", \"jar\").exists());\n     }\n \n+    public void testTransitiveEvictionWithExtendingConf() throws Exception {\n+        // IVY-590\n+        ResolveReport report = ivy.resolve(ResolveTest.class.getResource(\"ivy-590.xml\"),\n+            getResolveOptions(new String[] {\"*\"}));\n+        assertNotNull(report);\n+        \n+        // dependencies\n+        assertTrue(cacheManager.getIvyFileInCache(\n+            ModuleRevisionId.newInstance(\"org1\", \"mod1.2\", \"2.0\")).exists());\n+        assertTrue(getArchiveFileInCache(\"org1\", \"mod1.2\", \"2.0\", \"mod1.2\", \"jar\", \"jar\").exists());\n+        \n+        // test eviction\n+        ConfigurationResolveReport compileReport = report.getConfigurationReport(\"compile\");\n+        IvyNode[] evicted = compileReport.getEvictedNodes();\n+        assertNotNull(evicted);\n+        \n+        Collection evictedModules = new ArrayList();\n+        for (int i = 0; i < evicted.length; i++) {\n+            evictedModules.add(evicted[i].getId());\n+        }\n+        \n+        assertTrue(evictedModules.contains(ModuleRevisionId.newInstance(\"org1\", \"mod1.2\", \"2.0\")));\n+    }\n+    \n     public void testResolveConflictInConf() throws Exception {\n         // conflicts in separate confs are not conflicts\n ",
                "raw_url": "https://github.com/apache/ant-ivy/raw/9bf25f5b4c33634393fedc8f97d6ffd53480f548/test/java/org/apache/ivy/core/resolve/ResolveTest.java",
                "sha": "c947f397f27c9d76f9766219d05d4d7615558c93",
                "status": "modified"
            },
            {
                "additions": 29,
                "blob_url": "https://github.com/apache/ant-ivy/blob/9bf25f5b4c33634393fedc8f97d6ffd53480f548/test/java/org/apache/ivy/core/resolve/ivy-590.xml",
                "changes": 29,
                "contents_url": "https://api.github.com/repos/apache/ant-ivy/contents/test/java/org/apache/ivy/core/resolve/ivy-590.xml?ref=9bf25f5b4c33634393fedc8f97d6ffd53480f548",
                "deletions": 0,
                "filename": "test/java/org/apache/ivy/core/resolve/ivy-590.xml",
                "patch": "@@ -0,0 +1,29 @@\n+<!--\r\n+   Licensed to the Apache Software Foundation (ASF) under one\r\n+   or more contributor license agreements.  See the NOTICE file\r\n+   distributed with this work for additional information\r\n+   regarding copyright ownership.  The ASF licenses this file\r\n+   to you under the Apache License, Version 2.0 (the\r\n+   \"License\"); you may not use this file except in compliance\r\n+   with the License.  You may obtain a copy of the License at\r\n+\r\n+     http://www.apache.org/licenses/LICENSE-2.0\r\n+\r\n+   Unless required by applicable law or agreed to in writing,\r\n+   software distributed under the License is distributed on an\r\n+   \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n+   KIND, either express or implied.  See the License for the\r\n+   specific language governing permissions and limitations\r\n+   under the License.    \r\n+-->\r\n+<ivy-module version=\"1.0\">\r\n+    <info organisation=\"apache\" module=\"IVY-590\" revision=\"1.0\"/>\r\n+    <configurations>\r\n+\t    <conf name=\"default\" transitive=\"true\"/>\r\n+\t\t<conf name=\"compile\" extends=\"default\" />\r\n+\t</configurations>\r\n+    <dependencies>\r\n+\t\t<dependency org=\"org1\" name=\"mod1.1\" rev=\"1.0\" conf=\"default->default\"/>\r\n+\t\t<dependency org=\"org16\" name=\"mod16.1\" rev=\"1.0\" conf=\"compile->default\"/>\r\n+    </dependencies>\r\n+</ivy-module>\r",
                "raw_url": "https://github.com/apache/ant-ivy/raw/9bf25f5b4c33634393fedc8f97d6ffd53480f548/test/java/org/apache/ivy/core/resolve/ivy-590.xml",
                "sha": "b9efe6868c3dc35c87ae190bda5040358878800e",
                "status": "added"
            },
            {
                "additions": 30,
                "blob_url": "https://github.com/apache/ant-ivy/blob/9bf25f5b4c33634393fedc8f97d6ffd53480f548/test/repositories/2/mod16.1/ivy-1.0.xml",
                "changes": 30,
                "contents_url": "https://api.github.com/repos/apache/ant-ivy/contents/test/repositories/2/mod16.1/ivy-1.0.xml?ref=9bf25f5b4c33634393fedc8f97d6ffd53480f548",
                "deletions": 0,
                "filename": "test/repositories/2/mod16.1/ivy-1.0.xml",
                "patch": "@@ -0,0 +1,30 @@\n+<!--\r\n+   Licensed to the Apache Software Foundation (ASF) under one\r\n+   or more contributor license agreements.  See the NOTICE file\r\n+   distributed with this work for additional information\r\n+   regarding copyright ownership.  The ASF licenses this file\r\n+   to you under the Apache License, Version 2.0 (the\r\n+   \"License\"); you may not use this file except in compliance\r\n+   with the License.  You may obtain a copy of the License at\r\n+\r\n+     http://www.apache.org/licenses/LICENSE-2.0\r\n+\r\n+   Unless required by applicable law or agreed to in writing,\r\n+   software distributed under the License is distributed on an\r\n+   \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n+   KIND, either express or implied.  See the License for the\r\n+   specific language governing permissions and limitations\r\n+   under the License.    \r\n+-->\r\n+<ivy-module version=\"1.0\">\r\n+\t<info organisation=\"org16\"\r\n+\t       module=\"mod16.1\"\r\n+\t       revision=\"1.0\"\r\n+\t       status=\"integration\"\r\n+\t       publication=\"20050930110000\"\r\n+\t/>\r\n+\t<publications />\r\n+    <dependencies>\r\n+\t\t<dependency org=\"org1\" name=\"mod1.1\" rev=\"2.0\" />\r\n+    </dependencies>\r\n+</ivy-module>\r",
                "raw_url": "https://github.com/apache/ant-ivy/raw/9bf25f5b4c33634393fedc8f97d6ffd53480f548/test/repositories/2/mod16.1/ivy-1.0.xml",
                "sha": "af4a998114f32de488ac0aa1640058db46aa876b",
                "status": "added"
            }
        ],
        "message": "FIX: NullPointerException whilst resolving transitive dependencies (IVY-590)\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/ivy/core/trunk@571295 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/ant-ivy/commit/5d7f94f8d43e127729241c3c4fff42360aa5566c",
        "patched_files": [
            "ivy-590.java",
            "CHANGES.java",
            "IvyNodeEviction.java",
            "ivy-1.java"
        ],
        "repo": "ant-ivy",
        "unit_tests": [
            "ResolveTest.java"
        ]
    },
    "ant-ivy_a93da01": {
        "bug_id": "ant-ivy_a93da01",
        "commit": "https://github.com/apache/ant-ivy/commit/a93da01747d6d72a3aa155c12240549f1211dc43",
        "file": [
            {
                "additions": 6,
                "blob_url": "https://github.com/apache/ant-ivy/blob/a93da01747d6d72a3aa155c12240549f1211dc43/src/java/org/apache/ivy/plugins/parser/m2/PomModuleDescriptorParser.java",
                "changes": 6,
                "contents_url": "https://api.github.com/repos/apache/ant-ivy/contents/src/java/org/apache/ivy/plugins/parser/m2/PomModuleDescriptorParser.java?ref=a93da01747d6d72a3aa155c12240549f1211dc43",
                "deletions": 0,
                "filename": "src/java/org/apache/ivy/plugins/parser/m2/PomModuleDescriptorParser.java",
                "patch": "@@ -134,6 +134,12 @@ public ModuleDescriptor parseDescriptor(ParserSettings ivySettings, URL descript\n                     Message.warn(\"Resolution will only pick dependencies of the relocated element.\"\n                             + \"  Artefact and other metadata will be ignored.\");\n                     ResolvedModuleRevision relocatedModule = parseOtherPom(ivySettings, relocation);\n+                    if (relocatedModule == null) {\n+                        throw new ParseException(\"impossible to load module \"\n+                            + relocation + \" to which \" \n+                            + mdBuilder.getModuleDescriptor().getModuleRevisionId()\n+                            + \" has been relocated\", 0);\n+                    }\n                     DependencyDescriptor[] dds = relocatedModule.getDescriptor().getDependencies();\n                     for (int i = 0; i < dds.length; i++) {\n                         mdBuilder.addDependency(dds[i]);",
                "raw_url": "https://github.com/apache/ant-ivy/raw/a93da01747d6d72a3aa155c12240549f1211dc43/src/java/org/apache/ivy/plugins/parser/m2/PomModuleDescriptorParser.java",
                "sha": "2bb1733a724ab3826641aa95a10a6211d8b154cd",
                "status": "modified"
            }
        ],
        "message": "prevent NPE when relocated module is not found\n\ngit-svn-id: https://svn.apache.org/repos/asf/ant/ivy/core/trunk@636466 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/ant-ivy/commit/dce9dcdd312bb39d9fbbaaedd120cc9e3dc81483",
        "patched_files": [
            "PomModuleDescriptorParser.java"
        ],
        "repo": "ant-ivy",
        "unit_tests": [
            "PomModuleDescriptorParserTest.java"
        ]
    },
    "ant-ivy_a9a5d58": {
        "bug_id": "ant-ivy_a9a5d58",
        "commit": "https://github.com/apache/ant-ivy/commit/a9a5d588b96379e44e06167f5f9d9739ca07f352",
        "file": [
            {
                "additions": 8,
                "blob_url": "https://github.com/apache/ant-ivy/blob/a9a5d588b96379e44e06167f5f9d9739ca07f352/src/java/org/apache/ivy/core/cache/DefaultRepositoryCacheManager.java",
                "changes": 8,
                "contents_url": "https://api.github.com/repos/apache/ant-ivy/contents/src/java/org/apache/ivy/core/cache/DefaultRepositoryCacheManager.java?ref=a9a5d588b96379e44e06167f5f9d9739ca07f352",
                "deletions": 0,
                "filename": "src/java/org/apache/ivy/core/cache/DefaultRepositoryCacheManager.java",
                "patch": "@@ -890,6 +890,14 @@ public ResolvedResource resolve(Artifact artifact) {\n             try {\n                 ModuleDescriptor md = parser.parseDescriptor(\n                     settings, cachedMDURL, mdRef.getResource(), options.isValidate());\n+                if (md == null) {\n+                    throw new IllegalStateException(\n+                        \"module descriptor parser returned a null module descriptor, \" \n+                        + \"which is not allowed. \"\n+                        + \"parser=\" + parser \n+                        + \"; parser class=\" + parser.getClass().getName()\n+                        + \"; module descriptor resource=\" + mdRef.getResource());\n+                }\n                 Message.debug(\"\\t\" + getName() + \": parsed downloaded md file for \" + mrid \n                     + \"; parsed=\" + md.getModuleRevisionId());\n ",
                "raw_url": "https://github.com/apache/ant-ivy/raw/a9a5d588b96379e44e06167f5f9d9739ca07f352/src/java/org/apache/ivy/core/cache/DefaultRepositoryCacheManager.java",
                "sha": "a8a0c5e06a776df94117a4a49ec682c106a7ed9b",
                "status": "modified"
            }
        ],
        "message": "check for module descriptor nullity, to avoid a NPE if the ModuleDescriptorParser does not fulfill its contract\n\ngit-svn-id: https://svn.apache.org/repos/asf/ant/ivy/core/trunk@619957 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/ant-ivy/commit/474c321dfbf17395ae09889384223f0f74c74057",
        "patched_files": [
            "DefaultRepositoryCacheManager.java"
        ],
        "repo": "ant-ivy",
        "unit_tests": [
            "DefaultRepositoryCacheManagerTest.java"
        ]
    },
    "ant-ivy_ae92d0a": {
        "bug_id": "ant-ivy_ae92d0a",
        "commit": "https://github.com/apache/ant-ivy/commit/ae92d0a283ce4ee755a9b66727536ada40ee277d",
        "file": [
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/ant-ivy/blob/ae92d0a283ce4ee755a9b66727536ada40ee277d/src/java/org/apache/ivy/ant/IvyReport.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/ant-ivy/contents/src/java/org/apache/ivy/ant/IvyReport.java?ref=ae92d0a283ce4ee755a9b66727536ada40ee277d",
                "deletions": 1,
                "filename": "src/java/org/apache/ivy/ant/IvyReport.java",
                "patch": "@@ -129,7 +129,7 @@ public void execute() throws BuildException {\n             _cache = settings.getDefaultCache();\r\n         }\r\n         _conf = getProperty(_conf, settings, \"ivy.resolved.configurations\", _resolveId);\r\n-        if (_conf.equals(\"*\")) {\r\n+        if (\"*\".equals(_conf)) {\r\n             _conf = getProperty(settings, \"ivy.resolved.configurations\", _resolveId);\r\n         }\r\n         if (_conf == null) {\r",
                "raw_url": "https://github.com/apache/ant-ivy/raw/ae92d0a283ce4ee755a9b66727536ada40ee277d/src/java/org/apache/ivy/ant/IvyReport.java",
                "sha": "411692bdb49380d704668549b3c86e9e01f9c4f9",
                "status": "modified"
            }
        ],
        "message": "FIX: NPE when report is called without conf while no resolve has been done\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/ivy/core/trunk@516353 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/ant-ivy/commit/dc1dd607a25b7b382c06cc7bfca3284214bc3dbe",
        "patched_files": [
            "IvyReport.java"
        ],
        "repo": "ant-ivy",
        "unit_tests": [
            "IvyReportTest.java"
        ]
    },
    "ant-ivy_b34fdc4": {
        "bug_id": "ant-ivy_b34fdc4",
        "commit": "https://github.com/apache/ant-ivy/commit/b34fdc404f53efeb27725f8e2017711e0eb9255e",
        "file": [
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/ant-ivy/blob/b34fdc404f53efeb27725f8e2017711e0eb9255e/CHANGES.txt",
                "changes": 1,
                "contents_url": "https://api.github.com/repos/apache/ant-ivy/contents/CHANGES.txt?ref=b34fdc404f53efeb27725f8e2017711e0eb9255e",
                "deletions": 0,
                "filename": "CHANGES.txt",
                "patch": "@@ -1,5 +1,6 @@\n - IMPROVE: Retrieve task now also optionally do ivy file downloads (IVY-167) (with the contribution of Costin Leau)\r\n \r\n+- FIX: incorrect configuration definition gives misleading NullPointerException (IVY-175)\r\n - FIX: throw an error when using a non-existing conflict manager as default (IVY-179) (thanks to Maarten Coene)\r\n - FIX: eviction problem with different conflicts in multiple confs (IVY-173)\r\n \r",
                "raw_url": "https://github.com/apache/ant-ivy/raw/b34fdc404f53efeb27725f8e2017711e0eb9255e/CHANGES.txt",
                "sha": "caf7df569d9d1357200d130df407d2e5ceaf56a7",
                "status": "modified"
            },
            {
                "additions": 15,
                "blob_url": "https://github.com/apache/ant-ivy/blob/b34fdc404f53efeb27725f8e2017711e0eb9255e/src/java/fr/jayasoft/ivy/DefaultModuleDescriptor.java",
                "changes": 15,
                "contents_url": "https://api.github.com/repos/apache/ant-ivy/contents/src/java/fr/jayasoft/ivy/DefaultModuleDescriptor.java?ref=b34fdc404f53efeb27725f8e2017711e0eb9255e",
                "deletions": 0,
                "filename": "src/java/fr/jayasoft/ivy/DefaultModuleDescriptor.java",
                "patch": "@@ -363,4 +363,19 @@ public void setNamespace(Namespace ns) {\n         _namespace = ns;\r\n     }\r\n \r\n+    /**\r\n+     * Throws an exception if the module descriptor is inconsistent\r\n+     * For the moment, only extended configurations existence is checked\r\n+     */\r\n+    public void check() {\r\n+        for (Iterator iter = _configurations.values().iterator(); iter.hasNext();) {\r\n+            Configuration conf = (Configuration)iter.next();\r\n+            String[] ext = conf.getExtends();\r\n+            for (int i = 0; i < ext.length; i++) {\r\n+                if (!_configurations.containsKey(ext[i].trim())) {\r\n+                    throw new IllegalStateException(\"unknown configuration '\"+ext[i]+\"'. It is extended by \"+conf.getName());\r\n+                }\r\n+            }\r\n+        }\r\n+    }\r\n }\r",
                "raw_url": "https://github.com/apache/ant-ivy/raw/b34fdc404f53efeb27725f8e2017711e0eb9255e/src/java/fr/jayasoft/ivy/DefaultModuleDescriptor.java",
                "sha": "99d76523c07f19aed2a2b06e543b2becef89ca0f",
                "status": "modified"
            },
            {
                "additions": 5,
                "blob_url": "https://github.com/apache/ant-ivy/blob/b34fdc404f53efeb27725f8e2017711e0eb9255e/src/java/fr/jayasoft/ivy/xml/XmlModuleDescriptorParser.java",
                "changes": 9,
                "contents_url": "https://api.github.com/repos/apache/ant-ivy/contents/src/java/fr/jayasoft/ivy/xml/XmlModuleDescriptorParser.java?ref=b34fdc404f53efeb27725f8e2017711e0eb9255e",
                "deletions": 4,
                "filename": "src/java/fr/jayasoft/ivy/xml/XmlModuleDescriptorParser.java",
                "patch": "@@ -143,14 +143,15 @@ private void parse(URL xmlURL, Resource res, boolean validate) throws ParseExcep\n                     _md.addArtifact(confs[i], new MDArtifact(_md, _md.getModuleRevisionId().getName(), \"jar\", \"jar\"));\r\n                 }\r\n             }\r\n-        } catch (SAXException ex) {\r\n-            ParseException pe = new ParseException(ex.getMessage()+\" in \"+xmlURL, 0);\r\n-            pe.initCause(ex);\r\n-            throw pe;\r\n+            _md.check();\r\n         } catch (ParserConfigurationException ex) {\r\n             IllegalStateException ise = new IllegalStateException(ex.getMessage()+\" in \"+xmlURL);\r\n             ise.initCause(ex);\r\n             throw ise;\r\n+        } catch (Exception ex) {\r\n+            ParseException pe = new ParseException(ex.getMessage()+\" in \"+xmlURL, 0);\r\n+            pe.initCause(ex);\r\n+            throw pe;\r\n         }\r\n     }\r\n \r",
                "raw_url": "https://github.com/apache/ant-ivy/raw/b34fdc404f53efeb27725f8e2017711e0eb9255e/src/java/fr/jayasoft/ivy/xml/XmlModuleDescriptorParser.java",
                "sha": "051f809546b54fbf052fbc37208e63b052430d21",
                "status": "modified"
            },
            {
                "additions": 9,
                "blob_url": "https://github.com/apache/ant-ivy/blob/b34fdc404f53efeb27725f8e2017711e0eb9255e/test/java/fr/jayasoft/ivy/xml/XmlModuleDescriptorParserTest.java",
                "changes": 9,
                "contents_url": "https://api.github.com/repos/apache/ant-ivy/contents/test/java/fr/jayasoft/ivy/xml/XmlModuleDescriptorParserTest.java?ref=b34fdc404f53efeb27725f8e2017711e0eb9255e",
                "deletions": 0,
                "filename": "test/java/fr/jayasoft/ivy/xml/XmlModuleDescriptorParserTest.java",
                "patch": "@@ -70,6 +70,15 @@ public void testBad2() throws IOException {\n         }\r\n     }\r\n \r\n+    public void testBadConfs() throws IOException {\r\n+        try {\r\n+            XmlModuleDescriptorParser.getInstance().parseDescriptor(_ivy, getClass().getResource(\"test-bad-confs.xml\"), true);\r\n+            fail(\"bad ivy file raised no error\");\r\n+        } catch (ParseException ex) {\r\n+            assertTrue(ex.getMessage().indexOf(\"invalidConf\") != -1);\r\n+        }\r\n+    }\r\n+\r\n     public void testNoValidate() throws IOException, ParseException {\r\n         XmlModuleDescriptorParser.getInstance().parseDescriptor(_ivy, getClass().getResource(\"test-novalidate.xml\"), false);\r\n     }\r",
                "raw_url": "https://github.com/apache/ant-ivy/raw/b34fdc404f53efeb27725f8e2017711e0eb9255e/test/java/fr/jayasoft/ivy/xml/XmlModuleDescriptorParserTest.java",
                "sha": "c10790e4292d6c54354634903754746faea1b17c",
                "status": "modified"
            },
            {
                "additions": 9,
                "blob_url": "https://github.com/apache/ant-ivy/blob/b34fdc404f53efeb27725f8e2017711e0eb9255e/test/java/fr/jayasoft/ivy/xml/test-bad-confs.xml",
                "changes": 9,
                "contents_url": "https://api.github.com/repos/apache/ant-ivy/contents/test/java/fr/jayasoft/ivy/xml/test-bad-confs.xml?ref=b34fdc404f53efeb27725f8e2017711e0eb9255e",
                "deletions": 0,
                "filename": "test/java/fr/jayasoft/ivy/xml/test-bad-confs.xml",
                "patch": "@@ -0,0 +1,9 @@\n+<ivy-module version=\"1.0\">\r\n+\t<info  organisation=\"myorg\"\r\n+\t       module=\"mymodule\"\r\n+\t       status=\"integration\"\r\n+\t/>\r\n+\t<configurations>\r\n+\t\t<conf name=\"A\" extends=\"invalidConf\"/>\r\n+\t</configurations>\r\n+</ivy-module>\r",
                "raw_url": "https://github.com/apache/ant-ivy/raw/b34fdc404f53efeb27725f8e2017711e0eb9255e/test/java/fr/jayasoft/ivy/xml/test-bad-confs.xml",
                "sha": "cf7e35b8b59009dc2fb0dc12009f0114378b3ec8",
                "status": "added"
            }
        ],
        "message": "FIX: incorrect configuration definition gives misleading NullPointerException (IVY-175)\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/ivy/trunk@484227 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/ant-ivy/commit/7cb328da7dfa751bcaa99dfecafe5933fb53d4be",
        "patched_files": [
            "DefaultModuleDescriptor.java",
            "XmlModuleDescriptorParser.java",
            "CHANGES.java"
        ],
        "repo": "ant-ivy",
        "unit_tests": [
            "XmlModuleDescriptorParserTest.java",
            "test-bad-confs.java"
        ]
    },
    "ant-ivy_cf0b494": {
        "bug_id": "ant-ivy_cf0b494",
        "commit": "https://github.com/apache/ant-ivy/commit/cf0b494e4d528e9e514aba908d68bdfa1f844cc1",
        "file": [
            {
                "additions": 4,
                "blob_url": "https://github.com/apache/ant-ivy/blob/cf0b494e4d528e9e514aba908d68bdfa1f844cc1/src/java/org/apache/ivy/plugins/parser/m2/PomModuleDescriptorParser.java",
                "changes": 4,
                "contents_url": "https://api.github.com/repos/apache/ant-ivy/contents/src/java/org/apache/ivy/plugins/parser/m2/PomModuleDescriptorParser.java?ref=cf0b494e4d528e9e514aba908d68bdfa1f844cc1",
                "deletions": 0,
                "filename": "src/java/org/apache/ivy/plugins/parser/m2/PomModuleDescriptorParser.java",
                "patch": "@@ -255,6 +255,10 @@ public ModuleDescriptor parseDescriptor(ParserSettings ivySettings, URL descript\n \n     private void addSourcesAndJavadocArtifactsIfPresent(\n             PomModuleDescriptorBuilder mdBuilder, ParserSettings ivySettings) {\n+        if (mdBuilder.getMainArtifact() == null) {\n+            // no main artifact in pom, we don't need to search for meta artifacts\n+            return;\n+        }\n         ModuleDescriptor md = mdBuilder.getModuleDescriptor();\n         ModuleRevisionId mrid = md.getModuleRevisionId();\n         DependencyResolver resolver = ivySettings.getResolver(",
                "raw_url": "https://github.com/apache/ant-ivy/raw/cf0b494e4d528e9e514aba908d68bdfa1f844cc1/src/java/org/apache/ivy/plugins/parser/m2/PomModuleDescriptorParser.java",
                "sha": "d2ab1d8f42351e04805d56f930a6cdcaf6c19e56",
                "status": "modified"
            }
        ],
        "message": "FIX: NPE for modules with 'pom' packaging (no main artifact)\n\ngit-svn-id: https://svn.apache.org/repos/asf/ant/ivy/core/trunk@690952 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/ant-ivy/commit/64d5ca7eb75ef1b03a2862df6ad3a8816f87647c",
        "patched_files": [
            "PomModuleDescriptorParser.java"
        ],
        "repo": "ant-ivy",
        "unit_tests": [
            "PomModuleDescriptorParserTest.java"
        ]
    },
    "ant-ivy_d55ed92": {
        "bug_id": "ant-ivy_d55ed92",
        "commit": "https://github.com/apache/ant-ivy/commit/d55ed9283104db6e145dfce0970dd6d5f2a91806",
        "file": [
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/ant-ivy/blob/d55ed9283104db6e145dfce0970dd6d5f2a91806/CHANGES.txt",
                "changes": 1,
                "contents_url": "https://api.github.com/repos/apache/ant-ivy/contents/CHANGES.txt?ref=d55ed9283104db6e145dfce0970dd6d5f2a91806",
                "deletions": 0,
                "filename": "CHANGES.txt",
                "patch": "@@ -1,5 +1,6 @@\n - IMPROVE: Retrieve task now also optionally do ivy file downloads (IVY-167) (with the contribution of Costin Leau)\r\n \r\n+- FIX: cryptic NPE due to spelling error in ivy.xml (IVY-177)\r\n - FIX: conflicts with dynamic revisions not resolved properly (IVY-181)\r\n - FIX: incorrect configuration definition gives misleading NullPointerException (IVY-175)\r\n - FIX: throw an error when using a non-existing conflict manager as default (IVY-179) (thanks to Maarten Coene)\r",
                "raw_url": "https://github.com/apache/ant-ivy/raw/d55ed9283104db6e145dfce0970dd6d5f2a91806/CHANGES.txt",
                "sha": "6dd52a84df30d0caa5f224b9dfcf66a17016e24b",
                "status": "modified"
            },
            {
                "additions": 5,
                "blob_url": "https://github.com/apache/ant-ivy/blob/d55ed9283104db6e145dfce0970dd6d5f2a91806/src/java/fr/jayasoft/ivy/xml/XmlModuleDescriptorParser.java",
                "changes": 7,
                "contents_url": "https://api.github.com/repos/apache/ant-ivy/contents/src/java/fr/jayasoft/ivy/xml/XmlModuleDescriptorParser.java?ref=d55ed9283104db6e145dfce0970dd6d5f2a91806",
                "deletions": 2,
                "filename": "src/java/fr/jayasoft/ivy/xml/XmlModuleDescriptorParser.java",
                "patch": "@@ -149,6 +149,7 @@ private void parse(URL xmlURL, Resource res, boolean validate) throws ParseExcep\n             ise.initCause(ex);\r\n             throw ise;\r\n         } catch (Exception ex) {\r\n+            checkErrors();\r\n             ParseException pe = new ParseException(ex.getMessage()+\" in \"+xmlURL, 0);\r\n             pe.initCause(ex);\r\n             throw pe;\r\n@@ -383,8 +384,10 @@ public void startElement(String uri, String localName, String qName, Attributes\n                 addError(\"unknwon tag \"+qName);\r\n             }\r\n         } catch (Exception ex) {\r\n-            addError(\"exception while parsing: \"+ex.getMessage());\r\n-            throw new SAXException(\"exception while parsing: \"+ex.getMessage(), ex);\r\n+            if (ex instanceof SAXException) {\r\n+                throw (SAXException)ex;\r\n+            }\r\n+            throw new SAXException(\"problem occured while parsing ivy file. message: \"+ex.getMessage(), ex);\r\n         }\r\n     }\r\n \r",
                "raw_url": "https://github.com/apache/ant-ivy/raw/d55ed9283104db6e145dfce0970dd6d5f2a91806/src/java/fr/jayasoft/ivy/xml/XmlModuleDescriptorParser.java",
                "sha": "4fca74d6045cfcc584ec7193e237a651dd268919",
                "status": "modified"
            },
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/ant-ivy/blob/d55ed9283104db6e145dfce0970dd6d5f2a91806/test/java/fr/jayasoft/ivy/xml/XmlModuleDescriptorParserTest.java",
                "changes": 4,
                "contents_url": "https://api.github.com/repos/apache/ant-ivy/contents/test/java/fr/jayasoft/ivy/xml/XmlModuleDescriptorParserTest.java?ref=d55ed9283104db6e145dfce0970dd6d5f2a91806",
                "deletions": 2,
                "filename": "test/java/fr/jayasoft/ivy/xml/XmlModuleDescriptorParserTest.java",
                "patch": "@@ -61,12 +61,12 @@ public void testBad() throws IOException {\n         }\r\n     }\r\n \r\n-    public void testBad2() throws IOException {\r\n+    public void testBadOrg() throws IOException {\r\n         try {\r\n             XmlModuleDescriptorParser.getInstance().parseDescriptor(_ivy, getClass().getResource(\"test-bad-org.xml\"), true);\r\n             fail(\"bad ivy file raised no error\");\r\n         } catch (ParseException ex) {\r\n-            // ok\r\n+            assertTrue(ex.getMessage().indexOf(\"organization\") != -1);\r\n         }\r\n     }\r\n \r",
                "raw_url": "https://github.com/apache/ant-ivy/raw/d55ed9283104db6e145dfce0970dd6d5f2a91806/test/java/fr/jayasoft/ivy/xml/XmlModuleDescriptorParserTest.java",
                "sha": "a0ba589f8fda05f395bc5527e9e29195a8f7a16d",
                "status": "modified"
            }
        ],
        "message": "FIX: cryptic NPE due to spelling error in ivy.xml (IVY-177)\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/ivy/trunk@484229 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/ant-ivy/commit/64c1a69c4d5ae173e1743a96ddc2f0f42a130302",
        "patched_files": [
            "CHANGES.java",
            "XmlModuleDescriptorParser.java"
        ],
        "repo": "ant-ivy",
        "unit_tests": [
            "XmlModuleDescriptorParserTest.java"
        ]
    },
    "ant-ivy_db841bc": {
        "bug_id": "ant-ivy_db841bc",
        "commit": "https://github.com/apache/ant-ivy/commit/db841bca384a29d5b8927ad7e8f550d2d7a22225",
        "file": [
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/ant-ivy/blob/db841bca384a29d5b8927ad7e8f550d2d7a22225/CHANGES.txt",
                "changes": 1,
                "contents_url": "https://api.github.com/repos/apache/ant-ivy/contents/CHANGES.txt?ref=db841bca384a29d5b8927ad7e8f550d2d7a22225",
                "deletions": 0,
                "filename": "CHANGES.txt",
                "patch": "@@ -94,6 +94,7 @@ for detailed view of each issue, please consult http://issues.apache.org/jira/br\n - FIX: IO problem while parsing ivy file (Resetting to invalid mark) (IVY-975)\n - FIX: Cannot parse maven2 poms containing an UTF-8 BOM\n - FIX: listing possible token values doesn't work properly for the ibiblio resolver\n+- FIX: NullPointerException when resolving module wihout revision in the pattern (IVY-980)\n \n    2.0.0-rc2\n =====================================",
                "raw_url": "https://github.com/apache/ant-ivy/raw/db841bca384a29d5b8927ad7e8f550d2d7a22225/CHANGES.txt",
                "sha": "4767f99d55bed99c34fe862aebe885a6e0c0c470",
                "status": "modified"
            },
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/ant-ivy/blob/db841bca384a29d5b8927ad7e8f550d2d7a22225/src/java/org/apache/ivy/plugins/resolver/BasicResolver.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/ant-ivy/contents/src/java/org/apache/ivy/plugins/resolver/BasicResolver.java?ref=db841bca384a29d5b8927ad7e8f550d2d7a22225",
                "deletions": 0,
                "filename": "src/java/org/apache/ivy/plugins/resolver/BasicResolver.java",
                "patch": "@@ -456,6 +456,8 @@ private void resolveAndCheckRevision(ModuleDescriptor systemMd,\n             if (!isDynamic) {\n                 resolvedMrid = ModuleRevisionId.newInstance(\n                     resolvedMrid, dependencyConstraint.getRevision());\n+            } else if (ivyRef == null) {\n+                resolvedMrid = systemMd.getMetadataArtifact().getModuleRevisionId();\n             } else if (ivyRef.getRevision() == null || ivyRef.getRevision().length() == 0) {\n                 resolvedMrid = ModuleRevisionId.newInstance(resolvedMrid, \"working@\"\n                     + getName());",
                "raw_url": "https://github.com/apache/ant-ivy/raw/db841bca384a29d5b8927ad7e8f550d2d7a22225/src/java/org/apache/ivy/plugins/resolver/BasicResolver.java",
                "sha": "03f04244dbec45277ea4bfb251909679319bb54f",
                "status": "modified"
            },
            {
                "additions": 9,
                "blob_url": "https://github.com/apache/ant-ivy/blob/db841bca384a29d5b8927ad7e8f550d2d7a22225/test/java/org/apache/ivy/core/resolve/ResolveTest.java",
                "changes": 9,
                "contents_url": "https://api.github.com/repos/apache/ant-ivy/contents/test/java/org/apache/ivy/core/resolve/ResolveTest.java?ref=db841bca384a29d5b8927ad7e8f550d2d7a22225",
                "deletions": 0,
                "filename": "test/java/org/apache/ivy/core/resolve/ResolveTest.java",
                "patch": "@@ -267,6 +267,15 @@ public void testResolveNoRevisionInPattern() throws Exception {\n         assertFalse(report.hasError());\n     }\n \n+    public void testResolveLatestWithNoRevisionInPattern() throws Exception {\n+        Ivy ivy = new Ivy();\n+        ivy.configure(new File(\"test/repositories/norev/ivysettings.xml\").toURL());\n+        ResolveReport report = ivy.resolve(new File(\"test/repositories/norev/ivy-latest.xml\").toURL(),\n+            getResolveOptions(new String[] {\"*\"}));\n+        assertNotNull(report);\n+        assertFalse(report.hasError());\n+     }\n+\n     public void testResolveNoRevisionInDep() throws Exception {\n         // mod1.4 depends on mod1.6, in which the ivy file has no revision\n         ResolveReport report = ivy.resolve(new File(",
                "raw_url": "https://github.com/apache/ant-ivy/raw/db841bca384a29d5b8927ad7e8f550d2d7a22225/test/java/org/apache/ivy/core/resolve/ResolveTest.java",
                "sha": "1b462d0d470c97be369f88d4703217c5efcb85ef",
                "status": "modified"
            },
            {
                "additions": 27,
                "blob_url": "https://github.com/apache/ant-ivy/blob/db841bca384a29d5b8927ad7e8f550d2d7a22225/test/repositories/norev/ivy-latest.xml",
                "changes": 27,
                "contents_url": "https://api.github.com/repos/apache/ant-ivy/contents/test/repositories/norev/ivy-latest.xml?ref=db841bca384a29d5b8927ad7e8f550d2d7a22225",
                "deletions": 0,
                "filename": "test/repositories/norev/ivy-latest.xml",
                "patch": "@@ -0,0 +1,27 @@\n+<!--\r\n+   Licensed to the Apache Software Foundation (ASF) under one\r\n+   or more contributor license agreements.  See the NOTICE file\r\n+   distributed with this work for additional information\r\n+   regarding copyright ownership.  The ASF licenses this file\r\n+   to you under the Apache License, Version 2.0 (the\r\n+   \"License\"); you may not use this file except in compliance\r\n+   with the License.  You may obtain a copy of the License at\r\n+\r\n+     http://www.apache.org/licenses/LICENSE-2.0\r\n+\r\n+   Unless required by applicable law or agreed to in writing,\r\n+   software distributed under the License is distributed on an\r\n+   \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n+   KIND, either express or implied.  See the License for the\r\n+   specific language governing permissions and limitations\r\n+   under the License.    \r\n+-->\r\n+<ivy-module version=\"1.0\">\r\n+    <info organisation=\"myorg\" module=\"module1\"/>\r\n+    <configurations>\r\n+    \t<conf name=\"myconf\"/>\r\n+    </configurations>\r\n+    <dependencies>\r\n+        <dependency conf=\"myconf -> *\" org=\"myorg\" name=\"module3\" rev=\"+\" />\r\n+\t</dependencies>\r\n+</ivy-module>\r",
                "raw_url": "https://github.com/apache/ant-ivy/raw/db841bca384a29d5b8927ad7e8f550d2d7a22225/test/repositories/norev/ivy-latest.xml",
                "sha": "17b17c2119d639fe5e32e23e7c5920632023bfee",
                "status": "added"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/ant-ivy/blob/db841bca384a29d5b8927ad7e8f550d2d7a22225/test/repositories/norev/module3/module3.jar",
                "changes": 1,
                "contents_url": "https://api.github.com/repos/apache/ant-ivy/contents/test/repositories/norev/module3/module3.jar?ref=db841bca384a29d5b8927ad7e8f550d2d7a22225",
                "deletions": 0,
                "filename": "test/repositories/norev/module3/module3.jar",
                "patch": "@@ -0,0 +1 @@\n+.\n\\ No newline at end of file",
                "raw_url": "https://github.com/apache/ant-ivy/raw/db841bca384a29d5b8927ad7e8f550d2d7a22225/test/repositories/norev/module3/module3.jar",
                "sha": "945c9b46d684f08ec84cb316e1dc0061e361f794",
                "status": "added"
            }
        ],
        "message": "FIX: NullPointerException when resolving module wihout revision in the pattern (IVY-980) + junit test\n\ngit-svn-id: https://svn.apache.org/repos/asf/ant/ivy/core/trunk@723065 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/ant-ivy/commit/d4d77d2243b74891d0ca65019c6cbced903b95d2",
        "patched_files": [
            "module3.java",
            "CHANGES.java",
            "BasicResolver.java"
        ],
        "repo": "ant-ivy",
        "unit_tests": [
            "ivy-latest.java",
            "ResolveTest.java"
        ]
    },
    "ant-ivy_e1188f3": {
        "bug_id": "ant-ivy_e1188f3",
        "commit": "https://github.com/apache/ant-ivy/commit/e1188f368087ba4bcfada44d645e4f8661d7f9b2",
        "file": [
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/ant-ivy/blob/e1188f368087ba4bcfada44d645e4f8661d7f9b2/src/java/org/apache/ivy/core/settings/IvySettings.java",
                "changes": 4,
                "contents_url": "https://api.github.com/repos/apache/ant-ivy/contents/src/java/org/apache/ivy/core/settings/IvySettings.java?ref=e1188f368087ba4bcfada44d645e4f8661d7f9b2",
                "deletions": 2,
                "filename": "src/java/org/apache/ivy/core/settings/IvySettings.java",
                "patch": "@@ -915,9 +915,9 @@ public synchronized DependencyResolver getResolver(String resolverName) {\n         DependencyResolver resolver = resolversMap.get(resolverName);\n         if (resolver == null) {\n             Message.error(\"unknown resolver \" + resolverName);\n-        }\n-        if (workspaceResolver != null && !(resolver instanceof WorkspaceChainResolver)) {\n+        } else if (workspaceResolver != null && !(resolver instanceof WorkspaceChainResolver)) {\n             resolver = new WorkspaceChainResolver(this, resolver, workspaceResolver);\n+            resolversMap.put(resolver.getName(), resolver);\n             resolversMap.put(resolverName, resolver);\n         }\n         return resolver;",
                "raw_url": "https://github.com/apache/ant-ivy/raw/e1188f368087ba4bcfada44d645e4f8661d7f9b2/src/java/org/apache/ivy/core/settings/IvySettings.java",
                "sha": "b5f4849e61ea5062b17976d789832c5176890cd3",
                "status": "modified"
            }
        ],
        "message": "ant workspace resolver: avoid a NPE on not found resolver",
        "parent": "https://github.com/apache/ant-ivy/commit/82bd5be8735c01a767fc3ebc3eb92369ac68302d",
        "patched_files": [
            "IvySettings.java"
        ],
        "repo": "ant-ivy",
        "unit_tests": [
            "IvySettingsTest.java"
        ]
    },
    "ant-ivy_e80b85d": {
        "bug_id": "ant-ivy_e80b85d",
        "commit": "https://github.com/apache/ant-ivy/commit/e80b85d504ae9fb64b8cff4f05bc3a3a4ec8f716",
        "file": [
            {
                "additions": 0,
                "blob_url": "https://github.com/apache/ant-ivy/blob/e80b85d504ae9fb64b8cff4f05bc3a3a4ec8f716/src/java/org/apache/ivy/ant/AntBuildTrigger.java",
                "changes": 1,
                "contents_url": "https://api.github.com/repos/apache/ant-ivy/contents/src/java/org/apache/ivy/ant/AntBuildTrigger.java?ref=e80b85d504ae9fb64b8cff4f05bc3a3a4ec8f716",
                "deletions": 1,
                "filename": "src/java/org/apache/ivy/ant/AntBuildTrigger.java",
                "patch": "@@ -107,7 +107,6 @@ public void progress(IvyEvent event) {\n                     ant.execute();\n                 } catch (BuildException e) {\n                     Message.verbose(\"Exception occurred while executing target \" + target);\n-                    e.printStackTrace(); // TODO: remove when finished debugging\n                     throw e;\n                 }\n                 markBuilt(f);",
                "raw_url": "https://github.com/apache/ant-ivy/raw/e80b85d504ae9fb64b8cff4f05bc3a3a4ec8f716/src/java/org/apache/ivy/ant/AntBuildTrigger.java",
                "sha": "73d4279f392ca28c0cbff0eb95f6d26d4ecb2f2e",
                "status": "modified"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/ant-ivy/blob/e80b85d504ae9fb64b8cff4f05bc3a3a4ec8f716/src/java/org/apache/ivy/ant/ConvertManifestTask.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/ant-ivy/contents/src/java/org/apache/ivy/ant/ConvertManifestTask.java?ref=e80b85d504ae9fb64b8cff4f05bc3a3a4ec8f716",
                "deletions": 1,
                "filename": "src/java/org/apache/ivy/ant/ConvertManifestTask.java",
                "patch": "@@ -65,7 +65,7 @@ public void doExecute() throws BuildException {\n             try {\n                 profileProvider = new ExecutionEnvironmentProfileProvider();\n             } catch (IOException e) {\n-                throw new BuildException(\"Enable to load the default environment profiles\");\n+                throw new BuildException(\"Enable to load the default environment profiles\", e);\n             }\n         }\n ",
                "raw_url": "https://github.com/apache/ant-ivy/raw/e80b85d504ae9fb64b8cff4f05bc3a3a4ec8f716/src/java/org/apache/ivy/ant/ConvertManifestTask.java",
                "sha": "57dc24bdc426a69ab1e3ad9e3309171f45089548",
                "status": "modified"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/ant-ivy/blob/e80b85d504ae9fb64b8cff4f05bc3a3a4ec8f716/src/java/org/apache/ivy/ant/IvyDependencyArtifact.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/ant-ivy/contents/src/java/org/apache/ivy/ant/IvyDependencyArtifact.java?ref=e80b85d504ae9fb64b8cff4f05bc3a3a4ec8f716",
                "deletions": 1,
                "filename": "src/java/org/apache/ivy/ant/IvyDependencyArtifact.java",
                "patch": "@@ -58,7 +58,7 @@ void addArtifact(DefaultDependencyDescriptor dd, String masterConf) {\n         try {\n             u = url == null ? null : new URL(url);\n         } catch (MalformedURLException e) {\n-            throw new BuildException(\"Malformed url in the artifact: \" + e.getMessage());\n+            throw new BuildException(\"Malformed url in the artifact: \" + e.getMessage(), e);\n         }\n         DefaultDependencyArtifactDescriptor dad = new DefaultDependencyArtifactDescriptor(dd, name,\n                 typePattern, extPattern, u, null);",
                "raw_url": "https://github.com/apache/ant-ivy/raw/e80b85d504ae9fb64b8cff4f05bc3a3a4ec8f716/src/java/org/apache/ivy/ant/IvyDependencyArtifact.java",
                "sha": "e9d7197f984bbb20633c86e9e3ed2ae952a0a05f",
                "status": "modified"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/ant-ivy/blob/e80b85d504ae9fb64b8cff4f05bc3a3a4ec8f716/src/java/org/apache/ivy/core/IvyContext.java",
                "changes": 1,
                "contents_url": "https://api.github.com/repos/apache/ant-ivy/contents/src/java/org/apache/ivy/core/IvyContext.java?ref=e80b85d504ae9fb64b8cff4f05bc3a3a4ec8f716",
                "deletions": 0,
                "filename": "src/java/org/apache/ivy/core/IvyContext.java",
                "patch": "@@ -200,6 +200,7 @@ private Ivy getDefaultIvy() {\n             try {\n                 defaultIvy.configureDefault();\n             } catch (Exception e) {\n+                Message.debug(e);\n                 //???\n             }\n         }",
                "raw_url": "https://github.com/apache/ant-ivy/raw/e80b85d504ae9fb64b8cff4f05bc3a3a4ec8f716/src/java/org/apache/ivy/core/IvyContext.java",
                "sha": "4a84c81f9349cf045a52906c4fce3d19bf78397e",
                "status": "modified"
            },
            {
                "additions": 11,
                "blob_url": "https://github.com/apache/ant-ivy/blob/e80b85d504ae9fb64b8cff4f05bc3a3a4ec8f716/src/java/org/apache/ivy/core/cache/DefaultRepositoryCacheManager.java",
                "changes": 20,
                "contents_url": "https://api.github.com/repos/apache/ant-ivy/contents/src/java/org/apache/ivy/core/cache/DefaultRepositoryCacheManager.java?ref=e80b85d504ae9fb64b8cff4f05bc3a3a4ec8f716",
                "deletions": 9,
                "filename": "src/java/org/apache/ivy/core/cache/DefaultRepositoryCacheManager.java",
                "patch": "@@ -684,8 +684,7 @@ private ResolvedModuleRevision doFindModuleInCache(\n                     }\n                 } catch (Exception e) {\n                     // will try with resolver\n-                    Message.debug(\"\\tproblem while parsing cached ivy file for: \" + mrid + \": \"\n-                        + e.getMessage());\n+                    Message.debug(\"\\tproblem while parsing cached ivy file for: \" + mrid, e);\n                 }\n             } else {\n                 Message.debug(\"\\tno ivy file in cache for \" + mrid + \": tried \" + ivyFile);\n@@ -896,6 +895,7 @@ public ArtifactDownloadReport download(\n                         adr.setDownloadTimeMillis(System.currentTimeMillis() - start);\n                     }\n                 } catch (Exception ex) {\n+                    Message.debug(ex);\n                     adr.setDownloadStatus(DownloadStatus.FAILED);\n                     adr.setDownloadDetails(ex.getMessage());\n                     adr.setDownloadTimeMillis(System.currentTimeMillis() - start);\n@@ -982,6 +982,7 @@ public ArtifactDownloadReport downloadRepositoryResource(final Resource resource\n                         adr.setLocalFile(archiveFile);\n                     }\n                 } catch (Exception ex) {\n+                    Message.debug(ex);\n                     origin.setExist(false);\n                     saveArtifactOrigin(artifact, origin);\n                     adr.setDownloadStatus(DownloadStatus.FAILED);\n@@ -1081,11 +1082,13 @@ public void originalToCachedModuleDescriptor(\n         } catch (RuntimeException e) {\n             throw e;\n         } catch (Exception e) {\n-            Message.warn(\"impossible to put metadata file in cache: \" \n-                + (orginalMetadataRef == null \n-                        ? String.valueOf(md.getResolvedModuleRevisionId()) \n-                        : String.valueOf(orginalMetadataRef))\n-                + \". \" + e.getClass().getName() + \": \" + e.getMessage());\n+            String metadataRef;\n+            if (orginalMetadataRef == null) {\n+                metadataRef = String.valueOf(md.getResolvedModuleRevisionId());\n+            } else {\n+                metadataRef = String.valueOf(orginalMetadataRef);\n+            }\n+            Message.warn(\"impossible to put metadata file in cache: \" + metadataRef, e);\n         } finally {\n             unlockMetadataArtifact(mrid);\n         }\n@@ -1256,8 +1259,7 @@ public ResolvedResource resolve(Artifact artifact) {\n                 \n                 return new ResolvedModuleRevision(resolver, resolver, md, madr);\n             } catch (IOException ex) {\n-                Message.warn(\"io problem while parsing ivy file: \" + mdRef.getResource() + \": \"\n-                    + ex.getMessage());\n+                Message.warn(\"io problem while parsing ivy file: \" + mdRef.getResource(), ex);\n                 return null;\n             }\n         } finally {",
                "raw_url": "https://github.com/apache/ant-ivy/raw/e80b85d504ae9fb64b8cff4f05bc3a3a4ec8f716/src/java/org/apache/ivy/core/cache/DefaultRepositoryCacheManager.java",
                "sha": "b30dd8b42d51c7cdf4b2a99a7592f2c461a04505",
                "status": "modified"
            },
            {
                "additions": 3,
                "blob_url": "https://github.com/apache/ant-ivy/blob/e80b85d504ae9fb64b8cff4f05bc3a3a4ec8f716/src/java/org/apache/ivy/core/check/CheckEngine.java",
                "changes": 6,
                "contents_url": "https://api.github.com/repos/apache/ant-ivy/contents/src/java/org/apache/ivy/core/check/CheckEngine.java?ref=e80b85d504ae9fb64b8cff4f05bc3a3a4ec8f716",
                "deletions": 3,
                "filename": "src/java/org/apache/ivy/core/check/CheckEngine.java",
                "patch": "@@ -124,13 +124,13 @@ public boolean check(URL ivyFile, String resolvername) {\n             }\n             return result;\n         } catch (ParseException e) {\n-            Message.info(\"parse problem on \" + ivyFile + \": \" + e);\n+            Message.info(\"parse problem on \" + ivyFile, e);\n             return false;\n         } catch (IOException e) {\n-            Message.info(\"io problem on \" + ivyFile + \": \" + e);\n+            Message.info(\"io problem on \" + ivyFile, e);\n             return false;\n         } catch (Exception e) {\n-            Message.info(\"problem on \" + ivyFile + \": \" + e);\n+            Message.info(\"problem on \" + ivyFile, e);\n             return false;\n         }\n     }",
                "raw_url": "https://github.com/apache/ant-ivy/raw/e80b85d504ae9fb64b8cff4f05bc3a3a4ec8f716/src/java/org/apache/ivy/core/check/CheckEngine.java",
                "sha": "39f3723b6efdd704ffcc866e070d76cb2111a5ae",
                "status": "modified"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/ant-ivy/blob/e80b85d504ae9fb64b8cff4f05bc3a3a4ec8f716/src/java/org/apache/ivy/core/report/ConfigurationResolveReport.java",
                "changes": 3,
                "contents_url": "https://api.github.com/repos/apache/ant-ivy/contents/src/java/org/apache/ivy/core/report/ConfigurationResolveReport.java?ref=e80b85d504ae9fb64b8cff4f05bc3a3a4ec8f716",
                "deletions": 2,
                "filename": "src/java/org/apache/ivy/core/report/ConfigurationResolveReport.java",
                "patch": "@@ -101,8 +101,7 @@ public void checkIfChanged() {\n                 hasChanged = Boolean.valueOf(!previousDepSet.equals(getModuleRevisionIds()));\n             } catch (Exception e) {\n                 Message.warn(\"Error while parsing configuration resolve report \"\n-                        + previousReportFile.getAbsolutePath());\n-                e.printStackTrace();\n+                        + previousReportFile.getAbsolutePath(), e);\n                 hasChanged = Boolean.TRUE;\n             }\n         } else {",
                "raw_url": "https://github.com/apache/ant-ivy/raw/e80b85d504ae9fb64b8cff4f05bc3a3a4ec8f716/src/java/org/apache/ivy/core/report/ConfigurationResolveReport.java",
                "sha": "0a1e164b4a331aaa608903acd0893f3c8fae51f6",
                "status": "modified"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/ant-ivy/blob/e80b85d504ae9fb64b8cff4f05bc3a3a4ec8f716/src/java/org/apache/ivy/core/repository/RepositoryManagementEngine.java",
                "changes": 1,
                "contents_url": "https://api.github.com/repos/apache/ant-ivy/contents/src/java/org/apache/ivy/core/repository/RepositoryManagementEngine.java?ref=e80b85d504ae9fb64b8cff4f05bc3a3a4ec8f716",
                "deletions": 0,
                "filename": "src/java/org/apache/ivy/core/repository/RepositoryManagementEngine.java",
                "patch": "@@ -145,6 +145,7 @@ public void load() {\n             try {\n                 loadModuleRevision(mrids[i]);\n             } catch (Exception e) {\n+                Message.debug(e);\n                 errors.put(mrids[i], e.getMessage());\n             }\n         }",
                "raw_url": "https://github.com/apache/ant-ivy/raw/e80b85d504ae9fb64b8cff4f05bc3a3a4ec8f716/src/java/org/apache/ivy/core/repository/RepositoryManagementEngine.java",
                "sha": "c6f97d4e24a1735ff24f8f23ce4145fa41d2e089",
                "status": "modified"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/ant-ivy/blob/e80b85d504ae9fb64b8cff4f05bc3a3a4ec8f716/src/java/org/apache/ivy/core/resolve/ResolveEngine.java",
                "changes": 1,
                "contents_url": "https://api.github.com/repos/apache/ant-ivy/contents/src/java/org/apache/ivy/core/resolve/ResolveEngine.java?ref=e80b85d504ae9fb64b8cff4f05bc3a3a4ec8f716",
                "deletions": 0,
                "filename": "src/java/org/apache/ivy/core/resolve/ResolveEngine.java",
                "patch": "@@ -346,6 +346,7 @@ public ResolveReport resolve(ModuleDescriptor md, ResolveOptions options)\n             eventManager.fireIvyEvent(new EndResolveEvent(md, confs, report));\n             return report;\n         } catch (RuntimeException ex) {\n+            Message.debug(ex);\n             Message.error(ex.getMessage());\n             Message.sumupProblems();\n             throw ex;",
                "raw_url": "https://github.com/apache/ant-ivy/raw/e80b85d504ae9fb64b8cff4f05bc3a3a4ec8f716/src/java/org/apache/ivy/core/resolve/ResolveEngine.java",
                "sha": "f36a3b56a0626af7e7ba0d9acf7bf981c3853956",
                "status": "modified"
            },
            {
                "additions": 6,
                "blob_url": "https://github.com/apache/ant-ivy/blob/e80b85d504ae9fb64b8cff4f05bc3a3a4ec8f716/src/java/org/apache/ivy/core/settings/IvySettings.java",
                "changes": 15,
                "contents_url": "https://api.github.com/repos/apache/ant-ivy/contents/src/java/org/apache/ivy/core/settings/IvySettings.java?ref=e80b85d504ae9fb64b8cff4f05bc3a3a4ec8f716",
                "deletions": 9,
                "filename": "src/java/org/apache/ivy/core/settings/IvySettings.java",
                "patch": "@@ -234,15 +234,14 @@ public IvySettings(IvyVariableContainer variableContainer) {\n                 } catch (FileNotFoundException e) {\n                     Message.warn(\"typedefs file not found: \" + files[i].trim());\n                 } catch (IOException e) {\n-                    Message.warn(\"problem with typedef file: \" + files[i].trim() + \": \"\n-                            + e.getMessage());\n+                    Message.warn(\"problem with typedef file: \" + files[i].trim(), e);\n                 }\n             }\n         } else {\n             try {\n                 typeDefs(getSettingsURL(\"typedef.properties\").openStream(), true);\n             } catch (IOException e) {\n-                Message.warn(\"impossible to load default type defs\");\n+                Message.warn(\"impossible to load default type defs\", e);\n             }\n         }\n         LatestLexicographicStrategy latestLexicographicStrategy = new LatestLexicographicStrategy();\n@@ -279,8 +278,8 @@ public IvySettings(IvyVariableContainer variableContainer) {\n             addMatcher((PatternMatcher) instanceField.get(null));\n         } catch (Exception e) {\n             // ignore: the matcher isn't on the classpath\n-            Message.info(\"impossible to define glob matcher: \" \n-                + \"org.apache.ivy.plugins.matcher.GlobPatternMatcher was not found.\");\n+            Message.info(\"impossible to define glob matcher: \"\n+                    + \"org.apache.ivy.plugins.matcher.GlobPatternMatcher was not found\", e);\n         }\n \n         addReportOutputter(new LogReportOutputter());\n@@ -323,8 +322,7 @@ public void configureRepositories(boolean remote) {\n                     props.load(URLHandlerRegistry.getDefault().openStream(url));\n                     configured = true;\n                 } catch (Exception ex) {\n-                    Message.verbose(\"unable to use remote repository configuration: \"\n-                            + ex.getMessage());\n+                    Message.verbose(\"unable to use remote repository configuration\", ex);\n                     props = new Properties();\n                 }\n             }\n@@ -334,8 +332,7 @@ public void configureRepositories(boolean remote) {\n                     repositoryPropsStream = getSettingsURL(\"repository.properties\").openStream();\n                     props.load(repositoryPropsStream);\n                 } catch (IOException e) {\n-                    Message.error(\"unable to use internal repository configuration: \"\n-                            + e.getMessage());\n+                    Message.error(\"unable to use internal repository configuration\", e);\n                     if (repositoryPropsStream != null) {\n                         try {\n                             repositoryPropsStream.close();",
                "raw_url": "https://github.com/apache/ant-ivy/raw/e80b85d504ae9fb64b8cff4f05bc3a3a4ec8f716/src/java/org/apache/ivy/core/settings/IvySettings.java",
                "sha": "ce8db6cf81e54e332e6be8bd0099d3c1677a8b71",
                "status": "modified"
            },
            {
                "additions": 3,
                "blob_url": "https://github.com/apache/ant-ivy/blob/e80b85d504ae9fb64b8cff4f05bc3a3a4ec8f716/src/java/org/apache/ivy/osgi/obr/OBRResolver.java",
                "changes": 6,
                "contents_url": "https://api.github.com/repos/apache/ant-ivy/contents/src/java/org/apache/ivy/osgi/obr/OBRResolver.java?ref=e80b85d504ae9fb64b8cff4f05bc3a3a4ec8f716",
                "deletions": 3,
                "filename": "src/java/org/apache/ivy/osgi/obr/OBRResolver.java",
                "patch": "@@ -128,15 +128,15 @@ private void loadRepoFromFile(URI baseUri, File repoFile, String sourceLocation)\n         } catch (ParseException e) {\n             throw new RuntimeException(\"The OBR repository resolver \" + getName()\n                     + \" couldn't be configured: the file \" + sourceLocation\n-                    + \" is incorrectly formed (\" + e.getMessage() + \")\");\n+                    + \" is incorrectly formed (\" + e.getMessage() + \")\", e);\n         } catch (IOException e) {\n             throw new RuntimeException(\"The OBR repository resolver \" + getName()\n                     + \" couldn't be configured: the file \" + sourceLocation\n-                    + \" could not be read (\" + e.getMessage() + \")\");\n+                    + \" could not be read (\" + e.getMessage() + \")\", e);\n         } catch (SAXException e) {\n             throw new RuntimeException(\"The OBR repository resolver \" + getName()\n                     + \" couldn't be configured: the file \" + sourceLocation\n-                    + \" has incorrect XML (\" + e.getMessage() + \")\");\n+                    + \" has incorrect XML (\" + e.getMessage() + \")\", e);\n         }\n         try {\n             in.close();",
                "raw_url": "https://github.com/apache/ant-ivy/raw/e80b85d504ae9fb64b8cff4f05bc3a3a4ec8f716/src/java/org/apache/ivy/osgi/obr/OBRResolver.java",
                "sha": "581be3c6731847e3629e88061bea221bf719e971",
                "status": "modified"
            },
            {
                "additions": 22,
                "blob_url": "https://github.com/apache/ant-ivy/blob/e80b85d504ae9fb64b8cff4f05bc3a3a4ec8f716/src/java/org/apache/ivy/osgi/p2/P2MetadataParser.java",
                "changes": 37,
                "contents_url": "https://api.github.com/repos/apache/ant-ivy/contents/src/java/org/apache/ivy/osgi/p2/P2MetadataParser.java?ref=e80b85d504ae9fb64b8cff4f05bc3a3a4ec8f716",
                "deletions": 15,
                "filename": "src/java/org/apache/ivy/osgi/p2/P2MetadataParser.java",
                "patch": "@@ -163,17 +163,24 @@ protected void handleAttributes(Attributes atts) throws SAXException {\n             options = Integer.parseInt(atts.getValue(OPTIONS));\n             name = atts.getValue(NAME);\n \n-            try {\n-                String uriAtt = atts.getValue(URI);\n-                String url = atts.getValue(URL);\n-                if (uri != null) {\n+            String uriAtt = atts.getValue(URI);\n+            String urlAtt = atts.getValue(URL);\n+\n+            if (uriAtt != null) {\n+                try {\n                     uri = new URI(uriAtt);\n-                } else if (url != null) {\n-                    uri = new URI(url);\n+                } catch (URISyntaxException e) {\n+                    throw new SAXParseException(\"Invalid uri attribute \" + uriAtt + \"(\"\n+                            + e.getMessage() + \")\", getLocator());\n+                }\n+            }\n+            if (uri != null && urlAtt != null) {\n+                try {\n+                    uri = new URI(urlAtt);\n+                } catch (URISyntaxException e) {\n+                    throw new SAXParseException(\"Invalid url attribute \" + urlAtt + \"(\"\n+                            + e.getMessage() + \")\", getLocator());\n                 }\n-            } catch (URISyntaxException e) {\n-                // TODO Auto-generated catch block\n-                e.printStackTrace();\n             }\n         }\n     }\n@@ -300,14 +307,14 @@ public void childHanlded(DelegetingHandler child) throws SAXParseException {\n                         try {\n                             embeddedInfo = ManifestParser.parseManifest(manifest);\n                         } catch (IOException e) {\n-                            Message.verbose(\"The Manifest of the source bundle \"\n-                                    + bundleInfo.getSymbolicName() + \" could not be parsed: \"\n-                                    + e.getMessage());\n+                            Message.verbose(\n+                                \"The Manifest of the source bundle \" + bundleInfo.getSymbolicName()\n+                                        + \" could not be parsed\", e);\n                             return;\n                         } catch (ParseException e) {\n-                            Message.verbose(\"The Manifest of the source bundle \"\n-                                    + bundleInfo.getSymbolicName() + \" is ill formed: \"\n-                                    + e.getMessage());\n+                            Message.verbose(\n+                                \"The Manifest of the source bundle \" + bundleInfo.getSymbolicName()\n+                                        + \" is ill formed\", e);\n                             return;\n                         }\n                         if (!embeddedInfo.isSource()) {",
                "raw_url": "https://github.com/apache/ant-ivy/raw/e80b85d504ae9fb64b8cff4f05bc3a3a4ec8f716/src/java/org/apache/ivy/osgi/p2/P2MetadataParser.java",
                "sha": "0e9162285d192b7c442cdf9b78ccc80a7deac291",
                "status": "modified"
            },
            {
                "additions": 3,
                "blob_url": "https://github.com/apache/ant-ivy/blob/e80b85d504ae9fb64b8cff4f05bc3a3a4ec8f716/src/java/org/apache/ivy/osgi/repo/AbstractFSManifestIterable.java",
                "changes": 6,
                "contents_url": "https://api.github.com/repos/apache/ant-ivy/contents/src/java/org/apache/ivy/osgi/repo/AbstractFSManifestIterable.java?ref=e80b85d504ae9fb64b8cff4f05bc3a3a4ec8f716",
                "deletions": 3,
                "filename": "src/java/org/apache/ivy/osgi/repo/AbstractFSManifestIterable.java",
                "patch": "@@ -89,7 +89,7 @@ public boolean hasNext() {\n                         try {\n                             bundleCandidates = listBundleFiles(currentDir).iterator();\n                         } catch (IOException e) {\n-                            Message.warn(\"Unlistable dir: \" + currentDir + \" (\" + e + \")\");\n+                            Message.warn(\"Unlistable dir: \" + currentDir, e);\n                             currentDir = null;\n                         }\n                     } else if (dirs.size() <= 1) {\n@@ -112,9 +112,9 @@ public boolean hasNext() {\n                             Message.debug(\"No manifest in jar: \" + bundleCandidate);\n                         }\n                     } catch (FileNotFoundException e) {\n-                        Message.debug(\"Jar file just removed: \" + bundleCandidate + \" (\" + e + \")\");\n+                        Message.debug(\"Jar file just removed: \" + bundleCandidate, e);\n                     } catch (IOException e) {\n-                        Message.warn(\"Unreadable jar: \" + bundleCandidate + \" (\" + e + \")\");\n+                        Message.warn(\"Unreadable jar: \" + bundleCandidate, e);\n                     } finally {\n                         if (in != null) {\n                             try {",
                "raw_url": "https://github.com/apache/ant-ivy/raw/e80b85d504ae9fb64b8cff4f05bc3a3a4ec8f716/src/java/org/apache/ivy/osgi/repo/AbstractFSManifestIterable.java",
                "sha": "6beee7296381581f23207481bb4c2c770d8ec0d4",
                "status": "modified"
            },
            {
                "additions": 6,
                "blob_url": "https://github.com/apache/ant-ivy/blob/e80b85d504ae9fb64b8cff4f05bc3a3a4ec8f716/src/java/org/apache/ivy/osgi/util/DelegetingHandler.java",
                "changes": 7,
                "contents_url": "https://api.github.com/repos/apache/ant-ivy/contents/src/java/org/apache/ivy/osgi/util/DelegetingHandler.java?ref=e80b85d504ae9fb64b8cff4f05bc3a3a4ec8f716",
                "deletions": 1,
                "filename": "src/java/org/apache/ivy/osgi/util/DelegetingHandler.java",
                "patch": "@@ -145,7 +145,7 @@ private void skipOnError(SkipOnErrorCallback callback) throws SAXException {\n         } catch (SAXException e) {\n             if (skipOnError) {\n                 skip();\n-                log(Message.MSG_ERR, e.getMessage());\n+                log(Message.MSG_ERR, e.getMessage(), e);\n             } else {\n                 throw e;\n             }\n@@ -511,6 +511,11 @@ protected void doFatalError(SAXParseException exception) throws SAXException {\n     // Functions related to error handling\n     // //////////////////////\n \n+    protected void log(int logLevel, String message, Throwable t) {\n+        Message.debug(t);\n+        log(logLevel, message);\n+    }\n+\n     protected void log(int logLevel, String message) {\n         Message.log(logLevel, getLocation(getLocator()) + message);\n     }",
                "raw_url": "https://github.com/apache/ant-ivy/raw/e80b85d504ae9fb64b8cff4f05bc3a3a4ec8f716/src/java/org/apache/ivy/osgi/util/DelegetingHandler.java",
                "sha": "036de269b9a28843e3cd922f8d573203da41e21f",
                "status": "modified"
            },
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/ant-ivy/blob/e80b85d504ae9fb64b8cff4f05bc3a3a4ec8f716/src/java/org/apache/ivy/plugins/parser/xml/XmlModuleDescriptorParser.java",
                "changes": 5,
                "contents_url": "https://api.github.com/repos/apache/ant-ivy/contents/src/java/org/apache/ivy/plugins/parser/xml/XmlModuleDescriptorParser.java?ref=e80b85d504ae9fb64b8cff4f05bc3a3a4ec8f716",
                "deletions": 3,
                "filename": "src/java/org/apache/ivy/plugins/parser/xml/XmlModuleDescriptorParser.java",
                "patch": "@@ -411,16 +411,15 @@ protected void extendsStarted(Attributes attributes) throws ParseException {\n                     parent = resolveParentFromModuleInheritanceRepository(parentResolver, parentMrid);\n                 }\n             } catch (IOException e) {\n-                Message.warn(\"Unable to parse included ivy file \" + location + \": \" \n-                    + e.getMessage());\n+                Message.warn(\"Unable to parse included ivy file \" + location, e);\n             }\n             \n             // if not found, tries to resolve using repositories\n             if (parent == null) {\n                 try {\n                     parent = parseOtherIvyFile(parentMrid);\n                 } catch (ParseException e) {\n-                    Message.warn(\"Unable to parse included ivy file for \" + parentMrid.toString());\n+                    Message.warn(\"Unable to parse included ivy file for \" + parentMrid.toString(), e);\n                 }\n             }\n             ",
                "raw_url": "https://github.com/apache/ant-ivy/raw/e80b85d504ae9fb64b8cff4f05bc3a3a4ec8f716/src/java/org/apache/ivy/plugins/parser/xml/XmlModuleDescriptorParser.java",
                "sha": "ab209a55965a80d59cfbe8bfbc1b08f99c68fd89",
                "status": "modified"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/ant-ivy/blob/e80b85d504ae9fb64b8cff4f05bc3a3a4ec8f716/src/java/org/apache/ivy/plugins/repository/sftp/SFTPRepository.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/ant-ivy/contents/src/java/org/apache/ivy/plugins/repository/sftp/SFTPRepository.java?ref=e80b85d504ae9fb64b8cff4f05bc3a3a4ec8f716",
                "deletions": 1,
                "filename": "src/java/org/apache/ivy/plugins/repository/sftp/SFTPRepository.java",
                "patch": "@@ -104,7 +104,7 @@ public Resource resolveResource(String path) {\n                 }\n             }\n         } catch (Exception e) {\n-            Message.debug(\"reolving resource error: \" + e.getMessage());\n+            Message.debug(\"Error while resolving resource \" + path, e);\n             // silent fail, return unexisting resource\n         }\n ",
                "raw_url": "https://github.com/apache/ant-ivy/raw/e80b85d504ae9fb64b8cff4f05bc3a3a4ec8f716/src/java/org/apache/ivy/plugins/repository/sftp/SFTPRepository.java",
                "sha": "02c113dc63b8f6afeb47fe1f78de45569e7f8cdc",
                "status": "modified"
            },
            {
                "additions": 7,
                "blob_url": "https://github.com/apache/ant-ivy/blob/e80b85d504ae9fb64b8cff4f05bc3a3a4ec8f716/src/java/org/apache/ivy/plugins/repository/url/ChainedRepository.java",
                "changes": 13,
                "contents_url": "https://api.github.com/repos/apache/ant-ivy/contents/src/java/org/apache/ivy/plugins/repository/url/ChainedRepository.java?ref=e80b85d504ae9fb64b8cff4f05bc3a3a4ec8f716",
                "deletions": 6,
                "filename": "src/java/org/apache/ivy/plugins/repository/url/ChainedRepository.java",
                "patch": "@@ -48,7 +48,7 @@ public Resource getResource(String source) throws IOException {\n                     return r;\n                 }\n             } catch (Exception e) {\n-                logFailed(repository);\n+                logFailed(repository, e);\n             }\n         }\n         // resource that basically doesn't exists\n@@ -65,7 +65,7 @@ public void get(String source, File destination) throws IOException {\n                 repository.get(source, destination);\n                 ok = true;\n             } catch (Exception e) {\n-                logFailed(repository);\n+                logFailed(repository, e);\n             }\n             if (ok) {\n                 logSuccess(repository);\n@@ -87,7 +87,7 @@ public List list(String parent) throws IOException {\n                     return list;\n                 }\n             } catch (Exception e) {\n-                logFailed(repository);\n+                logFailed(repository, e);\n             }\n         }\n         throw newIOEFail(\"list contents in \" + parent);\n@@ -97,9 +97,10 @@ private void logTry(Repository repository) {\n         Message.debug(\"Mirrored repository \" + getName() + \": trying \" + repository.getName());\n     }\n \n-    private void logFailed(Repository repository) {\n-        Message.warn(\"Mirrored repository \" + getName() + \": \" + repository\n-                + \" is not available. Trying the next one in the mirror list...\");\n+    private void logFailed(Repository repository, Exception e) {\n+        Message.warn(\"Mirrored repository \" + getName() + \": \" + repository.getName()\n+                + \" is not available\", e);\n+        Message.warn(\"Trying the next one in the mirror list...\");\n     }\n \n     private void logSuccess(Repository repository) {",
                "raw_url": "https://github.com/apache/ant-ivy/raw/e80b85d504ae9fb64b8cff4f05bc3a3a4ec8f716/src/java/org/apache/ivy/plugins/repository/url/ChainedRepository.java",
                "sha": "417b9a5efeb14b3a03a995bd7d8fa177a6fc856d",
                "status": "modified"
            },
            {
                "additions": 3,
                "blob_url": "https://github.com/apache/ant-ivy/blob/e80b85d504ae9fb64b8cff4f05bc3a3a4ec8f716/src/java/org/apache/ivy/plugins/repository/vfs/VfsResource.java",
                "changes": 4,
                "contents_url": "https://api.github.com/repos/apache/ant-ivy/contents/src/java/org/apache/ivy/plugins/repository/vfs/VfsResource.java?ref=e80b85d504ae9fb64b8cff4f05bc3a3a4ec8f716",
                "deletions": 1,
                "filename": "src/java/org/apache/ivy/plugins/repository/vfs/VfsResource.java",
                "patch": "@@ -68,6 +68,7 @@ private void init() {\n                 lastModified = content.getLastModifiedTime();\n                 contentLength = content.getSize();\n             } catch (FileSystemException e) {\n+                Message.debug(e);\n                 Message.verbose(e.getLocalizedMessage());\n                 exists = false;\n                 lastModified = 0;\n@@ -98,6 +99,7 @@ public List getChildren() {\n                 }\n             }\n         } catch (IOException e) {\n+            Message.debug(e);\n             Message.verbose(e.getLocalizedMessage());\n         }\n         return list;\n@@ -186,7 +188,7 @@ public boolean physicallyExists() {\n             // include all exceptions when I found it would throw a NPE exception when the query was\n             // run on non-wellformed VFS URI.\n         } catch (Exception e) {\n-            Message.verbose(e.getLocalizedMessage());\n+            Message.verbose(\"Fail to check the existance of the resource \" + getName(), e);\n             return false;\n         }\n     }",
                "raw_url": "https://github.com/apache/ant-ivy/raw/e80b85d504ae9fb64b8cff4f05bc3a3a4ec8f716/src/java/org/apache/ivy/plugins/repository/vfs/VfsResource.java",
                "sha": "3d753fdf879f032d7c27df979e1b83188541b130",
                "status": "modified"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/ant-ivy/blob/e80b85d504ae9fb64b8cff4f05bc3a3a4ec8f716/src/java/org/apache/ivy/plugins/repository/vsftp/VsftpRepository.java",
                "changes": 4,
                "contents_url": "https://api.github.com/repos/apache/ant-ivy/contents/src/java/org/apache/ivy/plugins/repository/vsftp/VsftpRepository.java?ref=e80b85d504ae9fb64b8cff4f05bc3a3a4ec8f716",
                "deletions": 3,
                "filename": "src/java/org/apache/ivy/plugins/repository/vsftp/VsftpRepository.java",
                "patch": "@@ -659,9 +659,7 @@ protected Resource lslToResource(String file, String responseLine) {\n                     return new BasicResource(file, true, contentLength, FORMAT.parse(date)\n                             .getTime(), false);\n                 } catch (Exception ex) {\n-                    Message\n-                            .warn(\"impossible to parse server response: \" + responseLine + \": \"\n-                                    + ex);\n+                    Message.warn(\"impossible to parse server response: \" + responseLine, ex);\n                     return new BasicResource(file, false, 0, 0, false);\n                 }\n             }",
                "raw_url": "https://github.com/apache/ant-ivy/raw/e80b85d504ae9fb64b8cff4f05bc3a3a4ec8f716/src/java/org/apache/ivy/plugins/repository/vsftp/VsftpRepository.java",
                "sha": "fcae75875dc5127144d3bebd4020cfc73d9272a7",
                "status": "modified"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/ant-ivy/blob/e80b85d504ae9fb64b8cff4f05bc3a3a4ec8f716/src/java/org/apache/ivy/plugins/repository/vsftp/VsftpResource.java",
                "changes": 1,
                "contents_url": "https://api.github.com/repos/apache/ant-ivy/contents/src/java/org/apache/ivy/plugins/repository/vsftp/VsftpResource.java?ref=e80b85d504ae9fb64b8cff4f05bc3a3a4ec8f716",
                "deletions": 0,
                "filename": "src/java/org/apache/ivy/plugins/repository/vsftp/VsftpResource.java",
                "patch": "@@ -36,6 +36,7 @@ protected void init() {\n         try {\n             init(repository.getInitResource(getName()));\n         } catch (IOException e) {\n+            Message.debug(e);\n             Message.verbose(e.toString());\n         }\n     }",
                "raw_url": "https://github.com/apache/ant-ivy/raw/e80b85d504ae9fb64b8cff4f05bc3a3a4ec8f716/src/java/org/apache/ivy/plugins/repository/vsftp/VsftpResource.java",
                "sha": "d28adb1c92db27f213c302bb3f2d5ed9fd3458ca",
                "status": "modified"
            },
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/ant-ivy/blob/e80b85d504ae9fb64b8cff4f05bc3a3a4ec8f716/src/java/org/apache/ivy/plugins/resolver/BasicResolver.java",
                "changes": 3,
                "contents_url": "https://api.github.com/repos/apache/ant-ivy/contents/src/java/org/apache/ivy/plugins/resolver/BasicResolver.java?ref=e80b85d504ae9fb64b8cff4f05bc3a3a4ec8f716",
                "deletions": 1,
                "filename": "src/java/org/apache/ivy/plugins/resolver/BasicResolver.java",
                "patch": "@@ -549,7 +549,7 @@ public MDResolvedResource parse(Resource resource, String rev) {\n                         return new MDResolvedResource(resource, rev, rmr);\n                     }\n                 } catch (ParseException e) {\n-                    Message.warn(\"Failed to parse the file '\" + resource + \"': \" + e.getMessage());\n+                    Message.warn(\"Failed to parse the file '\" + resource + \"'\", e);\n                     return null;\n                 }\n             }\n@@ -868,6 +868,7 @@ public ResolvedResource resolve(Artifact artifact) {\n                         String revision = origin.getArtifact().getModuleRevisionId().getRevision();\n                         return new ResolvedResource(resource, revision);\n                     } catch (IOException e) {\n+                        Message.debug(e);\n                         return null;\n                     }\n                 }",
                "raw_url": "https://github.com/apache/ant-ivy/raw/e80b85d504ae9fb64b8cff4f05bc3a3a4ec8f716/src/java/org/apache/ivy/plugins/resolver/BasicResolver.java",
                "sha": "3c012df2bdf382dab613ef6e1b1c4d416d779f00",
                "status": "modified"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/ant-ivy/blob/e80b85d504ae9fb64b8cff4f05bc3a3a4ec8f716/src/java/org/apache/ivy/plugins/resolver/ChainResolver.java",
                "changes": 3,
                "contents_url": "https://api.github.com/repos/apache/ant-ivy/contents/src/java/org/apache/ivy/plugins/resolver/ChainResolver.java?ref=e80b85d504ae9fb64b8cff4f05bc3a3a4ec8f716",
                "deletions": 2,
                "filename": "src/java/org/apache/ivy/plugins/resolver/ChainResolver.java",
                "patch": "@@ -106,8 +106,7 @@ public ResolvedModuleRevision getDependency(DependencyDescriptor dd, ResolveData\n                     mr = forcedRevision(mr);\n                 }\n             } catch (Exception ex) {\n-                Message.verbose(\"problem occurred while resolving \" + dd + \" with \" + resolver\n-                        + \": \" + StringUtils.getStackTrace(ex));\n+                Message.verbose(\"problem occurred while resolving \" + dd + \" with \" + resolver, ex);\n                 errors.add(ex);\n             } finally {\n                 if (oldLatest != null) {",
                "raw_url": "https://github.com/apache/ant-ivy/raw/e80b85d504ae9fb64b8cff4f05bc3a3a4ec8f716/src/java/org/apache/ivy/plugins/resolver/ChainResolver.java",
                "sha": "3b1904f1d83de19a392e5eca8424941bcb6b9ac5",
                "status": "modified"
            },
            {
                "additions": 7,
                "blob_url": "https://github.com/apache/ant-ivy/blob/e80b85d504ae9fb64b8cff4f05bc3a3a4ec8f716/src/java/org/apache/ivy/plugins/resolver/IBiblioResolver.java",
                "changes": 20,
                "contents_url": "https://api.github.com/repos/apache/ant-ivy/contents/src/java/org/apache/ivy/plugins/resolver/IBiblioResolver.java?ref=e80b85d504ae9fb64b8cff4f05bc3a3a4ec8f716",
                "deletions": 13,
                "filename": "src/java/org/apache/ivy/plugins/resolver/IBiblioResolver.java",
                "patch": "@@ -195,14 +195,11 @@ public void endElement(String uri, String localName, String qName)\n                     Message.verbose(\"\\tmaven-metadata not available: \" + metadata);\n                 }\n             } catch (IOException e) {\n-                Message.verbose(\n-                    \"impossible to access maven metadata file, ignored: \" + e.getMessage());\n+                Message.verbose(\"impossible to access maven metadata file, ignored\", e);\n             } catch (SAXException e) {\n-                Message.verbose(\n-                    \"impossible to parse maven metadata file, ignored: \" + e.getMessage());\n+                Message.verbose(\"impossible to parse maven metadata file, ignored\", e);\n             } catch (ParserConfigurationException e) {\n-                Message.verbose(\n-                    \"impossible to parse maven metadata file, ignored: \" + e.getMessage());\n+                Message.verbose(\"impossible to parse maven metadata file, ignored\", e);\n             } finally {\n                 if (metadataStream != null) {\n                     try {\n@@ -409,7 +406,7 @@ public void publish(Artifact artifact, File src) {\n                     } catch (IOException e) {\n                         Message.warn(\n                             \"impossible to get resource from name listed by maven-metadata.xml:\"\n-                            + rres + \": \" + e.getMessage());\n+                                    + rres, e);\n                     }\n                 }\n                 return (ResolvedResource[]) rres.toArray(new ResolvedResource[rres.size()]);\n@@ -452,14 +449,11 @@ public void endElement(String uri, String localName, String qName)\n                 Message.verbose(\"\\tmaven-metadata not available: \" + metadata);\n             }\n         } catch (IOException e) {\n-            Message.verbose(\n-                \"impossible to access maven metadata file, ignored: \" + e.getMessage());\n+            Message.verbose(\"impossible to access maven metadata file, ignored\", e);\n         } catch (SAXException e) {\n-            Message.verbose(\n-                \"impossible to parse maven metadata file, ignored: \" + e.getMessage());\n+            Message.verbose(\"impossible to parse maven metadata file, ignored\", e);\n         } catch (ParserConfigurationException e) {\n-            Message.verbose(\n-                \"impossible to parse maven metadata file, ignored: \" + e.getMessage());\n+            Message.verbose(\"impossible to parse maven metadata file, ignored\", e);\n         } finally {\n             if (metadataStream != null) {\n                 try {",
                "raw_url": "https://github.com/apache/ant-ivy/raw/e80b85d504ae9fb64b8cff4f05bc3a3a4ec8f716/src/java/org/apache/ivy/plugins/resolver/IBiblioResolver.java",
                "sha": "afc73ce305e62d00de613adf4caf63681f850d5e",
                "status": "modified"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/ant-ivy/blob/e80b85d504ae9fb64b8cff4f05bc3a3a4ec8f716/src/java/org/apache/ivy/plugins/resolver/IvyRepResolver.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/ant-ivy/contents/src/java/org/apache/ivy/plugins/resolver/IvyRepResolver.java?ref=e80b85d504ae9fb64b8cff4f05bc3a3a4ec8f716",
                "deletions": 1,
                "filename": "src/java/org/apache/ivy/plugins/resolver/IvyRepResolver.java",
                "patch": "@@ -239,7 +239,7 @@ public void startElement(String uri, String localName, String qName,\n         } catch (MalformedURLException e) {\n             //???\n         } catch (Exception e) {\n-            Message.warn(\"unable to parse content.xml file on ivyrep: \" + e.getMessage());\n+            Message.warn(\"unable to parse content.xml file on ivyrep\", e);\n         }\n         return super.listOrganisations();\n     }",
                "raw_url": "https://github.com/apache/ant-ivy/raw/e80b85d504ae9fb64b8cff4f05bc3a3a4ec8f716/src/java/org/apache/ivy/plugins/resolver/IvyRepResolver.java",
                "sha": "970db275fe550626da135f31c3fec2a47b62ace6",
                "status": "modified"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/ant-ivy/blob/e80b85d504ae9fb64b8cff4f05bc3a3a4ec8f716/src/java/org/apache/ivy/plugins/resolver/RepositoryResolver.java",
                "changes": 1,
                "contents_url": "https://api.github.com/repos/apache/ant-ivy/contents/src/java/org/apache/ivy/plugins/resolver/RepositoryResolver.java?ref=e80b85d504ae9fb64b8cff4f05bc3a3a4ec8f716",
                "deletions": 0,
                "filename": "src/java/org/apache/ivy/plugins/resolver/RepositoryResolver.java",
                "patch": "@@ -309,6 +309,7 @@ protected boolean exist(String path) {\n             Resource resource = repository.getResource(path);\n             return resource.exists();\n         } catch (IOException e) {\n+            Message.debug(e);\n             return false;\n         }\n     }",
                "raw_url": "https://github.com/apache/ant-ivy/raw/e80b85d504ae9fb64b8cff4f05bc3a3a4ec8f716/src/java/org/apache/ivy/plugins/resolver/RepositoryResolver.java",
                "sha": "ed99396fc645449420e0af941660a120bed32574",
                "status": "modified"
            },
            {
                "additions": 0,
                "blob_url": "https://github.com/apache/ant-ivy/blob/e80b85d504ae9fb64b8cff4f05bc3a3a4ec8f716/src/java/org/apache/ivy/plugins/resolver/packager/PackagerCacheEntry.java",
                "changes": 1,
                "contents_url": "https://api.github.com/repos/apache/ant-ivy/contents/src/java/org/apache/ivy/plugins/resolver/packager/PackagerCacheEntry.java?ref=e80b85d504ae9fb64b8cff4f05bc3a3a4ec8f716",
                "deletions": 1,
                "filename": "src/java/org/apache/ivy/plugins/resolver/packager/PackagerCacheEntry.java",
                "patch": "@@ -160,7 +160,6 @@ public synchronized void build(Resource packagerResource, Map properties) throws\n             project.executeTarget(\"build\");\n             this.built = true;\n         } catch (BuildException e) {\n-            e.printStackTrace(System.out);\n             Message.verbose(\"packager resolver build failed: \" + e);\n             throw e;\n         }",
                "raw_url": "https://github.com/apache/ant-ivy/raw/e80b85d504ae9fb64b8cff4f05bc3a3a4ec8f716/src/java/org/apache/ivy/plugins/resolver/packager/PackagerCacheEntry.java",
                "sha": "43089686d19c706cb61a37239b09563c40422165",
                "status": "modified"
            },
            {
                "additions": 8,
                "blob_url": "https://github.com/apache/ant-ivy/blob/e80b85d504ae9fb64b8cff4f05bc3a3a4ec8f716/src/java/org/apache/ivy/plugins/resolver/util/ResolverHelper.java",
                "changes": 23,
                "contents_url": "https://api.github.com/repos/apache/ant-ivy/contents/src/java/org/apache/ivy/plugins/resolver/util/ResolverHelper.java?ref=e80b85d504ae9fb64b8cff4f05bc3a3a4ec8f716",
                "deletions": 15,
                "filename": "src/java/org/apache/ivy/plugins/resolver/util/ResolverHelper.java",
                "patch": "@@ -89,13 +89,10 @@ private ResolverHelper() {\n                     return null;\n                 }\n             } catch (IOException e) {\n-                Message.verbose(\n-                    \"problem while listing resources in \" + root + \" with \" + rep + \":\");\n-                Message.verbose(\"  \" + e.getClass().getName() + \" \" + e.getMessage());\n+                Message.verbose(\"problem while listing resources in \" + root + \" with \" + rep, e);\n                 return null;\n             } catch (Exception e) {\n-                Message.warn(\"problem while listing resources in \" + root + \" with \" + rep + \":\");\n-                Message.warn(\"  \" + e.getClass().getName() + \" \" + e.getMessage());\n+                Message.warn(\"problem while listing resources in \" + root + \" with \" + rep, e);\n                 return null;\n             }\n         }\n@@ -123,12 +120,10 @@ private ResolverHelper() {\n                 return null;\n             }\n         } catch (IOException e) {\n-            Message.verbose(\"problem while listing resources in \" + parent + \" with \" + rep + \":\");\n-            Message.verbose(\"  \" + e.getClass().getName() + \" \" + e.getMessage());\n+            Message.verbose(\"problem while listing resources in \" + parent + \" with \" + rep, e);\n             return null;\n         } catch (Exception e) {\n-            Message.warn(\"problem while listing resources in \" + parent + \" with \" + rep + \":\");\n-            Message.warn(\"  \" + e.getClass().getName() + \" \" + e.getMessage());\n+            Message.warn(\"problem while listing resources in \" + parent + \" with \" + rep, e);\n             return null;\n         }\n     }\n@@ -159,7 +154,7 @@ private ResolverHelper() {\n                     }\n                 } catch (IOException e) {\n                     Message.warn(\"impossible to get resource from name listed by repository: \"\n-                            + rres + \": \" + e.getMessage());\n+                            + rres, e);\n                 }\n             }\n             if (revs.length != ret.size()) {\n@@ -180,7 +175,7 @@ private ResolverHelper() {\n                 }\n             } catch (IOException e) {\n                 Message.debug(\"\\timpossible to get resource from name listed by repository: \"\n-                        + partiallyResolvedPattern + \": \" + e.getMessage());\n+                        + partiallyResolvedPattern, e);\n             }\n             Message.debug(\"\\tno revision found\");\n         }\n@@ -304,8 +299,7 @@ private ResolverHelper() {\n                     Message.debug(\"\\t\\t\" + ret.size() + \" matched \" + pattern);\n                     return (String[]) ret.toArray(new String[ret.size()]);\n                 } catch (Exception e) {\n-                    Message.warn(\"problem while listing files in \" + root + \": \" + e.getClass()\n-                            + \" \" + e.getMessage());\n+                    Message.warn(\"problem while listing files in \" + root, e);\n                     return null;\n                 }\n             }\n@@ -337,8 +331,7 @@ private static String standardize(String path) {\n             }\n             return null;\n         } catch (Exception e) {\n-            Message.warn(\"problem while listing directories in \" + root + \": \" + e.getClass() + \" \"\n-                    + e.getMessage());\n+            Message.warn(\"problem while listing directories in \" + root, e);\n             return null;\n         }\n     }",
                "raw_url": "https://github.com/apache/ant-ivy/raw/e80b85d504ae9fb64b8cff4f05bc3a3a4ec8f716/src/java/org/apache/ivy/plugins/resolver/util/ResolverHelper.java",
                "sha": "1f748f18108fe9bf4accdaba4f3fbba16fb94ed9",
                "status": "modified"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/ant-ivy/blob/e80b85d504ae9fb64b8cff4f05bc3a3a4ec8f716/src/java/org/apache/ivy/tools/analyser/JarJarDependencyAnalyser.java",
                "changes": 3,
                "contents_url": "https://api.github.com/repos/apache/ant-ivy/contents/src/java/org/apache/ivy/tools/analyser/JarJarDependencyAnalyser.java?ref=e80b85d504ae9fb64b8cff4f05bc3a3a4ec8f716",
                "deletions": 2,
                "filename": "src/java/org/apache/ivy/tools/analyser/JarJarDependencyAnalyser.java",
                "patch": "@@ -80,8 +80,7 @@ public JarJarDependencyAnalyser(File jarjarjarLocation) {\n                 md.addDependency(dd);\n             }\n         } catch (IOException e) {\n-            // TODO Auto-generated catch block\n-            e.printStackTrace();\n+            Message.debug(e);\n         }\n         return (ModuleDescriptor[]) mds.values().toArray(new ModuleDescriptor[mds.values().size()]);\n     }",
                "raw_url": "https://github.com/apache/ant-ivy/raw/e80b85d504ae9fb64b8cff4f05bc3a3a4ec8f716/src/java/org/apache/ivy/tools/analyser/JarJarDependencyAnalyser.java",
                "sha": "343887423ceb4ae54dc9b312b86020ad73335a25",
                "status": "modified"
            },
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/ant-ivy/blob/e80b85d504ae9fb64b8cff4f05bc3a3a4ec8f716/src/java/org/apache/ivy/tools/analyser/JarModuleFinder.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/ant-ivy/contents/src/java/org/apache/ivy/tools/analyser/JarModuleFinder.java?ref=e80b85d504ae9fb64b8cff4f05bc3a3a4ec8f716",
                "deletions": 0,
                "filename": "src/java/org/apache/ivy/tools/analyser/JarModuleFinder.java",
                "patch": "@@ -26,6 +26,7 @@\n import org.apache.ivy.plugins.resolver.util.FileURLLister;\n import org.apache.ivy.plugins.resolver.util.ResolverHelper;\n import org.apache.ivy.plugins.resolver.util.URLLister;\n+import org.apache.ivy.util.Message;\n \n public class JarModuleFinder {\n     private String pattern;\n@@ -62,6 +63,7 @@ public JarModuleFinder(String pattern) {\n             }\n \n         } catch (Exception e) {\n+            Message.debug(e);\n             // TODO: handle exception\n         }\n         return (JarModule[]) ret.toArray(new JarModule[ret.size()]);",
                "raw_url": "https://github.com/apache/ant-ivy/raw/e80b85d504ae9fb64b8cff4f05bc3a3a4ec8f716/src/java/org/apache/ivy/tools/analyser/JarModuleFinder.java",
                "sha": "8cbd262036b956a70787cdd16408ea367825faf6",
                "status": "modified"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/ant-ivy/blob/e80b85d504ae9fb64b8cff4f05bc3a3a4ec8f716/src/java/org/apache/ivy/tools/analyser/RepositoryAnalyser.java",
                "changes": 3,
                "contents_url": "https://api.github.com/repos/apache/ant-ivy/contents/src/java/org/apache/ivy/tools/analyser/RepositoryAnalyser.java?ref=e80b85d504ae9fb64b8cff4f05bc3a3a4ec8f716",
                "deletions": 2,
                "filename": "src/java/org/apache/ivy/tools/analyser/RepositoryAnalyser.java",
                "patch": "@@ -38,8 +38,7 @@ public void analyse(String pattern, DependencyAnalyser depAnalyser) {\n                 Message.info(\"generating \" + ivyFile);\n                 XmlModuleDescriptorWriter.write(mds[i], ivyFile);\n             } catch (IOException e) {\n-                // TODO Auto-generated catch block\n-                e.printStackTrace();\n+                Message.debug(e);\n             }\n         }\n     }",
                "raw_url": "https://github.com/apache/ant-ivy/raw/e80b85d504ae9fb64b8cff4f05bc3a3a4ec8f716/src/java/org/apache/ivy/tools/analyser/RepositoryAnalyser.java",
                "sha": "1353491e783131221640dfa74c1c4989ae67ff2c",
                "status": "modified"
            },
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/ant-ivy/blob/e80b85d504ae9fb64b8cff4f05bc3a3a4ec8f716/src/java/org/apache/ivy/util/CredentialsUtil.java",
                "changes": 4,
                "contents_url": "https://api.github.com/repos/apache/ant-ivy/contents/src/java/org/apache/ivy/util/CredentialsUtil.java?ref=e80b85d504ae9fb64b8cff4f05bc3a3a4ec8f716",
                "deletions": 2,
                "filename": "src/java/org/apache/ivy/util/CredentialsUtil.java",
                "patch": "@@ -115,7 +115,7 @@ public static Credentials promptCredentials(Credentials c, File passfile) {\n                     fos = new FileOutputStream(passfile);\n                     props.store(fos, \"\");\n                 } catch (Exception e) {\n-                    Message.warn(\"error occurred while saving password file \" + passfile + \": \" + e);\n+                    Message.warn(\"error occurred while saving password file \" + passfile, e);\n                 } finally {\n                     if (fos != null) {\n                         try {\n@@ -148,7 +148,7 @@ public static Credentials loadPassfile(Credentials c, File passfile) {\n                 }\n                 return new Credentials(c.getRealm(), c.getHost(), username, passwd);\n             } catch (IOException e) {\n-                Message.warn(\"error occurred while loading password file \" + passfile + \": \" + e);\n+                Message.warn(\"error occurred while loading password file \" + passfile, e);\n             } finally {\n                 if (fis != null) {\n                     try {",
                "raw_url": "https://github.com/apache/ant-ivy/raw/e80b85d504ae9fb64b8cff4f05bc3a3a4ec8f716/src/java/org/apache/ivy/util/CredentialsUtil.java",
                "sha": "68a0ba85b4e2905f383b96107cf736c8b65c0c72",
                "status": "modified"
            },
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/ant-ivy/blob/e80b85d504ae9fb64b8cff4f05bc3a3a4ec8f716/src/java/org/apache/ivy/util/FileUtil.java",
                "changes": 7,
                "contents_url": "https://api.github.com/repos/apache/ant-ivy/contents/src/java/org/apache/ivy/util/FileUtil.java?ref=e80b85d504ae9fb64b8cff4f05bc3a3a4ec8f716",
                "deletions": 5,
                "filename": "src/java/org/apache/ivy/util/FileUtil.java",
                "patch": "@@ -156,11 +156,8 @@ public static void symlink(File src, File dest, CopyProgressListener l, boolean\n                 dest.delete(); // just make sure we do delete the invalid symlink!\n                 throw new IOException(\"error symlinking: \" + dest + \" isn't a symlink\"); \n             }\n-        } catch (IOException x) {\n-            Message.verbose(\"symlink failed; falling back to copy\");\n-            StringWriter buffer = new StringWriter();\n-            x.printStackTrace(new PrintWriter(buffer));\n-            Message.debug(buffer.toString());\n+        } catch (IOException e) {\n+            Message.verbose(\"symlink failed; falling back to copy\", e);\n             copy(src, dest, l, overwrite);\n         } catch (InterruptedException x) {\n             Thread.currentThread().interrupt();",
                "raw_url": "https://github.com/apache/ant-ivy/raw/e80b85d504ae9fb64b8cff4f05bc3a3a4ec8f716/src/java/org/apache/ivy/util/FileUtil.java",
                "sha": "769826b9d5a4ca29f26685ec6123cf5f45e72953",
                "status": "modified"
            },
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/ant-ivy/blob/e80b85d504ae9fb64b8cff4f05bc3a3a4ec8f716/src/java/org/apache/ivy/util/MemoryUtil.java",
                "changes": 5,
                "contents_url": "https://api.github.com/repos/apache/ant-ivy/contents/src/java/org/apache/ivy/util/MemoryUtil.java?ref=e80b85d504ae9fb64b8cff4f05bc3a3a4ec8f716",
                "deletions": 3,
                "filename": "src/java/org/apache/ivy/util/MemoryUtil.java",
                "patch": "@@ -47,8 +47,7 @@ public static long sizeOf(Class clazz) {\n             float approxSize = (endingMemoryUse - startingMemoryUse) / (float) objects.length;\n             size = Math.round(approxSize);\n         } catch (Exception e) {\n-            System.out.println(\"WARNING:couldn't instantiate\" + clazz);\n-            e.printStackTrace();\n+            Message.warn(\"Couldn't instantiate \" + clazz, e);\n         }\n         return size;\n     }\n@@ -80,7 +79,7 @@ private static void gc() {\n             System.runFinalization();\n             Thread.sleep(SLEEP_TIME);\n         } catch (Exception e) {\n-            e.printStackTrace();\n+            Message.debug(e);\n         }\n     }\n     ",
                "raw_url": "https://github.com/apache/ant-ivy/raw/e80b85d504ae9fb64b8cff4f05bc3a3a4ec8f716/src/java/org/apache/ivy/util/MemoryUtil.java",
                "sha": "025c7b31ef32ec903ac045250ebc7bd05470f0b8",
                "status": "modified"
            },
            {
                "additions": 50,
                "blob_url": "https://github.com/apache/ant-ivy/blob/e80b85d504ae9fb64b8cff4f05bc3a3a4ec8f716/src/java/org/apache/ivy/util/Message.java",
                "changes": 50,
                "contents_url": "https://api.github.com/repos/apache/ant-ivy/contents/src/java/org/apache/ivy/util/Message.java?ref=e80b85d504ae9fb64b8cff4f05bc3a3a4ec8f716",
                "deletions": 0,
                "filename": "src/java/org/apache/ivy/util/Message.java",
                "patch": "@@ -165,4 +165,54 @@ public static void setShowProgress(boolean progress) {\n \n     private Message() {\n     }\n+\n+    public static void debug(String message, Throwable t) {\n+        if (t == null) {\n+            debug(message);\n+        } else {\n+            debug(message + \" (\" + t.getClass().getName() + \": \" + t.getMessage() + \")\");\n+            debug(t);\n+        }\n+    }\n+\n+    public static void verbose(String message, Throwable t) {\n+        if (t == null) {\n+            verbose(message);\n+        } else {\n+            verbose(message + \" (\" + t.getClass().getName() + \": \" + t.getMessage() + \")\");\n+            debug(t);\n+        }\n+    }\n+\n+    public static void info(String message, Throwable t) {\n+        if (t == null) {\n+            info(message);\n+        } else {\n+            info(message + \" (\" + t.getClass().getName() + \": \" + t.getMessage() + \")\");\n+            debug(t);\n+        }\n+    }\n+\n+    public static void warn(String message, Throwable t) {\n+        if (t == null) {\n+            warn(message);\n+        } else {\n+            warn(message + \" (\" + t.getClass().getName() + \": \" + t.getMessage() + \")\");\n+            debug(t);\n+        }\n+    }\n+\n+    public static void error(String message, Throwable t) {\n+        if (t == null) {\n+            error(message);\n+        } else {\n+            error(message + \" (\" + t.getClass().getName() + \": \" + t.getMessage() + \")\");\n+            debug(t);\n+        }\n+    }\n+\n+    public static void debug(Throwable t) {\n+        debug(StringUtils.getStackTrace(t));\n+    }\n+\n }",
                "raw_url": "https://github.com/apache/ant-ivy/raw/e80b85d504ae9fb64b8cff4f05bc3a3a4ec8f716/src/java/org/apache/ivy/util/Message.java",
                "sha": "9650664c9327888343ba9e08a43d0f093912cdf6",
                "status": "modified"
            },
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/ant-ivy/blob/e80b85d504ae9fb64b8cff4f05bc3a3a4ec8f716/src/java/org/apache/ivy/util/PropertiesFile.java",
                "changes": 6,
                "contents_url": "https://api.github.com/repos/apache/ant-ivy/contents/src/java/org/apache/ivy/util/PropertiesFile.java?ref=e80b85d504ae9fb64b8cff4f05bc3a3a4ec8f716",
                "deletions": 4,
                "filename": "src/java/org/apache/ivy/util/PropertiesFile.java",
                "patch": "@@ -40,8 +40,7 @@ public PropertiesFile(File file, String header) {\n                 fis = new FileInputStream(file);\n                 load(fis);\n             } catch (Exception ex) {\n-                Message.warn(\"exception occurred while reading properties file \" + file + \": \"\n-                        + ex.getMessage());\n+                Message.warn(\"exception occurred while reading properties file \" + file, ex);\n             }\n             try {\n                 if (fis != null) {\n@@ -62,8 +61,7 @@ public void save() {\n             fos = new FileOutputStream(file);\n             store(fos, header);\n         } catch (Exception ex) {\n-            Message.warn(\"exception occurred while writing properties file \" + file + \": \"\n-                    + ex.getMessage());\n+            Message.warn(\"exception occurred while writing properties file \" + file, ex);\n         }\n         try {\n             if (fos != null) {",
                "raw_url": "https://github.com/apache/ant-ivy/raw/e80b85d504ae9fb64b8cff4f05bc3a3a4ec8f716/src/java/org/apache/ivy/util/PropertiesFile.java",
                "sha": "f4d204856c54cc8226a2e105239f07d0649af8b8",
                "status": "modified"
            },
            {
                "additions": 5,
                "blob_url": "https://github.com/apache/ant-ivy/blob/e80b85d504ae9fb64b8cff4f05bc3a3a4ec8f716/src/java/org/apache/ivy/util/StringUtils.java",
                "changes": 13,
                "contents_url": "https://api.github.com/repos/apache/ant-ivy/contents/src/java/org/apache/ivy/util/StringUtils.java?ref=e80b85d504ae9fb64b8cff4f05bc3a3a4ec8f716",
                "deletions": 8,
                "filename": "src/java/org/apache/ivy/util/StringUtils.java",
                "patch": "@@ -17,8 +17,8 @@\n  */\n package org.apache.ivy.util;\n \n-import java.io.ByteArrayOutputStream;\n import java.io.PrintWriter;\n+import java.io.StringWriter;\n import java.lang.reflect.InvocationTargetException;\n import java.util.Locale;\n \n@@ -73,17 +73,14 @@ public static String getErrorMessage(Throwable t) {\n      *            the exception to get the stack trace from.\n      * @return the exception stack trace\n      */\n-    public static String getStackTrace(Exception e) {\n+    public static String getStackTrace(Throwable e) {\n         if (e == null) {\n             return \"\";\n         }\n-        ByteArrayOutputStream baos = new ByteArrayOutputStream();\n-        PrintWriter printWriter = new PrintWriter(baos);\n+        StringWriter sw = new StringWriter();\n+        PrintWriter printWriter = new PrintWriter(sw, true);\n         e.printStackTrace(printWriter);\n-        printWriter.flush();\n-        String stackTrace = new String(baos.toByteArray());\n-        printWriter.close();\n-        return stackTrace;\n+        return sw.getBuffer().toString();\n     }\n \n     /**",
                "raw_url": "https://github.com/apache/ant-ivy/raw/e80b85d504ae9fb64b8cff4f05bc3a3a4ec8f716/src/java/org/apache/ivy/util/StringUtils.java",
                "sha": "b041ef8e5b091c1d98e73d16903c7eaa00ce2ae5",
                "status": "modified"
            },
            {
                "additions": 4,
                "blob_url": "https://github.com/apache/ant-ivy/blob/e80b85d504ae9fb64b8cff4f05bc3a3a4ec8f716/src/java/org/apache/ivy/util/XMLHelper.java",
                "changes": 11,
                "contents_url": "https://api.github.com/repos/apache/ant-ivy/contents/src/java/org/apache/ivy/util/XMLHelper.java?ref=e80b85d504ae9fb64b8cff4f05bc3a3a4ec8f716",
                "deletions": 7,
                "filename": "src/java/org/apache/ivy/util/XMLHelper.java",
                "patch": "@@ -64,9 +64,8 @@ private static SAXParser newSAXParser(URL schema, InputStream schemaStream)\n                 parser.setProperty(JAXP_SCHEMA_LANGUAGE, W3C_XML_SCHEMA);\n                 parser.setProperty(JAXP_SCHEMA_SOURCE, schemaStream);\n             } catch (SAXNotRecognizedException ex) {\n-                System.err.println(\n-                    \"WARNING: problem while setting JAXP validating property on SAXParser... \"\n-                    + \"XML validation will not be done: \" + ex.getMessage());\n+                Message.warn(\"problem while setting JAXP validating property on SAXParser... \"\n+                        + \"XML validation will not be done\", ex);\n                 canUseSchemaValidation = false;\n                 parserFactory.setValidating(false);\n                 parser = parserFactory.newSAXParser();\n@@ -123,9 +122,8 @@ public static void parse(\n                 try {\n                     parser.setProperty(\"http://xml.org/sax/properties/lexical-handler\", lHandler);\n                 } catch (SAXException ex) {\n-                    System.err.println(\n-                        \"WARNING: problem while setting the lexical handler property on SAXParser: \"\n-                                    + ex.getMessage());\n+                    Message.warn(\"problem while setting the lexical handler property on SAXParser\",\n+                        ex);\n                     // continue without the lexical handler\n                 }\n             }\n@@ -197,7 +195,6 @@ public static Document parseToDom(\n         try {\n             pomDomDoc = docBuilder.parse(stream, res.getName());\n         } catch (SAXException e) {\n-            e.printStackTrace();\n             throw e;\n         } finally {\n             stream.close();",
                "raw_url": "https://github.com/apache/ant-ivy/raw/e80b85d504ae9fb64b8cff4f05bc3a3a4ec8f716/src/java/org/apache/ivy/util/XMLHelper.java",
                "sha": "406adf34fe7319a789fe4c3d49adb82888774bab",
                "status": "modified"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/ant-ivy/blob/e80b85d504ae9fb64b8cff4f05bc3a3a4ec8f716/src/java/org/apache/ivy/util/url/BasicURLHandler.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/ant-ivy/contents/src/java/org/apache/ivy/util/url/BasicURLHandler.java?ref=e80b85d504ae9fb64b8cff4f05bc3a3a4ec8f716",
                "deletions": 1,
                "filename": "src/java/org/apache/ivy/util/url/BasicURLHandler.java",
                "patch": "@@ -89,7 +89,7 @@ public URLInfo getURLInfo(URL url, int timeout) {\n             Message.info(\"You probably access the destination server through \"\n                 + \"a proxy server that is not well configured.\");\n         } catch (IOException e) {\n-            Message.error(\"Server access Error: \" + e.getMessage() + \" url=\" + url);\n+            Message.error(\"Server access error at url \" + url, e);\n         } finally {\n             disconnect(con);\n         }",
                "raw_url": "https://github.com/apache/ant-ivy/raw/e80b85d504ae9fb64b8cff4f05bc3a3a4ec8f716/src/java/org/apache/ivy/util/url/BasicURLHandler.java",
                "sha": "c962d06b4408a6074de1f4932f495d586302093f",
                "status": "modified"
            }
        ],
        "message": "When catching an exception, and the stacktrace might be miningful (actually hightly valuable for a NPE), log the stack trace in debug.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/ant/ivy/core/trunk@1374870 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/ant-ivy/commit/f11bd7cbff7ee68afa55dcc6baec97b2adaf43e1",
        "patched_files": [
            "IvySettings.java",
            "VfsResource.java",
            "OBRResolver.java",
            "DefaultRepositoryCacheManager.java",
            "AntBuildTrigger.java",
            "RepositoryManagementEngine.java",
            "ResolverHelper.java",
            "XmlModuleDescriptorParser.java",
            "ChainResolver.java",
            "IBiblioResolver.java",
            "IvyRepResolver.java",
            "StringUtils.java",
            "BasicURLHandler.java",
            "ResolveEngine.java"
        ],
        "repo": "ant-ivy",
        "unit_tests": [
            "ResolverHelperTest.java",
            "BasicURLHandlerTest.java",
            "RepositoryManagementEngineTest.java",
            "AntBuildTriggerTest.java",
            "XmlModuleDescriptorParserTest.java",
            "OBRResolverTest.java",
            "ResolveEngineTest.java",
            "ChainResolverTest.java",
            "IBiblioResolverTest.java",
            "DefaultRepositoryCacheManagerTest.java",
            "VfsResourceTest.java",
            "IvyRepResolverTest.java",
            "StringUtilsTest.java",
            "IvySettingsTest.java"
        ]
    },
    "ant-ivy_f91eece": {
        "bug_id": "ant-ivy_f91eece",
        "commit": "https://github.com/apache/ant-ivy/commit/f91eece7131115bbc3ae0a38ef6da5c091a70955",
        "file": [
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/ant-ivy/blob/f91eece7131115bbc3ae0a38ef6da5c091a70955/src/java/org/apache/ivy/osgi/updatesite/xml/EclipseUpdateSiteParser.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/ant-ivy/contents/src/java/org/apache/ivy/osgi/updatesite/xml/EclipseUpdateSiteParser.java?ref=f91eece7131115bbc3ae0a38ef6da5c091a70955",
                "deletions": 0,
                "filename": "src/java/org/apache/ivy/osgi/updatesite/xml/EclipseUpdateSiteParser.java",
                "patch": "@@ -82,6 +82,8 @@ public void childHanlded(DelegetingHandler child) {\n         }\n \n         protected void handleAttributes(Attributes atts) {\n+            updatesite = new UpdateSite();\n+\n             String url = atts.getValue(URL);\n             if (url != null && !(\"\".equals(url.trim()))) {\n                 if (!url.endsWith(\"/\") && !url.endsWith(File.separator)) {",
                "raw_url": "https://github.com/apache/ant-ivy/raw/f91eece7131115bbc3ae0a38ef6da5c091a70955/src/java/org/apache/ivy/osgi/updatesite/xml/EclipseUpdateSiteParser.java",
                "sha": "b31a8f7d976b5dd29b9f08bdc87e22766c25123f",
                "status": "modified"
            },
            {
                "additions": 0,
                "blob_url": "https://github.com/apache/ant-ivy/blob/f91eece7131115bbc3ae0a38ef6da5c091a70955/test/java/org/apache/ivy/osgi/updatesite/UpdateSiteLoaderTest.java",
                "changes": 6,
                "contents_url": "https://api.github.com/repos/apache/ant-ivy/contents/test/java/org/apache/ivy/osgi/updatesite/UpdateSiteLoaderTest.java?ref=f91eece7131115bbc3ae0a38ef6da5c091a70955",
                "deletions": 6,
                "filename": "test/java/org/apache/ivy/osgi/updatesite/UpdateSiteLoaderTest.java",
                "patch": "@@ -32,11 +32,5 @@ public void testIvyDE() throws IOException, ParseException, SAXException {\n         RepoDescriptor site = loader.load(\"http://www.apache.org/dist/ant/ivyde/updatesite/\");\n         assertEquals(13, site.getModules().size());\n     }\n-    \n \n-    public void testEclipse() throws IOException, ParseException, SAXException {\n-        UpdateSiteLoader loader = new UpdateSiteLoader();\n-        RepoDescriptor site = loader.load(\"http://download.eclipse.org/releases/helios/\");\n-        assertEquals(13, site.getModules().size());\n-    }\n }",
                "raw_url": "https://github.com/apache/ant-ivy/raw/f91eece7131115bbc3ae0a38ef6da5c091a70955/test/java/org/apache/ivy/osgi/updatesite/UpdateSiteLoaderTest.java",
                "sha": "bdff758435d66986f065c541798e92ee5bd1062a",
                "status": "modified"
            }
        ],
        "message": "fix a NPE and remove a not working test\n\ngit-svn-id: https://svn.apache.org/repos/asf/ant/ivy/core/trunk@1056458 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/ant-ivy/commit/9fd1c4fa3d8827c2d046eefd08e3474617cd302a",
        "patched_files": [
            "EclipseUpdateSiteParser.java",
            "UpdateSiteLoader.java"
        ],
        "repo": "ant-ivy",
        "unit_tests": [
            "UpdateSiteLoaderTest.java"
        ]
    }
}