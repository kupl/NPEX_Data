{
    "httpcomponents-core_4a69f19": {
        "bug_id": "httpcomponents-core_4a69f19",
        "commit": "https://github.com/apache/httpcomponents-core/commit/4a69f19f5ed2e00124a5dcfdf5d3334ea4c32385",
        "file": [
            {
                "additions": 12,
                "blob_url": "https://github.com/apache/httpcomponents-core/blob/4a69f19f5ed2e00124a5dcfdf5d3334ea4c32385/httpcore/src/main/java/org/apache/http/entity/ContentType.java",
                "changes": 22,
                "contents_url": "https://api.github.com/repos/apache/httpcomponents-core/contents/httpcore/src/main/java/org/apache/http/entity/ContentType.java?ref=4a69f19f5ed2e00124a5dcfdf5d3334ea4c32385",
                "deletions": 10,
                "filename": "httpcore/src/main/java/org/apache/http/entity/ContentType.java",
                "patch": "@@ -217,19 +217,21 @@ private static ContentType create(final HeaderElement helem, final boolean stric\n \n     private static ContentType create(final String mimeType, final NameValuePair[] params, final boolean strict) {\n         Charset charset = null;\n-        for (final NameValuePair param: params) {\n-            if (param.getName().equalsIgnoreCase(\"charset\")) {\n-                final String s = param.getValue();\n-                if (!TextUtils.isBlank(s)) {\n-                    try {\n-                        charset =  Charset.forName(s);\n-                    } catch (UnsupportedCharsetException ex) {\n-                        if (strict) {\n-                            throw ex;\n+        if (params != null) {\n+            for (final NameValuePair param : params) {\n+                if (param.getName().equalsIgnoreCase(\"charset\")) {\n+                    final String s = param.getValue();\n+                    if (!TextUtils.isBlank(s)) {\n+                        try {\n+                            charset = Charset.forName(s);\n+                        } catch (UnsupportedCharsetException ex) {\n+                            if (strict) {\n+                                throw ex;\n+                            }\n                         }\n                     }\n+                    break;\n                 }\n-                break;\n             }\n         }\n         return new ContentType(mimeType, charset, params != null && params.length > 0 ? params : null);",
                "raw_url": "https://github.com/apache/httpcomponents-core/raw/4a69f19f5ed2e00124a5dcfdf5d3334ea4c32385/httpcore/src/main/java/org/apache/http/entity/ContentType.java",
                "sha": "f8413416efbbcd05da095d2294c4ac6a7e4eacd8",
                "status": "modified"
            }
        ],
        "message": "Avoid potential NPE.\n\ngit-svn-id: https://svn.apache.org/repos/asf/httpcomponents/httpcore/trunk@1698012 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/httpcomponents-core/commit/2353123afc252b10e5924546c69451b4a17e783d",
        "repo": "httpcomponents-core",
        "unit_tests": [
            "TestContentType.java"
        ]
    },
    "httpcomponents-core_efe9fa3": {
        "bug_id": "httpcomponents-core_efe9fa3",
        "commit": "https://github.com/apache/httpcomponents-core/commit/efe9fa317934a7d49a221de0d2d18c996448ed96",
        "file": [
            {
                "additions": 6,
                "blob_url": "https://github.com/apache/httpcomponents-core/blob/efe9fa317934a7d49a221de0d2d18c996448ed96/RELEASE_NOTES.txt",
                "changes": 6,
                "contents_url": "https://api.github.com/repos/apache/httpcomponents-core/contents/RELEASE_NOTES.txt?ref=efe9fa317934a7d49a221de0d2d18c996448ed96",
                "deletions": 0,
                "filename": "RELEASE_NOTES.txt",
                "patch": "@@ -1,3 +1,9 @@\n+Changes since 4.2\n+-------------------\n+\n+* Fixed NPE in StringEntity constructor thrown if ContentType#getCharset is null.\n+  Contributed by Oleg Kalnichevski <olegk at apache.org>\n+\n Release 4.2\n -------------------\n ",
                "raw_url": "https://github.com/apache/httpcomponents-core/raw/efe9fa317934a7d49a221de0d2d18c996448ed96/RELEASE_NOTES.txt",
                "sha": "55c9ca235a8e588b8cf5cf7317e3f96334c671c3",
                "status": "modified"
            },
            {
                "additions": 3,
                "blob_url": "https://github.com/apache/httpcomponents-core/blob/efe9fa317934a7d49a221de0d2d18c996448ed96/httpcore/src/main/java/org/apache/http/entity/StringEntity.java",
                "changes": 3,
                "contents_url": "https://api.github.com/repos/apache/httpcomponents-core/contents/httpcore/src/main/java/org/apache/http/entity/StringEntity.java?ref=efe9fa317934a7d49a221de0d2d18c996448ed96",
                "deletions": 0,
                "filename": "httpcore/src/main/java/org/apache/http/entity/StringEntity.java",
                "patch": "@@ -66,6 +66,9 @@ public StringEntity(final String string, final ContentType contentType) {\n             throw new IllegalArgumentException(\"Source string may not be null\");\n         }\n         Charset charset = contentType != null ? contentType.getCharset() : null;\n+        if (charset == null) {\n+            charset = HTTP.DEF_CONTENT_CHARSET;\n+        }\n         try {\n             this.content = string.getBytes(charset.name());\n         } catch (UnsupportedEncodingException ex) {",
                "raw_url": "https://github.com/apache/httpcomponents-core/raw/efe9fa317934a7d49a221de0d2d18c996448ed96/httpcore/src/main/java/org/apache/http/entity/StringEntity.java",
                "sha": "a1f96c764013034a9a4cc6231b9070343ba12100",
                "status": "modified"
            },
            {
                "additions": 33,
                "blob_url": "https://github.com/apache/httpcomponents-core/blob/efe9fa317934a7d49a221de0d2d18c996448ed96/httpcore/src/test/java/org/apache/http/entity/TestStringEntity.java",
                "changes": 33,
                "contents_url": "https://api.github.com/repos/apache/httpcomponents-core/contents/httpcore/src/test/java/org/apache/http/entity/TestStringEntity.java?ref=efe9fa317934a7d49a221de0d2d18c996448ed96",
                "deletions": 0,
                "filename": "httpcore/src/test/java/org/apache/http/entity/TestStringEntity.java",
                "patch": "@@ -28,8 +28,10 @@\n package org.apache.http.entity;\n \n import java.io.ByteArrayOutputStream;\n+import java.nio.charset.Charset;\n \n import org.apache.http.Consts;\n+import org.apache.http.util.EntityUtils;\n import org.junit.Assert;\n import org.junit.Test;\n \n@@ -77,6 +79,37 @@ public void testDefaultContent() throws Exception {\n                 httpentity.getContentType().getValue());\n     }\n \n+    private static String constructString(int [] unicodeChars) {\n+        StringBuilder buffer = new StringBuilder();\n+        if (unicodeChars != null) {\n+            for (int i = 0; i < unicodeChars.length; i++) {\n+                buffer.append((char)unicodeChars[i]);\n+            }\n+        }\n+        return buffer.toString();\n+    }\n+\n+    static final int SWISS_GERMAN_HELLO [] = {\n+            0x47, 0x72, 0xFC, 0x65, 0x7A, 0x69, 0x5F, 0x7A, 0xE4, 0x6D, 0xE4\n+        };\n+\n+    @Test\n+    public void testNullCharset() throws Exception {\n+        String s = constructString(SWISS_GERMAN_HELLO);\n+        StringEntity httpentity = new StringEntity(s, ContentType.create(\"text/plain\", (Charset) null));\n+        Assert.assertNotNull(httpentity.getContentType());\n+        Assert.assertEquals(\"text/plain\", httpentity.getContentType().getValue());\n+        Assert.assertEquals(s, EntityUtils.toString(httpentity));\n+        httpentity = new StringEntity(s, (Charset) null);\n+        Assert.assertNotNull(httpentity.getContentType());\n+        Assert.assertEquals(\"text/plain\", httpentity.getContentType().getValue());\n+        Assert.assertEquals(s, EntityUtils.toString(httpentity));\n+        httpentity = new StringEntity(s, (String) null);\n+        Assert.assertNotNull(httpentity.getContentType());\n+        Assert.assertEquals(\"text/plain\", httpentity.getContentType().getValue());\n+        Assert.assertEquals(s, EntityUtils.toString(httpentity));\n+    }\n+\n     @Test\n     public void testWriteTo() throws Exception {\n         String s = \"Message content\";",
                "raw_url": "https://github.com/apache/httpcomponents-core/raw/efe9fa317934a7d49a221de0d2d18c996448ed96/httpcore/src/test/java/org/apache/http/entity/TestStringEntity.java",
                "sha": "5c083bfe931783c75e673506fdf1141f885cb3a5",
                "status": "modified"
            }
        ],
        "message": "Fixed NPE in StringEntity constructor thrown if ContentType#getCharset is null\n\ngit-svn-id: https://svn.apache.org/repos/asf/httpcomponents/httpcore/trunk@1334434 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/httpcomponents-core/commit/54351a165a3c907e3509d6a724b7f879d8f692f6",
        "repo": "httpcomponents-core",
        "unit_tests": [
            "TestStringEntity.java"
        ]
    }
}