{
    "groovy_4d3a020": {
        "repo": "groovy",
        "message": "Fixed NPE bug in getMaximumInterfaceDistance\n\ngit-svn-id: http://svn.codehaus.org/groovy/trunk/groovy/groovy-core@5082 a5544e8c-8a19-0410-ba12-f9af4593a198",
        "commit": "https://github.com/apache/groovy/commit/4d3a020b5cd8b9549498716e48f45c1b79ab8e99",
        "parent": "https://github.com/apache/groovy/commit/3cd7a5079e43b61dbf1ff74e8021bd28889cc707",
        "bug_id": "groovy_4d3a020",
        "file": [
            {
                "sha": "aba2584a4fcfbe67ef659b2ebf911399e37cfcbc",
                "filename": "src/main/org/codehaus/groovy/runtime/MetaClassHelper.java",
                "blob_url": "https://github.com/apache/groovy/blob/4d3a020b5cd8b9549498716e48f45c1b79ab8e99/src/main/org/codehaus/groovy/runtime/MetaClassHelper.java",
                "raw_url": "https://github.com/apache/groovy/raw/4d3a020b5cd8b9549498716e48f45c1b79ab8e99/src/main/org/codehaus/groovy/runtime/MetaClassHelper.java",
                "status": "modified",
                "changes": 4,
                "additions": 2,
                "contents_url": "https://api.github.com/repos/apache/groovy/contents/src/main/org/codehaus/groovy/runtime/MetaClassHelper.java?ref=4d3a020b5cd8b9549498716e48f45c1b79ab8e99",
                "patch": "@@ -278,12 +278,12 @@ private static int getPrimitiveDistance(Class from, Class to) {\n     }\n     \n     private static int getMaximumInterfaceDistance(Class c, Class interfaceClass) {\n-        if (c==interfaceClass) return 0;\n+        if (c==null || c==interfaceClass) return 0;\n         Class[] interfaces = c.getInterfaces();\n         int max = 0;\n         for (int i=0; i<interfaces.length; i++) {\n             int sub = 0;\n-            if (interfaces[i].isAssignableFrom(c)) {\n+            if (interfaces[i].isAssignableFrom(interfaceClass)) {\n                 sub = 1+ getMaximumInterfaceDistance(interfaces[i],interfaceClass);\n             }\n             max = Math.max(max,sub);",
                "deletions": 2
            }
        ],
        "patched_files": [
            "MetaClassHelper.java"
        ],
        "unit_tests": [
            "MetaClassHelperTest.java"
        ]
    },
    "groovy_860577a": {
        "repo": "groovy",
        "message": "GROOVY-3510: NPE in MetaClassRegistryImpl\nBring back NullObject to properly handle the null cases from within InvokerHelper\n(merge rev 16276)\n\ngit-svn-id: http://svn.codehaus.org/groovy/trunk/groovy/groovy-core@16277 a5544e8c-8a19-0410-ba12-f9af4593a198",
        "commit": "https://github.com/apache/groovy/commit/860577a6e59e6c086ded4b23f9120b5d55430d35",
        "parent": "https://github.com/apache/groovy/commit/c43959198ef3886419f1df6b9b9e83fd9420f9b1",
        "bug_id": "groovy_860577a",
        "file": [
            {
                "sha": "da4683847532f44852a3ae51851a425aa3292293",
                "filename": "src/main/org/codehaus/groovy/runtime/InvokerHelper.java",
                "blob_url": "https://github.com/apache/groovy/blob/860577a6e59e6c086ded4b23f9120b5d55430d35/src/main/org/codehaus/groovy/runtime/InvokerHelper.java",
                "raw_url": "https://github.com/apache/groovy/raw/860577a6e59e6c086ded4b23f9120b5d55430d35/src/main/org/codehaus/groovy/runtime/InvokerHelper.java",
                "status": "modified",
                "changes": 26,
                "additions": 14,
                "contents_url": "https://api.github.com/repos/apache/groovy/contents/src/main/org/codehaus/groovy/runtime/InvokerHelper.java?ref=860577a6e59e6c086ded4b23f9120b5d55430d35",
                "patch": "@@ -117,9 +117,9 @@ public static String inspect(Object self) {\n     }\n \n     public static Object getAttribute(Object object, String attribute) {\n-//        if (object == null) {\n-//            throw new NullPointerException(\"Cannot get attribute: \" + attribute + \" on null object\");\n-//        }\n+        if (object == null) {\n+            object = NullObject.getNullObject();\n+        }\n \n         if (object instanceof Class) {\n             return metaRegistry.getMetaClass((Class) object).getAttribute(object, attribute);\n@@ -131,9 +131,9 @@ public static Object getAttribute(Object object, String attribute) {\n     }\n \n     public static void setAttribute(Object object, String attribute, Object newValue) {\n-//        if (object == null) {\n-//            throw new GroovyRuntimeException(\"Cannot set attribute on null object\");\n-//        }\n+        if (object == null) {\n+            object = NullObject.getNullObject();\n+        }\n \n         if (object instanceof Class) {\n             metaRegistry.getMetaClass((Class) object).setAttribute(object, attribute, newValue);\n@@ -145,9 +145,10 @@ public static void setAttribute(Object object, String attribute, Object newValue\n     }\n \n     public static Object getProperty(Object object, String property) {\n-//        if (object == null) {\n-//            throw new NullPointerException(\"Cannot get property: \" + property + \" on null object\");\n-//        }\n+        if (object == null) {\n+            object = NullObject.getNullObject();\n+        }\n+        \n         if (object instanceof GroovyObject) {\n             GroovyObject pogo = (GroovyObject) object;\n             return pogo.getProperty(property);\n@@ -167,9 +168,10 @@ public static Object getPropertySafe(Object object, String property) {\n     }\n \n     public static void setProperty(Object object, String property, Object newValue) {\n-//        if (object == null) {\n-//            throw new GroovyRuntimeException(\"Cannot set property on null object\");\n-//        }\n+        if (object == null) {\n+            object = NullObject.getNullObject();\n+        }\n+\n         if (object instanceof GroovyObject) {\n             GroovyObject pogo = (GroovyObject) object;\n             pogo.setProperty(property, newValue);",
                "deletions": 12
            }
        ],
        "patched_files": [
            "InvokerHelper.java"
        ],
        "unit_tests": [
            "InvokerHelperTest.java"
        ]
    },
    "groovy_c515f6d": {
        "repo": "groovy",
        "message": "GROOVY-4029\nPutting a map entry using subscript notation with a null key resulted in NPE. Fixed it.\n\ngit-svn-id: http://svn.codehaus.org/groovy/trunk/groovy/groovy-core@19202 a5544e8c-8a19-0410-ba12-f9af4593a198",
        "commit": "https://github.com/apache/groovy/commit/c515f6d2ae0b174ecf0c7ef06eb7552cf490fc91",
        "parent": "https://github.com/apache/groovy/commit/c2f1bebfa12aec40261d029fe4061f40048b1b07",
        "bug_id": "groovy_c515f6d",
        "file": [
            {
                "sha": "ca56ec6a1833b085813973d5958d9cde887ada44",
                "filename": "src/main/org/codehaus/groovy/runtime/MetaClassHelper.java",
                "blob_url": "https://github.com/apache/groovy/blob/c515f6d2ae0b174ecf0c7ef06eb7552cf490fc91/src/main/org/codehaus/groovy/runtime/MetaClassHelper.java",
                "raw_url": "https://github.com/apache/groovy/raw/c515f6d2ae0b174ecf0c7ef06eb7552cf490fc91/src/main/org/codehaus/groovy/runtime/MetaClassHelper.java",
                "status": "modified",
                "changes": 2,
                "additions": 0,
                "contents_url": "https://api.github.com/repos/apache/groovy/contents/src/main/org/codehaus/groovy/runtime/MetaClassHelper.java?ref=c515f6d2ae0b174ecf0c7ef06eb7552cf490fc91",
                "patch": "@@ -303,8 +303,6 @@ private static long calculateParameterDistance(Class argument, CachedClass param\n             // choose the distance to Object if a parameter is null\n             // this will mean that Object is preferred over a more\n             // specific type\n-            // remove one to dist to be sure Object is preferred\n-            objectDistance--;\n             Class clazz = parameter.getTheClass();\n             if (clazz.isPrimitive()) {\n                 objectDistance += 2;",
                "deletions": 2
            },
            {
                "sha": "dfe15ec7e0ee086100d7515b4c760a35f1b4dbf2",
                "filename": "src/test/groovy/bugs/Groovy4029Bug.groovy",
                "blob_url": "https://github.com/apache/groovy/blob/c515f6d2ae0b174ecf0c7ef06eb7552cf490fc91/src/test/groovy/bugs/Groovy4029Bug.groovy",
                "raw_url": "https://github.com/apache/groovy/raw/c515f6d2ae0b174ecf0c7ef06eb7552cf490fc91/src/test/groovy/bugs/Groovy4029Bug.groovy",
                "status": "added",
                "changes": 9,
                "additions": 9,
                "contents_url": "https://api.github.com/repos/apache/groovy/contents/src/test/groovy/bugs/Groovy4029Bug.groovy?ref=c515f6d2ae0b174ecf0c7ef06eb7552cf490fc91",
                "patch": "@@ -0,0 +1,9 @@\n+package groovy.bugs\r\n+\r\n+class Groovy4029Bug extends GroovyTestCase {\r\n+    void testAddNullKeyEntryInMapUsingSubscriptNotation() {\r\n+\t\tMap m = [:]\r\n+\t\tm[null] = null\r\n+\t\tassert m.size() == 1\r\n+    }\r\n+}\r",
                "deletions": 0
            }
        ],
        "patched_files": [
            "MetaClassHelper.java"
        ],
        "unit_tests": [
            "MetaClassHelperTest.java"
        ]
    },
    "groovy_7d4e5c7": {
        "repo": "groovy",
        "message": "GROOVY-4108: Possible NPE in Groovy Ant task\n\ngit-svn-id: http://svn.codehaus.org/groovy/trunk/groovy/groovy-core@19626 a5544e8c-8a19-0410-ba12-f9af4593a198",
        "commit": "https://github.com/apache/groovy/commit/7d4e5c7cbf9f6734185e545d53323e1646637383",
        "parent": "https://github.com/apache/groovy/commit/1dafad4016852ebad8b75d9ed5ab74096b7ca2f1",
        "bug_id": "groovy_7d4e5c7",
        "file": [
            {
                "sha": "b26fd04f264e343163528dc4657d431670cab253",
                "filename": "src/main/org/codehaus/groovy/ant/Groovy.java",
                "blob_url": "https://github.com/apache/groovy/blob/7d4e5c7cbf9f6734185e545d53323e1646637383/src/main/org/codehaus/groovy/ant/Groovy.java",
                "raw_url": "https://github.com/apache/groovy/raw/7d4e5c7cbf9f6734185e545d53323e1646637383/src/main/org/codehaus/groovy/ant/Groovy.java",
                "status": "modified",
                "changes": 8,
                "additions": 5,
                "contents_url": "https://api.github.com/repos/apache/groovy/contents/src/main/org/codehaus/groovy/ant/Groovy.java?ref=7d4e5c7cbf9f6734185e545d53323e1646637383",
                "patch": "@@ -475,9 +475,11 @@ private void createClasspathParts() {\n         }\n         String groovyHome = null;\n         final String[] strings = getSysProperties().getVariables();\n-        for (String prop : strings) {\n-            if (prop.startsWith(\"-Dgroovy.home=\")) {\n-                groovyHome = prop.substring(\"-Dgroovy.home=\".length());\n+        if (strings != null) {\n+            for (String prop : strings) {\n+                if (prop.startsWith(\"-Dgroovy.home=\")) {\n+                    groovyHome = prop.substring(\"-Dgroovy.home=\".length());\n+                }\n             }\n         }\n         if (groovyHome == null) {",
                "deletions": 3
            }
        ],
        "patched_files": [
            "Groovy.java"
        ],
        "unit_tests": [
            "GroovyTest.java"
        ]
    },
    "groovy_f233b54": {
        "repo": "groovy",
        "message": "GROOVY-4203: Groovyc Ant task can get a NPE when trying to set stubDir plus doesn't expose keepStubs flag\n\n\n\n\ngit-svn-id: http://svn.codehaus.org/groovy/trunk/groovy/groovy-core@20009 a5544e8c-8a19-0410-ba12-f9af4593a198",
        "commit": "https://github.com/apache/groovy/commit/f233b543f3f887b37888fc5157e650ce27181dc2",
        "parent": "https://github.com/apache/groovy/commit/0ebac128a8aa7cad9a20df4616eac00e07f2cceb",
        "bug_id": "groovy_f233b54",
        "file": [
            {
                "sha": "f40b55aeeb4934c53a923a333eb0ce711468b39d",
                "filename": "src/main/org/codehaus/groovy/ant/Groovyc.java",
                "blob_url": "https://github.com/apache/groovy/blob/f233b543f3f887b37888fc5157e650ce27181dc2/src/main/org/codehaus/groovy/ant/Groovyc.java",
                "raw_url": "https://github.com/apache/groovy/raw/f233b543f3f887b37888fc5157e650ce27181dc2/src/main/org/codehaus/groovy/ant/Groovyc.java",
                "status": "modified",
                "changes": 44,
                "additions": 36,
                "contents_url": "https://api.github.com/repos/apache/groovy/contents/src/main/org/codehaus/groovy/ant/Groovyc.java?ref=f233b543f3f887b37888fc5157e650ce27181dc2",
                "patch": "@@ -115,6 +115,8 @@\n     private boolean jointCompilation;\n \n     private List<File> temporaryFiles = new ArrayList(2);\n+    private File stubDir;\n+    private boolean keepStubs;\n \n \n     /**\n@@ -667,7 +669,7 @@ protected void compile() {\n                                 || (key.contains(\"encoding\"))\n                                 || (key.contains(\"source\"))\n                                 || (key.contains(\"target\"))\n-                                || (key.contains(\"verbose\"))) {\n+                                || (key.contains(\"verbose\"))) { // TODO remove extra verbose?\n                             jointOptions.add(\"-J\" + key + \"=\" + value);\n                         } else {\n                             log(\"The option \" + key + \" cannot be set on the contained <javac> element. The option will be ignored\", Project.MSG_WARN);\n@@ -859,12 +861,18 @@ protected void compile() {\n     }\n \n     protected CompilationUnit makeCompileUnit() {\n-        if (configuration.getJointCompilationOptions() != null) {\n-            if (!configuration.getJointCompilationOptions().containsKey(\"stubDir\")) {\n+        Map<String, Object> options = configuration.getJointCompilationOptions();\n+        if (options != null) {\n+            if (keepStubs) {\n+                options.put(\"keepStubs\", Boolean.TRUE);\n+            }\n+            if (stubDir != null) {\n+                options.put(\"stubDir\", stubDir);\n+            } else {\n                 try {\n                     File tempStubDir = FileSystemCompiler.createTempDir();\n                     temporaryFiles.add(tempStubDir);\n-                    configuration.getJointCompilationOptions().put(\"stubDir\", tempStubDir);\n+                    options.put(\"stubDir\", tempStubDir);\n                 } catch (IOException ioe) {\n                     throw new BuildException(ioe);\n                 }\n@@ -911,14 +919,15 @@ protected GroovyClassLoader buildClassLoaderFor() {\n \n     /**\n      * Set the stub directory into which the Java source stub\n-     * files should be generated. The directory should exist \n-     * will not be deleted automatically.\n+     * files should be generated. The directory need not exist\n+     * and will not be deleted automatically - though its contents\n+     * will be cleared unless 'keepStubs' is true. Ignored when forked.\n      *\n      * @param stubDir the stub directory\n      */\n     public void setStubdir(File stubDir) {\n         jointCompilation = true;\n-        configuration.getJointCompilationOptions().put(\"stubDir\", stubDir);\n+        this.stubDir = stubDir;\n     }\n \n     /**\n@@ -928,6 +937,25 @@ public void setStubdir(File stubDir) {\n      * @return the stub directory\n      */\n     public File getStubdir() {\n-        return (File) configuration.getJointCompilationOptions().get(\"stubDir\");\n+        return stubDir;\n+    }\n+\n+    /**\n+     * Set the keepStubs flag. Defaults to false. Set to true for debugging.\n+     * Ignored when forked.\n+     *\n+     * @param keepStubs should stubs be retained\n+     */\n+    public void setKeepStubs(boolean keepStubs) {\n+        this.keepStubs = keepStubs;\n+    }\n+\n+    /**\n+     * Gets the keepStubs flag.\n+     *\n+     * @return the keepStubs flag\n+     */\n+    public boolean getKeepStubs() {\n+        return keepStubs;\n     }\n }",
                "deletions": 8
            }
        ],
        "patched_files": [
            "Groovyc.java"
        ],
        "unit_tests": [
            "GroovycTest.java"
        ]
    },
    "groovy_3481fd2": {
        "repo": "groovy",
        "message": "NPE fix\n\ngit-svn-id: http://svn.codehaus.org/groovy/trunk/groovy/groovy-core@19628 a5544e8c-8a19-0410-ba12-f9af4593a198",
        "commit": "https://github.com/apache/groovy/commit/3481fd2478bb74fad111534db3570475c4b7983d",
        "parent": "https://github.com/apache/groovy/commit/7d4e5c7cbf9f6734185e545d53323e1646637383",
        "bug_id": "groovy_3481fd2",
        "file": [
            {
                "sha": "2a18142a8b6b2ad64c97e936e43374f81c44383d",
                "filename": "src/main/org/codehaus/groovy/tools/groovydoc/GroovyRootDocBuilder.java",
                "blob_url": "https://github.com/apache/groovy/blob/3481fd2478bb74fad111534db3570475c4b7983d/src/main/org/codehaus/groovy/tools/groovydoc/GroovyRootDocBuilder.java",
                "raw_url": "https://github.com/apache/groovy/raw/3481fd2478bb74fad111534db3570475c4b7983d/src/main/org/codehaus/groovy/tools/groovydoc/GroovyRootDocBuilder.java",
                "status": "modified",
                "changes": 6,
                "additions": 4,
                "contents_url": "https://api.github.com/repos/apache/groovy/contents/src/main/org/codehaus/groovy/tools/groovydoc/GroovyRootDocBuilder.java?ref=3481fd2478bb74fad111534db3570475c4b7983d",
                "patch": "@@ -151,8 +151,10 @@ public void buildTree(List<String> filenames) throws IOException, RecognitionExc\n         setOverview();\n \n         List<File> sourcepathFiles = new ArrayList<File>();\n-        for (String sourcepath : sourcepaths) {\n-            sourcepathFiles.add(new File(sourcepath).getAbsoluteFile());\n+        if (sourcepaths != null) {\n+            for (String sourcepath : sourcepaths) {\n+                sourcepathFiles.add(new File(sourcepath).getAbsoluteFile());\n+            }\n         }\n \n         for (String filename : filenames) {",
                "deletions": 2
            }
        ],
        "patched_files": [
            "GroovyRootDocBuilder.java"
        ],
        "unit_tests": [
            "GroovyRootDocBuilderTest.java"
        ]
    },
    "groovy_44f25ae": {
        "repo": "groovy",
        "message": "GROOVY-3718\nAfter the discussion on the dev list, it has been decided to return false for null values/patterns instead of NPEs that result from Java.\n\ngit-svn-id: http://svn.codehaus.org/groovy/trunk/groovy/groovy-core@17540 a5544e8c-8a19-0410-ba12-f9af4593a198",
        "commit": "https://github.com/apache/groovy/commit/44f25aec40eb2eef9c69ad051492667f9debb2c2",
        "parent": "https://github.com/apache/groovy/commit/9eccac2d4cfb40f97ab9f2a807118e0d2b8b3521",
        "bug_id": "groovy_44f25ae",
        "file": [
            {
                "sha": "8c0b1e5709fac7787729df4452dfdd0252bbe7ee",
                "filename": "src/main/org/codehaus/groovy/runtime/InvokerHelper.java",
                "blob_url": "https://github.com/apache/groovy/blob/44f25aec40eb2eef9c69ad051492667f9debb2c2/src/main/org/codehaus/groovy/runtime/InvokerHelper.java",
                "raw_url": "https://github.com/apache/groovy/raw/44f25aec40eb2eef9c69ad051492667f9debb2c2/src/main/org/codehaus/groovy/runtime/InvokerHelper.java",
                "status": "modified",
                "changes": 6,
                "additions": 2,
                "contents_url": "https://api.github.com/repos/apache/groovy/contents/src/main/org/codehaus/groovy/runtime/InvokerHelper.java?ref=44f25aec40eb2eef9c69ad051492667f9debb2c2",
                "patch": "@@ -314,16 +314,14 @@ public static Matcher findRegex(Object left, Object right) {\n      * @param right regular expression to compare the string to\n      */\n     public static boolean matchRegex(Object left, Object right) {\n+    \tif(left == null || right == null) return false;\n         Pattern pattern;\n         if (right instanceof Pattern) {\n             pattern = (Pattern) right;\n         } else {\n             pattern = Pattern.compile(toString(right));\n         }\n-        String stringToCompare = null;\n-        if(left != null) {\n-        \tstringToCompare = toString(left);\n-        }\n+        String stringToCompare = toString(left);\n         Matcher matcher = pattern.matcher(stringToCompare);\n         RegexSupport.setLastMatcher(matcher);\n         return matcher.matches();",
                "deletions": 4
            },
            {
                "sha": "e831bb3bcadfa2dd9e8c75350d8a5ec96ace8225",
                "filename": "src/test/groovy/bugs/Groovy3718Bug.groovy",
                "blob_url": "https://github.com/apache/groovy/blob/44f25aec40eb2eef9c69ad051492667f9debb2c2/src/test/groovy/bugs/Groovy3718Bug.groovy",
                "raw_url": "https://github.com/apache/groovy/raw/44f25aec40eb2eef9c69ad051492667f9debb2c2/src/test/groovy/bugs/Groovy3718Bug.groovy",
                "status": "modified",
                "changes": 17,
                "additions": 7,
                "contents_url": "https://api.github.com/repos/apache/groovy/contents/src/test/groovy/bugs/Groovy3718Bug.groovy?ref=44f25aec40eb2eef9c69ad051492667f9debb2c2",
                "patch": "@@ -2,15 +2,12 @@ package groovy.bugs\n \r\n class Groovy3718Bug extends GroovyTestCase {\r\n     void testPatternMatchOfNull() {\r\n-    \tdef doNullMatch1 = { ->\r\n-    \t\tnull ==~ /[^0-9]+/\r\n-\t    }\r\n-\t\r\n-\t    def doNullMatch2 = { ->\r\n-\t        null ==~ /[0-9]+/\r\n-\t    }\r\n-    \t\r\n-    \tshouldFail NullPointerException, doNullMatch1\r\n-        shouldFail NullPointerException, doNullMatch2\r\n+\t\tassertFalse null ==~ /[^0-9]+/\r\n+\t\t\r\n+\t\tassertFalse null ==~ /[0-9]+/\r\n+\r\n+\t\tassertFalse \"test\" ==~ null\r\n+\t\t\r\n+\t\tassertFalse null ==~ null\r\n     }\r\n }\r",
                "deletions": 10
            }
        ],
        "patched_files": [
            "InvokerHelper.java"
        ],
        "unit_tests": [
            "InvokerHelperTest.java"
        ]
    },
    "groovy_0695d2a": {
        "repo": "groovy",
        "message": "GROOVY-3102: NPE with flatten() in case of null elements in the collection\n\ngit-svn-id: http://svn.codehaus.org/groovy/trunk/groovy/groovy-core@13773 a5544e8c-8a19-0410-ba12-f9af4593a198",
        "commit": "https://github.com/apache/groovy/commit/0695d2a5d518816059e43d6fe842faa010219064",
        "parent": "https://github.com/apache/groovy/commit/44d164b6447909bd9b9727199928e1b523f92daf",
        "bug_id": "groovy_0695d2a",
        "file": [
            {
                "sha": "cd21a3150c9e88b4321d1baf11c258dd8b2504de",
                "filename": "src/main/org/codehaus/groovy/runtime/DefaultGroovyMethods.java",
                "blob_url": "https://github.com/apache/groovy/blob/0695d2a5d518816059e43d6fe842faa010219064/src/main/org/codehaus/groovy/runtime/DefaultGroovyMethods.java",
                "raw_url": "https://github.com/apache/groovy/raw/0695d2a5d518816059e43d6fe842faa010219064/src/main/org/codehaus/groovy/runtime/DefaultGroovyMethods.java",
                "status": "modified",
                "changes": 4,
                "additions": 2,
                "contents_url": "https://api.github.com/repos/apache/groovy/contents/src/main/org/codehaus/groovy/runtime/DefaultGroovyMethods.java?ref=0695d2a5d518816059e43d6fe842faa010219064",
                "patch": "@@ -4322,7 +4322,7 @@ private static Collection flatten(Collection elements, Collection addTo) {\n         for (Object element : elements) {\n             if (element instanceof Collection) {\n                 flatten((Collection) element, addTo);\n-            } else if (element.getClass().isArray()) {\n+            } else if (element != null && element.getClass().isArray()) {\n                 flatten(DefaultTypeTransformation.arrayAsCollection(element), addTo);\n             } else {\n                 // found a leaf\n@@ -4351,7 +4351,7 @@ private static Collection flatten(Collection elements, Collection addTo, Closure\n         for (Object element : elements) {\n             if (element instanceof Collection) {\n                 flatten((Collection) element, addTo, flattenUsing);\n-            } else if (element.getClass().isArray()) {\n+            } else if (element != null && element.getClass().isArray()) {\n                 flatten(DefaultTypeTransformation.arrayAsCollection(element), addTo, flattenUsing);\n             } else {\n                 Object flattened = flattenUsing.call(new Object[]{element});",
                "deletions": 2
            },
            {
                "sha": "9f43bc2da282277a2eb718826a91dc30f22e8785",
                "filename": "src/test/groovy/ListTest.groovy",
                "blob_url": "https://github.com/apache/groovy/blob/0695d2a5d518816059e43d6fe842faa010219064/src/test/groovy/ListTest.groovy",
                "raw_url": "https://github.com/apache/groovy/raw/0695d2a5d518816059e43d6fe842faa010219064/src/test/groovy/ListTest.groovy",
                "status": "modified",
                "changes": 8,
                "additions": 5,
                "contents_url": "https://api.github.com/repos/apache/groovy/contents/src/test/groovy/ListTest.groovy?ref=0695d2a5d518816059e43d6fe842faa010219064",
                "patch": "@@ -219,10 +219,11 @@ class ListTest extends GroovyTestCase {\n         assert (b == a && a == [1, \"foo\", (short)3, 4L])\n     }\n \n+    // incorporates GROOVY-2904 and GROOVY-3102\n     void testListFlatten() {\n-        def orig = [[[4, 5, 6, [46, 7, \"erer\"]], 4, [3, 6, 78]], 4]\n+        def orig = [[[4, 5, 6, [46, 7, \"erer\"]], null, 4, [3, 6, 78]], 4]\n         def flat = orig.flatten()\n-        assert flat == [4, 5, 6, 46, 7, \"erer\", 4, 3, 6, 78, 4]\n+        assert flat == [4, 5, 6, 46, 7, \"erer\", null, 4, 3, 6, 78, 4]\n     }\n     \n     void testSetFlatten() {\n@@ -243,8 +244,9 @@ class ListTest extends GroovyTestCase {\n         assert flat == [\"o\", \"n\", \"e\", \"t\", \"w\", \"o\"]\n     }\n \n+    // incorporates GROOVY-2904 and GROOVY-3102\n     void testFlattenListWithSuppliedClosure() {\n-        def orig = [[[4, 5, 6, [46, 7, \"erer\"]], 4, [3, 6, 78]], 4]\n+        def orig = [[[4, 5, 6, [46, 7, \"erer\"]], null, 4, [3, 6, 78]], 4]\n         def flat = orig.flatten{ it.iterator().toList() }\n         assert flat == [4, 5, 6, 46, 7, \"e\", \"r\", \"e\", \"r\", 4, 3, 6, 78, 4]\n     }",
                "deletions": 3
            }
        ],
        "patched_files": [
            "DefaultGroovyMethods.java"
        ],
        "unit_tests": [
            "DefaultGroovyMethodsTest.java"
        ]
    },
    "groovy_428f5f7": {
        "repo": "groovy",
        "message": "GROOVY-3542\nAdded a null check for permissions returned by ProtectionDomain.getPermissions() call to avoid reported NPE.\n\ngit-svn-id: http://svn.codehaus.org/groovy/trunk/groovy/groovy-core@16478 a5544e8c-8a19-0410-ba12-f9af4593a198",
        "commit": "https://github.com/apache/groovy/commit/428f5f769a031b1e3483270d0e34611e941c9b54",
        "parent": "https://github.com/apache/groovy/commit/8bf7910c1b3b890b79dcd679a003663f1ac51671",
        "bug_id": "groovy_428f5f7",
        "file": [
            {
                "sha": "7ed98e0829a565103959b46a836addf4dd0f8eaf",
                "filename": "src/main/groovy/lang/GroovyClassLoader.java",
                "blob_url": "https://github.com/apache/groovy/blob/428f5f769a031b1e3483270d0e34611e941c9b54/src/main/groovy/lang/GroovyClassLoader.java",
                "raw_url": "https://github.com/apache/groovy/raw/428f5f769a031b1e3483270d0e34611e941c9b54/src/main/groovy/lang/GroovyClassLoader.java",
                "status": "modified",
                "changes": 6,
                "additions": 4,
                "contents_url": "https://api.github.com/repos/apache/groovy/contents/src/main/groovy/lang/GroovyClassLoader.java?ref=428f5f769a031b1e3483270d0e34611e941c9b54",
                "patch": "@@ -339,8 +339,10 @@ public ProtectionDomain run() {\n             }\n         });\n         PermissionCollection myPerms = myDomain.getPermissions();\n-        for (Enumeration<Permission> elements = myPerms.elements(); elements.hasMoreElements();) {\n-            perms.add(elements.nextElement());\n+        if(myPerms != null) {\n+            for (Enumeration<Permission> elements = myPerms.elements(); elements.hasMoreElements();) {\n+                perms.add(elements.nextElement());\n+            }\n         }\n         perms.setReadOnly();\n         return perms;",
                "deletions": 2
            }
        ],
        "patched_files": [
            "GroovyClassLoader.java"
        ],
        "unit_tests": [
            "GroovyClassLoaderTest.java"
        ]
    },
    "groovy_f962b46": {
        "repo": "groovy",
        "message": "GROOVY-3711\nGroovyScriptEngine failed with NPE to eval a script that just had import statements and nothing else in script body. Fixed it.\n\ngit-svn-id: http://svn.codehaus.org/groovy/trunk/groovy/groovy-core@17485 a5544e8c-8a19-0410-ba12-f9af4593a198",
        "commit": "https://github.com/apache/groovy/commit/f962b4689335c80d64f9ec2ef84e24df652b3ce2",
        "parent": "https://github.com/apache/groovy/commit/5e3da4a55bd6f32ddc23c37675bb6e16287798d2",
        "bug_id": "groovy_f962b46",
        "file": [
            {
                "sha": "7994f04f57b210cbd9ce44a15cce521b3499fbad",
                "filename": "src/main/org/codehaus/groovy/antlr/AntlrParserPlugin.java",
                "blob_url": "https://github.com/apache/groovy/blob/f962b4689335c80d64f9ec2ef84e24df652b3ce2/src/main/org/codehaus/groovy/antlr/AntlrParserPlugin.java",
                "raw_url": "https://github.com/apache/groovy/raw/f962b4689335c80d64f9ec2ef84e24df652b3ce2/src/main/org/codehaus/groovy/antlr/AntlrParserPlugin.java",
                "status": "modified",
                "changes": 3,
                "additions": 3,
                "contents_url": "https://api.github.com/repos/apache/groovy/contents/src/main/org/codehaus/groovy/antlr/AntlrParserPlugin.java?ref=f962b4689335c80d64f9ec2ef84e24df652b3ce2",
                "patch": "@@ -200,6 +200,9 @@ public ModuleNode buildAST(SourceUnit sourceUnit, ClassLoader classLoader, Reduc\n         makeModule();\n         try {\n             convertGroovy(ast);\n+            if(output.getStatementBlock().isEmpty() && output.getMethods().isEmpty() && output.getClasses().isEmpty()) {\n+            \toutput.addStatement(ReturnStatement.RETURN_NULL_OR_VOID);\n+            }\n         }\n         catch (ASTRuntimeException e) {\n             throw new ASTParserException(e.getMessage() + \". File: \" + sourceUnit.getName(), e);",
                "deletions": 0
            },
            {
                "sha": "bf2ab5490b087926d7eff4730761f8a418138742",
                "filename": "src/main/org/codehaus/groovy/jsr223/GroovyScriptEngineImpl.java",
                "blob_url": "https://github.com/apache/groovy/blob/f962b4689335c80d64f9ec2ef84e24df652b3ce2/src/main/org/codehaus/groovy/jsr223/GroovyScriptEngineImpl.java",
                "raw_url": "https://github.com/apache/groovy/raw/f962b4689335c80d64f9ec2ef84e24df652b3ce2/src/main/org/codehaus/groovy/jsr223/GroovyScriptEngineImpl.java",
                "status": "modified",
                "changes": 4,
                "additions": 3,
                "contents_url": "https://api.github.com/repos/apache/groovy/contents/src/main/org/codehaus/groovy/jsr223/GroovyScriptEngineImpl.java?ref=f962b4689335c80d64f9ec2ef84e24df652b3ce2",
                "patch": "@@ -110,7 +110,9 @@ public Object eval(Reader reader, ScriptContext ctx)\n     public Object eval(String script, ScriptContext ctx) \n                        throws ScriptException {\n         try {\n-            return eval(getScriptClass(script), ctx);\n+        \tClass clazz = getScriptClass(script);\n+            if(clazz == null) throw new ScriptException(\"Script class is null\");\n+            return eval(clazz, ctx);\n         } catch (SyntaxException e) {\n             throw new ScriptException(e.getMessage(), \n                                       e.getSourceLocator(), e.getLine());",
                "deletions": 1
            },
            {
                "sha": "6ecea81a719b5330c969b1249eabd8448c67b0ce",
                "filename": "src/test/org/codehaus/groovy/antlr/treewalker/UnimplementedSyntaxTest.java",
                "blob_url": "https://github.com/apache/groovy/blob/f962b4689335c80d64f9ec2ef84e24df652b3ce2/src/test/org/codehaus/groovy/antlr/treewalker/UnimplementedSyntaxTest.java",
                "raw_url": "https://github.com/apache/groovy/raw/f962b4689335c80d64f9ec2ef84e24df652b3ce2/src/test/org/codehaus/groovy/antlr/treewalker/UnimplementedSyntaxTest.java",
                "status": "modified",
                "changes": 15,
                "additions": 12,
                "contents_url": "https://api.github.com/repos/apache/groovy/contents/src/test/org/codehaus/groovy/antlr/treewalker/UnimplementedSyntaxTest.java?ref=f962b4689335c80d64f9ec2ef84e24df652b3ce2",
                "patch": "@@ -203,11 +203,17 @@ public void test_SpreadExpressionInGString2_FAILS() throws Exception {\n     // -----------------------\n     // TODO: move somewhere else\n     public void test_StaticImport1() throws Exception {\n-        assertNotNull(compile(\"import static foo.Bar.mooky\"));\n+    \t//GROOVY-3711: The following call now results in a valid script class node, so foo.Bar needs to get resolved.\n+    \tGroovyShell groovyShell = new GroovyShell();\n+    \tcompile(\"package foo; class Bar{}\", groovyShell);\n+        assertNotNull(compile(\"import static foo.Bar.mooky\", groovyShell));\n     }\n \n     public void test_StaticImport2() throws Exception {\n-        assertNotNull(compile(\"import static foo.Bar.*\"));\n+    \t//GROOVY-3711: The following call now results in a valid script class node, so foo.Bar needs to get resolved.\n+    \tGroovyShell groovyShell = new GroovyShell();\n+    \tcompile(\"package foo; class Bar{}\", groovyShell);\n+        assertNotNull(compile(\"import static foo.Bar.*\", groovyShell));\n     }\n \n     // TODO: move somewhere else GROOVY-1874\n@@ -233,9 +239,12 @@ public void test_TypeParameters_FAILS() throws Exception {\n     }\n \n     private Script compile(String input) throws Exception {\n+    \treturn compile(input, new GroovyShell());\n+    }\n+\n+    private Script compile(String input, GroovyShell groovyShell) throws Exception {\n         TraversalTestHelper traverser = new TraversalTestHelper();\n         traverser.traverse(input, SourcePrinter.class, Boolean.FALSE);\n-        GroovyShell groovyShell = new GroovyShell();\n         return groovyShell.parse(input);\n     }\n ",
                "deletions": 3
            },
            {
                "sha": "1004f1e94ccc9c3ed695d5c4d302bf271368c6f7",
                "filename": "src/test/org/codehaus/groovy/jsr223/JSR223Test.groovy",
                "blob_url": "https://github.com/apache/groovy/blob/f962b4689335c80d64f9ec2ef84e24df652b3ce2/src/test/org/codehaus/groovy/jsr223/JSR223Test.groovy",
                "raw_url": "https://github.com/apache/groovy/raw/f962b4689335c80d64f9ec2ef84e24df652b3ce2/src/test/org/codehaus/groovy/jsr223/JSR223Test.groovy",
                "status": "modified",
                "changes": 9,
                "additions": 9,
                "contents_url": "https://api.github.com/repos/apache/groovy/contents/src/test/org/codehaus/groovy/jsr223/JSR223Test.groovy?ref=f962b4689335c80d64f9ec2ef84e24df652b3ce2",
                "patch": "@@ -83,4 +83,13 @@ public class JSR223Test extends TestCase {\n         } catch (ScriptException e) {\n         }\n     }\n+\n+    public void testEmptyScriptWithJustImports() {\n+        ScriptEngine engine = manager.getEngineByName(\"groovy\");\n+        assertNotNull(engine);\n+\n+        // GROOVY-3711: The eval of the following script earlier resulted in NPE\n+        // as groovy did not generate a script class in this case\n+        engine.eval(\"import java.lang.*\");\n+    }\n }",
                "deletions": 0
            }
        ],
        "patched_files": [
            "GroovyScriptEngineImpl.java",
            "AntlrParserPlugin.java"
        ],
        "unit_tests": [
            "UnimplementedSyntaxTest.java"
        ]
    }
}