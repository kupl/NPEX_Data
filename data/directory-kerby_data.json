[{"commit": "https://github.com/apache/directory-kerby/commit/6bf7ddbcd4d31381fb1dff98eb6a2263ace94a65", "parent": "https://github.com/apache/directory-kerby/commit/1e30df40637e68ad1af472cb6ffa90c6473f3b2f", "message": "Avoiding some NPEs", "bug_id": "directory-kerby_1", "file": [{"additions": 16, "raw_url": "https://github.com/apache/directory-kerby/raw/6bf7ddbcd4d31381fb1dff98eb6a2263ace94a65/kerby-kerb/kerb-gssapi/src/main/java/org/apache/kerby/kerberos/kerb/gss/impl/GssUtil.java", "blob_url": "https://github.com/apache/directory-kerby/blob/6bf7ddbcd4d31381fb1dff98eb6a2263ace94a65/kerby-kerb/kerb-gssapi/src/main/java/org/apache/kerby/kerberos/kerb/gss/impl/GssUtil.java", "sha": "6b55ea90dcab3284f4291e889a40df91063de453", "changes": 27, "status": "modified", "deletions": 11, "contents_url": "https://api.github.com/repos/apache/directory-kerby/contents/kerby-kerb/kerb-gssapi/src/main/java/org/apache/kerby/kerberos/kerb/gss/impl/GssUtil.java?ref=6bf7ddbcd4d31381fb1dff98eb6a2263ace94a65", "patch": "@@ -261,21 +261,26 @@ public static KerberosTicket convertKrbTicketToKerberosTicket(KrbTicket krbTicke\n         boolean[] flags = ticketFlagsToBooleans(ticketFlags);\n \n         Date authTime = new Date(encKdcRepPart.getAuthTime().getTime());\n-        Date startTime = new Date(encKdcRepPart.getStartTime().getTime());\n+        Date startTime = null;\n+        if (encKdcRepPart.getStartTime() != null) {\n+            startTime = new Date(encKdcRepPart.getStartTime().getTime());\n+        }\n         Date endTime = new Date(encKdcRepPart.getEndTime().getTime());\n         Date renewTill = new Date(encKdcRepPart.getRenewTill().getTime());\n \n         InetAddress[] clientAddresses = null;\n-        List<HostAddress> hostAddresses = encKdcRepPart.getCaddr().getElements();\n-        if (hostAddresses != null) {\n-            int i = 0;\n-            clientAddresses = new InetAddress[hostAddresses.size()];\n-            for (HostAddress hostAddr : hostAddresses) {\n-                try {\n-                    InetAddress iAddr = InetAddress.getByAddress(hostAddr.getAddress());\n-                    clientAddresses[i++] = iAddr;\n-                } catch (UnknownHostException e) {\n-                    throw new GSSException(GSSException.FAILURE, -1, \"Bad client address\");\n+        if (encKdcRepPart.getCaddr() != null) {\n+            List<HostAddress> hostAddresses = encKdcRepPart.getCaddr().getElements();\n+            if (hostAddresses != null) {\n+                int i = 0;\n+                clientAddresses = new InetAddress[hostAddresses.size()];\n+                for (HostAddress hostAddr : hostAddresses) {\n+                    try {\n+                        InetAddress iAddr = InetAddress.getByAddress(hostAddr.getAddress());\n+                        clientAddresses[i++] = iAddr;\n+                    } catch (UnknownHostException e) {\n+                        throw new GSSException(GSSException.FAILURE, -1, \"Bad client address\");\n+                    }\n                 }\n             }\n         }", "filename": "kerby-kerb/kerb-gssapi/src/main/java/org/apache/kerby/kerberos/kerb/gss/impl/GssUtil.java"}], "repo": "directory-kerby"}, {"commit": "https://github.com/apache/directory-kerby/commit/5e84ee43ff04b0f9e90cd80db6ec3eb33a658c9b", "parent": "https://github.com/apache/directory-kerby/commit/90795243b96e7c98865c92db86405c2299fdf118", "message": "NPE fixes", "bug_id": "directory-kerby_2", "file": [{"additions": 15, "raw_url": "https://github.com/apache/directory-kerby/raw/5e84ee43ff04b0f9e90cd80db6ec3eb33a658c9b/kerby-kdc/src/main/java/org/apache/kerby/kerberos/kdc/impl/NettyKdcServerImpl.java", "blob_url": "https://github.com/apache/directory-kerby/blob/5e84ee43ff04b0f9e90cd80db6ec3eb33a658c9b/kerby-kdc/src/main/java/org/apache/kerby/kerberos/kdc/impl/NettyKdcServerImpl.java", "sha": "1ab3d5e999ba9ae9982123460347668a9376dc2b", "changes": 26, "status": "modified", "deletions": 11, "contents_url": "https://api.github.com/repos/apache/directory-kerby/contents/kerby-kdc/src/main/java/org/apache/kerby/kerberos/kdc/impl/NettyKdcServerImpl.java?ref=5e84ee43ff04b0f9e90cd80db6ec3eb33a658c9b", "patch": "@@ -80,19 +80,23 @@ private void prepareHandler() {\n     protected void doStop() throws Exception {\n         super.doStop();\n \n-        network.stop();\n+        if (network != null) {\n+            network.stop();\n+        }\n \n-        executor.shutdown();\n+        if (executor != null) {\n+            executor.shutdown();\n \n-        try {\n-            boolean terminated = false;\n-            do {\n-                // wait until the pool has terminated\n-                terminated = executor.awaitTermination(60, TimeUnit.SECONDS);\n-            } while (!terminated);\n-        } catch (InterruptedException e) {\n-            executor.shutdownNow();\n-            LOG.warn(\"waitForTermination interrupted\");\n+            try {\n+                boolean terminated = false;\n+                do {\n+                    // wait until the pool has terminated\n+                    terminated = executor.awaitTermination(60, TimeUnit.SECONDS);\n+                } while (!terminated);\n+            } catch (InterruptedException e) {\n+                executor.shutdownNow();\n+                LOG.warn(\"waitForTermination interrupted\");\n+            }\n         }\n         LOG.info(\"Netty kdc server stopped.\");\n     }", "filename": "kerby-kdc/src/main/java/org/apache/kerby/kerberos/kdc/impl/NettyKdcServerImpl.java"}], "repo": "directory-kerby"}, {"commit": "https://github.com/apache/directory-kerby/commit/fcaf33ec988747471c990f3d8109e5907745df76", "parent": "https://github.com/apache/directory-kerby/commit/45bbe2afed3e5eaf8b7d8d05520cd20f64cc3e7f", "message": "DIRKRB-666 - NPE if klist.sh is called on an empty cache", "bug_id": "directory-kerby_3", "file": [{"additions": 3, "raw_url": "https://github.com/apache/directory-kerby/raw/fcaf33ec988747471c990f3d8109e5907745df76/kerby-kdc/src/main/java/org/apache/kerby/kerberos/kdc/KerbyKdcServer.java", "blob_url": "https://github.com/apache/directory-kerby/blob/fcaf33ec988747471c990f3d8109e5907745df76/kerby-kdc/src/main/java/org/apache/kerby/kerberos/kdc/KerbyKdcServer.java", "sha": "df7caa6e78a706ed8c1a4664235a9bfca401c7da", "changes": 6, "status": "modified", "deletions": 3, "contents_url": "https://api.github.com/repos/apache/directory-kerby/contents/kerby-kdc/src/main/java/org/apache/kerby/kerberos/kdc/KerbyKdcServer.java?ref=fcaf33ec988747471c990f3d8109e5907745df76", "patch": "@@ -83,16 +83,16 @@ public static void main(String[] args) throws KrbException {\n         try {\n             server.init();\n         } catch (KrbException e) {\n-            System.err.println(\"Errors occurred when start kdc server:  \" + e.getMessage());\n+            System.err.println(\"Errors occurred when starting the kdc server:  \" + e.getMessage());\n             System.exit(4);\n         }\n \n         try {\n             server.start();\n             System.out.println(\"KDC started.\");\n         } catch (KrbException e) {\n-            System.err.println(\"Errors occurred when start kdc server:  \" + e.getMessage());\n+            System.err.println(\"Errors occurred when starting the kdc server:  \" + e.getMessage());\n             System.exit(5);\n         }\n     }\n-}\n\\ No newline at end of file\n+}", "filename": "kerby-kdc/src/main/java/org/apache/kerby/kerberos/kdc/KerbyKdcServer.java"}, {"additions": 14, "raw_url": "https://github.com/apache/directory-kerby/raw/fcaf33ec988747471c990f3d8109e5907745df76/kerby-tool/client-tool/src/main/java/org/apache/kerby/kerberos/tool/klist/KlistTool.java", "blob_url": "https://github.com/apache/directory-kerby/blob/fcaf33ec988747471c990f3d8109e5907745df76/kerby-tool/client-tool/src/main/java/org/apache/kerby/kerberos/tool/klist/KlistTool.java", "sha": "560bfacc3917e9fdc0168955f5f0d26830638450", "changes": 29, "status": "modified", "deletions": 15, "contents_url": "https://api.github.com/repos/apache/directory-kerby/contents/kerby-tool/client-tool/src/main/java/org/apache/kerby/kerberos/tool/klist/KlistTool.java?ref=fcaf33ec988747471c990f3d8109e5907745df76", "patch": "@@ -85,7 +85,6 @@ private static void printUsage(String error) {\n \n     private static int printCredentialCacheInfo(KOptions klOptions) {\n         CredentialCache cc = new CredentialCache();\n-        List<Credential> credentials;\n         InputStream cis = null;\n         String fileName;\n \n@@ -109,25 +108,25 @@ private static int printCredentialCacheInfo(KOptions klOptions) {\n             }\n         }\n \n-        if (cc != null) {\n-            credentials = cc.getCredentials();\n+        List<Credential> credentials = cc.getCredentials();\n \n-            System.out.println(\"Ticket cache: \" + fileName);\n+        System.out.println(\"Ticket cache: \" + fileName);\n+        if (cc.getPrimaryPrincipal() != null) {\n             System.out.println(\"Default principal: \" + cc.getPrimaryPrincipal().getName());\n+        }\n \n-            if (credentials.isEmpty()) {\n-                System.out.println(\"No credential has been cached.\");\n-            } else {\n-                DateFormat df = new SimpleDateFormat(\"yyyy-MM-dd HH:mm:ss\");\n+        if (credentials.isEmpty()) {\n+            System.out.println(\"No credential has been cached.\");\n+        } else {\n+            DateFormat df = new SimpleDateFormat(\"yyyy-MM-dd HH:mm:ss\");\n \n-                System.out.println(\"Valid starting\\t\\tExpires\\t\\t\\tService principal\");\n+            System.out.println(\"Valid starting\\t\\tExpires\\t\\t\\tService principal\");\n \n-                for (Credential crd : credentials) {\n-                    System.out.println(df.format(crd.getStartTime().getTime()) + \"\\t\"\n-                        + df.format(crd.getEndTime().getTime()) + \"\\t\"\n-                        + crd.getServerName() + \"\\n\"\n-                        + \"\\t\" + \"renew until\" + \"\\t\" + df.format(crd.getRenewTill().getTime()));\n-                }\n+            for (Credential crd : credentials) {\n+                System.out.println(df.format(crd.getStartTime().getTime()) + \"\\t\"\n+                    + df.format(crd.getEndTime().getTime()) + \"\\t\"\n+                    + crd.getServerName() + \"\\n\"\n+                    + \"\\t\" + \"renew until\" + \"\\t\" + df.format(crd.getRenewTill().getTime()));\n             }\n         }\n ", "filename": "kerby-tool/client-tool/src/main/java/org/apache/kerby/kerberos/tool/klist/KlistTool.java"}, {"additions": 2, "raw_url": "https://github.com/apache/directory-kerby/raw/fcaf33ec988747471c990f3d8109e5907745df76/kerby-tool/kdc-tool/src/main/java/org/apache/kerby/kerberos/tool/kadmin/KadminTool.java", "blob_url": "https://github.com/apache/directory-kerby/blob/fcaf33ec988747471c990f3d8109e5907745df76/kerby-tool/kdc-tool/src/main/java/org/apache/kerby/kerberos/tool/kadmin/KadminTool.java", "sha": "72f649190b93f582c42d8b7426f0c0f8eeda734a", "changes": 4, "status": "modified", "deletions": 2, "contents_url": "https://api.github.com/repos/apache/directory-kerby/contents/kerby-tool/kdc-tool/src/main/java/org/apache/kerby/kerberos/tool/kadmin/KadminTool.java?ref=fcaf33ec988747471c990f3d8109e5907745df76", "patch": "@@ -224,7 +224,7 @@ public static void main(String[] args) throws KrbException {\n                 AuthUtil.loginUsingTicketCache(kadminPrincipal, ccFile);\n             } catch (LoginException e) {\n                 System.err.println(\"Could not login with: \" + kadminPrincipal\n-                        + e.getMessage());\n+                        + \" \" + e.getMessage());\n                 return;\n             }\n         } else if (kOptions.contains(KadminOption.K)) {\n@@ -237,7 +237,7 @@ public static void main(String[] args) throws KrbException {\n                 AuthUtil.loginUsingKeytab(kadminPrincipal, keyTabFile);\n             } catch (LoginException e) {\n                 System.err.println(\"Could not login with: \" + kadminPrincipal\n-                        + e.getMessage());\n+                        + \" \" + e.getMessage());\n                 return;\n             }\n         } else {", "filename": "kerby-tool/kdc-tool/src/main/java/org/apache/kerby/kerberos/tool/kadmin/KadminTool.java"}], "repo": "directory-kerby"}, {"commit": "https://github.com/apache/directory-kerby/commit/a2ee015375f976a021769ee52cb06f88f05edbd0", "parent": "https://github.com/apache/directory-kerby/commit/d09d191b1ab22aaa79e102954c80944fb790735d", "message": "Fixing some NPEs on shutdown", "bug_id": "directory-kerby_4", "file": [{"additions": 15, "raw_url": "https://github.com/apache/directory-kerby/raw/a2ee015375f976a021769ee52cb06f88f05edbd0/kerby-kerb/kerb-server/src/main/java/org/apache/kerby/kerberos/kerb/server/impl/DefaultInternalKdcServerImpl.java", "blob_url": "https://github.com/apache/directory-kerby/blob/a2ee015375f976a021769ee52cb06f88f05edbd0/kerby-kerb/kerb-server/src/main/java/org/apache/kerby/kerberos/kerb/server/impl/DefaultInternalKdcServerImpl.java", "sha": "4c63b0412f6010d18e4abcccb2ed864b3f553db9", "changes": 26, "status": "modified", "deletions": 11, "contents_url": "https://api.github.com/repos/apache/directory-kerby/contents/kerby-kerb/kerb-server/src/main/java/org/apache/kerby/kerberos/kerb/server/impl/DefaultInternalKdcServerImpl.java?ref=a2ee015375f976a021769ee52cb06f88f05edbd0", "patch": "@@ -80,19 +80,23 @@ private void prepareHandler() {\n     protected void doStop() throws Exception {\n         super.doStop();\n \n-        network.stop();\n+        if (network != null) {\n+            network.stop();\n+        }\n \n-        executor.shutdown();\n+        if (executor != null) {\n+            executor.shutdown();\n \n-        try {\n-            boolean terminated = false;\n-            do {\n-                // wait until the pool has terminated\n-                terminated = executor.awaitTermination(60, TimeUnit.SECONDS);\n-            } while (!terminated);\n-        } catch (InterruptedException e) {\n-            executor.shutdownNow();\n-            LOG.warn(\"waitForTermination interrupted\");\n+            try {\n+                boolean terminated = false;\n+                do {\n+                    // wait until the pool has terminated\n+                    terminated = executor.awaitTermination(60, TimeUnit.SECONDS);\n+                } while (!terminated);\n+            } catch (InterruptedException e) {\n+                executor.shutdownNow();\n+                LOG.warn(\"waitForTermination interrupted\");\n+            }\n         }\n \n         LOG.info(\"Default Internal kdc server stopped.\");", "filename": "kerby-kerb/kerb-server/src/main/java/org/apache/kerby/kerberos/kerb/server/impl/DefaultInternalKdcServerImpl.java"}], "repo": "directory-kerby"}, {"commit": "https://github.com/apache/directory-kerby/commit/08129710af4c5139197489742d2a09c2fc32817f", "parent": "https://github.com/apache/directory-kerby/commit/e519217727625f0e4557a04b29af36b40c18e69b", "message": "Another NPE if the audience is not set", "bug_id": "directory-kerby_5", "file": [{"additions": 1, "raw_url": "https://github.com/apache/directory-kerby/raw/08129710af4c5139197489742d2a09c2fc32817f/kerby-kerb/kerb-server/src/main/java/org/apache/kerby/kerberos/kerb/server/preauth/token/TokenPreauth.java", "blob_url": "https://github.com/apache/directory-kerby/blob/08129710af4c5139197489742d2a09c2fc32817f/kerby-kerb/kerb-server/src/main/java/org/apache/kerby/kerberos/kerb/server/preauth/token/TokenPreauth.java", "sha": "e508023b64d4c212db22af4ce55ab753a0c3cd39", "changes": 2, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/directory-kerby/contents/kerby-kerb/kerb-server/src/main/java/org/apache/kerby/kerberos/kerb/server/preauth/token/TokenPreauth.java?ref=08129710af4c5139197489742d2a09c2fc32817f", "patch": "@@ -112,7 +112,7 @@ public boolean verify(KdcRequest kdcRequest, PluginRequestContext requestContext\n             PrincipalName serverPrincipal = kdcRequest.getKdcReq().getReqBody().getSname();\n             serverPrincipal.setRealm(kdcRequest.getKdcReq().getReqBody().getRealm());\n             kdcRequest.setServerPrincipal(serverPrincipal);\n-            if (!audiences.contains(serverPrincipal.getName())) {\n+            if (audiences == null || !audiences.contains(serverPrincipal.getName())) {\n                 throw new KrbException(\"The token audience does not match with the target server principal!\");\n             }\n             kdcRequest.setToken(authToken);", "filename": "kerby-kerb/kerb-server/src/main/java/org/apache/kerby/kerberos/kerb/server/preauth/token/TokenPreauth.java"}], "repo": "directory-kerby"}, {"commit": "https://github.com/apache/directory-kerby/commit/e519217727625f0e4557a04b29af36b40c18e69b", "parent": "https://github.com/apache/directory-kerby/commit/0e3234bca25e4a607dca507b9d9e0387e475794d", "message": "NPE fix if there are no audiences in the token", "bug_id": "directory-kerby_6", "file": [{"additions": 1, "raw_url": "https://github.com/apache/directory-kerby/raw/e519217727625f0e4557a04b29af36b40c18e69b/kerby-kerb/kerb-core/src/main/java/org/apache/kerby/kerberos/kerb/type/base/KrbToken.java", "blob_url": "https://github.com/apache/directory-kerby/blob/e519217727625f0e4557a04b29af36b40c18e69b/kerby-kerb/kerb-core/src/main/java/org/apache/kerby/kerberos/kerb/type/base/KrbToken.java", "sha": "d1637b5a3b43273d355a9de760b32460e8f2fa77", "changes": 2, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/directory-kerby/contents/kerby-kerb/kerb-core/src/main/java/org/apache/kerby/kerberos/kerb/type/base/KrbToken.java?ref=e519217727625f0e4557a04b29af36b40c18e69b", "patch": "@@ -103,7 +103,7 @@ public void decode(Asn1ParseResult parseResult) throws IOException {\n      */\n     public void setTokenType() {\n         List<String> audiences = this.innerToken.getAudiences();\n-        if (audiences.size() == 1 && audiences.get(0).startsWith(KrbConstant.TGS_PRINCIPAL)) {\n+        if (audiences != null && audiences.size() == 1 && audiences.get(0).startsWith(KrbConstant.TGS_PRINCIPAL)) {\n             isIdToken(true);\n         } else {\n             isAcToken(true);", "filename": "kerby-kerb/kerb-core/src/main/java/org/apache/kerby/kerberos/kerb/type/base/KrbToken.java"}], "repo": "directory-kerby"}, {"commit": "https://github.com/apache/directory-kerby/commit/b5033d9941b9796dd9b4f8ea5fc600577c4358cd", "parent": "https://github.com/apache/directory-kerby/commit/db14ad6b219c969e744c1d14e40f19230a5a5498", "message": "NPE fix if no keytab is found and we have no principal name", "bug_id": "directory-kerby_7", "file": [{"additions": 5, "raw_url": "https://github.com/apache/directory-kerby/raw/b5033d9941b9796dd9b4f8ea5fc600577c4358cd/kerby-kerb/kerb-gssapi/src/main/java/org/apache/kerby/kerberos/kerb/gss/impl/GssAcceptCred.java", "blob_url": "https://github.com/apache/directory-kerby/blob/b5033d9941b9796dd9b4f8ea5fc600577c4358cd/kerby-kerb/kerb-gssapi/src/main/java/org/apache/kerby/kerberos/kerb/gss/impl/GssAcceptCred.java", "sha": "e33a4f3557e71ebb28a8e8cd5843237698a172f0", "changes": 7, "status": "modified", "deletions": 2, "contents_url": "https://api.github.com/repos/apache/directory-kerby/contents/kerby-kerb/kerb-gssapi/src/main/java/org/apache/kerby/kerberos/kerb/gss/impl/GssAcceptCred.java?ref=b5033d9941b9796dd9b4f8ea5fc600577c4358cd", "patch": "@@ -46,8 +46,11 @@ public static GssAcceptCred getInstance(final GSSCaller caller,\n         }\n \n         if (keyTab == null) {\n-            throw new GSSException(GSSException.NO_CRED, -1,\n-                    \"Failed to find any Kerberos credential for \" + name.getPrincipalName().getName());\n+            String error = \"Failed to find any Kerberos credential\";\n+            if (name != null) {\n+                error +=  \" for \" + name.getPrincipalName().getName();\n+            }\n+            throw new GSSException(GSSException.NO_CRED, -1, error);\n         }\n \n         if (name == null) {", "filename": "kerby-kerb/kerb-gssapi/src/main/java/org/apache/kerby/kerberos/kerb/gss/impl/GssAcceptCred.java"}], "repo": "directory-kerby"}, {"commit": "https://github.com/apache/directory-kerby/commit/db14ad6b219c969e744c1d14e40f19230a5a5498", "parent": "https://github.com/apache/directory-kerby/commit/6d38f80bd9e4952f0f272728a164c7ab00e81e6c", "message": "DIRKRB-637 - NPE in GssAcceptCred when no initial GSSCredential is passed to manager.createContext", "bug_id": "directory-kerby_8", "file": [{"additions": 0, "raw_url": "https://github.com/apache/directory-kerby/raw/db14ad6b219c969e744c1d14e40f19230a5a5498/kerby-kerb/integration-test/src/test/java/org/apache/kerby/kerberos/kerb/integration/test/KerbyGssAppTest.java", "blob_url": "https://github.com/apache/directory-kerby/blob/db14ad6b219c969e744c1d14e40f19230a5a5498/kerby-kerb/integration-test/src/test/java/org/apache/kerby/kerberos/kerb/integration/test/KerbyGssAppTest.java", "sha": "b6f4e43100b4460cb39f6bd60717e486b5105c3c", "changes": 6, "status": "modified", "deletions": 6, "contents_url": "https://api.github.com/repos/apache/directory-kerby/contents/kerby-kerb/integration-test/src/test/java/org/apache/kerby/kerberos/kerb/integration/test/KerbyGssAppTest.java?ref=db14ad6b219c969e744c1d14e40f19230a5a5498", "patch": "@@ -21,7 +21,6 @@\n \n import org.apache.kerby.kerberos.kerb.gss.KerbyGssProvider;\n import org.junit.Before;\n-import org.junit.Test;\n \n import java.security.Provider;\n \n@@ -35,9 +34,4 @@ public void setUp() throws Exception {\n         super.setUp();\n     }\n \n-    @Test\n-    @org.junit.Ignore\n-    public void testServerWithoutInitialCredential() throws Exception {\n-        super.testServerWithoutInitialCredential();\n-    }\n }", "filename": "kerby-kerb/integration-test/src/test/java/org/apache/kerby/kerberos/kerb/integration/test/KerbyGssAppTest.java"}, {"additions": 7, "raw_url": "https://github.com/apache/directory-kerby/raw/db14ad6b219c969e744c1d14e40f19230a5a5498/kerby-kerb/kerb-gssapi/src/main/java/org/apache/kerby/kerberos/kerb/gss/impl/CredUtils.java", "blob_url": "https://github.com/apache/directory-kerby/blob/db14ad6b219c969e744c1d14e40f19230a5a5498/kerby-kerb/kerb-gssapi/src/main/java/org/apache/kerby/kerberos/kerb/gss/impl/CredUtils.java", "sha": "4088b5c1a72e7344be2d2d30997ce3fc684606ca", "changes": 8, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/directory-kerby/contents/kerby-kerb/kerb-gssapi/src/main/java/org/apache/kerby/kerberos/kerb/gss/impl/CredUtils.java?ref=db14ad6b219c969e744c1d14e40f19230a5a5498", "patch": "@@ -52,7 +52,13 @@ public static KerberosTicket getKerberosTicketFromContext(GSSCaller caller,\n     public static KeyTab getKeyTabFromContext(KerberosPrincipal principal) throws GSSException {\n         Set<KeyTab> tabs = getContextCredentials(KeyTab.class);\n         for (KeyTab tab : tabs) {\n-            KerberosKey[] keys = tab.getKeys(principal);\n+            // Use the supplied principal, fall back to the principal of the KeyTab if none is supplied\n+            KerberosPrincipal princ = principal;\n+            if (princ == null) {\n+                princ = tab.getPrincipal();\n+            }\n+\n+            KerberosKey[] keys = tab.getKeys(princ);\n             if (keys != null && keys.length > 0) {\n                 return tab;\n             }", "filename": "kerby-kerb/kerb-gssapi/src/main/java/org/apache/kerby/kerberos/kerb/gss/impl/CredUtils.java"}, {"additions": 14, "raw_url": "https://github.com/apache/directory-kerby/raw/db14ad6b219c969e744c1d14e40f19230a5a5498/kerby-kerb/kerb-gssapi/src/main/java/org/apache/kerby/kerberos/kerb/gss/impl/GssAcceptCred.java", "blob_url": "https://github.com/apache/directory-kerby/blob/db14ad6b219c969e744c1d14e40f19230a5a5498/kerby-kerb/kerb-gssapi/src/main/java/org/apache/kerby/kerberos/kerb/gss/impl/GssAcceptCred.java", "sha": "120f9de12c09464ed659d016d70d3bb81c459cce", "changes": 17, "status": "modified", "deletions": 3, "contents_url": "https://api.github.com/repos/apache/directory-kerby/contents/kerby-kerb/kerb-gssapi/src/main/java/org/apache/kerby/kerberos/kerb/gss/impl/GssAcceptCred.java?ref=db14ad6b219c969e744c1d14e40f19230a5a5498", "patch": "@@ -21,6 +21,8 @@\n \n \n import org.ietf.jgss.GSSException;\n+import org.ietf.jgss.GSSName;\n+\n import sun.security.jgss.GSSCaller;\n \n import javax.security.auth.kerberos.KerberosKey;\n@@ -34,15 +36,24 @@\n     public static GssAcceptCred getInstance(final GSSCaller caller,\n                                             GssNameElement name, int lifeTime) throws GSSException {\n \n-        KerberosPrincipal princ = new KerberosPrincipal(name.getPrincipalName().getName(),\n-                name.getPrincipalName().getNameType().getValue());\n-        KeyTab keyTab = CredUtils.getKeyTabFromContext(princ);\n+        KeyTab keyTab = null;\n+        if (name == null) {\n+            keyTab = CredUtils.getKeyTabFromContext(null);\n+        } else {\n+            KerberosPrincipal princ = new KerberosPrincipal(name.getPrincipalName().getName(),\n+                                                            name.getPrincipalName().getNameType().getValue());\n+            keyTab = CredUtils.getKeyTabFromContext(princ);\n+        }\n \n         if (keyTab == null) {\n             throw new GSSException(GSSException.NO_CRED, -1,\n                     \"Failed to find any Kerberos credential for \" + name.getPrincipalName().getName());\n         }\n \n+        if (name == null) {\n+            name = GssNameElement.getInstance(keyTab.getPrincipal().getName(), GSSName.NT_HOSTBASED_SERVICE);\n+        }\n+\n         return new GssAcceptCred(caller, name, keyTab, lifeTime);\n     }\n ", "filename": "kerby-kerb/kerb-gssapi/src/main/java/org/apache/kerby/kerberos/kerb/gss/impl/GssAcceptCred.java"}, {"additions": 4, "raw_url": "https://github.com/apache/directory-kerby/raw/db14ad6b219c969e744c1d14e40f19230a5a5498/kerby-kerb/kerb-gssapi/src/main/java/org/apache/kerby/kerberos/kerb/gss/impl/GssNameElement.java", "blob_url": "https://github.com/apache/directory-kerby/blob/db14ad6b219c969e744c1d14e40f19230a5a5498/kerby-kerb/kerb-gssapi/src/main/java/org/apache/kerby/kerberos/kerb/gss/impl/GssNameElement.java", "sha": "619b7639dc00982fc1acb0f9b825d54c79d4087d", "changes": 4, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/directory-kerby/contents/kerby-kerb/kerb-gssapi/src/main/java/org/apache/kerby/kerberos/kerb/gss/impl/GssNameElement.java?ref=db14ad6b219c969e744c1d14e40f19230a5a5498", "patch": "@@ -68,6 +68,10 @@ public static NameType toKerbyNameType(Oid nameType) throws GSSException {\n \n     public static GssNameElement getInstance(String name, Oid oidNameType)\n             throws GSSException {\n+        if (oidNameType == null) {\n+            PrincipalName principalName = new PrincipalName(name);\n+            return new GssNameElement(principalName, null);\n+        }\n         PrincipalName principalName = new PrincipalName(name, toKerbyNameType(oidNameType));\n         return new GssNameElement(principalName, oidNameType);\n     }", "filename": "kerby-kerb/kerb-gssapi/src/main/java/org/apache/kerby/kerberos/kerb/gss/impl/GssNameElement.java"}], "repo": "directory-kerby"}, {"commit": "https://github.com/apache/directory-kerby/commit/158a6a1c294fe4904277aa592a677082aab0cf74", "parent": "https://github.com/apache/directory-kerby/commit/7a33acebb97b9676ce4b284a2ea3f6004a4317ca", "message": "DIRKRB-636 - NPE in GssInitCred when a tgt is obtained via JAAS", "bug_id": "directory-kerby_9", "file": [{"additions": 0, "raw_url": "https://github.com/apache/directory-kerby/raw/158a6a1c294fe4904277aa592a677082aab0cf74/kerby-kerb/integration-test/src/test/java/org/apache/kerby/kerberos/kerb/integration/test/KerbyGssAppTest.java", "blob_url": "https://github.com/apache/directory-kerby/blob/158a6a1c294fe4904277aa592a677082aab0cf74/kerby-kerb/integration-test/src/test/java/org/apache/kerby/kerberos/kerb/integration/test/KerbyGssAppTest.java", "sha": "2e01975557e368e5fcd39bbd77c3848c40c98dcb", "changes": 1, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/directory-kerby/contents/kerby-kerb/integration-test/src/test/java/org/apache/kerby/kerberos/kerb/integration/test/KerbyGssAppTest.java?ref=158a6a1c294fe4904277aa592a677082aab0cf74", "patch": "@@ -41,7 +41,6 @@ public void test() throws Exception {\n     }\n \n     @Test\n-    @org.junit.Ignore\n     public void testJAAS() throws Exception {\n         super.testJAAS();\n     }", "filename": "kerby-kerb/integration-test/src/test/java/org/apache/kerby/kerberos/kerb/integration/test/KerbyGssAppTest.java"}, {"additions": 8, "raw_url": "https://github.com/apache/directory-kerby/raw/158a6a1c294fe4904277aa592a677082aab0cf74/kerby-kerb/kerb-gssapi/src/main/java/org/apache/kerby/kerberos/kerb/gss/impl/GssInitCred.java", "blob_url": "https://github.com/apache/directory-kerby/blob/158a6a1c294fe4904277aa592a677082aab0cf74/kerby-kerb/kerb-gssapi/src/main/java/org/apache/kerby/kerberos/kerb/gss/impl/GssInitCred.java", "sha": "fd042519041cf0766ab504b161a91695192ddf86", "changes": 8, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/directory-kerby/contents/kerby-kerb/kerb-gssapi/src/main/java/org/apache/kerby/kerberos/kerb/gss/impl/GssInitCred.java?ref=158a6a1c294fe4904277aa592a677082aab0cf74", "patch": "@@ -20,6 +20,8 @@\n package org.apache.kerby.kerberos.kerb.gss.impl;\n \n import org.ietf.jgss.GSSException;\n+import org.ietf.jgss.GSSName;\n+\n import sun.security.jgss.GSSCaller;\n \n import javax.security.auth.kerberos.KerberosTicket;\n@@ -35,6 +37,12 @@ private GssInitCred(GSSCaller caller, GssNameElement name, KerberosTicket ticket\n     }\n \n     public static GssInitCred getInstance(GSSCaller caller, GssNameElement name, int lifeTime) throws GSSException {\n+        if (name == null) {\n+            KerberosTicket ticket = CredUtils.getKerberosTicketFromContext(caller, null, null);\n+            GssNameElement clientName = GssNameElement.getInstance(ticket.getClient().getName(), GSSName.NT_USER_NAME);\n+            return new GssInitCred(caller, clientName, ticket, lifeTime);\n+        }\n+\n         KerberosTicket ticket = CredUtils.getKerberosTicketFromContext(caller, name.getPrincipalName().getName(), null);\n         return new GssInitCred(caller, name, ticket, lifeTime);\n     }", "filename": "kerby-kerb/kerb-gssapi/src/main/java/org/apache/kerby/kerberos/kerb/gss/impl/GssInitCred.java"}], "repo": "directory-kerby"}, {"commit": "https://github.com/apache/directory-kerby/commit/5badde01c0210e11e4d2b87ff023c7341a8888ba", "parent": "https://github.com/apache/directory-kerby/commit/aeb3fc0c9f8ad874f18e80dd47a4b39ae715820f", "message": "NPE fix", "bug_id": "directory-kerby_10", "file": [{"additions": 6, "raw_url": "https://github.com/apache/directory-kerby/raw/5badde01c0210e11e4d2b87ff023c7341a8888ba/kerby-kerb/kerb-server/src/main/java/org/apache/kerby/kerberos/kerb/server/preauth/token/TokenPreauth.java", "blob_url": "https://github.com/apache/directory-kerby/blob/5badde01c0210e11e4d2b87ff023c7341a8888ba/kerby-kerb/kerb-server/src/main/java/org/apache/kerby/kerberos/kerb/server/preauth/token/TokenPreauth.java", "sha": "0dcc3d3059557a9a60c3212398411b3fd943e4e8", "changes": 8, "status": "modified", "deletions": 2, "contents_url": "https://api.github.com/repos/apache/directory-kerby/contents/kerby-kerb/kerb-server/src/main/java/org/apache/kerby/kerberos/kerb/server/preauth/token/TokenPreauth.java?ref=5badde01c0210e11e4d2b87ff023c7341a8888ba", "patch": "@@ -77,7 +77,7 @@ public boolean verify(KdcRequest kdcRequest, PluginRequestContext requestContext\n             List<String> issuers = kdcRequest.getKdcContext().getConfig().getIssuers();\n             TokenInfo tokenInfo = paTokenRequest.getTokenInfo();\n             String issuer = tokenInfo.getTokenVendor();\n-            if (!(issuers.contains(issuer))) {\n+            if (!issuers.contains(issuer)) {\n                 throw new KrbException(\"Unconfigured issuer: \" + issuer);\n             }\n             \n@@ -118,6 +118,7 @@ private void configureKeys(TokenDecoder tokenDecoder, KdcRequest kdcRequest, Str\n         if (verifyKeyPath != null) {\n             try {\n                 InputStream verifyKeyFile = getKeyFileStream(verifyKeyPath, issuer);\n+                System.out.println(\"VER: \" + (verifyKeyFile != null));\n                 if (verifyKeyFile != null) {\n                     PublicKey verifyKey = PublicKeyReader.loadPublicKey(verifyKeyFile);\n                     tokenDecoder.setVerifyKey(verifyKey);\n@@ -151,14 +152,17 @@ private InputStream getKeyFileStream(String path, String issuer) throws FileNotF\n             File verifyKeyFile = null;\n \n             if (listOfFiles == null) {\n-                throw new RuntimeException(\"List of files is null.\");\n+                throw new FileNotFoundException(\"The key path is incorrect\");\n             }\n             for (int i = 0; i < listOfFiles.length; i++) {\n                 if (listOfFiles[i].isFile() && listOfFiles[i].getName().contains(issuer)) {\n                     verifyKeyFile = listOfFiles[i];\n                     break;\n                 }\n             }\n+            if (verifyKeyFile == null) {\n+                throw new FileNotFoundException(\"No key found that matches the issuer name\");\n+            }\n             return new FileInputStream(verifyKeyFile);\n         } else if (file.isFile()) {\n             return new FileInputStream(file);", "filename": "kerby-kerb/kerb-server/src/main/java/org/apache/kerby/kerberos/kerb/server/preauth/token/TokenPreauth.java"}], "repo": "directory-kerby"}, {"commit": "https://github.com/apache/directory-kerby/commit/8b9b2f98397660a91fed5d5300ff5822edfa7809", "parent": "https://github.com/apache/directory-kerby/commit/55e90d922e85f969de084fc3e2322a7925547080", "message": "NPE fix", "bug_id": "directory-kerby_11", "file": [{"additions": 5, "raw_url": "https://github.com/apache/directory-kerby/raw/8b9b2f98397660a91fed5d5300ff5822edfa7809/kerby-kerb/integration-test/src/main/java/org/apache/kerby/kerberos/kerb/integration/test/jaas/TokenAuthLoginModule.java", "blob_url": "https://github.com/apache/directory-kerby/blob/8b9b2f98397660a91fed5d5300ff5822edfa7809/kerby-kerb/integration-test/src/main/java/org/apache/kerby/kerberos/kerb/integration/test/jaas/TokenAuthLoginModule.java", "sha": "15788b2d6085b0723b69fabfa69357a6d84d662f", "changes": 6, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/directory-kerby/contents/kerby-kerb/integration-test/src/main/java/org/apache/kerby/kerberos/kerb/integration/test/jaas/TokenAuthLoginModule.java?ref=8b9b2f98397660a91fed5d5300ff5822edfa7809", "patch": "@@ -112,7 +112,7 @@ public void initialize(Subject subject, CallbackHandler callbackHandler,\n         }\n         if ((String) options.get(CREDENTIAL_CACHE) != null) {\n             cCache = new File((String) options.get(CREDENTIAL_CACHE));\n-        }\n+        } \n         if ((String) options.get(SIGN_KEY_FILE) != null) {\n             signKeyFile = new File((String) options.get(SIGN_KEY_FILE));\n         }\n@@ -230,6 +230,10 @@ private void validateConfiguration() throws LoginException {\n         if (armorCache == null) {\n             throw new LoginException(\"An armor cache must be specified via the armorCache configuration option\");\n         }\n+        \n+        if (cCache == null) {\n+            throw new LoginException(\"A credential cache must be specified via the credentialCache configuration option\");\n+        }\n \n         String error = \"\";\n         if (tokenStr == null && tokenCacheName == null) {", "filename": "kerby-kerb/integration-test/src/main/java/org/apache/kerby/kerberos/kerb/integration/test/jaas/TokenAuthLoginModule.java"}], "repo": "directory-kerby"}, {"commit": "https://github.com/apache/directory-kerby/commit/5e75bf59e378fc7c5c5c37e587c54fb4eb4b916e", "parent": "https://github.com/apache/directory-kerby/commit/85188383e58b03d12da15d15f7c376e87e2bbdd6", "message": "NPE fixes", "bug_id": "directory-kerby_12", "file": [{"additions": 14, "raw_url": "https://github.com/apache/directory-kerby/raw/5e75bf59e378fc7c5c5c37e587c54fb4eb4b916e/kerby-kerb/integration-test/src/main/java/org/apache/kerby/kerberos/kerb/integration/test/jaas/TokenAuthLoginModule.java", "blob_url": "https://github.com/apache/directory-kerby/blob/5e75bf59e378fc7c5c5c37e587c54fb4eb4b916e/kerby-kerb/integration-test/src/main/java/org/apache/kerby/kerberos/kerb/integration/test/jaas/TokenAuthLoginModule.java", "sha": "7eee5bad74d2358adb693ee575f2b4ceb895ab70", "changes": 18, "status": "modified", "deletions": 4, "contents_url": "https://api.github.com/repos/apache/directory-kerby/contents/kerby-kerb/integration-test/src/main/java/org/apache/kerby/kerberos/kerb/integration/test/jaas/TokenAuthLoginModule.java?ref=5e75bf59e378fc7c5c5c37e587c54fb4eb4b916e", "patch": "@@ -102,9 +102,15 @@ public void initialize(Subject subject, CallbackHandler callbackHandler,\n         princName = (String) options.get(PRINCIPAL);\n         tokenStr = (String) options.get(TOKEN);\n         tokenCacheName = (String) options.get(TOKEN_CACHE);\n-        armorCache = new File((String) options.get(ARMOR_CACHE));\n-        cCache = new File((String) options.get(CREDENTIAL_CACHE));\n-        signKeyFile = new File((String) options.get(SIGN_KEY_FILE));\n+        if ((String) options.get(ARMOR_CACHE) != null) {\n+            armorCache = new File((String) options.get(ARMOR_CACHE));\n+        }\n+        if ((String) options.get(CREDENTIAL_CACHE) != null) {\n+            cCache = new File((String) options.get(CREDENTIAL_CACHE));\n+        }\n+        if ((String) options.get(SIGN_KEY_FILE) != null) {\n+            signKeyFile = new File((String) options.get(SIGN_KEY_FILE));\n+        }\n     }\n \n     /**\n@@ -215,6 +221,10 @@ public boolean logout() throws LoginException {\n     }\n \n     private void validateConfiguration() throws LoginException {\n+        \n+        if (armorCache == null) {\n+            throw new LoginException(\"An armor cache must be specified via the armorCache configuration option\");\n+        }\n \n         String error = \"\";\n         if (tokenStr == null && tokenCacheName == null) {\n@@ -244,7 +254,7 @@ private boolean tokenLogin() throws LoginException {\n         krbToken = new KrbToken(authToken, TokenFormat.JWT);\n         TokenEncoder tokenEncoder = KrbRuntime.getTokenProvider().createTokenEncoder();\n \n-        if (tokenEncoder instanceof JwtTokenEncoder) {\n+        if (tokenEncoder instanceof JwtTokenEncoder && signKeyFile != null) {\n             PrivateKey signKey = null;\n             try {\n                 FileInputStream fis = new FileInputStream(signKeyFile);", "filename": "kerby-kerb/integration-test/src/main/java/org/apache/kerby/kerberos/kerb/integration/test/jaas/TokenAuthLoginModule.java"}], "repo": "directory-kerby"}, {"commit": "https://github.com/apache/directory-kerby/commit/67d67c9165da21a255a8067a1c3e3ca42de55dd9", "parent": "https://github.com/apache/directory-kerby/commit/ab8fa35ab2c5e206268cf8c2c31c74b1ceeaeec4", "message": "Avoid throwing NPE", "bug_id": "directory-kerby_13", "file": [{"additions": 0, "raw_url": "https://github.com/apache/directory-kerby/raw/67d67c9165da21a255a8067a1c3e3ca42de55dd9/kerby-kerb/kerb-common/src/main/java/org/apache/kerby/kerberos/kerb/common/PrivateKeyReader.java", "blob_url": "https://github.com/apache/directory-kerby/blob/67d67c9165da21a255a8067a1c3e3ca42de55dd9/kerby-kerb/kerb-common/src/main/java/org/apache/kerby/kerberos/kerb/common/PrivateKeyReader.java", "sha": "a3a7a4ed19961fd636b227e25fa227d23a655bfd", "changes": 4, "status": "modified", "deletions": 4, "contents_url": "https://api.github.com/repos/apache/directory-kerby/contents/kerby-kerb/kerb-common/src/main/java/org/apache/kerby/kerberos/kerb/common/PrivateKeyReader.java?ref=67d67c9165da21a255a8067a1c3e3ca42de55dd9", "patch": "@@ -50,8 +50,6 @@ public static PrivateKey loadPrivateKey(InputStream in) throws Exception {\n             return loadPrivateKey(sb.toString());\n         } catch (IOException e) {\n             throw e;\n-        } catch (NullPointerException e) {\n-            throw e;\n         }\n     }\n \n@@ -66,8 +64,6 @@ public static PrivateKey loadPrivateKey(String privateKeyStr) throws Exception {\n             throw e;\n         } catch (InvalidKeySpecException e) {\n             throw e;\n-        } catch (NullPointerException e) {\n-            throw e;\n         }\n     }\n ", "filename": "kerby-kerb/kerb-common/src/main/java/org/apache/kerby/kerberos/kerb/common/PrivateKeyReader.java"}], "repo": "directory-kerby"}, {"commit": "https://github.com/apache/directory-kerby/commit/6ad6984761eb3c40f40e03eb6475a8fbeb58f6bd", "parent": "https://github.com/apache/directory-kerby/commit/b283deccef2d44b6695e48fafae4192a2a2ad41d", "message": "Avoid NPE", "bug_id": "directory-kerby_14", "file": [{"additions": 3, "raw_url": "https://github.com/apache/directory-kerby/raw/6ad6984761eb3c40f40e03eb6475a8fbeb58f6bd/kerby-kerb/kerb-core/src/main/java/org/apache/kerby/kerberos/kerb/spec/base/PrincipalName.java", "blob_url": "https://github.com/apache/directory-kerby/blob/6ad6984761eb3c40f40e03eb6475a8fbeb58f6bd/kerby-kerb/kerb-core/src/main/java/org/apache/kerby/kerberos/kerb/spec/base/PrincipalName.java", "sha": "4bf6e0f02eb16c2417c9d2d7c157416e0bcaad39", "changes": 3, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/directory-kerby/contents/kerby-kerb/kerb-core/src/main/java/org/apache/kerby/kerberos/kerb/spec/base/PrincipalName.java?ref=6ad6984761eb3c40f40e03eb6475a8fbeb58f6bd", "patch": "@@ -180,6 +180,9 @@ public boolean equals(Object other) {\n     }\n \n     private void fromNameString(String nameString) {\n+        if (nameString == null) {\n+            return;\n+        }\n         String tmpRealm = null;\n         List<String> nameStrings;\n         int pos = nameString.indexOf('@');", "filename": "kerby-kerb/kerb-core/src/main/java/org/apache/kerby/kerberos/kerb/spec/base/PrincipalName.java"}], "repo": "directory-kerby"}, {"commit": "https://github.com/apache/directory-kerby/commit/a5dead55385bdc3be0b3ccb7c7b579b2f0a0542f", "parent": "https://github.com/apache/directory-kerby/commit/358277ee7b2377167fe05527b0cc7afbee033acb", "message": "Fixing NPE", "bug_id": "directory-kerby_15", "file": [{"additions": 3, "raw_url": "https://github.com/apache/directory-kerby/raw/a5dead55385bdc3be0b3ccb7c7b579b2f0a0542f/kerby-kerb/kerb-server/src/main/java/org/apache/kerby/kerberos/kerb/server/KdcServer.java", "blob_url": "https://github.com/apache/directory-kerby/blob/a5dead55385bdc3be0b3ccb7c7b579b2f0a0542f/kerby-kerb/kerb-server/src/main/java/org/apache/kerby/kerberos/kerb/server/KdcServer.java", "sha": "96a8540d93a3095d1cacaf1b0573cf781d525818", "changes": 4, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/directory-kerby/contents/kerby-kerb/kerb-server/src/main/java/org/apache/kerby/kerberos/kerb/server/KdcServer.java?ref=a5dead55385bdc3be0b3ccb7c7b579b2f0a0542f", "patch": "@@ -179,6 +179,8 @@ public void start() {\n     }\n \n     public void stop() {\n-        innerKdc.stop();\n+        if (innerKdc != null) {\n+            innerKdc.stop();\n+        }\n     }\n }", "filename": "kerby-kerb/kerb-server/src/main/java/org/apache/kerby/kerberos/kerb/server/KdcServer.java"}], "repo": "directory-kerby"}, {"commit": "https://github.com/apache/directory-kerby/commit/952938a698abce30ca8fc859750a832332e672c9", "parent": "https://github.com/apache/directory-kerby/commit/fc0328bc0bc6c6922464a701eb8b49b7fec74993", "message": "DIRKRB-586 - NPE in KdcHandler on an Exception", "bug_id": "directory-kerby_16", "file": [{"additions": 1, "raw_url": "https://github.com/apache/directory-kerby/raw/952938a698abce30ca8fc859750a832332e672c9/kerby-kerb/kerb-server/src/main/java/org/apache/kerby/kerberos/kerb/server/KdcHandler.java", "blob_url": "https://github.com/apache/directory-kerby/blob/952938a698abce30ca8fc859750a832332e672c9/kerby-kerb/kerb-server/src/main/java/org/apache/kerby/kerberos/kerb/server/KdcHandler.java", "sha": "d04a3066e9d8d3738e44acb333b0c1bf92cbd62c", "changes": 2, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/directory-kerby/contents/kerby-kerb/kerb-server/src/main/java/org/apache/kerby/kerberos/kerb/server/KdcHandler.java?ref=952938a698abce30ca8fc859750a832332e672c9", "patch": "@@ -140,7 +140,7 @@ public ByteBuffer handleMessage(ByteBuffer receivedMessage, boolean isTcp,\n                     serverPrincipal.setRealm(kdcRequest.getKdcReq().getReqBody().getRealm());\n                     krbError.setSname(serverPrincipal);\n                 }\n-                if (e.getKrbErrorCode().equals(KrbErrorCode.KRB_AP_ERR_BAD_INTEGRITY)) {\n+                if (KrbErrorCode.KRB_AP_ERR_BAD_INTEGRITY.equals(e.getKrbErrorCode())) {\n                     krbError.setEtext(\"PREAUTH_FAILED\");\n                 } else {\n                     krbError.setEtext(e.getMessage());", "filename": "kerby-kerb/kerb-server/src/main/java/org/apache/kerby/kerberos/kerb/server/KdcHandler.java"}], "repo": "directory-kerby"}, {"commit": "https://github.com/apache/directory-kerby/commit/6eccd72934b574884018a19f75ccdd4460844eb8", "parent": "https://github.com/apache/directory-kerby/commit/fdc3a9ec692c60aae7656179892048d07e9582e2", "message": "Clean up and fixed NPE", "bug_id": "directory-kerby_17", "file": [{"additions": 0, "raw_url": "https://github.com/apache/directory-kerby/raw/6eccd72934b574884018a19f75ccdd4460844eb8/kerby-kdc-test/src/test/java/org/apache/kerby/kerberos/kdc/GssInteropTestBase.java", "blob_url": "https://github.com/apache/directory-kerby/blob/6eccd72934b574884018a19f75ccdd4460844eb8/kerby-kdc-test/src/test/java/org/apache/kerby/kerberos/kdc/GssInteropTestBase.java", "sha": "5928f054c273d139978a4cee234d6484b41767a4", "changes": 13, "status": "modified", "deletions": 13, "contents_url": "https://api.github.com/repos/apache/directory-kerby/contents/kerby-kdc-test/src/test/java/org/apache/kerby/kerberos/kdc/GssInteropTestBase.java?ref=6eccd72934b574884018a19f75ccdd4460844eb8", "patch": "@@ -54,19 +54,6 @@ private String getServerPassword() {\n         return getClientPassword(); // Reuse the same password\n     }\n \n-    @Before\n-    @Override\n-    public void setUp() throws Exception {\n-        super.setUp();\n-\n-        File file1 = new File(getClass().getResource(\"/kerberos.jaas\").getPath());\n-        String content1 = getFileContent(file1.getPath());\n-        String path1 = writeToTestDir(content1, file1.getName());\n-\n-        // System.setProperty(\"sun.security.krb5.debug\", \"true\");\n-        System.setProperty(\"java.security.auth.login.config\", path1);\n-    }\n-\n     @Test\n     public void testKdc() throws Exception {\n         Subject clientSubject = JaasKrbUtil.loginUsingPassword(", "filename": "kerby-kdc-test/src/test/java/org/apache/kerby/kerberos/kdc/GssInteropTestBase.java"}], "repo": "directory-kerby"}, {"commit": "https://github.com/apache/directory-kerby/commit/cc2e35bcec4566e74144b17f47151a6065194dd5", "parent": "https://github.com/apache/directory-kerby/commit/3d15ccb99a015e956f6f7bc6301f147b592cb1d2", "message": "Fixed some NPE issues", "bug_id": "directory-kerby_18", "file": [{"additions": 5, "raw_url": "https://github.com/apache/directory-kerby/raw/cc2e35bcec4566e74144b17f47151a6065194dd5/haox-asn1/src/main/java/org/haox/asn1/type/Asn1Simple.java", "blob_url": "https://github.com/apache/directory-kerby/blob/cc2e35bcec4566e74144b17f47151a6065194dd5/haox-asn1/src/main/java/org/haox/asn1/type/Asn1Simple.java", "sha": "3f7032bd3f76aea5bc27509fa853325db96a0df8", "changes": 7, "status": "modified", "deletions": 2, "contents_url": "https://api.github.com/repos/apache/directory-kerby/contents/haox-asn1/src/main/java/org/haox/asn1/type/Asn1Simple.java?ref=cc2e35bcec4566e74144b17f47151a6065194dd5", "patch": "@@ -31,8 +31,11 @@ protected void setBytes(byte[] bytes) {\n     @Override\n     public void encode(ByteBuffer buffer) {\n         encodeTag(buffer, tagFlags(), tagNo());\n-        encodeLength(buffer, encodingBodyLength());\n-        buffer.put(encodeBody());\n+        int bodyLen = encodingBodyLength();\n+        encodeLength(buffer, bodyLen);\n+        if (bodyLen > 0) {\n+            buffer.put(encodeBody());\n+        }\n     }\n \n     protected byte[] encodeBody() {", "filename": "haox-asn1/src/main/java/org/haox/asn1/type/Asn1Simple.java"}, {"additions": 4, "raw_url": "https://github.com/apache/directory-kerby/raw/cc2e35bcec4566e74144b17f47151a6065194dd5/haox-asn1/src/main/java/org/haox/asn1/type/Asn1String.java", "blob_url": "https://github.com/apache/directory-kerby/blob/cc2e35bcec4566e74144b17f47151a6065194dd5/haox-asn1/src/main/java/org/haox/asn1/type/Asn1String.java", "sha": "78a246424519704cf1904fd708e3a83e4c2ace34", "changes": 5, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/directory-kerby/contents/haox-asn1/src/main/java/org/haox/asn1/type/Asn1String.java?ref=cc2e35bcec4566e74144b17f47151a6065194dd5", "patch": "@@ -27,7 +27,10 @@ protected void toBytes() {\n \n     @Override\n     protected int encodingBodyLength() {\n-        return getValue().length();\n+        if (getValue() != null) {\n+            return getValue().length();\n+        }\n+        return 0;\n     }\n \n     protected void toValue() throws IOException {", "filename": "haox-asn1/src/main/java/org/haox/asn1/type/Asn1String.java"}, {"additions": 1, "raw_url": "https://github.com/apache/directory-kerby/raw/cc2e35bcec4566e74144b17f47151a6065194dd5/haox-kerb/kerb-client/src/main/java/org/haox/kerb/client/KdcRequest.java", "blob_url": "https://github.com/apache/directory-kerby/blob/cc2e35bcec4566e74144b17f47151a6065194dd5/haox-kerb/kerb-client/src/main/java/org/haox/kerb/client/KdcRequest.java", "sha": "137b2167f9a0e7cb2d151b6229723b1a70b07fdf", "changes": 2, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/directory-kerby/contents/haox-kerb/kerb-client/src/main/java/org/haox/kerb/client/KdcRequest.java?ref=cc2e35bcec4566e74144b17f47151a6065194dd5", "patch": "@@ -23,7 +23,7 @@\n \n     private List<HostAddress> hostAddresses = new ArrayList<HostAddress>();\n     private KdcOptions kdcOptions = new KdcOptions();\n-    private boolean preAuthEnabled = false;\n+    private boolean preAuthEnabled = true;\n     private List<EncryptionType> etypes;\n     private EncryptionType chosenEtype;\n     private EncryptionKey clientKey;", "filename": "haox-kerb/kerb-client/src/main/java/org/haox/kerb/client/KdcRequest.java"}, {"additions": 2, "raw_url": "https://github.com/apache/directory-kerby/raw/cc2e35bcec4566e74144b17f47151a6065194dd5/haox-kerb/kerb-client/src/main/java/org/haox/kerb/client/as/AsRequest.java", "blob_url": "https://github.com/apache/directory-kerby/blob/cc2e35bcec4566e74144b17f47151a6065194dd5/haox-kerb/kerb-client/src/main/java/org/haox/kerb/client/as/AsRequest.java", "sha": "c28c3a37868d4132d6d925136b40691967ee9c6f", "changes": 5, "status": "modified", "deletions": 3, "contents_url": "https://api.github.com/repos/apache/directory-kerby/contents/haox-kerb/kerb-client/src/main/java/org/haox/kerb/client/as/AsRequest.java?ref=cc2e35bcec4566e74144b17f47151a6065194dd5", "patch": "@@ -60,12 +60,11 @@ public KdcReq makeKdcRequest() throws KrbException {\n         EncryptionType encryptionType = etypes.iterator().next();\n         setChosenEtype(encryptionType);\n \n-        AsReq req = new AsReq();\n-        req.setReqBody(body);\n+        asReq.setReqBody(body);\n \n         if (isPreAuthEnabled()) {\n             PaDataEntry tsPaEntry = makeTimeStampPaDataEntry();\n-            req.addPaData(tsPaEntry);\n+            asReq.addPaData(tsPaEntry);\n         }\n \n         return asReq;", "filename": "haox-kerb/kerb-client/src/main/java/org/haox/kerb/client/as/AsRequest.java"}, {"additions": 5, "raw_url": "https://github.com/apache/directory-kerby/raw/cc2e35bcec4566e74144b17f47151a6065194dd5/haox-kerb/kerb-core/src/main/java/org/haox/kerb/spec/type/ap/ApReq.java", "blob_url": "https://github.com/apache/directory-kerby/blob/cc2e35bcec4566e74144b17f47151a6065194dd5/haox-kerb/kerb-core/src/main/java/org/haox/kerb/spec/type/ap/ApReq.java", "sha": "28343e7addae7d5c24eae906773cc64f89c70a61", "changes": 10, "status": "modified", "deletions": 5, "contents_url": "https://api.github.com/repos/apache/directory-kerby/contents/haox-kerb/kerb-core/src/main/java/org/haox/kerb/spec/type/ap/ApReq.java?ref=cc2e35bcec4566e74144b17f47151a6065194dd5", "patch": "@@ -22,11 +22,11 @@\n     private static int AUTHENTICATOR = 4;\n \n     static Asn1FieldInfo[] fieldInfos = new Asn1FieldInfo[] {\n-            new Asn1FieldInfo(PVNO, 0, Asn1Integer.class),\n-            new Asn1FieldInfo(MSG_TYPE, 1, Asn1Integer.class),\n-            new Asn1FieldInfo(AP_OPTIONS, 2, ApOptions.class),\n-            new Asn1FieldInfo(TICKET, 3, Ticket.class),\n-            new Asn1FieldInfo(AUTHENTICATOR, 4, EncryptedData.class)\n+            new Asn1FieldInfo(PVNO, Asn1Integer.class),\n+            new Asn1FieldInfo(MSG_TYPE, Asn1Integer.class),\n+            new Asn1FieldInfo(AP_OPTIONS, ApOptions.class),\n+            new Asn1FieldInfo(TICKET, Ticket.class),\n+            new Asn1FieldInfo(AUTHENTICATOR, EncryptedData.class)\n     };\n \n     private Authenticator authenticator;", "filename": "haox-kerb/kerb-core/src/main/java/org/haox/kerb/spec/type/ap/ApReq.java"}, {"additions": 7, "raw_url": "https://github.com/apache/directory-kerby/raw/cc2e35bcec4566e74144b17f47151a6065194dd5/haox-kerb/kerb-core/src/main/java/org/haox/kerb/spec/type/kdc/KdcRep.java", "blob_url": "https://github.com/apache/directory-kerby/blob/cc2e35bcec4566e74144b17f47151a6065194dd5/haox-kerb/kerb-core/src/main/java/org/haox/kerb/spec/type/kdc/KdcRep.java", "sha": "4bf1c2581d4f78f07b9c358d8f468320042b92fd", "changes": 14, "status": "modified", "deletions": 7, "contents_url": "https://api.github.com/repos/apache/directory-kerby/contents/haox-kerb/kerb-core/src/main/java/org/haox/kerb/spec/type/kdc/KdcRep.java?ref=cc2e35bcec4566e74144b17f47151a6065194dd5", "patch": "@@ -29,13 +29,13 @@\n     private static int ENC_PART = 6;\n \n     static Asn1FieldInfo[] fieldInfos = new Asn1FieldInfo[] {\n-            new Asn1FieldInfo(PVNO, 0, Asn1Integer.class),\n-            new Asn1FieldInfo(MSG_TYPE, 1, Asn1Integer.class),\n-            new Asn1FieldInfo(PADATA, 2, PaData.class),\n-            new Asn1FieldInfo(CREALM, 3, KerberosString.class),\n-            new Asn1FieldInfo(CNAME, 4, PrincipalName.class),\n-            new Asn1FieldInfo(TICKET, 5, Ticket.class),\n-            new Asn1FieldInfo(ENC_PART, 6, EncryptedData.class)\n+            new Asn1FieldInfo(PVNO, Asn1Integer.class),\n+            new Asn1FieldInfo(MSG_TYPE, Asn1Integer.class),\n+            new Asn1FieldInfo(PADATA, PaData.class),\n+            new Asn1FieldInfo(CREALM, KerberosString.class),\n+            new Asn1FieldInfo(CNAME, PrincipalName.class),\n+            new Asn1FieldInfo(TICKET, Ticket.class),\n+            new Asn1FieldInfo(ENC_PART, EncryptedData.class)\n     };\n \n     private EncKdcRepPart encPart;", "filename": "haox-kerb/kerb-core/src/main/java/org/haox/kerb/spec/type/kdc/KdcRep.java"}, {"additions": 1, "raw_url": "https://github.com/apache/directory-kerby/raw/cc2e35bcec4566e74144b17f47151a6065194dd5/haox-kerb/kerb-kdc-test/src/test/java/org/haox/kerb/server/KdcTest.java", "blob_url": "https://github.com/apache/directory-kerby/blob/cc2e35bcec4566e74144b17f47151a6065194dd5/haox-kerb/kerb-kdc-test/src/test/java/org/haox/kerb/server/KdcTest.java", "sha": "92a7a48c80c6543e0c6a27ea032ed8af95347920", "changes": 2, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/directory-kerby/contents/haox-kerb/kerb-kdc-test/src/test/java/org/haox/kerb/server/KdcTest.java?ref=cc2e35bcec4566e74144b17f47151a6065194dd5", "patch": "@@ -25,7 +25,7 @@ public void setUp() throws Exception {\n         kdcServer.start();\n     }\n \n-    //@Test\n+    @Test\n     public void testKdc() throws Exception {\n         Assert.assertTrue(kdcServer.isStarted());\n ", "filename": "haox-kerb/kerb-kdc-test/src/test/java/org/haox/kerb/server/KdcTest.java"}], "repo": "directory-kerby"}, {"commit": "https://github.com/apache/directory-kerby/commit/343f0be60701656f4879885c59100eaee7796f22", "parent": "https://github.com/apache/directory-kerby/commit/c1a39407e16a3b23e05139714a940377fea61849", "message": "Fixed two NPEs in tests", "bug_id": "directory-kerby_19", "file": [{"additions": 1, "raw_url": "https://github.com/apache/directory-kerby/raw/343f0be60701656f4879885c59100eaee7796f22/benchmark/pom.xml", "blob_url": "https://github.com/apache/directory-kerby/blob/343f0be60701656f4879885c59100eaee7796f22/benchmark/pom.xml", "sha": "66919805422ce4b2deb1f4ae861c43a06ae98069", "changes": 2, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/directory-kerby/contents/benchmark/pom.xml?ref=343f0be60701656f4879885c59100eaee7796f22", "patch": "@@ -9,7 +9,7 @@\n \n     <artifactId>benchmark</artifactId>\n \n-    <name>haox benchmark</name>\n+    <name>Haox benchmark</name>\n     <description>Haox benchmark tests</description>\n \n     <dependencies>", "filename": "benchmark/pom.xml"}, {"additions": 4, "raw_url": "https://github.com/apache/directory-kerby/raw/343f0be60701656f4879885c59100eaee7796f22/haox-event/src/main/java/org/haox/transport/Transport.java", "blob_url": "https://github.com/apache/directory-kerby/blob/343f0be60701656f4879885c59100eaee7796f22/haox-event/src/main/java/org/haox/transport/Transport.java", "sha": "a5b762ec02854c2be3b6cdd99ac091fd268e53a5", "changes": 6, "status": "modified", "deletions": 2, "contents_url": "https://api.github.com/repos/apache/directory-kerby/contents/haox-event/src/main/java/org/haox/transport/Transport.java?ref=343f0be60701656f4879885c59100eaee7796f22", "patch": "@@ -32,8 +32,10 @@ public InetSocketAddress getRemoteAddress() {\n     }\n \n     public void sendMessage(ByteBuffer message) {\n-        sendBuffer.write(message);\n-        dispatcher.dispatch(TransportEvent.createWritableTransportEvent(this));\n+        if (message != null) {\n+            sendBuffer.write(message);\n+            dispatcher.dispatch(TransportEvent.createWritableTransportEvent(this));\n+        }\n     }\n \n     public void onWriteable() throws IOException {", "filename": "haox-event/src/main/java/org/haox/transport/Transport.java"}, {"additions": 4, "raw_url": "https://github.com/apache/directory-kerby/raw/343f0be60701656f4879885c59100eaee7796f22/haox-event/src/main/java/org/haox/transport/udp/UdpTransport.java", "blob_url": "https://github.com/apache/directory-kerby/blob/343f0be60701656f4879885c59100eaee7796f22/haox-event/src/main/java/org/haox/transport/udp/UdpTransport.java", "sha": "c307e586077c0bfa14fd4e7ad93efbd27fed4fec", "changes": 6, "status": "modified", "deletions": 2, "contents_url": "https://api.github.com/repos/apache/directory-kerby/contents/haox-event/src/main/java/org/haox/transport/udp/UdpTransport.java?ref=343f0be60701656f4879885c59100eaee7796f22", "patch": "@@ -23,8 +23,10 @@ public UdpTransport(DatagramChannel channel,\n     }\n \n     protected void onRecvData(ByteBuffer data) {\n-        recvBuffer.write(data);\n-        dispatcher.dispatch(TransportEvent.createReadableTransportEvent(this));\n+        if (data != null) {\n+            recvBuffer.write(data);\n+            dispatcher.dispatch(TransportEvent.createReadableTransportEvent(this));\n+        }\n     }\n \n     @Override", "filename": "haox-event/src/main/java/org/haox/transport/udp/UdpTransport.java"}], "repo": "directory-kerby"}, {"commit": "https://github.com/apache/directory-kerby/commit/35fb465a7b6d63e1ba4e886f162b1b1cddd677a7", "parent": "https://github.com/apache/directory-kerby/commit/36ed64d8f02753adb37c22c0bd16231674c2e607", "message": "Another NPE fix if it fails to load the PKINIT trust anchor", "bug_id": "directory-kerby_20", "file": [{"additions": 6, "raw_url": "https://github.com/apache/directory-kerby/raw/35fb465a7b6d63e1ba4e886f162b1b1cddd677a7/kerby-kerb/kerb-client/src/main/java/org/apache/kerby/kerberos/kerb/client/preauth/pkinit/PkinitPreauth.java", "blob_url": "https://github.com/apache/directory-kerby/blob/35fb465a7b6d63e1ba4e886f162b1b1cddd677a7/kerby-kerb/kerb-client/src/main/java/org/apache/kerby/kerberos/kerb/client/preauth/pkinit/PkinitPreauth.java", "sha": "9b37eb2b7e910fda44b9f3aa02ed70230172f447", "changes": 6, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/directory-kerby/contents/kerby-kerb/kerb-client/src/main/java/org/apache/kerby/kerberos/kerb/client/preauth/pkinit/PkinitPreauth.java?ref=35fb465a7b6d63e1ba4e886f162b1b1cddd677a7", "patch": "@@ -363,6 +363,12 @@ private void processReply(KdcRequest kdcRequest,\n             } catch (KrbException e) {\n                 e.printStackTrace();\n             }\n+            \n+            if (x509Certificate == null) {\n+                LOG.error(\"Failed to load PKINIT anchor\");\n+                throw new KrbException(\"Failed to load PKINIT anchor\");\n+            }\n+            \n             Certificate archorCertificate = PkinitCrypto.changeToCertificate(x509Certificate);\n \n             CertificateSet certificateSet = signedData.getCertificates();", "filename": "kerby-kerb/kerb-client/src/main/java/org/apache/kerby/kerberos/kerb/client/preauth/pkinit/PkinitPreauth.java"}], "repo": "directory-kerby"}, {"commit": "https://github.com/apache/directory-kerby/commit/2d31702f083c0c27b1469a805f81212995b96c84", "parent": "https://github.com/apache/directory-kerby/commit/4600ee351ff44bb90e58710e5441a423e4a6bf71", "message": "Fix NPE if the KDC does not configure identity keys for PKINIT", "bug_id": "directory-kerby_21", "file": [{"additions": 26, "raw_url": "https://github.com/apache/directory-kerby/raw/2d31702f083c0c27b1469a805f81212995b96c84/kerby-kerb/kerb-server/src/main/java/org/apache/kerby/kerberos/kerb/server/preauth/pkinit/PkinitPreauth.java", "blob_url": "https://github.com/apache/directory-kerby/blob/2d31702f083c0c27b1469a805f81212995b96c84/kerby-kerb/kerb-server/src/main/java/org/apache/kerby/kerberos/kerb/server/preauth/pkinit/PkinitPreauth.java", "sha": "0e4867dd79859895f3d1dc752381762f5db2dd84", "changes": 48, "status": "modified", "deletions": 22, "contents_url": "https://api.github.com/repos/apache/directory-kerby/contents/kerby-kerb/kerb-server/src/main/java/org/apache/kerby/kerberos/kerb/server/preauth/pkinit/PkinitPreauth.java?ref=2d31702f083c0c27b1469a805f81212995b96c84", "patch": "@@ -302,32 +302,36 @@ private PaDataEntry makeEntry(PaPkAsRep paPkAsRep) throws KrbException {\n \n     private PaPkAsRep makePaPkAsRep(DHPublicKey severPubKey, String identityString) throws KrbException {\n \n-        List<String> identityList = Arrays.asList(identityString.split(\",\"));\n-\n         List<X509Certificate> certificates = new ArrayList<>();\n-        for (String identity : identityList) {\n-            File file = new File(identity);\n-            try (Scanner scanner = new Scanner(file, \"UTF-8\")) {\n-                String found = scanner.findInLine(\"CERTIFICATE\");\n-\n-                if (found != null) {\n-                    InputStream res = null;\n-                    try {\n-                        res = new FileInputStream(identity);\n-                    } catch (FileNotFoundException e) {\n-                        e.printStackTrace();\n-                    }\n-                    X509Certificate certificate = null;\n-                    try {\n-                        certificate = (X509Certificate) CertificateHelper.loadCerts(res).iterator().next();\n-                    } catch (KrbException e) {\n-                        e.printStackTrace();\n+        if (identityString != null) {\n+            List<String> identityList = Arrays.asList(identityString.split(\",\"));\n+            for (String identity : identityList) {\n+                File file = new File(identity);\n+                try (Scanner scanner = new Scanner(file, \"UTF-8\")) {\n+                    String found = scanner.findInLine(\"CERTIFICATE\");\n+    \n+                    if (found != null) {\n+                        InputStream res = null;\n+                        try {\n+                            res = new FileInputStream(identity);\n+                        } catch (FileNotFoundException e) {\n+                            e.printStackTrace();\n+                        }\n+                        X509Certificate certificate = null;\n+                        try {\n+                            certificate = (X509Certificate) CertificateHelper.loadCerts(res).iterator().next();\n+                        } catch (KrbException e) {\n+                            e.printStackTrace();\n+                        }\n+                        certificates.add(certificate);\n+                        res.close();\n                     }\n-                    certificates.add(certificate);\n+                } catch (IOException e) {\n+                    e.getMessage();\n                 }\n-            } catch (FileNotFoundException e) {\n-                e.getMessage();\n             }\n+        } else {\n+            LOG.warn(\"No PKINIT identity keys specified\");\n         }\n \n         PaPkAsRep paPkAsRep = new PaPkAsRep();", "filename": "kerby-kerb/kerb-server/src/main/java/org/apache/kerby/kerberos/kerb/server/preauth/pkinit/PkinitPreauth.java"}], "repo": "directory-kerby"}, {"commit": "https://github.com/apache/directory-kerby/commit/4600ee351ff44bb90e58710e5441a423e4a6bf71", "parent": "https://github.com/apache/directory-kerby/commit/054db32c98377d55727049086517146e43f52f60", "message": "NPE fix for pkinit if the client principal is not known", "bug_id": "directory-kerby_22", "file": [{"additions": 4, "raw_url": "https://github.com/apache/directory-kerby/raw/4600ee351ff44bb90e58710e5441a423e4a6bf71/kerby-kerb/kerb-server/src/main/java/org/apache/kerby/kerberos/kerb/server/request/AsRequest.java", "blob_url": "https://github.com/apache/directory-kerby/blob/4600ee351ff44bb90e58710e5441a423e4a6bf71/kerby-kerb/kerb-server/src/main/java/org/apache/kerby/kerberos/kerb/server/request/AsRequest.java", "sha": "37e89bba9b4cc266996762f8eab9d273ca7ece77", "changes": 8, "status": "modified", "deletions": 4, "contents_url": "https://api.github.com/repos/apache/directory-kerby/contents/kerby-kerb/kerb-server/src/main/java/org/apache/kerby/kerberos/kerb/server/request/AsRequest.java?ref=4600ee351ff44bb90e58710e5441a423e4a6bf71", "patch": "@@ -82,15 +82,15 @@ protected void checkClient() throws KrbException {\n         } else {\n             clientEntry = getEntry(clientPrincipal.getName());\n         }\n-        if (isAnonymous()) {\n-            clientEntry.setPrincipal(new PrincipalName(clientPrincipal.getName(), NameType.NT_WELLKNOWN));\n-        }\n-\n         if (clientEntry == null) {\n             LOG.warn(\"Can't get the client entry.\");\n             throw new KrbException(KrbErrorCode.KDC_ERR_C_PRINCIPAL_UNKNOWN);\n         }\n \n+        if (isAnonymous()) {\n+            clientEntry.setPrincipal(new PrincipalName(clientPrincipal.getName(), NameType.NT_WELLKNOWN));\n+        }\n+\n         setClientEntry(clientEntry);\n \n         for (EncryptionType encType : request.getReqBody().getEtypes()) {", "filename": "kerby-kerb/kerb-server/src/main/java/org/apache/kerby/kerberos/kerb/server/request/AsRequest.java"}], "repo": "directory-kerby"}, {"commit": "https://github.com/apache/directory-kerby/commit/4b3e7042d9daca1f1bdb9c0536fa14610ca1498d", "parent": "https://github.com/apache/directory-kerby/commit/8da8d90a3bcb1a29a5cc40af196efd04b5cb6e73", "message": "DIRKRB-584 - NPE if the token issuers value is not specified", "bug_id": "directory-kerby_23", "file": [{"additions": 4, "raw_url": "https://github.com/apache/directory-kerby/raw/4b3e7042d9daca1f1bdb9c0536fa14610ca1498d/kerby-kerb/kerb-common/src/main/java/org/apache/kerby/kerberos/kerb/common/Krb5Conf.java", "blob_url": "https://github.com/apache/directory-kerby/blob/4b3e7042d9daca1f1bdb9c0536fa14610ca1498d/kerby-kerb/kerb-common/src/main/java/org/apache/kerby/kerberos/kerb/common/Krb5Conf.java", "sha": "7c4ae747cdd3a881c91ee6ee99714c8c8214138e", "changes": 6, "status": "modified", "deletions": 2, "contents_url": "https://api.github.com/repos/apache/directory-kerby/contents/kerby-kerb/kerb-common/src/main/java/org/apache/kerby/kerberos/kerb/common/Krb5Conf.java?ref=4b3e7042d9daca1f1bdb9c0536fa14610ca1498d", "patch": "@@ -160,8 +160,10 @@ protected Integer getInt(ConfigKey key, boolean useDefault,\n     protected String[] getStringArray(ConfigKey key, boolean useDefault,\n                                       String ... sections) {\n         String value = getString(key, useDefault, sections);\n-        String[] values = value.split(LIST_SPLITTER);\n-        return values;\n+        if (value != null) {\n+            return value.split(LIST_SPLITTER);\n+        }\n+        return new String[]{};\n     }\n \n     protected Object getSection(String sectionName) {", "filename": "kerby-kerb/kerb-common/src/main/java/org/apache/kerby/kerberos/kerb/common/Krb5Conf.java"}], "repo": "directory-kerby"}, {"commit": "https://github.com/apache/directory-kerby/commit/c3ada0cd7b1535a7d3f5f43230a63b964dc2c4a9", "parent": "https://github.com/apache/directory-kerby/commit/3cec9dc02ff630d3ad4eea563c384afc84ff6cb7", "message": "Fixed a NPE on a bad JWT signature validation + added tests.", "bug_id": "directory-kerby_24", "file": [{"additions": 17, "raw_url": "https://github.com/apache/directory-kerby/raw/c3ada0cd7b1535a7d3f5f43230a63b964dc2c4a9/kerby-kdc-test/src/test/java/org/apache/kerby/kerberos/kdc/WithAccessTokenKdcTest.java", "blob_url": "https://github.com/apache/directory-kerby/blob/c3ada0cd7b1535a7d3f5f43230a63b964dc2c4a9/kerby-kdc-test/src/test/java/org/apache/kerby/kerberos/kdc/WithAccessTokenKdcTest.java", "sha": "544923d3af17aba8bec226f809b06f104bf1ed65", "changes": 17, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/directory-kerby/contents/kerby-kdc-test/src/test/java/org/apache/kerby/kerberos/kdc/WithAccessTokenKdcTest.java?ref=c3ada0cd7b1535a7d3f5f43230a63b964dc2c4a9", "patch": "@@ -20,6 +20,8 @@\n package org.apache.kerby.kerberos.kdc;\n \n import java.io.InputStream;\n+import java.security.KeyPair;\n+import java.security.KeyPairGenerator;\n import java.security.PrivateKey;\n \n import org.apache.kerby.kerberos.kerb.KrbException;\n@@ -83,6 +85,21 @@ public void testUnsignedToken() throws Exception {\n         }\n     }\n     \n+    @Test\n+    public void testSignedTokenWithABadKey() throws Exception {\n+        KeyPairGenerator keyGen = KeyPairGenerator.getInstance(\"RSA\");\n+        KeyPair keyPair = keyGen.generateKeyPair();\n+        prepareToken(getServerPrincipal(), ISSUER, AUDIENCE, keyPair.getPrivate());\n+        \n+        try {\n+            performTest();\n+            Assert.fail(\"Failure expected on a bad key\");\n+        } catch (Exception ex) {\n+            // expected\n+            Assert.assertTrue(ex instanceof KrbException);\n+        }\n+    }\n+    \n     private void performTest() throws Exception {\n         createCredentialCache(getClientPrincipal(), getClientPassword());\n ", "filename": "kerby-kdc-test/src/test/java/org/apache/kerby/kerberos/kdc/WithAccessTokenKdcTest.java"}, {"additions": 17, "raw_url": "https://github.com/apache/directory-kerby/raw/c3ada0cd7b1535a7d3f5f43230a63b964dc2c4a9/kerby-kdc-test/src/test/java/org/apache/kerby/kerberos/kdc/WithIdentityTokenKdcTest.java", "blob_url": "https://github.com/apache/directory-kerby/blob/c3ada0cd7b1535a7d3f5f43230a63b964dc2c4a9/kerby-kdc-test/src/test/java/org/apache/kerby/kerberos/kdc/WithIdentityTokenKdcTest.java", "sha": "71f9da7c525c350f748dbfb9f9bdc4d19752df6e", "changes": 17, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/directory-kerby/contents/kerby-kdc-test/src/test/java/org/apache/kerby/kerberos/kdc/WithIdentityTokenKdcTest.java?ref=c3ada0cd7b1535a7d3f5f43230a63b964dc2c4a9", "patch": "@@ -27,6 +27,8 @@\n import org.junit.Test;\n \n import java.io.InputStream;\n+import java.security.KeyPair;\n+import java.security.KeyPairGenerator;\n import java.security.PrivateKey;\n \n public class WithIdentityTokenKdcTest extends WithTokenKdcTestBase {\n@@ -85,6 +87,21 @@ public void testUnsignedToken() throws Exception {\n         }\n     }\n     \n+    @Test\n+    public void testSignedTokenWithABadKey() throws Exception {\n+        KeyPairGenerator keyGen = KeyPairGenerator.getInstance(\"RSA\");\n+        KeyPair keyPair = keyGen.generateKeyPair();\n+        prepareToken(null, ISSUER, AUDIENCE, keyPair.getPrivate());\n+        \n+        try {\n+            performTest();\n+            Assert.fail(\"Failure expected on a bad key\");\n+        } catch (Exception ex) {\n+            // expected\n+            Assert.assertTrue(ex instanceof KrbException);\n+        }\n+    }\n+    \n     private void performTest() throws Exception {\n \n         createCredentialCache(getClientPrincipal(), getClientPassword());", "filename": "kerby-kdc-test/src/test/java/org/apache/kerby/kerberos/kdc/WithIdentityTokenKdcTest.java"}, {"additions": 4, "raw_url": "https://github.com/apache/directory-kerby/raw/c3ada0cd7b1535a7d3f5f43230a63b964dc2c4a9/kerby-kerb/kerb-server/src/main/java/org/apache/kerby/kerberos/kerb/server/preauth/token/TokenPreauth.java", "blob_url": "https://github.com/apache/directory-kerby/blob/c3ada0cd7b1535a7d3f5f43230a63b964dc2c4a9/kerby-kerb/kerb-server/src/main/java/org/apache/kerby/kerberos/kerb/server/preauth/token/TokenPreauth.java", "sha": "2de66b542b98a2908d2eb773aceb301cba266e87", "changes": 4, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/directory-kerby/contents/kerby-kerb/kerb-server/src/main/java/org/apache/kerby/kerberos/kerb/server/preauth/token/TokenPreauth.java?ref=c3ada0cd7b1535a7d3f5f43230a63b964dc2c4a9", "patch": "@@ -103,6 +103,10 @@ public boolean verify(KdcRequest kdcRequest, PluginRequestContext requestContext\n             } catch (IOException e) {\n                 throw new KrbException(\"Decoding failed\", e);\n             }\n+            \n+            if (authToken == null) {\n+                throw new KrbException(\"Token Decoding failed\");\n+            }\n \n             if (kdcRequest instanceof AsRequest) {\n                 AsRequest asRequest = (AsRequest) kdcRequest;", "filename": "kerby-kerb/kerb-server/src/main/java/org/apache/kerby/kerberos/kerb/server/preauth/token/TokenPreauth.java"}], "repo": "directory-kerby"}]
