[{"commit": "https://github.com/apache/commons-collections/commit/2e2bca346b68c935dba75d8eef762c3da7e66c26", "parent": "https://github.com/apache/commons-collections/commit/d0f6869a56165fe4bb47268294d8305b2c50064f", "message": "Avoid NPE warning by using assertNotNull\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/collections/trunk@1023835 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "commons-collections_1", "file": [{"additions": 4, "raw_url": "https://github.com/apache/commons-collections/raw/2e2bca346b68c935dba75d8eef762c3da7e66c26/src/test/org/apache/commons/collections/map/AbstractTestMap.java", "blob_url": "https://github.com/apache/commons-collections/blob/2e2bca346b68c935dba75d8eef762c3da7e66c26/src/test/org/apache/commons/collections/map/AbstractTestMap.java", "sha": "07f04196dafedd9ee79b92d088945f3d656e4df1", "changes": 8, "status": "modified", "deletions": 4, "contents_url": "https://api.github.com/repos/apache/commons-collections/contents/src/test/org/apache/commons/collections/map/AbstractTestMap.java?ref=2e2bca346b68c935dba75d8eef762c3da7e66c26", "patch": "@@ -482,11 +482,11 @@ public void testSampleMappings() {\n         Object[] values = getSampleValues();\n         Object[] newValues = getNewSampleValues();\n \n-        assertTrue(\"failure in test: Must have keys returned from \" +\n-                 \"getSampleKeys.\", keys != null);\n+        assertNotNull(\"failure in test: Must have keys returned from \" +\n+                 \"getSampleKeys.\", keys);\n \n-        assertTrue(\"failure in test: Must have values returned from \" +\n-                 \"getSampleValues.\", values != null);\n+        assertNotNull(\"failure in test: Must have values returned from \" +\n+                 \"getSampleValues.\", values);\n \n         // verify keys and values have equivalent lengths (in case getSampleX are\n         // overridden)", "filename": "src/test/org/apache/commons/collections/map/AbstractTestMap.java"}], "repo": "commons-collections"}, {"commit": "https://github.com/apache/commons-collections/commit/bb3d861fcde210e45f3d3ac59d8ee6e1e4086cb9", "parent": "https://github.com/apache/commons-collections/commit/f7f4b909d0961528c9b02ca5492b2a57a8df8bbe", "message": "Explicit boxing shows that NPE may occur so document it\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/collections/trunk@1477738 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "commons-collections_2", "file": [{"additions": 2, "raw_url": "https://github.com/apache/commons-collections/raw/bb3d861fcde210e45f3d3ac59d8ee6e1e4086cb9/src/main/java/org/apache/commons/collections4/trie/CharacterKeyAnalyzer.java", "blob_url": "https://github.com/apache/commons-collections/blob/bb3d861fcde210e45f3d3ac59d8ee6e1e4086cb9/src/main/java/org/apache/commons/collections4/trie/CharacterKeyAnalyzer.java", "sha": "f3916ae36fd1d5684396f0b50b32807019334df3", "changes": 3, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/commons-collections/contents/src/main/java/org/apache/commons/collections4/trie/CharacterKeyAnalyzer.java?ref=bb3d861fcde210e45f3d3ac59d8ee6e1e4086cb9", "patch": "@@ -65,9 +65,10 @@ public int lengthInBits(final Character key) {\n \n     /**\n      * {@inheritDoc}\n+     * @throws NullPointerException if the key is null\n      */\n     public boolean isBitSet(final Character key, final int bitIndex, final int lengthInBits) {\n-        return (key & mask(bitIndex)) != 0;\n+        return (key.charValue() & mask(bitIndex)) != 0;\n     }\n \n     /**", "filename": "src/main/java/org/apache/commons/collections4/trie/CharacterKeyAnalyzer.java"}], "repo": "commons-collections"}, {"commit": "https://github.com/apache/commons-collections/commit/0145c16a6ff8dced5e3cdb899a250dcd49ef780f", "parent": "https://github.com/apache/commons-collections/commit/152588c28661b0dee5d9456baf8b8d0035c3739d", "message": "PR: COLLECTIONS-360\nPrevent an NPE in FilterListIterator.next() and FilterListIterator.previous()\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/collections/trunk@1076034 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "commons-collections_3", "file": [{"additions": 3, "raw_url": "https://github.com/apache/commons-collections/raw/0145c16a6ff8dced5e3cdb899a250dcd49ef780f/pom.xml", "blob_url": "https://github.com/apache/commons-collections/blob/0145c16a6ff8dced5e3cdb899a250dcd49ef780f/pom.xml", "sha": "2edbcb455c0efcb8ce262060edd049305f2f7d01", "changes": 3, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/commons-collections/contents/pom.xml?ref=0145c16a6ff8dced5e3cdb899a250dcd49ef780f", "patch": "@@ -350,6 +350,9 @@\n     <contributor>\n       <name>Serhiy Yevtushenko</name>\n     </contributor>\n+    <contributor>\n+      <name>Sai Zhang</name>\n+    </contributor>\n     <contributor>\n       <name>Jason van Zyl</name>\n     </contributor>", "filename": "pom.xml"}, {"additions": 6, "raw_url": "https://github.com/apache/commons-collections/raw/0145c16a6ff8dced5e3cdb899a250dcd49ef780f/src/java/org/apache/commons/collections/iterators/FilterListIterator.java", "blob_url": "https://github.com/apache/commons-collections/blob/0145c16a6ff8dced5e3cdb899a250dcd49ef780f/src/java/org/apache/commons/collections/iterators/FilterListIterator.java", "sha": "8c2d65002b5875d9f1a0a88e34687d09582628bb", "changes": 6, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/commons-collections/contents/src/java/org/apache/commons/collections/iterators/FilterListIterator.java?ref=0145c16a6ff8dced5e3cdb899a250dcd49ef780f", "patch": "@@ -227,6 +227,9 @@ private boolean setNextObject() {\n             clearNextObject();\n         }\n \n+        if (iterator == null) {\n+            return false;\n+        }\n         while (iterator.hasNext()) {\n             E object = iterator.next();\n             if (predicate.evaluate(object)) {\n@@ -256,6 +259,9 @@ private boolean setPreviousObject() {\n             clearPreviousObject();\n         }\n \n+        if (iterator == null) {\n+            return false;\n+        }\n         while (iterator.hasPrevious()) {\n             E object = iterator.previous();\n             if (predicate.evaluate(object)) {", "filename": "src/java/org/apache/commons/collections/iterators/FilterListIterator.java"}, {"additions": 16, "raw_url": "https://github.com/apache/commons-collections/raw/0145c16a6ff8dced5e3cdb899a250dcd49ef780f/src/test/org/apache/commons/collections/iterators/TestFilterListIterator.java", "blob_url": "https://github.com/apache/commons-collections/blob/0145c16a6ff8dced5e3cdb899a250dcd49ef780f/src/test/org/apache/commons/collections/iterators/TestFilterListIterator.java", "sha": "a18514db8ade18b2e2488c0140227d36fc63bb67", "changes": 16, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/commons-collections/contents/src/test/org/apache/commons/collections/iterators/TestFilterListIterator.java?ref=0145c16a6ff8dced5e3cdb899a250dcd49ef780f", "patch": "@@ -17,12 +17,16 @@\n package org.apache.commons.collections.iterators;\n \n import java.util.ArrayList;\n+import java.util.Collection;\n import java.util.List;\n import java.util.ListIterator;\n import java.util.Random;\n \n import junit.framework.TestCase;\n import org.apache.commons.collections.Predicate;\n+import org.apache.commons.collections.PredicateUtils;\n+import org.apache.commons.collections.list.GrowthList;\n+import org.junit.Assert;\n \n /**\n  * Tests the FilterListIterator class.\n@@ -279,6 +283,18 @@ public void testFailingHasNextBug() {\n         assertEquals(expected.previous(), filtered.previous());\n     }\n \n+    /**\n+     * Test for {@link https://issues.apache.org/jira/browse/COLLECTIONS-360 COLLECTIONS-360}.\n+     */\n+    public void testCollections360() throws Throwable {\n+        Collection<Predicate<Object>> var7 = new GrowthList<Predicate<Object>>();\n+        Predicate<Object> var9 = PredicateUtils.anyPredicate(var7);\n+        FilterListIterator<Object> var13 = new FilterListIterator<Object>(var9);\n+        Assert.assertFalse(var13.hasNext());\n+        FilterListIterator<Object> var14 = new FilterListIterator<Object>(var9);\n+        Assert.assertFalse(var14.hasPrevious());\n+    }\n+\n     // Utilities\n \n     private void walkForward(ListIterator<?> expected, ListIterator<?> testing) {", "filename": "src/test/org/apache/commons/collections/iterators/TestFilterListIterator.java"}], "repo": "commons-collections"}, {"commit": "https://github.com/apache/commons-collections/commit/34bc1b54db9d78b983e9d48a0f1a5a1156393a95", "parent": "https://github.com/apache/commons-collections/commit/975baeba6172fd711f2a13db791464e6b272a120", "message": "Adding a state check as per COLLECTIONS-3. I got an NPE when running through tests without synchronization\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/collections/trunk@643755 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "commons-collections_4", "file": [{"additions": 5, "raw_url": "https://github.com/apache/commons-collections/raw/34bc1b54db9d78b983e9d48a0f1a5a1156393a95/src/java/org/apache/commons/collections/map/LRUMap.java", "blob_url": "https://github.com/apache/commons-collections/blob/34bc1b54db9d78b983e9d48a0f1a5a1156393a95/src/java/org/apache/commons/collections/map/LRUMap.java", "sha": "d0da4edd355baf6c7e0b26ce25885ba8e1c21664", "changes": 5, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/commons-collections/contents/src/java/org/apache/commons/collections/map/LRUMap.java?ref=34bc1b54db9d78b983e9d48a0f1a5a1156393a95", "patch": "@@ -191,6 +191,11 @@ protected void moveToMRU(LinkEntry entry) {\n         if (entry.after != header) {\n             modCount++;\n             // remove\n+            if(entry.before == null) {\n+                throw new IllegalStateException(\"Entry.before is null.\" + \n+                    \" Please check that your keys are immutable, and that you have used synchronization properly.\" +\n+                    \" If so, then please report this to dev@commons.apache.org as a bug.\");\n+            }\n             entry.before.after = entry.after;\n             entry.after.before = entry.before;\n             // add first", "filename": "src/java/org/apache/commons/collections/map/LRUMap.java"}], "repo": "commons-collections"}]
