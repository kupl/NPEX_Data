[
    {
        "repo": "aries-rsa",
        "commit": "https://github.com/apache/aries-rsa/commit/c848ffb4270729043d5f32c1af44291dcd97d4c6",
        "bug_id": "aries-rsa_c848ffb",
        "message": "ARIES-1519 - NPE when DistributionProvider has no\nremote.intents.supported\n\nadds a null check and defaults to an empty string if either\nremote.intents.supported or remote.configs.supported is not set by a\ndistribution provider",
        "parent": "https://github.com/apache/aries-rsa/commit/da63f3671760bf514aea6480b27d1f0c025479c1",
        "patched_files": [
            "DistributionProviderTracker.java"
        ],
        "file": [
            {
                "status": "modified",
                "additions": 8,
                "raw_url": "https://github.com/apache/aries-rsa/raw/c848ffb4270729043d5f32c1af44291dcd97d4c6/rsa/src/main/java/org/apache/aries/rsa/core/DistributionProviderTracker.java",
                "contents_url": "https://api.github.com/repos/apache/aries-rsa/contents/rsa/src/main/java/org/apache/aries/rsa/core/DistributionProviderTracker.java?ref=c848ffb4270729043d5f32c1af44291dcd97d4c6",
                "filename": "rsa/src/main/java/org/apache/aries/rsa/core/DistributionProviderTracker.java",
                "deletions": 2,
                "sha": "ea45c652ea21e2515696356364586012f71349d4",
                "blob_url": "https://github.com/apache/aries-rsa/blob/c848ffb4270729043d5f32c1af44291dcd97d4c6/rsa/src/main/java/org/apache/aries/rsa/core/DistributionProviderTracker.java",
                "patch": "@@ -28,6 +28,7 @@\n import org.osgi.framework.FrameworkUtil;\n import org.osgi.framework.ServiceReference;\n import org.osgi.framework.ServiceRegistration;\n+import org.osgi.service.remoteserviceadmin.RemoteConstants;\n import org.osgi.service.remoteserviceadmin.RemoteServiceAdmin;\n import org.osgi.util.tracker.ServiceTracker;\n import org.slf4j.Logger;\n@@ -51,8 +52,13 @@ public ServiceRegistration addingService(ServiceReference<DistributionProvider>\n                                                                     provider);\n         RemoteServiceadminFactory rsaf = new RemoteServiceadminFactory(rsaCore);\n         Dictionary<String, Object> props = new Hashtable<String, Object>();\n-        props.put(\"remote.intents.supported\", reference.getProperty(\"remote.intents.supported\"));\n-        props.put(\"remote.configs.supported\", reference.getProperty(\"remote.configs.supported\"));\n+        Object value = reference.getProperty(RemoteConstants.REMOTE_INTENTS_SUPPORTED);\n+        value = value == null ? \"\" : value;\n+        props.put(RemoteConstants.REMOTE_INTENTS_SUPPORTED, value);\n+\n+        value = reference.getProperty(RemoteConstants.REMOTE_CONFIGS_SUPPORTED);\n+        value = value == null ? \"\" : value;\n+        props.put(RemoteConstants.REMOTE_CONFIGS_SUPPORTED, value);\n         LOG.info(\"Registering RemoteServiceAdmin for provider \" + provider.getClass().getName());\n         return context.registerService(RemoteServiceAdmin.class.getName(), rsaf, props);\n     }",
                "changes": 10
            },
            {
                "status": "modified",
                "additions": 33,
                "raw_url": "https://github.com/apache/aries-rsa/raw/c848ffb4270729043d5f32c1af44291dcd97d4c6/rsa/src/test/java/org/apache/aries/rsa/core/DistributionProviderTrackerTest.java",
                "contents_url": "https://api.github.com/repos/apache/aries-rsa/contents/rsa/src/test/java/org/apache/aries/rsa/core/DistributionProviderTrackerTest.java?ref=c848ffb4270729043d5f32c1af44291dcd97d4c6",
                "filename": "rsa/src/test/java/org/apache/aries/rsa/core/DistributionProviderTrackerTest.java",
                "deletions": 0,
                "sha": "9a4de6bfa57259788e77af8b0c6a71ba7dfbd185",
                "blob_url": "https://github.com/apache/aries-rsa/blob/c848ffb4270729043d5f32c1af44291dcd97d4c6/rsa/src/test/java/org/apache/aries/rsa/core/DistributionProviderTrackerTest.java",
                "patch": "@@ -79,4 +79,37 @@ protected BundleContext getAPIContext() {\n         tracker.removedService(providerRef, rsaReg);\n         c.verify();\n     }\n+\n+    @Test\n+    public void testAddingWithNullValues() throws InvalidSyntaxException {\n+        IMocksControl c = EasyMock.createControl();\n+        DistributionProvider provider = c.createMock(DistributionProvider.class);\n+\n+        ServiceReference<DistributionProvider> providerRef = c.createMock(ServiceReference.class);\n+        EasyMock.expect(providerRef.getProperty(RemoteConstants.REMOTE_INTENTS_SUPPORTED)).andReturn(null);\n+        EasyMock.expect(providerRef.getProperty(RemoteConstants.REMOTE_CONFIGS_SUPPORTED)).andReturn(null);\n+\n+        BundleContext context = c.createMock(BundleContext.class);\n+        String filterSt = String.format(\"(objectClass=%s)\", DistributionProvider.class.getName());\n+        Filter filter = FrameworkUtil.createFilter(filterSt);\n+        EasyMock.expect(context.createFilter(filterSt)).andReturn(filter);\n+        EasyMock.expect(context.getService(providerRef)).andReturn(provider);\n+        ServiceRegistration rsaReg = c.createMock(ServiceRegistration.class);\n+        EasyMock.expect(context.registerService(EasyMock.isA(String.class), EasyMock.isA(ServiceFactory.class),\n+                                                EasyMock.isA(Dictionary.class)))\n+            .andReturn(rsaReg).atLeastOnce();\n+\n+        context.addServiceListener(EasyMock.isA(ServiceListener.class), EasyMock.isA(String.class));\n+        EasyMock.expectLastCall();\n+\n+        final BundleContext apiContext = c.createMock(BundleContext.class);\n+        c.replay();\n+        DistributionProviderTracker tracker = new DistributionProviderTracker(context) {\n+            protected BundleContext getAPIContext() {\n+                return apiContext;\n+            };\n+        };\n+        tracker.addingService(providerRef);\n+        c.verify();\n+    }\n }",
                "changes": 33
            }
        ],
        "unit_tests": [
            "DistributionProviderTrackerTest.java"
        ]
    },
    {
        "buggy": false,
        "test_file": "rsa/src/test/java/org/apache/aries/rsa/core/DistributionProviderTrackerTest.java",
        "buggy_files": [
            "rsa/src/main/java/org/apache/aries/rsa/core/DistributionProviderTracker.java"
        ],
        "fixed": true
    }
]