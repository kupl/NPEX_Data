{
    "incubator-dolphinscheduler_0ad41d9": {
        "bug_id": "incubator-dolphinscheduler_0ad41d9",
        "commit": "https://github.com/apache/incubator-dolphinscheduler/commit/0ad41d9f86bd0720f47c01997b7deebe8109606c",
        "file": [
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/incubator-dolphinscheduler/blob/0ad41d9f86bd0720f47c01997b7deebe8109606c/dolphinscheduler-api/src/main/java/org/apache/dolphinscheduler/api/service/SessionService.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/incubator-dolphinscheduler/contents/dolphinscheduler-api/src/main/java/org/apache/dolphinscheduler/api/service/SessionService.java?ref=0ad41d9f86bd0720f47c01997b7deebe8109606c",
                "deletions": 0,
                "filename": "dolphinscheduler-api/src/main/java/org/apache/dolphinscheduler/api/service/SessionService.java",
                "patch": "@@ -28,6 +28,7 @@\n import org.slf4j.LoggerFactory;\n import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.stereotype.Service;\n+import org.springframework.transaction.annotation.Transactional;\n \n import javax.servlet.http.Cookie;\n import javax.servlet.http.HttpServletRequest;\n@@ -80,6 +81,7 @@ public Session getSession(HttpServletRequest request)  {\n    * @param ip\n    * @return\n    */\n+  @Transactional(rollbackFor = Exception.class)\n   public String createSession(User user, String ip) {\n     Session session = null;\n ",
                "raw_url": "https://github.com/apache/incubator-dolphinscheduler/raw/0ad41d9f86bd0720f47c01997b7deebe8109606c/dolphinscheduler-api/src/main/java/org/apache/dolphinscheduler/api/service/SessionService.java",
                "sha": "411a5614cab9cfa820009902344d9c0fe8adf4f8",
                "status": "modified"
            }
        ],
        "message": "add Transactional for createSession method (#1186)\n\n* move updateTaskState into try/catch block in case of exception\r\n\r\n* fix NPE\r\n\r\n* using conf.getInt instead of getString\r\n\r\n* for AbstractZKClient, remove the log, for it will print the same log message in createZNodePath.\r\nfor AlertDao, correct the spelling.\r\n\r\n* duplicate\r\n\r\n* refactor getTaskWorkerGroupId\r\n\r\n* add friendly log\r\n\r\n* update hearbeat thread num = 1\r\n\r\n* fix the bug when worker execute task using queue. and remove checking Tenant user anymore in TaskScheduleThread\r\n\r\n* 1. move verifyTaskInstanceIsNull after taskInstance\r\n2. keep verifyTenantIsNull/verifyTaskInstanceIsNull clean and readable\r\n\r\n* fix the message\r\n\r\n* delete before check to avoid KeeperException$NoNodeException\r\n\r\n* fix the message\r\n\r\n* check processInstance state before delete tenant\r\n\r\n* check processInstance state before delete worker group\r\n\r\n* refactor\r\n\r\n* merge api constants into common constatns\r\n\r\n* update the resource perm\r\n\r\n* update the dataSource perm\r\n\r\n* fix CheckUtils.checkUserParams method\r\n\r\n* update AlertGroupService, extends from BaseService, remove duplicate methods\r\n\r\n* refactor\r\n\r\n* modify method name\r\n\r\n* add hasProjectAndPerm method\r\n\r\n* using checkProject instead of getResultStatus\r\n\r\n* delete checkAuth method, using hasProjectAndPerm instead.\r\n\r\n* correct spelling\r\n\r\n* add transactional for deleteWorkerGroupById\r\n\r\n* add Transactional for deleteProcessInstanceById method\r\n\r\n* change sqlSessionTemplate singleton\r\n\r\n* change sqlSessionTemplate singleton and reformat code\r\n\r\n* fix unsuitable error message\r\n\r\n* update shutdownhook methods\r\n\r\n* fix worker log bug\r\n\r\n* fix api server debug mode bug\r\n\r\n* upgrade zk version\r\n\r\n* delete this line ,for zkClient.close() will do the whole thing\r\n\r\n* fix master server shutdown error\r\n\r\n* degrade zk version and add FourLetterWordMain class\r\n\r\n* fix PathChildrenCache not close\r\n\r\n* add Transactional for createSession method",
        "parent": "https://github.com/apache/incubator-dolphinscheduler/commit/467ac35f7fac0e0e714cbe04ff42de3449307f8d",
        "repo": "incubator-dolphinscheduler",
        "unit_tests": [
            "SessionServiceTest.java"
        ]
    },
    "incubator-dolphinscheduler_0beaffa": {
        "bug_id": "incubator-dolphinscheduler_0beaffa",
        "commit": "https://github.com/apache/incubator-dolphinscheduler/commit/0beaffa088a9f1f04156fa2ffb1f2ff0056ce3ee",
        "file": [
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/incubator-dolphinscheduler/blob/0beaffa088a9f1f04156fa2ffb1f2ff0056ce3ee/dolphinscheduler-api/src/main/java/org/apache/dolphinscheduler/api/service/ResourcesService.java",
                "changes": 4,
                "contents_url": "https://api.github.com/repos/apache/incubator-dolphinscheduler/contents/dolphinscheduler-api/src/main/java/org/apache/dolphinscheduler/api/service/ResourcesService.java?ref=0beaffa088a9f1f04156fa2ffb1f2ff0056ce3ee",
                "deletions": 2,
                "filename": "dolphinscheduler-api/src/main/java/org/apache/dolphinscheduler/api/service/ResourcesService.java",
                "patch": "@@ -208,7 +208,7 @@ public Result updateResource(User loginUser,\n             putMsg(result, Status.RESOURCE_NOT_EXIST);\n             return result;\n         }\n-        if (loginUser.getId() != resource.getUserId()) {\n+        if (loginUser.getId() != resource.getUserId() || loginUser.getUserType() != UserType.ADMIN_USER) {\n             putMsg(result, Status.USER_NO_OPERATION_PERM);\n             return result;\n         }\n@@ -408,7 +408,7 @@ public Result delete(User loginUser, int resourceId) throws Exception {\n             putMsg(result, Status.RESOURCE_NOT_EXIST);\n             return result;\n         }\n-        if (loginUser.getId() != resource.getUserId() && loginUser.getUserType() != UserType.ADMIN_USER) {\n+        if (loginUser.getId() != resource.getUserId() || loginUser.getUserType() != UserType.ADMIN_USER) {\n             putMsg(result, Status.USER_NO_OPERATION_PERM);\n             return result;\n         }",
                "raw_url": "https://github.com/apache/incubator-dolphinscheduler/raw/0beaffa088a9f1f04156fa2ffb1f2ff0056ce3ee/dolphinscheduler-api/src/main/java/org/apache/dolphinscheduler/api/service/ResourcesService.java",
                "sha": "9b4e8bf94cdeddd79e84a14f83fb835c78c1fa0b",
                "status": "modified"
            }
        ],
        "message": "update the resource perm (#1087)\n\n* move updateTaskState into try/catch block in case of exception\r\n\r\n* fix NPE\r\n\r\n* using conf.getInt instead of getString\r\n\r\n* for AbstractZKClient, remove the log, for it will print the same log message in createZNodePath.\r\nfor AlertDao, correct the spelling.\r\n\r\n* duplicate\r\n\r\n* refactor getTaskWorkerGroupId\r\n\r\n* add friendly log\r\n\r\n* update hearbeat thread num = 1\r\n\r\n* fix the bug when worker execute task using queue. and remove checking Tenant user anymore in TaskScheduleThread\r\n\r\n* 1. move verifyTaskInstanceIsNull after taskInstance\r\n2. keep verifyTenantIsNull/verifyTaskInstanceIsNull clean and readable\r\n\r\n* fix the message\r\n\r\n* delete before check to avoid KeeperException$NoNodeException\r\n\r\n* fix the message\r\n\r\n* check processInstance state before delete tenant\r\n\r\n* check processInstance state before delete worker group\r\n\r\n* refactor\r\n\r\n* merge api constants into common constatns\r\n\r\n* update the resource perm",
        "parent": "https://github.com/apache/incubator-dolphinscheduler/commit/b94dd37e153de1c07958e28929fba7a8e60f77b6",
        "repo": "incubator-dolphinscheduler",
        "unit_tests": [
            "ResourcesServiceTest.java"
        ]
    },
    "incubator-dolphinscheduler_1f30367": {
        "bug_id": "incubator-dolphinscheduler_1f30367",
        "commit": "https://github.com/apache/incubator-dolphinscheduler/commit/1f303675869b759e60dcc10ccfbc11ba20778eaf",
        "file": [
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/incubator-dolphinscheduler/blob/1f303675869b759e60dcc10ccfbc11ba20778eaf/dolphinscheduler-api/src/main/java/org/apache/dolphinscheduler/api/controller/TenantController.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/incubator-dolphinscheduler/contents/dolphinscheduler-api/src/main/java/org/apache/dolphinscheduler/api/controller/TenantController.java?ref=1f303675869b759e60dcc10ccfbc11ba20778eaf",
                "deletions": 1,
                "filename": "dolphinscheduler-api/src/main/java/org/apache/dolphinscheduler/api/controller/TenantController.java",
                "patch": "@@ -203,7 +203,7 @@ public Result updateTenant(@ApiIgnore @RequestAttribute(value = Constants.SESSIO\n     @ResponseStatus(HttpStatus.OK)\n     public Result deleteTenantById(@ApiIgnore @RequestAttribute(value = Constants.SESSION_USER) User loginUser,\n                                    @RequestParam(value = \"id\") int id) {\n-        logger.info(\"login user {}, delete tenant, tenantCode: {},\", loginUser.getUserName(), id);\n+        logger.info(\"login user {}, delete tenant, tenantId: {},\", loginUser.getUserName(), id);\n         try {\n             Map<String, Object> result = tenantService.deleteTenantById(loginUser,id);\n             return returnDataList(result);",
                "raw_url": "https://github.com/apache/incubator-dolphinscheduler/raw/1f303675869b759e60dcc10ccfbc11ba20778eaf/dolphinscheduler-api/src/main/java/org/apache/dolphinscheduler/api/controller/TenantController.java",
                "sha": "a1a2f559b14d74aef801fd25fd0856e00eef9a20",
                "status": "modified"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/incubator-dolphinscheduler/blob/1f303675869b759e60dcc10ccfbc11ba20778eaf/dolphinscheduler-api/src/main/java/org/apache/dolphinscheduler/api/enums/Status.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/incubator-dolphinscheduler/contents/dolphinscheduler-api/src/main/java/org/apache/dolphinscheduler/api/enums/Status.java?ref=1f303675869b759e60dcc10ccfbc11ba20778eaf",
                "deletions": 1,
                "filename": "dolphinscheduler-api/src/main/java/org/apache/dolphinscheduler/api/enums/Status.java",
                "patch": "@@ -164,7 +164,7 @@\n     PREVIEW_SCHEDULE_ERROR(10139,\"preview schedule error\"),\n     PARSE_TO_CRON_EXPRESSION_ERROR(10140,\"parse cron to cron expression error\"),\n     SCHEDULE_START_TIME_END_TIME_SAME(10141,\"The start time must not be the same as the end\"),\n-\n+    DELETE_TENANT_BY_ID_FAIL(100142,\"delete tenant by id fail, for there are {0} process instances in executing using it\"),\n \n     UDF_FUNCTION_NOT_EXIST(20001, \"UDF function not found\"),\n     UDF_FUNCTION_EXISTS(20002, \"UDF function already exists\"),",
                "raw_url": "https://github.com/apache/incubator-dolphinscheduler/raw/1f303675869b759e60dcc10ccfbc11ba20778eaf/dolphinscheduler-api/src/main/java/org/apache/dolphinscheduler/api/enums/Status.java",
                "sha": "1c22da74cc07daf9adce592905818196739c7e36",
                "status": "modified"
            },
            {
                "additions": 27,
                "blob_url": "https://github.com/apache/incubator-dolphinscheduler/blob/1f303675869b759e60dcc10ccfbc11ba20778eaf/dolphinscheduler-api/src/main/java/org/apache/dolphinscheduler/api/service/TenantService.java",
                "changes": 30,
                "contents_url": "https://api.github.com/repos/apache/incubator-dolphinscheduler/contents/dolphinscheduler-api/src/main/java/org/apache/dolphinscheduler/api/service/TenantService.java?ref=1f303675869b759e60dcc10ccfbc11ba20778eaf",
                "deletions": 3,
                "filename": "dolphinscheduler-api/src/main/java/org/apache/dolphinscheduler/api/service/TenantService.java",
                "patch": "@@ -16,18 +16,22 @@\n  */\n package org.apache.dolphinscheduler.api.service;\n \n+import com.baomidou.mybatisplus.core.metadata.IPage;\n+import com.baomidou.mybatisplus.extension.plugins.pagination.Page;\n+import org.apache.commons.lang3.StringUtils;\n import org.apache.dolphinscheduler.api.enums.Status;\n import org.apache.dolphinscheduler.api.utils.Constants;\n import org.apache.dolphinscheduler.api.utils.PageInfo;\n import org.apache.dolphinscheduler.api.utils.Result;\n+import org.apache.dolphinscheduler.common.enums.ExecutionStatus;\n+import org.apache.dolphinscheduler.common.utils.CollectionUtils;\n import org.apache.dolphinscheduler.common.utils.HadoopUtils;\n import org.apache.dolphinscheduler.common.utils.PropertyUtils;\n+import org.apache.dolphinscheduler.dao.entity.ProcessInstance;\n import org.apache.dolphinscheduler.dao.entity.Tenant;\n import org.apache.dolphinscheduler.dao.entity.User;\n+import org.apache.dolphinscheduler.dao.mapper.ProcessInstanceMapper;\n import org.apache.dolphinscheduler.dao.mapper.TenantMapper;\n-import com.baomidou.mybatisplus.core.metadata.IPage;\n-import com.baomidou.mybatisplus.extension.plugins.pagination.Page;\n-import org.apache.commons.lang3.StringUtils;\n import org.apache.hadoop.fs.FileStatus;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n@@ -51,6 +55,9 @@\n   @Autowired\n   private TenantMapper tenantMapper;\n \n+  @Autowired\n+  private ProcessInstanceMapper processInstanceMapper;\n+\n   /**\n    * create tenant\n    *\n@@ -227,6 +234,22 @@\n       return result;\n     }\n \n+    int[] states = new int[]{\n+            ExecutionStatus.SUBMITTED_SUCCESS.ordinal(),\n+            ExecutionStatus.RUNNING_EXEUTION.ordinal(),\n+            ExecutionStatus.READY_PAUSE.ordinal(),\n+            ExecutionStatus.READY_STOP.ordinal(),\n+            ExecutionStatus.NEED_FAULT_TOLERANCE.ordinal(),\n+            ExecutionStatus.WAITTING_THREAD.ordinal(),\n+            ExecutionStatus.WAITTING_DEPEND.ordinal()\n+            };\n+\n+    List<ProcessInstance> processInstances = processInstanceMapper.queryByTenantIdAndStatus(tenant.getId(), states);\n+    if(CollectionUtils.isNotEmpty(processInstances)){\n+      putMsg(result, Status.DELETE_TENANT_BY_ID_FAIL, processInstances.size());\n+      return result;\n+    }\n+\n     // if resource upload startup\n     if (PropertyUtils.getResUploadStartupState()){\n       String tenantPath = HadoopUtils.getHdfsDataBasePath() + \"/\" + tenant.getTenantCode();\n@@ -249,6 +272,7 @@\n     }\n \n     tenantMapper.deleteById(id);\n+    processInstanceMapper.updateProcessInstanceByTenantId(id, -1);\n     putMsg(result, Status.SUCCESS);\n     return result;\n   }",
                "raw_url": "https://github.com/apache/incubator-dolphinscheduler/raw/1f303675869b759e60dcc10ccfbc11ba20778eaf/dolphinscheduler-api/src/main/java/org/apache/dolphinscheduler/api/service/TenantService.java",
                "sha": "93acb9cbd276ebb3a0e9a118d2b9cc5b75c4c0dd",
                "status": "modified"
            },
            {
                "additions": 5,
                "blob_url": "https://github.com/apache/incubator-dolphinscheduler/blob/1f303675869b759e60dcc10ccfbc11ba20778eaf/dolphinscheduler-dao/src/main/java/org/apache/dolphinscheduler/dao/mapper/ProcessInstanceMapper.java",
                "changes": 5,
                "contents_url": "https://api.github.com/repos/apache/incubator-dolphinscheduler/contents/dolphinscheduler-dao/src/main/java/org/apache/dolphinscheduler/dao/mapper/ProcessInstanceMapper.java?ref=1f303675869b759e60dcc10ccfbc11ba20778eaf",
                "deletions": 0,
                "filename": "dolphinscheduler-dao/src/main/java/org/apache/dolphinscheduler/dao/mapper/ProcessInstanceMapper.java",
                "patch": "@@ -34,6 +34,9 @@\n     List<ProcessInstance> queryByHostAndStatus(@Param(\"host\") String host,\n                                                @Param(\"states\") int[] stateArray);\n \n+    List<ProcessInstance> queryByTenantIdAndStatus(@Param(\"tenantId\") int tenantId,\n+                                               @Param(\"states\") int[] states);\n+\n     IPage<ProcessInstance> queryProcessInstanceListPaging(Page<ProcessInstance> page,\n                                                           @Param(\"projectId\") int projectId,\n                                                           @Param(\"processDefinitionId\") Integer processDefinitionId,\n@@ -50,6 +53,8 @@ int setFailoverByHostAndStateArray(@Param(\"host\") String host,\n     int updateProcessInstanceByState(@Param(\"originState\") ExecutionStatus originState,\n                                      @Param(\"destState\") ExecutionStatus destState);\n \n+    int updateProcessInstanceByTenantId(@Param(\"originTenantId\") int originTenantId, @Param(\"destTenantId\") int destTenantId);\n+\n     List<ExecuteStatusCount> countInstanceStateByUser(\n             @Param(\"startTime\") Date startTime,\n             @Param(\"endTime\") Date endTime,",
                "raw_url": "https://github.com/apache/incubator-dolphinscheduler/raw/1f303675869b759e60dcc10ccfbc11ba20778eaf/dolphinscheduler-dao/src/main/java/org/apache/dolphinscheduler/dao/mapper/ProcessInstanceMapper.java",
                "sha": "ae78b929b95815ff9cc1d4d760b0a40983a7ac24",
                "status": "modified"
            },
            {
                "additions": 22,
                "blob_url": "https://github.com/apache/incubator-dolphinscheduler/blob/1f303675869b759e60dcc10ccfbc11ba20778eaf/dolphinscheduler-dao/src/main/resources/org/apache/dolphinscheduler/dao/mapper/ProcessInstanceMapper.xml",
                "changes": 22,
                "contents_url": "https://api.github.com/repos/apache/incubator-dolphinscheduler/contents/dolphinscheduler-dao/src/main/resources/org/apache/dolphinscheduler/dao/mapper/ProcessInstanceMapper.xml?ref=1f303675869b759e60dcc10ccfbc11ba20778eaf",
                "deletions": 0,
                "filename": "dolphinscheduler-dao/src/main/resources/org/apache/dolphinscheduler/dao/mapper/ProcessInstanceMapper.xml",
                "patch": "@@ -19,6 +19,21 @@\n         </foreach>\n         order by id asc\n     </select>\n+\n+    <select id=\"queryByTenantIdAndStatus\" resultType=\"org.apache.dolphinscheduler.dao.entity.ProcessInstance\">\n+        select *\n+        from t_ds_process_instance\n+        where 1=1\n+        <if test=\"tenantId != -1\">\n+            and tenant_id =#{tenantId}\n+        </if>\n+        and state in\n+        <foreach collection=\"states\" item=\"i\" open=\"(\" close=\")\" separator=\",\">\n+            #{i}\n+        </foreach>\n+        order by id asc\n+    </select>\n+\n     <select id=\"queryProcessInstanceListPaging\" resultType=\"org.apache.dolphinscheduler.dao.entity.ProcessInstance\">\n         select instance.*\n         from t_ds_process_instance instance\n@@ -59,6 +74,13 @@\n         set state = #{destState}\n         where state = #{originState}\n     </update>\n+\n+    <update id=\"updateProcessInstanceByTenantId\">\n+        update t_ds_process_instance\n+        set tenant_id = #{destTenantId}\n+        where tenant_id = #{originTenantId}\n+    </update>\n+\n     <select id=\"countInstanceStateByUser\" resultType=\"org.apache.dolphinscheduler.dao.entity.ExecuteStatusCount\">\n         select t.state, count(0) as count\n         from t_ds_process_instance t",
                "raw_url": "https://github.com/apache/incubator-dolphinscheduler/raw/1f303675869b759e60dcc10ccfbc11ba20778eaf/dolphinscheduler-dao/src/main/resources/org/apache/dolphinscheduler/dao/mapper/ProcessInstanceMapper.xml",
                "sha": "cd05dc56e3ffd2f4267f8c82058666c771cc3f72",
                "status": "modified"
            }
        ],
        "message": "check processInstance state before delete tenant (#1065)\n\n* move updateTaskState into try/catch block in case of exception\r\n\r\n* fix NPE\r\n\r\n* using conf.getInt instead of getString\r\n\r\n* for AbstractZKClient, remove the log, for it will print the same log message in createZNodePath.\r\nfor AlertDao, correct the spelling.\r\n\r\n* duplicate\r\n\r\n* refactor getTaskWorkerGroupId\r\n\r\n* add friendly log\r\n\r\n* update hearbeat thread num = 1\r\n\r\n* fix the bug when worker execute task using queue. and remove checking Tenant user anymore in TaskScheduleThread\r\n\r\n* 1. move verifyTaskInstanceIsNull after taskInstance\r\n2. keep verifyTenantIsNull/verifyTaskInstanceIsNull clean and readable\r\n\r\n* fix the message\r\n\r\n* delete before check to avoid KeeperException$NoNodeException\r\n\r\n* fix the message\r\n\r\n* check processInstance state before delete tenant",
        "parent": "https://github.com/apache/incubator-dolphinscheduler/commit/72f601cda511165ba7569f4214ed6adab6d4ae80",
        "repo": "incubator-dolphinscheduler",
        "unit_tests": [
            "ProcessInstanceMapperTest.java"
        ]
    },
    "incubator-dolphinscheduler_41d4e65": {
        "bug_id": "incubator-dolphinscheduler_41d4e65",
        "commit": "https://github.com/apache/incubator-dolphinscheduler/commit/41d4e659cbc007fc21ef67ddaae815e613b2eea0",
        "file": [
            {
                "additions": 4,
                "blob_url": "https://github.com/apache/incubator-dolphinscheduler/blob/41d4e659cbc007fc21ef67ddaae815e613b2eea0/dolphinscheduler-api/src/main/java/org/apache/dolphinscheduler/api/service/BaseService.java",
                "changes": 4,
                "contents_url": "https://api.github.com/repos/apache/incubator-dolphinscheduler/contents/dolphinscheduler-api/src/main/java/org/apache/dolphinscheduler/api/service/BaseService.java?ref=41d4e659cbc007fc21ef67ddaae815e613b2eea0",
                "deletions": 0,
                "filename": "dolphinscheduler-api/src/main/java/org/apache/dolphinscheduler/api/service/BaseService.java",
                "patch": "@@ -127,4 +127,8 @@ protected void createTenantDirIfNotExists(String tenantCode)throws Exception{\n         HadoopUtils.getInstance().mkdir(resourcePath);\n         HadoopUtils.getInstance().mkdir(udfsPath);\n     }\n+\n+    protected boolean hasPerm(User operateUser, int createUserId){\n+        return operateUser.getId() == createUserId || isAdmin(operateUser);\n+    }\n }",
                "raw_url": "https://github.com/apache/incubator-dolphinscheduler/raw/41d4e659cbc007fc21ef67ddaae815e613b2eea0/dolphinscheduler-api/src/main/java/org/apache/dolphinscheduler/api/service/BaseService.java",
                "sha": "eb95f56b5a062fa9351c9ec2eb8d66f9ac882799",
                "status": "modified"
            },
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/incubator-dolphinscheduler/blob/41d4e659cbc007fc21ef67ddaae815e613b2eea0/dolphinscheduler-api/src/main/java/org/apache/dolphinscheduler/api/service/DataSourceService.java",
                "changes": 4,
                "contents_url": "https://api.github.com/repos/apache/incubator-dolphinscheduler/contents/dolphinscheduler-api/src/main/java/org/apache/dolphinscheduler/api/service/DataSourceService.java?ref=41d4e659cbc007fc21ef67ddaae815e613b2eea0",
                "deletions": 2,
                "filename": "dolphinscheduler-api/src/main/java/org/apache/dolphinscheduler/api/service/DataSourceService.java",
                "patch": "@@ -147,7 +147,7 @@\n             return result;\n         }\n \n-        if(loginUser.getId() != dataSource.getUserId() || loginUser.getUserType() != UserType.ADMIN_USER){\n+        if(!hasPerm(loginUser, dataSource.getUserId())){\n             putMsg(result, Status.USER_NO_OPERATION_PERM);\n             return result;\n         }\n@@ -593,7 +593,7 @@ public Result delete(User loginUser, int datasourceId) {\n                 putMsg(result, Status.RESOURCE_NOT_EXIST);\n                 return result;\n             }\n-            if(loginUser.getId() != dataSource.getUserId() || loginUser.getUserType() != UserType.ADMIN_USER){\n+            if(!hasPerm(loginUser, dataSource.getUserId())){\n                 putMsg(result, Status.USER_NO_OPERATION_PERM);\n                 return result;\n             }",
                "raw_url": "https://github.com/apache/incubator-dolphinscheduler/raw/41d4e659cbc007fc21ef67ddaae815e613b2eea0/dolphinscheduler-api/src/main/java/org/apache/dolphinscheduler/api/service/DataSourceService.java",
                "sha": "3e80e9e62ed21a44163dbf30ac11777a650566a0",
                "status": "modified"
            },
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/incubator-dolphinscheduler/blob/41d4e659cbc007fc21ef67ddaae815e613b2eea0/dolphinscheduler-api/src/main/java/org/apache/dolphinscheduler/api/service/ResourcesService.java",
                "changes": 4,
                "contents_url": "https://api.github.com/repos/apache/incubator-dolphinscheduler/contents/dolphinscheduler-api/src/main/java/org/apache/dolphinscheduler/api/service/ResourcesService.java?ref=41d4e659cbc007fc21ef67ddaae815e613b2eea0",
                "deletions": 2,
                "filename": "dolphinscheduler-api/src/main/java/org/apache/dolphinscheduler/api/service/ResourcesService.java",
                "patch": "@@ -208,7 +208,7 @@ public Result updateResource(User loginUser,\n             putMsg(result, Status.RESOURCE_NOT_EXIST);\n             return result;\n         }\n-        if (loginUser.getId() != resource.getUserId() || loginUser.getUserType() != UserType.ADMIN_USER) {\n+        if (!hasPerm(loginUser, resource.getUserId())) {\n             putMsg(result, Status.USER_NO_OPERATION_PERM);\n             return result;\n         }\n@@ -408,7 +408,7 @@ public Result delete(User loginUser, int resourceId) throws Exception {\n             putMsg(result, Status.RESOURCE_NOT_EXIST);\n             return result;\n         }\n-        if (loginUser.getId() != resource.getUserId() || loginUser.getUserType() != UserType.ADMIN_USER) {\n+        if (!hasPerm(loginUser, resource.getUserId())) {\n             putMsg(result, Status.USER_NO_OPERATION_PERM);\n             return result;\n         }",
                "raw_url": "https://github.com/apache/incubator-dolphinscheduler/raw/41d4e659cbc007fc21ef67ddaae815e613b2eea0/dolphinscheduler-api/src/main/java/org/apache/dolphinscheduler/api/service/ResourcesService.java",
                "sha": "e8707925922ced5157b8f7827cb16d5616f0b5bd",
                "status": "modified"
            }
        ],
        "message": "refactor deletePerm (#1093)\n\n* move updateTaskState into try/catch block in case of exception\r\n\r\n* fix NPE\r\n\r\n* using conf.getInt instead of getString\r\n\r\n* for AbstractZKClient, remove the log, for it will print the same log message in createZNodePath.\r\nfor AlertDao, correct the spelling.\r\n\r\n* duplicate\r\n\r\n* refactor getTaskWorkerGroupId\r\n\r\n* add friendly log\r\n\r\n* update hearbeat thread num = 1\r\n\r\n* fix the bug when worker execute task using queue. and remove checking Tenant user anymore in TaskScheduleThread\r\n\r\n* 1. move verifyTaskInstanceIsNull after taskInstance\r\n2. keep verifyTenantIsNull/verifyTaskInstanceIsNull clean and readable\r\n\r\n* fix the message\r\n\r\n* delete before check to avoid KeeperException$NoNodeException\r\n\r\n* fix the message\r\n\r\n* check processInstance state before delete tenant\r\n\r\n* check processInstance state before delete worker group\r\n\r\n* refactor\r\n\r\n* merge api constants into common constatns\r\n\r\n* update the resource perm\r\n\r\n* update the dataSource perm\r\n\r\n* fix CheckUtils.checkUserParams method\r\n\r\n* update AlertGroupService, extends from BaseService, remove duplicate methods\r\n\r\n* refactor\r\n\r\n* modify method name",
        "parent": "https://github.com/apache/incubator-dolphinscheduler/commit/5f3a195f6cc0beaef64f5144d04f2f69d2b0600d",
        "repo": "incubator-dolphinscheduler",
        "unit_tests": [
            "ResourcesServiceTest.java"
        ]
    },
    "incubator-dolphinscheduler_501a400": {
        "bug_id": "incubator-dolphinscheduler_501a400",
        "commit": "https://github.com/apache/incubator-dolphinscheduler/commit/501a4006f7a86c1086090605387894b46761327f",
        "file": [
            {
                "additions": 11,
                "blob_url": "https://github.com/apache/incubator-dolphinscheduler/blob/501a4006f7a86c1086090605387894b46761327f/dolphinscheduler-alert/src/main/java/org/apache/dolphinscheduler/alert/manager/EmailManager.java",
                "changes": 22,
                "contents_url": "https://api.github.com/repos/apache/incubator-dolphinscheduler/contents/dolphinscheduler-alert/src/main/java/org/apache/dolphinscheduler/alert/manager/EmailManager.java?ref=501a4006f7a86c1086090605387894b46761327f",
                "deletions": 11,
                "filename": "dolphinscheduler-alert/src/main/java/org/apache/dolphinscheduler/alert/manager/EmailManager.java",
                "patch": "@@ -28,12 +28,12 @@\n public class EmailManager {\n     /**\n      * email send\n-     * @param receviersList\n-     * @param receviersCcList\n-     * @param title\n-     * @param content\n-     * @param showType\n-     * @return\n+     * @param receviersList the receiver list\n+     * @param receviersCcList the cc List\n+     * @param title the title\n+     * @param content the content\n+     * @param showType the showType\n+     * @return the send result\n      */\n     public Map<String,Object> send(List<String> receviersList,List<String> receviersCcList,String title,String content,ShowType showType){\n \n@@ -42,11 +42,11 @@\n \n     /**\n      * msg send\n-     * @param receviersList\n-     * @param title\n-     * @param content\n-     * @param showType\n-     * @return\n+     * @param receviersList the receiver list\n+     * @param title the title\n+     * @param content the content\n+     * @param showType the showType\n+     * @return the send result\n      */\n     public Map<String,Object> send(List<String> receviersList,String title,String content,ShowType showType){\n ",
                "raw_url": "https://github.com/apache/incubator-dolphinscheduler/raw/501a4006f7a86c1086090605387894b46761327f/dolphinscheduler-alert/src/main/java/org/apache/dolphinscheduler/alert/manager/EmailManager.java",
                "sha": "047ee8bfedade31b5891daa1fd8d8e472f82bcab",
                "status": "modified"
            },
            {
                "additions": 3,
                "blob_url": "https://github.com/apache/incubator-dolphinscheduler/blob/501a4006f7a86c1086090605387894b46761327f/dolphinscheduler-alert/src/main/java/org/apache/dolphinscheduler/alert/manager/EnterpriseWeChatManager.java",
                "changes": 4,
                "contents_url": "https://api.github.com/repos/apache/incubator-dolphinscheduler/contents/dolphinscheduler-alert/src/main/java/org/apache/dolphinscheduler/alert/manager/EnterpriseWeChatManager.java?ref=501a4006f7a86c1086090605387894b46761327f",
                "deletions": 1,
                "filename": "dolphinscheduler-alert/src/main/java/org/apache/dolphinscheduler/alert/manager/EnterpriseWeChatManager.java",
                "patch": "@@ -35,7 +35,9 @@\n     private static final Logger logger = LoggerFactory.getLogger(MsgManager.class);\n     /**\n      * Enterprise We Chat send\n-     * @param alert\n+     * @param alert the alert\n+     * @param token the token\n+     * @return the send result\n      */\n     public Map<String,Object> send(Alert alert, String token){\n         Map<String,Object> retMap = new HashMap<>();",
                "raw_url": "https://github.com/apache/incubator-dolphinscheduler/raw/501a4006f7a86c1086090605387894b46761327f/dolphinscheduler-alert/src/main/java/org/apache/dolphinscheduler/alert/manager/EnterpriseWeChatManager.java",
                "sha": "510d73b9f78dbaa95093608955cfaee25ab43537",
                "status": "modified"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/incubator-dolphinscheduler/blob/501a4006f7a86c1086090605387894b46761327f/dolphinscheduler-alert/src/main/java/org/apache/dolphinscheduler/alert/manager/MsgManager.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/incubator-dolphinscheduler/contents/dolphinscheduler-alert/src/main/java/org/apache/dolphinscheduler/alert/manager/MsgManager.java?ref=501a4006f7a86c1086090605387894b46761327f",
                "deletions": 1,
                "filename": "dolphinscheduler-alert/src/main/java/org/apache/dolphinscheduler/alert/manager/MsgManager.java",
                "patch": "@@ -28,7 +28,7 @@\n     private static final Logger logger = LoggerFactory.getLogger(MsgManager.class);\n     /**\n      * SMS send\n-     * @param alert\n+     * @param alert the alert\n      */\n     public void send(Alert alert){\n         logger.info(\"send message {}\",alert);",
                "raw_url": "https://github.com/apache/incubator-dolphinscheduler/raw/501a4006f7a86c1086090605387894b46761327f/dolphinscheduler-alert/src/main/java/org/apache/dolphinscheduler/alert/manager/MsgManager.java",
                "sha": "359492699dfc81816f8b1e86be7f5648ca09fd3d",
                "status": "modified"
            },
            {
                "additions": 25,
                "blob_url": "https://github.com/apache/incubator-dolphinscheduler/blob/501a4006f7a86c1086090605387894b46761327f/dolphinscheduler-alert/src/main/java/org/apache/dolphinscheduler/alert/utils/EnterpriseWeChatUtils.java",
                "changes": 50,
                "contents_url": "https://api.github.com/repos/apache/incubator-dolphinscheduler/contents/dolphinscheduler-alert/src/main/java/org/apache/dolphinscheduler/alert/utils/EnterpriseWeChatUtils.java?ref=501a4006f7a86c1086090605387894b46761327f",
                "deletions": 25,
                "filename": "dolphinscheduler-alert/src/main/java/org/apache/dolphinscheduler/alert/utils/EnterpriseWeChatUtils.java",
                "patch": "@@ -80,7 +80,7 @@ public static Boolean isEnable(){\n     /**\n      * get Enterprise WeChat token info\n      * @return token string info\n-     * @throws IOException\n+     * @throws IOException the IOException\n      */\n     public static String getToken() throws IOException {\n         String resp;\n@@ -104,9 +104,9 @@ public static String getToken() throws IOException {\n \n     /**\n      * make team single Enterprise WeChat message\n-     * @param toParty\n-     * @param agentId\n-     * @param msg\n+     * @param toParty the toParty\n+     * @param agentId the agentId\n+     * @param msg the msg\n      * @return Enterprise WeChat send message\n      */\n     public static String makeTeamSendMsg(String toParty, String agentId, String msg) {\n@@ -117,9 +117,9 @@ public static String makeTeamSendMsg(String toParty, String agentId, String msg)\n \n     /**\n      * make team multi Enterprise WeChat message\n-     * @param toParty\n-     * @param agentId\n-     * @param msg\n+     * @param toParty the toParty\n+     * @param agentId the agentId\n+     * @param msg the msg\n      * @return Enterprise WeChat send message\n      */\n     public static String makeTeamSendMsg(Collection<String> toParty, String agentId, String msg) {\n@@ -131,9 +131,9 @@ public static String makeTeamSendMsg(Collection<String> toParty, String agentId,\n \n     /**\n      * make team single user message\n-     * @param toUser\n-     * @param agentId\n-     * @param msg\n+     * @param toUser the toUser\n+     * @param agentId the agentId\n+     * @param msg the msg\n      * @return Enterprise WeChat send message\n      */\n     public static String makeUserSendMsg(String toUser, String agentId, String msg) {\n@@ -144,9 +144,9 @@ public static String makeUserSendMsg(String toUser, String agentId, String msg)\n \n     /**\n      * make team multi user message\n-     * @param toUser\n-     * @param agentId\n-     * @param msg\n+     * @param toUser the toUser\n+     * @param agentId the agentId\n+     * @param msg the msg\n      * @return Enterprise WeChat send message\n      */\n     public static String makeUserSendMsg(Collection<String> toUser, String agentId, String msg) {\n@@ -158,11 +158,11 @@ public static String makeUserSendMsg(Collection<String> toUser, String agentId,\n \n     /**\n      * send Enterprise WeChat\n-     * @param charset\n-     * @param data\n-     * @param token\n+     * @param charset the charset\n+     * @param data the data\n+     * @param token the token\n      * @return Enterprise WeChat resp, demo: {\"errcode\":0,\"errmsg\":\"ok\",\"invaliduser\":\"\"}\n-     * @throws IOException\n+     * @throws IOException the IOException\n      */\n     public static String sendEnterpriseWeChat(String charset, String data, String token) throws IOException {\n         String enterpriseWeChatPushUrlReplace = enterpriseWeChatPushUrl.replaceAll(\"\\\\$token\", token);\n@@ -185,9 +185,9 @@ public static String sendEnterpriseWeChat(String charset, String data, String to\n \n     /**\n      * convert table to markdown style\n-     * @param title\n-     * @param content\n-     * @return\n+     * @param title the title\n+     * @param content the content\n+     * @return markdown table content\n      */\n     public static String markdownTable(String title,String content){\n         List<LinkedHashMap> mapItemsList = JSONUtils.toList(content, LinkedHashMap.class);\n@@ -214,9 +214,9 @@ public static String markdownTable(String title,String content){\n \n     /**\n      * convert text to markdown style\n-     * @param title\n-     * @param content\n-     * @return\n+     * @param title the title\n+     * @param content the content\n+     * @return markdown text\n      */\n     public static String markdownText(String title,String content){\n         if (StringUtils.isNotEmpty(content)){\n@@ -244,8 +244,8 @@ public static String markdownText(String title,String content){\n \n     /**\n      * Determine the mardown style based on the show type of the alert\n-     * @param alert\n-     * @return\n+     * @param alert the alert\n+     * @return the markdown alert table/text\n      */\n     public static String markdownByAlert(Alert alert){\n         String result = \"\";",
                "raw_url": "https://github.com/apache/incubator-dolphinscheduler/raw/501a4006f7a86c1086090605387894b46761327f/dolphinscheduler-alert/src/main/java/org/apache/dolphinscheduler/alert/utils/EnterpriseWeChatUtils.java",
                "sha": "a11d37f3d3ad0e3d4e85e35a8375391cd6d082c6",
                "status": "modified"
            },
            {
                "additions": 3,
                "blob_url": "https://github.com/apache/incubator-dolphinscheduler/blob/501a4006f7a86c1086090605387894b46761327f/dolphinscheduler-alert/src/main/java/org/apache/dolphinscheduler/alert/utils/ExcelUtils.java",
                "changes": 8,
                "contents_url": "https://api.github.com/repos/apache/incubator-dolphinscheduler/contents/dolphinscheduler-alert/src/main/java/org/apache/dolphinscheduler/alert/utils/ExcelUtils.java?ref=501a4006f7a86c1086090605387894b46761327f",
                "deletions": 5,
                "filename": "dolphinscheduler-alert/src/main/java/org/apache/dolphinscheduler/alert/utils/ExcelUtils.java",
                "patch": "@@ -35,11 +35,9 @@\n     private static final Logger logger = LoggerFactory.getLogger(ExcelUtils.class);\n     /**\n      * generate excel file\n-     * @param content\n-     * @param title\n-     * @param xlsFilePath\n-     * @return\n-     * @throws Exception\n+     * @param content the content\n+     * @param title the title\n+     * @param xlsFilePath the xls path\n      */\n     public static void genExcelFile(String content,String title,String xlsFilePath){\n         List<LinkedHashMap> itemsList;",
                "raw_url": "https://github.com/apache/incubator-dolphinscheduler/raw/501a4006f7a86c1086090605387894b46761327f/dolphinscheduler-alert/src/main/java/org/apache/dolphinscheduler/alert/utils/ExcelUtils.java",
                "sha": "522a1b951364b22a06e53eae90d1e2fb172b36fd",
                "status": "modified"
            },
            {
                "additions": 4,
                "blob_url": "https://github.com/apache/incubator-dolphinscheduler/blob/501a4006f7a86c1086090605387894b46761327f/dolphinscheduler-alert/src/main/java/org/apache/dolphinscheduler/alert/utils/JSONUtils.java",
                "changes": 8,
                "contents_url": "https://api.github.com/repos/apache/incubator-dolphinscheduler/contents/dolphinscheduler-alert/src/main/java/org/apache/dolphinscheduler/alert/utils/JSONUtils.java?ref=501a4006f7a86c1086090605387894b46761327f",
                "deletions": 4,
                "filename": "dolphinscheduler-alert/src/main/java/org/apache/dolphinscheduler/alert/utils/JSONUtils.java",
                "patch": "@@ -33,7 +33,7 @@\n \n   /**\n    * object to json string\n-   * @param object\n+   * @param object the object to be converted to json\n    * @return json string\n    */\n   public static String toJsonString(Object object) {\n@@ -47,10 +47,10 @@ public static String toJsonString(Object object) {\n   /**\n    * json to list\n    *\n-   * @param json\n+   * @param json the json\n    * @param clazz c\n-   * @param <T>\n-   * @return\n+   * @param <T> the generic clazz\n+   * @return the result list\n    */\n   public static <T> List<T> toList(String json, Class<T> clazz) {\n     if (StringUtils.isEmpty(json)) {",
                "raw_url": "https://github.com/apache/incubator-dolphinscheduler/raw/501a4006f7a86c1086090605387894b46761327f/dolphinscheduler-alert/src/main/java/org/apache/dolphinscheduler/alert/utils/JSONUtils.java",
                "sha": "a88574f0e79b570d68e22187bf0bdcde8ee3380e",
                "status": "modified"
            },
            {
                "additions": 45,
                "blob_url": "https://github.com/apache/incubator-dolphinscheduler/blob/501a4006f7a86c1086090605387894b46761327f/dolphinscheduler-alert/src/main/java/org/apache/dolphinscheduler/alert/utils/MailUtils.java",
                "changes": 93,
                "contents_url": "https://api.github.com/repos/apache/incubator-dolphinscheduler/contents/dolphinscheduler-alert/src/main/java/org/apache/dolphinscheduler/alert/utils/MailUtils.java?ref=501a4006f7a86c1086090605387894b46761327f",
                "deletions": 48,
                "filename": "dolphinscheduler-alert/src/main/java/org/apache/dolphinscheduler/alert/utils/MailUtils.java",
                "patch": "@@ -92,24 +92,24 @@\n \n     /**\n      * send mail to receivers\n-     *\n-     * @param receivers\n-     * @param title\n-     * @param content\n-     * @return\n+     * @param receivers the receiver list\n+     * @param title the title\n+     * @param content the content\n+     * @param showType the show type\n+     * @return the result map\n      */\n     public static Map<String,Object> sendMails(Collection<String> receivers, String title, String content,ShowType showType) {\n         return sendMails(receivers, null, title, content, showType);\n     }\n \n     /**\n      * send mail\n-     * @param receivers\n-     * @param receiversCc cc\n-     * @param title title\n-     * @param content content\n-     * @param showType mail type\n-     * @return\n+     * @param receivers the receiver list\n+     * @param receiversCc cc list\n+     * @param title the title\n+     * @param content the content\n+     * @param showType the show type\n+     * @return the send result\n      */\n     public static Map<String,Object> sendMails(Collection<String> receivers, Collection<String> receiversCc, String title, String content, ShowType showType) {\n         Map<String,Object> retMap = new HashMap<>();\n@@ -169,9 +169,9 @@\n \n     /**\n      * html table content\n-     * @param content\n-     * @param showAll\n-     * @return\n+     * @param content the content\n+     * @param showAll if show the whole content\n+     * @return the html table form\n      */\n     private static String htmlTable(String content, boolean showAll){\n         if (StringUtils.isNotEmpty(content)){\n@@ -198,7 +198,7 @@ private static String htmlTable(String content, boolean showAll){\n \n                     Map.Entry<String, String> entry = iterator.next();\n                     t.append(Constants.TH).append(entry.getKey()).append(Constants.TH_END);\n-                    cs.append(Constants.TD).append(String.valueOf(entry.getValue())).append(Constants.TD_END);\n+                    cs.append(Constants.TD).append(entry.getValue()).append(Constants.TD_END);\n \n                 }\n                 t.append(Constants.TR_END);\n@@ -218,17 +218,17 @@ private static String htmlTable(String content, boolean showAll){\n \n     /**\n      * html table content\n-     * @param content\n-     * @return\n+     * @param content the content\n+     * @return the html table form\n      */\n     private static String htmlTable(String content){\n         return htmlTable(content,true);\n     }\n \n     /**\n      * html text content\n-     * @param content\n-     * @return\n+     * @param content the content\n+     * @return text in html form\n      */\n     private static String htmlText(String content){\n \n@@ -260,9 +260,8 @@ private static String htmlText(String content){\n \n     /**\n      * send mail as Excel attachment\n-     *\n-     * @param receivers\n-     * @param title\n+     * @param receivers the receiver list\n+     * @param title the title\n      * @throws Exception\n      */\n     private static void attachment(Collection<String> receivers,Collection<String> receiversCc,String title,String content,String partContent)throws Exception{\n@@ -274,12 +273,10 @@ private static void attachment(Collection<String> receivers,Collection<String> r\n     /**\n      * get MimeMessage\n      * @param receivers\n-     * @return\n+     * @return the MimeMessage\n      * @throws MessagingException\n      */\n     private static MimeMessage getMimeMessage(Collection<String> receivers) throws MessagingException {\n-//        Security.addProvider(new com.sun.net.ssl.internal.ssl.Provider());\n-//        final String SSL_FACTORY = \"javax.net.ssl.SSLSocketFactory\";\n \n         // 1. The first step in creating mail: creating session\n         Session session = getSession();\n@@ -299,7 +296,7 @@ private static MimeMessage getMimeMessage(Collection<String> receivers) throws M\n \n     /**\n      * get session\n-     * @return\n+     * @return the new Session\n      */\n     private static Session getSession() {\n         Properties props = new Properties();\n@@ -324,12 +321,12 @@ protected PasswordAuthentication getPasswordAuthentication() {\n     }\n \n     /**\n-     *\n-     * @param receiversCc\n-     * @param title\n-     * @param content\n-     * @param partContent\n-     * @param msg\n+     * attach content\n+     * @param receiversCc the cc list\n+     * @param title the title\n+     * @param content the content\n+     * @param partContent the partContent\n+     * @param msg the message\n      * @throws MessagingException\n      * @throws IOException\n      */\n@@ -369,13 +366,13 @@ private static void attachContent(Collection<String> receiversCc, String title,\n     }\n \n     /**\n-     *\n-     * @param title\n-     * @param content\n-     * @param showType\n-     * @param retMap\n-     * @param email\n-     * @return\n+     * the string object map\n+     * @param title the title\n+     * @param content the content\n+     * @param showType the showType\n+     * @param retMap the result map\n+     * @param email the email\n+     * @return the result map\n      * @throws EmailException\n      */\n     private static Map<String, Object> getStringObjectMap(String title, String content, ShowType showType, Map<String, Object> retMap, HtmlEmail email) throws EmailException {\n@@ -403,7 +400,7 @@ private static void attachContent(Collection<String> receiversCc, String title,\n \n     /**\n      * file delete\n-     * @param file\n+     * @param file the file to delete\n      */\n     public static void deleteFile(File file){\n         if(file.exists()){\n@@ -419,21 +416,21 @@ public static void deleteFile(File file){\n \n \n     /**\n-     *\n-     * @param receivers\n-     * @param retMap\n-     * @param e\n+     * handle exception\n+     * @param receivers the receiver list\n+     * @param retMap the result map\n+     * @param e the exception\n      */\n     private static void handleException(Collection<String> receivers, Map<String, Object> retMap, Exception e) {\n         logger.error(\"Send email to {} failed\", StringUtils.join(\",\", receivers), e);\n         retMap.put(Constants.MESSAGE, \"Send email to {\" + StringUtils.join(\",\", receivers) + \"} failed\uff0c\" + e.toString());\n     }\n \n     /**\n-     *\n-     * @param title\n-     * @param content\n-     * @return\n+     * get the content of the template\n+     * @param title the title\n+     * @param content the content to retrieve\n+     * @return the content in the template or null if exception occurs\n      */\n     private static String getTemplateContent(String title,String content){\n         StringWriter out = new StringWriter();",
                "raw_url": "https://github.com/apache/incubator-dolphinscheduler/raw/501a4006f7a86c1086090605387894b46761327f/dolphinscheduler-alert/src/main/java/org/apache/dolphinscheduler/alert/utils/MailUtils.java",
                "sha": "b321a1ee3cd665932016624be4d0e52a402b4466",
                "status": "modified"
            },
            {
                "additions": 23,
                "blob_url": "https://github.com/apache/incubator-dolphinscheduler/blob/501a4006f7a86c1086090605387894b46761327f/dolphinscheduler-alert/src/main/java/org/apache/dolphinscheduler/alert/utils/PropertyUtils.java",
                "changes": 48,
                "contents_url": "https://api.github.com/repos/apache/incubator-dolphinscheduler/contents/dolphinscheduler-alert/src/main/java/org/apache/dolphinscheduler/alert/utils/PropertyUtils.java?ref=501a4006f7a86c1086090605387894b46761327f",
                "deletions": 25,
                "filename": "dolphinscheduler-alert/src/main/java/org/apache/dolphinscheduler/alert/utils/PropertyUtils.java",
                "patch": "@@ -68,9 +68,8 @@ private void init(){\n \n     /**\n      * get property value\n-     *\n      * @param key property name\n-     * @return\n+     * @return the value\n      */\n     public static String getString(String key) {\n         return properties.getProperty(key);\n@@ -87,10 +86,10 @@ public static int getInt(String key) {\n     }\n \n     /**\n-     *\n-     * @param key\n-     * @param defaultValue\n-     * @return\n+     * get int value\n+     * @param key the key\n+     * @param defaultValue the default value\n+     * @return the value related the key or the default value if the key not existed\n      */\n     public static int getInt(String key, int defaultValue) {\n         String value = getString(key);\n@@ -108,9 +107,8 @@ public static int getInt(String key, int defaultValue) {\n \n     /**\n      * get property value\n-     *\n      * @param key property name\n-     * @return\n+     * @return  the boolean result value\n      */\n     public static Boolean getBoolean(String key) {\n         String value = properties.getProperty(key.trim());\n@@ -122,19 +120,19 @@ public static Boolean getBoolean(String key) {\n     }\n \n     /**\n-     *\n-     * @param key\n-     * @return\n+     * get long value\n+     * @param key the key\n+     * @return if the value not existed, return -1, or will return the related value\n      */\n     public static long getLong(String key) {\n         return getLong(key,-1);\n     }\n \n     /**\n-     *\n-     * @param key\n-     * @param defaultVal\n-     * @return\n+     * get long value\n+     * @param key the key\n+     * @param defaultVal the default value\n+     * @return the value related the key or the default value if the key not existed\n      */\n     public static long getLong(String key, long defaultVal) {\n         String val = getString(key);\n@@ -143,10 +141,10 @@ public static long getLong(String key, long defaultVal) {\n \n \n     /**\n-     *\n-     * @param key\n-     * @param defaultVal\n-     * @return\n+     * get double value\n+     * @param key the key\n+     * @param defaultVal the default value\n+     * @return the value related the key or the default value if the key not existed\n      */\n     public double getDouble(String key, double defaultVal) {\n         String val = getString(key);\n@@ -158,7 +156,7 @@ public double getDouble(String key, double defaultVal) {\n      *  get array\n      * @param key       property name\n      * @param splitStr  separator\n-     * @return\n+     * @return the result array\n      */\n     public static String[] getArray(String key, String splitStr) {\n         String value = getString(key);\n@@ -175,11 +173,11 @@ public double getDouble(String key, double defaultVal) {\n     }\n \n     /**\n-     *\n-     * @param key\n-     * @param type\n-     * @param defaultValue\n-     * @param <T>\n+     * get enum\n+     * @param key the key\n+     * @param type the class type\n+     * @param defaultValue the default value\n+     * @param <T> the generic class type\n      * @return  get enum value\n      */\n     public <T extends Enum<T>> T getEnum(String key, Class<T> type,",
                "raw_url": "https://github.com/apache/incubator-dolphinscheduler/raw/501a4006f7a86c1086090605387894b46761327f/dolphinscheduler-alert/src/main/java/org/apache/dolphinscheduler/alert/utils/PropertyUtils.java",
                "sha": "954ae23655dd0820b5ffd5a6d3f828e5734758f1",
                "status": "modified"
            }
        ],
        "message": "add more message for java-doc (#1209)\n\n* move updateTaskState into try/catch block in case of exception\r\n\r\n* fix NPE\r\n\r\n* using conf.getInt instead of getString\r\n\r\n* for AbstractZKClient, remove the log, for it will print the same log message in createZNodePath.\r\nfor AlertDao, correct the spelling.\r\n\r\n* duplicate\r\n\r\n* refactor getTaskWorkerGroupId\r\n\r\n* add friendly log\r\n\r\n* update hearbeat thread num = 1\r\n\r\n* fix the bug when worker execute task using queue. and remove checking Tenant user anymore in TaskScheduleThread\r\n\r\n* 1. move verifyTaskInstanceIsNull after taskInstance\r\n2. keep verifyTenantIsNull/verifyTaskInstanceIsNull clean and readable\r\n\r\n* fix the message\r\n\r\n* delete before check to avoid KeeperException$NoNodeException\r\n\r\n* fix the message\r\n\r\n* check processInstance state before delete tenant\r\n\r\n* check processInstance state before delete worker group\r\n\r\n* refactor\r\n\r\n* merge api constants into common constatns\r\n\r\n* update the resource perm\r\n\r\n* update the dataSource perm\r\n\r\n* fix CheckUtils.checkUserParams method\r\n\r\n* update AlertGroupService, extends from BaseService, remove duplicate methods\r\n\r\n* refactor\r\n\r\n* modify method name\r\n\r\n* add hasProjectAndPerm method\r\n\r\n* using checkProject instead of getResultStatus\r\n\r\n* delete checkAuth method, using hasProjectAndPerm instead.\r\n\r\n* correct spelling\r\n\r\n* add transactional for deleteWorkerGroupById\r\n\r\n* add Transactional for deleteProcessInstanceById method\r\n\r\n* change sqlSessionTemplate singleton\r\n\r\n* change sqlSessionTemplate singleton and reformat code\r\n\r\n* fix unsuitable error message\r\n\r\n* update shutdownhook methods\r\n\r\n* fix worker log bug\r\n\r\n* fix api server debug mode bug\r\n\r\n* upgrade zk version\r\n\r\n* delete this line ,for zkClient.close() will do the whole thing\r\n\r\n* fix master server shutdown error\r\n\r\n* degrade zk version and add FourLetterWordMain class\r\n\r\n* fix PathChildrenCache not close\r\n\r\n* add Transactional for createSession method\r\n\r\n* add more message for java-doc",
        "parent": "https://github.com/apache/incubator-dolphinscheduler/commit/3a3d2e45f97937ea269627bb3cf13e580e2f0c8a",
        "repo": "incubator-dolphinscheduler",
        "unit_tests": [
            "PropertyUtilsTest.java"
        ]
    },
    "incubator-dolphinscheduler_5212bab": {
        "bug_id": "incubator-dolphinscheduler_5212bab",
        "commit": "https://github.com/apache/incubator-dolphinscheduler/commit/5212bab06166cc15c6b3d319e583a84b3b7870e9",
        "file": [
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/incubator-dolphinscheduler/blob/5212bab06166cc15c6b3d319e583a84b3b7870e9/dolphinscheduler-api/src/main/java/org/apache/dolphinscheduler/api/controller/ExecutorController.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/incubator-dolphinscheduler/contents/dolphinscheduler-api/src/main/java/org/apache/dolphinscheduler/api/controller/ExecutorController.java?ref=5212bab06166cc15c6b3d319e583a84b3b7870e9",
                "deletions": 1,
                "filename": "dolphinscheduler-api/src/main/java/org/apache/dolphinscheduler/api/controller/ExecutorController.java",
                "patch": "@@ -95,7 +95,7 @@ public Result startProcessInstance(@ApiIgnore @RequestAttribute(value = Constant\n                     workerGroupId, timeout);\n \n             if (timeout == null) {\n-                timeout = org.apache.dolphinscheduler.common.Constants.MAX_TASK_TIMEOUT;\n+                timeout = Constants.MAX_TASK_TIMEOUT;\n             }\n \n             Map<String, Object> result = execService.execProcessInstance(loginUser, projectName, processDefinitionId, scheduleTime, execType, failureStrategy,",
                "raw_url": "https://github.com/apache/incubator-dolphinscheduler/raw/5212bab06166cc15c6b3d319e583a84b3b7870e9/dolphinscheduler-api/src/main/java/org/apache/dolphinscheduler/api/controller/ExecutorController.java",
                "sha": "12b0be04cbda9893f448b659bcb65f50dfe8832f",
                "status": "modified"
            },
            {
                "additions": 6,
                "blob_url": "https://github.com/apache/incubator-dolphinscheduler/blob/5212bab06166cc15c6b3d319e583a84b3b7870e9/dolphinscheduler-api/src/main/java/org/apache/dolphinscheduler/api/service/UsersService.java",
                "changes": 10,
                "contents_url": "https://api.github.com/repos/apache/incubator-dolphinscheduler/contents/dolphinscheduler-api/src/main/java/org/apache/dolphinscheduler/api/service/UsersService.java?ref=5212bab06166cc15c6b3d319e583a84b3b7870e9",
                "deletions": 4,
                "filename": "dolphinscheduler-api/src/main/java/org/apache/dolphinscheduler/api/service/UsersService.java",
                "patch": "@@ -94,15 +94,17 @@\n                                           String queue) throws Exception {\n \n         Map<String, Object> result = new HashMap<>(5);\n-        result = CheckUtils.checkUserParams(userName, userPassword, email, phone);\n-        if (result.get(Constants.STATUS) != Status.SUCCESS) {\n+        if (!CheckUtils.checkUserParams(userName, userPassword, email, phone)) {\n+            putMsg(result, Status.REQUEST_PARAMS_NOT_VALID_ERROR);\n             return result;\n         }\n-        if (check(result, !isAdmin(loginUser), Status.USER_NO_OPERATION_PERM)) {\n+        if (!isAdmin(loginUser)) {\n+            putMsg(result, Status.USER_NO_OPERATION_PERM);\n             return result;\n         }\n \n-        if (check(result, checkTenant(tenantId), Status.TENANT_NOT_EXIST)) {\n+        if (checkTenant(tenantId)) {\n+            putMsg(result, Status.TENANT_NOT_EXIST);\n             return result;\n         }\n ",
                "raw_url": "https://github.com/apache/incubator-dolphinscheduler/raw/5212bab06166cc15c6b3d319e583a84b3b7870e9/dolphinscheduler-api/src/main/java/org/apache/dolphinscheduler/api/service/UsersService.java",
                "sha": "8b417c5a17a97531c67a19bccc4ab5792fd26dff",
                "status": "modified"
            },
            {
                "additions": 7,
                "blob_url": "https://github.com/apache/incubator-dolphinscheduler/blob/5212bab06166cc15c6b3d319e583a84b3b7870e9/dolphinscheduler-api/src/main/java/org/apache/dolphinscheduler/api/utils/CheckUtils.java",
                "changes": 27,
                "contents_url": "https://api.github.com/repos/apache/incubator-dolphinscheduler/contents/dolphinscheduler-api/src/main/java/org/apache/dolphinscheduler/api/utils/CheckUtils.java?ref=5212bab06166cc15c6b3d319e583a84b3b7870e9",
                "deletions": 20,
                "filename": "dolphinscheduler-api/src/main/java/org/apache/dolphinscheduler/api/utils/CheckUtils.java",
                "patch": "@@ -42,7 +42,7 @@\n    * @param userName\n    */\n   public static boolean checkUserName(String userName) {\n-    return regexChecks(userName, org.apache.dolphinscheduler.common.Constants.REGEX_USER_NAME);\n+    return regexChecks(userName, Constants.REGEX_USER_NAME);\n   }\n \n   /**\n@@ -51,7 +51,7 @@ public static boolean checkUserName(String userName) {\n    * @param email\n    */\n   public static boolean checkEmail(String email) {\n-    return email.length() > 5 && email.length() <= 40 && regexChecks(email, org.apache.dolphinscheduler.common.Constants.REGEX_MAIL_NAME) ;\n+    return email.length() > 5 && email.length() <= 40 && regexChecks(email, Constants.REGEX_MAIL_NAME) ;\n   }\n \n   /**\n@@ -123,26 +123,13 @@ public static boolean checkTaskNodeParameters(String parameter, String taskType)\n    * @param phone\n    * @return\n    */\n-  public static Map<String, Object> checkUserParams(String userName, String password, String email, String phone){\n-      Map<String, Object> result = new HashMap<>();\n-     try{\n-       CheckUtils.checkUserName(userName);\n-       CheckUtils.checkEmail(email);\n-       CheckUtils.checkPassword(password);\n-       CheckUtils.checkPhone(phone);\n-       result.put(Constants.STATUS, Status.SUCCESS);\n-       result.put(Constants.MSG, Status.SUCCESS.getMsg());\n-     }catch (Exception e){\n-       result.put(Constants.STATUS, Status.REQUEST_PARAMS_NOT_VALID_ERROR);\n-       result.put(Constants.MSG, e.getMessage());\n-     }\n-      return result;\n+  public static boolean checkUserParams(String userName, String password, String email, String phone){\n+    return CheckUtils.checkUserName(userName) &&\n+            CheckUtils.checkEmail(email) &&\n+            CheckUtils.checkPassword(password) &&\n+            CheckUtils.checkPhone(phone);\n   }\n \n-\n-\n-\n-\n   /**\n    * \u6b63\u5219\u5339\u914d\n    *",
                "raw_url": "https://github.com/apache/incubator-dolphinscheduler/raw/5212bab06166cc15c6b3d319e583a84b3b7870e9/dolphinscheduler-api/src/main/java/org/apache/dolphinscheduler/api/utils/CheckUtils.java",
                "sha": "1e37b884782f33957b0859357a5585569e3491c5",
                "status": "modified"
            }
        ],
        "message": "fix CheckUtils.checkUserParams method (#1090)\n\n* move updateTaskState into try/catch block in case of exception\r\n\r\n* fix NPE\r\n\r\n* using conf.getInt instead of getString\r\n\r\n* for AbstractZKClient, remove the log, for it will print the same log message in createZNodePath.\r\nfor AlertDao, correct the spelling.\r\n\r\n* duplicate\r\n\r\n* refactor getTaskWorkerGroupId\r\n\r\n* add friendly log\r\n\r\n* update hearbeat thread num = 1\r\n\r\n* fix the bug when worker execute task using queue. and remove checking Tenant user anymore in TaskScheduleThread\r\n\r\n* 1. move verifyTaskInstanceIsNull after taskInstance\r\n2. keep verifyTenantIsNull/verifyTaskInstanceIsNull clean and readable\r\n\r\n* fix the message\r\n\r\n* delete before check to avoid KeeperException$NoNodeException\r\n\r\n* fix the message\r\n\r\n* check processInstance state before delete tenant\r\n\r\n* check processInstance state before delete worker group\r\n\r\n* refactor\r\n\r\n* merge api constants into common constatns\r\n\r\n* update the resource perm\r\n\r\n* update the dataSource perm\r\n\r\n* fix CheckUtils.checkUserParams method",
        "parent": "https://github.com/apache/incubator-dolphinscheduler/commit/5fcfb6c66184b45cd655d01d263c513afd9390c0",
        "repo": "incubator-dolphinscheduler",
        "unit_tests": [
            "CheckUtilsTest.java"
        ]
    },
    "incubator-dolphinscheduler_5fcfb6c": {
        "bug_id": "incubator-dolphinscheduler_5fcfb6c",
        "commit": "https://github.com/apache/incubator-dolphinscheduler/commit/5fcfb6c66184b45cd655d01d263c513afd9390c0",
        "file": [
            {
                "additions": 13,
                "blob_url": "https://github.com/apache/incubator-dolphinscheduler/blob/5fcfb6c66184b45cd655d01d263c513afd9390c0/dolphinscheduler-api/src/main/java/org/apache/dolphinscheduler/api/service/DataSourceService.java",
                "changes": 20,
                "contents_url": "https://api.github.com/repos/apache/incubator-dolphinscheduler/contents/dolphinscheduler-api/src/main/java/org/apache/dolphinscheduler/api/service/DataSourceService.java?ref=5fcfb6c66184b45cd655d01d263c513afd9390c0",
                "deletions": 7,
                "filename": "dolphinscheduler-api/src/main/java/org/apache/dolphinscheduler/api/service/DataSourceService.java",
                "patch": "@@ -65,7 +65,7 @@\n     public static final String PRINCIPAL = \"principal\";\n     public static final String DATABASE = \"database\";\n     public static final String USER_NAME = \"userName\";\n-    public static final String PASSWORD = org.apache.dolphinscheduler.common.Constants.PASSWORD;\n+    public static final String PASSWORD = Constants.PASSWORD;\n     public static final String OTHER = \"other\";\n \n \n@@ -90,7 +90,8 @@\n \n         Map<String, Object> result = new HashMap<>(5);\n         // check name can use or not\n-        if (checkName(name, result)) {\n+        if (checkName(name)) {\n+            putMsg(result, Status.DATASOURCE_EXIST);\n             return result;\n         }\n         Boolean isConnection = checkConnection(type, parameter);\n@@ -146,8 +147,14 @@\n             return result;\n         }\n \n+        if(loginUser.getId() != dataSource.getUserId() || loginUser.getUserType() != UserType.ADMIN_USER){\n+            putMsg(result, Status.USER_NO_OPERATION_PERM);\n+            return result;\n+        }\n+\n         //check name can use or not\n-        if(!name.trim().equals(dataSource.getName()) && checkName(name, result)){\n+        if(!name.trim().equals(dataSource.getName()) && checkName(name)){\n+            putMsg(result, Status.DATASOURCE_EXIST);\n             return result;\n         }\n \n@@ -170,10 +177,9 @@\n         return result;\n     }\n \n-    private boolean checkName(String name, Map<String, Object> result) {\n+    private boolean checkName(String name) {\n         List<DataSource> queryDataSource = dataSourceMapper.queryDataSourceByName(name.trim());\n         if (queryDataSource != null && queryDataSource.size() > 0) {\n-            putMsg(result, Status.DATASOURCE_EXIST);\n             return true;\n         }\n         return false;\n@@ -321,7 +327,7 @@ private void handlePasswd(List<DataSource> dataSourceList) {\n \n             String connectionParams  = dataSource.getConnectionParams();\n             JSONObject  object = JSONObject.parseObject(connectionParams);\n-            object.put(org.apache.dolphinscheduler.common.Constants.PASSWORD, org.apache.dolphinscheduler.common.Constants.XXXXXX);\n+            object.put(Constants.PASSWORD, Constants.XXXXXX);\n             dataSource.setConnectionParams(JSONUtils.toJson(object));\n \n         }\n@@ -587,7 +593,7 @@ public Result delete(User loginUser, int datasourceId) {\n                 putMsg(result, Status.RESOURCE_NOT_EXIST);\n                 return result;\n             }\n-            if(loginUser.getId() != dataSource.getUserId() && loginUser.getUserType() != UserType.ADMIN_USER){\n+            if(loginUser.getId() != dataSource.getUserId() || loginUser.getUserType() != UserType.ADMIN_USER){\n                 putMsg(result, Status.USER_NO_OPERATION_PERM);\n                 return result;\n             }",
                "raw_url": "https://github.com/apache/incubator-dolphinscheduler/raw/5fcfb6c66184b45cd655d01d263c513afd9390c0/dolphinscheduler-api/src/main/java/org/apache/dolphinscheduler/api/service/DataSourceService.java",
                "sha": "f99bef8078b16ca8bc15f041cf476f14cfd38ae6",
                "status": "modified"
            }
        ],
        "message": "update the dataSource perm (#1089)\n\n* move updateTaskState into try/catch block in case of exception\r\n\r\n* fix NPE\r\n\r\n* using conf.getInt instead of getString\r\n\r\n* for AbstractZKClient, remove the log, for it will print the same log message in createZNodePath.\r\nfor AlertDao, correct the spelling.\r\n\r\n* duplicate\r\n\r\n* refactor getTaskWorkerGroupId\r\n\r\n* add friendly log\r\n\r\n* update hearbeat thread num = 1\r\n\r\n* fix the bug when worker execute task using queue. and remove checking Tenant user anymore in TaskScheduleThread\r\n\r\n* 1. move verifyTaskInstanceIsNull after taskInstance\r\n2. keep verifyTenantIsNull/verifyTaskInstanceIsNull clean and readable\r\n\r\n* fix the message\r\n\r\n* delete before check to avoid KeeperException$NoNodeException\r\n\r\n* fix the message\r\n\r\n* check processInstance state before delete tenant\r\n\r\n* check processInstance state before delete worker group\r\n\r\n* refactor\r\n\r\n* merge api constants into common constatns\r\n\r\n* update the resource perm\r\n\r\n* update the dataSource perm",
        "parent": "https://github.com/apache/incubator-dolphinscheduler/commit/e6bbaa190f67dba132ac01c16ac61c6ed72690da",
        "repo": "incubator-dolphinscheduler",
        "unit_tests": [
            "DataSourceServiceTest.java"
        ]
    },
    "incubator-dolphinscheduler_6b0f9b7": {
        "bug_id": "incubator-dolphinscheduler_6b0f9b7",
        "commit": "https://github.com/apache/incubator-dolphinscheduler/commit/6b0f9b7b2157de1cd48b7801164cf5d89da5f5d2",
        "file": [
            {
                "additions": 17,
                "blob_url": "https://github.com/apache/incubator-dolphinscheduler/blob/6b0f9b7b2157de1cd48b7801164cf5d89da5f5d2/dolphinscheduler-api/src/main/java/org/apache/dolphinscheduler/api/service/SchedulerService.java",
                "changes": 50,
                "contents_url": "https://api.github.com/repos/apache/incubator-dolphinscheduler/contents/dolphinscheduler-api/src/main/java/org/apache/dolphinscheduler/api/service/SchedulerService.java?ref=6b0f9b7b2157de1cd48b7801164cf5d89da5f5d2",
                "deletions": 33,
                "filename": "dolphinscheduler-api/src/main/java/org/apache/dolphinscheduler/api/service/SchedulerService.java",
                "patch": "@@ -104,9 +104,9 @@\n         Project project = projectMapper.queryByName(projectName);\n \n         // check project auth\n-        Map<String, Object> checkResult = checkAuth(loginUser, projectName, project);\n-        if (checkResult != null) {\n-            return checkResult;\n+        boolean hasProjectAndPerm = projectService.hasProjectAndPerm(loginUser, project, result);\n+        if (!hasProjectAndPerm) {\n+            return result;\n         }\n \n         // check work flow define release state\n@@ -186,9 +186,9 @@\n         Project project = projectMapper.queryByName(projectName);\n \n         // check project auth\n-        Map<String, Object> checkResult = checkAuth(loginUser, projectName, project);\n-        if (checkResult != null) {\n-            return checkResult;\n+        boolean hasProjectAndPerm = projectService.hasProjectAndPerm(loginUser, project, result);\n+        if (!hasProjectAndPerm) {\n+            return result;\n         }\n \n         // check schedule exists\n@@ -276,9 +276,10 @@\n         Map<String, Object> result = new HashMap<String, Object>(5);\n \n         Project project = projectMapper.queryByName(projectName);\n-        Map<String, Object> checkResult = checkAuth(loginUser, projectName, project);\n-        if (checkResult != null) {\n-            return checkResult;\n+        // check project auth\n+        boolean hasProjectAndPerm = projectService.hasProjectAndPerm(loginUser, project, result);\n+        if (!hasProjectAndPerm) {\n+            return result;\n         }\n \n         // check schedule exists\n@@ -389,9 +390,9 @@\n         Project project = projectMapper.queryByName(projectName);\n \n         // check project auth\n-        Map<String, Object> checkResult = checkAuth(loginUser, projectName, project);\n-        if (checkResult != null) {\n-            return checkResult;\n+        boolean hasProjectAndPerm = projectService.hasProjectAndPerm(loginUser, project, result);\n+        if (!hasProjectAndPerm) {\n+            return result;\n         }\n \n         ProcessDefinition processDefinition = processDao.findProcessDefineById(processDefineId);\n@@ -426,9 +427,9 @@\n         Project project = projectMapper.queryByName(projectName);\n \n         // check project auth\n-        Map<String, Object> checkResult = checkAuth(loginUser, projectName, project);\n-        if (checkResult != null) {\n-            return checkResult;\n+        boolean hasProjectAndPerm = projectService.hasProjectAndPerm(loginUser, project, result);\n+        if (!hasProjectAndPerm) {\n+            return result;\n         }\n \n         List<Schedule> schedules = scheduleMapper.querySchedulerListByProjectName(projectName);\n@@ -500,23 +501,6 @@ private boolean checkValid(Map<String, Object> result, boolean bool, Status stat\n         return false;\n     }\n \n-    /**\n-     *\n-     * @param loginUser\n-     * @param projectName\n-     * @param project\n-     * @return\n-     */\n-    private Map<String, Object> checkAuth(User loginUser, String projectName, Project project) {\n-        // check project auth\n-        Map<String, Object> checkResult = projectService.checkProjectAndAuth(loginUser, project, projectName);\n-        Status resultEnum = (Status) checkResult.get(Constants.STATUS);\n-        if (resultEnum != Status.SUCCESS) {\n-            return checkResult;\n-        }\n-        return null;\n-    }\n-\n     /**\n      * delete schedule by id\n      *\n@@ -589,7 +573,7 @@ private boolean checkValid(Map<String, Object> result, boolean bool, Status stat\n             return result;\n         }\n         List<Date> selfFireDateList = CronUtils.getSelfFireDateList(startTime, endTime,cronExpression);\n-        result.put(Constants.DATA_LIST, selfFireDateList.stream().map(t -> DateUtils.dateToString(t)).limit(org.apache.dolphinscheduler.common.Constants.PREVIEW_SCHEDULE_EXECUTE_COUNT));\n+        result.put(Constants.DATA_LIST, selfFireDateList.stream().map(t -> DateUtils.dateToString(t)).limit(Constants.PREVIEW_SCHEDULE_EXECUTE_COUNT));\n         putMsg(result, Status.SUCCESS);\n         return result;\n     }",
                "raw_url": "https://github.com/apache/incubator-dolphinscheduler/raw/6b0f9b7b2157de1cd48b7801164cf5d89da5f5d2/dolphinscheduler-api/src/main/java/org/apache/dolphinscheduler/api/service/SchedulerService.java",
                "sha": "317b40e58765e1f2b73e85ca826c8865aaf5d0df",
                "status": "modified"
            }
        ],
        "message": "delete checkAuth method, using hasProjectAndPerm instead. (#1109)\n\n* move updateTaskState into try/catch block in case of exception\r\n\r\n* fix NPE\r\n\r\n* using conf.getInt instead of getString\r\n\r\n* for AbstractZKClient, remove the log, for it will print the same log message in createZNodePath.\r\nfor AlertDao, correct the spelling.\r\n\r\n* duplicate\r\n\r\n* refactor getTaskWorkerGroupId\r\n\r\n* add friendly log\r\n\r\n* update hearbeat thread num = 1\r\n\r\n* fix the bug when worker execute task using queue. and remove checking Tenant user anymore in TaskScheduleThread\r\n\r\n* 1. move verifyTaskInstanceIsNull after taskInstance\r\n2. keep verifyTenantIsNull/verifyTaskInstanceIsNull clean and readable\r\n\r\n* fix the message\r\n\r\n* delete before check to avoid KeeperException$NoNodeException\r\n\r\n* fix the message\r\n\r\n* check processInstance state before delete tenant\r\n\r\n* check processInstance state before delete worker group\r\n\r\n* refactor\r\n\r\n* merge api constants into common constatns\r\n\r\n* update the resource perm\r\n\r\n* update the dataSource perm\r\n\r\n* fix CheckUtils.checkUserParams method\r\n\r\n* update AlertGroupService, extends from BaseService, remove duplicate methods\r\n\r\n* refactor\r\n\r\n* modify method name\r\n\r\n* add hasProjectAndPerm method\r\n\r\n* using checkProject instead of getResultStatus\r\n\r\n* delete checkAuth method, using hasProjectAndPerm instead.",
        "parent": "https://github.com/apache/incubator-dolphinscheduler/commit/4275fe32db18820968afdb583a17739f22aa227e",
        "repo": "incubator-dolphinscheduler",
        "unit_tests": [
            "SchedulerServiceTest.java"
        ]
    },
    "incubator-dolphinscheduler_c8ee405": {
        "bug_id": "incubator-dolphinscheduler_c8ee405",
        "commit": "https://github.com/apache/incubator-dolphinscheduler/commit/c8ee40542614fee71d6a846eadafb5d7c99da18e",
        "file": [
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/incubator-dolphinscheduler/blob/c8ee40542614fee71d6a846eadafb5d7c99da18e/dolphinscheduler-api/src/main/java/org/apache/dolphinscheduler/api/enums/Status.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/incubator-dolphinscheduler/contents/dolphinscheduler-api/src/main/java/org/apache/dolphinscheduler/api/enums/Status.java?ref=c8ee40542614fee71d6a846eadafb5d7c99da18e",
                "deletions": 0,
                "filename": "dolphinscheduler-api/src/main/java/org/apache/dolphinscheduler/api/enums/Status.java",
                "patch": "@@ -168,6 +168,8 @@\n     DELETE_TENANT_BY_ID_FAIL_DEFINES(100143,\"delete tenant by id fail, for there are {0} process definitions using it\"),\n     DELETE_TENANT_BY_ID_FAIL_USERS(100144,\"delete tenant by id fail, for there are {0} users using it\"),\n \n+    DELETE_WORKER_GROUP_BY_ID_FAIL(100143,\"delete worker group by id fail, for there are {0} process instances in executing using it\"),\n+\n     UDF_FUNCTION_NOT_EXIST(20001, \"UDF function not found\"),\n     UDF_FUNCTION_EXISTS(20002, \"UDF function already exists\"),\n //    RESOURCE_EMPTY(20003, \"resource file is empty\"),",
                "raw_url": "https://github.com/apache/incubator-dolphinscheduler/raw/c8ee40542614fee71d6a846eadafb5d7c99da18e/dolphinscheduler-api/src/main/java/org/apache/dolphinscheduler/api/enums/Status.java",
                "sha": "479f38d7259e6baf092bd4b8739193379b5d3762",
                "status": "modified"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/incubator-dolphinscheduler/blob/c8ee40542614fee71d6a846eadafb5d7c99da18e/dolphinscheduler-api/src/main/java/org/apache/dolphinscheduler/api/service/TenantService.java",
                "changes": 12,
                "contents_url": "https://api.github.com/repos/apache/incubator-dolphinscheduler/contents/dolphinscheduler-api/src/main/java/org/apache/dolphinscheduler/api/service/TenantService.java?ref=c8ee40542614fee71d6a846eadafb5d7c99da18e",
                "deletions": 11,
                "filename": "dolphinscheduler-api/src/main/java/org/apache/dolphinscheduler/api/service/TenantService.java",
                "patch": "@@ -290,17 +290,7 @@\n   }\n \n   private List<ProcessInstance> getProcessInstancesByTenant(Tenant tenant) {\n-    int[] states = new int[]{\n-            ExecutionStatus.SUBMITTED_SUCCESS.ordinal(),\n-            ExecutionStatus.RUNNING_EXEUTION.ordinal(),\n-            ExecutionStatus.READY_PAUSE.ordinal(),\n-            ExecutionStatus.READY_STOP.ordinal(),\n-            ExecutionStatus.NEED_FAULT_TOLERANCE.ordinal(),\n-            ExecutionStatus.WAITTING_THREAD.ordinal(),\n-            ExecutionStatus.WAITTING_DEPEND.ordinal()\n-            };\n-\n-    return processInstanceMapper.queryByTenantIdAndStatus(tenant.getId(), states);\n+    return processInstanceMapper.queryByTenantIdAndStatus(tenant.getId(), org.apache.dolphinscheduler.common.Constants.NOT_TERMINATED_STATES);\n   }\n \n   /**",
                "raw_url": "https://github.com/apache/incubator-dolphinscheduler/raw/c8ee40542614fee71d6a846eadafb5d7c99da18e/dolphinscheduler-api/src/main/java/org/apache/dolphinscheduler/api/service/TenantService.java",
                "sha": "bdc4991953d8347b1b16b0773f2c89dd68ddec52",
                "status": "modified"
            },
            {
                "additions": 13,
                "blob_url": "https://github.com/apache/incubator-dolphinscheduler/blob/c8ee40542614fee71d6a846eadafb5d7c99da18e/dolphinscheduler-api/src/main/java/org/apache/dolphinscheduler/api/service/WorkerGroupService.java",
                "changes": 13,
                "contents_url": "https://api.github.com/repos/apache/incubator-dolphinscheduler/contents/dolphinscheduler-api/src/main/java/org/apache/dolphinscheduler/api/service/WorkerGroupService.java?ref=c8ee40542614fee71d6a846eadafb5d7c99da18e",
                "deletions": 0,
                "filename": "dolphinscheduler-api/src/main/java/org/apache/dolphinscheduler/api/service/WorkerGroupService.java",
                "patch": "@@ -19,8 +19,12 @@\n import org.apache.dolphinscheduler.api.enums.Status;\n import org.apache.dolphinscheduler.api.utils.Constants;\n import org.apache.dolphinscheduler.api.utils.PageInfo;\n+import org.apache.dolphinscheduler.common.enums.ExecutionStatus;\n+import org.apache.dolphinscheduler.common.utils.CollectionUtils;\n+import org.apache.dolphinscheduler.dao.entity.ProcessInstance;\n import org.apache.dolphinscheduler.dao.entity.User;\n import org.apache.dolphinscheduler.dao.entity.WorkerGroup;\n+import org.apache.dolphinscheduler.dao.mapper.ProcessInstanceMapper;\n import org.apache.dolphinscheduler.dao.mapper.WorkerGroupMapper;\n import com.baomidou.mybatisplus.core.metadata.IPage;\n import com.baomidou.mybatisplus.extension.plugins.pagination.Page;\n@@ -43,6 +47,9 @@\n     @Autowired\n     WorkerGroupMapper workerGroupMapper;\n \n+    @Autowired\n+    ProcessInstanceMapper processInstanceMapper;\n+\n     /**\n      * create or update a worker group\n      * @param id\n@@ -142,7 +149,13 @@ private boolean checkWorkerGroupNameExists(WorkerGroup workerGroup) {\n \n         Map<String, Object> result = new HashMap<>(5);\n \n+        List<ProcessInstance> processInstances = processInstanceMapper.queryByWorkerGroupIdAndStatus(id, org.apache.dolphinscheduler.common.Constants.NOT_TERMINATED_STATES);\n+        if(CollectionUtils.isNotEmpty(processInstances)){\n+            putMsg(result, Status.DELETE_WORKER_GROUP_BY_ID_FAIL, processInstances.size());\n+            return result;\n+        }\n         workerGroupMapper.deleteById(id);\n+        processInstanceMapper.updateProcessInstanceByWorkerGroupId(id, org.apache.dolphinscheduler.common.Constants.DEFAULT_WORKER_ID);\n         putMsg(result, Status.SUCCESS);\n         return result;\n     }",
                "raw_url": "https://github.com/apache/incubator-dolphinscheduler/raw/c8ee40542614fee71d6a846eadafb5d7c99da18e/dolphinscheduler-api/src/main/java/org/apache/dolphinscheduler/api/service/WorkerGroupService.java",
                "sha": "80725495c77207063841bc88f126dda16c7695fb",
                "status": "modified"
            },
            {
                "additions": 10,
                "blob_url": "https://github.com/apache/incubator-dolphinscheduler/blob/c8ee40542614fee71d6a846eadafb5d7c99da18e/dolphinscheduler-common/src/main/java/org/apache/dolphinscheduler/common/Constants.java",
                "changes": 10,
                "contents_url": "https://api.github.com/repos/apache/incubator-dolphinscheduler/contents/dolphinscheduler-common/src/main/java/org/apache/dolphinscheduler/common/Constants.java?ref=c8ee40542614fee71d6a846eadafb5d7c99da18e",
                "deletions": 0,
                "filename": "dolphinscheduler-common/src/main/java/org/apache/dolphinscheduler/common/Constants.java",
                "patch": "@@ -16,6 +16,7 @@\n  */\n package org.apache.dolphinscheduler.common;\n \n+import org.apache.dolphinscheduler.common.enums.ExecutionStatus;\n import org.apache.dolphinscheduler.common.utils.OSUtils;\n \n import java.util.regex.Pattern;\n@@ -925,4 +926,13 @@\n     public static final String FLINK_MAIN_CLASS = \"-c\";\n \n \n+    public static final int[] NOT_TERMINATED_STATES = new int[]{\n+            ExecutionStatus.SUBMITTED_SUCCESS.ordinal(),\n+            ExecutionStatus.RUNNING_EXEUTION.ordinal(),\n+            ExecutionStatus.READY_PAUSE.ordinal(),\n+            ExecutionStatus.READY_STOP.ordinal(),\n+            ExecutionStatus.NEED_FAULT_TOLERANCE.ordinal(),\n+            ExecutionStatus.WAITTING_THREAD.ordinal(),\n+            ExecutionStatus.WAITTING_DEPEND.ordinal()\n+    };\n }",
                "raw_url": "https://github.com/apache/incubator-dolphinscheduler/raw/c8ee40542614fee71d6a846eadafb5d7c99da18e/dolphinscheduler-common/src/main/java/org/apache/dolphinscheduler/common/Constants.java",
                "sha": "c0977c4a47696c246c092c58fd96459092edd257",
                "status": "modified"
            },
            {
                "additions": 5,
                "blob_url": "https://github.com/apache/incubator-dolphinscheduler/blob/c8ee40542614fee71d6a846eadafb5d7c99da18e/dolphinscheduler-dao/src/main/java/org/apache/dolphinscheduler/dao/mapper/ProcessInstanceMapper.java",
                "changes": 5,
                "contents_url": "https://api.github.com/repos/apache/incubator-dolphinscheduler/contents/dolphinscheduler-dao/src/main/java/org/apache/dolphinscheduler/dao/mapper/ProcessInstanceMapper.java?ref=c8ee40542614fee71d6a846eadafb5d7c99da18e",
                "deletions": 0,
                "filename": "dolphinscheduler-dao/src/main/java/org/apache/dolphinscheduler/dao/mapper/ProcessInstanceMapper.java",
                "patch": "@@ -37,6 +37,9 @@\n     List<ProcessInstance> queryByTenantIdAndStatus(@Param(\"tenantId\") int tenantId,\n                                                @Param(\"states\") int[] states);\n \n+    List<ProcessInstance> queryByWorkerGroupIdAndStatus(@Param(\"workerGroupId\") int workerGroupId,\n+                                                   @Param(\"states\") int[] states);\n+\n     IPage<ProcessInstance> queryProcessInstanceListPaging(Page<ProcessInstance> page,\n                                                           @Param(\"projectId\") int projectId,\n                                                           @Param(\"processDefinitionId\") Integer processDefinitionId,\n@@ -55,6 +58,8 @@ int updateProcessInstanceByState(@Param(\"originState\") ExecutionStatus originSta\n \n     int updateProcessInstanceByTenantId(@Param(\"originTenantId\") int originTenantId, @Param(\"destTenantId\") int destTenantId);\n \n+    int updateProcessInstanceByWorkerGroupId(@Param(\"originWorkerGroupId\") int originWorkerGroupId, @Param(\"destWorkerGroupId\") int destWorkerGroupId);\n+\n     List<ExecuteStatusCount> countInstanceStateByUser(\n             @Param(\"startTime\") Date startTime,\n             @Param(\"endTime\") Date endTime,",
                "raw_url": "https://github.com/apache/incubator-dolphinscheduler/raw/c8ee40542614fee71d6a846eadafb5d7c99da18e/dolphinscheduler-dao/src/main/java/org/apache/dolphinscheduler/dao/mapper/ProcessInstanceMapper.java",
                "sha": "d288658b40b6f5ec8e75741230dde87f2c63ad1d",
                "status": "modified"
            },
            {
                "additions": 20,
                "blob_url": "https://github.com/apache/incubator-dolphinscheduler/blob/c8ee40542614fee71d6a846eadafb5d7c99da18e/dolphinscheduler-dao/src/main/resources/org/apache/dolphinscheduler/dao/mapper/ProcessInstanceMapper.xml",
                "changes": 20,
                "contents_url": "https://api.github.com/repos/apache/incubator-dolphinscheduler/contents/dolphinscheduler-dao/src/main/resources/org/apache/dolphinscheduler/dao/mapper/ProcessInstanceMapper.xml?ref=c8ee40542614fee71d6a846eadafb5d7c99da18e",
                "deletions": 0,
                "filename": "dolphinscheduler-dao/src/main/resources/org/apache/dolphinscheduler/dao/mapper/ProcessInstanceMapper.xml",
                "patch": "@@ -34,6 +34,20 @@\n         order by id asc\n     </select>\n \n+    <select id=\"queryByWorkerGroupIdAndStatus\" resultType=\"org.apache.dolphinscheduler.dao.entity.ProcessInstance\">\n+        select *\n+        from t_ds_process_instance\n+        where 1=1\n+        <if test=\"workerGroupId != -1\">\n+            and worker_group_id =#{workerGroupId}\n+        </if>\n+        and state in\n+        <foreach collection=\"states\" item=\"i\" open=\"(\" close=\")\" separator=\",\">\n+            #{i}\n+        </foreach>\n+        order by id asc\n+    </select>\n+\n     <select id=\"queryProcessInstanceListPaging\" resultType=\"org.apache.dolphinscheduler.dao.entity.ProcessInstance\">\n         select instance.*\n         from t_ds_process_instance instance\n@@ -81,6 +95,12 @@\n         where tenant_id = #{originTenantId}\n     </update>\n \n+    <update id=\"updateProcessInstanceByWorkerGroupId\">\n+        update t_ds_process_instance\n+        set worker_group_id = #{destWorkerGroupId}\n+        where worker_group_id = #{originWorkerGroupId}\n+    </update>\n+\n     <select id=\"countInstanceStateByUser\" resultType=\"org.apache.dolphinscheduler.dao.entity.ExecuteStatusCount\">\n         select t.state, count(0) as count\n         from t_ds_process_instance t",
                "raw_url": "https://github.com/apache/incubator-dolphinscheduler/raw/c8ee40542614fee71d6a846eadafb5d7c99da18e/dolphinscheduler-dao/src/main/resources/org/apache/dolphinscheduler/dao/mapper/ProcessInstanceMapper.xml",
                "sha": "75dc4488830b9bb95a28bf5db48290b6d5f92074",
                "status": "modified"
            }
        ],
        "message": "check processInstance state before delete worker group (#1074)\n\n* move updateTaskState into try/catch block in case of exception\r\n\r\n* fix NPE\r\n\r\n* using conf.getInt instead of getString\r\n\r\n* for AbstractZKClient, remove the log, for it will print the same log message in createZNodePath.\r\nfor AlertDao, correct the spelling.\r\n\r\n* duplicate\r\n\r\n* refactor getTaskWorkerGroupId\r\n\r\n* add friendly log\r\n\r\n* update hearbeat thread num = 1\r\n\r\n* fix the bug when worker execute task using queue. and remove checking Tenant user anymore in TaskScheduleThread\r\n\r\n* 1. move verifyTaskInstanceIsNull after taskInstance\r\n2. keep verifyTenantIsNull/verifyTaskInstanceIsNull clean and readable\r\n\r\n* fix the message\r\n\r\n* delete before check to avoid KeeperException$NoNodeException\r\n\r\n* fix the message\r\n\r\n* check processInstance state before delete tenant\r\n\r\n* check processInstance state before delete worker group\r\n\r\n* refactor",
        "parent": "https://github.com/apache/incubator-dolphinscheduler/commit/162ab42327123abf8980ba25d08d57b7a169d6c9",
        "repo": "incubator-dolphinscheduler",
        "unit_tests": [
            "ProcessInstanceMapperTest.java"
        ]
    },
    "incubator-dolphinscheduler_da10e7f": {
        "bug_id": "incubator-dolphinscheduler_da10e7f",
        "commit": "https://github.com/apache/incubator-dolphinscheduler/commit/da10e7fa8820cab9dd5387ed802e1e5bc67a33bb",
        "file": [
            {
                "additions": 101,
                "blob_url": "https://github.com/apache/incubator-dolphinscheduler/blob/da10e7fa8820cab9dd5387ed802e1e5bc67a33bb/dolphinscheduler-dao/src/main/java/org/apache/dolphinscheduler/dao/datasource/ConnectionFactory.java",
                "changes": 192,
                "contents_url": "https://api.github.com/repos/apache/incubator-dolphinscheduler/contents/dolphinscheduler-dao/src/main/java/org/apache/dolphinscheduler/dao/datasource/ConnectionFactory.java?ref=da10e7fa8820cab9dd5387ed802e1e5bc67a33bb",
                "deletions": 91,
                "filename": "dolphinscheduler-dao/src/main/java/org/apache/dolphinscheduler/dao/datasource/ConnectionFactory.java",
                "patch": "@@ -38,107 +38,117 @@\n  * data source connection factory\n  */\n public class ConnectionFactory {\n-  private static final Logger logger = LoggerFactory.getLogger(ConnectionFactory.class);\n+    private static final Logger logger = LoggerFactory.getLogger(ConnectionFactory.class);\n \n-  private static SqlSessionFactory sqlSessionFactory;\n+    private static SqlSessionFactory sqlSessionFactory;\n \n-  /**\n-   * Load configuration file\n-   */\n-  private static org.apache.commons.configuration.Configuration conf;\n+    private static SqlSessionTemplate sqlSessionTemplate;\n \n-  static {\n-    try {\n-      conf = new PropertiesConfiguration(Constants.APPLICATION_PROPERTIES);\n-    }catch (ConfigurationException e){\n-      logger.error(\"load configuration exception\",e);\n-      System.exit(1);\n+    /**\n+     * Load configuration file\n+     */\n+    private static org.apache.commons.configuration.Configuration conf;\n+\n+    static {\n+        try {\n+            conf = new PropertiesConfiguration(Constants.APPLICATION_PROPERTIES);\n+        } catch (ConfigurationException e) {\n+            logger.error(\"load configuration exception\", e);\n+            System.exit(1);\n+        }\n     }\n-  }\n-\n-  /**\n-   * get the data source\n-   */\n-  public static DruidDataSource getDataSource() {\n-\n-    DruidDataSource druidDataSource = new DruidDataSource();\n-\n-    druidDataSource.setDriverClassName(conf.getString(Constants.SPRING_DATASOURCE_DRIVER_CLASS_NAME));\n-    druidDataSource.setUrl(conf.getString(Constants.SPRING_DATASOURCE_URL));\n-    druidDataSource.setUsername(conf.getString(Constants.SPRING_DATASOURCE_USERNAME));\n-    druidDataSource.setPassword(conf.getString(Constants.SPRING_DATASOURCE_PASSWORD));\n-    druidDataSource.setValidationQuery(conf.getString(Constants.SPRING_DATASOURCE_VALIDATION_QUERY));\n-\n-    druidDataSource.setPoolPreparedStatements(conf.getBoolean(Constants.SPRING_DATASOURCE_POOL_PREPARED_STATEMENTS));\n-    druidDataSource.setTestWhileIdle(conf.getBoolean(Constants.SPRING_DATASOURCE_TEST_WHILE_IDLE));\n-    druidDataSource.setTestOnBorrow(conf.getBoolean(Constants.SPRING_DATASOURCE_TEST_ON_BORROW));\n-    druidDataSource.setTestOnReturn(conf.getBoolean(Constants.SPRING_DATASOURCE_TEST_ON_RETURN));\n-    druidDataSource.setKeepAlive(conf.getBoolean(Constants.SPRING_DATASOURCE_KEEP_ALIVE));\n-\n-    druidDataSource.setMinIdle(conf.getInt(Constants.SPRING_DATASOURCE_MIN_IDLE));\n-    druidDataSource.setMaxActive(conf.getInt(Constants.SPRING_DATASOURCE_MAX_ACTIVE));\n-    druidDataSource.setMaxWait(conf.getInt(Constants.SPRING_DATASOURCE_MAX_WAIT));\n-    druidDataSource.setMaxPoolPreparedStatementPerConnectionSize(conf.getInt(Constants.SPRING_DATASOURCE_MAX_POOL_PREPARED_STATEMENT_PER_CONNECTION_SIZE));\n-    druidDataSource.setInitialSize(conf.getInt(Constants.SPRING_DATASOURCE_INITIAL_SIZE));\n-    druidDataSource.setTimeBetweenEvictionRunsMillis(conf.getLong(Constants.SPRING_DATASOURCE_TIME_BETWEEN_EVICTION_RUNS_MILLIS));\n-    druidDataSource.setTimeBetweenConnectErrorMillis(conf.getLong(Constants.SPRING_DATASOURCE_TIME_BETWEEN_CONNECT_ERROR_MILLIS));\n-    druidDataSource.setMinEvictableIdleTimeMillis(conf.getLong(Constants.SPRING_DATASOURCE_MIN_EVICTABLE_IDLE_TIME_MILLIS));\n-    druidDataSource.setValidationQueryTimeout(conf.getInt(Constants.SPRING_DATASOURCE_VALIDATION_QUERY_TIMEOUT));\n-    //auto commit\n-    druidDataSource.setDefaultAutoCommit(conf.getBoolean(Constants.SPRING_DATASOURCE_DEFAULT_AUTO_COMMIT));\n-\n-    return druidDataSource;\n-  }\n-\n-  /**\n-   * get sql session factory\n-   */\n-  public static SqlSessionFactory getSqlSessionFactory() throws Exception {\n-    if (sqlSessionFactory == null) {\n-      synchronized (ConnectionFactory.class) {\n-        if (sqlSessionFactory == null) {\n-          DataSource dataSource = getDataSource();\n-          TransactionFactory transactionFactory = new JdbcTransactionFactory();\n \n-          Environment environment = new Environment(\"development\", transactionFactory, dataSource);\n+    /**\n+     * get the data source\n+     */\n+    public static DruidDataSource getDataSource() {\n+\n+        DruidDataSource druidDataSource = new DruidDataSource();\n+\n+        druidDataSource.setDriverClassName(conf.getString(Constants.SPRING_DATASOURCE_DRIVER_CLASS_NAME));\n+        druidDataSource.setUrl(conf.getString(Constants.SPRING_DATASOURCE_URL));\n+        druidDataSource.setUsername(conf.getString(Constants.SPRING_DATASOURCE_USERNAME));\n+        druidDataSource.setPassword(conf.getString(Constants.SPRING_DATASOURCE_PASSWORD));\n+        druidDataSource.setValidationQuery(conf.getString(Constants.SPRING_DATASOURCE_VALIDATION_QUERY));\n+\n+        druidDataSource.setPoolPreparedStatements(conf.getBoolean(Constants.SPRING_DATASOURCE_POOL_PREPARED_STATEMENTS));\n+        druidDataSource.setTestWhileIdle(conf.getBoolean(Constants.SPRING_DATASOURCE_TEST_WHILE_IDLE));\n+        druidDataSource.setTestOnBorrow(conf.getBoolean(Constants.SPRING_DATASOURCE_TEST_ON_BORROW));\n+        druidDataSource.setTestOnReturn(conf.getBoolean(Constants.SPRING_DATASOURCE_TEST_ON_RETURN));\n+        druidDataSource.setKeepAlive(conf.getBoolean(Constants.SPRING_DATASOURCE_KEEP_ALIVE));\n+\n+        druidDataSource.setMinIdle(conf.getInt(Constants.SPRING_DATASOURCE_MIN_IDLE));\n+        druidDataSource.setMaxActive(conf.getInt(Constants.SPRING_DATASOURCE_MAX_ACTIVE));\n+        druidDataSource.setMaxWait(conf.getInt(Constants.SPRING_DATASOURCE_MAX_WAIT));\n+        druidDataSource.setMaxPoolPreparedStatementPerConnectionSize(conf.getInt(Constants.SPRING_DATASOURCE_MAX_POOL_PREPARED_STATEMENT_PER_CONNECTION_SIZE));\n+        druidDataSource.setInitialSize(conf.getInt(Constants.SPRING_DATASOURCE_INITIAL_SIZE));\n+        druidDataSource.setTimeBetweenEvictionRunsMillis(conf.getLong(Constants.SPRING_DATASOURCE_TIME_BETWEEN_EVICTION_RUNS_MILLIS));\n+        druidDataSource.setTimeBetweenConnectErrorMillis(conf.getLong(Constants.SPRING_DATASOURCE_TIME_BETWEEN_CONNECT_ERROR_MILLIS));\n+        druidDataSource.setMinEvictableIdleTimeMillis(conf.getLong(Constants.SPRING_DATASOURCE_MIN_EVICTABLE_IDLE_TIME_MILLIS));\n+        druidDataSource.setValidationQueryTimeout(conf.getInt(Constants.SPRING_DATASOURCE_VALIDATION_QUERY_TIMEOUT));\n+        //auto commit\n+        druidDataSource.setDefaultAutoCommit(conf.getBoolean(Constants.SPRING_DATASOURCE_DEFAULT_AUTO_COMMIT));\n+\n+        return druidDataSource;\n+    }\n \n-          MybatisConfiguration configuration = new MybatisConfiguration();\n-          configuration.setEnvironment(environment);\n-          configuration.setLazyLoadingEnabled(true);\n-          configuration.addMappers(\"org.apache.dolphinscheduler.dao.mapper\");\n+    /**\n+     * get sql session factory\n+     */\n+    public static SqlSessionFactory getSqlSessionFactory() throws Exception {\n+        if (sqlSessionFactory == null) {\n+            synchronized (ConnectionFactory.class) {\n+                if (sqlSessionFactory == null) {\n+                    DataSource dataSource = getDataSource();\n+                    TransactionFactory transactionFactory = new JdbcTransactionFactory();\n+\n+                    Environment environment = new Environment(\"development\", transactionFactory, dataSource);\n+\n+                    MybatisConfiguration configuration = new MybatisConfiguration();\n+                    configuration.setEnvironment(environment);\n+                    configuration.setLazyLoadingEnabled(true);\n+                    configuration.addMappers(\"org.apache.dolphinscheduler.dao.mapper\");\n+\n+                    MybatisSqlSessionFactoryBean sqlSessionFactoryBean = new MybatisSqlSessionFactoryBean();\n+                    sqlSessionFactoryBean.setConfiguration(configuration);\n+                    sqlSessionFactoryBean.setDataSource(dataSource);\n+\n+                    sqlSessionFactoryBean.setTypeEnumsPackage(\"org.apache.dolphinscheduler.*.enums\");\n+                    sqlSessionFactory = sqlSessionFactoryBean.getObject();\n+                    return sqlSessionFactory;\n+                }\n+            }\n+        }\n \n-          MybatisSqlSessionFactoryBean sqlSessionFactoryBean = new MybatisSqlSessionFactoryBean();\n-          sqlSessionFactoryBean.setConfiguration(configuration);\n-          sqlSessionFactoryBean.setDataSource(dataSource);\n+        return sqlSessionFactory;\n+    }\n \n-          sqlSessionFactoryBean.setTypeEnumsPackage(\"org.apache.dolphinscheduler.*.enums\");\n-          sqlSessionFactory = sqlSessionFactoryBean.getObject();\n-          return sqlSessionFactory;\n+    /**\n+     * get sql session\n+     */\n+    public static SqlSession getSqlSession() {\n+        if (sqlSessionTemplate == null) {\n+            synchronized (ConnectionFactory.class) {\n+                if (sqlSessionTemplate == null) {\n+                    try {\n+                        sqlSessionTemplate = new SqlSessionTemplate(getSqlSessionFactory());\n+                        return sqlSessionTemplate;\n+                    } catch (Exception e) {\n+                        logger.error(\"getSqlSession error\", e);\n+                        throw new RuntimeException(e);\n+                    }\n+                }\n+            }\n         }\n-      }\n+        return sqlSessionTemplate;\n     }\n \n-    return sqlSessionFactory;\n-  }\n-\n-  /**\n-   * get sql session\n-   */\n-  public static SqlSession getSqlSession() {\n-    try {\n-      return new SqlSessionTemplate(getSqlSessionFactory());\n-    } catch (Exception e) {\n-      logger.error(e.getMessage(),e);\n-      throw new RuntimeException(\"get sqlSession failed!\");\n-    }\n-  }\n-\n-  public static <T> T getMapper(Class<T> type){\n-    try {\n-      return getSqlSession().getMapper(type);\n-    } catch (Exception e) {\n-      logger.error(e.getMessage(),e);\n-      throw new RuntimeException(\"get mapper failed!\");\n+    public static <T> T getMapper(Class<T> type) {\n+        try {\n+            return getSqlSession().getMapper(type);\n+        } catch (Exception e) {\n+            logger.error(e.getMessage(), e);\n+            throw new RuntimeException(\"get mapper failed!\");\n+        }\n     }\n-  }\n }",
                "raw_url": "https://github.com/apache/incubator-dolphinscheduler/raw/da10e7fa8820cab9dd5387ed802e1e5bc67a33bb/dolphinscheduler-dao/src/main/java/org/apache/dolphinscheduler/dao/datasource/ConnectionFactory.java",
                "sha": "5c1ec7b9a8d0c984c300f8a99041b2de38654b05",
                "status": "modified"
            }
        ],
        "message": "change sqlSessionTemplate singleton and reformat code (#1126)\n\n* move updateTaskState into try/catch block in case of exception\r\n\r\n* fix NPE\r\n\r\n* using conf.getInt instead of getString\r\n\r\n* for AbstractZKClient, remove the log, for it will print the same log message in createZNodePath.\r\nfor AlertDao, correct the spelling.\r\n\r\n* duplicate\r\n\r\n* refactor getTaskWorkerGroupId\r\n\r\n* add friendly log\r\n\r\n* update hearbeat thread num = 1\r\n\r\n* fix the bug when worker execute task using queue. and remove checking Tenant user anymore in TaskScheduleThread\r\n\r\n* 1. move verifyTaskInstanceIsNull after taskInstance\r\n2. keep verifyTenantIsNull/verifyTaskInstanceIsNull clean and readable\r\n\r\n* fix the message\r\n\r\n* delete before check to avoid KeeperException$NoNodeException\r\n\r\n* fix the message\r\n\r\n* check processInstance state before delete tenant\r\n\r\n* check processInstance state before delete worker group\r\n\r\n* refactor\r\n\r\n* merge api constants into common constatns\r\n\r\n* update the resource perm\r\n\r\n* update the dataSource perm\r\n\r\n* fix CheckUtils.checkUserParams method\r\n\r\n* update AlertGroupService, extends from BaseService, remove duplicate methods\r\n\r\n* refactor\r\n\r\n* modify method name\r\n\r\n* add hasProjectAndPerm method\r\n\r\n* using checkProject instead of getResultStatus\r\n\r\n* delete checkAuth method, using hasProjectAndPerm instead.\r\n\r\n* correct spelling\r\n\r\n* add transactional for deleteWorkerGroupById\r\n\r\n* add Transactional for deleteProcessInstanceById method\r\n\r\n* change sqlSessionTemplate singleton\r\n\r\n* change sqlSessionTemplate singleton and reformat code",
        "parent": "https://github.com/apache/incubator-dolphinscheduler/commit/1ba346e17c0c8dcc58ce81302bbdd4fa182a123f",
        "repo": "incubator-dolphinscheduler",
        "unit_tests": [
            "ConnectionFactoryTest.java"
        ]
    },
    "incubator-dolphinscheduler_e52f12b": {
        "bug_id": "incubator-dolphinscheduler_e52f12b",
        "commit": "https://github.com/apache/incubator-dolphinscheduler/commit/e52f12b19d65b164b2c18cad04be7c0e0aeea678",
        "file": [
            {
                "additions": 23,
                "blob_url": "https://github.com/apache/incubator-dolphinscheduler/blob/e52f12b19d65b164b2c18cad04be7c0e0aeea678/dolphinscheduler-api/src/main/java/org/apache/dolphinscheduler/api/service/DataAnalysisService.java",
                "changes": 66,
                "contents_url": "https://api.github.com/repos/apache/incubator-dolphinscheduler/contents/dolphinscheduler-api/src/main/java/org/apache/dolphinscheduler/api/service/DataAnalysisService.java?ref=e52f12b19d65b164b2c18cad04be7c0e0aeea678",
                "deletions": 43,
                "filename": "dolphinscheduler-api/src/main/java/org/apache/dolphinscheduler/api/service/DataAnalysisService.java",
                "patch": "@@ -43,7 +43,7 @@\n  * data analysis service\n  */\n @Service\n-public class DataAnalysisService {\n+public class DataAnalysisService extends BaseService{\n \n     private static final Logger logger = LoggerFactory.getLogger(DataAnalysisService.class);\n \n@@ -83,13 +83,9 @@\n     public Map<String,Object> countTaskStateByProject(User loginUser, int projectId, String startDate, String endDate) {\n \n         Map<String, Object> result = new HashMap<>(5);\n-        if(projectId != 0){\n-            Project project = projectMapper.selectById(projectId);\n-            result = projectService.checkProjectAndAuth(loginUser, project, String.valueOf(projectId));\n-\n-            if (getResultStatus(result)){\n-                return result;\n-            }\n+        boolean checkProject = checkProject(loginUser, projectId, result);\n+        if(!checkProject){\n+            return result;\n         }\n \n         /**\n@@ -139,13 +135,9 @@ private void putErrorRequestParamsMsg(Map<String, Object> result) {\n     public Map<String,Object> countProcessInstanceStateByProject(User loginUser, int projectId, String startDate, String endDate) {\n \n         Map<String, Object> result = new HashMap<>(5);\n-        if(projectId != 0){\n-            Project project = projectMapper.selectById(projectId);\n-            result = projectService.checkProjectAndAuth(loginUser, project, String.valueOf(projectId));\n-\n-            if (getResultStatus(result)){\n-                return result;\n-            }\n+        boolean checkProject = checkProject(loginUser, projectId, result);\n+        if(!checkProject){\n+            return result;\n         }\n \n         Date start = null;\n@@ -205,19 +197,6 @@ private void putMsg(Map<String, Object> result, Status status) {\n         result.put(Constants.MSG, status.getMsg());\n     }\n \n-    /**\n-     * get result status\n-     * @param result\n-     * @return\n-     */\n-    private boolean getResultStatus(Map<String, Object> result) {\n-        Status resultEnum = (Status) result.get(Constants.STATUS);\n-        if (resultEnum != Status.SUCCESS) {\n-            return true;\n-        }\n-        return false;\n-    }\n-\n     /**\n      * statistical command status data\n      *\n@@ -230,13 +209,9 @@ private boolean getResultStatus(Map<String, Object> result) {\n     public Map<String, Object> countCommandState(User loginUser, int projectId, String startDate, String endDate) {\n \n         Map<String, Object> result = new HashMap<>(5);\n-        if(projectId != 0){\n-            Project project = projectMapper.selectById(projectId);\n-            result = projectService.checkProjectAndAuth(loginUser, project, String.valueOf(projectId));\n-\n-            if (getResultStatus(result)){\n-                return result;\n-            }\n+        boolean checkProject = checkProject(loginUser, projectId, result);\n+        if(!checkProject){\n+            return result;\n         }\n \n         /**\n@@ -346,18 +321,15 @@ private boolean getResultStatus(Map<String, Object> result) {\n      */\n     public Map<String, Object> countQueueState(User loginUser, int projectId) {\n         Map<String, Object> result = new HashMap<>(5);\n-        if(projectId != 0){\n-            Project project = projectMapper.selectById(projectId);\n-            result = projectService.checkProjectAndAuth(loginUser, project, String.valueOf(projectId));\n \n-            if (getResultStatus(result)){\n-                return result;\n-            }\n+        boolean checkProject = checkProject(loginUser, projectId, result);\n+        if(!checkProject){\n+            return result;\n         }\n \n         ITaskQueue tasksQueue = TaskQueueFactory.getTaskQueueInstance();\n-        List<String> tasksQueueList = tasksQueue.getAllTasks(org.apache.dolphinscheduler.common.Constants.DOLPHINSCHEDULER_TASKS_QUEUE);\n-        List<String> tasksKillList = tasksQueue.getAllTasks(org.apache.dolphinscheduler.common.Constants.DOLPHINSCHEDULER_TASKS_KILL);\n+        List<String> tasksQueueList = tasksQueue.getAllTasks(Constants.DOLPHINSCHEDULER_TASKS_QUEUE);\n+        List<String> tasksKillList = tasksQueue.getAllTasks(Constants.DOLPHINSCHEDULER_TASKS_KILL);\n \n         Map<String,Integer> dataMap = new HashMap<>();\n         if (loginUser.getUserType() == UserType.ADMIN_USER){\n@@ -412,4 +384,12 @@ private boolean getResultStatus(Map<String, Object> result) {\n         putMsg(result, Status.SUCCESS);\n         return result;\n     }\n+\n+    private boolean checkProject(User loginUser, int projectId, Map<String, Object> result){\n+        if(projectId != 0){\n+            Project project = projectMapper.selectById(projectId);\n+            return projectService.hasProjectAndPerm(loginUser, project, result);\n+        }\n+        return true;\n+    }\n }",
                "raw_url": "https://github.com/apache/incubator-dolphinscheduler/raw/e52f12b19d65b164b2c18cad04be7c0e0aeea678/dolphinscheduler-api/src/main/java/org/apache/dolphinscheduler/api/service/DataAnalysisService.java",
                "sha": "e8e69397476fbed477c6ccf05deafbef199a1a9c",
                "status": "modified"
            }
        ],
        "message": "using checkProject instead of getResultStatus in DataAnalysisService class (#1099)\n\n* move updateTaskState into try/catch block in case of exception\r\n\r\n* fix NPE\r\n\r\n* using conf.getInt instead of getString\r\n\r\n* for AbstractZKClient, remove the log, for it will print the same log message in createZNodePath.\r\nfor AlertDao, correct the spelling.\r\n\r\n* duplicate\r\n\r\n* refactor getTaskWorkerGroupId\r\n\r\n* add friendly log\r\n\r\n* update hearbeat thread num = 1\r\n\r\n* fix the bug when worker execute task using queue. and remove checking Tenant user anymore in TaskScheduleThread\r\n\r\n* 1. move verifyTaskInstanceIsNull after taskInstance\r\n2. keep verifyTenantIsNull/verifyTaskInstanceIsNull clean and readable\r\n\r\n* fix the message\r\n\r\n* delete before check to avoid KeeperException$NoNodeException\r\n\r\n* fix the message\r\n\r\n* check processInstance state before delete tenant\r\n\r\n* check processInstance state before delete worker group\r\n\r\n* refactor\r\n\r\n* merge api constants into common constatns\r\n\r\n* update the resource perm\r\n\r\n* update the dataSource perm\r\n\r\n* fix CheckUtils.checkUserParams method\r\n\r\n* update AlertGroupService, extends from BaseService, remove duplicate methods\r\n\r\n* refactor\r\n\r\n* modify method name\r\n\r\n* add hasProjectAndPerm method\r\n\r\n* using checkProject instead of getResultStatus",
        "parent": "https://github.com/apache/incubator-dolphinscheduler/commit/614253bc45f834bef973e6db9c49bebf7883a144",
        "repo": "incubator-dolphinscheduler",
        "unit_tests": [
            "DataAnalysisServiceTest.java"
        ]
    },
    "incubator-dolphinscheduler_f7945bd": {
        "bug_id": "incubator-dolphinscheduler_f7945bd",
        "commit": "https://github.com/apache/incubator-dolphinscheduler/commit/f7945bdfac61c1b26542520d5842f4784b246537",
        "file": [
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/incubator-dolphinscheduler/blob/f7945bdfac61c1b26542520d5842f4784b246537/dolphinscheduler-api/src/main/java/org/apache/dolphinscheduler/api/service/ProcessInstanceService.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/incubator-dolphinscheduler/contents/dolphinscheduler-api/src/main/java/org/apache/dolphinscheduler/api/service/ProcessInstanceService.java?ref=f7945bdfac61c1b26542520d5842f4784b246537",
                "deletions": 0,
                "filename": "dolphinscheduler-api/src/main/java/org/apache/dolphinscheduler/api/service/ProcessInstanceService.java",
                "patch": "@@ -45,6 +45,7 @@\n import org.slf4j.LoggerFactory;\n import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.stereotype.Service;\n+import org.springframework.transaction.annotation.Transactional;\n \n import java.io.BufferedReader;\n import java.io.ByteArrayInputStream;\n@@ -475,6 +476,7 @@ private void AddDependResultForTaskList(List<TaskInstance> taskInstanceList) thr\n      * @param tasksQueue\n      * @return\n      */\n+    @Transactional(rollbackFor = Exception.class)\n     public Map<String, Object> deleteProcessInstanceById(User loginUser, String projectName, Integer processInstanceId,ITaskQueue tasksQueue) {\n \n         Map<String, Object> result = new HashMap<>(5);",
                "raw_url": "https://github.com/apache/incubator-dolphinscheduler/raw/f7945bdfac61c1b26542520d5842f4784b246537/dolphinscheduler-api/src/main/java/org/apache/dolphinscheduler/api/service/ProcessInstanceService.java",
                "sha": "91e6dd3abbb2d50a7517c01d1b5d3ef7f33fc173",
                "status": "modified"
            }
        ],
        "message": "add Transactional for deleteProcessInstanceById method (#1125)\n\n* move updateTaskState into try/catch block in case of exception\r\n\r\n* fix NPE\r\n\r\n* using conf.getInt instead of getString\r\n\r\n* for AbstractZKClient, remove the log, for it will print the same log message in createZNodePath.\r\nfor AlertDao, correct the spelling.\r\n\r\n* duplicate\r\n\r\n* refactor getTaskWorkerGroupId\r\n\r\n* add friendly log\r\n\r\n* update hearbeat thread num = 1\r\n\r\n* fix the bug when worker execute task using queue. and remove checking Tenant user anymore in TaskScheduleThread\r\n\r\n* 1. move verifyTaskInstanceIsNull after taskInstance\r\n2. keep verifyTenantIsNull/verifyTaskInstanceIsNull clean and readable\r\n\r\n* fix the message\r\n\r\n* delete before check to avoid KeeperException$NoNodeException\r\n\r\n* fix the message\r\n\r\n* check processInstance state before delete tenant\r\n\r\n* check processInstance state before delete worker group\r\n\r\n* refactor\r\n\r\n* merge api constants into common constatns\r\n\r\n* update the resource perm\r\n\r\n* update the dataSource perm\r\n\r\n* fix CheckUtils.checkUserParams method\r\n\r\n* update AlertGroupService, extends from BaseService, remove duplicate methods\r\n\r\n* refactor\r\n\r\n* modify method name\r\n\r\n* add hasProjectAndPerm method\r\n\r\n* using checkProject instead of getResultStatus\r\n\r\n* delete checkAuth method, using hasProjectAndPerm instead.\r\n\r\n* correct spelling\r\n\r\n* add transactional for deleteWorkerGroupById\r\n\r\n* add Transactional for deleteProcessInstanceById method",
        "parent": "https://github.com/apache/incubator-dolphinscheduler/commit/248d9311ef4614eca326963e8b1bbb6024298b3e",
        "repo": "incubator-dolphinscheduler",
        "unit_tests": [
            "ProcessInstanceServiceTest.java"
        ]
    },
    "incubator-dolphinscheduler_ff7a8bf": {
        "bug_id": "incubator-dolphinscheduler_ff7a8bf",
        "commit": "https://github.com/apache/incubator-dolphinscheduler/commit/ff7a8bf2582f0c67db483df1c082fd8d321176f7",
        "file": [
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/incubator-dolphinscheduler/blob/ff7a8bf2582f0c67db483df1c082fd8d321176f7/dolphinscheduler-dao/src/main/java/org/apache/dolphinscheduler/dao/datasource/ConnectionFactory.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/incubator-dolphinscheduler/contents/dolphinscheduler-dao/src/main/java/org/apache/dolphinscheduler/dao/datasource/ConnectionFactory.java?ref=ff7a8bf2582f0c67db483df1c082fd8d321176f7",
                "deletions": 1,
                "filename": "dolphinscheduler-dao/src/main/java/org/apache/dolphinscheduler/dao/datasource/ConnectionFactory.java",
                "patch": "@@ -51,7 +51,7 @@\n     try {\n       conf = new PropertiesConfiguration(Constants.APPLICATION_PROPERTIES);\n     }catch (ConfigurationException e){\n-      logger.error(\"load configuration excetpion\",e);\n+      logger.error(\"load configuration exception\",e);\n       System.exit(1);\n     }\n   }",
                "raw_url": "https://github.com/apache/incubator-dolphinscheduler/raw/ff7a8bf2582f0c67db483df1c082fd8d321176f7/dolphinscheduler-dao/src/main/java/org/apache/dolphinscheduler/dao/datasource/ConnectionFactory.java",
                "sha": "eb2fc6768fe09fcd0b566d0f7119de67957203b5",
                "status": "modified"
            }
        ],
        "message": "correct spelling (#1112)\n\n* move updateTaskState into try/catch block in case of exception\r\n\r\n* fix NPE\r\n\r\n* using conf.getInt instead of getString\r\n\r\n* for AbstractZKClient, remove the log, for it will print the same log message in createZNodePath.\r\nfor AlertDao, correct the spelling.\r\n\r\n* duplicate\r\n\r\n* refactor getTaskWorkerGroupId\r\n\r\n* add friendly log\r\n\r\n* update hearbeat thread num = 1\r\n\r\n* fix the bug when worker execute task using queue. and remove checking Tenant user anymore in TaskScheduleThread\r\n\r\n* 1. move verifyTaskInstanceIsNull after taskInstance\r\n2. keep verifyTenantIsNull/verifyTaskInstanceIsNull clean and readable\r\n\r\n* fix the message\r\n\r\n* delete before check to avoid KeeperException$NoNodeException\r\n\r\n* fix the message\r\n\r\n* check processInstance state before delete tenant\r\n\r\n* check processInstance state before delete worker group\r\n\r\n* refactor\r\n\r\n* merge api constants into common constatns\r\n\r\n* update the resource perm\r\n\r\n* update the dataSource perm\r\n\r\n* fix CheckUtils.checkUserParams method\r\n\r\n* update AlertGroupService, extends from BaseService, remove duplicate methods\r\n\r\n* refactor\r\n\r\n* modify method name\r\n\r\n* add hasProjectAndPerm method\r\n\r\n* using checkProject instead of getResultStatus\r\n\r\n* delete checkAuth method, using hasProjectAndPerm instead.\r\n\r\n* correct spelling",
        "parent": "https://github.com/apache/incubator-dolphinscheduler/commit/ddc4a93be172f15edc257bac7dd0e035fc167954",
        "repo": "incubator-dolphinscheduler",
        "unit_tests": [
            "ConnectionFactoryTest.java"
        ]
    }
}