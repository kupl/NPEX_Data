[
    {
        "repo": "dubbo",
        "commit": "https://github.com/apache/dubbo/commit/b2ce7b2c10d57d232582a185d0877cc404b352ea",
        "bug_id": "dubbo_b2ce7b2",
        "message": "fix telnet invoke NPE #2218 (#2273)\n\n* fix issue #2218\r\n* add some unit tests",
        "parent": "https://github.com/apache/dubbo/commit/e22ac38158becc11c4543ff9ff0bf930f79217d0",
        "patched_files": [
            "InvokeTelnetHandler.java",
            "DemoServiceImpl.java",
            "DemoService.java"
        ],
        "file": [
            {
                "status": "modified",
                "additions": 13,
                "raw_url": "https://github.com/apache/dubbo/raw/b2ce7b2c10d57d232582a185d0877cc404b352ea/dubbo-rpc/dubbo-rpc-dubbo/src/main/java/org/apache/dubbo/rpc/protocol/dubbo/telnet/InvokeTelnetHandler.java",
                "contents_url": "https://api.github.com/repos/apache/dubbo/contents/dubbo-rpc/dubbo-rpc-dubbo/src/main/java/org/apache/dubbo/rpc/protocol/dubbo/telnet/InvokeTelnetHandler.java?ref=b2ce7b2c10d57d232582a185d0877cc404b352ea",
                "filename": "dubbo-rpc/dubbo-rpc-dubbo/src/main/java/org/apache/dubbo/rpc/protocol/dubbo/telnet/InvokeTelnetHandler.java",
                "deletions": 0,
                "sha": "d149a50e45895762aeeaa5ee3290f54778b064bf",
                "blob_url": "https://github.com/apache/dubbo/blob/b2ce7b2c10d57d232582a185d0877cc404b352ea/dubbo-rpc/dubbo-rpc-dubbo/src/main/java/org/apache/dubbo/rpc/protocol/dubbo/telnet/InvokeTelnetHandler.java",
                "patch": "@@ -60,6 +60,19 @@ private static boolean isMatch(Class<?>[] types, List<Object> args) {\n         for (int i = 0; i < types.length; i++) {\n             Class<?> type = types[i];\n             Object arg = args.get(i);\n+\n+            if (arg == null) {\n+                // if the type is primitive, the method to invoke will cause NullPointerException definitely\n+                // so we can offer a specified error message to the invoker in advance and avoid unnecessary invoking\n+                if (type.isPrimitive()) {\n+                    throw new NullPointerException(String.format(\n+                            \"The type of No.%d parameter is primitive(%s), but the value passed is null.\", i + 1, type.getName()));\n+                }\n+\n+                // if the type is not primitive, we choose to believe what the invoker want is a null value\n+                continue;\n+            }\n+\n             if (ReflectUtils.isPrimitive(arg.getClass())) {\n                 if (!ReflectUtils.isPrimitive(type)) {\n                     return false;",
                "changes": 13
            },
            {
                "status": "modified",
                "additions": 2,
                "raw_url": "https://github.com/apache/dubbo/raw/b2ce7b2c10d57d232582a185d0877cc404b352ea/dubbo-rpc/dubbo-rpc-dubbo/src/test/java/org/apache/dubbo/rpc/protocol/dubbo/support/DemoService.java",
                "contents_url": "https://api.github.com/repos/apache/dubbo/contents/dubbo-rpc/dubbo-rpc-dubbo/src/test/java/org/apache/dubbo/rpc/protocol/dubbo/support/DemoService.java?ref=b2ce7b2c10d57d232582a185d0877cc404b352ea",
                "filename": "dubbo-rpc/dubbo-rpc-dubbo/src/test/java/org/apache/dubbo/rpc/protocol/dubbo/support/DemoService.java",
                "deletions": 0,
                "sha": "357b0321d360f7f6290c3210a4837d7306c1687a",
                "blob_url": "https://github.com/apache/dubbo/blob/b2ce7b2c10d57d232582a185d0877cc404b352ea/dubbo-rpc/dubbo-rpc-dubbo/src/test/java/org/apache/dubbo/rpc/protocol/dubbo/support/DemoService.java",
                "patch": "@@ -57,4 +57,6 @@\n \n     NonSerialized returnNonSerialized();\n \n+    long add(int a, long b);\n+\n }\n\\ No newline at end of file",
                "changes": 2
            },
            {
                "status": "modified",
                "additions": 5,
                "raw_url": "https://github.com/apache/dubbo/raw/b2ce7b2c10d57d232582a185d0877cc404b352ea/dubbo-rpc/dubbo-rpc-dubbo/src/test/java/org/apache/dubbo/rpc/protocol/dubbo/support/DemoServiceImpl.java",
                "contents_url": "https://api.github.com/repos/apache/dubbo/contents/dubbo-rpc/dubbo-rpc-dubbo/src/test/java/org/apache/dubbo/rpc/protocol/dubbo/support/DemoServiceImpl.java?ref=b2ce7b2c10d57d232582a185d0877cc404b352ea",
                "filename": "dubbo-rpc/dubbo-rpc-dubbo/src/test/java/org/apache/dubbo/rpc/protocol/dubbo/support/DemoServiceImpl.java",
                "deletions": 1,
                "sha": "e404af0e46cfb3372edd57455eb650b6b4052a12",
                "blob_url": "https://github.com/apache/dubbo/blob/b2ce7b2c10d57d232582a185d0877cc404b352ea/dubbo-rpc/dubbo-rpc-dubbo/src/test/java/org/apache/dubbo/rpc/protocol/dubbo/support/DemoServiceImpl.java",
                "patch": "@@ -24,7 +24,6 @@\n /**\n  * DemoServiceImpl\n  */\n-\n public class DemoServiceImpl implements DemoService {\n     public DemoServiceImpl() {\n         super();\n@@ -103,4 +102,9 @@ public void nonSerializedParameter(NonSerialized ns) {\n     public NonSerialized returnNonSerialized() {\n         return new NonSerialized();\n     }\n+\n+    public long add(int a, long b) {\n+        return a + b;\n+    }\n+\n }\n\\ No newline at end of file",
                "changes": 6
            },
            {
                "status": "modified",
                "additions": 40,
                "raw_url": "https://github.com/apache/dubbo/raw/b2ce7b2c10d57d232582a185d0877cc404b352ea/dubbo-rpc/dubbo-rpc-dubbo/src/test/java/org/apache/dubbo/rpc/protocol/dubbo/telnet/InvokerTelnetHandlerTest.java",
                "contents_url": "https://api.github.com/repos/apache/dubbo/contents/dubbo-rpc/dubbo-rpc-dubbo/src/test/java/org/apache/dubbo/rpc/protocol/dubbo/telnet/InvokerTelnetHandlerTest.java?ref=b2ce7b2c10d57d232582a185d0877cc404b352ea",
                "filename": "dubbo-rpc/dubbo-rpc-dubbo/src/test/java/org/apache/dubbo/rpc/protocol/dubbo/telnet/InvokerTelnetHandlerTest.java",
                "deletions": 0,
                "sha": "6b1ffe2ec20eee6e5cdabaa5d0889ad59730507e",
                "blob_url": "https://github.com/apache/dubbo/blob/b2ce7b2c10d57d232582a185d0877cc404b352ea/dubbo-rpc/dubbo-rpc-dubbo/src/test/java/org/apache/dubbo/rpc/protocol/dubbo/telnet/InvokerTelnetHandlerTest.java",
                "patch": "@@ -33,6 +33,7 @@\n \n import static org.junit.Assert.assertEquals;\n import static org.junit.Assert.assertTrue;\n+import static org.junit.Assert.fail;\n import static org.mockito.ArgumentMatchers.any;\n import static org.mockito.BDDMockito.given;\n import static org.mockito.Mockito.mock;\n@@ -68,6 +69,45 @@ public void testInvokeDefaultSService() throws RemotingException {\n         assertTrue(result.contains(\"Use default service org.apache.dubbo.rpc.protocol.dubbo.support.DemoService.\\r\\n\\\"ok\\\"\\r\\n\"));\n     }\n \n+    @SuppressWarnings(\"unchecked\")\n+    @Test\n+    public void testInvokeByPassingNullValue() throws RemotingException {\n+        mockInvoker = mock(Invoker.class);\n+        given(mockInvoker.getInterface()).willReturn(DemoService.class);\n+        given(mockInvoker.getUrl()).willReturn(URL.valueOf(\"dubbo://127.0.0.1:20883/demo\"));\n+        given(mockInvoker.invoke(any(Invocation.class))).willReturn(new RpcResult(\"ok\"));\n+        mockChannel = mock(Channel.class);\n+        given(mockChannel.getAttribute(\"telnet.service\")).willReturn(\"org.apache.dubbo.rpc.protocol.dubbo.support.DemoService\");\n+        given(mockChannel.getLocalAddress()).willReturn(NetUtils.toAddress(\"127.0.0.1:5555\"));\n+        given(mockChannel.getRemoteAddress()).willReturn(NetUtils.toAddress(\"127.0.0.1:20883\"));\n+\n+        DubboProtocol.getDubboProtocol().export(mockInvoker);\n+\n+        // pass null value to parameter of primitive type\n+        try {\n+            invoke.telnet(mockChannel, \"DemoService.add(null, 2)\");\n+            fail(\"It should cause a NullPointerException by the above code.\");\n+        } catch (NullPointerException ex) {\n+            String message = ex.getMessage();\n+            assertEquals(\"The type of No.1 parameter is primitive(int), but the value passed is null.\", message);\n+        }\n+\n+        try {\n+            invoke.telnet(mockChannel, \"DemoService.add(1, null)\");\n+            fail(\"It should cause a NullPointerException by the above code.\");\n+        } catch (NullPointerException ex) {\n+            String message = ex.getMessage();\n+            assertEquals(\"The type of No.2 parameter is primitive(long), but the value passed is null.\", message);\n+        }\n+\n+        // pass null value to parameter of object type\n+        try {\n+            invoke.telnet(mockChannel, \"DemoService.sayHello(null)\");\n+        } catch (NullPointerException ex) {\n+            fail(\"It shouldn't cause a NullPointerException by the above code.\");\n+        }\n+    }\n+\n     @SuppressWarnings(\"unchecked\")\n     @Test\n     public void testInvokeAutoFindMethod() throws RemotingException {",
                "changes": 40
            }
        ],
        "unit_tests": [
            "InvokerTelnetHandlerTest.java"
        ]
    },
    {
        "buggy": false,
        "test_file": "dubbo-rpc/dubbo-rpc-dubbo/src/test/java/org/apache/dubbo/rpc/protocol/dubbo/telnet/InvokerTelnetHandlerTest.java",
        "buggy_files": [
            "dubbo-rpc/dubbo-rpc-dubbo/src/main/java/org/apache/dubbo/rpc/protocol/dubbo/telnet/InvokeTelnetHandler.java",
            "dubbo-demo/dubbo-demo-provider/src/main/java/org/apache/dubbo/demo/provider/DemoServiceImpl.java",
            "dubbo-remoting/dubbo-remoting-api/src/test/java/org/apache/dubbo/remoting/DemoServiceImpl.java",
            "dubbo-config/dubbo-config-api/src/test/java/org/apache/dubbo/config/provider/impl/DemoServiceImpl.java",
            "dubbo-config/dubbo-config-spring/src/test/java/org/apache/dubbo/config/spring/impl/DemoServiceImpl.java",
            "dubbo-config/dubbo-config-spring/src/test/java/org/apache/dubbo/config/spring/context/annotation/provider/DemoServiceImpl.java",
            "dubbo-compatible/src/test/java/org/apache/dubbo/service/DemoServiceImpl.java",
            "dubbo-rpc/dubbo-rpc-webservice/src/test/java/org/apache/dubbo/rpc/protocol/webservice/DemoServiceImpl.java",
            "dubbo-rpc/dubbo-rpc-api/src/test/java/org/apache/dubbo/rpc/support/DemoServiceImpl.java",
            "dubbo-rpc/dubbo-rpc-api/src/test/java/org/apache/dubbo/rpc/proxy/DemoServiceImpl.java",
            "dubbo-rpc/dubbo-rpc-injvm/src/test/java/org/apache/dubbo/rpc/protocol/injvm/DemoServiceImpl.java",
            "dubbo-rpc/dubbo-rpc-rmi/src/test/java/org/apache/dubbo/rpc/protocol/rmi/DemoServiceImpl.java",
            "dubbo-rpc/dubbo-rpc-dubbo/src/test/java/org/apache/dubbo/rpc/protocol/dubbo/support/DemoServiceImpl.java",
            "dubbo-demo/dubbo-demo-api/src/main/java/org/apache/dubbo/demo/DemoService.java",
            "dubbo-registry/dubbo-registry-default/src/test/java/org/apache/dubbo/registry/dubbo/DemoService.java",
            "dubbo-remoting/dubbo-remoting-api/src/test/java/org/apache/dubbo/remoting/DemoService.java",
            "dubbo-config/dubbo-config-api/src/test/java/org/apache/dubbo/config/api/DemoService.java",
            "dubbo-config/dubbo-config-spring/src/test/java/org/apache/dubbo/config/spring/api/DemoService.java",
            "dubbo-compatible/src/test/java/org/apache/dubbo/service/DemoService.java",
            "dubbo-rpc/dubbo-rpc-rest/src/test/java/org/apache/dubbo/rpc/protocol/rest/DemoService.java",
            "dubbo-rpc/dubbo-rpc-webservice/src/test/java/org/apache/dubbo/rpc/protocol/webservice/DemoService.java",
            "dubbo-rpc/dubbo-rpc-api/src/test/java/org/apache/dubbo/rpc/support/DemoService.java",
            "dubbo-rpc/dubbo-rpc-api/src/test/java/org/apache/dubbo/rpc/proxy/DemoService.java",
            "dubbo-rpc/dubbo-rpc-injvm/src/test/java/org/apache/dubbo/rpc/protocol/injvm/DemoService.java",
            "dubbo-rpc/dubbo-rpc-rmi/src/test/java/org/apache/dubbo/rpc/protocol/rmi/DemoService.java",
            "dubbo-rpc/dubbo-rpc-dubbo/src/test/java/org/apache/dubbo/rpc/protocol/dubbo/support/DemoService.java",
            "dubbo-cluster/src/test/java/org/apache/dubbo/rpc/cluster/filter/DemoService.java"
        ],
        "fixed": true
    }
]