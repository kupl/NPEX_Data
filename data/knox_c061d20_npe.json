[
    {
        "repo": "knox",
        "commit": "https://github.com/apache/knox/commit/c061d20a8135ff80d8c99cb5403a5f295b1c2a63",
        "bug_id": "knox_c061d20",
        "message": "KNOX-1283 - DefaultURLManager markFailed method throws NPE if urls is empty",
        "parent": "https://github.com/apache/knox/commit/12a1fd65d97ec5c584bad12c9960d58870aa974d",
        "patched_files": [
            "DefaultURLManager.java"
        ],
        "file": [
            {
                "status": "modified",
                "additions": 15,
                "raw_url": "https://github.com/apache/knox/raw/c061d20a8135ff80d8c99cb5403a5f295b1c2a63/gateway-provider-ha/src/main/java/org/apache/knox/gateway/ha/provider/impl/DefaultURLManager.java",
                "contents_url": "https://api.github.com/repos/apache/knox/contents/gateway-provider-ha/src/main/java/org/apache/knox/gateway/ha/provider/impl/DefaultURLManager.java?ref=c061d20a8135ff80d8c99cb5403a5f295b1c2a63",
                "filename": "gateway-provider-ha/src/main/java/org/apache/knox/gateway/ha/provider/impl/DefaultURLManager.java",
                "deletions": 13,
                "sha": "8ee59a77f71e6bc7910a42d36d5dfdf6f9d3d4ae",
                "blob_url": "https://github.com/apache/knox/blob/c061d20a8135ff80d8c99cb5403a5f295b1c2a63/gateway-provider-ha/src/main/java/org/apache/knox/gateway/ha/provider/impl/DefaultURLManager.java",
                "patch": "@@ -80,19 +80,21 @@ public synchronized void setURLs(List<String> urls) {\n   @Override\n   public synchronized void markFailed(String url) {\n     String top = urls.peek();\n-    boolean pushToBottom = false;\n-    URI topUri = URI.create(top);\n-    URI incomingUri = URI.create(url);\n-    String topHostPort = topUri.getHost() + \":\" + topUri.getPort();\n-    String incomingHostPort = incomingUri.getHost() + \":\" + incomingUri.getPort();\n-    if ( topHostPort.equals(incomingHostPort) ) {\n-      pushToBottom = true;\n-    }\n-    //put the failed url at the bottom\n-    if ( pushToBottom ) {\n-      String failed = urls.poll();\n-      urls.offer(failed);\n-      LOG.markedFailedUrl(failed, urls.peek());\n+    if (top != null) {\n+      boolean pushToBottom = false;\n+      URI topUri = URI.create(top);\n+      URI incomingUri = URI.create(url);\n+      String topHostPort = topUri.getHost() + \":\" + topUri.getPort();\n+      String incomingHostPort = incomingUri.getHost() + \":\" + incomingUri.getPort();\n+      if (topHostPort.equals(incomingHostPort)) {\n+        pushToBottom = true;\n+      }\n+      //put the failed url at the bottom\n+      if (pushToBottom) {\n+        String failed = urls.poll();\n+        urls.offer(failed);\n+        LOG.markedFailedUrl(failed, urls.peek());\n+      }\n     }\n   }\n }",
                "changes": 28
            },
            {
                "status": "modified",
                "additions": 17,
                "raw_url": "https://github.com/apache/knox/raw/c061d20a8135ff80d8c99cb5403a5f295b1c2a63/gateway-provider-ha/src/test/java/org/apache/knox/gateway/ha/provider/impl/DefaultURLManagerTest.java",
                "contents_url": "https://api.github.com/repos/apache/knox/contents/gateway-provider-ha/src/test/java/org/apache/knox/gateway/ha/provider/impl/DefaultURLManagerTest.java?ref=c061d20a8135ff80d8c99cb5403a5f295b1c2a63",
                "filename": "gateway-provider-ha/src/test/java/org/apache/knox/gateway/ha/provider/impl/DefaultURLManagerTest.java",
                "deletions": 0,
                "sha": "84defbcb69177b24b448b114275f486fe1af911e",
                "blob_url": "https://github.com/apache/knox/blob/c061d20a8135ff80d8c99cb5403a5f295b1c2a63/gateway-provider-ha/src/test/java/org/apache/knox/gateway/ha/provider/impl/DefaultURLManagerTest.java",
                "patch": "@@ -23,6 +23,7 @@\n \n import static org.junit.Assert.assertEquals;\n import static org.junit.Assert.assertTrue;\n+import static org.junit.Assert.fail;\n \n public class DefaultURLManagerTest {\n \n@@ -89,4 +90,20 @@ public void testMarkingFailedURL() {\n       assertEquals(url3, manager.getActiveURL());\n    }\n \n+   /**\n+    * KNOX-1283\n+    */\n+   @Test\n+   public void testMarkFailedWithEmptyURLs() {\n+      ArrayList<String> urls = new ArrayList<>();\n+      DefaultURLManager manager = new DefaultURLManager();\n+      manager.setURLs(urls);\n+      assertTrue(manager.getURLs().isEmpty());\n+      try {\n+         manager.markFailed(\"http://localhost:8080\");\n+      } catch (NullPointerException e) {\n+         fail(\"Empty URL list should not result in NPE.\");\n+      }\n+   }\n+\n }",
                "changes": 17
            }
        ],
        "unit_tests": [
            "DefaultURLManagerTest.java"
        ]
    },
    {
        "buggy": false,
        "test_file": "gateway-provider-ha/src/test/java/org/apache/knox/gateway/ha/provider/impl/DefaultURLManagerTest.java",
        "buggy_files": [
            "gateway-provider-ha/src/main/java/org/apache/knox/gateway/ha/provider/impl/DefaultURLManager.java"
        ],
        "fixed": true
    }
]