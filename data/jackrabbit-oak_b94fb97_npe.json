[
    {
        "repo": "jackrabbit-oak",
        "commit": "https://github.com/apache/jackrabbit-oak/commit/b94fb97bbc47db4fce681c7f367da1616f15399c",
        "bug_id": "jackrabbit-oak_b94fb97",
        "message": "OAK-8656: ListenerStatsData.toCompositeData() throws NPE\n\nApply slightly modified patch provided by Jos\u00e9 Cordero\n\ngit-svn-id: https://svn.apache.org/repos/asf/jackrabbit/oak/trunk@1867773 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/jackrabbit-oak/commit/c78ed7ee17e37b661ebbd8aacec5079f83493bd4",
        "patched_files": [
            "ConsolidatedListenerMBeanImpl.java",
            "ConsolidatedListenerMBean.java"
        ],
        "file": [
            {
                "status": "modified",
                "additions": 7,
                "raw_url": "https://github.com/apache/jackrabbit-oak/raw/b94fb97bbc47db4fce681c7f367da1616f15399c/oak-jcr/src/main/java/org/apache/jackrabbit/oak/jcr/observation/ConsolidatedListenerMBeanImpl.java",
                "contents_url": "https://api.github.com/repos/apache/jackrabbit-oak/contents/oak-jcr/src/main/java/org/apache/jackrabbit/oak/jcr/observation/ConsolidatedListenerMBeanImpl.java?ref=b94fb97bbc47db4fce681c7f367da1616f15399c",
                "filename": "oak-jcr/src/main/java/org/apache/jackrabbit/oak/jcr/observation/ConsolidatedListenerMBeanImpl.java",
                "deletions": 7,
                "sha": "8f4d3e76fd195724d7edb9e04ff971dfd0d2f157",
                "blob_url": "https://github.com/apache/jackrabbit-oak/blob/b94fb97bbc47db4fce681c7f367da1616f15399c/oak-jcr/src/main/java/org/apache/jackrabbit/oak/jcr/observation/ConsolidatedListenerMBeanImpl.java",
                "patch": "@@ -417,13 +417,13 @@ CompositeDataSupport toCompositeData() {\n                     mbeans.changeProcessorMBean == null ? -1 : mbeans.changeProcessorMBean.getPrefilterSkipCount(),\n                     mbeans.changeProcessorMBean == null ? -1 : mbeans.changeProcessorMBean.getPrefilterExcludeCount(),\n                     mbeans.changeProcessorMBean == null ? -1 : mbeans.changeProcessorMBean.getPrefilterIncludeCount(),\n-                    mbeans.observerMBean.getQueueSize(),\n-                    mbeans.observerMBean.getLocalEventCount(),\n-                    mbeans.observerMBean.getExternalEventCount(),\n-                    Arrays.toString(mbeans.filterConfigMBean.getPaths()),\n-                    mbeans.filterConfigMBean.isIncludeClusterExternal(),\n-                    mbeans.filterConfigMBean.isIncludeClusterLocal(),\n-                    mbeans.observerMBean.getMaxQueueSize(),\n+                    mbeans.observerMBean == null ? -1 : mbeans.observerMBean.getQueueSize(),\n+                    mbeans.observerMBean == null ? -1 : mbeans.observerMBean.getLocalEventCount(),\n+                    mbeans.observerMBean == null ? -1 : mbeans.observerMBean.getExternalEventCount(),\n+                    mbeans.filterConfigMBean == null ? \"n/a\" : Arrays.toString(mbeans.filterConfigMBean.getPaths()),\n+                    mbeans.filterConfigMBean != null && mbeans.filterConfigMBean.isIncludeClusterExternal(),\n+                    mbeans.filterConfigMBean != null && mbeans.filterConfigMBean.isIncludeClusterLocal(),\n+                    mbeans.observerMBean == null ? -1 : mbeans.observerMBean.getMaxQueueSize(),\n             };\n             try {\n                 return new CompositeDataSupport(TYPE, FIELD_NAMES, values);",
                "changes": 14
            },
            {
                "status": "added",
                "additions": 67,
                "raw_url": "https://github.com/apache/jackrabbit-oak/raw/b94fb97bbc47db4fce681c7f367da1616f15399c/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/observation/ConsolidatedListenerMBeanTest.java",
                "contents_url": "https://api.github.com/repos/apache/jackrabbit-oak/contents/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/observation/ConsolidatedListenerMBeanTest.java?ref=b94fb97bbc47db4fce681c7f367da1616f15399c",
                "filename": "oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/observation/ConsolidatedListenerMBeanTest.java",
                "deletions": 0,
                "sha": "4343c54ae03d2573705c0fc066efb64f7608667c",
                "blob_url": "https://github.com/apache/jackrabbit-oak/blob/b94fb97bbc47db4fce681c7f367da1616f15399c/oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/observation/ConsolidatedListenerMBeanTest.java",
                "patch": "@@ -0,0 +1,67 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.jackrabbit.oak.jcr.observation;\n+\n+import static org.junit.Assert.assertNotNull;\n+\n+import java.util.HashMap;\n+import java.util.Map;\n+import java.util.concurrent.atomic.AtomicInteger;\n+\n+import javax.jcr.observation.EventIterator;\n+import javax.jcr.observation.EventListener;\n+import javax.management.MalformedObjectNameException;\n+import javax.management.ObjectName;\n+import javax.management.openmbean.TabularData;\n+\n+import org.apache.jackrabbit.api.jmx.EventListenerMBean;\n+import org.apache.jackrabbit.commons.observation.ListenerTracker;\n+import org.junit.Test;\n+\n+public class ConsolidatedListenerMBeanTest {\n+\n+    @Test\n+    public void testListenerStatsData() throws MalformedObjectNameException {\n+        ConsolidatedListenerMBeanImpl consolidatedListener = new ConsolidatedListenerMBeanImpl();\n+\n+        EventListener listener = new Listener(new AtomicInteger());\n+        EventListenerMBean mbean = new ListenerTracker(listener, 0, \"/\", false, null, null, false).getListenerMBean();\n+\n+        Map<String, ObjectName> config = new HashMap<>();\n+        config.put(\"jmx.objectname\", new ObjectName(\"*:*\"));\n+        consolidatedListener.bindListenerMBean(mbean, config);\n+        TabularData data = consolidatedListener.getListenerStats();\n+        assertNotNull(data);\n+    }\n+\n+    private static class Listener implements EventListener {\n+        private final AtomicInteger eventCount;\n+\n+        Listener(AtomicInteger eventCount) {\n+            this.eventCount = eventCount;\n+        }\n+\n+        @Override\n+        public void onEvent(EventIterator events) {\n+            for (; events.hasNext(); events.nextEvent()) {\n+                eventCount.incrementAndGet();\n+            }\n+        }\n+    }\n+}",
                "changes": 67
            }
        ],
        "unit_tests": [
            "ConsolidatedListenerMBeanTest.java"
        ]
    },
    {
        "buggy": false,
        "test_file": "oak-jcr/src/test/java/org/apache/jackrabbit/oak/jcr/observation/ConsolidatedListenerMBeanTest.java",
        "buggy_files": [
            "oak-jcr/src/main/java/org/apache/jackrabbit/oak/jcr/observation/ConsolidatedListenerMBeanImpl.java",
            "oak-jcr/src/main/java/org/apache/jackrabbit/oak/jcr/observation/jmx/ConsolidatedListenerMBean.java"
        ],
        "fixed": true
    }
]