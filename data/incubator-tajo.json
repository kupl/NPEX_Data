{
    "incubator-tajo_128d9c8": {
        "bug_id": "incubator-tajo_128d9c8",
        "commit": "https://github.com/apache/incubator-tajo/commit/128d9c8904f5b1541575320a8f7309c5e4e67192",
        "file": [
            {
                "additions": 3,
                "blob_url": "https://github.com/apache/incubator-tajo/blob/128d9c8904f5b1541575320a8f7309c5e4e67192/tajo-core/tajo-core-backend/src/main/java/tajo/master/Repartitioner.java",
                "changes": 4,
                "contents_url": "https://api.github.com/repos/apache/incubator-tajo/contents/tajo-core/tajo-core-backend/src/main/java/tajo/master/Repartitioner.java?ref=128d9c8904f5b1541575320a8f7309c5e4e67192",
                "deletions": 1,
                "filename": "tajo-core/tajo-core-backend/src/main/java/tajo/master/Repartitioner.java",
                "patch": "@@ -410,7 +410,9 @@ public static String createBasicFetchUri(String hostName, int port,\n \n     List<IntermediateEntry> partitions = new ArrayList<>();\n     for (QueryUnit tasks : childSubQuery.getQueryUnits()) {\n-      partitions.addAll(tasks.getIntermediateData());\n+      if (tasks.getIntermediateData() != null) {\n+        partitions.addAll(tasks.getIntermediateData());\n+      }\n     }\n \n     Fragment frag = new Fragment(scan.getTableId(), tablePath,",
                "raw_url": "https://github.com/apache/incubator-tajo/raw/128d9c8904f5b1541575320a8f7309c5e4e67192/tajo-core/tajo-core-backend/src/main/java/tajo/master/Repartitioner.java",
                "sha": "13d1b7ccb56811f0a4d11f4a4b5c7dc82d13bc62",
                "status": "modified"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/incubator-tajo/blob/128d9c8904f5b1541575320a8f7309c5e4e67192/tajo-core/tajo-core-backend/src/main/java/tajo/master/TaskRunnerLauncherImpl.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/incubator-tajo/contents/tajo-core/tajo-core-backend/src/main/java/tajo/master/TaskRunnerLauncherImpl.java?ref=128d9c8904f5b1541575320a8f7309c5e4e67192",
                "deletions": 1,
                "filename": "tajo-core/tajo-core-backend/src/main/java/tajo/master/TaskRunnerLauncherImpl.java",
                "patch": "@@ -271,7 +271,7 @@ public ContainerLaunchContext createContainerLaunchContext(TaskRunnerLaunchEvent\n     Vector<CharSequence> vargs = new Vector<>(30);\n \n     // Set java executable command\n-    LOG.info(\"Setting up app master command\");\n+    //LOG.info(\"Setting up app master command\");\n     vargs.add(\"${JAVA_HOME}\" + \"/bin/java\");\n     // Set Xmx based on am memory size\n     vargs.add(\"-Xmx2000m\");",
                "raw_url": "https://github.com/apache/incubator-tajo/raw/128d9c8904f5b1541575320a8f7309c5e4e67192/tajo-core/tajo-core-backend/src/main/java/tajo/master/TaskRunnerLauncherImpl.java",
                "sha": "704832ac9f3601b51851e5b5375f1853eb79b1a5",
                "status": "modified"
            },
            {
                "additions": 3,
                "blob_url": "https://github.com/apache/incubator-tajo/blob/128d9c8904f5b1541575320a8f7309c5e4e67192/tajo-core/tajo-core-backend/src/main/java/tajo/master/TaskSchedulerImpl.java",
                "changes": 6,
                "contents_url": "https://api.github.com/repos/apache/incubator-tajo/contents/tajo-core/tajo-core-backend/src/main/java/tajo/master/TaskSchedulerImpl.java?ref=128d9c8904f5b1541575320a8f7309c5e4e67192",
                "deletions": 3,
                "filename": "tajo-core/tajo-core-backend/src/main/java/tajo/master/TaskSchedulerImpl.java",
                "patch": "@@ -313,7 +313,7 @@ public void assignToLeafTasks(List<TaskRequestEvent> taskRequests) {\n           if (leafTasks.contains(tId)) {\n             leafTasks.remove(tId);\n             attemptId = tId;\n-            LOG.info(attemptId + \" Assigned based on host match \" + hostName);\n+            //LOG.info(attemptId + \" Assigned based on host match \" + hostName);\n             hostLocalAssigned++;\n             break;\n           }\n@@ -330,7 +330,7 @@ public void assignToLeafTasks(List<TaskRequestEvent> taskRequests) {\n             if (leafTasks.contains(tId)) {\n               leafTasks.remove(tId);\n               attemptId = tId;\n-              LOG.info(attemptId + \"Assigned based on rack match \" + rack);\n+              //LOG.info(attemptId + \"Assigned based on rack match \" + rack);\n               rackLocalAssigned++;\n               break;\n             }\n@@ -340,7 +340,7 @@ public void assignToLeafTasks(List<TaskRequestEvent> taskRequests) {\n           if (attemptId == null && leafTaskNum() > 0) {\n             attemptId = leafTasks.iterator().next();\n             leafTasks.remove(attemptId);\n-            LOG.info(attemptId + \" Assigned based on * match\");\n+            //LOG.info(attemptId + \" Assigned based on * match\");\n           }\n         }\n ",
                "raw_url": "https://github.com/apache/incubator-tajo/raw/128d9c8904f5b1541575320a8f7309c5e4e67192/tajo-core/tajo-core-backend/src/main/java/tajo/master/TaskSchedulerImpl.java",
                "sha": "4ed4e084ea276ac67d3d17ef655af36c4f889961",
                "status": "modified"
            },
            {
                "additions": 10,
                "blob_url": "https://github.com/apache/incubator-tajo/blob/128d9c8904f5b1541575320a8f7309c5e4e67192/tajo-core/tajo-core-backend/src/main/java/tajo/master/rm/RMContainerAllocator.java",
                "changes": 18,
                "contents_url": "https://api.github.com/repos/apache/incubator-tajo/contents/tajo-core/tajo-core-backend/src/main/java/tajo/master/rm/RMContainerAllocator.java?ref=128d9c8904f5b1541575320a8f7309c5e4e67192",
                "deletions": 8,
                "filename": "tajo-core/tajo-core-backend/src/main/java/tajo/master/rm/RMContainerAllocator.java",
                "patch": "@@ -171,15 +171,17 @@ protected AMResponse makeRemoteRequest() throws YarnException, YarnRemoteExcepti\n     //LOG.info(\"Response Id: \" + response.getResponseId());\n     LOG.info(\"Available Resource: \" + response.getAvailableResources());\n     LOG.info(\"Num of Allocated Containers: \" + response.getAllocatedContainers().size());\n-    LOG.info(\"================================================================\");\n-    for (Container container : response.getAllocatedContainers()) {\n-      LOG.info(\"> Container Id: \" + container.getId());\n-      LOG.info(\"> Node Id: \" + container.getNodeId());\n-      LOG.info(\"> Resource (Mem): \" + container.getResource().getMemory());\n-      LOG.info(\"> State : \" + container.getState());\n-      LOG.info(\"> Priority: \" + container.getPriority());\n+    if (response.getAllocatedContainers().size() > 0) {\n+      LOG.info(\"================================================================\");\n+      for (Container container : response.getAllocatedContainers()) {\n+        LOG.info(\"> Container Id: \" + container.getId());\n+        LOG.info(\"> Node Id: \" + container.getNodeId());\n+        LOG.info(\"> Resource (Mem): \" + container.getResource().getMemory());\n+        LOG.info(\"> State : \" + container.getState());\n+        LOG.info(\"> Priority: \" + container.getPriority());\n+      }\n+      LOG.info(\"================================================================\");\n     }\n-    LOG.info(\"================================================================\");\n     /*\n     LOG.info(\"Reboot: \" + response.getReboot());\n     LOG.info(\"Num of Updated Node: \" + response.getUpdatedNodes());",
                "raw_url": "https://github.com/apache/incubator-tajo/raw/128d9c8904f5b1541575320a8f7309c5e4e67192/tajo-core/tajo-core-backend/src/main/java/tajo/master/rm/RMContainerAllocator.java",
                "sha": "16ebc4bc48dc833a40238f07f07568c6e05d2ac9",
                "status": "modified"
            },
            {
                "additions": 0,
                "blob_url": "https://github.com/apache/incubator-tajo/blob/128d9c8904f5b1541575320a8f7309c5e4e67192/tajo-core/tajo-core-backend/src/main/java/tajo/worker/Task2.java",
                "changes": 1,
                "contents_url": "https://api.github.com/repos/apache/incubator-tajo/contents/tajo-core/tajo-core-backend/src/main/java/tajo/worker/Task2.java?ref=128d9c8904f5b1541575320a8f7309c5e4e67192",
                "deletions": 1,
                "filename": "tajo-core/tajo-core-backend/src/main/java/tajo/worker/Task2.java",
                "patch": "@@ -362,7 +362,6 @@ public void run() {\n         this.executor.init();\n         while(executor.next() != null && !killed) {\n           ++progress;\n-          System.out.println(\"ROW PROCEED: \" + progress);\n         }\n         this.executor.close();\n       }",
                "raw_url": "https://github.com/apache/incubator-tajo/raw/128d9c8904f5b1541575320a8f7309c5e4e67192/tajo-core/tajo-core-backend/src/main/java/tajo/worker/Task2.java",
                "sha": "1cf67dad8f2f77d652087753b81946986c9eb0ed",
                "status": "modified"
            },
            {
                "additions": 11,
                "blob_url": "https://github.com/apache/incubator-tajo/blob/128d9c8904f5b1541575320a8f7309c5e4e67192/tajo-core/tajo-core-backend/src/main/java/tajo/worker/TaskRunner.java",
                "changes": 11,
                "contents_url": "https://api.github.com/repos/apache/incubator-tajo/contents/tajo-core/tajo-core-backend/src/main/java/tajo/worker/TaskRunner.java?ref=128d9c8904f5b1541575320a8f7309c5e4e67192",
                "deletions": 0,
                "filename": "tajo-core/tajo-core-backend/src/main/java/tajo/worker/TaskRunner.java",
                "patch": "@@ -38,12 +38,14 @@\n import tajo.SubQueryId;\n import tajo.TajoProtos.TaskAttemptState;\n import tajo.conf.TajoConf.ConfVars;\n+import tajo.engine.MasterWorkerProtos;\n import tajo.engine.MasterWorkerProtos.QueryUnitRequestProto;\n import tajo.engine.query.QueryUnitRequestImpl;\n import tajo.ipc.MasterWorkerProtocol;\n import tajo.ipc.MasterWorkerProtocol.MasterWorkerProtocolService;\n import tajo.ipc.MasterWorkerProtocol.MasterWorkerProtocolService.Interface;\n import tajo.rpc.CallFuture2;\n+import tajo.rpc.NullCallback;\n import tajo.rpc.ProtoAsyncRpcClient;\n import tajo.util.TajoIdUtils;\n \n@@ -257,13 +259,22 @@ public void run() {\n                     LOG.info(\"Accumulated Received Task: \" + (++receivedNum));\n                     QueryUnitAttemptId taskAttemptId =\n                         new QueryUnitAttemptId(taskRequest.getId());\n+                    if (tasks.containsKey(taskAttemptId)) {\n+                      MasterWorkerProtos.TaskFatalErrorReport.Builder builder =\n+                      MasterWorkerProtos.TaskFatalErrorReport.newBuilder()\n+                          .setErrorMessage(\"Duplicate Task Attempt: \" +\n+                          taskAttemptId);\n+                      master.fatalError(null, builder.build(), NullCallback.get());\n+                      continue;\n+                    }\n                     Path taskTempDir = localFS.makeQualified(\n                         lDirAllocator.getLocalPathForWrite(baseDir +\n                             \"/\" + taskAttemptId.getQueryUnitId().getId()\n                             + \"_\" + taskAttemptId.getId(), conf));\n \n                     Task2 task = new Task2(taskAttemptId, workerContext, master,\n                         new QueryUnitRequestImpl(taskRequest), taskTempDir);\n+                    tasks.put(taskAttemptId, task);\n                     task.init();\n                     if (task.hasFetchPhase()) {\n                       task.fetch(); // The fetch is performed in an asynchronous way.",
                "raw_url": "https://github.com/apache/incubator-tajo/raw/128d9c8904f5b1541575320a8f7309c5e4e67192/tajo-core/tajo-core-backend/src/main/java/tajo/worker/TaskRunner.java",
                "sha": "aea241c87bac02ec76129470db840bdf07632c2f",
                "status": "modified"
            },
            {
                "additions": 3,
                "blob_url": "https://github.com/apache/incubator-tajo/blob/128d9c8904f5b1541575320a8f7309c5e4e67192/tajo-core/tajo-core-storage/src/main/java/tajo/storage/StorageManager.java",
                "changes": 7,
                "contents_url": "https://api.github.com/repos/apache/incubator-tajo/contents/tajo-core/tajo-core-storage/src/main/java/tajo/storage/StorageManager.java?ref=128d9c8904f5b1541575320a8f7309c5e4e67192",
                "deletions": 4,
                "filename": "tajo-core/tajo-core-storage/src/main/java/tajo/storage/StorageManager.java",
                "patch": "@@ -77,11 +77,10 @@ public Path initTableBase(TableMeta meta, String tableName)\n \tpublic Path initLocalTableBase(Path tablePath, TableMeta meta) throws IOException {\n \t  FileSystem fs = FileSystem.getLocal(conf);\n     if (fs.exists(tablePath)) {\n-      //throw new AlreadyExistsStorageException(tablePath);\n-      fs.delete(tablePath, true);\n+      throw new AlreadyExistsStorageException(tablePath);\n+    } else {\n+      fs.mkdirs(tablePath);\n     }\n-\n-    fs.mkdirs(tablePath);\n     Path dataDir = new Path(tablePath,\"data\");\n \n     if (meta != null) {",
                "raw_url": "https://github.com/apache/incubator-tajo/raw/128d9c8904f5b1541575320a8f7309c5e4e67192/tajo-core/tajo-core-storage/src/main/java/tajo/storage/StorageManager.java",
                "sha": "c54f631bc603103dec9c89d0e5c6bf8adfe3e352",
                "status": "modified"
            }
        ],
        "message": "Fixed NPE bugs of Repartitioner.",
        "parent": "https://github.com/apache/incubator-tajo/commit/5b33b87c38a536949920c1955a9bb26e16c1e9c8",
        "repo": "incubator-tajo",
        "unit_tests": [
            "TestStorageManager.java"
        ]
    },
    "incubator-tajo_5893e74": {
        "bug_id": "incubator-tajo_5893e74",
        "commit": "https://github.com/apache/incubator-tajo/commit/5893e74978d99d25b40af4ae465471493abbb89e",
        "file": [
            {
                "additions": 3,
                "blob_url": "https://github.com/apache/incubator-tajo/blob/5893e74978d99d25b40af4ae465471493abbb89e/engine/src/main/java/nta/catalog/statistics/ColumnStat.java",
                "changes": 6,
                "contents_url": "https://api.github.com/repos/apache/incubator-tajo/contents/engine/src/main/java/nta/catalog/statistics/ColumnStat.java?ref=5893e74978d99d25b40af4ae465471493abbb89e",
                "deletions": 3,
                "filename": "engine/src/main/java/nta/catalog/statistics/ColumnStat.java",
                "patch": "@@ -107,7 +107,7 @@ public Datum getMaxValue() {\n     if (!p.hasMaxValue()) {\n       return null;\n     }\n-    this.maxValue = TupleUtil.createFromBytes(column.getDataType(), p.getMaxValue().toByteArray());\n+    this.maxValue = TupleUtil.createFromBytes(getColumn().getDataType(), p.getMaxValue().toByteArray());\n \n     return this.maxValue;\n   }\n@@ -191,10 +191,10 @@ public void initFromProto() {\n       this.numNulls = p.getNumNulls();\n     }\n     if (this.minValue == null && p.hasMinValue()) {\n-      this.minValue = TupleUtil.createFromBytes(column.getDataType(), p.getMinValue().toByteArray());\n+      this.minValue = TupleUtil.createFromBytes(getColumn().getDataType(), p.getMinValue().toByteArray());\n     }\n     if (this.maxValue == null && p.hasMaxValue()) {\n-      this.maxValue = TupleUtil.createFromBytes(column.getDataType(), p.getMaxValue().toByteArray());\n+      this.maxValue = TupleUtil.createFromBytes(getColumn().getDataType(), p.getMaxValue().toByteArray());\n     }\n   }\n ",
                "raw_url": "https://github.com/apache/incubator-tajo/raw/5893e74978d99d25b40af4ae465471493abbb89e/engine/src/main/java/nta/catalog/statistics/ColumnStat.java",
                "sha": "0247071c2bd025fca7ed24e2aa41f532911f0cb1",
                "status": "modified"
            },
            {
                "additions": 9,
                "blob_url": "https://github.com/apache/incubator-tajo/blob/5893e74978d99d25b40af4ae465471493abbb89e/engine/src/main/java/nta/catalog/statistics/StatisticsUtil.java",
                "changes": 9,
                "contents_url": "https://api.github.com/repos/apache/incubator-tajo/contents/engine/src/main/java/nta/catalog/statistics/StatisticsUtil.java?ref=5893e74978d99d25b40af4ae465471493abbb89e",
                "deletions": 0,
                "filename": "engine/src/main/java/nta/catalog/statistics/StatisticsUtil.java",
                "patch": "@@ -1,13 +1,18 @@\n package nta.catalog.statistics;\n \n+import com.google.common.base.Preconditions;\n import com.google.common.collect.Lists;\n+import org.apache.commons.logging.LogFactory;\n+import org.apache.commons.logging.Log;\n \n import java.util.List;\n \n /**\n  * @author Hyunsik Choi\n  */\n public class StatisticsUtil {\n+  private static final Log LOG = LogFactory.getLog(StatisticsUtil.class);\n+\n   public static StatSet aggregate(List<StatSet> statSets) {\n     StatSet aggregated = new StatSet();\n \n@@ -38,6 +43,10 @@ public static TableStat aggregate(List<TableStat> tableStats) {\n       // aggregate column stats for each table\n       for (int i = 0; i < ts.getColumnStats().size(); i++) {\n         ColumnStat cs = ts.getColumnStats().get(i);\n+        if (cs == null) {\n+          LOG.warn(\"ERROR: One of column stats is NULL (expected column: \" + css[i].getColumn() + \")\");\n+          continue;\n+        }\n         css[i].setNumDistVals(css[i].getNumDistValues() + cs.getNumDistValues());\n         css[i].setNumNulls(css[i].getNumNulls() + cs.getNumNulls());\n         if (!cs.minIsNotSet() && (css[i].minIsNotSet() ||",
                "raw_url": "https://github.com/apache/incubator-tajo/raw/5893e74978d99d25b40af4ae465471493abbb89e/engine/src/main/java/nta/catalog/statistics/StatisticsUtil.java",
                "sha": "d1ed8598b4f5bc71da053e0343cba76026ff233c",
                "status": "modified"
            }
        ],
        "message": "TAJO-802: StatisticsUtil.aggregate incurs NPE\n\nChange-Id: I0f84a623952a21f645521dd9aa6baaeaddeff0f4\nReviewed-on: https://dbserver.korea.ac.kr/reviews/234\nTested-by:  Jenkins <build@dbserver.korea.ac.kr>\nReviewed-by: Hyunsik Choi <hyunsik.choi@gmail.com>",
        "parent": "https://github.com/apache/incubator-tajo/commit/94b25a9a983a6dedeb240d635fc2f47cf23bc6ed",
        "repo": "incubator-tajo",
        "unit_tests": [
            "TestStatisticsUtil.java"
        ]
    },
    "incubator-tajo_f0eabf0": {
        "bug_id": "incubator-tajo_f0eabf0",
        "commit": "https://github.com/apache/incubator-tajo/commit/f0eabf02aa555b9999d1215aaf4940fa8ea507a2",
        "file": [
            {
                "additions": 3,
                "blob_url": "https://github.com/apache/incubator-tajo/blob/f0eabf02aa555b9999d1215aaf4940fa8ea507a2/tajo-core/tajo-core-backend/src/main/java/tajo/master/Repartitioner.java",
                "changes": 4,
                "contents_url": "https://api.github.com/repos/apache/incubator-tajo/contents/tajo-core/tajo-core-backend/src/main/java/tajo/master/Repartitioner.java?ref=f0eabf02aa555b9999d1215aaf4940fa8ea507a2",
                "deletions": 1,
                "filename": "tajo-core/tajo-core-backend/src/main/java/tajo/master/Repartitioner.java",
                "patch": "@@ -410,7 +410,9 @@ public static String createBasicFetchUri(String hostName, int port,\n \n     List<IntermediateEntry> partitions = new ArrayList<>();\n     for (QueryUnit tasks : childSubQuery.getQueryUnits()) {\n-      partitions.addAll(tasks.getIntermediateData());\n+      if (tasks.getIntermediateData() != null) {\n+        partitions.addAll(tasks.getIntermediateData());\n+      }\n     }\n \n     Fragment frag = new Fragment(scan.getTableId(), tablePath,",
                "raw_url": "https://github.com/apache/incubator-tajo/raw/f0eabf02aa555b9999d1215aaf4940fa8ea507a2/tajo-core/tajo-core-backend/src/main/java/tajo/master/Repartitioner.java",
                "sha": "13d1b7ccb56811f0a4d11f4a4b5c7dc82d13bc62",
                "status": "modified"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/incubator-tajo/blob/f0eabf02aa555b9999d1215aaf4940fa8ea507a2/tajo-core/tajo-core-backend/src/main/java/tajo/master/TaskRunnerLauncherImpl.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/incubator-tajo/contents/tajo-core/tajo-core-backend/src/main/java/tajo/master/TaskRunnerLauncherImpl.java?ref=f0eabf02aa555b9999d1215aaf4940fa8ea507a2",
                "deletions": 1,
                "filename": "tajo-core/tajo-core-backend/src/main/java/tajo/master/TaskRunnerLauncherImpl.java",
                "patch": "@@ -271,7 +271,7 @@ public ContainerLaunchContext createContainerLaunchContext(TaskRunnerLaunchEvent\n     Vector<CharSequence> vargs = new Vector<>(30);\n \n     // Set java executable command\n-    LOG.info(\"Setting up app master command\");\n+    //LOG.info(\"Setting up app master command\");\n     vargs.add(\"${JAVA_HOME}\" + \"/bin/java\");\n     // Set Xmx based on am memory size\n     vargs.add(\"-Xmx2000m\");",
                "raw_url": "https://github.com/apache/incubator-tajo/raw/f0eabf02aa555b9999d1215aaf4940fa8ea507a2/tajo-core/tajo-core-backend/src/main/java/tajo/master/TaskRunnerLauncherImpl.java",
                "sha": "704832ac9f3601b51851e5b5375f1853eb79b1a5",
                "status": "modified"
            },
            {
                "additions": 3,
                "blob_url": "https://github.com/apache/incubator-tajo/blob/f0eabf02aa555b9999d1215aaf4940fa8ea507a2/tajo-core/tajo-core-backend/src/main/java/tajo/master/TaskSchedulerImpl.java",
                "changes": 6,
                "contents_url": "https://api.github.com/repos/apache/incubator-tajo/contents/tajo-core/tajo-core-backend/src/main/java/tajo/master/TaskSchedulerImpl.java?ref=f0eabf02aa555b9999d1215aaf4940fa8ea507a2",
                "deletions": 3,
                "filename": "tajo-core/tajo-core-backend/src/main/java/tajo/master/TaskSchedulerImpl.java",
                "patch": "@@ -313,7 +313,7 @@ public void assignToLeafTasks(List<TaskRequestEvent> taskRequests) {\n           if (leafTasks.contains(tId)) {\n             leafTasks.remove(tId);\n             attemptId = tId;\n-            LOG.info(attemptId + \" Assigned based on host match \" + hostName);\n+            //LOG.info(attemptId + \" Assigned based on host match \" + hostName);\n             hostLocalAssigned++;\n             break;\n           }\n@@ -330,7 +330,7 @@ public void assignToLeafTasks(List<TaskRequestEvent> taskRequests) {\n             if (leafTasks.contains(tId)) {\n               leafTasks.remove(tId);\n               attemptId = tId;\n-              LOG.info(attemptId + \"Assigned based on rack match \" + rack);\n+              //LOG.info(attemptId + \"Assigned based on rack match \" + rack);\n               rackLocalAssigned++;\n               break;\n             }\n@@ -340,7 +340,7 @@ public void assignToLeafTasks(List<TaskRequestEvent> taskRequests) {\n           if (attemptId == null && leafTaskNum() > 0) {\n             attemptId = leafTasks.iterator().next();\n             leafTasks.remove(attemptId);\n-            LOG.info(attemptId + \" Assigned based on * match\");\n+            //LOG.info(attemptId + \" Assigned based on * match\");\n           }\n         }\n ",
                "raw_url": "https://github.com/apache/incubator-tajo/raw/f0eabf02aa555b9999d1215aaf4940fa8ea507a2/tajo-core/tajo-core-backend/src/main/java/tajo/master/TaskSchedulerImpl.java",
                "sha": "4ed4e084ea276ac67d3d17ef655af36c4f889961",
                "status": "modified"
            },
            {
                "additions": 10,
                "blob_url": "https://github.com/apache/incubator-tajo/blob/f0eabf02aa555b9999d1215aaf4940fa8ea507a2/tajo-core/tajo-core-backend/src/main/java/tajo/master/rm/RMContainerAllocator.java",
                "changes": 18,
                "contents_url": "https://api.github.com/repos/apache/incubator-tajo/contents/tajo-core/tajo-core-backend/src/main/java/tajo/master/rm/RMContainerAllocator.java?ref=f0eabf02aa555b9999d1215aaf4940fa8ea507a2",
                "deletions": 8,
                "filename": "tajo-core/tajo-core-backend/src/main/java/tajo/master/rm/RMContainerAllocator.java",
                "patch": "@@ -171,15 +171,17 @@ protected AMResponse makeRemoteRequest() throws YarnException, YarnRemoteExcepti\n     //LOG.info(\"Response Id: \" + response.getResponseId());\n     LOG.info(\"Available Resource: \" + response.getAvailableResources());\n     LOG.info(\"Num of Allocated Containers: \" + response.getAllocatedContainers().size());\n-    LOG.info(\"================================================================\");\n-    for (Container container : response.getAllocatedContainers()) {\n-      LOG.info(\"> Container Id: \" + container.getId());\n-      LOG.info(\"> Node Id: \" + container.getNodeId());\n-      LOG.info(\"> Resource (Mem): \" + container.getResource().getMemory());\n-      LOG.info(\"> State : \" + container.getState());\n-      LOG.info(\"> Priority: \" + container.getPriority());\n+    if (response.getAllocatedContainers().size() > 0) {\n+      LOG.info(\"================================================================\");\n+      for (Container container : response.getAllocatedContainers()) {\n+        LOG.info(\"> Container Id: \" + container.getId());\n+        LOG.info(\"> Node Id: \" + container.getNodeId());\n+        LOG.info(\"> Resource (Mem): \" + container.getResource().getMemory());\n+        LOG.info(\"> State : \" + container.getState());\n+        LOG.info(\"> Priority: \" + container.getPriority());\n+      }\n+      LOG.info(\"================================================================\");\n     }\n-    LOG.info(\"================================================================\");\n     /*\n     LOG.info(\"Reboot: \" + response.getReboot());\n     LOG.info(\"Num of Updated Node: \" + response.getUpdatedNodes());",
                "raw_url": "https://github.com/apache/incubator-tajo/raw/f0eabf02aa555b9999d1215aaf4940fa8ea507a2/tajo-core/tajo-core-backend/src/main/java/tajo/master/rm/RMContainerAllocator.java",
                "sha": "16ebc4bc48dc833a40238f07f07568c6e05d2ac9",
                "status": "modified"
            },
            {
                "additions": 0,
                "blob_url": "https://github.com/apache/incubator-tajo/blob/f0eabf02aa555b9999d1215aaf4940fa8ea507a2/tajo-core/tajo-core-backend/src/main/java/tajo/worker/Task2.java",
                "changes": 1,
                "contents_url": "https://api.github.com/repos/apache/incubator-tajo/contents/tajo-core/tajo-core-backend/src/main/java/tajo/worker/Task2.java?ref=f0eabf02aa555b9999d1215aaf4940fa8ea507a2",
                "deletions": 1,
                "filename": "tajo-core/tajo-core-backend/src/main/java/tajo/worker/Task2.java",
                "patch": "@@ -362,7 +362,6 @@ public void run() {\n         this.executor.init();\n         while(executor.next() != null && !killed) {\n           ++progress;\n-          System.out.println(\"ROW PROCEED: \" + progress);\n         }\n         this.executor.close();\n       }",
                "raw_url": "https://github.com/apache/incubator-tajo/raw/f0eabf02aa555b9999d1215aaf4940fa8ea507a2/tajo-core/tajo-core-backend/src/main/java/tajo/worker/Task2.java",
                "sha": "1cf67dad8f2f77d652087753b81946986c9eb0ed",
                "status": "modified"
            },
            {
                "additions": 11,
                "blob_url": "https://github.com/apache/incubator-tajo/blob/f0eabf02aa555b9999d1215aaf4940fa8ea507a2/tajo-core/tajo-core-backend/src/main/java/tajo/worker/TaskRunner.java",
                "changes": 11,
                "contents_url": "https://api.github.com/repos/apache/incubator-tajo/contents/tajo-core/tajo-core-backend/src/main/java/tajo/worker/TaskRunner.java?ref=f0eabf02aa555b9999d1215aaf4940fa8ea507a2",
                "deletions": 0,
                "filename": "tajo-core/tajo-core-backend/src/main/java/tajo/worker/TaskRunner.java",
                "patch": "@@ -38,12 +38,14 @@\n import tajo.SubQueryId;\n import tajo.TajoProtos.TaskAttemptState;\n import tajo.conf.TajoConf.ConfVars;\n+import tajo.engine.MasterWorkerProtos;\n import tajo.engine.MasterWorkerProtos.QueryUnitRequestProto;\n import tajo.engine.query.QueryUnitRequestImpl;\n import tajo.ipc.MasterWorkerProtocol;\n import tajo.ipc.MasterWorkerProtocol.MasterWorkerProtocolService;\n import tajo.ipc.MasterWorkerProtocol.MasterWorkerProtocolService.Interface;\n import tajo.rpc.CallFuture2;\n+import tajo.rpc.NullCallback;\n import tajo.rpc.ProtoAsyncRpcClient;\n import tajo.util.TajoIdUtils;\n \n@@ -257,13 +259,22 @@ public void run() {\n                     LOG.info(\"Accumulated Received Task: \" + (++receivedNum));\n                     QueryUnitAttemptId taskAttemptId =\n                         new QueryUnitAttemptId(taskRequest.getId());\n+                    if (tasks.containsKey(taskAttemptId)) {\n+                      MasterWorkerProtos.TaskFatalErrorReport.Builder builder =\n+                      MasterWorkerProtos.TaskFatalErrorReport.newBuilder()\n+                          .setErrorMessage(\"Duplicate Task Attempt: \" +\n+                          taskAttemptId);\n+                      master.fatalError(null, builder.build(), NullCallback.get());\n+                      continue;\n+                    }\n                     Path taskTempDir = localFS.makeQualified(\n                         lDirAllocator.getLocalPathForWrite(baseDir +\n                             \"/\" + taskAttemptId.getQueryUnitId().getId()\n                             + \"_\" + taskAttemptId.getId(), conf));\n \n                     Task2 task = new Task2(taskAttemptId, workerContext, master,\n                         new QueryUnitRequestImpl(taskRequest), taskTempDir);\n+                    tasks.put(taskAttemptId, task);\n                     task.init();\n                     if (task.hasFetchPhase()) {\n                       task.fetch(); // The fetch is performed in an asynchronous way.",
                "raw_url": "https://github.com/apache/incubator-tajo/raw/f0eabf02aa555b9999d1215aaf4940fa8ea507a2/tajo-core/tajo-core-backend/src/main/java/tajo/worker/TaskRunner.java",
                "sha": "aea241c87bac02ec76129470db840bdf07632c2f",
                "status": "modified"
            },
            {
                "additions": 3,
                "blob_url": "https://github.com/apache/incubator-tajo/blob/f0eabf02aa555b9999d1215aaf4940fa8ea507a2/tajo-core/tajo-core-storage/src/main/java/tajo/storage/StorageManager.java",
                "changes": 7,
                "contents_url": "https://api.github.com/repos/apache/incubator-tajo/contents/tajo-core/tajo-core-storage/src/main/java/tajo/storage/StorageManager.java?ref=f0eabf02aa555b9999d1215aaf4940fa8ea507a2",
                "deletions": 4,
                "filename": "tajo-core/tajo-core-storage/src/main/java/tajo/storage/StorageManager.java",
                "patch": "@@ -77,11 +77,10 @@ public Path initTableBase(TableMeta meta, String tableName)\n \tpublic Path initLocalTableBase(Path tablePath, TableMeta meta) throws IOException {\n \t  FileSystem fs = FileSystem.getLocal(conf);\n     if (fs.exists(tablePath)) {\n-      //throw new AlreadyExistsStorageException(tablePath);\n-      fs.delete(tablePath, true);\n+      throw new AlreadyExistsStorageException(tablePath);\n+    } else {\n+      fs.mkdirs(tablePath);\n     }\n-\n-    fs.mkdirs(tablePath);\n     Path dataDir = new Path(tablePath,\"data\");\n \n     if (meta != null) {",
                "raw_url": "https://github.com/apache/incubator-tajo/raw/f0eabf02aa555b9999d1215aaf4940fa8ea507a2/tajo-core/tajo-core-storage/src/main/java/tajo/storage/StorageManager.java",
                "sha": "c54f631bc603103dec9c89d0e5c6bf8adfe3e352",
                "status": "modified"
            }
        ],
        "message": "Merge pull request #90 from hyunsik/Q6_WORKAROUND\n\nFixed NPE bugs of Repartitioner",
        "parent": "https://github.com/apache/incubator-tajo/commit/5b33b87c38a536949920c1955a9bb26e16c1e9c8",
        "repo": "incubator-tajo",
        "unit_tests": [
            "TestStorageManager.java"
        ]
    }
}