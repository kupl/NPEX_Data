[
    {
        "repo": "fineract",
        "message": "Merge pull request #672 from vorburger/fix-equals-NPE\n\nfix potential NPE in JobParameter.equals() (FINERACT-428)",
        "commit": "https://github.com/apache/fineract/commit/f739f919c795918ab6592adabe87d14ee54ac1fe",
        "parent": "https://github.com/apache/fineract/commit/0da4cdd4121a411f86b2ea0241e5d880ad37645c",
        "bug_id": "fineract_1",
        "file": [
            {
                "sha": "bf573e952e54b964f6dbd67b44561974a22ce3b2",
                "filename": "fineract-provider/src/main/java/org/apache/fineract/infrastructure/jobs/domain/JobParameter.java",
                "blob_url": "https://github.com/apache/fineract/blob/f739f919c795918ab6592adabe87d14ee54ac1fe/fineract-provider/src/main/java/org/apache/fineract/infrastructure/jobs/domain/JobParameter.java",
                "raw_url": "https://github.com/apache/fineract/raw/f739f919c795918ab6592adabe87d14ee54ac1fe/fineract-provider/src/main/java/org/apache/fineract/infrastructure/jobs/domain/JobParameter.java",
                "status": "modified",
                "changes": 11,
                "additions": 6,
                "contents_url": "https://api.github.com/repos/apache/fineract/contents/fineract-provider/src/main/java/org/apache/fineract/infrastructure/jobs/domain/JobParameter.java?ref=f739f919c795918ab6592adabe87d14ee54ac1fe",
                "patch": "@@ -18,12 +18,13 @@\n  */\n package org.apache.fineract.infrastructure.jobs.domain;\n \n-import org.apache.fineract.infrastructure.core.domain.AbstractPersistableCustom;\n+import java.util.Objects;\n \n import javax.persistence.Column;\n import javax.persistence.Entity;\n import javax.persistence.Table;\n-import java.util.Objects;\n+\n+import org.apache.fineract.infrastructure.core.domain.AbstractPersistableCustom;\n \n @Entity\n @Table(name = \"job_parameters\")\n@@ -78,9 +79,9 @@ public void setParameterValue(final String parameterValue) {\n     public boolean equals(Object obj) {\n         if (!obj.getClass().equals(getClass())) return false;\n         JobParameter jobParameter = (JobParameter) obj;\n-        return jobParameter.getJobId().equals(this.getJobId())\n-                && jobParameter.getParameterName().equals(this.getParameterName())\n-                && jobParameter.getParameterValue().equals(this.getParameterValue());\n+        return Objects.equals(jobParameter.getJobId(), this.getJobId())\n+                && Objects.equals(jobParameter.getParameterName(), this.getParameterName())\n+                && Objects.equals(jobParameter.getParameterValue(), this.getParameterValue());\n     }\n \n     @Override",
                "deletions": 5
            }
        ]
    },
    {
        "repo": "fineract",
        "message": "FINERACT-839: NPE when creating a Loan for a client fix",
        "commit": "https://github.com/apache/fineract/commit/e1666ba8fc2b5c74f5bb6ad835cbae38b1cfce47",
        "parent": "https://github.com/apache/fineract/commit/3790fdbb9998babaabcccb6f07433b1ffbdaf036",
        "bug_id": "fineract_2",
        "file": [
            {
                "sha": "e6493ca4059a7eac728ae374442c16071d3f9a9e",
                "filename": "fineract-provider/src/main/java/org/apache/fineract/portfolio/loanproduct/data/LoanProductData.java",
                "blob_url": "https://github.com/apache/fineract/blob/e1666ba8fc2b5c74f5bb6ad835cbae38b1cfce47/fineract-provider/src/main/java/org/apache/fineract/portfolio/loanproduct/data/LoanProductData.java",
                "raw_url": "https://github.com/apache/fineract/raw/e1666ba8fc2b5c74f5bb6ad835cbae38b1cfce47/fineract-provider/src/main/java/org/apache/fineract/portfolio/loanproduct/data/LoanProductData.java",
                "status": "modified",
                "changes": 107,
                "additions": 53,
                "contents_url": "https://api.github.com/repos/apache/fineract/contents/fineract-provider/src/main/java/org/apache/fineract/portfolio/loanproduct/data/LoanProductData.java?ref=e1666ba8fc2b5c74f5bb6ad835cbae38b1cfce47",
                "patch": "@@ -49,6 +49,7 @@\n import java.util.Collection;\n import java.util.List;\n import java.util.Map;\n+import net.sf.ehcache.util.FindBugsSuppressWarnings;\n \n /**\n  * Immutable data object to represent loan products.\n@@ -473,10 +474,10 @@ public static LoanProductData sensibleDefaultsForNewLoanProductCreation() {\n     }\n \n     public static LoanProductData loanProductWithFloatingRates(final Long id, final String name,\n-            final boolean isLinkedToFloatingInterestRates, final Integer floatingRateId, final String floatingRateName,\n-            final BigDecimal interestRateDifferential, final BigDecimal minDifferentialLendingRate,\n-            final BigDecimal defaultDifferentialLendingRate, final BigDecimal maxDifferentialLendingRate,\n-            final boolean isFloatingInterestRateCalculationAllowed) {\n+                                                               final boolean isLinkedToFloatingInterestRates, final Integer floatingRateId, final String floatingRateName,\n+                                                               final BigDecimal interestRateDifferential, final BigDecimal minDifferentialLendingRate,\n+                                                               final BigDecimal defaultDifferentialLendingRate, final BigDecimal maxDifferentialLendingRate,\n+                                                               final boolean isFloatingInterestRateCalculationAllowed) {\n         final String shortName = null;\n         final String description = null;\n         final CurrencyData currency = CurrencyData.blank();\n@@ -567,9 +568,9 @@ public static LoanProductData loanProductWithFloatingRates(final Long id, final\n     }\n \n     public static LoanProductData withAccountingDetails(final LoanProductData productData, final Map<String, Object> accountingMappings,\n-            final Collection<PaymentTypeToGLAccountMapper> paymentChannelToFundSourceMappings,\n-            final Collection<ChargeToGLAccountMapper> feeToGLAccountMappings,\n-            final Collection<ChargeToGLAccountMapper> penaltyToGLAccountMappings) {\n+                                                        final Collection<PaymentTypeToGLAccountMapper> paymentChannelToFundSourceMappings,\n+                                                        final Collection<ChargeToGLAccountMapper> feeToGLAccountMappings,\n+                                                        final Collection<ChargeToGLAccountMapper> penaltyToGLAccountMappings) {\n         productData.accountingMappings = accountingMappings;\n         productData.paymentChannelToFundSourceMappings = paymentChannelToFundSourceMappings;\n         productData.feeToIncomeAccountMappings = feeToGLAccountMappings;\n@@ -578,30 +579,30 @@ public static LoanProductData withAccountingDetails(final LoanProductData produc\n     }\n \n     public LoanProductData(final Long id, final String name, final String shortName, final String description, final CurrencyData currency,\n-            final BigDecimal principal, final BigDecimal minPrincipal, final BigDecimal maxPrincipal, final BigDecimal tolerance,\n-            final Integer numberOfRepayments, final Integer minNumberOfRepayments, final Integer maxNumberOfRepayments,\n-            final Integer repaymentEvery, final BigDecimal interestRatePerPeriod, final BigDecimal minInterestRatePerPeriod,\n-            final BigDecimal maxInterestRatePerPeriod, final BigDecimal annualInterestRate, final EnumOptionData repaymentFrequencyType,\n-            final EnumOptionData interestRateFrequencyType, final EnumOptionData amortizationType, final EnumOptionData interestType,\n-            final EnumOptionData interestCalculationPeriodType, final Boolean allowPartialPeriodInterestCalcualtion, final Long fundId,\n-            final String fundName, final Long transactionProcessingStrategyId, final String transactionProcessingStrategyName,\n-            final Integer graceOnPrincipalPayment, final Integer recurringMoratoriumOnPrincipalPeriods, final Integer graceOnInterestPayment, final Integer graceOnInterestCharged,\n-            final Collection<ChargeData> charges, final EnumOptionData accountingType, final boolean includeInBorrowerCycle, boolean useBorrowerCycle, final LocalDate startDate,\n-            final LocalDate closeDate, final String status, final String externalId,\n-            Collection<LoanProductBorrowerCycleVariationData> principalVariations,\n-            Collection<LoanProductBorrowerCycleVariationData> interestRateVariations,\n-            Collection<LoanProductBorrowerCycleVariationData> numberOfRepaymentVariations, Boolean multiDisburseLoan,\n-            Integer maxTrancheCount, BigDecimal outstandingLoanBalance, final Integer graceOnArrearsAgeing, final Integer overdueDaysForNPA,\n-            final EnumOptionData daysInMonthType, final EnumOptionData daysInYearType, final boolean isInterestRecalculationEnabled, final LoanProductInterestRecalculationData interestRecalculationData,\n-            final Integer minimumDaysBetweenDisbursalAndFirstRepayment, boolean holdGuaranteeFunds,\n-            final LoanProductGuaranteeData loanProductGuaranteeData, final BigDecimal principalThresholdForLastInstallment,\n-            final boolean accountMovesOutOfNPAOnlyOnArrearsCompletion, boolean canDefineInstallmentAmount,\n-            Integer installmentAmountInMultiplesOf, LoanProductConfigurableAttributes allowAttributeOverrides,\n-            boolean isLinkedToFloatingInterestRates, Integer floatingRateId, String floatingRateName, BigDecimal interestRateDifferential,\n-            BigDecimal minDifferentialLendingRate, BigDecimal defaultDifferentialLendingRate, BigDecimal maxDifferentialLendingRate,\n-            boolean isFloatingInterestRateCalculationAllowed, final boolean isVariableInstallmentsAllowed,\n-            final Integer minimumGapBetweenInstallments, final Integer maximumGapBetweenInstallments,\n-            final boolean syncExpectedWithDisbursementDate, final boolean canUseForTopup, final boolean isEqualAmortization) {\n+                           final BigDecimal principal, final BigDecimal minPrincipal, final BigDecimal maxPrincipal, final BigDecimal tolerance,\n+                           final Integer numberOfRepayments, final Integer minNumberOfRepayments, final Integer maxNumberOfRepayments,\n+                           final Integer repaymentEvery, final BigDecimal interestRatePerPeriod, final BigDecimal minInterestRatePerPeriod,\n+                           final BigDecimal maxInterestRatePerPeriod, final BigDecimal annualInterestRate, final EnumOptionData repaymentFrequencyType,\n+                           final EnumOptionData interestRateFrequencyType, final EnumOptionData amortizationType, final EnumOptionData interestType,\n+                           final EnumOptionData interestCalculationPeriodType, final Boolean allowPartialPeriodInterestCalcualtion, final Long fundId,\n+                           final String fundName, final Long transactionProcessingStrategyId, final String transactionProcessingStrategyName,\n+                           final Integer graceOnPrincipalPayment, final Integer recurringMoratoriumOnPrincipalPeriods, final Integer graceOnInterestPayment, final Integer graceOnInterestCharged,\n+                           final Collection<ChargeData> charges, final EnumOptionData accountingType, final boolean includeInBorrowerCycle, boolean useBorrowerCycle, final LocalDate startDate,\n+                           final LocalDate closeDate, final String status, final String externalId,\n+                           Collection<LoanProductBorrowerCycleVariationData> principalVariations,\n+                           Collection<LoanProductBorrowerCycleVariationData> interestRateVariations,\n+                           Collection<LoanProductBorrowerCycleVariationData> numberOfRepaymentVariations, Boolean multiDisburseLoan,\n+                           Integer maxTrancheCount, BigDecimal outstandingLoanBalance, final Integer graceOnArrearsAgeing, final Integer overdueDaysForNPA,\n+                           final EnumOptionData daysInMonthType, final EnumOptionData daysInYearType, final boolean isInterestRecalculationEnabled, final LoanProductInterestRecalculationData interestRecalculationData,\n+                           final Integer minimumDaysBetweenDisbursalAndFirstRepayment, boolean holdGuaranteeFunds,\n+                           final LoanProductGuaranteeData loanProductGuaranteeData, final BigDecimal principalThresholdForLastInstallment,\n+                           final boolean accountMovesOutOfNPAOnlyOnArrearsCompletion, boolean canDefineInstallmentAmount,\n+                           Integer installmentAmountInMultiplesOf, LoanProductConfigurableAttributes allowAttributeOverrides,\n+                           boolean isLinkedToFloatingInterestRates, Integer floatingRateId, String floatingRateName, BigDecimal interestRateDifferential,\n+                           BigDecimal minDifferentialLendingRate, BigDecimal defaultDifferentialLendingRate, BigDecimal maxDifferentialLendingRate,\n+                           boolean isFloatingInterestRateCalculationAllowed, final boolean isVariableInstallmentsAllowed,\n+                           final Integer minimumGapBetweenInstallments, final Integer maximumGapBetweenInstallments,\n+                           final boolean syncExpectedWithDisbursementDate, final boolean canUseForTopup, final boolean isEqualAmortization) {\n         this.id = id;\n         this.name = name;\n         this.shortName = shortName;\n@@ -710,18 +711,18 @@ public LoanProductData(final Long id, final String name, final String shortName,\n     }\n \n     public LoanProductData(final LoanProductData productData, final Collection<ChargeData> chargeOptions,\n-            final Collection<ChargeData> penaltyOptions, final Collection<PaymentTypeData> paymentTypeOptions,\n-            final Collection<CurrencyData> currencyOptions, final List<EnumOptionData> amortizationTypeOptions,\n-            final List<EnumOptionData> interestTypeOptions, final List<EnumOptionData> interestCalculationPeriodTypeOptions,\n-            final List<EnumOptionData> repaymentFrequencyTypeOptions, final List<EnumOptionData> interestRateFrequencyTypeOptions,\n-            final Collection<FundData> fundOptions, final Collection<TransactionProcessingStrategyData> transactionStrategyOptions,\n-            final Map<String, List<GLAccountData>> accountingMappingOptions, final List<EnumOptionData> accountingRuleOptions,\n-            final List<EnumOptionData> valueConditionTypeOptions, final List<EnumOptionData> daysInMonthTypeOptions,\n-            final List<EnumOptionData> daysInYearTypeOptions, final List<EnumOptionData> interestRecalculationCompoundingTypeOptions,\n-            final List<EnumOptionData> rescheduleStrategyTypeOptions, final List<EnumOptionData> interestRecalculationFrequencyTypeOptions,\n-            final List<EnumOptionData> preCloseInterestCalculationStrategyOptions, final List<FloatingRateData> floatingRateOptions,\n-            final List<EnumOptionData> interestRecalculationNthDayTypeOptions,\n-            final List<EnumOptionData> interestRecalculationDayOfWeekTypeOptions) {\n+                           final Collection<ChargeData> penaltyOptions, final Collection<PaymentTypeData> paymentTypeOptions,\n+                           final Collection<CurrencyData> currencyOptions, final List<EnumOptionData> amortizationTypeOptions,\n+                           final List<EnumOptionData> interestTypeOptions, final List<EnumOptionData> interestCalculationPeriodTypeOptions,\n+                           final List<EnumOptionData> repaymentFrequencyTypeOptions, final List<EnumOptionData> interestRateFrequencyTypeOptions,\n+                           final Collection<FundData> fundOptions, final Collection<TransactionProcessingStrategyData> transactionStrategyOptions,\n+                           final Map<String, List<GLAccountData>> accountingMappingOptions, final List<EnumOptionData> accountingRuleOptions,\n+                           final List<EnumOptionData> valueConditionTypeOptions, final List<EnumOptionData> daysInMonthTypeOptions,\n+                           final List<EnumOptionData> daysInYearTypeOptions, final List<EnumOptionData> interestRecalculationCompoundingTypeOptions,\n+                           final List<EnumOptionData> rescheduleStrategyTypeOptions, final List<EnumOptionData> interestRecalculationFrequencyTypeOptions,\n+                           final List<EnumOptionData> preCloseInterestCalculationStrategyOptions, final List<FloatingRateData> floatingRateOptions,\n+                           final List<EnumOptionData> interestRecalculationNthDayTypeOptions,\n+                           final List<EnumOptionData> interestRecalculationDayOfWeekTypeOptions) {\n         this.id = productData.id;\n         this.name = productData.name;\n         this.shortName = productData.shortName;\n@@ -1134,17 +1135,15 @@ private Integer getRecalculationCompoundingFrequencyInterval() {\n         if (isInterestRecalculationEnabled()) { return this.interestRecalculationData.getRecalculationCompoundingFrequencyInterval(); }\n         return null;\n     }\n+\n+    @FindBugsSuppressWarnings(\"NP_BOOLEAN_RETURN_NULL\")\n     public Boolean isCompoundingToBePostedAsTransaction() {\n-        if (isInterestRecalculationEnabled()) {\n-            return this.interestRecalculationData.isCompoundingToBePostedAsTransaction();\n-        } else {\n-            return !this.interestRecalculationData.isCompoundingToBePostedAsTransaction();\n-        }\n+        return isInterestRecalculationEnabled() ? this.interestRecalculationData.isCompoundingToBePostedAsTransaction() : null;\n     }\n+\n+    @FindBugsSuppressWarnings(\"NP_BOOLEAN_RETURN_NULL\")\n     public Boolean allowCompoundingOnEod() {\n-        if (isInterestRecalculationEnabled()) {\n-            return this.interestRecalculationData.allowCompoundingOnEod();\n-        } return !this.interestRecalculationData.allowCompoundingOnEod();\n+        return isInterestRecalculationEnabled() ? this.interestRecalculationData.allowCompoundingOnEod() : null;\n     }\n \n     public boolean canDefineInstallmentAmount() {\n@@ -1200,9 +1199,9 @@ public boolean syncExpectedWithDisbursementDate() {\n         return syncExpectedWithDisbursementDate;\n     }\n \n-        public boolean canUseForTopup() {\n-            return this.canUseForTopup;\n-        }\n+    public boolean canUseForTopup() {\n+        return this.canUseForTopup;\n+    }\n \n     public BigDecimal getInterestRateDifferential() {\n         return this.interestRateDifferential;",
                "deletions": 54
            }
        ]
    },
    {
        "repo": "fineract",
        "message": "Merge pull request #696 from adamsaghy/bugfix/loanproductdata\n\nFINERACT-839: NPE when creating a Loan for a client fix",
        "commit": "https://github.com/apache/fineract/commit/dfcad321d8385c0dda8ee36aff9dbbe7a18f7bf1",
        "parent": "https://github.com/apache/fineract/commit/3790fdbb9998babaabcccb6f07433b1ffbdaf036",
        "bug_id": "fineract_3",
        "file": [
            {
                "sha": "e6493ca4059a7eac728ae374442c16071d3f9a9e",
                "filename": "fineract-provider/src/main/java/org/apache/fineract/portfolio/loanproduct/data/LoanProductData.java",
                "blob_url": "https://github.com/apache/fineract/blob/dfcad321d8385c0dda8ee36aff9dbbe7a18f7bf1/fineract-provider/src/main/java/org/apache/fineract/portfolio/loanproduct/data/LoanProductData.java",
                "raw_url": "https://github.com/apache/fineract/raw/dfcad321d8385c0dda8ee36aff9dbbe7a18f7bf1/fineract-provider/src/main/java/org/apache/fineract/portfolio/loanproduct/data/LoanProductData.java",
                "status": "modified",
                "changes": 107,
                "additions": 53,
                "contents_url": "https://api.github.com/repos/apache/fineract/contents/fineract-provider/src/main/java/org/apache/fineract/portfolio/loanproduct/data/LoanProductData.java?ref=dfcad321d8385c0dda8ee36aff9dbbe7a18f7bf1",
                "patch": "@@ -49,6 +49,7 @@\n import java.util.Collection;\n import java.util.List;\n import java.util.Map;\n+import net.sf.ehcache.util.FindBugsSuppressWarnings;\n \n /**\n  * Immutable data object to represent loan products.\n@@ -473,10 +474,10 @@ public static LoanProductData sensibleDefaultsForNewLoanProductCreation() {\n     }\n \n     public static LoanProductData loanProductWithFloatingRates(final Long id, final String name,\n-            final boolean isLinkedToFloatingInterestRates, final Integer floatingRateId, final String floatingRateName,\n-            final BigDecimal interestRateDifferential, final BigDecimal minDifferentialLendingRate,\n-            final BigDecimal defaultDifferentialLendingRate, final BigDecimal maxDifferentialLendingRate,\n-            final boolean isFloatingInterestRateCalculationAllowed) {\n+                                                               final boolean isLinkedToFloatingInterestRates, final Integer floatingRateId, final String floatingRateName,\n+                                                               final BigDecimal interestRateDifferential, final BigDecimal minDifferentialLendingRate,\n+                                                               final BigDecimal defaultDifferentialLendingRate, final BigDecimal maxDifferentialLendingRate,\n+                                                               final boolean isFloatingInterestRateCalculationAllowed) {\n         final String shortName = null;\n         final String description = null;\n         final CurrencyData currency = CurrencyData.blank();\n@@ -567,9 +568,9 @@ public static LoanProductData loanProductWithFloatingRates(final Long id, final\n     }\n \n     public static LoanProductData withAccountingDetails(final LoanProductData productData, final Map<String, Object> accountingMappings,\n-            final Collection<PaymentTypeToGLAccountMapper> paymentChannelToFundSourceMappings,\n-            final Collection<ChargeToGLAccountMapper> feeToGLAccountMappings,\n-            final Collection<ChargeToGLAccountMapper> penaltyToGLAccountMappings) {\n+                                                        final Collection<PaymentTypeToGLAccountMapper> paymentChannelToFundSourceMappings,\n+                                                        final Collection<ChargeToGLAccountMapper> feeToGLAccountMappings,\n+                                                        final Collection<ChargeToGLAccountMapper> penaltyToGLAccountMappings) {\n         productData.accountingMappings = accountingMappings;\n         productData.paymentChannelToFundSourceMappings = paymentChannelToFundSourceMappings;\n         productData.feeToIncomeAccountMappings = feeToGLAccountMappings;\n@@ -578,30 +579,30 @@ public static LoanProductData withAccountingDetails(final LoanProductData produc\n     }\n \n     public LoanProductData(final Long id, final String name, final String shortName, final String description, final CurrencyData currency,\n-            final BigDecimal principal, final BigDecimal minPrincipal, final BigDecimal maxPrincipal, final BigDecimal tolerance,\n-            final Integer numberOfRepayments, final Integer minNumberOfRepayments, final Integer maxNumberOfRepayments,\n-            final Integer repaymentEvery, final BigDecimal interestRatePerPeriod, final BigDecimal minInterestRatePerPeriod,\n-            final BigDecimal maxInterestRatePerPeriod, final BigDecimal annualInterestRate, final EnumOptionData repaymentFrequencyType,\n-            final EnumOptionData interestRateFrequencyType, final EnumOptionData amortizationType, final EnumOptionData interestType,\n-            final EnumOptionData interestCalculationPeriodType, final Boolean allowPartialPeriodInterestCalcualtion, final Long fundId,\n-            final String fundName, final Long transactionProcessingStrategyId, final String transactionProcessingStrategyName,\n-            final Integer graceOnPrincipalPayment, final Integer recurringMoratoriumOnPrincipalPeriods, final Integer graceOnInterestPayment, final Integer graceOnInterestCharged,\n-            final Collection<ChargeData> charges, final EnumOptionData accountingType, final boolean includeInBorrowerCycle, boolean useBorrowerCycle, final LocalDate startDate,\n-            final LocalDate closeDate, final String status, final String externalId,\n-            Collection<LoanProductBorrowerCycleVariationData> principalVariations,\n-            Collection<LoanProductBorrowerCycleVariationData> interestRateVariations,\n-            Collection<LoanProductBorrowerCycleVariationData> numberOfRepaymentVariations, Boolean multiDisburseLoan,\n-            Integer maxTrancheCount, BigDecimal outstandingLoanBalance, final Integer graceOnArrearsAgeing, final Integer overdueDaysForNPA,\n-            final EnumOptionData daysInMonthType, final EnumOptionData daysInYearType, final boolean isInterestRecalculationEnabled, final LoanProductInterestRecalculationData interestRecalculationData,\n-            final Integer minimumDaysBetweenDisbursalAndFirstRepayment, boolean holdGuaranteeFunds,\n-            final LoanProductGuaranteeData loanProductGuaranteeData, final BigDecimal principalThresholdForLastInstallment,\n-            final boolean accountMovesOutOfNPAOnlyOnArrearsCompletion, boolean canDefineInstallmentAmount,\n-            Integer installmentAmountInMultiplesOf, LoanProductConfigurableAttributes allowAttributeOverrides,\n-            boolean isLinkedToFloatingInterestRates, Integer floatingRateId, String floatingRateName, BigDecimal interestRateDifferential,\n-            BigDecimal minDifferentialLendingRate, BigDecimal defaultDifferentialLendingRate, BigDecimal maxDifferentialLendingRate,\n-            boolean isFloatingInterestRateCalculationAllowed, final boolean isVariableInstallmentsAllowed,\n-            final Integer minimumGapBetweenInstallments, final Integer maximumGapBetweenInstallments,\n-            final boolean syncExpectedWithDisbursementDate, final boolean canUseForTopup, final boolean isEqualAmortization) {\n+                           final BigDecimal principal, final BigDecimal minPrincipal, final BigDecimal maxPrincipal, final BigDecimal tolerance,\n+                           final Integer numberOfRepayments, final Integer minNumberOfRepayments, final Integer maxNumberOfRepayments,\n+                           final Integer repaymentEvery, final BigDecimal interestRatePerPeriod, final BigDecimal minInterestRatePerPeriod,\n+                           final BigDecimal maxInterestRatePerPeriod, final BigDecimal annualInterestRate, final EnumOptionData repaymentFrequencyType,\n+                           final EnumOptionData interestRateFrequencyType, final EnumOptionData amortizationType, final EnumOptionData interestType,\n+                           final EnumOptionData interestCalculationPeriodType, final Boolean allowPartialPeriodInterestCalcualtion, final Long fundId,\n+                           final String fundName, final Long transactionProcessingStrategyId, final String transactionProcessingStrategyName,\n+                           final Integer graceOnPrincipalPayment, final Integer recurringMoratoriumOnPrincipalPeriods, final Integer graceOnInterestPayment, final Integer graceOnInterestCharged,\n+                           final Collection<ChargeData> charges, final EnumOptionData accountingType, final boolean includeInBorrowerCycle, boolean useBorrowerCycle, final LocalDate startDate,\n+                           final LocalDate closeDate, final String status, final String externalId,\n+                           Collection<LoanProductBorrowerCycleVariationData> principalVariations,\n+                           Collection<LoanProductBorrowerCycleVariationData> interestRateVariations,\n+                           Collection<LoanProductBorrowerCycleVariationData> numberOfRepaymentVariations, Boolean multiDisburseLoan,\n+                           Integer maxTrancheCount, BigDecimal outstandingLoanBalance, final Integer graceOnArrearsAgeing, final Integer overdueDaysForNPA,\n+                           final EnumOptionData daysInMonthType, final EnumOptionData daysInYearType, final boolean isInterestRecalculationEnabled, final LoanProductInterestRecalculationData interestRecalculationData,\n+                           final Integer minimumDaysBetweenDisbursalAndFirstRepayment, boolean holdGuaranteeFunds,\n+                           final LoanProductGuaranteeData loanProductGuaranteeData, final BigDecimal principalThresholdForLastInstallment,\n+                           final boolean accountMovesOutOfNPAOnlyOnArrearsCompletion, boolean canDefineInstallmentAmount,\n+                           Integer installmentAmountInMultiplesOf, LoanProductConfigurableAttributes allowAttributeOverrides,\n+                           boolean isLinkedToFloatingInterestRates, Integer floatingRateId, String floatingRateName, BigDecimal interestRateDifferential,\n+                           BigDecimal minDifferentialLendingRate, BigDecimal defaultDifferentialLendingRate, BigDecimal maxDifferentialLendingRate,\n+                           boolean isFloatingInterestRateCalculationAllowed, final boolean isVariableInstallmentsAllowed,\n+                           final Integer minimumGapBetweenInstallments, final Integer maximumGapBetweenInstallments,\n+                           final boolean syncExpectedWithDisbursementDate, final boolean canUseForTopup, final boolean isEqualAmortization) {\n         this.id = id;\n         this.name = name;\n         this.shortName = shortName;\n@@ -710,18 +711,18 @@ public LoanProductData(final Long id, final String name, final String shortName,\n     }\n \n     public LoanProductData(final LoanProductData productData, final Collection<ChargeData> chargeOptions,\n-            final Collection<ChargeData> penaltyOptions, final Collection<PaymentTypeData> paymentTypeOptions,\n-            final Collection<CurrencyData> currencyOptions, final List<EnumOptionData> amortizationTypeOptions,\n-            final List<EnumOptionData> interestTypeOptions, final List<EnumOptionData> interestCalculationPeriodTypeOptions,\n-            final List<EnumOptionData> repaymentFrequencyTypeOptions, final List<EnumOptionData> interestRateFrequencyTypeOptions,\n-            final Collection<FundData> fundOptions, final Collection<TransactionProcessingStrategyData> transactionStrategyOptions,\n-            final Map<String, List<GLAccountData>> accountingMappingOptions, final List<EnumOptionData> accountingRuleOptions,\n-            final List<EnumOptionData> valueConditionTypeOptions, final List<EnumOptionData> daysInMonthTypeOptions,\n-            final List<EnumOptionData> daysInYearTypeOptions, final List<EnumOptionData> interestRecalculationCompoundingTypeOptions,\n-            final List<EnumOptionData> rescheduleStrategyTypeOptions, final List<EnumOptionData> interestRecalculationFrequencyTypeOptions,\n-            final List<EnumOptionData> preCloseInterestCalculationStrategyOptions, final List<FloatingRateData> floatingRateOptions,\n-            final List<EnumOptionData> interestRecalculationNthDayTypeOptions,\n-            final List<EnumOptionData> interestRecalculationDayOfWeekTypeOptions) {\n+                           final Collection<ChargeData> penaltyOptions, final Collection<PaymentTypeData> paymentTypeOptions,\n+                           final Collection<CurrencyData> currencyOptions, final List<EnumOptionData> amortizationTypeOptions,\n+                           final List<EnumOptionData> interestTypeOptions, final List<EnumOptionData> interestCalculationPeriodTypeOptions,\n+                           final List<EnumOptionData> repaymentFrequencyTypeOptions, final List<EnumOptionData> interestRateFrequencyTypeOptions,\n+                           final Collection<FundData> fundOptions, final Collection<TransactionProcessingStrategyData> transactionStrategyOptions,\n+                           final Map<String, List<GLAccountData>> accountingMappingOptions, final List<EnumOptionData> accountingRuleOptions,\n+                           final List<EnumOptionData> valueConditionTypeOptions, final List<EnumOptionData> daysInMonthTypeOptions,\n+                           final List<EnumOptionData> daysInYearTypeOptions, final List<EnumOptionData> interestRecalculationCompoundingTypeOptions,\n+                           final List<EnumOptionData> rescheduleStrategyTypeOptions, final List<EnumOptionData> interestRecalculationFrequencyTypeOptions,\n+                           final List<EnumOptionData> preCloseInterestCalculationStrategyOptions, final List<FloatingRateData> floatingRateOptions,\n+                           final List<EnumOptionData> interestRecalculationNthDayTypeOptions,\n+                           final List<EnumOptionData> interestRecalculationDayOfWeekTypeOptions) {\n         this.id = productData.id;\n         this.name = productData.name;\n         this.shortName = productData.shortName;\n@@ -1134,17 +1135,15 @@ private Integer getRecalculationCompoundingFrequencyInterval() {\n         if (isInterestRecalculationEnabled()) { return this.interestRecalculationData.getRecalculationCompoundingFrequencyInterval(); }\n         return null;\n     }\n+\n+    @FindBugsSuppressWarnings(\"NP_BOOLEAN_RETURN_NULL\")\n     public Boolean isCompoundingToBePostedAsTransaction() {\n-        if (isInterestRecalculationEnabled()) {\n-            return this.interestRecalculationData.isCompoundingToBePostedAsTransaction();\n-        } else {\n-            return !this.interestRecalculationData.isCompoundingToBePostedAsTransaction();\n-        }\n+        return isInterestRecalculationEnabled() ? this.interestRecalculationData.isCompoundingToBePostedAsTransaction() : null;\n     }\n+\n+    @FindBugsSuppressWarnings(\"NP_BOOLEAN_RETURN_NULL\")\n     public Boolean allowCompoundingOnEod() {\n-        if (isInterestRecalculationEnabled()) {\n-            return this.interestRecalculationData.allowCompoundingOnEod();\n-        } return !this.interestRecalculationData.allowCompoundingOnEod();\n+        return isInterestRecalculationEnabled() ? this.interestRecalculationData.allowCompoundingOnEod() : null;\n     }\n \n     public boolean canDefineInstallmentAmount() {\n@@ -1200,9 +1199,9 @@ public boolean syncExpectedWithDisbursementDate() {\n         return syncExpectedWithDisbursementDate;\n     }\n \n-        public boolean canUseForTopup() {\n-            return this.canUseForTopup;\n-        }\n+    public boolean canUseForTopup() {\n+        return this.canUseForTopup;\n+    }\n \n     public BigDecimal getInterestRateDifferential() {\n         return this.interestRateDifferential;",
                "deletions": 54
            }
        ]
    },
    {
        "repo": "fineract",
        "message": "fix potential NPE in JobParameter.equals() (FINERACT-428)",
        "commit": "https://github.com/apache/fineract/commit/030d9c8bd8808f29f928e6018c7655474c13fc8f",
        "parent": "https://github.com/apache/fineract/commit/0da4cdd4121a411f86b2ea0241e5d880ad37645c",
        "bug_id": "fineract_4",
        "file": [
            {
                "sha": "bf573e952e54b964f6dbd67b44561974a22ce3b2",
                "filename": "fineract-provider/src/main/java/org/apache/fineract/infrastructure/jobs/domain/JobParameter.java",
                "blob_url": "https://github.com/apache/fineract/blob/030d9c8bd8808f29f928e6018c7655474c13fc8f/fineract-provider/src/main/java/org/apache/fineract/infrastructure/jobs/domain/JobParameter.java",
                "raw_url": "https://github.com/apache/fineract/raw/030d9c8bd8808f29f928e6018c7655474c13fc8f/fineract-provider/src/main/java/org/apache/fineract/infrastructure/jobs/domain/JobParameter.java",
                "status": "modified",
                "changes": 11,
                "additions": 6,
                "contents_url": "https://api.github.com/repos/apache/fineract/contents/fineract-provider/src/main/java/org/apache/fineract/infrastructure/jobs/domain/JobParameter.java?ref=030d9c8bd8808f29f928e6018c7655474c13fc8f",
                "patch": "@@ -18,12 +18,13 @@\n  */\n package org.apache.fineract.infrastructure.jobs.domain;\n \n-import org.apache.fineract.infrastructure.core.domain.AbstractPersistableCustom;\n+import java.util.Objects;\n \n import javax.persistence.Column;\n import javax.persistence.Entity;\n import javax.persistence.Table;\n-import java.util.Objects;\n+\n+import org.apache.fineract.infrastructure.core.domain.AbstractPersistableCustom;\n \n @Entity\n @Table(name = \"job_parameters\")\n@@ -78,9 +79,9 @@ public void setParameterValue(final String parameterValue) {\n     public boolean equals(Object obj) {\n         if (!obj.getClass().equals(getClass())) return false;\n         JobParameter jobParameter = (JobParameter) obj;\n-        return jobParameter.getJobId().equals(this.getJobId())\n-                && jobParameter.getParameterName().equals(this.getParameterName())\n-                && jobParameter.getParameterValue().equals(this.getParameterValue());\n+        return Objects.equals(jobParameter.getJobId(), this.getJobId())\n+                && Objects.equals(jobParameter.getParameterName(), this.getParameterName())\n+                && Objects.equals(jobParameter.getParameterValue(), this.getParameterValue());\n     }\n \n     @Override",
                "deletions": 5
            }
        ]
    },
    {
        "repo": "fineract",
        "message": "use SpotBugs & fix over 300 high priority rule violations (FINERACT-702)\n\nThis PR also serves as a base solution for upcoming FINERACT-712 and\nFINERACT-696.  It includes using Objects.equals() to prevent NPEs, and\nadding gradle check to run SpotBugs on Travis CI.\n\nPS: SpotBugs is the successor to (and same code as) FindBugs.",
        "commit": "https://github.com/apache/fineract/commit/af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1",
        "parent": "https://github.com/apache/fineract/commit/75f7c5947d96c04eb36ffc129b04d54c3b5467ef",
        "bug_id": "fineract_5",
        "file": [
            {
                "sha": "ced6823c08c2cf60272392b69e1480d05e75aa72",
                "filename": ".travis.yml",
                "blob_url": "https://github.com/apache/fineract/blob/af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1/.travis.yml",
                "raw_url": "https://github.com/apache/fineract/raw/af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1/.travis.yml",
                "status": "modified",
                "changes": 2,
                "additions": 1,
                "contents_url": "https://api.github.com/repos/apache/fineract/contents/.travis.yml?ref=af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1",
                "patch": "@@ -61,6 +61,6 @@ script:\n # using \"&&\" instead of several \"-\" means that integrationTest does not run if test fails,\n # and Docker test does not run if integration test fails, which makes PR failure easier to understand.\n # @see https://docs.travis-ci.com/user/job-lifecycle/#customizing-the-build-phase\n-  - ./gradlew --console=plain licenseMain licenseTest licenseIntegrationTest test  &&  ./gradlew --console=plain integrationTest  &&  sudo service mysql stop  &&  docker-compose build  &&  docker-compose up -d  &&  sleep 30s  &&  http --verify=no --timeout 240 --check-status get https://localhost:8443/fineract-provider/actuator/health || docker logs fineract_fineract-server_1\n+  - ./gradlew --console=plain licenseMain licenseTest licenseIntegrationTest check  &&  ./gradlew --console=plain integrationTest  &&  sudo service mysql stop  &&  docker-compose build  &&  docker-compose up -d  &&  sleep 30s  &&  http --verify=no --timeout 240 --check-status get https://localhost:8443/fineract-provider/actuator/health || docker logs fineract_fineract-server_1\n # We stop the mysql system service when running the Docker test to avoid port 3306 conflicts (unless we run the mysql in docker-compose on another port; req. FINERACT-773)\n # The || docker logs lets use see the root cause in case of failures",
                "deletions": 1
            },
            {
                "sha": "934017ea37bf157b01bca0123555e99234cf4ded",
                "filename": "fineract-provider/build.gradle",
                "blob_url": "https://github.com/apache/fineract/blob/af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1/fineract-provider/build.gradle",
                "raw_url": "https://github.com/apache/fineract/raw/af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1/fineract-provider/build.gradle",
                "status": "modified",
                "changes": 15,
                "additions": 14,
                "contents_url": "https://api.github.com/repos/apache/fineract/contents/fineract-provider/build.gradle?ref=af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1",
                "patch": "@@ -42,6 +42,10 @@ buildscript {\n      classpath \"org.apache.openjpa:openjpa:$openJPAVersion\"\n      classpath 'com.radcortez.gradle:openjpa-gradle-plugin:3.1.0'\n      classpath 'gradle.plugin.org.nosphere.apache:creadur-rat-gradle:0.2.2'\n+      classpath \"com.github.spotbugs:spotbugs-gradle-plugin:2.0.1\"\n+      //Use Guava version 23+ as a workaround to spotbug intergration. \n+      // See: https://github.com/spotbugs/spotbugs-gradle-plugin/issues/128#issuecomment-535864882\n+      classpath 'com.google.guava:guava:28.1-jre' \n   }\n }\n \n@@ -57,6 +61,7 @@ apply plugin: 'com.bmuschko.tomcat'\n apply plugin: 'project-report'\n apply plugin: 'java-library'\n apply plugin: 'openjpa'\n+apply plugin: \"com.github.spotbugs\"\n \n // apply plugin: 'pmd'\n // apply plugin: 'findbugs'\n@@ -73,7 +78,7 @@ dependencyManagement {\n      dependency 'com.squareup.okhttp:okhttp:2.0.0'\n      dependency 'com.squareup.okhttp:okhttp-urlconnection:2.0.0'\n      dependency 'com.google.code.gson:gson:+'\n-     dependency 'com.google.guava:guava:15.0'\n+     dependency 'com.google.guava:guava:28.1-jre'\n      dependency 'joda-time:joda-time:+'\n      dependency 'org.apache.commons:commons-email:1.3.3'\n      dependency 'org.apache.commons:commons-lang3:+'\n@@ -457,6 +462,7 @@ task integrationTest(type:Test) {\n }\n \n \n+import com.github.spotbugs.SpotBugsTask\n import groovy.sql.Sql\n \n repositories {\n@@ -522,3 +528,10 @@ springBoot {\n bootWar {\n     mainClassName = 'org.apache.fineract.ServerWithMariaDB4jApplication'\n }\n+\n+// To generate an HTML report instead of XML\n+tasks.withType(SpotBugsTask) {\n+    reports.xml.enabled = false\n+    reports.html.enabled = true\n+    reportLevel = \"high\"\n+}",
                "deletions": 1
            },
            {
                "sha": "04eb3a4f00352f70d99052064e40bde91cb1e974",
                "filename": "fineract-provider/dependencies.gradle",
                "blob_url": "https://github.com/apache/fineract/blob/af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1/fineract-provider/dependencies.gradle",
                "raw_url": "https://github.com/apache/fineract/raw/af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1/fineract-provider/dependencies.gradle",
                "status": "modified",
                "changes": 2,
                "additions": 1,
                "contents_url": "https://api.github.com/repos/apache/fineract/contents/fineract-provider/dependencies.gradle?ref=af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1",
                "patch": "@@ -44,7 +44,7 @@ dependencies {\n             'com.squareup.retrofit:retrofit'\n     )\n     implementation(\n-            // 'ch.vorburger.mariaDB4j:mariaDB4j'\n+            //'ch.vorburger.mariaDB4j:mariaDB4j:2.4.0',\n \n             'org.springframework.boot:spring-boot-starter-web',\n             'org.springframework.boot:spring-boot-starter-security',",
                "deletions": 1
            },
            {
                "sha": "80e51cc83ca97088b2d9f8be1cf06442fb882c0b",
                "filename": "fineract-provider/src/integrationTest/java/org/apache/fineract/integrationtests/CenterIntegrationTest.java",
                "blob_url": "https://github.com/apache/fineract/blob/af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1/fineract-provider/src/integrationTest/java/org/apache/fineract/integrationtests/CenterIntegrationTest.java",
                "raw_url": "https://github.com/apache/fineract/raw/af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1/fineract-provider/src/integrationTest/java/org/apache/fineract/integrationtests/CenterIntegrationTest.java",
                "status": "modified",
                "changes": 27,
                "additions": 13,
                "contents_url": "https://api.github.com/repos/apache/fineract/contents/fineract-provider/src/integrationTest/java/org/apache/fineract/integrationtests/CenterIntegrationTest.java?ref=af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1",
                "patch": "@@ -18,13 +18,12 @@\n  */\n package org.apache.fineract.integrationtests;\n \n-import static org.junit.Assert.assertEquals;\n-\n-import java.sql.Timestamp;\n-import java.util.ArrayList;\n-import java.util.Arrays;\n-import java.util.HashMap;\n-\n+import com.google.gson.Gson;\n+import com.jayway.restassured.builder.RequestSpecBuilder;\n+import com.jayway.restassured.builder.ResponseSpecBuilder;\n+import com.jayway.restassured.http.ContentType;\n+import com.jayway.restassured.specification.RequestSpecification;\n+import com.jayway.restassured.specification.ResponseSpecification;\n import org.apache.fineract.integrationtests.common.CenterDomain;\n import org.apache.fineract.integrationtests.common.CenterHelper;\n import org.apache.fineract.integrationtests.common.OfficeHelper;\n@@ -34,12 +33,12 @@\n import org.junit.Before;\n import org.junit.Test;\n \n-import com.google.gson.Gson;\n-import com.jayway.restassured.builder.RequestSpecBuilder;\n-import com.jayway.restassured.builder.ResponseSpecBuilder;\n-import com.jayway.restassured.http.ContentType;\n-import com.jayway.restassured.specification.RequestSpecification;\n-import com.jayway.restassured.specification.ResponseSpecification;\n+import java.sql.Timestamp;\n+import java.util.ArrayList;\n+import java.util.Arrays;\n+import java.util.HashMap;\n+\n+import static org.junit.Assert.assertEquals;\n \n public class CenterIntegrationTest {\n \n@@ -156,7 +155,7 @@ public void testCenterUpdate() {\n         Assert.assertNotNull(response);\n         Assert.assertEquals(newName, response.get(\"name\"));\n         Assert.assertEquals(newExternalId, response.get(\"externalId\"));\n-        Assert.assertEquals(newStaffId, response.get(\"staffId\"));\n+        Assert.assertEquals(Integer.valueOf(newStaffId), Integer.valueOf(response.get(\"staffId\").toString()));\n \n         CenterDomain center = CenterHelper.retrieveByID(resourceId, requestSpec, responseSpec);\n         Assert.assertNotNull(center);",
                "deletions": 14
            },
            {
                "sha": "c6aede494991890bbaf5e6c497751799cbeb1efa",
                "filename": "fineract-provider/src/integrationTest/java/org/apache/fineract/integrationtests/ClientLoanIntegrationTest.java",
                "blob_url": "https://github.com/apache/fineract/blob/af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1/fineract-provider/src/integrationTest/java/org/apache/fineract/integrationtests/ClientLoanIntegrationTest.java",
                "raw_url": "https://github.com/apache/fineract/raw/af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1/fineract-provider/src/integrationTest/java/org/apache/fineract/integrationtests/ClientLoanIntegrationTest.java",
                "status": "modified",
                "changes": 53,
                "additions": 22,
                "contents_url": "https://api.github.com/repos/apache/fineract/contents/fineract-provider/src/integrationTest/java/org/apache/fineract/integrationtests/ClientLoanIntegrationTest.java?ref=af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1",
                "patch": "@@ -18,27 +18,17 @@\n  */\n package org.apache.fineract.integrationtests;\n \n-import static org.junit.Assert.assertEquals;\n-\n-import java.math.BigDecimal;\n-import java.text.DateFormat;\n-import java.text.DecimalFormat;\n-import java.text.SimpleDateFormat;\n-import java.util.ArrayList;\n-import java.util.Arrays;\n-import java.util.Calendar;\n-import java.util.HashMap;\n-import java.util.List;\n-import java.util.Map;\n-\n+import com.google.gson.JsonObject;\n+import com.jayway.restassured.builder.RequestSpecBuilder;\n+import com.jayway.restassured.builder.ResponseSpecBuilder;\n+import com.jayway.restassured.http.ContentType;\n+import com.jayway.restassured.path.json.JsonPath;\n+import com.jayway.restassured.specification.RequestSpecification;\n+import com.jayway.restassured.specification.ResponseSpecification;\n import org.apache.fineract.integrationtests.common.ClientHelper;\n import org.apache.fineract.integrationtests.common.SchedulerJobHelper;\n import org.apache.fineract.integrationtests.common.Utils;\n-import org.apache.fineract.integrationtests.common.accounting.Account;\n-import org.apache.fineract.integrationtests.common.accounting.AccountHelper;\n-import org.apache.fineract.integrationtests.common.accounting.JournalEntry;\n-import org.apache.fineract.integrationtests.common.accounting.JournalEntryHelper;\n-import org.apache.fineract.integrationtests.common.accounting.PeriodicAccrualAccountingHelper;\n+import org.apache.fineract.integrationtests.common.accounting.*;\n import org.apache.fineract.integrationtests.common.charges.ChargesHelper;\n import org.apache.fineract.integrationtests.common.loans.LoanApplicationTestBuilder;\n import org.apache.fineract.integrationtests.common.loans.LoanProductTestBuilder;\n@@ -53,13 +43,13 @@\n import org.junit.Before;\n import org.junit.Test;\n \n-import com.google.gson.JsonObject;\n-import com.jayway.restassured.builder.RequestSpecBuilder;\n-import com.jayway.restassured.builder.ResponseSpecBuilder;\n-import com.jayway.restassured.http.ContentType;\n-import com.jayway.restassured.path.json.JsonPath;\n-import com.jayway.restassured.specification.RequestSpecification;\n-import com.jayway.restassured.specification.ResponseSpecification;\n+import java.math.BigDecimal;\n+import java.text.DateFormat;\n+import java.text.DecimalFormat;\n+import java.text.SimpleDateFormat;\n+import java.util.*;\n+\n+import static org.junit.Assert.assertEquals;\n \n /**\n  * Client Loan Integration Test for checking Loan Application Repayments\n@@ -5080,24 +5070,25 @@ private Integer applyForLoanApplicationWithProductConfigurationAsFalse(final Int\n     }\n \n     public Integer getDayOfWeek(Calendar date) {\n-        Integer dayOfWeek = null;\n+        int dayOfWeek = 0;\n         if (null != date) {\n             dayOfWeek = date.get(Calendar.DAY_OF_WEEK) - 1;\n-            if (dayOfWeek.compareTo(0) == 0) {\n+            if (dayOfWeek == 0) {\n                 dayOfWeek = 7;\n             }\n         }\n-        return dayOfWeek;\n+        return Integer.valueOf(dayOfWeek);\n     }\n \n     public Integer getDayOfMonth(Calendar date) {\n-        Integer dayOfMonth = null;\n+        int dayOfMonth = 0;\n         if (null != date) {\n             dayOfMonth = date.get(Calendar.DAY_OF_MONTH);\n-            if (dayOfMonth.compareTo(28) > 0) {\n+            if (dayOfMonth > 28) {\n                 dayOfMonth = 28;\n             }\n         }\n-        return dayOfMonth;\n+\n+        return Integer.valueOf(dayOfMonth);\n     }\n }\n\\ No newline at end of file",
                "deletions": 31
            },
            {
                "sha": "17230457818ae104243ec297f5676a491ed14516",
                "filename": "fineract-provider/src/integrationTest/java/org/apache/fineract/integrationtests/ClientSavingsIntegrationTest.java",
                "blob_url": "https://github.com/apache/fineract/blob/af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1/fineract-provider/src/integrationTest/java/org/apache/fineract/integrationtests/ClientSavingsIntegrationTest.java",
                "raw_url": "https://github.com/apache/fineract/raw/af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1/fineract-provider/src/integrationTest/java/org/apache/fineract/integrationtests/ClientSavingsIntegrationTest.java",
                "status": "modified",
                "changes": 64,
                "additions": 23,
                "contents_url": "https://api.github.com/repos/apache/fineract/contents/fineract-provider/src/integrationTest/java/org/apache/fineract/integrationtests/ClientSavingsIntegrationTest.java?ref=af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1",
                "patch": "@@ -18,28 +18,13 @@\n  */\n package org.apache.fineract.integrationtests;\n \n-import static org.junit.Assert.assertEquals;\n-\n-import java.math.BigDecimal;\n-import java.text.DateFormat;\n-import java.text.DecimalFormat;\n-import java.text.DecimalFormatSymbols;\n-import java.text.SimpleDateFormat;\n-import java.util.ArrayList;\n-import java.util.Arrays;\n-import java.util.Calendar;\n-import java.util.Date;\n-import java.util.HashMap;\n-import java.util.List;\n-import java.util.Locale;\n-\n+import com.jayway.restassured.builder.RequestSpecBuilder;\n+import com.jayway.restassured.builder.ResponseSpecBuilder;\n+import com.jayway.restassured.http.ContentType;\n+import com.jayway.restassured.specification.RequestSpecification;\n+import com.jayway.restassured.specification.ResponseSpecification;\n import org.apache.fineract.infrastructure.core.service.DateUtils;\n-import org.apache.fineract.integrationtests.common.ClientHelper;\n-import org.apache.fineract.integrationtests.common.CommonConstants;\n-import org.apache.fineract.integrationtests.common.SchedulerJobHelper;\n-import org.apache.fineract.integrationtests.common.TaxComponentHelper;\n-import org.apache.fineract.integrationtests.common.TaxGroupHelper;\n-import org.apache.fineract.integrationtests.common.Utils;\n+import org.apache.fineract.integrationtests.common.*;\n import org.apache.fineract.integrationtests.common.charges.ChargesHelper;\n import org.apache.fineract.integrationtests.common.savings.SavingsAccountHelper;\n import org.apache.fineract.integrationtests.common.savings.SavingsProductHelper;\n@@ -52,16 +37,19 @@\n import org.junit.Before;\n import org.junit.Test;\n \n-import com.jayway.restassured.builder.RequestSpecBuilder;\n-import com.jayway.restassured.builder.ResponseSpecBuilder;\n-import com.jayway.restassured.http.ContentType;\n-import com.jayway.restassured.specification.RequestSpecification;\n-import com.jayway.restassured.specification.ResponseSpecification;\n+import java.math.BigDecimal;\n+import java.text.DateFormat;\n+import java.text.DecimalFormat;\n+import java.text.DecimalFormatSymbols;\n+import java.text.SimpleDateFormat;\n+import java.util.*;\n+\n+import static org.junit.Assert.assertEquals;\n \n /**\n  * Client Savings Integration Test for checking Savings Application.\n  */\n-@SuppressWarnings({ \"rawtypes\", \"unused\" })\n+@SuppressWarnings({ \"rawtypes\"})\n public class ClientSavingsIntegrationTest {\n \n     public static final String DEPOSIT_AMOUNT = \"2000\";\n@@ -880,8 +868,7 @@ public void testSavingsAccountPostInterestOnLastDayWithOverdraft() {\n \t\tfinal String WITHDRAWAL_DATE = dateFormat.format(todaysDate.getTime());\n \t\tFloat balance = Float.valueOf(zeroOpeningBalance);\n \n-\t\tDateFormat transactionDateFormat = new SimpleDateFormat(\"dd MMMM yyyy\",\n-\t\t\t\tLocale.US);\n+\t\t//DateFormat transactionDateFormat = new SimpleDateFormat(\"dd MMMM yyyy\",Locale.US);\n \t\tCalendar transactionDate = Calendar.getInstance();\n \t\ttransactionDate.set(Calendar.DAY_OF_MONTH, 2);\n \t\tString TRANSACTION_DATE = dateFormat.format(transactionDate.getTime());\n@@ -1011,8 +998,7 @@ public void testSavingsAccountPostInterestOnLastDayWithOverdraft() {\n \t\tSystem.out\n \t\t\t\t.println(\"-----Post Interest As on Successfully Worked-------\");\n \n-\t\tDateFormat transactionFormat = new SimpleDateFormat(\"dd MMMM yyyy\",\n-\t\t\t\tLocale.US);\n+\t\t//DateFormat transactionFormat = new SimpleDateFormat(\"dd MMMM yyyy\", Locale.US);\n \t\tCalendar transactionCalendarDateFormat = Calendar.getInstance();\n \t\ttransactionCalendarDateFormat.add(Calendar.DAY_OF_MONTH, 0);\n \t\ttransactionDate.set(Calendar.DAY_OF_MONTH, 22);\n@@ -1217,8 +1203,7 @@ public void testSavingsAccountPostInterestOnLastDayWithdrawalWithOverdraft() {\n \t\tfinal String WITHDRAWAL_DATE = dateFormat.format(todaysDate.getTime());\n \t\tFloat balance = Float.valueOf(zeroOpeningBalance);\n \n-\t\tDateFormat transactionDateFormat = new SimpleDateFormat(\"dd MMMM yyyy\",\n-\t\t\t\tLocale.US);\n+\t\t//DateFormat transactionDateFormat = new SimpleDateFormat(\"dd MMMM yyyy\", Locale.US);\n \t\tCalendar transactionDate = Calendar.getInstance();\n \t\ttransactionDate.set(Calendar.DAY_OF_MONTH, 2);\n \t\tString TRANSACTION_DATE = dateFormat.format(transactionDate.getTime());\n@@ -1356,8 +1341,7 @@ public void testSavingsAccountPostInterestOnLastDayWithdrawalWithOverdraft() {\n \t\tSystem.out\n \t\t\t\t.println(\"-----Post Interest As on Successfully Worked-------\");\n \n-\t\tDateFormat transactionFormat = new SimpleDateFormat(\"dd MMMM yyyy\",\n-\t\t\t\tLocale.US);\n+\t\t//DateFormat transactionFormat = new SimpleDateFormat(\"dd MMMM yyyy\", Locale.US);\n \t\tCalendar transactionCalendarDateFormat = Calendar.getInstance();\n \t\ttransactionCalendarDateFormat.add(Calendar.DAY_OF_MONTH, 0);\n \t\ttransactionDate.set(Calendar.DAY_OF_MONTH, 22);\n@@ -1621,7 +1605,7 @@ public void testSavingsAccountPostInterestWithOverdraft() {\n         DecimalFormat decimalFormat = new DecimalFormat(\"\", new DecimalFormatSymbols(Locale.US));\n         decimalFormat.applyPattern(\"#.###\");\n         interestPosted = new Float(decimalFormat.format(interestPosted));\n-        actualInterestPosted = new Float(decimalFormat.format(accountDetailsPostInterestPosted));\n+        //actualInterestPosted = new Float(decimalFormat.format(accountDetailsPostInterestPosted));\n         assertEquals(\"Verifying interest posted\", interestPosted, accountDetailsPostInterestPosted);\n         System.out.println(\"------Post Interest As On After doing a post interest Successfully worked--------\");\n \n@@ -1651,12 +1635,11 @@ public void testSavingsAccountPostInterestWithOverdraft() {\n \n     }\n \n-    @SuppressWarnings(\"unchecked\")\n     @Test\n     public void testPostInterestAsOnSavingsAccountWithOverdraft() {\n         this.savingsAccountHelper = new SavingsAccountHelper(this.requestSpec, this.responseSpec);\n-        final ResponseSpecification errorResponse = new ResponseSpecBuilder().expectStatusCode(400).build();\n-        final SavingsAccountHelper validationErrorHelper = new SavingsAccountHelper(this.requestSpec, errorResponse);\n+        //final ResponseSpecification errorResponse = new ResponseSpecBuilder().expectStatusCode(400).build();\n+        //final SavingsAccountHelper validationErrorHelper = new SavingsAccountHelper(this.requestSpec, errorResponse);\n \n         /***\n          * Create a client to apply for savings account (overdraft account).\n@@ -2243,8 +2226,7 @@ public void testSavingsAccountBlockStatus() {\n     @Test\n     public void testAccountBalanceAfterTransactionReversal() {\n         this.savingsAccountHelper = new SavingsAccountHelper(this.requestSpec, this.responseSpec);\n-        SavingsAccountHelper savingsAccountHelperValidationError = new SavingsAccountHelper(this.requestSpec,\n-                new ResponseSpecBuilder().build());\n+        //SavingsAccountHelper savingsAccountHelperValidationError = new SavingsAccountHelper(this.requestSpec,new ResponseSpecBuilder().build());\n \n         final Integer clientID = ClientHelper.createClient(this.requestSpec, this.responseSpec);\n         Assert.assertNotNull(clientID);",
                "deletions": 41
            },
            {
                "sha": "c7558e852fa9d1f7acb0ca235f91f25598e5ee19",
                "filename": "fineract-provider/src/integrationTest/java/org/apache/fineract/integrationtests/ClientUndoRejectAndWithdrawalIntegrationTest.java",
                "blob_url": "https://github.com/apache/fineract/blob/af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1/fineract-provider/src/integrationTest/java/org/apache/fineract/integrationtests/ClientUndoRejectAndWithdrawalIntegrationTest.java",
                "raw_url": "https://github.com/apache/fineract/raw/af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1/fineract-provider/src/integrationTest/java/org/apache/fineract/integrationtests/ClientUndoRejectAndWithdrawalIntegrationTest.java",
                "status": "modified",
                "changes": 37,
                "additions": 13,
                "contents_url": "https://api.github.com/repos/apache/fineract/contents/fineract-provider/src/integrationTest/java/org/apache/fineract/integrationtests/ClientUndoRejectAndWithdrawalIntegrationTest.java?ref=af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1",
                "patch": "@@ -18,37 +18,26 @@\n  */\n package org.apache.fineract.integrationtests;\n \n-import static org.junit.Assert.assertEquals;\n+import com.jayway.restassured.builder.RequestSpecBuilder;\n+import com.jayway.restassured.builder.ResponseSpecBuilder;\n+import com.jayway.restassured.http.ContentType;\n+import com.jayway.restassured.specification.RequestSpecification;\n+import com.jayway.restassured.specification.ResponseSpecification;\n+import org.apache.fineract.integrationtests.common.ClientHelper;\n+import org.apache.fineract.integrationtests.common.CommonConstants;\n+import org.apache.fineract.integrationtests.common.Utils;\n+import org.junit.Assert;\n+import org.junit.Before;\n+import org.junit.Test;\n \n import java.text.DateFormat;\n import java.text.SimpleDateFormat;\n import java.util.ArrayList;\n import java.util.Calendar;\n import java.util.HashMap;\n import java.util.Locale;\n-import java.util.Random;\n-\n-import org.apache.fineract.infrastructure.core.data.ApiParameterError;\n-import org.apache.fineract.integrationtests.common.ClientHelper;\n-import org.apache.fineract.integrationtests.common.CommonConstants;\n-import org.apache.fineract.integrationtests.common.Utils;\n-import org.apache.fineract.integrationtests.common.loans.LoanStatusChecker;\n-import org.apache.fineract.integrationtests.common.savings.SavingsAccountHelper;\n-import org.apache.fineract.portfolio.client.api.ClientApiConstants;\n-import org.apache.fineract.portfolio.client.domain.Client;\n-import org.apache.fineract.portfolio.client.exception.InvalidClientStateTransitionException;\n-import org.apache.fineract.useradministration.domain.AppUser;\n-import org.joda.time.LocalDate;\n-import org.junit.Assert;\n-import org.junit.Before;\n-import org.junit.Test;\n \n-import com.google.gson.Gson;\n-import com.jayway.restassured.builder.RequestSpecBuilder;\n-import com.jayway.restassured.builder.ResponseSpecBuilder;\n-import com.jayway.restassured.http.ContentType;\n-import com.jayway.restassured.specification.RequestSpecification;\n-import com.jayway.restassured.specification.ResponseSpecification;\n+import static org.junit.Assert.assertEquals;\n \n @SuppressWarnings({ \"unused\" })\n public class ClientUndoRejectAndWithdrawalIntegrationTest {\n@@ -327,7 +316,7 @@ public void testValidateReopenedDate() {\n \t@Test\n \tpublic void testReopenedDate() {\n \t\tfinal ResponseSpecification errorResponse = new ResponseSpecBuilder().expectStatusCode(400).build();\n-\t\tfinal ClientHelper validationErrorHelper = new ClientHelper(this.requestSpec, errorResponse);\n+\t\t//final ClientHelper validationErrorHelper = new ClientHelper(this.requestSpec, errorResponse);\n \n \t\t// CREATE CLIENT\n \t\tthis.clientHelper = new ClientHelper(this.requestSpec, this.responseSpec);",
                "deletions": 24
            },
            {
                "sha": "08a6c94f51385b8713eff64c4b9070ab526a2af0",
                "filename": "fineract-provider/src/integrationTest/java/org/apache/fineract/integrationtests/CurrenciesTest.java",
                "blob_url": "https://github.com/apache/fineract/blob/af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1/fineract-provider/src/integrationTest/java/org/apache/fineract/integrationtests/CurrenciesTest.java",
                "raw_url": "https://github.com/apache/fineract/raw/af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1/fineract-provider/src/integrationTest/java/org/apache/fineract/integrationtests/CurrenciesTest.java",
                "status": "modified",
                "changes": 15,
                "additions": 7,
                "contents_url": "https://api.github.com/repos/apache/fineract/contents/fineract-provider/src/integrationTest/java/org/apache/fineract/integrationtests/CurrenciesTest.java?ref=af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1",
                "patch": "@@ -18,21 +18,20 @@\n  */\n package org.apache.fineract.integrationtests;\n \n-import java.util.ArrayList;\n-import java.util.Collections;\n-\n+import com.jayway.restassured.builder.RequestSpecBuilder;\n+import com.jayway.restassured.builder.ResponseSpecBuilder;\n+import com.jayway.restassured.http.ContentType;\n+import com.jayway.restassured.specification.RequestSpecification;\n+import com.jayway.restassured.specification.ResponseSpecification;\n import org.apache.fineract.integrationtests.common.CurrenciesHelper;\n import org.apache.fineract.integrationtests.common.CurrencyDomain;\n import org.apache.fineract.integrationtests.common.Utils;\n import org.junit.Assert;\n import org.junit.Before;\n import org.junit.Test;\n \n-import com.jayway.restassured.builder.RequestSpecBuilder;\n-import com.jayway.restassured.builder.ResponseSpecBuilder;\n-import com.jayway.restassured.http.ContentType;\n-import com.jayway.restassured.specification.RequestSpecification;\n-import com.jayway.restassured.specification.ResponseSpecification;\n+import java.util.ArrayList;\n+import java.util.Collections;\n \n @SuppressWarnings({ \"unused\", \"rawtypes\" })\n public class CurrenciesTest {",
                "deletions": 8
            },
            {
                "sha": "c42d6304080357768b0ba8834267465b03107231",
                "filename": "fineract-provider/src/integrationTest/java/org/apache/fineract/integrationtests/LoanReschedulingWithinCenterTest.java",
                "blob_url": "https://github.com/apache/fineract/blob/af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1/fineract-provider/src/integrationTest/java/org/apache/fineract/integrationtests/LoanReschedulingWithinCenterTest.java",
                "raw_url": "https://github.com/apache/fineract/raw/af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1/fineract-provider/src/integrationTest/java/org/apache/fineract/integrationtests/LoanReschedulingWithinCenterTest.java",
                "status": "modified",
                "changes": 6,
                "additions": 3,
                "contents_url": "https://api.github.com/repos/apache/fineract/contents/fineract-provider/src/integrationTest/java/org/apache/fineract/integrationtests/LoanReschedulingWithinCenterTest.java?ref=af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1",
                "patch": "@@ -151,7 +151,7 @@ public void testCenterReschedulingLoansWithInterestRecalculationEnabled() {\n \n         // VERIFY THE INTEREST\n         Float interestDue = (Float) ((HashMap) loanRepaymnetSchedule.get(2)).get(\"interestDue\");\n-        assertEquals(String.valueOf(interestDue), \"90.82\");\n+        assertEquals(String.valueOf(interestDue), \"42.38\");\n \n     }\n     \n@@ -176,7 +176,7 @@ private Integer createCalendarMeeting(Integer centerId) {\n         final String startDate = dateFormat.format(today.getTime());\n         final String frequency = \"2\"; // 2:Weekly\n         final String interval = \"2\"; // Every one week\n-        final Integer repeatsOnDay = today.get(Calendar.DAY_OF_WEEK) - 1;\n+        final Integer repeatsOnDay = today.get(Calendar.DAY_OF_WEEK);\n \n         Integer calendarId = CalendarHelper.createMeetingForGroup(this.requestSpec, this.responseSpec, centerId, startDate, frequency,\n                 interval, repeatsOnDay.toString());\n@@ -280,7 +280,7 @@ public void testCenterReschedulingMultiTrancheLoansWithInterestRecalculationEnab\n \n         // VERIFY THE INTEREST\n         Float interestDue = (Float) ((HashMap) loanRepaymnetSchedule.get(2)).get(\"interestDue\");\n-        assertEquals(String.valueOf(interestDue), \"41.05\");\n+        assertEquals(String.valueOf(interestDue), \"19.16\");\n \n     }\n ",
                "deletions": 3
            },
            {
                "sha": "5178856fcfd4b0fd4b53a6537c3d6fa2422c0e6c",
                "filename": "fineract-provider/src/integrationTest/java/org/apache/fineract/integrationtests/SchedulerJobsTestResults.java",
                "blob_url": "https://github.com/apache/fineract/blob/af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1/fineract-provider/src/integrationTest/java/org/apache/fineract/integrationtests/SchedulerJobsTestResults.java",
                "raw_url": "https://github.com/apache/fineract/raw/af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1/fineract-provider/src/integrationTest/java/org/apache/fineract/integrationtests/SchedulerJobsTestResults.java",
                "status": "modified",
                "changes": 46,
                "additions": 18,
                "contents_url": "https://api.github.com/repos/apache/fineract/contents/fineract-provider/src/integrationTest/java/org/apache/fineract/integrationtests/SchedulerJobsTestResults.java?ref=af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1",
                "patch": "@@ -18,26 +18,12 @@\n  */\n package org.apache.fineract.integrationtests;\n \n-import static org.junit.Assert.assertEquals;\n-\n-import java.text.DateFormat;\n-import java.text.DecimalFormat;\n-import java.text.DecimalFormatSymbols;\n-import java.text.SimpleDateFormat;\n-import java.time.LocalDate;\n-import java.time.ZoneId;\n-import java.util.ArrayList;\n-import java.util.Calendar;\n-import java.util.HashMap;\n-import java.util.List;\n-import java.util.Locale;\n-\n-import org.apache.fineract.integrationtests.common.ClientHelper;\n-import org.apache.fineract.integrationtests.common.GlobalConfigurationHelper;\n-import org.apache.fineract.integrationtests.common.HolidayHelper;\n-import org.apache.fineract.integrationtests.common.SchedulerJobHelper;\n-import org.apache.fineract.integrationtests.common.StandingInstructionsHelper;\n-import org.apache.fineract.integrationtests.common.Utils;\n+import com.jayway.restassured.builder.RequestSpecBuilder;\n+import com.jayway.restassured.builder.ResponseSpecBuilder;\n+import com.jayway.restassured.http.ContentType;\n+import com.jayway.restassured.specification.RequestSpecification;\n+import com.jayway.restassured.specification.ResponseSpecification;\n+import org.apache.fineract.integrationtests.common.*;\n import org.apache.fineract.integrationtests.common.accounting.Account;\n import org.apache.fineract.integrationtests.common.accounting.AccountHelper;\n import org.apache.fineract.integrationtests.common.accounting.JournalEntry;\n@@ -61,11 +47,15 @@\n import org.junit.Ignore;\n import org.junit.Test;\n \n-import com.jayway.restassured.builder.RequestSpecBuilder;\n-import com.jayway.restassured.builder.ResponseSpecBuilder;\n-import com.jayway.restassured.http.ContentType;\n-import com.jayway.restassured.specification.RequestSpecification;\n-import com.jayway.restassured.specification.ResponseSpecification;\n+import java.text.DateFormat;\n+import java.text.DecimalFormat;\n+import java.text.DecimalFormatSymbols;\n+import java.text.SimpleDateFormat;\n+import java.time.LocalDate;\n+import java.time.ZoneId;\n+import java.util.*;\n+\n+import static org.junit.Assert.assertEquals;\n \n @SuppressWarnings({ \"unused\", \"unchecked\", \"rawtypes\", \"static-access\", \"cast\" })\n public class SchedulerJobsTestResults {\n@@ -831,12 +821,12 @@ public void testUpdateOverdueDaysForNPA() throws InterruptedException {\n     public void testInterestTransferForSavings() throws InterruptedException {\n         this.savingsAccountHelper = new SavingsAccountHelper(this.requestSpec, this.responseSpec);\n         this.schedulerJobHelper = new SchedulerJobHelper(this.requestSpec, this.responseSpec);\n-        FixedDepositProductHelper fixedDepositProductHelper = new FixedDepositProductHelper(this.requestSpec, this.responseSpec);\n-        AccountHelper accountHelper = new AccountHelper(this.requestSpec, this.responseSpec);\n+        //FixedDepositProductHelper fixedDepositProductHelper = new FixedDepositProductHelper(this.requestSpec,this.responseSpec);\n+        //AccountHelper accountHelper = new AccountHelper(this.requestSpec, this.responseSpec);\n         FixedDepositAccountHelper fixedDepositAccountHelper = new FixedDepositAccountHelper(this.requestSpec, this.responseSpec);\n \n         DateFormat dateFormat = new SimpleDateFormat(\"dd MMMM yyyy\", Locale.US);\n-        DateFormat monthDayFormat = new SimpleDateFormat(\"dd MMM\", Locale.US);\n+        //DateFormat monthDayFormat = new SimpleDateFormat(\"dd MMM\", Locale.US);\n \n         Calendar todaysDate = Calendar.getInstance();\n         todaysDate.add(Calendar.MONTH, -3);",
                "deletions": 28
            },
            {
                "sha": "1e4c5e2518aaaf7baf257063342a3d2c92817def",
                "filename": "fineract-provider/src/integrationTest/java/org/apache/fineract/integrationtests/common/CenterDomain.java",
                "blob_url": "https://github.com/apache/fineract/blob/af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1/fineract-provider/src/integrationTest/java/org/apache/fineract/integrationtests/common/CenterDomain.java",
                "raw_url": "https://github.com/apache/fineract/raw/af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1/fineract-provider/src/integrationTest/java/org/apache/fineract/integrationtests/common/CenterDomain.java",
                "status": "modified",
                "changes": 8,
                "additions": 3,
                "contents_url": "https://api.github.com/repos/apache/fineract/contents/fineract-provider/src/integrationTest/java/org/apache/fineract/integrationtests/common/CenterDomain.java?ref=af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1",
                "patch": "@@ -18,12 +18,11 @@\n  */\n package org.apache.fineract.integrationtests.common;\n \n-import java.util.ArrayList;\n-import java.util.HashMap;\n-\n+import com.google.gson.Gson;\n import org.apache.fineract.infrastructure.core.service.DateUtils;\n \n-import com.google.gson.Gson;\n+import java.util.ArrayList;\n+import java.util.HashMap;\n \n public class CenterDomain implements Comparable<CenterDomain> {\n \n@@ -45,7 +44,6 @@ private Builder(final Integer id, final Integer statusid, final String statuscod\n                 final String name, final String externalId, final Integer staffId, final int officeID, final String officeName,\n                 final String hierarchy, final ArrayList<HashMap> groupMembers) {\n             this.id = id;\n-            this.accountNo = accountNo;\n             this.status = new HashMap();\n             this.status.put(\"id\", statusid);\n             this.status.put(\"code\", statuscode);",
                "deletions": 5
            },
            {
                "sha": "f0f57d8ccb7e3b902c885b09f9fe4472cba58965",
                "filename": "fineract-provider/src/integrationTest/java/org/apache/fineract/integrationtests/common/CurrenciesHelper.java",
                "blob_url": "https://github.com/apache/fineract/blob/af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1/fineract-provider/src/integrationTest/java/org/apache/fineract/integrationtests/common/CurrenciesHelper.java",
                "raw_url": "https://github.com/apache/fineract/raw/af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1/fineract-provider/src/integrationTest/java/org/apache/fineract/integrationtests/common/CurrenciesHelper.java",
                "status": "modified",
                "changes": 6,
                "additions": 3,
                "contents_url": "https://api.github.com/repos/apache/fineract/contents/fineract-provider/src/integrationTest/java/org/apache/fineract/integrationtests/common/CurrenciesHelper.java?ref=af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1",
                "patch": "@@ -18,14 +18,14 @@\n  */\n package org.apache.fineract.integrationtests.common;\n \n-import java.util.ArrayList;\n-import java.util.HashMap;\n-\n import com.google.common.reflect.TypeToken;\n import com.google.gson.Gson;\n import com.jayway.restassured.specification.RequestSpecification;\n import com.jayway.restassured.specification.ResponseSpecification;\n \n+import java.util.ArrayList;\n+import java.util.HashMap;\n+\n @SuppressWarnings({ \"unused\", \"rawtypes\", \"unchecked\" })\n public class CurrenciesHelper {\n ",
                "deletions": 3
            },
            {
                "sha": "104272fc43e216d40bab5ee3eec06576d33d344d",
                "filename": "fineract-provider/src/integrationTest/java/org/apache/fineract/integrationtests/common/WorkingDaysHelper.java",
                "blob_url": "https://github.com/apache/fineract/blob/af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1/fineract-provider/src/integrationTest/java/org/apache/fineract/integrationtests/common/WorkingDaysHelper.java",
                "raw_url": "https://github.com/apache/fineract/raw/af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1/fineract-provider/src/integrationTest/java/org/apache/fineract/integrationtests/common/WorkingDaysHelper.java",
                "status": "modified",
                "changes": 15,
                "additions": 5,
                "contents_url": "https://api.github.com/repos/apache/fineract/contents/fineract-provider/src/integrationTest/java/org/apache/fineract/integrationtests/common/WorkingDaysHelper.java?ref=af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1",
                "patch": "@@ -18,13 +18,13 @@\n  */\r\n package org.apache.fineract.integrationtests.common;\r\n \r\n-import java.util.HashMap;\r\n-import java.util.Random;\r\n-\r\n import com.google.gson.Gson;\r\n import com.jayway.restassured.specification.RequestSpecification;\r\n import com.jayway.restassured.specification.ResponseSpecification;\r\n \r\n+import java.util.HashMap;\r\n+import java.util.Random;\r\n+\r\n public class WorkingDaysHelper {\r\n \r\n     private static final String WORKINGDAYS_URL = \"/fineract-provider/api/v1/workingdays\";\r\n@@ -48,7 +48,7 @@ public static String updateWorkingDaysAsJson() {\n         final HashMap<String, Object> map = new HashMap<>();\r\n         map.put(\"recurrence\", \"FREQ=WEEKLY;INTERVAL=1;BYDAY=MO,TU,WE,TH,FR,SA,SU\");\r\n         map.put(\"locale\", \"en\");\r\n-        map.put(\"repaymentRescheduleType\", randomInt(1, 4));\r\n+        map.put(\"repaymentRescheduleType\", new Random().nextInt(4) + 1);\r\n         map.put(\"extendTermForDailyRepayments\", false);\r\n         System.out.println(\"map : \" + map);\r\n         return new Gson().toJson(map);\r\n@@ -58,17 +58,12 @@ public static String updateWorkingDayWithWrongRecur() {\n         final HashMap<String, Object> map = new HashMap<>();\r\n         map.put(\"recurrence\", \"FREQ=WEEKLY;INTERVAL=1;BYDAY=MP,TI,TE,TH\");\r\n         map.put(\"locale\", \"en\");\r\n-        map.put(\"repaymentRescheduleType\", randomInt(1, 4));\r\n+        map.put(\"repaymentRescheduleType\", new Random().nextInt(4) + 1);\r\n         map.put(\"extendTermForDailyRepayments\", false);\r\n         System.out.println(\"map : \" + map);\r\n         return new Gson().toJson(map);\r\n     }\r\n \r\n-    public static int randomInt(int low, int high) {\r\n-        int i = new Random().nextInt(high) + low;\r\n-        return i;\r\n-    }\r\n-\r\n     public static int workingDaysId(final RequestSpecification requestSpec, final ResponseSpecification responseSpec) {\r\n         HashMap<String, Object> workingDays = getAllWorkingDays(requestSpec, responseSpec);\r\n         return (int) workingDays.get(\"id\");\r",
                "deletions": 10
            },
            {
                "sha": "348c9130faecdf104757d59aeda86ad11a34e9b4",
                "filename": "fineract-provider/src/integrationTest/java/org/apache/fineract/integrationtests/common/accounting/GLAccountBuilder.java",
                "blob_url": "https://github.com/apache/fineract/blob/af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1/fineract-provider/src/integrationTest/java/org/apache/fineract/integrationtests/common/accounting/GLAccountBuilder.java",
                "raw_url": "https://github.com/apache/fineract/raw/af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1/fineract-provider/src/integrationTest/java/org/apache/fineract/integrationtests/common/accounting/GLAccountBuilder.java",
                "status": "modified",
                "changes": 90,
                "additions": 42,
                "contents_url": "https://api.github.com/repos/apache/fineract/contents/fineract-provider/src/integrationTest/java/org/apache/fineract/integrationtests/common/accounting/GLAccountBuilder.java?ref=af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1",
                "patch": "@@ -18,93 +18,87 @@\n  */\n package org.apache.fineract.integrationtests.common.accounting;\n \n-import java.util.Calendar;\n-import java.util.HashMap;\n-\n+import com.google.gson.Gson;\n import org.apache.fineract.integrationtests.common.Utils;\n \n-import com.google.gson.Gson;\n+import java.util.Calendar;\n+import java.util.HashMap;\n \n public class GLAccountBuilder {\n \n-    public static final String ASSET_ACCOUNT = \"1\";\n-    public static final String LIABILITY_ACCOUNT = \"2\";\n-    public static final String EQUITY_ACCOUNT = \"3\";\n-    public static final String INCOME_ACCOUNT = \"4\";\n-    public static final String EXPENSE_ACCOUNT = \"5\";\n+    public final String ASSET_ACCOUNT = \"1\";\n+    public final String LIABILITY_ACCOUNT = \"2\";\n+    public final String EQUITY_ACCOUNT = \"3\";\n+    public final String INCOME_ACCOUNT = \"4\";\n+    public final String EXPENSE_ACCOUNT = \"5\";\n \n-    private static final String ACCOUNT_USAGE_DETAIL = \"1\";\n-    private static final String ACCOUNT_USAGE_HEADER = \"2\";\n-    private static final String MANUAL_ENTRIES_ALLOW = \"true\";\n-    private static final String MANUAL_ENTRIES_NOT_ALLOW = \"false\";\n+    private final String ACCOUNT_USAGE_DETAIL = \"1\";\n+    private final String ACCOUNT_USAGE_HEADER = \"2\";\n+    private final String MANUAL_ENTRIES_ALLOW = \"true\";\n+    private final String MANUAL_ENTRIES_NOT_ALLOW = \"false\";\n \n-    private static String name = Utils.randomStringGenerator(\"ACCOUNT_NAME_\", 5);\n+    private String name = Utils.randomStringGenerator(\"ACCOUNT_NAME_\", 5);\n \n-    private static String GLCode = \"\";\n-    private static String accountType = \"\";\n-    private static String accountUsage = ACCOUNT_USAGE_DETAIL;\n-    private static String manualEntriesAllowed = MANUAL_ENTRIES_ALLOW;\n-    private static String description = \"DEFAULT_DESCRIPTION\";\n+    private String GLCode = \"\";\n+    private String accountType = \"\";\n+    private String accountUsage = ACCOUNT_USAGE_DETAIL;\n+    private String manualEntriesAllowed = MANUAL_ENTRIES_ALLOW;\n+    private String description = \"DEFAULT_DESCRIPTION\";\n \n     public String build() {\n         final HashMap<String, String> map = new HashMap<>();\n-        map.put(\"name\", GLAccountBuilder.name);\n-        map.put(\"glCode\", GLAccountBuilder.GLCode);\n-        map.put(\"manualEntriesAllowed\", GLAccountBuilder.manualEntriesAllowed);\n-        map.put(\"type\", GLAccountBuilder.accountType);\n-        map.put(\"usage\", GLAccountBuilder.accountUsage);\n-        map.put(\"description\", GLAccountBuilder.description);\n+        map.put(\"name\", name);\n+        map.put(\"glCode\", GLCode);\n+        map.put(\"manualEntriesAllowed\", manualEntriesAllowed);\n+        map.put(\"type\", accountType);\n+        map.put(\"usage\", accountUsage);\n+        map.put(\"description\", description);\n         return new Gson().toJson(map);\n     }\n \n     public GLAccountBuilder withAccountTypeAsAsset() {\n-        GLAccountBuilder.accountType = ASSET_ACCOUNT;\n-        GLAccountBuilder.GLCode = Utils.randomStringGenerator(\"ASSET_\", 2);\n-        GLAccountBuilder.GLCode += Calendar.getInstance().getTimeInMillis() + \"\"; // Added\n-        // unique\n-        // timestamp\n-        // for\n-        // avoiding\n-        // random\n-        // collisions\n+        accountType = ASSET_ACCOUNT;\n+        GLCode = Utils.randomStringGenerator(\"ASSET_\", 2);\n+        // Add unique timestamp to avoid random collisions\n+        GLCode += Calendar.getInstance().getTimeInMillis() + \"\";\n         return this;\n     }\n \n     public GLAccountBuilder withAccountTypeAsLiability() {\n-        GLAccountBuilder.accountType = LIABILITY_ACCOUNT;\n-        GLAccountBuilder.GLCode = Utils.randomStringGenerator(\"LIABILITY_\", 2);\n-        GLAccountBuilder.GLCode += Calendar.getInstance().getTimeInMillis() + \"\";\n+        accountType = LIABILITY_ACCOUNT;\n+        GLCode = Utils.randomStringGenerator(\"LIABILITY_\", 2);\n+        GLCode += Calendar.getInstance().getTimeInMillis() + \"\";\n         return this;\n     }\n \n     public GLAccountBuilder withAccountTypeAsAsEquity() {\n-        GLAccountBuilder.accountType = EQUITY_ACCOUNT;\n-        GLAccountBuilder.GLCode = Utils.randomStringGenerator(\"EQUITY_\", 2);\n-        GLAccountBuilder.GLCode += Calendar.getInstance().getTimeInMillis() + \"\";\n+        accountType = EQUITY_ACCOUNT;\n+        GLCode = Utils.randomStringGenerator(\"EQUITY_\", 2);\n+        GLCode += Calendar.getInstance().getTimeInMillis() + \"\";\n         return this;\n     }\n \n     public GLAccountBuilder withAccountTypeAsIncome() {\n-        GLAccountBuilder.accountType = INCOME_ACCOUNT;\n-        GLAccountBuilder.GLCode = Utils.randomStringGenerator(\"INCOME_\", 2);\n-        GLAccountBuilder.GLCode += Calendar.getInstance().getTimeInMillis() + \"\";\n+        accountType = INCOME_ACCOUNT;\n+        GLCode = Utils.randomStringGenerator(\"INCOME_\", 2);\n+        GLCode += Calendar.getInstance().getTimeInMillis() + \"\";\n         return this;\n     }\n \n     public GLAccountBuilder withAccountTypeAsExpense() {\n-        GLAccountBuilder.accountType = EXPENSE_ACCOUNT;\n-        GLAccountBuilder.GLCode = Utils.randomStringGenerator(\"EXPENSE_\", 2);\n-        GLAccountBuilder.GLCode += Calendar.getInstance().getTimeInMillis() + \"\";\n+        accountType = EXPENSE_ACCOUNT;\n+        GLCode = Utils.randomStringGenerator(\"EXPENSE_\", 2);\n+        GLCode += Calendar.getInstance().getTimeInMillis() + \"\";\n         return this;\n     }\n \n     public GLAccountBuilder withAccountUsageAsHeader() {\n-        GLAccountBuilder.accountUsage = ACCOUNT_USAGE_HEADER;\n+        accountUsage = ACCOUNT_USAGE_HEADER;\n         return this;\n     }\n \n     public GLAccountBuilder withMaualEntriesNotAllowed() {\n-        GLAccountBuilder.manualEntriesAllowed = MANUAL_ENTRIES_NOT_ALLOW;\n+        manualEntriesAllowed = MANUAL_ENTRIES_NOT_ALLOW;\n         return this;\n     }\n }",
                "deletions": 48
            },
            {
                "sha": "647a178ce9899ca1dbab6173dd984a8fbabaca6f",
                "filename": "fineract-provider/src/integrationTest/java/org/apache/fineract/integrationtests/common/savings/SavingsAccountHelper.java",
                "blob_url": "https://github.com/apache/fineract/blob/af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1/fineract-provider/src/integrationTest/java/org/apache/fineract/integrationtests/common/savings/SavingsAccountHelper.java",
                "raw_url": "https://github.com/apache/fineract/raw/af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1/fineract-provider/src/integrationTest/java/org/apache/fineract/integrationtests/common/savings/SavingsAccountHelper.java",
                "status": "modified",
                "changes": 28,
                "additions": 11,
                "contents_url": "https://api.github.com/repos/apache/fineract/contents/fineract-provider/src/integrationTest/java/org/apache/fineract/integrationtests/common/savings/SavingsAccountHelper.java?ref=af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1",
                "patch": "@@ -18,30 +18,24 @@\n  */\n package org.apache.fineract.integrationtests.common.savings;\n \n-import java.io.ByteArrayInputStream;\n-import java.io.File;\n-import java.io.IOException;\n-import java.io.InputStream;\n-import java.math.BigDecimal;\n-import java.text.SimpleDateFormat;\n-import java.util.ArrayList;\n-import java.util.Calendar;\n-import java.util.HashMap;\n-import java.util.List;\n-import java.util.Locale;\n-\n+import com.google.gson.Gson;\n+import com.jayway.restassured.specification.RequestSpecification;\n+import com.jayway.restassured.specification.ResponseSpecification;\n import org.apache.fineract.integrationtests.common.CommonConstants;\n import org.apache.fineract.integrationtests.common.Utils;\n import org.apache.poi.hssf.usermodel.HSSFWorkbook;\n import org.apache.poi.ss.usermodel.Workbook;\n import org.junit.Assert;\n \n-import com.google.gson.Gson;\n-import com.jayway.restassured.specification.RequestSpecification;\n-import com.jayway.restassured.specification.ResponseSpecification;\n-\n import javax.ws.rs.core.HttpHeaders;\n import javax.ws.rs.core.MediaType;\n+import java.io.ByteArrayInputStream;\n+import java.io.File;\n+import java.io.IOException;\n+import java.io.InputStream;\n+import java.math.BigDecimal;\n+import java.text.SimpleDateFormat;\n+import java.util.*;\n \n @SuppressWarnings({ \"rawtypes\" })\n public class SavingsAccountHelper {\n@@ -170,7 +164,7 @@ public HashMap approveSavings(final Integer savingsID) {\n     public HashMap approveSavingsOnDate(final Integer savingsID, final String approvalDate) {\n         System.out.println(\"--------------------------------- APPROVING SAVINGS APPLICATION ------------------------------------\");\n         final String savingsOperationURL = createSavingsOperationURL(APPROVE_SAVINGS_COMMAND, savingsID);\n-        if (approvalDate == null || approvalDate == \"\")\n+        if (approvalDate == null || approvalDate.equals(\"\"))\n             return performSavingApplicationActions(savingsOperationURL, getApproveSavingsAsJSON(), isBlock);\n         return performSavingApplicationActions(savingsOperationURL, getApproveSavingsAsJsonOnDate(approvalDate), isBlock);\n     }",
                "deletions": 17
            },
            {
                "sha": "80425a8a5bfb533934ca0166327a4e7f80d52abc",
                "filename": "fineract-provider/src/integrationTest/java/org/apache/fineract/integrationtests/common/savings/SavingsApplicationTestBuilder.java",
                "blob_url": "https://github.com/apache/fineract/blob/af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1/fineract-provider/src/integrationTest/java/org/apache/fineract/integrationtests/common/savings/SavingsApplicationTestBuilder.java",
                "raw_url": "https://github.com/apache/fineract/raw/af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1/fineract-provider/src/integrationTest/java/org/apache/fineract/integrationtests/common/savings/SavingsApplicationTestBuilder.java",
                "status": "modified",
                "changes": 6,
                "additions": 3,
                "contents_url": "https://api.github.com/repos/apache/fineract/contents/fineract-provider/src/integrationTest/java/org/apache/fineract/integrationtests/common/savings/SavingsApplicationTestBuilder.java?ref=af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1",
                "patch": "@@ -18,11 +18,11 @@\n  */\n package org.apache.fineract.integrationtests.common.savings;\n \n+import com.google.gson.Gson;\n+\n import java.util.HashMap;\n import java.util.List;\n \n-import com.google.gson.Gson;\n-\n public class SavingsApplicationTestBuilder {\n \n     private static final String LOCALE = \"en_GB\";\n@@ -40,7 +40,7 @@ public String build(final String ID, final String savingsProductId, final String\n \n         final HashMap<String, Object> map = new HashMap<>();\n         map.put(\"dateFormat\", \"dd MMMM yyyy\");\n-        if (accountType == \"GROUP\") {\n+        if (accountType.equals(\"GROUP\")) {\n             map.put(\"groupId\", ID);\n         } else {\n             map.put(\"clientId\", ID);",
                "deletions": 3
            },
            {
                "sha": "2a938fe853f968bf8b5ce6c7c05a08cf04503573",
                "filename": "fineract-provider/src/integrationTest/java/org/apache/fineract/integrationtests/common/shares/ShareAccountIntegrationTests.java",
                "blob_url": "https://github.com/apache/fineract/blob/af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1/fineract-provider/src/integrationTest/java/org/apache/fineract/integrationtests/common/shares/ShareAccountIntegrationTests.java",
                "raw_url": "https://github.com/apache/fineract/raw/af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1/fineract-provider/src/integrationTest/java/org/apache/fineract/integrationtests/common/shares/ShareAccountIntegrationTests.java",
                "status": "modified",
                "changes": 24,
                "additions": 9,
                "contents_url": "https://api.github.com/repos/apache/fineract/contents/fineract-provider/src/integrationTest/java/org/apache/fineract/integrationtests/common/shares/ShareAccountIntegrationTests.java?ref=af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1",
                "patch": "@@ -18,15 +18,12 @@\n  */\n package org.apache.fineract.integrationtests.common.shares;\n \n-import java.text.DateFormat;\n-import java.text.SimpleDateFormat;\n-import java.util.ArrayList;\n-import java.util.Calendar;\n-import java.util.Date;\n-import java.util.HashMap;\n-import java.util.List;\n-import java.util.Map;\n-\n+import com.google.gson.Gson;\n+import com.jayway.restassured.builder.RequestSpecBuilder;\n+import com.jayway.restassured.builder.ResponseSpecBuilder;\n+import com.jayway.restassured.http.ContentType;\n+import com.jayway.restassured.specification.RequestSpecification;\n+import com.jayway.restassured.specification.ResponseSpecification;\n import org.apache.fineract.infrastructure.core.service.DateUtils;\n import org.apache.fineract.integrationtests.common.ClientHelper;\n import org.apache.fineract.integrationtests.common.Utils;\n@@ -37,12 +34,9 @@\n import org.junit.Ignore;\n import org.junit.Test;\n \n-import com.google.gson.Gson;\n-import com.jayway.restassured.builder.RequestSpecBuilder;\n-import com.jayway.restassured.builder.ResponseSpecBuilder;\n-import com.jayway.restassured.http.ContentType;\n-import com.jayway.restassured.specification.RequestSpecification;\n-import com.jayway.restassured.specification.ResponseSpecification;\n+import java.text.DateFormat;\n+import java.text.SimpleDateFormat;\n+import java.util.*;\n \n public class ShareAccountIntegrationTests {\n ",
                "deletions": 15
            },
            {
                "sha": "90213bcc37b432263d4aafeb4076a9e51406a258",
                "filename": "fineract-provider/src/integrationTest/java/org/apache/fineract/integrationtests/common/shares/ShareAccountTransactionHelper.java",
                "blob_url": "https://github.com/apache/fineract/blob/af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1/fineract-provider/src/integrationTest/java/org/apache/fineract/integrationtests/common/shares/ShareAccountTransactionHelper.java",
                "raw_url": "https://github.com/apache/fineract/raw/af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1/fineract-provider/src/integrationTest/java/org/apache/fineract/integrationtests/common/shares/ShareAccountTransactionHelper.java",
                "status": "modified",
                "changes": 7,
                "additions": 3,
                "contents_url": "https://api.github.com/repos/apache/fineract/contents/fineract-provider/src/integrationTest/java/org/apache/fineract/integrationtests/common/shares/ShareAccountTransactionHelper.java?ref=af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1",
                "patch": "@@ -18,12 +18,11 @@\n  */\n package org.apache.fineract.integrationtests.common.shares;\n \n-import java.util.Map;\n-\n-import org.apache.fineract.integrationtests.common.Utils;\n-\n import com.jayway.restassured.specification.RequestSpecification;\n import com.jayway.restassured.specification.ResponseSpecification;\n+import org.apache.fineract.integrationtests.common.Utils;\n+\n+import java.util.Map;\n \n public class ShareAccountTransactionHelper {\n ",
                "deletions": 4
            },
            {
                "sha": "15edb092c81f8ac7a0ec3df4d94fb8c130e4cdd3",
                "filename": "fineract-provider/src/integrationTest/java/org/apache/fineract/integrationtests/common/shares/ShareProductHelper.java",
                "blob_url": "https://github.com/apache/fineract/blob/af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1/fineract-provider/src/integrationTest/java/org/apache/fineract/integrationtests/common/shares/ShareProductHelper.java",
                "raw_url": "https://github.com/apache/fineract/raw/af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1/fineract-provider/src/integrationTest/java/org/apache/fineract/integrationtests/common/shares/ShareProductHelper.java",
                "status": "modified",
                "changes": 17,
                "additions": 8,
                "contents_url": "https://api.github.com/repos/apache/fineract/contents/fineract-provider/src/integrationTest/java/org/apache/fineract/integrationtests/common/shares/ShareProductHelper.java?ref=af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1",
                "patch": "@@ -18,20 +18,19 @@\n  */\n package org.apache.fineract.integrationtests.common.shares;\n \n+import com.google.gson.Gson;\n+import org.apache.fineract.infrastructure.core.service.DateUtils;\n+import org.apache.fineract.integrationtests.common.Utils;\n+import org.joda.time.LocalDate;\n+import org.junit.Assert;\n+\n import java.text.DateFormat;\n import java.text.SimpleDateFormat;\n import java.util.ArrayList;\n import java.util.HashMap;\n import java.util.List;\n import java.util.Map;\n \n-import org.apache.fineract.infrastructure.core.service.DateUtils;\n-import org.apache.fineract.integrationtests.common.Utils;\n-import org.joda.time.LocalDate;\n-import org.junit.Assert;\n-\n-import com.google.gson.Gson;\n-\n \n public class ShareProductHelper {\n \n@@ -191,9 +190,9 @@ public void verifyShareProduct(Map<String, Object> shareProductData) {\n         String lockinPeriodFrequencyType = String.valueOf(lockinPeriodType.get(\"id\")) ;\n         Assert.assertEquals(this.lockinPeriodFrequencyType, lockinPeriodFrequencyType);\n         \n-        ArrayList<Map<String, String>> charges = (ArrayList<Map<String, String>>)shareProductData.get(\"chargesSelected\") ;\n+        //ArrayList<Map<String, String>> charges = (ArrayList<Map<String, String>>)shareProductData.get(\"chargesSelected\") ;\n         \n-        ArrayList<Map<String, String>> marketPrices = (ArrayList<Map<String, String>>)shareProductData.get(\"marketPricePeriods\") ;\n+       // ArrayList<Map<String, String>> marketPrices = (ArrayList<Map<String, String>>)shareProductData.get(\"marketPricePeriods\") ;\n         \n     }\n }",
                "deletions": 9
            },
            {
                "sha": "c5bc43205bdfc92c76148e55c02efc77f87c75fd",
                "filename": "fineract-provider/src/main/java/org/apache/fineract/accounting/common/AccountingConstants.java",
                "blob_url": "https://github.com/apache/fineract/blob/af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1/fineract-provider/src/main/java/org/apache/fineract/accounting/common/AccountingConstants.java",
                "raw_url": "https://github.com/apache/fineract/raw/af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1/fineract-provider/src/main/java/org/apache/fineract/accounting/common/AccountingConstants.java",
                "status": "modified",
                "changes": 16,
                "additions": 10,
                "contents_url": "https://api.github.com/repos/apache/fineract/contents/fineract-provider/src/main/java/org/apache/fineract/accounting/common/AccountingConstants.java?ref=af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1",
                "patch": "@@ -18,14 +18,16 @@\n  */\n package org.apache.fineract.accounting.common;\n \n+import org.apache.fineract.accounting.financialactivityaccount.data.FinancialActivityData;\n+import org.apache.fineract.accounting.glaccount.domain.GLAccountType;\n+\n+import net.sf.ehcache.util.FindBugsSuppressWarnings;\n+\n import java.util.ArrayList;\n import java.util.HashMap;\n import java.util.List;\n import java.util.Map;\n \n-import org.apache.fineract.accounting.financialactivityaccount.data.FinancialActivityData;\n-import org.apache.fineract.accounting.glaccount.domain.GLAccountType;\n-\n public class AccountingConstants {\n \n     /*** Accounting placeholders for cash based accounting for loan products ***/\n@@ -289,14 +291,16 @@ public static FinancialActivityData toFinancialActivityData(final int financialA\n             return convertToFinancialActivityData(type);\n         }\n \n+        // TODO Fix this..\n+        @FindBugsSuppressWarnings(\"LI_LAZY_INIT_UPDATE_STATIC\")\n         public static List<FinancialActivityData> getAllFinancialActivities() {\n-            if (financialActivities == null) {\n-                financialActivities = new ArrayList<>();\n+        \tif (financialActivities == null) {\n+        \t\tfinancialActivities = new ArrayList<>();\n                 for (final FINANCIAL_ACTIVITY type : FINANCIAL_ACTIVITY.values()) {\n                     FinancialActivityData financialActivityData = convertToFinancialActivityData(type);\n                     financialActivities.add(financialActivityData);\n                 }\n-            }\n+        \t}\n             return financialActivities;\n         }\n ",
                "deletions": 6
            },
            {
                "sha": "f65936e864a0d0b61b2631a39f58cb2c031b179e",
                "filename": "fineract-provider/src/main/java/org/apache/fineract/accounting/glaccount/data/GLAccountData.java",
                "blob_url": "https://github.com/apache/fineract/blob/af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1/fineract-provider/src/main/java/org/apache/fineract/accounting/glaccount/data/GLAccountData.java",
                "raw_url": "https://github.com/apache/fineract/raw/af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1/fineract-provider/src/main/java/org/apache/fineract/accounting/glaccount/data/GLAccountData.java",
                "status": "modified",
                "changes": 9,
                "additions": 5,
                "contents_url": "https://api.github.com/repos/apache/fineract/contents/fineract-provider/src/main/java/org/apache/fineract/accounting/glaccount/data/GLAccountData.java?ref=af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1",
                "patch": "@@ -18,22 +18,23 @@\n  */\n package org.apache.fineract.accounting.glaccount.data;\n \n-import java.util.Collection;\n-import java.util.List;\n-\n import org.apache.fineract.accounting.common.AccountingEnumerations;\n import org.apache.fineract.accounting.glaccount.domain.GLAccountType;\n import org.apache.fineract.accounting.glaccount.domain.GLAccountUsage;\n import org.apache.fineract.infrastructure.codes.data.CodeValueData;\n import org.apache.fineract.infrastructure.core.data.EnumOptionData;\n \n+import java.io.Serializable;\n+import java.util.Collection;\n+import java.util.List;\n+\n /**\n  * Immutable object representing a General Ledger Account\n  * \n  * Note: no getter/setters required as google-gson will produce json from fields\n  * of object.\n  */\n-public class GLAccountData {\n+public class GLAccountData implements Serializable {\n \n     private final Long id;\n     private final String name;",
                "deletions": 4
            },
            {
                "sha": "9735affc9899b7701fa1e7c9b0f5244b1675ac3c",
                "filename": "fineract-provider/src/main/java/org/apache/fineract/accounting/glaccount/domain/TrialBalance.java",
                "blob_url": "https://github.com/apache/fineract/blob/af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1/fineract-provider/src/main/java/org/apache/fineract/accounting/glaccount/domain/TrialBalance.java",
                "raw_url": "https://github.com/apache/fineract/raw/af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1/fineract-provider/src/main/java/org/apache/fineract/accounting/glaccount/domain/TrialBalance.java",
                "status": "modified",
                "changes": 8,
                "additions": 6,
                "contents_url": "https://api.github.com/repos/apache/fineract/contents/fineract-provider/src/main/java/org/apache/fineract/accounting/glaccount/domain/TrialBalance.java?ref=af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1",
                "patch": "@@ -26,6 +26,7 @@\n import javax.persistence.*;\n import java.math.BigDecimal;\n import java.util.Date;\n+import java.util.Objects;\n \n @Entity\n @Table(name = \"m_trial_balance\")\n@@ -103,6 +104,9 @@ public boolean equals(Object obj) {\n                 && trialBalance.getTransactionDate().equals(this.getTransactionDate());\n     }\n \n-\n-\n+    @Override\n+    public int hashCode() {\n+        // TODO return Objects.hash(officeId, glAccountId, amount, entryDate, transactionDate, closingBalance);\n+    \treturn Objects.hash(officeId, glAccountId, entryDate, transactionDate);\n+    }\n }\n\\ No newline at end of file",
                "deletions": 2
            },
            {
                "sha": "7b301e18114362cf33b3b2b20a99ec627e7de088",
                "filename": "fineract-provider/src/main/java/org/apache/fineract/accounting/journalentry/service/JournalEntryWritePlatformServiceJpaRepositoryImpl.java",
                "blob_url": "https://github.com/apache/fineract/blob/af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1/fineract-provider/src/main/java/org/apache/fineract/accounting/journalentry/service/JournalEntryWritePlatformServiceJpaRepositoryImpl.java",
                "raw_url": "https://github.com/apache/fineract/raw/af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1/fineract-provider/src/main/java/org/apache/fineract/accounting/journalentry/service/JournalEntryWritePlatformServiceJpaRepositoryImpl.java",
                "status": "modified",
                "changes": 16,
                "additions": 4,
                "contents_url": "https://api.github.com/repos/apache/fineract/contents/fineract-provider/src/main/java/org/apache/fineract/accounting/journalentry/service/JournalEntryWritePlatformServiceJpaRepositoryImpl.java?ref=af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1",
                "patch": "@@ -18,16 +18,6 @@\n  */\n package org.apache.fineract.accounting.journalentry.service;\n \n-import java.math.BigDecimal;\n-import java.util.ArrayList;\n-import java.util.Collection;\n-import java.util.Date;\n-import java.util.HashMap;\n-import java.util.LinkedHashMap;\n-import java.util.List;\n-import java.util.Map;\n-import java.util.Set;\n-\n import org.apache.commons.lang.StringUtils;\n import org.apache.fineract.accounting.closure.domain.GLClosure;\n import org.apache.fineract.accounting.closure.domain.GLClosureRepository;\n@@ -52,7 +42,6 @@\n import org.apache.fineract.accounting.journalentry.exception.JournalEntriesNotFoundException;\n import org.apache.fineract.accounting.journalentry.exception.JournalEntryInvalidException;\n import org.apache.fineract.accounting.journalentry.exception.JournalEntryInvalidException.GL_JOURNAL_ENTRY_INVALID_REASON;\n-\n import org.apache.fineract.accounting.journalentry.exception.JournalEntryRuntimeException;\n import org.apache.fineract.accounting.journalentry.serialization.JournalEntryCommandFromApiJsonDeserializer;\n import org.apache.fineract.accounting.producttoaccountmapping.domain.PortfolioProductType;\n@@ -86,6 +75,9 @@\n import org.springframework.transaction.annotation.Transactional;\n import org.springframework.util.CollectionUtils;\n \n+import java.math.BigDecimal;\n+import java.util.*;\n+\n @Service\n public class JournalEntryWritePlatformServiceJpaRepositoryImpl implements JournalEntryWritePlatformService {\n \n@@ -776,7 +768,7 @@ public void createJournalEntriesForClientTransactions(Map<String, Object> accoun\n         public boolean equals(Object obj) {\n             if (!obj.getClass().equals(this.getClass())) return false;\n             OfficeCurrencyKey copy = (OfficeCurrencyKey) obj;\n-            return this.office.getId() == copy.office.getId() && this.currency.equals(copy.currency);\n+            return Objects.equals(this.office.getId(), copy.office.getId()) && this.currency.equals(copy.currency);\n         }\n \n         @Override",
                "deletions": 12
            },
            {
                "sha": "06edf5106847753614f31506fde3cd9e484d6325",
                "filename": "fineract-provider/src/main/java/org/apache/fineract/accounting/producttoaccountmapping/data/ChargeToGLAccountMapper.java",
                "blob_url": "https://github.com/apache/fineract/blob/af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1/fineract-provider/src/main/java/org/apache/fineract/accounting/producttoaccountmapping/data/ChargeToGLAccountMapper.java",
                "raw_url": "https://github.com/apache/fineract/raw/af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1/fineract-provider/src/main/java/org/apache/fineract/accounting/producttoaccountmapping/data/ChargeToGLAccountMapper.java",
                "status": "modified",
                "changes": 4,
                "additions": 3,
                "contents_url": "https://api.github.com/repos/apache/fineract/contents/fineract-provider/src/main/java/org/apache/fineract/accounting/producttoaccountmapping/data/ChargeToGLAccountMapper.java?ref=af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1",
                "patch": "@@ -21,7 +21,9 @@\n import org.apache.fineract.accounting.glaccount.data.GLAccountData;\n import org.apache.fineract.portfolio.charge.data.ChargeData;\n \n-public class ChargeToGLAccountMapper {\n+import java.io.Serializable;\n+\n+public class ChargeToGLAccountMapper implements Serializable {\n \n     @SuppressWarnings(\"unused\")\n     private final ChargeData charge;",
                "deletions": 1
            },
            {
                "sha": "2f16185e4ecb819190e32e5af4987e6e654feae6",
                "filename": "fineract-provider/src/main/java/org/apache/fineract/accounting/producttoaccountmapping/data/PaymentTypeToGLAccountMapper.java",
                "blob_url": "https://github.com/apache/fineract/blob/af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1/fineract-provider/src/main/java/org/apache/fineract/accounting/producttoaccountmapping/data/PaymentTypeToGLAccountMapper.java",
                "raw_url": "https://github.com/apache/fineract/raw/af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1/fineract-provider/src/main/java/org/apache/fineract/accounting/producttoaccountmapping/data/PaymentTypeToGLAccountMapper.java",
                "status": "modified",
                "changes": 4,
                "additions": 3,
                "contents_url": "https://api.github.com/repos/apache/fineract/contents/fineract-provider/src/main/java/org/apache/fineract/accounting/producttoaccountmapping/data/PaymentTypeToGLAccountMapper.java?ref=af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1",
                "patch": "@@ -21,7 +21,9 @@\n import org.apache.fineract.accounting.glaccount.data.GLAccountData;\n import org.apache.fineract.portfolio.paymenttype.data.PaymentTypeData;\n \n-public class PaymentTypeToGLAccountMapper {\n+import java.io.Serializable;\n+\n+public class PaymentTypeToGLAccountMapper implements Serializable {\n \n     @SuppressWarnings(\"unused\")\n     private final PaymentTypeData paymentType;",
                "deletions": 1
            },
            {
                "sha": "864497cc321c0048a34077b5b8e253e33ce2c17d",
                "filename": "fineract-provider/src/main/java/org/apache/fineract/accounting/producttoaccountmapping/service/ProductToGLAccountMappingHelper.java",
                "blob_url": "https://github.com/apache/fineract/blob/af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1/fineract-provider/src/main/java/org/apache/fineract/accounting/producttoaccountmapping/service/ProductToGLAccountMappingHelper.java",
                "raw_url": "https://github.com/apache/fineract/raw/af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1/fineract-provider/src/main/java/org/apache/fineract/accounting/producttoaccountmapping/service/ProductToGLAccountMappingHelper.java",
                "status": "modified",
                "changes": 8,
                "additions": 4,
                "contents_url": "https://api.github.com/repos/apache/fineract/contents/fineract-provider/src/main/java/org/apache/fineract/accounting/producttoaccountmapping/service/ProductToGLAccountMappingHelper.java?ref=af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1",
                "patch": "@@ -94,7 +94,7 @@ public void mergeProductToAccountMappingChanges(final JsonElement element, final\n                     portfolioProductType.getValue(), accountTypeId);\n             if (accountMapping == null) { throw new ProductToGLAccountMappingNotFoundException(portfolioProductType, productId,\n                     accountTypeName); }\n-            if (accountMapping.getGlAccount().getId() != accountId) {\n+            if (!accountMapping.getGlAccount().getId().equals(accountId)) {\n                 final GLAccount glAccount = getAccountByIdAndType(paramName, expectedAccountType, accountId);\n                 changes.put(paramName, accountId);\n                 accountMapping.setGlAccount(glAccount);\n@@ -118,7 +118,7 @@ public void createOrmergeProductToAccountMappingChanges(final JsonElement elemen\n                 ProductToGLAccountMapping newAccountMapping  = new ProductToGLAccountMapping(glAccount, productId,\n                 portfolioProductType.getValue(), accountTypeId) ;\n                 this.accountMappingRepository.save(newAccountMapping);\n-            }else if (accountMapping.getGlAccount().getId() != accountId) {\n+            }else if (!accountMapping.getGlAccount().getId().equals(accountId)) {\n                 final GLAccount glAccount = getAccountByIdAndType(paramName, expectedAccountType, accountId);\n                 changes.put(paramName, accountId);\n                 accountMapping.setGlAccount(glAccount);\n@@ -251,7 +251,7 @@ public void updateChargeToIncomeAccountMappings(final JsonCommand command, final\n                     // update existing mappings (if required)\n                     if (inputChargeToIncomeAccountMap.containsKey(currentCharge)) {\n                         final Long newGLAccountId = inputChargeToIncomeAccountMap.get(currentCharge);\n-                        if (newGLAccountId != chargeToIncomeAccountMapping.getGlAccount().getId()) {\n+                        if (!newGLAccountId.equals(chargeToIncomeAccountMapping.getGlAccount().getId())) {\n                             final GLAccount glAccount;\n                             if (isPenalty) {\n                                 glAccount = getAccountByIdAndType(LOAN_PRODUCT_ACCOUNTING_PARAMS.INCOME_ACCOUNT_ID.getValue(),\n@@ -337,7 +337,7 @@ public void updatePaymentChannelToFundSourceMappings(final JsonCommand command,\n                     // update existing mappings (if required)\n                     if (inputPaymentChannelFundSourceMap.containsKey(currentPaymentChannelId)) {\n                         final Long newGLAccountId = inputPaymentChannelFundSourceMap.get(currentPaymentChannelId);\n-                        if (newGLAccountId != existingPaymentChannelToFundSourceMapping.getGlAccount().getId()) {\n+                        if (!newGLAccountId.equals(existingPaymentChannelToFundSourceMapping.getGlAccount().getId())) {\n                             final GLAccount glAccount = getAccountByIdAndType(LOAN_PRODUCT_ACCOUNTING_PARAMS.FUND_SOURCE.getValue(),\n                                     GLAccountType.ASSET, newGLAccountId);\n                             existingPaymentChannelToFundSourceMapping.setGlAccount(glAccount);",
                "deletions": 4
            },
            {
                "sha": "0eb2d731ca9b5bcd1cfe17c87af9a0451c14daa1",
                "filename": "fineract-provider/src/main/java/org/apache/fineract/accounting/provisioning/domain/LoanProductProvisioningEntry.java",
                "blob_url": "https://github.com/apache/fineract/blob/af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1/fineract-provider/src/main/java/org/apache/fineract/accounting/provisioning/domain/LoanProductProvisioningEntry.java",
                "raw_url": "https://github.com/apache/fineract/raw/af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1/fineract-provider/src/main/java/org/apache/fineract/accounting/provisioning/domain/LoanProductProvisioningEntry.java",
                "status": "modified",
                "changes": 17,
                "additions": 12,
                "contents_url": "https://api.github.com/repos/apache/fineract/contents/fineract-provider/src/main/java/org/apache/fineract/accounting/provisioning/domain/LoanProductProvisioningEntry.java?ref=af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1",
                "patch": "@@ -19,6 +19,7 @@\n package org.apache.fineract.accounting.provisioning.domain;\n \n import java.math.BigDecimal;\n+import java.util.Objects;\n \n import javax.persistence.Column;\n import javax.persistence.Entity;\n@@ -119,10 +120,16 @@ public GLAccount getExpenseAccount() {\n     @Override\n     public boolean equals(Object obj) {\n         if (!obj.getClass().equals(getClass())) return false;\n-        LoanProductProvisioningEntry entry = (LoanProductProvisioningEntry) obj;\n-        return entry.loanProduct.getId().equals(this.loanProduct.getId())\n-                && entry.provisioningCategory.getId().equals(this.provisioningCategory.getId())\n-                && entry.office.getId().equals(this.office.getId())\n-                && entry.getCurrencyCode().equals(this.getCurrencyCode());\n+        LoanProductProvisioningEntry other = (LoanProductProvisioningEntry) obj;\n+        return Objects.equals(other.loanProduct.getId(), this.loanProduct.getId())\n+            && Objects.equals(other.provisioningCategory.getId(), this.provisioningCategory.getId())\n+        \t&& Objects.equals(other.office.getId(), this.office.getId())\n+        \t&& Objects.equals(other.getCurrencyCode(), this.getCurrencyCode());\n+    }\n+\n+    @Override\n+    public int hashCode() {\n+        // TODO equals() must match: return Objects.hash(entry, criteriaId, office, currencyCode, loanProduct, provisioningCategory, overdueInDays, reservedAmount, liabilityAccount, expenseAccount);\n+    \treturn Objects.hash(loanProduct.getId(), provisioningCategory.getId(), office.getId(), getCurrencyCode());\n     }\n }",
                "deletions": 5
            },
            {
                "sha": "5ed3cb052e548b1cb0f3691a1a8331a5dbff42a1",
                "filename": "fineract-provider/src/main/java/org/apache/fineract/accounting/provisioning/service/ProvisioningEntriesReadPlatformServiceImpl.java",
                "blob_url": "https://github.com/apache/fineract/blob/af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1/fineract-provider/src/main/java/org/apache/fineract/accounting/provisioning/service/ProvisioningEntriesReadPlatformServiceImpl.java",
                "raw_url": "https://github.com/apache/fineract/raw/af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1/fineract-provider/src/main/java/org/apache/fineract/accounting/provisioning/service/ProvisioningEntriesReadPlatformServiceImpl.java",
                "status": "modified",
                "changes": 22,
                "additions": 9,
                "contents_url": "https://api.github.com/repos/apache/fineract/contents/fineract-provider/src/main/java/org/apache/fineract/accounting/provisioning/service/ProvisioningEntriesReadPlatformServiceImpl.java?ref=af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1",
                "patch": "@@ -18,17 +18,6 @@\n  */\n package org.apache.fineract.accounting.provisioning.service;\n \n-import java.math.BigDecimal;\n-import java.sql.ResultSet;\n-import java.sql.SQLException;\n-import java.text.SimpleDateFormat;\n-import java.util.ArrayList;\n-import java.util.Collection;\n-import java.util.Date;\n-import java.util.HashMap;\n-import java.util.List;\n-import java.util.Map;\n-\n import org.apache.fineract.accounting.provisioning.data.LoanProductProvisioningEntryData;\n import org.apache.fineract.accounting.provisioning.data.ProvisioningEntryData;\n import org.apache.fineract.infrastructure.core.service.Page;\n@@ -41,6 +30,15 @@\n import org.springframework.jdbc.core.RowMapper;\n import org.springframework.stereotype.Service;\n \n+import java.math.BigDecimal;\n+import java.sql.ResultSet;\n+import java.sql.SQLException;\n+import java.text.SimpleDateFormat;\n+import java.util.ArrayList;\n+import java.util.Collection;\n+import java.util.Date;\n+import java.util.List;\n+\n @Service\n public class ProvisioningEntriesReadPlatformServiceImpl implements ProvisioningEntriesReadPlatformService {\n \n@@ -289,9 +287,7 @@ public ProvisioningEntryData retrieveExistingProvisioningIdDateWithJournals() {\n                 .append(\"where history2.journal_entry_created='1')\");\n \n         @Override\n-        @SuppressWarnings(\"unused\")\n         public ProvisioningEntryData mapRow(ResultSet rs, int rowNum) throws SQLException {\n-            Map<String, Object> map = new HashMap<>();\n             Long id = rs.getLong(\"id\");\n             Date createdDate = rs.getDate(\"created_date\");\n             Long createdBy = null;",
                "deletions": 13
            },
            {
                "sha": "9dbc2f9ecc796d24285ea15c845bee48613e0e7d",
                "filename": "fineract-provider/src/main/java/org/apache/fineract/infrastructure/accountnumberformat/domain/AccountNumberFormatEnumerations.java",
                "blob_url": "https://github.com/apache/fineract/blob/af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1/fineract-provider/src/main/java/org/apache/fineract/infrastructure/accountnumberformat/domain/AccountNumberFormatEnumerations.java",
                "raw_url": "https://github.com/apache/fineract/raw/af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1/fineract-provider/src/main/java/org/apache/fineract/infrastructure/accountnumberformat/domain/AccountNumberFormatEnumerations.java",
                "status": "modified",
                "changes": 39,
                "additions": 20,
                "contents_url": "https://api.github.com/repos/apache/fineract/contents/fineract-provider/src/main/java/org/apache/fineract/infrastructure/accountnumberformat/domain/AccountNumberFormatEnumerations.java?ref=af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1",
                "patch": "@@ -18,28 +18,29 @@\n  */\n package org.apache.fineract.infrastructure.accountnumberformat.domain;\n \n-import java.util.ArrayList;\n-import java.util.Arrays;\n-import java.util.HashMap;\n-import java.util.HashSet;\n-import java.util.List;\n-import java.util.Map;\n-import java.util.Set;\n-\n import org.apache.fineract.infrastructure.core.data.EnumOptionData;\n \n+import java.util.*;\n+\n public class AccountNumberFormatEnumerations {\n \n-    public final static Set<AccountNumberPrefixType> accountNumberPrefixesForClientAccounts = new HashSet<>(Arrays.asList(\n-            AccountNumberPrefixType.OFFICE_NAME, AccountNumberPrefixType.CLIENT_TYPE));\n-    public final static Set<AccountNumberPrefixType> accountNumberPrefixesForLoanAccounts = new HashSet<>(Arrays.asList(\n-            AccountNumberPrefixType.OFFICE_NAME, AccountNumberPrefixType.LOAN_PRODUCT_SHORT_NAME));\n-    public final static Set<AccountNumberPrefixType> accountNumberPrefixesForSavingsAccounts = new HashSet<>(Arrays.asList(\n-            AccountNumberPrefixType.OFFICE_NAME, AccountNumberPrefixType.SAVINGS_PRODUCT_SHORT_NAME));\n-    public final static Set<AccountNumberPrefixType> accountNumberPrefixesForCenters = new HashSet<>(Arrays.asList(\n-    \t\tAccountNumberPrefixType.OFFICE_NAME));\n-    public final static Set<AccountNumberPrefixType> accountNumberPrefixesForGroups = new HashSet<>(Arrays.asList(\n-    \t\tAccountNumberPrefixType.OFFICE_NAME));\n+    public final static Set<AccountNumberPrefixType> accountNumberPrefixesForClientAccounts =\n+            Collections.unmodifiableSet(new HashSet<>(Arrays.asList(AccountNumberPrefixType.OFFICE_NAME,\n+                    AccountNumberPrefixType.CLIENT_TYPE)));\n+\n+    public final static Set<AccountNumberPrefixType> accountNumberPrefixesForLoanAccounts =\n+            Collections.unmodifiableSet(new HashSet<>(Arrays.asList(AccountNumberPrefixType.OFFICE_NAME,\n+                    AccountNumberPrefixType.LOAN_PRODUCT_SHORT_NAME)));\n+\n+    public final static Set<AccountNumberPrefixType> accountNumberPrefixesForSavingsAccounts =\n+            Collections.unmodifiableSet(new HashSet<>(Arrays.asList(AccountNumberPrefixType.OFFICE_NAME,\n+                    AccountNumberPrefixType.SAVINGS_PRODUCT_SHORT_NAME)));\n+\n+    public final static Set<AccountNumberPrefixType> accountNumberPrefixesForCenters =\n+            Collections.unmodifiableSet(new HashSet<>(Collections.singletonList(AccountNumberPrefixType.OFFICE_NAME)));\n+\n+    public final static Set<AccountNumberPrefixType> accountNumberPrefixesForGroups =\n+            Collections.unmodifiableSet(new HashSet<>(Collections.singletonList(AccountNumberPrefixType.OFFICE_NAME)));\n \n     public enum AccountNumberPrefixType {\n         OFFICE_NAME(1, \"accountNumberPrefixType.officeName\"), CLIENT_TYPE(101, \"accountNumberPrefixType.clientType\"), LOAN_PRODUCT_SHORT_NAME(\n@@ -49,7 +50,7 @@\n         private final Integer value;\n         private final String code;\n \n-        private AccountNumberPrefixType(final Integer value, final String code) {\n+        AccountNumberPrefixType(final Integer value, final String code) {\n             this.value = value;\n             this.code = code;\n         }",
                "deletions": 19
            },
            {
                "sha": "2b5cd2bdc198ef47b22f685a5eee3e9e4288c83f",
                "filename": "fineract-provider/src/main/java/org/apache/fineract/infrastructure/bulkimport/importhandler/center/CenterImportHandler.java",
                "blob_url": "https://github.com/apache/fineract/blob/af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1/fineract-provider/src/main/java/org/apache/fineract/infrastructure/bulkimport/importhandler/center/CenterImportHandler.java",
                "raw_url": "https://github.com/apache/fineract/raw/af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1/fineract-provider/src/main/java/org/apache/fineract/infrastructure/bulkimport/importhandler/center/CenterImportHandler.java",
                "status": "modified",
                "changes": 2,
                "additions": 1,
                "contents_url": "https://api.github.com/repos/apache/fineract/contents/fineract-provider/src/main/java/org/apache/fineract/infrastructure/bulkimport/importhandler/center/CenterImportHandler.java?ref=af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1",
                "patch": "@@ -147,7 +147,7 @@ private CenterData readCenter(Row row,final String locale, final String dateForm\n \n     private boolean containsGroupId(List<GroupGeneralData> groupMembers,Long groupId){\n         for (GroupGeneralData group: groupMembers) {\n-            if (group.getId()==groupId){\n+            if (group.getId().equals(groupId)){\n                 return true;\n             }\n         }",
                "deletions": 1
            },
            {
                "sha": "1860a76f5909896c7534c1e36a2c3b05a2c8b44e",
                "filename": "fineract-provider/src/main/java/org/apache/fineract/infrastructure/bulkimport/importhandler/group/GroupImportHandler.java",
                "blob_url": "https://github.com/apache/fineract/blob/af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1/fineract-provider/src/main/java/org/apache/fineract/infrastructure/bulkimport/importhandler/group/GroupImportHandler.java",
                "raw_url": "https://github.com/apache/fineract/raw/af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1/fineract-provider/src/main/java/org/apache/fineract/infrastructure/bulkimport/importhandler/group/GroupImportHandler.java",
                "status": "modified",
                "changes": 3,
                "additions": 1,
                "contents_url": "https://api.github.com/repos/apache/fineract/contents/fineract-provider/src/main/java/org/apache/fineract/infrastructure/bulkimport/importhandler/group/GroupImportHandler.java?ref=af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1",
                "patch": "@@ -33,7 +33,6 @@\n import org.apache.fineract.infrastructure.bulkimport.importhandler.helper.EnumOptionDataValueSerializer;\n import org.apache.fineract.infrastructure.core.data.CommandProcessingResult;\n import org.apache.fineract.infrastructure.core.data.EnumOptionData;\n-import org.apache.fineract.infrastructure.core.exception.*;\n import org.apache.fineract.portfolio.calendar.data.CalendarData;\n import org.apache.fineract.portfolio.client.data.ClientData;\n import org.apache.fineract.portfolio.group.data.GroupGeneralData;\n@@ -143,7 +142,7 @@ private GroupGeneralData readGroup(Row row,String locale,String dateFormat) {\n \n    private boolean containsClientId(List<ClientData> clientMembers,Long clientId){\n        for (ClientData client: clientMembers) {\n-           if (client.getId()==clientId){\n+           if (client.getId().equals(clientId)){\n                return true;\n            }\n        }",
                "deletions": 2
            },
            {
                "sha": "294a298a1173d8c6b9953eef37166279f9b70a73",
                "filename": "fineract-provider/src/main/java/org/apache/fineract/infrastructure/campaigns/email/ScheduledEmailConstants.java",
                "blob_url": "https://github.com/apache/fineract/blob/af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1/fineract-provider/src/main/java/org/apache/fineract/infrastructure/campaigns/email/ScheduledEmailConstants.java",
                "raw_url": "https://github.com/apache/fineract/raw/af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1/fineract-provider/src/main/java/org/apache/fineract/infrastructure/campaigns/email/ScheduledEmailConstants.java",
                "status": "modified",
                "changes": 16,
                "additions": 10,
                "contents_url": "https://api.github.com/repos/apache/fineract/contents/fineract-provider/src/main/java/org/apache/fineract/infrastructure/campaigns/email/ScheduledEmailConstants.java?ref=af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1",
                "patch": "@@ -19,6 +19,7 @@\n package org.apache.fineract.infrastructure.campaigns.email;\n \n import java.util.Arrays;\n+import java.util.Collections;\n import java.util.HashSet;\n import java.util.Set;\n \n@@ -56,23 +57,26 @@\n     public static final String STRETCHY_REPORT_PARAM_NAME = \"stretchyReport\";\n     \n     // list of permitted parameters for the create report mailing job request\n-    public static final Set<String> CREATE_REQUEST_PARAMETERS = new HashSet<>(Arrays.asList(LOCALE_PARAM_NAME, DATE_FORMAT_PARAM_NAME, \n+    public static final Set<String> CREATE_REQUEST_PARAMETERS =\n+            Collections.unmodifiableSet(new HashSet<>(Arrays.asList(LOCALE_PARAM_NAME, DATE_FORMAT_PARAM_NAME,\n             NAME_PARAM_NAME, DESCRIPTION_PARAM_NAME, RECURRENCE_PARAM_NAME, EMAIL_RECIPIENTS_PARAM_NAME, EMAIL_SUBJECT_PARAM_NAME, \n             EMAIL_MESSAGE_PARAM_NAME, EMAIL_ATTACHMENT_FILE_FORMAT_ID_PARAM_NAME, STRETCHY_REPORT_ID_PARAM_NAME, \n-            STRETCHY_REPORT_PARAM_MAP_PARAM_NAME, IS_ACTIVE_PARAM_NAME, START_DATE_TIME_PARAM_NAME));\n+            STRETCHY_REPORT_PARAM_MAP_PARAM_NAME, IS_ACTIVE_PARAM_NAME, START_DATE_TIME_PARAM_NAME)));\n     \n     // list of permitted parameters for the update report mailing job request\n-    public static final Set<String> UPDATE_REQUEST_PARAMETERS = new HashSet<>(Arrays.asList(LOCALE_PARAM_NAME, DATE_FORMAT_PARAM_NAME, \n+    public static final Set<String> UPDATE_REQUEST_PARAMETERS =\n+            Collections.unmodifiableSet(new HashSet<>(Arrays.asList(LOCALE_PARAM_NAME, DATE_FORMAT_PARAM_NAME,\n             NAME_PARAM_NAME, DESCRIPTION_PARAM_NAME, RECURRENCE_PARAM_NAME, EMAIL_RECIPIENTS_PARAM_NAME, EMAIL_SUBJECT_PARAM_NAME, \n             EMAIL_MESSAGE_PARAM_NAME, EMAIL_ATTACHMENT_FILE_FORMAT_ID_PARAM_NAME, STRETCHY_REPORT_ID_PARAM_NAME, \n-            STRETCHY_REPORT_PARAM_MAP_PARAM_NAME, IS_ACTIVE_PARAM_NAME, START_DATE_TIME_PARAM_NAME));\n+            STRETCHY_REPORT_PARAM_MAP_PARAM_NAME, IS_ACTIVE_PARAM_NAME, START_DATE_TIME_PARAM_NAME)));\n     \n     // list of parameters that represent the properties of a report mailing job\n-    public static final Set<String> REPORT_MAILING_JOB_DATA_PARAMETERS = new HashSet<>(Arrays.asList(ID_PARAM_NAME, NAME_PARAM_NAME, \n+    public static final Set<String> REPORT_MAILING_JOB_DATA_PARAMETERS =\n+            Collections.unmodifiableSet(new HashSet<>(Arrays.asList(ID_PARAM_NAME, NAME_PARAM_NAME,\n             DESCRIPTION_PARAM_NAME, RECURRENCE_PARAM_NAME, EMAIL_RECIPIENTS_PARAM_NAME, EMAIL_SUBJECT_PARAM_NAME, EMAIL_MESSAGE_PARAM_NAME, \n             EMAIL_ATTACHMENT_FILE_FORMAT_PARAM_NAME, STRETCHY_REPORT_PARAM_NAME, STRETCHY_REPORT_PARAM_MAP_PARAM_NAME, IS_ACTIVE_PARAM_NAME, \n             START_DATE_TIME_PARAM_NAME, PREVIOUS_RUN_DATE_TIME_PARAM_NAME, NEXT_RUN_DATE_TIME_PARAM_NAME, PREVIOUS_RUN_STATUS, \n-            PREVIOUS_RUN_ERROR_LOG, PREVIOUS_RUN_ERROR_MESSAGE, NUMBER_OF_RUNS));\n+            PREVIOUS_RUN_ERROR_LOG, PREVIOUS_RUN_ERROR_MESSAGE, NUMBER_OF_RUNS)));\n     \n     // report mailing job configuration names\n     public static final String GMAIL_SMTP_SERVER = \"GMAIL_SMTP_SERVER\";",
                "deletions": 6
            },
            {
                "sha": "e44c474acb7c0a0773518a3f3ed00e9a7ca98217",
                "filename": "fineract-provider/src/main/java/org/apache/fineract/infrastructure/campaigns/email/service/EmailCampaignReadPlatformServiceImpl.java",
                "blob_url": "https://github.com/apache/fineract/blob/af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1/fineract-provider/src/main/java/org/apache/fineract/infrastructure/campaigns/email/service/EmailCampaignReadPlatformServiceImpl.java",
                "raw_url": "https://github.com/apache/fineract/raw/af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1/fineract-provider/src/main/java/org/apache/fineract/infrastructure/campaigns/email/service/EmailCampaignReadPlatformServiceImpl.java",
                "status": "modified",
                "changes": 22,
                "additions": 12,
                "contents_url": "https://api.github.com/repos/apache/fineract/contents/fineract-provider/src/main/java/org/apache/fineract/infrastructure/campaigns/email/service/EmailCampaignReadPlatformServiceImpl.java?ref=af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1",
                "patch": "@@ -18,21 +18,20 @@\n  */\n package org.apache.fineract.infrastructure.campaigns.email.service;\n \n-import org.joda.time.DateTime;\n-import org.joda.time.LocalDate;\n-import org.apache.fineract.infrastructure.core.data.EnumOptionData;\n-import org.apache.fineract.infrastructure.core.domain.JdbcSupport;\n-import org.apache.fineract.infrastructure.core.service.RoutingDataSource;\n-import org.apache.fineract.infrastructure.dataqueries.data.ReportData;\n-import org.apache.fineract.infrastructure.campaigns.email.data.ScheduledEmailEnumerations;\n-import org.apache.fineract.infrastructure.campaigns.email.exception.EmailBusinessRuleNotFound;\n-import org.apache.fineract.infrastructure.campaigns.email.exception.EmailCampaignNotFound;\n import org.apache.fineract.infrastructure.campaigns.email.data.EmailBusinessRulesData;\n import org.apache.fineract.infrastructure.campaigns.email.data.EmailCampaignData;\n import org.apache.fineract.infrastructure.campaigns.email.data.EmailCampaignTimeLine;\n+import org.apache.fineract.infrastructure.campaigns.email.data.ScheduledEmailEnumerations;\n import org.apache.fineract.infrastructure.campaigns.email.domain.EmailCampaignStatus;\n import org.apache.fineract.infrastructure.campaigns.email.domain.EmailCampaignStatusEnumerations;\n import org.apache.fineract.infrastructure.campaigns.email.domain.EmailCampaignType;\n+import org.apache.fineract.infrastructure.campaigns.email.exception.EmailBusinessRuleNotFound;\n+import org.apache.fineract.infrastructure.campaigns.email.exception.EmailCampaignNotFound;\n+import org.apache.fineract.infrastructure.core.data.EnumOptionData;\n+import org.apache.fineract.infrastructure.core.domain.JdbcSupport;\n+import org.apache.fineract.infrastructure.core.service.RoutingDataSource;\n+import org.joda.time.DateTime;\n+import org.joda.time.LocalDate;\n import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.dao.DataAccessException;\n import org.springframework.dao.EmptyResultDataAccessException;\n@@ -130,8 +129,11 @@ public EmailCampaignData mapRow(ResultSet rs, int rowNum) throws SQLException {\n             final boolean coreReport = rs.getBoolean(\"coreReport\");\n             final boolean useReport = rs.getBoolean(\"useReport\");\n \n-            final ReportData stretchyReport = new ReportData(reportId, reportName, reportType, reportSubType, reportCategory,\n+            /*\n+            final ReportData stretchyReport = new ReportData(reportId, reportName, reportType, reportSubType,\n+                    reportCategory,\n                     reportDescription, reportSql, coreReport, useReport, null);\n+             */\n \n             final Integer statusId = JdbcSupport.getInteger(rs, \"statusEnum\");\n             final EnumOptionData status = EmailCampaignStatusEnumerations.status(statusId);",
                "deletions": 10
            },
            {
                "sha": "1e5eb074e4a4caedd9bd0eff96c51cf14bacb1e8",
                "filename": "fineract-provider/src/main/java/org/apache/fineract/infrastructure/core/boot/ApplicationExitUtil.java",
                "blob_url": "https://github.com/apache/fineract/blob/af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1/fineract-provider/src/main/java/org/apache/fineract/infrastructure/core/boot/ApplicationExitUtil.java",
                "raw_url": "https://github.com/apache/fineract/raw/af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1/fineract-provider/src/main/java/org/apache/fineract/infrastructure/core/boot/ApplicationExitUtil.java",
                "status": "modified",
                "changes": 3,
                "additions": 2,
                "contents_url": "https://api.github.com/repos/apache/fineract/contents/fineract-provider/src/main/java/org/apache/fineract/infrastructure/core/boot/ApplicationExitUtil.java?ref=af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1",
                "patch": "@@ -21,6 +21,7 @@\n import java.io.BufferedReader;\n import java.io.IOException;\n import java.io.InputStreamReader;\n+import java.nio.charset.Charset;\n \n import org.springframework.context.ConfigurableApplicationContext;\n \n@@ -37,7 +38,7 @@ public static void waitForKeyPressToCleanlyExit(ConfigurableApplicationContext c\n         System.out.println(\"\\nHit Enter to quit...\");\n         // NOTE: In Eclipse, System.console() is not available.. so:\n         // (@see https://bugs.eclipse.org/bugs/show_bug.cgi?id=122429)\n-        BufferedReader d = new BufferedReader(new InputStreamReader(System.in));\n+        BufferedReader d = new BufferedReader(new InputStreamReader(System.in, Charset.defaultCharset()));\n         d.readLine();\n \n         ctx.stop();",
                "deletions": 1
            },
            {
                "sha": "0a073d04459e640fe5ee540af45a0d738284cd5d",
                "filename": "fineract-provider/src/main/java/org/apache/fineract/infrastructure/core/data/DataValidatorBuilder.java",
                "blob_url": "https://github.com/apache/fineract/blob/af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1/fineract-provider/src/main/java/org/apache/fineract/infrastructure/core/data/DataValidatorBuilder.java",
                "raw_url": "https://github.com/apache/fineract/raw/af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1/fineract-provider/src/main/java/org/apache/fineract/infrastructure/core/data/DataValidatorBuilder.java",
                "status": "modified",
                "changes": 2,
                "additions": 1,
                "contents_url": "https://api.github.com/repos/apache/fineract/contents/fineract-provider/src/main/java/org/apache/fineract/infrastructure/core/data/DataValidatorBuilder.java?ref=af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1",
                "patch": "@@ -475,7 +475,7 @@ public DataValidatorBuilder integerSameAsNumber(Integer number) {\n \n         if (this.value != null) {\n             final Integer intValue = Integer.valueOf(this.value.toString());\n-            if (intValue != number) {\n+            if (!intValue.equals(number)) {\n                 final StringBuilder validationErrorCode = new StringBuilder(\"validation.msg.\").append(this.resource).append(\".\")\n                         .append(this.parameter).append(\".not.equal.to.specified.number\");\n                 final StringBuilder defaultEnglishMessage = new StringBuilder(\"The parameter \").append(this.parameter)",
                "deletions": 1
            },
            {
                "sha": "0d656fa0d99015629dc4db1a1ae4b37d24519b16",
                "filename": "fineract-provider/src/main/java/org/apache/fineract/infrastructure/core/data/EnumOptionData.java",
                "blob_url": "https://github.com/apache/fineract/blob/af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1/fineract-provider/src/main/java/org/apache/fineract/infrastructure/core/data/EnumOptionData.java",
                "raw_url": "https://github.com/apache/fineract/raw/af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1/fineract-provider/src/main/java/org/apache/fineract/infrastructure/core/data/EnumOptionData.java",
                "status": "modified",
                "changes": 22,
                "additions": 19,
                "contents_url": "https://api.github.com/repos/apache/fineract/contents/fineract-provider/src/main/java/org/apache/fineract/infrastructure/core/data/EnumOptionData.java?ref=af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1",
                "patch": "@@ -18,12 +18,15 @@\n  */\n package org.apache.fineract.infrastructure.core.data;\n \n+import java.io.Serializable;\n+import java.util.Objects;\n+\n /**\n  * <p>\n  * Immutable data object representing generic enumeration value.\n  * </p>\n  */\n-public class EnumOptionData {\n+public class EnumOptionData implements Serializable {\n \n     private final Long id;\n     private final String code;\n@@ -46,6 +49,19 @@ public String getCode() {\n     public String getValue() {\n         return this.value;\n     }\n-    \n-    \n+\n+    @Override\n+    public boolean equals(Object o) {\n+        if (this == o) return true;\n+        if (!(o instanceof EnumOptionData)) return false;\n+        EnumOptionData that = (EnumOptionData) o;\n+        return id.equals(that.id) &&\n+                code.equals(that.code) &&\n+                value.equals(that.value);\n+    }\n+\n+    @Override\n+    public int hashCode() {\n+        return Objects.hash(id, code, value);\n+    }\n }\n\\ No newline at end of file",
                "deletions": 3
            },
            {
                "sha": "ce4d15a297390c7f962e8557c607e0f3b74473e6",
                "filename": "fineract-provider/src/main/java/org/apache/fineract/infrastructure/core/service/AbandonedConnectionCleanupShutdownListener.java",
                "blob_url": "https://github.com/apache/fineract/blob/af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1/fineract-provider/src/main/java/org/apache/fineract/infrastructure/core/service/AbandonedConnectionCleanupShutdownListener.java",
                "raw_url": "https://github.com/apache/fineract/raw/af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1/fineract-provider/src/main/java/org/apache/fineract/infrastructure/core/service/AbandonedConnectionCleanupShutdownListener.java",
                "status": "modified",
                "changes": 4,
                "additions": 3,
                "contents_url": "https://api.github.com/repos/apache/fineract/contents/fineract-provider/src/main/java/org/apache/fineract/infrastructure/core/service/AbandonedConnectionCleanupShutdownListener.java?ref=af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1",
                "patch": "@@ -66,6 +66,8 @@ private void shutDowncleanUpThreadAndDeregisterJDBCDriver() {\n         }\n         try {\n             Thread.sleep(2000L);\n-        } catch (Exception e) {}\n+        } catch (Exception e) {\n+        \tlogger.error(\"Exception Occcured while trying to sleep.\", e);\n+        }\n     }\n }\n\\ No newline at end of file",
                "deletions": 1
            },
            {
                "sha": "4f4768bdb1ea660e1ed1fe9d5e299e7e24de822d",
                "filename": "fineract-provider/src/main/java/org/apache/fineract/infrastructure/core/service/Page.java",
                "blob_url": "https://github.com/apache/fineract/blob/af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1/fineract-provider/src/main/java/org/apache/fineract/infrastructure/core/service/Page.java",
                "raw_url": "https://github.com/apache/fineract/raw/af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1/fineract-provider/src/main/java/org/apache/fineract/infrastructure/core/service/Page.java",
                "status": "modified",
                "changes": 3,
                "additions": 2,
                "contents_url": "https://api.github.com/repos/apache/fineract/contents/fineract-provider/src/main/java/org/apache/fineract/infrastructure/core/service/Page.java?ref=af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1",
                "patch": "@@ -18,9 +18,10 @@\n  */\n package org.apache.fineract.infrastructure.core.service;\n \n+import java.io.Serializable;\n import java.util.List;\n \n-public class Page<E> {\n+public class Page<E> implements Serializable {\n \n     private final int totalFilteredRecords;\n     private final List<E> pageItems;",
                "deletions": 1
            },
            {
                "sha": "72f9a9c18d7ed4ab6c298c2229e5b38f3ba99870",
                "filename": "fineract-provider/src/main/java/org/apache/fineract/infrastructure/dataqueries/data/DatatableCheckStatusData.java",
                "blob_url": "https://github.com/apache/fineract/blob/af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1/fineract-provider/src/main/java/org/apache/fineract/infrastructure/dataqueries/data/DatatableCheckStatusData.java",
                "raw_url": "https://github.com/apache/fineract/raw/af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1/fineract-provider/src/main/java/org/apache/fineract/infrastructure/dataqueries/data/DatatableCheckStatusData.java",
                "status": "modified",
                "changes": 4,
                "additions": 3,
                "contents_url": "https://api.github.com/repos/apache/fineract/contents/fineract-provider/src/main/java/org/apache/fineract/infrastructure/dataqueries/data/DatatableCheckStatusData.java?ref=af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1",
                "patch": "@@ -18,7 +18,9 @@\n  */\n package org.apache.fineract.infrastructure.dataqueries.data;\n \n-public class DatatableCheckStatusData {\n+import java.io.Serializable;\n+\n+public class DatatableCheckStatusData implements Serializable {\n \n \tprivate final String name;\n \tprivate final int code;",
                "deletions": 1
            },
            {
                "sha": "7e52d7f71080a9eb4697507b6bd493b6485456ed",
                "filename": "fineract-provider/src/main/java/org/apache/fineract/infrastructure/dataqueries/data/DatatableData.java",
                "blob_url": "https://github.com/apache/fineract/blob/af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1/fineract-provider/src/main/java/org/apache/fineract/infrastructure/dataqueries/data/DatatableData.java",
                "raw_url": "https://github.com/apache/fineract/raw/af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1/fineract-provider/src/main/java/org/apache/fineract/infrastructure/dataqueries/data/DatatableData.java",
                "status": "modified",
                "changes": 3,
                "additions": 2,
                "contents_url": "https://api.github.com/repos/apache/fineract/contents/fineract-provider/src/main/java/org/apache/fineract/infrastructure/dataqueries/data/DatatableData.java?ref=af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1",
                "patch": "@@ -18,12 +18,13 @@\n  */\n package org.apache.fineract.infrastructure.dataqueries.data;\n \n+import java.io.Serializable;\n import java.util.List;\n \n /**\n  * Immutable data object representing datatable data.\n  */\n-public class DatatableData {\n+public class DatatableData implements Serializable {\n \n     @SuppressWarnings(\"unused\")\n     private final String applicationTableName;",
                "deletions": 1
            },
            {
                "sha": "4b559b76420ddc4e6aade44b2af620028b1cb3b4",
                "filename": "fineract-provider/src/main/java/org/apache/fineract/infrastructure/dataqueries/data/EntityDataTableChecksTemplateData.java",
                "blob_url": "https://github.com/apache/fineract/blob/af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1/fineract-provider/src/main/java/org/apache/fineract/infrastructure/dataqueries/data/EntityDataTableChecksTemplateData.java",
                "raw_url": "https://github.com/apache/fineract/raw/af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1/fineract-provider/src/main/java/org/apache/fineract/infrastructure/dataqueries/data/EntityDataTableChecksTemplateData.java",
                "status": "modified",
                "changes": 32,
                "additions": 29,
                "contents_url": "https://api.github.com/repos/apache/fineract/contents/fineract-provider/src/main/java/org/apache/fineract/infrastructure/dataqueries/data/EntityDataTableChecksTemplateData.java?ref=af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1",
                "patch": "@@ -18,12 +18,15 @@\n  */\n package org.apache.fineract.infrastructure.dataqueries.data;\n \n+import org.apache.commons.lang.builder.EqualsBuilder;\n+import org.apache.commons.lang.builder.HashCodeBuilder;\n+import org.apache.fineract.portfolio.loanproduct.data.LoanProductData;\n+import org.apache.fineract.portfolio.savings.data.SavingsProductData;\n+\n import java.io.Serializable;\n import java.util.Collection;\n import java.util.List;\n-\n-import org.apache.fineract.portfolio.loanproduct.data.LoanProductData;\n-import org.apache.fineract.portfolio.savings.data.SavingsProductData;\n+import java.util.Objects;\n \n /**\n  * Immutable data object for role data.\n@@ -53,4 +56,27 @@ public EntityDataTableChecksTemplateData(final List<String> entities, List<Datat\n \t\tthis.loanProductDatas = loanProductDatas;\n \t\tthis.savingsProductDatas = savingsProductDatas;\n \t}\n+\n+\t@Override\n+\tpublic boolean equals(Object o) {\n+\t\tif (this == o) return true;\n+\n+\t\tif (!(o instanceof EntityDataTableChecksTemplateData)) return false;\n+\n+\t\tEntityDataTableChecksTemplateData that = (EntityDataTableChecksTemplateData) o;\n+\n+\t\treturn Objects.equals(entities, that.entities) &&\n+\t\t\t   Objects.equals(statusClient, that.statusClient) &&\n+\t\t\t\tObjects.equals(statusGroup, that.statusGroup) &&\n+\t\t\t\tObjects.equals(statusSavings, that.statusSavings) &&\n+\t\t\t\tObjects.equals(statusLoans, that.statusLoans) &&\n+\t\t\t\tObjects.equals(datatables, that.datatables) &&\n+\t\t\t\tObjects.equals(loanProductDatas, that.loanProductDatas) &&\n+\t\t\t\tObjects.equals(savingsProductDatas, that.savingsProductDatas);\n+\t}\n+\n+\t@Override\n+\tpublic int hashCode() {\n+\t\treturn Objects.hash(entities, statusClient, statusGroup, statusSavings, statusLoans, datatables, loanProductDatas, savingsProductDatas);\n+\t}\n }\n\\ No newline at end of file",
                "deletions": 3
            },
            {
                "sha": "31d306493f9a6267147257c18e76ac3a2becfab7",
                "filename": "fineract-provider/src/main/java/org/apache/fineract/infrastructure/dataqueries/data/ResultsetColumnHeaderData.java",
                "blob_url": "https://github.com/apache/fineract/blob/af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1/fineract-provider/src/main/java/org/apache/fineract/infrastructure/dataqueries/data/ResultsetColumnHeaderData.java",
                "raw_url": "https://github.com/apache/fineract/raw/af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1/fineract-provider/src/main/java/org/apache/fineract/infrastructure/dataqueries/data/ResultsetColumnHeaderData.java",
                "status": "modified",
                "changes": 7,
                "additions": 4,
                "contents_url": "https://api.github.com/repos/apache/fineract/contents/fineract-provider/src/main/java/org/apache/fineract/infrastructure/dataqueries/data/ResultsetColumnHeaderData.java?ref=af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1",
                "patch": "@@ -18,15 +18,16 @@\n  */\n package org.apache.fineract.infrastructure.dataqueries.data;\n \n+import org.apache.fineract.infrastructure.core.exception.PlatformDataIntegrityException;\n+\n+import java.io.Serializable;\n import java.util.ArrayList;\n import java.util.List;\n \n-import org.apache.fineract.infrastructure.core.exception.PlatformDataIntegrityException;\n-\n /**\n  * Immutable data object representing a resultset column.\n  */\n-public final class ResultsetColumnHeaderData {\n+public final class ResultsetColumnHeaderData implements Serializable {\n \n     private final String columnName;\n     private String columnType;",
                "deletions": 3
            },
            {
                "sha": "ae9e7940ac2c5e6837e13ee96b1b8ec3396e8b9c",
                "filename": "fineract-provider/src/main/java/org/apache/fineract/infrastructure/dataqueries/data/ResultsetColumnValueData.java",
                "blob_url": "https://github.com/apache/fineract/blob/af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1/fineract-provider/src/main/java/org/apache/fineract/infrastructure/dataqueries/data/ResultsetColumnValueData.java",
                "raw_url": "https://github.com/apache/fineract/raw/af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1/fineract-provider/src/main/java/org/apache/fineract/infrastructure/dataqueries/data/ResultsetColumnValueData.java",
                "status": "modified",
                "changes": 4,
                "additions": 3,
                "contents_url": "https://api.github.com/repos/apache/fineract/contents/fineract-provider/src/main/java/org/apache/fineract/infrastructure/dataqueries/data/ResultsetColumnValueData.java?ref=af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1",
                "patch": "@@ -18,11 +18,13 @@\n  */\n package org.apache.fineract.infrastructure.dataqueries.data;\n \n+import java.io.Serializable;\n+\n /**\n  * Immutable data object representing a possible value for a given resultset\n  * column.\n  */\n-public class ResultsetColumnValueData {\n+public class ResultsetColumnValueData implements Serializable {\n \n     private final int id;\n     private final String value;",
                "deletions": 1
            },
            {
                "sha": "ed4f0b754c33b6f303d2f256dca51a1f31781668",
                "filename": "fineract-provider/src/main/java/org/apache/fineract/infrastructure/dataqueries/service/ReadWriteNonCoreDataServiceImpl.java",
                "blob_url": "https://github.com/apache/fineract/blob/af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1/fineract-provider/src/main/java/org/apache/fineract/infrastructure/dataqueries/service/ReadWriteNonCoreDataServiceImpl.java",
                "raw_url": "https://github.com/apache/fineract/raw/af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1/fineract-provider/src/main/java/org/apache/fineract/infrastructure/dataqueries/service/ReadWriteNonCoreDataServiceImpl.java",
                "status": "modified",
                "changes": 34,
                "additions": 11,
                "contents_url": "https://api.github.com/repos/apache/fineract/contents/fineract-provider/src/main/java/org/apache/fineract/infrastructure/dataqueries/service/ReadWriteNonCoreDataServiceImpl.java?ref=af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1",
                "patch": "@@ -18,19 +18,10 @@\n  */\n package org.apache.fineract.infrastructure.dataqueries.service;\n \n-import java.lang.reflect.Type;\n-import java.math.BigDecimal;\n-import java.util.ArrayList;\n-import java.util.Arrays;\n-import java.util.HashMap;\n-import java.util.List;\n-import java.util.Locale;\n-import java.util.Map;\n-import java.util.Set;\n-\n-import javax.persistence.PersistenceException;\n-import javax.sql.DataSource;\n-\n+import com.google.gson.JsonArray;\n+import com.google.gson.JsonElement;\n+import com.google.gson.JsonObject;\n+import com.google.gson.reflect.TypeToken;\n import org.apache.commons.lang.BooleanUtils;\n import org.apache.commons.lang.StringUtils;\n import org.apache.commons.lang.exception.ExceptionUtils;\n@@ -51,11 +42,7 @@\n import org.apache.fineract.infrastructure.core.serialization.JsonParserHelper;\n import org.apache.fineract.infrastructure.core.service.RoutingDataSource;\n import org.apache.fineract.infrastructure.dataqueries.api.DataTableApiConstant;\n-import org.apache.fineract.infrastructure.dataqueries.data.DataTableValidator;\n-import org.apache.fineract.infrastructure.dataqueries.data.DatatableData;\n-import org.apache.fineract.infrastructure.dataqueries.data.GenericResultsetData;\n-import org.apache.fineract.infrastructure.dataqueries.data.ResultsetColumnHeaderData;\n-import org.apache.fineract.infrastructure.dataqueries.data.ResultsetRowData;\n+import org.apache.fineract.infrastructure.dataqueries.data.*;\n import org.apache.fineract.infrastructure.dataqueries.exception.DatatableEntryRequiredException;\n import org.apache.fineract.infrastructure.dataqueries.exception.DatatableNotFoundException;\n import org.apache.fineract.infrastructure.dataqueries.exception.DatatableSystemErrorException;\n@@ -79,10 +66,11 @@\n import org.springframework.stereotype.Service;\n import org.springframework.transaction.annotation.Transactional;\n \n-import com.google.gson.JsonArray;\n-import com.google.gson.JsonElement;\n-import com.google.gson.JsonObject;\n-import com.google.gson.reflect.TypeToken;\n+import javax.persistence.PersistenceException;\n+import javax.sql.DataSource;\n+import java.lang.reflect.Type;\n+import java.math.BigDecimal;\n+import java.util.*;\n \n @Service\n public class ReadWriteNonCoreDataServiceImpl implements ReadWriteNonCoreDataService {\n@@ -805,7 +793,7 @@ private void parseDatatableColumnForDrop(final JsonObject column, StringBuilder\n             final StringBuilder constrainBuilder, final List<String> codeMappings) {\n         final String datatableAlias = datatableName.toLowerCase().replaceAll(\"\\\\s\", \"_\");\n         final String name = (column.has(\"name\")) ? column.get(\"name\").getAsString() : null;\n-        sqlBuilder = sqlBuilder.append(\", DROP COLUMN `\" + name + \"`\");\n+        //sqlBuilder = sqlBuilder.append(\", DROP COLUMN `\" + name + \"`\");\n         final StringBuilder findFKSql = new StringBuilder();\n         findFKSql.append(\"SELECT count(*)\").append(\"FROM information_schema.TABLE_CONSTRAINTS i\")\n                 .append(\" WHERE i.CONSTRAINT_TYPE = 'FOREIGN KEY'\").append(\" AND i.TABLE_SCHEMA = DATABASE()\")",
                "deletions": 23
            },
            {
                "sha": "24ef611830f498c8a8d5aefbeb805b507f9b8a0a",
                "filename": "fineract-provider/src/main/java/org/apache/fineract/infrastructure/entityaccess/domain/FineractEntityType.java",
                "blob_url": "https://github.com/apache/fineract/blob/af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1/fineract-provider/src/main/java/org/apache/fineract/infrastructure/entityaccess/domain/FineractEntityType.java",
                "raw_url": "https://github.com/apache/fineract/raw/af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1/fineract-provider/src/main/java/org/apache/fineract/infrastructure/entityaccess/domain/FineractEntityType.java",
                "status": "modified",
                "changes": 19,
                "additions": 11,
                "contents_url": "https://api.github.com/repos/apache/fineract/contents/fineract-provider/src/main/java/org/apache/fineract/infrastructure/entityaccess/domain/FineractEntityType.java?ref=af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1",
                "patch": "@@ -23,11 +23,14 @@\n \tprivate String description;\n \tprivate String table_name;\n \t\n-\tpublic static FineractEntityType OFFICE = new FineractEntityType (\"office\", \"Offices\", \"m_office\"); \n-\tpublic static FineractEntityType LOAN_PRODUCT = new FineractEntityType (\"loan_product\", \"Loan Products\", \"m_product_loan\");\n-\tpublic static FineractEntityType SAVINGS_PRODUCT = new FineractEntityType (\"savings_product\", \"Savings Products\", \"m_savings_product\");\n-\tpublic static FineractEntityType CHARGE = new FineractEntityType (\"charge\", \"Fees/Charges\", \"m_charge\");\n-\tpublic static FineractEntityType SHARE_PRODUCT = new FineractEntityType(\"shares_product\", \"Shares Products\", \"m_share_product\") ;\n+\tpublic static final FineractEntityType OFFICE = new FineractEntityType (\"office\", \"Offices\", \"m_office\");\n+\tpublic static final FineractEntityType LOAN_PRODUCT = new FineractEntityType (\"loan_product\", \"Loan Products\",\n+\t\t\t\t\t\"m_product_loan\");\n+\tpublic static final FineractEntityType SAVINGS_PRODUCT = new FineractEntityType (\"savings_product\", \"Savings Products\"\n+\t\t\t\t\t, \"m_savings_product\");\n+\tpublic static final FineractEntityType CHARGE = new FineractEntityType (\"charge\", \"Fees/Charges\", \"m_charge\");\n+\tpublic static final FineractEntityType SHARE_PRODUCT = new FineractEntityType(\"shares_product\", \"Shares Products\",\n+\t\t\t\t\t\"m_share_product\") ;\n \t\n \tprivate FineractEntityType (String type, String description, String table_name) {\n \t\tthis.type = type;\n@@ -55,11 +58,11 @@ public static FineractEntityType get (String type) {\n     \t\tretType =  OFFICE;\n     \t} else if (type.equals(LOAN_PRODUCT.type)) { \n     \t\t\tretType = LOAN_PRODUCT;\n-    \t} else if (type.equals(SAVINGS_PRODUCT)) { \n+    \t} else if (type.equals(SAVINGS_PRODUCT.type)) {\n     \t\t\tretType = SAVINGS_PRODUCT;\n-    \t} else if (type.equals(CHARGE)) {\n+    \t} else if (type.equals(CHARGE.type)) {\n     \t\tretType = CHARGE;\n-    \t}else if(type.equals(SHARE_PRODUCT)) {\n+    \t}else if(type.equals(SHARE_PRODUCT.type)) {\n     \t\tretType = SHARE_PRODUCT ;\n     \t}\n     \treturn retType;",
                "deletions": 8
            },
            {
                "sha": "87470c20d52bf0268d6228645c037ac36bdaa217",
                "filename": "fineract-provider/src/main/java/org/apache/fineract/infrastructure/gcm/domain/Sender.java",
                "blob_url": "https://github.com/apache/fineract/blob/af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1/fineract-provider/src/main/java/org/apache/fineract/infrastructure/gcm/domain/Sender.java",
                "raw_url": "https://github.com/apache/fineract/raw/af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1/fineract-provider/src/main/java/org/apache/fineract/infrastructure/gcm/domain/Sender.java",
                "status": "modified",
                "changes": 75,
                "additions": 12,
                "contents_url": "https://api.github.com/repos/apache/fineract/contents/fineract-provider/src/main/java/org/apache/fineract/infrastructure/gcm/domain/Sender.java?ref=af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1",
                "patch": "@@ -18,80 +18,29 @@\n  */\n package org.apache.fineract.infrastructure.gcm.domain;\n \n-import static org.apache.fineract.infrastructure.gcm.GcmConstants.JSON_CANONICAL_IDS;\n-import static org.apache.fineract.infrastructure.gcm.GcmConstants.JSON_ERROR;\n-import static org.apache.fineract.infrastructure.gcm.GcmConstants.JSON_FAILURE;\n-import static org.apache.fineract.infrastructure.gcm.GcmConstants.JSON_MESSAGE_ID;\n-import static org.apache.fineract.infrastructure.gcm.GcmConstants.JSON_MULTICAST_ID;\n-import static org.apache.fineract.infrastructure.gcm.GcmConstants.JSON_NOTIFICATION_BADGE;\n-import static org.apache.fineract.infrastructure.gcm.GcmConstants.JSON_NOTIFICATION;\n-import static org.apache.fineract.infrastructure.gcm.GcmConstants.JSON_NOTIFICATION_BODY;\n-import static org.apache.fineract.infrastructure.gcm.GcmConstants.JSON_NOTIFICATION_BODY_LOC_ARGS;\n-import static org.apache.fineract.infrastructure.gcm.GcmConstants.JSON_NOTIFICATION_BODY_LOC_KEY;\n-import static org.apache.fineract.infrastructure.gcm.GcmConstants.JSON_NOTIFICATION_CLICK_ACTION;\n-import static org.apache.fineract.infrastructure.gcm.GcmConstants.JSON_NOTIFICATION_COLOR;\n-import static org.apache.fineract.infrastructure.gcm.GcmConstants.JSON_NOTIFICATION_ICON;\n-import static org.apache.fineract.infrastructure.gcm.GcmConstants.JSON_NOTIFICATION_SOUND;\n-import static org.apache.fineract.infrastructure.gcm.GcmConstants.JSON_NOTIFICATION_TAG;\n-import static org.apache.fineract.infrastructure.gcm.GcmConstants.JSON_NOTIFICATION_TITLE;\n-import static org.apache.fineract.infrastructure.gcm.GcmConstants.JSON_NOTIFICATION_TITLE_LOC_ARGS;\n-import static org.apache.fineract.infrastructure.gcm.GcmConstants.JSON_NOTIFICATION_TITLE_LOC_KEY;\n-import static org.apache.fineract.infrastructure.gcm.GcmConstants.JSON_PAYLOAD;\n-import static org.apache.fineract.infrastructure.gcm.GcmConstants.JSON_REGISTRATION_IDS;\n-import static org.apache.fineract.infrastructure.gcm.GcmConstants.JSON_TO;\n-import static org.apache.fineract.infrastructure.gcm.GcmConstants.JSON_RESULTS;\n-import static org.apache.fineract.infrastructure.gcm.GcmConstants.JSON_SUCCESS;\n-import static org.apache.fineract.infrastructure.gcm.GcmConstants.PARAM_COLLAPSE_KEY;\n-import static org.apache.fineract.infrastructure.gcm.GcmConstants.PARAM_DELAY_WHILE_IDLE;\n-import static org.apache.fineract.infrastructure.gcm.GcmConstants.PARAM_DRY_RUN;\n-import static org.apache.fineract.infrastructure.gcm.GcmConstants.PARAM_PRIORITY;\n-import static org.apache.fineract.infrastructure.gcm.GcmConstants.PARAM_CONTENT_AVAILABLE;\n-import static org.apache.fineract.infrastructure.gcm.GcmConstants.PARAM_RESTRICTED_PACKAGE_NAME;\n-import static org.apache.fineract.infrastructure.gcm.GcmConstants.PARAM_TIME_TO_LIVE;\n-import static org.apache.fineract.infrastructure.gcm.GcmConstants.TOKEN_CANONICAL_REG_ID;\n-import static org.apache.fineract.infrastructure.gcm.GcmConstants.TOPIC_PREFIX;\n-\n-import org.apache.fineract.infrastructure.gcm.GcmConstants;\n-import org.apache.fineract.infrastructure.gcm.exception.InvalidRequestException;\n-/*import org.json.simple.JSONArray;\n-import org.json.simple.JSONObject;\n-import org.json.simple.JSONValue;\n-import org.json.simple.parser.JSONParser;\n-import org.json.simple.parser.ParseException;*/\n-\n-\n-\n-\n-\n-\n import com.google.gson.Gson;\n import com.google.gson.JsonArray;\n import com.google.gson.JsonObject;\n import com.google.gson.JsonParser;\n+import org.apache.fineract.infrastructure.gcm.GcmConstants;\n+import org.apache.fineract.infrastructure.gcm.exception.InvalidRequestException;\n \n-import java.io.BufferedReader;\n-import java.io.Closeable;\n-import java.io.IOException;\n-import java.io.InputStream;\n-import java.io.InputStreamReader;\n-import java.io.OutputStream;\n+import java.io.*;\n import java.net.HttpURLConnection;\n import java.net.URL;\n-import java.util.ArrayList;\n-import java.util.HashMap;\n-import java.util.List;\n-import java.util.Map;\n-import java.util.Random;\n+import java.nio.charset.Charset;\n+import java.nio.charset.StandardCharsets;\n+import java.util.*;\n import java.util.logging.Level;\n import java.util.logging.Logger;\n \n+import static org.apache.fineract.infrastructure.gcm.GcmConstants.*;\n+\n /**\n  * Helper class to send messages to the GCM service using an API Key.\n  */\n public class Sender {\n \n-\tprotected static final String UTF8 = \"UTF-8\";\n-\n \t/**\n \t * Initial delay before first retry, without jitter.\n \t */\n@@ -262,7 +211,7 @@ public Result sendNoRetry(Message message, String to) throws IOException {\n \t\t\t\t\t\t\t\t.get(TOKEN_CANONICAL_REG_ID).getAsString();\n \t\t\t\t\t}\n \t\t\t\t\tif(jsonResult.has(JSON_ERROR)){\n-\t\t\t\t\t\terror = (String) jsonResult.get(JSON_ERROR).getAsString();\n+\t\t\t\t\t\terror = jsonResult.get(JSON_ERROR).getAsString();\n \t\t\t\t\t}\n \t\t\t\t\tint success = 0;\n \t\t\t\t\tint failure = 0;\n@@ -306,7 +255,7 @@ public Result sendNoRetry(Message message, String to) throws IOException {\n \t\t\t\tint failure = getNumber(responseMap, JSON_FAILURE).intValue();\n \t\t\t\tList<String> failedIds = null;\n \t\t\t\tif (jsonResponse.has(\"failed_registration_ids\")) {\n-\t\t\t\t\tJsonArray jFailedIds = (JsonArray) jsonResponse\n+\t\t\t\t\tJsonArray jFailedIds = jsonResponse\n \t\t\t\t\t\t\t.get(\"failed_registration_ids\").getAsJsonArray();\n \t\t\t\t\tfailedIds = new ArrayList<>();\n \t\t\t\t\tfor (int i = 0; i < jFailedIds.size(); i++) {\n@@ -709,7 +658,7 @@ protected HttpURLConnection post(String url, String contentType, String body)\n \t\t}\n \t\tlogger.fine(\"Sending POST to \" + url);\n \t\tlogger.finest(\"POST body: \" + body);\n-\t\tbyte[] bytes = body.getBytes(UTF8);\n+\t\tbyte[] bytes = body.getBytes(StandardCharsets.UTF_8);\n \t\tHttpURLConnection conn = getConnection(url);\n \t\tconn.setDoOutput(true);\n \t\tconn.setUseCaches(false);\n@@ -789,7 +738,7 @@ protected static String getString(InputStream stream) throws IOException {\n \t\t\treturn \"\";\n \t\t}\n \t\tBufferedReader reader = new BufferedReader(\n-\t\t\t\tnew InputStreamReader(stream));\n+\t\t\t\tnew InputStreamReader(stream, StandardCharsets.UTF_8));\n \t\tStringBuilder content = new StringBuilder();\n \t\tString newLine;\n \t\tdo {",
                "deletions": 63
            },
            {
                "sha": "444e49de45700da11b100fd0d580cf85ac27bcd2",
                "filename": "fineract-provider/src/main/java/org/apache/fineract/infrastructure/hooks/data/Field.java",
                "blob_url": "https://github.com/apache/fineract/blob/af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1/fineract-provider/src/main/java/org/apache/fineract/infrastructure/hooks/data/Field.java",
                "raw_url": "https://github.com/apache/fineract/raw/af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1/fineract-provider/src/main/java/org/apache/fineract/infrastructure/hooks/data/Field.java",
                "status": "modified",
                "changes": 4,
                "additions": 3,
                "contents_url": "https://api.github.com/repos/apache/fineract/contents/fineract-provider/src/main/java/org/apache/fineract/infrastructure/hooks/data/Field.java?ref=af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1",
                "patch": "@@ -18,8 +18,10 @@\n  */\n package org.apache.fineract.infrastructure.hooks.data;\n \n+import java.io.Serializable;\n+\n @SuppressWarnings(\"unused\")\n-public class Field {\n+public class Field implements Serializable {\n \n \tprivate final String fieldName;\n \tprivate final String fieldValue;",
                "deletions": 1
            },
            {
                "sha": "8560c644b5dd963e5a00271578844371e891f0f9",
                "filename": "fineract-provider/src/main/java/org/apache/fineract/infrastructure/reportmailingjob/ReportMailingJobConstants.java",
                "blob_url": "https://github.com/apache/fineract/blob/af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1/fineract-provider/src/main/java/org/apache/fineract/infrastructure/reportmailingjob/ReportMailingJobConstants.java",
                "raw_url": "https://github.com/apache/fineract/raw/af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1/fineract-provider/src/main/java/org/apache/fineract/infrastructure/reportmailingjob/ReportMailingJobConstants.java",
                "status": "modified",
                "changes": 25,
                "additions": 15,
                "contents_url": "https://api.github.com/repos/apache/fineract/contents/fineract-provider/src/main/java/org/apache/fineract/infrastructure/reportmailingjob/ReportMailingJobConstants.java?ref=af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1",
                "patch": "@@ -18,11 +18,13 @@\n  */\n package org.apache.fineract.infrastructure.reportmailingjob;\n \n+import java.io.Serializable;\n import java.util.Arrays;\n+import java.util.Collections;\n import java.util.HashSet;\n import java.util.Set;\n \n-public class ReportMailingJobConstants {\n+public class ReportMailingJobConstants implements Serializable {\n \n     // define the API resource entity name\n     public static final String REPORT_MAILING_JOB_ENTITY_NAME = \"REPORTMAILINGJOB\";\n@@ -62,23 +64,26 @@\n     public static final String STRETCHY_REPORT_PARAM_NAME = \"stretchyReport\";\n     \n     // list of permitted parameters for the create report mailing job request\n-    public static final Set<String> CREATE_REQUEST_PARAMETERS = new HashSet<>(Arrays.asList(LOCALE_PARAM_NAME, DATE_FORMAT_PARAM_NAME, \n-            NAME_PARAM_NAME, DESCRIPTION_PARAM_NAME, RECURRENCE_PARAM_NAME, EMAIL_RECIPIENTS_PARAM_NAME, EMAIL_SUBJECT_PARAM_NAME, \n-            EMAIL_MESSAGE_PARAM_NAME, EMAIL_ATTACHMENT_FILE_FORMAT_ID_PARAM_NAME, STRETCHY_REPORT_ID_PARAM_NAME, \n-            STRETCHY_REPORT_PARAM_MAP_PARAM_NAME, IS_ACTIVE_PARAM_NAME, START_DATE_TIME_PARAM_NAME));\n-    \n+    public static final Set<String> CREATE_REQUEST_PARAMETERS =\n+            Collections.unmodifiableSet(new HashSet<>(Arrays.asList(LOCALE_PARAM_NAME, DATE_FORMAT_PARAM_NAME,\n+            NAME_PARAM_NAME, DESCRIPTION_PARAM_NAME, RECURRENCE_PARAM_NAME, EMAIL_RECIPIENTS_PARAM_NAME, EMAIL_SUBJECT_PARAM_NAME,\n+            EMAIL_MESSAGE_PARAM_NAME, EMAIL_ATTACHMENT_FILE_FORMAT_ID_PARAM_NAME, STRETCHY_REPORT_ID_PARAM_NAME,\n+            STRETCHY_REPORT_PARAM_MAP_PARAM_NAME, IS_ACTIVE_PARAM_NAME, START_DATE_TIME_PARAM_NAME)));\n+\n     // list of permitted parameters for the update report mailing job request\n-    public static final Set<String> UPDATE_REQUEST_PARAMETERS = new HashSet<>(Arrays.asList(LOCALE_PARAM_NAME, DATE_FORMAT_PARAM_NAME, \n+    public static final Set<String> UPDATE_REQUEST_PARAMETERS =\n+            Collections.unmodifiableSet(new HashSet<>(Arrays.asList(LOCALE_PARAM_NAME, DATE_FORMAT_PARAM_NAME,\n             NAME_PARAM_NAME, DESCRIPTION_PARAM_NAME, RECURRENCE_PARAM_NAME, EMAIL_RECIPIENTS_PARAM_NAME, EMAIL_SUBJECT_PARAM_NAME, \n             EMAIL_MESSAGE_PARAM_NAME, EMAIL_ATTACHMENT_FILE_FORMAT_ID_PARAM_NAME, STRETCHY_REPORT_ID_PARAM_NAME, \n-            STRETCHY_REPORT_PARAM_MAP_PARAM_NAME, IS_ACTIVE_PARAM_NAME, START_DATE_TIME_PARAM_NAME));\n+            STRETCHY_REPORT_PARAM_MAP_PARAM_NAME, IS_ACTIVE_PARAM_NAME, START_DATE_TIME_PARAM_NAME)));\n     \n     // list of parameters that represent the properties of a report mailing job\n-    public static final Set<String> REPORT_MAILING_JOB_DATA_PARAMETERS = new HashSet<>(Arrays.asList(ID_PARAM_NAME, NAME_PARAM_NAME, \n+    public static final Set<String> REPORT_MAILING_JOB_DATA_PARAMETERS =\n+            Collections.unmodifiableSet(new HashSet<>(Arrays.asList(ID_PARAM_NAME, NAME_PARAM_NAME,\n             DESCRIPTION_PARAM_NAME, RECURRENCE_PARAM_NAME, EMAIL_RECIPIENTS_PARAM_NAME, EMAIL_SUBJECT_PARAM_NAME, EMAIL_MESSAGE_PARAM_NAME, \n             EMAIL_ATTACHMENT_FILE_FORMAT_PARAM_NAME, STRETCHY_REPORT_PARAM_NAME, STRETCHY_REPORT_PARAM_MAP_PARAM_NAME, IS_ACTIVE_PARAM_NAME, \n             START_DATE_TIME_PARAM_NAME, PREVIOUS_RUN_DATE_TIME_PARAM_NAME, NEXT_RUN_DATE_TIME_PARAM_NAME, PREVIOUS_RUN_STATUS, \n-            PREVIOUS_RUN_ERROR_LOG, PREVIOUS_RUN_ERROR_MESSAGE, NUMBER_OF_RUNS));\n+            PREVIOUS_RUN_ERROR_LOG, PREVIOUS_RUN_ERROR_MESSAGE, NUMBER_OF_RUNS)));\n     \n     // report mailing job configuration names\n     public static final String GMAIL_SMTP_SERVER = \"GMAIL_SMTP_SERVER\";",
                "deletions": 10
            },
            {
                "sha": "24e2a6c60be4b5e876de7f7825df280172b4e811",
                "filename": "fineract-provider/src/main/java/org/apache/fineract/infrastructure/reportmailingjob/data/ReportMailingJobEmailAttachmentFileFormat.java",
                "blob_url": "https://github.com/apache/fineract/blob/af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1/fineract-provider/src/main/java/org/apache/fineract/infrastructure/reportmailingjob/data/ReportMailingJobEmailAttachmentFileFormat.java",
                "raw_url": "https://github.com/apache/fineract/raw/af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1/fineract-provider/src/main/java/org/apache/fineract/infrastructure/reportmailingjob/data/ReportMailingJobEmailAttachmentFileFormat.java",
                "status": "modified",
                "changes": 14,
                "additions": 7,
                "contents_url": "https://api.github.com/repos/apache/fineract/contents/fineract-provider/src/main/java/org/apache/fineract/infrastructure/reportmailingjob/data/ReportMailingJobEmailAttachmentFileFormat.java?ref=af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1",
                "patch": "@@ -18,12 +18,12 @@\n  */\n package org.apache.fineract.infrastructure.reportmailingjob.data;\n \n-import java.util.ArrayList;\n-import java.util.List;\n-\n import org.apache.commons.lang.StringUtils;\n import org.apache.fineract.infrastructure.core.data.EnumOptionData;\n \n+import java.util.ArrayList;\n+import java.util.List;\n+\n public enum ReportMailingJobEmailAttachmentFileFormat {\n     INVALID(0, \"ReportMailingJobEmailAttachmentFileFormat.INVALID\", \"Invalid\"),\n     XLS(1, \"ReportMailingJobEmailAttachmentFileFormat.XLS\", \"XLS\"),\n@@ -34,7 +34,7 @@\n     private String value;\n     private Integer id;\n     \n-    private ReportMailingJobEmailAttachmentFileFormat(final Integer id, final String code, final String value) {\n+    ReportMailingJobEmailAttachmentFileFormat(final Integer id, final String code, final String value) {\n         this.value = value;\n         this.code = code;\n         this.id = id;\n@@ -69,11 +69,11 @@ public static ReportMailingJobEmailAttachmentFileFormat newInstance(final String\n     public static ReportMailingJobEmailAttachmentFileFormat newInstance(final Integer id) {\n         ReportMailingJobEmailAttachmentFileFormat emailAttachmentFileFormat = INVALID;\n         \n-        if (id == XLS.id) {\n+        if (id.equals(XLS.id)) {\n             emailAttachmentFileFormat = XLS;\n-        } else if (id == PDF.id) {\n+        } else if (id.equals(PDF.id)) {\n             emailAttachmentFileFormat = PDF;\n-        } else if (id == CSV.id) {\n+        } else if (id.equals(CSV.id)) {\n             emailAttachmentFileFormat = CSV;\n         }\n         ",
                "deletions": 7
            },
            {
                "sha": "6959d83b737d45e941b2145c9cde0061c9af8ece",
                "filename": "fineract-provider/src/main/java/org/apache/fineract/infrastructure/reportmailingjob/data/ReportMailingJobStretchyReportParamDateOption.java",
                "blob_url": "https://github.com/apache/fineract/blob/af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1/fineract-provider/src/main/java/org/apache/fineract/infrastructure/reportmailingjob/data/ReportMailingJobStretchyReportParamDateOption.java",
                "raw_url": "https://github.com/apache/fineract/raw/af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1/fineract-provider/src/main/java/org/apache/fineract/infrastructure/reportmailingjob/data/ReportMailingJobStretchyReportParamDateOption.java",
                "status": "modified",
                "changes": 12,
                "additions": 6,
                "contents_url": "https://api.github.com/repos/apache/fineract/contents/fineract-provider/src/main/java/org/apache/fineract/infrastructure/reportmailingjob/data/ReportMailingJobStretchyReportParamDateOption.java?ref=af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1",
                "patch": "@@ -18,12 +18,12 @@\n  */\n package org.apache.fineract.infrastructure.reportmailingjob.data;\n \n-import java.util.ArrayList;\n-import java.util.List;\n-\n import org.apache.commons.lang.StringUtils;\n import org.apache.fineract.infrastructure.core.data.EnumOptionData;\n \n+import java.util.ArrayList;\n+import java.util.List;\n+\n public enum ReportMailingJobStretchyReportParamDateOption {\n     INVALID(0, \"ReportMailingJobStretchyReportParamDateOption.INVALID\", \"Invalid\"),\n     TODAY(1, \"ReportMailingJobStretchyReportParamDateOption.TODAY\", \"Today\"),\n@@ -74,11 +74,11 @@ public static ReportMailingJobStretchyReportParamDateOption newInstance(final St\n     public static ReportMailingJobStretchyReportParamDateOption newInstance(final Integer id) {\n         ReportMailingJobStretchyReportParamDateOption reportMailingJobStretchyReportParamDateOption = INVALID;\n         \n-        if (id == TODAY.id) {\n+        if (id.equals(TODAY.id)) {\n             reportMailingJobStretchyReportParamDateOption = TODAY;\n-        } else if (id == YESTERDAY.id) {\n+        } else if (id.equals(YESTERDAY.id)) {\n             reportMailingJobStretchyReportParamDateOption = YESTERDAY;\n-        } else if (id == TOMORROW.id) {\n+        } else if (id.equals(TOMORROW.id)) {\n             reportMailingJobStretchyReportParamDateOption = TOMORROW;\n         }\n         ",
                "deletions": 6
            },
            {
                "sha": "b88110c1929732fbc26f3828139c8fd50d122af4",
                "filename": "fineract-provider/src/main/java/org/apache/fineract/infrastructure/security/api/AuthenticationApiResource.java",
                "blob_url": "https://github.com/apache/fineract/blob/af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1/fineract-provider/src/main/java/org/apache/fineract/infrastructure/security/api/AuthenticationApiResource.java",
                "raw_url": "https://github.com/apache/fineract/raw/af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1/fineract-provider/src/main/java/org/apache/fineract/infrastructure/security/api/AuthenticationApiResource.java",
                "status": "modified",
                "changes": 6,
                "additions": 4,
                "contents_url": "https://api.github.com/repos/apache/fineract/contents/fineract-provider/src/main/java/org/apache/fineract/infrastructure/security/api/AuthenticationApiResource.java?ref=af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1",
                "patch": "@@ -18,6 +18,8 @@\n  */\n package org.apache.fineract.infrastructure.security.api;\n \n+import java.nio.charset.Charset;\n+import java.nio.charset.StandardCharsets;\n import java.util.ArrayList;\n import java.util.Collection;\n import java.util.Set;\n@@ -129,12 +131,12 @@ public String authenticate(final String apiRequestBodyAsJson) {\n                     principal.hasSpecificPermissionTo(TwoFactorConstants.BYPASS_TWO_FACTOR_PERMISSION);\n             if (this.springSecurityPlatformSecurityContext.doesPasswordHasToBeRenewed(principal)) {\n                 authenticatedUserData = new AuthenticatedUserData(request.username, principal.getId(),\n-                        new String(base64EncodedAuthenticationKey), isTwoFactorRequired);\n+                        new String(base64EncodedAuthenticationKey, StandardCharsets.UTF_8), isTwoFactorRequired);\n             } else {\n \n                 authenticatedUserData = new AuthenticatedUserData(request.username, officeId, officeName, staffId, staffDisplayName,\n                         organisationalRole, roles, permissions, principal.getId(),\n-                        new String(base64EncodedAuthenticationKey), isTwoFactorRequired);\n+                        new String(base64EncodedAuthenticationKey, StandardCharsets.UTF_8), isTwoFactorRequired);\n             }\n \n         }",
                "deletions": 2
            },
            {
                "sha": "a69c6bcc4d410a69a9443787520220a42c4da97c",
                "filename": "fineract-provider/src/main/java/org/apache/fineract/infrastructure/security/constants/TwoFactorConfigurationConstants.java",
                "blob_url": "https://github.com/apache/fineract/blob/af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1/fineract-provider/src/main/java/org/apache/fineract/infrastructure/security/constants/TwoFactorConfigurationConstants.java",
                "raw_url": "https://github.com/apache/fineract/raw/af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1/fineract-provider/src/main/java/org/apache/fineract/infrastructure/security/constants/TwoFactorConfigurationConstants.java",
                "status": "modified",
                "changes": 17,
                "additions": 7,
                "contents_url": "https://api.github.com/repos/apache/fineract/contents/fineract-provider/src/main/java/org/apache/fineract/infrastructure/security/constants/TwoFactorConfigurationConstants.java?ref=af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1",
                "patch": "@@ -18,10 +18,7 @@\n  */\n package org.apache.fineract.infrastructure.security.constants;\n \n-import java.util.Arrays;\n-import java.util.HashSet;\n-import java.util.List;\n-import java.util.Set;\n+import java.util.*;\n \n public class TwoFactorConfigurationConstants {\n \n@@ -42,18 +39,18 @@\n     public static final String ACCESS_TOKEN_LIVE_TIME_EXTENDED = \"access-token-live-time-extended\";\n \n     public static final Set<String> REQUEST_DATA_PARAMETERS =\n-            new HashSet<>(Arrays.asList(ENABLE_EMAIL_DELIVERY, EMAIL_SUBJECT, EMAIL_BODY,\n+            Collections.unmodifiableSet(new HashSet<>(Arrays.asList(ENABLE_EMAIL_DELIVERY, EMAIL_SUBJECT, EMAIL_BODY,\n                     ENABLE_SMS_DELIVERY, SMS_PROVIDER_ID, SMS_MESSAGE_TEXT, OTP_TOKEN_LIVE_TIME,\n-                    OTP_TOKEN_LENGTH, ACCESS_TOKEN_LIVE_TIME, ACCESS_TOKEN_LIVE_TIME_EXTENDED));\n+                    OTP_TOKEN_LENGTH, ACCESS_TOKEN_LIVE_TIME, ACCESS_TOKEN_LIVE_TIME_EXTENDED)));\n \n     public static final List<String> STRING_PARAMETERS =\n-            Arrays.asList(EMAIL_SUBJECT, EMAIL_BODY, SMS_MESSAGE_TEXT);\n+            Collections.unmodifiableList(Arrays.asList(EMAIL_SUBJECT, EMAIL_BODY, SMS_MESSAGE_TEXT));\n \n     public static final List<String> BOOLEAN_PARAMETERS =\n-            Arrays.asList(ENABLE_EMAIL_DELIVERY, ENABLE_SMS_DELIVERY);\n+            Collections.unmodifiableList(Arrays.asList(ENABLE_EMAIL_DELIVERY, ENABLE_SMS_DELIVERY));\n \n     public static final List<String> NUMBER_PARAMETERS =\n-            Arrays.asList(SMS_PROVIDER_ID, OTP_TOKEN_LIVE_TIME, OTP_TOKEN_LENGTH,\n-                    ACCESS_TOKEN_LIVE_TIME, ACCESS_TOKEN_LIVE_TIME_EXTENDED);\n+            Collections.unmodifiableList(Arrays.asList(SMS_PROVIDER_ID, OTP_TOKEN_LIVE_TIME, OTP_TOKEN_LENGTH,\n+                    ACCESS_TOKEN_LIVE_TIME, ACCESS_TOKEN_LIVE_TIME_EXTENDED));\n \n }",
                "deletions": 10
            },
            {
                "sha": "842a82c1d9d26ffc4b212d20edd8d602a42a34a5",
                "filename": "fineract-provider/src/main/java/org/apache/fineract/interoperation/data/InteropResponseData.java",
                "blob_url": "https://github.com/apache/fineract/blob/af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1/fineract-provider/src/main/java/org/apache/fineract/interoperation/data/InteropResponseData.java",
                "raw_url": "https://github.com/apache/fineract/raw/af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1/fineract-provider/src/main/java/org/apache/fineract/interoperation/data/InteropResponseData.java",
                "status": "modified",
                "changes": 2,
                "additions": 1,
                "contents_url": "https://api.github.com/repos/apache/fineract/contents/fineract-provider/src/main/java/org/apache/fineract/interoperation/data/InteropResponseData.java?ref=af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1",
                "patch": "@@ -34,7 +34,7 @@\n \n     public static final String ISO_DATE_TIME_PATTERN = \"yyyy-MM-dd'T'HH:mm:ssZ\";\n //    public static final SimpleDateFormat ISO_DATE_TIME_FORMATTER = new SimpleDateFormat(ISO_DATE_TIME_PATTERN); // TODO: not synchronized\n-    public static DateTimeFormatter ISO_DATE_TIME_FORMATTER = DateTimeFormat.forPattern(ISO_DATE_TIME_PATTERN);\n+    public static final DateTimeFormatter ISO_DATE_TIME_FORMATTER = DateTimeFormat.forPattern(ISO_DATE_TIME_PATTERN);\n \n     @NotNull\n     private final String transactionCode;",
                "deletions": 1
            },
            {
                "sha": "77cbc69c1f01be2344c1641cd76ee7da15b5bfb6",
                "filename": "fineract-provider/src/main/java/org/apache/fineract/notification/service/TopicDomainServiceImpl.java",
                "blob_url": "https://github.com/apache/fineract/blob/af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1/fineract-provider/src/main/java/org/apache/fineract/notification/service/TopicDomainServiceImpl.java",
                "raw_url": "https://github.com/apache/fineract/raw/af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1/fineract-provider/src/main/java/org/apache/fineract/notification/service/TopicDomainServiceImpl.java",
                "status": "modified",
                "changes": 2,
                "additions": 1,
                "contents_url": "https://api.github.com/repos/apache/fineract/contents/fineract-provider/src/main/java/org/apache/fineract/notification/service/TopicDomainServiceImpl.java?ref=af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1",
                "patch": "@@ -162,7 +162,7 @@ public void updateUserSubscription( AppUser userToUpdate, Map<String, Object> ch\n             \n             for (TopicSubscriber subscriber : oldSubscriptions) {\n             \tfor (Topic topic : oldTopics) {\n-            \t\tif (subscriber.getTopic().getId() == topic.getId()) {\n+            \t\tif (subscriber.getTopic().getId().equals(topic.getId())) {\n             \t\t\ttopicSubscriberRepository.delete(subscriber);\n             \t\t}\n             \t}",
                "deletions": 1
            },
            {
                "sha": "42d550a2dab7498d7f8dfe3d787049a3f6281d6c",
                "filename": "fineract-provider/src/main/java/org/apache/fineract/organisation/monetary/data/CurrencyData.java",
                "blob_url": "https://github.com/apache/fineract/blob/af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1/fineract-provider/src/main/java/org/apache/fineract/organisation/monetary/data/CurrencyData.java",
                "raw_url": "https://github.com/apache/fineract/raw/af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1/fineract-provider/src/main/java/org/apache/fineract/organisation/monetary/data/CurrencyData.java",
                "status": "modified",
                "changes": 35,
                "additions": 23,
                "contents_url": "https://api.github.com/repos/apache/fineract/contents/fineract-provider/src/main/java/org/apache/fineract/organisation/monetary/data/CurrencyData.java?ref=af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1",
                "patch": "@@ -18,10 +18,13 @@\n  */\n package org.apache.fineract.organisation.monetary.data;\n \n+import java.io.Serializable;\n+import java.util.Objects;\n+\n /**\n  * Immutable data object representing currency.\n  */\n-public class CurrencyData {\n+public class CurrencyData implements Serializable {\n \n     private final String code;\n     private final String name;\n@@ -70,17 +73,6 @@ public Integer currencyInMultiplesOf() {\n         return this.inMultiplesOf;\n     }\n \n-    @Override\n-    public boolean equals(final Object obj) {\n-        final CurrencyData currencyData = (CurrencyData) obj;\n-        return currencyData.code.equals(this.code);\n-    }\n-\n-    @Override\n-    public int hashCode() {\n-        return this.code.hashCode();\n-    }\n-\n     private String generateDisplayLabel() {\n \n         final StringBuilder builder = new StringBuilder(this.name).append(' ');\n@@ -97,4 +89,23 @@ private String generateDisplayLabel() {\n     public String getName() {\n         return name;\n     }\n+\n+    @Override\n+    public boolean equals(Object o) {\n+        if (this == o) return true;\n+        if (!(o instanceof CurrencyData)) return false;\n+        CurrencyData that = (CurrencyData) o;\n+        return Objects.equals(decimalPlaces, that.decimalPlaces) &&\n+                Objects.equals(code, that.code) &&\n+                Objects.equals(name, that.name) &&\n+                Objects.equals(inMultiplesOf, that.inMultiplesOf) &&\n+                Objects.equals(displaySymbol, that.displaySymbol) &&\n+                Objects.equals(nameCode, that.nameCode) &&\n+                Objects.equals(displayLabel, that.displayLabel);\n+    }\n+\n+    @Override\n+    public int hashCode() {\n+        return Objects.hash(code, name, decimalPlaces, inMultiplesOf, displaySymbol, nameCode, displayLabel);\n+    }\n }\n\\ No newline at end of file",
                "deletions": 12
            },
            {
                "sha": "9b867f3e80188eec52042869235e18d85203b81f",
                "filename": "fineract-provider/src/main/java/org/apache/fineract/organisation/monetary/domain/ApplicationCurrency.java",
                "blob_url": "https://github.com/apache/fineract/blob/af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1/fineract-provider/src/main/java/org/apache/fineract/organisation/monetary/domain/ApplicationCurrency.java",
                "raw_url": "https://github.com/apache/fineract/raw/af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1/fineract-provider/src/main/java/org/apache/fineract/organisation/monetary/domain/ApplicationCurrency.java",
                "status": "modified",
                "changes": 8,
                "additions": 4,
                "contents_url": "https://api.github.com/repos/apache/fineract/contents/fineract-provider/src/main/java/org/apache/fineract/organisation/monetary/domain/ApplicationCurrency.java?ref=af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1",
                "patch": "@@ -18,14 +18,14 @@\n  */\n package org.apache.fineract.organisation.monetary.domain;\n \n+import org.apache.fineract.infrastructure.core.domain.AbstractPersistableCustom;\n+import org.apache.fineract.organisation.monetary.data.CurrencyData;\n+import org.apache.fineract.organisation.office.domain.OrganisationCurrency;\n+\n import javax.persistence.Column;\n import javax.persistence.Entity;\n import javax.persistence.Table;\n \n-import org.apache.fineract.organisation.monetary.data.CurrencyData;\n-import org.apache.fineract.organisation.office.domain.OrganisationCurrency;\n-import org.apache.fineract.infrastructure.core.domain.AbstractPersistableCustom;\n-\n @Entity\n @Table(name = \"m_currency\")\n public class ApplicationCurrency extends AbstractPersistableCustom<Long> {",
                "deletions": 4
            },
            {
                "sha": "8f3a75fa0deed608548b170446609ee8ad3113f4",
                "filename": "fineract-provider/src/main/java/org/apache/fineract/organisation/monetary/domain/MoneyHelper.java",
                "blob_url": "https://github.com/apache/fineract/blob/af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1/fineract-provider/src/main/java/org/apache/fineract/organisation/monetary/domain/MoneyHelper.java",
                "raw_url": "https://github.com/apache/fineract/raw/af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1/fineract-provider/src/main/java/org/apache/fineract/organisation/monetary/domain/MoneyHelper.java",
                "status": "modified",
                "changes": 11,
                "additions": 6,
                "contents_url": "https://api.github.com/repos/apache/fineract/contents/fineract-provider/src/main/java/org/apache/fineract/organisation/monetary/domain/MoneyHelper.java?ref=af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1",
                "patch": "@@ -18,15 +18,15 @@\n  */\n package org.apache.fineract.organisation.monetary.domain;\n \n-import java.math.MathContext;\n-import java.math.RoundingMode;\n-\n-import javax.annotation.PostConstruct;\n-\n+import net.sf.ehcache.util.FindBugsSuppressWarnings;\n import org.apache.fineract.infrastructure.configuration.domain.ConfigurationDomainService;\n import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.stereotype.Component;\n \n+import javax.annotation.PostConstruct;\n+import java.math.MathContext;\n+import java.math.RoundingMode;\n+\n @Component\n public class MoneyHelper {\n \n@@ -40,6 +40,7 @@\n     private ConfigurationDomainService configurationDomainService;\n \n     @PostConstruct\n+    @FindBugsSuppressWarnings(\"ST_WRITE_TO_STATIC_FROM_INSTANCE_METHOD\")\n     public void someFunction () {\n         staticConfigurationDomainService = configurationDomainService;\n     }",
                "deletions": 5
            },
            {
                "sha": "ac76c8a56f868f75a8c62b981f1728602048248f",
                "filename": "fineract-provider/src/main/java/org/apache/fineract/organisation/provisioning/domain/ProvisioningCriteria.java",
                "blob_url": "https://github.com/apache/fineract/blob/af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1/fineract-provider/src/main/java/org/apache/fineract/organisation/provisioning/domain/ProvisioningCriteria.java",
                "raw_url": "https://github.com/apache/fineract/raw/af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1/fineract-provider/src/main/java/org/apache/fineract/organisation/provisioning/domain/ProvisioningCriteria.java",
                "status": "modified",
                "changes": 21,
                "additions": 5,
                "contents_url": "https://api.github.com/repos/apache/fineract/contents/fineract-provider/src/main/java/org/apache/fineract/organisation/provisioning/domain/ProvisioningCriteria.java?ref=af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1",
                "patch": "@@ -18,21 +18,6 @@\n  */\n package org.apache.fineract.organisation.provisioning.domain;\n \n-import java.time.Instant;\n-import java.util.HashSet;\n-import java.util.LinkedHashMap;\n-import java.util.List;\n-import java.util.Map;\n-import java.util.Set;\n-\n-import javax.persistence.CascadeType;\n-import javax.persistence.Column;\n-import javax.persistence.Entity;\n-import javax.persistence.FetchType;\n-import javax.persistence.OneToMany;\n-import javax.persistence.Table;\n-import javax.persistence.UniqueConstraint;\n-\n import org.apache.fineract.accounting.glaccount.domain.GLAccount;\n import org.apache.fineract.infrastructure.core.api.JsonCommand;\n import org.apache.fineract.infrastructure.core.domain.AbstractAuditableCustom;\n@@ -42,6 +27,10 @@\n import org.apache.fineract.useradministration.domain.AppUser;\n import org.joda.time.DateTime;\n \n+import javax.persistence.*;\n+import java.time.Instant;\n+import java.util.*;\n+\n @Entity\n @Table(name = \"m_provisioning_criteria\", uniqueConstraints = { @UniqueConstraint(columnNames = { \"criteria_name\" }, name = \"criteria_name\") })\n public class ProvisioningCriteria extends AbstractAuditableCustom<AppUser, Long> {\n@@ -72,7 +61,7 @@ public ProvisioningCriteria(String criteriaName, AppUser createdBy, DateTime cre\n         setCreatedBy(createdBy) ;\n         setCreatedDate(Instant.ofEpochMilli(createdDate.getMillis()));\n         setLastModifiedBy(lastModifiedBy) ;\n-        setLastModifiedDate(lastModifiedDate  == null ? null : Instant.ofEpochMilli(lastModifiedDate.getMillis()));\n+        setLastModifiedDate(Instant.ofEpochMilli(lastModifiedDate.getMillis()));\n     }\n \n     public void setProvisioningCriteriaDefinitions(Set<ProvisioningCriteriaDefinition> provisioningCriteriaDefinition) {",
                "deletions": 16
            },
            {
                "sha": "80e51938efb95cfcaf7579cf55aa032bca6e08cd",
                "filename": "fineract-provider/src/main/java/org/apache/fineract/organisation/provisioning/service/ProvisioningCriteriaAssembler.java",
                "blob_url": "https://github.com/apache/fineract/blob/af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1/fineract-provider/src/main/java/org/apache/fineract/organisation/provisioning/service/ProvisioningCriteriaAssembler.java",
                "raw_url": "https://github.com/apache/fineract/raw/af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1/fineract-provider/src/main/java/org/apache/fineract/organisation/provisioning/service/ProvisioningCriteriaAssembler.java",
                "status": "modified",
                "changes": 5,
                "additions": 2,
                "contents_url": "https://api.github.com/repos/apache/fineract/contents/fineract-provider/src/main/java/org/apache/fineract/organisation/provisioning/service/ProvisioningCriteriaAssembler.java?ref=af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1",
                "patch": "@@ -121,10 +121,9 @@ public ProvisioningCriteria fromParsedJson(final JsonElement jsonElement) {\n \n     private ProvisioningCriteria createCriteria(final JsonElement jsonElement) {\n         final String criteriaName = this.fromApiJsonHelper.extractStringNamed(ProvisioningCriteriaConstants.JSON_CRITERIANAME_PARAM, jsonElement);\n-        AppUser modifiedBy = null;\n-        DateTime modifiedOn = null;\n+\n         ProvisioningCriteria criteria = new ProvisioningCriteria(criteriaName, platformSecurityContext.authenticatedUser(), new DateTime(),\n-                modifiedBy, modifiedOn);\n+                platformSecurityContext.authenticatedUser(), new DateTime());\n         return criteria;\n     }\n ",
                "deletions": 3
            },
            {
                "sha": "8394ab4f699531722cf2489298c66dfe9d7f9edf",
                "filename": "fineract-provider/src/main/java/org/apache/fineract/organisation/staff/data/StaffData.java",
                "blob_url": "https://github.com/apache/fineract/blob/af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1/fineract-provider/src/main/java/org/apache/fineract/organisation/staff/data/StaffData.java",
                "raw_url": "https://github.com/apache/fineract/raw/af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1/fineract-provider/src/main/java/org/apache/fineract/organisation/staff/data/StaffData.java",
                "status": "modified",
                "changes": 8,
                "additions": 4,
                "contents_url": "https://api.github.com/repos/apache/fineract/contents/fineract-provider/src/main/java/org/apache/fineract/organisation/staff/data/StaffData.java?ref=af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1",
                "patch": "@@ -18,16 +18,16 @@\n  */\n package org.apache.fineract.organisation.staff.data;\n \n-import java.util.Collection;\n-\n-import org.apache.fineract.infrastructure.bulkimport.constants.TemplatePopulateImportConstants;\n import org.apache.fineract.organisation.office.data.OfficeData;\n import org.joda.time.LocalDate;\n \n+import java.io.Serializable;\n+import java.util.Collection;\n+\n /**\n  * Immutable data object representing staff data.\n  */\n-public class StaffData {\n+public class StaffData implements Serializable {\n \n     private final Long id;\n     private final String externalId;",
                "deletions": 4
            },
            {
                "sha": "2c346ce7879a278fa9c3f6a6323aecb703bacfb0",
                "filename": "fineract-provider/src/main/java/org/apache/fineract/organisation/teller/data/CashierData.java",
                "blob_url": "https://github.com/apache/fineract/blob/af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1/fineract-provider/src/main/java/org/apache/fineract/organisation/teller/data/CashierData.java",
                "raw_url": "https://github.com/apache/fineract/raw/af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1/fineract-provider/src/main/java/org/apache/fineract/organisation/teller/data/CashierData.java",
                "status": "modified",
                "changes": 9,
                "additions": 2,
                "contents_url": "https://api.github.com/repos/apache/fineract/contents/fineract-provider/src/main/java/org/apache/fineract/organisation/teller/data/CashierData.java?ref=af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1",
                "patch": "@@ -18,17 +18,12 @@\n  */\n package org.apache.fineract.organisation.teller.data;\n \n+import org.apache.fineract.organisation.staff.data.StaffData;\n+\n import java.io.Serializable;\n import java.util.Collection;\n import java.util.Date;\n \n-import org.apache.fineract.infrastructure.codes.data.CodeValueData;\n-import org.apache.fineract.organisation.office.data.OfficeData;\n-import org.apache.fineract.organisation.staff.data.StaffData;\n-import org.apache.fineract.portfolio.client.data.ClientData;\n-import org.apache.fineract.portfolio.savings.data.SavingsProductData;\n-import org.joda.time.LocalDate;\n-\n /**\n  * Represents a cashier, providing access to the cashier's office, staff\n  * information, teller, and more.",
                "deletions": 7
            },
            {
                "sha": "c8f39cd7f42bbaaccbd5fd8ee920e863649d550f",
                "filename": "fineract-provider/src/main/java/org/apache/fineract/organisation/teller/domain/CashierTxnType.java",
                "blob_url": "https://github.com/apache/fineract/blob/af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1/fineract-provider/src/main/java/org/apache/fineract/organisation/teller/domain/CashierTxnType.java",
                "raw_url": "https://github.com/apache/fineract/raw/af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1/fineract-provider/src/main/java/org/apache/fineract/organisation/teller/domain/CashierTxnType.java",
                "status": "modified",
                "changes": 4,
                "additions": 2,
                "contents_url": "https://api.github.com/repos/apache/fineract/contents/fineract-provider/src/main/java/org/apache/fineract/organisation/teller/domain/CashierTxnType.java?ref=af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1",
                "patch": "@@ -18,9 +18,9 @@\n  */\n package org.apache.fineract.organisation.teller.domain;\n \n-import java.util.HashMap;\n+import java.io.Serializable;\n \n-public class CashierTxnType {\n+public class CashierTxnType implements Serializable {\n \t\n \tprivate Integer id;\n \tprivate String value;",
                "deletions": 2
            },
            {
                "sha": "a3ccd5ec573ae569273c691c6b17e968ea5c93c6",
                "filename": "fineract-provider/src/main/java/org/apache/fineract/organisation/teller/service/TellerManagementReadPlatformServiceImpl.java",
                "blob_url": "https://github.com/apache/fineract/blob/af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1/fineract-provider/src/main/java/org/apache/fineract/organisation/teller/service/TellerManagementReadPlatformServiceImpl.java",
                "raw_url": "https://github.com/apache/fineract/raw/af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1/fineract-provider/src/main/java/org/apache/fineract/organisation/teller/service/TellerManagementReadPlatformServiceImpl.java",
                "status": "modified",
                "changes": 30,
                "additions": 12,
                "contents_url": "https://api.github.com/repos/apache/fineract/contents/fineract-provider/src/main/java/org/apache/fineract/organisation/teller/service/TellerManagementReadPlatformServiceImpl.java?ref=af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1",
                "patch": "@@ -18,13 +18,6 @@\n  */\n package org.apache.fineract.organisation.teller.service;\n \n-import java.math.BigDecimal;\n-import java.sql.ResultSet;\n-import java.sql.SQLException;\n-import java.util.Collection;\n-import java.util.Date;\n-import java.util.Iterator;\n-\n import org.apache.commons.lang.StringUtils;\n import org.apache.fineract.infrastructure.core.domain.JdbcSupport;\n import org.apache.fineract.infrastructure.core.exception.UnrecognizedQueryParamException;\n@@ -41,13 +34,7 @@\n import org.apache.fineract.organisation.staff.data.StaffData;\n import org.apache.fineract.organisation.staff.exception.StaffNotFoundException;\n import org.apache.fineract.organisation.staff.service.StaffReadPlatformService;\n-import org.apache.fineract.organisation.teller.data.CashierData;\n-import org.apache.fineract.organisation.teller.data.CashierTransactionData;\n-import org.apache.fineract.organisation.teller.data.CashierTransactionTypeTotalsData;\n-import org.apache.fineract.organisation.teller.data.CashierTransactionsWithSummaryData;\n-import org.apache.fineract.organisation.teller.data.TellerData;\n-import org.apache.fineract.organisation.teller.data.TellerJournalData;\n-import org.apache.fineract.organisation.teller.data.TellerTransactionData;\n+import org.apache.fineract.organisation.teller.data.*;\n import org.apache.fineract.organisation.teller.domain.CashierTxnType;\n import org.apache.fineract.organisation.teller.domain.TellerStatus;\n import org.apache.fineract.useradministration.domain.AppUser;\n@@ -60,6 +47,13 @@\n import org.springframework.stereotype.Service;\n import org.springframework.util.CollectionUtils;\n \n+import java.math.BigDecimal;\n+import java.sql.ResultSet;\n+import java.sql.SQLException;\n+import java.util.Collection;\n+import java.util.Date;\n+import java.util.Iterator;\n+\n @Service\n public class TellerManagementReadPlatformServiceImpl implements TellerManagementReadPlatformService {\n \n@@ -482,13 +476,13 @@ public CashierTransactionsWithSummaryData retrieveCashierTransactionsWithSummary\n         while (itr.hasNext()) {\n             CashierTransactionTypeTotalsData total = itr.next();\n             if (total != null) {\n-                if (total.getCashierTxnType() == CashierTxnType.ALLOCATE.getId()) {\n+                if (total.getCashierTxnType().equals(CashierTxnType.ALLOCATE.getId())) {\n                     allocAmount = total.getCashTotal();\n-                } else if (total.getCashierTxnType() == CashierTxnType.SETTLE.getId()) {\n+                } else if (total.getCashierTxnType().equals(CashierTxnType.SETTLE.getId())) {\n                     settleAmount = total.getCashTotal();\n-                } else if (total.getCashierTxnType() == CashierTxnType.INWARD_CASH_TXN.getId()) {\n+                } else if (total.getCashierTxnType().equals(CashierTxnType.INWARD_CASH_TXN.getId())) {\n                     cashInAmount = total.getCashTotal();\n-                } else if (total.getCashierTxnType() == CashierTxnType.OUTWARD_CASH_TXN.getId()) {\n+                } else if (total.getCashierTxnType().equals(CashierTxnType.OUTWARD_CASH_TXN.getId())) {\n                     cashOutAmount = total.getCashTotal();\n                 }\n             }",
                "deletions": 18
            },
            {
                "sha": "264f16ab8eddf85c4963f11b5ea8f16b7121cdfa",
                "filename": "fineract-provider/src/main/java/org/apache/fineract/portfolio/account/PortfolioAccountType.java",
                "blob_url": "https://github.com/apache/fineract/blob/af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1/fineract-provider/src/main/java/org/apache/fineract/portfolio/account/PortfolioAccountType.java",
                "raw_url": "https://github.com/apache/fineract/raw/af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1/fineract-provider/src/main/java/org/apache/fineract/portfolio/account/PortfolioAccountType.java",
                "status": "modified",
                "changes": 6,
                "additions": 3,
                "contents_url": "https://api.github.com/repos/apache/fineract/contents/fineract-provider/src/main/java/org/apache/fineract/portfolio/account/PortfolioAccountType.java?ref=af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1",
                "patch": "@@ -30,7 +30,7 @@\n     private final Integer value;\n     private final String code;\n \n-    private PortfolioAccountType(final Integer value, final String code) {\n+    PortfolioAccountType(final Integer value, final String code) {\n         this.value = value;\n         this.code = code;\n     }\n@@ -71,10 +71,10 @@ public static PortfolioAccountType fromInt(final Integer type) {\n     }\n \n     public boolean isSavingsAccount() {\n-        return this.value == Integer.valueOf(2);\n+        return this.value.equals(2);\n     }\n \n     public boolean isLoanAccount() {\n-        return this.value == Integer.valueOf(1);\n+        return this.value.equals(1);\n     }\n }\n\\ No newline at end of file",
                "deletions": 3
            },
            {
                "sha": "e89597e98bb2c21ac1f0e1f61438817693616c8c",
                "filename": "fineract-provider/src/main/java/org/apache/fineract/portfolio/account/data/AccountTransferData.java",
                "blob_url": "https://github.com/apache/fineract/blob/af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1/fineract-provider/src/main/java/org/apache/fineract/portfolio/account/data/AccountTransferData.java",
                "raw_url": "https://github.com/apache/fineract/raw/af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1/fineract-provider/src/main/java/org/apache/fineract/portfolio/account/data/AccountTransferData.java",
                "status": "modified",
                "changes": 9,
                "additions": 5,
                "contents_url": "https://api.github.com/repos/apache/fineract/contents/fineract-provider/src/main/java/org/apache/fineract/portfolio/account/data/AccountTransferData.java?ref=af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1",
                "patch": "@@ -18,20 +18,21 @@\n  */\n package org.apache.fineract.portfolio.account.data;\n \n-import java.math.BigDecimal;\n-import java.util.Collection;\n-\n import org.apache.fineract.infrastructure.core.data.EnumOptionData;\n import org.apache.fineract.organisation.monetary.data.CurrencyData;\n import org.apache.fineract.organisation.office.data.OfficeData;\n import org.apache.fineract.portfolio.client.data.ClientData;\n import org.joda.time.LocalDate;\n \n+import java.io.Serializable;\n+import java.math.BigDecimal;\n+import java.util.Collection;\n+\n /**\n  * Immutable data object representing a savings account.\n  */\n @SuppressWarnings(\"unused\")\n-public class AccountTransferData {\n+public class AccountTransferData implements Serializable {\n \n     private final Long id;\n     private final Boolean reversed;",
                "deletions": 4
            },
            {
                "sha": "08636d317e5f11e74a18a9712e632d35960d80d2",
                "filename": "fineract-provider/src/main/java/org/apache/fineract/portfolio/account/data/PortfolioAccountData.java",
                "blob_url": "https://github.com/apache/fineract/blob/af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1/fineract-provider/src/main/java/org/apache/fineract/portfolio/account/data/PortfolioAccountData.java",
                "raw_url": "https://github.com/apache/fineract/raw/af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1/fineract-provider/src/main/java/org/apache/fineract/portfolio/account/data/PortfolioAccountData.java",
                "status": "modified",
                "changes": 7,
                "additions": 4,
                "contents_url": "https://api.github.com/repos/apache/fineract/contents/fineract-provider/src/main/java/org/apache/fineract/portfolio/account/data/PortfolioAccountData.java?ref=af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1",
                "patch": "@@ -18,17 +18,18 @@\n  */\n package org.apache.fineract.portfolio.account.data;\n \n-import java.math.BigDecimal;\n-\n import org.apache.commons.lang3.builder.EqualsBuilder;\n import org.apache.commons.lang3.builder.HashCodeBuilder;\n import org.apache.fineract.organisation.monetary.data.CurrencyData;\n \n+import java.io.Serializable;\n+import java.math.BigDecimal;\n+\n /**\n  * Immutable data object representing a savings account.\n  */\n @SuppressWarnings(\"unused\")\n-public class PortfolioAccountData {\n+public class PortfolioAccountData implements Serializable {\n \n     private final Long id;\n     private final String accountNo;",
                "deletions": 3
            },
            {
                "sha": "566b522efc4d6c364c44030318bf67177d3fb8c1",
                "filename": "fineract-provider/src/main/java/org/apache/fineract/portfolio/account/domain/AccountTransferStandingInstruction.java",
                "blob_url": "https://github.com/apache/fineract/blob/af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1/fineract-provider/src/main/java/org/apache/fineract/portfolio/account/domain/AccountTransferStandingInstruction.java",
                "raw_url": "https://github.com/apache/fineract/raw/af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1/fineract-provider/src/main/java/org/apache/fineract/portfolio/account/domain/AccountTransferStandingInstruction.java",
                "status": "modified",
                "changes": 4,
                "additions": 2,
                "contents_url": "https://api.github.com/repos/apache/fineract/contents/fineract-provider/src/main/java/org/apache/fineract/portfolio/account/domain/AccountTransferStandingInstruction.java?ref=af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1",
                "patch": "@@ -218,13 +218,13 @@ private AccountTransferStandingInstruction(final AccountTransferDetails accountT\n             final MonthDay monthDay = command.extractMonthDayNamed(recurrenceOnMonthDayParamName);\n             final String actualValueEntered = command.stringValueOfParameterNamed(recurrenceOnMonthDayParamName);\n             final Integer dayOfMonthValue = monthDay.getDayOfMonth();\n-            if (this.recurrenceOnDay != dayOfMonthValue) {\n+            if (!this.recurrenceOnDay.equals(dayOfMonthValue)) {\n                 actualChanges.put(recurrenceOnMonthDayParamName, actualValueEntered);\n                 this.recurrenceOnDay = dayOfMonthValue;\n             }\n \n             final Integer monthOfYear = monthDay.getMonthOfYear();\n-            if (this.recurrenceOnMonth != monthOfYear) {\n+            if (!this.recurrenceOnMonth.equals(monthOfYear)) {\n                 actualChanges.put(recurrenceOnMonthDayParamName, actualValueEntered);\n                 this.recurrenceOnMonth = monthOfYear;\n             }",
                "deletions": 2
            },
            {
                "sha": "ef5f49a9ff85f8b04f49788d67e8d8d01a67f83a",
                "filename": "fineract-provider/src/main/java/org/apache/fineract/portfolio/accountdetails/data/ShareAccountSummaryData.java",
                "blob_url": "https://github.com/apache/fineract/blob/af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1/fineract-provider/src/main/java/org/apache/fineract/portfolio/accountdetails/data/ShareAccountSummaryData.java",
                "raw_url": "https://github.com/apache/fineract/raw/af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1/fineract-provider/src/main/java/org/apache/fineract/portfolio/accountdetails/data/ShareAccountSummaryData.java",
                "status": "modified",
                "changes": 4,
                "additions": 3,
                "contents_url": "https://api.github.com/repos/apache/fineract/contents/fineract-provider/src/main/java/org/apache/fineract/portfolio/accountdetails/data/ShareAccountSummaryData.java?ref=af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1",
                "patch": "@@ -22,8 +22,10 @@\n import org.apache.fineract.portfolio.shareaccounts.data.ShareAccountApplicationTimelineData;\n import org.apache.fineract.portfolio.shareaccounts.data.ShareAccountStatusEnumData;\n \n+import java.io.Serializable;\n+\n @SuppressWarnings(\"unused\")\n-public class ShareAccountSummaryData {\n+public class ShareAccountSummaryData implements Serializable {\n \n \tprivate final Long id;\n \tprivate final String accountNo;",
                "deletions": 1
            },
            {
                "sha": "4cdadcafdc6e890ffcb2f3a53ad00027a183c019",
                "filename": "fineract-provider/src/main/java/org/apache/fineract/portfolio/accounts/constants/ShareAccountApiConstants.java",
                "blob_url": "https://github.com/apache/fineract/blob/af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1/fineract-provider/src/main/java/org/apache/fineract/portfolio/accounts/constants/ShareAccountApiConstants.java",
                "raw_url": "https://github.com/apache/fineract/raw/af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1/fineract-provider/src/main/java/org/apache/fineract/portfolio/accounts/constants/ShareAccountApiConstants.java",
                "status": "modified",
                "changes": 35,
                "additions": 19,
                "contents_url": "https://api.github.com/repos/apache/fineract/contents/fineract-provider/src/main/java/org/apache/fineract/portfolio/accounts/constants/ShareAccountApiConstants.java?ref=af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1",
                "patch": "@@ -19,17 +19,18 @@\n package org.apache.fineract.portfolio.accounts.constants;\n \n import java.util.Arrays;\n+import java.util.Collections;\n import java.util.HashSet;\n import java.util.Set;\n \n public interface ShareAccountApiConstants {\n \n-\tpublic static final String amountParamName = \"amount\";\n-\tpublic static final String dateFormatParamName = \"dateFormat\";\n-\tpublic static final String dueAsOfDateParamName = \"dueDate\";\n-\tpublic static final String feeIntervalParamName = \"feeInterval\";\n-\tpublic static final String feeOnMonthDayParamName = \"feeOnMonthDay\";\n-\tpublic static final String localeParamName = \"locale\";\n+\tString amountParamName = \"amount\";\n+\tString dateFormatParamName = \"dateFormat\";\n+\tString dueAsOfDateParamName = \"dueDate\";\n+\tString feeIntervalParamName = \"feeInterval\";\n+\tString feeOnMonthDayParamName = \"feeOnMonthDay\";\n+\tString localeParamName = \"locale\";\n \n \t// Command Strings\n \tString APPROVE_COMMAND = \"approve\";\n@@ -91,19 +92,21 @@\n \t\n \tString note_paramname = \"note\" ;\n \t\n-\tpublic String requesteddate_paramname = \"requestedDate\" ;\n+\tString requesteddate_paramname = \"requestedDate\" ;\n \t\n-\tpublic String additionalshares_paramname = \"additionalshares\" ;\n+\tString additionalshares_paramname = \"additionalshares\" ;\n \t\n-\tpublic String closeddate_paramname = \"closedDate\";\n+\tString closeddate_paramname = \"closedDate\";\n \n-\tpublic static final String shareEntityType = \"share\";\n+\tString shareEntityType = \"share\";\n \t\n-\tSet<String> supportedParameters = new HashSet<>(Arrays.asList(locale_paramname, dateformat_paramname, id_paramname,clientid_paramname, productid_paramname,\n-\t        submitteddate_paramname,approveddate_paramname, externalid_paramname, currency_paramname, digitsafterdecimal_paramname,\n-\t        inmultiplesof_paramname, requestedshares_paramname,savingsaccountid_paramname,lockinperiod_paramname,\n-\t        lockperiodfrequencytype_paramname,minimumactiveperiod_paramname, minimumactiveperiodfrequencytype_paramname,\n-\t        allowdividendcalculationforinactiveclients_paramname, charges_paramname, applicationdate_param,\n-\t        purchaseddate_paramname,numberofshares_paramname,purchasedprice_paramname));\n+\tSet<String> supportedParameters = Collections.unmodifiableSet(new HashSet<>(Arrays.asList(locale_paramname,\n+\t\t\t\t\tdateformat_paramname,  id_paramname,clientid_paramname, productid_paramname,\n+\t\t\t\t\tsubmitteddate_paramname,approveddate_paramname, externalid_paramname, currency_paramname,\n+\t\t\t\t\tdigitsafterdecimal_paramname, inmultiplesof_paramname, requestedshares_paramname,\n+\t\t\t\t\tsavingsaccountid_paramname,lockinperiod_paramname, lockperiodfrequencytype_paramname,\n+\t\t\t\t\tminimumactiveperiod_paramname, minimumactiveperiodfrequencytype_paramname,\n+\t\t\t\t\tallowdividendcalculationforinactiveclients_paramname, charges_paramname, applicationdate_param,\n+\t\t\t\t\tpurchaseddate_paramname,numberofshares_paramname,purchasedprice_paramname)));\n \n }",
                "deletions": 16
            },
            {
                "sha": "9d3802252a95cf8d2e22bf665c6f41d9d3ce794c",
                "filename": "fineract-provider/src/main/java/org/apache/fineract/portfolio/address/data/AddressData.java",
                "blob_url": "https://github.com/apache/fineract/blob/af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1/fineract-provider/src/main/java/org/apache/fineract/portfolio/address/data/AddressData.java",
                "raw_url": "https://github.com/apache/fineract/raw/af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1/fineract-provider/src/main/java/org/apache/fineract/portfolio/address/data/AddressData.java",
                "status": "modified",
                "changes": 7,
                "additions": 4,
                "contents_url": "https://api.github.com/repos/apache/fineract/contents/fineract-provider/src/main/java/org/apache/fineract/portfolio/address/data/AddressData.java?ref=af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1",
                "patch": "@@ -18,14 +18,15 @@\n  */\n package org.apache.fineract.portfolio.address.data;\n \n+import org.apache.fineract.infrastructure.codes.data.CodeValueData;\n+\n+import java.io.Serializable;\n import java.math.BigDecimal;\n import java.util.Collection;\n import java.util.Date;\n \n-import org.apache.fineract.infrastructure.codes.data.CodeValueData;\n-\n @SuppressWarnings(\"unused\")\n-public class AddressData {\n+public class AddressData implements Serializable {\n \t\n \tprivate final Long client_id;\n ",
                "deletions": 3
            },
            {
                "sha": "e7f778d52e013a95774836b4117c622753cdcee1",
                "filename": "fineract-provider/src/main/java/org/apache/fineract/portfolio/calendar/data/CalendarData.java",
                "blob_url": "https://github.com/apache/fineract/blob/af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1/fineract-provider/src/main/java/org/apache/fineract/portfolio/calendar/data/CalendarData.java",
                "raw_url": "https://github.com/apache/fineract/raw/af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1/fineract-provider/src/main/java/org/apache/fineract/portfolio/calendar/data/CalendarData.java",
                "status": "modified",
                "changes": 66,
                "additions": 61,
                "contents_url": "https://api.github.com/repos/apache/fineract/contents/fineract-provider/src/main/java/org/apache/fineract/portfolio/calendar/data/CalendarData.java?ref=af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1",
                "patch": "@@ -18,10 +18,6 @@\n  */\n package org.apache.fineract.portfolio.calendar.data;\n \n-import java.util.Collection;\n-import java.util.List;\n-\n-import org.apache.fineract.infrastructure.bulkimport.constants.TemplatePopulateImportConstants;\n import org.apache.fineract.infrastructure.core.data.EnumOptionData;\n import org.apache.fineract.portfolio.calendar.domain.CalendarFrequencyType;\n import org.apache.fineract.portfolio.calendar.domain.CalendarRemindBy;\n@@ -33,10 +29,15 @@\n import org.joda.time.LocalDate;\n import org.joda.time.LocalTime;\n \n+import java.io.Serializable;\n+import java.util.Collection;\n+import java.util.List;\n+import java.util.Objects;\n+\n /**\n  * Immutable data object representing a Calendar.\n  */\n-public class CalendarData {\n+public class CalendarData implements Serializable {\n \n     private final Long id;\n     private final Long calendarInstanceId;\n@@ -491,4 +492,59 @@ public EnumOptionData getRepeatsOnDay() {\n \tpublic EnumOptionData getRepeatsOnNthDayOfMonth() {\n \t\treturn this.repeatsOnNthDayOfMonth;\n \t}\n+\n+    @Override\n+    public boolean equals(Object o) {\n+        if (this == o) return true;\n+        if (!(o instanceof CalendarData)) return false;\n+        CalendarData that = (CalendarData) o;\n+        return Objects.equals(repeating, that.repeating) &&\n+                Objects.equals(id, that.id) &&\n+                Objects.equals(calendarInstanceId, that.calendarInstanceId) &&\n+                Objects.equals(entityId, that.entityId) &&\n+                Objects.equals(entityType, that.entityType) &&\n+                Objects.equals(title, that.title) &&\n+                Objects.equals(description, that.description) &&\n+                Objects.equals(location, that.location) &&\n+                Objects.equals(startDate, that.startDate) &&\n+                Objects.equals(endDate, that.endDate) &&\n+                Objects.equals(meetingTime, that.meetingTime) &&\n+                Objects.equals(duration, that.duration) &&\n+                Objects.equals(type, that.type) &&\n+                Objects.equals(recurrence, that.recurrence) &&\n+                Objects.equals(frequency, that.frequency) &&\n+                Objects.equals(interval, that.interval) &&\n+                Objects.equals(repeatsOnDay, that.repeatsOnDay) &&\n+                Objects.equals(repeatsOnNthDayOfMonth, that.repeatsOnNthDayOfMonth) &&\n+                Objects.equals(remindBy, that.remindBy) &&\n+                Objects.equals(firstReminder, that.firstReminder) &&\n+                Objects.equals(secondReminder, that.secondReminder) &&\n+                Objects.equals(recurringDates, that.recurringDates) &&\n+                Objects.equals(nextTenRecurringDates, that.nextTenRecurringDates) &&\n+                Objects.equals(humanReadable, that.humanReadable) &&\n+                Objects.equals(recentEligibleMeetingDate, that.recentEligibleMeetingDate) &&\n+                Objects.equals(createdDate, that.createdDate) &&\n+                Objects.equals(lastUpdatedDate, that.lastUpdatedDate) &&\n+                Objects.equals(createdByUserId, that.createdByUserId) &&\n+                Objects.equals(createdByUsername, that.createdByUsername) &&\n+                Objects.equals(lastUpdatedByUserId, that.lastUpdatedByUserId) &&\n+                Objects.equals(lastUpdatedByUsername, that.lastUpdatedByUsername) &&\n+                Objects.equals(repeatsOnDayOfMonth, that.repeatsOnDayOfMonth) &&\n+                Objects.equals(entityTypeOptions, that.entityTypeOptions) &&\n+                Objects.equals(calendarTypeOptions, that.calendarTypeOptions) &&\n+                Objects.equals(remindByOptions, that.remindByOptions) &&\n+                Objects.equals(frequencyOptions, that.frequencyOptions) &&\n+                Objects.equals(repeatsOnDayOptions, that.repeatsOnDayOptions) &&\n+                Objects.equals(frequencyNthDayTypeOptions, that.frequencyNthDayTypeOptions) &&\n+                Objects.equals(rowIndex, that.rowIndex) &&\n+                Objects.equals(dateFormat, that.dateFormat) &&\n+                Objects.equals(locale, that.locale) &&\n+                Objects.equals(centerId, that.centerId) &&\n+                Objects.equals(typeId, that.typeId);\n+    }\n+\n+    @Override\n+    public int hashCode() {\n+        return Objects.hash(id, calendarInstanceId, entityId, entityType, title, description, location, startDate, endDate, meetingTime, duration, type, repeating, recurrence, frequency, interval, repeatsOnDay, repeatsOnNthDayOfMonth, remindBy, firstReminder, secondReminder, recurringDates, nextTenRecurringDates, humanReadable, recentEligibleMeetingDate, createdDate, lastUpdatedDate, createdByUserId, createdByUsername, lastUpdatedByUserId, lastUpdatedByUsername, repeatsOnDayOfMonth, entityTypeOptions, calendarTypeOptions, remindByOptions, frequencyOptions, repeatsOnDayOptions, frequencyNthDayTypeOptions, rowIndex, dateFormat, locale, centerId, typeId);\n+    }\n }",
                "deletions": 5
            },
            {
                "sha": "63ca03b6f263f620a937edaf454a628f04c8b0e1",
                "filename": "fineract-provider/src/main/java/org/apache/fineract/portfolio/calendar/domain/Calendar.java",
                "blob_url": "https://github.com/apache/fineract/blob/af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1/fineract-provider/src/main/java/org/apache/fineract/portfolio/calendar/domain/Calendar.java",
                "raw_url": "https://github.com/apache/fineract/raw/af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1/fineract-provider/src/main/java/org/apache/fineract/portfolio/calendar/domain/Calendar.java",
                "status": "modified",
                "changes": 6,
                "additions": 3,
                "contents_url": "https://api.github.com/repos/apache/fineract/contents/fineract-provider/src/main/java/org/apache/fineract/portfolio/calendar/domain/Calendar.java?ref=af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1",
                "patch": "@@ -427,7 +427,7 @@ public static Calendar fromJson(final JsonCommand command) {\n             final Integer interval, final Integer repeatsOnDay, final Integer repeatsOnNthDay) {\n         final Map<String, Object> actualChanges = new LinkedHashMap<>(9);\n \n-        if (calendarStartDate != null & this.startDate != null) {\n+        if (calendarStartDate != null && this.startDate != null) {\n             if (!calendarStartDate.equals(this.getStartDateLocalDate())) {\n                 actualChanges.put(\"startDate\", calendarStartDate);\n                 this.startDate = calendarStartDate.toDate();\n@@ -609,12 +609,12 @@ private static String constructRecurrence(final CalendarFrequencyType frequencyT\n             }\n         }\n         if (frequencyType.isMonthly()) {\n-            if (repeatsOnNthDayOfMonth != null && (repeatsOnDay == null || repeatsOnDay == CalendarWeekDaysType.INVALID.getValue())) {\n+            if (repeatsOnNthDayOfMonth != null && (repeatsOnDay == null || repeatsOnDay.equals(CalendarWeekDaysType.INVALID.getValue()))) {\n                 if (repeatsOnNthDayOfMonth >= -1 && repeatsOnNthDayOfMonth <= 28) {\n                     recurrenceBuilder.append(\";BYMONTHDAY=\");\n                     recurrenceBuilder.append(repeatsOnNthDayOfMonth);\n                 }\n-            } else if (repeatsOnNthDayOfMonth != null && repeatsOnDay != null && repeatsOnDay != CalendarWeekDaysType.INVALID.getValue()) {\n+            } else if (repeatsOnNthDayOfMonth != null && repeatsOnDay != null && !repeatsOnDay.equals(CalendarWeekDaysType.INVALID.getValue())) {\n                 final NthDayType nthDay = NthDayType.fromInt(repeatsOnNthDayOfMonth);\n                 if (!nthDay.isInvalid()) {\n                     recurrenceBuilder.append(\";BYSETPOS=\");",
                "deletions": 3
            },
            {
                "sha": "ff8b5388adc518f83a30b2745afe91b7c93f914b",
                "filename": "fineract-provider/src/main/java/org/apache/fineract/portfolio/charge/domain/Charge.java",
                "blob_url": "https://github.com/apache/fineract/blob/af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1/fineract-provider/src/main/java/org/apache/fineract/portfolio/charge/domain/Charge.java",
                "raw_url": "https://github.com/apache/fineract/raw/af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1/fineract-provider/src/main/java/org/apache/fineract/portfolio/charge/domain/Charge.java",
                "status": "modified",
                "changes": 59,
                "additions": 35,
                "contents_url": "https://api.github.com/repos/apache/fineract/contents/fineract-provider/src/main/java/org/apache/fineract/portfolio/charge/domain/Charge.java?ref=af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1",
                "patch": "@@ -19,10 +19,7 @@\n package org.apache.fineract.portfolio.charge.domain;\n \n import java.math.BigDecimal;\n-import java.util.ArrayList;\n-import java.util.LinkedHashMap;\n-import java.util.List;\n-import java.util.Map;\n+import java.util.*;\n \n import javax.persistence.Column;\n import javax.persistence.Entity;\n@@ -210,24 +207,6 @@ private Charge(final String name, final BigDecimal amount, final String currency\n         if (!dataValidationErrors.isEmpty()) { throw new PlatformApiDataValidationException(dataValidationErrors); }\n     }\n \n-    @Override\n-    public boolean equals(final Object obj) {\n-        if (obj == null) { return false; }\n-        if (obj == this) { return true; }\n-        if (obj.getClass() != getClass()) { return false; }\n-        final LoanCharge rhs = (LoanCharge) obj;\n-        return new EqualsBuilder().appendSuper(super.equals(obj)) //\n-                .append(getId(), rhs.getId()) //\n-                .isEquals();\n-    }\n-\n-    @Override\n-    public int hashCode() {\n-        return new HashCodeBuilder(3, 5) //\n-                .append(getId()) //\n-                .toHashCode();\n-    }\n-\n     public String getName() {\n         return this.name;\n     }\n@@ -428,14 +407,14 @@ public BigDecimal getMaxCap() {\n             final MonthDay monthDay = command.extractMonthDayNamed(\"feeOnMonthDay\");\n             final String actualValueEntered = command.stringValueOfParameterNamed(\"feeOnMonthDay\");\n             final Integer dayOfMonthValue = monthDay.getDayOfMonth();\n-            if (this.feeOnDay != dayOfMonthValue) {\n+            if (!this.feeOnDay.equals(dayOfMonthValue)) {\n                 actualChanges.put(\"feeOnMonthDay\", actualValueEntered);\n                 actualChanges.put(\"locale\", localeAsInput);\n                 this.feeOnDay = dayOfMonthValue;\n             }\n \n             final Integer monthOfYear = monthDay.getMonthOfYear();\n-            if (this.feeOnMonth != monthOfYear) {\n+            if (!this.feeOnMonth.equals(monthOfYear)) {\n                 actualChanges.put(\"feeOnMonthDay\", actualValueEntered);\n                 actualChanges.put(\"locale\", localeAsInput);\n                 this.feeOnMonth = monthOfYear;\n@@ -621,4 +600,36 @@ public TaxGroup getTaxGroup() {\n     public void setTaxGroup(TaxGroup taxGroup) {\n         this.taxGroup = taxGroup;\n     }\n+\n+    @Override\n+    public boolean equals(Object o) {\n+        if (this == o) return true;\n+        if (!(o instanceof Charge)) return false;\n+        Charge charge = (Charge) o;\n+        return Objects.equals(name, charge.name) &&\n+        \t\tObjects.equals(amount, charge.amount) &&\n+        \t\tObjects.equals(currencyCode, charge.currencyCode) &&\n+        \t\tObjects.equals(chargeAppliesTo, charge.chargeAppliesTo) &&\n+        \t\tObjects.equals(chargeTimeType, charge.chargeTimeType) &&\n+        \t\tObjects.equals(chargeCalculation, charge.chargeCalculation) &&\n+        \t\tObjects.equals(chargePaymentMode, charge.chargePaymentMode) &&\n+        \t\tObjects.equals(feeOnDay, charge.feeOnDay) &&\n+        \t\tObjects.equals(feeInterval, charge.feeInterval) &&\n+        \t\tObjects.equals(feeOnMonth, charge.feeOnMonth) &&\n+        \t\tObjects.equals(penalty, charge.penalty) &&\n+        \t\tObjects.equals(active, charge.active) &&\n+        \t\tObjects.equals(deleted, charge.deleted) &&\n+        \t\tObjects.equals(minCap, charge.minCap) &&\n+        \t\tObjects.equals(maxCap, charge.maxCap) &&\n+        \t\tObjects.equals(feeFrequency, charge.feeFrequency) &&\n+        \t\tObjects.equals(account, charge.account) &&\n+        \t\tObjects.equals(taxGroup, charge.taxGroup);\n+\n+    }\n+\n+    @Override\n+    public int hashCode() {\n+        return Objects.hash(name, amount, currencyCode, chargeAppliesTo, chargeTimeType, chargeCalculation, \n+        \t\tchargePaymentMode, feeOnDay, feeInterval, feeOnMonth, penalty, active, deleted, minCap, maxCap, feeFrequency, account, taxGroup);\n+    }\n }\n\\ No newline at end of file",
                "deletions": 24
            },
            {
                "sha": "c53b24c7f64824a2ccb70e27e138a0872d81b3db",
                "filename": "fineract-provider/src/main/java/org/apache/fineract/portfolio/charge/service/ChargeReadPlatformServiceImpl.java",
                "blob_url": "https://github.com/apache/fineract/blob/af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1/fineract-provider/src/main/java/org/apache/fineract/portfolio/charge/service/ChargeReadPlatformServiceImpl.java",
                "raw_url": "https://github.com/apache/fineract/raw/af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1/fineract-provider/src/main/java/org/apache/fineract/portfolio/charge/service/ChargeReadPlatformServiceImpl.java",
                "status": "modified",
                "changes": 17,
                "additions": 9,
                "contents_url": "https://api.github.com/repos/apache/fineract/contents/fineract-provider/src/main/java/org/apache/fineract/portfolio/charge/service/ChargeReadPlatformServiceImpl.java?ref=af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1",
                "patch": "@@ -18,14 +18,6 @@\n  */\n package org.apache.fineract.portfolio.charge.service;\n \n-import java.math.BigDecimal;\n-import java.sql.ResultSet;\n-import java.sql.SQLException;\n-import java.util.Collection;\n-import java.util.HashMap;\n-import java.util.List;\n-import java.util.Map;\n-\n import org.apache.fineract.accounting.common.AccountingDropdownReadPlatformService;\n import org.apache.fineract.accounting.glaccount.data.GLAccountData;\n import org.apache.fineract.infrastructure.core.data.EnumOptionData;\n@@ -52,6 +44,14 @@\n import org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate;\n import org.springframework.stereotype.Service;\n \n+import java.math.BigDecimal;\n+import java.sql.ResultSet;\n+import java.sql.SQLException;\n+import java.util.Collection;\n+import java.util.HashMap;\n+import java.util.List;\n+import java.util.Map;\n+\n /**\n  * @author vishwas\n  * \n@@ -225,6 +225,7 @@ private void processChargeExclusionsForLoans(ChargeTimeType[] excludeChargeTimes\n                 sb.append(excludeChargeTimes[i].getValue());\n             }\n             excludeClause = excludeClause.append(\" and c.charge_time_enum not in(\" + sb.toString() + \") \");\n+            excludeClause.append(\" \");\n         }\n     }\n ",
                "deletions": 8
            },
            {
                "sha": "7acedf348cd460c00e2cf8c8b7a65ae37af05b96",
                "filename": "fineract-provider/src/main/java/org/apache/fineract/portfolio/client/data/ClientData.java",
                "blob_url": "https://github.com/apache/fineract/blob/af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1/fineract-provider/src/main/java/org/apache/fineract/portfolio/client/data/ClientData.java",
                "raw_url": "https://github.com/apache/fineract/raw/af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1/fineract-provider/src/main/java/org/apache/fineract/portfolio/client/data/ClientData.java",
                "status": "modified",
                "changes": 9,
                "additions": 5,
                "contents_url": "https://api.github.com/repos/apache/fineract/contents/fineract-provider/src/main/java/org/apache/fineract/portfolio/client/data/ClientData.java?ref=af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1",
                "patch": "@@ -18,9 +18,6 @@\n  */\n package org.apache.fineract.portfolio.client.data;\n \n-import java.util.Collection;\n-import java.util.List;\n-\n import org.apache.commons.lang.StringUtils;\n import org.apache.commons.lang.builder.CompareToBuilder;\n import org.apache.commons.lang.builder.EqualsBuilder;\n@@ -36,11 +33,15 @@\n import org.apache.fineract.portfolio.savings.data.SavingsProductData;\n import org.joda.time.LocalDate;\n \n+import java.io.Serializable;\n+import java.util.Collection;\n+import java.util.List;\n+\n /**\n  * Immutable data object representing client data.\n  */\n @SuppressWarnings(\"unused\")\n-final public class ClientData implements Comparable<ClientData> {\n+final public class ClientData implements Comparable<ClientData>, Serializable {\n \n     private final Long id;\n     private final String accountNo;",
                "deletions": 4
            },
            {
                "sha": "a5e127f5ab3949832139ec4f07a46b83817987aa",
                "filename": "fineract-provider/src/main/java/org/apache/fineract/portfolio/client/data/ClientFamilyMembersData.java",
                "blob_url": "https://github.com/apache/fineract/blob/af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1/fineract-provider/src/main/java/org/apache/fineract/portfolio/client/data/ClientFamilyMembersData.java",
                "raw_url": "https://github.com/apache/fineract/raw/af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1/fineract-provider/src/main/java/org/apache/fineract/portfolio/client/data/ClientFamilyMembersData.java",
                "status": "modified",
                "changes": 7,
                "additions": 4,
                "contents_url": "https://api.github.com/repos/apache/fineract/contents/fineract-provider/src/main/java/org/apache/fineract/portfolio/client/data/ClientFamilyMembersData.java?ref=af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1",
                "patch": "@@ -19,12 +19,13 @@\n \n package org.apache.fineract.portfolio.client.data;\n \n-import java.util.Collection;\n-\n import org.apache.fineract.infrastructure.codes.data.CodeValueData;\n import org.joda.time.LocalDate;\n \n-public class ClientFamilyMembersData {\n+import java.io.Serializable;\n+import java.util.Collection;\n+\n+public class ClientFamilyMembersData implements Serializable {\n \n \tprivate final Long id;\n ",
                "deletions": 3
            },
            {
                "sha": "e3b628268f3aa1d6e6b83ecf70c30e13135feca3",
                "filename": "fineract-provider/src/main/java/org/apache/fineract/portfolio/client/data/ClientNonPersonData.java",
                "blob_url": "https://github.com/apache/fineract/blob/af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1/fineract-provider/src/main/java/org/apache/fineract/portfolio/client/data/ClientNonPersonData.java",
                "raw_url": "https://github.com/apache/fineract/raw/af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1/fineract-provider/src/main/java/org/apache/fineract/portfolio/client/data/ClientNonPersonData.java",
                "status": "modified",
                "changes": 5,
                "additions": 3,
                "contents_url": "https://api.github.com/repos/apache/fineract/contents/fineract-provider/src/main/java/org/apache/fineract/portfolio/client/data/ClientNonPersonData.java?ref=af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1",
                "patch": "@@ -18,15 +18,16 @@\n  */\n package org.apache.fineract.portfolio.client.data;\n \n-import org.apache.fineract.infrastructure.bulkimport.constants.TemplatePopulateImportConstants;\n import org.apache.fineract.infrastructure.codes.data.CodeValueData;\n import org.joda.time.LocalDate;\n \n+import java.io.Serializable;\n+\n /**\n  * Immutable data object representing the ClientNonPerson\n  */\n @SuppressWarnings(\"unused\")\n-public class ClientNonPersonData {\n+public class ClientNonPersonData implements Serializable {\n \t\n \tprivate final CodeValueData constitution;\n \tprivate final String incorpNumber;",
                "deletions": 2
            },
            {
                "sha": "99c3c035ce7e95a1bc44df8b11015dcdf0f32995",
                "filename": "fineract-provider/src/main/java/org/apache/fineract/portfolio/client/data/ClientTimelineData.java",
                "blob_url": "https://github.com/apache/fineract/blob/af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1/fineract-provider/src/main/java/org/apache/fineract/portfolio/client/data/ClientTimelineData.java",
                "raw_url": "https://github.com/apache/fineract/raw/af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1/fineract-provider/src/main/java/org/apache/fineract/portfolio/client/data/ClientTimelineData.java",
                "status": "modified",
                "changes": 6,
                "additions": 2,
                "contents_url": "https://api.github.com/repos/apache/fineract/contents/fineract-provider/src/main/java/org/apache/fineract/portfolio/client/data/ClientTimelineData.java?ref=af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1",
                "patch": "@@ -18,18 +18,16 @@\n  */\n package org.apache.fineract.portfolio.client.data;\n \n-import org.apache.fineract.organisation.monetary.data.CurrencyData;\n-import org.apache.fineract.portfolio.loanaccount.data.RepaymentScheduleRelatedLoanData;\n import org.joda.time.LocalDate;\n \n-import java.math.BigDecimal;\n+import java.io.Serializable;\n \n /**\n  * Immutable data object represent the important time-line events of a loan\n  * application and loan.\n  */\n @SuppressWarnings(\"unused\")\n-public class ClientTimelineData {\n+public class ClientTimelineData implements Serializable {\n \n     private final LocalDate submittedOnDate;\n     private final String submittedByUsername;",
                "deletions": 4
            },
            {
                "sha": "7116a0c59ff3e6b7313fb0aeddefe8b0c2b56c97",
                "filename": "fineract-provider/src/main/java/org/apache/fineract/portfolio/floatingrates/data/FloatingRateData.java",
                "blob_url": "https://github.com/apache/fineract/blob/af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1/fineract-provider/src/main/java/org/apache/fineract/portfolio/floatingrates/data/FloatingRateData.java",
                "raw_url": "https://github.com/apache/fineract/raw/af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1/fineract-provider/src/main/java/org/apache/fineract/portfolio/floatingrates/data/FloatingRateData.java",
                "status": "modified",
                "changes": 7,
                "additions": 4,
                "contents_url": "https://api.github.com/repos/apache/fineract/contents/fineract-provider/src/main/java/org/apache/fineract/portfolio/floatingrates/data/FloatingRateData.java?ref=af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1",
                "patch": "@@ -18,15 +18,16 @@\n  */\n package org.apache.fineract.portfolio.floatingrates.data;\n \n-import java.util.List;\n-\n import org.apache.commons.lang.builder.CompareToBuilder;\n import org.apache.commons.lang.builder.EqualsBuilder;\n import org.apache.commons.lang.builder.HashCodeBuilder;\n import org.apache.fineract.infrastructure.core.data.EnumOptionData;\n import org.joda.time.LocalDate;\n \n-public class FloatingRateData implements Comparable<FloatingRateData> {\n+import java.io.Serializable;\n+import java.util.List;\n+\n+public class FloatingRateData implements Comparable<FloatingRateData> , Serializable {\n \n \tprivate final Long id;\n \tprivate final String name;",
                "deletions": 3
            },
            {
                "sha": "a9edce0311033045f5a5da1b22c9c70498c30c47",
                "filename": "fineract-provider/src/main/java/org/apache/fineract/portfolio/floatingrates/data/FloatingRatePeriodData.java",
                "blob_url": "https://github.com/apache/fineract/blob/af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1/fineract-provider/src/main/java/org/apache/fineract/portfolio/floatingrates/data/FloatingRatePeriodData.java",
                "raw_url": "https://github.com/apache/fineract/raw/af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1/fineract-provider/src/main/java/org/apache/fineract/portfolio/floatingrates/data/FloatingRatePeriodData.java",
                "status": "modified",
                "changes": 7,
                "additions": 4,
                "contents_url": "https://api.github.com/repos/apache/fineract/contents/fineract-provider/src/main/java/org/apache/fineract/portfolio/floatingrates/data/FloatingRatePeriodData.java?ref=af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1",
                "patch": "@@ -18,15 +18,16 @@\n  */\n package org.apache.fineract.portfolio.floatingrates.data;\n \n-import java.math.BigDecimal;\n-\n import org.apache.commons.lang.builder.CompareToBuilder;\n import org.apache.commons.lang.builder.EqualsBuilder;\n import org.apache.commons.lang.builder.HashCodeBuilder;\n import org.joda.time.LocalDate;\n \n+import java.io.Serializable;\n+import java.math.BigDecimal;\n+\n public class FloatingRatePeriodData implements\n-\t\tComparable<FloatingRatePeriodData> {\n+\t\tComparable<FloatingRatePeriodData>, Serializable {\n \n \tprivate Long id;\n \tprivate LocalDate fromDate;",
                "deletions": 3
            },
            {
                "sha": "32faa011568fb64e90ee4262ca9c180469b1fa9d",
                "filename": "fineract-provider/src/main/java/org/apache/fineract/portfolio/floatingrates/serialization/FloatingRateDataValidator.java",
                "blob_url": "https://github.com/apache/fineract/blob/af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1/fineract-provider/src/main/java/org/apache/fineract/portfolio/floatingrates/serialization/FloatingRateDataValidator.java",
                "raw_url": "https://github.com/apache/fineract/raw/af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1/fineract-provider/src/main/java/org/apache/fineract/portfolio/floatingrates/serialization/FloatingRateDataValidator.java",
                "status": "modified",
                "changes": 27,
                "additions": 8,
                "contents_url": "https://api.github.com/repos/apache/fineract/contents/fineract-provider/src/main/java/org/apache/fineract/portfolio/floatingrates/serialization/FloatingRateDataValidator.java?ref=af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1",
                "patch": "@@ -18,16 +18,9 @@\n  */\n package org.apache.fineract.portfolio.floatingrates.serialization;\n \n-import java.lang.reflect.Type;\n-import java.math.BigDecimal;\n-import java.util.ArrayList;\n-import java.util.Arrays;\n-import java.util.Collection;\n-import java.util.HashSet;\n-import java.util.List;\n-import java.util.Map;\n-import java.util.Set;\n-\n+import com.google.gson.JsonArray;\n+import com.google.gson.JsonElement;\n+import com.google.gson.reflect.TypeToken;\n import org.apache.fineract.infrastructure.core.data.ApiParameterError;\n import org.apache.fineract.infrastructure.core.data.DataValidatorBuilder;\n import org.apache.fineract.infrastructure.core.exception.PlatformApiDataValidationException;\n@@ -39,9 +32,9 @@\n import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.stereotype.Component;\n \n-import com.google.gson.JsonArray;\n-import com.google.gson.JsonElement;\n-import com.google.gson.reflect.TypeToken;\n+import java.lang.reflect.Type;\n+import java.math.BigDecimal;\n+import java.util.*;\n \n @Component\n public class FloatingRateDataValidator {\n@@ -258,9 +251,7 @@ public void validateForUpdate(String json,\n \t\t\t\tbaseDataValidator.reset().parameter(\"isBaseLendingRate\")\n \t\t\t\t\t\t.trueOrFalseRequired(false);\n \t\t\t} else if (isBaseLendingRate) {\n-\t\t\t\tif (baseLendingRate != null\n-\t\t\t\t\t\t&& baseLendingRate.getId() != floatingRateForUpdate\n-\t\t\t\t\t\t\t\t.getId()) {\n+\t\t\t\tif (baseLendingRate != null && !baseLendingRate.getId().equals(floatingRateForUpdate.getId())) {\n \t\t\t\t\tbaseDataValidator\n \t\t\t\t\t\t\t.reset()\n \t\t\t\t\t\t\t.parameter(\"isBaseLendingRate\")\n@@ -289,9 +280,7 @@ public void validateForUpdate(String json,\n \t\t\tisActive = floatingRateForUpdate.isActive();\n \t\t}\n \t\t\n-\t\tif(baseLendingRate != null\n-\t\t\t\t&& baseLendingRate.getId() == floatingRateForUpdate\n-\t\t\t\t\t\t.getId()){\n+\t\tif(baseLendingRate != null && baseLendingRate.getId().equals(floatingRateForUpdate.getId())){\n \t\t\tif(!isBaseLendingRate || !isActive){\n \t\t\t\tisBLRModifiedAsNonBLR = true;\n \t\t\t}",
                "deletions": 19
            },
            {
                "sha": "c57dd96912193d79e3a852249ab3d2364a8cc82e",
                "filename": "fineract-provider/src/main/java/org/apache/fineract/portfolio/group/data/CenterData.java",
                "blob_url": "https://github.com/apache/fineract/blob/af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1/fineract-provider/src/main/java/org/apache/fineract/portfolio/group/data/CenterData.java",
                "raw_url": "https://github.com/apache/fineract/raw/af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1/fineract-provider/src/main/java/org/apache/fineract/portfolio/group/data/CenterData.java",
                "status": "modified",
                "changes": 53,
                "additions": 47,
                "contents_url": "https://api.github.com/repos/apache/fineract/contents/fineract-provider/src/main/java/org/apache/fineract/portfolio/group/data/CenterData.java?ref=af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1",
                "patch": "@@ -18,11 +18,6 @@\n  */\n package org.apache.fineract.portfolio.group.data;\n \n-import java.math.BigDecimal;\n-import java.util.Collection;\n-import java.util.List;\n-\n-import org.apache.fineract.infrastructure.bulkimport.constants.TemplatePopulateImportConstants;\n import org.apache.fineract.infrastructure.codes.data.CodeValueData;\n import org.apache.fineract.infrastructure.core.data.EnumOptionData;\n import org.apache.fineract.infrastructure.dataqueries.data.DatatableData;\n@@ -31,10 +26,16 @@\n import org.apache.fineract.portfolio.calendar.data.CalendarData;\n import org.joda.time.LocalDate;\n \n+import java.io.Serializable;\n+import java.math.BigDecimal;\n+import java.util.Collection;\n+import java.util.List;\n+import java.util.Objects;\n+\n /**\n  * Immutable data object representing groups.\n  */\n-public class CenterData {\n+public class CenterData implements Serializable {\n \n     private final Long id;\n     private String accountNo;\n@@ -266,4 +267,44 @@ public String getStaffName() {\n     public void setDatatables(final List<DatatableData> datatables) {\n         this.datatables = datatables;\n     }\n+\n+    @Override\n+    public boolean equals(Object o) {\n+        if (this == o) return true;\n+        if (!(o instanceof CenterData)) return false;\n+        CenterData that = (CenterData) o;\n+        return Objects.equals(active, that.active) &&\n+                Objects.equals(id, that.id) &&\n+                Objects.equals(accountNo, that.accountNo) &&\n+                Objects.equals(name, that.name) &&\n+                Objects.equals(externalId, that.externalId) &&\n+                Objects.equals(officeId, that.officeId) &&\n+                Objects.equals(officeName, that.officeName) &&\n+                Objects.equals(staffId, that.staffId) &&\n+                Objects.equals(staffName, that.staffName) &&\n+                Objects.equals(hierarchy, that.hierarchy) &&\n+                Objects.equals(status, that.status) &&\n+                Objects.equals(activationDate, that.activationDate) &&\n+                Objects.equals(timeline, that.timeline) &&\n+                Objects.equals(groupMembers, that.groupMembers) &&\n+                Objects.equals(groupMembersOptions, that.groupMembersOptions) &&\n+                Objects.equals(collectionMeetingCalendar, that.collectionMeetingCalendar) &&\n+                Objects.equals(closureReasons, that.closureReasons) &&\n+                Objects.equals(officeOptions, that.officeOptions) &&\n+                Objects.equals(staffOptions, that.staffOptions) &&\n+                Objects.equals(totalCollected, that.totalCollected) &&\n+                Objects.equals(totalOverdue, that.totalOverdue) &&\n+                Objects.equals(totaldue, that.totaldue) &&\n+                Objects.equals(installmentDue, that.installmentDue) &&\n+                Objects.equals(datatables, that.datatables) &&\n+                Objects.equals(rowIndex, that.rowIndex) &&\n+                Objects.equals(dateFormat, that.dateFormat) &&\n+                Objects.equals(locale, that.locale) &&\n+                Objects.equals(submittedOnDate, that.submittedOnDate);\n+    }\n+\n+    @Override\n+    public int hashCode() {\n+        return Objects.hash(id, accountNo, name, externalId, officeId, officeName, staffId, staffName, hierarchy, status, active, activationDate, timeline, groupMembers, groupMembersOptions, collectionMeetingCalendar, closureReasons, officeOptions, staffOptions, totalCollected, totalOverdue, totaldue, installmentDue, datatables, rowIndex, dateFormat, locale, submittedOnDate);\n+    }\n }\n\\ No newline at end of file",
                "deletions": 6
            },
            {
                "sha": "6d5c4e3d32b74e0fbf8fb1ffc07b8d10ab307b41",
                "filename": "fineract-provider/src/main/java/org/apache/fineract/portfolio/group/data/GroupGeneralData.java",
                "blob_url": "https://github.com/apache/fineract/blob/af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1/fineract-provider/src/main/java/org/apache/fineract/portfolio/group/data/GroupGeneralData.java",
                "raw_url": "https://github.com/apache/fineract/raw/af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1/fineract-provider/src/main/java/org/apache/fineract/portfolio/group/data/GroupGeneralData.java",
                "status": "modified",
                "changes": 56,
                "additions": 51,
                "contents_url": "https://api.github.com/repos/apache/fineract/contents/fineract-provider/src/main/java/org/apache/fineract/portfolio/group/data/GroupGeneralData.java?ref=af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1",
                "patch": "@@ -18,10 +18,6 @@\n  */\n package org.apache.fineract.portfolio.group.data;\n \n-import java.util.Collection;\n-import java.util.List;\n-\n-import org.apache.fineract.infrastructure.bulkimport.constants.TemplatePopulateImportConstants;\n import org.apache.fineract.infrastructure.codes.data.CodeValueData;\n import org.apache.fineract.infrastructure.core.data.EnumOptionData;\n import org.apache.fineract.infrastructure.dataqueries.data.DatatableData;\n@@ -31,11 +27,16 @@\n import org.apache.fineract.portfolio.client.data.ClientData;\n import org.joda.time.LocalDate;\n \n+import java.io.Serializable;\n+import java.util.Collection;\n+import java.util.List;\n+import java.util.Objects;\n+\n /**\n  * Immutable data object representing a general group (so may or may not have a\n  * parent).\n  */\n-public class GroupGeneralData {\n+public class GroupGeneralData implements Serializable {\n \n     private final Long id;\n     private final String accountNo;\n@@ -363,4 +364,49 @@ public static GroupGeneralData withClosureReasons(final Collection<CodeValueData\n     public void setDatatables(final List<DatatableData> datatables) {\n             this.datatables = datatables;\n     }\n+\n+    @Override\n+    public boolean equals(Object o) {\n+        if (this == o) return true;\n+        if (!(o instanceof GroupGeneralData)) return false;\n+        GroupGeneralData that = (GroupGeneralData) o;\n+        return Objects.equals(id, that.id) &&\n+                Objects.equals(accountNo, that.accountNo) &&\n+                Objects.equals(name, that.name) &&\n+                Objects.equals(externalId, that.externalId) &&\n+                Objects.equals(status, that.status) &&\n+                Objects.equals(active, that.active) &&\n+                Objects.equals(activationDate, that.activationDate) &&\n+                Objects.equals(officeId, that.officeId) &&\n+                Objects.equals(officeName, that.officeName) &&\n+                Objects.equals(centerId, that.centerId) &&\n+                Objects.equals(centerName, that.centerName) &&\n+                Objects.equals(staffId, that.staffId) &&\n+                Objects.equals(staffName, that.staffName) &&\n+                Objects.equals(hierarchy, that.hierarchy) &&\n+                Objects.equals(groupLevel, that.groupLevel) &&\n+                Objects.equals(clientMembers, that.clientMembers) &&\n+                Objects.equals(activeClientMembers, that.activeClientMembers) &&\n+                Objects.equals(groupRoles, that.groupRoles) &&\n+                Objects.equals(calendarsData, that.calendarsData) &&\n+                Objects.equals(collectionMeetingCalendar, that.collectionMeetingCalendar) &&\n+                Objects.equals(centerOptions, that.centerOptions) &&\n+                Objects.equals(officeOptions, that.officeOptions) &&\n+                Objects.equals(staffOptions, that.staffOptions) &&\n+                Objects.equals(clientOptions, that.clientOptions) &&\n+                Objects.equals(availableRoles, that.availableRoles) &&\n+                Objects.equals(selectedRole, that.selectedRole) &&\n+                Objects.equals(closureReasons, that.closureReasons) &&\n+                Objects.equals(timeline, that.timeline) &&\n+                Objects.equals(datatables, that.datatables) &&\n+                Objects.equals(rowIndex, that.rowIndex) &&\n+                Objects.equals(dateFormat, that.dateFormat) &&\n+                Objects.equals(locale, that.locale) &&\n+                Objects.equals(submittedOnDate, that.submittedOnDate);\n+    }\n+\n+    @Override\n+    public int hashCode() {\n+        return Objects.hash(id, accountNo, name, externalId, status, active, activationDate, officeId, officeName, centerId, centerName, staffId, staffName, hierarchy, groupLevel, clientMembers, activeClientMembers, groupRoles, calendarsData, collectionMeetingCalendar, centerOptions, officeOptions, staffOptions, clientOptions, availableRoles, selectedRole, closureReasons, timeline, datatables, rowIndex, dateFormat, locale, submittedOnDate);\n+    }\n }\n\\ No newline at end of file",
                "deletions": 5
            },
            {
                "sha": "b3be59fe4649412660f5082a9b2672f5cf05d5f4",
                "filename": "fineract-provider/src/main/java/org/apache/fineract/portfolio/group/data/GroupRoleData.java",
                "blob_url": "https://github.com/apache/fineract/blob/af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1/fineract-provider/src/main/java/org/apache/fineract/portfolio/group/data/GroupRoleData.java",
                "raw_url": "https://github.com/apache/fineract/raw/af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1/fineract-provider/src/main/java/org/apache/fineract/portfolio/group/data/GroupRoleData.java",
                "status": "modified",
                "changes": 20,
                "additions": 19,
                "contents_url": "https://api.github.com/repos/apache/fineract/contents/fineract-provider/src/main/java/org/apache/fineract/portfolio/group/data/GroupRoleData.java?ref=af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1",
                "patch": "@@ -20,7 +20,10 @@\n \n import org.apache.fineract.infrastructure.codes.data.CodeValueData;\n \n-public class GroupRoleData {\n+import java.io.Serializable;\n+import java.util.Objects;\n+\n+public class GroupRoleData implements Serializable {\n \n     @SuppressWarnings(\"unused\")\n     private final Long id;\n@@ -42,4 +45,19 @@ public GroupRoleData(final Long id, final CodeValueData role, final Long clientI\n         this.clientName = clientName;\n     }\n \n+    @Override\n+    public boolean equals(Object o) {\n+        if (this == o) return true;\n+        if (!(o instanceof GroupRoleData)) return false;\n+        GroupRoleData that = (GroupRoleData) o;\n+        return Objects.equals(id, that.id) &&\n+                Objects.equals(role, that.role) &&\n+                Objects.equals(clientId, that.clientId) &&\n+                Objects.equals(clientName, that.clientName);\n+    }\n+\n+    @Override\n+    public int hashCode() {\n+        return Objects.hash(id, role, clientId, clientName);\n+    }\n }",
                "deletions": 1
            },
            {
                "sha": "71a87464043fe8146499aa77eb093572f7397101",
                "filename": "fineract-provider/src/main/java/org/apache/fineract/portfolio/group/data/GroupSummary.java",
                "blob_url": "https://github.com/apache/fineract/blob/af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1/fineract-provider/src/main/java/org/apache/fineract/portfolio/group/data/GroupSummary.java",
                "raw_url": "https://github.com/apache/fineract/raw/af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1/fineract-provider/src/main/java/org/apache/fineract/portfolio/group/data/GroupSummary.java",
                "status": "modified",
                "changes": 4,
                "additions": 2,
                "contents_url": "https://api.github.com/repos/apache/fineract/contents/fineract-provider/src/main/java/org/apache/fineract/portfolio/group/data/GroupSummary.java?ref=af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1",
                "patch": "@@ -18,10 +18,10 @@\n  */\n package org.apache.fineract.portfolio.group.data;\n \n-import java.util.Collection;\n-\n import org.apache.fineract.organisation.monetary.data.MoneyData;\n \n+import java.util.Collection;\n+\n public class GroupSummary {\n \n     private final Long totalActiveClients;",
                "deletions": 2
            },
            {
                "sha": "2726d86a374a7890eaacafc4ece08606d7cc85c9",
                "filename": "fineract-provider/src/main/java/org/apache/fineract/portfolio/group/data/GroupTimelineData.java",
                "blob_url": "https://github.com/apache/fineract/blob/af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1/fineract-provider/src/main/java/org/apache/fineract/portfolio/group/data/GroupTimelineData.java",
                "raw_url": "https://github.com/apache/fineract/raw/af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1/fineract-provider/src/main/java/org/apache/fineract/portfolio/group/data/GroupTimelineData.java",
                "status": "modified",
                "changes": 28,
                "additions": 27,
                "contents_url": "https://api.github.com/repos/apache/fineract/contents/fineract-provider/src/main/java/org/apache/fineract/portfolio/group/data/GroupTimelineData.java?ref=af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1",
                "patch": "@@ -20,13 +20,16 @@\n \n import org.joda.time.LocalDate;\n \n+import java.io.Serializable;\n+import java.util.Objects;\n+\n /**\n  * Immutable data object represent the important time-line events of a\n  * group/center.\n  * \n  */\n @SuppressWarnings(\"unused\")\n-public class GroupTimelineData {\n+public class GroupTimelineData implements Serializable {\n \n     private final LocalDate submittedOnDate;\n     private final String submittedByUsername;\n@@ -64,4 +67,27 @@ public GroupTimelineData(final LocalDate submittedOnDate, final String submitted\n \n     }\n \n+    @Override\n+    public boolean equals(Object o) {\n+        if (this == o) return true;\n+        if (!(o instanceof GroupTimelineData)) return false;\n+        GroupTimelineData that = (GroupTimelineData) o;\n+        return Objects.equals(submittedOnDate, that.submittedOnDate) &&\n+                Objects.equals(submittedByUsername, that.submittedByUsername) &&\n+                Objects.equals(submittedByFirstname, that.submittedByFirstname) &&\n+                Objects.equals(submittedByLastname, that.submittedByLastname) &&\n+                Objects.equals(activatedOnDate, that.activatedOnDate) &&\n+                Objects.equals(activatedByUsername, that.activatedByUsername) &&\n+                Objects.equals(activatedByFirstname, that.activatedByFirstname) &&\n+                Objects.equals(activatedByLastname, that.activatedByLastname) &&\n+                Objects.equals(closedOnDate, that.closedOnDate) &&\n+                Objects.equals(closedByUsername, that.closedByUsername) &&\n+                Objects.equals(closedByFirstname, that.closedByFirstname) &&\n+                Objects.equals(closedByLastname, that.closedByLastname);\n+    }\n+\n+    @Override\n+    public int hashCode() {\n+        return Objects.hash(submittedOnDate, submittedByUsername, submittedByFirstname, submittedByLastname, activatedOnDate, activatedByUsername, activatedByFirstname, activatedByLastname, closedOnDate, closedByUsername, closedByFirstname, closedByLastname);\n+    }\n }\n\\ No newline at end of file",
                "deletions": 1
            },
            {
                "sha": "d259891749c0058fb78821abea5d0b9fdfd2454d",
                "filename": "fineract-provider/src/main/java/org/apache/fineract/portfolio/group/domain/GroupRepositoryWrapper.java",
                "blob_url": "https://github.com/apache/fineract/blob/af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1/fineract-provider/src/main/java/org/apache/fineract/portfolio/group/domain/GroupRepositoryWrapper.java",
                "raw_url": "https://github.com/apache/fineract/raw/af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1/fineract-provider/src/main/java/org/apache/fineract/portfolio/group/domain/GroupRepositoryWrapper.java",
                "status": "modified",
                "changes": 6,
                "additions": 3,
                "contents_url": "https://api.github.com/repos/apache/fineract/contents/fineract-provider/src/main/java/org/apache/fineract/portfolio/group/domain/GroupRepositoryWrapper.java?ref=af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1",
                "patch": "@@ -18,14 +18,14 @@\n  */\n package org.apache.fineract.portfolio.group.domain;\n \n-import java.util.Date;\n-\n import org.apache.fineract.organisation.office.domain.Office;\n import org.apache.fineract.portfolio.group.exception.GroupNotFoundException;\n import org.joda.time.LocalDate;\n import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.stereotype.Service;\n \n+import java.util.Date;\n+\n /**\n  * <p>\n  * Wrapper for {@link GroupRepository} that adds NULL checking and Error\n@@ -49,7 +49,7 @@ public Group findOneWithNotFoundDetection(final Long id) {\n \n     public Group findByOfficeWithNotFoundDetection(final Long id, final Office office) {\n         final Group group = findOneWithNotFoundDetection(id);\n-        if (group.getOffice().getId() != office.getId()) { throw new GroupNotFoundException(id); }\n+        if (!group.getOffice().getId().equals(office.getId())) { throw new GroupNotFoundException(id); }\n         return group;\n     }\n ",
                "deletions": 3
            },
            {
                "sha": "20331f0b10ee165bcdbb3663026741395d4fa943",
                "filename": "fineract-provider/src/main/java/org/apache/fineract/portfolio/group/domain/GroupTypes.java",
                "blob_url": "https://github.com/apache/fineract/blob/af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1/fineract-provider/src/main/java/org/apache/fineract/portfolio/group/domain/GroupTypes.java",
                "raw_url": "https://github.com/apache/fineract/raw/af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1/fineract-provider/src/main/java/org/apache/fineract/portfolio/group/domain/GroupTypes.java",
                "status": "modified",
                "changes": 2,
                "additions": 1,
                "contents_url": "https://api.github.com/repos/apache/fineract/contents/fineract-provider/src/main/java/org/apache/fineract/portfolio/group/domain/GroupTypes.java?ref=af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1",
                "patch": "@@ -58,7 +58,7 @@ private GroupTypes(final Long id, final String code, final String value) {\n     }\n \n     public static GroupTypes fromInt(final int i) {\n-        final GroupTypes type = intToEnumMap.get(Integer.valueOf(i));\n+        final GroupTypes type = intToEnumMap.get(Integer.toUnsignedLong(i));\n         return type;\n     }\n ",
                "deletions": 1
            },
            {
                "sha": "a50142e1a0ab1228f5a3f5f86a710699c792d8fa",
                "filename": "fineract-provider/src/main/java/org/apache/fineract/portfolio/group/domain/GroupingTypeStatus.java",
                "blob_url": "https://github.com/apache/fineract/blob/af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1/fineract-provider/src/main/java/org/apache/fineract/portfolio/group/domain/GroupingTypeStatus.java",
                "raw_url": "https://github.com/apache/fineract/raw/af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1/fineract-provider/src/main/java/org/apache/fineract/portfolio/group/domain/GroupingTypeStatus.java",
                "status": "modified",
                "changes": 12,
                "additions": 9,
                "contents_url": "https://api.github.com/repos/apache/fineract/contents/fineract-provider/src/main/java/org/apache/fineract/portfolio/group/domain/GroupingTypeStatus.java?ref=af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1",
                "patch": "@@ -43,14 +43,20 @@ public static GroupingTypeStatus fromInt(final Integer statusValue) {\n             case 300:\n                 enumeration = GroupingTypeStatus.ACTIVE;\n             break;\n+            case 303:\n+                enumeration = GroupingTypeStatus.TRANSFER_IN_PROGRESS;\n+            break;\n+            case 304:\n+                enumeration = GroupingTypeStatus.TRANSFER_ON_HOLD;\n+            break;\n             case 600:\n                 enumeration = GroupingTypeStatus.CLOSED;\n             break;\n         }\n         return enumeration;\n     }\n \n-    private GroupingTypeStatus(final Integer value, final String code) {\n+    GroupingTypeStatus(final Integer value, final String code) {\n         this.value = value;\n         this.code = code;\n     }\n@@ -80,11 +86,11 @@ public boolean isClosed() {\n     }\n \n     public boolean isTransferInProgress() {\n-        return isTransferInProgress();\n+        return this.value.equals(GroupingTypeStatus.TRANSFER_IN_PROGRESS.getValue());\n     }\n \n     public boolean isTransferOnHold() {\n-        return isTransferOnHold();\n+        return this.value.equals(GroupingTypeStatus.TRANSFER_ON_HOLD.getValue());\n     }\n \n     public boolean isUnderTransfer() {",
                "deletions": 3
            },
            {
                "sha": "d3c68adc6667f04d7c9bc7543c5804369bf62c2e",
                "filename": "fineract-provider/src/main/java/org/apache/fineract/portfolio/loanaccount/data/LoanTransactionData.java",
                "blob_url": "https://github.com/apache/fineract/blob/af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1/fineract-provider/src/main/java/org/apache/fineract/portfolio/loanaccount/data/LoanTransactionData.java",
                "raw_url": "https://github.com/apache/fineract/raw/af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1/fineract-provider/src/main/java/org/apache/fineract/portfolio/loanaccount/data/LoanTransactionData.java",
                "status": "modified",
                "changes": 2,
                "additions": 1,
                "contents_url": "https://api.github.com/repos/apache/fineract/contents/fineract-provider/src/main/java/org/apache/fineract/portfolio/loanaccount/data/LoanTransactionData.java?ref=af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1",
                "patch": "@@ -319,7 +319,7 @@ public LocalDate dateOf() {\n     }\n \n     public boolean isNotDisbursement() {\n-        return Integer.valueOf(1).equals(this.type.id());\n+    \treturn type.id() == 1;\n     }\n \n     ",
                "deletions": 1
            },
            {
                "sha": "a8e386e5865ad903065560898287073e3a993bf6",
                "filename": "fineract-provider/src/main/java/org/apache/fineract/portfolio/loanaccount/domain/Loan.java",
                "blob_url": "https://github.com/apache/fineract/blob/af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1/fineract-provider/src/main/java/org/apache/fineract/portfolio/loanaccount/domain/Loan.java",
                "raw_url": "https://github.com/apache/fineract/raw/af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1/fineract-provider/src/main/java/org/apache/fineract/portfolio/loanaccount/domain/Loan.java",
                "status": "modified",
                "changes": 116,
                "additions": 35,
                "contents_url": "https://api.github.com/repos/apache/fineract/contents/fineract-provider/src/main/java/org/apache/fineract/portfolio/loanaccount/domain/Loan.java?ref=af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1",
                "patch": "@@ -18,40 +18,12 @@\n  */\n package org.apache.fineract.portfolio.loanaccount.domain;\n \n-import java.math.BigDecimal;\n-import java.math.MathContext;\n-import java.math.RoundingMode;\n-import java.util.ArrayList;\n-import java.util.Collection;\n-import java.util.Collections;\n-import java.util.Comparator;\n-import java.util.Date;\n-import java.util.HashMap;\n-import java.util.HashSet;\n-import java.util.Iterator;\n-import java.util.LinkedHashMap;\n-import java.util.List;\n-import java.util.ListIterator;\n-import java.util.Locale;\n-import java.util.Map;\n-import java.util.Set;\n-\n-import javax.persistence.CascadeType;\n-import javax.persistence.Column;\n-import javax.persistence.Embedded;\n-import javax.persistence.Entity;\n-import javax.persistence.FetchType;\n-import javax.persistence.JoinColumn;\n-import javax.persistence.ManyToOne;\n-import javax.persistence.OneToMany;\n-import javax.persistence.OneToOne;\n-import javax.persistence.OrderBy;\n-import javax.persistence.Table;\n-import javax.persistence.Temporal;\n-import javax.persistence.TemporalType;\n-import javax.persistence.Transient;\n-import javax.persistence.UniqueConstraint;\n-import javax.persistence.Version;\n+import com.google.gson.JsonArray;\n+import com.google.gson.JsonElement;\n+import com.google.gson.JsonObject;\n+import com.google.gson.JsonPrimitive;\n+\n+import net.sf.ehcache.util.FindBugsSuppressWarnings;\n \n import org.apache.commons.lang.ObjectUtils;\n import org.apache.commons.lang.StringUtils;\n@@ -102,34 +74,10 @@\n import org.apache.fineract.portfolio.loanaccount.data.LoanTermVariationsData;\n import org.apache.fineract.portfolio.loanaccount.data.ScheduleGeneratorDTO;\n import org.apache.fineract.portfolio.loanaccount.domain.transactionprocessor.LoanRepaymentScheduleTransactionProcessor;\n-import org.apache.fineract.portfolio.loanaccount.exception.ExceedingTrancheCountException;\n-import org.apache.fineract.portfolio.loanaccount.exception.InvalidLoanStateTransitionException;\n-import org.apache.fineract.portfolio.loanaccount.exception.InvalidLoanTransactionTypeException;\n-import org.apache.fineract.portfolio.loanaccount.exception.InvalidRefundDateException;\n-import org.apache.fineract.portfolio.loanaccount.exception.LoanApplicationDateException;\n-import org.apache.fineract.portfolio.loanaccount.exception.LoanDisbursalException;\n-import org.apache.fineract.portfolio.loanaccount.exception.LoanForeclosureException;\n-import org.apache.fineract.portfolio.loanaccount.exception.LoanOfficerAssignmentDateException;\n-import org.apache.fineract.portfolio.loanaccount.exception.LoanOfficerAssignmentException;\n-import org.apache.fineract.portfolio.loanaccount.exception.LoanOfficerUnassignmentDateException;\n-import org.apache.fineract.portfolio.loanaccount.exception.MultiDisbursementDataRequiredException;\n-import org.apache.fineract.portfolio.loanaccount.exception.UndoLastTrancheDisbursementException;\n+import org.apache.fineract.portfolio.loanaccount.exception.*;\n import org.apache.fineract.portfolio.loanaccount.loanschedule.data.LoanScheduleDTO;\n-import org.apache.fineract.portfolio.loanaccount.loanschedule.data.LoanScheduleParams;\n-import org.apache.fineract.portfolio.loanaccount.loanschedule.domain.AprCalculator;\n-import org.apache.fineract.portfolio.loanaccount.loanschedule.domain.LoanApplicationTerms;\n-import org.apache.fineract.portfolio.loanaccount.loanschedule.domain.LoanScheduleGenerator;\n-import org.apache.fineract.portfolio.loanaccount.loanschedule.domain.LoanScheduleModel;\n-import org.apache.fineract.portfolio.loanaccount.loanschedule.domain.LoanScheduleModelPeriod;\n-import org.apache.fineract.portfolio.loanproduct.domain.AmortizationMethod;\n-import org.apache.fineract.portfolio.loanproduct.domain.InterestCalculationPeriodMethod;\n-import org.apache.fineract.portfolio.loanproduct.domain.InterestMethod;\n-import org.apache.fineract.portfolio.loanproduct.domain.InterestRecalculationCompoundingMethod;\n-import org.apache.fineract.portfolio.loanproduct.domain.LoanProduct;\n-import org.apache.fineract.portfolio.loanproduct.domain.LoanProductRelatedDetail;\n-import org.apache.fineract.portfolio.loanproduct.domain.LoanRescheduleStrategyMethod;\n-import org.apache.fineract.portfolio.loanproduct.domain.LoanTransactionProcessingStrategy;\n-import org.apache.fineract.portfolio.loanproduct.domain.RecalculationFrequencyType;\n+import org.apache.fineract.portfolio.loanaccount.loanschedule.domain.*;\n+import org.apache.fineract.portfolio.loanproduct.domain.*;\n import org.apache.fineract.portfolio.loanproduct.service.LoanEnumerations;\n import org.apache.fineract.portfolio.paymentdetail.domain.PaymentDetail;\n import org.apache.fineract.useradministration.domain.AppUser;\n@@ -140,10 +88,11 @@\n import org.joda.time.format.DateTimeFormatter;\n import org.springframework.stereotype.Component;\n \n-import com.google.gson.JsonArray;\n-import com.google.gson.JsonElement;\n-import com.google.gson.JsonObject;\n-import com.google.gson.JsonPrimitive;\n+import javax.persistence.*;\n+import java.math.BigDecimal;\n+import java.math.MathContext;\n+import java.math.RoundingMode;\n+import java.util.*;\n \n @Entity\n @Component\n@@ -785,26 +734,28 @@ public void removeLoanCharge(final LoanCharge loanCharge) {\n         updateLoanSummaryDerivedFields();\n     }\n \n+    // TODO Fix this correctly...\n+    // See this review: https://github.com/apache/fineract/pull/670/files/0409af3903d350afe43ef4837e4d915ccbe14285#r357920211\n+    @FindBugsSuppressWarnings(\"GC_UNRELATED_TYPES\")\n     private void removeOrModifyTransactionAssociatedWithLoanChargeIfDueAtDisbursement(final LoanCharge loanCharge) {\n         if (loanCharge.isDueAtDisbursement()) {\n             LoanTransaction transactionToRemove = null;\n             List<LoanTransaction> transactions = getLoanTransactions() ;\n             for (final LoanTransaction transaction : transactions) {\n                 if (transaction.isRepaymentAtDisbursement() && transaction.getLoanChargesPaid().contains(loanCharge)) {\n \n-                    final MonetaryCurrency currency = loanCurrency();\n-                    final Money chargeAmount = Money.of(currency, loanCharge.amount());\n-                    if (transaction.isGreaterThan(chargeAmount)) {\n-                        final Money principalPortion = Money.zero(currency);\n-                        final Money interestPortion = Money.zero(currency);\n-                        final Money penaltychargesPortion = Money.zero(currency);\n-\n-                        final Money feeChargesPortion = chargeAmount;\n-                        transaction.updateComponentsAndTotal(principalPortion, interestPortion, feeChargesPortion, penaltychargesPortion);\n-                    } else {\n-                        transactionToRemove = transaction;\n+                        final MonetaryCurrency currency = loanCurrency();\n+                        final Money chargeAmount = Money.of(currency, loanCharge.amount());\n+                        if (transaction.isGreaterThan(chargeAmount)) {\n+                            final Money principalPortion = Money.zero(currency);\n+                            final Money interestPortion = Money.zero(currency);\n+                            final Money penaltychargesPortion = Money.zero(currency);\n+\n+                            transaction.updateComponentsAndTotal(principalPortion, interestPortion, chargeAmount, penaltychargesPortion);\n+                        } else {\n+                            transactionToRemove = transaction;\n+                        }\n                     }\n-                }\n             }\n \n             if (transactionToRemove != null) {\n@@ -2687,10 +2638,10 @@ private void handleDisbursementTransaction(final LocalDate disbursedOn, final Lo\n         final Integer installmentNumber = null;\n         for (final LoanCharge charge : charges()) {\n             Date actualDisbursementDate = getActualDisbursementDate(charge);\n-            if ((charge.getCharge().getChargeTimeType() == ChargeTimeType.DISBURSEMENT.getValue()\n+            if ((charge.getCharge().getChargeTimeType().equals(ChargeTimeType.DISBURSEMENT.getValue())\n                     && disbursedOn.equals(new LocalDate(actualDisbursementDate)) && actualDisbursementDate != null && !charge.isWaived() && !charge\n                         .isFullyPaid())\n-                    || (charge.getCharge().getChargeTimeType() == ChargeTimeType.TRANCHE_DISBURSEMENT.getValue()\n+                    || (charge.getCharge().getChargeTimeType().equals(ChargeTimeType.TRANCHE_DISBURSEMENT.getValue())\n                             && disbursedOn.equals(new LocalDate(actualDisbursementDate)) && actualDisbursementDate != null\n                             && !charge.isWaived() && !charge.isFullyPaid())) {\n                 if (totalFeeChargesDueAtDisbursement.isGreaterThanZero() && !charge.getChargePaymentMode().isPaymentModeAccountTransfer()) {\n@@ -2768,6 +2719,8 @@ public LoanTransaction handlePayDisbursementTransaction(final Long chargeId, fin\n         return chargesPayment;\n     }\n \n+    // TODO FIX THIS\n+    @FindBugsSuppressWarnings(\"EC_UNRELATED_TYPES\")   // see this review: https://github.com/apache/fineract/pull/670/files/0409af3903d350afe43ef4837e4d915ccbe14285#r357920364\n     public Map<String, Object> undoDisbursal(final ScheduleGeneratorDTO scheduleGeneratorDTO, final List<Long> existingTransactionIds,\n             final List<Long> existingReversedTransactionIds, AppUser currentUser) {\n \n@@ -2787,7 +2740,8 @@ public LoanTransaction handlePayDisbursementTransaction(final Long chargeId, fin\n             final boolean isScheduleRegenerateRequired = isRepaymentScheduleRegenerationRequiredForDisbursement(actualDisbursementDate);\n             this.actualDisbursementDate = null;\n             this.disbursedBy = null;\n-            boolean isDisbursedAmountChanged = !this.approvedPrincipal.equals(this.loanRepaymentScheduleDetail.getPrincipal());\n+            boolean isDisbursedAmountChanged =\n+                    !this.approvedPrincipal.equals(this.loanRepaymentScheduleDetail.getPrincipal());\n             this.loanRepaymentScheduleDetail.setPrincipal(this.approvedPrincipal);\n             if (this.loanProduct.isMultiDisburseLoan()) {\n                 for (final LoanDisbursementDetails details : this.disbursementDetails) {\n@@ -6092,7 +6046,7 @@ public LocalDate getNextPossibleRepaymentDateForRescheduling() {\n \n     public BigDecimal getDerivedAmountForCharge(final LoanCharge loanCharge) {\n         BigDecimal amount = BigDecimal.ZERO;\n-        if (isMultiDisburmentLoan() && (loanCharge.getCharge().getChargeTimeType() == ChargeTimeType.DISBURSEMENT.getValue())) {\n+        if (isMultiDisburmentLoan() && (loanCharge.getCharge().getChargeTimeType().equals(ChargeTimeType.DISBURSEMENT.getValue()))) {\n             amount = getApprovedPrincipal();\n         } else {\n             // If charge type is specified due date and loan is multi disburment",
                "deletions": 81
            },
            {
                "sha": "d18bff00cd36b427b59cc85f90f56934b1b735da",
                "filename": "fineract-provider/src/main/java/org/apache/fineract/portfolio/loanaccount/domain/LoanDisbursementDetails.java",
                "blob_url": "https://github.com/apache/fineract/blob/af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1/fineract-provider/src/main/java/org/apache/fineract/portfolio/loanaccount/domain/LoanDisbursementDetails.java",
                "raw_url": "https://github.com/apache/fineract/raw/af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1/fineract-provider/src/main/java/org/apache/fineract/portfolio/loanaccount/domain/LoanDisbursementDetails.java",
                "status": "modified",
                "changes": 6,
                "additions": 6,
                "contents_url": "https://api.github.com/repos/apache/fineract/contents/fineract-provider/src/main/java/org/apache/fineract/portfolio/loanaccount/domain/LoanDisbursementDetails.java?ref=af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1",
                "patch": "@@ -20,6 +20,7 @@\n \n import java.math.BigDecimal;\n import java.util.Date;\n+import java.util.Objects;\n \n import javax.persistence.Column;\n import javax.persistence.Entity;\n@@ -75,6 +76,11 @@ public boolean equals(final Object obj) {\n         return false;\n     }\n \n+    @Override\n+    public int hashCode() {\n+        return Objects.hash(expectedDisbursementDate, principal);\n+    }\n+\n     public void copy(final LoanDisbursementDetails disbursementDetails) {\n         this.principal = disbursementDetails.principal;\n         this.expectedDisbursementDate = disbursementDetails.expectedDisbursementDate;",
                "deletions": 0
            },
            {
                "sha": "067b34e63a75dbd41d233eda888bb4da2ad4e9a3",
                "filename": "fineract-provider/src/main/java/org/apache/fineract/portfolio/loanaccount/guarantor/GuarantorConstants.java",
                "blob_url": "https://github.com/apache/fineract/blob/af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1/fineract-provider/src/main/java/org/apache/fineract/portfolio/loanaccount/guarantor/GuarantorConstants.java",
                "raw_url": "https://github.com/apache/fineract/raw/af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1/fineract-provider/src/main/java/org/apache/fineract/portfolio/loanaccount/guarantor/GuarantorConstants.java",
                "status": "modified",
                "changes": 4,
                "additions": 2,
                "contents_url": "https://api.github.com/repos/apache/fineract/contents/fineract-provider/src/main/java/org/apache/fineract/portfolio/loanaccount/guarantor/GuarantorConstants.java?ref=af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1",
                "patch": "@@ -28,15 +28,15 @@\n     /***\n      * Enum of all parameters passed in while creating/updating a loan product\n      ***/\n-    public static enum GUARANTOR_JSON_INPUT_PARAMS {\n+    public enum GUARANTOR_JSON_INPUT_PARAMS {\n         LOAN_ID(\"loanId\"), CLIENT_RELATIONSHIP_TYPE_ID(\"clientRelationshipTypeId\"), GUARANTOR_TYPE_ID(\"guarantorTypeId\"), ENTITY_ID(\n                 \"entityId\"), FIRSTNAME(\"firstname\"), LASTNAME(\"lastname\"), ADDRESS_LINE_1(\"addressLine1\"), ADDRESS_LINE_2(\"addressLine2\"), CITY(\n                 \"city\"), STATE(\"state\"), ZIP(\"zip\"), COUNTRY(\"country\"), MOBILE_NUMBER(\"mobileNumber\"), PHONE_NUMBER(\"housePhoneNumber\"), COMMENT(\n                 \"comment\"), DATE_OF_BIRTH(\"dob\"), AMOUNT(\"amount\"), SAVINGS_ID(\"savingsId\");\n \n         private final String value;\n \n-        private GUARANTOR_JSON_INPUT_PARAMS(final String value) {\n+        GUARANTOR_JSON_INPUT_PARAMS(final String value) {\n             this.value = value;\n         }\n ",
                "deletions": 2
            },
            {
                "sha": "a98a9da278b9dca56f31e7efe0afb1de833d9e40",
                "filename": "fineract-provider/src/main/java/org/apache/fineract/portfolio/loanaccount/guarantor/domain/Guarantor.java",
                "blob_url": "https://github.com/apache/fineract/blob/af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1/fineract-provider/src/main/java/org/apache/fineract/portfolio/loanaccount/guarantor/domain/Guarantor.java",
                "raw_url": "https://github.com/apache/fineract/raw/af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1/fineract-provider/src/main/java/org/apache/fineract/portfolio/loanaccount/guarantor/domain/Guarantor.java",
                "status": "modified",
                "changes": 28,
                "additions": 7,
                "contents_url": "https://api.github.com/repos/apache/fineract/contents/fineract-provider/src/main/java/org/apache/fineract/portfolio/loanaccount/guarantor/domain/Guarantor.java?ref=af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1",
                "patch": "@@ -18,29 +18,15 @@\n  */\n package org.apache.fineract.portfolio.loanaccount.guarantor.domain;\n \n-import java.util.ArrayList;\n-import java.util.Date;\n-import java.util.LinkedHashMap;\n-import java.util.List;\n-import java.util.Map;\n-\n-import javax.persistence.CascadeType;\n-import javax.persistence.Column;\n-import javax.persistence.Entity;\n-import javax.persistence.FetchType;\n-import javax.persistence.JoinColumn;\n-import javax.persistence.ManyToOne;\n-import javax.persistence.OneToMany;\n-import javax.persistence.Table;\n-import javax.persistence.Temporal;\n-import javax.persistence.TemporalType;\n-\n import org.apache.commons.lang.StringUtils;\n import org.apache.fineract.infrastructure.codes.domain.CodeValue;\n import org.apache.fineract.infrastructure.core.api.JsonCommand;\n+import org.apache.fineract.infrastructure.core.domain.AbstractPersistableCustom;\n import org.apache.fineract.portfolio.loanaccount.domain.Loan;\n import org.apache.fineract.portfolio.loanaccount.guarantor.GuarantorConstants.GUARANTOR_JSON_INPUT_PARAMS;\n-import org.apache.fineract.infrastructure.core.domain.AbstractPersistableCustom;\n+\n+import javax.persistence.*;\n+import java.util.*;\n \n @Entity\n @Table(name = \"m_guarantor\")\n@@ -208,7 +194,7 @@ private void handlePropertyUpdate(final JsonCommand command, final Map<String, O\n                 newValue = command.integerValueOfParameterNamed(paramName);\n             }\n             actualChanges.put(paramName, newValue);\n-            propertyToBeUpdated = newValue;\n+            //propertyToBeUpdated = newValue;\n \n             // now update actual property\n             if (paramName.equals(GUARANTOR_JSON_INPUT_PARAMS.GUARANTOR_TYPE_ID.getValue())) {\n@@ -222,7 +208,7 @@ private void handlePropertyUpdate(final JsonCommand command, final Map<String, O\n         if (command.isChangeInStringParameterNamed(paramName, propertyToBeUpdated)) {\n             final String newValue = command.stringValueOfParameterNamed(paramName);\n             actualChanges.put(paramName, newValue);\n-            propertyToBeUpdated = newValue;\n+            //propertyToBeUpdated = newValue;\n \n             // now update actual property\n             if (paramName.equals(GUARANTOR_JSON_INPUT_PARAMS.FIRSTNAME.getValue())) {\n@@ -256,7 +242,7 @@ private void handlePropertyUpdate(final JsonCommand command, final Map<String, O\n         if (command.isChangeInDateParameterNamed(paramName, propertyToBeUpdated)) {\n             final Date newValue = command.DateValueOfParameterNamed(paramName);\n             actualChanges.put(paramName, newValue);\n-            propertyToBeUpdated = newValue;\n+            //propertyToBeUpdated = newValue;\n \n             // now update actual property\n             if (paramName.equals(GUARANTOR_JSON_INPUT_PARAMS.DATE_OF_BIRTH.getValue())) {",
                "deletions": 21
            },
            {
                "sha": "5bc70a33594c1da4f196a9722470b0f3c2546bd0",
                "filename": "fineract-provider/src/main/java/org/apache/fineract/portfolio/loanaccount/guarantor/service/GuarantorWritePlatformServiceJpaRepositoryIImpl.java",
                "blob_url": "https://github.com/apache/fineract/blob/af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1/fineract-provider/src/main/java/org/apache/fineract/portfolio/loanaccount/guarantor/service/GuarantorWritePlatformServiceJpaRepositoryIImpl.java",
                "raw_url": "https://github.com/apache/fineract/raw/af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1/fineract-provider/src/main/java/org/apache/fineract/portfolio/loanaccount/guarantor/service/GuarantorWritePlatformServiceJpaRepositoryIImpl.java",
                "status": "modified",
                "changes": 20,
                "additions": 8,
                "contents_url": "https://api.github.com/repos/apache/fineract/contents/fineract-provider/src/main/java/org/apache/fineract/portfolio/loanaccount/guarantor/service/GuarantorWritePlatformServiceJpaRepositoryIImpl.java?ref=af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1",
                "patch": "@@ -18,11 +18,6 @@\n  */\n package org.apache.fineract.portfolio.loanaccount.guarantor.service;\n \n-import java.util.ArrayList;\n-import java.util.Collection;\n-import java.util.List;\n-import java.util.Map;\n-\n import org.apache.fineract.infrastructure.codes.domain.CodeValue;\n import org.apache.fineract.infrastructure.codes.domain.CodeValueRepositoryWrapper;\n import org.apache.fineract.infrastructure.core.api.JsonCommand;\n@@ -43,11 +38,7 @@\n import org.apache.fineract.portfolio.loanaccount.guarantor.GuarantorConstants;\n import org.apache.fineract.portfolio.loanaccount.guarantor.GuarantorConstants.GUARANTOR_JSON_INPUT_PARAMS;\n import org.apache.fineract.portfolio.loanaccount.guarantor.command.GuarantorCommand;\n-import org.apache.fineract.portfolio.loanaccount.guarantor.domain.Guarantor;\n-import org.apache.fineract.portfolio.loanaccount.guarantor.domain.GuarantorFundStatusType;\n-import org.apache.fineract.portfolio.loanaccount.guarantor.domain.GuarantorFundingDetails;\n-import org.apache.fineract.portfolio.loanaccount.guarantor.domain.GuarantorRepository;\n-import org.apache.fineract.portfolio.loanaccount.guarantor.domain.GuarantorType;\n+import org.apache.fineract.portfolio.loanaccount.guarantor.domain.*;\n import org.apache.fineract.portfolio.loanaccount.guarantor.exception.DuplicateGuarantorException;\n import org.apache.fineract.portfolio.loanaccount.guarantor.exception.GuarantorNotFoundException;\n import org.apache.fineract.portfolio.loanaccount.guarantor.exception.InvalidGuarantorException;\n@@ -62,6 +53,11 @@\n import org.springframework.stereotype.Service;\n import org.springframework.transaction.annotation.Transactional;\n \n+import java.util.ArrayList;\n+import java.util.Collection;\n+import java.util.List;\n+import java.util.Map;\n+\n @Service\n public class GuarantorWritePlatformServiceJpaRepositoryIImpl implements GuarantorWritePlatformService {\n \n@@ -229,8 +225,8 @@ public CommandProcessingResult updateGuarantor(final Long loanId, final Long gua\n                 }\n             }\n \n-            if (changesOnly.containsKey(GUARANTOR_JSON_INPUT_PARAMS.ENTITY_ID)\n-                    || changesOnly.containsKey(GUARANTOR_JSON_INPUT_PARAMS.GUARANTOR_TYPE_ID)) {\n+            if (changesOnly.containsKey(GUARANTOR_JSON_INPUT_PARAMS.ENTITY_ID.getValue())\n+                    || changesOnly.containsKey(GUARANTOR_JSON_INPUT_PARAMS.GUARANTOR_TYPE_ID.getValue())) {\n                 validateGuarantorBusinessRules(guarantorForUpdate);\n             }\n ",
                "deletions": 12
            },
            {
                "sha": "8b6edd1d4cb1813f03facef3f28817881a9c3b66",
                "filename": "fineract-provider/src/main/java/org/apache/fineract/portfolio/loanaccount/loanschedule/service/LoanScheduleAssembler.java",
                "blob_url": "https://github.com/apache/fineract/blob/af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1/fineract-provider/src/main/java/org/apache/fineract/portfolio/loanaccount/loanschedule/service/LoanScheduleAssembler.java",
                "raw_url": "https://github.com/apache/fineract/raw/af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1/fineract-provider/src/main/java/org/apache/fineract/portfolio/loanaccount/loanschedule/service/LoanScheduleAssembler.java",
                "status": "modified",
                "changes": 2,
                "additions": 1,
                "contents_url": "https://api.github.com/repos/apache/fineract/contents/fineract-provider/src/main/java/org/apache/fineract/portfolio/loanaccount/loanschedule/service/LoanScheduleAssembler.java?ref=af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1",
                "patch": "@@ -259,7 +259,7 @@ private LoanApplicationTerms assembleLoanApplicationTermsFrom(final JsonElement\n             validateRepaymentFrequencyIsSameAsMeetingFrequency(meetingPeriodFrequency.getValue(), repaymentFrequencyType,\n                     CalendarUtils.getInterval(calendar.getRecurrence()), repaymentEvery);\n         } else {\n-            if (repaymentPeriodFrequencyType == PeriodFrequencyType.MONTHS && nthDay != null && nthDay != NthDayType.INVALID.getValue()) {\n+            if (repaymentPeriodFrequencyType == PeriodFrequencyType.MONTHS && nthDay != null && !nthDay.equals(NthDayType.INVALID.getValue())) {\n                 LocalDate calendarStartDate = repaymentsStartingFromDate;\n                 if (calendarStartDate == null) calendarStartDate = expectedDisbursementDate;\n                 calendar = createLoanCalendar(calendarStartDate, repaymentEvery, CalendarFrequencyType.MONTHLY, dayOfWeek, nthDay);",
                "deletions": 1
            },
            {
                "sha": "3e5f4248eeeeb1c9cf784e76b9a90cce109f5d00",
                "filename": "fineract-provider/src/main/java/org/apache/fineract/portfolio/loanaccount/rescheduleloan/RescheduleLoansApiConstants.java",
                "blob_url": "https://github.com/apache/fineract/blob/af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1/fineract-provider/src/main/java/org/apache/fineract/portfolio/loanaccount/rescheduleloan/RescheduleLoansApiConstants.java",
                "raw_url": "https://github.com/apache/fineract/raw/af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1/fineract-provider/src/main/java/org/apache/fineract/portfolio/loanaccount/rescheduleloan/RescheduleLoansApiConstants.java",
                "status": "modified",
                "changes": 10,
                "additions": 7,
                "contents_url": "https://api.github.com/repos/apache/fineract/contents/fineract-provider/src/main/java/org/apache/fineract/portfolio/loanaccount/rescheduleloan/RescheduleLoansApiConstants.java?ref=af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1",
                "patch": "@@ -19,6 +19,7 @@\n package org.apache.fineract.portfolio.loanaccount.rescheduleloan;\n \n import java.util.Arrays;\n+import java.util.Collections;\n import java.util.HashSet;\n import java.util.Set;\n \n@@ -58,8 +59,11 @@\n     // approve action request parameters\n     public static final String approvedOnDateParam = \"approvedOnDate\";\n \n-    public static final Set<String> APPROVE_REQUEST_DATA_PARAMETERS = new HashSet<>(Arrays.asList(localeParamName, dateFormatParamName,\n-            approvedOnDateParam));\n+    public static final Set<String> APPROVE_REQUEST_DATA_PARAMETERS =\n+            Collections.unmodifiableSet(new HashSet<>(Arrays.asList(localeParamName, dateFormatParamName,\n+            approvedOnDateParam)));\n     \n-    public static final Set<String> commandParams = new HashSet<>(Arrays.asList(allCommandParamName, approveCommandParamName, pendingCommandParamName, rejectCommandParamName));\n+    public static final Set<String> commandParams =\n+            Collections.unmodifiableSet(new HashSet<>(Arrays.asList(allCommandParamName, approveCommandParamName,\n+                    pendingCommandParamName, rejectCommandParamName)));\n }",
                "deletions": 3
            },
            {
                "sha": "3366ddeb48e64731b5d1c14b62941c4db3600f19",
                "filename": "fineract-provider/src/main/java/org/apache/fineract/portfolio/loanaccount/serialization/LoanApplicationCommandFromApiJsonHelper.java",
                "blob_url": "https://github.com/apache/fineract/blob/af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1/fineract-provider/src/main/java/org/apache/fineract/portfolio/loanaccount/serialization/LoanApplicationCommandFromApiJsonHelper.java",
                "raw_url": "https://github.com/apache/fineract/raw/af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1/fineract-provider/src/main/java/org/apache/fineract/portfolio/loanaccount/serialization/LoanApplicationCommandFromApiJsonHelper.java",
                "status": "modified",
                "changes": 2,
                "additions": 1,
                "contents_url": "https://api.github.com/repos/apache/fineract/contents/fineract-provider/src/main/java/org/apache/fineract/portfolio/loanaccount/serialization/LoanApplicationCommandFromApiJsonHelper.java?ref=af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1",
                "patch": "@@ -1050,7 +1050,7 @@ public void validatelinkedSavingsAccount(final SavingsAccount savingsAccount, fi\n                     \"Linked Savings account with id:\" + savingsAccount.getId() + \" is not in active state\", \"linkAccountId\",\n                     savingsAccount.getId());\n             dataValidationErrors.add(error);\n-        } else if (loanApplication.getClientId() != savingsAccount.clientId()) {\n+        } else if (!loanApplication.getClientId().equals(savingsAccount.clientId())) {\n             final ApiParameterError error = ApiParameterError.parameterError(\n                     \"validation.msg.loan.linked.savings.account.not.belongs.to.same.client\", \"Linked Savings account with id:\"\n                             + savingsAccount.getId() + \" is not belongs to the same client\", \"linkAccountId\", savingsAccount.getId());",
                "deletions": 1
            },
            {
                "sha": "d89314c811e523ccdfbcfeb2e1586669bb0f050b",
                "filename": "fineract-provider/src/main/java/org/apache/fineract/portfolio/loanaccount/service/LoanChargeAssembler.java",
                "blob_url": "https://github.com/apache/fineract/blob/af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1/fineract-provider/src/main/java/org/apache/fineract/portfolio/loanaccount/service/LoanChargeAssembler.java",
                "raw_url": "https://github.com/apache/fineract/raw/af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1/fineract-provider/src/main/java/org/apache/fineract/portfolio/loanaccount/service/LoanChargeAssembler.java",
                "status": "modified",
                "changes": 23,
                "additions": 7,
                "contents_url": "https://api.github.com/repos/apache/fineract/contents/fineract-provider/src/main/java/org/apache/fineract/portfolio/loanaccount/service/LoanChargeAssembler.java?ref=af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1",
                "patch": "@@ -18,19 +18,11 @@\n  */\n package org.apache.fineract.portfolio.loanaccount.service;\n \n-import java.math.BigDecimal;\n-import java.util.ArrayList;\n-import java.util.HashSet;\n-import java.util.List;\n-import java.util.Locale;\n-import java.util.Set;\n-\n+import com.google.gson.JsonArray;\n+import com.google.gson.JsonElement;\n+import com.google.gson.JsonObject;\n import org.apache.fineract.infrastructure.core.serialization.FromJsonHelper;\n-import org.apache.fineract.portfolio.charge.domain.Charge;\n-import org.apache.fineract.portfolio.charge.domain.ChargeCalculationType;\n-import org.apache.fineract.portfolio.charge.domain.ChargePaymentMode;\n-import org.apache.fineract.portfolio.charge.domain.ChargeRepositoryWrapper;\n-import org.apache.fineract.portfolio.charge.domain.ChargeTimeType;\n+import org.apache.fineract.portfolio.charge.domain.*;\n import org.apache.fineract.portfolio.charge.exception.LoanChargeCannotBeAddedException;\n import org.apache.fineract.portfolio.loanaccount.api.LoanApiConstants;\n import org.apache.fineract.portfolio.loanaccount.domain.LoanCharge;\n@@ -44,9 +36,8 @@\n import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.stereotype.Service;\n \n-import com.google.gson.JsonArray;\n-import com.google.gson.JsonElement;\n-import com.google.gson.JsonObject;\n+import java.math.BigDecimal;\n+import java.util.*;\n \n @Service\n public class LoanChargeAssembler {\n@@ -231,7 +222,7 @@ public LoanChargeAssembler(final FromJsonHelper fromApiJsonHelper, final ChargeR\n                     final Long chargeId = this.fromApiJsonHelper.extractLongNamed(\"chargeId\", loanChargeElement);\n                     if (id == null) {\n                         final Charge chargeDefinition = this.chargeRepository.findOneWithNotFoundDetection(chargeId);\n-                        if (chargeDefinition.getChargeTimeType() == ChargeTimeType.TRANCHE_DISBURSEMENT.getValue()) {\n+                        if (chargeDefinition.getChargeTimeType().equals(ChargeTimeType.TRANCHE_DISBURSEMENT.getValue())) {\n                             associatedChargesForLoan.add(chargeDefinition);\n                         }\n                     }",
                "deletions": 16
            },
            {
                "sha": "cdd1d21fe7a4cbbf4c3067c8c6b1a88a855d03e6",
                "filename": "fineract-provider/src/main/java/org/apache/fineract/portfolio/loanaccount/service/LoanSchedularServiceImpl.java",
                "blob_url": "https://github.com/apache/fineract/blob/af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1/fineract-provider/src/main/java/org/apache/fineract/portfolio/loanaccount/service/LoanSchedularServiceImpl.java",
                "raw_url": "https://github.com/apache/fineract/raw/af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1/fineract-provider/src/main/java/org/apache/fineract/portfolio/loanaccount/service/LoanSchedularServiceImpl.java",
                "status": "modified",
                "changes": 11,
                "additions": 6,
                "contents_url": "https://api.github.com/repos/apache/fineract/contents/fineract-provider/src/main/java/org/apache/fineract/portfolio/loanaccount/service/LoanSchedularServiceImpl.java?ref=af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1",
                "patch": "@@ -18,9 +18,6 @@\n  */\n package org.apache.fineract.portfolio.loanaccount.service;\n \n-import java.util.*;\n-import java.util.concurrent.*;\n-\n import org.apache.fineract.infrastructure.configuration.domain.ConfigurationDomainService;\n import org.apache.fineract.infrastructure.core.data.ApiParameterError;\n import org.apache.fineract.infrastructure.core.exception.AbstractPlatformDomainRuleException;\n@@ -42,6 +39,9 @@\n import org.springframework.stereotype.Service;\n import org.springframework.util.CollectionUtils;\n \n+import java.util.*;\n+import java.util.concurrent.*;\n+\n @Service\n public class LoanSchedularServiceImpl implements LoanSchedularService {\n \n@@ -240,14 +240,15 @@ public void recalculateInterest(OfficeData office, int threadPoolSize, int batch\n \n \tprivate void recalculateInterest(List<Long> loanIds,\n \t\t\t\t\t\t\t\t\t int threadPoolSize, int batchSize, final ExecutorService executorService) {\n-\t\tStringBuilder sb = new StringBuilder();\n+\t\t//StringBuilder sb = new StringBuilder();\n \n \t\tList<Callable<Object>> posters = new ArrayList<Callable<Object>>();\n \t\tint fromIndex = 0;\n \t\t// get the size of current paginated dataset\n \t\tint size = loanIds.size();\n \t\t//calculate the batch size\n-\t\tbatchSize = (int) Math.ceil(size / threadPoolSize);\n+\t\tdouble toGetCeilValue = (double) (size / threadPoolSize);\n+\t\tbatchSize = (int) Math.ceil(toGetCeilValue);\n \n \t\tif(batchSize == 0)\n \t\t\treturn;",
                "deletions": 5
            },
            {
                "sha": "2e162027606a883d73c981a248e6b3c26311de93",
                "filename": "fineract-provider/src/main/java/org/apache/fineract/portfolio/loanproduct/data/LoanProductBorrowerCycleVariationData.java",
                "blob_url": "https://github.com/apache/fineract/blob/af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1/fineract-provider/src/main/java/org/apache/fineract/portfolio/loanproduct/data/LoanProductBorrowerCycleVariationData.java",
                "raw_url": "https://github.com/apache/fineract/raw/af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1/fineract-provider/src/main/java/org/apache/fineract/portfolio/loanproduct/data/LoanProductBorrowerCycleVariationData.java",
                "status": "modified",
                "changes": 7,
                "additions": 4,
                "contents_url": "https://api.github.com/repos/apache/fineract/contents/fineract-provider/src/main/java/org/apache/fineract/portfolio/loanproduct/data/LoanProductBorrowerCycleVariationData.java?ref=af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1",
                "patch": "@@ -18,13 +18,14 @@\n  */\n package org.apache.fineract.portfolio.loanproduct.data;\n \n-import java.math.BigDecimal;\n-\n import org.apache.fineract.infrastructure.core.data.EnumOptionData;\n import org.apache.fineract.portfolio.loanproduct.domain.LoanProductParamType;\n import org.apache.fineract.portfolio.loanproduct.domain.LoanProductValueConditionType;\n \n-public class LoanProductBorrowerCycleVariationData {\n+import java.io.Serializable;\n+import java.math.BigDecimal;\n+\n+public class LoanProductBorrowerCycleVariationData implements Serializable {\n \n     @SuppressWarnings(\"unused\")\n     private final Long id;",
                "deletions": 3
            },
            {
                "sha": "cd28c6b723086066a1d24558ed00f6689717dce3",
                "filename": "fineract-provider/src/main/java/org/apache/fineract/portfolio/loanproduct/data/LoanProductData.java",
                "blob_url": "https://github.com/apache/fineract/blob/af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1/fineract-provider/src/main/java/org/apache/fineract/portfolio/loanproduct/data/LoanProductData.java",
                "raw_url": "https://github.com/apache/fineract/raw/af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1/fineract-provider/src/main/java/org/apache/fineract/portfolio/loanproduct/data/LoanProductData.java",
                "status": "modified",
                "changes": 27,
                "additions": 16,
                "contents_url": "https://api.github.com/repos/apache/fineract/contents/fineract-provider/src/main/java/org/apache/fineract/portfolio/loanproduct/data/LoanProductData.java?ref=af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1",
                "patch": "@@ -18,12 +18,6 @@\n  */\n package org.apache.fineract.portfolio.loanproduct.data;\n \n-import java.math.BigDecimal;\n-import java.util.ArrayList;\n-import java.util.Collection;\n-import java.util.List;\n-import java.util.Map;\n-\n import org.apache.fineract.accounting.common.AccountingEnumerations;\n import org.apache.fineract.accounting.common.AccountingRuleType;\n import org.apache.fineract.accounting.glaccount.data.GLAccountData;\n@@ -49,10 +43,17 @@\n import org.joda.time.LocalDate;\n import org.springframework.util.CollectionUtils;\n \n+import java.io.Serializable;\n+import java.math.BigDecimal;\n+import java.util.ArrayList;\n+import java.util.Collection;\n+import java.util.List;\n+import java.util.Map;\n+\n /**\n  * Immutable data object to represent loan products.\n  */\n-public class LoanProductData {\n+public class LoanProductData implements Serializable {\n \n     private final Long id;\n     private final String name;\n@@ -1134,12 +1135,16 @@ private Integer getRecalculationCompoundingFrequencyInterval() {\n         return null;\n     }\n     public Boolean isCompoundingToBePostedAsTransaction() {\n-        if (isInterestRecalculationEnabled()) { return this.interestRecalculationData.isCompoundingToBePostedAsTransaction(); }\n-        return null;\n+        if (isInterestRecalculationEnabled()) {\n+            return this.interestRecalculationData.isCompoundingToBePostedAsTransaction();\n+        } else {\n+            return !this.interestRecalculationData.isCompoundingToBePostedAsTransaction();\n+        }\n     }\n     public Boolean allowCompoundingOnEod() {\n-        if (isInterestRecalculationEnabled()) { return this.interestRecalculationData.allowCompoundingOnEod(); }\n-        return null;\n+        if (isInterestRecalculationEnabled()) {\n+            return this.interestRecalculationData.allowCompoundingOnEod();\n+        } return !this.interestRecalculationData.allowCompoundingOnEod();\n     }\n \n     public boolean canDefineInstallmentAmount() {",
                "deletions": 11
            },
            {
                "sha": "cbb7eeb338e66d64e19314d5f11dc1b8fb1fc2f6",
                "filename": "fineract-provider/src/main/java/org/apache/fineract/portfolio/loanproduct/data/LoanProductGuaranteeData.java",
                "blob_url": "https://github.com/apache/fineract/blob/af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1/fineract-provider/src/main/java/org/apache/fineract/portfolio/loanproduct/data/LoanProductGuaranteeData.java",
                "raw_url": "https://github.com/apache/fineract/raw/af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1/fineract-provider/src/main/java/org/apache/fineract/portfolio/loanproduct/data/LoanProductGuaranteeData.java",
                "status": "modified",
                "changes": 3,
                "additions": 2,
                "contents_url": "https://api.github.com/repos/apache/fineract/contents/fineract-provider/src/main/java/org/apache/fineract/portfolio/loanproduct/data/LoanProductGuaranteeData.java?ref=af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1",
                "patch": "@@ -18,9 +18,10 @@\n  */\n package org.apache.fineract.portfolio.loanproduct.data;\n \n+import java.io.Serializable;\n import java.math.BigDecimal;\n \n-public class LoanProductGuaranteeData {\n+public class LoanProductGuaranteeData implements Serializable {\n \n     @SuppressWarnings(\"unused\")\n     private final Long id;",
                "deletions": 1
            },
            {
                "sha": "9f08d0cef971e1204a6eb1666d2886952f184b26",
                "filename": "fineract-provider/src/main/java/org/apache/fineract/portfolio/loanproduct/data/LoanProductInterestRecalculationData.java",
                "blob_url": "https://github.com/apache/fineract/blob/af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1/fineract-provider/src/main/java/org/apache/fineract/portfolio/loanproduct/data/LoanProductInterestRecalculationData.java",
                "raw_url": "https://github.com/apache/fineract/raw/af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1/fineract-provider/src/main/java/org/apache/fineract/portfolio/loanproduct/data/LoanProductInterestRecalculationData.java",
                "status": "modified",
                "changes": 10,
                "additions": 5,
                "contents_url": "https://api.github.com/repos/apache/fineract/contents/fineract-provider/src/main/java/org/apache/fineract/portfolio/loanproduct/data/LoanProductInterestRecalculationData.java?ref=af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1",
                "patch": "@@ -18,16 +18,16 @@\n  */\n package org.apache.fineract.portfolio.loanproduct.data;\n \n-import static org.apache.fineract.portfolio.loanproduct.service.LoanEnumerations.interestRecalculationCompoundingType;\n-import static org.apache.fineract.portfolio.loanproduct.service.LoanEnumerations.preCloseInterestCalculationStrategy;\n-import static org.apache.fineract.portfolio.loanproduct.service.LoanEnumerations.rescheduleStrategyType;\n-\n import org.apache.fineract.infrastructure.core.data.EnumOptionData;\n import org.apache.fineract.portfolio.loanproduct.domain.InterestRecalculationCompoundingMethod;\n import org.apache.fineract.portfolio.loanproduct.domain.LoanPreClosureInterestCalculationStrategy;\n import org.apache.fineract.portfolio.loanproduct.domain.LoanRescheduleStrategyMethod;\n \n-public class LoanProductInterestRecalculationData {\n+import java.io.Serializable;\n+\n+import static org.apache.fineract.portfolio.loanproduct.service.LoanEnumerations.*;\n+\n+public class LoanProductInterestRecalculationData implements Serializable {\n \n     @SuppressWarnings(\"unused\")\n     private final Long id;",
                "deletions": 5
            },
            {
                "sha": "45f9dc94c5569b60857d9e7ea3a870d1848ec7c3",
                "filename": "fineract-provider/src/main/java/org/apache/fineract/portfolio/loanproduct/data/TransactionProcessingStrategyData.java",
                "blob_url": "https://github.com/apache/fineract/blob/af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1/fineract-provider/src/main/java/org/apache/fineract/portfolio/loanproduct/data/TransactionProcessingStrategyData.java",
                "raw_url": "https://github.com/apache/fineract/raw/af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1/fineract-provider/src/main/java/org/apache/fineract/portfolio/loanproduct/data/TransactionProcessingStrategyData.java",
                "status": "modified",
                "changes": 4,
                "additions": 3,
                "contents_url": "https://api.github.com/repos/apache/fineract/contents/fineract-provider/src/main/java/org/apache/fineract/portfolio/loanproduct/data/TransactionProcessingStrategyData.java?ref=af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1",
                "patch": "@@ -18,10 +18,12 @@\n  */\n package org.apache.fineract.portfolio.loanproduct.data;\n \n+import java.io.Serializable;\n+\n /**\n  * Immutable data object representing a transaction strategy option for a loan.\n  */\n-public final class TransactionProcessingStrategyData {\n+public final class TransactionProcessingStrategyData implements Serializable {\n \n     private final Long id;\n     @SuppressWarnings(\"unused\")",
                "deletions": 1
            },
            {
                "sha": "b7336846fbc9b6c505fb283b8d23691967f4e847",
                "filename": "fineract-provider/src/main/java/org/apache/fineract/portfolio/loanproduct/domain/LoanProduct.java",
                "blob_url": "https://github.com/apache/fineract/blob/af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1/fineract-provider/src/main/java/org/apache/fineract/portfolio/loanproduct/domain/LoanProduct.java",
                "raw_url": "https://github.com/apache/fineract/raw/af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1/fineract-provider/src/main/java/org/apache/fineract/portfolio/loanproduct/domain/LoanProduct.java",
                "status": "modified",
                "changes": 38,
                "additions": 7,
                "contents_url": "https://api.github.com/repos/apache/fineract/contents/fineract-provider/src/main/java/org/apache/fineract/portfolio/loanproduct/domain/LoanProduct.java?ref=af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1",
                "patch": "@@ -18,36 +18,12 @@\n  */\n package org.apache.fineract.portfolio.loanproduct.domain;\n \n-import java.math.BigDecimal;\n-import java.util.ArrayList;\n-import java.util.Collection;\n-import java.util.Date;\n-import java.util.HashMap;\n-import java.util.HashSet;\n-import java.util.LinkedHashMap;\n-import java.util.List;\n-import java.util.Map;\n-import java.util.Set;\n-\n-import javax.persistence.CascadeType;\n-import javax.persistence.Column;\n-import javax.persistence.Embedded;\n-import javax.persistence.Entity;\n-import javax.persistence.FetchType;\n-import javax.persistence.JoinColumn;\n-import javax.persistence.JoinTable;\n-import javax.persistence.ManyToMany;\n-import javax.persistence.ManyToOne;\n-import javax.persistence.OneToMany;\n-import javax.persistence.OneToOne;\n-import javax.persistence.Table;\n-import javax.persistence.Temporal;\n-import javax.persistence.TemporalType;\n-import javax.persistence.UniqueConstraint;\n-\n+import com.google.gson.JsonArray;\n+import com.google.gson.JsonObject;\n import org.apache.commons.lang.StringUtils;\n import org.apache.fineract.accounting.common.AccountingRuleType;\n import org.apache.fineract.infrastructure.core.api.JsonCommand;\n+import org.apache.fineract.infrastructure.core.domain.AbstractPersistableCustom;\n import org.apache.fineract.organisation.monetary.domain.MonetaryCurrency;\n import org.apache.fineract.organisation.monetary.domain.Money;\n import org.apache.fineract.portfolio.charge.domain.Charge;\n@@ -61,10 +37,10 @@\n import org.apache.fineract.portfolio.loanaccount.loanschedule.domain.AprCalculator;\n import org.apache.fineract.portfolio.loanproduct.LoanProductConstants;\n import org.joda.time.LocalDate;\n-import org.apache.fineract.infrastructure.core.domain.AbstractPersistableCustom;\n \n-import com.google.gson.JsonArray;\n-import com.google.gson.JsonObject;\n+import javax.persistence.*;\n+import java.math.BigDecimal;\n+import java.util.*;\n \n /**\n  * Loan products allow for categorisation of an organisations loans into\n@@ -1234,7 +1210,7 @@ public void setSyncExpectedWithDisbursementDate(boolean syncExpectedWithDisburse\n             Integer interestCycleUsed = 0;\n             Integer repaymentCycleUsed = 0;\n             for (LoanProductBorrowerCycleVariations cycleVariation : this.borrowerCycleVariations) {\n-                if (cycleVariation.getBorrowerCycleNumber() == cycleNumber\n+                if (cycleVariation.getBorrowerCycleNumber().equals(cycleNumber)\n                         && cycleVariation.getValueConditionType().equals(LoanProductValueConditionType.EQUAL)) {\n                     switch (cycleVariation.getParamType()) {\n                         case PRINCIPAL:",
                "deletions": 31
            },
            {
                "sha": "8530758f8d0d2f1f4778877cc9a3376e5f21e197",
                "filename": "fineract-provider/src/main/java/org/apache/fineract/portfolio/loanproduct/domain/LoanProductBorrowerCycleVariations.java",
                "blob_url": "https://github.com/apache/fineract/blob/af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1/fineract-provider/src/main/java/org/apache/fineract/portfolio/loanproduct/domain/LoanProductBorrowerCycleVariations.java",
                "raw_url": "https://github.com/apache/fineract/raw/af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1/fineract-provider/src/main/java/org/apache/fineract/portfolio/loanproduct/domain/LoanProductBorrowerCycleVariations.java",
                "status": "modified",
                "changes": 6,
                "additions": 6,
                "contents_url": "https://api.github.com/repos/apache/fineract/contents/fineract-provider/src/main/java/org/apache/fineract/portfolio/loanproduct/domain/LoanProductBorrowerCycleVariations.java?ref=af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1",
                "patch": "@@ -19,6 +19,7 @@\n package org.apache.fineract.portfolio.loanproduct.domain;\n \n import java.math.BigDecimal;\n+import java.util.Objects;\n \n import javax.persistence.Column;\n import javax.persistence.Entity;\n@@ -103,6 +104,11 @@ public boolean equals(final Object obj) {\n         return false;\n     }\n \n+    @Override\n+    public int hashCode() {\n+        return Objects.hash(borrowerCycleNumber, minValue, maxValue);\n+    }\n+\n     public void copy(final LoanProductBorrowerCycleVariations borrowerCycleVariations) {\n         this.defaultValue = borrowerCycleVariations.defaultValue;\n         this.minValue = borrowerCycleVariations.minValue;",
                "deletions": 0
            },
            {
                "sha": "4da1efc1798c0fcd534a12e6cd19d28f2b8e9936",
                "filename": "fineract-provider/src/main/java/org/apache/fineract/portfolio/loanproduct/domain/LoanProductConfigurableAttributes.java",
                "blob_url": "https://github.com/apache/fineract/blob/af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1/fineract-provider/src/main/java/org/apache/fineract/portfolio/loanproduct/domain/LoanProductConfigurableAttributes.java",
                "raw_url": "https://github.com/apache/fineract/raw/af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1/fineract-provider/src/main/java/org/apache/fineract/portfolio/loanproduct/domain/LoanProductConfigurableAttributes.java",
                "status": "modified",
                "changes": 37,
                "additions": 30,
                "contents_url": "https://api.github.com/repos/apache/fineract/contents/fineract-provider/src/main/java/org/apache/fineract/portfolio/loanproduct/domain/LoanProductConfigurableAttributes.java?ref=af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1",
                "patch": "@@ -18,19 +18,19 @@\n  */\n package org.apache.fineract.portfolio.loanproduct.domain;\n \n-import javax.persistence.Column;\n-import javax.persistence.Entity;\n-import javax.persistence.JoinColumn;\n-import javax.persistence.ManyToOne;\n-import javax.persistence.Table;\n-\n+import org.apache.commons.lang.builder.EqualsBuilder;\n+import org.apache.commons.lang.builder.HashCodeBuilder;\n import org.apache.fineract.infrastructure.core.api.JsonCommand;\n import org.apache.fineract.infrastructure.core.domain.AbstractPersistableCustom;\n import org.apache.fineract.portfolio.loanproduct.LoanProductConstants;\n \n+import javax.persistence.*;\n+import java.io.Serializable;\n+import java.util.Objects;\n+\n @Entity\n @Table(name = \"m_product_loan_configurable_attributes\")\n-public class LoanProductConfigurableAttributes extends AbstractPersistableCustom<Long> {\n+public class LoanProductConfigurableAttributes extends AbstractPersistableCustom<Long> implements Serializable {\n \n     @ManyToOne\n     @JoinColumn(name = \"loan_product_id\", nullable = false)\n@@ -209,4 +209,27 @@ public void setGraceOnArrearsAgeing(Boolean graceOnArrearsAgeing) {\n         this.graceOnArrearsAgeing = graceOnArrearsAgeing;\n     }\n \n+    @Override\n+    public boolean equals(Object o) {\n+        if (this == o) return true;\n+\n+        if (!(o instanceof LoanProductConfigurableAttributes)) return false;\n+\n+        LoanProductConfigurableAttributes that = (LoanProductConfigurableAttributes) o;\n+\n+        return Objects.equals(loanProduct, that.loanProduct) &&\n+        \t   Objects.equals(amortizationType, that.amortizationType) &&\n+        \t   Objects.equals(interestType, that.interestType) &&\n+        \t\tObjects.equals(transactionProcessingStrategyId, that.transactionProcessingStrategyId) &&\n+        \t\tObjects.equals(interestCalculationPeriodType, that.interestCalculationPeriodType) &&\n+        \t\tObjects.equals(inArrearsTolerance, that.inArrearsTolerance) &&\n+        \t\tObjects.equals(repaymentEvery, that.repaymentEvery) &&\n+        \t\tObjects.equals(graceOnPrincipalAndInterestPayment, that.graceOnPrincipalAndInterestPayment) &&\n+        \t\tObjects.equals(graceOnArrearsAgeing, that.graceOnArrearsAgeing);\n+    }\n+\n+    @Override\n+    public int hashCode() {\n+        return Objects.hash(loanProduct, amortizationType, interestType, transactionProcessingStrategyId, interestCalculationPeriodType, inArrearsTolerance, repaymentEvery, graceOnPrincipalAndInterestPayment, graceOnArrearsAgeing);\n+    }\n }",
                "deletions": 7
            },
            {
                "sha": "d2b8369250e585eca6f39c3fecb6407099657d13",
                "filename": "fineract-provider/src/main/java/org/apache/fineract/portfolio/loanproduct/serialization/LoanProductDataValidator.java",
                "blob_url": "https://github.com/apache/fineract/blob/af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1/fineract-provider/src/main/java/org/apache/fineract/portfolio/loanproduct/serialization/LoanProductDataValidator.java",
                "raw_url": "https://github.com/apache/fineract/raw/af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1/fineract-provider/src/main/java/org/apache/fineract/portfolio/loanproduct/serialization/LoanProductDataValidator.java",
                "status": "modified",
                "changes": 6,
                "additions": 3,
                "contents_url": "https://api.github.com/repos/apache/fineract/contents/fineract-provider/src/main/java/org/apache/fineract/portfolio/loanproduct/serialization/LoanProductDataValidator.java?ref=af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1",
                "patch": "@@ -320,7 +320,7 @@ public void validateForCreate(final String json) {\n                 .value(isInterestRecalculationEnabled).notNull().isOneOfTheseValues(true, false);\n \n         if (isInterestRecalculationEnabled != null) {\n-            if (isInterestRecalculationEnabled.booleanValue()) {\n+            if (isInterestRecalculationEnabled) {\n                 if (isEqualAmortization) { throw new EqualAmortizationUnsupportedFeatureException(\"interest.recalculation\",\n                         \"interest recalculation\"); }\n                 validateInterestRecalculationParams(element, baseDataValidator, null);\n@@ -363,7 +363,7 @@ public void validateForCreate(final String json) {\n                         .failWithCode(\"not.supported.when.isLinkedToFloatingInterestRates.is.true\",\n                                 \"interestRateFrequencyType param is not supported when isLinkedToFloatingInterestRates is true\");\n             }\n-            if ((interestType == null || interestType != InterestMethod.DECLINING_BALANCE.getValue())\n+            if ((interestType == null || !interestType.equals(InterestMethod.DECLINING_BALANCE.getValue()))\n                     || (isInterestRecalculationEnabled == null || isInterestRecalculationEnabled == false)) {\n                 baseDataValidator\n                         .reset()\n@@ -1208,7 +1208,7 @@ public void validateForUpdate(final String json, final LoanProduct loanProduct)\n             Integer interestType = this.fromApiJsonHelper.parameterExists(\"interestType\", element) ? this.fromApiJsonHelper\n                     .extractIntegerNamed(\"interestType\", element, Locale.getDefault()) : loanProduct.getLoanProductRelatedDetail()\n                     .getInterestMethod().getValue();\n-            if ((interestType == null || interestType != InterestMethod.DECLINING_BALANCE.getValue())\n+            if ((interestType == null || !interestType.equals(InterestMethod.DECLINING_BALANCE.getValue()))\n                     || (isInterestRecalculationEnabled == null || isInterestRecalculationEnabled == false)) {\n                 baseDataValidator\n                         .reset()",
                "deletions": 3
            },
            {
                "sha": "346332b00808ac75d890b51a0868753e9dd8391f",
                "filename": "fineract-provider/src/main/java/org/apache/fineract/portfolio/paymentdetail/data/PaymentDetailData.java",
                "blob_url": "https://github.com/apache/fineract/blob/af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1/fineract-provider/src/main/java/org/apache/fineract/portfolio/paymentdetail/data/PaymentDetailData.java",
                "raw_url": "https://github.com/apache/fineract/raw/af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1/fineract-provider/src/main/java/org/apache/fineract/portfolio/paymentdetail/data/PaymentDetailData.java",
                "status": "modified",
                "changes": 25,
                "additions": 22,
                "contents_url": "https://api.github.com/repos/apache/fineract/contents/fineract-provider/src/main/java/org/apache/fineract/portfolio/paymentdetail/data/PaymentDetailData.java?ref=af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1",
                "patch": "@@ -20,10 +20,13 @@\n \n import org.apache.fineract.portfolio.paymenttype.data.PaymentTypeData;\n \n+import java.io.Serializable;\n+import java.util.Objects;\n+\n /**\n  * Immutable data object representing a payment.\n  */\n-public class PaymentDetailData {\n+public class PaymentDetailData implements Serializable {\n \n     @SuppressWarnings(\"unused\")\n     private final Long id;\n@@ -50,7 +53,23 @@ public PaymentDetailData(final Long id, final PaymentTypeData paymentType, final\n         this.receiptNumber = receiptNumber;\n         this.bankNumber = bankNumber;\n     }\n-    \n-    \n \n+    @Override\n+    public boolean equals(Object o) {\n+        if (this == o) return true;\n+        if (!(o instanceof PaymentDetailData)) return false;\n+        PaymentDetailData that = (PaymentDetailData) o;\n+        return Objects.equals(id, that.id) &&\n+                Objects.equals(paymentType, that.paymentType) &&\n+                Objects.equals(accountNumber, that.accountNumber) &&\n+                Objects.equals(checkNumber, that.checkNumber) &&\n+                Objects.equals(routingCode, that.routingCode) &&\n+                Objects.equals(receiptNumber, that.receiptNumber) &&\n+                Objects.equals(bankNumber, that.bankNumber);\n+    }\n+\n+    @Override\n+    public int hashCode() {\n+        return Objects.hash(id, paymentType, accountNumber, checkNumber, routingCode, receiptNumber, bankNumber);\n+    }\n }\n\\ No newline at end of file",
                "deletions": 3
            },
            {
                "sha": "b7d0f1458d8472f35f0d934bf6048ef2396d08b4",
                "filename": "fineract-provider/src/main/java/org/apache/fineract/portfolio/paymenttype/data/PaymentTypeData.java",
                "blob_url": "https://github.com/apache/fineract/blob/af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1/fineract-provider/src/main/java/org/apache/fineract/portfolio/paymenttype/data/PaymentTypeData.java",
                "raw_url": "https://github.com/apache/fineract/raw/af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1/fineract-provider/src/main/java/org/apache/fineract/portfolio/paymenttype/data/PaymentTypeData.java",
                "status": "modified",
                "changes": 28,
                "additions": 27,
                "contents_url": "https://api.github.com/repos/apache/fineract/contents/fineract-provider/src/main/java/org/apache/fineract/portfolio/paymenttype/data/PaymentTypeData.java?ref=af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1",
                "patch": "@@ -18,7 +18,13 @@\n  */\n package org.apache.fineract.portfolio.paymenttype.data;\n \n-public class PaymentTypeData {\n+import org.apache.commons.lang.builder.EqualsBuilder;\n+import org.apache.commons.lang.builder.HashCodeBuilder;\n+\n+import java.io.Serializable;\n+import java.util.Objects;\n+\n+public class PaymentTypeData implements Serializable {\n \n     @SuppressWarnings(\"unused\")\n     private Long id;\n@@ -58,4 +64,24 @@ public Long getId() {\n     public String getName() {\n         return name;\n     }\n+\n+    @Override\n+    public boolean equals(Object o) {\n+        if (this == o) return true;\n+\n+        if (!(o instanceof PaymentTypeData)) return false;\n+\n+        PaymentTypeData that = (PaymentTypeData) o;\n+\n+        return Objects.equals(id, that.id) &&\n+        \t   Objects.equals(name, that.name) &&\n+        \t   Objects.equals(description, that.description) &&\n+        \t   Objects.equals(isCashPayment, that.isCashPayment) &&\n+        \t   Objects.equals(position, that.position);\n+    }\n+\n+    @Override\n+    public int hashCode() {\n+    \treturn Objects.hash(id, name, description, isCashPayment, position);\n+    }\n }",
                "deletions": 1
            },
            {
                "sha": "d793f15365a5f16eb67311a2fd5991b7eefee896",
                "filename": "fineract-provider/src/main/java/org/apache/fineract/portfolio/savings/data/DepositAccountDataValidator.java",
                "blob_url": "https://github.com/apache/fineract/blob/af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1/fineract-provider/src/main/java/org/apache/fineract/portfolio/savings/data/DepositAccountDataValidator.java",
                "raw_url": "https://github.com/apache/fineract/raw/af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1/fineract-provider/src/main/java/org/apache/fineract/portfolio/savings/data/DepositAccountDataValidator.java",
                "status": "modified",
                "changes": 83,
                "additions": 27,
                "contents_url": "https://api.github.com/repos/apache/fineract/contents/fineract-provider/src/main/java/org/apache/fineract/portfolio/savings/data/DepositAccountDataValidator.java?ref=af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1",
                "patch": "@@ -18,27 +18,31 @@\n  */\n package org.apache.fineract.portfolio.savings.data;\n \n-import static org.apache.fineract.portfolio.savings.DepositsApiConstants.adjustAdvanceTowardsFuturePaymentsParamName;\n-import static org.apache.fineract.portfolio.savings.DepositsApiConstants.allowWithdrawalParamName;\n-import static org.apache.fineract.portfolio.savings.DepositsApiConstants.depositAmountParamName;\n-import static org.apache.fineract.portfolio.savings.DepositsApiConstants.depositPeriodFrequencyIdParamName;\n-import static org.apache.fineract.portfolio.savings.DepositsApiConstants.depositPeriodParamName;\n-import static org.apache.fineract.portfolio.savings.DepositsApiConstants.inMultiplesOfDepositTermParamName;\n-import static org.apache.fineract.portfolio.savings.DepositsApiConstants.inMultiplesOfDepositTermTypeIdParamName;\n-import static org.apache.fineract.portfolio.savings.DepositsApiConstants.isCalendarInheritedParamName;\n-import static org.apache.fineract.portfolio.savings.DepositsApiConstants.isMandatoryDepositParamName;\n-import static org.apache.fineract.portfolio.savings.DepositsApiConstants.linkedAccountParamName;\n-import static org.apache.fineract.portfolio.savings.DepositsApiConstants.mandatoryRecommendedDepositAmountParamName;\n-import static org.apache.fineract.portfolio.savings.DepositsApiConstants.maxDepositTermParamName;\n-import static org.apache.fineract.portfolio.savings.DepositsApiConstants.maxDepositTermTypeIdParamName;\n-import static org.apache.fineract.portfolio.savings.DepositsApiConstants.minDepositTermParamName;\n-import static org.apache.fineract.portfolio.savings.DepositsApiConstants.minDepositTermTypeIdParamName;\n-import static org.apache.fineract.portfolio.savings.DepositsApiConstants.preClosurePenalApplicableParamName;\n-import static org.apache.fineract.portfolio.savings.DepositsApiConstants.preClosurePenalInterestOnTypeIdParamName;\n-import static org.apache.fineract.portfolio.savings.DepositsApiConstants.preClosurePenalInterestParamName;\n-import static org.apache.fineract.portfolio.savings.DepositsApiConstants.recurringFrequencyParamName;\n-import static org.apache.fineract.portfolio.savings.DepositsApiConstants.recurringFrequencyTypeParamName;\n-import static org.apache.fineract.portfolio.savings.DepositsApiConstants.transferInterestToSavingsParamName;\n+import com.google.gson.JsonArray;\n+import com.google.gson.JsonElement;\n+import com.google.gson.JsonObject;\n+import com.google.gson.reflect.TypeToken;\n+import org.apache.commons.lang.StringUtils;\n+import org.apache.fineract.infrastructure.core.data.ApiParameterError;\n+import org.apache.fineract.infrastructure.core.data.DataValidatorBuilder;\n+import org.apache.fineract.infrastructure.core.exception.InvalidJsonException;\n+import org.apache.fineract.infrastructure.core.exception.PlatformApiDataValidationException;\n+import org.apache.fineract.infrastructure.core.serialization.FromJsonHelper;\n+import org.apache.fineract.portfolio.savings.*;\n+import org.apache.fineract.portfolio.savings.domain.SavingsAccount;\n+import org.joda.time.LocalDate;\n+import org.joda.time.MonthDay;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.stereotype.Component;\n+\n+import java.lang.reflect.Type;\n+import java.math.BigDecimal;\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.Locale;\n+import java.util.Map;\n+\n+import static org.apache.fineract.portfolio.savings.DepositsApiConstants.*;\n import static org.apache.fineract.portfolio.savings.SavingsApiConstants.accountNoParamName;\n import static org.apache.fineract.portfolio.savings.SavingsApiConstants.amountParamName;\n import static org.apache.fineract.portfolio.savings.SavingsApiConstants.chargeIdParamName;\n@@ -55,43 +59,10 @@\n import static org.apache.fineract.portfolio.savings.SavingsApiConstants.interestPostingPeriodTypeParamName;\n import static org.apache.fineract.portfolio.savings.SavingsApiConstants.lockinPeriodFrequencyParamName;\n import static org.apache.fineract.portfolio.savings.SavingsApiConstants.lockinPeriodFrequencyTypeParamName;\n-import static org.apache.fineract.portfolio.savings.SavingsApiConstants.minRequiredOpeningBalanceParamName;\n import static org.apache.fineract.portfolio.savings.SavingsApiConstants.nominalAnnualInterestRateParamName;\n import static org.apache.fineract.portfolio.savings.SavingsApiConstants.productIdParamName;\n import static org.apache.fineract.portfolio.savings.SavingsApiConstants.submittedOnDateParamName;\n-import static org.apache.fineract.portfolio.savings.SavingsApiConstants.withHoldTaxParamName;\n-\n-import java.lang.reflect.Type;\n-import java.math.BigDecimal;\n-import java.util.ArrayList;\n-import java.util.List;\n-import java.util.Locale;\n-import java.util.Map;\n-\n-import org.apache.commons.lang.StringUtils;\n-import org.apache.fineract.infrastructure.core.data.ApiParameterError;\n-import org.apache.fineract.infrastructure.core.data.DataValidatorBuilder;\n-import org.apache.fineract.infrastructure.core.exception.InvalidJsonException;\n-import org.apache.fineract.infrastructure.core.exception.PlatformApiDataValidationException;\n-import org.apache.fineract.infrastructure.core.serialization.FromJsonHelper;\n-import org.apache.fineract.portfolio.savings.DepositAccountType;\n-import org.apache.fineract.portfolio.savings.DepositsApiConstants;\n-import org.apache.fineract.portfolio.savings.PreClosurePenalInterestOnType;\n-import org.apache.fineract.portfolio.savings.SavingsCompoundingInterestPeriodType;\n-import org.apache.fineract.portfolio.savings.SavingsInterestCalculationDaysInYearType;\n-import org.apache.fineract.portfolio.savings.SavingsInterestCalculationType;\n-import org.apache.fineract.portfolio.savings.SavingsPeriodFrequencyType;\n-import org.apache.fineract.portfolio.savings.SavingsPostingInterestPeriodType;\n-import org.apache.fineract.portfolio.savings.domain.SavingsAccount;\n-import org.joda.time.LocalDate;\n-import org.joda.time.MonthDay;\n-import org.springframework.beans.factory.annotation.Autowired;\n-import org.springframework.stereotype.Component;\n-\n-import com.google.gson.JsonArray;\n-import com.google.gson.JsonElement;\n-import com.google.gson.JsonObject;\n-import com.google.gson.reflect.TypeToken;\n+import static org.apache.fineract.portfolio.savings.SavingsApiConstants.*;\n \n @Component\n public class DepositAccountDataValidator {\n@@ -662,7 +633,7 @@ public void validatelinkedSavingsAccount(final SavingsAccount linkedSavingsAccou\n                     \"Linked Savings account with id:\" + linkedSavingsAccount.getId() + \" is not in active state\", \"linkAccountId\",\n                     linkedSavingsAccount.getId());\n             dataValidationErrors.add(error);\n-        } else if (savingsAccount.clientId() != linkedSavingsAccount.clientId()) {\n+        } else if (!savingsAccount.clientId().equals(linkedSavingsAccount.clientId())) {\n             final ApiParameterError error = ApiParameterError.parameterError(\n                     \"validation.msg.deposit.linked.savings.account.not.belongs.to.same.client\", \"Linked Savings account with id:\"\n                             + linkedSavingsAccount.getId() + \" is not belongs to the same client\", \"linkAccountId\",",
                "deletions": 56
            },
            {
                "sha": "71bce90b6deac4c7db9d9d2fbbf976cec8bca6ac",
                "filename": "fineract-provider/src/main/java/org/apache/fineract/portfolio/savings/data/SavingsAccountApplicationTimelineData.java",
                "blob_url": "https://github.com/apache/fineract/blob/af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1/fineract-provider/src/main/java/org/apache/fineract/portfolio/savings/data/SavingsAccountApplicationTimelineData.java",
                "raw_url": "https://github.com/apache/fineract/raw/af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1/fineract-provider/src/main/java/org/apache/fineract/portfolio/savings/data/SavingsAccountApplicationTimelineData.java",
                "status": "modified",
                "changes": 4,
                "additions": 3,
                "contents_url": "https://api.github.com/repos/apache/fineract/contents/fineract-provider/src/main/java/org/apache/fineract/portfolio/savings/data/SavingsAccountApplicationTimelineData.java?ref=af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1",
                "patch": "@@ -20,12 +20,14 @@\n \n import org.joda.time.LocalDate;\n \n+import java.io.Serializable;\n+\n /**\n  * Immutable data object represent the important time-line events of a savings\n  * account application.\n  */\n @SuppressWarnings(\"unused\")\n-public class SavingsAccountApplicationTimelineData {\n+public class SavingsAccountApplicationTimelineData implements Serializable {\n \n     private final LocalDate submittedOnDate;\n     private final String submittedByUsername;",
                "deletions": 1
            },
            {
                "sha": "88be5c7f642c77a0e86bd35c2b68a3037f85ce9a",
                "filename": "fineract-provider/src/main/java/org/apache/fineract/portfolio/savings/data/SavingsAccountChargeData.java",
                "blob_url": "https://github.com/apache/fineract/blob/af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1/fineract-provider/src/main/java/org/apache/fineract/portfolio/savings/data/SavingsAccountChargeData.java",
                "raw_url": "https://github.com/apache/fineract/raw/af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1/fineract-provider/src/main/java/org/apache/fineract/portfolio/savings/data/SavingsAccountChargeData.java",
                "status": "modified",
                "changes": 9,
                "additions": 5,
                "contents_url": "https://api.github.com/repos/apache/fineract/contents/fineract-provider/src/main/java/org/apache/fineract/portfolio/savings/data/SavingsAccountChargeData.java?ref=af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1",
                "patch": "@@ -18,21 +18,22 @@\n  */\n package org.apache.fineract.portfolio.savings.data;\n \n-import java.math.BigDecimal;\n-import java.util.Collection;\n-\n import org.apache.fineract.infrastructure.core.data.EnumOptionData;\n import org.apache.fineract.organisation.monetary.data.CurrencyData;\n import org.apache.fineract.portfolio.charge.data.ChargeData;\n import org.apache.fineract.portfolio.charge.domain.ChargeTimeType;\n import org.joda.time.LocalDate;\n import org.joda.time.MonthDay;\n \n+import java.io.Serializable;\n+import java.math.BigDecimal;\n+import java.util.Collection;\n+\n /**\n  * Immutable data object for Savings Account charge data.\n  */\n @SuppressWarnings(\"unused\")\n-public class SavingsAccountChargeData {\n+public class SavingsAccountChargeData implements Serializable {\n \n     private final Long id;\n ",
                "deletions": 4
            },
            {
                "sha": "4396e3ed90df95393d3e74aa60b42678bca75ada",
                "filename": "fineract-provider/src/main/java/org/apache/fineract/portfolio/savings/data/SavingsAccountData.java",
                "blob_url": "https://github.com/apache/fineract/blob/af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1/fineract-provider/src/main/java/org/apache/fineract/portfolio/savings/data/SavingsAccountData.java",
                "raw_url": "https://github.com/apache/fineract/raw/af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1/fineract-provider/src/main/java/org/apache/fineract/portfolio/savings/data/SavingsAccountData.java",
                "status": "modified",
                "changes": 10,
                "additions": 5,
                "contents_url": "https://api.github.com/repos/apache/fineract/contents/fineract-provider/src/main/java/org/apache/fineract/portfolio/savings/data/SavingsAccountData.java?ref=af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1",
                "patch": "@@ -18,12 +18,8 @@\n  */\n package org.apache.fineract.portfolio.savings.data;\n \n-import java.math.BigDecimal;\n-import java.util.*;\n-\n import org.apache.commons.lang3.builder.EqualsBuilder;\n import org.apache.commons.lang3.builder.HashCodeBuilder;\n-import org.apache.fineract.infrastructure.bulkimport.constants.TemplatePopulateImportConstants;\n import org.apache.fineract.infrastructure.core.data.EnumOptionData;\n import org.apache.fineract.infrastructure.dataqueries.data.DatatableData;\n import org.apache.fineract.organisation.monetary.data.CurrencyData;\n@@ -32,10 +28,14 @@\n import org.apache.fineract.portfolio.tax.data.TaxGroupData;\n import org.joda.time.LocalDate;\n \n+import java.io.Serializable;\n+import java.math.BigDecimal;\n+import java.util.*;\n+\n /**\n  * Immutable data object representing a savings account.\n  */\n-public class SavingsAccountData {\n+public class SavingsAccountData implements Serializable {\n \n     private final Long id;\n     private final String accountNo;",
                "deletions": 5
            },
            {
                "sha": "f9ba30709dc7fe23fc3a1671d241abd04d1f98ad",
                "filename": "fineract-provider/src/main/java/org/apache/fineract/portfolio/savings/data/SavingsAccountStatusEnumData.java",
                "blob_url": "https://github.com/apache/fineract/blob/af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1/fineract-provider/src/main/java/org/apache/fineract/portfolio/savings/data/SavingsAccountStatusEnumData.java",
                "raw_url": "https://github.com/apache/fineract/raw/af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1/fineract-provider/src/main/java/org/apache/fineract/portfolio/savings/data/SavingsAccountStatusEnumData.java",
                "status": "modified",
                "changes": 4,
                "additions": 3,
                "contents_url": "https://api.github.com/repos/apache/fineract/contents/fineract-provider/src/main/java/org/apache/fineract/portfolio/savings/data/SavingsAccountStatusEnumData.java?ref=af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1",
                "patch": "@@ -18,10 +18,12 @@\n  */\n package org.apache.fineract.portfolio.savings.data;\n \n+import java.io.Serializable;\n+\n /**\n  * Immutable data object represent savings account status enumerations.\n  */\n-public class SavingsAccountStatusEnumData {\n+public class SavingsAccountStatusEnumData implements Serializable {\n \n     private final Long id;\n     @SuppressWarnings(\"unused\")",
                "deletions": 1
            },
            {
                "sha": "e0e929dbfeb18055b6ee47a20eacdce6032aec11",
                "filename": "fineract-provider/src/main/java/org/apache/fineract/portfolio/savings/data/SavingsAccountSubStatusEnumData.java",
                "blob_url": "https://github.com/apache/fineract/blob/af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1/fineract-provider/src/main/java/org/apache/fineract/portfolio/savings/data/SavingsAccountSubStatusEnumData.java",
                "raw_url": "https://github.com/apache/fineract/raw/af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1/fineract-provider/src/main/java/org/apache/fineract/portfolio/savings/data/SavingsAccountSubStatusEnumData.java",
                "status": "modified",
                "changes": 4,
                "additions": 3,
                "contents_url": "https://api.github.com/repos/apache/fineract/contents/fineract-provider/src/main/java/org/apache/fineract/portfolio/savings/data/SavingsAccountSubStatusEnumData.java?ref=af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1",
                "patch": "@@ -18,10 +18,12 @@\n  */\n package org.apache.fineract.portfolio.savings.data;\n \n+import java.io.Serializable;\n+\n /**\n  * Immutable data object represent savings account sub-status enumerations.\n  */\n-public class SavingsAccountSubStatusEnumData {\n+public class SavingsAccountSubStatusEnumData implements Serializable {\n \n     private final Long id;\n     @SuppressWarnings(\"unused\")",
                "deletions": 1
            },
            {
                "sha": "1805b8789b9b001d2f986648b8948a675e553e2f",
                "filename": "fineract-provider/src/main/java/org/apache/fineract/portfolio/savings/data/SavingsAccountSummaryData.java",
                "blob_url": "https://github.com/apache/fineract/blob/af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1/fineract-provider/src/main/java/org/apache/fineract/portfolio/savings/data/SavingsAccountSummaryData.java",
                "raw_url": "https://github.com/apache/fineract/raw/af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1/fineract-provider/src/main/java/org/apache/fineract/portfolio/savings/data/SavingsAccountSummaryData.java",
                "status": "modified",
                "changes": 7,
                "additions": 4,
                "contents_url": "https://api.github.com/repos/apache/fineract/contents/fineract-provider/src/main/java/org/apache/fineract/portfolio/savings/data/SavingsAccountSummaryData.java?ref=af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1",
                "patch": "@@ -18,16 +18,17 @@\n  */\n package org.apache.fineract.portfolio.savings.data;\n \n-import java.math.BigDecimal;\n-\n import org.apache.fineract.organisation.monetary.data.CurrencyData;\n import org.joda.time.LocalDate;\n \n+import java.io.Serializable;\n+import java.math.BigDecimal;\n+\n /**\n  * Immutable data object representing Savings Account summary information.\n  */\n @SuppressWarnings(\"unused\")\n-public class SavingsAccountSummaryData {\n+public class SavingsAccountSummaryData implements Serializable {\n \n     private final CurrencyData currency;\n     private final BigDecimal totalDeposits;",
                "deletions": 3
            },
            {
                "sha": "c3210bc1c1d91e01b19f094770c57e62c52c4d1a",
                "filename": "fineract-provider/src/main/java/org/apache/fineract/portfolio/savings/data/SavingsAccountTransactionData.java",
                "blob_url": "https://github.com/apache/fineract/blob/af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1/fineract-provider/src/main/java/org/apache/fineract/portfolio/savings/data/SavingsAccountTransactionData.java",
                "raw_url": "https://github.com/apache/fineract/raw/af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1/fineract-provider/src/main/java/org/apache/fineract/portfolio/savings/data/SavingsAccountTransactionData.java",
                "status": "modified",
                "changes": 9,
                "additions": 5,
                "contents_url": "https://api.github.com/repos/apache/fineract/contents/fineract-provider/src/main/java/org/apache/fineract/portfolio/savings/data/SavingsAccountTransactionData.java?ref=af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1",
                "patch": "@@ -18,9 +18,6 @@\n  */\n package org.apache.fineract.portfolio.savings.data;\n \n-import java.math.BigDecimal;\n-import java.util.Collection;\n-\n import org.apache.fineract.infrastructure.codes.data.CodeValueData;\n import org.apache.fineract.infrastructure.core.service.DateUtils;\n import org.apache.fineract.organisation.monetary.data.CurrencyData;\n@@ -31,11 +28,15 @@\n import org.apache.fineract.portfolio.savings.service.SavingsEnumerations;\n import org.joda.time.LocalDate;\n \n+import java.io.Serializable;\n+import java.math.BigDecimal;\n+import java.util.Collection;\n+\n /**\n  * Immutable data object representing a savings account transaction.\n  */\n @SuppressWarnings(\"unused\")\n-public class SavingsAccountTransactionData {\n+public class SavingsAccountTransactionData implements Serializable {\n \n     private final Long id;\n     private final SavingsAccountTransactionEnumData transactionType;",
                "deletions": 4
            },
            {
                "sha": "525c29e115435ced71cadeccbaf467b69bb0864b",
                "filename": "fineract-provider/src/main/java/org/apache/fineract/portfolio/savings/data/SavingsAccountTransactionEnumData.java",
                "blob_url": "https://github.com/apache/fineract/blob/af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1/fineract-provider/src/main/java/org/apache/fineract/portfolio/savings/data/SavingsAccountTransactionEnumData.java",
                "raw_url": "https://github.com/apache/fineract/raw/af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1/fineract-provider/src/main/java/org/apache/fineract/portfolio/savings/data/SavingsAccountTransactionEnumData.java",
                "status": "modified",
                "changes": 4,
                "additions": 3,
                "contents_url": "https://api.github.com/repos/apache/fineract/contents/fineract-provider/src/main/java/org/apache/fineract/portfolio/savings/data/SavingsAccountTransactionEnumData.java?ref=af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1",
                "patch": "@@ -20,11 +20,13 @@\n \n import org.apache.fineract.portfolio.savings.SavingsAccountTransactionType;\n \n+import java.io.Serializable;\n+\n /**\n  * Immutable data object represent savings account transaction type\n  * enumerations.\n  */\n-public class SavingsAccountTransactionEnumData {\n+public class SavingsAccountTransactionEnumData implements Serializable {\n \n     private final Long id;\n     private final String code;",
                "deletions": 1
            },
            {
                "sha": "f4c8308708f9fe54c481f0a05ec08356f038edf9",
                "filename": "fineract-provider/src/main/java/org/apache/fineract/portfolio/savings/data/SavingsProductData.java",
                "blob_url": "https://github.com/apache/fineract/blob/af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1/fineract-provider/src/main/java/org/apache/fineract/portfolio/savings/data/SavingsProductData.java",
                "raw_url": "https://github.com/apache/fineract/raw/af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1/fineract-provider/src/main/java/org/apache/fineract/portfolio/savings/data/SavingsProductData.java",
                "status": "modified",
                "changes": 13,
                "additions": 7,
                "contents_url": "https://api.github.com/repos/apache/fineract/contents/fineract-provider/src/main/java/org/apache/fineract/portfolio/savings/data/SavingsProductData.java?ref=af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1",
                "patch": "@@ -18,11 +18,6 @@\n  */\n package org.apache.fineract.portfolio.savings.data;\n \n-import java.math.BigDecimal;\n-import java.util.Collection;\n-import java.util.List;\n-import java.util.Map;\n-\n import org.apache.fineract.accounting.common.AccountingRuleType;\n import org.apache.fineract.accounting.glaccount.data.GLAccountData;\n import org.apache.fineract.accounting.producttoaccountmapping.data.ChargeToGLAccountMapper;\n@@ -33,10 +28,16 @@\n import org.apache.fineract.portfolio.paymenttype.data.PaymentTypeData;\n import org.apache.fineract.portfolio.tax.data.TaxGroupData;\n \n+import java.io.Serializable;\n+import java.math.BigDecimal;\n+import java.util.Collection;\n+import java.util.List;\n+import java.util.Map;\n+\n /**\n  * Immutable data object represent a savings product.\n  */\n-public class SavingsProductData {\n+public class SavingsProductData implements Serializable {\n \n     private final Long id;\n     private final String name;",
                "deletions": 6
            },
            {
                "sha": "fd578f20c8e51c8042331cb9c5c097a85f6c8cee",
                "filename": "fineract-provider/src/main/java/org/apache/fineract/portfolio/savings/domain/SavingsAccountCharge.java",
                "blob_url": "https://github.com/apache/fineract/blob/af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1/fineract-provider/src/main/java/org/apache/fineract/portfolio/savings/domain/SavingsAccountCharge.java",
                "raw_url": "https://github.com/apache/fineract/raw/af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1/fineract-provider/src/main/java/org/apache/fineract/portfolio/savings/domain/SavingsAccountCharge.java",
                "status": "modified",
                "changes": 80,
                "additions": 42,
                "contents_url": "https://api.github.com/repos/apache/fineract/contents/fineract-provider/src/main/java/org/apache/fineract/portfolio/savings/domain/SavingsAccountCharge.java?ref=af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1",
                "patch": "@@ -18,33 +18,8 @@\n  */\n package org.apache.fineract.portfolio.savings.domain;\n \n-import static org.apache.fineract.portfolio.savings.SavingsApiConstants.amountParamName;\n-import static org.apache.fineract.portfolio.savings.SavingsApiConstants.dateFormatParamName;\n-import static org.apache.fineract.portfolio.savings.SavingsApiConstants.dueAsOfDateParamName;\n-import static org.apache.fineract.portfolio.savings.SavingsApiConstants.feeIntervalParamName;\n-import static org.apache.fineract.portfolio.savings.SavingsApiConstants.feeOnMonthDayParamName;\n-import static org.apache.fineract.portfolio.savings.SavingsApiConstants.localeParamName;\n-\n-import java.math.BigDecimal;\n-import java.math.MathContext;\n-import java.util.Date;\n-import java.util.LinkedHashMap;\n-import java.util.Map;\n-\n-import javax.persistence.Column;\n-import javax.persistence.Entity;\n-import javax.persistence.JoinColumn;\n-import javax.persistence.ManyToOne;\n-import javax.persistence.Table;\n-import javax.persistence.Temporal;\n-import javax.persistence.TemporalType;\n-import javax.validation.constraints.NotNull;\n-\n-import org.apache.commons.lang.builder.EqualsBuilder;\n-import org.apache.commons.lang.builder.HashCodeBuilder;\n import org.apache.fineract.infrastructure.core.api.JsonCommand;\n import org.apache.fineract.infrastructure.core.domain.AbstractPersistableCustom;\n-import org.apache.fineract.organisation.monetary.domain.ApplicationCurrency;\n import org.apache.fineract.organisation.monetary.domain.MonetaryCurrency;\n import org.apache.fineract.organisation.monetary.domain.Money;\n import org.apache.fineract.organisation.monetary.domain.MoneyHelper;\n@@ -55,6 +30,17 @@\n import org.joda.time.LocalDate;\n import org.joda.time.MonthDay;\n \n+import javax.persistence.*;\n+import javax.validation.constraints.NotNull;\n+import java.math.BigDecimal;\n+import java.math.MathContext;\n+import java.util.Date;\n+import java.util.LinkedHashMap;\n+import java.util.Map;\n+import java.util.Objects;\n+\n+import static org.apache.fineract.portfolio.savings.SavingsApiConstants.*;\n+\n /**\n  * @author dv6\n  * \n@@ -451,14 +437,14 @@ public void update(final BigDecimal amount, final LocalDate dueDate, final Month\n             final MonthDay monthDay = command.extractMonthDayNamed(feeOnMonthDayParamName);\n             final String actualValueEntered = command.stringValueOfParameterNamed(feeOnMonthDayParamName);\n             final Integer dayOfMonthValue = monthDay.getDayOfMonth();\n-            if (this.feeOnDay != dayOfMonthValue) {\n+            if (!this.feeOnDay.equals(dayOfMonthValue)) {\n                 actualChanges.put(feeOnMonthDayParamName, actualValueEntered);\n                 actualChanges.put(localeParamName, localeAsInput);\n                 this.feeOnDay = dayOfMonthValue;\n             }\n \n             final Integer monthOfYear = monthDay.getMonthOfYear();\n-            if (this.feeOnMonth != monthOfYear) {\n+            if (!this.feeOnMonth.equals(monthOfYear)) {\n                 actualChanges.put(feeOnMonthDayParamName, actualValueEntered);\n                 actualChanges.put(localeParamName, localeAsInput);\n                 this.feeOnMonth = monthOfYear;\n@@ -693,17 +679,35 @@ public boolean hasCurrencyCodeOf(final String matchingCurrencyCode) {\n     }\n \n     @Override\n-    public boolean equals(final Object obj) {\n-        if (obj == null) { return false; }\n-        if (obj == this) { return true; }\n-        if (obj.getClass() != getClass()) { return false; }\n-        final SavingsAccountCharge rhs = (SavingsAccountCharge) obj;\n-        return new EqualsBuilder().appendSuper(super.equals(obj)) //\n-                .append(getId(), rhs.getId()) //\n-                .append(this.charge.getId(), rhs.charge.getId()) //\n-                .append(this.amount, rhs.amount) //\n-                .append(getDueLocalDate(), rhs.getDueLocalDate()) //\n-                .isEquals();\n+    public boolean equals(Object o) {\n+        if (this == o) return true;\n+        if (!(o instanceof SavingsAccountCharge)) return false;\n+        SavingsAccountCharge that = (SavingsAccountCharge) o;\n+        return Objects.equals(penaltyCharge, that.penaltyCharge) &&\n+        \t   Objects.equals(paid, that.paid) &&\n+        \t   Objects.equals(waived, that.waived) &&\n+        \t   Objects.equals(status, that.status) &&\n+        \t   Objects.equals(savingsAccount, that.savingsAccount) &&\n+        \t   Objects.equals(charge, that.charge) &&\n+        \t   Objects.equals(chargeTime, that.chargeTime) &&\n+        \t   Objects.equals(dueDate, that.dueDate) &&\n+        \t   Objects.equals(feeOnMonth, that.feeOnMonth) &&\n+        \t   Objects.equals(feeOnDay, that.feeOnDay) &&\n+        \t   Objects.equals(feeInterval, that.feeInterval) &&\n+        \t   Objects.equals(chargeCalculation, that.chargeCalculation) &&\n+        \t   Objects.equals(percentage, that.percentage) &&\n+        \t   Objects.equals(amountPercentageAppliedTo, that.amountPercentageAppliedTo) &&\n+        \t   Objects.equals(amount, that.amount) &&\n+        \t   Objects.equals(amountPaid, that.amountPaid) &&\n+        \t   Objects.equals(amountWaived, that.amountWaived) &&\n+        \t   Objects.equals(amountWrittenOff, that.amountWrittenOff) &&\n+        \t   Objects.equals(amountOutstanding, that.amountOutstanding) &&\n+        \t   Objects.equals(inactivationDate, that.inactivationDate);\n+    }\n+\n+    @Override\n+    public int hashCode() {\n+        return Objects.hash(savingsAccount, charge, chargeTime, dueDate, feeOnMonth, feeOnDay, feeInterval, chargeCalculation, percentage, amountPercentageAppliedTo, amount, amountPaid, amountWaived, amountWrittenOff, amountOutstanding, penaltyCharge, paid, waived, status, inactivationDate);\n     }\n \n     public BigDecimal calculateWithdralFeeAmount(@NotNull BigDecimal transactionAmount) {",
                "deletions": 38
            },
            {
                "sha": "709a4681d3bc041a49876c73e3750da89bfebd60",
                "filename": "fineract-provider/src/main/java/org/apache/fineract/portfolio/savings/service/DepositApplicationProcessWritePlatformServiceJpaRepositoryImpl.java",
                "blob_url": "https://github.com/apache/fineract/blob/af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1/fineract-provider/src/main/java/org/apache/fineract/portfolio/savings/service/DepositApplicationProcessWritePlatformServiceJpaRepositoryImpl.java",
                "raw_url": "https://github.com/apache/fineract/raw/af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1/fineract-provider/src/main/java/org/apache/fineract/portfolio/savings/service/DepositApplicationProcessWritePlatformServiceJpaRepositoryImpl.java",
                "status": "modified",
                "changes": 42,
                "additions": 11,
                "contents_url": "https://api.github.com/repos/apache/fineract/contents/fineract-provider/src/main/java/org/apache/fineract/portfolio/savings/service/DepositApplicationProcessWritePlatformServiceJpaRepositoryImpl.java?ref=af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1",
                "patch": "@@ -18,16 +18,6 @@\n  */\n package org.apache.fineract.portfolio.savings.service;\n \n-import static org.apache.fineract.portfolio.savings.DepositsApiConstants.isCalendarInheritedParamName;\n-import static org.apache.fineract.portfolio.savings.DepositsApiConstants.recurringFrequencyParamName;\n-import static org.apache.fineract.portfolio.savings.DepositsApiConstants.recurringFrequencyTypeParamName;\n-import static org.apache.fineract.portfolio.savings.DepositsApiConstants.transferInterestToSavingsParamName;\n-\n-import java.math.MathContext;\n-import java.util.*;\n-\n-import javax.persistence.PersistenceException;\n-\n import org.apache.commons.lang.StringUtils;\n import org.apache.commons.lang.exception.ExceptionUtils;\n import org.apache.fineract.infrastructure.accountnumberformat.domain.AccountNumberFormat;\n@@ -51,11 +41,7 @@\n import org.apache.fineract.portfolio.account.domain.AccountAssociations;\n import org.apache.fineract.portfolio.account.domain.AccountAssociationsRepository;\n import org.apache.fineract.portfolio.calendar.domain.Calendar;\n-import org.apache.fineract.portfolio.calendar.domain.CalendarEntityType;\n-import org.apache.fineract.portfolio.calendar.domain.CalendarFrequencyType;\n-import org.apache.fineract.portfolio.calendar.domain.CalendarInstance;\n-import org.apache.fineract.portfolio.calendar.domain.CalendarInstanceRepository;\n-import org.apache.fineract.portfolio.calendar.domain.CalendarType;\n+import org.apache.fineract.portfolio.calendar.domain.*;\n import org.apache.fineract.portfolio.calendar.service.CalendarUtils;\n import org.apache.fineract.portfolio.client.domain.AccountNumberGenerator;\n import org.apache.fineract.portfolio.client.domain.Client;\n@@ -77,17 +63,7 @@\n import org.apache.fineract.portfolio.savings.DepositsApiConstants;\n import org.apache.fineract.portfolio.savings.SavingsApiConstants;\n import org.apache.fineract.portfolio.savings.data.DepositAccountDataValidator;\n-import org.apache.fineract.portfolio.savings.domain.DepositAccountAssembler;\n-import org.apache.fineract.portfolio.savings.domain.FixedDepositAccount;\n-import org.apache.fineract.portfolio.savings.domain.FixedDepositAccountRepository;\n-import org.apache.fineract.portfolio.savings.domain.RecurringDepositAccount;\n-import org.apache.fineract.portfolio.savings.domain.RecurringDepositAccountRepository;\n-import org.apache.fineract.portfolio.savings.domain.SavingsAccount;\n-import org.apache.fineract.portfolio.savings.domain.SavingsAccountCharge;\n-import org.apache.fineract.portfolio.savings.domain.SavingsAccountChargeAssembler;\n-import org.apache.fineract.portfolio.savings.domain.SavingsAccountRepositoryWrapper;\n-import org.apache.fineract.portfolio.savings.domain.SavingsProduct;\n-import org.apache.fineract.portfolio.savings.domain.SavingsProductRepository;\n+import org.apache.fineract.portfolio.savings.domain.*;\n import org.apache.fineract.portfolio.savings.exception.SavingsProductNotFoundException;\n import org.apache.fineract.useradministration.domain.AppUser;\n import org.joda.time.LocalDate;\n@@ -97,8 +73,12 @@\n import org.springframework.dao.DataAccessException;\n import org.springframework.stereotype.Service;\n import org.springframework.transaction.annotation.Transactional;\n-import org.apache.fineract.portfolio.common.BusinessEventNotificationConstants.BUSINESS_ENTITY;\n-import org.apache.fineract.portfolio.common.BusinessEventNotificationConstants.BUSINESS_EVENTS;\n+\n+import javax.persistence.PersistenceException;\n+import java.math.MathContext;\n+import java.util.*;\n+\n+import static org.apache.fineract.portfolio.savings.DepositsApiConstants.*;\n \n @Service\n public class DepositApplicationProcessWritePlatformServiceJpaRepositoryImpl implements DepositApplicationProcessWritePlatformService {\n@@ -429,7 +409,7 @@ public CommandProcessingResult modifyFDApplication(final Long accountId, final J\n                     isModified = true;\n                 } else {\n                     final SavingsAccount savingsAccount = accountAssociations.linkedSavingsAccount();\n-                    if (savingsAccount == null || savingsAccount.getId() != savingsAccountId) {\n+                    if (savingsAccount == null || !savingsAccount.getId().equals(savingsAccountId)) {\n                         isModified = true;\n                     }\n                 }\n@@ -460,11 +440,11 @@ public CommandProcessingResult modifyFDApplication(final Long accountId, final J\n                     .build();\n         } catch (final DataAccessException dve) {\n             handleDataIntegrityIssues(command, dve.getMostSpecificCause(), dve);\n-            return new CommandProcessingResult(Long.valueOf(-1));\n+            return new CommandProcessingResult((long) -1);\n         }catch (final PersistenceException dve) {\n         \tThrowable throwable = ExceptionUtils.getRootCause(dve.getCause()) ;\n         \thandleDataIntegrityIssues(command, throwable, dve);\n-        \treturn new CommandProcessingResult(Long.valueOf(-1));\n+        \treturn new CommandProcessingResult((long) -1);\n         }\n     }\n ",
                "deletions": 31
            },
            {
                "sha": "93bc379b95df50678e6f10ee504d7c7b14dd688b",
                "filename": "fineract-provider/src/main/java/org/apache/fineract/portfolio/self/account/service/SelfBeneficiariesTPTWritePlatformServiceImpl.java",
                "blob_url": "https://github.com/apache/fineract/blob/af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1/fineract-provider/src/main/java/org/apache/fineract/portfolio/self/account/service/SelfBeneficiariesTPTWritePlatformServiceImpl.java",
                "raw_url": "https://github.com/apache/fineract/raw/af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1/fineract-provider/src/main/java/org/apache/fineract/portfolio/self/account/service/SelfBeneficiariesTPTWritePlatformServiceImpl.java",
                "status": "modified",
                "changes": 2,
                "additions": 1,
                "contents_url": "https://api.github.com/repos/apache/fineract/contents/fineract-provider/src/main/java/org/apache/fineract/portfolio/self/account/service/SelfBeneficiariesTPTWritePlatformServiceImpl.java?ref=af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1",
                "patch": "@@ -94,7 +94,7 @@ public CommandProcessingResult add(JsonCommand command) {\n \t\tLong officeId = null;\n \n \t\tboolean validAccountDetails = true;\n-\t\tif (accountType.equals(PortfolioAccountType.LOAN)) {\n+\t\tif (accountType.equals(PortfolioAccountType.LOAN.getValue())) {\n \t\t\tLoan loan = this.loanRepositoryWrapper.findNonClosedLoanByAccountNumber(accountNumber);\n \t\t\tif (loan != null && loan.getClientId() != null\n \t\t\t\t\t&& loan.getOffice().getName().equals(officeName)) {",
                "deletions": 1
            },
            {
                "sha": "c773f8a39024fdf3fcd15c7de079814dbfde08f6",
                "filename": "fineract-provider/src/main/java/org/apache/fineract/portfolio/self/loanaccount/api/SelfLoansApiResource.java",
                "blob_url": "https://github.com/apache/fineract/blob/af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1/fineract-provider/src/main/java/org/apache/fineract/portfolio/self/loanaccount/api/SelfLoansApiResource.java",
                "raw_url": "https://github.com/apache/fineract/raw/af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1/fineract-provider/src/main/java/org/apache/fineract/portfolio/self/loanaccount/api/SelfLoansApiResource.java",
                "status": "modified",
                "changes": 2,
                "additions": 1,
                "contents_url": "https://api.github.com/repos/apache/fineract/contents/fineract-provider/src/main/java/org/apache/fineract/portfolio/self/loanaccount/api/SelfLoansApiResource.java?ref=af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1",
                "patch": "@@ -141,7 +141,7 @@ public String retrieveLoanCharge(@PathParam(\"loanId\") @ApiParam(value = \"loanId\"\n \n \t\tvalidateAppuserLoanMapping(loanId);\n \n-\t\treturn this.retrieveLoanCharge(loanId, loanChargeId, uriInfo);\n+\t\treturn this.loanChargesApiResource.retrieveLoanCharge(loanId, loanChargeId, uriInfo);\n \t}\n \n     @GET",
                "deletions": 1
            },
            {
                "sha": "133e54f2b4c6089694dad38c2a979c5775f819fe",
                "filename": "fineract-provider/src/main/java/org/apache/fineract/portfolio/self/loanaccount/data/SelfLoansDataValidator.java",
                "blob_url": "https://github.com/apache/fineract/blob/af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1/fineract-provider/src/main/java/org/apache/fineract/portfolio/self/loanaccount/data/SelfLoansDataValidator.java",
                "raw_url": "https://github.com/apache/fineract/raw/af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1/fineract-provider/src/main/java/org/apache/fineract/portfolio/self/loanaccount/data/SelfLoansDataValidator.java",
                "status": "modified",
                "changes": 8,
                "additions": 8,
                "contents_url": "https://api.github.com/repos/apache/fineract/contents/fineract-provider/src/main/java/org/apache/fineract/portfolio/self/loanaccount/data/SelfLoansDataValidator.java?ref=af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1",
                "patch": "@@ -40,6 +40,8 @@\n \n import com.google.gson.JsonElement;\n \n+import net.sf.ehcache.util.FindBugsSuppressWarnings;\n+\n @Component\n public class SelfLoansDataValidator {\n \tprivate static final Set<String> allowedAssociationParameters = new HashSet<>(\n@@ -83,6 +85,9 @@ public void validateRetrieveTransaction(UriInfo uriInfo) {\n \n \t}\n \t\n+\t// TODO fix this!\n+\t@FindBugsSuppressWarnings(\"EC_UNRELATED_TYPES\")\n+\t// See review here: https://github.com/apache/fineract/pull/670\n \tpublic HashMap<String, Object> validateLoanApplication(final String json){\n         if (StringUtils.isBlank(json)) { throw new InvalidJsonException(); }\n \n@@ -108,6 +113,9 @@ public void validateRetrieveTransaction(UriInfo uriInfo) {\n \n \t}\n \n+\t// TODO fix this!\n+\t@FindBugsSuppressWarnings(\"EC_UNRELATED_TYPES\")\n+\t// See review here: https://github.com/apache/fineract/pull/670/files/0409af3903d350afe43ef4837e4d915ccbe14285#r357920937\n \tpublic HashMap<String, Object> validateModifyLoanApplication(final String json) {\n         final List<ApiParameterError> dataValidationErrors = new ArrayList<>();\n         final DataValidatorBuilder baseDataValidator = new DataValidatorBuilder(dataValidationErrors).resource(\"loan\");",
                "deletions": 0
            },
            {
                "sha": "0c9a7c312f5554763fcaa43f2031ab2448448055",
                "filename": "fineract-provider/src/main/java/org/apache/fineract/portfolio/self/registration/SelfServiceApiConstants.java",
                "blob_url": "https://github.com/apache/fineract/blob/af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1/fineract-provider/src/main/java/org/apache/fineract/portfolio/self/registration/SelfServiceApiConstants.java",
                "raw_url": "https://github.com/apache/fineract/raw/af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1/fineract-provider/src/main/java/org/apache/fineract/portfolio/self/registration/SelfServiceApiConstants.java",
                "status": "modified",
                "changes": 16,
                "additions": 9,
                "contents_url": "https://api.github.com/repos/apache/fineract/contents/fineract-provider/src/main/java/org/apache/fineract/portfolio/self/registration/SelfServiceApiConstants.java?ref=af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1",
                "patch": "@@ -19,6 +19,7 @@\n package org.apache.fineract.portfolio.self.registration;\n \n import java.util.Arrays;\n+import java.util.Collections;\n import java.util.HashSet;\n import java.util.Set;\n \n@@ -37,13 +38,14 @@\n     public static final String mobileModeParamName = \"mobile\";\n     public static final String requestIdParamName = \"requestId\";\n     public static final String createRequestSuccessMessage = \"Self service request created.\";\n-    public static final Set<String> REGISTRATION_REQUEST_DATA_PARAMETERS = new HashSet<>(Arrays.asList(usernameParamName,\n-            accountNumberParamName, passwordParamName, firstNameParamName, mobileNumberParamName, lastNameParamName, emailParamName,\n-            authenticationModeParamName));\n-    public static final Set<String> CREATE_USER_REQUEST_DATA_PARAMETERS = new HashSet<>(Arrays.asList(requestIdParamName,\n-            authenticationTokenParamName));\n-    public static final Object[] SUPPORTED_AUTHENTICATION_MODE_PARAMETERS = new Object[] {emailModeParamName,\n-            mobileModeParamName};\n+    public static final Set<String> REGISTRATION_REQUEST_DATA_PARAMETERS =\n+            Collections.unmodifiableSet(new HashSet<>(Arrays.asList(usernameParamName, accountNumberParamName,\n+                    passwordParamName, firstNameParamName, mobileNumberParamName, lastNameParamName, emailParamName,\n+                    authenticationModeParamName)));\n+    public static final Set<String> CREATE_USER_REQUEST_DATA_PARAMETERS =\n+            Collections.unmodifiableSet(new HashSet<>(Arrays.asList(requestIdParamName,\n+                    authenticationTokenParamName)));\n+    public static final Object[] SUPPORTED_AUTHENTICATION_MODE_PARAMETERS = new Object[] {emailModeParamName, mobileModeParamName};\n     public static final String SELF_SERVICE_USER_ROLE = \"Self Service User\";\n     \n }",
                "deletions": 7
            },
            {
                "sha": "8c42ec135d55ae04ca8103ba77810acff4b6bae3",
                "filename": "fineract-provider/src/main/java/org/apache/fineract/portfolio/shareaccounts/data/ShareAccountApplicationTimelineData.java",
                "blob_url": "https://github.com/apache/fineract/blob/af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1/fineract-provider/src/main/java/org/apache/fineract/portfolio/shareaccounts/data/ShareAccountApplicationTimelineData.java",
                "raw_url": "https://github.com/apache/fineract/raw/af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1/fineract-provider/src/main/java/org/apache/fineract/portfolio/shareaccounts/data/ShareAccountApplicationTimelineData.java",
                "status": "modified",
                "changes": 4,
                "additions": 3,
                "contents_url": "https://api.github.com/repos/apache/fineract/contents/fineract-provider/src/main/java/org/apache/fineract/portfolio/shareaccounts/data/ShareAccountApplicationTimelineData.java?ref=af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1",
                "patch": "@@ -20,8 +20,10 @@\n \n import org.joda.time.LocalDate;\n \n+import java.io.Serializable;\n+\n @SuppressWarnings(\"unused\")\n-public class ShareAccountApplicationTimelineData {\n+public class ShareAccountApplicationTimelineData implements Serializable {\n \n \tprivate final LocalDate submittedOnDate;\n     private final String submittedByUsername;",
                "deletions": 1
            },
            {
                "sha": "ea4eea85cea06ca0eeeab01f98cf5f976afe22f1",
                "filename": "fineract-provider/src/main/java/org/apache/fineract/portfolio/shareaccounts/data/ShareAccountChargeData.java",
                "blob_url": "https://github.com/apache/fineract/blob/af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1/fineract-provider/src/main/java/org/apache/fineract/portfolio/shareaccounts/data/ShareAccountChargeData.java",
                "raw_url": "https://github.com/apache/fineract/raw/af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1/fineract-provider/src/main/java/org/apache/fineract/portfolio/shareaccounts/data/ShareAccountChargeData.java",
                "status": "modified",
                "changes": 12,
                "additions": 5,
                "contents_url": "https://api.github.com/repos/apache/fineract/contents/fineract-provider/src/main/java/org/apache/fineract/portfolio/shareaccounts/data/ShareAccountChargeData.java?ref=af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1",
                "patch": "@@ -18,18 +18,16 @@\n  */\n package org.apache.fineract.portfolio.shareaccounts.data;\n \n-import java.math.BigDecimal;\n-import java.util.Collection;\n-\n import org.apache.fineract.infrastructure.core.data.EnumOptionData;\n import org.apache.fineract.organisation.monetary.data.CurrencyData;\n import org.apache.fineract.portfolio.charge.data.ChargeData;\n-import org.apache.fineract.portfolio.charge.domain.ChargeCalculationType;\n-import org.joda.time.LocalDate;\n-import org.joda.time.MonthDay;\n+\n+import java.io.Serializable;\n+import java.math.BigDecimal;\n+import java.util.Collection;\n \n @SuppressWarnings(\"unused\")\n-public class ShareAccountChargeData {\n+public class ShareAccountChargeData implements Serializable {\n \n     private final Long id;\n ",
                "deletions": 7
            },
            {
                "sha": "5ce3af970059411efe0d72882a2c116408370e68",
                "filename": "fineract-provider/src/main/java/org/apache/fineract/portfolio/shareaccounts/data/ShareAccountData.java",
                "blob_url": "https://github.com/apache/fineract/blob/af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1/fineract-provider/src/main/java/org/apache/fineract/portfolio/shareaccounts/data/ShareAccountData.java",
                "raw_url": "https://github.com/apache/fineract/raw/af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1/fineract-provider/src/main/java/org/apache/fineract/portfolio/shareaccounts/data/ShareAccountData.java",
                "status": "modified",
                "changes": 12,
                "additions": 5,
                "contents_url": "https://api.github.com/repos/apache/fineract/contents/fineract-provider/src/main/java/org/apache/fineract/portfolio/shareaccounts/data/ShareAccountData.java?ref=af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1",
                "patch": "@@ -18,24 +18,22 @@\n  */\n package org.apache.fineract.portfolio.shareaccounts.data;\n \n-import java.math.BigDecimal;\n-import java.util.Collection;\n-import java.util.Date;\n-\n import org.apache.fineract.accounting.glaccount.data.GLAccountData;\n-import org.apache.fineract.infrastructure.bulkimport.constants.TemplatePopulateImportConstants;\n import org.apache.fineract.infrastructure.core.data.EnumOptionData;\n import org.apache.fineract.organisation.monetary.data.CurrencyData;\n import org.apache.fineract.portfolio.accountdetails.data.ShareAccountSummaryData;\n import org.apache.fineract.portfolio.accounts.data.AccountData;\n import org.apache.fineract.portfolio.charge.data.ChargeData;\n import org.apache.fineract.portfolio.products.data.ProductData;\n import org.apache.fineract.portfolio.savings.data.SavingsAccountData;\n-import org.apache.fineract.portfolio.shareproducts.data.ShareProductData;\n import org.joda.time.LocalDate;\n \n+import java.io.Serializable;\n+import java.math.BigDecimal;\n+import java.util.Collection;\n+\n @SuppressWarnings(\"unused\")\n-public class ShareAccountData implements AccountData {\n+public class ShareAccountData implements Serializable, AccountData {\n \n     private Long id;\n ",
                "deletions": 7
            },
            {
                "sha": "78b1bffe17896e02a9419085a39b275c8df72a82",
                "filename": "fineract-provider/src/main/java/org/apache/fineract/portfolio/shareaccounts/data/ShareAccountDividendData.java",
                "blob_url": "https://github.com/apache/fineract/blob/af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1/fineract-provider/src/main/java/org/apache/fineract/portfolio/shareaccounts/data/ShareAccountDividendData.java",
                "raw_url": "https://github.com/apache/fineract/raw/af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1/fineract-provider/src/main/java/org/apache/fineract/portfolio/shareaccounts/data/ShareAccountDividendData.java",
                "status": "modified",
                "changes": 7,
                "additions": 4,
                "contents_url": "https://api.github.com/repos/apache/fineract/contents/fineract-provider/src/main/java/org/apache/fineract/portfolio/shareaccounts/data/ShareAccountDividendData.java?ref=af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1",
                "patch": "@@ -18,13 +18,14 @@\n  */\n package org.apache.fineract.portfolio.shareaccounts.data;\n \n+import org.apache.fineract.infrastructure.core.data.EnumOptionData;\n+\n+import java.io.Serializable;\n import java.math.BigDecimal;\n import java.util.Date;\n \n-import org.apache.fineract.infrastructure.core.data.EnumOptionData;\n-\n @SuppressWarnings(\"unused\")\n-public class ShareAccountDividendData {\n+public class ShareAccountDividendData implements Serializable {\n \n     private final Long id;\n     private final Date postedDate ;",
                "deletions": 3
            },
            {
                "sha": "53d9b33c080ddfb12716f96cc8cfe0f1a5b8ec05",
                "filename": "fineract-provider/src/main/java/org/apache/fineract/portfolio/shareaccounts/data/ShareAccountStatusEnumData.java",
                "blob_url": "https://github.com/apache/fineract/blob/af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1/fineract-provider/src/main/java/org/apache/fineract/portfolio/shareaccounts/data/ShareAccountStatusEnumData.java",
                "raw_url": "https://github.com/apache/fineract/raw/af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1/fineract-provider/src/main/java/org/apache/fineract/portfolio/shareaccounts/data/ShareAccountStatusEnumData.java",
                "status": "modified",
                "changes": 4,
                "additions": 3,
                "contents_url": "https://api.github.com/repos/apache/fineract/contents/fineract-provider/src/main/java/org/apache/fineract/portfolio/shareaccounts/data/ShareAccountStatusEnumData.java?ref=af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1",
                "patch": "@@ -18,11 +18,13 @@\n  */\n package org.apache.fineract.portfolio.shareaccounts.data;\n \n+import java.io.Serializable;\n+\n /**\n  * Immutable data object represent savings account status enumerations.\n  */\n @SuppressWarnings(\"unused\")\n-public class ShareAccountStatusEnumData {\n+public class ShareAccountStatusEnumData implements Serializable {\n \n     private final Long id;\n    ",
                "deletions": 1
            },
            {
                "sha": "44976e2488ae4bf901eac05afdf770047da9246d",
                "filename": "fineract-provider/src/main/java/org/apache/fineract/portfolio/shareaccounts/data/ShareAccountTransactionData.java",
                "blob_url": "https://github.com/apache/fineract/blob/af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1/fineract-provider/src/main/java/org/apache/fineract/portfolio/shareaccounts/data/ShareAccountTransactionData.java",
                "raw_url": "https://github.com/apache/fineract/raw/af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1/fineract-provider/src/main/java/org/apache/fineract/portfolio/shareaccounts/data/ShareAccountTransactionData.java",
                "status": "modified",
                "changes": 7,
                "additions": 4,
                "contents_url": "https://api.github.com/repos/apache/fineract/contents/fineract-provider/src/main/java/org/apache/fineract/portfolio/shareaccounts/data/ShareAccountTransactionData.java?ref=af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1",
                "patch": "@@ -18,13 +18,14 @@\n  */\n package org.apache.fineract.portfolio.shareaccounts.data;\n \n-import java.math.BigDecimal;\n-\n import org.apache.fineract.infrastructure.core.data.EnumOptionData;\n import org.joda.time.LocalDate;\n \n+import java.io.Serializable;\n+import java.math.BigDecimal;\n+\n @SuppressWarnings(\"unused\")\n-public class ShareAccountTransactionData {\n+public class ShareAccountTransactionData implements Serializable {\n \n     private final Long id;\n ",
                "deletions": 3
            },
            {
                "sha": "cc8793c8c2360526603622bb52c804472a95df9e",
                "filename": "fineract-provider/src/main/java/org/apache/fineract/portfolio/shareaccounts/data/ShareAccountTransactionEnumData.java",
                "blob_url": "https://github.com/apache/fineract/blob/af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1/fineract-provider/src/main/java/org/apache/fineract/portfolio/shareaccounts/data/ShareAccountTransactionEnumData.java",
                "raw_url": "https://github.com/apache/fineract/raw/af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1/fineract-provider/src/main/java/org/apache/fineract/portfolio/shareaccounts/data/ShareAccountTransactionEnumData.java",
                "status": "modified",
                "changes": 4,
                "additions": 3,
                "contents_url": "https://api.github.com/repos/apache/fineract/contents/fineract-provider/src/main/java/org/apache/fineract/portfolio/shareaccounts/data/ShareAccountTransactionEnumData.java?ref=af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1",
                "patch": "@@ -18,7 +18,9 @@\n  */\n package org.apache.fineract.portfolio.shareaccounts.data;\n \n-public class ShareAccountTransactionEnumData {\n+import java.io.Serializable;\n+\n+public class ShareAccountTransactionEnumData implements Serializable {\n \n     private final Long id;\n     private final String code;",
                "deletions": 1
            },
            {
                "sha": "d6e6f79176d07cd09ad87feb13e73df2a234f1a5",
                "filename": "fineract-provider/src/main/java/org/apache/fineract/portfolio/shareaccounts/domain/ShareAccount.java",
                "blob_url": "https://github.com/apache/fineract/blob/af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1/fineract-provider/src/main/java/org/apache/fineract/portfolio/shareaccounts/domain/ShareAccount.java",
                "raw_url": "https://github.com/apache/fineract/raw/af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1/fineract-provider/src/main/java/org/apache/fineract/portfolio/shareaccounts/domain/ShareAccount.java",
                "status": "modified",
                "changes": 1,
                "additions": 1,
                "contents_url": "https://api.github.com/repos/apache/fineract/contents/fineract-provider/src/main/java/org/apache/fineract/portfolio/shareaccounts/domain/ShareAccount.java?ref=af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1",
                "patch": "@@ -20,6 +20,7 @@\n \n import java.util.Date;\n import java.util.HashSet;\n+import java.util.Objects;\n import java.util.Set;\n \n import javax.persistence.CascadeType;",
                "deletions": 0
            },
            {
                "sha": "52f3b0aa7d16f5adc4d5e3c4245fbfff9e4bd8d4",
                "filename": "fineract-provider/src/main/java/org/apache/fineract/portfolio/shareaccounts/domain/ShareAccountCharge.java",
                "blob_url": "https://github.com/apache/fineract/blob/af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1/fineract-provider/src/main/java/org/apache/fineract/portfolio/shareaccounts/domain/ShareAccountCharge.java",
                "raw_url": "https://github.com/apache/fineract/raw/af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1/fineract-provider/src/main/java/org/apache/fineract/portfolio/shareaccounts/domain/ShareAccountCharge.java",
                "status": "modified",
                "changes": 14,
                "additions": 1,
                "contents_url": "https://api.github.com/repos/apache/fineract/contents/fineract-provider/src/main/java/org/apache/fineract/portfolio/shareaccounts/domain/ShareAccountCharge.java?ref=af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1",
                "patch": "@@ -28,6 +28,7 @@\n import javax.persistence.Table;\n \n import org.apache.commons.lang.builder.EqualsBuilder;\n+import org.apache.commons.lang.builder.HashCodeBuilder;\n import org.apache.fineract.infrastructure.core.domain.AbstractPersistableCustom;\n import org.apache.fineract.organisation.monetary.domain.MonetaryCurrency;\n import org.apache.fineract.organisation.monetary.domain.Money;\n@@ -414,17 +415,4 @@ public BigDecimal updateChargeDetailsForAdditionalSharesRequest(final BigDecimal\n     public void setActive(boolean active) {\n         this.active = active ;\n     }\n-    \n-    @Override\n-    public boolean equals(final Object obj) {\n-        if (obj == null) { return false; }\n-        if (obj == this) { return true; }\n-        if (obj.getClass() != getClass()) { return false; }\n-        final ShareAccountCharge rhs = (ShareAccountCharge) obj;\n-        return new EqualsBuilder().appendSuper(super.equals(obj)) //\n-                .append(getId(), rhs.getId()) //\n-                .append(this.charge.getId(), rhs.charge.getId()) //\n-                .append(this.amount, rhs.amount) //\n-                .isEquals();\n-    }\n }",
                "deletions": 13
            },
            {
                "sha": "b521fdda28093ad52403924e852fa29c62777c95",
                "filename": "fineract-provider/src/main/java/org/apache/fineract/portfolio/shareaccounts/domain/ShareAccountTransaction.java",
                "blob_url": "https://github.com/apache/fineract/blob/af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1/fineract-provider/src/main/java/org/apache/fineract/portfolio/shareaccounts/domain/ShareAccountTransaction.java",
                "raw_url": "https://github.com/apache/fineract/raw/af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1/fineract-provider/src/main/java/org/apache/fineract/portfolio/shareaccounts/domain/ShareAccountTransaction.java",
                "status": "modified",
                "changes": 16,
                "additions": 3,
                "contents_url": "https://api.github.com/repos/apache/fineract/contents/fineract-provider/src/main/java/org/apache/fineract/portfolio/shareaccounts/domain/ShareAccountTransaction.java?ref=af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1",
                "patch": "@@ -18,24 +18,14 @@\n  */\n package org.apache.fineract.portfolio.shareaccounts.domain;\n \n+import org.apache.fineract.infrastructure.core.domain.AbstractPersistableCustom;\n+\n+import javax.persistence.*;\n import java.math.BigDecimal;\n import java.util.Date;\n import java.util.HashSet;\n import java.util.Set;\n \n-import javax.persistence.CascadeType;\n-import javax.persistence.Column;\n-import javax.persistence.Entity;\n-import javax.persistence.FetchType;\n-import javax.persistence.JoinColumn;\n-import javax.persistence.ManyToOne;\n-import javax.persistence.OneToMany;\n-import javax.persistence.Table;\n-import javax.persistence.Temporal;\n-import javax.persistence.TemporalType;\n-\n-import org.apache.fineract.infrastructure.core.domain.AbstractPersistableCustom;\n-\n @Entity\n @Table(name = \"m_share_account_transactions\")\n public class ShareAccountTransaction extends AbstractPersistableCustom<Long> {",
                "deletions": 13
            },
            {
                "sha": "d7ac1239d0ce37e61d7a5aa4fc992a61934b34e5",
                "filename": "fineract-provider/src/main/java/org/apache/fineract/portfolio/tax/data/TaxComponentData.java",
                "blob_url": "https://github.com/apache/fineract/blob/af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1/fineract-provider/src/main/java/org/apache/fineract/portfolio/tax/data/TaxComponentData.java",
                "raw_url": "https://github.com/apache/fineract/raw/af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1/fineract-provider/src/main/java/org/apache/fineract/portfolio/tax/data/TaxComponentData.java",
                "status": "modified",
                "changes": 3,
                "additions": 2,
                "contents_url": "https://api.github.com/repos/apache/fineract/contents/fineract-provider/src/main/java/org/apache/fineract/portfolio/tax/data/TaxComponentData.java?ref=af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1",
                "patch": "@@ -18,6 +18,7 @@\n  */\n package org.apache.fineract.portfolio.tax.data;\n \n+import java.io.Serializable;\n import java.math.BigDecimal;\n import java.util.Collection;\n import java.util.List;\n@@ -27,7 +28,7 @@\n import org.apache.fineract.infrastructure.core.data.EnumOptionData;\n import org.joda.time.LocalDate;\n \n-public class TaxComponentData {\n+public class TaxComponentData implements Serializable {\n \n     @SuppressWarnings(\"unused\")\n     private final Long id;",
                "deletions": 1
            },
            {
                "sha": "bde0928d6958fc21997b9b7b168d58ac080f000a",
                "filename": "fineract-provider/src/main/java/org/apache/fineract/portfolio/tax/data/TaxComponentHistoryData.java",
                "blob_url": "https://github.com/apache/fineract/blob/af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1/fineract-provider/src/main/java/org/apache/fineract/portfolio/tax/data/TaxComponentHistoryData.java",
                "raw_url": "https://github.com/apache/fineract/raw/af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1/fineract-provider/src/main/java/org/apache/fineract/portfolio/tax/data/TaxComponentHistoryData.java",
                "status": "modified",
                "changes": 7,
                "additions": 4,
                "contents_url": "https://api.github.com/repos/apache/fineract/contents/fineract-provider/src/main/java/org/apache/fineract/portfolio/tax/data/TaxComponentHistoryData.java?ref=af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1",
                "patch": "@@ -18,11 +18,12 @@\n  */\n package org.apache.fineract.portfolio.tax.data;\n \n-import java.math.BigDecimal;\n-\n import org.joda.time.LocalDate;\n \n-public class TaxComponentHistoryData {\n+import java.io.Serializable;\n+import java.math.BigDecimal;\n+\n+public class TaxComponentHistoryData implements Serializable {\n \n     @SuppressWarnings(\"unused\")\n     private final BigDecimal percentage;",
                "deletions": 3
            },
            {
                "sha": "1d618a48fdcaaf9b624d75a20d0611571d12785f",
                "filename": "fineract-provider/src/main/java/org/apache/fineract/portfolio/tax/data/TaxGroupData.java",
                "blob_url": "https://github.com/apache/fineract/blob/af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1/fineract-provider/src/main/java/org/apache/fineract/portfolio/tax/data/TaxGroupData.java",
                "raw_url": "https://github.com/apache/fineract/raw/af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1/fineract-provider/src/main/java/org/apache/fineract/portfolio/tax/data/TaxGroupData.java",
                "status": "modified",
                "changes": 3,
                "additions": 2,
                "contents_url": "https://api.github.com/repos/apache/fineract/contents/fineract-provider/src/main/java/org/apache/fineract/portfolio/tax/data/TaxGroupData.java?ref=af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1",
                "patch": "@@ -18,9 +18,10 @@\n  */\n package org.apache.fineract.portfolio.tax.data;\n \n+import java.io.Serializable;\n import java.util.Collection;\n \n-public class TaxGroupData {\n+public class TaxGroupData implements Serializable {\n \n     private final Long id;\n     private final String name;",
                "deletions": 1
            },
            {
                "sha": "d2cc723eac4e23217357413c270cf09896c87b3d",
                "filename": "fineract-provider/src/main/java/org/apache/fineract/portfolio/tax/data/TaxGroupMappingsData.java",
                "blob_url": "https://github.com/apache/fineract/blob/af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1/fineract-provider/src/main/java/org/apache/fineract/portfolio/tax/data/TaxGroupMappingsData.java",
                "raw_url": "https://github.com/apache/fineract/raw/af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1/fineract-provider/src/main/java/org/apache/fineract/portfolio/tax/data/TaxGroupMappingsData.java",
                "status": "modified",
                "changes": 4,
                "additions": 3,
                "contents_url": "https://api.github.com/repos/apache/fineract/contents/fineract-provider/src/main/java/org/apache/fineract/portfolio/tax/data/TaxGroupMappingsData.java?ref=af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1",
                "patch": "@@ -20,7 +20,9 @@\n \n import org.joda.time.LocalDate;\n \n-public class TaxGroupMappingsData {\n+import java.io.Serializable;\n+\n+public class TaxGroupMappingsData implements Serializable {\n \n     @SuppressWarnings(\"unused\")\n     private final Long id;",
                "deletions": 1
            },
            {
                "sha": "572fac2ac30cbdaf77c43c9432d1d430ba305ee7",
                "filename": "fineract-provider/src/main/java/org/apache/fineract/portfolio/transfer/service/TransferWritePlatformServiceJpaRepositoryImpl.java",
                "blob_url": "https://github.com/apache/fineract/blob/af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1/fineract-provider/src/main/java/org/apache/fineract/portfolio/transfer/service/TransferWritePlatformServiceJpaRepositoryImpl.java",
                "raw_url": "https://github.com/apache/fineract/raw/af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1/fineract-provider/src/main/java/org/apache/fineract/portfolio/transfer/service/TransferWritePlatformServiceJpaRepositoryImpl.java",
                "status": "modified",
                "changes": 29,
                "additions": 10,
                "contents_url": "https://api.github.com/repos/apache/fineract/contents/fineract-provider/src/main/java/org/apache/fineract/portfolio/transfer/service/TransferWritePlatformServiceJpaRepositoryImpl.java?ref=af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1",
                "patch": "@@ -18,10 +18,9 @@\n  */\n package org.apache.fineract.portfolio.transfer.service;\n \n-import java.util.ArrayList;\n-import java.util.Date;\n-import java.util.List;\n-\n+import com.google.common.collect.Iterables;\n+import com.google.gson.JsonArray;\n+import com.google.gson.JsonObject;\n import org.apache.fineract.infrastructure.core.api.JsonCommand;\n import org.apache.fineract.infrastructure.core.data.CommandProcessingResult;\n import org.apache.fineract.infrastructure.core.data.CommandProcessingResultBuilder;\n@@ -32,17 +31,9 @@\n import org.apache.fineract.organisation.office.domain.OfficeRepositoryWrapper;\n import org.apache.fineract.organisation.staff.domain.Staff;\n import org.apache.fineract.organisation.staff.domain.StaffRepositoryWrapper;\n-import org.apache.fineract.portfolio.calendar.domain.Calendar;\n-import org.apache.fineract.portfolio.calendar.domain.CalendarEntityType;\n-import org.apache.fineract.portfolio.calendar.domain.CalendarInstance;\n-import org.apache.fineract.portfolio.calendar.domain.CalendarInstanceRepository;\n-import org.apache.fineract.portfolio.calendar.domain.CalendarType;\n+import org.apache.fineract.portfolio.calendar.domain.*;\n import org.apache.fineract.portfolio.calendar.service.CalendarUtils;\n-import org.apache.fineract.portfolio.client.domain.Client;\n-import org.apache.fineract.portfolio.client.domain.ClientRepositoryWrapper;\n-import org.apache.fineract.portfolio.client.domain.ClientStatus;\n-import org.apache.fineract.portfolio.client.domain.ClientTransferDetails;\n-import org.apache.fineract.portfolio.client.domain.ClientTransferDetailsRepositoryWrapper;\n+import org.apache.fineract.portfolio.client.domain.*;\n import org.apache.fineract.portfolio.client.exception.ClientHasBeenClosedException;\n import org.apache.fineract.portfolio.group.domain.Group;\n import org.apache.fineract.portfolio.group.domain.GroupRepositoryWrapper;\n@@ -66,9 +57,9 @@\n import org.springframework.stereotype.Service;\n import org.springframework.transaction.annotation.Transactional;\n \n-import com.google.common.collect.Iterables;\n-import com.google.gson.JsonArray;\n-import com.google.gson.JsonObject;\n+import java.util.ArrayList;\n+import java.util.Date;\n+import java.util.List;\n \n @Service\n public class TransferWritePlatformServiceJpaRepositoryImpl implements TransferWritePlatformService {\n@@ -132,11 +123,11 @@ public CommandProcessingResult transferClientsBetweenGroups(final Long sourceGro\n \n         final List<Client> clients = assembleListOfClients(jsonCommand);\n \n-        if (sourceGroupId == destinationGroupId) { throw new TransferNotSupportedException(\n+        if (sourceGroupId.equals(destinationGroupId)) { throw new TransferNotSupportedException(\n                 TRANSFER_NOT_SUPPORTED_REASON.SOURCE_AND_DESTINATION_GROUP_CANNOT_BE_SAME, sourceGroupId, destinationGroupId); }\n \n         /*** Do not allow bulk client transfers across branches ***/\n-        if (!(sourceOffice.getId() == destinationGroup.getOffice().getId())) { throw new TransferNotSupportedException(\n+        if (!(sourceOffice.getId().equals(destinationGroup.getOffice().getId()))) { throw new TransferNotSupportedException(\n                 TRANSFER_NOT_SUPPORTED_REASON.BULK_CLIENT_TRANSFER_ACROSS_BRANCHES, sourceGroupId, destinationGroupId); }\n \n         for (final Client client : clients) {",
                "deletions": 19
            },
            {
                "sha": "a74f6f2bc9eab2e8a6c85a1cf304a0c20c4b506d",
                "filename": "fineract-provider/src/main/java/org/apache/fineract/template/service/TemplateMergeService.java",
                "blob_url": "https://github.com/apache/fineract/blob/af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1/fineract-provider/src/main/java/org/apache/fineract/template/service/TemplateMergeService.java",
                "raw_url": "https://github.com/apache/fineract/raw/af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1/fineract-provider/src/main/java/org/apache/fineract/template/service/TemplateMergeService.java",
                "status": "modified",
                "changes": 44,
                "additions": 16,
                "contents_url": "https://api.github.com/repos/apache/fineract/contents/fineract-provider/src/main/java/org/apache/fineract/template/service/TemplateMergeService.java?ref=af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1",
                "patch": "@@ -18,37 +18,30 @@\n  */\n package org.apache.fineract.template.service;\n \n-import java.io.BufferedReader;\n-import java.io.IOException;\n-import java.io.InputStream;\n-import java.io.InputStreamReader;\n-import java.io.StringReader;\n-import java.io.StringWriter;\n+import com.github.mustachejava.DefaultMustacheFactory;\n+import com.github.mustachejava.Mustache;\n+import com.github.mustachejava.MustacheFactory;\n+import org.apache.fineract.template.domain.Template;\n+import org.apache.fineract.template.domain.TemplateFunctions;\n+import org.codehaus.jackson.map.ObjectMapper;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.security.core.context.SecurityContextHolder;\n+import org.springframework.stereotype.Service;\n+\n+import java.io.*;\n import java.net.Authenticator;\n import java.net.HttpURLConnection;\n-import java.net.MalformedURLException;\n import java.net.PasswordAuthentication;\n import java.net.URL;\n+import java.nio.charset.StandardCharsets;\n import java.security.KeyManagementException;\n import java.security.KeyStoreException;\n import java.security.NoSuchAlgorithmException;\n import java.util.HashMap;\n import java.util.Map;\n import java.util.Map.Entry;\n \n-import org.apache.fineract.infrastructure.core.service.ThreadLocalContextUtil;\n-import org.apache.fineract.template.domain.Template;\n-import org.apache.fineract.template.domain.TemplateFunctions;\n-import org.codehaus.jackson.map.ObjectMapper;\n-import org.slf4j.Logger;\n-import org.slf4j.LoggerFactory;\n-import org.springframework.security.core.context.SecurityContextHolder;\n-import org.springframework.stereotype.Service;\n-\n-import com.github.mustachejava.DefaultMustacheFactory;\n-import com.github.mustachejava.Mustache;\n-import com.github.mustachejava.MustacheFactory;\n-\n @Service\n public class TemplateMergeService {\n \tprivate final static Logger logger = LoggerFactory.getLogger(TemplateMergeService.class);\n@@ -58,18 +51,13 @@\n     private Map<String, Object> scopes;\n     private String authToken;\n \n-    // @Autowired\n-    // public TemplateMergeService(final FromJsonHelper fromApiJsonHelper) {\n-    // this.fromApiJsonHelper = fromApiJsonHelper;\n-    //\n \n     public void setAuthToken(final String authToken) {\n-        //final String auth = ThreadLocalContextUtil.getAuthToken();\n     \tthis.authToken =  authToken;\n     }\n     \n \n-    public String compile(final Template template, final Map<String, Object> scopes) throws MalformedURLException, IOException {\n+    public String compile(final Template template, final Map<String, Object> scopes) throws IOException {\n         this.scopes = scopes;\n         this.scopes.put(\"static\", new TemplateFunctions());\n         \n@@ -111,7 +99,7 @@ public String compile(final Template template, final Map<String, Object> scopes)\n     }\n \n     @SuppressWarnings(\"unchecked\")\n-    private Map<String, Object> getMapFromUrl(final String url) throws MalformedURLException, IOException {\n+    private Map<String, Object> getMapFromUrl(final String url) throws IOException {\n         final HttpURLConnection connection = getConnection(url);\n \n         final String response = getStringFromInputStream(connection.getInputStream());\n@@ -162,7 +150,7 @@ private static String getStringFromInputStream(final InputStream is) {\n         String line;\n         try {\n \n-            br = new BufferedReader(new InputStreamReader(is));\n+            br = new BufferedReader(new InputStreamReader(is, StandardCharsets.UTF_8));\n             while ((line = br.readLine()) != null) {\n                 sb.append(line);\n             }",
                "deletions": 28
            },
            {
                "sha": "598e8fdf8a78289914962bba9f9b2901e0bded0c",
                "filename": "fineract-provider/src/test/java/org/apache/fineract/commands/provider/CommandHandlerProviderTest.java",
                "blob_url": "https://github.com/apache/fineract/blob/af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1/fineract-provider/src/test/java/org/apache/fineract/commands/provider/CommandHandlerProviderTest.java",
                "raw_url": "https://github.com/apache/fineract/raw/af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1/fineract-provider/src/test/java/org/apache/fineract/commands/provider/CommandHandlerProviderTest.java",
                "status": "modified",
                "changes": 2,
                "additions": 0,
                "contents_url": "https://api.github.com/repos/apache/fineract/contents/fineract-provider/src/test/java/org/apache/fineract/commands/provider/CommandHandlerProviderTest.java?ref=af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1",
                "patch": "@@ -20,15 +20,13 @@\n \n import org.apache.fineract.commands.exception.UnsupportedCommandException;\n import org.apache.fineract.commands.handler.NewCommandSourceHandler;\n-import org.apache.fineract.commands.provider.CommandHandlerProvider;\n import org.apache.fineract.infrastructure.configuration.spring.TestsWithoutDatabaseAndNoJobsConfiguration;\n import org.apache.fineract.infrastructure.core.api.JsonCommand;\n import org.apache.fineract.infrastructure.core.data.CommandProcessingResult;\n import org.junit.Assert;\n import org.junit.Test;\n import org.junit.runner.RunWith;\n import org.springframework.beans.factory.annotation.Autowired;\n-import org.springframework.core.env.ConfigurableEnvironment;\n import org.springframework.test.context.ActiveProfiles;\n import org.springframework.test.context.ContextConfiguration;\n import org.springframework.test.context.junit4.SpringJUnit4ClassRunner;",
                "deletions": 2
            },
            {
                "sha": "5913b99f86e4857a4eb43318902141dfac891496",
                "filename": "fineract-provider/src/test/java/org/apache/fineract/mix/report/service/XBRLBuilderTest.java",
                "blob_url": "https://github.com/apache/fineract/blob/af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1/fineract-provider/src/test/java/org/apache/fineract/mix/report/service/XBRLBuilderTest.java",
                "raw_url": "https://github.com/apache/fineract/raw/af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1/fineract-provider/src/test/java/org/apache/fineract/mix/report/service/XBRLBuilderTest.java",
                "status": "modified",
                "changes": 31,
                "additions": 16,
                "contents_url": "https://api.github.com/repos/apache/fineract/contents/fineract-provider/src/test/java/org/apache/fineract/mix/report/service/XBRLBuilderTest.java?ref=af0dd7e5f3856eb0fc5b7441c8ec51941e1764d1",
                "patch": "@@ -18,20 +18,6 @@\n  */\n package org.apache.fineract.mix.report.service;\n \n-import static org.junit.Assert.assertEquals;\n-import static org.junit.Assert.assertNotNull;\n-import static org.mockito.Mockito.lenient;\n-import static org.mockito.Mockito.when;\n-\n-import java.io.ByteArrayInputStream;\n-import java.io.IOException;\n-import java.math.BigDecimal;\n-import java.sql.Date;\n-import java.util.HashMap;\n-\n-import javax.xml.parsers.DocumentBuilderFactory;\n-import javax.xml.parsers.ParserConfigurationException;\n-\n import org.apache.fineract.mix.data.MixTaxonomyData;\n import org.apache.fineract.mix.data.NamespaceData;\n import org.apache.fineract.mix.service.NamespaceReadPlatformServiceImpl;\n@@ -47,6 +33,20 @@\n import org.w3c.dom.NodeList;\n import org.xml.sax.SAXException;\n \n+import javax.xml.parsers.DocumentBuilderFactory;\n+import javax.xml.parsers.ParserConfigurationException;\n+import java.io.ByteArrayInputStream;\n+import java.io.IOException;\n+import java.math.BigDecimal;\n+import java.nio.charset.StandardCharsets;\n+import java.sql.Date;\n+import java.util.HashMap;\n+\n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertNotNull;\n+import static org.mockito.Mockito.lenient;\n+import static org.mockito.Mockito.when;\n+\n @RunWith(MockitoJUnitRunner.class)\n public class XBRLBuilderTest {\n \n@@ -76,7 +76,8 @@ public void shouldCorrectlyBuildMap() {\n         System.out.println(result);\n         NodeList nodes = null;\n         try {\n-            nodes = DocumentBuilderFactory.newInstance().newDocumentBuilder().parse(new ByteArrayInputStream(result.getBytes()))\n+            nodes =\n+                    DocumentBuilderFactory.newInstance().newDocumentBuilder().parse(new ByteArrayInputStream(result.getBytes(StandardCharsets.UTF_8)))\n                     .getElementsByTagName(\"Assets\");\n         } catch (final SAXException e) {\n             e.printStackTrace();",
                "deletions": 15
            }
        ]
    },
    {
        "repo": "fineract",
        "message": "Merge pull request #457 from wkk91193/fixing-formular-cell-evaluation-npe\n\nFixing Apache POI issue - Formula Cell evaluation nullpointer exception",
        "commit": "https://github.com/apache/fineract/commit/97ed2549dea48bf4eed0300ff3043e942f3df25d",
        "parent": "https://github.com/apache/fineract/commit/cd5b3804a640818534faeb94ec6d192c26877fe0",
        "bug_id": "fineract_6",
        "file": [
            {
                "sha": "1e794ed347ae48186b90c4e541b111533832291e",
                "filename": "fineract-provider/src/main/java/org/apache/fineract/infrastructure/bulkimport/importhandler/ImportHandlerUtils.java",
                "blob_url": "https://github.com/apache/fineract/blob/97ed2549dea48bf4eed0300ff3043e942f3df25d/fineract-provider/src/main/java/org/apache/fineract/infrastructure/bulkimport/importhandler/ImportHandlerUtils.java",
                "raw_url": "https://github.com/apache/fineract/raw/97ed2549dea48bf4eed0300ff3043e942f3df25d/fineract-provider/src/main/java/org/apache/fineract/infrastructure/bulkimport/importhandler/ImportHandlerUtils.java",
                "status": "modified",
                "changes": 40,
                "additions": 33,
                "contents_url": "https://api.github.com/repos/apache/fineract/contents/fineract-provider/src/main/java/org/apache/fineract/infrastructure/bulkimport/importhandler/ImportHandlerUtils.java?ref=97ed2549dea48bf4eed0300ff3043e942f3df25d",
                "patch": "@@ -63,8 +63,13 @@ public static Long readAsLong(int colIndex, Row row) {\n         FormulaEvaluator eval = row.getSheet().getWorkbook().getCreationHelper().createFormulaEvaluator();\n         if(c.getCellType() == Cell.CELL_TYPE_FORMULA) {\n             if(eval!=null) {\n-                CellValue val = eval.evaluate(c);\n-                return ((Double) val.getNumberValue()).longValue();\n+                CellValue val = null;\n+                try {\n+                    val = eval.evaluate(c);\n+                } catch (NullPointerException npe) {\n+                    return null;\n+                }\n+                return ((Double)val.getNumberValue()).longValue();\n             }\n         }\n         else if (c.getCellType()==Cell.CELL_TYPE_NUMERIC){\n@@ -85,7 +90,13 @@ public static String readAsString(int colIndex, Row row) {\n         FormulaEvaluator eval = row.getSheet().getWorkbook().getCreationHelper().createFormulaEvaluator();\n         if(c.getCellType() == Cell.CELL_TYPE_FORMULA) {\n             if (eval!=null) {\n-                CellValue val = eval.evaluate(c);\n+                CellValue val = null;\n+                try {\n+                    val = eval.evaluate(c);\n+                } catch(NullPointerException npe) {\n+                    return null;\n+                }\n+\n                 String res = trimEmptyDecimalPortion(val.getStringValue());\n                 if (res!=null) {\n                     if (!res.equals(\"\")) {\n@@ -136,7 +147,12 @@ public static Boolean readAsBoolean(int colIndex, Row row) {\n             FormulaEvaluator eval = row.getSheet().getWorkbook().getCreationHelper().createFormulaEvaluator();\n             if(c.getCellType() == Cell.CELL_TYPE_FORMULA) {\n                 if(eval!=null) {\n-                    CellValue val = eval.evaluate(c);\n+                    CellValue val = null;\n+                    try {\n+                        val = eval.evaluate(c);\n+                    } catch (NullPointerException npe) {\n+                        return false;\n+                    }\n                     return val.getBooleanValue();\n                 }\n                 return false;\n@@ -158,8 +174,13 @@ public static Integer readAsInt(int colIndex, Row row) {\n             FormulaEvaluator eval = row.getSheet().getWorkbook().getCreationHelper().createFormulaEvaluator();\n             if(c.getCellType() == Cell.CELL_TYPE_FORMULA) {\n                 if(eval!=null) {\n-                   CellValue val = eval.evaluate(c);\n-                    return ((Double) val.getNumberValue()).intValue();\n+                    CellValue val = null;\n+                    try {\n+                        val = eval.evaluate(c);\n+                    } catch (NullPointerException npe) {\n+                        return null;\n+                    }\n+                    return ((Double)val.getNumberValue()).intValue();\n                 }\n                 return null;\n             }else if (c.getCellType()==Cell.CELL_TYPE_NUMERIC) {\n@@ -176,7 +197,12 @@ public static Double readAsDouble(int colIndex, Row row) {\n         FormulaEvaluator eval = row.getSheet().getWorkbook().getCreationHelper().createFormulaEvaluator();\n         if(c.getCellType() == Cell.CELL_TYPE_FORMULA) {\n                 if (eval!=null) {\n-                    CellValue val = eval.evaluate(c);\n+                    CellValue val = null;\n+                    try {\n+                        val = eval.evaluate(c);\n+                    } catch (NullPointerException npe) {\n+                        return 0.0;\n+                    }\n                     return val.getNumberValue();\n                 }else {\n                     return 0.0;",
                "deletions": 7
            }
        ]
    },
    {
        "repo": "fineract",
        "message": "MIFOSX-1875 Fix for NullPointerException,update build attributes before building commandRequest.",
        "commit": "https://github.com/apache/fineract/commit/f9a33c790e9d9a32ef257d93e3e5d6449f9f0133",
        "parent": "https://github.com/apache/fineract/commit/3043d2ae992b382e31521953308fce8830af6288",
        "bug_id": "fineract_7",
        "file": [
            {
                "sha": "00d19f977254b396574b13c101b9020534576706",
                "filename": "mifosng-provider/src/main/java/org/mifosplatform/useradministration/api/PasswordPreferencesApiResource.java",
                "blob_url": "https://github.com/apache/fineract/blob/f9a33c790e9d9a32ef257d93e3e5d6449f9f0133/mifosng-provider/src/main/java/org/mifosplatform/useradministration/api/PasswordPreferencesApiResource.java",
                "raw_url": "https://github.com/apache/fineract/raw/f9a33c790e9d9a32ef257d93e3e5d6449f9f0133/mifosng-provider/src/main/java/org/mifosplatform/useradministration/api/PasswordPreferencesApiResource.java",
                "status": "modified",
                "changes": 1,
                "additions": 1,
                "contents_url": "https://api.github.com/repos/apache/fineract/contents/mifosng-provider/src/main/java/org/mifosplatform/useradministration/api/PasswordPreferencesApiResource.java?ref=f9a33c790e9d9a32ef257d93e3e5d6449f9f0133",
                "patch": "@@ -75,6 +75,7 @@ public String retrieve(@Context final UriInfo uriInfo) {\n     public String update(final String apiRequestBodyAsJson) {\n \n         final CommandWrapper commandRequest = new CommandWrapperBuilder() //\n+                .updatePasswordPreferences() //\n                 .withJson(apiRequestBodyAsJson) //\n                 .build();\n ",
                "deletions": 0
            }
        ]
    },
    {
        "repo": "fineract",
        "message": "Merge pull request #1321 from chandrikamohith/MIFOSX-1875\n\nMIFOSX-1875 Fix for NullPointerException,update build attributes before ...",
        "commit": "https://github.com/apache/fineract/commit/237b96753773ab350d831607ad78084631539083",
        "parent": "https://github.com/apache/fineract/commit/aaaf47c763cb18d61f2d57c27e3295967335ea76",
        "bug_id": "fineract_8",
        "file": [
            {
                "sha": "00d19f977254b396574b13c101b9020534576706",
                "filename": "mifosng-provider/src/main/java/org/mifosplatform/useradministration/api/PasswordPreferencesApiResource.java",
                "blob_url": "https://github.com/apache/fineract/blob/237b96753773ab350d831607ad78084631539083/mifosng-provider/src/main/java/org/mifosplatform/useradministration/api/PasswordPreferencesApiResource.java",
                "raw_url": "https://github.com/apache/fineract/raw/237b96753773ab350d831607ad78084631539083/mifosng-provider/src/main/java/org/mifosplatform/useradministration/api/PasswordPreferencesApiResource.java",
                "status": "modified",
                "changes": 1,
                "additions": 1,
                "contents_url": "https://api.github.com/repos/apache/fineract/contents/mifosng-provider/src/main/java/org/mifosplatform/useradministration/api/PasswordPreferencesApiResource.java?ref=237b96753773ab350d831607ad78084631539083",
                "patch": "@@ -75,6 +75,7 @@ public String retrieve(@Context final UriInfo uriInfo) {\n     public String update(final String apiRequestBodyAsJson) {\n \n         final CommandWrapper commandRequest = new CommandWrapperBuilder() //\n+                .updatePasswordPreferences() //\n                 .withJson(apiRequestBodyAsJson) //\n                 .build();\n ",
                "deletions": 0
            }
        ]
    },
    {
        "repo": "fineract",
        "message": "Better error handling in case a scheduler job name listed in database\ncannot be found in the code (instead of the NPE currently happenig in\nsuch cases)\n \nSigned-off-by: Michael Vorburger <mike@vorburger.ch>",
        "commit": "https://github.com/apache/fineract/commit/df4a070123e1f031a87ea0a36f4646213a8d3686",
        "parent": "https://github.com/apache/fineract/commit/9893563865723a9e40ecac5bda0748dcafacaf0e",
        "bug_id": "fineract_9",
        "file": [
            {
                "sha": "35a639a72f21cd4483424d47c54a39a00913c802",
                "filename": "mifosng-provider/src/main/java/org/mifosplatform/infrastructure/jobs/service/JobRegisterServiceImpl.java",
                "blob_url": "https://github.com/apache/fineract/blob/df4a070123e1f031a87ea0a36f4646213a8d3686/mifosng-provider/src/main/java/org/mifosplatform/infrastructure/jobs/service/JobRegisterServiceImpl.java",
                "raw_url": "https://github.com/apache/fineract/raw/df4a070123e1f031a87ea0a36f4646213a8d3686/mifosng-provider/src/main/java/org/mifosplatform/infrastructure/jobs/service/JobRegisterServiceImpl.java",
                "status": "modified",
                "changes": 3,
                "additions": 3,
                "contents_url": "https://api.github.com/repos/apache/fineract/contents/mifosng-provider/src/main/java/org/mifosplatform/infrastructure/jobs/service/JobRegisterServiceImpl.java?ref=df4a070123e1f031a87ea0a36f4646213a8d3686",
                "patch": "@@ -302,6 +302,9 @@ private Scheduler createScheduler(final String name, final int noOfThreads, JobL\n     private JobDetail createJobDetail(final ScheduledJobDetail scheduledJobDetail) throws Exception {\n         final MifosPlatformTenant tenant = ThreadLocalContextUtil.getTenant();\n         final ClassMethodNamesPair jobDetails = CronMethodParser.findTargetMethodDetails(scheduledJobDetail.getJobName());\n+        if (jobDetails == null) { throw new IllegalArgumentException(\n+                \"Code has no @CronTarget with this job name (@see JobName); seems like DB/code are not in line: \"\n+                        + scheduledJobDetail.getJobName()); }\n         final Object targetObject = getBeanObject(Class.forName(jobDetails.className));\n         final MethodInvokingJobDetailFactoryBean jobDetailFactoryBean = new MethodInvokingJobDetailFactoryBean();\n         jobDetailFactoryBean.setName(scheduledJobDetail.getJobName() + \"JobDetail\" + tenant.getId());",
                "deletions": 0
            }
        ]
    }
]