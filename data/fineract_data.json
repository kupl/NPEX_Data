[{"commit": "https://github.com/apache/fineract/commit/97ed2549dea48bf4eed0300ff3043e942f3df25d", "parent": "https://github.com/apache/fineract/commit/cd5b3804a640818534faeb94ec6d192c26877fe0", "message": "Merge pull request #457 from wkk91193/fixing-formular-cell-evaluation-npe\n\nFixing Apache POI issue - Formula Cell evaluation nullpointer exception", "bug_id": "fineract_1", "file": [{"additions": 33, "raw_url": "https://github.com/apache/fineract/raw/97ed2549dea48bf4eed0300ff3043e942f3df25d/fineract-provider/src/main/java/org/apache/fineract/infrastructure/bulkimport/importhandler/ImportHandlerUtils.java", "blob_url": "https://github.com/apache/fineract/blob/97ed2549dea48bf4eed0300ff3043e942f3df25d/fineract-provider/src/main/java/org/apache/fineract/infrastructure/bulkimport/importhandler/ImportHandlerUtils.java", "sha": "1e794ed347ae48186b90c4e541b111533832291e", "changes": 40, "status": "modified", "deletions": 7, "contents_url": "https://api.github.com/repos/apache/fineract/contents/fineract-provider/src/main/java/org/apache/fineract/infrastructure/bulkimport/importhandler/ImportHandlerUtils.java?ref=97ed2549dea48bf4eed0300ff3043e942f3df25d", "patch": "@@ -63,8 +63,13 @@ public static Long readAsLong(int colIndex, Row row) {\n         FormulaEvaluator eval = row.getSheet().getWorkbook().getCreationHelper().createFormulaEvaluator();\n         if(c.getCellType() == Cell.CELL_TYPE_FORMULA) {\n             if(eval!=null) {\n-                CellValue val = eval.evaluate(c);\n-                return ((Double) val.getNumberValue()).longValue();\n+                CellValue val = null;\n+                try {\n+                    val = eval.evaluate(c);\n+                } catch (NullPointerException npe) {\n+                    return null;\n+                }\n+                return ((Double)val.getNumberValue()).longValue();\n             }\n         }\n         else if (c.getCellType()==Cell.CELL_TYPE_NUMERIC){\n@@ -85,7 +90,13 @@ public static String readAsString(int colIndex, Row row) {\n         FormulaEvaluator eval = row.getSheet().getWorkbook().getCreationHelper().createFormulaEvaluator();\n         if(c.getCellType() == Cell.CELL_TYPE_FORMULA) {\n             if (eval!=null) {\n-                CellValue val = eval.evaluate(c);\n+                CellValue val = null;\n+                try {\n+                    val = eval.evaluate(c);\n+                } catch(NullPointerException npe) {\n+                    return null;\n+                }\n+\n                 String res = trimEmptyDecimalPortion(val.getStringValue());\n                 if (res!=null) {\n                     if (!res.equals(\"\")) {\n@@ -136,7 +147,12 @@ public static Boolean readAsBoolean(int colIndex, Row row) {\n             FormulaEvaluator eval = row.getSheet().getWorkbook().getCreationHelper().createFormulaEvaluator();\n             if(c.getCellType() == Cell.CELL_TYPE_FORMULA) {\n                 if(eval!=null) {\n-                    CellValue val = eval.evaluate(c);\n+                    CellValue val = null;\n+                    try {\n+                        val = eval.evaluate(c);\n+                    } catch (NullPointerException npe) {\n+                        return false;\n+                    }\n                     return val.getBooleanValue();\n                 }\n                 return false;\n@@ -158,8 +174,13 @@ public static Integer readAsInt(int colIndex, Row row) {\n             FormulaEvaluator eval = row.getSheet().getWorkbook().getCreationHelper().createFormulaEvaluator();\n             if(c.getCellType() == Cell.CELL_TYPE_FORMULA) {\n                 if(eval!=null) {\n-                   CellValue val = eval.evaluate(c);\n-                    return ((Double) val.getNumberValue()).intValue();\n+                    CellValue val = null;\n+                    try {\n+                        val = eval.evaluate(c);\n+                    } catch (NullPointerException npe) {\n+                        return null;\n+                    }\n+                    return ((Double)val.getNumberValue()).intValue();\n                 }\n                 return null;\n             }else if (c.getCellType()==Cell.CELL_TYPE_NUMERIC) {\n@@ -176,7 +197,12 @@ public static Double readAsDouble(int colIndex, Row row) {\n         FormulaEvaluator eval = row.getSheet().getWorkbook().getCreationHelper().createFormulaEvaluator();\n         if(c.getCellType() == Cell.CELL_TYPE_FORMULA) {\n                 if (eval!=null) {\n-                    CellValue val = eval.evaluate(c);\n+                    CellValue val = null;\n+                    try {\n+                        val = eval.evaluate(c);\n+                    } catch (NullPointerException npe) {\n+                        return 0.0;\n+                    }\n                     return val.getNumberValue();\n                 }else {\n                     return 0.0;", "filename": "fineract-provider/src/main/java/org/apache/fineract/infrastructure/bulkimport/importhandler/ImportHandlerUtils.java"}], "repo": "fineract"}, {"commit": "https://github.com/apache/fineract/commit/df4a070123e1f031a87ea0a36f4646213a8d3686", "parent": "https://github.com/apache/fineract/commit/9893563865723a9e40ecac5bda0748dcafacaf0e", "message": "Better error handling in case a scheduler job name listed in database\ncannot be found in the code (instead of the NPE currently happenig in\nsuch cases)\n \nSigned-off-by: Michael Vorburger <mike@vorburger.ch>", "bug_id": "fineract_2", "file": [{"additions": 3, "raw_url": "https://github.com/apache/fineract/raw/df4a070123e1f031a87ea0a36f4646213a8d3686/mifosng-provider/src/main/java/org/mifosplatform/infrastructure/jobs/service/JobRegisterServiceImpl.java", "blob_url": "https://github.com/apache/fineract/blob/df4a070123e1f031a87ea0a36f4646213a8d3686/mifosng-provider/src/main/java/org/mifosplatform/infrastructure/jobs/service/JobRegisterServiceImpl.java", "sha": "35a639a72f21cd4483424d47c54a39a00913c802", "changes": 3, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/fineract/contents/mifosng-provider/src/main/java/org/mifosplatform/infrastructure/jobs/service/JobRegisterServiceImpl.java?ref=df4a070123e1f031a87ea0a36f4646213a8d3686", "patch": "@@ -302,6 +302,9 @@ private Scheduler createScheduler(final String name, final int noOfThreads, JobL\n     private JobDetail createJobDetail(final ScheduledJobDetail scheduledJobDetail) throws Exception {\n         final MifosPlatformTenant tenant = ThreadLocalContextUtil.getTenant();\n         final ClassMethodNamesPair jobDetails = CronMethodParser.findTargetMethodDetails(scheduledJobDetail.getJobName());\n+        if (jobDetails == null) { throw new IllegalArgumentException(\n+                \"Code has no @CronTarget with this job name (@see JobName); seems like DB/code are not in line: \"\n+                        + scheduledJobDetail.getJobName()); }\n         final Object targetObject = getBeanObject(Class.forName(jobDetails.className));\n         final MethodInvokingJobDetailFactoryBean jobDetailFactoryBean = new MethodInvokingJobDetailFactoryBean();\n         jobDetailFactoryBean.setName(scheduledJobDetail.getJobName() + \"JobDetail\" + tenant.getId());", "filename": "mifosng-provider/src/main/java/org/mifosplatform/infrastructure/jobs/service/JobRegisterServiceImpl.java"}], "repo": "fineract"}]
