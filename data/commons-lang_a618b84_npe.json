[
    {
        "repo": "commons-lang",
        "commit": "https://github.com/apache/commons-lang/commit/a618b844c5a261ced37385ab3947de6e215d46f7",
        "bug_id": "commons-lang_a618b84",
        "message": "[LANG-1365] Fix NullPointerException in isJavaVersionAtLeast on Java 10,\nadd SystemUtils.IS_JAVA_10, add JavaVersion.JAVA_10.",
        "parent": "https://github.com/apache/commons-lang/commit/a26c66a8edcf029ca5f94354cee0db267e9ccc20",
        "patched_files": [
            "changes.xml",
            "JavaVersion.java",
            "SystemUtils.java"
        ],
        "file": [
            {
                "status": "modified",
                "additions": 2,
                "raw_url": "https://github.com/apache/commons-lang/raw/a618b844c5a261ced37385ab3947de6e215d46f7/src/changes/changes.xml",
                "contents_url": "https://api.github.com/repos/apache/commons-lang/contents/src/changes/changes.xml?ref=a618b844c5a261ced37385ab3947de6e215d46f7",
                "filename": "src/changes/changes.xml",
                "deletions": 1,
                "sha": "cbc17a03df9b97888e6a490a2030690128b22e94",
                "blob_url": "https://github.com/apache/commons-lang/blob/a618b844c5a261ced37385ab3947de6e215d46f7/src/changes/changes.xml",
                "patch": "@@ -45,7 +45,8 @@ The <action> type attribute can be add,update,fix,remove.\n   </properties>\n   <body>\n \n-  <release version=\"3.7\" date=\"2017-MM-DD\" description=\"New features and bug fixes. Requires Java 7.\">\n+  <release version=\"3.7\" date=\"2017-MM-DD\" description=\"New features and bug fixes. Requires Java 7, supports Java 8, 9, 10.\">\n+    <action issue=\"LANG-1365\" type=\"fix\" dev=\"ggregory\" due-to=\"Gary Gregory\">Fix NullPointerException in isJavaVersionAtLeast on Java 10, add SystemUtils.IS_JAVA_10, add JavaVersion.JAVA_10</action>\n     <action issue=\"LANG-1358\" type=\"update\" dev=\"pschumacher\" due-to=\"Stephane Landelle\">Improve StringUtils#replace throughput</action>\n     <action issue=\"LANG-1355\" type=\"add\" dev=\"ggregory\" due-to=\"Chas Honton\">TimeZone.getTimeZone() in FastDateParser causes resource contention (PR #296.)</action>\n     <action issue=\"LANG-1348\" type=\"fix\" dev=\"pschumacher\" due-to=\"mbusso\">StackOverflowError on TypeUtils.toString(...) for a generic return type of Enum.valueOf</action>",
                "changes": 3
            },
            {
                "status": "modified",
                "additions": 11,
                "raw_url": "https://github.com/apache/commons-lang/raw/a618b844c5a261ced37385ab3947de6e215d46f7/src/main/java/org/apache/commons/lang3/JavaVersion.java",
                "contents_url": "https://api.github.com/repos/apache/commons-lang/contents/src/main/java/org/apache/commons/lang3/JavaVersion.java?ref=a618b844c5a261ced37385ab3947de6e215d46f7",
                "filename": "src/main/java/org/apache/commons/lang3/JavaVersion.java",
                "deletions": 0,
                "sha": "666624d55871da8ce58d38598b1288ea394f972e",
                "blob_url": "https://github.com/apache/commons-lang/blob/a618b844c5a261ced37385ab3947de6e215d46f7/src/main/java/org/apache/commons/lang3/JavaVersion.java",
                "patch": "@@ -82,9 +82,18 @@\n \n     /**\n      * Java 9\n+     * \n+     * @since 3.5\n      */\n     JAVA_9(9.0f, \"9\"),\n \n+    /**\n+     * Java 10\n+     * \n+     * @since 3.7\n+     */\n+    JAVA_10(10.0f, \"10\"),\n+\n     /**\n      * The most recent java version. Mainly introduced to avoid to break when a new version of Java is used.\n      */\n@@ -168,6 +177,8 @@ static JavaVersion get(final String nom) {\n             return JAVA_1_8;\n         } else if (\"9\".equals(nom)) {\n             return JAVA_9;\n+        } else if (\"10\".equals(nom)) {\n+            return JAVA_10;\n         }\n         if (nom == null) {\n             return null;",
                "changes": 11
            },
            {
                "status": "modified",
                "additions": 12,
                "raw_url": "https://github.com/apache/commons-lang/raw/a618b844c5a261ced37385ab3947de6e215d46f7/src/main/java/org/apache/commons/lang3/SystemUtils.java",
                "contents_url": "https://api.github.com/repos/apache/commons-lang/contents/src/main/java/org/apache/commons/lang3/SystemUtils.java?ref=a618b844c5a261ced37385ab3947de6e215d46f7",
                "filename": "src/main/java/org/apache/commons/lang3/SystemUtils.java",
                "deletions": 0,
                "sha": "74a90fca5e065cdb2c34a48cbe16b52b0b0f244c",
                "blob_url": "https://github.com/apache/commons-lang/blob/a618b844c5a261ced37385ab3947de6e215d46f7/src/main/java/org/apache/commons/lang3/SystemUtils.java",
                "patch": "@@ -973,6 +973,18 @@\n      */\n     public static final boolean IS_JAVA_9 = getJavaVersionMatches(\"9\");\n \n+    /**\n+     * <p>\n+     * Is {@code true} if this is Java version 10 (also 10.x versions).\n+     * </p>\n+     * <p>\n+     * The field will return {@code false} if {@link #JAVA_VERSION} is {@code null}.\n+     * </p>\n+     *\n+     * @since 3.7\n+     */\n+    public static final boolean IS_JAVA_10 = getJavaVersionMatches(\"10\");\n+\n     // Operating system checks\n     // -----------------------------------------------------------------------\n     // These MUST be declared after those above as they depend on the",
                "changes": 12
            },
            {
                "status": "modified",
                "additions": 2,
                "raw_url": "https://github.com/apache/commons-lang/raw/a618b844c5a261ced37385ab3947de6e215d46f7/src/test/java/org/apache/commons/lang3/JavaVersionTest.java",
                "contents_url": "https://api.github.com/repos/apache/commons-lang/contents/src/test/java/org/apache/commons/lang3/JavaVersionTest.java?ref=a618b844c5a261ced37385ab3947de6e215d46f7",
                "filename": "src/test/java/org/apache/commons/lang3/JavaVersionTest.java",
                "deletions": 0,
                "sha": "4d4202c49bc80b45f38c3962535b5ac3952ac144",
                "blob_url": "https://github.com/apache/commons-lang/blob/a618b844c5a261ced37385ab3947de6e215d46f7/src/test/java/org/apache/commons/lang3/JavaVersionTest.java",
                "patch": "@@ -34,6 +34,7 @@\n import static org.apache.commons.lang3.JavaVersion.JAVA_1_7;\n import static org.apache.commons.lang3.JavaVersion.JAVA_1_8;\n import static org.apache.commons.lang3.JavaVersion.JAVA_9;\n+import static org.apache.commons.lang3.JavaVersion.JAVA_10;\n import static org.apache.commons.lang3.JavaVersion.get;\n import static org.apache.commons.lang3.JavaVersion.getJavaVersion;\n \n@@ -54,6 +55,7 @@ public void testGetJavaVersion() {\n         assertEquals(\"1.7 failed\", JAVA_1_7, get(\"1.7\"));\n         assertEquals(\"1.8 failed\", JAVA_1_8, get(\"1.8\"));\n         assertEquals(\"9 failed\", JAVA_9, get(\"9\"));\n+        assertEquals(\"10 failed\", JAVA_10, get(\"10\"));\n         assertEquals(\"1.10 failed\", JAVA_RECENT, get(\"1.10\"));\n         // assertNull(\"2.10 unexpectedly worked\", get(\"2.10\"));\n         assertEquals(\"Wrapper method failed\", get(\"1.5\"), getJavaVersion(\"1.5\"));",
                "changes": 2
            },
            {
                "status": "modified",
                "additions": 32,
                "raw_url": "https://github.com/apache/commons-lang/raw/a618b844c5a261ced37385ab3947de6e215d46f7/src/test/java/org/apache/commons/lang3/SystemUtilsTest.java",
                "contents_url": "https://api.github.com/repos/apache/commons-lang/contents/src/test/java/org/apache/commons/lang3/SystemUtilsTest.java?ref=a618b844c5a261ced37385ab3947de6e215d46f7",
                "filename": "src/test/java/org/apache/commons/lang3/SystemUtilsTest.java",
                "deletions": 1,
                "sha": "b97cb811331a44dbf357c4bd1261b149d9fb3571",
                "blob_url": "https://github.com/apache/commons-lang/blob/a618b844c5a261ced37385ab3947de6e215d46f7/src/test/java/org/apache/commons/lang3/SystemUtilsTest.java",
                "patch": "@@ -28,6 +28,7 @@\n import static org.apache.commons.lang3.JavaVersion.JAVA_1_7;\n import static org.apache.commons.lang3.JavaVersion.JAVA_1_8;\n import static org.apache.commons.lang3.JavaVersion.JAVA_9;\n+import static org.apache.commons.lang3.JavaVersion.JAVA_10;\n import static org.junit.Assert.assertEquals;\n import static org.junit.Assert.assertFalse;\n import static org.junit.Assert.assertNotNull;\n@@ -119,6 +120,7 @@ public void testIS_JAVA() {\n             assertFalse(SystemUtils.IS_JAVA_1_8);\n             assertFalse(SystemUtils.IS_JAVA_1_9);\n             assertFalse(SystemUtils.IS_JAVA_9);\n+            assertFalse(SystemUtils.IS_JAVA_10);\n         } else if (javaVersion.startsWith(\"1.7\")) {\n             assertFalse(SystemUtils.IS_JAVA_1_1);\n             assertFalse(SystemUtils.IS_JAVA_1_2);\n@@ -130,6 +132,7 @@ public void testIS_JAVA() {\n             assertFalse(SystemUtils.IS_JAVA_1_8);\n             assertFalse(SystemUtils.IS_JAVA_1_9);\n             assertFalse(SystemUtils.IS_JAVA_9);\n+            assertFalse(SystemUtils.IS_JAVA_10);\n         } else if (javaVersion.startsWith(\"1.8\")) {\n             assertFalse(SystemUtils.IS_JAVA_1_1);\n             assertFalse(SystemUtils.IS_JAVA_1_2);\n@@ -141,6 +144,7 @@ public void testIS_JAVA() {\n             assertTrue(SystemUtils.IS_JAVA_1_8);\n             assertFalse(SystemUtils.IS_JAVA_1_9);\n             assertFalse(SystemUtils.IS_JAVA_9);\n+            assertFalse(SystemUtils.IS_JAVA_10);\n         } else if (javaVersion.startsWith(\"9\")) {\n             assertFalse(SystemUtils.IS_JAVA_1_1);\n             assertFalse(SystemUtils.IS_JAVA_1_2);\n@@ -152,8 +156,21 @@ public void testIS_JAVA() {\n             assertFalse(SystemUtils.IS_JAVA_1_8);\n             assertTrue(SystemUtils.IS_JAVA_1_9);\n             assertTrue(SystemUtils.IS_JAVA_9);\n+            assertFalse(SystemUtils.IS_JAVA_10);\n+        } else if (javaVersion.startsWith(\"10\")) {\n+            assertFalse(SystemUtils.IS_JAVA_1_1);\n+            assertFalse(SystemUtils.IS_JAVA_1_2);\n+            assertFalse(SystemUtils.IS_JAVA_1_3);\n+            assertFalse(SystemUtils.IS_JAVA_1_4);\n+            assertFalse(SystemUtils.IS_JAVA_1_5);\n+            assertFalse(SystemUtils.IS_JAVA_1_6);\n+            assertFalse(SystemUtils.IS_JAVA_1_7);\n+            assertFalse(SystemUtils.IS_JAVA_1_8);\n+            assertFalse(SystemUtils.IS_JAVA_1_9);\n+            assertFalse(SystemUtils.IS_JAVA_9);\n+            assertTrue(SystemUtils.IS_JAVA_10);\n         } else {\n-            System.out.println(\"Can't test IS_JAVA value: \"+javaVersion);\n+            System.out.println(\"Can't test IS_JAVA value: \" + javaVersion);\n         }\n     }\n \n@@ -390,6 +407,7 @@ public void testIsJavaVersionAtLeast() throws Exception {\n             assertTrue(SystemUtils.isJavaVersionAtLeast(JAVA_1_7));\n             assertFalse(SystemUtils.isJavaVersionAtLeast(JAVA_1_8));\n             assertFalse(SystemUtils.isJavaVersionAtLeast(JAVA_9));\n+            assertFalse(SystemUtils.isJavaVersionAtLeast(JAVA_10));\n         } else if (SystemUtils.IS_JAVA_1_8) {\n             assertTrue(SystemUtils.isJavaVersionAtLeast(JAVA_1_1));\n             assertTrue(SystemUtils.isJavaVersionAtLeast(JAVA_1_2));\n@@ -400,6 +418,7 @@ public void testIsJavaVersionAtLeast() throws Exception {\n             assertTrue(SystemUtils.isJavaVersionAtLeast(JAVA_1_7));\n             assertTrue(SystemUtils.isJavaVersionAtLeast(JAVA_1_8));\n             assertFalse(SystemUtils.isJavaVersionAtLeast(JAVA_9));\n+            assertFalse(SystemUtils.isJavaVersionAtLeast(JAVA_10));\n         } else if (SystemUtils.IS_JAVA_9) {\n             assertTrue(SystemUtils.isJavaVersionAtLeast(JAVA_1_1));\n             assertTrue(SystemUtils.isJavaVersionAtLeast(JAVA_1_2));\n@@ -410,6 +429,18 @@ public void testIsJavaVersionAtLeast() throws Exception {\n             assertTrue(SystemUtils.isJavaVersionAtLeast(JAVA_1_7));\n             assertTrue(SystemUtils.isJavaVersionAtLeast(JAVA_1_8));\n             assertTrue(SystemUtils.isJavaVersionAtLeast(JAVA_9));\n+            assertFalse(SystemUtils.isJavaVersionAtLeast(JAVA_10));\n+        } else if (SystemUtils.IS_JAVA_10) {\n+            assertTrue(SystemUtils.isJavaVersionAtLeast(JAVA_1_1));\n+            assertTrue(SystemUtils.isJavaVersionAtLeast(JAVA_1_2));\n+            assertTrue(SystemUtils.isJavaVersionAtLeast(JAVA_1_3));\n+            assertTrue(SystemUtils.isJavaVersionAtLeast(JAVA_1_4));\n+            assertTrue(SystemUtils.isJavaVersionAtLeast(JAVA_1_5));\n+            assertTrue(SystemUtils.isJavaVersionAtLeast(JAVA_1_6));\n+            assertTrue(SystemUtils.isJavaVersionAtLeast(JAVA_1_7));\n+            assertTrue(SystemUtils.isJavaVersionAtLeast(JAVA_1_8));\n+            assertTrue(SystemUtils.isJavaVersionAtLeast(JAVA_9));\n+            assertTrue(SystemUtils.isJavaVersionAtLeast(JAVA_10));\n         }\n     }\n ",
                "changes": 33
            }
        ],
        "unit_tests": [
            "SystemUtilsTest.java",
            "JavaVersionTest.java"
        ]
    },
    {
        "buggy": false,
        "test_file": "src/test/java/org/apache/commons/lang3/SystemUtilsTest.java",
        "buggy_files": [
            "src/changes/changes.xml",
            "src/main/java/org/apache/commons/lang3/JavaVersion.java",
            "src/main/java/org/apache/commons/lang3/SystemUtils.java"
        ],
        "fixed": true
    }
]