{
    "incubator-hivemall_3960cf2": {
        "bug_id": "incubator-hivemall_3960cf2",
        "commit": "https://github.com/apache/incubator-hivemall/commit/3960cf2cd591f1a371648a0576c2a80bbd50aba8",
        "file": [
            {
                "additions": 11,
                "blob_url": "https://github.com/apache/incubator-hivemall/blob/3960cf2cd591f1a371648a0576c2a80bbd50aba8/core/src/main/java/hivemall/tools/list/UDAFToOrderedList.java",
                "changes": 15,
                "contents_url": "https://api.github.com/repos/apache/incubator-hivemall/contents/core/src/main/java/hivemall/tools/list/UDAFToOrderedList.java?ref=3960cf2cd591f1a371648a0576c2a80bbd50aba8",
                "deletions": 4,
                "filename": "core/src/main/java/hivemall/tools/list/UDAFToOrderedList.java",
                "patch": "@@ -311,11 +311,11 @@ public Object terminatePartial(@SuppressWarnings(\"deprecation\") AggregationBuffe\n             QueueAggregationBuffer myagg = (QueueAggregationBuffer) agg;\n \n             Pair<List<Object>, List<Object>> tuples = myagg.drainQueue();\n-            List<Object> keyList = tuples.getKey();\n-            List<Object> valueList = tuples.getValue();\n-            if (valueList.isEmpty()) {\n+            if (tuples == null) {\n                 return null;\n             }\n+            List<Object> keyList = tuples.getKey();\n+            List<Object> valueList = tuples.getValue();\n \n             Object[] partialResult = new Object[4];\n             partialResult[0] = valueList;\n@@ -363,6 +363,9 @@ public void merge(@SuppressWarnings(\"deprecation\") AggregationBuffer agg, Object\n                 throws HiveException {\n             QueueAggregationBuffer myagg = (QueueAggregationBuffer) agg;\n             Pair<List<Object>, List<Object>> tuples = myagg.drainQueue();\n+            if (tuples == null) {\n+                return null;\n+            }\n             return tuples.getValue();\n         }\n \n@@ -404,8 +407,12 @@ void merge(@Nonnull List<Object> o_keyList, @Nonnull List<Object> o_valueList) {\n                 }\n             }\n \n-            @Nonnull\n+            @Nullable\n             Pair<List<Object>, List<Object>> drainQueue() {\n+                if (queueHandler == null) {\n+                    return null;\n+                }\n+\n                 int n = queueHandler.size();\n                 final Object[] keys = new Object[n];\n                 final Object[] values = new Object[n];",
                "raw_url": "https://github.com/apache/incubator-hivemall/raw/3960cf2cd591f1a371648a0576c2a80bbd50aba8/core/src/main/java/hivemall/tools/list/UDAFToOrderedList.java",
                "sha": "f17d1f4629aefcc34898eac5015cbaa861102440",
                "status": "modified"
            },
            {
                "additions": 39,
                "blob_url": "https://github.com/apache/incubator-hivemall/blob/3960cf2cd591f1a371648a0576c2a80bbd50aba8/core/src/test/java/hivemall/tools/list/UDAFToOrderedListTest.java",
                "changes": 39,
                "contents_url": "https://api.github.com/repos/apache/incubator-hivemall/contents/core/src/test/java/hivemall/tools/list/UDAFToOrderedListTest.java?ref=3960cf2cd591f1a371648a0576c2a80bbd50aba8",
                "deletions": 0,
                "filename": "core/src/test/java/hivemall/tools/list/UDAFToOrderedListTest.java",
                "patch": "@@ -339,4 +339,43 @@ public void testReverseTailKWithKey() throws Exception {\n         Assert.assertEquals(\"banana\", res.get(1));\n     }\n \n+    @Test\n+    public void testNullOnly() throws Exception {\n+        ObjectInspector[] inputOIs = new ObjectInspector[] {PrimitiveObjectInspectorFactory.javaDoubleObjectInspector};\n+\n+        final String[] values = new String[] {null, null, null};\n+\n+        evaluator.init(GenericUDAFEvaluator.Mode.PARTIAL1, inputOIs);\n+        evaluator.reset(agg);\n+\n+        for (int i = 0; i < values.length; i++) {\n+            evaluator.iterate(agg, new Object[] {values[i]});\n+        }\n+\n+        List<Object> res = evaluator.terminate(agg);\n+\n+        Assert.assertNull(res);\n+    }\n+\n+    @Test\n+    public void testNullMixed() throws Exception {\n+        ObjectInspector[] inputOIs = new ObjectInspector[] {PrimitiveObjectInspectorFactory.javaDoubleObjectInspector};\n+\n+        final String[] values = new String[] {\"banana\", \"apple\", null, \"candy\"};\n+\n+        evaluator.init(GenericUDAFEvaluator.Mode.PARTIAL1, inputOIs);\n+        evaluator.reset(agg);\n+\n+        for (int i = 0; i < values.length; i++) {\n+            evaluator.iterate(agg, new Object[] {values[i]});\n+        }\n+\n+        List<Object> res = evaluator.terminate(agg);\n+\n+        Assert.assertEquals(3, res.size());\n+        Assert.assertEquals(\"apple\", res.get(0));\n+        Assert.assertEquals(\"banana\", res.get(1));\n+        Assert.assertEquals(\"candy\", res.get(2));\n+    }\n+\n }",
                "raw_url": "https://github.com/apache/incubator-hivemall/raw/3960cf2cd591f1a371648a0576c2a80bbd50aba8/core/src/test/java/hivemall/tools/list/UDAFToOrderedListTest.java",
                "sha": "c7e9e701bc4e5b62185e8401826ea69bd6afd160",
                "status": "modified"
            }
        ],
        "message": "[HIVEMALL-157] Avoid Null Pointer Exception caused by uninitialized queue handler\n\n## What changes were proposed in this pull request?\n\nEven though `to_ordered_list` allows (and ignores) NULL inputs, following query fails due to NPE:\n\n```sql\nselect to_ordered_list(null, null)\n```\n> Null Pointer Exception\n\nThis PR fixes the problem; now, the function returns empty list in case that queue handler is uninitialized because of NULL inputs:\n\n> []\n\n## What type of PR is it?\n\nBug Fix\n\n## What is the Jira issue?\n\nhttps://issues.apache.org/jira/browse/HIVEMALL-157\n\n## How was this patch tested?\n\nManually tested on local and EMR Hive\n\n## Checklist\n\n- [x] Did you apply source code formatter, i.e., `mvn formatter:format`, for your commit?\n- [x] Did you run system tests on Hive (or Spark)?\n\nAuthor: Takuya Kitazawa <k.takuti@gmail.com>\n\nCloses #124 from takuti/fix-to_ordered_list-npe.",
        "parent": "https://github.com/apache/incubator-hivemall/commit/7b9e6bae691e746521242d0cb71270ede648e0f3",
        "repo": "incubator-hivemall",
        "unit_tests": [
            "UDAFToOrderedListTest.java"
        ]
    },
    "incubator-hivemall_5ff827d": {
        "bug_id": "incubator-hivemall_5ff827d",
        "commit": "https://github.com/apache/incubator-hivemall/commit/5ff827da3a57731b5ebc0a7a0763f025603fc2ab",
        "file": [
            {
                "additions": 4,
                "blob_url": "https://github.com/apache/incubator-hivemall/blob/5ff827da3a57731b5ebc0a7a0763f025603fc2ab/core/src/main/java/hivemall/tools/json/FromJsonUDF.java",
                "changes": 6,
                "contents_url": "https://api.github.com/repos/apache/incubator-hivemall/contents/core/src/main/java/hivemall/tools/json/FromJsonUDF.java?ref=5ff827da3a57731b5ebc0a7a0763f025603fc2ab",
                "deletions": 2,
                "filename": "core/src/main/java/hivemall/tools/json/FromJsonUDF.java",
                "patch": "@@ -20,6 +20,7 @@\n \n import hivemall.utils.hadoop.HiveUtils;\n import hivemall.utils.hadoop.JsonSerdeUtils;\n+import hivemall.utils.lang.ArrayUtils;\n import hivemall.utils.lang.ExceptionUtils;\n import hivemall.utils.lang.StringUtils;\n \n@@ -109,9 +110,10 @@ public ObjectInspector initialize(ObjectInspector[] argOIs) throws UDFArgumentEx\n             final ObjectInspector argOI2 = argOIs[2];\n             if (HiveUtils.isConstString(argOI2)) {\n                 String names = HiveUtils.getConstString(argOI2);\n-                this.columnNames = Arrays.asList(names.split(\",\"));\n+                this.columnNames = ArrayUtils.asKryoSerializableList(names.split(\",\"));\n             } else if (HiveUtils.isConstStringListOI(argOI2)) {\n-                this.columnNames = Arrays.asList(HiveUtils.getConstStringArray(argOI2));\n+                this.columnNames =\n+                        ArrayUtils.asKryoSerializableList(HiveUtils.getConstStringArray(argOI2));\n             } else {\n                 throw new UDFArgumentException(\"Expected `const array<string>` or `const string`\"\n                         + \" but got an unexpected OI type for the third argument: \" + argOI2);",
                "raw_url": "https://github.com/apache/incubator-hivemall/raw/5ff827da3a57731b5ebc0a7a0763f025603fc2ab/core/src/main/java/hivemall/tools/json/FromJsonUDF.java",
                "sha": "2a17f0c8a5056ecd77e8cdf688d37ff311a679e1",
                "status": "modified"
            },
            {
                "additions": 4,
                "blob_url": "https://github.com/apache/incubator-hivemall/blob/5ff827da3a57731b5ebc0a7a0763f025603fc2ab/core/src/main/java/hivemall/tools/json/ToJsonUDF.java",
                "changes": 7,
                "contents_url": "https://api.github.com/repos/apache/incubator-hivemall/contents/core/src/main/java/hivemall/tools/json/ToJsonUDF.java?ref=5ff827da3a57731b5ebc0a7a0763f025603fc2ab",
                "deletions": 3,
                "filename": "core/src/main/java/hivemall/tools/json/ToJsonUDF.java",
                "patch": "@@ -20,10 +20,10 @@\n \n import hivemall.utils.hadoop.HiveUtils;\n import hivemall.utils.hadoop.JsonSerdeUtils;\n+import hivemall.utils.lang.ArrayUtils;\n import hivemall.utils.lang.ExceptionUtils;\n import hivemall.utils.lang.StringUtils;\n \n-import java.util.Arrays;\n import java.util.List;\n \n import javax.annotation.Nullable;\n@@ -133,9 +133,10 @@ public ObjectInspector initialize(ObjectInspector[] argOIs) throws UDFArgumentEx\n             final ObjectInspector argOI1 = argOIs[1];\n             if (HiveUtils.isConstString(argOI1)) {\n                 String names = HiveUtils.getConstString(argOI1);\n-                this.columnNames = Arrays.asList(names.split(\",\"));\n+                this.columnNames = ArrayUtils.asKryoSerializableList(names.split(\",\"));\n             } else if (HiveUtils.isConstStringListOI(argOI1)) {\n-                this.columnNames = Arrays.asList(HiveUtils.getConstStringArray(argOI1));\n+                this.columnNames =\n+                        ArrayUtils.asKryoSerializableList(HiveUtils.getConstStringArray(argOI1));\n             } else {\n                 throw new UDFArgumentException(\"Expected `const array<string>` or `const string`\"\n                         + \" but got an unexpected OI type for the third argument: \" + argOI1);",
                "raw_url": "https://github.com/apache/incubator-hivemall/raw/5ff827da3a57731b5ebc0a7a0763f025603fc2ab/core/src/main/java/hivemall/tools/json/ToJsonUDF.java",
                "sha": "c37abe60b407b583ca355ee2493c15e90ea39dc5",
                "status": "modified"
            },
            {
                "additions": 13,
                "blob_url": "https://github.com/apache/incubator-hivemall/blob/5ff827da3a57731b5ebc0a7a0763f025603fc2ab/core/src/main/java/hivemall/utils/lang/ArrayUtils.java",
                "changes": 13,
                "contents_url": "https://api.github.com/repos/apache/incubator-hivemall/contents/core/src/main/java/hivemall/utils/lang/ArrayUtils.java?ref=5ff827da3a57731b5ebc0a7a0763f025603fc2ab",
                "deletions": 0,
                "filename": "core/src/main/java/hivemall/utils/lang/ArrayUtils.java",
                "patch": "@@ -21,6 +21,7 @@\n import hivemall.math.random.PRNG;\n \n import java.lang.reflect.Array;\n+import java.util.ArrayList;\n import java.util.Arrays;\n import java.util.List;\n import java.util.Random;\n@@ -750,4 +751,16 @@ public static int count(@Nonnull final int[] values, final int valueToFind) {\n         return ret;\n     }\n \n+    /**\n+     * Workaround for org.apache.hive.com.esotericsoftware.kryo.KryoException\n+     */\n+    @Nonnull\n+    public static List<String> asKryoSerializableList(@Nonnull final String[] array) {\n+        final List<String> list = new ArrayList<>(array.length);\n+        for (String e : array) {\n+            list.add(e);\n+        }\n+        return list;\n+    }\n+\n }",
                "raw_url": "https://github.com/apache/incubator-hivemall/raw/5ff827da3a57731b5ebc0a7a0763f025603fc2ab/core/src/main/java/hivemall/utils/lang/ArrayUtils.java",
                "sha": "1bce60311b2171660d61d4cd8c850f7363609443",
                "status": "modified"
            },
            {
                "additions": 9,
                "blob_url": "https://github.com/apache/incubator-hivemall/blob/5ff827da3a57731b5ebc0a7a0763f025603fc2ab/core/src/test/java/hivemall/tools/json/FromJsonUDFTest.java",
                "changes": 9,
                "contents_url": "https://api.github.com/repos/apache/incubator-hivemall/contents/core/src/test/java/hivemall/tools/json/FromJsonUDFTest.java?ref=5ff827da3a57731b5ebc0a7a0763f025603fc2ab",
                "deletions": 0,
                "filename": "core/src/test/java/hivemall/tools/json/FromJsonUDFTest.java",
                "patch": "@@ -91,4 +91,13 @@ public void testSerialization() throws HiveException, IOException {\n             new Object[] {\"[0.1,1.1,2.2]\"});\n     }\n \n+    @Test\n+    public void testSerializationThreeArgs() throws HiveException, IOException {\n+        TestUtils.testGenericUDFSerialization(FromJsonUDF.class,\n+            new ObjectInspector[] {PrimitiveObjectInspectorFactory.javaStringObjectInspector,\n+                    HiveUtils.getConstStringObjectInspector(\"struct<name:string,age:int>\"),\n+                    HiveUtils.getConstStringObjectInspector(\"person\")},\n+            new Object[] {\"{ \\\"person\\\" : { \\\"name\\\" : \\\"makoto\\\" , \\\"age\\\" : 37 } }\"});\n+    }\n+\n }",
                "raw_url": "https://github.com/apache/incubator-hivemall/raw/5ff827da3a57731b5ebc0a7a0763f025603fc2ab/core/src/test/java/hivemall/tools/json/FromJsonUDFTest.java",
                "sha": "46be75d3907dcb92f925456158a4714ce243d03a",
                "status": "modified"
            },
            {
                "additions": 11,
                "blob_url": "https://github.com/apache/incubator-hivemall/blob/5ff827da3a57731b5ebc0a7a0763f025603fc2ab/core/src/test/java/hivemall/tools/json/ToJsonUDFTest.java",
                "changes": 11,
                "contents_url": "https://api.github.com/repos/apache/incubator-hivemall/contents/core/src/test/java/hivemall/tools/json/ToJsonUDFTest.java?ref=5ff827da3a57731b5ebc0a7a0763f025603fc2ab",
                "deletions": 0,
                "filename": "core/src/test/java/hivemall/tools/json/ToJsonUDFTest.java",
                "patch": "@@ -19,6 +19,7 @@\n package hivemall.tools.json;\n \n import hivemall.TestUtils;\n+import hivemall.utils.hadoop.HiveUtils;\n import hivemall.utils.hadoop.WritableUtils;\n \n import java.io.IOException;\n@@ -62,4 +63,14 @@ public void testSerialization() throws HiveException, IOException {\n             new Object[] {Arrays.asList(0.1d, 1.1d, 2.1d)});\n     }\n \n+    @Test\n+    public void testSerializationTwoArgs() throws HiveException, IOException {\n+        TestUtils.testGenericUDFSerialization(ToJsonUDF.class,\n+            new ObjectInspector[] {\n+                    ObjectInspectorFactory.getStandardListObjectInspector(\n+                        PrimitiveObjectInspectorFactory.javaDoubleObjectInspector),\n+                    HiveUtils.getConstStringObjectInspector(\"person\")},\n+            new Object[] {Arrays.asList(0.1d, 1.1d, 2.1d)});\n+    }\n+\n }",
                "raw_url": "https://github.com/apache/incubator-hivemall/raw/5ff827da3a57731b5ebc0a7a0763f025603fc2ab/core/src/test/java/hivemall/tools/json/ToJsonUDFTest.java",
                "sha": "c2209e5eadd562113c62aa38487a917d7d676d69",
                "status": "modified"
            }
        ],
        "message": "[HIVEMALL-236] to_json/from_json cause KryoException/NullPointerException with ArrayList due to Kryo bug\n\n## What changes were proposed in this pull request?\n\nAvoid NPE in Kryo serialization of List object created by `Arrays.asList`.\n\n## What type of PR is it?\n\nBug Fix\n\n## What is the Jira issue?\n\nhttps://issues.apache.org/jira/browse/HIVEMALL-236\n\n## How was this patch tested?\n\nunit tests\n\n## Checklist\n\n(Please remove this section if not needed; check `x` for YES, blank for NO)\n\n- [x] Did you apply source code formatter, i.e., `./bin/format_code.sh`, for your commit?\n- [ ] Did you run system tests on Hive (or Spark)?\n\nAuthor: Makoto Yui <myui@apache.org>\n\nCloses #182 from myui/json_fix.",
        "parent": "https://github.com/apache/incubator-hivemall/commit/2e1104c1eeb4598ba5cc8e74dfba5d36699344f3",
        "repo": "incubator-hivemall",
        "unit_tests": [
            "FromJsonUDFTest.java",
            "ToJsonUDFTest.java",
            "ArrayUtilsTest.java"
        ]
    }
}