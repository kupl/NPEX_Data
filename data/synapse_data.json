[{"commit": "https://github.com/apache/synapse/commit/b936460239ac65f67a45c9260ed0144413b8d857", "parent": "https://github.com/apache/synapse/commit/efb44a54b57b008d25c1c2664b6bf65f84bee97a", "message": "Fixing an NPE\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/synapse/trunk@923200 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "synapse_1", "file": [{"additions": 13, "raw_url": "https://github.com/apache/synapse/raw/b936460239ac65f67a45c9260ed0144413b8d857/java/modules/core/src/main/java/org/apache/synapse/util/jaxp/DOOMResultBuilder.java", "blob_url": "https://github.com/apache/synapse/blob/b936460239ac65f67a45c9260ed0144413b8d857/java/modules/core/src/main/java/org/apache/synapse/util/jaxp/DOOMResultBuilder.java", "sha": "d2c385014afdae2846ba71bf1d77f9d7e9f4a4d0", "changes": 15, "status": "modified", "deletions": 2, "contents_url": "https://api.github.com/repos/apache/synapse/contents/java/modules/core/src/main/java/org/apache/synapse/util/jaxp/DOOMResultBuilder.java?ref=b936460239ac65f67a45c9260ed0144413b8d857", "patch": "@@ -56,8 +56,14 @@ public Result getResult() {\n     public OMElement getNode(Charset charset) {\n         // TODO: we need to support SOAPEnvelope\n         //       (not supported by the original code in XSLTMediator)\n-        return ElementHelper.importOMElement(\n-                (OMElement)document.getDocumentElement(), OMAbstractFactory.getOMFactory());\n+        if (document.getDocumentElement() != null) {\n+            return ElementHelper.importOMElement(\n+                    (OMElement) document.getDocumentElement(), OMAbstractFactory.getOMFactory());\n+        } else {\n+            handleException(\"Cannot find the Document Element\");\n+        }\n+\n+        return null;\n     }\n \n     public void release() {\n@@ -67,4 +73,9 @@ private static void handleException(String message, Throwable ex) {\n         log.error(message, ex);\n         throw new SynapseException(message, ex);\n     }\n+\n+    private static void handleException(String message) {\n+        log.error(message);\n+        throw new SynapseException(message);\n+    }\n }", "filename": "java/modules/core/src/main/java/org/apache/synapse/util/jaxp/DOOMResultBuilder.java"}], "repo": "synapse"}, {"commit": "https://github.com/apache/synapse/commit/02db9a51e47df41fadc57422b2d95c9ef4d958fc", "parent": "https://github.com/apache/synapse/commit/0952f2382bd0629963d59913867b875965bdeacf", "message": "Fixing a NPE\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/synapse/trunk@921278 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "synapse_2", "file": [{"additions": 4, "raw_url": "https://github.com/apache/synapse/raw/02db9a51e47df41fadc57422b2d95c9ef4d958fc/java/modules/core/src/main/java/org/apache/synapse/config/xml/MultiXMLConfigurationSerializer.java", "blob_url": "https://github.com/apache/synapse/blob/02db9a51e47df41fadc57422b2d95c9ef4d958fc/java/modules/core/src/main/java/org/apache/synapse/config/xml/MultiXMLConfigurationSerializer.java", "sha": "cc6400fa35b4ac77adf4b250dcede71f26dd7793", "changes": 4, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/synapse/contents/java/modules/core/src/main/java/org/apache/synapse/config/xml/MultiXMLConfigurationSerializer.java?ref=02db9a51e47df41fadc57422b2d95c9ef4d958fc", "patch": "@@ -125,6 +125,10 @@ private void markConfigurationForSerialization() throws IOException {\n         SynapseConfiguration synCfg = ServerManager.getInstance()\n                 .getServerContextInformation().getSynapseConfiguration();\n \n+        if (synCfg == null) {\n+            return;\n+        }\n+\n         for (SequenceMediator seq : synCfg.getDefinedSequences().values()) {\n             if (seq.getFileName() != null) {\n                 deploymentStore.addBackedUpArtifact((new File(rootDirectory,", "filename": "java/modules/core/src/main/java/org/apache/synapse/config/xml/MultiXMLConfigurationSerializer.java"}], "repo": "synapse"}, {"commit": "https://github.com/apache/synapse/commit/520c940e921e5146edf05df321e2aee6d3839424", "parent": "https://github.com/apache/synapse/commit/fa0a6157cdb521d22ffa5e546a69a703539ef76b", "message": "Fixing a NPE in the threading view\n\ngit-svn-id: https://svn.apache.org/repos/asf/synapse/trunk@1097346 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "synapse_3", "file": [{"additions": 2, "raw_url": "https://github.com/apache/synapse/raw/520c940e921e5146edf05df321e2aee6d3839424/java/modules/commons/src/main/java/org/apache/synapse/commons/jmx/ThreadingView.java", "blob_url": "https://github.com/apache/synapse/blob/520c940e921e5146edf05df321e2aee6d3839424/java/modules/commons/src/main/java/org/apache/synapse/commons/jmx/ThreadingView.java", "sha": "15f12c63d8c3fa1c1353d8d4cece9726c2e52d77", "changes": 4, "status": "modified", "deletions": 2, "contents_url": "https://api.github.com/repos/apache/synapse/contents/java/modules/commons/src/main/java/org/apache/synapse/commons/jmx/ThreadingView.java?ref=520c940e921e5146edf05df321e2aee6d3839424", "patch": "@@ -92,15 +92,15 @@ public Thread newThread(Runnable r) {\n     }\n \n     public ThreadingView(String threadNamePrefix, boolean periodicLogs, double alertMargin) {\n-        this.threadNamePrefix = threadNamePrefix;\n+        this(threadNamePrefix);\n+\n         this.periodicLogs = periodicLogs;\n         if (alertMargin > 0 && alertMargin < 100) {\n             this.alertMargin = alertMargin;\n         } else {\n             log.warn(\"Invalid alert margin for the thread group: \" + threadNamePrefix + \" - \" +\n                     \"Using default value\");\n         }\n-        initMBean();\n     }\n \n     public void destroy() {", "filename": "java/modules/commons/src/main/java/org/apache/synapse/commons/jmx/ThreadingView.java"}], "repo": "synapse"}, {"commit": "https://github.com/apache/synapse/commit/2d7ed0e1ad32b760eae2a7413e44a846a59c65c9", "parent": "https://github.com/apache/synapse/commit/77c175f01c095da7a5849a604aa492dcbd0df7eb", "message": "Fixing a possible NPE during local entry hot deployment\n\ngit-svn-id: https://svn.apache.org/repos/asf/synapse/trunk@1095925 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "synapse_4", "file": [{"additions": 1, "raw_url": "https://github.com/apache/synapse/raw/2d7ed0e1ad32b760eae2a7413e44a846a59c65c9/java/modules/core/src/main/java/org/apache/synapse/config/SynapseConfigUtils.java", "blob_url": "https://github.com/apache/synapse/blob/2d7ed0e1ad32b760eae2a7413e44a846a59c65c9/java/modules/core/src/main/java/org/apache/synapse/config/SynapseConfigUtils.java", "sha": "558ef608c39433cf84a49cd1e1fe6ab9fa81bd4c", "changes": 2, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/synapse/contents/java/modules/core/src/main/java/org/apache/synapse/config/SynapseConfigUtils.java?ref=2d7ed0e1ad32b760eae2a7413e44a846a59c65c9", "patch": "@@ -159,7 +159,7 @@ public static Object getObject(URL url, Properties properties) {\n                         log.debug(\"Can not open a connection to the URL with a path :\" +\n                                 path);\n                     }\n-                    String synapseHome = properties.get(SynapseConstants.SYNAPSE_HOME).toString();\n+                    String synapseHome = (String) properties.get(SynapseConstants.SYNAPSE_HOME);\n                     if (synapseHome != null) {\n                         if (log.isDebugEnabled()) {\n                             log.debug(\"Trying  to resolve an absolute path of the \" +", "filename": "java/modules/core/src/main/java/org/apache/synapse/config/SynapseConfigUtils.java"}], "repo": "synapse"}, {"commit": "https://github.com/apache/synapse/commit/32e275f8cc8d2112d71f4989cb2b2124ef2b68d4", "parent": "https://github.com/apache/synapse/commit/db0d05e53e180095212fa9b869696fbc500a0bad", "message": "Updated docs\nFixed a NPE in the iterate mediator\nUpdated config\n\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/synapse/trunk@1001445 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "synapse_5", "file": [{"additions": 6, "raw_url": "https://github.com/apache/synapse/raw/32e275f8cc8d2112d71f4989cb2b2124ef2b68d4/java/modules/core/src/main/java/org/apache/synapse/mediators/eip/splitter/IterateMediator.java", "blob_url": "https://github.com/apache/synapse/blob/32e275f8cc8d2112d71f4989cb2b2124ef2b68d4/java/modules/core/src/main/java/org/apache/synapse/mediators/eip/splitter/IterateMediator.java", "sha": "fcb7194b9ba1b4c99c44d832cd75d305298ed211", "changes": 8, "status": "modified", "deletions": 2, "contents_url": "https://api.github.com/repos/apache/synapse/contents/java/modules/core/src/main/java/org/apache/synapse/mediators/eip/splitter/IterateMediator.java?ref=32e275f8cc8d2112d71f4989cb2b2124ef2b68d4", "patch": "@@ -256,7 +256,9 @@ public void setTarget(Target target) {\n     public void init(SynapseEnvironment se) {\n         if (target != null) {\n             Endpoint endpoint = target.getEndpoint();\n-            endpoint.init(se);\n+            if (endpoint != null) {\n+                endpoint.init(se);\n+            }\n \n             ManagedLifecycle seq = target.getSequence();\n             if (seq != null) {\n@@ -268,7 +270,9 @@ public void init(SynapseEnvironment se) {\n     public void destroy() {\n         if (target != null) {\n             Endpoint endpoint = target.getEndpoint();\n-            endpoint.destroy();\n+            if (endpoint != null && endpoint.isInitialized()) {\n+                endpoint.destroy();\n+            }\n \n             ManagedLifecycle seq = target.getSequence();\n             if (seq != null) {", "filename": "java/modules/core/src/main/java/org/apache/synapse/mediators/eip/splitter/IterateMediator.java"}, {"additions": 7, "raw_url": "https://github.com/apache/synapse/raw/32e275f8cc8d2112d71f4989cb2b2124ef2b68d4/java/modules/samples/src/main/java/samples/userguide/JSONClient.java", "blob_url": "https://github.com/apache/synapse/blob/32e275f8cc8d2112d71f4989cb2b2124ef2b68d4/java/modules/samples/src/main/java/samples/userguide/JSONClient.java", "sha": "25fe855fcafc7c8d5381e595ea8ed5acdba70e75", "changes": 8, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/synapse/contents/java/modules/samples/src/main/java/samples/userguide/JSONClient.java?ref=32e275f8cc8d2112d71f4989cb2b2124ef2b68d4", "patch": "@@ -30,6 +30,7 @@\n import org.apache.axiom.om.OMElement;\n import org.apache.axiom.om.util.AXIOMUtil;\n \n+import javax.xml.namespace.QName;\n import java.io.File;\n import java.net.URL;\n \n@@ -98,7 +99,12 @@ public static void executeClient() throws Exception {\n                         \"</request></getQuote>\");\n \n         OMElement response = serviceClient.sendReceive(payload);\n-        System.out.println(\"Received response: \" + response);\n+        if (response.getLocalName().equals(\"getQuoteResponse\")) {\n+            OMElement last = response.getFirstElement().getFirstChildWithName(new QName(\"last\"));\n+            System.out.println(\"Standard :: Stock price = $\" + last.getText());\n+        } else {\n+            throw new Exception(\"Unexpected response : \" + response);\n+        }\n         Thread.sleep(1000);\n         if (configContext != null) {\n             configContext.terminate();", "filename": "java/modules/samples/src/main/java/samples/userguide/JSONClient.java"}, {"additions": 5, "raw_url": "https://github.com/apache/synapse/raw/32e275f8cc8d2112d71f4989cb2b2124ef2b68d4/java/repository/conf/axis2.xml", "blob_url": "https://github.com/apache/synapse/blob/32e275f8cc8d2112d71f4989cb2b2124ef2b68d4/java/repository/conf/axis2.xml", "sha": "56cf8c01d89893815a356575892aeefc65eac4f1", "changes": 5, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/synapse/contents/java/repository/conf/axis2.xml?ref=32e275f8cc8d2112d71f4989cb2b2124ef2b68d4", "patch": "@@ -136,6 +136,9 @@\n                          class=\"org.apache.synapse.format.hessian.HessianMessageFormatter\"/>-->\n         <!--<messageFormatter contentType=\"\"\n                          class=\"org.apache.synapse.format.hessian.HessianMessageFormatter\"/>-->\n+        <!--<messageFormatter contentType=\"application/json\"\n+                         class=\"org.apache.axis2.json.JSONMessageFormatter\"/>-->\n+\n     </messageFormatters>\n \n     <!-- ================================================= -->\n@@ -154,6 +157,8 @@\n                          class=\"org.apache.synapse.format.hessian.HessianMessageBuilder\"/>-->\n         <!--<messageBuilder contentType=\"\"\n                          class=\"org.apache.synapse.format.hessian.HessianMessageBuilder\"/>-->\n+        <!--<messageBuilder contentType=\"application/json\"\n+                         class=\"org.apache.axis2.json.JSONOMBuilder\"/>-->\n     </messageBuilders>\n \n     <!-- ================================================= -->", "filename": "java/repository/conf/axis2.xml"}, {"additions": 21, "raw_url": "https://github.com/apache/synapse/raw/32e275f8cc8d2112d71f4989cb2b2124ef2b68d4/java/src/site/xdoc/Synapse_Samples.xml", "blob_url": "https://github.com/apache/synapse/blob/32e275f8cc8d2112d71f4989cb2b2124ef2b68d4/java/src/site/xdoc/Synapse_Samples.xml", "sha": "e4a0e5c1ca1ae1e3ae3f7a4b5c50964eadde1596", "changes": 36, "status": "modified", "deletions": 15, "contents_url": "https://api.github.com/repos/apache/synapse/contents/java/src/site/xdoc/Synapse_Samples.xml?ref=32e275f8cc8d2112d71f4989cb2b2124ef2b68d4", "patch": "@@ -4025,8 +4025,9 @@ INFO LogMediator text = Stock price - 183.3635460215262</pre></div>\n <p>\n <strong>Objective: Use of both concurrency throttling and request rate based throttling </strong> </p>\n <p>\n-<strong>Prerequisites:</strong> Deploy the SimpleStockQuoteService in sample Axis2 server and start it on port 9000. </p>\n-<p>Start Synapse with the sample configuration 372 (i.e. synapse -sample 372). </p>\n+<strong>Prerequisites:</strong>\n+<br/>Deploy the SimpleStockQuoteService in sample Axis2 server and start it on port 9000\n+<br/>Start Synapse with the sample configuration 372 (i.e. synapse -sample 372)</p>\n <p>Throttle policy is loaded from the &#x201c;throttle_policy. xml&#x201d; . That policy contains merging policy from sample 370 and 371. To check the functionality, it requires to run a load test. The all enabled request from the concurrency throttling will be controlled by the access rate base throttling according to the policy. </p>\n <p>Run the client as follows </p>\n <pre xml:space=\"preserve\">ant stockquote -Daddurl=http://localhost:8280/services/StockQuoteProxy</pre>\n@@ -4336,8 +4337,9 @@ Discounted price: 138.77458254967408</pre>\n <p>\n <strong>Objective: Demonstrate the use of XQuery mediator to import external XML documents to the XQuery engine</strong> </p>\n <p>\n-<strong>Prerequisites:</strong>Deploy the SimpleStockQuoteService in sample Axis2 server and start it on port 9000. </p>\n-<p>Start Synapse with the sample configuration 391 (i.e. synapse -sample 391). </p>\n+<strong>Prerequisites:</strong>\n+<br/>Deploy the SimpleStockQuoteService in sample Axis2 server and start it on port 9000\n+<br/>Start Synapse with the sample configuration 391 (i.e. synapse -sample 391). </p>\n <p>In this sample, data from commission.xml document is used inside XQuery . The stock quote price from the response and commission from the commission.xml document will be added and given as a new price . </p>\n <p>Invoke the client as follows. </p>\n <pre xml:space=\"preserve\">ant stockquote -Daddurl=http://localhost:8280/services/StockQuoteProxy</pre>\n@@ -4379,8 +4381,9 @@ Discounted price: 138.77458254967408</pre>\n <p>\n <strong>Objective: Demonstrate the use of Iterate mediator to split the messages in to parts and process them asynchronously and then aggregate the responses coming in to Synapse</strong> </p>\n <p>\n-<strong>Prerequisites:</strong>Deploy the SimpleStockQuoteService in sample Axis2 server and start it on port 9000. </p>\n-<p>Start Synapse with the sample configuration 400 (i.e. synapse -sample 400). </p>\n+<strong>Prerequisites:</strong>\n+<br/>Deploy the SimpleStockQuoteService in sample Axis2 server and start it on port 9000\n+<br/>Start Synapse with the sample configuration 400 (i.e. synapse -sample 400). </p>\n <p>In this sample, the message sent to Synapse is comprised of a number of elements of the same type. When Synapse receives this message it will iterate through those elements and then will send to the specified endpoint. When all the responses appear to Synapse then those messages will be aggregated to form the resultant response and will send back to the client. </p>\n <p>Invoke the client as follows. </p>\n <pre xml:space=\"preserve\">ant stockquote -Daddurl=http://localhost:8280/services/SplitAggregateProxy -Ditr=4</pre>\n@@ -4409,15 +4412,16 @@ Discounted price: 138.77458254967408</pre>\n <p>\n <strong>Objective: Demonstrate the use of Cache mediator in order to cache the response and use that cached response as the response for an identical xml request</strong> </p>\n <p>\n-<strong>Prerequisites:</strong>Deploy the SimpleStockQuoteService in sample Axis2 server and start it on port 9000. </p>\n-<p>Start Synapse with the sample configuration 420 (i.e. synapse -sample 420). </p>\n+<strong>Prerequisites:</strong>\n+<br/>Deploy the SimpleStockQuoteService in sample Axis2 server and start it on port 9000\n+<br/>Start Synapse with the sample configuration 420 (i.e. synapse -sample 420)</p>\n <p>In this sample, the message sent to Synapse is checked for an existing cached response by calculating the hash value of the request. If there is a cache hit in Synapse then this request will not be forwarded to the actual service, rather Synapse responds to the client with the cached response. In case of a cache miss that particular message will be forwarded to the actual service and caches that response in the out path for the use of consecutive requests of the same type. </p>\n <p>To observe this behaviour, invoke the client as follows. </p>\n <pre xml:space=\"preserve\">ant stockquote -Dtrpurl=http://localhost:8280/</pre>\n <p>You could notice that if you send more than one requests within 20 seconds only the first request is forwarded to the actual service, and the rest of the requests will be served by the cache inside Synapse. You could observe this by looking at the printed line of the axis2 server, as well as by observing a constant rate as the response to the client instead of the random rate, which changes by each and every 20 seconds.\n <br/> </p>\n <h2>\n-<a name=\"Callout\" id=\"Callout\">Synchronize web service invocation with Callout mediator </a></h2>\n+<a name=\"Callout\" id=\"Callout\">Synchronous Web Services Invocations with the Callout Mediator</a></h2>\n <p>The Callout mediator calls the given service URL with the request message which is given by the source attribute, waits for the response and attaches the received response to the destination which is given by the target attribute. Both the source and the target can be a key or an XPath. In the case of the source, this key refers to either a message context property or to a local entry. For the target, this key refers to a message context property only. </p>\n <h2>\n <a name=\"Sample430\" id=\"Sample430\">Sample 430: Simple Callout Mediator for synchronizing web service invocation</a></h2>\n@@ -4441,8 +4445,9 @@ Discounted price: 138.77458254967408</pre>\n <p>\n <strong>Objective:</strong> Demonstrate the use of the callout mediator for the synchronized web service invocation </p>\n <p>\n-<strong>Prerequisites:</strong> Deploy the SimpleStockQuoteService in sample Axis2 server and start it on port 9000. </p>\n-<p>Start Synapse with the sample configuration 430 (i.e. synapse -sample 430). </p>\n+<strong>Prerequisites:</strong>\n+<br/>Deploy the SimpleStockQuoteService in sample Axis2 server and start it on port 9000\n+<br/>Start Synapse with the sample configuration 430 (i.e. synapse -sample 430)</p>\n <p>In this sample, the callout mediator does the direct service invocation to the StockQuoteService using the client request, gets the response and sets it as the first child of the SOAP message body. Then using the send mediator, the message is sent back to the client. </p>\n <p>Invoke the client as follows. </p>\n <pre xml:space=\"preserve\">ant stockquote -Daddurl=http://localhost:9000/services/SimpleStockQuoteService -Dtrpurl=http://localhost:8280/</pre></div>\n@@ -4500,10 +4505,11 @@ Discounted price: 138.77458254967408</pre>\n <p>\n <strong>Objective:</strong> Demonstrate the ability to switch between JSON and XML/SOAP content interchange formats</p>\n <p>\n-<strong>Prerequisites:</strong> Deploy the SimpleStockQuoteService in sample Axis2 server and start it on port 9000.</p>\n-<p>Setup Synapse and the sample Axis2 client for JSON (Refer <a href=\"Synapse_Samples_Setup.html#json\">Synapse Samples Setup Guide</a>\n-for details)</p>\n-<p>Start Synapse with the sample configuration 440 (i.e. synapse -sample 440). </p>\n+<strong>Prerequisites:</strong>\n+<br/>Deploy the SimpleStockQuoteService in sample Axis2 server and start it on port 9000\n+<br/>Setup Synapse and the sample Axis2 client for JSON (Refer <a href=\"Synapse_Samples_Setup.html#json\">Synapse Samples Setup Guide</a>\n+for details)\n+<br/>Start Synapse with the sample configuration 440 (i.e. synapse -sample 440)</p>\n <p>Invoke the JSON client as follows. </p>\n <pre xml:space=\"preserve\">ant jsonclient -Daddurl=http://localhost:9000/services/SimpleStockQuoteService -Dtrpurl=http://localhost:8280/services/JSONProxy</pre>\n <p>JSON client will send a stockquote request to Synapse using the JSON content interchange format. Synapse", "filename": "java/src/site/xdoc/Synapse_Samples.xml"}, {"additions": 2, "raw_url": "https://github.com/apache/synapse/raw/32e275f8cc8d2112d71f4989cb2b2124ef2b68d4/java/src/site/xdoc/Synapse_Samples_Setup.xml", "blob_url": "https://github.com/apache/synapse/blob/32e275f8cc8d2112d71f4989cb2b2124ef2b68d4/java/src/site/xdoc/Synapse_Samples_Setup.xml", "sha": "6fa8f3c7ff7507c48cd77c43176b12bca63fe7db", "changes": 4, "status": "modified", "deletions": 2, "contents_url": "https://api.github.com/repos/apache/synapse/contents/java/src/site/xdoc/Synapse_Samples_Setup.xml?ref=32e275f8cc8d2112d71f4989cb2b2124ef2b68d4", "patch": "@@ -775,12 +775,12 @@ SocketConnectPort=9876</pre>\n \n     <p>\n       <a href=\"http://json.org\">JSON</a> is a lightweight data-interchange format.\n-      It can be used as an alternative to the XML or SOAP. To enable the JSON support\n+      It can be used as an alternative to XML or SOAP. To enable the JSON support\n       in Synapse, following two jar files should be deployed into the 'lib' directory\n       of Synapse.\n     </p>\n     <ul>\n-        <li><a href=\"http://repo1.maven.org/maven2/org/apache/axis2/axis2-saaj\">axis2-saaj.jar</a></li>\n+        <li><a href=\"http://repo1.maven.org/maven2/org/apache/axis2/axis2-json\">axis2-json.jar</a></li>\n         <li><a href=\"http://jettison.codehaus.org/Download\">jettison.jar</a></li>\n     </ul>\n     <p>", "filename": "java/src/site/xdoc/Synapse_Samples_Setup.xml"}], "repo": "synapse"}, {"commit": "https://github.com/apache/synapse/commit/226193912f32d9d206130d3fdf8b663a0d12d1fc", "parent": "https://github.com/apache/synapse/commit/8410e267d8cbf6381ee3877e0d3a813430bc0c8e", "message": "Fixed NPE in VFS transport.\n\ngit-svn-id: https://svn.apache.org/repos/asf/synapse/trunk@948000 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "synapse_6", "file": [{"additions": 1, "raw_url": "https://github.com/apache/synapse/raw/226193912f32d9d206130d3fdf8b663a0d12d1fc/java/modules/transports/core/vfs/src/main/java/org/apache/synapse/transport/vfs/VFSTransportListener.java", "blob_url": "https://github.com/apache/synapse/blob/226193912f32d9d206130d3fdf8b663a0d12d1fc/java/modules/transports/core/vfs/src/main/java/org/apache/synapse/transport/vfs/VFSTransportListener.java", "sha": "f3e7219116596434b82d1771b7384b3550ceda53", "changes": 1, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/synapse/contents/java/modules/transports/core/vfs/src/main/java/org/apache/synapse/transport/vfs/VFSTransportListener.java?ref=226193912f32d9d206130d3fdf8b663a0d12d1fc", "patch": "@@ -120,6 +120,7 @@\n \n     @Override\n     protected void doInit() throws AxisFault {\n+        super.doInit();\n         try {\n             StandardFileSystemManager fsm = new StandardFileSystemManager();\n             fsm.setConfiguration(getClass().getClassLoader().getResource(\"providers.xml\"));", "filename": "java/modules/transports/core/vfs/src/main/java/org/apache/synapse/transport/vfs/VFSTransportListener.java"}], "repo": "synapse"}, {"commit": "https://github.com/apache/synapse/commit/4cd6962fe5d3e4540eb399967d01fb02772dcbcd", "parent": "https://github.com/apache/synapse/commit/e8f88929e6882cb2ff88cabdb21b33615cca5d64", "message": "Fixing some potential NPEs\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/synapse/trunk@920242 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "synapse_7", "file": [{"additions": 16, "raw_url": "https://github.com/apache/synapse/raw/4cd6962fe5d3e4540eb399967d01fb02772dcbcd/java/modules/transports/core/nhttp/src/main/java/org/apache/synapse/transport/nhttp/ClientHandler.java", "blob_url": "https://github.com/apache/synapse/blob/4cd6962fe5d3e4540eb399967d01fb02772dcbcd/java/modules/transports/core/nhttp/src/main/java/org/apache/synapse/transport/nhttp/ClientHandler.java", "sha": "76ff554902468fe92356a65d9b81bd4ad70faefd", "changes": 22, "status": "modified", "deletions": 6, "contents_url": "https://api.github.com/repos/apache/synapse/contents/java/modules/transports/core/nhttp/src/main/java/org/apache/synapse/transport/nhttp/ClientHandler.java?ref=4cd6962fe5d3e4540eb399967d01fb02772dcbcd", "patch": "@@ -487,8 +487,11 @@ public void inputReady(final NHttpClientConnection conn, final ContentDecoder de\n             }\n \n             if (decoder.isCompleted()) {\n-                ((ClientConnectionDebug) conn.getContext().getAttribute(CLIENT_CONNECTION_DEBUG)).\n-                    recordResponseCompletionTime();\n+                ClientConnectionDebug ccd = (ClientConnectionDebug)\n+                        conn.getContext().getAttribute(CLIENT_CONNECTION_DEBUG);\n+                if (ccd != null) {\n+                    ccd.recordResponseCompletionTime();\n+                }\n                 \n                 if (metrics != null) {\n                     if (metrics.getLevel() == MetricsCollector.LEVEL_FULL) {\n@@ -558,8 +561,12 @@ public void outputReady(final NHttpClientConnection conn, final ContentEncoder e\n                 } else {\n                     metrics.incrementBytesSent(bytesWritten);\n                 }\n-                ((ClientConnectionDebug) context.getAttribute(\n-                        CLIENT_CONNECTION_DEBUG)).recordRequestCompletionTime();\n+\n+                ClientConnectionDebug ccd = (ClientConnectionDebug)\n+                        context.getAttribute(CLIENT_CONNECTION_DEBUG);\n+                if (ccd != null) {\n+                    ccd.recordRequestCompletionTime();\n+                }\n             }\n \n         } catch (IOException e) {\n@@ -595,8 +602,11 @@ public void responseReceived(final NHttpClientConnection conn) {\n             return;\n         }\n \n-        ((ClientConnectionDebug) conn.getContext().getAttribute(CLIENT_CONNECTION_DEBUG)).\n-                recordResponseStartTime(response.getStatusLine().toString());\n+        ClientConnectionDebug ccd = (ClientConnectionDebug) \n+                conn.getContext().getAttribute(CLIENT_CONNECTION_DEBUG);\n+        if (ccd != null) {\n+            ccd.recordResponseStartTime(response.getStatusLine().toString());\n+        }\n \n         // Have we sent out our request fully in the first place? if not, forget about it now..\n         Axis2HttpRequest req", "filename": "java/modules/transports/core/nhttp/src/main/java/org/apache/synapse/transport/nhttp/ClientHandler.java"}], "repo": "synapse"}, {"commit": "https://github.com/apache/synapse/commit/e488a7a7d615707b9d1a7b465d87ca5580d27da4", "parent": "https://github.com/apache/synapse/commit/6459049dfe8a902d9958458f5f46e74a27ff4043", "message": "fix NPE if call toString\n\ngit-svn-id: https://svn.apache.org/repos/asf/synapse/trunk@788924 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "synapse_8", "file": [{"additions": 2, "raw_url": "https://github.com/apache/synapse/raw/e488a7a7d615707b9d1a7b465d87ca5580d27da4/java/modules/core/src/main/java/org/apache/synapse/aspects/statistics/view/InOutStatisticsView.java", "blob_url": "https://github.com/apache/synapse/blob/e488a7a7d615707b9d1a7b465d87ca5580d27da4/java/modules/core/src/main/java/org/apache/synapse/aspects/statistics/view/InOutStatisticsView.java", "sha": "b516e96f4b132aedfd46538c38411e160ba1e6f9", "changes": 4, "status": "modified", "deletions": 2, "contents_url": "https://api.github.com/repos/apache/synapse/contents/java/modules/core/src/main/java/org/apache/synapse/aspects/statistics/view/InOutStatisticsView.java?ref=e488a7a7d615707b9d1a7b465d87ca5580d27da4", "patch": "@@ -37,7 +37,7 @@ public InOutStatisticsView(String id, String owner, ComponentType type) {\n         this.componentType = type;\r\n         this.inStatistics = new Statistics(id);\r\n         // endpoints doesn't contain an out view since it is just sending the message to one side\r\n-        if (type.equals(ComponentType.ENDPOINT)) {\r\n+        if (ComponentType.ENDPOINT.equals(type)) {\r\n             this.outStatistics = null;\r\n         } else {\r\n             this.outStatistics = new Statistics(id);\r\n@@ -76,7 +76,7 @@ public String toString() {\n                     .append(inStatistics.toString()).append(\" ]\");\r\n         }\r\n \r\n-        if (outStatistics.getCount() != 0) {\r\n+        if (outStatistics != null && outStatistics.getCount() != 0) {\r\n             sb.append(\"[ OutFlow :  \").append(outStatistics.toString()).append(\" ]\");\r\n         }\r\n         return sb.toString();\r", "filename": "java/modules/core/src/main/java/org/apache/synapse/aspects/statistics/view/InOutStatisticsView.java"}], "repo": "synapse"}, {"commit": "https://github.com/apache/synapse/commit/daf365a7edb1b616ba1fd7afe944fef64f2fef4c", "parent": "https://github.com/apache/synapse/commit/9cb8b8c4c226e9d1e44edb41f917bf5ad3c867e9", "message": "fix NPE and update mail sender name\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/synapse/trunk@758760 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "synapse_9", "file": [{"additions": 0, "raw_url": "https://github.com/apache/synapse/raw/daf365a7edb1b616ba1fd7afe944fef64f2fef4c/java/modules/transports/src/main/java/org/apache/synapse/transport/nhttp/ServerHandler.java", "blob_url": "https://github.com/apache/synapse/blob/daf365a7edb1b616ba1fd7afe944fef64f2fef4c/java/modules/transports/src/main/java/org/apache/synapse/transport/nhttp/ServerHandler.java", "sha": "0143ebff9016d169600f3047938ceec6f8d9ac42", "changes": 1, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/synapse/contents/java/modules/transports/src/main/java/org/apache/synapse/transport/nhttp/ServerHandler.java?ref=daf365a7edb1b616ba1fd7afe944fef64f2fef4c", "patch": "@@ -220,7 +220,6 @@ public void outputReady(final NHttpServerConnection conn, final ContentEncoder e\n                 } else if (!connStrategy.keepAlive(response, context)) {\n                     conn.close();\n                 } else {\n-                    conn.resetOutput();\n                     conn.requestInput();\n                 }\n             }", "filename": "java/modules/transports/src/main/java/org/apache/synapse/transport/nhttp/ServerHandler.java"}, {"additions": 1, "raw_url": "https://github.com/apache/synapse/raw/daf365a7edb1b616ba1fd7afe944fef64f2fef4c/java/repository/conf/axis2.xml", "blob_url": "https://github.com/apache/synapse/blob/daf365a7edb1b616ba1fd7afe944fef64f2fef4c/java/repository/conf/axis2.xml", "sha": "378e5ad2ec2ce7bedf41a64516e997b45bb51759", "changes": 2, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/synapse/contents/java/repository/conf/axis2.xml?ref=daf365a7edb1b616ba1fd7afe944fef64f2fef4c", "patch": "@@ -272,7 +272,7 @@\n \n     <!-- Uncomment and configure the SMTP server information\n     check com.sun.mail.smtp package documentation for descriptions of properties\n-    <transportSender name=\"mailto\" class=\"org.apache.synapse.transport.mail.MailTransportSender\">\n+    <transportSender name=\"mailto\" class=\"org.apache.axis2.transport.mail.MailTransportSender\">\n         <parameter name=\"mail.smtp.host\">smtp.gmail.com</parameter>\n         <parameter name=\"mail.smtp.port\">587</parameter>\n         <parameter name=\"mail.smtp.starttls.enable\">true</parameter>", "filename": "java/repository/conf/axis2.xml"}], "repo": "synapse"}, {"commit": "https://github.com/apache/synapse/commit/bdf82063e156e41922e6f775412c3e9faaa843f5", "parent": "https://github.com/apache/synapse/commit/f2b03b482b89707dc132441a3a3a6a7de7ca89ed", "message": "commit possible NPE with anonymous endpoints\n\ngit-svn-id: https://svn.apache.org/repos/asf/synapse/trunk@757980 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "synapse_10", "file": [{"additions": 3, "raw_url": "https://github.com/apache/synapse/raw/bdf82063e156e41922e6f775412c3e9faaa843f5/java/modules/core/src/main/java/org/apache/synapse/endpoints/AddressEndpoint.java", "blob_url": "https://github.com/apache/synapse/blob/bdf82063e156e41922e6f775412c3e9faaa843f5/java/modules/core/src/main/java/org/apache/synapse/endpoints/AddressEndpoint.java", "sha": "6bc06416a333d2afee189b13f969c14243b18c48", "changes": 4, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/synapse/contents/java/modules/core/src/main/java/org/apache/synapse/endpoints/AddressEndpoint.java?ref=bdf82063e156e41922e6f775412c3e9faaa843f5", "patch": "@@ -46,7 +46,9 @@ public void onFault(MessageContext synCtx) {\n     }\n \n     public void onSuccess() {\n-        getContext().onSuccess();\n+        if (getContext() != null) {\n+            getContext().onSuccess();\n+        }\n     }\n \n     public void send(MessageContext synCtx) {", "filename": "java/modules/core/src/main/java/org/apache/synapse/endpoints/AddressEndpoint.java"}], "repo": "synapse"}, {"commit": "https://github.com/apache/synapse/commit/31fc716053abc066e953d7e8dda46c6a2491d595", "parent": "https://github.com/apache/synapse/commit/f68d4de23866b4064c75ec430e49ed30b5a52897", "message": "prevent a possible NPE\n\ngit-svn-id: https://svn.apache.org/repos/asf/synapse/trunk@753157 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "synapse_11", "file": [{"additions": 1, "raw_url": "https://github.com/apache/synapse/raw/31fc716053abc066e953d7e8dda46c6a2491d595/java/modules/transports/src/main/java/org/apache/synapse/transport/nhttp/HttpCoreNIOSender.java", "blob_url": "https://github.com/apache/synapse/blob/31fc716053abc066e953d7e8dda46c6a2491d595/java/modules/transports/src/main/java/org/apache/synapse/transport/nhttp/HttpCoreNIOSender.java", "sha": "e31033e1095b3ae5a2cc404c8cce4817602347ca", "changes": 2, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/synapse/contents/java/modules/transports/src/main/java/org/apache/synapse/transport/nhttp/HttpCoreNIOSender.java?ref=31fc716053abc066e953d7e8dda46c6a2491d595", "patch": "@@ -96,7 +96,7 @@\n     /** The proxy port */\n     private int proxyPort = 80;\n     /** The list of hosts for which the proxy should be bypassed */\n-    private String[] proxyBypassList = null;\n+    private String[] proxyBypassList = new String[0];\n     /** The list of known hosts to bypass proxy */\n     private List<String> knownDirectHosts = new ArrayList<String>();\n     /** The list of known hosts to go via proxy */", "filename": "java/modules/transports/src/main/java/org/apache/synapse/transport/nhttp/HttpCoreNIOSender.java"}], "repo": "synapse"}, {"commit": "https://github.com/apache/synapse/commit/665f270c4582d54a609f76e6c9cb948b063349ee", "parent": "https://github.com/apache/synapse/commit/060dd405fc219a63c2c3956ed813656fc4fa2fdb", "message": "fix NPE getting callback count\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/synapse/trunk@651526 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "synapse_12", "file": [{"additions": 5, "raw_url": "https://github.com/apache/synapse/raw/665f270c4582d54a609f76e6c9cb948b063349ee/java/modules/core/src/main/java/org/apache/synapse/ServerManager.java", "blob_url": "https://github.com/apache/synapse/blob/665f270c4582d54a609f76e6c9cb948b063349ee/java/modules/core/src/main/java/org/apache/synapse/ServerManager.java", "sha": "e66b60ccfe7ad1f5134eed37ed748584309c389c", "changes": 6, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/synapse/contents/java/modules/core/src/main/java/org/apache/synapse/ServerManager.java?ref=665f270c4582d54a609f76e6c9cb948b063349ee", "patch": "@@ -279,7 +279,11 @@ public void setCallbackStore(Map callbackStore) {\n      * @return the number of callbacks (messages) waiting for responses\n      */\n     public int pendingCallbacks() {\n-        return callbackStore.size();\n+        if (callbackStore != null) {\n+            return callbackStore.size();\n+        } else {\n+            return 0;\n+        }\n     }\n \n     private static final class URLStreamHandlerFactoryImpl implements URLStreamHandlerFactory {", "filename": "java/modules/core/src/main/java/org/apache/synapse/ServerManager.java"}], "repo": "synapse"}, {"commit": "https://github.com/apache/synapse/commit/a84e85f46ea045bc4205daba27765f42705aaf02", "parent": "https://github.com/apache/synapse/commit/3ee12ded1107f4292d2394b60fb2cd13721a0c2c", "message": "fixed NPE issue in throttle mediator\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/synapse/trunk@592020 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "synapse_13", "file": [{"additions": 25, "raw_url": "https://github.com/apache/synapse/raw/a84e85f46ea045bc4205daba27765f42705aaf02/java/modules/extensions/src/main/java/org/apache/synapse/mediators/throttle/ThrottleMediator.java", "blob_url": "https://github.com/apache/synapse/blob/a84e85f46ea045bc4205daba27765f42705aaf02/java/modules/extensions/src/main/java/org/apache/synapse/mediators/throttle/ThrottleMediator.java", "sha": "161a232f9996e330345ba9a2f9bfde431bcc09fa", "changes": 48, "status": "modified", "deletions": 23, "contents_url": "https://api.github.com/repos/apache/synapse/contents/java/modules/extensions/src/main/java/org/apache/synapse/mediators/throttle/ThrottleMediator.java?ref=a84e85f46ea045bc4205daba27765f42705aaf02", "patch": "@@ -352,32 +352,34 @@ private synchronized void createThrottleMetaData(OMElement policy,\n                 }\n             }\n \n-            includesIPThrottling = (\n-                throttle.getThrottleContext(ThrottleConstants.IP_BASED_THROTTLE_KEY) != null);\n+            if (throttle != null) {\n \n-            if (id != null) {\n-                concurrentAccessController = throttle.getConcurrentAccessController();\n-                concurrentLimit = concurrentAccessController.getLimit();\n+                includesIPThrottling = (\n+                    throttle.getThrottleContext(ThrottleConstants.IP_BASED_THROTTLE_KEY) != null);\n \n-                if (traceOrDebugOn) {\n-                    traceOrDebug(traceOn,\n-                        \"Initiating ConcurrentAccessControler for throttle group id : \" + id\n-                            + \" limit : \" + concurrentLimit);\n-                }\n-                \n-                org.apache.axis2.context.MessageContext axis2MessageContext\n-                    = ((Axis2MessageContext) synCtx).getAxis2MessageContext();\n-                ConfigurationContext configctx = axis2MessageContext.getConfigurationContext();\n-                Map accessContollers = (Map) configctx.getProperty(KEY);\n+                if (id != null) {\n+                    concurrentAccessController = throttle.getConcurrentAccessController();\n \n-                if(accessContollers == null){\n-                    accessContollers = new HashMap();\n-                    configctx.setProperty(KEY,accessContollers);\n-                }\n-                if (concurrentAccessController == null) {\n-                    accessContollers.remove(id);\n-                } else {\n-                    accessContollers.put(id, concurrentAccessController);\n+                    org.apache.axis2.context.MessageContext axis2MessageContext\n+                        = ((Axis2MessageContext) synCtx).getAxis2MessageContext();\n+                    ConfigurationContext configctx = axis2MessageContext.getConfigurationContext();\n+                    Map accessContollers = (Map) configctx.getProperty(KEY);\n+\n+                    if (accessContollers == null) {\n+                        accessContollers = new HashMap();\n+                        configctx.setProperty(KEY, accessContollers);\n+                    }\n+                    if (concurrentAccessController == null) {\n+                        accessContollers.remove(id);\n+                    } else {\n+                        concurrentLimit = concurrentAccessController.getLimit();\n+                        if (traceOrDebugOn) {\n+                            traceOrDebug(traceOn,\n+                                \"Initiating ConcurrentAccessControler for throttle group id : \" + id\n+                                    + \" limit : \" + concurrentLimit);\n+                        }\n+                        accessContollers.put(id, concurrentAccessController);\n+                    }\n                 }\n             }\n         }", "filename": "java/modules/extensions/src/main/java/org/apache/synapse/mediators/throttle/ThrottleMediator.java"}], "repo": "synapse"}, {"commit": "https://github.com/apache/synapse/commit/a825d7d443b2b72c12934d9fad918dc9585014d4", "parent": "https://github.com/apache/synapse/commit/4133c8a4f34a3aa7ae17cca80f7cf112a0bf2553", "message": "fixed the NPE when creating WSDL EP from wrong uri\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/synapse/trunk@587462 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "synapse_14", "file": [{"additions": 19, "raw_url": "https://github.com/apache/synapse/raw/a825d7d443b2b72c12934d9fad918dc9585014d4/java/modules/core/src/main/java/org/apache/synapse/config/xml/endpoints/WSDLEndpointFactory.java", "blob_url": "https://github.com/apache/synapse/blob/a825d7d443b2b72c12934d9fad918dc9585014d4/java/modules/core/src/main/java/org/apache/synapse/config/xml/endpoints/WSDLEndpointFactory.java", "sha": "ef7607e002c3220c12b3dae5e737e54b39036d93", "changes": 33, "status": "modified", "deletions": 14, "contents_url": "https://api.github.com/repos/apache/synapse/contents/java/modules/core/src/main/java/org/apache/synapse/config/xml/endpoints/WSDLEndpointFactory.java?ref=a825d7d443b2b72c12934d9fad918dc9585014d4", "patch": "@@ -28,6 +28,7 @@\n import org.apache.axiom.om.OMElement;\n import org.apache.axiom.om.OMAttribute;\n import org.apache.axiom.om.OMNode;\n+import org.apache.axiom.om.OMNamespace;\n import org.apache.commons.logging.Log;\n import org.apache.commons.logging.LogFactory;\n import org.apache.axis2.description.WSDL2Constants;\n@@ -124,23 +125,27 @@ public Endpoint createEndpoint(OMElement epConfig, boolean anonymousEndpoint) {\n             wsdlEndpoint.setPortName(portName);\n \n             if (wsdlURI != null) {\n-                wsdlEndpoint.setWsdlURI(wsdlURI.trim());\n \n+                wsdlEndpoint.setWsdlURI(wsdlURI.trim());\n                 try {\n-                    String ns = SynapseConfigUtils.getOMElementFromURL(new URL(wsdlURI).toString())\n-                        .getNamespace().getNamespaceURI();\n-\n-                    if (org.apache.axis2.namespace.Constants.NS_URI_WSDL11.equals(ns)) {\n-                        endpoint = new WSDL11EndpointBuilder().\n-                                createEndpointDefinitionFromWSDL(wsdlURI, serviceName, portName);\n-\n-                    } else if (WSDL2Constants.WSDL_NAMESPACE.equals(ns)) {\n-                        //endpoint = new WSDL20EndpointBuilder().\n-                        //        createEndpointDefinitionFromWSDL(wsdlURI, serviceName, portName);\n-\n-                        handleException(\"WSDL 2.0 Endpoints are currently not supported\");\n+                    OMElement wsdlOM = SynapseConfigUtils.getOMElementFromURL(\n+                        new URL(wsdlURI).toString());\n+                    if (wsdlOM != null) {\n+                        OMNamespace ns = wsdlOM.getNamespace();\n+                        if (ns != null) {\n+                            String nsUri = wsdlOM.getNamespace().getNamespaceURI();\n+                            if (org.apache.axis2.namespace.Constants.NS_URI_WSDL11.equals(nsUri)) {\n+                                endpoint = new WSDL11EndpointBuilder().\n+                                    createEndpointDefinitionFromWSDL(wsdlOM, serviceName, portName);\n+\n+                            } else if (WSDL2Constants.WSDL_NAMESPACE.equals(nsUri)) {\n+                                //endpoint = new WSDL20EndpointBuilder().\n+                                //        createEndpointDefinitionFromWSDL(wsdlURI, serviceName, portName);\n+\n+                                handleException(\"WSDL 2.0 Endpoints are currently not supported\");\n+                            }\n+                        }\n                     }\n-\n                 } catch (Exception e) {\n                     handleException(\"Couldn't create endpoint from the given WSDL URI : \"\n                         + e.getMessage(), e);", "filename": "java/modules/core/src/main/java/org/apache/synapse/config/xml/endpoints/WSDLEndpointFactory.java"}, {"additions": 1, "raw_url": "https://github.com/apache/synapse/raw/a825d7d443b2b72c12934d9fad918dc9585014d4/java/repository/conf/sample/synapse_sample_200.xml", "blob_url": "https://github.com/apache/synapse/blob/a825d7d443b2b72c12934d9fad918dc9585014d4/java/repository/conf/sample/synapse_sample_200.xml", "sha": "a6238011c428b3aa5996f5e9d041a35012ef74bf", "changes": 2, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/synapse/contents/java/repository/conf/sample/synapse_sample_200.xml?ref=a825d7d443b2b72c12934d9fad918dc9585014d4", "patch": "@@ -37,7 +37,7 @@\n                 <property name=\"text\"\n                           value=\"** Looking up from the Database **\"/>\n             </log>\n-            <dblookup xmlns=\"http://ws.apache.org/ns/synapse\">\n+            <dblookup>\n                 <connection>\n                     <pool>\n                         <driver>org.apache.derby.jdbc.ClientDriver</driver>", "filename": "java/repository/conf/sample/synapse_sample_200.xml"}, {"additions": 1, "raw_url": "https://github.com/apache/synapse/raw/a825d7d443b2b72c12934d9fad918dc9585014d4/java/repository/conf/sample/synapse_sample_201.xml", "blob_url": "https://github.com/apache/synapse/blob/a825d7d443b2b72c12934d9fad918dc9585014d4/java/repository/conf/sample/synapse_sample_201.xml", "sha": "a08910dfb1255f9b9d05b4190479a6b605dc27e3", "changes": 2, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/synapse/contents/java/repository/conf/sample/synapse_sample_201.xml?ref=a825d7d443b2b72c12934d9fad918dc9585014d4", "patch": "@@ -33,7 +33,7 @@\n                 <property name=\"text\"\n                           value=\"** Reporting to the Database **\"/>\n             </log>\n-            <dbreport xmlns=\"http://ws.apache.org/ns/synapse\">\n+            <dbreport>\n                 <connection>\n                     <pool>\n                         <driver>org.apache.derby.jdbc.ClientDriver</driver>", "filename": "java/repository/conf/sample/synapse_sample_201.xml"}, {"additions": 2, "raw_url": "https://github.com/apache/synapse/raw/a825d7d443b2b72c12934d9fad918dc9585014d4/java/repository/conf/sample/synapse_sample_202.xml", "blob_url": "https://github.com/apache/synapse/blob/a825d7d443b2b72c12934d9fad918dc9585014d4/java/repository/conf/sample/synapse_sample_202.xml", "sha": "9bca6c26b0a016c4002c0b4339b755c06e05c1bd", "changes": 4, "status": "modified", "deletions": 2, "contents_url": "https://api.github.com/repos/apache/synapse/contents/java/repository/conf/sample/synapse_sample_202.xml?ref=a825d7d443b2b72c12934d9fad918dc9585014d4", "patch": "@@ -34,7 +34,7 @@\n                           value=\"** Reporting to the Database **\"/>\n             </log>\n \n-            <dbreport xmlns=\"http://ws.apache.org/ns/synapse\">\n+            <dbreport>\n                 <connection>\n                     <pool>\n                         <driver>org.apache.derby.jdbc.ClientDriver</driver>\n@@ -55,7 +55,7 @@\n                 <property name=\"text\"\n                           value=\"** Looking up from the Database **\"/>\n             </log>\n-            <dblookup xmlns=\"http://ws.apache.org/ns/synapse\">\n+            <dblookup>\n                 <connection>\n                     <pool>\n                         <driver>org.apache.derby.jdbc.ClientDriver</driver>", "filename": "java/repository/conf/sample/synapse_sample_202.xml"}], "repo": "synapse"}, {"commit": "https://github.com/apache/synapse/commit/b7e5c69c1482d1cc832c68dab7225d06aa877a90", "parent": "https://github.com/apache/synapse/commit/07c4fa6c498c250e49edc3acc6cfbf5b5e7fc4d0", "message": "documents for throttle,xquery \nNPE fixed for Xquery\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/synapse/trunk@585416 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "synapse_15", "file": [{"additions": 20, "raw_url": "https://github.com/apache/synapse/raw/b7e5c69c1482d1cc832c68dab7225d06aa877a90/java/modules/extensions/src/main/java/org/apache/synapse/mediators/xquery/XQueryMediator.java", "blob_url": "https://github.com/apache/synapse/blob/b7e5c69c1482d1cc832c68dab7225d06aa877a90/java/modules/extensions/src/main/java/org/apache/synapse/mediators/xquery/XQueryMediator.java", "sha": "6c37c536e7cd5293e8f56ced71e85774a7f0c2d6", "changes": 29, "status": "modified", "deletions": 9, "contents_url": "https://api.github.com/repos/apache/synapse/contents/java/modules/extensions/src/main/java/org/apache/synapse/mediators/xquery/XQueryMediator.java?ref=b7e5c69c1482d1cc832c68dab7225d06aa877a90", "patch": "@@ -206,16 +206,27 @@ private void performQuery(MessageContext synCtx, boolean traceOrDebugOn, boolean\n                         querySource = (String) o;\n                     }\n \n-                    if (traceOrDebugOn) {\n-                        traceOrDebug(traceOn, \"Picked up the xquery source \" + querySource\n-                            + \"from the key \" + queryKey);\n-                        traceOrDebug(traceOn, \"Prepare an expression for the query \");\n-                    }\n+                    if (querySource != null) {\n+\n+                        if (traceOrDebugOn) {\n+                            traceOrDebug(traceOn, \"Picked up the xquery source \" + querySource\n+                                + \"from the key \" + queryKey);\n+                            traceOrDebug(traceOn, \"Prepare an expression for the query \");\n+                        }\n \n-                    //create an XQPreparedExpression using the query source\n-                    cachedPreparedExpression = cachedConnection.prepareExpression(querySource);\n-                    // need binding because the expression just has recreated\n-                    needBind = true;\n+                        //create an XQPreparedExpression using the query source\n+                        cachedPreparedExpression = cachedConnection.prepareExpression(querySource);\n+                        // need binding because the expression just has recreated\n+                        needBind = true;\n+\n+                    } else {\n+\n+                        if (traceOrDebugOn) {\n+                            traceOrDebug(traceOn, \"Couldn't find the xquery source with a key \"\n+                                + queryKey);\n+                        }\n+                        return;\n+                    }\n                 }\n \n                 //Bind the external variables to the DynamicContext", "filename": "java/modules/extensions/src/main/java/org/apache/synapse/mediators/xquery/XQueryMediator.java"}, {"additions": 1, "raw_url": "https://github.com/apache/synapse/raw/b7e5c69c1482d1cc832c68dab7225d06aa877a90/java/repository/conf/sample/synapse_sample_700.xml", "blob_url": "https://github.com/apache/synapse/blob/b7e5c69c1482d1cc832c68dab7225d06aa877a90/java/repository/conf/sample/synapse_sample_700.xml", "sha": "121083251e9f44349bc94791be43e10c708b1053", "changes": 2, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/synapse/contents/java/repository/conf/sample/synapse_sample_700.xml?ref=b7e5c69c1482d1cc832c68dab7225d06aa877a90", "patch": "@@ -16,7 +16,7 @@\n   ~  specific language governing permissions and limitations\n   ~  under the License.\n   -->\n-        <!-- introduction to URL source properties, registry based properties and the XSLT mediator -->\n+        <!-- introduction to URL source properties, registry based properties and the XQuery mediator -->\n <definitions xmlns=\"http://ws.apache.org/ns/synapse\">\n \n     <!-- the SimpleURLRegistry allows access to a URL based registry (e.g. file:/// or http://) -->", "filename": "java/repository/conf/sample/synapse_sample_700.xml"}, {"additions": 1, "raw_url": "https://github.com/apache/synapse/raw/b7e5c69c1482d1cc832c68dab7225d06aa877a90/java/repository/conf/sample/synapse_sample_701.xml", "blob_url": "https://github.com/apache/synapse/blob/b7e5c69c1482d1cc832c68dab7225d06aa877a90/java/repository/conf/sample/synapse_sample_701.xml", "sha": "4dcbffde6f39e444bb50a58112038ddfbeb321ff", "changes": 2, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/synapse/contents/java/repository/conf/sample/synapse_sample_701.xml?ref=b7e5c69c1482d1cc832c68dab7225d06aa877a90", "patch": "@@ -16,7 +16,7 @@\n   ~  specific language governing permissions and limitations\n   ~  under the License.\n   -->\n-        <!-- introduction to URL source properties, registry based properties and the XSLT mediator -->\n+        <!-- introduction to URL source properties, registry based properties and the XQuery mediator -->\n <definitions xmlns=\"http://ws.apache.org/ns/synapse\">\n \n     <!-- the SimpleURLRegistry allows access to a URL based registry (e.g. file:/// or http://) -->", "filename": "java/repository/conf/sample/synapse_sample_701.xml"}, {"additions": 238, "raw_url": "https://github.com/apache/synapse/raw/b7e5c69c1482d1cc832c68dab7225d06aa877a90/java/src/site/resources/Synapse_Samples.html", "blob_url": "https://github.com/apache/synapse/blob/b7e5c69c1482d1cc832c68dab7225d06aa877a90/java/src/site/resources/Synapse_Samples.html", "sha": "1b99bdbb7d98e3995f871a253d22c920b917ef99", "changes": 269, "status": "modified", "deletions": 31, "contents_url": "https://api.github.com/repos/apache/synapse/contents/java/src/site/resources/Synapse_Samples.html?ref=b7e5c69c1482d1cc832c68dab7225d06aa877a90", "patch": "@@ -232,7 +232,7 @@ <h2><a name=\"Sample0\">Sample 0:</a></h2>\n     &lt;!-- Send the messageto implicit destination --&gt;\n     &lt;send/&gt;\n &lt;/definitions&gt;\n- </pre>\n+</pre>\n \n <p><strong>Objective: Introduction to Synapse. Shows how a message could be\n made to pass through Synapse </strong><strong>and logged before it is\n@@ -2217,8 +2217,8 @@ <h2><a name=\"Sample105\">Sample 105:</a></h2>\n     &lt;/proxy&gt;\n &lt;/definitions&gt;</pre>\n \n-<p><strong>Objective: Routing the messages arrived to a proxy service without processing\n-the MustUnderstand headers (Security header)</strong></p>\n+<p><strong>Objective: Routing the messages arrived to a proxy service without\n+processing the MustUnderstand headers (Security header)</strong></p>\n \n <p><strong>Pre-Requisites:</strong><br>\n You may also need to download and install the unlimited strength policy files\n@@ -2231,28 +2231,30 @@ <h2><a name=\"Sample105\">Sample 105:</a></h2>\n \n <p></p>\n \n-<p>The proxy service will recieve secure messages with security headers which are MustUnderstand.\n-But hence element 'engageSec' is not present in the proxy configuration synapse\n-will not engage that Apache Rampart on this proxy service. It is expected that an MustUnderstand\n-failure exception on the AxisEngine would occur before the message arrives Synapse. But Synapse\n-handles this message and gets it in by setting all the headers which are MustUnderstand and not\n-processed to processed state. This will enable synapse to route the messages without reading the\n-Security headers (just routing the messages from client to service, both of which are secure). To\n-execute the client, send a stock quote request to the proxy service, and sign\n-and encrypt the request by specifying the client side security policy as\n-follows:</p>\n+<p>The proxy service will recieve secure messages with security headers which\n+are MustUnderstand. But hence element 'engageSec' is not present in the proxy\n+configuration synapse will not engage that Apache Rampart on this proxy\n+service. It is expected that an MustUnderstand failure exception on the\n+AxisEngine would occur before the message arrives Synapse. But Synapse\n+handles this message and gets it in by setting all the headers which are\n+MustUnderstand and not processed to processed state. This will enable synapse\n+to route the messages without reading the Security headers (just routing the\n+messages from client to service, both of which are secure). To execute the\n+client, send a stock quote request to the proxy service, and sign and encrypt\n+the request by specifying the client side security policy as follows:</p>\n <pre>ant stockquote -Dtrpurl=http://localhost:8080/soap/StockQuoteProxy -Dpolicy=./../../repository/conf/sample/resources/policy/client_policy_3.xml</pre>\n \n <p>By following through the debug logs or TCPMon output, you could see that\n the request received by the proxy service was signed and encrypted. Also,\n-looking up the WSDL of the proxy service by requesting the\n-URL http://localhost:8080/soap/StockQuoteProxy?wsdl reveals the security\n-policy attachments are not there and security is not engaged. When sending the message to the\n-backend service, you could verify that the security headers were there as in the original\n-message to synapse from client, and that the response received does use WS-Security,\n-and forwarded back to the client without any modification. You should note that this wont be a\n-security hole because the message inside synapse is signed and encrypted and can only be forwarded\n-to a secure service to be usefull.</p>\n+looking up the WSDL of the proxy service by requesting the URL\n+http://localhost:8080/soap/StockQuoteProxy?wsdl reveals the security policy\n+attachments are not there and security is not engaged. When sending the\n+message to the backend service, you could verify that the security headers\n+were there as in the original message to synapse from client, and that the\n+response received does use WS-Security, and forwarded back to the client\n+without any modification. You should note that this wont be a security hole\n+because the message inside synapse is signed and encrypted and can only be\n+forwarded to a secure service to be usefull.</p>\n \n <h1><a name=\"Transport\">Transports</a></h1>\n \n@@ -3103,17 +3105,97 @@ <h2><a name=\"Sample510\">Sample 510</a></h2>\n \n <h1><a name=\"AdvancedMediations\">Advanced mediations</a></h1>\n \n-<h2><a name=\"Sample600\">Sample 600</a></h2>\n-<pre>&lt;definitions xmlns=\"http://ws.apache.org/ns/synapse\"\n-             xmlns:throttle=\"http://ws.apache.org/ns/synapse/throttle\"&gt;\n+<h2>Sample 600</h2>\n+\n+<p></p>\n+<pre>&lt;definitions xmlns=\"http://ws.apache.org/ns/synapse\"&gt;\n+    &lt;sequence name=\"main\"&gt;\n+        &lt;in&gt;\n+            &lt;throttle id=\"A\"&gt;\n+                &lt;policy&gt;\n+                    &lt;!-- define throttle policy --&gt;\n+                    &lt;wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"\n+                                xmlns:throttle=\"http://www.wso2.org/products/wso2commons/throttle\"&gt;\n+                        &lt;throttle:ThrottleAssertion&gt;\n+                            &lt;throttle:MaximumConcurrentAccess&gt;10&lt;/throttle:MaximumConcurrentAccess&gt;                            \n+                        &lt;/throttle:ThrottleAssertion&gt;\n+                    &lt;/wsp:Policy&gt;\n+                &lt;/policy&gt;\n+                &lt;onAccept&gt;\n+                    &lt;log level=\"custom\"&gt;\n+                        &lt;property name=\"text\" value=\"**Access Accept**\"/&gt;\n+                    &lt;/log&gt;\n+                    &lt;send&gt;\n+                        &lt;endpoint&gt;\n+                            &lt;address uri=\"http://localhost:9000/soap/SimpleStockQuoteService\"/&gt;\n+                        &lt;/endpoint&gt;\n+                    &lt;/send&gt;\n+                &lt;/onAccept&gt;\n+                &lt;onReject&gt;\n+                    &lt;log level=\"custom\"&gt;\n+                        &lt;property name=\"text\" value=\"**Access Denied**\"/&gt;\n+                    &lt;/log&gt;\n+                    &lt;makefault&gt;\n+                        &lt;code value=\"tns:Receiver\"\n+                              xmlns:tns=\"http://www.w3.org/2003/05/soap-envelope\"/&gt;\n+                        &lt;reason value=\"**Access Denied**\"/&gt;\n+                    &lt;/makefault&gt;\n+                    &lt;property name=\"RESPONSE\" value=\"true\"/&gt;\n+                    &lt;header name=\"To\" action=\"remove\"/&gt;\n+                    &lt;send/&gt;\n+                    &lt;drop/&gt;\n+                &lt;/onReject&gt;\n+            &lt;/throttle&gt;\n+        &lt;/in&gt;\n+        &lt;out&gt;\n+            &lt;throttle id=\"A\"/&gt;\n+            &lt;send/&gt;   \n+\n+\n+\n+\n+\n+\n+&lt;/out&gt;\n+    &lt;/sequence&gt;\n+&lt;/definitions&gt;                                                             finitions&gt;\n+</pre>\n+\n+<p> <b>Objective: Demonstrate the use of throttle mediator for concurrency\n+throttling </b></p>\n+\n+<p><strong>Pre-Requisites:</strong></p>\n+\n+<p>Deploy the SimpleStockQuoteService in sample Axis2 server and start it on\n+port 9000.</p>\n+\n+<p>Start Synapse with the sample configuration 600 (i.e. synapse -sample\n+600).</p>\n+\n+<p></p>\n+\n+<p>Above configuration specifies a throttle mediator inside the in mediator.\n+Therefore, all request messages directed to the main sequence will be\n+subjected to throttling. Throttle mediator has policy, onAccept and onReject\n+tags at top level. Policy tag specifies the throttling policy to be applied\n+for messages. In this sample policy contains only component called\n+\"MaximumConcurrentAccess\" .This indicates the maximum number of concurrent\n+request that may have passed through the synapse on a single unit of time. To\n+test concurrency throttling ,it is required to send concurrent request to\n+synapse. For synapse with above configuration ,if client send 20 request\n+concurrently ,then approximately half of those will success..</p>\n+\n+<h2><a name=\"Sample600\">Sample 601</a></h2>\n+<pre>&lt;definitions xmlns=\"http://ws.apache.org/ns/synapse\"&gt;\n     &lt;sequence name=\"main\"&gt;\n         &lt;in&gt;\n-            &lt;throttle:throttle&gt;\n+            &lt;throttle id=\"A\"&gt;\n                 &lt;policy&gt;\n                     &lt;!-- define throttle policy --&gt;\n                     &lt;wsp:Policy xmlns:wsp=\"http://schemas.xmlsoap.org/ws/2004/09/policy\"\n                                 xmlns:throttle=\"http://www.wso2.org/products/wso2commons/throttle\"&gt;\n                         &lt;throttle:ThrottleAssertion&gt;\n+                            &lt;throttle:MaximumConcurrentAccess&gt;10&lt;/throttle:MaximumConcurrentAccess&gt;\n                             &lt;wsp:All&gt;\n                                 &lt;throttle:ID throttle:type=\"IP\"&gt;Other&lt;/throttle:ID&gt;\n                                 &lt;wsp:ExactlyOne&gt;\n@@ -3181,19 +3263,22 @@ <h2><a name=\"Sample600\">Sample 600</a></h2>\n                         &lt;reason value=\"**Access Denied**\"/&gt;\n                     &lt;/makefault&gt;\n                     &lt;property name=\"RESPONSE\" value=\"true\"/&gt;\n-                    &lt;header name=\"To\" expression=\"get-property('ReplyTo')\"/&gt;\n+                    &lt;header name=\"To\" action=\"remove\"/&gt;\n                     &lt;send/&gt;\n                     &lt;drop/&gt;\n                 &lt;/onReject&gt;\n-            &lt;/throttle:throttle&gt;\n+            &lt;/throttle&gt;\n         &lt;/in&gt;\n         &lt;out&gt;\n+            &lt;throttle id=\"A\"/&gt;\n             &lt;send/&gt;\n         &lt;/out&gt;\n     &lt;/sequence&gt;\n-&lt;/definitions&gt;</pre>\n-<strong>Objective: Demonstrate the use of throttle mediator for restricting\n-request counts</strong>\n+&lt;/definitions&gt;\n+</pre>\n+\n+<p><strong>Objective: Demonstrate the use of throttle mediator for\n+restricting request counts</strong> </p>\n \n <p><strong>Pre-Requisites:</strong></p>\n \n@@ -3232,6 +3317,128 @@ <h2><a name=\"Sample600\">Sample 600</a></h2>\n [HttpServerWorker-2] INFO  LogMediator - text = **Access Accept**\n [HttpServerWorker-3] INFO  LogMediator - text = **Access Accept**\n [HttpServerWorker-4] INFO  LogMediator - text = **Access Accept**\n-[HttpServerWorker-5] INFO  LogMediator - text = **Access Denied**</pre>\n+[HttpServerWorker-5] INFO  LogMediator - text = **Access Denied**  </pre>\n+\n+<h2>Sample 700</h2>\n+<pre>&lt;definitions xmlns=\"http://ws.apache.org/ns/synapse\"&gt;\n+\n+    &lt;!-- the SimpleURLRegistry allows access to a URL based registry (e.g. file:/// or http://) --&gt;\n+    &lt;registry provider=\"org.apache.synapse.registry.url.SimpleURLRegistry\"&gt;\n+        &lt;!-- the root property of the simple URL registry helps resolve a resource URL as root + key --&gt;\n+        &lt;parameter name=\"root\"&gt;file:repository/conf/sample/resources/&lt;/parameter&gt;\n+        &lt;!-- all resources loaded from the URL registry would be cached for this number of milli seconds --&gt;\n+        &lt;parameter name=\"cachableDuration\"&gt;15000&lt;/parameter&gt;\n+    &lt;/registry&gt;\n+\n+    &lt;localEntry key=\"xquery-key-req\"\n+                src=\"file:repository/conf/sample/resources/xquery/xquery_req.xq\"/&gt;\n+    &lt;proxy name=\"StockQuoteProxy\"&gt;\n+        &lt;target&gt;\n+            &lt;inSequence&gt;\n+                &lt;xquery key=\"xquery-key-req\"&gt;\n+                    &lt;variable name=\"payload\" type=\"ELEMENT\"/&gt;\n+                &lt;/xquery&gt;\n+                &lt;send&gt;\n+                    &lt;endpoint&gt;\n+                        &lt;address uri=\"http://localhost:9000/soap/SimpleStockQuoteService\"/&gt;\n+                    &lt;/endpoint&gt;\n+                &lt;/send&gt;\n+            &lt;/inSequence&gt;\n+            &lt;outSequence&gt;\n+                &lt;out&gt;\n+                     &lt;xquery key=\"xquery/xquery_res.xq\"&gt;\n+                        &lt;variable name=\"payload\" type=\"ELEMENT\"/&gt;\n+                    &lt;/xquery&gt;\n+                     &lt;send/&gt;\n+                &lt;/out&gt;\n+            &lt;/outSequence&gt;\n+        &lt;/target&gt;\n+        &lt;publishWSDL uri=\"file:repository/conf/sample/resources/proxy/sample_proxy_1.wsdl\"/&gt;&lt;/proxy&gt;&lt;/definitions&gt;        </pre>\n+\n+<p></p>\n+\n+<p><b>Objective: Introduction transformation using XQuery mediator</b></p>\n+\n+<p><b>Pre-Requisites</b>:Start the Synapse configuration numbered 700: i.e.\n+synapse -sample 700 </p>\n+\n+<p>Start the Axis2 server and deploy the SimpleStockQuoteService if not\n+already done.</p>\n+\n+<p></p>\n+\n+<p>This example uses the XQuery mediator to perform transformations. This\n+sample behave same as sample number 8 and only different here is use of\n+XQuery instead of XSLT for transformations.</p>\n+\n+<p></p>\n+\n+<p>Execute the custom quote client as 'ant stockquote -Dmode=customquote ..'\n+</p>\n+<pre>ant stockquote -Daddurl=http://localhost:8080/soap/StockQuoteProxy\n+ -Dmode=customquote </pre>\n+\n+<p></p>\n+\n+<h2>Sample 701</h2>\n+\n+<p></p>\n+<pre>&lt;definitions xmlns=\"http://ws.apache.org/ns/synapse\"&gt;\n+\n+    &lt;!-- the SimpleURLRegistry allows access to a URL based registry (e.g. file:/// or http://) --&gt;\n+    &lt;registry provider=\"org.apache.synapse.registry.url.SimpleURLRegistry\"&gt;\n+        &lt;!-- the root property of the simple URL registry helps resolve a resource URL as root + key --&gt;\n+        &lt;parameter name=\"root\"&gt;file:repository/conf/sample/resources/&lt;/parameter&gt;\n+        &lt;!-- all resources loaded from the URL registry would be cached for this number of milli seconds --&gt;\n+        &lt;parameter name=\"cachableDuration\"&gt;15000&lt;/parameter&gt;\n+    &lt;/registry&gt;\n+\n+    &lt;proxy name=\"StockQuoteProxy\"&gt;\n+        &lt;target&gt;\n+            &lt;inSequence&gt;\n+                &lt;send&gt;\n+                    &lt;endpoint&gt;\n+                        &lt;address uri=\"http://localhost:9000/soap/SimpleStockQuoteService\"/&gt;\n+                    &lt;/endpoint&gt;\n+                &lt;/send&gt;\n+            &lt;/inSequence&gt;\n+            &lt;outSequence&gt;\n+                &lt;out&gt;\n+                    &lt;xquery key=\"xquery/xquery_commisson.xq\"&gt;\n+                        &lt;variable name=\"payload\" type=\"ELEMENT\"&gt;&lt;/variable&gt;\n+                            &lt;variable name=\"commission\" type=\"ELEMENT\" key=\"misc/commission.xml\"&gt;&lt;/variable&gt;\n+                    &lt;/xquery&gt;\n+                    &lt;send/&gt;\n+                &lt;/out&gt;\n+            &lt;/outSequence&gt;\n+        &lt;/target&gt;\n+        &lt;publishWSDL uri=\"file:repository/conf/sample/resources/proxy/sample_proxy_1.wsdl\"/&gt;&lt;/proxy&gt;&lt;/definitions&gt;   ns&gt;</pre>\n+\n+<p><b></b></p>\n+\n+<p><b><strong>Objective: Demonstrate the use of XQuery mediator to import\n+external XML documents to the xquery engine</strong></b></p>\n+\n+<p><strong>Pre-Requisites:</strong>Deploy the SimpleStockQuoteService in\n+sample Axis2 server and start it on port 9000.</p>\n+\n+<p>Start Synapse with the sample configuration 701 (i.e. synapse -sample\n+701).</p>\n+\n+<p>In this sample , data from commission.xml document use inside XQUERY\n+document. The stock quote prize from the response and commission from the\n+commission.xml document will be added and give as a new prize .</p>\n+\n+<p></p>\n+\n+<p>Invoke the client as bellow </p>\n+<pre>ant stockquote -Daddurl=http://localhost:8080/soap/StockQuoteProxy\n+</pre>\n+\n+<p></p>\n+\n+<p></p>\n+\n+<p></p>\n </body>\n </html>", "filename": "java/src/site/resources/Synapse_Samples.html"}], "repo": "synapse"}, {"commit": "https://github.com/apache/synapse/commit/3d3a6e0454590031cc4cea4d02b1aef27e5dbd43", "parent": "https://github.com/apache/synapse/commit/83bb7b082271fa061d94d7840007234ce51ced0a", "message": "fixed NPE in the throttle mediator \n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/synapse/trunk@540501 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "synapse_16", "file": [{"additions": 6, "raw_url": "https://github.com/apache/synapse/raw/3d3a6e0454590031cc4cea4d02b1aef27e5dbd43/java/modules/extensions/src/main/java/org/apache/synapse/mediators/throttle/ThrottleMediator.java", "blob_url": "https://github.com/apache/synapse/blob/3d3a6e0454590031cc4cea4d02b1aef27e5dbd43/java/modules/extensions/src/main/java/org/apache/synapse/mediators/throttle/ThrottleMediator.java", "sha": "d7bec17f4ae308503841608d48eda3fd52079b95", "changes": 11, "status": "modified", "deletions": 5, "contents_url": "https://api.github.com/repos/apache/synapse/contents/java/modules/extensions/src/main/java/org/apache/synapse/mediators/throttle/ThrottleMediator.java?ref=3d3a6e0454590031cc4cea4d02b1aef27e5dbd43", "patch": "@@ -83,10 +83,11 @@ public boolean mediate(MessageContext synCtx) {\n      * @return boolean which indicate whether this caller can or not access\n      */\n     protected boolean canAccess(MessageContext synContext, boolean shouldTrace) {\n-        boolean canAccess = true;\n         if (throttle == null) {\n             log.debug(\"Can not find a throttle\");\n+            return true;\n         }\n+        boolean canAccess = true;               \n         org.apache.axis2.context.MessageContext axis2MessageContext\n                 = ((Axis2MessageContext) synContext).getAxis2MessageContext();\n         //IP based throttling\n@@ -173,16 +174,16 @@ protected void init(MessageContext synContext, boolean shouldTrace) {\n         if (policyKey != null) {\n             Entry entry = synContext.getConfiguration().getEntryDefinition(policyKey);\n             if (entry == null) {\n-                log.warn(\"Cant not find a Entry from the Entry key \" + policyKey);\n+                log.debug(\"Cant not find a Entry from the Entry key \" + policyKey);\n                 return;\n             }\n             Object entryValue = entry.getValue();\n             if (entryValue == null) {\n-                log.warn(\"Cant not find a Policy(Enrty value) from the Entry key \" + policyKey);\n+                log.debug(\"Cant not find a Policy(Enrty value) from the Entry key \" + policyKey);\n                 return;\n             }\n             if (!(entryValue instanceof OMElement)) {\n-                log.warn(\"Entry value which is refered from the key \" + policyKey + \" is Incompatible \" +\n+                log.debug(\"Entry value which is refered from the key \" + policyKey + \" is Incompatible \" +\n                         \"for the policy element\");\n                 return;\n             }\n@@ -195,7 +196,7 @@ protected void init(MessageContext synContext, boolean shouldTrace) {\n             policyOmElement = inLinePolicy;\n         }\n         if (policyOmElement == null) {\n-            log.warn(\"Cant not find a Policy - Throttling will not occur\");\n+            log.debug(\"Cant not find a Policy - Throttling will not occur\");\n             return;\n         }\n         if (shouldTrace) {", "filename": "java/modules/extensions/src/main/java/org/apache/synapse/mediators/throttle/ThrottleMediator.java"}], "repo": "synapse"}, {"commit": "https://github.com/apache/synapse/commit/b054d502d66ddb5b5c4065cea79371e9b529c9b3", "parent": "https://github.com/apache/synapse/commit/9e5385f58d94b7953edeb7c04c76e92ad9f3b9ab", "message": "fix NPE for forced sandesha initialization\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/synapse/trunk@536441 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "synapse_17", "file": [{"additions": 4, "raw_url": "https://github.com/apache/synapse/raw/b054d502d66ddb5b5c4065cea79371e9b529c9b3/java/modules/core/src/main/java/org/apache/synapse/core/axis2/SynapseModule.java", "blob_url": "https://github.com/apache/synapse/blob/b054d502d66ddb5b5c4065cea79371e9b529c9b3/java/modules/core/src/main/java/org/apache/synapse/core/axis2/SynapseModule.java", "sha": "38fcd965ef2d9c34b7509c23159d5439b1e77fca", "changes": 6, "status": "modified", "deletions": 2, "contents_url": "https://api.github.com/repos/apache/synapse/contents/java/modules/core/src/main/java/org/apache/synapse/core/axis2/SynapseModule.java?ref=b054d502d66ddb5b5c4065cea79371e9b529c9b3", "patch": "@@ -97,8 +97,10 @@ public void init(ConfigurationContext configurationContext,\n         log.info(\"Initializing Sandesha 2...\");\n         AxisModule sandeshaAxisModule = configurationContext.getAxisConfiguration().\n             getModule(Constants.SANDESHA2_MODULE_NAME);\n-        Module sandesha2 = sandeshaAxisModule.getModule();\n-        sandesha2.init(configurationContext, sandeshaAxisModule);\n+        if (sandeshaAxisModule != null) {\n+            Module sandesha2 = sandeshaAxisModule.getModule();\n+            sandesha2.init(configurationContext, sandeshaAxisModule);\n+        }\n \n         log.info(\"Deploying Proxy services...\");\n         Iterator iter = synCfg.getProxyServices().iterator();", "filename": "java/modules/core/src/main/java/org/apache/synapse/core/axis2/SynapseModule.java"}], "repo": "synapse"}, {"commit": "https://github.com/apache/synapse/commit/14c10e7613ca94ea8712c0338e75ff776938d731", "parent": "https://github.com/apache/synapse/commit/2a44611a5e35ab980d575913d0cf76b5245744e1", "message": "fix possible NPE for non Axis2 / generic SOAP faults\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/synapse/trunk@517829 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "synapse_18", "file": [{"additions": 9, "raw_url": "https://github.com/apache/synapse/raw/14c10e7613ca94ea8712c0338e75ff776938d731/java/modules/core/src/main/java/org/apache/synapse/core/axis2/SynapseCallbackReceiver.java", "blob_url": "https://github.com/apache/synapse/blob/14c10e7613ca94ea8712c0338e75ff776938d731/java/modules/core/src/main/java/org/apache/synapse/core/axis2/SynapseCallbackReceiver.java", "sha": "2ccf7960b282aeab718ba0e4db9cb50d56e96f6d", "changes": 12, "status": "modified", "deletions": 3, "contents_url": "https://api.github.com/repos/apache/synapse/contents/java/modules/core/src/main/java/org/apache/synapse/core/axis2/SynapseCallbackReceiver.java?ref=14c10e7613ca94ea8712c0338e75ff776938d731", "patch": "@@ -28,6 +28,7 @@\n import org.apache.synapse.Constants;\n import org.apache.synapse.FaultHandler;\n import org.apache.synapse.endpoints.Endpoint;\n+import org.apache.axiom.soap.SOAPFault;\n \n import java.util.*;\n \n@@ -79,9 +80,14 @@ private void handleMessage(MessageContext response,\n         if (response.getEnvelope().getBody().hasFault()) {            \n             Stack faultStack = synapseOutMsgCtx.getFaultStack();\n             if (faultStack != null && !faultStack.isEmpty()) {\n-                ((FaultHandler) faultStack.pop()).handleFault(\n-                    synapseOutMsgCtx,\n-                    response.getEnvelope().getBody().getFault().getException());\n+\n+                SOAPFault fault = response.getEnvelope().getBody().getFault();\n+                Exception e = fault.getException();\n+                if (e == null) {\n+                    e = new Exception(fault.getReason().getFirstSOAPText().getText());    \n+                }\n+\n+                ((FaultHandler) faultStack.pop()).handleFault(synapseOutMsgCtx,e);\n             }\n \n         } else {", "filename": "java/modules/core/src/main/java/org/apache/synapse/core/axis2/SynapseCallbackReceiver.java"}], "repo": "synapse"}, {"commit": "https://github.com/apache/synapse/commit/2a44611a5e35ab980d575913d0cf76b5245744e1", "parent": "https://github.com/apache/synapse/commit/82f76774e34c00bbc3601cd57ebb4b28eedf0099", "message": "fix possible NPE for timeouts\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/synapse/trunk@517615 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "synapse_19", "file": [{"additions": 5, "raw_url": "https://github.com/apache/synapse/raw/2a44611a5e35ab980d575913d0cf76b5245744e1/java/modules/nhttp/src/org/apache/axis2/transport/nhttp/ServerHandler.java", "blob_url": "https://github.com/apache/synapse/blob/2a44611a5e35ab980d575913d0cf76b5245744e1/java/modules/nhttp/src/org/apache/axis2/transport/nhttp/ServerHandler.java", "sha": "d25ab5b3af260e9b3c34d524eb4901fcaaa2e5fe", "changes": 6, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/synapse/contents/java/modules/nhttp/src/org/apache/axis2/transport/nhttp/ServerHandler.java?ref=2a44611a5e35ab980d575913d0cf76b5245744e1", "patch": "@@ -224,7 +224,11 @@ public void commitResponse(final NHttpServerConnection conn, final HttpResponse\n      */\n     public void timeout(final NHttpServerConnection conn) {\n         HttpRequest req = (HttpRequest) conn.getContext().getAttribute(HttpContext.HTTP_REQUEST);\n-        log.warn(\"Connection Timeout for request to : \" + req.getRequestLine().getUri());\n+        if (req != null) {\n+            log.warn(\"Connection Timeout for request to : \" + req.getRequestLine().getUri());\n+        } else {\n+            log.warn(\"Connection Timeout\");\n+        }\n         shutdownConnection(conn);\n     }\n ", "filename": "java/modules/nhttp/src/org/apache/axis2/transport/nhttp/ServerHandler.java"}], "repo": "synapse"}, {"commit": "https://github.com/apache/synapse/commit/9c0d123ec1ca7fca3cad358d67743ed9a5110f2a", "parent": "https://github.com/apache/synapse/commit/ff252b2aa616f736d788893c2f7181b155f6cd7f", "message": "fix NPE for non existent endpoints\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/synapse/trunk@516327 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "synapse_20", "file": [{"additions": 13, "raw_url": "https://github.com/apache/synapse/raw/9c0d123ec1ca7fca3cad358d67743ed9a5110f2a/java/modules/core/src/main/java/org/apache/synapse/endpoints/IndirectEndpoint.java", "blob_url": "https://github.com/apache/synapse/blob/9c0d123ec1ca7fca3cad358d67743ed9a5110f2a/java/modules/core/src/main/java/org/apache/synapse/endpoints/IndirectEndpoint.java", "sha": "9b85607cd86e2b548a889cb16caebef7db986101", "changes": 13, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/synapse/contents/java/modules/core/src/main/java/org/apache/synapse/endpoints/IndirectEndpoint.java?ref=9c0d123ec1ca7fca3cad358d67743ed9a5110f2a", "patch": "@@ -20,9 +20,14 @@\n package org.apache.synapse.endpoints;\n \n import org.apache.synapse.MessageContext;\n+import org.apache.synapse.SynapseException;\n+import org.apache.commons.logging.Log;\n+import org.apache.commons.logging.LogFactory;\n \n public class IndirectEndpoint implements Endpoint {\n \n+    private static final Log log = LogFactory.getLog(IndirectEndpoint.class);\n+\n     private String name = null;\n     private String key = null;\n     private boolean active = true;\n@@ -31,6 +36,9 @@\n     public void send(MessageContext synMessageContext) {\n         // get the actual endpoint and send\n         Endpoint endpoint = synMessageContext.getEndpoint(key);\n+        if (endpoint == null) {\n+            handleException(\"Reference to non-existent endpoint for key : \" + key);    \n+        }\n \n         if (endpoint.isActive()) {\n             endpoint.send(synMessageContext);\n@@ -71,4 +79,9 @@ public void onChildEndpointFail(Endpoint endpoint, MessageContext synMessageCont\n         endpoint.setActive(false);\n         parentEndpoint.onChildEndpointFail(this, synMessageContext);\n     }\n+\n+    private void handleException(String msg) {\n+        log.error(msg);\n+        throw new SynapseException(msg);\n+    }\n }", "filename": "java/modules/core/src/main/java/org/apache/synapse/endpoints/IndirectEndpoint.java"}], "repo": "synapse"}, {"commit": "https://github.com/apache/synapse/commit/d731fd8f2e6c22978d5f96f5682b43ea82fb8571", "parent": "https://github.com/apache/synapse/commit/4a83ec8cf55fe78d4547fbefff5e7b5b3c226833", "message": "prevent NPE for invalid configurations\nupdate POM versions\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/synapse/trunk@482572 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "synapse_21", "file": [{"additions": 6, "raw_url": "https://github.com/apache/synapse/raw/d731fd8f2e6c22978d5f96f5682b43ea82fb8571/java/modules/core/src/main/java/org/apache/synapse/config/xml/MediatorFactoryFinder.java", "blob_url": "https://github.com/apache/synapse/blob/d731fd8f2e6c22978d5f96f5682b43ea82fb8571/java/modules/core/src/main/java/org/apache/synapse/config/xml/MediatorFactoryFinder.java", "sha": "f4b768388bb6964b75fc9ede4338f957525d47b7", "changes": 7, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/synapse/contents/java/modules/core/src/main/java/org/apache/synapse/config/xml/MediatorFactoryFinder.java?ref=d731fd8f2e6c22978d5f96f5682b43ea82fb8571", "patch": "@@ -146,7 +146,12 @@ private void registerExtensions() {\n \tpublic Mediator getMediator(OMElement element) {\r\n \r\n         String localName = element.getLocalName();\r\n-\t\tQName qName = new QName(element.getNamespace().getName(), localName);\r\n+        QName qName = null;\r\n+        if (element.getNamespace() != null) {\r\n+            qName = new QName(element.getNamespace().getName(), localName);\r\n+        } else {\r\n+            qName = new QName(localName);\r\n+        }\r\n         log.debug(\"getMediator(\" + qName + \")\");\r\n         Class cls = (Class) factoryMap.get(qName);\r\n \r", "filename": "java/modules/core/src/main/java/org/apache/synapse/config/xml/MediatorFactoryFinder.java"}, {"additions": 11, "raw_url": "https://github.com/apache/synapse/raw/d731fd8f2e6c22978d5f96f5682b43ea82fb8571/java/pom.xml", "blob_url": "https://github.com/apache/synapse/blob/d731fd8f2e6c22978d5f96f5682b43ea82fb8571/java/pom.xml", "sha": "f9b477f3947985051a80517fe70a30fe4266c8e6", "changes": 22, "status": "modified", "deletions": 11, "contents_url": "https://api.github.com/repos/apache/synapse/contents/java/pom.xml?ref=d731fd8f2e6c22978d5f96f5682b43ea82fb8571", "patch": "@@ -26,7 +26,7 @@\n \n     <groupId>org.apache.synapse</groupId>\n     <artifactId>Apache-Synapse-Incubating</artifactId>\n-    <version>0.90-SNAPSHOT</version>\n+    <version>0.90-RC1</version>\n \n     <name>Apache Synapse</name>\n     <description>Apache Synapse</description>\n@@ -251,7 +251,7 @@\n         <dependency>\n             <groupId>org.apache.axis2</groupId>\n             <artifactId>axis2-rahas</artifactId>\n-            <version>${axis2.security.version}</version>\n+            <version>${axis2.version}</version>\n         </dependency>\n \n         <dependency>\n@@ -275,7 +275,7 @@\n         <dependency>\n             <groupId>org.apache.axis2</groupId>\n             <artifactId>axis2-secpolicy</artifactId>\n-            <version>${axis2.security.version}</version>\n+            <version>${axis2.version}</version>\n         </dependency>\n         \n         <dependency>\n@@ -287,7 +287,7 @@\n         <dependency>\n             <groupId>org.apache.axis2</groupId>\n             <artifactId>axis2-security</artifactId>\n-            <version>${axis2.security.version}</version>\n+            <version>${axis2.version}</version>\n         </dependency>\n \n         <dependency>\n@@ -320,7 +320,7 @@\n         <dependency>\n             <groupId>org.apache.axis2</groupId>\n             <artifactId>rampart</artifactId>\n-            <version>${axis2.security.version}</version>\n+            <version>${rampart.version}</version>\n             <type>mar</type>\n         </dependency>\n \n@@ -568,18 +568,18 @@\n     </modules>\n \n     <properties>\n-        <synapse.version>0.90-SNAPSHOT</synapse.version>\n+        <synapse.version>0.90-RC1</synapse.version>\n         <axis2.version>1.1</axis2.version>\n-        <axis2.security.version>1.1-SNAPSHOT</axis2.security.version>\n-        <axiom.version>1.2.1-SNAPSHOT</axiom.version>\n-        <xml_schema.version>1.2</xml_schema.version>\n+        <rampart.version>1.1</rampart.version>\n+        <axiom.version>1.2.1</axiom.version>\n+        <xml_schema.version>SNAPSHOT</xml_schema.version>\n         <neethi.version>2.0</neethi.version>\n-        <wss4j.version>SNAPSHOT</wss4j.version>\n+        <wss4j.version>1.5.1</wss4j.version>\n         <xmlsec.version>1.3.0</xmlsec.version>\n         <woden.version>1.0.0M6</woden.version>\n \n         <addressing.version>1.1</addressing.version>\n-        <sandesha2.version>1.1-SNAPSHOT</sandesha2.version>\n+        <sandesha2.version>1.1</sandesha2.version>\n         <rampart.version>1.1</rampart.version>\n \n         <commons.logging.version>1.1</commons.logging.version>", "filename": "java/pom.xml"}], "repo": "synapse"}, {"commit": "https://github.com/apache/synapse/commit/0a470e53beb9b7bd73d9e6aa98c5bb02854cb0ae", "parent": "https://github.com/apache/synapse/commit/d4eee73ba3b4b0a0595d4f6e5cf8b3cef40b93c0", "message": "Fixing SYNAPSE-652\n\nFixed possible NPE at Axis2MessageContext#getEndpoint() and updated the test cases to cover the respective scenario\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/synapse/trunk@946058 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "synapse_22", "file": [{"additions": 7, "raw_url": "https://github.com/apache/synapse/raw/0a470e53beb9b7bd73d9e6aa98c5bb02854cb0ae/java/modules/core/src/main/java/org/apache/synapse/core/axis2/Axis2MessageContext.java", "blob_url": "https://github.com/apache/synapse/blob/0a470e53beb9b7bd73d9e6aa98c5bb02854cb0ae/java/modules/core/src/main/java/org/apache/synapse/core/axis2/Axis2MessageContext.java", "sha": "bc1ceb010f568e0eb7e771989950e2cd0fa51ca1", "changes": 10, "status": "modified", "deletions": 3, "contents_url": "https://api.github.com/repos/apache/synapse/contents/java/modules/core/src/main/java/org/apache/synapse/core/axis2/Axis2MessageContext.java?ref=0a470e53beb9b7bd73d9e6aa98c5bb02854cb0ae", "patch": "@@ -152,12 +152,16 @@ public Endpoint getEndpoint(String key) {\n             return (Endpoint) o;\n         } else {\n             Endpoint e = getConfiguration().getEndpoint(key);\n-            synchronized (e) {\n+            if (e != null) {\n                 if (!e.isInitialized()) {\n-                    e.init(synEnv);\n+                    synchronized (e) {\n+                        if (!e.isInitialized()) {\n+                            e.init(synEnv);\n+                        }\n+                    }\n                 }\n+                localEntries.put(key, e);\n             }\n-            localEntries.put(key, e);\n             return e;\n         }\n     }", "filename": "java/modules/core/src/main/java/org/apache/synapse/core/axis2/Axis2MessageContext.java"}, {"additions": 12, "raw_url": "https://github.com/apache/synapse/raw/0a470e53beb9b7bd73d9e6aa98c5bb02854cb0ae/java/modules/core/src/test/java/org/apache/synapse/registry/DynamicResourceTest.java", "blob_url": "https://github.com/apache/synapse/blob/0a470e53beb9b7bd73d9e6aa98c5bb02854cb0ae/java/modules/core/src/test/java/org/apache/synapse/registry/DynamicResourceTest.java", "sha": "1db68a72fddca464205da3086fcf785a216fc56e", "changes": 12, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/synapse/contents/java/modules/core/src/test/java/org/apache/synapse/registry/DynamicResourceTest.java?ref=0a470e53beb9b7bd73d9e6aa98c5bb02854cb0ae", "patch": "@@ -125,6 +125,12 @@ public void testDynamicSequenceLookup() throws Exception {\n         assertTrue(seq1 != seq4);\n         assertTrue(!((SequenceMediator) seq1).isInitialized());\n \n+        // Phase 5\n+        System.out.println(\"Testing for non-existing sequences...\");\n+        synCtx = TestUtils.createSynapseMessageContext(\"<empty/>\", config);\n+        Mediator seq5 = synCtx.getSequence(\"non-existing-sequence\");\n+        assertNull(seq5);\n+\n         System.out.println(\"Dynamic sequence lookup tests were successful...\");\n     }\n \n@@ -172,6 +178,12 @@ public void testDynamicEndpointLookup() throws Exception {\n         assertTrue(ep1 != ep4);\n         assertTrue(!ep1.isInitialized());\n \n+        // Phase 5\n+        System.out.println(\"Testing for non-existing endpoints...\");\n+        synCtx = TestUtils.createSynapseMessageContext(\"<empty/>\", config);\n+        Endpoint ep5 = synCtx.getEndpoint(\"non-existing-endpoint\");\n+        assertNull(ep5);\n+\n         System.out.println(\"Dynamic endpoint lookup tests were successful...\");\n     }\n }", "filename": "java/modules/core/src/test/java/org/apache/synapse/registry/DynamicResourceTest.java"}], "repo": "synapse"}, {"commit": "https://github.com/apache/synapse/commit/a827b1fc819cad3f18e2f25ad592fffc49d73e4b", "parent": "https://github.com/apache/synapse/commit/e488a7a7d615707b9d1a7b465d87ca5580d27da4", "message": "Fixing a potential NPE when forwarding FIX messages over an acceptor session\n\ngit-svn-id: https://svn.apache.org/repos/asf/synapse/trunk@789224 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "synapse_23", "file": [{"additions": 3, "raw_url": "https://github.com/apache/synapse/raw/a827b1fc819cad3f18e2f25ad592fffc49d73e4b/java/modules/transports/optional/fix/src/main/java/org/apache/synapse/transport/fix/FIXOutgoingMessageHandler.java", "blob_url": "https://github.com/apache/synapse/blob/a827b1fc819cad3f18e2f25ad592fffc49d73e4b/java/modules/transports/optional/fix/src/main/java/org/apache/synapse/transport/fix/FIXOutgoingMessageHandler.java", "sha": "7693514be7f2ca871a61118dcaab1491ecde1201", "changes": 4, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/synapse/contents/java/modules/transports/optional/fix/src/main/java/org/apache/synapse/transport/fix/FIXOutgoingMessageHandler.java?ref=a827b1fc819cad3f18e2f25ad592fffc49d73e4b", "patch": "@@ -119,7 +119,9 @@ private void sendToTarget(MessageContext msgCtx, String targetEPR, Message messa\n         if (msgCtx != null && targetEPR != null) {\n             FIXIncomingMessageHandler messageHandler = (FIXIncomingMessageHandler) sessionFactory.\n                     getApplication(targetEPR);\n-            messageHandler.setOutgoingMessageContext(msgCtx);\n+            if (messageHandler != null) {\n+                messageHandler.setOutgoingMessageContext(msgCtx);\n+            }\n         }\n         Session.sendToTarget(message, sessionID);\n     }", "filename": "java/modules/transports/optional/fix/src/main/java/org/apache/synapse/transport/fix/FIXOutgoingMessageHandler.java"}], "repo": "synapse"}, {"commit": "https://github.com/apache/synapse/commit/7890eba1c134378131557873b542cfa90d5293ec", "parent": "https://github.com/apache/synapse/commit/c66f42970dd8e17cf2a5a71c992040405d294040", "message": "Fix possible NPE (if programmatically create dsinfor)\nAvoid serialization of null values \n\n\ngit-svn-id: https://svn.apache.org/repos/asf/synapse/trunk@772507 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "synapse_24", "file": [{"additions": 18, "raw_url": "https://github.com/apache/synapse/raw/7890eba1c134378131557873b542cfa90d5293ec/java/modules/utils/src/main/java/org/apache/synapse/commons/util/datasource/serializer/DataSourceInformationSerializer.java", "blob_url": "https://github.com/apache/synapse/blob/7890eba1c134378131557873b542cfa90d5293ec/java/modules/utils/src/main/java/org/apache/synapse/commons/util/datasource/serializer/DataSourceInformationSerializer.java", "sha": "52aba3820ec84b9bffa76939f517e6a29fb5a6d8", "changes": 22, "status": "modified", "deletions": 4, "contents_url": "https://api.github.com/repos/apache/synapse/contents/java/modules/utils/src/main/java/org/apache/synapse/commons/util/datasource/serializer/DataSourceInformationSerializer.java?ref=7890eba1c134378131557873b542cfa90d5293ec", "patch": "@@ -21,6 +21,7 @@\n import org.apache.synapse.commons.util.datasource.DataSourceConstants;\r\n import org.apache.synapse.commons.util.datasource.DataSourceInformation;\r\n import org.apache.synapse.commons.util.secret.SecretConfigurationConstants;\r\n+import org.apache.synapse.commons.util.secret.SecretInformation;\r\n \r\n import java.util.Properties;\r\n \r\n@@ -50,10 +51,23 @@ public static Properties serialize(DataSourceInformation information) {\n         String prefix = buffer.toString();\r\n         addProperty(properties, prefix + DataSourceConstants.PROP_DSNAME,\r\n                 information.getDatasourceName());\r\n-        addProperty(properties, prefix + SecretConfigurationConstants.PROP_USER_NAME,\r\n-                information.getSecretInformation().getUser());\r\n-        addProperty(properties, prefix + SecretConfigurationConstants.PROP_PASSWORD,\r\n-                information.getSecretInformation().getAliasPassword());\r\n+\r\n+        SecretInformation secretInformation = information.getSecretInformation();\r\n+        if (secretInformation != null) {\r\n+\r\n+            String user = secretInformation.getUser();\r\n+            if (user != null && !\"\".equals(user)) {\r\n+                addProperty(properties, prefix + SecretConfigurationConstants.PROP_USER_NAME,\r\n+                        user);\r\n+            }\r\n+\r\n+            String password = secretInformation.getAliasPassword();\r\n+            if (password != null && !\"\".equals(password)) {\r\n+                addProperty(properties, prefix + SecretConfigurationConstants.PROP_PASSWORD,\r\n+                        password);\r\n+            }\r\n+\r\n+        }\r\n         addProperty(properties, prefix + DataSourceConstants.PROP_MAXACTIVE,\r\n                 String.valueOf(information.getMaxActive()));\r\n         addProperty(properties, prefix + DataSourceConstants.PROP_MAXIDLE,\r", "filename": "java/modules/utils/src/main/java/org/apache/synapse/commons/util/datasource/serializer/DataSourceInformationSerializer.java"}], "repo": "synapse"}, {"commit": "https://github.com/apache/synapse/commit/5ac5aa645cff6c2be6809bb08431ab3089b9a1f3", "parent": "https://github.com/apache/synapse/commit/66329ea0fcd6538502bdb2d06db18461f04469db", "message": "SYNAPSE-505: Fix NPE in XQueryMediator due to invalid non short-circuited if. Thanks to Dave Brosius for catching this.\n\ngit-svn-id: https://svn.apache.org/repos/asf/synapse/trunk@744661 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "synapse_25", "file": [{"additions": 1, "raw_url": "https://github.com/apache/synapse/raw/5ac5aa645cff6c2be6809bb08431ab3089b9a1f3/java/modules/extensions/src/main/java/org/apache/synapse/mediators/xquery/XQueryMediator.java", "blob_url": "https://github.com/apache/synapse/blob/5ac5aa645cff6c2be6809bb08431ab3089b9a1f3/java/modules/extensions/src/main/java/org/apache/synapse/mediators/xquery/XQueryMediator.java", "sha": "fba246d686a67c25f99dc00623e863591a9fc194", "changes": 2, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/synapse/contents/java/modules/extensions/src/main/java/org/apache/synapse/mediators/xquery/XQueryMediator.java?ref=5ac5aa645cff6c2be6809bb08431ab3089b9a1f3", "patch": "@@ -305,7 +305,7 @@ private void performQuery(MessageContext synCtx, SynapseLog synLog) {\n                 }\n \n                 //Bind the external variables to the DynamicContext\n-                if (variables != null & !variables.isEmpty()) {\n+                if (variables != null && !variables.isEmpty()) {\n                     synLog.traceOrDebug(\"Binding  external variables to the DynamicContext\");\n                     for (int i = 0; i < variables.size(); i++) {\n                         MediatorVariable variable = (MediatorVariable) variables.get(i);", "filename": "java/modules/extensions/src/main/java/org/apache/synapse/mediators/xquery/XQueryMediator.java"}], "repo": "synapse"}, {"commit": "https://github.com/apache/synapse/commit/f02e9889647bfac24d9020d6f9ea8dd982da3fc9", "parent": "https://github.com/apache/synapse/commit/28e3b6a089c7d53af839cff159f1f387edcd3afb", "message": "Mail transport tests: avoid NPE in MailRequestResponseClient if no response is received\n\ngit-svn-id: https://svn.apache.org/repos/asf/synapse/trunk@697588 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "synapse_26", "file": [{"additions": 3, "raw_url": "https://github.com/apache/synapse/raw/f02e9889647bfac24d9020d6f9ea8dd982da3fc9/java/modules/transports/src/test/java/org/apache/synapse/transport/mail/MailRequestResponseClient.java", "blob_url": "https://github.com/apache/synapse/blob/f02e9889647bfac24d9020d6f9ea8dd982da3fc9/java/modules/transports/src/test/java/org/apache/synapse/transport/mail/MailRequestResponseClient.java", "sha": "1b311a1326aca53d0ebcd4379c30507f646bdf30", "changes": 3, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/synapse/contents/java/modules/transports/src/test/java/org/apache/synapse/transport/mail/MailRequestResponseClient.java?ref=f02e9889647bfac24d9020d6f9ea8dd982da3fc9", "patch": "@@ -30,6 +30,8 @@\n import javax.mail.Store;\n import javax.mail.internet.ContentType;\n \n+import junit.framework.Assert;\n+\n import org.apache.commons.logging.Log;\n import org.apache.commons.logging.LogFactory;\n import org.apache.synapse.transport.testkit.client.ClientOptions;\n@@ -63,6 +65,7 @@ private void tearDown() throws MessagingException {\n     public IncomingMessage<byte[]> sendMessage(ClientOptions options, ContentType contentType, byte[] message) throws Exception {\n         String msgId = sendMessage(contentType, message);\n         Message reply = waitForReply(msgId);\n+        Assert.assertNotNull(\"No response received\", reply);\n         ByteArrayOutputStream baos = new ByteArrayOutputStream();\n         reply.getDataHandler().writeTo(baos);\n         return new IncomingMessage<byte[]>(new ContentType(reply.getContentType()), baos.toByteArray());", "filename": "java/modules/transports/src/test/java/org/apache/synapse/transport/mail/MailRequestResponseClient.java"}], "repo": "synapse"}, {"commit": "https://github.com/apache/synapse/commit/b785fc2bcebd34fea5912b1d31e99d4debcbc279", "parent": "https://github.com/apache/synapse/commit/54841ea9f5f7e92034bc462ae135e35b401c21d1", "message": "Transport test kit: corrected a bug in AsyncMessageTestCase where a NPE is thrown when it doesn't receive the message\n\ngit-svn-id: https://svn.apache.org/repos/asf/synapse/trunk@695292 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "synapse_27", "file": [{"additions": 3, "raw_url": "https://github.com/apache/synapse/raw/b785fc2bcebd34fea5912b1d31e99d4debcbc279/java/modules/transports/src/test/java/org/apache/synapse/transport/testkit/tests/async/AsyncMessageTestCase.java", "blob_url": "https://github.com/apache/synapse/blob/b785fc2bcebd34fea5912b1d31e99d4debcbc279/java/modules/transports/src/test/java/org/apache/synapse/transport/testkit/tests/async/AsyncMessageTestCase.java", "sha": "bca55ea8d7c805f22c7f2b3cc89fd68bb7b0f4f0", "changes": 5, "status": "modified", "deletions": 2, "contents_url": "https://api.github.com/repos/apache/synapse/contents/java/modules/transports/src/test/java/org/apache/synapse/transport/testkit/tests/async/AsyncMessageTestCase.java?ref=b785fc2bcebd34fea5912b1d31e99d4debcbc279", "patch": "@@ -23,6 +23,7 @@\n \r\n import org.apache.synapse.transport.testkit.client.AsyncTestClient;\r\n import org.apache.synapse.transport.testkit.listener.AsyncChannel;\r\n+import org.apache.synapse.transport.testkit.message.IncomingMessage;\r\n import org.apache.synapse.transport.testkit.server.AsyncEndpoint;\r\n import org.apache.synapse.transport.testkit.tests.MessageTestCase;\r\n \r\n@@ -47,12 +48,12 @@ protected void runTest() throws Throwable {\n         // Run the test.\r\n //                    contentTypeMode == ContentTypeMode.TRANSPORT ? contentType : null);\r\n         client.sendMessage(options, options.getBaseContentType(), expected);\r\n-        M actual = endpoint.waitForMessage(8000).getData();\r\n+        IncomingMessage<M> actual = endpoint.waitForMessage(8000);\r\n         if (actual == null) {\r\n             fail(\"Failed to get message\");\r\n         }\r\n         \r\n-        checkMessageData(expected, actual);\r\n+        checkMessageData(expected, actual.getData());\r\n     }\r\n     \r\n     protected abstract M prepareMessage() throws Exception;\r", "filename": "java/modules/transports/src/test/java/org/apache/synapse/transport/testkit/tests/async/AsyncMessageTestCase.java"}], "repo": "synapse"}, {"commit": "https://github.com/apache/synapse/commit/1bb570de552e2a2c5dd859f21358a0d41c61fd45", "parent": "https://github.com/apache/synapse/commit/821e682f5e57ea7bd26f83829ec44e027e13ce40", "message": "fix NPE and undo wrong refactoring of popping the fault handler in a SequenceMediator when an exception is encountered\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/synapse/trunk@579139 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "synapse_28", "file": [{"additions": 1, "raw_url": "https://github.com/apache/synapse/raw/1bb570de552e2a2c5dd859f21358a0d41c61fd45/java/modules/core/src/main/java/org/apache/synapse/core/axis2/Axis2MessageContext.java", "blob_url": "https://github.com/apache/synapse/blob/1bb570de552e2a2c5dd859f21358a0d41c61fd45/java/modules/core/src/main/java/org/apache/synapse/core/axis2/Axis2MessageContext.java", "sha": "135c4a6f1fcaea1c19abf35352e2fb32e8258165", "changes": 2, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/synapse/contents/java/modules/core/src/main/java/org/apache/synapse/core/axis2/Axis2MessageContext.java?ref=1bb570de552e2a2c5dd859f21358a0d41c61fd45", "patch": "@@ -346,7 +346,7 @@ public Log getServiceLog() {\n         if (serviceName != null && synCfg.getProxyService(serviceName) != null) {\n             return LogFactory.getLog(SynapseConstants.SERVICE_LOGGER_PREFIX + serviceName);\n         } else {\n-            return null;\n+            return LogFactory.getLog(Axis2MessageContext.class);\n         }\n     }\n ", "filename": "java/modules/core/src/main/java/org/apache/synapse/core/axis2/Axis2MessageContext.java"}, {"additions": 15, "raw_url": "https://github.com/apache/synapse/raw/1bb570de552e2a2c5dd859f21358a0d41c61fd45/java/modules/core/src/main/java/org/apache/synapse/mediators/base/SequenceMediator.java", "blob_url": "https://github.com/apache/synapse/blob/1bb570de552e2a2c5dd859f21358a0d41c61fd45/java/modules/core/src/main/java/org/apache/synapse/mediators/base/SequenceMediator.java", "sha": "a33c2660a7c0bb84fc2ceb75941f95d1d7df50f8", "changes": 19, "status": "modified", "deletions": 4, "contents_url": "https://api.github.com/repos/apache/synapse/contents/java/modules/core/src/main/java/org/apache/synapse/mediators/base/SequenceMediator.java?ref=1bb570de552e2a2c5dd859f21358a0d41c61fd45", "patch": "@@ -74,6 +74,10 @@ public boolean mediate(MessageContext synCtx) {\n \n         if (traceOrDebugOn) {\n             traceOrDebug(traceOn, \"Start : Sequence <\" + (name == null ? \"anonymous\" : name) + \">\");\n+\n+            if (traceOn && trace.isTraceEnabled()) {\n+                trace.trace(\"Message : \" + synCtx);\n+            }\n         }\n \n         if (key == null) {\n@@ -114,11 +118,10 @@ public boolean mediate(MessageContext synCtx) {\n                     }\n                 }\n \n-                return super.mediate(synCtx);\n+                boolean result = super.mediate(synCtx);\n \n-            } finally {\n-\n-                // if we pushed an error handler, pop it from the fault stack before we exit\n+                // if we pushed an error handler, pop it from the fault stack\n+                // before we exit normally without an exception\n                 if (errorHandlerMediator != null) {\n                     Stack faultStack = synCtx.getFaultStack();\n                     if (faultStack != null && !faultStack.isEmpty()) {\n@@ -132,6 +135,10 @@ public boolean mediate(MessageContext synCtx) {\n                     }\n                 }\n \n+                return result;\n+\n+            } finally {\n+\n                 //If this sequence is finished it's task normally\n                 if (statsOn) {\n                     StatisticsUtils.processSequenceStatistics(synCtx);\n@@ -140,6 +147,10 @@ public boolean mediate(MessageContext synCtx) {\n                 StatisticsUtils.processProxyServiceStatistics(synCtx);\n \n                 if (traceOrDebugOn) {\n+                    if (traceOn && trace.isTraceEnabled()) {\n+                        trace.trace(\"Message : \" + synCtx);\n+                    }\n+\n                     traceOrDebug(traceOn,\n                         \"End : Sequence <\" + (name == null ? \"anonymous\" : name) + \">\");\n                 }", "filename": "java/modules/core/src/main/java/org/apache/synapse/mediators/base/SequenceMediator.java"}, {"additions": 20, "raw_url": "https://github.com/apache/synapse/raw/1bb570de552e2a2c5dd859f21358a0d41c61fd45/java/modules/core/src/main/java/org/apache/synapse/mediators/base/SynapseMediator.java", "blob_url": "https://github.com/apache/synapse/blob/1bb570de552e2a2c5dd859f21358a0d41c61fd45/java/modules/core/src/main/java/org/apache/synapse/mediators/base/SynapseMediator.java", "sha": "d50a145f569eefa13134edb3a56ed276447646c4", "changes": 28, "status": "modified", "deletions": 8, "contents_url": "https://api.github.com/repos/apache/synapse/contents/java/modules/core/src/main/java/org/apache/synapse/mediators/base/SynapseMediator.java?ref=1bb570de552e2a2c5dd859f21358a0d41c61fd45", "patch": "@@ -47,18 +47,24 @@\n      */\n     public boolean mediate(MessageContext synCtx) {\n \n-        if (log.isDebugEnabled()) {\n-            log.debug(\"Synapse main mediator :: mediate()\");\n+        boolean traceOn = isTraceOn(synCtx);\n+        boolean traceOrDebugOn = isTraceOrDebugOn(traceOn);\n+\n+        if (traceOrDebugOn) {\n+            traceOrDebug(traceOn, \"Start : Mediation using '\" + SynapseConstants.MAIN_SEQUENCE_KEY +\n+                \"' sequence Message is a : \" + (synCtx.isResponse() ? \"response\" : \"request\"));\n+\n+            if (traceOn && trace.isTraceEnabled()) {\n+                trace.trace(\"Message : \" + synCtx);\n+            }\n         }\n-        boolean shouldTrace = shouldTrace(synCtx.getTracingState());\n+\n         try {\n-            if (shouldTrace) {\n-                trace.trace(\"Start : Synapse main mediator\");\n-            }\n             // If the message flow path is OUT, then process the satatistics\n             if (synCtx.isResponse()) {\n                 StatisticsUtils.processAllSequenceStatistics(synCtx);\n             }\n+\n             //put the required property for the collecttng statistics for the message mediation\n             StatisticsStack sequenceStack = (StatisticsStack) synCtx.getProperty(\n                     SynapseConstants.SEQUENCE_STATISTICS_STACK);\n@@ -69,10 +75,16 @@ public boolean mediate(MessageContext synCtx) {\n             String seqName = \"MainSequence\";\n             boolean isFault = synCtx.getEnvelope().getBody().hasFault();\n             sequenceStack.put(seqName,System.currentTimeMillis(),!synCtx.isResponse(),true,isFault);\n+\n             return super.mediate(synCtx);\n+\n         } finally {\n-            if (shouldTrace) {\n-                trace.trace(\"End : Synapse main mediator\");\n+            if (traceOrDebugOn) {\n+                if (traceOn && trace.isTraceEnabled()) {\n+                    trace.trace(\"Message : \" + synCtx);\n+                }\n+                traceOrDebug(traceOn, \"End : Mediation using '\" +\n+                    SynapseConstants.MAIN_SEQUENCE_KEY + \"' sequence\");\n             }\n         }\n     }", "filename": "java/modules/core/src/main/java/org/apache/synapse/mediators/base/SynapseMediator.java"}, {"additions": 15, "raw_url": "https://github.com/apache/synapse/raw/1bb570de552e2a2c5dd859f21358a0d41c61fd45/java/modules/core/src/main/java/org/apache/synapse/mediators/builtin/DropMediator.java", "blob_url": "https://github.com/apache/synapse/blob/1bb570de552e2a2c5dd859f21358a0d41c61fd45/java/modules/core/src/main/java/org/apache/synapse/mediators/builtin/DropMediator.java", "sha": "b88ad5d5b5fdf8e31e0d0452753a0c3903da9fe2", "changes": 32, "status": "modified", "deletions": 17, "contents_url": "https://api.github.com/repos/apache/synapse/contents/java/modules/core/src/main/java/org/apache/synapse/mediators/builtin/DropMediator.java?ref=1bb570de552e2a2c5dd859f21358a0d41c61fd45", "patch": "@@ -39,29 +39,27 @@\n      */\n     public boolean mediate(MessageContext synCtx) {\n \n-        if (log.isDebugEnabled()) {\n-            log.debug(\"Drop mediator :: mediate()\");\n-        }\n-        boolean shouldTrace = shouldTrace(synCtx.getTracingState());\n-        if (shouldTrace) {\n-            trace.trace(\"Start : Drop mediator\");\n+        boolean traceOn = isTraceOn(synCtx);\n+        boolean traceOrDebugOn = isTraceOrDebugOn(traceOn);\n+\n+        if (traceOrDebugOn) {\n+            traceOrDebug(traceOn, \"Start : Drop mediator\");\n+\n+            if (traceOn && trace.isTraceEnabled()) {\n+                trace.trace(\"Message : \" + synCtx);\n+            }\n         }\n+\n         //If drop mediator is a child of a sequence\n         // and if this sequence is a IN or OUT sequence of a proxy service\n         StatisticsUtils.processProxyServiceStatistics(synCtx);\n         //If this a sequence is not  a IN or OUT sequence of a proxy service\n         StatisticsUtils.processAllSequenceStatistics(synCtx);\n-        if (synCtx.getTo() == null) {\n-            if (shouldTrace) {\n-                trace.trace(\"End : Drop mediator\");\n-            }\n-            return false;\n-        } else {\n-            synCtx.setTo(null);\n-            if (shouldTrace) {\n-                trace.trace(\"End : Drop mediator\");\n-            }\n-            return false;\n+\n+        if (traceOrDebugOn) {\n+            traceOrDebug(traceOn, \"End : Drop mediator\");\n         }\n+        synCtx.setTo(null);\n+        return false;\n     }\n }", "filename": "java/modules/core/src/main/java/org/apache/synapse/mediators/builtin/DropMediator.java"}, {"additions": 22, "raw_url": "https://github.com/apache/synapse/raw/1bb570de552e2a2c5dd859f21358a0d41c61fd45/java/modules/core/src/main/java/org/apache/synapse/mediators/builtin/LogMediator.java", "blob_url": "https://github.com/apache/synapse/blob/1bb570de552e2a2c5dd859f21358a0d41c61fd45/java/modules/core/src/main/java/org/apache/synapse/mediators/builtin/LogMediator.java", "sha": "604959506efb44747b98976dea95c7648ab7b26d", "changes": 39, "status": "modified", "deletions": 17, "contents_url": "https://api.github.com/repos/apache/synapse/contents/java/modules/core/src/main/java/org/apache/synapse/mediators/builtin/LogMediator.java?ref=1bb570de552e2a2c5dd859f21358a0d41c61fd45", "patch": "@@ -43,16 +43,17 @@\n  */\n public class LogMediator extends AbstractMediator {\n \n-    /** Log levels ,according to the  log level ,the information going to log  will  be changed */\n-    public static final int CUSTOM = 0;\n-    public static final int SIMPLE = 1;\n+    /** Log levels, according to the log level selected, the information logged will change */\n+    public static final int CUSTOM  = 0;\n+    public static final int SIMPLE  = 1;\n     public static final int HEADERS = 2;\n-    public static final int FULL = 3;\n+    public static final int FULL    = 3;\n \n-    /** The default log level has set to SIMPLE */\n+    public static final String DEFAULT_SEP = \", \";\n+\n+    /** The default log level is set to SIMPLE */\n     private int logLevel = SIMPLE;\n     /** The separator for which used to separate logging information */\n-    public static final String DEFAULT_SEP = \", \";\n     private String separator = DEFAULT_SEP;\n     /** The holder for the custom properties */\n     private List properties = new ArrayList();\n@@ -65,20 +66,24 @@\n      */\n     public boolean mediate(MessageContext synCtx) {\n \n-        if (log.isDebugEnabled()) {\n-            log.debug(\"Log mediator :: mediate()\");\n-        }\n-        boolean shouldTrace = shouldTrace(synCtx.getTracingState());\n-        if (shouldTrace) {\n-            trace.trace(\"Start : Log mediator\");\n+        boolean traceOn = isTraceOn(synCtx);\n+        boolean traceOrDebugOn = isTraceOrDebugOn(traceOn);\n+\n+        if (traceOrDebugOn) {\n+            traceOrDebug(traceOn, \"Start : Log mediator\");\n+\n+            if (traceOn && trace.isTraceEnabled()) {\n+                trace.trace(\"Message : \" + synCtx);\n+            }\n         }\n-        String logMessage = getLogMessage(synCtx);\n+\n         if (log.isInfoEnabled()) {\n-            log.info(logMessage);\n+            String logMessage = getLogMessage(synCtx);\n         }\n-        if (shouldTrace) {\n-            trace.trace(logMessage);\n-            trace.trace(\"End : Log mediator\");\n+\n+\n+        if (traceOrDebugOn) {\n+            traceOrDebug(traceOn, \"End : Log mediator\");\n         }\n         return true;\n     }", "filename": "java/modules/core/src/main/java/org/apache/synapse/mediators/builtin/LogMediator.java"}, {"additions": 2, "raw_url": "https://github.com/apache/synapse/raw/1bb570de552e2a2c5dd859f21358a0d41c61fd45/java/modules/core/src/test/java/org/apache/synapse/TestMessageContext.java", "blob_url": "https://github.com/apache/synapse/blob/1bb570de552e2a2c5dd859f21358a0d41c61fd45/java/modules/core/src/test/java/org/apache/synapse/TestMessageContext.java", "sha": "f30b3ded5bb21bff92374155a4752b0200165e98", "changes": 3, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/synapse/contents/java/modules/core/src/test/java/org/apache/synapse/TestMessageContext.java?ref=1bb570de552e2a2c5dd859f21358a0d41c61fd45", "patch": "@@ -29,6 +29,7 @@\n import org.apache.synapse.core.SynapseEnvironment;\n import org.apache.synapse.endpoints.Endpoint;\n import org.apache.commons.logging.Log;\n+import org.apache.commons.logging.LogFactory;\n \n import java.util.HashMap;\n import java.util.Map;\n@@ -264,7 +265,7 @@ public void pushFaultHandler(FaultHandler fault) {\n     }\n \n     public Log getServiceLog() {\n-        return null;\n+        return LogFactory.getLog(TestMessageContext.class);\n     }\n \n     public MessageContext getSynapseContext() {", "filename": "java/modules/core/src/test/java/org/apache/synapse/TestMessageContext.java"}, {"additions": 2, "raw_url": "https://github.com/apache/synapse/raw/1bb570de552e2a2c5dd859f21358a0d41c61fd45/java/modules/extensions/src/main/java/org/apache/synapse/mediators/bsf/ScriptMessageContext.java", "blob_url": "https://github.com/apache/synapse/blob/1bb570de552e2a2c5dd859f21358a0d41c61fd45/java/modules/extensions/src/main/java/org/apache/synapse/mediators/bsf/ScriptMessageContext.java", "sha": "eca2f93fb2e69bf1dac55aa8d293968cfbfb46f9", "changes": 3, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/synapse/contents/java/modules/extensions/src/main/java/org/apache/synapse/mediators/bsf/ScriptMessageContext.java?ref=1bb570de552e2a2c5dd859f21358a0d41c61fd45", "patch": "@@ -38,6 +38,7 @@\n import org.apache.synapse.core.SynapseEnvironment;\n import org.apache.synapse.endpoints.Endpoint;\n import org.apache.commons.logging.Log;\n+import org.apache.commons.logging.LogFactory;\n \n /**\n  * ScriptMessageContext decorates the Synapse MessageContext adding methods to use the\n@@ -295,6 +296,6 @@ public void pushFaultHandler(FaultHandler fault) {\n     }\n \n     public Log getServiceLog() {\n-        return null;\n+        return LogFactory.getLog(ScriptMessageContext.class);\n     }\n }", "filename": "java/modules/extensions/src/main/java/org/apache/synapse/mediators/bsf/ScriptMessageContext.java"}, {"additions": 2, "raw_url": "https://github.com/apache/synapse/raw/1bb570de552e2a2c5dd859f21358a0d41c61fd45/java/modules/extensions/src/test/java/org/apache/synapse/TestMessageContext.java", "blob_url": "https://github.com/apache/synapse/blob/1bb570de552e2a2c5dd859f21358a0d41c61fd45/java/modules/extensions/src/test/java/org/apache/synapse/TestMessageContext.java", "sha": "970b39ded57e190d4fdbda0ac6483b1c42c1f855", "changes": 3, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/synapse/contents/java/modules/extensions/src/test/java/org/apache/synapse/TestMessageContext.java?ref=1bb570de552e2a2c5dd859f21358a0d41c61fd45", "patch": "@@ -29,6 +29,7 @@\n import org.apache.synapse.core.SynapseEnvironment;\n import org.apache.synapse.endpoints.Endpoint;\n import org.apache.commons.logging.Log;\n+import org.apache.commons.logging.LogFactory;\n \n import java.util.HashMap;\n import java.util.Map;\n@@ -278,6 +279,6 @@ public void pushFaultHandler(FaultHandler fault) {\n     }\n \n     public Log getServiceLog() {\n-        return null;\n+        return LogFactory.getLog(TestMessageContext.class);\n     }\n }", "filename": "java/modules/extensions/src/test/java/org/apache/synapse/TestMessageContext.java"}], "repo": "synapse"}, {"commit": "https://github.com/apache/synapse/commit/13bcc2a11be1cf6fac002ece3c3de2ce4cbd22f3", "parent": "https://github.com/apache/synapse/commit/0819a17529fbbaa22e241f909cd7e906805e1ab3", "message": "fix NPE and support loading text scripts from local registry and OMElements from remote\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/synapse/trunk@518561 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "synapse_29", "file": [{"additions": 6, "raw_url": "https://github.com/apache/synapse/raw/13bcc2a11be1cf6fac002ece3c3de2ce4cbd22f3/java/modules/extensions/src/main/java/org/apache/synapse/mediators/bsf/ScriptMediator.java", "blob_url": "https://github.com/apache/synapse/blob/13bcc2a11be1cf6fac002ece3c3de2ce4cbd22f3/java/modules/extensions/src/main/java/org/apache/synapse/mediators/bsf/ScriptMediator.java", "sha": "10acf22272f6f362d79d9f14e05bdae54a178516", "changes": 7, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/synapse/contents/java/modules/extensions/src/main/java/org/apache/synapse/mediators/bsf/ScriptMediator.java?ref=13bcc2a11be1cf6fac002ece3c3de2ce4cbd22f3", "patch": "@@ -154,7 +154,12 @@ private boolean mediateWithExternalScript(MessageContext synCtx) {\n             } else {\r\n                 // load script if not already loaded\r\n                 if (scriptSourceCode == null) {\r\n-                    scriptSourceCode = ((OMElement) (synCtx.getEntry(key))).getText();\r\n+                    Object o = synCtx.getEntry(key);\r\n+                    if (o instanceof OMElement) {\r\n+                        scriptSourceCode = ((OMElement) (o)).getText();\r\n+                    } else if (o instanceof String) {\r\n+                        scriptSourceCode = (String) o;\r\n+                    }\r\n                 }\r\n                 // load BSFEngine if not already loaded\r\n                 if (bsfEngine == null) {\r", "filename": "java/modules/extensions/src/main/java/org/apache/synapse/mediators/bsf/ScriptMediator.java"}], "repo": "synapse"}, {"commit": "https://github.com/apache/synapse/commit/861bc5adf40cd8c1cd0663566356e9628004dfd1", "parent": "https://github.com/apache/synapse/commit/4101e14f2ae9926bac3877b83fee93897b87916c", "message": "Using the mkdirs directory instead of mkdir to create directories during configuration serialization. Added some null checks to defend against some potential NPEs. The serialize helper methods now return the constructed OMElements in addition to writing them to files.\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/synapse/trunk@891206 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "synapse_30", "file": [{"additions": 48, "raw_url": "https://github.com/apache/synapse/raw/861bc5adf40cd8c1cd0663566356e9628004dfd1/java/modules/core/src/main/java/org/apache/synapse/config/xml/MultiXMLConfigurationSerializer.java", "blob_url": "https://github.com/apache/synapse/blob/861bc5adf40cd8c1cd0663566356e9628004dfd1/java/modules/core/src/main/java/org/apache/synapse/config/xml/MultiXMLConfigurationSerializer.java", "sha": "af8ce08219a24ab547a22a471e85dc98ea9a0433", "changes": 80, "status": "modified", "deletions": 32, "contents_url": "https://api.github.com/repos/apache/synapse/contents/java/modules/core/src/main/java/org/apache/synapse/config/xml/MultiXMLConfigurationSerializer.java?ref=861bc5adf40cd8c1cd0663566356e9628004dfd1", "patch": "@@ -109,37 +109,37 @@ public void serialize(SynapseConfiguration synapseConfig) {\n     public void createDirectoryStructure() throws Exception {\n \n         File proxyDir = new File(rootDirectory, MultiXMLConfigurationBuilder.PROXY_SERVICES_DIR);\n-        if (!proxyDir.exists() && !proxyDir.mkdir()) {\n+        if (!proxyDir.exists() && !proxyDir.mkdirs()) {\n             throw new Exception(\"Error while creating the directory for proxy services : \" +\n                     proxyDir.getAbsolutePath());\n         }\n \n         File eventsDir = new File(rootDirectory, MultiXMLConfigurationBuilder.EVENTS_DIR);\n-        if (!eventsDir.exists() && !eventsDir.mkdir()) {\n+        if (!eventsDir.exists() && !eventsDir.mkdirs()) {\n             throw new Exception(\"Error while creating the directory for events : \" +\n                     eventsDir.getAbsolutePath());\n         }\n \n         File entriesDir = new File(rootDirectory, MultiXMLConfigurationBuilder.LOCAL_ENTRY_DIR);\n-        if (!entriesDir.exists() && !entriesDir.mkdir()) {\n+        if (!entriesDir.exists() && !entriesDir.mkdirs()) {\n             throw new Exception(\"Error while creating the local entries directory : \" +\n                     entriesDir.getAbsolutePath());\n         }\n \n         File eprDir = new File(rootDirectory, MultiXMLConfigurationBuilder.ENDPOINTS_DIR);\n-        if (!eprDir.exists() && !eprDir.mkdir()) {\n+        if (!eprDir.exists() && !eprDir.mkdirs()) {\n             throw new Exception(\"Error while creating the directory for endpoints : \" +\n                     eprDir.getAbsolutePath());\n         }\n \n         File seqDir = new File(rootDirectory, MultiXMLConfigurationBuilder.SEQUENCES_DIR);\n-        if (!seqDir.exists() && !seqDir.mkdir()) {\n+        if (!seqDir.exists() && !seqDir.mkdirs()) {\n             throw new Exception(\"Error while creating the directory for sequences : \" +\n                     seqDir.getAbsolutePath());\n         }\n \n         File tasksDir = new File(rootDirectory, MultiXMLConfigurationBuilder.TASKS_DIR);\n-        if (!tasksDir.exists() && !tasksDir.mkdir()) {\n+        if (!tasksDir.exists() && !tasksDir.mkdirs()) {\n             throw new Exception(\"Error while creating the directory for tasks : \" +\n                     tasksDir.getAbsolutePath());\n         }\n@@ -220,7 +220,7 @@ public void serializeSynapseXML(SynapseConfiguration synapseConfig) throws Excep\n \n     private void serializeSynapseXML(OMElement definitions) throws Exception {\n         File synapseXML = new File(rootDirectory, SynapseConstants.SYNAPSE_XML);\n-        if (!rootDirectory.exists() && !rootDirectory.mkdir()) {\n+        if (!rootDirectory.exists() && !rootDirectory.mkdirs()) {\n             throw new Exception(\"Error while creating the root configuration directory \" +\n                     \"at: \" + rootDirectory.getAbsolutePath());                \n         }\n@@ -239,13 +239,13 @@ private void serializeSynapseXML(OMElement definitions) throws Exception {\n         }\n     }\n \n-    public void serializeSynapseRegistry(Registry registry, SynapseConfiguration synapseConfig,\n+    public OMElement serializeSynapseRegistry(Registry registry, SynapseConfiguration synapseConfig,\n                                          OMElement parent) throws Exception {\n         OMElement registryElem = RegistrySerializer.serializeRegistry(null, registry);\n-        if (!String.valueOf(Boolean.TRUE).equals(\n-                synapseConfig.getProperty(MultiXMLConfigurationBuilder.SEPARATE_REGISTRY_DEFINITION))) {\n+        if (!Boolean.valueOf(synapseConfig.getProperty(\n+                MultiXMLConfigurationBuilder.SEPARATE_REGISTRY_DEFINITION)) && parent != null) {\n             parent.addChild(registryElem);\n-            return;\n+            return registryElem;\n         }\n \n         File registryConf = new File(rootDirectory, MultiXMLConfigurationBuilder.REGISTRY_FILE);\n@@ -261,11 +261,14 @@ public void serializeSynapseRegistry(Registry registry, SynapseConfiguration syn\n             throw new Exception(\"Error while creating the registry configuration file at : \" +\n                     registryConf.getAbsolutePath());\n         }\n+\n+        return registryElem;\n     }\n \n-    public void serializeProxy(ProxyService service, OMElement parent) throws Exception {\n+    public OMElement serializeProxy(ProxyService service, OMElement parent) throws Exception {\n+\n         File proxyDir = new File(rootDirectory, MultiXMLConfigurationBuilder.PROXY_SERVICES_DIR);\n-        if (!proxyDir.exists() && !proxyDir.mkdir()) {\n+        if (!proxyDir.exists() && !proxyDir.mkdirs()) {\n             throw new Exception(\"Error while creating the directory for proxy services : \" +\n                     proxyDir.getAbsolutePath());\n         }\n@@ -282,14 +285,16 @@ public void serializeProxy(ProxyService service, OMElement parent) throws Except\n                 throw new Exception(\"Error while creating the file : \" +\n                         proxyFile.getAbsolutePath());\n             }\n-        } else {\n+        } else if (parent != null) {\n             parent.addChild(proxyElem);\n         }\n+\n+        return proxyElem;\n     }\n \n-    public void serializeEventSource(SynapseEventSource source, OMElement parent) throws Exception {\n+    public OMElement serializeEventSource(SynapseEventSource source, OMElement parent) throws Exception {\n         File eventsDir = new File(rootDirectory, MultiXMLConfigurationBuilder.EVENTS_DIR);\n-        if (!eventsDir.exists() && !eventsDir.mkdir()) {\n+        if (!eventsDir.exists() && !eventsDir.mkdirs()) {\n             throw new Exception(\"Error while creating the directory for events : \" +\n                     eventsDir.getAbsolutePath());\n         }\n@@ -306,14 +311,17 @@ public void serializeEventSource(SynapseEventSource source, OMElement parent) th\n                 throw new Exception(\"Error while creating the file : \" +\n                         eventSrcFile.getAbsolutePath());\n             }\n-        } else {\n+        } else if (parent != null) {\n             parent.addChild(eventSrcElem);\n         }\n+\n+        return eventSrcElem;\n     }\n \n-    public void serializeTask(Startup task, OMElement parent) throws Exception {\n+    public OMElement serializeTask(Startup task, OMElement parent) throws Exception {\n+\n         File tasksDir = new File(rootDirectory, MultiXMLConfigurationBuilder.TASKS_DIR);\n-        if (!tasksDir.exists() && !tasksDir.mkdir()) {\n+        if (!tasksDir.exists() && !tasksDir.mkdirs()) {\n             throw new Exception(\"Error while creating the directory for tasks : \" +\n                     tasksDir.getAbsolutePath());\n         }\n@@ -330,15 +338,17 @@ public void serializeTask(Startup task, OMElement parent) throws Exception {\n                 throw new Exception(\"Error while creating the file : \" +\n                         taskFile.getAbsolutePath());\n             }\n-        } else {\n+        } else if (parent != null) {\n             parent.addChild(taskElem);\n         }\n+\n+        return taskElem;\n     }\n \n-    public void serializeSequence(SequenceMediator seq, OMElement parent) throws Exception {\n+    public OMElement serializeSequence(SequenceMediator seq, OMElement parent) throws Exception {\n \n         File seqDir = new File(rootDirectory, MultiXMLConfigurationBuilder.SEQUENCES_DIR);\n-        if (!seqDir.exists() && !seqDir.mkdir()) {\n+        if (!seqDir.exists() && !seqDir.mkdirs()) {\n             throw new Exception(\"Error while creating the directory for sequences : \" +\n                     seqDir.getAbsolutePath());\n         }\n@@ -355,15 +365,17 @@ public void serializeSequence(SequenceMediator seq, OMElement parent) throws Exc\n             } else {\n                 throw new Exception(\"Error while creating the file : \" + seqFile.getAbsolutePath());\n             }\n-        } else {\n+        } else if (parent != null) {\n             parent.addChild(seqElem);\n         }\n \n+        return seqElem;\n     }\n \n-    public void serializeEndpoint(Endpoint epr, OMElement parent) throws Exception {\n+    public OMElement serializeEndpoint(Endpoint epr, OMElement parent) throws Exception {\n+\n         File eprDir = new File(rootDirectory, MultiXMLConfigurationBuilder.ENDPOINTS_DIR);\n-        if (!eprDir.exists() && !eprDir.mkdir()) {\n+        if (!eprDir.exists() && !eprDir.mkdirs()) {\n             throw new Exception(\"Error while creating the directory for endpoints : \" +\n                     eprDir.getAbsolutePath());\n         }\n@@ -379,29 +391,30 @@ public void serializeEndpoint(Endpoint epr, OMElement parent) throws Exception {\n             } else {\n                 throw new Exception(\"Error while creating the file : \" + eprFile.getAbsolutePath());\n             }\n-        } else {\n+        } else if (parent != null) {\n             parent.addChild(eprElem);\n         }\n \n+        return eprElem;\n     }\n \n-    public void serializeLocalEntry(Object o, OMElement parent) throws Exception {\n+    public OMElement serializeLocalEntry(Object o, OMElement parent) throws Exception {\n         if (o instanceof SequenceMediator) {\n-            serializeSequence((SequenceMediator) o, parent);\n+            return serializeSequence((SequenceMediator) o, parent);\n         } else if (o instanceof Endpoint) {\n-            serializeEndpoint((Endpoint) o, parent);\n+            return serializeEndpoint((Endpoint) o, parent);\n         } else if (o instanceof Entry) {\n             Entry entry = (Entry) o;\n             if ((SynapseConstants.SERVER_HOST.equals(entry.getKey())\n                     || SynapseConstants.SERVER_IP.equals(entry.getKey()))\n                     || entry.getType() == Entry.REMOTE_ENTRY) {\n-                return;\n+                return null;\n             }\n \n             File entriesDir = new File(rootDirectory, MultiXMLConfigurationBuilder.\n                         LOCAL_ENTRY_DIR);\n             OMElement entryElem = EntrySerializer.serializeEntry(entry, null);\n-            if (!entriesDir.exists() && !entriesDir.mkdir()) {\n+            if (!entriesDir.exists() && !entriesDir.mkdirs()) {\n                 throw new Exception(\"Error while creating the local entries directory : \" +\n                         entriesDir.getAbsolutePath());\n             }\n@@ -417,10 +430,13 @@ public void serializeLocalEntry(Object o, OMElement parent) throws Exception {\n                     throw new Exception(\"Error while creating the file : \" +\n                             entryFile.getAbsolutePath());\n                 }\n-            } else {\n+            } else if (parent != null) {\n                 parent.addChild(entryElem);\n             }\n+\n+            return entryElem;\n         }\n+        return null;\n     }\n \n     private void cleanUpDirectory()  throws Exception {", "filename": "java/modules/core/src/main/java/org/apache/synapse/config/xml/MultiXMLConfigurationSerializer.java"}], "repo": "synapse"}]
