[
    {
        "repo": "directory-mavibot",
        "commit": "https://github.com/apache/directory-mavibot/commit/488e5cc26fc2d6a0ea98510d24d28f618791a1fb",
        "bug_id": "directory-mavibot_488e5cc",
        "message": "o Added more than one value in a page, stored the btree, and read it back\no Fixed a NPE when writing data in a page : when the data was filling the last page completely, that was generating a NPE.",
        "parent": "https://github.com/apache/directory-mavibot/commit/d76674563546547ef0ec4820f5572faee18d4f55",
        "patched_files": [
            "RecordManager.java"
        ],
        "file": [
            {
                "status": "modified",
                "additions": 8,
                "raw_url": "https://github.com/apache/directory-mavibot/raw/488e5cc26fc2d6a0ea98510d24d28f618791a1fb/mavibot/src/main/java/org/apache/mavibot/btree/store/RecordManager.java",
                "contents_url": "https://api.github.com/repos/apache/directory-mavibot/contents/mavibot/src/main/java/org/apache/mavibot/btree/store/RecordManager.java?ref=488e5cc26fc2d6a0ea98510d24d28f618791a1fb",
                "filename": "mavibot/src/main/java/org/apache/mavibot/btree/store/RecordManager.java",
                "deletions": 1,
                "sha": "ac95187244af2f69a95b848ffd846db1ffee06ab",
                "blob_url": "https://github.com/apache/directory-mavibot/blob/488e5cc26fc2d6a0ea98510d24d28f618791a1fb/mavibot/src/main/java/org/apache/mavibot/btree/store/RecordManager.java",
                "patch": "@@ -34,12 +34,12 @@\n \n import org.apache.mavibot.btree.BTree;\n import org.apache.mavibot.btree.BTreeFactory;\n+import org.apache.mavibot.btree.ElementHolder;\n import org.apache.mavibot.btree.Leaf;\n import org.apache.mavibot.btree.MemoryHolder;\n import org.apache.mavibot.btree.Node;\n import org.apache.mavibot.btree.Page;\n import org.apache.mavibot.btree.ReferenceHolder;\n-import org.apache.mavibot.btree.ElementHolder;\n import org.apache.mavibot.btree.exception.BTreeAlreadyManagedException;\n import org.apache.mavibot.btree.exception.EndOfFileExceededException;\n import org.apache.mavibot.btree.serializer.IntSerializer;\n@@ -1256,6 +1256,13 @@ private long storeRaw( long position, byte[] bytes, PageIO... pageIos )\n                     pageData.put( bytes, bytes.length - nbStored, remaining );\n                     pageData.reset();\n                     pageNb++;\n+\n+                    if ( pageNb == pageIos.length )\n+                    {\n+                        // We can stop here : we have reach the end of the page\n+                        break;\n+                    }\n+\n                     pageData = pageIos[pageNb].getData();\n                     pagePos = LINK_SIZE;\n                     nbStored -= remaining;",
                "changes": 9
            },
            {
                "status": "modified",
                "additions": 15,
                "raw_url": "https://github.com/apache/directory-mavibot/raw/488e5cc26fc2d6a0ea98510d24d28f618791a1fb/mavibot/src/test/java/org/apache/mavibot/btree/store/RecordManagerTest.java",
                "contents_url": "https://api.github.com/repos/apache/directory-mavibot/contents/mavibot/src/test/java/org/apache/mavibot/btree/store/RecordManagerTest.java?ref=488e5cc26fc2d6a0ea98510d24d28f618791a1fb",
                "filename": "mavibot/src/test/java/org/apache/mavibot/btree/store/RecordManagerTest.java",
                "deletions": 3,
                "sha": "61be56eb254eaa02b9692bcaf9088089bcdbe7b1",
                "blob_url": "https://github.com/apache/directory-mavibot/blob/488e5cc26fc2d6a0ea98510d24d28f618791a1fb/mavibot/src/test/java/org/apache/mavibot/btree/store/RecordManagerTest.java",
                "patch": "@@ -30,6 +30,7 @@\n \n import org.apache.mavibot.btree.BTree;\n import org.apache.mavibot.btree.exception.BTreeAlreadyManagedException;\n+import org.apache.mavibot.btree.exception.KeyNotFoundException;\n import org.apache.mavibot.btree.serializer.LongSerializer;\n import org.apache.mavibot.btree.serializer.StringSerializer;\n import org.junit.Test;\n@@ -92,9 +93,10 @@ public void testRecordManager() throws IOException, BTreeAlreadyManagedException\n \n     /**\n      * Test the creation of a RecordManager with a BTree containing data.\n+     * @throws KeyNotFoundException \n      */\n     @Test\n-    public void testRecordManagerWithBTree() throws IOException, BTreeAlreadyManagedException\n+    public void testRecordManagerWithBTree() throws IOException, BTreeAlreadyManagedException, KeyNotFoundException\n     {\n         File tempFile = File.createTempFile( \"mavibot\", \".db\" );\n         String tempFileName = tempFile.getAbsolutePath();\n@@ -110,8 +112,10 @@ public void testRecordManagerWithBTree() throws IOException, BTreeAlreadyManaged\n         // And make it managed by the RM\n         recordManager.manage( btree );\n \n-        // Now, add some elemnts in the BTree\n+        // Now, add some elements in the BTree\n+        btree.insert( 3L, \"V3\" );\n         btree.insert( 1L, \"V1\" );\n+        btree.insert( 5L, \"V5\" );\n \n         // Close the recordManager\n         recordManager.close();\n@@ -126,7 +130,7 @@ public void testRecordManagerWithBTree() throws IOException, BTreeAlreadyManaged\n         assertEquals( 1, managedBTrees.size() );\n         assertTrue( managedBTrees.contains( \"test\" ) );\n \n-        BTree btree1 = recordManager1.getManagedTree( \"test\" );\n+        BTree<Long, String> btree1 = recordManager1.getManagedTree( \"test\" );\n \n         assertNotNull( btree1 );\n         assertEquals( btree.getComparator().getClass().getName(), btree1.getComparator().getClass().getName() );\n@@ -137,5 +141,13 @@ public void testRecordManagerWithBTree() throws IOException, BTreeAlreadyManaged\n         assertEquals( btree.getPageSize(), btree1.getPageSize() );\n         assertEquals( btree.getRevision(), btree1.getRevision() );\n         assertEquals( btree.getValueSerializer().getClass().getName(), btree1.getValueSerializer().getClass().getName() );\n+\n+        // Check the stord element\n+        assertTrue( btree1.exist( 1L ) );\n+        assertTrue( btree1.exist( 3L ) );\n+        assertTrue( btree1.exist( 5L ) );\n+        assertEquals( \"V1\", btree1.get( 1L ) );\n+        assertEquals( \"V3\", btree1.get( 3L ) );\n+        assertEquals( \"V5\", btree1.get( 5L ) );\n     }\n }",
                "changes": 18
            }
        ],
        "unit_tests": [
            "RecordManagerTest.java"
        ]
    },
    {
        "buggy": false,
        "test_file": "mavibot/src/test/java/org/apache/mavibot/btree/store/RecordManagerTest.java",
        "buggy_files": [
            "mavibot/src/main/java/org/apache/mavibot/btree/store/RecordManager.java"
        ],
        "fixed": true
    }
]