[
    {
        "repo": "pulsar",
        "commit": "https://github.com/apache/pulsar/commit/17d2b4213ed401bc6dad14f4f76ef8ce270b0461",
        "bug_id": "pulsar_17d2b42",
        "message": "[Issue 4379] [Java Client] Build auth from class and params in PulsarClientImpl (#4381)\n\n* Flink client to accept all pulsar client conf\r\n\r\nIn this patch, we provide handles for flink connecotr to accept ClientConfigurationData, ProducerConfigurationData, ConsumerConfigurationData so flink client can:\r\n1. accept all params of client, producer and consumer\r\n2. Keep pace with pulsar-client\r\n\r\n* Flink client to accept all pulsar client conf\r\n\r\nAdded test cases\r\n\r\n* Removing commented code\r\n\r\n* flink: construct auth when building pulsarsource\r\n\r\n* fixed failing tests\r\n\r\n* removed unused import\r\n\r\n* Added builder defaults for lombok builder\r\nSet Auth from class and params (if set) in PulsarClientImpl.java\r\n\r\n* Remove @BUilder.default from attributes where no defaults exist\r\n\r\n* Added tests for ClientConfiguration Data builders\r\n\r\n* cosmetic changes in code\r\n\r\nCo-Authored-By: Sijie Guo <guosijie@gmail.com>\r\n\r\n* fixing typo\r\n\r\n* Removed test, not true anymore\r\n\r\n* Removed lombok builders\r\n\r\n* fixed the failing tests\r\n\r\n* Because the authentication field is transient, it is not serialized. On desirialization then its null and desirialization crashes with NPE",
        "parent": "https://github.com/apache/pulsar/commit/1473bda6329fcae97f476c351a84df7990b66b6e",
        "patched_files": [
            "PulsarJsonTableSink.java",
            "AuthenticationToken.java",
            "ConsumerConfigurationData.java",
            "PulsarSourceBuilder.java",
            "PulsarClientImpl.java",
            "PulsarJsonOutputFormat.java",
            "ConfigurationDataUtils.java",
            "PulsarOutputFormat.java",
            "ClientConfigurationData.java",
            "ProducerConfigurationData.java",
            "PulsarAvroOutputFormat.java",
            "PulsarCsvOutputFormat.java",
            "PulsarAvroTableSink.java"
        ],
        "file": [
            {
                "status": "modified",
                "additions": 11,
                "raw_url": "https://github.com/apache/pulsar/raw/17d2b4213ed401bc6dad14f4f76ef8ce270b0461/pulsar-client/src/main/java/org/apache/pulsar/client/impl/PulsarClientImpl.java",
                "contents_url": "https://api.github.com/repos/apache/pulsar/contents/pulsar-client/src/main/java/org/apache/pulsar/client/impl/PulsarClientImpl.java?ref=17d2b4213ed401bc6dad14f4f76ef8ce270b0461",
                "filename": "pulsar-client/src/main/java/org/apache/pulsar/client/impl/PulsarClientImpl.java",
                "deletions": 0,
                "sha": "0e58796786b8b55108a2b13da75a55bdcd13affc",
                "blob_url": "https://github.com/apache/pulsar/blob/17d2b4213ed401bc6dad14f4f76ef8ce270b0461/pulsar-client/src/main/java/org/apache/pulsar/client/impl/PulsarClientImpl.java",
                "patch": "@@ -44,6 +44,7 @@\n import java.util.regex.Pattern;\n import java.util.stream.Collectors;\n \n+import org.apache.commons.lang3.StringUtils;\n import org.apache.pulsar.client.api.Consumer;\n import org.apache.pulsar.client.api.ConsumerBuilder;\n import org.apache.pulsar.client.api.Producer;\n@@ -57,6 +58,7 @@\n import org.apache.pulsar.client.api.SubscriptionType;\n import org.apache.pulsar.client.api.schema.GenericSchema;\n import org.apache.pulsar.client.api.schema.SchemaInfoProvider;\n+import org.apache.pulsar.client.api.AuthenticationFactory;\n import org.apache.pulsar.client.impl.ConsumerImpl.SubscriptionMode;\n import org.apache.pulsar.client.impl.conf.ClientConfigurationData;\n import org.apache.pulsar.client.impl.conf.ConsumerConfigurationData;\n@@ -127,6 +129,7 @@ public PulsarClientImpl(ClientConfigurationData conf, EventLoopGroup eventLoopGr\n             throw new PulsarClientException.InvalidConfigurationException(\"Invalid client configuration\");\n         }\n         this.eventLoopGroup = eventLoopGroup;\n+        setAuth(conf);\n         this.conf = conf;\n         conf.getAuthentication().start();\n         this.cnxPool = cnxPool;\n@@ -142,6 +145,14 @@ public PulsarClientImpl(ClientConfigurationData conf, EventLoopGroup eventLoopGr\n         state.set(State.Open);\n     }\n \n+    private void setAuth(ClientConfigurationData conf) throws PulsarClientException {\n+        if (StringUtils.isBlank(conf.getAuthPluginClassName()) || StringUtils.isBlank( conf.getAuthParams())) {\n+            return;\n+        }\n+\n+        conf.setAuthentication(AuthenticationFactory.create(conf.getAuthPluginClassName(), conf.getAuthParams()));\n+    }\n+\n     public ClientConfigurationData getConfiguration() {\n         return conf;\n     }",
                "changes": 11
            },
            {
                "status": "modified",
                "additions": 9,
                "raw_url": "https://github.com/apache/pulsar/raw/17d2b4213ed401bc6dad14f4f76ef8ce270b0461/pulsar-client/src/main/java/org/apache/pulsar/client/impl/conf/ClientConfigurationData.java",
                "contents_url": "https://api.github.com/repos/apache/pulsar/contents/pulsar-client/src/main/java/org/apache/pulsar/client/impl/conf/ClientConfigurationData.java?ref=17d2b4213ed401bc6dad14f4f76ef8ce270b0461",
                "filename": "pulsar-client/src/main/java/org/apache/pulsar/client/impl/conf/ClientConfigurationData.java",
                "deletions": 6,
                "sha": "3ab86382c81f8d86593dcd7f45e9f6b8f3d5b6cd",
                "blob_url": "https://github.com/apache/pulsar/blob/17d2b4213ed401bc6dad14f4f76ef8ce270b0461/pulsar-client/src/main/java/org/apache/pulsar/client/impl/conf/ClientConfigurationData.java",
                "patch": "@@ -28,14 +28,12 @@\n import org.apache.pulsar.client.impl.auth.AuthenticationDisabled;\n \n import java.io.Serializable;\n-import java.util.Map;\n import java.util.concurrent.TimeUnit;\n \n /**\n  * This is a simple holder of the client configuration values.\n  */\n @Data\n-@Builder\n @NoArgsConstructor\n @AllArgsConstructor\n public class ClientConfigurationData implements Serializable, Cloneable {\n@@ -47,10 +45,8 @@\n \n     @JsonIgnore\n     private transient Authentication authentication = new AuthenticationDisabled();\n-    @JsonIgnore\n-    private transient String authPluginClassName;\n-    @JsonIgnore\n-    private transient Map<String, String> authParams;\n+    private String authPluginClassName;\n+    private String authParams;\n \n     private long operationTimeoutMs = 30000;\n     private long statsIntervalSeconds = 60;\n@@ -74,6 +70,13 @@\n     private long defaultBackoffIntervalNanos = TimeUnit.MILLISECONDS.toNanos(100);\n     private long maxBackoffIntervalNanos = TimeUnit.SECONDS.toNanos(30);\n \n+    public Authentication getAuthentication() {\n+        if (authentication == null) {\n+            this.authentication = new AuthenticationDisabled();\n+        }\n+        return authentication;\n+    }\n+\n     public boolean isUseTls() {\n         if (useTls)\n             return true;",
                "changes": 15
            },
            {
                "status": "modified",
                "additions": 0,
                "raw_url": "https://github.com/apache/pulsar/raw/17d2b4213ed401bc6dad14f4f76ef8ce270b0461/pulsar-client/src/main/java/org/apache/pulsar/client/impl/conf/ConsumerConfigurationData.java",
                "contents_url": "https://api.github.com/repos/apache/pulsar/contents/pulsar-client/src/main/java/org/apache/pulsar/client/impl/conf/ConsumerConfigurationData.java?ref=17d2b4213ed401bc6dad14f4f76ef8ce270b0461",
                "filename": "pulsar-client/src/main/java/org/apache/pulsar/client/impl/conf/ConsumerConfigurationData.java",
                "deletions": 1,
                "sha": "8aca7b2e7f0d4ec2df05fb133058ae19133ec269",
                "blob_url": "https://github.com/apache/pulsar/blob/17d2b4213ed401bc6dad14f4f76ef8ce270b0461/pulsar-client/src/main/java/org/apache/pulsar/client/impl/conf/ConsumerConfigurationData.java",
                "patch": "@@ -45,7 +45,6 @@\n import org.apache.pulsar.client.api.SubscriptionType;\n \n @Data\n-@Builder\n @NoArgsConstructor\n @AllArgsConstructor\n public class ConsumerConfigurationData<T> implements Serializable, Cloneable {",
                "changes": 1
            },
            {
                "status": "modified",
                "additions": 0,
                "raw_url": "https://github.com/apache/pulsar/raw/17d2b4213ed401bc6dad14f4f76ef8ce270b0461/pulsar-client/src/main/java/org/apache/pulsar/client/impl/conf/ProducerConfigurationData.java",
                "contents_url": "https://api.github.com/repos/apache/pulsar/contents/pulsar-client/src/main/java/org/apache/pulsar/client/impl/conf/ProducerConfigurationData.java?ref=17d2b4213ed401bc6dad14f4f76ef8ce270b0461",
                "filename": "pulsar-client/src/main/java/org/apache/pulsar/client/impl/conf/ProducerConfigurationData.java",
                "deletions": 1,
                "sha": "7ec8f9051f31f2e1ee9124118f233bd000f28dd9",
                "blob_url": "https://github.com/apache/pulsar/blob/17d2b4213ed401bc6dad14f4f76ef8ce270b0461/pulsar-client/src/main/java/org/apache/pulsar/client/impl/conf/ProducerConfigurationData.java",
                "patch": "@@ -42,7 +42,6 @@\n import lombok.Data;\n \n @Data\n-@Builder\n @NoArgsConstructor\n @AllArgsConstructor\n public class ProducerConfigurationData implements Serializable, Cloneable {",
                "changes": 1
            },
            {
                "status": "modified",
                "additions": 30,
                "raw_url": "https://github.com/apache/pulsar/raw/17d2b4213ed401bc6dad14f4f76ef8ce270b0461/pulsar-client/src/test/java/org/apache/pulsar/client/impl/auth/AuthenticationTokenTest.java",
                "contents_url": "https://api.github.com/repos/apache/pulsar/contents/pulsar-client/src/test/java/org/apache/pulsar/client/impl/auth/AuthenticationTokenTest.java?ref=17d2b4213ed401bc6dad14f4f76ef8ce270b0461",
                "filename": "pulsar-client/src/test/java/org/apache/pulsar/client/impl/auth/AuthenticationTokenTest.java",
                "deletions": 0,
                "sha": "e3a94ee8728306b08ddb62802299c6cd9b7731df",
                "blob_url": "https://github.com/apache/pulsar/blob/17d2b4213ed401bc6dad14f4f76ef8ce270b0461/pulsar-client/src/test/java/org/apache/pulsar/client/impl/auth/AuthenticationTokenTest.java",
                "patch": "@@ -29,7 +29,10 @@\n import java.util.Collections;\n \n import org.apache.commons.io.FileUtils;\n+import org.apache.pulsar.client.api.Authentication;\n import org.apache.pulsar.client.api.AuthenticationDataProvider;\n+import org.apache.pulsar.client.impl.PulsarClientImpl;\n+import org.apache.pulsar.client.impl.conf.ClientConfigurationData;\n import org.testng.annotations.Test;\n \n public class AuthenticationTokenTest {\n@@ -54,6 +57,33 @@ public void testAuthToken() throws Exception {\n         authToken.close();\n     }\n \n+    @Test\n+    public void testAuthTokenClientConfig() throws Exception {\n+        ClientConfigurationData clientConfig = new ClientConfigurationData();\n+        clientConfig.setServiceUrl(\"pulsar://service-url\");\n+        clientConfig.setAuthPluginClassName(AuthenticationToken.class.getName());\n+        clientConfig.setAuthParams(\"token-xyz\");\n+\n+        PulsarClientImpl pulsarClient = new PulsarClientImpl(clientConfig);\n+\n+        Authentication authToken = pulsarClient.getConfiguration().getAuthentication();\n+        assertEquals(authToken.getAuthMethodName(), \"token\");\n+\n+        AuthenticationDataProvider authData = authToken.getAuthData();\n+        assertTrue(authData.hasDataFromCommand());\n+        assertEquals(authData.getCommandData(), \"token-xyz\");\n+\n+        assertFalse(authData.hasDataForTls());\n+        assertNull(authData.getTlsCertificates());\n+        assertNull(authData.getTlsPrivateKey());\n+\n+        assertTrue(authData.hasDataForHttp());\n+        assertEquals(authData.getHttpHeaders(),\n+                Collections.singletonMap(\"Authorization\", \"Bearer token-xyz\").entrySet());\n+\n+        authToken.close();\n+    }\n+\n     @Test\n     public void testAuthTokenConfig() throws Exception {\n         AuthenticationToken authToken = new AuthenticationToken();",
                "changes": 30
            },
            {
                "status": "modified",
                "additions": 18,
                "raw_url": "https://github.com/apache/pulsar/raw/17d2b4213ed401bc6dad14f4f76ef8ce270b0461/pulsar-client/src/test/java/org/apache/pulsar/client/impl/conf/ConfigurationDataUtilsTest.java",
                "contents_url": "https://api.github.com/repos/apache/pulsar/contents/pulsar-client/src/test/java/org/apache/pulsar/client/impl/conf/ConfigurationDataUtilsTest.java?ref=17d2b4213ed401bc6dad14f4f76ef8ce270b0461",
                "filename": "pulsar-client/src/test/java/org/apache/pulsar/client/impl/conf/ConfigurationDataUtilsTest.java",
                "deletions": 0,
                "sha": "626c501015fc1b7f8d205ea728e5cd9b5a9896fc",
                "blob_url": "https://github.com/apache/pulsar/blob/17d2b4213ed401bc6dad14f4f76ef8ce270b0461/pulsar-client/src/test/java/org/apache/pulsar/client/impl/conf/ConfigurationDataUtilsTest.java",
                "patch": "@@ -25,6 +25,9 @@\n import java.io.IOException;\n import java.util.HashMap;\n import java.util.Map;\n+\n+import org.apache.pulsar.client.api.PulsarClientException;\n+import org.apache.pulsar.client.impl.PulsarClientImpl;\n import org.testng.annotations.Test;\n \n /**\n@@ -108,4 +111,19 @@ public void testLoadConfigurationDataWithUnknownFields() {\n             assertTrue(re.getCause() instanceof IOException);\n         }\n     }\n+\n+    @Test\n+    public void testConfigBuilder() throws PulsarClientException {\n+        ClientConfigurationData clientConfig = new ClientConfigurationData();\n+        clientConfig.setServiceUrl(\"pulsar://unknown:6650\");\n+        clientConfig.setStatsIntervalSeconds(80);\n+\n+        PulsarClientImpl pulsarClient = new PulsarClientImpl(clientConfig);\n+        assertTrue(pulsarClient != null, \"Pulsar client built using config should not be null\");\n+\n+        assertTrue(pulsarClient.getConfiguration().getServiceUrl().equals(\"pulsar://unknown:6650\"));\n+        assertEquals(pulsarClient.getConfiguration().getNumListenerThreads(), 1, \"builder default not set properly\");\n+        assertEquals(pulsarClient.getConfiguration().getStatsIntervalSeconds(), 80,\n+                \"builder default should overrite if set explicitly\");\n+    }\n }",
                "changes": 18
            },
            {
                "status": "modified",
                "additions": 1,
                "raw_url": "https://github.com/apache/pulsar/raw/17d2b4213ed401bc6dad14f4f76ef8ce270b0461/pulsar-flink/src/main/java/org/apache/flink/streaming/connectors/pulsar/PulsarSourceBuilder.java",
                "contents_url": "https://api.github.com/repos/apache/pulsar/contents/pulsar-flink/src/main/java/org/apache/flink/streaming/connectors/pulsar/PulsarSourceBuilder.java?ref=17d2b4213ed401bc6dad14f4f76ef8ce270b0461",
                "filename": "pulsar-flink/src/main/java/org/apache/flink/streaming/connectors/pulsar/PulsarSourceBuilder.java",
                "deletions": 1,
                "sha": "d4a25ee8dca9d791dfa44a099c501991b7aee20c",
                "blob_url": "https://github.com/apache/pulsar/blob/17d2b4213ed401bc6dad14f4f76ef8ce270b0461/pulsar-flink/src/main/java/org/apache/flink/streaming/connectors/pulsar/PulsarSourceBuilder.java",
                "patch": "@@ -290,7 +290,7 @@ private void setTransientFields() throws PulsarClientException {\n \n     private void setAuth() throws PulsarClientException{\n         if (StringUtils.isBlank(this.clientConfigurationData.getAuthPluginClassName())\n-                && this.clientConfigurationData.getAuthParams() == null || this.clientConfigurationData.getAuthParams().isEmpty())\n+                || StringUtils.isBlank(this.clientConfigurationData.getAuthParams()))\n             return;\n \n         clientConfigurationData.setAuthentication(",
                "changes": 2
            },
            {
                "status": "modified",
                "additions": 20,
                "raw_url": "https://github.com/apache/pulsar/raw/17d2b4213ed401bc6dad14f4f76ef8ce270b0461/pulsar-flink/src/test/java/org/apache/flink/batch/connectors/pulsar/PulsarAvroOutputFormatTest.java",
                "contents_url": "https://api.github.com/repos/apache/pulsar/contents/pulsar-flink/src/test/java/org/apache/flink/batch/connectors/pulsar/PulsarAvroOutputFormatTest.java?ref=17d2b4213ed401bc6dad14f4f76ef8ce270b0461",
                "filename": "pulsar-flink/src/test/java/org/apache/flink/batch/connectors/pulsar/PulsarAvroOutputFormatTest.java",
                "deletions": 30,
                "sha": "736c41751586da00d345cb94dc239870166297af",
                "blob_url": "https://github.com/apache/pulsar/blob/17d2b4213ed401bc6dad14f4f76ef8ce270b0461/pulsar-flink/src/test/java/org/apache/flink/batch/connectors/pulsar/PulsarAvroOutputFormatTest.java",
                "patch": "@@ -61,65 +61,55 @@ public void testPulsarAvroOutputFormatConstructor() {\n \n     @Test(expectedExceptions = IllegalArgumentException.class)\n     public void testPulsarAvroOutputFormatConstructorV2WhenServiceUrlIsNull() {\n-        ClientConfigurationData clientConf = ClientConfigurationData.builder()\n-                .serviceUrl(null)\n-                .build();\n+        ClientConfigurationData clientConf = new ClientConfigurationData();\n+        clientConf.setServiceUrl(null);\n \n-        ProducerConfigurationData producerConf = ProducerConfigurationData.builder()\n-                .topicName(\"testTopic\")\n-                .build();\n+        ProducerConfigurationData producerConf = new ProducerConfigurationData();\n+        producerConf.setTopicName(\"testTopic\");\n \n         new PulsarAvroOutputFormat(clientConf, producerConf);\n     }\n \n     @Test(expectedExceptions = IllegalArgumentException.class)\n     public void testPulsarAvroOutputFormatConstructorV2WhenTopicNameIsNull() {\n-        ClientConfigurationData clientConf = ClientConfigurationData.builder()\n-                .serviceUrl(\"testServiceUrl\")\n-                .build();\n+        ClientConfigurationData clientConf = new ClientConfigurationData();\n+        clientConf.setServiceUrl(\"testServiceUrl\");\n \n-        ProducerConfigurationData producerConf = ProducerConfigurationData.builder()\n-                .topicName(null)\n-                .build();\n+        ProducerConfigurationData producerConf = new ProducerConfigurationData();\n+        producerConf.setTopicName(null);\n \n         new PulsarAvroOutputFormat(clientConf, producerConf);\n     }\n \n     @Test(expectedExceptions = IllegalArgumentException.class)\n     public void testPulsarAvroOutputFormatConstructorV2WhenTopicNameIsBlank() {\n-        ClientConfigurationData clientConf = ClientConfigurationData.builder()\n-                .serviceUrl(\"testServiceUrl\")\n-                .build();\n+        ClientConfigurationData clientConf = new ClientConfigurationData();\n+        clientConf.setServiceUrl(\"testServiceUrl\");\n \n-        ProducerConfigurationData producerConf = ProducerConfigurationData.builder()\n-                .topicName(StringUtils.EMPTY)\n-                .build();\n+        ProducerConfigurationData producerConf = new ProducerConfigurationData();\n+        producerConf.setTopicName(StringUtils.EMPTY);\n \n         new PulsarAvroOutputFormat(clientConf, producerConf);\n     }\n \n     @Test(expectedExceptions = IllegalArgumentException.class)\n     public void testPulsarAvroOutputFormatConstructorV2WhenServiceUrlIsBlank() {\n-        ClientConfigurationData clientConf = ClientConfigurationData.builder()\n-                .serviceUrl(StringUtils.EMPTY)\n-                .build();\n+        ClientConfigurationData clientConf = new ClientConfigurationData();\n+        clientConf.setServiceUrl(StringUtils.EMPTY);\n \n-        ProducerConfigurationData producerConf = ProducerConfigurationData.builder()\n-                .topicName(StringUtils.EMPTY)\n-                .build();\n+        ProducerConfigurationData producerConf = new ProducerConfigurationData();\n+        producerConf.setTopicName(StringUtils.EMPTY);\n \n         new PulsarAvroOutputFormat(clientConf, producerConf);\n     }\n \n     @Test\n     public void testPulsarAvroOutputFormatConstructorV2() {\n-        ClientConfigurationData clientConf = ClientConfigurationData.builder()\n-                .serviceUrl(\"testServiceUrl\")\n-                .build();\n+        ClientConfigurationData clientConf = new ClientConfigurationData();\n+        clientConf.setServiceUrl(\"testServiceUrl\");\n \n-        ProducerConfigurationData producerConf = ProducerConfigurationData.builder()\n-                .topicName(\"testTopic\")\n-                .build();\n+        ProducerConfigurationData producerConf = new ProducerConfigurationData();\n+        producerConf.setTopicName(\"testTopic\");\n \n         PulsarAvroOutputFormat pulsarAvroOutputFormat = new PulsarAvroOutputFormat(clientConf, producerConf);\n         assertNotNull(pulsarAvroOutputFormat);",
                "changes": 50
            },
            {
                "status": "modified",
                "additions": 20,
                "raw_url": "https://github.com/apache/pulsar/raw/17d2b4213ed401bc6dad14f4f76ef8ce270b0461/pulsar-flink/src/test/java/org/apache/flink/batch/connectors/pulsar/PulsarCsvOutputFormatTest.java",
                "contents_url": "https://api.github.com/repos/apache/pulsar/contents/pulsar-flink/src/test/java/org/apache/flink/batch/connectors/pulsar/PulsarCsvOutputFormatTest.java?ref=17d2b4213ed401bc6dad14f4f76ef8ce270b0461",
                "filename": "pulsar-flink/src/test/java/org/apache/flink/batch/connectors/pulsar/PulsarCsvOutputFormatTest.java",
                "deletions": 30,
                "sha": "713f867b81b7bcfeb4c35266966acb0c86f3dd40",
                "blob_url": "https://github.com/apache/pulsar/blob/17d2b4213ed401bc6dad14f4f76ef8ce270b0461/pulsar-flink/src/test/java/org/apache/flink/batch/connectors/pulsar/PulsarCsvOutputFormatTest.java",
                "patch": "@@ -60,65 +60,55 @@ public void testPulsarCsvOutputFormatConstructor() {\n \n     @Test(expectedExceptions = IllegalArgumentException.class)\n     public void testPulsarCsvOutputFormatConstructorV2WhenServiceUrlIsNull() {\n-        ClientConfigurationData clientConf = ClientConfigurationData.builder()\n-                .serviceUrl(null)\n-                .build();\n+        ClientConfigurationData clientConf = new ClientConfigurationData();\n+        clientConf.setServiceUrl(null);\n \n-        ProducerConfigurationData producerConf = ProducerConfigurationData.builder()\n-                .topicName(\"testTopic\")\n-                .build();\n+        ProducerConfigurationData producerConf = new ProducerConfigurationData();\n+        producerConf.setTopicName(\"testTopic\");\n \n         new PulsarAvroOutputFormat(clientConf, producerConf);\n     }\n \n     @Test(expectedExceptions = IllegalArgumentException.class)\n     public void testPulsarCsvOutputFormatConstructorV2WhenTopicNameIsNull() {\n-        ClientConfigurationData clientConf = ClientConfigurationData.builder()\n-                .serviceUrl(\"testServiceUrl\")\n-                .build();\n+        ClientConfigurationData clientConf = new ClientConfigurationData();\n+        clientConf.setServiceUrl(\"testServiceUrl\");\n \n-        ProducerConfigurationData producerConf = ProducerConfigurationData.builder()\n-                .topicName(null)\n-                .build();\n+        ProducerConfigurationData producerConf = new ProducerConfigurationData();\n+        producerConf.setTopicName(null);\n \n         new PulsarAvroOutputFormat(clientConf, producerConf);\n     }\n \n     @Test(expectedExceptions = IllegalArgumentException.class)\n     public void testPulsarCsvOutputFormatConstructorV2WhenTopicNameIsBlank() {\n-        ClientConfigurationData clientConf = ClientConfigurationData.builder()\n-                .serviceUrl(\"testServiceUrl\")\n-                .build();\n+        ClientConfigurationData clientConf = new ClientConfigurationData();\n+        clientConf.setServiceUrl(\"testServiceUrl\");\n \n-        ProducerConfigurationData producerConf = ProducerConfigurationData.builder()\n-                .topicName(StringUtils.EMPTY)\n-                .build();\n+        ProducerConfigurationData producerConf = new ProducerConfigurationData();\n+        producerConf.setTopicName(StringUtils.EMPTY);\n \n         new PulsarAvroOutputFormat(clientConf, producerConf);\n     }\n \n     @Test(expectedExceptions = IllegalArgumentException.class)\n     public void testPulsarCsvOutputFormatConstructorV2WhenServiceUrlIsBlank() {\n-        ClientConfigurationData clientConf = ClientConfigurationData.builder()\n-                .serviceUrl(StringUtils.EMPTY)\n-                .build();\n+        ClientConfigurationData clientConf = new ClientConfigurationData();\n+        clientConf.setServiceUrl(StringUtils.EMPTY);\n \n-        ProducerConfigurationData producerConf = ProducerConfigurationData.builder()\n-                .topicName(\"testTopic\")\n-                .build();\n+        ProducerConfigurationData producerConf = new ProducerConfigurationData();\n+        producerConf.setTopicName(\"testTopic\");\n \n         new PulsarAvroOutputFormat(clientConf, producerConf);\n     }\n \n     @Test\n     public void testPulsarCsvOutputFormatConstructorV2() {\n-        ClientConfigurationData clientConf = ClientConfigurationData.builder()\n-                .serviceUrl(\"testServiceUrl\")\n-                .build();\n+        ClientConfigurationData clientConf = new ClientConfigurationData();\n+        clientConf.setServiceUrl(\"testServiceUrl\");\n \n-        ProducerConfigurationData producerConf = ProducerConfigurationData.builder()\n-                .topicName(\"testTopic\")\n-                .build();\n+        ProducerConfigurationData producerConf = new ProducerConfigurationData();\n+        producerConf.setTopicName(\"testTopic\");\n \n         PulsarCsvOutputFormat pulsarCsvOutputFormat = new PulsarCsvOutputFormat(clientConf, producerConf);\n         assertNotNull(pulsarCsvOutputFormat);",
                "changes": 50
            },
            {
                "status": "modified",
                "additions": 20,
                "raw_url": "https://github.com/apache/pulsar/raw/17d2b4213ed401bc6dad14f4f76ef8ce270b0461/pulsar-flink/src/test/java/org/apache/flink/batch/connectors/pulsar/PulsarJsonOutputFormatTest.java",
                "contents_url": "https://api.github.com/repos/apache/pulsar/contents/pulsar-flink/src/test/java/org/apache/flink/batch/connectors/pulsar/PulsarJsonOutputFormatTest.java?ref=17d2b4213ed401bc6dad14f4f76ef8ce270b0461",
                "filename": "pulsar-flink/src/test/java/org/apache/flink/batch/connectors/pulsar/PulsarJsonOutputFormatTest.java",
                "deletions": 30,
                "sha": "d45d9b14ba67264ec65ef44cfd159af79cc3c35f",
                "blob_url": "https://github.com/apache/pulsar/blob/17d2b4213ed401bc6dad14f4f76ef8ce270b0461/pulsar-flink/src/test/java/org/apache/flink/batch/connectors/pulsar/PulsarJsonOutputFormatTest.java",
                "patch": "@@ -60,65 +60,55 @@ public void testPulsarJsonOutputFormatConstructor() {\n \n     @Test(expectedExceptions = IllegalArgumentException.class)\n     public void testPulsarJsonOutputFormatConstructorV2WhenServiceUrlIsNull() {\n-        ClientConfigurationData clientConf = ClientConfigurationData.builder()\n-                .serviceUrl(null)\n-                .build();\n+        ClientConfigurationData clientConf = new ClientConfigurationData();\n+        clientConf.setServiceUrl(null);\n \n-        ProducerConfigurationData producerConf = ProducerConfigurationData.builder()\n-                .topicName(\"testTopic\")\n-                .build();\n+        ProducerConfigurationData producerConf = new ProducerConfigurationData();\n+        producerConf.setTopicName(\"testTopic\");\n \n         new PulsarAvroOutputFormat(clientConf, producerConf);\n     }\n \n     @Test(expectedExceptions = IllegalArgumentException.class)\n     public void testPulsarJsonROutputFormatConstructorV2WhenTopicNameIsNull() {\n-        ClientConfigurationData clientConf = ClientConfigurationData.builder()\n-                .serviceUrl(\"testServiceUrl\")\n-                .build();\n+        ClientConfigurationData clientConf = new ClientConfigurationData();\n+        clientConf.setServiceUrl(\"testServiceUrl\");\n \n-        ProducerConfigurationData producerConf = ProducerConfigurationData.builder()\n-                .topicName(null)\n-                .build();\n+        ProducerConfigurationData producerConf = new ProducerConfigurationData();\n+        producerConf.setTopicName(null);\n \n         new PulsarAvroOutputFormat(clientConf, producerConf);\n     }\n \n     @Test(expectedExceptions = IllegalArgumentException.class)\n     public void testPulsarJsonOutputFormatConstructorV2WhenTopicNameIsBlank() {\n-        ClientConfigurationData clientConf = ClientConfigurationData.builder()\n-                .serviceUrl(\"testServiceUrl\")\n-                .build();\n+        ClientConfigurationData clientConf = new ClientConfigurationData();\n+        clientConf.setServiceUrl(\"testServiceUrl\");\n \n-        ProducerConfigurationData producerConf = ProducerConfigurationData.builder()\n-                .topicName(StringUtils.EMPTY)\n-                .build();\n+        ProducerConfigurationData producerConf = new ProducerConfigurationData();\n+        producerConf.setTopicName(StringUtils.EMPTY);\n \n         new PulsarAvroOutputFormat(clientConf, producerConf);\n     }\n \n     @Test(expectedExceptions = IllegalArgumentException.class)\n     public void testPulsarJsonOutputFormatConstructorV2WhenServiceUrlIsBlank() {\n-        ClientConfigurationData clientConf = ClientConfigurationData.builder()\n-                .serviceUrl(StringUtils.EMPTY)\n-                .build();\n+        ClientConfigurationData clientConf = new ClientConfigurationData();\n+        clientConf.setServiceUrl(StringUtils.EMPTY);\n \n-        ProducerConfigurationData producerConf = ProducerConfigurationData.builder()\n-                .topicName(\"testTopic\")\n-                .build();\n+        ProducerConfigurationData producerConf = new ProducerConfigurationData();\n+        producerConf.setTopicName(\"testTopic\");\n \n         new PulsarAvroOutputFormat(clientConf, producerConf);\n     }\n \n     @Test\n     public void testPulsarJsonOutputFormatConstructorV2() {\n-        ClientConfigurationData clientConf = ClientConfigurationData.builder()\n-                .serviceUrl(\"testServiceUrl\")\n-                .build();\n+        ClientConfigurationData clientConf = new ClientConfigurationData();\n+        clientConf.setServiceUrl(\"testServiceUrl\");\n \n-        ProducerConfigurationData producerConf = ProducerConfigurationData.builder()\n-                .topicName(\"testTopic\")\n-                .build();\n+        ProducerConfigurationData producerConf = new ProducerConfigurationData();\n+        producerConf.setTopicName(\"testTopic\");\n \n         PulsarJsonOutputFormat pulsarJsonOutputFormat = new PulsarJsonOutputFormat(clientConf, producerConf);\n         assertNotNull(pulsarJsonOutputFormat);",
                "changes": 50
            },
            {
                "status": "modified",
                "additions": 25,
                "raw_url": "https://github.com/apache/pulsar/raw/17d2b4213ed401bc6dad14f4f76ef8ce270b0461/pulsar-flink/src/test/java/org/apache/flink/batch/connectors/pulsar/PulsarOutputFormatTest.java",
                "contents_url": "https://api.github.com/repos/apache/pulsar/contents/pulsar-flink/src/test/java/org/apache/flink/batch/connectors/pulsar/PulsarOutputFormatTest.java?ref=17d2b4213ed401bc6dad14f4f76ef8ce270b0461",
                "filename": "pulsar-flink/src/test/java/org/apache/flink/batch/connectors/pulsar/PulsarOutputFormatTest.java",
                "deletions": 36,
                "sha": "97b23b4868cc86830f0676711c11223fd38a6900",
                "blob_url": "https://github.com/apache/pulsar/blob/17d2b4213ed401bc6dad14f4f76ef8ce270b0461/pulsar-flink/src/test/java/org/apache/flink/batch/connectors/pulsar/PulsarOutputFormatTest.java",
                "patch": "@@ -64,76 +64,65 @@ public void testPulsarOutputFormatConstructorWhenSerializationSchemaIsNull() {\n \n     @Test(expectedExceptions = IllegalArgumentException.class)\n     public void testPulsarOutputFormatConstructorV2WhenServiceUrlIsNull() {\n-        ClientConfigurationData clientConf = ClientConfigurationData.builder()\n-                .serviceUrl(null)\n-                .build();\n+        ClientConfigurationData clientConf = new ClientConfigurationData();\n+        clientConf.setServiceUrl(null);\n \n-        ProducerConfigurationData producerConf = ProducerConfigurationData.builder()\n-                .topicName(\"testTopic\")\n-                .build();\n+        ProducerConfigurationData producerConf = new ProducerConfigurationData();\n+        producerConf.setTopicName(\"testTopic\");\n \n         new PulsarOutputFormat(clientConf, producerConf, text -> text.toString().getBytes());\n     }\n \n     @Test(expectedExceptions = IllegalArgumentException.class)\n     public void testPulsarOutputFormatConstructorV2WhenTopicNameIsNull() {\n-        ClientConfigurationData clientConf = ClientConfigurationData.builder()\n-                .serviceUrl(\"testServiceUrl\")\n-                .build();\n+        ClientConfigurationData clientConf = new ClientConfigurationData();\n+        clientConf.setServiceUrl(\"testServiceUrl\");\n \n-        ProducerConfigurationData producerConf = ProducerConfigurationData.builder()\n-                .topicName(null)\n-                .build();\n+        ProducerConfigurationData producerConf = new ProducerConfigurationData();\n+        producerConf.setTopicName(null);\n \n         new PulsarOutputFormat(clientConf, producerConf, text -> text.toString().getBytes());\n     }\n \n     @Test(expectedExceptions = IllegalArgumentException.class)\n     public void testPulsarOutputFormatConstructorV2WhenTopicNameIsBlank() {\n-        ClientConfigurationData clientConf = ClientConfigurationData.builder()\n-                .serviceUrl(\"testServiceUrl\")\n-                .build();\n+        ClientConfigurationData clientConf = new ClientConfigurationData();\n+        clientConf.setServiceUrl(\"testServiceUrl\");\n \n-        ProducerConfigurationData producerConf = ProducerConfigurationData.builder()\n-                .topicName(StringUtils.EMPTY)\n-                .build();\n+        ProducerConfigurationData producerConf = new ProducerConfigurationData();\n+        producerConf.setTopicName(StringUtils.EMPTY);\n \n         new PulsarOutputFormat(clientConf, producerConf, text -> text.toString().getBytes());\n     }\n \n     @Test(expectedExceptions = IllegalArgumentException.class)\n     public void testPulsarOutputFormatConstructorV2WhenServiceUrlIsBlank() {\n-        ClientConfigurationData clientConf = ClientConfigurationData.builder()\n-                .serviceUrl(StringUtils.EMPTY)\n-                .build();\n+        ClientConfigurationData clientConf = new ClientConfigurationData();\n+        clientConf.setServiceUrl(StringUtils.EMPTY);\n \n-        ProducerConfigurationData producerConf = ProducerConfigurationData.builder()\n-                .topicName(\"testTopic\")\n-                .build();\n+        ProducerConfigurationData producerConf = new ProducerConfigurationData();\n+        producerConf.setTopicName(\"testTopic\");\n \n         new PulsarOutputFormat(clientConf, producerConf, text -> text.toString().getBytes());\n     }\n \n     @Test(expectedExceptions = NullPointerException.class)\n     public void testPulsarOutputFormatConstructorV2WhenSerializationSchemaIsNull() {\n-        ClientConfigurationData clientConf = ClientConfigurationData.builder()\n-                .serviceUrl(\"testServiceUrl\")\n-                .build();\n-        ProducerConfigurationData producerConf = ProducerConfigurationData.builder()\n-                .topicName(\"testTopic\")\n-                .build();\n+        ClientConfigurationData clientConf = new ClientConfigurationData();\n+        clientConf.setServiceUrl(\"testServiceUrl\");\n+\n+        ProducerConfigurationData producerConf = new ProducerConfigurationData();\n+        producerConf.setTopicName(\"testTopic\");\n         new PulsarOutputFormat(clientConf, producerConf, null);\n     }\n \n     @Test\n     public void testPulsarOutputFormatConstructorV2() {\n-        ClientConfigurationData clientConf = ClientConfigurationData.builder()\n-                .serviceUrl(\"testServiceUrl\")\n-                .build();\n+        ClientConfigurationData clientConf = new ClientConfigurationData();\n+        clientConf.setServiceUrl(\"testServiceUrl\");\n \n-        ProducerConfigurationData producerConf = ProducerConfigurationData.builder()\n-                .topicName(\"testTopic\")\n-                .build();\n+        ProducerConfigurationData producerConf = new ProducerConfigurationData();\n+        producerConf.setTopicName(\"testTopic\");\n \n         PulsarCsvOutputFormat pulsarCsvOutputFormat = new PulsarCsvOutputFormat(clientConf, producerConf);\n         assertNotNull(pulsarCsvOutputFormat);",
                "changes": 61
            },
            {
                "status": "modified",
                "additions": 5,
                "raw_url": "https://github.com/apache/pulsar/raw/17d2b4213ed401bc6dad14f4f76ef8ce270b0461/pulsar-flink/src/test/java/org/apache/flink/streaming/connectors/pulsar/PulsarAvroTableSinkTest.java",
                "contents_url": "https://api.github.com/repos/apache/pulsar/contents/pulsar-flink/src/test/java/org/apache/flink/streaming/connectors/pulsar/PulsarAvroTableSinkTest.java?ref=17d2b4213ed401bc6dad14f4f76ef8ce270b0461",
                "filename": "pulsar-flink/src/test/java/org/apache/flink/streaming/connectors/pulsar/PulsarAvroTableSinkTest.java",
                "deletions": 6,
                "sha": "7fd48c2f15ab1ed2ee90af2f147e22fe53e98a0a",
                "blob_url": "https://github.com/apache/pulsar/blob/17d2b4213ed401bc6dad14f4f76ef8ce270b0461/pulsar-flink/src/test/java/org/apache/flink/streaming/connectors/pulsar/PulsarAvroTableSinkTest.java",
                "patch": "@@ -91,12 +91,11 @@ public void testEmitDataStream() throws Exception {\n \n     private PulsarAvroTableSink spySink() throws Exception {\n \n-        ClientConfigurationData clientConf = ClientConfigurationData.builder()\n-                .serviceUrl(SERVICE_URL)\n-                .build();\n-        ProducerConfigurationData producerConf = ProducerConfigurationData.builder()\n-                .topicName(TOPIC_NAME)\n-                .build();\n+        ClientConfigurationData clientConf = new ClientConfigurationData();\n+        clientConf.setServiceUrl(SERVICE_URL);\n+\n+        ProducerConfigurationData producerConf = new ProducerConfigurationData();\n+        producerConf.setTopicName(TOPIC_NAME);\n \n         PulsarAvroTableSink sink =\n                 new PulsarAvroTableSink(clientConf, producerConf, ROUTING_KEY, NasaMission.class);",
                "changes": 11
            },
            {
                "status": "modified",
                "additions": 8,
                "raw_url": "https://github.com/apache/pulsar/raw/17d2b4213ed401bc6dad14f4f76ef8ce270b0461/pulsar-flink/src/test/java/org/apache/flink/streaming/connectors/pulsar/PulsarJsonTableSinkTest.java",
                "contents_url": "https://api.github.com/repos/apache/pulsar/contents/pulsar-flink/src/test/java/org/apache/flink/streaming/connectors/pulsar/PulsarJsonTableSinkTest.java?ref=17d2b4213ed401bc6dad14f4f76ef8ce270b0461",
                "filename": "pulsar-flink/src/test/java/org/apache/flink/streaming/connectors/pulsar/PulsarJsonTableSinkTest.java",
                "deletions": 2,
                "sha": "668a8e5542f7e120e67fe1ef4e8f61c63672da45",
                "blob_url": "https://github.com/apache/pulsar/blob/17d2b4213ed401bc6dad14f4f76ef8ce270b0461/pulsar-flink/src/test/java/org/apache/flink/streaming/connectors/pulsar/PulsarJsonTableSinkTest.java",
                "patch": "@@ -85,10 +85,16 @@ public void testEmitDataStream() throws Exception {\n     }\n \n     private PulsarJsonTableSink spySink() throws Exception {\n+        ClientConfigurationData clientConfigurationData = new ClientConfigurationData();\n+        clientConfigurationData.setServiceUrl(SERVICE_URL);\n+\n+        ProducerConfigurationData producerConfigurationData = new ProducerConfigurationData();\n+        producerConfigurationData.setTopicName(TOPIC_NAME);\n+\n         PulsarJsonTableSink sink = new PulsarJsonTableSink(\n-                ClientConfigurationData.builder().serviceUrl(SERVICE_URL).build(),\n-                ProducerConfigurationData.builder().topicName(TOPIC_NAME).build(),\n+                clientConfigurationData, producerConfigurationData,\n                 ROUTING_KEY);\n+\n         FlinkPulsarProducer producer = Mockito.mock(FlinkPulsarProducer.class);\n         PowerMockito.whenNew(\n                 FlinkPulsarProducer.class",
                "changes": 10
            },
            {
                "status": "modified",
                "additions": 37,
                "raw_url": "https://github.com/apache/pulsar/raw/17d2b4213ed401bc6dad14f4f76ef8ce270b0461/pulsar-flink/src/test/java/org/apache/flink/streaming/connectors/pulsar/PulsarSourceBuilderTest.java",
                "contents_url": "https://api.github.com/repos/apache/pulsar/contents/pulsar-flink/src/test/java/org/apache/flink/streaming/connectors/pulsar/PulsarSourceBuilderTest.java?ref=17d2b4213ed401bc6dad14f4f76ef8ce270b0461",
                "filename": "pulsar-flink/src/test/java/org/apache/flink/streaming/connectors/pulsar/PulsarSourceBuilderTest.java",
                "deletions": 47,
                "sha": "c89ad7e5569888fdd1e78e5c95259a2cfdf8dab0",
                "blob_url": "https://github.com/apache/pulsar/blob/17d2b4213ed401bc6dad14f4f76ef8ce270b0461/pulsar-flink/src/test/java/org/apache/flink/streaming/connectors/pulsar/PulsarSourceBuilderTest.java",
                "patch": "@@ -61,12 +61,14 @@ public void testBuild() throws PulsarClientException {\n \n     @Test\n     public void testBuildWithConfPojo() throws PulsarClientException {\n-        ClientConfigurationData clientConf = ClientConfigurationData.builder().serviceUrl(\"testServiceUrl\").build();\n-        ConsumerConfigurationData consumerConf = ConsumerConfigurationData.builder()\n-                .topicNames(new HashSet<>(Arrays.asList(\"testTopic\")))\n-                .subscriptionName(\"testSubscriptionName\")\n-                .subscriptionInitialPosition(SubscriptionInitialPosition.Earliest)\n-                .build();\n+        ClientConfigurationData clientConf = new ClientConfigurationData();\n+        clientConf.setServiceUrl(\"testServiceUrl\");\n+\n+        ConsumerConfigurationData consumerConf = new ConsumerConfigurationData();\n+        consumerConf.setTopicNames(new HashSet<>(Arrays.asList(\"testTopic\")));\n+        consumerConf.setSubscriptionName(\"testSubscriptionName\");\n+        consumerConf.setSubscriptionInitialPosition(SubscriptionInitialPosition.Earliest);\n+\n         SourceFunction sourceFunction = pulsarSourceBuilder\n                 .pulsarAllClientConf(clientConf)\n                 .pulsarAllConsumerConf(consumerConf)\n@@ -160,11 +162,12 @@ public boolean isEndOfStream(T t) {\n \n     @Test(expectedExceptions = IllegalArgumentException.class)\n     public void testServiceUrlNullWithConfPojo() throws PulsarClientException {\n-        ClientConfigurationData clientConf = ClientConfigurationData.builder().serviceUrl(null).build();\n-        ConsumerConfigurationData consumerConf = ConsumerConfigurationData.builder()\n-                .topicNames(new HashSet<String>(Arrays.asList(\"testServiceUrl\")))\n-                .subscriptionName(\"testSubscriptionName\")\n-                .build();\n+        ClientConfigurationData clientConf = new ClientConfigurationData();\n+        clientConf.setServiceUrl(null);\n+\n+        ConsumerConfigurationData consumerConf = new ConsumerConfigurationData();\n+        consumerConf.setTopicNames(new HashSet<String>(Arrays.asList(\"testServiceUrl\")));\n+        consumerConf.setSubscriptionName(\"testSubscriptionName\");\n \n         pulsarSourceBuilder\n                 .pulsarAllClientConf(clientConf)\n@@ -174,11 +177,12 @@ public void testServiceUrlNullWithConfPojo() throws PulsarClientException {\n \n     @Test(expectedExceptions = IllegalArgumentException.class)\n     public void testServiceUrlWithBlankWithConfPojo() throws PulsarClientException {\n-        ClientConfigurationData clientConf = ClientConfigurationData.builder().serviceUrl(StringUtils.EMPTY).build();\n-        ConsumerConfigurationData consumerConf = ConsumerConfigurationData.builder()\n-                .topicNames(new HashSet<String>(Arrays.asList(\"testTopic\")))\n-                .subscriptionName(\"testSubscriptionName\")\n-                .build();\n+        ClientConfigurationData clientConf = new ClientConfigurationData();\n+        clientConf.setServiceUrl(StringUtils.EMPTY);\n+\n+        ConsumerConfigurationData consumerConf = new ConsumerConfigurationData();\n+        consumerConf.setTopicNames(new HashSet<String>(Arrays.asList(\"testTopic\")));\n+        consumerConf.setSubscriptionName(\"testSubscriptionName\");\n \n         pulsarSourceBuilder\n                 .pulsarAllClientConf(clientConf)\n@@ -188,11 +192,11 @@ public void testServiceUrlWithBlankWithConfPojo() throws PulsarClientException {\n \n     @Test(expectedExceptions = IllegalArgumentException.class)\n     public void testTopicPatternWithNullWithConfPojo() throws PulsarClientException {\n-        ClientConfigurationData clientConf = ClientConfigurationData.builder().serviceUrl(\"testServiceUrl\").build();\n-        ConsumerConfigurationData consumerConf = ConsumerConfigurationData.builder()\n-                .topicsPattern(null)\n-                .subscriptionName(\"testSubscriptionName\")\n-                .build();\n+        ClientConfigurationData clientConf = new ClientConfigurationData();\n+        clientConf.setServiceUrl(\"testServiceUrl\");\n+        ConsumerConfigurationData consumerConf = new ConsumerConfigurationData();\n+        consumerConf.setTopicsPattern(null);\n+        consumerConf.setSubscriptionName(\"testSubscriptionName\");\n \n         pulsarSourceBuilder\n                 .pulsarAllClientConf(clientConf)\n@@ -202,11 +206,12 @@ public void testTopicPatternWithNullWithConfPojo() throws PulsarClientException\n \n     @Test(expectedExceptions = IllegalArgumentException.class)\n     public void testSubscriptionNameWithNullWithConfPojo() throws PulsarClientException {\n-        ClientConfigurationData clientConf = ClientConfigurationData.builder().serviceUrl(\"testServiceUrl\").build();\n-        ConsumerConfigurationData consumerConf = ConsumerConfigurationData.builder()\n-                .topicNames(new HashSet<String>(Arrays.asList(\"testTopic\")))\n-                .subscriptionName(null)\n-                .build();\n+        ClientConfigurationData clientConf = new ClientConfigurationData();\n+        clientConf.setServiceUrl(\"testServiceUrl\");\n+\n+        ConsumerConfigurationData consumerConf = new ConsumerConfigurationData();\n+        consumerConf.setTopicNames(new HashSet<String>(Arrays.asList(\"testTopic\")));\n+        consumerConf.setSubscriptionName(null);\n \n         pulsarSourceBuilder\n                 .pulsarAllClientConf(clientConf)\n@@ -216,32 +221,17 @@ public void testSubscriptionNameWithNullWithConfPojo() throws PulsarClientExcept\n \n     @Test(expectedExceptions = IllegalArgumentException.class)\n     public void testSubscriptionNameWithBlankWithConfPojo() throws PulsarClientException {\n-        pulsarSourceBuilder.topic(null);\n-        ClientConfigurationData clientConf = ClientConfigurationData.builder().serviceUrl(\"testServiceUrl\").build();\n-        ConsumerConfigurationData consumerConf = ConsumerConfigurationData.builder()\n-                .topicNames(new HashSet<String>(Arrays.asList(\"testTopic\")))\n-                .subscriptionName(StringUtils.EMPTY)\n-                .build();\n-\n-        pulsarSourceBuilder\n-                .pulsarAllClientConf(clientConf)\n-                .pulsarAllConsumerConf(consumerConf)\n-                .build();\n-    }\n+        ClientConfigurationData clientConf = new ClientConfigurationData();\n+        clientConf.setServiceUrl(\"testServiceUrl\");\n \n-    @Test(expectedExceptions = IllegalArgumentException.class)\n-    public void testSubscriptionInitialPositionWithConfPojo() throws PulsarClientException {\n-        pulsarSourceBuilder.topic(null);\n-        ClientConfigurationData clientConf = ClientConfigurationData.builder().serviceUrl(\"testServiceUrl\").build();\n-        ConsumerConfigurationData consumerConf = ConsumerConfigurationData.builder()\n-                .topicNames(new HashSet<String>(Arrays.asList(\"testTopic\")))\n-                .subscriptionName(\"testSubscriptionName\")\n-                .subscriptionInitialPosition(null)\n-                .build();\n+        ConsumerConfigurationData consumerConf = new ConsumerConfigurationData();\n+        consumerConf.setTopicNames(new HashSet<String>(Arrays.asList(\"testTopic\")));\n+        consumerConf.setSubscriptionName(StringUtils.EMPTY);\n \n         pulsarSourceBuilder\n                 .pulsarAllClientConf(clientConf)\n                 .pulsarAllConsumerConf(consumerConf)\n                 .build();\n     }\n+\n }",
                "changes": 84
            }
        ],
        "unit_tests": [
            "PulsarSourceBuilderTest.java",
            "AuthenticationTokenTest.java",
            "PulsarJsonOutputFormatTest.java",
            "PulsarOutputFormatTest.java",
            "ConfigurationDataUtilsTest.java",
            "PulsarJsonTableSinkTest.java",
            "PulsarAvroOutputFormatTest.java",
            "PulsarCsvOutputFormatTest.java",
            "PulsarAvroTableSinkTest.java"
        ]
    },
    {
        "buggy": false,
        "test_file": "pulsar-flink/src/test/java/org/apache/flink/streaming/connectors/pulsar/PulsarJsonTableSinkTest.java",
        "buggy_files": [
            "pulsar-flink/src/main/java/org/apache/flink/streaming/connectors/pulsar/PulsarJsonTableSink.java",
            "pulsar-client/src/main/java/org/apache/pulsar/client/impl/auth/AuthenticationToken.java",
            "pulsar-client/src/main/java/org/apache/pulsar/client/impl/conf/ConsumerConfigurationData.java",
            "pulsar-flink/src/main/java/org/apache/flink/streaming/connectors/pulsar/PulsarSourceBuilder.java",
            "pulsar-client/src/main/java/org/apache/pulsar/client/impl/PulsarClientImpl.java",
            "pulsar-flink/src/main/java/org/apache/flink/batch/connectors/pulsar/PulsarJsonOutputFormat.java",
            "pulsar-client/src/main/java/org/apache/pulsar/client/impl/conf/ConfigurationDataUtils.java",
            "pulsar-flink/src/main/java/org/apache/flink/batch/connectors/pulsar/PulsarOutputFormat.java",
            "pulsar-client/src/main/java/org/apache/pulsar/client/impl/conf/ClientConfigurationData.java",
            "pulsar-client/src/main/java/org/apache/pulsar/client/impl/conf/ProducerConfigurationData.java",
            "pulsar-flink/src/main/java/org/apache/flink/batch/connectors/pulsar/PulsarAvroOutputFormat.java",
            "pulsar-flink/src/main/java/org/apache/flink/batch/connectors/pulsar/PulsarCsvOutputFormat.java",
            "pulsar-flink/src/main/java/org/apache/flink/streaming/connectors/pulsar/PulsarAvroTableSink.java"
        ],
        "fixed": true
    }
]