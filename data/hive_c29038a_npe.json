[
    {
        "repo": "hive",
        "commit": "https://github.com/apache/hive/commit/c29038af9bc237bc82b83abb4f1370017a8cd379",
        "bug_id": "hive_c29038a",
        "message": "HIVE-20698 : Add better message for NPE when inserting rows with null timestamp to druid (Nishant Bangarwa via Ashutosh Chauhan)\n\nSigned-off-by: Ashutosh Chauhan <hashutosh@apache.org>",
        "parent": "https://github.com/apache/hive/commit/9d522216972598a38b6750eb9b5d4af1b79cd6ba",
        "patched_files": [
            "DruidSerDe.java"
        ],
        "file": [
            {
                "status": "modified",
                "additions": 6,
                "raw_url": "https://github.com/apache/hive/raw/c29038af9bc237bc82b83abb4f1370017a8cd379/druid-handler/src/java/org/apache/hadoop/hive/druid/serde/DruidSerDe.java",
                "contents_url": "https://api.github.com/repos/apache/hive/contents/druid-handler/src/java/org/apache/hadoop/hive/druid/serde/DruidSerDe.java?ref=c29038af9bc237bc82b83abb4f1370017a8cd379",
                "filename": "druid-handler/src/java/org/apache/hadoop/hive/druid/serde/DruidSerDe.java",
                "deletions": 2,
                "sha": "cf37e37c1517d35f7e40e169a447ae36cc3bc202",
                "blob_url": "https://github.com/apache/hive/blob/c29038af9bc237bc82b83abb4f1370017a8cd379/druid-handler/src/java/org/apache/hadoop/hive/druid/serde/DruidSerDe.java",
                "patch": "@@ -357,9 +357,13 @@ protected SegmentAnalysis submitMetadataRequest(String address, SegmentMetadataQ\n     assert values.size() > granularityFieldIndex;\n     Preconditions.checkArgument(\n         fields.get(granularityFieldIndex).getFieldName().equals(Constants.DRUID_TIMESTAMP_GRANULARITY_COL_NAME));\n-    value.put(Constants.DRUID_TIMESTAMP_GRANULARITY_COL_NAME,\n+\n+    Timestamp timestamp =\n         ((TimestampObjectInspector) fields.get(granularityFieldIndex).getFieldObjectInspector())\n-            .getPrimitiveJavaObject(values.get(granularityFieldIndex)).toEpochMilli());\n+            .getPrimitiveJavaObject(values.get(granularityFieldIndex));\n+    Preconditions.checkNotNull(timestamp, \"Timestamp column cannot have null value\");\n+    value.put(Constants.DRUID_TIMESTAMP_GRANULARITY_COL_NAME, timestamp.toEpochMilli());\n+\n     if (values.size() == columns.length + 2) {\n       // Then partition number if any.\n       final int partitionNumPos = granularityFieldIndex + 1;",
                "changes": 8
            },
            {
                "status": "modified",
                "additions": 34,
                "raw_url": "https://github.com/apache/hive/raw/c29038af9bc237bc82b83abb4f1370017a8cd379/druid-handler/src/test/org/apache/hadoop/hive/druid/serde/TestDruidSerDe.java",
                "contents_url": "https://api.github.com/repos/apache/hive/contents/druid-handler/src/test/org/apache/hadoop/hive/druid/serde/TestDruidSerDe.java?ref=c29038af9bc237bc82b83abb4f1370017a8cd379",
                "filename": "druid-handler/src/test/org/apache/hadoop/hive/druid/serde/TestDruidSerDe.java",
                "deletions": 0,
                "sha": "acde2394d7fb10cfe6f8c1c1349361450f155afb",
                "blob_url": "https://github.com/apache/hive/blob/c29038af9bc237bc82b83abb4f1370017a8cd379/druid-handler/src/test/org/apache/hadoop/hive/druid/serde/TestDruidSerDe.java",
                "patch": "@@ -74,6 +74,7 @@\n import org.apache.hadoop.io.NullWritable;\n import org.apache.hadoop.io.Text;\n import org.junit.Before;\n+import org.junit.Rule;\n import org.junit.Test;\n \n import com.fasterxml.jackson.core.JsonParseException;\n@@ -90,6 +91,7 @@\n import io.druid.query.select.SelectResultValue;\n import io.druid.query.timeseries.TimeseriesResultValue;\n import io.druid.query.topn.TopNResultValue;\n+import org.junit.rules.ExpectedException;\n \n /**\n  * Basic tests for Druid SerDe. The examples are taken from Druid 0.9.1.1\n@@ -860,6 +862,38 @@ public void testDruidObjectSerializer()\n     serializeObject(tbl, serDe, ROW_OBJECT, DRUID_WRITABLE);\n   }\n \n+  @Rule\n+  public ExpectedException expectedEx = ExpectedException.none();\n+\n+  @Test\n+  public void testDruidObjectSerializerwithNullTimestamp()\n+      throws Exception {\n+    // Create, initialize, and test the SerDe\n+    DruidSerDe serDe = new DruidSerDe();\n+    Configuration conf = new Configuration();\n+    Properties tbl;\n+    // Mixed source (all types)\n+    tbl = createPropertiesSource(COLUMN_NAMES, COLUMN_TYPES);\n+    SerDeUtils.initializeSerDe(serDe, conf, tbl, null);\n+    Object[] row = new Object[] {\n+        null,\n+        new Text(\"dim1_val\"),\n+        new HiveCharWritable(new HiveChar(\"dim2_v\", 6)),\n+        new HiveVarcharWritable(new HiveVarchar(\"dim3_val\", 8)),\n+        new DoubleWritable(10669.3D),\n+        new FloatWritable(10669.45F),\n+        new LongWritable(1113939),\n+        new IntWritable(1112123),\n+        new ShortWritable((short) 12),\n+        new ByteWritable((byte) 0),\n+        null // granularity\n+    };\n+    expectedEx.expect(NullPointerException.class);\n+    expectedEx.expectMessage(\"Timestamp column cannot have null value\");\n+    // should fail as timestamp is null\n+    serializeObject(tbl, serDe, row, DRUID_WRITABLE);\n+  }\n+\n   private static Properties createPropertiesSource(String columnNames, String columnTypes) {\n     Properties tbl = new Properties();\n ",
                "changes": 34
            }
        ],
        "unit_tests": [
            "TestDruidSerDe.java"
        ]
    },
    {
        "buggy": false,
        "test_file": "druid-handler/src/test/org/apache/hadoop/hive/druid/serde/TestDruidSerDe.java",
        "buggy_files": [
            "druid-handler/src/java/org/apache/hadoop/hive/druid/serde/DruidSerDe.java"
        ],
        "fixed": true
    }
]