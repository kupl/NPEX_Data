[
    {
        "commit": "https://github.com/apache/velocity-tools/commit/0f94aa6f73d4c83ffde98a9b12628e85d2541b83",
        "file": [
            {
                "patch": "@@ -468,6 +468,10 @@ public XmlTool getFirst()\n         {\n             return this;\n         }\n+        else if (isEmpty())\n+        {\n+            return null;\n+        }\n         return new XmlTool(node());\n     }\n \n@@ -482,6 +486,10 @@ public XmlTool getLast()\n         {\n             return this;\n         }\n+        else if (isEmpty())\n+        {\n+            return null;\n+        }\n         return new XmlTool(nodes.get(size() - 1));\n     }\n \n@@ -493,7 +501,7 @@ public XmlTool getLast()\n      */\n     public XmlTool get(Number n)\n     {\n-        if (n == null)\n+        if (n == null || isEmpty())\n         {\n             return null;\n         }\n@@ -552,7 +560,7 @@ public XmlTool find(Object o)\n      */\n     public XmlTool find(String xpath)\n     {\n-        if (xpath == null || xpath.length() == 0)\n+        if (xpath == null || xpath.length() == 0 || isEmpty())\n         {\n             return null;\n         }",
                "additions": 10,
                "raw_url": "https://github.com/apache/velocity-tools/raw/0f94aa6f73d4c83ffde98a9b12628e85d2541b83/velocity-tools-generic/src/main/java/org/apache/velocity/tools/generic/XmlTool.java",
                "status": "modified",
                "changes": 12,
                "deletions": 2,
                "sha": "0fd75e63ae47db2ff69c1567bad35c19a77bc830",
                "blob_url": "https://github.com/apache/velocity-tools/blob/0f94aa6f73d4c83ffde98a9b12628e85d2541b83/velocity-tools-generic/src/main/java/org/apache/velocity/tools/generic/XmlTool.java",
                "filename": "velocity-tools-generic/src/main/java/org/apache/velocity/tools/generic/XmlTool.java",
                "contents_url": "https://api.github.com/repos/apache/velocity-tools/contents/velocity-tools-generic/src/main/java/org/apache/velocity/tools/generic/XmlTool.java?ref=0f94aa6f73d4c83ffde98a9b12628e85d2541b83"
            }
        ],
        "bug_id": "velocity-tools_1",
        "parent": "https://github.com/apache/velocity-tools/commit/cf7d9668c8f5d46dc2b566e8f41ca26ec1483449",
        "message": "[tools/generic] Add missing NPE protections\n\ngit-svn-id: https://svn.apache.org/repos/asf/velocity/tools/trunk@1854318 13f79535-47bb-0310-9956-ffa450edef68",
        "repo": "velocity-tools"
    },
    {
        "commit": "https://github.com/apache/velocity-tools/commit/1baca77fbd2e356bc6b81b6203ae65b0a28e4651",
        "file": [
            {
                "patch": "@@ -109,7 +109,10 @@ protected void putToolProperties()\n         putToolProperty(RESPONSE, getResponse());\n         putToolProperty(SESSION, getSession());\n         putToolProperty(SERVLET_CONTEXT_KEY, getServletContext());\n-        putToolProperty(PATH_KEY, ServletUtils.getPath(getRequest()));\n+        if (getRequest() != null)\n+        {\n+            putToolProperty(PATH_KEY, ServletUtils.getPath(getRequest()));\n+        }\n     }\n \n     protected List<Toolbox> getToolboxes()\n@@ -129,12 +132,14 @@ protected void putToolProperties()\n \n     protected void addToolboxesUnderKey(String toolboxKey)\n     {\n-        Toolbox reqTools = (Toolbox)getRequest().getAttribute(toolboxKey);\n-        if (reqTools != null)\n+        if (getRequest() != null)\n         {\n-            addToolbox(reqTools);\n+            Toolbox reqTools = (Toolbox)getRequest().getAttribute(toolboxKey);\n+            if (reqTools != null)\n+            {\n+                addToolbox(reqTools);\n+            }\n         }\n-\n         if (getSession() != null)\n         {\n             Toolbox sessTools = (Toolbox)getSession().getAttribute(toolboxKey);\n@@ -214,11 +219,11 @@ protected Object getServletApi(String key)\n     {\n         if (key.equals(REQUEST))\n         {\n-            return request;\n+            return getRequest();\n         }\n         else if(key.equals(RESPONSE))\n         {\n-            return response;\n+            return getResponse();\n         }\n         else if (key.equals(SESSION))\n         {\n@@ -241,7 +246,11 @@ else if (key.equals(APPLICATION))\n      */\n     public Object getAttribute(String key)\n     {\n-        Object o = request.getAttribute(key);\n+        Object o = null;\n+        if (getRequest() != null)\n+        {\n+            getRequest().getAttribute(key);\n+        }\n         if (o == null)\n         {\n             if (getSession() != null)\n@@ -324,8 +333,8 @@ public boolean containsKey(String key)\n      {\n          return super.containsKey(key)\n            || getAttribute(key) != null\n-           || key.equals(REQUEST) && request != null\n-           || key.equals(RESPONSE) && response != null\n+           || key.equals(REQUEST) && getRequest() != null\n+           || key.equals(RESPONSE) && getResponse() != null\n            || key.equals(SESSION) && getSession() != null\n            || key.equals(APPLICATION) && application != null;\n      }",
                "additions": 19,
                "raw_url": "https://github.com/apache/velocity-tools/raw/1baca77fbd2e356bc6b81b6203ae65b0a28e4651/velocity-tools-view/src/main/java/org/apache/velocity/tools/view/ViewToolContext.java",
                "status": "modified",
                "changes": 29,
                "deletions": 10,
                "sha": "09b6e204b21b7874540ea1f450a9fe6a75adfbfa",
                "blob_url": "https://github.com/apache/velocity-tools/blob/1baca77fbd2e356bc6b81b6203ae65b0a28e4651/velocity-tools-view/src/main/java/org/apache/velocity/tools/view/ViewToolContext.java",
                "filename": "velocity-tools-view/src/main/java/org/apache/velocity/tools/view/ViewToolContext.java",
                "contents_url": "https://api.github.com/repos/apache/velocity-tools/contents/velocity-tools-view/src/main/java/org/apache/velocity/tools/view/ViewToolContext.java?ref=1baca77fbd2e356bc6b81b6203ae65b0a28e4651"
            }
        ],
        "bug_id": "velocity-tools_2",
        "parent": "https://github.com/apache/velocity-tools/commit/40191e053be0cf3b9371ce19f416042d6ff5d218",
        "message": "[tools] Protection from NPEs in view context initialization whenever request is null\n\nThere may only be a servlet context scope in some cases, for instance in a webapp background thread.\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/velocity/tools/trunk@1801740 13f79535-47bb-0310-9956-ffa450edef68",
        "repo": "velocity-tools"
    },
    {
        "commit": "https://github.com/apache/velocity-tools/commit/12231ccb40aa1099cc9f2ca9b94660f32f0336c8",
        "file": [
            {
                "patch": "@@ -413,18 +413,18 @@ public static String getForwardURL(HttpServletRequest request,\n         if(actionConfig != null)\n         {\n             fc = actionConfig.findForwardConfig(forward);\n+        }\n \n-            // No ActionConfig forward?\n-            // Find the ForwardConfig in the global-forwards.\n-            if(fc == null)\n-            {\n-                fc = moduleConfig.findForwardConfig(forward);\n+        // No ActionConfig forward?\n+        // Find the ForwardConfig in the global-forwards.\n+        if(fc == null)\n+        {\n+            fc = moduleConfig.findForwardConfig(forward);\n \n-                // ok, give up\n-                if (fc == null)\n-                {\n-                    return null;\n-                }\n+            // ok, give up\n+            if (fc == null)\n+            {\n+                return null;\n             }\n         }\n ",
                "additions": 10,
                "raw_url": "https://github.com/apache/velocity-tools/raw/12231ccb40aa1099cc9f2ca9b94660f32f0336c8/src/main/java/org/apache/velocity/tools/struts/StrutsUtils.java",
                "status": "modified",
                "changes": 20,
                "deletions": 10,
                "sha": "d7b52cdad5ea12d4fa3aa2501690d5aac29facc1",
                "blob_url": "https://github.com/apache/velocity-tools/blob/12231ccb40aa1099cc9f2ca9b94660f32f0336c8/src/main/java/org/apache/velocity/tools/struts/StrutsUtils.java",
                "filename": "src/main/java/org/apache/velocity/tools/struts/StrutsUtils.java",
                "contents_url": "https://api.github.com/repos/apache/velocity-tools/contents/src/main/java/org/apache/velocity/tools/struts/StrutsUtils.java?ref=12231ccb40aa1099cc9f2ca9b94660f32f0336c8"
            },
            {
                "patch": "@@ -89,12 +89,12 @@ public void configure(Map params)\n         {\n             ValueParser parser = new ValueParser(params);\n             safeMode = parser.getBoolean(SAFE_MODE_KEY, true);\n-        }\n \n-        this.context = (ViewContext)params.get(ViewToolContext.CONTEXT_KEY);\n-        this.request = (HttpServletRequest)params.get(ViewContext.REQUEST);\n-        this.session = request.getSession(false);\n-        this.application = (ServletContext)params.get(ViewContext.SERVLET_CONTEXT_KEY);\n+            this.context = (ViewContext)params.get(ViewToolContext.CONTEXT_KEY);\n+            this.request = (HttpServletRequest)params.get(ViewContext.REQUEST);\n+            this.session = request.getSession(false);\n+            this.application = (ServletContext)params.get(ViewContext.SERVLET_CONTEXT_KEY);\n+        }\n     }\n \n ",
                "additions": 5,
                "raw_url": "https://github.com/apache/velocity-tools/raw/12231ccb40aa1099cc9f2ca9b94660f32f0336c8/src/main/java/org/apache/velocity/tools/view/ContextTool.java",
                "status": "modified",
                "changes": 10,
                "deletions": 5,
                "sha": "8c966b272a87c5c5e01f158f0866aa0ee76457fa",
                "blob_url": "https://github.com/apache/velocity-tools/blob/12231ccb40aa1099cc9f2ca9b94660f32f0336c8/src/main/java/org/apache/velocity/tools/view/ContextTool.java",
                "filename": "src/main/java/org/apache/velocity/tools/view/ContextTool.java",
                "contents_url": "https://api.github.com/repos/apache/velocity-tools/contents/src/main/java/org/apache/velocity/tools/view/ContextTool.java?ref=12231ccb40aa1099cc9f2ca9b94660f32f0336c8"
            },
            {
                "patch": "@@ -688,6 +688,10 @@ else if (path.endsWith(\".properties\"))\n             {\n                 throw new UnsupportedOperationException(msg);\n             }\n+            else\n+            {\n+                return null;\n+            }\n         }\n \n         // now, try to read the file",
                "additions": 4,
                "raw_url": "https://github.com/apache/velocity-tools/raw/12231ccb40aa1099cc9f2ca9b94660f32f0336c8/src/main/java/org/apache/velocity/tools/view/VelocityView.java",
                "status": "modified",
                "changes": 4,
                "deletions": 0,
                "sha": "8db6a017e8eeae4c4de460bf703f6a0cb0032a95",
                "blob_url": "https://github.com/apache/velocity-tools/blob/12231ccb40aa1099cc9f2ca9b94660f32f0336c8/src/main/java/org/apache/velocity/tools/view/VelocityView.java",
                "filename": "src/main/java/org/apache/velocity/tools/view/VelocityView.java",
                "contents_url": "https://api.github.com/repos/apache/velocity-tools/contents/src/main/java/org/apache/velocity/tools/view/VelocityView.java?ref=12231ccb40aa1099cc9f2ca9b94660f32f0336c8"
            }
        ],
        "bug_id": "velocity-tools_3",
        "parent": "https://github.com/apache/velocity-tools/commit/e9874faa28b7cbda39450dc915000479ea54ab04",
        "message": "fix NPEs found by FindBugs\n\ngit-svn-id: https://svn.apache.org/repos/asf/velocity/tools/branches/2.x@563977 13f79535-47bb-0310-9956-ffa450edef68",
        "repo": "velocity-tools"
    },
    {
        "commit": "https://github.com/apache/velocity-tools/commit/e9874faa28b7cbda39450dc915000479ea54ab04",
        "file": [
            {
                "patch": "@@ -279,7 +279,7 @@ else if (left instanceof String)\n                     //TODO: make it optional whether or not case is ignored\n                     comparison = ((String)left).compareToIgnoreCase((String)right);\n                 }\n-                else\n+                else if (left != null)\n                 {\n                     comparison = left.compareTo(right);\n                 }",
                "additions": 1,
                "raw_url": "https://github.com/apache/velocity-tools/raw/e9874faa28b7cbda39450dc915000479ea54ab04/src/main/java/org/apache/velocity/tools/generic/SortTool.java",
                "status": "modified",
                "changes": 2,
                "deletions": 1,
                "sha": "3537e0208be36630b9851e342515bbe82b5373da",
                "blob_url": "https://github.com/apache/velocity-tools/blob/e9874faa28b7cbda39450dc915000479ea54ab04/src/main/java/org/apache/velocity/tools/generic/SortTool.java",
                "filename": "src/main/java/org/apache/velocity/tools/generic/SortTool.java",
                "contents_url": "https://api.github.com/repos/apache/velocity-tools/contents/src/main/java/org/apache/velocity/tools/generic/SortTool.java?ref=e9874faa28b7cbda39450dc915000479ea54ab04"
            }
        ],
        "bug_id": "velocity-tools_4",
        "parent": "https://github.com/apache/velocity-tools/commit/68b88477693d925fc657a7ac38e0542a29f83e96",
        "message": "fix NPE (found by FindBugs)\n\ngit-svn-id: https://svn.apache.org/repos/asf/velocity/tools/branches/2.x@563963 13f79535-47bb-0310-9956-ffa450edef68",
        "repo": "velocity-tools"
    },
    {
        "commit": "https://github.com/apache/velocity-tools/commit/35dd4713e0b96648b2120e13cb03d1bc3d840e49",
        "file": [
            {
                "patch": "@@ -50,6 +50,7 @@ public Toolbox(Map<String,ToolInfo> toolInfo, Map<String,Object> properties)\n             throw new IllegalArgumentException(\"Toolbox must have one or more tools\");\n         }\n \n+        this.infoMap = toolInfo;\n         this.properties = properties;\n     }\n \n@@ -97,7 +98,11 @@ protected Object getFromCache(String key, String path)\n         else\n         {\n             Object tool = cache.get(key);\n-            if (tool == null || path == null)\n+            if (tool == null)\n+            {\n+                return null;\n+            }\n+            else if (path == null)\n             {\n                 return tool;\n             }\n@@ -131,6 +136,10 @@ protected Object getFromInfo(String key, String path,\n \n     protected boolean hasPermission(ToolInfo info, String path)\n     {\n+        if (info == null || path == null)\n+        {\n+            return true;\n+        }\n         return info.hasPermission(path);\n     }\n ",
                "additions": 10,
                "raw_url": "https://github.com/apache/velocity-tools/raw/35dd4713e0b96648b2120e13cb03d1bc3d840e49/src/main/java/org/apache/velocity/tools/Toolbox.java",
                "status": "modified",
                "changes": 11,
                "deletions": 1,
                "sha": "076de7d3e70d3ad5d731ea7828561f691a65e05a",
                "blob_url": "https://github.com/apache/velocity-tools/blob/35dd4713e0b96648b2120e13cb03d1bc3d840e49/src/main/java/org/apache/velocity/tools/Toolbox.java",
                "filename": "src/main/java/org/apache/velocity/tools/Toolbox.java",
                "contents_url": "https://api.github.com/repos/apache/velocity-tools/contents/src/main/java/org/apache/velocity/tools/Toolbox.java?ref=35dd4713e0b96648b2120e13cb03d1bc3d840e49"
            }
        ],
        "bug_id": "velocity-tools_5",
        "parent": "https://github.com/apache/velocity-tools/commit/8b55d92c88d95c44e6fbe19371cc73faa0ef7e27",
        "message": "fix two NPE's\n\ngit-svn-id: https://svn.apache.org/repos/asf/velocity/tools/branches/2.x@533280 13f79535-47bb-0310-9956-ffa450edef68",
        "repo": "velocity-tools"
    },
    {
        "commit": "https://github.com/apache/velocity-tools/commit/653652572c9c244d776ed5cc0c2ee831fa4de45b",
        "file": [
            {
                "patch": "@@ -54,10 +54,6 @@ protected void setSource(Map source)\n \n     protected Map getSource()\n     {\n-        if (source == null)\n-        {\n-            throw new NullPointerException(\"You must set a Map source for values to be parsed.\");\n-        }\n         return this.source;\n     }\n \n@@ -91,8 +87,17 @@ public Object get(String key)\n         return getValue(key);\n     }\n \n+    /**\n+     * Returns the value mapped to the specified key\n+     * in the {@link Map} returned by {@link #getSource()}. If there is\n+     * no source, then this will always return {@code null}.\n+     */\n     public Object getValue(String key)\n     {\n+        if (getSource() == null)\n+        {\n+            return null;\n+        }\n         return getSource().get(key);\n     }\n ",
                "additions": 9,
                "raw_url": "https://github.com/apache/velocity-tools/raw/653652572c9c244d776ed5cc0c2ee831fa4de45b/src/main/java/org/apache/velocity/tools/generic/ValueParser.java",
                "status": "modified",
                "changes": 13,
                "deletions": 4,
                "sha": "155e4268751d6aae37dbfac963240aba3cfe56b0",
                "blob_url": "https://github.com/apache/velocity-tools/blob/653652572c9c244d776ed5cc0c2ee831fa4de45b/src/main/java/org/apache/velocity/tools/generic/ValueParser.java",
                "filename": "src/main/java/org/apache/velocity/tools/generic/ValueParser.java",
                "contents_url": "https://api.github.com/repos/apache/velocity-tools/contents/src/main/java/org/apache/velocity/tools/generic/ValueParser.java?ref=653652572c9c244d776ed5cc0c2ee831fa4de45b"
            }
        ],
        "bug_id": "velocity-tools_6",
        "parent": "https://github.com/apache/velocity-tools/commit/a77b6d5524c459847ce49e0cfc6962237c15e72e",
        "message": "avoid NPEs and just return null when there's no source map\n\ngit-svn-id: https://svn.apache.org/repos/asf/velocity/tools/branches/2.x@584488 13f79535-47bb-0310-9956-ffa450edef68",
        "repo": "velocity-tools"
    },
    {
        "commit": "https://github.com/apache/velocity-tools/commit/82ce801bf8315b2d67635e93a7190bc3661917d1",
        "file": [
            {
                "patch": "@@ -206,9 +206,16 @@ public Toolbox createToolbox(String scope)\n         Map properties = scopedProperties.get(scope);\n \n         Toolbox toolbox;\n-        if (properties == null && globalProperties == null)\n+        if (properties == null)\n         {\n-            toolbox = new Toolbox(tools);\n+            if (globalProperties == null)\n+            {\n+                toolbox = new Toolbox(tools);\n+            }\n+            else\n+            {\n+                toolbox = new Toolbox(tools, globalProperties);\n+            }\n         }\n         else\n         {",
                "additions": 9,
                "raw_url": "https://github.com/apache/velocity-tools/raw/82ce801bf8315b2d67635e93a7190bc3661917d1/src/main/java/org/apache/velocity/tools/ToolboxFactory.java",
                "status": "modified",
                "changes": 11,
                "deletions": 2,
                "sha": "b88bc0f7a05de660061de330b77ddf36aee77d29",
                "blob_url": "https://github.com/apache/velocity-tools/blob/82ce801bf8315b2d67635e93a7190bc3661917d1/src/main/java/org/apache/velocity/tools/ToolboxFactory.java",
                "filename": "src/main/java/org/apache/velocity/tools/ToolboxFactory.java",
                "contents_url": "https://api.github.com/repos/apache/velocity-tools/contents/src/main/java/org/apache/velocity/tools/ToolboxFactory.java?ref=82ce801bf8315b2d67635e93a7190bc3661917d1"
            }
        ],
        "bug_id": "velocity-tools_7",
        "parent": "https://github.com/apache/velocity-tools/commit/4ea10d3283c01870e0c3295b56a5867583592b54",
        "message": "fix NPE when a tool has global properties but no local properties\n\ngit-svn-id: https://svn.apache.org/repos/asf/velocity/tools/branches/2.x@538803 13f79535-47bb-0310-9956-ffa450edef68",
        "repo": "velocity-tools"
    },
    {
        "commit": "https://github.com/apache/velocity-tools/commit/cf730fa5d038375418ae2e9f7dc0bc87e04d073d",
        "file": [
            {
                "patch": "@@ -33,6 +33,7 @@\n \n import org.apache.commons.logging.Log;\n import org.apache.commons.logging.LogFactory;\n+import org.apache.velocity.tools.generic.ValueParser;\n import org.apache.velocity.tools.view.context.ViewContext;\n import org.apache.velocity.tools.view.servlet.ServletUtils;\n \n@@ -63,6 +64,18 @@\n {\n     protected static final Log LOG = LogFactory.getLog(LinkTool.class);\n \n+    /**\n+     * Parameter key for configuring {@link #setSelfAbsolute} state\n+     * @since VelocityTools 1.3\n+     */\n+    public static final String SELF_ABSOLUTE_KEY = \"self-absolute\";\n+\n+    /**\n+     * Parameter key for configuring {@link #setSelfIncludeParameters} state\n+     * @since VelocityTools 1.3\n+     */\n+    public static final String SELF_INCLUDE_PARAMETERS_KEY = \"self-include-parameters\";\n+\n     /** Standard HTML delimiter for query data ('&') */\n     public static final String HTML_QUERY_DELIMITER = \"&\";\n \n@@ -92,6 +105,12 @@\n     /** The current delimiter for query data */\n     private String queryDataDelim;\n \n+    /** The self-absolute status */\n+    private boolean selfAbsolute;\n+\n+    /** The self-include-parameters status */\n+    private boolean selfParams;\n+\n \n     /** Java 1.4 encode method to use instead of deprecated 1.3 version. */\n     private static Method encode = null;\n@@ -122,6 +141,8 @@ public LinkTool()\n         anchor = null;\n         queryData = null;\n         queryDataDelim = HTML_QUERY_DELIMITER;\n+        selfAbsolute = false;\n+        selfParams = false;\n     }\n \n \n@@ -145,6 +166,36 @@ protected void setXhtml(boolean useXhtml)\n             (useXhtml) ? XHTML_QUERY_DELIMITER : HTML_QUERY_DELIMITER;\n     }\n \n+    /**\n+     * <p>Controls whether or not the {@link #getSelf()} method will return\n+     *    a duplicate with a URI in absolute or relative form.</p>\n+     *\n+     * @param selfAbsolute if true, the {@link #getSelf()} method will return\n+     *        a duplicate of this tool with an absolute self-referencing URI;\n+     *        if false, a duplicate with a relative self-referencing URI will\n+     *        be returned\n+     * @see #getSelf()\n+     * @since VelocityTools 1.3\n+     */\n+    protected void setSelfAbsolute(boolean selfAbsolute)\n+    {\n+        this.selfAbsolute = selfAbsolute;\n+    }\n+\n+    /**\n+     * <p>Controls whether or not the {@link #getSelf()} method will return\n+     *    a duplicate that includes current request parameters.</p>\n+     *\n+     * @param selfParams if true, the {@link #getSelf()} method will return\n+     *        a duplicate of this tool that includes current request parameters\n+     * @see #getSelf()\n+     * @since VelocityTools 1.3\n+     */\n+    protected void setSelfIncludeParameters(boolean selfParams)\n+    {\n+        this.selfParams = selfParams;\n+    }\n+\n \n     /**\n      * For internal use.\n@@ -266,11 +317,36 @@ protected LinkTool duplicate()\n             copy.anchor = this.anchor;\n             copy.queryData = this.queryData;\n             copy.queryDataDelim = this.queryDataDelim;\n+            copy.selfAbsolute = this.selfAbsolute;\n+            copy.selfParams = this.selfParams;\n             return copy;\n         }\n     }\n \n \n+    // --------------------------------------- Toolbox Methods -------------\n+\n+    /**\n+     * Configures this tool\n+     *\n+     * @param params Map of configuration parameters\n+     * @since VelocityTools 1.3\n+     */\n+    public void configure(Map params)\n+    {\n+        ValueParser parser = new ValueParser(params);\n+        Boolean selfAbsolute = parser.getBoolean(SELF_ABSOLUTE_KEY);\n+        if (selfAbsolute != null)\n+        {\n+            setSelfAbsolute(selfAbsolute.booleanValue());\n+        }\n+        Boolean selfParams = parser.getBoolean(SELF_INCLUDE_PARAMETERS_KEY);\n+        if (selfParams != null)\n+        {\n+            setSelfIncludeParameters(selfParams.booleanValue());\n+        }\n+    }\n+\n     /**\n      * Initializes this tool.\n      *\n@@ -601,6 +677,21 @@ public String getContextPath()\n     }\n \n \n+    /**\n+     * <p>Retrieves the path for the current request regardless of\n+     * whether this is a direct request or an include by the\n+     * RequestDispatcher. Note! This will not\n+     * represent any URI reference or query data set for this\n+     * LinkTool.</p>\n+     *\n+     * @since VelocityTools 1.3\n+     */\n+    public String getRequestPath()\n+    {\n+        return ServletUtils.getPath(request);\n+    }\n+\n+\n     /**\n      * Returns the full URI of this template without any query data.\n      * e.g. <code>http://myserver.net/myapp/stuff/View.vm</code>\n@@ -613,11 +704,47 @@ public String getBaseRef()\n     {\n         StringBuffer out = new StringBuffer();\n         out.append(getContextURL());\n-        out.append(ServletUtils.getPath(request));\n+        out.append(getRequestPath());\n         return out.toString();\n     }\n \n \n+    /**\n+     * This method returns a new \"self-referencing\" LinkTool for the current\n+     * request. By default, this is merely a shortcut for calling\n+     * {@link #relative(String uri)} using the result of\n+     * {@link #getRequestPath()}.  However, this tool can be configured\n+     * to return an absolute URI and/or to include the parameters of the\n+     * current request (in addition to any others set so far).\n+     *\n+     * @see {@link #uri(String uri)}\n+     * @see {@link #configure(Map params)}\n+     * @see {@link #setSelfAbsolute(boolean selfAbsolute)}\n+     * @see {@link #setSelfIncludeParameters(boolean selfParams)}\n+     * @since VelocityTools 1.3\n+     */\n+    public LinkTool getSelf()\n+    {\n+        // first set the uri per configuration\n+        LinkTool dupe;\n+        if (this.selfAbsolute)\n+        {\n+            dupe = uri(getBaseRef());\n+        }\n+        else\n+        {\n+            dupe = relative(getRequestPath());\n+        }\n+\n+        // then add the params (if so configured)\n+        if (this.selfParams)\n+        {\n+            dupe.params(request.getParameterMap());\n+        }\n+        return dupe;\n+    }\n+\n+\n     /**\n      * Returns the full URI reference that's been built with this tool,\n      * including the query string and anchor, e.g.\n@@ -658,9 +785,18 @@ public String toString()\n             out.append(encodeURL(anchor));\n         }\n \n-        // encode session ID into URL if sessions are used but cookies are\n-        // not supported\n-        return response.encodeURL(out.toString());\n+        String str = out.toString();\n+        if (str.length() == 0)\n+        {\n+            // avoid a potential NPE from Tomcat's response.encodeURL impl\n+            return str;\n+        }\n+        else\n+        {\n+            // encode session ID into URL if sessions are used but cookies are\n+            // not supported\n+            return response.encodeURL(str);\n+        }\n     }\n \n ",
                "additions": 140,
                "raw_url": "https://github.com/apache/velocity-tools/raw/cf730fa5d038375418ae2e9f7dc0bc87e04d073d/src/java/org/apache/velocity/tools/view/tools/LinkTool.java",
                "status": "modified",
                "changes": 144,
                "deletions": 4,
                "sha": "d1d226e6f657cbb57b77e277994a97facde3e8db",
                "blob_url": "https://github.com/apache/velocity-tools/blob/cf730fa5d038375418ae2e9f7dc0bc87e04d073d/src/java/org/apache/velocity/tools/view/tools/LinkTool.java",
                "filename": "src/java/org/apache/velocity/tools/view/tools/LinkTool.java",
                "contents_url": "https://api.github.com/repos/apache/velocity-tools/contents/src/java/org/apache/velocity/tools/view/tools/LinkTool.java?ref=cf730fa5d038375418ae2e9f7dc0bc87e04d073d"
            }
        ],
        "bug_id": "velocity-tools_8",
        "parent": "https://github.com/apache/velocity-tools/commit/d4f327b3d27bd48accf039f954161fa7b1654da4",
        "message": "add getSelf() method and support for configuring default behavior of it, also fix NPE problem with toString() for default $link\n\ngit-svn-id: https://svn.apache.org/repos/asf/velocity/tools/trunk@483622 13f79535-47bb-0310-9956-ffa450edef68",
        "repo": "velocity-tools"
    },
    {
        "commit": "https://github.com/apache/velocity-tools/commit/9f365e45a9ff6cc0b56e4757e8e5e0217a9afea5",
        "file": [
            {
                "patch": "@@ -69,7 +69,7 @@\n  * scope of a servlet environment.</p>\n  * \n  * @author <a href=\"mailto:nathan@esha.com\">Nathan Bubna</a>\n- * @version $Revision: 1.6 $ $Date: 2004/02/18 20:11:07 $\n+ * @version $Revision: 1.7 $ $Date: 2004/06/09 01:30:58 $\n  */\n \n public class RenderTool\n@@ -121,7 +121,7 @@ public String eval(Context ctx, String vtl) throws Exception\n     public String recurse(Context ctx, String vtl) throws Exception\n     {\n         String result = eval(ctx, vtl);\n-        if (result.equals(vtl))\n+        if (result == null || result.equals(vtl))\n         {\n             return result;\n         }",
                "additions": 2,
                "raw_url": "https://github.com/apache/velocity-tools/raw/9f365e45a9ff6cc0b56e4757e8e5e0217a9afea5/src/java/org/apache/velocity/tools/generic/RenderTool.java",
                "status": "modified",
                "changes": 4,
                "deletions": 2,
                "sha": "7d392fe6dc52ef247e4c39d3eb8b90856dce6e7c",
                "blob_url": "https://github.com/apache/velocity-tools/blob/9f365e45a9ff6cc0b56e4757e8e5e0217a9afea5/src/java/org/apache/velocity/tools/generic/RenderTool.java",
                "filename": "src/java/org/apache/velocity/tools/generic/RenderTool.java",
                "contents_url": "https://api.github.com/repos/apache/velocity-tools/contents/src/java/org/apache/velocity/tools/generic/RenderTool.java?ref=9f365e45a9ff6cc0b56e4757e8e5e0217a9afea5"
            }
        ],
        "bug_id": "velocity-tools_9",
        "parent": "https://github.com/apache/velocity-tools/commit/f9151cf659c6e8d6f442fdb29c0a932872986fb6",
        "message": "make recurse() handle evaluation failures gracefully instead of throwing an NPE\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/velocity-tools/trunk@72069 13f79535-47bb-0310-9956-ffa450edef68",
        "repo": "velocity-tools"
    },
    {
        "commit": "https://github.com/apache/velocity-tools/commit/9af66654c2012c3899d2cb0c6a04d78cc5cf2d43",
        "file": [
            {
                "patch": "@@ -107,7 +107,7 @@\n  * @author <a href=\"mailto:sidler@teamup.com\">Gabe Sidler</a>\n  * based on code by <a href=\"mailto:ted@husted.org\">Ted Husted</a>\n  *\n- * @version $Revision: 1.6 $\n+ * @version $Revision: 1.7 $\n  */\n public class StrutsUtils\n {\n@@ -123,10 +123,6 @@\n      */\n     public static DataSource getDataSource(ServletContext app)\n     {\n-        if (app == null)\n-        {\n-           return null;\n-        }\n         return (DataSource)app.getAttribute(Globals.DATA_SOURCE_KEY);\n     }\n \n@@ -144,11 +140,6 @@ public static DataSource getDataSource(ServletContext app)\n     public static DataSource getDataSource(HttpServletRequest request, \n                                            ServletContext app)\n     {\n-        if (app == null)\n-        {\n-            return null;\n-        }\n-\n         /* Identify the current module */\n         ModuleConfig moduleConfig = RequestUtils.getModuleConfig(request, app);\n         /* Return the requested data source instance */\n@@ -166,10 +157,6 @@ public static DataSource getDataSource(HttpServletRequest request,\n      */\n     public static ActionFormBeans getActionFormBeans(ServletContext app)\n     {\n-        if (app == null)\n-        {\n-            return null;\n-        }\n         return (ActionFormBeans)app.getAttribute(Globals.FORM_BEANS_KEY);\n     }\n \n@@ -183,11 +170,6 @@ public static ActionFormBeans getActionFormBeans(ServletContext app)\n     public static FormBeanConfig[] getFormBeanConfigs(HttpServletRequest request, \n                                                       ServletContext app)\n     {\n-        if (app == null)\n-        {\n-            return null;\n-        }\n-\n         /* Identify the current module */\n         ModuleConfig moduleConfig = RequestUtils.getModuleConfig(request, app);\n         return moduleConfig.findFormBeanConfigs();\n@@ -240,10 +222,6 @@ public static FormBeanConfig getFormBeanConfig(String name,\n      */\n     public static ActionForwards getActionForwards(ServletContext app)\n     {\n-        if (app == null)\n-        {\n-            return null;\n-        }\n         return (ActionForwards)app.getAttribute(Globals.FORWARDS_KEY);\n     }\n \n@@ -257,11 +235,6 @@ public static ActionForwards getActionForwards(ServletContext app)\n     public static ForwardConfig[] getForwardConfigs(HttpServletRequest request, \n                                                     ServletContext app)\n     {\n-        if (app == null)\n-        {\n-            return null;\n-        }\n-\n         /* Identify the current module */\n         ModuleConfig moduleConfig = RequestUtils.getModuleConfig(request, app);\n         return moduleConfig.findForwardConfigs();\n@@ -299,11 +272,6 @@ public static ForwardConfig getForwardConfig(String name,\n                                                  HttpServletRequest request, \n                                                  ServletContext app)\n     {\n-        if (app == null)\n-        {\n-            return null;\n-        }\n-\n         /* Identify the current module */\n         ModuleConfig moduleConfig = RequestUtils.getModuleConfig(request, app);\n         return moduleConfig.findForwardConfig(name);\n@@ -319,10 +287,6 @@ public static ForwardConfig getForwardConfig(String name,\n      */\n     public static ActionMappings getActionMappings(ServletContext app)\n     {\n-        if (app == null)\n-        {\n-            return null;\n-        }\n         return (ActionMappings)app.getAttribute(Globals.MAPPINGS_KEY);\n     }\n \n@@ -336,11 +300,6 @@ public static ActionMappings getActionMappings(ServletContext app)\n     public static ActionConfig[] getActionConfigs(HttpServletRequest request, \n                                                   ServletContext app)\n     {\n-        if (app == null)\n-        {\n-            return null;\n-        }\n-\n         /* Identify the current module */\n         ModuleConfig moduleConfig = RequestUtils.getModuleConfig(request, app);\n         return moduleConfig.findActionConfigs();\n@@ -378,11 +337,6 @@ public static ActionConfig getActionConfig(String path,\n                                                HttpServletRequest request, \n                                                ServletContext app)\n     {\n-        if (app == null)\n-        {\n-            return null;\n-        }\n-\n         /* Identify the current module */\n         ModuleConfig moduleConfig = RequestUtils.getModuleConfig(request, app);\n         return moduleConfig.findActionConfig(path);\n@@ -398,10 +352,6 @@ public static ActionConfig getActionConfig(String path,\n      */\n     public static MessageResources getMessageResources(ServletContext app)\n     {\n-        if (app == null)\n-        {\n-            return null;\n-        }\n         return (MessageResources)app.getAttribute(Globals.MESSAGES_KEY);\n     }\n \n@@ -415,11 +365,6 @@ public static MessageResources getMessageResources(ServletContext app)\n     public static MessageResources getMessageResources(HttpServletRequest request, \n                                                        ServletContext app)\n     {\n-        if (app == null)\n-        {\n-            return null;\n-        }\n-\n         /* Identify the current module */\n         ModuleConfig moduleConfig = RequestUtils.getModuleConfig(request, app);\n         return (MessageResources)app.getAttribute(Globals.MESSAGES_KEY + \n@@ -437,10 +382,6 @@ public static MessageResources getMessageResources(HttpServletRequest request,\n      */\n     public static String getServletMapping(ServletContext app)\n     {\n-        if (app == null)\n-        {\n-            return null;\n-        }\n         return (String)app.getAttribute(Globals.SERVLET_KEY);\n     }\n \n@@ -464,7 +405,7 @@ public static Locale getLocale(HttpServletRequest request,\n         {\n             locale = (Locale)session.getAttribute(Globals.LOCALE_KEY);\n         }\n-        if (locale == null && request != null)\n+        if (locale == null)\n         {\n             locale = request.getLocale();\n         }\n@@ -498,10 +439,6 @@ public static String getToken(HttpSession session)\n      */\n     public static ActionErrors getActionErrors(HttpServletRequest request)\n     {\n-        if (request == null)\n-        {\n-            return null;\n-        }\n         return (ActionErrors)request.getAttribute(Globals.ERROR_KEY);\n     }\n \n@@ -514,10 +451,6 @@ public static ActionErrors getActionErrors(HttpServletRequest request)\n      */\n     public static ActionMessages getActionMessages(HttpServletRequest request)\n     {\n-        if (request == null)\n-        {\n-            return null;\n-        }\n         return (ActionMessages)request.getAttribute(Globals.MESSAGE_KEY);\n     }\n \n@@ -531,10 +464,6 @@ public static ActionMessages getActionMessages(HttpServletRequest request)\n      */\n     public static Throwable getException(HttpServletRequest request)\n     {\n-        if (request == null)\n-        {\n-            return null;\n-        }\n         return (Throwable)request.getAttribute(Globals.EXCEPTION_KEY);\n     }\n \n@@ -547,10 +476,6 @@ public static Throwable getException(HttpServletRequest request)\n      */\n     public static MultipartRequestWrapper getMultipartRequestWrapper(HttpServletRequest request)\n     {\n-        if (request == null)\n-        {\n-            return null;\n-        }\n         return (MultipartRequestWrapper)request.getAttribute(Globals.MULTIPART_KEY);\n     }\n \n@@ -563,10 +488,6 @@ public static MultipartRequestWrapper getMultipartRequestWrapper(HttpServletRequ\n      */\n     public static ActionConfig getActionConfig(HttpServletRequest request)\n     {\n-        if (request == null)\n-        {\n-           return null;\n-        }\n         return (ActionConfig)request.getAttribute(Globals.MAPPING_KEY);\n     }\n ",
                "additions": 2,
                "raw_url": "https://github.com/apache/velocity-tools/raw/9af66654c2012c3899d2cb0c6a04d78cc5cf2d43/src/java/org/apache/velocity/tools/struts/StrutsUtils.java",
                "status": "modified",
                "changes": 83,
                "deletions": 81,
                "sha": "0574cf7dd50935ae517f501c3938a2b2d6fb553a",
                "blob_url": "https://github.com/apache/velocity-tools/blob/9af66654c2012c3899d2cb0c6a04d78cc5cf2d43/src/java/org/apache/velocity/tools/struts/StrutsUtils.java",
                "filename": "src/java/org/apache/velocity/tools/struts/StrutsUtils.java",
                "contents_url": "https://api.github.com/repos/apache/velocity-tools/contents/src/java/org/apache/velocity/tools/struts/StrutsUtils.java?ref=9af66654c2012c3899d2cb0c6a04d78cc5cf2d43"
            }
        ],
        "bug_id": "velocity-tools_10",
        "parent": "https://github.com/apache/velocity-tools/commit/ba7a64bbca1fbdb0ceb9fb855fba19ee5d007a19",
        "message": "remove unnecessary null testing on HttpServletRequest and ServletContext parameters.  if those aren't passed a NPE *should* get thrown\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/velocity-tools/trunk@71753 13f79535-47bb-0310-9956-ffa450edef68",
        "repo": "velocity-tools"
    }
]