{
    "maven-surefire_08233b8": {
        "bug_id": "maven-surefire_08233b8",
        "commit": "https://github.com/apache/maven-surefire/commit/08233b880bf4eed13d04cd91e189db93a8c5bf70",
        "file": [
            {
                "additions": 9,
                "blob_url": "https://github.com/apache/maven-surefire/blob/08233b880bf4eed13d04cd91e189db93a8c5bf70/surefire-providers/common-junit48/src/main/java/org/apache/maven/surefire/common/junit48/FilterFactory.java",
                "changes": 11,
                "contents_url": "https://api.github.com/repos/apache/maven-surefire/contents/surefire-providers/common-junit48/src/main/java/org/apache/maven/surefire/common/junit48/FilterFactory.java?ref=08233b880bf4eed13d04cd91e189db93a8c5bf70",
                "deletions": 2,
                "filename": "surefire-providers/common-junit48/src/main/java/org/apache/maven/surefire/common/junit48/FilterFactory.java",
                "patch": "@@ -59,8 +59,15 @@ public Filter createGroupFilter( Properties providerProperties )\n         GroupMatcher included = commaSeparatedListToFilters( groups );\n         GroupMatcher excluded = commaSeparatedListToFilters( excludedGroups );\n \n-        included.loadGroupClasses( testClassLoader );\n-        excluded.loadGroupClasses( testClassLoader );\n+        if ( included != null && testClassLoader != null )\n+        {\n+            included.loadGroupClasses( testClassLoader );\n+        }\n+\n+        if ( excluded != null && testClassLoader != null )\n+        {\n+            excluded.loadGroupClasses( testClassLoader );\n+        }\n \n         return new GroupMatcherCategoryFilter( included, excluded );\n     }",
                "raw_url": "https://github.com/apache/maven-surefire/raw/08233b880bf4eed13d04cd91e189db93a8c5bf70/surefire-providers/common-junit48/src/main/java/org/apache/maven/surefire/common/junit48/FilterFactory.java",
                "sha": "1a177e0eff6ed889466541f01b48765321c6cd74",
                "status": "modified"
            }
        ],
        "message": "[SUREFIRE-809] fixing NPE\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/surefire/trunk@1235414 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/maven-surefire/commit/241611ad43cdb3ddfb65f37ddbf274cd0c3f774a",
        "repo": "maven-surefire",
        "unit_tests": [
            "FilterFactoryTest.java"
        ]
    },
    "maven-surefire_131eff6": {
        "bug_id": "maven-surefire_131eff6",
        "commit": "https://github.com/apache/maven-surefire/commit/131eff6c3bdf2fc981cfee2476e4f10f74a2e5fb",
        "file": [
            {
                "additions": 4,
                "blob_url": "https://github.com/apache/maven-surefire/blob/131eff6c3bdf2fc981cfee2476e4f10f74a2e5fb/maven-surefire-plugin/src/main/java/org/apache/maven/plugin/surefire/SurefirePlugin.java",
                "changes": 4,
                "contents_url": "https://api.github.com/repos/apache/maven-surefire/contents/maven-surefire-plugin/src/main/java/org/apache/maven/plugin/surefire/SurefirePlugin.java?ref=131eff6c3bdf2fc981cfee2476e4f10f74a2e5fb",
                "deletions": 0,
                "filename": "maven-surefire-plugin/src/main/java/org/apache/maven/plugin/surefire/SurefirePlugin.java",
                "patch": "@@ -722,6 +722,10 @@ private boolean isJunit40to46(Artifact artifact)  throws MojoExecutionException\n     }\n \n     private boolean isWithinVersionSpec(Artifact artifact, String versionSpec) throws MojoExecutionException {\n+        if ( artifact == null )\n+        {\n+            return false;\n+        }\n         try {\n             VersionRange  range = VersionRange.createFromVersionSpec( versionSpec);\n             return range.containsVersion( artifact.getSelectedVersion());",
                "raw_url": "https://github.com/apache/maven-surefire/raw/131eff6c3bdf2fc981cfee2476e4f10f74a2e5fb/maven-surefire-plugin/src/main/java/org/apache/maven/plugin/surefire/SurefirePlugin.java",
                "sha": "ac65f4ae923213bca7d15d6e87bd3e13a53f6e87",
                "status": "modified"
            },
            {
                "additions": 30,
                "blob_url": "https://github.com/apache/maven-surefire/blob/131eff6c3bdf2fc981cfee2476e4f10f74a2e5fb/surefire-integration-tests/src/test/java/org/apache/maven/surefire/its/PojoSimpleTest.java",
                "changes": 30,
                "contents_url": "https://api.github.com/repos/apache/maven-surefire/contents/surefire-integration-tests/src/test/java/org/apache/maven/surefire/its/PojoSimpleTest.java?ref=131eff6c3bdf2fc981cfee2476e4f10f74a2e5fb",
                "deletions": 0,
                "filename": "surefire-integration-tests/src/test/java/org/apache/maven/surefire/its/PojoSimpleTest.java",
                "patch": "@@ -0,0 +1,30 @@\n+package org.apache.maven.surefire.its;\n+\n+\n+import org.apache.maven.it.Verifier;\n+import org.apache.maven.it.util.ResourceExtractor;\n+\n+import java.io.File;\n+\n+/**\n+ * Test support for POJO tests.\n+ * \n+ * @author Benjamin Bentmann\n+ */\n+public class PojoSimpleTest\n+    extends AbstractSurefireIT\n+{\n+\n+    public void testit()\n+        throws Exception\n+    {\n+        File testDir = ResourceExtractor.simpleExtractResources( getClass(), \"/pojo-simple\" );\n+\n+        Verifier verifier = new Verifier( testDir.getAbsolutePath() );\n+        executeGoal( verifier, \"test\" );\n+        verifier.resetStreams();\n+        \n+        HelperAssertions.assertTestSuiteResults( 2, 0, 1, 0, testDir );        \n+    }\n+\n+}",
                "raw_url": "https://github.com/apache/maven-surefire/raw/131eff6c3bdf2fc981cfee2476e4f10f74a2e5fb/surefire-integration-tests/src/test/java/org/apache/maven/surefire/its/PojoSimpleTest.java",
                "sha": "1a76ad85277deabf0f08453ea44d4d27fe417e15",
                "status": "added"
            },
            {
                "additions": 53,
                "blob_url": "https://github.com/apache/maven-surefire/blob/131eff6c3bdf2fc981cfee2476e4f10f74a2e5fb/surefire-integration-tests/src/test/resources/pojo-simple/pom.xml",
                "changes": 53,
                "contents_url": "https://api.github.com/repos/apache/maven-surefire/contents/surefire-integration-tests/src/test/resources/pojo-simple/pom.xml?ref=131eff6c3bdf2fc981cfee2476e4f10f74a2e5fb",
                "deletions": 0,
                "filename": "surefire-integration-tests/src/test/resources/pojo-simple/pom.xml",
                "patch": "@@ -0,0 +1,53 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<!--\n+  ~ Licensed to the Apache Software Foundation (ASF) under one\n+  ~ or more contributor license agreements.  See the NOTICE file\n+  ~ distributed with this work for additional information\n+  ~ regarding copyright ownership.  The ASF licenses this file\n+  ~ to you under the Apache License, Version 2.0 (the\n+  ~ \"License\"); you may not use this file except in compliance\n+  ~ with the License.  You may obtain a copy of the License at\n+  ~\n+  ~     http://www.apache.org/licenses/LICENSE-2.0\n+  ~\n+  ~ Unless required by applicable law or agreed to in writing,\n+  ~ software distributed under the License is distributed on an\n+  ~ \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+  ~ KIND, either express or implied.  See the License for the\n+  ~ specific language governing permissions and limitations\n+  ~ under the License.\n+  -->\n+\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\"\n+         xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd\">\n+  <modelVersion>4.0.0</modelVersion>\n+\n+  <groupId>org.apache.maven.plugins.surefire</groupId>\n+  <artifactId>pojo-simple</artifactId>\n+  <version>1.0-SNAPSHOT</version>\n+  <name>Pojo simple test</name>\n+\n+  <!-- NOTE: This has no dependencies on JUnit or TestNG, just nothing -->\n+\n+  <build>\n+    <plugins>\n+      <plugin>\n+        <groupId>org.apache.maven.plugins</groupId>\n+        <artifactId>maven-compiler-plugin</artifactId>\n+        <configuration>\n+          <source>1.4</source>\n+          <target>1.4</target>\n+        </configuration>\n+      </plugin>\n+      <plugin>\n+        <groupId>org.apache.maven.plugins</groupId>\n+        <artifactId>maven-surefire-plugin</artifactId>\n+        <version>${surefire.version}</version>\n+        <configuration>\n+          <testFailureIgnore>true</testFailureIgnore>\n+        </configuration>\n+      </plugin>\n+    </plugins>\n+  </build>\n+</project>",
                "raw_url": "https://github.com/apache/maven-surefire/raw/131eff6c3bdf2fc981cfee2476e4f10f74a2e5fb/surefire-integration-tests/src/test/resources/pojo-simple/pom.xml",
                "sha": "a97b872eabcbb58cbc48b87ebe2568c2bab54a46",
                "status": "added"
            },
            {
                "additions": 33,
                "blob_url": "https://github.com/apache/maven-surefire/blob/131eff6c3bdf2fc981cfee2476e4f10f74a2e5fb/surefire-integration-tests/src/test/resources/pojo-simple/src/test/java/PojoTest.java",
                "changes": 33,
                "contents_url": "https://api.github.com/repos/apache/maven-surefire/contents/surefire-integration-tests/src/test/resources/pojo-simple/src/test/java/PojoTest.java?ref=131eff6c3bdf2fc981cfee2476e4f10f74a2e5fb",
                "deletions": 0,
                "filename": "surefire-integration-tests/src/test/resources/pojo-simple/src/test/java/PojoTest.java",
                "patch": "@@ -0,0 +1,33 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+public class PojoTest\n+{\n+\n+    public void testSuccess()\n+    {\n+        assert true;\n+    }\n+\n+    public void testFailure()\n+    {\n+        assert false;\n+    }\n+\n+}",
                "raw_url": "https://github.com/apache/maven-surefire/raw/131eff6c3bdf2fc981cfee2476e4f10f74a2e5fb/surefire-integration-tests/src/test/resources/pojo-simple/src/test/java/PojoTest.java",
                "sha": "8e13ecbec092c0fcdc0a95e62dd7e69ab8078248",
                "status": "added"
            }
        ],
        "message": "o Fixed NPE in case neither JUnit nor TestNG are used\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/surefire/trunk@896667 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/maven-surefire/commit/07da6d3ca101897b4a56acb507505546073b56e6",
        "repo": "maven-surefire",
        "unit_tests": [
            "SurefirePluginTest.java"
        ]
    },
    "maven-surefire_28b1c31": {
        "bug_id": "maven-surefire_28b1c31",
        "commit": "https://github.com/apache/maven-surefire/commit/28b1c314ff213cff0cd08f671a314bbecc02e18d",
        "file": [
            {
                "additions": 14,
                "blob_url": "https://github.com/apache/maven-surefire/blob/28b1c314ff213cff0cd08f671a314bbecc02e18d/surefire-api/src/main/java/org/apache/maven/surefire/booter/ForkingRunListener.java",
                "changes": 16,
                "contents_url": "https://api.github.com/repos/apache/maven-surefire/contents/surefire-api/src/main/java/org/apache/maven/surefire/booter/ForkingRunListener.java?ref=28b1c314ff213cff0cd08f671a314bbecc02e18d",
                "deletions": 2,
                "filename": "surefire-api/src/main/java/org/apache/maven/surefire/booter/ForkingRunListener.java",
                "patch": "@@ -291,7 +291,7 @@ private String encode( String source )\n \n     private ForkingRunListener nullableEncoding( StringBuffer stringBuffer, String source )\n     {\n-        if ( source == null || source.length() == 0)\n+        if ( source == null || source.length() == 0 )\n         {\n             stringBuffer.append( \"null\" );\n         }\n@@ -311,7 +311,7 @@ private void encode( StringBuffer stringBuffer, StackTraceWriter stackTraceWrite\n             final Throwable throwable = stackTraceWriter.getThrowable();\n             if ( throwable != null )\n             {\n-                String message = throwable.getLocalizedMessage();\n+                String message = safeGetLocalizedMessage( throwable );\n                 nullableEncoding( stringBuffer, message );\n             }\n             comma( stringBuffer );\n@@ -321,4 +321,16 @@ private void encode( StringBuffer stringBuffer, StackTraceWriter stackTraceWrite\n                 : stackTraceWriter.writeTraceToString() );\n         }\n     }\n+\n+    private String safeGetLocalizedMessage( Throwable throwable )\n+    {\n+        try\n+        {\n+            return throwable.getLocalizedMessage();\n+        }\n+        catch ( Throwable t )\n+        {\n+            return t.getLocalizedMessage();\n+        }\n+    }\n }",
                "raw_url": "https://github.com/apache/maven-surefire/raw/28b1c314ff213cff0cd08f671a314bbecc02e18d/surefire-api/src/main/java/org/apache/maven/surefire/booter/ForkingRunListener.java",
                "sha": "9bec8c5374b8342184b1d645f398d9201cb0c132",
                "status": "modified"
            },
            {
                "additions": 36,
                "blob_url": "https://github.com/apache/maven-surefire/blob/28b1c314ff213cff0cd08f671a314bbecc02e18d/surefire-integration-tests/src/test/java/org/apache/maven/surefire/its/jiras/Surefire818NpeIgnoresTestsIT.java",
                "changes": 36,
                "contents_url": "https://api.github.com/repos/apache/maven-surefire/contents/surefire-integration-tests/src/test/java/org/apache/maven/surefire/its/jiras/Surefire818NpeIgnoresTestsIT.java?ref=28b1c314ff213cff0cd08f671a314bbecc02e18d",
                "deletions": 0,
                "filename": "surefire-integration-tests/src/test/java/org/apache/maven/surefire/its/jiras/Surefire818NpeIgnoresTestsIT.java",
                "patch": "@@ -0,0 +1,36 @@\n+package org.apache.maven.surefire.its.jiras;\n+\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+import org.apache.maven.surefire.its.fixture.SurefireIntegrationTestCase;\n+\n+/**\n+ * SUREFIRE-818\n+ *\n+ * @author Kristian Rosenvold\n+ */\n+public class Surefire818NpeIgnoresTestsIT\n+    extends SurefireIntegrationTestCase\n+{\n+    public void testBuildFailingWhenErrors()\n+    {\n+        unpack(\"surefire-818-ignored-tests-on-npe\").executeTestWithFailure().assertTestSuiteResults(  2 ,0 , 1, 0 );\n+    }\n+}\n\\ No newline at end of file",
                "raw_url": "https://github.com/apache/maven-surefire/raw/28b1c314ff213cff0cd08f671a314bbecc02e18d/surefire-integration-tests/src/test/java/org/apache/maven/surefire/its/jiras/Surefire818NpeIgnoresTestsIT.java",
                "sha": "410657f4e1bd179880a30f5f6a137a1057fa5f7e",
                "status": "added"
            },
            {
                "additions": 32,
                "blob_url": "https://github.com/apache/maven-surefire/blob/28b1c314ff213cff0cd08f671a314bbecc02e18d/surefire-integration-tests/src/test/resources/surefire-818-ignored-tests-on-npe/pom.xml",
                "changes": 32,
                "contents_url": "https://api.github.com/repos/apache/maven-surefire/contents/surefire-integration-tests/src/test/resources/surefire-818-ignored-tests-on-npe/pom.xml?ref=28b1c314ff213cff0cd08f671a314bbecc02e18d",
                "deletions": 0,
                "filename": "surefire-integration-tests/src/test/resources/surefire-818-ignored-tests-on-npe/pom.xml",
                "patch": "@@ -0,0 +1,32 @@\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\r\n+         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\r\n+    <modelVersion>4.0.0</modelVersion>\r\n+    <groupId>test</groupId>\r\n+    <artifactId>cyril</artifactId>\r\n+    <version>0.0.1-SNAPSHOT</version>\r\n+    <name>cyril</name>\r\n+\r\n+    <dependencies>\r\n+        <dependency>\r\n+            <groupId>junit</groupId>\r\n+            <artifactId>junit</artifactId>\r\n+            <version>4.4</version>\r\n+            <scope>test</scope>\r\n+        </dependency>\r\n+        <dependency>\r\n+            <groupId>jmock</groupId>\r\n+            <artifactId>jmock</artifactId>\r\n+            <version>1.1.0</version>\r\n+            <scope>test</scope>\r\n+        </dependency>\r\n+    </dependencies>\r\n+\r\n+    <build>\r\n+        <plugins>\r\n+            <plugin>\r\n+                <artifactId>maven-surefire-plugin</artifactId>\r\n+                <version>${surefire.version}</version>\r\n+            </plugin>\r\n+        </plugins>\r\n+    </build>\r\n+</project>\r",
                "raw_url": "https://github.com/apache/maven-surefire/raw/28b1c314ff213cff0cd08f671a314bbecc02e18d/surefire-integration-tests/src/test/resources/surefire-818-ignored-tests-on-npe/pom.xml",
                "sha": "8e5c3392957d2ac6adbaef593e6f48742d5b55db",
                "status": "added"
            },
            {
                "additions": 36,
                "blob_url": "https://github.com/apache/maven-surefire/blob/28b1c314ff213cff0cd08f671a314bbecc02e18d/surefire-integration-tests/src/test/resources/surefire-818-ignored-tests-on-npe/src/test/java/cyril/test/FirstTest.java",
                "changes": 36,
                "contents_url": "https://api.github.com/repos/apache/maven-surefire/contents/surefire-integration-tests/src/test/resources/surefire-818-ignored-tests-on-npe/src/test/java/cyril/test/FirstTest.java?ref=28b1c314ff213cff0cd08f671a314bbecc02e18d",
                "deletions": 0,
                "filename": "surefire-integration-tests/src/test/resources/surefire-818-ignored-tests-on-npe/src/test/java/cyril/test/FirstTest.java",
                "patch": "@@ -0,0 +1,36 @@\n+package cyril.test;\r\n+\r\n+\r\n+import org.jmock.Mock;\r\n+import org.jmock.MockObjectTestCase;\r\n+import org.junit.Test;\r\n+\r\n+\r\n+public class FirstTest\r\n+    extends MockObjectTestCase\r\n+{\r\n+\r\n+    private Mock myServiceMock;\r\n+\r\n+    @Override\r\n+    protected void setUp()\r\n+        throws Exception\r\n+    {\r\n+        myServiceMock = mock( MyService.class );\r\n+    }\r\n+\r\n+\r\n+    @Test\r\n+    public void test()\r\n+    {\r\n+\r\n+        Message myMessage = new Message( \"MyMessage\" );\r\n+        // Expectations\r\n+        myServiceMock.expects( once() ).method( \"writeMessage\" ).with( eq( myMessage ) ).will(\r\n+            returnValue( myMessage ) );\r\n+\r\n+        ( (MyService) myServiceMock.proxy() ).writeMessage( null );\r\n+\r\n+    }\r\n+\r\n+}\r",
                "raw_url": "https://github.com/apache/maven-surefire/raw/28b1c314ff213cff0cd08f671a314bbecc02e18d/surefire-integration-tests/src/test/resources/surefire-818-ignored-tests-on-npe/src/test/java/cyril/test/FirstTest.java",
                "sha": "12d305c9193d226002453966105d8c9a45d14f68",
                "status": "added"
            },
            {
                "additions": 16,
                "blob_url": "https://github.com/apache/maven-surefire/blob/28b1c314ff213cff0cd08f671a314bbecc02e18d/surefire-integration-tests/src/test/resources/surefire-818-ignored-tests-on-npe/src/test/java/cyril/test/IgnoredTest.java",
                "changes": 16,
                "contents_url": "https://api.github.com/repos/apache/maven-surefire/contents/surefire-integration-tests/src/test/resources/surefire-818-ignored-tests-on-npe/src/test/java/cyril/test/IgnoredTest.java?ref=28b1c314ff213cff0cd08f671a314bbecc02e18d",
                "deletions": 0,
                "filename": "surefire-integration-tests/src/test/resources/surefire-818-ignored-tests-on-npe/src/test/java/cyril/test/IgnoredTest.java",
                "patch": "@@ -0,0 +1,16 @@\n+package cyril.test;\r\n+\r\n+import org.junit.Test;\r\n+\r\n+\r\n+public class IgnoredTest\r\n+{\r\n+\r\n+\r\n+    @Test\r\n+    public void test()\r\n+    {\r\n+        System.out.println( \"My test is running fine\" );\r\n+    }\r\n+\r\n+}\r",
                "raw_url": "https://github.com/apache/maven-surefire/raw/28b1c314ff213cff0cd08f671a314bbecc02e18d/surefire-integration-tests/src/test/resources/surefire-818-ignored-tests-on-npe/src/test/java/cyril/test/IgnoredTest.java",
                "sha": "80ff3120a2563f2578fbd49acac7d23e195320df",
                "status": "added"
            },
            {
                "additions": 18,
                "blob_url": "https://github.com/apache/maven-surefire/blob/28b1c314ff213cff0cd08f671a314bbecc02e18d/surefire-integration-tests/src/test/resources/surefire-818-ignored-tests-on-npe/src/test/java/cyril/test/Message.java",
                "changes": 18,
                "contents_url": "https://api.github.com/repos/apache/maven-surefire/contents/surefire-integration-tests/src/test/resources/surefire-818-ignored-tests-on-npe/src/test/java/cyril/test/Message.java?ref=28b1c314ff213cff0cd08f671a314bbecc02e18d",
                "deletions": 0,
                "filename": "surefire-integration-tests/src/test/resources/surefire-818-ignored-tests-on-npe/src/test/java/cyril/test/Message.java",
                "patch": "@@ -0,0 +1,18 @@\n+package cyril.test;\r\n+\r\n+public class Message\r\n+{\r\n+\r\n+    private String content;\r\n+\r\n+    public Message( String content )\r\n+    {\r\n+        this.content = content;\r\n+    }\r\n+\r\n+    public int hashCode()\r\n+    {\r\n+        throw new NullPointerException();\r\n+    }\r\n+\r\n+}\r",
                "raw_url": "https://github.com/apache/maven-surefire/raw/28b1c314ff213cff0cd08f671a314bbecc02e18d/surefire-integration-tests/src/test/resources/surefire-818-ignored-tests-on-npe/src/test/java/cyril/test/Message.java",
                "sha": "c3e4249ae1388750aa0ebd8aa59b7f85668d356f",
                "status": "added"
            },
            {
                "additions": 8,
                "blob_url": "https://github.com/apache/maven-surefire/blob/28b1c314ff213cff0cd08f671a314bbecc02e18d/surefire-integration-tests/src/test/resources/surefire-818-ignored-tests-on-npe/src/test/java/cyril/test/MyService.java",
                "changes": 8,
                "contents_url": "https://api.github.com/repos/apache/maven-surefire/contents/surefire-integration-tests/src/test/resources/surefire-818-ignored-tests-on-npe/src/test/java/cyril/test/MyService.java?ref=28b1c314ff213cff0cd08f671a314bbecc02e18d",
                "deletions": 0,
                "filename": "surefire-integration-tests/src/test/resources/surefire-818-ignored-tests-on-npe/src/test/java/cyril/test/MyService.java",
                "patch": "@@ -0,0 +1,8 @@\n+package cyril.test;\r\n+\r\n+public interface MyService\r\n+{\r\n+\r\n+    public Message writeMessage( Message aMessage );\r\n+\r\n+}\r",
                "raw_url": "https://github.com/apache/maven-surefire/raw/28b1c314ff213cff0cd08f671a314bbecc02e18d/surefire-integration-tests/src/test/resources/surefire-818-ignored-tests-on-npe/src/test/java/cyril/test/MyService.java",
                "sha": "892351f8d820da297b5eb2e5e9443d79f2f9b391",
                "status": "added"
            },
            {
                "additions": 12,
                "blob_url": "https://github.com/apache/maven-surefire/blob/28b1c314ff213cff0cd08f671a314bbecc02e18d/surefire-integration-tests/src/test/resources/surefire-818-ignored-tests-on-npe/src/test/java/cyril/test/MyServiceImpl.java",
                "changes": 12,
                "contents_url": "https://api.github.com/repos/apache/maven-surefire/contents/surefire-integration-tests/src/test/resources/surefire-818-ignored-tests-on-npe/src/test/java/cyril/test/MyServiceImpl.java?ref=28b1c314ff213cff0cd08f671a314bbecc02e18d",
                "deletions": 0,
                "filename": "surefire-integration-tests/src/test/resources/surefire-818-ignored-tests-on-npe/src/test/java/cyril/test/MyServiceImpl.java",
                "patch": "@@ -0,0 +1,12 @@\n+package cyril.test;\r\n+\r\n+public class MyServiceImpl\r\n+    implements MyService\r\n+{\r\n+\r\n+    public Message writeMessage( Message aMessage )\r\n+    {\r\n+        return aMessage;\r\n+    }\r\n+\r\n+}\r",
                "raw_url": "https://github.com/apache/maven-surefire/raw/28b1c314ff213cff0cd08f671a314bbecc02e18d/surefire-integration-tests/src/test/resources/surefire-818-ignored-tests-on-npe/src/test/java/cyril/test/MyServiceImpl.java",
                "sha": "fc7f2b9ef1ca3c1b1b0cd1d7d015d5b9390dbcc7",
                "status": "added"
            },
            {
                "additions": 10,
                "blob_url": "https://github.com/apache/maven-surefire/blob/28b1c314ff213cff0cd08f671a314bbecc02e18d/surefire-providers/common-junit4/src/main/java/org/apache/maven/surefire/common/junit4/JUnit4StackTraceWriter.java",
                "changes": 11,
                "contents_url": "https://api.github.com/repos/apache/maven-surefire/contents/surefire-providers/common-junit4/src/main/java/org/apache/maven/surefire/common/junit4/JUnit4StackTraceWriter.java?ref=28b1c314ff213cff0cd08f671a314bbecc02e18d",
                "deletions": 1,
                "filename": "surefire-providers/common-junit4/src/main/java/org/apache/maven/surefire/common/junit4/JUnit4StackTraceWriter.java",
                "patch": "@@ -19,7 +19,9 @@\n  * under the License.\n  */\n \n+import org.apache.maven.surefire.report.PojoStackTraceWriter;\n import org.apache.maven.surefire.report.StackTraceWriter;\n+\n import org.junit.runner.notification.Failure;\n \n /**\n@@ -61,7 +63,14 @@ public String writeTraceToString()\n      */\n     public String writeTrimmedTraceToString()\n     {\n-        return junitFailure.getTrace();\n+        try\n+        {\n+            return junitFailure.getTrace();\n+        }\n+        catch ( Throwable t )\n+        {\n+            return new PojoStackTraceWriter( \"\", \"\", t ).writeTrimmedTraceToString();\n+        }\n     }\n \n     /**",
                "raw_url": "https://github.com/apache/maven-surefire/raw/28b1c314ff213cff0cd08f671a314bbecc02e18d/surefire-providers/common-junit4/src/main/java/org/apache/maven/surefire/common/junit4/JUnit4StackTraceWriter.java",
                "sha": "628f1baba2b955aadca345570da35246a866dd7a",
                "status": "modified"
            }
        ],
        "message": "[SUREFIRE-818] NPE in reporting causes ignoring of subsequent tests\n\nTest-project submitted by Cyril Vidal, fixed with integration test.\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/surefire/trunk@1231490 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/maven-surefire/commit/7ea8a0a82f5c5ccc43c21aeac8d3ac8d2a473a66",
        "repo": "maven-surefire",
        "unit_tests": [
            "ForkingRunListenerTest.java"
        ]
    },
    "maven-surefire_319b3ec": {
        "bug_id": "maven-surefire_319b3ec",
        "commit": "https://github.com/apache/maven-surefire/commit/319b3ec6e2c44536bde521563654c5f7f4251255",
        "file": [
            {
                "additions": 12,
                "blob_url": "https://github.com/apache/maven-surefire/blob/319b3ec6e2c44536bde521563654c5f7f4251255/maven-surefire-common/src/main/java/org/apache/maven/plugin/surefire/booterclient/ForkStarter.java",
                "changes": 22,
                "contents_url": "https://api.github.com/repos/apache/maven-surefire/contents/maven-surefire-common/src/main/java/org/apache/maven/plugin/surefire/booterclient/ForkStarter.java?ref=319b3ec6e2c44536bde521563654c5f7f4251255",
                "deletions": 10,
                "filename": "maven-surefire-common/src/main/java/org/apache/maven/plugin/surefire/booterclient/ForkStarter.java",
                "patch": "@@ -23,6 +23,7 @@\n import java.io.IOException;\n import java.io.InputStream;\n import java.util.ArrayList;\n+import java.util.Collection;\n import java.util.Iterator;\n import java.util.List;\n import java.util.Properties;\n@@ -36,6 +37,7 @@\n import java.util.concurrent.LinkedBlockingQueue;\n import java.util.concurrent.ThreadPoolExecutor;\n import java.util.concurrent.TimeUnit;\n+import java.util.concurrent.atomic.AtomicReference;\n \n import org.apache.maven.plugin.logging.Log;\n import org.apache.maven.plugin.surefire.AbstractSurefireMojo;\n@@ -88,29 +90,29 @@\n     /**\n      * Closes an InputStream\n      */\n-    private final class InputStreamCloser\n+    private static class InputStreamCloser\n         implements Runnable\n     {\n-        private InputStream testProvidingInputStream;\n+        private final AtomicReference<InputStream> testProvidingInputStream;\n \n         public InputStreamCloser( InputStream testProvidingInputStream )\n         {\n-            this.testProvidingInputStream = testProvidingInputStream;\n+            this.testProvidingInputStream = new AtomicReference<InputStream>( testProvidingInputStream );\n         }\n \n-        public synchronized void run()\n+        public void run()\n         {\n-            if ( testProvidingInputStream != null )\n+            InputStream stream = testProvidingInputStream.getAndSet( null );\n+            if ( stream != null )\n             {\n                 try\n                 {\n-                    testProvidingInputStream.close();\n+                    stream.close();\n                 }\n                 catch ( IOException e )\n                 {\n                     // ignore\n                 }\n-                testProvidingInputStream = null;\n             }\n         }\n     }\n@@ -125,11 +127,11 @@ public synchronized void run()\n \n     private final StartupReportConfiguration startupReportConfiguration;\n \n-    private Log log;\n+    private final Log log;\n \n     private final DefaultReporterFactory defaultReporterFactory;\n \n-    private final List<DefaultReporterFactory> defaultReporterFactoryList;\n+    private final Collection<DefaultReporterFactory> defaultReporterFactoryList;\n \n     private static volatile int systemPropertiesFileCounter = 0;\n \n@@ -145,7 +147,7 @@ public ForkStarter( ProviderConfiguration providerConfiguration, StartupConfigur\n         this.log = log;\n         defaultReporterFactory = new DefaultReporterFactory( startupReportConfiguration );\n         defaultReporterFactory.runStarting();\n-        defaultReporterFactoryList = new ArrayList<DefaultReporterFactory>();\n+        defaultReporterFactoryList = new ConcurrentLinkedQueue<DefaultReporterFactory>();\n     }\n \n     public RunResult run( SurefireProperties effectiveSystemProperties, DefaultScanResult scanResult )",
                "raw_url": "https://github.com/apache/maven-surefire/raw/319b3ec6e2c44536bde521563654c5f7f4251255/maven-surefire-common/src/main/java/org/apache/maven/plugin/surefire/booterclient/ForkStarter.java",
                "sha": "acd8da9dfc324724e45b6bc6f049a8be3f40c084",
                "status": "modified"
            },
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/maven-surefire/blob/319b3ec6e2c44536bde521563654c5f7f4251255/maven-surefire-common/src/main/java/org/apache/maven/plugin/surefire/report/DefaultReporterFactory.java",
                "changes": 3,
                "contents_url": "https://api.github.com/repos/apache/maven-surefire/contents/maven-surefire-common/src/main/java/org/apache/maven/plugin/surefire/report/DefaultReporterFactory.java?ref=319b3ec6e2c44536bde521563654c5f7f4251255",
                "deletions": 1,
                "filename": "maven-surefire-common/src/main/java/org/apache/maven/plugin/surefire/report/DefaultReporterFactory.java",
                "patch": "@@ -29,6 +29,7 @@\n import org.apache.maven.surefire.suite.RunResult;\n \n import java.util.ArrayList;\n+import java.util.Collection;\n import java.util.Collections;\n import java.util.HashMap;\n import java.util.List;\n@@ -75,7 +76,7 @@ public RunListener createReporter()\n         return createTestSetRunListener();\n     }\n \n-    public void mergeFromOtherFactories( List<DefaultReporterFactory> factories )\n+    public void mergeFromOtherFactories( Collection<DefaultReporterFactory> factories )\n     {\n         for ( DefaultReporterFactory factory : factories )\n         {",
                "raw_url": "https://github.com/apache/maven-surefire/raw/319b3ec6e2c44536bde521563654c5f7f4251255/maven-surefire-common/src/main/java/org/apache/maven/plugin/surefire/report/DefaultReporterFactory.java",
                "sha": "aeb3c2259c1ed0230e32d70c5406a69df212ef43",
                "status": "modified"
            }
        ],
        "message": "[SUREFIRE-1121] NPE DefaultReporterFactory.mergeFromOtherFactories(DefaultReporterFactory.java:82)",
        "parent": "https://github.com/apache/maven-surefire/commit/65e062cb858a9f2b162e6acc00e980cb584819f4",
        "repo": "maven-surefire",
        "unit_tests": [
            "DefaultReporterFactoryTest.java"
        ]
    },
    "maven-surefire_36a68c3": {
        "bug_id": "maven-surefire_36a68c3",
        "commit": "https://github.com/apache/maven-surefire/commit/36a68c35753954a4d86273bea42b23aaaa6e9b24",
        "file": [
            {
                "additions": 6,
                "blob_url": "https://github.com/apache/maven-surefire/blob/36a68c35753954a4d86273bea42b23aaaa6e9b24/surefire-api/src/main/java/org/apache/maven/surefire/report/PojoStackTraceWriter.java",
                "changes": 9,
                "contents_url": "https://api.github.com/repos/apache/maven-surefire/contents/surefire-api/src/main/java/org/apache/maven/surefire/report/PojoStackTraceWriter.java?ref=36a68c35753954a4d86273bea42b23aaaa6e9b24",
                "deletions": 3,
                "filename": "surefire-api/src/main/java/org/apache/maven/surefire/report/PojoStackTraceWriter.java",
                "patch": "@@ -48,8 +48,11 @@ public PojoStackTraceWriter( String testClass, String testMethod, Throwable t )\n     public String writeTraceToString()\n     {\n         StringWriter w = new StringWriter();\n-        t.printStackTrace( new PrintWriter( w ) );\n-        w.flush();\n+        if ( t != null )\n+        {\n+            t.printStackTrace( new PrintWriter( w ) );\n+            w.flush();\n+        }\n         return w.toString();\n     }\n \n@@ -69,7 +72,7 @@ public String writeTrimmedTraceToString()\n             if ( line.startsWith( marker ) )\n             {\n                 lastLine = i;\n-            } else if ( line.startsWith( \"Caused by\" ) ) \n+            } else if ( line.startsWith( \"Caused by\" ) )\n             {\n                 causedByLine = i;\n                 break;",
                "raw_url": "https://github.com/apache/maven-surefire/raw/36a68c35753954a4d86273bea42b23aaaa6e9b24/surefire-api/src/main/java/org/apache/maven/surefire/report/PojoStackTraceWriter.java",
                "sha": "6cd0fb32df961be64bfba4b1b8d5b1bb875f37f2",
                "status": "modified"
            }
        ],
        "message": "SUREFIRE-444 NPE in PojoStackTraceWriter.writeTraceToString\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/surefire/trunk@615569 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/maven-surefire/commit/21f6d58c3bbb48bb6e3b02d48020ef34d1f67223",
        "repo": "maven-surefire",
        "unit_tests": [
            "PojoStackTraceWriterTest.java"
        ]
    },
    "maven-surefire_3d903eb": {
        "bug_id": "maven-surefire_3d903eb",
        "commit": "https://github.com/apache/maven-surefire/commit/3d903eb72c04231c2ad75cfd8dd385b5e478e19f",
        "file": [
            {
                "additions": 9,
                "blob_url": "https://github.com/apache/maven-surefire/blob/3d903eb72c04231c2ad75cfd8dd385b5e478e19f/maven-surefire-common/src/main/java/org/apache/maven/plugin/surefire/report/FileReporter.java",
                "changes": 14,
                "contents_url": "https://api.github.com/repos/apache/maven-surefire/contents/maven-surefire-common/src/main/java/org/apache/maven/plugin/surefire/report/FileReporter.java?ref=3d903eb72c04231c2ad75cfd8dd385b5e478e19f",
                "deletions": 5,
                "filename": "maven-surefire-common/src/main/java/org/apache/maven/plugin/surefire/report/FileReporter.java",
                "patch": "@@ -27,9 +27,11 @@\n import org.apache.maven.surefire.report.ReportEntry;\n import org.apache.maven.surefire.report.ReporterException;\n \n+import static org.apache.maven.plugin.surefire.report.FileReporterUtils.stripIllegalFilenameChars;\n+\n /**\n  * Base class for file reporters.\n- *\n+ * \n  * @author <a href=\"mailto:brett@apache.org\">Brett Porter</a>\n  * @author Kristian Rosenvold\n  */\n@@ -55,12 +57,12 @@ private PrintWriter testSetStarting( ReportEntry report )\n \n         File reportDir = reportFile.getParentFile();\n \n-        //noinspection ResultOfMethodCallIgnored\n+        // noinspection ResultOfMethodCallIgnored\n         reportDir.mkdirs();\n \n         if ( deleteOnStarting && reportFile.exists() )\n         {\n-            //noinspection ResultOfMethodCallIgnored\n+            // noinspection ResultOfMethodCallIgnored\n             reportFile.delete();\n         }\n \n@@ -89,11 +91,13 @@ public static File getReportFile( File reportsDirectory, String reportEntryName,\n \n         if ( reportNameSuffix != null && reportNameSuffix.length() > 0 )\n         {\n-            reportFile = new File( reportsDirectory, reportEntryName + \"-\" + reportNameSuffix + fileExtension );\n+            reportFile =\n+                new File( reportsDirectory, stripIllegalFilenameChars( reportEntryName + \"-\" + reportNameSuffix\n+                    + fileExtension ) );\n         }\n         else\n         {\n-            reportFile = new File( reportsDirectory, reportEntryName + fileExtension );\n+            reportFile = new File( reportsDirectory, stripIllegalFilenameChars( reportEntryName + fileExtension ) );\n         }\n         return reportFile;\n     }",
                "raw_url": "https://github.com/apache/maven-surefire/raw/3d903eb72c04231c2ad75cfd8dd385b5e478e19f/maven-surefire-common/src/main/java/org/apache/maven/plugin/surefire/report/FileReporter.java",
                "sha": "f2e8e28455b97178ad2ef033f8f3d4207521b63e",
                "status": "modified"
            },
            {
                "additions": 50,
                "blob_url": "https://github.com/apache/maven-surefire/blob/3d903eb72c04231c2ad75cfd8dd385b5e478e19f/maven-surefire-common/src/main/java/org/apache/maven/plugin/surefire/report/FileReporterUtils.java",
                "changes": 50,
                "contents_url": "https://api.github.com/repos/apache/maven-surefire/contents/maven-surefire-common/src/main/java/org/apache/maven/plugin/surefire/report/FileReporterUtils.java?ref=3d903eb72c04231c2ad75cfd8dd385b5e478e19f",
                "deletions": 0,
                "filename": "maven-surefire-common/src/main/java/org/apache/maven/plugin/surefire/report/FileReporterUtils.java",
                "patch": "@@ -0,0 +1,50 @@\n+package org.apache.maven.plugin.surefire.report;\n+\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+/**\n+ * Utils class for file-based reporters\n+ * \n+ * @author Andreas Gudian\n+ */\n+public class FileReporterUtils\n+{\n+    public static String stripIllegalFilenameChars( String original )\n+    {\n+        String result = original;\n+        String illegalChars = getOSSpecificIllegalChars();\n+        for ( int i = 0; i < illegalChars.length(); i++ )\n+            result = result.replace( illegalChars.charAt( i ), '_' );\n+\n+        return result;\n+    }\n+\n+    private static String getOSSpecificIllegalChars()\n+    {\n+        if ( System.getProperty( \"os.name\" ).toLowerCase().startsWith( \"win\" ) )\n+        {\n+            return \"\\\\/:*?\\\"<>|\\0\";\n+        }\n+        else\n+        {\n+            return \"/\\0\";\n+        }\n+    }\n+}",
                "raw_url": "https://github.com/apache/maven-surefire/raw/3d903eb72c04231c2ad75cfd8dd385b5e478e19f/maven-surefire-common/src/main/java/org/apache/maven/plugin/surefire/report/FileReporterUtils.java",
                "sha": "5009da9fa9f79a98956106beb5699bd19ab932dd",
                "status": "added"
            },
            {
                "additions": 7,
                "blob_url": "https://github.com/apache/maven-surefire/blob/3d903eb72c04231c2ad75cfd8dd385b5e478e19f/maven-surefire-common/src/main/java/org/apache/maven/plugin/surefire/report/StatelessXmlReporter.java",
                "changes": 10,
                "contents_url": "https://api.github.com/repos/apache/maven-surefire/contents/maven-surefire-common/src/main/java/org/apache/maven/plugin/surefire/report/StatelessXmlReporter.java?ref=3d903eb72c04231c2ad75cfd8dd385b5e478e19f",
                "deletions": 3,
                "filename": "maven-surefire-common/src/main/java/org/apache/maven/plugin/surefire/report/StatelessXmlReporter.java",
                "patch": "@@ -32,6 +32,8 @@\n import org.apache.maven.surefire.report.ReporterException;\n import org.apache.maven.surefire.report.SafeThrowable;\n \n+import static org.apache.maven.plugin.surefire.report.FileReporterUtils.stripIllegalFilenameChars;\n+\n /**\n  * XML format reporter writing to <code>TEST-<i>reportName</i>[-<i>suffix</i>].xml</code> file like written and read\n  * by Ant's <a href=\"http://ant.apache.org/manual/Tasks/junit.html\"><code>&lt;junit&gt;</code></a> and\n@@ -148,16 +150,18 @@ private File getReportFile( ReportEntry report, File reportsDirectory, String re\n \n         if ( reportNameSuffix != null && reportNameSuffix.length() > 0 )\n         {\n-            reportFile = new File( reportsDirectory, \"TEST-\" + report.getName() + \"-\" + reportNameSuffix + \".xml\" );\n+            reportFile =\n+                new File( reportsDirectory, stripIllegalFilenameChars( \"TEST-\" + report.getName() + \"-\"\n+                    + reportNameSuffix + \".xml\" ) );\n         }\n         else\n         {\n-            reportFile = new File( reportsDirectory, \"TEST-\" + report.getName() + \".xml\" );\n+            reportFile = new File( reportsDirectory, stripIllegalFilenameChars( \"TEST-\" + report.getName() + \".xml\" ) );\n         }\n \n         return reportFile;\n     }\n-\n+    \n     private static void startTestElement( XMLWriter ppw, WrappedReportEntry report, String reportNameSuffix )\n     {\n         ppw.startElement( \"testcase\" );",
                "raw_url": "https://github.com/apache/maven-surefire/raw/3d903eb72c04231c2ad75cfd8dd385b5e478e19f/maven-surefire-common/src/main/java/org/apache/maven/plugin/surefire/report/StatelessXmlReporter.java",
                "sha": "cb3314fe845bd1259863d68b59a5db940383c506",
                "status": "modified"
            },
            {
                "additions": 32,
                "blob_url": "https://github.com/apache/maven-surefire/blob/3d903eb72c04231c2ad75cfd8dd385b5e478e19f/surefire-providers/surefire-junit47/src/main/java/org/apache/maven/surefire/junitcore/NonConcurrentRunListener.java",
                "changes": 40,
                "contents_url": "https://api.github.com/repos/apache/maven-surefire/contents/surefire-providers/surefire-junit47/src/main/java/org/apache/maven/surefire/junitcore/NonConcurrentRunListener.java?ref=3d903eb72c04231c2ad75cfd8dd385b5e478e19f",
                "deletions": 8,
                "filename": "surefire-providers/surefire-junit47/src/main/java/org/apache/maven/surefire/junitcore/NonConcurrentRunListener.java",
                "patch": "@@ -24,7 +24,6 @@\n import org.apache.maven.surefire.report.RunListener;\n import org.apache.maven.surefire.report.SimpleReportEntry;\n import org.apache.maven.surefire.testset.TestSetFailedException;\n-\n import org.junit.runner.Description;\n import org.junit.runner.Result;\n import org.junit.runner.notification.Failure;\n@@ -39,7 +38,7 @@\n     implements ConsoleOutputReceiver\n {\n \n-    private java.lang.Class<?> currentTestClass;\n+    private Description currentTestSetDescription;\n \n     private Description lastFinishedDescription;\n \n@@ -57,14 +56,20 @@ public synchronized void writeTestOutput( byte[] buf, int off, int len, boolean\n \n     protected SimpleReportEntry createReportEntry( Description description )\n     {\n-        return new SimpleReportEntry( description.getClassName(), description.getDisplayName()/*,\n-                                       (int) ( System.currentTimeMillis() - startTime ) */);\n+        return new SimpleReportEntry( description.getClassName(), description.getDisplayName()/*\n+                                                                                               * , (int) (\n+                                                                                               * System.currentTimeMillis\n+                                                                                               * () - startTime )\n+                                                                                               */);\n     }\n \n     protected SimpleReportEntry createReportEntryForTestSet( Description description )\n     {\n-        return new SimpleReportEntry( description.getClassName(), description.getClassName() /*,\n-                                       (int) ( System.currentTimeMillis() - startTime ) */);\n+        return new SimpleReportEntry( description.getClassName(), description.getClassName() /*\n+                                                                                              * , (int) (\n+                                                                                              * System.currentTimeMillis\n+                                                                                              * () - startTime )\n+                                                                                              */);\n     }\n \n     @Override\n@@ -77,9 +82,9 @@ public void testStarted( Description description )\n \n     private void finishLastTestSetIfNeccessary( Description description )\n     {\n-        if ( !description.getTestClass().equals( currentTestClass ) )\n+        if ( describesNewTestSet( description ) )\n         {\n-            currentTestClass = description.getTestClass();\n+            currentTestSetDescription = description;\n             if ( lastFinishedDescription != null )\n             {\n                 reporter.testSetCompleted( createReportEntryForTestSet( lastFinishedDescription ) );\n@@ -89,6 +94,25 @@ private void finishLastTestSetIfNeccessary( Description description )\n         }\n     }\n \n+    private boolean describesNewTestSet( Description description )\n+    {\n+        if ( currentTestSetDescription != null )\n+        {\n+            if ( null != description.getTestClass() )\n+            {\n+                return !description.getTestClass().equals( currentTestSetDescription.getTestClass() );\n+            }\n+            else if ( description.isSuite() )\n+            {\n+                return description.getChildren().equals( currentTestSetDescription.getChildren() );\n+            }\n+            \n+            return false;\n+        }\n+\n+        return true;\n+    }\n+\n     @Override\n     public void testFinished( Description description )\n         throws Exception",
                "raw_url": "https://github.com/apache/maven-surefire/raw/3d903eb72c04231c2ad75cfd8dd385b5e478e19f/surefire-providers/surefire-junit47/src/main/java/org/apache/maven/surefire/junitcore/NonConcurrentRunListener.java",
                "sha": "dcf861512e3f555fd1e85c56b06ac7d05dcba926",
                "status": "modified"
            }
        ],
        "message": "[SUREFIRE-991] fixed yet another NPE with null testClass in Description, fixed file reporting for the case that illegal characters were part of the file name",
        "parent": "https://github.com/apache/maven-surefire/commit/2feedb6b16494ca4a573a6f796a3e1ef85f5724e",
        "repo": "maven-surefire",
        "unit_tests": [
            "FileReporterTest.java",
            "StatelessXmlReporterTest.java"
        ]
    },
    "maven-surefire_4df6516": {
        "bug_id": "maven-surefire_4df6516",
        "commit": "https://github.com/apache/maven-surefire/commit/4df65165717126c88569e1fa62b0ea30559cbfa3",
        "file": [
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/maven-surefire/blob/4df65165717126c88569e1fa62b0ea30559cbfa3/surefire-api/src/main/java/org/apache/maven/surefire/util/SurefireReflectionException.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/maven-surefire/contents/surefire-api/src/main/java/org/apache/maven/surefire/util/SurefireReflectionException.java?ref=4df65165717126c88569e1fa62b0ea30559cbfa3",
                "deletions": 1,
                "filename": "surefire-api/src/main/java/org/apache/maven/surefire/util/SurefireReflectionException.java",
                "patch": "@@ -20,7 +20,7 @@\n  */\n \n /**\n- * Exception indicating that surefire hard problems with reflection. This may be due\n+ * Exception indicating that surefire had problems with reflection. This may be due\n  * to programming errors, incorrect configuration or incorrect dependencies, but is\n  * generally not recoverable and not relevant to handle.\n  *",
                "raw_url": "https://github.com/apache/maven-surefire/raw/4df65165717126c88569e1fa62b0ea30559cbfa3/surefire-api/src/main/java/org/apache/maven/surefire/util/SurefireReflectionException.java",
                "sha": "ca5d2beb5fd0aaa9d584298e4bd809c5d0e31490",
                "status": "modified"
            },
            {
                "additions": 93,
                "blob_url": "https://github.com/apache/maven-surefire/blob/4df65165717126c88569e1fa62b0ea30559cbfa3/surefire-integration-tests/src/test/java/org/apache/maven/surefire/its/jiras/Surefire1095NpeInRunListener.java",
                "changes": 93,
                "contents_url": "https://api.github.com/repos/apache/maven-surefire/contents/surefire-integration-tests/src/test/java/org/apache/maven/surefire/its/jiras/Surefire1095NpeInRunListener.java?ref=4df65165717126c88569e1fa62b0ea30559cbfa3",
                "deletions": 0,
                "filename": "surefire-integration-tests/src/test/java/org/apache/maven/surefire/its/jiras/Surefire1095NpeInRunListener.java",
                "patch": "@@ -0,0 +1,93 @@\n+package org.apache.maven.surefire.its.jiras;\n+\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+import org.apache.maven.surefire.its.fixture.SurefireJUnit4IntegrationTestCase;\n+import org.apache.maven.surefire.its.fixture.SurefireLauncher;\n+import org.junit.Test;\n+\n+/**\n+ *\n+ * In the surefire plugin, it is possible to specify one or more RunListener when running tests with JUnit.\n+ * However, it does not look like the listener is properly called by the plugin. In particular, there is a problem\n+ * with the method:\n+ * <pre>\n+ * public void testRunStarted(Description description)\n+ * </pre>\n+ * it's javadoc at\n+ * <a href=\"http://junit.sourceforge.net/javadoc/org/junit/runner/notification/RunListener.html#testRunStarted%28org.junit.runner.Description%29\"/>\n+ * states:\n+ * \"Parameters:\n+ * description - describes the tests to be run \"\n+ * however, in all maven projects I tried (\"mvn test\"), the surefire plugin seems like passing a null reference instead\n+ * of a Description instance that \"describes the tests to be run \"\n+ * Note: other methods in the RunListener I tested seems fine (i.e., they get a valid Description object as input)\n+ *\n+ * @author <a href=\"mailto:tibor.digana@gmail.com\">Tibor Digana (tibor17)</a>\n+ * @see {@linkplain https://jira.codehaus.org/browse/SUREFIRE-1095}\n+ * @since 2.18\n+ */\n+public final class Surefire1095NpeInRunListener\n+    extends SurefireJUnit4IntegrationTestCase\n+{\n+\n+    /**\n+     * Method Request.classes( String, Class[] ); exists in JUnit 4.0 - 4.4\n+     * @see JUnit4Reflector\n+     */\n+    @Test\n+    public void testRunStartedWithJUnit40()\n+    {\n+        unpack().setJUnitVersion( \"4.0\" )\n+            .executeTest()\n+            .verifyErrorFree( 1 )\n+            .verifyTextInLog( \"Running JUnit 4.0\" )\n+            .verifyTextInLog( \"testRunStarted [jiras.surefire1095.SomeTest]\" );\n+    }\n+\n+    /**\n+     * Method Request.classes( Class[] ); Since of JUnit 4.5\n+     * @see JUnit4Reflector\n+     */\n+    @Test\n+    public void testRunStartedWithJUnit45()\n+    {\n+        unpack().setJUnitVersion( \"4.5\" )\n+            .executeTest()\n+            .verifyErrorFree( 1 )\n+            .verifyTextInLog( \"Running JUnit 4.5\" )\n+            .verifyTextInLog( \"testRunStarted [jiras.surefire1095.SomeTest]\" );\n+    }\n+\n+    @Test\n+    public void testRunStartedWithJUnit47()\n+    {\n+        unpack().setJUnitVersion( \"4.7\" )\n+            .executeTest()\n+            .verifyErrorFree( 1 )\n+            .verifyTextInLog( \"Running JUnit 4.7\" )\n+            .verifyTextInLog( \"testRunStarted [jiras.surefire1095.SomeTest]\" );\n+    }\n+\n+    private SurefireLauncher unpack()\n+    {\n+        return unpack( \"surefire-1095-npe-in-runlistener\" );\n+    }\n+}",
                "raw_url": "https://github.com/apache/maven-surefire/raw/4df65165717126c88569e1fa62b0ea30559cbfa3/surefire-integration-tests/src/test/java/org/apache/maven/surefire/its/jiras/Surefire1095NpeInRunListener.java",
                "sha": "71a6cedddd5a6c5ec8349ad32491c66ee3164c39",
                "status": "added"
            },
            {
                "additions": 74,
                "blob_url": "https://github.com/apache/maven-surefire/blob/4df65165717126c88569e1fa62b0ea30559cbfa3/surefire-integration-tests/src/test/resources/surefire-1095-npe-in-runlistener/pom.xml",
                "changes": 74,
                "contents_url": "https://api.github.com/repos/apache/maven-surefire/contents/surefire-integration-tests/src/test/resources/surefire-1095-npe-in-runlistener/pom.xml?ref=4df65165717126c88569e1fa62b0ea30559cbfa3",
                "deletions": 0,
                "filename": "surefire-integration-tests/src/test/resources/surefire-1095-npe-in-runlistener/pom.xml",
                "patch": "@@ -0,0 +1,74 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<!--\n+  ~ Licensed to the Apache Software Foundation (ASF) under one\n+  ~ or more contributor license agreements.  See the NOTICE file\n+  ~ distributed with this work for additional information\n+  ~ regarding copyright ownership.  The ASF licenses this file\n+  ~ to you under the Apache License, Version 2.0 (the\n+  ~ \"License\"); you may not use this file except in compliance\n+  ~ with the License.  You may obtain a copy of the License at\n+  ~\n+  ~     http://www.apache.org/licenses/LICENSE-2.0\n+  ~\n+  ~ Unless required by applicable law or agreed to in writing,\n+  ~ software distributed under the License is distributed on an\n+  ~ \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+  ~ KIND, either express or implied.  See the License for the\n+  ~ specific language governing permissions and limitations\n+  ~ under the License.\n+  -->\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd\">\n+  <modelVersion>4.0.0</modelVersion>\n+  <parent>\n+    <groupId>org.apache.maven.surefire</groupId>\n+    <artifactId>it-parent</artifactId>\n+    <version>1.0</version>\n+    <relativePath>../pom.xml</relativePath>\n+  </parent>\n+  <groupId>org.apache.maven.plugins.surefire</groupId>\n+  <artifactId>jiras-surefire-1095</artifactId>\n+  <version>1.0</version>\n+  <url>http://maven.apache.org</url>\n+  <contributors>\n+    <contributor>\n+      <name>Tibor Digana (tibor17)</name>\n+      <email>tibor.digana@gmail.com</email>\n+      <timezone>+1</timezone>\n+    </contributor>\n+  </contributors>\n+  <dependencies>\n+    <dependency>\n+      <groupId>junit</groupId>\n+      <artifactId>junit</artifactId>\n+      <version>${junit.version}</version>\n+      <scope>test</scope>\n+    </dependency>\n+  </dependencies>\n+  <build>\n+    <plugins>\n+      <plugin>\n+        <artifactId>maven-compiler-plugin</artifactId>\n+        <version>2.5.1</version>\n+        <configuration>\n+          <source>1.5</source>\n+          <target>1.5</target>\n+        </configuration>\n+      </plugin>\n+      <plugin>\n+        <artifactId>maven-surefire-plugin</artifactId>\n+        <configuration>\n+          <includes>\n+            <include>**/SomeTest.java</include>\n+          </includes>\n+          <properties>\n+            <property>\n+              <name>listener</name>\n+              <value>jiras.surefire1095.Listener</value>\n+            </property>\n+          </properties>\n+        </configuration>\n+      </plugin>\n+    </plugins>\n+  </build>\n+</project>",
                "raw_url": "https://github.com/apache/maven-surefire/raw/4df65165717126c88569e1fa62b0ea30559cbfa3/surefire-integration-tests/src/test/resources/surefire-1095-npe-in-runlistener/pom.xml",
                "sha": "4bcd00075ba520f05f139d34dace750d8a8863e3",
                "status": "added"
            },
            {
                "additions": 38,
                "blob_url": "https://github.com/apache/maven-surefire/blob/4df65165717126c88569e1fa62b0ea30559cbfa3/surefire-integration-tests/src/test/resources/surefire-1095-npe-in-runlistener/src/test/java/jiras/surefire1095/Listener.java",
                "changes": 38,
                "contents_url": "https://api.github.com/repos/apache/maven-surefire/contents/surefire-integration-tests/src/test/resources/surefire-1095-npe-in-runlistener/src/test/java/jiras/surefire1095/Listener.java?ref=4df65165717126c88569e1fa62b0ea30559cbfa3",
                "deletions": 0,
                "filename": "surefire-integration-tests/src/test/resources/surefire-1095-npe-in-runlistener/src/test/java/jiras/surefire1095/Listener.java",
                "patch": "@@ -0,0 +1,38 @@\n+package jiras.surefire1095;\n+\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+import org.junit.runner.Description;\n+import org.junit.runner.notification.RunListener;\n+\n+public class Listener\n+    extends RunListener\n+{\n+    @Override\n+    public void testRunStarted( Description description )\n+        throws Exception\n+    {\n+        String described = description.getDisplayName();\n+        System.out.println( \"testRunStarted \" +\n+                                ( described == null || described.equals( \"null\" )\n+                                    ? description.getChildren()\n+                                    : description ) );\n+    }\n+}",
                "raw_url": "https://github.com/apache/maven-surefire/raw/4df65165717126c88569e1fa62b0ea30559cbfa3/surefire-integration-tests/src/test/resources/surefire-1095-npe-in-runlistener/src/test/java/jiras/surefire1095/Listener.java",
                "sha": "f16c04af183239cf0563becc0a3c01fd50a1ebb5",
                "status": "added"
            },
            {
                "additions": 31,
                "blob_url": "https://github.com/apache/maven-surefire/blob/4df65165717126c88569e1fa62b0ea30559cbfa3/surefire-integration-tests/src/test/resources/surefire-1095-npe-in-runlistener/src/test/java/jiras/surefire1095/SomeTest.java",
                "changes": 31,
                "contents_url": "https://api.github.com/repos/apache/maven-surefire/contents/surefire-integration-tests/src/test/resources/surefire-1095-npe-in-runlistener/src/test/java/jiras/surefire1095/SomeTest.java?ref=4df65165717126c88569e1fa62b0ea30559cbfa3",
                "deletions": 0,
                "filename": "surefire-integration-tests/src/test/resources/surefire-1095-npe-in-runlistener/src/test/java/jiras/surefire1095/SomeTest.java",
                "patch": "@@ -0,0 +1,31 @@\n+package jiras.surefire1095;\n+\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+import junit.runner.Version;\n+import org.junit.Test;\n+\n+public class SomeTest {\n+    @Test\n+    public void test()\n+    {\n+        System.out.println( \"Running JUnit \" + Version.id() );\n+    }\n+}",
                "raw_url": "https://github.com/apache/maven-surefire/raw/4df65165717126c88569e1fa62b0ea30559cbfa3/surefire-integration-tests/src/test/resources/surefire-1095-npe-in-runlistener/src/test/java/jiras/surefire1095/SomeTest.java",
                "sha": "923917a0b4f1f6cb225bc033ce7369ead49d25c3",
                "status": "added"
            },
            {
                "additions": 10,
                "blob_url": "https://github.com/apache/maven-surefire/blob/4df65165717126c88569e1fa62b0ea30559cbfa3/surefire-providers/common-junit4/src/main/java/org/apache/maven/surefire/common/junit4/JUnit4ProviderUtil.java",
                "changes": 11,
                "contents_url": "https://api.github.com/repos/apache/maven-surefire/contents/surefire-providers/common-junit4/src/main/java/org/apache/maven/surefire/common/junit4/JUnit4ProviderUtil.java?ref=4df65165717126c88569e1fa62b0ea30559cbfa3",
                "deletions": 1,
                "filename": "surefire-providers/common-junit4/src/main/java/org/apache/maven/surefire/common/junit4/JUnit4ProviderUtil.java",
                "patch": "@@ -22,13 +22,14 @@\n import org.apache.maven.surefire.util.TestsToRun;\n import org.apache.maven.surefire.util.internal.StringUtils;\n \n-import java.util.ArrayList;\n+import java.util.Collection;\n import java.util.HashMap;\n import java.util.HashSet;\n import java.util.List;\n import java.util.Map;\n import java.util.Set;\n \n+import org.junit.runner.Description;\n import org.junit.runner.notification.Failure;\n \n import static org.apache.maven.surefire.common.junit4.JUnit4RunListener.isFailureInsideJUnitItself;\n@@ -106,4 +107,12 @@\n         return failingMethods;\n     }\n \n+    public static Description createSuiteDescription( Collection<Class<?>> classes )\n+    {\n+        JUnit4Reflector reflector = new JUnit4Reflector();\n+        return reflector.createRequest( classes.toArray( new Class[classes.size()] ) )\n+                .getRunner()\n+                .getDescription();\n+    }\n+\n }",
                "raw_url": "https://github.com/apache/maven-surefire/raw/4df65165717126c88569e1fa62b0ea30559cbfa3/surefire-providers/common-junit4/src/main/java/org/apache/maven/surefire/common/junit4/JUnit4ProviderUtil.java",
                "sha": "1e3852a70809ba251f68d3fba39ed192fb73cc72",
                "status": "modified"
            },
            {
                "additions": 23,
                "blob_url": "https://github.com/apache/maven-surefire/blob/4df65165717126c88569e1fa62b0ea30559cbfa3/surefire-providers/common-junit4/src/main/java/org/apache/maven/surefire/common/junit4/JUnit4Reflector.java",
                "changes": 23,
                "contents_url": "https://api.github.com/repos/apache/maven-surefire/contents/surefire-providers/common-junit4/src/main/java/org/apache/maven/surefire/common/junit4/JUnit4Reflector.java?ref=4df65165717126c88569e1fa62b0ea30559cbfa3",
                "deletions": 0,
                "filename": "surefire-providers/common-junit4/src/main/java/org/apache/maven/surefire/common/junit4/JUnit4Reflector.java",
                "patch": "@@ -19,11 +19,14 @@\n  * under the License.\n  */\n \n+import java.lang.reflect.InvocationTargetException;\n import java.lang.reflect.Method;\n import org.apache.maven.surefire.util.ReflectionUtils;\n \n+import org.apache.maven.surefire.util.SurefireReflectionException;\n import org.junit.Ignore;\n import org.junit.runner.Description;\n+import org.junit.runner.Request;\n \n public final class JUnit4Reflector\n {\n@@ -49,4 +52,24 @@ public String getAnnotatedIgnoreValue( Description description )\n         return ignore != null ? ignore.value() : null;\n     }\n \n+    public Request createRequest( Class<?>... classes )\n+    {\n+        try {\n+            return (Request) Request.class.getDeclaredMethod( \"classes\", Class[].class )// Since of JUnit 4.5\n+                .invoke( null, new Object[]{ classes } );\n+        }\n+        catch ( NoSuchMethodException e )\n+        {\n+            return Request.classes( null, classes );// Since of JUnit 4.0\n+        }\n+        catch ( InvocationTargetException e )\n+        {\n+            throw new SurefireReflectionException( e.getCause() );\n+        }\n+        catch ( IllegalAccessException e )\n+        {\n+            // probably JUnit 5.x\n+            throw new SurefireReflectionException( e );\n+        }\n+    }\n }",
                "raw_url": "https://github.com/apache/maven-surefire/raw/4df65165717126c88569e1fa62b0ea30559cbfa3/surefire-providers/common-junit4/src/main/java/org/apache/maven/surefire/common/junit4/JUnit4Reflector.java",
                "sha": "0a69703eaf88807a269782f969e0a464bb7e7207",
                "status": "modified"
            },
            {
                "additions": 51,
                "blob_url": "https://github.com/apache/maven-surefire/blob/4df65165717126c88569e1fa62b0ea30559cbfa3/surefire-providers/surefire-junit4/src/main/java/org/apache/maven/surefire/junit4/JUnit4Provider.java",
                "changes": 122,
                "contents_url": "https://api.github.com/repos/apache/maven-surefire/contents/surefire-providers/surefire-junit4/src/main/java/org/apache/maven/surefire/junit4/JUnit4Provider.java?ref=4df65165717126c88569e1fa62b0ea30559cbfa3",
                "deletions": 71,
                "filename": "surefire-providers/surefire-junit4/src/main/java/org/apache/maven/surefire/junit4/JUnit4Provider.java",
                "patch": "@@ -41,17 +41,16 @@\n import org.apache.maven.surefire.util.ScanResult;\n import org.apache.maven.surefire.util.TestsToRun;\n import org.apache.maven.surefire.util.internal.StringUtils;\n+import org.junit.runner.Description;\n import org.junit.runner.Request;\n import org.junit.runner.Result;\n-import org.junit.runner.Runner;\n-import org.junit.runner.notification.Failure;\n import org.junit.runner.notification.RunNotifier;\n \n import java.lang.reflect.Method;\n import java.util.ArrayList;\n+import java.util.Collection;\n import java.util.Iterator;\n import java.util.List;\n-import java.util.Map;\n import java.util.Set;\n \n /**\n@@ -68,8 +67,6 @@\n \n     private final String requestedTestMethod;\n \n-    private TestsToRun testsToRun;\n-\n     private final ProviderParameters providerParameters;\n \n     private final RunOrderCalculator runOrderCalculator;\n@@ -78,13 +75,14 @@\n \n     private final int rerunFailingTestsCount;\n \n+    private TestsToRun testsToRun;\n \n     public JUnit4Provider( ProviderParameters booterParameters )\n     {\n-        this.providerParameters = booterParameters;\n-        this.testClassLoader = booterParameters.getTestClassLoader();\n-        this.scanResult = booterParameters.getScanResult();\n-        this.runOrderCalculator = booterParameters.getRunOrderCalculator();\n+        providerParameters = booterParameters;\n+        testClassLoader = booterParameters.getTestClassLoader();\n+        scanResult = booterParameters.getScanResult();\n+        runOrderCalculator = booterParameters.getRunOrderCalculator();\n         customRunListeners = JUnit4RunListenerFactory.\n             createCustomListeners( booterParameters.getProviderProperties().getProperty( \"listener\" ) );\n         jUnit4TestChecker = new JUnit4TestChecker( testClassLoader );\n@@ -122,50 +120,40 @@ else if ( forkTestSet instanceof Class )\n         JUnit4RunListener jUnit4TestSetReporter = new JUnit4RunListener( reporter );\n \n         Result result = new Result();\n-        RunNotifier runNotifer = getRunNotifer( jUnit4TestSetReporter, result, customRunListeners );\n+        RunNotifier runNotifier = getRunNotifier( jUnit4TestSetReporter, result, customRunListeners );\n \n-        runNotifer.fireTestRunStarted( null );\n+        runNotifier.fireTestRunStarted( createTestsDescription() );\n \n         for ( Class aTestsToRun : testsToRun )\n         {\n-            executeTestSet( aTestsToRun, reporter, runNotifer, null );\n+            executeTestSet( aTestsToRun, reporter, runNotifier );\n         }\n \n-        runNotifer.fireTestRunFinished( result );\n+        runNotifier.fireTestRunFinished( result );\n \n         JUnit4RunListener.rethrowAnyTestMechanismFailures( result );\n \n-        closeRunNotifer( jUnit4TestSetReporter, customRunListeners );\n+        closeRunNotifier( jUnit4TestSetReporter, customRunListeners );\n         return reporterFactory.close();\n     }\n \n-    private void executeTestSet( Class<?> clazz, RunListener reporter, RunNotifier listeners,\n-                                 String[] failingTestMethods )\n-        throws ReporterException, TestSetFailedException\n+    private void executeTestSet( Class<?> clazz, RunListener reporter, RunNotifier listeners )\n     {\n-        final ReportEntry report = new SimpleReportEntry( this.getClass().getName(), clazz.getName() );\n-\n+        final ReportEntry report = new SimpleReportEntry( getClass().getName(), clazz.getName() );\n         reporter.testSetStarting( report );\n-\n-\n-\n         try\n         {\n-            if ( !StringUtils.isBlank( this.requestedTestMethod ) )\n+            if ( !StringUtils.isBlank( requestedTestMethod ) )\n             {\n-                String actualTestMethod = getMethod( clazz, this.requestedTestMethod );//add by rainLee\n+                String actualTestMethod = getMethod( clazz, requestedTestMethod );//add by rainLee\n                 String[] testMethods = StringUtils.split( actualTestMethod, \"+\" );\n                 executeWithRerun( clazz, listeners, testMethods );\n             }\n             else\n             {//the original way\n-                executeWithRerun( clazz, listeners, failingTestMethods );\n+                executeWithRerun( clazz, listeners, null );\n             }\n         }\n-        catch ( TestSetFailedException e )\n-        {\n-            throw e;\n-        }\n         catch ( Throwable e )\n         {\n             reporter.testError( SimpleReportEntry.withException( report.getSourceName(), report.getName(),\n@@ -179,35 +167,27 @@ private void executeTestSet( Class<?> clazz, RunListener reporter, RunNotifier l\n     }\n \n     private void executeWithRerun( Class<?> clazz, RunNotifier listeners, String[] testMethods )\n-        throws TestSetFailedException\n     {\n         JUnitTestFailureListener failureListener = new JUnitTestFailureListener();\n         listeners.addListener( failureListener );\n \n         execute( clazz, listeners, testMethods );\n \n         // Rerun failing tests if rerunFailingTestsCount is larger than 0\n-        int rerunCount = this.rerunFailingTestsCount;\n-        if ( rerunCount > 0 )\n+        if ( rerunFailingTestsCount > 0 )\n         {\n-            for ( int i = 0; i < rerunCount; i++ )\n+            for ( int i = 0; i < rerunFailingTestsCount && !failureListener.getAllFailures().isEmpty(); i++ )\n             {\n-                List<Failure> failures = failureListener.getAllFailures();\n-                if ( failures.size() == 0 )\n-                {\n-                    break;\n-                }\n-\n                 Set<String> methodsSet = JUnit4ProviderUtil.generateFailingTests( failureListener.getAllFailures() );\n-                String[] methods = methodsSet.toArray(new String[methodsSet.size()]);\n+                String[] methods = methodsSet.toArray( new String[ methodsSet.size() ] );\n                 failureListener.reset();\n                 execute( clazz, listeners, methods );\n             }\n         }\n     }\n \n-    private RunNotifier getRunNotifer( org.junit.runner.notification.RunListener main, Result result,\n-                                       List<org.junit.runner.notification.RunListener> others )\n+    private RunNotifier getRunNotifier( org.junit.runner.notification.RunListener main, Result result,\n+                                        List<org.junit.runner.notification.RunListener> others )\n     {\n         RunNotifier fNotifier = new RunNotifier();\n         fNotifier.addListener( main );\n@@ -219,10 +199,10 @@ private RunNotifier getRunNotifer( org.junit.runner.notification.RunListener mai\n         return fNotifier;\n     }\n \n-    // I am not entierly sure as to why we do this explicit freeing, it's one of those\n+    // I am not entirely sure as to why we do this explicit freeing, it's one of those\n     // pieces of code that just seem to linger on in here ;)\n-    private void closeRunNotifer( org.junit.runner.notification.RunListener main,\n-                                  List<org.junit.runner.notification.RunListener> others )\n+    private void closeRunNotifier( org.junit.runner.notification.RunListener main,\n+                                   List<org.junit.runner.notification.RunListener> others )\n     {\n         RunNotifier fNotifier = new RunNotifier();\n         fNotifier.removeListener( main );\n@@ -248,7 +228,7 @@ private TestsToRun scanClassPath()\n     private void upgradeCheck()\n         throws TestSetFailedException\n     {\n-        if ( isJunit4UpgradeCheck() )\n+        if ( isJUnit4UpgradeCheck() )\n         {\n             List<Class> classesSkippedByValidation =\n                 scanResult.getClassesSkippedByValidation( jUnit4TestChecker, testClassLoader );\n@@ -268,37 +248,41 @@ private void upgradeCheck()\n         }\n     }\n \n-    private boolean isJunit4UpgradeCheck()\n+    private Description createTestsDescription()\n     {\n-        final String property = System.getProperty( \"surefire.junit4.upgradecheck\" );\n-        return property != null;\n+        Collection<Class<?>> classes = new ArrayList<Class<?>>();\n+        for ( Class<?> clazz : testsToRun )\n+        {\n+            classes.add( clazz );\n+        }\n+        return JUnit4ProviderUtil.createSuiteDescription( classes );\n     }\n \n+    private static boolean isJUnit4UpgradeCheck()\n+    {\n+        return System.getProperty( \"surefire.junit4.upgradecheck\" ) != null;\n+    }\n \n     private static void execute( Class<?> testClass, RunNotifier fNotifier, String[] testMethods )\n-        throws TestSetFailedException\n     {\n-        if ( null != testMethods )\n+        if ( testMethods != null )\n         {\n-            Method[] methods = testClass.getMethods();\n-            for ( Method method : methods )\n+            for ( final Method method : testClass.getMethods() )\n             {\n-                for ( String testMethod : testMethods )\n+                for ( final String testMethod : testMethods )\n                 {\n                     if ( SelectorUtils.match( testMethod, method.getName() ) )\n                     {\n-                        Runner junitTestRunner = Request.method( testClass, method.getName() ).getRunner();\n-                        junitTestRunner.run( fNotifier );\n+                        Request.method( testClass, method.getName() ).getRunner().run( fNotifier );\n                     }\n \n                 }\n             }\n-            return;\n         }\n-\n-        Runner junitTestRunner = Request.aClass( testClass ).getRunner();\n-\n-        junitTestRunner.run( fNotifier );\n+        else\n+        {\n+            Request.aClass( testClass ).getRunner().run( fNotifier );\n+        }\n     }\n \n     /**\n@@ -312,23 +296,19 @@ private static void execute( Class<?> testClass, RunNotifier fNotifier, String[]\n      */\n     private static String getMethod( Class testClass, String testMethodStr )\n     {\n-        String className = testClass.getName();\n+        final String className = testClass.getName();\n \n         if ( !testMethodStr.contains( \"#\" ) && !testMethodStr.contains( \",\" ) )\n         {//the original way\n             return testMethodStr;\n         }\n         testMethodStr += \",\";//for the bellow  split code\n-        int beginIndex = testMethodStr.indexOf( className );\n-        int endIndex = testMethodStr.indexOf( \",\", beginIndex );\n-        String classMethodStr =\n+        final int beginIndex = testMethodStr.indexOf( className );\n+        final int endIndex = testMethodStr.indexOf( \",\", beginIndex );\n+        final String classMethodStr =\n             testMethodStr.substring( beginIndex, endIndex );//String like \"StopWatchTest#testLang315\"\n \n-        int index = classMethodStr.indexOf( '#' );\n-        if ( index >= 0 )\n-        {\n-            return classMethodStr.substring( index + 1, classMethodStr.length() );\n-        }\n-        return null;\n+        final int index = classMethodStr.indexOf( '#' );\n+        return index >= 0 ? classMethodStr.substring( index + 1, classMethodStr.length() ) : null;\n     }\n }",
                "raw_url": "https://github.com/apache/maven-surefire/raw/4df65165717126c88569e1fa62b0ea30559cbfa3/surefire-providers/surefire-junit4/src/main/java/org/apache/maven/surefire/junit4/JUnit4Provider.java",
                "sha": "a9b2799e9ccc5d447ae87501628c3b0a9e99e10f",
                "status": "modified"
            },
            {
                "additions": 15,
                "blob_url": "https://github.com/apache/maven-surefire/blob/4df65165717126c88569e1fa62b0ea30559cbfa3/surefire-providers/surefire-junit47/src/main/java/org/apache/maven/surefire/junitcore/JUnitCoreProvider.java",
                "changes": 43,
                "contents_url": "https://api.github.com/repos/apache/maven-surefire/contents/surefire-providers/surefire-junit47/src/main/java/org/apache/maven/surefire/junitcore/JUnitCoreProvider.java?ref=4df65165717126c88569e1fa62b0ea30559cbfa3",
                "deletions": 28,
                "filename": "surefire-providers/surefire-junit47/src/main/java/org/apache/maven/surefire/junitcore/JUnitCoreProvider.java",
                "patch": "@@ -19,8 +19,6 @@\n  * under the License.\n  */\n \n-import java.util.ArrayList;\n-import java.util.HashMap;\n import java.util.Iterator;\n import java.util.List;\n import java.util.Map;\n@@ -48,11 +46,7 @@\n import org.apache.maven.surefire.util.ScannerFilter;\n import org.apache.maven.surefire.util.TestsToRun;\n import org.apache.maven.surefire.util.internal.StringUtils;\n-import org.junit.internal.runners.statements.Fail;\n import org.junit.runner.manipulation.Filter;\n-import org.junit.runner.notification.Failure;\n-\n-import static org.apache.maven.surefire.common.junit4.JUnit4RunListener.isFailureInsideJUnitItself;\n \n /**\n  * @author Kristian Rosenvold\n@@ -71,6 +65,10 @@\n \n     private final ProviderParameters providerParameters;\n \n+    private final ScanResult scanResult;\n+\n+    private final int rerunFailingTestsCount;\n+\n     private TestsToRun testsToRun;\n \n     private JUnit48Reflector jUnit48Reflector;\n@@ -79,20 +77,16 @@\n \n     private String requestedTestMethod;\n \n-    private final ScanResult scanResult;\n-\n-    private final int rerunFailingTestsCount;\n-\n     public JUnitCoreProvider( ProviderParameters providerParameters )\n     {\n         this.providerParameters = providerParameters;\n-        this.testClassLoader = providerParameters.getTestClassLoader();\n-        this.scanResult = providerParameters.getScanResult();\n-        this.runOrderCalculator = providerParameters.getRunOrderCalculator();\n-        this.jUnitCoreParameters = new JUnitCoreParameters( providerParameters.getProviderProperties() );\n-        this.scannerFilter = new JUnit48TestChecker( testClassLoader );\n-        this.requestedTestMethod = providerParameters.getTestRequest().getRequestedTestMethod();\n-        this.rerunFailingTestsCount = providerParameters.getTestRequest().getRerunFailingTestsCount();\n+        testClassLoader = providerParameters.getTestClassLoader();\n+        scanResult = providerParameters.getScanResult();\n+        runOrderCalculator = providerParameters.getRunOrderCalculator();\n+        jUnitCoreParameters = new JUnitCoreParameters( providerParameters.getProviderProperties() );\n+        scannerFilter = new JUnit48TestChecker( testClassLoader );\n+        requestedTestMethod = providerParameters.getTestRequest().getRequestedTestMethod();\n+        rerunFailingTestsCount = providerParameters.getTestRequest().getRerunFailingTestsCount();\n \n         customRunListeners =\n             JUnit4RunListenerFactory.createCustomListeners( providerParameters.getProviderProperties().getProperty( \"listener\" ) );\n@@ -141,8 +135,7 @@ else if ( forkTestSet instanceof Class )\n             }\n         }\n \n-        org.junit.runner.notification.RunListener jUnit4RunListener = getRunListener( reporterFactory, consoleLogger );\n-        customRunListeners.add( 0, jUnit4RunListener );\n+        customRunListeners.add( 0, getRunListener( reporterFactory, consoleLogger ) );\n \n         // Add test failure listener\n         JUnitTestFailureListener testFailureListener = new JUnitTestFailureListener();\n@@ -151,18 +144,12 @@ else if ( forkTestSet instanceof Class )\n         JUnitCoreWrapper.execute( testsToRun, jUnitCoreParameters, customRunListeners, filter );\n \n         // Rerun failing tests if rerunFailingTestsCount is larger than 0\n-        int rerunCount = this.rerunFailingTestsCount;\n-        if ( rerunCount > 0 )\n+        if ( rerunFailingTestsCount > 0 )\n         {\n-            for ( int i = 0; i < rerunCount; i++ )\n+            for ( int i = 0; i < rerunFailingTestsCount && !testFailureListener.getAllFailures().isEmpty(); i++ )\n             {\n-                List<Failure> failures = testFailureListener.getAllFailures();\n-                if ( failures.size() == 0 )\n-                {\n-                    break;\n-                }\n                 Map<Class<?>, Set<String>> failingTests =\n-                    JUnit4ProviderUtil.generateFailingTests( failures, testsToRun );\n+                    JUnit4ProviderUtil.generateFailingTests( testFailureListener.getAllFailures(), testsToRun );\n                 testFailureListener.reset();\n                 final FilterFactory filterFactory = new FilterFactory( testClassLoader );\n                 Filter failingMethodsFilter = filterFactory.createFailingMethodFilter( failingTests );",
                "raw_url": "https://github.com/apache/maven-surefire/raw/4df65165717126c88569e1fa62b0ea30559cbfa3/surefire-providers/surefire-junit47/src/main/java/org/apache/maven/surefire/junitcore/JUnitCoreProvider.java",
                "sha": "a145b441d0c9cdea1c8b7dcb1fdc6264f0b9a609",
                "status": "modified"
            },
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/maven-surefire/blob/4df65165717126c88569e1fa62b0ea30559cbfa3/surefire-providers/surefire-junit47/src/main/java/org/apache/maven/surefire/junitcore/NonConcurrentRunListener.java",
                "changes": 12,
                "contents_url": "https://api.github.com/repos/apache/maven-surefire/contents/surefire-providers/surefire-junit47/src/main/java/org/apache/maven/surefire/junitcore/NonConcurrentRunListener.java?ref=4df65165717126c88569e1fa62b0ea30559cbfa3",
                "deletions": 10,
                "filename": "surefire-providers/surefire-junit47/src/main/java/org/apache/maven/surefire/junitcore/NonConcurrentRunListener.java",
                "patch": "@@ -56,20 +56,12 @@ public synchronized void writeTestOutput( byte[] buf, int off, int len, boolean\n \n     protected SimpleReportEntry createReportEntry( Description description )\n     {\n-        return new SimpleReportEntry( description.getClassName(), description.getDisplayName()/*\n-                                                                                               * , (int) (\n-                                                                                               * System.currentTimeMillis\n-                                                                                               * () - startTime )\n-                                                                                               */);\n+        return new SimpleReportEntry( description.getClassName(), description.getDisplayName() );\n     }\n \n     protected SimpleReportEntry createReportEntryForTestSet( Description description )\n     {\n-        return new SimpleReportEntry( description.getClassName(), description.getClassName() /*\n-                                                                                              * , (int) (\n-                                                                                              * System.currentTimeMillis\n-                                                                                              * () - startTime )\n-                                                                                              */);\n+        return new SimpleReportEntry( description.getClassName(), description.getClassName() );\n     }\n \n     @Override",
                "raw_url": "https://github.com/apache/maven-surefire/raw/4df65165717126c88569e1fa62b0ea30559cbfa3/surefire-providers/surefire-junit47/src/main/java/org/apache/maven/surefire/junitcore/NonConcurrentRunListener.java",
                "sha": "458b484aabd3cec9a3fad0805aafece71afa323d",
                "status": "modified"
            }
        ],
        "message": "[SUREFIRE-1095] NPE in JUnit 4.x RunListener + Refactoring",
        "parent": "https://github.com/apache/maven-surefire/commit/254e7390a833222d006314c54cbb2be0a929d18d",
        "repo": "maven-surefire",
        "unit_tests": [
            "JUnit4ProviderUtilTest.java",
            "JUnit4ProviderTest.java"
        ]
    },
    "maven-surefire_6a3b96a": {
        "bug_id": "maven-surefire_6a3b96a",
        "commit": "https://github.com/apache/maven-surefire/commit/6a3b96acec7fc229db3d7289e02ca0eb422da29f",
        "file": [
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/maven-surefire/blob/6a3b96acec7fc229db3d7289e02ca0eb422da29f/maven-surefire-plugin/src/main/java/org/apache/maven/plugin/surefire/SurefirePlugin.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/maven-surefire/contents/maven-surefire-plugin/src/main/java/org/apache/maven/plugin/surefire/SurefirePlugin.java?ref=6a3b96acec7fc229db3d7289e02ca0eb422da29f",
                "deletions": 1,
                "filename": "maven-surefire-plugin/src/main/java/org/apache/maven/plugin/surefire/SurefirePlugin.java",
                "patch": "@@ -591,7 +591,7 @@ else if ( junitArtifact != null && junitArtifact.getBaseVersion().startsWith( \"4\n             else\n             {\n                 String junitDirectoryTestSuite;\n-                if ( junitArtifact.getBaseVersion().startsWith( \"4\" ) )\n+                if ( junitArtifact != null && junitArtifact.getBaseVersion().startsWith( \"4\" ) )\n                 {\n                     junitDirectoryTestSuite = \"org.apache.maven.surefire.junit4.JUnit4DirectoryTestSuite\";\n                 }",
                "raw_url": "https://github.com/apache/maven-surefire/raw/6a3b96acec7fc229db3d7289e02ca0eb422da29f/maven-surefire-plugin/src/main/java/org/apache/maven/plugin/surefire/SurefirePlugin.java",
                "sha": "09de78cfa198872adcfde9721ca7e82d3c198030",
                "status": "modified"
            }
        ],
        "message": "SUREFIRE-300 Fixing the NPE for cases where projects have no test cases.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/surefire/trunk@513588 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/maven-surefire/commit/b5bcccf7024be1bc3ae03033092b43768a08f629",
        "repo": "maven-surefire",
        "unit_tests": [
            "SurefirePluginTest.java"
        ]
    },
    "maven-surefire_6f51572": {
        "bug_id": "maven-surefire_6f51572",
        "commit": "https://github.com/apache/maven-surefire/commit/6f51572efbb6f3b0132d3225e9077c11bb6e70b9",
        "file": [
            {
                "additions": 6,
                "blob_url": "https://github.com/apache/maven-surefire/blob/6f51572efbb6f3b0132d3225e9077c11bb6e70b9/surefire-providers/surefire-junit47/src/main/java/org/apache/maven/surefire/junitcore/ConcurrentRunListener.java",
                "changes": 9,
                "contents_url": "https://api.github.com/repos/apache/maven-surefire/contents/surefire-providers/surefire-junit47/src/main/java/org/apache/maven/surefire/junitcore/ConcurrentRunListener.java?ref=6f51572efbb6f3b0132d3225e9077c11bb6e70b9",
                "deletions": 3,
                "filename": "surefire-providers/surefire-junit47/src/main/java/org/apache/maven/surefire/junitcore/ConcurrentRunListener.java",
                "patch": "@@ -135,9 +135,12 @@ public void testStarting( ReportEntry description )\n     public void testSucceeded( ReportEntry report )\n     {\n         TestMethod testMethod = getTestMethod();\n-        testMethod.testFinished();\n-        testMethod.getTestSet().incrementFinishedTests( getRunListener(), reportImmediately );\n-        testMethod.detachFromCurrentThread();\n+        if ( null != testMethod )\n+        {\n+            testMethod.testFinished();\n+            testMethod.getTestSet().incrementFinishedTests( getRunListener(), reportImmediately );\n+            testMethod.detachFromCurrentThread();\n+        }\n     }\n \n     private TestMethod getOrCreateThreadAttachedTestMethod( ReportEntry description )",
                "raw_url": "https://github.com/apache/maven-surefire/raw/6f51572efbb6f3b0132d3225e9077c11bb6e70b9/surefire-providers/surefire-junit47/src/main/java/org/apache/maven/surefire/junitcore/ConcurrentRunListener.java",
                "sha": "72543649eaffea8104774f1df2cff07c12091bc0",
                "status": "modified"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/maven-surefire/blob/6f51572efbb6f3b0132d3225e9077c11bb6e70b9/surefire-providers/surefire-junit47/src/main/java/org/apache/maven/surefire/junitcore/TestMethod.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/maven-surefire/contents/surefire-providers/surefire-junit47/src/main/java/org/apache/maven/surefire/junitcore/TestMethod.java?ref=6f51572efbb6f3b0132d3225e9077c11bb6e70b9",
                "deletions": 1,
                "filename": "surefire-providers/surefire-junit47/src/main/java/org/apache/maven/surefire/junitcore/TestMethod.java",
                "patch": "@@ -89,7 +89,7 @@ private void setEndTime()\n \n     public int getElapsed()\n     {\n-        return (int) ( endTime - startTime );\n+        return endTime > 0 ? (int) ( endTime - startTime ) : 0;\n     }\n \n ",
                "raw_url": "https://github.com/apache/maven-surefire/raw/6f51572efbb6f3b0132d3225e9077c11bb6e70b9/surefire-providers/surefire-junit47/src/main/java/org/apache/maven/surefire/junitcore/TestMethod.java",
                "sha": "dc1ae279347522cd493b534f70c4dae250d629b1",
                "status": "modified"
            }
        ],
        "message": "[SUREFIRE-991] fixed NPE in ConcurrentRunListener for the case that a testSucceeds is called more often that testStarting (issue with the cucumber test runner)",
        "parent": "https://github.com/apache/maven-surefire/commit/3d903eb72c04231c2ad75cfd8dd385b5e478e19f",
        "repo": "maven-surefire",
        "unit_tests": [
            "ConcurrentRunListenerTest.java",
            "TestMethodTest.java"
        ]
    },
    "maven-surefire_8cb7ab4": {
        "bug_id": "maven-surefire_8cb7ab4",
        "commit": "https://github.com/apache/maven-surefire/commit/8cb7ab468538b7aad41ad713b6890048e854c794",
        "file": [
            {
                "additions": 18,
                "blob_url": "https://github.com/apache/maven-surefire/blob/8cb7ab468538b7aad41ad713b6890048e854c794/maven-surefire-common/src/main/java/org/apache/maven/plugin/surefire/AbstractSurefireMojo.java",
                "changes": 22,
                "contents_url": "https://api.github.com/repos/apache/maven-surefire/contents/maven-surefire-common/src/main/java/org/apache/maven/plugin/surefire/AbstractSurefireMojo.java?ref=8cb7ab468538b7aad41ad713b6890048e854c794",
                "deletions": 4,
                "filename": "maven-surefire-common/src/main/java/org/apache/maven/plugin/surefire/AbstractSurefireMojo.java",
                "patch": "@@ -1230,10 +1230,10 @@ private void maybeAppendList( final List<String> base, final List<String> list )\n             // Have to wrap in an ArrayList as surefire expects an ArrayList instead of a List for some reason\n             if ( excludes == null || excludes.size() == 0 )\n             {\n-                excludes = new ArrayList<String>( Arrays.asList( new String[]{ \"**/*$*\" } ) );\n+                excludes = Arrays.asList( new String[]{ \"**/*$*\" } );\n             }\n         }\n-        return excludes;\n+        return filterNulls( excludes );\n     }\n \n     private List<String> getIncludeList()\n@@ -1265,10 +1265,24 @@ private void maybeAppendList( final List<String> base, final List<String> list )\n         // Have to wrap in an ArrayList as surefire expects an ArrayList instead of a List for some reason\n         if ( includes == null || includes.size() == 0 )\n         {\n-            includes = new ArrayList<String>( Arrays.asList( getDefaultIncludes() ) );\n+            includes = Arrays.asList( getDefaultIncludes() );\n+        }\n+\n+        return filterNulls( includes );\n+    }\n+\n+    private List<String> filterNulls( List<String> toFilter )\n+    {\n+        List<String> result = new ArrayList<String>( toFilter.size() );\n+        for ( String item : toFilter )\n+        {\n+            if ( item != null )\n+            {\n+                result.add( item );\n+            }\n         }\n \n-        return includes;\n+        return result;\n     }\n \n     private boolean isMultipleExecutionBlocksDetected()",
                "raw_url": "https://github.com/apache/maven-surefire/raw/8cb7ab468538b7aad41ad713b6890048e854c794/maven-surefire-common/src/main/java/org/apache/maven/plugin/surefire/AbstractSurefireMojo.java",
                "sha": "2ff2c58cfafb9e6e0b8d8dfc4f7db4b6646f0308",
                "status": "modified"
            },
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/maven-surefire/blob/8cb7ab468538b7aad41ad713b6890048e854c794/surefire-integration-tests/src/test/resources/includes-excludes/pom.xml",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/maven-surefire/contents/surefire-integration-tests/src/test/resources/includes-excludes/pom.xml?ref=8cb7ab468538b7aad41ad713b6890048e854c794",
                "deletions": 0,
                "filename": "surefire-integration-tests/src/test/resources/includes-excludes/pom.xml",
                "patch": "@@ -64,6 +64,8 @@ under the License.\n             <configuration>\n               <excludes>\n                 <exclude>**/DontRunTest.*</exclude>\n+                <exclude></exclude>\n+                <exclude />\n               </excludes>\n               <includes>\n                 <include>**/NotIncludedByDefault.java</include>",
                "raw_url": "https://github.com/apache/maven-surefire/raw/8cb7ab468538b7aad41ad713b6890048e854c794/surefire-integration-tests/src/test/resources/includes-excludes/pom.xml",
                "sha": "504171e97a272cfd09408d343dbcfff646c1f581",
                "status": "modified"
            }
        ],
        "message": "[SUREFIRE-980] avoid NPE on empty include/exclude tags",
        "parent": "https://github.com/apache/maven-surefire/commit/becadaf1fec1f0aadbece3406d0ba03638671ec2",
        "repo": "maven-surefire",
        "unit_tests": [
            "AbstractSurefireMojoTest.java"
        ]
    },
    "maven-surefire_90edbd4": {
        "bug_id": "maven-surefire_90edbd4",
        "commit": "https://github.com/apache/maven-surefire/commit/90edbd4abd3697c92692a2d12f15aaf02e66af40",
        "file": [
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/maven-surefire/blob/90edbd4abd3697c92692a2d12f15aaf02e66af40/maven-surefire-common/src/main/java/org/apache/maven/plugin/surefire/report/DefaultReporterFactory.java",
                "changes": 5,
                "contents_url": "https://api.github.com/repos/apache/maven-surefire/contents/maven-surefire-common/src/main/java/org/apache/maven/plugin/surefire/report/DefaultReporterFactory.java?ref=90edbd4abd3697c92692a2d12f15aaf02e66af40",
                "deletions": 4,
                "filename": "maven-surefire-common/src/main/java/org/apache/maven/plugin/surefire/report/DefaultReporterFactory.java",
                "patch": "@@ -43,8 +43,6 @@\n \r\n     private final RunStatistics globalStats = new RunStatistics();\r\n \r\n-    private final ConsoleReporter multicastingReporter;\r\n-\r\n     private final StartupReportConfiguration reportConfiguration;\r\n \r\n     private final StatisticsReporter statisticsReporter;\r\n@@ -55,7 +53,6 @@\n     public DefaultReporterFactory( StartupReportConfiguration reportConfiguration )\r\n     {\r\n         this.reportConfiguration = reportConfiguration;\r\n-        multicastingReporter = reportConfiguration.instantiateConsoleReporter();\r\n         this.statisticsReporter = reportConfiguration.instantiateStatisticsReporter();\r\n         runStarting();\r\n     }\r\n@@ -106,7 +103,7 @@ private void runCompleted()\n         logger.info( \"\" );\r\n         if ( globalStats.hadFailures() )\r\n         {\r\n-            multicastingReporter.writeMessage( \"Failed tests: \" );\r\n+            logger.info( \"Failed tests: \" );\r\n             for ( Object o : this.globalStats.getFailureSources() )\r\n             {\r\n                 logger.info( \"  \" + o );\r",
                "raw_url": "https://github.com/apache/maven-surefire/raw/90edbd4abd3697c92692a2d12f15aaf02e66af40/maven-surefire-common/src/main/java/org/apache/maven/plugin/surefire/report/DefaultReporterFactory.java",
                "sha": "52d925e11684889589f6ad4788c0d317b637ca83",
                "status": "modified"
            }
        ],
        "message": "o Removed NPE on odd configuration",
        "parent": "https://github.com/apache/maven-surefire/commit/065da9ca635cf23747da25164da872c3f1ef1a3c",
        "repo": "maven-surefire",
        "unit_tests": [
            "DefaultReporterFactoryTest.java"
        ]
    },
    "maven-surefire_9e4b67c": {
        "bug_id": "maven-surefire_9e4b67c",
        "commit": "https://github.com/apache/maven-surefire/commit/9e4b67caa4e4a006ca7a54b278b16af722196040",
        "file": [
            {
                "additions": 6,
                "blob_url": "https://github.com/apache/maven-surefire/blob/9e4b67caa4e4a006ca7a54b278b16af722196040/surefire-providers/common-junit4/src/main/java/org/apache/maven/surefire/common/junit4/JUnit4TestChecker.java",
                "changes": 9,
                "contents_url": "https://api.github.com/repos/apache/maven-surefire/contents/surefire-providers/common-junit4/src/main/java/org/apache/maven/surefire/common/junit4/JUnit4TestChecker.java?ref=9e4b67caa4e4a006ca7a54b278b16af722196040",
                "deletions": 3,
                "filename": "surefire-providers/common-junit4/src/main/java/org/apache/maven/surefire/common/junit4/JUnit4TestChecker.java",
                "patch": "@@ -59,10 +59,13 @@ private boolean isValidJUnit4Test( Class testClass )\n             return false;\n         }\n \n-        Annotation runWithAnnotation = testClass.getAnnotation( runWith );\n-        if ( runWithAnnotation != null )\n+        if ( runWith != null )\n         {\n-            return true;\n+            Annotation runWithAnnotation = testClass.getAnnotation( runWith );\n+            if ( runWithAnnotation != null )\n+            {\n+                return true;\n+            }\n         }\n \n         Class classToCheck = testClass;",
                "raw_url": "https://github.com/apache/maven-surefire/raw/9e4b67caa4e4a006ca7a54b278b16af722196040/surefire-providers/common-junit4/src/main/java/org/apache/maven/surefire/common/junit4/JUnit4TestChecker.java",
                "sha": "d121d3c7d93753f7cf98dff64d3308b4718eb6a5",
                "status": "modified"
            },
            {
                "additions": 26,
                "blob_url": "https://github.com/apache/maven-surefire/blob/9e4b67caa4e4a006ca7a54b278b16af722196040/surefire-providers/common-junit4/src/test/java/org/apache/maven/surefire/junit4/JUnit4TestCheckerTest.java",
                "changes": 26,
                "contents_url": "https://api.github.com/repos/apache/maven-surefire/contents/surefire-providers/common-junit4/src/test/java/org/apache/maven/surefire/junit4/JUnit4TestCheckerTest.java?ref=9e4b67caa4e4a006ca7a54b278b16af722196040",
                "deletions": 0,
                "filename": "surefire-providers/common-junit4/src/test/java/org/apache/maven/surefire/junit4/JUnit4TestCheckerTest.java",
                "patch": "@@ -18,6 +18,8 @@\n  * under the License.\n  */\n \n+import java.util.Collections;\n+import java.util.Set;\n import org.apache.maven.surefire.common.junit4.JUnit4TestChecker;\n import org.apache.maven.surefire.testset.TestSetFailedException;\n \n@@ -115,6 +117,22 @@ public void innerClassNotAutomaticallyTc()\n         assertFalse( jUnit4TestChecker.accept( NestedTC.Inner.class ) );\n     }\n \n+    @Test\n+    public void testCannotLoadRunWithAnnotation()\n+        throws Exception\n+    {\n+        Class testClass = SimpleJUnit4TestClass.class;\n+        ClassLoader testClassLoader = testClass.getClassLoader();\n+        // Emulate an OSGi classloader which filters on package level.\n+        // Use a classloader which can only load classes in package org.junit,\n+        // e.g. org.junit.Test, but no classes from other packages,\n+        // in particular org.junit.runner.RunWith can't be loaded\n+        Set<String> visiblePackages = Collections.singleton( \"org.junit\" );\n+        PackageFilteringClassLoader filteringTestClassloader =\n+            new PackageFilteringClassLoader( testClassLoader, visiblePackages );\n+        JUnit4TestChecker checker = new JUnit4TestChecker( filteringTestClassloader );\n+        assertTrue( checker.accept( testClass ) );\n+    }\n \n     public static class AlsoValid\n         extends TestCase\n@@ -218,6 +236,14 @@ public void testSomething()\n \n         }\n     }\n+    \n+    public static class SimpleJUnit4TestClass\n+    {\n+        @Test\n+        public void testMethod()\n+        {\n+        }\n+    }\n \n     class MySuite\n         extends Suite",
                "raw_url": "https://github.com/apache/maven-surefire/raw/9e4b67caa4e4a006ca7a54b278b16af722196040/surefire-providers/common-junit4/src/test/java/org/apache/maven/surefire/junit4/JUnit4TestCheckerTest.java",
                "sha": "c65bc20046d2437b7a031b28072f4b71db1793ab",
                "status": "modified"
            },
            {
                "additions": 61,
                "blob_url": "https://github.com/apache/maven-surefire/blob/9e4b67caa4e4a006ca7a54b278b16af722196040/surefire-providers/common-junit4/src/test/java/org/apache/maven/surefire/junit4/PackageFilteringClassLoader.java",
                "changes": 61,
                "contents_url": "https://api.github.com/repos/apache/maven-surefire/contents/surefire-providers/common-junit4/src/test/java/org/apache/maven/surefire/junit4/PackageFilteringClassLoader.java?ref=9e4b67caa4e4a006ca7a54b278b16af722196040",
                "deletions": 0,
                "filename": "surefire-providers/common-junit4/src/test/java/org/apache/maven/surefire/junit4/PackageFilteringClassLoader.java",
                "patch": "@@ -0,0 +1,61 @@\n+package org.apache.maven.surefire.junit4;\n+\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+import java.util.Set;\n+\n+/**\n+ * Emulate an OSGi classloader which only loads packages that have been imported via Import-Package MANIFEST header.\n+ */\n+public class PackageFilteringClassLoader\n+    extends ClassLoader\n+{\n+\n+    private ClassLoader wrapped;\n+\n+    private Set<String> visiblePackages;\n+\n+    public PackageFilteringClassLoader( ClassLoader wrapped, Set<String> visiblePackages )\n+    {\n+        this.wrapped = wrapped;\n+        this.visiblePackages = visiblePackages;\n+    }\n+\n+    @Override\n+    public Class<?> loadClass( String className )\n+        throws ClassNotFoundException\n+    {\n+        String packageName = \"\";\n+        int lastDot = className.lastIndexOf( '.' );\n+        if ( lastDot != -1 )\n+        {\n+            packageName = className.substring( 0, lastDot );\n+        }\n+        if ( visiblePackages.contains( packageName ) )\n+        {\n+            return wrapped.loadClass( className );\n+        }\n+        else\n+        {\n+            throw new ClassNotFoundException( className );\n+        }\n+    }\n+\n+}",
                "raw_url": "https://github.com/apache/maven-surefire/raw/9e4b67caa4e4a006ca7a54b278b16af722196040/surefire-providers/common-junit4/src/test/java/org/apache/maven/surefire/junit4/PackageFilteringClassLoader.java",
                "sha": "68c4434bb8c0a9d550c35d4b83a77582d04de531",
                "status": "added"
            }
        ],
        "message": "[SUREFIRE-825] NPE when RunWith cant be loaded\n\nPatch and testcase by Jan Sievers, accepted unmodified.\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/surefire/trunk@1245650 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/maven-surefire/commit/0061fe7019406d18eecce64645afd6ae8af784ca",
        "repo": "maven-surefire",
        "unit_tests": [
            "JUnit4TestCheckerTest.java"
        ]
    },
    "maven-surefire_b26d1c4": {
        "bug_id": "maven-surefire_b26d1c4",
        "commit": "https://github.com/apache/maven-surefire/commit/b26d1c484a6c5465e98af9e231d5f2b99f89ce7a",
        "file": [
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/maven-surefire/blob/b26d1c484a6c5465e98af9e231d5f2b99f89ce7a/maven-surefire-plugin/src/main/java/org/apache/maven/plugin/surefire/SurefirePlugin.java",
                "changes": 3,
                "contents_url": "https://api.github.com/repos/apache/maven-surefire/contents/maven-surefire-plugin/src/main/java/org/apache/maven/plugin/surefire/SurefirePlugin.java?ref=b26d1c484a6c5465e98af9e231d5f2b99f89ce7a",
                "deletions": 1,
                "filename": "maven-surefire-plugin/src/main/java/org/apache/maven/plugin/surefire/SurefirePlugin.java",
                "patch": "@@ -29,6 +29,7 @@\n import org.apache.maven.artifact.resolver.ArtifactResolver;\n import org.apache.maven.artifact.resolver.filter.ArtifactFilter;\n import org.apache.maven.artifact.resolver.filter.ExcludesArtifactFilter;\n+import org.apache.maven.artifact.versioning.DefaultArtifactVersion;\n import org.apache.maven.artifact.versioning.InvalidVersionSpecificationException;\n import org.apache.maven.artifact.versioning.VersionRange;\n import org.apache.maven.plugin.AbstractMojo;\n@@ -531,7 +532,7 @@ private SurefireBooter constructSurefireBooter()\n             if ( testNgArtifact != null )\n             {\n                 VersionRange range = VersionRange.createFromVersionSpec( \"[4.7,)\" );\n-                if ( !range.containsVersion( testNgArtifact.getSelectedVersion() ) )\n+                if ( !range.containsVersion( new DefaultArtifactVersion(testNgArtifact.getVersion()) ) )\n                 {\n                     throw new MojoFailureException(\n                                                     \"TestNG support requires version 4.7 or above. You have declared version \" +",
                "raw_url": "https://github.com/apache/maven-surefire/raw/b26d1c484a6c5465e98af9e231d5f2b99f89ce7a/maven-surefire-plugin/src/main/java/org/apache/maven/plugin/surefire/SurefirePlugin.java",
                "sha": "9ea7eeb694b4010d8ebbc1b04bf1ec6564df7423",
                "status": "modified"
            }
        ],
        "message": "[SUREFIRE-360] maven-surefire-plugin fails with an NPE when test ng is configured transitively\nSubmitted by: Tibor Varga\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/surefire/trunk@594593 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/maven-surefire/commit/538f225de6379a864b2461c2197e844d9e696bb9",
        "repo": "maven-surefire",
        "unit_tests": [
            "SurefirePluginTest.java"
        ]
    },
    "maven-surefire_bb7c2de": {
        "bug_id": "maven-surefire_bb7c2de",
        "commit": "https://github.com/apache/maven-surefire/commit/bb7c2de8ca5b01e568c7f97235822303fda4ed4b",
        "file": [
            {
                "additions": 40,
                "blob_url": "https://github.com/apache/maven-surefire/blob/bb7c2de8ca5b01e568c7f97235822303fda4ed4b/maven-surefire-common/src/main/java/org/apache/maven/plugin/surefire/AbstractSurefireMojo.java",
                "changes": 70,
                "contents_url": "https://api.github.com/repos/apache/maven-surefire/contents/maven-surefire-common/src/main/java/org/apache/maven/plugin/surefire/AbstractSurefireMojo.java?ref=bb7c2de8ca5b01e568c7f97235822303fda4ed4b",
                "deletions": 30,
                "filename": "maven-surefire-common/src/main/java/org/apache/maven/plugin/surefire/AbstractSurefireMojo.java",
                "patch": "@@ -19,6 +19,17 @@\n  * under the License.\n  */\n \n+import java.io.File;\n+import java.lang.reflect.Method;\n+import java.util.ArrayList;\n+import java.util.Arrays;\n+import java.util.Collections;\n+import java.util.Iterator;\n+import java.util.LinkedHashSet;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Properties;\n+import java.util.Set;\n import org.apache.maven.artifact.Artifact;\n import org.apache.maven.artifact.DependencyResolutionRequiredException;\n import org.apache.maven.artifact.resolver.ArtifactNotFoundException;\n@@ -58,18 +69,6 @@\n import org.apache.maven.toolchain.Toolchain;\n import org.codehaus.plexus.util.StringUtils;\n \n-import java.io.File;\n-import java.lang.reflect.Method;\n-import java.util.ArrayList;\n-import java.util.Arrays;\n-import java.util.Collections;\n-import java.util.Iterator;\n-import java.util.LinkedHashSet;\n-import java.util.List;\n-import java.util.Map;\n-import java.util.Properties;\n-import java.util.Set;\n-\n /**\n  * Abstract base class for running tests using Surefire.\n  *\n@@ -293,7 +292,8 @@ protected ProviderConfiguration createProviderConfiguration( ForkConfiguration f\n         TestArtifactInfo testNg =\n             isTestNg ? new TestArtifactInfo( testNgArtifact.getVersion(), testNgArtifact.getClassifier() ) : null;\n         List testXml = getSuiteXmlFiles() != null ? Arrays.asList( getSuiteXmlFiles() ) : null;\n-        TestRequest testSuiteDefinition = new TestRequest( testXml, getTestSourceDirectory(), getTest(), getTestMethod() );\n+        TestRequest testSuiteDefinition =\n+            new TestRequest( testXml, getTestSourceDirectory(), getTest(), getTestMethod() );\n         final boolean failIfNoTests;\n \n         if ( isValidSuiteXmlFileConfig() && getTest() == null )\n@@ -365,10 +365,11 @@ protected StartupConfiguration createStartupConfiguration( ForkConfiguration for\n             final Classpath providerClasspath = provider.getProviderClasspath();\n             final Classpath testClasspath = generateTestClasspath();\n \n-            logClasspath(  testClasspath, \"test classpath\" );\n-            logClasspath(  testClasspath, \"provider classpath\" );\n-             final ClasspathConfiguration classpathConfiguration =new ClasspathConfiguration( testClasspath, providerClasspath,\n-                                        isEnableAssertions(), isChildDelegation() );\n+            logClasspath( testClasspath, \"test classpath\" );\n+            logClasspath( testClasspath, \"provider classpath\" );\n+            final ClasspathConfiguration classpathConfiguration =\n+                new ClasspathConfiguration( testClasspath, providerClasspath, isEnableAssertions(),\n+                                            isChildDelegation() );\n \n             return new StartupConfiguration( providerName, classpathConfiguration, classLoaderConfiguration,\n                                              forkConfiguration.isForking(), false, isRedirectTestOutputToFile() );\n@@ -624,9 +625,10 @@ private void verifyLegalSystemProperties()\n         {\n             String key = (String) iter.next();\n \n-            if (\"java.library.path\".equals( key ))\n+            if ( \"java.library.path\".equals( key ) )\n             {\n-               getLog().warn( \"java.library.path cannot be set as system property, use <argLine>-Djava.library.path=...<argLine> instead\");\n+                getLog().warn(\n+                    \"java.library.path cannot be set as system property, use <argLine>-Djava.library.path=...<argLine> instead\" );\n             }\n         }\n     }\n@@ -729,12 +731,13 @@ protected ClassLoaderConfiguration getClassLoaderConfiguration( ForkConfiguratio\n      *\n      * @return List containing the classpath elements\n      * @throws org.apache.maven.artifact.DependencyResolutionRequiredException\n-     *          when dependency resolution fails\n+     *                                     when dependency resolution fails\n      * @throws org.apache.maven.plugin.MojoExecutionException\n-     *          upon other problems\n-     * @throws InvalidVersionSpecificationException when it happens\n-     * @throws MojoFailureException when it happens\n-     * @throws ArtifactNotFoundException when it happens\n+     *                                     upon other problems\n+     * @throws InvalidVersionSpecificationException\n+     *                                     when it happens\n+     * @throws MojoFailureException        when it happens\n+     * @throws ArtifactNotFoundException   when it happens\n      * @throws ArtifactResolutionException when it happens\n      */\n     public Classpath generateTestClasspath()\n@@ -780,12 +783,13 @@ public Classpath generateTestClasspath()\n             for ( Iterator iter = getAdditionalClasspathElements().iterator(); iter.hasNext(); )\n             {\n                 String classpathElement = (String) iter.next();\n-                if (classpathElement != null){\n+                if ( classpathElement != null )\n+                {\n                     classpath.add( classpathElement );\n                 }\n             }\n         }\n-        \n+\n         // adding TestNG MethodSelector to the classpath\n         // Todo: move\n         if ( getTestNgArtifact() != null )\n@@ -796,13 +800,14 @@ public Classpath generateTestClasspath()\n \n         }\n \n-        return new Classpath(classpath);\n+        return new Classpath( classpath );\n     }\n-    \n+\n     protected Artifact getTestNgUtilsArtifact()\n         throws ArtifactResolutionException, ArtifactNotFoundException\n     {\n-        Artifact surefireArtifact = (Artifact) getPluginArtifactMap().get( \"org.apache.maven.surefire:surefire-booter\" );\n+        Artifact surefireArtifact =\n+            (Artifact) getPluginArtifactMap().get( \"org.apache.maven.surefire:surefire-booter\" );\n         String surefireVersion = surefireArtifact.getBaseVersion();\n         Artifact testNgUtils =\n             getArtifactFactory().createArtifact( \"org.apache.maven.surefire\", \"surefire-testng-utils\", surefireVersion,\n@@ -811,7 +816,7 @@ protected Artifact getTestNgUtilsArtifact()\n         getArtifactResolver().resolve( testNgUtils, getRemoteRepositories(), getLocalRepository() );\n         return testNgUtils;\n     }\n-    \n+\n     /**\n      * Return a new set containing only the artifacts accepted by the given filter.\n      *\n@@ -1051,6 +1056,11 @@ else if ( PLAIN_REPORT_FORMAT.equals( getReportFormat() ) )\n     protected void ensureWorkingDirectoryExists()\n         throws MojoFailureException\n     {\n+        if ( getWorkingDirectory() == null )\n+        {\n+            throw new MojoFailureException( \"workingDirectory cannot be null\" );\n+        }\n+\n         if ( !getWorkingDirectory().exists() )\n         {\n             if ( !getWorkingDirectory().mkdirs() )",
                "raw_url": "https://github.com/apache/maven-surefire/raw/bb7c2de8ca5b01e568c7f97235822303fda4ed4b/maven-surefire-common/src/main/java/org/apache/maven/plugin/surefire/AbstractSurefireMojo.java",
                "sha": "df525f98081b0c500f09eb516fe34c193a500a98",
                "status": "modified"
            }
        ],
        "message": "[SUREFIRE-715] Fixed NPE when workingDirectory is null\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/surefire/trunk@1091058 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/maven-surefire/commit/cb3e4e39d5ead7d26e3ff013c1a09566a30c3d27",
        "repo": "maven-surefire",
        "unit_tests": [
            "AbstractSurefireMojoTest.java"
        ]
    },
    "maven-surefire_d78376b": {
        "bug_id": "maven-surefire_d78376b",
        "commit": "https://github.com/apache/maven-surefire/commit/d78376b82a18cec354cab32182e7c18af363f6f7",
        "file": [
            {
                "additions": 37,
                "blob_url": "https://github.com/apache/maven-surefire/blob/d78376b82a18cec354cab32182e7c18af363f6f7/surefire-integration-tests/src/test/java/org/apache/maven/surefire/its/CheckTestNgListenersIT.java",
                "changes": 37,
                "contents_url": "https://api.github.com/repos/apache/maven-surefire/contents/surefire-integration-tests/src/test/java/org/apache/maven/surefire/its/CheckTestNgListenersIT.java?ref=d78376b82a18cec354cab32182e7c18af363f6f7",
                "deletions": 0,
                "filename": "surefire-integration-tests/src/test/java/org/apache/maven/surefire/its/CheckTestNgListenersIT.java",
                "patch": "@@ -0,0 +1,37 @@\n+package org.apache.maven.surefire.its;\n+\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+import org.apache.maven.surefire.its.fixture.SurefireJUnit4IntegrationTestCase;\n+import org.junit.Test;\n+\n+/**\n+ * Test annotation-based TestNG listener\n+ */\n+public class CheckTestNgListenersIT\n+    extends SurefireJUnit4IntegrationTestCase\n+{\n+    @Test\n+    public void TestNgListenerReporter()\n+    {\n+        unpack( \"testng-listeners\" ).mavenTestFailureIgnore( true ).executeTest().assertTestSuiteResults( 1, 0, 1, 0 );\n+    }\n+\n+}",
                "raw_url": "https://github.com/apache/maven-surefire/raw/d78376b82a18cec354cab32182e7c18af363f6f7/surefire-integration-tests/src/test/java/org/apache/maven/surefire/its/CheckTestNgListenersIT.java",
                "sha": "cc1bb74f9d2d119cd5648b4240c25e3136a2bcb4",
                "status": "added"
            },
            {
                "additions": 43,
                "blob_url": "https://github.com/apache/maven-surefire/blob/d78376b82a18cec354cab32182e7c18af363f6f7/surefire-integration-tests/src/test/resources/testng-listeners/pom.xml",
                "changes": 43,
                "contents_url": "https://api.github.com/repos/apache/maven-surefire/contents/surefire-integration-tests/src/test/resources/testng-listeners/pom.xml?ref=d78376b82a18cec354cab32182e7c18af363f6f7",
                "deletions": 0,
                "filename": "surefire-integration-tests/src/test/resources/testng-listeners/pom.xml",
                "patch": "@@ -0,0 +1,43 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<!--\n+  ~ Licensed to the Apache Software Foundation (ASF) under one\n+  ~ or more contributor license agreements.  See the NOTICE file\n+  ~ distributed with this work for additional information\n+  ~ regarding copyright ownership.  The ASF licenses this file\n+  ~ to you under the Apache License, Version 2.0 (the\n+  ~ \"License\"); you may not use this file except in compliance\n+  ~ with the License.  You may obtain a copy of the License at\n+  ~\n+  ~     http://www.apache.org/licenses/LICENSE-2.0\n+  ~\n+  ~ Unless required by applicable law or agreed to in writing,\n+  ~ software distributed under the License is distributed on an\n+  ~ \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+  ~ KIND, either express or implied.  See the License for the\n+  ~ specific language governing permissions and limitations\n+  ~ under the License.\n+  -->\n+\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\"\n+         xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+\t<modelVersion>4.0.0</modelVersion>\n+  \n+    <parent>\n+      <groupId>org.apache.maven.surefire</groupId>\n+      <artifactId>it-parent</artifactId>\n+      <version>1.0</version>\n+      <relativePath>../pom.xml</relativePath>\n+    </parent>\n+  \n+    <artifactId>testng-listeners</artifactId>\n+\t<version>1.0-SNAPSHOT</version>\n+\n+\t<dependencies>\n+\t\t<dependency>\n+\t\t\t<groupId>org.testng</groupId>\n+\t\t\t<artifactId>testng</artifactId>\n+\t\t\t<version>6.8.8</version>\n+\t\t</dependency>\n+  \t</dependencies>\n+</project>\n\\ No newline at end of file",
                "raw_url": "https://github.com/apache/maven-surefire/raw/d78376b82a18cec354cab32182e7c18af363f6f7/surefire-integration-tests/src/test/resources/testng-listeners/pom.xml",
                "sha": "e2482a210447605e40d38ff5c657919c0dda5a67",
                "status": "added"
            },
            {
                "additions": 83,
                "blob_url": "https://github.com/apache/maven-surefire/blob/d78376b82a18cec354cab32182e7c18af363f6f7/surefire-integration-tests/src/test/resources/testng-listeners/src/test/java/listeners/MarkAsFailureListener.java",
                "changes": 83,
                "contents_url": "https://api.github.com/repos/apache/maven-surefire/contents/surefire-integration-tests/src/test/resources/testng-listeners/src/test/java/listeners/MarkAsFailureListener.java?ref=d78376b82a18cec354cab32182e7c18af363f6f7",
                "deletions": 0,
                "filename": "surefire-integration-tests/src/test/resources/testng-listeners/src/test/java/listeners/MarkAsFailureListener.java",
                "patch": "@@ -0,0 +1,83 @@\n+package listeners;\n+\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+\n+import org.testng.IInvokedMethod;\n+import org.testng.IInvokedMethodListener;\n+import org.testng.ITestContext;\n+import org.testng.ITestListener;\n+import org.testng.ITestResult;\n+\n+/**\n+ * Created by etigwuu on 2014-04-26.\n+ */\n+public class MarkAsFailureListener implements ITestListener, IInvokedMethodListener {\n+\n+    @Override\n+    public void onTestStart(ITestResult result) {\n+\n+    }\n+\n+    @Override\n+    public void onTestSuccess(ITestResult result) {\n+\n+    }\n+\n+    public static int counter = 0;\n+    /**\n+     * I will be called twice in some condition!!!\n+     * @param result\n+     */\n+    @Override\n+    public void onTestFailure(ITestResult result) {\n+        System.out.println(++counter);\n+    }\n+\n+    @Override\n+    public void onTestSkipped(ITestResult result) {\n+\n+    }\n+\n+    @Override\n+    public void onTestFailedButWithinSuccessPercentage(ITestResult result) {\n+\n+    }\n+\n+    @Override\n+    public void onStart(ITestContext context) {\n+\n+    }\n+\n+    @Override\n+    public void onFinish(ITestContext context) {\n+\n+    }\n+\n+    @Override\n+    public void beforeInvocation(IInvokedMethod method, ITestResult testResult) {\n+\n+    }\n+\n+    @Override\n+    public void afterInvocation(IInvokedMethod method, ITestResult testResult) {\n+        testResult.setStatus(ITestResult.FAILURE);\n+    }\n+}",
                "raw_url": "https://github.com/apache/maven-surefire/raw/d78376b82a18cec354cab32182e7c18af363f6f7/surefire-integration-tests/src/test/resources/testng-listeners/src/test/java/listeners/MarkAsFailureListener.java",
                "sha": "a10460462cd01c93ce2cdb789b931530473bf31a",
                "status": "added"
            },
            {
                "additions": 35,
                "blob_url": "https://github.com/apache/maven-surefire/blob/d78376b82a18cec354cab32182e7c18af363f6f7/surefire-integration-tests/src/test/resources/testng-listeners/src/test/java/listeners/SimpleTest.java",
                "changes": 35,
                "contents_url": "https://api.github.com/repos/apache/maven-surefire/contents/surefire-integration-tests/src/test/resources/testng-listeners/src/test/java/listeners/SimpleTest.java?ref=d78376b82a18cec354cab32182e7c18af363f6f7",
                "deletions": 0,
                "filename": "surefire-integration-tests/src/test/resources/testng-listeners/src/test/java/listeners/SimpleTest.java",
                "patch": "@@ -0,0 +1,35 @@\n+package listeners;\n+\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+import org.testng.annotations.Listeners;\n+import org.testng.annotations.Test;\n+\n+/**\n+ * Created by etigwuu on 2014-04-26.\n+ */\n+@Listeners(MarkAsFailureListener.class)\n+public class SimpleTest {\n+\n+    @Test\n+    public void test1(){\n+        System.out.println(\"Hello world\");\n+    }\n+}",
                "raw_url": "https://github.com/apache/maven-surefire/raw/d78376b82a18cec354cab32182e7c18af363f6f7/surefire-integration-tests/src/test/resources/testng-listeners/src/test/java/listeners/SimpleTest.java",
                "sha": "f4204a1240a607be1975fbb68991555c8a26cc2d",
                "status": "added"
            },
            {
                "additions": 14,
                "blob_url": "https://github.com/apache/maven-surefire/blob/d78376b82a18cec354cab32182e7c18af363f6f7/surefire-providers/common-java5/src/main/java/org/apache/maven/surefire/report/PojoStackTraceWriter.java",
                "changes": 14,
                "contents_url": "https://api.github.com/repos/apache/maven-surefire/contents/surefire-providers/common-java5/src/main/java/org/apache/maven/surefire/report/PojoStackTraceWriter.java?ref=d78376b82a18cec354cab32182e7c18af363f6f7",
                "deletions": 0,
                "filename": "surefire-providers/common-java5/src/main/java/org/apache/maven/surefire/report/PojoStackTraceWriter.java",
                "patch": "@@ -57,17 +57,31 @@ public String writeTraceToString()\n \n     public String smartTrimmedStackTrace()\n     {\n+        if ( t == null )\n+        {\n+            return \"\";\n+        }\n+\n         SmartStackTraceParser parser = new SmartStackTraceParser( testClass, t, testMethod );\n         return parser.getString();\n     }\n \n     public String writeTrimmedTraceToString()\n     {\n+        if ( t == null )\n+        {\n+            return \"\";\n+        }\n+\n         return SmartStackTraceParser.innerMostWithFocusOnClass( t, testClass );\n     }\n \n     public SafeThrowable getThrowable()\n     {\n+        if ( t == null ) {\n+            return null;\n+        }\n+\n         return new SafeThrowable( t );\n     }\n }",
                "raw_url": "https://github.com/apache/maven-surefire/raw/d78376b82a18cec354cab32182e7c18af363f6f7/surefire-providers/common-java5/src/main/java/org/apache/maven/surefire/report/PojoStackTraceWriter.java",
                "sha": "9c70e6a2ea24b184b13120f28065db66140f1d4c",
                "status": "modified"
            }
        ],
        "message": "SUREFIRE-1077 avoid NPE in stacktrace parsing if a test fails without a Throwable as cause",
        "parent": "https://github.com/apache/maven-surefire/commit/86d78ad1ba72ed030ef582f6b22693f799ed1097",
        "repo": "maven-surefire",
        "unit_tests": [
            "PojoStackTraceWriterTest.java"
        ]
    },
    "maven-surefire_dcc84fe": {
        "bug_id": "maven-surefire_dcc84fe",
        "commit": "https://github.com/apache/maven-surefire/commit/dcc84fe8a65bf4380e72f765e92a824f7e74f10d",
        "file": [
            {
                "additions": 6,
                "blob_url": "https://github.com/apache/maven-surefire/blob/dcc84fe8a65bf4380e72f765e92a824f7e74f10d/maven-surefire-common/src/main/java/org/apache/maven/plugin/surefire/report/TestSetStats.java",
                "changes": 9,
                "contents_url": "https://api.github.com/repos/apache/maven-surefire/contents/maven-surefire-common/src/main/java/org/apache/maven/plugin/surefire/report/TestSetStats.java?ref=dcc84fe8a65bf4380e72f765e92a824f7e74f10d",
                "deletions": 3,
                "filename": "maven-surefire-common/src/main/java/org/apache/maven/plugin/surefire/report/TestSetStats.java",
                "patch": "@@ -21,14 +21,19 @@\n \n import java.text.NumberFormat;\n import java.util.ArrayList;\n+import java.util.Collection;\n import java.util.List;\n import java.util.Locale;\n+import java.util.Queue;\n+import java.util.concurrent.ConcurrentLinkedQueue;\n \n /**\n  * Maintains per-thread test result state. Not thread safe.\n  */\n public class TestSetStats\n {\n+    private final Queue<WrappedReportEntry> reportEntries = new ConcurrentLinkedQueue<WrappedReportEntry>();\n+\n     private final boolean trimStackTrace;\n \n     private final boolean plainFormat;\n@@ -49,8 +54,6 @@\n \n     private long elapsedForTestSet;\n \n-    private final List<WrappedReportEntry> reportEntries = new ArrayList<WrappedReportEntry>();\n-\n     public TestSetStats( boolean trimStackTrace, boolean plainFormat )\n     {\n         this.trimStackTrace = trimStackTrace;\n@@ -242,7 +245,7 @@ else if ( plainFormat && testResult.isSucceeded() )\n         return result;\n     }\n \n-    public List<WrappedReportEntry> getReportEntries()\n+    public Collection<WrappedReportEntry> getReportEntries()\n     {\n         return reportEntries;\n     }",
                "raw_url": "https://github.com/apache/maven-surefire/raw/dcc84fe8a65bf4380e72f765e92a824f7e74f10d/maven-surefire-common/src/main/java/org/apache/maven/plugin/surefire/report/TestSetStats.java",
                "sha": "95e92d4f91dea709cd818b2bea3f94d67be7da8e",
                "status": "modified"
            }
        ],
        "message": "[SUREFIRE-1114] NPE in TestSetStats. Concurrency issue with parallel methods on TestNG.",
        "parent": "https://github.com/apache/maven-surefire/commit/8ce08a7f552cba06ceec6383b7636b4e77d1e0b9",
        "repo": "maven-surefire",
        "unit_tests": [
            "TestSetStatsTest.java"
        ]
    },
    "maven-surefire_ef260bc": {
        "bug_id": "maven-surefire_ef260bc",
        "commit": "https://github.com/apache/maven-surefire/commit/ef260bc4155c7dceb808d6faf8e482de41ae0128",
        "file": [
            {
                "additions": 14,
                "blob_url": "https://github.com/apache/maven-surefire/blob/ef260bc4155c7dceb808d6faf8e482de41ae0128/surefire-integration-tests/src/test/java/org/apache/maven/surefire/its/Junit4IgnoreIT.java",
                "changes": 16,
                "contents_url": "https://api.github.com/repos/apache/maven-surefire/contents/surefire-integration-tests/src/test/java/org/apache/maven/surefire/its/Junit4IgnoreIT.java?ref=ef260bc4155c7dceb808d6faf8e482de41ae0128",
                "deletions": 2,
                "filename": "surefire-integration-tests/src/test/java/org/apache/maven/surefire/its/Junit4IgnoreIT.java",
                "patch": "@@ -29,14 +29,26 @@\n {\n     public Junit4IgnoreIT()\n     {\n-        super( \"/junit44-ignore\");\n+        super( \"/junit-ignore\");\n     }\n \n     public void testJunit4Ignore()\n         throws Exception\n     {\n         executeTest();\n         verifyErrorFreeLog();\n-        assertTestSuiteResults( 1, 0, 0, 1 );\n+        assertTestSuiteResults( 3, 0, 0, 3 );\n     }\n+\n+    public void testJunit47ParallelIgnore()\n+        throws Exception\n+    {\n+\n+        addGoal( \"-Djunit.version=4.8.1\" );\n+        addGoal( \"-Dsurefire.parallel=classes\" );\n+        executeTest();\n+        verifyErrorFreeLog();\n+        assertTestSuiteResults( 3, 0, 0, 3 );\n+    }\n+\n }",
                "raw_url": "https://github.com/apache/maven-surefire/raw/ef260bc4155c7dceb808d6faf8e482de41ae0128/surefire-integration-tests/src/test/java/org/apache/maven/surefire/its/Junit4IgnoreIT.java",
                "sha": "52a256901c310bf6d30f028b341ef9c1a9cf1532",
                "status": "modified"
            },
            {
                "additions": 11,
                "blob_url": "https://github.com/apache/maven-surefire/blob/ef260bc4155c7dceb808d6faf8e482de41ae0128/surefire-integration-tests/src/test/resources/junit-ignore/pom.xml",
                "changes": 15,
                "contents_url": "https://api.github.com/repos/apache/maven-surefire/contents/surefire-integration-tests/src/test/resources/junit-ignore/pom.xml?ref=ef260bc4155c7dceb808d6faf8e482de41ae0128",
                "deletions": 4,
                "filename": "surefire-integration-tests/src/test/resources/junit-ignore/pom.xml",
                "patch": "@@ -24,15 +24,20 @@\n   <modelVersion>4.0.0</modelVersion>\n \n   <groupId>org.apache.maven.plugins.surefire</groupId>\n-  <artifactId>junit44-ignore</artifactId>\n+  <artifactId>junit-ignore</artifactId>\n   <version>1.0-SNAPSHOT</version>\n   <name>Test of @Ignore annotation</name>\n \n+  <properties>\n+    <junit.version>4.4</junit.version>\n+    <surefire.parallel></surefire.parallel>\n+  </properties>\n+\n   <dependencies>\n     <dependency>\n       <groupId>junit</groupId>\n       <artifactId>junit</artifactId>\n-      <version>4.4</version>\n+      <version>${junit.version}</version>\n       <scope>test</scope>\n     </dependency>\n   </dependencies>\n@@ -50,9 +55,11 @@\n       <plugin>\n         <artifactId>maven-surefire-plugin</artifactId>\n         <version>${surefire.version}</version>\n+        <configuration>\n+          <parallel>${surefire.parallel}</parallel>\n+          <threadCount>3</threadCount>\n+        </configuration>\n       </plugin>\n-      \n     </plugins>\n   </build>\n-\n </project>",
                "previous_filename": "surefire-integration-tests/src/test/resources/junit44-ignore/pom.xml",
                "raw_url": "https://github.com/apache/maven-surefire/raw/ef260bc4155c7dceb808d6faf8e482de41ae0128/surefire-integration-tests/src/test/resources/junit-ignore/pom.xml",
                "sha": "c62fabdec16644795b72cd913bbcbd171df8286e",
                "status": "renamed"
            },
            {
                "additions": 3,
                "blob_url": "https://github.com/apache/maven-surefire/blob/ef260bc4155c7dceb808d6faf8e482de41ae0128/surefire-integration-tests/src/test/resources/junit-ignore/src/test/java/junit/ignore/BasicTest.java",
                "changes": 7,
                "contents_url": "https://api.github.com/repos/apache/maven-surefire/contents/surefire-integration-tests/src/test/resources/junit-ignore/src/test/java/junit/ignore/BasicTest.java?ref=ef260bc4155c7dceb808d6faf8e482de41ae0128",
                "deletions": 4,
                "filename": "surefire-integration-tests/src/test/resources/junit-ignore/src/test/java/junit/ignore/BasicTest.java",
                "patch": "@@ -1,11 +1,10 @@\n-package junit44.ignore;\n-import static org.hamcrest.core.Is.*;\n-import static org.hamcrest.core.IsNull.*;\n+package junit.ignore;\n import org.junit.Assert;\n-import org.junit.Test;\n import org.junit.Ignore;\n+import org.junit.Test;\n \n \n+@Ignore(\"ignore this test\")\n public class BasicTest\n {\n ",
                "previous_filename": "surefire-integration-tests/src/test/resources/junit44-ignore/src/test/java/junit44/ignore/BasicTest.java",
                "raw_url": "https://github.com/apache/maven-surefire/raw/ef260bc4155c7dceb808d6faf8e482de41ae0128/surefire-integration-tests/src/test/resources/junit-ignore/src/test/java/junit/ignore/BasicTest.java",
                "sha": "f894164cf8404c5c9e0e482ed1a4e60720ce0e64",
                "status": "renamed"
            },
            {
                "additions": 18,
                "blob_url": "https://github.com/apache/maven-surefire/blob/ef260bc4155c7dceb808d6faf8e482de41ae0128/surefire-integration-tests/src/test/resources/junit-ignore/src/test/java/junit/ignore/ClassLevelIgnore1Test.java",
                "changes": 18,
                "contents_url": "https://api.github.com/repos/apache/maven-surefire/contents/surefire-integration-tests/src/test/resources/junit-ignore/src/test/java/junit/ignore/ClassLevelIgnore1Test.java?ref=ef260bc4155c7dceb808d6faf8e482de41ae0128",
                "deletions": 0,
                "filename": "surefire-integration-tests/src/test/resources/junit-ignore/src/test/java/junit/ignore/ClassLevelIgnore1Test.java",
                "patch": "@@ -0,0 +1,18 @@\n+package junit.ignore;\n+\n+import org.junit.Assert;\n+import org.junit.Ignore;\n+import org.junit.Test;\n+\n+\n+@Ignore(\"ignore this test\")\n+public class ClassLevelIgnore1Test\n+{\n+\n+    @Test\n+    public void testIgnorable()\n+    {\n+        Assert.fail(\"you should have ignored me!\");\n+    }\n+\n+}",
                "raw_url": "https://github.com/apache/maven-surefire/raw/ef260bc4155c7dceb808d6faf8e482de41ae0128/surefire-integration-tests/src/test/resources/junit-ignore/src/test/java/junit/ignore/ClassLevelIgnore1Test.java",
                "sha": "fc908b069c2be4682885abce54684fb1408f025c",
                "status": "added"
            },
            {
                "additions": 18,
                "blob_url": "https://github.com/apache/maven-surefire/blob/ef260bc4155c7dceb808d6faf8e482de41ae0128/surefire-integration-tests/src/test/resources/junit-ignore/src/test/java/junit/ignore/ClassLevelIgnore2Test.java",
                "changes": 18,
                "contents_url": "https://api.github.com/repos/apache/maven-surefire/contents/surefire-integration-tests/src/test/resources/junit-ignore/src/test/java/junit/ignore/ClassLevelIgnore2Test.java?ref=ef260bc4155c7dceb808d6faf8e482de41ae0128",
                "deletions": 0,
                "filename": "surefire-integration-tests/src/test/resources/junit-ignore/src/test/java/junit/ignore/ClassLevelIgnore2Test.java",
                "patch": "@@ -0,0 +1,18 @@\n+package junit.ignore;\n+\n+import org.junit.Assert;\n+import org.junit.Ignore;\n+import org.junit.Test;\n+\n+\n+@Ignore(\"ignore this test\")\n+public class ClassLevelIgnore2Test\n+{\n+\n+    @Test\n+    public void testIgnorable()\n+    {\n+        Assert.fail(\"you should have ignored me!\");\n+    }\n+\n+}",
                "raw_url": "https://github.com/apache/maven-surefire/raw/ef260bc4155c7dceb808d6faf8e482de41ae0128/surefire-integration-tests/src/test/resources/junit-ignore/src/test/java/junit/ignore/ClassLevelIgnore2Test.java",
                "sha": "783b94b504392f3013c9b850c84de7fe7061bb41",
                "status": "added"
            },
            {
                "additions": 7,
                "blob_url": "https://github.com/apache/maven-surefire/blob/ef260bc4155c7dceb808d6faf8e482de41ae0128/surefire-providers/surefire-junit47/src/main/java/org/apache/maven/surefire/junitcore/JUnitCoreRunListener.java",
                "changes": 11,
                "contents_url": "https://api.github.com/repos/apache/maven-surefire/contents/surefire-providers/surefire-junit47/src/main/java/org/apache/maven/surefire/junitcore/JUnitCoreRunListener.java?ref=ef260bc4155c7dceb808d6faf8e482de41ae0128",
                "deletions": 4,
                "filename": "surefire-providers/surefire-junit47/src/main/java/org/apache/maven/surefire/junitcore/JUnitCoreRunListener.java",
                "patch": "@@ -19,11 +19,10 @@\n  * under the License.\n  */\n \n-import org.apache.maven.surefire.common.junit4.JUnit4RunListener;\n-import org.apache.maven.surefire.report.RunListener;\n-\n import java.util.ArrayList;\n import java.util.Map;\n+import org.apache.maven.surefire.common.junit4.JUnit4RunListener;\n+import org.apache.maven.surefire.report.RunListener;\n \n import org.junit.runner.Description;\n import org.junit.runner.Result;\n@@ -70,7 +69,7 @@ private void fillTestCountMap( Description description )\n         Class<?> itemTestClass = null;\n         for ( Description item : children )\n         {\n-            if ( item.isTest() )\n+            if ( item.isTest() && item.getMethodName() != null )\n             {\n                 testSet.incrementTestMethodCount();\n                 if ( itemTestClass == null )\n@@ -82,6 +81,10 @@ else if ( item.getChildren().size() > 0 )\n             {\n                 fillTestCountMap( item );\n             }\n+            else\n+            {\n+                classMethodCounts.put( item.getClassName(), testSet );\n+            }\n         }\n         if ( itemTestClass != null )\n         {",
                "raw_url": "https://github.com/apache/maven-surefire/raw/ef260bc4155c7dceb808d6faf8e482de41ae0128/surefire-providers/surefire-junit47/src/main/java/org/apache/maven/surefire/junitcore/JUnitCoreRunListener.java",
                "sha": "87ab5f58133d6a1d1b7064e16fdf50eb12462193",
                "status": "modified"
            }
        ],
        "message": "[SUREFIRE-744] NPE with multiple class-level ignores for parallel runner.\n\nMain patch by Aslak Knutsen, applied unmodified. Prefered to extend existing integration test over\nthe unit test included in the issue patch\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/surefire/trunk@1132734 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/maven-surefire/commit/36be234bf14aa1c44d1f25dd9eff613845d5763d",
        "repo": "maven-surefire",
        "unit_tests": [
            "JUnitCoreRunListenerTest.java"
        ]
    },
    "maven-surefire_fcc885b": {
        "bug_id": "maven-surefire_fcc885b",
        "commit": "https://github.com/apache/maven-surefire/commit/fcc885b6eaffc9609d0e8e02011c2f560d131311",
        "file": [
            {
                "additions": 16,
                "blob_url": "https://github.com/apache/maven-surefire/blob/fcc885b6eaffc9609d0e8e02011c2f560d131311/maven-surefire-common/src/main/java/org/apache/maven/plugin/surefire/AbstractSurefireMojo.java",
                "changes": 24,
                "contents_url": "https://api.github.com/repos/apache/maven-surefire/contents/maven-surefire-common/src/main/java/org/apache/maven/plugin/surefire/AbstractSurefireMojo.java?ref=fcc885b6eaffc9609d0e8e02011c2f560d131311",
                "deletions": 8,
                "filename": "maven-surefire-common/src/main/java/org/apache/maven/plugin/surefire/AbstractSurefireMojo.java",
                "patch": "@@ -375,21 +375,29 @@ protected StartupConfiguration createStartupConfiguration( ForkConfiguration for\n             throw new MojoExecutionException( \"Unable to generate test classpath: \" + e, e );\n         }\n \n-        getLog().debug( \"Test Classpath :\" );\n+        addClasspathElementsToClasspathConfiguration(classpathElements, classpathConfiguration);\n+        return new StartupConfiguration( providerName, classpathConfiguration, classLoaderConfiguration,\n+                                         forkConfiguration.isForking(), false, isRedirectTestOutputToFile() );\n+    }\n \n+    private void addClasspathElementsToClasspathConfiguration(List classpathElements, ClasspathConfiguration classpathConfiguration)\n+    {\n+        getLog().debug( \"Test classpath:\" );\n         for ( Iterator i = classpathElements.iterator(); i.hasNext(); )\n         {\n             String classpathElement = (String) i.next();\n-\n-            getLog().debug( \"  \" + classpathElement );\n-\n-            classpathConfiguration.addClasspathUrl( classpathElement );\n+            if ( classpathElement == null )\n+            {\n+                getLog().warn(\"The test classpath contains a null element.\");\n+            }\n+            else\n+            {\n+                getLog().debug( \"  \" + classpathElement );\n+                classpathConfiguration.addClasspathUrl( classpathElement );\n+            }\n         }\n-        return new StartupConfiguration( providerName, classpathConfiguration, classLoaderConfiguration,\n-                                         forkConfiguration.isForking(), false, isRedirectTestOutputToFile() );\n     }\n \n-\n     private boolean isSpecificTestSpecified()\n     {\n         return getTest() != null;",
                "raw_url": "https://github.com/apache/maven-surefire/raw/fcc885b6eaffc9609d0e8e02011c2f560d131311/maven-surefire-common/src/main/java/org/apache/maven/plugin/surefire/AbstractSurefireMojo.java",
                "sha": "24895b1c4927bb8353715047bcf81b6416b3e97b",
                "status": "modified"
            },
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/maven-surefire/blob/fcc885b6eaffc9609d0e8e02011c2f560d131311/surefire-booter/src/main/java/org/apache/maven/surefire/booter/Classpath.java",
                "changes": 4,
                "contents_url": "https://api.github.com/repos/apache/maven-surefire/contents/surefire-booter/src/main/java/org/apache/maven/surefire/booter/Classpath.java?ref=fcc885b6eaffc9609d0e8e02011c2f560d131311",
                "deletions": 2,
                "filename": "surefire-booter/src/main/java/org/apache/maven/surefire/booter/Classpath.java",
                "patch": "@@ -19,6 +19,8 @@\n  * under the License.\n  */\n \n+import org.apache.maven.surefire.util.UrlUtils;\n+\n import java.io.File;\n import java.net.MalformedURLException;\n import java.util.ArrayList;\n@@ -27,8 +29,6 @@\n import java.util.List;\n import java.util.Properties;\n \n-import org.apache.maven.surefire.util.UrlUtils;\n-\n /**\n  * An ordered set of classpath elements\n  *",
                "raw_url": "https://github.com/apache/maven-surefire/raw/fcc885b6eaffc9609d0e8e02011c2f560d131311/surefire-booter/src/main/java/org/apache/maven/surefire/booter/Classpath.java",
                "sha": "5ff5dd03999ddc632bcc9793adffa91de1e2b2f8",
                "status": "modified"
            },
            {
                "additions": 28,
                "blob_url": "https://github.com/apache/maven-surefire/blob/fcc885b6eaffc9609d0e8e02011c2f560d131311/surefire-booter/src/test/java/org/apache/maven/surefire/booter/ClasspathTest.java",
                "changes": 54,
                "contents_url": "https://api.github.com/repos/apache/maven-surefire/contents/surefire-booter/src/test/java/org/apache/maven/surefire/booter/ClasspathTest.java?ref=fcc885b6eaffc9609d0e8e02011c2f560d131311",
                "deletions": 26,
                "filename": "surefire-booter/src/test/java/org/apache/maven/surefire/booter/ClasspathTest.java",
                "patch": "@@ -82,33 +82,7 @@ public void testSetForkProperties()\n         assertEquals( DUMMY_URL_2, properties.get( \"test1\" ) );\n     }\n \n-    public void testShouldThrowIllegalArgumentExceptionWhenNullIsAddedAsClassPathElementUrl()\n-        throws Exception\n-    {\n-        Classpath classpath = new Classpath();\n-        try\n-        {\n-            classpath.addClassPathElementUrl( null );\n-            fail( \"IllegalArgumentException not thrown.\" );\n-        }\n-        catch ( IllegalArgumentException expected )\n-        {\n-        }\n-    }\n \n-    public void testShouldNotAddNullAsClassPathElementUrl()\n-        throws Exception\n-    {\n-        Classpath classpath = new Classpath();\n-        try\n-        {\n-            classpath.addClassPathElementUrl( null );\n-        }\n-        catch ( IllegalArgumentException ignored )\n-        {\n-        }\n-        assertEmptyClasspath( classpath );\n-    }\n \n     public void testShouldJoinTwoNullClasspaths()\n     {\n@@ -183,4 +157,32 @@ private Classpath createClasspathWithTwoElements()\n         classpath.addClassPathElementUrl( DUMMY_URL_2 );\n         return classpath;\n     }\n+\n+    public void testShouldThrowIllegalArgumentExceptionWhenNullIsAddedAsClassPathElementUrl()\n+        throws Exception\n+    {\n+        Classpath classpath = new Classpath();\n+        try\n+        {\n+            classpath.addClassPathElementUrl( null );\n+            fail(\"IllegalArgumentException not thrown.\");\n+        }\n+        catch (IllegalArgumentException expected)\n+        {\n+        }\n+    }\n+\n+    public void testShouldNotAddNullAsClassPathElementUrl()\n+        throws Exception\n+    {\n+        Classpath classpath = new Classpath();\n+        try\n+        {\n+            classpath.addClassPathElementUrl( null );\n+        }\n+        catch (IllegalArgumentException ignored)\n+        {\n+        }\n+        assertEmptyClasspath( classpath );\n+    }\n }",
                "raw_url": "https://github.com/apache/maven-surefire/raw/fcc885b6eaffc9609d0e8e02011c2f560d131311/surefire-booter/src/test/java/org/apache/maven/surefire/booter/ClasspathTest.java",
                "sha": "7b02ba305e17a2cea208bd15eb819365212e7bcf",
                "status": "modified"
            },
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/maven-surefire/blob/fcc885b6eaffc9609d0e8e02011c2f560d131311/surefire-integration-tests/src/test/resources/additional-classpath/pom.xml",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/maven-surefire/contents/surefire-integration-tests/src/test/resources/additional-classpath/pom.xml?ref=fcc885b6eaffc9609d0e8e02011c2f560d131311",
                "deletions": 0,
                "filename": "surefire-integration-tests/src/test/resources/additional-classpath/pom.xml",
                "patch": "@@ -36,6 +36,8 @@\n         <configuration>\n           <additionalClasspathElements>\n             <additionalClasspathElement>${basedir}/extraResource</additionalClasspathElement>\n+            <additionalClasspathElement>${abc}</additionalClasspathElement><!-- SUREFIRE-694 -->\n+            <additionalClasspathElement></additionalClasspathElement><!-- SUREFIRE-694 -->\n           </additionalClasspathElements>\n         </configuration>\n       </plugin>",
                "raw_url": "https://github.com/apache/maven-surefire/raw/fcc885b6eaffc9609d0e8e02011c2f560d131311/surefire-integration-tests/src/test/resources/additional-classpath/pom.xml",
                "sha": "6356b9be823ce8a8f558c748786ab971b0cf788c",
                "status": "modified"
            }
        ],
        "message": "[SUREFIRE-694] NPE On empty additionalClassPath element\n\nPatch by Stefan Birkner, applied with merge\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/surefire/trunk@1069066 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/maven-surefire/commit/bcef96efb159d88f4d3896da60eaf94687a6e0f9",
        "repo": "maven-surefire",
        "unit_tests": [
            "AbstractSurefireMojoTest.java",
            "ClasspathTest.java"
        ]
    },
    "maven-surefire_ff463e0": {
        "bug_id": "maven-surefire_ff463e0",
        "commit": "https://github.com/apache/maven-surefire/commit/ff463e0758ee69eae8a9f78ed0feb8410256f803",
        "file": [
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/maven-surefire/blob/ff463e0758ee69eae8a9f78ed0feb8410256f803/surefire-providers/common-junit48/src/main/java/org/apache/maven/surefire/common/junit48/FilterFactory.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/maven-surefire/contents/surefire-providers/common-junit48/src/main/java/org/apache/maven/surefire/common/junit48/FilterFactory.java?ref=ff463e0758ee69eae8a9f78ed0feb8410256f803",
                "deletions": 1,
                "filename": "surefire-providers/common-junit48/src/main/java/org/apache/maven/surefire/common/junit48/FilterFactory.java",
                "patch": "@@ -170,7 +170,7 @@ public GroupMatcherCategoryFilter( GroupMatcher included, GroupMatcher excluded\n         public boolean shouldRun( Description description )\n         {\n             return shouldRun( description,\n-                              ( description.getMethodName() == null ? null\n+                              ( ( description.getMethodName() == null || description.getTestClass() == null ) ? null\n                                               : Description.createSuiteDescription( description.getTestClass() ) ) );\n         }\n ",
                "raw_url": "https://github.com/apache/maven-surefire/raw/ff463e0758ee69eae8a9f78ed0feb8410256f803/surefire-providers/common-junit48/src/main/java/org/apache/maven/surefire/common/junit48/FilterFactory.java",
                "sha": "2386c8da3bb97e098e2a2a9d94b9a690b48c5b4e",
                "status": "modified"
            }
        ],
        "message": "[SUREFIRE-990] prevent NPE in case the testClass in a Description is null",
        "parent": "https://github.com/apache/maven-surefire/commit/8315562ededdbf80f059f843fa34e793b6b25ac7",
        "repo": "maven-surefire",
        "unit_tests": [
            "FilterFactoryTest.java"
        ]
    }
}