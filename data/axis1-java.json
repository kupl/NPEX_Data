{
    "axis1-java_01eb62a": {
        "bug_id": "axis1-java_01eb62a",
        "commit": "https://github.com/apache/axis1-java/commit/01eb62a967397097e17d2f5f376b5c534bc6106f",
        "file": [
            {
                "additions": 15,
                "blob_url": "https://github.com/apache/axis1-java/blob/01eb62a967397097e17d2f5f376b5c534bc6106f/src/org/apache/axis/utils/Admin.java",
                "changes": 27,
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/utils/Admin.java?ref=01eb62a967397097e17d2f5f376b5c534bc6106f",
                "deletions": 12,
                "filename": "src/org/apache/axis/utils/Admin.java",
                "patch": "@@ -279,22 +279,25 @@ public Document process(MessageContext msgContext, Element root)\n             /** For now, though - make sure we can only admin from our own\n              * IP, unless the remoteAdmin option is set.\n              */\n-            String remoteAdmin = (String)msgContext.getServiceHandler().\n+            Handler serviceHandler = msgContext.getServiceHandler();\n+            if (serviceHandler != null) {\n+                String remoteAdmin = (String)serviceHandler.\n                                             getOption(\"enableRemoteAdmin\");\n-            if ((remoteAdmin == null) ||\n-                !remoteAdmin.equals(\"true\")) {\n-                String remoteIP =\n+                if ((remoteAdmin == null) ||\n+                    !remoteAdmin.equals(\"true\")) {\n+                    String remoteIP =\n                             msgContext.getStrProp(Constants.MC_REMOTE_ADDR);\n-                if (remoteIP != null) {\n-                    if (!remoteIP.equals(\"127.0.0.1\")) {\n-                        InetAddress myAddr = InetAddress.getLocalHost();\n-                        InetAddress remoteAddr =\n+                    if (remoteIP != null) {\n+                        if (!remoteIP.equals(\"127.0.0.1\")) {\n+                            InetAddress myAddr = InetAddress.getLocalHost();\n+                            InetAddress remoteAddr =\n                                             InetAddress.getByName(remoteIP);\n                         \n-                        if (!myAddr.equals(remoteAddr))\n-                            throw new AxisFault(\"Server.Unauthorized\",\n-                                \"Remote admin access is not allowed! \",\n-                                null, null);\n+                            if (!myAddr.equals(remoteAddr))\n+                                throw new AxisFault(\"Server.Unauthorized\",\n+                                    \"Remote admin access is not allowed! \",\n+                                    null, null);\n+                        }\n                     }\n                 }\n             }",
                "raw_url": "https://github.com/apache/axis1-java/raw/01eb62a967397097e17d2f5f376b5c534bc6106f/src/org/apache/axis/utils/Admin.java",
                "sha": "cff0a3c55425ada1dc9d5fd44940562474030cbf",
                "status": "modified"
            }
        ],
        "message": "Fix potential NPE.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis1/trunk/java@252193 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/axis1-java/commit/cc2f20ae2c796b6cf0cd78883f4344b548e01d97",
        "repo": "axis1-java",
        "unit_tests": [
            "AdminTest.java"
        ]
    },
    "axis1-java_0721cd2": {
        "bug_id": "axis1-java_0721cd2",
        "commit": "https://github.com/apache/axis1-java/commit/0721cd2e14100cbfd4c7dafab7aa03f554110be4",
        "file": [
            {
                "additions": 4,
                "blob_url": "https://github.com/apache/axis1-java/blob/0721cd2e14100cbfd4c7dafab7aa03f554110be4/src/org/apache/axis/message/MessageElement.java",
                "changes": 6,
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/message/MessageElement.java?ref=0721cd2e14100cbfd4c7dafab7aa03f554110be4",
                "deletions": 2,
                "filename": "src/org/apache/axis/message/MessageElement.java",
                "patch": "@@ -620,8 +620,10 @@ public final void output(SerializationContext context) throws Exception\n          * whatever encoding style is in scope....\n          */ \n         if (encodingStyle != null) {\n-            SOAPConstants soapConstants = context.getMessageContext().\n-                                                        getSOAPConstants();\n+            MessageContext mc = context.getMessageContext();\n+            SOAPConstants soapConstants = (mc != null) ?\n+                                            mc.getSOAPConstants() :\n+                                            SOAPConstants.SOAP11_CONSTANTS;\n             if (parent == null) {\n                 // don't emit an encoding style if its \"\" (literal)\n                 if (!encodingStyle.equals(\"\")) { ",
                "raw_url": "https://github.com/apache/axis1-java/raw/0721cd2e14100cbfd4c7dafab7aa03f554110be4/src/org/apache/axis/message/MessageElement.java",
                "sha": "daa12845f6df9aeee5a64bfb964f33a38be8bd95",
                "status": "modified"
            }
        ],
        "message": "Fix NPE in weird cases where a SerializationContext doesn't have an\nassociated MessageContext (testing, mostly).\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis1/trunk/java@253857 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/axis1-java/commit/b15a908001570d480f4d77da33e11e5fdb24199f",
        "repo": "axis1-java",
        "unit_tests": [
            "TestMessageElement.java"
        ]
    },
    "axis1-java_0895bf0": {
        "bug_id": "axis1-java_0895bf0",
        "commit": "https://github.com/apache/axis1-java/commit/0895bf0eac090e22dd7f6e0de0d3e4b2c020f098",
        "file": [
            {
                "additions": 4,
                "blob_url": "https://github.com/apache/axis1-java/blob/0895bf0eac090e22dd7f6e0de0d3e4b2c020f098/src/org/apache/axis/message/MessageElement.java",
                "changes": 6,
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/message/MessageElement.java?ref=0895bf0eac090e22dd7f6e0de0d3e4b2c020f098",
                "deletions": 2,
                "filename": "src/org/apache/axis/message/MessageElement.java",
                "patch": "@@ -620,8 +620,10 @@ public final void output(SerializationContext context) throws Exception\n          * whatever encoding style is in scope....\n          */ \n         if (encodingStyle != null) {\n-            SOAPConstants soapConstants = context.getMessageContext().\n-                                                        getSOAPConstants();\n+            MessageContext mc = context.getMessageContext();\n+            SOAPConstants soapConstants = (mc != null) ?\n+                                            mc.getSOAPConstants() :\n+                                            SOAPConstants.SOAP11_CONSTANTS;\n             if (parent == null) {\n                 // don't emit an encoding style if its \"\" (literal)\n                 if (!encodingStyle.equals(\"\")) { ",
                "raw_url": "https://github.com/apache/axis1-java/raw/0895bf0eac090e22dd7f6e0de0d3e4b2c020f098/src/org/apache/axis/message/MessageElement.java",
                "sha": "daa12845f6df9aeee5a64bfb964f33a38be8bd95",
                "status": "modified"
            }
        ],
        "message": "Fix NPE in weird cases where a SerializationContext doesn't have an\nassociated MessageContext (testing, mostly).\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis1/trunk/java@246784 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/axis1-java/commit/b67d0b30cc0ccded69b6407c6ed46b6ef5573706",
        "repo": "axis1-java",
        "unit_tests": [
            "TestMessageElement.java"
        ]
    },
    "axis1-java_33ecf56": {
        "bug_id": "axis1-java_33ecf56",
        "commit": "https://github.com/apache/axis1-java/commit/33ecf56d16ac7806599959f2f66a3ad66dbac1af",
        "file": [
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/axis1-java/blob/33ecf56d16ac7806599959f2f66a3ad66dbac1af/src/org/apache/axis/message/SOAPHeader.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/message/SOAPHeader.java?ref=33ecf56d16ac7806599959f2f66a3ad66dbac1af",
                "deletions": 1,
                "filename": "src/org/apache/axis/message/SOAPHeader.java",
                "patch": "@@ -94,7 +94,7 @@\n     SOAPHeader(SOAPEnvelope env, SOAPConstants soapConsts) {\n         super(Constants.ELEM_HEADER,\n               Constants.NS_PREFIX_SOAP_ENV,\n-              soapConsts.getEnvelopeURI());\n+              soapConsts != null? soapConsts.getEnvelopeURI() : SOAPConstants.SOAP11_CONSTANTS.getEnvelopeURI());\n         soapConstants = soapConsts;\n         try {\n             setParentElement(env);",
                "raw_url": "https://github.com/apache/axis1-java/raw/33ecf56d16ac7806599959f2f66a3ad66dbac1af/src/org/apache/axis/message/SOAPHeader.java",
                "sha": "bfc61828efd0604afd7386ecb73b27cbf8a3c190",
                "status": "modified"
            }
        ],
        "message": "Prevent NPE\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis1/trunk/java@256088 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/axis1-java/commit/3cc028b04da2ce3eb947ed8e7cc759d2be040b7e",
        "repo": "axis1-java",
        "unit_tests": [
            "TestSOAPHeader.java"
        ]
    },
    "axis1-java_3a4360e": {
        "bug_id": "axis1-java_3a4360e",
        "commit": "https://github.com/apache/axis1-java/commit/3a4360e9bba592601aa1cf2d446ade5e278258ee",
        "file": [
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/axis1-java/blob/3a4360e9bba592601aa1cf2d446ade5e278258ee/build.xml",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/build.xml?ref=3a4360e9bba592601aa1cf2d446ade5e278258ee",
                "deletions": 1,
                "filename": "build.xml",
                "patch": "@@ -352,7 +352,7 @@ Copyright:\n   <!-- =================================================================== -->\n   <!-- Creates the binary distribution                                     -->\n   <!-- =================================================================== -->\n-  <target name=\"dist\" depends=\"compile, junit, samples, javadocs\" >\n+  <target name=\"dist\" depends=\"compile, javadocs, samples, junit\" >\n     <mkdir dir=\"${dist.dir}\"/>\n     <mkdir dir=\"${dist.dir}/docs\"/>\n     <mkdir dir=\"${dist.dir}/docs/apiDocs\"/>",
                "raw_url": "https://github.com/apache/axis1-java/raw/3a4360e9bba592601aa1cf2d446ade5e278258ee/build.xml",
                "sha": "cfa78eb315a6e87f8637b97a4b7187e467af32ee",
                "status": "modified"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/axis1-java/blob/3a4360e9bba592601aa1cf2d446ade5e278258ee/src/org/apache/axis/utils/Admin.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/utils/Admin.java?ref=3a4360e9bba592601aa1cf2d446ade5e278258ee",
                "deletions": 1,
                "filename": "src/org/apache/axis/utils/Admin.java",
                "patch": "@@ -383,7 +383,7 @@ public Document process(MessageContext msgContext, Element root)\n         AxisEngine engine = msgContext.getAxisEngine();\n         \n         // If this is WSDD, process it correctly.\n-        if (rootNS.equals(WSDDConstants.WSDD_NS)) {\n+        if (rootNS != null && rootNS.equals(WSDDConstants.WSDD_NS)) {\n             return processWSDD(engine, root);\n         }\n ",
                "raw_url": "https://github.com/apache/axis1-java/raw/3a4360e9bba592601aa1cf2d446ade5e278258ee/src/org/apache/axis/utils/Admin.java",
                "sha": "2db593def8632b03e3a725dbe36e2009ca31c1d9",
                "status": "modified"
            }
        ],
        "message": "Fix NPE.\nChange order of build - seemed odd that we ran junit before we built\neverything.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis1/trunk/java@252785 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/axis1-java/commit/a87914989c48837bd646567db9eb63245f75962a",
        "repo": "axis1-java",
        "unit_tests": [
            "AdminTest.java"
        ]
    },
    "axis1-java_49fd755": {
        "bug_id": "axis1-java_49fd755",
        "commit": "https://github.com/apache/axis1-java/commit/49fd755fa00ac64425a7100d10bcd16759d2930b",
        "file": [
            {
                "additions": 12,
                "blob_url": "https://github.com/apache/axis1-java/blob/49fd755fa00ac64425a7100d10bcd16759d2930b/src/org/apache/axis/description/ServiceDesc.java",
                "changes": 22,
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/description/ServiceDesc.java?ref=49fd755fa00ac64425a7100d10bcd16759d2930b",
                "deletions": 10,
                "filename": "src/org/apache/axis/description/ServiceDesc.java",
                "patch": "@@ -657,16 +657,18 @@ private void syncOperationToClass(OperationDesc oper, Class implClass)\n                             paramClass = tm.getClassForQName(param.getTypeQName());\n                         }\n \n-                        // This is a match if the paramClass is somehow\n-                        // convertable to the \"real\" parameter type.  If not,\n-                        // break out of this loop.\n-                        if (!JavaUtils.isConvertable(paramClass, actualType)) {\n-                            break;\n-                        }\n-                        \n-                        if (!actualType.isAssignableFrom(paramClass)) {\n-                            // This doesn't fit without conversion\n-                            conversionNecessary = true;\n+                        if (paramClass != null) {\n+                            // This is a match if the paramClass is somehow\n+                            // convertable to the \"real\" parameter type.  If not,\n+                            // break out of this loop.\n+                            if (!JavaUtils.isConvertable(paramClass, actualType)) {\n+                                break;\n+                            }\n+                            \n+                            if (!actualType.isAssignableFrom(paramClass)) {\n+                                // This doesn't fit without conversion\n+                                conversionNecessary = true;\n+                            }\n                         }\n                     }\n                     // In all scenarios the ParameterDesc javaType is set to",
                "raw_url": "https://github.com/apache/axis1-java/raw/49fd755fa00ac64425a7100d10bcd16759d2930b/src/org/apache/axis/description/ServiceDesc.java",
                "sha": "0f82326b9c1914680d74a6a0033be3be3f81563f",
                "status": "modified"
            }
        ],
        "message": "Prevent NPE in case there are problems finding the paramClass\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis1/trunk/java@256207 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/axis1-java/commit/c55ef243d5139650e8fc5526a7cfcef1ac23ccbe",
        "repo": "axis1-java",
        "unit_tests": [
            "TestServiceDesc.java"
        ]
    },
    "axis1-java_70bbea3": {
        "bug_id": "axis1-java_70bbea3",
        "commit": "https://github.com/apache/axis1-java/commit/70bbea364ef8b7675759f7ab51dd80fefb12249b",
        "file": [
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/axis1-java/blob/70bbea364ef8b7675759f7ab51dd80fefb12249b/samples/transport/FileTest.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/samples/transport/FileTest.java?ref=70bbea364ef8b7675759f7ab51dd80fefb12249b",
                "deletions": 1,
                "filename": "samples/transport/FileTest.java",
                "patch": "@@ -43,7 +43,7 @@ public static void main(String args[]) throws Exception {\n   \n     call.set(Transport.USER, opts.getUser() );\n     call.set(Transport.PASSWORD, opts.getPassword() );\n-    call.setTransportRequest( \"FileSender\" );\n+    call.setTransport( new FileTransport() );\n   \n     Float res = new Float(0.0F);\n     res = (Float) call.invoke( \"urn:xmltoday-delayed-quotes\",",
                "raw_url": "https://github.com/apache/axis1-java/raw/70bbea364ef8b7675759f7ab51dd80fefb12249b/samples/transport/FileTest.java",
                "sha": "ff6d2ff36e56c18ddb058fe861a16bf16315202e",
                "status": "modified"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/axis1-java/blob/70bbea364ef8b7675759f7ab51dd80fefb12249b/samples/transport/client_deploy.xml",
                "changes": 1,
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/samples/transport/client_deploy.xml?ref=70bbea364ef8b7675759f7ab51dd80fefb12249b",
                "deletions": 0,
                "filename": "samples/transport/client_deploy.xml",
                "patch": "@@ -6,4 +6,5 @@\n \n <deploy>\n   <handler name=\"FileSender\" class=\"samples.transport.FileSender\" />\n+  <transport name=\"FileTransport\" pivot=\"FileSender\"/>\n </deploy>",
                "raw_url": "https://github.com/apache/axis1-java/raw/70bbea364ef8b7675759f7ab51dd80fefb12249b/samples/transport/client_deploy.xml",
                "sha": "660df98fee8e58de0fcfe06285fb96a14fcf93e5",
                "status": "modified"
            },
            {
                "additions": 7,
                "blob_url": "https://github.com/apache/axis1-java/blob/70bbea364ef8b7675759f7ab51dd80fefb12249b/samples/transport/tcp/AdminClient.java",
                "changes": 8,
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/samples/transport/tcp/AdminClient.java?ref=70bbea364ef8b7675759f7ab51dd80fefb12249b",
                "deletions": 1,
                "filename": "samples/transport/tcp/AdminClient.java",
                "patch": "@@ -61,15 +61,21 @@\n import java.net.URL;\n \n /**\n- * An admin client object, specific to HTTP.\n+ * An admin client object, specific to TCP in that it sets\n+ * the TCP transport up.\n  *\n  * @author Rob Jellinghaus (robj@unrealities.com)\n  * @author Doug Davis (dug@us.ibm.com)\n+ * @author Glen Daniels (gdaniels@macromedia.com)\n  */\n \n public class AdminClient extends org.apache.axis.client.AdminClient {\n \n     public static void main(String args[]) {\n+        /** !!! This shouldn't be hardcoded....\n+         */\n+        ServiceClient.setDefaultTransport(new TCPTransport(\"localhost\", \"8080\"));\n+        \n         try {\n             org.apache.axis.client.AdminClient.main(args);\n         }",
                "raw_url": "https://github.com/apache/axis1-java/raw/70bbea364ef8b7675759f7ab51dd80fefb12249b/samples/transport/tcp/AdminClient.java",
                "sha": "9fc9ba832f2ae6634e513f7d3ba6f783882b4210",
                "status": "modified"
            },
            {
                "additions": 7,
                "blob_url": "https://github.com/apache/axis1-java/blob/70bbea364ef8b7675759f7ab51dd80fefb12249b/samples/transport/tcp/TCPListener.java",
                "changes": 14,
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/samples/transport/tcp/TCPListener.java?ref=70bbea364ef8b7675759f7ab51dd80fefb12249b",
                "deletions": 7,
                "filename": "samples/transport/tcp/TCPListener.java",
                "patch": "@@ -75,8 +75,7 @@\n  */\n public class TCPListener implements Runnable {\n     // These have default values.\n-    private String transportReqName = \"TCP.request\";\n-    private String transportRespName = \"TCP.response\";\n+    private String transportName = \"TCPTransport\";\n     \n     private static final String AXIS_ENGINE = \"AxisEngine\" ;\n     \n@@ -151,10 +150,12 @@ public void run () {\n                 HandlerRegistry hr = engine.getHandlerRegistry();\n                 HandlerRegistry sr = engine.getServiceRegistry();\n                 // add the TCPSender\n-                hr.add(\"TCPSender\", new TCPSender());\n+                //hr.add(\"TCPSender\", new TCPSender());\n                 \n-                SimpleChain c = new SimpleChain();\n-                hr.add( transportReqName, c );\n+                SimpleTargetedChain c = new SimpleTargetedChain();\n+                c.setPivotHandler(new TCPSender());\n+                \n+                engine.deployTransport(transportName, c);\n             }\n             \n             /* Place the Request message in the MessagContext object - notice */\n@@ -233,8 +234,7 @@ public void run () {\n             \n             /* Set the Transport Specific Request/Response chains IDs */\n             /******************************************************/\n-            msgContext.setProperty(MessageContext.TRANS_REQUEST , transportReqName );\n-            msgContext.setProperty(MessageContext.TRANS_RESPONSE, transportRespName );\n+            msgContext.setTransportName(transportName);\n             \n             try {\n                 /* Invoke the Axis engine... */",
                "raw_url": "https://github.com/apache/axis1-java/raw/70bbea364ef8b7675759f7ab51dd80fefb12249b/samples/transport/tcp/TCPListener.java",
                "sha": "da7b5dffb28f90943cccc260c71aede4d4f811c6",
                "status": "modified"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/axis1-java/blob/70bbea364ef8b7675759f7ab51dd80fefb12249b/samples/transport/tcp/TCPTransport.java",
                "changes": 1,
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/samples/transport/tcp/TCPTransport.java?ref=70bbea364ef8b7675759f7ab51dd80fefb12249b",
                "deletions": 0,
                "filename": "samples/transport/tcp/TCPTransport.java",
                "patch": "@@ -106,6 +106,7 @@ public void setupMessageContext (MessageContext mc, ServiceClient serv, AxisEngi\n         if (port != null) serv.set(PORT, port);\n         String url = \"http://\"+serv.get(HOST)+\":\"+serv.get(PORT);\n         \n+        Debug.Print(4, \"TCPTransport set URL to '\" + url + \"'\");\n         mc.setProperty(MessageContext.TRANS_URL, url);\n     }\n }",
                "raw_url": "https://github.com/apache/axis1-java/raw/70bbea364ef8b7675759f7ab51dd80fefb12249b/samples/transport/tcp/TCPTransport.java",
                "sha": "6c86fc3de6e9addb308de5f7d3581148ecbc6edc",
                "status": "modified"
            },
            {
                "additions": 7,
                "blob_url": "https://github.com/apache/axis1-java/blob/70bbea364ef8b7675759f7ab51dd80fefb12249b/samples/transport/tcp/client_deploy.xml",
                "changes": 7,
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/samples/transport/tcp/client_deploy.xml?ref=70bbea364ef8b7675759f7ab51dd80fefb12249b",
                "deletions": 0,
                "filename": "samples/transport/tcp/client_deploy.xml",
                "patch": "@@ -0,0 +1,7 @@\n+<m:deploy xmlns:m=\"AdminService\">\n+ <handler name=\"TCPSender\" class=\"samples.transport.tcp.TCPSender\"/>\n+ <handler name=\"LogIt\" class=\"org.apache.axis.handlers.LogMessage\">\n+  <option name=\"message\" value=\"Hey, I'm here!\"/>\n+ </handler>\n+ <transport name=\"tcp\" pivot=\"TCPSender\" request=\"LogIt\"/>\n+</m:deploy>",
                "raw_url": "https://github.com/apache/axis1-java/raw/70bbea364ef8b7675759f7ab51dd80fefb12249b/samples/transport/tcp/client_deploy.xml",
                "sha": "f232c6d23038a93a37352a8f4033b860f7163317",
                "status": "added"
            },
            {
                "additions": 63,
                "blob_url": "https://github.com/apache/axis1-java/blob/70bbea364ef8b7675759f7ab51dd80fefb12249b/src/org/apache/axis/AxisEngine.java",
                "changes": 66,
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/AxisEngine.java?ref=70bbea364ef8b7675759f7ab51dd80fefb12249b",
                "deletions": 3,
                "filename": "src/org/apache/axis/AxisEngine.java",
                "patch": "@@ -87,6 +87,8 @@\n     protected HandlerRegistry _serviceRegistry;\n     protected String _serviceRegFilename;\n     \n+    protected String _transportRegFilename;\n+    \n     private boolean readRegistryFiles = true;\n     private boolean dontSaveYet = false;\n     \n@@ -155,14 +157,17 @@ public AxisEngine(HandlerRegistry handlers, HandlerRegistry services)\n      * @param handlerRegFilename the name of the Handler registry file.\n      * @param serviceRegFilename the name of the Service registry file.\n      */\n-    public AxisEngine(String handlerRegFilename, String serviceRegFilename)\n+    public AxisEngine(String handlerRegFilename,\n+                      String serviceRegFilename,\n+                      String transportRegFilename)\n     {\n         this();\n         setHandlerRegistry(new SupplierRegistry());\n         setServiceRegistry(new SupplierRegistry());\n         \n         _handlerRegFilename = handlerRegFilename;\n         _serviceRegFilename = serviceRegFilename;\n+        _transportRegFilename = transportRegFilename;\n         \n         init();\n     }\n@@ -302,6 +307,37 @@ private void initializeServices()\n     \n     public void initializeTransports()\n     {\n+      if (!readRegistryFiles)\n+        return;\n+      \n+      dontSaveYet = true;\n+      try {\n+        FileInputStream    fis = new FileInputStream(_transportRegFilename);\n+        \n+        Document doc = XMLUtils.newDocument(fis);\n+        \n+        Element root = doc.getDocumentElement();\n+        \n+        NodeList list = root.getChildNodes();\n+        for (int i = 0; i < list.getLength(); i++) {\n+          if (!(list.item(i) instanceof Element))\n+            continue;\n+          Element elem = (Element)list.item(i);\n+          Admin.registerTransport(elem, this);\n+        }\n+        \n+        fis.close();\n+        return;\n+      }\n+      catch( Exception e ) {\n+        if ( !(e instanceof FileNotFoundException) ) {\n+          e.printStackTrace( System.err );\n+        }\n+      } finally {\n+        dontSaveYet = false;\n+      }\n+\n+      Debug.Print(2, \"Deploying default transports...\");\n       deployDefaultTransports();\n     }\n \n@@ -348,7 +384,8 @@ public void saveHandlerRegistry()\n       try {\n         FileOutputStream fos = new FileOutputStream(_handlerRegFilename);\n         Document doc = XMLUtils.newDocument();\n-        Element el = Admin.list(doc, this, false);\n+        Element el = doc.createElement(\"handlers\");\n+        Admin.list(el, getHandlerRegistry());\n         doc.appendChild(el);\n         XMLUtils.DocumentToStream(doc, fos);\n         fos.close();\n@@ -365,7 +402,26 @@ public void saveServiceRegistry()\n       try {\n         FileOutputStream fos = new FileOutputStream(_serviceRegFilename);\n         Document doc = XMLUtils.newDocument();\n-        Element el = Admin.list(doc, this, true);\n+        Element el = doc.createElement(\"services\");\n+        Admin.list(el, getServiceRegistry());\n+        doc.appendChild(el);\n+        XMLUtils.DocumentToStream(doc, fos);\n+        fos.close();\n+      } catch (Exception e) {\n+        e.printStackTrace();\n+      }\n+    }\n+    \n+    public void saveTransportRegistry()\n+    {\n+      if (dontSaveYet || (_transportRegFilename == null))\n+        return;\n+      \n+      try {\n+        FileOutputStream fos = new FileOutputStream(_transportRegFilename);\n+        Document doc = XMLUtils.newDocument();\n+        Element el = doc.createElement(\"transports\"); \n+        Admin.list(el, getTransportRegistry());\n         doc.appendChild(el);\n         XMLUtils.DocumentToStream(doc, fos);\n         fos.close();\n@@ -451,7 +507,9 @@ public void undeployService(String key)\n      */\n     public void deployTransport(String key, Handler transport)\n     {\n+        transport.setName(key);\n         transportRegistry.add(key, transport);\n+        saveTransportRegistry();\n     }\n     \n     /**\n@@ -460,6 +518,7 @@ public void deployTransport(String key, Handler transport)\n     public void deployTransport(String key, Supplier supplier)\n     {\n         transportRegistry.add(key, supplier);\n+        saveTransportRegistry();\n     }\n     \n     /**\n@@ -468,6 +527,7 @@ public void deployTransport(String key, Supplier supplier)\n     public void undeployTransport(String key)\n     {\n         transportRegistry.remove(key);\n+        saveTransportRegistry();\n     }\n \n     /**",
                "raw_url": "https://github.com/apache/axis1-java/raw/70bbea364ef8b7675759f7ab51dd80fefb12249b/src/org/apache/axis/AxisEngine.java",
                "sha": "80b3f3d9b44e902b8208b37ccb0c6f5afe9a1687",
                "status": "modified"
            },
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/axis1-java/blob/70bbea364ef8b7675759f7ab51dd80fefb12249b/src/org/apache/axis/Constants.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/Constants.java?ref=70bbea364ef8b7675759f7ab51dd80fefb12249b",
                "deletions": 0,
                "filename": "src/org/apache/axis/Constants.java",
                "patch": "@@ -148,4 +148,6 @@\n   public static String SERVER_HANDLER_REGISTRY = \"handler-server.reg\" ;\n   public static String CLIENT_SERVICE_REGISTRY = \"service-client.reg\" ;\n   public static String SERVER_SERVICE_REGISTRY = \"service-server.reg\" ;\n+  public static String CLIENT_TRANSPORT_REGISTRY = \"transport-client.reg\" ;\n+  public static String SERVER_TRANSPORT_REGISTRY = \"transport-server.reg\" ;\n }",
                "raw_url": "https://github.com/apache/axis1-java/raw/70bbea364ef8b7675759f7ab51dd80fefb12249b/src/org/apache/axis/Constants.java",
                "sha": "bf7d671fa37ce0ed9ebfa7ced48a00ae47a7991b",
                "status": "modified"
            },
            {
                "additions": 0,
                "blob_url": "https://github.com/apache/axis1-java/blob/70bbea364ef8b7675759f7ab51dd80fefb12249b/src/org/apache/axis/MessageContext.java",
                "changes": 4,
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/MessageContext.java?ref=70bbea364ef8b7675759f7ab51dd80fefb12249b",
                "deletions": 4,
                "filename": "src/org/apache/axis/MessageContext.java",
                "patch": "@@ -333,10 +333,6 @@ public void setServiceHandler(Handler sh)\n      */\n     public static String TRANS_URL           = \"transport.url\";\n \n-    /** The transport specific request/response chains  */\n-    public static String TRANS_REQUEST         = \"transport.request\";\n-    public static String TRANS_RESPONSE        = \"transport.response\";\n-\n     /** Has a quit been requested? Hackish... but useful... -- RobJ */\n     public static String QUIT_REQUESTED = \"quit.requested\";\n   ",
                "raw_url": "https://github.com/apache/axis1-java/raw/70bbea364ef8b7675759f7ab51dd80fefb12249b/src/org/apache/axis/MessageContext.java",
                "sha": "bfdc09f89f33b838fe63bda1f31b2e0e12fd91d3",
                "status": "modified"
            },
            {
                "additions": 3,
                "blob_url": "https://github.com/apache/axis1-java/blob/70bbea364ef8b7675759f7ab51dd80fefb12249b/src/org/apache/axis/SimpleChain.java",
                "changes": 3,
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/SimpleChain.java?ref=70bbea364ef8b7675759f7ab51dd80fefb12249b",
                "deletions": 0,
                "filename": "src/org/apache/axis/SimpleChain.java",
                "patch": "@@ -141,6 +141,9 @@ public boolean contains(Handler handler) {\n   }\n \n   public Handler[] getHandlers() {\n+    if (handlers == null)\n+      return null;\n+    \n     Handler [] ret = new Handler[handlers.size()];\n     return( (Handler[]) handlers.toArray(ret) );\n   }",
                "raw_url": "https://github.com/apache/axis1-java/raw/70bbea364ef8b7675759f7ab51dd80fefb12249b/src/org/apache/axis/SimpleChain.java",
                "sha": "fe349e964a9e00fd1c5ecedac170f484124d3f33",
                "status": "modified"
            },
            {
                "additions": 3,
                "blob_url": "https://github.com/apache/axis1-java/blob/70bbea364ef8b7675759f7ab51dd80fefb12249b/src/org/apache/axis/client/AdminClient.java",
                "changes": 4,
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/client/AdminClient.java?ref=70bbea364ef8b7675759f7ab51dd80fefb12249b",
                "deletions": 1,
                "filename": "src/org/apache/axis/client/AdminClient.java",
                "patch": "@@ -84,7 +84,9 @@ public static void main (String[] args)\n       try {\n         Options opts = new Options( args );\n         \n-        Debug.setDebugLevel( opts.isFlagSet('d') );\n+        if (opts.isFlagSet('d') > 0) {\n+          Debug.setDebugLevel( opts.isFlagSet('d') );\n+        }\n         \n         args = opts.getRemainingArgs();\n         ",
                "raw_url": "https://github.com/apache/axis1-java/raw/70bbea364ef8b7675759f7ab51dd80fefb12249b/src/org/apache/axis/client/AdminClient.java",
                "sha": "d5e76ec1e116056c43ecb9d0b7fbc783bb455041",
                "status": "modified"
            },
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/axis1-java/blob/70bbea364ef8b7675759f7ab51dd80fefb12249b/src/org/apache/axis/client/AxisClient.java",
                "changes": 3,
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/client/AxisClient.java?ref=70bbea364ef8b7675759f7ab51dd80fefb12249b",
                "deletions": 1,
                "filename": "src/org/apache/axis/client/AxisClient.java",
                "patch": "@@ -77,7 +77,8 @@\n     public AxisClient()\n     {\n         super(Constants.CLIENT_HANDLER_REGISTRY,\n-              Constants.CLIENT_SERVICE_REGISTRY);\n+              Constants.CLIENT_SERVICE_REGISTRY,\n+              Constants.CLIENT_TRANSPORT_REGISTRY);\n     }\n \n     /**",
                "raw_url": "https://github.com/apache/axis1-java/raw/70bbea364ef8b7675759f7ab51dd80fefb12249b/src/org/apache/axis/client/AxisClient.java",
                "sha": "ad16729cd1b4c2f7b01f74e017e736c117b136f1",
                "status": "modified"
            },
            {
                "additions": 12,
                "blob_url": "https://github.com/apache/axis1-java/blob/70bbea364ef8b7675759f7ab51dd80fefb12249b/src/org/apache/axis/client/ServiceClient.java",
                "changes": 20,
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/client/ServiceClient.java?ref=70bbea364ef8b7675759f7ab51dd80fefb12249b",
                "deletions": 8,
                "filename": "src/org/apache/axis/client/ServiceClient.java",
                "patch": "@@ -91,6 +91,9 @@\n // Only supports String\n \n public class ServiceClient {\n+    // Client transports\n+    private static Transport defaultTransport = null;\n+                                                        \n     // keep prop hashtable small\n     private Hashtable properties = new Hashtable(10);\n     protected String encodingStyleURI = null ;\n@@ -150,10 +153,19 @@ public ServiceClient (Transport transport) {\n     \n     public void setTransport(Transport transport) {\n         this.transport = transport;\n+        Debug.Print(1, \"Transport is \" + transport);\n+    }\n+    \n+    public static void setDefaultTransport(Transport transport)\n+    {\n+        defaultTransport = transport;\n     }\n     \n     public Transport getTransportForProtocol(String protocol)\n     {\n+      if (defaultTransport != null)\n+        return defaultTransport;\n+      \n       if (protocol.equals(\"http\"))\n         return new HTTPTransport();\n       \n@@ -188,14 +200,6 @@ public String getEncodingStyleURI() {\n         return( encodingStyleURI );\n     }\n     \n-    public void setTransportRequest(String handlerName) {\n-      msgContext.setProperty( MessageContext.TRANS_REQUEST, handlerName );\n-    }\n-  \n-    public void setTransportResponse(String handlerName) {\n-      msgContext.setProperty( MessageContext.TRANS_RESPONSE, handlerName );\n-    }\n-    \n     public void setRequestMessage(Message msg) {\n         msgContext.setRequestMessage(msg);\n     }",
                "raw_url": "https://github.com/apache/axis1-java/raw/70bbea364ef8b7675759f7ab51dd80fefb12249b/src/org/apache/axis/client/ServiceClient.java",
                "sha": "06f93598d505db7a119aeb1b5c0847c99ed7a8f7",
                "status": "modified"
            },
            {
                "additions": 4,
                "blob_url": "https://github.com/apache/axis1-java/blob/70bbea364ef8b7675759f7ab51dd80fefb12249b/src/org/apache/axis/registries/SupplierRegistry.java",
                "changes": 4,
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/registries/SupplierRegistry.java?ref=70bbea364ef8b7675759f7ab51dd80fefb12249b",
                "deletions": 0,
                "filename": "src/org/apache/axis/registries/SupplierRegistry.java",
                "patch": "@@ -118,6 +118,10 @@ public Handler remove(String key) {\n      */\n     public Handler find(String key) {\n         Debug.Print( 4, \"Enter: SupplierRegistry::find(\", key, \")\" );\n+        if (key == null) {\n+          Debug.Print( 4, \"Exit: SupplierRegistry::find - key is null\" );\n+          return( null );\n+        }\n         if ( suppliers == null ) {\n           Debug.Print( 4, \"Exit: SupplierRegistry::find - suppliers is null\" );\n           return( null );",
                "raw_url": "https://github.com/apache/axis1-java/raw/70bbea364ef8b7675759f7ab51dd80fefb12249b/src/org/apache/axis/registries/SupplierRegistry.java",
                "sha": "c3f2a70c0daa3b1a5da2f95e6684fc760bf238d8",
                "status": "modified"
            },
            {
                "additions": 17,
                "blob_url": "https://github.com/apache/axis1-java/blob/70bbea364ef8b7675759f7ab51dd80fefb12249b/src/org/apache/axis/server/AxisServer.java",
                "changes": 27,
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/server/AxisServer.java?ref=70bbea364ef8b7675759f7ab51dd80fefb12249b",
                "deletions": 10,
                "filename": "src/org/apache/axis/server/AxisServer.java",
                "patch": "@@ -113,7 +113,8 @@ public void stop()\n      */\n     public AxisServer() {\n       super(Constants.SERVER_HANDLER_REGISTRY,\n-            Constants.SERVER_SERVICE_REGISTRY);\n+            Constants.SERVER_SERVICE_REGISTRY,\n+            Constants.SERVER_TRANSPORT_REGISTRY);\n     }\n \n     /**\n@@ -149,14 +150,6 @@ protected void deployDefaultHandlers()\n       c.addHandler( _handlerRegistry.find( \"debug\" ) );\n       deployHandler( \"global.request\", c );\n       \n-      c = new SimpleChain();\n-      c.addHandler( _handlerRegistry.find( \"HTTPAuth\" ) );\n-      c.addHandler( _handlerRegistry.find( \"HTTPAction\" ) );\n-      // deployHandler( \"HTTP.request\", c );\n-      \n-      SimpleTargetedChain transport = new SimpleTargetedChain();\n-      transport.setRequestHandler(c);\n-      deployTransport(\"HTTP.request\", transport);\n     }\n \n     protected void deployDefaultServices()\n@@ -179,7 +172,20 @@ protected void deployDefaultServices()\n \n     protected void deployDefaultTransports()\n     {\n-      // Do nothing.\n+      Chain c = new SimpleChain();\n+      Handler actionHandler = _handlerRegistry.find( \"HTTPAction\" );\n+      c.addHandler( _handlerRegistry.find( \"HTTPAuth\" ) );\n+      c.addHandler( actionHandler );\n+      \n+      // HTTP transport w/authorization\n+      SimpleTargetedChain transport = new SimpleTargetedChain();\n+      transport.setRequestHandler(c);\n+      deployTransport(\"http\", transport);\n+      \n+      // HTTP transport (for SimpleAxisServer) without auth.\n+      transport = new SimpleTargetedChain();\n+      transport.setRequestHandler(actionHandler);\n+      deployTransport(\"SimpleHTTP\", transport);\n     }\n     \n     /**\n@@ -266,6 +272,7 @@ public void invoke(MessageContext msgContext) throws AxisFault {\n               HandlerRegistry tr = getTransportRegistry();\n               SimpleTargetedChain transportChain = null;\n               \n+              Debug.Print(3, \"AxisServer.invoke: Transport = '\" + hName +\"'\");\n               if ( hName != null && (h = tr.find( hName )) != null ) {\n                 if (h instanceof SimpleTargetedChain) {\n                   transportChain = (SimpleTargetedChain)h;",
                "raw_url": "https://github.com/apache/axis1-java/raw/70bbea364ef8b7675759f7ab51dd80fefb12249b/src/org/apache/axis/server/AxisServer.java",
                "sha": "d7257b5dc26088b1d4ea6e270efa2e42905b43ec",
                "status": "modified"
            },
            {
                "additions": 21,
                "blob_url": "https://github.com/apache/axis1-java/blob/70bbea364ef8b7675759f7ab51dd80fefb12249b/src/org/apache/axis/suppliers/TargetedChainSupplier.java",
                "changes": 35,
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/suppliers/TargetedChainSupplier.java?ref=70bbea364ef8b7675759f7ab51dd80fefb12249b",
                "deletions": 14,
                "filename": "src/org/apache/axis/suppliers/TargetedChainSupplier.java",
                "patch": "@@ -95,6 +95,9 @@ public TargetedChainSupplier(String myName,\n     \n     private void addHandlersToChain(Vector names, Chain chain)\n     {\n+      if (names == null)\n+        return;\n+      \n       Enumeration e = names.elements();\n       while (e.hasMoreElements()) {\n         String hName = (String)e.nextElement();\n@@ -114,25 +117,29 @@ public Handler getHandler()\n         c.setOptions(_options);\n         c.setName(_myName);\n         \n-        if (_requestNames.size() == 1) {\n-          h = _registry.find((String)_requestNames.elementAt(0));\n-          c.setRequestHandler(h);\n-        } else {\n-          Chain chain = new SimpleChain();\n-          addHandlersToChain(_requestNames, chain);\n+        if (!_requestNames.isEmpty()) {\n+          if (_requestNames.size() == 1) {\n+            h = _registry.find((String)_requestNames.elementAt(0));\n+            c.setRequestHandler(h);\n+          } else {\n+            Chain chain = new SimpleChain();\n+            addHandlersToChain(_requestNames, chain);\n+            c.setRequestHandler(chain);\n+          }\n         }\n         \n         h = _registry.find(_pivotName);\n-        if (h == null)\n-          return null;  // Should maybe throw an exception here?\n         c.setPivotHandler(h);\n \n-        if (_responseNames.size() == 1) {\n-          h = _registry.find((String)_responseNames.elementAt(0));\n-          c.setRequestHandler(h);\n-        } else {\n-          Chain chain = new SimpleChain();\n-          addHandlersToChain(_responseNames, chain);\n+        if (!_responseNames.isEmpty()) {\n+          if (_responseNames.size() == 1) {\n+            h = _registry.find((String)_responseNames.elementAt(0));\n+            c.setResponseHandler(h);\n+          } else {\n+            Chain chain = new SimpleChain();\n+            addHandlersToChain(_responseNames, chain);\n+            c.setResponseHandler(chain);\n+          }\n         }\n         \n         _chain = c;",
                "raw_url": "https://github.com/apache/axis1-java/raw/70bbea364ef8b7675759f7ab51dd80fefb12249b/src/org/apache/axis/suppliers/TargetedChainSupplier.java",
                "sha": "be1bef15b77b6dec3636321cb0cb1a9372f35e0f",
                "status": "modified"
            },
            {
                "additions": 9,
                "blob_url": "https://github.com/apache/axis1-java/blob/70bbea364ef8b7675759f7ab51dd80fefb12249b/src/org/apache/axis/transport/http/AxisServlet.java",
                "changes": 27,
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/transport/http/AxisServlet.java?ref=70bbea364ef8b7675759f7ab51dd80fefb12249b",
                "deletions": 18,
                "filename": "src/org/apache/axis/transport/http/AxisServlet.java",
                "patch": "@@ -68,32 +68,25 @@\n  */\n public class AxisServlet extends HttpServlet {\n   // These have default values.\n-  private String transportReqName = \"HTTP.request\";\n-  private String transportRespName = \"HTTP.response\";\n+  private String transportName = \"http\";\n \n   private static final String AXIS_ENGINE = \"AxisEngine\" ;\n \n   public void init() {\n-      String param = getInitParameter(\"transport.request\");\n+      String param = getInitParameter(\"transport.name\");\n       ServletContext context = getServletConfig().getServletContext();\n       \n       if (param == null)\n-          param = context.getInitParameter(\"transport.request\");\n+          param = context.getInitParameter(\"transport.name\");\n       if (param != null)\n-          transportReqName = param;\n-      \n-      param = getInitParameter(\"transport.response\");\n-      if (param == null)\n-          param = context.getInitParameter(\"transport.response\");\n-      if (param != null)\n-          transportRespName = param;\n+          transportName = param;      \n   }\n \n   public void doGet(HttpServletRequest req, HttpServletResponse res)\n                 throws ServletException, IOException {\n     res.setContentType(\"text/html\");\n-    res.getWriter().println( \"In doGet\" );\n-    res.getWriter().println(\" Request = \" + transportReqName);\n+    res.getWriter().println( \"In doGet<p>\" );\n+    res.getWriter().println(\" TransportName = \" + transportName);\n   }\n \n   public void doPost(HttpServletRequest req, HttpServletResponse res)\n@@ -118,11 +111,9 @@ public void doPost(HttpServletRequest req, HttpServletResponse res)\n     /**********************************************************/\n     msgContext.setRequestMessage( msg );\n \n-    /* Set the Transport Specific Request/Response chains IDs */\n-    /******************************************************/\n-    msgContext.setProperty(MessageContext.TRANS_REQUEST , transportReqName );\n-    msgContext.setProperty(MessageContext.TRANS_RESPONSE, transportRespName );\n-    msgContext.setTransportName(transportReqName);\n+    /* Set the Transport */\n+    /*********************/\n+    msgContext.setTransportName(transportName);\n \n     /* Save some HTTP specific info in the bag in case a handler needs it */\n     /**********************************************************************/",
                "raw_url": "https://github.com/apache/axis1-java/raw/70bbea364ef8b7675759f7ab51dd80fefb12249b/src/org/apache/axis/transport/http/AxisServlet.java",
                "sha": "948489ddb6f0cf672c0ec3c2ed75455789846925",
                "status": "modified"
            },
            {
                "additions": 3,
                "blob_url": "https://github.com/apache/axis1-java/blob/70bbea364ef8b7675759f7ab51dd80fefb12249b/src/org/apache/axis/transport/http/SimpleAxisServer.java",
                "changes": 11,
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/transport/http/SimpleAxisServer.java?ref=70bbea364ef8b7675759f7ab51dd80fefb12249b",
                "deletions": 8,
                "filename": "src/org/apache/axis/transport/http/SimpleAxisServer.java",
                "patch": "@@ -126,9 +126,7 @@ private static synchronized AxisServer getAxisServer() {\n     private static byte cannedResponse[] = \"<empty/>\".getBytes();\n \n     // Axis specific constants\n-    private static String transportReqName = \"HTTPAction\";\n-    private static String transportRespName = \"HTTP.response\";\n-    //private static final String AXIS_ENGINE = \"AxisEngine\" ;\n+    private static String transportName = \"SimpleHTTP\";\n     \n     // are we stopped?\n     // latch to true if stop() is called\n@@ -149,8 +147,6 @@ public void run() {\n         // create and initialize a message context\n         MessageContext msgContext = new MessageContext(engine);\n         Message        requestMsg;\n-        msgContext.setProperty(MessageContext.TRANS_REQUEST , transportReqName);\n-        msgContext.setProperty(MessageContext.TRANS_RESPONSE, transportRespName);\n \n         // Reusuable, buffered, content length controlled, InputStream\n         NonBlockingBufferedInputStream is =\n@@ -177,9 +173,8 @@ public void run() {\n             msgContext.setTargetService(null);\n             msgContext.setResponseMessage(null);\n             msgContext.clearProperties();\n-            msgContext.setProperty(\"transport\", \"HTTPTransport\");\n-            msgContext.setProperty(MessageContext.TRANS_REQUEST, transportReqName);\n-            msgContext.setProperty(MessageContext.TRANS_RESPONSE, transportRespName);\n+            //msgContext.setProperty(\"transport\", \"HTTPTransport\");\n+            msgContext.setTransportName(transportName);\n             \n             try {\n                 try {",
                "raw_url": "https://github.com/apache/axis1-java/raw/70bbea364ef8b7675759f7ab51dd80fefb12249b/src/org/apache/axis/transport/http/SimpleAxisServer.java",
                "sha": "70fba8275326c97c8822e1e7ebcf00964dd99727",
                "status": "modified"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/axis1-java/blob/70bbea364ef8b7675759f7ab51dd80fefb12249b/src/org/apache/axis/transport/local/LocalSender.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/transport/local/LocalSender.java?ref=70bbea364ef8b7675759f7ab51dd80fefb12249b",
                "deletions": 1,
                "filename": "src/org/apache/axis/transport/local/LocalSender.java",
                "patch": "@@ -100,7 +100,7 @@ public void invoke(MessageContext clientContext) throws AxisFault {\n     String action = clientContext.getStrProp(HTTPConstants.MC_HTTP_SOAPACTION);\n     if (action != null) {\n        serverContext.setProperty(HTTPConstants.MC_HTTP_SOAPACTION, action);\n-       serverContext.setProperty(MessageContext.TRANS_REQUEST , \"HTTPAction\");\n+       serverContext.setTransportName(\"http\");\n     }\n \n     // set the realpath if possible",
                "raw_url": "https://github.com/apache/axis1-java/raw/70bbea364ef8b7675759f7ab51dd80fefb12249b/src/org/apache/axis/transport/local/LocalSender.java",
                "sha": "ddf3bd354a65ba42e176600a90d87e5a74c95d83",
                "status": "modified"
            },
            {
                "additions": 29,
                "blob_url": "https://github.com/apache/axis1-java/blob/70bbea364ef8b7675759f7ab51dd80fefb12249b/src/org/apache/axis/utils/Admin.java",
                "changes": 54,
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/utils/Admin.java?ref=70bbea364ef8b7675759f7ab51dd80fefb12249b",
                "deletions": 25,
                "filename": "src/org/apache/axis/utils/Admin.java",
                "patch": "@@ -119,7 +119,7 @@ private static void registerTypeMappings(Element root, SOAPService service)\n     throws Exception\n   {\n     NodeList list = root.getElementsByTagName(\"bean\");\n-    Debug.Print(1, \"Registering \" + list.getLength() + \" service-specific beans.\");\n+    Debug.Print(2, \"Registering \" + list.getLength() + \" service-specific beans.\");\n     for (int i = 0; list != null && i < list.getLength(); i++) {\n       Element el = (Element)list.item(i);\n       registerBeanMapping(el, service.getTypeMappingRegistry());\n@@ -187,12 +187,18 @@ public Document process(MessageContext msgContext, Element root) throws AxisFaul\n         Element tmpEl = doc.createElement(\"engineConfig\");\n         doc.appendChild(tmpEl);\n         \n-        Element el = list(doc, engine, false);\n+        Element el = doc.createElement(\"handlers\");\n+        list(el, engine.getHandlerRegistry());\n         tmpEl.appendChild(el);\n         \n-        el = list(doc, engine, true);\n+        el = doc.createElement(\"services\");\n+        list(el, engine.getServiceRegistry());\n         tmpEl.appendChild(el);\n         \n+        el = doc.createElement(\"transports\");\n+        list(el, engine.getTransportRegistry());\n+        tmpEl.appendChild(el);\n+\n         return( doc );\n       }\n   \n@@ -269,25 +275,17 @@ else if ( type.equals( \"bean\" ) ) {\n    * @return Element our config element, suitable for pumping back through\n    *                 Admin processing later, to redeploy.\n    */\n-  public static Element list(Document doc, AxisEngine engine, boolean doServices)\n+  public static Element list(Element root, HandlerRegistry registry)\n     throws AxisFault\n   {\n-    String elementName = doServices ? \"services\" : \"handlers\";\n-    Element root = doc.createElement( elementName );\n+    Document doc = root.getOwnerDocument();\n \n     Element    elem = null ;\n     Hashtable  opts = null ;\n     String[]   names ;\n     Handler    h ;\n     int        i ;\n     \n-    HandlerRegistry registry;\n-    if (doServices) {\n-      registry = engine.getServiceRegistry();\n-    } else {\n-      registry = engine.getHandlerRegistry();\n-    }\n-\n     names = registry.list();\n \n     for( i = 0 ; names != null && i < names.length ; i++ ) {\n@@ -373,6 +371,8 @@ public static void registerChain(Element elem, AxisEngine engine)\n                                                              hr);\n       hr.add(name,supp);\n     }\n+    \n+    engine.saveHandlerRegistry();\n   }\n   \n   /**\n@@ -512,11 +512,9 @@ public static void registerHandler(Element elem, AxisEngine engine)\n   public static void registerTransport(Element elem, AxisEngine engine)\n     throws AxisFault\n   {\n-    SupplierRegistry tr = engine.getTransportRegistry();\n-    \n     String   name    = elem.getAttribute( \"name\" );\n     String   request   = elem.getAttribute( \"request\" );\n-    String   sender   = elem.getAttribute( \"sender\" );\n+    String   sender   = elem.getAttribute( \"pivot\" );\n     String   response  = elem.getAttribute( \"response\" );\n     Hashtable options = new Hashtable();\n \n@@ -530,24 +528,30 @@ public static void registerTransport(Element elem, AxisEngine engine)\n     Vector reqNames = new Vector();\n     Vector respNames = new Vector();\n \n-    st = new StringTokenizer( request, \" \\t\\n\\r\\f,\" );\n-    while ( st.hasMoreElements() ) {\n-      reqNames.addElement(st.nextToken());\n+    if (request != null) {\n+      st = new StringTokenizer( request, \" \\t\\n\\r\\f,\" );\n+      while ( st.hasMoreElements() ) {\n+        reqNames.addElement(st.nextToken());\n+      }\n+    }\n+\n+    if (response != null) {\n+      st = new StringTokenizer( response, \" \\t\\n\\r\\f,\" );\n+      while ( st.hasMoreElements() ) {\n+        respNames.addElement(st.nextToken());\n+      }\n     }\n     \n-    st = new StringTokenizer( response, \" \\t\\n\\r\\f,\" );\n-    while ( st.hasMoreElements() ) {\n-      respNames.addElement(st.nextToken());\n-    }\n     getOptions( elem, options );\n     \n+    HandlerRegistry hr = engine.getHandlerRegistry();\n     TargetedChainSupplier supp = new TargetedChainSupplier(name,\n                                                            reqNames,\n                                                            respNames,\n                                                            sender,\n                                                            options,\n-                                                           tr);\n-    tr.add(name,supp);\n+                                                           hr);\n+    engine.deployTransport(name, supp);\n   }\n \n   /**",
                "raw_url": "https://github.com/apache/axis1-java/raw/70bbea364ef8b7675759f7ab51dd80fefb12249b/src/org/apache/axis/utils/Admin.java",
                "sha": "38f34231a0bbb3235139b8f48c624058a72b4567",
                "status": "modified"
            }
        ],
        "message": "Various changes to get the new transport architecture working.\n\n* use MessageContext.transportName everywhere, remove TRANS_REQUEST/\n  TRANS_RESPONSE properties.\n\n* deploy tranports to/from their own registry file.  Persistence and\n  deployment of Handlers/TypeMappings/Transports/Services needs to be\n  given some more thought in terms of cleanliness, J2EE integration,\n  and component packaging...\n\n* fix various places which might generate NPEs\n\n* clean up Admin.list() to be able to use any registry.\n\n* deploy two default http transports, a secure one (with HTTPAuth)\n  for the servlet and a non-secure one for SimpleAxisServer.\n\n* ServiceClient now has a static \"defaultTransport\" member which,\n  if set, overrides the lookup-by-URL.  This enables the TCP\n  AdminClient to work again, but should be more cleanly architected\n  (how do we expect to convey which transport to use?)\n\n* fix a couple of bugs in TargetedChainSupplier\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis1/trunk/java@252076 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/axis1-java/commit/d1c7b53b6d71b5f3422b9926cabb49b54a73ca19",
        "repo": "axis1-java",
        "unit_tests": [
            "AdminTest.java"
        ]
    },
    "axis1-java_8900212": {
        "bug_id": "axis1-java_8900212",
        "commit": "https://github.com/apache/axis1-java/commit/890021233deb2e34c38248309cd02ecfda381cd1",
        "file": [
            {
                "additions": 3,
                "blob_url": "https://github.com/apache/axis1-java/blob/890021233deb2e34c38248309cd02ecfda381cd1/src/org/apache/axis/client/Call.java",
                "changes": 3,
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/client/Call.java?ref=890021233deb2e34c38248309cd02ecfda381cd1",
                "deletions": 0,
                "filename": "src/org/apache/axis/client/Call.java",
                "patch": "@@ -376,6 +376,9 @@ public void setOperation(QName portName, String opName)\n         ////////////////////////////////////////////////////////////////////\n         BindingOperation bop = binding.getBindingOperation(opName,\n                                                            null, null);\n+        if ( bop == null )\n+            throw new JAXRPCException( JavaUtils.getMessage(\"noOperation02\",\n+                                                            opName ));\n         this.removeProperty(HTTPConstants.MC_HTTP_SOAPACTION);\n         list = bop.getExtensibilityElements();\n         for ( int i = 0 ; list != null && i < list.size() ; i++ ) {",
                "raw_url": "https://github.com/apache/axis1-java/raw/890021233deb2e34c38248309cd02ecfda381cd1/src/org/apache/axis/client/Call.java",
                "sha": "5bc33822ffff2f92d8297d1c0b3bf946fa82e25b",
                "status": "modified"
            }
        ],
        "message": "check for NPE\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis1/trunk/java@245917 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/axis1-java/commit/a46eabe7811d6f1cab301f787ce3b817b084a0bd",
        "repo": "axis1-java",
        "unit_tests": [
            "TestCall.java"
        ]
    },
    "axis1-java_90e6077": {
        "bug_id": "axis1-java_90e6077",
        "commit": "https://github.com/apache/axis1-java/commit/90e6077cfa5cfda8270128056197910a18ad87a0",
        "file": [
            {
                "additions": 5,
                "blob_url": "https://github.com/apache/axis1-java/blob/90e6077cfa5cfda8270128056197910a18ad87a0/src/org/apache/axis/message/SOAPFault.java",
                "changes": 8,
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/message/SOAPFault.java?ref=90e6077cfa5cfda8270128056197910a18ad87a0",
                "deletions": 3,
                "filename": "src/org/apache/axis/message/SOAPFault.java",
                "patch": "@@ -212,9 +212,11 @@ private QName getFaultQName(Class cls, SerializationContext context) {\n         QName qname = null;       \n         if (! cls.equals(AxisFault.class)) {\n             FaultDesc faultDesc = null;\n-            OperationDesc op = context.getMessageContext().getOperation();\n-            if(op != null) {\n-                faultDesc = op.getFaultByClass(cls);\n+            if (context.getMessageContext() != null) {\n+                OperationDesc op = context.getMessageContext().getOperation();\n+                if (op != null) {\n+                    faultDesc = op.getFaultByClass(cls);\n+                }\n             }\n                 \n             if (faultDesc != null) {",
                "raw_url": "https://github.com/apache/axis1-java/raw/90e6077cfa5cfda8270128056197910a18ad87a0/src/org/apache/axis/message/SOAPFault.java",
                "sha": "7d8a4227ae10c094b6a566e0ae9ee474d04a1b8d",
                "status": "modified"
            }
        ],
        "message": "Fix for Bug 20653 - AxisFault during config processing gives NPE\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis1/trunk/java@249147 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/axis1-java/commit/69671f43ab6f13a92f0192f95a78a482e74ea1f5",
        "repo": "axis1-java",
        "unit_tests": [
            "TestSOAPFault.java"
        ]
    },
    "axis1-java_a480875": {
        "bug_id": "axis1-java_a480875",
        "commit": "https://github.com/apache/axis1-java/commit/a4808751d9943f6ca121900849e2fc13f4c546c2",
        "file": [
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/axis1-java/blob/a4808751d9943f6ca121900849e2fc13f4c546c2/samples/transport/FileTest.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/samples/transport/FileTest.java?ref=a4808751d9943f6ca121900849e2fc13f4c546c2",
                "deletions": 1,
                "filename": "samples/transport/FileTest.java",
                "patch": "@@ -43,7 +43,7 @@ public static void main(String args[]) throws Exception {\n   \n     call.set(Transport.USER, opts.getUser() );\n     call.set(Transport.PASSWORD, opts.getPassword() );\n-    call.setTransportRequest( \"FileSender\" );\n+    call.setTransport( new FileTransport() );\n   \n     Float res = new Float(0.0F);\n     res = (Float) call.invoke( \"urn:xmltoday-delayed-quotes\",",
                "raw_url": "https://github.com/apache/axis1-java/raw/a4808751d9943f6ca121900849e2fc13f4c546c2/samples/transport/FileTest.java",
                "sha": "ff6d2ff36e56c18ddb058fe861a16bf16315202e",
                "status": "modified"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/axis1-java/blob/a4808751d9943f6ca121900849e2fc13f4c546c2/samples/transport/client_deploy.xml",
                "changes": 1,
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/samples/transport/client_deploy.xml?ref=a4808751d9943f6ca121900849e2fc13f4c546c2",
                "deletions": 0,
                "filename": "samples/transport/client_deploy.xml",
                "patch": "@@ -6,4 +6,5 @@\n \n <deploy>\n   <handler name=\"FileSender\" class=\"samples.transport.FileSender\" />\n+  <transport name=\"FileTransport\" pivot=\"FileSender\"/>\n </deploy>",
                "raw_url": "https://github.com/apache/axis1-java/raw/a4808751d9943f6ca121900849e2fc13f4c546c2/samples/transport/client_deploy.xml",
                "sha": "660df98fee8e58de0fcfe06285fb96a14fcf93e5",
                "status": "modified"
            },
            {
                "additions": 7,
                "blob_url": "https://github.com/apache/axis1-java/blob/a4808751d9943f6ca121900849e2fc13f4c546c2/samples/transport/tcp/AdminClient.java",
                "changes": 8,
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/samples/transport/tcp/AdminClient.java?ref=a4808751d9943f6ca121900849e2fc13f4c546c2",
                "deletions": 1,
                "filename": "samples/transport/tcp/AdminClient.java",
                "patch": "@@ -61,15 +61,21 @@\n import java.net.URL;\n \n /**\n- * An admin client object, specific to HTTP.\n+ * An admin client object, specific to TCP in that it sets\n+ * the TCP transport up.\n  *\n  * @author Rob Jellinghaus (robj@unrealities.com)\n  * @author Doug Davis (dug@us.ibm.com)\n+ * @author Glen Daniels (gdaniels@macromedia.com)\n  */\n \n public class AdminClient extends org.apache.axis.client.AdminClient {\n \n     public static void main(String args[]) {\n+        /** !!! This shouldn't be hardcoded....\n+         */\n+        ServiceClient.setDefaultTransport(new TCPTransport(\"localhost\", \"8080\"));\n+        \n         try {\n             org.apache.axis.client.AdminClient.main(args);\n         }",
                "raw_url": "https://github.com/apache/axis1-java/raw/a4808751d9943f6ca121900849e2fc13f4c546c2/samples/transport/tcp/AdminClient.java",
                "sha": "9fc9ba832f2ae6634e513f7d3ba6f783882b4210",
                "status": "modified"
            },
            {
                "additions": 7,
                "blob_url": "https://github.com/apache/axis1-java/blob/a4808751d9943f6ca121900849e2fc13f4c546c2/samples/transport/tcp/TCPListener.java",
                "changes": 14,
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/samples/transport/tcp/TCPListener.java?ref=a4808751d9943f6ca121900849e2fc13f4c546c2",
                "deletions": 7,
                "filename": "samples/transport/tcp/TCPListener.java",
                "patch": "@@ -75,8 +75,7 @@\n  */\n public class TCPListener implements Runnable {\n     // These have default values.\n-    private String transportReqName = \"TCP.request\";\n-    private String transportRespName = \"TCP.response\";\n+    private String transportName = \"TCPTransport\";\n     \n     private static final String AXIS_ENGINE = \"AxisEngine\" ;\n     \n@@ -151,10 +150,12 @@ public void run () {\n                 HandlerRegistry hr = engine.getHandlerRegistry();\n                 HandlerRegistry sr = engine.getServiceRegistry();\n                 // add the TCPSender\n-                hr.add(\"TCPSender\", new TCPSender());\n+                //hr.add(\"TCPSender\", new TCPSender());\n                 \n-                SimpleChain c = new SimpleChain();\n-                hr.add( transportReqName, c );\n+                SimpleTargetedChain c = new SimpleTargetedChain();\n+                c.setPivotHandler(new TCPSender());\n+                \n+                engine.deployTransport(transportName, c);\n             }\n             \n             /* Place the Request message in the MessagContext object - notice */\n@@ -233,8 +234,7 @@ public void run () {\n             \n             /* Set the Transport Specific Request/Response chains IDs */\n             /******************************************************/\n-            msgContext.setProperty(MessageContext.TRANS_REQUEST , transportReqName );\n-            msgContext.setProperty(MessageContext.TRANS_RESPONSE, transportRespName );\n+            msgContext.setTransportName(transportName);\n             \n             try {\n                 /* Invoke the Axis engine... */",
                "raw_url": "https://github.com/apache/axis1-java/raw/a4808751d9943f6ca121900849e2fc13f4c546c2/samples/transport/tcp/TCPListener.java",
                "sha": "da7b5dffb28f90943cccc260c71aede4d4f811c6",
                "status": "modified"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/axis1-java/blob/a4808751d9943f6ca121900849e2fc13f4c546c2/samples/transport/tcp/TCPTransport.java",
                "changes": 1,
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/samples/transport/tcp/TCPTransport.java?ref=a4808751d9943f6ca121900849e2fc13f4c546c2",
                "deletions": 0,
                "filename": "samples/transport/tcp/TCPTransport.java",
                "patch": "@@ -106,6 +106,7 @@ public void setupMessageContext (MessageContext mc, ServiceClient serv, AxisEngi\n         if (port != null) serv.set(PORT, port);\n         String url = \"http://\"+serv.get(HOST)+\":\"+serv.get(PORT);\n         \n+        Debug.Print(4, \"TCPTransport set URL to '\" + url + \"'\");\n         mc.setProperty(MessageContext.TRANS_URL, url);\n     }\n }",
                "raw_url": "https://github.com/apache/axis1-java/raw/a4808751d9943f6ca121900849e2fc13f4c546c2/samples/transport/tcp/TCPTransport.java",
                "sha": "6c86fc3de6e9addb308de5f7d3581148ecbc6edc",
                "status": "modified"
            },
            {
                "additions": 7,
                "blob_url": "https://github.com/apache/axis1-java/blob/a4808751d9943f6ca121900849e2fc13f4c546c2/samples/transport/tcp/client_deploy.xml",
                "changes": 7,
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/samples/transport/tcp/client_deploy.xml?ref=a4808751d9943f6ca121900849e2fc13f4c546c2",
                "deletions": 0,
                "filename": "samples/transport/tcp/client_deploy.xml",
                "patch": "@@ -0,0 +1,7 @@\n+<m:deploy xmlns:m=\"AdminService\">\n+ <handler name=\"TCPSender\" class=\"samples.transport.tcp.TCPSender\"/>\n+ <handler name=\"LogIt\" class=\"org.apache.axis.handlers.LogMessage\">\n+  <option name=\"message\" value=\"Hey, I'm here!\"/>\n+ </handler>\n+ <transport name=\"tcp\" pivot=\"TCPSender\" request=\"LogIt\"/>\n+</m:deploy>",
                "raw_url": "https://github.com/apache/axis1-java/raw/a4808751d9943f6ca121900849e2fc13f4c546c2/samples/transport/tcp/client_deploy.xml",
                "sha": "f232c6d23038a93a37352a8f4033b860f7163317",
                "status": "added"
            },
            {
                "additions": 63,
                "blob_url": "https://github.com/apache/axis1-java/blob/a4808751d9943f6ca121900849e2fc13f4c546c2/src/org/apache/axis/AxisEngine.java",
                "changes": 66,
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/AxisEngine.java?ref=a4808751d9943f6ca121900849e2fc13f4c546c2",
                "deletions": 3,
                "filename": "src/org/apache/axis/AxisEngine.java",
                "patch": "@@ -87,6 +87,8 @@\n     protected HandlerRegistry _serviceRegistry;\n     protected String _serviceRegFilename;\n     \n+    protected String _transportRegFilename;\n+    \n     private boolean readRegistryFiles = true;\n     private boolean dontSaveYet = false;\n     \n@@ -155,14 +157,17 @@ public AxisEngine(HandlerRegistry handlers, HandlerRegistry services)\n      * @param handlerRegFilename the name of the Handler registry file.\n      * @param serviceRegFilename the name of the Service registry file.\n      */\n-    public AxisEngine(String handlerRegFilename, String serviceRegFilename)\n+    public AxisEngine(String handlerRegFilename,\n+                      String serviceRegFilename,\n+                      String transportRegFilename)\n     {\n         this();\n         setHandlerRegistry(new SupplierRegistry());\n         setServiceRegistry(new SupplierRegistry());\n         \n         _handlerRegFilename = handlerRegFilename;\n         _serviceRegFilename = serviceRegFilename;\n+        _transportRegFilename = transportRegFilename;\n         \n         init();\n     }\n@@ -302,6 +307,37 @@ private void initializeServices()\n     \n     public void initializeTransports()\n     {\n+      if (!readRegistryFiles)\n+        return;\n+      \n+      dontSaveYet = true;\n+      try {\n+        FileInputStream    fis = new FileInputStream(_transportRegFilename);\n+        \n+        Document doc = XMLUtils.newDocument(fis);\n+        \n+        Element root = doc.getDocumentElement();\n+        \n+        NodeList list = root.getChildNodes();\n+        for (int i = 0; i < list.getLength(); i++) {\n+          if (!(list.item(i) instanceof Element))\n+            continue;\n+          Element elem = (Element)list.item(i);\n+          Admin.registerTransport(elem, this);\n+        }\n+        \n+        fis.close();\n+        return;\n+      }\n+      catch( Exception e ) {\n+        if ( !(e instanceof FileNotFoundException) ) {\n+          e.printStackTrace( System.err );\n+        }\n+      } finally {\n+        dontSaveYet = false;\n+      }\n+\n+      Debug.Print(2, \"Deploying default transports...\");\n       deployDefaultTransports();\n     }\n \n@@ -348,7 +384,8 @@ public void saveHandlerRegistry()\n       try {\n         FileOutputStream fos = new FileOutputStream(_handlerRegFilename);\n         Document doc = XMLUtils.newDocument();\n-        Element el = Admin.list(doc, this, false);\n+        Element el = doc.createElement(\"handlers\");\n+        Admin.list(el, getHandlerRegistry());\n         doc.appendChild(el);\n         XMLUtils.DocumentToStream(doc, fos);\n         fos.close();\n@@ -365,7 +402,26 @@ public void saveServiceRegistry()\n       try {\n         FileOutputStream fos = new FileOutputStream(_serviceRegFilename);\n         Document doc = XMLUtils.newDocument();\n-        Element el = Admin.list(doc, this, true);\n+        Element el = doc.createElement(\"services\");\n+        Admin.list(el, getServiceRegistry());\n+        doc.appendChild(el);\n+        XMLUtils.DocumentToStream(doc, fos);\n+        fos.close();\n+      } catch (Exception e) {\n+        e.printStackTrace();\n+      }\n+    }\n+    \n+    public void saveTransportRegistry()\n+    {\n+      if (dontSaveYet || (_transportRegFilename == null))\n+        return;\n+      \n+      try {\n+        FileOutputStream fos = new FileOutputStream(_transportRegFilename);\n+        Document doc = XMLUtils.newDocument();\n+        Element el = doc.createElement(\"transports\"); \n+        Admin.list(el, getTransportRegistry());\n         doc.appendChild(el);\n         XMLUtils.DocumentToStream(doc, fos);\n         fos.close();\n@@ -451,7 +507,9 @@ public void undeployService(String key)\n      */\n     public void deployTransport(String key, Handler transport)\n     {\n+        transport.setName(key);\n         transportRegistry.add(key, transport);\n+        saveTransportRegistry();\n     }\n     \n     /**\n@@ -460,6 +518,7 @@ public void deployTransport(String key, Handler transport)\n     public void deployTransport(String key, Supplier supplier)\n     {\n         transportRegistry.add(key, supplier);\n+        saveTransportRegistry();\n     }\n     \n     /**\n@@ -468,6 +527,7 @@ public void deployTransport(String key, Supplier supplier)\n     public void undeployTransport(String key)\n     {\n         transportRegistry.remove(key);\n+        saveTransportRegistry();\n     }\n \n     /**",
                "raw_url": "https://github.com/apache/axis1-java/raw/a4808751d9943f6ca121900849e2fc13f4c546c2/src/org/apache/axis/AxisEngine.java",
                "sha": "80b3f3d9b44e902b8208b37ccb0c6f5afe9a1687",
                "status": "modified"
            },
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/axis1-java/blob/a4808751d9943f6ca121900849e2fc13f4c546c2/src/org/apache/axis/Constants.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/Constants.java?ref=a4808751d9943f6ca121900849e2fc13f4c546c2",
                "deletions": 0,
                "filename": "src/org/apache/axis/Constants.java",
                "patch": "@@ -148,4 +148,6 @@\n   public static String SERVER_HANDLER_REGISTRY = \"handler-server.reg\" ;\n   public static String CLIENT_SERVICE_REGISTRY = \"service-client.reg\" ;\n   public static String SERVER_SERVICE_REGISTRY = \"service-server.reg\" ;\n+  public static String CLIENT_TRANSPORT_REGISTRY = \"transport-client.reg\" ;\n+  public static String SERVER_TRANSPORT_REGISTRY = \"transport-server.reg\" ;\n }",
                "raw_url": "https://github.com/apache/axis1-java/raw/a4808751d9943f6ca121900849e2fc13f4c546c2/src/org/apache/axis/Constants.java",
                "sha": "bf7d671fa37ce0ed9ebfa7ced48a00ae47a7991b",
                "status": "modified"
            },
            {
                "additions": 0,
                "blob_url": "https://github.com/apache/axis1-java/blob/a4808751d9943f6ca121900849e2fc13f4c546c2/src/org/apache/axis/MessageContext.java",
                "changes": 4,
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/MessageContext.java?ref=a4808751d9943f6ca121900849e2fc13f4c546c2",
                "deletions": 4,
                "filename": "src/org/apache/axis/MessageContext.java",
                "patch": "@@ -333,10 +333,6 @@ public void setServiceHandler(Handler sh)\n      */\n     public static String TRANS_URL           = \"transport.url\";\n \n-    /** The transport specific request/response chains  */\n-    public static String TRANS_REQUEST         = \"transport.request\";\n-    public static String TRANS_RESPONSE        = \"transport.response\";\n-\n     /** Has a quit been requested? Hackish... but useful... -- RobJ */\n     public static String QUIT_REQUESTED = \"quit.requested\";\n   ",
                "raw_url": "https://github.com/apache/axis1-java/raw/a4808751d9943f6ca121900849e2fc13f4c546c2/src/org/apache/axis/MessageContext.java",
                "sha": "bfdc09f89f33b838fe63bda1f31b2e0e12fd91d3",
                "status": "modified"
            },
            {
                "additions": 3,
                "blob_url": "https://github.com/apache/axis1-java/blob/a4808751d9943f6ca121900849e2fc13f4c546c2/src/org/apache/axis/SimpleChain.java",
                "changes": 3,
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/SimpleChain.java?ref=a4808751d9943f6ca121900849e2fc13f4c546c2",
                "deletions": 0,
                "filename": "src/org/apache/axis/SimpleChain.java",
                "patch": "@@ -141,6 +141,9 @@ public boolean contains(Handler handler) {\n   }\n \n   public Handler[] getHandlers() {\n+    if (handlers == null)\n+      return null;\n+    \n     Handler [] ret = new Handler[handlers.size()];\n     return( (Handler[]) handlers.toArray(ret) );\n   }",
                "raw_url": "https://github.com/apache/axis1-java/raw/a4808751d9943f6ca121900849e2fc13f4c546c2/src/org/apache/axis/SimpleChain.java",
                "sha": "fe349e964a9e00fd1c5ecedac170f484124d3f33",
                "status": "modified"
            },
            {
                "additions": 3,
                "blob_url": "https://github.com/apache/axis1-java/blob/a4808751d9943f6ca121900849e2fc13f4c546c2/src/org/apache/axis/client/AdminClient.java",
                "changes": 4,
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/client/AdminClient.java?ref=a4808751d9943f6ca121900849e2fc13f4c546c2",
                "deletions": 1,
                "filename": "src/org/apache/axis/client/AdminClient.java",
                "patch": "@@ -84,7 +84,9 @@ public static void main (String[] args)\n       try {\n         Options opts = new Options( args );\n         \n-        Debug.setDebugLevel( opts.isFlagSet('d') );\n+        if (opts.isFlagSet('d') > 0) {\n+          Debug.setDebugLevel( opts.isFlagSet('d') );\n+        }\n         \n         args = opts.getRemainingArgs();\n         ",
                "raw_url": "https://github.com/apache/axis1-java/raw/a4808751d9943f6ca121900849e2fc13f4c546c2/src/org/apache/axis/client/AdminClient.java",
                "sha": "d5e76ec1e116056c43ecb9d0b7fbc783bb455041",
                "status": "modified"
            },
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/axis1-java/blob/a4808751d9943f6ca121900849e2fc13f4c546c2/src/org/apache/axis/client/AxisClient.java",
                "changes": 3,
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/client/AxisClient.java?ref=a4808751d9943f6ca121900849e2fc13f4c546c2",
                "deletions": 1,
                "filename": "src/org/apache/axis/client/AxisClient.java",
                "patch": "@@ -77,7 +77,8 @@\n     public AxisClient()\n     {\n         super(Constants.CLIENT_HANDLER_REGISTRY,\n-              Constants.CLIENT_SERVICE_REGISTRY);\n+              Constants.CLIENT_SERVICE_REGISTRY,\n+              Constants.CLIENT_TRANSPORT_REGISTRY);\n     }\n \n     /**",
                "raw_url": "https://github.com/apache/axis1-java/raw/a4808751d9943f6ca121900849e2fc13f4c546c2/src/org/apache/axis/client/AxisClient.java",
                "sha": "ad16729cd1b4c2f7b01f74e017e736c117b136f1",
                "status": "modified"
            },
            {
                "additions": 12,
                "blob_url": "https://github.com/apache/axis1-java/blob/a4808751d9943f6ca121900849e2fc13f4c546c2/src/org/apache/axis/client/ServiceClient.java",
                "changes": 20,
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/client/ServiceClient.java?ref=a4808751d9943f6ca121900849e2fc13f4c546c2",
                "deletions": 8,
                "filename": "src/org/apache/axis/client/ServiceClient.java",
                "patch": "@@ -91,6 +91,9 @@\n // Only supports String\n \n public class ServiceClient {\n+    // Client transports\n+    private static Transport defaultTransport = null;\n+                                                        \n     // keep prop hashtable small\n     private Hashtable properties = new Hashtable(10);\n     protected String encodingStyleURI = null ;\n@@ -150,10 +153,19 @@ public ServiceClient (Transport transport) {\n     \n     public void setTransport(Transport transport) {\n         this.transport = transport;\n+        Debug.Print(1, \"Transport is \" + transport);\n+    }\n+    \n+    public static void setDefaultTransport(Transport transport)\n+    {\n+        defaultTransport = transport;\n     }\n     \n     public Transport getTransportForProtocol(String protocol)\n     {\n+      if (defaultTransport != null)\n+        return defaultTransport;\n+      \n       if (protocol.equals(\"http\"))\n         return new HTTPTransport();\n       \n@@ -188,14 +200,6 @@ public String getEncodingStyleURI() {\n         return( encodingStyleURI );\n     }\n     \n-    public void setTransportRequest(String handlerName) {\n-      msgContext.setProperty( MessageContext.TRANS_REQUEST, handlerName );\n-    }\n-  \n-    public void setTransportResponse(String handlerName) {\n-      msgContext.setProperty( MessageContext.TRANS_RESPONSE, handlerName );\n-    }\n-    \n     public void setRequestMessage(Message msg) {\n         msgContext.setRequestMessage(msg);\n     }",
                "raw_url": "https://github.com/apache/axis1-java/raw/a4808751d9943f6ca121900849e2fc13f4c546c2/src/org/apache/axis/client/ServiceClient.java",
                "sha": "06f93598d505db7a119aeb1b5c0847c99ed7a8f7",
                "status": "modified"
            },
            {
                "additions": 4,
                "blob_url": "https://github.com/apache/axis1-java/blob/a4808751d9943f6ca121900849e2fc13f4c546c2/src/org/apache/axis/registries/SupplierRegistry.java",
                "changes": 4,
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/registries/SupplierRegistry.java?ref=a4808751d9943f6ca121900849e2fc13f4c546c2",
                "deletions": 0,
                "filename": "src/org/apache/axis/registries/SupplierRegistry.java",
                "patch": "@@ -118,6 +118,10 @@ public Handler remove(String key) {\n      */\n     public Handler find(String key) {\n         Debug.Print( 4, \"Enter: SupplierRegistry::find(\", key, \")\" );\n+        if (key == null) {\n+          Debug.Print( 4, \"Exit: SupplierRegistry::find - key is null\" );\n+          return( null );\n+        }\n         if ( suppliers == null ) {\n           Debug.Print( 4, \"Exit: SupplierRegistry::find - suppliers is null\" );\n           return( null );",
                "raw_url": "https://github.com/apache/axis1-java/raw/a4808751d9943f6ca121900849e2fc13f4c546c2/src/org/apache/axis/registries/SupplierRegistry.java",
                "sha": "c3f2a70c0daa3b1a5da2f95e6684fc760bf238d8",
                "status": "modified"
            },
            {
                "additions": 17,
                "blob_url": "https://github.com/apache/axis1-java/blob/a4808751d9943f6ca121900849e2fc13f4c546c2/src/org/apache/axis/server/AxisServer.java",
                "changes": 27,
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/server/AxisServer.java?ref=a4808751d9943f6ca121900849e2fc13f4c546c2",
                "deletions": 10,
                "filename": "src/org/apache/axis/server/AxisServer.java",
                "patch": "@@ -113,7 +113,8 @@ public void stop()\n      */\n     public AxisServer() {\n       super(Constants.SERVER_HANDLER_REGISTRY,\n-            Constants.SERVER_SERVICE_REGISTRY);\n+            Constants.SERVER_SERVICE_REGISTRY,\n+            Constants.SERVER_TRANSPORT_REGISTRY);\n     }\n \n     /**\n@@ -149,14 +150,6 @@ protected void deployDefaultHandlers()\n       c.addHandler( _handlerRegistry.find( \"debug\" ) );\n       deployHandler( \"global.request\", c );\n       \n-      c = new SimpleChain();\n-      c.addHandler( _handlerRegistry.find( \"HTTPAuth\" ) );\n-      c.addHandler( _handlerRegistry.find( \"HTTPAction\" ) );\n-      // deployHandler( \"HTTP.request\", c );\n-      \n-      SimpleTargetedChain transport = new SimpleTargetedChain();\n-      transport.setRequestHandler(c);\n-      deployTransport(\"HTTP.request\", transport);\n     }\n \n     protected void deployDefaultServices()\n@@ -179,7 +172,20 @@ protected void deployDefaultServices()\n \n     protected void deployDefaultTransports()\n     {\n-      // Do nothing.\n+      Chain c = new SimpleChain();\n+      Handler actionHandler = _handlerRegistry.find( \"HTTPAction\" );\n+      c.addHandler( _handlerRegistry.find( \"HTTPAuth\" ) );\n+      c.addHandler( actionHandler );\n+      \n+      // HTTP transport w/authorization\n+      SimpleTargetedChain transport = new SimpleTargetedChain();\n+      transport.setRequestHandler(c);\n+      deployTransport(\"http\", transport);\n+      \n+      // HTTP transport (for SimpleAxisServer) without auth.\n+      transport = new SimpleTargetedChain();\n+      transport.setRequestHandler(actionHandler);\n+      deployTransport(\"SimpleHTTP\", transport);\n     }\n     \n     /**\n@@ -266,6 +272,7 @@ public void invoke(MessageContext msgContext) throws AxisFault {\n               HandlerRegistry tr = getTransportRegistry();\n               SimpleTargetedChain transportChain = null;\n               \n+              Debug.Print(3, \"AxisServer.invoke: Transport = '\" + hName +\"'\");\n               if ( hName != null && (h = tr.find( hName )) != null ) {\n                 if (h instanceof SimpleTargetedChain) {\n                   transportChain = (SimpleTargetedChain)h;",
                "raw_url": "https://github.com/apache/axis1-java/raw/a4808751d9943f6ca121900849e2fc13f4c546c2/src/org/apache/axis/server/AxisServer.java",
                "sha": "d7257b5dc26088b1d4ea6e270efa2e42905b43ec",
                "status": "modified"
            },
            {
                "additions": 21,
                "blob_url": "https://github.com/apache/axis1-java/blob/a4808751d9943f6ca121900849e2fc13f4c546c2/src/org/apache/axis/suppliers/TargetedChainSupplier.java",
                "changes": 35,
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/suppliers/TargetedChainSupplier.java?ref=a4808751d9943f6ca121900849e2fc13f4c546c2",
                "deletions": 14,
                "filename": "src/org/apache/axis/suppliers/TargetedChainSupplier.java",
                "patch": "@@ -95,6 +95,9 @@ public TargetedChainSupplier(String myName,\n     \n     private void addHandlersToChain(Vector names, Chain chain)\n     {\n+      if (names == null)\n+        return;\n+      \n       Enumeration e = names.elements();\n       while (e.hasMoreElements()) {\n         String hName = (String)e.nextElement();\n@@ -114,25 +117,29 @@ public Handler getHandler()\n         c.setOptions(_options);\n         c.setName(_myName);\n         \n-        if (_requestNames.size() == 1) {\n-          h = _registry.find((String)_requestNames.elementAt(0));\n-          c.setRequestHandler(h);\n-        } else {\n-          Chain chain = new SimpleChain();\n-          addHandlersToChain(_requestNames, chain);\n+        if (!_requestNames.isEmpty()) {\n+          if (_requestNames.size() == 1) {\n+            h = _registry.find((String)_requestNames.elementAt(0));\n+            c.setRequestHandler(h);\n+          } else {\n+            Chain chain = new SimpleChain();\n+            addHandlersToChain(_requestNames, chain);\n+            c.setRequestHandler(chain);\n+          }\n         }\n         \n         h = _registry.find(_pivotName);\n-        if (h == null)\n-          return null;  // Should maybe throw an exception here?\n         c.setPivotHandler(h);\n \n-        if (_responseNames.size() == 1) {\n-          h = _registry.find((String)_responseNames.elementAt(0));\n-          c.setRequestHandler(h);\n-        } else {\n-          Chain chain = new SimpleChain();\n-          addHandlersToChain(_responseNames, chain);\n+        if (!_responseNames.isEmpty()) {\n+          if (_responseNames.size() == 1) {\n+            h = _registry.find((String)_responseNames.elementAt(0));\n+            c.setResponseHandler(h);\n+          } else {\n+            Chain chain = new SimpleChain();\n+            addHandlersToChain(_responseNames, chain);\n+            c.setResponseHandler(chain);\n+          }\n         }\n         \n         _chain = c;",
                "raw_url": "https://github.com/apache/axis1-java/raw/a4808751d9943f6ca121900849e2fc13f4c546c2/src/org/apache/axis/suppliers/TargetedChainSupplier.java",
                "sha": "be1bef15b77b6dec3636321cb0cb1a9372f35e0f",
                "status": "modified"
            },
            {
                "additions": 9,
                "blob_url": "https://github.com/apache/axis1-java/blob/a4808751d9943f6ca121900849e2fc13f4c546c2/src/org/apache/axis/transport/http/AxisServlet.java",
                "changes": 27,
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/transport/http/AxisServlet.java?ref=a4808751d9943f6ca121900849e2fc13f4c546c2",
                "deletions": 18,
                "filename": "src/org/apache/axis/transport/http/AxisServlet.java",
                "patch": "@@ -68,32 +68,25 @@\n  */\n public class AxisServlet extends HttpServlet {\n   // These have default values.\n-  private String transportReqName = \"HTTP.request\";\n-  private String transportRespName = \"HTTP.response\";\n+  private String transportName = \"http\";\n \n   private static final String AXIS_ENGINE = \"AxisEngine\" ;\n \n   public void init() {\n-      String param = getInitParameter(\"transport.request\");\n+      String param = getInitParameter(\"transport.name\");\n       ServletContext context = getServletConfig().getServletContext();\n       \n       if (param == null)\n-          param = context.getInitParameter(\"transport.request\");\n+          param = context.getInitParameter(\"transport.name\");\n       if (param != null)\n-          transportReqName = param;\n-      \n-      param = getInitParameter(\"transport.response\");\n-      if (param == null)\n-          param = context.getInitParameter(\"transport.response\");\n-      if (param != null)\n-          transportRespName = param;\n+          transportName = param;      \n   }\n \n   public void doGet(HttpServletRequest req, HttpServletResponse res)\n                 throws ServletException, IOException {\n     res.setContentType(\"text/html\");\n-    res.getWriter().println( \"In doGet\" );\n-    res.getWriter().println(\" Request = \" + transportReqName);\n+    res.getWriter().println( \"In doGet<p>\" );\n+    res.getWriter().println(\" TransportName = \" + transportName);\n   }\n \n   public void doPost(HttpServletRequest req, HttpServletResponse res)\n@@ -118,11 +111,9 @@ public void doPost(HttpServletRequest req, HttpServletResponse res)\n     /**********************************************************/\n     msgContext.setRequestMessage( msg );\n \n-    /* Set the Transport Specific Request/Response chains IDs */\n-    /******************************************************/\n-    msgContext.setProperty(MessageContext.TRANS_REQUEST , transportReqName );\n-    msgContext.setProperty(MessageContext.TRANS_RESPONSE, transportRespName );\n-    msgContext.setTransportName(transportReqName);\n+    /* Set the Transport */\n+    /*********************/\n+    msgContext.setTransportName(transportName);\n \n     /* Save some HTTP specific info in the bag in case a handler needs it */\n     /**********************************************************************/",
                "raw_url": "https://github.com/apache/axis1-java/raw/a4808751d9943f6ca121900849e2fc13f4c546c2/src/org/apache/axis/transport/http/AxisServlet.java",
                "sha": "948489ddb6f0cf672c0ec3c2ed75455789846925",
                "status": "modified"
            },
            {
                "additions": 3,
                "blob_url": "https://github.com/apache/axis1-java/blob/a4808751d9943f6ca121900849e2fc13f4c546c2/src/org/apache/axis/transport/http/SimpleAxisServer.java",
                "changes": 11,
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/transport/http/SimpleAxisServer.java?ref=a4808751d9943f6ca121900849e2fc13f4c546c2",
                "deletions": 8,
                "filename": "src/org/apache/axis/transport/http/SimpleAxisServer.java",
                "patch": "@@ -126,9 +126,7 @@ private static synchronized AxisServer getAxisServer() {\n     private static byte cannedResponse[] = \"<empty/>\".getBytes();\n \n     // Axis specific constants\n-    private static String transportReqName = \"HTTPAction\";\n-    private static String transportRespName = \"HTTP.response\";\n-    //private static final String AXIS_ENGINE = \"AxisEngine\" ;\n+    private static String transportName = \"SimpleHTTP\";\n     \n     // are we stopped?\n     // latch to true if stop() is called\n@@ -149,8 +147,6 @@ public void run() {\n         // create and initialize a message context\n         MessageContext msgContext = new MessageContext(engine);\n         Message        requestMsg;\n-        msgContext.setProperty(MessageContext.TRANS_REQUEST , transportReqName);\n-        msgContext.setProperty(MessageContext.TRANS_RESPONSE, transportRespName);\n \n         // Reusuable, buffered, content length controlled, InputStream\n         NonBlockingBufferedInputStream is =\n@@ -177,9 +173,8 @@ public void run() {\n             msgContext.setTargetService(null);\n             msgContext.setResponseMessage(null);\n             msgContext.clearProperties();\n-            msgContext.setProperty(\"transport\", \"HTTPTransport\");\n-            msgContext.setProperty(MessageContext.TRANS_REQUEST, transportReqName);\n-            msgContext.setProperty(MessageContext.TRANS_RESPONSE, transportRespName);\n+            //msgContext.setProperty(\"transport\", \"HTTPTransport\");\n+            msgContext.setTransportName(transportName);\n             \n             try {\n                 try {",
                "raw_url": "https://github.com/apache/axis1-java/raw/a4808751d9943f6ca121900849e2fc13f4c546c2/src/org/apache/axis/transport/http/SimpleAxisServer.java",
                "sha": "70fba8275326c97c8822e1e7ebcf00964dd99727",
                "status": "modified"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/axis1-java/blob/a4808751d9943f6ca121900849e2fc13f4c546c2/src/org/apache/axis/transport/local/LocalSender.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/transport/local/LocalSender.java?ref=a4808751d9943f6ca121900849e2fc13f4c546c2",
                "deletions": 1,
                "filename": "src/org/apache/axis/transport/local/LocalSender.java",
                "patch": "@@ -100,7 +100,7 @@ public void invoke(MessageContext clientContext) throws AxisFault {\n     String action = clientContext.getStrProp(HTTPConstants.MC_HTTP_SOAPACTION);\n     if (action != null) {\n        serverContext.setProperty(HTTPConstants.MC_HTTP_SOAPACTION, action);\n-       serverContext.setProperty(MessageContext.TRANS_REQUEST , \"HTTPAction\");\n+       serverContext.setTransportName(\"http\");\n     }\n \n     // set the realpath if possible",
                "raw_url": "https://github.com/apache/axis1-java/raw/a4808751d9943f6ca121900849e2fc13f4c546c2/src/org/apache/axis/transport/local/LocalSender.java",
                "sha": "ddf3bd354a65ba42e176600a90d87e5a74c95d83",
                "status": "modified"
            },
            {
                "additions": 29,
                "blob_url": "https://github.com/apache/axis1-java/blob/a4808751d9943f6ca121900849e2fc13f4c546c2/src/org/apache/axis/utils/Admin.java",
                "changes": 54,
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/utils/Admin.java?ref=a4808751d9943f6ca121900849e2fc13f4c546c2",
                "deletions": 25,
                "filename": "src/org/apache/axis/utils/Admin.java",
                "patch": "@@ -119,7 +119,7 @@ private static void registerTypeMappings(Element root, SOAPService service)\n     throws Exception\n   {\n     NodeList list = root.getElementsByTagName(\"bean\");\n-    Debug.Print(1, \"Registering \" + list.getLength() + \" service-specific beans.\");\n+    Debug.Print(2, \"Registering \" + list.getLength() + \" service-specific beans.\");\n     for (int i = 0; list != null && i < list.getLength(); i++) {\n       Element el = (Element)list.item(i);\n       registerBeanMapping(el, service.getTypeMappingRegistry());\n@@ -187,12 +187,18 @@ public Document process(MessageContext msgContext, Element root) throws AxisFaul\n         Element tmpEl = doc.createElement(\"engineConfig\");\n         doc.appendChild(tmpEl);\n         \n-        Element el = list(doc, engine, false);\n+        Element el = doc.createElement(\"handlers\");\n+        list(el, engine.getHandlerRegistry());\n         tmpEl.appendChild(el);\n         \n-        el = list(doc, engine, true);\n+        el = doc.createElement(\"services\");\n+        list(el, engine.getServiceRegistry());\n         tmpEl.appendChild(el);\n         \n+        el = doc.createElement(\"transports\");\n+        list(el, engine.getTransportRegistry());\n+        tmpEl.appendChild(el);\n+\n         return( doc );\n       }\n   \n@@ -269,25 +275,17 @@ else if ( type.equals( \"bean\" ) ) {\n    * @return Element our config element, suitable for pumping back through\n    *                 Admin processing later, to redeploy.\n    */\n-  public static Element list(Document doc, AxisEngine engine, boolean doServices)\n+  public static Element list(Element root, HandlerRegistry registry)\n     throws AxisFault\n   {\n-    String elementName = doServices ? \"services\" : \"handlers\";\n-    Element root = doc.createElement( elementName );\n+    Document doc = root.getOwnerDocument();\n \n     Element    elem = null ;\n     Hashtable  opts = null ;\n     String[]   names ;\n     Handler    h ;\n     int        i ;\n     \n-    HandlerRegistry registry;\n-    if (doServices) {\n-      registry = engine.getServiceRegistry();\n-    } else {\n-      registry = engine.getHandlerRegistry();\n-    }\n-\n     names = registry.list();\n \n     for( i = 0 ; names != null && i < names.length ; i++ ) {\n@@ -373,6 +371,8 @@ public static void registerChain(Element elem, AxisEngine engine)\n                                                              hr);\n       hr.add(name,supp);\n     }\n+    \n+    engine.saveHandlerRegistry();\n   }\n   \n   /**\n@@ -512,11 +512,9 @@ public static void registerHandler(Element elem, AxisEngine engine)\n   public static void registerTransport(Element elem, AxisEngine engine)\n     throws AxisFault\n   {\n-    SupplierRegistry tr = engine.getTransportRegistry();\n-    \n     String   name    = elem.getAttribute( \"name\" );\n     String   request   = elem.getAttribute( \"request\" );\n-    String   sender   = elem.getAttribute( \"sender\" );\n+    String   sender   = elem.getAttribute( \"pivot\" );\n     String   response  = elem.getAttribute( \"response\" );\n     Hashtable options = new Hashtable();\n \n@@ -530,24 +528,30 @@ public static void registerTransport(Element elem, AxisEngine engine)\n     Vector reqNames = new Vector();\n     Vector respNames = new Vector();\n \n-    st = new StringTokenizer( request, \" \\t\\n\\r\\f,\" );\n-    while ( st.hasMoreElements() ) {\n-      reqNames.addElement(st.nextToken());\n+    if (request != null) {\n+      st = new StringTokenizer( request, \" \\t\\n\\r\\f,\" );\n+      while ( st.hasMoreElements() ) {\n+        reqNames.addElement(st.nextToken());\n+      }\n+    }\n+\n+    if (response != null) {\n+      st = new StringTokenizer( response, \" \\t\\n\\r\\f,\" );\n+      while ( st.hasMoreElements() ) {\n+        respNames.addElement(st.nextToken());\n+      }\n     }\n     \n-    st = new StringTokenizer( response, \" \\t\\n\\r\\f,\" );\n-    while ( st.hasMoreElements() ) {\n-      respNames.addElement(st.nextToken());\n-    }\n     getOptions( elem, options );\n     \n+    HandlerRegistry hr = engine.getHandlerRegistry();\n     TargetedChainSupplier supp = new TargetedChainSupplier(name,\n                                                            reqNames,\n                                                            respNames,\n                                                            sender,\n                                                            options,\n-                                                           tr);\n-    tr.add(name,supp);\n+                                                           hr);\n+    engine.deployTransport(name, supp);\n   }\n \n   /**",
                "raw_url": "https://github.com/apache/axis1-java/raw/a4808751d9943f6ca121900849e2fc13f4c546c2/src/org/apache/axis/utils/Admin.java",
                "sha": "38f34231a0bbb3235139b8f48c624058a72b4567",
                "status": "modified"
            }
        ],
        "message": "Various changes to get the new transport architecture working.\n\n* use MessageContext.transportName everywhere, remove TRANS_REQUEST/\n  TRANS_RESPONSE properties.\n\n* deploy tranports to/from their own registry file.  Persistence and\n  deployment of Handlers/TypeMappings/Transports/Services needs to be\n  given some more thought in terms of cleanliness, J2EE integration,\n  and component packaging...\n\n* fix various places which might generate NPEs\n\n* clean up Admin.list() to be able to use any registry.\n\n* deploy two default http transports, a secure one (with HTTPAuth)\n  for the servlet and a non-secure one for SimpleAxisServer.\n\n* ServiceClient now has a static \"defaultTransport\" member which,\n  if set, overrides the lookup-by-URL.  This enables the TCP\n  AdminClient to work again, but should be more cleanly architected\n  (how do we expect to convey which transport to use?)\n\n* fix a couple of bugs in TargetedChainSupplier\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis1/trunk/java@245004 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/axis1-java/commit/a71e35faeaf76681b84b8acdea61f5daeae73869",
        "repo": "axis1-java",
        "unit_tests": [
            "AdminTest.java"
        ]
    },
    "axis1-java_a552384": {
        "bug_id": "axis1-java_a552384",
        "commit": "https://github.com/apache/axis1-java/commit/a552384659d5b51af6fcbca48eb2b545c30d1701",
        "file": [
            {
                "additions": 12,
                "blob_url": "https://github.com/apache/axis1-java/blob/a552384659d5b51af6fcbca48eb2b545c30d1701/src/org/apache/axis/description/ServiceDesc.java",
                "changes": 22,
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/description/ServiceDesc.java?ref=a552384659d5b51af6fcbca48eb2b545c30d1701",
                "deletions": 10,
                "filename": "src/org/apache/axis/description/ServiceDesc.java",
                "patch": "@@ -657,16 +657,18 @@ private void syncOperationToClass(OperationDesc oper, Class implClass)\n                             paramClass = tm.getClassForQName(param.getTypeQName());\n                         }\n \n-                        // This is a match if the paramClass is somehow\n-                        // convertable to the \"real\" parameter type.  If not,\n-                        // break out of this loop.\n-                        if (!JavaUtils.isConvertable(paramClass, actualType)) {\n-                            break;\n-                        }\n-                        \n-                        if (!actualType.isAssignableFrom(paramClass)) {\n-                            // This doesn't fit without conversion\n-                            conversionNecessary = true;\n+                        if (paramClass != null) {\n+                            // This is a match if the paramClass is somehow\n+                            // convertable to the \"real\" parameter type.  If not,\n+                            // break out of this loop.\n+                            if (!JavaUtils.isConvertable(paramClass, actualType)) {\n+                                break;\n+                            }\n+                            \n+                            if (!actualType.isAssignableFrom(paramClass)) {\n+                                // This doesn't fit without conversion\n+                                conversionNecessary = true;\n+                            }\n                         }\n                     }\n                     // In all scenarios the ParameterDesc javaType is set to",
                "raw_url": "https://github.com/apache/axis1-java/raw/a552384659d5b51af6fcbca48eb2b545c30d1701/src/org/apache/axis/description/ServiceDesc.java",
                "sha": "0f82326b9c1914680d74a6a0033be3be3f81563f",
                "status": "modified"
            }
        ],
        "message": "Prevent NPE in case there are problems finding the paramClass\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis1/trunk/java@249138 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/axis1-java/commit/6a9d74e072f38bb6639efd1c8de79e288ed11800",
        "repo": "axis1-java",
        "unit_tests": [
            "TestServiceDesc.java"
        ]
    },
    "axis1-java_afda30b": {
        "bug_id": "axis1-java_afda30b",
        "commit": "https://github.com/apache/axis1-java/commit/afda30bd0d2c04d7181278e00fc034c82c912b2a",
        "file": [
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/axis1-java/blob/afda30bd0d2c04d7181278e00fc034c82c912b2a/build.xml",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/build.xml?ref=afda30bd0d2c04d7181278e00fc034c82c912b2a",
                "deletions": 1,
                "filename": "build.xml",
                "patch": "@@ -352,7 +352,7 @@ Copyright:\n   <!-- =================================================================== -->\n   <!-- Creates the binary distribution                                     -->\n   <!-- =================================================================== -->\n-  <target name=\"dist\" depends=\"compile, junit, samples, javadocs\" >\n+  <target name=\"dist\" depends=\"compile, javadocs, samples, junit\" >\n     <mkdir dir=\"${dist.dir}\"/>\n     <mkdir dir=\"${dist.dir}/docs\"/>\n     <mkdir dir=\"${dist.dir}/docs/apiDocs\"/>",
                "raw_url": "https://github.com/apache/axis1-java/raw/afda30bd0d2c04d7181278e00fc034c82c912b2a/build.xml",
                "sha": "cfa78eb315a6e87f8637b97a4b7187e467af32ee",
                "status": "modified"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/axis1-java/blob/afda30bd0d2c04d7181278e00fc034c82c912b2a/src/org/apache/axis/utils/Admin.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/utils/Admin.java?ref=afda30bd0d2c04d7181278e00fc034c82c912b2a",
                "deletions": 1,
                "filename": "src/org/apache/axis/utils/Admin.java",
                "patch": "@@ -383,7 +383,7 @@ public Document process(MessageContext msgContext, Element root)\n         AxisEngine engine = msgContext.getAxisEngine();\n         \n         // If this is WSDD, process it correctly.\n-        if (rootNS.equals(WSDDConstants.WSDD_NS)) {\n+        if (rootNS != null && rootNS.equals(WSDDConstants.WSDD_NS)) {\n             return processWSDD(engine, root);\n         }\n ",
                "raw_url": "https://github.com/apache/axis1-java/raw/afda30bd0d2c04d7181278e00fc034c82c912b2a/src/org/apache/axis/utils/Admin.java",
                "sha": "2db593def8632b03e3a725dbe36e2009ca31c1d9",
                "status": "modified"
            }
        ],
        "message": "Fix NPE.\nChange order of build - seemed odd that we ran junit before we built\neverything.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis1/trunk/java@245713 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/axis1-java/commit/3150b9829baf5888cb2ed7dbd89b0ad3dfd9e626",
        "repo": "axis1-java",
        "unit_tests": [
            "AdminTest.java"
        ]
    },
    "axis1-java_be8ce0b": {
        "bug_id": "axis1-java_be8ce0b",
        "commit": "https://github.com/apache/axis1-java/commit/be8ce0bfd312d790f2ce9246df23e57e553e7c03",
        "file": [
            {
                "additions": 5,
                "blob_url": "https://github.com/apache/axis1-java/blob/be8ce0bfd312d790f2ce9246df23e57e553e7c03/src/org/apache/axis/message/SOAPFault.java",
                "changes": 8,
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/message/SOAPFault.java?ref=be8ce0bfd312d790f2ce9246df23e57e553e7c03",
                "deletions": 3,
                "filename": "src/org/apache/axis/message/SOAPFault.java",
                "patch": "@@ -212,9 +212,11 @@ private QName getFaultQName(Class cls, SerializationContext context) {\n         QName qname = null;       \n         if (! cls.equals(AxisFault.class)) {\n             FaultDesc faultDesc = null;\n-            OperationDesc op = context.getMessageContext().getOperation();\n-            if(op != null) {\n-                faultDesc = op.getFaultByClass(cls);\n+            if (context.getMessageContext() != null) {\n+                OperationDesc op = context.getMessageContext().getOperation();\n+                if (op != null) {\n+                    faultDesc = op.getFaultByClass(cls);\n+                }\n             }\n                 \n             if (faultDesc != null) {",
                "raw_url": "https://github.com/apache/axis1-java/raw/be8ce0bfd312d790f2ce9246df23e57e553e7c03/src/org/apache/axis/message/SOAPFault.java",
                "sha": "7d8a4227ae10c094b6a566e0ae9ee474d04a1b8d",
                "status": "modified"
            }
        ],
        "message": "Fix for Bug 20653 - AxisFault during config processing gives NPE\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis1/trunk/java@256216 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/axis1-java/commit/d55d54c442988e0e6a1a932043147389fd45d058",
        "repo": "axis1-java",
        "unit_tests": [
            "TestSOAPFault.java"
        ]
    },
    "axis1-java_bf4dfd4": {
        "bug_id": "axis1-java_bf4dfd4",
        "commit": "https://github.com/apache/axis1-java/commit/bf4dfd4d6404711ce858a49dbf87e68bd3dd46ea",
        "file": [
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/axis1-java/blob/bf4dfd4d6404711ce858a49dbf87e68bd3dd46ea/src/org/apache/axis/message/SOAPHeader.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/message/SOAPHeader.java?ref=bf4dfd4d6404711ce858a49dbf87e68bd3dd46ea",
                "deletions": 1,
                "filename": "src/org/apache/axis/message/SOAPHeader.java",
                "patch": "@@ -94,7 +94,7 @@\n     SOAPHeader(SOAPEnvelope env, SOAPConstants soapConsts) {\n         super(Constants.ELEM_HEADER,\n               Constants.NS_PREFIX_SOAP_ENV,\n-              soapConsts.getEnvelopeURI());\n+              soapConsts != null? soapConsts.getEnvelopeURI() : SOAPConstants.SOAP11_CONSTANTS.getEnvelopeURI());\n         soapConstants = soapConsts;\n         try {\n             setParentElement(env);",
                "raw_url": "https://github.com/apache/axis1-java/raw/bf4dfd4d6404711ce858a49dbf87e68bd3dd46ea/src/org/apache/axis/message/SOAPHeader.java",
                "sha": "bfc61828efd0604afd7386ecb73b27cbf8a3c190",
                "status": "modified"
            }
        ],
        "message": "Prevent NPE\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis1/trunk/java@249019 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/axis1-java/commit/d48862e9424f6b1dec30dfa92dad2b6211f83640",
        "repo": "axis1-java",
        "unit_tests": [
            "TestSOAPHeader.java"
        ]
    },
    "axis1-java_c2172c1": {
        "bug_id": "axis1-java_c2172c1",
        "commit": "https://github.com/apache/axis1-java/commit/c2172c1b9cdd58eef089447fd4674367c6c929f0",
        "file": [
            {
                "additions": 3,
                "blob_url": "https://github.com/apache/axis1-java/blob/c2172c1b9cdd58eef089447fd4674367c6c929f0/src/org/apache/axis/client/Call.java",
                "changes": 3,
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/client/Call.java?ref=c2172c1b9cdd58eef089447fd4674367c6c929f0",
                "deletions": 0,
                "filename": "src/org/apache/axis/client/Call.java",
                "patch": "@@ -376,6 +376,9 @@ public void setOperation(QName portName, String opName)\n         ////////////////////////////////////////////////////////////////////\n         BindingOperation bop = binding.getBindingOperation(opName,\n                                                            null, null);\n+        if ( bop == null )\n+            throw new JAXRPCException( JavaUtils.getMessage(\"noOperation02\",\n+                                                            opName ));\n         this.removeProperty(HTTPConstants.MC_HTTP_SOAPACTION);\n         list = bop.getExtensibilityElements();\n         for ( int i = 0 ; list != null && i < list.size() ; i++ ) {",
                "raw_url": "https://github.com/apache/axis1-java/raw/c2172c1b9cdd58eef089447fd4674367c6c929f0/src/org/apache/axis/client/Call.java",
                "sha": "5bc33822ffff2f92d8297d1c0b3bf946fa82e25b",
                "status": "modified"
            }
        ],
        "message": "check for NPE\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis1/trunk/java@252989 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/axis1-java/commit/30ecaedc15c97d00c5114a08ec33118c5aad1140",
        "repo": "axis1-java",
        "unit_tests": [
            "TestCall.java"
        ]
    },
    "axis1-java_df55966": {
        "bug_id": "axis1-java_df55966",
        "commit": "https://github.com/apache/axis1-java/commit/df55966fe9172c7af910b2021e77b079846a8926",
        "file": [
            {
                "additions": 15,
                "blob_url": "https://github.com/apache/axis1-java/blob/df55966fe9172c7af910b2021e77b079846a8926/src/org/apache/axis/utils/Admin.java",
                "changes": 27,
                "contents_url": "https://api.github.com/repos/apache/axis1-java/contents/src/org/apache/axis/utils/Admin.java?ref=df55966fe9172c7af910b2021e77b079846a8926",
                "deletions": 12,
                "filename": "src/org/apache/axis/utils/Admin.java",
                "patch": "@@ -279,22 +279,25 @@ public Document process(MessageContext msgContext, Element root)\n             /** For now, though - make sure we can only admin from our own\n              * IP, unless the remoteAdmin option is set.\n              */\n-            String remoteAdmin = (String)msgContext.getServiceHandler().\n+            Handler serviceHandler = msgContext.getServiceHandler();\n+            if (serviceHandler != null) {\n+                String remoteAdmin = (String)serviceHandler.\n                                             getOption(\"enableRemoteAdmin\");\n-            if ((remoteAdmin == null) ||\n-                !remoteAdmin.equals(\"true\")) {\n-                String remoteIP =\n+                if ((remoteAdmin == null) ||\n+                    !remoteAdmin.equals(\"true\")) {\n+                    String remoteIP =\n                             msgContext.getStrProp(Constants.MC_REMOTE_ADDR);\n-                if (remoteIP != null) {\n-                    if (!remoteIP.equals(\"127.0.0.1\")) {\n-                        InetAddress myAddr = InetAddress.getLocalHost();\n-                        InetAddress remoteAddr =\n+                    if (remoteIP != null) {\n+                        if (!remoteIP.equals(\"127.0.0.1\")) {\n+                            InetAddress myAddr = InetAddress.getLocalHost();\n+                            InetAddress remoteAddr =\n                                             InetAddress.getByName(remoteIP);\n                         \n-                        if (!myAddr.equals(remoteAddr))\n-                            throw new AxisFault(\"Server.Unauthorized\",\n-                                \"Remote admin access is not allowed! \",\n-                                null, null);\n+                            if (!myAddr.equals(remoteAddr))\n+                                throw new AxisFault(\"Server.Unauthorized\",\n+                                    \"Remote admin access is not allowed! \",\n+                                    null, null);\n+                        }\n                     }\n                 }\n             }",
                "raw_url": "https://github.com/apache/axis1-java/raw/df55966fe9172c7af910b2021e77b079846a8926/src/org/apache/axis/utils/Admin.java",
                "sha": "cff0a3c55425ada1dc9d5fd44940562474030cbf",
                "status": "modified"
            }
        ],
        "message": "Fix potential NPE.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/axis1/trunk/java@245121 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/axis1-java/commit/87e83836737f89644e7373a9df7514b8fec9e97a",
        "repo": "axis1-java",
        "unit_tests": [
            "AdminTest.java"
        ]
    }
}