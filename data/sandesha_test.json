{
    "sandesha_2e791ba": {
        "bug_id": "sandesha_2e791ba",
        "commit": "https://github.com/apache/sandesha/commit/2e791bafea8367239c594302f73069340f8981e3",
        "file": [
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/sandesha/blob/2e791bafea8367239c594302f73069340f8981e3/modules/core/src/main/java/org/apache/sandesha2/handlers/SandeshaGlobalInHandler.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/sandesha/contents/modules/core/src/main/java/org/apache/sandesha2/handlers/SandeshaGlobalInHandler.java?ref=2e791bafea8367239c594302f73069340f8981e3",
                "deletions": 1,
                "filename": "modules/core/src/main/java/org/apache/sandesha2/handlers/SandeshaGlobalInHandler.java",
                "patch": "@@ -157,7 +157,7 @@ private static void processApplicationMessage(RMMsgContext rmMsgCtx) throws Axis\n     if (log.isDebugEnabled())\n       log.debug(\"Enter: SandeshaGlobalInHandler::processApplicationMessage\");\n     // Check if this is a duplicate message\n-    Sequence sequence = (Sequence) rmMsgCtx.getSequence();\n+    Sequence sequence = rmMsgCtx.getSequence();\n     String sequenceId = sequence.getIdentifier().getIdentifier();\n     long msgNo = sequence.getMessageNumber().getMessageNumber();\n ",
                "raw_url": "https://github.com/apache/sandesha/raw/2e791bafea8367239c594302f73069340f8981e3/modules/core/src/main/java/org/apache/sandesha2/handlers/SandeshaGlobalInHandler.java",
                "sha": "3c76b57f152bd35b13e92ce91e8fdd842242b72f",
                "status": "modified"
            },
            {
                "additions": 0,
                "blob_url": "https://github.com/apache/sandesha/blob/2e791bafea8367239c594302f73069340f8981e3/modules/core/src/main/java/org/apache/sandesha2/msgprocessors/AckRequestedProcessor.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/sandesha/contents/modules/core/src/main/java/org/apache/sandesha2/msgprocessors/AckRequestedProcessor.java?ref=2e791bafea8367239c594302f73069340f8981e3",
                "deletions": 2,
                "filename": "modules/core/src/main/java/org/apache/sandesha2/msgprocessors/AckRequestedProcessor.java",
                "patch": "@@ -43,8 +43,6 @@\n import org.apache.sandesha2.i18n.SandeshaMessageHelper;\n import org.apache.sandesha2.i18n.SandeshaMessageKeys;\n import org.apache.sandesha2.policy.SandeshaPolicyBean;\n-import org.apache.sandesha2.security.SecurityManager;\n-import org.apache.sandesha2.security.SecurityToken;\n import org.apache.sandesha2.storage.StorageManager;\n import org.apache.sandesha2.storage.beanmanagers.SenderBeanMgr;\n import org.apache.sandesha2.storage.beans.RMDBean;",
                "raw_url": "https://github.com/apache/sandesha/raw/2e791bafea8367239c594302f73069340f8981e3/modules/core/src/main/java/org/apache/sandesha2/msgprocessors/AckRequestedProcessor.java",
                "sha": "8cddf244b846de81cc572a5e43efb311f004547c",
                "status": "modified"
            },
            {
                "additions": 0,
                "blob_url": "https://github.com/apache/sandesha/blob/2e791bafea8367239c594302f73069340f8981e3/modules/core/src/main/java/org/apache/sandesha2/msgprocessors/AcknowledgementProcessor.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/sandesha/contents/modules/core/src/main/java/org/apache/sandesha2/msgprocessors/AcknowledgementProcessor.java?ref=2e791bafea8367239c594302f73069340f8981e3",
                "deletions": 2,
                "filename": "modules/core/src/main/java/org/apache/sandesha2/msgprocessors/AcknowledgementProcessor.java",
                "patch": "@@ -36,8 +36,6 @@\n import org.apache.sandesha2.i18n.SandeshaMessageHelper;\n import org.apache.sandesha2.i18n.SandeshaMessageKeys;\n import org.apache.sandesha2.polling.PollingManager;\n-import org.apache.sandesha2.security.SecurityManager;\n-import org.apache.sandesha2.security.SecurityToken;\n import org.apache.sandesha2.storage.StorageManager;\n import org.apache.sandesha2.storage.beanmanagers.RMDBeanMgr;\n import org.apache.sandesha2.storage.beanmanagers.SenderBeanMgr;",
                "raw_url": "https://github.com/apache/sandesha/raw/2e791bafea8367239c594302f73069340f8981e3/modules/core/src/main/java/org/apache/sandesha2/msgprocessors/AcknowledgementProcessor.java",
                "sha": "88556b755a18839f7a22078c2a84e09d7a5f1cda",
                "status": "modified"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/sandesha/blob/2e791bafea8367239c594302f73069340f8981e3/modules/core/src/main/java/org/apache/sandesha2/msgprocessors/ApplicationMsgProcessor.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/sandesha/contents/modules/core/src/main/java/org/apache/sandesha2/msgprocessors/ApplicationMsgProcessor.java?ref=2e791bafea8367239c594302f73069340f8981e3",
                "deletions": 1,
                "filename": "modules/core/src/main/java/org/apache/sandesha2/msgprocessors/ApplicationMsgProcessor.java",
                "patch": "@@ -491,7 +491,7 @@ private RMSBean addCreateSequenceMessage(RMMsgContext applicationRMMsg, RMSBean\n \t\tRMMsgContext createSeqRMMessage = RMMsgCreator.createCreateSeqMsg(rmsBean, applicationRMMsg);\n \n \t\tcreateSeqRMMessage.setFlow(MessageContext.OUT_FLOW);\n-\t\tCreateSequence createSequencePart = (CreateSequence) createSeqRMMessage.getCreateSequence();\n+\t\tCreateSequence createSequencePart = createSeqRMMessage.getCreateSequence();\n \n \t\tSequenceOffer offer = createSequencePart.getSequenceOffer();\n \t\tif (offer != null) {",
                "raw_url": "https://github.com/apache/sandesha/raw/2e791bafea8367239c594302f73069340f8981e3/modules/core/src/main/java/org/apache/sandesha2/msgprocessors/ApplicationMsgProcessor.java",
                "sha": "803d94bf6c1bf053ad3e7d0b598a49dec241be1c",
                "status": "modified"
            },
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/sandesha/blob/2e791bafea8367239c594302f73069340f8981e3/modules/core/src/main/java/org/apache/sandesha2/msgprocessors/CloseSequenceProcessor.java",
                "changes": 7,
                "contents_url": "https://api.github.com/repos/apache/sandesha/contents/modules/core/src/main/java/org/apache/sandesha2/msgprocessors/CloseSequenceProcessor.java?ref=2e791bafea8367239c594302f73069340f8981e3",
                "deletions": 5,
                "filename": "modules/core/src/main/java/org/apache/sandesha2/msgprocessors/CloseSequenceProcessor.java",
                "patch": "@@ -21,7 +21,6 @@\n \n import java.util.Iterator;\n \n-import org.apache.axiom.om.OMElement;\n import org.apache.axis2.AxisFault;\n import org.apache.axis2.context.ConfigurationContext;\n import org.apache.axis2.context.MessageContext;\n@@ -36,8 +35,6 @@\n import org.apache.sandesha2.SandeshaException;\n import org.apache.sandesha2.i18n.SandeshaMessageHelper;\n import org.apache.sandesha2.i18n.SandeshaMessageKeys;\n-import org.apache.sandesha2.security.SecurityManager;\n-import org.apache.sandesha2.security.SecurityToken;\n import org.apache.sandesha2.storage.StorageManager;\n import org.apache.sandesha2.storage.Transaction;\n import org.apache.sandesha2.storage.beans.RMDBean;\n@@ -65,7 +62,7 @@ public boolean processInMessage(RMMsgContext rmMsgCtx, Transaction transaction)\n \t\t\tlog.debug(\"Enter: CloseSequenceProcessor::processInMessage\");\n \n \t\tConfigurationContext configCtx = rmMsgCtx.getMessageContext().getConfigurationContext();\n-\t\tCloseSequence closeSequence = (CloseSequence) rmMsgCtx.getCloseSequence();\n+\t\tCloseSequence closeSequence = rmMsgCtx.getCloseSequence();\n \n \t\tMessageContext msgCtx = rmMsgCtx.getMessageContext();\n \n@@ -159,7 +156,7 @@ public boolean processOutMessage(RMMsgContext rmMsgCtx, Transaction transaction)\n \t\tgetConfigurationContext().registerOperationContext(rmMsgCtx.getMessageId(),opcontext);\n \t\tgetMsgContext().setOperationContext(opcontext);\n \t\t\n-\t\tCloseSequence closeSequencePart = (CloseSequence) rmMsgCtx.getCloseSequence();\n+\t\tCloseSequence closeSequencePart = rmMsgCtx.getCloseSequence();\n \t\tIdentifier identifier = closeSequencePart.getIdentifier();\n \t\tif (identifier==null) {\n \t\t\tidentifier = new Identifier (closeSequencePart.getNamespaceValue());",
                "raw_url": "https://github.com/apache/sandesha/raw/2e791bafea8367239c594302f73069340f8981e3/modules/core/src/main/java/org/apache/sandesha2/msgprocessors/CloseSequenceProcessor.java",
                "sha": "93e255ad3b55abc0552e11d9018f5f79b5ac6fd5",
                "status": "modified"
            },
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/sandesha/blob/2e791bafea8367239c594302f73069340f8981e3/modules/core/src/main/java/org/apache/sandesha2/msgprocessors/CreateSeqMsgProcessor.java",
                "changes": 4,
                "contents_url": "https://api.github.com/repos/apache/sandesha/contents/modules/core/src/main/java/org/apache/sandesha2/msgprocessors/CreateSeqMsgProcessor.java?ref=2e791bafea8367239c594302f73069340f8981e3",
                "deletions": 2,
                "filename": "modules/core/src/main/java/org/apache/sandesha2/msgprocessors/CreateSeqMsgProcessor.java",
                "patch": "@@ -74,7 +74,7 @@ public boolean processInMessage(RMMsgContext createSeqRMMsg, Transaction transac\n \n \t\ttry {\n \t\t\t\n-\t\t\tCreateSequence createSeqPart = (CreateSequence) createSeqRMMsg.getCreateSequence();\n+\t\t\tCreateSequence createSeqPart = createSeqRMMsg.getCreateSequence();\n \t\t\tif (createSeqPart == null) {\n \t\t\t\tif (log.isDebugEnabled())\n \t\t\t\t\tlog.debug(SandeshaMessageHelper.getMessage(SandeshaMessageKeys.noCreateSeqParts));\n@@ -152,7 +152,7 @@ public boolean processInMessage(RMMsgContext createSeqRMMsg, Transaction transac\n \t\t\t// for making sure that this won't be processed again\n \t\t\tcreateSeqResponse.setProperty(Sandesha2Constants.APPLICATION_PROCESSING_DONE, \"true\"); \n \t\t\t\n-\t\t\tCreateSequenceResponse createSeqResPart = (CreateSequenceResponse) createSeqResponse.getCreateSequenceResponse();\n+\t\t\tCreateSequenceResponse createSeqResPart = createSeqResponse.getCreateSequenceResponse();\n \t\n \t\t\t\t// OFFER PROCESSING\n \t\t\tSequenceOffer offer = createSeqPart.getSequenceOffer();",
                "raw_url": "https://github.com/apache/sandesha/raw/2e791bafea8367239c594302f73069340f8981e3/modules/core/src/main/java/org/apache/sandesha2/msgprocessors/CreateSeqMsgProcessor.java",
                "sha": "2556030741d8a013065d228d3e81e224d5716bf6",
                "status": "modified"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/sandesha/blob/2e791bafea8367239c594302f73069340f8981e3/modules/core/src/main/java/org/apache/sandesha2/msgprocessors/CreateSeqResponseMsgProcessor.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/sandesha/contents/modules/core/src/main/java/org/apache/sandesha2/msgprocessors/CreateSeqResponseMsgProcessor.java?ref=2e791bafea8367239c594302f73069340f8981e3",
                "deletions": 1,
                "filename": "modules/core/src/main/java/org/apache/sandesha2/msgprocessors/CreateSeqResponseMsgProcessor.java",
                "patch": "@@ -69,7 +69,7 @@ public boolean processInMessage(RMMsgContext createSeqResponseRMMsgCtx, Transact\n \n \t\t// Processing the create sequence response.\n \n-\t\tCreateSequenceResponse createSeqResponsePart = (CreateSequenceResponse) createSeqResponseRMMsgCtx.getCreateSequenceResponse();\n+\t\tCreateSequenceResponse createSeqResponsePart = createSeqResponseRMMsgCtx.getCreateSequenceResponse();\n \t\tif (createSeqResponsePart == null) {\n \t\t\tString message = SandeshaMessageHelper.getMessage(SandeshaMessageKeys.noCreateSeqResponse);\n \t\t\tlog.debug(message);",
                "raw_url": "https://github.com/apache/sandesha/raw/2e791bafea8367239c594302f73069340f8981e3/modules/core/src/main/java/org/apache/sandesha2/msgprocessors/CreateSeqResponseMsgProcessor.java",
                "sha": "971c1dc1d9ca6b60400b10cfd451e52127da6c1c",
                "status": "modified"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/sandesha/blob/2e791bafea8367239c594302f73069340f8981e3/modules/core/src/main/java/org/apache/sandesha2/msgprocessors/LastMessageProcessor.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/sandesha/contents/modules/core/src/main/java/org/apache/sandesha2/msgprocessors/LastMessageProcessor.java?ref=2e791bafea8367239c594302f73069340f8981e3",
                "deletions": 1,
                "filename": "modules/core/src/main/java/org/apache/sandesha2/msgprocessors/LastMessageProcessor.java",
                "patch": "@@ -62,7 +62,7 @@ public static void processLastMessage(RMMsgContext rmMsgCtx) throws AxisFault {\n \t\tif (!Sandesha2Constants.SPEC_VERSIONS.v1_0.equals(rmMsgCtx.getRMSpecVersion()))\n \t\t\treturn;\n \t\t\n-\t\tSequence sequence = (Sequence) rmMsgCtx.getSequence();\n+\t\tSequence sequence = rmMsgCtx.getSequence();\n \t\tString sequenceId = sequence.getIdentifier().getIdentifier();\n \t\t\n \t\tConfigurationContext configurationContext = rmMsgCtx.getConfigurationContext();",
                "raw_url": "https://github.com/apache/sandesha/raw/2e791bafea8367239c594302f73069340f8981e3/modules/core/src/main/java/org/apache/sandesha2/msgprocessors/LastMessageProcessor.java",
                "sha": "d997fc3dcecf6610d25123ebdae9ce3dc6a4eb78",
                "status": "modified"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/sandesha/blob/2e791bafea8367239c594302f73069340f8981e3/modules/core/src/main/java/org/apache/sandesha2/msgprocessors/MessagePendingProcessor.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/sandesha/contents/modules/core/src/main/java/org/apache/sandesha2/msgprocessors/MessagePendingProcessor.java?ref=2e791bafea8367239c594302f73069340f8981e3",
                "deletions": 1,
                "filename": "modules/core/src/main/java/org/apache/sandesha2/msgprocessors/MessagePendingProcessor.java",
                "patch": "@@ -40,7 +40,7 @@ public void processMessagePendingHeaders(RMMsgContext message) throws AxisFault\n \t\tif (log.isDebugEnabled())\n \t\t\tlog.debug(\"Enter: MessagePendingProcessor::processMessagePendingHeaders\");\n \n-\t\tMessagePending messagePending = (MessagePending) message.getMessagePending();\n+\t\tMessagePending messagePending = message.getMessagePending();\n \t\tif (messagePending!=null) {\n \t\t\tboolean pending = messagePending.isPending();\n \t\t\tif (pending) {",
                "raw_url": "https://github.com/apache/sandesha/raw/2e791bafea8367239c594302f73069340f8981e3/modules/core/src/main/java/org/apache/sandesha2/msgprocessors/MessagePendingProcessor.java",
                "sha": "f6e5eb8da7f7949b222ca1e955b0ea8e7880238c",
                "status": "modified"
            },
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/sandesha/blob/2e791bafea8367239c594302f73069340f8981e3/modules/core/src/main/java/org/apache/sandesha2/msgprocessors/SequenceProcessor.java",
                "changes": 8,
                "contents_url": "https://api.github.com/repos/apache/sandesha/contents/modules/core/src/main/java/org/apache/sandesha2/msgprocessors/SequenceProcessor.java?ref=2e791bafea8367239c594302f73069340f8981e3",
                "deletions": 6,
                "filename": "modules/core/src/main/java/org/apache/sandesha2/msgprocessors/SequenceProcessor.java",
                "patch": "@@ -21,8 +21,6 @@\n \n import javax.xml.namespace.QName;\n \n-import org.apache.axiom.om.OMElement;\n-import org.apache.axiom.soap.SOAPEnvelope;\n import org.apache.axis2.AxisFault;\n import org.apache.axis2.addressing.EndpointReference;\n import org.apache.axis2.addressing.RelatesTo;\n@@ -44,8 +42,6 @@\n import org.apache.sandesha2.i18n.SandeshaMessageKeys;\n import org.apache.sandesha2.msgreceivers.RMMessageReceiver;\n import org.apache.sandesha2.policy.SandeshaPolicyBean;\n-import org.apache.sandesha2.security.SecurityManager;\n-import org.apache.sandesha2.security.SecurityToken;\n import org.apache.sandesha2.storage.StorageManager;\n import org.apache.sandesha2.storage.Transaction;\n import org.apache.sandesha2.storage.beanmanagers.RMDBeanMgr;\n@@ -77,7 +73,7 @@ public InvocationResponse processSequenceHeader(RMMsgContext rmMsgCtx, Transacti\n \t\t\tlog.debug(\"Enter: SequenceProcessor::processSequenceHeader\");\n \t\t\n \t\tInvocationResponse result = InvocationResponse.CONTINUE;\n-\t\tSequence sequence = (Sequence) rmMsgCtx.getSequence();\n+\t\tSequence sequence = rmMsgCtx.getSequence();\n \t\tif(sequence != null) {\n \t\t\t// This is a reliable message, so hand it on to the main routine\n \t\t\tresult = processReliableMessage(rmMsgCtx, transaction);\n@@ -103,7 +99,7 @@ public InvocationResponse processReliableMessage(RMMsgContext rmMsgCtx, Transact\n \n \t\tMessageContext msgCtx = rmMsgCtx.getMessageContext();\n \t\tStorageManager storageManager = SandeshaUtil.getSandeshaStorageManager(msgCtx.getConfigurationContext(),msgCtx.getConfigurationContext().getAxisConfiguration());\n-\t\tSequence sequence = (Sequence) rmMsgCtx.getSequence();\n+\t\tSequence sequence = rmMsgCtx.getSequence();\n \t\tString sequenceId = sequence.getIdentifier().getIdentifier();\n \t\tlong msgNo = sequence.getMessageNumber().getMessageNumber();\n \t\tboolean lastMessage = sequence.getLastMessage() != null;",
                "raw_url": "https://github.com/apache/sandesha/raw/2e791bafea8367239c594302f73069340f8981e3/modules/core/src/main/java/org/apache/sandesha2/msgprocessors/SequenceProcessor.java",
                "sha": "b2a23ef04c52a1365503738216fc43fbcf40b84f",
                "status": "modified"
            },
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/sandesha/blob/2e791bafea8367239c594302f73069340f8981e3/modules/core/src/main/java/org/apache/sandesha2/msgprocessors/TerminateSeqMsgProcessor.java",
                "changes": 7,
                "contents_url": "https://api.github.com/repos/apache/sandesha/contents/modules/core/src/main/java/org/apache/sandesha2/msgprocessors/TerminateSeqMsgProcessor.java?ref=2e791bafea8367239c594302f73069340f8981e3",
                "deletions": 5,
                "filename": "modules/core/src/main/java/org/apache/sandesha2/msgprocessors/TerminateSeqMsgProcessor.java",
                "patch": "@@ -21,7 +21,6 @@\n \n import java.util.Iterator;\n \n-import org.apache.axiom.om.OMElement;\n import org.apache.axis2.AxisFault;\n import org.apache.axis2.Constants;\n import org.apache.axis2.addressing.EndpointReference;\n@@ -39,8 +38,6 @@\n import org.apache.sandesha2.SandeshaException;\n import org.apache.sandesha2.i18n.SandeshaMessageHelper;\n import org.apache.sandesha2.i18n.SandeshaMessageKeys;\n-import org.apache.sandesha2.security.SecurityManager;\n-import org.apache.sandesha2.security.SecurityToken;\n import org.apache.sandesha2.storage.StorageManager;\n import org.apache.sandesha2.storage.Transaction;\n import org.apache.sandesha2.storage.beanmanagers.RMDBeanMgr;\n@@ -76,7 +73,7 @@ public boolean processInMessage(RMMsgContext terminateSeqRMMsg, Transaction tran\n \n \t\t// Processing the terminate message\n \t\t// TODO Add terminate sequence message logic.\n-\t\tTerminateSequence terminateSequence = (TerminateSequence) terminateSeqRMMsg.getTerminateSequence();\n+\t\tTerminateSequence terminateSequence = terminateSeqRMMsg.getTerminateSequence();\n \t\tif (terminateSequence == null) {\n \t\t\tString message = SandeshaMessageHelper.getMessage(SandeshaMessageKeys.noTerminateSeqPart);\n \t\t\tlog.debug(message);\n@@ -380,7 +377,7 @@ public boolean processOutMessage(RMMsgContext rmMsgCtx, Transaction transaction)\n \t\tgetMsgContext().setOperationContext(opcontext);\n \t\tgetMsgContext().setAxisOperation(terminateOp);\n \n-\t\tTerminateSequence terminateSequencePart = (TerminateSequence) rmMsgCtx.getTerminateSequence();\n+\t\tTerminateSequence terminateSequencePart = rmMsgCtx.getTerminateSequence();\n \t\tterminateSequencePart.getIdentifier().setIndentifer(getOutSequenceID());\n \n \t\trmMsgCtx.setWSAAction(SpecSpecificConstants.getTerminateSequenceAction(getRMVersion()));",
                "raw_url": "https://github.com/apache/sandesha/raw/2e791bafea8367239c594302f73069340f8981e3/modules/core/src/main/java/org/apache/sandesha2/msgprocessors/TerminateSeqMsgProcessor.java",
                "sha": "8850818a801b42b89e351c8fdc7a91188dde273e",
                "status": "modified"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/sandesha/blob/2e791bafea8367239c594302f73069340f8981e3/modules/core/src/main/java/org/apache/sandesha2/msgprocessors/TerminateSeqResponseMsgProcessor.java",
                "changes": 3,
                "contents_url": "https://api.github.com/repos/apache/sandesha/contents/modules/core/src/main/java/org/apache/sandesha2/msgprocessors/TerminateSeqResponseMsgProcessor.java?ref=2e791bafea8367239c594302f73069340f8981e3",
                "deletions": 2,
                "filename": "modules/core/src/main/java/org/apache/sandesha2/msgprocessors/TerminateSeqResponseMsgProcessor.java",
                "patch": "@@ -52,8 +52,7 @@ public boolean processInMessage(RMMsgContext terminateResRMMsg, Transaction tran\n \t\t\n \t\tStorageManager storageManager = SandeshaUtil.getSandeshaStorageManager(context,context.getAxisConfiguration());\n \t\t\n-\t\tTerminateSequenceResponse tsResponse = (TerminateSequenceResponse)\n-\t\t  terminateResRMMsg.getTerminateSequenceResponse();\n+\t\tTerminateSequenceResponse tsResponse = terminateResRMMsg.getTerminateSequenceResponse();\n \t\t\n \t\tString sequenceId = tsResponse.getIdentifier().getIdentifier();\n \t\tRMSBean rmsBean = SandeshaUtil.getRMSBeanFromSequenceId(storageManager, sequenceId);",
                "raw_url": "https://github.com/apache/sandesha/raw/2e791bafea8367239c594302f73069340f8981e3/modules/core/src/main/java/org/apache/sandesha2/msgprocessors/TerminateSeqResponseMsgProcessor.java",
                "sha": "613ca7471655765460a88cae3f2b8b4751afc7aa",
                "status": "modified"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/sandesha/blob/2e791bafea8367239c594302f73069340f8981e3/modules/core/src/main/java/org/apache/sandesha2/util/MsgInitializer.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/sandesha/contents/modules/core/src/main/java/org/apache/sandesha2/util/MsgInitializer.java?ref=2e791bafea8367239c594302f73069340f8981e3",
                "deletions": 1,
                "filename": "modules/core/src/main/java/org/apache/sandesha2/util/MsgInitializer.java",
                "patch": "@@ -171,7 +171,7 @@ private static void populateRMMsgContext(MessageContext msgCtx, RMMsgContext rmM\n \t\t\tsequenceID = terminateSequenceResponse.getIdentifier().getIdentifier();\n \t\t} else if (sequence != null) {\n \t\t\t\n-\t\t\tSequence seq = (Sequence) rmMsgContext.getSequence();\n+\t\t\tSequence seq = rmMsgContext.getSequence();\n \t\t\tLastMessage lastMessage = seq.getLastMessage();\n \t\t\tSOAPEnvelope envelope = rmMsgContext.getSOAPEnvelope();\n \t\t\t",
                "raw_url": "https://github.com/apache/sandesha/raw/2e791bafea8367239c594302f73069340f8981e3/modules/core/src/main/java/org/apache/sandesha2/util/MsgInitializer.java",
                "sha": "83ab931192a1e431c8304f8c33ef20f5117c6aca",
                "status": "modified"
            },
            {
                "additions": 10,
                "blob_url": "https://github.com/apache/sandesha/blob/2e791bafea8367239c594302f73069340f8981e3/modules/core/src/main/java/org/apache/sandesha2/util/SandeshaUtil.java",
                "changes": 20,
                "contents_url": "https://api.github.com/repos/apache/sandesha/contents/modules/core/src/main/java/org/apache/sandesha2/util/SandeshaUtil.java?ref=2e791bafea8367239c594302f73069340f8981e3",
                "deletions": 10,
                "filename": "modules/core/src/main/java/org/apache/sandesha2/util/SandeshaUtil.java",
                "patch": "@@ -720,12 +720,12 @@ public static SandeshaPolicyBean getPropertyBean (AxisDescription axisDescriptio\n \t\treturn propertyBean;\n \t}\n \n-\tpublic static String getSequenceIDFromRMMessage(RMMsgContext rmMessageContext) throws SandeshaException {\n+\tpublic static String getSequenceIDFromRMMessage(RMMsgContext rmMessageContext) {\n \t\tint messageType = rmMessageContext.getMessageType();\n \n \t\tString sequenceID = null;\n \t\tif (messageType == Sandesha2Constants.MessageTypes.APPLICATION) {\n-\t\t\tSequence sequence = (Sequence) rmMessageContext.getSequence();\n+\t\t\tSequence sequence = rmMessageContext.getSequence();\n \t\t\tsequenceID = sequence.getIdentifier().getIdentifier();\n \t\t} else if (messageType == Sandesha2Constants.MessageTypes.ACK) {\n \t\t\tIterator sequenceAckIter = rmMessageContext\n@@ -747,12 +747,10 @@ public static String getSequenceIDFromRMMessage(RMMsgContext rmMessageContext) t\n \t\t\tAckRequested ackReq = (AckRequested) ackRequestIter.next();\n \t\t\tsequenceID = ackReq.getIdentifier().getIdentifier();\n \t\t} else if (messageType == Sandesha2Constants.MessageTypes.CLOSE_SEQUENCE) {\n-\t\t\tCloseSequence closeSequence = (CloseSequence) rmMessageContext\n-\t\t\t\t\t.getCloseSequence();\n+\t\t\tCloseSequence closeSequence = rmMessageContext.getCloseSequence();\n \t\t\tsequenceID = closeSequence.getIdentifier().getIdentifier();\n \t\t} else if (messageType == Sandesha2Constants.MessageTypes.CLOSE_SEQUENCE_RESPONSE) {\n-\t\t\tCloseSequenceResponse closeSequenceResponse = (CloseSequenceResponse) rmMessageContext\n-\t\t\t\t\t.getCloseSequenceResponse();;\n+\t\t\tCloseSequenceResponse closeSequenceResponse = rmMessageContext.getCloseSequenceResponse();;\n \t\t\tsequenceID = closeSequenceResponse.getIdentifier().getIdentifier();\n \t\t}\n \n@@ -930,8 +928,8 @@ private static ContextManager getContextManagerInstance(String className,Configu\n \tpublic static boolean isWSRMAnonymous(String address) {\n \t\tif (address!=null && address.startsWith(Sandesha2Constants.SPEC_2007_02.ANONYMOUS_URI_PREFIX))\n \t\t\treturn true;\n-\t\telse \n-\t\t\treturn false;\n+\t\t \n+\t\treturn false;\n \t}\n \t public static void executeAndStore (RMMsgContext rmMsgContext, String storageKey, StorageManager manager) throws AxisFault {\n \t\tif (log.isDebugEnabled())\n@@ -1223,7 +1221,8 @@ public static boolean isDuplicateInOnlyMessage(MessageContext msgContext)\n \t\tif(localName.equals(Sandesha2Constants.RM_DUPLICATE_IN_ONLY_OPERATION.getLocalPart())){\n \t\t\treturn true;\n \t\t}\n-\t\telse return false;\n+\t\t\n+\t\treturn false;\n \t}\n \t\n \tpublic static boolean isDuplicateInOutMessage(MessageContext msgContext)\n@@ -1233,7 +1232,8 @@ public static boolean isDuplicateInOutMessage(MessageContext msgContext)\n \t\tif(localName.equals(Sandesha2Constants.RM_DUPLICATE_IN_OUT_OPERATION.getLocalPart())){\n \t\t\treturn true;\n \t\t}\n-\t\telse return false;\n+\t\t\n+\t\treturn false;\n \t}\t\n \t \t  \n \tpublic static final String getStackTraceFromException(Exception e) {",
                "raw_url": "https://github.com/apache/sandesha/raw/2e791bafea8367239c594302f73069340f8981e3/modules/core/src/main/java/org/apache/sandesha2/util/SandeshaUtil.java",
                "sha": "d7e2ac1ace7a5199c549ffe860d00b1b76379053",
                "status": "modified"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/sandesha/blob/2e791bafea8367239c594302f73069340f8981e3/modules/core/src/main/java/org/apache/sandesha2/util/SequenceManager.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/sandesha/contents/modules/core/src/main/java/org/apache/sandesha2/util/SequenceManager.java?ref=2e791bafea8367239c594302f73069340f8981e3",
                "deletions": 1,
                "filename": "modules/core/src/main/java/org/apache/sandesha2/util/SequenceManager.java",
                "patch": "@@ -79,7 +79,7 @@ public static RMDBean setupNewSequence(RMMsgContext createSequenceMsg, StorageMa\n \n \t\tEndpointReference replyTo = createSequenceMsg.getReplyTo();\n \n-\t\tCreateSequence createSequence = (CreateSequence) createSequenceMsg.getCreateSequence();\n+\t\tCreateSequence createSequence = createSequenceMsg.getCreateSequence();\n \t\tif (createSequence == null) {\n \t\t\tString message = SandeshaMessageHelper.getMessage(SandeshaMessageKeys.createSeqEntryNotFound);\n \t\t\tlog.debug(message);",
                "raw_url": "https://github.com/apache/sandesha/raw/2e791bafea8367239c594302f73069340f8981e3/modules/core/src/main/java/org/apache/sandesha2/util/SequenceManager.java",
                "sha": "e91784fce04ce4ba9294e335bc728d3a930e164b",
                "status": "modified"
            },
            {
                "additions": 4,
                "blob_url": "https://github.com/apache/sandesha/blob/2e791bafea8367239c594302f73069340f8981e3/modules/core/src/main/java/org/apache/sandesha2/workers/SenderWorker.java",
                "changes": 8,
                "contents_url": "https://api.github.com/repos/apache/sandesha/contents/modules/core/src/main/java/org/apache/sandesha2/workers/SenderWorker.java?ref=2e791bafea8367239c594302f73069340f8981e3",
                "deletions": 4,
                "filename": "modules/core/src/main/java/org/apache/sandesha2/workers/SenderWorker.java",
                "patch": "@@ -383,7 +383,7 @@ public void run () {\n \t\t\t\t\t// terminate sending side if this is the WSRM 1.0 spec. \n \t\t\t\t\t// If the WSRM versoion is 1.1 termination will happen in the terminate sequence response message.\n \t\t\t\t\t\n-\t\t\t\t\tTerminateSequence terminateSequence = (TerminateSequence) rmMsgCtx.getTerminateSequence();\n+\t\t\t\t\tTerminateSequence terminateSequence = rmMsgCtx.getTerminateSequence();\n \t\t\t\t\tString sequenceID = terminateSequence.getIdentifier().getIdentifier();\n \t\n \t\t\t\t\tRMSBean rmsBean = SandeshaUtil.getRMSBeanFromSequenceId(storageManager, sequenceID);\n@@ -446,7 +446,7 @@ private SenderBean updateMessage(RMMsgContext rmMsgContext, SenderBean senderBea\n \t\t   messageType == Sandesha2Constants.MessageTypes.LAST_MESSAGE) {\n \t\t\t\n \t\t\tString namespace = SpecSpecificConstants.getRMNamespaceValue(rmVersion);\n-\t\t\tSequence sequence = (Sequence) rmMsgContext.getSequence();\n+\t\t\tSequence sequence = rmMsgContext.getSequence();\n \t\t\tif(sequence == null) {\n \t\t\t\tsequence = new Sequence(namespace);\n \t\t\t\t\n@@ -467,11 +467,11 @@ private SenderBean updateMessage(RMMsgContext rmMsgContext, SenderBean senderBea\n \t\t\t}\n \t\t\t\n \t\t} else if(messageType == Sandesha2Constants.MessageTypes.TERMINATE_SEQ) {\n-\t\t\tTerminateSequence terminate = (TerminateSequence) rmMsgContext.getTerminateSequence();\n+\t\t\tTerminateSequence terminate = rmMsgContext.getTerminateSequence();\n \t\t\tid = terminate.getIdentifier();\n \n \t\t} else if(messageType == Sandesha2Constants.MessageTypes.CLOSE_SEQUENCE) {\n-\t\t\tCloseSequence close = (CloseSequence) rmMsgContext.getCloseSequence();\n+\t\t\tCloseSequence close = rmMsgContext.getCloseSequence();\n \t\t\tid = close.getIdentifier();\n \t\t\n \t\t} else if(messageType == Sandesha2Constants.MessageTypes.ACK_REQUEST) {",
                "raw_url": "https://github.com/apache/sandesha/raw/2e791bafea8367239c594302f73069340f8981e3/modules/core/src/main/java/org/apache/sandesha2/workers/SenderWorker.java",
                "sha": "db9a90fe20e0994b2d3c7a1191bd69452559d36c",
                "status": "modified"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/sandesha/blob/2e791bafea8367239c594302f73069340f8981e3/modules/core/src/main/java/org/apache/sandesha2/wsrm/AckFinal.java",
                "changes": 3,
                "contents_url": "https://api.github.com/repos/apache/sandesha/contents/modules/core/src/main/java/org/apache/sandesha2/wsrm/AckFinal.java?ref=2e791bafea8367239c594302f73069340f8981e3",
                "deletions": 2,
                "filename": "modules/core/src/main/java/org/apache/sandesha2/wsrm/AckFinal.java",
                "patch": "@@ -52,8 +52,7 @@ public Object fromOMElement(OMElement finalPart) throws OMException {\n \t\t\n \t\tif (finalPart == null)\n \t\t\tthrow new OMException(SandeshaMessageHelper.getMessage(\n-\t\t\t\t\tSandeshaMessageKeys.noFinalPartInElement,\n-\t\t\t\t\tfinalPart.toString()));\n+\t\t\t\t\tSandeshaMessageKeys.noFinalPartInElement));\n \n \t\treturn this;\n \t}",
                "raw_url": "https://github.com/apache/sandesha/raw/2e791bafea8367239c594302f73069340f8981e3/modules/core/src/main/java/org/apache/sandesha2/wsrm/AckFinal.java",
                "sha": "9c1adff29dee6831714ab8817f438dbe4e4f584d",
                "status": "modified"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/sandesha/blob/2e791bafea8367239c594302f73069340f8981e3/modules/core/src/main/java/org/apache/sandesha2/wsrm/AckNone.java",
                "changes": 3,
                "contents_url": "https://api.github.com/repos/apache/sandesha/contents/modules/core/src/main/java/org/apache/sandesha2/wsrm/AckNone.java?ref=2e791bafea8367239c594302f73069340f8981e3",
                "deletions": 2,
                "filename": "modules/core/src/main/java/org/apache/sandesha2/wsrm/AckNone.java",
                "patch": "@@ -52,8 +52,7 @@ public String getNamespaceValue(){\n \tpublic Object fromOMElement(OMElement nonePart) throws OMException {\n \t\tif (nonePart == null)\n \t\t\tthrow new OMException(SandeshaMessageHelper.getMessage(\n-\t\t\t\t\tSandeshaMessageKeys.noNonePartInElement,\n-\t\t\t\t\tnonePart.toString()));\n+\t\t\t\t\tSandeshaMessageKeys.noNonePartInElement));\n \n \t\treturn this;\n \t}",
                "raw_url": "https://github.com/apache/sandesha/raw/2e791bafea8367239c594302f73069340f8981e3/modules/core/src/main/java/org/apache/sandesha2/wsrm/AckNone.java",
                "sha": "e6216a6e0e70dd8f41e6a1f2ab33e67f2371e798",
                "status": "modified"
            },
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/sandesha/blob/2e791bafea8367239c594302f73069340f8981e3/modules/core/src/main/java/org/apache/sandesha2/wsrm/CloseSequence.java",
                "changes": 4,
                "contents_url": "https://api.github.com/repos/apache/sandesha/contents/modules/core/src/main/java/org/apache/sandesha2/wsrm/CloseSequence.java?ref=2e791bafea8367239c594302f73069340f8981e3",
                "deletions": 2,
                "filename": "modules/core/src/main/java/org/apache/sandesha2/wsrm/CloseSequence.java",
                "patch": "@@ -142,8 +142,8 @@ public boolean isNamespaceSupported (String namespaceName) {\n \tpublic boolean isLastMsgNumberRequired(String namespaceName){\n \t\tif (Sandesha2Constants.SPEC_2007_02.NS_URI.equals(namespaceName))\n \t\t\treturn true;\n-\t\telse \n-\t\t\treturn false;\t\t\n+\t\t \n+\t\treturn false;\t\t\n \t}\n \t\n \tpublic void setLastMessageNumber(LastMessageNumber number){",
                "raw_url": "https://github.com/apache/sandesha/raw/2e791bafea8367239c594302f73069340f8981e3/modules/core/src/main/java/org/apache/sandesha2/wsrm/CloseSequence.java",
                "sha": "899ed129a15cc451ab7130eee8580f85d9192a05",
                "status": "modified"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/sandesha/blob/2e791bafea8367239c594302f73069340f8981e3/modules/core/src/main/java/org/apache/sandesha2/wsrm/Identifier.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/sandesha/contents/modules/core/src/main/java/org/apache/sandesha2/wsrm/Identifier.java?ref=2e791bafea8367239c594302f73069340f8981e3",
                "deletions": 1,
                "filename": "modules/core/src/main/java/org/apache/sandesha2/wsrm/Identifier.java",
                "patch": "@@ -55,7 +55,7 @@ public Object fromOMElement(OMElement identifierPart) throws OMException {\n \t\tif (identifierPart == null)\n \t\t\tthrow new OMException(SandeshaMessageHelper.getMessage(\n \t\t\t\t\tSandeshaMessageKeys.invalidIdentifier,\n-\t\t\t\t\tidentifierPart.toString()));\n+\t\t\t\t\tnull));\n \t\t\n \t\tString identifierText = identifierPart.getText();\n \t\tif (identifierText == null || identifierText == \"\")",
                "raw_url": "https://github.com/apache/sandesha/raw/2e791bafea8367239c594302f73069340f8981e3/modules/core/src/main/java/org/apache/sandesha2/wsrm/Identifier.java",
                "sha": "a80bd5202f22554fa1077cba101f8362768687ac",
                "status": "modified"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/sandesha/blob/2e791bafea8367239c594302f73069340f8981e3/modules/core/src/main/java/org/apache/sandesha2/wsrm/LastMessage.java",
                "changes": 3,
                "contents_url": "https://api.github.com/repos/apache/sandesha/contents/modules/core/src/main/java/org/apache/sandesha2/wsrm/LastMessage.java?ref=2e791bafea8367239c594302f73069340f8981e3",
                "deletions": 2,
                "filename": "modules/core/src/main/java/org/apache/sandesha2/wsrm/LastMessage.java",
                "patch": "@@ -52,8 +52,7 @@ public String getNamespaceValue () {\n \tpublic Object fromOMElement(OMElement lastMessagePart) throws OMException {\n \t\tif (lastMessagePart == null)\n \t\t\tthrow new OMException(SandeshaMessageHelper.getMessage(\n-\t\t\t\t\tSandeshaMessageKeys.noLastMessagePartInElement,\n-\t\t\t\t\tlastMessagePart.toString()));\n+\t\t\t\t\tSandeshaMessageKeys.noLastMessagePartInElement));\n \n \t\treturn this;\n \t}",
                "raw_url": "https://github.com/apache/sandesha/raw/2e791bafea8367239c594302f73069340f8981e3/modules/core/src/main/java/org/apache/sandesha2/wsrm/LastMessage.java",
                "sha": "4d6c24faf5759fae7c5c4b203b23e55d113c9b54",
                "status": "modified"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/sandesha/blob/2e791bafea8367239c594302f73069340f8981e3/modules/core/src/main/java/org/apache/sandesha2/wsrm/LastMessageNumber.java",
                "changes": 3,
                "contents_url": "https://api.github.com/repos/apache/sandesha/contents/modules/core/src/main/java/org/apache/sandesha2/wsrm/LastMessageNumber.java?ref=2e791bafea8367239c594302f73069340f8981e3",
                "deletions": 2,
                "filename": "modules/core/src/main/java/org/apache/sandesha2/wsrm/LastMessageNumber.java",
                "patch": "@@ -53,8 +53,7 @@ public void setMessageNumber(long messageNumber){\n \tpublic Object fromOMElement(OMElement msgNumberPart) throws OMException {\r\n \t\tif (msgNumberPart==null)\r\n \t\t\tthrow new OMException (SandeshaMessageHelper.getMessage(\r\n-\t\t\t\t\tSandeshaMessageKeys.noMessageNumberPartInElement,\r\n-\t\t\t\t\tmsgNumberPart.toString()));\r\n+\t\t\t\t\tSandeshaMessageKeys.noMessageNumberPartInElement));\r\n \t\t\r\n \t\tString msgNoStr = msgNumberPart.getText();\r\n \t\tmessageNumber = Long.parseLong(msgNoStr);\r",
                "raw_url": "https://github.com/apache/sandesha/raw/2e791bafea8367239c594302f73069340f8981e3/modules/core/src/main/java/org/apache/sandesha2/wsrm/LastMessageNumber.java",
                "sha": "afecc2bd8226cd6d459ca987eaf5476a4f7d9f68",
                "status": "modified"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/sandesha/blob/2e791bafea8367239c594302f73069340f8981e3/modules/core/src/main/java/org/apache/sandesha2/wsrm/MessageNumber.java",
                "changes": 3,
                "contents_url": "https://api.github.com/repos/apache/sandesha/contents/modules/core/src/main/java/org/apache/sandesha2/wsrm/MessageNumber.java?ref=2e791bafea8367239c594302f73069340f8981e3",
                "deletions": 2,
                "filename": "modules/core/src/main/java/org/apache/sandesha2/wsrm/MessageNumber.java",
                "patch": "@@ -57,8 +57,7 @@ public void setMessageNumber(long messageNumber){\n \tpublic Object fromOMElement(OMElement msgNumberPart) throws OMException {\n \t\tif (msgNumberPart==null)\n \t\t\tthrow new OMException (SandeshaMessageHelper.getMessage(\n-\t\t\t\t\tSandeshaMessageKeys.noMessageNumberPartInElement,\n-\t\t\t\t\tmsgNumberPart.toString()));\n+\t\t\t\t\tSandeshaMessageKeys.noMessageNumberPartInElement));\n \t\t\n \t\tString msgNoStr = msgNumberPart.getText();\n \t\tmessageNumber = Long.parseLong(msgNoStr);",
                "raw_url": "https://github.com/apache/sandesha/raw/2e791bafea8367239c594302f73069340f8981e3/modules/core/src/main/java/org/apache/sandesha2/wsrm/MessageNumber.java",
                "sha": "824ce97bd7512c931cb5cd0d9dd5c0ee6befcc85",
                "status": "modified"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/sandesha/blob/2e791bafea8367239c594302f73069340f8981e3/modules/core/src/main/java/org/apache/sandesha2/wsrm/Sequence.java",
                "changes": 3,
                "contents_url": "https://api.github.com/repos/apache/sandesha/contents/modules/core/src/main/java/org/apache/sandesha2/wsrm/Sequence.java?ref=2e791bafea8367239c594302f73069340f8981e3",
                "deletions": 2,
                "filename": "modules/core/src/main/java/org/apache/sandesha2/wsrm/Sequence.java",
                "patch": "@@ -65,8 +65,7 @@ public Object fromOMElement(OMElement ome) throws OMException,SandeshaException\n \n \t\tif (shb == null)\n \t\t\tthrow new OMException(SandeshaMessageHelper.getMessage(\n-\t\t\t\t\tSandeshaMessageKeys.noSequencePartInElement,\n-\t\t\t\t\tshb.toString()));\n+\t\t\t\t\tSandeshaMessageKeys.noSequencePartInElement));\n \t\t\n \t\tOMElement identifierPart = null;\n \t\tOMElement msgNumberPart = null;",
                "raw_url": "https://github.com/apache/sandesha/raw/2e791bafea8367239c594302f73069340f8981e3/modules/core/src/main/java/org/apache/sandesha2/wsrm/Sequence.java",
                "sha": "e1170c99b723c5ebf2325000a8f53932c192471e",
                "status": "modified"
            },
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/sandesha/blob/2e791bafea8367239c594302f73069340f8981e3/modules/core/src/main/java/org/apache/sandesha2/wsrm/TerminateSequence.java",
                "changes": 4,
                "contents_url": "https://api.github.com/repos/apache/sandesha/contents/modules/core/src/main/java/org/apache/sandesha2/wsrm/TerminateSequence.java?ref=2e791bafea8367239c594302f73069340f8981e3",
                "deletions": 2,
                "filename": "modules/core/src/main/java/org/apache/sandesha2/wsrm/TerminateSequence.java",
                "patch": "@@ -152,8 +152,8 @@ public static boolean isLastMsgNumberRequired(String namespaceName){\n \t\t\n \t\tif (Sandesha2Constants.SPEC_2007_02.NS_URI.equals(namespaceName))\n \t\t\treturn true;\n-\t\telse\n-\t\t\treturn false;\t\t\n+\t\t\n+\t\treturn false;\t\t\n \t}\n \t\n }",
                "raw_url": "https://github.com/apache/sandesha/raw/2e791bafea8367239c594302f73069340f8981e3/modules/core/src/main/java/org/apache/sandesha2/wsrm/TerminateSequence.java",
                "sha": "8f016fe174a403a1448e1c0f7fbc4e478a276389",
                "status": "modified"
            },
            {
                "additions": 4,
                "blob_url": "https://github.com/apache/sandesha/blob/2e791bafea8367239c594302f73069340f8981e3/modules/core/src/main/resources/org/apache/sandesha2/i18n/resource.properties",
                "changes": 8,
                "contents_url": "https://api.github.com/repos/apache/sandesha/contents/modules/core/src/main/resources/org/apache/sandesha2/i18n/resource.properties?ref=2e791bafea8367239c594302f73069340f8981e3",
                "deletions": 4,
                "filename": "modules/core/src/main/resources/org/apache/sandesha2/i18n/resource.properties",
                "patch": "@@ -156,10 +156,10 @@ noTerminateSeqInElement=The passed element {0} does not contain a ''terminate se\n noTerminateSeqResponseInElement=The passed element {0} does not contain a ''terminate sequence response'' part.\n noAcceptPartInElement=The passed element {0} does not contain an ''Accept'' part.\n noUpperOrLowerAttributesInElement=The passed element {0} does not contain upper or lower attributes.\n-noSequencePartInElement=The passed element {0} does not contain a ''Sequence'' part.\n-noLastMessagePartInElement=The passed element {0} does not contain a ''Last Message'' part.\n-noFinalPartInElement=The passed element {0} does not contain a ''Final'' part. \n-noNonePartInElement=The passed element {0} does not contain a ''None'' part.\n+noSequencePartInElement=The passed element does not contain a ''Sequence'' part.\n+noLastMessagePartInElement=The passed element does not contain a ''Last Message'' part.\n+noFinalPartInElement=The passed element does not contain a ''Final'' part. \n+noNonePartInElement=The passed element does not contain a ''None'' part.\n noCloseSequencePartInElement=The passed element {0} does not contain a ''close sequence'' part.\n noMessageNumberPartInElement=The passed sequnce element {0} does not contain a ''message number'' part.\n noCloseSeqResponsePartInElement=The passed element {0} does not contain a ''close sequence response'' part.",
                "raw_url": "https://github.com/apache/sandesha/raw/2e791bafea8367239c594302f73069340f8981e3/modules/core/src/main/resources/org/apache/sandesha2/i18n/resource.properties",
                "sha": "76a4eefb5eeae2ab0bb17b64040a0ab67b0cb7af",
                "status": "modified"
            }
        ],
        "message": "Remove unused imports, removed casts that aren't required and protected against some possible NPE's\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/sandesha/trunk/java@599813 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/sandesha/commit/6165347797b4acd28ec6a6b16817aae8db1e4c43",
        "patched_files": [
            "TerminateSequence.java",
            "Sequence.java",
            "CloseSequence.java",
            "SandeshaUtil.java"
        ],
        "repo": "sandesha",
        "unit_tests": [
            "CloseSequenceTest.java",
            "TerminateSequenceTest.java",
            "SequenceTest.java",
            "SandeshaUtilTest.java"
        ]
    },
    "sandesha_4c326c1": {
        "bug_id": "sandesha_4c326c1",
        "commit": "https://github.com/apache/sandesha/commit/4c326c1035db0571bc332e09af827c977ce12b15",
        "file": [
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/sandesha/blob/4c326c1035db0571bc332e09af827c977ce12b15/modules/core/src/main/java/org/apache/sandesha2/util/SandeshaUtil.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/sandesha/contents/modules/core/src/main/java/org/apache/sandesha2/util/SandeshaUtil.java?ref=4c326c1035db0571bc332e09af827c977ce12b15",
                "deletions": 1,
                "filename": "modules/core/src/main/java/org/apache/sandesha2/util/SandeshaUtil.java",
                "patch": "@@ -1277,7 +1277,7 @@ public static EndpointReference rewriteEPR(RMSBean sourceBean, EndpointReference\n \tpublic static boolean isInOrder(MessageContext context) throws SandeshaException {\n \t\tif (log.isDebugEnabled()) log.debug(\"Enter: SandeshaUtil::isInOrder\");\n \t\t\n-\t\tSandeshaPolicyBean policy = getPropertyBean(context.getAxisOperation());\n+\t\tSandeshaPolicyBean policy = getPropertyBean(context.getConfigurationContext().getAxisConfiguration());\n \t\tboolean result = policy.isInOrder();\n \t\t\n \t\tif (log.isDebugEnabled()) log.debug(\"Enter: SandeshaUtil::isInOrder, \" + result);",
                "raw_url": "https://github.com/apache/sandesha/raw/4c326c1035db0571bc332e09af827c977ce12b15/modules/core/src/main/java/org/apache/sandesha2/util/SandeshaUtil.java",
                "sha": "030dd4a723836d15232b41e9d506a22cff2ced1b",
                "status": "modified"
            }
        ],
        "message": "Fix NullPointerException from SandeshaGlobalInHandler when duplicate response message is received\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/sandesha/trunk/java@633404 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/sandesha/commit/73cdddbbfbb102a22ee1c5d6697d3b50c08b165a",
        "patched_files": [
            "SandeshaUtil.java"
        ],
        "repo": "sandesha",
        "unit_tests": [
            "SandeshaUtilTest.java"
        ]
    },
    "sandesha_772846f": {
        "bug_id": "sandesha_772846f",
        "commit": "https://github.com/apache/sandesha/commit/772846fb1c126ed1efebd52d98c7bc08448e6a21",
        "file": [
            {
                "additions": 4,
                "blob_url": "https://github.com/apache/sandesha/blob/772846fb1c126ed1efebd52d98c7bc08448e6a21/src/org/apache/sandesha2/client/SandeshaClient.java",
                "changes": 7,
                "contents_url": "https://api.github.com/repos/apache/sandesha/contents/src/org/apache/sandesha2/client/SandeshaClient.java?ref=772846fb1c126ed1efebd52d98c7bc08448e6a21",
                "deletions": 3,
                "filename": "src/org/apache/sandesha2/client/SandeshaClient.java",
                "patch": "@@ -403,13 +403,14 @@ private static final void cleanupTerminatedSequence(String to, String sequenceKe\n \t\t\t}\n \t\t\n \t\t} catch (SandeshaException e) {\n-\t\t\ttran.rollback();\n+\t\t\tif(tran!=null)\n+\t\t\t\ttran.rollback();\n \t\t\ttran = null;\n \t\t\t\n \t\t\tthrow e;\n \t\t} \n-\t\t\n-\t\ttran.commit();\n+\t\tif(tran!=null)\n+\t\t\ttran.commit();\n \t}\n \t\n \t/**",
                "raw_url": "https://github.com/apache/sandesha/raw/772846fb1c126ed1efebd52d98c7bc08448e6a21/src/org/apache/sandesha2/client/SandeshaClient.java",
                "sha": "45acffed83e54fc885820142f7efe284fade2368",
                "status": "modified"
            }
        ],
        "message": "Fix NPE in SandeshaClient.cleanupTerminatedSequence\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/sandesha/trunk/java@501853 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/sandesha/commit/ba0a1105f747c2735338df9241fa7ca34e25ebe7",
        "patched_files": [
            "SandeshaClient.java"
        ],
        "repo": "sandesha",
        "unit_tests": [
            "SandeshaClientTest.java"
        ]
    },
    "sandesha_7872964": {
        "bug_id": "sandesha_7872964",
        "commit": "https://github.com/apache/sandesha/commit/7872964c1207c7102ad790f4598ecff879d28c13",
        "file": [
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/sandesha/blob/7872964c1207c7102ad790f4598ecff879d28c13/src/org/apache/sandesha2/RMMsgContext.java",
                "changes": 1,
                "contents_url": "https://api.github.com/repos/apache/sandesha/contents/src/org/apache/sandesha2/RMMsgContext.java?ref=7872964c1207c7102ad790f4598ecff879d28c13",
                "deletions": 0,
                "filename": "src/org/apache/sandesha2/RMMsgContext.java",
                "patch": "@@ -138,6 +138,7 @@ public void setMessagePart(int partId, IOMRMPart part) {\n \t\t\t\tArrayList sequenceAckList = (ArrayList) rmMessageParts.get(new Integer (partId));\r\n \t\t\t\tif (sequenceAckList==null) {\r\n \t\t\t\t\tsequenceAckList = new ArrayList ();\r\n+\t\t\t\t\tsequenceAckList.add(part);\r\n \t\t\t\t\trmMessageParts.put(new Integer (partId),sequenceAckList);\r\n \t\t\t\t}\r\n \t\t\t} else {\r",
                "raw_url": "https://github.com/apache/sandesha/raw/7872964c1207c7102ad790f4598ecff879d28c13/src/org/apache/sandesha2/RMMsgContext.java",
                "sha": "8a73eb3c19dc2399fafa06ed6810b6bea3f9dd40",
                "status": "modified"
            },
            {
                "additions": 6,
                "blob_url": "https://github.com/apache/sandesha/blob/7872964c1207c7102ad790f4598ecff879d28c13/src/org/apache/sandesha2/client/SandeshaClient.java",
                "changes": 12,
                "contents_url": "https://api.github.com/repos/apache/sandesha/contents/src/org/apache/sandesha2/client/SandeshaClient.java?ref=7872964c1207c7102ad790f4598ecff879d28c13",
                "deletions": 6,
                "filename": "src/org/apache/sandesha2/client/SandeshaClient.java",
                "patch": "@@ -262,7 +262,7 @@ public static SandeshaReport getSandeshaReport(ConfigurationContext configuratio\n \t\t\tIterator iterator = collection.iterator();\r\n \t\t\twhile (iterator.hasNext()) {\r\n \t\t\t\tSequencePropertyBean bean = (SequencePropertyBean) iterator.next();\r\n-\t\t\t\tString sequenceID = bean.getSequenceID();\r\n+\t\t\t\tString sequenceID = bean.getSequencePropertyKey();\r\n \t\t\t\tsandeshaReport.addToOutgoingSequenceList(sequenceID);\r\n \t\t\t\tsandeshaReport.addToOutgoingInternalSequenceMap(sequenceID, bean.getValue());\r\n \r\n@@ -280,7 +280,7 @@ public static SandeshaReport getSandeshaReport(ConfigurationContext configuratio\n \t\t\tIterator iter = serverCompletedMsgsBeans.iterator();\r\n \t\t\twhile (iter.hasNext()) {\r\n \t\t\t\tSequencePropertyBean serverCompletedMsgsBean = (SequencePropertyBean) iter.next();\r\n-\t\t\t\tString sequenceID = serverCompletedMsgsBean.getSequenceID();\r\n+\t\t\t\tString sequenceID = serverCompletedMsgsBean.getSequencePropertyKey();\r\n \t\t\t\tsandeshaReport.addToIncomingSequenceList(sequenceID);\r\n \r\n \t\t\t\tSequenceReport sequenceReport = getIncomingSequenceReport(sequenceID, configurationContext);\r\n@@ -802,7 +802,7 @@ private static boolean isSequenceTerminated(String internalSequenceID, SequenceP\n \t\t\treturn false;\r\n \t\t}\r\n \r\n-\t\tString outSequenceID = internalSequenceBean.getSequenceID();\r\n+\t\tString outSequenceID = internalSequenceBean.getSequencePropertyKey();\r\n \r\n \t\tSequencePropertyBean sequenceTerminatedBean = seqPropMgr.retrieve(outSequenceID,\r\n \t\t\t\tSandesha2Constants.SequenceProperties.SEQUENCE_TERMINATED);\r\n@@ -828,7 +828,7 @@ private static boolean isSequenceTimedout(String internalSequenceID, SequencePro\n \t\t\treturn false;\r\n \t\t}\r\n \r\n-\t\tString outSequenceID = internalSequenceBean.getSequenceID();\r\n+\t\tString outSequenceID = internalSequenceBean.getSequencePropertyKey();\r\n \t\tSequencePropertyBean sequenceTerminatedBean = seqPropMgr.retrieve(outSequenceID,\r\n \t\t\t\tSandesha2Constants.SequenceProperties.SEQUENCE_TIMED_OUT);\r\n \t\tif (sequenceTerminatedBean != null && Sandesha2Constants.VALUE_TRUE.equals(sequenceTerminatedBean.getValue())) {\r\n@@ -855,7 +855,7 @@ private static void fillTerminatedOutgoingSequenceInfo(SequenceReport report, St\n \r\n \t\treport.setSequenceStatus(SequenceReport.SEQUENCE_STATUS_TERMINATED);\r\n \r\n-\t\tString outSequenceID = internalSequenceBean.getSequenceID();\r\n+\t\tString outSequenceID = internalSequenceBean.getSequencePropertyKey();\r\n \t\tfillOutgoingSequenceInfo(report, outSequenceID, seqPropMgr);\r\n \t}\r\n \r\n@@ -875,7 +875,7 @@ private static void fillTimedoutOutgoingSequenceInfo(SequenceReport report, Stri\n \t\t}\r\n \r\n \t\treport.setSequenceStatus(SequenceReport.SEQUENCE_STATUS_TIMED_OUT);\r\n-\t\tString outSequenceID = internalSequenceBean.getSequenceID();\r\n+\t\tString outSequenceID = internalSequenceBean.getSequencePropertyKey();\r\n \t\tfillOutgoingSequenceInfo(report, outSequenceID, seqPropMgr);\r\n \t}\r\n \r",
                "raw_url": "https://github.com/apache/sandesha/raw/7872964c1207c7102ad790f4598ecff879d28c13/src/org/apache/sandesha2/client/SandeshaClient.java",
                "sha": "15d547d7774bb7c9552ead73e8bf0e00e293d355",
                "status": "modified"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/sandesha/blob/7872964c1207c7102ad790f4598ecff879d28c13/src/org/apache/sandesha2/handlers/SandeshaGlobalInHandler.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/sandesha/contents/src/org/apache/sandesha2/handlers/SandeshaGlobalInHandler.java?ref=7872964c1207c7102ad790f4598ecff879d28c13",
                "deletions": 1,
                "filename": "src/org/apache/sandesha2/handlers/SandeshaGlobalInHandler.java",
                "patch": "@@ -236,7 +236,7 @@ private boolean dropIfDuplicate(RMMsgContext rmMsgContext, StorageManager storag\n \r\n \t\t\tlong msgNo = sequence.getMessageNumber().getMessageNumber();\r\n \t\t\t\r\n-\t\t\tString propertyKey = SandeshaUtil.getPropertyKey(rmMsgContext);\r\n+\t\t\tString propertyKey = SandeshaUtil.getSequencePropertyKey(rmMsgContext);\r\n \r\n \t\t\tif (propertyKey != null && msgNo > 0) {\r\n \t\t\t\tSequencePropertyBeanMgr seqPropMgr = storageManager.getSequencePropertyBeanMgr();\r",
                "raw_url": "https://github.com/apache/sandesha/raw/7872964c1207c7102ad790f4598ecff879d28c13/src/org/apache/sandesha2/handlers/SandeshaGlobalInHandler.java",
                "sha": "51c30ac9c43c6e287bce151560ca8eb764dd098b",
                "status": "modified"
            },
            {
                "additions": 14,
                "blob_url": "https://github.com/apache/sandesha/blob/7872964c1207c7102ad790f4598ecff879d28c13/src/org/apache/sandesha2/msgprocessors/AcknowledgementProcessor.java",
                "changes": 35,
                "contents_url": "https://api.github.com/repos/apache/sandesha/contents/src/org/apache/sandesha2/msgprocessors/AcknowledgementProcessor.java?ref=7872964c1207c7102ad790f4598ecff879d28c13",
                "deletions": 21,
                "filename": "src/org/apache/sandesha2/msgprocessors/AcknowledgementProcessor.java",
                "patch": "@@ -112,6 +112,13 @@ private void processAckHeader(MessageContext msgCtx, SequenceAcknowledgement seq\n \t\t\tlog.debug(message);\r\n \t\t\tthrow new SandeshaException(message);\r\n \t\t}\r\n+\t\t\r\n+\t\tString internalSequenceId = SandeshaUtil.getSequenceProperty(outSequenceId,\r\n+\t\t\t\tSandesha2Constants.SequenceProperties.INTERNAL_SEQUENCE_ID, storageManager);\r\n+\r\n+\t\t//here we cannot get the property key using the usual SandeshaUtil.getSequencePropertyKey function,\r\n+\t\t//because this can be a applicationMessage, which piggybacks the acknowledgement.\r\n+\t\tString sequencePropertyKey = internalSequenceId;\r\n \r\n \t\t// Check that the sender of this Ack holds the correct token\r\n \t\tSequencePropertyBean tokenBean = seqPropMgr.retrieve(outSequenceId, Sandesha2Constants.SequenceProperties.SECURITY_TOKEN);\r\n@@ -150,22 +157,8 @@ private void processAckHeader(MessageContext msgCtx, SequenceAcknowledgement seq\n \t\t\treturn;\r\n \t\t}\r\n \r\n-\t\tString internalSequenceID = SandeshaUtil.getSequenceProperty(outSequenceId,\r\n-\t\t\t\tSandesha2Constants.SequenceProperties.INTERNAL_SEQUENCE_ID, storageManager);\r\n-\r\n \t\t// updating the last activated time of the sequence.\r\n-\t\tSequenceManager.updateLastActivatedTime(internalSequenceID, storageManager);\r\n-\r\n-\t\tSequencePropertyBean internalSequenceBean = seqPropMgr.retrieve(outSequenceId,\r\n-\t\t\t\tSandesha2Constants.SequenceProperties.INTERNAL_SEQUENCE_ID);\r\n-\r\n-\t\tif (internalSequenceBean == null || internalSequenceBean.getValue() == null) {\r\n-\t\t\tString message = SandeshaMessageHelper.getMessage(SandeshaMessageKeys.tempSeqIdNotSet);\r\n-\t\t\tlog.debug(message);\r\n-\t\t\tthrow new SandeshaException(message);\r\n-\t\t}\r\n-\r\n-\t\tString internalSequenceId = (String) internalSequenceBean.getValue();\r\n+\t\tSequenceManager.updateLastActivatedTime(sequencePropertyKey, storageManager);\r\n \r\n \t\tSenderBean input = new SenderBean();\r\n \t\tinput.setSend(true);\r\n@@ -202,14 +195,14 @@ private void processAckHeader(MessageContext msgCtx, SequenceAcknowledgement seq\n \t\t// setting acked message date.\r\n \t\t// TODO add details specific to each message.\r\n \t\tlong noOfMsgsAcked = getNoOfMessagesAcked(sequenceAck.getAcknowledgementRanges().iterator());\r\n-\t\tSequencePropertyBean noOfMsgsAckedBean = seqPropMgr.retrieve(outSequenceId,\r\n+\t\tSequencePropertyBean noOfMsgsAckedBean = seqPropMgr.retrieve(sequencePropertyKey,\r\n \t\t\t\tSandesha2Constants.SequenceProperties.NO_OF_OUTGOING_MSGS_ACKED);\r\n \t\tboolean added = false;\r\n \r\n \t\tif (noOfMsgsAckedBean == null) {\r\n \t\t\tadded = true;\r\n \t\t\tnoOfMsgsAckedBean = new SequencePropertyBean();\r\n-\t\t\tnoOfMsgsAckedBean.setSequenceID(outSequenceId);\r\n+\t\t\tnoOfMsgsAckedBean.setSequencePropertyKey(sequencePropertyKey);\r\n \t\t\tnoOfMsgsAckedBean.setName(Sandesha2Constants.SequenceProperties.NO_OF_OUTGOING_MSGS_ACKED);\r\n \t\t}\r\n \r\n@@ -222,11 +215,11 @@ private void processAckHeader(MessageContext msgCtx, SequenceAcknowledgement seq\n \r\n \t\t// setting the completed_messages list. This gives all the messages of\r\n \t\t// the sequence that were acked.\r\n-\t\tSequencePropertyBean allCompletedMsgsBean = seqPropMgr.retrieve(internalSequenceId,\r\n+\t\tSequencePropertyBean allCompletedMsgsBean = seqPropMgr.retrieve(sequencePropertyKey,\r\n \t\t\t\tSandesha2Constants.SequenceProperties.CLIENT_COMPLETED_MESSAGES);\r\n \t\tif (allCompletedMsgsBean == null) {\r\n \t\t\tallCompletedMsgsBean = new SequencePropertyBean();\r\n-\t\t\tallCompletedMsgsBean.setSequenceID(internalSequenceId);\r\n+\t\t\tallCompletedMsgsBean.setSequencePropertyKey(sequencePropertyKey);\r\n \t\t\tallCompletedMsgsBean.setName(Sandesha2Constants.SequenceProperties.CLIENT_COMPLETED_MESSAGES);\r\n \r\n \t\t\tseqPropMgr.insert(allCompletedMsgsBean);\r\n@@ -237,7 +230,7 @@ private void processAckHeader(MessageContext msgCtx, SequenceAcknowledgement seq\n \r\n \t\tseqPropMgr.update(allCompletedMsgsBean);\r\n \r\n-\t\tString lastOutMsgNoStr = SandeshaUtil.getSequenceProperty(internalSequenceId,\r\n+\t\tString lastOutMsgNoStr = SandeshaUtil.getSequenceProperty(sequencePropertyKey,\r\n \t\t\t\tSandesha2Constants.SequenceProperties.LAST_OUT_MESSAGE_NO, storageManager);\r\n \t\tif (lastOutMsgNoStr != null) {\r\n \t\t\tlong highestOutMsgNo = 0;\r\n@@ -250,7 +243,7 @@ private void processAckHeader(MessageContext msgCtx, SequenceAcknowledgement seq\n \t\t\t\t\t\t.getAcknowledgementRanges().iterator(), highestOutMsgNo);\r\n \r\n \t\t\t\tif (complete)\r\n-\t\t\t\t\tTerminateManager.addTerminateSequenceMessage(rmMsgCtx, outSequenceId, internalSequenceId,\r\n+\t\t\t\t\tTerminateManager.addTerminateSequenceMessage(rmMsgCtx, outSequenceId, sequencePropertyKey,\r\n \t\t\t\t\t\t\tstorageManager);\r\n \t\t\t}\r\n \t\t}\r",
                "raw_url": "https://github.com/apache/sandesha/raw/7872964c1207c7102ad790f4598ecff879d28c13/src/org/apache/sandesha2/msgprocessors/AcknowledgementProcessor.java",
                "sha": "8e7d57903c6a29325b3dd4a45026b07726d7d652",
                "status": "modified"
            },
            {
                "additions": 14,
                "blob_url": "https://github.com/apache/sandesha/blob/7872964c1207c7102ad790f4598ecff879d28c13/src/org/apache/sandesha2/msgprocessors/ApplicationMsgProcessor.java",
                "changes": 26,
                "contents_url": "https://api.github.com/repos/apache/sandesha/contents/src/org/apache/sandesha2/msgprocessors/ApplicationMsgProcessor.java?ref=7872964c1207c7102ad790f4598ecff879d28c13",
                "deletions": 12,
                "filename": "src/org/apache/sandesha2/msgprocessors/ApplicationMsgProcessor.java",
                "patch": "@@ -116,8 +116,10 @@ public void processInMessage(RMMsgContext rmMsgCtx) throws SandeshaException {\n \t\tSequence sequence = (Sequence) rmMsgCtx.getMessagePart(Sandesha2Constants.MessageParts.SEQUENCE);\r\n \t\tString sequenceId = sequence.getIdentifier().getIdentifier();\r\n \t\t\r\n+\t\tString propertyKey = SandeshaUtil.getSequencePropertyKey(rmMsgCtx);\r\n+\t\t\r\n \t\t// Check that both the Sequence header and message body have been secured properly\r\n-\t\tSequencePropertyBean tokenBean = seqPropMgr.retrieve(sequenceId, Sandesha2Constants.SequenceProperties.SECURITY_TOKEN);\r\n+\t\tSequencePropertyBean tokenBean = seqPropMgr.retrieve(propertyKey, Sandesha2Constants.SequenceProperties.SECURITY_TOKEN);\r\n \t\tif(tokenBean != null) {\r\n \t\t\tSecurityManager secManager = SandeshaUtil.getSecurityManager(msgCtx.getConfigurationContext());\r\n \t\t\tOMElement body = msgCtx.getEnvelope().getBody();\r\n@@ -198,9 +200,9 @@ public void processInMessage(RMMsgContext rmMsgCtx) throws SandeshaException {\n \t\t}\r\n \r\n \t\t// updating the last activated time of the sequence.\r\n-\t\tSequenceManager.updateLastActivatedTime(sequenceId, storageManager);\r\n+\t\tSequenceManager.updateLastActivatedTime(propertyKey, storageManager);\r\n \r\n-\t\tSequencePropertyBean msgsBean = seqPropMgr.retrieve(sequenceId,\r\n+\t\tSequencePropertyBean msgsBean = seqPropMgr.retrieve(propertyKey,\r\n \t\t\t\tSandesha2Constants.SequenceProperties.SERVER_COMPLETED_MESSAGES);\r\n \r\n \t\tlong msgNo = sequence.getMessageNumber().getMessageNumber();\r\n@@ -215,9 +217,9 @@ public void processInMessage(RMMsgContext rmMsgCtx) throws SandeshaException {\n \r\n \t\t// updating the Highest_In_Msg_No property which gives the highest\r\n \t\t// message number retrieved from this sequence.\r\n-\t\tString highetsInMsgNoStr = SandeshaUtil.getSequenceProperty(sequenceId,\r\n+\t\tString highetsInMsgNoStr = SandeshaUtil.getSequenceProperty(propertyKey,\r\n \t\t\t\tSandesha2Constants.SequenceProperties.HIGHEST_IN_MSG_NUMBER, storageManager);\r\n-\t\tString highetsInMsgKey = SandeshaUtil.getSequenceProperty(sequenceId,\r\n+\t\tString highetsInMsgKey = SandeshaUtil.getSequenceProperty(propertyKey,\r\n \t\t\t\tSandesha2Constants.SequenceProperties.HIGHEST_IN_MSG_KEY, storageManager);\r\n \t\tif (highetsInMsgKey == null)\r\n \t\t\thighetsInMsgKey = SandeshaUtil.getUUID();\r\n@@ -231,9 +233,9 @@ public void processInMessage(RMMsgContext rmMsgCtx) throws SandeshaException {\n \t\t\thighestInMsgNo = msgNo;\r\n \r\n \t\t\tString str = new Long(msgNo).toString();\r\n-\t\t\tSequencePropertyBean highestMsgNoBean = new SequencePropertyBean(sequenceId,\r\n+\t\t\tSequencePropertyBean highestMsgNoBean = new SequencePropertyBean(propertyKey,\r\n \t\t\t\t\tSandesha2Constants.SequenceProperties.HIGHEST_IN_MSG_NUMBER, str);\r\n-\t\t\tSequencePropertyBean highestMsgKeyBean = new SequencePropertyBean(sequenceId,\r\n+\t\t\tSequencePropertyBean highestMsgKeyBean = new SequencePropertyBean(propertyKey,\r\n \t\t\t\t\tSandesha2Constants.SequenceProperties.HIGHEST_IN_MSG_KEY, highetsInMsgKey);\r\n \r\n \t\t\t// storing the new message as the highest in message.\r\n@@ -254,7 +256,7 @@ public void processInMessage(RMMsgContext rmMsgCtx) throws SandeshaException {\n \t\t\tmessagesStr = (String) msgsBean.getValue();\r\n \t\telse {\r\n \t\t\tmsgsBean = new SequencePropertyBean();\r\n-\t\t\tmsgsBean.setSequenceID(sequenceId);\r\n+\t\t\tmsgsBean.setSequencePropertyKey(propertyKey);\r\n \t\t\tmsgsBean.setName(Sandesha2Constants.SequenceProperties.SERVER_COMPLETED_MESSAGES);\r\n \t\t\tmsgsBean.setValue(messagesStr);\r\n \t\t}\r\n@@ -303,7 +305,7 @@ public void processInMessage(RMMsgContext rmMsgCtx) throws SandeshaException {\n \t\t\tif (incomingSequenceListBean == null) {\r\n \t\t\t\tArrayList incomingSequenceList = new ArrayList();\r\n \t\t\t\tincomingSequenceListBean = new SequencePropertyBean();\r\n-\t\t\t\tincomingSequenceListBean.setSequenceID(Sandesha2Constants.SequenceProperties.ALL_SEQUENCES);\r\n+\t\t\t\tincomingSequenceListBean.setSequencePropertyKey(Sandesha2Constants.SequenceProperties.ALL_SEQUENCES);\r\n \t\t\t\tincomingSequenceListBean.setName(Sandesha2Constants.SequenceProperties.INCOMING_SEQUENCE_LIST);\r\n \t\t\t\tincomingSequenceListBean.setValue(incomingSequenceList.toString());\r\n \r\n@@ -504,7 +506,7 @@ public void processOutMessage(RMMsgContext rmMsgCtx) throws SandeshaException {\n \t\tif (internalSequenceId!=null)\r\n \t\t\trmMsgCtx.setProperty(Sandesha2Constants.MessageContextProperties.INTERNAL_SEQUENCE_ID,internalSequenceId);\r\n \r\n-\t\tString propertyKey = SandeshaUtil.getPropertyKey(rmMsgCtx);\r\n+\t\tString propertyKey = SandeshaUtil.getSequencePropertyKey(rmMsgCtx);\r\n \r\n \t\t/*\r\n \t\t * checking weather the user has given the messageNumber (most of the\r\n@@ -808,7 +810,7 @@ private void addCreateSequenceMessage(RMMsgContext applicationRMMsg, String inte\n \r\n \t\t\tSequencePropertyBean offeredSequenceBean = new SequencePropertyBean();\r\n \t\t\tofferedSequenceBean.setName(Sandesha2Constants.SequenceProperties.OFFERED_SEQUENCE);\r\n-\t\t\tofferedSequenceBean.setSequenceID(internalSequenceId);\r\n+\t\t\tofferedSequenceBean.setSequencePropertyKey(internalSequenceId);\r\n \t\t\tofferedSequenceBean.setValue(offeredSequenceId);\r\n \r\n \t\t\tseqPropMgr.insert(offeredSequenceBean);\r\n@@ -1134,7 +1136,7 @@ private void setNextMsgNo(ConfigurationContext context, String internalSequenceI\n \t\tif (nextMsgNoBean == null) {\r\n \t\t\tupdate = false;\r\n \t\t\tnextMsgNoBean = new SequencePropertyBean();\r\n-\t\t\tnextMsgNoBean.setSequenceID(internalSequenceId);\r\n+\t\t\tnextMsgNoBean.setSequencePropertyKey(internalSequenceId);\r\n \t\t\tnextMsgNoBean.setName(Sandesha2Constants.SequenceProperties.NEXT_MESSAGE_NUMBER);\r\n \t\t}\r\n \r",
                "raw_url": "https://github.com/apache/sandesha/raw/7872964c1207c7102ad790f4598ecff879d28c13/src/org/apache/sandesha2/msgprocessors/ApplicationMsgProcessor.java",
                "sha": "aa76c17762be5c611eb589811daaf2d8ab69727b",
                "status": "modified"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/sandesha/blob/7872964c1207c7102ad790f4598ecff879d28c13/src/org/apache/sandesha2/msgprocessors/CloseSequenceProcessor.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/sandesha/contents/src/org/apache/sandesha2/msgprocessors/CloseSequenceProcessor.java?ref=7872964c1207c7102ad790f4598ecff879d28c13",
                "deletions": 1,
                "filename": "src/org/apache/sandesha2/msgprocessors/CloseSequenceProcessor.java",
                "patch": "@@ -97,7 +97,7 @@ public void processInMessage(RMMsgContext rmMsgCtx) throws SandeshaException {\n \t\t}\r\n \r\n \t\tSequencePropertyBean sequenceClosedBean = new SequencePropertyBean();\r\n-\t\tsequenceClosedBean.setSequenceID(sequenceID);\r\n+\t\tsequenceClosedBean.setSequencePropertyKey(sequenceID);\r\n \t\tsequenceClosedBean.setName(Sandesha2Constants.SequenceProperties.SEQUENCE_CLOSED);\r\n \t\tsequenceClosedBean.setValue(Sandesha2Constants.VALUE_TRUE);\r\n \r",
                "raw_url": "https://github.com/apache/sandesha/raw/7872964c1207c7102ad790f4598ecff879d28c13/src/org/apache/sandesha2/msgprocessors/CloseSequenceProcessor.java",
                "sha": "77342a0665a39bc4e65feed960769c60a085cc30",
                "status": "modified"
            },
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/sandesha/blob/7872964c1207c7102ad790f4598ecff879d28c13/src/org/apache/sandesha2/msgprocessors/CreateSeqMsgProcessor.java",
                "changes": 4,
                "contents_url": "https://api.github.com/repos/apache/sandesha/contents/src/org/apache/sandesha2/msgprocessors/CreateSeqMsgProcessor.java?ref=7872964c1207c7102ad790f4598ecff879d28c13",
                "deletions": 2,
                "filename": "src/org/apache/sandesha2/msgprocessors/CreateSeqMsgProcessor.java",
                "patch": "@@ -183,13 +183,13 @@ public void processInMessage(RMMsgContext createSeqRMMsg) throws SandeshaExcepti\n \t\t\t\t\tSequencePropertyBean outSequenceBean = new SequencePropertyBean();\r\n \t\t\t\t\toutSequenceBean.setName(Sandesha2Constants.SequenceProperties.OUT_SEQUENCE_ID);\r\n \t\t\t\t\toutSequenceBean.setValue(offeredSequenceID);\r\n-\t\t\t\t\toutSequenceBean.setSequenceID(outgoingSideInternalSequenceID);\r\n+\t\t\t\t\toutSequenceBean.setSequencePropertyKey(outgoingSideInternalSequenceID);\r\n \t\t\t\t\tseqPropMgr.insert(outSequenceBean);\r\n \r\n \t\t\t\t\t// setting the internal_sequence_id\r\n \t\t\t\t\tSequencePropertyBean internalSequenceBean = new SequencePropertyBean();\r\n \t\t\t\t\tinternalSequenceBean.setName(Sandesha2Constants.SequenceProperties.INTERNAL_SEQUENCE_ID);\r\n-\t\t\t\t\tinternalSequenceBean.setSequenceID(offeredSequenceID);\r\n+\t\t\t\t\tinternalSequenceBean.setSequencePropertyKey(offeredSequenceID);\r\n \t\t\t\t\tinternalSequenceBean.setValue(outgoingSideInternalSequenceID);\r\n \t\t\t\t\tseqPropMgr.insert(internalSequenceBean);\r\n \t\t\t\t} else {\r",
                "raw_url": "https://github.com/apache/sandesha/raw/7872964c1207c7102ad790f4598ecff879d28c13/src/org/apache/sandesha2/msgprocessors/CreateSeqMsgProcessor.java",
                "sha": "828b4b87bbf2329d8efc8e6cfce0d5dffdea2c17",
                "status": "modified"
            },
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/sandesha/blob/7872964c1207c7102ad790f4598ecff879d28c13/src/org/apache/sandesha2/msgprocessors/CreateSeqResponseMsgProcessor.java",
                "changes": 4,
                "contents_url": "https://api.github.com/repos/apache/sandesha/contents/src/org/apache/sandesha2/msgprocessors/CreateSeqResponseMsgProcessor.java?ref=7872964c1207c7102ad790f4598ecff879d28c13",
                "deletions": 2,
                "filename": "src/org/apache/sandesha2/msgprocessors/CreateSeqResponseMsgProcessor.java",
                "patch": "@@ -179,7 +179,7 @@ public void processInMessage(RMMsgContext createSeqResponseRMMsgCtx) throws Sand\n \t\t\tEndpointReference acksToEPR = accept.getAcksTo().getAddress().getEpr();\r\n \t\t\tSequencePropertyBean acksToBean = new SequencePropertyBean();\r\n \t\t\tacksToBean.setName(Sandesha2Constants.SequenceProperties.ACKS_TO_EPR);\r\n-\t\t\tacksToBean.setSequenceID(offeredSequenceId);\r\n+\t\t\tacksToBean.setSequencePropertyKey(offeredSequenceId);\r\n \t\t\tacksToBean.setValue(acksToEPR.getAddress());\r\n \r\n \t\t\tsequencePropMgr.insert(acksToBean);\r\n@@ -202,7 +202,7 @@ public void processInMessage(RMMsgContext createSeqResponseRMMsgCtx) throws Sand\n \t\t\tsequencePropMgr.insert(receivedMsgBean);\r\n \r\n \t\t\tSequencePropertyBean msgsBean = new SequencePropertyBean();\r\n-\t\t\tmsgsBean.setSequenceID(offeredSequenceId);\r\n+\t\t\tmsgsBean.setSequencePropertyKey(offeredSequenceId);\r\n \t\t\tmsgsBean.setName(Sandesha2Constants.SequenceProperties.CLIENT_COMPLETED_MESSAGES);\r\n \t\t\tmsgsBean.setValue(\"\");\r\n \t\t\tsequencePropMgr.insert(msgsBean);\r",
                "raw_url": "https://github.com/apache/sandesha/raw/7872964c1207c7102ad790f4598ecff879d28c13/src/org/apache/sandesha2/msgprocessors/CreateSeqResponseMsgProcessor.java",
                "sha": "30f5412b5b13eedd92170af858083e6566e563b3",
                "status": "modified"
            },
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/sandesha/blob/7872964c1207c7102ad790f4598ecff879d28c13/src/org/apache/sandesha2/msgprocessors/TerminateSeqMsgProcessor.java",
                "changes": 4,
                "contents_url": "https://api.github.com/repos/apache/sandesha/contents/src/org/apache/sandesha2/msgprocessors/TerminateSeqMsgProcessor.java?ref=7872964c1207c7102ad790f4598ecff879d28c13",
                "deletions": 2,
                "filename": "src/org/apache/sandesha2/msgprocessors/TerminateSeqMsgProcessor.java",
                "patch": "@@ -129,7 +129,7 @@ public void processInMessage(RMMsgContext terminateSeqRMMsg) throws SandeshaExce\n \r\n \r\n \t\tSequencePropertyBean terminateReceivedBean = new SequencePropertyBean();\r\n-\t\tterminateReceivedBean.setSequenceID(sequenceId);\r\n+\t\tterminateReceivedBean.setSequencePropertyKey(sequenceId);\r\n \t\tterminateReceivedBean.setName(Sandesha2Constants.SequenceProperties.TERMINATE_RECEIVED);\r\n \t\tterminateReceivedBean.setValue(\"true\");\r\n \r\n@@ -436,7 +436,7 @@ public void processOutMessage(RMMsgContext rmMsgCtx) throws SandeshaException {\n \r\n \t\tSequencePropertyBean terminateAdded = new SequencePropertyBean();\r\n \t\tterminateAdded.setName(Sandesha2Constants.SequenceProperties.TERMINATE_ADDED);\r\n-\t\tterminateAdded.setSequenceID(outSequenceID);\r\n+\t\tterminateAdded.setSequencePropertyKey(outSequenceID);\r\n \t\tterminateAdded.setValue(\"true\");\r\n \r\n \t\tseqPropMgr.insert(terminateAdded);\r",
                "raw_url": "https://github.com/apache/sandesha/raw/7872964c1207c7102ad790f4598ecff879d28c13/src/org/apache/sandesha2/msgprocessors/TerminateSeqMsgProcessor.java",
                "sha": "e7f96c4b57fc5e7ea966e8238bd058f1dfadd4cb",
                "status": "modified"
            },
            {
                "additions": 12,
                "blob_url": "https://github.com/apache/sandesha/blob/7872964c1207c7102ad790f4598ecff879d28c13/src/org/apache/sandesha2/storage/beans/SequencePropertyBean.java",
                "changes": 20,
                "contents_url": "https://api.github.com/repos/apache/sandesha/contents/src/org/apache/sandesha2/storage/beans/SequencePropertyBean.java?ref=7872964c1207c7102ad790f4598ecff879d28c13",
                "deletions": 8,
                "filename": "src/org/apache/sandesha2/storage/beans/SequencePropertyBean.java",
                "patch": "@@ -24,10 +24,14 @@\n public class SequencePropertyBean extends RMBean {\r\n \r\n \t/**\r\n-\t * Comment for <code>sequenceID</code>\r\n-\t * Sequence ID of the sequence this property belong to.\r\n+\t * Comment for <code>sequencePropertyKey</code>\r\n+\t * The key used to store properties of this sequence.\r\n+\t * The value depends on the endpoint as given below.\r\n+\t * \r\n+\t * RMS (sending side) - internalSequenceId\r\n+\t * RMD - sequenceId\r\n \t */\r\n-\tprivate String sequenceID;\r\n+\tprivate String sequencePropertyKey;\r\n \r\n \t/**\r\n \t * Comment for <code>name</code>\r\n@@ -42,7 +46,7 @@\n \tprivate String value;\r\n \r\n \tpublic SequencePropertyBean(String seqID, String propertyName, String value) {\r\n-\t\tthis.sequenceID = seqID;\r\n+\t\tthis.sequencePropertyKey = seqID;\r\n \t\tthis.name = propertyName;\r\n \t\tthis.value = value;\r\n \t}\r\n@@ -59,12 +63,12 @@ public void setName(String name) {\n \t\tthis.name = name;\r\n \t}\r\n \r\n-\tpublic String getSequenceID() {\r\n-\t\treturn sequenceID;\r\n+\tpublic String getSequencePropertyKey() {\r\n+\t\treturn sequencePropertyKey;\r\n \t}\r\n \r\n-\tpublic void setSequenceID(String sequenceID) {\r\n-\t\tthis.sequenceID = sequenceID;\r\n+\tpublic void setSequencePropertyKey(String sequencePropertyKey) {\r\n+\t\tthis.sequencePropertyKey = sequencePropertyKey;\r\n \t}\r\n \r\n \tpublic String getValue() {\r",
                "raw_url": "https://github.com/apache/sandesha/raw/7872964c1207c7102ad790f4598ecff879d28c13/src/org/apache/sandesha2/storage/beans/SequencePropertyBean.java",
                "sha": "e97dff5b6f27b3d67774085c299cf293fa2e7cf0",
                "status": "modified"
            },
            {
                "additions": 4,
                "blob_url": "https://github.com/apache/sandesha/blob/7872964c1207c7102ad790f4598ecff879d28c13/src/org/apache/sandesha2/storage/inmemory/InMemorySequencePropertyBeanMgr.java",
                "changes": 8,
                "contents_url": "https://api.github.com/repos/apache/sandesha/contents/src/org/apache/sandesha2/storage/inmemory/InMemorySequencePropertyBeanMgr.java?ref=7872964c1207c7102ad790f4598ecff879d28c13",
                "deletions": 4,
                "filename": "src/org/apache/sandesha2/storage/inmemory/InMemorySequencePropertyBeanMgr.java",
                "patch": "@@ -60,7 +60,7 @@ public synchronized SequencePropertyBean retrieve(String sequenceId, String name\n \t}\r\n \r\n \tpublic synchronized boolean insert(SequencePropertyBean bean) {\r\n-\t\ttable.put(bean.getSequenceID() + \":\" + bean.getName(), bean);\r\n+\t\ttable.put(bean.getSequencePropertyKey() + \":\" + bean.getName(), bean);\r\n \t\treturn true;\r\n \t}\r\n \r\n@@ -83,8 +83,8 @@ public synchronized Collection find(SequencePropertyBean bean) {\n \r\n \t\t\tboolean equal = true;\r\n \r\n-\t\t\tif (bean.getSequenceID() != null\r\n-\t\t\t\t\t&& !bean.getSequenceID().equals(temp.getSequenceID()))\r\n+\t\t\tif (bean.getSequencePropertyKey() != null\r\n+\t\t\t\t\t&& !bean.getSequencePropertyKey().equals(temp.getSequencePropertyKey()))\r\n \t\t\t\tequal = false;\r\n \r\n \t\t\tif (bean.getName() != null\r\n@@ -121,7 +121,7 @@ public synchronized boolean updateOrInsert(SequencePropertyBean bean) {\n \t}\r\n \r\n \tprivate String getId(SequencePropertyBean bean) {\r\n-\t\treturn bean.getSequenceID() + \":\" + bean.getName();\r\n+\t\treturn bean.getSequencePropertyKey() + \":\" + bean.getName();\r\n \t}\r\n \t\r\n \tpublic synchronized SequencePropertyBean findUnique(SequencePropertyBean bean) throws SandeshaException {\r",
                "raw_url": "https://github.com/apache/sandesha/raw/7872964c1207c7102ad790f4598ecff879d28c13/src/org/apache/sandesha2/storage/inmemory/InMemorySequencePropertyBeanMgr.java",
                "sha": "56084b0b602fe3dbef5a1c51f2600e94774a5251",
                "status": "modified"
            },
            {
                "additions": 45,
                "blob_url": "https://github.com/apache/sandesha/blob/7872964c1207c7102ad790f4598ecff879d28c13/src/org/apache/sandesha2/util/FaultManager.java",
                "changes": 83,
                "contents_url": "https://api.github.com/repos/apache/sandesha/contents/src/org/apache/sandesha2/util/FaultManager.java?ref=7872964c1207c7102ad790f4598ecff879d28c13",
                "deletions": 38,
                "filename": "src/org/apache/sandesha2/util/FaultManager.java",
                "patch": "@@ -288,50 +288,57 @@ public RMMsgContext checkForInvalidAcknowledgement(RMMsgContext ackRMMessageCont\n \n \t\tboolean invalidAck = false;\n \t\tString reason = null;\n-\t\tSequenceAcknowledgement sequenceAcknowledgement = (SequenceAcknowledgement) ackRMMessageContext\n-\t\t\t\t.getMessagePart(Sandesha2Constants.MessageParts.SEQ_ACKNOWLEDGEMENT);\n-\t\tList sequenceAckList = sequenceAcknowledgement.getAcknowledgementRanges();\n-\t\tIterator it = sequenceAckList.iterator();\n-\n-\t\twhile (it.hasNext()) {\n-\t\t\tAcknowledgementRange acknowledgementRange = (AcknowledgementRange) it.next();\n-\t\t\tlong upper = acknowledgementRange.getUpperValue();\n-\t\t\tlong lower = acknowledgementRange.getLowerValue();\n-\n-\t\t\tif (lower > upper) {\n-\t\t\t\tinvalidAck = true;\n-\t\t\t\treason = SandeshaMessageHelper.getMessage(SandeshaMessageKeys.ackInvalid, Long.toString(lower), Long\n-\t\t\t\t\t\t.toString(upper));\n-\t\t\t}\n-\t\t}\n-\n-\t\tif (invalidAck) {\n-\t\t\tFaultData data = new FaultData();\n-\t\t\tint SOAPVersion = SandeshaUtil.getSOAPVersion(ackMessageContext.getEnvelope());\n-\t\t\tif (SOAPVersion == Sandesha2Constants.SOAPVersion.v1_1)\n-\t\t\t\tdata.setCode(SOAP11Constants.FAULT_CODE_SENDER);\n-\t\t\telse\n-\t\t\t\tdata.setCode(SOAP12Constants.FAULT_CODE_SENDER);\n-\n-\t\t\tdata.setSubcode(Sandesha2Constants.SOAPFaults.Subcodes.INVALID_ACKNOWLEDGEMENT);\n-\t\t\tdata.setReason(reason);\n-\n-\t\t\tSOAPFactory factory = SOAPAbstractFactory.getSOAPFactory(SOAPVersion);\n-\t\t\tOMElement dummyElement = factory.createOMElement(\"dummyElem\", null);\n-\t\t\tsequenceAcknowledgement.toOMElement(dummyElement);\n+\t\t\n+\t\tIterator sequenceAckIter = ackRMMessageContext.getMessageParts(\n+\t\t\t\tSandesha2Constants.MessageParts.SEQ_ACKNOWLEDGEMENT);\n+\t\t\n+\t\twhile (sequenceAckIter.hasNext()) {\n+\t\t\tSequenceAcknowledgement sequenceAcknowledgement = (SequenceAcknowledgement) sequenceAckIter.next();\n+\t\t\tList sequenceAckList = sequenceAcknowledgement.getAcknowledgementRanges();\n+\t\t\tIterator it = sequenceAckList.iterator();\n \n-\t\t\tOMElement sequenceAckElement = dummyElement.getFirstChildWithName(new QName(\n-\t\t\t\t\tSandesha2Constants.WSRM_COMMON.SEQUENCE_ACK));\n-\t\t\tdata.setDetail(sequenceAckElement);\n+\t\t\twhile (it.hasNext()) {\n+\t\t\t\tAcknowledgementRange acknowledgementRange = (AcknowledgementRange) it.next();\n+\t\t\t\tlong upper = acknowledgementRange.getUpperValue();\n+\t\t\t\tlong lower = acknowledgementRange.getLowerValue();\n+\n+\t\t\t\tif (lower > upper) {\n+\t\t\t\t\tinvalidAck = true;\n+\t\t\t\t\treason = SandeshaMessageHelper.getMessage(SandeshaMessageKeys.ackInvalid, Long.toString(lower), Long\n+\t\t\t\t\t\t\t.toString(upper));\n+\t\t\t\t}\n+\t\t\t}\n \n-\t\t\tif (log.isDebugEnabled())\n-\t\t\t\tlog.debug(\"Exit: FaultManager::checkForInvalidAcknowledgement, invalid ACK\");\n-\t\t\treturn getFault(ackRMMessageContext, data, ackRMMessageContext.getAddressingNamespaceValue(),\n-\t\t\t\t\tstorageManager);\n+\t\t\tif (invalidAck) {\n+\t\t\t\tFaultData data = new FaultData();\n+\t\t\t\tint SOAPVersion = SandeshaUtil.getSOAPVersion(ackMessageContext.getEnvelope());\n+\t\t\t\tif (SOAPVersion == Sandesha2Constants.SOAPVersion.v1_1)\n+\t\t\t\t\tdata.setCode(SOAP11Constants.FAULT_CODE_SENDER);\n+\t\t\t\telse\n+\t\t\t\t\tdata.setCode(SOAP12Constants.FAULT_CODE_SENDER);\n+\n+\t\t\t\tdata.setSubcode(Sandesha2Constants.SOAPFaults.Subcodes.INVALID_ACKNOWLEDGEMENT);\n+\t\t\t\tdata.setReason(reason);\n+\n+\t\t\t\tSOAPFactory factory = SOAPAbstractFactory.getSOAPFactory(SOAPVersion);\n+\t\t\t\tOMElement dummyElement = factory.createOMElement(\"dummyElem\", null);\n+\t\t\t\tsequenceAcknowledgement.toOMElement(dummyElement);\n+\n+\t\t\t\tOMElement sequenceAckElement = dummyElement.getFirstChildWithName(new QName(\n+\t\t\t\t\t\tSandesha2Constants.WSRM_COMMON.SEQUENCE_ACK));\n+\t\t\t\tdata.setDetail(sequenceAckElement);\n+\n+\t\t\t\tif (log.isDebugEnabled())\n+\t\t\t\t\tlog.debug(\"Exit: FaultManager::checkForInvalidAcknowledgement, invalid ACK\");\n+\t\t\t\treturn getFault(ackRMMessageContext, data, ackRMMessageContext.getAddressingNamespaceValue(),\n+\t\t\t\t\t\tstorageManager);\n+\t\t\t}\n+\t\t\n \t\t}\n \n \t\tif (log.isDebugEnabled())\n \t\t\tlog.debug(\"Exit: FaultManager::checkForInvalidAcknowledgement\");\n+\t\t\n \t\treturn null;\n \t}\n ",
                "raw_url": "https://github.com/apache/sandesha/raw/7872964c1207c7102ad790f4598ecff879d28c13/src/org/apache/sandesha2/util/FaultManager.java",
                "sha": "fc614a73f0d90f35e23b4913095813f4cc086d61",
                "status": "modified"
            },
            {
                "additions": 6,
                "blob_url": "https://github.com/apache/sandesha/blob/7872964c1207c7102ad790f4598ecff879d28c13/src/org/apache/sandesha2/util/MsgInitializer.java",
                "changes": 31,
                "contents_url": "https://api.github.com/repos/apache/sandesha/contents/src/org/apache/sandesha2/util/MsgInitializer.java?ref=7872964c1207c7102ad790f4598ecff879d28c13",
                "deletions": 25,
                "filename": "src/org/apache/sandesha2/util/MsgInitializer.java",
                "patch": "@@ -106,7 +106,9 @@ private static void populateRMMsgContext(MessageContext msgCtx, RMMsgContext rmM\n \t\t\trmNamespace = elements.getSequence().getNamespaceValue();\r\n \t\t}\r\n \r\n-\t\t\r\n+\t\t//In case of ack messages RM Namespace is decided based on the sequenceId of the first \r\n+\t\t//sequence Ack. In other words Sandesha2 does not expect to receive two SequenceAcknowledgements\r\n+\t\t//of different RM specifications in the same incoming message\r\n \t\tfor (Iterator iter = elements.getSequenceAcknowledgements();iter.hasNext();) {\r\n \t\t\tSequenceAcknowledgement sequenceAck = (SequenceAcknowledgement) iter.next();\r\n \t\t\trmMsgContext.setMessagePart(Sandesha2Constants.MessageParts.SEQ_ACKNOWLEDGEMENT, sequenceAck);\r\n@@ -219,8 +221,9 @@ private static boolean validateMessage(RMMsgContext rmMsgCtx) throws SandeshaExc\n \t\t\trmMsgCtx.setMessageType(Sandesha2Constants.MessageTypes.ACK);\r\n \t\t\tSequenceAcknowledgement sequenceAcknowledgement = (SequenceAcknowledgement) sequenceAcknowledgementsIter.next();\r\n \t\t\t\r\n-\t\t\t//picking the sequenceId of the first sequence ack.\r\n-\t\t\tsequenceID = sequenceAcknowledgement.getIdentifier().getIdentifier();\r\n+\t\t\t//if there is only on sequenceAck, sequenceId will be set. Otherwise it will not be.\r\n+\t\t\tif (!sequenceAcknowledgementsIter.hasNext())\r\n+\t\t\t\tsequenceID = sequenceAcknowledgement.getIdentifier().getIdentifier();\r\n \t\t} else if (ackRequest != null) {\r\n \t\t\trmMsgCtx.setMessageType(Sandesha2Constants.MessageTypes.ACK_REQUEST);\r\n \t\t\tsequenceID = ackRequest.getIdentifier().getIdentifier();\r\n@@ -247,28 +250,6 @@ private static boolean validateMessage(RMMsgContext rmMsgCtx) throws SandeshaExc\n \t\tif (sequenceID!=null)\r\n \t\t\trmMsgCtx.setProperty(Sandesha2Constants.MessageContextProperties.SEQUENCE_ID,sequenceID);\r\n \r\n-\t\tString propertyKey = SandeshaUtil.getPropertyKey(rmMsgCtx);\r\n-\r\n-\t\t//In case of ack messages RM Namespace is decided based on the sequenceId of the first \r\n-\t\t//sequence Ack. In other words Sandesha2 does not expect to receive two SequenceAcknowledgements\r\n-\t\t//of different RM specifications in the same incoming message.\r\n-\t\t\r\n-\t\tString rmNamespace = rmMsgCtx.getRMNamespaceValue();\r\n-\t\tif (sequenceID != null) {\r\n-\t\t\tString specVersion = SandeshaUtil.getRMVersion(propertyKey, storageManager);\r\n-\r\n-\t\t\tString sequenceRMNamespace = null;\r\n-\t\t\tif (specVersion != null)\r\n-\t\t\t\tsequenceRMNamespace = SpecSpecificConstants.getRMNamespaceValue(specVersion);\r\n-\t\t\tif (sequenceRMNamespace != null && rmNamespace != null) {\r\n-\t\t\t\tif (!sequenceRMNamespace.equals(rmNamespace)) {\r\n-\t\t\t\t\tthrow new SandeshaException(SandeshaMessageHelper.getMessage(\r\n-\t\t\t\t\t\t\tSandeshaMessageKeys.rmNamespaceNotMatchSequence, rmNamespace, sequenceRMNamespace,\r\n-\t\t\t\t\t\t\tsequenceID));\r\n-\t\t\t\t}\r\n-\t\t\t}\r\n-\t\t}\r\n-\r\n \t\treturn true;\r\n \t}\r\n \r",
                "raw_url": "https://github.com/apache/sandesha/raw/7872964c1207c7102ad790f4598ecff879d28c13/src/org/apache/sandesha2/util/MsgInitializer.java",
                "sha": "eff63ce22173304c40fd9a8e8d01dad46e118701",
                "status": "modified"
            },
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/sandesha/blob/7872964c1207c7102ad790f4598ecff879d28c13/src/org/apache/sandesha2/util/RMMsgCreator.java",
                "changes": 4,
                "contents_url": "https://api.github.com/repos/apache/sandesha/contents/src/org/apache/sandesha2/util/RMMsgCreator.java?ref=7872964c1207c7102ad790f4598ecff879d28c13",
                "deletions": 2,
                "filename": "src/org/apache/sandesha2/util/RMMsgCreator.java",
                "patch": "@@ -348,7 +348,7 @@ public static RMMsgContext createCreateSeqMsg(RMMsgContext applicationRMMsg, Str\n \t * @throws SandeshaException\r\n \t */\r\n \tpublic static RMMsgContext createTerminateSequenceMessage(RMMsgContext referenceRMMessage, String sequenceId,\r\n-\t\t\tString internalSequenceID, StorageManager storageManager) throws SandeshaException {\r\n+\t\t\tString sequencePropertyKey, StorageManager storageManager) throws SandeshaException {\r\n \t\tMessageContext referenceMessage = referenceRMMessage.getMessageContext();\r\n \t\tif (referenceMessage == null)\r\n \t\t\tthrow new SandeshaException(SandeshaMessageHelper.getMessage(SandeshaMessageKeys.msgContextNotSet));\r\n@@ -389,7 +389,7 @@ public static RMMsgContext createTerminateSequenceMessage(RMMsgContext reference\n \t\t\tterminateMsgOperation.setRemainingPhasesInFlow(teferenceMsgOperation.getRemainingPhasesInFlow());\r\n \t\t}\r\n \r\n-\t\tString rmVersion = SandeshaUtil.getRMVersion(internalSequenceID, storageManager);\r\n+\t\tString rmVersion = SandeshaUtil.getRMVersion(sequencePropertyKey, storageManager);\r\n \t\tif (rmVersion == null)\r\n \t\t\tthrow new SandeshaException(SandeshaMessageHelper.getMessage(SandeshaMessageKeys.cannotDecideRMVersion));\r\n \r",
                "raw_url": "https://github.com/apache/sandesha/raw/7872964c1207c7102ad790f4598ecff879d28c13/src/org/apache/sandesha2/util/RMMsgCreator.java",
                "sha": "56e6b9dad9764c97d3becc95edbb4a4b834a3912",
                "status": "modified"
            },
            {
                "additions": 7,
                "blob_url": "https://github.com/apache/sandesha/blob/7872964c1207c7102ad790f4598ecff879d28c13/src/org/apache/sandesha2/util/SandeshaUtil.java",
                "changes": 13,
                "contents_url": "https://api.github.com/repos/apache/sandesha/contents/src/org/apache/sandesha2/util/SandeshaUtil.java?ref=7872964c1207c7102ad790f4598ecff879d28c13",
                "deletions": 6,
                "filename": "src/org/apache/sandesha2/util/SandeshaUtil.java",
                "patch": "@@ -440,13 +440,14 @@ public static boolean isRMGlobalMessage(MessageContext msgCtx) {\n \t\t// TODO make this spec indipendent\r\n \r\n \t\tOMElement sequenceElem = null;\r\n-\t\tif (header != null)\r\n+\t\tif (header != null) {\r\n \t\t\tsequenceElem = header.getFirstChildWithName(new QName(Sandesha2Constants.SPEC_2005_02.NS_URI,\r\n-\t\t\t\t\tSandesha2Constants.WSRM_COMMON.SEQUENCE));\r\n+\t\t\t\t\t\tSandesha2Constants.WSRM_COMMON.SEQUENCE));\r\n \r\n-\t\tif (sequenceElem == null)\r\n-\t\t\tsequenceElem = header.getFirstChildWithName(new QName(Sandesha2Constants.SPEC_2006_08.NS_URI,\r\n-\t\t\t\t\tSandesha2Constants.WSRM_COMMON.SEQUENCE));\r\n+\t\t\tif (sequenceElem == null)\r\n+\t\t\t\tsequenceElem = header.getFirstChildWithName(new QName(Sandesha2Constants.SPEC_2006_08.NS_URI,\r\n+\t\t\t\t\t\tSandesha2Constants.WSRM_COMMON.SEQUENCE));\r\n+\t\t}\r\n \r\n \t\tif (sequenceElem != null)\r\n \t\t\trmGlobalMsg = true;\r\n@@ -961,7 +962,7 @@ private static SecurityManager getSecurityManagerInstance (String className,Conf\n \t * @return\r\n \t */\r\n \t\r\n-\tpublic static String getPropertyKey (RMMsgContext rmMsgContext) {\r\n+\tpublic static String getSequencePropertyKey (RMMsgContext rmMsgContext) {\r\n \t\tString sequenceId = (String) rmMsgContext.getProperty(Sandesha2Constants.MessageContextProperties.SEQUENCE_ID);\r\n \t\tString internalSequenceId = (String) rmMsgContext.getProperty(Sandesha2Constants.MessageContextProperties.INTERNAL_SEQUENCE_ID);\r\n \t\t\r",
                "raw_url": "https://github.com/apache/sandesha/raw/7872964c1207c7102ad790f4598ecff879d28c13/src/org/apache/sandesha2/util/SandeshaUtil.java",
                "sha": "a90c269bb49ac5d9a2c444c54e524b4aefd14c94",
                "status": "modified"
            },
            {
                "additions": 8,
                "blob_url": "https://github.com/apache/sandesha/blob/7872964c1207c7102ad790f4598ecff879d28c13/src/org/apache/sandesha2/util/SequenceManager.java",
                "changes": 38,
                "contents_url": "https://api.github.com/repos/apache/sandesha/contents/src/org/apache/sandesha2/util/SequenceManager.java?ref=7872964c1207c7102ad790f4598ecff879d28c13",
                "deletions": 30,
                "filename": "src/org/apache/sandesha2/util/SequenceManager.java",
                "patch": "@@ -139,7 +139,7 @@ public static String setupNewSequence(RMMsgContext createSequenceMsg, StorageMan\n \t\t}\r\n \r\n \t\tSequencePropertyBean specVerionBean = new SequencePropertyBean();\r\n-\t\tspecVerionBean.setSequenceID(sequenceId);\r\n+\t\tspecVerionBean.setSequencePropertyKey(sequenceId);\r\n \t\tspecVerionBean.setName(Sandesha2Constants.SequenceProperties.RM_SPEC_VERSION);\r\n \t\tspecVerionBean.setValue(specVersion);\r\n \r\n@@ -288,7 +288,7 @@ public static void setupNewClientSequence(MessageContext firstAplicationMsgCtx,\n \t\t}\r\n \r\n \t\tSequencePropertyBean msgsBean = new SequencePropertyBean();\r\n-\t\tmsgsBean.setSequenceID(internalSequenceId);\r\n+\t\tmsgsBean.setSequencePropertyKey(internalSequenceId);\r\n \t\tmsgsBean.setName(Sandesha2Constants.SequenceProperties.CLIENT_COMPLETED_MESSAGES);\r\n \t\tmsgsBean.setValue(\"\");\r\n \r\n@@ -304,7 +304,7 @@ public static void setupNewClientSequence(MessageContext firstAplicationMsgCtx,\n \t\tString transportTo = (String) firstAplicationMsgCtx.getProperty(MessageContextConstants.TRANSPORT_URL);\r\n \t\tif (transportTo != null) {\r\n \t\t\tSequencePropertyBean transportToBean = new SequencePropertyBean();\r\n-\t\t\ttransportToBean.setSequenceID(internalSequenceId);\r\n+\t\t\ttransportToBean.setSequencePropertyKey(internalSequenceId);\r\n \t\t\ttransportToBean.setName(Sandesha2Constants.SequenceProperties.TRANSPORT_TO);\r\n \t\t\ttransportToBean.setValue(transportTo);\r\n \r\n@@ -313,7 +313,7 @@ public static void setupNewClientSequence(MessageContext firstAplicationMsgCtx,\n \r\n \t\t// setting the spec version for the client side.\r\n \t\tSequencePropertyBean specVerionBean = new SequencePropertyBean();\r\n-\t\tspecVerionBean.setSequenceID(internalSequenceId);\r\n+\t\tspecVerionBean.setSequencePropertyKey(internalSequenceId);\r\n \t\tspecVerionBean.setName(Sandesha2Constants.SequenceProperties.RM_SPEC_VERSION);\r\n \t\tspecVerionBean.setValue(specVersion);\r\n \t\tseqPropMgr.insert(specVerionBean);\r\n@@ -420,7 +420,7 @@ public static void updateLastActivatedTime(String propertyKey, StorageManager st\n \t\tif (lastActivatedBean == null) {\r\n \t\t\tadded = true;\r\n \t\t\tlastActivatedBean = new SequencePropertyBean();\r\n-\t\t\tlastActivatedBean.setSequenceID(propertyKey);\r\n+\t\t\tlastActivatedBean.setSequencePropertyKey(propertyKey);\r\n \t\t\tlastActivatedBean.setName(Sandesha2Constants.SequenceProperties.LAST_ACTIVATED_TIME);\r\n \t\t}\r\n \r\n@@ -470,34 +470,12 @@ public static boolean hasSequenceTimedOut(String propertyKey, RMMsgContext rmMsg\n \t\treturn sequenceTimedOut;\r\n \t}\r\n \r\n-\tpublic static long getOutGoingSequenceAckedMessageCount(String internalSequenceID, StorageManager storageManager)\r\n+\tpublic static long getOutGoingSequenceAckedMessageCount(String sequencePropertyKey, StorageManager storageManager)\r\n \t\t\tthrows SandeshaException {\r\n \t\t// / Transaction transaction = storageManager.getTransaction();\r\n \t\tSequencePropertyBeanMgr seqPropBeanMgr = storageManager.getSequencePropertyBeanMgr();\r\n \r\n-\t\tSequencePropertyBean findSeqIDBean = new SequencePropertyBean();\r\n-\t\tfindSeqIDBean.setValue(internalSequenceID);\r\n-\t\tfindSeqIDBean.setName(Sandesha2Constants.SequenceProperties.INTERNAL_SEQUENCE_ID);\r\n-\t\tCollection seqIDBeans = seqPropBeanMgr.find(findSeqIDBean);\r\n-\r\n-\t\tif (seqIDBeans.size() == 0) {\r\n-\t\t\tString message = SandeshaMessageHelper.getMessage(SandeshaMessageKeys.noSequenceEstablished,\r\n-\t\t\t\t\tinternalSequenceID);\r\n-\t\t\tlog.debug(message);\r\n-\t\t\tthrow new SandeshaException(message);\r\n-\t\t}\r\n-\r\n-\t\tif (seqIDBeans.size() > 1) {\r\n-\t\t\tString message = SandeshaMessageHelper.getMessage(\r\n-\t\t\t\t\tSandeshaMessageKeys.cannotGenerateReportNonUniqueSequence, internalSequenceID);\r\n-\t\t\tlog.debug(message);\r\n-\t\t\tthrow new SandeshaException(message);\r\n-\t\t}\r\n-\r\n-\t\tSequencePropertyBean seqIDBean = (SequencePropertyBean) seqIDBeans.iterator().next();\r\n-\t\tString sequenceID = seqIDBean.getSequenceID();\r\n-\r\n-\t\tSequencePropertyBean ackedMsgBean = seqPropBeanMgr.retrieve(sequenceID,\r\n+\t\tSequencePropertyBean ackedMsgBean = seqPropBeanMgr.retrieve(sequencePropertyKey,\r\n \t\t\t\tSandesha2Constants.SequenceProperties.NO_OF_OUTGOING_MSGS_ACKED);\r\n \t\tif (ackedMsgBean == null)\r\n \t\t\treturn 0; // No acknowledgement has been received yet.\r\n@@ -532,7 +510,7 @@ public static boolean isOutGoingSequenceCompleted(String internalSequenceID, Sto\n \t\t}\r\n \r\n \t\tSequencePropertyBean seqIDBean = (SequencePropertyBean) seqIDBeans.iterator().next();\r\n-\t\tString sequenceID = seqIDBean.getSequenceID();\r\n+\t\tString sequenceID = seqIDBean.getSequencePropertyKey();\r\n \r\n \t\tSequencePropertyBean terminateAddedBean = seqPropBeanMgr.retrieve(sequenceID,\r\n \t\t\t\tSandesha2Constants.SequenceProperties.TERMINATE_ADDED);\r",
                "raw_url": "https://github.com/apache/sandesha/raw/7872964c1207c7102ad790f4598ecff879d28c13/src/org/apache/sandesha2/util/SequenceManager.java",
                "sha": "8182524a5657add509475426b15c30563ee4a7b3",
                "status": "modified"
            },
            {
                "additions": 11,
                "blob_url": "https://github.com/apache/sandesha/blob/7872964c1207c7102ad790f4598ecff879d28c13/src/org/apache/sandesha2/util/TerminateManager.java",
                "changes": 22,
                "contents_url": "https://api.github.com/repos/apache/sandesha/contents/src/org/apache/sandesha2/util/TerminateManager.java?ref=7872964c1207c7102ad790f4598ecff879d28c13",
                "deletions": 11,
                "filename": "src/org/apache/sandesha2/util/TerminateManager.java",
                "patch": "@@ -240,15 +240,15 @@ private static void doUpdatesIfNeeded(String sequenceID, SequencePropertyBean pr\n \t\t\t// so saving it with the sequenceID value being the out sequenceID.\r\n \r\n \t\t\tSequencePropertyBean newBean = new SequencePropertyBean();\r\n-\t\t\tnewBean.setSequenceID(sequenceID);\r\n+\t\t\tnewBean.setSequencePropertyKey(sequenceID);\r\n \t\t\tnewBean.setName(propertyBean.getName());\r\n \t\t\tnewBean.setValue(propertyBean.getValue());\r\n \r\n \t\t\tseqPropMgr.insert(newBean);\r\n \t\t\t// TODO amazingly this property does not seem to get deleted without\r\n \t\t\t// following - in the hibernate impl\r\n \t\t\t// (even though the lines efter current methodcall do this).\r\n-\t\t\tseqPropMgr.delete(propertyBean.getSequenceID(), propertyBean.getName());\r\n+\t\t\tseqPropMgr.delete(propertyBean.getSequencePropertyKey(), propertyBean.getName());\r\n \t\t}\r\n \t}\r\n \r\n@@ -341,7 +341,7 @@ private static void cleanSendingSideData(ConfigurationContext configContext, Str\n \r\n \t\t// removing sequence properties\r\n \t\tSequencePropertyBean findSequencePropertyBean1 = new SequencePropertyBean();\r\n-\t\tfindSequencePropertyBean1.setSequenceID(internalSequenceID);\r\n+\t\tfindSequencePropertyBean1.setSequencePropertyKey(internalSequenceID);\r\n \t\tcollection = sequencePropertyBeanMgr.find(findSequencePropertyBean1);\r\n \t\titerator = collection.iterator();\r\n \t\twhile (iterator.hasNext()) {\r\n@@ -351,13 +351,13 @@ private static void cleanSendingSideData(ConfigurationContext configContext, Str\n \t\t\t// TODO all properties which hv the temm:Seq:id as the key should be\r\n \t\t\t// deletable.\r\n \t\t\tif (isPropertyDeletable(sequencePropertyBean.getName())) {\r\n-\t\t\t\tsequencePropertyBeanMgr.delete(sequencePropertyBean.getSequenceID(), sequencePropertyBean.getName());\r\n+\t\t\t\tsequencePropertyBeanMgr.delete(sequencePropertyBean.getSequencePropertyKey(), sequencePropertyBean.getName());\r\n \t\t\t}\r\n \t\t}\r\n \t}\r\n \r\n \tpublic static void addTerminateSequenceMessage(RMMsgContext referenceMessage, String outSequenceId,\r\n-\t\t\tString internalSequenceId, StorageManager storageManager) throws SandeshaException {\r\n+\t\t\tString sequencePropertyKey, StorageManager storageManager) throws SandeshaException {\r\n \r\n \t\tConfigurationContext configurationContext = referenceMessage.getMessageContext().getConfigurationContext();\r\n \r\n@@ -375,11 +375,11 @@ public static void addTerminateSequenceMessage(RMMsgContext referenceMessage, St\n \t\t}\r\n \r\n \t\tRMMsgContext terminateRMMessage = RMMsgCreator.createTerminateSequenceMessage(referenceMessage, outSequenceId,\r\n-\t\t\t\tinternalSequenceId, storageManager);\r\n+\t\t\t\tsequencePropertyKey, storageManager);\r\n \t\tterminateRMMessage.setFlow(MessageContext.OUT_FLOW);\r\n \t\tterminateRMMessage.setProperty(Sandesha2Constants.APPLICATION_PROCESSING_DONE, \"true\");\r\n \r\n-\t\tSequencePropertyBean toBean = seqPropMgr.retrieve(internalSequenceId,\r\n+\t\tSequencePropertyBean toBean = seqPropMgr.retrieve(sequencePropertyKey,\r\n \t\t\t\tSandesha2Constants.SequenceProperties.TO_EPR);\r\n \r\n \t\tEndpointReference toEPR = new EndpointReference(toBean.getValue());\r\n@@ -390,17 +390,17 @@ public static void addTerminateSequenceMessage(RMMsgContext referenceMessage, St\n \r\n \t\tterminateRMMessage.setTo(new EndpointReference(toEPR.getAddress()));\r\n \r\n-\t\tString addressingNamespaceURI = SandeshaUtil.getSequenceProperty(internalSequenceId,\r\n+\t\tString addressingNamespaceURI = SandeshaUtil.getSequenceProperty(sequencePropertyKey,\r\n \t\t\t\tSandesha2Constants.SequenceProperties.ADDRESSING_NAMESPACE_VALUE, storageManager);\r\n \t\tString anonymousURI = SpecSpecificConstants.getAddressingAnonymousURI(addressingNamespaceURI);\r\n \r\n-\t\tString rmVersion = SandeshaUtil.getRMVersion(internalSequenceId, storageManager);\r\n+\t\tString rmVersion = SandeshaUtil.getRMVersion(sequencePropertyKey, storageManager);\r\n \t\tif (rmVersion == null)\r\n \t\t\tthrow new SandeshaException(SandeshaMessageHelper.getMessage(SandeshaMessageKeys.cannotDecideRMVersion));\r\n \t\tterminateRMMessage.setWSAAction(SpecSpecificConstants.getTerminateSequenceAction(rmVersion));\r\n \t\tterminateRMMessage.setSOAPAction(SpecSpecificConstants.getTerminateSequenceSOAPAction(rmVersion));\r\n \r\n-\t\tSequencePropertyBean transportToBean = seqPropMgr.retrieve(internalSequenceId,\r\n+\t\tSequencePropertyBean transportToBean = seqPropMgr.retrieve(sequencePropertyKey,\r\n \t\t\t\tSandesha2Constants.SequenceProperties.TRANSPORT_TO);\r\n \t\tif (transportToBean != null) {\r\n \t\t\tterminateRMMessage.setProperty(MessageContextConstants.TRANSPORT_URL, transportToBean.getValue());\r\n@@ -441,7 +441,7 @@ public static void addTerminateSequenceMessage(RMMsgContext referenceMessage, St\n \r\n \t\tSequencePropertyBean terminateAdded = new SequencePropertyBean();\r\n \t\tterminateAdded.setName(Sandesha2Constants.SequenceProperties.TERMINATE_ADDED);\r\n-\t\tterminateAdded.setSequenceID(outSequenceId);\r\n+\t\tterminateAdded.setSequencePropertyKey(outSequenceId);\r\n \t\tterminateAdded.setValue(\"true\");\r\n \r\n \t\tseqPropMgr.insert(terminateAdded);\r",
                "raw_url": "https://github.com/apache/sandesha/raw/7872964c1207c7102ad790f4598ecff879d28c13/src/org/apache/sandesha2/util/TerminateManager.java",
                "sha": "19de96fa96376087261736d7f192092761a934eb",
                "status": "modified"
            }
        ],
        "message": "Renamed the sequenceId property of the sequencePropertyBean manager to sequencePropertyKey.\nThis reflects its real functionality (since we can use sequenceId/internalSequenceId depending \non the RM endpoint).\n\nApplied the patch from Thomas solving a possible NPE.\n\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/sandesha/trunk/java@442863 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/sandesha/commit/1c7f69d8677a81d4d3e7b61873bf99e44002ab60",
        "patched_files": [
            "SandeshaClient.java",
            "SandeshaUtil.java"
        ],
        "repo": "sandesha",
        "unit_tests": [
            "SandeshaClientTest.java",
            "SandeshaUtilTest.java"
        ]
    },
    "sandesha_91f5fc1": {
        "bug_id": "sandesha_91f5fc1",
        "commit": "https://github.com/apache/sandesha/commit/91f5fc1219cc3da51404d1d3cdf4766a0cb5b5c5",
        "file": [
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/sandesha/blob/91f5fc1219cc3da51404d1d3cdf4766a0cb5b5c5/modules/tests/src/test/java/org/apache/sandesha2/faulttests/InvalidAcknowledgementTest.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/sandesha/contents/modules/tests/src/test/java/org/apache/sandesha2/faulttests/InvalidAcknowledgementTest.java?ref=91f5fc1219cc3da51404d1d3cdf4766a0cb5b5c5",
                "deletions": 1,
                "filename": "modules/tests/src/test/java/org/apache/sandesha2/faulttests/InvalidAcknowledgementTest.java",
                "patch": "@@ -269,7 +269,7 @@ private static SenderBean getSenderBean(String seqID, int sendCount, int message\n \t\tbean.setReSend(true);\n \t\tbean.setMessageType(Sandesha2Constants.MessageTypes.APPLICATION);\n \t\tbean.setMessageNumber(messageNo);\n-\t\t\n+\t\tbean.setMessageContextRefKey(\"fakeKey\");\n \t\treturn bean;\n \t}\n }",
                "raw_url": "https://github.com/apache/sandesha/raw/91f5fc1219cc3da51404d1d3cdf4766a0cb5b5c5/modules/tests/src/test/java/org/apache/sandesha2/faulttests/InvalidAcknowledgementTest.java",
                "sha": "3d3f8d50402736c6ce8c4c2234060f7b5179eb3d",
                "status": "modified"
            }
        ],
        "message": "Fix NPE in test casued by earlier commit. oops, sorry\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/sandesha/trunk/java@646829 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/sandesha/commit/67c7ebf57ebd3b26fcca107c45f960eb2403c968",
        "patched_files": [],
        "repo": "sandesha",
        "unit_tests": [
            "InvalidAcknowledgementTest.java"
        ]
    }
}