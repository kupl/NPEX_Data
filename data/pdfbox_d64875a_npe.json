[
    {
        "repo": "pdfbox",
        "commit": "https://github.com/apache/pdfbox/commit/d64875a5f8db2f5bc6ccbcb631cb4a719334094b",
        "bug_id": "pdfbox_d64875a",
        "message": "PDFBOX-3416: avoid NullPointerException as suggested by Vittal Aithal; refactor double code\n\ngit-svn-id: https://svn.apache.org/repos/asf/pdfbox/trunk@1752186 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/pdfbox/commit/97ae43642a255d3c9dcf3c8b579985edc4e09ca2",
        "patched_files": [
            "CreateSignature.java"
        ],
        "file": [
            {
                "status": "modified",
                "additions": 5,
                "raw_url": "https://github.com/apache/pdfbox/raw/d64875a5f8db2f5bc6ccbcb631cb4a719334094b/examples/src/main/java/org/apache/pdfbox/examples/signature/CreateSignature.java",
                "contents_url": "https://api.github.com/repos/apache/pdfbox/contents/examples/src/main/java/org/apache/pdfbox/examples/signature/CreateSignature.java?ref=d64875a5f8db2f5bc6ccbcb631cb4a719334094b",
                "filename": "examples/src/main/java/org/apache/pdfbox/examples/signature/CreateSignature.java",
                "deletions": 24,
                "sha": "f71e4a887085d21dd29ebdfc5b446fbc7354ac57",
                "blob_url": "https://github.com/apache/pdfbox/blob/d64875a5f8db2f5bc6ccbcb631cb4a719334094b/examples/src/main/java/org/apache/pdfbox/examples/signature/CreateSignature.java",
                "patch": "@@ -56,36 +56,17 @@\n     /**\n      * Initialize the signature creator with a keystore and certficate password.\n      * @param keystore the pkcs12 keystore containing the signing certificate\n-     * @param password the password for recovering the key\n+     * @param pin the password for recovering the key\n      * @throws KeyStoreException if the keystore has not been initialized (loaded)\n      * @throws NoSuchAlgorithmException if the algorithm for recovering the key cannot be found\n      * @throws UnrecoverableKeyException if the given password is wrong\n      * @throws CertificateException if the certificate is not valid as signing time\n+     * @throws IOException if no certificate could be found\n      */\n-    public CreateSignature(KeyStore keystore, char[] password)\n-            throws KeyStoreException, UnrecoverableKeyException, NoSuchAlgorithmException, CertificateException\n+    public CreateSignature(KeyStore keystore, char[] pin)\n+            throws KeyStoreException, UnrecoverableKeyException, NoSuchAlgorithmException, CertificateException, IOException\n     {\n-        // grabs the first alias from the keystore and get the private key. An\n-        // TODO alternative method or constructor could be used for setting a specific\n-        // alias that should be used.\n-        Enumeration<String> aliases = keystore.aliases();\n-        String alias;\n-        if (aliases.hasMoreElements())\n-        {\n-            alias = aliases.nextElement();\n-        }\n-        else\n-        {\n-            throw new KeyStoreException(\"Keystore is empty\");\n-        }\n-        setPrivateKey((PrivateKey) keystore.getKey(alias, password));\n-        Certificate cert = keystore.getCertificateChain(alias)[0];\n-        setCertificate(cert);\n-        if (cert instanceof X509Certificate)\n-        {\n-            // avoid expired certificate\n-            ((X509Certificate) cert).checkValidity();\n-        }\n+        super(keystore, pin);\n     }\n \n     /**",
                "changes": 29
            },
            {
                "status": "modified",
                "additions": 55,
                "raw_url": "https://github.com/apache/pdfbox/raw/d64875a5f8db2f5bc6ccbcb631cb4a719334094b/examples/src/main/java/org/apache/pdfbox/examples/signature/CreateSignatureBase.java",
                "contents_url": "https://api.github.com/repos/apache/pdfbox/contents/examples/src/main/java/org/apache/pdfbox/examples/signature/CreateSignatureBase.java?ref=d64875a5f8db2f5bc6ccbcb631cb4a719334094b",
                "filename": "examples/src/main/java/org/apache/pdfbox/examples/signature/CreateSignatureBase.java",
                "deletions": 2,
                "sha": "8026d4323c42d2920694d1f8e0353b175a8bdc86",
                "blob_url": "https://github.com/apache/pdfbox/blob/d64875a5f8db2f5bc6ccbcb631cb4a719334094b/examples/src/main/java/org/apache/pdfbox/examples/signature/CreateSignatureBase.java",
                "patch": "@@ -19,9 +19,16 @@\n import java.io.IOException;\n import java.io.InputStream;\n import java.security.GeneralSecurityException;\n+import java.security.KeyStore;\n+import java.security.KeyStoreException;\n+import java.security.NoSuchAlgorithmException;\n import java.security.PrivateKey;\n+import java.security.UnrecoverableKeyException;\n import java.security.cert.Certificate;\n+import java.security.cert.CertificateException;\n+import java.security.cert.X509Certificate;\n import java.util.ArrayList;\n+import java.util.Enumeration;\n import java.util.List;\n import org.apache.pdfbox.pdmodel.interactive.digitalsignature.SignatureInterface;\n import org.bouncycastle.asn1.ASN1Encodable;\n@@ -54,12 +61,58 @@\n     private Certificate certificate;\n     private TSAClient tsaClient;\n \n-    public void setPrivateKey(PrivateKey privateKey)\n+    /**\n+     * Initialize the signature creator with a keystore (pkcs12) and pin that should be used for the\n+     * signature.\n+     *\n+     * @param keystore is a pkcs12 keystore.\n+     * @param pin is the pin for the keystore / private key\n+     * @throws KeyStoreException if the keystore has not been initialized (loaded)\n+     * @throws NoSuchAlgorithmException if the algorithm for recovering the key cannot be found\n+     * @throws UnrecoverableKeyException if the given password is wrong\n+     * @throws CertificateException if the certificate is not valid as signing time\n+     * @throws IOException if no certificate could be found\n+     */\n+    public CreateSignatureBase(KeyStore keystore, char[] pin)\n+            throws KeyStoreException, UnrecoverableKeyException, NoSuchAlgorithmException, IOException, CertificateException\n+    {\n+        // grabs the first alias from the keystore and get the private key. An\n+        // alternative method or constructor could be used for setting a specific\n+        // alias that should be used.\n+        Enumeration<String> aliases = keystore.aliases();\n+        String alias;\n+        Certificate cert = null;\n+        while (aliases.hasMoreElements())\n+        {\n+            alias = aliases.nextElement();\n+            setPrivateKey((PrivateKey) keystore.getKey(alias, pin));\n+            Certificate[] certChain = keystore.getCertificateChain(alias);\n+            if (certChain == null)\n+            {\n+                continue;\n+            }\n+            cert = certChain[0];\n+            setCertificate(cert);\n+            if (cert instanceof X509Certificate)\n+            {\n+                // avoid expired certificate\n+                ((X509Certificate) cert).checkValidity();\n+            }\n+            break;\n+        }\n+\n+        if (cert == null)\n+        {\n+            throw new IOException(\"Could not find certificate\");\n+        }\n+    }\n+\n+    public final void setPrivateKey(PrivateKey privateKey)\n     {\n         this.privateKey = privateKey;\n     }\n \n-    public void setCertificate(Certificate certificate)\n+    public final void setCertificate(Certificate certificate)\n     {\n         this.certificate = certificate;\n     }",
                "changes": 57
            },
            {
                "status": "modified",
                "additions": 2,
                "raw_url": "https://github.com/apache/pdfbox/raw/d64875a5f8db2f5bc6ccbcb631cb4a719334094b/examples/src/main/java/org/apache/pdfbox/examples/signature/CreateVisibleSignature.java",
                "contents_url": "https://api.github.com/repos/apache/pdfbox/contents/examples/src/main/java/org/apache/pdfbox/examples/signature/CreateVisibleSignature.java?ref=d64875a5f8db2f5bc6ccbcb631cb4a719334094b",
                "filename": "examples/src/main/java/org/apache/pdfbox/examples/signature/CreateVisibleSignature.java",
                "deletions": 21,
                "sha": "7c4e7f48690a06d4e8359aad49e29fee065675ce",
                "blob_url": "https://github.com/apache/pdfbox/blob/d64875a5f8db2f5bc6ccbcb631cb4a719334094b/examples/src/main/java/org/apache/pdfbox/examples/signature/CreateVisibleSignature.java",
                "patch": "@@ -81,31 +81,12 @@ public void setVisibleSignatureProperties(String name, String location, String r\n      * @throws NoSuchAlgorithmException if the algorithm for recovering the key cannot be found\n      * @throws UnrecoverableKeyException if the given password is wrong\n      * @throws CertificateException if the certificate is not valid as signing time\n+     * @throws IOException if no certificate could be found\n      */\n     public CreateVisibleSignature(KeyStore keystore, char[] pin)\n             throws KeyStoreException, UnrecoverableKeyException, NoSuchAlgorithmException, IOException, CertificateException\n     {\n-        // grabs the first alias from the keystore and get the private key. An\n-        // alternative method or constructor could be used for setting a specific\n-        // alias that should be used.\n-        Enumeration<String> aliases = keystore.aliases();\n-        String alias = null;\n-        if (aliases.hasMoreElements())\n-        {\n-            alias = aliases.nextElement();\n-        }\n-        else\n-        {\n-            throw new IOException(\"Could not find alias\");\n-        }\n-        setPrivateKey((PrivateKey) keystore.getKey(alias, pin));\n-        Certificate cert = keystore.getCertificateChain(alias)[0];\n-        setCertificate(cert);\n-        if (cert instanceof X509Certificate)\n-        {\n-            // avoid expired certificate\n-            ((X509Certificate) cert).checkValidity();\n-        }\n+        super(keystore, pin);\n     }\n \n     /**",
                "changes": 23
            }
        ],
        "unit_tests": [
            "TestCreateSignature.java"
        ]
    },
    {
        "buggy": false,
        "test_file": "examples/src/test/java/org/apache/pdfbox/examples/pdmodel/TestCreateSignature.java",
        "buggy_files": [
            "examples/src/main/java/org/apache/pdfbox/examples/signature/CreateSignature.java"
        ],
        "fixed": true
    }
]