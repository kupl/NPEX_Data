[
    {
        "repo": "aries",
        "message": "[ARIES-1522] NullPointerException (NPE) when creating a RequireBundleHeader using the filter provided by FelixRequirementAdapter.\n\nWhen adapting a requirement in the \"bundle\" namespace from OBR, the adapter must replace \"symbolicname\" with \"osgi.wiring.bundle\" and \"version\" with \"bundle-version\" in the filter.\n\ngit-svn-id: https://svn.apache.org/repos/asf/aries/trunk@1738988 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/aries/commit/747408d08adb76c8f140a4fb211c69fff1a2b966",
        "parent": "https://github.com/apache/aries/commit/7b902515666570a50f70ecd150f685a5151bf4ca",
        "bug_id": "aries_1",
        "file": [
            {
                "sha": "75c156e14d9646121388b77020e1bf0cfc105a90",
                "filename": "subsystem/subsystem-obr/src/main/java/org/apache/aries/subsystem/util/felix/FelixRequirementAdapter.java",
                "blob_url": "https://github.com/apache/aries/blob/747408d08adb76c8f140a4fb211c69fff1a2b966/subsystem/subsystem-obr/src/main/java/org/apache/aries/subsystem/util/felix/FelixRequirementAdapter.java",
                "raw_url": "https://github.com/apache/aries/raw/747408d08adb76c8f140a4fb211c69fff1a2b966/subsystem/subsystem-obr/src/main/java/org/apache/aries/subsystem/util/felix/FelixRequirementAdapter.java",
                "status": "modified",
                "changes": 11,
                "additions": 9,
                "contents_url": "https://api.github.com/repos/apache/aries/contents/subsystem/subsystem-obr/src/main/java/org/apache/aries/subsystem/util/felix/FelixRequirementAdapter.java?ref=747408d08adb76c8f140a4fb211c69fff1a2b966",
                "patch": "@@ -19,6 +19,7 @@\n \r\n import org.apache.aries.subsystem.obr.internal.AbstractRequirement;\r\n import org.apache.aries.subsystem.obr.internal.NamespaceTranslator;\r\n+import org.osgi.framework.namespace.BundleNamespace;\r\n import org.osgi.resource.Capability;\r\n import org.osgi.resource.Namespace;\r\n import org.osgi.resource.Resource;\r\n@@ -63,11 +64,17 @@ public boolean matches(Capability capability) {\n \t\t/* (1) The Felix OBR specific \"mandatory:<*\" syntax must be stripped out of the filter.\r\n \t\t * (2) The namespace must be translated.\r\n \t\t */\r\n-\t\tresult.put(Namespace.REQUIREMENT_FILTER_DIRECTIVE, requirement.getFilter()\r\n+\t\tString namespace = getNamespace();\r\n+\t\tString filter = requirement.getFilter()\r\n \t\t\t\t.replaceAll(\"\\\\(mandatory\\\\:\\\\<\\\\*[^\\\\)]*\\\\)\", \"\")\r\n \t\t\t\t.replaceAll(\"\\\\(service\\\\=[^\\\\)]*\\\\)\", \"\")\r\n \t\t\t\t.replaceAll(\"objectclass\", \"objectClass\")\r\n-\t\t\t\t.replaceAll(requirement.getName() + '=', getNamespace() + '='));\r\n+\t\t\t\t.replaceAll(requirement.getName() + '=', namespace + '=');\r\n+\t\tif (BundleNamespace.BUNDLE_NAMESPACE.equals(namespace)) {\r\n+\t\t\tfilter = filter.replaceAll(\"symbolicname\", namespace)\r\n+\t\t\t\t\t.replaceAll(\"version\", BundleNamespace.CAPABILITY_BUNDLE_VERSION_ATTRIBUTE);\r\n+\t\t}\r\n+\t\tresult.put(Namespace.REQUIREMENT_FILTER_DIRECTIVE, filter);\r\n \t\tresult.put(Namespace.REQUIREMENT_RESOLUTION_DIRECTIVE, requirement.isOptional() ? Namespace.RESOLUTION_OPTIONAL : Namespace.RESOLUTION_MANDATORY);\r\n \t\tresult.put(Namespace.REQUIREMENT_CARDINALITY_DIRECTIVE, requirement.isMultiple() ? Namespace.CARDINALITY_MULTIPLE : Namespace.CARDINALITY_SINGLE);\r\n \t\treturn Collections.unmodifiableMap(result);\r",
                "deletions": 2
            }
        ]
    },
    {
        "repo": "aries",
        "message": "[CDI] prevent NPE\n\nSigned-off-by: Raymond Auge <rotty3000@apache.org>\n\ngit-svn-id: https://svn.apache.org/repos/asf/aries/trunk@1845398 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/aries/commit/8fb9901be49d34981c04f54f8bca91bcb2888aa6",
        "parent": "https://github.com/apache/aries/commit/591a88105c657ac6b215ff696d9e6ea9f272b08e",
        "bug_id": "aries_2",
        "file": [
            {
                "sha": "0af0fb4837a9e974f1bd262bdef96ecf3c7009c0",
                "filename": "cdi/cdi-extension-http/src/main/java/org/apache/aries/cdi/extension/http/HttpExtension.java",
                "blob_url": "https://github.com/apache/aries/blob/8fb9901be49d34981c04f54f8bca91bcb2888aa6/cdi/cdi-extension-http/src/main/java/org/apache/aries/cdi/extension/http/HttpExtension.java",
                "raw_url": "https://github.com/apache/aries/raw/8fb9901be49d34981c04f54f8bca91bcb2888aa6/cdi/cdi-extension-http/src/main/java/org/apache/aries/cdi/extension/http/HttpExtension.java",
                "status": "modified",
                "changes": 8,
                "additions": 5,
                "contents_url": "https://api.github.com/repos/apache/aries/contents/cdi/cdi-extension-http/src/main/java/org/apache/aries/cdi/extension/http/HttpExtension.java?ref=8fb9901be49d34981c04f54f8bca91bcb2888aa6",
                "patch": "@@ -14,8 +14,8 @@\n \n package org.apache.aries.cdi.extension.http;\n \n-import static org.osgi.namespace.extender.ExtenderNamespace.*;\n-import static org.osgi.service.cdi.CDIConstants.*;\n+import static org.osgi.namespace.extender.ExtenderNamespace.EXTENDER_NAMESPACE;\n+import static org.osgi.service.cdi.CDIConstants.CDI_CAPABILITY_NAME;\n \n import java.util.Collections;\n import java.util.Dictionary;\n@@ -74,7 +74,9 @@ void afterDeploymentValidation(\n \t}\n \n \tvoid beforeShutdown(@Observes BeforeShutdown bs) {\n-\t\t_listenerRegistration.unregister();\n+\t\tif (_listenerRegistration != null) {\n+\t\t\t_listenerRegistration.unregister();\n+\t\t}\n \t}\n \n \tprivate Map<String, Object> getAttributes() {",
                "deletions": 3
            }
        ]
    },
    {
        "repo": "aries",
        "message": "[Component-DSL] Fix NPE\n\ngit-svn-id: https://svn.apache.org/repos/asf/aries/trunk@1840274 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/aries/commit/9154eed177ed9fda0b34865fd9454d55077c9ad2",
        "parent": "https://github.com/apache/aries/commit/0d6285e70680bce08b31ba400fe6ae2e88707cb0",
        "bug_id": "aries_3",
        "file": [
            {
                "sha": "cfd098f8a6234e0d0aa7cd5204a2474f09a6c043",
                "filename": "component-dsl/component-dsl/src/main/java/org/apache/aries/component/dsl/internal/ConfigurationOSGiImpl.java",
                "blob_url": "https://github.com/apache/aries/blob/9154eed177ed9fda0b34865fd9454d55077c9ad2/component-dsl/component-dsl/src/main/java/org/apache/aries/component/dsl/internal/ConfigurationOSGiImpl.java",
                "raw_url": "https://github.com/apache/aries/raw/9154eed177ed9fda0b34865fd9454d55077c9ad2/component-dsl/component-dsl/src/main/java/org/apache/aries/component/dsl/internal/ConfigurationOSGiImpl.java",
                "status": "modified",
                "changes": 2,
                "additions": 1,
                "contents_url": "https://api.github.com/repos/apache/aries/contents/component-dsl/component-dsl/src/main/java/org/apache/aries/component/dsl/internal/ConfigurationOSGiImpl.java?ref=9154eed177ed9fda0b34865fd9454d55077c9ad2",
                "patch": "@@ -163,7 +163,7 @@ private static Configuration getConfiguration(\n                 configurationAdmin.listConfigurations(\n                     \"(&(service.pid=\" + pid + \")(!(service.factoryPid=*)))\");\n \n-\t\t\tif (configurations.length == 0) {\n+\t\t\tif (configurations == null || configurations.length == 0) {\n                 return null;\n             }\n ",
                "deletions": 1
            }
        ]
    },
    {
        "repo": "aries",
        "message": "[ARIES-1522] NullPointerException (NPE) when creating a RequireBundleHeader using the filter provided by FelixRequirementAdapter.\n\nTest installing and starting a subsystem with fragment and host bundles as content where the host is included in the archive and the fragment in OBR. Test both\napache-aries-provision-dependencies:=install and apache-aries-provision-dependencies:=resolve.\n\ngit-svn-id: https://svn.apache.org/repos/asf/aries/trunk@1738987 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/aries/commit/7b902515666570a50f70ecd150f685a5151bf4ca",
        "parent": "https://github.com/apache/aries/commit/6f38d3d282e3ef7bac8c415f11da20e0790cdb8d",
        "bug_id": "aries_4",
        "file": [
            {
                "sha": "82a56e95845cf73a57474fd5e14e40d1634bea53",
                "filename": "subsystem/subsystem-itests/src/test/java/org/apache/aries/subsystem/itests/defect/Aries1522Test.java",
                "blob_url": "https://github.com/apache/aries/blob/7b902515666570a50f70ecd150f685a5151bf4ca/subsystem/subsystem-itests/src/test/java/org/apache/aries/subsystem/itests/defect/Aries1522Test.java",
                "raw_url": "https://github.com/apache/aries/raw/7b902515666570a50f70ecd150f685a5151bf4ca/subsystem/subsystem-itests/src/test/java/org/apache/aries/subsystem/itests/defect/Aries1522Test.java",
                "status": "added",
                "changes": 140,
                "additions": 140,
                "contents_url": "https://api.github.com/repos/apache/aries/contents/subsystem/subsystem-itests/src/test/java/org/apache/aries/subsystem/itests/defect/Aries1522Test.java?ref=7b902515666570a50f70ecd150f685a5151bf4ca",
                "patch": "@@ -0,0 +1,140 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.aries.subsystem.itests.defect;\n+\n+import static org.junit.Assert.assertNotNull;\n+import static org.junit.Assert.assertTrue;\n+import static org.junit.Assert.fail;\n+\n+import java.io.File;\n+import java.io.FileWriter;\n+import java.net.URL;\n+\n+import org.apache.aries.subsystem.core.archive.AriesProvisionDependenciesDirective;\n+import org.apache.aries.subsystem.itests.SubsystemTest;\n+import org.apache.aries.subsystem.itests.util.SubsystemArchiveBuilder;\n+import org.apache.felix.bundlerepository.DataModelHelper;\n+import org.apache.felix.bundlerepository.Repository;\n+import org.apache.felix.bundlerepository.RepositoryAdmin;\n+import org.apache.felix.bundlerepository.Resource;\n+import org.junit.Test;\n+import org.osgi.framework.BundleContext;\n+import org.osgi.framework.ServiceReference;\n+import org.osgi.service.subsystem.Subsystem;\n+import org.osgi.service.subsystem.SubsystemConstants;\n+import org.osgi.service.subsystem.SubsystemException;\n+\n+public class Aries1522Test extends SubsystemTest {\n+\tprivate RepositoryAdmin repositoryAdmin;\n+\tprivate URL url;\n+\t\n+\t@Override\n+    public void setUp() throws Exception {\n+        super.setUp();\n+        BundleContext context = context();\n+        ServiceReference<RepositoryAdmin> ref = context.getServiceReference(RepositoryAdmin.class);\n+        assertNotNull(\"The RepositoryAdmin service does not exist\", ref);\n+        try {\n+        \trepositoryAdmin = (RepositoryAdmin)context.getService(ref);\n+        \tDataModelHelper helper = repositoryAdmin.getHelper();\n+        \turl = createRepositoryXml(helper);\n+        \tRepository repository = repositoryAdmin.addRepository(url);\n+        \tResource resource = repository.getResources()[0];\n+        \tSystem.out.println(resource.getURI());\n+        }\n+        finally {\n+        \tcontext.ungetService(ref);\n+        }\n+    }\n+\t\n+\t@Override\n+\tpublic void tearDown() throws Exception {\n+\t\trepositoryAdmin.removeRepository(url.toString());\n+\t\tsuper.tearDown();\n+\t}\n+\t\n+\t@Test\n+\tpublic void testApacheAriesProvisionDepenenciesInstall() throws Exception {\n+\t\ttest(AriesProvisionDependenciesDirective.INSTALL);\n+\t}\n+\t\n+\t@Test\n+\tpublic void testApacheAriesProvisionDepenenciesResolve() throws Exception {\n+\t\ttest(AriesProvisionDependenciesDirective.RESOLVE);\n+\t}\n+\t\n+\tprivate void test(AriesProvisionDependenciesDirective provisionDependencies) throws Exception {\n+\t\tboolean flag = AriesProvisionDependenciesDirective.INSTALL.equals(provisionDependencies);\n+\t\tSubsystem root = getRootSubsystem();\n+\t\ttry {\n+\t\t\tSubsystem subsystem = installSubsystem(\n+\t\t\t\t\troot,\n+\t\t\t\t\t\"subsystem\", \n+\t\t\t\t\tnew SubsystemArchiveBuilder()\n+\t\t\t\t\t\t\t.symbolicName(\"subsystem\")\n+\t\t\t\t\t\t\t.type(SubsystemConstants.SUBSYSTEM_TYPE_APPLICATION + ';' \n+\t\t\t\t\t\t\t\t\t\t+ provisionDependencies.toString())\n+\t\t\t\t\t\t\t.content(\"org.apache.aries.subsystem.itests.aries1523host,org.apache.aries.subsystem.itests.aries1523fragment\")\n+\t\t\t\t\t\t\t.bundle(\n+\t\t\t\t\t\t\t\t\t\"aries1523host\", \n+\t\t\t\t\t\t\t\t\tgetClass().getClassLoader().getResourceAsStream(\"aries1523/aries1523host.jar\"))\n+\t\t\t\t\t\t\t.build(),\n+\t\t\t\t\tflag\n+\t\t\t);\n+\t\t\ttry {\n+\t\t\t\tstartSubsystem(subsystem, flag);\n+\t\t\t\tstopSubsystem(subsystem);\n+\t\t\t}\n+\t\t\tcatch (SubsystemException e) {\n+\t\t\t\te.printStackTrace();\n+\t\t\t\tfail(\"Subsystem should have started\");\n+\t\t\t}\n+\t\t\tfinally {\n+\t\t\t\tuninstallSubsystemSilently(subsystem);\n+\t\t\t}\n+\t\t}\n+\t\tcatch (SubsystemException e) {\n+\t\t\te.printStackTrace();\n+\t\t\tfail(\"Subsystem should have installed\");\n+\t\t}\n+\t}\n+\t\n+\tprivate URL createRepositoryXml(DataModelHelper helper) throws Exception {\n+\t\tFile dir;\n+\t\tif (new File(\"\").getAbsolutePath().endsWith(\"/target\")) {\n+\t\t\tdir = new File(\"test-classes/aries1523\");\n+\t\t}\n+\t\telse {\n+\t\t\tdir = new File(\"target/test-classes/aries1523\");\n+\t\t}\n+\t\tFile jar = new File(dir, \"aries1523fragment.jar\");\n+\t\tassertTrue(\"The fragment jar does not exist\", jar.exists());\n+\t\tResource resource = helper.createResource(jar.toURI().toURL());\n+\t\tRepository repository = helper.repository(new Resource[] {resource});\n+\t\tFile file = new File(dir, \"repository.xml\");\n+\t\tFileWriter fw = new FileWriter(file);\n+\t\ttry {\n+\t\t\thelper.writeRepository(repository, fw);\n+\t\t\treturn file.toURI().toURL();\n+\t\t}\n+\t\tfinally {\n+\t\t\tfw.close();\n+\t\t}\n+\t}\n+}",
                "deletions": 0
            }
        ]
    },
    {
        "repo": "aries",
        "message": "ARIES-1720 - fixed NullPointerException. Closes #73\n\ngit-svn-id: https://svn.apache.org/repos/asf/aries/trunk@1795881 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/aries/commit/ca8f8d3e32c250b200d16290597e931c36f19dda",
        "parent": "https://github.com/apache/aries/commit/95c65f242d1cffc2f38afabbfe32898e4a81309a",
        "bug_id": "aries_5",
        "file": [
            {
                "sha": "be57539af6464e05c46e0bbb30fc90e44d0fef60",
                "filename": "subsystem/subsystem-core/src/main/java/org/apache/aries/subsystem/core/internal/RawSubsystemResource.java",
                "blob_url": "https://github.com/apache/aries/blob/ca8f8d3e32c250b200d16290597e931c36f19dda/subsystem/subsystem-core/src/main/java/org/apache/aries/subsystem/core/internal/RawSubsystemResource.java",
                "raw_url": "https://github.com/apache/aries/raw/ca8f8d3e32c250b200d16290597e931c36f19dda/subsystem/subsystem-core/src/main/java/org/apache/aries/subsystem/core/internal/RawSubsystemResource.java",
                "status": "modified",
                "changes": 2,
                "additions": 1,
                "contents_url": "https://api.github.com/repos/apache/aries/contents/subsystem/subsystem-core/src/main/java/org/apache/aries/subsystem/core/internal/RawSubsystemResource.java?ref=ca8f8d3e32c250b200d16290597e931c36f19dda",
                "patch": "@@ -455,7 +455,7 @@ private RequireCapabilityHeader computeRequireCapabilityHeader() {\n \t\tfor (IFile file : directory.listFiles()) {\n             if (file.isFile()) {\n                 addResource(file, file.convertNested(), manifest, result);\n-            } else {\n+            } else if (!file.getName().endsWith(\"OSGI-INF\")) {\n                 addResource(file, file.convert(), manifest, result);\n             }\n \t\t}",
                "deletions": 1
            }
        ]
    },
    {
        "repo": "aries",
        "message": "[ARIES-1498] Possible NullPointerException in AbstractServiceReferenceRecipe#setSatisfied\n\ngit-svn-id: https://svn.apache.org/repos/asf/aries/trunk@1734268 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/aries/commit/4161b5f222019747b23c7eaf6210cdebfbd667d2",
        "parent": "https://github.com/apache/aries/commit/348f86342884655dedc18441db4fcae9bc52b6d6",
        "bug_id": "aries_6",
        "file": [
            {
                "sha": "7aa80ec2e81d4e15b08a293d8097db8bb6bee204",
                "filename": "blueprint/blueprint-core/src/main/java/org/apache/aries/blueprint/container/AbstractServiceReferenceRecipe.java",
                "blob_url": "https://github.com/apache/aries/blob/4161b5f222019747b23c7eaf6210cdebfbd667d2/blueprint/blueprint-core/src/main/java/org/apache/aries/blueprint/container/AbstractServiceReferenceRecipe.java",
                "raw_url": "https://github.com/apache/aries/raw/4161b5f222019747b23c7eaf6210cdebfbd667d2/blueprint/blueprint-core/src/main/java/org/apache/aries/blueprint/container/AbstractServiceReferenceRecipe.java",
                "status": "modified",
                "changes": 7,
                "additions": 5,
                "contents_url": "https://api.github.com/repos/apache/aries/contents/blueprint/blueprint-core/src/main/java/org/apache/aries/blueprint/container/AbstractServiceReferenceRecipe.java?ref=4161b5f222019747b23c7eaf6210cdebfbd667d2",
                "patch": "@@ -89,7 +89,7 @@\n \n     private final AtomicBoolean started = new AtomicBoolean();\n     private final AtomicBoolean satisfied = new AtomicBoolean();\n-    private SatisfactionListener satisfactionListener;\n+    private volatile SatisfactionListener satisfactionListener;\n \n     private final AccessControlContext accessControlContext;\n \n@@ -416,7 +416,10 @@ protected void setSatisfied(boolean s) {\n         // so that it will only be true if the value actually changed\n         if (satisfied.getAndSet(s) != s) {\n             LOGGER.debug(\"Service reference with filter {} satisfied {}\", getOsgiFilter(), this.satisfied);\n-            this.satisfactionListener.notifySatisfaction(this);\n+            SatisfactionListener listener = this.satisfactionListener;\n+            if (listener != null) {\n+                listener.notifySatisfaction(this);\n+            }\n         }\n     }\n ",
                "deletions": 2
            }
        ]
    },
    {
        "repo": "aries",
        "message": "[ARIES-1701] Possible NPE\n\ngit-svn-id: https://svn.apache.org/repos/asf/aries/trunk@1787781 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/aries/commit/56543dcac8ef614fc1d858edc3f34d73fc4921b4",
        "parent": "https://github.com/apache/aries/commit/44cc4d9dc7b5538f02f1fcd46ba7643ca6fdf74e",
        "bug_id": "aries_7",
        "file": [
            {
                "sha": "1ced064ddf6c75d2fdf5cc7740a3b79dac542a10",
                "filename": "blueprint/blueprint-cm/src/main/java/org/apache/aries/blueprint/compendium/cm/CmUtils.java",
                "blob_url": "https://github.com/apache/aries/blob/56543dcac8ef614fc1d858edc3f34d73fc4921b4/blueprint/blueprint-cm/src/main/java/org/apache/aries/blueprint/compendium/cm/CmUtils.java",
                "raw_url": "https://github.com/apache/aries/raw/56543dcac8ef614fc1d858edc3f34d73fc4921b4/blueprint/blueprint-cm/src/main/java/org/apache/aries/blueprint/compendium/cm/CmUtils.java",
                "status": "modified",
                "changes": 14,
                "additions": 12,
                "contents_url": "https://api.github.com/repos/apache/aries/contents/blueprint/blueprint-cm/src/main/java/org/apache/aries/blueprint/compendium/cm/CmUtils.java?ref=56543dcac8ef614fc1d858edc3f34d73fc4921b4",
                "patch": "@@ -26,6 +26,7 @@\n import java.util.Enumeration;\n import java.util.Hashtable;\n \n+import org.osgi.framework.Bundle;\n import org.osgi.framework.BundleContext;\n import org.osgi.framework.Constants;\n import org.osgi.framework.InvalidSyntaxException;\n@@ -65,8 +66,17 @@ public static Configuration getConfiguration(ConfigurationAdmin configAdmin, Str\n             Configuration config = getConfiguration(ca, persistentId);\n             if (config != null) {\n                 Dictionary<String, Object> props = new CaseInsensitiveDictionary(config.getProperties());\n-                BundleContext caBc = caRef.getBundle().getBundleContext();\n-                callPlugins(caBc, props, service, persistentId, null);\n+                Bundle bundle = caRef.getBundle();\n+                if (bundle != null) {\n+                    BundleContext caBc = bundle.getBundleContext();\n+                    if (caBc != null) {\n+                        try {\n+                            callPlugins(caBc, props, service, persistentId, null);\n+                        } catch (IllegalStateException ise) {\n+                            // we don't care it doesn't exist so, shrug.\n+                        }\n+                    }\n+                }\n                 return props;\n             } else {\n                 return null;",
                "deletions": 2
            }
        ]
    },
    {
        "repo": "aries",
        "message": "[ARIES-1700] Possible NPE\n\ngit-svn-id: https://svn.apache.org/repos/asf/aries/trunk@1787778 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/aries/commit/44cc4d9dc7b5538f02f1fcd46ba7643ca6fdf74e",
        "parent": "https://github.com/apache/aries/commit/23531f1e0fc2bb4d02a78f6b7b101091bc7ae3b2",
        "bug_id": "aries_8",
        "file": [
            {
                "sha": "6138d20e35673b09696a076bb7ff7de7bf3e6ca2",
                "filename": "blueprint/blueprint-noosgi/src/main/java/org/apache/aries/blueprint/container/NoOsgiRecipeBuilder.java",
                "blob_url": "https://github.com/apache/aries/blob/44cc4d9dc7b5538f02f1fcd46ba7643ca6fdf74e/blueprint/blueprint-noosgi/src/main/java/org/apache/aries/blueprint/container/NoOsgiRecipeBuilder.java",
                "raw_url": "https://github.com/apache/aries/raw/44cc4d9dc7b5538f02f1fcd46ba7643ca6fdf74e/blueprint/blueprint-noosgi/src/main/java/org/apache/aries/blueprint/container/NoOsgiRecipeBuilder.java",
                "status": "modified",
                "changes": 2,
                "additions": 1,
                "contents_url": "https://api.github.com/repos/apache/aries/contents/blueprint/blueprint-noosgi/src/main/java/org/apache/aries/blueprint/container/NoOsgiRecipeBuilder.java?ref=44cc4d9dc7b5538f02f1fcd46ba7643ca6fdf74e",
                "patch": "@@ -232,7 +232,7 @@ private Recipe getValue(Metadata v, Object groupingType) {\n             IdRefRecipe rnr = new IdRefRecipe(getName(null), componentName);\n             return rnr;\n         } else {\n-            throw new IllegalStateException(\"Unsupported value: \" + v.getClass().getName());\n+            throw new IllegalStateException(\"Unsupported value: \" + (v != null ? v.getClass().getName() : \"null\"));\n         }\n     }\n ",
                "deletions": 1
            }
        ]
    },
    {
        "repo": "aries",
        "message": "ARIES-108 NullPointerException thrown resolving imported packages or dependencies\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/aries/trunk@897313 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/aries/commit/a59b06fe8187038c827158268145ffd200c15f98",
        "parent": "https://github.com/apache/aries/commit/8543b4070be8c492be5493246b220ec0e1f5b392",
        "bug_id": "aries_9",
        "file": [
            {
                "sha": "64b7eb656c762b1118f8c140794ddc3d6839d2e7",
                "filename": "jmx/jmx-core/src/main/java/org/apache/aries/jmx/codec/BundleData.java",
                "blob_url": "https://github.com/apache/aries/blob/a59b06fe8187038c827158268145ffd200c15f98/jmx/jmx-core/src/main/java/org/apache/aries/jmx/codec/BundleData.java",
                "raw_url": "https://github.com/apache/aries/raw/a59b06fe8187038c827158268145ffd200c15f98/jmx/jmx-core/src/main/java/org/apache/aries/jmx/codec/BundleData.java",
                "status": "modified",
                "changes": 7,
                "additions": 4,
                "contents_url": "https://api.github.com/repos/apache/aries/contents/jmx/jmx-core/src/main/java/org/apache/aries/jmx/codec/BundleData.java?ref=a59b06fe8187038c827158268145ffd200c15f98",
                "patch": "@@ -71,6 +71,7 @@\n import javax.management.openmbean.TabularDataSupport;\n \n import org.osgi.framework.Bundle;\n+import org.osgi.framework.BundleContext;\n import org.osgi.jmx.framework.BundleStateMBean;\n import org.osgi.service.packageadmin.PackageAdmin;\n import org.osgi.service.startlevel.StartLevel;\n@@ -190,7 +191,7 @@ private BundleData() {\n     }\n \n     @SuppressWarnings(\"unchecked\")\n-    public BundleData(Bundle bundle, PackageAdmin packageAdmin, StartLevel startLevel) {\n+    public BundleData(BundleContext localBundleContext, Bundle bundle, PackageAdmin packageAdmin, StartLevel startLevel) {\n         if (bundle == null) {\n             throw new IllegalArgumentException(\"Argument bundle cannot be null\");\n         }\n@@ -208,14 +209,14 @@ public BundleData(Bundle bundle, PackageAdmin packageAdmin, StartLevel startLeve\n         }\n         this.hosts = getHostIds(bundle, packageAdmin);\n         this.identifier = bundle.getBundleId();\n-        this.importedPackages = getBundleImportedPackages(bundle, packageAdmin);\n+        this.importedPackages = getBundleImportedPackages(localBundleContext, bundle, packageAdmin);\n         this.lastModified = bundle.getLastModified();\n         this.location = bundle.getLocation();\n         this.persistentlyStarted = startLevel.isBundlePersistentlyStarted(bundle);\n         this.registeredServices = getRegisteredServiceIds(bundle);\n         this.removalPending = isBundlePendingRemoval(bundle, packageAdmin);\n         this.required = isBundleRequiredByOthers(bundle, packageAdmin);\n-        this.requiredBundles = getBundleDependencies(bundle, packageAdmin);\n+        this.requiredBundles = getBundleDependencies(localBundleContext, bundle, packageAdmin);\n         this.requiringBundles = getDependentBundles(bundle, packageAdmin);\n         this.servicesInUse = getServicesInUseByBundle(bundle);\n         this.bundleStartLevel = startLevel.getBundleStartLevel(bundle);",
                "deletions": 3
            },
            {
                "sha": "f63a6824fcb48290f90fa9133566203408418a5d",
                "filename": "jmx/jmx-core/src/main/java/org/apache/aries/jmx/framework/BundleState.java",
                "blob_url": "https://github.com/apache/aries/blob/a59b06fe8187038c827158268145ffd200c15f98/jmx/jmx-core/src/main/java/org/apache/aries/jmx/framework/BundleState.java",
                "raw_url": "https://github.com/apache/aries/raw/a59b06fe8187038c827158268145ffd200c15f98/jmx/jmx-core/src/main/java/org/apache/aries/jmx/framework/BundleState.java",
                "status": "modified",
                "changes": 6,
                "additions": 3,
                "contents_url": "https://api.github.com/repos/apache/aries/contents/jmx/jmx-core/src/main/java/org/apache/aries/jmx/framework/BundleState.java?ref=a59b06fe8187038c827158268145ffd200c15f98",
                "patch": "@@ -140,7 +140,7 @@ public TabularData getHeaders(long bundleId) throws IOException, IllegalArgument\n      */\n     public String[] getImportedPackages(long bundleId) throws IOException, IllegalArgumentException {\n         Bundle bundle = resolveBundle(bundleContext, bundleId);\n-        return getBundleImportedPackages(bundle, packageAdmin);\n+        return getBundleImportedPackages(bundleContext, bundle, packageAdmin);\n     }\n \n     /**\n@@ -172,7 +172,7 @@ public String getLocation(long bundleId) throws IOException, IllegalArgumentExce\n      */\n     public long[] getRequiredBundles(long bundleIdentifier) throws IOException, IllegalArgumentException {\n         Bundle bundle = resolveBundle(bundleContext, bundleIdentifier);\n-        return getBundleDependencies(bundle, packageAdmin);\n+        return getBundleDependencies(bundleContext, bundle, packageAdmin);\n     }\n \n     /**\n@@ -262,7 +262,7 @@ public TabularData listBundles() throws IOException {\n         Bundle[] containerBundles = bundleContext.getBundles();\n         List<BundleData> bundleDatas = new ArrayList<BundleData>();\n         for (Bundle containerBundle : containerBundles) {\n-            bundleDatas.add(new BundleData(containerBundle, packageAdmin, startLevel));\n+            bundleDatas.add(new BundleData(bundleContext, containerBundle, packageAdmin, startLevel));\n         }\n         TabularData bundleTable = new TabularDataSupport(BUNDLES_TYPE);\n         for (BundleData bundleData : bundleDatas) {",
                "deletions": 3
            },
            {
                "sha": "8bed3c563b8bdbedf82ac4f13231745d74a486b9",
                "filename": "jmx/jmx-core/src/main/java/org/apache/aries/jmx/util/FrameworkUtils.java",
                "blob_url": "https://github.com/apache/aries/blob/a59b06fe8187038c827158268145ffd200c15f98/jmx/jmx-core/src/main/java/org/apache/aries/jmx/util/FrameworkUtils.java",
                "raw_url": "https://github.com/apache/aries/raw/a59b06fe8187038c827158268145ffd200c15f98/jmx/jmx-core/src/main/java/org/apache/aries/jmx/util/FrameworkUtils.java",
                "status": "modified",
                "changes": 18,
                "additions": 10,
                "contents_url": "https://api.github.com/repos/apache/aries/contents/jmx/jmx-core/src/main/java/org/apache/aries/jmx/util/FrameworkUtils.java?ref=a59b06fe8187038c827158268145ffd200c15f98",
                "patch": "@@ -210,14 +210,15 @@ public static ServiceReference resolveService(BundleContext bundleContext, long\n \n     /**\n      * Returns the resolved package imports for the given bundle\n-     * \n-     * @param bundle\n+     * @param localBundleContext BundleContext object of this bundle/caller\n+     * @param bundle target Bundle object to query imported packages for\n      * @param packageAdmin\n+     * \n      * @return\n      * @throws IllegalArgumentException\n      *             if fragment or packageAdmin are null\n      */\n-    public static String[] getBundleImportedPackages(Bundle bundle, PackageAdmin packageAdmin)\n+    public static String[] getBundleImportedPackages(BundleContext localBundleContext, Bundle bundle, PackageAdmin packageAdmin)\n             throws IllegalArgumentException {\n         if (bundle == null) {\n             throw new IllegalArgumentException(\"Argument bundle cannot be null\");\n@@ -228,7 +229,7 @@ public static ServiceReference resolveService(BundleContext bundleContext, long\n         List<String> result = new ArrayList<String>();\n         // TODO - Is there an easier way to achieve this? Unable to find a direct way through Framework\n         // API to find the actual package wiring\n-        Bundle[] bundles = bundle.getBundleContext().getBundles();\n+        Bundle[] bundles = localBundleContext.getBundles();\n         for (Bundle candidate : bundles) {\n             if (candidate.equals(bundle)) {\n                 continue;\n@@ -366,14 +367,15 @@ public static boolean isBundleRequiredByOthers(Bundle bundle, PackageAdmin packa\n \n     /**\n      * Returns an array of ids of bundles the given bundle depends on\n-     * \n-     * @param bundle\n+     * @param localBundleContext BundleContext object of this bundle/caller \n+     * @param bundle target Bundle object to query dependencies for\n      * @param packageAdmin\n+     * \n      * @return\n      * @throws IllegalArgumentException\n      *             if bundle or packageAdmin are null\n      */\n-    public static long[] getBundleDependencies(Bundle bundle, PackageAdmin packageAdmin)\n+    public static long[] getBundleDependencies(BundleContext localBundleContext, Bundle bundle, PackageAdmin packageAdmin)\n             throws IllegalArgumentException {\n         if (bundle == null) {\n             throw new IllegalArgumentException(\"Argument bundle cannot be null\");\n@@ -384,7 +386,7 @@ public static boolean isBundleRequiredByOthers(Bundle bundle, PackageAdmin packa\n         List<Bundle> dependencies = new ArrayList<Bundle>();\n         // TODO - Is there an easier way to achieve this? Unable to find a direct way through Framework\n         // API to resolve the current dependencies\n-        for (Bundle candidate : bundle.getBundleContext().getBundles()) {\n+        for (Bundle candidate : localBundleContext.getBundles()) {\n             if (candidate.equals(bundle)) {\n                 continue;\n             }",
                "deletions": 8
            },
            {
                "sha": "a7b11631384bf6533d353634e8358bcd153fc340",
                "filename": "jmx/jmx-core/src/test/java/org/apache/aries/jmx/codec/BundleDataTest.java",
                "blob_url": "https://github.com/apache/aries/blob/a59b06fe8187038c827158268145ffd200c15f98/jmx/jmx-core/src/test/java/org/apache/aries/jmx/codec/BundleDataTest.java",
                "raw_url": "https://github.com/apache/aries/raw/a59b06fe8187038c827158268145ffd200c15f98/jmx/jmx-core/src/test/java/org/apache/aries/jmx/codec/BundleDataTest.java",
                "status": "modified",
                "changes": 3,
                "additions": 1,
                "contents_url": "https://api.github.com/repos/apache/aries/contents/jmx/jmx-core/src/test/java/org/apache/aries/jmx/codec/BundleDataTest.java?ref=a59b06fe8187038c827158268145ffd200c15f98",
                "patch": "@@ -99,7 +99,6 @@ public void testToCompositeData() throws Exception {\n         when(bundle.getSymbolicName()).thenReturn(\"test\");\n         when(bundle.getVersion()).thenReturn(Version.emptyVersion);\n         when(bundle.getBundleId()).thenReturn(new Long(1));\n-        when(bundle.getBundleContext()).thenReturn(context);\n         when(bundle.getLastModified()).thenReturn(new Long(12345));\n         when(bundle.getLocation()).thenReturn(\"location\");\n         \n@@ -154,7 +153,7 @@ public void testToCompositeData() throws Exception {\n         \n         when(bundle.getServicesInUse()).thenReturn(new ServiceReference[] { s1, s2, s3 });\n         \n-        BundleData b = new BundleData(bundle, packageAdmin, startLevel);\n+        BundleData b = new BundleData(context, bundle, packageAdmin, startLevel);\n         CompositeData compositeData = b.toCompositeData();\n         \n         assertEquals(\"test\", compositeData.get(SYMBOLIC_NAME));",
                "deletions": 2
            },
            {
                "sha": "551ddcabe6663e344f7c97aaad3dc064b3e8ac85",
                "filename": "jmx/jmx-core/src/test/java/org/apache/aries/jmx/util/FrameworkUtilsTest.java",
                "blob_url": "https://github.com/apache/aries/blob/a59b06fe8187038c827158268145ffd200c15f98/jmx/jmx-core/src/test/java/org/apache/aries/jmx/util/FrameworkUtilsTest.java",
                "raw_url": "https://github.com/apache/aries/raw/a59b06fe8187038c827158268145ffd200c15f98/jmx/jmx-core/src/test/java/org/apache/aries/jmx/util/FrameworkUtilsTest.java",
                "status": "modified",
                "changes": 12,
                "additions": 6,
                "contents_url": "https://api.github.com/repos/apache/aries/contents/jmx/jmx-core/src/test/java/org/apache/aries/jmx/util/FrameworkUtilsTest.java?ref=a59b06fe8187038c827158268145ffd200c15f98",
                "patch": "@@ -120,7 +120,6 @@ public void testGetBundleImportedPackages() throws Exception {\n         \n         Bundle bundle = mock(Bundle.class);\n         BundleContext context = mock(BundleContext.class);\n-        when(bundle.getBundleContext()).thenReturn(context);\n         \n         Bundle b1 = mock(Bundle.class);\n         Bundle b2 = mock(Bundle.class);\n@@ -143,7 +142,7 @@ public void testGetBundleImportedPackages() throws Exception {\n         when(admin.getExportedPackages(b3)).thenReturn(null);\n         \n         assertArrayEquals(new String[] { \"org.apache.aries.jmx.b1;0.0.0\" , \"org.apache.aries.jmx.b2;2.0.1\"} \n-                    , getBundleImportedPackages(bundle, admin));\n+                    , getBundleImportedPackages(context, bundle, admin));\n         \n     }\n     \n@@ -227,8 +226,7 @@ public void testGetBundleDependencies() throws Exception {\n         \n         Bundle bundle = mock(Bundle.class);\n         BundleContext context = mock(BundleContext.class);\n-        when(bundle.getBundleContext()).thenReturn(context);\n-        \n+       \n         Bundle b1 = mock(Bundle.class);\n         when(b1.getSymbolicName()).thenReturn(\"b1\");\n         when(b1.getBundleId()).thenReturn(new Long(44));\n@@ -242,7 +240,7 @@ public void testGetBundleDependencies() throws Exception {\n         when(context.getBundles()).thenReturn(new Bundle[] { bundle, b1, b2, b3 });\n         \n         PackageAdmin admin = mock(PackageAdmin.class);\n-        assertEquals(0, getBundleDependencies(bundle, admin).length);\n+        assertEquals(0, getBundleDependencies(context, bundle, admin).length);\n         \n         RequiredBundle rb1 = mock(RequiredBundle.class);\n         when(rb1.getBundle()).thenReturn(b1);\n@@ -258,8 +256,10 @@ public void testGetBundleDependencies() throws Exception {\n         when(admin.getRequiredBundles(\"b2\")).thenReturn(new RequiredBundle[] { rb2 });\n         when(admin.getRequiredBundles(\"b3\")).thenReturn(new RequiredBundle[] { rb3 });\n         \n-        assertArrayEquals(new long[] { 44, 66 }, getBundleDependencies(bundle, admin));\n+        assertArrayEquals(new long[] { 44, 66 }, getBundleDependencies(context, bundle, admin));\n         \n         \n     }\n+    \n+    \n }",
                "deletions": 6
            }
        ]
    },
    {
        "repo": "aries",
        "message": "ARIES-1729 - Including resources with no manifest or bundle symbolic names causes NPE\n\ngit-svn-id: https://svn.apache.org/repos/asf/aries/trunk@1797109 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/aries/commit/a4fee5d66e621920e368ccb3fc0e02795991a7c0",
        "parent": "https://github.com/apache/aries/commit/ea4555fb4b2c4fdbea0d31665a9ab0d649548f3e",
        "bug_id": "aries_10",
        "file": [
            {
                "sha": "7342de74aa1231325d5ca0208962aea7bab77faa",
                "filename": "subsystem/subsystem-core/src/main/java/org/apache/aries/subsystem/core/internal/BundleResource.java",
                "blob_url": "https://github.com/apache/aries/blob/a4fee5d66e621920e368ccb3fc0e02795991a7c0/subsystem/subsystem-core/src/main/java/org/apache/aries/subsystem/core/internal/BundleResource.java",
                "raw_url": "https://github.com/apache/aries/raw/a4fee5d66e621920e368ccb3fc0e02795991a7c0/subsystem/subsystem-core/src/main/java/org/apache/aries/subsystem/core/internal/BundleResource.java",
                "status": "modified",
                "changes": 20,
                "additions": 15,
                "contents_url": "https://api.github.com/repos/apache/aries/contents/subsystem/subsystem-core/src/main/java/org/apache/aries/subsystem/core/internal/BundleResource.java?ref=a4fee5d66e621920e368ccb3fc0e02795991a7c0",
                "patch": "@@ -28,6 +28,7 @@\n import java.util.List;\r\n import java.util.jar.JarEntry;\r\n import java.util.jar.JarOutputStream;\r\n+import java.util.jar.Manifest;\r\n \r\n import org.apache.aries.subsystem.core.archive.BundleManifest;\r\n import org.apache.aries.subsystem.core.archive.BundleRequiredExecutionEnvironmentHeader;\r\n@@ -49,17 +50,26 @@\n import org.apache.aries.util.filesystem.IDirectory;\r\n import org.apache.aries.util.filesystem.IFile;\r\n import org.apache.aries.util.io.IOUtils;\r\n+import org.osgi.framework.Constants;\r\n import org.osgi.namespace.service.ServiceNamespace;\r\n import org.osgi.resource.Capability;\r\n import org.osgi.resource.Requirement;\r\n import org.osgi.resource.Resource;\r\n import org.osgi.service.subsystem.SubsystemException;\r\n \r\n public class BundleResource implements Resource, org.apache.aries.subsystem.core.repository.RepositoryContent {\r\n-\tprivate static BundleManifest computeManifest(IDirectory directory) {\r\n-\t\treturn new BundleManifest(org.apache.aries.util.manifest.BundleManifest\r\n-\t\t\t\t.fromBundle(directory)\r\n-\t\t\t\t.getRawManifest());\r\n+\tprivate static BundleManifest computeManifest(IDirectory directory, IFile content) {\r\n+\t\torg.apache.aries.util.manifest.BundleManifest bm = \r\n+\t\t\t\torg.apache.aries.util.manifest.BundleManifest.fromBundle(directory);\r\n+\t\tif (bm == null) {\r\n+\t\t\tthrow new IllegalArgumentException(\"File \\\"\" + content.getName() + \"\\\" contains no bundle manifest META-INF/MANIFEST.MF.\");\r\n+\t\t}\r\n+\t\tManifest m = bm.getRawManifest();\r\n+\t\tBundleManifest result = new BundleManifest(m);\r\n+\t\tif (result.getHeader(Constants.BUNDLE_SYMBOLICNAME) == null) {\r\n+\t\t\tthrow new IllegalArgumentException(\"File \\\"\" + content.getName() + \"\\\" has a META-INF/MANIFEST.MF with no Bundle-SymbolicName header.\");\r\n+\t\t}\r\n+\t\treturn result;\r\n \t}\r\n \t\r\n \tprivate final List<Capability> capabilities = new ArrayList<Capability>();\r\n@@ -70,7 +80,7 @@ private static BundleManifest computeManifest(IDirectory directory) {\n \tpublic BundleResource(IFile content) {\r\n \t\tthis.content = content;\r\n \t\tIDirectory dir = content.isDirectory() ? content.convert() : content.convertNested();\r\n-\t\tmanifest = computeManifest(dir);\r\n+\t\tmanifest = computeManifest(dir, content);\r\n \t\tcomputeRequirementsAndCapabilities(dir);\r\n \t}\r\n \r",
                "deletions": 5
            },
            {
                "sha": "905b629c53949e9764fc385e97ae35a21032d81b",
                "filename": "subsystem/subsystem-core/src/main/java/org/apache/aries/subsystem/core/internal/RawSubsystemResource.java",
                "blob_url": "https://github.com/apache/aries/blob/a4fee5d66e621920e368ccb3fc0e02795991a7c0/subsystem/subsystem-core/src/main/java/org/apache/aries/subsystem/core/internal/RawSubsystemResource.java",
                "raw_url": "https://github.com/apache/aries/raw/a4fee5d66e621920e368ccb3fc0e02795991a7c0/subsystem/subsystem-core/src/main/java/org/apache/aries/subsystem/core/internal/RawSubsystemResource.java",
                "status": "modified",
                "changes": 13,
                "additions": 10,
                "contents_url": "https://api.github.com/repos/apache/aries/contents/subsystem/subsystem-core/src/main/java/org/apache/aries/subsystem/core/internal/RawSubsystemResource.java?ref=a4fee5d66e621920e368ccb3fc0e02795991a7c0",
                "patch": "@@ -467,9 +467,16 @@ private void addResource(IFile file, IDirectory content, SubsystemManifest manif\n             IOException, ResolutionException, MalformedURLException {\n         String name = file.getName();\n         if (name.endsWith(\".esa\")) {\n-        \tresult.add(new RawSubsystemResource(convertFileToLocation(file), content, parentSubsystem));\n+            result.add(new RawSubsystemResource(convertFileToLocation(file), content, parentSubsystem));\n         } else if (name.endsWith(\".jar\")) {\n-            result.add(new BundleResource(file));\n+            try {\n+                result.add(new BundleResource(file));\n+            } catch (IllegalArgumentException e) {\n+                // Ignore if the resource is an invalid bundle or not a bundle at all.\n+                if (logger.isDebugEnabled()) {\n+                    logger.debug(\"File \\\"\" + file.getName() + \"\\\" in subsystem with location \\\"\" + location + \"\\\" will be ignored because it is not recognized as a supported resource.\", e);\n+                }\n+            }\n         } else {\n             // This is a different type of file. Add a file resource for it if there is a custom content handler for it.\n             FileResource fr = new FileResource(file);\n@@ -493,7 +500,7 @@ private void addResource(IFile file, IDirectory content, SubsystemManifest manif\n             } catch (Exception e) {\n                 // Ignore if the resource is an invalid bundle or not a bundle at all.\n                 if (logger.isDebugEnabled()) {\n-                    logger.debug(\"File \\\"\" + file.getName() + \"\\\" in subsystem with location \\\"\" + location + \"\\\" will be ignored because it is not recognized as a supported resource\", e);\n+                    logger.debug(\"File \\\"\" + file.getName() + \"\\\" in subsystem with location \\\"\" + location + \"\\\" will be ignored because it is not recognized as a supported resource.\", e);\n                 }\n             }\n         }",
                "deletions": 3
            },
            {
                "sha": "f270262e86bb45d2c0b118c6b0cba8a4d9223da3",
                "filename": "subsystem/subsystem-itests/pom.xml",
                "blob_url": "https://github.com/apache/aries/blob/a4fee5d66e621920e368ccb3fc0e02795991a7c0/subsystem/subsystem-itests/pom.xml",
                "raw_url": "https://github.com/apache/aries/raw/a4fee5d66e621920e368ccb3fc0e02795991a7c0/subsystem/subsystem-itests/pom.xml",
                "status": "modified",
                "changes": 15,
                "additions": 15,
                "contents_url": "https://api.github.com/repos/apache/aries/contents/subsystem/subsystem-itests/pom.xml?ref=a4fee5d66e621920e368ccb3fc0e02795991a7c0",
                "patch": "@@ -332,6 +332,21 @@\n                 <artifactId>maven-jar-plugin</artifactId>\n                 <version>2.3</version>\n                 <executions>\n+                     <execution>\n+                        <id>tb1-nobsn</id>\n+                        <goals>\n+                            <goal>jar</goal>\n+                        </goals>\n+                        <configuration>\n+                            <excludes>\n+                                <exclude>**/*</exclude>\n+                            </excludes>\n+                            <classesDirectory>${project.build.directory}/test-classes</classesDirectory>\n+                            <outputDirectory>${project.build.directory}/test-classes/nobsn</outputDirectory>\n+                            <finalName>tb1</finalName>\n+                        </configuration>\n+                        <phase>process-test-classes</phase>\n+                    </execution>\n                     <execution>\n                         <id>tb1-application1</id>\n                         <goals>",
                "deletions": 0
            },
            {
                "sha": "12e0ffd62ee1f724629b524427c9cdf36a666786",
                "filename": "subsystem/subsystem-itests/src/test/java/org/apache/aries/subsystem/itests/NoBSNTest.java",
                "blob_url": "https://github.com/apache/aries/blob/a4fee5d66e621920e368ccb3fc0e02795991a7c0/subsystem/subsystem-itests/src/test/java/org/apache/aries/subsystem/itests/NoBSNTest.java",
                "raw_url": "https://github.com/apache/aries/raw/a4fee5d66e621920e368ccb3fc0e02795991a7c0/subsystem/subsystem-itests/src/test/java/org/apache/aries/subsystem/itests/NoBSNTest.java",
                "status": "added",
                "changes": 76,
                "additions": 76,
                "contents_url": "https://api.github.com/repos/apache/aries/contents/subsystem/subsystem-itests/src/test/java/org/apache/aries/subsystem/itests/NoBSNTest.java?ref=a4fee5d66e621920e368ccb3fc0e02795991a7c0",
                "patch": "@@ -0,0 +1,76 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.aries.subsystem.itests;\n+\n+import java.io.ByteArrayOutputStream;\n+import java.io.File;\n+import java.io.FileInputStream;\n+import java.io.IOException;\n+import java.util.HashMap;\n+import java.util.Map;\n+import java.util.jar.Attributes;\n+import java.util.jar.JarOutputStream;\n+import java.util.jar.Manifest;\n+\n+import org.apache.aries.subsystem.itests.util.TestCapability;\n+import org.apache.aries.subsystem.itests.util.TestRepository;\n+import org.apache.aries.subsystem.itests.util.TestRepositoryContent;\n+import org.junit.Before;\n+import org.junit.Test;\n+import org.osgi.framework.Bundle;\n+import org.osgi.framework.Constants;\n+import org.osgi.framework.Version;\n+import org.osgi.framework.namespace.IdentityNamespace;\n+import org.osgi.framework.namespace.PackageNamespace;\n+import org.osgi.resource.Resource;\n+import org.osgi.service.repository.Repository;\n+import org.osgi.service.subsystem.Subsystem;\n+import org.osgi.service.subsystem.SubsystemConstants;\n+\n+public class NoBSNTest extends SubsystemTest {\n+\t\n+\t@Override\n+\tpublic void createApplications() throws Exception {\n+\t\tcreateApplication(\"nobsn\", \"tb1.jar\");\n+\t}\n+\t\n+\n+    \n+\t/*\n+\t * Subsystem application1 has content bundle tb1.jar.\n+\t * Bundle tb1.jar has an import package dependency on org.apache.aries.subsystem.itests.tb3.\n+\t */\n+    @Test\n+    public void testApplication1() throws Exception {\n+        Subsystem nobsn = installSubsystemFromFile(\"nobsn.esa\");\n+        try {\n+            assertSymbolicName(\"org.apache.aries.subsystem.nobsn\", nobsn);\n+            assertVersion(\"0.0.0\", nobsn);\n+            assertType(SubsystemConstants.SUBSYSTEM_TYPE_APPLICATION, nobsn);\n+            assertChildren(0, nobsn);\n+            assertConstituents(1, nobsn);\n+            startSubsystem(nobsn);\n+        }\n+        finally {\n+           stopSubsystemSilently(nobsn);\n+           uninstallSubsystemSilently(nobsn);\n+        }\n+    }\n+    \n+}",
                "deletions": 0
            },
            {
                "sha": "7ac45864ce1c9c9c69af13bfcf8fca64849810ab",
                "filename": "subsystem/subsystem-itests/src/test/resources/nobsn/OSGI-INF/SUBSYSTEM.MF",
                "blob_url": "https://github.com/apache/aries/blob/a4fee5d66e621920e368ccb3fc0e02795991a7c0/subsystem/subsystem-itests/src/test/resources/nobsn/OSGI-INF/SUBSYSTEM.MF",
                "raw_url": "https://github.com/apache/aries/raw/a4fee5d66e621920e368ccb3fc0e02795991a7c0/subsystem/subsystem-itests/src/test/resources/nobsn/OSGI-INF/SUBSYSTEM.MF",
                "status": "added",
                "changes": 1,
                "additions": 1,
                "contents_url": "https://api.github.com/repos/apache/aries/contents/subsystem/subsystem-itests/src/test/resources/nobsn/OSGI-INF/SUBSYSTEM.MF?ref=a4fee5d66e621920e368ccb3fc0e02795991a7c0",
                "patch": "@@ -0,0 +1 @@\n+Subsystem-SymbolicName: org.apache.aries.subsystem.nobsn",
                "deletions": 0
            }
        ]
    },
    {
        "repo": "aries",
        "message": "Added some check to avoid NullPointerException during startup\nPartly applied\nSigned-off-by: Christian Schneider <chris@die-schneider.net>\n\ngit-svn-id: https://svn.apache.org/repos/asf/aries/trunk@1661703 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/aries/commit/a9204b8030bd0515b54f463f866d25bc255f4b7c",
        "parent": "https://github.com/apache/aries/commit/dd0ecee4dacb991c218f0c5ad48a4599b8c1f674",
        "bug_id": "aries_11",
        "file": [
            {
                "sha": "b880ddd5e8f0f41a5ce7979c6031632e90417a78",
                "filename": "jpa/jpa-container-eclipselink-adapter/src/main/java/org/apache/aries/jpa/eclipselink/adapter/Activator.java",
                "blob_url": "https://github.com/apache/aries/blob/a9204b8030bd0515b54f463f866d25bc255f4b7c/jpa/jpa-container-eclipselink-adapter/src/main/java/org/apache/aries/jpa/eclipselink/adapter/Activator.java",
                "raw_url": "https://github.com/apache/aries/raw/a9204b8030bd0515b54f463f866d25bc255f4b7c/jpa/jpa-container-eclipselink-adapter/src/main/java/org/apache/aries/jpa/eclipselink/adapter/Activator.java",
                "status": "modified",
                "changes": 34,
                "additions": 18,
                "contents_url": "https://api.github.com/repos/apache/aries/contents/jpa/jpa-container-eclipselink-adapter/src/main/java/org/apache/aries/jpa/eclipselink/adapter/Activator.java?ref=a9204b8030bd0515b54f463f866d25bc255f4b7c",
                "patch": "@@ -141,22 +141,24 @@ private void handlePotentialEclipseLink(Bundle b) {\n         \n         for (Bundle b : context.getBundles()) {\n             BundleWiring bw = b.adapt(BundleWiring.class);\n-            List<BundleWire> wires = bw.getProvidedWires(BundleRevision.PACKAGE_NAMESPACE);\n-\n-            for (BundleWire w : wires) {\n-                String pkgName = (String) w.getCapability().getAttributes().get(BundleRevision.PACKAGE_NAMESPACE);\n-\n-                boolean add = false;\n-                if (b.equals(jpaBundle)) {\n-                    add = true;\n-                } else if (pkgName.startsWith(\"org.eclipse.persistence\")) {\n-                    add = true;\n-                }\n-                \n-                if (add) {\n-                    String suffix = \";\" + Constants.BUNDLE_SYMBOLICNAME_ATTRIBUTE + \"=\" + b.getSymbolicName() + \";\" + Constants.BUNDLE_VERSION_ATTRIBUTE  + \"=\" + b.getVersion();                    \n-                    result.add(pkgName + suffix);\n-                }\n+            if(bw != null) {\n+\t            List<BundleWire> wires = bw.getProvidedWires(BundleRevision.PACKAGE_NAMESPACE);\n+\t\n+\t            for (BundleWire w : wires) {\n+\t                String pkgName = (String) w.getCapability().getAttributes().get(BundleRevision.PACKAGE_NAMESPACE);\n+\t\n+\t                boolean add = false;\n+\t                if (b.equals(jpaBundle)) {\n+\t                    add = true;\n+\t                } else if (pkgName.startsWith(\"org.eclipse.persistence\")) {\n+\t                    add = true;\n+\t                }\n+\t                \n+\t                if (add) {\n+\t                    String suffix = \";\" + Constants.BUNDLE_SYMBOLICNAME_ATTRIBUTE + \"=\" + b.getSymbolicName() + \";\" + Constants.BUNDLE_VERSION_ATTRIBUTE  + \"=\" + b.getVersion();                    \n+\t                    result.add(pkgName + suffix);\n+\t                }\n+\t            }\n             }\n         }\n         ",
                "deletions": 16
            },
            {
                "sha": "e9ba7561d8db77df956d277c355ba27b850bf356",
                "filename": "jpa/jpa-container-itest/src/test/java/org/apache/aries/jpa/itest/AbstractJPAItest.java",
                "blob_url": "https://github.com/apache/aries/blob/a9204b8030bd0515b54f463f866d25bc255f4b7c/jpa/jpa-container-itest/src/test/java/org/apache/aries/jpa/itest/AbstractJPAItest.java",
                "raw_url": "https://github.com/apache/aries/raw/a9204b8030bd0515b54f463f866d25bc255f4b7c/jpa/jpa-container-itest/src/test/java/org/apache/aries/jpa/itest/AbstractJPAItest.java",
                "status": "modified",
                "changes": 4,
                "additions": 3,
                "contents_url": "https://api.github.com/repos/apache/aries/contents/jpa/jpa-container-itest/src/test/java/org/apache/aries/jpa/itest/AbstractJPAItest.java?ref=a9204b8030bd0515b54f463f866d25bc255f4b7c",
                "patch": "@@ -80,7 +80,9 @@ protected Option baseOptions() {\n                 // this is how you set the default log level when using pax\n                 // logging (logProfile)\n                 systemProperty(\"org.ops4j.pax.logging.DefaultServiceLog.level\").value(\"INFO\"),\n-                when(localRepo != null).useOptions(vmOption(\"-Dorg.ops4j.pax.url.mvn.localRepository=\" + localRepo)));\n+                when(localRepo != null).useOptions(vmOption(\"-Dorg.ops4j.pax.url.mvn.localRepository=\" + localRepo))\n+//               , vmOption(\"-Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=5005\")\n+                );\n     }\n \n     private Option ariesJpaInternal() {",
                "deletions": 1
            }
        ]
    },
    {
        "repo": "aries",
        "message": "[ARIES-1615] Handle PreparedStatement to avoid NPE\n\ngit-svn-id: https://svn.apache.org/repos/asf/aries/trunk@1766695 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/aries/commit/f86d4bd27712b2ca5bf3a2145959f13364db3b5d",
        "parent": "https://github.com/apache/aries/commit/76b860ab00e1a12f4909fd96228dca1fb5200909",
        "bug_id": "aries_12",
        "file": [
            {
                "sha": "cac5635d422c44568c8891498b7c475d1535e84d",
                "filename": "jpa/jpa-container/src/main/java/org/apache/aries/jpa/container/weaving/impl/DummyDataSource.java",
                "blob_url": "https://github.com/apache/aries/blob/f86d4bd27712b2ca5bf3a2145959f13364db3b5d/jpa/jpa-container/src/main/java/org/apache/aries/jpa/container/weaving/impl/DummyDataSource.java",
                "raw_url": "https://github.com/apache/aries/raw/f86d4bd27712b2ca5bf3a2145959f13364db3b5d/jpa/jpa-container/src/main/java/org/apache/aries/jpa/container/weaving/impl/DummyDataSource.java",
                "status": "modified",
                "changes": 5,
                "additions": 5,
                "contents_url": "https://api.github.com/repos/apache/aries/contents/jpa/jpa-container/src/main/java/org/apache/aries/jpa/container/weaving/impl/DummyDataSource.java?ref=f86d4bd27712b2ca5bf3a2145959f13364db3b5d",
                "patch": "@@ -24,9 +24,11 @@\n import java.lang.reflect.Proxy;\n import java.sql.Connection;\n import java.sql.DatabaseMetaData;\n+import java.sql.PreparedStatement;\n import java.sql.ResultSet;\n import java.sql.SQLException;\n import java.sql.SQLFeatureNotSupportedException;\n+import java.sql.Statement;\n \n import javax.sql.DataSource;\n \n@@ -62,6 +64,9 @@ private Object proxyClasses(ClassLoader classLoader, Class<?> type) {\n             if (type == ResultSet.class) {\n                 return createProxy(classLoader, ResultSet.class);\n             }\n+            if (type == Statement.class) {\n+                return createProxy(classLoader, PreparedStatement.class);\n+            }\n             return null;\n         }\n ",
                "deletions": 0
            }
        ]
    },
    {
        "repo": "aries",
        "message": "Aries-1075: NullPointerException in EntityManagerFactoryManager.providerRemoved - from a patch by Simon Gormley\n\ngit-svn-id: https://svn.apache.org/repos/asf/aries/trunk@1646472 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/aries/commit/de3d284659eb54676befba61278bd7ac5a7794ff",
        "parent": "https://github.com/apache/aries/commit/0c77314277d859273678692b6d382ad5a1be26ef",
        "bug_id": "aries_13",
        "file": [
            {
                "sha": "2ae9ca0acd40fd1cf191f7451b915380ad74ea1b",
                "filename": "jpa/jpa-container/src/main/java/org/apache/aries/jpa/container/impl/EntityManagerFactoryManager.java",
                "blob_url": "https://github.com/apache/aries/blob/de3d284659eb54676befba61278bd7ac5a7794ff/jpa/jpa-container/src/main/java/org/apache/aries/jpa/container/impl/EntityManagerFactoryManager.java",
                "raw_url": "https://github.com/apache/aries/raw/de3d284659eb54676befba61278bd7ac5a7794ff/jpa/jpa-container/src/main/java/org/apache/aries/jpa/container/impl/EntityManagerFactoryManager.java",
                "status": "modified",
                "changes": 9,
                "additions": 6,
                "contents_url": "https://api.github.com/repos/apache/aries/contents/jpa/jpa-container/src/main/java/org/apache/aries/jpa/container/impl/EntityManagerFactoryManager.java?ref=de3d284659eb54676befba61278bd7ac5a7794ff",
                "patch": "@@ -124,9 +124,12 @@ public EntityManagerFactoryManager(BundleContext containerCtx, Bundle b) {\n    * @param ref  The provider service reference\n    * @return true if the the provider is being used by this manager\n    */\n-  public synchronized boolean providerRemoved(ServiceReference ref) {\n-    \n-    boolean toReturn = provider.equals(ref);\n+  public synchronized boolean providerRemoved(ServiceReference ref) \n+  {\n+    boolean toReturn = false;\n+    if (provider != null) {\n+    \ttoReturn = provider.equals(ref);\n+    }\n     \n     if(toReturn)\n       destroy();",
                "deletions": 3
            }
        ]
    },
    {
        "repo": "aries",
        "message": "Fix possible NPE\n\ngit-svn-id: https://svn.apache.org/repos/asf/aries/trunk@1723025 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/aries/commit/02abb116022add8a2a292220d5c3848ced68d5ff",
        "parent": "https://github.com/apache/aries/commit/ebf271da93524b316b97fb841cd4abbc01714664",
        "bug_id": "aries_14",
        "file": [
            {
                "sha": "9e558e7351f3c1dbf1c9bd32697326eb517ede71",
                "filename": "blueprint/blueprint-core/src/main/java/org/apache/aries/blueprint/container/RecipeBuilder.java",
                "blob_url": "https://github.com/apache/aries/blob/02abb116022add8a2a292220d5c3848ced68d5ff/blueprint/blueprint-core/src/main/java/org/apache/aries/blueprint/container/RecipeBuilder.java",
                "raw_url": "https://github.com/apache/aries/raw/02abb116022add8a2a292220d5c3848ced68d5ff/blueprint/blueprint-core/src/main/java/org/apache/aries/blueprint/container/RecipeBuilder.java",
                "status": "modified",
                "changes": 2,
                "additions": 1,
                "contents_url": "https://api.github.com/repos/apache/aries/contents/blueprint/blueprint-core/src/main/java/org/apache/aries/blueprint/container/RecipeBuilder.java?ref=02abb116022add8a2a292220d5c3848ced68d5ff",
                "patch": "@@ -352,7 +352,7 @@ private Recipe getValue(Metadata v, Object groupingType) {\n             IdRefRecipe rnr = new IdRefRecipe(getName(null), componentName);\n             return rnr;\n         } else {\n-            throw new IllegalStateException(\"Unsupported value: \" + v.getClass().getName());\n+            throw new IllegalStateException(\"Unsupported value: \" + (v != null ? v.getClass().getName() : \"null\"));\n         }\n     }\n ",
                "deletions": 1
            }
        ]
    },
    {
        "repo": "aries",
        "message": "[ARIES-1533] Make sure interfaces do not cause a NPE\n\ngit-svn-id: https://svn.apache.org/repos/asf/aries/trunk@1739703 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/aries/commit/badc5b9e09bd0a7e946aee7e42f7a7d06658cca0",
        "parent": "https://github.com/apache/aries/commit/b1a01d0cbfb1e2d75e348002874ee29d8f7416dd",
        "bug_id": "aries_15",
        "file": [
            {
                "sha": "8fec1699a9c2a8c7df27b798ed9c25eacec7cb2f",
                "filename": "jpa/jpa-blueprint/src/main/java/org/apache/aries/jpa/blueprint/impl/AnnotationScanner.java",
                "blob_url": "https://github.com/apache/aries/blob/badc5b9e09bd0a7e946aee7e42f7a7d06658cca0/jpa/jpa-blueprint/src/main/java/org/apache/aries/jpa/blueprint/impl/AnnotationScanner.java",
                "raw_url": "https://github.com/apache/aries/raw/badc5b9e09bd0a7e946aee7e42f7a7d06658cca0/jpa/jpa-blueprint/src/main/java/org/apache/aries/jpa/blueprint/impl/AnnotationScanner.java",
                "status": "modified",
                "changes": 2,
                "additions": 1,
                "contents_url": "https://api.github.com/repos/apache/aries/contents/jpa/jpa-blueprint/src/main/java/org/apache/aries/jpa/blueprint/impl/AnnotationScanner.java?ref=badc5b9e09bd0a7e946aee7e42f7a7d06658cca0",
                "patch": "@@ -29,7 +29,7 @@\n \n     public List<AccessibleObject> getJpaAnnotatedMembers(Class<?> c, Class<? extends Annotation> annotation) {\n         final List<AccessibleObject> jpaAnnotated = new ArrayList<AccessibleObject>();\n-        for (Class<?> cl = c; cl != Object.class; cl = cl.getSuperclass()) {  \n+        for (Class<?> cl = c; cl != Object.class && cl != null; cl = cl.getSuperclass()) {\n             parseClass(annotation, jpaAnnotated, cl);\n         }\n         return jpaAnnotated;",
                "deletions": 1
            },
            {
                "sha": "ebd3b85b5fbf977c01b0920b808dae5f8764bd42",
                "filename": "jpa/jpa-blueprint/src/test/java/org/apache/aries/jpa/blueprint/impl/AnnotationScannerTest.java",
                "blob_url": "https://github.com/apache/aries/blob/badc5b9e09bd0a7e946aee7e42f7a7d06658cca0/jpa/jpa-blueprint/src/test/java/org/apache/aries/jpa/blueprint/impl/AnnotationScannerTest.java",
                "raw_url": "https://github.com/apache/aries/raw/badc5b9e09bd0a7e946aee7e42f7a7d06658cca0/jpa/jpa-blueprint/src/test/java/org/apache/aries/jpa/blueprint/impl/AnnotationScannerTest.java",
                "status": "modified",
                "changes": 9,
                "additions": 9,
                "contents_url": "https://api.github.com/repos/apache/aries/contents/jpa/jpa-blueprint/src/test/java/org/apache/aries/jpa/blueprint/impl/AnnotationScannerTest.java?ref=badc5b9e09bd0a7e946aee7e42f7a7d06658cca0",
                "patch": "@@ -87,5 +87,14 @@ public void getPUAnnotatedMembersTest() {\n         Assert.assertEquals(\"setEmf\", method.getName());\n     }\n \n+    /**\n+     * When using a factory the class can be an interface. We need to make sure this does not cause a NPE\n+     */\n+    @Test\n+    public void getFactoryTest() {\n+        AnnotationScanner scanner = new AnnotationScanner();\n+        List<AccessibleObject> members = scanner.getJpaAnnotatedMembers(TestInterface.class, PersistenceUnit.class);\n+        Assert.assertEquals(0, members.size());\n+    }\n     \n }",
                "deletions": 0
            },
            {
                "sha": "87303f8ca6765940a85c7c58c254df669869a33f",
                "filename": "jpa/jpa-blueprint/src/test/java/org/apache/aries/jpa/blueprint/impl/TestInterface.java",
                "blob_url": "https://github.com/apache/aries/blob/badc5b9e09bd0a7e946aee7e42f7a7d06658cca0/jpa/jpa-blueprint/src/test/java/org/apache/aries/jpa/blueprint/impl/TestInterface.java",
                "raw_url": "https://github.com/apache/aries/raw/badc5b9e09bd0a7e946aee7e42f7a7d06658cca0/jpa/jpa-blueprint/src/test/java/org/apache/aries/jpa/blueprint/impl/TestInterface.java",
                "status": "added",
                "changes": 5,
                "additions": 5,
                "contents_url": "https://api.github.com/repos/apache/aries/contents/jpa/jpa-blueprint/src/test/java/org/apache/aries/jpa/blueprint/impl/TestInterface.java?ref=badc5b9e09bd0a7e946aee7e42f7a7d06658cca0",
                "patch": "@@ -0,0 +1,5 @@\n+package org.apache.aries.jpa.blueprint.impl;\n+\n+public interface TestInterface {\n+\n+}",
                "deletions": 0
            }
        ]
    },
    {
        "repo": "aries",
        "message": "[ARIES-1477] NPE in NamespaceHandlerRegistryImpl\n\ngit-svn-id: https://svn.apache.org/repos/asf/aries/trunk@1719864 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/aries/commit/9d6822da6e0fb58189a46d98812b628a8d333a82",
        "parent": "https://github.com/apache/aries/commit/6a9e8f6f9f238b38dd502a1031fcb0dc4e9f2120",
        "bug_id": "aries_16",
        "file": [
            {
                "sha": "6ee6b0e894057acb9ed48ee773f264f1d1531935",
                "filename": "blueprint/blueprint-core/src/main/java/org/apache/aries/blueprint/namespace/NamespaceHandlerRegistryImpl.java",
                "blob_url": "https://github.com/apache/aries/blob/9d6822da6e0fb58189a46d98812b628a8d333a82/blueprint/blueprint-core/src/main/java/org/apache/aries/blueprint/namespace/NamespaceHandlerRegistryImpl.java",
                "raw_url": "https://github.com/apache/aries/raw/9d6822da6e0fb58189a46d98812b628a8d333a82/blueprint/blueprint-core/src/main/java/org/apache/aries/blueprint/namespace/NamespaceHandlerRegistryImpl.java",
                "status": "modified",
                "changes": 9,
                "additions": 7,
                "contents_url": "https://api.github.com/repos/apache/aries/contents/blueprint/blueprint-core/src/main/java/org/apache/aries/blueprint/namespace/NamespaceHandlerRegistryImpl.java?ref=9d6822da6e0fb58189a46d98812b628a8d333a82",
                "patch": "@@ -122,8 +122,13 @@ public Object addingService(ServiceReference reference) {\n                 LOGGER.warn(\"Error registering NamespaceHandler\", e);\n             }\n         } else {\n-            LOGGER.warn(\"Error resolving NamespaceHandler, null Service obtained from tracked ServiceReference {} for bundle {}/{}\",\n-                    reference.toString(), reference.getBundle().getSymbolicName(), reference.getBundle().getVersion());\n+            Bundle bundle = reference.getBundle();\n+            // If bundle is null, the service has already been unregistered,\n+            // so do nothing in that case\n+            if (bundle != null) {\n+                LOGGER.warn(\"Error resolving NamespaceHandler, null Service obtained from tracked ServiceReference {} for bundle {}/{}\",\n+                        reference.toString(), reference.getBundle().getSymbolicName(), reference.getBundle().getVersion());\n+            }\n         }\n         return handler;\n     }",
                "deletions": 2
            }
        ]
    },
    {
        "repo": "aries",
        "message": "[ARIES-1468] Fixing NPE in case bundle is null\n\ngit-svn-id: https://svn.apache.org/repos/asf/aries/trunk@1718800 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/aries/commit/5d8bf069c29c85fd53459d9d51303991cfb114e4",
        "parent": "https://github.com/apache/aries/commit/ebebf42249010d8414d549d59652ddf900104dfb",
        "bug_id": "aries_17",
        "file": [
            {
                "sha": "d6c4bc742e5799d3da4a7253d67320032f37f983",
                "filename": "jmx/jmx-core/src/main/java/org/apache/aries/jmx/codec/ServiceEventData.java",
                "blob_url": "https://github.com/apache/aries/blob/5d8bf069c29c85fd53459d9d51303991cfb114e4/jmx/jmx-core/src/main/java/org/apache/aries/jmx/codec/ServiceEventData.java",
                "raw_url": "https://github.com/apache/aries/raw/5d8bf069c29c85fd53459d9d51303991cfb114e4/jmx/jmx-core/src/main/java/org/apache/aries/jmx/codec/ServiceEventData.java",
                "status": "modified",
                "changes": 11,
                "additions": 7,
                "contents_url": "https://api.github.com/repos/apache/aries/contents/jmx/jmx-core/src/main/java/org/apache/aries/jmx/codec/ServiceEventData.java?ref=5d8bf069c29c85fd53459d9d51303991cfb114e4",
                "patch": "@@ -83,14 +83,17 @@ private ServiceEventData(){\n     }\n     \n     public ServiceEventData(ServiceEvent serviceEvent) {\n+        @SuppressWarnings(\"rawtypes\")\n         ServiceReference serviceReference = serviceEvent.getServiceReference();\n         this.serviceId = (Long) serviceReference.getProperty(Constants.SERVICE_ID);\n         this.serviceInterfaces = (String[]) serviceReference.getProperty(Constants.OBJECTCLASS);\n-        Bundle bundle = serviceReference.getBundle();\n-        this.bundleId = bundle.getBundleId();\n-        this.bundleLocation = bundle.getLocation();\n-        this.bundleSymbolicName = bundle.getSymbolicName();\n         this.eventType = serviceEvent.getType();\n+        Bundle bundle = serviceReference.getBundle();\n+        if (bundle != null) {\n+            this.bundleId = bundle.getBundleId();\n+            this.bundleLocation = bundle.getLocation();\n+            this.bundleSymbolicName = bundle.getSymbolicName();\n+        }\n     }\n     \n     /**",
                "deletions": 4
            }
        ]
    },
    {
        "repo": "aries",
        "message": "[ARIES-1454] Avoid NPE\n\ngit-svn-id: https://svn.apache.org/repos/asf/aries/trunk@1715157 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/aries/commit/77e287424fa5b14238debeaea334565175b2e647",
        "parent": "https://github.com/apache/aries/commit/46878c61a581fca03b9a7c175560f7bd57442dc4",
        "bug_id": "aries_18",
        "file": [
            {
                "sha": "82c772558524448ff689287125be2d5e2a32d5bc",
                "filename": "transaction/transaction-blueprint/src/main/java/org/apache/aries/transaction/TxInterceptorImpl.java",
                "blob_url": "https://github.com/apache/aries/blob/77e287424fa5b14238debeaea334565175b2e647/transaction/transaction-blueprint/src/main/java/org/apache/aries/transaction/TxInterceptorImpl.java",
                "raw_url": "https://github.com/apache/aries/raw/77e287424fa5b14238debeaea334565175b2e647/transaction/transaction-blueprint/src/main/java/org/apache/aries/transaction/TxInterceptorImpl.java",
                "status": "modified",
                "changes": 20,
                "additions": 12,
                "contents_url": "https://api.github.com/repos/apache/aries/contents/transaction/transaction-blueprint/src/main/java/org/apache/aries/transaction/TxInterceptorImpl.java?ref=77e287424fa5b14238debeaea334565175b2e647",
                "patch": "@@ -28,7 +28,6 @@\n import org.apache.aries.blueprint.Interceptor;\n import org.osgi.service.blueprint.reflect.ComponentMetadata;\n import org.osgi.service.coordinator.Coordination;\n-import org.osgi.service.coordinator.CoordinationException;\n import org.osgi.service.coordinator.Coordinator;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n@@ -75,11 +74,7 @@ public void postCallWithException(ComponentMetadata cm, Method m, Throwable ex,\n         }\n         LOGGER.debug(\"PostCallWithException for bean {}, method {}.\", getCmId(cm), m.getName(), ex);\n         final TransactionToken token = (TransactionToken)preCallToken;\n-        try {\n-            token.getCoordination().end();\n-        } catch (CoordinationException e){\n-            LOGGER.debug(e.getMessage(), e);\n-        }\n+        safeEndCoordination(token);\n         try {\n             Transaction tran = token.getActiveTransaction();\n             if (tran != null && isRollBackException(ex)) {\n@@ -93,7 +88,6 @@ public void postCallWithException(ComponentMetadata cm, Method m, Throwable ex,\n         }\n     }\n \n-\n     @Override\n     public void postCallWithReturn(ComponentMetadata cm, Method m, Object returnType, Object preCallToken)\n         throws Exception {\n@@ -106,7 +100,7 @@ public void postCallWithReturn(ComponentMetadata cm, Method m, Object returnType\n             throw new IllegalStateException(\"Expected a TransactionToken from preCall but got \" + preCallToken);\n         }\n         final TransactionToken token = (TransactionToken)preCallToken;\n-        token.getCoordination().end();\n+        safeEndCoordination(token);\n         try {\n             token.getTransactionAttribute().finish(tm, token);\n         } catch (Exception e) {\n@@ -117,6 +111,16 @@ public void postCallWithReturn(ComponentMetadata cm, Method m, Object returnType\n             throw rbe;\n         }\n     }\n+\n+    private void safeEndCoordination(final TransactionToken token) {\n+        try {\n+            if (token != null && token.getCoordination() != null) {\n+                token.getCoordination().end();\n+            }\n+        } catch (Exception e){\n+            LOGGER.debug(e.getMessage(), e);\n+        }\n+    }\n     \n     private static String getCmId(ComponentMetadata cm) {\n         return cm == null ? null : cm.getId();",
                "deletions": 8
            }
        ]
    },
    {
        "repo": "aries",
        "message": "[ARIES-1438] Fixed NPE with thanks to Matthew Pitts\n\ngit-svn-id: https://svn.apache.org/repos/asf/aries/trunk@1710823 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/aries/commit/e60b5999fc4fbf8a6a4b7b0daf1a4c81bdc18595",
        "parent": "https://github.com/apache/aries/commit/354144834e358e0cd0c98f7dcd94cc2c6c12c10e",
        "bug_id": "aries_19",
        "file": [
            {
                "sha": "9a62cea63b2d01a883f9a5bd7c3be206c00023f8",
                "filename": "jpa/jpa-support/src/main/java/org/apache/aries/jpa/support/impl/XAJpaTemplate.java",
                "blob_url": "https://github.com/apache/aries/blob/e60b5999fc4fbf8a6a4b7b0daf1a4c81bdc18595/jpa/jpa-support/src/main/java/org/apache/aries/jpa/support/impl/XAJpaTemplate.java",
                "raw_url": "https://github.com/apache/aries/raw/e60b5999fc4fbf8a6a4b7b0daf1a4c81bdc18595/jpa/jpa-support/src/main/java/org/apache/aries/jpa/support/impl/XAJpaTemplate.java",
                "status": "modified",
                "changes": 3,
                "additions": 2,
                "contents_url": "https://api.github.com/repos/apache/aries/contents/jpa/jpa-support/src/main/java/org/apache/aries/jpa/support/impl/XAJpaTemplate.java?ref=e60b5999fc4fbf8a6a4b7b0daf1a4c81bdc18595",
                "patch": "@@ -74,7 +74,8 @@ public XAJpaTemplate(EmSupplier emSupplier, TransactionManager tm, Coordinator c\n                 LOGGER.debug(\"Exception during finish of transaction\", e);\n                 throw wrapThrowable(e, \"Exception during finish of transaction\");\n             } finally {\n-                coord.end();\n+                if (coord != null)\n+                    coord.end();\n             }\n         }\n     }",
                "deletions": 1
            }
        ]
    },
    {
        "repo": "aries",
        "message": "[ARIES-1372] Avoid NPE\n\ngit-svn-id: https://svn.apache.org/repos/asf/aries/trunk@1695097 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/aries/commit/db2034a32e8e4f7813135e95451ce1387b14dee2",
        "parent": "https://github.com/apache/aries/commit/4dfd30c8b28e1814aa72d7daea12e6ae554f9b62",
        "bug_id": "aries_20",
        "file": [
            {
                "sha": "4821d7106b7ddd81b8328e45ad33855b9e4299a2",
                "filename": "jpa/jpa-blueprint/src/main/java/org/apache/aries/jpa/blueprint/impl/JpaInterceptor.java",
                "blob_url": "https://github.com/apache/aries/blob/db2034a32e8e4f7813135e95451ce1387b14dee2/jpa/jpa-blueprint/src/main/java/org/apache/aries/jpa/blueprint/impl/JpaInterceptor.java",
                "raw_url": "https://github.com/apache/aries/raw/db2034a32e8e4f7813135e95451ce1387b14dee2/jpa/jpa-blueprint/src/main/java/org/apache/aries/jpa/blueprint/impl/JpaInterceptor.java",
                "status": "modified",
                "changes": 8,
                "additions": 6,
                "contents_url": "https://api.github.com/repos/apache/aries/contents/jpa/jpa-blueprint/src/main/java/org/apache/aries/jpa/blueprint/impl/JpaInterceptor.java?ref=db2034a32e8e4f7813135e95451ce1387b14dee2",
                "patch": "@@ -65,13 +65,17 @@ public Object preCall(ComponentMetadata cm, Method m, Object... parameters) thro\n \n     public void postCallWithException(ComponentMetadata cm, Method m, Throwable ex, Object preCallToken) {\n         LOG.debug(\"PostCallWithException for bean {}, method {}\", cm.getId(), m.getName(), ex);\n-        ((Coordination) preCallToken).fail(ex);\n+        if (preCallToken != null) {\n+            ((Coordination) preCallToken).fail(ex);\n+        }\n     }\n \n     public void postCallWithReturn(ComponentMetadata cm, Method m, Object returnType, Object preCallToken)\n         throws Exception {\n         LOG.debug(\"PostCallWithReturn for bean {}, method {}\", cm.getId(), m.getName());\n-        ((Coordination) preCallToken).end();\n+        if (preCallToken != null) {\n+            ((Coordination) preCallToken).end();\n+        }\n     }\n \n ",
                "deletions": 2
            }
        ]
    },
    {
        "repo": "aries",
        "message": "[ARIES-1353] Adding check to avoid NPE\n\ngit-svn-id: https://svn.apache.org/repos/asf/aries/trunk@1692109 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/aries/commit/3ccf0a36d5a8377bf0ccbecb8791cbee28aa01a4",
        "parent": "https://github.com/apache/aries/commit/f934967c742b8d9492356df42a498603b67c4e31",
        "bug_id": "aries_21",
        "file": [
            {
                "sha": "579757e63438ecba38358807f38cd15e994629de",
                "filename": "blueprint/blueprint-core/src/main/java/org/apache/aries/blueprint/container/BeanRecipe.java",
                "blob_url": "https://github.com/apache/aries/blob/3ccf0a36d5a8377bf0ccbecb8791cbee28aa01a4/blueprint/blueprint-core/src/main/java/org/apache/aries/blueprint/container/BeanRecipe.java",
                "raw_url": "https://github.com/apache/aries/raw/3ccf0a36d5a8377bf0ccbecb8791cbee28aa01a4/blueprint/blueprint-core/src/main/java/org/apache/aries/blueprint/container/BeanRecipe.java",
                "status": "modified",
                "changes": 44,
                "additions": 25,
                "contents_url": "https://api.github.com/repos/apache/aries/contents/blueprint/blueprint-core/src/main/java/org/apache/aries/blueprint/container/BeanRecipe.java?ref=3ccf0a36d5a8377bf0ccbecb8791cbee28aa01a4",
                "patch": "@@ -63,17 +63,18 @@\n  *\n  * @version $Rev$, $Date$\n  */\n+@SuppressWarnings(\"rawtypes\")\n public class BeanRecipe extends AbstractRecipe {\n-\t\n-\tstatic class UnwrapperedBeanHolder {\n-\t\tfinal Object unwrapperedBean;\n-\t\tfinal BeanRecipe recipe;\n-\t\t\n-\t\tpublic UnwrapperedBeanHolder(Object unwrapperedBean, BeanRecipe recipe) {\n-\t\t\tthis.unwrapperedBean = unwrapperedBean;\n-\t\t\tthis.recipe = recipe;\n-\t\t}\n-\t}\n+\n+    static class UnwrapperedBeanHolder {\n+        final Object unwrapperedBean;\n+        final BeanRecipe recipe;\n+\n+        public UnwrapperedBeanHolder(Object unwrapperedBean, BeanRecipe recipe) {\n+            this.unwrapperedBean = unwrapperedBean;\n+            this.recipe = recipe;\n+        }\n+    }\n \n     public class VoidableCallable implements Callable<Object>, Voidable {\n \n@@ -274,7 +275,7 @@ private Object getInstance() throws ComponentDefinitionException {\n                 }\n             }\n         }\n-\n+        \n         if (factory != null) {\n             // look for instance method on factory object\n             Object factoryObj = factory.create();\n@@ -284,7 +285,7 @@ private Object getInstance() throws ComponentDefinitionException {\n                 try {\n                     factoryObj = ((ReferenceRecipe.ServiceProxyWrapper) factoryObj).convert(new ReifiedType(Object.class));\n                 } catch (Exception e) {\n-                    throw new ComponentDefinitionException(\"Error when instantiating bean \" + getName() + \" of class \" + getType().getName(), getRealCause(e));\n+                    throw new ComponentDefinitionException(\"Error when instantiating bean \" + getName() + \" of class \" + getTypeName(), getRealCause(e));\n                 }\n             } else if (factoryObj instanceof UnwrapperedBeanHolder) {\n             \tfactoryObj = wrap((UnwrapperedBeanHolder) factoryObj, Object.class);\n@@ -297,7 +298,7 @@ private Object getInstance() throws ComponentDefinitionException {\n                     Map.Entry<Method, List<Object>> match = matches.entrySet().iterator().next();\n                     instance = invoke(match.getKey(), factoryObj, match.getValue().toArray());\n                 } catch (Throwable e) {\n-                    throw new ComponentDefinitionException(\"Error when instantiating bean \" + getName() + \" of class \" + getType().getName(), getRealCause(e));\n+                    throw new ComponentDefinitionException(\"Error when instantiating bean \" + getName() + \" of class \" + getTypeName(), getRealCause(e));\n                 }\n             } else if (matches.size() == 0) {\n                 throw new ComponentDefinitionException(\"Unable to find a matching factory method \" + factoryMethod + \" on class \" + factoryObj.getClass().getName() + \" for arguments \" + args + \" when instanciating bean \" + getName());\n@@ -312,12 +313,12 @@ private Object getInstance() throws ComponentDefinitionException {\n                     Map.Entry<Method, List<Object>> match = matches.entrySet().iterator().next();\n                     instance = invoke(match.getKey(), null, match.getValue().toArray());\n                 } catch (Throwable e) {\n-                    throw new ComponentDefinitionException(\"Error when instantiating bean \" + getName() + \" of class \" + getType().getName(), getRealCause(e));\n+                    throw new ComponentDefinitionException(\"Error when instantiating bean \" + getName() + \" of class \" + getTypeName(), getRealCause(e));\n                 }\n             } else if (matches.size() == 0) {\n-                throw new ComponentDefinitionException(\"Unable to find a matching factory method \" + factoryMethod + \" on class \" + getType().getName() + \" for arguments \" + args + \" when instanciating bean \" + getName());\n+                throw new ComponentDefinitionException(\"Unable to find a matching factory method \" + factoryMethod + \" on class \" + getTypeName() + \" for arguments \" + args + \" when instanciating bean \" + getName());\n             } else {\n-                throw new ComponentDefinitionException(\"Multiple matching factory methods \" + factoryMethod + \" found on class \" + getType().getName() + \" for arguments \" + args + \" when instanciating bean \" + getName() + \": \" + matches.keySet());\n+                throw new ComponentDefinitionException(\"Multiple matching factory methods \" + factoryMethod + \" found on class \" + getTypeName() + \" for arguments \" + args + \" when instanciating bean \" + getName() + \": \" + matches.keySet());\n             }\n         } else {\n             if (getType() == null) {\n@@ -330,18 +331,23 @@ private Object getInstance() throws ComponentDefinitionException {\n                     Map.Entry<Constructor, List<Object>> match = matches.entrySet().iterator().next();\n                     instance = newInstance(match.getKey(), match.getValue().toArray());\n                 } catch (Throwable e) {\n-                    throw new ComponentDefinitionException(\"Error when instantiating bean \" + getName() + \" of class \" + getType().getName(), getRealCause(e));\n+                    throw new ComponentDefinitionException(\"Error when instantiating bean \" + getName() + \" of class \" + getTypeName(), getRealCause(e));\n                 }\n             } else if (matches.size() == 0) {\n-                throw new ComponentDefinitionException(\"Unable to find a matching constructor on class \" + getType().getName() + \" for arguments \" + args + \" when instanciating bean \" + getName());\n+                throw new ComponentDefinitionException(\"Unable to find a matching constructor on class \" + getTypeName() + \" for arguments \" + args + \" when instanciating bean \" + getName());\n             } else {\n-                throw new ComponentDefinitionException(\"Multiple matching constructors found on class \" + getType().getName() + \" for arguments \" + args + \" when instanciating bean \" + getName() + \": \" + matches.keySet());\n+                throw new ComponentDefinitionException(\"Multiple matching constructors found on class \" + getTypeName() + \" for arguments \" + args + \" when instanciating bean \" + getName() + \": \" + matches.keySet());\n             }\n         }\n         \n         return instance;\n     }\n \n+    private String getTypeName() {\n+        Class<?> type = getType();\n+        return type == null ? null : type.getName();\n+    }\n+\n     private Map<Method, List<Object>> findMatchingMethods(Class type, String name, boolean instance, List<Object> args, List<ReifiedType> types) {\n         Map<Method, List<Object>> matches = new HashMap<Method, List<Object>>();\n         // Get constructors",
                "deletions": 19
            }
        ]
    },
    {
        "repo": "aries",
        "message": "Avoid NPE when symbolicName is null\n\ngit-svn-id: https://svn.apache.org/repos/asf/aries/trunk@1677845 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/aries/commit/a36920cf8d74eae9a011830335a4a288987b0238",
        "parent": "https://github.com/apache/aries/commit/41f9a90e6c889f7964e4bc74b3552cf697d17ed2",
        "bug_id": "aries_22",
        "file": [
            {
                "sha": "3189779bcbe1a7a793388c451aea2ceea0b2a568",
                "filename": "jpa/jpa-container-context/src/main/java/org/apache/aries/jpa/container/context/impl/GlobalPersistenceManager.java",
                "blob_url": "https://github.com/apache/aries/blob/a36920cf8d74eae9a011830335a4a288987b0238/jpa/jpa-container-context/src/main/java/org/apache/aries/jpa/container/context/impl/GlobalPersistenceManager.java",
                "raw_url": "https://github.com/apache/aries/raw/a36920cf8d74eae9a011830335a4a288987b0238/jpa/jpa-container-context/src/main/java/org/apache/aries/jpa/container/context/impl/GlobalPersistenceManager.java",
                "status": "modified",
                "changes": 3,
                "additions": 2,
                "contents_url": "https://api.github.com/repos/apache/aries/contents/jpa/jpa-container-context/src/main/java/org/apache/aries/jpa/container/context/impl/GlobalPersistenceManager.java?ref=a36920cf8d74eae9a011830335a4a288987b0238",
                "patch": "@@ -307,8 +307,9 @@ private BundleTrackerCustomizer createSubsystemContextBundleTrackerCustomizer()\n \t  // Assume only the ACTIVE state is being tracked.\n \t  return new BundleTrackerCustomizer() {\n \t\tpublic Bundle addingBundle(Bundle bundle, BundleEvent event) {\n+\t\t        String symName = bundle.getSymbolicName(); \n \t\t\t// Only track the region context bundles of subsystems.\n-\t\t\tif (bundle.getSymbolicName().startsWith(\"org.osgi.service.subsystem.region.context.\"))\n+\t\t\tif (symName != null && symName.startsWith(\"org.osgi.service.subsystem.region.context.\"))\n \t\t\t\treturn bundle;\n \t\t\treturn null;\n \t\t}",
                "deletions": 1
            }
        ]
    },
    {
        "repo": "aries",
        "message": "Aries-1225: NPE thrown by GetBundleContextAction\n\ngit-svn-id: https://svn.apache.org/repos/asf/aries/trunk@1614343 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/aries/commit/3ca2dd9ece89f82976ef2c19d97874d7014bd360",
        "parent": "https://github.com/apache/aries/commit/cf0e44b4f08a27fe6379b5a6b3bffc7361323961",
        "bug_id": "aries_23",
        "file": [
            {
                "sha": "dd03cba121e2d1e451993b1c5385438750adb302",
                "filename": "subsystem/subsystem-core/src/main/java/org/apache/aries/subsystem/core/internal/GetBundleContextAction.java",
                "blob_url": "https://github.com/apache/aries/blob/3ca2dd9ece89f82976ef2c19d97874d7014bd360/subsystem/subsystem-core/src/main/java/org/apache/aries/subsystem/core/internal/GetBundleContextAction.java",
                "raw_url": "https://github.com/apache/aries/raw/3ca2dd9ece89f82976ef2c19d97874d7014bd360/subsystem/subsystem-core/src/main/java/org/apache/aries/subsystem/core/internal/GetBundleContextAction.java",
                "status": "modified",
                "changes": 10,
                "additions": 6,
                "contents_url": "https://api.github.com/repos/apache/aries/contents/subsystem/subsystem-core/src/main/java/org/apache/aries/subsystem/core/internal/GetBundleContextAction.java?ref=3ca2dd9ece89f82976ef2c19d97874d7014bd360",
                "patch": "@@ -16,6 +16,8 @@\n import java.security.PrivilegedAction;\n import java.util.EnumSet;\n \n+import org.eclipse.equinox.region.Region;\n+import org.osgi.framework.Bundle;\n import org.osgi.framework.BundleContext;\n import org.osgi.service.subsystem.Subsystem.State;\n \n@@ -32,9 +34,9 @@ public BundleContext run() {\n \t\t\t\tsubsystem.getState()))\n \t\t\treturn null;\n \t\tBasicSubsystem subsystem = Utils.findScopedSubsystemInRegion(this.subsystem);\n-\t\treturn subsystem.getRegion().getBundle(\n-\t\t\t\tRegionContextBundleHelper.SYMBOLICNAME_PREFIX\n-\t\t\t\t\t\t+ subsystem.getSubsystemId(),\n-\t\t\t\tRegionContextBundleHelper.VERSION).getBundleContext();\n+\t\tRegion region = subsystem.getRegion();\n+\t\tString bundleName = RegionContextBundleHelper.SYMBOLICNAME_PREFIX + subsystem.getSubsystemId();\n+\t\tBundle bundle = region.getBundle(bundleName, RegionContextBundleHelper.VERSION);\n+\t\treturn bundle.getBundleContext();\n \t}\n }",
                "deletions": 4
            }
        ]
    },
    {
        "repo": "aries",
        "message": "ARIES-1214 NPE in subsystem-core when used without modeller.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/aries/trunk@1603766 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/aries/commit/acbb886b72b6e393e1288aa93870056ed565f185",
        "parent": "https://github.com/apache/aries/commit/743914b81f293515b3770c0ec20c73334f48bd7f",
        "bug_id": "aries_24",
        "file": [
            {
                "sha": "206734bbd1da467023b149919fdc4db0895a5426",
                "filename": "subsystem/subsystem-core/src/main/java/org/apache/aries/subsystem/core/internal/BundleRevisionResource.java",
                "blob_url": "https://github.com/apache/aries/blob/acbb886b72b6e393e1288aa93870056ed565f185/subsystem/subsystem-core/src/main/java/org/apache/aries/subsystem/core/internal/BundleRevisionResource.java",
                "raw_url": "https://github.com/apache/aries/raw/acbb886b72b6e393e1288aa93870056ed565f185/subsystem/subsystem-core/src/main/java/org/apache/aries/subsystem/core/internal/BundleRevisionResource.java",
                "status": "modified",
                "changes": 2,
                "additions": 1,
                "contents_url": "https://api.github.com/repos/apache/aries/contents/subsystem/subsystem-core/src/main/java/org/apache/aries/subsystem/core/internal/BundleRevisionResource.java?ref=acbb886b72b6e393e1288aa93870056ed565f185",
                "patch": "@@ -76,7 +76,7 @@ public BundleRevisionResource(BundleRevision revision) {\n         Activator activator = Activator.getInstance();\n         ServiceModeller modeller = activator.getServiceModeller();\n         if (modeller == null)\n-            return null;\n+            return Collections.emptyList();\n         ServiceModeller.ServiceModel model =\n                 modeller.computeRequirementsAndCapabilities(this, new BundleDirectory(revision.getBundle()));\n         return model.getServiceRequirements();",
                "deletions": 1
            },
            {
                "sha": "da84ca251284fa9f927c669cfe4309cf20d41f8a",
                "filename": "subsystem/subsystem-core/src/test/java/org/apache/aries/subsystem/core/internal/BundleRevisionResourceTest.java",
                "blob_url": "https://github.com/apache/aries/blob/acbb886b72b6e393e1288aa93870056ed565f185/subsystem/subsystem-core/src/test/java/org/apache/aries/subsystem/core/internal/BundleRevisionResourceTest.java",
                "raw_url": "https://github.com/apache/aries/raw/acbb886b72b6e393e1288aa93870056ed565f185/subsystem/subsystem-core/src/test/java/org/apache/aries/subsystem/core/internal/BundleRevisionResourceTest.java",
                "status": "modified",
                "changes": 9,
                "additions": 8,
                "contents_url": "https://api.github.com/repos/apache/aries/contents/subsystem/subsystem-core/src/test/java/org/apache/aries/subsystem/core/internal/BundleRevisionResourceTest.java?ref=acbb886b72b6e393e1288aa93870056ed565f185",
                "patch": "@@ -43,9 +43,16 @@ public void tearDown() throws Exception {\n     }\n \n     @Test\n-    public void testNoServiceCapabilities() {\n+    public void testNoModellerServiceCapabilities() {\n         BundleRevision br = EasyMock.createNiceMock(BundleRevision.class);\n         BundleRevisionResource brr = new BundleRevisionResource(br);\n         assertEquals(0, brr.getCapabilities(\"osgi.service\").size());\n     }\n+\n+    @Test\n+    public void testNoModellerServiceRequirements() {\n+        BundleRevision br = EasyMock.createNiceMock(BundleRevision.class);\n+        BundleRevisionResource brr = new BundleRevisionResource(br);\n+        assertEquals(0, brr.getRequirements(\"osgi.service\").size());\n+    }\n }",
                "deletions": 1
            }
        ]
    },
    {
        "repo": "aries",
        "message": "Fix a potential NPE\n\ngit-svn-id: https://svn.apache.org/repos/asf/aries/trunk@1601414 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/aries/commit/925a586700724d0d2cdc9dfcc269d63ea1da3142",
        "parent": "https://github.com/apache/aries/commit/553e90b50b4750a1767a5ceed3eed6a2d48ae935",
        "bug_id": "aries_25",
        "file": [
            {
                "sha": "bd564f03aee82e7690ccddf8971222f53be13ee5",
                "filename": "versioning/versioning-plugin/src/main/java/org/apache/aries/versioning/mojo/VersionCheckerMojo.java",
                "blob_url": "https://github.com/apache/aries/blob/925a586700724d0d2cdc9dfcc269d63ea1da3142/versioning/versioning-plugin/src/main/java/org/apache/aries/versioning/mojo/VersionCheckerMojo.java",
                "raw_url": "https://github.com/apache/aries/raw/925a586700724d0d2cdc9dfcc269d63ea1da3142/versioning/versioning-plugin/src/main/java/org/apache/aries/versioning/mojo/VersionCheckerMojo.java",
                "status": "modified",
                "changes": 5,
                "additions": 5,
                "contents_url": "https://api.github.com/repos/apache/aries/contents/versioning/versioning-plugin/src/main/java/org/apache/aries/versioning/mojo/VersionCheckerMojo.java?ref=925a586700724d0d2cdc9dfcc269d63ea1da3142",
                "patch": "@@ -99,6 +99,11 @@ public void execute() throws MojoExecutionException {\n         if (oldArtifact != null) {\n             try {\n                 BundleInfo newBundle = getBundleInfo(newFile);\n+                if (newBundle == null || newBundle.getBundleManifest() == null) {\n+                    //not a bundle type, just return\n+                    getLog().info(newFile + \" is not an OSGi bundle, skipping.\");\n+                    return;\n+                }\n                 if (null == newBundle.getBundleManifest().getManifestVersion()\n                     && null == newBundle.getBundleManifest().getSymbolicName()\n                     && Version.emptyVersion.equals(newBundle.getBundleManifest().getVersion())) {",
                "deletions": 0
            }
        ]
    },
    {
        "repo": "aries",
        "message": "[SPI Fly] Fix for NPE.\n\nUnit test included.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/aries/trunk@1566678 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/aries/commit/e53efdd282b4107f5c7c4803d0a2b159dcc12f35",
        "parent": "https://github.com/apache/aries/commit/c78de942cb826ed9c8913ec024cb06d790692906",
        "bug_id": "aries_26",
        "file": [
            {
                "sha": "087344d04f46b896656ba0c8626a9c0666567421",
                "filename": "spi-fly/spi-fly-core/src/main/java/org/apache/aries/spifly/Util.java",
                "blob_url": "https://github.com/apache/aries/blob/e53efdd282b4107f5c7c4803d0a2b159dcc12f35/spi-fly/spi-fly-core/src/main/java/org/apache/aries/spifly/Util.java",
                "raw_url": "https://github.com/apache/aries/raw/e53efdd282b4107f5c7c4803d0a2b159dcc12f35/spi-fly/spi-fly-core/src/main/java/org/apache/aries/spifly/Util.java",
                "status": "modified",
                "changes": 5,
                "additions": 5,
                "contents_url": "https://api.github.com/repos/apache/aries/contents/spi-fly/spi-fly-core/src/main/java/org/apache/aries/spifly/Util.java?ref=e53efdd282b4107f5c7c4803d0a2b159dcc12f35",
                "patch": "@@ -72,6 +72,11 @@ public Void run() {\n     }\r\n \r\n     public static void fixContextClassloader(String cls, String method, Class<?> clsArg, ClassLoader bundleLoader) {\r\n+        if (BaseActivator.activator == null) {\r\n+            // The system is not yet initialized. We can't do anything.\r\n+            return;\r\n+        }\r\n+\r\n         if (!(bundleLoader instanceof BundleReference)) {\r\n             BaseActivator.activator.log(LogService.LOG_WARNING, \"Classloader of consuming bundle doesn't implement BundleReference: \" + bundleLoader);\r\n             return;\r",
                "deletions": 0
            },
            {
                "sha": "c06b7a27459d4283b0657e172520f7ca6c43818f",
                "filename": "spi-fly/spi-fly-core/src/test/java/org/apache/aries/spifly/UtilTest.java",
                "blob_url": "https://github.com/apache/aries/blob/e53efdd282b4107f5c7c4803d0a2b159dcc12f35/spi-fly/spi-fly-core/src/test/java/org/apache/aries/spifly/UtilTest.java",
                "raw_url": "https://github.com/apache/aries/raw/e53efdd282b4107f5c7c4803d0a2b159dcc12f35/spi-fly/spi-fly-core/src/test/java/org/apache/aries/spifly/UtilTest.java",
                "status": "modified",
                "changes": 33,
                "additions": 33,
                "contents_url": "https://api.github.com/repos/apache/aries/contents/spi-fly/spi-fly-core/src/test/java/org/apache/aries/spifly/UtilTest.java?ref=e53efdd282b4107f5c7c4803d0a2b159dcc12f35",
                "patch": "@@ -102,6 +102,39 @@ public void start(BundleContext context) throws Exception {\n         assertSame(providerCL, Thread.currentThread().getContextClassLoader());\r\n     }\r\n \r\n+    @Test\r\n+    public void testNotInitialized() throws Exception {\r\n+        BaseActivator.activator = null;\r\n+\r\n+        URL url = getClass().getResource(\"/embedded3.jar\");\r\n+        assertNotNull(\"precondition\", url);\r\n+\r\n+        Bundle providerBundle = EasyMock.createMock(Bundle.class);\r\n+        final ClassLoader providerCL = new TestBundleClassLoader(new URL [] {url}, getClass().getClassLoader(), providerBundle);\r\n+        EasyMock.expect(providerBundle.getBundleId()).andReturn(42L).anyTimes();\r\n+        EasyMock.expect(providerBundle.getEntryPaths((String) EasyMock.anyObject())).andReturn(null).anyTimes();\r\n+        Dictionary<String, String> providerHeaders = new Hashtable<String, String>();\r\n+        providerHeaders.put(Constants.BUNDLE_CLASSPATH, \".,embedded3.jar\");\r\n+        EasyMock.expect(providerBundle.getHeaders()).andReturn(providerHeaders).anyTimes();\r\n+        EasyMock.expect(providerBundle.getResource(\"embedded3.jar\")).andReturn(url).anyTimes();\r\n+        EasyMock.expect(providerBundle.loadClass((String) EasyMock.anyObject())).andAnswer(new IAnswer<Class<?>>() {\r\n+            @Override\r\n+            public Class<?> answer() throws Throwable {\r\n+                return providerCL.loadClass((String) EasyMock.getCurrentArguments()[0]);\r\n+            }\r\n+        }).anyTimes();\r\n+        EasyMock.replay(providerBundle);\r\n+\r\n+        Bundle clientBundle = EasyMock.createMock(Bundle.class);\r\n+        EasyMock.replay(clientBundle);\r\n+        ClassLoader clientCL = new TestBundleClassLoader(new URL [] {}, getClass().getClassLoader(), clientBundle);\r\n+\r\n+        Thread.currentThread().setContextClassLoader(null);\r\n+        Util.fixContextClassloader(ServiceLoader.class.getName(), \"load\", MySPI.class, clientCL);\r\n+        assertSame(\"The system is not yet initialized, so the TCCL should not be set\",\r\n+                null, Thread.currentThread().getContextClassLoader());\r\n+    }\r\n+\r\n     private static class TestBundleClassLoader extends URLClassLoader implements BundleReference {\r\n         private final Bundle bundle;\r\n \r",
                "deletions": 0
            }
        ]
    },
    {
        "repo": "aries",
        "message": "Aries-1085: Rare NPE in jndi ContextHelper.getInitialContextUsingBuilder() - small extra diagnostic. \n\ngit-svn-id: https://svn.apache.org/repos/asf/aries/trunk@1497298 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/aries/commit/30e51d2e8442755e4429422aa917d8040edf294b",
        "parent": "https://github.com/apache/aries/commit/7802777b196e1be247a5050549665f9f41f921b8",
        "bug_id": "aries_27",
        "file": [
            {
                "sha": "e476ba4809775f11a0b455488c08c191347e3a35",
                "filename": "jndi/jndi-core/src/main/java/org/apache/aries/jndi/ContextHelper.java",
                "blob_url": "https://github.com/apache/aries/blob/30e51d2e8442755e4429422aa917d8040edf294b/jndi/jndi-core/src/main/java/org/apache/aries/jndi/ContextHelper.java",
                "raw_url": "https://github.com/apache/aries/raw/30e51d2e8442755e4429422aa917d8040edf294b/jndi/jndi-core/src/main/java/org/apache/aries/jndi/ContextHelper.java",
                "status": "modified",
                "changes": 7,
                "additions": 7,
                "contents_url": "https://api.github.com/repos/apache/aries/contents/jndi/jndi-core/src/main/java/org/apache/aries/jndi/ContextHelper.java?ref=30e51d2e8442755e4429422aa917d8040edf294b",
                "patch": "@@ -21,6 +21,8 @@\n import java.security.AccessController;\n import java.security.PrivilegedAction;\n import java.util.Hashtable;\n+import java.util.logging.Level;\n+import java.util.logging.Logger;\n \n import javax.naming.Context;\n import javax.naming.NamingException;\n@@ -210,6 +212,8 @@ public static ContextProvider getContextProvider(BundleContext context,\n         return provider;\n     }\n \n+    private static final Logger logger = Logger.getLogger(ContextHelper.class.getName());\n+    \n     private static ContextProvider getInitialContextUsingBuilder(BundleContext context,\n                                                                  Hashtable<?, ?> environment)\n             throws NamingException {\n@@ -230,6 +234,9 @@ private static ContextProvider getInitialContextUsingBuilder(BundleContext conte\n                 } catch (NamingException ne) {\n                   // TODO: log\n                   // ignore this, if the builder fails we want to move onto the next one\n+                } catch (NullPointerException npe) { \n+                \tlogger.log(Level.SEVERE,  \"NPE caught in ContextHelper.getInitialContextUsingBuilder. context=\" + context + \" ref=\" + ref);\n+                \tthrow npe;\n                 }\n                 \n                 if (factory != null) {",
                "deletions": 0
            }
        ]
    },
    {
        "repo": "aries",
        "message": "Fix for a NPE exposed by the TCK.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/aries/trunk@1236761 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/aries/commit/859777b4cf5a56cab78b07cd4cd1c5550d1b8ba4",
        "parent": "https://github.com/apache/aries/commit/1e936b6bb9655fe87f461b4832dd7240be9c8de5",
        "bug_id": "aries_28",
        "file": [
            {
                "sha": "8723802d8dc27b28e324299d2c2b314cb3d134fb",
                "filename": "sandbox/jmx-next/jmx-core/src/main/java/org/apache/aries/jmx/framework/wiring/BundleWiringState.java",
                "blob_url": "https://github.com/apache/aries/blob/859777b4cf5a56cab78b07cd4cd1c5550d1b8ba4/sandbox/jmx-next/jmx-core/src/main/java/org/apache/aries/jmx/framework/wiring/BundleWiringState.java",
                "raw_url": "https://github.com/apache/aries/raw/859777b4cf5a56cab78b07cd4cd1c5550d1b8ba4/sandbox/jmx-next/jmx-core/src/main/java/org/apache/aries/jmx/framework/wiring/BundleWiringState.java",
                "status": "modified",
                "changes": 3,
                "additions": 3,
                "contents_url": "https://api.github.com/repos/apache/aries/contents/sandbox/jmx-next/jmx-core/src/main/java/org/apache/aries/jmx/framework/wiring/BundleWiringState.java?ref=859777b4cf5a56cab78b07cd4cd1c5550d1b8ba4",
                "patch": "@@ -113,6 +113,9 @@ public TabularData getCurrentWiringClosure(long rootBundleId, String namespace)\n     private void populateTransitiveRevisions(String namespace, BundleRevision rootRevision, Map<BundleRevision, Integer> allRevisions) {\n         allRevisions.put(rootRevision, System.identityHashCode(rootRevision));\n         BundleWiring wiring = rootRevision.getWiring();\n+        if (wiring == null)\n+            return;\n+\n         List<BundleWire> wires = wiring.getRequiredWires(namespace);\n         for (BundleWire wire : wires) {\n             BundleRevision revision = wire.getCapability().getRevision();",
                "deletions": 0
            }
        ]
    },
    {
        "repo": "aries",
        "message": "[ARIES-788] Possible NPE when destryoing the extender\n\ngit-svn-id: https://svn.apache.org/repos/asf/aries/trunk@1205865 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/aries/commit/1fc96c6f12491b02bd1da8ebb42b07e0c173ee7d",
        "parent": "https://github.com/apache/aries/commit/a11c0a3ab6421d5122136e7a5364cf8f5b997cc2",
        "bug_id": "aries_29",
        "file": [
            {
                "sha": "72886a534a99bc01e5fa3ecf48c4590e3c75c2ed",
                "filename": "blueprint/blueprint-core/src/main/java/org/apache/aries/blueprint/container/BlueprintExtender.java",
                "blob_url": "https://github.com/apache/aries/blob/1fc96c6f12491b02bd1da8ebb42b07e0c173ee7d/blueprint/blueprint-core/src/main/java/org/apache/aries/blueprint/container/BlueprintExtender.java",
                "raw_url": "https://github.com/apache/aries/raw/1fc96c6f12491b02bd1da8ebb42b07e0c173ee7d/blueprint/blueprint-core/src/main/java/org/apache/aries/blueprint/container/BlueprintExtender.java",
                "status": "modified",
                "changes": 4,
                "additions": 2,
                "contents_url": "https://api.github.com/repos/apache/aries/contents/blueprint/blueprint-core/src/main/java/org/apache/aries/blueprint/container/BlueprintExtender.java?ref=1fc96c6f12491b02bd1da8ebb42b07e0c173ee7d",
                "patch": "@@ -25,10 +25,10 @@\n import java.util.Collections;\n import java.util.Comparator;\n import java.util.Enumeration;\n-import java.util.HashMap;\n import java.util.Hashtable;\n import java.util.List;\n import java.util.Map;\n+import java.util.concurrent.ConcurrentHashMap;\n import java.util.concurrent.Executors;\n import java.util.concurrent.ScheduledExecutorService;\n \n@@ -92,7 +92,7 @@ public ScheduledExecutorService create(String name)\n           }\n         });\n         eventDispatcher = new BlueprintEventDispatcher(ctx, executors);\n-        containers = new HashMap<Bundle, BlueprintContainerImpl>();\n+        containers = new ConcurrentHashMap<Bundle, BlueprintContainerImpl>();\n \n         int stateMask = Bundle.INSTALLED | Bundle.RESOLVED | Bundle.STARTING | Bundle.ACTIVE\n         | Bundle.STOPPING;",
                "deletions": 2
            }
        ]
    },
    {
        "repo": "aries",
        "message": "[ARIES-788] Possible NPE when destroying the blueprint container\n\ngit-svn-id: https://svn.apache.org/repos/asf/aries/trunk@1204935 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/aries/commit/229bbf957b2a198b8dbf765d58126c232d2eb0ae",
        "parent": "https://github.com/apache/aries/commit/5b003ff3249a72c019799f5f42b4ca038e4d4b8e",
        "bug_id": "aries_30",
        "file": [
            {
                "sha": "3f20b00c30d3b038754138d7c96c73b8edac8ace",
                "filename": "blueprint/blueprint-core/src/main/java/org/apache/aries/blueprint/container/ReferenceListRecipe.java",
                "blob_url": "https://github.com/apache/aries/blob/229bbf957b2a198b8dbf765d58126c232d2eb0ae/blueprint/blueprint-core/src/main/java/org/apache/aries/blueprint/container/ReferenceListRecipe.java",
                "raw_url": "https://github.com/apache/aries/raw/229bbf957b2a198b8dbf765d58126c232d2eb0ae/blueprint/blueprint-core/src/main/java/org/apache/aries/blueprint/container/ReferenceListRecipe.java",
                "status": "modified",
                "changes": 9,
                "additions": 8,
                "contents_url": "https://api.github.com/repos/apache/aries/contents/blueprint/blueprint-core/src/main/java/org/apache/aries/blueprint/container/ReferenceListRecipe.java?ref=229bbf957b2a198b8dbf765d58126c232d2eb0ae",
                "patch": "@@ -184,10 +184,17 @@ public ServiceDispatcher(ServiceReference reference) throws Exception {\n \n         public synchronized void destroy() {\n             if (reference != null) {\n-                reference.getBundle().getBundleContext().ungetService(reference);\n+                ServiceReference ref = reference;\n                 reference = null;\n                 service = null;\n                 proxy = null;\n+                Bundle bundle = ref.getBundle();\n+                if (bundle != null) {\n+                    BundleContext ctx = bundle.getBundleContext();\n+                    if (ctx != null) {\n+                        ctx.ungetService(reference);\n+                    }\n+                }\n             }\n         }\n ",
                "deletions": 1
            }
        ]
    },
    {
        "repo": "aries",
        "message": "ARIES-718: Avoid NPEs when getting ClassLoaders for null bundles\n\ngit-svn-id: https://svn.apache.org/repos/asf/aries/trunk@1161590 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/aries/commit/94081457e5a22964292ad8e19797bae9dcb02af3",
        "parent": "https://github.com/apache/aries/commit/ad30d5aa374655a7164b775bd2bef084d245b5f0",
        "bug_id": "aries_31",
        "file": [
            {
                "sha": "ac66bd09d737e62c49cd107d39b581177333847a",
                "filename": "util/src/main/java/org/apache/aries/util/AriesFrameworkUtil.java",
                "blob_url": "https://github.com/apache/aries/blob/94081457e5a22964292ad8e19797bae9dcb02af3/util/src/main/java/org/apache/aries/util/AriesFrameworkUtil.java",
                "raw_url": "https://github.com/apache/aries/raw/94081457e5a22964292ad8e19797bae9dcb02af3/util/src/main/java/org/apache/aries/util/AriesFrameworkUtil.java",
                "status": "modified",
                "changes": 4,
                "additions": 3,
                "contents_url": "https://api.github.com/repos/apache/aries/contents/util/src/main/java/org/apache/aries/util/AriesFrameworkUtil.java?ref=94081457e5a22964292ad8e19797bae9dcb02af3",
                "patch": "@@ -52,7 +52,7 @@\n    */\n   public static ClassLoader getClassLoader(Bundle b)\n   {\n-    if (b.getState() != Bundle.UNINSTALLED && b.getState() != Bundle.INSTALLED) {\n+    if (b != null && b.getState() != Bundle.UNINSTALLED && b.getState() != Bundle.INSTALLED) {\n       return worker.getClassLoader(b);\n     } else {\n       return null;\n@@ -86,6 +86,8 @@ private static boolean isEquinox(String bundleClassName)\n    */\n   public static ClassLoader getClassLoaderForced(Bundle b)\n   {\n+    if (b == null)\n+      return null;\n     try {\n       b.loadClass(\"java.lang.Object\");\n     } catch (ClassNotFoundException e) {",
                "deletions": 1
            }
        ]
    },
    {
        "repo": "aries",
        "message": "ARIES-726: Don't expose Equinox NPE\n\ngit-svn-id: https://svn.apache.org/repos/asf/aries/trunk@1157163 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/aries/commit/618df66b09a8ccdb63d911da829b0f223f2c8670",
        "parent": "https://github.com/apache/aries/commit/94ad4b4a22e0ea733da8779c3b23e159e43a9d27",
        "bug_id": "aries_32",
        "file": [
            {
                "sha": "ee5c7b41a95d2a331a17bc9c0db5ead7fad846fd",
                "filename": "application/application-itests/src/test/java/org/apache/aries/application/runtime/itests/IsolatedRuntimeTest.java",
                "blob_url": "https://github.com/apache/aries/blob/618df66b09a8ccdb63d911da829b0f223f2c8670/application/application-itests/src/test/java/org/apache/aries/application/runtime/itests/IsolatedRuntimeTest.java",
                "raw_url": "https://github.com/apache/aries/raw/618df66b09a8ccdb63d911da829b0f223f2c8670/application/application-itests/src/test/java/org/apache/aries/application/runtime/itests/IsolatedRuntimeTest.java",
                "status": "modified",
                "changes": 68,
                "additions": 66,
                "contents_url": "https://api.github.com/repos/apache/aries/contents/application/application-itests/src/test/java/org/apache/aries/application/runtime/itests/IsolatedRuntimeTest.java?ref=618df66b09a8ccdb63d911da829b0f223f2c8670",
                "patch": "@@ -21,13 +21,15 @@\n import static org.junit.Assert.assertEquals;\n import static org.junit.Assert.assertNotNull;\n import static org.junit.Assert.assertNull;\n+import static org.junit.Assert.assertTrue;\n import static org.ops4j.pax.exam.CoreOptions.equinox;\n import static org.ops4j.pax.exam.container.def.PaxRunnerOptions.repository;\n \n import static org.apache.aries.itest.ExtraOptions.*;\n \n import java.io.File;\n import java.io.FileOutputStream;\n+import java.util.concurrent.atomic.AtomicBoolean;\n \n import org.apache.aries.application.management.AriesApplication;\n import org.apache.aries.application.management.AriesApplicationContext;\n@@ -49,6 +51,10 @@\n import org.junit.runner.RunWith;\n import org.ops4j.pax.exam.Option;\n import org.ops4j.pax.exam.junit.JUnit4TestRunner;\n+import org.osgi.framework.Bundle;\n+import org.osgi.framework.BundleEvent;\n+import org.osgi.framework.SynchronousBundleListener;\n+import org.osgi.service.framework.CompositeBundle;\n \n @RunWith(JUnit4TestRunner.class)\n public class IsolatedRuntimeTest extends AbstractIntegrationTest {\n@@ -67,14 +73,26 @@ public static void createApplications() throws Exception {\n       .jar(\"sample.jar\")\n         .manifest().symbolicName(\"org.apache.aries.isolated.sample\")\n           .attribute(\"Bundle-Version\", \"1.0.0\")\n-          .attribute(\"Import-Package\", \"org.osgi.service.blueprint\")\n+          .attribute(\"Import-Package\", \"org.osgi.service.blueprint, org.apache.aries.isolated.shared\")\n+          // needed for testFrameworkResolvedBeforeInnerBundlesStart()\n+          .attribute(\"Bundle-ActivationPolicy\", \"lazy\")\n           .end()\n         .binary(\"org/apache/aries/isolated/sample/HelloWorld.class\", \n             IsolatedRuntimeTest.class.getClassLoader().getResourceAsStream(\"org/apache/aries/isolated/sample/HelloWorld.class\"))\n         .binary(\"org/apache/aries/isolated/sample/HelloWorldImpl.class\", \n             IsolatedRuntimeTest.class.getClassLoader().getResourceAsStream(\"org/apache/aries/isolated/sample/HelloWorldImpl.class\"))\n+        .binary(\"org/apache/aries/isolated/sample/SharedImpl.class\", \n+            IsolatedRuntimeTest.class.getClassLoader().getResourceAsStream(\"org/apache/aries/isolated/sample/SharedImpl.class\"))\n         .binary(\"OSGI-INF/blueprint/sample-blueprint.xml\", \n             IsolatedRuntimeTest.class.getClassLoader().getResourceAsStream(\"isolated/sample-blueprint.xml\"))\n+        .end()\n+      .jar(\"shared.jar\")\n+        .manifest().symbolicName(\"org.apache.aries.isolated.shared\")\n+          .attribute(\"Bundle-Version\", \"1.0.0\")\n+          .attribute(\"Export-Package\", \"org.apache.aries.isolated.shared\")\n+        .end()\n+        .binary(\"org/apache/aries/isolated/shared/Shared.class\",\n+            IsolatedRuntimeTest.class.getClassLoader().getResourceAsStream(\"org/apache/aries/isolated/shared/Shared.class\"))\n         .end();\n       \n     FileOutputStream fout = new FileOutputStream(\"test.eba\");\n@@ -227,7 +245,53 @@ public VersionRange getVersionRange() {\n     manager.uninstall(ctx);\n   }  \n   \n-\n+  @Test\n+  public void testFrameworkResolvedBeforeInnerBundlesStart() throws Exception {\n+      /*\n+       * Lazy bundles have in the past triggered recursive bundle trackers to handle them before\n+       * the composite bundle framework was even resolved. In such a case the below loadClass\n+       * operation on a class that depends on a class imported from the outside of the composite \n+       * will fail with an NPE.\n+       */\n+      \n+      final AtomicBoolean loadedClass = new AtomicBoolean(false);\n+      \n+      context().addBundleListener(new SynchronousBundleListener() {\n+        public void bundleChanged(BundleEvent event) {\n+            Bundle b = event.getBundle();\n+            if (event.getType() == BundleEvent.STARTING || event.getType() == BundleEvent.LAZY_ACTIVATION) {\n+                if (b.getEntry(\"org/apache/aries/isolated/sample/SharedImpl.class\") != null) {\n+                    try {\n+                        Class<?> cl = b.loadClass(\"org.apache.aries.isolated.sample.SharedImpl\");\n+                        cl.newInstance();\n+                        loadedClass.set(true);\n+                    } catch (Exception e) {\n+                        e.printStackTrace();\n+                        throw new RuntimeException(e);\n+                    }\n+                }\n+            } else if (event.getType() == BundleEvent.INSTALLED && b instanceof CompositeBundle) {\n+                ((CompositeBundle) b).getCompositeFramework().getBundleContext().addBundleListener(this);\n+            }\n+        }\n+    });\n+      \n+    AriesApplicationManager manager = context().getService(AriesApplicationManager.class);\n+    AriesApplication app = manager.createApplication(FileSystem.getFSRoot(new File(\"test2.eba\")));\n+    AriesApplicationContext ctx = manager.install(app);      \n+    \n+    try {\n+        ctx.start();\n+        \n+        app = ctx.getApplication();\n+        assertEquals(1, app.getDeploymentMetadata().getApplicationDeploymentContents().size());\n+        assertEquals(1, app.getDeploymentMetadata().getApplicationProvisionBundles().size());\n+        assertTrue(loadedClass.get());\n+    } finally {\n+        manager.uninstall(ctx);\n+    }\n+  }\n+  \n   private void assertHelloWorldService(String appName) throws Exception\n   {\n     assertHelloWorldService(appName, \"hello world\");",
                "deletions": 2
            },
            {
                "sha": "e511b1158be28326ca43d0c750f4d5dbffd1f4f1",
                "filename": "application/application-itests/src/test/java/org/apache/aries/isolated/sample/SharedImpl.java",
                "blob_url": "https://github.com/apache/aries/blob/618df66b09a8ccdb63d911da829b0f223f2c8670/application/application-itests/src/test/java/org/apache/aries/isolated/sample/SharedImpl.java",
                "raw_url": "https://github.com/apache/aries/raw/618df66b09a8ccdb63d911da829b0f223f2c8670/application/application-itests/src/test/java/org/apache/aries/isolated/sample/SharedImpl.java",
                "status": "added",
                "changes": 25,
                "additions": 25,
                "contents_url": "https://api.github.com/repos/apache/aries/contents/application/application-itests/src/test/java/org/apache/aries/isolated/sample/SharedImpl.java?ref=618df66b09a8ccdb63d911da829b0f223f2c8670",
                "patch": "@@ -0,0 +1,25 @@\n+/*  Licensed to the Apache Software Foundation (ASF) under one or more\n+ *  contributor license agreements.  See the NOTICE file distributed with\n+ *  this work for additional information regarding copyright ownership.\n+ *  The ASF licenses this file to You under the Apache License, Version 2.0\n+ *  (the \"License\"); you may not use this file except in compliance with\n+ *  the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing, software\n+ *  distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *  See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ */\n+package org.apache.aries.isolated.sample;\n+\n+import org.apache.aries.isolated.shared.Shared;\n+\n+public class SharedImpl implements Shared {\n+\n+    @Override\n+    public void something() {}\n+\n+}",
                "deletions": 0
            },
            {
                "sha": "2a2b42d6b5869aa653aecc66defc8b57a303e5f0",
                "filename": "application/application-itests/src/test/java/org/apache/aries/isolated/shared/Shared.java",
                "blob_url": "https://github.com/apache/aries/blob/618df66b09a8ccdb63d911da829b0f223f2c8670/application/application-itests/src/test/java/org/apache/aries/isolated/shared/Shared.java",
                "raw_url": "https://github.com/apache/aries/raw/618df66b09a8ccdb63d911da829b0f223f2c8670/application/application-itests/src/test/java/org/apache/aries/isolated/shared/Shared.java",
                "status": "added",
                "changes": 20,
                "additions": 20,
                "contents_url": "https://api.github.com/repos/apache/aries/contents/application/application-itests/src/test/java/org/apache/aries/isolated/shared/Shared.java?ref=618df66b09a8ccdb63d911da829b0f223f2c8670",
                "patch": "@@ -0,0 +1,20 @@\n+/*  Licensed to the Apache Software Foundation (ASF) under one or more\n+ *  contributor license agreements.  See the NOTICE file distributed with\n+ *  this work for additional information regarding copyright ownership.\n+ *  The ASF licenses this file to You under the Apache License, Version 2.0\n+ *  (the \"License\"); you may not use this file except in compliance with\n+ *  the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing, software\n+ *  distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *  See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ */\n+package org.apache.aries.isolated.shared;\n+\n+public interface Shared {\n+    public void something();\n+}",
                "deletions": 0
            },
            {
                "sha": "35899ecb97ad3813ea9f3978812f6e4d95b8a531",
                "filename": "application/application-runtime-framework/src/main/java/org/apache/aries/application/runtime/framework/BundleFrameworkImpl.java",
                "blob_url": "https://github.com/apache/aries/blob/618df66b09a8ccdb63d911da829b0f223f2c8670/application/application-runtime-framework/src/main/java/org/apache/aries/application/runtime/framework/BundleFrameworkImpl.java",
                "raw_url": "https://github.com/apache/aries/raw/618df66b09a8ccdb63d911da829b0f223f2c8670/application/application-runtime-framework/src/main/java/org/apache/aries/application/runtime/framework/BundleFrameworkImpl.java",
                "status": "modified",
                "changes": 88,
                "additions": 86,
                "contents_url": "https://api.github.com/repos/apache/aries/contents/application/application-runtime-framework/src/main/java/org/apache/aries/application/runtime/framework/BundleFrameworkImpl.java?ref=618df66b09a8ccdb63d911da829b0f223f2c8670",
                "patch": "@@ -24,18 +24,23 @@\n \n import java.util.ArrayList;\n import java.util.List;\n+import java.util.concurrent.Semaphore;\n+import java.util.concurrent.TimeUnit;\n+import java.util.concurrent.atomic.AtomicBoolean;\n \n import org.apache.aries.application.management.AriesApplication;\n import org.apache.aries.application.management.spi.framework.BundleFramework;\n import org.apache.aries.application.management.spi.repository.BundleRepository.BundleSuggestion;\n-import org.eclipse.osgi.framework.internal.core.InternalSystemBundle;\n import org.osgi.framework.Bundle;\n import org.osgi.framework.BundleContext;\n import org.osgi.framework.BundleException;\n+import org.osgi.framework.FrameworkEvent;\n+import org.osgi.framework.FrameworkListener;\n+import org.osgi.framework.ServiceReference;\n import org.osgi.framework.launch.Framework;\n import org.osgi.service.framework.CompositeBundle;\n-import org.osgi.service.framework.SurrogateBundle;\n import org.osgi.service.packageadmin.PackageAdmin;\n+import org.osgi.service.startlevel.StartLevel;\n import org.osgi.util.tracker.ServiceTracker;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n@@ -49,6 +54,8 @@\n   Framework _framework;\n \n   ServiceTracker _packageAdminTracker;\n+  \n+  private final AtomicBoolean startLevelIncreased = new AtomicBoolean(false);\n \n   BundleFrameworkImpl(CompositeBundle cb)\n   {\n@@ -68,6 +75,11 @@ public void start() throws BundleException\n           PackageAdmin.class.getName(), null);\n       _packageAdminTracker.open();\n     }\n+    \n+    // make sure inner bundles are now startable\n+    if (startLevelIncreased.compareAndSet(false, true)) {\n+        increaseStartLevel(_compositeBundle.getCompositeFramework().getBundleContext());\n+    }\n   }\n   \n   @Override\n@@ -80,9 +92,81 @@ public void init() throws BundleException\n       _packageAdminTracker = new ServiceTracker(_compositeBundle.getCompositeFramework().getBundleContext(),\n           PackageAdmin.class.getName(), null);\n       _packageAdminTracker.open();\n+      \n+      setupStartLevelToPreventAutostart(_compositeBundle.getCompositeFramework().getBundleContext());\n+    }\n+  }\n+  \n+  /**\n+   * Name says it all if we don't make some adjustments bundles will be autostarted, which in the\n+   * grand scheme of things causes extenders to act on the inner bundles before the outer composite is even\n+   * resolved ...\n+   */\n+  private void setupStartLevelToPreventAutostart(BundleContext frameworkBundleContext)\n+  {\n+    ServiceReference ref = frameworkBundleContext.getServiceReference(StartLevel.class.getName());\n+    if (ref != null) {\n+      StartLevel sl = (StartLevel) frameworkBundleContext.getService(ref);\n+      if (sl != null) {\n+        // make sure new bundles are *not* automatically started (because that causes havoc)\n+        sl.setInitialBundleStartLevel(sl.getStartLevel()+1);\n+        frameworkBundleContext.ungetService(ref);\n+      }\n     }\n   }\n \n+  private void increaseStartLevel(BundleContext context) {\n+      /*\n+       * Algorithm for doing this\n+       * \n+       * 1. Set up a framework listener that will tell us when the start level has been set.\n+       * \n+       * 2. Change the start level. This is asynchronous so by the time the method returned the event \n+       *    could have been sent. This is why we set up the listener in step 1.\n+       * \n+       * 3. Wait until the start level has been set appropriately. At this stage all the bundles are startable\n+       *    and some have been started (most notably lazy activated bundles it appears). Other bundles are still\n+       *    in resolved state.\n+       */    \n+      \n+      ServiceReference ref = context.getServiceReference(StartLevel.class.getName());\n+      if (ref != null) {\n+        StartLevel sl = (StartLevel) context.getService(ref);\n+        if (sl != null) {\n+\n+          final Semaphore waitForStartLevelChangedEventToOccur = new Semaphore(0);\n+          \n+          // step 1\n+          FrameworkListener listener = new FrameworkListener() {\n+            public void frameworkEvent(FrameworkEvent event)\n+            {\n+              if (event.getType() == FrameworkEvent.STARTLEVEL_CHANGED) {\n+                waitForStartLevelChangedEventToOccur.release();\n+              }\n+            }\n+          };\n+          \n+          context.addFrameworkListener(listener);\n+          \n+          // step 2\n+          sl.setStartLevel(sl.getStartLevel()+1);\n+          \n+          // step 3\n+          try {\n+            if (!!!waitForStartLevelChangedEventToOccur.tryAcquire(60, TimeUnit.SECONDS)) {\n+              LOGGER.debug(\"Starting CBA child bundles took longer than 60 seconds\");\n+            }\n+          } catch (InterruptedException e) {\n+            // restore the interrupted status\n+            Thread.currentThread().interrupt();\n+          }\n+          \n+          context.removeFrameworkListener(listener);\n+        }\n+        context.ungetService(ref);\n+      }\n+  }\n+  \n   public void close() throws BundleException\n   {\n     // close out packageadmin service tracker",
                "deletions": 2
            }
        ]
    },
    {
        "repo": "aries",
        "message": "ARIES-526 Fix NPE when proxying for JDK defined classes\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/aries/trunk@1052392 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/aries/commit/46843bd25c7c7eb0db63f7fc0ce6c0725bd24b5c",
        "parent": "https://github.com/apache/aries/commit/9f53b8292380d859cb07fe71e9fddfdf7e55789e",
        "bug_id": "aries_33",
        "file": [
            {
                "sha": "d8f997e093a6bd341c6af88a44317f9aa04b3ea7",
                "filename": "blueprint/blueprint-core/src/main/java/org/apache/aries/blueprint/container/BeanRecipe.java",
                "blob_url": "https://github.com/apache/aries/blob/46843bd25c7c7eb0db63f7fc0ce6c0725bd24b5c/blueprint/blueprint-core/src/main/java/org/apache/aries/blueprint/container/BeanRecipe.java",
                "raw_url": "https://github.com/apache/aries/raw/46843bd25c7c7eb0db63f7fc0ce6c0725bd24b5c/blueprint/blueprint-core/src/main/java/org/apache/aries/blueprint/container/BeanRecipe.java",
                "status": "modified",
                "changes": 7,
                "additions": 6,
                "contents_url": "https://api.github.com/repos/apache/aries/contents/blueprint/blueprint-core/src/main/java/org/apache/aries/blueprint/container/BeanRecipe.java?ref=46843bd25c7c7eb0db63f7fc0ce6c0725bd24b5c",
                "patch": "@@ -680,7 +680,12 @@ private Object addInterceptors(final Object original)\n         List<Interceptor> interceptors = reg.getInterceptors(interceptorLookupKey);\n         if (interceptors != null && interceptors.size() > 0) {\n             try {\n-              intercepted = BlueprintExtender.getProxyManager().createProxy(FrameworkUtil.getBundle(original.getClass()), \n+              Bundle b = FrameworkUtil.getBundle(original.getClass());\n+              if (b == null) {\n+                // we have a class from the framework parent, so use our bundle for proxying.\n+                b = blueprintContainer.getBundleContext().getBundle();\n+              }\n+              intercepted = BlueprintExtender.getProxyManager().createProxy(b, \n                   ProxyUtils.asList(original.getClass()), ProxyUtils.passThrough(original), \n                   new Collaborator(interceptorLookupKey, interceptors));\n             } catch (org.apache.aries.proxy.UnableToProxyException e) {",
                "deletions": 1
            },
            {
                "sha": "d64270c5e18467204ae93762c55976fa45007f93",
                "filename": "blueprint/blueprint-core/src/main/java/org/apache/aries/blueprint/container/ServiceRecipe.java",
                "blob_url": "https://github.com/apache/aries/blob/46843bd25c7c7eb0db63f7fc0ce6c0725bd24b5c/blueprint/blueprint-core/src/main/java/org/apache/aries/blueprint/container/ServiceRecipe.java",
                "raw_url": "https://github.com/apache/aries/raw/46843bd25c7c7eb0db63f7fc0ce6c0725bd24b5c/blueprint/blueprint-core/src/main/java/org/apache/aries/blueprint/container/ServiceRecipe.java",
                "status": "modified",
                "changes": 7,
                "additions": 6,
                "contents_url": "https://api.github.com/repos/apache/aries/contents/blueprint/blueprint-core/src/main/java/org/apache/aries/blueprint/container/ServiceRecipe.java?ref=46843bd25c7c7eb0db63f7fc0ce6c0725bd24b5c",
                "patch": "@@ -449,6 +449,10 @@ public Object getService(Bundle bundle, ServiceRegistration registration) {\n             Object intercepted;\n             try {\n                 Bundle b = FrameworkUtil.getBundle(original.getClass());\n+                if (b == null) {\n+                  // we have a class from the framework parent, so use our bundle for proxying.\n+                  b = blueprintContainer.getBundleContext().getBundle();\n+                }\n                 Callable<Object> target = ProxyUtils.passThrough(original);\n                 InvocationHandlerWrapper collaborator = new Collaborator(cm, interceptors);\n                 try {\n@@ -464,7 +468,8 @@ public Object getService(Bundle bundle, ServiceRegistration registration) {\n                         classes, target, collaborator);\n                 }\n             } catch (Throwable u) {\n-                LOGGER.info(\"A problem occurred trying to create a proxy object. Returning the original object instead.\", u);\n+                Bundle b = blueprintContainer.getBundleContext().getBundle();\n+                LOGGER.info(\"Unable to create a proxy object for the service \" + getName() + \" defined in bundle \" + b.getSymbolicName() + \" at version \" + b.getVersion() + \" with id \" + b.getBundleId() + \". Returning the original object instead.\", u);\n                 LOGGER.debug(LOG_EXIT, \"getService\", original);\n                 return original;\n             }",
                "deletions": 1
            }
        ]
    },
    {
        "repo": "aries",
        "message": "ARIES-473: NPE in BPQuiesceParticipart\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/aries/trunk@1028650 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/aries/commit/82d9e732c0fc86803a7515a7127ad033eeb1c4c7",
        "parent": "https://github.com/apache/aries/commit/322f8ae89691bacb9cc5cdf2104f4b137f4b6148",
        "bug_id": "aries_34",
        "file": [
            {
                "sha": "791cb0d2c5b1792aca387a83fdc84919105271af",
                "filename": "blueprint/blueprint-core/pom.xml",
                "blob_url": "https://github.com/apache/aries/blob/82d9e732c0fc86803a7515a7127ad033eeb1c4c7/blueprint/blueprint-core/pom.xml",
                "raw_url": "https://github.com/apache/aries/raw/82d9e732c0fc86803a7515a7127ad033eeb1c4c7/blueprint/blueprint-core/pom.xml",
                "status": "modified",
                "changes": 4,
                "additions": 4,
                "contents_url": "https://api.github.com/repos/apache/aries/contents/blueprint/blueprint-core/pom.xml?ref=82d9e732c0fc86803a7515a7127ad033eeb1c4c7",
                "patch": "@@ -104,6 +104,10 @@\n       \t<version>0.3-incubating-SNAPSHOT</version>\n       \t<scope>provided</scope>\n       </dependency>\n+      <dependency>\n+        <groupId>org.apache.aries.testsupport</groupId>\n+        <artifactId>org.apache.aries.testsupport.unit</artifactId>\n+      </dependency>            \n   </dependencies>\n \n     <build>",
                "deletions": 0
            },
            {
                "sha": "bace44e9de1622fd3796b01de63128f3c3694bff",
                "filename": "blueprint/blueprint-core/src/main/java/org/apache/aries/blueprint/container/BlueprintQuiesceParticipant.java",
                "blob_url": "https://github.com/apache/aries/blob/82d9e732c0fc86803a7515a7127ad033eeb1c4c7/blueprint/blueprint-core/src/main/java/org/apache/aries/blueprint/container/BlueprintQuiesceParticipant.java",
                "raw_url": "https://github.com/apache/aries/raw/82d9e732c0fc86803a7515a7127ad033eeb1c4c7/blueprint/blueprint-core/src/main/java/org/apache/aries/blueprint/container/BlueprintQuiesceParticipant.java",
                "status": "modified",
                "changes": 53,
                "additions": 30,
                "contents_url": "https://api.github.com/repos/apache/aries/contents/blueprint/blueprint-core/src/main/java/org/apache/aries/blueprint/container/BlueprintQuiesceParticipant.java?ref=82d9e732c0fc86803a7515a7127ad033eeb1c4c7",
                "patch": "@@ -37,8 +37,8 @@\n \n public class BlueprintQuiesceParticipant implements QuiesceParticipant \n {\n-\tprivate BundleContext ctx;\n-\tprivate BlueprintExtender extender;\n+\tprivate final BundleContext ctx;\n+\tprivate final BlueprintExtender extender;\n \t\n \tpublic BlueprintQuiesceParticipant(BundleContext context, BlueprintExtender extender)\n \t{\n@@ -83,8 +83,8 @@ public void quiesce(QuiesceCallback callback, List<Bundle> bundlesToQuiesce)\n \t{\n \t\t/** The bundle being quiesced */\n \t\tprivate final Bundle bundleToQuiesce;\n-\t\tprivate QuiesceCallback callback;\n-\t\tprivate BlueprintExtender extender;\n+\t\tprivate final QuiesceCallback callback;\n+\t\tprivate final BlueprintExtender extender;\n \t\t\n \t\tpublic QuiesceBundle(QuiesceCallback callback, Bundle bundleToQuiesce, \n \t\t\t\tBlueprintExtender extender) \n@@ -99,24 +99,31 @@ public void run()\n \t\t{\n \t\t\tBlueprintContainerImpl container = extender.getBlueprintContainerImpl(bundleToQuiesce);\n \t\t\t\t\t\t\n-\t\t\tBlueprintRepository repository = container.getRepository();\n-\t\t\tSet<String> names = repository.getNames();\n-\t\t\tcontainer.quiesce();\n-\t\t\tboolean hasServices = false;\n-\t\t\t\n-\t\t\tfor (String name: names)\n-\t\t\t{\n-\t\t\t\tRecipe recipe = repository.getRecipe(name);\n-\t\t\t\tif (recipe instanceof ServiceRecipe)\n-\t\t\t\t{\n-\t\t\t\t\thasServices = true;\n-\t\t\t\t\t((ServiceRecipe)recipe).quiesce(new QuiesceDelegatingCallback(callback, bundleToQuiesce));\n-\t\t\t\t}\n-\t\t\t}\n-\t\t\t//If the bundle has no services we can quiesce immediately\n-\t\t\tif (!hasServices)\n-\t\t\t{\n-\t\t\t\tcallback.bundleQuiesced(bundleToQuiesce);\n+\t\t\t// have we got an actual blueprint bundle\n+\t\t\tif (container != null) {\n+  \t\t\tBlueprintRepository repository = container.getRepository();\n+  \t\t\tSet<String> names = repository.getNames();\n+  \t\t\tcontainer.quiesce();\n+  \t\t\tboolean hasServices = false;\n+  \t\t\t\n+  \t\t\tfor (String name: names)\n+  \t\t\t{\n+  \t\t\t\tRecipe recipe = repository.getRecipe(name);\n+  \t\t\t\tif (recipe instanceof ServiceRecipe)\n+  \t\t\t\t{\n+  \t\t\t\t\thasServices = true;\n+  \t\t\t\t\t((ServiceRecipe)recipe).quiesce(new QuiesceDelegatingCallback(callback, bundleToQuiesce));\n+  \t\t\t\t}\n+  \t\t\t}\n+  \t\t\t//If the bundle has no services we can quiesce immediately\n+  \t\t\tif (!hasServices)\n+  \t\t\t{\n+  \t\t\t\tcallback.bundleQuiesced(bundleToQuiesce);\n+  \t\t\t}\n+\t\t\t} else {\n+\t\t\t  // for non-Blueprint bundles just call return completed\n+\t\t\t  \n+\t\t\t  callback.bundleQuiesced(bundleToQuiesce);\n \t\t\t}\n \t\t}\n \t}\n@@ -134,7 +141,7 @@ public void run()\n \t  /** The single bundle being quiesced by this DestroyCallback */\n \t  private final Bundle toQuiesce;\n \t\n-\t  private Set<String> services = new HashSet<String>();\n+\t  private final Set<String> services = new HashSet<String>();\n \t    \n \t  public QuiesceDelegatingCallback(QuiesceCallback cbk, Bundle b) \n \t  {",
                "deletions": 23
            },
            {
                "sha": "6fe49b552186a8964cc994de6da2e638e7a5fa4c",
                "filename": "blueprint/blueprint-core/src/test/java/org/apache/aries/blueprint/container/BPQuiesceTest.java",
                "blob_url": "https://github.com/apache/aries/blob/82d9e732c0fc86803a7515a7127ad033eeb1c4c7/blueprint/blueprint-core/src/test/java/org/apache/aries/blueprint/container/BPQuiesceTest.java",
                "raw_url": "https://github.com/apache/aries/raw/82d9e732c0fc86803a7515a7127ad033eeb1c4c7/blueprint/blueprint-core/src/test/java/org/apache/aries/blueprint/container/BPQuiesceTest.java",
                "status": "added",
                "changes": 63,
                "additions": 63,
                "contents_url": "https://api.github.com/repos/apache/aries/contents/blueprint/blueprint-core/src/test/java/org/apache/aries/blueprint/container/BPQuiesceTest.java?ref=82d9e732c0fc86803a7515a7127ad033eeb1c4c7",
                "patch": "@@ -0,0 +1,63 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.aries.blueprint.container;\n+\n+import java.util.Arrays;\n+import java.util.concurrent.Semaphore;\n+import java.util.concurrent.TimeUnit;\n+\n+import org.apache.aries.quiesce.manager.QuiesceCallback;\n+import org.apache.aries.unittest.mocks.MethodCall;\n+import org.apache.aries.unittest.mocks.Skeleton;\n+import org.junit.Test;\n+import org.osgi.framework.Bundle;\n+import org.osgi.framework.BundleContext;\n+\n+import static junit.framework.Assert.*;\n+\n+public class BPQuiesceTest {\n+  @Test\n+  public void canQuiesceNoBPBundle() throws Exception {\n+    BundleContext ctx = Skeleton.newMock(BundleContext.class);\n+    Bundle bpBundle = Skeleton.newMock(Bundle.class);\n+    Bundle testBundle = Skeleton.newMock(Bundle.class);\n+    \n+    Skeleton.getSkeleton(ctx).setReturnValue(\n+        new MethodCall(BundleContext.class, \"getBundle\"), bpBundle);\n+    \n+    BlueprintQuiesceParticipant bqp = new BlueprintQuiesceParticipant(ctx, new BlueprintExtender() {\n+      @Override\n+      protected BlueprintContainerImpl getBlueprintContainerImpl(Bundle bundle) {\n+        return null;\n+      }      \n+    });\n+    \n+    final Semaphore result = new Semaphore(0);\n+    \n+    QuiesceCallback qc = new QuiesceCallback() {\n+      public void bundleQuiesced(Bundle... bundlesQuiesced) {\n+        result.release();\n+      }\n+    };\n+    \n+    bqp.quiesce(qc, Arrays.asList(testBundle));\n+    \n+    assertTrue(result.tryAcquire(2, TimeUnit.SECONDS));\n+  }\n+}",
                "deletions": 0
            },
            {
                "sha": "1bd74f545744c7c3992136499ae078010c0e7fd6",
                "filename": "blueprint/pom.xml",
                "blob_url": "https://github.com/apache/aries/blob/82d9e732c0fc86803a7515a7127ad033eeb1c4c7/blueprint/pom.xml",
                "raw_url": "https://github.com/apache/aries/raw/82d9e732c0fc86803a7515a7127ad033eeb1c4c7/blueprint/pom.xml",
                "status": "modified",
                "changes": 5,
                "additions": 5,
                "contents_url": "https://api.github.com/repos/apache/aries/contents/blueprint/pom.xml?ref=82d9e732c0fc86803a7515a7127ad033eeb1c4c7",
                "patch": "@@ -150,6 +150,11 @@\n                 <artifactId>org.apache.aries.quiesce.api</artifactId>\n                 <version>0.3-incubating-SNAPSHOT</version>\n             </dependency>\n+            <dependency>\n+              <groupId>org.apache.aries.testsupport</groupId>\n+              <artifactId>org.apache.aries.testsupport.unit</artifactId>\n+              <version>0.3-incubating-SNAPSHOT</version>\n+            </dependency>            \n         </dependencies>\n     </dependencyManagement>\n ",
                "deletions": 0
            }
        ]
    },
    {
        "repo": "aries",
        "message": "avoid NPE at shutdown\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/aries/trunk@928036 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/aries/commit/ef4c52f7b90c632e092fdc7256d5f4822413765d",
        "parent": "https://github.com/apache/aries/commit/7357614a5082e6d2d16088839f90a0904dc39480",
        "bug_id": "aries_35",
        "file": [
            {
                "sha": "c50701e351e6078646d1ed91e53a7dad3fecaa55",
                "filename": "jpa/jpa-container-context/src/main/java/org/apache/aries/jpa/container/context/impl/GlobalPersistenceManager.java",
                "blob_url": "https://github.com/apache/aries/blob/ef4c52f7b90c632e092fdc7256d5f4822413765d/jpa/jpa-container-context/src/main/java/org/apache/aries/jpa/container/context/impl/GlobalPersistenceManager.java",
                "raw_url": "https://github.com/apache/aries/raw/ef4c52f7b90c632e092fdc7256d5f4822413765d/jpa/jpa-container-context/src/main/java/org/apache/aries/jpa/container/context/impl/GlobalPersistenceManager.java",
                "status": "modified",
                "changes": 2,
                "additions": 1,
                "contents_url": "https://api.github.com/repos/apache/aries/contents/jpa/jpa-container-context/src/main/java/org/apache/aries/jpa/container/context/impl/GlobalPersistenceManager.java?ref=ef4c52f7b90c632e092fdc7256d5f4822413765d",
                "patch": "@@ -147,7 +147,7 @@ public void bundleChanged(BundleEvent event) {\n                 System.identityHashCode(frameworkBundle)});\n           }\n           removeManager = true;\n-          managers.remove(bundle);\n+          manager = managers.remove(bundle);\n           bundle.getBundleContext().removeBundleListener(this);\n         }\n       }",
                "deletions": 1
            }
        ]
    },
    {
        "repo": "aries",
        "message": "ARIES-244: Avoid NPE on dry parse\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/aries/trunk@921832 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/aries/commit/6a50667fa68fe517cd493798507df087719f09ac",
        "parent": "https://github.com/apache/aries/commit/79e17ca6160a6cbc24ee3b2eaa40e1c41885d205",
        "bug_id": "aries_36",
        "file": [
            {
                "sha": "6f1f1f58fc365fbbd81a91859caf44be078b3794",
                "filename": "jpa/jpa-blueprint-aries/src/main/java/org/apache/aries/jpa/blueprint/aries/impl/NSHandler.java",
                "blob_url": "https://github.com/apache/aries/blob/6a50667fa68fe517cd493798507df087719f09ac/jpa/jpa-blueprint-aries/src/main/java/org/apache/aries/jpa/blueprint/aries/impl/NSHandler.java",
                "raw_url": "https://github.com/apache/aries/raw/6a50667fa68fe517cd493798507df087719f09ac/jpa/jpa-blueprint-aries/src/main/java/org/apache/aries/jpa/blueprint/aries/impl/NSHandler.java",
                "status": "modified",
                "changes": 30,
                "additions": 17,
                "contents_url": "https://api.github.com/repos/apache/aries/contents/jpa/jpa-blueprint-aries/src/main/java/org/apache/aries/jpa/blueprint/aries/impl/NSHandler.java?ref=6a50667fa68fe517cd493798507df087719f09ac",
                "patch": "@@ -1,5 +1,5 @@\n /**\n- * Licensed to the Apache Software Foundation (ASF) under one\n+f * Licensed to the Apache Software Foundation (ASF) under one\n  * or more contributor license agreements.  See the NOTICE file\n  * distributed with this work for additional information\n  * regarding copyright ownership.  The ASF licenses this file\n@@ -168,19 +168,23 @@ public ComponentMetadata decorate(Node node, ComponentMetadata component,\n             Bundle client = getBlueprintBundle(context);\n             String unitName = parseUnitName(element);\n \n-            HashMap<String, Object> properties = new HashMap<String, Object>();\n-            // Remember to add the PersistenceContextType so that we can create\n-            // the correct type of\n-            // EntityManager\n-            properties.put(PersistenceContextProvider.PERSISTENCE_CONTEXT_TYPE,\n-                    parseType(element));\n-            properties.putAll(parseJPAProperties(element, context));\n-            if(contextsAvailable.get()) {\n-                manager.registerContext(unitName, client, properties);\n+            if (client != null) {\n+                HashMap<String, Object> properties = new HashMap<String, Object>();\n+                // Remember to add the PersistenceContextType so that we can create\n+                // the correct type of\n+                // EntityManager    \n+                properties.put(PersistenceContextProvider.PERSISTENCE_CONTEXT_TYPE,\n+                        parseType(element));\n+                properties.putAll(parseJPAProperties(element, context));\n+                if(contextsAvailable.get()) {\n+                    manager.registerContext(unitName, client, properties);\n+                } else {\n+                    _logger.warn(\"The bundle {} is a client of persistence unit {} with properties {}, but no PersistenceContextProvider is available in the runtime. \" +\n+                    \t\t\"The blueprint for this bundle will not start correctly unless the managed persistence context is registered through some other mechanism\",\n+                    \t\tnew Object[] {client.getSymbolicName() + \"_\" + client.getVersion(), unitName, properties});\n+                }\n             } else {\n-                _logger.warn(\"The bundle {} is a client of persistence unit {} with properties {}, but no PersistenceContextProvider is available in the runtime. \" +\n-                \t\t\"The blueprint for this bundle will not start correctly unless the managed persistence context is registered through some other mechanism\",\n-                \t\tnew Object[] {client.getSymbolicName() + \"_\" + client.getVersion(), unitName, properties});\n+                _logger.debug(\"No bundle: this must be a dry, parse only run.\");\n             }\n         }\n ",
                "deletions": 13
            }
        ]
    },
    {
        "repo": "aries",
        "message": "ARIES-1429 NullPointerException at org.apache.aries.subsystem.core.internal.WovenClassListener.modified at org.apache.aries.subsystem.core.internal.RegionUpdater.addRequirements\n\nWhen processing the dynamic package imports of a bundle's woven class, if no edge if found between the subsystem containing the bundle as a constituent and the parent subsystem,\nassume that an external entity is handling the dynamic imports rather than throwing an exception.\n\ngit-svn-id: https://svn.apache.org/repos/asf/aries/trunk@1707636 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/aries/commit/d84f93a084eb98c213296bfd1b3728e0162c0307",
        "parent": "https://github.com/apache/aries/commit/177bdbee284ac09bc7086592269f04da91f308d2",
        "bug_id": "aries_37",
        "file": [
            {
                "sha": "3092fc170a0dc19380c8646245bb8f133a3f8af0",
                "filename": "subsystem/subsystem-core/src/main/java/org/apache/aries/subsystem/core/internal/RegionUpdater.java",
                "blob_url": "https://github.com/apache/aries/blob/d84f93a084eb98c213296bfd1b3728e0162c0307/subsystem/subsystem-core/src/main/java/org/apache/aries/subsystem/core/internal/RegionUpdater.java",
                "raw_url": "https://github.com/apache/aries/raw/d84f93a084eb98c213296bfd1b3728e0162c0307/subsystem/subsystem-core/src/main/java/org/apache/aries/subsystem/core/internal/RegionUpdater.java",
                "status": "modified",
                "changes": 10,
                "additions": 9,
                "contents_url": "https://api.github.com/repos/apache/aries/contents/subsystem/subsystem-core/src/main/java/org/apache/aries/subsystem/core/internal/RegionUpdater.java?ref=d84f93a084eb98c213296bfd1b3728e0162c0307",
                "patch": "@@ -57,7 +57,15 @@ public void addRequirements(Collection<? extends Requirement> requirements) thro\n \t\t\tcopy.removeRegion(tail);\n \t\t\ttail = copy.createRegion(tail.getName());\n \t\t\taddBundleIds(bundleIds, tail);\n-\t\t\taddRequirements(requirements, heads.get(head.getName()));\n+\t\t\tRegionFilterBuilder builder = heads.get(head.getName());\n+\t\t\tif (builder == null) {\n+\t\t\t\t// Something outside of the subsystems implementation has\n+\t\t\t\t// deleted the edge between the parent and child subsystems.\n+\t\t\t\t// Assume the dynamic import sharing policy is being handled\n+\t\t\t\t// elsewhere. See ARIES-1429.\n+\t\t\t\treturn;\n+\t\t\t}\n+\t\t\taddRequirements(requirements, builder);\n \t\t\taddHeadRegions(heads, tail, copy);\n \t\t\taddTailRegions(tails, tail, copy);\n \t\t\t// Replace the current digraph.",
                "deletions": 1
            }
        ]
    },
    {
        "repo": "aries",
        "message": "ARIES-1243: Fixed NPE caused by null env passed to OSGiObjectFactoryBuilder.getObjectInstance()\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/aries/trunk@1624519 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/aries/commit/eea5f244073dc62f48cf9bce898104416ed2839b",
        "parent": "https://github.com/apache/aries/commit/7626d5f2e4bde482c77d44306a90d074b6fad90f",
        "bug_id": "aries_38",
        "file": [
            {
                "sha": "98f7e97c2611472de4c5a6c582bfb8c6186b5a2e",
                "filename": "jndi/jndi-core/src/main/java/org/apache/aries/jndi/OSGiObjectFactoryBuilder.java",
                "blob_url": "https://github.com/apache/aries/blob/eea5f244073dc62f48cf9bce898104416ed2839b/jndi/jndi-core/src/main/java/org/apache/aries/jndi/OSGiObjectFactoryBuilder.java",
                "raw_url": "https://github.com/apache/aries/raw/eea5f244073dc62f48cf9bce898104416ed2839b/jndi/jndi-core/src/main/java/org/apache/aries/jndi/OSGiObjectFactoryBuilder.java",
                "status": "modified",
                "changes": 10,
                "additions": 10,
                "contents_url": "https://api.github.com/repos/apache/aries/contents/jndi/jndi-core/src/main/java/org/apache/aries/jndi/OSGiObjectFactoryBuilder.java?ref=eea5f244073dc62f48cf9bce898104416ed2839b",
                "patch": "@@ -49,6 +49,11 @@ public Object getObjectInstance(Object obj,\n                                     Name name,\n                                     Context nameCtx,\n                                     Hashtable<?, ?> environment) throws Exception {\n+        \n+        if (environment == null) {\n+            environment = new Hashtable();\n+        }\n+        \n         BundleContext callerContext = getCallerBundleContext(environment);\n         if (callerContext == null) {\n             return obj;\n@@ -62,6 +67,11 @@ public Object getObjectInstance(Object obj,\n                                     Context nameCtx,\n                                     Hashtable<?, ?> environment,\n                                     Attributes attrs) throws Exception {\n+        \n+        if (environment == null) {\n+            environment = new Hashtable();\n+        }\n+        \n         BundleContext callerContext = getCallerBundleContext(environment);\n         if (callerContext == null) {\n             return obj;",
                "deletions": 0
            }
        ]
    },
    {
        "repo": "aries",
        "message": "Aries-1238: Fix for ARIES-1216 can cause NPE if classToProxy is a class from the boot loader\n\ngit-svn-id: https://svn.apache.org/repos/asf/aries/trunk@1621114 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/aries/commit/377db55e0529d9d908270893d3be0b13b64ff792",
        "parent": "https://github.com/apache/aries/commit/7f03be261ceb4734f5e546282bbfeceb281b5b0e",
        "bug_id": "aries_39",
        "file": [
            {
                "sha": "da7328f663e956e60e523fab4e0c26da412e9bd7",
                "filename": "proxy/proxy-impl/src/main/java/org/apache/aries/proxy/impl/AsmProxyManager.java",
                "blob_url": "https://github.com/apache/aries/blob/377db55e0529d9d908270893d3be0b13b64ff792/proxy/proxy-impl/src/main/java/org/apache/aries/proxy/impl/AsmProxyManager.java",
                "raw_url": "https://github.com/apache/aries/raw/377db55e0529d9d908270893d3be0b13b64ff792/proxy/proxy-impl/src/main/java/org/apache/aries/proxy/impl/AsmProxyManager.java",
                "status": "modified",
                "changes": 5,
                "additions": 5,
                "contents_url": "https://api.github.com/repos/apache/aries/contents/proxy/proxy-impl/src/main/java/org/apache/aries/proxy/impl/AsmProxyManager.java?ref=377db55e0529d9d908270893d3be0b13b64ff792",
                "patch": "@@ -44,6 +44,8 @@\n \n public final class AsmProxyManager extends AbstractProxyManager implements ProxyManager\n {\n+  static final ClassLoader bootClassLoader = new ClassLoader(Object.class.getClassLoader()) { /* boot class loader */};\n+\t\n   public Object createNewProxy(Bundle clientBundle, Collection<Class<?>> classes, \n       Callable<Object> dispatcher, InvocationListener listener) throws UnableToProxyException\n   {\n@@ -111,6 +113,9 @@ public Object createNewProxy(Bundle clientBundle, Collection<Class<?>> classes,\n         // If we could generate a proper constructor this would not be necessary, but since we have to rely\n         // on the generated serialization constructor to bypass the JVM verifier, we don't have much choice\n         ClassLoader classLoader = classToProxy.getClassLoader();\n+        if (classLoader == null) {\n+        \tclassLoader = bootClassLoader;\n+        }\n         boolean allVisible = true;\n         for (Class<?> clazz : classes) {\n           try {",
                "deletions": 0
            }
        ]
    },
    {
        "repo": "aries",
        "message": "[ARIES-1126] Prevent an NPE in ProxyWeavingHook and allow a setting to bypass it completely\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/aries/trunk@1533600 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/aries/commit/c7411e8631c2a3e66c0d49fad9f8b5a287c5ac81",
        "parent": "https://github.com/apache/aries/commit/c8a8b8fcc78498994d9f012ff189eb8fca89f3fb",
        "bug_id": "aries_40",
        "file": [
            {
                "sha": "40b140f758ec04f3bcfda9c250be3429e8106d4f",
                "filename": "proxy/proxy-impl/src/main/java/org/apache/aries/proxy/impl/ProxyManagerActivator.java",
                "blob_url": "https://github.com/apache/aries/blob/c7411e8631c2a3e66c0d49fad9f8b5a287c5ac81/proxy/proxy-impl/src/main/java/org/apache/aries/proxy/impl/ProxyManagerActivator.java",
                "raw_url": "https://github.com/apache/aries/raw/c7411e8631c2a3e66c0d49fad9f8b5a287c5ac81/proxy/proxy-impl/src/main/java/org/apache/aries/proxy/impl/ProxyManagerActivator.java",
                "status": "modified",
                "changes": 11,
                "additions": 1,
                "contents_url": "https://api.github.com/repos/apache/aries/contents/proxy/proxy-impl/src/main/java/org/apache/aries/proxy/impl/ProxyManagerActivator.java?ref=c7411e8631c2a3e66c0d49fad9f8b5a287c5ac81",
                "patch": "@@ -18,8 +18,6 @@\n  */\n package org.apache.aries.proxy.impl;\n \n-import java.util.Dictionary;\n-import java.util.Hashtable;\n \n import org.apache.aries.proxy.ProxyManager;\n import org.osgi.framework.BundleActivator;\n@@ -55,14 +53,7 @@ public void start(BundleContext context)\n         //if ASM is available then we should also try weaving\n         Class<?> cls = Class.forName(\"org.apache.aries.proxy.impl.weaving.ProxyWeavingHook\",\n         \t\ttrue, ProxyManagerActivator.class.getClassLoader());\n-        Dictionary<String,String> props = new Hashtable<String,String>();\n-        // SubsystemResource.java also uses this constant. \n-        //   While it could be turned into a static final constant, note that this\n-        //   is also a non-standard workaround in the absence of a solution in the spec. \n-        // See the associated OSGi spec bug. \n-        props.put(\"osgi.woven.packages\", \"org.apache.aries.proxy.weaving,org.apache.aries.proxy\");\n-        context.registerService(\"org.osgi.framework.hooks.weaving.WeavingHook\",\n-            cls.getConstructor(BundleContext.class).newInstance(context), props);\n+        cls.getConstructor(BundleContext.class).newInstance(context);\n       } catch (Throwable t) {\n         //We don't care about this, we just won't have registered the hook\n       }",
                "deletions": 10
            },
            {
                "sha": "e0f8fd8e4102355165c3eba173db7969ede9d346",
                "filename": "proxy/proxy-impl/src/main/java/org/apache/aries/proxy/impl/weaving/ProxyWeavingHook.java",
                "blob_url": "https://github.com/apache/aries/blob/c7411e8631c2a3e66c0d49fad9f8b5a287c5ac81/proxy/proxy-impl/src/main/java/org/apache/aries/proxy/impl/weaving/ProxyWeavingHook.java",
                "raw_url": "https://github.com/apache/aries/raw/c7411e8631c2a3e66c0d49fad9f8b5a287c5ac81/proxy/proxy-impl/src/main/java/org/apache/aries/proxy/impl/weaving/ProxyWeavingHook.java",
                "status": "modified",
                "changes": 31,
                "additions": 24,
                "contents_url": "https://api.github.com/repos/apache/aries/contents/proxy/proxy-impl/src/main/java/org/apache/aries/proxy/impl/weaving/ProxyWeavingHook.java?ref=c7411e8631c2a3e66c0d49fad9f8b5a287c5ac81",
                "patch": "@@ -19,6 +19,8 @@\n package org.apache.aries.proxy.impl.weaving;\r\n \r\n import java.util.ArrayList;\r\n+import java.util.Dictionary;\r\n+import java.util.Hashtable;\r\n import java.util.List;\r\n import java.util.regex.Pattern;\r\n \r\n@@ -33,6 +35,7 @@\n import org.osgi.framework.hooks.weaving.WeavingException;\r\n import org.osgi.framework.hooks.weaving.WeavingHook;\r\n import org.osgi.framework.hooks.weaving.WovenClass;\r\n+import org.osgi.framework.wiring.BundleWiring;\r\n import org.osgi.util.tracker.ServiceTracker;\r\n import org.slf4j.Logger;\r\n import org.slf4j.LoggerFactory;\r\n@@ -60,20 +63,34 @@\n   private final ServiceTracker controllers;\r\n \r\n   public ProxyWeavingHook(BundleContext context) {\r\n-    enabled = parseMatchers(context != null ? context.getProperty(WEAVING_ENABLED_CLASSES) : null, WEAVING_ENABLED_CLASSES_DEFAULT);\r\n+    String enabledProp = context != null ? context.getProperty(WEAVING_ENABLED_CLASSES) : null;\r\n+    enabled = parseMatchers(enabledProp, WEAVING_ENABLED_CLASSES_DEFAULT);\r\n     disabled = parseMatchers(context != null ? context.getProperty(WEAVING_DISABLED_CLASSES) : null, WEAVING_DISABLED_CLASSES_DEFAULT);\r\n     controllers = new ServiceTracker(context, ProxyWeavingController.class.getName(), null);\r\n     controllers.open();\r\n+    \r\n+    if (!\"none\".equals(enabledProp)) {\r\n+        Dictionary<String,String> props = new Hashtable<String,String>();\r\n+        // SubsystemResource.java also uses this constant. \r\n+        //   While it could be turned into a static final constant, note that this\r\n+        //   is also a non-standard workaround in the absence of a solution in the spec. \r\n+        // See the associated OSGi spec bug. \r\n+        props.put(\"osgi.woven.packages\", \"org.apache.aries.proxy.weaving,org.apache.aries.proxy\");\r\n+        context.registerService(\"org.osgi.framework.hooks.weaving.WeavingHook\", this, props);\r\n+    }\r\n   }\r\n \r\n   public final void weave(WovenClass wovenClass) {\r\n+    BundleWiring bw = wovenClass.getBundleWiring();\r\n     \r\n-    Bundle b = wovenClass.getBundleWiring().getBundle();\r\n-    \r\n-    if(b.getBundleId() == 0 || \r\n-        b.getSymbolicName().startsWith(\"org.apache.aries.proxy\") ||\r\n-        b.getSymbolicName().startsWith(\"org.apache.aries.util\")) {\r\n-      return;\r\n+    if (bw != null) {\r\n+        Bundle b = bw.getBundle();\r\n+        \r\n+        if(b.getBundleId() == 0 || \r\n+            b.getSymbolicName().startsWith(\"org.apache.aries.proxy\") ||\r\n+            b.getSymbolicName().startsWith(\"org.apache.aries.util\")) {\r\n+          return;\r\n+        }\r\n     }\r\n \r\n     if (!isEnabled(wovenClass.getClassName()) || isDisabled(wovenClass.getClassName())) {\r",
                "deletions": 7
            }
        ]
    },
    {
        "repo": "aries",
        "message": "Aries-971: ServiceHelper.CacheClearoutListener.add(BundleContext, ServiceKey) causes NPE if system bundle is hidden\n\ngit-svn-id: https://svn.apache.org/repos/asf/aries/trunk@1413680 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/aries/commit/c2f094a717b61645c0551eed10eedff47a6920bc",
        "parent": "https://github.com/apache/aries/commit/03c135f43ca38d9627708610a976df44b7cab584",
        "bug_id": "aries_41",
        "file": [
            {
                "sha": "b2e4db0341e05b121e14590e53827f6c1a4322c6",
                "filename": "jndi/jndi-url/src/main/java/org/apache/aries/jndi/services/ServiceHelper.java",
                "blob_url": "https://github.com/apache/aries/blob/c2f094a717b61645c0551eed10eedff47a6920bc/jndi/jndi-url/src/main/java/org/apache/aries/jndi/services/ServiceHelper.java",
                "raw_url": "https://github.com/apache/aries/raw/c2f094a717b61645c0551eed10eedff47a6920bc/jndi/jndi-url/src/main/java/org/apache/aries/jndi/services/ServiceHelper.java",
                "status": "modified",
                "changes": 3,
                "additions": 2,
                "contents_url": "https://api.github.com/repos/apache/aries/contents/jndi/jndi-url/src/main/java/org/apache/aries/jndi/services/ServiceHelper.java?ref=c2f094a717b61645c0551eed10eedff47a6920bc",
                "patch": "@@ -111,7 +111,8 @@ public void add(final BundleContext ctx, ServiceKey k)\n       BundleContext systemBundle = AccessController.doPrivileged(new PrivilegedAction<BundleContext>() {\n         public BundleContext run()\n         {\n-          return ctx.getBundle(0).getBundleContext();\n+        \t Bundle system = ctx.getBundle(0); \n+        \t return system == null ? null : system.getBundleContext(); \n         }\n       });\n       if (systemBundle == null) systemBundle = ctx;",
                "deletions": 1
            }
        ]
    },
    {
        "repo": "aries",
        "message": "[ARIES-923] A service proxy obtained from a reference list can return a null service, leading to NPE\n\ngit-svn-id: https://svn.apache.org/repos/asf/aries/trunk@1383274 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/aries/commit/5984f13cd9049096c06a48826a103966e22735aa",
        "parent": "https://github.com/apache/aries/commit/0b8e09c83972e95113c8b7f5c35df518d27f44d0",
        "bug_id": "aries_42",
        "file": [
            {
                "sha": "f19d9ea4e00d9d41797cabd24beb9547af958d89",
                "filename": "blueprint/blueprint-core/src/main/java/org/apache/aries/blueprint/container/ReferenceListRecipe.java",
                "blob_url": "https://github.com/apache/aries/blob/5984f13cd9049096c06a48826a103966e22735aa/blueprint/blueprint-core/src/main/java/org/apache/aries/blueprint/container/ReferenceListRecipe.java",
                "raw_url": "https://github.com/apache/aries/raw/5984f13cd9049096c06a48826a103966e22735aa/blueprint/blueprint-core/src/main/java/org/apache/aries/blueprint/container/ReferenceListRecipe.java",
                "status": "modified",
                "changes": 6,
                "additions": 3,
                "contents_url": "https://api.github.com/repos/apache/aries/contents/blueprint/blueprint-core/src/main/java/org/apache/aries/blueprint/container/ReferenceListRecipe.java?ref=5984f13cd9049096c06a48826a103966e22735aa",
                "patch": "@@ -205,11 +205,11 @@ public synchronized void destroy() {\n         }\n \n         public synchronized Object call() throws Exception {\n-            if (reference == null) {\n-                throw new ServiceUnavailableException(\"Service is unavailable\", getOsgiFilter());\n+            if (service == null && reference != null) {\n+                service = getServiceSecurely(reference);\n             }\n             if (service == null) {\n-                service = getServiceSecurely(reference);\n+                throw new ServiceUnavailableException(\"Service is unavailable\", getOsgiFilter());\n             }\n             return service;\n         }",
                "deletions": 3
            }
        ]
    },
    {
        "repo": "aries",
        "message": "[ARIES-854] Check for null when configuration update() is called to avoid NPE.\n\ngit-svn-id: https://svn.apache.org/repos/asf/aries/trunk@1343327 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/aries/commit/f920172711cdab419ab5e5228c80430d745426da",
        "parent": "https://github.com/apache/aries/commit/5105dc1e08c437526385e2970a477c23c052808d",
        "bug_id": "aries_43",
        "file": [
            {
                "sha": "8894ba4986fff8ce3419cfd40321a79ec7e557bd",
                "filename": "transaction/transaction-manager/src/main/java/org/apache/aries/transaction/Activator.java",
                "blob_url": "https://github.com/apache/aries/blob/f920172711cdab419ab5e5228c80430d745426da/transaction/transaction-manager/src/main/java/org/apache/aries/transaction/Activator.java",
                "raw_url": "https://github.com/apache/aries/raw/f920172711cdab419ab5e5228c80430d745426da/transaction/transaction-manager/src/main/java/org/apache/aries/transaction/Activator.java",
                "status": "modified",
                "changes": 6,
                "additions": 6,
                "contents_url": "https://api.github.com/repos/apache/aries/contents/transaction/transaction-manager/src/main/java/org/apache/aries/transaction/Activator.java?ref=f920172711cdab419ab5e5228c80430d745426da",
                "patch": "@@ -51,6 +51,12 @@ public void stop(BundleContext context) throws Exception {\n     }\n \n     public synchronized void updated(Dictionary properties) throws ConfigurationException {\n+    \tif (properties == null)\n+    \t{\n+    \t\t// Use defaults if there's no configuration for us\n+    \t\tproperties = new Hashtable();\n+    \t\tproperties.put(Constants.SERVICE_PID, PID);\n+    \t}\n         deleted();\n         manager = new TransactionManagerService(PID, properties, bundleContext);\n         try {",
                "deletions": 0
            }
        ]
    },
    {
        "repo": "aries",
        "message": "ARIES-817 finish upgrading to asm 4.  Also slightly fix serialversionuid comparison NPE\n\ngit-svn-id: https://svn.apache.org/repos/asf/aries/trunk@1303658 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/aries/commit/57583c31b554b2e17ab883bdaa7c8c73f0c514e9",
        "parent": "https://github.com/apache/aries/commit/01b3f184ccaca0b287fedbd4c694546cf7ba58b0",
        "bug_id": "aries_44",
        "file": [
            {
                "sha": "fff1e6f6b4c280b9e0ffc34f36a1b4d2dbefd254",
                "filename": "versioning/org.apache.aries.versioning.plugin/pom.xml",
                "blob_url": "https://github.com/apache/aries/blob/57583c31b554b2e17ab883bdaa7c8c73f0c514e9/versioning/org.apache.aries.versioning.plugin/pom.xml",
                "raw_url": "https://github.com/apache/aries/raw/57583c31b554b2e17ab883bdaa7c8c73f0c514e9/versioning/org.apache.aries.versioning.plugin/pom.xml",
                "status": "modified",
                "changes": 4,
                "additions": 2,
                "contents_url": "https://api.github.com/repos/apache/aries/contents/versioning/org.apache.aries.versioning.plugin/pom.xml?ref=57583c31b554b2e17ab883bdaa7c8c73f0c514e9",
                "patch": "@@ -19,9 +19,9 @@\n             <version>0.1.0-SNAPSHOT</version>\n         </dependency>\n         <dependency>\n-            <groupId>asm</groupId>\n+            <groupId>org.ow2.asm</groupId>\n             <artifactId>asm-all</artifactId>\n-            <version>3.3.1</version>\n+            <version>4.0</version>\n         </dependency>\n         <dependency>\n             <groupId>org.osgi</groupId>",
                "deletions": 2
            },
            {
                "sha": "5e44e22dbe2edf15a7343836c88c2005a1e452ad",
                "filename": "versioning/versioning-checker/src/main/java/org/apache/aries/versioning/utils/ClassDeclaration.java",
                "blob_url": "https://github.com/apache/aries/blob/57583c31b554b2e17ab883bdaa7c8c73f0c514e9/versioning/versioning-checker/src/main/java/org/apache/aries/versioning/utils/ClassDeclaration.java",
                "raw_url": "https://github.com/apache/aries/raw/57583c31b554b2e17ab883bdaa7c8c73f0c514e9/versioning/versioning-checker/src/main/java/org/apache/aries/versioning/utils/ClassDeclaration.java",
                "status": "modified",
                "changes": 39,
                "additions": 17,
                "contents_url": "https://api.github.com/repos/apache/aries/contents/versioning/versioning-checker/src/main/java/org/apache/aries/versioning/utils/ClassDeclaration.java?ref=57583c31b554b2e17ab883bdaa7c8c73f0c514e9",
                "patch": "@@ -111,16 +111,16 @@ private void putIfAbsent(Map<String, FieldDeclaration> allFields,\n     }\r\n \r\n \r\n-    public ClassDeclaration(int access, String name, String signature, String superName,\r\n-                            String[] interfaces, URLClassLoader loader) {\r\n-        super(access, name, signature);\r\n-        this.superName = superName;\r\n-        this.interfaces = interfaces;\r\n-        this.fields = new HashMap<String, FieldDeclaration>();\r\n-        this.methods = new HashMap<String, Set<MethodDeclaration>>();\r\n-        this.jarsLoader = loader;\r\n-        this.serialVisitor = null;\r\n-    }\r\n+//    public ClassDeclaration(int access, String name, String signature, String superName,\r\n+//                            String[] interfaces, URLClassLoader loader) {\r\n+//        super(access, name, signature);\r\n+//        this.superName = superName;\r\n+//        this.interfaces = interfaces;\r\n+//        this.fields = new HashMap<String, FieldDeclaration>();\r\n+//        this.methods = new HashMap<String, Set<MethodDeclaration>>();\r\n+//        this.jarsLoader = loader;\r\n+//        this.serialVisitor = null;\r\n+//    }\r\n \r\n     public ClassDeclaration(int access, String name, String signature, String superName,\r\n                             String[] interfaces, URLClassLoader loader, SerialVersionClassVisitor cv) {\r\n@@ -138,8 +138,7 @@ private void getFieldsRecursively(String superClass) {\n         if ((superClass != null)) {\r\n             // load the super class of the cd\r\n             try {\r\n-                ClassVisitor cw = new EmptyClassVisitor();\r\n-                SerialVersionClassVisitor cv = new SerialVersionClassVisitor(cw);\r\n+                SerialVersionClassVisitor cv = new SerialVersionClassVisitor(null);\r\n                 SemanticVersioningClassVisitor svc = new SemanticVersioningClassVisitor(jarsLoader, cv);\r\n                 ClassReader cr = new ClassReader(jarsLoader.getResourceAsStream(superClass + SemanticVersioningUtils.classExt));\r\n                 cr.accept(svc, 0);\r\n@@ -160,8 +159,7 @@ private void getFieldsRecursively(String superClass) {\n     private void getMethodsRecursively(String superClass) {\r\n         if ((superClass != null)) {\r\n             // load the super class of the cd\r\n-            ClassVisitor cw = new EmptyClassVisitor();\r\n-            SerialVersionClassVisitor cv = new SerialVersionClassVisitor(cw);\r\n+            SerialVersionClassVisitor cv = new SerialVersionClassVisitor(null);\r\n \r\n             SemanticVersioningClassVisitor svc = new SemanticVersioningClassVisitor(jarsLoader, cv);\r\n             // use URLClassLoader to load the class\r\n@@ -226,8 +224,7 @@ private void addMethodsInUpperChain(Map<String, Set<MethodDeclaration>> methods)\n \r\n         if (className != null) {\r\n             // load the super class of the cd\r\n-            ClassVisitor cw = new EmptyClassVisitor();\r\n-            SerialVersionClassVisitor cv = new SerialVersionClassVisitor(cw);\r\n+            SerialVersionClassVisitor cv = new SerialVersionClassVisitor(null);\r\n \r\n             SemanticVersioningClassVisitor svc = new SemanticVersioningClassVisitor(jarsLoader, cv);\r\n             try {\r\n@@ -399,8 +396,8 @@ private void getSerializableBackCompatable(ClassDeclaration old, List<String> re\n             // check to see whether the serializable id is the same\r\n             //ignore if it is enum\r\n             if ((!getAllSupers().contains(SemanticVersioningUtils.ENUM_CLASS) && (!old.getAllSupers().contains(SemanticVersioningUtils.ENUM_CLASS)))) {\r\n-                long oldValue = getSerialVersionUID(old);\r\n-                long curValue = getSerialVersionUID(this);\r\n+                Long oldValue = getSerialVersionUID(old);\r\n+                Long curValue = getSerialVersionUID(this);\r\n                 if ((oldValue != curValue)) {\r\n                     reasons.add(\"The serializable class is no longer back compatible as the value of SerialVersionUID has changed from \" + oldValue + \" to \" + curValue + \".\");\r\n                 }\r\n@@ -409,19 +406,17 @@ private void getSerializableBackCompatable(ClassDeclaration old, List<String> re\n \r\n     }\r\n \r\n-    private long getSerialVersionUID(ClassDeclaration cd) {\r\n+    private Long getSerialVersionUID(ClassDeclaration cd) {\r\n         FieldDeclaration serialID = cd.getAllFields().get(SemanticVersioningUtils.SERIAL_VERSION_UTD);\r\n         if (serialID != null) {\r\n             if (serialID.isFinal() && serialID.isStatic() && Type.LONG_TYPE.equals(Type.getType(serialID.getDesc()))) {\r\n                 if (serialID.getValue() != null) {\r\n                     return (Long) (serialID.getValue());\r\n-                } else {\r\n-                    return 0;\r\n                 }\r\n             }\r\n         }\r\n         // get the generated value\r\n-        return cd.getSerialVisitor().getComputeSerialVersionUID();\r\n+        return cd.getSerialVisitor() == null? null: cd.getSerialVisitor().getComputeSerialVersionUID();\r\n     }\r\n \r\n     private boolean isFieldTypeSame(FieldDeclaration bef_fd, FieldDeclaration cur_fd) {\r",
                "deletions": 22
            },
            {
                "sha": "e2bae3ad63ca4318e52999f1e9c4d05128491c69",
                "filename": "versioning/versioning-checker/src/main/java/org/apache/aries/versioning/utils/EmptyClassVisitor.java",
                "blob_url": "https://github.com/apache/aries/blob/01b3f184ccaca0b287fedbd4c694546cf7ba58b0/versioning/versioning-checker/src/main/java/org/apache/aries/versioning/utils/EmptyClassVisitor.java",
                "raw_url": "https://github.com/apache/aries/raw/01b3f184ccaca0b287fedbd4c694546cf7ba58b0/versioning/versioning-checker/src/main/java/org/apache/aries/versioning/utils/EmptyClassVisitor.java",
                "status": "removed",
                "changes": 88,
                "additions": 0,
                "contents_url": "https://api.github.com/repos/apache/aries/contents/versioning/versioning-checker/src/main/java/org/apache/aries/versioning/utils/EmptyClassVisitor.java?ref=01b3f184ccaca0b287fedbd4c694546cf7ba58b0",
                "patch": "@@ -1,88 +0,0 @@\n-/*\r\n- * Licensed to the Apache Software Foundation (ASF) under one\r\n- * or more contributor license agreements.  See the NOTICE file\r\n- * distributed with this work for additional information\r\n- * regarding copyright ownership.  The ASF licenses this file\r\n- * to you under the Apache License, Version 2.0 (the\r\n- * \"License\"); you may not use this file except in compliance\r\n- * with the License.  You may obtain a copy of the License at\r\n- *\r\n- *   http://www.apache.org/licenses/LICENSE-2.0\r\n- *\r\n- * Unless required by applicable law or agreed to in writing,\r\n- * software distributed under the License is distributed on an\r\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n- * KIND, either express or implied.  See the License for the\r\n- * specific language governing permissions and limitations\r\n- * under the License.\r\n- */\r\n-package org.apache.aries.versioning.utils;\r\n-\r\n-import org.objectweb.asm.AnnotationVisitor;\r\n-import org.objectweb.asm.Attribute;\r\n-import org.objectweb.asm.ClassVisitor;\r\n-import org.objectweb.asm.FieldVisitor;\r\n-import org.objectweb.asm.MethodVisitor;\r\n-\r\n-public class EmptyClassVisitor extends ClassVisitor {\r\n-\r\n-    public EmptyClassVisitor()\r\n-  {\r\n-    super(SemanticVersioningUtils.ASM4);\r\n-    \r\n-  }\r\n-\r\n-    @Override\r\n-    public void visit(int arg0, int arg1, String arg2, String arg3, String arg4, String[] arg5) {\r\n-\r\n-\r\n-    }\r\n-\r\n-    @Override\r\n-    public AnnotationVisitor visitAnnotation(String arg0, boolean arg1) {\r\n-\r\n-        return null;\r\n-    }\r\n-\r\n-    @Override\r\n-    public void visitAttribute(Attribute arg0) {\r\n-        //noop\r\n-\r\n-    }\r\n-\r\n-    @Override\r\n-    public void visitEnd() {\r\n-        // noop\r\n-\r\n-    }\r\n-\r\n-    @Override\r\n-    public FieldVisitor visitField(int arg0, String arg1, String arg2, String arg3, Object arg4) {\r\n-        // noop\r\n-        return null;\r\n-    }\r\n-\r\n-    @Override\r\n-    public void visitInnerClass(String arg0, String arg1, String arg2, int arg3) {\r\n-        // noop\r\n-\r\n-    }\r\n-\r\n-    @Override\r\n-    public MethodVisitor visitMethod(int arg0, String arg1, String arg2, String arg3, String[] arg4) {\r\n-        // noop\r\n-        return null;\r\n-    }\r\n-\r\n-    @Override\r\n-    public void visitOuterClass(String arg0, String arg1, String arg2) {\r\n-        // noop\r\n-    }\r\n-\r\n-    @Override\r\n-    public void visitSource(String arg0, String arg1) {\r\n-        // noop\r\n-\r\n-    }\r\n-\r\n-}\r",
                "deletions": 88
            }
        ]
    },
    {
        "repo": "aries",
        "message": "ARIES-777 Introduce a R43Worker to get classloader from bundle in r 4.3 frameworks. Also avoid an NPE I ran into\n\ngit-svn-id: https://svn.apache.org/repos/asf/aries/trunk@1200093 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/aries/commit/033c6961023f66a8a07749624f13157e0c7c51c4",
        "parent": "https://github.com/apache/aries/commit/1a448911da90c46feaf4ce6cc0265ec34855c002",
        "bug_id": "aries_45",
        "file": [
            {
                "sha": "e1026d40c76c05d0f333192a764f3aad5b4000e7",
                "filename": "util/pom.xml",
                "blob_url": "https://github.com/apache/aries/blob/033c6961023f66a8a07749624f13157e0c7c51c4/util/pom.xml",
                "raw_url": "https://github.com/apache/aries/raw/033c6961023f66a8a07749624f13157e0c7c51c4/util/pom.xml",
                "status": "modified",
                "changes": 6,
                "additions": 5,
                "contents_url": "https://api.github.com/repos/apache/aries/contents/util/pom.xml?ref=033c6961023f66a8a07749624f13157e0c7c51c4",
                "patch": "@@ -53,7 +53,9 @@\n         </aries.osgi.export.pkg>\n         <aries.osgi.import.pkg>\n             !org.apache.aries.util*,\n+            org.osgi.framework.hooks.bundle;resolution:=optional,\n             org.osgi.framework.launch;resolution:=optional,\n+            org.osgi.framework.wiring.*;resolution:=optional,\n             org.osgi.service.framework;resolution:=optional,\n             org.eclipse.osgi.internal.loader;resolution:=optional,\n             org.eclipse.osgi.framework.internal.core;resolution:=optional,\n@@ -62,14 +64,16 @@\n         </aries.osgi.import.pkg>\n         <aries.osgi.private.pkg>\n             org.apache.aries.util.internal,\n-            org.apache.aries.util.filesystem.impl\n+            org.apache.aries.util.filesystem.impl,\n+            org.apache.aries.util.tracker.hook\n         </aries.osgi.private.pkg>\n     </properties>\n \n     <dependencies>\n         <dependency>\n             <groupId>org.osgi</groupId>\n             <artifactId>org.osgi.core</artifactId>\n+            <version>4.3.0</version>\n             <scope>provided</scope>\n         </dependency>\n         <dependency>",
                "deletions": 1
            },
            {
                "sha": "c4821254e87ca198adab1bd363136f932d5fe5f4",
                "filename": "util/src/main/java/org/apache/aries/util/AriesFrameworkUtil.java",
                "blob_url": "https://github.com/apache/aries/blob/033c6961023f66a8a07749624f13157e0c7c51c4/util/src/main/java/org/apache/aries/util/AriesFrameworkUtil.java",
                "raw_url": "https://github.com/apache/aries/raw/033c6961023f66a8a07749624f13157e0c7c51c4/util/src/main/java/org/apache/aries/util/AriesFrameworkUtil.java",
                "status": "modified",
                "changes": 13,
                "additions": 9,
                "contents_url": "https://api.github.com/repos/apache/aries/contents/util/src/main/java/org/apache/aries/util/AriesFrameworkUtil.java?ref=033c6961023f66a8a07749624f13157e0c7c51c4",
                "patch": "@@ -22,20 +22,25 @@\n import org.apache.aries.util.internal.EquinoxWorker;\n import org.apache.aries.util.internal.FelixWorker;\n import org.apache.aries.util.internal.FrameworkUtilWorker;\n+import org.apache.aries.util.internal.R43Worker;\n import org.osgi.framework.Bundle;\n import org.osgi.framework.FrameworkUtil;\n import org.osgi.framework.ServiceRegistration;\n \n-public final class AriesFrameworkUtil \n+public final class AriesFrameworkUtil\n {\n   private static FrameworkUtilWorker worker;\n   \n   static {\n+    try {\n+      worker = new R43Worker();\n+    } catch (Throwable e) {\n+    }\n     Bundle b = FrameworkUtil.getBundle(AriesFrameworkUtil.class);\n-    String bundleClassName = b.getClass().getName();\n-    if (isEquinox(bundleClassName)) {\n+    String bundleClassName = b == null? \"\": b.getClass().getName();\n+    if (worker == null && isEquinox(bundleClassName)) {\n       worker = new EquinoxWorker();\n-    } else if (bundleClassName.startsWith(\"org.apache.felix\")) {\n+    } else if (worker == null && bundleClassName.startsWith(\"org.apache.felix\")) {\n       worker = new FelixWorker();\n     } \n     ",
                "deletions": 4
            },
            {
                "sha": "7b258cdbbb9a2401c1aaca52ef51113b8509432e",
                "filename": "util/src/main/java/org/apache/aries/util/internal/DefaultWorker.java",
                "blob_url": "https://github.com/apache/aries/blob/033c6961023f66a8a07749624f13157e0c7c51c4/util/src/main/java/org/apache/aries/util/internal/DefaultWorker.java",
                "raw_url": "https://github.com/apache/aries/raw/033c6961023f66a8a07749624f13157e0c7c51c4/util/src/main/java/org/apache/aries/util/internal/DefaultWorker.java",
                "status": "modified",
                "changes": 5,
                "additions": 3,
                "contents_url": "https://api.github.com/repos/apache/aries/contents/util/src/main/java/org/apache/aries/util/internal/DefaultWorker.java?ref=033c6961023f66a8a07749624f13157e0c7c51c4",
                "patch": "@@ -39,7 +39,8 @@\n \n   static\n   {\n-    BundleContext myContext = FrameworkUtil.getBundle(DefaultWorker.class).getBundleContext();\n+    Bundle bundle = FrameworkUtil.getBundle(DefaultWorker.class);\n+    BundleContext myContext = bundle == null? null: bundle.getBundleContext();\n     \n     // This may be created during framework shutdown when the bundle context is null.\n     // So we need to cope and not NPE during construction.\n@@ -56,7 +57,7 @@ public ClassLoader getClassLoader(final Bundle b)\n     ClassLoader cl = get(b);\n     \n     if (cl != null) return cl;\n-    \n+\n     // so first off try to get the real classloader. We can do this by loading a known class\n     // such as the bundle activator. There is no guarantee this will work, so we have a back door too.\n     String activator = (String) b.getHeaders().get(Constants.BUNDLE_ACTIVATOR);",
                "deletions": 2
            },
            {
                "sha": "0c8ffdfece7764b79052dec4af431bcd89163042",
                "filename": "util/src/main/java/org/apache/aries/util/internal/R43Worker.java",
                "blob_url": "https://github.com/apache/aries/blob/033c6961023f66a8a07749624f13157e0c7c51c4/util/src/main/java/org/apache/aries/util/internal/R43Worker.java",
                "raw_url": "https://github.com/apache/aries/raw/033c6961023f66a8a07749624f13157e0c7c51c4/util/src/main/java/org/apache/aries/util/internal/R43Worker.java",
                "status": "added",
                "changes": 42,
                "additions": 42,
                "contents_url": "https://api.github.com/repos/apache/aries/contents/util/src/main/java/org/apache/aries/util/internal/R43Worker.java?ref=033c6961023f66a8a07749624f13157e0c7c51c4",
                "patch": "@@ -0,0 +1,42 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *  http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+\n+package org.apache.aries.util.internal;\n+\n+import org.osgi.framework.Bundle;\n+import org.osgi.framework.wiring.BundleWiring;\n+\n+/**\n+ * @version $Rev:$ $Date:$\n+ */\n+public class R43Worker implements FrameworkUtilWorker {\n+\n+    static {\n+        BundleWiring.class.getClassLoader();\n+    }\n+\n+    public ClassLoader getClassLoader(Bundle b) {\n+        return b.adapt(BundleWiring.class).getClassLoader();\n+    }\n+\n+    public boolean isValid() {\n+        return true;\n+    }\n+}",
                "deletions": 0
            }
        ]
    },
    {
        "repo": "aries",
        "message": "[ARIES-563] The NamespaceHandlerRegistryImpl does not actually reuse parsed schemas - fix proxy NPE that causes iTest failures\n\ngit-svn-id: https://svn.apache.org/repos/asf/aries/trunk@1068021 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/aries/commit/01a01f2abff1e4c0e5794fc69036bb2265d72628",
        "parent": "https://github.com/apache/aries/commit/60594ed9cba457770e6dfea94c2084182de3929c",
        "bug_id": "aries_46",
        "file": [
            {
                "sha": "30c3c399ed4a7bc77cfc02ff497b0cb61e4ded1a",
                "filename": "proxy/proxy-impl/src/main/java/org/apache/aries/proxy/impl/AbstractProxyManager.java",
                "blob_url": "https://github.com/apache/aries/blob/01a01f2abff1e4c0e5794fc69036bb2265d72628/proxy/proxy-impl/src/main/java/org/apache/aries/proxy/impl/AbstractProxyManager.java",
                "raw_url": "https://github.com/apache/aries/raw/01a01f2abff1e4c0e5794fc69036bb2265d72628/proxy/proxy-impl/src/main/java/org/apache/aries/proxy/impl/AbstractProxyManager.java",
                "status": "modified",
                "changes": 2,
                "additions": 1,
                "contents_url": "https://api.github.com/repos/apache/aries/contents/proxy/proxy-impl/src/main/java/org/apache/aries/proxy/impl/AbstractProxyManager.java?ref=01a01f2abff1e4c0e5794fc69036bb2265d72628",
                "patch": "@@ -70,7 +70,7 @@ public final Object createProxy(Bundle clientBundle, Collection<Class<?>> classe\n   \n   public final boolean isProxy(Object proxy)\n   {\n-    return (getInvocationHandler(proxy) instanceof ProxyHandler);\n+    return (proxy != null && getInvocationHandler(proxy) instanceof ProxyHandler);\n   }\n   \n   protected abstract Object createNewProxy(Bundle clientBundle, Collection<Class<?>> classes,",
                "deletions": 1
            }
        ]
    },
    {
        "repo": "aries",
        "message": "ARIES-566: NPE when generating repository.xml for a wrong bundle location\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/aries/trunk@1067152 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/aries/commit/2c6944521ef24cdf926d89423fca5af43f75ca60",
        "parent": "https://github.com/apache/aries/commit/ffd692b010b8f04260173b2085917759b00f96b9",
        "bug_id": "aries_47",
        "file": [
            {
                "sha": "c281f3791337403d972bae7c21088ba5f5d7ba08",
                "filename": "application/application-itests/src/test/java/org/apache/aries/application/runtime/itests/OBRResolverAdvancedTest.java",
                "blob_url": "https://github.com/apache/aries/blob/2c6944521ef24cdf926d89423fca5af43f75ca60/application/application-itests/src/test/java/org/apache/aries/application/runtime/itests/OBRResolverAdvancedTest.java",
                "raw_url": "https://github.com/apache/aries/raw/2c6944521ef24cdf926d89423fca5af43f75ca60/application/application-itests/src/test/java/org/apache/aries/application/runtime/itests/OBRResolverAdvancedTest.java",
                "status": "modified",
                "changes": 8,
                "additions": 8,
                "contents_url": "https://api.github.com/repos/apache/aries/contents/application/application-itests/src/test/java/org/apache/aries/application/runtime/itests/OBRResolverAdvancedTest.java?ref=2c6944521ef24cdf926d89423fca5af43f75ca60",
                "patch": "@@ -50,6 +50,7 @@\n import org.apache.aries.application.management.spi.repository.RepositoryGenerator;\r\n import org.apache.aries.application.modelling.ModelledResource;\r\n import org.apache.aries.application.modelling.ModelledResourceManager;\r\n+import org.apache.aries.application.modelling.ModellerException;\r\n import org.apache.aries.application.utils.AppConstants;\r\n import org.apache.aries.application.utils.filesystem.FileSystem;\r\n import org.apache.aries.application.utils.manifest.ManifestHeaderProcessor;\r\n@@ -261,6 +262,13 @@ public void testDemoAppResolveFail() throws ResolverException, Exception\n     \r\n   }\r\n   \r\n+  @Test(expected=ModellerException.class)\r\n+  public void testModellerException() throws Exception\r\n+  {\r\n+    //aa.jar does not exist\r\n+    generateOBRRepoXML(false, \"aa.jar\");\r\n+  }\r\n+  \r\n   @Test\r\n   public void testDemoApp() throws Exception \r\n   {\r",
                "deletions": 0
            }
        ]
    },
    {
        "repo": "aries",
        "message": "ARIES-566: NPE when generating repository.xml for a wrong bundle location\n\ngit-svn-id: https://svn.apache.org/repos/asf/aries/trunk@1067150 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/aries/commit/ffd692b010b8f04260173b2085917759b00f96b9",
        "parent": "https://github.com/apache/aries/commit/a02f1b5422605305904f748f940ee33d3b9d965e",
        "bug_id": "aries_48",
        "file": [
            {
                "sha": "854d67045533cf9a50dbe424bd1ba6b0e6e2a79d",
                "filename": "application/application-modeller/src/main/java/org/apache/aries/application/modelling/impl/ModelledResourceManagerImpl.java",
                "blob_url": "https://github.com/apache/aries/blob/ffd692b010b8f04260173b2085917759b00f96b9/application/application-modeller/src/main/java/org/apache/aries/application/modelling/impl/ModelledResourceManagerImpl.java",
                "raw_url": "https://github.com/apache/aries/raw/ffd692b010b8f04260173b2085917759b00f96b9/application/application-modeller/src/main/java/org/apache/aries/application/modelling/impl/ModelledResourceManagerImpl.java",
                "status": "modified",
                "changes": 315,
                "additions": 163,
                "contents_url": "https://api.github.com/repos/apache/aries/contents/application/application-modeller/src/main/java/org/apache/aries/application/modelling/impl/ModelledResourceManagerImpl.java?ref=ffd692b010b8f04260173b2085917759b00f96b9",
                "patch": "@@ -48,163 +48,174 @@\n import org.apache.aries.application.modelling.ParsedServiceElements;\n import org.apache.aries.application.modelling.ParserProxy;\n import org.apache.aries.application.modelling.internal.BundleBlueprintParser;\n+import org.apache.aries.application.modelling.internal.MessageUtil;\n import org.apache.aries.application.utils.manifest.BundleManifest;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n \n \n public class ModelledResourceManagerImpl implements ModelledResourceManager\n {\n-  private Logger _logger = LoggerFactory.getLogger(ModelledResourceManagerImpl.class);\n-  private ParserProxy _parserProxy;\n-  private ModellingManager _modellingManager;\n-  \n-  public void setModellingManager (ModellingManager m) { \n-    _modellingManager = m;\n-  }\n-  \n-  public void setParserProxy (ParserProxy p) { \n-    _parserProxy = p;\n-  }\n-  public ParserProxy getParserProxy()\n-  {\n-\t  return _parserProxy;\n-  }\n-  \n-\n-\n-  /**\n-   * For a given file, which we know to be a bundle, parse out all the\n-   * service, reference and reference-list elements. This method will return\n-   * all such services, including anonymous ones, \n-   * but should not return indistinguishable duplicates. \n-   * @param archive CommonArchive. The caller is responsible for closing this afterwards. \n-   * @return ParsedServiceElementsImpl \n-   * @throws OpenFailureException \n-   */\n-  @Override\n-  public ParsedServiceElements getServiceElements (IDirectory archive) throws ModellerException { \n-\n-    _logger.debug(LOG_ENTRY,\"getServiceElements\", archive );\n-\n-    Set<ExportedService> services = new HashSet<ExportedService>();\n-    Set<ImportedService> references = new HashSet<ImportedService>();\n-    try { \n-      Collection<IFile> blueprints = findBlueprints(archive);\n-      InputStream is = null;\n-      for (IFile bpFile : blueprints) {\n-        URL url = bpFile.toURL();\n-        URLConnection conn = url.openConnection();\n-        is = conn.getInputStream();\n-        \n-        try {\n-          ParsedServiceElements pse = getParserProxy().parseAllServiceElements(is);\n-          services.addAll(pse.getServices());\n-          references.addAll(pse.getReferences());\n-\n-        } finally {\n-          if (is != null) {\n-            is.close();\n-          }\n-        }\n-      }\n-    } catch (URISyntaxException e) {\n-      ModellerException m = new ModellerException(e);\n-      _logger.debug(LOG_EXIT, \"getServiceElements\", m);\n-      throw m;\n-    } catch (IOException e) {\n-      ModellerException m = new ModellerException(e);\n-      _logger.debug(LOG_EXIT, \"getServiceElements\", m);\n-      throw m;\n-    } catch (Exception e) {\n-      ModellerException m = new ModellerException(e);\n-      _logger.debug(LOG_EXIT, \"getServiceElements\", m);\n-      throw m;\n-    } \n-    ParsedServiceElements result = _modellingManager.getParsedServiceElements(services, references);\n-    _logger.debug(LOG_EXIT, \"getServiceElements\", result);\n-    return result;\n-  }\n-\n-  @Override\n-  public ModelledResource getModelledResource(String uri, IDirectory bundle) throws ModellerException{\n-    _logger.debug(LOG_ENTRY, \"getModelledResource\", new Object[]{uri, bundle});\n-    ParsedServiceElements pse = getServiceElements(bundle);\n-\n-    BundleManifest bm = BundleManifest.fromBundle(new File(bundle.toString()));\n-    Attributes attributes = bm.getRawAttributes();\n-    ModelledResource mbi;\n-    try {\n-      mbi = _modellingManager.getModelledResource(uri, attributes, pse.getReferences(), pse.getServices());\n-    } catch (InvalidAttributeException iae) {\n-      throw new ModellerException(iae);\n-    }\n-    _logger.debug(LOG_EXIT, \"getModelledResource\", mbi);\n-    return mbi;\n-  }\n-\n-  /**\n-   * Helper method to pass a single bundle into findBlueprints \n-   * @param oneBundle a single bundle\n-   * @return Files for all the blueprint files within the bundle\n-   * @throws URISyntaxException\n-   * @throws IOException\n-   * @throws OpenFailureException\n-   */\n-  private Collection<IFile> findBlueprints (IDirectory oneBundle) \n-  throws  IOException, URISyntaxException\n-  {\n-    _logger.debug(LOG_ENTRY, \"findBlueprints\", oneBundle);\n-    Set<IDirectory> archiveSet = new HashSet<IDirectory>();\n-    archiveSet.add(oneBundle);\n-    Collection<IFile> result = findBlueprints (archiveSet);\n-    _logger.debug(LOG_EXIT, \"findBlueprints\", result);\n-    return result;\n-  }\n-\n-  /**\n-   * Locate all blueprint xml files located within a set of bundles. Typically, call findApplicationBundles()\n-   * first to determine which bundles within an EBA fall within the range of the Application-Content header. \n-   * (See the comment on that method). \n-   * @param applicationBundles\n-   * @return A Collection of blue print files\n-   * @throws URISyntaxException\n-   * @throws IOException\n-   * @throws OpenFailureException\n-   */\n-  private Collection<IFile> findBlueprints(Collection<IDirectory> applicationBundles)\n-  throws IOException, URISyntaxException\n-  {\n-    _logger.debug(LOG_ENTRY, \"findBlueprints\", applicationBundles);\n-    Collection<IFile> blueprints = new ArrayList<IFile>();\n-    for (IDirectory appBundle : applicationBundles) {\n-      if (appBundle != null) {\n-        BundleManifest bundleMf = BundleManifest.fromBundle(appBundle);\n-        BundleBlueprintParser bpParser = new BundleBlueprintParser(bundleMf);\n-        List<IFile> files = appBundle.listAllFiles();\n-        Iterator<IFile> it = files.iterator();\n-        while (it.hasNext()) {\n-          IFile file = (IFile) it.next();         \n-          String directoryFullPath = file.getName(); \n-          String directoryName = \"\";\n-          String fileName = \"\";\n-          if (directoryFullPath.lastIndexOf(\"/\") != -1) {\n-            directoryName = directoryFullPath.substring(0, directoryFullPath.lastIndexOf(\"/\"));\n-            fileName = directoryFullPath.substring(directoryFullPath.lastIndexOf(\"/\") + 1);\n-          } else {\n-            if (file.isFile()) {\n-              directoryName=\"\";\n-              fileName = directoryFullPath;\n-            } \n-\n-          }\n-          if (bpParser.isBPFile(directoryName, fileName)) {\n-            blueprints.add(file);\n-          }\n-        }\n-      }\n-    }\n-    _logger.debug(LOG_EXIT, \"findBlueprints\", blueprints);\n-    return blueprints;\n-  }\n+\tprivate Logger _logger = LoggerFactory.getLogger(ModelledResourceManagerImpl.class);\n+\tprivate ParserProxy _parserProxy;\n+\tprivate ModellingManager _modellingManager;\n+\n+\tpublic void setModellingManager (ModellingManager m) { \n+\t\t_modellingManager = m;\n+\t}\n+\n+\tpublic void setParserProxy (ParserProxy p) { \n+\t\t_parserProxy = p;\n+\t}\n+\tpublic ParserProxy getParserProxy()\n+\t{\n+\t\treturn _parserProxy;\n+\t}\n+\n+\n+\n+\t/**\n+\t * For a given file, which we know to be a bundle, parse out all the\n+\t * service, reference and reference-list elements. This method will return\n+\t * all such services, including anonymous ones, \n+\t * but should not return indistinguishable duplicates. \n+\t * @param archive CommonArchive. The caller is responsible for closing this afterwards. \n+\t * @return ParsedServiceElementsImpl \n+\t * @throws OpenFailureException \n+\t */\n+\t@Override\n+\tpublic ParsedServiceElements getServiceElements (IDirectory archive) throws ModellerException { \n+\n+\t\t_logger.debug(LOG_ENTRY,\"getServiceElements\", archive );\n+\n+\t\tSet<ExportedService> services = new HashSet<ExportedService>();\n+\t\tSet<ImportedService> references = new HashSet<ImportedService>();\n+\t\ttry { \n+\t\t\tCollection<IFile> blueprints = findBlueprints(archive);\n+\t\t\tInputStream is = null;\n+\t\t\tfor (IFile bpFile : blueprints) {\n+\t\t\t\tURL url = bpFile.toURL();\n+\t\t\t\tURLConnection conn = url.openConnection();\n+\t\t\t\tis = conn.getInputStream();\n+\n+\t\t\t\ttry {\n+\t\t\t\t\tParsedServiceElements pse = getParserProxy().parseAllServiceElements(is);\n+\t\t\t\t\tservices.addAll(pse.getServices());\n+\t\t\t\t\treferences.addAll(pse.getReferences());\n+\n+\t\t\t\t} finally {\n+\t\t\t\t\tif (is != null) {\n+\t\t\t\t\t\tis.close();\n+\t\t\t\t\t}\n+\t\t\t\t}\n+\t\t\t}\n+\t\t} catch (URISyntaxException e) {\n+\t\t\tModellerException m = new ModellerException(e);\n+\t\t\t_logger.debug(LOG_EXIT, \"getServiceElements\", m);\n+\t\t\tthrow m;\n+\t\t} catch (IOException e) {\n+\t\t\tModellerException m = new ModellerException(e);\n+\t\t\t_logger.debug(LOG_EXIT, \"getServiceElements\", m);\n+\t\t\tthrow m;\n+\t\t} catch (Exception e) {\n+\t\t\tModellerException m = new ModellerException(e);\n+\t\t\t_logger.debug(LOG_EXIT, \"getServiceElements\", m);\n+\t\t\tthrow m;\n+\t\t} \n+\t\tParsedServiceElements result = _modellingManager.getParsedServiceElements(services, references);\n+\t\t_logger.debug(LOG_EXIT, \"getServiceElements\", result);\n+\t\treturn result;\n+\t}\n+\n+\t@Override\n+\tpublic ModelledResource getModelledResource(String uri, IDirectory bundle) throws ModellerException{\n+\t\t_logger.debug(LOG_ENTRY, \"getModelledResource\", new Object[]{uri, bundle});\n+\n+\t\tif ((bundle != null) && (new File(bundle.toString()).exists())) {\n+\t\t\tParsedServiceElements pse = getServiceElements(bundle);\n+\t\t\tBundleManifest bm = BundleManifest.fromBundle(new File(bundle.toString()));\n+\t\t\tAttributes attributes = bm.getRawAttributes();\n+\t\t\tModelledResource mbi = null;\n+\t\t\ttry {\n+\t\t\t\tmbi = _modellingManager.getModelledResource(uri, attributes, pse.getReferences(), pse.getServices());\n+\t\t\t} catch (InvalidAttributeException iae) {\t\t\t\n+\t\t\t\tModellerException me = new ModellerException(iae);\n+\t\t\t\t_logger.debug(LOG_EXIT, \"getModelledResource\", me);\t\n+\t\t\t\tthrow me;\n+\t\t\t}\n+\t\t\t_logger.debug(LOG_EXIT, \"getModelledResource\", mbi);\n+\t\t\treturn mbi;\n+\t\t} else {\n+\t\t\t// The bundle does not exist\n+\t\t\tModellerException me = new ModellerException(MessageUtil.getMessage(\"INVALID_BUNDLE_LOCATION\", bundle));\n+\t\t\t_logger.debug(LOG_EXIT, \"getModelledResource\", me);\t\t\t\n+\t\t\tthrow me;\n+\t\t}\n+\n+\t}\n+\n+\t/**\n+\t * Helper method to pass a single bundle into findBlueprints \n+\t * @param oneBundle a single bundle\n+\t * @return Files for all the blueprint files within the bundle\n+\t * @throws URISyntaxException\n+\t * @throws IOException\n+\t * @throws OpenFailureException\n+\t */\n+\tprivate Collection<IFile> findBlueprints (IDirectory oneBundle) \n+\tthrows  IOException, URISyntaxException\n+\t{\n+\t\t_logger.debug(LOG_ENTRY, \"findBlueprints\", oneBundle);\n+\t\tSet<IDirectory> archiveSet = new HashSet<IDirectory>();\n+\t\tarchiveSet.add(oneBundle);\n+\t\tCollection<IFile> result = findBlueprints (archiveSet);\n+\t\t_logger.debug(LOG_EXIT, \"findBlueprints\", result);\n+\t\treturn result;\n+\t}\n+\n+\t/**\n+\t * Locate all blueprint xml files located within a set of bundles. Typically, call findApplicationBundles()\n+\t * first to determine which bundles within an EBA fall within the range of the Application-Content header. \n+\t * (See the comment on that method). \n+\t * @param applicationBundles\n+\t * @return A Collection of blue print files\n+\t * @throws URISyntaxException\n+\t * @throws IOException\n+\t * @throws OpenFailureException\n+\t */\n+\tprivate Collection<IFile> findBlueprints(Collection<IDirectory> applicationBundles)\n+\tthrows IOException, URISyntaxException\n+\t{\n+\t\t_logger.debug(LOG_ENTRY, \"findBlueprints\", applicationBundles);\n+\t\tCollection<IFile> blueprints = new ArrayList<IFile>();\n+\t\tfor (IDirectory appBundle : applicationBundles) {\n+\t\t\tif (appBundle != null) {\n+\t\t\t\tBundleManifest bundleMf = BundleManifest.fromBundle(appBundle);\n+\t\t\t\tBundleBlueprintParser bpParser = new BundleBlueprintParser(bundleMf);\n+\t\t\t\tList<IFile> files = appBundle.listAllFiles();\n+\t\t\t\tIterator<IFile> it = files.iterator();\n+\t\t\t\twhile (it.hasNext()) {\n+\t\t\t\t\tIFile file = (IFile) it.next();         \n+\t\t\t\t\tString directoryFullPath = file.getName(); \n+\t\t\t\t\tString directoryName = \"\";\n+\t\t\t\t\tString fileName = \"\";\n+\t\t\t\t\tif (directoryFullPath.lastIndexOf(\"/\") != -1) {\n+\t\t\t\t\t\tdirectoryName = directoryFullPath.substring(0, directoryFullPath.lastIndexOf(\"/\"));\n+\t\t\t\t\t\tfileName = directoryFullPath.substring(directoryFullPath.lastIndexOf(\"/\") + 1);\n+\t\t\t\t\t} else {\n+\t\t\t\t\t\tif (file.isFile()) {\n+\t\t\t\t\t\t\tdirectoryName=\"\";\n+\t\t\t\t\t\t\tfileName = directoryFullPath;\n+\t\t\t\t\t\t} \n+\n+\t\t\t\t\t}\n+\t\t\t\t\tif (bpParser.isBPFile(directoryName, fileName)) {\n+\t\t\t\t\t\tblueprints.add(file);\n+\t\t\t\t\t}\n+\t\t\t\t}\n+\t\t\t}\n+\t\t}\n+\t\t_logger.debug(LOG_EXIT, \"findBlueprints\", blueprints);\n+\t\treturn blueprints;\n+\t}\n }",
                "deletions": 152
            },
            {
                "sha": "1d01a8e4b7a5e0616ea9fbcc0e5981848ff6774b",
                "filename": "application/application-modeller/src/main/resources/org/apache/aries/application/modelling/messages/APPModellingMessages.properties",
                "blob_url": "https://github.com/apache/aries/blob/ffd692b010b8f04260173b2085917759b00f96b9/application/application-modeller/src/main/resources/org/apache/aries/application/modelling/messages/APPModellingMessages.properties",
                "raw_url": "https://github.com/apache/aries/raw/ffd692b010b8f04260173b2085917759b00f96b9/application/application-modeller/src/main/resources/org/apache/aries/application/modelling/messages/APPModellingMessages.properties",
                "status": "modified",
                "changes": 17,
                "additions": 9,
                "contents_url": "https://api.github.com/repos/apache/aries/contents/application/application-modeller/src/main/resources/org/apache/aries/application/modelling/messages/APPModellingMessages.properties?ref=ffd692b010b8f04260173b2085917759b00f96b9",
                "patch": "@@ -17,11 +17,12 @@\n # under the License.\n #\n \n-MORE_THAN_ONE_FRAG_HOST=APPMODELLING0001W: An internal error occurred. A bundle fragment manifest must define exactly one Fragment-Host entry. The following entry was found {0}.\n-TOO_MANY_SYM_NAMES=APPMODELLING0002W: An internal error occurred. A bundle manifest must contain exactly one Bundle-SymbolicName entry. The following entry was found {0}.\n-INCORRECT_MANDATORY_HEADERS=APPMODELLING0003W: An internal error occurred. A bundle with symbolic name {0} and manifest version {1} was unable to be processed.\n-TOO_MANY_CB_SYM_NAMES=APPMODELLING0004W: An internal error occurred. A composite bundle manifest must contain exactly one Bundle-SymbolicName entry. The following entry was found {0}.\n-INCORRECT_CB_MANDATORY_HEADERS=APPMODELLING0005W: An internal error occurred. A composite bundle with symbolic name {0} and manifest version {1} was unable to be processed.\n-TOO_MANY_FRAG_HOSTS=APPMODELLING0006W: An internal error occurred. A bundle fragment manifest must define exactly one Fragment-Host entry. The following entry was found {0}.\n-INCOMPATIBLE_PACKAGE_VERSION_REQUIREMENTS=APPMODELLING0007W: The asset {0} cannot be resolved. It has incompatible version requirements on the following packages: {1}.\n-INVALID_PACKAGE_REQUIREMENT_ATTRIBUTES=APPMODELLING0008W: The asset {0} cannot be resolved. The attribute {1} on an import for package {2} cannot be satisfied at deployment.\n+MORE_THAN_ONE_FRAG_HOST=APPMODELLING0001E: An internal error occurred. A bundle fragment manifest must define exactly one Fragment-Host entry. The following entry was found {0}.\n+TOO_MANY_SYM_NAMES=APPMODELLING0002E: An internal error occurred. A bundle manifest must contain exactly one Bundle-SymbolicName entry. The following entry was found {0}.\n+INCORRECT_MANDATORY_HEADERS=APPMODELLING0003E: An internal error occurred. A bundle with symbolic name {0} and manifest version {1} was unable to be processed.\n+TOO_MANY_CB_SYM_NAMES=APPMODELLING0004E: An internal error occurred. A composite bundle manifest must contain exactly one Bundle-SymbolicName entry. The following entry was found {0}.\n+INCORRECT_CB_MANDATORY_HEADERS=APPMODELLING0005E: An internal error occurred. A composite bundle with symbolic name {0} and manifest version {1} was unable to be processed.\n+TOO_MANY_FRAG_HOSTS=APPMODELLING0006E: An internal error occurred. A bundle fragment manifest must define exactly one Fragment-Host entry. The following entry was found {0}.\n+INCOMPATIBLE_PACKAGE_VERSION_REQUIREMENTS=APPMODELLING0007E: The asset {0} cannot be resolved. It has incompatible version requirements on the following packages: {1}.\n+INVALID_PACKAGE_REQUIREMENT_ATTRIBUTES=APPMODELLING0008E: The asset {0} cannot be resolved. The attribute {1} on an import for package {2} cannot be satisfied at deployment.\n+INVALID_BUNDLE_LOCATION=APPMODELLING0009E: The Bundle {0} does not exist.\n\\ No newline at end of file",
                "deletions": 8
            }
        ]
    },
    {
        "repo": "aries",
        "message": "ARIES-411 fix Blog NPE when comment service isn't available - patch by Emily Jiang - also reformatted code to remove tabs\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/aries/trunk@999981 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/aries/commit/3772b99b38f4b5e24ab80a10ac10400ac3acc304",
        "parent": "https://github.com/apache/aries/commit/eebb386a87a7cbb55d3c5f864e30d0a4a0c7757f",
        "bug_id": "aries_49",
        "file": [
            {
                "sha": "06c5604fdf7c8d7c11da86a42d2b2d7e14c4267a",
                "filename": "samples/blog/blog-biz/src/main/java/org/apache/aries/samples/blog/biz/BloggingServiceImpl.java",
                "blob_url": "https://github.com/apache/aries/blob/3772b99b38f4b5e24ab80a10ac10400ac3acc304/samples/blog/blog-biz/src/main/java/org/apache/aries/samples/blog/biz/BloggingServiceImpl.java",
                "raw_url": "https://github.com/apache/aries/raw/3772b99b38f4b5e24ab80a10ac10400ac3acc304/samples/blog/blog-biz/src/main/java/org/apache/aries/samples/blog/biz/BloggingServiceImpl.java",
                "status": "modified",
                "changes": 197,
                "additions": 105,
                "contents_url": "https://api.github.com/repos/apache/aries/contents/samples/blog/blog-biz/src/main/java/org/apache/aries/samples/blog/biz/BloggingServiceImpl.java?ref=3772b99b38f4b5e24ab80a10ac10400ac3acc304",
                "patch": "@@ -20,6 +20,7 @@\n \r\n import java.text.ParseException;\r\n import java.util.Arrays;\r\n+import java.util.Collections;\r\n import java.util.List;\r\n \r\n import org.apache.aries.samples.blog.api.BlogAuthor;\r\n@@ -32,96 +33,108 @@\n \r\n /** Implementation of the BloggingService */\r\n public class BloggingServiceImpl implements BloggingService {\r\n-\tprivate BlogEntryManager blogEntryManager;\r\n-\tprivate BlogAuthorManager blogAuthorManager;\r\n-\tprivate BlogCommentManager blogCommentManager;\r\n-\r\n-\t// Injected via blueprint\r\n-\tpublic void setBlogEntryManager(BlogEntryManager blogPostManager) {\r\n-\t\tthis.blogEntryManager = blogPostManager;\r\n-\t}\r\n-\r\n-\t// Injected via blueprint\r\n-\tpublic void setBlogAuthorManager(BlogAuthorManager authorManager) {\r\n-\t\tthis.blogAuthorManager = authorManager;\r\n-\t}\r\n-\t\r\n-\t// Injected via blueprint\r\n-\tpublic void setBlogCommentManager(BlogCommentManager commentManager) {\r\n-\t\tthis.blogCommentManager = commentManager;\r\n-\t}\r\n-\r\n-\r\n-\tpublic String getBlogTitle() {\r\n-\t\treturn new BlogImpl().getBlogTitle();\r\n-\t}\r\n-\r\n-\tpublic BlogAuthor getBlogAuthor(String email) {\r\n-\t\treturn blogAuthorManager.getAuthor(email);\r\n-\t}\r\n-\r\n-\tpublic void createBlogAuthor(String email, String nickName, String name,\r\n-\t\t\tString bio, String dob) {\r\n-\t\ttry {\r\n-\t\t\tblogAuthorManager.createAuthor(email, dob, name, nickName, bio);\r\n-\t\t} catch (ParseException e) {\r\n-\t\t\t// TODO Auto-generated catch block\r\n-\t\t\te.printStackTrace();\r\n-\t\t}\r\n-\t}\r\n-\r\n-\tpublic void updateBlogAuthor(String email, String nickName, String name,\r\n-\t\t\tString bio, String dob) {\r\n-\t\ttry {\r\n-\t\t\tblogAuthorManager.updateAuthor(email, dob, name, nickName, bio);\r\n-\t\t} catch (ParseException e) {\r\n-\t\t\t// TODO Auto-generated catch block\r\n-\t\t\te.printStackTrace();\r\n-\t\t}\r\n-\t}\r\n-\r\n-\tpublic BlogEntry getPost(long id) {\r\n-\t\treturn blogEntryManager.getBlogPost(id);\r\n-\t}\r\n-\r\n-\tpublic List<? extends BlogEntry> getBlogEntries(int firstPostIndex,\r\n-\t\t\tint noOfPosts) {\r\n-\t\treturn blogEntryManager.getBlogEntries(firstPostIndex, noOfPosts);\r\n-\r\n-\t}\r\n-\r\n-\tpublic List<? extends BlogEntry> getAllBlogEntries() {\r\n-\t\treturn blogEntryManager.getAllBlogEntries();\r\n-\t}\r\n-\r\n-\tpublic int getNoOfEntries() {\r\n-\t\treturn blogEntryManager.getNoOfPosts();\r\n-\t}\r\n-\r\n-\tpublic void createBlogEntry(String email, String title, String blogText,\r\n-\t\t\tString tags) {\r\n-\t\tblogEntryManager.createBlogPost(email, title, blogText, Arrays\r\n-\t\t\t\t.asList(tags.split(\",\")));\r\n-\t}\r\n-\r\n-\tpublic void createBlogComment(String comment, String authorEmail, long id) {\r\n-\t\tblogCommentManager.createComment(comment, authorEmail, id);\r\n-\t}\r\n-\r\n-\tpublic void deleteBlogComment(BlogComment comment) {\r\n-\t\tblogCommentManager.deleteComment(comment.getId());\r\n-\t}\r\n-\r\n-\tpublic List<? extends BlogComment> getCommentsForEntry(BlogEntry entry) {\r\n-\t\treturn blogCommentManager.getCommentsForPost(entry.getId());\r\n-\t}\r\n-\r\n-\tpublic BlogEntry getBlogEntry(long id) {\r\n-\t\treturn blogEntryManager.getBlogPost(id);\r\n-\t}\r\n-\t\r\n-\tpublic boolean isCommentingAvailable() {\r\n-\t\treturn blogCommentManager.isCommentingAvailable();\r\n-\r\n-\t}\r\n+    private BlogEntryManager blogEntryManager;\r\n+    private BlogAuthorManager blogAuthorManager;\r\n+    private BlogCommentManager blogCommentManager;\r\n+\r\n+    // Injected via blueprint\r\n+    public void setBlogEntryManager(BlogEntryManager blogPostManager) {\r\n+        this.blogEntryManager = blogPostManager;\r\n+    }\r\n+\r\n+    // Injected via blueprint\r\n+    public void setBlogAuthorManager(BlogAuthorManager authorManager) {\r\n+        this.blogAuthorManager = authorManager;\r\n+    }\r\n+\r\n+    // Injected via blueprint\r\n+    public void setBlogCommentManager(BlogCommentManager commentManager) {\r\n+        this.blogCommentManager = commentManager;\r\n+    }\r\n+\r\n+\r\n+    public String getBlogTitle() {\r\n+        return new BlogImpl().getBlogTitle();\r\n+    }\r\n+\r\n+    public BlogAuthor getBlogAuthor(String email) {\r\n+        return blogAuthorManager.getAuthor(email);\r\n+    }\r\n+\r\n+    public void createBlogAuthor(String email, String nickName, String name,\r\n+                                 String bio, String dob) {\r\n+        try {\r\n+            blogAuthorManager.createAuthor(email, dob, name, nickName, bio);\r\n+        }\r\n+        catch (ParseException e) {\r\n+            // TODO Auto-generated catch block\r\n+            e.printStackTrace();\r\n+        }\r\n+    }\r\n+\r\n+    public void updateBlogAuthor(String email, String nickName, String name,\r\n+                                 String bio, String dob) {\r\n+        try {\r\n+            blogAuthorManager.updateAuthor(email, dob, name, nickName, bio);\r\n+        }\r\n+        catch (ParseException e) {\r\n+            // TODO Auto-generated catch block\r\n+            e.printStackTrace();\r\n+        }\r\n+    }\r\n+\r\n+    public BlogEntry getPost(long id) {\r\n+        return blogEntryManager.getBlogPost(id);\r\n+    }\r\n+\r\n+    public List<? extends BlogEntry> getBlogEntries(int firstPostIndex,\r\n+                                                    int noOfPosts) {\r\n+        return blogEntryManager.getBlogEntries(firstPostIndex, noOfPosts);\r\n+\r\n+    }\r\n+\r\n+    public List<? extends BlogEntry> getAllBlogEntries() {\r\n+        return blogEntryManager.getAllBlogEntries();\r\n+    }\r\n+\r\n+    public int getNoOfEntries() {\r\n+        return blogEntryManager.getNoOfPosts();\r\n+    }\r\n+\r\n+    public void createBlogEntry(String email, String title, String blogText,\r\n+                                String tags) {\r\n+        blogEntryManager.createBlogPost(email, title, blogText, Arrays\r\n+                                        .asList(tags.split(\",\")));\r\n+    }\r\n+\r\n+    public void createBlogComment(String comment, String authorEmail, long id) {\r\n+        if (blogCommentManager != null) {\r\n+            blogCommentManager.createComment(comment, authorEmail, id);\r\n+        }\r\n+    }\r\n+\r\n+    public void deleteBlogComment(BlogComment comment) {\r\n+        if (blogCommentManager != null) {\r\n+            blogCommentManager.deleteComment(comment.getId());\r\n+        }\r\n+    }\r\n+\r\n+    public List<? extends BlogComment> getCommentsForEntry(BlogEntry entry) {\r\n+        if (blogCommentManager != null) {\r\n+            return blogCommentManager.getCommentsForPost(entry.getId());\r\n+        }\r\n+        return Collections.<BlogComment>emptyList();\r\n+    }\r\n+\r\n+    public BlogEntry getBlogEntry(long id) {\r\n+        return blogEntryManager.getBlogPost(id);\r\n+    }\r\n+\r\n+    public boolean isCommentingAvailable() {\r\n+        if (blogCommentManager != null) {\r\n+            return blogCommentManager.isCommentingAvailable();\r\n+        }\r\n+        return false;\r\n+\r\n+    }\r\n }\n\\ No newline at end of file",
                "deletions": 92
            }
        ]
    },
    {
        "repo": "aries",
        "message": "Bundle event hook NPE and unresolved persisted subsystems.\n\nFixed NPE in bundle event hook when processing asynchronous installed events whose bundle or origin bundle revision\nwas null because the bundle was uninstalled.\n\nFixed issue where persisted subsystems were registered in the RESOLVED state before they were actually resolved.\n\nAdded bundle event hook tests for null bundle and origin bundle revisions when processing asynchronous events.\n\nFixed issue in itests where subsystems other than root could be returned from utility method.\n\ngit-svn-id: https://svn.apache.org/repos/asf/aries/trunk@1443681 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/aries/commit/0ef78dc80e3b9ab1e160359cb9f9144fd0ed6b5b",
        "parent": "https://github.com/apache/aries/commit/5d0bcf8055b68005206d80e8cadb95a102aa4dd1",
        "bug_id": "aries_50",
        "file": [
            {
                "sha": "2e774176f3bd7096804aded92cd545d53e4776f8",
                "filename": "subsystem/subsystem-core/src/main/java/org/apache/aries/subsystem/core/internal/BundleEventHook.java",
                "blob_url": "https://github.com/apache/aries/blob/0ef78dc80e3b9ab1e160359cb9f9144fd0ed6b5b/subsystem/subsystem-core/src/main/java/org/apache/aries/subsystem/core/internal/BundleEventHook.java",
                "raw_url": "https://github.com/apache/aries/raw/0ef78dc80e3b9ab1e160359cb9f9144fd0ed6b5b/subsystem/subsystem-core/src/main/java/org/apache/aries/subsystem/core/internal/BundleEventHook.java",
                "status": "modified",
                "changes": 26,
                "additions": 23,
                "contents_url": "https://api.github.com/repos/apache/aries/contents/subsystem/subsystem-core/src/main/java/org/apache/aries/subsystem/core/internal/BundleEventHook.java?ref=0ef78dc80e3b9ab1e160359cb9f9144fd0ed6b5b",
                "patch": "@@ -15,6 +15,7 @@\n \r\n import java.util.ArrayList;\r\n import java.util.Collection;\r\n+import java.util.Collections;\r\n import java.util.List;\r\n import java.util.concurrent.ConcurrentHashMap;\r\n \r\n@@ -43,7 +44,7 @@ public BundleEventHook() {\n \tpublic void event(BundleEvent event, Collection<BundleContext> contexts) {\r\n \t\tif ((event.getType() & (BundleEvent.INSTALLED | BundleEvent.UNINSTALLED)) == 0)\r\n \t\t\treturn;\r\n-\t\t// Protected against deadlock when the bundle event hook receives an\r\n+\t\t// Protect against deadlock when the bundle event hook receives an\r\n \t\t// event before subsystems has fully initialized, in which case the\r\n \t\t// events are queued and processed once initialization is complete.\r\n \t\tsynchronized (this) {\r\n@@ -80,6 +81,12 @@ private Subsystems getSubsystems() {\n \t\treturn activator.getSubsystems();\r\n \t}\r\n \t\r\n+\t/*\r\n+\t * Note that because some events may be processed asynchronously, we can no\r\n+\t * longer rely on the guarantees that a synchronous event brings. For\r\n+\t * example, bundle revisions adapted from bundles included in events may be\r\n+\t * null.\r\n+\t */\r\n \tprivate void handleEvent(BundleEvent event) {\r\n \t\tswitch (event.getType()) {\r\n \t\t\tcase BundleEvent.INSTALLED:\r\n@@ -93,13 +100,22 @@ private void handleEvent(BundleEvent event) {\n \t\t}\r\n \t}\r\n \t\r\n+\t/*\r\n+\t * This method guards against an uninstalled origin bundle. Guards against a\r\n+\t * null bundle revision are done elsewhere. It is assumed the bundle\r\n+\t * revision is never null once we get here.\r\n+\t */\r\n \tprivate void handleExplicitlyInstalledBundleBundleContext(BundleRevision originRevision, BundleRevision bundleRevision) {\r\n \t\t// The bundle needs to be associated with all subsystems that are \r\n \t\t// associated with the bundle whose context was used to install the \r\n \t\t// bundle.\r\n \t\tCollection<BasicSubsystem> subsystems = getSubsystems().getSubsystemsReferencing(originRevision);\r\n \t\tif (subsystems.isEmpty())\r\n-\t\t\tthrow new IllegalStateException(\"Orphaned bundle revision detected: \" + originRevision);\r\n+\t\t\t// If subsystems does not know about the origin bundle for some\r\n+\t\t\t// reason (e.g., the event is being processed asynchronously\r\n+\t\t\t// and the origin bundle has been uninstalled), associate the\r\n+\t\t\t// installed bundle with the root subsystem.\r\n+\t\t\tsubsystems = Collections.singleton(getSubsystems().getRootSubsystem());\r\n \t\tfor (BasicSubsystem s : subsystems)\r\n \t\t\tUtils.installResource(bundleRevision, s);\r\n \t}\r\n@@ -124,13 +140,17 @@ private void handleInstalledEvent(BundleEvent event) {\n \t\tBundleRevision originRevision = origin.adapt(BundleRevision.class);\r\n \t\tBundle bundle = event.getBundle();\r\n \t\tBundleRevision bundleRevision = bundle.adapt(BundleRevision.class);\r\n+\t\tif (bundleRevision == null)\r\n+\t\t\t// The event is being processed asynchronously and the installed\r\n+\t\t\t// bundle has been uninstalled. Nothing we can do.\r\n+\t\t\treturn;\r\n \t\tbundleToRevision.put(bundle, bundleRevision);\r\n \t\t// Only handle explicitly installed bundles. An explicitly installed\r\n \t\t// bundle is a bundle that was installed using some other bundle's\r\n \t\t// BundleContext or using RegionDigraph.\r\n \t\tif (ThreadLocalSubsystem.get() != null)\r\n \t\t\treturn;\r\n-\t\tif (\"org.eclipse.equionox.region\".equals(origin.getSymbolicName()))\r\n+\t\tif (\"org.eclipse.equinox.region\".equals(origin.getSymbolicName()))\r\n \t\t\t// The bundle was installed using RegionDigraph.\r\n \t\t\thandleExplicitlyInstalledBundleRegionDigraph(origin, bundleRevision);\r\n \t\telse\r",
                "deletions": 3
            },
            {
                "sha": "3885fc6f72863c06f890a8ff9be267b338120dea",
                "filename": "subsystem/subsystem-core/src/main/java/org/apache/aries/subsystem/core/internal/SubsystemResourceInstaller.java",
                "blob_url": "https://github.com/apache/aries/blob/0ef78dc80e3b9ab1e160359cb9f9144fd0ed6b5b/subsystem/subsystem-core/src/main/java/org/apache/aries/subsystem/core/internal/SubsystemResourceInstaller.java",
                "raw_url": "https://github.com/apache/aries/raw/0ef78dc80e3b9ab1e160359cb9f9144fd0ed6b5b/subsystem/subsystem-core/src/main/java/org/apache/aries/subsystem/core/internal/SubsystemResourceInstaller.java",
                "status": "modified",
                "changes": 15,
                "additions": 9,
                "contents_url": "https://api.github.com/repos/apache/aries/contents/subsystem/subsystem-core/src/main/java/org/apache/aries/subsystem/core/internal/SubsystemResourceInstaller.java?ref=0ef78dc80e3b9ab1e160359cb9f9144fd0ed6b5b",
                "patch": "@@ -27,6 +27,8 @@\n import org.osgi.service.repository.RepositoryContent;\n import org.osgi.service.subsystem.Subsystem.State;\n \n+import com.sun.org.apache.bcel.internal.generic.GETSTATIC;\n+\n public class SubsystemResourceInstaller extends ResourceInstaller {\n \tpublic SubsystemResourceInstaller(Coordination coordination, Resource resource, BasicSubsystem subsystem) {\n \t\tsuper(coordination, resource, subsystem);\n@@ -83,17 +85,15 @@ public void failed(Coordination arg0) throws Exception {\n \t}\n \t\n \tprivate BasicSubsystem installAriesSubsystem(BasicSubsystem subsystem) throws Exception {\n-\t\t// If the state is null, this is a brand new subsystem. If the state is\n-\t\t// not null, this is a persisted subsystem. For brand new subsystems,\n-\t\t// an INSTALLING event must be propagated.\n-\t\tif (subsystem.getState() == null)\n-\t\t\tsubsystem.setState(State.INSTALLING);\n \t\taddChild(subsystem);\n \t\taddReference(subsystem);\n \t\taddConstituent(subsystem);\n \t\taddSubsystem(subsystem);\n \t\tinstallRegionContextBundle(subsystem);\n-\t\tActivator.getInstance().getSubsystemServiceRegistrar().register(subsystem, this.subsystem);\n+\t\t// This will emit the initial service event for INSTALLING subsystems.\n+\t\t// The first event for RESOLVED (i.e. persisted) subsystems is emitted later.\n+\t\tif (State.INSTALLING.equals(subsystem.getState()))\n+\t\t\tActivator.getInstance().getSubsystemServiceRegistrar().register(subsystem, this.subsystem);\n \t\tComparator<Resource> comparator = new InstallResourceComparator();\n \t\t// Install dependencies first...\n \t\tList<Resource> dependencies = new ArrayList<Resource>(subsystem.getResource().getInstallableDependencies());\n@@ -121,6 +121,9 @@ private BasicSubsystem installAriesSubsystem(BasicSubsystem subsystem) throws Ex\n \t\t// in which case an INSTALLED event must be propagated.\n \t\tif (State.INSTALLING.equals(subsystem.getState()))\n \t\t\tsubsystem.setState(State.INSTALLED);\n+\t\telse\n+\t\t\t// This is a persisted subsystem in the RESOLVED state. Emit the first service event.\n+\t\t\tActivator.getInstance().getSubsystemServiceRegistrar().register(subsystem, this.subsystem);\n \t\treturn subsystem;\n \t}\n \t",
                "deletions": 6
            },
            {
                "sha": "1425fc249c0c4f8ae6ecff1c75669fa721d30357",
                "filename": "subsystem/subsystem-itests/src/test/java/org/apache/aries/subsystem/itests/BundleEventHookTest.java",
                "blob_url": "https://github.com/apache/aries/blob/0ef78dc80e3b9ab1e160359cb9f9144fd0ed6b5b/subsystem/subsystem-itests/src/test/java/org/apache/aries/subsystem/itests/BundleEventHookTest.java",
                "raw_url": "https://github.com/apache/aries/raw/0ef78dc80e3b9ab1e160359cb9f9144fd0ed6b5b/subsystem/subsystem-itests/src/test/java/org/apache/aries/subsystem/itests/BundleEventHookTest.java",
                "status": "modified",
                "changes": 123,
                "additions": 123,
                "contents_url": "https://api.github.com/repos/apache/aries/contents/subsystem/subsystem-itests/src/test/java/org/apache/aries/subsystem/itests/BundleEventHookTest.java?ref=0ef78dc80e3b9ab1e160359cb9f9144fd0ed6b5b",
                "patch": "@@ -18,45 +18,65 @@\n  */\n package org.apache.aries.subsystem.itests;\n \n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertNotNull;\n import static org.junit.Assert.assertTrue;\n import static org.junit.Assert.fail;\n \n import java.io.FileInputStream;\n import java.io.IOException;\n+import java.util.HashMap;\n+import java.util.Map;\n import java.util.concurrent.ExecutorService;\n import java.util.concurrent.Executors;\n import java.util.concurrent.Future;\n import java.util.concurrent.TimeUnit;\n import java.util.concurrent.TimeoutException;\n import java.util.concurrent.atomic.AtomicBoolean;\n+import java.util.concurrent.atomic.AtomicReference;\n \n+import org.eclipse.equinox.region.RegionDigraph;\n import org.junit.Before;\n import org.junit.Test;\n import org.junit.runner.RunWith;\n import org.ops4j.pax.exam.junit.MavenConfiguredJUnit4TestRunner;\n import org.osgi.framework.Bundle;\n+import org.osgi.framework.BundleException;\n import org.osgi.framework.ServiceEvent;\n import org.osgi.framework.ServiceListener;\n+import org.osgi.framework.ServiceReference;\n+import org.osgi.framework.namespace.IdentityNamespace;\n+import org.osgi.service.subsystem.Subsystem;\n+import org.osgi.service.subsystem.SubsystemConstants;\n \n @RunWith(MavenConfiguredJUnit4TestRunner.class)\n public class BundleEventHookTest extends SubsystemTest {\n     /*\n \t * Bundle-SymbolicName: bundle.a.jar\n \t */\n \tprivate static final String BUNDLE_A = \"bundle.a.jar\";\n+\t/*\n+\t * Bundle-SymbolicName: bundle.b.jar\n+\t */\n+\tprivate static final String BUNDLE_B = \"bundle.b.jar\";\n \t\n \t@Before\n \tpublic static void createApplications() throws Exception {\n \t\tif (createdApplications) {\n \t\t\treturn;\n \t\t}\n \t\tcreateBundleA();\n+\t\tcreateBundleB();\n \t\tcreatedApplications = true;\n \t}\n \t\n \tprivate static void createBundleA() throws IOException {\n \t\tcreateBundle(BUNDLE_A);\n \t}\n+\t\n+\tprivate static void createBundleB() throws IOException {\n+\t\tcreateBundle(BUNDLE_B);\n+\t}\n     \n     /*\n      * See https://issues.apache.org/jira/browse/ARIES-982.\n@@ -124,4 +144,107 @@ public void run() {\n     \t\texecutor.shutdownNow();\n     \t}\n     }\n+    \n+    /*\n+     * Because bundle events are queued for later asynchronous processing while\n+     * the root subsystem is initializing, it is possible to see an installed\n+     * event for a bundle that has been uninstalled (i.e. the bundle revision\n+     * will be null). These events should be ignored.\n+     */\n+    @Test\n+    public void testIgnoreUninstalledBundleInAsyncInstalledEvent() throws Exception {\n+    \tfinal Bundle core = getSubsystemCoreBundle();\n+    \tcore.stop();\n+    \tfinal AtomicReference<Bundle> a = new AtomicReference<Bundle>();\n+    \tbundleContext.addServiceListener(\n+    \t\t\tnew ServiceListener() {\n+\t\t\t\t\t@Override\n+\t\t\t\t\tpublic void serviceChanged(ServiceEvent event) {\n+\t\t\t\t\t\tif ((event.getType() & (ServiceEvent.REGISTERED | ServiceEvent.MODIFIED)) == 0)\n+\t\t\t\t\t\t\treturn;\n+\t\t\t\t\t\tif (a.get() != null)\n+\t\t\t\t\t\t\t// We've been here before and already done what needs doing.\n+\t\t\t\t\t\t\treturn;\n+\t\t\t\t\t\tServiceReference<Subsystem> sr = (ServiceReference<Subsystem>)event.getServiceReference();\n+\t\t\t\t\t\tSubsystem s = bundleContext.getService(sr);\n+\t\t\t\t\t\ttry {\n+\t\t\t\t\t\t\t// Queue up the installed event.\n+\t\t\t\t\t\t\ta.set(core.getBundleContext().installBundle(BUNDLE_A, new FileInputStream(BUNDLE_A)));\n+\t\t\t\t\t\t\t// Ensure the bundle will be uninstalled before the event is processed.\n+\t\t\t\t\t\t\ta.get().uninstall();\n+\t\t\t\t\t\t}\n+\t\t\t\t\t\tcatch (Exception e) {\n+\t\t\t\t\t\t\te.printStackTrace();\n+\t\t\t\t\t\t}\n+\t\t\t\t\t}\n+    \t\t\t}, \n+    \t\t\t\"(&(objectClass=org.osgi.service.subsystem.Subsystem)(subsystem.id=0)(subsystem.state=RESOLVED))\");\n+    \ttry {\n+    \t\t// Before the fix, this would fail due to an NPE resulting from a\n+    \t\t// null bundle revision.\n+    \t\tcore.start();\n+    \t}\n+    \tcatch (BundleException e) {\n+    \t\te.printStackTrace();\n+    \t\tfail(\"Subsystems failed to handle an asynchronous bundle installed event after the bundle was uninstalled\");\n+    \t}\n+    \tassertBundleState(a.get(), Bundle.UNINSTALLED);\n+    \tSubsystem root = getRootSubsystem();\n+    \tassertState(Subsystem.State.ACTIVE, root);\n+    \tassertNotConstituent(root, a.get().getSymbolicName());\n+    }\n+    \n+    /*\n+     * Because bundle events are queued for later asynchronous processing while\n+     * the root subsystem is initializing, it is possible to see an installed\n+     * event whose origin bundle has been uninstalled (i.e. the origin bundle's\n+     * revision will be null). These events should result in the installed\n+     * bundle being associated with the root subsystem.\n+     */\n+    @Test\n+    public void testIgnoreUninstalledOriginBundleInAsyncInstalledEvent() throws Exception {\n+    \tfinal Bundle core = getSubsystemCoreBundle();\n+    \tcore.stop();\n+    \tfinal Bundle b = bundleContext.installBundle(BUNDLE_B, new FileInputStream(BUNDLE_B));\n+    \t// Ensure bundle B has a context.\n+    \tb.start();\n+    \tfinal AtomicReference<Bundle> a = new AtomicReference<Bundle>();\n+    \tbundleContext.addServiceListener(\n+    \t\t\tnew ServiceListener() {\n+\t\t\t\t\t@Override\n+\t\t\t\t\tpublic void serviceChanged(ServiceEvent event) {\n+\t\t\t\t\t\tif ((event.getType() & (ServiceEvent.REGISTERED | ServiceEvent.MODIFIED)) == 0)\n+\t\t\t\t\t\t\treturn;\n+\t\t\t\t\t\tif (a.get() != null)\n+\t\t\t\t\t\t\t// We've been here before and already done what needs doing.\n+\t\t\t\t\t\t\treturn;\n+\t\t\t\t\t\tServiceReference<Subsystem> sr = (ServiceReference<Subsystem>)event.getServiceReference();\n+\t\t\t\t\t\tSubsystem s = bundleContext.getService(sr);\n+\t\t\t\t\t\ttry {\n+\t\t\t\t\t\t\t// Queue up the installed event for bundle A using B's context.\n+\t\t\t\t\t\t\ta.set(b.getBundleContext().installBundle(BUNDLE_A, new FileInputStream(BUNDLE_A)));\n+\t\t\t\t\t\t\t// Ensure the origin bundle will be uninstalled before the event is processed.\n+\t\t\t\t\t\t\tb.uninstall();\n+\t\t\t\t\t\t}\n+\t\t\t\t\t\tcatch (Exception e) {\n+\t\t\t\t\t\t\te.printStackTrace();\n+\t\t\t\t\t\t}\n+\t\t\t\t\t}\n+    \t\t\t}, \n+    \t\t\t\"(&(objectClass=org.osgi.service.subsystem.Subsystem)(subsystem.id=0)(subsystem.state=RESOLVED))\");\n+    \ttry {\n+    \t\t// Before the fix, this would fail due to an NPE resulting from a\n+    \t\t// null bundle revision.\n+    \t\tcore.start();\n+    \t}\n+    \tcatch (BundleException e) {\n+    \t\te.printStackTrace();\n+    \t\tfail(\"Subsystems failed to handle an asynchronous bundle installed event after the origin bundle was uninstalled\");\n+    \t}\n+    \tassertBundleState(a.get(), Bundle.INSTALLED);\n+    \tassertBundleState(b, Bundle.UNINSTALLED);\n+    \tSubsystem root = getRootSubsystem();\n+    \tassertState(Subsystem.State.ACTIVE, root);\n+    \tassertConstituent(root, a.get().getSymbolicName());\n+    }\n }",
                "deletions": 0
            },
            {
                "sha": "0fdd683fdb2fae8f8596ef46e3e620b6d19ebd4f",
                "filename": "subsystem/subsystem-itests/src/test/java/org/apache/aries/subsystem/itests/SubsystemTest.java",
                "blob_url": "https://github.com/apache/aries/blob/0ef78dc80e3b9ab1e160359cb9f9144fd0ed6b5b/subsystem/subsystem-itests/src/test/java/org/apache/aries/subsystem/itests/SubsystemTest.java",
                "raw_url": "https://github.com/apache/aries/raw/0ef78dc80e3b9ab1e160359cb9f9144fd0ed6b5b/subsystem/subsystem-itests/src/test/java/org/apache/aries/subsystem/itests/SubsystemTest.java",
                "status": "modified",
                "changes": 2,
                "additions": 1,
                "contents_url": "https://api.github.com/repos/apache/aries/contents/subsystem/subsystem-itests/src/test/java/org/apache/aries/subsystem/itests/SubsystemTest.java?ref=0ef78dc80e3b9ab1e160359cb9f9144fd0ed6b5b",
                "patch": "@@ -715,7 +715,7 @@ protected AriesSubsystem getRootAriesSubsystem() {\n \t}\n \t\n \tprotected Subsystem getRootSubsystem() {\n-\t\treturn getOsgiService(Subsystem.class);\n+\t\treturn getOsgiService(Subsystem.class, \"(&(objectClass=org.osgi.service.subsystem.Subsystem)(subsystem.id=0))\", DEFAULT_TIMEOUT);\n \t}\n \t\n \tprotected Subsystem getRootSubsystemInState(Subsystem.State state, long timeout) throws InterruptedException {",
                "deletions": 1
            }
        ]
    },
    {
        "repo": "aries",
        "message": "[ARIES-990] NPE while establishing the root subsystem\n\nWhen populating the root subsystem, the bundle revision adapted from a bundle is now checked for null in case the\nbundle was uninstalled.\n\ngit-svn-id: https://svn.apache.org/repos/asf/aries/trunk@1428323 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/aries/commit/c44332baaf1691be30e30bd62afb1cc848ea9093",
        "parent": "https://github.com/apache/aries/commit/f6d2d6c301d70f10a78d60b9ce16a1f939466c63",
        "bug_id": "aries_51",
        "file": [
            {
                "sha": "39f28ee3f8fd9a106b39b28787f15aec218ac7e7",
                "filename": "subsystem/subsystem-core/src/main/java/org/apache/aries/subsystem/core/internal/Subsystems.java",
                "blob_url": "https://github.com/apache/aries/blob/c44332baaf1691be30e30bd62afb1cc848ea9093/subsystem/subsystem-core/src/main/java/org/apache/aries/subsystem/core/internal/Subsystems.java",
                "raw_url": "https://github.com/apache/aries/raw/c44332baaf1691be30e30bd62afb1cc848ea9093/subsystem/subsystem-core/src/main/java/org/apache/aries/subsystem/core/internal/Subsystems.java",
                "status": "modified",
                "changes": 3,
                "additions": 3,
                "contents_url": "https://api.github.com/repos/apache/aries/contents/subsystem/subsystem-core/src/main/java/org/apache/aries/subsystem/core/internal/Subsystems.java?ref=c44332baaf1691be30e30bd62afb1cc848ea9093",
                "patch": "@@ -168,6 +168,9 @@ private void populateRootSubsystem(BasicSubsystem root, Coordination coordinatio\n \t\tBundleContext context = Activator.getInstance().getBundleContext().getBundle(org.osgi.framework.Constants.SYSTEM_BUNDLE_LOCATION).getBundleContext();\n \t\tfor (Bundle bundle : context.getBundles()) {\n \t\t\tBundleRevision revision = bundle.adapt(BundleRevision.class);\n+\t\t\tif (revision == null)\n+\t\t\t\t// The bundle has been uninstalled. Do not process.\n+\t\t\t\tcontinue;\n \t\t\tif (!resourceReferences.getSubsystems(revision).isEmpty())\n \t\t\t\tcontinue;\n \t\t\tResourceInstaller.newInstance(coordination, revision, root).install();",
                "deletions": 0
            }
        ]
    },
    {
        "repo": "aries",
        "message": "ARIES-825: Update subsystems to latest Subsystem, Resolver, and Repository APIs.\n\n(1) Fixed NPE in SubsystemStreamResource when no subsystem manifest exists.\n(2) Reduced nested exceptions when starting a subsystem fails.\n(3) Added initial support for capabilities and requirements on subsystem resources.\n\ngit-svn-id: https://svn.apache.org/repos/asf/aries/trunk@1302667 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/aries/commit/7d307f907cace61b04fc6f4822b4502558c3e564",
        "parent": "https://github.com/apache/aries/commit/f5a660135a71c74cafa914c52030609ab40d060f",
        "bug_id": "aries_52",
        "file": [
            {
                "sha": "ef1e1ab10b04716b021b8c566850ff11481841c9",
                "filename": "subsystem/subsystem-core/src/main/java/org/apache/aries/subsystem/core/internal/AriesSubsystem.java",
                "blob_url": "https://github.com/apache/aries/blob/7d307f907cace61b04fc6f4822b4502558c3e564/subsystem/subsystem-core/src/main/java/org/apache/aries/subsystem/core/internal/AriesSubsystem.java",
                "raw_url": "https://github.com/apache/aries/raw/7d307f907cace61b04fc6f4822b4502558c3e564/subsystem/subsystem-core/src/main/java/org/apache/aries/subsystem/core/internal/AriesSubsystem.java",
                "status": "modified",
                "changes": 18,
                "additions": 11,
                "contents_url": "https://api.github.com/repos/apache/aries/contents/subsystem/subsystem-core/src/main/java/org/apache/aries/subsystem/core/internal/AriesSubsystem.java?ref=7d307f907cace61b04fc6f4822b4502558c3e564",
                "patch": "@@ -585,18 +585,19 @@ public synchronized void start() throws SubsystemException {\n \t\t\t\tstartResource(resource, coordination);\r\n \t\t\t}\r\n \t\t\tsetState(State.ACTIVE);\r\n-\t\t} catch (Exception e) {\r\n-\t\t\tcoordination.fail(e);\r\n+\t\t} catch (Throwable t) {\r\n+\t\t\tcoordination.fail(t);\r\n \t\t\t// TODO Need to reinstate complete isolation by disconnecting the\r\n \t\t\t// region and transition to INSTALLED.\r\n \t\t} finally {\r\n \t\t\ttry {\r\n \t\t\t\tcoordination.end();\r\n \t\t\t} catch (CoordinationException e) {\r\n-\t\t\t\tLOGGER.error(\r\n-\t\t\t\t\t\t\"An error occurred while starting a resource in subsystem \"\r\n-\t\t\t\t\t\t\t\t+ this, e);\r\n \t\t\t\tsetState(State.RESOLVED);\r\n+\t\t\t\tThrowable t = e.getCause();\r\n+\t\t\t\tif (t instanceof SubsystemException)\r\n+\t\t\t\t\tthrow (SubsystemException)t;\r\n+\t\t\t\tthrow new SubsystemException(t);\r\n \t\t\t}\r\n \t\t}\r\n \t}\r\n@@ -1044,9 +1045,12 @@ private void resolve() {\n \t\t\t// TODO Could avoid calling setState (and notifyAll) here and\r\n \t\t\t// avoid the need for a lock.\r\n \t\t\tsetState(State.RESOLVED);\r\n-\t\t} catch (Exception e) {\r\n+\t\t}\r\n+\t\tcatch (Throwable t) {\r\n \t\t\tsetState(State.INSTALLED);\r\n-\t\t\tthrow new SubsystemException(e);\r\n+\t\t\tif (t instanceof SubsystemException)\r\n+\t\t\t\tthrow (SubsystemException)t;\r\n+\t\t\tthrow new SubsystemException(t);\r\n \t\t}\r\n \t}\r\n \t\r",
                "deletions": 7
            },
            {
                "sha": "3074124b16dd5a77f9a5710743f0930284d89243",
                "filename": "subsystem/subsystem-core/src/main/java/org/apache/aries/subsystem/core/resource/SubsystemFileResource.java",
                "blob_url": "https://github.com/apache/aries/blob/7d307f907cace61b04fc6f4822b4502558c3e564/subsystem/subsystem-core/src/main/java/org/apache/aries/subsystem/core/resource/SubsystemFileResource.java",
                "raw_url": "https://github.com/apache/aries/raw/7d307f907cace61b04fc6f4822b4502558c3e564/subsystem/subsystem-core/src/main/java/org/apache/aries/subsystem/core/resource/SubsystemFileResource.java",
                "status": "modified",
                "changes": 74,
                "additions": 50,
                "contents_url": "https://api.github.com/repos/apache/aries/contents/subsystem/subsystem-core/src/main/java/org/apache/aries/subsystem/core/resource/SubsystemFileResource.java?ref=7d307f907cace61b04fc6f4822b4502558c3e564",
                "patch": "@@ -7,17 +7,21 @@\n import java.util.ArrayList;\r\n import java.util.Collections;\r\n import java.util.List;\r\n+import java.util.Map.Entry;\r\n import java.util.jar.Manifest;\r\n import java.util.regex.Matcher;\r\n import java.util.regex.Pattern;\r\n \r\n+import org.apache.aries.subsystem.core.archive.Header;\r\n+import org.apache.aries.subsystem.core.archive.HeaderFactory;\r\n+import org.apache.aries.subsystem.core.archive.SubsystemManifest;\r\n import org.apache.aries.subsystem.core.archive.SubsystemSymbolicNameHeader;\r\n+import org.apache.aries.subsystem.core.archive.SubsystemTypeHeader;\r\n+import org.apache.aries.subsystem.core.archive.SubsystemVersionHeader;\r\n import org.apache.aries.subsystem.core.internal.OsgiIdentityCapability;\r\n import org.apache.aries.util.filesystem.FileSystem;\r\n import org.apache.aries.util.filesystem.IDirectory;\r\n import org.apache.aries.util.manifest.ManifestProcessor;\r\n-import org.osgi.framework.Version;\r\n-import org.osgi.framework.namespace.IdentityNamespace;\r\n import org.osgi.resource.Capability;\r\n import org.osgi.resource.Requirement;\r\n import org.osgi.resource.Resource;\r\n@@ -32,49 +36,64 @@\n \tprivate final IDirectory directory;\r\n \tprivate final File file;\r\n \tprivate final String location;\r\n+\tprivate final List<Requirement> requirements;\r\n \t\r\n \tpublic SubsystemFileResource(File content) throws IOException {\r\n \t\tfile = content;\r\n \t\tdirectory = FileSystem.getFSRoot(content);\r\n \t\tManifest manifest = ManifestProcessor.obtainManifestFromAppDir(directory, \"OSGI-INF/DEPLOYMENT.MF\");\r\n \t\tif (manifest == null)\r\n \t\t\tmanifest = ManifestProcessor.obtainManifestFromAppDir(directory, \"OSGI-INF/SUBSYSTEM.MF\");\r\n-\t\tString symbolicName = null;\r\n-\t\tVersion version = Version.emptyVersion;\r\n-\t\tString type = SubsystemConstants.SUBSYSTEM_TYPE_APPLICATION;\r\n-\t\tif (manifest != null) {\r\n-\t\t\tString value = manifest.getMainAttributes().getValue(SubsystemConstants.SUBSYSTEM_SYMBOLICNAME);\r\n-\t\t\tif (value != null)\r\n-\t\t\t\tsymbolicName = new SubsystemSymbolicNameHeader(value).getSymbolicName();\r\n-\t\t\tvalue = manifest.getMainAttributes().getValue(SubsystemConstants.SUBSYSTEM_VERSION);\r\n-\t\t\tif (value != null)\r\n-\t\t\t\tversion = Version.parseVersion(value);\r\n-\t\t\tvalue = manifest.getMainAttributes().getValue(SubsystemConstants.SUBSYSTEM_TYPE);\r\n-\t\t\tif (value != null)\r\n-\t\t\t\ttype = value;\r\n-\t\t}\r\n+\t\t\r\n+\t\tString symbolicName = manifest == null ? null : manifest.getMainAttributes().getValue(SubsystemConstants.SUBSYSTEM_SYMBOLICNAME);\r\n \t\tMatcher matcher = PATTERN.matcher(content.getName());\r\n \t\tif (symbolicName == null) {\r\n \t\t\tif (!matcher.matches())\r\n \t\t\t\tthrow new IllegalArgumentException(\"No symbolic name\");\r\n \t\t\tsymbolicName = new SubsystemSymbolicNameHeader(matcher.group(1)).getSymbolicName();\r\n \t\t}\r\n-\t\tif (version == Version.emptyVersion && matcher.matches()) {\r\n+\t\tSubsystemManifest.Builder builder = new SubsystemManifest.Builder(symbolicName);\r\n+\t\tif (manifest != null)\r\n+\t\t\tfor (Entry<Object, Object> entry : manifest.getMainAttributes().entrySet()) {\r\n+\t\t\t\tString key = String.valueOf(entry.getKey());\r\n+\t\t\t\tif (key.equals(SubsystemManifest.SUBSYSTEM_SYMBOLICNAME))\r\n+\t\t\t\t\tcontinue;\r\n+\t\t\t\tbuilder.header(HeaderFactory.createHeader(key, String.valueOf(entry.getValue())));\r\n+\t\t\t}\r\n+\t\tSubsystemManifest subsystemManifest = builder.build();\r\n+\t\tSubsystemVersionHeader version = SubsystemVersionHeader.DEFAULT;\r\n+\t\tSubsystemTypeHeader type = SubsystemTypeHeader.DEFAULT;\r\n+\t\tHeader<?> value = subsystemManifest.getSubsystemVersionHeader();\r\n+\t\tif (value != null)\r\n+\t\t\tversion = (SubsystemVersionHeader)value;\r\n+\t\tvalue = subsystemManifest.getSubsystemTypeHeader();\r\n+\t\tif (value != null)\r\n+\t\t\ttype = (SubsystemTypeHeader)value;\r\n+\t\tif (version == SubsystemVersionHeader.DEFAULT && matcher.matches()) {\r\n \t\t\tString group = matcher.group(2);\r\n \t\t\tif (group != null)\r\n-\t\t\t\tversion = Version.parseVersion(group);\r\n+\t\t\t\tversion = new SubsystemVersionHeader(group);\r\n \t\t}\r\n-\t\tList<Capability> capabilities = new ArrayList<Capability>(1);\r\n-\t\tcapabilities.add(new OsgiIdentityCapability(this, symbolicName, version, type));\r\n+\t\tList<Capability> capabilities;\r\n+\t\tList<Requirement> requirements;\r\n+\t\tcapabilities = subsystemManifest.toCapabilities(this);\r\n+\t\trequirements = subsystemManifest.toRequirements(this);\r\n+\t\tcapabilities.add(new OsgiIdentityCapability(this, symbolicName, version.getVersion(), type.getType()));\r\n \t\tthis.capabilities = Collections.unmodifiableList(capabilities);\r\n-\t\tlocation = \"subsystem://?\" + SubsystemConstants.SUBSYSTEM_SYMBOLICNAME + '=' + symbolicName + '&' + SubsystemConstants.SUBSYSTEM_VERSION + '=' + version;\r\n+\t\tthis.requirements = Collections.unmodifiableList(requirements);\r\n+\t\tlocation = \"subsystem://?\" + SubsystemConstants.SUBSYSTEM_SYMBOLICNAME + '=' + symbolicName + '&' + SubsystemConstants.SUBSYSTEM_VERSION + '=' + version.getVersion();\r\n \t}\r\n \t\r\n \t@Override\r\n \tpublic List<Capability> getCapabilities(String namespace) {\r\n-\t\tif (namespace == null || IdentityNamespace.IDENTITY_NAMESPACE.equals(namespace))\r\n+\t\tif (namespace == null)\r\n \t\t\treturn capabilities;\r\n-\t\treturn Collections.emptyList();\r\n+\t\tArrayList<Capability> result = new ArrayList<Capability>(capabilities.size());\r\n+\t\tfor (Capability capability : capabilities)\r\n+\t\t\tif (namespace.equals(capability.getNamespace()))\r\n+\t\t\t\tresult.add(capability);\r\n+\t\tresult.trimToSize();\r\n+\t\treturn result;\r\n \t}\r\n \r\n \t@Override\r\n@@ -93,6 +112,13 @@ public String getLocation() {\n \r\n \t@Override\r\n \tpublic List<Requirement> getRequirements(String namespace) {\r\n-\t\treturn Collections.emptyList();\r\n+\t\tif (namespace == null)\r\n+\t\t\treturn requirements;\r\n+\t\tArrayList<Requirement> result = new ArrayList<Requirement>(requirements.size());\r\n+\t\tfor (Requirement requirement : requirements)\r\n+\t\t\tif (namespace.equals(requirement.getNamespace()))\r\n+\t\t\t\tresult.add(requirement);\r\n+\t\tresult.trimToSize();\r\n+\t\treturn result;\r\n \t}\r\n }\r",
                "deletions": 24
            },
            {
                "sha": "6b819e21447652e6910eab9e64ecf5622d88a26c",
                "filename": "subsystem/subsystem-core/src/main/java/org/apache/aries/subsystem/core/resource/SubsystemStreamResource.java",
                "blob_url": "https://github.com/apache/aries/blob/7d307f907cace61b04fc6f4822b4502558c3e564/subsystem/subsystem-core/src/main/java/org/apache/aries/subsystem/core/resource/SubsystemStreamResource.java",
                "raw_url": "https://github.com/apache/aries/raw/7d307f907cace61b04fc6f4822b4502558c3e564/subsystem/subsystem-core/src/main/java/org/apache/aries/subsystem/core/resource/SubsystemStreamResource.java",
                "status": "modified",
                "changes": 17,
                "additions": 8,
                "contents_url": "https://api.github.com/repos/apache/aries/contents/subsystem/subsystem-core/src/main/java/org/apache/aries/subsystem/core/resource/SubsystemStreamResource.java?ref=7d307f907cace61b04fc6f4822b4502558c3e564",
                "patch": "@@ -10,7 +10,6 @@\n import java.util.Collections;\r\n import java.util.List;\r\n import java.util.Map.Entry;\r\n-import java.util.jar.Attributes;\r\n import java.util.jar.Manifest;\r\n \r\n import org.apache.aries.subsystem.core.archive.Header;\r\n@@ -64,20 +63,20 @@ public SubsystemStreamResource(String location, InputStream content) throws IOEx\n \t\t\tIOUtils.close(content);\r\n \t\t}\r\n \t\tManifest manifest = ManifestProcessor.obtainManifestFromAppDir(directory, \"OSGI-INF/SUBSYSTEM.MF\");\r\n-\t\tAttributes attributes = manifest.getMainAttributes();\r\n-\t\tString symbolicName = attributes.getValue(SubsystemConstants.SUBSYSTEM_SYMBOLICNAME);\r\n+\t\tString symbolicName = manifest == null ? null : manifest.getMainAttributes().getValue(SubsystemConstants.SUBSYSTEM_SYMBOLICNAME);\r\n \t\tif (symbolicName == null) {\r\n \t\t\tif (uri == null)\r\n \t\t\t\tthrow new IllegalArgumentException(\"No symbolic name\");\r\n \t\t\tsymbolicName = uri.getSymbolicName();\r\n \t\t}\r\n \t\tSubsystemManifest.Builder builder = new SubsystemManifest.Builder(symbolicName);\r\n-\t\tfor (Entry<Object, Object> entry : attributes.entrySet()) {\r\n-\t\t\tString key = String.valueOf(entry.getKey());\r\n-\t\t\tif (key.equals(SubsystemManifest.SUBSYSTEM_SYMBOLICNAME))\r\n-\t\t\t\tcontinue;\r\n-\t\t\tbuilder.header(HeaderFactory.createHeader(key, String.valueOf(entry.getValue())));\r\n-\t\t}\r\n+\t\tif (manifest != null)\r\n+\t\t\tfor (Entry<Object, Object> entry : manifest.getMainAttributes().entrySet()) {\r\n+\t\t\t\tString key = String.valueOf(entry.getKey());\r\n+\t\t\t\tif (key.equals(SubsystemManifest.SUBSYSTEM_SYMBOLICNAME))\r\n+\t\t\t\t\tcontinue;\r\n+\t\t\t\tbuilder.header(HeaderFactory.createHeader(key, String.valueOf(entry.getValue())));\r\n+\t\t\t}\r\n \t\tSubsystemManifest subsystemManifest = builder.build();\r\n \t\tSubsystemVersionHeader version = SubsystemVersionHeader.DEFAULT;\r\n \t\tSubsystemTypeHeader type = SubsystemTypeHeader.DEFAULT;\r",
                "deletions": 9
            }
        ]
    },
    {
        "repo": "aries",
        "message": "ARIES-1429 NullPointerException at org.apache.aries.subsystem.core.internal.WovenClassListener.modified at org.apache.aries.subsystem.core.internal.RegionUpdater.addRequirements\n\nAdd tests for both the woven class listener and AriesSubsystem.addRequirements.\n\nA missing connection between parent and child may be tolerated for the woven class listener but not when adding requirements to the sharing policy. The region updater will now\nthrow an IllegalStateException when it detects a missing edge between the head and tail (parent and child) regions. The woven class listener will catch and ignore this\nexception. When adding requirements, however, this exception will be propogated as before.\n\ngit-svn-id: https://svn.apache.org/repos/asf/aries/trunk@1707803 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/aries/commit/14f384fc920f7cc0c8e870537de5e29c44026946",
        "parent": "https://github.com/apache/aries/commit/c68db0fcd4e053bd742b1d759671309bd2feb724",
        "bug_id": "aries_53",
        "file": [
            {
                "sha": "179783f52412098643974cdf82a699c2a7f7e63f",
                "filename": "subsystem/subsystem-core/src/main/java/org/apache/aries/subsystem/core/internal/RegionUpdater.java",
                "blob_url": "https://github.com/apache/aries/blob/14f384fc920f7cc0c8e870537de5e29c44026946/subsystem/subsystem-core/src/main/java/org/apache/aries/subsystem/core/internal/RegionUpdater.java",
                "raw_url": "https://github.com/apache/aries/raw/14f384fc920f7cc0c8e870537de5e29c44026946/subsystem/subsystem-core/src/main/java/org/apache/aries/subsystem/core/internal/RegionUpdater.java",
                "status": "modified",
                "changes": 9,
                "additions": 6,
                "contents_url": "https://api.github.com/repos/apache/aries/contents/subsystem/subsystem-core/src/main/java/org/apache/aries/subsystem/core/internal/RegionUpdater.java?ref=14f384fc920f7cc0c8e870537de5e29c44026946",
                "patch": "@@ -61,9 +61,12 @@ public void addRequirements(Collection<? extends Requirement> requirements) thro\n \t\t\tif (builder == null) {\n \t\t\t\t// Something outside of the subsystems implementation has\n \t\t\t\t// deleted the edge between the parent and child subsystems.\n-\t\t\t\t// Assume the dynamic import sharing policy is being handled\n-\t\t\t\t// elsewhere. See ARIES-1429.\n-\t\t\t\treturn;\n+\t\t\t\t// See ARIES-1429.\n+\t\t\t\tthrow new IllegalStateException(\n+\t\t\t\t\t\tnew StringBuilder(tail.getName())\n+\t\t\t\t\t\t\t\t.append(\" not connected to \")\n+\t\t\t\t\t\t\t\t.append(head.getName())\n+\t\t\t\t\t\t\t\t.toString());\n \t\t\t}\n \t\t\taddRequirements(requirements, builder);\n \t\t\taddHeadRegions(heads, tail, copy);",
                "deletions": 3
            },
            {
                "sha": "7a6efd0bf1d3e5bbc70ae60a69f20a2c0744073c",
                "filename": "subsystem/subsystem-core/src/main/java/org/apache/aries/subsystem/core/internal/WovenClassListener.java",
                "blob_url": "https://github.com/apache/aries/blob/14f384fc920f7cc0c8e870537de5e29c44026946/subsystem/subsystem-core/src/main/java/org/apache/aries/subsystem/core/internal/WovenClassListener.java",
                "raw_url": "https://github.com/apache/aries/raw/14f384fc920f7cc0c8e870537de5e29c44026946/subsystem/subsystem-core/src/main/java/org/apache/aries/subsystem/core/internal/WovenClassListener.java",
                "status": "modified",
                "changes": 6,
                "additions": 6,
                "contents_url": "https://api.github.com/repos/apache/aries/contents/subsystem/subsystem-core/src/main/java/org/apache/aries/subsystem/core/internal/WovenClassListener.java?ref=14f384fc920f7cc0c8e870537de5e29c44026946",
                "patch": "@@ -121,6 +121,12 @@ public void modified(WovenClass wovenClass) {\n \t\ttry {\r\n \t\t\tupdater.addRequirements(requirements);\r\n \t\t}\r\n+\t\tcatch (IllegalStateException e) {\r\n+\t\t\t// Something outside of the subsystems implementation has\r\n+\t\t\t// deleted the edge between the parent and child subsystems.\r\n+\t\t\t// Assume the dynamic import sharing policy is being handled\r\n+\t\t\t// elsewhere. See ARIES-1429.\r\n+\t\t}\r\n \t\tcatch (Exception e) {\r\n \t\t\tthrow new SubsystemException(e);\r\n \t\t}\r",
                "deletions": 0
            },
            {
                "sha": "cab3bc459ca529631f5478f75a0a185fd1f63c8b",
                "filename": "subsystem/subsystem-itests/src/test/java/org/apache/aries/subsystem/itests/defect/Aries1429Test.java",
                "blob_url": "https://github.com/apache/aries/blob/14f384fc920f7cc0c8e870537de5e29c44026946/subsystem/subsystem-itests/src/test/java/org/apache/aries/subsystem/itests/defect/Aries1429Test.java",
                "raw_url": "https://github.com/apache/aries/raw/14f384fc920f7cc0c8e870537de5e29c44026946/subsystem/subsystem-itests/src/test/java/org/apache/aries/subsystem/itests/defect/Aries1429Test.java",
                "status": "added",
                "changes": 199,
                "additions": 199,
                "contents_url": "https://api.github.com/repos/apache/aries/contents/subsystem/subsystem-itests/src/test/java/org/apache/aries/subsystem/itests/defect/Aries1429Test.java?ref=14f384fc920f7cc0c8e870537de5e29c44026946",
                "patch": "@@ -0,0 +1,199 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.aries.subsystem.itests.defect;\n+\n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertNotNull;\n+import static org.junit.Assert.assertNull;\n+import static org.junit.Assert.assertTrue;\n+import static org.junit.Assert.fail;\n+\n+import java.io.IOException;\n+import java.util.Collections;\n+import java.util.HashMap;\n+import java.util.Map;\n+import java.util.Set;\n+import java.util.concurrent.atomic.AtomicBoolean;\n+import java.util.concurrent.atomic.AtomicReference;\n+\n+import org.apache.aries.subsystem.AriesSubsystem;\n+import org.apache.aries.subsystem.itests.SubsystemTest;\n+import org.apache.aries.subsystem.itests.util.TestRequirement;\n+import org.eclipse.equinox.region.Region;\n+import org.eclipse.equinox.region.RegionDigraph;\n+import org.junit.Before;\n+import org.junit.Test;\n+import org.ops4j.pax.tinybundles.core.InnerClassStrategy;\n+import org.ops4j.pax.tinybundles.core.TinyBundles;\n+import org.osgi.framework.Bundle;\n+import org.osgi.framework.BundleContext;\n+import org.osgi.framework.BundleException;\n+import org.osgi.framework.Constants;\n+import org.osgi.framework.FrameworkEvent;\n+import org.osgi.framework.FrameworkListener;\n+import org.osgi.framework.ServiceReference;\n+import org.osgi.framework.hooks.weaving.WeavingHook;\n+import org.osgi.framework.hooks.weaving.WovenClass;\n+import org.osgi.framework.namespace.PackageNamespace;\n+import org.osgi.resource.Requirement;\n+import org.osgi.service.subsystem.Subsystem;\n+import org.osgi.service.subsystem.SubsystemConstants;\n+import org.osgi.service.subsystem.SubsystemException;\n+\n+/*\n+ * https://issues.apache.org/jira/browse/ARIES-1429\n+ * \n+ * NullPointerException at org.apache.aries.subsystem.core.internal.WovenClassListener.modified \n+ * at org.apache.aries.subsystem.core.internal.RegionUpdater.addRequirements.\n+ */\n+public class Aries1429Test extends SubsystemTest {\n+\t/*\n+\t * Subsystem-SymbolicName: application.a.esa\n+\t */\n+\tprivate static final String APPLICATION_A = \"application.a.esa\";\n+\t/*\n+\t * Bundle-SymbolicName: bundle.a.jar\n+\t */\n+\tprivate static final String BUNDLE_A = \"bundle.a.jar\";\n+\t\n+\tprivate static boolean createdTestFiles;\n+\t\n+\tprivate void createApplicationA() throws IOException {\n+\t\tcreateApplicationAManifest();\n+\t\tcreateSubsystem(APPLICATION_A);\n+\t}\n+\t\n+\tprivate void createApplicationAManifest() throws IOException {\n+\t\tMap<String, String> attributes = new HashMap<String, String>();\n+\t\tattributes.put(SubsystemConstants.SUBSYSTEM_SYMBOLICNAME, APPLICATION_A);\n+\t\tcreateManifest(APPLICATION_A + \".mf\", attributes);\n+\t}\n+\t\n+\t@Before\n+\tpublic void createTestFiles() throws Exception {\n+\t\tif (createdTestFiles)\n+\t\t\treturn;\n+\t\tcreateApplicationA();\n+\t\tcreatedTestFiles = true;\n+\t}\n+\t\n+\t@Test\n+    public void testMissingParentChildEdgeTolerated() throws Exception {\n+\t\tfinal AtomicBoolean weavingHookCalled = new AtomicBoolean();\n+\t\tfinal AtomicReference<FrameworkEvent> frameworkEvent = new AtomicReference<FrameworkEvent>();\n+\t\tbundleContext.registerService(\n+    \t\t\tWeavingHook.class, \n+    \t\t\tnew WeavingHook() {\n+    \t\t\t\t@Override\n+    \t\t\t\tpublic void weave(WovenClass wovenClass) {\n+    \t\t\t\t\tBundle bundle = wovenClass.getBundleWiring().getBundle();\n+    \t\t\t\t\tif (BUNDLE_A.equals(bundle.getSymbolicName())) {\n+    \t\t\t\t\t\twovenClass.getDynamicImports().add(\"com.acme.tnt\");\n+    \t\t\t\t\t\tweavingHookCalled.set(true);\n+    \t\t\t\t\t}\n+    \t\t\t\t}\n+    \t\t\t}, \n+    \t\t\tnull);\n+    \tSubsystem applicationA = installSubsystemFromFile(APPLICATION_A);\n+    \ttry {\n+\t    \tremoveConnectionWithParent(applicationA);\n+\t\t\tBundleContext context = applicationA.getBundleContext();\n+\t\t\tBundle bundleA = context.installBundle(\n+\t\t\t\t\tBUNDLE_A, \n+\t\t\t\t\tTinyBundles\n+\t\t\t\t\t\t\t.bundle()\n+\t\t\t\t\t\t\t.add(getClass().getClassLoader().loadClass(\"a.A\"), InnerClassStrategy.NONE)\n+\t\t\t\t\t\t\t.set(Constants.BUNDLE_SYMBOLICNAME, BUNDLE_A)\n+\t\t\t\t\t\t\t.build(TinyBundles.withBnd()));\n+\t\t\tbundleContext.addFrameworkListener(\n+\t    \t\t\tnew FrameworkListener() {\n+\t\t\t\t\t\t@Override\n+\t\t\t\t\t\tpublic void frameworkEvent(FrameworkEvent event) {\n+\t\t\t\t\t\t\tif (FrameworkEvent.ERROR == event.getType()\n+\t\t\t\t\t\t\t\t\t&& getSubsystemCoreBundle().equals(event.getBundle())) {\n+\t\t\t\t\t\t\t\tframeworkEvent.set(event);\n+\t\t\t\t\t\t\t\tif (event.getThrowable() != null) {\n+\t\t\t\t\t\t\t\t\tevent.getThrowable().printStackTrace();\n+\t\t\t\t\t\t\t\t}\n+\t\t\t\t\t\t\t}\n+\t\t\t\t\t\t}\n+\t    \t\t\t});\n+\t\t\tbundleA.loadClass(\"a.A\");\n+\t\t\tassertTrue(\"Weaving hook not called\", weavingHookCalled.get());\n+\t\t\tThread.sleep(1000);\n+\t\t\tassertNull(\"An exception was thrown\", frameworkEvent.get());\n+    \t}\n+    \tfinally {\n+    \t\tuninstallSubsystemSilently(applicationA);\n+    \t}\n+    }\n+\t\n+\tprivate void removeConnectionWithParent(Subsystem subsystem) throws BundleException {\n+\t\tRegion tail = getRegion(subsystem);\n+\t\tRegionDigraph copy = digraph.copy();\n+\t\tRegion tailCopy = copy.getRegion(tail.getName());\n+\t\tSet<Long> ids = tail.getBundleIds();\n+\t\tcopy.removeRegion(tailCopy);\n+\t\ttailCopy= copy.createRegion(tailCopy.getName());\n+\t\tfor (long id : ids) {\n+\t\t\ttailCopy.addBundle(id);\n+\t\t}\n+\t\tdigraph.replace(copy);\n+\t}\n+    \n+    @Test\n+    public void testMissingParentChildEdgeNotTolerated() throws Exception {\n+    \tSubsystem applicationA = installSubsystemFromFile(APPLICATION_A);\n+    \ttry {\n+    \t\tremoveConnectionWithParent(applicationA);\n+    \t\ttry {\n+    \t\t\t((AriesSubsystem)applicationA).addRequirements(\n+    \t\t\t\t\tCollections.singletonList(\n+    \t\t\t\t\t\t\t(Requirement) new TestRequirement.Builder()\n+    \t\t\t\t\t\t\t.namespace(PackageNamespace.PACKAGE_NAMESPACE)\n+    \t\t\t\t\t\t\t.attribute(PackageNamespace.PACKAGE_NAMESPACE, \"org.osgi.framework\")\n+    \t\t\t\t\t\t\t.build()));\n+    \t\t\tfail(\"No exception received\");\n+    \t\t}\n+    \t\tcatch (SubsystemException e) {\n+    \t\t\tThrowable cause = e.getCause();\n+    \t\t\tassertNotNull(\"Wrong cause\", cause);\n+    \t\t\tassertEquals(\"Wrong cause\", IllegalStateException.class, cause.getClass());\n+    \t\t}\n+    \t}\n+    \tfinally {\n+    \t\tuninstallSubsystemSilently(applicationA);\n+    \t}\n+    }\n+    \n+    private RegionDigraph digraph;\n+    private ServiceReference<RegionDigraph> reference;\n+    \n+    @Override\n+    public void setUp() throws Exception {\n+        super.setUp();\n+        reference = bundleContext.getServiceReference(RegionDigraph.class);\n+        digraph = bundleContext.getService(reference);\n+    }\n+    \n+    @Override\n+    public void tearDown() throws Exception {\n+    \tbundleContext.ungetService(reference);\n+    }\n+}",
                "deletions": 0
            }
        ]
    },
    {
        "repo": "aries",
        "message": "ARIES-931: Applications iTests now run against Equinox 3.8 for the Aries build in order to avoid an intermittent NPE due to an embedded ConcurrentModificationException. The ability to run against 3.5 and 3.7 remains but would need to be enabled and run locally if necessary.\n\ngit-svn-id: https://svn.apache.org/repos/asf/aries/trunk@1394463 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/aries/commit/fac46d74ccd0bd398aee6788f98f6def4f9108a0",
        "parent": "https://github.com/apache/aries/commit/eeaf3d63ba670e7eb1cd1dc9c6c7d365c40c9054",
        "bug_id": "aries_54",
        "file": [
            {
                "sha": "8c3b678519dfe8a508da7f9f14530f3d57553245",
                "filename": "application/application-itests/src/test/java/org/apache/aries/application/runtime/itests/BasicAppManagerTest.java",
                "blob_url": "https://github.com/apache/aries/blob/fac46d74ccd0bd398aee6788f98f6def4f9108a0/application/application-itests/src/test/java/org/apache/aries/application/runtime/itests/BasicAppManagerTest.java",
                "raw_url": "https://github.com/apache/aries/raw/fac46d74ccd0bd398aee6788f98f6def4f9108a0/application/application-itests/src/test/java/org/apache/aries/application/runtime/itests/BasicAppManagerTest.java",
                "status": "modified",
                "changes": 22,
                "additions": 20,
                "contents_url": "https://api.github.com/repos/apache/aries/contents/application/application-itests/src/test/java/org/apache/aries/application/runtime/itests/BasicAppManagerTest.java?ref=fac46d74ccd0bd398aee6788f98f6def4f9108a0",
                "patch": "@@ -174,7 +174,11 @@ public void testAppStore() throws Exception {\n \n   }\n \n-  @org.ops4j.pax.exam.junit.Configuration\n+  /*\n+   * Commented out to avoid an NPE due to a ConcurrentModificationException in\n+   * the Aries build. See https://issues.apache.org/jira/browse/ARIES-931.\n+   */\n+  //@org.ops4j.pax.exam.junit.Configuration\n   public static Option[] equinox35Options()\n   {\n \t  return testOptions(\n@@ -183,7 +187,11 @@ public void testAppStore() throws Exception {\n \t          );\n   }\n \n-  @org.ops4j.pax.exam.junit.Configuration\n+  /*\n+   * Commented out to avoid an NPE due to a ConcurrentModificationException in\n+   * the Aries build. See https://issues.apache.org/jira/browse/ARIES-931.\n+   */\n+  //@org.ops4j.pax.exam.junit.Configuration\n   public static Option[] equinox37Options()\n   {\n \t  return testOptions(\n@@ -192,5 +200,15 @@ public void testAppStore() throws Exception {\n \t          equinox().version(\"3.7.0.v20110613\")\n \t          );\n   }\n+  \n+  @org.ops4j.pax.exam.junit.Configuration\n+  public static Option[] equinox38Options()\n+  {\n+\t  return testOptions(\n+\t\t\t  generalConfiguration(),\n+\t\t\t  PaxRunnerOptions.rawPaxRunnerOption(\"config\", \"classpath:ss-runner.properties\"),          \n+\t          equinox().version(\"3.8.0.V20120529-1548\")\n+\t          );\n+  }\n \n }",
                "deletions": 2
            },
            {
                "sha": "809826533346e5f50c5d2766f244074c110be84f",
                "filename": "application/application-itests/src/test/java/org/apache/aries/application/runtime/itests/BasicNoOpResolverTest.java",
                "blob_url": "https://github.com/apache/aries/blob/fac46d74ccd0bd398aee6788f98f6def4f9108a0/application/application-itests/src/test/java/org/apache/aries/application/runtime/itests/BasicNoOpResolverTest.java",
                "raw_url": "https://github.com/apache/aries/raw/fac46d74ccd0bd398aee6788f98f6def4f9108a0/application/application-itests/src/test/java/org/apache/aries/application/runtime/itests/BasicNoOpResolverTest.java",
                "status": "modified",
                "changes": 22,
                "additions": 20,
                "contents_url": "https://api.github.com/repos/apache/aries/contents/application/application-itests/src/test/java/org/apache/aries/application/runtime/itests/BasicNoOpResolverTest.java?ref=fac46d74ccd0bd398aee6788f98f6def4f9108a0",
                "patch": "@@ -148,7 +148,11 @@ public void testAppWithApplicationManifest() throws Exception {\n \n   }\n \n-  @org.ops4j.pax.exam.junit.Configuration\n+  /*\n+   * Commented out to avoid an NPE due to a ConcurrentModificationException in\n+   * the Aries build. See https://issues.apache.org/jira/browse/ARIES-931.\n+   */\n+  //@org.ops4j.pax.exam.junit.Configuration\n   public static Option[] equinox35Options()\n   {\n \t  return testOptions(\n@@ -157,7 +161,11 @@ public void testAppWithApplicationManifest() throws Exception {\n \t          );\n   }\n \n-  @org.ops4j.pax.exam.junit.Configuration\n+  /*\n+   * Commented out to avoid an NPE due to a ConcurrentModificationException in\n+   * the Aries build. See https://issues.apache.org/jira/browse/ARIES-931.\n+   */\n+  //@org.ops4j.pax.exam.junit.Configuration\n   public static Option[] equinox37Options()\n   {\n \t  return testOptions(\n@@ -166,5 +174,15 @@ public void testAppWithApplicationManifest() throws Exception {\n \t          equinox().version(\"3.7.0.v20110613\")\n \t          );\n   }\n+  \n+  @org.ops4j.pax.exam.junit.Configuration\n+  public static Option[] equinox38Options()\n+  {\n+\t  return testOptions(\n+\t\t\t  generalConfiguration(),\n+\t\t\t  PaxRunnerOptions.rawPaxRunnerOption(\"config\", \"classpath:ss-runner.properties\"),          \n+\t          equinox().version(\"3.8.0.V20120529-1548\")\n+\t          );\n+  }\n \n }",
                "deletions": 2
            },
            {
                "sha": "6a18da5bffa83a22096549621e10ddedc1922637",
                "filename": "application/application-itests/src/test/java/org/apache/aries/application/runtime/itests/IsolatedCfgAdminRuntimeTest.java",
                "blob_url": "https://github.com/apache/aries/blob/fac46d74ccd0bd398aee6788f98f6def4f9108a0/application/application-itests/src/test/java/org/apache/aries/application/runtime/itests/IsolatedCfgAdminRuntimeTest.java",
                "raw_url": "https://github.com/apache/aries/raw/fac46d74ccd0bd398aee6788f98f6def4f9108a0/application/application-itests/src/test/java/org/apache/aries/application/runtime/itests/IsolatedCfgAdminRuntimeTest.java",
                "status": "modified",
                "changes": 22,
                "additions": 20,
                "contents_url": "https://api.github.com/repos/apache/aries/contents/application/application-itests/src/test/java/org/apache/aries/application/runtime/itests/IsolatedCfgAdminRuntimeTest.java?ref=fac46d74ccd0bd398aee6788f98f6def4f9108a0",
                "patch": "@@ -388,7 +388,11 @@ private void uninstallApplication(Context ctx) throws Exception {\n                 //vmOption(\"-Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=5006\"), \n     }\n \n-    @org.ops4j.pax.exam.junit.Configuration\n+    /*\n+     * Commented out to avoid an NPE due to a ConcurrentModificationException in\n+     * the Aries build. See https://issues.apache.org/jira/browse/ARIES-931.\n+     */\n+    //@org.ops4j.pax.exam.junit.Configuration\n     public static Option[] equinox35Options() throws Exception\n     {\n   \t  return testOptions(\n@@ -397,7 +401,11 @@ private void uninstallApplication(Context ctx) throws Exception {\n   \t          );\n     }\n \n-    @org.ops4j.pax.exam.junit.Configuration\n+    /*\n+     * Commented out to avoid an NPE due to a ConcurrentModificationException in\n+     * the Aries build. See https://issues.apache.org/jira/browse/ARIES-931.\n+     */\n+    //@org.ops4j.pax.exam.junit.Configuration\n     public static Option[] equinox37Options() throws Exception\n     {\n   \t  return testOptions(\n@@ -406,6 +414,16 @@ private void uninstallApplication(Context ctx) throws Exception {\n   \t          equinox().version(\"3.7.0.v20110613\")\n   \t          );\n     }\n+    \n+    @org.ops4j.pax.exam.junit.Configuration\n+    public static Option[] equinox38Options() throws Exception\n+    {\n+  \t  return testOptions(\n+  \t\t\t  generalConfiguration(),\n+  \t\t\t  PaxRunnerOptions.rawPaxRunnerOption(\"config\", \"classpath:ss-runner.properties\"),          \n+  \t          equinox().version(\"3.8.0.V20120529-1548\")\n+  \t          );\n+    }\n \n     /**\n      * High level interface for executing a unit of work",
                "deletions": 2
            },
            {
                "sha": "9b96442a02b777e8745c41e4fa35a386016e4ee7",
                "filename": "application/application-itests/src/test/java/org/apache/aries/application/runtime/itests/IsolatedRuntimeTest.java",
                "blob_url": "https://github.com/apache/aries/blob/fac46d74ccd0bd398aee6788f98f6def4f9108a0/application/application-itests/src/test/java/org/apache/aries/application/runtime/itests/IsolatedRuntimeTest.java",
                "raw_url": "https://github.com/apache/aries/raw/fac46d74ccd0bd398aee6788f98f6def4f9108a0/application/application-itests/src/test/java/org/apache/aries/application/runtime/itests/IsolatedRuntimeTest.java",
                "status": "modified",
                "changes": 22,
                "additions": 20,
                "contents_url": "https://api.github.com/repos/apache/aries/contents/application/application-itests/src/test/java/org/apache/aries/application/runtime/itests/IsolatedRuntimeTest.java?ref=fac46d74ccd0bd398aee6788f98f6def4f9108a0",
                "patch": "@@ -346,7 +346,11 @@ private void assertHelloWorldService(String appName, String message) throws Exce\n           );\n   }\n   \n-  @org.ops4j.pax.exam.junit.Configuration\n+  /*\n+   * Commented out to avoid an NPE due to a ConcurrentModificationException in\n+   * the Aries build. See https://issues.apache.org/jira/browse/ARIES-931.\n+   */\n+  //@org.ops4j.pax.exam.junit.Configuration\n   public static Option[] equinox35Options()\n   {\n \t  return testOptions(\n@@ -355,7 +359,11 @@ private void assertHelloWorldService(String appName, String message) throws Exce\n \t          );\n   }\n \n-  @org.ops4j.pax.exam.junit.Configuration\n+  /*\n+   * Commented out to avoid an NPE due to a ConcurrentModificationException in\n+   * the Aries build. See https://issues.apache.org/jira/browse/ARIES-931.\n+   */\n+  //@org.ops4j.pax.exam.junit.Configuration\n   public static Option[] equinox37Options()\n   {\n \t  return testOptions(\n@@ -364,5 +372,15 @@ private void assertHelloWorldService(String appName, String message) throws Exce\n \t          equinox().version(\"3.7.0.v20110613\")\n \t          );\n   }\n+  \n+  @org.ops4j.pax.exam.junit.Configuration\n+  public static Option[] equinox38Options()\n+  {\n+\t  return testOptions(\n+\t\t\t  generalConfiguration(),\n+\t\t\t  PaxRunnerOptions.rawPaxRunnerOption(\"config\", \"classpath:ss-runner.properties\"),          \n+\t          equinox().version(\"3.8.0.V20120529-1548\")\n+\t          );\n+  }\n \n }",
                "deletions": 2
            },
            {
                "sha": "701c9950e6c760ec08db179a90e197051ed6be05",
                "filename": "application/application-itests/src/test/java/org/apache/aries/application/runtime/itests/MinimumImportsTest.java",
                "blob_url": "https://github.com/apache/aries/blob/fac46d74ccd0bd398aee6788f98f6def4f9108a0/application/application-itests/src/test/java/org/apache/aries/application/runtime/itests/MinimumImportsTest.java",
                "raw_url": "https://github.com/apache/aries/raw/fac46d74ccd0bd398aee6788f98f6def4f9108a0/application/application-itests/src/test/java/org/apache/aries/application/runtime/itests/MinimumImportsTest.java",
                "status": "modified",
                "changes": 22,
                "additions": 20,
                "contents_url": "https://api.github.com/repos/apache/aries/contents/application/application-itests/src/test/java/org/apache/aries/application/runtime/itests/MinimumImportsTest.java?ref=fac46d74ccd0bd398aee6788f98f6def4f9108a0",
                "patch": "@@ -198,7 +198,11 @@ public void testAppUsingAriesApplicationManager() throws Exception {\n         );\n   }\n   \n-  @org.ops4j.pax.exam.junit.Configuration\n+  /*\n+   * Commented out to avoid an NPE due to a ConcurrentModificationException in\n+   * the Aries build. See https://issues.apache.org/jira/browse/ARIES-931.\n+   */\n+  //@org.ops4j.pax.exam.junit.Configuration\n   public static Option[] equinox35Options()\n   {\n \t  return testOptions(\n@@ -207,7 +211,11 @@ public void testAppUsingAriesApplicationManager() throws Exception {\n \t          );\n   }\n \n-  @org.ops4j.pax.exam.junit.Configuration\n+  /*\n+   * Commented out to avoid an NPE due to a ConcurrentModificationException in\n+   * the Aries build. See https://issues.apache.org/jira/browse/ARIES-931.\n+   */\n+  //@org.ops4j.pax.exam.junit.Configuration\n   public static Option[] equinox37Options()\n   {\n \t  return testOptions(\n@@ -216,5 +224,15 @@ public void testAppUsingAriesApplicationManager() throws Exception {\n \t          equinox().version(\"3.7.0.v20110613\")\n \t          );\n   }\n+  \n+  @org.ops4j.pax.exam.junit.Configuration\n+  public static Option[] equinox38Options()\n+  {\n+\t  return testOptions(\n+\t\t\t  generalConfiguration(),\n+\t\t\t  PaxRunnerOptions.rawPaxRunnerOption(\"config\", \"classpath:ss-runner.properties\"),          \n+\t          equinox().version(\"3.8.0.V20120529-1548\")\n+\t          );\n+  }\n \n }",
                "deletions": 2
            },
            {
                "sha": "85a7cb19f932acdcecb5ff4e1c15772351d5216e",
                "filename": "application/application-itests/src/test/java/org/apache/aries/application/runtime/itests/OBRAppManagerTest.java",
                "blob_url": "https://github.com/apache/aries/blob/fac46d74ccd0bd398aee6788f98f6def4f9108a0/application/application-itests/src/test/java/org/apache/aries/application/runtime/itests/OBRAppManagerTest.java",
                "raw_url": "https://github.com/apache/aries/raw/fac46d74ccd0bd398aee6788f98f6def4f9108a0/application/application-itests/src/test/java/org/apache/aries/application/runtime/itests/OBRAppManagerTest.java",
                "status": "modified",
                "changes": 22,
                "additions": 20,
                "contents_url": "https://api.github.com/repos/apache/aries/contents/application/application-itests/src/test/java/org/apache/aries/application/runtime/itests/OBRAppManagerTest.java?ref=fac46d74ccd0bd398aee6788f98f6def4f9108a0",
                "patch": "@@ -182,7 +182,11 @@ public void testAppWithApplicationManifest() throws Exception {\n         );\n   }\n   \n-  @org.ops4j.pax.exam.junit.Configuration\n+  /*\n+   * Commented out to avoid an NPE due to a ConcurrentModificationException in\n+   * the Aries build. See https://issues.apache.org/jira/browse/ARIES-931.\n+   */\n+  //@org.ops4j.pax.exam.junit.Configuration\n   public static Option[] equinox35Options()\n   {\n \t  return testOptions(\n@@ -191,7 +195,11 @@ public void testAppWithApplicationManifest() throws Exception {\n \t          );\n   }\n \n-  @org.ops4j.pax.exam.junit.Configuration\n+  /*\n+   * Commented out to avoid an NPE due to a ConcurrentModificationException in\n+   * the Aries build. See https://issues.apache.org/jira/browse/ARIES-931.\n+   */\n+  //@org.ops4j.pax.exam.junit.Configuration\n   public static Option[] equinox37Options()\n   {\n \t  return testOptions(\n@@ -200,5 +208,15 @@ public void testAppWithApplicationManifest() throws Exception {\n \t          equinox().version(\"3.7.0.v20110613\")\n \t          );\n   }\n+  \n+  @org.ops4j.pax.exam.junit.Configuration\n+  public static Option[] equinox38Options()\n+  {\n+\t  return testOptions(\n+\t\t\t  generalConfiguration(),\n+\t\t\t  PaxRunnerOptions.rawPaxRunnerOption(\"config\", \"classpath:ss-runner.properties\"),          \n+\t          equinox().version(\"3.8.0.V20120529-1548\")\n+\t          );\n+  }\n \n }\n\\ No newline at end of file",
                "deletions": 2
            },
            {
                "sha": "1c15b9413a2fb2bf38791bb50e1f0c59ec23ff79",
                "filename": "application/application-itests/src/test/java/org/apache/aries/application/runtime/itests/OBRResolverAdvancedTest.java",
                "blob_url": "https://github.com/apache/aries/blob/fac46d74ccd0bd398aee6788f98f6def4f9108a0/application/application-itests/src/test/java/org/apache/aries/application/runtime/itests/OBRResolverAdvancedTest.java",
                "raw_url": "https://github.com/apache/aries/raw/fac46d74ccd0bd398aee6788f98f6def4f9108a0/application/application-itests/src/test/java/org/apache/aries/application/runtime/itests/OBRResolverAdvancedTest.java",
                "status": "modified",
                "changes": 22,
                "additions": 20,
                "contents_url": "https://api.github.com/repos/apache/aries/contents/application/application-itests/src/test/java/org/apache/aries/application/runtime/itests/OBRResolverAdvancedTest.java?ref=fac46d74ccd0bd398aee6788f98f6def4f9108a0",
                "patch": "@@ -563,7 +563,11 @@ public void clearRepository() {\n         );\r\n   }\r\n   \r\n-  @org.ops4j.pax.exam.junit.Configuration\r\n+  /*\r\n+   * Commented out to avoid an NPE due to a ConcurrentModificationException in\r\n+   * the Aries build. See https://issues.apache.org/jira/browse/ARIES-931.\r\n+   */\r\n+  //@org.ops4j.pax.exam.junit.Configuration\r\n   public static Option[] equinox35Options()\r\n   {\r\n \t  return testOptions(\r\n@@ -572,7 +576,11 @@ public void clearRepository() {\n \t          );\r\n   }\r\n \r\n-  @org.ops4j.pax.exam.junit.Configuration\r\n+  /*\r\n+   * Commented out to avoid an NPE due to a ConcurrentModificationException in\r\n+   * the Aries build. See https://issues.apache.org/jira/browse/ARIES-931.\r\n+   */\r\n+  //@org.ops4j.pax.exam.junit.Configuration\r\n   public static Option[] equinox37Options()\r\n   {\r\n \t  return testOptions(\r\n@@ -581,5 +589,15 @@ public void clearRepository() {\n \t          equinox().version(\"3.7.0.v20110613\")\r\n \t          );\r\n   }\r\n+  \r\n+  @org.ops4j.pax.exam.junit.Configuration\r\n+  public static Option[] equinox38Options()\r\n+  {\r\n+\t  return testOptions(\r\n+\t\t\t  generalConfiguration(),\r\n+\t\t\t  PaxRunnerOptions.rawPaxRunnerOption(\"config\", \"classpath:ss-runner.properties\"),          \r\n+\t          equinox().version(\"3.8.0.V20120529-1548\")\r\n+\t          );\r\n+  }\r\n \r\n }\n\\ No newline at end of file",
                "deletions": 2
            },
            {
                "sha": "a41a55d4f4b6a0631e2060055d9544b4c54f1ae9",
                "filename": "application/application-itests/src/test/java/org/apache/aries/application/runtime/itests/OBRResolverTest.java",
                "blob_url": "https://github.com/apache/aries/blob/fac46d74ccd0bd398aee6788f98f6def4f9108a0/application/application-itests/src/test/java/org/apache/aries/application/runtime/itests/OBRResolverTest.java",
                "raw_url": "https://github.com/apache/aries/raw/fac46d74ccd0bd398aee6788f98f6def4f9108a0/application/application-itests/src/test/java/org/apache/aries/application/runtime/itests/OBRResolverTest.java",
                "status": "modified",
                "changes": 22,
                "additions": 20,
                "contents_url": "https://api.github.com/repos/apache/aries/contents/application/application-itests/src/test/java/org/apache/aries/application/runtime/itests/OBRResolverTest.java?ref=fac46d74ccd0bd398aee6788f98f6def4f9108a0",
                "patch": "@@ -348,7 +348,11 @@ private void generateOBRRepoXML(String ... bundleFiles) throws Exception\n         );\n   }\n   \n-  @org.ops4j.pax.exam.junit.Configuration\n+  /*\n+   * Commented out to avoid an NPE due to a ConcurrentModificationException in\n+   * the Aries build. See https://issues.apache.org/jira/browse/ARIES-931.\n+   */\n+  //@org.ops4j.pax.exam.junit.Configuration\n   public static Option[] equinox35Options()\n   {\n \t  return testOptions(\n@@ -357,7 +361,11 @@ private void generateOBRRepoXML(String ... bundleFiles) throws Exception\n \t          );\n   }\n \n-  @org.ops4j.pax.exam.junit.Configuration\n+  /*\n+   * Commented out to avoid an NPE due to a ConcurrentModificationException in\n+   * the Aries build. See https://issues.apache.org/jira/browse/ARIES-931.\n+   */\n+  //@org.ops4j.pax.exam.junit.Configuration\n   public static Option[] equinox37Options()\n   {\n \t  return testOptions(\n@@ -366,5 +374,15 @@ private void generateOBRRepoXML(String ... bundleFiles) throws Exception\n \t          equinox().version(\"3.7.0.v20110613\")\n \t          );\n   }\n+  \n+  @org.ops4j.pax.exam.junit.Configuration\n+  public static Option[] equinox38Options()\n+  {\n+\t  return testOptions(\n+\t\t\t  generalConfiguration(),\n+\t\t\t  PaxRunnerOptions.rawPaxRunnerOption(\"config\", \"classpath:ss-runner.properties\"),          \n+\t          equinox().version(\"3.8.0.V20120529-1548\")\n+\t          );\n+  }\n \n }\n\\ No newline at end of file",
                "deletions": 2
            },
            {
                "sha": "1f29aa1f20a90a5d6e1521e2b43b17c7faaf0d07",
                "filename": "application/application-itests/src/test/java/org/apache/aries/application/runtime/itests/UpdateAppTest.java",
                "blob_url": "https://github.com/apache/aries/blob/fac46d74ccd0bd398aee6788f98f6def4f9108a0/application/application-itests/src/test/java/org/apache/aries/application/runtime/itests/UpdateAppTest.java",
                "raw_url": "https://github.com/apache/aries/raw/fac46d74ccd0bd398aee6788f98f6def4f9108a0/application/application-itests/src/test/java/org/apache/aries/application/runtime/itests/UpdateAppTest.java",
                "status": "modified",
                "changes": 22,
                "additions": 20,
                "contents_url": "https://api.github.com/repos/apache/aries/contents/application/application-itests/src/test/java/org/apache/aries/application/runtime/itests/UpdateAppTest.java?ref=fac46d74ccd0bd398aee6788f98f6def4f9108a0",
                "patch": "@@ -285,7 +285,11 @@ private void assertAppMessage(String message) throws Exception {\n         );\n   }\n   \n-  @org.ops4j.pax.exam.junit.Configuration\n+  /*\n+   * Commented out to avoid an NPE due to a ConcurrentModificationException in\n+   * the Aries build. See https://issues.apache.org/jira/browse/ARIES-931.\n+   */\n+  //@org.ops4j.pax.exam.junit.Configuration\n   public static Option[] equinox35Options()\n   {\n \t  return testOptions(\n@@ -294,7 +298,11 @@ private void assertAppMessage(String message) throws Exception {\n \t          );\n   }\n \n-  @org.ops4j.pax.exam.junit.Configuration\n+  /*\n+   * Commented out to avoid an NPE due to a ConcurrentModificationException in\n+   * the Aries build. See https://issues.apache.org/jira/browse/ARIES-931.\n+   */\n+  //@org.ops4j.pax.exam.junit.Configuration\n   public static Option[] equinox37Options()\n   {\n \t  return testOptions(\n@@ -303,5 +311,15 @@ private void assertAppMessage(String message) throws Exception {\n \t          equinox().version(\"3.7.0.v20110613\")\n \t          );\n   }\n+  \n+  @org.ops4j.pax.exam.junit.Configuration\n+  public static Option[] equinox38Options()\n+  {\n+\t  return testOptions(\n+\t\t\t  generalConfiguration(),\n+\t\t\t  PaxRunnerOptions.rawPaxRunnerOption(\"config\", \"classpath:ss-runner.properties\"),          \n+\t          equinox().version(\"3.8.0.V20120529-1548\")\n+\t          );\n+  }\n \n }",
                "deletions": 2
            },
            {
                "sha": "9457b9093bc32259f02541a35b5c436fd2b8733b",
                "filename": "application/application-itests/src/test/java/org/ops4j/pax/runner/platform/equinox/internal/SsActivator.java",
                "blob_url": "https://github.com/apache/aries/blob/fac46d74ccd0bd398aee6788f98f6def4f9108a0/application/application-itests/src/test/java/org/ops4j/pax/runner/platform/equinox/internal/SsActivator.java",
                "raw_url": "https://github.com/apache/aries/raw/fac46d74ccd0bd398aee6788f98f6def4f9108a0/application/application-itests/src/test/java/org/ops4j/pax/runner/platform/equinox/internal/SsActivator.java",
                "status": "modified",
                "changes": 1,
                "additions": 1,
                "contents_url": "https://api.github.com/repos/apache/aries/contents/application/application-itests/src/test/java/org/ops4j/pax/runner/platform/equinox/internal/SsActivator.java?ref=fac46d74ccd0bd398aee6788f98f6def4f9108a0",
                "patch": "@@ -43,6 +43,7 @@\n             new EquinoxPlatformBuilder( bundleContext, \"3.5.1\" ),\r\n             new EquinoxPlatformBuilder( bundleContext, \"3.6.0\" ),\r\n             new EquinoxPlatformBuilder( bundleContext, \"3.7.0.V20110613\" ),\r\n+            new EquinoxPlatformBuilder( bundleContext, \"3.8.0.V20120529-1548\"),\r\n             new EquinoxPlatformBuilderSnapshot( bundleContext )\r\n         };\r\n     }\r",
                "deletions": 0
            },
            {
                "sha": "c11fe7f9bcba4e77e7f1fef41427caa300f52aba",
                "filename": "application/application-itests/src/test/resources/META-INF/platform-equinox/definition-3.8.0.V20120529-1548.xml",
                "blob_url": "https://github.com/apache/aries/blob/fac46d74ccd0bd398aee6788f98f6def4f9108a0/application/application-itests/src/test/resources/META-INF/platform-equinox/definition-3.8.0.V20120529-1548.xml",
                "raw_url": "https://github.com/apache/aries/raw/fac46d74ccd0bd398aee6788f98f6def4f9108a0/application/application-itests/src/test/resources/META-INF/platform-equinox/definition-3.8.0.V20120529-1548.xml",
                "status": "added",
                "changes": 26,
                "additions": 26,
                "contents_url": "https://api.github.com/repos/apache/aries/contents/application/application-itests/src/test/resources/META-INF/platform-equinox/definition-3.8.0.V20120529-1548.xml?ref=fac46d74ccd0bd398aee6788f98f6def4f9108a0",
                "patch": "@@ -0,0 +1,26 @@\n+<!--\n+ Licensed to the Apache Software Foundation (ASF) under one\n+ or more contributor license agreements.  See the NOTICE file\n+ distributed with this work for additional information\n+ regarding copyright ownership.  The ASF licenses this file\n+ to you under the Apache License, Version 2.0 (the\n+ \"License\"); you may not use this file except in compliance\n+ with the License.  You may obtain a copy of the License at\n+\n+    http://www.apache.org/licenses/LICENSE-2.0\n+\n+ Unless required by applicable law or agreed to in writing,\n+ software distributed under the License is distributed on an\n+ \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ KIND, either express or implied.  See the License for the\n+ specific language governing permissions and limitations\n+ under the License.\n+-->\n+<platform>\n+\n+  <name>Equinox 3.8.0</name>\n+  <system>mvn:org.eclipse/org.eclipse.osgi/3.8.0.v20120529-1548</system>\n+\n+  <profile name=\"minimal\" default=\"true\"/>\n+\n+</platform>",
                "deletions": 0
            },
            {
                "sha": "fa1985302106bfe55c04bbb5d69135cd99777a0b",
                "filename": "application/application-itests/src/test/resources/ss-runner.properties",
                "blob_url": "https://github.com/apache/aries/blob/fac46d74ccd0bd398aee6788f98f6def4f9108a0/application/application-itests/src/test/resources/ss-runner.properties",
                "raw_url": "https://github.com/apache/aries/raw/fac46d74ccd0bd398aee6788f98f6def4f9108a0/application/application-itests/src/test/resources/ss-runner.properties",
                "status": "modified",
                "changes": 1,
                "additions": 1,
                "contents_url": "https://api.github.com/repos/apache/aries/contents/application/application-itests/src/test/resources/ss-runner.properties?ref=fac46d74ccd0bd398aee6788f98f6def4f9108a0",
                "patch": "@@ -84,6 +84,7 @@ platform.equinox.3.6.0=org.ops4j.pax.runner.platform.equinox.internal.SsActivato\n platform.equinox.SNAPSHOT=org.ops4j.pax.runner.platform.equinox.internal.SsActivator\r\n platform.equinox.V43PROTOTYPE-3.6.0.201003231329=org.ops4j.pax.runner.platform.equinox.internal.SsActivator\r\n platform.equinox.3.7.0.V20110613=org.ops4j.pax.runner.platform.equinox.internal.SsActivator\r\n+platform.equinox.3.8.0.V20120529-1548=org.ops4j.pax.runner.platform.equinox.internal.SsActivator\r\n # Felix\r\n platform.felix.1.0.0=org.ops4j.pax.runner.platform.felix.internal.Activator\r\n platform.felix.1.0.1=org.ops4j.pax.runner.platform.felix.internal.Activator\r",
                "deletions": 0
            }
        ]
    },
    {
        "repo": "aries",
        "message": "ARIES-825: Fixed NPE when given a Require-Capability header with no filter directive. It is legal to not have a filter directive, in which case the requirement will match any capability within the same namespace. If there is no filter directive, one will now be generated in the form (<namespace>=*). A new test to sniff this out was added as well.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/aries/trunk@1356872 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/aries/commit/dfb8f8b395253768d2697e090f970f01f938a5a7",
        "parent": "https://github.com/apache/aries/commit/a4add43434bf4820950f66648a8196e4cb15f4f6",
        "bug_id": "aries_55",
        "file": [
            {
                "sha": "74cc7e4574bcc828799701144461518fcc661041",
                "filename": "subsystem/subsystem-core/src/main/java/org/apache/aries/subsystem/core/archive/RequireCapabilityRequirement.java",
                "blob_url": "https://github.com/apache/aries/blob/dfb8f8b395253768d2697e090f970f01f938a5a7/subsystem/subsystem-core/src/main/java/org/apache/aries/subsystem/core/archive/RequireCapabilityRequirement.java",
                "raw_url": "https://github.com/apache/aries/raw/dfb8f8b395253768d2697e090f970f01f938a5a7/subsystem/subsystem-core/src/main/java/org/apache/aries/subsystem/core/archive/RequireCapabilityRequirement.java",
                "status": "modified",
                "changes": 8,
                "additions": 6,
                "contents_url": "https://api.github.com/repos/apache/aries/contents/subsystem/subsystem-core/src/main/java/org/apache/aries/subsystem/core/archive/RequireCapabilityRequirement.java?ref=dfb8f8b395253768d2697e090f970f01f938a5a7",
                "patch": "@@ -18,8 +18,12 @@\n \tpublic RequireCapabilityRequirement(RequireCapabilityHeader.Clause clause, Resource resource) {\r\n \t\tnamespace = clause.getNamespace();\r\n \t\tDirective filter = clause.getDirective(RequireCapabilityHeader.Clause.DIRECTIVE_FILTER);\r\n-\t\tif (filter != null)\r\n-\t\t\tdirectives.put(DIRECTIVE_FILTER, filter.getValue());\r\n+\t\t// It is legal for requirements to have no filter directive, in which \r\n+\t\t// case the requirement would match any capability from the same \r\n+\t\t// namespace.\r\n+\t\tif (filter == null)\r\n+\t\t\tfilter = new FilterDirective('(' + namespace + \"=*)\");\r\n+\t\tdirectives.put(DIRECTIVE_FILTER, filter.getValue());\r\n \t\tthis.resource = resource;\r\n \t}\r\n \r",
                "deletions": 2
            },
            {
                "sha": "92f1f501f98b1af0a209164f670bcf8ac62fbee6",
                "filename": "subsystem/subsystem-itests/src/test/java/org/apache/aries/subsystem/itests/NoRequirementFilterTest.java",
                "blob_url": "https://github.com/apache/aries/blob/dfb8f8b395253768d2697e090f970f01f938a5a7/subsystem/subsystem-itests/src/test/java/org/apache/aries/subsystem/itests/NoRequirementFilterTest.java",
                "raw_url": "https://github.com/apache/aries/raw/dfb8f8b395253768d2697e090f970f01f938a5a7/subsystem/subsystem-itests/src/test/java/org/apache/aries/subsystem/itests/NoRequirementFilterTest.java",
                "status": "added",
                "changes": 91,
                "additions": 91,
                "contents_url": "https://api.github.com/repos/apache/aries/contents/subsystem/subsystem-itests/src/test/java/org/apache/aries/subsystem/itests/NoRequirementFilterTest.java?ref=dfb8f8b395253768d2697e090f970f01f938a5a7",
                "patch": "@@ -0,0 +1,91 @@\n+package org.apache.aries.subsystem.itests;\r\n+\r\n+import java.io.IOException;\r\n+import java.util.HashMap;\r\n+import java.util.Map;\r\n+\r\n+import org.junit.Before;\r\n+import org.junit.Test;\r\n+import org.junit.runner.RunWith;\r\n+import org.ops4j.pax.exam.junit.JUnit4TestRunner;\r\n+import org.osgi.framework.Bundle;\r\n+import org.osgi.framework.Constants;\r\n+import org.osgi.service.subsystem.Subsystem;\r\n+import org.osgi.service.subsystem.SubsystemConstants;\r\n+\r\n+@RunWith(JUnit4TestRunner.class)\r\n+public class NoRequirementFilterTest extends SubsystemTest {\r\n+\t/*\r\n+\t * Subsystem-SymbolicName: application.a.esa\r\n+\t * Subsystem-Content: bundle.a.jar\r\n+\t */\r\n+\tprivate static final String APPLICATION_A = \"application.a.esa\";\r\n+\t/*\r\n+\t * Bundle-SymbolicName: bundle.a.jar\r\n+\t * Require-Capability: y\r\n+\t */\r\n+\tprivate static final String BUNDLE_A = \"bundle.a.jar\";\r\n+\t/*\r\n+\t * Bundle-SymbolicName: bundle.b.jar\r\n+\t * Provide-Capability: y;y=foo\r\n+\t */\r\n+\tprivate static final String BUNDLE_B = \"bundle.b.jar\";\r\n+\t\r\n+\tprivate static void createApplicationA() throws IOException {\r\n+\t\tcreateApplicationAManifest();\r\n+\t\tcreateSubsystem(APPLICATION_A, BUNDLE_A);\r\n+\t}\r\n+\t\r\n+\tprivate static void createApplicationAManifest() throws IOException {\r\n+\t\tMap<String, String> attributes = new HashMap<String, String>();\r\n+\t\tattributes.put(SubsystemConstants.SUBSYSTEM_SYMBOLICNAME, APPLICATION_A);\r\n+\t\tattributes.put(SubsystemConstants.SUBSYSTEM_CONTENT, BUNDLE_A);\r\n+\t\tcreateManifest(APPLICATION_A + \".mf\", attributes);\r\n+\t}\r\n+\t\r\n+\tprivate static void createBundleA() throws IOException {\r\n+\t\tMap<String, String> headers = new HashMap<String, String>();\r\n+\t\theaders.put(Constants.REQUIRE_CAPABILITY, \"y\");\r\n+\t\tcreateBundle(BUNDLE_A, headers);\r\n+\t}\r\n+\t\r\n+\tprivate static void createBundleB() throws IOException {\r\n+\t\tMap<String, String> headers = new HashMap<String, String>();\r\n+\t\theaders.put(Constants.PROVIDE_CAPABILITY, \"y;y=foo\");\r\n+\t\tcreateBundle(BUNDLE_B, headers);\r\n+\t}\r\n+\t\r\n+\tprivate static boolean createdTestFiles;\r\n+\t@Before\r\n+\tpublic static void createTestFiles() throws Exception {\r\n+\t\tif (createdTestFiles)\r\n+\t\t\treturn;\r\n+\t\tcreateBundleA();\r\n+\t\tcreateBundleB();\r\n+\t\tcreateApplicationA();\r\n+\t\tcreatedTestFiles = true;\r\n+\t}\r\n+\t\r\n+\tpublic void setUp() throws Exception {\r\n+\t\tsuper.setUp();\r\n+\t\tregisterRepositoryService(BUNDLE_A);\r\n+\t}\r\n+\t\r\n+\t@Test\r\n+\tpublic void testRequireCapability() throws Exception {\r\n+\t\tBundle bundleB = installBundleFromFile(BUNDLE_B);\r\n+\t\ttry {\r\n+\t\t\tSubsystem subsystem = installSubsystemFromFile(APPLICATION_A);\r\n+\t\t\ttry {\r\n+\t\t\t\tstartSubsystem(subsystem);\r\n+\t\t\t\tstopSubsystem(subsystem);\r\n+\t\t\t}\r\n+\t\t\tfinally {\r\n+\t\t\t\tuninstallSubsystemSilently(subsystem);\r\n+\t\t\t}\r\n+\t\t}\r\n+\t\tfinally {\r\n+\t\t\tuninstallSilently(bundleB);\r\n+\t\t}\r\n+\t}\r\n+}\r",
                "deletions": 0
            }
        ]
    },
    {
        "repo": "aries",
        "message": "[ARIES-972] Subsystem install fails with NPE if no subsystem manifest is contained in an ESA\n\nThe specification does not require implementations to generate symbolic names, so the failure was intentional, although\na more informative exception could have been used. The specification does not prohibit implementations from generating\nthem, however. A symbolic name with the pattern org.apache.aries.subsystem.<subsystem_id> will now be automatically\ngenerated as a last resort rather than failing the installation.\n\nAdded new tests.\n\ngit-svn-id: https://svn.apache.org/repos/asf/aries/trunk@1414213 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/aries/commit/3833b8d7a1fb35cb65a22b4f3e659ba2bdd79414",
        "parent": "https://github.com/apache/aries/commit/44a41b17d2c4c1b8384cc284495993ad7ae670ca",
        "bug_id": "aries_56",
        "file": [
            {
                "sha": "c57ee06aecac12500805710953fe66c60da8e8ce",
                "filename": "subsystem/subsystem-core/src/main/java/org/apache/aries/subsystem/core/internal/RawSubsystemResource.java",
                "blob_url": "https://github.com/apache/aries/blob/3833b8d7a1fb35cb65a22b4f3e659ba2bdd79414/subsystem/subsystem-core/src/main/java/org/apache/aries/subsystem/core/internal/RawSubsystemResource.java",
                "raw_url": "https://github.com/apache/aries/raw/3833b8d7a1fb35cb65a22b4f3e659ba2bdd79414/subsystem/subsystem-core/src/main/java/org/apache/aries/subsystem/core/internal/RawSubsystemResource.java",
                "status": "modified",
                "changes": 16,
                "additions": 13,
                "contents_url": "https://api.github.com/repos/apache/aries/contents/subsystem/subsystem-core/src/main/java/org/apache/aries/subsystem/core/internal/RawSubsystemResource.java?ref=3833b8d7a1fb35cb65a22b4f3e659ba2bdd79414",
                "patch": "@@ -93,13 +93,15 @@ private static String convertFileNameToLocation(String fileName) {\n \t\n \tprivate final List<Capability> capabilities;\n \tprivate final DeploymentManifest deploymentManifest;\n+\tprivate final long id;\n \tprivate final Repository localRepository;\n \tprivate final Location location;\n \tprivate final List<Requirement> requirements;\n \tprivate final Collection<Resource> resources;\n \tprivate final SubsystemManifest subsystemManifest;\n \t\n \tpublic RawSubsystemResource(String location, IDirectory content) throws URISyntaxException, IOException, ResolutionException, ModellerException {\n+\t\tid = SubsystemIdentifier.getNextId();\n \t\tthis.location = new Location(location);\n \t\tif (content == null)\n \t\t\tcontent = this.location.open();\n@@ -129,6 +131,7 @@ public RawSubsystemResource(IDirectory idir) throws IOException, URISyntaxExcept\n \t\trequirements = subsystemManifest.toRequirements(this);\n \t\tcapabilities = subsystemManifest.toCapabilities(this);\n \t\tdeploymentManifest = initializeDeploymentManifest(idir);\n+\t\tid = Long.parseLong(deploymentManifest.getHeaders().get(DeploymentManifest.ARIESSUBSYSTEM_ID).getValue());\n \t\tlocation = new Location(deploymentManifest.getHeaders().get(DeploymentManifest.ARIESSUBSYSTEM_LOCATION).getValue());\n \t}\n \t\n@@ -158,6 +161,10 @@ public DeploymentManifest getDeploymentManifest() {\n \t\treturn deploymentManifest;\n \t}\n \t\n+\tpublic long getId() {\n+\t\treturn id;\n+\t}\n+\t\n \tpublic Repository getLocalRepository() {\n \t\treturn localRepository;\n \t}\n@@ -379,9 +386,12 @@ private SubsystemManifest computeSubsystemManifestBeforeRequirements(SubsystemMa\n \t\n \tprivate SubsystemSymbolicNameHeader computeSubsystemSymbolicNameHeader(SubsystemManifest manifest) {\n \t\tSubsystemSymbolicNameHeader header = manifest.getSubsystemSymbolicNameHeader();\n-\t\tif (header == null)\n-\t\t\theader = new SubsystemSymbolicNameHeader(location.getSymbolicName());\n-\t\treturn header;\n+\t\tif (header != null)\n+\t\t\treturn header;\n+\t\tString symbolicName = location.getSymbolicName();\n+\t\tif (symbolicName == null)\n+\t\t\tsymbolicName = \"org.apache.aries.subsystem.\" + id;\n+\t\treturn new SubsystemSymbolicNameHeader(symbolicName);\n \t}\n \t\n \tprivate SubsystemVersionHeader computeSubsystemVersionHeader(SubsystemManifest manifest) {",
                "deletions": 3
            },
            {
                "sha": "4d9b14e642cfc3ee4a164799e4f734000d80b4e5",
                "filename": "subsystem/subsystem-core/src/main/java/org/apache/aries/subsystem/core/internal/SubsystemResource.java",
                "blob_url": "https://github.com/apache/aries/blob/3833b8d7a1fb35cb65a22b4f3e659ba2bdd79414/subsystem/subsystem-core/src/main/java/org/apache/aries/subsystem/core/internal/SubsystemResource.java",
                "raw_url": "https://github.com/apache/aries/raw/3833b8d7a1fb35cb65a22b4f3e659ba2bdd79414/subsystem/subsystem-core/src/main/java/org/apache/aries/subsystem/core/internal/SubsystemResource.java",
                "status": "modified",
                "changes": 5,
                "additions": 1,
                "contents_url": "https://api.github.com/repos/apache/aries/contents/subsystem/subsystem-core/src/main/java/org/apache/aries/subsystem/core/internal/SubsystemResource.java?ref=3833b8d7a1fb35cb65a22b4f3e659ba2bdd79414",
                "patch": "@@ -77,7 +77,6 @@\n \t\r\n \tprivate final List<Capability> capabilities;\r\n \tprivate final DeploymentManifest deploymentManifest;\r\n-\tprivate final long id;\r\n \tprivate final Collection<Resource> installableContent = new HashSet<Resource>();\r\n \tprivate final Collection<Resource> installableDependencies = new HashSet<Resource>();\r\n \tprivate final Collection<Resource> mandatoryResources = new HashSet<Resource>();\r\n@@ -96,7 +95,6 @@ public SubsystemResource(String location, IDirectory content, BasicSubsystem par\n \tpublic SubsystemResource(RawSubsystemResource resource, BasicSubsystem parent) throws IOException, BundleException, InvalidSyntaxException, URISyntaxException {\r\n \t\tthis.parent = parent;\r\n \t\tthis.resource = resource;\r\n-\t\tid = SubsystemIdentifier.getNextId();\r\n \t\tpreferredProviderRepository = new PreferredProviderRepository(this);\r\n \t\tcomputeContentResources(resource.getDeploymentManifest());\r\n \t\tcapabilities = computeCapabilities();\r\n@@ -113,7 +111,6 @@ public SubsystemResource(IDirectory directory) throws IOException, URISyntaxExce\n \t\tresource = new RawSubsystemResource(directory);\r\n \t\tpreferredProviderRepository = null;\r\n \t\tdeploymentManifest = resource.getDeploymentManifest();\r\n-\t\tid = Long.parseLong(deploymentManifest.getHeaders().get(DeploymentManifest.ARIESSUBSYSTEM_ID).getValue());\r\n \t\tcomputeContentResources(deploymentManifest);\r\n \t\tcapabilities = computeCapabilities();\r\n \t\tcomputeDependencies(deploymentManifest);\r\n@@ -167,7 +164,7 @@ public DeploymentManifest getDeploymentManifest() {\n \t}\r\n \t\r\n \tpublic long getId() {\r\n-\t\treturn id;\r\n+\t\treturn resource.getId();\r\n \t}\r\n \t\r\n \tpublic Collection<Resource> getInstallableContent() {\r",
                "deletions": 4
            },
            {
                "sha": "24cccc3da277e883544a0c9e31c1c1d3913fa65e",
                "filename": "subsystem/subsystem-itests/src/test/java/org/apache/aries/subsystem/itests/InstallTest.java",
                "blob_url": "https://github.com/apache/aries/blob/3833b8d7a1fb35cb65a22b4f3e659ba2bdd79414/subsystem/subsystem-itests/src/test/java/org/apache/aries/subsystem/itests/InstallTest.java",
                "raw_url": "https://github.com/apache/aries/raw/3833b8d7a1fb35cb65a22b4f3e659ba2bdd79414/subsystem/subsystem-itests/src/test/java/org/apache/aries/subsystem/itests/InstallTest.java",
                "status": "modified",
                "changes": 75,
                "additions": 75,
                "contents_url": "https://api.github.com/repos/apache/aries/contents/subsystem/subsystem-itests/src/test/java/org/apache/aries/subsystem/itests/InstallTest.java?ref=3833b8d7a1fb35cb65a22b4f3e659ba2bdd79414",
                "patch": "@@ -19,10 +19,14 @@\n package org.apache.aries.subsystem.itests;\n \n import static org.junit.Assert.assertSame;\n+import static org.junit.Assert.assertTrue;\n import static org.junit.Assert.fail;\n \n import java.io.File;\n import java.io.FileOutputStream;\n+import java.io.IOException;\n+import java.util.HashMap;\n+import java.util.Map;\n \n import org.apache.aries.subsystem.itests.util.Utils;\n import org.apache.aries.unittest.fixture.ArchiveFixture;\n@@ -37,6 +41,7 @@\n import org.osgi.framework.Bundle;\n import org.osgi.framework.Version;\n import org.osgi.service.subsystem.Subsystem;\n+import org.osgi.service.subsystem.SubsystemConstants;\n \n @RunWith(MavenConfiguredJUnit4TestRunner.class)\n public class InstallTest extends SubsystemTest {\n@@ -89,6 +94,9 @@ public static void createApplications() throws Exception {\n \t\t}\n \t\tcreateApplication(\"feature3\", new String[]{\"tb3.jar\"});\n \t\tcreateApplication(\"feature2\", new String[]{\"tb3.jar\", \"tb2.jar\"});\n+\t\tcreateBundleA();\n+\t\tcreateApplicationA();\n+\t\tcreateCompositeA();\n \t\tcreatedApplications = true;\n \t}\n \t\n@@ -175,4 +183,71 @@ public void testLocationAsDirectoryUrl() throws Exception {\n     \t\tfail(\"Subsystem installation using directory URL as location failed\");\n     \t}\n     }\n+    \n+    /*\n+\t * Bundle-SymbolicName: bundle.a.jar\n+\t */\n+\tprivate static final String BUNDLE_A = \"bundle.a.jar\";\n+\t\n+\tprivate static void createBundleA() throws IOException {\n+\t\tcreateBundle(BUNDLE_A);\n+\t}\n+    \n+    /*\n+\t * No symbolic name. No manifest.\n+\t */\n+\tprivate static final String APPLICATION_A = \"application.a.esa\";\n+\t\n+\tprivate static void createApplicationA() throws IOException {\n+\t\tcreateApplicationAManifest();\n+\t\tcreateSubsystem(APPLICATION_A, BUNDLE_A);\n+\t}\n+\t\n+\tprivate static void createApplicationAManifest() throws IOException {\n+\t\tFile manifest = new File(APPLICATION_A + \".mf\");\n+\t\tif (manifest.exists())\n+\t\t\tassertTrue(\"Could not delete manifest\", manifest.delete());\n+\t}\n+    \n+    @Test\n+    public void testGeneratedSymbolicNameWithoutManifest() throws Exception {\n+    \tString expected = \"org.apache.aries.subsystem.1\";\n+    \tSubsystem a = installSubsystemFromFile(APPLICATION_A);\n+    \ttry {\n+    \t\tassertSymbolicName(expected, a);\n+    \t\tassertSymbolicName(expected, a.getSubsystemHeaders(null).get(SubsystemConstants.SUBSYSTEM_SYMBOLICNAME));\n+    \t}\n+    \tfinally {\n+    \t\tuninstallSubsystemSilently(a);\n+    \t}\n+    }\n+    \n+    /*\n+\t * Manifest with no symbolic name header.\n+\t */\n+\tprivate static final String COMPOSITE_A = \"composite.a.esa\";\n+\t\n+\tprivate static void createCompositeA() throws IOException {\n+\t\tcreateCompositeAManifest();\n+\t\tcreateSubsystem(COMPOSITE_A);\n+\t}\n+\t\n+\tprivate static void createCompositeAManifest() throws IOException {\n+\t\tMap<String, String> attributes = new HashMap<String, String>();\n+\t\tattributes.put(SubsystemConstants.SUBSYSTEM_TYPE, SubsystemConstants.SUBSYSTEM_TYPE_COMPOSITE);\n+\t\tcreateManifest(COMPOSITE_A + \".mf\", attributes);\n+\t}\n+\t\n+\t@Test\n+    public void testGeneratedSymbolicNameWithManifest() throws Exception {\n+    \tString expected = \"org.apache.aries.subsystem.1\";\n+    \tSubsystem a = installSubsystemFromFile(COMPOSITE_A);\n+    \ttry {\n+    \t\tassertSymbolicName(expected, a);\n+    \t\tassertSymbolicName(expected, a.getSubsystemHeaders(null).get(SubsystemConstants.SUBSYSTEM_SYMBOLICNAME));\n+    \t}\n+    \tfinally {\n+    \t\tuninstallSubsystemSilently(a);\n+    \t}\n+    }\n }",
                "deletions": 0
            },
            {
                "sha": "c1b74fc21d289d9fd0430a94c5c046a147d2b68c",
                "filename": "subsystem/subsystem-itests/src/test/java/org/apache/aries/subsystem/itests/SubsystemTest.java",
                "blob_url": "https://github.com/apache/aries/blob/3833b8d7a1fb35cb65a22b4f3e659ba2bdd79414/subsystem/subsystem-itests/src/test/java/org/apache/aries/subsystem/itests/SubsystemTest.java",
                "raw_url": "https://github.com/apache/aries/raw/3833b8d7a1fb35cb65a22b4f3e659ba2bdd79414/subsystem/subsystem-itests/src/test/java/org/apache/aries/subsystem/itests/SubsystemTest.java",
                "status": "modified",
                "changes": 13,
                "additions": 10,
                "contents_url": "https://api.github.com/repos/apache/aries/contents/subsystem/subsystem-itests/src/test/java/org/apache/aries/subsystem/itests/SubsystemTest.java?ref=3833b8d7a1fb35cb65a22b4f3e659ba2bdd79414",
                "patch": "@@ -484,7 +484,11 @@ protected void assertSubsystemNotNull(Subsystem subsystem) {\n \t}\n \t\n \tprotected void assertSymbolicName(String expected, Subsystem subsystem) {\n-\t\tassertEquals(\"Wrong symbolic name: \" + subsystem.getSymbolicName(), expected, subsystem.getSymbolicName());\n+\t\tassertSymbolicName(expected, subsystem.getSymbolicName());\n+\t}\n+\t\n+\tprotected void assertSymbolicName(String expected, String actual) {\n+\t\tassertEquals(\"Wrong symbolic name\", expected, actual);\n \t}\n \t\n \tprotected void assertType(String expected, Subsystem subsystem) {\n@@ -552,8 +556,11 @@ protected static void createSubsystem(String name) throws IOException {\n \t}\n \t\n \tprotected static void createSubsystem(String name, String...contents) throws IOException {\n-\t\t// The following input stream is closed by ArchiveFixture.copy.\n-\t\tZipFixture fixture = ArchiveFixture.newZip().binary(\"OSGI-INF/SUBSYSTEM.MF\", new FileInputStream(name + \".mf\"));\n+\t\tFile manifest = new File(name + \".mf\");\n+\t\tZipFixture fixture = ArchiveFixture.newZip();\n+\t\tif (manifest.exists())\n+\t\t\t// The following input stream is closed by ArchiveFixture.copy.\n+\t\t\tfixture.binary(\"OSGI-INF/SUBSYSTEM.MF\", new FileInputStream(name + \".mf\"));\n \t\tif (contents != null) {\n \t\t\tfor (String content : contents) {\n \t\t\t\t// The following input stream is closed by ArchiveFixture.copy.",
                "deletions": 3
            }
        ]
    },
    {
        "repo": "aries",
        "message": "[ARIES-967] NPE in org.apache.aries.subsystem.core.internal.BundleEventHook.event() at server shutdown.\n\nUpdated the bundle event hook to handle the case where it receives an uninstalled event for a bundle that is not in its\ninternal data structure because the hook was not registered when the bundle was installed.\n\nAlso fixed another issue where region context bundles of subsystems that failed to install at certain points were not\nbeing uninstalled.\n\nAdded some new tests highlighting unmanaged bundle behavior.\n\ngit-svn-id: https://svn.apache.org/repos/asf/aries/trunk@1412179 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/aries/commit/03c135f43ca38d9627708610a976df44b7cab584",
        "parent": "https://github.com/apache/aries/commit/405291ed574ee0378f842bdf1fa243ee77b17569",
        "bug_id": "aries_57",
        "file": [
            {
                "sha": "b283e5d49a7205f557116bdbb0e2161256668529",
                "filename": "subsystem/subsystem-core/src/main/java/org/apache/aries/subsystem/core/internal/BundleEventHook.java",
                "blob_url": "https://github.com/apache/aries/blob/03c135f43ca38d9627708610a976df44b7cab584/subsystem/subsystem-core/src/main/java/org/apache/aries/subsystem/core/internal/BundleEventHook.java",
                "raw_url": "https://github.com/apache/aries/raw/03c135f43ca38d9627708610a976df44b7cab584/subsystem/subsystem-core/src/main/java/org/apache/aries/subsystem/core/internal/BundleEventHook.java",
                "status": "modified",
                "changes": 14,
                "additions": 13,
                "contents_url": "https://api.github.com/repos/apache/aries/contents/subsystem/subsystem-core/src/main/java/org/apache/aries/subsystem/core/internal/BundleEventHook.java?ref=03c135f43ca38d9627708610a976df44b7cab584",
                "patch": "@@ -93,12 +93,24 @@ private void handleInstalledEvent(BundleEvent event) {\n \t\t\thandleExplicitlyInstalledBundleBundleContext(originRevision, bundleRevision);\r\n \t}\r\n \t\r\n+\t@SuppressWarnings(\"unchecked\")\r\n \tprivate void handleUninstalledEvent(BundleEvent event) {\r\n \t\tBundle bundle = event.getBundle();\r\n \t\tBundleRevision revision = bundleToRevision.remove(bundle);\r\n \t\tif (ThreadLocalSubsystem.get() != null)\r\n \t\t\treturn;\r\n-\t\tfor (BasicSubsystem subsystem : Activator.getInstance().getSubsystems().getSubsystemsByConstituent(new BundleConstituent(null, revision)))\r\n+\t\tCollection<BasicSubsystem> subsystems;\r\n+\t\tif (revision == null) {\r\n+\t\t\t// The bundle was installed while the bundle event hook was unregistered.\r\n+\t\t\tObject[] o = Activator.getInstance().getSubsystems().getSubsystemsByBundle(bundle);\r\n+\t\t\tif (o == null)\r\n+\t\t\t\treturn;\r\n+\t\t\trevision = (BundleRevision)o[0];\r\n+\t\t\tsubsystems = (Collection<BasicSubsystem>)o[1];\r\n+\t\t}\r\n+\t\telse\r\n+\t\t\tsubsystems = Activator.getInstance().getSubsystems().getSubsystemsByConstituent(new BundleConstituent(null, revision));\r\n+\t\tfor (BasicSubsystem subsystem : subsystems)\r\n \t\t\tResourceUninstaller.newInstance(revision, subsystem).uninstall();\r\n \t}\r\n }\r",
                "deletions": 1
            },
            {
                "sha": "d57370afe92ec35b99da31f6bc075f04c035d795",
                "filename": "subsystem/subsystem-core/src/main/java/org/apache/aries/subsystem/core/internal/BundleResourceInstaller.java",
                "blob_url": "https://github.com/apache/aries/blob/03c135f43ca38d9627708610a976df44b7cab584/subsystem/subsystem-core/src/main/java/org/apache/aries/subsystem/core/internal/BundleResourceInstaller.java",
                "raw_url": "https://github.com/apache/aries/raw/03c135f43ca38d9627708610a976df44b7cab584/subsystem/subsystem-core/src/main/java/org/apache/aries/subsystem/core/internal/BundleResourceInstaller.java",
                "status": "modified",
                "changes": 8,
                "additions": 8,
                "contents_url": "https://api.github.com/repos/apache/aries/contents/subsystem/subsystem-core/src/main/java/org/apache/aries/subsystem/core/internal/BundleResourceInstaller.java?ref=03c135f43ca38d9627708610a976df44b7cab584",
                "patch": "@@ -108,6 +108,14 @@ public int hashCode() {\n \t\tpublic Bundle getBundle() {\n \t\t\treturn revision.getBundle();\n \t\t}\n+\t\t\n+\t\tpublic Resource getResource() {\n+\t\t\treturn resource;\n+\t\t}\n+\t\t\n+\t\tpublic BundleRevision getRevision() {\n+\t\t\treturn revision;\n+\t\t}\n \n \t\t@Override\n \t\tpublic String getSymbolicName() {",
                "deletions": 0
            },
            {
                "sha": "d53427c7afc2092ff86e6013a7688cf2832d7886",
                "filename": "subsystem/subsystem-core/src/main/java/org/apache/aries/subsystem/core/internal/SubsystemResourceInstaller.java",
                "blob_url": "https://github.com/apache/aries/blob/03c135f43ca38d9627708610a976df44b7cab584/subsystem/subsystem-core/src/main/java/org/apache/aries/subsystem/core/internal/SubsystemResourceInstaller.java",
                "raw_url": "https://github.com/apache/aries/raw/03c135f43ca38d9627708610a976df44b7cab584/subsystem/subsystem-core/src/main/java/org/apache/aries/subsystem/core/internal/SubsystemResourceInstaller.java",
                "status": "modified",
                "changes": 22,
                "additions": 20,
                "contents_url": "https://api.github.com/repos/apache/aries/contents/subsystem/subsystem-core/src/main/java/org/apache/aries/subsystem/core/internal/SubsystemResourceInstaller.java?ref=03c135f43ca38d9627708610a976df44b7cab584",
                "patch": "@@ -13,12 +13,14 @@\n  */\n package org.apache.aries.subsystem.core.internal;\n \n+import java.io.IOException;\n import java.util.ArrayList;\n import java.util.Collections;\n import java.util.Comparator;\n import java.util.List;\n \n import org.apache.aries.util.filesystem.FileSystem;\n+import org.osgi.framework.BundleException;\n import org.osgi.resource.Resource;\n import org.osgi.service.coordinator.Coordination;\n import org.osgi.service.coordinator.Participant;\n@@ -90,8 +92,7 @@ private BasicSubsystem installAriesSubsystem(BasicSubsystem subsystem) throws Ex\n \t\taddReference(subsystem);\n \t\taddConstituent(subsystem);\n \t\taddSubsystem(subsystem);\n-\t\tif (subsystem.isScoped())\n-\t\t\tRegionContextBundleHelper.installRegionContextBundle(subsystem);\n+\t\tinstallRegionContextBundle(subsystem);\n \t\tActivator.getInstance().getSubsystemServiceRegistrar().register(subsystem, this.subsystem);\n \t\tComparator<Resource> comparator = new InstallResourceComparator();\n \t\t// Install dependencies first...\n@@ -128,6 +129,23 @@ private BasicSubsystem installRawSubsystemResource(RawSubsystemResource resource\n \t\treturn installSubsystemResource(subsystemResource);\n \t}\n \t\n+\tprivate void installRegionContextBundle(final BasicSubsystem subsystem) throws BundleException, IOException {\n+\t\tif (!subsystem.isScoped())\n+\t\t\treturn;\n+\t\tRegionContextBundleHelper.installRegionContextBundle(subsystem);\n+\t\tcoordination.addParticipant(new Participant() {\n+\t\t\t@Override\n+\t\t\tpublic void ended(Coordination coordination) throws Exception {\n+\t\t\t\t// Nothing\n+\t\t\t}\n+\n+\t\t\t@Override\n+\t\t\tpublic void failed(Coordination coordination) throws Exception {\n+\t\t\t\tRegionContextBundleHelper.uninstallRegionContextBundle(subsystem);\n+\t\t\t}\n+\t\t});\n+\t}\n+\t\n \tprivate BasicSubsystem installRepositoryContent(RepositoryContent resource) throws Exception {\n \t\tRawSubsystemResource rawSubsystemResource = new RawSubsystemResource(getLocation(), FileSystem.getFSRoot(resource.getContent()));\n \t\treturn installRawSubsystemResource(rawSubsystemResource);",
                "deletions": 2
            },
            {
                "sha": "e70bf25d049ad37f0eaf799df8601f481faa5c22",
                "filename": "subsystem/subsystem-core/src/main/java/org/apache/aries/subsystem/core/internal/Subsystems.java",
                "blob_url": "https://github.com/apache/aries/blob/03c135f43ca38d9627708610a976df44b7cab584/subsystem/subsystem-core/src/main/java/org/apache/aries/subsystem/core/internal/Subsystems.java",
                "raw_url": "https://github.com/apache/aries/raw/03c135f43ca38d9627708610a976df44b7cab584/subsystem/subsystem-core/src/main/java/org/apache/aries/subsystem/core/internal/Subsystems.java",
                "status": "modified",
                "changes": 22,
                "additions": 22,
                "contents_url": "https://api.github.com/repos/apache/aries/contents/subsystem/subsystem-core/src/main/java/org/apache/aries/subsystem/core/internal/Subsystems.java?ref=03c135f43ca38d9627708610a976df44b7cab584",
                "patch": "@@ -25,6 +25,7 @@\n import java.util.Map;\n import java.util.Set;\n \n+import org.apache.aries.subsystem.core.internal.BundleResourceInstaller.BundleConstituent;\n import org.osgi.framework.Bundle;\n import org.osgi.framework.BundleContext;\n import org.osgi.framework.wiring.BundleRevision;\n@@ -190,6 +191,27 @@ public BasicSubsystem getSubsystemByLocation(String location) {\n \t\treturn new ArrayList<BasicSubsystem>(idToSubsystem.values());\n \t}\n \t\n+\t// TODO Not very pretty. A quick fix.\n+\tpublic Object[] getSubsystemsByBundle(Bundle bundle) {\n+\t\tBundleRevision revision = null;\n+\t\tArrayList<BasicSubsystem> result = new ArrayList<BasicSubsystem>();\n+\t\tsynchronized (subsystemToConstituents) {\n+\t\t\tfor (BasicSubsystem subsystem : subsystemToConstituents.keySet()) {\n+\t\t\t\tfor (Resource constituent : getConstituents(subsystem)) {\n+\t\t\t\t\tif (constituent instanceof BundleConstituent &&\n+\t\t\t\t\t\t\t((BundleConstituent)constituent).getBundle() == bundle) {\n+\t\t\t\t\t\tresult.add(subsystem);\n+\t\t\t\t\t\trevision = ((BundleConstituent)constituent).getRevision();\n+\t\t\t\t\t}\n+\t\t\t\t}\t\n+\t\t\t}\n+\t\t}\n+\t\tresult.trimToSize();\n+\t\tif (revision == null)\n+\t\t\treturn null;\n+\t\treturn new Object[]{revision, result};\n+\t}\n+\t\n \tpublic Collection<BasicSubsystem> getSubsystemsByConstituent(Resource constituent) {\n \t\tArrayList<BasicSubsystem> result = new ArrayList<BasicSubsystem>();\n \t\tsynchronized (subsystemToConstituents) {",
                "deletions": 0
            },
            {
                "sha": "0c5f83dbfa1d6cad393bc38c636a01b794ff74af",
                "filename": "subsystem/subsystem-itests/src/test/java/org/apache/aries/subsystem/itests/UnmanagedBundleTest.java",
                "blob_url": "https://github.com/apache/aries/blob/03c135f43ca38d9627708610a976df44b7cab584/subsystem/subsystem-itests/src/test/java/org/apache/aries/subsystem/itests/UnmanagedBundleTest.java",
                "raw_url": "https://github.com/apache/aries/raw/03c135f43ca38d9627708610a976df44b7cab584/subsystem/subsystem-itests/src/test/java/org/apache/aries/subsystem/itests/UnmanagedBundleTest.java",
                "status": "modified",
                "changes": 37,
                "additions": 37,
                "contents_url": "https://api.github.com/repos/apache/aries/contents/subsystem/subsystem-itests/src/test/java/org/apache/aries/subsystem/itests/UnmanagedBundleTest.java?ref=03c135f43ca38d9627708610a976df44b7cab584",
                "patch": "@@ -116,4 +116,41 @@ public void testInstallWhileImplBundleUninstalled() throws Exception {\n \t\t\t}\n \t\t}\n \t}\n+\t\n+\t/*\n+\t * Test that bundles installed when the bundle event hook is unavailable\n+\t * (i.e. when the subsystems core bundle is stopped) are handled properly\n+\t * by the hook when uninstalled.\n+\t * \n+\t * See https://issues.apache.org/jira/browse/ARIES-967.\n+\t */\n+\t@Test\n+\tpublic void testBundleEventHook() throws Exception {\n+\t\tBundle core = getSubsystemCoreBundle();\n+\t\t// Stop the subsystems core bundle so the bundle event hook is not registered.\n+\t\tcore.stop();\n+\t\ttry {\n+\t\t\t// Install an unmanaged bundle that will not be seen by the bundle event hook.\n+\t\t\tBundle a = bundleContext.installBundle(BUNDLE_A, new FileInputStream(BUNDLE_A));\n+\t\t\ttry {\n+\t\t\t\t// Restart the subsystems core bundle.\n+\t\t\t\tcore.start();\n+\t\t\t\t// Bundle A should be detected as a constituent of the root subsystem.\n+\t\t\t\tassertConstituent(getRootSubsystem(), BUNDLE_A);\n+\t\t\t\t// Uninstall bundle A so that it is seen by the bundle event hook.\n+\t\t\t\ta.uninstall();\n+\t\t\t\t// Bundle A should no longer be a constituent of the root subsystem.\n+\t\t\t\tassertNotConstituent(getRootSubsystem(), BUNDLE_A);\n+\t\t\t}\n+\t\t\tfinally {\n+\t\t\t\tuninstallSilently(a);\n+\t\t\t}\n+\t\t}\n+\t\tfinally {\n+\t\t\ttry {\n+\t\t\t\tcore.start();\n+\t\t\t}\n+\t\t\tcatch (Exception e) {}\n+\t\t}\n+\t}\n }",
                "deletions": 0
            }
        ]
    },
    {
        "repo": "aries",
        "message": "ARIES-922: If a bundle is uninstalled from the root region while the bundle event hook is not registered but remains in persistent memory, root initialization will no longer fail with an NPE. The missing bundle is simply removed from memory.\n\nA failure will still occur if the same thing happens for a non-root subsystem. I left it that way for now for fail-fast purposes since it would be very bad for someone to muck around with the deployed content of a non-root subsystem outside of the subsystems API. It might be reasonable in the future to make this more intelligent by checking to see if the missing resource is optional or trying to re-deploy it from a repository.\n\nAlso added a new test.\n\ngit-svn-id: https://svn.apache.org/repos/asf/aries/trunk@1382116 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/aries/commit/0b8e09c83972e95113c8b7f5c35df518d27f44d0",
        "parent": "https://github.com/apache/aries/commit/68bf8a459ae446c4d17ddf6c46621def3fc45787",
        "bug_id": "aries_58",
        "file": [
            {
                "sha": "1569d2aa555c1fea0d17ea55ea59181c2750152d",
                "filename": "subsystem/subsystem-core/src/main/java/org/apache/aries/subsystem/core/archive/DeployedContentHeader.java",
                "blob_url": "https://github.com/apache/aries/blob/0b8e09c83972e95113c8b7f5c35df518d27f44d0/subsystem/subsystem-core/src/main/java/org/apache/aries/subsystem/core/archive/DeployedContentHeader.java",
                "raw_url": "https://github.com/apache/aries/raw/0b8e09c83972e95113c8b7f5c35df518d27f44d0/subsystem/subsystem-core/src/main/java/org/apache/aries/subsystem/core/archive/DeployedContentHeader.java",
                "status": "modified",
                "changes": 21,
                "additions": 21,
                "contents_url": "https://api.github.com/repos/apache/aries/contents/subsystem/subsystem-core/src/main/java/org/apache/aries/subsystem/core/archive/DeployedContentHeader.java?ref=0b8e09c83972e95113c8b7f5c35df518d27f44d0",
                "patch": "@@ -84,6 +84,27 @@ public boolean contains(Resource resource) {\n \t\t\t\t\t\t\tResourceHelper.getTypeAttribute(resource));\n \t\t}\n \t\t\n+\t\t@Override\n+\t\tpublic boolean equals(Object o) {\n+\t\t\tif (o == this)\n+\t\t\t\treturn true;\n+\t\t\tif (!(o instanceof Clause))\n+\t\t\t\treturn false;\n+\t\t\tClause that = (Clause)o;\n+\t\t\treturn getSymbolicName().equals(that.getSymbolicName())\n+\t\t\t\t\t&& getDeployedVersion().equals(that.getDeployedVersion())\n+\t\t\t\t\t&& getType().equals(that.getType());\n+\t\t}\n+\t\t\n+\t\t@Override\n+\t\tpublic int hashCode() {\n+\t\t\tint result = 17;\n+\t\t\tresult = 31 * result + getSymbolicName().hashCode();\n+\t\t\tresult = 31 * result + getDeployedVersion().hashCode();\n+\t\t\tresult = 31 * result + getType().hashCode();\n+\t\t\treturn result;\n+\t\t}\n+\t\t\n \t\t@Override\n \t\tpublic Attribute getAttribute(String name) {\n \t\t\tParameter result = parameters.get(name);",
                "deletions": 0
            },
            {
                "sha": "b2876fd7401698ebb77d4a03df01e77a6729cadb",
                "filename": "subsystem/subsystem-core/src/main/java/org/apache/aries/subsystem/core/internal/AriesSubsystem.java",
                "blob_url": "https://github.com/apache/aries/blob/0b8e09c83972e95113c8b7f5c35df518d27f44d0/subsystem/subsystem-core/src/main/java/org/apache/aries/subsystem/core/internal/AriesSubsystem.java",
                "raw_url": "https://github.com/apache/aries/raw/0b8e09c83972e95113c8b7f5c35df518d27f44d0/subsystem/subsystem-core/src/main/java/org/apache/aries/subsystem/core/internal/AriesSubsystem.java",
                "status": "modified",
                "changes": 24,
                "additions": 23,
                "contents_url": "https://api.github.com/repos/apache/aries/contents/subsystem/subsystem-core/src/main/java/org/apache/aries/subsystem/core/internal/AriesSubsystem.java?ref=0b8e09c83972e95113c8b7f5c35df518d27f44d0",
                "patch": "@@ -358,6 +358,20 @@ synchronized SubsystemResource getResource() {\n \t\t\tcatch (Exception e) {\n \t\t\t\tthrow new SubsystemException(e);\n \t\t\t}\n+\t\t\tCollection<DeployedContentHeader.Clause> missingResources = resource.getMissingResources();\n+\t\t\tif (!missingResources.isEmpty()) {\n+\t\t\t\tif (isRoot())\n+\t\t\t\t\t// We don't care if the root subsystem has missing resources\n+\t\t\t\t\t// because they are either (1) extraneous bundles outside of\n+\t\t\t\t\t// the subsystems API or (2) provisioned dependencies of\n+\t\t\t\t\t// other subsystems. Those that fall in the latter category\n+\t\t\t\t\t// will be detected by the dependent subsystems.\n+\t\t\t\t\tremovedContent(missingResources);\n+\t\t\t\telse\n+\t\t\t\t\t// If a non-root subsystem has missing dependencies, let's\n+\t\t\t\t\t// fail fast for now.\n+\t\t\t\t\tthrow new SubsystemException(\"Missing resources: \" + missingResources);\n+\t\t\t}\n \t\t}\n \t\treturn resource;\n \t}\n@@ -427,9 +441,17 @@ void removedContent(Resource resource) {\n \t\tDeployedContentHeader.Clause clause = header.getClause(resource);\n \t\tif (clause == null)\n \t\t\treturn;\n+\t\tremovedContent(Collections.singleton(clause));\n+\t}\n+\t\n+\tvoid removedContent(Collection<DeployedContentHeader.Clause> content) {\n+\t\tDeploymentManifest manifest = getDeploymentManifest();\n+\t\tDeployedContentHeader header = manifest.getDeployedContentHeader();\n+\t\tif (header == null)\n+\t\t\treturn;\n \t\tCollection<DeployedContentHeader.Clause> clauses = new ArrayList<DeployedContentHeader.Clause>(header.getClauses());\n \t\tfor (Iterator<DeployedContentHeader.Clause> i = clauses.iterator(); i.hasNext();)\n-\t\t\tif (clause.equals(i.next())) {\n+\t\t\tif (content.contains(i.next())) {\n \t\t\t\ti.remove();\n \t\t\t\tbreak;\n \t\t\t}",
                "deletions": 1
            },
            {
                "sha": "a9c7461ebb61afa187ceacbb4187bee8679314a7",
                "filename": "subsystem/subsystem-core/src/main/java/org/apache/aries/subsystem/core/internal/SubsystemResource.java",
                "blob_url": "https://github.com/apache/aries/blob/0b8e09c83972e95113c8b7f5c35df518d27f44d0/subsystem/subsystem-core/src/main/java/org/apache/aries/subsystem/core/internal/SubsystemResource.java",
                "raw_url": "https://github.com/apache/aries/raw/0b8e09c83972e95113c8b7f5c35df518d27f44d0/subsystem/subsystem-core/src/main/java/org/apache/aries/subsystem/core/internal/SubsystemResource.java",
                "status": "modified",
                "changes": 20,
                "additions": 17,
                "contents_url": "https://api.github.com/repos/apache/aries/contents/subsystem/subsystem-core/src/main/java/org/apache/aries/subsystem/core/internal/SubsystemResource.java?ref=0b8e09c83972e95113c8b7f5c35df518d27f44d0",
                "patch": "@@ -46,6 +46,7 @@\n import org.eclipse.equinox.region.RegionDigraph;\r\n import org.eclipse.equinox.region.RegionFilter;\r\n import org.eclipse.equinox.region.RegionFilterBuilder;\r\n+import org.osgi.framework.Bundle;\r\n import org.osgi.framework.BundleContext;\r\n import org.osgi.framework.BundleException;\r\n import org.osgi.framework.InvalidSyntaxException;\r\n@@ -76,6 +77,7 @@\n \tprivate final Collection<Resource> installableContent = new HashSet<Resource>();\r\n \tprivate final Collection<Resource> installableDependencies = new HashSet<Resource>();\r\n \tprivate final Collection<Resource> mandatoryResources = new HashSet<Resource>();\r\n+\tprivate final Collection<DeployedContentHeader.Clause> missingResources = new HashSet<DeployedContentHeader.Clause>();\r\n \tprivate final Collection<Resource> optionalResources = new HashSet<Resource>();\r\n \tprivate final AriesSubsystem parent;\r\n \tprivate final Repository preferredProviderRepository;\r\n@@ -159,6 +161,10 @@ public String getLocation() {\n \t\treturn resource.getLocation().getValue();\r\n \t}\r\n \t\r\n+\tpublic Collection<DeployedContentHeader.Clause> getMissingResources() {\r\n+\t\treturn missingResources;\r\n+\t}\r\n+\t\r\n \tpublic Collection<AriesSubsystem> getParents() {\r\n \t\tif (parent == null) {\r\n \t\t\tHeader<?> header = getDeploymentManifest().getHeaders().get(DeploymentManifest.ARIESSUBSYSTEM_PARENTS);\r\n@@ -290,6 +296,10 @@ private void addDependency(Resource resource) {\n \t\t\tsharedDependencies.add(resource);\r\n \t}\r\n \t\r\n+\tprivate void addMissingResource(DeployedContentHeader.Clause resource) {\r\n+\t\tmissingResources.add(resource);\r\n+\t}\r\n+\t\r\n \tprivate void addValidCapabilities(Collection<Capability> from, Collection<Capability> to) throws BundleException, IOException, InvalidSyntaxException, URISyntaxException {\r\n \t\tfor (Capability c : from)\r\n \t\t\tif (isValid(c))\r\n@@ -332,8 +342,9 @@ private void computeContentResources(DeploymentManifest manifest) throws BundleE\n \t\t\tfor (DeployedContentHeader.Clause clause : header.getClauses()) {\r\n \t\t\t\tResource resource = findContent(clause);\r\n \t\t\t\tif (resource == null)\r\n-\t\t\t\t\tthrow new SubsystemException(\"Resource does not exist: \" + clause);\r\n-\t\t\t\taddContentResource(resource);\r\n+\t\t\t\t\taddMissingResource(clause);\r\n+\t\t\t\telse\r\n+\t\t\t\t\taddContentResource(resource);\r\n \t\t\t}\r\n \t\t}\r\n \t}\r\n@@ -531,7 +542,10 @@ private Resource findContent(DeployedContentHeader.Clause clause) throws BundleE\n \t\tif (resourceId != -1) {\r\n \t\t\tString type = clause.getType();\r\n \t\t\tif (IdentityNamespace.TYPE_BUNDLE.equals(type) || IdentityNamespace.TYPE_FRAGMENT.equals(type)) {\r\n-\t\t\t\treturn Activator.getInstance().getBundleContext().getBundle(0).getBundleContext().getBundle(resourceId).adapt(BundleRevision.class);\r\n+\t\t\t\tBundle resource = Activator.getInstance().getBundleContext().getBundle(0).getBundleContext().getBundle(resourceId);\r\n+\t\t\t\tif (resource == null)\r\n+\t\t\t\t\treturn null;\r\n+\t\t\t\treturn resource.adapt(BundleRevision.class);\r\n \t\t\t}\r\n \t\t\telse\r\n \t\t\t\treturn Activator.getInstance().getSubsystems().getSubsystemById(resourceId);\r",
                "deletions": 3
            },
            {
                "sha": "cf9bd65009469cb8e2202f311400d999cacbfc1a",
                "filename": "subsystem/subsystem-itests/src/test/java/org/apache/aries/subsystem/itests/RootSubsystemTest.java",
                "blob_url": "https://github.com/apache/aries/blob/0b8e09c83972e95113c8b7f5c35df518d27f44d0/subsystem/subsystem-itests/src/test/java/org/apache/aries/subsystem/itests/RootSubsystemTest.java",
                "raw_url": "https://github.com/apache/aries/raw/0b8e09c83972e95113c8b7f5c35df518d27f44d0/subsystem/subsystem-itests/src/test/java/org/apache/aries/subsystem/itests/RootSubsystemTest.java",
                "status": "modified",
                "changes": 29,
                "additions": 29,
                "contents_url": "https://api.github.com/repos/apache/aries/contents/subsystem/subsystem-itests/src/test/java/org/apache/aries/subsystem/itests/RootSubsystemTest.java?ref=0b8e09c83972e95113c8b7f5c35df518d27f44d0",
                "patch": "@@ -14,6 +14,7 @@\n package org.apache.aries.subsystem.itests;\r\n \r\n import static org.junit.Assert.assertEquals;\r\n+import static org.junit.Assert.fail;\r\n \r\n import java.io.File;\r\n import java.io.IOException;\r\n@@ -102,6 +103,34 @@ public void testSymbolicName() {\n \t\tassertEquals(\"Wrong root symbolic name\", getRootSubsystem().getSymbolicName(), \"org.osgi.service.subsystem.root\");\r\n \t}\r\n \t\r\n+\t@Test\r\n+\tpublic void testUninstallRootRegionBundleWithNoBundleEventHook() throws Exception {\r\n+\t\t// Install an extraneous bundle into the root region. The bundle will\r\n+\t\t// be recorded in the root subsystem's persistent memory.\r\n+\t\tBundle bundleA = bundleContext.installBundle(new File(BUNDLE_A).toURI().toURL().toString());\r\n+\t\ttry {\r\n+\t\t\tBundle core = getSubsystemCoreBundle();\r\n+\t\t\t// Stop the subsystems bundle in order to unregister the bundle\r\n+\t\t\t// event hook.\r\n+\t\t\tcore.stop();\r\n+\t\t\t// Uninstall the bundle so it won't be there on restart.\r\n+\t\t\tbundleA.uninstall();\r\n+\t\t\ttry {\r\n+\t\t\t\t// Start the subsystems bundle and ensure the root subsystem\r\n+\t\t\t\t// recovers from the uninstalled bundle being in persistent\r\n+\t\t\t\t// memory.\r\n+\t\t\t\tcore.start();\r\n+\t\t\t}\r\n+\t\t\tcatch (BundleException e) {\r\n+\t\t\t\tfail(\"Could not start subsystems bundle after uninstalling a root region bundle with no bundle event hook registered\");\r\n+\t\t\t}\r\n+\t\t}\r\n+\t\tfinally {\r\n+\t\t\tif (Bundle.UNINSTALLED != bundleA.getState())\r\n+\t\t\t\tbundleA.uninstall();\r\n+\t\t}\r\n+\t}\r\n+\t\r\n \t@Test\r\n \tpublic void testVersion() {\r\n \t\tassertEquals(\"Wrong root version\", getRootSubsystem().getVersion(), Version.parseVersion(\"1.0.0\"));\r",
                "deletions": 0
            }
        ]
    },
    {
        "repo": "aries",
        "message": "ARIES-825: Update subsystems to latest Subsystem, Resolver, and Repository APIs.\n\n(1) added toString() in AbstractHeader\n(2) fixed issue where Subsystem-Content manifest header was not being derived when subsystem has manifest with no content header\n(3) fixed issue where feature constituents were being assigned to the scoped subsystem within the same region\n(4) fixed issue where region context bundles were being generated for features\n(5) fixed NPE issue in getBundleContext() for features\n(6) fixed issue with generation of unique location when installing bundle resources\n(7) now supports resource type osgi.fragment on subsystem lifecycle operations\n(8) fixed issue where already started bundles were being called with start(START_TRANSIENT)\n(9) root subsystem will now only stop child subsystems\n(10) child subsystems should be stopped before any other constituents for all subsystems\n\ngit-svn-id: https://svn.apache.org/repos/asf/aries/trunk@1243908 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/aries/commit/016463ffc13aa95ee8bc781bc7be07135c942c2f",
        "parent": "https://github.com/apache/aries/commit/c63b63790d92350a2b285f1c2ad4d716af26251b",
        "bug_id": "aries_59",
        "file": [
            {
                "sha": "faea2d8ae0cc7a06d37110254bfb30d7f0d2e6d5",
                "filename": "subsystem/subsystem-core/src/main/java/org/apache/aries/subsystem/core/archive/AbstractHeader.java",
                "blob_url": "https://github.com/apache/aries/blob/016463ffc13aa95ee8bc781bc7be07135c942c2f/subsystem/subsystem-core/src/main/java/org/apache/aries/subsystem/core/archive/AbstractHeader.java",
                "raw_url": "https://github.com/apache/aries/raw/016463ffc13aa95ee8bc781bc7be07135c942c2f/subsystem/subsystem-core/src/main/java/org/apache/aries/subsystem/core/archive/AbstractHeader.java",
                "status": "modified",
                "changes": 9,
                "additions": 9,
                "contents_url": "https://api.github.com/repos/apache/aries/contents/subsystem/subsystem-core/src/main/java/org/apache/aries/subsystem/core/archive/AbstractHeader.java?ref=016463ffc13aa95ee8bc781bc7be07135c942c2f",
                "patch": "@@ -70,4 +70,13 @@ public String getName() {\n \tpublic String getValue() {\n \t\treturn value;\n \t}\n+\t\n+\tpublic String toString() {\n+\t\treturn new StringBuilder(getClass().getName())\n+\t\t.append(\": name=\")\n+\t\t.append(name)\n+\t\t.append(\", value=\")\n+\t\t.append(value)\n+\t\t.toString();\n+\t}\n }",
                "deletions": 0
            },
            {
                "sha": "bba737b1f15bbfa6ac7c4a89a4fab75a91a9eeda",
                "filename": "subsystem/subsystem-core/src/main/java/org/apache/aries/subsystem/core/internal/AriesSubsystem.java",
                "blob_url": "https://github.com/apache/aries/blob/016463ffc13aa95ee8bc781bc7be07135c942c2f/subsystem/subsystem-core/src/main/java/org/apache/aries/subsystem/core/internal/AriesSubsystem.java",
                "raw_url": "https://github.com/apache/aries/raw/016463ffc13aa95ee8bc781bc7be07135c942c2f/subsystem/subsystem-core/src/main/java/org/apache/aries/subsystem/core/internal/AriesSubsystem.java",
                "status": "modified",
                "changes": 102,
                "additions": 62,
                "contents_url": "https://api.github.com/repos/apache/aries/contents/subsystem/subsystem-core/src/main/java/org/apache/aries/subsystem/core/internal/AriesSubsystem.java?ref=016463ffc13aa95ee8bc781bc7be07135c942c2f",
                "patch": "@@ -273,8 +273,7 @@ public AriesSubsystem() throws Exception {\n \t\t\t}\r\n \t\t\t// TODO Escaping 'this' reference.\r\n \t\t\ts.add(this);\r\n-\t\t\t// TODO What the heck is going on here? Don't we need to add the bundle revision\r\n-\t\t\t// as a constituent as well?\r\n+\t\t\tconstituents.add(br);\r\n \t\t}\r\n \t\t// TODO End proof of concept.\r\n \t\tLOGGER.debug(LOG_EXIT, \"init\");\r\n@@ -312,17 +311,17 @@ public AriesSubsystem(String location, InputStream content, AriesSubsystem paren\n \t\t\tthrow new SubsystemException(e);\r\n \t\t}\r\n \t\tenvironment = new SubsystemEnvironment(this);\r\n-\t\tif (archive.getSubsystemManifest() == null) {\r\n-\t\t\t// TODO Since it's optional to use the subsystem URI, it might be\r\n-\t\t\t// better to create the URI in a try/catch block and throw an\r\n-\t\t\t// exception with a message indicating we received a subsystem\r\n-\t\t\t// with no manifest and no subsystem URI.\r\n-\t\t\tarchive.setSubsystemManifest(new SubsystemManifest(\r\n-\t\t\t\t\turi.getSymbolicName(), \r\n-\t\t\t\t\turi.getVersion(), \r\n-\t\t\t\t\tarchive.getResources()));\r\n-\t\t}\r\n-\t\tregion = createRegion(getSymbolicName() + ';' + getVersion() + ';' + getType() + ';' + getSubsystemId());\r\n+\t\t// Make sure the relevant headers are derived, if absent.\r\n+\t\tarchive.setSubsystemManifest(new SubsystemManifest(\r\n+\t\t\t\tarchive.getSubsystemManifest(),\r\n+\t\t\t\turi == null ? null : uri.getSymbolicName(), \r\n+\t\t\t\turi == null ? null : uri.getVersion(), \r\n+\t\t\t\tarchive.getResources()));\r\n+\t\t// Unscoped subsystems don't get their own region. They share the region with their scoped parent.\r\n+\t\tif (isFeature())\r\n+\t\t\tregion = parents.get(0).region;\r\n+\t\telse\r\n+\t\t\tregion = createRegion(getSymbolicName() + ';' + getVersion() + ';' + getType() + ';' + getSubsystemId());\r\n \t}\r\n \t\r\n \tpublic AriesSubsystem(SubsystemArchive archive, AriesSubsystem parent) throws Exception {\r\n@@ -338,7 +337,11 @@ public AriesSubsystem(SubsystemArchive archive, AriesSubsystem parent) throws Ex\n \t\tdirectory = new File(parent.directory, directoryName);\r\n \t\tenvironment = new SubsystemEnvironment(this);\r\n \t\tparents.add(parent);\r\n-\t\tregion = createRegion(getSymbolicName() + ';' + getVersion() + ';' + getType() + ';' + getSubsystemId());\r\n+\t\t// Unscoped subsystems don't get their own region. They share the region with their scoped parent.\r\n+\t\tif (isFeature())\r\n+\t\t\tregion = parents.get(0).region;\r\n+\t\telse\r\n+\t\t\tregion = createRegion(getSymbolicName() + ';' + getVersion() + ';' + getType() + ';' + getSubsystemId());\r\n \t}\r\n \t\r\n \tpublic SubsystemArchive getArchive() {\r\n@@ -349,6 +352,10 @@ public SubsystemArchive getArchive() {\n \tpublic BundleContext getBundleContext() {\r\n \t\tif (EnumSet.of(State.INSTALL_FAILED, State.UNINSTALLED).contains(getState()))\r\n \t\t\treturn null;\r\n+\t\t// Features, and unscoped subsystems in general, do not have their own region context\r\n+\t\t// bundle but rather share with the scoped subsystem in the same region.\r\n+\t\tif (isFeature())\r\n+\t\t\treturn parents.get(0).getBundleContext();\r\n \t\treturn region.getBundle(RegionContextBundleHelper.SYMBOLICNAME_PREFIX + id, RegionContextBundleHelper.VERSION).getBundleContext();\r\n \t}\r\n \t\r\n@@ -366,15 +373,7 @@ public BundleContext getBundleContext() {\n \r\n \t@Override\r\n \tpublic synchronized Collection<Resource> getConstituents() {\r\n-\t\tCollection<Resource> resources = new HashSet<Resource>();\r\n-\t\tif (isRoot() || isApplication() || isComposite()) {\r\n-\t\t\tSet<Long> bundleIds = region.getBundleIds();\r\n-\t\t\tBundleContext context = getBundleContext();\r\n-\t\t\tfor (Long bundleId : bundleIds)\r\n-\t\t\t\tresources.add(context.getBundle(bundleId).adapt(BundleRevision.class));\r\n-\t\t}\r\n-\t\tresources.addAll(constituents);\r\n-\t\treturn Collections.unmodifiableCollection(resources);\r\n+\t\treturn Collections.unmodifiableCollection(constituents);\r\n \t}\r\n \r\n \t@Override\r\n@@ -548,7 +547,7 @@ public synchronized void start() throws SubsystemException {\n \t\t\t\tcoordination.end();\r\n \t\t\t} catch (CoordinationException e) {\r\n \t\t\t\tLOGGER.error(\r\n-\t\t\t\t\t\t\"An error occurred while starting in a resource in subsystem \"\r\n+\t\t\t\t\t\t\"An error occurred while starting a resource in subsystem \"\r\n \t\t\t\t\t\t\t\t+ this, e);\r\n \t\t\t\tsetState(State.RESOLVED);\r\n \t\t\t}\r\n@@ -619,7 +618,8 @@ else if (getState() == State.ACTIVE) {\n \t\tdeleteFile(directory);\r\n \t\tsetState(State.UNINSTALLED);\r\n \t\tActivator.getInstance().getSubsystemServiceRegistrar().unregister(this);\r\n-\t\tRegionContextBundleHelper.uninstallRegionContextBundle(this);\r\n+\t\tif (!isFeature())\r\n+\t\t\tconstituents.remove(RegionContextBundleHelper.uninstallRegionContextBundle(this));\r\n \t}\r\n \t\r\n \tvoid bundleChanged(BundleEvent event) {\r\n@@ -650,7 +650,8 @@ Region getRegion() {\n \t}\r\n \t\r\n \tsynchronized void install() throws Exception {\r\n-\t\tRegionContextBundleHelper.installRegionContextBundle(this);\r\n+\t\tif (!isFeature())\r\n+\t\t\tconstituents.add(RegionContextBundleHelper.installRegionContextBundle(this));\r\n \t\tActivator.getInstance().getSubsystemServiceRegistrar().register(this);\r\n \t\tList<Resource> contentResources = new ArrayList<Resource>();\r\n \t\tList<Resource> transitiveDependencies = new ArrayList<Resource>();\r\n@@ -717,13 +718,29 @@ else if (getState() != State.ACTIVE) {\n \t\t\treturn;\r\n \t\t}\r\n \t\tsetState(State.STOPPING);\r\n-\t\tfor (Resource resource : constituents) {\r\n+\t\t// Stop child subsystems first.\r\n+\t\tfor (AriesSubsystem subsystem : children) {\r\n \t\t\ttry {\r\n-\t\t\t\tstopResource(resource);\r\n-\t\t\t} catch (Exception e) {\r\n+\t\t\t\tstopResource(subsystem);\r\n+\t\t\t}\r\n+\t\t\tcatch (Exception e) {\r\n \t\t\t\tLOGGER.error(\"An error occurred while stopping resource \"\r\n-\t\t\t\t\t\t+ resource + \" of subsystem \" + this, e);\r\n-\t\t\t\t// TODO Should FAILED go out for each failure?\r\n+\t\t\t\t\t\t+ subsystem + \" of subsystem \" + this, e);\r\n+\t\t\t}\r\n+\t\t}\r\n+\t\t// For non-root subsystems, stop any remaining constituents.\r\n+\t\tif (!isRoot()){\r\n+\t\t\tfor (Resource resource : constituents) {\r\n+\t\t\t\ttry {\r\n+\t\t\t\t\t// Don't stop the region context bundle.\r\n+\t\t\t\t\tif (ResourceHelper.getSymbolicNameAttribute(resource).startsWith(RegionContextBundleHelper.SYMBOLICNAME_PREFIX))\r\n+\t\t\t\t\t\tcontinue;\r\n+\t\t\t\t\tstopResource(resource);\r\n+\t\t\t\t} catch (Exception e) {\r\n+\t\t\t\t\tLOGGER.error(\"An error occurred while stopping resource \"\r\n+\t\t\t\t\t\t\t+ resource + \" of subsystem \" + this, e);\r\n+\t\t\t\t\t// TODO Should FAILED go out for each failure?\r\n+\t\t\t\t}\r\n \t\t\t}\r\n \t\t}\r\n \t\t// TODO Can we automatically assume it actually is resolved?\r\n@@ -823,11 +840,6 @@ private AriesSubsystem getProvisionTo(Resource resource, boolean transitive) {\n \t\t\twhile (!provisionTo.parents.isEmpty())\r\n \t\t\t\tprovisionTo = provisionTo.parents.get(0);\r\n \t\t}\r\n-\t\telse {\r\n-\t\t\twhile (provisionTo.isFeature())\r\n-\t\t\t\t// Feature resources should be provisioned into the first parent that's not a feature.\r\n-\t\t\t\tprovisionTo = provisionTo.parents.get(0);\r\n-\t\t}\r\n \t\treturn provisionTo;\r\n \t}\r\n \r\n@@ -842,7 +854,7 @@ private void installBundleResource(Resource resource, Coordination coordination,\n \t\t\t}\r\n \t\t\telse {\r\n \t\t\t\tInputStream content = ((RepositoryContent)resource).getContent();\r\n-\t\t\t\tString location = provisionTo.getSubsystemId() + '@' + provisionTo.getSymbolicName() + '@' + content;\r\n+\t\t\t\tString location = provisionTo.getSubsystemId() + \"@\" + provisionTo.getSymbolicName() + \"@\" + ResourceHelper.getSymbolicNameAttribute(resource);\r\n \t\t\t\tBundle bundle = provisionTo.region.installBundle(location, content);\r\n \t\t\t\trevision = bundle.adapt(BundleRevision.class);\r\n \t\t\t}\r\n@@ -854,15 +866,18 @@ private void installBundleResource(Resource resource, Coordination coordination,\n \t\t\t\tresourceToSubsystems.put(revision, subsystems);\r\n \t\t\t}\r\n \t\t\tsubsystems.add(this);\r\n+\t\t\t\r\n \t\t}\r\n \t\tfinal AriesSubsystem constituentOf = getConstituentOf(resource, provisionTo, transitive);\r\n+\t\tconstituentOf.constituents.add(revision);\r\n \t\tcoordination.addParticipant(new Participant() {\r\n \t\t\tpublic void ended(Coordination coordination) throws Exception {\r\n-\t\t\t\tconstituentOf.constituents.add(revision);\r\n+\t\t\t\t// noop\r\n \t\t\t}\r\n \t\r\n \t\t\tpublic void failed(Coordination coordination) throws Exception {\r\n \t\t\t\tsynchronized (resourceToSubsystems) {\r\n+\t\t\t\t\tconstituentOf.constituents.remove(revision);\r\n \t\t\t\t\tSet<AriesSubsystem> subsystems = resourceToSubsystems.get(revision);\r\n \t\t\t\t\tsubsystems.remove(AriesSubsystem.this);\r\n \t\t\t\t\tif (subsystems.isEmpty()) {\r\n@@ -880,6 +895,8 @@ private void installResource(Resource resource, Coordination coordination, boole\n \t\t\tinstallSubsystemResource(resource, coordination, transitive);\r\n \t\telse if (ResourceConstants.IDENTITY_TYPE_BUNDLE.equals(type))\r\n \t\t\tinstallBundleResource(resource, coordination, transitive);\r\n+\t\telse if (ResourceConstants.IDENTITY_TYPE_FRAGMENT.equals(type))\r\n+\t\t\tinstallBundleResource(resource, coordination, transitive);\r\n \t\telse\r\n \t\t\tthrow new SubsystemException(\"Unsupported resource type: \" + type);\r\n \t}\r\n@@ -986,6 +1003,8 @@ else if (isComposite()) {\n \r\n \tprivate void startBundleResource(Resource resource, Coordination coordination) throws BundleException {\r\n \t\tfinal Bundle bundle = ((BundleRevision)resource).getBundle();\r\n+\t\tif ((bundle.getState() & (Bundle.STARTING | Bundle.ACTIVE)) != 0)\r\n+\t\t\treturn;\r\n \t\tbundle.start(Bundle.START_TRANSIENT);\r\n \t\tif (coordination == null)\r\n \t\t\treturn;\r\n@@ -1003,10 +1022,13 @@ public void failed(Coordination coordination) throws Exception {\n \tprivate void startResource(Resource resource, Coordination coordination) throws BundleException, IOException {\r\n \t\tString type = ResourceHelper.getTypeAttribute(resource);\r\n \t\t// TODO Add to constants.\r\n-\t\tif (\"osgi.subsystem\".equals(type))\r\n+\t\tif (SubsystemConstants.IDENTITY_TYPE_SUBSYSTEM.equals(type))\r\n \t\t\tstartSubsystemResource(resource, coordination);\r\n \t\telse if (ResourceConstants.IDENTITY_TYPE_BUNDLE.equals(type))\r\n \t\t\tstartBundleResource(resource, coordination);\r\n+\t\telse if (ResourceConstants.IDENTITY_TYPE_FRAGMENT.equals(type)) {\r\n+\t\t\t// Fragments are not started.\r\n+\t\t}\r\n \t\telse\r\n \t\t\tthrow new SubsystemException(\"Unsupported resource type: \" + type);\r\n \t}\r\n@@ -1034,7 +1056,7 @@ private void stopBundleResource(Resource resource) throws BundleException {\n \tprivate void stopResource(Resource resource) throws BundleException, IOException {\r\n \t\tString type = ResourceHelper.getTypeAttribute(resource);\r\n \t\t// TODO Add to constants.\r\n-\t\tif (\"osgi.subsystem\".equals(type))\r\n+\t\tif (SubsystemConstants.IDENTITY_TYPE_SUBSYSTEM.equals(type))\r\n \t\t\tstopSubsystemResource(resource);\r\n \t\telse if (ResourceConstants.IDENTITY_TYPE_BUNDLE.equals(type))\r\n \t\t\tstopBundleResource(resource);\r",
                "deletions": 40
            },
            {
                "sha": "5cd0506e3484afb1ed63a4d0ff23eb854f0781c3",
                "filename": "subsystem/subsystem-core/src/main/java/org/apache/aries/subsystem/core/internal/RegionContextBundleHelper.java",
                "blob_url": "https://github.com/apache/aries/blob/016463ffc13aa95ee8bc781bc7be07135c942c2f/subsystem/subsystem-core/src/main/java/org/apache/aries/subsystem/core/internal/RegionContextBundleHelper.java",
                "raw_url": "https://github.com/apache/aries/raw/016463ffc13aa95ee8bc781bc7be07135c942c2f/subsystem/subsystem-core/src/main/java/org/apache/aries/subsystem/core/internal/RegionContextBundleHelper.java",
                "status": "modified",
                "changes": 11,
                "additions": 7,
                "contents_url": "https://api.github.com/repos/apache/aries/contents/subsystem/subsystem-core/src/main/java/org/apache/aries/subsystem/core/internal/RegionContextBundleHelper.java?ref=016463ffc13aa95ee8bc781bc7be07135c942c2f",
                "patch": "@@ -12,17 +12,18 @@\n import org.osgi.framework.BundleException;\r\n import org.osgi.framework.Constants;\r\n import org.osgi.framework.Version;\r\n+import org.osgi.framework.wiring.BundleRevision;\r\n \r\n public class RegionContextBundleHelper {\r\n \tpublic static final String SYMBOLICNAME_PREFIX = \"org.osgi.service.subsystem.region.context.\";\r\n \tpublic static final Version VERSION = Version.parseVersion(\"1.0.0\");\r\n \t\r\n-\tpublic static void installRegionContextBundle(AriesSubsystem subsystem) throws BundleException, IOException {\r\n+\tpublic static BundleRevision installRegionContextBundle(AriesSubsystem subsystem) throws BundleException, IOException {\r\n \t\tString symbolicName = SYMBOLICNAME_PREFIX + subsystem.getSubsystemId();\r\n \t\tString location = subsystem.getLocation() + '/' + subsystem.getSubsystemId();\r\n \t\tBundle b = subsystem.getRegion().getBundle(symbolicName, VERSION);\r\n \t\tif (b != null)\r\n-\t\t\treturn;\r\n+\t\t\treturn b.adapt(BundleRevision.class);\r\n \t\tBundle t = subsystem.getRegion().installBundle(location + \"/temp\", createTempBundle(symbolicName));\r\n \t\ttry {\r\n \t\t\tt.start();\r\n@@ -36,19 +37,21 @@ public static void installRegionContextBundle(AriesSubsystem subsystem) throws B\n \t\t}\r\n \t\t// The region context bundle must be started persistently.\r\n \t\tb.start();\r\n+\t\treturn b.adapt(BundleRevision.class);\r\n \t}\r\n \t\r\n-\tpublic static void uninstallRegionContextBundle(AriesSubsystem subsystem) {\r\n+\tpublic static BundleRevision uninstallRegionContextBundle(AriesSubsystem subsystem) {\r\n \t\tString symbolicName = SYMBOLICNAME_PREFIX + subsystem.getSubsystemId();\r\n \t\tBundle bundle = subsystem.getRegion().getBundle(symbolicName, VERSION);\r\n \t\tif (bundle == null)\r\n-\t\t\treturn;\r\n+\t\t\tthrow new IllegalStateException(\"Missing region context bundle: \" + symbolicName);\r\n \t\ttry {\r\n \t\t\tbundle.uninstall();\r\n \t\t}\r\n \t\tcatch (BundleException e) {\r\n \t\t\t// TODO Should we really eat this? At least log it?\r\n \t\t}\r\n+\t\treturn bundle.adapt(BundleRevision.class);\r\n \t}\r\n \t\r\n \tprivate static InputStream createRegionContextBundle(String symbolicName) throws IOException {\r",
                "deletions": 4
            },
            {
                "sha": "34f603ee0d3f2fa5eac6bc4ae7e3bfc990ce07f8",
                "filename": "subsystem/subsystem-itests/src/test/java/org/apache/aries/subsystem/itests/BasicTest.java",
                "blob_url": "https://github.com/apache/aries/blob/016463ffc13aa95ee8bc781bc7be07135c942c2f/subsystem/subsystem-itests/src/test/java/org/apache/aries/subsystem/itests/BasicTest.java",
                "raw_url": "https://github.com/apache/aries/raw/016463ffc13aa95ee8bc781bc7be07135c942c2f/subsystem/subsystem-itests/src/test/java/org/apache/aries/subsystem/itests/BasicTest.java",
                "status": "modified",
                "changes": 4,
                "additions": 2,
                "contents_url": "https://api.github.com/repos/apache/aries/contents/subsystem/subsystem-itests/src/test/java/org/apache/aries/subsystem/itests/BasicTest.java?ref=016463ffc13aa95ee8bc781bc7be07135c942c2f",
                "patch": "@@ -115,7 +115,7 @@ public void testEmptyFeature() throws Exception {\n \t\t}\n \t\tfinally {\n \t\t\ttry {\n-\t\t\t\tuninstallSubsystem(emptyFeature);\n+\t\t\t\tuninstallUnscopedSubsystem(emptyFeature);\n \t\t\t}\n \t\t\tcatch (AssertionError e) {\n \t\t\t\tif (error == null)\n@@ -152,7 +152,7 @@ public void testEmptySubsystem() throws Exception {\n \t\t}\n \t\tfinally {\n \t\t\ttry {\n-\t\t\t\tuninstallSubsystem(emptySubsystem);\n+\t\t\t\tuninstallScopedSubsystem(emptySubsystem);\n \t\t\t}\n \t\t\tcatch (AssertionError e) {\n \t\t\t\tif (error == null)",
                "deletions": 2
            },
            {
                "sha": "307ea3b071534c3e8c23da2e8c2df89f74ecf490",
                "filename": "subsystem/subsystem-itests/src/test/java/org/apache/aries/subsystem/itests/FeatureTest.java",
                "blob_url": "https://github.com/apache/aries/blob/016463ffc13aa95ee8bc781bc7be07135c942c2f/subsystem/subsystem-itests/src/test/java/org/apache/aries/subsystem/itests/FeatureTest.java",
                "raw_url": "https://github.com/apache/aries/raw/016463ffc13aa95ee8bc781bc7be07135c942c2f/subsystem/subsystem-itests/src/test/java/org/apache/aries/subsystem/itests/FeatureTest.java",
                "status": "modified",
                "changes": 10,
                "additions": 5,
                "contents_url": "https://api.github.com/repos/apache/aries/contents/subsystem/subsystem-itests/src/test/java/org/apache/aries/subsystem/itests/FeatureTest.java?ref=016463ffc13aa95ee8bc781bc7be07135c942c2f",
                "patch": "@@ -112,7 +112,7 @@ public void testFeature1() throws Exception {\n \t\t}\n \t\tfinally {\n \t\t\ttry {\n-\t\t\t\tuninstallSubsystem(feature1);\n+\t\t\t\tuninstallUnscopedSubsystem(feature1);\n \t\t\t\tif (feature2 != null) {\n \t\t\t\t\tassertEvent(feature2, Subsystem.State.UNINSTALLING, 5000);\n \t\t\t\t\tassertEvent(feature2, Subsystem.State.UNINSTALLED, 5000);\n@@ -135,7 +135,7 @@ public void testPersistence() throws Exception {\n \t\ttry {\n \t\t\tassertFeature3(feature3Before);\n \t\t\t// Uninstall then reinstall the subsystem for a more robust test of the subsystem ID persistence.\n-\t\t\tuninstallSubsystem(feature3Before);\n+\t\t\tuninstallUnscopedSubsystem(feature3Before);\n \t\t\tfeature3Before = installSubsystemFromFile(\"feature3.ssa\");\n \t\t\tassertLastId(2);\n \t\t\tassertFeature3(feature3Before);\n@@ -156,7 +156,7 @@ public void testPersistence() throws Exception {\n \t\t\ttry {\n \t\t\t\tif (feature3After != null) {\n \t\t\t\t\tstopSubsystem(feature3After);\n-\t\t\t\t\tuninstallSubsystem(feature3After);\n+\t\t\t\t\tuninstallUnscopedSubsystem(feature3After);\n \t\t\t\t}\n \t\t\t}\n \t\t\tcatch (AssertionError e) {\n@@ -178,7 +178,7 @@ public void testSharedContent() throws Exception {\n \t\t\twhile (!feature2.getState().equals(Subsystem.State.INSTALLED))\n \t\t\t\tThread.sleep(100);\n \t\t\tassertConstituent(feature2, \"org.apache.aries.subsystem.itests.tb3\", Version.parseVersion(\"1.0.0\"), ResourceConstants.IDENTITY_TYPE_BUNDLE);\n-\t\t\tuninstallSubsystem(feature2);\n+\t\t\tuninstallUnscopedSubsystem(feature2);\n \t\t\tassertNotChild(feature1, feature2);\n \t\t\tassertConstituent(feature1, \"org.apache.aries.subsystem.itests.tb3\", Version.parseVersion(\"1.0.0\"), ResourceConstants.IDENTITY_TYPE_BUNDLE);\n \t\t}\n@@ -188,7 +188,7 @@ public void testSharedContent() throws Exception {\n \t\t}\n \t\tfinally {\n \t\t\ttry {\n-\t\t\t\tuninstallSubsystem(feature1);\n+\t\t\t\tuninstallUnscopedSubsystem(feature1);\n \t\t\t}\n \t\t\tcatch (AssertionError e) {\n \t\t\t\tif (error == null)",
                "deletions": 5
            },
            {
                "sha": "b20c662c2262a88ba9f78e5b02ba78781f3ade1c",
                "filename": "subsystem/subsystem-itests/src/test/java/org/apache/aries/subsystem/itests/InstallTest.java",
                "blob_url": "https://github.com/apache/aries/blob/016463ffc13aa95ee8bc781bc7be07135c942c2f/subsystem/subsystem-itests/src/test/java/org/apache/aries/subsystem/itests/InstallTest.java",
                "raw_url": "https://github.com/apache/aries/raw/016463ffc13aa95ee8bc781bc7be07135c942c2f/subsystem/subsystem-itests/src/test/java/org/apache/aries/subsystem/itests/InstallTest.java",
                "status": "modified",
                "changes": 2,
                "additions": 1,
                "contents_url": "https://api.github.com/repos/apache/aries/contents/subsystem/subsystem-itests/src/test/java/org/apache/aries/subsystem/itests/InstallTest.java?ref=016463ffc13aa95ee8bc781bc7be07135c942c2f",
                "patch": "@@ -77,7 +77,7 @@ public void testReturnExistingSubsystemWithSameLocation() throws Exception {\n \t\t\tassertSame(subsystem1, subsystem2);\n \t\t}\n \t\tfinally {\n-\t\t\tuninstallSubsystem(subsystem1);\n+\t\t\tuninstallUnscopedSubsystem(subsystem1);\n \t\t}\n \t}\n }",
                "deletions": 1
            },
            {
                "sha": "89eca537f68026b67d88462706e5dd0b417c785b",
                "filename": "subsystem/subsystem-itests/src/test/java/org/apache/aries/subsystem/itests/SubsystemTest.java",
                "blob_url": "https://github.com/apache/aries/blob/016463ffc13aa95ee8bc781bc7be07135c942c2f/subsystem/subsystem-itests/src/test/java/org/apache/aries/subsystem/itests/SubsystemTest.java",
                "raw_url": "https://github.com/apache/aries/raw/016463ffc13aa95ee8bc781bc7be07135c942c2f/subsystem/subsystem-itests/src/test/java/org/apache/aries/subsystem/itests/SubsystemTest.java",
                "status": "modified",
                "changes": 12,
                "additions": 10,
                "contents_url": "https://api.github.com/repos/apache/aries/contents/subsystem/subsystem-itests/src/test/java/org/apache/aries/subsystem/itests/SubsystemTest.java?ref=016463ffc13aa95ee8bc781bc7be07135c942c2f",
                "patch": "@@ -494,18 +494,26 @@ protected void stopSubsystem(Subsystem subsystem) throws Exception {\n \t\tassertState(State.RESOLVED, subsystem);\r\n \t}\r\n \t\r\n+\tprotected void uninstallScopedSubsystem(Subsystem subsystem) throws Exception {\r\n+\t\tBundle b = getRegionContextBundle(subsystem);\r\n+\t\tuninstallSubsystem(subsystem);\r\n+\t\tassertEquals(\"Region context bundle not uninstalled\", Bundle.UNINSTALLED, b.getState());\r\n+\t}\r\n+\t\r\n \tprotected void uninstallSubsystem(Subsystem subsystem) throws Exception {\r\n \t\tassertState(EnumSet.of(State.INSTALLED, State.RESOLVED), subsystem);\r\n \t\tsubsystemEvents.clear();\r\n \t\tCollection<Subsystem> parents = subsystem.getParents();\r\n-\t\tBundle b = getRegionContextBundle(subsystem);\r\n \t\tsubsystem.uninstall();\r\n \t\tassertEvent(subsystem, State.UNINSTALLING, 5000);\r\n \t\tassertEvent(subsystem, State.UNINSTALLED, 5000);\r\n \t\tassertState(State.UNINSTALLED, subsystem);\r\n-\t\tassertEquals(\"Region context bundle not uninstalled\", Bundle.UNINSTALLED, b.getState());\r\n \t\tfor (Subsystem parent : parents)\r\n \t\t\tassertNotChild(parent, subsystem);\r\n \t\tassertNotDirectory(subsystem);\r\n \t}\r\n+\t\r\n+\tprotected void uninstallUnscopedSubsystem(Subsystem subsystem) throws Exception {\r\n+\t\tuninstallSubsystem(subsystem);\r\n+\t}\r\n }\r",
                "deletions": 2
            }
        ]
    },
    {
        "repo": "aries",
        "message": "ARIES-825: Update subsystems to latest Subsystem, Resolver, and Repository APIs.\n\n(1) Fixed issue where default version specified in subsystem URI was not being used.\n(2) Fixed issue where embedded URL within subsystem URI was not being used.\n(3) Fixed issue where feature installations were not failed when Preferred-Provider header was declared.\n(4) Fixed issue with equals and hashCode of SubsystemGraph where symbolic name, version, and type were being used. Either location or ID should be used instead.\n(5) Fixed issue where target region was being computed incorrectly.\n(6) Added support for subsystem service visibility rules by region.\n(7) Fixed issue where getBundleContext() would throw an NPE for features that only had features as parents.\n(8) Child subsystems will now be resolved before the parent's bundles. This puts the events in the expected order as well as insures the child's export policy is applied in order to satisfy any dependencies within the parent.\n(9) Added INSTALLED as a transitional event when uninstalling a subsystem.\n(10) Fixed issue where UNINSTALLING and UNINSTALLED events were not taking place from the INSTALL_FAILED state.\n(11) Updated tests to expect transitional INSTALLED state when uninstalling a subsystem.\n(12) Fixed issue with SubsystemResource.Location.open() where provided location string was not being used as a last resort.\n\ngit-svn-id: https://svn.apache.org/repos/asf/aries/trunk@1311274 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/aries/commit/46274f389f95f43db239779a2b1820b2691b5f4f",
        "parent": "https://github.com/apache/aries/commit/9d7a71353728a5a8ea739be02a09e7e91e73d6ff",
        "bug_id": "aries_60",
        "file": [
            {
                "sha": "f1d0122da51f6282c8da1f7ddc15ad3f06d95607",
                "filename": "subsystem/subsystem-core/src/main/java/org/apache/aries/subsystem/core/internal/AriesSubsystem.java",
                "blob_url": "https://github.com/apache/aries/blob/46274f389f95f43db239779a2b1820b2691b5f4f/subsystem/subsystem-core/src/main/java/org/apache/aries/subsystem/core/internal/AriesSubsystem.java",
                "raw_url": "https://github.com/apache/aries/raw/46274f389f95f43db239779a2b1820b2691b5f4f/subsystem/subsystem-core/src/main/java/org/apache/aries/subsystem/core/internal/AriesSubsystem.java",
                "status": "modified",
                "changes": 106,
                "additions": 78,
                "contents_url": "https://api.github.com/repos/apache/aries/contents/subsystem/subsystem-core/src/main/java/org/apache/aries/subsystem/core/internal/AriesSubsystem.java?ref=46274f389f95f43db239779a2b1820b2691b5f4f",
                "patch": "@@ -433,21 +433,14 @@ public SubsystemArchive getArchive() {\n \t\r\n \t@Override\r\n \tpublic BundleContext getBundleContext() {\r\n-\t\tif (EnumSet.of(State.INSTALL_FAILED, State.UNINSTALLED).contains(getState()))\r\n+\t\tif (EnumSet.of(State.INSTALL_FAILED, State.UNINSTALLED).contains(\r\n+\t\t\t\tgetState()))\r\n \t\t\treturn null;\r\n-\t\tRegion region = this.region;\r\n-\t\tSubsystem subsystem = this;\r\n-\t\t// Features, and unscoped subsystems in general, do not have their own region context\r\n-\t\t// bundle but rather share with the scoped subsystem in the same region.\r\n-\t\tif (isFeature()) {\r\n-\t\t\tfor (Subsystem parent : getParents()) {\r\n-\t\t\t\tif (!((AriesSubsystem)parent).isFeature()) {\r\n-\t\t\t\t\tregion = ((AriesSubsystem)parent).getRegion();\r\n-\t\t\t\t\tsubsystem = parent;\r\n-\t\t\t\t}\r\n-\t\t\t}\r\n-\t\t}\r\n-\t\treturn region.getBundle(RegionContextBundleHelper.SYMBOLICNAME_PREFIX + subsystem.getSubsystemId(), RegionContextBundleHelper.VERSION).getBundleContext();\r\n+\t\tAriesSubsystem subsystem = findScopedSubsystemInRegion();\r\n+\t\treturn region.getBundle(\r\n+\t\t\t\tRegionContextBundleHelper.SYMBOLICNAME_PREFIX\r\n+\t\t\t\t\t\t+ subsystem.getSubsystemId(),\r\n+\t\t\t\tRegionContextBundleHelper.VERSION).getBundleContext();\r\n \t}\r\n \t\r\n \t@Override\r\n@@ -706,7 +699,7 @@ void install() {\n \t\t\t\t.getServiceProvider().getService(Coordinator.class)\r\n \t\t\t\t.create(getSymbolicName() + \"-\" + getSubsystemId(), 0);\r\n \t\ttry {\r\n-\t\t\tinstall(coordination);\r\n+\t\t\tinstall(coordination, null);\r\n \t\t} catch (Exception e) {\r\n \t\t\tcoordination.fail(e);\r\n \t\t} finally {\r\n@@ -800,6 +793,34 @@ protected synchronized void waitForStateChange() {\n \t\t}\r\n \t}\r\n \t\r\n+\tprivate void addSubsystemServiceImportToSharingPolicy(\r\n+\t\t\tRegionFilterBuilder builder) throws InvalidSyntaxException {\r\n+\t\tbuilder.allow(\r\n+\t\t\t\tRegionFilter.VISIBLE_SERVICE_NAMESPACE,\r\n+\t\t\t\tnew StringBuilder(\"(&(\")\r\n+\t\t\t\t\t\t.append(org.osgi.framework.Constants.OBJECTCLASS)\r\n+\t\t\t\t\t\t.append('=').append(Subsystem.class.getName())\r\n+\t\t\t\t\t\t.append(\")(\")\r\n+\t\t\t\t\t\t.append(Constants.SubsystemServicePropertyRegions)\r\n+\t\t\t\t\t\t.append('=').append(region.getName())\r\n+\t\t\t\t\t\t.append(\"))\").toString());\r\n+\t}\r\n+\t\r\n+\tprivate void addSubsystemServiceImportToSharingPolicy(RegionFilterBuilder builder, Region to)\r\n+\t\t\tthrows InvalidSyntaxException, BundleException {\r\n+\t\t// TODO This check seems brittle. There is apparently no constant for\r\n+\t\t// the root region's name in Digraph.\r\n+\t\tif (to.getName().equals(\"org.eclipse.equinox.region.kernel\"))\r\n+\t\t\taddSubsystemServiceImportToSharingPolicy(builder);\r\n+\t\telse {\r\n+\t\t\tto = findRootRegion();\r\n+\t\t\tbuilder = to.getRegionDigraph().createRegionFilterBuilder();\r\n+\t\t\taddSubsystemServiceImportToSharingPolicy(builder);\r\n+\t\t\tRegionFilter regionFilter = builder.build();\r\n+\t\t\tregion.connectRegion(to, regionFilter);\r\n+\t\t}\r\n+\t}\r\n+\t\r\n \tprivate void checkRoot() {\r\n \t\tif (isRoot()) {\r\n \t\t\tthrow new SubsystemException(\"This operation may not be performed on the root subsystem\");\r\n@@ -817,6 +838,24 @@ private Region createRegion(String name) throws BundleException {\n \t\treturn region;\r\n \t}\r\n \t\r\n+\tprivate Region findRootRegion() {\r\n+\t\treturn findRootSubsystem().region;\r\n+\t}\r\n+\t\r\n+\tprivate AriesSubsystem findRootSubsystem() {\r\n+\t\tAriesSubsystem root = this;\r\n+\t\twhile (!root.isRoot())\r\n+\t\t\troot = ((AriesSubsystem)root.getParents().iterator().next());\r\n+\t\treturn root;\r\n+\t}\r\n+\t\r\n+\tprivate AriesSubsystem findScopedSubsystemInRegion() {\r\n+\t\tAriesSubsystem result = this;\r\n+\t\twhile (!result.isScoped())\r\n+\t\t\tresult = (AriesSubsystem)result.getParents().iterator().next();\r\n+\t\treturn result;\r\n+\t}\r\n+\t\r\n \tprivate DeploymentManifest getDeploymentManifest() throws IOException, URISyntaxException {\r\n //\t\tif (archive.getDeploymentManifest() == null) {\r\n \t\t\tarchive.setDeploymentManifest(new DeploymentManifest(\r\n@@ -834,10 +873,10 @@ private DeploymentManifest getDeploymentManifest() throws IOException, URISyntax\n \t\treturn archive.getDeploymentManifest();\r\n \t}\r\n \t\r\n-\tprivate synchronized void install(Coordination coordination) throws Exception {\r\n+\tprivate synchronized void install(Coordination coordination, AriesSubsystem parent) throws Exception {\r\n \t\tif (!isFeature())\r\n \t\t\tRegionContextBundleHelper.installRegionContextBundle(this);\r\n-\t\tActivator.getInstance().getSubsystemServiceRegistrar().register(this);\r\n+\t\tActivator.getInstance().getSubsystemServiceRegistrar().register(this, parent);\r\n \t\tSet<Resource> contentResources = new TreeSet<Resource>(\r\n \t\t\t\tnew Comparator<Resource>() {\r\n \t\t\t\t\t@Override\r\n@@ -917,6 +956,7 @@ private synchronized Subsystem install(String location, InputStream content, Coo\n \t\t\t\t\t\t&& subsystem.getVersion().equals(ssr.getSubsystemManifest().getSubsystemVersionHeader().getVersion())\r\n \t\t\t\t\t\t&& subsystem.getType().equals(ssr.getSubsystemManifest().getSubsystemTypeHeader().getType())))\r\n \t\t\t\t\tthrow new SubsystemException(\"Location already exists but symbolic name, version, and type are not the same: \" + location);\r\n+\t\t\t\tsubsystemInstalling(subsystem);\r\n \t\t\t\tsubsystemInstalled(subsystem);\r\n \t\t\t\treturn subsystem;\r\n \t\t\t}\r\n@@ -926,6 +966,7 @@ private synchronized Subsystem install(String location, InputStream content, Coo\n \t\t\tif (subsystem != null) {\r\n \t\t\t\tif (!subsystem.getType().equals(ssr.getSubsystemManifest().getSubsystemTypeHeader().getType()))\r\n \t\t\t\t\tthrow new SubsystemException(\"Subsystem already exists in target region but has a different type: \" + location);\r\n+\t\t\t\tsubsystemInstalling(subsystem);\r\n \t\t\t\tsubsystemInstalled(subsystem);\r\n \t\t\t\treturn subsystem;\r\n \t\t\t}\r\n@@ -1050,7 +1091,7 @@ else if (resource instanceof SubsystemResource) {\n \t\t// before the child. This results in the child (i.e. this subsystem) being uninstalled as part\r\n \t\t// of that process, but its state has not moved from INSTALLING to INSTALL_FAILED, which results\r\n \t\t// in an eternal wait for a state change.\r\n-\t\tsubsystemInstalled(subsystem);\r\n+\t\tsubsystemInstalling(subsystem);\r\n \t\tcoordination.addParticipant(new Participant() {\r\n \t\t\tpublic void ended(Coordination coordination) throws Exception {\r\n \t\t\t\t// noop\r\n@@ -1062,17 +1103,24 @@ public void failed(Coordination coordination) throws Exception {\n \t\t\t\tsubsystemUninstalled(subsystem);\r\n \t\t\t}\r\n \t\t});\r\n-\t\tsubsystem.install(coordination);\r\n+\t\tsubsystem.install(coordination, this);\r\n+\t\tsubsystemInstalled(subsystem);\r\n \t\treturn subsystem;\r\n \t}\r\n \r\n \tprivate boolean isRoot() {\r\n \t\treturn ROOT_LOCATION.equals(getLocation());\r\n \t}\r\n \t\r\n+\tprivate boolean isScoped() {\r\n+\t\treturn isApplication() || isComposite();\r\n+\t}\r\n+\t\r\n \tprivate void resolve() {\r\n \t\tsetState(State.RESOLVING);\r\n \t\ttry {\r\n+\t\t\tfor (Subsystem child : subsystemGraph.getChildren(this))\r\n+\t\t\t\t((AriesSubsystem)child).resolve();\r\n \t\t\t// TODO I think this is insufficient. Do we need both\r\n \t\t\t// pre-install and post-install environments for the Resolver?\r\n \t\t\tCollection<Bundle> bundles = getBundles();\r\n@@ -1166,15 +1214,12 @@ private void setExportIsolationPolicy(RegionFilterBuilder builder, SubsystemExpo\n \t}\r\n \r\n \tprivate void setImportIsolationPolicy() throws BundleException, IOException, InvalidSyntaxException, URISyntaxException {\r\n-\t\tif (isRoot())\r\n-\t\t\t// Nothing to do if this is the root subsystem.\r\n-\t\t\treturn;\r\n-\t\tif (isFeature())\r\n-\t\t\t// Features share the same isolation as that of their scoped parent.\r\n+\t\tif (isRoot() || isFeature())\r\n \t\t\treturn;\r\n \t\tRegion from = region;\r\n-\t\tRegion to = ((AriesSubsystem)getParents().iterator().next()).region;\r\n \t\tRegionFilterBuilder builder = from.getRegionDigraph().createRegionFilterBuilder();\r\n+\t\tRegion to = ((AriesSubsystem)getParents().iterator().next()).region;\r\n+\t\taddSubsystemServiceImportToSharingPolicy(builder, to);\r\n \t\tif (isApplication() || isComposite()) {\r\n \t\t\t// Both applications and composites have Import-Package headers that require processing.\r\n \t\t\t// In the case of applications, the header is generated.\r\n@@ -1330,13 +1375,18 @@ private void stopSubsystemResource(Resource resource) throws IOException {\n \t}\r\n \t\r\n \tprivate synchronized void subsystemInstalled(AriesSubsystem subsystem) {\r\n+\t\tActivator.getInstance().getSubsystemServiceRegistrar().addRegion(subsystem, region);\r\n+\t}\r\n+\t\r\n+\tprivate synchronized void subsystemInstalling(AriesSubsystem subsystem) {\r\n \t\tlocationToSubsystem.put(subsystem.getLocation(), subsystem);\r\n \t\tsubsystemGraph.add(this, subsystem);\r\n \t\taddResourceToSubsystem(subsystem, this);\r\n \t\tconstituents.add(subsystem);\r\n \t}\r\n \t\r\n \tprivate synchronized void subsystemUninstalled(AriesSubsystem subsystem) {\r\n+\t\tActivator.getInstance().getSubsystemServiceRegistrar().removeRegion(subsystem, region);\r\n \t\tconstituents.remove(subsystem);\r\n \t\tremoveResourceToSubsystem(subsystem, this);\r\n \t\tsubsystemGraph.remove(subsystem);\r\n@@ -1345,7 +1395,8 @@ private synchronized void subsystemUninstalled(AriesSubsystem subsystem) {\n \t\r\n \tprivate void uninstall(boolean changeState) {\r\n \t\tif (changeState)\r\n-\t\t\tsetState(State.UNINSTALLING);\r\n+\t\t\tsetState(State.INSTALLED);\r\n+\t\tsetState(State.UNINSTALLING);\r\n \t\t// Uninstall child subsystems first.\r\n \t\tfor (Subsystem subsystem : getChildren()) {\r\n \t\t\ttry {\r\n@@ -1378,8 +1429,7 @@ private void uninstall(boolean changeState) {\n \t\tsubsystemGraph.remove(this);\r\n \t\tlocationToSubsystem.remove(location);\r\n \t\tdeleteFile(directory);\r\n-\t\tif (changeState)\r\n-\t\t\tsetState(State.UNINSTALLED);\r\n+\t\tsetState(State.UNINSTALLED);\r\n \t\tActivator.getInstance().getSubsystemServiceRegistrar().unregister(this);\r\n \t\tif (!isFeature())\r\n \t\t\tRegionContextBundleHelper.uninstallRegionContextBundle(this);\r",
                "deletions": 28
            },
            {
                "sha": "f537f4111050a3fdf889d34e2c31dd885905ad54",
                "filename": "subsystem/subsystem-core/src/main/java/org/apache/aries/subsystem/core/internal/Constants.java",
                "blob_url": "https://github.com/apache/aries/blob/46274f389f95f43db239779a2b1820b2691b5f4f/subsystem/subsystem-core/src/main/java/org/apache/aries/subsystem/core/internal/Constants.java",
                "raw_url": "https://github.com/apache/aries/raw/46274f389f95f43db239779a2b1820b2691b5f4f/subsystem/subsystem-core/src/main/java/org/apache/aries/subsystem/core/internal/Constants.java",
                "status": "modified",
                "changes": 1,
                "additions": 1,
                "contents_url": "https://api.github.com/repos/apache/aries/contents/subsystem/subsystem-core/src/main/java/org/apache/aries/subsystem/core/internal/Constants.java?ref=46274f389f95f43db239779a2b1820b2691b5f4f",
                "patch": "@@ -4,6 +4,7 @@\n \tpublic static final String BundleSymbolicName = org.osgi.framework.Constants.BUNDLE_SYMBOLICNAME;\r\n \tpublic static final String BundleVersion = org.osgi.framework.Constants.BUNDLE_VERSION;\r\n \tpublic static final String RegionContextBundleSymbolicNamePrefix = \"org.osgi.service.subsystem.region.context.\";\r\n+\tpublic static final String SubsystemServicePropertyRegions = \"org.apache.aries.subsystem.service.regions\";\r\n \t\r\n \tprivate Constants() {}\r\n }\r",
                "deletions": 0
            },
            {
                "sha": "0a96d2a01a36e3a372401ef16c429ca19321b63b",
                "filename": "subsystem/subsystem-core/src/main/java/org/apache/aries/subsystem/core/internal/SubsystemGraph.java",
                "blob_url": "https://github.com/apache/aries/blob/46274f389f95f43db239779a2b1820b2691b5f4f/subsystem/subsystem-core/src/main/java/org/apache/aries/subsystem/core/internal/SubsystemGraph.java",
                "raw_url": "https://github.com/apache/aries/raw/46274f389f95f43db239779a2b1820b2691b5f4f/subsystem/subsystem-core/src/main/java/org/apache/aries/subsystem/core/internal/SubsystemGraph.java",
                "status": "modified",
                "changes": 24,
                "additions": 9,
                "contents_url": "https://api.github.com/repos/apache/aries/contents/subsystem/subsystem-core/src/main/java/org/apache/aries/subsystem/core/internal/SubsystemGraph.java?ref=46274f389f95f43db239779a2b1820b2691b5f4f",
                "patch": "@@ -26,9 +26,7 @@ public boolean equals(Object o) {\n \t\t\tif (!(o instanceof SubsystemWrapper))\r\n \t\t\t\treturn false;\r\n \t\t\tSubsystemWrapper that = (SubsystemWrapper)o;\r\n-\t\t\treturn s.getSymbolicName().equals(that.s.getSymbolicName())\r\n-\t\t\t\t\t&& s.getVersion().equals(that.s.getVersion())\r\n-\t\t\t\t\t&& s.getType().equals(that.s.getType());\r\n+\t\t\treturn s.getLocation().equals(that.s.getLocation());\r\n \t\t}\r\n \t\t\r\n \t\tpublic Subsystem getSubsystem() {\r\n@@ -37,28 +35,24 @@ public Subsystem getSubsystem() {\n \t\t\r\n \t\t@Override\r\n \t\tpublic int hashCode() {\r\n-\t\t\tint result = 17;\r\n-\t\t\tresult = result + 31 * s.getSymbolicName().hashCode();\r\n-\t\t\tresult = result + 31 * s.getVersion().hashCode();\r\n-\t\t\tresult = result + 31 * s.getType().hashCode();\r\n-\t\t\treturn result;\r\n+\t\t\treturn s.getLocation().hashCode();\r\n \t\t}\r\n \t\t\r\n \t\t@Override\r\n \t\tpublic String toString() {\r\n-\t\t\treturn new StringBuilder().append(s.getClass().getName())\r\n-\t\t\t\t\t.append(\": symbolicName=\").append(s.getSymbolicName())\r\n+\t\t\treturn new StringBuilder(\"location=\").append(s.getLocation())\r\n+\t\t\t\t\t.append(\", symbolicName=\").append(s.getSymbolicName())\r\n \t\t\t\t\t.append(\", version=\").append(s.getVersion())\r\n \t\t\t\t\t.append(\", type=\").append(s.getType()).toString();\r\n \t\t}\r\n \t}\r\n \tprivate final Map<SubsystemWrapper, Collection<SubsystemWrapper>> adjacencyList = new HashMap<SubsystemWrapper, Collection<SubsystemWrapper>>();\r\n \t\r\n-\tpublic SubsystemGraph(Subsystem root) {\r\n+\tpublic SubsystemGraph(AriesSubsystem root) {\r\n \t\tadjacencyList.put(new SubsystemWrapper(root), new HashSet<SubsystemWrapper>());\r\n \t}\r\n \t\r\n-\tpublic synchronized void add(Subsystem parent, Subsystem child) {\r\n+\tpublic synchronized void add(AriesSubsystem parent, AriesSubsystem child) {\r\n \t\tSubsystemWrapper parentWrap = new SubsystemWrapper(parent);\r\n \t\tSubsystemWrapper childWrap = new SubsystemWrapper(child);\r\n \t\tif (containsAncestor(childWrap, parentWrap))\r\n@@ -76,7 +70,7 @@ public synchronized void add(Subsystem parent, Subsystem child) {\n \t\tsubsystems.add(childWrap);\r\n \t}\r\n \t\r\n-\tpublic synchronized Collection<Subsystem> getChildren(Subsystem parent) {\r\n+\tpublic synchronized Collection<Subsystem> getChildren(AriesSubsystem parent) {\r\n \t\tCollection<SubsystemWrapper> children = adjacencyList.get(new SubsystemWrapper(parent));\r\n \t\tif (children == null || children.isEmpty())\r\n \t\t\treturn Collections.emptySet();\r\n@@ -86,7 +80,7 @@ public synchronized void add(Subsystem parent, Subsystem child) {\n  \t\treturn Collections.unmodifiableCollection(result);\r\n \t}\r\n \t\r\n-\tpublic synchronized Collection<Subsystem> getParents(Subsystem child) {\r\n+\tpublic synchronized Collection<Subsystem> getParents(AriesSubsystem child) {\r\n \t\tCollection<SubsystemWrapper> parents = getParents(new SubsystemWrapper(child));\r\n \t\tCollection<Subsystem> result = new ArrayList<Subsystem>(parents.size());\r\n \t\tfor (SubsystemWrapper parent : parents) {\r\n@@ -95,7 +89,7 @@ public synchronized void add(Subsystem parent, Subsystem child) {\n \t\treturn Collections.unmodifiableCollection(result);\r\n \t}\r\n \t\r\n-\tpublic synchronized void remove(Subsystem subsystem) {\r\n+\tpublic synchronized void remove(AriesSubsystem subsystem) {\r\n \t\tSubsystemWrapper subsystemWrap = new SubsystemWrapper(subsystem);\r\n \t\tCollection<SubsystemWrapper> parents = getParents(subsystemWrap);\r\n \t\tfor (SubsystemWrapper parent : parents)\r",
                "deletions": 15
            },
            {
                "sha": "d3368cee4829c3bbb55d2f29468033c8c0d2ba4b",
                "filename": "subsystem/subsystem-core/src/main/java/org/apache/aries/subsystem/core/internal/SubsystemManifestValidator.java",
                "blob_url": "https://github.com/apache/aries/blob/46274f389f95f43db239779a2b1820b2691b5f4f/subsystem/subsystem-core/src/main/java/org/apache/aries/subsystem/core/internal/SubsystemManifestValidator.java",
                "raw_url": "https://github.com/apache/aries/raw/46274f389f95f43db239779a2b1820b2691b5f4f/subsystem/subsystem-core/src/main/java/org/apache/aries/subsystem/core/internal/SubsystemManifestValidator.java",
                "status": "modified",
                "changes": 6,
                "additions": 4,
                "contents_url": "https://api.github.com/repos/apache/aries/contents/subsystem/subsystem-core/src/main/java/org/apache/aries/subsystem/core/internal/SubsystemManifestValidator.java?ref=46274f389f95f43db239779a2b1820b2691b5f4f",
                "patch": "@@ -3,6 +3,7 @@\n import org.apache.aries.subsystem.core.archive.SubsystemContentHeader;\r\n import org.apache.aries.subsystem.core.archive.SubsystemManifest;\r\n import org.osgi.framework.VersionRange;\r\n+import org.osgi.service.subsystem.SubsystemConstants;\r\n import org.osgi.service.subsystem.SubsystemException;\r\n \r\n public class SubsystemManifestValidator {\r\n@@ -18,9 +19,10 @@ public static void validate(AriesSubsystem subsystem, SubsystemManifest manifest\n \t\t\t}\r\n \t\t}\r\n \t\telse if (subsystem.isFeature()) {\r\n-\t\t\tif (manifest.getSubsystemTypeHeader().getProvisionPolicyDirective().isAcceptDependencies()) {\r\n+\t\t\tif (manifest.getSubsystemTypeHeader().getProvisionPolicyDirective().isAcceptDependencies())\r\n \t\t\t\tthrow new SubsystemException(\"Feature subsystems may not declare a provision-policy of acceptDependencies\");\r\n-\t\t\t}\r\n+\t\t\tif (manifest.getHeaders().get(SubsystemConstants.PREFERRED_PROVIDER) != null)\r\n+\t\t\t\tthrow new SubsystemException(\"Feature subsystems may not declare a \" + SubsystemConstants.PREFERRED_PROVIDER + \" header\");\r\n \t\t}\r\n \t}\r\n \t\r",
                "deletions": 2
            },
            {
                "sha": "2cf86cc22c4051ce5233b436a958d255e8736f69",
                "filename": "subsystem/subsystem-core/src/main/java/org/apache/aries/subsystem/core/internal/SubsystemServiceRegistrar.java",
                "blob_url": "https://github.com/apache/aries/blob/46274f389f95f43db239779a2b1820b2691b5f4f/subsystem/subsystem-core/src/main/java/org/apache/aries/subsystem/core/internal/SubsystemServiceRegistrar.java",
                "raw_url": "https://github.com/apache/aries/raw/46274f389f95f43db239779a2b1820b2691b5f4f/subsystem/subsystem-core/src/main/java/org/apache/aries/subsystem/core/internal/SubsystemServiceRegistrar.java",
                "status": "modified",
                "changes": 87,
                "additions": 72,
                "contents_url": "https://api.github.com/repos/apache/aries/contents/subsystem/subsystem-core/src/main/java/org/apache/aries/subsystem/core/internal/SubsystemServiceRegistrar.java?ref=46274f389f95f43db239779a2b1820b2691b5f4f",
                "patch": "@@ -1,11 +1,15 @@\n package org.apache.aries.subsystem.core.internal;\r\n \r\n+import java.util.Collection;\r\n+import java.util.Collections;\r\n import java.util.Dictionary;\r\n import java.util.HashMap;\r\n+import java.util.HashSet;\r\n import java.util.Hashtable;\r\n import java.util.Iterator;\r\n import java.util.Map;\r\n \r\n+import org.eclipse.equinox.region.Region;\r\n import org.osgi.framework.BundleContext;\r\n import org.osgi.framework.ServiceRegistration;\r\n import org.osgi.service.subsystem.Subsystem;\r\n@@ -21,12 +25,43 @@ public SubsystemServiceRegistrar(BundleContext context) {\n \t\tthis.context = context;\r\n \t}\r\n \t\r\n-\tpublic synchronized void register(Subsystem subsystem) {\r\n-\t\tif (map.containsKey(subsystem))\r\n-\t\t\tthrow new IllegalStateException(\"Subsystem '\" + subsystem + \"' already has service registration '\" + map.get(subsystem) + \"'\");\r\n+\tpublic synchronized void addRegion(AriesSubsystem subsystem, Region region) {\r\n+\t\tServiceRegistration<Subsystem> registration = map.get(subsystem);\r\n+\t\tif (registration == null)\r\n+\t\t\tthrow new IllegalStateException(\"Subsystem '\" + subsystem + \"' is not registered\");\r\n+\t\tCollection<String> currentRegions = (Collection<String>)registration.getReference().getProperty(Constants.SubsystemServicePropertyRegions);\r\n+\t\tString regionName = region.getName();\r\n+\t\tif (currentRegions.contains(regionName))\r\n+\t\t\treturn;\r\n+\t\tCollection<String> newRegions = new HashSet<String>(currentRegions.size() + 1);\r\n+\t\tnewRegions.addAll(currentRegions);\r\n+\t\tnewRegions.add(regionName);\r\n \t\tDictionary<String, Object> properties = properties(subsystem);\r\n-\t\tServiceRegistration<Subsystem> registration = context.registerService(Subsystem.class, subsystem, properties);\r\n-\t\tmap.put(subsystem, registration);\r\n+\t\tproperties.put(Constants.SubsystemServicePropertyRegions, Collections.unmodifiableCollection(newRegions));\r\n+\t\tregistration.setProperties(properties);\r\n+\t}\r\n+\t\r\n+\tpublic synchronized void register(AriesSubsystem child, AriesSubsystem parent) {\r\n+\t\tif (map.containsKey(child))\r\n+\t\t\tthrow new IllegalStateException(\"Subsystem '\" + child + \"' already has service registration '\" + map.get(child) + \"'\");\r\n+\t\tDictionary<String, Object> properties = properties(child, parent);\r\n+\t\tServiceRegistration<Subsystem> registration = context.registerService(Subsystem.class, child, properties);\r\n+\t\tmap.put(child, registration);\r\n+\t}\r\n+\t\r\n+\tpublic synchronized void removeRegion(AriesSubsystem subsystem, Region region) {\r\n+\t\tServiceRegistration<Subsystem> registration = map.get(subsystem);\r\n+\t\tif (registration == null)\r\n+\t\t\treturn;\r\n+\t\tCollection<String> regions = (Collection<String>)registration.getReference().getProperty(Constants.SubsystemServicePropertyRegions);\r\n+\t\tString regionName = region.getName();\r\n+\t\tif (regions == null || !regions.contains(regionName))\r\n+\t\t\treturn;\r\n+\t\tregions = new HashSet<String>(regions);\r\n+\t\tregions.remove(regionName);\r\n+\t\tDictionary<String, Object> properties = properties(subsystem);\r\n+\t\tproperties.put(Constants.SubsystemServicePropertyRegions, Collections.unmodifiableCollection(regions));\r\n+\t\tregistration.setProperties(properties);\r\n \t}\r\n \t\r\n \tpublic synchronized void unregister(Subsystem subsystem) {\r\n@@ -44,21 +79,43 @@ public synchronized void unregisterAll() {\n \t\t}\r\n \t}\r\n \t\r\n-\tpublic synchronized void update(Subsystem subsystem) {\r\n+\tpublic synchronized void update(AriesSubsystem subsystem) {\r\n \t\tServiceRegistration<Subsystem> registration = map.get(subsystem);\r\n \t\tif (registration == null)\r\n \t\t\tthrow new IllegalStateException(\"Subsystem '\" + subsystem + \"' is not registered\");\r\n-\t\tDictionary<String, Object> properties = properties(subsystem);\r\n+\t\tDictionary<String, Object> properties = properties(subsystem, registration);\r\n \t\tregistration.setProperties(properties);\r\n \t}\r\n \t\r\n-\tprivate Dictionary<String, Object> properties(Subsystem subsystem) {\r\n-\t\tDictionary<String, Object> properties = new Hashtable<String, Object>();\r\n-\t\tproperties.put(SubsystemConstants.SUBSYSTEM_ID_PROPERTY, subsystem.getSubsystemId());\r\n-\t\tproperties.put(SubsystemConstants.SUBSYSTEM_SYMBOLICNAME_PROPERTY, subsystem.getSymbolicName());\r\n-\t\tproperties.put(SubsystemConstants.SUBSYSTEM_VERSION_PROPERTY, subsystem.getVersion());\r\n-\t\tproperties.put(SubsystemConstants.SUBSYSTEM_TYPE_PROPERTY, subsystem.getType());\r\n-\t\tproperties.put(SubsystemConstants.SUBSYSTEM_STATE_PROPERTY, subsystem.getState());\r\n-\t\treturn properties;\r\n+\tprivate Dictionary<String, Object> properties(AriesSubsystem subsystem) {\r\n+\t\tDictionary<String, Object> result = new Hashtable<String, Object>();\r\n+\t\tresult.put(SubsystemConstants.SUBSYSTEM_ID_PROPERTY, subsystem.getSubsystemId());\r\n+\t\tresult.put(SubsystemConstants.SUBSYSTEM_SYMBOLICNAME_PROPERTY, subsystem.getSymbolicName());\r\n+\t\tresult.put(SubsystemConstants.SUBSYSTEM_VERSION_PROPERTY, subsystem.getVersion());\r\n+\t\tresult.put(SubsystemConstants.SUBSYSTEM_TYPE_PROPERTY, subsystem.getType());\r\n+\t\tresult.put(SubsystemConstants.SUBSYSTEM_STATE_PROPERTY, subsystem.getState());\r\n+\t\tresult.put(Constants.SubsystemServicePropertyRegions, Collections.singleton(subsystem.getRegion().getName()));\r\n+\t\treturn result;\r\n+\t}\r\n+\t\r\n+\tprivate Dictionary<String, Object> properties(AriesSubsystem child, AriesSubsystem parent) {\r\n+\t\tDictionary<String, Object> result = properties(child);\r\n+\t\tif (parent == null)\r\n+\t\t\treturn result;\r\n+\t\tCollection<String> currentRegions = (Collection<String>)result.get(Constants.SubsystemServicePropertyRegions);\r\n+\t\tCollection<String> newRegions = new HashSet<String>(currentRegions.size() + 1);\r\n+\t\tnewRegions.addAll(currentRegions);\r\n+\t\tnewRegions.add(parent.getRegion().getName());\r\n+\t\tresult.put(Constants.SubsystemServicePropertyRegions, Collections.unmodifiableCollection(newRegions));\r\n+\t\treturn result;\r\n+\t}\r\n+\t\r\n+\tprivate Dictionary<String, Object> properties(AriesSubsystem subsystem, ServiceRegistration<Subsystem> registration) {\r\n+\t\tDictionary<String, Object> result = properties(subsystem);\r\n+\t\tCollection<String> regions = (Collection<String>)registration.getReference().getProperty(Constants.SubsystemServicePropertyRegions);\r\n+\t\tif (regions == null)\r\n+\t\t\treturn result;\r\n+\t\tresult.put(Constants.SubsystemServicePropertyRegions, regions);\r\n+\t\treturn result;\r\n \t}\r\n }\r",
                "deletions": 15
            },
            {
                "sha": "196ea8c0965f5057bcb79bf43288316e069e1ff3",
                "filename": "subsystem/subsystem-core/src/main/java/org/apache/aries/subsystem/core/internal/TargetRegion.java",
                "blob_url": "https://github.com/apache/aries/blob/46274f389f95f43db239779a2b1820b2691b5f4f/subsystem/subsystem-core/src/main/java/org/apache/aries/subsystem/core/internal/TargetRegion.java",
                "raw_url": "https://github.com/apache/aries/raw/46274f389f95f43db239779a2b1820b2691b5f4f/subsystem/subsystem-core/src/main/java/org/apache/aries/subsystem/core/internal/TargetRegion.java",
                "status": "modified",
                "changes": 42,
                "additions": 30,
                "contents_url": "https://api.github.com/repos/apache/aries/contents/subsystem/subsystem-core/src/main/java/org/apache/aries/subsystem/core/internal/TargetRegion.java?ref=46274f389f95f43db239779a2b1820b2691b5f4f",
                "patch": "@@ -5,14 +5,22 @@\n \r\n import org.osgi.framework.Version;\r\n import org.osgi.service.subsystem.Subsystem;\r\n-import org.osgi.service.subsystem.SubsystemConstants;\r\n \r\n public class TargetRegion {\r\n \tCollection<Subsystem> region = new HashSet<Subsystem>();\r\n \r\n-\tpublic TargetRegion(AriesSubsystem target) {\r\n-\t\tregion.add(target);\r\n-\t\taddToRegion(target.getChildren());\r\n+\tpublic TargetRegion(AriesSubsystem subsystem) {\r\n+\t\t// Find the scoped subsystem that controls the region.\r\n+\t\tAriesSubsystem controllingScopedSubsystem = subsystem;\r\n+\t\twhile (controllingScopedSubsystem.isFeature())\r\n+\t\t\tcontrollingScopedSubsystem = (AriesSubsystem)subsystem.getParents().iterator().next();\r\n+\t\t// The scoped subsystem controlling the region is part of the region.\r\n+\t\tregion.add(controllingScopedSubsystem);\r\n+\t\t// All children of the scoped subsystem are part of the region. If the\r\n+\t\t// child is a feature, then all descendants of the child that are\r\n+\t\t// features and part of an unbroken line of features are part of the\r\n+\t\t// region.\r\n+\t\taddChildrenToRegion(controllingScopedSubsystem);\r\n \t}\r\n \r\n \tpublic boolean contains(Subsystem subsystem) {\r\n@@ -32,15 +40,25 @@ public Subsystem find(String symbolicName, Version version) {\n \t\t}\r\n \t\treturn null;\r\n \t}\r\n-\r\n-\tprivate void addToRegion(Collection<Subsystem> children) {\r\n-\t\tfor (Subsystem child : children) {\r\n-\t\t\tif (SubsystemConstants.SUBSYSTEM_TYPE_FEATURE.equals(child\r\n-\t\t\t\t\t.getSubsystemHeaders(null).get(\r\n-\t\t\t\t\t\t\tSubsystemConstants.SUBSYSTEM_TYPE))) {\r\n-\t\t\t\taddToRegion(child.getChildren());\r\n-\t\t\t}\r\n+\t\r\n+\tprivate void addChildrenToRegion(AriesSubsystem controllingScopedSubsystem) {\r\n+\t\tfor (Subsystem child : controllingScopedSubsystem.getChildren()) {\r\n \t\t\tregion.add(child);\r\n+\t\t\t// If the child is a feature, all of its children that are features\r\n+\t\t\t// must be added as well.\r\n+\t\t\tif (((AriesSubsystem)child).isFeature())\r\n+\t\t\t\taddFeatureDescendentsToRegion((AriesSubsystem)child);\r\n \t\t}\r\n \t}\r\n+\t\r\n+\tprivate void addFeatureDescendentsToRegion(AriesSubsystem parent) {\r\n+\t\tfor (Subsystem child : parent.getChildren())\r\n+\t\t\t// If the descendant is not a feature, skip it.\r\n+\t\t\tif (((AriesSubsystem)child).isFeature()) {\r\n+\t\t\t\tregion.add(child);\r\n+\t\t\t\t// All descendants that are features and part of an unbroken\r\n+\t\t\t\t// line of features must be added.\r\n+\t\t\t\taddFeatureDescendentsToRegion((AriesSubsystem)child);\r\n+\t\t\t}\r\n+\t}\r\n }\r",
                "deletions": 12
            },
            {
                "sha": "e2e813a4238b9da10cd3506f0bef86ca9b15bffa",
                "filename": "subsystem/subsystem-core/src/main/java/org/apache/aries/subsystem/core/resource/tmp/SubsystemResource.java",
                "blob_url": "https://github.com/apache/aries/blob/46274f389f95f43db239779a2b1820b2691b5f4f/subsystem/subsystem-core/src/main/java/org/apache/aries/subsystem/core/resource/tmp/SubsystemResource.java",
                "raw_url": "https://github.com/apache/aries/raw/46274f389f95f43db239779a2b1820b2691b5f4f/subsystem/subsystem-core/src/main/java/org/apache/aries/subsystem/core/resource/tmp/SubsystemResource.java",
                "status": "modified",
                "changes": 32,
                "additions": 26,
                "contents_url": "https://api.github.com/repos/apache/aries/contents/subsystem/subsystem-core/src/main/java/org/apache/aries/subsystem/core/resource/tmp/SubsystemResource.java?ref=46274f389f95f43db239779a2b1820b2691b5f4f",
                "patch": "@@ -22,6 +22,7 @@\n import org.apache.aries.subsystem.core.archive.SubsystemManifest;\r\n import org.apache.aries.subsystem.core.archive.SubsystemSymbolicNameHeader;\r\n import org.apache.aries.subsystem.core.archive.SubsystemTypeHeader;\r\n+import org.apache.aries.subsystem.core.archive.SubsystemVersionHeader;\r\n import org.apache.aries.subsystem.core.internal.Activator;\r\n import org.apache.aries.subsystem.core.internal.SubsystemUri;\r\n import org.apache.aries.subsystem.core.resource.BundleResource;\r\n@@ -44,6 +45,7 @@\n public abstract class SubsystemResource implements Resource {\r\n \tprotected static class Location {\r\n \t\tprivate final String symbolicName;\r\n+\t\tprivate final URL url;\r\n \t\tprivate final String value;\r\n \t\tprivate final Version version;\r\n \t\t\r\n@@ -53,6 +55,7 @@ public Location(String location) throws MalformedURLException, URISyntaxExceptio\n \t\t\tif (location.startsWith(\"subsystem://\"))\r\n \t\t\t\turi = new SubsystemUri(location);\r\n \t\t\tsymbolicName = uri == null ? null : uri.getSymbolicName();\r\n+\t\t\turl = uri == null ? null : uri.getURL();\r\n \t\t\tversion = uri == null ? null : uri.getVersion();\r\n \t\t}\r\n \t\t\r\n@@ -67,23 +70,28 @@ public String getValue() {\n \t\tpublic Version getVersion() {\r\n \t\t\treturn version;\r\n \t\t}\r\n+\t\t\r\n+\t\tpublic InputStream open() throws IOException {\r\n+\t\t\treturn url == null ? new URL(value).openStream() : url.openStream();\r\n+\t\t}\r\n \t}\r\n \t\r\n \tprotected static final Pattern PATTERN = Pattern.compile(\"([^@]+)(?:@(.+))?.esa\");\r\n \t\r\n \tpublic static SubsystemResource newInstance(String location, InputStream content) throws IOException, URISyntaxException {\r\n+\t\tLocation loc = new Location(location);\r\n \t\tif (content == null)\r\n-\t\t\tcontent = new URL(location).openStream();\r\n+\t\t\tcontent = loc.open();\r\n \t\tIDirectory directory = FileSystem.getFSRoot(content);\r\n \t\tSubsystemManifest manifest = computeSubsystemManifest(directory);\r\n \t\tString type = manifest.getSubsystemTypeHeader().getType();\r\n \t\t// TODO Make an enum out of the types?\r\n \t\tif (SubsystemTypeHeader.TYPE_APPLICATION.equals(type))\r\n-\t\t\treturn new ApplicationResource(new Location(location), directory, manifest);\r\n+\t\t\treturn new ApplicationResource(loc, directory, manifest);\r\n \t\tif (SubsystemTypeHeader.TYPE_COMPOSITE.equals(type))\r\n-\t\t\treturn new CompositeResource(new Location(location), directory, manifest);\r\n+\t\t\treturn new CompositeResource(loc, directory, manifest);\r\n \t\tif (SubsystemTypeHeader.TYPE_FEATURE.equals(type))\r\n-\t\t\treturn new FeatureResource(new Location(location), directory, manifest);\r\n+\t\t\treturn new FeatureResource(loc, directory, manifest);\r\n \t\tthrow new SubsystemException(\"Unsupported subsystem type: \" + type);\r\n \t}\r\n \t\r\n@@ -209,6 +217,10 @@ protected void addSubsystemSymbolicNameHeader(SubsystemManifest.Builder builder,\n \t\taddHeader(builder, computeSubsystemSymbolicNameHeader(manifest));\r\n \t}\r\n \t\r\n+\tprotected void addSubsystemVersionHeader(SubsystemManifest.Builder builder, SubsystemManifest manifest) {\r\n+\t\taddHeader(builder, computeSubsystemVersionHeader(manifest));\r\n+\t}\r\n+\t\r\n \tprotected List<Capability> computeCapabilities() {\r\n \t\treturn subsystemManifest.toCapabilities(this);\r\n \t}\r\n@@ -322,14 +334,22 @@ protected SubsystemManifest computeSubsystemManifestAfterRequirements(SubsystemM\n \tprotected SubsystemManifest computeSubsystemManifestBeforeRequirements(SubsystemManifest manifest) {\r\n \t\tSubsystemManifest.Builder builder = new SubsystemManifest.Builder().manifest(manifest);\r\n \t\taddSubsystemSymbolicNameHeader(builder, manifest);\r\n+\t\taddSubsystemVersionHeader(builder, manifest);\r\n \t\taddSubsystemContentHeader(builder, manifest);\r\n \t\treturn builder.build();\r\n \t}\r\n \t\r\n \tprotected SubsystemSymbolicNameHeader computeSubsystemSymbolicNameHeader(SubsystemManifest manifest) {\r\n-\t\tHeader<?> header = manifest.getSubsystemSymbolicNameHeader();\r\n+\t\tSubsystemSymbolicNameHeader header = manifest.getSubsystemSymbolicNameHeader();\r\n \t\tif (header == null)\r\n \t\t\theader = new SubsystemSymbolicNameHeader(location.getSymbolicName());\r\n-\t\treturn (SubsystemSymbolicNameHeader)header;\r\n+\t\treturn header;\r\n+\t}\r\n+\t\r\n+\tprotected SubsystemVersionHeader computeSubsystemVersionHeader(SubsystemManifest manifest) {\r\n+\t\tSubsystemVersionHeader header = manifest.getSubsystemVersionHeader();\r\n+\t\tif (header.getVersion().equals(Version.emptyVersion) && location.getVersion() != null)\r\n+\t\t\theader = new SubsystemVersionHeader(location.getVersion());\r\n+\t\treturn header;\r\n \t}\r\n }\r",
                "deletions": 6
            },
            {
                "sha": "7a16b8836dd04200a12c3448ffb4a5bb723489a0",
                "filename": "subsystem/subsystem-itests/src/test/java/org/apache/aries/subsystem/itests/FeatureTest.java",
                "blob_url": "https://github.com/apache/aries/blob/46274f389f95f43db239779a2b1820b2691b5f4f/subsystem/subsystem-itests/src/test/java/org/apache/aries/subsystem/itests/FeatureTest.java",
                "raw_url": "https://github.com/apache/aries/raw/46274f389f95f43db239779a2b1820b2691b5f4f/subsystem/subsystem-itests/src/test/java/org/apache/aries/subsystem/itests/FeatureTest.java",
                "status": "modified",
                "changes": 1,
                "additions": 1,
                "contents_url": "https://api.github.com/repos/apache/aries/contents/subsystem/subsystem-itests/src/test/java/org/apache/aries/subsystem/itests/FeatureTest.java?ref=46274f389f95f43db239779a2b1820b2691b5f4f",
                "patch": "@@ -114,6 +114,7 @@ public void testFeature1() throws Exception {\n \t\t\ttry {\n \t\t\t\tuninstallSubsystem(feature1);\n \t\t\t\tif (feature2 != null) {\n+\t\t\t\t\tassertEvent(feature2, Subsystem.State.INSTALLED, 5000);\n \t\t\t\t\tassertEvent(feature2, Subsystem.State.UNINSTALLING, 5000);\n \t\t\t\t\tassertEvent(feature2, Subsystem.State.UNINSTALLED, 5000);\n \t\t\t\t\tassertNotChild(feature1, feature2);",
                "deletions": 0
            },
            {
                "sha": "aba00f4ee4ddb029efc6e9381b8ab8d640981681",
                "filename": "subsystem/subsystem-itests/src/test/java/org/apache/aries/subsystem/itests/SubsystemTest.java",
                "blob_url": "https://github.com/apache/aries/blob/46274f389f95f43db239779a2b1820b2691b5f4f/subsystem/subsystem-itests/src/test/java/org/apache/aries/subsystem/itests/SubsystemTest.java",
                "raw_url": "https://github.com/apache/aries/raw/46274f389f95f43db239779a2b1820b2691b5f4f/subsystem/subsystem-itests/src/test/java/org/apache/aries/subsystem/itests/SubsystemTest.java",
                "status": "modified",
                "changes": 1,
                "additions": 1,
                "contents_url": "https://api.github.com/repos/apache/aries/contents/subsystem/subsystem-itests/src/test/java/org/apache/aries/subsystem/itests/SubsystemTest.java?ref=46274f389f95f43db239779a2b1820b2691b5f4f",
                "patch": "@@ -707,6 +707,7 @@ protected void uninstallSubsystem(Subsystem subsystem) throws Exception {\n \t\t\t\t|| subsystem.getType().equals(SubsystemConstants.SUBSYSTEM_TYPE_COMPOSITE))\r\n \t\t\tb = getRegionContextBundle(subsystem);\r\n \t\tsubsystem.uninstall();\r\n+\t\tassertEvent(subsystem, State.INSTALLED, 5000);\r\n \t\tassertEvent(subsystem, State.UNINSTALLING, 5000);\r\n \t\tassertEvent(subsystem, State.UNINSTALLED, 5000);\r\n \t\tassertState(State.UNINSTALLED, subsystem);\r",
                "deletions": 0
            }
        ]
    },
    {
        "repo": "aries",
        "message": "ARIES-748: Update subsystems to use Equinox impl of org.osgi.service.resolver.Resolver\n\nThe initial API and implementation of the Equinox org.osgi.service.resolver (RFC 112) is available in the master branches of the rt.equinox.bundles and rt.equinox.framework git repositories. I updated subsystems to make use of it. Previously, a quick and dirty Resolver adaptor wrapped around the existing Felix OBR implementation was used. Note the subsystems impl uses a registered Resolver service, so making use of the Equinox resolver simply meant adding the bundle to the itests project. When Felix releases their implementation of org.osgi.service.resolver, the two will (hopefully) be interchangeable. \n\nUsing the Equinox resolver highlighted some shortcomings in the subsystems implementation, which were fixed and are listed below. \n\n(1) Updated subsystem-itests to bring in the Equinox resolver. \n(2) Updated SubsystemEnvironment to return all capabilities that match a requirement, even those from the root subsystem (i.e. from the system bundle and any other already installed bundles). Previously, Felix OBR had been automatically providing these via the Resolver adaptor since Felix OBR has a built-in system repository. However, for the RFC 112 resolver, the expectation is the Environment will provide everything. \n(3) Fixed an issue where the resource -> subsystem relationship was not being established for resources in the root subsystem causing an NPE. \n(4) The FelixRequirementAdaptor must strip out the \"mandatory:<*\" clause from the filter or InvalidSyntaxException occurs. \n(5) OsgiIdentityRequirement now includes the filter directive. \n(6) Added namespace translations to FelixResourceAdaptor.\n\ngit-svn-id: https://svn.apache.org/repos/asf/aries/trunk@1171761 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/aries/commit/40ce35ae675d8b2d902c64bf90fd95cffc81d33b",
        "parent": "https://github.com/apache/aries/commit/af11b678e211764c1154bfc59de9ca1dcb17e2e7",
        "bug_id": "aries_61",
        "file": [
            {
                "sha": "49ee167dcfb88a516d058d822f6257111fd7a544",
                "filename": "subsystem/subsystem-core/src/main/java/org/apache/aries/subsystem/core/internal/Activator.java",
                "blob_url": "https://github.com/apache/aries/blob/40ce35ae675d8b2d902c64bf90fd95cffc81d33b/subsystem/subsystem-core/src/main/java/org/apache/aries/subsystem/core/internal/Activator.java",
                "raw_url": "https://github.com/apache/aries/raw/40ce35ae675d8b2d902c64bf90fd95cffc81d33b/subsystem/subsystem-core/src/main/java/org/apache/aries/subsystem/core/internal/Activator.java",
                "status": "modified",
                "changes": 14,
                "additions": 13,
                "contents_url": "https://api.github.com/repos/apache/aries/contents/subsystem/subsystem-core/src/main/java/org/apache/aries/subsystem/core/internal/Activator.java?ref=40ce35ae675d8b2d902c64bf90fd95cffc81d33b",
                "patch": "@@ -116,7 +116,19 @@ public static RepositoryAdmin getRepositoryAdmin() {\n \t * A naive implementation serving as a placeholder until a real Resolver comes along.\n \t */\n \tpublic static Resolver getResolver() {\n-\t\treturn new SubsystemResolver();\n+//\t\treturn new SubsystemResolver();\n+\t\tServiceTracker st = new ServiceTracker(context, Resolver.class.getName(), null);\n+\t\ttry {\n+\t\t\tst.open();\n+\t\t\treturn (Resolver)st.waitForService(5000);\n+\t\t}\n+\t\tcatch (InterruptedException e) {\n+\t\t\tThread.currentThread().interrupt();\n+\t\t\treturn null;\n+\t\t}\n+\t\tfinally {\n+\t\t\tst.close();\n+\t\t}\n \t}\n \t\n \tprivate final BundleListener bundleListener = new SubsystemSynchronousBundleListener();",
                "deletions": 1
            },
            {
                "sha": "437615cdb67b8eac469cfacc3b3bbe48f0080bba",
                "filename": "subsystem/subsystem-core/src/main/java/org/apache/aries/subsystem/core/internal/AriesSubsystem.java",
                "blob_url": "https://github.com/apache/aries/blob/40ce35ae675d8b2d902c64bf90fd95cffc81d33b/subsystem/subsystem-core/src/main/java/org/apache/aries/subsystem/core/internal/AriesSubsystem.java",
                "raw_url": "https://github.com/apache/aries/raw/40ce35ae675d8b2d902c64bf90fd95cffc81d33b/subsystem/subsystem-core/src/main/java/org/apache/aries/subsystem/core/internal/AriesSubsystem.java",
                "status": "modified",
                "changes": 11,
                "additions": 10,
                "contents_url": "https://api.github.com/repos/apache/aries/contents/subsystem/subsystem-core/src/main/java/org/apache/aries/subsystem/core/internal/AriesSubsystem.java?ref=40ce35ae675d8b2d902c64bf90fd95cffc81d33b",
                "patch": "@@ -700,6 +700,7 @@ private synchronized void install() throws Exception {\n \t\t\t\t}\r\n \t\t\t}\r\n \t\t\tcatch (Exception e) {\r\n+\t\t\t\t// TODO Log this exception? If not, who's responsible for logging it?\r\n \t\t\t\tcoordination.fail(e);\r\n \t\t\t}\r\n \t\t\tfinally {\r\n@@ -713,7 +714,15 @@ private void installBundleResource(Resource resource, Coordination coordination,\n \t\tBundle bundle;\r\n \t\tsynchronized (resourceToSubsystems) {\r\n \t\t\tif (resource instanceof BundleRevision) {\r\n-\t\t\t\tresourceToSubsystems.get(resource).add(this);\r\n+\t\t\t\t// This means the resource is a bundle that's already been installed, but we still need to establish the resource->subsystem relationship.\r\n+\t\t\t\t// TODO The null check is necessary for when the bundle is in the root subsystem. Currently, the root subsystem is not initialized with\r\n+\t\t\t\t// these relationships. Need to decide if that would be better.\r\n+\t\t\t\tSet<Subsystem> subsystems = resourceToSubsystems.get(resource);\r\n+\t\t\t\tif (subsystems == null) {\r\n+\t\t\t\t\tsubsystems = new HashSet<Subsystem>();\r\n+\t\t\t\t\tresourceToSubsystems.put(resource, subsystems);\r\n+\t\t\t\t}\r\n+\t\t\t\tsubsystems.add(this);\r\n \t\t\t\treturn;\r\n \t\t\t}\r\n \t\t\tprovisionTo = getProvisionTo(resource, transitive);\r",
                "deletions": 1
            },
            {
                "sha": "e96fd055abc7644f0e3c1a0200ec4d4d85bdd77c",
                "filename": "subsystem/subsystem-core/src/main/java/org/apache/aries/subsystem/core/internal/OsgiIdentityRequirement.java",
                "blob_url": "https://github.com/apache/aries/blob/40ce35ae675d8b2d902c64bf90fd95cffc81d33b/subsystem/subsystem-core/src/main/java/org/apache/aries/subsystem/core/internal/OsgiIdentityRequirement.java",
                "raw_url": "https://github.com/apache/aries/raw/40ce35ae675d8b2d902c64bf90fd95cffc81d33b/subsystem/subsystem-core/src/main/java/org/apache/aries/subsystem/core/internal/OsgiIdentityRequirement.java",
                "status": "modified",
                "changes": 1,
                "additions": 1,
                "contents_url": "https://api.github.com/repos/apache/aries/contents/subsystem/subsystem-core/src/main/java/org/apache/aries/subsystem/core/internal/OsgiIdentityRequirement.java?ref=40ce35ae675d8b2d902c64bf90fd95cffc81d33b",
                "patch": "@@ -102,6 +102,7 @@ private OsgiIdentityRequirement(Filter filter, Resource resource, boolean transi\n \t\tthis.filter = filter;\r\n \t\tthis.resource = resource;\r\n \t\tthis.transitive = transitive;\r\n+\t\tdirectives.put(Constants.FILTER_DIRECTIVE, filter.toString());\r\n \t\tdirectives.put(ResourceConstants.IDENTITY_SINGLETON_DIRECTIVE, Boolean.FALSE.toString());\r\n \t\tdirectives.put(Constants.EFFECTIVE_DIRECTIVE, Constants.EFFECTIVE_RESOLVE);\r\n \t}\r",
                "deletions": 0
            },
            {
                "sha": "2d96664dc8ffd05f00096573df514ed6730cb4c0",
                "filename": "subsystem/subsystem-core/src/main/java/org/apache/aries/subsystem/core/obr/SubsystemEnvironment.java",
                "blob_url": "https://github.com/apache/aries/blob/40ce35ae675d8b2d902c64bf90fd95cffc81d33b/subsystem/subsystem-core/src/main/java/org/apache/aries/subsystem/core/obr/SubsystemEnvironment.java",
                "raw_url": "https://github.com/apache/aries/raw/40ce35ae675d8b2d902c64bf90fd95cffc81d33b/subsystem/subsystem-core/src/main/java/org/apache/aries/subsystem/core/obr/SubsystemEnvironment.java",
                "status": "modified",
                "changes": 9,
                "additions": 4,
                "contents_url": "https://api.github.com/repos/apache/aries/contents/subsystem/subsystem-core/src/main/java/org/apache/aries/subsystem/core/obr/SubsystemEnvironment.java?ref=40ce35ae675d8b2d902c64bf90fd95cffc81d33b",
                "patch": "@@ -69,6 +69,8 @@ public SubsystemEnvironment(AriesSubsystem subsystem) throws IOException, URISyn\n \t\t// This means we're looking for capabilities satisfying a requirement within a content resource or transitive dependency.\r\n \t\tfindArchiveProviders(capabilities, requirement, false);\r\n \t\tfindRepositoryServiceProviders(capabilities, requirement, false);\r\n+\t\t// TODO The following is a quick fix to ensure this environment always returns capabilities provided by the system bundle. Needs some more thought.\r\n+\t\tfindConstituentProviders(requirement, capabilities);\r\n \t\treturn capabilities;\r\n \t}\r\n \t\r\n@@ -89,11 +91,8 @@ public URL getContent(Resource resource) {\n \r\n \t@Override\r\n \tpublic Map<Resource, List<Wire>> getWiring() {\r\n-\t\tMap<Resource, List<Wire>> wiring = new HashMap<Resource, List<Wire>>();\r\n-\t\tfor (Resource resource : resourceToRepository.keySet()) {\r\n-\t\t\twiring.put(resource, Collections.EMPTY_LIST);\r\n-\t\t}\r\n-\t\treturn wiring;\r\n+\t\t// TODO When will this ever return an existing wiring?\r\n+\t\treturn Collections.EMPTY_MAP;\r\n \t}\r\n \t\r\n \tpublic boolean isContentResource(Resource resource) {\r",
                "deletions": 5
            },
            {
                "sha": "da0c829e4e8b9d0e57f6a984b668eac13eeca1d8",
                "filename": "subsystem/subsystem-core/src/main/java/org/apache/aries/subsystem/core/obr/felix/FelixCapabilityAdapter.java",
                "blob_url": "https://github.com/apache/aries/blob/40ce35ae675d8b2d902c64bf90fd95cffc81d33b/subsystem/subsystem-core/src/main/java/org/apache/aries/subsystem/core/obr/felix/FelixCapabilityAdapter.java",
                "raw_url": "https://github.com/apache/aries/raw/40ce35ae675d8b2d902c64bf90fd95cffc81d33b/subsystem/subsystem-core/src/main/java/org/apache/aries/subsystem/core/obr/felix/FelixCapabilityAdapter.java",
                "status": "modified",
                "changes": 4,
                "additions": 3,
                "contents_url": "https://api.github.com/repos/apache/aries/contents/subsystem/subsystem-core/src/main/java/org/apache/aries/subsystem/core/obr/felix/FelixCapabilityAdapter.java?ref=40ce35ae675d8b2d902c64bf90fd95cffc81d33b",
                "patch": "@@ -34,7 +34,9 @@ public FelixCapabilityAdapter(org.apache.felix.bundlerepository.Capability capab\n \t}\r\n \r\n \tpublic Map<String, Object> getAttributes() {\r\n-\t\treturn capability.getPropertiesAsMap();\r\n+\t\tMap<String, Object> result = capability.getPropertiesAsMap();\r\n+\t\tresult.put(getNamespace(), result.get(capability.getName()));\r\n+\t\treturn result;\r\n \t}\r\n \r\n \tpublic Map<String, String> getDirectives() {\r",
                "deletions": 1
            },
            {
                "sha": "5b4f9d2a75f361c59562a6cddc78dc1f5644402e",
                "filename": "subsystem/subsystem-core/src/main/java/org/apache/aries/subsystem/core/obr/felix/FelixRequirementAdapter.java",
                "blob_url": "https://github.com/apache/aries/blob/40ce35ae675d8b2d902c64bf90fd95cffc81d33b/subsystem/subsystem-core/src/main/java/org/apache/aries/subsystem/core/obr/felix/FelixRequirementAdapter.java",
                "raw_url": "https://github.com/apache/aries/raw/40ce35ae675d8b2d902c64bf90fd95cffc81d33b/subsystem/subsystem-core/src/main/java/org/apache/aries/subsystem/core/obr/felix/FelixRequirementAdapter.java",
                "status": "modified",
                "changes": 7,
                "additions": 6,
                "contents_url": "https://api.github.com/repos/apache/aries/contents/subsystem/subsystem-core/src/main/java/org/apache/aries/subsystem/core/obr/felix/FelixRequirementAdapter.java?ref=40ce35ae675d8b2d902c64bf90fd95cffc81d33b",
                "patch": "@@ -42,7 +42,12 @@ public FelixRequirementAdapter(org.apache.felix.bundlerepository.Requirement req\n \r\n \tpublic Map<String, String> getDirectives() {\r\n \t\tMap<String, String> result = new HashMap<String, String>(1);\r\n-\t\tresult.put(Constants.FILTER_DIRECTIVE, requirement.getFilter());\r\n+\t\t/* (1) The Felix OBR specific \"mandatory:<*\" syntax must be stripped out of the filter.\r\n+\t\t * (2) The namespace must be translated.\r\n+\t\t */\r\n+\t\tresult.put(Constants.FILTER_DIRECTIVE, requirement.getFilter()\r\n+\t\t\t\t.replaceAll(\"\\\\(mandatory\\\\:\\\\<\\\\*[^\\\\)]*\\\\)\", \"\")\r\n+\t\t\t\t.replaceAll(requirement.getName() + '=', getNamespace() + '='));\r\n \t\treturn result;\r\n \t}\r\n \r",
                "deletions": 1
            },
            {
                "sha": "24cc17425d4babd965afe3a959018967d5df829e",
                "filename": "subsystem/subsystem-core/src/main/java/org/apache/aries/subsystem/core/obr/felix/FelixResourceAdapter.java",
                "blob_url": "https://github.com/apache/aries/blob/40ce35ae675d8b2d902c64bf90fd95cffc81d33b/subsystem/subsystem-core/src/main/java/org/apache/aries/subsystem/core/obr/felix/FelixResourceAdapter.java",
                "raw_url": "https://github.com/apache/aries/raw/40ce35ae675d8b2d902c64bf90fd95cffc81d33b/subsystem/subsystem-core/src/main/java/org/apache/aries/subsystem/core/obr/felix/FelixResourceAdapter.java",
                "status": "modified",
                "changes": 13,
                "additions": 13,
                "contents_url": "https://api.github.com/repos/apache/aries/contents/subsystem/subsystem-core/src/main/java/org/apache/aries/subsystem/core/obr/felix/FelixResourceAdapter.java?ref=40ce35ae675d8b2d902c64bf90fd95cffc81d33b",
                "patch": "@@ -23,8 +23,19 @@\n import org.osgi.framework.resource.Requirement;\r\n import org.osgi.framework.resource.Resource;\r\n import org.osgi.framework.resource.ResourceConstants;\r\n+import org.osgi.framework.wiring.BundleRevision;\r\n \r\n public class FelixResourceAdapter implements Resource {\r\n+\tprivate static String toFelixNamespace(String namespace) {\r\n+\t\tif (BundleRevision.BUNDLE_NAMESPACE.equals(namespace))\r\n+\t\t\treturn org.apache.felix.bundlerepository.Capability.BUNDLE;\r\n+\t\tif (BundleRevision.HOST_NAMESPACE.equals(namespace))\r\n+\t\t\treturn org.apache.felix.bundlerepository.Capability.FRAGMENT;\r\n+\t\tif (BundleRevision.PACKAGE_NAMESPACE.equals(namespace))\r\n+\t\t\treturn org.apache.felix.bundlerepository.Capability.PACKAGE;\r\n+\t\treturn namespace;\r\n+\t}\r\n+\t\r\n \tprivate final org.apache.felix.bundlerepository.Resource resource;\r\n \t\r\n \tpublic FelixResourceAdapter(final org.apache.felix.bundlerepository.Resource resource) {\r\n@@ -55,6 +66,7 @@ public int hashCode() {\n \t}\r\n \t\r\n \tpublic List<Capability> getCapabilities(String namespace) {\r\n+\t\tnamespace = toFelixNamespace(namespace);\r\n \t\torg.apache.felix.bundlerepository.Capability[] capabilities = resource.getCapabilities();\r\n \t\tArrayList<Capability> result = new ArrayList<Capability>(capabilities.length);\r\n \t\tif (namespace == null || namespace.equals(ResourceConstants.IDENTITY_NAMESPACE)) {\r\n@@ -81,6 +93,7 @@ public int hashCode() {\n \t}\r\n \r\n \tpublic List<Requirement> getRequirements(String namespace) {\r\n+\t\tnamespace = toFelixNamespace(namespace);\r\n \t\torg.apache.felix.bundlerepository.Requirement[] requirements = resource.getRequirements();\r\n \t\tArrayList<Requirement> result = new ArrayList<Requirement>(requirements.length);\r\n \t\tfor (final org.apache.felix.bundlerepository.Requirement requirement : requirements) {\r",
                "deletions": 0
            },
            {
                "sha": "7bb1d6e037d08c878756926fb82e737f25ba0ae4",
                "filename": "subsystem/subsystem-core/src/main/java/org/apache/aries/subsystem/core/obr/felix/OsgiCapabilityAdapter.java",
                "blob_url": "https://github.com/apache/aries/blob/40ce35ae675d8b2d902c64bf90fd95cffc81d33b/subsystem/subsystem-core/src/main/java/org/apache/aries/subsystem/core/obr/felix/OsgiCapabilityAdapter.java",
                "raw_url": "https://github.com/apache/aries/raw/40ce35ae675d8b2d902c64bf90fd95cffc81d33b/subsystem/subsystem-core/src/main/java/org/apache/aries/subsystem/core/obr/felix/OsgiCapabilityAdapter.java",
                "status": "modified",
                "changes": 12,
                "additions": 10,
                "contents_url": "https://api.github.com/repos/apache/aries/contents/subsystem/subsystem-core/src/main/java/org/apache/aries/subsystem/core/obr/felix/OsgiCapabilityAdapter.java?ref=40ce35ae675d8b2d902c64bf90fd95cffc81d33b",
                "patch": "@@ -15,6 +15,7 @@\n \r\n import java.util.ArrayList;\r\n import java.util.Collection;\r\n+import java.util.HashMap;\r\n import java.util.Map;\r\n \r\n import org.apache.felix.bundlerepository.Capability;\r\n@@ -44,13 +45,20 @@ public String getName() {\n \tpublic Property[] getProperties() {\r\n \t\tMap<String, Object> attributes = capability.getAttributes();\r\n \t\tCollection<Property> result = new ArrayList<Property>(attributes.size());\r\n-\t\tfor (final Map.Entry<String, Object> entry : capability.getAttributes().entrySet())\r\n+\t\tfor (final Map.Entry<String, Object> entry : capability.getAttributes().entrySet()) {\r\n+\t\t\tif (entry.getKey().equals(capability.getNamespace())) {\r\n+\t\t\t\tresult.add(new FelixProperty(getName(), entry.getValue()));\r\n+\t\t\t\tcontinue;\r\n+\t\t\t}\r\n \t\t\tresult.add(new FelixProperty(entry));\r\n+\t\t}\r\n \t\treturn result.toArray(new Property[result.size()]);\r\n \t}\r\n \r\n \t@SuppressWarnings(\"rawtypes\")\r\n \tpublic Map getPropertiesAsMap() {\r\n-\t\treturn capability.getAttributes();\r\n+\t\tMap<String, Object> result = new HashMap<String, Object>(capability.getAttributes());\r\n+\t\tresult.put(getName(), result.get(capability.getNamespace()));\r\n+\t\treturn result;\r\n \t}\r\n }\r",
                "deletions": 2
            },
            {
                "sha": "6e763f239f1a54007d4a6b498479b812a01f5fdd",
                "filename": "subsystem/subsystem-itests/pom.xml",
                "blob_url": "https://github.com/apache/aries/blob/40ce35ae675d8b2d902c64bf90fd95cffc81d33b/subsystem/subsystem-itests/pom.xml",
                "raw_url": "https://github.com/apache/aries/raw/40ce35ae675d8b2d902c64bf90fd95cffc81d33b/subsystem/subsystem-itests/pom.xml",
                "status": "modified",
                "changes": 5,
                "additions": 5,
                "contents_url": "https://api.github.com/repos/apache/aries/contents/subsystem/subsystem-itests/pom.xml?ref=40ce35ae675d8b2d902c64bf90fd95cffc81d33b",
                "patch": "@@ -39,6 +39,11 @@\n             <artifactId>services</artifactId>\n             <version>3.3.0-v20110523</version>\n         </dependency>\n+        <dependency>\n+            <groupId>org.eclipse.equinox</groupId>\n+            <artifactId>org.eclipse.equinox.resolver</artifactId>\n+            <version>1.0.0-SNAPSHOT</version>\n+        </dependency>\n         <dependency>\n             <groupId>org.eclipse.equinox</groupId>\n             <artifactId>org.eclipse.equinox.event</artifactId>",
                "deletions": 0
            },
            {
                "sha": "02e6374144c7467faa6e4393c37ab7a9ea4c1057",
                "filename": "subsystem/subsystem-itests/src/test/java/org/apache/aries/subsystem/itests/SubsystemTest.java",
                "blob_url": "https://github.com/apache/aries/blob/40ce35ae675d8b2d902c64bf90fd95cffc81d33b/subsystem/subsystem-itests/src/test/java/org/apache/aries/subsystem/itests/SubsystemTest.java",
                "raw_url": "https://github.com/apache/aries/raw/40ce35ae675d8b2d902c64bf90fd95cffc81d33b/subsystem/subsystem-itests/src/test/java/org/apache/aries/subsystem/itests/SubsystemTest.java",
                "status": "modified",
                "changes": 1,
                "additions": 1,
                "contents_url": "https://api.github.com/repos/apache/aries/contents/subsystem/subsystem-itests/src/test/java/org/apache/aries/subsystem/itests/SubsystemTest.java?ref=40ce35ae675d8b2d902c64bf90fd95cffc81d33b",
                "patch": "@@ -125,6 +125,7 @@ public int size() {\n \t\t\t\t// Bundles\r\n \t\t\t\tmavenBundle(\"org.eclipse.osgi\", \"services\").version(\"3.3.0-v20110523\"),\r\n \t\t\t\tmavenBundle(\"org.eclipse.equinox\", \"region\").version(\"1.0.0.v20110518\"),\r\n+\t\t\t\tmavenBundle(\"org.eclipse.equinox\", \"org.eclipse.equinox.resolver\").version(\"1.0.0-SNAPSHOT\"),\r\n \t\t\t\tmavenBundle(\"org.apache.aries.testsupport\", \"org.apache.aries.testsupport.unit\"),\r\n \t\t\t\tmavenBundle(\"org.apache.aries.application\", \"org.apache.aries.application.api\"),\r\n \t\t\t\tmavenBundle(\"org.apache.aries\", \"org.apache.aries.util\"),\r",
                "deletions": 0
            }
        ]
    }
]