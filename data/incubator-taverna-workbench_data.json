[
    {
        "repo": "incubator-taverna-workbench",
        "message": "Fixed NullPointerException\n\ngit-svn-id: https://taverna.googlecode.com/svn/taverna/ui/net.sf.taverna.t2.ui-components/trunk@11071 bf327186-88b3-11dd-a302-d386e5130c1c",
        "commit": "https://github.com/apache/incubator-taverna-workbench/commit/66a2aeaea5d2f8fe381f948e2b15d23887606528",
        "parent": "https://github.com/apache/incubator-taverna-workbench/commit/cf40a6eed3e5768dce2d029899b2337cb49bd266",
        "bug_id": "incubator-taverna-workbench_1",
        "file": [
            {
                "sha": "66efa1c6ed58468f785ab626b43cf25e68234ee1",
                "filename": "monitor-view/src/main/java/net/sf/taverna/t2/workbench/views/monitor/progressreport/WorkflowRunProgressMonitor.java",
                "blob_url": "https://github.com/apache/incubator-taverna-workbench/blob/66a2aeaea5d2f8fe381f948e2b15d23887606528/monitor-view/src/main/java/net/sf/taverna/t2/workbench/views/monitor/progressreport/WorkflowRunProgressMonitor.java",
                "raw_url": "https://github.com/apache/incubator-taverna-workbench/raw/66a2aeaea5d2f8fe381f948e2b15d23887606528/monitor-view/src/main/java/net/sf/taverna/t2/workbench/views/monitor/progressreport/WorkflowRunProgressMonitor.java",
                "status": "modified",
                "changes": 8,
                "additions": 6,
                "contents_url": "https://api.github.com/repos/apache/incubator-taverna-workbench/contents/monitor-view/src/main/java/net/sf/taverna/t2/workbench/views/monitor/progressreport/WorkflowRunProgressMonitor.java?ref=66a2aeaea5d2f8fe381f948e2b15d23887606528",
                "patch": "@@ -102,8 +102,12 @@ public WorkflowRunProgressMonitor(WorkflowRunProgressTreeTable progressTreeTable\n \t}\n \n \tpublic void onDispose() {\n-\t    updateTimer.cancel();\n-\t    updateTask.run();\n+\t    if (updateTimer != null) {\n+\t\tupdateTimer.cancel();\n+\t    }\n+\t    if (updateTask != null) {\n+\t\tupdateTask.run();\n+\t    }\n \t}\n \n \t@Override",
                "deletions": 2
            }
        ]
    },
    {
        "repo": "incubator-taverna-workbench",
        "message": "T2-1920 Avoid OPM/Janus NullPointerException if workflow has not outputs. Turned out the WorkflowResultsComponent was not propagating the invocation context if no values had been received. Replaced with a DummyContext.\n\ngit-svn-id: https://taverna.googlecode.com/svn/taverna/ui/net.sf.taverna.t2.ui-components/branches/maintenance@13389 bf327186-88b3-11dd-a302-d386e5130c1c",
        "commit": "https://github.com/apache/incubator-taverna-workbench/commit/77423f3e23df0099785b7ba41b52dea6d9b9d154",
        "parent": "https://github.com/apache/incubator-taverna-workbench/commit/69dc95c47ac157c98c5c2c3f41e858dee4b6dcc4",
        "bug_id": "incubator-taverna-workbench_2",
        "file": [
            {
                "sha": "41b6ea84d0cf810e0a78df1ee499e743876de706",
                "filename": "results-view/src/main/java/net/sf/taverna/t2/workbench/views/results/processor/ProcessorResultsComponent.java",
                "blob_url": "https://github.com/apache/incubator-taverna-workbench/blob/77423f3e23df0099785b7ba41b52dea6d9b9d154/results-view/src/main/java/net/sf/taverna/t2/workbench/views/results/processor/ProcessorResultsComponent.java",
                "raw_url": "https://github.com/apache/incubator-taverna-workbench/raw/77423f3e23df0099785b7ba41b52dea6d9b9d154/results-view/src/main/java/net/sf/taverna/t2/workbench/views/results/processor/ProcessorResultsComponent.java",
                "status": "modified",
                "changes": 3,
                "additions": 2,
                "contents_url": "https://api.github.com/repos/apache/incubator-taverna-workbench/contents/results-view/src/main/java/net/sf/taverna/t2/workbench/views/results/processor/ProcessorResultsComponent.java?ref=77423f3e23df0099785b7ba41b52dea6d9b9d154",
                "patch": "@@ -90,6 +90,7 @@\n import net.sf.taverna.t2.workbench.views.results.processor.IterationTreeNode.ErrorState;\n import net.sf.taverna.t2.workbench.views.results.saveactions.SaveAllResultsSPI;\n import net.sf.taverna.t2.workbench.views.results.saveactions.SaveAllResultsSPIRegistry;\n+import net.sf.taverna.t2.workbench.views.results.workflow.DummyContext;\n import net.sf.taverna.t2.workflowmodel.Dataflow;\n import net.sf.taverna.t2.workflowmodel.Processor;\n import net.sf.taverna.t2.workflowmodel.ProcessorInputPort;\n@@ -997,7 +998,7 @@ public void itemStateChanged(ItemEvent e) {\n \t\t\t\t\t((SaveAllResultsSPI)action).setChosenReferences(chosenReferences);\n \t\t\t\t\t((SaveAllResultsSPI)action).setParent(dialog);\t\t\t\n \t\t\t\t\t((SaveAllResultsSPI)action).setReferenceService(referenceService);\n-\t\t\t\t\t((SaveAllResultsSPI)action).setInvocationContext(null);\n+\t\t\t\t\t((SaveAllResultsSPI)action).setInvocationContext(new DummyContext(referenceService));\n \t\t\t\t}\n \t\t\t\t//saveButton.setEnabled(true);\n \t\t\t\tbuttonsBar.add(saveButton);",
                "deletions": 1
            },
            {
                "sha": "fbaca867ce11f39f9d9d04949ef7e7a9a0b03cfb",
                "filename": "results-view/src/main/java/net/sf/taverna/t2/workbench/views/results/workflow/DummyContext.java",
                "blob_url": "https://github.com/apache/incubator-taverna-workbench/blob/77423f3e23df0099785b7ba41b52dea6d9b9d154/results-view/src/main/java/net/sf/taverna/t2/workbench/views/results/workflow/DummyContext.java",
                "raw_url": "https://github.com/apache/incubator-taverna-workbench/raw/77423f3e23df0099785b7ba41b52dea6d9b9d154/results-view/src/main/java/net/sf/taverna/t2/workbench/views/results/workflow/DummyContext.java",
                "status": "added",
                "changes": 12,
                "additions": 12,
                "contents_url": "https://api.github.com/repos/apache/incubator-taverna-workbench/contents/results-view/src/main/java/net/sf/taverna/t2/workbench/views/results/workflow/DummyContext.java?ref=77423f3e23df0099785b7ba41b52dea6d9b9d154",
                "patch": "@@ -0,0 +1,12 @@\n+package net.sf.taverna.t2.workbench.views.results.workflow;\r\n+\r\n+import net.sf.taverna.t2.invocation.impl.InvocationContextImpl;\r\n+import net.sf.taverna.t2.reference.ReferenceService;\r\n+\r\n+public class DummyContext extends\r\n+\t\tInvocationContextImpl {\r\n+\tpublic DummyContext(\r\n+\t\t\tReferenceService referenceService) {\r\n+\t\tsuper(referenceService, null);\r\n+\t}\r\n+}\n\\ No newline at end of file",
                "deletions": 0
            },
            {
                "sha": "8f6439b47c71363b69c1aafcca313cbd695d5b63",
                "filename": "results-view/src/main/java/net/sf/taverna/t2/workbench/views/results/workflow/WorkflowResultsComponent.java",
                "blob_url": "https://github.com/apache/incubator-taverna-workbench/blob/77423f3e23df0099785b7ba41b52dea6d9b9d154/results-view/src/main/java/net/sf/taverna/t2/workbench/views/results/workflow/WorkflowResultsComponent.java",
                "raw_url": "https://github.com/apache/incubator-taverna-workbench/raw/77423f3e23df0099785b7ba41b52dea6d9b9d154/results-view/src/main/java/net/sf/taverna/t2/workbench/views/results/workflow/WorkflowResultsComponent.java",
                "status": "modified",
                "changes": 33,
                "additions": 22,
                "contents_url": "https://api.github.com/repos/apache/incubator-taverna-workbench/contents/results-view/src/main/java/net/sf/taverna/t2/workbench/views/results/workflow/WorkflowResultsComponent.java?ref=77423f3e23df0099785b7ba41b52dea6d9b9d154",
                "patch": "@@ -56,11 +56,11 @@\n import net.sf.taverna.t2.facade.WorkflowInstanceFacade;\n import net.sf.taverna.t2.invocation.InvocationContext;\n import net.sf.taverna.t2.invocation.WorkflowDataToken;\n-import net.sf.taverna.t2.invocation.impl.InvocationContextImpl;\n import net.sf.taverna.t2.lang.ui.DialogTextArea;\n import net.sf.taverna.t2.provenance.api.ProvenanceAccess;\n import net.sf.taverna.t2.provenance.lineageservice.utils.DataflowInvocation;\n import net.sf.taverna.t2.provenance.lineageservice.utils.Port;\n+import net.sf.taverna.t2.provenance.reporter.ProvenanceReporter;\n import net.sf.taverna.t2.reference.ReferenceService;\n import net.sf.taverna.t2.reference.T2Reference;\n import net.sf.taverna.t2.workbench.MainWindow;\n@@ -137,7 +137,7 @@\n \t\n \tpublic WorkflowResultsComponent(ReferenceService referenceService) {\n \t\tsuper(new BorderLayout());\n-\t\tthis.referenceService = referenceService;\n+\t\tthis.referenceService = referenceService;\t\t\n \t\tsetBorder(new EtchedBorder());\n \t\ttabbedPane = new JTabbedPane();\n \t\tsaveButtonsPanel = new JPanel(new GridBagLayout());\n@@ -265,8 +265,6 @@ public void populateResultsFromProvenance() {\n \t\tString connectorType = DataManagementConfiguration.getInstance().getConnectorType();\n \t\tProvenanceAccess provenanceAccess = new ProvenanceAccess(connectorType);\n \t\t\n-\t\tInvocationContext dummyContext = new InvocationContextImpl(referenceService, null);\n-\t\tcontext = dummyContext;\n \t\t\n \t\tpopulateSaveButtonsPanel();\n \n@@ -328,7 +326,7 @@ public int compare(DataflowOutputPort o1, DataflowOutputPort o2) {\n \n \t\t\t    PortResultsViewTab resultTab = inputPortTabMap.get(entry.getKey().getPortName());\n \t\t\t    WorkflowResultTreeModel treeModel = resultTab.getResultModel();\n-\t\t\t    treeModel.createTree(entry.getValue(), dummyContext, ((WorkflowResultTreeNode) treeModel.getRoot()));\t\t\t\t\n+\t\t\t    treeModel.createTree(entry.getValue(), getContext(), ((WorkflowResultTreeNode) treeModel.getRoot()));\t\t\t\t\n \t\t\t    // Need to refresh the tree model we have just changed by adding result nodes\n \t\t\t    resultTab.getModel().reload();\n \t\t\t    resultTab.expandTree(); // tree will be collapsed after reloading\n@@ -337,7 +335,7 @@ public int compare(DataflowOutputPort o1, DataflowOutputPort o2) {\n \t\t\telse{ // output port\n \t\t\t    PortResultsViewTab resultTab = outputPortTabMap.get(entry.getKey().getPortName());\n \t\t\t    WorkflowResultTreeModel treeModel = resultTab.getResultModel();\n-\t\t\t    treeModel.createTree(entry.getValue(), dummyContext, ((WorkflowResultTreeNode) treeModel.getRoot()));\t\n+\t\t\t    treeModel.createTree(entry.getValue(), getContext(), ((WorkflowResultTreeNode) treeModel.getRoot()));\t\n \t\t\t    // Need to refresh the tree model we have just changed by adding result nodes\n \t\t\t    resultTab.getModel().reload();\n \t\t\t    resultTab.expandTree(); // tree will be collapsed after reloading\n@@ -346,6 +344,18 @@ public int compare(DataflowOutputPort o1, DataflowOutputPort o2) {\n \t\t}\n \t}\n \t\n+\tpublic InvocationContext getContext() {\n+\t\tif (context == null) {\n+\t\t\tInvocationContext dummyContext = new DummyContext(referenceService);\n+\t\t\tcontext = dummyContext;\n+\t\t}\n+\t\treturn context;\n+\t}\n+\n+\tpublic void setContext(InvocationContext context) {\n+\t\tthis.context = context;\n+\t}\n+\n \tpublic void selectWorkflowPortTab(DataflowPort port) {\n \t\tPortResultsViewTab tab;\n \t\tif (port instanceof DataflowInputPort) {\n@@ -365,10 +375,11 @@ public void clear() {\n \n \tpublic void resultTokenProduced(WorkflowDataToken token, String portName) {\n \t\t\n-\t\t// Set the invocation context the first time you get the chance\n-\t\tif (context == null)\n-\t\t\tcontext = token.getContext();\n-\t\t\n+\t\tif (context == null || context instanceof DummyContext) {\n+\t\t\t// Set the real invocation context\t\t\n+\t\t\tsetContext(token.getContext());\n+\t\t}\n+\t\t\t\n \t\t// If we have finished receiving results - token.getIndex().length is 0\n \t\tif (token.getIndex().length == 0){\n \t\t\treceivedAllResultsForPort.put(portName, new Boolean(Boolean.TRUE));\n@@ -571,7 +582,7 @@ public void itemStateChanged(ItemEvent e) {\n \t\t\t\t\t((SaveAllResultsSPI)action).setChosenReferences(chosenReferences);\n \t\t\t\t\t((SaveAllResultsSPI)action).setParent(dialog);\t\t\t\n \t\t\t\t\t((SaveAllResultsSPI)action).setReferenceService(referenceService);\n-\t\t\t\t\t((SaveAllResultsSPI)action).setInvocationContext(context);\n+\t\t\t\t\t((SaveAllResultsSPI)action).setInvocationContext(getContext());\n \t\t\t\t}\n \t\t\t\t//saveButton.setEnabled(true);\n \t\t\t\tbuttonsBar.add(saveButton);",
                "deletions": 11
            }
        ]
    },
    {
        "repo": "incubator-taverna-workbench",
        "message": "If Workbench is started up while there is no network connection - hs.getLocalMap() is null for some reason and registerComponent() fails with NullPointerException\n\ngit-svn-id: https://taverna.googlecode.com/svn/taverna/ui/net.sf.taverna.t2.ui-api/trunk@10811 bf327186-88b3-11dd-a302-d386e5130c1c",
        "commit": "https://github.com/apache/incubator-taverna-workbench/commit/71e22572fe73641ef234fc5434bc790c64efd9e1",
        "parent": "https://github.com/apache/incubator-taverna-workbench/commit/c29ebb2e6f0574a4dab1ffff5de33f6a47e9e584",
        "bug_id": "incubator-taverna-workbench_3",
        "file": [
            {
                "sha": "60ded65081357cbe310a778466b512c16036961e",
                "filename": "helper-api/src/main/java/net/sf/taverna/t2/workbench/helper/HelpCollator.java",
                "blob_url": "https://github.com/apache/incubator-taverna-workbench/blob/71e22572fe73641ef234fc5434bc790c64efd9e1/helper-api/src/main/java/net/sf/taverna/t2/workbench/helper/HelpCollator.java",
                "raw_url": "https://github.com/apache/incubator-taverna-workbench/raw/71e22572fe73641ef234fc5434bc790c64efd9e1/helper-api/src/main/java/net/sf/taverna/t2/workbench/helper/HelpCollator.java",
                "status": "modified",
                "changes": 5,
                "additions": 4,
                "contents_url": "https://api.github.com/repos/apache/incubator-taverna-workbench/contents/helper-api/src/main/java/net/sf/taverna/t2/workbench/helper/HelpCollator.java?ref=71e22572fe73641ef234fc5434bc790c64efd9e1",
                "patch": "@@ -167,7 +167,10 @@ public static void registerComponent(Component component, final String id) {\n \t\tif (idMap.containsKey(component)) {\n \t\t\tlogger.info(\"Registered \" + normalizedId);\n \t\t} else {\n-\t\t\tif (hs.getLocalMap().isValidID(normalizedId, hs)) {\n+\t\t\t\n+\t\t\t// If Workbench is started up while there is no network connection - \n+\t\t\t// hs.getLocalMap() is null for some reason\n+\t\t\tif (hs != null && hs.getLocalMap()!= null && hs.getLocalMap().isValidID(normalizedId, hs)) {\n \t\t\t\tidMap.put(component, normalizedId);\n \t\t\t\tlogger.info(\"Registered \" + normalizedId);\n \t\t\t} else {",
                "deletions": 1
            }
        ]
    },
    {
        "repo": "incubator-taverna-workbench",
        "message": "Fix for  Bug   \t T2-1316   \t If a new wf that has inputs is not saved then running it will cause NullPointerException in launch window when making the window title\n\ngit-svn-id: https://taverna.googlecode.com/svn/taverna/ui/net.sf.taverna.t2.ui-components/trunk@10046 bf327186-88b3-11dd-a302-d386e5130c1c",
        "commit": "https://github.com/apache/incubator-taverna-workbench/commit/a299054f9b2740b1ec6c725a476e2833366c3061",
        "parent": "https://github.com/apache/incubator-taverna-workbench/commit/7a4fa0829aa6a62f09c8460c6bdcc9811a111d2f",
        "bug_id": "incubator-taverna-workbench_4",
        "file": [
            {
                "sha": "bca0e70a00177ea0da23e5c31b632e41a384e25d",
                "filename": "reference-ui/src/main/java/net/sf/taverna/t2/reference/ui/WorkflowLaunchWindow.java",
                "blob_url": "https://github.com/apache/incubator-taverna-workbench/blob/a299054f9b2740b1ec6c725a476e2833366c3061/reference-ui/src/main/java/net/sf/taverna/t2/reference/ui/WorkflowLaunchWindow.java",
                "raw_url": "https://github.com/apache/incubator-taverna-workbench/raw/a299054f9b2740b1ec6c725a476e2833366c3061/reference-ui/src/main/java/net/sf/taverna/t2/reference/ui/WorkflowLaunchWindow.java",
                "status": "modified",
                "changes": 4,
                "additions": 2,
                "contents_url": "https://api.github.com/repos/apache/incubator-taverna-workbench/contents/reference-ui/src/main/java/net/sf/taverna/t2/reference/ui/WorkflowLaunchWindow.java?ref=a299054f9b2740b1ec6c725a476e2833366c3061",
                "patch": "@@ -216,9 +216,9 @@ private void setWindowTitle() {\n \t\t\twindowTitle += \"'\" + dataflowOriginal.getLocalName() + \"' \";\n \t\t}\n \t\t\n-\t\tString workflowLocation = fileManager.getDataflowSource(dataflowOriginal).toString();\n+\t\tObject workflowLocation = fileManager.getDataflowSource(dataflowOriginal);\n \t\t\n-\t\twindowTitle += (workflowLocation == null)? \"\" : \"from \" + workflowLocation;\n+\t\twindowTitle += (workflowLocation == null)? \"\" : \"from \" + workflowLocation.toString();\n \t\n \t\tsetTitle(windowTitle);\n \t}",
                "deletions": 2
            }
        ]
    },
    {
        "repo": "incubator-taverna-workbench",
        "message": "Fix for T2-1707: NullPointerException when clicking on the \"Choose tags ...\" link under the main search facility in the BioCat plugin.\n\nThe problem was that the user.dir file URL passed to the XHTMLPanel's setDocument() and further down to NaiveUserAgent.resolveURI() did not start with \"file://\" which was causing MalformedUrlException.\n\ngit-svn-id: https://taverna.googlecode.com/svn/taverna/ui/net.sf.taverna.t2.ui-exts/branches/maintenance@12978 bf327186-88b3-11dd-a302-d386e5130c1c",
        "commit": "https://github.com/apache/incubator-taverna-workbench/commit/f5078699fa08dee0b5096af34c87b2c3470ef27e",
        "parent": "https://github.com/apache/incubator-taverna-workbench/commit/ef80568ef88dfadc1d584b5d8837be4702af96f1",
        "bug_id": "incubator-taverna-workbench_5",
        "file": [
            {
                "sha": "28a0f11390d4e3364775d6f48477b2e3a31b1483",
                "filename": "perspective-biocatalogue/src/main/java/net/sf/taverna/biocatalogue/ui/TagCloudPanel.java",
                "blob_url": "https://github.com/apache/incubator-taverna-workbench/blob/f5078699fa08dee0b5096af34c87b2c3470ef27e/perspective-biocatalogue/src/main/java/net/sf/taverna/biocatalogue/ui/TagCloudPanel.java",
                "raw_url": "https://github.com/apache/incubator-taverna-workbench/raw/f5078699fa08dee0b5096af34c87b2c3470ef27e/perspective-biocatalogue/src/main/java/net/sf/taverna/biocatalogue/ui/TagCloudPanel.java",
                "status": "modified",
                "changes": 2,
                "additions": 1,
                "contents_url": "https://api.github.com/repos/apache/incubator-taverna-workbench/contents/perspective-biocatalogue/src/main/java/net/sf/taverna/biocatalogue/ui/TagCloudPanel.java?ref=f5078699fa08dee0b5096af34c87b2c3470ef27e",
                "patch": "@@ -550,7 +550,7 @@ public void repopulate()\n       // tag cloud HTML document prepared - render it within the XHTML panel\r\n       try {\r\n         StringToInputStreamConverter converter = new StringToInputStreamConverter(content.toString());\r\n-        xhtmlTagCloudPanel.setDocument(converter.getInputStream(), System.getProperty(\"user.dir\"));\r\n+        xhtmlTagCloudPanel.setDocument(converter.getInputStream(), \"file://\"+System.getProperty(\"user.dir\"));\r\n         xhtmlTagCloudPanel.validate();\r\n         converter.closeAllStreams();  // close all streams\r\n       }\r",
                "deletions": 1
            }
        ]
    }
]