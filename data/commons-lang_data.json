[{"commit": "https://github.com/apache/commons-lang/commit/cb686673a70a6f14c35575550c48c37d19a1598b", "parent": "https://github.com/apache/commons-lang/commit/0820c4c895f6e7c9ef4860d7373675550c87ac6c", "message": "LANG-1384: Fix NPE when version >= 11\n\nThe fix is likely to be insufficient if the version naming scheme changes.", "bug_id": "commons-lang_1", "file": [{"additions": 2, "raw_url": "https://github.com/apache/commons-lang/raw/cb686673a70a6f14c35575550c48c37d19a1598b/src/main/java/org/apache/commons/lang3/JavaVersion.java", "blob_url": "https://github.com/apache/commons-lang/blob/cb686673a70a6f14c35575550c48c37d19a1598b/src/main/java/org/apache/commons/lang3/JavaVersion.java", "sha": "60258f63a545fb4d4fc11bf1ce1522094aefc2d5", "changes": 2, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/commons-lang/contents/src/main/java/org/apache/commons/lang3/JavaVersion.java?ref=cb686673a70a6f14c35575550c48c37d19a1598b", "patch": "@@ -191,6 +191,8 @@ static JavaVersion get(final String nom) {\n             if (Float.parseFloat(nom.substring(firstComma + 1, end)) > .9f) {\n                 return JAVA_RECENT;\n             }\n+        } else if (v > 10) {\n+            return JAVA_RECENT;\n         }\n         return null;\n     }", "filename": "src/main/java/org/apache/commons/lang3/JavaVersion.java"}, {"additions": 1, "raw_url": "https://github.com/apache/commons-lang/raw/cb686673a70a6f14c35575550c48c37d19a1598b/src/test/java/org/apache/commons/lang3/JavaVersionTest.java", "blob_url": "https://github.com/apache/commons-lang/blob/cb686673a70a6f14c35575550c48c37d19a1598b/src/test/java/org/apache/commons/lang3/JavaVersionTest.java", "sha": "ad285654f44ded083ae5cc898fb3b42f6af62bb2", "changes": 1, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/commons-lang/contents/src/test/java/org/apache/commons/lang3/JavaVersionTest.java?ref=cb686673a70a6f14c35575550c48c37d19a1598b", "patch": "@@ -59,6 +59,7 @@ public void testGetJavaVersion() {\n         assertEquals(\"1.10 failed\", JAVA_RECENT, get(\"1.10\"));\n         // assertNull(\"2.10 unexpectedly worked\", get(\"2.10\"));\n         assertEquals(\"Wrapper method failed\", get(\"1.5\"), getJavaVersion(\"1.5\"));\n+        assertEquals(\"Unhandled\", JAVA_RECENT, get(\"11\")); // LANG-1384\n     }\n \n     @Test", "filename": "src/test/java/org/apache/commons/lang3/JavaVersionTest.java"}], "repo": "commons-lang"}, {"commit": "https://github.com/apache/commons-lang/commit/6bb871786e563ed82e2b8d26314c22772808fe5d", "parent": "https://github.com/apache/commons-lang/commit/8ac3334a04928faab627aef4daf4ac51c28a95ef", "message": "Fix potential NPE by checking for object identity instead of comparing one property only", "bug_id": "commons-lang_2", "file": [{"additions": 3, "raw_url": "https://github.com/apache/commons-lang/raw/6bb871786e563ed82e2b8d26314c22772808fe5d/src/test/java/org/apache/commons/lang3/ThreadUtilsTest.java", "blob_url": "https://github.com/apache/commons-lang/blob/6bb871786e563ed82e2b8d26314c22772808fe5d/src/test/java/org/apache/commons/lang3/ThreadUtilsTest.java", "sha": "b0ad3100652950c018dc4fadaa18e6bbfffac5cf", "changes": 6, "status": "modified", "deletions": 3, "contents_url": "https://api.github.com/repos/apache/commons-lang/contents/src/test/java/org/apache/commons/lang3/ThreadUtilsTest.java?ref=6bb871786e563ed82e2b8d26314c22772808fe5d", "patch": "@@ -174,7 +174,7 @@ public void testThreadsById() throws InterruptedException {\n         try {\n             t1.start();\n             t2.start();\n-            assertEquals(t1.getName(), ThreadUtils.findThreadById(t1.getId()).getName());\n+            assertSame(t1, ThreadUtils.findThreadById(t1.getId()));\n             assertSame(t2, ThreadUtils.findThreadById(t2.getId()));\n         } finally {\n             t1.interrupt();\n@@ -261,8 +261,8 @@ public void testThreadGroupsById() throws InterruptedException {\n         try {\n             t1.start();\n             t2.start();\n-            assertEquals(t1.getName(), ThreadUtils.findThreadById(t1.getId(),\"thread_group_DDZZ99__\").getName());\n-            assertEquals(t2.getName(), ThreadUtils.findThreadById(t2.getId(),\"thread_group_DDZZ99__\").getName());\n+            assertSame(t1, ThreadUtils.findThreadById(t1.getId(),\"thread_group_DDZZ99__\"));\n+            assertSame(t2, ThreadUtils.findThreadById(t2.getId(),\"thread_group_DDZZ99__\"));\n             assertNull(ThreadUtils.findThreadById(nonExistingId,\"non_existent_thread_group_JJHHZZ__\"));\n             assertNull(ThreadUtils.findThreadById(nonExistingId,\"thread_group_DDZZ99__\"));\n         } finally {", "filename": "src/test/java/org/apache/commons/lang3/ThreadUtilsTest.java"}], "repo": "commons-lang"}, {"commit": "https://github.com/apache/commons-lang/commit/1a7e46f430df71ac883706f595f0698617a8dc3d", "parent": "https://github.com/apache/commons-lang/commit/d1350bf73ff5cea1fdd85ce23940c5ca96889f2a", "message": "Rewrite to avoid (im)possible NPE warning\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/lang/trunk@1478506 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "commons-lang_3", "file": [{"additions": 9, "raw_url": "https://github.com/apache/commons-lang/raw/1a7e46f430df71ac883706f595f0698617a8dc3d/src/main/java/org/apache/commons/lang3/text/StrBuilder.java", "blob_url": "https://github.com/apache/commons-lang/blob/1a7e46f430df71ac883706f595f0698617a8dc3d/src/main/java/org/apache/commons/lang3/text/StrBuilder.java", "sha": "e2f78a89fd832c2f8bb7bd7759df9725f162a1f7", "changes": 17, "status": "modified", "deletions": 8, "contents_url": "https://api.github.com/repos/apache/commons-lang/contents/src/main/java/org/apache/commons/lang3/text/StrBuilder.java?ref=1a7e46f430df71ac883706f595f0698617a8dc3d", "patch": "@@ -1486,19 +1486,20 @@ public StrBuilder insert(final int index, final Object obj) {\n      * @return this, to enable chaining\n      * @throws IndexOutOfBoundsException if the index is invalid\n      */\n-    @SuppressWarnings(\"null\") // str cannot be null\n     public StrBuilder insert(final int index, String str) {\n         validateIndex(index);\n         if (str == null) {\n             str = nullText;\n         }\n-        final int strLen = (str == null ? 0 : str.length());\n-        if (strLen > 0) {\n-            final int newSize = size + strLen;\n-            ensureCapacity(newSize);\n-            System.arraycopy(buffer, index, buffer, index + strLen, size - index);\n-            size = newSize;\n-            str.getChars(0, strLen, buffer, index); // str cannot be null here\n+        if (str != null) {\n+            final int strLen = str.length();\n+            if (strLen > 0) {\n+                final int newSize = size + strLen;\n+                ensureCapacity(newSize);\n+                System.arraycopy(buffer, index, buffer, index + strLen, size - index);\n+                size = newSize;\n+                str.getChars(0, strLen, buffer, index);\n+            }\n         }\n         return this;\n     }", "filename": "src/main/java/org/apache/commons/lang3/text/StrBuilder.java"}], "repo": "commons-lang"}, {"commit": "https://github.com/apache/commons-lang/commit/5cc5694b0e9eb6f51ea64734de3db566323354fd", "parent": "https://github.com/apache/commons-lang/commit/5b76976ce8a9c3e2d7bd7ff175e24def890f9114", "message": "Check for Null and avoid NPE warning\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/lang/trunk@1034828 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "commons-lang_4", "file": [{"additions": 3, "raw_url": "https://github.com/apache/commons-lang/raw/5cc5694b0e9eb6f51ea64734de3db566323354fd/src/test/java/org/apache/commons/lang3/concurrent/ConstantInitializerTest.java", "blob_url": "https://github.com/apache/commons-lang/blob/5cc5694b0e9eb6f51ea64734de3db566323354fd/src/test/java/org/apache/commons/lang3/concurrent/ConstantInitializerTest.java", "sha": "74c11ea1d3191afbbd8c519d2218d0ebc6b165f7", "changes": 6, "status": "modified", "deletions": 3, "contents_url": "https://api.github.com/repos/apache/commons-lang/contents/src/test/java/org/apache/commons/lang3/concurrent/ConstantInitializerTest.java?ref=5cc5694b0e9eb6f51ea64734de3db566323354fd", "patch": "@@ -17,6 +17,7 @@\n package org.apache.commons.lang3.concurrent;\n \n import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertNotNull;\n import static org.junit.Assert.assertTrue;\n \n import java.util.regex.Pattern;\n@@ -50,9 +51,8 @@ public void setUp() throws Exception {\n      */\n     private void checkEquals(Object obj, boolean expected) {\n         assertEquals(\"Wrong result of equals\", expected, init.equals(obj));\n-        if (obj != null) {\n-            assertEquals(\"Not symmetric\", expected, obj.equals(init));\n-        }\n+        assertNotNull(obj);\n+        assertEquals(\"Not symmetric\", expected, obj.equals(init));\n         if (expected) {\n             assertEquals(\"Different hash codes\", init.hashCode(),\n                     obj.hashCode());", "filename": "src/test/java/org/apache/commons/lang3/concurrent/ConstantInitializerTest.java"}], "repo": "commons-lang"}, {"commit": "https://github.com/apache/commons-lang/commit/8f675dd3cbfb8f552bdbbe1cfc646ba5b367983b", "parent": "https://github.com/apache/commons-lang/commit/5d5a31a8274ff7e8219ee87fdd15b48c2184ccc0", "message": "[LANG-587] avoid NPE in ClassUtils.toClass(Object[])\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/lang/trunk@907102 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "commons-lang_5", "file": [{"additions": 3, "raw_url": "https://github.com/apache/commons-lang/raw/8f675dd3cbfb8f552bdbbe1cfc646ba5b367983b/src/main/java/org/apache/commons/lang3/ClassUtils.java", "blob_url": "https://github.com/apache/commons-lang/blob/8f675dd3cbfb8f552bdbbe1cfc646ba5b367983b/src/main/java/org/apache/commons/lang3/ClassUtils.java", "sha": "3998966a7500da2afa8131428262840251f8a875", "changes": 5, "status": "modified", "deletions": 2, "contents_url": "https://api.github.com/repos/apache/commons-lang/contents/src/main/java/org/apache/commons/lang3/ClassUtils.java?ref=8f675dd3cbfb8f552bdbbe1cfc646ba5b367983b", "patch": "@@ -890,7 +890,8 @@ private static String toCanonicalName(String className) {\n     }\n \n     /**\n-     * <p>Converts an array of <code>Object</code> in to an array of <code>Class</code> objects.</p>\n+     * <p>Converts an array of <code>Object</code> in to an array of <code>Class</code> objects.\n+     * If any of these objects is null, a null element will be inserted into the array.</p>\n      *\n      * <p>This method returns <code>null</code> for a <code>null</code> input array.</p>\n      *\n@@ -906,7 +907,7 @@ private static String toCanonicalName(String className) {\n         }\n         Class<?>[] classes = new Class[array.length];\n         for (int i = 0; i < array.length; i++) {\n-            classes[i] = array[i].getClass();\n+            classes[i] = array[i] == null ? null : array[i].getClass();\n         }\n         return classes;\n     }", "filename": "src/main/java/org/apache/commons/lang3/ClassUtils.java"}, {"additions": 3, "raw_url": "https://github.com/apache/commons-lang/raw/8f675dd3cbfb8f552bdbbe1cfc646ba5b367983b/src/test/java/org/apache/commons/lang3/ClassUtilsTest.java", "blob_url": "https://github.com/apache/commons-lang/blob/8f675dd3cbfb8f552bdbbe1cfc646ba5b367983b/src/test/java/org/apache/commons/lang3/ClassUtilsTest.java", "sha": "010ea93420e1b30e1d0b8c9520017980a5f306f3", "changes": 3, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/commons-lang/contents/src/test/java/org/apache/commons/lang3/ClassUtilsTest.java?ref=8f675dd3cbfb8f552bdbbe1cfc646ba5b367983b", "patch": "@@ -906,6 +906,9 @@ public void testToClass_object() {\n \n         assertTrue(Arrays.equals(new Class[] { String.class, Integer.class, Double.class },\n                 ClassUtils.toClass(new Object[] { \"Test\", 1, 99d })));\n+\n+        assertTrue(Arrays.equals(new Class[] { String.class, null, Double.class },\n+                ClassUtils.toClass(new Object[] { \"Test\", null, 99d })));\n     }\n \n     public void test_getShortCanonicalName_Object() {", "filename": "src/test/java/org/apache/commons/lang3/ClassUtilsTest.java"}], "repo": "commons-lang"}, {"commit": "https://github.com/apache/commons-lang/commit/c92f2bcf4cc274062acaa7e9d31a67dc977662d8", "parent": "https://github.com/apache/commons-lang/commit/a6c13a17c066f2cd89d71ed1879aed2f286921ad", "message": "Simplify code (eliminate conditional check) and avoid NPE warning\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/lang/trunk@902955 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "commons-lang_6", "file": [{"additions": 3, "raw_url": "https://github.com/apache/commons-lang/raw/c92f2bcf4cc274062acaa7e9d31a67dc977662d8/src/main/java/org/apache/commons/lang3/time/DateUtils.java", "blob_url": "https://github.com/apache/commons-lang/blob/c92f2bcf4cc274062acaa7e9d31a67dc977662d8/src/main/java/org/apache/commons/lang3/time/DateUtils.java", "sha": "2b6fc6feca7288f9375b0ce02776102a4ed2cb9d", "changes": 10, "status": "modified", "deletions": 7, "contents_url": "https://api.github.com/repos/apache/commons-lang/contents/src/main/java/org/apache/commons/lang3/time/DateUtils.java?ref=c92f2bcf4cc274062acaa7e9d31a67dc977662d8", "patch": "@@ -312,7 +312,8 @@ private static Date parseDateWithLeniency(String str, String[] parsePatterns,\n             throw new IllegalArgumentException(\"Date and Patterns must not be null\");\n         }\n         \n-        SimpleDateFormat parser = null;\n+        SimpleDateFormat parser = new SimpleDateFormat();\n+        parser.setLenient(lenient);\n         ParsePosition pos = new ParsePosition(0);\n         for (int i = 0; i < parsePatterns.length; i++) {\n \n@@ -323,12 +324,7 @@ private static Date parseDateWithLeniency(String str, String[] parsePatterns,\n                 pattern = pattern.substring(0, pattern.length() - 1);\n             }\n             \n-            if (i == 0) {\n-                parser = new SimpleDateFormat(pattern);\n-                parser.setLenient(lenient);\n-            } else {\n-                parser.applyPattern(pattern); // cannot be null if i != 0\n-            }\n+            parser.applyPattern(pattern);\n             pos.setIndex(0);\n \n             String str2 = str;", "filename": "src/main/java/org/apache/commons/lang3/time/DateUtils.java"}], "repo": "commons-lang"}, {"commit": "https://github.com/apache/commons-lang/commit/87b920c44bee6e45790e241d21b1fdab24289ae7", "parent": "https://github.com/apache/commons-lang/commit/bcfc9c2602b35bb4a6e5012430b4bfcc36796fd4", "message": "Hide NPE from ArrayUtils as IAE\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/lang/trunk@137546 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "commons-lang_7", "file": [{"additions": 14, "raw_url": "https://github.com/apache/commons-lang/raw/87b920c44bee6e45790e241d21b1fdab24289ae7/src/java/org/apache/commons/lang/BooleanUtils.java", "blob_url": "https://github.com/apache/commons-lang/blob/87b920c44bee6e45790e241d21b1fdab24289ae7/src/java/org/apache/commons/lang/BooleanUtils.java", "sha": "06b99cd16effaa204921eb223dbb8c87411a5a0a", "changes": 17, "status": "modified", "deletions": 3, "contents_url": "https://api.github.com/repos/apache/commons-lang/contents/src/java/org/apache/commons/lang/BooleanUtils.java?ref=87b920c44bee6e45790e241d21b1fdab24289ae7", "patch": "@@ -66,7 +66,7 @@\n  * @author Stephen Colebourne\n  * @author Matthew Hawthorne\n  * @since 2.0\n- * @version $Id: BooleanUtils.java,v 1.10 2003/07/31 22:30:07 scolebourne Exp $\n+ * @version $Id: BooleanUtils.java,v 1.11 2003/07/31 23:55:57 scolebourne Exp $\n  */\n public class BooleanUtils {\n \n@@ -654,12 +654,23 @@ public static boolean xor(boolean[] array) {\n      * \n      * @param array  an array of <code>Boolean<code>s\n      * @return <code>true</code> if the xor is successful.\n-     * @throws NullPointerException if <code>array</code> contains a <code>null</code>\n      * @throws IllegalArgumentException if <code>array</code> is <code>null</code>\n      * @throws IllegalArgumentException if <code>array</code> is empty.\n+     * @throws IllegalArgumentException if <code>array</code> contains a <code>null</code>\n      */\n     public static Boolean xor(Boolean[] array) {\n-        return (xor(ArrayUtils.toPrimitive(array)) ? Boolean.TRUE : Boolean.FALSE);\n+        if (array == null) {\n+            throw new IllegalArgumentException(\"The Array must not be null\");\n+        } else if (array.length == 0) {\n+            throw new IllegalArgumentException(\"Array is empty\");\n+        }\n+        boolean[] primitive = null;\n+        try {\n+            primitive = ArrayUtils.toPrimitive(array);\n+        } catch (NullPointerException ex) {\n+            throw new IllegalArgumentException(\"The array must not conatin any null elements\");\n+        }\n+        return (xor(primitive) ? Boolean.TRUE : Boolean.FALSE);\n     }\n \n }", "filename": "src/java/org/apache/commons/lang/BooleanUtils.java"}, {"additions": 9, "raw_url": "https://github.com/apache/commons-lang/raw/87b920c44bee6e45790e241d21b1fdab24289ae7/src/test/org/apache/commons/lang/BooleanUtilsTest.java", "blob_url": "https://github.com/apache/commons-lang/blob/87b920c44bee6e45790e241d21b1fdab24289ae7/src/test/org/apache/commons/lang/BooleanUtilsTest.java", "sha": "c3dfbe501f3b02f9734d600de0d9dc3d2f1b6e75", "changes": 10, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/commons-lang/contents/src/test/org/apache/commons/lang/BooleanUtilsTest.java?ref=87b920c44bee6e45790e241d21b1fdab24289ae7", "patch": "@@ -66,7 +66,7 @@\n  *\n  * @author Stephen Colebourne\n  * @author Matthew Hawthorne\n- * @version $Id: BooleanUtilsTest.java,v 1.5 2003/07/30 22:21:39 scolebourne Exp $\n+ * @version $Id: BooleanUtilsTest.java,v 1.6 2003/07/31 23:55:57 scolebourne Exp $\n  */\n public class BooleanUtilsTest extends TestCase {\n \n@@ -466,6 +466,13 @@ public void testXor_object_emptyInput() {\n             fail(\"Exception was not thrown for empty input.\");\n         } catch (IllegalArgumentException ex) {}\n     }\n+    \n+    public void testXor_object_nullElementInput() {\n+        try {\n+            BooleanUtils.xor(new Boolean[] {null});\n+            fail(\"Exception was not thrown for null element input.\");\n+        } catch (IllegalArgumentException ex) {}\n+    }\n \n     public void testXor_object_validInput_2items() {\n         assertTrue(\n@@ -565,6 +572,7 @@ public void testXor_object_validInput_3items() {\n                         Boolean.TRUE,\n                         Boolean.TRUE })\n                 .booleanValue());\n+                \n     }\n \n }", "filename": "src/test/org/apache/commons/lang/BooleanUtilsTest.java"}], "repo": "commons-lang"}, {"commit": "https://github.com/apache/commons-lang/commit/a80f11cf9d02d2517c7f230f24949cbebaafc0c2", "parent": "https://github.com/apache/commons-lang/commit/f5cb67acd964ee173967081205eb30c43ba585c3", "message": "Applying Ilya's patch from LANG-703 fixing an NPE when toString returns null\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/lang/trunk@1142381 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "commons-lang_8", "file": [{"additions": 7, "raw_url": "https://github.com/apache/commons-lang/raw/a80f11cf9d02d2517c7f230f24949cbebaafc0c2/src/main/java/org/apache/commons/lang3/StringUtils.java", "blob_url": "https://github.com/apache/commons-lang/blob/a80f11cf9d02d2517c7f230f24949cbebaafc0c2/src/main/java/org/apache/commons/lang3/StringUtils.java", "sha": "711852ecbf17fbaab5509e946b1c75a50ee82730", "changes": 19, "status": "modified", "deletions": 12, "contents_url": "https://api.github.com/repos/apache/commons-lang/contents/src/main/java/org/apache/commons/lang3/StringUtils.java?ref=a80f11cf9d02d2517c7f230f24949cbebaafc0c2", "patch": "@@ -3290,13 +3290,12 @@ public static String join(Object[] array, char separator, int startIndex, int en\n         if (array == null) {\n             return null;\n         }\n-        int bufSize = (endIndex - startIndex);\n-        if (bufSize <= 0) {\n+        int noOfItems = (endIndex - startIndex);\n+        if (noOfItems <= 0) {\n             return EMPTY;\n         }\n-\n-        bufSize *= ((array[startIndex] == null ? 16 : array[startIndex].toString().length()) + 1);\n-        StringBuilder buf = new StringBuilder(bufSize);\n+        \n+        StringBuilder buf = new StringBuilder(noOfItems * 16);\n \n         for (int i = startIndex; i < endIndex; i++) {\n             if (i > startIndex) {\n@@ -3309,7 +3308,6 @@ public static String join(Object[] array, char separator, int startIndex, int en\n         return buf.toString();\n     }\n \n-\n     /**\n      * <p>Joins the elements of the provided array into a single String\n      * containing the provided list of elements.</p>\n@@ -3377,15 +3375,12 @@ public static String join(Object[] array, String separator, int startIndex, int\n \n         // endIndex - startIndex > 0:   Len = NofStrings *(len(firstString) + len(separator))\n         //           (Assuming that all Strings are roughly equally long)\n-        int bufSize = (endIndex - startIndex);\n-        if (bufSize <= 0) {\n+        int noOfItems = (endIndex - startIndex);\n+        if (noOfItems <= 0) {\n             return EMPTY;\n         }\n \n-        bufSize *= ((array[startIndex] == null ? 16 : array[startIndex].toString().length())\n-                        + separator.length());\n-\n-        StringBuilder buf = new StringBuilder(bufSize);\n+        StringBuilder buf = new StringBuilder(noOfItems * 16);\n \n         for (int i = startIndex; i < endIndex; i++) {\n             if (i > startIndex) {", "filename": "src/main/java/org/apache/commons/lang3/StringUtils.java"}, {"additions": 10, "raw_url": "https://github.com/apache/commons-lang/raw/a80f11cf9d02d2517c7f230f24949cbebaafc0c2/src/test/java/org/apache/commons/lang3/StringUtilsTest.java", "blob_url": "https://github.com/apache/commons-lang/blob/a80f11cf9d02d2517c7f230f24949cbebaafc0c2/src/test/java/org/apache/commons/lang3/StringUtilsTest.java", "sha": "a49311b922246aa7c876ebca7413749cb9f69022", "changes": 10, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/commons-lang/contents/src/test/java/org/apache/commons/lang3/StringUtilsTest.java?ref=a80f11cf9d02d2517c7f230f24949cbebaafc0c2", "patch": "@@ -67,6 +67,14 @@\n     private static final String[] ARRAY_LIST = { \"foo\", \"bar\", \"baz\" };\n     private static final String[] EMPTY_ARRAY_LIST = {};\n     private static final String[] NULL_ARRAY_LIST = {null};\n+    private static final Object[] NULL_TO_STRING_LIST = {\n+    \tnew Object(){\n+    \t\t@Override\n+    \t\tpublic String toString() {\n+    \t\t\treturn null;\n+    \t\t}\n+    \t}\n+    };\n     private static final String[] MIXED_ARRAY_LIST = {null, \"\", \"foo\"};\n     private static final Object[] MIXED_TYPE_LIST = {\"foo\", Long.valueOf(2L)};\n \n@@ -182,6 +190,7 @@ public void testJoin_Objectarray() {\n \n         assertEquals(\"\", StringUtils.join(EMPTY_ARRAY_LIST));\n         assertEquals(\"\", StringUtils.join(NULL_ARRAY_LIST));\n+        assertEquals(\"null\", StringUtils.join(NULL_TO_STRING_LIST));\n         assertEquals(\"abc\", StringUtils.join(new String[] {\"a\", \"b\", \"c\"}));\n         assertEquals(\"a\", StringUtils.join(new String[] {null, \"a\", \"\"}));\n         assertEquals(\"foo\", StringUtils.join(MIXED_ARRAY_LIST));\n@@ -197,6 +206,7 @@ public void testJoin_ArrayChar() {\n \n         assertEquals(\"/\", StringUtils.join(MIXED_ARRAY_LIST, '/', 0, MIXED_ARRAY_LIST.length-1));\n         assertEquals(\"foo\", StringUtils.join(MIXED_TYPE_LIST, '/', 0, 1));\n+        assertEquals(\"null\", StringUtils.join(NULL_TO_STRING_LIST,'/', 0, 1));\n         assertEquals(\"foo/2\", StringUtils.join(MIXED_TYPE_LIST, '/', 0, 2));\n         assertEquals(\"2\", StringUtils.join(MIXED_TYPE_LIST, '/', 1, 2));\n         assertEquals(\"\", StringUtils.join(MIXED_TYPE_LIST, '/', 2, 1));", "filename": "src/test/java/org/apache/commons/lang3/StringUtilsTest.java"}], "repo": "commons-lang"}, {"commit": "https://github.com/apache/commons-lang/commit/d34dce48e5cd02ef1f078a939741d79fab3c39d0", "parent": "https://github.com/apache/commons-lang/commit/4a29061ad70319e9545f71d208327db3e4192b5e", "message": "Adding note on potential NPE if autoboxing occurs per LANG-676\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/lang/trunk@1067606 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "commons-lang_9", "file": [{"additions": 12, "raw_url": "https://github.com/apache/commons-lang/raw/d34dce48e5cd02ef1f078a939741d79fab3c39d0/src/main/java/org/apache/commons/lang3/BooleanUtils.java", "blob_url": "https://github.com/apache/commons-lang/blob/d34dce48e5cd02ef1f078a939741d79fab3c39d0/src/main/java/org/apache/commons/lang3/BooleanUtils.java", "sha": "c7eae2d05fe02059193200cd73b2347c13792f99", "changes": 12, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/commons-lang/contents/src/main/java/org/apache/commons/lang3/BooleanUtils.java?ref=d34dce48e5cd02ef1f078a939741d79fab3c39d0", "patch": "@@ -52,6 +52,8 @@ public BooleanUtils() {\n      * \n      * <p>If <code>null</code> is passed in, <code>null</code> will be returned.</p>\n      *\n+     * <p>NOTE: This returns null and will throw a NullPointerException if autoboxed to a boolean. </p>\n+     *\n      * <pre>\n      *   BooleanUtils.negate(Boolean.TRUE)  = Boolean.FALSE;\n      *   BooleanUtils.negate(Boolean.FALSE) = Boolean.TRUE;\n@@ -234,6 +236,8 @@ public static Boolean toBooleanObject(int value) {\n      * \n      * <p><code>null</code> will be converted to <code>null</code>.</p>\n      *\n+     * <p>NOTE: This returns null and will throw a NullPointerException if autoboxed to a boolean. </p>\n+     *\n      * <pre>\n      *   BooleanUtils.toBoolean(new Integer(0))    = Boolean.FALSE\n      *   BooleanUtils.toBoolean(new Integer(1))    = Boolean.TRUE\n@@ -315,6 +319,8 @@ public static boolean toBoolean(Integer value, Integer trueValue, Integer falseV\n     /**\n      * <p>Converts an int to a Boolean specifying the conversion values.</p>\n      * \n+     * <p>NOTE: This returns null and will throw a NullPointerException if autoboxed to a boolean. </p>\n+     *\n      * <pre>\n      *   BooleanUtils.toBooleanObject(0, 0, 2, 3) = Boolean.TRUE\n      *   BooleanUtils.toBooleanObject(2, 1, 2, 3) = Boolean.FALSE\n@@ -343,6 +349,8 @@ public static Boolean toBooleanObject(int value, int trueValue, int falseValue,\n     /**\n      * <p>Converts an Integer to a Boolean specifying the conversion values.</p>\n      * \n+     * <p>NOTE: This returns null and will throw a NullPointerException if autoboxed to a boolean. </p>\n+     *\n      * <pre>\n      *   BooleanUtils.toBooleanObject(new Integer(0), new Integer(0), new Integer(2), new Integer(3)) = Boolean.TRUE\n      *   BooleanUtils.toBooleanObject(new Integer(2), new Integer(1), new Integer(2), new Integer(3)) = Boolean.FALSE\n@@ -528,6 +536,8 @@ public static Integer toIntegerObject(Boolean bool, Integer trueValue, Integer f\n      * (case insensitive) will return <code>false</code>.\n      * Otherwise, <code>null</code> is returned.</p>\n      *\n+     * <p>NOTE: This returns null and will throw a NullPointerException if autoboxed to a boolean. </p>\n+     *\n      * <pre>\n      *   BooleanUtils.toBooleanObject(null)    = null\n      *   BooleanUtils.toBooleanObject(\"true\")  = Boolean.TRUE\n@@ -642,6 +652,8 @@ public static Boolean toBooleanObject(String str) {\n     /**\n      * <p>Converts a String to a Boolean throwing an exception if no match.</p>\n      *\n+     * <p>NOTE: This returns null and will throw a NullPointerException if autoboxed to a boolean. </p>\n+     *\n      * <pre>\n      *   BooleanUtils.toBooleanObject(\"true\", \"true\", \"false\", \"null\")  = Boolean.TRUE\n      *   BooleanUtils.toBooleanObject(\"false\", \"true\", \"false\", \"null\") = Boolean.FALSE", "filename": "src/main/java/org/apache/commons/lang3/BooleanUtils.java"}], "repo": "commons-lang"}, {"commit": "https://github.com/apache/commons-lang/commit/ea623e575eb48564459e840a3ec130d65e370339", "parent": "https://github.com/apache/commons-lang/commit/35ca6531efbbe5c96c2788fcd1801658141d01ee", "message": "Revert bad update in r1034828; fix NPE warning a different way\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/lang/trunk@1034904 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "commons-lang_10", "file": [{"additions": 6, "raw_url": "https://github.com/apache/commons-lang/raw/ea623e575eb48564459e840a3ec130d65e370339/src/test/java/org/apache/commons/lang3/concurrent/ConstantInitializerTest.java", "blob_url": "https://github.com/apache/commons-lang/blob/ea623e575eb48564459e840a3ec130d65e370339/src/test/java/org/apache/commons/lang3/concurrent/ConstantInitializerTest.java", "sha": "8b17c6db63a49f0649884ad27a28af3d6e2f8f32", "changes": 12, "status": "modified", "deletions": 6, "contents_url": "https://api.github.com/repos/apache/commons-lang/contents/src/test/java/org/apache/commons/lang3/concurrent/ConstantInitializerTest.java?ref=ea623e575eb48564459e840a3ec130d65e370339", "patch": "@@ -17,7 +17,6 @@\n package org.apache.commons.lang3.concurrent;\n \n import static org.junit.Assert.assertEquals;\n-import static org.junit.Assert.assertNotNull;\n import static org.junit.Assert.assertTrue;\n \n import java.util.regex.Pattern;\n@@ -51,11 +50,12 @@ public void setUp() throws Exception {\n      */\n     private void checkEquals(Object obj, boolean expected) {\n         assertEquals(\"Wrong result of equals\", expected, init.equals(obj));\n-        assertNotNull(obj);\n-        assertEquals(\"Not symmetric\", expected, obj.equals(init));\n-        if (expected) {\n-            assertEquals(\"Different hash codes\", init.hashCode(),\n-                    obj.hashCode());\n+        if (obj != null) {\n+            assertEquals(\"Not symmetric\", expected, obj.equals(init));\n+            if (expected) {\n+                assertEquals(\"Different hash codes\", init.hashCode(),\n+                        obj.hashCode());\n+            }\n         }\n     }\n ", "filename": "src/test/java/org/apache/commons/lang3/concurrent/ConstantInitializerTest.java"}], "repo": "commons-lang"}, {"commit": "https://github.com/apache/commons-lang/commit/cccbf94e72fcdfadcaad5800acc8f871e4ef3246", "parent": "https://github.com/apache/commons-lang/commit/039f4566a9445d917b327156f69d0c16954ee756", "message": "Changing the StringBuilder to build around an empty String and not null, as null will cause an NPE. Reported by FindBugs\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/lang/trunk@1006333 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "commons-lang_11", "file": [{"additions": 1, "raw_url": "https://github.com/apache/commons-lang/raw/cccbf94e72fcdfadcaad5800acc8f871e4ef3246/src/main/java/org/apache/commons/lang3/AnnotationUtils.java", "blob_url": "https://github.com/apache/commons-lang/blob/cccbf94e72fcdfadcaad5800acc8f871e4ef3246/src/main/java/org/apache/commons/lang3/AnnotationUtils.java", "sha": "273ccae3bb7dabe2f5f215dc3a279a3a46b3c371", "changes": 2, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/commons-lang/contents/src/main/java/org/apache/commons/lang3/AnnotationUtils.java?ref=cccbf94e72fcdfadcaad5800acc8f871e4ef3246", "patch": "@@ -59,7 +59,7 @@ protected String getShortClassName(java.lang.Class<?> cls) {\n                     break;\n                 }\n             }\n-            return new StringBuilder(annotationType == null ? null : annotationType.getName())\n+            return new StringBuilder(annotationType == null ? \"\" : annotationType.getName())\n                     .insert(0, '@').toString();\n         }\n ", "filename": "src/main/java/org/apache/commons/lang3/AnnotationUtils.java"}], "repo": "commons-lang"}, {"commit": "https://github.com/apache/commons-lang/commit/56550bf2779990da78d2bac1d8287c8a693c6e4b", "parent": "https://github.com/apache/commons-lang/commit/dafb8e85dcb76a299c6add11ecb62acf702d6c2a", "message": "Applying fix for LANG-552. StringUtils.replaceEach(String, String[], String[]) no longer NPEs when null appears in the last String[]\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/lang/trunk@890212 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "commons-lang_12", "file": [{"additions": 3, "raw_url": "https://github.com/apache/commons-lang/raw/56550bf2779990da78d2bac1d8287c8a693c6e4b/src/java/org/apache/commons/lang3/StringUtils.java", "blob_url": "https://github.com/apache/commons-lang/blob/56550bf2779990da78d2bac1d8287c8a693c6e4b/src/java/org/apache/commons/lang3/StringUtils.java", "sha": "f6cabeed86c3dd567cb4567b318e4f756054cdce", "changes": 3, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/commons-lang/contents/src/java/org/apache/commons/lang3/StringUtils.java?ref=56550bf2779990da78d2bac1d8287c8a693c6e4b", "patch": "@@ -3673,6 +3673,9 @@ private static String replaceEach(String text, String[] searchList, String[] rep\n \n         // count the replacement text elements that are larger than their corresponding text being replaced\n         for (int i = 0; i < searchList.length; i++) {\n+            if (searchList[i] == null || replacementList[i] == null) {\n+                continue;\n+            }\n             int greater = replacementList[i].length() - searchList[i].length();\n             if (greater > 0) {\n                 increase += 3 * greater; // assume 3 matches", "filename": "src/java/org/apache/commons/lang3/StringUtils.java"}, {"additions": 4, "raw_url": "https://github.com/apache/commons-lang/raw/56550bf2779990da78d2bac1d8287c8a693c6e4b/src/test/org/apache/commons/lang3/StringUtilsTest.java", "blob_url": "https://github.com/apache/commons-lang/blob/56550bf2779990da78d2bac1d8287c8a693c6e4b/src/test/org/apache/commons/lang3/StringUtilsTest.java", "sha": "7a74598a69fdfdff0491e8d11e661480951b3c8f", "changes": 4, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/commons-lang/contents/src/test/org/apache/commons/lang3/StringUtilsTest.java?ref=56550bf2779990da78d2bac1d8287c8a693c6e4b", "patch": "@@ -1033,6 +1033,10 @@ public void testReplace_StringStringArrayStringArray() {\n                 \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"N\", \"O\", \"P\", \"Q\", \n                 \"R\", \"S\", \"T\", \"U\", \"V\", \"W\", \"X\", \"Y\", \"Z\", \"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \n                 \"H\", \"I\", \"J\", \"K\", \"L\", \"M\", \"5\", \"6\", \"7\", \"8\", \"9\", \"1\", \"2\", \"3\", \"4\"}));\n+\n+        // Test null safety inside arrays - LANG-552\n+        assertEquals(StringUtils.replaceEach(\"aba\", new String[]{\"a\"}, new String[]{null}),\"aba\");\n+        assertEquals(StringUtils.replaceEach(\"aba\", new String[]{\"a\", \"b\"}, new String[]{\"c\", null}),\"cbc\");\n     }\n \n     /**", "filename": "src/test/org/apache/commons/lang3/StringUtilsTest.java"}], "repo": "commons-lang"}, {"commit": "https://github.com/apache/commons-lang/commit/43db5237ab2a2dbc3a79daed10499bb4dbf92a4e", "parent": "https://github.com/apache/commons-lang/commit/6d98f1d5f37dc5d46f6d2e27d50fa0a9b6e6a078", "message": "Fix RandomStringUtils to not throw NPE all the time\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/lang/trunk@137543 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "commons-lang_13", "file": [{"additions": 37, "raw_url": "https://github.com/apache/commons-lang/raw/43db5237ab2a2dbc3a79daed10499bb4dbf92a4e/src/java/org/apache/commons/lang/RandomStringUtils.java", "blob_url": "https://github.com/apache/commons-lang/blob/43db5237ab2a2dbc3a79daed10499bb4dbf92a4e/src/java/org/apache/commons/lang/RandomStringUtils.java", "sha": "c4e0d704ed6421d47e2daf4d7a7c40113874b50e", "changes": 69, "status": "modified", "deletions": 32, "contents_url": "https://api.github.com/repos/apache/commons-lang/contents/src/java/org/apache/commons/lang/RandomStringUtils.java?ref=43db5237ab2a2dbc3a79daed10499bb4dbf92a4e", "patch": "@@ -64,7 +64,7 @@\n  * @author <a href=\"mailto:ggregory@seagullsw.com\">Gary Gregory</a>\n  * @author Phil Steitz\n  * @since 1.0\n- * @version $Id: RandomStringUtils.java,v 1.19 2003/07/26 10:32:17 scolebourne Exp $\n+ * @version $Id: RandomStringUtils.java,v 1.20 2003/07/31 23:24:35 scolebourne Exp $\n  */\n public class RandomStringUtils {\n \n@@ -190,7 +190,7 @@ public static String random(int count, boolean letters, boolean numbers) {\n      * @return the random string\n      */\n     public static String random(int count, int start, int end, boolean letters, boolean numbers) {\n-        return random(count, start, end, letters, numbers, null);\n+        return random(count, start, end, letters, numbers, null, RANDOM);\n     }\n \n     /**\n@@ -207,14 +207,14 @@ public static String random(int count, int start, int end, boolean letters, bool\n      * @param end  the position in set of chars to end before\n      * @param letters  only allow letters?\n      * @param numbers  only allow numbers?\n-     * @param set  the set of chars to choose randoms from.\n+     * @param chars  the set of chars to choose randoms from.\n      *  If <code>null</code>, then it will use the set of all chars.\n      * @return the random string\n      * @throws ArrayIndexOutOfBoundsException if there are not\n      *  <code>(end - start) + 1</code> characters in the set array.\n      */\n-    public static String random(int count, int start, int end, boolean letters, boolean numbers, char[] set) {\n-        return random(count,start,end,letters,numbers,set,RANDOM);\n+    public static String random(int count, int start, int end, boolean letters, boolean numbers, char[] chars) {\n+        return random(count, start, end, letters, numbers, chars, RANDOM);\n     }\n \n     /**\n@@ -241,24 +241,24 @@ public static String random(int count, int start, int end, boolean letters, bool\n      * @param end  the position in set of chars to end before\n      * @param letters  only allow letters?\n      * @param numbers  only allow numbers?\n-     * @param set  the set of chars to choose randoms from.\n+     * @param chars  the set of chars to choose randoms from.\n      *  If <code>null</code>, then it will use the set of all chars.\n      * @param random  a source of randomness.\n      * @return the random string\n      * @throws ArrayIndexOutOfBoundsException if there are not\n      *  <code>(end - start) + 1</code> characters in the set array.\n      * @throws IllegalArgumentException if <code>count</code> &lt; 0.\n      */\n-    public static String random(int count, int start, int end, boolean letters, boolean numbers, char[] set, Random random) {\n-        if( count == 0 ) {\n+    public static String random(int count, int start, int end, boolean letters, boolean numbers, char[] chars, Random random) {\n+        if (count == 0) {\n             return \"\";\n-        } else if( count < 0 ) {\n+        } else if (count < 0) {\n             throw new IllegalArgumentException(\"Requested random string length \" + count + \" is less than 0.\");\n         }\n-        if( (start == 0) && (end == 0) ) {\n+        if ((start == 0) && (end == 0)) {\n             end = 'z' + 1;\n             start = ' ';\n-            if(!letters && !numbers) {\n+            if (!letters && !numbers) {\n                 start = 0;\n                 end = Integer.MAX_VALUE;\n             }\n@@ -267,20 +267,18 @@ public static String random(int count, int start, int end, boolean letters, bool\n         StringBuffer buffer = new StringBuffer();\n         int gap = end - start;\n \n-        while(count-- != 0) {\n+        while (count-- != 0) {\n             char ch;\n-            if(set == null) {\n-                ch = (char)(random.nextInt(gap) + start);\n+            if (chars == null) {\n+                ch = (char) (random.nextInt(gap) + start);\n             } else {\n-                ch = set[random.nextInt(gap) + start];\n+                ch = chars[random.nextInt(gap) + start];\n             }\n-            if( (letters && numbers && Character.isLetterOrDigit(ch)) ||\n-                (letters && Character.isLetter(ch)) ||\n-                (numbers && Character.isDigit(ch)) ||\n-                (!letters && !numbers)\n-              ) \n-            {\n-                buffer.append( ch );\n+            if ((letters && numbers && Character.isLetterOrDigit(ch))\n+                || (letters && Character.isLetter(ch))\n+                || (numbers && Character.isDigit(ch))\n+                || (!letters && !numbers)) {\n+                buffer.append(ch);\n             } else {\n                 count++;\n             }\n@@ -296,13 +294,16 @@ public static String random(int count, int start, int end, boolean letters, bool\n      * specified.</p>\n      *\n      * @param count  the length of random string to create\n-     * @param set  the String containing the set of characters to use,\n-     *  must not be <code>null</code>\n+     * @param chars  the String containing the set of characters to use,\n+     *  may be null\n      * @return the random string\n-     * @throws NullPointerException if the set is <code>null</code>\n+     * @throws IllegalArgumentException if <code>count</code> &lt; 0.\n      */\n-    public static String random(int count, String set) {\n-        return random(count, set.toCharArray());\n+    public static String random(int count, String chars) {\n+        if (chars == null) {\n+            return random(count, 0, 0, false, false, null, RANDOM);\n+        }\n+        return random(count, chars.toCharArray());\n     }\n \n     /**\n@@ -312,12 +313,16 @@ public static String random(int count, String set) {\n      * <p>Characters will be chosen from the set of characters specified.</p>\n      *\n      * @param count  the length of random string to create\n-     * @param set  the character array containing the set of characters to use\n-     *  must not be <code>null</code>\n+     * @param chars  the character array containing the set of characters to use,\n+     *  may be null\n      * @return the random string\n-     * @throws NullPointerException if the set is <code>null</code>\n+     * @throws IllegalArgumentException if <code>count</code> &lt; 0.\n      */\n-    public static String random(int count, char[] set) {\n-        return random(count, 0, set.length, false, false, set);\n+    public static String random(int count, char[] chars) {\n+        if (chars == null) {\n+            return random(count, 0, 0, false, false, null, RANDOM);\n+        }\n+        return random(count, 0, chars.length, false, false, chars, RANDOM);\n     }\n+    \n }", "filename": "src/java/org/apache/commons/lang/RandomStringUtils.java"}, {"additions": 42, "raw_url": "https://github.com/apache/commons-lang/raw/43db5237ab2a2dbc3a79daed10499bb4dbf92a4e/src/test/org/apache/commons/lang/RandomStringUtilsTest.java", "blob_url": "https://github.com/apache/commons-lang/blob/43db5237ab2a2dbc3a79daed10499bb4dbf92a4e/src/test/org/apache/commons/lang/RandomStringUtilsTest.java", "sha": "cc8542ceeeef97081fad6621cc7fbc4d99cef71f", "changes": 49, "status": "modified", "deletions": 7, "contents_url": "https://api.github.com/repos/apache/commons-lang/contents/src/test/org/apache/commons/lang/RandomStringUtilsTest.java?ref=43db5237ab2a2dbc3a79daed10499bb4dbf92a4e", "patch": "@@ -67,7 +67,7 @@\n  * @author <a href=\"mailto:steven@caswell.name\">Steven Caswell</a>\n  * @author <a href=\"mailto:ridesmet@users.sourceforge.net\">Ringo De Smet</a>\n  * @author Phil Steitz\n- * @version $Id: RandomStringUtilsTest.java,v 1.9 2003/07/30 22:21:39 scolebourne Exp $\n+ * @version $Id: RandomStringUtilsTest.java,v 1.10 2003/07/31 23:24:35 scolebourne Exp $\n  */\n public class RandomStringUtilsTest extends junit.framework.TestCase {\n     /**\n@@ -157,6 +157,12 @@ public void testRandomStringUtils() {\n         r2 = RandomStringUtils.random(50, set);\n         assertTrue(\"!r1.equals(r2)\", !r1.equals(r2));\n         \n+        r1 = RandomStringUtils.random(50, (String) null);\n+        assertEquals(\"random(50) length\", 50, r1.length());\n+        r2 = RandomStringUtils.random(50, (String) null);\n+        assertEquals(\"random(50) length\", 50, r2.length());\n+        assertTrue(\"!r1.equals(r2)\", !r1.equals(r2));\n+        \n         set = \"stuvwxyz\";\n         r1 = RandomStringUtils.random(50, set.toCharArray());\n         assertEquals(\"random(50, \\\"stuvwxyz\\\")\", 50, r1.length());\n@@ -165,6 +171,12 @@ public void testRandomStringUtils() {\n         }\n         r2 = RandomStringUtils.random(50, set);\n         assertTrue(\"!r1.equals(r2)\", !r1.equals(r2));\n+        \n+        r1 = RandomStringUtils.random(50, (char[]) null);\n+        assertEquals(\"random(50) length\", 50, r1.length());\n+        r2 = RandomStringUtils.random(50, (char[]) null);\n+        assertEquals(\"random(50) length\", 50, r2.length());\n+        assertTrue(\"!r1.equals(r2)\", !r1.equals(r2));\n \n         long seed = System.currentTimeMillis();\n         r1 = RandomStringUtils.random(50,0,0,true,true,null,new Random(seed));\n@@ -174,13 +186,36 @@ public void testRandomStringUtils() {\n         r1 = RandomStringUtils.random(0);\n         assertEquals(\"random(0).equals(\\\"\\\")\", \"\", r1);\n \n-        Exception e = null;\n+    }\n+    public void testExceptions() {\n         try {\n-            r1 = RandomStringUtils.random(-1);\n-        } catch (Exception e2) {\n-            e = e2;\n-        }\n-        assertNotNull(\"random(<0) throws exception\", e);\n+            RandomStringUtils.random(-1);\n+            fail();\n+        } catch (IllegalArgumentException ex) {}\n+        try {\n+            RandomStringUtils.random(-1, true, true);\n+            fail();\n+        } catch (IllegalArgumentException ex) {}\n+        try {\n+            RandomStringUtils.random(-1, new char[0]);\n+            fail();\n+        } catch (IllegalArgumentException ex) {}\n+        try {\n+            RandomStringUtils.random(-1, \"\");\n+            fail();\n+        } catch (IllegalArgumentException ex) {}\n+        try {\n+            RandomStringUtils.random(-1, 'a', 'z', false, false);\n+            fail();\n+        } catch (IllegalArgumentException ex) {}\n+        try {\n+            RandomStringUtils.random(-1, 'a', 'z', false, false, new char[0]);\n+            fail();\n+        } catch (IllegalArgumentException ex) {}\n+        try {\n+            RandomStringUtils.random(-1, 'a', 'z', false, false, new char[0], new Random());\n+            fail();\n+        } catch (IllegalArgumentException ex) {}\n     }\n     \n     /**", "filename": "src/test/org/apache/commons/lang/RandomStringUtilsTest.java"}], "repo": "commons-lang"}, {"commit": "https://github.com/apache/commons-lang/commit/4926914ecbaec6a092f2398af3f5e8468f5f53b5", "parent": "https://github.com/apache/commons-lang/commit/357851bdb1830b1275221b28aee676f9860e1d8b", "message": "Fix CharSetUtils to not throw NPE all the time\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/lang/trunk@137538 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "commons-lang_14", "file": [{"additions": 22, "raw_url": "https://github.com/apache/commons-lang/raw/4926914ecbaec6a092f2398af3f5e8468f5f53b5/src/java/org/apache/commons/lang/CharSet.java", "blob_url": "https://github.com/apache/commons-lang/blob/4926914ecbaec6a092f2398af3f5e8468f5f53b5/src/java/org/apache/commons/lang/CharSet.java", "sha": "d9e1e26b6f5ea0ef67a2ae4737e802b7cfe84f90", "changes": 34, "status": "modified", "deletions": 12, "contents_url": "https://api.github.com/repos/apache/commons-lang/contents/src/java/org/apache/commons/lang/CharSet.java?ref=4926914ecbaec6a092f2398af3f5e8468f5f53b5", "patch": "@@ -58,26 +58,34 @@\n import java.util.List;\n \n /**\n- * <p>A set of characters. You can iterate over the characters in the\n- * set.</p>\n+ * <p>A set of characters.</p>\n  *\n  * @author <a href=\"bayard@generationjava.com\">Henri Yandell</a>\n  * @author Stephen Colebourne\n  * @since 1.0\n- * @version $Id: CharSet.java,v 1.8 2003/03/23 17:59:09 scolebourne Exp $\n+ * @version $Id: CharSet.java,v 1.9 2003/07/31 21:32:47 scolebourne Exp $\n  */\n public class CharSet {\n \n     private List set = new LinkedList();\n \n+    /**\n+     * <p>Restricted constructor.</p>\n+     *\n+     * <p>Use the factory method\n+     * {@link CharSetUtils#evaluateSet(java.lang.String[])}.</p>\n+     */\n+    protected CharSet(String set) {\n+        add(set);\n+    }\n+\n     /**\n      * <p>Restricted constructor.</p>\n      *\n      * <p>Use the factory method\n      * {@link CharSetUtils#evaluateSet(java.lang.String[])}.</p>\n      *\n-     * @throws NullPointerException if any of set[i] is <code>null</code>\n-     *  or if set is <code>null</code>\n+     * @throws NullPointerException if set is <code>null</code>\n      */\n     protected CharSet(String[] set) {\n         int sz = set.length;\n@@ -116,31 +124,33 @@ public boolean contains(char ch) {\n      * <p>Add a set definition string to the <code>CharSet</code>.</p>\n      * \n      * @param str  set definition string\n-     * @throws NullPointerException if <code>str</code> is <code>null</code>\n      */\n     protected void add(String str) {\n+        if (str == null) {\n+            return;\n+        }\n         int sz = str.length();\n         CharRange range = null;\n \n-        if(\"-\".equals(str)) {\n+        if (\"-\".equals(str)) {\n             range = new CharRange('-');\n             set.add(range);\n             return;\n-        } \n+        }\n \n         boolean end = false;\n         boolean negated = false;\n-        for(int i=0; i<sz; i++) {\n+        for (int i = 0; i < sz; i++) {\n             char ch = str.charAt(i);\n-            if(ch == '-') {\n+            if (ch == '-') {\n                 end = true;\n                 continue;\n             }\n-            if(end) {\n+            if (end) {\n                 range.setEnd(ch);\n                 continue;\n             }\n-            if(ch == '^') {\n+            if (ch == '^') {\n                 negated = true;\n                 continue;\n             }", "filename": "src/java/org/apache/commons/lang/CharSet.java"}, {"additions": 112, "raw_url": "https://github.com/apache/commons-lang/raw/4926914ecbaec6a092f2398af3f5e8468f5f53b5/src/java/org/apache/commons/lang/CharSetUtils.java", "blob_url": "https://github.com/apache/commons-lang/blob/4926914ecbaec6a092f2398af3f5e8468f5f53b5/src/java/org/apache/commons/lang/CharSetUtils.java", "sha": "a6d6b001fc03f30ea1835d68f35c67ba57df4920", "changes": 166, "status": "modified", "deletions": 54, "contents_url": "https://api.github.com/repos/apache/commons-lang/contents/src/java/org/apache/commons/lang/CharSetUtils.java?ref=4926914ecbaec6a092f2398af3f5e8468f5f53b5", "patch": "@@ -56,14 +56,14 @@\n /**\n  * <p>Numerous routines to manipulate a <code>CharSet</code>.</p>\n  *\n- * <p>This class tries to handle <code>null</code> input gracefully.\n- * An exception will generally not be thrown for a <code>null</code> input.\n+ * <p>This class handles <code>null</code> input gracefully.\n+ * An exception will not be thrown for a <code>null</code> input.\n  * Each method documents its behaviour in more detail.</p>\n  * \n  * @author <a href=\"bayard@generationjava.com\">Henri Yandell</a>\n  * @author Stephen Colebourne\n  * @since 1.0\n- * @version $Id: CharSetUtils.java,v 1.17 2003/07/31 20:38:26 scolebourne Exp $\n+ * @version $Id: CharSetUtils.java,v 1.18 2003/07/31 21:32:47 scolebourne Exp $\n  */\n public class CharSetUtils {\n \n@@ -77,6 +77,7 @@\n     public CharSetUtils() {\n     }\n \n+    //-----------------------------------------------------------------------\n     /**\n      * <p>Creates a <code>CharSetUtils</code> object which allows a certain amount of\n      * set logic to be performed.</p>\n@@ -87,33 +88,72 @@ public CharSetUtils() {\n      *   a set in itself due to the size of that set in unicode.</li>\n      *  <li>&quot;ej-m&quot; implies e,j->m. e,j,k,l,m.</li>\n      * </ul>\n+     * \n+     * <pre>\n+     * CharSetUtils.evaluateSet(null)  = null\n+     * CharSetUtils.evaluateSet(\"\")    = CharSet matching nothing\n+     * CharSetUtils.evaluateSet(\"a-e\") = CharSet matching a,b,c,d,e\n+     * </pre>\n      *\n-     * @param set  the set, must not be null\n-     * @return a CharSet instance\n-     * @throws NullPointerException if any of set[i] is null or if set is null\n+     * @param set  the set, may be null\n+     * @return a CharSet instance, <code>null</code> if null input\n+     */\n+    public static CharSet evaluateSet(String set) {\n+        if (set == null) {\n+            return null;\n+        }\n+        return new CharSet(new String[] {set}); \n+    }\n+\n+    /**\n+     * <p>Creates a <code>CharSetUtils</code> object which allows a certain amount of\n+     * set logic to be performed.</p>\n+     * <p>The syntax is:</p>\n+     * <ul>\n+     *  <li>&quot;aeio&quot; which implies 'a','e',..</li>\n+     *  <li>&quot;^e&quot; implies not e. However it only negates, it's not\n+     *   a set in itself due to the size of that set in unicode.</li>\n+     *  <li>&quot;ej-m&quot; implies e,j->m. e,j,k,l,m.</li>\n+     * </ul>\n+     * \n+     * <pre>\n+     * CharSetUtils.evaluateSet(null)    = null\n+     * CharSetUtils.evaluateSet([])      = CharSet matching nothing\n+     * CharSetUtils.evaluateSet([\"a-e\"]) = CharSet matching a,b,c,d,e\n+     * </pre>\n+     *\n+     * @param set  the set, may be null\n+     * @return a CharSet instance, <code>null</code> if null input\n      */\n     public static CharSet evaluateSet(String[] set) {\n+        if (set == null) {\n+            return null;\n+        }\n         return new CharSet(set); \n     }\n \n+    //-----------------------------------------------------------------------\n     /**\n      * <p>Squeezes any repititions of a character that is mentioned in the\n      * supplied set.</p>\n      *\n-     * <p>An example is:</p>\n-     * <ul>\n-     *  <li>squeeze(&quot;hello&quot;, &quot;el&quot;) => &quot;helo&quot;</li>\n-     * </ul>\n-     * @see #evaluateSet(java.lang.String[]) for set-syntax.\n+     * <pre>\n+     * CharSetUtils.squeeze(null, *)        = null\n+     * CharSetUtils.squeeze(\"\", *)          = \"\"\n+     * CharSetUtils.squeeze(*, null)        = *\n+     * CharSetUtils.squeeze(*, \"\")          = *\n+     * CharSetUtils.squeeze(\"hello\", \"k-p\") = \"helo\"\n+     * CharSetUtils.squeeze(\"hello\", \"a-e\") = \"hello\"\n+     * </pre>\n      *\n+     * @see #evaluateSet(java.lang.String[]) for set-syntax.\n      * @param str  the string to squeeze, may be null\n-     * @param set  the character set to use for manipulation, must not be null\n+     * @param set  the character set to use for manipulation, may be null\n      * @return modified String, <code>null</code> if null string input\n-     * @throws NullPointerException if <code>set</code> is <code>null</code>\n      */\n     public static String squeeze(String str, String set) {\n-        if (str == null) {\n-            return null;\n+        if (str == null || str.length() == 0 || set == null || set.length() == 0) {\n+            return str;\n         }\n         String[] strs = new String[1];\n         strs[0] = set;\n@@ -128,17 +168,15 @@ public static String squeeze(String str, String set) {\n      * <ul>\n      *   <li>squeeze(&quot;hello&quot;, {&quot;el&quot;}) => &quot;helo&quot;</li>\n      * </ul>\n-     * @see #evaluateSet(java.lang.String[]) for set-syntax.\n      * \n+     * @see #evaluateSet(java.lang.String[]) for set-syntax.\n      * @param str  the string to squeeze, may be null\n-     * @param set  the character set to use for manipulation, must not be null\n+     * @param set  the character set to use for manipulation, may be null\n      * @return modified String, <code>null</code> if null string input\n-     * @throws NullPointerException if <code>set</code> is <code>null</code>\n-     *  or any element is <code>null</code>\n      */\n     public static String squeeze(String str, String[] set) {\n-        if (str == null) {\n-            return null;\n+        if (str == null || str.length() == 0 || set == null || set.length == 0) {\n+            return str;\n         }\n         CharSet chars = evaluateSet(set);\n         StringBuffer buffer = new StringBuffer(str.length());\n@@ -159,22 +197,27 @@ public static String squeeze(String str, String[] set) {\n         return buffer.toString();\n     }\n \n+    //-----------------------------------------------------------------------\n     /**\n      * <p>Takes an argument in set-syntax, see evaluateSet,\n      * and returns the number of characters present in the specified string.</p>\n      *\n-     * <p>An example would be:</p>\n-     * <ul>\n-     *   <li>count(&quot;hello&quot;, {&quot;c-f&quot;, &quot;o&quot;}) returns 2.</li>\n-     * </ul>\n+     * <pre>\n+     * CharSetUtils.count(null, *)        = 0\n+     * CharSetUtils.count(\"\", *)          = 0\n+     * CharSetUtils.count(*, null)        = 0\n+     * CharSetUtils.count(*, \"\")          = 0\n+     * CharSetUtils.count(\"hello\", \"k-p\") = 3\n+     * CharSetUtils.count(\"hello\", \"a-e\") = 1\n+     * </pre>\n      *\n+     * @see #evaluateSet(java.lang.String[]) for set-syntax.\n      * @param str  String to count characters in, may be null\n-     * @param set  String set of characters to count, must not be null\n+     * @param set  String set of characters to count, may be null\n      * @return character count, zero if null string input\n-     * @throws NullPointerException if <code>set</code> is <code>null</code>\n      */\n     public static int count(String str, String set) {\n-        if (str == null) {\n+        if (str == null || str.length() == 0 || set == null || set.length() == 0) {\n             return 0;\n         }\n         String[] strs = new String[1];\n@@ -191,14 +234,13 @@ public static int count(String str, String set) {\n      *  <li>count(&quot;hello&quot;, {&quot;c-f&quot;, &quot;o&quot;}) returns 2.</li>\n      * </ul>\n      *\n+     * @see #evaluateSet(java.lang.String[]) for set-syntax.\n      * @param str  String to count characters in, may be null\n-     * @param set  String[] set of characters to count, must not be null\n+     * @param set  String[] set of characters to count, may be null\n      * @return character count, zero if null string input\n-     * @throws NullPointerException if <code>set</code> is <code>null</code>\n-     *  or any element is <code>null</code>\n      */\n     public static int count(String str, String[] set) {\n-        if (str == null) {\n+        if (str == null || str.length() == 0 || set == null || set.length == 0) {\n             return 0;\n         }\n         CharSet chars = evaluateSet(set);\n@@ -213,24 +255,32 @@ public static int count(String str, String[] set) {\n         return count;\n     }\n \n+    //-----------------------------------------------------------------------\n     /**\n      * <p>Takes an argument in set-syntax, see evaluateSet,\n      * and keeps any of characters present in the specified string.</p>\n      *\n-     * <p>An example would be:</p>\n-     * <ul>\n-     *   <li>keep(&quot;hello&quot;, {&quot;c-fo&quot;}) returns &quot;hll&quot;</li>\n-     * </ul>\n+     * <pre>\n+     * CharSetUtils.keep(null, *)        = null\n+     * CharSetUtils.keep(\"\", *)          = \"\"\n+     * CharSetUtils.keep(*, null)        = \"\"\n+     * CharSetUtils.keep(*, \"\")          = \"\"\n+     * CharSetUtils.keep(\"hello\", \"hl\") = \"hll\"\n+     * CharSetUtils.keep(\"hello\", \"le\") = \"ell\"\n+     * </pre>\n      *\n+     * @see #evaluateSet(java.lang.String[]) for set-syntax.\n      * @param str  String to keep characters from, may be null\n-     * @param set  String set of characters to keep, must not be null\n+     * @param set  String set of characters to keep, may be null\n      * @return modified String, <code>null</code> if null string input\n-     * @throws NullPointerException if <code>set</code> is <code>null</code>\n      */\n     public static String keep(String str, String set) {\n         if (str == null) {\n             return null;\n         }\n+        if (str.length() == 0 || set == null || set.length() == 0) {\n+            return \"\";\n+        }\n         String[] strs = new String[1];\n         strs[0] = set;\n         return keep(str, strs);\n@@ -246,36 +296,43 @@ public static String keep(String str, String set) {\n      *   returns &quot;hll&quot;</li>\n      * </ul>\n      *\n+     * @see #evaluateSet(java.lang.String[]) for set-syntax.\n      * @param str  String to keep characters from, may be null\n-     * @param set  String[] set of characters to keep, must not be null\n+     * @param set  String[] set of characters to keep, may be null\n      * @return modified String, <code>null</code> if null string input\n-     * @throws NullPointerException if <code>set</code> is <code>null</code>\n-     *  or any element is <code>null</code>\n      */\n     public static String keep(String str, String[] set) {\n         if (str == null) {\n             return null;\n         }\n+        if (str.length() == 0 || set == null || set.length == 0) {\n+            return \"\";\n+        }\n         return modify(str, set, true);\n     }\n \n+    //-----------------------------------------------------------------------\n     /**\n      * <p>Takes an argument in set-syntax, see evaluateSet,\n      * and deletes any of characters present in the specified string.</p>\n      *\n-     * <p>An example would be:</p>\n-     * <ul>\n-     *   <li>delete(&quot;hello&quot;, {&quot;c-fo&quot;}) returns &quot;hll&quot;</li>\n-     * </ul>\n+     * <pre>\n+     * CharSetUtils.delete(null, *)        = null\n+     * CharSetUtils.delete(\"\", *)          = \"\"\n+     * CharSetUtils.delete(*, null)        = *\n+     * CharSetUtils.delete(*, \"\")          = *\n+     * CharSetUtils.delete(\"hello\", \"hl\") = \"hll\"\n+     * CharSetUtils.delete(\"hello\", \"le\") = \"ell\"\n+     * </pre>\n      *\n+     * @see #evaluateSet(java.lang.String[]) for set-syntax.\n      * @param str  String to delete characters from, may be null\n-     * @param set  String set of characters to delete, must not be null\n+     * @param set  String set of characters to delete, may be null\n      * @return modified String, <code>null</code> if null string input\n-     * @throws NullPointerException if <code>set</code> is <code>null</code>\n      */\n     public static String delete(String str, String set) {\n-        if (str == null) {\n-            return null;\n+        if (str == null || str.length() == 0 || set == null || set.length() == 0) {\n+            return str;\n         }\n         String[] strs = new String[1];\n         strs[0] = set;\n@@ -292,19 +349,19 @@ public static String delete(String str, String set) {\n      *   &quot;hll&quot;</li>\n      * </ul>\n      *\n+     * @see #evaluateSet(java.lang.String[]) for set-syntax.\n      * @param str  String to delete characters from, may be null\n-     * @param set  String[] set of characters to delete, must not be null\n+     * @param set  String[] set of characters to delete, may be null\n      * @return modified String, <code>null</code> if null string input\n-     * @throws NullPointerException if <code>set</code> is <code>null</code>\n-     *  or any element is <code>null</code>\n      */\n     public static String delete(String str, String[] set) {\n-        if (str == null) {\n-            return null;\n+        if (str == null || str.length() == 0 || set == null || set.length == 0) {\n+            return str;\n         }\n         return modify(str, set, false);\n     }\n \n+    //-----------------------------------------------------------------------\n     // Implementation of delete and keep\n     private static String modify(String str, String[] set, boolean expect) {\n         CharSet chars = evaluateSet(set);\n@@ -319,6 +376,7 @@ private static String modify(String str, String[] set, boolean expect) {\n         return buffer.toString();\n     }\n \n+    //-----------------------------------------------------------------------\n     /**\n      * <p>Translate characters in a String.\n      * This is a multi character search and replace routine.</p>", "filename": "src/java/org/apache/commons/lang/CharSetUtils.java"}, {"additions": 139, "raw_url": "https://github.com/apache/commons-lang/raw/4926914ecbaec6a092f2398af3f5e8468f5f53b5/src/test/org/apache/commons/lang/CharSetUtilsTest.java", "blob_url": "https://github.com/apache/commons-lang/blob/4926914ecbaec6a092f2398af3f5e8468f5f53b5/src/test/org/apache/commons/lang/CharSetUtilsTest.java", "sha": "c7d5de5ad0678b3ec725ec68b0e738b6abbd3f01", "changes": 190, "status": "modified", "deletions": 51, "contents_url": "https://api.github.com/repos/apache/commons-lang/contents/src/test/org/apache/commons/lang/CharSetUtilsTest.java?ref=4926914ecbaec6a092f2398af3f5e8468f5f53b5", "patch": "@@ -67,7 +67,7 @@\n  * @author <a href=\"mailto:bayard@generationjava.com\">Henri Yandell</a>\n  * @author <a href=\"mailto:ridesmet@users.sourceforge.net\">Ringo De Smet</a>\n  * @author Stephen Colebourne\n- * @version $Id: CharSetUtilsTest.java,v 1.10 2003/07/30 22:21:39 scolebourne Exp $\n+ * @version $Id: CharSetUtilsTest.java,v 1.11 2003/07/31 21:32:47 scolebourne Exp $\n  */\n public class CharSetUtilsTest extends TestCase {\n     \n@@ -104,89 +104,177 @@ public void testConstructor() {\n     }\n     \n     //-----------------------------------------------------------------------\n-    public void testSqueeze() {\n-        assertEquals(null, CharSetUtils.squeeze(null, (String[]) null));\n+    public void testEvaluateSet_String() {\n+        assertEquals(null, CharSetUtils.evaluateSet((String) null));\n+        assertEquals(\"[]\", CharSetUtils.evaluateSet(\"\").toString());\n+        assertEquals(\"[a-e]\", CharSetUtils.evaluateSet(\"a-e\").toString());\n+    }\n+    \n+    public void testEvaluateSet_Stringarray() {\n+        assertEquals(null, CharSetUtils.evaluateSet((String[]) null));\n+        assertEquals(\"[]\", CharSetUtils.evaluateSet(new String[0]).toString());\n+        assertEquals(\"[]\", CharSetUtils.evaluateSet(new String[] {null}).toString());\n+        assertEquals(\"[a-e]\", CharSetUtils.evaluateSet(new String[] {\"a-e\"}).toString());\n+    }\n+    \n+    //-----------------------------------------------------------------------\n+    public void testSqueeze_StringString() {\n         assertEquals(null, CharSetUtils.squeeze(null, (String) null));\n-        assertEquals(null, CharSetUtils.squeeze(null, new String[] { \"el\" }));\n-        assertEquals(\"helo\", CharSetUtils.squeeze(\"hello\", new String[] { \"el\" }));\n+        assertEquals(null, CharSetUtils.squeeze(null, \"\"));\n+        \n+        assertEquals(\"\", CharSetUtils.squeeze(\"\", (String) null));\n+        assertEquals(\"\", CharSetUtils.squeeze(\"\", \"\"));\n+        assertEquals(\"\", CharSetUtils.squeeze(\"\", \"a-e\"));\n+        \n+        assertEquals(\"hello\", CharSetUtils.squeeze(\"hello\", (String) null));\n         assertEquals(\"hello\", CharSetUtils.squeeze(\"hello\", \"\"));\n-        assertEquals(\"\", CharSetUtils.squeeze(\"\", new String[] { \"el\" }));\n+        assertEquals(\"hello\", CharSetUtils.squeeze(\"hello\", \"a-e\"));\n+        assertEquals(\"helo\", CharSetUtils.squeeze(\"hello\", \"l-p\"));\n+    }\n+    \n+    public void testSqueeze_StringStringarray() {\n+        assertEquals(null, CharSetUtils.squeeze(null, (String[]) null));\n+        assertEquals(null, CharSetUtils.squeeze(null, new String[0]));\n+        assertEquals(null, CharSetUtils.squeeze(null, new String[] {null}));\n+        assertEquals(null, CharSetUtils.squeeze(null, new String[] {\"el\"}));\n+        \n+        assertEquals(\"\", CharSetUtils.squeeze(\"\", (String[]) null));\n+        assertEquals(\"\", CharSetUtils.squeeze(\"\", new String[0]));\n+        assertEquals(\"\", CharSetUtils.squeeze(\"\", new String[] {null}));\n+        assertEquals(\"\", CharSetUtils.squeeze(\"\", new String[] {\"a-e\"}));\n+        \n+        assertEquals(\"hello\", CharSetUtils.squeeze(\"hello\", (String[]) null));\n+        assertEquals(\"hello\", CharSetUtils.squeeze(\"hello\", new String[0]));\n+        assertEquals(\"hello\", CharSetUtils.squeeze(\"hello\", new String[] {null}));\n+        assertEquals(\"hello\", CharSetUtils.squeeze(\"hello\", new String[] {\"a-e\"}));\n+        \n+        assertEquals(\"helo\", CharSetUtils.squeeze(\"hello\", new String[] { \"el\" }));\n         assertEquals(\"hello\", CharSetUtils.squeeze(\"hello\", new String[] { \"e\" }));\n         assertEquals(\"fofof\", CharSetUtils.squeeze(\"fooffooff\", new String[] { \"of\" }));\n         assertEquals(\"fof\", CharSetUtils.squeeze(\"fooooff\", new String[] { \"fo\" }));\n-        try {\n-            CharSetUtils.squeeze(\"hello\", (String[]) null);\n-            fail(\"Expecting NullPointerException\");\n-        } catch (NullPointerException ex) {}\n-        try {\n-            CharSetUtils.squeeze(\"hello\", new String[] { \"\", null });\n-            fail(\"Expecting NullPointerException\");\n-        } catch (NullPointerException ex) {}\n     }\n \n-    public void testCount() {\n-        assertEquals(0, CharSetUtils.count(null, (String[]) null));\n+    //-----------------------------------------------------------------------\n+    public void testCount_StringString() {\n         assertEquals(0, CharSetUtils.count(null, (String) null));\n-        assertEquals(0, CharSetUtils.count(null, new String[] { \"el\" }));\n+        assertEquals(0, CharSetUtils.count(null, \"\"));\n+        \n+        assertEquals(0, CharSetUtils.count(\"\", (String) null));\n+        assertEquals(0, CharSetUtils.count(\"\", \"\"));\n+        assertEquals(0, CharSetUtils.count(\"\", \"a-e\"));\n+        \n+        assertEquals(0, CharSetUtils.count(\"hello\", (String) null));\n+        assertEquals(0, CharSetUtils.count(\"hello\", \"\"));\n+        assertEquals(1, CharSetUtils.count(\"hello\", \"a-e\"));\n+        assertEquals(3, CharSetUtils.count(\"hello\", \"l-p\"));\n+    }\n+    \n+    public void testCount_StringStringarray() {\n+        assertEquals(0, CharSetUtils.count(null, (String[]) null));\n+        assertEquals(0, CharSetUtils.count(null, new String[0]));\n+        assertEquals(0, CharSetUtils.count(null, new String[] {null}));\n+        assertEquals(0, CharSetUtils.count(null, new String[] {\"a-e\"}));\n+        \n+        assertEquals(0, CharSetUtils.count(\"\", (String[]) null));\n+        assertEquals(0, CharSetUtils.count(\"\", new String[0]));\n+        assertEquals(0, CharSetUtils.count(\"\", new String[] {null}));\n+        assertEquals(0, CharSetUtils.count(\"\", new String[] {\"a-e\"}));\n+        \n+        assertEquals(0, CharSetUtils.count(\"hello\", (String[]) null));\n+        assertEquals(0, CharSetUtils.count(\"hello\", new String[0]));\n+        assertEquals(0, CharSetUtils.count(\"hello\", new String[] {null}));\n+        assertEquals(1, CharSetUtils.count(\"hello\", new String[] {\"a-e\"}));\n+        \n         assertEquals(3, CharSetUtils.count(\"hello\", new String[] { \"el\" }));\n-        assertEquals(0, CharSetUtils.count(\"\", new String[] { \"el\" }));\n         assertEquals(0, CharSetUtils.count(\"hello\", new String[] { \"x\" }));\n         assertEquals(2, CharSetUtils.count(\"hello\", new String[] { \"e-i\" }));\n         assertEquals(5, CharSetUtils.count(\"hello\", new String[] { \"a-z\" }));\n         assertEquals(0, CharSetUtils.count(\"hello\", new String[] { \"\" }));\n-        assertEquals(0, CharSetUtils.count(\"hello\", \"\"));\n-        try {\n-            CharSetUtils.count(\"hello\", (String[]) null);\n-            fail(\"Expecting NullPointerException\");\n-        } catch (NullPointerException ex) {}\n-        try {\n-            CharSetUtils.count(\"hello\", new String[] { \"\", null });\n-            fail(\"Expecting NullPointerException\");\n-        } catch (NullPointerException ex) {}\n     }\n \n-    public void testKeep() {\n-        assertEquals(null, CharSetUtils.keep(null, (String[]) null));\n+    //-----------------------------------------------------------------------\n+    public void testKeep_StringString() {\n         assertEquals(null, CharSetUtils.keep(null, (String) null));\n-        assertEquals(null, CharSetUtils.keep(null, new String[] { \"el\" }));\n+        assertEquals(null, CharSetUtils.keep(null, \"\"));\n+        \n+        assertEquals(\"\", CharSetUtils.keep(\"\", (String) null));\n+        assertEquals(\"\", CharSetUtils.keep(\"\", \"\"));\n+        assertEquals(\"\", CharSetUtils.keep(\"\", \"a-e\"));\n+        \n+        assertEquals(\"\", CharSetUtils.keep(\"hello\", (String) null));\n+        assertEquals(\"\", CharSetUtils.keep(\"hello\", \"\"));\n+        assertEquals(\"\", CharSetUtils.keep(\"hello\", \"xyz\"));\n+        assertEquals(\"hello\", CharSetUtils.keep(\"hello\", \"a-z\"));\n+        assertEquals(\"hello\", CharSetUtils.keep(\"hello\", \"oleh\"));\n+        assertEquals(\"ell\", CharSetUtils.keep(\"hello\", \"el\"));\n+    }\n+    \n+    public void testKeep_StringStringarray() {\n+        assertEquals(null, CharSetUtils.keep(null, (String[]) null));\n+        assertEquals(null, CharSetUtils.keep(null, new String[0]));\n+        assertEquals(null, CharSetUtils.keep(null, new String[] {null}));\n+        assertEquals(null, CharSetUtils.keep(null, new String[] {\"a-e\"}));\n+        \n+        assertEquals(\"\", CharSetUtils.keep(\"\", (String[]) null));\n+        assertEquals(\"\", CharSetUtils.keep(\"\", new String[0]));\n+        assertEquals(\"\", CharSetUtils.keep(\"\", new String[] {null}));\n+        assertEquals(\"\", CharSetUtils.keep(\"\", new String[] {\"a-e\"}));\n+        \n+        assertEquals(\"\", CharSetUtils.keep(\"hello\", (String[]) null));\n+        assertEquals(\"\", CharSetUtils.keep(\"hello\", new String[0]));\n+        assertEquals(\"\", CharSetUtils.keep(\"hello\", new String[] {null}));\n+        assertEquals(\"e\", CharSetUtils.keep(\"hello\", new String[] {\"a-e\"}));\n+        \n+        assertEquals(\"e\", CharSetUtils.keep(\"hello\", new String[] { \"a-e\" }));\n         assertEquals(\"ell\", CharSetUtils.keep(\"hello\", new String[] { \"el\" }));\n         assertEquals(\"hello\", CharSetUtils.keep(\"hello\", new String[] { \"elho\" }));\n-        assertEquals(\"\", CharSetUtils.keep(\"hello\", new String[] { \"\" }));\n-        assertEquals(\"\", CharSetUtils.keep(\"hello\", \"\"));\n         assertEquals(\"hello\", CharSetUtils.keep(\"hello\", new String[] { \"a-z\" }));\n         assertEquals(\"----\", CharSetUtils.keep(\"----\", new String[] { \"-\" }));\n         assertEquals(\"ll\", CharSetUtils.keep(\"hello\", new String[] { \"l\" }));\n-        try {\n-            CharSetUtils.keep(\"hello\", (String[]) null);\n-            fail(\"Expecting NullPointerException\");\n-        } catch (NullPointerException ex) {}\n-        try {\n-            CharSetUtils.keep(\"hello\", new String[] { \"\", null});\n-            fail(\"Expecting NullPointerException\");\n-        } catch (NullPointerException ex) {}\n     }\n \n-    public void testDelete() {\n+    //-----------------------------------------------------------------------\n+    public void testDelete_StringString() {\n+        assertEquals(null, CharSetUtils.delete(null, (String) null));\n+        assertEquals(null, CharSetUtils.delete(null, \"\"));\n+        \n+        assertEquals(\"\", CharSetUtils.delete(\"\", (String) null));\n+        assertEquals(\"\", CharSetUtils.delete(\"\", \"\"));\n+        assertEquals(\"\", CharSetUtils.delete(\"\", \"a-e\"));\n+        \n+        assertEquals(\"hello\", CharSetUtils.delete(\"hello\", (String) null));\n+        assertEquals(\"hello\", CharSetUtils.delete(\"hello\", \"\"));\n+        assertEquals(\"hllo\", CharSetUtils.delete(\"hello\", \"a-e\"));\n+        assertEquals(\"he\", CharSetUtils.delete(\"hello\", \"l-p\"));\n+        assertEquals(\"hello\", CharSetUtils.delete(\"hello\", \"z\"));\n+    }\n+    \n+    public void testDelete_StringStringarray() {\n         assertEquals(null, CharSetUtils.delete(null, (String[]) null));\n-        assertEquals(null, CharSetUtils.delete(null,(String) null));\n-        assertEquals(null, CharSetUtils.delete(null, new String[] { \"el\" }));\n+        assertEquals(null, CharSetUtils.delete(null, new String[0]));\n+        assertEquals(null, CharSetUtils.delete(null, new String[] {null}));\n+        assertEquals(null, CharSetUtils.delete(null, new String[] {\"el\"}));\n+        \n+        assertEquals(\"\", CharSetUtils.delete(\"\", (String[]) null));\n+        assertEquals(\"\", CharSetUtils.delete(\"\", new String[0]));\n+        assertEquals(\"\", CharSetUtils.delete(\"\", new String[] {null}));\n+        assertEquals(\"\", CharSetUtils.delete(\"\", new String[] {\"a-e\"}));\n+        \n+        assertEquals(\"hello\", CharSetUtils.delete(\"hello\", (String[]) null));\n+        assertEquals(\"hello\", CharSetUtils.delete(\"hello\", new String[0]));\n+        assertEquals(\"hello\", CharSetUtils.delete(\"hello\", new String[] {null}));\n+        assertEquals(\"hello\", CharSetUtils.delete(\"hello\", new String[] {\"xyz\"}));\n+\n         assertEquals(\"ho\", CharSetUtils.delete(\"hello\", new String[] { \"el\" }));\n         assertEquals(\"\", CharSetUtils.delete(\"hello\", new String[] { \"elho\" }));\n         assertEquals(\"hello\", CharSetUtils.delete(\"hello\", new String[] { \"\" }));\n         assertEquals(\"hello\", CharSetUtils.delete(\"hello\", \"\"));\n         assertEquals(\"\", CharSetUtils.delete(\"hello\", new String[] { \"a-z\" }));\n         assertEquals(\"\", CharSetUtils.delete(\"----\", new String[] { \"-\" }));\n         assertEquals(\"heo\", CharSetUtils.delete(\"hello\", new String[] { \"l\" }));\n-        try {\n-            CharSetUtils.delete(\"hello\", (String[]) null);\n-            fail(\"Expecting NullPointerException\");\n-        } catch (NullPointerException ex) {}\n-        try {\n-            CharSetUtils.delete(\"hello\",  new String[] { \"-\", null });\n-            fail(\"Expecting NullPointerException\");\n-        } catch (NullPointerException ex) {}\n     }\n     \n+    //-----------------------------------------------------------------------\n     public void testTranslate() {\n         assertEquals(null, CharSetUtils.translate(null, null, null));\n         assertEquals(\"\", CharSetUtils.translate(\"\",\"a\", \"b\"));", "filename": "src/test/org/apache/commons/lang/CharSetUtilsTest.java"}], "repo": "commons-lang"}, {"commit": "https://github.com/apache/commons-lang/commit/d68d21856dd624d79632f32ef45588da72b3ae85", "parent": "https://github.com/apache/commons-lang/commit/34cca2038ab95a3c43e3d385ea3f83eddcb9e87d", "message": "Update to protect against NPEs\nTidy up Java version code\nAdd Java version int to supplement float\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/lang/trunk@137336 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "commons-lang_15", "file": [{"additions": 145, "raw_url": "https://github.com/apache/commons-lang/raw/d68d21856dd624d79632f32ef45588da72b3ae85/src/java/org/apache/commons/lang/SystemUtils.java", "blob_url": "https://github.com/apache/commons-lang/blob/d68d21856dd624d79632f32ef45588da72b3ae85/src/java/org/apache/commons/lang/SystemUtils.java", "sha": "7974cbae098030cbe4a44306aa130eba7ae1442f", "changes": 194, "status": "modified", "deletions": 49, "contents_url": "https://api.github.com/repos/apache/commons-lang/contents/src/java/org/apache/commons/lang/SystemUtils.java?ref=d68d21856dd624d79632f32ef45588da72b3ae85", "patch": "@@ -66,7 +66,7 @@\n  * @author <a href=\"mailto:ggregory@seagullsw.com\">Gary Gregory</a>\n  * @author Michael Becke\n  * @since 1.0\n- * @version $Id: SystemUtils.java,v 1.10 2003/05/22 21:51:26 scolebourne Exp $\n+ * @version $Id: SystemUtils.java,v 1.11 2003/05/24 12:06:37 scolebourne Exp $\n  */\n public class SystemUtils {\n     \n@@ -81,6 +81,7 @@\n     public SystemUtils() {\n     }\n \n+    //-----------------------------------------------------------------------\n     /**\n      * The <code>file.separator</code> System Property.\n      * File separator (\"/\" on UNIX).\n@@ -90,7 +91,6 @@ public SystemUtils() {\n      * security access to read this property.\n      */\n     public static final String FILE_SEPARATOR = getSystemProperty(\"file.separator\");\n-    \n \n     /**\n      * The <code>java.class.path</code> System Property.\n@@ -101,7 +101,6 @@ public SystemUtils() {\n      * security access to read this property.\n      */\n     public static final String JAVA_CLASS_PATH = getSystemProperty(\"java.class.path\");\n-    \n \n     /**\n      * The <code>java.class.version</code> System Property.\n@@ -112,7 +111,6 @@ public SystemUtils() {\n      * security access to read this property.\n      */\n     public static final String JAVA_CLASS_VERSION = getSystemProperty(\"java.class.version\");\n-    \n \n     /**\n      * The <code>java.compiler</code> System Property.\n@@ -123,7 +121,6 @@ public SystemUtils() {\n      * security access to read this property.\n      */\n     public static final String JAVA_COMPILER = getSystemProperty(\"java.compiler\");\n-    \n \n     /**\n      * The <code>java.ext.dirs</code> System Property.\n@@ -134,7 +131,6 @@ public SystemUtils() {\n      * security access to read this property.\n      */\n     public static final String JAVA_EXT_DIRS = getSystemProperty(\"java.ext.dirs\");\n-    \n \n     /**\n      * The <code>java.home</code> System Property.\n@@ -145,7 +141,6 @@ public SystemUtils() {\n      * security access to read this property.\n      */\n     public static final String JAVA_HOME = getSystemProperty(\"java.home\");\n-    \n \n     /**\n      * The <code>java.io.tmpdir</code> System Property.\n@@ -156,7 +151,6 @@ public SystemUtils() {\n      * security access to read this property.\n      */\n     public static final String JAVA_IO_TMPDIR = getSystemProperty(\"java.io.tmpdir\");\n-    \n \n     /**\n      * The <code>java.library.path</code> System Property.\n@@ -167,7 +161,6 @@ public SystemUtils() {\n      * security access to read this property.\n      */\n     public static final String JAVA_LIBRARY_PATH = getSystemProperty(\"java.library.path\");\n-    \n \n     /**\n      * The <code>java.specification.name</code> System Property.\n@@ -178,7 +171,6 @@ public SystemUtils() {\n      * security access to read this property.\n      */\n     public static final String JAVA_SPECIFICATION_NAME = getSystemProperty(\"java.specification.name\");\n-    \n \n     /**\n      * The <code>java.specification.vendor</code> System Property.\n@@ -189,7 +181,6 @@ public SystemUtils() {\n      * security access to read this property.\n      */\n     public static final String JAVA_SPECIFICATION_VENDOR = getSystemProperty(\"java.specification.vendor\");\n-    \n \n     /**\n      * The <code>java.specification.version</code> System Property.\n@@ -200,7 +191,6 @@ public SystemUtils() {\n      * security access to read this property.\n      */\n     public static final String JAVA_SPECIFICATION_VERSION = getSystemProperty(\"java.specification.version\");\n-    \n \n     /**\n      * The <code>java.vendor</code> System Property.\n@@ -211,7 +201,6 @@ public SystemUtils() {\n      * security access to read this property.\n      */\n     public static final String JAVA_VENDOR = getSystemProperty(\"java.vendor\");\n-    \n \n     /**\n      * The <code>java.vendor.url</code> System Property.\n@@ -222,7 +211,6 @@ public SystemUtils() {\n      * security access to read this property.\n      */\n     public static final String JAVA_VENDOR_URL = getSystemProperty(\"java.vendor.url\");\n-    \n \n     /**\n      * The <code>java.version</code> System Property.\n@@ -233,7 +221,6 @@ public SystemUtils() {\n      * security access to read this property.\n      */\n     public static final String JAVA_VERSION = getSystemProperty(\"java.version\");\n-    \n \n     /**\n      * The <code>java.vm.name</code> System Property.\n@@ -244,7 +231,6 @@ public SystemUtils() {\n      * security access to read this property.\n      */\n     public static final String JAVA_VM_NAME = getSystemProperty(\"java.vm.name\");\n-    \n \n     /**\n      * The <code>java.vm.specification.name</code> System Property.\n@@ -255,7 +241,6 @@ public SystemUtils() {\n      * security access to read this property.\n      */\n     public static final String JAVA_VM_SPECIFICATION_NAME = getSystemProperty(\"java.vm.specification.name\");\n-    \n \n     /**\n      * The <code>java.vm.specification.vendor</code> System Property.\n@@ -266,7 +251,6 @@ public SystemUtils() {\n      * security access to read this property.\n      */\n     public static final String JAVA_VM_SPECIFICATION_VENDOR = getSystemProperty(\"java.vm.specification.vendor\");\n-    \n \n     /**\n      * The <code>java.vm.specification.version</code> System Property.\n@@ -277,7 +261,6 @@ public SystemUtils() {\n      * security access to read this property.\n      */\n     public static final String JAVA_VM_SPECIFICATION_VERSION = getSystemProperty(\"java.vm.specification.version\");\n-    \n \n     /**\n      * The <code>java.vm.vendor</code> System Property.\n@@ -288,7 +271,6 @@ public SystemUtils() {\n      * security access to read this property.\n      */\n     public static final String JAVA_VM_VENDOR = getSystemProperty(\"java.vm.vendor\");\n-    \n \n     /**\n      * The <code>java.vm.version</code> System Property.\n@@ -299,7 +281,6 @@ public SystemUtils() {\n      * security access to read this property.\n      */\n     public static final String JAVA_VM_VERSION = getSystemProperty(\"java.vm.version\");\n-    \n \n     /**\n      * The <code>line.separator</code> System Property.\n@@ -310,7 +291,6 @@ public SystemUtils() {\n      * security access to read this property.\n      */\n     public static final String LINE_SEPARATOR = getSystemProperty(\"line.separator\");\n-    \n \n     /**\n      * The <code>os.arch</code> System Property.\n@@ -321,7 +301,6 @@ public SystemUtils() {\n      * security access to read this property.\n      */\n     public static final String OS_ARCH = getSystemProperty(\"os.arch\");\n-    \n \n     /**\n      * The <code>os.name</code> System Property.\n@@ -332,7 +311,6 @@ public SystemUtils() {\n      * security access to read this property.\n      */\n     public static final String OS_NAME = getSystemProperty(\"os.name\");\n-    \n \n     /**\n      * The <code>os.version</code> System Property.\n@@ -343,7 +321,6 @@ public SystemUtils() {\n      * security access to read this property.\n      */\n     public static final String OS_VERSION = getSystemProperty(\"os.version\");\n-    \n \n     /**\n      * The <code>path.separator</code> System Property.\n@@ -354,7 +331,6 @@ public SystemUtils() {\n      * security access to read this property.\n      */\n     public static final String PATH_SEPARATOR = getSystemProperty(\"path.separator\");\n-    \n \n     /**\n      * The <code>user.dir</code> System Property.\n@@ -365,7 +341,6 @@ public SystemUtils() {\n      * security access to read this property.\n      */\n     public static final String USER_DIR = getSystemProperty(\"user.dir\");\n-    \n \n     /**\n      * The <code>user.home</code> System Property.\n@@ -376,7 +351,6 @@ public SystemUtils() {\n      * security access to read this property.\n      */\n     public static final String USER_HOME = getSystemProperty(\"user.home\");\n-    \n \n     /**\n      * The <code>user.name</code> System Property.\n@@ -387,34 +361,69 @@ public SystemUtils() {\n      * security access to read this property.\n      */\n     public static final String USER_NAME = getSystemProperty(\"user.name\");\n-    \n-    \n-    /** \n+\n+    //-----------------------------------------------------------------------\n+    /**\n      * Is <code>true</code> if this is Java version 1.1 (also 1.1.x versions).\n+     * <p>\n+     * The field will return false if <code>JAVA_VERSION</code> is <code>null</code>.\n      */\n-    public static final boolean IS_JAVA_1_1 = JAVA_VERSION.startsWith(\"1.1.\");\n+    public static final boolean IS_JAVA_1_1 = getJavaVersionMatches(\"1.1\");\n \n-    /** \n+    /**\n      * Is <code>true</code> if this is Java version 1.2 (also 1.2.x versions).\n+     * <p>\n+     * The field will return false if <code>JAVA_VERSION</code> is <code>null</code>.\n      */\n-    public static final boolean IS_JAVA_1_2 = JAVA_VERSION.startsWith(\"1.2.\");\n+    public static final boolean IS_JAVA_1_2 = getJavaVersionMatches(\"1.2\");\n \n-    /** \n+    /**\n      * Is <code>true</code> if this is Java version 1.3 (also 1.3.x versions).\n+     * <p>\n+     * The field will return false if <code>JAVA_VERSION</code> is <code>null</code>.\n      */\n-    public static final boolean IS_JAVA_1_3 = JAVA_VERSION.startsWith(\"1.3.\");\n+    public static final boolean IS_JAVA_1_3 = getJavaVersionMatches(\"1.3\");\n \n-    /** \n+    /**\n      * Is <code>true</code> if this is Java version 1.4 (also 1.4.x versions).\n+     * <p>\n+     * The field will return false if <code>JAVA_VERSION</code> is <code>null</code>.\n      */\n-    public static final boolean IS_JAVA_1_4 = JAVA_VERSION.startsWith(\"1.4.\");\n+    public static final boolean IS_JAVA_1_4 = getJavaVersionMatches(\"1.4\");\n \n-    /** \n+    /**\n      * Is <code>true</code> if this is Java version 1.5 (also 1.5.x versions).\n+     * <p>\n+     * The field will return false if <code>JAVA_VERSION</code> is <code>null</code>.\n      */\n-    public static final boolean IS_JAVA_1_5 = JAVA_VERSION.startsWith(\"1.5.\");\n+    public static final boolean IS_JAVA_1_5 = getJavaVersionMatches(\"1.5\");\n \n+    //-----------------------------------------------------------------------\n+    /**\n+     * Gets the Java version as a <code>float</code>.\n+     * Example output:\n+     * <ul>\n+     *  <li><code>1.2f</code> for JDK 1.2\n+     *  <li><code>1.31f</code> for JDK 1.3.1\n+     * </ul>\n+     * <p>\n+     * The field will return zero if <code>JAVA_VERSION</code> is <code>null</code>.\n+     */\n+    public static final float JAVA_VERSION_FLOAT = getJavaVersionAsFloat();\n \n+    /**\n+     * Gets the Java version as an <code>int</code>.\n+     * Example output:\n+     * <ul>\n+     *  <li><code>120</code> for JDK 1.2\n+     *  <li><code>131</code> for JDK 1.3.1\n+     * </ul>\n+     * <p>\n+     * The field will return zero if <code>JAVA_VERSION</code> is <code>null</code>.\n+     */\n+    public static final int JAVA_VERSION_INT = getJavaVersionAsInt();\n+\n+    //-----------------------------------------------------------------------\n     /**\n      * Gets a System property, defaulting to the given value if the property \n      * cannot be read.\n@@ -428,10 +437,81 @@ private static String getSystemProperty(String property) {\n             \n         } catch (SecurityException ex) {\n             // we are not allowed to look at this property\n+            System.err.println(\n+                \"SecurityException thrown when reading system property '\" + property \n+                + \"' - property value will default to null\"\n+            );\n             return null;\n         }\n     }    \n \n+    /**\n+     * Decides if the java version matches.\n+     * \n+     * @param versionPrefix  the prefix for the java version\n+     * @return true if matches, or false if not or can't determine\n+     */\n+    private static boolean getJavaVersionMatches(String versionPrefix) {\n+        if (JAVA_VERSION == null) {\n+            return false;\n+        }\n+        return JAVA_VERSION.startsWith(versionPrefix);\n+    }    \n+\n+    /**\n+     * <p>Get the Java version number as a <code>float</code>.</p>\n+     *\n+     * <p>Example output:</p>\n+     * <ul>\n+     *  <li><code>1.2f</code> for JDK 1.2\n+     *  <li><code>1.31f</code> for JDK 1.3.1\n+     * </ul>\n+     * \n+     * <p>Patch releases are not reported.\n+     * Zero is returned if JAVA_VERSION is <code>null</code>.</p>\n+     * \n+     * @return the version, for example 1.31f for JDK 1.3.1\n+     */\n+    private static float getJavaVersionAsFloat() {\n+        if (JAVA_VERSION == null) {\n+            return 0f;\n+        }\n+        String str = JAVA_VERSION.substring(0, 3);\n+        if (JAVA_VERSION.length() >= 5) {\n+            str = str + JAVA_VERSION.substring(4, 5);\n+        }\n+        return Float.parseFloat(str);\n+    }\n+    \n+    /**\n+     * <p>Get the Java version number as an <code>int</code>.</p>\n+     *\n+     * <p>Example output:</p>\n+     * <ul>\n+     *  <li><code>120</code> for JDK 1.2\n+     *  <li><code>131</code> for JDK 1.3.1\n+     * </ul>\n+     * \n+     * <p>Patch releases are not reported.\n+     * Zero is returned if JAVA_VERSION is <code>null</code>.</p>\n+     * \n+     * @return the version, for example 131 for JDK 1.3.1\n+     */\n+    private static int getJavaVersionAsInt() {\n+        if (JAVA_VERSION == null) {\n+            return 0;\n+        }\n+        String str = JAVA_VERSION.substring(0, 1);\n+        str = str + JAVA_VERSION.substring(2, 3);\n+        if (JAVA_VERSION.length() >= 5) {\n+            str = str + JAVA_VERSION.substring(4, 5);\n+        } else {\n+            str = str + \"0\";\n+        }\n+        return Integer.parseInt(str);\n+    }\n+    \n+    //-----------------------------------------------------------------------    \n     // Parsing operating system may stay here, or it may be moved somewhere else entirely\n //    /** True iff this is running on Windows */\n //    public static final boolean IS_WINDOWS;\n@@ -531,6 +611,7 @@ private static String getSystemProperty(String property) {\n //        }\n //    }\n \n+    //-----------------------------------------------------------------------\n     /**\n      * <p>Get the Java version number as a <code>float</code>.</p>\n      *\n@@ -540,31 +621,46 @@ private static String getSystemProperty(String property) {\n      *  <li><code>1.31f</code> for JDK 1.3.1\n      * </ul>\n      * \n+     * @deprecated Use JAVA_VERSION_FLOAT instead.\n+     *             Will be removed in Commons Lang 3.0.\n      * @return the version, for example 1.31f for JDK 1.3.1\n      */\n     public static float getJavaVersion() {\n-        String str = JAVA_VERSION.substring(0, 3);\n-        if (JAVA_VERSION.length() >= 5) {\n-            str = str + JAVA_VERSION.substring(4, 5);\n-        }\n-        return Float.parseFloat(str);\n+        return JAVA_VERSION_FLOAT;\n     }\n     \n     /**\n-     * <p>Is the Java version at the the requested version.</p>\n+     * <p>Is the Java version at least the requested version.</p>\n      *\n      * <p>Example input:</p>\n      * <ul>\n-     *  <li><code>1.2f</code> for JDK 1.2\n-     *  <li><code>1.31f</code> for JDK 1.3.1\n+     *  <li><code>1.2f</code> to test for JDK 1.2\n+     *  <li><code>1.31f</code> to test for JDK 1.3.1\n      * </ul>\n      * \n      * @param requiredVersion  the required version, for example 1.31f\n      * @return <code>true</code> if the actual version is equal or greater\n      *  than the required version\n      */\n     public static boolean isJavaVersionAtLeast(float requiredVersion) {\n-        return (getJavaVersion() >= requiredVersion);\n+        return (JAVA_VERSION_FLOAT >= requiredVersion);\n+    }\n+    \n+    /**\n+     * <p>Is the Java version at least the requested version.</p>\n+     *\n+     * <p>Example input:</p>\n+     * <ul>\n+     *  <li><code>120</code> to test for JDK 1.2 or greater\n+     *  <li><code>131</code> to test for JDK 1.3.1 or greater\n+     * </ul>\n+     * \n+     * @param requiredVersion  the required version, for example 131\n+     * @return <code>true</code> if the actual version is equal or greater\n+     *  than the required version\n+     */\n+    public static boolean isJavaVersionAtLeast(int requiredVersion) {\n+        return (JAVA_VERSION_INT >= requiredVersion);\n     }\n     \n }", "filename": "src/java/org/apache/commons/lang/SystemUtils.java"}], "repo": "commons-lang"}]
