[
    {
        "repo": "santuario-java",
        "message": "Avoiding some potential NPEs when debug logging is enabled\n\ngit-svn-id: https://svn.apache.org/repos/asf/santuario/xml-security-java/trunk@1825363 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/santuario-java/commit/38f1a5ac134b2ba85a99a8ccade9b078148ab364",
        "parent": "https://github.com/apache/santuario-java/commit/9da1f41077f1c85700f013983e21ab5c67ce66ea",
        "bug_id": "santuario-java_1",
        "file": [
            {
                "sha": "178d4dfcebe06bd2172078b791f4d55d63021795",
                "filename": "src/main/java/org/apache/xml/security/keys/keyresolver/implementations/EncryptedKeyResolver.java",
                "blob_url": "https://github.com/apache/santuario-java/blob/38f1a5ac134b2ba85a99a8ccade9b078148ab364/src/main/java/org/apache/xml/security/keys/keyresolver/implementations/EncryptedKeyResolver.java",
                "raw_url": "https://github.com/apache/santuario-java/raw/38f1a5ac134b2ba85a99a8ccade9b078148ab364/src/main/java/org/apache/xml/security/keys/keyresolver/implementations/EncryptedKeyResolver.java",
                "status": "modified",
                "changes": 4,
                "additions": 2,
                "contents_url": "https://api.github.com/repos/apache/santuario-java/contents/src/main/java/org/apache/xml/security/keys/keyresolver/implementations/EncryptedKeyResolver.java?ref=38f1a5ac134b2ba85a99a8ccade9b078148ab364",
                "patch": "@@ -106,12 +106,12 @@ public X509Certificate engineLookupResolveX509Certificate(\n     public SecretKey engineLookupAndResolveSecretKey(\n         Element element, String baseURI, StorageResolver storage\n     ) {\n-        LOG.debug(\"EncryptedKeyResolver - Can I resolve {}\", element.getTagName());\n-\n         if (element == null) {\n             return null;\n         }\n \n+        LOG.debug(\"EncryptedKeyResolver - Can I resolve {}\", element.getTagName());\n+\n         SecretKey key = null;\n         boolean isEncryptedKey =\n             XMLUtils.elementIsInEncryptionSpace(element, EncryptionConstants._TAG_ENCRYPTEDKEY);",
                "deletions": 2
            },
            {
                "sha": "e99d476c38878c8a7d21984fd396f5dbf50057c7",
                "filename": "src/main/java/org/apache/xml/security/keys/keyresolver/implementations/RSAKeyValueResolver.java",
                "blob_url": "https://github.com/apache/santuario-java/blob/38f1a5ac134b2ba85a99a8ccade9b078148ab364/src/main/java/org/apache/xml/security/keys/keyresolver/implementations/RSAKeyValueResolver.java",
                "raw_url": "https://github.com/apache/santuario-java/raw/38f1a5ac134b2ba85a99a8ccade9b078148ab364/src/main/java/org/apache/xml/security/keys/keyresolver/implementations/RSAKeyValueResolver.java",
                "status": "modified",
                "changes": 3,
                "additions": 2,
                "contents_url": "https://api.github.com/repos/apache/santuario-java/contents/src/main/java/org/apache/xml/security/keys/keyresolver/implementations/RSAKeyValueResolver.java?ref=38f1a5ac134b2ba85a99a8ccade9b078148ab364",
                "patch": "@@ -40,11 +40,12 @@\n     public PublicKey engineLookupAndResolvePublicKey(\n         Element element, String baseURI, StorageResolver storage\n     ) {\n-        LOG.debug(\"Can I resolve {}\", element.getTagName());\n         if (element == null) {\n             return null;\n         }\n \n+        LOG.debug(\"Can I resolve {}\", element.getTagName());\n+\n         boolean isKeyValue = XMLUtils.elementIsInSignatureSpace(element, Constants._TAG_KEYVALUE);\n         Element rsaKeyElement = null;\n         if (isKeyValue) {",
                "deletions": 1
            }
        ]
    },
    {
        "repo": "santuario-java",
        "message": "Fix NullPointerException bug in engineCanonicalize() if input.getSubNode()\nis null.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/xml/security/trunk@351402 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/santuario-java/commit/d9a96fd2381155d44db349d2396b8c7d68245e32",
        "parent": "https://github.com/apache/santuario-java/commit/8a5d2377062616d4d90f75b4f3c4314753a44c97",
        "bug_id": "santuario-java_2",
        "file": [
            {
                "sha": "97b5f99a11e7506e7920c3a4d0b326c9a8aa2ee8",
                "filename": "src/org/apache/xml/security/c14n/implementations/CanonicalizerBase.java",
                "blob_url": "https://github.com/apache/santuario-java/blob/d9a96fd2381155d44db349d2396b8c7d68245e32/src/org/apache/xml/security/c14n/implementations/CanonicalizerBase.java",
                "raw_url": "https://github.com/apache/santuario-java/raw/d9a96fd2381155d44db349d2396b8c7d68245e32/src/org/apache/xml/security/c14n/implementations/CanonicalizerBase.java",
                "status": "modified",
                "changes": 7,
                "additions": 6,
                "contents_url": "https://api.github.com/repos/apache/santuario-java/contents/src/org/apache/xml/security/c14n/implementations/CanonicalizerBase.java?ref=d9a96fd2381155d44db349d2396b8c7d68245e32",
                "patch": "@@ -140,7 +140,12 @@ public CanonicalizerBase(boolean includeComments) {\n \t\t\t\treturn bytes;\n \t\t\t} else if (input.isNodeSet()) {\n \t\t\t\tnodeFilter=input.getNodeFilters();\n-\t\t\t\tDocument  doc=XMLUtils.getOwnerDocument(input.getSubNode());\n+                                Document doc = null;\n+                                if (input.getSubNode() != null) {\n+                                    doc=XMLUtils.getOwnerDocument(input.getSubNode());\n+                                } else {\n+                                    doc=XMLUtils.getOwnerDocument(input.getNodeSet());\n+                                }\n \t\t\t\tif (input.isNeedsToBeExpanded()) {\n \t\t\t\t\tXMLUtils.circumventBug2650(doc);\n \t\t\t\t}",
                "deletions": 1
            }
        ]
    },
    {
        "repo": "santuario-java",
        "message": "Fix NullPointerException in log message emitted by engineCanResolve.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/xml/security/trunk@351398 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/santuario-java/commit/90888a8fce41b5db4a763aedb965e7f4d018c415",
        "parent": "https://github.com/apache/santuario-java/commit/aae06fe4cbe3477b2a97c9b874c5a5425649cef9",
        "bug_id": "santuario-java_3",
        "file": [
            {
                "sha": "ef57e72e5006fcd4eb2184f6a6990565840eb96b",
                "filename": "src/org/apache/xml/security/utils/resolver/implementations/ResolverDirectHTTP.java",
                "blob_url": "https://github.com/apache/santuario-java/blob/90888a8fce41b5db4a763aedb965e7f4d018c415/src/org/apache/xml/security/utils/resolver/implementations/ResolverDirectHTTP.java",
                "raw_url": "https://github.com/apache/santuario-java/raw/90888a8fce41b5db4a763aedb965e7f4d018c415/src/org/apache/xml/security/utils/resolver/implementations/ResolverDirectHTTP.java",
                "status": "modified",
                "changes": 11,
                "additions": 4,
                "contents_url": "https://api.github.com/repos/apache/santuario-java/contents/src/org/apache/xml/security/utils/resolver/implementations/ResolverDirectHTTP.java?ref=90888a8fce41b5db4a763aedb965e7f4d018c415",
                "patch": "@@ -259,22 +259,19 @@ public boolean engineCanResolve(Attr uri, String BaseURI) {\n          return false;\n       }\n \n-      URI uriNew = null;\n-\n-\t  //URI uriNew = new URI(new URI(BaseURI), uri.getNodeValue());\n       if (log.isDebugEnabled())\n-      \tlog.debug(\"I was asked whether I can resolve \" + uriNodeValue/*uriNew.toString()*/);\n+      \tlog.debug(\"I was asked whether I can resolve \" + uriNodeValue);\n \n       if ( uriNodeValue.startsWith(\"http:\") ||\n-\t\t\t\t BaseURI.startsWith(\"http:\")/*uriNew.getScheme().equals(\"file\")*/) {\n+\t\t\t\t BaseURI.startsWith(\"http:\")) {\n          if (log.isDebugEnabled())\n-         \tlog.debug(\"I state that I can resolve \" + uriNodeValue/*uriNew.toString()*/);\n+         \tlog.debug(\"I state that I can resolve \" + uriNodeValue);\n \n          return true;\n       }\n \n       if (log.isDebugEnabled())\n-      \tlog.debug(\"I state that I can't resolve \" + uriNew.toString());\n+      \tlog.debug(\"I state that I can't resolve \" + uriNodeValue);\n \n       return false;\n    }",
                "deletions": 7
            }
        ]
    },
    {
        "repo": "santuario-java",
        "message": "NPE fix\n\ngit-svn-id: https://svn.apache.org/repos/asf/santuario/xml-security-java/trunk@1757635 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/santuario-java/commit/e8a8f6283c55bb5a7822d1802410e7ae6e414d56",
        "parent": "https://github.com/apache/santuario-java/commit/76fefc4981b4a60d4c72925530e13c744cdf1df3",
        "bug_id": "santuario-java_4",
        "file": [
            {
                "sha": "a0a6e4aa6d00808802a37fa22f547b6e5818f5cb",
                "filename": "src/main/java/org/apache/xml/security/resource/xmlsecurity_en.properties",
                "blob_url": "https://github.com/apache/santuario-java/blob/e8a8f6283c55bb5a7822d1802410e7ae6e414d56/src/main/java/org/apache/xml/security/resource/xmlsecurity_en.properties",
                "raw_url": "https://github.com/apache/santuario-java/raw/e8a8f6283c55bb5a7822d1802410e7ae6e414d56/src/main/java/org/apache/xml/security/resource/xmlsecurity_en.properties",
                "status": "modified",
                "changes": 2,
                "additions": 1,
                "contents_url": "https://api.github.com/repos/apache/santuario-java/contents/src/main/java/org/apache/xml/security/resource/xmlsecurity_en.properties?ref=e8a8f6283c55bb5a7822d1802410e7ae6e414d56",
                "patch": "@@ -85,7 +85,7 @@ java.security.InvalidKeyException = Invalid key\n java.security.NoSuchProviderException = Unknown or unsupported provider\r\n java.security.UnknownKeyType = Unknown or unsupported key type {0}\r\n KeyInfo.error = Error loading Key Info\r\n-KeyInfo.needKeyResolver = More than one keyResovler have to be registered\r\n+KeyInfo.needKeyResolver = More than one keyResolver have to be registered\r\n KeyInfo.nokey = Cannot get key from {0}\r\n KeyInfo.noKey = Cannot get the public key\r\n KeyInfo.wrongNumberOfObject = Need {0} keyObjects\r",
                "deletions": 1
            },
            {
                "sha": "147f20b090f1a9e7da0a5b392154ff71f0b64b4c",
                "filename": "src/main/java/org/apache/xml/security/stax/impl/processor/input/AbstractSignatureInputHandler.java",
                "blob_url": "https://github.com/apache/santuario-java/blob/e8a8f6283c55bb5a7822d1802410e7ae6e414d56/src/main/java/org/apache/xml/security/stax/impl/processor/input/AbstractSignatureInputHandler.java",
                "raw_url": "https://github.com/apache/santuario-java/raw/e8a8f6283c55bb5a7822d1802410e7ae6e414d56/src/main/java/org/apache/xml/security/stax/impl/processor/input/AbstractSignatureInputHandler.java",
                "status": "modified",
                "changes": 8,
                "additions": 7,
                "contents_url": "https://api.github.com/repos/apache/santuario-java/contents/src/main/java/org/apache/xml/security/stax/impl/processor/input/AbstractSignatureInputHandler.java?ref=e8a8f6283c55bb5a7822d1802410e7ae6e414d56",
                "patch": "@@ -290,7 +290,13 @@ protected void createSignatureAlgorithm(InboundSecurityToken inboundSecurityToke\n             } else {\n                 verifyKey = inboundSecurityToken.getSecretKey(\n                         algorithmURI, XMLSecurityConstants.Sym_Sig, signatureType.getId());\n-                verifyKey = XMLSecurityUtils.prepareSecretKey(algorithmURI, verifyKey.getEncoded());\n+                if (verifyKey != null) {\n+                    verifyKey = XMLSecurityUtils.prepareSecretKey(algorithmURI, verifyKey.getEncoded());\n+                }\n+            }\n+\n+            if (verifyKey == null) {\n+                throw new XMLSecurityException(\"KeyInfo.nokey\", new Object[]{\"the inbound security token\"});\n             }\n \n             try {",
                "deletions": 1
            }
        ]
    },
    {
        "repo": "santuario-java",
        "message": "TransformService.init and marshalParams must throw NullPointerException when parent parameter is null\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/santuario/xml-security-java/trunk@1511025 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/santuario-java/commit/2bf7ba8c583bb2ca96f8fb69b9f92173f3e352f5",
        "parent": "https://github.com/apache/santuario-java/commit/aa7ad94857072fc0a38350b5518268352274ac3c",
        "bug_id": "santuario-java_5",
        "file": [
            {
                "sha": "9b752e928b4b062e5967ceda71ea5e7e7eef432c",
                "filename": "src/main/java/org/apache/jcp/xml/dsig/internal/dom/ApacheCanonicalizer.java",
                "blob_url": "https://github.com/apache/santuario-java/blob/2bf7ba8c583bb2ca96f8fb69b9f92173f3e352f5/src/main/java/org/apache/jcp/xml/dsig/internal/dom/ApacheCanonicalizer.java",
                "raw_url": "https://github.com/apache/santuario-java/raw/2bf7ba8c583bb2ca96f8fb69b9f92173f3e352f5/src/main/java/org/apache/jcp/xml/dsig/internal/dom/ApacheCanonicalizer.java",
                "status": "modified",
                "changes": 10,
                "additions": 8,
                "contents_url": "https://api.github.com/repos/apache/santuario-java/contents/src/main/java/org/apache/jcp/xml/dsig/internal/dom/ApacheCanonicalizer.java?ref=2bf7ba8c583bb2ca96f8fb69b9f92173f3e352f5",
                "patch": "@@ -72,7 +72,10 @@ public void init(XMLStructure parent, XMLCryptoContext context)\n             throw new ClassCastException\n                 (\"context must be of type DOMCryptoContext\");\n         }\n-        if (parent == null || !(parent instanceof javax.xml.crypto.dom.DOMStructure)) {\n+        if (parent == null) {\n+            throw new NullPointerException();\n+        }\n+        if (!(parent instanceof javax.xml.crypto.dom.DOMStructure)) {\n             throw new ClassCastException(\"parent must be of type DOMStructure\");\n         }\n         transformElem = (Element)\n@@ -88,7 +91,10 @@ public void marshalParams(XMLStructure parent, XMLCryptoContext context)\n             throw new ClassCastException\n                 (\"context must be of type DOMCryptoContext\");\n         }\n-        if (parent == null || !(parent instanceof javax.xml.crypto.dom.DOMStructure)) {\n+        if (parent == null) {\n+            throw new NullPointerException();\n+        }\n+        if (!(parent instanceof javax.xml.crypto.dom.DOMStructure)) {\n             throw new ClassCastException(\"parent must be of type DOMStructure\");\n         }\n         transformElem = (Element)",
                "deletions": 2
            },
            {
                "sha": "8274f1013ad6f8b5b4c224ebe2c57378cf77b5e1",
                "filename": "src/main/java/org/apache/jcp/xml/dsig/internal/dom/ApacheTransform.java",
                "blob_url": "https://github.com/apache/santuario-java/blob/2bf7ba8c583bb2ca96f8fb69b9f92173f3e352f5/src/main/java/org/apache/jcp/xml/dsig/internal/dom/ApacheTransform.java",
                "raw_url": "https://github.com/apache/santuario-java/raw/2bf7ba8c583bb2ca96f8fb69b9f92173f3e352f5/src/main/java/org/apache/jcp/xml/dsig/internal/dom/ApacheTransform.java",
                "status": "modified",
                "changes": 10,
                "additions": 8,
                "contents_url": "https://api.github.com/repos/apache/santuario-java/contents/src/main/java/org/apache/jcp/xml/dsig/internal/dom/ApacheTransform.java?ref=2bf7ba8c583bb2ca96f8fb69b9f92173f3e352f5",
                "patch": "@@ -74,7 +74,10 @@ public void init(XMLStructure parent, XMLCryptoContext context)\n             throw new ClassCastException\n                 (\"context must be of type DOMCryptoContext\");\n         }\n-        if (parent == null || !(parent instanceof javax.xml.crypto.dom.DOMStructure)) {\n+        if (parent == null) {\n+            throw new NullPointerException();\n+        }\n+        if (!(parent instanceof javax.xml.crypto.dom.DOMStructure)) {\n             throw new ClassCastException(\"parent must be of type DOMStructure\");\n         }\n         transformElem = (Element) \n@@ -90,7 +93,10 @@ public void marshalParams(XMLStructure parent, XMLCryptoContext context)\n             throw new ClassCastException\n                 (\"context must be of type DOMCryptoContext\");\n         }\n-        if (parent == null || !(parent instanceof javax.xml.crypto.dom.DOMStructure)) {\n+        if (parent == null) {\n+            throw new NullPointerException();\n+        }\n+        if (!(parent instanceof javax.xml.crypto.dom.DOMStructure)) {\n             throw new ClassCastException(\"parent must be of type DOMStructure\");\n         }\n         transformElem = (Element) ",
                "deletions": 2
            }
        ]
    },
    {
        "repo": "santuario-java",
        "message": "Fix NullPointerException in engineTransform if XMLSignatureInput is a\nnode-set (instead of an element subtree).\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/xml/security/trunk@351420 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/santuario-java/commit/414266e740c1ddfb49be06ff39509601907b963d",
        "parent": "https://github.com/apache/santuario-java/commit/b01a2ae81711b8d0c6120135c79c6f51b5378205",
        "bug_id": "santuario-java_6",
        "file": [
            {
                "sha": "7ceefdf3bedd66e5ce7c0680402b4d2868fa8c04",
                "filename": "src/org/apache/xml/security/transforms/implementations/TransformXPath2Filter.java",
                "blob_url": "https://github.com/apache/santuario-java/blob/414266e740c1ddfb49be06ff39509601907b963d/src/org/apache/xml/security/transforms/implementations/TransformXPath2Filter.java",
                "raw_url": "https://github.com/apache/santuario-java/raw/414266e740c1ddfb49be06ff39509601907b963d/src/org/apache/xml/security/transforms/implementations/TransformXPath2Filter.java",
                "status": "modified",
                "changes": 18,
                "additions": 15,
                "contents_url": "https://api.github.com/repos/apache/santuario-java/contents/src/org/apache/xml/security/transforms/implementations/TransformXPath2Filter.java?ref=414266e740c1ddfb49be06ff39509601907b963d",
                "patch": "@@ -18,9 +18,11 @@\n \n \n \n+import java.io.IOException;\n import java.util.ArrayList;\n import java.util.List;\n \n+import javax.xml.parsers.ParserConfigurationException;\n import javax.xml.transform.TransformerException;\n \n import org.apache.xml.security.c14n.CanonicalizationException;\n@@ -40,7 +42,7 @@\n import org.w3c.dom.Element;\n import org.w3c.dom.Node;\n import org.w3c.dom.NodeList;\n-\n+import org.xml.sax.SAXException;\n \n /**\n  * Implements the <I>XML Signature XPath Filter v2.0</I>\n@@ -107,8 +109,12 @@ protected XMLSignatureInput enginePerformTransform(XMLSignatureInput input)\n             throw new TransformationException(\"xml.WrongContent\", exArgs);\n          }\n \n-            Document inputDoc = XMLUtils.getOwnerDocument(input.getSubNode());\n-\n+         Document inputDoc = null;\n+\t if (input.getSubNode() != null) {   \n+            inputDoc = XMLUtils.getOwnerDocument(input.getSubNode());\n+\t } else {\n+            inputDoc = XMLUtils.getOwnerDocument(input.getNodeSet());\n+\t }\n \n          for (int i = 0; i < noOfSteps; i++) {\n             Element xpathElement =XMLUtils.selectNode(\n@@ -148,6 +154,12 @@ protected XMLSignatureInput enginePerformTransform(XMLSignatureInput input)\n          throw new TransformationException(\"empty\", ex);\n       } catch (XMLSecurityException ex) {\n          throw new TransformationException(\"empty\", ex);\n+      } catch (SAXException ex) {\n+         throw new TransformationException(\"empty\", ex);\n+      } catch (IOException ex) {\n+         throw new TransformationException(\"empty\", ex);\n+      } catch (ParserConfigurationException ex) {\n+         throw new TransformationException(\"empty\", ex);\n       } \n    }\n }",
                "deletions": 3
            }
        ]
    },
    {
        "repo": "santuario-java",
        "message": "Fix a NullPointerException bug in engineCanonicalize if input is a\nnode Set (instead of a subNode).\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/xml/security/trunk@351403 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/santuario-java/commit/8ddccfc4eaa7645c46ba68e6cb19644f1db1d22d",
        "parent": "https://github.com/apache/santuario-java/commit/d9a96fd2381155d44db349d2396b8c7d68245e32",
        "bug_id": "santuario-java_7",
        "file": [
            {
                "sha": "bc1034a8261391d799febe859740a53bf53a8d5f",
                "filename": "src/org/apache/xml/security/c14n/implementations/CanonicalizerBase.java",
                "blob_url": "https://github.com/apache/santuario-java/blob/8ddccfc4eaa7645c46ba68e6cb19644f1db1d22d/src/org/apache/xml/security/c14n/implementations/CanonicalizerBase.java",
                "raw_url": "https://github.com/apache/santuario-java/raw/8ddccfc4eaa7645c46ba68e6cb19644f1db1d22d/src/org/apache/xml/security/c14n/implementations/CanonicalizerBase.java",
                "status": "modified",
                "changes": 6,
                "additions": 5,
                "contents_url": "https://api.github.com/repos/apache/santuario-java/contents/src/org/apache/xml/security/c14n/implementations/CanonicalizerBase.java?ref=8ddccfc4eaa7645c46ba68e6cb19644f1db1d22d",
                "patch": "@@ -150,7 +150,11 @@ public CanonicalizerBase(boolean includeComments) {\n \t\t\t\t\tXMLUtils.circumventBug2650(doc);\n \t\t\t\t}\n \n-\t\t\t\tbytes = engineCanonicalizeXPathNodeSetInternal(input.getSubNode());\n+\t\t\t\tif (input.getSubNode() != null) {\n+\t\t\t\t    bytes = engineCanonicalizeXPathNodeSetInternal(input.getSubNode());\n+\t\t\t\t} else {\n+\t\t\t\t    bytes = engineCanonicalizeXPathNodeSet(input.getNodeSet());\n+\t\t\t\t}\n \t\t\t\treturn bytes;\n \n \t\t\t}",
                "deletions": 1
            }
        ]
    },
    {
        "repo": "santuario-java",
        "message": "Fix NullPointerException bug in engineResolve; check if BaseURI is null before\nsetting source URI.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/xml/security/trunk@351399 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/santuario-java/commit/0746ca8fac1c32d9540b41e683608a3ee21d9689",
        "parent": "https://github.com/apache/santuario-java/commit/90888a8fce41b5db4a763aedb965e7f4d018c415",
        "bug_id": "santuario-java_8",
        "file": [
            {
                "sha": "b0d2ece7d56bb7f122a227702a7a40b843c68e72",
                "filename": "src/org/apache/xml/security/utils/resolver/implementations/ResolverXPointer.java",
                "blob_url": "https://github.com/apache/santuario-java/blob/0746ca8fac1c32d9540b41e683608a3ee21d9689/src/org/apache/xml/security/utils/resolver/implementations/ResolverXPointer.java",
                "raw_url": "https://github.com/apache/santuario-java/raw/0746ca8fac1c32d9540b41e683608a3ee21d9689/src/org/apache/xml/security/utils/resolver/implementations/ResolverXPointer.java",
                "status": "modified",
                "changes": 4,
                "additions": 4,
                "contents_url": "https://api.github.com/repos/apache/santuario-java/contents/src/org/apache/xml/security/utils/resolver/implementations/ResolverXPointer.java?ref=0746ca8fac1c32d9540b41e683608a3ee21d9689",
                "patch": "@@ -92,7 +92,11 @@ public XMLSignatureInput engineResolve(Attr uri, String BaseURI)\n       XMLSignatureInput result = new XMLSignatureInput(resultNode);\n \n       result.setMIMEType(\"text/xml\");\n+      if (BaseURI != null && BaseURI.length() > 0) {\n \t  result.setSourceURI(BaseURI.concat(uri.getNodeValue()));      \n+      } else {\n+\t  result.setSourceURI(uri.getNodeValue());      \n+      }\n \n       return result;\n    }",
                "deletions": 0
            }
        ]
    },
    {
        "repo": "santuario-java",
        "message": "NPE fix\n\ngit-svn-id: https://svn.apache.org/repos/asf/santuario/xml-security-java/trunk@1683510 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/santuario-java/commit/6c87fb9406703d6fe7f256b9a3c973b34d0a0dd7",
        "parent": "https://github.com/apache/santuario-java/commit/e06f6b15a588a27d84b852407d0541bf4c8a1938",
        "bug_id": "santuario-java_9",
        "file": [
            {
                "sha": "890d62635addcf3db8aa2a71eb3a550987bc2f38",
                "filename": "src/main/java/org/apache/xml/security/encryption/XMLCipher.java",
                "blob_url": "https://github.com/apache/santuario-java/blob/6c87fb9406703d6fe7f256b9a3c973b34d0a0dd7/src/main/java/org/apache/xml/security/encryption/XMLCipher.java",
                "raw_url": "https://github.com/apache/santuario-java/raw/6c87fb9406703d6fe7f256b9a3c973b34d0a0dd7/src/main/java/org/apache/xml/security/encryption/XMLCipher.java",
                "status": "modified",
                "changes": 7,
                "additions": 7,
                "contents_url": "https://api.github.com/repos/apache/santuario-java/contents/src/main/java/org/apache/xml/security/encryption/XMLCipher.java?ref=6c87fb9406703d6fe7f256b9a3c973b34d0a0dd7",
                "patch": "@@ -1142,6 +1142,9 @@ private EncryptedData encryptData(\n         if (serializer instanceof AbstractSerializer) {\n             ((AbstractSerializer)serializer).setSecureValidation(secureValidation);\n         }\n+        if (element != null && element.getParentNode() == null) {\n+            throw new XMLEncryptionException(\"empty\", \"The element can't be serialized as it has no parent\");\n+        }\n \n         byte[] serializedOctets = null;\n         if (serializedData == null) {\n@@ -1697,6 +1700,10 @@ private Document decryptElement(Element element) throws XMLEncryptionException {\n         if (serializer instanceof AbstractSerializer) {\n             ((AbstractSerializer)serializer).setSecureValidation(secureValidation);\n         }\n+        \n+        if (element != null && element.getParentNode() == null) {\n+            throw new XMLEncryptionException(\"empty\", \"The element can't be serialized as it has no parent\");\n+        }\n \n         if (cipherMode != DECRYPT_MODE) {\n             throw new XMLEncryptionException(\"empty\", \"XMLCipher unexpectedly not in DECRYPT_MODE...\");",
                "deletions": 0
            }
        ]
    },
    {
        "repo": "santuario-java",
        "message": "Avoid potential NPE in XMLCipher\n\ngit-svn-id: https://svn.apache.org/repos/asf/santuario/xml-security-java/trunk@1683359 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/santuario-java/commit/a87886d806115ca3ba3350fd5d6c7d08c0decddf",
        "parent": "https://github.com/apache/santuario-java/commit/8812e5fd78b714902e5b58956cdc27dbed5e565b",
        "bug_id": "santuario-java_10",
        "file": [
            {
                "sha": "f8dcaf2b4e036f0dcd04efbd0b26080d362282f9",
                "filename": "src/main/java/org/apache/xml/security/encryption/XMLCipher.java",
                "blob_url": "https://github.com/apache/santuario-java/blob/a87886d806115ca3ba3350fd5d6c7d08c0decddf/src/main/java/org/apache/xml/security/encryption/XMLCipher.java",
                "raw_url": "https://github.com/apache/santuario-java/raw/a87886d806115ca3ba3350fd5d6c7d08c0decddf/src/main/java/org/apache/xml/security/encryption/XMLCipher.java",
                "status": "modified",
                "changes": 6,
                "additions": 5,
                "contents_url": "https://api.github.com/repos/apache/santuario-java/contents/src/main/java/org/apache/xml/security/encryption/XMLCipher.java?ref=a87886d806115ca3ba3350fd5d6c7d08c0decddf",
                "patch": "@@ -3645,8 +3645,12 @@ private static boolean haveFunctionalIdentityTransformer() {\n                     new javax.xml.transform.stream.StreamSource(\n                             new java.io.ByteArrayInputStream(xml.getBytes(\"UTF-8\"))), domResult);\n \n-            final boolean result = \"http://www.w3.org/2000/xmlns/\".equals(\n+            boolean result = false;\n+            if (domResult.getNode().getFirstChild().getFirstChild().hasAttributes()\n+                && domResult.getNode().getFirstChild().getFirstChild().getAttributes().getLength() >= 1) {\n+                result = \"http://www.w3.org/2000/xmlns/\".equals(\n                     domResult.getNode().getFirstChild().getFirstChild().getAttributes().item(1).getNamespaceURI());\n+            }\n             log.debug(\"Have functional IdentityTransformer: \" + result);\n             return result;\n ",
                "deletions": 1
            }
        ]
    },
    {
        "repo": "santuario-java",
        "message": "[SANTUARIO-412] - Fixing potential NPE\n\ngit-svn-id: https://svn.apache.org/repos/asf/santuario/xml-security-java/trunk@1655574 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/santuario-java/commit/692f8e221f2f82e585f57bb7ee7da1723c912f8e",
        "parent": "https://github.com/apache/santuario-java/commit/f1ce19a89cdf86718e9e5c481aa4dc60a881f8d1",
        "bug_id": "santuario-java_11",
        "file": [
            {
                "sha": "de0659a787c82b2fb0c7a728e96c38fc3f58cb7f",
                "filename": "src/main/java/org/apache/xml/security/c14n/implementations/Canonicalizer20010315Excl.java",
                "blob_url": "https://github.com/apache/santuario-java/blob/692f8e221f2f82e585f57bb7ee7da1723c912f8e/src/main/java/org/apache/xml/security/c14n/implementations/Canonicalizer20010315Excl.java",
                "raw_url": "https://github.com/apache/santuario-java/raw/692f8e221f2f82e585f57bb7ee7da1723c912f8e/src/main/java/org/apache/xml/security/c14n/implementations/Canonicalizer20010315Excl.java",
                "status": "modified",
                "changes": 2,
                "additions": 1,
                "contents_url": "https://api.github.com/repos/apache/santuario-java/contents/src/main/java/org/apache/xml/security/c14n/implementations/Canonicalizer20010315Excl.java?ref=692f8e221f2f82e585f57bb7ee7da1723c912f8e",
                "patch": "@@ -181,7 +181,7 @@ public Canonicalizer20010315Excl(boolean includeComments) {\n             int attrsLength = attrs.getLength();\n             for (int i = 0; i < attrsLength; i++) {\n                 Attr attribute = (Attr) attrs.item(i);\n-                String NName = attribute.getLocalName();\n+                String NName = attribute.getLocalName() == null ? \"\" : attribute.getLocalName();\n                 String NNodeValue = attribute.getNodeValue();\n                 \n                 if (!(XMLNS_URI.equals(attribute.getNamespaceURI())",
                "deletions": 1
            }
        ]
    },
    {
        "repo": "santuario-java",
        "message": "Fixing some NPEs + consolidating some code\n\ngit-svn-id: https://svn.apache.org/repos/asf/santuario/xml-security-java/trunk@1611032 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/santuario-java/commit/b52724c47b787c2eaeca00babee638310985f624",
        "parent": "https://github.com/apache/santuario-java/commit/fc8f474cda586c72400d5c9e3d83adc09f478465",
        "bug_id": "santuario-java_12",
        "file": [
            {
                "sha": "505fe51d33780bbce16655804ef8f5259566f151",
                "filename": "src/main/java/org/apache/xml/security/algorithms/implementations/IntegrityHmac.java",
                "blob_url": "https://github.com/apache/santuario-java/blob/b52724c47b787c2eaeca00babee638310985f624/src/main/java/org/apache/xml/security/algorithms/implementations/IntegrityHmac.java",
                "raw_url": "https://github.com/apache/santuario-java/raw/b52724c47b787c2eaeca00babee638310985f624/src/main/java/org/apache/xml/security/algorithms/implementations/IntegrityHmac.java",
                "status": "modified",
                "changes": 30,
                "additions": 14,
                "contents_url": "https://api.github.com/repos/apache/santuario-java/contents/src/main/java/org/apache/xml/security/algorithms/implementations/IntegrityHmac.java?ref=b52724c47b787c2eaeca00babee638310985f624",
                "patch": "@@ -134,7 +134,10 @@ protected boolean engineVerify(byte[] signature) throws XMLSignatureException {\n      */\n     protected void engineInitVerify(Key secretKey) throws XMLSignatureException {\n         if (!(secretKey instanceof SecretKey)) {\n-            String supplied = secretKey.getClass().getName();\n+            String supplied = null;\n+            if (secretKey != null) {\n+                supplied = secretKey.getClass().getName();\n+            }\n             String needed = SecretKey.class.getName();\n             Object exArgs[] = { supplied, needed };\n \n@@ -190,19 +193,7 @@ protected void engineInitVerify(Key secretKey) throws XMLSignatureException {\n      * @throws XMLSignatureException\n      */\n     protected void engineInitSign(Key secretKey) throws XMLSignatureException {\n-        if (!(secretKey instanceof SecretKey)) {\n-            String supplied = secretKey.getClass().getName();\n-            String needed = SecretKey.class.getName();\n-            Object exArgs[] = { supplied, needed };\n-\n-            throw new XMLSignatureException(\"algorithms.WrongKeyForThisOperation\", exArgs);\n-        }\n-\n-        try {\n-            this.macAlgorithm.init(secretKey);\n-        } catch (InvalidKeyException ex) {\n-            throw new XMLSignatureException(\"empty\", ex);\n-        }\n+        engineInitSign(secretKey, (AlgorithmParameterSpec)null);\n     }\n \n     /**\n@@ -216,15 +207,22 @@ protected void engineInitSign(\n         Key secretKey, AlgorithmParameterSpec algorithmParameterSpec\n     ) throws XMLSignatureException {\n         if (!(secretKey instanceof SecretKey)) {\n-            String supplied = secretKey.getClass().getName();\n+            String supplied = null;\n+            if (secretKey != null) {\n+                supplied = secretKey.getClass().getName();\n+            }\n             String needed = SecretKey.class.getName();\n             Object exArgs[] = { supplied, needed };\n \n             throw new XMLSignatureException(\"algorithms.WrongKeyForThisOperation\", exArgs);\n         }\n \n         try {\n-            this.macAlgorithm.init(secretKey, algorithmParameterSpec);\n+            if (algorithmParameterSpec == null) {\n+                this.macAlgorithm.init(secretKey);\n+            } else {\n+                this.macAlgorithm.init(secretKey, algorithmParameterSpec);\n+            }\n         } catch (InvalidKeyException ex) {\n             throw new XMLSignatureException(\"empty\", ex);\n         } catch (InvalidAlgorithmParameterException ex) {",
                "deletions": 16
            },
            {
                "sha": "96a41e998a35fe072d6ca0070da8908c8184eeff",
                "filename": "src/main/java/org/apache/xml/security/algorithms/implementations/SignatureBaseRSA.java",
                "blob_url": "https://github.com/apache/santuario-java/blob/b52724c47b787c2eaeca00babee638310985f624/src/main/java/org/apache/xml/security/algorithms/implementations/SignatureBaseRSA.java",
                "raw_url": "https://github.com/apache/santuario-java/raw/b52724c47b787c2eaeca00babee638310985f624/src/main/java/org/apache/xml/security/algorithms/implementations/SignatureBaseRSA.java",
                "status": "modified",
                "changes": 30,
                "additions": 14,
                "contents_url": "https://api.github.com/repos/apache/santuario-java/contents/src/main/java/org/apache/xml/security/algorithms/implementations/SignatureBaseRSA.java?ref=b52724c47b787c2eaeca00babee638310985f624",
                "patch": "@@ -96,7 +96,10 @@ protected boolean engineVerify(byte[] signature) throws XMLSignatureException {\n     /** @inheritDoc */\n     protected void engineInitVerify(Key publicKey) throws XMLSignatureException {\n         if (!(publicKey instanceof PublicKey)) {\n-            String supplied = publicKey.getClass().getName();\n+            String supplied = null;\n+            if (publicKey != null) {\n+                supplied = publicKey.getClass().getName();\n+            }\n             String needed = PublicKey.class.getName();\n             Object exArgs[] = { supplied, needed };\n \n@@ -136,35 +139,30 @@ protected void engineInitVerify(Key publicKey) throws XMLSignatureException {\n     protected void engineInitSign(Key privateKey, SecureRandom secureRandom)\n         throws XMLSignatureException {\n         if (!(privateKey instanceof PrivateKey)) {\n-            String supplied = privateKey.getClass().getName();\n+            String supplied = null;\n+            if (privateKey != null) {\n+                supplied = privateKey.getClass().getName();\n+            }\n             String needed = PrivateKey.class.getName();\n             Object exArgs[] = { supplied, needed };\n \n             throw new XMLSignatureException(\"algorithms.WrongKeyForThisOperation\", exArgs);\n         }\n \n         try {\n-            this.signatureAlgorithm.initSign((PrivateKey) privateKey, secureRandom);\n+            if (secureRandom == null) {\n+                this.signatureAlgorithm.initSign((PrivateKey) privateKey);\n+            } else {\n+                this.signatureAlgorithm.initSign((PrivateKey) privateKey, secureRandom);\n+            }\n         } catch (InvalidKeyException ex) {\n             throw new XMLSignatureException(\"empty\", ex);\n         }\n     }\n \n     /** @inheritDoc */\n     protected void engineInitSign(Key privateKey) throws XMLSignatureException {\n-        if (!(privateKey instanceof PrivateKey)) {\n-            String supplied = privateKey.getClass().getName();\n-            String needed = PrivateKey.class.getName();\n-            Object exArgs[] = { supplied, needed };\n-\n-            throw new XMLSignatureException(\"algorithms.WrongKeyForThisOperation\", exArgs);\n-        }\n-\n-        try {\n-            this.signatureAlgorithm.initSign((PrivateKey) privateKey);\n-        } catch (InvalidKeyException ex) {\n-            throw new XMLSignatureException(\"empty\", ex);\n-        }\n+        engineInitSign(privateKey, (SecureRandom)null);\n     }\n \n     /** @inheritDoc */",
                "deletions": 16
            },
            {
                "sha": "7417435780e341f9f511a0f200659bfe75b13579",
                "filename": "src/main/java/org/apache/xml/security/algorithms/implementations/SignatureDSA.java",
                "blob_url": "https://github.com/apache/santuario-java/blob/b52724c47b787c2eaeca00babee638310985f624/src/main/java/org/apache/xml/security/algorithms/implementations/SignatureDSA.java",
                "raw_url": "https://github.com/apache/santuario-java/raw/b52724c47b787c2eaeca00babee638310985f624/src/main/java/org/apache/xml/security/algorithms/implementations/SignatureDSA.java",
                "status": "modified",
                "changes": 31,
                "additions": 14,
                "contents_url": "https://api.github.com/repos/apache/santuario-java/contents/src/main/java/org/apache/xml/security/algorithms/implementations/SignatureDSA.java?ref=b52724c47b787c2eaeca00babee638310985f624",
                "patch": "@@ -123,7 +123,10 @@ protected boolean engineVerify(byte[] signature)\n      */\n     protected void engineInitVerify(Key publicKey) throws XMLSignatureException {\n         if (!(publicKey instanceof PublicKey)) {\n-            String supplied = publicKey.getClass().getName();\n+            String supplied = null;\n+            if (publicKey != null) {\n+                supplied = publicKey.getClass().getName();\n+            }\n             String needed = PublicKey.class.getName();\n             Object exArgs[] = { supplied, needed };\n \n@@ -172,15 +175,22 @@ protected void engineInitVerify(Key publicKey) throws XMLSignatureException {\n     protected void engineInitSign(Key privateKey, SecureRandom secureRandom)\n         throws XMLSignatureException {\n         if (!(privateKey instanceof PrivateKey)) {\n-            String supplied = privateKey.getClass().getName();\n+            String supplied = null;\n+            if (privateKey != null) {\n+                supplied = privateKey.getClass().getName();\n+            }\n             String needed = PrivateKey.class.getName();\n             Object exArgs[] = { supplied, needed };\n \n             throw new XMLSignatureException(\"algorithms.WrongKeyForThisOperation\", exArgs);\n         }\n \n         try {\n-            this.signatureAlgorithm.initSign((PrivateKey) privateKey, secureRandom);\n+            if (secureRandom == null) {\n+                this.signatureAlgorithm.initSign((PrivateKey) privateKey);\n+            } else {\n+                this.signatureAlgorithm.initSign((PrivateKey) privateKey, secureRandom);\n+            }\n         } catch (InvalidKeyException ex) {\n             throw new XMLSignatureException(\"empty\", ex);\n         }\n@@ -191,20 +201,7 @@ protected void engineInitSign(Key privateKey, SecureRandom secureRandom)\n      * @inheritDoc\n      */\n     protected void engineInitSign(Key privateKey) throws XMLSignatureException {\n-        if (!(privateKey instanceof PrivateKey)) {\n-            String supplied = privateKey.getClass().getName();\n-            String needed = PrivateKey.class.getName();\n-            Object exArgs[] = { supplied, needed };\n-\n-            throw new XMLSignatureException(\"algorithms.WrongKeyForThisOperation\", exArgs);\n-        }\n-\n-        try {\n-            this.signatureAlgorithm.initSign((PrivateKey) privateKey);\n-        } catch (InvalidKeyException ex) {\n-            throw new XMLSignatureException(\"empty\", ex);\n-        }\n-        size = ((DSAKey)privateKey).getParams().getQ().bitLength();\n+        engineInitSign(privateKey, (SecureRandom)null);\n     }\n \n     /**",
                "deletions": 17
            },
            {
                "sha": "ba4fbfd554127321fad45a5369de25b7df08e0ca",
                "filename": "src/main/java/org/apache/xml/security/algorithms/implementations/SignatureECDSA.java",
                "blob_url": "https://github.com/apache/santuario-java/blob/b52724c47b787c2eaeca00babee638310985f624/src/main/java/org/apache/xml/security/algorithms/implementations/SignatureECDSA.java",
                "raw_url": "https://github.com/apache/santuario-java/raw/b52724c47b787c2eaeca00babee638310985f624/src/main/java/org/apache/xml/security/algorithms/implementations/SignatureECDSA.java",
                "status": "modified",
                "changes": 30,
                "additions": 14,
                "contents_url": "https://api.github.com/repos/apache/santuario-java/contents/src/main/java/org/apache/xml/security/algorithms/implementations/SignatureECDSA.java?ref=b52724c47b787c2eaeca00babee638310985f624",
                "patch": "@@ -236,7 +236,10 @@ protected boolean engineVerify(byte[] signature) throws XMLSignatureException {\n     protected void engineInitVerify(Key publicKey) throws XMLSignatureException {\n \n         if (!(publicKey instanceof PublicKey)) {\n-            String supplied = publicKey.getClass().getName();\n+            String supplied = null;\n+            if (publicKey != null) {\n+                supplied = publicKey.getClass().getName();\n+            }\n             String needed = PublicKey.class.getName();\n             Object exArgs[] = { supplied, needed };\n \n@@ -280,35 +283,30 @@ protected void engineInitVerify(Key publicKey) throws XMLSignatureException {\n     protected void engineInitSign(Key privateKey, SecureRandom secureRandom)\n         throws XMLSignatureException {\n         if (!(privateKey instanceof PrivateKey)) {\n-            String supplied = privateKey.getClass().getName();\n+            String supplied = null;\n+            if (privateKey != null) {\n+                supplied = privateKey.getClass().getName();\n+            }\n             String needed = PrivateKey.class.getName();\n             Object exArgs[] = { supplied, needed };\n \n             throw new XMLSignatureException(\"algorithms.WrongKeyForThisOperation\", exArgs);\n         }\n \n         try {\n-            this.signatureAlgorithm.initSign((PrivateKey) privateKey, secureRandom);\n+            if (secureRandom == null) {\n+                this.signatureAlgorithm.initSign((PrivateKey) privateKey);\n+            } else {\n+                this.signatureAlgorithm.initSign((PrivateKey) privateKey, secureRandom);\n+            }\n         } catch (InvalidKeyException ex) {\n             throw new XMLSignatureException(\"empty\", ex);\n         }\n     }\n \n     /** @inheritDoc */\n     protected void engineInitSign(Key privateKey) throws XMLSignatureException {\n-        if (!(privateKey instanceof PrivateKey)) {\n-            String supplied = privateKey.getClass().getName();\n-            String needed = PrivateKey.class.getName();\n-            Object exArgs[] = { supplied, needed };\n-\n-            throw new XMLSignatureException(\"algorithms.WrongKeyForThisOperation\", exArgs);\n-        }\n-\n-        try {\n-            this.signatureAlgorithm.initSign((PrivateKey) privateKey);\n-        } catch (InvalidKeyException ex) {\n-            throw new XMLSignatureException(\"empty\", ex);\n-        }\n+        engineInitSign(privateKey, (SecureRandom)null);\n     }\n \n     /** @inheritDoc */",
                "deletions": 16
            }
        ]
    },
    {
        "repo": "santuario-java",
        "message": "Avoid a NPE\n\ngit-svn-id: https://svn.apache.org/repos/asf/santuario/xml-security-java/trunk@1590785 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/santuario-java/commit/45ceab71dd72ab96fe76f89421adad161fc20b11",
        "parent": "https://github.com/apache/santuario-java/commit/a2220812349e9dfdcc614c9572c836999ce180fe",
        "bug_id": "santuario-java_13",
        "file": [
            {
                "sha": "6643a888a654007ab3e497c4ad8f2fa2e226a7b7",
                "filename": "src/main/java/org/apache/xml/security/algorithms/JCEMapper.java",
                "blob_url": "https://github.com/apache/santuario-java/blob/45ceab71dd72ab96fe76f89421adad161fc20b11/src/main/java/org/apache/xml/security/algorithms/JCEMapper.java",
                "raw_url": "https://github.com/apache/santuario-java/raw/45ceab71dd72ab96fe76f89421adad161fc20b11/src/main/java/org/apache/xml/security/algorithms/JCEMapper.java",
                "status": "modified",
                "changes": 8,
                "additions": 5,
                "contents_url": "https://api.github.com/repos/apache/santuario-java/contents/src/main/java/org/apache/xml/security/algorithms/JCEMapper.java?ref=45ceab71dd72ab96fe76f89421adad161fc20b11",
                "patch": "@@ -277,9 +277,11 @@ public static String getJCEKeyAlgorithmFromURI(String algorithmURI) {\n         if (log.isDebugEnabled()) {\n             log.debug(\"Request for URI \" + algorithmURI);\n         }\n-        Algorithm algorithm = algorithmsMap.get(algorithmURI);\n-        if (algorithm != null) {\n-            return algorithm.requiredKey;\n+        if (algorithmURI != null) {\n+            Algorithm algorithm = algorithmsMap.get(algorithmURI);\n+            if (algorithm != null) {\n+                return algorithm.requiredKey;\n+            }\n         }\n         return null;\n     }",
                "deletions": 3
            }
        ]
    },
    {
        "repo": "santuario-java",
        "message": "[SANTUARIO-383] - NPE in DOMXMLSignature\n\ngit-svn-id: https://svn.apache.org/repos/asf/santuario/xml-security-java/trunk@1589059 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/santuario-java/commit/192be23bd99fa4d1a7b478c6ed82c3c541e3de1a",
        "parent": "https://github.com/apache/santuario-java/commit/d70e97d88d2146491a622cdcbd34f60ae02f8ad7",
        "bug_id": "santuario-java_14",
        "file": [
            {
                "sha": "872f52764ff85462000a078c1ba67828f5a72b26",
                "filename": "src/main/java/org/apache/jcp/xml/dsig/internal/dom/DOMXMLSignature.java",
                "blob_url": "https://github.com/apache/santuario-java/blob/192be23bd99fa4d1a7b478c6ed82c3c541e3de1a/src/main/java/org/apache/jcp/xml/dsig/internal/dom/DOMXMLSignature.java",
                "raw_url": "https://github.com/apache/santuario-java/raw/192be23bd99fa4d1a7b478c6ed82c3c541e3de1a/src/main/java/org/apache/jcp/xml/dsig/internal/dom/DOMXMLSignature.java",
                "status": "modified",
                "changes": 13,
                "additions": 9,
                "contents_url": "https://api.github.com/repos/apache/santuario-java/contents/src/main/java/org/apache/jcp/xml/dsig/internal/dom/DOMXMLSignature.java?ref=192be23bd99fa4d1a7b478c6ed82c3c541e3de1a",
                "patch": "@@ -536,11 +536,16 @@ public boolean validate(XMLValidateContext validateContext)\n             // get validating key\n             SignatureMethod sm = si.getSignatureMethod();\n             Key validationKey = null;\n-            KeySelectorResult ksResult;\n+            KeySelectorResult ksResult = null;\n             try {\n-                ksResult = validateContext.getKeySelector().select\n-                    (ki, KeySelector.Purpose.VERIFY, sm, validateContext);\n-                validationKey = ksResult.getKey();\n+                KeySelector keySelector = validateContext.getKeySelector();\n+                if (keySelector != null) {\n+                    ksResult = keySelector.select\n+                        (ki, KeySelector.Purpose.VERIFY, sm, validateContext);\n+                    if (ksResult != null) {\n+                        validationKey = ksResult.getKey();\n+                    }\n+                }\n                 if (validationKey == null) {\n                     throw new XMLSignatureException(\"the keyselector did not \" +\n                                                     \"find a validation key\");",
                "deletions": 4
            }
        ]
    },
    {
        "repo": "santuario-java",
        "message": "Avoiding some NPEs\n\ngit-svn-id: https://svn.apache.org/repos/asf/santuario/xml-security-java/trunk@1570155 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/santuario-java/commit/fc87ee70c2f034497c0aa4faedb08abfaf6923b3",
        "parent": "https://github.com/apache/santuario-java/commit/f9b88c017441e7cc04266c0a70dfa4c28940f949",
        "bug_id": "santuario-java_15",
        "file": [
            {
                "sha": "128f01a0fc166ebfdd6d76c00933413887b18b30",
                "filename": "src/main/java/org/apache/xml/security/stax/ext/AbstractOutputProcessor.java",
                "blob_url": "https://github.com/apache/santuario-java/blob/fc87ee70c2f034497c0aa4faedb08abfaf6923b3/src/main/java/org/apache/xml/security/stax/ext/AbstractOutputProcessor.java",
                "raw_url": "https://github.com/apache/santuario-java/raw/fc87ee70c2f034497c0aa4faedb08abfaf6923b3/src/main/java/org/apache/xml/security/stax/ext/AbstractOutputProcessor.java",
                "status": "modified",
                "changes": 13,
                "additions": 8,
                "contents_url": "https://api.github.com/repos/apache/santuario-java/contents/src/main/java/org/apache/xml/security/stax/ext/AbstractOutputProcessor.java?ref=fc87ee70c2f034497c0aa4faedb08abfaf6923b3",
                "patch": "@@ -249,11 +249,14 @@ protected SecurePart securePartMatches(XMLSecStartElement xmlSecStartElement,\n     }\n \n     protected SecurePart securePartMatches(XMLSecStartElement xmlSecStartElement, Map<Object, SecurePart> secureParts) {\n-        SecurePart securePart = secureParts.get(xmlSecStartElement.getName());\n-        if (securePart == null) {\n-            Attribute attribute = xmlSecStartElement.getAttributeByName(XMLSecurityConstants.ATT_NULL_Id);\n-            if (attribute != null) {\n-                securePart = secureParts.get(attribute.getValue());\n+        SecurePart securePart = null;\n+        if (secureParts != null) {\n+            securePart = secureParts.get(xmlSecStartElement.getName());\n+            if (securePart == null) {\n+                Attribute attribute = xmlSecStartElement.getAttributeByName(XMLSecurityConstants.ATT_NULL_Id);\n+                if (attribute != null) {\n+                    securePart = secureParts.get(attribute.getValue());\n+                }\n             }\n         }\n         return securePart;",
                "deletions": 5
            },
            {
                "sha": "beda8733f375b7fe3e0c302ce1c427eb8f21a0b4",
                "filename": "src/main/java/org/apache/xml/security/stax/impl/processor/output/AbstractSignatureOutputProcessor.java",
                "blob_url": "https://github.com/apache/santuario-java/blob/fc87ee70c2f034497c0aa4faedb08abfaf6923b3/src/main/java/org/apache/xml/security/stax/impl/processor/output/AbstractSignatureOutputProcessor.java",
                "raw_url": "https://github.com/apache/santuario-java/raw/fc87ee70c2f034497c0aa4faedb08abfaf6923b3/src/main/java/org/apache/xml/security/stax/impl/processor/output/AbstractSignatureOutputProcessor.java",
                "status": "modified",
                "changes": 40,
                "additions": 22,
                "contents_url": "https://api.github.com/repos/apache/santuario-java/contents/src/main/java/org/apache/xml/security/stax/impl/processor/output/AbstractSignatureOutputProcessor.java?ref=fc87ee70c2f034497c0aa4faedb08abfaf6923b3",
                "patch": "@@ -75,12 +75,14 @@ public void doFinal(OutputProcessorChain outputProcessorChain) throws XMLStreamE\n     protected void doFinalInternal(OutputProcessorChain outputProcessorChain) throws XMLSecurityException, XMLStreamException {\n         Map<Object, SecurePart> dynamicSecureParts =\n                 outputProcessorChain.getSecurityContext().getAsMap(XMLSecurityConstants.SIGNATURE_PARTS);\n-        Iterator<Map.Entry<Object, SecurePart>> securePartsMapIterator = dynamicSecureParts.entrySet().iterator();\n-        while (securePartsMapIterator.hasNext()) {\n-            Map.Entry<Object, SecurePart> securePartEntry = securePartsMapIterator.next();\n-            final SecurePart securePart = securePartEntry.getValue();\n-            if (securePart.getExternalReference() != null) {\n-                digestExternalReference(outputProcessorChain, securePart);\n+        if (dynamicSecureParts != null) {\n+            Iterator<Map.Entry<Object, SecurePart>> securePartsMapIterator = dynamicSecureParts.entrySet().iterator();\n+            while (securePartsMapIterator.hasNext()) {\n+                Map.Entry<Object, SecurePart> securePartEntry = securePartsMapIterator.next();\n+                final SecurePart securePart = securePartEntry.getValue();\n+                if (securePart.getExternalReference() != null) {\n+                    digestExternalReference(outputProcessorChain, securePart);\n+                }\n             }\n         }\n \n@@ -138,21 +140,23 @@ protected void digestExternalReference(\n     protected void verifySignatureParts(OutputProcessorChain outputProcessorChain) throws XMLSecurityException {\n         List<SignaturePartDef> signaturePartDefs = getSignaturePartDefList();\n         Map<Object, SecurePart> dynamicSecureParts = outputProcessorChain.getSecurityContext().getAsMap(XMLSecurityConstants.SIGNATURE_PARTS);\n-        Iterator<Map.Entry<Object, SecurePart>> securePartsMapIterator = dynamicSecureParts.entrySet().iterator();\n-        loop:\n-        while (securePartsMapIterator.hasNext()) {\n-            Map.Entry<Object, SecurePart> securePartEntry = securePartsMapIterator.next();\n-            final SecurePart securePart = securePartEntry.getValue();\n-\n-            if (securePart.isRequired()) {\n-                for (int i = 0; i < signaturePartDefs.size(); i++) {\n-                    SignaturePartDef signaturePartDef = signaturePartDefs.get(i);\n+        if (dynamicSecureParts != null) {\n+            Iterator<Map.Entry<Object, SecurePart>> securePartsMapIterator = dynamicSecureParts.entrySet().iterator();\n+            loop:\n+            while (securePartsMapIterator.hasNext()) {\n+                Map.Entry<Object, SecurePart> securePartEntry = securePartsMapIterator.next();\n+                final SecurePart securePart = securePartEntry.getValue();\n     \n-                    if (signaturePartDef.getSecurePart() == securePart) {\n-                        continue loop;\n+                if (securePart.isRequired()) {\n+                    for (int i = 0; i < signaturePartDefs.size(); i++) {\n+                        SignaturePartDef signaturePartDef = signaturePartDefs.get(i);\n+        \n+                        if (signaturePartDef.getSecurePart() == securePart) {\n+                            continue loop;\n+                        }\n                     }\n+                    throw new XMLSecurityException(\"stax.signature.securePartNotFound\", securePart.getName());\n                 }\n-                throw new XMLSecurityException(\"stax.signature.securePartNotFound\", securePart.getName());\n             }\n         }\n     }",
                "deletions": 18
            }
        ]
    },
    {
        "repo": "santuario-java",
        "message": "Avoiding some potential NPEs\n\ngit-svn-id: https://svn.apache.org/repos/asf/santuario/xml-security-java/trunk@1559972 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/santuario-java/commit/146b468cdde8326bcd775f36fdcee180e0bdd582",
        "parent": "https://github.com/apache/santuario-java/commit/cdc9e368bebf9ccc5968a1026468f67297247000",
        "bug_id": "santuario-java_16",
        "file": [
            {
                "sha": "efe8c08fc5b212801a3f8e68ececa04ad7abf4b6",
                "filename": "src/main/java/org/apache/xml/security/stax/ext/XMLSecurityUtils.java",
                "blob_url": "https://github.com/apache/santuario-java/blob/146b468cdde8326bcd775f36fdcee180e0bdd582/src/main/java/org/apache/xml/security/stax/ext/XMLSecurityUtils.java",
                "raw_url": "https://github.com/apache/santuario-java/raw/146b468cdde8326bcd775f36fdcee180e0bdd582/src/main/java/org/apache/xml/security/stax/ext/XMLSecurityUtils.java",
                "status": "modified",
                "changes": 20,
                "additions": 20,
                "contents_url": "https://api.github.com/repos/apache/santuario-java/contents/src/main/java/org/apache/xml/security/stax/ext/XMLSecurityUtils.java?ref=146b468cdde8326bcd775f36fdcee180e0bdd582",
                "patch": "@@ -175,6 +175,10 @@ public static void createKeyValueTokenStructure(AbstractOutputProcessor abstract\n                                                     OutputProcessorChain outputProcessorChain, X509Certificate[] x509Certificates)\n             throws XMLStreamException, XMLSecurityException {\n \n+        if (x509Certificates == null || x509Certificates.length == 0) {\n+            throw new XMLSecurityException(\"stax.signature.publicKeyOrCertificateMissing\");\n+        }\n+        \n         X509Certificate x509Certificate = x509Certificates[0];\n         PublicKey publicKey = x509Certificate.getPublicKey();\n         String algorithm = publicKey.getAlgorithm();\n@@ -232,6 +236,10 @@ public static void createX509SubjectKeyIdentifierStructure(AbstractOutputProcess\n             OutputProcessorChain outputProcessorChain,\n             X509Certificate[] x509Certificates)\n         throws XMLSecurityException, XMLStreamException {\n+        if (x509Certificates == null || x509Certificates.length == 0) {\n+            throw new XMLSecurityException(\"stax.signature.publicKeyOrCertificateMissing\");\n+        }\n+        \n         // SKI can only be used for a V3 certificate\n         int version = x509Certificates[0].getVersion();\n         if (version != 3) {\n@@ -253,6 +261,10 @@ public static void createX509CertificateStructure(AbstractOutputProcessor abstra\n             X509Certificate[] x509Certificates)\n         throws XMLSecurityException, XMLStreamException {\n         \n+        if (x509Certificates == null || x509Certificates.length == 0) {\n+            throw new XMLSecurityException(\"stax.signature.publicKeyOrCertificateMissing\");\n+        }\n+        \n         abstractOutputProcessor.createStartElementAndOutputAsEvent(outputProcessorChain, XMLSecurityConstants.TAG_dsig_X509Data, true, null);\n \n         abstractOutputProcessor.createStartElementAndOutputAsEvent(outputProcessorChain, XMLSecurityConstants.TAG_dsig_X509Certificate, false, null);\n@@ -273,6 +285,10 @@ public static void createX509SubjectNameStructure(AbstractOutputProcessor abstra\n             X509Certificate[] x509Certificates)\n         throws XMLSecurityException, XMLStreamException {\n         \n+        if (x509Certificates == null || x509Certificates.length == 0) {\n+            throw new XMLSecurityException(\"stax.signature.publicKeyOrCertificateMissing\");\n+        }\n+        \n         abstractOutputProcessor.createStartElementAndOutputAsEvent(outputProcessorChain, XMLSecurityConstants.TAG_dsig_X509Data, true, null);\n \n         abstractOutputProcessor.createStartElementAndOutputAsEvent(outputProcessorChain, XMLSecurityConstants.TAG_dsig_X509SubjectName, false, null);\n@@ -287,6 +303,10 @@ public static void createX509IssuerSerialStructure(AbstractOutputProcessor abstr\n             OutputProcessorChain outputProcessorChain, X509Certificate[] x509Certificates)\n             throws XMLStreamException, XMLSecurityException {\n \n+        if (x509Certificates == null || x509Certificates.length == 0) {\n+            throw new XMLSecurityException(\"stax.signature.publicKeyOrCertificateMissing\");\n+        }\n+        \n         abstractOutputProcessor.createStartElementAndOutputAsEvent(outputProcessorChain, XMLSecurityConstants.TAG_dsig_X509Data, true, null);\n         abstractOutputProcessor.createStartElementAndOutputAsEvent(outputProcessorChain, XMLSecurityConstants.TAG_dsig_X509IssuerSerial, false, null);\n         abstractOutputProcessor.createStartElementAndOutputAsEvent(outputProcessorChain, XMLSecurityConstants.TAG_dsig_X509IssuerName, false, null);",
                "deletions": 0
            }
        ]
    },
    {
        "repo": "santuario-java",
        "message": "[SANTUARIO-368] - NPE in XMLSignature\n\ngit-svn-id: https://svn.apache.org/repos/asf/santuario/xml-security-java/trunk@1527497 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/santuario-java/commit/059d726166539e7421466339823ba6d2b0fc3fd6",
        "parent": "https://github.com/apache/santuario-java/commit/7bbe05553af241cd1fa8b5c5884f832e7ee2c485",
        "bug_id": "santuario-java_17",
        "file": [
            {
                "sha": "9b676df9251f03b55379e2e2180db0b89e4a66b8",
                "filename": "src/main/java/org/apache/xml/security/signature/XMLSignature.java",
                "blob_url": "https://github.com/apache/santuario-java/blob/059d726166539e7421466339823ba6d2b0fc3fd6/src/main/java/org/apache/xml/security/signature/XMLSignature.java",
                "raw_url": "https://github.com/apache/santuario-java/raw/059d726166539e7421466339823ba6d2b0fc3fd6/src/main/java/org/apache/xml/security/signature/XMLSignature.java",
                "status": "modified",
                "changes": 4,
                "additions": 2,
                "contents_url": "https://api.github.com/repos/apache/santuario-java/contents/src/main/java/org/apache/xml/security/signature/XMLSignature.java?ref=059d726166539e7421466339823ba6d2b0fc3fd6",
                "patch": "@@ -373,8 +373,8 @@ public XMLSignature(Element element, String baseURI, boolean secureValidation)\n \n         // If it exists use it, but it's not mandatory\n         if (keyInfoElem != null \n-            && keyInfoElem.getNamespaceURI().equals(Constants.SignatureSpecNS) \n-            && keyInfoElem.getLocalName().equals(Constants._TAG_KEYINFO)) {\n+            && Constants.SignatureSpecNS.equals(keyInfoElem.getNamespaceURI()) \n+            && Constants._TAG_KEYINFO.equals(keyInfoElem.getLocalName())) {\n             this.keyInfo = new KeyInfo(keyInfoElem, baseURI);\n             this.keyInfo.setSecureValidation(secureValidation);\n         }",
                "deletions": 2
            }
        ]
    },
    {
        "repo": "santuario-java",
        "message": "Fixing a NPE in DOMKeyInfo\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/santuario/xml-security-java/trunk@1197177 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/santuario-java/commit/2df6182b5f79067ff07fa4efea135a49d061caf7",
        "parent": "https://github.com/apache/santuario-java/commit/a489f340326776579dceff592ea1428f1961eaed",
        "bug_id": "santuario-java_18",
        "file": [
            {
                "sha": "6560773c1e0440f350bf83fca8aa3328489a436e",
                "filename": "src/main/java/org/apache/jcp/xml/dsig/internal/dom/DOMKeyInfoFactory.java",
                "blob_url": "https://github.com/apache/santuario-java/blob/2df6182b5f79067ff07fa4efea135a49d061caf7/src/main/java/org/apache/jcp/xml/dsig/internal/dom/DOMKeyInfoFactory.java",
                "raw_url": "https://github.com/apache/santuario-java/raw/2df6182b5f79067ff07fa4efea135a49d061caf7/src/main/java/org/apache/jcp/xml/dsig/internal/dom/DOMKeyInfoFactory.java",
                "status": "modified",
                "changes": 8,
                "additions": 7,
                "contents_url": "https://api.github.com/repos/apache/santuario-java/contents/src/main/java/org/apache/jcp/xml/dsig/internal/dom/DOMKeyInfoFactory.java?ref=2df6182b5f79067ff07fa4efea135a49d061caf7",
                "patch": "@@ -29,6 +29,7 @@\n import java.security.PublicKey;\n import java.util.List;\n import javax.xml.crypto.*;\n+import javax.xml.crypto.dom.DOMCryptoContext;\n import javax.xml.crypto.dsig.keyinfo.*;\n import org.w3c.dom.Document;\n import org.w3c.dom.Element;\n@@ -139,9 +140,14 @@ public KeyInfo unmarshalKeyInfo(XMLStructure xmlStructure)\n                 \"support DOM Level 2 and be namespace aware\");\n         }\n         if (tag.equals(\"KeyInfo\")) {\n-            return new DOMKeyInfo(element, null, getProvider());\n+            return new DOMKeyInfo(element, new UnmarshalContext(), getProvider());\n         } else {\n             throw new MarshalException(\"invalid KeyInfo tag: \" + tag);\n         }\n     }\n+    \n+    private static class UnmarshalContext extends DOMCryptoContext {\n+        UnmarshalContext() {}\n+    }\n+\n }",
                "deletions": 1
            }
        ]
    },
    {
        "repo": "santuario-java",
        "message": "Fix a NPE when debug is enable.\n\ngit-svn-id: https://svn.apache.org/repos/asf/xml/security/trunk@412862 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/santuario-java/commit/1b99955f74a2ba254426a2f1aa04131d9f12d1de",
        "parent": "https://github.com/apache/santuario-java/commit/71aeaa5cb18f30261c6bc1f4a49670d942cdcec4",
        "bug_id": "santuario-java_19",
        "file": [
            {
                "sha": "2d1387827455f1937c57d8018ffd80ac55bc7860",
                "filename": "src/org/apache/xml/security/utils/resolver/ResourceResolver.java",
                "blob_url": "https://github.com/apache/santuario-java/blob/1b99955f74a2ba254426a2f1aa04131d9f12d1de/src/org/apache/xml/security/utils/resolver/ResourceResolver.java",
                "raw_url": "https://github.com/apache/santuario-java/raw/1b99955f74a2ba254426a2f1aa04131d9f12d1de/src/org/apache/xml/security/utils/resolver/ResourceResolver.java",
                "status": "modified",
                "changes": 3,
                "additions": 2,
                "contents_url": "https://api.github.com/repos/apache/santuario-java/contents/src/org/apache/xml/security/utils/resolver/ResourceResolver.java?ref=1b99955f74a2ba254426a2f1aa04131d9f12d1de",
                "patch": "@@ -139,7 +139,8 @@ public static final ResourceResolver getInstance(\n            Attr uri, String BaseURI, List individualResolvers)\n               throws ResourceResolverException {\n       if (log.isDebugEnabled()) {\n-      \tlog.debug(\"I was asked to create a ResourceResolver and got \" + individualResolvers.size());\n+    \t  \n+      \tlog.debug(\"I was asked to create a ResourceResolver and got \" + (individualResolvers==null? 0 : individualResolvers.size()) );\n       \tlog.debug(\" extra resolvers to my existing \" + ResourceResolver._resolverVector.size() + \" system-wide resolvers\");\n       }\n ",
                "deletions": 1
            }
        ]
    },
    {
        "repo": "santuario-java",
        "message": "minor speed-ups, avoid a npe.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/xml/security/trunk@351298 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/santuario-java/commit/66bceaa340d093eeb7a22566a5526512b0bb5c2f",
        "parent": "https://github.com/apache/santuario-java/commit/3d987e0c9704ca7e8b758d50411627e5f1392b9e",
        "bug_id": "santuario-java_20",
        "file": [
            {
                "sha": "f290336f489ebd5061fb152160446d74d107c7bc",
                "filename": "src/org/apache/xml/security/utils/resolver/implementations/ResolverFragment.java",
                "blob_url": "https://github.com/apache/santuario-java/blob/66bceaa340d093eeb7a22566a5526512b0bb5c2f/src/org/apache/xml/security/utils/resolver/implementations/ResolverFragment.java",
                "raw_url": "https://github.com/apache/santuario-java/raw/66bceaa340d093eeb7a22566a5526512b0bb5c2f/src/org/apache/xml/security/utils/resolver/implementations/ResolverFragment.java",
                "status": "modified",
                "changes": 5,
                "additions": 3,
                "contents_url": "https://api.github.com/repos/apache/santuario-java/contents/src/org/apache/xml/security/utils/resolver/implementations/ResolverFragment.java?ref=66bceaa340d093eeb7a22566a5526512b0bb5c2f",
                "patch": "@@ -99,8 +99,9 @@ public XMLSignatureInput engineResolve(Attr uri, String BaseURI)\n       result.setExcludeComments(true);\n \n       //log.debug(\"We return a nodeset with \" + resultSet.size() + \" nodes\");\n-      result.setMIMEType(\"text/xml\");\n-\t  result.setSourceURI(BaseURI.concat(uri.getNodeValue()));      \n+      result.setMIMEType(\"text/xml\");\t  \n+\t  result.setSourceURI((BaseURI != null) ? BaseURI.concat(uri.getNodeValue()) :\n+\t\t  uri.getNodeValue());      \n       return result;\n    }\n ",
                "deletions": 2
            },
            {
                "sha": "dcd05b3076d2c06323927a0102822684034ab5dd",
                "filename": "src/org/apache/xml/security/utils/resolver/implementations/ResolverLocalFilesystem.java",
                "blob_url": "https://github.com/apache/santuario-java/blob/66bceaa340d093eeb7a22566a5526512b0bb5c2f/src/org/apache/xml/security/utils/resolver/implementations/ResolverLocalFilesystem.java",
                "raw_url": "https://github.com/apache/santuario-java/raw/66bceaa340d093eeb7a22566a5526512b0bb5c2f/src/org/apache/xml/security/utils/resolver/implementations/ResolverLocalFilesystem.java",
                "status": "modified",
                "changes": 17,
                "additions": 9,
                "contents_url": "https://api.github.com/repos/apache/santuario-java/contents/src/org/apache/xml/security/utils/resolver/implementations/ResolverLocalFilesystem.java?ref=66bceaa340d093eeb7a22566a5526512b0bb5c2f",
                "patch": "@@ -132,16 +132,17 @@ public boolean engineCanResolve(Attr uri, String BaseURI) {\n       }\n \n       try {\n-         URI uriNew = new URI(new URI(BaseURI), uri.getNodeValue());\n-         if (log.isDebugEnabled())\n-         \tlog.debug(\"I was asked whether I can resolve \" + uriNew.toString());\n+\t         //URI uriNew = new URI(new URI(BaseURI), uri.getNodeValue());\n+\t         if (log.isDebugEnabled())\n+\t         \tlog.debug(\"I was asked whether I can resolve \" + uriNodeValue/*uriNew.toString()*/);\n \n-         if (uriNew.getScheme().equals(\"file\")) {\n-            if (log.isDebugEnabled())\n-            \tlog.debug(\"I state that I can resolve \" + uriNew.toString());\n+\t         if ( uriNodeValue.startsWith(\"file:\") ||\n+\t\t\t\t\t BaseURI.startsWith(\"file:\")/*uriNew.getScheme().equals(\"file\")*/) {\n+\t            if (log.isDebugEnabled())\n+\t            \tlog.debug(\"I state that I can resolve \" + uriNodeValue/*uriNew.toString()*/);\n \n-            return true;\n-         }\n+\t            return true;\n+\t         }\n       } catch (Exception e) {}\n \n       log.debug(\"But I can't\");",
                "deletions": 8
            }
        ]
    },
    {
        "repo": "santuario-java",
        "message": "unmarshalXMLSignature should throw NPE if xmlStructure is null as specified by the XMLSignatureFactory API.\nInitialize XMLStructure params passed to newCanonicalizationMethod.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/santuario/xml-security-java/trunk@1497077 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/santuario-java/commit/8357a0d93f0407dd8b7f1d29158806346d7ef53d",
        "parent": "https://github.com/apache/santuario-java/commit/fe27e279a3048e5ca9596327d90e46da1705326f",
        "bug_id": "santuario-java_21",
        "file": [
            {
                "sha": "6495e322783f0f20cf5c0bb87ecb4209c87de949",
                "filename": "src/main/java/org/apache/jcp/xml/dsig/internal/dom/DOMXMLSignatureFactory.java",
                "blob_url": "https://github.com/apache/santuario-java/blob/8357a0d93f0407dd8b7f1d29158806346d7ef53d/src/main/java/org/apache/jcp/xml/dsig/internal/dom/DOMXMLSignatureFactory.java",
                "raw_url": "https://github.com/apache/santuario-java/raw/8357a0d93f0407dd8b7f1d29158806346d7ef53d/src/main/java/org/apache/jcp/xml/dsig/internal/dom/DOMXMLSignatureFactory.java",
                "status": "modified",
                "changes": 10,
                "additions": 9,
                "contents_url": "https://api.github.com/repos/apache/santuario-java/contents/src/main/java/org/apache/jcp/xml/dsig/internal/dom/DOMXMLSignatureFactory.java?ref=8357a0d93f0407dd8b7f1d29158806346d7ef53d",
                "patch": "@@ -164,7 +164,10 @@ public XMLSignature unmarshalXMLSignature(XMLValidateContext context)\n     public XMLSignature unmarshalXMLSignature(XMLStructure xmlStructure)\n         throws MarshalException {\n \n-        if (xmlStructure == null || !(xmlStructure instanceof javax.xml.crypto.dom.DOMStructure)) {\n+        if (xmlStructure == null) {\n+            throw new NullPointerException(\"xmlStructure cannot be null\");\n+        }\n+        if (!(xmlStructure instanceof javax.xml.crypto.dom.DOMStructure)) {\n             throw new ClassCastException(\"xmlStructure must be of type DOMStructure\");\n         }\n         return unmarshal\n@@ -347,6 +350,11 @@ public CanonicalizationMethod newCanonicalizationMethod(String algorithm,\n                 spi = TransformService.getInstance(algorithm, \"DOM\");\n             }\n         }\n+        if (params == null) {\n+            spi.init(null);\n+        } else {\n+            spi.init(params, null);\n+        }\n         \n         return new DOMCanonicalizationMethod(spi);\n     }",
                "deletions": 1
            }
        ]
    },
    {
        "repo": "santuario-java",
        "message": "unmarshalKeyInfo should throw NPE when xmlStructure is null as defined by the KeyInfoFactory API.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/santuario/xml-security-java/trunk@1497056 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/santuario-java/commit/fe27e279a3048e5ca9596327d90e46da1705326f",
        "parent": "https://github.com/apache/santuario-java/commit/ef3a393104919f7702ddb6ea3b7a0bb1a9c8f434",
        "bug_id": "santuario-java_22",
        "file": [
            {
                "sha": "a599e01e3a1605e70fa98fb0657d2726175bdbc5",
                "filename": "src/main/java/org/apache/jcp/xml/dsig/internal/dom/DOMKeyInfoFactory.java",
                "blob_url": "https://github.com/apache/santuario-java/blob/fe27e279a3048e5ca9596327d90e46da1705326f/src/main/java/org/apache/jcp/xml/dsig/internal/dom/DOMKeyInfoFactory.java",
                "raw_url": "https://github.com/apache/santuario-java/raw/fe27e279a3048e5ca9596327d90e46da1705326f/src/main/java/org/apache/jcp/xml/dsig/internal/dom/DOMKeyInfoFactory.java",
                "status": "modified",
                "changes": 5,
                "additions": 4,
                "contents_url": "https://api.github.com/repos/apache/santuario-java/contents/src/main/java/org/apache/jcp/xml/dsig/internal/dom/DOMKeyInfoFactory.java?ref=fe27e279a3048e5ca9596327d90e46da1705326f",
                "patch": "@@ -139,7 +139,10 @@ public URIDereferencer getURIDereferencer() {\n     @Override\n     public KeyInfo unmarshalKeyInfo(XMLStructure xmlStructure) \n         throws MarshalException {\n-        if (xmlStructure == null || !(xmlStructure instanceof javax.xml.crypto.dom.DOMStructure)) {\n+        if (xmlStructure == null) {\n+            throw new NullPointerException(\"xmlStructure cannot be null\");\n+        }\n+        if (!(xmlStructure instanceof javax.xml.crypto.dom.DOMStructure)) {\n             throw new ClassCastException(\"xmlStructure must be of type DOMStructure\");\n         }\n         Node node = ",
                "deletions": 1
            }
        ]
    },
    {
        "repo": "santuario-java",
        "message": "DOMKeyInfo.marshal should throw NPE when parent is null per KeyInfo.marshal API spec.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/santuario/xml-security-java/trunk@1485370 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/santuario-java/commit/11e5627cd603b679846838dda4b109baa7244b3c",
        "parent": "https://github.com/apache/santuario-java/commit/7b15b6156011f16d25d02d7aca2cb928811048a6",
        "bug_id": "santuario-java_23",
        "file": [
            {
                "sha": "e1e312cdfb7be8006860f46210909454b9060ce0",
                "filename": "src/main/java/org/apache/jcp/xml/dsig/internal/dom/DOMKeyInfo.java",
                "blob_url": "https://github.com/apache/santuario-java/blob/11e5627cd603b679846838dda4b109baa7244b3c/src/main/java/org/apache/jcp/xml/dsig/internal/dom/DOMKeyInfo.java",
                "raw_url": "https://github.com/apache/santuario-java/raw/11e5627cd603b679846838dda4b109baa7244b3c/src/main/java/org/apache/jcp/xml/dsig/internal/dom/DOMKeyInfo.java",
                "status": "modified",
                "changes": 5,
                "additions": 4,
                "contents_url": "https://api.github.com/repos/apache/santuario-java/contents/src/main/java/org/apache/jcp/xml/dsig/internal/dom/DOMKeyInfo.java?ref=11e5627cd603b679846838dda4b109baa7244b3c",
                "patch": "@@ -144,7 +144,10 @@ public String getId() {\n     public void marshal(XMLStructure parent, XMLCryptoContext context)\n         throws MarshalException\n     {\n-        if (parent == null || !(parent instanceof javax.xml.crypto.dom.DOMStructure)) {\n+        if (parent == null) {\n+            throw new NullPointerException(\"parent is null\");\n+        }\n+        if (!(parent instanceof javax.xml.crypto.dom.DOMStructure)) {\n             throw new ClassCastException(\"parent must be of type DOMStructure\");\n         }\n ",
                "deletions": 1
            },
            {
                "sha": "ee023934ee7656955011bb44db6c6de463e94c3f",
                "filename": "src/test/java/javax/xml/crypto/test/dsig/keyinfo/KeyInfoTest.java",
                "blob_url": "https://github.com/apache/santuario-java/blob/11e5627cd603b679846838dda4b109baa7244b3c/src/test/java/javax/xml/crypto/test/dsig/keyinfo/KeyInfoTest.java",
                "raw_url": "https://github.com/apache/santuario-java/raw/11e5627cd603b679846838dda4b109baa7244b3c/src/test/java/javax/xml/crypto/test/dsig/keyinfo/KeyInfoTest.java",
                "status": "modified",
                "changes": 4,
                "additions": 2,
                "contents_url": "https://api.github.com/repos/apache/santuario-java/contents/src/test/java/javax/xml/crypto/test/dsig/keyinfo/KeyInfoTest.java?ref=11e5627cd603b679846838dda4b109baa7244b3c",
                "patch": "@@ -115,8 +115,8 @@ public void testMarshal() throws Exception {\n             (Collections.singletonList(fac.newKeyName(\"foo\")), \"keyid\");\n         try {\n             ki.marshal(null, null);\n-            fail(\"Should raise a ClassCastException\");\n-        } catch (ClassCastException npe) {}\n+            fail(\"Should raise a NullPointerException\");\n+        } catch (NullPointerException npe) {}\n \n         DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance();\n         dbf.setNamespaceAware(true);",
                "deletions": 2
            }
        ]
    },
    {
        "repo": "santuario-java",
        "message": "Some build fixes...\n - Changed build.xml to pick up junit 3.8.2 instead of 4.8.1. Junit 4.8.1 is not compatible with JDK 1.4.x. Also, I added the xml-apis jar to the endorsed directory to fix a NPE.\n - Updated maven plugin version in the pom, and changed the bundle plugin to export the version number.\n - Keeping Junit 4.8.1 in the pom as I can't get the involved setup regarding endorsed libraries working with 3.8.2.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/santuario/trunk@999104 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/santuario-java/commit/ca9f5f29e0ed545a1296a0af848100c0dabc4005",
        "parent": "https://github.com/apache/santuario-java/commit/b5ebca3f5b4212e5d1cfe4828da1a794df71d152",
        "bug_id": "santuario-java_24",
        "file": [
            {
                "sha": "b30e07283f04bd64e144c9e64702d79265108e9e",
                "filename": "build.xml",
                "blob_url": "https://github.com/apache/santuario-java/blob/ca9f5f29e0ed545a1296a0af848100c0dabc4005/build.xml",
                "raw_url": "https://github.com/apache/santuario-java/raw/ca9f5f29e0ed545a1296a0af848100c0dabc4005/build.xml",
                "status": "modified",
                "changes": 4,
                "additions": 3,
                "contents_url": "https://api.github.com/repos/apache/santuario-java/contents/build.xml?ref=ca9f5f29e0ed545a1296a0af848100c0dabc4005",
                "patch": "@@ -62,7 +62,7 @@\n     <property name=\"lib.xalan.3\"        value=\"${dir.libs}/xml-apis-1.3.03.jar\" />\n     <property name=\"lib.xerces.1\"       value=\"${dir.libs}/xercesImpl-2.9.1.jar\" />\n     <property name=\"lib.jce\"            value=\"${dir.libs}/${jce.provider.prefix}-${jce.provider.jar}\" />\n-    <property name=\"lib.junit\"\t\tvalue=\"${dir.libs}/junit-4.8.1.jar\" />\n+    <property name=\"lib.junit\"\t\tvalue=\"${dir.libs}/junit-3.8.2.jar\" />\n     <property name=\"lib.clover\"\t\tvalue=\"${dir.libs}/clover.jar\" />\n \n     <!-- XML Security libraries (for bin distribution) -->\n@@ -346,6 +346,7 @@\n \t    <available file=\"data/com/ibm/xss4j-20030127/enveloped-rsa.sig\" property=\"ibm.available\"/>\n         <copy file=\"${lib.xalan.1}\" todir=\"${dir.build.libs2}\"/>\n         <copy file=\"${lib.xalan.2}\" todir=\"${dir.build.libs2}\"/>\n+        <copy file=\"${lib.xalan.3}\" todir=\"${dir.build.libs2}\"/>\n         <copy file=\"${lib.logging.api}\" todir=\"${dir.build.libs2}\"/>\n         <copy file=\"${lib.junit}\" todir=\"${dir.build.libs2}\"/>\n         <copy file=\"${jar.library}\" todir=\"${dir.build.libs2}\"/>\n@@ -389,6 +390,7 @@\n         <mkdir dir=\"${dir.build.junit.html}\"/>\n         <copy file=\"${lib.xalan.1}\" todir=\"${dir.build.libs2}\"/>\n         <copy file=\"${lib.xalan.2}\" todir=\"${dir.build.libs2}\"/>\n+        <copy file=\"${lib.xalan.3}\" todir=\"${dir.build.libs2}\"/>\n         <copy file=\"${lib.logging.api}\" todir=\"${dir.build.libs2}\"/>\n         <copy file=\"${lib.junit}\" todir=\"${dir.build.libs2}\"/>\n         <copy file=\"${jar.library}\" todir=\"${dir.build.libs2}\"/>",
                "deletions": 1
            },
            {
                "sha": "f1a827825dd2b12ec95b5b56166186d0b7f0f680",
                "filename": "pom.xml",
                "blob_url": "https://github.com/apache/santuario-java/blob/ca9f5f29e0ed545a1296a0af848100c0dabc4005/pom.xml",
                "raw_url": "https://github.com/apache/santuario-java/raw/ca9f5f29e0ed545a1296a0af848100c0dabc4005/pom.xml",
                "status": "modified",
                "changes": 27,
                "additions": 15,
                "contents_url": "https://api.github.com/repos/apache/santuario-java/contents/pom.xml?ref=ca9f5f29e0ed545a1296a0af848100c0dabc4005",
                "patch": "@@ -40,11 +40,11 @@\n     <mailingLists>\n         <mailingList>\n             <name>XML Security Developer List</name>\n-            <subscribe>security-dev-subscribe@xml.apache.org</subscribe>\n+            <subscribe>dev-subscribe@santuario.apache.org</subscribe>\n             <unsubscribe>\n-                security-dev-unsubscribe@xml.apache.org\n+                dev-unsubscribe@santuario.apache.org\n             </unsubscribe>\n-            <post>security-dev@xml.apache.org</post>\n+            <post>dev@santuario.apache.org</post>\n             <archive>\n                 http://news.gmane.org/thread.php?group=gmane.text.xml.security.devel \n             </archive>\n@@ -95,12 +95,12 @@\n     </licenses>\n     <scm>\n         <connection>\n-            scm:svn:http://svn.apache.org/repos/asf/xml/security/trunk\n+            scm:svn:http://svn.apache.org/repos/asf/santuario/trunk\n         </connection>\n         <developerConnection>\n-            scm:svn:https://svn.apache.org/repos/asf/xml/security/trunk\n+            scm:svn:https://svn.apache.org/repos/asf/santuario/trunk\n         </developerConnection>\n-        <url>http://svn.apache.org/viewvc/xml/security/trunk</url>\n+        <url>http://svn.apache.org/viewvc/santuario/trunk</url>\n     </scm>\n     <organization>\n         <name>The Apache Software Foundation</name>\n@@ -140,6 +140,7 @@\n             <plugin>\n                 <groupId>org.apache.maven.plugins</groupId>\n                 <artifactId>maven-compiler-plugin</artifactId>\n+                <version>2.1</version>\n                 <configuration>\n                     <source>1.4</source>\n                     <target>1.4</target>\n@@ -149,6 +150,7 @@\n             <plugin>\n                 <groupId>org.apache.maven.plugins</groupId>\n                 <artifactId>maven-dependency-plugin</artifactId>\n+                <version>2.1</version>\n                 <executions>\n                     <execution>\n                         <id>copy-dependencies</id>\n@@ -169,6 +171,7 @@\n             <plugin>\n                 <groupId>org.apache.maven.plugins</groupId>\n                 <artifactId>maven-jar-plugin</artifactId>\n+                <version>2.3.1</version>\n                 <executions>\n                     <execution>\n                         <phase>test-compile</phase>\n@@ -187,7 +190,7 @@\n             <plugin>\n                 <groupId>org.apache.felix</groupId>\n                 <artifactId>maven-bundle-plugin</artifactId>\n-                <version>1.4.0</version>\n+                <version>1.4.3</version>\n                 <extensions>true</extensions>\n                 <configuration>\n                     <instructions>\n@@ -200,9 +203,9 @@\n                         <Specification-Version>${pom.version}</Specification-Version>\n \n                         <Export-Package>\n-                              org.apache.xml.security.*,\n-                              javax.xml.crypto.*,\n-                              org.jcp.xml.dsig.internal.*,\n+                              org.apache.xml.security.*;version=\"${pom.version}\",\n+                              javax.xml.crypto.*;version=\"${pom.version}\",\n+                              org.jcp.xml.dsig.internal.*;version=\"${pom.version}\",\n                         </Export-Package>\n                         <Import-Package>\n                               !org.apache.xml.security.*,\n@@ -220,7 +223,7 @@\n                 <plugin>\n                     <groupId>org.apache.maven.plugins</groupId>\n                     <artifactId>maven-source-plugin</artifactId>\n-                    <version>2.0.4</version>\n+                    <version>2.1.2</version>\n                     <executions>\n                         <execution>\n                             <goals>\n@@ -236,7 +239,7 @@\n                 <plugin>\n                     <groupId>org.apache.maven.plugins</groupId>\n                     <artifactId>maven-surefire-plugin</artifactId>\n-                    <version>2.5</version>\n+                    <version>2.6</version>\n                     <configuration>\n                         <reportFormat>brief</reportFormat>\n                         <useFile>false</useFile>",
                "deletions": 12
            }
        ]
    }
]