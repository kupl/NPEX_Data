[{"commit": "https://github.com/apache/myfaces-trinidad/commit/fe6305e12befd161bd752b378a84210aa18e84e7", "parent": "https://github.com/apache/myfaces-trinidad/commit/961e9e6327a9a992a8233195b46566b5050f4ac9", "message": "TRINIDAD-2558\nNPE with partialStateSaving off and viewCache off and myface core in restore View", "bug_id": "myfaces-trinidad_1", "file": [{"additions": 6, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/fe6305e12befd161bd752b378a84210aa18e84e7/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/application/StateManagerImpl.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/fe6305e12befd161bd752b378a84210aa18e84e7/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/application/StateManagerImpl.java", "sha": "43874ab199405e2f248b4deaf4302b42b189fe33", "changes": 7, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/application/StateManagerImpl.java?ref=fe6305e12befd161bd752b378a84210aa18e84e7", "patch": "@@ -837,8 +837,13 @@ else if (session instanceof HttpSession)\n         ((Structure) structure).createComponent();\n \n         if (state != null)\n+        {\n+          if (context.getViewRoot() == null)\n+          {\n+            context.setViewRoot(root);\n+          }\n           root.processRestoreState(context, state);\n-\n+        }\n         _LOG.finer(\"Restored state for view \\\"{0}\\\"\", viewId);\n         return root;\n       }", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/application/StateManagerImpl.java"}], "repo": "myfaces-trinidad"}, {"commit": "https://github.com/apache/myfaces-trinidad/commit/2821d90118637d5978224b0537a38c63ee6ae253", "parent": "https://github.com/apache/myfaces-trinidad/commit/012ef4c6163cb27f103a8ee7c80ddf928eda0d00", "message": "TRINIDAD-1146 - NPE from Google Bot (unknown agent)\nChange order of equals(), to avoid NPE from platformName.", "bug_id": "myfaces-trinidad_2", "file": [{"additions": 4, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/2821d90118637d5978224b0537a38c63ee6ae253/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/skin/MacOSSwitcherIcon.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/2821d90118637d5978224b0537a38c63ee6ae253/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/skin/MacOSSwitcherIcon.java", "sha": "5fa9bf56d52927718f7ded31f6d0457194c34333", "changes": 9, "status": "modified", "deletions": 5, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/skin/MacOSSwitcherIcon.java?ref=2821d90118637d5978224b0537a38c63ee6ae253", "patch": "@@ -99,12 +99,11 @@ public Integer getImageHeight(RenderingContext arc)\n   }\n \n   // Returns the Icon to use\n-  private Icon _getIcon(RenderingContext arc)\n+  private Icon _getIcon(RenderingContext rc)\n   {\n-    return (arc.getAgent().getPlatformName().equals(\n-                                 Agent.PLATFORM_MACOS)) ?\n-             _macOSIcon :\n-             _icon;\n+    return (Agent.PLATFORM_MACOS.equals(rc.getAgent().getPlatformName())) ?\n+      _macOSIcon :\n+      _icon;\n   }\n \n   private Icon _icon;", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/skin/MacOSSwitcherIcon.java"}], "repo": "myfaces-trinidad"}, {"commit": "https://github.com/apache/myfaces-trinidad/commit/674b1c6ee786053d8a6bef0bf5ac75274bbcc56f", "parent": "https://github.com/apache/myfaces-trinidad/commit/dbaa776ac586eb2aaf2cfa4bbb654806b47b9aa7", "message": "TRINIDAD-1146 - NPE from Google Bot (unknown agent)\nChange order of equals(), to avoid NPE from platformName.", "bug_id": "myfaces-trinidad_3", "file": [{"additions": 3, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/674b1c6ee786053d8a6bef0bf5ac75274bbcc56f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/skin/MacOSSwitcherIcon.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/674b1c6ee786053d8a6bef0bf5ac75274bbcc56f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/skin/MacOSSwitcherIcon.java", "sha": "bfdb10839dac1b7841191fff22f4d97138b4a36a", "changes": 7, "status": "modified", "deletions": 4, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/skin/MacOSSwitcherIcon.java?ref=674b1c6ee786053d8a6bef0bf5ac75274bbcc56f", "patch": "@@ -101,10 +101,9 @@ public Integer getImageHeight(RenderingContext arc)\n   // Returns the Icon to use\n   private Icon _getIcon(RenderingContext arc)\n   {\n-    return (arc.getAgent().getPlatformName().equals(\n-                                 Agent.PLATFORM_MACOS)) ?\n-             _macOSIcon :\n-             _icon;\n+    return (Agent.PLATFORM_MACOS.equals(arc.getAgent().getPlatformName())) ?\n+      _macOSIcon :\n+      _icon;\n   }\n \n   private Icon _icon;", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/skin/MacOSSwitcherIcon.java"}], "repo": "myfaces-trinidad"}, {"commit": "https://github.com/apache/myfaces-trinidad/commit/ec31b6292d7c40f851c1147bdfc50fc2e2205c1d", "parent": "https://github.com/apache/myfaces-trinidad/commit/91002895a9e787abea41618594bedac94d29d10d", "message": "fixed NPE", "bug_id": "myfaces-trinidad_4", "file": [{"additions": 2, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/ec31b6292d7c40f851c1147bdfc50fc2e2205c1d/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/config/upload/FileUploadConfiguratorImpl.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/ec31b6292d7c40f851c1147bdfc50fc2e2205c1d/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/config/upload/FileUploadConfiguratorImpl.java", "sha": "0a41669e6f6eb57f98069d08d15216e463a54e7e", "changes": 3, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/config/upload/FileUploadConfiguratorImpl.java?ref=ec31b6292d7c40f851c1147bdfc50fc2e2205c1d", "patch": "@@ -182,7 +182,8 @@ public void endRequest(ExternalContext externalContext)\n     if(!ExternalContextUtils.isPortlet(externalContext))\n     {\n       UploadedFiles files = UploadedFiles.getUploadedFiles(externalContext);\n-      files.dispose();\n+      if(files != null)\n+        files.dispose();\n     }\n   }\n ", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/config/upload/FileUploadConfiguratorImpl.java"}], "repo": "myfaces-trinidad"}, {"commit": "https://github.com/apache/myfaces-trinidad/commit/4d114d80b0e5a25dbb5ee4244b52744357622397", "parent": "https://github.com/apache/myfaces-trinidad/commit/5ff3ba62c2b58a08c69e2739f3bc5a123fc5e04f", "message": "fixed NPE", "bug_id": "myfaces-trinidad_5", "file": [{"additions": 2, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/4d114d80b0e5a25dbb5ee4244b52744357622397/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/config/upload/FileUploadConfiguratorImpl.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/4d114d80b0e5a25dbb5ee4244b52744357622397/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/config/upload/FileUploadConfiguratorImpl.java", "sha": "af2c2eb1ba9745a3ce127f8223ad3557cb3dd318", "changes": 3, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/config/upload/FileUploadConfiguratorImpl.java?ref=4d114d80b0e5a25dbb5ee4244b52744357622397", "patch": "@@ -179,7 +179,8 @@ public void endRequest(ExternalContext externalContext)\n     if(!ExternalContextUtils.isPortlet(externalContext))\n     {\n       UploadedFiles files = UploadedFiles.getUploadedFiles(externalContext);\n-      files.dispose();\n+      if(files != null)\n+        files.dispose();\n     }\n   }\n ", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/config/upload/FileUploadConfiguratorImpl.java"}], "repo": "myfaces-trinidad"}, {"commit": "https://github.com/apache/myfaces-trinidad/commit/cde6339b6316024723daf28b2fa361b85eea044e", "parent": "https://github.com/apache/myfaces-trinidad/commit/e62ab19a03dfa3fa0e150fa4f4c7f05f7025a7c3", "message": "npe constructor...", "bug_id": "myfaces-trinidad_6", "file": [{"additions": 1, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/cde6339b6316024723daf28b2fa361b85eea044e/trinidad-api/src/main/java/org/apache/myfaces/trinidad/validator/DateTimeRangeValidator.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/cde6339b6316024723daf28b2fa361b85eea044e/trinidad-api/src/main/java/org/apache/myfaces/trinidad/validator/DateTimeRangeValidator.java", "sha": "2cd1394d16695d0b81986b12b0d06ad97293226b", "changes": 2, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-api/src/main/java/org/apache/myfaces/trinidad/validator/DateTimeRangeValidator.java?ref=cde6339b6316024723daf28b2fa361b85eea044e", "patch": "@@ -281,7 +281,7 @@ public void validate(\n   {\n     if ((context == null) || (component == null))\n     {\n-      throw new NullPointerException();\n+      throw new NullPointerException(\"FacesContext or Component is null\");\n     }\n \n     if (value != null)", "filename": "trinidad-api/src/main/java/org/apache/myfaces/trinidad/validator/DateTimeRangeValidator.java"}], "repo": "myfaces-trinidad"}, {"commit": "https://github.com/apache/myfaces-trinidad/commit/3268dd98e78217a47a51c39009701eb18de773c6", "parent": "https://github.com/apache/myfaces-trinidad/commit/68986a9f530ed1b6a27cd31d95c493be5c0f98f5", "message": "npe constructor...", "bug_id": "myfaces-trinidad_7", "file": [{"additions": 1, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/3268dd98e78217a47a51c39009701eb18de773c6/trinidad/trinidad-api/src/main/java/org/apache/myfaces/trinidad/validator/DateTimeRangeValidator.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/3268dd98e78217a47a51c39009701eb18de773c6/trinidad/trinidad-api/src/main/java/org/apache/myfaces/trinidad/validator/DateTimeRangeValidator.java", "sha": "2cd1394d16695d0b81986b12b0d06ad97293226b", "changes": 2, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-api/src/main/java/org/apache/myfaces/trinidad/validator/DateTimeRangeValidator.java?ref=3268dd98e78217a47a51c39009701eb18de773c6", "patch": "@@ -281,7 +281,7 @@ public void validate(\n   {\n     if ((context == null) || (component == null))\n     {\n-      throw new NullPointerException();\n+      throw new NullPointerException(\"FacesContext or Component is null\");\n     }\n \n     if (value != null)", "filename": "trinidad/trinidad-api/src/main/java/org/apache/myfaces/trinidad/validator/DateTimeRangeValidator.java"}], "repo": "myfaces-trinidad"}, {"commit": "https://github.com/apache/myfaces-trinidad/commit/343ef7894b8c3b680a2cdc0656c10abb81413a52", "parent": "https://github.com/apache/myfaces-trinidad/commit/f432ac57634e9ba25d28874f806ad9fd5a81bd11", "message": "TRINIDAD-1234\nfixed npe", "bug_id": "myfaces-trinidad_8", "file": [{"additions": 1, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/343ef7894b8c3b680a2cdc0656c10abb81413a52/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SimpleSelectOneRenderer.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/343ef7894b8c3b680a2cdc0656c10abb81413a52/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SimpleSelectOneRenderer.java", "sha": "3cf736f7907a7c7c86cb1f71feef40042cf7f4ef", "changes": 2, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SimpleSelectOneRenderer.java?ref=343ef7894b8c3b680a2cdc0656c10abb81413a52", "patch": "@@ -217,7 +217,7 @@ private Object _convertIndexedSubmittedValue(\n     if (item != null)\n     {\n       Object converted = item.getValue();\n-      if (converter != null)\n+      if (converter != null && converted != null)\n       {\n         converted = converter.getAsObject(context, component, converted.toString());\n       }", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SimpleSelectOneRenderer.java"}], "repo": "myfaces-trinidad"}, {"commit": "https://github.com/apache/myfaces-trinidad/commit/e6a5e13bfb419bf01ece2844c13b164045127325", "parent": "https://github.com/apache/myfaces-trinidad/commit/7aa3d827629d9a46cd2462eb474ee07528fd08cd", "message": "NPE if label null", "bug_id": "myfaces-trinidad_9", "file": [{"additions": 539, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/e6a5e13bfb419bf01ece2844c13b164045127325/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/MessageBoxRenderer.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/e6a5e13bfb419bf01ece2844c13b164045127325/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/MessageBoxRenderer.java", "sha": "4fc93da93a9d1c9863fa50e99b23cbcde79e8487", "changes": 1087, "status": "modified", "deletions": 548, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/MessageBoxRenderer.java?ref=e6a5e13bfb419bf01ece2844c13b164045127325", "patch": "@@ -1,548 +1,539 @@\n-/*\n- *  Licensed to the Apache Software Foundation (ASF) under one\n- *  or more contributor license agreements.  See the NOTICE file\n- *  distributed with this work for additional information\n- *  regarding copyright ownership.  The ASF licenses this file\n- *  to you under the Apache License, Version 2.0 (the\n- *  \"License\"); you may not use this file except in compliance\n- *  with the License.  You may obtain a copy of the License at\n- * \n- *  http://www.apache.org/licenses/LICENSE-2.0\n- * \n- *  Unless required by applicable law or agreed to in writing,\n- *  software distributed under the License is distributed on an\n- *  \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- *  KIND, either express or implied.  See the License for the\n- *  specific language governing permissions and limitations\n- *  under the License.\n- */\n-package org.apache.myfaces.trinidadinternal.renderkit.core.xhtml;\n-\n-import java.io.IOException;\n-import java.util.HashMap;\n-import java.util.Iterator;\n-import java.util.Map;\n-\n-import javax.faces.application.FacesMessage;\n-import javax.faces.component.UIComponent;\n-import javax.faces.context.FacesContext;\n-import javax.faces.context.ResponseWriter;\n-\n-import org.apache.myfaces.trinidad.bean.FacesBean;\n-import org.apache.myfaces.trinidad.bean.PropertyKey;\n-import org.apache.myfaces.trinidad.component.core.output.CoreMessages;\n-\n-import org.apache.myfaces.trinidad.context.RenderingContext;\n-import org.apache.myfaces.trinidad.context.RequestContext;\n-import org.apache.myfaces.trinidad.skin.Icon;\n-import org.apache.myfaces.trinidad.util.LabeledFacesMessage;\n-import org.apache.myfaces.trinidadinternal.util.MessageUtils;\n-\n-/**\n- * Renderer for org.apache.myfaces.trinidad.Messages, family org.apache.myfaces.trinidad.Messages.\n- * \n- */\n-public class MessageBoxRenderer extends XhtmlRenderer\n-{\n-  public MessageBoxRenderer()\n-  {\n-    this(CoreMessages.TYPE);\n-  }\n-\n-  protected MessageBoxRenderer(FacesBean.Type type)\n-  {\n-    super(type);\n-  }\n-\n-  @Override\n-  protected void findTypeConstants(FacesBean.Type type)\n-  {\n-    super.findTypeConstants(type);\n-    _textKey     = type.findKey(\"text\");\n-    _messageKey     = type.findKey(\"message\");\n-    _globalOnlyKey  = type.findKey(\"globalOnly\");\n-\n-    _headerRenderer = new HeaderRenderer(type);\n-    _boxRenderer = new BoxRenderer(type);\n-  }\n-\n-  @Override\n-  public boolean getRendersChildren()\n-  {\n-    return true;\n-  }\n-  \n-  @SuppressWarnings(\"unchecked\")\n-  @Override\n-  protected void encodeAll(FacesContext context, RenderingContext arc,\n-      UIComponent component, FacesBean bean) throws IOException\n-  {\n-    // Force MessageBox to be re-rendered via PPR, since the set\n-    // of messages may have changed.\n-    RequestContext afContext = RequestContext.getCurrentInstance();\n-    if (afContext != null)\n-      afContext.addPartialTarget(component);\n-\n-    ResponseWriter writer = context.getResponseWriter();\n-    \n-    Map<String, String> origSkinResourceMap = arc.getSkinResourceKeyMap();\n-\n-    // Setup the rendering context, so that default skin selectors of\n-    // delegate renderers are mapped to those of this renderer\n-    arc.setSkinResourceKeyMap(_RESOURCE_KEY_MAP);\n-    \n-    // Check if INLINE validation mode is enabled\n-    boolean inlineValidation = \n-        RequestContext.ClientValidation.INLINE.equals(\n-            RequestContext.getCurrentInstance().getClientValidation());\n-    \n-    // Only when there's at least one message queued\n-    if (inlineValidation || context.getMessages().hasNext())\n-    {\n-      \n-      if (inlineValidation)\n-      {\n-        writer.startElement(XhtmlConstants.SCRIPT_ELEMENT, null);\n-        renderScriptDeferAttribute(context, arc);\n-        renderScriptTypeAttribute(context, arc);\n-        \n-        // Output the styles required for client-side manipulation of the MessageBox\n-        \n-        // Output style for list of messages\n-        writer.writeText(\"TrPage.getInstance().addStyleClassMap( {'\", null);\n-        writer.writeText(SkinSelectors.AF_MESSAGES_LIST_STYLE_CLASS + \"':'\", null);\n-        writer.writeText(arc.getStyleClass(SkinSelectors.AF_MESSAGES_LIST_STYLE_CLASS), null);\n-\n-        // Single entry list uses two styles\n-        writer.writeText(\"','\" + SkinSelectors.AF_MESSAGES_LIST_SINGLE_STYLE_CLASS + \"':'\", null);\n-        writer.writeText(arc.getStyleClass(SkinSelectors.AF_MESSAGES_LIST_STYLE_CLASS), null);\n-        writer.writeText(\" \" + arc.getStyleClass(SkinSelectors.AF_MESSAGES_LIST_SINGLE_STYLE_CLASS), null);\n-\n-        // Output Style for MessageBox Anchors\n-        writer.writeText(\"','\" + SkinSelectors.LINK_STYLE_CLASS + \"':'\", null);\n-        writer.writeText(arc.getStyleClass(SkinSelectors.LINK_STYLE_CLASS), null);\n-        writer.writeText(\"'} ); \", null);\n-\n-        // Output the script that will register the MessageBox with\n-        // the TrMessageBox javascript class that handles client-side\n-        // add/remove of messages.\n-        writer.writeText(\"TrMessageBox._registerMessageBox(\\\"\", null);\n-        writer.writeText(getClientId(context, component), null);\n-        writer.writeText(\"\\\");\", null);\n-        writer.endElement(\"script\");\n-      }\n-      \n-      // Delegate rendering of the outer shell to the BoxRenderer class\n-      // which will call back to this renderer to output the messages\n-      _boxRenderer.encodeAll(context, arc, component, bean);\n-    }\n-    else\n-    {\n-      // Always render an element, for update at PPR-time\n-      writer.startElement(XhtmlConstants.SPAN_ELEMENT, component);\n-      renderId(context, component);\n-      writer.endElement(XhtmlConstants.SPAN_ELEMENT);\n-    }\n-    \n-    // Reset the skin resource map\n-    arc.setSkinResourceKeyMap(origSkinResourceMap);\n-  }\n-  \n-  protected void _renderContent(\n-      FacesContext context,\n-      RenderingContext arc,\n-      UIComponent component,\n-      FacesBean bean) \n-      throws IOException\n-  {\n-    ResponseWriter writer = context.getResponseWriter();\n-    \n-    boolean globalOnly = isGlobalOnly(bean);\n-    \n-    // TODO - Merge styles into AF_MESSAGES_STYLE_CLASS\n-    writer.startElement(XhtmlConstants.DIV_ELEMENT, component);\n-    renderStyleClass(context, arc, SkinSelectors.AF_MESSAGES_BODY_STYLE_CLASS);\n-\n-    _renderHeader(context, arc, component, bean);\n-    \n-    // Render the 'message' attribute if specified\n-    String message = getMessage(bean);\n-    if (message != null)\n-    {\n-      writer.startElement(XhtmlConstants.DIV_ELEMENT, null);\n-      renderStyleClass(context, arc, SkinSelectors.AF_MESSAGES_MESSAGE_TEXT_STYLE_CLASS);\n-      writer.write(message);\n-      writer.endElement(XhtmlConstants.DIV_ELEMENT);\n-    }\n-\n-    // Render messages as a list\n-    writer.startElement(\"ol\", null);\n-    \n-    // Output an id for the list so client-side validation can \n-    // easily access the element\n-    String listId = getClientId(context, component) + \"__LIST__\";\n-    writer.writeAttribute(XhtmlConstants.ID_ATTRIBUTE, listId, null);\n-    \n-    // Switch list style depending if no. of messages is 1 or >1\n-    String[] styleClasses = null;\n-    if (MessageUtils.multipleMessagesQueued(context, globalOnly))\n-      styleClasses = new String[] {SkinSelectors.AF_MESSAGES_LIST_STYLE_CLASS};\n-    else\n-      styleClasses = new String[] {SkinSelectors.AF_MESSAGES_LIST_STYLE_CLASS, \n-        SkinSelectors.AF_MESSAGES_LIST_SINGLE_STYLE_CLASS};\n-\n-    renderStyleClasses(context, arc, styleClasses);\n-    \n-    _renderGlobalMessages(context, arc, component, bean);\n-    \n-    if (!globalOnly)\n-      _renderComponentMessages(context, arc, component, bean);\n-    \n-    // End of list\n-    writer.endElement(\"ol\");\n-    \n-    writer.endElement(XhtmlConstants.DIV_ELEMENT);\n-  }  \n-  \n-  @SuppressWarnings(\"unchecked\")\n-  protected void _renderGlobalMessages(\n-      FacesContext context,\n-      RenderingContext arc,\n-      UIComponent component,\n-      FacesBean bean) \n-      throws IOException\n-  {\n-    ResponseWriter writer = context.getResponseWriter();\n-\n-    // Get all messages without and id\n-    Iterator<FacesMessage> msgIter = context.getMessages(null);\n-    while (msgIter.hasNext())\n-    {\n-      FacesMessage msg = msgIter.next();\n-\n-      writer.startElement(\"li\", null);\n-\n-      String text = MessageUtils.getGlobalMessage(arc, msg.getSummary(), msg.getDetail());\n-      renderPossiblyFormattedText(context, text);\n-      \n-      writer.endElement(\"li\");\n-    }\n-  }\n-  \n-  @SuppressWarnings(\"unchecked\")\n-  protected void _renderComponentMessages(\n-      FacesContext context,\n-      RenderingContext arc,\n-      UIComponent component,\n-      FacesBean bean) \n-      throws IOException\n-  {\n-    ResponseWriter writer = context.getResponseWriter();\n-    \n-    Iterator<String> idIter = context.getClientIdsWithMessages();\n-    while (idIter.hasNext())\n-    {\n-      String id = idIter.next();\n-      \n-      // Skip global messages\n-      if (id == null)\n-        continue;\n-\n-      Iterator<FacesMessage> msgIter = context.getMessages(id);\n-      while (msgIter.hasNext())\n-      {\n-        FacesMessage msg = msgIter.next();\n-\n-        writer.startElement(\"li\", null);\n-        \n-        _renderMessageAnchor(context, arc, msg, id);\n-        \n-        String text = MessageUtils.getClientMessage(arc, msg.getSummary(), msg.getDetail());\n-\n-        renderPossiblyFormattedText(context, text);\n-        \n-        writer.endElement(\"li\");\n-      }\n-    }\n-  }\n-  \n-  protected void _renderHeader(\n-      FacesContext        context,\n-      RenderingContext arc,\n-      UIComponent         component,\n-      FacesBean           bean) throws IOException\n-  {\n-    delegateRenderer(context, arc, component, bean, _headerRenderer);\n-  }\n-\n-  protected void _renderMessageAnchor(\n-      FacesContext        context,\n-      RenderingContext arc,\n-      FacesMessage msg,\n-      String componentId) throws IOException\n-  {\n-    ResponseWriter writer = context.getResponseWriter();\n-    \n-    if (componentId == null)\n-      return;\n-\n-    // Anchor rendering currently only possible for messages that \n-    // contain a label, but we could use summary text in future\n-    if (msg instanceof LabeledFacesMessage)\n-    {\n-      LabeledFacesMessage labeledMsg = (LabeledFacesMessage)msg;\n-      String anchor = MessageUtils.getAnchor(componentId);\n-      if (anchor != null)\n-      {\n-        writer.startElement(XhtmlConstants.LINK_ELEMENT, null);\n-        renderStyleClass(context, arc, SkinSelectors.LINK_STYLE_CLASS);\n-        writer.writeAttribute(XhtmlConstants.HREF_ATTRIBUTE, \"#\" + anchor, null);\n-        writer.write(labeledMsg.getLabel().toString());\n-        writer.endElement(XhtmlConstants.LINK_ELEMENT);\n-      } \n-    }\n-  }\n-\n-  // Rendering delegate to handle output of the header for the message box\n-  private class HeaderRenderer extends PanelHeaderRenderer\n-  {\n-    public HeaderRenderer(FacesBean.Type type)\n-    {\n-      super(type);\n-    }\n-    \n-    @Override\n-    protected boolean shouldRenderId(FacesContext context, UIComponent component)\n-    {\n-      // Header will always be refreshed as sub-element of parent\n-      return false;\n-    }\n-    \n-    @Override\n-    protected void renderEventHandlers(FacesContext context, FacesBean bean)\n-        throws IOException\n-    {\n-      // Prevent HeaderRenderer from re-rendering event handlers\n-    }    \n-\n-    @Override\n-    protected String getMessageType(FacesBean bean)\n-    {\n-      String messageType = null;\n-      \n-      FacesMessage.Severity maxSeverity = \n-        FacesContext.getCurrentInstance().getMaximumSeverity();\n-      \n-      // Map FacesMessage severity to levels expected by panelHeaderRenderer\n-      if (maxSeverity == null)\n-        messageType = XhtmlConstants.MESSAGE_TYPE_ERROR;\n-      else if (FacesMessage.SEVERITY_FATAL.equals(maxSeverity))\n-        messageType = XhtmlConstants.MESSAGE_TYPE_ERROR;\n-      else if (FacesMessage.SEVERITY_ERROR.equals(maxSeverity))\n-        messageType = XhtmlConstants.MESSAGE_TYPE_ERROR;\n-      else if (FacesMessage.SEVERITY_WARN.equals(maxSeverity))\n-        messageType = XhtmlConstants.MESSAGE_TYPE_WARNING;\n-      else if (FacesMessage.SEVERITY_INFO.equals(maxSeverity))\n-        messageType = XhtmlConstants.MESSAGE_TYPE_INFO;\n-\n-      return messageType;\n-    }\n-    \n-    @Override\n-    protected String getText(RenderingContext arc, FacesBean bean,\n-        String messageType)\n-    {\n-      String text = MessageBoxRenderer.this.getText(bean);\n-      if (text != null)\n-        // Use Text attribute of this component for header text\n-        return text;\n-      \n-      // Otherwise parent will decide text & style based on messageType\n-      return super.getText(arc, bean, messageType);\n-    }\n-    \n-    @Override\n-    protected String getMessageIconName(String messageType)\n-    {\n-      String iconName = null;\n-\n-      // Use the af|messages skin selectors instead of those\n-      // used by panelHeader\n-      if (XhtmlConstants.MESSAGE_TYPE_ERROR.equals(messageType))\n-        iconName = SkinSelectors.AF_MESSAGES_ERROR_ICON_NAME;\n-      else if (XhtmlConstants.MESSAGE_TYPE_WARNING.equals(messageType))\n-        iconName = SkinSelectors.AF_MESSAGES_WARNING_ICON_NAME;\n-      else if (XhtmlConstants.MESSAGE_TYPE_INFO.equals(messageType))\n-        iconName = SkinSelectors.AF_MESSAGES_INFO_ICON_NAME;\n-      else if (XhtmlConstants.MESSAGE_TYPE_CONFIRMATION.equals(messageType))\n-        iconName = SkinSelectors.AF_MESSAGES_CONFIRMATION_ICON_NAME;\n-\n-      assert ((iconName != null) ||\n-              XhtmlConstants.MESSAGE_TYPE_NONE.equals(messageType));\n-\n-      return iconName;\n-    }\n-\n-  }\n-  \n-  // Delegate renderer, handles the outer element rendering and\n-  // provides option to wrap message box using rounded borders etc.\n-  private class BoxRenderer extends PanelBoxRenderer\n-  {\n-   \n-    public BoxRenderer(FacesBean.Type type)\n-    {\n-      super(type);\n-    }\n-    \n-    @Override\n-    protected boolean shouldRenderId(FacesContext context, UIComponent component)\n-    {\n-      // As panelBox is handling the outer rendering, then it should render\n-      // the id of the MessageBox component\n-      return true;\n-    }\n-   \n-    @Override\n-    protected String getBackground(FacesBean bean)\n-    {\n-      // Force use of 'light' style, so we know which style\n-      // to re-map in _RESOURCE_KEY_MAP\n-      return \"light\";\n-    }\n-    \n-    @Override\n-    protected String getInlineStyle(FacesBean bean)\n-    {\n-      String inlineStyle = super.getInlineStyle(bean);\n-      \n-      boolean inlineValidation = \n-        RequestContext.ClientValidation.INLINE.equals(\n-            RequestContext.getCurrentInstance().getClientValidation());\n-      \n-      if (!inlineValidation)\n-        return inlineStyle;\n-      \n-      boolean hasMessages = FacesContext.getCurrentInstance().getMessages().hasNext();\n-      \n-      if (hasMessages)\n-        return inlineStyle;\n-      \n-      // Ensure the MessageBox is hidden for inline mode when\n-      // there are no messages\n-      if (inlineStyle == null)\n-        return \"display:none\";\n-      else\n-        return inlineStyle + \";display:none\";\n-    }\n-    \n-    @Override\n-    protected boolean hasChildren(UIComponent component)\n-    {\n-      // Required to force panelBox to call render properly\n-      return true;\n-    }\n-    \n-    @Override\n-    protected void renderBody(FacesContext context, RenderingContext arc,\n-        UIComponent component, FacesBean bean, Object icon, Object text) throws IOException\n-    {\n-      // Pass control back to MessageBoxRenderer to continue rendering\n-      // the content of the message box.\n-      MessageBoxRenderer.this._renderContent(context, arc, component, bean);\n-    }\n-  }\n-    \n-  @Override\n-  protected boolean shouldRenderId(FacesContext context, UIComponent component)\n-  {\n-    // Normally BoxRenderer will output the id for this component, but\n-    // if we're just outputting an empty element for PPR purposes, then\n-    // this renderer should output the id.\n-    return true;\n-  }\n-\n-  protected String getText(FacesBean bean)\n-  {\n-    if (_textKey == null)\n-      return null;\n-    return toString(bean.getProperty(_textKey));\n-  }\n-\n-  protected String getMessage(FacesBean bean)\n-  {\n-    if (_messageKey == null)\n-      return null;\n-    return toString(bean.getProperty(_messageKey));\n-  }\n-\n-  protected boolean isGlobalOnly(FacesBean bean)\n-  {\n-    Object o = bean.getProperty(_globalOnlyKey);\n-    if (o == null)\n-      o = _globalOnlyKey.getDefault();\n-    return Boolean.TRUE.equals(o);\n-  }\n-\n-  private PropertyKey _textKey;\n-  private PropertyKey _messageKey;\n-  private PropertyKey _globalOnlyKey;\n-  private XhtmlRenderer _headerRenderer;\n-  private PanelBoxRenderer _boxRenderer;\n-\n-  // Map panelHeader & panelBox Styles/Icons etc. to this renderer's selectors.\n-  private static final Map<String, String> _RESOURCE_KEY_MAP;\n-\n-  static\n-  {\n-    _RESOURCE_KEY_MAP = new HashMap<String, String>();\n-    \n-    // translation keys\n-    _RESOURCE_KEY_MAP.put(\"af_panelHeader.INFORMATION\",\n-                              \"af_messages.INFORMATION\");\n-    _RESOURCE_KEY_MAP.put(\"af_panelHeader.WARNING\",\n-                              \"af_messages.WARNING\");\n-    _RESOURCE_KEY_MAP.put(\"af_panelHeader.ERROR\",\n-                              \"af_messages.ERROR\");\n-    _RESOURCE_KEY_MAP.put(\"af_panelHeader.CONFIRMATION\",\n-                              \"af_messages.CONFIRMATION\");\n-    // icons\n-    _RESOURCE_KEY_MAP.put(SkinSelectors.AF_PANEL_HEADER_ERROR_ICON_NAME,\n-        SkinSelectors.AF_MESSAGES_ERROR_ICON_NAME);\n-    _RESOURCE_KEY_MAP.put(SkinSelectors.AF_PANEL_HEADER_WARNING_ICON_NAME,\n-        SkinSelectors.AF_MESSAGES_WARNING_ICON_NAME);\n-    _RESOURCE_KEY_MAP.put(SkinSelectors.AF_PANEL_HEADER_INFO_ICON_NAME,\n-        SkinSelectors.AF_MESSAGES_INFO_ICON_NAME);\n-    _RESOURCE_KEY_MAP.put(SkinSelectors.AF_PANEL_HEADER_CONFIRMATION_ICON_NAME,\n-        SkinSelectors.AF_MESSAGES_CONFIRMATION_ICON_NAME);\n-\n-    // styles\n-    _RESOURCE_KEY_MAP.put(SkinSelectors.AF_PANEL_HEADER_ERROR_STYLE_CLASS,\n-        SkinSelectors.AF_MESSAGES_ERROR_STYLE_CLASS);\n-    _RESOURCE_KEY_MAP.put(SkinSelectors.AF_PANEL_HEADER_STYLE_CLASS,\n-        SkinSelectors.AF_MESSAGES_HEADER_STYLE_CLASS);\n-    \n-    // We forced the use of 'light' style above, so now map it\n-    _RESOURCE_KEY_MAP.put(SkinSelectors.AF_PANEL_BOX_LIGHT_STYLE_CLASS, \n-        SkinSelectors.AF_MESSAGES_STYLE_CLASS);\n-\n-    // frame styles\n-    _RESOURCE_KEY_MAP.put(SkinSelectors.AF_PANEL_BOX_TOP_START_STYLE_CLASS, \n-        SkinSelectors.AF_MESSAGES_TOP_START_STYLE_CLASS);\n-    _RESOURCE_KEY_MAP.put(SkinSelectors.AF_PANEL_BOX_TOP_STYLE_CLASS, \n-        SkinSelectors.AF_MESSAGES_TOP_STYLE_CLASS);\n-    _RESOURCE_KEY_MAP.put(SkinSelectors.AF_PANEL_BOX_TOP_END_STYLE_CLASS, \n-        SkinSelectors.AF_MESSAGES_TOP_END_STYLE_CLASS);\n-    _RESOURCE_KEY_MAP.put(SkinSelectors.AF_PANEL_BOX_START_STYLE_CLASS, \n-        SkinSelectors.AF_MESSAGES_START_STYLE_CLASS);\n-    _RESOURCE_KEY_MAP.put(SkinSelectors.AF_PANEL_BOX_END_STYLE_CLASS, \n-        SkinSelectors.AF_MESSAGES_END_STYLE_CLASS);\n-    _RESOURCE_KEY_MAP.put(SkinSelectors.AF_PANEL_BOX_BOTTOM_START_STYLE_CLASS, \n-        SkinSelectors.AF_MESSAGES_BOTTOM_START_STYLE_CLASS);\n-    _RESOURCE_KEY_MAP.put(SkinSelectors.AF_PANEL_BOX_BOTTOM_STYLE_CLASS, \n-        SkinSelectors.AF_MESSAGES_BOTTOM_STYLE_CLASS);\n-    _RESOURCE_KEY_MAP.put(SkinSelectors.AF_PANEL_BOX_BOTTOM_END_STYLE_CLASS, \n-        SkinSelectors.AF_MESSAGES_BOTTOM_END_STYLE_CLASS);\n-  } \n-  \n-}\n+/*\r\n+ *  Licensed to the Apache Software Foundation (ASF) under one\r\n+ *  or more contributor license agreements.  See the NOTICE file\r\n+ *  distributed with this work for additional information\r\n+ *  regarding copyright ownership.  The ASF licenses this file\r\n+ *  to you under the Apache License, Version 2.0 (the\r\n+ *  \"License\"); you may not use this file except in compliance\r\n+ *  with the License.  You may obtain a copy of the License at\r\n+ *\r\n+ *  http://www.apache.org/licenses/LICENSE-2.0\r\n+ *\r\n+ *  Unless required by applicable law or agreed to in writing,\r\n+ *  software distributed under the License is distributed on an\r\n+ *  \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n+ *  KIND, either express or implied.  See the License for the\r\n+ *  specific language governing permissions and limitations\r\n+ *  under the License.\r\n+ */\r\n+package org.apache.myfaces.trinidadinternal.renderkit.core.xhtml;\r\n+\r\n+import java.io.IOException;\r\n+import java.util.HashMap;\r\n+import java.util.Iterator;\r\n+import java.util.Map;\r\n+\r\n+import javax.faces.application.FacesMessage;\r\n+import javax.faces.component.UIComponent;\r\n+import javax.faces.context.FacesContext;\r\n+import javax.faces.context.ResponseWriter;\r\n+\r\n+import org.apache.myfaces.trinidad.bean.FacesBean;\r\n+import org.apache.myfaces.trinidad.bean.PropertyKey;\r\n+import org.apache.myfaces.trinidad.component.core.output.CoreMessages;\r\n+\r\n+import org.apache.myfaces.trinidad.context.RenderingContext;\r\n+import org.apache.myfaces.trinidad.context.RequestContext;\r\n+import org.apache.myfaces.trinidad.skin.Icon;\r\n+import org.apache.myfaces.trinidad.util.LabeledFacesMessage;\r\n+import org.apache.myfaces.trinidadinternal.util.MessageUtils;\r\n+\r\n+/**\r\n+ * Renderer for org.apache.myfaces.trinidad.Messages, family org.apache.myfaces.trinidad.Messages.\r\n+ *\r\n+ */\r\n+public class MessageBoxRenderer extends XhtmlRenderer\r\n+{\r\n+  public MessageBoxRenderer()\r\n+  {\r\n+    this(CoreMessages.TYPE);\r\n+  }\r\n+\r\n+  protected MessageBoxRenderer(FacesBean.Type type)\r\n+  {\r\n+    super(type);\r\n+  }\r\n+\r\n+  @Override\r\n+  protected void findTypeConstants(FacesBean.Type type)\r\n+  {\r\n+    super.findTypeConstants(type);\r\n+    _textKey     = type.findKey(\"text\");\r\n+    _messageKey     = type.findKey(\"message\");\r\n+    _globalOnlyKey  = type.findKey(\"globalOnly\");\r\n+\r\n+    _headerRenderer = new HeaderRenderer(type);\r\n+    _boxRenderer = new BoxRenderer(type);\r\n+  }\r\n+\r\n+  @Override\r\n+  public boolean getRendersChildren()\r\n+  {\r\n+    return true;\r\n+  }\r\n+\r\n+  @SuppressWarnings(\"unchecked\")\r\n+  @Override\r\n+  protected void encodeAll(FacesContext context, RenderingContext arc,\r\n+      UIComponent component, FacesBean bean) throws IOException\r\n+  {\r\n+    // Force MessageBox to be re-rendered via PPR, since the set\r\n+    // of messages may have changed.\r\n+    RequestContext afContext = RequestContext.getCurrentInstance();\r\n+    if (afContext != null)\r\n+      afContext.addPartialTarget(component);\r\n+\r\n+    ResponseWriter writer = context.getResponseWriter();\r\n+\r\n+    // Check if INLINE validation mode is enabled\r\n+    boolean inlineValidation =\r\n+        RequestContext.ClientValidation.INLINE.equals(\r\n+            RequestContext.getCurrentInstance().getClientValidation());\r\n+\r\n+    // Only when there's at least one message queued\r\n+    if (inlineValidation || context.getMessages().hasNext())\r\n+    {\r\n+\r\n+      if (inlineValidation)\r\n+      {\r\n+        writer.startElement(XhtmlConstants.SCRIPT_ELEMENT, null);\r\n+        renderScriptDeferAttribute(context, arc);\r\n+        renderScriptTypeAttribute(context, arc);\r\n+\r\n+        // Output the styles required for client-side manipulation of the MessageBox\r\n+\r\n+        // Output style for list of messages\r\n+        writer.writeText(\"TrPage.getInstance().addStyleClassMap( {'\", null);\r\n+        writer.writeText(SkinSelectors.AF_MESSAGES_LIST_STYLE_CLASS + \"':'\", null);\r\n+        writer.writeText(arc.getStyleClass(SkinSelectors.AF_MESSAGES_LIST_STYLE_CLASS), null);\r\n+\r\n+        // Single entry list uses two styles\r\n+        writer.writeText(\"','\" + SkinSelectors.AF_MESSAGES_LIST_SINGLE_STYLE_CLASS + \"':'\", null);\r\n+        writer.writeText(arc.getStyleClass(SkinSelectors.AF_MESSAGES_LIST_STYLE_CLASS), null);\r\n+        writer.writeText(\" \" + arc.getStyleClass(SkinSelectors.AF_MESSAGES_LIST_SINGLE_STYLE_CLASS), null);\r\n+\r\n+        // Output Style for MessageBox Anchors\r\n+        writer.writeText(\"','\" + SkinSelectors.LINK_STYLE_CLASS + \"':'\", null);\r\n+        writer.writeText(arc.getStyleClass(SkinSelectors.LINK_STYLE_CLASS), null);\r\n+        writer.writeText(\"'} ); \", null);\r\n+\r\n+        // Output the script that will register the MessageBox with\r\n+        // the TrMessageBox javascript class that handles client-side\r\n+        // add/remove of messages.\r\n+        writer.writeText(\"TrMessageBox._registerMessageBox(\\\"\", null);\r\n+        writer.writeText(getClientId(context, component), null);\r\n+        writer.writeText(\"\\\");\", null);\r\n+        writer.endElement(\"script\");\r\n+      }\r\n+\r\n+      // Setup the rendering context, so that default skin selectors of\r\n+      // delegate renderers are mapped to those of this renderer\r\n+      arc.setSkinResourceKeyMap(_RESOURCE_KEY_MAP);\r\n+\r\n+      // Delegate rendering of the outer shell to the BoxRenderer class\r\n+      // which will call back to this renderer to output the messages\r\n+      _boxRenderer.encodeAll(context, arc, component, bean);\r\n+    }\r\n+    else\r\n+    {\r\n+      // Always render an element, for update at PPR-time\r\n+      writer.startElement(XhtmlConstants.SPAN_ELEMENT, component);\r\n+      renderId(context, component);\r\n+      writer.endElement(XhtmlConstants.SPAN_ELEMENT);\r\n+    }\r\n+  }\r\n+\r\n+  protected void _renderContent(\r\n+      FacesContext context,\r\n+      RenderingContext arc,\r\n+      UIComponent component,\r\n+      FacesBean bean)\r\n+      throws IOException\r\n+  {\r\n+    ResponseWriter writer = context.getResponseWriter();\r\n+\r\n+    boolean globalOnly = isGlobalOnly(bean);\r\n+\r\n+    // TODO - Merge styles into AF_MESSAGES_STYLE_CLASS\r\n+    writer.startElement(XhtmlConstants.DIV_ELEMENT, component);\r\n+    renderStyleClass(context, arc, SkinSelectors.AF_MESSAGES_BODY_STYLE_CLASS);\r\n+\r\n+    _renderHeader(context, arc, component, bean);\r\n+\r\n+    // Render the 'message' attribute if specified\r\n+    String message = getMessage(bean);\r\n+    if (message != null)\r\n+    {\r\n+      writer.startElement(XhtmlConstants.DIV_ELEMENT, null);\r\n+      renderStyleClass(context, arc, SkinSelectors.AF_MESSAGES_MESSAGE_TEXT_STYLE_CLASS);\r\n+      writer.write(message);\r\n+      writer.endElement(XhtmlConstants.DIV_ELEMENT);\r\n+    }\r\n+\r\n+    // Render messages as a list\r\n+    writer.startElement(\"ol\", null);\r\n+\r\n+    // Output an id for the list so client-side validation can\r\n+    // easily access the element\r\n+    String listId = getClientId(context, component) + \"__LIST__\";\r\n+    writer.writeAttribute(XhtmlConstants.ID_ATTRIBUTE, listId, null);\r\n+\r\n+    // Switch list style depending if no. of messages is 1 or >1\r\n+    String[] styleClasses = null;\r\n+    if (MessageUtils.multipleMessagesQueued(context, globalOnly))\r\n+      styleClasses = new String[] {SkinSelectors.AF_MESSAGES_LIST_STYLE_CLASS};\r\n+    else\r\n+      styleClasses = new String[] {SkinSelectors.AF_MESSAGES_LIST_STYLE_CLASS,\r\n+        SkinSelectors.AF_MESSAGES_LIST_SINGLE_STYLE_CLASS};\r\n+\r\n+    renderStyleClasses(context, arc, styleClasses);\r\n+\r\n+    _renderGlobalMessages(context, arc, component, bean);\r\n+\r\n+    if (!globalOnly)\r\n+      _renderComponentMessages(context, arc, component, bean);\r\n+\r\n+    // End of list\r\n+    writer.endElement(\"ol\");\r\n+\r\n+    writer.endElement(XhtmlConstants.DIV_ELEMENT);\r\n+  }\r\n+\r\n+  @SuppressWarnings(\"unchecked\")\r\n+  protected void _renderGlobalMessages(\r\n+      FacesContext context,\r\n+      RenderingContext arc,\r\n+      UIComponent component,\r\n+      FacesBean bean)\r\n+      throws IOException\r\n+  {\r\n+    ResponseWriter writer = context.getResponseWriter();\r\n+\r\n+    // Get all messages without and id\r\n+    Iterator<FacesMessage> msgIter = context.getMessages(null);\r\n+    while (msgIter.hasNext())\r\n+    {\r\n+      FacesMessage msg = msgIter.next();\r\n+\r\n+      writer.startElement(\"li\", null);\r\n+\r\n+      String text = MessageUtils.getGlobalMessage(arc, msg.getSummary(), msg.getDetail());\r\n+      renderPossiblyFormattedText(context, text);\r\n+\r\n+      writer.endElement(\"li\");\r\n+    }\r\n+  }\r\n+\r\n+  @SuppressWarnings(\"unchecked\")\r\n+  protected void _renderComponentMessages(\r\n+      FacesContext context,\r\n+      RenderingContext arc,\r\n+      UIComponent component,\r\n+      FacesBean bean)\r\n+      throws IOException\r\n+  {\r\n+    ResponseWriter writer = context.getResponseWriter();\r\n+\r\n+    Iterator<String> idIter = context.getClientIdsWithMessages();\r\n+    while (idIter.hasNext())\r\n+    {\r\n+      String id = idIter.next();\r\n+\r\n+      // Skip global messages\r\n+      if (id == null)\r\n+        continue;\r\n+\r\n+      Iterator<FacesMessage> msgIter = context.getMessages(id);\r\n+      while (msgIter.hasNext())\r\n+      {\r\n+        FacesMessage msg = msgIter.next();\r\n+\r\n+        writer.startElement(\"li\", null);\r\n+\r\n+        _renderMessageAnchor(context, arc, msg, id);\r\n+\r\n+        String text = MessageUtils.getClientMessage(arc, msg.getSummary(), msg.getDetail());\r\n+\r\n+        renderPossiblyFormattedText(context, text);\r\n+\r\n+        writer.endElement(\"li\");\r\n+      }\r\n+    }\r\n+  }\r\n+\r\n+  protected void _renderHeader(\r\n+      FacesContext        context,\r\n+      RenderingContext arc,\r\n+      UIComponent         component,\r\n+      FacesBean           bean) throws IOException\r\n+  {\r\n+    delegateRenderer(context, arc, component, bean, _headerRenderer);\r\n+  }\r\n+\r\n+  protected void _renderMessageAnchor(\r\n+      FacesContext        context,\r\n+      RenderingContext arc,\r\n+      FacesMessage msg,\r\n+      String componentId) throws IOException\r\n+  {\r\n+    ResponseWriter writer = context.getResponseWriter();\r\n+\r\n+    if (componentId == null)\r\n+      return;\r\n+\r\n+    // Anchor rendering currently only possible for messages that\r\n+    // contain a label, but we could use summary text in future\r\n+    if (msg instanceof LabeledFacesMessage)\r\n+    {\r\n+      LabeledFacesMessage labeledMsg = (LabeledFacesMessage)msg;\r\n+      String anchor = MessageUtils.getAnchor(componentId);\r\n+      if (anchor != null)\r\n+      {\r\n+        writer.startElement(XhtmlConstants.LINK_ELEMENT, null);\r\n+        renderStyleClass(context, arc, SkinSelectors.LINK_STYLE_CLASS);\r\n+        writer.writeAttribute(XhtmlConstants.HREF_ATTRIBUTE, \"#\" + anchor, null);\r\n+        writer.write(labeledMsg.getLabel().toString());\r\n+        writer.endElement(XhtmlConstants.LINK_ELEMENT);\r\n+      }\r\n+    }\r\n+  }\r\n+\r\n+  // Rendering delegate to handle output of the header for the message box\r\n+  private class HeaderRenderer extends PanelHeaderRenderer\r\n+  {\r\n+    public HeaderRenderer(FacesBean.Type type)\r\n+    {\r\n+      super(type);\r\n+    }\r\n+\r\n+    @Override\r\n+    protected boolean shouldRenderId(FacesContext context, UIComponent component)\r\n+    {\r\n+      // Header will always be refreshed as sub-element of parent\r\n+      return false;\r\n+    }\r\n+\r\n+    @Override\r\n+    protected void renderEventHandlers(FacesContext context, FacesBean bean)\r\n+        throws IOException\r\n+    {\r\n+      // Prevent HeaderRenderer from re-rendering event handlers\r\n+    }\r\n+\r\n+    @Override\r\n+    protected String getMessageType(FacesBean bean)\r\n+    {\r\n+      String messageType = null;\r\n+\r\n+      FacesMessage.Severity maxSeverity =\r\n+        FacesContext.getCurrentInstance().getMaximumSeverity();\r\n+\r\n+      // Map FacesMessage severity to levels expected by panelHeaderRenderer\r\n+      if (maxSeverity == null)\r\n+        messageType = XhtmlConstants.MESSAGE_TYPE_ERROR;\r\n+      else if (FacesMessage.SEVERITY_FATAL.equals(maxSeverity))\r\n+        messageType = XhtmlConstants.MESSAGE_TYPE_ERROR;\r\n+      else if (FacesMessage.SEVERITY_ERROR.equals(maxSeverity))\r\n+        messageType = XhtmlConstants.MESSAGE_TYPE_ERROR;\r\n+      else if (FacesMessage.SEVERITY_WARN.equals(maxSeverity))\r\n+        messageType = XhtmlConstants.MESSAGE_TYPE_WARNING;\r\n+      else if (FacesMessage.SEVERITY_INFO.equals(maxSeverity))\r\n+        messageType = XhtmlConstants.MESSAGE_TYPE_INFO;\r\n+\r\n+      return messageType;\r\n+    }\r\n+\r\n+    @Override\r\n+    protected String getText(RenderingContext arc, FacesBean bean,\r\n+        String messageType)\r\n+    {\r\n+      String text = MessageBoxRenderer.this.getText(bean);\r\n+      if (text != null)\r\n+        // Use Text attribute of this component for header text\r\n+        return text;\r\n+\r\n+      // Otherwise parent will decide text & style based on messageType\r\n+      return super.getText(arc, bean, messageType);\r\n+    }\r\n+\r\n+    @Override\r\n+    protected String getMessageIconName(String messageType)\r\n+    {\r\n+      String iconName = null;\r\n+\r\n+      // Use the af|messages skin selectors instead of those\r\n+      // used by panelHeader\r\n+      if (XhtmlConstants.MESSAGE_TYPE_ERROR.equals(messageType))\r\n+        iconName = SkinSelectors.AF_MESSAGES_ERROR_ICON_NAME;\r\n+      else if (XhtmlConstants.MESSAGE_TYPE_WARNING.equals(messageType))\r\n+        iconName = SkinSelectors.AF_MESSAGES_WARNING_ICON_NAME;\r\n+      else if (XhtmlConstants.MESSAGE_TYPE_INFO.equals(messageType))\r\n+        iconName = SkinSelectors.AF_MESSAGES_INFO_ICON_NAME;\r\n+      else if (XhtmlConstants.MESSAGE_TYPE_CONFIRMATION.equals(messageType))\r\n+        iconName = SkinSelectors.AF_MESSAGES_CONFIRMATION_ICON_NAME;\r\n+\r\n+      assert ((iconName != null) ||\r\n+              XhtmlConstants.MESSAGE_TYPE_NONE.equals(messageType));\r\n+\r\n+      return iconName;\r\n+    }\r\n+\r\n+  }\r\n+\r\n+  // Delegate renderer, handles the outer element rendering and\r\n+  // provides option to wrap message box using rounded borders etc.\r\n+  private class BoxRenderer extends PanelBoxRenderer\r\n+  {\r\n+\r\n+    public BoxRenderer(FacesBean.Type type)\r\n+    {\r\n+      super(type);\r\n+    }\r\n+\r\n+    @Override\r\n+    protected boolean shouldRenderId(FacesContext context, UIComponent component)\r\n+    {\r\n+      // As panelBox is handling the outer rendering, then it should render\r\n+      // the id of the MessageBox component\r\n+      return true;\r\n+    }\r\n+\r\n+    @Override\r\n+    protected String getBackground(FacesBean bean)\r\n+    {\r\n+      // Force use of 'light' style, so we know which style\r\n+      // to re-map in _RESOURCE_KEY_MAP\r\n+      return \"light\";\r\n+    }\r\n+\r\n+    @Override\r\n+    protected String getInlineStyle(FacesBean bean)\r\n+    {\r\n+      String inlineStyle = super.getInlineStyle(bean);\r\n+\r\n+      boolean inlineValidation =\r\n+        RequestContext.ClientValidation.INLINE.equals(\r\n+            RequestContext.getCurrentInstance().getClientValidation());\r\n+\r\n+      if (!inlineValidation)\r\n+        return inlineStyle;\r\n+\r\n+      boolean hasMessages = FacesContext.getCurrentInstance().getMessages().hasNext();\r\n+\r\n+      if (hasMessages)\r\n+        return inlineStyle;\r\n+\r\n+      // Ensure the MessageBox is hidden for inline mode when there are no messages\r\n+      return inlineStyle + \";display:none;\";\r\n+    }\r\n+\r\n+    @Override\r\n+    protected boolean hasChildren(UIComponent component)\r\n+    {\r\n+      // Required to force panelBox to call render properly\r\n+      return true;\r\n+    }\r\n+\r\n+    @Override\r\n+    protected void renderBody(FacesContext context, RenderingContext arc,\r\n+        UIComponent component, FacesBean bean, Object icon, Object text) throws IOException\r\n+    {\r\n+      // Pass control back to MessageBoxRenderer to continue rendering\r\n+      // the content of the message box.\r\n+      MessageBoxRenderer.this._renderContent(context, arc, component, bean);\r\n+    }\r\n+  }\r\n+\r\n+  @Override\r\n+  protected boolean shouldRenderId(FacesContext context, UIComponent component)\r\n+  {\r\n+    // Normally BoxRenderer will output the id for this component, but\r\n+    // if we're just outputting an empty element for PPR purposes, then\r\n+    // this renderer should output the id.\r\n+    return true;\r\n+  }\r\n+\r\n+  protected String getText(FacesBean bean)\r\n+  {\r\n+    if (_textKey == null)\r\n+      return null;\r\n+    return toString(bean.getProperty(_textKey));\r\n+  }\r\n+\r\n+  protected String getMessage(FacesBean bean)\r\n+  {\r\n+    if (_messageKey == null)\r\n+      return null;\r\n+    return toString(bean.getProperty(_messageKey));\r\n+  }\r\n+\r\n+  protected boolean isGlobalOnly(FacesBean bean)\r\n+  {\r\n+    Object o = bean.getProperty(_globalOnlyKey);\r\n+    if (o == null)\r\n+      o = _globalOnlyKey.getDefault();\r\n+    return Boolean.TRUE.equals(o);\r\n+  }\r\n+\r\n+  private PropertyKey _textKey;\r\n+  private PropertyKey _messageKey;\r\n+  private PropertyKey _globalOnlyKey;\r\n+  private XhtmlRenderer _headerRenderer;\r\n+  private PanelBoxRenderer _boxRenderer;\r\n+\r\n+  // Map panelHeader & panelBox Styles/Icons etc. to this renderer's selectors.\r\n+  private static final Map<String, String> _RESOURCE_KEY_MAP;\r\n+\r\n+  static\r\n+  {\r\n+    _RESOURCE_KEY_MAP = new HashMap<String, String>();\r\n+\r\n+    // translation keys\r\n+    _RESOURCE_KEY_MAP.put(\"af_panelHeader.INFORMATION\",\r\n+                              \"af_messages.INFORMATION\");\r\n+    _RESOURCE_KEY_MAP.put(\"af_panelHeader.WARNING\",\r\n+                              \"af_messages.WARNING\");\r\n+    _RESOURCE_KEY_MAP.put(\"af_panelHeader.ERROR\",\r\n+                              \"af_messages.ERROR\");\r\n+    _RESOURCE_KEY_MAP.put(\"af_panelHeader.CONFIRMATION\",\r\n+                              \"af_messages.CONFIRMATION\");\r\n+    // icons\r\n+    _RESOURCE_KEY_MAP.put(SkinSelectors.AF_PANEL_HEADER_ERROR_ICON_NAME,\r\n+        SkinSelectors.AF_MESSAGES_ERROR_ICON_NAME);\r\n+    _RESOURCE_KEY_MAP.put(SkinSelectors.AF_PANEL_HEADER_WARNING_ICON_NAME,\r\n+        SkinSelectors.AF_MESSAGES_WARNING_ICON_NAME);\r\n+    _RESOURCE_KEY_MAP.put(SkinSelectors.AF_PANEL_HEADER_INFO_ICON_NAME,\r\n+        SkinSelectors.AF_MESSAGES_INFO_ICON_NAME);\r\n+    _RESOURCE_KEY_MAP.put(SkinSelectors.AF_PANEL_HEADER_CONFIRMATION_ICON_NAME,\r\n+        SkinSelectors.AF_MESSAGES_CONFIRMATION_ICON_NAME);\r\n+\r\n+    // styles\r\n+    _RESOURCE_KEY_MAP.put(SkinSelectors.AF_PANEL_HEADER_ERROR_STYLE_CLASS,\r\n+        SkinSelectors.AF_MESSAGES_ERROR_STYLE_CLASS);\r\n+    _RESOURCE_KEY_MAP.put(SkinSelectors.AF_PANEL_HEADER_STYLE_CLASS,\r\n+        SkinSelectors.AF_MESSAGES_HEADER_STYLE_CLASS);\r\n+\r\n+    // We forced the use of 'light' style above, so now map it\r\n+    _RESOURCE_KEY_MAP.put(SkinSelectors.AF_PANEL_BOX_LIGHT_STYLE_CLASS,\r\n+        SkinSelectors.AF_MESSAGES_STYLE_CLASS);\r\n+\r\n+    // frame styles\r\n+    _RESOURCE_KEY_MAP.put(SkinSelectors.AF_PANEL_BOX_TOP_START_STYLE_CLASS,\r\n+        SkinSelectors.AF_MESSAGES_TOP_START_STYLE_CLASS);\r\n+    _RESOURCE_KEY_MAP.put(SkinSelectors.AF_PANEL_BOX_TOP_STYLE_CLASS,\r\n+        SkinSelectors.AF_MESSAGES_TOP_STYLE_CLASS);\r\n+    _RESOURCE_KEY_MAP.put(SkinSelectors.AF_PANEL_BOX_TOP_END_STYLE_CLASS,\r\n+        SkinSelectors.AF_MESSAGES_TOP_END_STYLE_CLASS);\r\n+    _RESOURCE_KEY_MAP.put(SkinSelectors.AF_PANEL_BOX_START_STYLE_CLASS,\r\n+        SkinSelectors.AF_MESSAGES_START_STYLE_CLASS);\r\n+    _RESOURCE_KEY_MAP.put(SkinSelectors.AF_PANEL_BOX_END_STYLE_CLASS,\r\n+        SkinSelectors.AF_MESSAGES_END_STYLE_CLASS);\r\n+    _RESOURCE_KEY_MAP.put(SkinSelectors.AF_PANEL_BOX_BOTTOM_START_STYLE_CLASS,\r\n+        SkinSelectors.AF_MESSAGES_BOTTOM_START_STYLE_CLASS);\r\n+    _RESOURCE_KEY_MAP.put(SkinSelectors.AF_PANEL_BOX_BOTTOM_STYLE_CLASS,\r\n+        SkinSelectors.AF_MESSAGES_BOTTOM_STYLE_CLASS);\r\n+    _RESOURCE_KEY_MAP.put(SkinSelectors.AF_PANEL_BOX_BOTTOM_END_STYLE_CLASS,\r\n+        SkinSelectors.AF_MESSAGES_BOTTOM_END_STYLE_CLASS);\r\n+  }\r\n+\r\n+}\r", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/MessageBoxRenderer.java"}], "repo": "myfaces-trinidad"}, {"commit": "https://github.com/apache/myfaces-trinidad/commit/0e02e77eca8ce671d43eac3830decb14eb3befb6", "parent": "https://github.com/apache/myfaces-trinidad/commit/ac51d3cb76f1e98156ddf82a9738cec6fff4edbd", "message": "NPE if label null", "bug_id": "myfaces-trinidad_10", "file": [{"additions": 539, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/0e02e77eca8ce671d43eac3830decb14eb3befb6/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/MessageBoxRenderer.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/0e02e77eca8ce671d43eac3830decb14eb3befb6/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/MessageBoxRenderer.java", "sha": "4fc93da93a9d1c9863fa50e99b23cbcde79e8487", "changes": 1087, "status": "modified", "deletions": 548, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/MessageBoxRenderer.java?ref=0e02e77eca8ce671d43eac3830decb14eb3befb6", "patch": "@@ -1,548 +1,539 @@\n-/*\n- *  Licensed to the Apache Software Foundation (ASF) under one\n- *  or more contributor license agreements.  See the NOTICE file\n- *  distributed with this work for additional information\n- *  regarding copyright ownership.  The ASF licenses this file\n- *  to you under the Apache License, Version 2.0 (the\n- *  \"License\"); you may not use this file except in compliance\n- *  with the License.  You may obtain a copy of the License at\n- * \n- *  http://www.apache.org/licenses/LICENSE-2.0\n- * \n- *  Unless required by applicable law or agreed to in writing,\n- *  software distributed under the License is distributed on an\n- *  \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- *  KIND, either express or implied.  See the License for the\n- *  specific language governing permissions and limitations\n- *  under the License.\n- */\n-package org.apache.myfaces.trinidadinternal.renderkit.core.xhtml;\n-\n-import java.io.IOException;\n-import java.util.HashMap;\n-import java.util.Iterator;\n-import java.util.Map;\n-\n-import javax.faces.application.FacesMessage;\n-import javax.faces.component.UIComponent;\n-import javax.faces.context.FacesContext;\n-import javax.faces.context.ResponseWriter;\n-\n-import org.apache.myfaces.trinidad.bean.FacesBean;\n-import org.apache.myfaces.trinidad.bean.PropertyKey;\n-import org.apache.myfaces.trinidad.component.core.output.CoreMessages;\n-\n-import org.apache.myfaces.trinidad.context.RenderingContext;\n-import org.apache.myfaces.trinidad.context.RequestContext;\n-import org.apache.myfaces.trinidad.skin.Icon;\n-import org.apache.myfaces.trinidad.util.LabeledFacesMessage;\n-import org.apache.myfaces.trinidadinternal.util.MessageUtils;\n-\n-/**\n- * Renderer for org.apache.myfaces.trinidad.Messages, family org.apache.myfaces.trinidad.Messages.\n- * \n- */\n-public class MessageBoxRenderer extends XhtmlRenderer\n-{\n-  public MessageBoxRenderer()\n-  {\n-    this(CoreMessages.TYPE);\n-  }\n-\n-  protected MessageBoxRenderer(FacesBean.Type type)\n-  {\n-    super(type);\n-  }\n-\n-  @Override\n-  protected void findTypeConstants(FacesBean.Type type)\n-  {\n-    super.findTypeConstants(type);\n-    _textKey     = type.findKey(\"text\");\n-    _messageKey     = type.findKey(\"message\");\n-    _globalOnlyKey  = type.findKey(\"globalOnly\");\n-\n-    _headerRenderer = new HeaderRenderer(type);\n-    _boxRenderer = new BoxRenderer(type);\n-  }\n-\n-  @Override\n-  public boolean getRendersChildren()\n-  {\n-    return true;\n-  }\n-  \n-  @SuppressWarnings(\"unchecked\")\n-  @Override\n-  protected void encodeAll(FacesContext context, RenderingContext arc,\n-      UIComponent component, FacesBean bean) throws IOException\n-  {\n-    // Force MessageBox to be re-rendered via PPR, since the set\n-    // of messages may have changed.\n-    RequestContext afContext = RequestContext.getCurrentInstance();\n-    if (afContext != null)\n-      afContext.addPartialTarget(component);\n-\n-    ResponseWriter writer = context.getResponseWriter();\n-    \n-    Map<String, String> origSkinResourceMap = arc.getSkinResourceKeyMap();\n-\n-    // Setup the rendering context, so that default skin selectors of\n-    // delegate renderers are mapped to those of this renderer\n-    arc.setSkinResourceKeyMap(_RESOURCE_KEY_MAP);\n-    \n-    // Check if INLINE validation mode is enabled\n-    boolean inlineValidation = \n-        RequestContext.ClientValidation.INLINE.equals(\n-            RequestContext.getCurrentInstance().getClientValidation());\n-    \n-    // Only when there's at least one message queued\n-    if (inlineValidation || context.getMessages().hasNext())\n-    {\n-      \n-      if (inlineValidation)\n-      {\n-        writer.startElement(XhtmlConstants.SCRIPT_ELEMENT, null);\n-        renderScriptDeferAttribute(context, arc);\n-        renderScriptTypeAttribute(context, arc);\n-        \n-        // Output the styles required for client-side manipulation of the MessageBox\n-        \n-        // Output style for list of messages\n-        writer.writeText(\"TrPage.getInstance().addStyleClassMap( {'\", null);\n-        writer.writeText(SkinSelectors.AF_MESSAGES_LIST_STYLE_CLASS + \"':'\", null);\n-        writer.writeText(arc.getStyleClass(SkinSelectors.AF_MESSAGES_LIST_STYLE_CLASS), null);\n-\n-        // Single entry list uses two styles\n-        writer.writeText(\"','\" + SkinSelectors.AF_MESSAGES_LIST_SINGLE_STYLE_CLASS + \"':'\", null);\n-        writer.writeText(arc.getStyleClass(SkinSelectors.AF_MESSAGES_LIST_STYLE_CLASS), null);\n-        writer.writeText(\" \" + arc.getStyleClass(SkinSelectors.AF_MESSAGES_LIST_SINGLE_STYLE_CLASS), null);\n-\n-        // Output Style for MessageBox Anchors\n-        writer.writeText(\"','\" + SkinSelectors.LINK_STYLE_CLASS + \"':'\", null);\n-        writer.writeText(arc.getStyleClass(SkinSelectors.LINK_STYLE_CLASS), null);\n-        writer.writeText(\"'} ); \", null);\n-\n-        // Output the script that will register the MessageBox with\n-        // the TrMessageBox javascript class that handles client-side\n-        // add/remove of messages.\n-        writer.writeText(\"TrMessageBox._registerMessageBox(\\\"\", null);\n-        writer.writeText(getClientId(context, component), null);\n-        writer.writeText(\"\\\");\", null);\n-        writer.endElement(\"script\");\n-      }\n-      \n-      // Delegate rendering of the outer shell to the BoxRenderer class\n-      // which will call back to this renderer to output the messages\n-      _boxRenderer.encodeAll(context, arc, component, bean);\n-    }\n-    else\n-    {\n-      // Always render an element, for update at PPR-time\n-      writer.startElement(XhtmlConstants.SPAN_ELEMENT, component);\n-      renderId(context, component);\n-      writer.endElement(XhtmlConstants.SPAN_ELEMENT);\n-    }\n-    \n-    // Reset the skin resource map\n-    arc.setSkinResourceKeyMap(origSkinResourceMap);\n-  }\n-  \n-  protected void _renderContent(\n-      FacesContext context,\n-      RenderingContext arc,\n-      UIComponent component,\n-      FacesBean bean) \n-      throws IOException\n-  {\n-    ResponseWriter writer = context.getResponseWriter();\n-    \n-    boolean globalOnly = isGlobalOnly(bean);\n-    \n-    // TODO - Merge styles into AF_MESSAGES_STYLE_CLASS\n-    writer.startElement(XhtmlConstants.DIV_ELEMENT, component);\n-    renderStyleClass(context, arc, SkinSelectors.AF_MESSAGES_BODY_STYLE_CLASS);\n-\n-    _renderHeader(context, arc, component, bean);\n-    \n-    // Render the 'message' attribute if specified\n-    String message = getMessage(bean);\n-    if (message != null)\n-    {\n-      writer.startElement(XhtmlConstants.DIV_ELEMENT, null);\n-      renderStyleClass(context, arc, SkinSelectors.AF_MESSAGES_MESSAGE_TEXT_STYLE_CLASS);\n-      writer.write(message);\n-      writer.endElement(XhtmlConstants.DIV_ELEMENT);\n-    }\n-\n-    // Render messages as a list\n-    writer.startElement(\"ol\", null);\n-    \n-    // Output an id for the list so client-side validation can \n-    // easily access the element\n-    String listId = getClientId(context, component) + \"__LIST__\";\n-    writer.writeAttribute(XhtmlConstants.ID_ATTRIBUTE, listId, null);\n-    \n-    // Switch list style depending if no. of messages is 1 or >1\n-    String[] styleClasses = null;\n-    if (MessageUtils.multipleMessagesQueued(context, globalOnly))\n-      styleClasses = new String[] {SkinSelectors.AF_MESSAGES_LIST_STYLE_CLASS};\n-    else\n-      styleClasses = new String[] {SkinSelectors.AF_MESSAGES_LIST_STYLE_CLASS, \n-        SkinSelectors.AF_MESSAGES_LIST_SINGLE_STYLE_CLASS};\n-\n-    renderStyleClasses(context, arc, styleClasses);\n-    \n-    _renderGlobalMessages(context, arc, component, bean);\n-    \n-    if (!globalOnly)\n-      _renderComponentMessages(context, arc, component, bean);\n-    \n-    // End of list\n-    writer.endElement(\"ol\");\n-    \n-    writer.endElement(XhtmlConstants.DIV_ELEMENT);\n-  }  \n-  \n-  @SuppressWarnings(\"unchecked\")\n-  protected void _renderGlobalMessages(\n-      FacesContext context,\n-      RenderingContext arc,\n-      UIComponent component,\n-      FacesBean bean) \n-      throws IOException\n-  {\n-    ResponseWriter writer = context.getResponseWriter();\n-\n-    // Get all messages without and id\n-    Iterator<FacesMessage> msgIter = context.getMessages(null);\n-    while (msgIter.hasNext())\n-    {\n-      FacesMessage msg = msgIter.next();\n-\n-      writer.startElement(\"li\", null);\n-\n-      String text = MessageUtils.getGlobalMessage(arc, msg.getSummary(), msg.getDetail());\n-      renderPossiblyFormattedText(context, text);\n-      \n-      writer.endElement(\"li\");\n-    }\n-  }\n-  \n-  @SuppressWarnings(\"unchecked\")\n-  protected void _renderComponentMessages(\n-      FacesContext context,\n-      RenderingContext arc,\n-      UIComponent component,\n-      FacesBean bean) \n-      throws IOException\n-  {\n-    ResponseWriter writer = context.getResponseWriter();\n-    \n-    Iterator<String> idIter = context.getClientIdsWithMessages();\n-    while (idIter.hasNext())\n-    {\n-      String id = idIter.next();\n-      \n-      // Skip global messages\n-      if (id == null)\n-        continue;\n-\n-      Iterator<FacesMessage> msgIter = context.getMessages(id);\n-      while (msgIter.hasNext())\n-      {\n-        FacesMessage msg = msgIter.next();\n-\n-        writer.startElement(\"li\", null);\n-        \n-        _renderMessageAnchor(context, arc, msg, id);\n-        \n-        String text = MessageUtils.getClientMessage(arc, msg.getSummary(), msg.getDetail());\n-\n-        renderPossiblyFormattedText(context, text);\n-        \n-        writer.endElement(\"li\");\n-      }\n-    }\n-  }\n-  \n-  protected void _renderHeader(\n-      FacesContext        context,\n-      RenderingContext arc,\n-      UIComponent         component,\n-      FacesBean           bean) throws IOException\n-  {\n-    delegateRenderer(context, arc, component, bean, _headerRenderer);\n-  }\n-\n-  protected void _renderMessageAnchor(\n-      FacesContext        context,\n-      RenderingContext arc,\n-      FacesMessage msg,\n-      String componentId) throws IOException\n-  {\n-    ResponseWriter writer = context.getResponseWriter();\n-    \n-    if (componentId == null)\n-      return;\n-\n-    // Anchor rendering currently only possible for messages that \n-    // contain a label, but we could use summary text in future\n-    if (msg instanceof LabeledFacesMessage)\n-    {\n-      LabeledFacesMessage labeledMsg = (LabeledFacesMessage)msg;\n-      String anchor = MessageUtils.getAnchor(componentId);\n-      if (anchor != null)\n-      {\n-        writer.startElement(XhtmlConstants.LINK_ELEMENT, null);\n-        renderStyleClass(context, arc, SkinSelectors.LINK_STYLE_CLASS);\n-        writer.writeAttribute(XhtmlConstants.HREF_ATTRIBUTE, \"#\" + anchor, null);\n-        writer.write(labeledMsg.getLabel().toString());\n-        writer.endElement(XhtmlConstants.LINK_ELEMENT);\n-      } \n-    }\n-  }\n-\n-  // Rendering delegate to handle output of the header for the message box\n-  private class HeaderRenderer extends PanelHeaderRenderer\n-  {\n-    public HeaderRenderer(FacesBean.Type type)\n-    {\n-      super(type);\n-    }\n-    \n-    @Override\n-    protected boolean shouldRenderId(FacesContext context, UIComponent component)\n-    {\n-      // Header will always be refreshed as sub-element of parent\n-      return false;\n-    }\n-    \n-    @Override\n-    protected void renderEventHandlers(FacesContext context, FacesBean bean)\n-        throws IOException\n-    {\n-      // Prevent HeaderRenderer from re-rendering event handlers\n-    }    \n-\n-    @Override\n-    protected String getMessageType(FacesBean bean)\n-    {\n-      String messageType = null;\n-      \n-      FacesMessage.Severity maxSeverity = \n-        FacesContext.getCurrentInstance().getMaximumSeverity();\n-      \n-      // Map FacesMessage severity to levels expected by panelHeaderRenderer\n-      if (maxSeverity == null)\n-        messageType = XhtmlConstants.MESSAGE_TYPE_ERROR;\n-      else if (FacesMessage.SEVERITY_FATAL.equals(maxSeverity))\n-        messageType = XhtmlConstants.MESSAGE_TYPE_ERROR;\n-      else if (FacesMessage.SEVERITY_ERROR.equals(maxSeverity))\n-        messageType = XhtmlConstants.MESSAGE_TYPE_ERROR;\n-      else if (FacesMessage.SEVERITY_WARN.equals(maxSeverity))\n-        messageType = XhtmlConstants.MESSAGE_TYPE_WARNING;\n-      else if (FacesMessage.SEVERITY_INFO.equals(maxSeverity))\n-        messageType = XhtmlConstants.MESSAGE_TYPE_INFO;\n-\n-      return messageType;\n-    }\n-    \n-    @Override\n-    protected String getText(RenderingContext arc, FacesBean bean,\n-        String messageType)\n-    {\n-      String text = MessageBoxRenderer.this.getText(bean);\n-      if (text != null)\n-        // Use Text attribute of this component for header text\n-        return text;\n-      \n-      // Otherwise parent will decide text & style based on messageType\n-      return super.getText(arc, bean, messageType);\n-    }\n-    \n-    @Override\n-    protected String getMessageIconName(String messageType)\n-    {\n-      String iconName = null;\n-\n-      // Use the af|messages skin selectors instead of those\n-      // used by panelHeader\n-      if (XhtmlConstants.MESSAGE_TYPE_ERROR.equals(messageType))\n-        iconName = SkinSelectors.AF_MESSAGES_ERROR_ICON_NAME;\n-      else if (XhtmlConstants.MESSAGE_TYPE_WARNING.equals(messageType))\n-        iconName = SkinSelectors.AF_MESSAGES_WARNING_ICON_NAME;\n-      else if (XhtmlConstants.MESSAGE_TYPE_INFO.equals(messageType))\n-        iconName = SkinSelectors.AF_MESSAGES_INFO_ICON_NAME;\n-      else if (XhtmlConstants.MESSAGE_TYPE_CONFIRMATION.equals(messageType))\n-        iconName = SkinSelectors.AF_MESSAGES_CONFIRMATION_ICON_NAME;\n-\n-      assert ((iconName != null) ||\n-              XhtmlConstants.MESSAGE_TYPE_NONE.equals(messageType));\n-\n-      return iconName;\n-    }\n-\n-  }\n-  \n-  // Delegate renderer, handles the outer element rendering and\n-  // provides option to wrap message box using rounded borders etc.\n-  private class BoxRenderer extends PanelBoxRenderer\n-  {\n-   \n-    public BoxRenderer(FacesBean.Type type)\n-    {\n-      super(type);\n-    }\n-    \n-    @Override\n-    protected boolean shouldRenderId(FacesContext context, UIComponent component)\n-    {\n-      // As panelBox is handling the outer rendering, then it should render\n-      // the id of the MessageBox component\n-      return true;\n-    }\n-   \n-    @Override\n-    protected String getBackground(FacesBean bean)\n-    {\n-      // Force use of 'light' style, so we know which style\n-      // to re-map in _RESOURCE_KEY_MAP\n-      return \"light\";\n-    }\n-    \n-    @Override\n-    protected String getInlineStyle(FacesBean bean)\n-    {\n-      String inlineStyle = super.getInlineStyle(bean);\n-      \n-      boolean inlineValidation = \n-        RequestContext.ClientValidation.INLINE.equals(\n-            RequestContext.getCurrentInstance().getClientValidation());\n-      \n-      if (!inlineValidation)\n-        return inlineStyle;\n-      \n-      boolean hasMessages = FacesContext.getCurrentInstance().getMessages().hasNext();\n-      \n-      if (hasMessages)\n-        return inlineStyle;\n-      \n-      // Ensure the MessageBox is hidden for inline mode when\n-      // there are no messages\n-      if (inlineStyle == null)\n-        return \"display:none\";\n-      else\n-        return inlineStyle + \";display:none\";\n-    }\n-    \n-    @Override\n-    protected boolean hasChildren(UIComponent component)\n-    {\n-      // Required to force panelBox to call render properly\n-      return true;\n-    }\n-    \n-    @Override\n-    protected void renderBody(FacesContext context, RenderingContext arc,\n-        UIComponent component, FacesBean bean, Object icon, Object text) throws IOException\n-    {\n-      // Pass control back to MessageBoxRenderer to continue rendering\n-      // the content of the message box.\n-      MessageBoxRenderer.this._renderContent(context, arc, component, bean);\n-    }\n-  }\n-    \n-  @Override\n-  protected boolean shouldRenderId(FacesContext context, UIComponent component)\n-  {\n-    // Normally BoxRenderer will output the id for this component, but\n-    // if we're just outputting an empty element for PPR purposes, then\n-    // this renderer should output the id.\n-    return true;\n-  }\n-\n-  protected String getText(FacesBean bean)\n-  {\n-    if (_textKey == null)\n-      return null;\n-    return toString(bean.getProperty(_textKey));\n-  }\n-\n-  protected String getMessage(FacesBean bean)\n-  {\n-    if (_messageKey == null)\n-      return null;\n-    return toString(bean.getProperty(_messageKey));\n-  }\n-\n-  protected boolean isGlobalOnly(FacesBean bean)\n-  {\n-    Object o = bean.getProperty(_globalOnlyKey);\n-    if (o == null)\n-      o = _globalOnlyKey.getDefault();\n-    return Boolean.TRUE.equals(o);\n-  }\n-\n-  private PropertyKey _textKey;\n-  private PropertyKey _messageKey;\n-  private PropertyKey _globalOnlyKey;\n-  private XhtmlRenderer _headerRenderer;\n-  private PanelBoxRenderer _boxRenderer;\n-\n-  // Map panelHeader & panelBox Styles/Icons etc. to this renderer's selectors.\n-  private static final Map<String, String> _RESOURCE_KEY_MAP;\n-\n-  static\n-  {\n-    _RESOURCE_KEY_MAP = new HashMap<String, String>();\n-    \n-    // translation keys\n-    _RESOURCE_KEY_MAP.put(\"af_panelHeader.INFORMATION\",\n-                              \"af_messages.INFORMATION\");\n-    _RESOURCE_KEY_MAP.put(\"af_panelHeader.WARNING\",\n-                              \"af_messages.WARNING\");\n-    _RESOURCE_KEY_MAP.put(\"af_panelHeader.ERROR\",\n-                              \"af_messages.ERROR\");\n-    _RESOURCE_KEY_MAP.put(\"af_panelHeader.CONFIRMATION\",\n-                              \"af_messages.CONFIRMATION\");\n-    // icons\n-    _RESOURCE_KEY_MAP.put(SkinSelectors.AF_PANEL_HEADER_ERROR_ICON_NAME,\n-        SkinSelectors.AF_MESSAGES_ERROR_ICON_NAME);\n-    _RESOURCE_KEY_MAP.put(SkinSelectors.AF_PANEL_HEADER_WARNING_ICON_NAME,\n-        SkinSelectors.AF_MESSAGES_WARNING_ICON_NAME);\n-    _RESOURCE_KEY_MAP.put(SkinSelectors.AF_PANEL_HEADER_INFO_ICON_NAME,\n-        SkinSelectors.AF_MESSAGES_INFO_ICON_NAME);\n-    _RESOURCE_KEY_MAP.put(SkinSelectors.AF_PANEL_HEADER_CONFIRMATION_ICON_NAME,\n-        SkinSelectors.AF_MESSAGES_CONFIRMATION_ICON_NAME);\n-\n-    // styles\n-    _RESOURCE_KEY_MAP.put(SkinSelectors.AF_PANEL_HEADER_ERROR_STYLE_CLASS,\n-        SkinSelectors.AF_MESSAGES_ERROR_STYLE_CLASS);\n-    _RESOURCE_KEY_MAP.put(SkinSelectors.AF_PANEL_HEADER_STYLE_CLASS,\n-        SkinSelectors.AF_MESSAGES_HEADER_STYLE_CLASS);\n-    \n-    // We forced the use of 'light' style above, so now map it\n-    _RESOURCE_KEY_MAP.put(SkinSelectors.AF_PANEL_BOX_LIGHT_STYLE_CLASS, \n-        SkinSelectors.AF_MESSAGES_STYLE_CLASS);\n-\n-    // frame styles\n-    _RESOURCE_KEY_MAP.put(SkinSelectors.AF_PANEL_BOX_TOP_START_STYLE_CLASS, \n-        SkinSelectors.AF_MESSAGES_TOP_START_STYLE_CLASS);\n-    _RESOURCE_KEY_MAP.put(SkinSelectors.AF_PANEL_BOX_TOP_STYLE_CLASS, \n-        SkinSelectors.AF_MESSAGES_TOP_STYLE_CLASS);\n-    _RESOURCE_KEY_MAP.put(SkinSelectors.AF_PANEL_BOX_TOP_END_STYLE_CLASS, \n-        SkinSelectors.AF_MESSAGES_TOP_END_STYLE_CLASS);\n-    _RESOURCE_KEY_MAP.put(SkinSelectors.AF_PANEL_BOX_START_STYLE_CLASS, \n-        SkinSelectors.AF_MESSAGES_START_STYLE_CLASS);\n-    _RESOURCE_KEY_MAP.put(SkinSelectors.AF_PANEL_BOX_END_STYLE_CLASS, \n-        SkinSelectors.AF_MESSAGES_END_STYLE_CLASS);\n-    _RESOURCE_KEY_MAP.put(SkinSelectors.AF_PANEL_BOX_BOTTOM_START_STYLE_CLASS, \n-        SkinSelectors.AF_MESSAGES_BOTTOM_START_STYLE_CLASS);\n-    _RESOURCE_KEY_MAP.put(SkinSelectors.AF_PANEL_BOX_BOTTOM_STYLE_CLASS, \n-        SkinSelectors.AF_MESSAGES_BOTTOM_STYLE_CLASS);\n-    _RESOURCE_KEY_MAP.put(SkinSelectors.AF_PANEL_BOX_BOTTOM_END_STYLE_CLASS, \n-        SkinSelectors.AF_MESSAGES_BOTTOM_END_STYLE_CLASS);\n-  } \n-  \n-}\n+/*\r\n+ *  Licensed to the Apache Software Foundation (ASF) under one\r\n+ *  or more contributor license agreements.  See the NOTICE file\r\n+ *  distributed with this work for additional information\r\n+ *  regarding copyright ownership.  The ASF licenses this file\r\n+ *  to you under the Apache License, Version 2.0 (the\r\n+ *  \"License\"); you may not use this file except in compliance\r\n+ *  with the License.  You may obtain a copy of the License at\r\n+ *\r\n+ *  http://www.apache.org/licenses/LICENSE-2.0\r\n+ *\r\n+ *  Unless required by applicable law or agreed to in writing,\r\n+ *  software distributed under the License is distributed on an\r\n+ *  \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n+ *  KIND, either express or implied.  See the License for the\r\n+ *  specific language governing permissions and limitations\r\n+ *  under the License.\r\n+ */\r\n+package org.apache.myfaces.trinidadinternal.renderkit.core.xhtml;\r\n+\r\n+import java.io.IOException;\r\n+import java.util.HashMap;\r\n+import java.util.Iterator;\r\n+import java.util.Map;\r\n+\r\n+import javax.faces.application.FacesMessage;\r\n+import javax.faces.component.UIComponent;\r\n+import javax.faces.context.FacesContext;\r\n+import javax.faces.context.ResponseWriter;\r\n+\r\n+import org.apache.myfaces.trinidad.bean.FacesBean;\r\n+import org.apache.myfaces.trinidad.bean.PropertyKey;\r\n+import org.apache.myfaces.trinidad.component.core.output.CoreMessages;\r\n+\r\n+import org.apache.myfaces.trinidad.context.RenderingContext;\r\n+import org.apache.myfaces.trinidad.context.RequestContext;\r\n+import org.apache.myfaces.trinidad.skin.Icon;\r\n+import org.apache.myfaces.trinidad.util.LabeledFacesMessage;\r\n+import org.apache.myfaces.trinidadinternal.util.MessageUtils;\r\n+\r\n+/**\r\n+ * Renderer for org.apache.myfaces.trinidad.Messages, family org.apache.myfaces.trinidad.Messages.\r\n+ *\r\n+ */\r\n+public class MessageBoxRenderer extends XhtmlRenderer\r\n+{\r\n+  public MessageBoxRenderer()\r\n+  {\r\n+    this(CoreMessages.TYPE);\r\n+  }\r\n+\r\n+  protected MessageBoxRenderer(FacesBean.Type type)\r\n+  {\r\n+    super(type);\r\n+  }\r\n+\r\n+  @Override\r\n+  protected void findTypeConstants(FacesBean.Type type)\r\n+  {\r\n+    super.findTypeConstants(type);\r\n+    _textKey     = type.findKey(\"text\");\r\n+    _messageKey     = type.findKey(\"message\");\r\n+    _globalOnlyKey  = type.findKey(\"globalOnly\");\r\n+\r\n+    _headerRenderer = new HeaderRenderer(type);\r\n+    _boxRenderer = new BoxRenderer(type);\r\n+  }\r\n+\r\n+  @Override\r\n+  public boolean getRendersChildren()\r\n+  {\r\n+    return true;\r\n+  }\r\n+\r\n+  @SuppressWarnings(\"unchecked\")\r\n+  @Override\r\n+  protected void encodeAll(FacesContext context, RenderingContext arc,\r\n+      UIComponent component, FacesBean bean) throws IOException\r\n+  {\r\n+    // Force MessageBox to be re-rendered via PPR, since the set\r\n+    // of messages may have changed.\r\n+    RequestContext afContext = RequestContext.getCurrentInstance();\r\n+    if (afContext != null)\r\n+      afContext.addPartialTarget(component);\r\n+\r\n+    ResponseWriter writer = context.getResponseWriter();\r\n+\r\n+    // Check if INLINE validation mode is enabled\r\n+    boolean inlineValidation =\r\n+        RequestContext.ClientValidation.INLINE.equals(\r\n+            RequestContext.getCurrentInstance().getClientValidation());\r\n+\r\n+    // Only when there's at least one message queued\r\n+    if (inlineValidation || context.getMessages().hasNext())\r\n+    {\r\n+\r\n+      if (inlineValidation)\r\n+      {\r\n+        writer.startElement(XhtmlConstants.SCRIPT_ELEMENT, null);\r\n+        renderScriptDeferAttribute(context, arc);\r\n+        renderScriptTypeAttribute(context, arc);\r\n+\r\n+        // Output the styles required for client-side manipulation of the MessageBox\r\n+\r\n+        // Output style for list of messages\r\n+        writer.writeText(\"TrPage.getInstance().addStyleClassMap( {'\", null);\r\n+        writer.writeText(SkinSelectors.AF_MESSAGES_LIST_STYLE_CLASS + \"':'\", null);\r\n+        writer.writeText(arc.getStyleClass(SkinSelectors.AF_MESSAGES_LIST_STYLE_CLASS), null);\r\n+\r\n+        // Single entry list uses two styles\r\n+        writer.writeText(\"','\" + SkinSelectors.AF_MESSAGES_LIST_SINGLE_STYLE_CLASS + \"':'\", null);\r\n+        writer.writeText(arc.getStyleClass(SkinSelectors.AF_MESSAGES_LIST_STYLE_CLASS), null);\r\n+        writer.writeText(\" \" + arc.getStyleClass(SkinSelectors.AF_MESSAGES_LIST_SINGLE_STYLE_CLASS), null);\r\n+\r\n+        // Output Style for MessageBox Anchors\r\n+        writer.writeText(\"','\" + SkinSelectors.LINK_STYLE_CLASS + \"':'\", null);\r\n+        writer.writeText(arc.getStyleClass(SkinSelectors.LINK_STYLE_CLASS), null);\r\n+        writer.writeText(\"'} ); \", null);\r\n+\r\n+        // Output the script that will register the MessageBox with\r\n+        // the TrMessageBox javascript class that handles client-side\r\n+        // add/remove of messages.\r\n+        writer.writeText(\"TrMessageBox._registerMessageBox(\\\"\", null);\r\n+        writer.writeText(getClientId(context, component), null);\r\n+        writer.writeText(\"\\\");\", null);\r\n+        writer.endElement(\"script\");\r\n+      }\r\n+\r\n+      // Setup the rendering context, so that default skin selectors of\r\n+      // delegate renderers are mapped to those of this renderer\r\n+      arc.setSkinResourceKeyMap(_RESOURCE_KEY_MAP);\r\n+\r\n+      // Delegate rendering of the outer shell to the BoxRenderer class\r\n+      // which will call back to this renderer to output the messages\r\n+      _boxRenderer.encodeAll(context, arc, component, bean);\r\n+    }\r\n+    else\r\n+    {\r\n+      // Always render an element, for update at PPR-time\r\n+      writer.startElement(XhtmlConstants.SPAN_ELEMENT, component);\r\n+      renderId(context, component);\r\n+      writer.endElement(XhtmlConstants.SPAN_ELEMENT);\r\n+    }\r\n+  }\r\n+\r\n+  protected void _renderContent(\r\n+      FacesContext context,\r\n+      RenderingContext arc,\r\n+      UIComponent component,\r\n+      FacesBean bean)\r\n+      throws IOException\r\n+  {\r\n+    ResponseWriter writer = context.getResponseWriter();\r\n+\r\n+    boolean globalOnly = isGlobalOnly(bean);\r\n+\r\n+    // TODO - Merge styles into AF_MESSAGES_STYLE_CLASS\r\n+    writer.startElement(XhtmlConstants.DIV_ELEMENT, component);\r\n+    renderStyleClass(context, arc, SkinSelectors.AF_MESSAGES_BODY_STYLE_CLASS);\r\n+\r\n+    _renderHeader(context, arc, component, bean);\r\n+\r\n+    // Render the 'message' attribute if specified\r\n+    String message = getMessage(bean);\r\n+    if (message != null)\r\n+    {\r\n+      writer.startElement(XhtmlConstants.DIV_ELEMENT, null);\r\n+      renderStyleClass(context, arc, SkinSelectors.AF_MESSAGES_MESSAGE_TEXT_STYLE_CLASS);\r\n+      writer.write(message);\r\n+      writer.endElement(XhtmlConstants.DIV_ELEMENT);\r\n+    }\r\n+\r\n+    // Render messages as a list\r\n+    writer.startElement(\"ol\", null);\r\n+\r\n+    // Output an id for the list so client-side validation can\r\n+    // easily access the element\r\n+    String listId = getClientId(context, component) + \"__LIST__\";\r\n+    writer.writeAttribute(XhtmlConstants.ID_ATTRIBUTE, listId, null);\r\n+\r\n+    // Switch list style depending if no. of messages is 1 or >1\r\n+    String[] styleClasses = null;\r\n+    if (MessageUtils.multipleMessagesQueued(context, globalOnly))\r\n+      styleClasses = new String[] {SkinSelectors.AF_MESSAGES_LIST_STYLE_CLASS};\r\n+    else\r\n+      styleClasses = new String[] {SkinSelectors.AF_MESSAGES_LIST_STYLE_CLASS,\r\n+        SkinSelectors.AF_MESSAGES_LIST_SINGLE_STYLE_CLASS};\r\n+\r\n+    renderStyleClasses(context, arc, styleClasses);\r\n+\r\n+    _renderGlobalMessages(context, arc, component, bean);\r\n+\r\n+    if (!globalOnly)\r\n+      _renderComponentMessages(context, arc, component, bean);\r\n+\r\n+    // End of list\r\n+    writer.endElement(\"ol\");\r\n+\r\n+    writer.endElement(XhtmlConstants.DIV_ELEMENT);\r\n+  }\r\n+\r\n+  @SuppressWarnings(\"unchecked\")\r\n+  protected void _renderGlobalMessages(\r\n+      FacesContext context,\r\n+      RenderingContext arc,\r\n+      UIComponent component,\r\n+      FacesBean bean)\r\n+      throws IOException\r\n+  {\r\n+    ResponseWriter writer = context.getResponseWriter();\r\n+\r\n+    // Get all messages without and id\r\n+    Iterator<FacesMessage> msgIter = context.getMessages(null);\r\n+    while (msgIter.hasNext())\r\n+    {\r\n+      FacesMessage msg = msgIter.next();\r\n+\r\n+      writer.startElement(\"li\", null);\r\n+\r\n+      String text = MessageUtils.getGlobalMessage(arc, msg.getSummary(), msg.getDetail());\r\n+      renderPossiblyFormattedText(context, text);\r\n+\r\n+      writer.endElement(\"li\");\r\n+    }\r\n+  }\r\n+\r\n+  @SuppressWarnings(\"unchecked\")\r\n+  protected void _renderComponentMessages(\r\n+      FacesContext context,\r\n+      RenderingContext arc,\r\n+      UIComponent component,\r\n+      FacesBean bean)\r\n+      throws IOException\r\n+  {\r\n+    ResponseWriter writer = context.getResponseWriter();\r\n+\r\n+    Iterator<String> idIter = context.getClientIdsWithMessages();\r\n+    while (idIter.hasNext())\r\n+    {\r\n+      String id = idIter.next();\r\n+\r\n+      // Skip global messages\r\n+      if (id == null)\r\n+        continue;\r\n+\r\n+      Iterator<FacesMessage> msgIter = context.getMessages(id);\r\n+      while (msgIter.hasNext())\r\n+      {\r\n+        FacesMessage msg = msgIter.next();\r\n+\r\n+        writer.startElement(\"li\", null);\r\n+\r\n+        _renderMessageAnchor(context, arc, msg, id);\r\n+\r\n+        String text = MessageUtils.getClientMessage(arc, msg.getSummary(), msg.getDetail());\r\n+\r\n+        renderPossiblyFormattedText(context, text);\r\n+\r\n+        writer.endElement(\"li\");\r\n+      }\r\n+    }\r\n+  }\r\n+\r\n+  protected void _renderHeader(\r\n+      FacesContext        context,\r\n+      RenderingContext arc,\r\n+      UIComponent         component,\r\n+      FacesBean           bean) throws IOException\r\n+  {\r\n+    delegateRenderer(context, arc, component, bean, _headerRenderer);\r\n+  }\r\n+\r\n+  protected void _renderMessageAnchor(\r\n+      FacesContext        context,\r\n+      RenderingContext arc,\r\n+      FacesMessage msg,\r\n+      String componentId) throws IOException\r\n+  {\r\n+    ResponseWriter writer = context.getResponseWriter();\r\n+\r\n+    if (componentId == null)\r\n+      return;\r\n+\r\n+    // Anchor rendering currently only possible for messages that\r\n+    // contain a label, but we could use summary text in future\r\n+    if (msg instanceof LabeledFacesMessage)\r\n+    {\r\n+      LabeledFacesMessage labeledMsg = (LabeledFacesMessage)msg;\r\n+      String anchor = MessageUtils.getAnchor(componentId);\r\n+      if (anchor != null)\r\n+      {\r\n+        writer.startElement(XhtmlConstants.LINK_ELEMENT, null);\r\n+        renderStyleClass(context, arc, SkinSelectors.LINK_STYLE_CLASS);\r\n+        writer.writeAttribute(XhtmlConstants.HREF_ATTRIBUTE, \"#\" + anchor, null);\r\n+        writer.write(labeledMsg.getLabel().toString());\r\n+        writer.endElement(XhtmlConstants.LINK_ELEMENT);\r\n+      }\r\n+    }\r\n+  }\r\n+\r\n+  // Rendering delegate to handle output of the header for the message box\r\n+  private class HeaderRenderer extends PanelHeaderRenderer\r\n+  {\r\n+    public HeaderRenderer(FacesBean.Type type)\r\n+    {\r\n+      super(type);\r\n+    }\r\n+\r\n+    @Override\r\n+    protected boolean shouldRenderId(FacesContext context, UIComponent component)\r\n+    {\r\n+      // Header will always be refreshed as sub-element of parent\r\n+      return false;\r\n+    }\r\n+\r\n+    @Override\r\n+    protected void renderEventHandlers(FacesContext context, FacesBean bean)\r\n+        throws IOException\r\n+    {\r\n+      // Prevent HeaderRenderer from re-rendering event handlers\r\n+    }\r\n+\r\n+    @Override\r\n+    protected String getMessageType(FacesBean bean)\r\n+    {\r\n+      String messageType = null;\r\n+\r\n+      FacesMessage.Severity maxSeverity =\r\n+        FacesContext.getCurrentInstance().getMaximumSeverity();\r\n+\r\n+      // Map FacesMessage severity to levels expected by panelHeaderRenderer\r\n+      if (maxSeverity == null)\r\n+        messageType = XhtmlConstants.MESSAGE_TYPE_ERROR;\r\n+      else if (FacesMessage.SEVERITY_FATAL.equals(maxSeverity))\r\n+        messageType = XhtmlConstants.MESSAGE_TYPE_ERROR;\r\n+      else if (FacesMessage.SEVERITY_ERROR.equals(maxSeverity))\r\n+        messageType = XhtmlConstants.MESSAGE_TYPE_ERROR;\r\n+      else if (FacesMessage.SEVERITY_WARN.equals(maxSeverity))\r\n+        messageType = XhtmlConstants.MESSAGE_TYPE_WARNING;\r\n+      else if (FacesMessage.SEVERITY_INFO.equals(maxSeverity))\r\n+        messageType = XhtmlConstants.MESSAGE_TYPE_INFO;\r\n+\r\n+      return messageType;\r\n+    }\r\n+\r\n+    @Override\r\n+    protected String getText(RenderingContext arc, FacesBean bean,\r\n+        String messageType)\r\n+    {\r\n+      String text = MessageBoxRenderer.this.getText(bean);\r\n+      if (text != null)\r\n+        // Use Text attribute of this component for header text\r\n+        return text;\r\n+\r\n+      // Otherwise parent will decide text & style based on messageType\r\n+      return super.getText(arc, bean, messageType);\r\n+    }\r\n+\r\n+    @Override\r\n+    protected String getMessageIconName(String messageType)\r\n+    {\r\n+      String iconName = null;\r\n+\r\n+      // Use the af|messages skin selectors instead of those\r\n+      // used by panelHeader\r\n+      if (XhtmlConstants.MESSAGE_TYPE_ERROR.equals(messageType))\r\n+        iconName = SkinSelectors.AF_MESSAGES_ERROR_ICON_NAME;\r\n+      else if (XhtmlConstants.MESSAGE_TYPE_WARNING.equals(messageType))\r\n+        iconName = SkinSelectors.AF_MESSAGES_WARNING_ICON_NAME;\r\n+      else if (XhtmlConstants.MESSAGE_TYPE_INFO.equals(messageType))\r\n+        iconName = SkinSelectors.AF_MESSAGES_INFO_ICON_NAME;\r\n+      else if (XhtmlConstants.MESSAGE_TYPE_CONFIRMATION.equals(messageType))\r\n+        iconName = SkinSelectors.AF_MESSAGES_CONFIRMATION_ICON_NAME;\r\n+\r\n+      assert ((iconName != null) ||\r\n+              XhtmlConstants.MESSAGE_TYPE_NONE.equals(messageType));\r\n+\r\n+      return iconName;\r\n+    }\r\n+\r\n+  }\r\n+\r\n+  // Delegate renderer, handles the outer element rendering and\r\n+  // provides option to wrap message box using rounded borders etc.\r\n+  private class BoxRenderer extends PanelBoxRenderer\r\n+  {\r\n+\r\n+    public BoxRenderer(FacesBean.Type type)\r\n+    {\r\n+      super(type);\r\n+    }\r\n+\r\n+    @Override\r\n+    protected boolean shouldRenderId(FacesContext context, UIComponent component)\r\n+    {\r\n+      // As panelBox is handling the outer rendering, then it should render\r\n+      // the id of the MessageBox component\r\n+      return true;\r\n+    }\r\n+\r\n+    @Override\r\n+    protected String getBackground(FacesBean bean)\r\n+    {\r\n+      // Force use of 'light' style, so we know which style\r\n+      // to re-map in _RESOURCE_KEY_MAP\r\n+      return \"light\";\r\n+    }\r\n+\r\n+    @Override\r\n+    protected String getInlineStyle(FacesBean bean)\r\n+    {\r\n+      String inlineStyle = super.getInlineStyle(bean);\r\n+\r\n+      boolean inlineValidation =\r\n+        RequestContext.ClientValidation.INLINE.equals(\r\n+            RequestContext.getCurrentInstance().getClientValidation());\r\n+\r\n+      if (!inlineValidation)\r\n+        return inlineStyle;\r\n+\r\n+      boolean hasMessages = FacesContext.getCurrentInstance().getMessages().hasNext();\r\n+\r\n+      if (hasMessages)\r\n+        return inlineStyle;\r\n+\r\n+      // Ensure the MessageBox is hidden for inline mode when there are no messages\r\n+      return inlineStyle + \";display:none;\";\r\n+    }\r\n+\r\n+    @Override\r\n+    protected boolean hasChildren(UIComponent component)\r\n+    {\r\n+      // Required to force panelBox to call render properly\r\n+      return true;\r\n+    }\r\n+\r\n+    @Override\r\n+    protected void renderBody(FacesContext context, RenderingContext arc,\r\n+        UIComponent component, FacesBean bean, Object icon, Object text) throws IOException\r\n+    {\r\n+      // Pass control back to MessageBoxRenderer to continue rendering\r\n+      // the content of the message box.\r\n+      MessageBoxRenderer.this._renderContent(context, arc, component, bean);\r\n+    }\r\n+  }\r\n+\r\n+  @Override\r\n+  protected boolean shouldRenderId(FacesContext context, UIComponent component)\r\n+  {\r\n+    // Normally BoxRenderer will output the id for this component, but\r\n+    // if we're just outputting an empty element for PPR purposes, then\r\n+    // this renderer should output the id.\r\n+    return true;\r\n+  }\r\n+\r\n+  protected String getText(FacesBean bean)\r\n+  {\r\n+    if (_textKey == null)\r\n+      return null;\r\n+    return toString(bean.getProperty(_textKey));\r\n+  }\r\n+\r\n+  protected String getMessage(FacesBean bean)\r\n+  {\r\n+    if (_messageKey == null)\r\n+      return null;\r\n+    return toString(bean.getProperty(_messageKey));\r\n+  }\r\n+\r\n+  protected boolean isGlobalOnly(FacesBean bean)\r\n+  {\r\n+    Object o = bean.getProperty(_globalOnlyKey);\r\n+    if (o == null)\r\n+      o = _globalOnlyKey.getDefault();\r\n+    return Boolean.TRUE.equals(o);\r\n+  }\r\n+\r\n+  private PropertyKey _textKey;\r\n+  private PropertyKey _messageKey;\r\n+  private PropertyKey _globalOnlyKey;\r\n+  private XhtmlRenderer _headerRenderer;\r\n+  private PanelBoxRenderer _boxRenderer;\r\n+\r\n+  // Map panelHeader & panelBox Styles/Icons etc. to this renderer's selectors.\r\n+  private static final Map<String, String> _RESOURCE_KEY_MAP;\r\n+\r\n+  static\r\n+  {\r\n+    _RESOURCE_KEY_MAP = new HashMap<String, String>();\r\n+\r\n+    // translation keys\r\n+    _RESOURCE_KEY_MAP.put(\"af_panelHeader.INFORMATION\",\r\n+                              \"af_messages.INFORMATION\");\r\n+    _RESOURCE_KEY_MAP.put(\"af_panelHeader.WARNING\",\r\n+                              \"af_messages.WARNING\");\r\n+    _RESOURCE_KEY_MAP.put(\"af_panelHeader.ERROR\",\r\n+                              \"af_messages.ERROR\");\r\n+    _RESOURCE_KEY_MAP.put(\"af_panelHeader.CONFIRMATION\",\r\n+                              \"af_messages.CONFIRMATION\");\r\n+    // icons\r\n+    _RESOURCE_KEY_MAP.put(SkinSelectors.AF_PANEL_HEADER_ERROR_ICON_NAME,\r\n+        SkinSelectors.AF_MESSAGES_ERROR_ICON_NAME);\r\n+    _RESOURCE_KEY_MAP.put(SkinSelectors.AF_PANEL_HEADER_WARNING_ICON_NAME,\r\n+        SkinSelectors.AF_MESSAGES_WARNING_ICON_NAME);\r\n+    _RESOURCE_KEY_MAP.put(SkinSelectors.AF_PANEL_HEADER_INFO_ICON_NAME,\r\n+        SkinSelectors.AF_MESSAGES_INFO_ICON_NAME);\r\n+    _RESOURCE_KEY_MAP.put(SkinSelectors.AF_PANEL_HEADER_CONFIRMATION_ICON_NAME,\r\n+        SkinSelectors.AF_MESSAGES_CONFIRMATION_ICON_NAME);\r\n+\r\n+    // styles\r\n+    _RESOURCE_KEY_MAP.put(SkinSelectors.AF_PANEL_HEADER_ERROR_STYLE_CLASS,\r\n+        SkinSelectors.AF_MESSAGES_ERROR_STYLE_CLASS);\r\n+    _RESOURCE_KEY_MAP.put(SkinSelectors.AF_PANEL_HEADER_STYLE_CLASS,\r\n+        SkinSelectors.AF_MESSAGES_HEADER_STYLE_CLASS);\r\n+\r\n+    // We forced the use of 'light' style above, so now map it\r\n+    _RESOURCE_KEY_MAP.put(SkinSelectors.AF_PANEL_BOX_LIGHT_STYLE_CLASS,\r\n+        SkinSelectors.AF_MESSAGES_STYLE_CLASS);\r\n+\r\n+    // frame styles\r\n+    _RESOURCE_KEY_MAP.put(SkinSelectors.AF_PANEL_BOX_TOP_START_STYLE_CLASS,\r\n+        SkinSelectors.AF_MESSAGES_TOP_START_STYLE_CLASS);\r\n+    _RESOURCE_KEY_MAP.put(SkinSelectors.AF_PANEL_BOX_TOP_STYLE_CLASS,\r\n+        SkinSelectors.AF_MESSAGES_TOP_STYLE_CLASS);\r\n+    _RESOURCE_KEY_MAP.put(SkinSelectors.AF_PANEL_BOX_TOP_END_STYLE_CLASS,\r\n+        SkinSelectors.AF_MESSAGES_TOP_END_STYLE_CLASS);\r\n+    _RESOURCE_KEY_MAP.put(SkinSelectors.AF_PANEL_BOX_START_STYLE_CLASS,\r\n+        SkinSelectors.AF_MESSAGES_START_STYLE_CLASS);\r\n+    _RESOURCE_KEY_MAP.put(SkinSelectors.AF_PANEL_BOX_END_STYLE_CLASS,\r\n+        SkinSelectors.AF_MESSAGES_END_STYLE_CLASS);\r\n+    _RESOURCE_KEY_MAP.put(SkinSelectors.AF_PANEL_BOX_BOTTOM_START_STYLE_CLASS,\r\n+        SkinSelectors.AF_MESSAGES_BOTTOM_START_STYLE_CLASS);\r\n+    _RESOURCE_KEY_MAP.put(SkinSelectors.AF_PANEL_BOX_BOTTOM_STYLE_CLASS,\r\n+        SkinSelectors.AF_MESSAGES_BOTTOM_STYLE_CLASS);\r\n+    _RESOURCE_KEY_MAP.put(SkinSelectors.AF_PANEL_BOX_BOTTOM_END_STYLE_CLASS,\r\n+        SkinSelectors.AF_MESSAGES_BOTTOM_END_STYLE_CLASS);\r\n+  }\r\n+\r\n+}\r", "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/MessageBoxRenderer.java"}], "repo": "myfaces-trinidad"}, {"commit": "https://github.com/apache/myfaces-trinidad/commit/13b6a1ce384207b8dac54d42c7edfac51e9db384", "parent": "https://github.com/apache/myfaces-trinidad/commit/f0cf8b73a83f44fc73a9f89008bb38d72f705cee", "message": "TRINIDAD-1885 NPE in StyleSheetDocument._create IconFromNode", "bug_id": "myfaces-trinidad_11", "file": [{"additions": 1, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/13b6a1ce384207b8dac54d42c7edfac51e9db384/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/style/xml/parse/StyleSheetDocument.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/13b6a1ce384207b8dac54d42c7edfac51e9db384/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/style/xml/parse/StyleSheetDocument.java", "sha": "66535c9082b67a3bca130af16fe957ff68fda622", "changes": 3, "status": "modified", "deletions": 2, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/style/xml/parse/StyleSheetDocument.java?ref=13b6a1ce384207b8dac54d42c7edfac51e9db384", "patch": "@@ -309,9 +309,8 @@ private Icon _createIconFromNode(StyleNode resolvedNode)\n     {\n       String propertyName = propertyNode.getName();\n       String propertyValue = propertyNode.getValue();\n-     \n       \n-      if (propertyName != null)\n+      if (propertyName != null && propertyValue != null)\n       {\n         if (propertyName.equals(\"width\"))\n         {", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/style/xml/parse/StyleSheetDocument.java"}], "repo": "myfaces-trinidad"}, {"commit": "https://github.com/apache/myfaces-trinidad/commit/58446ac2469407f58477ea9821f8f0e607a9e263", "parent": "https://github.com/apache/myfaces-trinidad/commit/c3954dd77ee38edf9cb297b515bdf91e8ae2183f", "message": "TRINIDAD-1228 - NPE in GlobalConfiguratorImpl_endConfiguratorServiceRequest", "bug_id": "myfaces-trinidad_12", "file": [{"additions": 5, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/58446ac2469407f58477ea9821f8f0e607a9e263/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/config/GlobalConfiguratorImpl.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/58446ac2469407f58477ea9821f8f0e607a9e263/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/config/GlobalConfiguratorImpl.java", "sha": "1b1359629e03dc33235121267cdaac354c8e4210", "changes": 7, "status": "modified", "deletions": 2, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/config/GlobalConfiguratorImpl.java?ref=58446ac2469407f58477ea9821f8f0e607a9e263", "patch": "@@ -424,9 +424,12 @@ private void _endConfiguratorServiceRequest(final ExternalContext ec)\n     // Physical request has now ended\n     // Clear the in-request flag\n     ec.getRequestMap().remove(_IN_REQUEST);\n-    for (final Configurator config : _services)\n+    if(_services != null)\n     {\n-      config.endRequest(ec);\n+      for (final Configurator config : _services)\n+      {\n+        config.endRequest(ec);\n+      }\n     }\n   }\n ", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/config/GlobalConfiguratorImpl.java"}], "repo": "myfaces-trinidad"}, {"commit": "https://github.com/apache/myfaces-trinidad/commit/99d2ebc52eb81e2aae4038fe481b19eb8514ba9d", "parent": "https://github.com/apache/myfaces-trinidad/commit/dd81f0952d210f558d09a6e5426edc5306c6fc56", "message": "TRINIDAD-1228 - NPE in GlobalConfiguratorImpl_endConfiguratorServiceRequest", "bug_id": "myfaces-trinidad_13", "file": [{"additions": 5, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/99d2ebc52eb81e2aae4038fe481b19eb8514ba9d/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/config/GlobalConfiguratorImpl.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/99d2ebc52eb81e2aae4038fe481b19eb8514ba9d/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/config/GlobalConfiguratorImpl.java", "sha": "973a66b63995e741a7dbf3f4b839dead254eb797", "changes": 7, "status": "modified", "deletions": 2, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/config/GlobalConfiguratorImpl.java?ref=99d2ebc52eb81e2aae4038fe481b19eb8514ba9d", "patch": "@@ -448,9 +448,12 @@ private void _endConfiguratorServiceRequest(final ExternalContext ec)\n     // Physical request has now ended\n     // Clear the in-request flag\n     ec.getRequestMap().remove(_IN_REQUEST);\n-    for (final Configurator config : _services)\n+    if(_services != null)\n     {\n-      config.endRequest(ec);\n+      for (final Configurator config : _services)\n+      {\n+        config.endRequest(ec);\n+      }\n     }\n   }\n ", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/config/GlobalConfiguratorImpl.java"}], "repo": "myfaces-trinidad"}, {"commit": "https://github.com/apache/myfaces-trinidad/commit/76120844ea67c50c10589e71fcd10673b88e5351", "parent": "https://github.com/apache/myfaces-trinidad/commit/6d144744d6d94b3d76fc190c0aa3f938003c3a29", "message": "TRINIDAD-803 NPE in UIXCollection saveStampState()", "bug_id": "myfaces-trinidad_14", "file": [{"additions": 13, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/76120844ea67c50c10589e71fcd10673b88e5351/trinidad/trinidad-api/src/main/java/org/apache/myfaces/trinidad/component/UIXCollection.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/76120844ea67c50c10589e71fcd10673b88e5351/trinidad/trinidad-api/src/main/java/org/apache/myfaces/trinidad/component/UIXCollection.java", "sha": "1cf6cd9a1503bc305121373d590d682722ec82d3", "changes": 19, "status": "modified", "deletions": 6, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-api/src/main/java/org/apache/myfaces/trinidad/component/UIXCollection.java?ref=76120844ea67c50c10589e71fcd10673b88e5351", "patch": "@@ -811,14 +811,14 @@ protected Object saveStampState(FacesContext context, UIComponent stamp)\n       for(Map.Entry<String, UIComponent> entry : facetMap.entrySet())\n       {\n         Object singleFacetState = saveStampState(context, entry.getValue());\n+        if ((singleFacetState == null) ||\n+            (singleFacetState == Transient.TRUE))\n+          continue;\n+        \n         // Don't bother allocating anything until we have some non-null\n         // and non-transient facet state\n         if (facetStateIsEmpty)\n-        {\n-          if ((singleFacetState == null) ||\n-              (singleFacetState == Transient.TRUE))\n-            continue;\n-          \n+        {          \n           facetStateIsEmpty = false;\n           facetState = new Object[facetCount * 2];\n         }\n@@ -829,11 +829,18 @@ protected Object saveStampState(FacesContext context, UIComponent stamp)\n         facetState[base + 1] = singleFacetState;\n         i++;\n       }\n-\n+      \n       // OK, we had something:  allocate the state array to three\n       // entries, and insert the facet state at position 2\n       if (!facetStateIsEmpty)\n       {\n+        // trim the facetState array if necessary\n+        if(i < facetCount)\n+        {\n+          Object[] trimmed = new Object[i*2];\n+          System.arraycopy(facetState, 0, trimmed, 0, i*2);\n+          facetState = trimmed;\n+        }\n         state = new Object[3];\n         state[2] = facetState;\n       }", "filename": "trinidad/trinidad-api/src/main/java/org/apache/myfaces/trinidad/component/UIXCollection.java"}], "repo": "myfaces-trinidad"}, {"commit": "https://github.com/apache/myfaces-trinidad/commit/14473ebfeceabc2771255c3b2beb6d23974b5d47", "parent": "https://github.com/apache/myfaces-trinidad/commit/51966b90d35d827576c41cfbda7e050a33425d06", "message": "npe prevention, due to new empty_values parameters", "bug_id": "myfaces-trinidad_15", "file": [{"additions": 1, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/14473ebfeceabc2771255c3b2beb6d23974b5d47/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/EditableValueRenderer.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/14473ebfeceabc2771255c3b2beb6d23974b5d47/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/EditableValueRenderer.java", "sha": "ac06428e8f79b55dc0a44f1106acbdbd72c9d1af", "changes": 2, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/EditableValueRenderer.java?ref=14473ebfeceabc2771255c3b2beb6d23974b5d47", "patch": "@@ -130,7 +130,7 @@ public Object getConvertedValue(\n     {\n       return converter.getAsObject(context,\n                                    component,\n-                                   submittedValue.toString());\n+                                   (submittedValue != null) ? submittedValue.toString() : null);\n     }\n \n     return submittedValue;", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/EditableValueRenderer.java"}], "repo": "myfaces-trinidad"}, {"commit": "https://github.com/apache/myfaces-trinidad/commit/08307f692b811b307fa31569c54f03196db3d174", "parent": "https://github.com/apache/myfaces-trinidad/commit/a9ba4e79f7323e0bc8c7475f7fa6a09c395d6e80", "message": "TRINIDAD-1674 Trinidad 2 - New NPE when adding component programatically", "bug_id": "myfaces-trinidad_16", "file": [{"additions": 3, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/08307f692b811b307fa31569c54f03196db3d174/trinidad-api/src/main/java/org/apache/myfaces/trinidad/component/ChildArrayList.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/08307f692b811b307fa31569c54f03196db3d174/trinidad-api/src/main/java/org/apache/myfaces/trinidad/component/ChildArrayList.java", "sha": "b3cd0942d3540bc5771fee3bdbe1b65e7719dee4", "changes": 5, "status": "modified", "deletions": 2, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-api/src/main/java/org/apache/myfaces/trinidad/component/ChildArrayList.java?ref=08307f692b811b307fa31569c54f03196db3d174", "patch": "@@ -57,9 +57,10 @@ public void add(int index, UIComponent element)\n         index = adjustedIndex; \n       }\n     }\n-\n-    element.setParent(_parent);\n+    \n+    // do not change the order of these calls, see TRINIDAD-1674 for more info\n     super.add(index, element);\n+    element.setParent(_parent);\n   }\n \n   ", "filename": "trinidad-api/src/main/java/org/apache/myfaces/trinidad/component/ChildArrayList.java"}], "repo": "myfaces-trinidad"}, {"commit": "https://github.com/apache/myfaces-trinidad/commit/c4d511f6841678648886cdcc887f0ef3cb174634", "parent": "https://github.com/apache/myfaces-trinidad/commit/5f7830cfe9f08d2e116fef81f7f10b599468c77c", "message": "TRINIDAD-1520 - NPE from Google Bot (unknown agent)", "bug_id": "myfaces-trinidad_17", "file": [{"additions": 18, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/c4d511f6841678648886cdcc887f0ef3cb174634/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/style/cache/FileSystemStyleCache.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/c4d511f6841678648886cdcc887f0ef3cb174634/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/style/cache/FileSystemStyleCache.java", "sha": "7dcacab0e27adb9dd852fa7a8da3b2512bf6775a", "changes": 31, "status": "modified", "deletions": 13, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/style/cache/FileSystemStyleCache.java?ref=c4d511f6841678648886cdcc887f0ef3cb174634", "patch": "@@ -1221,14 +1221,15 @@ public int hashCode()\n       if(_noHash)\n       {\n         //don't worry about synchronizing this\n-        _hashCode =    (_locale.hashCode()         ^\n-                       (_direction)                ^\n+        _hashCode  =   (_direction)                ^\n                        (_browser  << 2)            ^\n-                       (_version.hashCode())       ^\n                        (_platform << 8)            ^\n                        (_short ? 1 : 0)            ^\n-                       (_accProfile.hashCode())    ^\n-                       (_portlet ? 1:0));\n+                       (_portlet ? 1:0);\n+\n+        if (_locale != null)     _hashCode ^= _locale.hashCode();\n+        if (_accProfile != null) _hashCode ^= _accProfile.hashCode();\n+        if (_version != null)    _hashCode ^= (_version.hashCode());\n \n         _noHash = false;\n       }\n@@ -1246,14 +1247,18 @@ public boolean equals(Object o)\n       {\n         Key key = (Key)o;\n         // Check the easy stuff first\n-        return ((_short == key._short)           &&\n-                (_portlet == key._portlet)       &&\n-                (_direction == key._direction)   &&\n-                (_browser == key._browser)       &&\n-                (_platform == key._platform)     &&\n-                _version.equals(key._version)    &&\n-                _locale.equals(key._locale)      &&\n-                _accProfile.equals(key._accProfile));\n+        if  (!((_short == key._short)             &&\n+               (_portlet == key._portlet)         &&\n+               (_direction == key._direction)     &&\n+               (_browser == key._browser)         &&\n+               (_platform == key._platform)))\n+          {\n+              return false;\n+          }\n+\n+          if (_version != null && !(_version.equals(key._version)))          return false;\n+          if (_locale != null && !(_locale.equals(key._locale)))             return false;\n+          if (_accProfile != null && !(_accProfile.equals(key._accProfile))) return false;\n       }\n \n       return false;", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/style/cache/FileSystemStyleCache.java"}], "repo": "myfaces-trinidad"}, {"commit": "https://github.com/apache/myfaces-trinidad/commit/85dfe9b1997c45040988b7e6035c02fdc83a011a", "parent": "https://github.com/apache/myfaces-trinidad/commit/0cb0749ca9331707a336e40201b991873f225b52", "message": "TRINIDAD-59:  Invoking ResourceServlet via FacesServlet leads to NPE", "bug_id": "myfaces-trinidad_18", "file": [{"additions": 21, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/85dfe9b1997c45040988b7e6035c02fdc83a011a/trinidad-api/src/main/java/org/apache/myfaces/trinidad/webapp/ResourceServlet.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/85dfe9b1997c45040988b7e6035c02fdc83a011a/trinidad-api/src/main/java/org/apache/myfaces/trinidad/webapp/ResourceServlet.java", "sha": "36e3cd11d843165ae7d1ac4b454b6dcda27d1ddd", "changes": 28, "status": "modified", "deletions": 7, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-api/src/main/java/org/apache/myfaces/trinidad/webapp/ResourceServlet.java?ref=85dfe9b1997c45040988b7e6035c02fdc83a011a", "patch": "@@ -136,13 +136,26 @@ public void service(\n     ServletResponse response\n     ) throws ServletException, IOException\n   {\n-    Configurator.disableConfiguratorServices(request);\n-    \n-    //=-= Scott O'Bryan =-=\n-    // Be careful.  This can be wrapped by other things even though it's meant to be a\n-    // Trinidad only resource call.\n-    FacesContext context = _facesContextFactory.getFacesContext(getServletContext(), request, response, _lifecycle);\n+    boolean hasFacesContext = false;\n+    FacesContext context = FacesContext.getCurrentInstance();\n+    // If we happen to invoke the ResourceServlet *via* the\n+    // FacesServlet, you get a lot of fun from the recursive\n+    // attempt to create a FacesContext.  Developers should not\n+    // do this, but it's easy to check\n+    if (context != null)\n+    {\n+      hasFacesContext = true;\n+    }\n+    else\n+    {\n+      Configurator.disableConfiguratorServices(request);\n     \n+      //=-= Scott O'Bryan =-=\n+      // Be careful.  This can be wrapped by other things even though it's meant to be a\n+      // Trinidad only resource call.\n+      context = _facesContextFactory.getFacesContext(getServletContext(), request, response, _lifecycle);\n+    }\n+\n     try\n     {\n       super.service(request, response);\n@@ -160,7 +173,8 @@ public void service(\n     }\n     finally\n     {\n-      context.release();\n+      if (!hasFacesContext)\n+        context.release();\n     }\n   }\n ", "filename": "trinidad-api/src/main/java/org/apache/myfaces/trinidad/webapp/ResourceServlet.java"}], "repo": "myfaces-trinidad"}, {"commit": "https://github.com/apache/myfaces-trinidad/commit/7584c89839913f9aa49ef2976738a625bff0bf02", "parent": "https://github.com/apache/myfaces-trinidad/commit/ac04b665da729622ca21b8fcc3029299b440de6d", "message": "TRINIDAD-59:  Invoking ResourceServlet via FacesServlet leads to NPE", "bug_id": "myfaces-trinidad_19", "file": [{"additions": 21, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/7584c89839913f9aa49ef2976738a625bff0bf02/trinidad/trinidad-api/src/main/java/org/apache/myfaces/trinidad/webapp/ResourceServlet.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/7584c89839913f9aa49ef2976738a625bff0bf02/trinidad/trinidad-api/src/main/java/org/apache/myfaces/trinidad/webapp/ResourceServlet.java", "sha": "36e3cd11d843165ae7d1ac4b454b6dcda27d1ddd", "changes": 28, "status": "modified", "deletions": 7, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-api/src/main/java/org/apache/myfaces/trinidad/webapp/ResourceServlet.java?ref=7584c89839913f9aa49ef2976738a625bff0bf02", "patch": "@@ -136,13 +136,26 @@ public void service(\n     ServletResponse response\n     ) throws ServletException, IOException\n   {\n-    Configurator.disableConfiguratorServices(request);\n-    \n-    //=-= Scott O'Bryan =-=\n-    // Be careful.  This can be wrapped by other things even though it's meant to be a\n-    // Trinidad only resource call.\n-    FacesContext context = _facesContextFactory.getFacesContext(getServletContext(), request, response, _lifecycle);\n+    boolean hasFacesContext = false;\n+    FacesContext context = FacesContext.getCurrentInstance();\n+    // If we happen to invoke the ResourceServlet *via* the\n+    // FacesServlet, you get a lot of fun from the recursive\n+    // attempt to create a FacesContext.  Developers should not\n+    // do this, but it's easy to check\n+    if (context != null)\n+    {\n+      hasFacesContext = true;\n+    }\n+    else\n+    {\n+      Configurator.disableConfiguratorServices(request);\n     \n+      //=-= Scott O'Bryan =-=\n+      // Be careful.  This can be wrapped by other things even though it's meant to be a\n+      // Trinidad only resource call.\n+      context = _facesContextFactory.getFacesContext(getServletContext(), request, response, _lifecycle);\n+    }\n+\n     try\n     {\n       super.service(request, response);\n@@ -160,7 +173,8 @@ public void service(\n     }\n     finally\n     {\n-      context.release();\n+      if (!hasFacesContext)\n+        context.release();\n     }\n   }\n ", "filename": "trinidad/trinidad-api/src/main/java/org/apache/myfaces/trinidad/webapp/ResourceServlet.java"}], "repo": "myfaces-trinidad"}, {"commit": "https://github.com/apache/myfaces-trinidad/commit/39915e0a11cefc5e9516cdefaa45f528f70d297c", "parent": "https://github.com/apache/myfaces-trinidad/commit/aa516488dd57f5e7d87ba118d1a46eb9bc66f0f2", "message": "Don't NPE if there is no RequestContext.", "bug_id": "myfaces-trinidad_20", "file": [{"additions": 4, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/39915e0a11cefc5e9516cdefaa45f528f70d297c/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/PartialPageUtils.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/39915e0a11cefc5e9516cdefaa45f528f70d297c/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/PartialPageUtils.java", "sha": "d985d3f9912909de73cc4ca57f1a773ffbe14133", "changes": 5, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/PartialPageUtils.java?ref=39915e0a11cefc5e9516cdefaa45f528f70d297c", "patch": "@@ -44,7 +44,10 @@ private PartialPageUtils()\n \n   public static boolean isPartialRequest(FacesContext context)\n   {\n-    return RequestContext.getCurrentInstance().isPartialRequest(context);\n+    RequestContext rc = RequestContext.getCurrentInstance();\n+    if (rc == null)\n+      return false;\n+    return rc.isPartialRequest(context);\n   }\n \n ", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/PartialPageUtils.java"}], "repo": "myfaces-trinidad"}, {"commit": "https://github.com/apache/myfaces-trinidad/commit/cfaaff1d7b160d3c5fc7ccd017a02612321450e6", "parent": "https://github.com/apache/myfaces-trinidad/commit/40c8aabf206c77f59d3bdc646f0998c80e0dcca7", "message": "Don't NPE if there is no RequestContext.", "bug_id": "myfaces-trinidad_21", "file": [{"additions": 4, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/cfaaff1d7b160d3c5fc7ccd017a02612321450e6/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/PartialPageUtils.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/cfaaff1d7b160d3c5fc7ccd017a02612321450e6/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/PartialPageUtils.java", "sha": "d985d3f9912909de73cc4ca57f1a773ffbe14133", "changes": 5, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/PartialPageUtils.java?ref=cfaaff1d7b160d3c5fc7ccd017a02612321450e6", "patch": "@@ -44,7 +44,10 @@ private PartialPageUtils()\n \n   public static boolean isPartialRequest(FacesContext context)\n   {\n-    return RequestContext.getCurrentInstance().isPartialRequest(context);\n+    RequestContext rc = RequestContext.getCurrentInstance();\n+    if (rc == null)\n+      return false;\n+    return rc.isPartialRequest(context);\n   }\n \n ", "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/PartialPageUtils.java"}], "repo": "myfaces-trinidad"}, {"commit": "https://github.com/apache/myfaces-trinidad/commit/2cd9302029ad33a116be537bd2a4219676946dcf", "parent": "https://github.com/apache/myfaces-trinidad/commit/9f41a0c8122b2bb405c32c59dbac96168f4d5b34", "message": "ADFFACES-280: NPE in TableUtils when a commandNvigationButton is clicked", "bug_id": "myfaces-trinidad_22", "file": [{"additions": 3, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/2cd9302029ad33a116be537bd2a4219676946dcf/trinidad-api/src/main/java/org/apache/myfaces/trinidad/component/UIXCollection.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/2cd9302029ad33a116be537bd2a4219676946dcf/trinidad-api/src/main/java/org/apache/myfaces/trinidad/component/UIXCollection.java", "sha": "25994fedf8e1d053abd5a4df423f1209220abea4", "changes": 4, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-api/src/main/java/org/apache/myfaces/trinidad/component/UIXCollection.java?ref=2cd9302029ad33a116be537bd2a4219676946dcf", "patch": "@@ -1142,7 +1142,9 @@ private StampState _getStampState()\n    */\n   private Object _setELVar(String varName, Object newData)\n   {\n-    assert varName != null;\n+    if (varName == null)\n+      return null;\n+\n     // we need to place each row at an EL reachable place so that it\n     // can be accessed via the 'var' variable. Let's place it on the\n     // requestMap:", "filename": "trinidad-api/src/main/java/org/apache/myfaces/trinidad/component/UIXCollection.java"}], "repo": "myfaces-trinidad"}, {"commit": "https://github.com/apache/myfaces-trinidad/commit/df9efb31b855382e967e245aa41ad581f40ceef0", "parent": "https://github.com/apache/myfaces-trinidad/commit/5b71f068bee17573ed9282d9931d9d1ad4f9bbd7", "message": "ADFFACES-280: NPE in TableUtils when a commandNvigationButton is clicked", "bug_id": "myfaces-trinidad_23", "file": [{"additions": 3, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/df9efb31b855382e967e245aa41ad581f40ceef0/trinidad/trinidad-api/src/main/java/org/apache/myfaces/trinidad/component/UIXCollection.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/df9efb31b855382e967e245aa41ad581f40ceef0/trinidad/trinidad-api/src/main/java/org/apache/myfaces/trinidad/component/UIXCollection.java", "sha": "25994fedf8e1d053abd5a4df423f1209220abea4", "changes": 4, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-api/src/main/java/org/apache/myfaces/trinidad/component/UIXCollection.java?ref=df9efb31b855382e967e245aa41ad581f40ceef0", "patch": "@@ -1142,7 +1142,9 @@ private StampState _getStampState()\n    */\n   private Object _setELVar(String varName, Object newData)\n   {\n-    assert varName != null;\n+    if (varName == null)\n+      return null;\n+\n     // we need to place each row at an EL reachable place so that it\n     // can be accessed via the 'var' variable. Let's place it on the\n     // requestMap:", "filename": "trinidad/trinidad-api/src/main/java/org/apache/myfaces/trinidad/component/UIXCollection.java"}], "repo": "myfaces-trinidad"}, {"commit": "https://github.com/apache/myfaces-trinidad/commit/0b78f40fcf4df059fd45f4fa8fa46cc5cf963fed", "parent": "https://github.com/apache/myfaces-trinidad/commit/a47af5421273d0599e971697643bb29dc7c4da60", "message": "fix NPE bug that happens when there is no WEB-INF/trinidad-skins.xml file. I was testing the code with this file, and didn't notice the NPE potential.", "bug_id": "myfaces-trinidad_24", "file": [{"additions": 15, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/0b78f40fcf4df059fd45f4fa8fa46cc5cf963fed/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/skin/SkinUtils.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/0b78f40fcf4df059fd45f4fa8fa46cc5cf963fed/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/skin/SkinUtils.java", "sha": "47f963512ef84faac3683ff2dc75d62dd675b218", "changes": 24, "status": "modified", "deletions": 9, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/skin/SkinUtils.java?ref=0b78f40fcf4df059fd45f4fa8fa46cc5cf963fed", "patch": "@@ -307,14 +307,17 @@ private static void _registerSkinExtensions(\n     \n     // Add WEB-INF/trinidad-skins.xml skins to skin factory. (sorted first)    \n     SkinsNode webInfSkinsNode = _getWebInfSkinsNode(context);\n-    List<SkinNode> webInfSkinNodes = webInfSkinsNode.getSkinNodes();\n-\n-    List<SkinNode> sortedWebInfSkinNodes = _sortSkinNodes(skinFactory, webInfSkinNodes);\n-    \n-    // register skins found in webInfSkinNodes\n-    for (SkinNode skinNode : sortedWebInfSkinNodes)\n+    if (webInfSkinsNode != null)\n     {\n-      _addSkinToFactory(skinFactory, skinNode, false);\n+      List<SkinNode> webInfSkinNodes = webInfSkinsNode.getSkinNodes();\n+  \n+      List<SkinNode> sortedWebInfSkinNodes = _sortSkinNodes(skinFactory, webInfSkinNodes);\n+      \n+      // register skins found in webInfSkinNodes\n+      for (SkinNode skinNode : sortedWebInfSkinNodes)\n+      {\n+        _addSkinToFactory(skinFactory, skinNode, false);\n+      }\n     }\n     \n     // register all the skin additions from META-INF trinidad-skins.xml and WEB-INF\n@@ -328,8 +331,11 @@ private static void _registerSkinExtensions(\n       _registerSkinAdditions(fContext, skinFactory, skinAdditionNodeList, true);    \n     } \n     // register skin-additions from WEB-INF/trinidad-skins.xml file\n-    List<SkinAdditionNode> skinAdditionNodeList = webInfSkinsNode.getSkinAdditionNodes();\n-    _registerSkinAdditions(fContext, skinFactory, skinAdditionNodeList, false);    \n+    if (webInfSkinsNode != null)\n+    {\n+      List<SkinAdditionNode> skinAdditionNodeList = webInfSkinsNode.getSkinAdditionNodes();\n+      _registerSkinAdditions(fContext, skinFactory, skinAdditionNodeList, false);    \n+    }\n     \n   }\n   ", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/skin/SkinUtils.java"}], "repo": "myfaces-trinidad"}, {"commit": "https://github.com/apache/myfaces-trinidad/commit/1dde35de3ca9b523b36a5124b6baf26e272b3b43", "parent": "https://github.com/apache/myfaces-trinidad/commit/db0f4987b5e84f0fcd850fe3d0cda708159d78c9", "message": "fix NPE bug that happens when there is no WEB-INF/trinidad-skins.xml file. I was testing the code with this file, and didn't notice the NPE potential.", "bug_id": "myfaces-trinidad_25", "file": [{"additions": 15, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/1dde35de3ca9b523b36a5124b6baf26e272b3b43/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/skin/SkinUtils.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/1dde35de3ca9b523b36a5124b6baf26e272b3b43/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/skin/SkinUtils.java", "sha": "47f963512ef84faac3683ff2dc75d62dd675b218", "changes": 24, "status": "modified", "deletions": 9, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/skin/SkinUtils.java?ref=1dde35de3ca9b523b36a5124b6baf26e272b3b43", "patch": "@@ -307,14 +307,17 @@ private static void _registerSkinExtensions(\n     \n     // Add WEB-INF/trinidad-skins.xml skins to skin factory. (sorted first)    \n     SkinsNode webInfSkinsNode = _getWebInfSkinsNode(context);\n-    List<SkinNode> webInfSkinNodes = webInfSkinsNode.getSkinNodes();\n-\n-    List<SkinNode> sortedWebInfSkinNodes = _sortSkinNodes(skinFactory, webInfSkinNodes);\n-    \n-    // register skins found in webInfSkinNodes\n-    for (SkinNode skinNode : sortedWebInfSkinNodes)\n+    if (webInfSkinsNode != null)\n     {\n-      _addSkinToFactory(skinFactory, skinNode, false);\n+      List<SkinNode> webInfSkinNodes = webInfSkinsNode.getSkinNodes();\n+  \n+      List<SkinNode> sortedWebInfSkinNodes = _sortSkinNodes(skinFactory, webInfSkinNodes);\n+      \n+      // register skins found in webInfSkinNodes\n+      for (SkinNode skinNode : sortedWebInfSkinNodes)\n+      {\n+        _addSkinToFactory(skinFactory, skinNode, false);\n+      }\n     }\n     \n     // register all the skin additions from META-INF trinidad-skins.xml and WEB-INF\n@@ -328,8 +331,11 @@ private static void _registerSkinExtensions(\n       _registerSkinAdditions(fContext, skinFactory, skinAdditionNodeList, true);    \n     } \n     // register skin-additions from WEB-INF/trinidad-skins.xml file\n-    List<SkinAdditionNode> skinAdditionNodeList = webInfSkinsNode.getSkinAdditionNodes();\n-    _registerSkinAdditions(fContext, skinFactory, skinAdditionNodeList, false);    \n+    if (webInfSkinsNode != null)\n+    {\n+      List<SkinAdditionNode> skinAdditionNodeList = webInfSkinsNode.getSkinAdditionNodes();\n+      _registerSkinAdditions(fContext, skinFactory, skinAdditionNodeList, false);    \n+    }\n     \n   }\n   ", "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/skin/SkinUtils.java"}], "repo": "myfaces-trinidad"}, {"commit": "https://github.com/apache/myfaces-trinidad/commit/a29db41dd3a688b963ac24a7601cf6bb405b419e", "parent": "https://github.com/apache/myfaces-trinidad/commit/4314d1c231f8debc1e84ba83d2968627fac07e2f", "message": "TRINIDAD-2069 when trinidad on class path get NPE using html_basic render kit", "bug_id": "myfaces-trinidad_26", "file": [{"additions": 3, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/a29db41dd3a688b963ac24a7601cf6bb405b419e/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/application/StateManagerImpl.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/a29db41dd3a688b963ac24a7601cf6bb405b419e/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/application/StateManagerImpl.java", "sha": "cb30296e6f439a82a449e14ce95e720af482b801", "changes": 5, "status": "modified", "deletions": 2, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/application/StateManagerImpl.java?ref=a29db41dd3a688b963ac24a7601cf6bb405b419e", "patch": "@@ -662,8 +662,9 @@ public UIViewRoot restoreView(\n         return sms.restoreView(context, viewId, renderKitId);\n       }\n \n-      structure = rsm.getTreeStructureToRestore(context, viewId);\n-      state = rsm.getComponentStateToRestore(context);\n+      Object[] stateArray = (Object[])rsm.getState(context, viewId);\n+      structure = stateArray[0];\n+      state = stateArray[1];\n     }\n \n ", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/application/StateManagerImpl.java"}], "repo": "myfaces-trinidad"}, {"commit": "https://github.com/apache/myfaces-trinidad/commit/257baa045502510e6e6ec988847766ae81428624", "parent": "https://github.com/apache/myfaces-trinidad/commit/6a0271f59ea7a3378c8abcf118e66a592ce8beac", "message": "TRINIDAD-1686 Trinidad 2: NPE when adding component in a facet", "bug_id": "myfaces-trinidad_27", "file": [{"additions": 5, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/257baa045502510e6e6ec988847766ae81428624/trinidad-api/src/main/java/org/apache/myfaces/trinidad/component/FacetHashMap.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/257baa045502510e6e6ec988847766ae81428624/trinidad-api/src/main/java/org/apache/myfaces/trinidad/component/FacetHashMap.java", "sha": "3a56ece76be09aa3e5343698b06206c524a79e4e", "changes": 7, "status": "modified", "deletions": 2, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-api/src/main/java/org/apache/myfaces/trinidad/component/FacetHashMap.java?ref=257baa045502510e6e6ec988847766ae81428624", "patch": "@@ -65,9 +65,12 @@ public UIComponent put(String key, UIComponent value)\n     {\n       ChildArrayList.__removeFromParent(value, -1);\n     }\n-\n+    \n+    // calling setParent triggers an addEvent, which might have listeners, \n+    // so first put the component in the map, then set the parent\n+    UIComponent comp = super.put(key, value);\n     value.setParent(_parent);\n-    return (super.put(key, value));\n+    return comp;\n   }\n \n   @Override", "filename": "trinidad-api/src/main/java/org/apache/myfaces/trinidad/component/FacetHashMap.java"}], "repo": "myfaces-trinidad"}, {"commit": "https://github.com/apache/myfaces-trinidad/commit/62d2d06125a0a68b337602c2cfba32fb95283a02", "parent": "https://github.com/apache/myfaces-trinidad/commit/34773d46fc598c6749c0cd9f467073a4f1de80a1", "message": "[TRINIDAD-1520] - NPE from Google Bot (unknown agent) - fixed failing test cases", "bug_id": "myfaces-trinidad_28", "file": [{"additions": 3, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/62d2d06125a0a68b337602c2cfba32fb95283a02/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/agent/AgentFactoryImpl.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/62d2d06125a0a68b337602c2cfba32fb95283a02/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/agent/AgentFactoryImpl.java", "sha": "c39d453002a5f76e46789ae7423d2b677201445c", "changes": 8, "status": "modified", "deletions": 5, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/agent/AgentFactoryImpl.java?ref=62d2d06125a0a68b337602c2cfba32fb95283a02", "patch": "@@ -104,8 +104,6 @@ private void _populateAgentImpl(\n       return;\n     }\n \n-   \n-\n     //the useragent string for telnet and PDA design time will start with\n     //OracleJDevMobile because in each of these cases we know we have an\n     //exact match in the device repository for the agent name.  This is\n@@ -259,7 +257,7 @@ private void _populateUnknownAgentImpl(String userAgent, AgentImpl agent)\n   {\n     // Log warning message that we are setting the agent entry to unknown attributes\n     _LOG.warning(\"UNKNOWN_AGENT_ATTRIBUTES_CREATE_WITH_UNKNOWN\", userAgent);\n-    agent.setAgentEntryToNULL();   \n+    agent.setAgentEntryToNULL();\n   }\n \n   //populates the agent entry for DT access for either Telnet or PDA\n@@ -855,7 +853,7 @@ else if (agent.startsWith(\"compatible\", paren))\n       }\n \n       // try to determine the OS, if unknown\n-      if (agentObj.getPlatformName() == null)\n+      if (agentObj.getPlatformName() == null || agentObj.getPlatformName().equals(Agent.PLATFORM_UNKNOWN))\n       {\n         // Hack: treat the JDeveloper agent as Windows,\n         // so that we assume IE 6.0 Windows capabilities\n@@ -967,7 +965,7 @@ private String _getJavaOS(String base, int start)\n   }\n   static private final String _EMAIL_PARAM =\n     \"org.apache.myfaces.trinidad.agent.email\";\n-  static final private String _IASW_DEVICE_HINT_PARAM = \"X-Oracle-Device.Class\";  \n+  static final private String _IASW_DEVICE_HINT_PARAM = \"X-Oracle-Device.Class\";\n   static final private TrinidadLogger _LOG = TrinidadLogger.createTrinidadLogger(AgentFactoryImpl.class);\n \n }", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/agent/AgentFactoryImpl.java"}], "repo": "myfaces-trinidad"}, {"commit": "https://github.com/apache/myfaces-trinidad/commit/6847ab92a4aac2666f0f2aa045a65c488ec0bca1", "parent": "https://github.com/apache/myfaces-trinidad/commit/9a626e0f6175c47af414eabe7d91f03384f81a34", "message": "ADFFACES-488: TrinidadLogger.warning(Throwable) NPEs if t.getMessage() is null", "bug_id": "myfaces-trinidad_29", "file": [{"additions": 1, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/6847ab92a4aac2666f0f2aa045a65c488ec0bca1/trinidad-api/src/main/java/org/apache/myfaces/trinidad/logging/TrinidadLogRecord.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/6847ab92a4aac2666f0f2aa045a65c488ec0bca1/trinidad-api/src/main/java/org/apache/myfaces/trinidad/logging/TrinidadLogRecord.java", "sha": "a73085329706ee3b6bb98280fbea13f0bd6dabc2", "changes": 2, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-api/src/main/java/org/apache/myfaces/trinidad/logging/TrinidadLogRecord.java?ref=6847ab92a4aac2666f0f2aa045a65c488ec0bca1", "patch": "@@ -28,7 +28,7 @@\n {\n   public TrinidadLogRecord(Level level, String msg)\n   {\n-    super(level, msg);\n+    super(level, (msg == null) ? \"\" : msg);\n   }\n \n ", "filename": "trinidad-api/src/main/java/org/apache/myfaces/trinidad/logging/TrinidadLogRecord.java"}], "repo": "myfaces-trinidad"}, {"commit": "https://github.com/apache/myfaces-trinidad/commit/efa5c89877dc783d918e08ceb27224b87e5306e0", "parent": "https://github.com/apache/myfaces-trinidad/commit/a14b16b57e62f6fd2724675c03ae696e63dc8109", "message": "ADFFACES-488: TrinidadLogger.warning(Throwable) NPEs if t.getMessage() is null", "bug_id": "myfaces-trinidad_30", "file": [{"additions": 1, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/efa5c89877dc783d918e08ceb27224b87e5306e0/trinidad/trinidad-api/src/main/java/org/apache/myfaces/trinidad/logging/TrinidadLogRecord.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/efa5c89877dc783d918e08ceb27224b87e5306e0/trinidad/trinidad-api/src/main/java/org/apache/myfaces/trinidad/logging/TrinidadLogRecord.java", "sha": "a73085329706ee3b6bb98280fbea13f0bd6dabc2", "changes": 2, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-api/src/main/java/org/apache/myfaces/trinidad/logging/TrinidadLogRecord.java?ref=efa5c89877dc783d918e08ceb27224b87e5306e0", "patch": "@@ -28,7 +28,7 @@\n {\n   public TrinidadLogRecord(Level level, String msg)\n   {\n-    super(level, msg);\n+    super(level, (msg == null) ? \"\" : msg);\n   }\n \n ", "filename": "trinidad/trinidad-api/src/main/java/org/apache/myfaces/trinidad/logging/TrinidadLogRecord.java"}], "repo": "myfaces-trinidad"}, {"commit": "https://github.com/apache/myfaces-trinidad/commit/34f0778b5092ead65122826e100dde56e989c9ef", "parent": "https://github.com/apache/myfaces-trinidad/commit/7a3e2ae43a5bc14660982e6507141c8703cbda94", "message": "ADFFACES-342: ChildPropertyTreeModel and SortableModel will throw NPE if used outside of the JSF lifecycle", "bug_id": "myfaces-trinidad_31", "file": [{"additions": 3, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/34f0778b5092ead65122826e100dde56e989c9ef/trinidad-api/src/main/java/org/apache/myfaces/trinidad/model/ChildPropertyTreeModel.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/34f0778b5092ead65122826e100dde56e989c9ef/trinidad-api/src/main/java/org/apache/myfaces/trinidad/model/ChildPropertyTreeModel.java", "sha": "7c4aaee27cfa15d35d8cf2c0abff8bc6c454242a", "changes": 6, "status": "modified", "deletions": 3, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-api/src/main/java/org/apache/myfaces/trinidad/model/ChildPropertyTreeModel.java?ref=34f0778b5092ead65122826e100dde56e989c9ef", "patch": "@@ -18,6 +18,7 @@\n import java.util.List;\n \n import javax.faces.context.FacesContext;\n+import javax.faces.el.PropertyResolver;\n \n /**\n  * Creates a TreeModel from a List of beans.\n@@ -312,9 +313,8 @@ protected Object getChildData(Object parentData)\n     if (prop == null)\n       return null;\n     \n-    FacesContext context = FacesContext.getCurrentInstance();\n-    return \n-      context.getApplication().getPropertyResolver().getValue(parentData, prop);\n+    PropertyResolver resolver = SortableModel.__getPropertyResolver();\n+    return resolver.getValue(parentData, prop);\n   }\n \n   /**", "filename": "trinidad-api/src/main/java/org/apache/myfaces/trinidad/model/ChildPropertyTreeModel.java"}, {"additions": 20, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/34f0778b5092ead65122826e100dde56e989c9ef/trinidad-api/src/main/java/org/apache/myfaces/trinidad/model/SortableModel.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/34f0778b5092ead65122826e100dde56e989c9ef/trinidad-api/src/main/java/org/apache/myfaces/trinidad/model/SortableModel.java", "sha": "73865fed0b07d8a338e77738cd0feb5f46f5cc4e", "changes": 24, "status": "modified", "deletions": 4, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-api/src/main/java/org/apache/myfaces/trinidad/model/SortableModel.java?ref=34f0778b5092ead65122826e100dde56e989c9ef", "patch": "@@ -19,6 +19,8 @@\n import java.util.Comparator;\n import java.util.List;\n \n+import javax.faces.FactoryFinder;\n+import javax.faces.application.ApplicationFactory;\n import javax.faces.context.FacesContext;\n import javax.faces.el.PropertyResolver;\n import javax.faces.model.DataModel;\n@@ -145,8 +147,7 @@ public boolean isSortable(String property)\n       Object data = _model.getRowData();\n       try\n       {\n-        FacesContext context = FacesContext.getCurrentInstance();\n-        PropertyResolver resolver = context.getApplication().getPropertyResolver();\n+        PropertyResolver resolver = __getPropertyResolver();\n         Object propertyValue = resolver.getValue(data, property);\n \n         // when the value is null, we don't know if we can sort it.\n@@ -246,9 +247,8 @@ private void _sort(String property, boolean isAscending)\n     // Make sure the model has that row 0! (It could be empty.)\n     if (_model.isRowAvailable())\n     {\n-      FacesContext context = FacesContext.getCurrentInstance();\n       Comparator<Integer> comp =\n-        new Comp(context. getApplication().getPropertyResolver(), property);\n+        new Comp(__getPropertyResolver(), property);\n       if (!isAscending)\n         comp = new Inverter<Integer>(comp);\n \n@@ -388,6 +388,22 @@ public int compare(T o1, T o2)\n     private final Comparator<T> _comp;\n   }\n \n+  static PropertyResolver __getPropertyResolver()\n+  {\n+    // First try the FacesContext, which is a faster way to\n+    // get the PropertyResolver (and the 99.9% scenario)\n+    FacesContext context = FacesContext.getCurrentInstance();\n+    if (context != null)\n+      return context.getApplication().getPropertyResolver();\n+    \n+    // If that fails, then we're likely outside of the JSF lifecycle.\n+    // Look to the ApplicationFactory.\n+    ApplicationFactory factory = (ApplicationFactory)\n+      FactoryFinder.getFactory(FactoryFinder.APPLICATION_FACTORY);\n+    return factory.getApplication().getPropertyResolver();\n+    \n+  }\n+\n   private SortCriterion _sortCriterion = null;\n \n   private DataModel _model = null;", "filename": "trinidad-api/src/main/java/org/apache/myfaces/trinidad/model/SortableModel.java"}], "repo": "myfaces-trinidad"}, {"commit": "https://github.com/apache/myfaces-trinidad/commit/b7fbc8f055c1dc561438eb898b66663e4e4c25ed", "parent": "https://github.com/apache/myfaces-trinidad/commit/ed533b0d22669b574688c21cee4c73db5e3507f2", "message": "ADFFACES-342: ChildPropertyTreeModel and SortableModel will throw NPE if used outside of the JSF lifecycle", "bug_id": "myfaces-trinidad_32", "file": [{"additions": 3, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/b7fbc8f055c1dc561438eb898b66663e4e4c25ed/trinidad/trinidad-api/src/main/java/org/apache/myfaces/trinidad/model/ChildPropertyTreeModel.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/b7fbc8f055c1dc561438eb898b66663e4e4c25ed/trinidad/trinidad-api/src/main/java/org/apache/myfaces/trinidad/model/ChildPropertyTreeModel.java", "sha": "7c4aaee27cfa15d35d8cf2c0abff8bc6c454242a", "changes": 6, "status": "modified", "deletions": 3, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-api/src/main/java/org/apache/myfaces/trinidad/model/ChildPropertyTreeModel.java?ref=b7fbc8f055c1dc561438eb898b66663e4e4c25ed", "patch": "@@ -18,6 +18,7 @@\n import java.util.List;\n \n import javax.faces.context.FacesContext;\n+import javax.faces.el.PropertyResolver;\n \n /**\n  * Creates a TreeModel from a List of beans.\n@@ -312,9 +313,8 @@ protected Object getChildData(Object parentData)\n     if (prop == null)\n       return null;\n     \n-    FacesContext context = FacesContext.getCurrentInstance();\n-    return \n-      context.getApplication().getPropertyResolver().getValue(parentData, prop);\n+    PropertyResolver resolver = SortableModel.__getPropertyResolver();\n+    return resolver.getValue(parentData, prop);\n   }\n \n   /**", "filename": "trinidad/trinidad-api/src/main/java/org/apache/myfaces/trinidad/model/ChildPropertyTreeModel.java"}, {"additions": 20, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/b7fbc8f055c1dc561438eb898b66663e4e4c25ed/trinidad/trinidad-api/src/main/java/org/apache/myfaces/trinidad/model/SortableModel.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/b7fbc8f055c1dc561438eb898b66663e4e4c25ed/trinidad/trinidad-api/src/main/java/org/apache/myfaces/trinidad/model/SortableModel.java", "sha": "73865fed0b07d8a338e77738cd0feb5f46f5cc4e", "changes": 24, "status": "modified", "deletions": 4, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-api/src/main/java/org/apache/myfaces/trinidad/model/SortableModel.java?ref=b7fbc8f055c1dc561438eb898b66663e4e4c25ed", "patch": "@@ -19,6 +19,8 @@\n import java.util.Comparator;\n import java.util.List;\n \n+import javax.faces.FactoryFinder;\n+import javax.faces.application.ApplicationFactory;\n import javax.faces.context.FacesContext;\n import javax.faces.el.PropertyResolver;\n import javax.faces.model.DataModel;\n@@ -145,8 +147,7 @@ public boolean isSortable(String property)\n       Object data = _model.getRowData();\n       try\n       {\n-        FacesContext context = FacesContext.getCurrentInstance();\n-        PropertyResolver resolver = context.getApplication().getPropertyResolver();\n+        PropertyResolver resolver = __getPropertyResolver();\n         Object propertyValue = resolver.getValue(data, property);\n \n         // when the value is null, we don't know if we can sort it.\n@@ -246,9 +247,8 @@ private void _sort(String property, boolean isAscending)\n     // Make sure the model has that row 0! (It could be empty.)\n     if (_model.isRowAvailable())\n     {\n-      FacesContext context = FacesContext.getCurrentInstance();\n       Comparator<Integer> comp =\n-        new Comp(context. getApplication().getPropertyResolver(), property);\n+        new Comp(__getPropertyResolver(), property);\n       if (!isAscending)\n         comp = new Inverter<Integer>(comp);\n \n@@ -388,6 +388,22 @@ public int compare(T o1, T o2)\n     private final Comparator<T> _comp;\n   }\n \n+  static PropertyResolver __getPropertyResolver()\n+  {\n+    // First try the FacesContext, which is a faster way to\n+    // get the PropertyResolver (and the 99.9% scenario)\n+    FacesContext context = FacesContext.getCurrentInstance();\n+    if (context != null)\n+      return context.getApplication().getPropertyResolver();\n+    \n+    // If that fails, then we're likely outside of the JSF lifecycle.\n+    // Look to the ApplicationFactory.\n+    ApplicationFactory factory = (ApplicationFactory)\n+      FactoryFinder.getFactory(FactoryFinder.APPLICATION_FACTORY);\n+    return factory.getApplication().getPropertyResolver();\n+    \n+  }\n+\n   private SortCriterion _sortCriterion = null;\n \n   private DataModel _model = null;", "filename": "trinidad/trinidad-api/src/main/java/org/apache/myfaces/trinidad/model/SortableModel.java"}], "repo": "myfaces-trinidad"}, {"commit": "https://github.com/apache/myfaces-trinidad/commit/77eb2914e4e024309fa5bee5c00e84a0afaecd56", "parent": "https://github.com/apache/myfaces-trinidad/commit/c89262585219f4de8af34c7c3f16d48496a96e73", "message": "Don't NPE if a train is not in a form", "bug_id": "myfaces-trinidad_33", "file": [{"additions": 7, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/77eb2914e4e024309fa5bee5c00e84a0afaecd56/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/desktop/TrainRenderer.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/77eb2914e4e024309fa5bee5c00e84a0afaecd56/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/desktop/TrainRenderer.java", "sha": "2e6e9cf102e0f9b728136c99c26c7c19750a89aa", "changes": 8, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/desktop/TrainRenderer.java?ref=77eb2914e4e024309fa5bee5c00e84a0afaecd56", "patch": "@@ -166,7 +166,13 @@ protected void encodeAll(\n                                    \", found \" + \n                                    component.getClass().getName());\n     }\n-    \n+\n+    if (arc.getFormData() == null)\n+    {\n+      _LOG.warning(\"Trains must be used inside of a form\");\n+      return;\n+    }\n+\n     UIXProcess process = (UIXProcess) component;\n     UIComponent stamp = process.getNodeStamp();\n ", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/desktop/TrainRenderer.java"}, {"additions": 12, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/77eb2914e4e024309fa5bee5c00e84a0afaecd56/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/pda/TrainRenderer.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/77eb2914e4e024309fa5bee5c00e84a0afaecd56/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/pda/TrainRenderer.java", "sha": "0e798cb170acdd5051348bf3f492cacfa8523dd8", "changes": 14, "status": "modified", "deletions": 2, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/pda/TrainRenderer.java?ref=77eb2914e4e024309fa5bee5c00e84a0afaecd56", "patch": "@@ -20,17 +20,18 @@\n \n import javax.faces.component.UIComponent;\n import javax.faces.context.FacesContext;\n-\n import javax.faces.context.ResponseWriter;\n \n import org.apache.myfaces.trinidad.bean.FacesBean;\n import org.apache.myfaces.trinidad.component.UIXProcess;\n import org.apache.myfaces.trinidad.component.core.nav.CoreTrain;\n import org.apache.myfaces.trinidad.context.RenderingContext;\n+import org.apache.myfaces.trinidad.logging.TrinidadLogger;\n+import org.apache.myfaces.trinidad.util.IntegerUtils;\n+\n import org.apache.myfaces.trinidadinternal.renderkit.core.xhtml.XhtmlConstants;\n import org.apache.myfaces.trinidadinternal.renderkit.core.xhtml.XhtmlRenderer;\n import org.apache.myfaces.trinidadinternal.renderkit.core.xhtml.XhtmlUtils;\n-import org.apache.myfaces.trinidad.util.IntegerUtils;\n \n public class TrainRenderer\n   extends XhtmlRenderer\n@@ -51,6 +52,12 @@ protected void encodeAll(\n     UIComponent         component,\n     FacesBean           bean) throws IOException\n   {\n+    if (arc.getFormData() == null)\n+    {\n+      _LOG.warning(\"Trains must be used inside of a form\");\n+      return;\n+    }\n+\n     UIXProcess process = (UIXProcess) component;          \n     UIComponent stamp = process.getNodeStamp();\n     \n@@ -121,4 +128,7 @@ private boolean _setNewPath(\n   static private final String _SINGLE_RANGE_FORMAT_NO_TOTAL_STRING =\n     \"af_train.FORMAT_NO_TOTAL\";\n \n+  private static final TrinidadLogger _LOG = \n+    TrinidadLogger.createTrinidadLogger(TrainRenderer.class);\n+  \n }", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/pda/TrainRenderer.java"}], "repo": "myfaces-trinidad"}, {"commit": "https://github.com/apache/myfaces-trinidad/commit/cd3b6cab47958ca362a5224a6688b66d1b7008a6", "parent": "https://github.com/apache/myfaces-trinidad/commit/14186dfaf80ce089f08caa26ae93316d895f042d", "message": "Don't NPE if a train is not in a form", "bug_id": "myfaces-trinidad_34", "file": [{"additions": 7, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/cd3b6cab47958ca362a5224a6688b66d1b7008a6/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/desktop/TrainRenderer.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/cd3b6cab47958ca362a5224a6688b66d1b7008a6/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/desktop/TrainRenderer.java", "sha": "2e6e9cf102e0f9b728136c99c26c7c19750a89aa", "changes": 8, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/desktop/TrainRenderer.java?ref=cd3b6cab47958ca362a5224a6688b66d1b7008a6", "patch": "@@ -166,7 +166,13 @@ protected void encodeAll(\n                                    \", found \" + \n                                    component.getClass().getName());\n     }\n-    \n+\n+    if (arc.getFormData() == null)\n+    {\n+      _LOG.warning(\"Trains must be used inside of a form\");\n+      return;\n+    }\n+\n     UIXProcess process = (UIXProcess) component;\n     UIComponent stamp = process.getNodeStamp();\n ", "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/desktop/TrainRenderer.java"}, {"additions": 12, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/cd3b6cab47958ca362a5224a6688b66d1b7008a6/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/pda/TrainRenderer.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/cd3b6cab47958ca362a5224a6688b66d1b7008a6/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/pda/TrainRenderer.java", "sha": "0e798cb170acdd5051348bf3f492cacfa8523dd8", "changes": 14, "status": "modified", "deletions": 2, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/pda/TrainRenderer.java?ref=cd3b6cab47958ca362a5224a6688b66d1b7008a6", "patch": "@@ -20,17 +20,18 @@\n \n import javax.faces.component.UIComponent;\n import javax.faces.context.FacesContext;\n-\n import javax.faces.context.ResponseWriter;\n \n import org.apache.myfaces.trinidad.bean.FacesBean;\n import org.apache.myfaces.trinidad.component.UIXProcess;\n import org.apache.myfaces.trinidad.component.core.nav.CoreTrain;\n import org.apache.myfaces.trinidad.context.RenderingContext;\n+import org.apache.myfaces.trinidad.logging.TrinidadLogger;\n+import org.apache.myfaces.trinidad.util.IntegerUtils;\n+\n import org.apache.myfaces.trinidadinternal.renderkit.core.xhtml.XhtmlConstants;\n import org.apache.myfaces.trinidadinternal.renderkit.core.xhtml.XhtmlRenderer;\n import org.apache.myfaces.trinidadinternal.renderkit.core.xhtml.XhtmlUtils;\n-import org.apache.myfaces.trinidad.util.IntegerUtils;\n \n public class TrainRenderer\n   extends XhtmlRenderer\n@@ -51,6 +52,12 @@ protected void encodeAll(\n     UIComponent         component,\n     FacesBean           bean) throws IOException\n   {\n+    if (arc.getFormData() == null)\n+    {\n+      _LOG.warning(\"Trains must be used inside of a form\");\n+      return;\n+    }\n+\n     UIXProcess process = (UIXProcess) component;          \n     UIComponent stamp = process.getNodeStamp();\n     \n@@ -121,4 +128,7 @@ private boolean _setNewPath(\n   static private final String _SINGLE_RANGE_FORMAT_NO_TOTAL_STRING =\n     \"af_train.FORMAT_NO_TOTAL\";\n \n+  private static final TrinidadLogger _LOG = \n+    TrinidadLogger.createTrinidadLogger(TrainRenderer.class);\n+  \n }", "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/pda/TrainRenderer.java"}], "repo": "myfaces-trinidad"}, {"commit": "https://github.com/apache/myfaces-trinidad/commit/b60e176f41ad59b2267f8e28f81cfb2fa03a7745", "parent": "https://github.com/apache/myfaces-trinidad/commit/7386950ca0b62c2be5dbf950fa92acaf9bf92a2a", "message": "ADFFACES-217: NPE if ServletResponse.setContentTpe(null) is called.  Patch from Venkata Guddanti", "bug_id": "myfaces-trinidad_35", "file": [{"additions": 20, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/b60e176f41ad59b2267f8e28f81cfb2fa03a7745/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/webapp/DispatchServletResponse.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/b60e176f41ad59b2267f8e28f81cfb2fa03a7745/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/webapp/DispatchServletResponse.java", "sha": "038c958ce20eb2a29374e761050e949557947ff2", "changes": 38, "status": "modified", "deletions": 18, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/webapp/DispatchServletResponse.java?ref=b60e176f41ad59b2267f8e28f81cfb2fa03a7745", "patch": "@@ -39,30 +39,32 @@ public DispatchServletResponse(\n   public void setContentType(\n     String contentTypeAndCharset)\n   {\n-    Matcher matcher = _CONTENT_TYPE_PATTERN.matcher(contentTypeAndCharset);\n-    if (matcher.matches())\n+    if(contentTypeAndCharset != null)\n     {\n-      String contentType = matcher.group(1);\n-      String charset = (matcher.groupCount() > 1) ? matcher.group(2) : null; \n-      \n-      // capture the content type on the request\n-      _request.setAttribute(_CONTENT_TYPE_KEY, contentType);\n-\n-      // TODO: use Agent APIs when available\n-      if (\"application/xhtml+xml\".equals(contentType))\n+      Matcher matcher = _CONTENT_TYPE_PATTERN.matcher(contentTypeAndCharset);\n+      if (matcher.matches())\n       {\n-        String userAgent = _request.getHeader(\"User-agent\");\n-        if (userAgent.indexOf(\"compatible; MSIE\") != -1)\n+        String contentType = matcher.group(1);\n+        String charset = (matcher.groupCount() > 1) ? matcher.group(2) : null; \n+        \n+        // capture the content type on the request\n+        _request.setAttribute(_CONTENT_TYPE_KEY, contentType);\n+  \n+        // TODO: use Agent APIs when available\n+        if (\"application/xhtml+xml\".equals(contentType))\n         {\n-          // IE must serve XHTML as text/html\n-          contentTypeAndCharset = \"text/html\";\n-\n-          if (charset != null)\n-            contentTypeAndCharset += \";charset=\" + charset;\n+          String userAgent = _request.getHeader(\"User-agent\");\n+          if (userAgent.indexOf(\"compatible; MSIE\") != -1)\n+          {\n+            // IE must serve XHTML as text/html\n+            contentTypeAndCharset = \"text/html\";\n+  \n+            if (charset != null)\n+              contentTypeAndCharset += \";charset=\" + charset;\n+          }\n         }\n       }\n     }\n-\n     super.setContentType(contentTypeAndCharset);\n   }\n   ", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/webapp/DispatchServletResponse.java"}], "repo": "myfaces-trinidad"}, {"commit": "https://github.com/apache/myfaces-trinidad/commit/1845d6bb583ea98bb8b598f1c58f875ef8742d9e", "parent": "https://github.com/apache/myfaces-trinidad/commit/dc1f2cb31217458e070bb7539d95622a92924610", "message": "ADFFACES-217: NPE if ServletResponse.setContentTpe(null) is called.  Patch from Venkata Guddanti", "bug_id": "myfaces-trinidad_36", "file": [{"additions": 20, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/1845d6bb583ea98bb8b598f1c58f875ef8742d9e/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/webapp/DispatchServletResponse.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/1845d6bb583ea98bb8b598f1c58f875ef8742d9e/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/webapp/DispatchServletResponse.java", "sha": "038c958ce20eb2a29374e761050e949557947ff2", "changes": 38, "status": "modified", "deletions": 18, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/webapp/DispatchServletResponse.java?ref=1845d6bb583ea98bb8b598f1c58f875ef8742d9e", "patch": "@@ -39,30 +39,32 @@ public DispatchServletResponse(\n   public void setContentType(\n     String contentTypeAndCharset)\n   {\n-    Matcher matcher = _CONTENT_TYPE_PATTERN.matcher(contentTypeAndCharset);\n-    if (matcher.matches())\n+    if(contentTypeAndCharset != null)\n     {\n-      String contentType = matcher.group(1);\n-      String charset = (matcher.groupCount() > 1) ? matcher.group(2) : null; \n-      \n-      // capture the content type on the request\n-      _request.setAttribute(_CONTENT_TYPE_KEY, contentType);\n-\n-      // TODO: use Agent APIs when available\n-      if (\"application/xhtml+xml\".equals(contentType))\n+      Matcher matcher = _CONTENT_TYPE_PATTERN.matcher(contentTypeAndCharset);\n+      if (matcher.matches())\n       {\n-        String userAgent = _request.getHeader(\"User-agent\");\n-        if (userAgent.indexOf(\"compatible; MSIE\") != -1)\n+        String contentType = matcher.group(1);\n+        String charset = (matcher.groupCount() > 1) ? matcher.group(2) : null; \n+        \n+        // capture the content type on the request\n+        _request.setAttribute(_CONTENT_TYPE_KEY, contentType);\n+  \n+        // TODO: use Agent APIs when available\n+        if (\"application/xhtml+xml\".equals(contentType))\n         {\n-          // IE must serve XHTML as text/html\n-          contentTypeAndCharset = \"text/html\";\n-\n-          if (charset != null)\n-            contentTypeAndCharset += \";charset=\" + charset;\n+          String userAgent = _request.getHeader(\"User-agent\");\n+          if (userAgent.indexOf(\"compatible; MSIE\") != -1)\n+          {\n+            // IE must serve XHTML as text/html\n+            contentTypeAndCharset = \"text/html\";\n+  \n+            if (charset != null)\n+              contentTypeAndCharset += \";charset=\" + charset;\n+          }\n         }\n       }\n     }\n-\n     super.setContentType(contentTypeAndCharset);\n   }\n   ", "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/webapp/DispatchServletResponse.java"}], "repo": "myfaces-trinidad"}, {"commit": "https://github.com/apache/myfaces-trinidad/commit/51dd32989feb310eec1f6ac87223eb78c547040c", "parent": "https://github.com/apache/myfaces-trinidad/commit/7cb011c1e077b1aeca6edbc8cd5a93a9440a72fe", "message": "ADFFACES-69: Bug Fix on the Change Persistence Manager: ADDCHILDCOMPONENTCHANGE FOR IMAGE THROWS NPE", "bug_id": "myfaces-trinidad_37", "file": [{"additions": 222, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/51dd32989feb310eec1f6ac87223eb78c547040c/adf-faces-api/src/main/java/org/apache/myfaces/adf/change/ChangeManager.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/51dd32989feb310eec1f6ac87223eb78c547040c/adf-faces-api/src/main/java/org/apache/myfaces/adf/change/ChangeManager.java", "sha": "ac3c7d1d602e22170311655e55de033abc2e8a35", "changes": 439, "status": "modified", "deletions": 217, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/adf-faces-api/src/main/java/org/apache/myfaces/adf/change/ChangeManager.java?ref=51dd32989feb310eec1f6ac87223eb78c547040c", "patch": "@@ -1,218 +1,223 @@\n-/*\r\n- * Copyright  2005,2006 The Apache Software Foundation.\r\n- * \r\n- * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n- * you may not use this file except in compliance with the License.\r\n- * You may obtain a copy of the License at\r\n- * \r\n- *      http://www.apache.org/licenses/LICENSE-2.0\r\n- * \r\n- * Unless required by applicable law or agreed to in writing, software\r\n- * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n- * See the License for the specific language governing permissions and\r\n- * limitations under the License.\r\n- */\r\n-\r\n-package org.apache.myfaces.adf.change;\r\n-\r\n-import java.util.HashMap;\r\n-import java.util.Iterator;\r\n-\r\n-import javax.faces.component.UIComponent;\r\n-import javax.faces.context.FacesContext;\r\n-\r\n-import org.apache.myfaces.adf.logging.ADFLogger;\r\n-\r\n-/**\r\n- * The base class for all ChangeManagers.\r\n- * A ChangeManager should manage accumulation of Changes and also\r\n- *  take care of their persistence.\r\n- * @version $Name:  $ ($Revision: adfrt/faces/adf-faces-api/src/main/java/oracle/adf/view/faces/change/ChangeManager.java#0 $) $Date: 10-nov-2005.19:09:58 $\r\n- * @author The Oracle ADF Faces Team\r\n- */\r\n-public abstract class ChangeManager\r\n-{\r\n-  public static void registerDocumentFactory(\r\n-    String targetClassName,\r\n-    String converterClassName)\r\n-  {\r\n-    if ((targetClassName == null) || (targetClassName.length() == 0))\r\n-      throw new IllegalArgumentException(\"target class name must be provided\");\r\n-\r\n-    if ((converterClassName == null) || (converterClassName.length() == 0))\r\n-      throw new IllegalArgumentException(\"converter class name must be provided\");\r\n-\r\n-    synchronized (_CLASSNAME_TO_CONVERTER_NAME_MAP)\r\n-    {\r\n-      _CLASSNAME_TO_CONVERTER_NAME_MAP.put(targetClassName, converterClassName);\r\n-    }\r\n-  }\r\n-\r\n-  /**\r\n-   * Use the conversion rules to attempt to retrieve the equivalent\r\n-   * document change for a ComponentChange\r\n-   * @param change to convert\r\n-   */\r\n-  protected static DocumentChange createDocumentChange(\r\n-    ComponentChange change)\r\n-  {\r\n-    Class changeClass = change.getClass();\r\n-\r\n-    Object converterObject = null;\r\n-    DocumentChangeFactory converter = null;\r\n-\r\n-    //=-=pu todo (as info from Lakshmi) Converter returns null for case of facets\r\n-    synchronized (_CLASS_TO_CONVERTER_MAP)\r\n-    {\r\n-      converterObject = _CLASS_TO_CONVERTER_MAP.get(changeClass);\r\n-    }\r\n-\r\n-    if (converterObject != null)\r\n-    {\r\n-      converter = (DocumentChangeFactory)converterObject;\r\n-    }\r\n-    else\r\n-    {\r\n-      String converterName = null;\r\n-\r\n-      synchronized (_CLASSNAME_TO_CONVERTER_NAME_MAP)\r\n-      {\r\n-       converterName = (String)\r\n-                  _CLASSNAME_TO_CONVERTER_NAME_MAP.get(changeClass.getName());\r\n-      }\r\n-\r\n-      if (converterName != null)\r\n-      {\r\n-        try\r\n-        {\r\n-          ClassLoader contextClassLoader = Thread.currentThread().getContextClassLoader();\r\n-\r\n-          Class converterClass = contextClassLoader.loadClass(converterName);\r\n-\r\n-          if (DocumentChangeFactory.class.isAssignableFrom(converterClass))\r\n-          {\r\n-            converter = (DocumentChangeFactory)converterClass.newInstance();\r\n-\r\n-            synchronized (_CLASS_TO_CONVERTER_MAP)\r\n-            {\r\n-              converterObject = _CLASS_TO_CONVERTER_MAP.put(changeClass,\r\n-                                                            converter);\r\n-            }\r\n-          }\r\n-          else\r\n-          {\r\n-            // log warning because class isn't correct type\r\n-            _LOG.warning(\"Conversion class:\" + converterClass + \" not of type \" + DocumentChangeFactory.class); // NOTRANS\r\n-          }\r\n-        }\r\n-        catch (Throwable e)\r\n-        {\r\n-          _LOG.warning(\"Unable to instantiate converterClass:\" + converterName, e); // NOTRANS\r\n-        }\r\n-\r\n-        if (converterObject == null)\r\n-        {\r\n-          // this entry doesn't work, so remove it\r\n-          _CLASSNAME_TO_CONVERTER_NAME_MAP.remove(converterName);\r\n-\r\n-          return null;\r\n-        }\r\n-      }\r\n-    }\r\n-\r\n-    // return the converted object\r\n-    return converter.convert(change);\r\n-  }\r\n-\r\n-\r\n-\r\n-  /**\r\n-   * Add a ComponentChange to this current request for a specified component.\r\n-   * @throws IllegalArgumentException if any of the supplied parameters were to\r\n-   *          be null.\r\n-   */\r\n-  public abstract void addComponentChange(\r\n-    FacesContext facesContext,\r\n-    UIComponent uiComponent,\r\n-    ComponentChange change);\r\n-\r\n-  /**\r\n-   * Add a DocumentChange to this current request for a specified component.\r\n-   * @throws IllegalArgumentException if any of the supplied parameters were to\r\n-   *          be null.\r\n-   */\r\n-  public void addDocumentChange(\r\n-      FacesContext facesContext,\r\n-      UIComponent uiComponent,\r\n-      DocumentChange change)\r\n-  {\r\n-    if (facesContext == null || uiComponent == null || change == null)\r\n-      throw new IllegalArgumentException(\r\n-        \"Cannot add a Change with either of facesContext, uiComponent or \" +\r\n-        \"Change being null.\");\r\n-  }\r\n-\r\n-  /**\r\n-   * Retrieve the ComponentChanges available for specified component on this\r\n-   *  request.\r\n-   * @return An Iterator of ComponentChanges in the order in which they\r\n-   *         are associated with the UIComponent.\r\n-   *         Returns <code>null<code> if there are no such Changes\r\n-   */\r\n-  public abstract Iterator getComponentChanges(\r\n-    FacesContext facesContext,\r\n-    UIComponent uiComponent);\r\n-\r\n-  /**\r\n-  * Retrieve the identifiers of all components on this request that have Changes\r\n-  *  associated with them.\r\n-  * @return An Iterator that can be used to access the collection of component\r\n-  *          identifiers. Returns null if there are no such components.\r\n-  */\r\n-  public abstract Iterator getComponentIdsWithChanges(\r\n-    FacesContext facesContext);\r\n-\r\n-  private static class AttributeConverter extends DocumentChangeFactory\r\n-  {\r\n-    public DocumentChange convert(ComponentChange compChange)\r\n-    {\r\n-      if (compChange instanceof AttributeComponentChange)\r\n-      {\r\n-        AttributeComponentChange change = (AttributeComponentChange)compChange;\r\n-\r\n-        Object value = change.getAttributeValue();\r\n-\r\n-        // =-= bts TODO add registration of attribute converters\r\n-        if ((value == null) ||\r\n-            (value instanceof CharSequence) ||\r\n-            (value instanceof Number) ||\r\n-            (value instanceof Boolean))\r\n-        {\r\n-          String valueString = (value != null)\r\n-                                ? value.toString()\r\n-                                : null;\r\n-\r\n-          return new AttributeDocumentChange(change.getAttributeName(),\r\n-                                             valueString);\r\n-        }\r\n-      }\r\n-\r\n-      // no conversion possible\r\n-      return null;\r\n-    }\r\n-  }\r\n-\r\n-  private static HashMap _CLASSNAME_TO_CONVERTER_NAME_MAP = new HashMap();\r\n-  private static HashMap _CLASS_TO_CONVERTER_MAP = new HashMap();\r\n-\r\n-  static private final ADFLogger _LOG = \tADFLogger.createADFLogger(ChangeManager.class);\r\n-\r\n-  static\r\n-  {\r\n-    // register the attribute converter\r\n-    _CLASS_TO_CONVERTER_MAP.put(AttributeComponentChange.class,\r\n-                                new AttributeConverter());\r\n-  }\r\n-\r\n+/*\n+ * Copyright  2005,2006 The Apache Software Foundation.\n+ * \n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ * \n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ * \n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.myfaces.adf.change;\n+\n+import java.util.HashMap;\n+import java.util.Iterator;\n+\n+import javax.faces.component.UIComponent;\n+import javax.faces.context.FacesContext;\n+\n+import org.apache.myfaces.adf.logging.ADFLogger;\n+\n+/**\n+ * The base class for all ChangeManagers.\n+ * A ChangeManager should manage accumulation of Changes and also\n+ *  take care of their persistence.\n+ * @version $Name:  $ ($Revision: adfrt/faces/adf-faces-api/src/main/java/oracle/adf/view/faces/change/ChangeManager.java#0 $) $Date: 10-nov-2005.19:09:58 $\n+ * @author The Oracle ADF Faces Team\n+ */\n+public abstract class ChangeManager\n+{\n+  public static void registerDocumentFactory(\n+    String targetClassName,\n+    String converterClassName)\n+  {\n+    if ((targetClassName == null) || (targetClassName.length() == 0))\n+      throw new IllegalArgumentException(\"target class name must be provided\");\n+\n+    if ((converterClassName == null) || (converterClassName.length() == 0))\n+      throw new IllegalArgumentException(\"converter class name must be provided\");\n+\n+    synchronized (_CLASSNAME_TO_CONVERTER_NAME_MAP)\n+    {\n+      _CLASSNAME_TO_CONVERTER_NAME_MAP.put(targetClassName, converterClassName);\n+    }\n+  }\n+\n+  /**\n+   * Use the conversion rules to attempt to retrieve the equivalent\n+   * document change for a ComponentChange\n+   * @param change to convert\n+   */\n+  protected static DocumentChange createDocumentChange(\n+    ComponentChange change)\n+  {\n+    Class changeClass = change.getClass();\n+\n+    Object converterObject = null;\n+    DocumentChangeFactory converter = null;\n+\n+    synchronized (_CLASS_TO_CONVERTER_MAP)\n+    {\n+      converterObject = _CLASS_TO_CONVERTER_MAP.get(changeClass);\n+    }\n+\n+    if (converterObject != null)\n+    {\n+      converter = (DocumentChangeFactory)converterObject;\n+    }\n+    else\n+    {\n+      String converterName = null;\n+\n+      synchronized (_CLASSNAME_TO_CONVERTER_NAME_MAP)\n+      {\n+       converterName = \n+                  _CLASSNAME_TO_CONVERTER_NAME_MAP.get(changeClass.getName());\n+      }\n+\n+      if (converterName != null)\n+      {\n+        try\n+        {\n+          ClassLoader contextClassLoader =\n+            Thread.currentThread().getContextClassLoader();\n+\n+          Class converterClass = contextClassLoader.loadClass(converterName);\n+          if (DocumentChangeFactory.class.isAssignableFrom(converterClass))\n+          {\n+            converter = (DocumentChangeFactory)converterClass.newInstance();\n+\n+            synchronized (_CLASS_TO_CONVERTER_MAP)\n+            {\n+              _CLASS_TO_CONVERTER_MAP.put(changeClass, converter);\n+            }\n+          }\n+          else\n+          {\n+            // log warning because class isn't correct type\n+            _LOG.warning(\"Conversion class:\" + converterClass + \" not of type \" + DocumentChangeFactory.class); // NOTRANS\n+          }\n+        }\n+        catch (Throwable e)\n+        {\n+          _LOG.warning(\"Unable to instantiate converterClass:\" + converterName, e); // NOTRANS\n+        }\n+\n+\t// if the registered converter class name doesn't work remove\n+\t// it from _CLASSNAME_TO_CONVERT_NAME_MAP\n+        if (converter == null)\n+        {\n+          // this entry doesn't work, so remove it\n+          _CLASSNAME_TO_CONVERTER_NAME_MAP.remove(converterName);\n+\n+          return null;\n+        }\n+      }\n+    }\n+\n+    // return the converted object\n+    if (converter != null)\n+      return converter.convert(change);\n+    \n+    return null;\n+  }\n+\n+\n+\n+  /**\n+   * Add a ComponentChange to this current request for a specified component.\n+   * @throws IllegalArgumentException if any of the supplied parameters were to\n+   *          be null.\n+   */\n+  public abstract void addComponentChange(\n+    FacesContext facesContext,\n+    UIComponent uiComponent,\n+    ComponentChange change);\n+\n+  /**\n+   * Add a DocumentChange to this current request for a specified component.\n+   * @throws IllegalArgumentException if any of the supplied parameters were to\n+   *          be null.\n+   */\n+  public void addDocumentChange(\n+      FacesContext facesContext,\n+      UIComponent uiComponent,\n+      DocumentChange change)\n+  {\n+    if (facesContext == null || uiComponent == null || change == null)\n+      throw new IllegalArgumentException(\n+        \"Cannot add a Change with either of facesContext, uiComponent or \" +\n+        \"Change being null.\");\n+  }\n+\n+  /**\n+   * Retrieve the ComponentChanges available for specified component on this\n+   *  request.\n+   * @return An Iterator of ComponentChanges in the order in which they\n+   *         are associated with the UIComponent.\n+   *         Returns <code>null<code> if there are no such Changes\n+   */\n+  public abstract Iterator getComponentChanges(\n+    FacesContext facesContext,\n+    UIComponent uiComponent);\n+\n+  /**\n+  * Retrieve the identifiers of all components on this request that have Changes\n+  *  associated with them.\n+  * @return An Iterator that can be used to access the collection of component\n+  *          identifiers. Returns null if there are no such components.\n+  */\n+  public abstract Iterator getComponentIdsWithChanges(\n+    FacesContext facesContext);\n+\n+  private static class AttributeConverter extends DocumentChangeFactory\n+  {\n+    public DocumentChange convert(ComponentChange compChange)\n+    {\n+      if (compChange instanceof AttributeComponentChange)\n+      {\n+        AttributeComponentChange change = (AttributeComponentChange)compChange;\n+\n+        Object value = change.getAttributeValue();\n+\n+        // =-= bts TODO add registration of attribute converters\n+        if ((value == null) ||\n+            (value instanceof CharSequence) ||\n+            (value instanceof Number) ||\n+            (value instanceof Boolean))\n+        {\n+          String valueString = (value != null)\n+                                ? value.toString()\n+                                : null;\n+\n+          return new AttributeDocumentChange(change.getAttributeName(),\n+                                             valueString);\n+        }\n+      }\n+\n+      // no conversion possible\n+      return null;\n+    }\n+  }\n+\n+  private static HashMap<String, String> _CLASSNAME_TO_CONVERTER_NAME_MAP =\n+    new HashMap<String, String>();\n+  private static HashMap _CLASS_TO_CONVERTER_MAP = new HashMap();\n+\n+  static private final ADFLogger _LOG = \n+     ADFLogger.createADFLogger(ChangeManager.class);\n+\n+  static\n+  {\n+    // register the attribute converter\n+    _CLASS_TO_CONVERTER_MAP.put(AttributeComponentChange.class,\n+                                new AttributeConverter());\n+  }\n+\n }", "filename": "adf-faces-api/src/main/java/org/apache/myfaces/adf/change/ChangeManager.java"}], "repo": "myfaces-trinidad"}, {"commit": "https://github.com/apache/myfaces-trinidad/commit/f78936c4004bd2985b1396ebca72984ab5ebd8a8", "parent": "https://github.com/apache/myfaces-trinidad/commit/4b4aefd3a67385c52d061ac8280eb783aa3b23e8", "message": "ADFFACES-69: Bug Fix on the Change Persistence Manager: ADDCHILDCOMPONENTCHANGE FOR IMAGE THROWS NPE", "bug_id": "myfaces-trinidad_38", "file": [{"additions": 222, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/f78936c4004bd2985b1396ebca72984ab5ebd8a8/adf-faces/adf-faces-api/src/main/java/org/apache/myfaces/adf/change/ChangeManager.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/f78936c4004bd2985b1396ebca72984ab5ebd8a8/adf-faces/adf-faces-api/src/main/java/org/apache/myfaces/adf/change/ChangeManager.java", "sha": "ac3c7d1d602e22170311655e55de033abc2e8a35", "changes": 439, "status": "modified", "deletions": 217, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/adf-faces/adf-faces-api/src/main/java/org/apache/myfaces/adf/change/ChangeManager.java?ref=f78936c4004bd2985b1396ebca72984ab5ebd8a8", "patch": "@@ -1,218 +1,223 @@\n-/*\r\n- * Copyright  2005,2006 The Apache Software Foundation.\r\n- * \r\n- * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n- * you may not use this file except in compliance with the License.\r\n- * You may obtain a copy of the License at\r\n- * \r\n- *      http://www.apache.org/licenses/LICENSE-2.0\r\n- * \r\n- * Unless required by applicable law or agreed to in writing, software\r\n- * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n- * See the License for the specific language governing permissions and\r\n- * limitations under the License.\r\n- */\r\n-\r\n-package org.apache.myfaces.adf.change;\r\n-\r\n-import java.util.HashMap;\r\n-import java.util.Iterator;\r\n-\r\n-import javax.faces.component.UIComponent;\r\n-import javax.faces.context.FacesContext;\r\n-\r\n-import org.apache.myfaces.adf.logging.ADFLogger;\r\n-\r\n-/**\r\n- * The base class for all ChangeManagers.\r\n- * A ChangeManager should manage accumulation of Changes and also\r\n- *  take care of their persistence.\r\n- * @version $Name:  $ ($Revision: adfrt/faces/adf-faces-api/src/main/java/oracle/adf/view/faces/change/ChangeManager.java#0 $) $Date: 10-nov-2005.19:09:58 $\r\n- * @author The Oracle ADF Faces Team\r\n- */\r\n-public abstract class ChangeManager\r\n-{\r\n-  public static void registerDocumentFactory(\r\n-    String targetClassName,\r\n-    String converterClassName)\r\n-  {\r\n-    if ((targetClassName == null) || (targetClassName.length() == 0))\r\n-      throw new IllegalArgumentException(\"target class name must be provided\");\r\n-\r\n-    if ((converterClassName == null) || (converterClassName.length() == 0))\r\n-      throw new IllegalArgumentException(\"converter class name must be provided\");\r\n-\r\n-    synchronized (_CLASSNAME_TO_CONVERTER_NAME_MAP)\r\n-    {\r\n-      _CLASSNAME_TO_CONVERTER_NAME_MAP.put(targetClassName, converterClassName);\r\n-    }\r\n-  }\r\n-\r\n-  /**\r\n-   * Use the conversion rules to attempt to retrieve the equivalent\r\n-   * document change for a ComponentChange\r\n-   * @param change to convert\r\n-   */\r\n-  protected static DocumentChange createDocumentChange(\r\n-    ComponentChange change)\r\n-  {\r\n-    Class changeClass = change.getClass();\r\n-\r\n-    Object converterObject = null;\r\n-    DocumentChangeFactory converter = null;\r\n-\r\n-    //=-=pu todo (as info from Lakshmi) Converter returns null for case of facets\r\n-    synchronized (_CLASS_TO_CONVERTER_MAP)\r\n-    {\r\n-      converterObject = _CLASS_TO_CONVERTER_MAP.get(changeClass);\r\n-    }\r\n-\r\n-    if (converterObject != null)\r\n-    {\r\n-      converter = (DocumentChangeFactory)converterObject;\r\n-    }\r\n-    else\r\n-    {\r\n-      String converterName = null;\r\n-\r\n-      synchronized (_CLASSNAME_TO_CONVERTER_NAME_MAP)\r\n-      {\r\n-       converterName = (String)\r\n-                  _CLASSNAME_TO_CONVERTER_NAME_MAP.get(changeClass.getName());\r\n-      }\r\n-\r\n-      if (converterName != null)\r\n-      {\r\n-        try\r\n-        {\r\n-          ClassLoader contextClassLoader = Thread.currentThread().getContextClassLoader();\r\n-\r\n-          Class converterClass = contextClassLoader.loadClass(converterName);\r\n-\r\n-          if (DocumentChangeFactory.class.isAssignableFrom(converterClass))\r\n-          {\r\n-            converter = (DocumentChangeFactory)converterClass.newInstance();\r\n-\r\n-            synchronized (_CLASS_TO_CONVERTER_MAP)\r\n-            {\r\n-              converterObject = _CLASS_TO_CONVERTER_MAP.put(changeClass,\r\n-                                                            converter);\r\n-            }\r\n-          }\r\n-          else\r\n-          {\r\n-            // log warning because class isn't correct type\r\n-            _LOG.warning(\"Conversion class:\" + converterClass + \" not of type \" + DocumentChangeFactory.class); // NOTRANS\r\n-          }\r\n-        }\r\n-        catch (Throwable e)\r\n-        {\r\n-          _LOG.warning(\"Unable to instantiate converterClass:\" + converterName, e); // NOTRANS\r\n-        }\r\n-\r\n-        if (converterObject == null)\r\n-        {\r\n-          // this entry doesn't work, so remove it\r\n-          _CLASSNAME_TO_CONVERTER_NAME_MAP.remove(converterName);\r\n-\r\n-          return null;\r\n-        }\r\n-      }\r\n-    }\r\n-\r\n-    // return the converted object\r\n-    return converter.convert(change);\r\n-  }\r\n-\r\n-\r\n-\r\n-  /**\r\n-   * Add a ComponentChange to this current request for a specified component.\r\n-   * @throws IllegalArgumentException if any of the supplied parameters were to\r\n-   *          be null.\r\n-   */\r\n-  public abstract void addComponentChange(\r\n-    FacesContext facesContext,\r\n-    UIComponent uiComponent,\r\n-    ComponentChange change);\r\n-\r\n-  /**\r\n-   * Add a DocumentChange to this current request for a specified component.\r\n-   * @throws IllegalArgumentException if any of the supplied parameters were to\r\n-   *          be null.\r\n-   */\r\n-  public void addDocumentChange(\r\n-      FacesContext facesContext,\r\n-      UIComponent uiComponent,\r\n-      DocumentChange change)\r\n-  {\r\n-    if (facesContext == null || uiComponent == null || change == null)\r\n-      throw new IllegalArgumentException(\r\n-        \"Cannot add a Change with either of facesContext, uiComponent or \" +\r\n-        \"Change being null.\");\r\n-  }\r\n-\r\n-  /**\r\n-   * Retrieve the ComponentChanges available for specified component on this\r\n-   *  request.\r\n-   * @return An Iterator of ComponentChanges in the order in which they\r\n-   *         are associated with the UIComponent.\r\n-   *         Returns <code>null<code> if there are no such Changes\r\n-   */\r\n-  public abstract Iterator getComponentChanges(\r\n-    FacesContext facesContext,\r\n-    UIComponent uiComponent);\r\n-\r\n-  /**\r\n-  * Retrieve the identifiers of all components on this request that have Changes\r\n-  *  associated with them.\r\n-  * @return An Iterator that can be used to access the collection of component\r\n-  *          identifiers. Returns null if there are no such components.\r\n-  */\r\n-  public abstract Iterator getComponentIdsWithChanges(\r\n-    FacesContext facesContext);\r\n-\r\n-  private static class AttributeConverter extends DocumentChangeFactory\r\n-  {\r\n-    public DocumentChange convert(ComponentChange compChange)\r\n-    {\r\n-      if (compChange instanceof AttributeComponentChange)\r\n-      {\r\n-        AttributeComponentChange change = (AttributeComponentChange)compChange;\r\n-\r\n-        Object value = change.getAttributeValue();\r\n-\r\n-        // =-= bts TODO add registration of attribute converters\r\n-        if ((value == null) ||\r\n-            (value instanceof CharSequence) ||\r\n-            (value instanceof Number) ||\r\n-            (value instanceof Boolean))\r\n-        {\r\n-          String valueString = (value != null)\r\n-                                ? value.toString()\r\n-                                : null;\r\n-\r\n-          return new AttributeDocumentChange(change.getAttributeName(),\r\n-                                             valueString);\r\n-        }\r\n-      }\r\n-\r\n-      // no conversion possible\r\n-      return null;\r\n-    }\r\n-  }\r\n-\r\n-  private static HashMap _CLASSNAME_TO_CONVERTER_NAME_MAP = new HashMap();\r\n-  private static HashMap _CLASS_TO_CONVERTER_MAP = new HashMap();\r\n-\r\n-  static private final ADFLogger _LOG = \tADFLogger.createADFLogger(ChangeManager.class);\r\n-\r\n-  static\r\n-  {\r\n-    // register the attribute converter\r\n-    _CLASS_TO_CONVERTER_MAP.put(AttributeComponentChange.class,\r\n-                                new AttributeConverter());\r\n-  }\r\n-\r\n+/*\n+ * Copyright  2005,2006 The Apache Software Foundation.\n+ * \n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ * \n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ * \n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.myfaces.adf.change;\n+\n+import java.util.HashMap;\n+import java.util.Iterator;\n+\n+import javax.faces.component.UIComponent;\n+import javax.faces.context.FacesContext;\n+\n+import org.apache.myfaces.adf.logging.ADFLogger;\n+\n+/**\n+ * The base class for all ChangeManagers.\n+ * A ChangeManager should manage accumulation of Changes and also\n+ *  take care of their persistence.\n+ * @version $Name:  $ ($Revision: adfrt/faces/adf-faces-api/src/main/java/oracle/adf/view/faces/change/ChangeManager.java#0 $) $Date: 10-nov-2005.19:09:58 $\n+ * @author The Oracle ADF Faces Team\n+ */\n+public abstract class ChangeManager\n+{\n+  public static void registerDocumentFactory(\n+    String targetClassName,\n+    String converterClassName)\n+  {\n+    if ((targetClassName == null) || (targetClassName.length() == 0))\n+      throw new IllegalArgumentException(\"target class name must be provided\");\n+\n+    if ((converterClassName == null) || (converterClassName.length() == 0))\n+      throw new IllegalArgumentException(\"converter class name must be provided\");\n+\n+    synchronized (_CLASSNAME_TO_CONVERTER_NAME_MAP)\n+    {\n+      _CLASSNAME_TO_CONVERTER_NAME_MAP.put(targetClassName, converterClassName);\n+    }\n+  }\n+\n+  /**\n+   * Use the conversion rules to attempt to retrieve the equivalent\n+   * document change for a ComponentChange\n+   * @param change to convert\n+   */\n+  protected static DocumentChange createDocumentChange(\n+    ComponentChange change)\n+  {\n+    Class changeClass = change.getClass();\n+\n+    Object converterObject = null;\n+    DocumentChangeFactory converter = null;\n+\n+    synchronized (_CLASS_TO_CONVERTER_MAP)\n+    {\n+      converterObject = _CLASS_TO_CONVERTER_MAP.get(changeClass);\n+    }\n+\n+    if (converterObject != null)\n+    {\n+      converter = (DocumentChangeFactory)converterObject;\n+    }\n+    else\n+    {\n+      String converterName = null;\n+\n+      synchronized (_CLASSNAME_TO_CONVERTER_NAME_MAP)\n+      {\n+       converterName = \n+                  _CLASSNAME_TO_CONVERTER_NAME_MAP.get(changeClass.getName());\n+      }\n+\n+      if (converterName != null)\n+      {\n+        try\n+        {\n+          ClassLoader contextClassLoader =\n+            Thread.currentThread().getContextClassLoader();\n+\n+          Class converterClass = contextClassLoader.loadClass(converterName);\n+          if (DocumentChangeFactory.class.isAssignableFrom(converterClass))\n+          {\n+            converter = (DocumentChangeFactory)converterClass.newInstance();\n+\n+            synchronized (_CLASS_TO_CONVERTER_MAP)\n+            {\n+              _CLASS_TO_CONVERTER_MAP.put(changeClass, converter);\n+            }\n+          }\n+          else\n+          {\n+            // log warning because class isn't correct type\n+            _LOG.warning(\"Conversion class:\" + converterClass + \" not of type \" + DocumentChangeFactory.class); // NOTRANS\n+          }\n+        }\n+        catch (Throwable e)\n+        {\n+          _LOG.warning(\"Unable to instantiate converterClass:\" + converterName, e); // NOTRANS\n+        }\n+\n+\t// if the registered converter class name doesn't work remove\n+\t// it from _CLASSNAME_TO_CONVERT_NAME_MAP\n+        if (converter == null)\n+        {\n+          // this entry doesn't work, so remove it\n+          _CLASSNAME_TO_CONVERTER_NAME_MAP.remove(converterName);\n+\n+          return null;\n+        }\n+      }\n+    }\n+\n+    // return the converted object\n+    if (converter != null)\n+      return converter.convert(change);\n+    \n+    return null;\n+  }\n+\n+\n+\n+  /**\n+   * Add a ComponentChange to this current request for a specified component.\n+   * @throws IllegalArgumentException if any of the supplied parameters were to\n+   *          be null.\n+   */\n+  public abstract void addComponentChange(\n+    FacesContext facesContext,\n+    UIComponent uiComponent,\n+    ComponentChange change);\n+\n+  /**\n+   * Add a DocumentChange to this current request for a specified component.\n+   * @throws IllegalArgumentException if any of the supplied parameters were to\n+   *          be null.\n+   */\n+  public void addDocumentChange(\n+      FacesContext facesContext,\n+      UIComponent uiComponent,\n+      DocumentChange change)\n+  {\n+    if (facesContext == null || uiComponent == null || change == null)\n+      throw new IllegalArgumentException(\n+        \"Cannot add a Change with either of facesContext, uiComponent or \" +\n+        \"Change being null.\");\n+  }\n+\n+  /**\n+   * Retrieve the ComponentChanges available for specified component on this\n+   *  request.\n+   * @return An Iterator of ComponentChanges in the order in which they\n+   *         are associated with the UIComponent.\n+   *         Returns <code>null<code> if there are no such Changes\n+   */\n+  public abstract Iterator getComponentChanges(\n+    FacesContext facesContext,\n+    UIComponent uiComponent);\n+\n+  /**\n+  * Retrieve the identifiers of all components on this request that have Changes\n+  *  associated with them.\n+  * @return An Iterator that can be used to access the collection of component\n+  *          identifiers. Returns null if there are no such components.\n+  */\n+  public abstract Iterator getComponentIdsWithChanges(\n+    FacesContext facesContext);\n+\n+  private static class AttributeConverter extends DocumentChangeFactory\n+  {\n+    public DocumentChange convert(ComponentChange compChange)\n+    {\n+      if (compChange instanceof AttributeComponentChange)\n+      {\n+        AttributeComponentChange change = (AttributeComponentChange)compChange;\n+\n+        Object value = change.getAttributeValue();\n+\n+        // =-= bts TODO add registration of attribute converters\n+        if ((value == null) ||\n+            (value instanceof CharSequence) ||\n+            (value instanceof Number) ||\n+            (value instanceof Boolean))\n+        {\n+          String valueString = (value != null)\n+                                ? value.toString()\n+                                : null;\n+\n+          return new AttributeDocumentChange(change.getAttributeName(),\n+                                             valueString);\n+        }\n+      }\n+\n+      // no conversion possible\n+      return null;\n+    }\n+  }\n+\n+  private static HashMap<String, String> _CLASSNAME_TO_CONVERTER_NAME_MAP =\n+    new HashMap<String, String>();\n+  private static HashMap _CLASS_TO_CONVERTER_MAP = new HashMap();\n+\n+  static private final ADFLogger _LOG = \n+     ADFLogger.createADFLogger(ChangeManager.class);\n+\n+  static\n+  {\n+    // register the attribute converter\n+    _CLASS_TO_CONVERTER_MAP.put(AttributeComponentChange.class,\n+                                new AttributeConverter());\n+  }\n+\n }", "filename": "adf-faces/adf-faces-api/src/main/java/org/apache/myfaces/adf/change/ChangeManager.java"}], "repo": "myfaces-trinidad"}, {"commit": "https://github.com/apache/myfaces-trinidad/commit/9abaae88af63ccfca8d6a8141e7dc8919da52d21", "parent": "https://github.com/apache/myfaces-trinidad/commit/50e60381b8a3ad891825e1e424e74a7b2f0758e4", "message": "TRINIDAD-1639 NPE thrown when ResponseStateManagerImpl returns a null state - on partialSubmit using a JSF 2.0 Ajax APIs...", "bug_id": "myfaces-trinidad_39", "file": [{"additions": 34, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/9abaae88af63ccfca8d6a8141e7dc8919da52d21/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/application/StateManagerImpl.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/9abaae88af63ccfca8d6a8141e7dc8919da52d21/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/application/StateManagerImpl.java", "sha": "b18c9c8bd56d0ef093021cb13bb08733d0199177", "changes": 58, "status": "modified", "deletions": 24, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/application/StateManagerImpl.java?ref=9abaae88af63ccfca8d6a8141e7dc8919da52d21", "patch": "@@ -112,6 +112,22 @@ public StateManager getWrapped()\n     return _delegate;\n   }\n \n+  @Override\n+  public String getViewState(FacesContext context)\n+  {\n+    Object state = saveView(context);\n+    \n+    if (state != null)\n+    {\n+      return context.getRenderKit().getResponseStateManager().getViewState(context,state);\n+    }\n+    else\n+    {\n+      return null;\n+    }\n+\n+  }\n+\n   @SuppressWarnings(\"deprecation\")\n   @Override\n   public Object saveView(FacesContext context)\n@@ -138,14 +154,7 @@ public Object saveView(FacesContext context)\n     }\n     \n     String viewId = context.getViewRoot().getViewId();\n-    ViewDeclarationLanguage vdl =  context.getApplication().getViewHandler().\n-                                                    getViewDeclarationLanguage(context, viewId);\n-    StateManagementStrategy sms = null;\n-    \n-    if (vdl != null) \n-    {\n-      sms = vdl.getStateManagementStrategy(context, viewId);\n-    }    \n+    StateManagementStrategy sms = _getStateManagementStrategy(context, viewId);\n     \n     if (sms != null) \n     {      \n@@ -498,14 +507,7 @@ public UIViewRoot restoreView(FacesContext context, String viewId,\n         return root;\n       }\n \n-      ViewDeclarationLanguage vdl = context.getApplication().getViewHandler().\n-                                                        getViewDeclarationLanguage(context, viewId);    \n-      StateManagementStrategy sms = null;\n-      \n-      if (vdl != null) \n-      {\n-        sms = vdl.getStateManagementStrategy(context, viewId);\n-      }\n+      StateManagementStrategy sms = _getStateManagementStrategy(context, viewId);\n       \n       if (sms!= null) \n       {\n@@ -536,14 +538,8 @@ public UIViewRoot restoreView(FacesContext context, String viewId,\n     }\n     else\n     {\n-      ViewDeclarationLanguage vdl = context.getApplication().getViewHandler().\n-                                                       getViewDeclarationLanguage(context, viewId);    \n-      StateManagementStrategy sms = null;\n-      \n-      if (vdl != null) \n-      {\n-        sms = vdl.getStateManagementStrategy(context, viewId);\n-      }\n+\n+      StateManagementStrategy sms = _getStateManagementStrategy(context, viewId);\n       \n       if (sms!= null) \n       {\n@@ -915,6 +911,20 @@ private void _saveCachedViewState(\n     context.getExternalContext().getRequestMap().put(_CACHED_VIEW_STATE,\n                                                      state);\n   }\n+  \n+  private StateManagementStrategy _getStateManagementStrategy(FacesContext context, String viewId)\n+  {\n+    ViewDeclarationLanguage vdl =  context.getApplication().getViewHandler().\n+                                                    getViewDeclarationLanguage(context, viewId);\n+    if (vdl != null) \n+    {\n+      return vdl.getStateManagementStrategy(context, viewId);\n+    }    \n+    else\n+    {\n+      return null;\n+    }\n+  }\n \n   private static final class ViewRootState\n   {", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/application/StateManagerImpl.java"}, {"additions": 73, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/9abaae88af63ccfca8d6a8141e7dc8919da52d21/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/CoreResponseStateManager.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/9abaae88af63ccfca8d6a8141e7dc8919da52d21/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/CoreResponseStateManager.java", "sha": "cc3fc6626cc83242039405ae8dc97d46685750d4", "changes": 96, "status": "modified", "deletions": 23, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/CoreResponseStateManager.java?ref=9abaae88af63ccfca8d6a8141e7dc8919da52d21", "patch": "@@ -6,9 +6,9 @@\n  *  to you under the Apache License, Version 2.0 (the\n  *  \"License\"); you may not use this file except in compliance\n  *  with the License.  You may obtain a copy of the License at\n- * \n+ *\n  *  http://www.apache.org/licenses/LICENSE-2.0\n- * \n+ *\n  *  Unless required by applicable law or agreed to in writing,\n  *  software distributed under the License is distributed on an\n  *  \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n@@ -18,36 +18,34 @@\n  */\n package org.apache.myfaces.trinidadinternal.renderkit.core;\n \n-import javax.faces.application.StateManager;\n-import javax.faces.context.FacesContext;\n-import javax.faces.context.ResponseWriter;\n-import javax.faces.render.ResponseStateManager;\n-\n+import java.io.BufferedReader;\n+import java.io.BufferedWriter;\n import java.io.IOException;\n import java.io.ObjectInputStream;\n import java.io.ObjectOutput;\n import java.io.ObjectOutputStream;\n+import java.io.ObjectStreamClass;\n import java.io.OptionalDataException;\n import java.io.StringReader;\n-import java.io.BufferedReader;\n import java.io.StringWriter;\n-import java.io.BufferedWriter;\n \n-\n-import java.io.ObjectStreamClass;\n-\n-import java.util.zip.GZIPOutputStream;\n+import java.util.Map;\n import java.util.zip.GZIPInputStream;\n+import java.util.zip.GZIPOutputStream;\n \n-import java.util.Map;\n+import javax.faces.FacesException;\n+import javax.faces.application.StateManager;\n+import javax.faces.context.FacesContext;\n+import javax.faces.context.ResponseWriter;\n+import javax.faces.render.ResponseStateManager;\n \n import org.apache.myfaces.trinidad.logging.TrinidadLogger;\n-\n import org.apache.myfaces.trinidad.util.Base64InputStream;\n import org.apache.myfaces.trinidad.util.Base64OutputStream;\n import org.apache.myfaces.trinidad.util.ClassLoaderUtils;\n import org.apache.myfaces.trinidadinternal.application.StateManagerImpl;\n \n+\n /**\n  * ResponseStateManager implementation for the Core RenderKit.\n  * <p>\n@@ -56,21 +54,21 @@\n {\n \n   @Override\n-  public Object getState(FacesContext context, String viewId) \n+  public Object getState(FacesContext context, String viewId)\n   {\n-    // TODO see doc in StateManagerImpl.restoreView \n+    // TODO see doc in StateManagerImpl.restoreView\n     // (search for StateManagerImpl.RESPONSE_STATE_MANAGER_STATE_KEY) to see doc\n     // about what's going on here\n     Object state = context.getExternalContext().getRequestMap().get(\n                                               StateManagerImpl.RESPONSE_STATE_MANAGER_STATE_KEY);\n-    \n+\n     if (state != null)\n       return state;\n-    else \n+    else\n       return super.getState(context, viewId);\n   }\n-  \n-  \n+\n+\n   /**\n    * Name of the form field that encodes the UI state.\n    */\n@@ -161,6 +159,56 @@ public Object getComponentStateToRestore(FacesContext context)\n     return view[1];\n   }\n \n+  @Override\n+  public String getViewState(FacesContext context, Object state)\n+  {\n+    StateManager.SerializedView serializedView = _getSerializedView(context, state);\n+    try\n+    {\n+      return encodeSerializedViewAsString(serializedView);\n+    }\n+    catch (IOException e)\n+    {\n+      throw new FacesException();\n+    }\n+  }\n+\n+  private StateManager.SerializedView _getSerializedView(FacesContext context, Object state)\n+  {\n+\n+    StateManager.SerializedView view;\n+    if (state instanceof StateManager.SerializedView)\n+    {\n+      view = (StateManager.SerializedView) state;\n+    }\n+    else\n+    {\n+      if (state instanceof Object[])\n+      {\n+        Object[] stateArray = (Object[]) state;\n+\n+        // in theory the state should be a black box, but the RI makes assumptions\n+        // that the state is an array of length 2\n+        if (stateArray.length == 2)\n+        {\n+          StateManager stateManager =\n+            context.getApplication().getStateManager();\n+          view =\n+              stateManager.new SerializedView(stateArray[0], stateArray[1]);\n+        }\n+        else\n+        {\n+          throw new IllegalArgumentException(_LOG.getMessage(\"UNEXPECTED_STATE\"));\n+        }\n+      }\n+      else\n+      {\n+        throw new IllegalArgumentException(_LOG.getMessage(\"UNEXPECTED_STATE\"));\n+      }\n+    }\n+\n+    return view;\n+  }\n \n   /**\n    * Restore the serialized view from the incoming request.\n@@ -171,9 +219,9 @@ public Object getComponentStateToRestore(FacesContext context)\n   private Object[] _restoreSerializedView(\n      FacesContext context)\n   {\n-    Map<String, Object> requestMap = \n+    Map<String, Object> requestMap =\n       context.getExternalContext().getRequestMap();\n-    \n+\n     Object[] view = (Object[]) requestMap.get(_CACHED_SERIALIZED_VIEW);\n     if (view == null)\n     {\n@@ -245,6 +293,8 @@ public Object getComponentStateToRestore(FacesContext context)\n   }\n \n \n+\n+\n   /* Test code for dumping out the page's state\n   static private void _dump(Object o)\n   {", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/CoreResponseStateManager.java"}, {"additions": 3, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/9abaae88af63ccfca8d6a8141e7dc8919da52d21/trinidad-impl/src/main/xrts/org/apache/myfaces/trinidadinternal/resource/LoggerBundle.xrts", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/9abaae88af63ccfca8d6a8141e7dc8919da52d21/trinidad-impl/src/main/xrts/org/apache/myfaces/trinidadinternal/resource/LoggerBundle.xrts", "sha": "2f2a44317009e9dc98ba0875c3c17f150269553c", "changes": 3, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/xrts/org/apache/myfaces/trinidadinternal/resource/LoggerBundle.xrts?ref=9abaae88af63ccfca8d6a8141e7dc8919da52d21", "patch": "@@ -1076,4 +1076,7 @@ The skin {0} specified on the requestMap will be used even though the consumer''\n <!-- INVALID_LOCALE_VARIANT_HAS_SLASH  -->\n <resource key=\"INVALID_LOCALE_VARIANT_HAS_SLASH\">Invalid variant for Locale identifier {0} - cannot contain slashes to avoid XSS attack. Will use empty string for variant.</resource>\n \n+<!-- UNEXPECTED_STATE -->\n+<resource key=\"UNEXPECTED_STATE\">IState must be an instance of StateManager.SerializedView or an Object array of length 2.</resource>\n+\n </resources>", "filename": "trinidad-impl/src/main/xrts/org/apache/myfaces/trinidadinternal/resource/LoggerBundle.xrts"}], "repo": "myfaces-trinidad"}, {"commit": "https://github.com/apache/myfaces-trinidad/commit/55b9bba3cfcf4aa243ece7b53b3fec08075b814f", "parent": "https://github.com/apache/myfaces-trinidad/commit/c2e20211ec54947368b7b6395ac08d658c2634fe", "message": "TRINIDAD-1520  NPE from Google Bot (unknown agent)\nbackport to 1.2.12.2-branch for Pavitra Subramaniam", "bug_id": "myfaces-trinidad_40", "file": [{"additions": 20, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/55b9bba3cfcf4aa243ece7b53b3fec08075b814f/trinidad-api/src/main/java/org/apache/myfaces/trinidad/context/Agent.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/55b9bba3cfcf4aa243ece7b53b3fec08075b814f/trinidad-api/src/main/java/org/apache/myfaces/trinidad/context/Agent.java", "sha": "b6829f421e2a78ff8aa2fdbaee0f2cf612635296", "changes": 20, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-api/src/main/java/org/apache/myfaces/trinidad/context/Agent.java?ref=55b9bba3cfcf4aa243ece7b53b3fec08075b814f", "patch": "@@ -61,6 +61,11 @@\n    */\n   public static final Object TYPE_PHONE = \"phone\";\n \n+  /**\n+   * Constant for unknown platform\n+   */\n+  public static final String PLATFORM_UNKNOWN = \"unknown\";\n+  \n   /**\n    * Constant for windows platform\n    */\n@@ -119,6 +124,11 @@\n    */\n   public static final String PLATFORM_GENERICPDA = \"genericpda\";\n \n+  /**\n+   * Constant for unknown platform version\n+   */\n+  public static final String PLATFORM_VERSION_UNKNOWN = \"unknown\";\n+\n   /**\n    * Constant for when the agent is not supported or not recognized\n    */\n@@ -174,6 +184,16 @@\n    */\n   public static final String AGENT_GENERICPDA = \"genericpda\";\n \n+  /**\n+   * Constant for unknown Agent version\n+   */\n+  public static final String AGENT_VERSION_UNKNOWN = \"unknown\";\n+\n+  /**\n+   * Constant for unknown make model version\n+   */\n+  public static final String MAKE_MODEL_UNKNOWN = \"unknown\";\n+\n   /**\n    *\n    * @return return the Type of Agent. Returns <code>TYPE_UNKNOWN</code> if not available.", "filename": "trinidad-api/src/main/java/org/apache/myfaces/trinidad/context/Agent.java"}, {"additions": 4, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/55b9bba3cfcf4aa243ece7b53b3fec08075b814f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/agent/AgentFactoryImpl.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/55b9bba3cfcf4aa243ece7b53b3fec08075b814f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/agent/AgentFactoryImpl.java", "sha": "fcf95a5c90680f84ee39adec3fab81ee4bf947fe", "changes": 21, "status": "modified", "deletions": 17, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/agent/AgentFactoryImpl.java?ref=55b9bba3cfcf4aa243ece7b53b3fec08075b814f", "patch": "@@ -104,12 +104,6 @@ private void _populateAgentImpl(\n       return;\n     }\n \n-    if (userAgent == null)\n-    {\n-      _populateUnknownAgentImpl(null, agent);\n-      return;\n-    }\n-\n     //the useragent string for telnet and PDA design time will start with\n     //OracleJDevMobile because in each of these cases we know we have an\n     //exact match in the device repository for the agent name.  This is\n@@ -264,12 +258,6 @@ private void _populateUnknownAgentImpl(String userAgent, AgentImpl agent)\n     // Log warning message that we are setting the agent entry to unknown attributes\n     _LOG.warning(\"UNKNOWN_AGENT_ATTRIBUTES_CREATE_WITH_UNKNOWN\", userAgent);\n     agent.setAgentEntryToNULL();\n-    agent.setAgent(Agent.AGENT_UNKNOWN);\n-    agent.setType(_UNKNOWN);\n-    agent.setAgentVersion(_UNKNOWN);\n-    agent.setPlatform(_UNKNOWN);\n-    agent.setPlatformVersion(_UNKNOWN);\n-    agent.setMakeModel(_UNKNOWN);\n   }\n \n   //populates the agent entry for DT access for either Telnet or PDA\n@@ -865,7 +853,7 @@ else if (agent.startsWith(\"compatible\", paren))\n       }\n \n       // try to determine the OS, if unknown\n-      if (agentObj.getPlatformName() == null)\n+      if (agentObj.getPlatformName() == null || agentObj.getPlatformName().equals(Agent.PLATFORM_UNKNOWN))\n       {\n         // Hack: treat the JDeveloper agent as Windows,\n         // so that we assume IE 6.0 Windows capabilities\n@@ -912,9 +900,9 @@ private void _populateEmailAgentImpl(AgentImpl agentObj)\n \n     agentObj.setAgent(Agent.AGENT_EMAIL);\n     agentObj.setAgentVersion(\"0.0\");\n-    agentObj.setPlatform(_UNKNOWN);\n-    agentObj.setPlatformVersion(_UNKNOWN);\n-    agentObj.setMakeModel(_UNKNOWN);\n+    agentObj.setPlatform(Agent.AGENT_UNKNOWN);\n+    agentObj.setPlatformVersion(Agent.PLATFORM_VERSION_UNKNOWN);\n+    agentObj.setMakeModel(Agent.MAKE_MODEL_UNKNOWN);\n \n   }  \n \n@@ -978,7 +966,6 @@ private String _getJavaOS(String base, int start)\n   static private final String _EMAIL_PARAM =\n     \"org.apache.myfaces.trinidad.agent.email\";\n   static final private String _IASW_DEVICE_HINT_PARAM = \"X-Oracle-Device.Class\";\n-  static final private String _UNKNOWN = \"unknown\";\n   static final private TrinidadLogger _LOG = TrinidadLogger.createTrinidadLogger(AgentFactoryImpl.class);\n \n }", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/agent/AgentFactoryImpl.java"}, {"additions": 5, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/55b9bba3cfcf4aa243ece7b53b3fec08075b814f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/agent/AgentImpl.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/55b9bba3cfcf4aa243ece7b53b3fec08075b814f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/agent/AgentImpl.java", "sha": "ed8e8616dad8b1f1fbc6d4c208d1be14ed059ab9", "changes": 10, "status": "modified", "deletions": 5, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/agent/AgentImpl.java?ref=55b9bba3cfcf4aa243ece7b53b3fec08075b814f", "patch": "@@ -146,11 +146,11 @@ public void setAgentEntryToNULL()\n   private static class AgentEntry\n   {\n     Object _type = TYPE_UNKNOWN;\n-    String _agent;\n-    String _agentVersion;\n-    String _platform;\n-    String _platformVersion;\n-    String _makeModel;\n+    String _agent = AGENT_UNKNOWN;\n+    String _agentVersion = AGENT_VERSION_UNKNOWN;\n+    String _platform = PLATFORM_UNKNOWN;\n+    String _platformVersion = PLATFORM_VERSION_UNKNOWN;\n+    String _makeModel = MAKE_MODEL_UNKNOWN;\n   }\n \n   void __addRequestCapability(CapabilityKey key,Object value)", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/agent/AgentImpl.java"}], "repo": "myfaces-trinidad"}, {"commit": "https://github.com/apache/myfaces-trinidad/commit/1919a625ebf8b661da7d92cc65e8efcd4dbb89f0", "parent": "https://github.com/apache/myfaces-trinidad/commit/9ed4aa05277825f8cbe542b69feb89a44be5386d", "message": "fix for [TRINIDAD-1520] - NPE from Google Bot (unknown agent) - by default, the properties of AgentImpl initialized with \"unknown\" values.", "bug_id": "myfaces-trinidad_41", "file": [{"additions": 20, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/1919a625ebf8b661da7d92cc65e8efcd4dbb89f0/trinidad-api/src/main/java/org/apache/myfaces/trinidad/context/Agent.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/1919a625ebf8b661da7d92cc65e8efcd4dbb89f0/trinidad-api/src/main/java/org/apache/myfaces/trinidad/context/Agent.java", "sha": "77753fd41e8dac6a0327acab7913ef873bae4442", "changes": 20, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-api/src/main/java/org/apache/myfaces/trinidad/context/Agent.java?ref=1919a625ebf8b661da7d92cc65e8efcd4dbb89f0", "patch": "@@ -61,6 +61,11 @@\n    */\n   public static final Object TYPE_PHONE = \"phone\";\n \n+ /**\n+   * Constant for Unknown platform\n+   */\n+  public static final String PLATFORM_UNKNOWN = \"unknown\";\n+\n   /**\n    * Constant for windows platform\n    */\n@@ -119,6 +124,11 @@\n    */\n   public static final String PLATFORM_GENERICPDA = \"genericpda\";\n \n+  /**\n+   * Constant for Unknown platform version\n+   */\n+  public static final String PLATFORM_VERSION_UNKNOWN = \"unknown\";\n+\n   /**\n    * Constant for when the agent is not supported or not recognized\n    */\n@@ -169,6 +179,16 @@\n    */\n   public static final String AGENT_GENERICPDA = \"genericpda\";\n \n+  /**\n+   * Constant for Unknown Agent version\n+   */\n+  public static final String AGENT_VERSION_UNKNOWN = \"unknown\";\n+\n+  /**\n+   * Constant for Unknown make model version\n+   */\n+  public static final String MAKE_MODEL_UNKNOWN = \"unknown\";\n+\n   /**\n    *\n    * @return return the Type of Agent. Returns <code>TYPE_UNKNOWN</code> if not available.", "filename": "trinidad-api/src/main/java/org/apache/myfaces/trinidad/context/Agent.java"}, {"additions": 6, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/1919a625ebf8b661da7d92cc65e8efcd4dbb89f0/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/agent/AgentFactoryImpl.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/1919a625ebf8b661da7d92cc65e8efcd4dbb89f0/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/agent/AgentFactoryImpl.java", "sha": "5dc0e99d1204e32ab3374b28fa939e951e1f4e2e", "changes": 23, "status": "modified", "deletions": 17, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/agent/AgentFactoryImpl.java?ref=1919a625ebf8b661da7d92cc65e8efcd4dbb89f0", "patch": "@@ -104,11 +104,7 @@ private void _populateAgentImpl(\n       return;\n     }\n \n-    if (userAgent == null)\n-    {\n-      _populateUnknownAgentImpl(null, agent);\n-      return;\n-    }\n+   \n \n     //the useragent string for telnet and PDA design time will start with\n     //OracleJDevMobile because in each of these cases we know we have an\n@@ -263,13 +259,7 @@ private void _populateUnknownAgentImpl(String userAgent, AgentImpl agent)\n   {\n     // Log warning message that we are setting the agent entry to unknown attributes\n     _LOG.warning(\"UNKNOWN_AGENT_ATTRIBUTES_CREATE_WITH_UNKNOWN\", userAgent);\n-    agent.setAgentEntryToNULL();\n-    agent.setAgent(Agent.AGENT_UNKNOWN);\n-    agent.setType(_UNKNOWN);\n-    agent.setAgentVersion(_UNKNOWN);\n-    agent.setPlatform(_UNKNOWN);\n-    agent.setPlatformVersion(_UNKNOWN);\n-    agent.setMakeModel(_UNKNOWN);\n+    agent.setAgentEntryToNULL();   \n   }\n \n   //populates the agent entry for DT access for either Telnet or PDA\n@@ -912,9 +902,9 @@ private void _populateEmailAgentImpl(AgentImpl agentObj)\n \n     agentObj.setAgent(Agent.AGENT_EMAIL);\n     agentObj.setAgentVersion(\"0.0\");\n-    agentObj.setPlatform(_UNKNOWN);\n-    agentObj.setPlatformVersion(_UNKNOWN);\n-    agentObj.setMakeModel(_UNKNOWN);\n+    agentObj.setPlatform(Agent.AGENT_UNKNOWN);\n+    agentObj.setPlatformVersion(Agent.PLATFORM_VERSION_UNKNOWN);\n+    agentObj.setMakeModel(Agent.MAKE_MODEL_UNKNOWN);\n \n   }  \n \n@@ -977,8 +967,7 @@ private String _getJavaOS(String base, int start)\n   }\n   static private final String _EMAIL_PARAM =\n     \"org.apache.myfaces.trinidad.agent.email\";\n-  static final private String _IASW_DEVICE_HINT_PARAM = \"X-Oracle-Device.Class\";\n-  static final private String _UNKNOWN = \"unknown\";\n+  static final private String _IASW_DEVICE_HINT_PARAM = \"X-Oracle-Device.Class\";  \n   static final private TrinidadLogger _LOG = TrinidadLogger.createTrinidadLogger(AgentFactoryImpl.class);\n \n }", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/agent/AgentFactoryImpl.java"}, {"additions": 5, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/1919a625ebf8b661da7d92cc65e8efcd4dbb89f0/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/agent/AgentImpl.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/1919a625ebf8b661da7d92cc65e8efcd4dbb89f0/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/agent/AgentImpl.java", "sha": "ed8e8616dad8b1f1fbc6d4c208d1be14ed059ab9", "changes": 10, "status": "modified", "deletions": 5, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/agent/AgentImpl.java?ref=1919a625ebf8b661da7d92cc65e8efcd4dbb89f0", "patch": "@@ -146,11 +146,11 @@ public void setAgentEntryToNULL()\n   private static class AgentEntry\n   {\n     Object _type = TYPE_UNKNOWN;\n-    String _agent;\n-    String _agentVersion;\n-    String _platform;\n-    String _platformVersion;\n-    String _makeModel;\n+    String _agent = AGENT_UNKNOWN;\n+    String _agentVersion = AGENT_VERSION_UNKNOWN;\n+    String _platform = PLATFORM_UNKNOWN;\n+    String _platformVersion = PLATFORM_VERSION_UNKNOWN;\n+    String _makeModel = MAKE_MODEL_UNKNOWN;\n   }\n \n   void __addRequestCapability(CapabilityKey key,Object value)", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/agent/AgentImpl.java"}], "repo": "myfaces-trinidad"}, {"commit": "https://github.com/apache/myfaces-trinidad/commit/caf30f9218082498746171acc6068ae2603ab76e", "parent": "https://github.com/apache/myfaces-trinidad/commit/af9ec097b8b6fe490036b782580b0f9d7d4a163c", "message": "TRINIDAD-1982 NPE in SkinUtils when there is an empty META-INF/trinidad-skins.xml file\nTRINIDAD-1981 add fine logging during skin addition registration\nMost of the fix is the adding fine logging. The NPE was fixed by only adding the metaInfSkinsNode to the sllSkinsNodes list if the node was not null.\nallSkinsNodes.add(metaInfSkinsNode);\nSkinCSSDocumentHandler has a couple of comment changes", "bug_id": "myfaces-trinidad_42", "file": [{"additions": 2, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/caf30f9218082498746171acc6068ae2603ab76e/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/skin/SkinCSSDocumentHandler.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/caf30f9218082498746171acc6068ae2603ab76e/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/skin/SkinCSSDocumentHandler.java", "sha": "92c022705dd85ba30fa024652225b9fa43c9f578", "changes": 3, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/skin/SkinCSSDocumentHandler.java?ref=caf30f9218082498746171acc6068ae2603ab76e", "patch": "@@ -53,6 +53,7 @@\n \n /** As the Skin css file is parsed, methods in this class are called to\n  * build up a SkinStyleSheetNode.\n+ * TODO figure out if this is thread-safe\n  *\n  */\n public class SkinCSSDocumentHandler\n@@ -80,7 +81,6 @@ public SkinCSSDocumentHandler(ParseContext pContext)\n      \n     List<SkinStyleSheetNode> allSkinStyleSheetNodes = new ArrayList<SkinStyleSheetNode>();\n \n-    // TODO Do we need to protect against concurrent access?\n     if (_imports != null && !_imports.isEmpty())\n     {\n       // _imports is a List<List<SkinStyleSheetNode>>();;\n@@ -371,6 +371,7 @@ private void _parseImport(String type)\n     \n     // Add the current identifier to the stack (used for detecting circular includes) \n     // placed on the ParseContext\n+    // cloning ParseContext does a shallow copy. It doesn't copy this list.\n     if (list == null)\n       list = new ArrayList<Object>();\n     else", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/skin/SkinCSSDocumentHandler.java"}, {"additions": 50, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/caf30f9218082498746171acc6068ae2603ab76e/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/skin/SkinUtils.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/caf30f9218082498746171acc6068ae2603ab76e/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/skin/SkinUtils.java", "sha": "29095f0f16ee9b3c6f60689af15b23cba8c55dfa", "changes": 60, "status": "modified", "deletions": 10, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/skin/SkinUtils.java?ref=caf30f9218082498746171acc6068ae2603ab76e", "patch": "@@ -130,8 +130,11 @@ static public void registerSkinExtensions(\n       SkinFactory.setFactory(new SkinFactoryImpl());\n       skinFactory = SkinFactory.getFactory();\n     }\n-\n+    boolean fine = _LOG.isFine();\n+    if (fine) _LOG.fine(\"Begin registerSkinExtensions\");\n     _registerSkinExtensionsAndAdditions(context, skinFactory);\n+    if (fine) _LOG.fine(\"End registerSkinExtensions\");\n+\n \n   }\n \n@@ -384,7 +387,8 @@ private static void _registerSkinExtensionsAndAdditions(\n      \n     // Add META-INF/trinidad-skins.xml skins to skin factory. (sorted first to make sure \n     // we register the most 'base' skins first)\n-    List<SkinsNode> metaInfSkinsNodeList = _getMetaInfSkinsNodeList(); \n+    if (_LOG.isFine()) _LOG.fine(\"Parse META-INF/trinidad-skins.xml files\");\n+    List<SkinsNode> metaInfSkinsNodeList = _getMetaInfSkinsNodeList();\n     // Go through each SkinsNode object \n     // (contains List of SkinNodes and List of SkinAdditionNodes)\n     // and return a List of the SkinNodes.\n@@ -401,7 +405,8 @@ private static void _registerSkinExtensionsAndAdditions(\n       _addSkinToFactory(skinFactory, skinNode, true);\n     }\n     \n-    // Add WEB-INF/trinidad-skins.xml skins to skin factory. (sorted first)    \n+    // Add WEB-INF/trinidad-skins.xml skins to skin factory. (sorted first) \n+    if (_LOG.isFine()) _LOG.fine(\"Parse WEB-INF/trinidad-skins.xml files\");\n     SkinsNode webInfSkinsNode = _getWebInfSkinsNode(context);\n     if (webInfSkinsNode != null)\n     {\n@@ -445,6 +450,7 @@ private static void _registerTrinidadSkinsFromSkinResourceLoaderServices(\n     ExternalContext context,\n     SkinFactory skinFactory)\n   {\n+     if (_LOG.isFine()) _LOG.fine(\"Parse SkinResourceLoader trinidad-skins.xml\");\n     // register skins found in DT using the META-INF/services\n     List<SkinResourceLoader> urlProviders = ClassLoaderUtils.getServices(\n                                       \"org.apache.myfaces.trinidad.resource.SkinResourceLoader\");\n@@ -465,6 +471,8 @@ private static void _registerTrinidadSkinsFromSkinResourceLoaderServices(\n       \n       for (SkinNode skinNode : sortedAdditionalSkinNodes)\n       {\n+        if (_LOG.isFine()) _LOG.fine(\"Skin {0} with stylesheet {1}\",\n+                                     new Object[]{skinNode.getId(), skinNode.getStyleSheetName()});\n         _addSkinToFactory(skinFactory, skinNode, false);\n       }   \n     }\n@@ -728,7 +736,20 @@ private static SkinsNode _getWebInfSkinsNode(\n     {\n       SkinsNode webInfSkinsNode = \n         _getSkinsNodeFromInputStream(null, null, in, _getDefaultManager(), _CONFIG_FILE);\n+      if (_LOG.isFine())\n+      {\n+        for (SkinNode node : webInfSkinsNode.getSkinNodes())\n+        {\n+          _LOG.fine(\"Skin {0} with stylesheet {1}\", \n+                    new Object[]{node.getId(), node.getStyleSheetName()});\n+        }\n+        for (SkinAdditionNode node: webInfSkinsNode.getSkinAdditionNodes())\n+        {\n+          _LOG.fine(\"SkinAddition {0} with stylesheet {1}\", \n+                      new Object[]{node.getSkinId(), node.getStyleSheetName()});\n \n+        }\n+      }\n       return webInfSkinsNode;\n     }\n     else\n@@ -762,7 +783,7 @@ private static SkinsNode _getWebInfSkinsNode(\n         \n         // if url matches one we've already processed, skip it\n         boolean successfullyAdded = urlPaths.add(url.getPath());\n-\n+        // _processTrinidadSkinsURL logs the url we are processing\n         _processTrinidadSkinsURL(allSkinsNodes, url, successfullyAdded);\n     \n         \n@@ -903,6 +924,7 @@ private static String _prependMetaInf(String styleSheetName)\n       return styleSheetName;\n   }\n   \n+  // register skins found in DT using the META-INF/services\n   private static List<SkinsNode> _getAdditionalTrinidadSkins(\n     ExternalContext context,\n     List<SkinResourceLoader> providers)\n@@ -924,7 +946,7 @@ private static String _prependMetaInf(String styleSheetName)\n             URL url = urlIterator.next();\n             // if url matches one we've already processed, skip it\n             boolean successfullyAdded = urlPaths.add(url.getPath());\n-\n+            // _processTrinidadSkinsURL logs the url we are processing\n             _processTrinidadSkinsURL(allSkinsNodes, url, successfullyAdded);\n           }\n \n@@ -949,17 +971,17 @@ private static void _processTrinidadSkinsURL(\n   {\n     if (!successfullyAdded)\n     {\n-      if (_LOG.isFinest())\n+      if (_LOG.isFine())\n       {\n-        _LOG.finest(\"Skipping skin URL:{0} because it was already processed. \" +\n+        _LOG.fine(\"Skipping skin URL:{0} because it was already processed. \" +\n                     \"It was on the classpath more than once.\",\n                     url);\n       }\n       // continue to the next url\n     }\n     else\n     {\n-      _LOG.finest(\"Processing skin URL:{0}\", url);\n+      if (_LOG.isFine()) _LOG.fine(\"Processing skin URL:{0}\", url);\n       InputStream in = url.openStream();\n       try\n       {\n@@ -971,8 +993,26 @@ private static void _processTrinidadSkinsURL(\n             _getSkinsNodeFromInputStream(null, null, in,\n                                          _getDefaultManager(),\n                                          _META_INF_CONFIG_FILE);\n-\n-          allSkinsNodes.add(metaInfSkinsNode);\n+          \n+          if (metaInfSkinsNode != null)\n+          {\n+            // for debug only.\n+            if (_LOG.isFine())\n+            {\n+              for (SkinNode node : metaInfSkinsNode.getSkinNodes())\n+                _LOG.fine(\"Skin {0} with stylesheet {1}\", \n+                          new Object[]{node.getId(), node.getStyleSheetName()});\n+              for (SkinAdditionNode node: metaInfSkinsNode.getSkinAdditionNodes())\n+                _LOG.fine(\"SkinAddition {0} with stylesheet {1}\", \n+                            new Object[]{node.getSkinId(), node.getStyleSheetName()});\n+            }\n+            \n+            allSkinsNodes.add(metaInfSkinsNode);\n+          }\n+          else\n+          {\n+            if(_LOG.isFine()) _LOG.fine(\"No skins found in the URL.\");\n+          }\n         }\n       }\n       catch (Exception e)", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/skin/SkinUtils.java"}], "repo": "myfaces-trinidad"}, {"commit": "https://github.com/apache/myfaces-trinidad/commit/45687771117f0172d63d1feb658a61e58d996308", "parent": "https://github.com/apache/myfaces-trinidad/commit/d200ccaef9b6e1cce9cbfa3462b6af2f8e8f5965", "message": "TRINIDAD-2488 NPE in TrinidadSkinProvider when base skin is not included in skin def in trinidad-skins.xml\n\nThanks for the fix Prakash!", "bug_id": "myfaces-trinidad_43", "file": [{"additions": 5, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/45687771117f0172d63d1feb658a61e58d996308/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/skin/provider/TrinidadSkinProvider.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/45687771117f0172d63d1feb658a61e58d996308/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/skin/provider/TrinidadSkinProvider.java", "sha": "bc75d14e61bf430a0e4dd33b0626cde570edf501", "changes": 6, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/skin/provider/TrinidadSkinProvider.java?ref=45687771117f0172d63d1feb658a61e58d996308", "patch": "@@ -133,7 +133,10 @@ protected Skin loadAvailableSkin(ExternalContext context, SkinMetadata skinMetad\n \r\n     // if there is no base skin then use the default base skin for the renderKit\r\n     if (baseSkin == null)\r\n+    {\r\n       baseSkin = SkinUtils.getDefaultSkinForRenderKitId(provider, context, renderKitId);\r\n+      baseSkinId = baseSkin.getId();\r\n+    }\r\n \r\n     if (id == null)\r\n       throw new NullPointerException(_LOG.getMessage(\"NULL_SKIN_ID\"));\r\n@@ -244,4 +247,5 @@ private void _checkAndAddInHierarchy(Skin skin, SkinAddition addition)\n \r\n   private final static TrinidadLogger _LOG =\r\n     TrinidadLogger.createTrinidadLogger(TrinidadSkinProvider.class);\r\n-}\n\\ No newline at end of file\n+}\r\n+\r", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/skin/provider/TrinidadSkinProvider.java"}], "repo": "myfaces-trinidad"}, {"commit": "https://github.com/apache/myfaces-trinidad/commit/80a5083f128231474fe14dcd04bcef5a496c424c", "parent": "https://github.com/apache/myfaces-trinidad/commit/1c4816f16256b10919228e5242d34319dba84491", "message": "TRINIDAD-2273 Allow scheme for application to control UIViewRoot caching logic\n\nFix issue with NPE when view root caching is disabled, clean up code", "bug_id": "myfaces-trinidad_44", "file": [{"additions": 71, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/80a5083f128231474fe14dcd04bcef5a496c424c/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/application/StateManagerImpl.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/80a5083f128231474fe14dcd04bcef5a496c424c/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/application/StateManagerImpl.java", "sha": "991976ae25483a75f86d41e9f13be443f746e5ce", "changes": 112, "status": "modified", "deletions": 41, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/application/StateManagerImpl.java?ref=80a5083f128231474fe14dcd04bcef5a496c424c", "patch": "@@ -31,6 +31,7 @@\n import java.util.List;\n import java.util.Map;\n import java.util.concurrent.ConcurrentMap;\n+import java.util.concurrent.atomic.AtomicReference;\n import java.util.zip.DataFormatException;\n import java.util.zip.Deflater;\n import java.util.zip.Inflater;\n@@ -1172,67 +1173,92 @@ private int _getCacheSize(ExternalContext extContext)\n   private PseudoReferenceFactory<ViewRootState> _getOrCreateViewRootStateRefFactory(\n     FacesContext context, RequestContext trinContext)\n   {\n-    if (_viewRootStateRefFactory == null)\n-      _viewRootStateRefFactory = _getViewRootStateRefFactory(context, trinContext);\n+    if (_viewRootStateRefFactoryHolder == null)\n+      _viewRootStateRefFactoryHolder = _getViewRootStateRefFactoryHolder(context, trinContext);\n \n-    return _viewRootStateRefFactory;\n+    return _viewRootStateRefFactoryHolder.get();\n   }\n-  \n+\n   /**\n    * @return the factory to use for creating references to the UIViewRootState.  If\n    * <code>null</code>, no UIViewRoot caching should be performed.\n    */\n   private static PseudoReferenceFactory<ViewRootState> _getViewRootStateRefFactory(\n-    FacesContext context,\n-    RequestContext trinContext)\n+    FacesContext context, RequestContext trinContext)\n+  {\n+    return _getViewRootStateRefFactoryHolder(context, trinContext).get();\n+  }\n+  \n+  /**\n+   * @return the holder for the factory to use for creating references to the UIViewRootState.  If\n+   * <code>null</code>, no UIViewRoot caching should be performed.\n+   */\n+  private static AtomicReference<PseudoReferenceFactory<ViewRootState>> \n+    _getViewRootStateRefFactoryHolder(FacesContext context, RequestContext trinContext)\n   {\n     ConcurrentMap<String, Object> sharedAppMap = trinContext.getApplicationScopedConcurrentMap();\n+\n+    AtomicReference<PseudoReferenceFactory<ViewRootState>> factoryHolder = \n+       (AtomicReference<PseudoReferenceFactory<ViewRootState>>)sharedAppMap.get(CACHE_VIEW_ROOT_INIT_PARAM);\n     \n-    if (sharedAppMap.containsKey(CACHE_VIEW_ROOT_INIT_PARAM))\n+    if (factoryHolder != null)\n     {\n-      return (PseudoReferenceFactory<ViewRootState>)sharedAppMap.get(CACHE_VIEW_ROOT_INIT_PARAM);\n+      return factoryHolder;\n     }\n     else\n-    {\n-      PseudoReferenceFactory<ViewRootState> factory = null;\n-      \n+    {      \n       ExternalContext extContext = context.getExternalContext();\n     \n       String viewRootCaching = extContext.getInitParameter(CACHE_VIEW_ROOT_INIT_PARAM);\n-    \n+\n+      String caseInsensitiveViewRootCaching;\n+      \n       if ((viewRootCaching != null) && (viewRootCaching.length() > 0))\n-      {    \n-        String caseInsensitiveViewRootCaching = viewRootCaching.toLowerCase();\n-    \n-        if (\"false\".equals(caseInsensitiveViewRootCaching))\n-        {\n-          // factory is already null\n-        }\n-        else if (\"strong\".equals(caseInsensitiveViewRootCaching))\n-          factory = new StrongPseudoReferenceFactory<ViewRootState>();\n-        else if (\"soft\".equals(caseInsensitiveViewRootCaching))\n-          factory = new SoftPseudoReferenceFactory<ViewRootState>();\n-        else if (\"true\".equals(caseInsensitiveViewRootCaching))\n-        {\n-          factory = _instantiateDefaultPseudoReferenceFactory();\n-        }\n-        else\n-        {\n-          factory = _instantiatePseudoReferenceFactoryFromClass(viewRootCaching);\n-        }\n-        \n-        sharedAppMap.put(CACHE_VIEW_ROOT_INIT_PARAM, factory);\n-      }\n+        caseInsensitiveViewRootCaching = viewRootCaching.toLowerCase();\n       else\n+        caseInsensitiveViewRootCaching = \"true\"; // the default\n+      \n+      PseudoReferenceFactory<ViewRootState> factory;\n+  \n+      if (\"false\".equals(caseInsensitiveViewRootCaching))\n+      {\n+        factory = null;\n+      }\n+      else if (\"strong\".equals(caseInsensitiveViewRootCaching))\n+        factory = new StrongPseudoReferenceFactory<ViewRootState>();\n+      else if (\"soft\".equals(caseInsensitiveViewRootCaching))\n+        factory = new SoftPseudoReferenceFactory<ViewRootState>();\n+      else if (\"true\".equals(caseInsensitiveViewRootCaching))\n       {\n-        // \"true\" is the default\n         factory = _instantiateDefaultPseudoReferenceFactory();\n       }\n+      else\n+      {\n+        factory = _instantiatePseudoReferenceFactoryFromClass(viewRootCaching);\n+        \n+        if (factory == null)\n+        {\n+          // we had an error, so use the default\n+          factory = _instantiateDefaultPseudoReferenceFactory();\n+        }\n+      }\n+      \n+      // use a placeholder for null, since ConcurrentHashMap can't store null;\n+      factoryHolder = new AtomicReference<PseudoReferenceFactory<ViewRootState>>(factory);\n+      \n+      sharedAppMap.put(CACHE_VIEW_ROOT_INIT_PARAM, factoryHolder);\n       \n-      return factory;\n+      return factoryHolder;\n     }    \n   }\n \n+  /**\n+   * Attempt to instantiate a PseudoReferenceFactory<ViewRootState> from the\n+   * CACHE_VIEW_ROOT_INIT_PARAM service, using a StrongPseudoReferenceFactory if no service\n+   * is specified or the service is not of the correct type.\n+   * <code>null</code> if any errors occur.\n+   * @return\n+   */\n   private static PseudoReferenceFactory<ViewRootState> _instantiateDefaultPseudoReferenceFactory()\n   {\n     PseudoReferenceFactory<ViewRootState> factory = new StrongPseudoReferenceFactory<ViewRootState>();        \n@@ -1255,16 +1281,20 @@ else if (\"true\".equals(caseInsensitiveViewRootCaching))\n     return factory;\n   }\n   \n+  /**\n+   * Attempt to instantiate a PseudoReferenceFactory<ViewRootState> from a class name, returning\n+   * <code>null</code> if any errors occur.\n+   * @param className\n+   * @return\n+   */\n   private static PseudoReferenceFactory<ViewRootState> _instantiatePseudoReferenceFactoryFromClass(\n     String className)\n   {\n-    PseudoReferenceFactory<ViewRootState> factory = new StrongPseudoReferenceFactory<ViewRootState>();            \n-\n     try\n     {\n       Class<? extends PseudoReferenceFactory<ViewRootState>> factoryClass = \n         (Class<? extends PseudoReferenceFactory<ViewRootState>>)ClassLoaderUtils.loadClass(className);\n-      factory = factoryClass.newInstance();\n+      return factoryClass.newInstance();\n     }\n     catch (ClassNotFoundException e)\n     {\n@@ -1284,7 +1314,7 @@ else if (\"true\".equals(caseInsensitiveViewRootCaching))\n       _logInstantiationError(className, e);      \n     }\n     \n-    return factory;\n+    return null;\n   }\n \n   private static void _logInstantiationError(String className, Throwable e)\n@@ -1704,7 +1734,7 @@ private Object _unzipBytes(byte[] zippedBytes)\n   // TODO - we used to delegate to the RI when the stateManagement method was server,\n   // but we no longer do that, do we really need _delegate any more?\n   private final StateManager _delegate;\n-  private volatile PseudoReferenceFactory<ViewRootState> _viewRootStateRefFactory;\n+  private AtomicReference<PseudoReferenceFactory<ViewRootState>> _viewRootStateRefFactoryHolder;\n \n   private static final Character _SUBKEY_SEPARATOR = new Character('.');\n ", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/application/StateManagerImpl.java"}], "repo": "myfaces-trinidad"}, {"commit": "https://github.com/apache/myfaces-trinidad/commit/f892b6f87cfbfe17fd1d46ec12ba4e401e31bfad", "parent": "https://github.com/apache/myfaces-trinidad/commit/749715900ee0be76193aa64bdca2240e8672fd30", "message": "TRINIDAD-1629 ResourceServlet.java._setHeaders() can call response.setContentType() with a null contentType resulting in an NPE on Websphere.\nminor code fix to previous checkin. thanks Gary Kind", "bug_id": "myfaces-trinidad_45", "file": [{"additions": 10, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/f892b6f87cfbfe17fd1d46ec12ba4e401e31bfad/trinidad-api/src/main/java/org/apache/myfaces/trinidad/webapp/ResourceServlet.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/f892b6f87cfbfe17fd1d46ec12ba4e401e31bfad/trinidad-api/src/main/java/org/apache/myfaces/trinidad/webapp/ResourceServlet.java", "sha": "c01789ecf92a9fadbe91c7be35c4d305cd0bf1b7", "changes": 25, "status": "modified", "deletions": 15, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-api/src/main/java/org/apache/myfaces/trinidad/webapp/ResourceServlet.java?ref=f892b6f87cfbfe17fd1d46ec12ba4e401e31bfad", "patch": "@@ -439,6 +439,16 @@ else if (resourcePath.endsWith(\".cur\") || resourcePath.endsWith(\".ico\"))\n         contentType = \"image/vnd.microsoft.icon\";\n       else\n         contentType = getServletContext().getMimeType(resourcePath);\n+\n+      // The resource has an file extension we have not \n+      // included in the case statement above\n+      if (contentType == null)\n+      {\n+        _LOG.warning(\"ResourceServlet._setHeaders(): \" +  \n+                     \"Content type for {0} is NULL!\\n\" +\n+                     \"Cause: Unknown file extension\",\n+                     resourcePath);\n+      }\n     }\n     \n     if (contentType != null)\n@@ -449,21 +459,6 @@ else if (resourcePath.endsWith(\".cur\") || resourcePath.endsWith(\".ico\"))\n       if (contentLength >= 0)\n         response.setContentLength(contentLength);\n     }\n-    else\n-    {\n-      // The resource has an file extension we have not \n-      // included in the case statement above\n-      url = connection.getURL();\n-      resourcePath = url.getPath();\n-\n-      if(_LOG.isWarning())\n-      {\n-        _LOG.warning(\"ResourceServlet._setHeaders(): \" +  \n-                     \"Content type for {0} is NULL!\\n\" +\n-                     \"Cause: Unknown file extension\",\n-                     resourcePath);\n-      }\n-    } \n     \n     long lastModified;\n     try", "filename": "trinidad-api/src/main/java/org/apache/myfaces/trinidad/webapp/ResourceServlet.java"}], "repo": "myfaces-trinidad"}, {"commit": "https://github.com/apache/myfaces-trinidad/commit/b2b6efbc564c97d5ef2b743db096af162fdfa810", "parent": "https://github.com/apache/myfaces-trinidad/commit/52b1a8ff142e03537071cbb481314472856bb4e7", "message": "TRINIDAD-1629 ResourceServlet.java._setHeaders() can call response.setContentType() with a null contentType resulting in an NPE on Websphere.\nminor code fix to previous checkin. thanks Gary Kind", "bug_id": "myfaces-trinidad_46", "file": [{"additions": 10, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/b2b6efbc564c97d5ef2b743db096af162fdfa810/trinidad-api/src/main/java/org/apache/myfaces/trinidad/webapp/ResourceServlet.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/b2b6efbc564c97d5ef2b743db096af162fdfa810/trinidad-api/src/main/java/org/apache/myfaces/trinidad/webapp/ResourceServlet.java", "sha": "4f13f5215d4262df7b202b54a38b93a9ca80f23b", "changes": 22, "status": "modified", "deletions": 12, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-api/src/main/java/org/apache/myfaces/trinidad/webapp/ResourceServlet.java?ref=b2b6efbc564c97d5ef2b743db096af162fdfa810", "patch": "@@ -436,6 +436,16 @@ else if (resourcePath.endsWith(\".cur\") || resourcePath.endsWith(\".ico\"))\n         contentType = \"image/vnd.microsoft.icon\";\n       else\n         contentType = getServletContext().getMimeType(resourcePath);\n+\n+      // The resource has an file extension we have not \n+      // included in the case statement above\n+      if (contentType == null)\n+      {\n+        _LOG.warning(\"ResourceServlet._setHeaders(): \" +  \n+                     \"Content type for {0} is NULL!\\n\" +\n+                     \"Cause: Unknown file extension\",\n+                     resourcePath);\n+      }\n     }\n     \n     if (contentType != null)\n@@ -446,18 +456,6 @@ else if (resourcePath.endsWith(\".cur\") || resourcePath.endsWith(\".ico\"))\n       if (contentLength >= 0)\n         response.setContentLength(contentLength);\n     }\n-    else\n-    {\n-      // The resource has an file extension we have not \n-      // included in the case statement above\n-      url = connection.getURL();\n-      resourcePath = url.getPath();\n-\n-      _LOG.warning(\"ResourceServlet._setHeaders(): \" +  \n-                   \"Content type for {0} is NULL!\\n\" +\n-                   \"Cause: Unknown file extension\",\n-                   resourcePath);\n-    } \n     \n     long lastModified;\n     try", "filename": "trinidad-api/src/main/java/org/apache/myfaces/trinidad/webapp/ResourceServlet.java"}], "repo": "myfaces-trinidad"}, {"commit": "https://github.com/apache/myfaces-trinidad/commit/c08b20f6fcd78b64da7edf6a5943472c2c565958", "parent": "https://github.com/apache/myfaces-trinidad/commit/becb5cb043be8d61aba9a404ba4f1daa55d85bee", "message": "TRINIDAD-1635 \n\nThis fixes the NPE, but CACHE_VIEW_ROOT and APPLICATION_VIEW_CACHE are not supported with facelets, so this is a temporary fix", "bug_id": "myfaces-trinidad_47", "file": [{"additions": 182, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/c08b20f6fcd78b64da7edf6a5943472c2c565958/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/application/StateManagerImpl.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/c08b20f6fcd78b64da7edf6a5943472c2c565958/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/application/StateManagerImpl.java", "sha": "f2018a86098282223425bb2c5bfccb5d75cf9685", "changes": 320, "status": "modified", "deletions": 138, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/application/StateManagerImpl.java?ref=c08b20f6fcd78b64da7edf6a5943472c2c565958", "patch": "@@ -50,6 +50,9 @@\n import java.io.ByteArrayOutputStream;\n import java.io.ObjectOutputStream;\n \n+import javax.faces.view.StateManagementStrategy;\n+import javax.faces.view.ViewDeclarationLanguage;\n+\n import org.apache.myfaces.trinidad.bean.util.StateUtils;\n import org.apache.myfaces.trinidad.context.Window;\n import org.apache.myfaces.trinidadinternal.context.RequestContextImpl;\n@@ -144,8 +147,33 @@ public Object saveView(FacesContext context)\n     \n     if(isSavingStateInClient(context))\n     {\n-      SerializedView view = _saveSerializedView(context);\n-      return new Object[]{view.getStructure(), view.getState()};\n+      // if the root is transient don't state save\n+      UIViewRoot viewRoot = context.getViewRoot();\n+      \n+      if (viewRoot.isTransient()) \n+      {\n+          return null;\n+      }\n+      \n+      String viewId = context.getViewRoot().getViewId();\n+      ViewDeclarationLanguage vdl =  context.getApplication().getViewHandler().\n+                                                      getViewDeclarationLanguage(context, viewId);\n+      StateManagementStrategy sms = null;\n+      \n+      if (vdl != null) \n+      {\n+        sms = vdl.getStateManagementStrategy(context, viewId);\n+      }\n+      \n+      if (sms != null) \n+      {\n+        return sms.saveView(context);\n+      }\n+      else\n+      {\n+        SerializedView view = _saveSerializedView(context);\n+        return new Object[]{view.getStructure(), view.getState()};\n+      }\n     }\n     \n     return super.saveView(context);\n@@ -516,162 +544,178 @@ public UIViewRoot restoreView(FacesContext context, String viewId,\n     \n     if (!isSavingStateInClient(context))\n       return _delegate.restoreView(context, viewId, renderKitId);\n-\n-    final Object structure;\n-    final Object state;\n-    boolean recalculateLocale = false;\n-\n-    ResponseStateManager rsm = _getResponseStateManager(context, renderKitId);\n-    if (_saveAsToken(context))\n+    \n+        \n+    ViewDeclarationLanguage vdl = context.getApplication().getViewHandler().\n+                                                       getViewDeclarationLanguage(context, viewId);    \n+    StateManagementStrategy sms = null;\n+    \n+    if (vdl != null) \n     {\n-      Object token = rsm.getTreeStructureToRestore(context, viewId);\n-      if (token == null)\n-      {\n-        _LOG.finest(\"No token in the request for view \\\"{0}\\\";  probably a first view.\", viewId);\n-        return null;\n-      }\n-\n-      assert(token instanceof String);\n-      _LOG.finer(\"Restoring saved view state for token {0}\", token);\n-\n-      PageState viewState;\n+      sms = vdl.getStateManagementStrategy(context, viewId);\n+    }\n \n-      // Load from the application cache\n-      if (_APPLICATION_CACHE_TOKEN.equals(token))\n+    if (sms!= null) \n+    {\n+      return sms.restoreView(context, viewId, renderKitId);\n+    } \n+    else\n+    {\n+      final Object structure;\n+      final Object state;\n+      boolean recalculateLocale = false;\n+  \n+      ResponseStateManager rsm = _getResponseStateManager(context, renderKitId);\n+      if (_saveAsToken(context))\n       {\n-        Map<String, PageState> cache = _getApplicationViewCache(context);\n-        Map<String, PageState> perSessionCache =\n-          _getPerSessionApplicationViewCache(context);\n-\n-        // Synchronize on the application-level cache.\n-        // =-=AEW This may produce excessive contention\n-        synchronized (cache)\n+        Object token = rsm.getTreeStructureToRestore(context, viewId);\n+        if (token == null)\n         {\n-          // Look first in the per-session cache\n-          viewState = perSessionCache.get(viewId);\n-          if (viewState == null)\n+          _LOG.finest(\"No token in the request for view \\\"{0}\\\";  probably a first view.\", viewId);\n+          return null;\n+        }\n+  \n+        assert(token instanceof String);\n+        _LOG.finer(\"Restoring saved view state for token {0}\", token);\n+  \n+        PageState viewState;\n+  \n+        // Load from the application cache\n+        if (_APPLICATION_CACHE_TOKEN.equals(token))\n+        {\n+          Map<String, PageState> cache = _getApplicationViewCache(context);\n+          Map<String, PageState> perSessionCache =\n+            _getPerSessionApplicationViewCache(context);\n+  \n+          // Synchronize on the application-level cache.\n+          // =-=AEW This may produce excessive contention\n+          synchronized (cache)\n           {\n-            // Nope, it's not there.  Look in the application cache\n-            viewState = cache.get(viewId);\n-            // And if we find it there, then push it back into\n-            // the per-session cache (it may have expired)\n-            if (viewState != null)\n-              perSessionCache.put(viewId, viewState);\n+            // Look first in the per-session cache\n+            viewState = perSessionCache.get(viewId);\n+            if (viewState == null)\n+            {\n+              // Nope, it's not there.  Look in the application cache\n+              viewState = cache.get(viewId);\n+              // And if we find it there, then push it back into\n+              // the per-session cache (it may have expired)\n+              if (viewState != null)\n+                perSessionCache.put(viewId, viewState);\n+            }\n+            \n+            // If the view was found in the application cache then we\n+            // know it would be unsafe to use its locale for this session.\n+            // Same conclusion, however, even if found in the per-session \n+            // cache, since the latter is just a mirror of the former.\n+            recalculateLocale = true;\n           }\n+        }\n+        else\n+        {\n+          // get view cache key with \".\" separator suffix to separate the SubKeyMap keys\n+          String subkey = _getViewCacheKey(extContext,\n+                                           RequestContext.getCurrentInstance(),\n+                                           _SUBKEY_SEPARATOR);\n           \n-          // If the view was found in the application cache then we\n-          // know it would be unsafe to use its locale for this session.\n-          // Same conclusion, however, even if found in the per-session \n-          // cache, since the latter is just a mirror of the former.\n-          recalculateLocale = true;\n+          Map<String, PageState> stateMap = new SubKeyMap<PageState>(\n+                           extContext.getSessionMap(),\n+                           subkey);\n+          viewState = stateMap.get(token);\n+  \n+          if (viewState != null)\n+            _updateRequestTokenForResponse(context, (String) token);\n+  \n+          // Make sure that if the view state is present, the cache still\n+          // has the token, and vice versa\n+  \n+          // NOTE: it's very important that we call through to the\n+          // token cache here, not just inside the assert.  If we don't,\n+          // then we don't actually access the token, so it doesn't\n+          // get bumped up to the front in the LRU Cache!\n+          boolean isAvailable =\n+            _getViewCache(context).isAvailable((String) token);\n+          assert ((viewState != null) == isAvailable);\n+        }\n+  \n+        if (viewState == null)\n+        {\n+          _LOG.severe(\"CANNOT_FIND_SAVED_VIEW_STATE\", token);\n+          return null;\n         }\n+  \n+        _LOG.fine(\"Successfully found view state for token {0}\", token);\n+  \n+        UIViewRoot root = viewState.popRoot(context); // bug 4712492\n+        if (root != null)\n+        {\n+          _LOG.finer(\"UIViewRoot for token {0} already exists. Bypassing restoreState\", token);\n+          return root;\n+        }\n+  \n+        structure = viewState.getStructure();\n+        state = viewState.getState();\n       }\n       else\n       {\n-        // get view cache key with \".\" separator suffix to separate the SubKeyMap keys\n-        String subkey = _getViewCacheKey(extContext,\n-                                         RequestContext.getCurrentInstance(),\n-                                         _SUBKEY_SEPARATOR);\n-        \n-        Map<String, PageState> stateMap = new SubKeyMap<PageState>(\n-                         extContext.getSessionMap(),\n-                         subkey);\n-        viewState = stateMap.get(token);\n-\n-        if (viewState != null)\n-          _updateRequestTokenForResponse(context, (String) token);\n-\n-        // Make sure that if the view state is present, the cache still\n-        // has the token, and vice versa\n-\n-        // NOTE: it's very important that we call through to the\n-        // token cache here, not just inside the assert.  If we don't,\n-        // then we don't actually access the token, so it doesn't\n-        // get bumped up to the front in the LRU Cache!\n-        boolean isAvailable =\n-          _getViewCache(context).isAvailable((String) token);\n-        assert ((viewState != null) == isAvailable);\n-      }\n-\n-      if (viewState == null)\n-      {\n-        _LOG.severe(\"CANNOT_FIND_SAVED_VIEW_STATE\", token);\n-        return null;\n-      }\n-\n-      _LOG.fine(\"Successfully found view state for token {0}\", token);\n-\n-      UIViewRoot root = viewState.popRoot(context); // bug 4712492\n-      if (root != null)\n-      {\n-        _LOG.finer(\"UIViewRoot for token {0} already exists. Bypassing restoreState\", token);\n-        return root;\n+        structure = rsm.getTreeStructureToRestore(context, viewId);\n+        state = rsm.getComponentStateToRestore(context);\n       }\n-\n-      structure = viewState.getStructure();\n-      state = viewState.getState();\n-    }\n-    else\n-    {\n-      structure = rsm.getTreeStructureToRestore(context, viewId);\n-      state = rsm.getComponentStateToRestore(context);\n-    }\n-\n-    if (structure == null)\n-    {\n-\n-      UIViewRoot root = context.getViewRoot();\n-      if (root == null && _needStructure(context))\n-      {\n-        _LOG.severe(\"NO_STRUCTURE_ROOT_AVAILABLE\");\n-        return null;\n-      }\n-\n-      if (state != null)\n-        root.processRestoreState(context, state);\n-\n-      return root;\n-    }\n-    else\n-    {\n-      if (!(structure instanceof Structure))\n-      {\n-        _LOG.severe(\"NO_STRUCTURE_AVAILABLE\");\n-        return null;\n-      }\n-\n-      // OK, we've structure and state; let's see what we can do!\n-      try\n+  \n+      if (structure == null)\n       {\n-        UIViewRoot root = (UIViewRoot)\n-        ((Structure) structure).createComponent();\n-\n-        if (state != null)\n-          root.processRestoreState(context, state);\n-        \n-        if (recalculateLocale)\n+  \n+        UIViewRoot root = context.getViewRoot();\n+        if (root == null && _needStructure(context))\n         {\n-          // Ensure that locale gets re-calculated when next fetched.\n-          root.setLocale((Locale) null);\n+          _LOG.severe(\"NO_STRUCTURE_ROOT_AVAILABLE\");\n+          return null;\n         }\n-\n-        _LOG.finer(\"Restored state for view \\\"{0}\\\"\", viewId);\n+  \n+        if (state != null)\n+          root.processRestoreState(context, state);\n+  \n         return root;\n       }\n-      catch (ClassNotFoundException cnfe)\n-      {\n-        _LOG.severe(cnfe);\n-      }\n-      catch (InstantiationException ie)\n-      {\n-        _LOG.severe(ie);\n-      }\n-      catch (IllegalAccessException iae)\n+      else\n       {\n-        _LOG.severe(iae);\n+        if (!(structure instanceof Structure))\n+        {\n+          _LOG.severe(\"NO_STRUCTURE_AVAILABLE\");\n+          return null;\n+        }\n+  \n+        // OK, we've structure and state; let's see what we can do!\n+        try\n+        {\n+          UIViewRoot root = (UIViewRoot)\n+          ((Structure) structure).createComponent();\n+  \n+          if (state != null)\n+            root.processRestoreState(context, state);\n+          \n+          if (recalculateLocale)\n+          {\n+            // Ensure that locale gets re-calculated when next fetched.\n+            root.setLocale((Locale) null);\n+          }\n+  \n+          _LOG.finer(\"Restored state for view \\\"{0}\\\"\", viewId);\n+          return root;\n+        }\n+        catch (ClassNotFoundException cnfe)\n+        {\n+          _LOG.severe(cnfe);\n+        }\n+        catch (InstantiationException ie)\n+        {\n+          _LOG.severe(ie);\n+        }\n+        catch (IllegalAccessException iae)\n+        {\n+          _LOG.severe(iae);\n+        }\n       }\n     }\n-\n     return null;\n   }\n ", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/application/StateManagerImpl.java"}], "repo": "myfaces-trinidad"}, {"commit": "https://github.com/apache/myfaces-trinidad/commit/01dea8d776790f0cf52bdf034541a40a264259f4", "parent": "https://github.com/apache/myfaces-trinidad/commit/a01629b6aa526b075de0444d81a5f04b852cf094", "message": "TRINIDAD-1629 - ResourceServlet.java._setHeaders() can call response.setContentType() with a null contentType resulting in an NPE on Websphere.\n\nThx to Gary Kind for the patch", "bug_id": "myfaces-trinidad_48", "file": [{"additions": 33, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/01dea8d776790f0cf52bdf034541a40a264259f4/trinidad-api/src/main/java/org/apache/myfaces/trinidad/webapp/ResourceServlet.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/01dea8d776790f0cf52bdf034541a40a264259f4/trinidad-api/src/main/java/org/apache/myfaces/trinidad/webapp/ResourceServlet.java", "sha": "65082cf5c5d9f4708807eb78bbc8a3dea868eea3", "changes": 43, "status": "modified", "deletions": 10, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-api/src/main/java/org/apache/myfaces/trinidad/webapp/ResourceServlet.java?ref=01dea8d776790f0cf52bdf034541a40a264259f4", "patch": "@@ -418,24 +418,47 @@ private void _setHeaders(\n     URLConnection       connection,\n     HttpServletResponse response)\n   {\n-    String contentType = connection.getContentType();\n+    String resourcePath;\n+    URL    url;\n+    String contentType  = connection.getContentType();\n+\n     if (contentType == null || \"content/unknown\".equals(contentType))\n     {\n-      URL url = connection.getURL();\n-      String resourcePath = url.getPath();\n-      if(resourcePath.endsWith(\".css\"))\n+      url = connection.getURL();\n+      resourcePath = url.getPath();\n+\n+      // 'Case' statement for unknown content types\n+      if (resourcePath.endsWith(\".css\"))\n         contentType = \"text/css\";\n-      else if(resourcePath.endsWith(\".js\"))\n+      else if (resourcePath.endsWith(\".js\"))\n         contentType = \"application/x-javascript\";\n+      else if (resourcePath.endsWith(\".cur\") || resourcePath.endsWith(\".ico\"))\n+        contentType = \"image/vnd.microsoft.icon\";\n       else\n         contentType = getServletContext().getMimeType(resourcePath);\n     }\n-    response.setContentType(contentType);\n-\n-    int contentLength = connection.getContentLength();\n-    if (contentLength >= 0)\n-      response.setContentLength(contentLength);\n+    \n+    if (contentType != null)\n+    {\n+      response.setContentType(contentType);    \n+      int contentLength = connection.getContentLength();\n \n+      if (contentLength >= 0)\n+        response.setContentLength(contentLength);\n+    }\n+    else\n+    {\n+      // The resource has an file extension we have not \n+      // included in the case statement above\n+      url = connection.getURL();\n+      resourcePath = url.getPath();\n+\n+      _LOG.warning(\"ResourceServlet._setHeaders(): \" +  \n+                   \"Content type for {0} is NULL!\\n\" +\n+                   \"Cause: Unknown file extension\",\n+                   resourcePath);\n+    } \n+    \n     long lastModified;\n     try\n     {", "filename": "trinidad-api/src/main/java/org/apache/myfaces/trinidad/webapp/ResourceServlet.java"}], "repo": "myfaces-trinidad"}, {"commit": "https://github.com/apache/myfaces-trinidad/commit/90e1fe8fdc1fd5b0521fb3d88ef20cd7293a4b47", "parent": "https://github.com/apache/myfaces-trinidad/commit/6dc5075c561d0d5655a1ec323133e0139153aad8", "message": "fixed NPE from TRINIDAD-969.\nbut now we see \"odd\" rendering of the \"validation error message\"\n(needs to be discussed on dev list)", "bug_id": "myfaces-trinidad_49", "file": [{"additions": 4, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/90e1fe8fdc1fd5b0521fb3d88ef20cd7293a4b47/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/MessageBoxRenderer.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/90e1fe8fdc1fd5b0521fb3d88ef20cd7293a4b47/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/MessageBoxRenderer.java", "sha": "d68b83e41bb3d61368a24a770dd467ead4a8b341", "changes": 7, "status": "modified", "deletions": 3, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/MessageBoxRenderer.java?ref=90e1fe8fdc1fd5b0521fb3d88ef20cd7293a4b47", "patch": "@@ -296,13 +296,14 @@ protected void _renderMessageAnchor(\n     if (msg instanceof LabeledFacesMessage)\n     {\n       LabeledFacesMessage labeledMsg = (LabeledFacesMessage)msg;\n-      String anchor = MessageUtils.getAnchor(componentId);\n-      if (anchor != null)\n+      String labelString = labeledMsg.getLabelAsString(context);\n+      if (labelString != null)\n       {\n+        String anchor = MessageUtils.getAnchor(componentId);\n         writer.startElement(XhtmlConstants.LINK_ELEMENT, null);\n         renderStyleClass(context, arc, SkinSelectors.LINK_STYLE_CLASS);\n         writer.writeAttribute(XhtmlConstants.HREF_ATTRIBUTE, \"#\" + anchor, null);\n-        writer.write(labeledMsg.getLabelAsString(context));\n+        writer.write(labelString);\n         writer.endElement(XhtmlConstants.LINK_ELEMENT);\n       }\n     }", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/MessageBoxRenderer.java"}], "repo": "myfaces-trinidad"}, {"commit": "https://github.com/apache/myfaces-trinidad/commit/df619720ad50f9336d1cbb4ece66d5feb7963ce4", "parent": "https://github.com/apache/myfaces-trinidad/commit/fe39983b7eb006d01af3a70060ab872b0293c350", "message": "fixed NPE from TRINIDAD-969.\nbut now we see \"odd\" rendering of the \"validation error message\"\n(needs to be discussed on dev list)", "bug_id": "myfaces-trinidad_50", "file": [{"additions": 4, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/df619720ad50f9336d1cbb4ece66d5feb7963ce4/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/MessageBoxRenderer.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/df619720ad50f9336d1cbb4ece66d5feb7963ce4/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/MessageBoxRenderer.java", "sha": "52dff07bee4a74907b90bf5d437b5a4f159f7d7b", "changes": 8, "status": "modified", "deletions": 4, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/MessageBoxRenderer.java?ref=df619720ad50f9336d1cbb4ece66d5feb7963ce4", "patch": "@@ -34,7 +34,6 @@\n \n import org.apache.myfaces.trinidad.context.RenderingContext;\n import org.apache.myfaces.trinidad.context.RequestContext;\n-import org.apache.myfaces.trinidad.skin.Icon;\n import org.apache.myfaces.trinidad.util.LabeledFacesMessage;\n import org.apache.myfaces.trinidadinternal.util.MessageUtils;\n \n@@ -296,13 +295,14 @@ protected void _renderMessageAnchor(\n     if (msg instanceof LabeledFacesMessage)\n     {\n       LabeledFacesMessage labeledMsg = (LabeledFacesMessage)msg;\n-      String anchor = MessageUtils.getAnchor(componentId);\n-      if (anchor != null)\n+      String labelString = labeledMsg.getLabelAsString(context);\n+      if (labelString != null)\n       {\n+        String anchor = MessageUtils.getAnchor(componentId);\n         writer.startElement(XhtmlConstants.LINK_ELEMENT, null);\n         renderStyleClass(context, arc, SkinSelectors.LINK_STYLE_CLASS);\n         writer.writeAttribute(XhtmlConstants.HREF_ATTRIBUTE, \"#\" + anchor, null);\n-        writer.write(labeledMsg.getLabelAsString(context));\n+        writer.write(labelString);\n         writer.endElement(XhtmlConstants.LINK_ELEMENT);\n       }\n     }", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/MessageBoxRenderer.java"}], "repo": "myfaces-trinidad"}, {"commit": "https://github.com/apache/myfaces-trinidad/commit/19ad4d0332c7a0c288d952ab7cc13104d6d909a0", "parent": "https://github.com/apache/myfaces-trinidad/commit/0f204eaf02d4ec802b19c468fa69260b0d355cf9", "message": "TRINIDAD-853 skin-sharing not working after deployment unless accessed as servlet first\nTRINIDAD-852 output-mode portlet gives NPE if minimal skin\non trunk", "bug_id": "myfaces-trinidad_51", "file": [{"additions": 5, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/19ad4d0332c7a0c288d952ab7cc13104d6d909a0/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/CoreRenderingContext.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/19ad4d0332c7a0c288d952ab7cc13104d6d909a0/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/CoreRenderingContext.java", "sha": "70d29d2969747024a1b40dbbb05f35725b40c8f6", "changes": 5, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/CoreRenderingContext.java?ref=19ad4d0332c7a0c288d952ab7cc13104d6d909a0", "patch": "@@ -432,6 +432,11 @@ public Skin getRequestMapSkin()\n           Object requestMapStyleSheetId = requestMap.get(_SKIN_STYLESHEET_ID_PARAM);\n           if (requestMapStyleSheetId != null)\n           {\n+            // set up the styleProvider first, so that it will create the /adf/style\n+            // directory. Otherwise the following code would get an error when it\n+            // tries to getStyleDir. This could possibly be done better.\n+            getStyleContext().getStyleProvider();\n+            \n             String skinForPortalStyleSheetId = requestedSkin.getStyleSheetDocumentId(this);\n             if (skinForPortalStyleSheetId != null &&\n                 skinForPortalStyleSheetId.equals(requestMapStyleSheetId))", "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/CoreRenderingContext.java"}, {"additions": 2, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/19ad4d0332c7a0c288d952ab7cc13104d6d909a0/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/skin/MinimalPortletSkinExtension.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/19ad4d0332c7a0c288d952ab7cc13104d6d909a0/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/skin/MinimalPortletSkinExtension.java", "sha": "f8d05f88c445d0360153a236014397aed2f9fc80", "changes": 3, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/skin/MinimalPortletSkinExtension.java?ref=19ad4d0332c7a0c288d952ab7cc13104d6d909a0", "patch": "@@ -39,7 +39,8 @@ public MinimalPortletSkinExtension(Skin baseSkin)\n      super(baseSkin,\r\n            \"minimal.portlet\",\r\n            \"minimal\",\r\n-           XhtmlConstants.OUTPUT_MODE_PORTLET);\r\n+           XhtmlConstants.OUTPUT_MODE_PORTLET,\r\n+           \"META-INF/adf/styles/simple-portlet.xss\");\r\n    }\r\n \r\n  }\r", "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/skin/MinimalPortletSkinExtension.java"}], "repo": "myfaces-trinidad"}, {"commit": "https://github.com/apache/myfaces-trinidad/commit/25e11c2caf813f815712560e63dff5981bd18a67", "parent": "https://github.com/apache/myfaces-trinidad/commit/b1f5ae776f0d208df5717d5b5eed88736ac0f3af", "message": "TRINIDAD-853 skin-sharing not working after deployment unless accessed as servlet first\nTRINIDAD-852 output-mode portlet gives NPE if minimal skin\non trunk_1.2.x", "bug_id": "myfaces-trinidad_52", "file": [{"additions": 5, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/25e11c2caf813f815712560e63dff5981bd18a67/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/CoreRenderingContext.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/25e11c2caf813f815712560e63dff5981bd18a67/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/CoreRenderingContext.java", "sha": "70d29d2969747024a1b40dbbb05f35725b40c8f6", "changes": 5, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/CoreRenderingContext.java?ref=25e11c2caf813f815712560e63dff5981bd18a67", "patch": "@@ -432,6 +432,11 @@ public Skin getRequestMapSkin()\n           Object requestMapStyleSheetId = requestMap.get(_SKIN_STYLESHEET_ID_PARAM);\n           if (requestMapStyleSheetId != null)\n           {\n+            // set up the styleProvider first, so that it will create the /adf/style\n+            // directory. Otherwise the following code would get an error when it\n+            // tries to getStyleDir. This could possibly be done better.\n+            getStyleContext().getStyleProvider();\n+            \n             String skinForPortalStyleSheetId = requestedSkin.getStyleSheetDocumentId(this);\n             if (skinForPortalStyleSheetId != null &&\n                 skinForPortalStyleSheetId.equals(requestMapStyleSheetId))", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/CoreRenderingContext.java"}, {"additions": 2, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/25e11c2caf813f815712560e63dff5981bd18a67/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/skin/MinimalPortletSkinExtension.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/25e11c2caf813f815712560e63dff5981bd18a67/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/skin/MinimalPortletSkinExtension.java", "sha": "f8d05f88c445d0360153a236014397aed2f9fc80", "changes": 3, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/skin/MinimalPortletSkinExtension.java?ref=25e11c2caf813f815712560e63dff5981bd18a67", "patch": "@@ -39,7 +39,8 @@ public MinimalPortletSkinExtension(Skin baseSkin)\n      super(baseSkin,\r\n            \"minimal.portlet\",\r\n            \"minimal\",\r\n-           XhtmlConstants.OUTPUT_MODE_PORTLET);\r\n+           XhtmlConstants.OUTPUT_MODE_PORTLET,\r\n+           \"META-INF/adf/styles/simple-portlet.xss\");\r\n    }\r\n \r\n  }\r", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/skin/MinimalPortletSkinExtension.java"}], "repo": "myfaces-trinidad"}, {"commit": "https://github.com/apache/myfaces-trinidad/commit/b6bac32582848def395d97c8914fc4a883b65cf1", "parent": "https://github.com/apache/myfaces-trinidad/commit/9d17ce0cee8b6ba89c75941dd82c740a12e5abc4", "message": "TRINIDAD-803 NPE in UIXCollection saveStampState()\nThis is in 1.0.4 and didn't get merged in to 1.2.4 and it should have been.", "bug_id": "myfaces-trinidad_53", "file": [{"additions": 13, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/b6bac32582848def395d97c8914fc4a883b65cf1/trinidad-api/src/main/java/org/apache/myfaces/trinidad/component/UIXCollection.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/b6bac32582848def395d97c8914fc4a883b65cf1/trinidad-api/src/main/java/org/apache/myfaces/trinidad/component/UIXCollection.java", "sha": "2e2f9169bbd6d4f6ef57e4bee1b560929af46fa8", "changes": 19, "status": "modified", "deletions": 6, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-api/src/main/java/org/apache/myfaces/trinidad/component/UIXCollection.java?ref=b6bac32582848def395d97c8914fc4a883b65cf1", "patch": "@@ -813,14 +813,14 @@ protected Object saveStampState(FacesContext context, UIComponent stamp)\n       for(Map.Entry<String, UIComponent> entry : facetMap.entrySet())\n       {\n         Object singleFacetState = saveStampState(context, entry.getValue());\n+        if ((singleFacetState == null) ||\n+            (singleFacetState == Transient.TRUE))\n+          continue;\n+        \n         // Don't bother allocating anything until we have some non-null\n         // and non-transient facet state\n         if (facetStateIsEmpty)\n-        {\n-          if ((singleFacetState == null) ||\n-              (singleFacetState == Transient.TRUE))\n-            continue;\n-          \n+        {          \n           facetStateIsEmpty = false;\n           facetState = new Object[facetCount * 2];\n         }\n@@ -831,11 +831,18 @@ protected Object saveStampState(FacesContext context, UIComponent stamp)\n         facetState[base + 1] = singleFacetState;\n         i++;\n       }\n-\n+      \n       // OK, we had something:  allocate the state array to three\n       // entries, and insert the facet state at position 2\n       if (!facetStateIsEmpty)\n       {\n+        // trim the facetState array if necessary\n+        if(i < facetCount)\n+        {\n+          Object[] trimmed = new Object[i*2];\n+          System.arraycopy(facetState, 0, trimmed, 0, i*2);\n+          facetState = trimmed;\n+        }\n         state = new Object[3];\n         state[2] = facetState;\n       }", "filename": "trinidad-api/src/main/java/org/apache/myfaces/trinidad/component/UIXCollection.java"}], "repo": "myfaces-trinidad"}, {"commit": "https://github.com/apache/myfaces-trinidad/commit/db738e46f2bb6d901b3adb19f1ac7f687b37b5e4", "parent": "https://github.com/apache/myfaces-trinidad/commit/e895166c132aff9c2a1af056f7b65f38a7ed0b8b", "message": "TRINIDAD-102: Attempt to get the value of a custom property from a node that has no custom properties causes NPE\n- Patch from Gary Kind", "bug_id": "myfaces-trinidad_54", "file": [{"additions": 6, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/db738e46f2bb6d901b3adb19f1ac7f687b37b5e4/trinidad-api/src/main/java/org/apache/myfaces/trinidad/model/XMLMenuModel.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/db738e46f2bb6d901b3adb19f1ac7f687b37b5e4/trinidad-api/src/main/java/org/apache/myfaces/trinidad/model/XMLMenuModel.java", "sha": "1d6ee975159e4f763c8a5b7799139e963c73b4ad", "changes": 6, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-api/src/main/java/org/apache/myfaces/trinidad/model/XMLMenuModel.java?ref=db738e46f2bb6d901b3adb19f1ac7f687b37b5e4", "patch": "@@ -480,6 +480,12 @@ public Object getCustomProperty(Object node, String propName)\n       Map<String, String> propMap = \n         (Map<String, String>) resolver.getValue(node, _CUSTOM_ATTR_LIST);\n         \n+      // Need to check to see if propMap is null.  If there are\n+      // no custom properties for this itemNode, there will be\n+      // no propMap.  See MenuContentHandler._createItemNode().\n+      if (propMap == null)\n+        return null;\n+\n       value = propMap.get(propName);\n     }\n     catch (PropertyNotFoundException ex)", "filename": "trinidad-api/src/main/java/org/apache/myfaces/trinidad/model/XMLMenuModel.java"}], "repo": "myfaces-trinidad"}, {"commit": "https://github.com/apache/myfaces-trinidad/commit/06d54141b3db1a458d8182f76d559e698bc5175e", "parent": "https://github.com/apache/myfaces-trinidad/commit/f1683367cbb61eeabaa3b4ab9a0780705994666c", "message": "TRINIDAD-102: Attempt to get the value of a custom property from a node that has no custom properties causes NPE\n- Patch from Gary Kind", "bug_id": "myfaces-trinidad_55", "file": [{"additions": 6, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/06d54141b3db1a458d8182f76d559e698bc5175e/trinidad/trinidad-api/src/main/java/org/apache/myfaces/trinidad/model/XMLMenuModel.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/06d54141b3db1a458d8182f76d559e698bc5175e/trinidad/trinidad-api/src/main/java/org/apache/myfaces/trinidad/model/XMLMenuModel.java", "sha": "1d6ee975159e4f763c8a5b7799139e963c73b4ad", "changes": 6, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-api/src/main/java/org/apache/myfaces/trinidad/model/XMLMenuModel.java?ref=06d54141b3db1a458d8182f76d559e698bc5175e", "patch": "@@ -480,6 +480,12 @@ public Object getCustomProperty(Object node, String propName)\n       Map<String, String> propMap = \n         (Map<String, String>) resolver.getValue(node, _CUSTOM_ATTR_LIST);\n         \n+      // Need to check to see if propMap is null.  If there are\n+      // no custom properties for this itemNode, there will be\n+      // no propMap.  See MenuContentHandler._createItemNode().\n+      if (propMap == null)\n+        return null;\n+\n       value = propMap.get(propName);\n     }\n     catch (PropertyNotFoundException ex)", "filename": "trinidad/trinidad-api/src/main/java/org/apache/myfaces/trinidad/model/XMLMenuModel.java"}], "repo": "myfaces-trinidad"}, {"commit": "https://github.com/apache/myfaces-trinidad/commit/1ac5b8b02934ef7d95ee3e6868c32dfcb7481716", "parent": "https://github.com/apache/myfaces-trinidad/commit/6620bee530b0189949b1d7d844a76821e03686f6", "message": "Fix a possible NPE when calling resetStampState() on a table that hasn't been processed yet.  And switch an Oracle bug number to a description of the bug", "bug_id": "myfaces-trinidad_56", "file": [{"additions": 5, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/1ac5b8b02934ef7d95ee3e6868c32dfcb7481716/trinidad-api/src/main/java/org/apache/myfaces/trinidad/component/UIXCollection.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/1ac5b8b02934ef7d95ee3e6868c32dfcb7481716/trinidad-api/src/main/java/org/apache/myfaces/trinidad/component/UIXCollection.java", "sha": "ff0fb90aad51a2f7abbce17fcd39c26a59080999", "changes": 7, "status": "modified", "deletions": 2, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-api/src/main/java/org/apache/myfaces/trinidad/component/UIXCollection.java?ref=1ac5b8b02934ef7d95ee3e6868c32dfcb7481716", "patch": "@@ -184,8 +184,11 @@ public void resetStampState()\n     InternalState iState = _getInternalState(true);\n     // TODO: this is over kill. for eg, It clears out any toggled showDetails.\n     Object initKey = _getCurrencyKeyForInitialStampState();\n-    // do not clear the initial stamp state: bug 4862103:\n-    iState._stampState.clear(initKey);\n+    // do not clear the initial stamp state: a subtle bug could\n+    // result where the initial state of each component is gone, so we\n+    // fail to roll back to the initial default values\n+    if (iState._stampState != null)\n+      iState._stampState.clear(initKey);\n   }\n \n   @Override", "filename": "trinidad-api/src/main/java/org/apache/myfaces/trinidad/component/UIXCollection.java"}], "repo": "myfaces-trinidad"}, {"commit": "https://github.com/apache/myfaces-trinidad/commit/70a72b0f19c026cad22f9eb0eb2f5aa6c5f0aabb", "parent": "https://github.com/apache/myfaces-trinidad/commit/7e483565d34ba075f52a606974eb7e57a5bde05f", "message": "Fix a possible NPE when calling resetStampState() on a table that hasn't been processed yet.  And switch an Oracle bug number to a description of the bug", "bug_id": "myfaces-trinidad_57", "file": [{"additions": 5, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/70a72b0f19c026cad22f9eb0eb2f5aa6c5f0aabb/trinidad/trinidad-api/src/main/java/org/apache/myfaces/trinidad/component/UIXCollection.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/70a72b0f19c026cad22f9eb0eb2f5aa6c5f0aabb/trinidad/trinidad-api/src/main/java/org/apache/myfaces/trinidad/component/UIXCollection.java", "sha": "ff0fb90aad51a2f7abbce17fcd39c26a59080999", "changes": 7, "status": "modified", "deletions": 2, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-api/src/main/java/org/apache/myfaces/trinidad/component/UIXCollection.java?ref=70a72b0f19c026cad22f9eb0eb2f5aa6c5f0aabb", "patch": "@@ -184,8 +184,11 @@ public void resetStampState()\n     InternalState iState = _getInternalState(true);\n     // TODO: this is over kill. for eg, It clears out any toggled showDetails.\n     Object initKey = _getCurrencyKeyForInitialStampState();\n-    // do not clear the initial stamp state: bug 4862103:\n-    iState._stampState.clear(initKey);\n+    // do not clear the initial stamp state: a subtle bug could\n+    // result where the initial state of each component is gone, so we\n+    // fail to roll back to the initial default values\n+    if (iState._stampState != null)\n+      iState._stampState.clear(initKey);\n   }\n \n   @Override", "filename": "trinidad/trinidad-api/src/main/java/org/apache/myfaces/trinidad/component/UIXCollection.java"}], "repo": "myfaces-trinidad"}, {"commit": "https://github.com/apache/myfaces-trinidad/commit/8ca64ca32bc4d1c8c7588044af2832f0b231e171", "parent": "https://github.com/apache/myfaces-trinidad/commit/a12edc26776070265b9bc0b440fc74edf0a910f5", "message": "TRINIDAD-52: Add actionListener to make sending files easy\n- Add Facelets support for FileDownloadActionListenerTag.java\n- Misc: \"value\" is not a required attribute on returnActionListener - don't NPE if not set in Facelets", "bug_id": "myfaces-trinidad_58", "file": [{"additions": 5, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/8ca64ca32bc4d1c8c7588044af2832f0b231e171/trinidad-impl/src/main/conf/META-INF/tr-base.taglib.xml", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/8ca64ca32bc4d1c8c7588044af2832f0b231e171/trinidad-impl/src/main/conf/META-INF/tr-base.taglib.xml", "sha": "1fa3887ebecd08561c91b19bb2e09f7bad550e1e", "changes": 5, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/conf/META-INF/tr-base.taglib.xml?ref=8ca64ca32bc4d1c8c7588044af2832f0b231e171", "patch": "@@ -36,4 +36,9 @@\n     <tag-name>returnActionListener</tag-name>\r\n     <handler-class>org.apache.myfaces.trinidadinternal.facelets.ReturnActionListenerTag</handler-class>\r\n   </tag>\r\n+\r\n+  <tag>\r\n+    <tag-name>fileDownloadActionListener</tag-name>\r\n+    <handler-class>org.apache.myfaces.trinidadinternal.facelets.FileDownloadActionListenerTag</handler-class>\r\n+  </tag>\r\n </facelet-taglib>\n\\ No newline at end of file", "filename": "trinidad-impl/src/main/conf/META-INF/tr-base.taglib.xml"}, {"additions": 106, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/8ca64ca32bc4d1c8c7588044af2832f0b231e171/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/facelets/FileDownloadActionListenerTag.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/8ca64ca32bc4d1c8c7588044af2832f0b231e171/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/facelets/FileDownloadActionListenerTag.java", "sha": "68c47d1705dda9357b2717e331d296a5f6e0f9ec", "changes": 106, "status": "added", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/facelets/FileDownloadActionListenerTag.java?ref=8ca64ca32bc4d1c8c7588044af2832f0b231e171", "patch": "@@ -0,0 +1,106 @@\n+/*\r\n+ *  Licensed to the Apache Software Foundation (ASF) under one\r\n+ *  or more contributor license agreements.  See the NOTICE file\r\n+ *  distributed with this work for additional information\r\n+ *  regarding copyright ownership.  The ASF licenses this file\r\n+ *  to you under the Apache License, Version 2.0 (the\r\n+ *  \"License\"); you may not use this file except in compliance\r\n+ *  with the License.  You may obtain a copy of the License at\r\n+ * \r\n+ *  http://www.apache.org/licenses/LICENSE-2.0\r\n+ * \r\n+ *  Unless required by applicable law or agreed to in writing,\r\n+ *  software distributed under the License is distributed on an\r\n+ *  \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n+ *  KIND, either express or implied.  See the License for the\r\n+ *  specific language governing permissions and limitations\r\n+ *  under the License.\r\n+ */\r\n+package org.apache.myfaces.trinidadinternal.facelets;\r\n+\r\n+import java.io.IOException;\r\n+import java.io.OutputStream;\r\n+\r\n+import javax.el.ELException;\r\n+import javax.el.MethodExpression;\r\n+import javax.el.ValueExpression;\r\n+import javax.faces.FacesException;\r\n+import javax.faces.component.ActionSource;\r\n+import javax.faces.component.UIComponent;\r\n+import javax.faces.context.FacesContext;\r\n+\r\n+import org.apache.myfaces.trinidadinternal.taglib.listener.FileDownloadActionListener;\r\n+\r\n+import com.sun.facelets.FaceletContext;\r\n+import com.sun.facelets.FaceletException;\r\n+import com.sun.facelets.el.LegacyMethodBinding;\r\n+import com.sun.facelets.el.LegacyValueBinding;\r\n+import com.sun.facelets.tag.TagAttribute;\r\n+import com.sun.facelets.tag.TagConfig;\r\n+import com.sun.facelets.tag.TagHandler;\r\n+import com.sun.facelets.tag.jsf.ComponentSupport;\r\n+\r\n+/**\r\n+ *\r\n+ */\r\n+public class FileDownloadActionListenerTag extends TagHandler\r\n+{\r\n+\r\n+  public FileDownloadActionListenerTag(TagConfig tagConfig)\r\n+  {\r\n+    super(tagConfig);\r\n+    _filename = getAttribute(\"filename\");\r\n+    _contentType = getAttribute(\"contentType\");\r\n+    _method = getRequiredAttribute(\"method\");\r\n+  }\r\n+\r\n+  @SuppressWarnings(\"deprecation\")\r\n+  public void apply(FaceletContext faceletContext,\r\n+          UIComponent parent) throws IOException, FacesException, FaceletException, ELException\r\n+  {\r\n+    if(ComponentSupport.isNew(parent))\r\n+    {\r\n+      FileDownloadActionListener listener = new FileDownloadActionListener();\r\n+      if (_filename != null)\r\n+      {\r\n+        if (_filename.isLiteral())\r\n+          listener.setFilename(_filename.getValue());\r\n+        else\r\n+        {\r\n+          ValueExpression valueExp = _filename.getValueExpression(faceletContext,\r\n+                                                                  Object.class);\r\n+          listener.setValueBinding(FileDownloadActionListener.FILENAME_KEY,\r\n+                                   new LegacyValueBinding(valueExp));\r\n+        }\r\n+      }\r\n+\r\n+      if (_contentType != null)\r\n+      {\r\n+        if (_contentType.isLiteral())\r\n+          listener.setContentType(_contentType.getValue());\r\n+        else\r\n+        {\r\n+          ValueExpression valueExp = _contentType.getValueExpression(faceletContext,\r\n+                                                                  Object.class);\r\n+          listener.setValueBinding(FileDownloadActionListener.CONTENT_TYPE_KEY,\r\n+                                   new LegacyValueBinding(valueExp));\r\n+        }\r\n+      }\r\n+      \r\n+      MethodExpression me = _method.getMethodExpression(faceletContext,\r\n+                                                        Object.class,\r\n+                                                        _METHOD_PARAMS);\r\n+      listener.setMethod(new LegacyMethodBinding(me));\r\n+\r\n+      ActionSource actionSource = (ActionSource)parent;\r\n+      actionSource.addActionListener(listener);\r\n+    }\r\n+  }\r\n+\r\n+  static private final Class[] _METHOD_PARAMS =\r\n+    new Class[]{FacesContext.class, OutputStream.class};\r\n+\r\n+  private final TagAttribute _method;\r\n+  private final TagAttribute _filename;\r\n+  private final TagAttribute _contentType;\r\n+}\r", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/facelets/FileDownloadActionListenerTag.java"}, {"additions": 8, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/8ca64ca32bc4d1c8c7588044af2832f0b231e171/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/facelets/ReturnActionListenerTag.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/8ca64ca32bc4d1c8c7588044af2832f0b231e171/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/facelets/ReturnActionListenerTag.java", "sha": "515364a355e46ff1b2777d781d24929086a8d9fd", "changes": 11, "status": "modified", "deletions": 3, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/facelets/ReturnActionListenerTag.java?ref=8ca64ca32bc4d1c8c7588044af2832f0b231e171", "patch": "@@ -54,13 +54,18 @@ public void apply(FaceletContext faceletContext,\n   {\n     if(ComponentSupport.isNew(parent))\n     {\n-      ValueExpression valueExp = _value.getValueExpression(faceletContext, Object.class);\n       ActionSource actionSource = (ActionSource)parent;\n       ReturnActionListener listener = new ReturnActionListener();\n-      listener.setValueBinding(ReturnActionListener.VALUE_KEY, new LegacyValueBinding(valueExp));\n+      if (_value != null)\n+      {\n+        ValueExpression valueExp = _value.getValueExpression(faceletContext, Object.class);\n+        listener.setValueBinding(ReturnActionListener.VALUE_KEY, new LegacyValueBinding(valueExp));\n+      }\n+\n+\n       actionSource.addActionListener(listener);\n     }\n   }\n \n   private final TagAttribute _value;\n-}\n\\ No newline at end of file\n+}", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/facelets/ReturnActionListenerTag.java"}], "repo": "myfaces-trinidad"}, {"commit": "https://github.com/apache/myfaces-trinidad/commit/a069c19b9ec93ec762c4f9b90ae534b3f7884572", "parent": "https://github.com/apache/myfaces-trinidad/commit/c0847748de2a0494aedb7650400eed8c8f024648", "message": "TRINIDAD-52: Add actionListener to make sending files easy\n- Add Facelets support for FileDownloadActionListenerTag.java\n- Misc: \"value\" is not a required attribute on returnActionListener - don't NPE if not set in Facelets", "bug_id": "myfaces-trinidad_59", "file": [{"additions": 5, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/a069c19b9ec93ec762c4f9b90ae534b3f7884572/trinidad/trinidad-impl/src/main/conf/META-INF/tr-base.taglib.xml", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/a069c19b9ec93ec762c4f9b90ae534b3f7884572/trinidad/trinidad-impl/src/main/conf/META-INF/tr-base.taglib.xml", "sha": "1fa3887ebecd08561c91b19bb2e09f7bad550e1e", "changes": 5, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/conf/META-INF/tr-base.taglib.xml?ref=a069c19b9ec93ec762c4f9b90ae534b3f7884572", "patch": "@@ -36,4 +36,9 @@\n     <tag-name>returnActionListener</tag-name>\r\n     <handler-class>org.apache.myfaces.trinidadinternal.facelets.ReturnActionListenerTag</handler-class>\r\n   </tag>\r\n+\r\n+  <tag>\r\n+    <tag-name>fileDownloadActionListener</tag-name>\r\n+    <handler-class>org.apache.myfaces.trinidadinternal.facelets.FileDownloadActionListenerTag</handler-class>\r\n+  </tag>\r\n </facelet-taglib>\n\\ No newline at end of file", "filename": "trinidad/trinidad-impl/src/main/conf/META-INF/tr-base.taglib.xml"}, {"additions": 106, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/a069c19b9ec93ec762c4f9b90ae534b3f7884572/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/facelets/FileDownloadActionListenerTag.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/a069c19b9ec93ec762c4f9b90ae534b3f7884572/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/facelets/FileDownloadActionListenerTag.java", "sha": "68c47d1705dda9357b2717e331d296a5f6e0f9ec", "changes": 106, "status": "added", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/facelets/FileDownloadActionListenerTag.java?ref=a069c19b9ec93ec762c4f9b90ae534b3f7884572", "patch": "@@ -0,0 +1,106 @@\n+/*\r\n+ *  Licensed to the Apache Software Foundation (ASF) under one\r\n+ *  or more contributor license agreements.  See the NOTICE file\r\n+ *  distributed with this work for additional information\r\n+ *  regarding copyright ownership.  The ASF licenses this file\r\n+ *  to you under the Apache License, Version 2.0 (the\r\n+ *  \"License\"); you may not use this file except in compliance\r\n+ *  with the License.  You may obtain a copy of the License at\r\n+ * \r\n+ *  http://www.apache.org/licenses/LICENSE-2.0\r\n+ * \r\n+ *  Unless required by applicable law or agreed to in writing,\r\n+ *  software distributed under the License is distributed on an\r\n+ *  \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n+ *  KIND, either express or implied.  See the License for the\r\n+ *  specific language governing permissions and limitations\r\n+ *  under the License.\r\n+ */\r\n+package org.apache.myfaces.trinidadinternal.facelets;\r\n+\r\n+import java.io.IOException;\r\n+import java.io.OutputStream;\r\n+\r\n+import javax.el.ELException;\r\n+import javax.el.MethodExpression;\r\n+import javax.el.ValueExpression;\r\n+import javax.faces.FacesException;\r\n+import javax.faces.component.ActionSource;\r\n+import javax.faces.component.UIComponent;\r\n+import javax.faces.context.FacesContext;\r\n+\r\n+import org.apache.myfaces.trinidadinternal.taglib.listener.FileDownloadActionListener;\r\n+\r\n+import com.sun.facelets.FaceletContext;\r\n+import com.sun.facelets.FaceletException;\r\n+import com.sun.facelets.el.LegacyMethodBinding;\r\n+import com.sun.facelets.el.LegacyValueBinding;\r\n+import com.sun.facelets.tag.TagAttribute;\r\n+import com.sun.facelets.tag.TagConfig;\r\n+import com.sun.facelets.tag.TagHandler;\r\n+import com.sun.facelets.tag.jsf.ComponentSupport;\r\n+\r\n+/**\r\n+ *\r\n+ */\r\n+public class FileDownloadActionListenerTag extends TagHandler\r\n+{\r\n+\r\n+  public FileDownloadActionListenerTag(TagConfig tagConfig)\r\n+  {\r\n+    super(tagConfig);\r\n+    _filename = getAttribute(\"filename\");\r\n+    _contentType = getAttribute(\"contentType\");\r\n+    _method = getRequiredAttribute(\"method\");\r\n+  }\r\n+\r\n+  @SuppressWarnings(\"deprecation\")\r\n+  public void apply(FaceletContext faceletContext,\r\n+          UIComponent parent) throws IOException, FacesException, FaceletException, ELException\r\n+  {\r\n+    if(ComponentSupport.isNew(parent))\r\n+    {\r\n+      FileDownloadActionListener listener = new FileDownloadActionListener();\r\n+      if (_filename != null)\r\n+      {\r\n+        if (_filename.isLiteral())\r\n+          listener.setFilename(_filename.getValue());\r\n+        else\r\n+        {\r\n+          ValueExpression valueExp = _filename.getValueExpression(faceletContext,\r\n+                                                                  Object.class);\r\n+          listener.setValueBinding(FileDownloadActionListener.FILENAME_KEY,\r\n+                                   new LegacyValueBinding(valueExp));\r\n+        }\r\n+      }\r\n+\r\n+      if (_contentType != null)\r\n+      {\r\n+        if (_contentType.isLiteral())\r\n+          listener.setContentType(_contentType.getValue());\r\n+        else\r\n+        {\r\n+          ValueExpression valueExp = _contentType.getValueExpression(faceletContext,\r\n+                                                                  Object.class);\r\n+          listener.setValueBinding(FileDownloadActionListener.CONTENT_TYPE_KEY,\r\n+                                   new LegacyValueBinding(valueExp));\r\n+        }\r\n+      }\r\n+      \r\n+      MethodExpression me = _method.getMethodExpression(faceletContext,\r\n+                                                        Object.class,\r\n+                                                        _METHOD_PARAMS);\r\n+      listener.setMethod(new LegacyMethodBinding(me));\r\n+\r\n+      ActionSource actionSource = (ActionSource)parent;\r\n+      actionSource.addActionListener(listener);\r\n+    }\r\n+  }\r\n+\r\n+  static private final Class[] _METHOD_PARAMS =\r\n+    new Class[]{FacesContext.class, OutputStream.class};\r\n+\r\n+  private final TagAttribute _method;\r\n+  private final TagAttribute _filename;\r\n+  private final TagAttribute _contentType;\r\n+}\r", "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/facelets/FileDownloadActionListenerTag.java"}, {"additions": 8, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/a069c19b9ec93ec762c4f9b90ae534b3f7884572/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/facelets/ReturnActionListenerTag.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/a069c19b9ec93ec762c4f9b90ae534b3f7884572/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/facelets/ReturnActionListenerTag.java", "sha": "515364a355e46ff1b2777d781d24929086a8d9fd", "changes": 11, "status": "modified", "deletions": 3, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/facelets/ReturnActionListenerTag.java?ref=a069c19b9ec93ec762c4f9b90ae534b3f7884572", "patch": "@@ -54,13 +54,18 @@ public void apply(FaceletContext faceletContext,\n   {\n     if(ComponentSupport.isNew(parent))\n     {\n-      ValueExpression valueExp = _value.getValueExpression(faceletContext, Object.class);\n       ActionSource actionSource = (ActionSource)parent;\n       ReturnActionListener listener = new ReturnActionListener();\n-      listener.setValueBinding(ReturnActionListener.VALUE_KEY, new LegacyValueBinding(valueExp));\n+      if (_value != null)\n+      {\n+        ValueExpression valueExp = _value.getValueExpression(faceletContext, Object.class);\n+        listener.setValueBinding(ReturnActionListener.VALUE_KEY, new LegacyValueBinding(valueExp));\n+      }\n+\n+\n       actionSource.addActionListener(listener);\n     }\n   }\n \n   private final TagAttribute _value;\n-}\n\\ No newline at end of file\n+}", "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/facelets/ReturnActionListenerTag.java"}], "repo": "myfaces-trinidad"}, {"commit": "https://github.com/apache/myfaces-trinidad/commit/5b3070517026785843f21e7dcf52e2733dc70f52", "parent": "https://github.com/apache/myfaces-trinidad/commit/c9b46b6cee7be429e38a46927eebcee81b129b8d", "message": "ADFFACES-469: ResponseWriter.writeText() can throw NPE if text is null - protect against this\n- Also, delete unused ProductBrandingRenderer code\n- And clean up some panelChoice and panelRadio renderer code\n- And make TestResponseWriter throw an exception if null is passed to writeText()", "bug_id": "myfaces-trinidad_60", "file": [{"additions": 2, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/5b3070517026785843f21e7dcf52e2733dc70f52/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/DialogRequest.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/5b3070517026785843f21e7dcf52e2733dc70f52/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/DialogRequest.java", "sha": "14a40c0ef7427cde54c761c2eab40f48575224cc", "changes": 3, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/DialogRequest.java?ref=5b3070517026785843f21e7dcf52e2733dc70f52", "patch": "@@ -127,7 +127,8 @@ public void renderLaunchJavascript(\n     out.writeText(\"},\\\"\" , null);\n     out.writeText(formName, null);\n     out.writeText(\"\\\",\\\"\", null);\n-    out.writeText(_clientId, null);\n+    if (_clientId != null)\n+      out.writeText(_clientId, null);\n     out.writeText(\"\\\",\", null);\n     boolean isPPR = PartialPageUtils.supportsPartialRendering(arc);\n     out.writeText(isPPR ? \"1\" : \"0\", null);", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/DialogRequest.java"}, {"additions": 1, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/5b3070517026785843f21e7dcf52e2733dc70f52/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/pda/FrameRenderer.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/5b3070517026785843f21e7dcf52e2733dc70f52/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/pda/FrameRenderer.java", "sha": "a66e5529025d07585821c17a91c1ba37d83f082d", "changes": 2, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/pda/FrameRenderer.java?ref=5b3070517026785843f21e7dcf52e2733dc70f52", "patch": "@@ -98,7 +98,7 @@ protected final void encodeAll(\n       renderEncodedActionURI(context, \"href\", source);\n       if (shortDesc != null)\n         writer.writeText(shortDesc, \"shortDesc\");\n-      else\n+      else if (source != null)\n         writer.writeText(source, null);\n \n       writer.endElement(\"a\");", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/pda/FrameRenderer.java"}, {"additions": 2, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/5b3070517026785843f21e7dcf52e2733dc70f52/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/AccessKeyUtils.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/5b3070517026785843f21e7dcf52e2733dc70f52/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/AccessKeyUtils.java", "sha": "2b533c0ca44ef306cb4e2e131199cb23d57316b5", "changes": 3, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/AccessKeyUtils.java?ref=5b3070517026785843f21e7dcf52e2733dc70f52", "patch": "@@ -89,7 +89,8 @@ static public void renderAccessKeyText(\n     else\n     {\n       // output the text directly since we have no access key\n-      writer.writeText(textValue, null);\n+      if (textValue != null)\n+        writer.writeText(textValue, null);\n     }\n   }\n ", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/AccessKeyUtils.java"}, {"additions": 3, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/5b3070517026785843f21e7dcf52e2733dc70f52/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/ColumnGroupRenderer.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/5b3070517026785843f21e7dcf52e2733dc70f52/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/ColumnGroupRenderer.java", "sha": "51b035545f2026f1efcb08b3def86dd9d63bd109", "changes": 4, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/ColumnGroupRenderer.java?ref=5b3070517026785843f21e7dcf52e2733dc70f52", "patch": "@@ -555,7 +555,9 @@ protected void renderHeaderContents(\n     String                sortOnclick) throws IOException\n   {\n     ResponseWriter rw = context.getResponseWriter();\n-    rw.writeText(getHeaderText(getFacesBean(column)), \"headerText\");\n+    String headerText = getHeaderText(getFacesBean(column));\n+    if (headerText != null)\n+      rw.writeText(headerText, \"headerText\");\n \n     UIComponent header = getFacet(column, CoreColumn.HEADER_FACET);\n     if (header != null)", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/ColumnGroupRenderer.java"}, {"additions": 10, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/5b3070517026785843f21e7dcf52e2733dc70f52/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/HiddenLabelUtils.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/5b3070517026785843f21e7dcf52e2733dc70f52/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/HiddenLabelUtils.java", "sha": "1f9c985f279df68a73e46bb8adee3ca1264c673d", "changes": 17, "status": "modified", "deletions": 7, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/HiddenLabelUtils.java?ref=5b3070517026785843f21e7dcf52e2733dc70f52", "patch": "@@ -123,13 +123,16 @@ static public void outputHiddenLabel(\n     UIComponent         component\n     ) throws IOException\n   {\n-    ResponseWriter writer = context.getResponseWriter();\n-    writer.startElement(\"label\", component);\n-    writer.writeAttribute(\"for\", id, null);\n-    XhtmlRenderer.renderStyleClass(context, arc,\n-                                   SkinSelectors.HIDDEN_LABEL_STYLE_CLASS);\n-    writer.writeText(text, null);\n-    writer.endElement(\"label\");\n+    if (text != null)\n+    {\n+      ResponseWriter writer = context.getResponseWriter();\n+      writer.startElement(\"label\", component);\n+      writer.writeAttribute(\"for\", id, null);\n+      XhtmlRenderer.renderStyleClass(context, arc,\n+                                     SkinSelectors.HIDDEN_LABEL_STYLE_CLASS);\n+      writer.writeText(text, null);\n+      writer.endElement(\"label\");\n+    }\n   }\n \n ", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/HiddenLabelUtils.java"}, {"additions": 3, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/5b3070517026785843f21e7dcf52e2733dc70f52/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/MediaRenderer.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/5b3070517026785843f21e7dcf52e2733dc70f52/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/MediaRenderer.java", "sha": "a338f9a9d6d2a0a6baeb17bfa3849e19375e81e4", "changes": 4, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/MediaRenderer.java?ref=5b3070517026785843f21e7dcf52e2733dc70f52", "patch": "@@ -517,7 +517,9 @@ private void _renderLink(\n         writer.endElement(\"img\");\n       }\n \n-      writer.writeText(getShortDesc(bean), \"shortDesc\");\n+      String shortDesc = getShortDesc(bean);\n+      if (shortDesc != null)\n+        writer.writeText(shortDesc, \"shortDesc\");\n \n       writer.endElement(\"a\");\n     }", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/MediaRenderer.java"}, {"additions": 3, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/5b3070517026785843f21e7dcf52e2733dc70f52/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/PanelAccordionRenderer.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/5b3070517026785843f21e7dcf52e2733dc70f52/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/PanelAccordionRenderer.java", "sha": "1943fcb6c3f3219a0be320b0f99d12fc48fe7389", "changes": 5, "status": "modified", "deletions": 2, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/PanelAccordionRenderer.java?ref=5b3070517026785843f21e7dcf52e2733dc70f52", "patch": "@@ -312,8 +312,9 @@ else if (disclosed)\n                                                 getDisclosedTipKey(),\n                                                 getUndisclosedTipKey());\n       }\n-\n-      out.writeText(titleText, null);\n+      \n+      if (titleText != null)\n+        out.writeText(titleText, null);\n       out.endElement(\"a\");\n \n       out.endElement(\"div\"); // Ending div for an individual panel", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/PanelAccordionRenderer.java"}, {"additions": 2, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/5b3070517026785843f21e7dcf52e2733dc70f52/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/PanelHeaderRenderer.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/5b3070517026785843f21e7dcf52e2733dc70f52/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/PanelHeaderRenderer.java", "sha": "504e8c48cc94edd2bd07fcc6898a83468f4d42a8", "changes": 3, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/PanelHeaderRenderer.java?ref=5b3070517026785843f21e7dcf52e2733dc70f52", "patch": "@@ -113,7 +113,8 @@ protected void encodeAll(\n                        SkinSelectors.AF_PANEL_HEADER_ERROR_STYLE_CLASS);\n     }\n     \n-    writer.writeText(text, \"text\");\n+    if (text != null)\n+      writer.writeText(text, \"text\");\n \n     if (isError)\n     {", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/PanelHeaderRenderer.java"}, {"additions": 6, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/5b3070517026785843f21e7dcf52e2733dc70f52/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SelectManyShuttleRenderer.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/5b3070517026785843f21e7dcf52e2733dc70f52/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SelectManyShuttleRenderer.java", "sha": "f5246d8370f794e58a477a51644750fa1eb17760", "changes": 8, "status": "modified", "deletions": 2, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SelectManyShuttleRenderer.java?ref=5b3070517026785843f21e7dcf52e2733dc70f52", "patch": "@@ -524,7 +524,9 @@ private void _renderHeaderRow(\n       rw.startElement(\"td\", null);\r\n       renderStyleClass(context, rc, SkinSelectors.SHUTTLE_HEADER_STYLE_CLASS);\r\n       rw.writeAttribute(\"valign\", \"bottom\", null);\r\n-      rw.writeText(getLeadingHeader(bean), \"leadingHeader\");\r\n+      String leadingHeader = getLeadingHeader(bean);\r\n+      if (leadingHeader != null)\r\n+        rw.writeText(leadingHeader, \"leadingHeader\");\r\n       rw.endElement(\"td\");\r\n \r\n       rw.startElement(\"td\", null);\r\n@@ -547,7 +549,9 @@ private void _renderHeaderRow(\n       }\r\n     }\r\n \r\n-    rw.writeText(getTrailingHeader(bean), \"trailingHeader\");\r\n+    String trailingHeader = getTrailingHeader(bean);\r\n+    if (trailingHeader != null)\r\n+      rw.writeText(trailingHeader, \"trailingHeader\");\r\n     rw.endElement(\"td\");\r\n     rw.endElement(\"tr\");\r\n   }\r", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SelectManyShuttleRenderer.java"}, {"additions": 4, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/5b3070517026785843f21e7dcf52e2733dc70f52/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SimpleInputTextRenderer.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/5b3070517026785843f21e7dcf52e2733dc70f52/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SimpleInputTextRenderer.java", "sha": "5a9ad5e6091a3c67c415c7315f1c89c040395b19", "changes": 6, "status": "modified", "deletions": 2, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SimpleInputTextRenderer.java?ref=5b3070517026785843f21e7dcf52e2733dc70f52", "patch": "@@ -439,15 +439,17 @@ protected void renderContent(\n       } // endif !renderAsElement\n       else\n       {\n-        rw.writeText(textValue, \"value\");\n+        if (textValue != null)\n+          rw.writeText(textValue, \"value\");\n       }\n     }  // endif isTextArea()\n     else\n     {\n       // Don't render anything for disabled password fields\n       if (!getSecret(bean))\n       {\n-        rw.writeText(textValue, \"value\");\n+        if (textValue != null)\n+          rw.writeText(textValue, \"value\");\n       }\n     }\n   }", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SimpleInputTextRenderer.java"}, {"additions": 2, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/5b3070517026785843f21e7dcf52e2733dc70f52/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/TreeRenderer.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/5b3070517026785843f21e7dcf52e2733dc70f52/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/TreeRenderer.java", "sha": "1a3a6a0a245f026217b3e05a36bfcfa44bf1d810", "changes": 3, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/TreeRenderer.java?ref=5b3070517026785843f21e7dcf52e2733dc70f52", "patch": "@@ -336,7 +336,8 @@ private void _renderTextCell(FacesContext context,\n       writer.writeAttribute(XhtmlConstants.ONCLICK_ATTRIBUTE, onclick, null);\r\n     }\r\n \r\n-    writer.writeText(text, null);\r\n+    if (text != null)\r\n+      writer.writeText(text, null);\r\n \r\n     if (onclick != null)\r\n     {\r", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/TreeRenderer.java"}, {"additions": 2, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/5b3070517026785843f21e7dcf52e2733dc70f52/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/table/TreeTableNavRenderer.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/5b3070517026785843f21e7dcf52e2733dc70f52/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/table/TreeTableNavRenderer.java", "sha": "5b143bf150b4bcb6aae41703662966d15c4ce62f", "changes": 3, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/table/TreeTableNavRenderer.java?ref=5b3070517026785843f21e7dcf52e2733dc70f52", "patch": "@@ -244,7 +244,8 @@ private void _writeCellContents(\n     }   \n     \n     renderStyleClass(context, arc, styleClass);\n-    writer.writeText(text, null);\n+    if (text != null)\n+      writer.writeText(text, null);\n     writer.endElement(XhtmlConstants.LINK_ELEMENT);\n     \n     writer.endElement(\"div\");", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/table/TreeTableNavRenderer.java"}, {"additions": 4, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/5b3070517026785843f21e7dcf52e2733dc70f52/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/html/layout/CorePanelChoiceRenderer.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/5b3070517026785843f21e7dcf52e2733dc70f52/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/html/layout/CorePanelChoiceRenderer.java", "sha": "4568a2e92ed943a74470fb9974b04e681821ae8b", "changes": 13, "status": "modified", "deletions": 9, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/html/layout/CorePanelChoiceRenderer.java?ref=5b3070517026785843f21e7dcf52e2733dc70f52", "patch": "@@ -33,7 +33,6 @@\n import org.apache.myfaces.trinidad.render.RenderUtils;\n import org.apache.myfaces.trinidadinternal.renderkit.core.xhtml.XhtmlRenderer;\n \n-import org.apache.myfaces.trinidadinternal.share.url.URLEncoder;\n import org.apache.myfaces.trinidadinternal.ui.UIXRenderingContext;\n import org.apache.myfaces.trinidadinternal.ui.laf.base.xhtml.XhtmlLafRenderer;\n \n@@ -123,7 +122,6 @@ protected void renderListDisplay(FacesContext context,\n \n     String compId = component.getClientId(context);\n \n-    URLEncoder encoder = rCtx.getURLEncoder();\n     ResponseWriter out = context.getResponseWriter();\n \n     // draw table to contain the select UI control\n@@ -140,7 +138,7 @@ protected void renderListDisplay(FacesContext context,\n \n     out.startElement(\"tr\", component);\n \n-    renderSelectLabel(rCtx, component, out, encoder, compId);\n+    renderSelectLabel(rCtx, component, out, compId);\n \n     // Render filler / separator between label and select control\n     renderSpacerTD(out, component, getLabelControlSeparatorSize());\n@@ -194,7 +192,6 @@ private void _renderSelectItemInTD(FacesContext context,\n       out.writeAttribute(\"onchange\", onChangeJS, null);\n     }\n \n-    URLEncoder encoder = rCtx.getURLEncoder();\n     // Render options now.\n     ListIterator<UIComponent> children = component.getChildren().listIterator();\n     while (children.hasNext())\n@@ -222,10 +219,6 @@ private void _renderSelectItemInTD(FacesContext context,\n         }\n \n         String childTitle = (String) detailItem.getAttributes().get(\"text\");\n-        if (childTitle != null)\n-        {\n-          childTitle = encoder.encodeParameter(childTitle);\n-        }\n         String childClientId = child.getClientId(context);\n \n         out.startElement(\"option\", component);\n@@ -235,7 +228,9 @@ private void _renderSelectItemInTD(FacesContext context,\n           out.writeAttribute(\"selected\", Boolean.TRUE, null);\n         }\n \n-        out.writeText(childTitle, null);\n+        if (childTitle != null)\n+          out.writeText(childTitle, null);\n+\n         out.endElement(\"option\");\n       }\n     }", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/html/layout/CorePanelChoiceRenderer.java"}, {"additions": 2, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/5b3070517026785843f21e7dcf52e2733dc70f52/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/html/layout/CorePanelRadioRenderer.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/5b3070517026785843f21e7dcf52e2733dc70f52/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/html/layout/CorePanelRadioRenderer.java", "sha": "0fa81e71f8815a749b15d25c4f8a7f6ed458e6b7", "changes": 8, "status": "modified", "deletions": 6, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/html/layout/CorePanelRadioRenderer.java?ref=5b3070517026785843f21e7dcf52e2733dc70f52", "patch": "@@ -32,7 +32,6 @@\n import org.apache.myfaces.trinidad.render.RenderUtils;\n \n import org.apache.myfaces.trinidadinternal.renderkit.core.xhtml.SkinSelectors;\n-import org.apache.myfaces.trinidadinternal.share.url.URLEncoder;\n import org.apache.myfaces.trinidadinternal.ui.UIConstants;\n import org.apache.myfaces.trinidadinternal.ui.UIXRenderingContext;\n import org.apache.myfaces.trinidadinternal.ui.laf.base.BaseLafUtils;\n@@ -62,7 +61,6 @@ protected void renderListDisplay(FacesContext context,\n \n     String compId = component.getClientId(context);\n \n-    URLEncoder encoder = rCtx.getURLEncoder();\n     ResponseWriter out = context.getResponseWriter();\n \n     // draw table to contain the select UI control\n@@ -90,7 +88,8 @@ protected void renderListDisplay(FacesContext context,\n       renderStyleClassAttribute(rCtx,\n                                 SkinSelectors.AF_LABEL_TEXT_STYLE_CLASS);\n \n-    out.writeText(encoder.encodeParameter(label), null);\n+    if (label != null)\n+      out.writeText(label, null);\n \n     out.endElement(\"span\");\n     out.endElement(\"td\");\n@@ -140,8 +139,6 @@ private void _renderRadioItemsInTD(FacesContext context,\n     out.writeAttribute(\"cellspacing\", \"0\", null);\n     out.writeAttribute(\"cellpadding\", \"0\", null);\n \n-    URLEncoder encoder = rCtx.getURLEncoder();\n-\n     ListIterator<UIComponent> children = component.getChildren().listIterator();\n     while (children.hasNext())\n     {\n@@ -254,7 +251,6 @@ private void _renderRadioItemsInTD(FacesContext context,\n \n       writeLabel(out,\n                  detailItem,\n-                 encoder,\n                  (String) detailItem.getAttributes().get(\"text\"));\n \n       out.endElement(\"span\");", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/html/layout/CorePanelRadioRenderer.java"}, {"additions": 5, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/5b3070517026785843f21e7dcf52e2733dc70f52/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/html/layout/ShowOneListRendererBase.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/5b3070517026785843f21e7dcf52e2733dc70f52/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/html/layout/ShowOneListRendererBase.java", "sha": "5299c6bde701405f01ad43206ddcb2d9e57cb687", "changes": 13, "status": "modified", "deletions": 8, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/html/layout/ShowOneListRendererBase.java?ref=5b3070517026785843f21e7dcf52e2733dc70f52", "patch": "@@ -34,7 +34,6 @@\n import org.apache.myfaces.trinidad.context.RenderingContext;\n import org.apache.myfaces.trinidadinternal.renderkit.core.xhtml.SkinSelectors;\n import org.apache.myfaces.trinidadinternal.renderkit.core.xhtml.XhtmlRenderer;\n-import org.apache.myfaces.trinidadinternal.share.url.URLEncoder;\n import org.apache.myfaces.trinidadinternal.ui.UIConstants;\n import org.apache.myfaces.trinidadinternal.ui.UIXRenderingContext;\n import org.apache.myfaces.trinidadinternal.ui.laf.base.xhtml.XhtmlLafRenderer;\n@@ -311,7 +310,6 @@ protected boolean elementSupportsPartial(UIXRenderingContext context,\n   protected void renderSelectLabel(UIXRenderingContext rCtx,\n                                    UIComponent component,\n                                    ResponseWriter out,\n-                                   URLEncoder encoder,\n                                    String compId)\n    throws IOException\n   {\n@@ -337,7 +335,6 @@ protected void renderSelectLabel(UIXRenderingContext rCtx,\n \n     writeLabel(out,\n               component,\n-              encoder,\n               (String) component.getAttributes().get(\"label\"));\n \n     out.endElement(\"label\");\n@@ -353,33 +350,33 @@ protected void renderSelectLabel(UIXRenderingContext rCtx,\n    */\n   protected void writeLabel(ResponseWriter out,\n                             UIComponent component,\n-                            URLEncoder encoder,\n                             String label)\n     throws IOException\n   {\n+    // AdamWiner: TODO: replace this with a call to AccessKeyUtils\n     Character accessChar =\n       (Character) component.getAttributes().get(\"accessKey\");\n \n     if (label != null)\n     {\n       if (accessChar == null)\n       {\n-        out.writeText(encoder.encodeParameter(label), null);\n+        out.writeText(label, null);\n       }\n       else\n       {\n         int accessKeyIndex = label.indexOf(accessChar.charValue());\n         if (accessKeyIndex < 0)\n         {\n-          out.writeText(encoder.encodeParameter(label), null);\n+          out.writeText(label, null);\n         }\n         else\n         {\n           // String stripping to remove &amp; will already be done in Tag impl\n           String strBefAccessKey = label.substring(0, accessKeyIndex);\n           String strAfterAccessKey = label.substring(accessKeyIndex + 1,\n                                                      label.length());\n-          out.writeText(encoder.encodeParameter(strBefAccessKey), null);\n+          out.writeText(strBefAccessKey, null);\n \n           //ADFFACES-153: use default style (underline) for access key\n           out.startElement (\"span\", null);\n@@ -389,7 +386,7 @@ protected void writeLabel(ResponseWriter out,\n           out.writeText (accessChar.toString(), null);\n           out.endElement (\"span\");\n           \n-          out.writeText(encoder.encodeParameter(strAfterAccessKey), null);\n+          out.writeText(strAfterAccessKey, null);\n         }\n       }\n     }", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/html/layout/ShowOneListRendererBase.java"}, {"additions": 0, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/5b3070517026785843f21e7dcf52e2733dc70f52/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/ui/UIConstants.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/5b3070517026785843f21e7dcf52e2733dc70f52/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/ui/UIConstants.java", "sha": "8db2b2ee038ad1a06d73e57e28a3c251d15d8bc1", "changes": 1, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/ui/UIConstants.java?ref=5b3070517026785843f21e7dcf52e2733dc70f52", "patch": "@@ -446,7 +446,6 @@\n   public static final String PROCESS_TRAIN_NAME = \"processTrain\";\n   public static final String PROCESSING_NAME = \"processing\";\n   public static final String PROCESS_STEPS_NAME = \"processSteps\";\n-  public static final String PRODUCT_BRANDING_NAME = \"productBranding\";\n   public static final String RAW_TEXT_NAME = \"rawText\";\n   public static final String ROW_LAYOUT_NAME = \"rowLayout\";\n   public static final String SCRIPT_NAME = \"script\";", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/ui/UIConstants.java"}, {"additions": 2, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/5b3070517026785843f21e7dcf52e2733dc70f52/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/ui/laf/base/desktop/ApplicationSwitcherRenderer.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/5b3070517026785843f21e7dcf52e2733dc70f52/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/ui/laf/base/desktop/ApplicationSwitcherRenderer.java", "sha": "e1f950166f1f6fd521cf62cdaa7c6b4ec4d29d07", "changes": 3, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/ui/laf/base/desktop/ApplicationSwitcherRenderer.java?ref=5b3070517026785843f21e7dcf52e2733dc70f52", "patch": "@@ -213,7 +213,8 @@ protected void renderPreChoice(\n     writer.startElement(TABLE_DATA_ELEMENT, null);\n     writer.writeAttribute(ALIGN_ATTRIBUTE, RIGHT_ATTRIBUTE_VALUE, null);\n     renderStyleClassAttribute(context, AF_MENU_CHOICE_LABEL_STYLE_CLASS );\n-    writer.writeText(title, \"title\");\n+    if (title != null)\n+      writer.writeText(title, \"title\");\n     writer.endElement(TABLE_DATA_ELEMENT);\n \n     // add cell with space in it", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/ui/laf/base/desktop/ApplicationSwitcherRenderer.java"}, {"additions": 0, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/5b3070517026785843f21e7dcf52e2733dc70f52/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/ui/laf/base/desktop/BaseDesktopLookAndFeel.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/5b3070517026785843f21e7dcf52e2733dc70f52/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/ui/laf/base/desktop/BaseDesktopLookAndFeel.java", "sha": "9bb43a475e180d8ce1b6f35fc8314554b97d98da", "changes": 1, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/ui/laf/base/desktop/BaseDesktopLookAndFeel.java?ref=5b3070517026785843f21e7dcf52e2733dc70f52", "patch": "@@ -264,7 +264,6 @@ private RendererFactoryImpl _createEmailFactory()\n     PROCESS_CHOICE_BAR_NAME,\n     PROCESS_TRAIN_NAME,\n     PROCESSING_NAME,\n-    PRODUCT_BRANDING_NAME,\n     SEPARATOR_NAME,\n     SHOW_ONE_TAB_NAME,\n     SIDE_BAR_NAME,", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/ui/laf/base/desktop/BaseDesktopLookAndFeel.java"}, {"additions": 2, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/5b3070517026785843f21e7dcf52e2733dc70f52/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/ui/laf/base/desktop/GlobalButtonRenderer.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/5b3070517026785843f21e7dcf52e2733dc70f52/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/ui/laf/base/desktop/GlobalButtonRenderer.java", "sha": "2ff58aba50478ced93d15e9d15a1dca477bdf1ea", "changes": 3, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/ui/laf/base/desktop/GlobalButtonRenderer.java?ref=5b3070517026785843f21e7dcf52e2733dc70f52", "patch": "@@ -95,7 +95,8 @@ protected void prerender(UIXRenderingContext context, UINode node)\n       writer.endElement(IMAGE_ELEMENT);\n     }\n \n-    writer.writeText(text, TEXT_ATTR.getAttributeName());\n+    if (text != null)\n+      writer.writeText(text, TEXT_ATTR.getAttributeName());\n \n     writer.endElement(LINK_ELEMENT);\n   }", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/ui/laf/base/desktop/GlobalButtonRenderer.java"}, {"additions": 2, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/5b3070517026785843f21e7dcf52e2733dc70f52/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/ui/laf/base/desktop/HeaderRenderer.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/5b3070517026785843f21e7dcf52e2733dc70f52/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/ui/laf/base/desktop/HeaderRenderer.java", "sha": "76fff3185df9071980dfb4247b81fbfd10adbab8", "changes": 3, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/ui/laf/base/desktop/HeaderRenderer.java?ref=5b3070517026785843f21e7dcf52e2733dc70f52", "patch": "@@ -180,7 +180,8 @@ private void _prerender(\n       renderStyleClassAttribute(context, AF_PANEL_HEADER_ERROR_STYLE_CLASS);\n     }\n     \n-    writer.writeText(label, TEXT_ATTR.getAttributeName());\n+    if (label != null)\n+      writer.writeText(label, TEXT_ATTR.getAttributeName());\n \n     if (isError)\n     {", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/ui/laf/base/desktop/HeaderRenderer.java"}, {"additions": 4, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/5b3070517026785843f21e7dcf52e2733dc70f52/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/ui/laf/base/desktop/MessageBoxRenderer.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/5b3070517026785843f21e7dcf52e2733dc70f52/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/ui/laf/base/desktop/MessageBoxRenderer.java", "sha": "b4aec4358e0bd20bf924b86f295673b2eb1d9489", "changes": 7, "status": "modified", "deletions": 3, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/ui/laf/base/desktop/MessageBoxRenderer.java?ref=5b3070517026785843f21e7dcf52e2733dc70f52", "patch": "@@ -147,7 +147,8 @@ protected void renderContent(\n \n     writer.startElement(DIV_ELEMENT, null);\n     renderStyleClassAttribute(context, AF_MESSAGES_MESSAGE_TEXT_STYLE_CLASS);\n-    writer.writeText(message, CoreMessages.MESSAGE_KEY.getName());\n+    if (message != null)\n+      writer.writeText(message, CoreMessages.MESSAGE_KEY.getName());\n     writer.endElement(DIV_ELEMENT);\n \n     if (useList)\n@@ -227,7 +228,7 @@ private void _writeGlobalMsg(\n     String text = MessageUtils.getGlobalMessage(context, summary, detail);\n     if (isTextFormatted(text))\n       renderFormattedText(context, text);\n-    else\n+    else if (text != null)\n       writer.writeText(text, null);\n   }\n \n@@ -262,7 +263,7 @@ private BaseMutableUINode _writeClientMsg(\n \n     if (isTextFormatted(summary))\n       renderFormattedText(context, description);\n-    else\n+    else if (description != null)\n       writer.writeText(description, null);\n \n     return currentChild;", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/ui/laf/base/desktop/MessageBoxRenderer.java"}, {"additions": 0, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/5b3070517026785843f21e7dcf52e2733dc70f52/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/ui/laf/base/desktop/PageHeaderLayoutRenderer.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/5b3070517026785843f21e7dcf52e2733dc70f52/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/ui/laf/base/desktop/PageHeaderLayoutRenderer.java", "sha": "b025ca9550f428869c9c6a3832c51879223fa893", "changes": 19, "status": "modified", "deletions": 19, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/ui/laf/base/desktop/PageHeaderLayoutRenderer.java?ref=5b3070517026785843f21e7dcf52e2733dc70f52", "patch": "@@ -155,20 +155,6 @@ protected void renderContent(\n       ((inContextBranding != null) || isCompact);\n \n \n-    if ((productBranding != null))\n-    {\n-      if (inContextOrCompact)\n-      {\n-        // The ProductBrandingBean changes look depending upon if the\n-        // inContextBranding named child exists. So, set the property\n-        // on the rendering context to communicate this with the\n-        // ProductBrandingRenderer\n-        setRenderingProperty(context,\n-                             COMPACT_PRODUCT_BRANDING_PROPERTY,\n-                             Boolean.TRUE);\n-      }\n-    }\n-\n     //\n     // Create the middle table, if necessary.\n     // brandingCount counts corporateBranding,\n@@ -706,11 +692,6 @@ private int _calculateColSpan(\n     return colSpan;\n   }\n \n-  // context property to indicate that the compact Product Branding needs to be\n-  // rendered -- either because inContextBranding exists or pageLayout's\n-  // chromeType is compact.\n-  public static final Object COMPACT_PRODUCT_BRANDING_PROPERTY = new Object();\n-\n   private static final int _TAB_SPACER_SIZE = 10;\n \n }", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/ui/laf/base/desktop/PageHeaderLayoutRenderer.java"}, {"additions": 0, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/c9b46b6cee7be429e38a46927eebcee81b129b8d/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/ui/laf/base/desktop/ProductBrandingRenderer.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/c9b46b6cee7be429e38a46927eebcee81b129b8d/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/ui/laf/base/desktop/ProductBrandingRenderer.java", "sha": "fca74d24b3793355562cef5a7c7c6a67563e5cb8", "changes": 78, "status": "removed", "deletions": 78, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/ui/laf/base/desktop/ProductBrandingRenderer.java?ref=c9b46b6cee7be429e38a46927eebcee81b129b8d", "patch": "@@ -1,78 +0,0 @@\n-/*\n- *  Licensed to the Apache Software Foundation (ASF) under one\n- *  or more contributor license agreements.  See the NOTICE file\n- *  distributed with this work for additional information\n- *  regarding copyright ownership.  The ASF licenses this file\n- *  to you under the Apache License, Version 2.0 (the\n- *  \"License\"); you may not use this file except in compliance\n- *  with the License.  You may obtain a copy of the License at\n- * \n- *  http://www.apache.org/licenses/LICENSE-2.0\n- * \n- *  Unless required by applicable law or agreed to in writing,\n- *  software distributed under the License is distributed on an\n- *  \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- *  KIND, either express or implied.  See the License for the\n- *  specific language governing permissions and limitations\n- *  under the License.\n- */\n-package org.apache.myfaces.trinidadinternal.ui.laf.base.desktop;\n-\n-import java.io.IOException;\n-\n-import javax.faces.context.ResponseWriter;\n-\n-import org.apache.myfaces.trinidadinternal.ui.UIXRenderingContext;\n-import org.apache.myfaces.trinidadinternal.ui.UINode;\n-\n-\n-/**\n- * Renderer for product branding\n- * \n- * @version $Name:  $ ($Revision: adfrt/faces/adf-faces-impl/src/main/java/oracle/adfinternal/view/faces/ui/laf/base/desktop/ProductBrandingRenderer.java#0 $) $Date: 10-nov-2005.18:56:12 $\n- * @deprecated This class comes from the old Java 1.2 UIX codebase and should not be used anymore.\n- */\n-@Deprecated\n-public class ProductBrandingRenderer extends HtmlLafRenderer\n-{\n-  @Override\n-  protected void renderContent(\n-    UIXRenderingContext context,\n-    UINode           node) throws IOException\n-  {\n-    ResponseWriter writer = context.getResponseWriter();\n-\n-    writer.startElement(\"span\", null);\n-\n-    renderStyleClassAttribute(context, getTextStyle(context, node));\n-\n-\t// @todo =-=bwa. Need to change the \"null\" to writeText() to be\n-\t// the PropertyKey corresponding to the \"text\" attribute on\n-\t// the product branding component. However, the component does not\n-\t// exist yet, since the component is still in experimental.\n-    writer.writeText(getText(context, node), TEXT_ATTR.getAttributeName());\n-    writer.endElement(\"span\");\n-\n-  }\n-\n-  @Override\n-  protected String getElementName(\n-    UIXRenderingContext context,\n-    UINode           node\n-    )\n-  {\n-    return \"span\";\n-  }\n-  \n-\n-  protected String getTextStyle(\n-    UIXRenderingContext context,\n-    UINode           node\n-    )\n-  {\n-    return \"p_OraProductBrandingCompactText\";\n-  }  \n-\n-  \n-}\n-", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/ui/laf/base/desktop/ProductBrandingRenderer.java"}, {"additions": 2, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/5b3070517026785843f21e7dcf52e2733dc70f52/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/ui/laf/base/desktop/TreeRenderer.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/5b3070517026785843f21e7dcf52e2733dc70f52/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/ui/laf/base/desktop/TreeRenderer.java", "sha": "7e73030fb30adbacd5eed2362a9b59b2a48e4d6a", "changes": 3, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/ui/laf/base/desktop/TreeRenderer.java?ref=5b3070517026785843f21e7dcf52e2733dc70f52", "patch": "@@ -330,7 +330,8 @@ private void _renderTextCell(\n       writer.writeAttribute(ONCLICK_ATTRIBUTE, onclick, null);\n     }\n \n-    writer.writeText(text, null);\n+    if (text != null)\n+      writer.writeText(text, null);\n \n     if (onclick != null)\n     {", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/ui/laf/base/desktop/TreeRenderer.java"}, {"additions": 2, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/5b3070517026785843f21e7dcf52e2733dc70f52/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/ui/laf/base/pda/HeaderRenderer.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/5b3070517026785843f21e7dcf52e2733dc70f52/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/ui/laf/base/pda/HeaderRenderer.java", "sha": "01b969163bef97a133203272f52cfeb55362832a", "changes": 3, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/ui/laf/base/pda/HeaderRenderer.java?ref=5b3070517026785843f21e7dcf52e2733dc70f52", "patch": "@@ -120,7 +120,8 @@ protected void prerender(\n    \n         renderIcon(context, node);\n \n-        writer.writeText(label, CorePanelHeader.TEXT_KEY.getName());\n+        if (label != null)\n+          writer.writeText(label, CorePanelHeader.TEXT_KEY.getName());\n \n         if (renderStyleElements(context))\n             XhtmlLafUtils.endRenderingStyleElements(context);", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/ui/laf/base/pda/HeaderRenderer.java"}, {"additions": 6, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/5b3070517026785843f21e7dcf52e2733dc70f52/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/ui/laf/base/pda/MessageBoxRenderer.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/5b3070517026785843f21e7dcf52e2733dc70f52/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/ui/laf/base/pda/MessageBoxRenderer.java", "sha": "c0c0085c2188ff51649a3b816a5c026a2e36f547", "changes": 12, "status": "modified", "deletions": 6, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/ui/laf/base/pda/MessageBoxRenderer.java?ref=5b3070517026785843f21e7dcf52e2733dc70f52", "patch": "@@ -139,10 +139,10 @@ private final void _renderLine(\n     text.setAttributeValue(TEXT_ATTR, getTranslatedString(context, messageKey) );\n \n     //PH: Create BODY Styling for the entire MessageBox.\n-\twriter.startElement(\"table\", null);\n-\trenderStyleClassAttribute(context, \"af|messages::body\");\n-\twriter.startElement(\"tr\", null);\n-\twriter.startElement(\"td\", null);\n+    writer.startElement(\"table\", null);\n+    renderStyleClassAttribute(context, \"af|messages::body\");\n+    writer.startElement(\"tr\", null);\n+    writer.startElement(\"td\", null);\n \n \n     writer.startElement(\"b\", node.getUIComponent());\n@@ -252,7 +252,7 @@ private void _writeGlobalMsg(\n     String text = MessageUtils.getGlobalMessage(context, summary, detail);\n     if (isTextFormatted(text))\n       renderFormattedText(context, text);\n-    else\n+    else if (text != null)\n       writer.writeText(text, null);\n   }\n \n@@ -286,7 +286,7 @@ private BaseMutableUINode _writeClientMsg(\n \n     if (isTextFormatted(summary))\n       renderFormattedText(context, description);\n-    else\n+    else if (description != null)\n       writer.writeText(description, null);\n \n     return currentChild;", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/ui/laf/base/pda/MessageBoxRenderer.java"}, {"additions": 1, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/5b3070517026785843f21e7dcf52e2733dc70f52/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/ui/laf/simple/desktop/GlobalHeaderRenderer.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/5b3070517026785843f21e7dcf52e2733dc70f52/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/ui/laf/simple/desktop/GlobalHeaderRenderer.java", "sha": "677296b4536e86f5c56598f781e1c4c6a62002f5", "changes": 2, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/ui/laf/simple/desktop/GlobalHeaderRenderer.java?ref=5b3070517026785843f21e7dcf52e2733dc70f52", "patch": "@@ -434,7 +434,7 @@ private void _renderTitle(\n     Object           text\n     ) throws IOException\n   {\n- context.getResponseWriter().writeText(text, null);\n+    context.getResponseWriter().writeText(text, null);\n   }\n \n   // Gets the style class for the inner content", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/ui/laf/simple/desktop/GlobalHeaderRenderer.java"}, {"additions": 9, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/5b3070517026785843f21e7dcf52e2733dc70f52/trinidad-impl/src/test/java/org/apache/myfaces/trinidadinternal/renderkit/TestResponseWriter.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/5b3070517026785843f21e7dcf52e2733dc70f52/trinidad-impl/src/test/java/org/apache/myfaces/trinidadinternal/renderkit/TestResponseWriter.java", "sha": "c11ccaa4e85114c4819073cc7688b3ee2c59cf91", "changes": 9, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/test/java/org/apache/myfaces/trinidadinternal/renderkit/TestResponseWriter.java?ref=5b3070517026785843f21e7dcf52e2733dc70f52", "patch": "@@ -337,6 +337,8 @@ public void writeComment(Object comment) throws IOException\n   public void writeText(Object text, String componentPropertyName)\n      throws IOException\n   {\n+    _checkText(text);\n+\n     if (text != null)\n     {\n       _closeStartIfNecessary();\n@@ -357,6 +359,7 @@ public void writeText(Object text, String componentPropertyName)\n   public void writeText(char text[], int off, int len)\n         throws IOException\n   {\n+    _checkText(text);\n     // Hardly efficient, but easier to write the one bottleneck.\n     writeText(new String(text, off, len), null);\n   }\n@@ -488,6 +491,12 @@ private void _writeValue(\n     }\n   }\n \n+  private void _checkText(Object text)\n+  {\n+    if (text == null)\n+      throw new NullPointerException();\n+  }\n+\n \n   private void _closeStartIfNecessary() throws IOException\n   {", "filename": "trinidad-impl/src/test/java/org/apache/myfaces/trinidadinternal/renderkit/TestResponseWriter.java"}], "repo": "myfaces-trinidad"}, {"commit": "https://github.com/apache/myfaces-trinidad/commit/398622f48ff21a46c41e229ad528729fd421ab7d", "parent": "https://github.com/apache/myfaces-trinidad/commit/e80ccca2c37e1f2db2a94c32273687c502d04ccc", "message": "ADFFACES-469: ResponseWriter.writeText() can throw NPE if text is null - protect against this\n- Also, delete unused ProductBrandingRenderer code\n- And clean up some panelChoice and panelRadio renderer code\n- And make TestResponseWriter throw an exception if null is passed to writeText()", "bug_id": "myfaces-trinidad_61", "file": [{"additions": 2, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/398622f48ff21a46c41e229ad528729fd421ab7d/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/DialogRequest.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/398622f48ff21a46c41e229ad528729fd421ab7d/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/DialogRequest.java", "sha": "14a40c0ef7427cde54c761c2eab40f48575224cc", "changes": 3, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/DialogRequest.java?ref=398622f48ff21a46c41e229ad528729fd421ab7d", "patch": "@@ -127,7 +127,8 @@ public void renderLaunchJavascript(\n     out.writeText(\"},\\\"\" , null);\n     out.writeText(formName, null);\n     out.writeText(\"\\\",\\\"\", null);\n-    out.writeText(_clientId, null);\n+    if (_clientId != null)\n+      out.writeText(_clientId, null);\n     out.writeText(\"\\\",\", null);\n     boolean isPPR = PartialPageUtils.supportsPartialRendering(arc);\n     out.writeText(isPPR ? \"1\" : \"0\", null);", "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/DialogRequest.java"}, {"additions": 1, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/398622f48ff21a46c41e229ad528729fd421ab7d/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/pda/FrameRenderer.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/398622f48ff21a46c41e229ad528729fd421ab7d/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/pda/FrameRenderer.java", "sha": "a66e5529025d07585821c17a91c1ba37d83f082d", "changes": 2, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/pda/FrameRenderer.java?ref=398622f48ff21a46c41e229ad528729fd421ab7d", "patch": "@@ -98,7 +98,7 @@ protected final void encodeAll(\n       renderEncodedActionURI(context, \"href\", source);\n       if (shortDesc != null)\n         writer.writeText(shortDesc, \"shortDesc\");\n-      else\n+      else if (source != null)\n         writer.writeText(source, null);\n \n       writer.endElement(\"a\");", "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/pda/FrameRenderer.java"}, {"additions": 2, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/398622f48ff21a46c41e229ad528729fd421ab7d/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/AccessKeyUtils.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/398622f48ff21a46c41e229ad528729fd421ab7d/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/AccessKeyUtils.java", "sha": "2b533c0ca44ef306cb4e2e131199cb23d57316b5", "changes": 3, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/AccessKeyUtils.java?ref=398622f48ff21a46c41e229ad528729fd421ab7d", "patch": "@@ -89,7 +89,8 @@ static public void renderAccessKeyText(\n     else\n     {\n       // output the text directly since we have no access key\n-      writer.writeText(textValue, null);\n+      if (textValue != null)\n+        writer.writeText(textValue, null);\n     }\n   }\n ", "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/AccessKeyUtils.java"}, {"additions": 3, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/398622f48ff21a46c41e229ad528729fd421ab7d/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/ColumnGroupRenderer.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/398622f48ff21a46c41e229ad528729fd421ab7d/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/ColumnGroupRenderer.java", "sha": "51b035545f2026f1efcb08b3def86dd9d63bd109", "changes": 4, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/ColumnGroupRenderer.java?ref=398622f48ff21a46c41e229ad528729fd421ab7d", "patch": "@@ -555,7 +555,9 @@ protected void renderHeaderContents(\n     String                sortOnclick) throws IOException\n   {\n     ResponseWriter rw = context.getResponseWriter();\n-    rw.writeText(getHeaderText(getFacesBean(column)), \"headerText\");\n+    String headerText = getHeaderText(getFacesBean(column));\n+    if (headerText != null)\n+      rw.writeText(headerText, \"headerText\");\n \n     UIComponent header = getFacet(column, CoreColumn.HEADER_FACET);\n     if (header != null)", "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/ColumnGroupRenderer.java"}, {"additions": 10, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/398622f48ff21a46c41e229ad528729fd421ab7d/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/HiddenLabelUtils.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/398622f48ff21a46c41e229ad528729fd421ab7d/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/HiddenLabelUtils.java", "sha": "1f9c985f279df68a73e46bb8adee3ca1264c673d", "changes": 17, "status": "modified", "deletions": 7, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/HiddenLabelUtils.java?ref=398622f48ff21a46c41e229ad528729fd421ab7d", "patch": "@@ -123,13 +123,16 @@ static public void outputHiddenLabel(\n     UIComponent         component\n     ) throws IOException\n   {\n-    ResponseWriter writer = context.getResponseWriter();\n-    writer.startElement(\"label\", component);\n-    writer.writeAttribute(\"for\", id, null);\n-    XhtmlRenderer.renderStyleClass(context, arc,\n-                                   SkinSelectors.HIDDEN_LABEL_STYLE_CLASS);\n-    writer.writeText(text, null);\n-    writer.endElement(\"label\");\n+    if (text != null)\n+    {\n+      ResponseWriter writer = context.getResponseWriter();\n+      writer.startElement(\"label\", component);\n+      writer.writeAttribute(\"for\", id, null);\n+      XhtmlRenderer.renderStyleClass(context, arc,\n+                                     SkinSelectors.HIDDEN_LABEL_STYLE_CLASS);\n+      writer.writeText(text, null);\n+      writer.endElement(\"label\");\n+    }\n   }\n \n ", "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/HiddenLabelUtils.java"}, {"additions": 3, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/398622f48ff21a46c41e229ad528729fd421ab7d/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/MediaRenderer.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/398622f48ff21a46c41e229ad528729fd421ab7d/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/MediaRenderer.java", "sha": "a338f9a9d6d2a0a6baeb17bfa3849e19375e81e4", "changes": 4, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/MediaRenderer.java?ref=398622f48ff21a46c41e229ad528729fd421ab7d", "patch": "@@ -517,7 +517,9 @@ private void _renderLink(\n         writer.endElement(\"img\");\n       }\n \n-      writer.writeText(getShortDesc(bean), \"shortDesc\");\n+      String shortDesc = getShortDesc(bean);\n+      if (shortDesc != null)\n+        writer.writeText(shortDesc, \"shortDesc\");\n \n       writer.endElement(\"a\");\n     }", "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/MediaRenderer.java"}, {"additions": 3, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/398622f48ff21a46c41e229ad528729fd421ab7d/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/PanelAccordionRenderer.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/398622f48ff21a46c41e229ad528729fd421ab7d/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/PanelAccordionRenderer.java", "sha": "1943fcb6c3f3219a0be320b0f99d12fc48fe7389", "changes": 5, "status": "modified", "deletions": 2, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/PanelAccordionRenderer.java?ref=398622f48ff21a46c41e229ad528729fd421ab7d", "patch": "@@ -312,8 +312,9 @@ else if (disclosed)\n                                                 getDisclosedTipKey(),\n                                                 getUndisclosedTipKey());\n       }\n-\n-      out.writeText(titleText, null);\n+      \n+      if (titleText != null)\n+        out.writeText(titleText, null);\n       out.endElement(\"a\");\n \n       out.endElement(\"div\"); // Ending div for an individual panel", "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/PanelAccordionRenderer.java"}, {"additions": 2, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/398622f48ff21a46c41e229ad528729fd421ab7d/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/PanelHeaderRenderer.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/398622f48ff21a46c41e229ad528729fd421ab7d/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/PanelHeaderRenderer.java", "sha": "504e8c48cc94edd2bd07fcc6898a83468f4d42a8", "changes": 3, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/PanelHeaderRenderer.java?ref=398622f48ff21a46c41e229ad528729fd421ab7d", "patch": "@@ -113,7 +113,8 @@ protected void encodeAll(\n                        SkinSelectors.AF_PANEL_HEADER_ERROR_STYLE_CLASS);\n     }\n     \n-    writer.writeText(text, \"text\");\n+    if (text != null)\n+      writer.writeText(text, \"text\");\n \n     if (isError)\n     {", "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/PanelHeaderRenderer.java"}, {"additions": 6, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/398622f48ff21a46c41e229ad528729fd421ab7d/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SelectManyShuttleRenderer.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/398622f48ff21a46c41e229ad528729fd421ab7d/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SelectManyShuttleRenderer.java", "sha": "f5246d8370f794e58a477a51644750fa1eb17760", "changes": 8, "status": "modified", "deletions": 2, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SelectManyShuttleRenderer.java?ref=398622f48ff21a46c41e229ad528729fd421ab7d", "patch": "@@ -524,7 +524,9 @@ private void _renderHeaderRow(\n       rw.startElement(\"td\", null);\r\n       renderStyleClass(context, rc, SkinSelectors.SHUTTLE_HEADER_STYLE_CLASS);\r\n       rw.writeAttribute(\"valign\", \"bottom\", null);\r\n-      rw.writeText(getLeadingHeader(bean), \"leadingHeader\");\r\n+      String leadingHeader = getLeadingHeader(bean);\r\n+      if (leadingHeader != null)\r\n+        rw.writeText(leadingHeader, \"leadingHeader\");\r\n       rw.endElement(\"td\");\r\n \r\n       rw.startElement(\"td\", null);\r\n@@ -547,7 +549,9 @@ private void _renderHeaderRow(\n       }\r\n     }\r\n \r\n-    rw.writeText(getTrailingHeader(bean), \"trailingHeader\");\r\n+    String trailingHeader = getTrailingHeader(bean);\r\n+    if (trailingHeader != null)\r\n+      rw.writeText(trailingHeader, \"trailingHeader\");\r\n     rw.endElement(\"td\");\r\n     rw.endElement(\"tr\");\r\n   }\r", "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SelectManyShuttleRenderer.java"}, {"additions": 4, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/398622f48ff21a46c41e229ad528729fd421ab7d/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SimpleInputTextRenderer.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/398622f48ff21a46c41e229ad528729fd421ab7d/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SimpleInputTextRenderer.java", "sha": "5a9ad5e6091a3c67c415c7315f1c89c040395b19", "changes": 6, "status": "modified", "deletions": 2, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SimpleInputTextRenderer.java?ref=398622f48ff21a46c41e229ad528729fd421ab7d", "patch": "@@ -439,15 +439,17 @@ protected void renderContent(\n       } // endif !renderAsElement\n       else\n       {\n-        rw.writeText(textValue, \"value\");\n+        if (textValue != null)\n+          rw.writeText(textValue, \"value\");\n       }\n     }  // endif isTextArea()\n     else\n     {\n       // Don't render anything for disabled password fields\n       if (!getSecret(bean))\n       {\n-        rw.writeText(textValue, \"value\");\n+        if (textValue != null)\n+          rw.writeText(textValue, \"value\");\n       }\n     }\n   }", "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SimpleInputTextRenderer.java"}, {"additions": 2, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/398622f48ff21a46c41e229ad528729fd421ab7d/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/TreeRenderer.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/398622f48ff21a46c41e229ad528729fd421ab7d/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/TreeRenderer.java", "sha": "1a3a6a0a245f026217b3e05a36bfcfa44bf1d810", "changes": 3, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/TreeRenderer.java?ref=398622f48ff21a46c41e229ad528729fd421ab7d", "patch": "@@ -336,7 +336,8 @@ private void _renderTextCell(FacesContext context,\n       writer.writeAttribute(XhtmlConstants.ONCLICK_ATTRIBUTE, onclick, null);\r\n     }\r\n \r\n-    writer.writeText(text, null);\r\n+    if (text != null)\r\n+      writer.writeText(text, null);\r\n \r\n     if (onclick != null)\r\n     {\r", "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/TreeRenderer.java"}, {"additions": 2, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/398622f48ff21a46c41e229ad528729fd421ab7d/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/table/TreeTableNavRenderer.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/398622f48ff21a46c41e229ad528729fd421ab7d/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/table/TreeTableNavRenderer.java", "sha": "5b143bf150b4bcb6aae41703662966d15c4ce62f", "changes": 3, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/table/TreeTableNavRenderer.java?ref=398622f48ff21a46c41e229ad528729fd421ab7d", "patch": "@@ -244,7 +244,8 @@ private void _writeCellContents(\n     }   \n     \n     renderStyleClass(context, arc, styleClass);\n-    writer.writeText(text, null);\n+    if (text != null)\n+      writer.writeText(text, null);\n     writer.endElement(XhtmlConstants.LINK_ELEMENT);\n     \n     writer.endElement(\"div\");", "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/table/TreeTableNavRenderer.java"}, {"additions": 4, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/398622f48ff21a46c41e229ad528729fd421ab7d/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/html/layout/CorePanelChoiceRenderer.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/398622f48ff21a46c41e229ad528729fd421ab7d/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/html/layout/CorePanelChoiceRenderer.java", "sha": "4568a2e92ed943a74470fb9974b04e681821ae8b", "changes": 13, "status": "modified", "deletions": 9, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/html/layout/CorePanelChoiceRenderer.java?ref=398622f48ff21a46c41e229ad528729fd421ab7d", "patch": "@@ -33,7 +33,6 @@\n import org.apache.myfaces.trinidad.render.RenderUtils;\n import org.apache.myfaces.trinidadinternal.renderkit.core.xhtml.XhtmlRenderer;\n \n-import org.apache.myfaces.trinidadinternal.share.url.URLEncoder;\n import org.apache.myfaces.trinidadinternal.ui.UIXRenderingContext;\n import org.apache.myfaces.trinidadinternal.ui.laf.base.xhtml.XhtmlLafRenderer;\n \n@@ -123,7 +122,6 @@ protected void renderListDisplay(FacesContext context,\n \n     String compId = component.getClientId(context);\n \n-    URLEncoder encoder = rCtx.getURLEncoder();\n     ResponseWriter out = context.getResponseWriter();\n \n     // draw table to contain the select UI control\n@@ -140,7 +138,7 @@ protected void renderListDisplay(FacesContext context,\n \n     out.startElement(\"tr\", component);\n \n-    renderSelectLabel(rCtx, component, out, encoder, compId);\n+    renderSelectLabel(rCtx, component, out, compId);\n \n     // Render filler / separator between label and select control\n     renderSpacerTD(out, component, getLabelControlSeparatorSize());\n@@ -194,7 +192,6 @@ private void _renderSelectItemInTD(FacesContext context,\n       out.writeAttribute(\"onchange\", onChangeJS, null);\n     }\n \n-    URLEncoder encoder = rCtx.getURLEncoder();\n     // Render options now.\n     ListIterator<UIComponent> children = component.getChildren().listIterator();\n     while (children.hasNext())\n@@ -222,10 +219,6 @@ private void _renderSelectItemInTD(FacesContext context,\n         }\n \n         String childTitle = (String) detailItem.getAttributes().get(\"text\");\n-        if (childTitle != null)\n-        {\n-          childTitle = encoder.encodeParameter(childTitle);\n-        }\n         String childClientId = child.getClientId(context);\n \n         out.startElement(\"option\", component);\n@@ -235,7 +228,9 @@ private void _renderSelectItemInTD(FacesContext context,\n           out.writeAttribute(\"selected\", Boolean.TRUE, null);\n         }\n \n-        out.writeText(childTitle, null);\n+        if (childTitle != null)\n+          out.writeText(childTitle, null);\n+\n         out.endElement(\"option\");\n       }\n     }", "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/html/layout/CorePanelChoiceRenderer.java"}, {"additions": 2, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/398622f48ff21a46c41e229ad528729fd421ab7d/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/html/layout/CorePanelRadioRenderer.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/398622f48ff21a46c41e229ad528729fd421ab7d/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/html/layout/CorePanelRadioRenderer.java", "sha": "0fa81e71f8815a749b15d25c4f8a7f6ed458e6b7", "changes": 8, "status": "modified", "deletions": 6, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/html/layout/CorePanelRadioRenderer.java?ref=398622f48ff21a46c41e229ad528729fd421ab7d", "patch": "@@ -32,7 +32,6 @@\n import org.apache.myfaces.trinidad.render.RenderUtils;\n \n import org.apache.myfaces.trinidadinternal.renderkit.core.xhtml.SkinSelectors;\n-import org.apache.myfaces.trinidadinternal.share.url.URLEncoder;\n import org.apache.myfaces.trinidadinternal.ui.UIConstants;\n import org.apache.myfaces.trinidadinternal.ui.UIXRenderingContext;\n import org.apache.myfaces.trinidadinternal.ui.laf.base.BaseLafUtils;\n@@ -62,7 +61,6 @@ protected void renderListDisplay(FacesContext context,\n \n     String compId = component.getClientId(context);\n \n-    URLEncoder encoder = rCtx.getURLEncoder();\n     ResponseWriter out = context.getResponseWriter();\n \n     // draw table to contain the select UI control\n@@ -90,7 +88,8 @@ protected void renderListDisplay(FacesContext context,\n       renderStyleClassAttribute(rCtx,\n                                 SkinSelectors.AF_LABEL_TEXT_STYLE_CLASS);\n \n-    out.writeText(encoder.encodeParameter(label), null);\n+    if (label != null)\n+      out.writeText(label, null);\n \n     out.endElement(\"span\");\n     out.endElement(\"td\");\n@@ -140,8 +139,6 @@ private void _renderRadioItemsInTD(FacesContext context,\n     out.writeAttribute(\"cellspacing\", \"0\", null);\n     out.writeAttribute(\"cellpadding\", \"0\", null);\n \n-    URLEncoder encoder = rCtx.getURLEncoder();\n-\n     ListIterator<UIComponent> children = component.getChildren().listIterator();\n     while (children.hasNext())\n     {\n@@ -254,7 +251,6 @@ private void _renderRadioItemsInTD(FacesContext context,\n \n       writeLabel(out,\n                  detailItem,\n-                 encoder,\n                  (String) detailItem.getAttributes().get(\"text\"));\n \n       out.endElement(\"span\");", "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/html/layout/CorePanelRadioRenderer.java"}, {"additions": 5, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/398622f48ff21a46c41e229ad528729fd421ab7d/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/html/layout/ShowOneListRendererBase.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/398622f48ff21a46c41e229ad528729fd421ab7d/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/html/layout/ShowOneListRendererBase.java", "sha": "5299c6bde701405f01ad43206ddcb2d9e57cb687", "changes": 13, "status": "modified", "deletions": 8, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/html/layout/ShowOneListRendererBase.java?ref=398622f48ff21a46c41e229ad528729fd421ab7d", "patch": "@@ -34,7 +34,6 @@\n import org.apache.myfaces.trinidad.context.RenderingContext;\n import org.apache.myfaces.trinidadinternal.renderkit.core.xhtml.SkinSelectors;\n import org.apache.myfaces.trinidadinternal.renderkit.core.xhtml.XhtmlRenderer;\n-import org.apache.myfaces.trinidadinternal.share.url.URLEncoder;\n import org.apache.myfaces.trinidadinternal.ui.UIConstants;\n import org.apache.myfaces.trinidadinternal.ui.UIXRenderingContext;\n import org.apache.myfaces.trinidadinternal.ui.laf.base.xhtml.XhtmlLafRenderer;\n@@ -311,7 +310,6 @@ protected boolean elementSupportsPartial(UIXRenderingContext context,\n   protected void renderSelectLabel(UIXRenderingContext rCtx,\n                                    UIComponent component,\n                                    ResponseWriter out,\n-                                   URLEncoder encoder,\n                                    String compId)\n    throws IOException\n   {\n@@ -337,7 +335,6 @@ protected void renderSelectLabel(UIXRenderingContext rCtx,\n \n     writeLabel(out,\n               component,\n-              encoder,\n               (String) component.getAttributes().get(\"label\"));\n \n     out.endElement(\"label\");\n@@ -353,33 +350,33 @@ protected void renderSelectLabel(UIXRenderingContext rCtx,\n    */\n   protected void writeLabel(ResponseWriter out,\n                             UIComponent component,\n-                            URLEncoder encoder,\n                             String label)\n     throws IOException\n   {\n+    // AdamWiner: TODO: replace this with a call to AccessKeyUtils\n     Character accessChar =\n       (Character) component.getAttributes().get(\"accessKey\");\n \n     if (label != null)\n     {\n       if (accessChar == null)\n       {\n-        out.writeText(encoder.encodeParameter(label), null);\n+        out.writeText(label, null);\n       }\n       else\n       {\n         int accessKeyIndex = label.indexOf(accessChar.charValue());\n         if (accessKeyIndex < 0)\n         {\n-          out.writeText(encoder.encodeParameter(label), null);\n+          out.writeText(label, null);\n         }\n         else\n         {\n           // String stripping to remove &amp; will already be done in Tag impl\n           String strBefAccessKey = label.substring(0, accessKeyIndex);\n           String strAfterAccessKey = label.substring(accessKeyIndex + 1,\n                                                      label.length());\n-          out.writeText(encoder.encodeParameter(strBefAccessKey), null);\n+          out.writeText(strBefAccessKey, null);\n \n           //ADFFACES-153: use default style (underline) for access key\n           out.startElement (\"span\", null);\n@@ -389,7 +386,7 @@ protected void writeLabel(ResponseWriter out,\n           out.writeText (accessChar.toString(), null);\n           out.endElement (\"span\");\n           \n-          out.writeText(encoder.encodeParameter(strAfterAccessKey), null);\n+          out.writeText(strAfterAccessKey, null);\n         }\n       }\n     }", "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/html/layout/ShowOneListRendererBase.java"}, {"additions": 0, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/398622f48ff21a46c41e229ad528729fd421ab7d/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/ui/UIConstants.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/398622f48ff21a46c41e229ad528729fd421ab7d/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/ui/UIConstants.java", "sha": "8db2b2ee038ad1a06d73e57e28a3c251d15d8bc1", "changes": 1, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/ui/UIConstants.java?ref=398622f48ff21a46c41e229ad528729fd421ab7d", "patch": "@@ -446,7 +446,6 @@\n   public static final String PROCESS_TRAIN_NAME = \"processTrain\";\n   public static final String PROCESSING_NAME = \"processing\";\n   public static final String PROCESS_STEPS_NAME = \"processSteps\";\n-  public static final String PRODUCT_BRANDING_NAME = \"productBranding\";\n   public static final String RAW_TEXT_NAME = \"rawText\";\n   public static final String ROW_LAYOUT_NAME = \"rowLayout\";\n   public static final String SCRIPT_NAME = \"script\";", "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/ui/UIConstants.java"}, {"additions": 2, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/398622f48ff21a46c41e229ad528729fd421ab7d/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/ui/laf/base/desktop/ApplicationSwitcherRenderer.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/398622f48ff21a46c41e229ad528729fd421ab7d/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/ui/laf/base/desktop/ApplicationSwitcherRenderer.java", "sha": "e1f950166f1f6fd521cf62cdaa7c6b4ec4d29d07", "changes": 3, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/ui/laf/base/desktop/ApplicationSwitcherRenderer.java?ref=398622f48ff21a46c41e229ad528729fd421ab7d", "patch": "@@ -213,7 +213,8 @@ protected void renderPreChoice(\n     writer.startElement(TABLE_DATA_ELEMENT, null);\n     writer.writeAttribute(ALIGN_ATTRIBUTE, RIGHT_ATTRIBUTE_VALUE, null);\n     renderStyleClassAttribute(context, AF_MENU_CHOICE_LABEL_STYLE_CLASS );\n-    writer.writeText(title, \"title\");\n+    if (title != null)\n+      writer.writeText(title, \"title\");\n     writer.endElement(TABLE_DATA_ELEMENT);\n \n     // add cell with space in it", "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/ui/laf/base/desktop/ApplicationSwitcherRenderer.java"}, {"additions": 0, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/398622f48ff21a46c41e229ad528729fd421ab7d/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/ui/laf/base/desktop/BaseDesktopLookAndFeel.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/398622f48ff21a46c41e229ad528729fd421ab7d/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/ui/laf/base/desktop/BaseDesktopLookAndFeel.java", "sha": "9bb43a475e180d8ce1b6f35fc8314554b97d98da", "changes": 1, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/ui/laf/base/desktop/BaseDesktopLookAndFeel.java?ref=398622f48ff21a46c41e229ad528729fd421ab7d", "patch": "@@ -264,7 +264,6 @@ private RendererFactoryImpl _createEmailFactory()\n     PROCESS_CHOICE_BAR_NAME,\n     PROCESS_TRAIN_NAME,\n     PROCESSING_NAME,\n-    PRODUCT_BRANDING_NAME,\n     SEPARATOR_NAME,\n     SHOW_ONE_TAB_NAME,\n     SIDE_BAR_NAME,", "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/ui/laf/base/desktop/BaseDesktopLookAndFeel.java"}, {"additions": 2, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/398622f48ff21a46c41e229ad528729fd421ab7d/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/ui/laf/base/desktop/GlobalButtonRenderer.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/398622f48ff21a46c41e229ad528729fd421ab7d/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/ui/laf/base/desktop/GlobalButtonRenderer.java", "sha": "2ff58aba50478ced93d15e9d15a1dca477bdf1ea", "changes": 3, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/ui/laf/base/desktop/GlobalButtonRenderer.java?ref=398622f48ff21a46c41e229ad528729fd421ab7d", "patch": "@@ -95,7 +95,8 @@ protected void prerender(UIXRenderingContext context, UINode node)\n       writer.endElement(IMAGE_ELEMENT);\n     }\n \n-    writer.writeText(text, TEXT_ATTR.getAttributeName());\n+    if (text != null)\n+      writer.writeText(text, TEXT_ATTR.getAttributeName());\n \n     writer.endElement(LINK_ELEMENT);\n   }", "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/ui/laf/base/desktop/GlobalButtonRenderer.java"}, {"additions": 2, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/398622f48ff21a46c41e229ad528729fd421ab7d/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/ui/laf/base/desktop/HeaderRenderer.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/398622f48ff21a46c41e229ad528729fd421ab7d/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/ui/laf/base/desktop/HeaderRenderer.java", "sha": "76fff3185df9071980dfb4247b81fbfd10adbab8", "changes": 3, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/ui/laf/base/desktop/HeaderRenderer.java?ref=398622f48ff21a46c41e229ad528729fd421ab7d", "patch": "@@ -180,7 +180,8 @@ private void _prerender(\n       renderStyleClassAttribute(context, AF_PANEL_HEADER_ERROR_STYLE_CLASS);\n     }\n     \n-    writer.writeText(label, TEXT_ATTR.getAttributeName());\n+    if (label != null)\n+      writer.writeText(label, TEXT_ATTR.getAttributeName());\n \n     if (isError)\n     {", "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/ui/laf/base/desktop/HeaderRenderer.java"}, {"additions": 4, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/398622f48ff21a46c41e229ad528729fd421ab7d/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/ui/laf/base/desktop/MessageBoxRenderer.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/398622f48ff21a46c41e229ad528729fd421ab7d/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/ui/laf/base/desktop/MessageBoxRenderer.java", "sha": "b4aec4358e0bd20bf924b86f295673b2eb1d9489", "changes": 7, "status": "modified", "deletions": 3, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/ui/laf/base/desktop/MessageBoxRenderer.java?ref=398622f48ff21a46c41e229ad528729fd421ab7d", "patch": "@@ -147,7 +147,8 @@ protected void renderContent(\n \n     writer.startElement(DIV_ELEMENT, null);\n     renderStyleClassAttribute(context, AF_MESSAGES_MESSAGE_TEXT_STYLE_CLASS);\n-    writer.writeText(message, CoreMessages.MESSAGE_KEY.getName());\n+    if (message != null)\n+      writer.writeText(message, CoreMessages.MESSAGE_KEY.getName());\n     writer.endElement(DIV_ELEMENT);\n \n     if (useList)\n@@ -227,7 +228,7 @@ private void _writeGlobalMsg(\n     String text = MessageUtils.getGlobalMessage(context, summary, detail);\n     if (isTextFormatted(text))\n       renderFormattedText(context, text);\n-    else\n+    else if (text != null)\n       writer.writeText(text, null);\n   }\n \n@@ -262,7 +263,7 @@ private BaseMutableUINode _writeClientMsg(\n \n     if (isTextFormatted(summary))\n       renderFormattedText(context, description);\n-    else\n+    else if (description != null)\n       writer.writeText(description, null);\n \n     return currentChild;", "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/ui/laf/base/desktop/MessageBoxRenderer.java"}, {"additions": 0, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/398622f48ff21a46c41e229ad528729fd421ab7d/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/ui/laf/base/desktop/PageHeaderLayoutRenderer.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/398622f48ff21a46c41e229ad528729fd421ab7d/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/ui/laf/base/desktop/PageHeaderLayoutRenderer.java", "sha": "b025ca9550f428869c9c6a3832c51879223fa893", "changes": 19, "status": "modified", "deletions": 19, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/ui/laf/base/desktop/PageHeaderLayoutRenderer.java?ref=398622f48ff21a46c41e229ad528729fd421ab7d", "patch": "@@ -155,20 +155,6 @@ protected void renderContent(\n       ((inContextBranding != null) || isCompact);\n \n \n-    if ((productBranding != null))\n-    {\n-      if (inContextOrCompact)\n-      {\n-        // The ProductBrandingBean changes look depending upon if the\n-        // inContextBranding named child exists. So, set the property\n-        // on the rendering context to communicate this with the\n-        // ProductBrandingRenderer\n-        setRenderingProperty(context,\n-                             COMPACT_PRODUCT_BRANDING_PROPERTY,\n-                             Boolean.TRUE);\n-      }\n-    }\n-\n     //\n     // Create the middle table, if necessary.\n     // brandingCount counts corporateBranding,\n@@ -706,11 +692,6 @@ private int _calculateColSpan(\n     return colSpan;\n   }\n \n-  // context property to indicate that the compact Product Branding needs to be\n-  // rendered -- either because inContextBranding exists or pageLayout's\n-  // chromeType is compact.\n-  public static final Object COMPACT_PRODUCT_BRANDING_PROPERTY = new Object();\n-\n   private static final int _TAB_SPACER_SIZE = 10;\n \n }", "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/ui/laf/base/desktop/PageHeaderLayoutRenderer.java"}, {"additions": 0, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/e80ccca2c37e1f2db2a94c32273687c502d04ccc/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/ui/laf/base/desktop/ProductBrandingRenderer.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/e80ccca2c37e1f2db2a94c32273687c502d04ccc/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/ui/laf/base/desktop/ProductBrandingRenderer.java", "sha": "fca74d24b3793355562cef5a7c7c6a67563e5cb8", "changes": 78, "status": "removed", "deletions": 78, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/ui/laf/base/desktop/ProductBrandingRenderer.java?ref=e80ccca2c37e1f2db2a94c32273687c502d04ccc", "patch": "@@ -1,78 +0,0 @@\n-/*\n- *  Licensed to the Apache Software Foundation (ASF) under one\n- *  or more contributor license agreements.  See the NOTICE file\n- *  distributed with this work for additional information\n- *  regarding copyright ownership.  The ASF licenses this file\n- *  to you under the Apache License, Version 2.0 (the\n- *  \"License\"); you may not use this file except in compliance\n- *  with the License.  You may obtain a copy of the License at\n- * \n- *  http://www.apache.org/licenses/LICENSE-2.0\n- * \n- *  Unless required by applicable law or agreed to in writing,\n- *  software distributed under the License is distributed on an\n- *  \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- *  KIND, either express or implied.  See the License for the\n- *  specific language governing permissions and limitations\n- *  under the License.\n- */\n-package org.apache.myfaces.trinidadinternal.ui.laf.base.desktop;\n-\n-import java.io.IOException;\n-\n-import javax.faces.context.ResponseWriter;\n-\n-import org.apache.myfaces.trinidadinternal.ui.UIXRenderingContext;\n-import org.apache.myfaces.trinidadinternal.ui.UINode;\n-\n-\n-/**\n- * Renderer for product branding\n- * \n- * @version $Name:  $ ($Revision: adfrt/faces/adf-faces-impl/src/main/java/oracle/adfinternal/view/faces/ui/laf/base/desktop/ProductBrandingRenderer.java#0 $) $Date: 10-nov-2005.18:56:12 $\n- * @deprecated This class comes from the old Java 1.2 UIX codebase and should not be used anymore.\n- */\n-@Deprecated\n-public class ProductBrandingRenderer extends HtmlLafRenderer\n-{\n-  @Override\n-  protected void renderContent(\n-    UIXRenderingContext context,\n-    UINode           node) throws IOException\n-  {\n-    ResponseWriter writer = context.getResponseWriter();\n-\n-    writer.startElement(\"span\", null);\n-\n-    renderStyleClassAttribute(context, getTextStyle(context, node));\n-\n-\t// @todo =-=bwa. Need to change the \"null\" to writeText() to be\n-\t// the PropertyKey corresponding to the \"text\" attribute on\n-\t// the product branding component. However, the component does not\n-\t// exist yet, since the component is still in experimental.\n-    writer.writeText(getText(context, node), TEXT_ATTR.getAttributeName());\n-    writer.endElement(\"span\");\n-\n-  }\n-\n-  @Override\n-  protected String getElementName(\n-    UIXRenderingContext context,\n-    UINode           node\n-    )\n-  {\n-    return \"span\";\n-  }\n-  \n-\n-  protected String getTextStyle(\n-    UIXRenderingContext context,\n-    UINode           node\n-    )\n-  {\n-    return \"p_OraProductBrandingCompactText\";\n-  }  \n-\n-  \n-}\n-", "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/ui/laf/base/desktop/ProductBrandingRenderer.java"}, {"additions": 2, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/398622f48ff21a46c41e229ad528729fd421ab7d/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/ui/laf/base/desktop/TreeRenderer.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/398622f48ff21a46c41e229ad528729fd421ab7d/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/ui/laf/base/desktop/TreeRenderer.java", "sha": "7e73030fb30adbacd5eed2362a9b59b2a48e4d6a", "changes": 3, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/ui/laf/base/desktop/TreeRenderer.java?ref=398622f48ff21a46c41e229ad528729fd421ab7d", "patch": "@@ -330,7 +330,8 @@ private void _renderTextCell(\n       writer.writeAttribute(ONCLICK_ATTRIBUTE, onclick, null);\n     }\n \n-    writer.writeText(text, null);\n+    if (text != null)\n+      writer.writeText(text, null);\n \n     if (onclick != null)\n     {", "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/ui/laf/base/desktop/TreeRenderer.java"}, {"additions": 2, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/398622f48ff21a46c41e229ad528729fd421ab7d/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/ui/laf/base/pda/HeaderRenderer.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/398622f48ff21a46c41e229ad528729fd421ab7d/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/ui/laf/base/pda/HeaderRenderer.java", "sha": "01b969163bef97a133203272f52cfeb55362832a", "changes": 3, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/ui/laf/base/pda/HeaderRenderer.java?ref=398622f48ff21a46c41e229ad528729fd421ab7d", "patch": "@@ -120,7 +120,8 @@ protected void prerender(\n    \n         renderIcon(context, node);\n \n-        writer.writeText(label, CorePanelHeader.TEXT_KEY.getName());\n+        if (label != null)\n+          writer.writeText(label, CorePanelHeader.TEXT_KEY.getName());\n \n         if (renderStyleElements(context))\n             XhtmlLafUtils.endRenderingStyleElements(context);", "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/ui/laf/base/pda/HeaderRenderer.java"}, {"additions": 6, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/398622f48ff21a46c41e229ad528729fd421ab7d/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/ui/laf/base/pda/MessageBoxRenderer.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/398622f48ff21a46c41e229ad528729fd421ab7d/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/ui/laf/base/pda/MessageBoxRenderer.java", "sha": "c0c0085c2188ff51649a3b816a5c026a2e36f547", "changes": 12, "status": "modified", "deletions": 6, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/ui/laf/base/pda/MessageBoxRenderer.java?ref=398622f48ff21a46c41e229ad528729fd421ab7d", "patch": "@@ -139,10 +139,10 @@ private final void _renderLine(\n     text.setAttributeValue(TEXT_ATTR, getTranslatedString(context, messageKey) );\n \n     //PH: Create BODY Styling for the entire MessageBox.\n-\twriter.startElement(\"table\", null);\n-\trenderStyleClassAttribute(context, \"af|messages::body\");\n-\twriter.startElement(\"tr\", null);\n-\twriter.startElement(\"td\", null);\n+    writer.startElement(\"table\", null);\n+    renderStyleClassAttribute(context, \"af|messages::body\");\n+    writer.startElement(\"tr\", null);\n+    writer.startElement(\"td\", null);\n \n \n     writer.startElement(\"b\", node.getUIComponent());\n@@ -252,7 +252,7 @@ private void _writeGlobalMsg(\n     String text = MessageUtils.getGlobalMessage(context, summary, detail);\n     if (isTextFormatted(text))\n       renderFormattedText(context, text);\n-    else\n+    else if (text != null)\n       writer.writeText(text, null);\n   }\n \n@@ -286,7 +286,7 @@ private BaseMutableUINode _writeClientMsg(\n \n     if (isTextFormatted(summary))\n       renderFormattedText(context, description);\n-    else\n+    else if (description != null)\n       writer.writeText(description, null);\n \n     return currentChild;", "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/ui/laf/base/pda/MessageBoxRenderer.java"}, {"additions": 1, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/398622f48ff21a46c41e229ad528729fd421ab7d/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/ui/laf/simple/desktop/GlobalHeaderRenderer.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/398622f48ff21a46c41e229ad528729fd421ab7d/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/ui/laf/simple/desktop/GlobalHeaderRenderer.java", "sha": "677296b4536e86f5c56598f781e1c4c6a62002f5", "changes": 2, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/ui/laf/simple/desktop/GlobalHeaderRenderer.java?ref=398622f48ff21a46c41e229ad528729fd421ab7d", "patch": "@@ -434,7 +434,7 @@ private void _renderTitle(\n     Object           text\n     ) throws IOException\n   {\n- context.getResponseWriter().writeText(text, null);\n+    context.getResponseWriter().writeText(text, null);\n   }\n \n   // Gets the style class for the inner content", "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/ui/laf/simple/desktop/GlobalHeaderRenderer.java"}, {"additions": 9, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/398622f48ff21a46c41e229ad528729fd421ab7d/trinidad/trinidad-impl/src/test/java/org/apache/myfaces/trinidadinternal/renderkit/TestResponseWriter.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/398622f48ff21a46c41e229ad528729fd421ab7d/trinidad/trinidad-impl/src/test/java/org/apache/myfaces/trinidadinternal/renderkit/TestResponseWriter.java", "sha": "c11ccaa4e85114c4819073cc7688b3ee2c59cf91", "changes": 9, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/test/java/org/apache/myfaces/trinidadinternal/renderkit/TestResponseWriter.java?ref=398622f48ff21a46c41e229ad528729fd421ab7d", "patch": "@@ -337,6 +337,8 @@ public void writeComment(Object comment) throws IOException\n   public void writeText(Object text, String componentPropertyName)\n      throws IOException\n   {\n+    _checkText(text);\n+\n     if (text != null)\n     {\n       _closeStartIfNecessary();\n@@ -357,6 +359,7 @@ public void writeText(Object text, String componentPropertyName)\n   public void writeText(char text[], int off, int len)\n         throws IOException\n   {\n+    _checkText(text);\n     // Hardly efficient, but easier to write the one bottleneck.\n     writeText(new String(text, off, len), null);\n   }\n@@ -488,6 +491,12 @@ private void _writeValue(\n     }\n   }\n \n+  private void _checkText(Object text)\n+  {\n+    if (text == null)\n+      throw new NullPointerException();\n+  }\n+\n \n   private void _closeStartIfNecessary() throws IOException\n   {", "filename": "trinidad/trinidad-impl/src/test/java/org/apache/myfaces/trinidadinternal/renderkit/TestResponseWriter.java"}], "repo": "myfaces-trinidad"}, {"commit": "https://github.com/apache/myfaces-trinidad/commit/acd93fb5c5cb6f917c07b625f5b2208938a1750f", "parent": "https://github.com/apache/myfaces-trinidad/commit/d4af08aa8bb8d88ae81a9062db15fbb4d731f46c", "message": "Commit nearly all of Simon Lessard's patch for ADFFACES-72 (for impl and API);  had to revert SubKeyMap changes as it broke the SubKeyMapTest, and fix the CapabilitiesDocumentParser change as it caused an NPE when running the CoreRenderKitTest", "bug_id": "myfaces-trinidad_62", "file": [{"additions": 1, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-api/src/main/java/org/apache/myfaces/trinidad/bean/FacesBean.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-api/src/main/java/org/apache/myfaces/trinidad/bean/FacesBean.java", "sha": "d59da3bdcd169ade2403774ca53ae3ce053813ab", "changes": 2, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-api/src/main/java/org/apache/myfaces/trinidad/bean/FacesBean.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f", "patch": "@@ -150,7 +150,7 @@\n    * @todo is this iterator read-only or read-write?\n    * @exception IllegalArgumentException if the key is not a list key.\n    */\n-  public Iterator<Object> entries(PropertyKey listKey);\n+  public Iterator<? extends Object> entries(PropertyKey listKey);\n \n   /**\n    * Copies all properties, bindings, and list entries from", "filename": "trinidad-api/src/main/java/org/apache/myfaces/trinidad/bean/FacesBean.java"}, {"additions": 1, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-api/src/main/java/org/apache/myfaces/trinidad/bean/FacesBeanImpl.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-api/src/main/java/org/apache/myfaces/trinidad/bean/FacesBeanImpl.java", "sha": "a3538ab32be1724c14a0ca81a9a49f9691cd10b1", "changes": 2, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-api/src/main/java/org/apache/myfaces/trinidad/bean/FacesBeanImpl.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f", "patch": "@@ -253,7 +253,7 @@ public void addAll(FacesBean from)\n         }\n         else\n         {\n-          Iterator<Object> entries = from.entries(fromKey);\n+          Iterator<? extends Object> entries = from.entries(fromKey);\n           while (entries.hasNext())\n             addEntry(toKey, entries.next());\n         }", "filename": "trinidad-api/src/main/java/org/apache/myfaces/trinidad/bean/FacesBeanImpl.java"}, {"additions": 15, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-api/src/main/java/org/apache/myfaces/trinidad/component/UIXComponentBase.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-api/src/main/java/org/apache/myfaces/trinidad/component/UIXComponentBase.java", "sha": "d7daea717c1bb3f10ece50ff18e2af4b0515e2ff", "changes": 26, "status": "modified", "deletions": 11, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-api/src/main/java/org/apache/myfaces/trinidad/component/UIXComponentBase.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f", "patch": "@@ -560,6 +560,7 @@ public Iterator getFacetsAndChildren()\n \n   // ------------------------------------------- Event processing methods\n \n+  @SuppressWarnings(\"unchecked\")\n   @Override\n   public void broadcast(FacesEvent event)\n     throws AbortProcessingException\n@@ -578,10 +579,12 @@ public void broadcast(FacesEvent event)\n         adfContext.partialUpdateNotify(component);\n     }\n \n-    Iterator<Object> iter = getFacesBean().entries(_LISTENERS_KEY);\n+    Iterator<FacesListener> iter = \n+      (Iterator<FacesListener>)getFacesBean().entries(_LISTENERS_KEY);\n+    \n     while (iter.hasNext())\n     {\n-      FacesListener listener = (FacesListener) iter.next();\n+      FacesListener listener = iter.next();\n       if (event.isAppropriateListener(listener))\n       {\n         event.processListener(listener);\n@@ -606,8 +609,8 @@ public void decode(FacesContext context)\n       throw new NullPointerException();\n \n     // Find all the partialTriggers and save on the context\n-    // FIXME: -= Simon Lessard =-\n-    //        JSF 1.2 specify <String, Object>\n+    // -= Simon Lessard =-\n+    // FIXME: JSF 1.2 specify <String, Object>\n     Map<Object, Object> attrs = getAttributes();\n     Object triggers = attrs.get(\"partialTriggers\");\n     if (triggers instanceof String[])\n@@ -809,8 +812,8 @@ public void processRestoreState(FacesContext context, Object state)\n   @Override\n   public void markInitialState()\n   {\n-    // FIXME: -= Simon Lessard =-\n-    //        Set to true, but never read\n+    // -= Simon Lessard =-\n+    // FIXME: Set to true, but never read\n     //_initialStateMarked = true;\n     getFacesBean().markInitialState();\n   }\n@@ -1272,15 +1275,16 @@ private void _init(\n     if (oldBean != null)\n       _facesBean.addAll(oldBean);\n \n-    // FIXME: -= Simon Lessard =- \n-    //        JSF 1.2 specify <String, Object>, but ValueMap\n+    // -= Simon Lessard =-\n+    // FIXME: JSF 1.2 specify <String, Object>, but ValueMap\n     //        accept PropertyKey as key as well\n     _attributes = new ValueMap(_facesBean);\n   }\n \n   private FacesBean                _facesBean;\n   private List<UIComponent>        _children;\n-  // FIXME: -= Simon Lessard =- JSF 1.2 specify <String, Object>\n+  // -= Simon Lessard =-\n+  // FIXME: JSF 1.2 specify <String, Object>\n   private Map<Object, Object>      _attributes;\n   private Map<String, UIComponent> _facets;\n   private UIComponent              _parent;\n@@ -1291,8 +1295,8 @@ private void _init(\n   private transient LifecycleRenderer _cachedLifecycleRenderer =\n                                                 _UNDEFINED_LIFECYCLE_RENDERER;\n   \n-  // FIXME: -= Simon Lessard =- \n-  //        _initialStateMarked is never read \n+  // -= Simon Lessard =-\n+  // FIXME: _initialStateMarked is never read \n   //        So commented out, is that ok? If so, this attribute should be deleted\n   //private transient boolean _initialStateMarked;\n ", "filename": "trinidad-api/src/main/java/org/apache/myfaces/trinidad/component/UIXComponentBase.java"}, {"additions": 1, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-api/src/main/java/org/apache/myfaces/trinidad/context/Agent.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-api/src/main/java/org/apache/myfaces/trinidad/context/Agent.java", "sha": "28a366e61542e8a4dd08f8397a46b01cd86082af", "changes": 2, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-api/src/main/java/org/apache/myfaces/trinidad/context/Agent.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f", "patch": "@@ -163,5 +163,5 @@\n    * <br><i>accessKeys</i>- returns a Boolean value signifying whether or not the Agent\n    * supports accessKeys.\n    */\n-  public Map<String, Object> getCapabilities();\n+  public Map<Object, Object> getCapabilities();\n }", "filename": "trinidad-api/src/main/java/org/apache/myfaces/trinidad/context/Agent.java"}, {"additions": 2, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-api/src/main/java/org/apache/myfaces/trinidad/context/DialogService.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-api/src/main/java/org/apache/myfaces/trinidad/context/DialogService.java", "sha": "81ac1a8cf160373341718ae0805fd32d0d72fa29", "changes": 4, "status": "modified", "deletions": 2, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-api/src/main/java/org/apache/myfaces/trinidad/context/DialogService.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f", "patch": "@@ -119,10 +119,10 @@ public void setCurrentLaunchSource(UIComponent component)\n    */\n   public abstract void launchDialog(\n     UIViewRoot  dialogRoot,\n-    Map<Object, Object> dialogParameters,\n+    Map<String, Object> dialogParameters,\n     UIComponent source,\n     boolean     useWindow,\n-    Map<Object, Object> windowProperties);\n+    Map<String, Object> windowProperties);\n \n \n   /**", "filename": "trinidad-api/src/main/java/org/apache/myfaces/trinidad/context/DialogService.java"}, {"additions": 6, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-api/src/main/java/org/apache/myfaces/trinidad/context/RequestContext.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-api/src/main/java/org/apache/myfaces/trinidad/context/RequestContext.java", "sha": "988f67e5dc3012f7c0846d8415dd64b165b358ad", "changes": 13, "status": "modified", "deletions": 7, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-api/src/main/java/org/apache/myfaces/trinidad/context/RequestContext.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f", "patch": "@@ -16,7 +16,6 @@\n package org.apache.myfaces.trinidad.context;\n \n import java.awt.Color;\n-import java.net.URL;\n import java.util.List;\n import java.util.Map;\n import java.util.TimeZone;\n@@ -100,7 +99,7 @@ protected RequestContext()\n   /**\n    * @deprecated use getPageFlowScope()\n    */\n-  @SuppressWarnings(\"dep-ann\")\n+  @Deprecated\n   final public Map<String, Object> getProcessScope()\n   {\n     return getPageFlowScope();\n@@ -159,10 +158,10 @@ public abstract void returnFromDialog(\n    */\n   public abstract void launchDialog(\n     UIViewRoot  dialogRoot,\n-    Map<Object, Object> dialogParameters,\n+    Map<String, Object> dialogParameters,\n     UIComponent source,\n     boolean     useWindow,\n-    Map<Object, Object> windowProperties);\n+    Map<String, Object> windowProperties);\n \n   //\n   // General ADF Faces\n@@ -286,13 +285,13 @@ public abstract void launchDialog(\n    * Returns a Map that will accept topic names as keys, and return\n    * an URL as a result.\n    */\n-  public abstract Map<String, URL> getHelpTopic();\n+  public abstract Map<String, Object> getHelpTopic();\n \n   /**\n    * Returns a Map that will accept help system properties as keys, and return\n    * an URL as a result.\n    */\n-  public abstract Map<String, URL> getHelpSystem();\n+  public abstract Map<String, Object> getHelpSystem();\n \n   //\n   // Date formatting\n@@ -368,7 +367,7 @@ public abstract void addPartialTriggerListeners(UIComponent listener,\n    * second the first parameter into the message. (The formatter Map supports\n    * only a single parameter at this time.)\n    */\n-  public abstract Map<Object, String> getFormatter();\n+  public abstract Map<Object, Map<Object,String>> getFormatter();\n \n   /**\n    * Returns the Agent information for the current context", "filename": "trinidad-api/src/main/java/org/apache/myfaces/trinidad/context/RequestContext.java"}, {"additions": 6, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-api/src/main/java/org/apache/myfaces/trinidad/event/LaunchEvent.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-api/src/main/java/org/apache/myfaces/trinidad/event/LaunchEvent.java", "sha": "655deeb7fc8aa7d458d6538e34f77a2e6d3b7804", "changes": 12, "status": "modified", "deletions": 6, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-api/src/main/java/org/apache/myfaces/trinidad/event/LaunchEvent.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f", "patch": "@@ -52,8 +52,8 @@ public LaunchEvent(UIComponent source,\n   {\n     super(source);\n     _viewRoot = viewRoot;\n-    _dialogParameters = new HashMap<Object, Object>();\n-    _windowProperties  = new HashMap<Object, Object>();\n+    _dialogParameters = new HashMap<String, Object>();\n+    _windowProperties  = new HashMap<String, Object>();\n \n     // LaunchEvents should always be queued for the current phase\n     setPhaseId(PhaseId.ANY_PHASE);\n@@ -84,7 +84,7 @@ public UIViewRoot getViewRoot()\n    * A map of parameters to pass to the dialog.  All entries\n    * in the map will be added to the pageFlowScope.\n    */\n-  public Map<Object, Object> getDialogParameters()\n+  public Map<String, Object> getDialogParameters()\n   {\n     return _dialogParameters;\n   }\n@@ -96,7 +96,7 @@ public UIViewRoot getViewRoot()\n    * The map will be ignored if a dialog is not used.\n    * =-=AEW getWindowProperties or getDialogProperties or ??\n    */\n-  public Map<Object, Object> getWindowProperties()\n+  public Map<String, Object> getWindowProperties()\n   {\n     return _windowProperties;\n   }\n@@ -176,6 +176,6 @@ public String toString()\n   }\n \n   private UIViewRoot          _viewRoot;\n-  private Map<Object, Object> _dialogParameters;\n-  private Map<Object, Object> _windowProperties;\n+  private Map<String, Object> _dialogParameters;\n+  private Map<String, Object> _windowProperties;\n }", "filename": "trinidad-api/src/main/java/org/apache/myfaces/trinidad/event/LaunchEvent.java"}, {"additions": 5, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-api/src/main/java/org/apache/myfaces/trinidad/model/ProcessUtils.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-api/src/main/java/org/apache/myfaces/trinidad/model/ProcessUtils.java", "sha": "c50bfd8f45b501a88b74adfb0ced04daee9c3f0f", "changes": 8, "status": "modified", "deletions": 3, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-api/src/main/java/org/apache/myfaces/trinidad/model/ProcessUtils.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f", "patch": "@@ -339,11 +339,13 @@ public static Object getMaxVisitedRowKey(\n \n       //TODO - if I change this to use pageFlowScope it doesn't work.\n       // figure out why.\n-      Map sessionMap  = externalContext.getSessionMap();\n+      // FIXME: -= Simon Lessard\n+      //        session map is <String, Object> as of JSF 1.2\n+      Map<Object,Object> sessionMap  = externalContext.getSessionMap();\n \n-      Map maxPathMap = (Map)sessionMap.get(maxPathKey);\n+      Map<Object,Object> maxPathMap = (Map<Object,Object>)sessionMap.get(maxPathKey);\n       if (maxPathMap == null)\n-        maxPathMap = new HashMap();\n+        maxPathMap = new HashMap<Object,Object>();\n \n       Object focusRowKey = model.getFocusRowKey();\n       Object parentRowKey = model.getContainerRowKey(focusRowKey);", "filename": "trinidad-api/src/main/java/org/apache/myfaces/trinidad/model/ProcessUtils.java"}, {"additions": 4, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-api/src/main/java/org/apache/myfaces/trinidad/model/RowKeySet.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-api/src/main/java/org/apache/myfaces/trinidad/model/RowKeySet.java", "sha": "30f22fb3d293bb0164a26dfa9a9ba1f5733a66ae", "changes": 4, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-api/src/main/java/org/apache/myfaces/trinidad/model/RowKeySet.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f", "patch": "@@ -33,6 +33,10 @@\n  * compute. Use the {@link #getSize()} method on this class for an inexpensive size.\n  * @author The Oracle ADF Faces Team\n  */\n+// -= Simon Lessard =-\n+// TODO: Since RowKeySet is used by so many components internally,\n+//       I believe we shouldn't parametrize it. I would rather see \n+//       public abstract class RowKeySet extends AbstractSet<Object> implements Cloneable\n public abstract class RowKeySet<E> extends AbstractSet<E> implements Cloneable\n {\n   public RowKeySet()", "filename": "trinidad-api/src/main/java/org/apache/myfaces/trinidad/model/RowKeySet.java"}, {"additions": 6, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-api/src/main/java/org/apache/myfaces/trinidad/render/DialogRenderKitService.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-api/src/main/java/org/apache/myfaces/trinidad/render/DialogRenderKitService.java", "sha": "8a906c06a934b6c0f25ac1913f4aee44ed7a4742", "changes": 12, "status": "modified", "deletions": 6, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-api/src/main/java/org/apache/myfaces/trinidad/render/DialogRenderKitService.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f", "patch": "@@ -67,12 +67,12 @@\n    *   default dialog functionality.\n    */\n   public boolean launchDialog(\n-    FacesContext context,\n-    UIViewRoot   targetRoot,\n-    UIComponent  source,\n-    Map<?, ?>    processParameters,\n-    boolean      useWindow,\n-    Map<?, ?>    windowProperties);\n+    FacesContext       context,\n+    UIViewRoot         targetRoot,\n+    UIComponent        source,\n+    Map<String,Object> processParameters,\n+    boolean            useWindow,\n+    Map<String,Object> windowProperties);\n \n   /**\n    * Called to return from a dialog.", "filename": "trinidad-api/src/main/java/org/apache/myfaces/trinidad/render/DialogRenderKitService.java"}, {"additions": 4, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-api/src/main/java/org/apache/myfaces/trinidad/util/ArrayMap.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-api/src/main/java/org/apache/myfaces/trinidad/util/ArrayMap.java", "sha": "626e3d7336eacaa500b5864be31ad5c19e9b1973", "changes": 4, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-api/src/main/java/org/apache/myfaces/trinidad/util/ArrayMap.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f", "patch": "@@ -52,6 +52,10 @@\n  * @version $Name:  $ ($Revision: adfrt/faces/adf-faces-api/src/main/java/oracle/adf/view/faces/util/ArrayMap.java#0 $) $Date: 10-nov-2005.19:08:36 $\n  * @author The Oracle ADF Faces Team\n  */\n+// -= Simon Lessard =-\n+// FIXME: Using a single array for both the key and the value leads to many \n+//        problems, especially with type safety. Using parallel arrays or \n+//        a sigle array containing nodes would be a much cleaner/safer idea.\n public class ArrayMap<K,V> extends AbstractMap<K,V> implements Cloneable\n {\n   /**", "filename": "trinidad-api/src/main/java/org/apache/myfaces/trinidad/util/ArrayMap.java"}, {"additions": 10, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/agent/AgentFactoryImpl.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/agent/AgentFactoryImpl.java", "sha": "25eb69c1312ab158ce56efeb8534767c1e0fb59f", "changes": 16, "status": "modified", "deletions": 6, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/agent/AgentFactoryImpl.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f", "patch": "@@ -42,11 +42,12 @@ public Agent createAgent(String userAgent, String accept)\n     return agent;\n   }\n \n+  @SuppressWarnings(\"unchecked\")\n   public Agent createAgent(FacesContext facesContext)\n   {\n     AgentImpl agent = new AgentImpl();\n \n-    Map headerMap;\n+    Map<String, String> headerMap;\n     if (facesContext != null)\n     {\n       headerMap = facesContext.getExternalContext().getRequestHeaderMap();\n@@ -63,22 +64,25 @@ public Agent createAgent(FacesContext facesContext)\n   }\n \n \n-  private void _populateAgentImpl(Map headerMap, AgentImpl agent)\n+  private void _populateAgentImpl(Map<String, String> headerMap, AgentImpl agent)\n   {\n-    String userAgent = (String) headerMap.get(\"User-Agent\");\n+    String userAgent = headerMap.get(\"User-Agent\");\n \n     if ((userAgent != null) && userAgent.startsWith(\"PTG\"))\n     {\n       _populateIaswAgentImpl(userAgent,\n-                             (String) headerMap.get(_IASW_DEVICE_HINT_PARAM),agent);\n+                             headerMap.get(_IASW_DEVICE_HINT_PARAM),agent);\n       return;\n     }\n \n     // determine the agent from the headers\n-    _populateAgentImpl(userAgent, (String) headerMap.get(\"Accept\"),agent);\n+    _populateAgentImpl(userAgent, headerMap.get(\"Accept\"), agent);\n   }\n \n-  private void _populateAgentImpl(String userAgent, String accept,AgentImpl agent)\n+  private void _populateAgentImpl(\n+      String userAgent, \n+      String accept, \n+      AgentImpl agent)\n   {\n     /* for testing PocketPC */\n ", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/agent/AgentFactoryImpl.java"}, {"additions": 10, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/agent/AgentImpl.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/agent/AgentImpl.java", "sha": "e1a79b04dc1467444b22002aca7122f6ad7cb575", "changes": 13, "status": "modified", "deletions": 3, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/agent/AgentImpl.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f", "patch": "@@ -61,37 +61,44 @@ public AgentImpl(boolean nullAgentEntry)\n     _entry = _getAgentEntry(userAgent, accept);\n   }\n   */\n+  @Override\n   public Object getType()\n   {\n     return _entry._type;\n   }\n \n+  @Override\n   public String getAgentName()\n   {\n     return _entry._agent;\n   }\n \n+  @Override\n   public String getAgentVersion()\n   {\n     return _entry._agentVersion;\n   }\n \n+  @Override\n   public String getPlatformName()\n   {\n     return _entry._platform;\n   }\n \n+  @Override\n   public String getPlatformVersion()\n   {\n     return _entry._platformVersion;\n   }\n \n+  @Override\n   public String getHardwareMakeModel()\n   {\n     return _entry._makeModel;\n   }\n \n-  public Map getCapabilities()\n+  @Override\n+  public Map<Object, Object> getCapabilities()\n   {\n     return _requestCapabilities;\n   }\n@@ -148,12 +155,12 @@ void __addRequestCapability(CapabilityKey key,Object value)\n   {\n      if (_requestCapabilities == null)\n      {\n-       _requestCapabilities = new HashMap();\n+       _requestCapabilities = new HashMap<Object, Object>();\n      }\n     _requestCapabilities.put(key,value);\n   }\n \n-  private HashMap _requestCapabilities;\n+  private HashMap<Object, Object> _requestCapabilities;\n   private AgentEntry _entry;\n   static private final AgentEntry _NULL_AGENT_ENTRY = new AgentEntry();\n   static final private TrinidadLogger _LOG = TrinidadLogger.createTrinidadLogger(AgentImpl.class);", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/agent/AgentImpl.java"}, {"additions": 13, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/agent/AgentUtil.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/agent/AgentUtil.java", "sha": "8905122d8bf3873b16991f373327632af4380a45", "changes": 15, "status": "modified", "deletions": 2, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/agent/AgentUtil.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f", "patch": "@@ -39,7 +39,11 @@\n    * @param platform\n    * @return\n    */\n-  public static TrinidadAgent getAgent(int type, int browser, String agentVersion, int platform)\n+  public static TrinidadAgent getAgent(\n+      int type, \n+      int browser, \n+      String agentVersion, \n+      int platform)\n   {\n     final int fType = type;\n     final int fBrowser = browser;\n@@ -49,18 +53,23 @@ public static TrinidadAgent getAgent(int type, int browser, String agentVersion,\n     Agent agent =\n             new DefaultAgent ()\n             {\n+              @Override\n               public Object getType() {\n                 return AgentNameUtil.getAgentName(fType);\n               }\n \n+              @Override\n               public String getAgentName() {\n                 return AgentNameUtil.getAgentName(fBrowser);\n               }\n \n+              @Override\n               public String getAgentVersion() {\n                 return fAgentVersion;\n               }\n \n+              // FIXME: This method is never used locally, should it be removed?\n+              @SuppressWarnings(\"unused\")\n               public String getPlatFormName() {\n                 return AgentNameUtil.getPlatformName(fPlatform);\n               }\n@@ -110,7 +119,9 @@ public static TrinidadAgent getAgent(FacesContext context)\n   //=-=AEW: I don't believe this is a repository thing:  the concept\n   //of output mode is entirely renderkit specific, and the tweaks\n   //that are made to the capabilities are also renderkit specific.\n-  public static TrinidadAgent mergeCapabilities(TrinidadAgent agent, Map capabilities)\n+  public static TrinidadAgent mergeCapabilities(\n+      TrinidadAgent agent, \n+      Map<Object, Object> capabilities)\n   {\n     if (!(agent instanceof TrinidadAgentImpl))\n       throw new IllegalArgumentException(\"mergeCapabilities() may only be \" +", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/agent/AgentUtil.java"}, {"additions": 10, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/agent/CapabilitiesProvider.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/agent/CapabilitiesProvider.java", "sha": "32e675269758e71940e7e93ff2301bdbf72cd5eb", "changes": 16, "status": "modified", "deletions": 6, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/agent/CapabilitiesProvider.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f", "patch": "@@ -54,10 +54,10 @@ static public CapabilitiesProvider getCapabilitiesProvider(URL capUrl)\n     //getCapabilitiesProvider\n     //--Are we really going to support multiple files??\n     CapabilitiesProvider provider = null;\n-    Map providerMap = _getProviderMap();\n+    Map<URL, CapabilitiesProvider> providerMap = _getProviderMap();\n     synchronized (providerMap)\n     {\n-      provider = (CapabilitiesProvider) providerMap.get(capUrl);\n+      provider = providerMap.get(capUrl);\n       if (provider == null)\n       {\n         provider = new CapabilitiesProvider(capUrl);\n@@ -83,7 +83,7 @@ public CapabilityMap getCapabilities(Agent agent)\n     synchronized (this) {\n       try\n       {\n-        caps = (CapabilityMap) _sCache.get(key);\n+        caps = _sCache.get(key);\n \n         //if not in cache, acquire\n         if (caps == null)\n@@ -134,7 +134,7 @@ private CapabilitiesDocument _getCapabilityDocument()\n     return _document;\n   }\n \n-  static private Map _getProviderMap()\n+  static private Map<URL, CapabilitiesProvider> _getProviderMap()\n   {\n     return _providerMap;\n   }\n@@ -175,11 +175,13 @@ static private Map _getProviderMap()\n \n     }\n \n+    @Override\n     public int hashCode()\n     {\n       return _hashCode;\n     }\n \n+    @Override\n     public boolean equals(Object obj)\n     {\n       if (obj == this)\n@@ -216,10 +218,12 @@ public boolean equals(Object obj)\n \n   //@todo: The caches are global. Should we store in SC?\n   //@todo: Use an LRU, to limit number of entries\n-  static private HashMap _sCache = new HashMap(64);\n+  static private HashMap<CacheKey, CapabilityMap> _sCache = \n+    new HashMap<CacheKey, CapabilityMap>(64);\n \n \n-  static private Map _providerMap = new HashMap(4);\n+  static private Map<URL, CapabilitiesProvider> _providerMap = \n+    new HashMap<URL, CapabilitiesProvider>(4);\n   static final private TrinidadLogger _LOG = TrinidadLogger.createTrinidadLogger(CapabilitiesProvider.class);\n \n }", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/agent/CapabilitiesProvider.java"}, {"additions": 5, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/agent/CapabilityKey.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/agent/CapabilityKey.java", "sha": "abd7e08a7f427cba35908887d85e8f4846853ecc", "changes": 6, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/agent/CapabilityKey.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f", "patch": "@@ -106,11 +106,13 @@ public static CapabilityKey getKeyAt(int index)\n     return null;\n   }\n \n+  @Override\n   public boolean equals(Object obj)\n   {\n     return this == obj;\n   }\n \n+  @Override\n   public int hashCode()\n   {\n     return _capIndex;\n@@ -126,6 +128,7 @@ synchronized private static Object _createKey(String capabilityName)\n     return key;\n   }\n \n+  @Override\n   public String toString()\n   {\n     return _capName;\n@@ -136,7 +139,8 @@ public String toString()\n \n   static final private int DEFAULT_SIZE = 50;\n \n-  static private HashMap _capKeyNames = new HashMap();\n+  static private HashMap<String, CapabilityKey> _capKeyNames = \n+    new HashMap<String, CapabilityKey>();\n   static private CapabilityKey[] _keys = new CapabilityKey[DEFAULT_SIZE];\n   private static int _count = 0;\n }", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/agent/CapabilityKey.java"}, {"additions": 21, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/agent/CapabilityMap.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/agent/CapabilityMap.java", "sha": "961386e34937c68f805f0b3befa66031f178b842", "changes": 32, "status": "modified", "deletions": 11, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/agent/CapabilityMap.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f", "patch": "@@ -30,7 +30,10 @@\n  * -- Also this impl assumes that the number of keys **will** change (increase) after init.\n  *\n  */\n-public class CapabilityMap extends AbstractMap implements Cloneable\n+// FIXME -= Simon Lessard =-\n+//       This is another map that can accept both String and another type as keys.\n+//       Shouldn't we force type safety with a single key type ?\n+public class CapabilityMap extends AbstractMap<Object, Object> implements Cloneable\n {\n \n   private CapabilityMap()\n@@ -99,7 +102,7 @@ public Object getCapability(CapabilityKey capKey)\n    * @param capabilities\n    * @return  returns a new capability map that merges key/values of the provided map\n    */\n-  public CapabilityMap merge(Map capabilities)\n+  public CapabilityMap merge(Map<Object, Object> capabilities)\n   {\n     if ((capabilities == null) || (capabilities.isEmpty()))\n       return this;\n@@ -155,6 +158,7 @@ public CapabilityMap merge(Object[] capabilities)\n    * @param key\n    * @return\n    */\n+  @Override\n   public Object get(Object key)\n   {\n     if (key == null)\n@@ -171,6 +175,7 @@ public Object get(Object key)\n    * @param value\n    * @return\n    */\n+  @Override\n   public Object put(Object key, Object value)\n   {\n     return new UnsupportedOperationException();\n@@ -179,20 +184,22 @@ public Object put(Object key, Object value)\n   /**\n    * @return\n    */\n-  public Set entrySet()\n+  @Override\n+  public Set<Map.Entry<Object, Object>> entrySet()\n   {\n     if (_entrySet == null)\n       _createEntrySet();\n \n     return _entrySet;\n   }\n \n+  @Override\n   public Object clone()\n   {\n     try\n     {\n       CapabilityMap that = (CapabilityMap) super.clone();\n-      that._indexedValues = (Object[]) _indexedValues.clone();\n+      that._indexedValues = _indexedValues.clone();\n       that._entrySet = null;\n       return that;\n     }\n@@ -220,8 +227,9 @@ synchronized private void _createEntrySet()\n   {\n     if (_entrySet == null)\n     {\n-      HashSet hs = new HashSet();\n-      Iterator iter = new KeyIterator();\n+      HashSet<Map.Entry<Object, Object>> hs = \n+        new HashSet<Map.Entry<Object, Object>>();\n+      Iterator<Object> iter = new KeyIterator();\n       while (iter.hasNext())\n       {\n         CapabilityKey capKey = (CapabilityKey) iter.next();\n@@ -241,9 +249,9 @@ private int _max(int value1, int value2)\n   }\n \n \n-  private Object[] _getMapAsArray(Map capabilities)\n+  private Object[] _getMapAsArray(Map<Object, Object> capabilities)\n   {\n-    Iterator iter = capabilities.keySet().iterator();\n+    Iterator<Object> iter = capabilities.keySet().iterator();\n     Object[] caps = new Object[capabilities.size() * 2];\n     int i = 0;\n     while (iter.hasNext())\n@@ -260,7 +268,7 @@ private int _max(int value1, int value2)\n \n \n   //KeyIterator\n-  private class KeyIterator implements Iterator\n+  private class KeyIterator implements Iterator<Object>\n   {\n     public KeyIterator()\n     {\n@@ -315,7 +323,7 @@ private void _setNext()\n \n \n   //Map Entry\n-  private class CEntry implements Entry\n+  private class CEntry implements Entry<Object, Object>\n   {\n \n     private Object key;\n@@ -327,6 +335,7 @@ private void _setNext()\n       this.value = value;\n     }\n \n+    @Override\n     public boolean equals(Object o)\n     {\n       if (this == o)\n@@ -355,6 +364,7 @@ public Object setValue(Object newValue)\n       throw new UnsupportedOperationException();\n     }\n \n+    @Override\n     public int hashCode()\n     {\n       return key.hashCode() ^ (value == null ? 0 : value.hashCode());\n@@ -363,5 +373,5 @@ public int hashCode()\n \n \n   private Object[] _indexedValues;\n-  private Set _entrySet;\n+  private Set<Map.Entry<Object, Object>> _entrySet;\n }", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/agent/CapabilityMap.java"}, {"additions": 1, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/agent/CapabilityValue.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/agent/CapabilityValue.java", "sha": "3b0f429d208a96015a1e7cb9d11b6ec24995cbeb", "changes": 2, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/agent/CapabilityValue.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f", "patch": "@@ -72,5 +72,5 @@ synchronized static private Object _getValue(Object value)\n     return value;\n   }\n   \n-  private static HashMap _values = new HashMap(32);\n+  private static HashMap<Object, Object> _values = new HashMap<Object, Object>(32);\n }", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/agent/CapabilityValue.java"}, {"additions": 1, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/agent/DefaultAgent.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/agent/DefaultAgent.java", "sha": "263d44211d835f29ed09aa0aa8f7680558d25ea0", "changes": 2, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/agent/DefaultAgent.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f", "patch": "@@ -91,7 +91,7 @@ public String getHardwareMakeModel()\n    *\n    * @return Map of capability name and value for the current Agent.\n    */\n-  public Map getCapabilities ()\n+  public Map<Object, Object> getCapabilities ()\n   {\n     return null;\n   }  ", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/agent/DefaultAgent.java"}, {"additions": 1, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/agent/TrinidadAgent.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/agent/TrinidadAgent.java", "sha": "cfb2ed7e8f109332a8074327b7b933984aa4ffaf", "changes": 1, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/agent/TrinidadAgent.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f", "patch": "@@ -267,6 +267,7 @@\n    * based on it (like Netscape 6).\n    * @deprecated since 2.2.0. Use {@link #APPLICATION_GECKO}.\n    */\n+  @Deprecated\n   static public final int APPLICATION_MOZILLA   = APPLICATION_GECKO;\n \n   /**", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/agent/TrinidadAgent.java"}, {"additions": 5, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/agent/TrinidadAgentImpl.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/agent/TrinidadAgentImpl.java", "sha": "b1973c53276d041f10ee35986098ca86815528e9", "changes": 8, "status": "modified", "deletions": 3, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/agent/TrinidadAgentImpl.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f", "patch": "@@ -121,7 +121,7 @@ public String getPlatformVersion()\n   /**\n    * @return Map of capability name and value for the current Agent.\n    */\n-  public Map getCapabilities()\n+  public Map<Object, Object> getCapabilities()\n   {\n     return _capMap;\n   }\n@@ -154,6 +154,7 @@ public Object getCapability(CapabilityKey key)\n   }\n \n \n+  @Override\n   public Object clone()\n   {\n     try\n@@ -170,6 +171,7 @@ public Object clone()\n   }\n \n \n+  @Override\n   public String toString()\n   {\n     StringBuffer buffer = new StringBuffer(\"Agent[\");\n@@ -231,7 +233,7 @@ private void _initialize(FacesContext context)\n       _major = _getMajorVersion(getAgentVersion());\n \n     _capMap = _getCapabilityMap(context);\n-    Map requestCaps = _delegate.getCapabilities();\n+    Map<Object, Object> requestCaps = _delegate.getCapabilities();\n     if (requestCaps != null)\n     {\n       _capMap = _capMap.merge(requestCaps);\n@@ -370,7 +372,7 @@ static private int _getMajorVersion(String source)\n     return (int) version;\n   }\n \n-  void __mergeCapabilities(Map capabilities)\n+  void __mergeCapabilities(Map<Object, Object> capabilities)\n   {\n     _capMap = _capMap.merge(capabilities);\n   }", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/agent/TrinidadAgentImpl.java"}, {"additions": 9, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/agent/parse/CapabilitiesDocument.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/agent/parse/CapabilitiesDocument.java", "sha": "4dd5d0b5bd10d9e36cba2714881a5ebcdf0491c3", "changes": 17, "status": "modified", "deletions": 8, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/agent/parse/CapabilitiesDocument.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f", "patch": "@@ -35,6 +35,7 @@\n   {\n     _agents = agents;\n     _devices = devices;\n+    _includeNodeBySrcCaps = new HashMap<URL, Object>();\n     _defaultAgentCapabilities = _getDefaultAgentCapabilities(_agents);\n   }\n \n@@ -174,7 +175,7 @@ private DeviceNode _getDeviceNode(Agent agent)\n    */\n   private Object[][] _getCapabilities(Agent agent,\n                                       CapabilitiesNode[] capNodes,\n-                                      List includedByRefs,\n+                                      List<String> includedByRefs,\n                                       CapabilitiesNode matchNode)\n   {\n     assert (matchNode != null);\n@@ -187,7 +188,7 @@ private DeviceNode _getDeviceNode(Agent agent)\n \n     //check for circular dependecy\n     if (includedByRefs == null)\n-      includedByRefs = new ArrayList();\n+      includedByRefs = new ArrayList<String>();\n \n     if (matchNode.__getId() != null)\n     {\n@@ -240,7 +241,7 @@ private DeviceNode _getDeviceNode(Agent agent)\n     assert (capNodes != null);\n     assert (dcNode != null);\n \n-    ArrayList includedByRefs = new ArrayList();\n+    ArrayList<String> includedByRefs = new ArrayList<String>();\n \n     //process node that includes by reference\n     IncludeNode[] refIncludes = dcNode.__getIncludesByRef();\n@@ -279,7 +280,7 @@ private DeviceNode _getDeviceNode(Agent agent)\n    */\n   private Object[][] _getCapabilities(Agent agent,\n                                       CapabilitiesNode[] capNodes,\n-                                      List includedByRefs,\n+                                      List<String> includedByRefs,\n                                       String refId)\n   {\n     assert (capNodes != null);\n@@ -305,15 +306,15 @@ private DeviceNode _getDeviceNode(Agent agent)\n    */\n   private Object[] _getCapabilities(URL srcUrl)\n   {\n-    Object o = includeNodeBySrcCaps.get(srcUrl);\n+    Object o = _includeNodeBySrcCaps.get(srcUrl);\n     if (o != null)\n       return (Object[]) o;\n \n     Object[] caps = null;\n-    synchronized (includeNodeBySrcCaps)\n+    synchronized (_includeNodeBySrcCaps)\n     {\n       caps = CapabilityDataDocumentParser.parse(srcUrl);\n-      includeNodeBySrcCaps.put(srcUrl, caps);\n+      _includeNodeBySrcCaps.put(srcUrl, caps);\n     }\n \n     return caps;\n@@ -348,7 +349,7 @@ private DeviceNode _getDeviceNode(Agent agent)\n \n   private CapabilitiesNode[] _agents;\n   private DeviceNode[] _devices;\n-  private HashMap includeNodeBySrcCaps = new HashMap();\n+  private HashMap<URL, Object> _includeNodeBySrcCaps;\n   private Object[][] _defaultAgentCapabilities;\n \n   static final CapabilitiesDocument EMPTY_DOCUMENT = new CapabilitiesDocument();", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/agent/parse/CapabilitiesDocument.java"}, {"additions": 15, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/agent/parse/CapabilitiesDocumentParser.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/agent/parse/CapabilitiesDocumentParser.java", "sha": "4766723ec1342e4e1080ac1cc57d139f4bcb1925", "changes": 22, "status": "modified", "deletions": 7, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/agent/parse/CapabilitiesDocumentParser.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f", "patch": "@@ -43,7 +43,11 @@\n         implements XMLConstants\n {\n \n-  private CapabilitiesDocumentParser() {}\n+  private CapabilitiesDocumentParser()\n+  {\n+    _capabilitiesNodes = new ArrayList<CapabilitiesNode>();\n+    _deviceNodes = new ArrayList<DeviceNode>();\n+  }\n \n   static public CapabilitiesDocument createInstance (URL capUrl)\n   {\n@@ -95,6 +99,7 @@ static public CapabilitiesDocument createInstance (URL capUrl)\n   }\n \n \n+  @Override\n   public void startElement (ParseContext context,\n                             String       namespaceURI,\n                             String       localName,\n@@ -115,6 +120,7 @@ public void startElement (ParseContext context,\n   }\n \n \n+  @Override\n   public NodeParser startChildElement(ParseContext context,\n                                       String       namespaceURI,\n                                       String       localName,\n@@ -143,6 +149,7 @@ else if (ELEMENT_DEVICE.equals(localName))\n   }\n \n \n+  @Override\n   public void addCompletedChild (ParseContext context,\n                                  String       namespaceURI,\n                                  String       localName,\n@@ -153,13 +160,14 @@ public void addCompletedChild (ParseContext context,\n       return;\n \n     if (ELEMENT_CAPABILITIES.equals(localName))\n-      _capabilitiesNodes.add(child);\n+      _capabilitiesNodes.add((CapabilitiesNode)child);\n \n     if (ELEMENT_DEVICE.equals(localName))\n-      _deviceNodes.add(child);\n+      _deviceNodes.add((DeviceNode)child);\n   }\n \n \n+  @Override\n   public Object endElement (ParseContext context,\n                             String       namespaceURI,\n                             String       localName)\n@@ -170,23 +178,23 @@ public Object endElement (ParseContext context,\n     CapabilitiesNode[] agents = null;\n     if (_capabilitiesNodes.size() > 0)\n     {\n-      agents = (CapabilitiesNode[]) _capabilitiesNodes.toArray\n+      agents = _capabilitiesNodes.toArray\n               (new CapabilitiesNode[_capabilitiesNodes.size()]);\n     }\n \n     DeviceNode[] devices = null;\n     if (_deviceNodes.size() > 0)\n     {\n-      devices = (DeviceNode[]) _deviceNodes.toArray\n+      devices = _deviceNodes.toArray\n               (new DeviceNode[_deviceNodes.size()]);\n     }\n \n     CapabilitiesDocument document = new CapabilitiesDocument(agents, devices);\n     return document;\n   }\n \n-  private List _capabilitiesNodes = new ArrayList();\n-  private List _deviceNodes = new ArrayList();\n+  private List<CapabilitiesNode> _capabilitiesNodes;\n+  private List<DeviceNode> _deviceNodes;\n \n   static final String __BASE_URL = \"baseURL\";\n ", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/agent/parse/CapabilitiesDocumentParser.java"}, {"additions": 16, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/agent/parse/CapabilitiesNodeParser.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/agent/parse/CapabilitiesNodeParser.java", "sha": "b80dcae526de680ca0f6690913788c00ab8e8ef1", "changes": 24, "status": "modified", "deletions": 8, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/agent/parse/CapabilitiesNodeParser.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f", "patch": "@@ -33,7 +33,12 @@\n  */\n class CapabilitiesNodeParser extends BaseNodeParser implements XMLConstants\n {\n-\n+  CapabilitiesNodeParser()\n+  {\n+    _includeNodes = new ArrayList<IncludeNode>();\n+  }\n+  \n+  @Override\n   public void startElement (ParseContext context,\n                             String       namespaceURI,\n                             String       localName,\n@@ -84,6 +89,7 @@ public void startElement (ParseContext context,\n   }\n \n \n+  @Override\n   public NodeParser startChildElement(ParseContext context,\n                                       String       namespaceURI,\n                                       String       localName,\n@@ -98,6 +104,7 @@ public NodeParser startChildElement(ParseContext context,\n   }\n \n \n+  @Override\n   public void addCompletedChild (ParseContext context,\n                                  String       namespaceURI,\n                                  String       localName,\n@@ -108,29 +115,30 @@ public void addCompletedChild (ParseContext context,\n       return;\n \n     if (ELEMENT_INCLUDE.equals(localName))\n-      _includeNodes.add(child);\n+      _includeNodes.add((IncludeNode)child);\n   }\n \n+  @Override\n   public Object endElement (ParseContext context,\n                             String       namespaceURI,\n                             String       localName)\n   {\n     if ((_id == null) && (_agent == null))\n       return null;\n \n-    ArrayList nodesWithRefList = new ArrayList(_includeNodes.size());\n-    ArrayList nodesWithSrcList = new ArrayList(_includeNodes.size());\n+    ArrayList<IncludeNode> nodesWithRefList = new ArrayList<IncludeNode>(_includeNodes.size());\n+    ArrayList<IncludeNode> nodesWithSrcList = new ArrayList<IncludeNode>(_includeNodes.size());\n     for (int i = 0; i < _includeNodes.size(); i++)\n     {\n-      IncludeNode node = (IncludeNode) _includeNodes.get(i);\n+      IncludeNode node = _includeNodes.get(i);\n       if (node.__getRefId() != null)\n         nodesWithRefList.add(node);\n       else\n         nodesWithSrcList.add(node);\n     }\n-    IncludeNode[] nodesWithRef = (IncludeNode[])\n+    IncludeNode[] nodesWithRef = \n             nodesWithRefList.toArray(new IncludeNode[nodesWithRefList.size()]);\n-    IncludeNode[] nodesWithSrc = (IncludeNode[])\n+    IncludeNode[] nodesWithSrc = \n             nodesWithSrcList.toArray(new IncludeNode[nodesWithSrcList.size()]);\n \n     return new CapabilitiesNode(_id, _isDefault, _agent,\n@@ -143,7 +151,7 @@ public Object endElement (ParseContext context,\n   private boolean _isDefault;\n   private NameVersion _agent;\n   private NameVersion _platform;\n-  private List _includeNodes = new ArrayList();\n+  private List<IncludeNode> _includeNodes;\n \n   static private final TrinidadLogger _LOG = TrinidadLogger.createTrinidadLogger(CapabilitiesNodeParser.class);\n }", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/agent/parse/CapabilitiesNodeParser.java"}, {"additions": 5, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/agent/parse/CapabilityDataDocumentParser.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/agent/parse/CapabilityDataDocumentParser.java", "sha": "638c645721354c99a373f20f3b0d966f8eb048ec", "changes": 6, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/agent/parse/CapabilityDataDocumentParser.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f", "patch": "@@ -45,6 +45,7 @@\n \n   private CapabilityDataDocumentParser()\n   {\n+    _capList = new ArrayList<Object>();\n   }\n \n   static public Object[] parse (URL srcUrl)\n@@ -92,6 +93,7 @@ private CapabilityDataDocumentParser()\n     return new Object[0];\n   }\n \n+  @Override\n   public void startElement (ParseContext context,\n                             String       namespaceURI,\n                             String       localName,\n@@ -105,6 +107,7 @@ public void startElement (ParseContext context,\n     }\n   }\n \n+  @Override\n   public NodeParser startChildElement(\n     ParseContext context,\n     String       namespaceURI,\n@@ -144,6 +147,7 @@ public NodeParser startChildElement(\n   }\n \n \n+  @Override\n   public Object endElement (ParseContext context,\n                             String       namespaceURI,\n                             String       localName)\n@@ -154,7 +158,7 @@ public Object endElement (ParseContext context,\n     return null;\n   }\n \n-  private List _capList = new ArrayList();\n+  private List<Object> _capList;\n \n   static private final TrinidadLogger _LOG = TrinidadLogger.createTrinidadLogger(CapabilityDataDocumentParser.class);\n ", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/agent/parse/CapabilityDataDocumentParser.java"}, {"additions": 16, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/agent/parse/ComponentNodeParser.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/agent/parse/ComponentNodeParser.java", "sha": "9e83a4e4c41bc57be95a6b890c3711c1e204af42", "changes": 24, "status": "modified", "deletions": 8, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/agent/parse/ComponentNodeParser.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f", "patch": "@@ -29,7 +29,12 @@\n  */\n class ComponentNodeParser extends BaseNodeParser implements XMLConstants\n {\n-\n+  ComponentNodeParser()\n+  {\n+    _includeNodes = new ArrayList<IncludeNode>();\n+  }\n+  \n+  @Override\n   public void startElement (ParseContext context,\n                             String       namespaceURI,\n                             String       localName,\n@@ -46,6 +51,7 @@ public void startElement (ParseContext context,\n \n   }\n \n+  @Override\n   public NodeParser startChildElement(ParseContext context,\n                                       String       namespaceURI,\n                                       String       localName,\n@@ -60,6 +66,7 @@ public NodeParser startChildElement(ParseContext context,\n   }\n \n \n+  @Override\n   public void addCompletedChild (ParseContext context,\n                                  String       namespaceURI,\n                                  String       localName,\n@@ -69,30 +76,31 @@ public void addCompletedChild (ParseContext context,\n     if (child == null)\n       return;\n \n-    _includeNodes.add(child);\n+    _includeNodes.add((IncludeNode)child);\n   }\n \n+  @Override\n   public Object endElement (ParseContext context,\n                             String       namespaceURI,\n                             String       localName)\n   {\n-    ArrayList nodesWithRefList = new ArrayList(_includeNodes.size());\n-    ArrayList nodesWithSrcList = new ArrayList(_includeNodes.size());\n+    ArrayList<IncludeNode> nodesWithRefList = new ArrayList<IncludeNode>(_includeNodes.size());\n+    ArrayList<IncludeNode> nodesWithSrcList = new ArrayList<IncludeNode>(_includeNodes.size());\n     for (int i = 0; i < _includeNodes.size(); i++)\n     {\n-      IncludeNode node = (IncludeNode) _includeNodes.get(i);\n+      IncludeNode node = _includeNodes.get(i);\n       if (node.__getRefId() != null)\n         nodesWithRefList.add(node);\n       else\n         nodesWithSrcList.add(node);\n     }\n-    IncludeNode[] nodesWithRef = (IncludeNode[])\n+    IncludeNode[] nodesWithRef = \n             nodesWithRefList.toArray(new IncludeNode[nodesWithRefList.size()]);\n-    IncludeNode[] nodesWithSrc = (IncludeNode[])\n+    IncludeNode[] nodesWithSrc = \n             nodesWithSrcList.toArray(new IncludeNode[nodesWithSrcList.size()]);\n     return new DeviceComponentNode(_type, nodesWithRef, nodesWithSrc);    \n   }\n \n-  private List _includeNodes = new ArrayList();\n+  private List<IncludeNode> _includeNodes;\n   private String _type;\n }", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/agent/parse/ComponentNodeParser.java"}, {"additions": 4, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/agent/parse/DeviceNode.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/agent/parse/DeviceNode.java", "sha": "fdaac152a64bba267775bfb9a45b53fcc0fa404b", "changes": 4, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/agent/parse/DeviceNode.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f", "patch": "@@ -47,8 +47,12 @@ public DeviceNode(String id, NameVersion makeModel,\n     return _makeModel.match(makeModel, null);\n   }\n \n+  // -= Simon Lessard =-\n+  // FIXME: _id and _extendsId are never read locally\n+  @SuppressWarnings(\"unused\")\n   private String _id;\n   private NameVersion _makeModel;\n+  @SuppressWarnings(\"unused\")\n   private String _extendsId;\n   private DeviceComponentNode[] _componentNodes;\n }", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/agent/parse/DeviceNode.java"}, {"additions": 12, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/agent/parse/DeviceNodeParser.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/agent/parse/DeviceNodeParser.java", "sha": "890d8f7b3d2191acea6731ca5483915a8e5e1fbe", "changes": 15, "status": "modified", "deletions": 3, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/agent/parse/DeviceNodeParser.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f", "patch": "@@ -31,6 +31,12 @@\n  */\n class DeviceNodeParser extends BaseNodeParser implements XMLConstants\n {\n+  DeviceNodeParser()\n+  {\n+    _componentNodes = new ArrayList<DeviceComponentNode>();\n+  }\n+  \n+  @Override\n   public void startElement (ParseContext context,\n                             String       namespaceURI,\n                             String       localName,\n@@ -71,6 +77,7 @@ public void startElement (ParseContext context,\n   }\n \n \n+  @Override\n   public NodeParser startChildElement(ParseContext context,\n                                       String       namespaceURI,\n                                       String       localName,\n@@ -85,6 +92,7 @@ public NodeParser startChildElement(ParseContext context,\n \n   }\n \n+  @Override\n   public void addCompletedChild (ParseContext context,\n                                  String       namespaceURI,\n                                  String       localName,\n@@ -94,17 +102,18 @@ public void addCompletedChild (ParseContext context,\n     if (child == null)\n       return;\n \n-    _componentNodes.add(child);\n+    _componentNodes.add((DeviceComponentNode)child);\n   }\n \n+  @Override\n   public Object endElement (ParseContext context,\n                             String       namespaceURI,\n                             String       localName)\n   {\n     if ((_id == null) && (_model == null))\n       return null;\n \n-    DeviceComponentNode[] cNodes = (DeviceComponentNode[])\n+    DeviceComponentNode[] cNodes = \n             _componentNodes.toArray(\n                     new DeviceComponentNode[_componentNodes.size()]);\n     return new DeviceNode(_id, _model, _extendsId, cNodes);\n@@ -114,7 +123,7 @@ public Object endElement (ParseContext context,\n   private String _id;\n   private NameVersion _model;\n   private String _extendsId;\n-  private List _componentNodes = new ArrayList();\n+  private List<DeviceComponentNode> _componentNodes;\n \n   static private final TrinidadLogger _LOG = TrinidadLogger.createTrinidadLogger(DeviceNodeParser.class);\n }", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/agent/parse/DeviceNodeParser.java"}, {"additions": 2, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/agent/parse/IncludeNodeParser.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/agent/parse/IncludeNodeParser.java", "sha": "e766a1e84102d841fa434b5e2ef4db5e024f1a03", "changes": 2, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/agent/parse/IncludeNodeParser.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f", "patch": "@@ -30,6 +30,7 @@\n class IncludeNodeParser extends BaseNodeParser implements XMLConstants\n {\n \n+  @Override\n   public void startElement (ParseContext context,\n                             String       namespaceURI,\n                             String       localName,\n@@ -57,6 +58,7 @@ public void startElement (ParseContext context,\n     _refId = refId;\n   }\n \n+  @Override\n   public Object endElement (ParseContext context,\n                             String       namespaceURI,\n                             String       localName)", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/agent/parse/IncludeNodeParser.java"}, {"additions": 29, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/agent/parse/NameVersion.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/agent/parse/NameVersion.java", "sha": "bfc433175c0679b2e699461a0fa4ce634a61127a", "changes": 50, "status": "modified", "deletions": 21, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/agent/parse/NameVersion.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f", "patch": "@@ -107,7 +107,7 @@ public double match(String name, VersionId version)\n     int i = 0;\n     char ch = data[i];\n \n-    ArrayList entries = new ArrayList(5);\n+    ArrayList<Object[]> entries = new ArrayList<Object[]>(5);\n     VersionEntry vEntry = null;\n     NameEntry head, curr;\n     head = curr = new NameEntry();\n@@ -173,7 +173,9 @@ public double match(String name, VersionId version)\n           }\n           else\n           {\n-            while (!Character.isSpace(ch) && (ch != (char) 0x1000000))\n+            // 2006-08-02: -= Simon Lessard =-\n+            //while (!Character.isSpace(ch) && (ch != (char) 0x1000000))\n+            while (!Character.isWhitespace(ch) && (ch != (char) 0x1000000))\n               ch = data[++i];\n           }\n \n@@ -207,7 +209,9 @@ public double match(String name, VersionId version)\n           i++;\n           break;\n         default:\n-          if ((!inQuote) && (Character.isSpace(ch)))\n+          // 2006-08-02: -= Simon Lessard =-\n+          //if ((!inQuote) && (Character.isSpace(ch)))\n+          if ((!inQuote) && (Character.isWhitespace(ch)))\n           {\n             if (start != i)\n             {\n@@ -228,7 +232,9 @@ public double match(String name, VersionId version)\n             }\n             //Skip space\n             ch = data[++i];\n-            while (Character.isSpace(ch))\n+            // 2006-08-02: -= Simon Lessard =-\n+            //while (Character.isSpace(ch))\n+            while (Character.isWhitespace(ch))\n               ch = data[++i];\n             start = i;\n           }\n@@ -280,7 +286,9 @@ private VersionEntry _parseVersion(String value,\n           version = value.substring(0, i);\n           for (++i; i < length; i++)\n           {\n-            if (!Character.isSpace(ch))\n+            // 2006-08-02: -= Simon Lessard =-\n+            //if (!Character.isSpace(ch))\n+            if (!Character.isWhitespace(ch))\n               throw new ParseException(\"Unexpected char.\", offset + i);\n           }\n           //if the version string was simpley \"*\" or \"+\"\n@@ -370,15 +378,15 @@ private double _matchVersion(VersionEntry entry,\n \n     if (entry._type == VersionEntry.STAR_TYPE)\n     {\n-      Iterator vIterator1 = version.iterator();\n-      Iterator vIterator2 = entry._versionId.iterator();\n+      Iterator<String> vIterator1 = version.iterator();\n+      Iterator<String> vIterator2 = entry._versionId.iterator();\n \n       //Check upto where both have values\n       int matchedParts = 0;\n       while ((vIterator1.hasNext()) && (vIterator2.hasNext()))\n       {\n-        String part1 = (String) vIterator1.next();\n-        String part2 = (String) vIterator2.next();\n+        String part1 = vIterator1.next();\n+        String part2 = vIterator2.next();\n         if (!part1.equals(part2))\n           return NO_MATCH;\n         matchedParts++;\n@@ -388,7 +396,7 @@ private double _matchVersion(VersionEntry entry,\n       //parts (sub versions), then it must be .0's\n       while (vIterator2.hasNext())\n       {\n-        if (!\"0\".equals((String) vIterator2.next()))\n+        if (!\"0\".equals(vIterator2.next()))\n           return NO_MATCH;\n       }\n \n@@ -405,16 +413,16 @@ private double _matchVersion(VersionEntry entry,\n     }\n     else if (entry._type == VersionEntry.PLUS_TYPE)\n     {\n-      Iterator vIterator1 = version.iterator();\n-      Iterator vIterator2 = entry._versionId.iterator();\n+      Iterator<String> vIterator1 = version.iterator();\n+      Iterator<String> vIterator2 = entry._versionId.iterator();\n \n       //Check upto where both have values\n       while ((vIterator1.hasNext()) && (vIterator2.hasNext()))\n       {\n         try\n         {\n-          int v1 = Integer.parseInt((String) vIterator1.next());\n-          int v2 = Integer.parseInt((String) vIterator2.next());\n+          int v1 = Integer.parseInt(vIterator1.next());\n+          int v2 = Integer.parseInt(vIterator2.next());\n           if (v1 > v2)\n             return (VERSION_GE_MATCH * (entry._versionId.getVersion() / version.getVersion()));\n           else if (v1 < v2)\n@@ -432,7 +440,7 @@ else if (v1 < v2)\n       {\n         try\n         {\n-          if (Integer.parseInt((String) vIterator2.next()) != 0)\n+          if (Integer.parseInt(vIterator2.next()) != 0)\n             return NO_MATCH;\n         }\n         catch (NumberFormatException npe)\n@@ -446,27 +454,27 @@ else if (v1 < v2)\n     else\n     {\n       //exact match\n-      Iterator vIterator1 = version.iterator();\n-      Iterator vIterator2 = entry._versionId.iterator();\n+      Iterator<String> vIterator1 = version.iterator();\n+      Iterator<String> vIterator2 = entry._versionId.iterator();\n \n       //Check upto where both have values\n       while ((vIterator1.hasNext()) && (vIterator2.hasNext()))\n       {\n-        String part1 = (String) vIterator1.next();\n-        String part2 = (String) vIterator2.next();\n+        String part1 = vIterator1.next();\n+        String part2 = vIterator2.next();\n         if (!part1.equals(part2))\n           return NO_MATCH;\n       }\n \n       while (vIterator1.hasNext())\n       {\n-        if (!\"0\".equals((String) vIterator1.next()))\n+        if (!\"0\".equals(vIterator1.next()))\n           return NO_MATCH;\n       }\n \n       while (vIterator2.hasNext())\n       {\n-        if (!\"0\".equals((String) vIterator2.next()))\n+        if (!\"0\".equals(vIterator2.next()))\n           return NO_MATCH;\n       }\n ", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/agent/parse/NameVersion.java"}, {"additions": 8, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/agent/parse/VersionId.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/agent/parse/VersionId.java", "sha": "74ce4437978298c4ad53e8bb2d8d6806a808d649", "changes": 13, "status": "modified", "deletions": 5, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/agent/parse/VersionId.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f", "patch": "@@ -32,6 +32,7 @@ public VersionId(String version)\n     _version = _parseVersion(version);\n   }\n \n+  @Override\n   public String toString()\n   {\n     return _versionString;\n@@ -53,7 +54,7 @@ public double getVersion()\n         char currChar = _versionString.charAt(currIndex);\n         if ((currChar >= '0') && (currChar <= '9'))\n         {\n-          double addValue = (double) (currChar - '0');\n+          double addValue = (currChar - '0');\n           if (hasDecimal)\n           {\n             // handle digits to right of decimal\n@@ -88,7 +89,7 @@ public double getVersion()\n   }\n \n \n-  public Iterator iterator()\n+  public Iterator<String> iterator()\n   {\n     return new VIterator();\n   }\n@@ -112,7 +113,9 @@ private Entry _parseVersion(String value)\n     while (i < length + 1)\n     {\n       //Ignore spaces. TODO: This should happen only for start and end (trim).\n-      while (Character.isSpace(ch))\n+      // 2006-08-02: -= Simon Lessard =-\n+      //while (Character.isSpace(ch))\n+      while (Character.isWhitespace(ch))\n         ch = data[++i];\n \n       switch (ch)\n@@ -151,7 +154,7 @@ private Entry _parseVersion(String value)\n     Entry next;\n   }\n \n-  private class VIterator implements Iterator\n+  private class VIterator implements Iterator<String>\n   {\n     public VIterator()\n     {\n@@ -168,7 +171,7 @@ public boolean hasNext()\n       return (null != _current);\n     }\n \n-    public Object next()\n+    public String next()\n     {\n       String part = _current.text;\n       _current = _current.next;", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/agent/parse/VersionId.java"}, {"additions": 1, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/application/NavigationHandlerImpl.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/application/NavigationHandlerImpl.java", "sha": "c0e298e70a85bbae4faab71b82e02bd1f4835f6f", "changes": 1, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/application/NavigationHandlerImpl.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f", "patch": "@@ -29,6 +29,7 @@ public NavigationHandlerImpl(NavigationHandler delegate)\n     _dialogPrefix = null;\n   }\n \n+  @Override\n   public void handleNavigation(\n     FacesContext context,\n     String       fromAction,", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/application/NavigationHandlerImpl.java"}, {"additions": 56, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/application/StateManagerImpl.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/application/StateManagerImpl.java", "sha": "792d9b2277e7fef51b17c0db85ac3fc448c709aa", "changes": 86, "status": "modified", "deletions": 30, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/application/StateManagerImpl.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f", "patch": "@@ -169,6 +169,8 @@ static public UIViewRoot restoreViewRoot(\n     return root;\n   }\n \n+  @SuppressWarnings(\"unchecked\")\n+  @Override\n   public SerializedView saveSerializedView(FacesContext context)\n   {\n     if (!isSavingStateInClient(context))\n@@ -183,8 +185,8 @@ public SerializedView saveSerializedView(FacesContext context)\n \n     // See if we're going to use the application view cache for\n     // this request\n-    Map applicationViewCache = null;\n-    Map perSessionApplicationViewCache = null;\n+    Map<String, Object> applicationViewCache = null;\n+    Map<String, Object> perSessionApplicationViewCache = null;\n     if (_useApplicationViewCache(context))\n     {\n       // OK, we are: so find the application cache and\n@@ -225,12 +227,14 @@ public SerializedView saveSerializedView(FacesContext context)\n         assert(cache != null);\n \n         // Store bits of the session as subkeys off of the session\n-        Map stateMap = new SubKeyMap(\n+        Map<String, Object> stateMap = new SubKeyMap(\n                          context.getExternalContext().getSessionMap(),\n                          _VIEW_CACHE_KEY + \".\");\n         // Sadly, we can't save just a SerializedView, because we should\n         // save a serialized object, and SerializedView is a *non*-static\n         // inner class of StateManager\n+        // -= Simon Lessard =-\n+        // FIXME: pageState is never read\n         PageState pageState = new PageState(\n             structure,\n             state,\n@@ -278,12 +282,15 @@ public SerializedView saveSerializedView(FacesContext context)\n     return view;\n   }\n \n+  @Override\n   public void writeState(FacesContext context,\n                          SerializedView state) throws IOException\n   {\n     _delegate.writeState(context, state);\n   }\n \n+  @SuppressWarnings(\"unchecked\")\n+  @Override\n   public UIViewRoot restoreView(FacesContext context, String viewId,\n                                 String renderKitId)\n   {\n@@ -312,8 +319,8 @@ public UIViewRoot restoreView(FacesContext context, String viewId,\n       // Load from the application cache\n       if (_APPLICATION_CACHE_TOKEN.equals(token))\n       {\n-        Map cache = _getApplicationViewCache(context);\n-        Map perSessionCache =\n+        Map<String, Object> cache = _getApplicationViewCache(context);\n+        Map<String, Object> perSessionCache =\n           _getPerSessionApplicationViewCache(context);\n \n         // Synchronize on the application-level cache.\n@@ -336,10 +343,10 @@ public UIViewRoot restoreView(FacesContext context, String viewId,\n       }\n       else\n       {\n-        Map stateMap = new SubKeyMap(\n+        Map<String, Object> stateMap = new SubKeyMap(\n                          context.getExternalContext().getSessionMap(),\n                          _VIEW_CACHE_KEY + \".\");\n-        viewState = (PageState) stateMap.get((String) token);\n+        viewState = (PageState) stateMap.get(token);\n \n         // Make sure that if the view state is present, the cache still\n         // has the token, and vice versa\n@@ -380,7 +387,7 @@ public UIViewRoot restoreView(FacesContext context, String viewId,\n         // newRoot.getChildren().addAll(root.getChildren());\n         // because \"root\"'s child List is being mutated as the List\n         // is traversed.\n-        List temp = new ArrayList(root.getChildCount());\n+        List<UIComponent> temp = new ArrayList<UIComponent>(root.getChildCount());\n         temp.addAll(root.getChildren());\n         newRoot.getChildren().addAll(temp);\n \n@@ -448,6 +455,7 @@ public UIViewRoot restoreView(FacesContext context, String viewId,\n     return null;\n   }\n \n+  @Override\n   public boolean isSavingStateInClient(FacesContext context)\n   {\n     return _delegate.isSavingStateInClient(context);\n@@ -457,22 +465,26 @@ public boolean isSavingStateInClient(FacesContext context)\n   // Protected APIs: we don't want\n   //\n \n+  @Override\n   protected Object getTreeStructureToSave(FacesContext context)\n   {\n     throw new UnsupportedOperationException();\n   }\n \n+  @Override\n   protected Object getComponentStateToSave(FacesContext context)\n   {\n     throw new UnsupportedOperationException();\n   }\n \n+  @Override\n   protected UIViewRoot restoreTreeStructure\n     (FacesContext context, String viewId, String renderKitId)\n   {\n     throw new UnsupportedOperationException();\n   }\n \n+  @Override\n   protected void restoreComponentState\n     (FacesContext context, UIViewRoot viewRoot, String renderKitId)\n   {\n@@ -530,38 +542,41 @@ private int _getCacheSize(FacesContext context)\n   // @todo Map is a bad structure\n   // @todo a static size is bad\n   //\n-  static private Map _getApplicationViewCache(FacesContext context)\n+  @SuppressWarnings(\"unchecked\")\n+  static private Map<String, Object> _getApplicationViewCache(FacesContext context)\n   {\n     synchronized (_APPLICATION_VIEW_CACHE_LOCK)\n     {\n-      Map appMap = context.getExternalContext().getApplicationMap();\n-      Map cache = (Map) appMap.get(_APPLICATION_VIEW_CACHE_KEY);\n+      Map<String, Object> appMap = context.getExternalContext().getApplicationMap();\n+      Map<String, Object> cache = (Map<String, Object>) appMap.get(_APPLICATION_VIEW_CACHE_KEY);\n       if (cache == null)\n       {\n-        cache = new HashMap(128);\n+        cache = new HashMap<String, Object>(128);\n         appMap.put(_APPLICATION_VIEW_CACHE_KEY, cache);\n       }\n \n       return cache;\n     }\n   }\n \n-  static private Map _getPerSessionApplicationViewCache(FacesContext context)\n+  @SuppressWarnings(\"unchecked\")\n+  static private Map<String, Object> _getPerSessionApplicationViewCache(FacesContext context)\n   {\n     ExternalContext external = context.getExternalContext();\n     Object session = external.getSession(true);\n     assert(session != null);\n \n-    Map cache;\n+    Map<String, Object> cache;\n     // Synchronize on the session object to ensure that\n     // we don't ever create two different caches\n     synchronized (session)\n     {\n-      cache = (Map) external.getSessionMap().get(_APPLICATION_VIEW_CACHE_KEY);\n+      Map<String, Object> sessionMap = external.getSessionMap();\n+      cache = (Map<String, Object>) sessionMap.get(_APPLICATION_VIEW_CACHE_KEY);\n       if (cache == null)\n       {\n         cache = _createPerSessionApplicationViewCache();\n-        external.getSessionMap().put(_APPLICATION_VIEW_CACHE_KEY, cache);\n+        sessionMap.put(_APPLICATION_VIEW_CACHE_KEY, cache);\n       }\n     }\n \n@@ -572,9 +587,9 @@ static private Map _getPerSessionApplicationViewCache(FacesContext context)\n   // For the per-session mirror of the application view cache,\n   // use an LRU LinkedHashMap to store the latest 16 pages.\n   //\n-  static private Map _createPerSessionApplicationViewCache()\n+  static private Map<String, Object> _createPerSessionApplicationViewCache()\n   {\n-    return new LRUCache(_MAX_PER_SESSION_APPLICATION_SIZE);\n+    return new LRUCache<String, Object>(_MAX_PER_SESSION_APPLICATION_SIZE);\n   }\n \n   static private final int _MAX_PER_SESSION_APPLICATION_SIZE = 16;\n@@ -648,34 +663,43 @@ static private ResponseStateManager _getResponseStateManager(\n     return kit.getResponseStateManager();\n   }\n \n+  @SuppressWarnings(\"unchecked\")\n   static private void _removeTransientComponents(\n     UIComponent root)\n   {\n-    List components = new ArrayList();\n+    List<UIComponent> components = new ArrayList<UIComponent>();\n     _gatherTransientComponents(root, components);\n-    Iterator iter = components.iterator();\n+    Iterator<UIComponent> iter = components.iterator();\n     while (iter.hasNext())\n     {\n-      UIComponent kid = (UIComponent) iter.next();\n+      UIComponent kid = iter.next();\n       UIComponent parent = kid.getParent();\n       // First, see if its a child\n       if (parent.getChildCount() > 0)\n       {\n-        List children = parent.getChildren();\n+        List<UIComponent> children = parent.getChildren();\n         if (children.remove(kid))\n         {\n           continue;\n         }\n       }\n \n       // Nope, guess it's a facet\n-      Iterator facetNames = parent.getFacets().keySet().iterator();\n-      while (facetNames.hasNext())\n+      // 2006-08-02: -= Simon Lessard\n+      //             Not 1.5 structure and inefficient loop\n+      //             values() is more efficient as you don't have \n+      //             to do a second lookup for the value.\n+      Map<String, UIComponent> facets = parent.getFacets();\n+      for(Iterator<UIComponent> facetIter = facets.values().iterator(); \n+          facetIter.hasNext();)\n       {\n-        String name = (String) facetNames.next();\n-        if (parent.getFacet(name) == kid)\n+        if(facetIter.next() == kid)\n         {\n-          parent.getFacets().remove(name);\n+          facetIter.remove();\n+          // FIXME: -= Simon Lessard\n+          //        Is that continue need to labeled to go all the way up to \n+          //        the first while? Currently it won't cause any problem, but \n+          //        it's a performance loss.\n           continue;\n         }\n       }\n@@ -686,13 +710,14 @@ static private void _removeTransientComponents(\n     }\n   }\n \n+  @SuppressWarnings(\"unchecked\")\n   static private void _gatherTransientComponents(\n-    UIComponent component, List componentsToRemove)\n+    UIComponent component, List<UIComponent> componentsToRemove)\n   {\n-    Iterator kids = component.getFacetsAndChildren();\n+    Iterator<UIComponent> kids = component.getFacetsAndChildren();\n     while (kids.hasNext())\n     {\n-      UIComponent kid = (UIComponent) kids.next();\n+      UIComponent kid = kids.next();\n       // UIXComponentBase doesn't mind transient components\n       // in its saved state, so don't bother with this.\n       if (!(component instanceof UIXComponentBase) &&\n@@ -715,6 +740,7 @@ private SerializedView _getCachedSerializedView(\n                  getRequestMap().get(_CACHED_SERIALIZED_VIEW);\n   }\n \n+  @SuppressWarnings(\"unchecked\")\n   private void _saveCachedSerializedView(\n     FacesContext context, SerializedView state)\n   {", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/application/StateManagerImpl.java"}, {"additions": 44, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/application/Structure.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/application/Structure.java", "sha": "b12c244bdd4c29cc0b6843785e67240ef9fe3064", "changes": 66, "status": "modified", "deletions": 22, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/application/Structure.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f", "patch": "@@ -35,6 +35,22 @@\n  * <p>\n  * @author The Oracle ADF Faces Team\n  */\n+// -= Simon Lessard =-\n+//     Why using an ArrayList as a map again? It is not type-safe.\n+//     Using an object to store the key/value seems like a decent\n+//     compromise memory wise. Or better, I would suggest a TreeMap \n+//     to lower the complexity to O(log(n)) instead of O(n) at \n+//     minimal memory cost. If balancing is still considered too \n+//     expensive and an additional class is not wanted, then parallel\n+//     lists would also do the trick\n+// =-=Adam Winer =-=\n+//   To answer the question:  the explicit intent of this\n+//   class is entirely to produce an optimal, minimally-sized\n+//   structure for state saving.  Everything is iterated through\n+//   straight away.  Type-safety is nearly irrelevant (it's\n+//   one, self-encapsulated structure, with no relevant external API);\n+//   everything is iterated through directly (there is no O(log n) anything)\n+//   relevant.  Of overriding importance here is size and efficiency.\n final class Structure implements Externalizable\n {\n   /**\n@@ -59,33 +75,34 @@ public Structure(UIComponent component)\n   /**\n    * Re-create a component from a structure object\n    */\n+  @SuppressWarnings(\"unchecked\")\n   public UIComponent createComponent()\n     throws ClassNotFoundException, InstantiationException,\n            IllegalAccessException\n   {\n-    Class clazz = ClassLoaderUtils.loadClass(_class);\n+    Class<?> clazz = ClassLoaderUtils.loadClass(_class);\n     UIComponent component = (UIComponent) clazz.newInstance();\n     if (_id != null)\n       component.setId(_id);\n     // Create any facets\n     if (_facets != null)\n     {\n-      Map facets = component.getFacets();\n+      Map<String, UIComponent> facets = component.getFacets();\n       for (int i = 0 ; i < _facets.size(); i += 2)\n       {\n         UIComponent facet = ((Structure) _facets.get(i + 1)).\n                                  createComponent();\n-        facets.put(_facets.get(i), facet);\n+        facets.put((String)_facets.get(i), facet);\n       }\n     }\n \n     // Create any children\n     if (_children != null)\n     {\n-      List children = component.getChildren();\n+      List<UIComponent> children = component.getChildren();\n       for (int i = 0 ; i < _children.size(); i++)\n       {\n-        UIComponent child = ((Structure) _children.get(i)).createComponent();\n+        UIComponent child = _children.get(i).createComponent();\n         children.add(child);\n       }\n     }\n@@ -121,9 +138,14 @@ public void writeExternal(ObjectOutput out) throws IOException\n     else\n     {\n       out.writeShort(_children.size());\n+      \n+      // 2006-08-02: -= Simon Lessard =-\n+      //             get(index) is inefficient if the List ever\n+      //             become something else than ArrayList\n+      // =-=Adam Winer=-=:  yep, so we won't change it to be something else.\n       for (int i = 0; i < _children.size(); i++)\n       {\n-        ((Structure) _children.get(i)).writeExternal(out);\n+        _children.get(i).writeExternal(out);\n       }\n     }\n   }\n@@ -138,7 +160,7 @@ public void readExternal(ObjectInput in)\n     short facetCount = in.readShort();\n     if (facetCount > 0)\n     {\n-      _facets = new ArrayList(facetCount);\n+      _facets = new ArrayList<Object>(facetCount);\n       for (int i = 0; i < facetCount; i += 2)\n       {\n         _facets.add(in.readObject());\n@@ -152,7 +174,7 @@ public void readExternal(ObjectInput in)\n     short childCount = in.readShort();\n     if (childCount > 0)\n     {\n-      _children = new ArrayList(childCount);\n+      _children = new ArrayList<Structure>(childCount);\n       for (int i = 0; i < childCount; i++)\n       {\n         Structure newStruct = new Structure();\n@@ -165,18 +187,17 @@ public void readExternal(ObjectInput in)\n   /**\n    * Store the structure of all the children.\n    */\n-  private List _getChildren(UIComponent component)\n+  @SuppressWarnings(\"unchecked\")\n+  private List<Structure> _getChildren(UIComponent component)\n   {\n     if (component.getChildCount() == 0)\n       return null;\n \n-    List children = component.getChildren();\n-    ArrayList list = new ArrayList(children.size());\n+    List<UIComponent> children = component.getChildren();\n+    ArrayList<Structure> list = new ArrayList<Structure>(children.size());\n \n-    Iterator childIterator = children.iterator();\n-    while (childIterator.hasNext())\n+    for(UIComponent child : children)\n     {\n-      UIComponent child = (UIComponent) childIterator.next();\n       if ((child != null) && !child.isTransient())\n       {\n         list.add(new Structure(child));\n@@ -193,9 +214,10 @@ private List _getChildren(UIComponent component)\n   /**\n    * Store the structure of all the facets.\n    */\n-  private List _getFacets(UIComponent component)\n+  @SuppressWarnings(\"unchecked\")\n+  private List<Object> _getFacets(UIComponent component)\n   {\n-    Iterator facetNames;\n+    Iterator<String> facetNames;\n     if (component instanceof UIXComponentBase)\n     {\n       facetNames = ((UIXComponentBase) component).getFacetNames();\n@@ -208,12 +230,12 @@ private List _getFacets(UIComponent component)\n     if (!facetNames.hasNext())\n       return null;\n \n-    Map facets = component.getFacets();\n-    ArrayList list = new ArrayList(facets.size() * 2);\n+    Map<String, UIComponent> facets = component.getFacets();\n+    ArrayList<Object> list = new ArrayList<Object>(facets.size() * 2);\n     while (facetNames.hasNext())\n     {\n-      Object name = facetNames.next();\n-      UIComponent facet = (UIComponent) facets.get(name);\n+      String name = facetNames.next();\n+      UIComponent facet = facets.get(name);\n       if ((facet != null) && !facet.isTransient())\n       {\n         list.add(name);\n@@ -245,8 +267,8 @@ static private String _unabbreviateClass(String clazz)\n \n   private String _class;\n   private String _id;\n-  private List _facets;\n-  private List _children;\n+  private List<Object> _facets;\n+  private List<Structure> _children;\n \n \n   static private final String _COMMON_CLASS_PREFIX =", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/application/Structure.java"}, {"additions": 21, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/application/ViewHandlerImpl.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/application/ViewHandlerImpl.java", "sha": "84fd93afcb405dc2a7e7f58d95226fcfaaf95a70", "changes": 34, "status": "modified", "deletions": 13, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/application/ViewHandlerImpl.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f", "patch": "@@ -64,20 +64,23 @@ public ViewHandlerImpl(\n     ViewHandler delegate)\n   {\n     _delegate = delegate;\n-    _timestamps = new HashMap();\n+    _timestamps = new HashMap<String, Long>();\n     _loadInternalViews();\n   }\n \n+  @Override\n   public Locale calculateLocale(FacesContext context)\n   {\n     return _delegate.calculateLocale(context);\n   }\n \n+  @Override\n   public String calculateRenderKitId(FacesContext context)\n   {\n     return _delegate.calculateRenderKitId(context);\n   }\n \n+  @Override\n   public UIViewRoot createView(FacesContext context, String viewId)\n   {\n     _initIfNeeded(context);\n@@ -98,7 +101,7 @@ else if (_checkTimestamp(context))\n         String path = _getPath(viewId);\n         synchronized (_timestamps)\n         {\n-          Long ts = (Long) _timestamps.get(path);\n+          Long ts = _timestamps.get(path);\n           if (ts != _NOT_FOUND)\n           {\n             URL url = context.getExternalContext().getResource(path);\n@@ -116,6 +119,7 @@ else if (_checkTimestamp(context))\n     return _delegate.createView(context, viewId);\n   }\n \n+  @Override\n   public String getActionURL(FacesContext context, String viewId)\n   {\n     String actionURL = _delegate.getActionURL(context, viewId);\n@@ -130,6 +134,7 @@ public String getActionURL(FacesContext context, String viewId)\n     return actionURL;\n   }\n \n+  @Override\n   public String getResourceURL(\n     FacesContext context,\n     String       path)\n@@ -138,6 +143,7 @@ public String getResourceURL(\n   }\n \n \n+  @Override\n   public void renderView(\n     FacesContext context,\n     UIViewRoot   viewToRender) throws IOException, FacesException\n@@ -181,6 +187,7 @@ public void renderView(\n     }\n   }\n \n+  @Override\n   public UIViewRoot restoreView(\n     FacesContext context,\n     String       viewId)\n@@ -216,7 +223,7 @@ public UIViewRoot restoreView(\n         String path = _getPath(viewId);\n         synchronized (_timestamps)\n         {\n-          Long ts = (Long)_timestamps.get(path);\n+          Long ts = _timestamps.get(path);\n           if (ts != _NOT_FOUND)\n           {\n             URL url = context.getExternalContext().getResource(path);\n@@ -261,6 +268,7 @@ else if ((ts == null) ||\n     return result;\n   }\n \n+  @Override\n   public void writeState(\n     FacesContext context) throws IOException\n   {\n@@ -294,10 +302,10 @@ synchronized private void _initIfNeeded(FacesContext context)\n         try\n         {\n           ClassLoader loader = Thread.currentThread().getContextClassLoader();\n-          Class c = loader.loadClass(alternateViewHandler);\n+          Class<?> c = loader.loadClass(alternateViewHandler);\n           try\n           {\n-            Constructor constructor = c.getConstructor(\n+            Constructor<?> constructor = c.getConstructor(\n                new Class[]{ViewHandler.class});\n             viewHandlerInstance =\n                (ViewHandler) constructor.newInstance(new Object[]{_delegate});\n@@ -393,16 +401,16 @@ private Long _getLastModified(URL url) throws IOException\n   //\n   private void _loadInternalViews()\n   {\n-    _internalViews = new HashMap();\n-    List<URL> list = new ArrayList();\n+    _internalViews = new HashMap<String, InternalView>();\n+    List<URL> list = new ArrayList<URL>();\n     ClassLoader loader = _getClassLoader();\n     try\n     {\n-      Enumeration en = loader.getResources(\n+      Enumeration<URL> en = loader.getResources(\n                \"META-INF/org.apache.myfaces.trinidad.render.InternalView.properties\");\n       while (en.hasMoreElements())\n       {\n-        list.add((URL) en.nextElement());\n+        list.add(en.nextElement());\n       }\n \n       // And, for some temporary backwards compatibility, also load\n@@ -411,7 +419,7 @@ private void _loadInternalViews()\n                \"META-INF/org.apache.myfaces.trinidad.InternalView.properties\");\n       while (en.hasMoreElements())\n       {\n-        list.add((URL) en.nextElement());\n+        list.add(en.nextElement());\n       }\n \n \n@@ -432,11 +440,11 @@ private void _loadInternalViews()\n         _LOG.fine(\"Loading internal views from {0}\",  url);\n         properties.load(url.openStream());\n \n-        for (Map.Entry entry : properties.entrySet())\n+        for (Map.Entry<Object, Object> entry : properties.entrySet())\n         {\n           String name = (String) entry.getKey();\n           String className = (String) entry.getValue();\n-          Class clazz = loader.loadClass(className);\n+          Class<?> clazz = loader.loadClass(className);\n           InternalView view = (InternalView) clazz.newInstance();\n           _internalViews.put(name, view);\n         }\n@@ -472,7 +480,7 @@ static private ClassLoader _getClassLoader()\n   private Boolean           _checkTimestamp;\n   // Mostly final, but see _initIfNeeded()\n   private ViewHandler       _delegate;\n-  private final Map         _timestamps;\n+  private final Map<String, Long> _timestamps;\n   private boolean           _inited;\n   private Map<String, InternalView> _internalViews;\n ", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/application/ViewHandlerImpl.java"}, {"additions": 1, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/bean/UIXEditableFacesBeanImpl.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/bean/UIXEditableFacesBeanImpl.java", "sha": "a6a2dea362868eec7eae6ba2f5ab5c030c740c5d", "changes": 1, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/bean/UIXEditableFacesBeanImpl.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f", "patch": "@@ -24,6 +24,7 @@ public UIXEditableFacesBeanImpl()\n   {\n   }\n \n+  @Override\n   public void setProperty(PropertyKey key, Object value)\n   {\n     super.setProperty(key, value);", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/bean/UIXEditableFacesBeanImpl.java"}, {"additions": 1, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/bean/UIXFacesBeanImpl.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/bean/UIXFacesBeanImpl.java", "sha": "4b8b5b33d263bc30c941f4fdab907550da062e38", "changes": 1, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/bean/UIXFacesBeanImpl.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f", "patch": "@@ -25,6 +25,7 @@ public UIXFacesBeanImpl()\n   {\n   }\n \n+  @Override\n   public Type getType()\n   {\n     return _type;", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/bean/UIXFacesBeanImpl.java"}, {"additions": 3, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/binding/AccessKeyBinding.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/binding/AccessKeyBinding.java", "sha": "08015b50515ba443c6e8aed8daca8c0334ea2fe1", "changes": 4, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/binding/AccessKeyBinding.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f", "patch": "@@ -42,6 +42,7 @@ public AccessKeyBinding(ValueBinding base)\n     super(base);\n   }\n \n+  @Override\n   public Object getValue(FacesContext context)\n   {\n     Object o = super.getValue(context);\n@@ -56,7 +57,8 @@ public Object getValue(FacesContext context)\n     return new Character(text.charAt(accessKeyIndex + 1));\n   }\n \n-  public Class getType(FacesContext context)\n+  @Override\n+  public Class<?> getType(FacesContext context)\n   {\n     return Character.class;\n   }", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/binding/AccessKeyBinding.java"}, {"additions": 3, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/binding/StripAccessKeyBinding.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/binding/StripAccessKeyBinding.java", "sha": "f0f095cb19c5de2057c356f397bae45e61ae000b", "changes": 4, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/binding/StripAccessKeyBinding.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f", "patch": "@@ -42,6 +42,7 @@ public StripAccessKeyBinding(ValueBinding base)\n     super(base);\n   }\n \n+  @Override\n   public Object getValue(FacesContext context)\n   {\n     Object o = super.getValue(context);\n@@ -56,7 +57,8 @@ public Object getValue(FacesContext context)\n     return StringUtils.stripMnemonic(text);\n   }\n \n-  public Class getType(FacesContext context)\n+  @Override\n+  public Class<?> getType(FacesContext context)\n   {\n     return String.class;\n   }", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/binding/StripAccessKeyBinding.java"}, {"additions": 5, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/binding/ValueBindingAdapter.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/binding/ValueBindingAdapter.java", "sha": "0de21d7b24551471cb01bdcd283e64005095ee15", "changes": 6, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/binding/ValueBindingAdapter.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f", "patch": "@@ -36,22 +36,26 @@ protected ValueBindingAdapter(ValueBinding base)\n     _base = base;\n   }\n \n+  @Override\n   public Object getValue(FacesContext context)\n   {\n     return _base.getValue(context);\n   }\n \n+  @Override\n   public void setValue(FacesContext context, Object value)\n   {\n     throw new PropertyNotFoundException(\"Can't set value\");\n   }\n   \n+  @Override\n   public boolean isReadOnly(FacesContext context)\n   {\n     return true;\n   }\n \n-  public Class getType(FacesContext context)\n+  @Override\n+  public Class<?> getType(FacesContext context)\n   {\n     return _base.getType(context);\n   }", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/binding/ValueBindingAdapter.java"}, {"additions": 22, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/change/BaseChangeManager.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/change/BaseChangeManager.java", "sha": "3a37b9f56441c2f7886c7be35ccee996a79ed453", "changes": 39, "status": "modified", "deletions": 17, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/change/BaseChangeManager.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f", "patch": "@@ -57,6 +57,7 @@\n    * @todo =-=pu : Maybe we need to allow adding Changes for specific viewId's -\n    *  BIBeans req. - external customizer dialog\n    */\n+  @Override\n   public void addComponentChange(\n     FacesContext facesContext,\n     UIComponent uiComponent,\n@@ -94,6 +95,7 @@ public void addComponentChange(\n   /**\n    * {@inheritDoc}\n    */\n+  @Override\n   public void addDocumentChange(\n     FacesContext facesContext,\n     UIComponent uiComponent,\n@@ -140,22 +142,23 @@ private void _addDocumentChangeImpl(\n   /**\n    * {@inheritDoc}\n    */\n-  public Iterator getComponentChanges(\n+  @Override\n+  public Iterator<ComponentChange> getComponentChanges(\n     FacesContext facesContext,\n     UIComponent uiComponent)\n   {\n     if (uiComponent == null)\n       return null;\n \n     String viewId = facesContext.getViewRoot().getViewId();\n-    Map componentToChangesMap =\n+    Map<String, List<ComponentChange>> componentToChangesMap =\n        getComponentToChangesMapForView(facesContext, viewId, false);\n \n     if (componentToChangesMap == null)\n       return null;\n \n     String uniqueIdForComponent = _getUniqueIdForComponent(uiComponent);\n-    List changesList = (List) componentToChangesMap.get(uniqueIdForComponent);\n+    List<ComponentChange> changesList = componentToChangesMap.get(uniqueIdForComponent);\n     if (changesList == null)\n       return null;\n \n@@ -165,10 +168,11 @@ public Iterator getComponentChanges(\n   /**\n    * {@inheritDoc}\n    */\n-  public Iterator getComponentIdsWithChanges(FacesContext facesContext)\n+  @Override\n+  public Iterator<String> getComponentIdsWithChanges(FacesContext facesContext)\n   {\n     String viewId = facesContext.getViewRoot().getViewId();\n-    Map componentToChangesMap =\n+    Map<String, List<ComponentChange>> componentToChangesMap =\n        getComponentToChangesMapForView(facesContext, viewId, false);\n \n     if (componentToChangesMap == null)\n@@ -187,7 +191,7 @@ public Iterator getComponentIdsWithChanges(FacesContext facesContext)\n    *        already present\n    * @return Map of componentID tokens to Lists of Changes\n    */\n-  protected abstract Map getComponentToChangesMapForView(\n+  protected abstract Map<String, List<ComponentChange>> getComponentToChangesMapForView(\n     FacesContext facesContext,\n     String viewId,\n     boolean createIfNecessary);\n@@ -203,18 +207,18 @@ private void _addComponentChangeImpl(\n   {\n     String viewId = facesContext.getViewRoot().getViewId();\n \n-    Map componentToChangesMap = getComponentToChangesMapForView(facesContext,\n+    Map<String, List<ComponentChange>> componentToChangesMap = getComponentToChangesMapForView(facesContext,\n                                                                 viewId,\n                                                                 true);\n \n     String uniqueIdForComponent = _getUniqueIdForComponent(uiComponent);\n \n-    List changeListForComponent =\n-      (List) componentToChangesMap.get(uniqueIdForComponent);\n+    List<ComponentChange> changeListForComponent = \n+      componentToChangesMap.get(uniqueIdForComponent);\n \n     if (changeListForComponent == null)\n     {\n-      changeListForComponent = new LinkedList();\n+      changeListForComponent = new LinkedList<ComponentChange>();\n       componentToChangesMap.put(uniqueIdForComponent, changeListForComponent);\n     }\n \n@@ -283,11 +287,11 @@ private Node _getComponentNode(\n   {\n     if (document instanceof DocumentTraversal)\n     {\n-      List idPath = _getIdPath(component);\n+      List<String> idPath = _getIdPath(component);\n \n       if (!idPath.isEmpty())\n       {\n-        Iterator pathIds = idPath.iterator();\n+        Iterator<String> pathIds = idPath.iterator();\n \n         DocumentTraversal traversalFactory = (DocumentTraversal)document;\n         TreeWalker walker = traversalFactory.createTreeWalker(\n@@ -296,9 +300,9 @@ private Node _getComponentNode(\n                                    null,\n                                    true);\n \n-        Node currElement = (Element)walker.getCurrentNode();\n+        Node currElement = walker.getCurrentNode();\n         Node stopElement = walker.getRoot();\n-        String neededID = (String)pathIds.next();\n+        String neededID = pathIds.next();\n \n         do\n         {\n@@ -319,7 +323,7 @@ private Node _getComponentNode(\n                 return currElement;\n \n               // update the id we need\n-              neededID = (String)pathIds.next();\n+              neededID = pathIds.next();\n \n               // don't pop back up to this parent\n               stopElement = currElement;\n@@ -391,15 +395,16 @@ private Node _getNextNode(\n    * @param component\n    * @return\n    */\n-  private List _getIdPath(UIComponent component)\n+  @SuppressWarnings(\"unchecked\")\n+  private List<String> _getIdPath(UIComponent component)\n   {\n     String componentID = component.getId();\n \n     // we need an ID\n     if ((componentID == null) || (componentID.length() == 0))\n       return Collections.EMPTY_LIST;\n \n-    LinkedList pathList = new LinkedList();\n+    LinkedList<String> pathList = new LinkedList<String>();\n     pathList.addFirst(componentID);\n \n     UIComponent currAncestor = component.getParent();", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/change/BaseChangeManager.java"}, {"additions": 5, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/change/NullChangeManager.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/change/NullChangeManager.java", "sha": "a71972d43be8f17a2eb6873e0e41fe33b97ecc64", "changes": 7, "status": "modified", "deletions": 2, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/change/NullChangeManager.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f", "patch": "@@ -34,6 +34,7 @@\n   /**\n    * {@inheritDoc}\n    */\n+  @Override\n   public void addComponentChange(\n     FacesContext facesContext,\n     UIComponent uiComponent,\n@@ -45,7 +46,8 @@ public void addComponentChange(\n   /**\n    * {@inheritDoc}\n    */\n-  public Iterator getComponentChanges(FacesContext facesContext,\n+  @Override\n+  public Iterator<ComponentChange> getComponentChanges(FacesContext facesContext,\n                              UIComponent uiComponent)\n   {\n     return null;\n@@ -54,7 +56,8 @@ public Iterator getComponentChanges(FacesContext facesContext,\n   /**\n    * {@inheritDoc}\n    */\n-  public Iterator getComponentIdsWithChanges(FacesContext facesContext)\n+  @Override\n+  public Iterator<String> getComponentIdsWithChanges(FacesContext facesContext)\n   {\n     return null;\n   }", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/change/NullChangeManager.java"}, {"additions": 12, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/change/SessionChangeManager.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/change/SessionChangeManager.java", "sha": "abbb8765171284e354e68f71b4bf0ae91a3a4044", "changes": 18, "status": "modified", "deletions": 6, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/change/SessionChangeManager.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f", "patch": "@@ -17,10 +17,12 @@\n package org.apache.myfaces.trinidadinternal.change;\n \n import java.util.HashMap;\n+import java.util.List;\n import java.util.Map;\n \n import javax.faces.context.FacesContext;\n \n+import org.apache.myfaces.trinidad.change.ComponentChange;\n import org.w3c.dom.Document;\n \n /**\n@@ -42,29 +44,32 @@\n    *        already present\n    * @return Map of componentID tokens to Lists of Changes\n    */\n-  protected Map getComponentToChangesMapForView(\n+  @SuppressWarnings(\"unchecked\")\n+  @Override\n+  protected Map<String, List<ComponentChange>> getComponentToChangesMapForView(\n     FacesContext facesContext,\n     String viewId,\n     boolean createIfNecessary)\n   {\n-    Map sessMap = facesContext.getExternalContext().getSessionMap();\n+    Map<String, Object> sessMap = facesContext.getExternalContext().getSessionMap();\n     //pu: Get datastructure #1 described at the end of this file.\n-    Map viewToChangesMap = (Map) sessMap.get(_CHANGE_KEY);\n+    Map<String, Map<String, List<ComponentChange>>> viewToChangesMap = \n+      (Map<String, Map<String, List<ComponentChange>>>)sessMap.get(_CHANGE_KEY);\n     if (viewToChangesMap == null)\n     {\n       if (!createIfNecessary)\n         return null;\n-      viewToChangesMap = new HashMap();\n+      viewToChangesMap = new HashMap<String, Map<String, List<ComponentChange>>>();\n       sessMap.put(_CHANGE_KEY, viewToChangesMap);\n     }\n     \n     //pu: Get datastructure #2 described at the end of this file.\n-    Map componentToChangesMap = (Map) viewToChangesMap.get(viewId);\n+    Map<String, List<ComponentChange>> componentToChangesMap = viewToChangesMap.get(viewId);\n     if (componentToChangesMap == null)\n     {\n       if (!createIfNecessary)\n         return null;\n-      componentToChangesMap = new HashMap();\n+      componentToChangesMap = new HashMap<String, List<ComponentChange>>();\n       viewToChangesMap.put(viewId, componentToChangesMap);\n     }\n     return componentToChangesMap;\n@@ -73,6 +78,7 @@ protected Map getComponentToChangesMapForView(\n   /** \n    * We don't support DocumentAspect persistence\n    */\n+  @Override\n   protected Document getDocument(FacesContext context)\n   {\n     return null;", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/change/SessionChangeManager.java"}, {"additions": 38, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/context/DialogServiceImpl.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/context/DialogServiceImpl.java", "sha": "a6533526f9044219cdc3e590fd44a6d4f87f05f8", "changes": 59, "status": "modified", "deletions": 21, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/context/DialogServiceImpl.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f", "patch": "@@ -46,17 +46,19 @@ public DialogServiceImpl(RequestContextImpl context)\n     _context = context;\n   }\n \n+  @SuppressWarnings(\"unchecked\")\n+  @Override\n   public void pushView(UIViewRoot viewRoot)\n   {\n     FacesContext context = _getFacesContext();\n     Object savedOld = StateManagerImpl.saveViewRoot(context, viewRoot);\n \n-    List list = (List) _getPageFlowScope().get(_PUSHED_VIEWS_KEY);\n+    List<Object> list = (List<Object>) _getPageFlowScope().get(_PUSHED_VIEWS_KEY);\n     if (list == null)\n-      list = new ArrayList(1);\n+      list = new ArrayList<Object>(1);\n     else\n     {\n-      List tmp = new ArrayList(list.size() + 1);\n+      List<Object> tmp = new ArrayList<Object>(list.size() + 1);\n       tmp.addAll(list);\n       list = tmp;\n     }\n@@ -67,6 +69,8 @@ public void pushView(UIViewRoot viewRoot)\n     _LOG.fine(\"Pushed view {0}\", viewRoot.getViewId());\n   }\n \n+  @SuppressWarnings(\"unchecked\")\n+  @Override\n   public void popView(boolean navigateToPoppedView)\n   {\n     FacesContext context = _getFacesContext();\n@@ -86,7 +90,7 @@ public void popView(boolean navigateToPoppedView)\n     }\n \n     // Make a copy of the List;  never mutate the original list\n-    List list = (List) _getPageFlowScope().get(_PUSHED_VIEWS_KEY);\n+    List<Object> list = (List<Object>) _getPageFlowScope().get(_PUSHED_VIEWS_KEY);\n     if (list == null)\n     {\n       // For starters, this should only happen if we weren't navigating\n@@ -100,18 +104,20 @@ else if (list.size() == 1)\n     }\n     else\n     {\n-      list = new ArrayList(list);\n+      list = new ArrayList<Object>(list);\n       list.remove(list.size() - 1);\n       _getPageFlowScope().put(_PUSHED_VIEWS_KEY, list);\n     }\n   }\n \n+  @SuppressWarnings(\"unchecked\")\n+  @Override\n   public UIViewRoot peekView()\n   {\n     FacesContext context = _getFacesContext();\n     Object savedRoot = null;\n \n-    List list = (List) _getPageFlowScope().get(_PUSHED_VIEWS_KEY);\n+    List<Object> list = (List<Object>) _getPageFlowScope().get(_PUSHED_VIEWS_KEY);\n     if (list != null)\n       savedRoot = list.get(list.size() - 1);\n \n@@ -140,8 +146,10 @@ public UIViewRoot peekView()\n     return null;\n   }\n \n+  @SuppressWarnings(\"unchecked\")\n+  @Override\n   public boolean returnFromDialog(Object returnValue,\n-                                  Map returnParameters)\n+                                  Map<Object, Object> returnParameters)\n   {\n     FacesContext context = _getFacesContext();\n     context.getExternalContext().getSessionMap().\n@@ -172,7 +180,7 @@ public boolean returnFromDialog(Object returnValue,\n     // do that;  we'll mark the response as complete, because we'll need\n     // the AdfFacesFilter to re-execute the faces lifecycle with the\n     // new parameters\n-    Map launchParameters = (Map)\n+    Map<Object, Object> launchParameters = (Map<Object, Object>)\n       poppedView.getAttributes().get(RequestContextImpl.LAUNCH_PARAMETERS);\n \n     if (launchParameters != null)\n@@ -181,7 +189,7 @@ public boolean returnFromDialog(Object returnValue,\n       // AdfFacesFilterImpl and ViewHandlerImpl\n       poppedView.getAttributes().remove(RequestContextImpl.LAUNCH_PARAMETERS);\n \n-      Map requestMap = context.getExternalContext().getRequestMap();\n+      Map<String, Object> requestMap = context.getExternalContext().getRequestMap();\n       requestMap.put(RequestContextImpl.LAUNCH_PARAMETERS, launchParameters);\n       requestMap.put(RequestContextImpl.LAUNCH_VIEW, poppedView);\n \n@@ -194,12 +202,14 @@ public boolean returnFromDialog(Object returnValue,\n \n   }\n \n+  @SuppressWarnings(\"unchecked\")\n+  @Override\n   public ReturnEvent getReturnEvent(UIComponent source)\n   {\n     FacesContext context = _getFacesContext();\n     if (TrinidadFilterImpl.isExecutingDialogReturn(context))\n     {\n-      Map parameterMap = context.getExternalContext().getRequestParameterMap();\n+      Map<String, Object> parameterMap = context.getExternalContext().getRequestParameterMap();\n       Object returnParam = parameterMap.get(_RETURN_PARAM);\n       if (returnParam == null)\n         return null;\n@@ -225,11 +235,11 @@ public ReturnEvent getReturnEvent(UIComponent source)\n              remove(_DIALOG_RETURN_KEY);\n \n     Object returnValue = null;\n-    Map    returnParams = null;\n+    Map<Object, Object> returnParams = null;\n     if (o != null)\n     {\n       returnValue = ((Object[]) o)[0];\n-      returnParams = (Map) ((Object[]) o)[1];\n+      returnParams = (Map<Object, Object>)((Object[]) o)[1];\n     }\n \n     ReturnEvent returnEvent =\n@@ -241,6 +251,7 @@ public ReturnEvent getReturnEvent(UIComponent source)\n     return returnEvent;\n   }\n \n+  @Override\n   public void queueLaunchEvent(UIViewRoot viewRoot)\n   {\n     UIComponent source = getCurrentLaunchSource();\n@@ -254,9 +265,10 @@ public void queueLaunchEvent(UIViewRoot viewRoot)\n     }\n   }\n \n+  @Override\n   public void queueReturnEvent(\n     Object returnValue,\n-    Map    returnParams)\n+    Map<Object, Object> returnParams)\n   {\n     UIComponent source = getCurrentLaunchSource();\n     if (source == null)\n@@ -274,15 +286,17 @@ public void queueReturnEvent(\n    * Launch a dialog.\n    * @todo Don't save parameters for state-saving, page-flow scope, etc.\n    */\n+  @SuppressWarnings(\"unchecked\")\n+  @Override\n   public void launchDialog(\n     UIViewRoot  dialogRoot,\n-    Map         dialogParameters,\n+    Map<String, Object> dialogParameters,\n     UIComponent source,\n     boolean     useWindow,\n-    Map         windowProperties)\n+    Map<String, Object> windowProperties)\n   {\n     if (dialogParameters == null)\n-      dialogParameters = new HashMap();\n+      dialogParameters = new HashMap<String, Object>();\n \n     FacesContext context = _getFacesContext();\n \n@@ -323,7 +337,7 @@ public void launchDialog(\n       // Save the parameters used to launch the dialog so we can\n       // simulate a postback when coming back to the dialog;  and\n       // write in a \"returnId\" with the \"id\" that will be used.\n-      Map savedRequestParameters = new HashMap();\n+      Map<String, Object> savedRequestParameters = new HashMap<String, Object>();\n       savedRequestParameters.putAll(\n             context.getExternalContext().getRequestParameterValuesMap());\n       if (source != null)\n@@ -365,7 +379,8 @@ private FacesContext _getFacesContext()\n     return _context.__getFacesContext();\n   }\n \n-  private Map _getPageFlowScope()\n+  @SuppressWarnings(\"unchecked\")\n+  private Map<String, Object> _getPageFlowScope()\n   {\n     return _context.getPageFlowScope();\n   }\n@@ -374,7 +389,7 @@ static private DialogRenderKitService _getDialogRenderKitService(\n     FacesContext context)\n   {\n     RenderKit rk = context.getRenderKit();\n-    DialogRenderKitService service = (DialogRenderKitService)\n+    DialogRenderKitService service = \n        Service.getService(rk, DialogRenderKitService.class);\n \n     if (service == null)\n@@ -391,15 +406,16 @@ static private DialogRenderKitService _getDialogRenderKitService(\n    * Execute any \"binding\" attributes so that a popped view\n    * is properly set up\n    */\n+  @SuppressWarnings(\"unchecked\")\n   private void _executeBindings(FacesContext context, UIComponent component)\n   {\n     ValueBinding binding = component.getValueBinding(\"binding\");\n     if (binding != null)\n       binding.setValue(context, component);\n \n-    Iterator kids = component.getFacetsAndChildren();\n+    Iterator<UIComponent> kids = component.getFacetsAndChildren();\n     while (kids.hasNext())\n-      _executeBindings(context, (UIComponent) kids.next());\n+      _executeBindings(context, kids.next());\n   }\n \n   private RequestContextImpl _context;\n@@ -417,6 +433,7 @@ public InternalLaunch(UIComponent source,\n       super(source, viewRoot);\n     }\n \n+    @Override\n     public void launchDialog(boolean useWindow)\n     {\n       RequestContext afContext = RequestContext.getCurrentInstance();", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/context/DialogServiceImpl.java"}, {"additions": 46, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/context/ExternalContextDecorator.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/context/ExternalContextDecorator.java", "sha": "6b7c13d9091fac2a4d58da8340bb2e78bf509365", "changes": 50, "status": "modified", "deletions": 4, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/context/ExternalContextDecorator.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f", "patch": "@@ -35,175 +35,217 @@\n  */\n abstract public class ExternalContextDecorator extends ExternalContext\n {\n+  @Override\n   public void dispatch(String path) throws IOException\n   {\n     getExternalContext().dispatch(path);\n   }\n \n-\n+  @Override\n   public Object getContext()\n   { \n     return getExternalContext().getContext();\n   }\n   \n+  @Override\n   public Object getRequest()\n   {\n     return getExternalContext().getRequest(); \n   }\n   \n+  @Override\n   public Object getResponse()\n   {\n     return getExternalContext().getResponse();\n   }\n   \n+  @Override\n   public Object getSession(boolean create)\n   {\n     return getExternalContext().getSession(create);\n   }\n   \n+  @Override\n   public String getRequestContextPath()\n   {\n     return getExternalContext().getRequestContextPath();\n   }\n \n+  @Override\n   public String getRequestPathInfo()\n   {\n     return getExternalContext().getRequestPathInfo();\n   }\n \n+  @Override\n   public String getRequestServletPath()\n   {\n     return getExternalContext().getRequestServletPath();\n   }\n \n+  @Override\n   public String getInitParameter(String name)\n   {\n     return getExternalContext().getInitParameter(name);\n   }\n   \n+  @Override\n   public String encodeResourceURL(String url)\n   {\n     return getExternalContext().encodeResourceURL(url);\n   }\n \n+  @Override\n   public String encodeActionURL(String url)\n   {\n     return getExternalContext().encodeActionURL(url);\n   }\n \n+  @Override\n   public String encodeNamespace(String ns)\n   {\n     return getExternalContext().encodeNamespace(ns);\n   }\n \n+  @Override\n   public String getAuthType()\n   {\n     return getExternalContext().getAuthType();\n   }\n \n+  @Override\n   public String getRemoteUser()\n   {\n     return getExternalContext().getRemoteUser();\n   }\n \n+  @Override\n   public Principal getUserPrincipal()\n   {\n     return getExternalContext().getUserPrincipal();\n   }\n \n+  @Override\n   public boolean isUserInRole(String role)\n   {\n     return getExternalContext().isUserInRole(role);\n   }\n \n+  @Override\n   public URL getResource(String path) throws MalformedURLException\n   {\n     return getExternalContext().getResource(path);\n   }\n \n+  @Override\n   public InputStream getResourceAsStream(String path)\n   {\n     return getExternalContext().getResourceAsStream(path);\n   }\n \n+  @SuppressWarnings(\"unchecked\")\n+  @Override\n   public Set getResourcePaths(String path)\n   {\n     return getExternalContext().getResourcePaths(path);\n   }\n \n+  @SuppressWarnings(\"unchecked\")\n+  @Override\n   public Map getRequestParameterMap()\n   {\n     return getExternalContext().getRequestParameterMap();\n   }\n \n+  @SuppressWarnings(\"unchecked\")\n+  @Override\n   public Map getRequestParameterValuesMap()\n   {\n     return getExternalContext().getRequestParameterValuesMap();\n   }\n \n+  @SuppressWarnings(\"unchecked\")\n+  @Override\n   public Iterator getRequestParameterNames()\n   {\n     return getExternalContext().getRequestParameterNames();\n   }\n \n+  @SuppressWarnings(\"unchecked\")\n+  @Override\n   public Map getRequestCookieMap()\n   {\n     return getExternalContext().getRequestCookieMap();\n   }\n \n+  @SuppressWarnings(\"unchecked\")\n+  @Override\n   public Map getRequestHeaderMap()\n   {\n     return getExternalContext().getRequestHeaderMap();\n   }\n \n+  @SuppressWarnings(\"unchecked\")\n+  @Override\n   public Map getRequestHeaderValuesMap()\n   {\n     return getExternalContext().getRequestHeaderValuesMap();\n   }\n \n-\n+  @SuppressWarnings(\"unchecked\")\n+  @Override\n   public Map getInitParameterMap()\n   {\n     return getExternalContext().getInitParameterMap();\n   }\n \n+  @SuppressWarnings(\"unchecked\")\n+  @Override\n   public Map getApplicationMap()\n   {\n     return getExternalContext().getApplicationMap();\n   }\n \n+  @SuppressWarnings(\"unchecked\")\n+  @Override\n   public Map getSessionMap()\n   {\n     return getExternalContext().getSessionMap();\n   }\n \n+  @SuppressWarnings(\"unchecked\")\n+  @Override\n   public Map getRequestMap()\n   {\n     return getExternalContext().getRequestMap();\n   }\n \n-\n+  @Override\n   public Locale getRequestLocale()\n   {\n     return getExternalContext().getRequestLocale();\n   }\n \n+  @SuppressWarnings(\"unchecked\")\n+  @Override\n   public Iterator getRequestLocales()\n   {\n     return getExternalContext().getRequestLocales();\n   }\n \n-\n+  @Override\n   public void log(String message)\n   {\n     getExternalContext().log(message);\n   }\n \n+  @Override\n   public void log(String message, Throwable t)\n   {\n     getExternalContext().log(message, t);\n   }\n \n+  @Override\n   public void redirect(String url) throws IOException\n   {\n     getExternalContext().redirect(url);", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/context/ExternalContextDecorator.java"}, {"additions": 33, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/context/FacesContextFactoryImpl.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/context/FacesContextFactoryImpl.java", "sha": "71f30ad14fc96115dcf11e23f398e941d29c7411", "changes": 35, "status": "modified", "deletions": 2, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/context/FacesContextFactoryImpl.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f", "patch": "@@ -48,8 +48,12 @@ public FacesContextFactoryImpl(FacesContextFactory factory)\n     _factory = factory;\n   }\n \n-  public FacesContext getFacesContext(Object context, Object request,\n-                                      Object response, Lifecycle lifecycle)\n+  @Override\n+  public FacesContext getFacesContext(\n+      Object context,\n+      Object request,\n+      Object response, \n+      Lifecycle lifecycle)\n   {\n     return new CacheRenderKit(_factory.getFacesContext(context,\n                                                        request,\n@@ -66,36 +70,46 @@ public CacheRenderKit(FacesContext base)\n       setCurrentInstance(this);\n     }\n \n+    @Override\n     public Application getApplication()\n     {\n       return _base.getApplication();\n     }\n \n+    @SuppressWarnings(\"unchecked\")\n+    @Override\n     public Iterator getClientIdsWithMessages()\n     {\n       return _base.getClientIdsWithMessages();\n     }\n \n+    @Override\n     public ExternalContext getExternalContext()\n     {\n       return _external;\n     }\n \n+    @Override\n     public FacesMessage.Severity getMaximumSeverity()\n     {\n       return _base.getMaximumSeverity();\n     }\n \n+    @SuppressWarnings(\"unchecked\")\n+    @Override\n     public Iterator getMessages()\n     {\n       return _base.getMessages();\n     }\n \n+    @SuppressWarnings(\"unchecked\")\n+    @Override\n     public Iterator getMessages(String clientId)\n     {\n       return _base.getMessages(clientId);\n     }\n \n+    @Override\n     public RenderKit getRenderKit()\n     {\n       if (_kit == null)\n@@ -124,61 +138,73 @@ public RenderKit getRenderKit()\n       return _kit;\n     }\n \n+    @Override\n     public boolean getRenderResponse()\n     {\n       return _base.getRenderResponse();\n     }\n \n+    @Override\n     public boolean getResponseComplete()\n     {\n       return _base.getResponseComplete();\n     }\n \n+    @Override\n     public ResponseStream getResponseStream()\n     {\n       return _base.getResponseStream();\n     }\n \n+    @Override\n     public void setResponseStream(ResponseStream responseStream)\n     {\n       _base.setResponseStream(responseStream);\n     }\n \n+    @Override\n     public ResponseWriter getResponseWriter()\n     {\n       return _base.getResponseWriter();\n     }\n \n+    @Override\n     public void setResponseWriter(ResponseWriter responseWriter)\n     {\n       _base.setResponseWriter(responseWriter);\n     }\n \n+    @Override\n     public UIViewRoot getViewRoot()\n     {\n       return _base.getViewRoot();\n     }\n \n+    @Override\n     public void setViewRoot(UIViewRoot viewRoot)\n     {\n       _base.setViewRoot(viewRoot);\n     }\n \n+    @Override\n     public void addMessage(String clientId, FacesMessage facesMessage)\n     {\n       _base.addMessage(clientId, facesMessage);\n     }\n \n+    @Override\n     public void release()\n     {\n       _base.release();\n     }\n \n+    @Override\n     public void renderResponse()\n     {\n       _base.renderResponse();\n     }\n \n+    @Override\n     public void responseComplete()\n     {\n       _base.responseComplete();\n@@ -197,6 +223,7 @@ public OverrideDispatch(ExternalContext decorated)\n       _decorated = decorated;\n     }\n \n+    @Override\n     public void dispatch(String path) throws IOException\n     {\n       RequestContext afc = RequestContext.getCurrentInstance();\n@@ -209,6 +236,7 @@ public void dispatch(String path) throws IOException\n     }\n \n \n+    @Override\n     protected ExternalContext getExternalContext()\n     {\n       return _decorated;\n@@ -219,6 +247,9 @@ protected ExternalContext getExternalContext()\n \n   private final FacesContextFactory _factory;\n \n+  // 2006-08-02; -= Simon Lessard =-\n+  // There's nothing logged in this class at this time.\n+  @SuppressWarnings(\"unused\")\n   static private final TrinidadLogger _LOG =\n     TrinidadLogger.createTrinidadLogger(FacesContextFactoryImpl.class);\n }", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/context/FacesContextFactoryImpl.java"}, {"additions": 21, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/context/PageFlowScopeMap.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/context/PageFlowScopeMap.java", "sha": "13cda3324c609742c7f9b228df6e69aaf2439424", "changes": 37, "status": "modified", "deletions": 16, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/context/PageFlowScopeMap.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f", "patch": "@@ -34,7 +34,7 @@\n  *\n  * @author The Oracle ADF Faces Team\n  */\n-class PageFlowScopeMap implements Map, Serializable\n+class PageFlowScopeMap implements Map<String, Object>, Serializable\n {\n   /**\n    * Return a PageFlowScopeMap stored with a token.\n@@ -87,7 +87,7 @@ static private PageFlowScopeMap _getPageFlowScopeMap(\n       childToken = token.substring(lastSeparator + 1);\n     }\n \n-    Map storeMap = _createMapToStore(context, parentToken);\n+    Map<String, Object> storeMap = _createMapToStore(context, parentToken);\n     return (PageFlowScopeMap) storeMap.get(childToken);\n   }\n \n@@ -101,11 +101,11 @@ public PageFlowScopeMap()\n \n   public PageFlowScopeMap(int lifetime)\n   {\n-    this(new HashMap(13), null, new SharedData(lifetime));\n+    this(new HashMap<String, Object>(13), null, new SharedData(lifetime));\n   }\n \n   private PageFlowScopeMap(\n-    HashMap map,\n+    HashMap<String, Object> map,\n     String token,\n     SharedData sharedData)\n   {\n@@ -124,7 +124,7 @@ private PageFlowScopeMap(PageFlowScopeMap parent, boolean copyParent)\n     _sharedData = new SharedData(parent._sharedData._lifetime);\n     _sharedData._parent = parent;\n \n-    _map = new HashMap();\n+    _map = new HashMap<String, Object>();\n     if (copyParent)\n       _map.putAll(parent._map);\n   }\n@@ -160,7 +160,7 @@ synchronized public String getToken(FacesContext context)\n       cache = _getRootTokenCache(context, _sharedData._lifetime);\n     }\n \n-    Map store = _createMapToStore(context, parentToken);\n+    Map<String, Object> store = _createMapToStore(context, parentToken);\n \n     String token = cache.addNewEntry(this, store);\n \n@@ -181,7 +181,8 @@ synchronized public String getToken(FacesContext context)\n     return _token;\n   }\n \n-  static private Map _createMapToStore(\n+  @SuppressWarnings(\"unchecked\")\n+  static private Map<String, Object> _createMapToStore(\n     FacesContext context,\n     String       parentToken)\n   {\n@@ -201,6 +202,7 @@ static private Map _createMapToStore(\n                          fullToken);\n   }\n \n+  @Override\n   public boolean equals(Object o)\n   {\n     if (o instanceof PageFlowScopeMap)\n@@ -209,6 +211,7 @@ public boolean equals(Object o)\n     return _map.equals(o);\n   }\n \n+  @Override\n   public int hashCode()\n   {\n     return _map.hashCode();\n@@ -234,22 +237,22 @@ public boolean containsValue(Object value)\n     return _map.containsValue(value);\n   }\n \n-  public Collection values()\n+  public Collection<Object> values()\n   {\n     // Use an unmodifiableCollection to save me the headache\n     // of catching mutations\n     return Collections.unmodifiableCollection(_map.values());\n   }\n \n \n-  public Set entrySet()\n+  public Set<Map.Entry<String, Object>> entrySet()\n   {\n     // Use an unmodifiableSet to save me the headache\n     // of catching mutations\n     return Collections.unmodifiableSet(_map.entrySet());\n   }\n \n-  public Set keySet()\n+  public Set<String> keySet()\n   {\n     // Use an unmodifiableSet to save me the headache\n     // of catching mutations\n@@ -261,7 +264,7 @@ public Object get(Object key)\n     return _map.get(key);\n   }\n \n-  public Object put(Object key, Object value)\n+  public Object put(String key, Object value)\n   {\n     _detachIfNeeded();\n     if (_LOG.isFine())\n@@ -283,7 +286,7 @@ public Object remove(Object key)\n     return _map.remove(key);\n   }\n \n-  public void putAll(Map t)\n+  public void putAll(Map<? extends String, ? extends Object> t)\n   {\n     _detachIfNeeded();\n     if (_LOG.isFine())\n@@ -332,7 +335,7 @@ public void discard()\n     // Remove ourselves\n     if (_sharedData._parent != null)\n     {\n-      Map storeMap = _createMapToStore(context, parentToken);\n+      Map<String, Object> storeMap = _createMapToStore(context, parentToken);\n       _sharedData._parent._sharedData._children.removeOldEntry(childToken,\n                                                                storeMap);\n     }\n@@ -347,11 +350,12 @@ private void _removeAllChildren(FacesContext context, String token)\n     // this will in fact automatically recurse through all children\n     // grandchildren etc. - which is kind of a design flaw of SubKeyMap,\n     // but one we're relying on\n-    Map store = _createMapToStore(context, token);\n+    Map<String, Object> store = _createMapToStore(context, token);\n     store.clear();\n     _sharedData._children = null;\n   }\n \n+  @Override\n   public String toString()\n   {\n     return \"PageFlowScopeMap@\" + System.identityHashCode(this) +\n@@ -383,11 +387,12 @@ private TokenCache _getTokenCache()\n   // repeatedly during Render Response *without further\n   // mutations*.  Both of these assumptions seem very\n   // dubious!\n+  @SuppressWarnings(\"unchecked\")\n   private void _detachIfNeeded()\n   {\n     if (_token != null)\n     {\n-      _map = (HashMap) _map.clone();\n+      _map = (HashMap<String, Object>) _map.clone();\n       _token = null;\n \n       // =-=AEW When do we discard children?\n@@ -416,7 +421,7 @@ public SharedData(int lifetime)\n \n   private SharedData _sharedData;\n   private String     _token;\n-  private HashMap    _map;\n+  private HashMap<String, Object> _map;\n \n   static private final String _PAGE_FLOW_SCOPE_CACHE =\n     \"org.apache.myfaces.trinidadinternal.application.PageFlowScope\";", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/context/PageFlowScopeMap.java"}, {"additions": 8, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/context/PageFlowScopeProviderImpl.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/context/PageFlowScopeProviderImpl.java", "sha": "0c31f4a3749020e37f0a96bba6feb2d111acfe57", "changes": 11, "status": "modified", "deletions": 3, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/context/PageFlowScopeProviderImpl.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f", "patch": "@@ -38,7 +38,8 @@ private PageFlowScopeProviderImpl()\n   {\n   }\n \n-  public Map getPageFlowScope(FacesContext context)\n+  @Override\n+  public Map<String, Object> getPageFlowScope(FacesContext context)\n   {\n     PageFlowScopeMap pageFlowScope = _getPageFlowScope(context);\n     if (pageFlowScope == null)\n@@ -68,7 +69,8 @@ public Map getPageFlowScope(FacesContext context)\n     return pageFlowScope;\n   }\n \n-  public Map pushPageFlowScope(FacesContext context, boolean copyParent)\n+  @Override\n+  public Map<String, Object> pushPageFlowScope(FacesContext context, boolean copyParent)\n   {\n     PageFlowScopeMap oldPageFlowScope = (PageFlowScopeMap) getPageFlowScope(context);\n     if (oldPageFlowScope.getToken(context) != null)\n@@ -86,7 +88,8 @@ public Map pushPageFlowScope(FacesContext context, boolean copyParent)\n     return oldPageFlowScope;\n   }\n \n-  public Map popPageFlowScope(FacesContext context, boolean discardScope)\n+  @Override\n+  public Map<String, Object> popPageFlowScope(FacesContext context, boolean discardScope)\n   {\n     PageFlowScopeMap oldPageFlowScope = _getPageFlowScope(context);\n \n@@ -103,6 +106,7 @@ public Map popPageFlowScope(FacesContext context, boolean discardScope)\n     return oldPageFlowScope;\n   }\n \n+  @Override\n   public String encodeCurrentPageFlowScopeURL(FacesContext context, String url)\n   {\n     PageFlowScopeMap pageFlowScope = (PageFlowScopeMap) getPageFlowScope(context);\n@@ -137,6 +141,7 @@ static private PageFlowScopeMap _getPageFlowScope(FacesContext context)\n   // Store the page flow scope\n   // =-=AEW MAKE THIS PRIVATE WHNE OBSOLETE DIALOGSERVICE METHODS\n   // ARE REMOVED\n+  @SuppressWarnings(\"unchecked\")\n   static void __setPageFlowScope(FacesContext context,\n                                  PageFlowScopeMap pageFlowScope)\n   {", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/context/PageFlowScopeProviderImpl.java"}, {"additions": 2, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/context/PageResolverDefaultImpl.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/context/PageResolverDefaultImpl.java", "sha": "6e56f68a846d93b6257d31c92e7fbab5215a26af", "changes": 2, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/context/PageResolverDefaultImpl.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f", "patch": "@@ -37,6 +37,7 @@ private PageResolverDefaultImpl()\n    * @param viewId {@inheritDoc}\n    * @return {@inheritDoc}\n    */\n+  @Override\n   public String getPhysicalURI(String viewId)\n   {\n     return viewId;\n@@ -45,6 +46,7 @@ public String getPhysicalURI(String viewId)\n   /**\n    * Encodes an action URI.\n    */\n+  @Override\n   public String encodeActionURI(String actionURI)\n   {\n     return actionURI;", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/context/PageResolverDefaultImpl.java"}, {"additions": 1, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/context/RequestContextBean.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/context/RequestContextBean.java", "sha": "d600986a7eac2490944164494e6fc89030cd2029", "changes": 1, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/context/RequestContextBean.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f", "patch": "@@ -64,6 +64,7 @@\n     TYPE.lock();\n   }\n \n+  @Override\n   public Type getType()\n   {\n     return TYPE;", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/context/RequestContextBean.java"}, {"additions": 1, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/context/RequestContextFactoryImpl.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/context/RequestContextFactoryImpl.java", "sha": "ad91a3f4033bf8d3d124eb32cad07bb919d2f9a7", "changes": 1, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/context/RequestContextFactoryImpl.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f", "patch": "@@ -37,6 +37,7 @@ public RequestContextFactoryImpl()\n   {\n   }\n \n+  @Override\n   public RequestContext createContext(Object context,\n                                        Object request)\n   {", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/context/RequestContextFactoryImpl.java"}, {"additions": 61, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/context/RequestContextImpl.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/context/RequestContextImpl.java", "sha": "31a54e02f67926b5252c4ad046622375b998541e", "changes": 91, "status": "modified", "deletions": 30, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/context/RequestContextImpl.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f", "patch": "@@ -15,10 +15,11 @@\n  */\n package org.apache.myfaces.trinidadinternal.context;\n \n-\n+import java.awt.Color;\n import java.util.HashMap;\n import java.util.HashSet;\n import java.util.Iterator;\n+import java.util.List;\n import java.util.Locale;\n import java.util.Map;\n import java.util.Set;\n@@ -82,6 +83,7 @@ public RequestContextImpl(RequestContextBean bean)\n   {\n     _bean = bean;\n     _dialogService = new DialogServiceImpl(this);\n+    _partialTargets = new HashSet<String>();\n   }\n \n   public void init(Object request)\n@@ -90,28 +92,33 @@ public void init(Object request)\n   }\n \n \n+  @Override\n   public DialogService getDialogService()\n   {\n     return _dialogService;\n   }\n \n+  @Override\n   public PageResolver getPageResolver()\n   {\n     return _pageResolver;\n   }\n \n+  @Override\n   public PageFlowScopeProvider getPageFlowScopeProvider()\n   {\n     return _pageFlowScopeProvider;\n   }\n \n-  public Map getPageFlowScope()\n+  @Override\n+  public Map<String, Object> getPageFlowScope()\n   {\n     return _pageFlowScopeProvider.getPageFlowScope(__getFacesContext());\n   }\n \n \n-  public void returnFromDialog(Object returnValue, Map returnParameters)\n+  @Override\n+  public void returnFromDialog(Object returnValue, Map<Object, Object> returnParameters)\n   {\n     boolean dialogIsInaccessible =\n       _dialogService.returnFromDialog(returnValue, returnParameters);\n@@ -125,12 +132,13 @@ public void returnFromDialog(Object returnValue, Map returnParameters)\n    * Launch a dialog.\n    * @todo Don't save parameters for state-saving, page-flow scope, etc.\n    */\n+  @Override\n   public void launchDialog(\n     UIViewRoot  dialogRoot,\n-    Map         dialogParameters,\n+    Map<String, Object> dialogParameters,\n     UIComponent source,\n     boolean     useWindow,\n-    Map         windowProperties)\n+    Map<String, Object> windowProperties)\n   {\n     _pageFlowScopeProvider.pushPageFlowScope(__getFacesContext(),\n                                              true);\n@@ -141,13 +149,15 @@ public void launchDialog(\n                                 windowProperties);\n   }\n \n+  @Override\n   public UploadedFileProcessor getUploadedFileProcessor()\n   {\n     return (UploadedFileProcessor)\n       _bean.getProperty(RequestContextBean.UPLOADED_FILE_PROCESSOR_KEY);\n   }\n \n \n+  @Override\n   public boolean isPostback()\n   {\n     FacesContext context = __getFacesContext();\n@@ -175,38 +185,44 @@ public boolean isPostback()\n     return true;\n   }\n   \n+  @SuppressWarnings(\"unchecked\")\n+  @Override\n   public boolean isPartialRequest(FacesContext context)\n   {\n-    Map requestMap = context.getExternalContext().getRequestMap();\n+    Map<String, Object> requestMap = context.getExternalContext().getRequestMap();\n     if (Boolean.TRUE.equals(requestMap.get(XhtmlConstants.PARTIAL_PARAM)))\n       return true;\n     \n-    Map parameters = context.getExternalContext().getRequestParameterMap();\n+    Map<String, Object> parameters = context.getExternalContext().getRequestParameterMap();\n     if (\"true\".equals(parameters.get(\"partial\")))\n       return true;\n \n     return false;\n   }\n \n \n+  @Override\n   public boolean isDebugOutput()\n   {\n     return Boolean.TRUE.equals(\n        _bean.getProperty(RequestContextBean.DEBUG_OUTPUT_KEY));\n   }\n \n+  @Override\n   public boolean isClientValidationDisabled()\n   {\n     return Boolean.TRUE.equals(\n        _bean.getProperty(RequestContextBean.CLIENT_VALIDATION_DISABLED_KEY));\n   }\n \n+  @Override\n   public String getOutputMode()\n   {\n     return (String) _bean.getProperty(RequestContextBean.OUTPUT_MODE_KEY);\n   }\n \n   // get skinFamily; default to minimal if nothing is specified.\n+  @Override\n   public String getSkinFamily()\n   {\n     String skinFamily =\n@@ -216,6 +232,7 @@ public String getSkinFamily()\n     return skinFamily;\n   }\n \n+  @Override\n   public String getAccessibilityMode()\n   {\n     String s = (String) _bean.getProperty(\n@@ -233,6 +250,7 @@ public String getAccessibilityMode()\n     return null;\n   }\n \n+  @Override\n   public char getNumberGroupingSeparator()\n   {\n     Character c = (Character) _bean.getProperty(\n@@ -243,6 +261,7 @@ public char getNumberGroupingSeparator()\n     return (char) 0;\n   }\n \n+  @Override\n   public char getDecimalSeparator()\n   {\n     Character c = (Character) _bean.getProperty(\n@@ -254,6 +273,7 @@ public char getDecimalSeparator()\n   }\n \n \n+  @Override\n   public TimeZone getTimeZone()\n   {\n     TimeZone tz = (TimeZone) _bean.getProperty(RequestContextBean.TIME_ZONE_KEY);\n@@ -277,10 +297,12 @@ public TimeZone getTimeZone()\n   /**\n    * {@inheritDoc}\n    */\n+  @SuppressWarnings(\"unchecked\")\n+  @Override\n   public ChangeManager getChangeManager()\n   {\n     FacesContext context = __getFacesContext();\n-    Map appMap = context.getExternalContext().getApplicationMap();\n+    Map<String, Object> appMap = context.getExternalContext().getApplicationMap();\n     ChangeManager changeManager = (ChangeManager)appMap.get(_CHANGE_MANAGER_KEY);\n \n     if (changeManager == null)\n@@ -325,7 +347,7 @@ private ChangeManager _createChangeManager(\n   {\n     try\n     {\n-      Class managerClass = ClassLoaderUtils.loadClass(className);\n+      Class<?> managerClass = ClassLoaderUtils.loadClass(className);\n       return (ChangeManager)managerClass.newInstance();\n     }\n     catch (Throwable throwable)\n@@ -337,23 +359,27 @@ private ChangeManager _createChangeManager(\n   }\n \n \n+  @Override\n   public RegionManager getRegionManager()\n   {\n     FacesContext context = __getFacesContext();\n     return RegionMetadata.getRegionMetadata(context);\n   }\n \n+  @Override\n   public String getCurrencyCode()\n   {\n     return (String) _bean.getProperty(RequestContextBean.CURRENCY_CODE_KEY);\n   }\n \n+  @Override\n   public String getOracleHelpServletUrl()\n   {\n     return (String) _bean.getProperty(\n      RequestContextBean.ORACLE_HELP_SERVLET_URL_KEY);\n   }\n \n+  @Override\n   public boolean isRightToLeft()\n   {\n     Boolean b = (Boolean) _bean.getProperty(RequestContextBean.RIGHT_TO_LEFT_KEY);\n@@ -372,7 +398,8 @@ public boolean isRightToLeft()\n   }\n \n \n-  public Map getHelpTopic()\n+  @Override\n+  public Map<String, Object> getHelpTopic()\n   {\n     HelpProvider provider = _getHelpProvider();\n     if (provider == null)\n@@ -381,7 +408,8 @@ public Map getHelpTopic()\n     return provider.getHelpTopicMap();\n   }\n \n-  public Map getHelpSystem()\n+  @Override\n+  public Map<String, Object> getHelpSystem()\n   {\n     HelpProvider provider = _getHelpProvider();\n     if (provider == null)\n@@ -394,6 +422,7 @@ public Map getHelpSystem()\n   // Partial Page Rendering support\n   //\n \n+  @Override\n   public void addPartialTarget(UIComponent newTarget)\n   {\n     FacesContext fContext = __getFacesContext();\n@@ -437,38 +466,38 @@ public void addPartialTarget(UIComponent newTarget)\n     }\n   }\n \n+  @Override\n   public void addPartialTriggerListeners\n     (UIComponent listener,\n      String[] triggers)\n   {\n     if ((listener == null) || (triggers == null))\n       return;\n \n-    Map pl = _getPartialListeners();\n+    Map<UIComponent, Set<UIComponent>> pl = _getPartialListeners();\n \n     for (int i = 0; i < triggers.length; i++)\n     {\n       String trigger = triggers[i];\n \n-      Object master;\n-\n       // Wildcards removed for now....\n       // if (\"*\".equals(trigger))\n       //   master = _GLOBAL_TRIGGER;\n       // else\n-      master = listener.getParent().findComponent(trigger);\n+      UIComponent master = listener.getParent().findComponent(trigger);\n \n       // Get the set of listeners on this trigger and add this component.\n-      Set listeners = (Set) pl.get(master);\n+      Set<UIComponent> listeners = pl.get(master);\n       if (listeners == null)\n       {\n-        listeners = new HashSet();\n+        listeners = new HashSet<UIComponent>();\n         pl.put(master, listeners);\n       }\n       listeners.add(listener);\n     }\n   }\n \n+  @Override\n   public void partialUpdateNotify(UIComponent updated)\n   {\n     if (updated != null)\n@@ -487,7 +516,7 @@ public void partialUpdateNotify(UIComponent updated)\n   /**\n    * Get the clientIds of all components that have requested partial update\n    */\n-  public Iterator getPartialTargets()\n+  public Iterator<String> getPartialTargets()\n   {\n     return _partialTargets.iterator();\n   }\n@@ -497,21 +526,24 @@ public Iterator getPartialTargets()\n    * is listening on this component, it will add itself to the partialTargets\n    * list).\n    */\n-  public Set getPartialUpdates()\n+  public Set<String> getPartialUpdates()\n   {\n     return _partialTargets;\n   }\n \n-  public Map getColorPalette()\n+  @Override\n+  public Map<String, List<Color>> getColorPalette()\n   {\n     return ColorPaletteUtils.getColorPaletteMap();\n   }\n \n-  public Map getFormatter()\n+  @Override\n+  public Map<Object, Map<Object,String>> getFormatter()\n   {\n     return FormatterMap.sharedInstance();\n   }\n \n+  @Override\n   public int getTwoDigitYearStart()\n   {\n     Integer twoDigitYearStart  = (Integer) _bean.getProperty(\n@@ -523,6 +555,7 @@ public int getTwoDigitYearStart()\n     return 1950;\n   }\n \n+  @Override\n   public Agent getAgent()\n   {\n     if (_agent == null)\n@@ -559,17 +592,15 @@ int __getPageFlowScopeLifetime()\n \n   private void _addTargets(Object key)\n   {\n-    Map pl = _getPartialListeners();\n-    Set listeners = (Set) pl.get(key);\n+    Map<UIComponent, Set<UIComponent>> pl = _getPartialListeners();\n+    Set<UIComponent> listeners = pl.get(key);\n     if (listeners != null)\n     {\n       // protect from infinite recursion\n       pl.remove(key);\n \n-      Iterator iter = listeners.iterator();\n-      while (iter.hasNext())\n+      for(UIComponent listener : listeners)\n       {\n-        UIComponent listener = (UIComponent) iter.next();\n         addPartialTarget(listener);\n         // This target will be re-rendered, re-render anything that's\n         // listening on it also.\n@@ -630,19 +661,19 @@ private UIXCookie _getUIXCookie()\n     return null;\n   }\n \n-  private Map _getPartialListeners()\n+  private Map<UIComponent, Set<UIComponent>> _getPartialListeners()\n   {\n     if (_partialListeners == null)\n-      _partialListeners = new HashMap();\n+      _partialListeners = new HashMap<UIComponent, Set<UIComponent>>();\n \n     return _partialListeners;\n   }\n \n \n   private RequestContextBean _bean;\n   private HelpProvider        _provider;\n-  private Map                 _partialListeners;\n-  private Set                 _partialTargets = new HashSet();\n+  private Map<UIComponent, Set<UIComponent>> _partialListeners;\n+  private Set<String>         _partialTargets;\n   private Agent               _agent;\n \n   private DialogServiceImpl   _dialogService;", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/context/RequestContextImpl.java"}, {"additions": 4, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/context/TrinidadPhaseListener.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/context/TrinidadPhaseListener.java", "sha": "f235543303f15b6ff795dcec3a37b65500b6c93a", "changes": 5, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/context/TrinidadPhaseListener.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f", "patch": "@@ -58,6 +58,7 @@ static public void markPostback(FacesContext context)\n     context.getExternalContext().getRequestMap().remove(_POSTBACK_KEY);\n   }\n \n+  @SuppressWarnings(\"unchecked\")\n   public void afterPhase(PhaseEvent event)\n   {\n     if (event.getPhaseId() == PhaseId.RESTORE_VIEW)\n@@ -83,6 +84,7 @@ public void afterPhase(PhaseEvent event)\n     }\n   }\n \n+  @SuppressWarnings(\"unchecked\")\n   public void beforePhase(PhaseEvent event)\n   {\n     // Ensure that the implicit object gets created.  In general,\n@@ -123,9 +125,10 @@ public PhaseId getPhaseId()\n   // Create the RequestContext if necessary;  ideally, this is unnecessary\n   // because our filter will have executed - but if not, deal.\n   //\n+  @SuppressWarnings(\"unchecked\")\n   static private void _createContextIfNecessary(FacesContext fContext)\n   {\n-    Map requestMap = fContext.getExternalContext().getRequestMap();\n+    Map<String, Object> requestMap = fContext.getExternalContext().getRequestMap();\n     Boolean createdContext = (Boolean)\n       requestMap.get(_CREATED_CONTEXT_KEY);\n     if (createdContext == null)", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/context/TrinidadPhaseListener.java"}, {"additions": 26, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/convert/BaseConverter.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/convert/BaseConverter.java", "sha": "00f7bd495bd0cf50fbe8ea5aedc35b8857231cec", "changes": 41, "status": "modified", "deletions": 15, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/convert/BaseConverter.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f", "patch": "@@ -15,9 +15,8 @@\n */\n package org.apache.myfaces.trinidadinternal.convert;\n \n-import java.util.Arrays;\n+import java.util.ArrayList;\n import java.util.Calendar;\n-import java.util.Collections;\n import java.util.Date;\n import java.util.List;\n \n@@ -27,7 +26,8 @@ public BaseConverter()\n   {\n   }\n \n-  public Object convert(Object source, Class targetType)\n+  @Override\n+  public Object convert(Object source, Class<?> targetType)\n   {\n     if (source instanceof Calendar)\n     {\n@@ -62,25 +62,36 @@ public Object convert(Object source, Class targetType)\n       source.getClass() + \" to:\"+targetType);\n   }\n \n-  public List getTargetTypes(Class sourceType)\n+  @SuppressWarnings(\"unchecked\")\n+  @Override\n+  public List<Class<?>> getTargetTypes(Class<?> sourceType)\n   {\n+    ArrayList<Class<?>> list = new ArrayList<Class<?>>(1);\n     if (Date.class.isAssignableFrom(sourceType))\n     {\n-      return Collections.singletonList(Calendar.class);\n+      list.add(Calendar.class);\n     }\n-    if (Calendar.class.isAssignableFrom(sourceType))\n+    else if (Calendar.class.isAssignableFrom(sourceType))\n     {\n-      return Collections.singletonList(Date.class);\n+      list.add(Date.class);\n     }\n-    if (Number.class.isAssignableFrom(sourceType))\n+    else if (Number.class.isAssignableFrom(sourceType))\n     {\n-      return Arrays.asList(new Class[] {\n-        Byte.class, Double.class, Float.class, \n-        Integer.class, Long.class, Short.class,\n-        Byte.TYPE, Double.TYPE, Float.TYPE, // bug 4891181\n-        Integer.TYPE, Long.TYPE, Short.TYPE}\n-        );\n+      list.ensureCapacity(12);\n+      list.add(Byte.class);\n+      list.add(Double.class);\n+      list.add(Float.class);\n+      list.add(Integer.class);\n+      list.add(Long.class);\n+      list.add(Short.class);\n+      list.add(Byte.TYPE);\n+      list.add(Double.TYPE);\n+      list.add(Float.TYPE); // bug 4891181\n+      list.add(Integer.TYPE);\n+      list.add(Long.TYPE);\n+      list.add(Short.TYPE);\n     }\n-    return Collections.EMPTY_LIST;\n+    \n+    return list;\n   }\n }", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/convert/BaseConverter.java"}, {"additions": 1, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/convert/ByteConverter.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/convert/ByteConverter.java", "sha": "ac0ceb1ecf8c305dd84c7d3c10de46267cc00678", "changes": 1, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/convert/ByteConverter.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f", "patch": "@@ -58,6 +58,7 @@\n     public static final String CONVERT_MESSAGE_ID =\n         \"org.apache.myfaces.trinidad.convert.ByteConverter.CONVERT\";\n \n+  @Override\n   public Object getAsObject(\n     FacesContext context, \n     UIComponent component,", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/convert/ByteConverter.java"}, {"additions": 4, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/convert/ColorConverter.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/convert/ColorConverter.java", "sha": "e149fe1be0e1c21b762f8d801dd626068f1e034a", "changes": 6, "status": "modified", "deletions": 2, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/convert/ColorConverter.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f", "patch": "@@ -17,7 +17,6 @@\n \n import java.util.Map;\n \n-import javax.faces.application.FacesMessage;\n import javax.faces.component.UIComponent;\n import javax.faces.context.FacesContext;\n \n@@ -43,6 +42,7 @@ public String getLibKey(FacesContext context, UIComponent component)\n   }\n \n \n+  @SuppressWarnings(\"unchecked\")\n   public String getClientScript(FacesContext context, UIComponent component)\n   {\n \n@@ -66,7 +66,9 @@ public String getClientScript(FacesContext context, UIComponent component)\n       // FIX - figure out size!!!\n       StringBuffer buff = new StringBuffer();\n \n-      Map requestMap = context.getExternalContext().getRequestMap();\n+      // -= Simon Lessard =-\n+      // FIXME: JSF 1.2 specifies <String, Object>\n+      Map<Object, Object> requestMap = context.getExternalContext().getRequestMap();\n       // =-=JRF Only if Javascript...\n       if (requestMap.get(_PATTERN_WRITTEN_KEY) == null)\n       {", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/convert/ColorConverter.java"}, {"additions": 3, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/convert/ConvertException.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/convert/ConvertException.java", "sha": "b574530a171ad8d738bc5484533995764c183fd9", "changes": 6, "status": "modified", "deletions": 3, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/convert/ConvertException.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f", "patch": "@@ -17,17 +17,17 @@\n \n class ConvertException extends RuntimeException\n {\n-  public ConvertException(Object source, Class targetType, Throwable error)\n+  public ConvertException(Object source, Class<?> targetType, Throwable error)\n   {\n     super(_getMessage(source, targetType), error);\n   }\n   \n-  public ConvertException(Object source, Class targetType)\n+  public ConvertException(Object source, Class<?> targetType)\n   {\n     super(_getMessage(source, targetType));\n   }\n   \n-  private static String _getMessage(Object source, Class targetType)\n+  private static String _getMessage(Object source, Class<?> targetType)\n   {\n     return \"Could not convert instance:\"+source +\n       \" of type:\"+source.getClass()+\" into type:\"+targetType;", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/convert/ConvertException.java"}, {"additions": 1, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/convert/ConverterUtils.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/convert/ConverterUtils.java", "sha": "3b340f73db7c2fa5d2786e77640686c5b1c1722e", "changes": 2, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/convert/ConverterUtils.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f", "patch": "@@ -149,7 +149,7 @@ private static final Object _getLabel(\n    */\n   static public Converter createConverter(\n     FacesContext context,\n-    Class        converterType)\n+    Class<?>     converterType)\n   {\n     // Don't bother for Strings and Objects;  note that the 1.1_01 RI\n     // returns null, but the spec requires a FacesException, and MyFaces", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/convert/ConverterUtils.java"}, {"additions": 9, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/convert/DateTimeConverter.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/convert/DateTimeConverter.java", "sha": "83421a912f46090209943e42429fd1f46751ed6b", "changes": 11, "status": "modified", "deletions": 2, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/convert/DateTimeConverter.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f", "patch": "@@ -66,6 +66,7 @@ public DateTimeConverter(String pattern, String secondaryPattern)\n     super(pattern, secondaryPattern);\n   }\n \n+  @Override\n   public String getAsString(FacesContext context, UIComponent component, Object value)\n   {\n     if (value == null)\n@@ -81,6 +82,7 @@ public String getAsString(FacesContext context, UIComponent component, Object va\n   }\n \n \n+  @Override\n   public Object getAsObject(FacesContext context, UIComponent component, String value)\n   {\n     Object date = super.getAsObject(context, component, value);\n@@ -107,7 +109,7 @@ static Object __typeConvert(\n     ValueBinding binding = component.getValueBinding(\"value\");\n     if (binding != null)\n     {\n-      Class expectedType = binding.getType(context);\n+      Class<?> expectedType = binding.getType(context);\n       // Sometimes the type might be null, if it cannot be determined:\n       if ((expectedType != null) && (!expectedType.isAssignableFrom(value.getClass())))\n       {\n@@ -132,6 +134,7 @@ static Object __typeConvert(\n     return value;\n   }\n \n+  @SuppressWarnings(\"unchecked\")\n   public String getClientScript(FacesContext context, UIComponent component)\n   {\n \n@@ -154,7 +157,9 @@ public String getClientScript(FacesContext context, UIComponent component)\n       FormRenderer.addPatternMapping( clientId,\n                                       getExample(context));\n       // =-=AEW Only if Javascript...\n-      Map requestMap = context.getExternalContext().getRequestMap();\n+      // -= Simon Lessard =-\n+      // FIXME: JSF 1.2 specifies <String, Object>\n+      Map<Object, Object> requestMap = context.getExternalContext().getRequestMap();\n \n       // this fetch could be at the place where we append, but has been\n       // moved ahead to optimize use of StringBuffer\n@@ -305,6 +310,7 @@ public int getColumns()\n     return len;\n   }\n \n+  @Override\n   protected Date getDate(FacesContext context, UIComponent component)\n   {\n     if (false)\n@@ -339,6 +345,7 @@ protected Date getDate(FacesContext context, UIComponent component)\n    * TimeZone names of Java, since these names are not available in\n    * client side JavaScript.\n    */\n+  @Override\n   protected TimeZone getFormattingTimeZone(TimeZone tZone)\n   {\n     TimeZone zone = (TimeZone)tZone.clone();", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/convert/DateTimeConverter.java"}, {"additions": 1, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/convert/DoubleConverter.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/convert/DoubleConverter.java", "sha": "9eca2711668eb449ebd5913a8846b969d1366670", "changes": 1, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/convert/DoubleConverter.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f", "patch": "@@ -34,6 +34,7 @@\n     public static final String CONVERT_MESSAGE_ID =\n         \"org.apache.myfaces.trinidad.convert.DoubleConverter.CONVERT\";\n \n+  @Override\n   public Object getAsObject(\n     FacesContext context, \n     UIComponent component,", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/convert/DoubleConverter.java"}, {"additions": 1, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/convert/FloatConverter.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/convert/FloatConverter.java", "sha": "b7fc27ba4a0fc92bcdea74ea9682607b87490c35", "changes": 1, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/convert/FloatConverter.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f", "patch": "@@ -34,6 +34,7 @@\n     public static final String CONVERT_MESSAGE_ID =\n         \"org.apache.myfaces.trinidad.convert.FloatConverter.CONVERT\";\n \n+  @Override\n   public Object getAsObject(\n     FacesContext context, \n     UIComponent component,", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/convert/FloatConverter.java"}, {"additions": 2, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/convert/GenericConverter.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/convert/GenericConverter.java", "sha": "1c06a9d5f130ea05e903cb914c403303191d69d8", "changes": 4, "status": "modified", "deletions": 2, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/convert/GenericConverter.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f", "patch": "@@ -31,7 +31,7 @@\n    * targetType.\n    * @return an instance of the targetType.\n    */\n-  public abstract Object convert(Object source, Class targetType);\n+  public abstract Object convert(Object source, Class<?> targetType);\n     \n   /**\n    * Gets all the supported targetTypes for the given sourceType.\n@@ -40,5 +40,5 @@\n    * @return Each item is of type {@link Class}. An empty list must be\n    * returned if the given sourceType cannot be converted into anything.\n    */\n-  public abstract List getTargetTypes(Class sourceType);\n+  public abstract List<Class<?>> getTargetTypes(Class<?> sourceType);\n }", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/convert/GenericConverter.java"}, {"additions": 55, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/convert/GenericConverterFactory.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/convert/GenericConverterFactory.java", "sha": "582bd692a13dd6f9c581dc34b4f6fcf43df86f06", "changes": 84, "status": "modified", "deletions": 29, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/convert/GenericConverterFactory.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f", "patch": "@@ -37,7 +37,8 @@\n {\n   private GenericConverterFactory()\n   {\n-    _converters = new ArrayList(3);\n+    _cache = new HashMap<Key, GenericConverter>(16);\n+    _converters = new ArrayList<GenericConverter>(3);\n     registerConverter(new SqlConverter());\n     registerConverter(new BaseConverter());\n   }\n@@ -55,7 +56,7 @@ private GenericConverterFactory()\n    * requests for the same source and target types will be fast.\n    * @return null if there is no such converter.\n    */\n-  public GenericConverter getConverter(Class sourceType, Class targetType)\n+  public GenericConverter getConverter(Class<?> sourceType, Class<?> targetType)\n   {\n     Key key = new Key(sourceType, targetType);\n     // check the cache first:\n@@ -69,11 +70,11 @@ public GenericConverter getConverter(Class sourceType, Class targetType)\n     // can be used to perform this conversion.\n     // initial node in chain:\n     Node start = new Node(null, null, sourceType);\n-    LinkedList sourcesToBeSearched = new LinkedList();\n+    LinkedList<Node> sourcesToBeSearched = new LinkedList<Node>();\n     sourcesToBeSearched.add(start);\n     // cache to store all the classes we've tested already. This is to\n     // avoid our chains from looping indefinitely:\n-    Set cache  = new HashSet(16);\n+    Set<Class<?>> cache  = new HashSet<Class<?>>(16);\n     GenericConverter converter = _findConverter(sourcesToBeSearched, targetType, cache);\n     if (converter == null)\n     {\n@@ -98,19 +99,19 @@ public GenericConverter getConverter(Class sourceType, Class targetType)\n    * @return null if no converter was found.\n    */\n   private GenericConverter _findConverter(\n-    LinkedList sourcesToBeSearched,\n-    Class targetType, \n-    Set cache)\n+    LinkedList<Node> sourcesToBeSearched,\n+    Class<?> targetType, \n+    Set<Class<?>> cache)\n   {\n     while(!sourcesToBeSearched.isEmpty())\n     {\n-      Node source = (Node) sourcesToBeSearched.removeFirst();\n+      Node source = sourcesToBeSearched.removeFirst();\n       // loop through all the converters and see what types they can turn \n       // the current sourceType into \n       // (the current sourceType is source.targetType):\n       for(int j=0,jsz=_converters.size(); j<jsz; j++)\n       {\n-        GenericConverter conv = (GenericConverter) _converters.get(j);\n+        GenericConverter conv = _converters.get(j);\n         // loop though all the targetTypes on this converter to see\n         // if we can find the one we're looking for:\n         if (_searchTargetTypes(sourcesToBeSearched, source, conv, targetType,\n@@ -142,17 +143,17 @@ private GenericConverter _findConverter(\n    * currentSource.targetType into searchType.\n    */\n   private boolean _searchTargetTypes(\n-    List sourcesToBeSearched,\n+    List<Node> sourcesToBeSearched,\n     Node currentSource,\n     GenericConverter currentConverter,\n-    Class searchType,\n-    Set cache)\n+    Class<?> searchType,\n+    Set<Class<?>> cache)\n   {\n-    Class sourceType = currentSource.targetType;\n-    List targetTypes = currentConverter.getTargetTypes(sourceType);\n+    Class<?> sourceType = currentSource.targetType;\n+    List<Class<?>> targetTypes = currentConverter.getTargetTypes(sourceType);\n     for(int i=0,sz=targetTypes.size(); i<sz; i++)\n     {\n-      Class targetType = (Class) targetTypes.get(i);\n+      Class<?> targetType = targetTypes.get(i);\n       // check to see if we've seen this targetType before:\n       if (cache.add(targetType))\n       {\n@@ -188,7 +189,7 @@ public void registerConverter(GenericConverter converter)\n    * @param targetType the required type.\n    * @return null, if the source is null.\n    */\n-  public Object convert(Object source, Class targetType)\n+  public Object convert(Object source, Class<?> targetType)\n   {\n     if (source == null)\n       return null;\n@@ -209,7 +210,7 @@ public Object convert(Object source, Class targetType)\n    * into the specified targetType\n    * @return true if conversion is possible.\n    */\n-  public boolean isConvertible(Object source, Class targetType)\n+  public boolean isConvertible(Object source, Class<?> targetType)\n   {\n     if (source == null)\n       return false; // bug 4589048\n@@ -221,13 +222,30 @@ public boolean isConvertible(Object source, Class targetType)\n     return converter != null;\n   }\n   \n-  private final Map _cache = new HashMap(16);\n-  private final List _converters;\n-  private static final Object _NULL = Node.class; // reuse an object\n+  private final Map<Key, GenericConverter> _cache;\n+  private final List<GenericConverter> _converters;\n+  // 2006-08-02: -= Simon Lessard =-\n+  //             Using a GenericConverter null value instead \n+  //             of Node.class to be typesafe\n+  private static final GenericConverter _NULL = new GenericConverter()\n+  {\n+    @Override\n+    public Object convert(Object source, Class<?> targetType)\n+    {\n+      return null;\n+    }\n+    \n+    @Override\n+    @SuppressWarnings(\"unchecked\")\n+    public List<Class<?>> getTargetTypes(Class<?> sourceType)\n+    {\n+      return Collections.EMPTY_LIST;\n+    }\n+  };\n \n   private static final class Node\n   {\n-    public Node(Node previous, GenericConverter converter, Class targetType)\n+    public Node(Node previous, GenericConverter converter, Class<?> targetType)\n     {\n       this.previous = previous;\n       this.converter = converter;\n@@ -244,7 +262,7 @@ public Object convert(Object source)\n       return source;\n     }\n     \n-    public Class getSourceType()\n+    public Class<?> getSourceType()\n     {\n       if (previous == null)\n         return targetType;\n@@ -253,12 +271,12 @@ public Class getSourceType()\n     \n     public final Node previous;\n     public final GenericConverter converter;\n-    public final Class targetType;\n+    public final Class<?> targetType;\n   }\n   \n   private static final class Key\n   {\n-    public Key(Class source, Class target)\n+    public Key(Class<?> source, Class<?> target)\n     {\n       assert !source.equals(target);\n \n@@ -268,11 +286,13 @@ public Key(Class source, Class target)\n       _hc = source.hashCode() + target.hashCode();\n     }\n   \n+    @Override\n     public int hashCode()\n     {\n       return _hc;\n     }\n     \n+    @Override\n     public boolean equals(Object other)\n     {\n       if (this == other)\n@@ -286,18 +306,20 @@ public boolean equals(Object other)\n     }\n     \n     private final int _hc;  \n-    private final Class _source, _target;\n+    private final Class<?> _source;\n+    private final Class<?> _target;\n   }\n   \n   private static final class CompositeConverter extends GenericConverter\n   {\n-    public CompositeConverter(Node source, GenericConverter conv, Class targetType)\n+    public CompositeConverter(Node source, GenericConverter conv, Class<?> targetType)\n     {\n       assert source != null;\n       _chain = new Node(source, conv, targetType) ;\n     }\n \n-    public Object convert(Object source, Class targetType)\n+    @Override\n+    public Object convert(Object source, Class<?> targetType)\n     {\n       if (targetType.isAssignableFrom(_chain.targetType))\n       {\n@@ -307,11 +329,15 @@ public Object convert(Object source, Class targetType)\n         throw new IllegalArgumentException(\"Cannot convert to:\"+targetType);\n     }\n \n-    public List getTargetTypes(Class sourceType)\n+    @SuppressWarnings(\"unchecked\")\n+    @Override\n+    public List<Class<?>> getTargetTypes(Class<?> sourceType)\n     {\n       if (_chain.getSourceType().isAssignableFrom(sourceType))\n       {\n-        return Collections.singletonList(_chain.targetType);\n+        List<Class<?>> list = new ArrayList<Class<?>>(1);\n+        list.add(_chain.targetType);\n+        return list;\n       }\n       return Collections.EMPTY_LIST;\n     }", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/convert/GenericConverterFactory.java"}, {"additions": 1, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/convert/IntegerConverter.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/convert/IntegerConverter.java", "sha": "cd8d250ace2984ffbb194697807c12fa87b85b00", "changes": 1, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/convert/IntegerConverter.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f", "patch": "@@ -62,6 +62,7 @@\n \n \n  \n+  @Override\n   public Object getAsObject(\n     FacesContext context, \n     UIComponent component,", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/convert/IntegerConverter.java"}, {"additions": 1, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/convert/LongConverter.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/convert/LongConverter.java", "sha": "0f3ff65f45a503a94daa847888006d6c296e0d8f", "changes": 1, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/convert/LongConverter.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f", "patch": "@@ -60,6 +60,7 @@\n         \"org.apache.myfaces.trinidad.convert.LongConverter.CONVERT\";\n \n \n+  @Override\n   public Object getAsObject(\n     FacesContext context, \n     UIComponent component,", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/convert/LongConverter.java"}, {"additions": 2, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/convert/NumberConverter.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/convert/NumberConverter.java", "sha": "f61815c60616481ee5bfc1a10509218253f2eacd", "changes": 2, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/convert/NumberConverter.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f", "patch": "@@ -25,6 +25,7 @@ public NumberConverter()\n   {\n   }\n   \n+  @Override\n   public Object getAsObject(\n     FacesContext context,\n     UIComponent component,\n@@ -41,6 +42,7 @@ public Object getAsObject(\n     return number;\n   }\n   \n+  @Override\n   public String getAsString(\n     FacesContext context, \n     UIComponent component,", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/convert/NumberConverter.java"}, {"additions": 1, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/convert/ShortConverter.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/convert/ShortConverter.java", "sha": "20c15243248c7ec40f87574a8bb50752c86130d3", "changes": 1, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/convert/ShortConverter.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f", "patch": "@@ -60,6 +60,7 @@\n \n \n \n+  @Override\n   public Object getAsObject(\n     FacesContext context, \n     UIComponent component,", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/convert/ShortConverter.java"}, {"additions": 11, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/convert/SqlConverter.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/convert/SqlConverter.java", "sha": "a4b36465b27160b3b2d918519c9f5ebd282b4ed4", "changes": 20, "status": "modified", "deletions": 9, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/convert/SqlConverter.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f", "patch": "@@ -19,7 +19,7 @@\n import java.sql.Time;\n import java.sql.Timestamp;\n \n-import java.util.Arrays;\n+import java.util.ArrayList;\n import java.util.Collections;\n import java.util.List;\n \n@@ -32,7 +32,8 @@ public SqlConverter()\n   {\n   }\n \n-  public Object convert(Object source, Class targetType)\n+  @Override\n+  public Object convert(Object source, Class<?> targetType)\n   {\n     java.util.Date jDate = (java.util.Date) source;\n     if (targetType.isAssignableFrom(Date.class))\n@@ -50,16 +51,17 @@ public Object convert(Object source, Class targetType)\n     throw new ConvertException(source, targetType);\n   }\n \n-  public List getTargetTypes(Class sourceType)\n+  @SuppressWarnings(\"unchecked\")\n+  @Override\n+  public List<Class<?>> getTargetTypes(Class<?> sourceType)\n   {\n     if (java.util.Date.class.isAssignableFrom(sourceType))\n     {\n-      Class[] types = new Class[] {\n-        Date.class,\n-        Time.class,\n-        Timestamp.class\n-      };\n-      return Arrays.asList(types);\n+      List<Class<?>> list = new ArrayList<Class<?>>(3);\n+      list.add(Date.class);\n+      list.add(Time.class);\n+      list.add(Timestamp.class);\n+      return list;\n     }\n     return Collections.EMPTY_LIST;\n   }", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/convert/SqlConverter.java"}, {"additions": 15, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/el/FormatterMap.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/el/FormatterMap.java", "sha": "a5ec8b83307e3454f1c63578a3d95ff92cc1eb1f", "changes": 23, "status": "modified", "deletions": 8, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/el/FormatterMap.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f", "patch": "@@ -27,9 +27,9 @@\n  * <p>\n  * @author The Oracle ADF Faces Team\n  */\n-public class FormatterMap extends AbstractMap\n+public class FormatterMap extends AbstractMap<Object, Map<Object,String>>\n {\n-  static public Map sharedInstance()\n+  static public Map<Object, Map<Object,String>> sharedInstance()\n   {\n     return _INSTANCE;\n   }\n@@ -38,33 +38,40 @@ private FormatterMap()\n   {\n   }\n \n-  public Object get(Object key)\n+  @SuppressWarnings(\"unchecked\")\n+  @Override\n+  public Map<Object,String> get(Object key)\n   {\n     if (key == null)\n       return Collections.EMPTY_MAP;\n \n     return new FunctorMap(key);\n   }\n \n-  public Set entrySet()\n+  @SuppressWarnings(\"unchecked\")\n+  @Override\n+  public Set<Map.Entry<Object, Map<Object,String>>> entrySet()\n   {\n     return Collections.EMPTY_SET;\n   }\n \n-  static private final class FunctorMap extends AbstractMap\n+  static private final class FunctorMap extends AbstractMap<Object, String>\n   {\n     public FunctorMap(Object key)\n     {\n       // Assumes check against null above\n       _format = new FastMessageFormat(key.toString());\n     }\n \n-    public Object get(Object key)\n+    @Override\n+    public String get(Object key)\n     {\n       return _format.format(new Object[]{key});\n     }\n \n-    public Set entrySet()\n+    @SuppressWarnings(\"unchecked\")\n+    @Override\n+    public Set<Map.Entry<Object, String>> entrySet()\n     {\n       return Collections.EMPTY_SET;\n     }\n@@ -73,5 +80,5 @@ public Set entrySet()\n   }\n \n   \n-  static private final Map _INSTANCE = new FormatterMap();\n+  static private final Map<Object, Map<Object,String>> _INSTANCE = new FormatterMap();\n }", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/el/FormatterMap.java"}, {"additions": 14, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/el/HelpProvider.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/el/HelpProvider.java", "sha": "df34ea7d580d115c425aeced510ad1775efef26f", "changes": 22, "status": "modified", "deletions": 8, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/el/HelpProvider.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f", "patch": "@@ -61,12 +61,12 @@\n {\n   public static final String FRONT_PAGE_KEY = \"frontPage\";\n \n-  public Map getHelpTopicMap()\n+  public Map<String, Object> getHelpTopicMap()\n   {\n     return _topicMap;\n   }\n \n-  public Map getHelpSystemMap()\n+  public Map<String, Object> getHelpSystemMap()\n   {\n     return _systemMap;\n   }\n@@ -99,33 +99,39 @@ public Map getHelpSystemMap()\n    */\n   protected abstract Object getHelpSystemValue(Object key);\n \n-  private class HelpTopicMap extends AbstractMap\n+  private class HelpTopicMap extends AbstractMap<String, Object>\n   {\n-    public Set entrySet()\n+    @SuppressWarnings(\"unchecked\")\n+    @Override\n+    public Set<Map.Entry<String, Object>> entrySet()\n     {\n       return Collections.EMPTY_SET;\n     }\n \n+    @Override\n     public Object get(Object key)\n     {\n       return getHelpTopicValue(key);\n     }\n   }\n \n-  private class HelpSystemMap extends AbstractMap\n+  private class HelpSystemMap extends AbstractMap<String, Object>\n   {\n-    public Set entrySet()\n+    @SuppressWarnings(\"unchecked\")\n+    @Override\n+    public Set<Map.Entry<String, Object>> entrySet()\n     {\n       return Collections.EMPTY_SET;\n     }\n \n+    @Override\n     public Object get(Object key)\n     {\n       return getHelpSystemValue(key);\n     }\n   }\n \n-  private Map _topicMap = new HelpTopicMap();\n-  private Map _systemMap = new HelpSystemMap();\n+  private Map<String, Object> _topicMap = new HelpTopicMap();\n+  private Map<String, Object> _systemMap = new HelpSystemMap();\n }\n ", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/el/HelpProvider.java"}, {"additions": 6, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/el/OracleHelpProvider.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/el/OracleHelpProvider.java", "sha": "5bee566cea71d4e3e4a7fb19ca3947cfa27289a4", "changes": 10, "status": "modified", "deletions": 4, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/el/OracleHelpProvider.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f", "patch": "@@ -67,7 +67,7 @@ public OracleHelpProvider(String ohwServletLocation)\n     }\n \n     _defaultOHWServletLocation = ohwServletLocation;\n-    _localeSpecificServlets = new OptimisticHashMap(13);\n+    _localeSpecificServlets = new OptimisticHashMap<Locale, String>(13);\n   }\n \n   /**\n@@ -101,6 +101,7 @@ public void registerLocaleSpecificServlet(Locale locale,\n    * <p>\n    * @param key criterion (topic-id)\n    */\n+  @Override\n   protected String getHelpTopicURL(Object key)\n   {\n     String helpURL = null;\n@@ -124,6 +125,7 @@ protected String getHelpTopicURL(Object key)\n    * <p>\n    * @param key criterion (HelpProvider key constant)\n    */\n+  @Override\n   protected String getHelpSystemURL(Object key)\n   {\n     if (HelpProvider.FRONT_PAGE_KEY.equals(key))\n@@ -163,7 +165,7 @@ private String _getLocaleSpecificServlet(FacesContext context)\n     //not then check language/country and lang only locales\n     if (_localeSpecificServlets.containsKey(desiredLocale))\n     {\n-      servletLocation = (String) _localeSpecificServlets.get(desiredLocale);\n+      servletLocation = _localeSpecificServlets.get(desiredLocale);\n     }\n     else\n     {\n@@ -184,7 +186,7 @@ private String _getLocaleSpecificServlet(FacesContext context)\n \n       if (matchingLocale != null)\n       {\n-        servletLocation = (String)_localeSpecificServlets.get(matchingLocale);\n+        servletLocation = _localeSpecificServlets.get(matchingLocale);\n       }\n \n       //cache the result of the search\n@@ -197,6 +199,6 @@ private String _getLocaleSpecificServlet(FacesContext context)\n   private static final String _TOPIC_PARAM = \"topic\";\n   private static final String _LOCALE_PARAM = \"locale\";\n   private String _defaultOHWServletLocation = null;\n-  private OptimisticHashMap _localeSpecificServlets = null;\n+  private OptimisticHashMap<Locale, String> _localeSpecificServlets = null;\n }\n ", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/el/OracleHelpProvider.java"}, {"additions": 2, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/el/SecondaryWindowHelpProvider.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/el/SecondaryWindowHelpProvider.java", "sha": "186132610e075f50d2c3f1d3c4f60c3cf0f72e67", "changes": 2, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/el/SecondaryWindowHelpProvider.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f", "patch": "@@ -43,6 +43,7 @@\n    * <p>\n    * @param key criterion (topic-id)\n    */\n+  @Override\n   public Object getHelpTopicValue(Object key)\n   {\n     return _wrapURL(getHelpTopicURL(key));\n@@ -55,6 +56,7 @@ public Object getHelpTopicValue(Object key)\n    * <p>\n    * @param key criterion (HelpProvider key constant)\n    */\n+  @Override\n   public Object getHelpSystemValue(Object key)\n   {\n     return _wrapURL(getHelpSystemURL(key));", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/el/SecondaryWindowHelpProvider.java"}, {"additions": 2, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/el/Tokenizer.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/el/Tokenizer.java", "sha": "78d57574721394e8ea4278a0b9449ee596e79de5", "changes": 4, "status": "modified", "deletions": 2, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/el/Tokenizer.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f", "patch": "@@ -22,7 +22,7 @@\n  * converts a EL expression into tokens.\n  * @author The Oracle ADF Faces Team\n  */\n-public class Tokenizer implements Iterator\n+public class Tokenizer implements Iterator<Tokenizer.Token>\n {\n   /**\n    * Creates a new Tokenizer\n@@ -44,7 +44,7 @@ public boolean hasNext()\n     return _curToken != null;\n   }\n     \n-  public Object next()\n+  public Tokenizer.Token next()\n   {\n     if (_curToken == null)\n       throw new NoSuchElementException();", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/el/Tokenizer.java"}, {"additions": 1, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/el/TrinidadVariableResolver.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/el/TrinidadVariableResolver.java", "sha": "dce685730064797a45ca21be4c724540d557405f", "changes": 1, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/el/TrinidadVariableResolver.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f", "patch": "@@ -34,6 +34,7 @@ public TrinidadVariableResolver(VariableResolver decorated)\n     _decorated = decorated;\n   }\n \n+  @Override\n   public Object resolveVariable(FacesContext context, String name)\n   {\n     if (RequestContext.VARIABLE_NAME.equals(name))", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/el/TrinidadVariableResolver.java"}, {"additions": 1, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/facelets/ReturnActionListenerTag.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/facelets/ReturnActionListenerTag.java", "sha": "fc93767220cc13f38a712a84cecfd1880f8a6ad5", "changes": 2, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/facelets/ReturnActionListenerTag.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f", "patch": "@@ -54,7 +54,7 @@ public void apply(FaceletContext faceletContext,\n       ValueExpression valueExp = _value.getValueExpression(faceletContext, Object.class);\n       ActionSource actionSource = (ActionSource)parent;\n       ReturnActionListener listener = new ReturnActionListener();\n-      listener.setValueBinding(listener.VALUE_KEY, new LegacyValueBinding(valueExp));\n+      listener.setValueBinding(ReturnActionListener.VALUE_KEY, new LegacyValueBinding(valueExp));\n       actionSource.addActionListener(listener);\n     }\n   }", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/facelets/ReturnActionListenerTag.java"}, {"additions": 2, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/facelets/SetActionListenerTag.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/facelets/SetActionListenerTag.java", "sha": "3effa214ff7ffdccbb85d4a9390e47e3206dd52a", "changes": 4, "status": "modified", "deletions": 2, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/facelets/SetActionListenerTag.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f", "patch": "@@ -56,9 +56,9 @@ public void apply(FaceletContext faceletContext,\n                                                             Object.class);\n       ActionSource actionSource= (ActionSource) parent;\n       SetActionListener listener = new SetActionListener();\n-      listener.setValueBinding(listener.FROM_KEY,\n+      listener.setValueBinding(SetActionListener.FROM_KEY,\n                                new LegacyValueBinding(fromExpression));\n-      listener.setValueBinding(listener.TO_KEY,\n+      listener.setValueBinding(SetActionListener.TO_KEY,\n                                new LegacyValueBinding(toExpression));\n       actionSource.addActionListener(listener);\n     }", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/facelets/SetActionListenerTag.java"}, {"additions": 8, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/facelets/StringArrayPropertyTagRule.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/facelets/StringArrayPropertyTagRule.java", "sha": "837257a74b84181946ad366d08057e31e4768646", "changes": 12, "status": "modified", "deletions": 4, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/facelets/StringArrayPropertyTagRule.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f", "patch": "@@ -45,6 +45,7 @@ public LiteralPropertyMetadata(Method method, TagAttribute attribute)\n       _attribute = attribute;\n     }\n     \n+    @Override\n     public void applyMetadata(FaceletContext ctx, Object instance)\n     {\n       if (_params == null)\n@@ -73,6 +74,7 @@ public void applyMetadata(FaceletContext ctx, Object instance)\n   }\n    \n \n+  @Override\n   public Metadata applyRule(\n      String name,\n      TagAttribute attribute,\n@@ -98,13 +100,15 @@ public Metadata applyRule(\n     if (str == null)\n       return null;\n \n-    ArrayList list = new ArrayList();\n+    ArrayList<String> list = new ArrayList<String>();\n     StringTokenizer tokens = new StringTokenizer(str);\n     while (tokens.hasMoreTokens())\n+    {\n       list.add(tokens.nextToken());\n-    String[] strArray = new String[list.size()];\n-    return (String[]) list.toArray(strArray);\n+    }\n+    \n+    return list.toArray(new String[list.size()]);\n   }\n \n-  static private final Class _STRING_ARRAY_TYPE = (new String[0]).getClass();\n+  static private final Class<? extends String[]> _STRING_ARRAY_TYPE = (new String[0]).getClass();\n }", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/facelets/StringArrayPropertyTagRule.java"}, {"additions": 3, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/facelets/TrinidadComponentHandler.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/facelets/TrinidadComponentHandler.java", "sha": "74f75ba9301af6ba0aa4df4892fa75e37535c453", "changes": 3, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/facelets/TrinidadComponentHandler.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f", "patch": "@@ -57,6 +57,8 @@ public TrinidadComponentHandler(ComponentConfig config)\n     }\n   }\n \n+  @SuppressWarnings(\"unchecked\")\n+  @Override\n   protected MetaRuleset createMetaRuleset(Class type)\n   {\n     MetaRuleset m = super.createMetaRuleset(type);\n@@ -67,6 +69,7 @@ protected MetaRuleset createMetaRuleset(Class type)\n     return m;\n   }\n \n+  @Override\n   protected void onComponentPopulated(FaceletContext context,\n                                      UIComponent component,\n                                      UIComponent parent)", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/facelets/TrinidadComponentHandler.java"}, {"additions": 6, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/facelets/TrinidadListenersTagRule.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/facelets/TrinidadListenersTagRule.java", "sha": "9e4fb07b870acb8ea5e6431d065822877a57bdba", "changes": 10, "status": "modified", "deletions": 4, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/facelets/TrinidadListenersTagRule.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f", "patch": "@@ -48,6 +48,7 @@ public ListenerPropertyMetadata(Method method, TagAttribute attribute, Class[] p\n       _paramList = paramList;\n     }\n     \n+    @Override\n     public void applyMetadata(FaceletContext ctx, Object instance)\n     {\n       MethodExpression expr =\n@@ -74,6 +75,7 @@ public void applyMetadata(FaceletContext ctx, Object instance)\n   }\n    \n \n+  @Override\n   public Metadata applyRule(\n      String name,\n      TagAttribute attribute,\n@@ -92,17 +94,17 @@ public Metadata applyRule(\n           return null;\n \n         // It should return an array of FooListener objects\n-        Class arrayType = listeners.getPropertyType();\n+        Class<?> arrayType = listeners.getPropertyType();\n         if (!arrayType.isArray())\n           return null;\n         \n         // Ignore non-ADF types\n-        Class listenerClass = arrayType.getComponentType();\n+        Class<?> listenerClass = arrayType.getComponentType();\n         if (!listenerClass.getName().startsWith(\"org.apache.myfaces.trinidad.\"))\n           return null;\n \n         // Turn that into an Event to get the signature\n-        Class eventClass = _getEventClass(listenerClass);\n+        Class<?> eventClass = _getEventClass(listenerClass);\n         if (eventClass == null)\n           return null;\n \n@@ -114,7 +116,7 @@ public Metadata applyRule(\n     return null;\n   }\n \n-  static private Class _getEventClass(Class listenerClass)\n+  static private Class<?> _getEventClass(Class<?> listenerClass)\n   {\n     String listenerName = listenerClass.getName();\n     if (!listenerName.endsWith(\"Listener\"))", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/facelets/TrinidadListenersTagRule.java"}, {"additions": 2, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/AbstractImageRenderer.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/AbstractImageRenderer.java", "sha": "e1e6025632b7fb7e2067b8f8962c8a47b3a19a1b", "changes": 4, "status": "modified", "deletions": 2, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/AbstractImageRenderer.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f", "patch": "@@ -42,8 +42,8 @@\n    */\n   abstract public Image renderImage(\n     ImageContext context,\n-    Map requestedProperties,\n-    Map responseProperties\n+    Map<Object, Object> requestedProperties,\n+    Map<Object, Object> responseProperties\n     );\n \n   /**", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/AbstractImageRenderer.java"}, {"additions": 1, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/ImageProviderRequest.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/ImageProviderRequest.java", "sha": "ff0d73fcd47904826d211bb287cc42a50a25defe", "changes": 2, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/ImageProviderRequest.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f", "patch": "@@ -50,5 +50,5 @@\n    * @see ImageRenderer\n    * @see ImageConstants\n    */\n-  public Map getRenderProperties(ImageContext context);\n+  public Map<Object, Object> getRenderProperties(ImageContext context);\n }", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/ImageProviderRequest.java"}, {"additions": 3, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/ImageProviderRequestImpl.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/ImageProviderRequestImpl.java", "sha": "5f83f0a80f0a85bb7d34f4d4d2e018dce493c41a", "changes": 6, "status": "modified", "deletions": 3, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/ImageProviderRequestImpl.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f", "patch": "@@ -38,7 +38,7 @@ private ImageProviderRequestImpl() {}\n   public ImageProviderRequestImpl(\n     String     namespaceURI,\n     String     name,\n-    Map renderProperties)\n+    Map<Object, Object> renderProperties)\n   {\n     if (namespaceURI == null) \n     {\n@@ -74,12 +74,12 @@ public String getLocalName()\n   /**\n    * Implementation of ImageProviderRequest.getRenderProperties().\n    */\n-  public Map getRenderProperties(ImageContext context)\n+  public Map<Object, Object> getRenderProperties(ImageContext context)\n   {\n     return _properties;\n   }\n \n   private String     _namespace;\n   private String     _name;\n-  private Map _properties;\n+  private Map<Object, Object> _properties;\n }", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/ImageProviderRequestImpl.java"}, {"additions": 3, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/ImageProviderResponse.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/ImageProviderResponse.java", "sha": "8332c16390c2912c08aed984f3799bfba09ca2e8", "changes": 4, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/ImageProviderResponse.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f", "patch": "@@ -17,6 +17,8 @@\n package org.apache.myfaces.trinidadinternal.image;\n import java.util.Collection;\n \n+import org.apache.myfaces.trinidadinternal.image.util.MapArea;\n+\n \n /**\n  * ImageProviderResponse objects are returned by the ImageProvider\n@@ -62,5 +64,5 @@\n    *\n    * @see org.apache.myfaces.trinidadinternal.image.util.MapArea\n    */\n-  public Collection getMapAreas();\n+  public Collection<MapArea> getMapAreas();\n }", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/ImageProviderResponse.java"}, {"additions": 2, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/ImageRenderer.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/ImageRenderer.java", "sha": "35074d92fd73acef347580268a55b60578d3c4da", "changes": 4, "status": "modified", "deletions": 2, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/ImageRenderer.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f", "patch": "@@ -50,7 +50,7 @@\n    */\n   public Image renderImage(\n     ImageContext context,\n-    Map requestedProperties,\n-    Map responseProperties\n+    Map<Object, Object> requestedProperties,\n+    Map<Object, Object> responseProperties\n     );\n }", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/ImageRenderer.java"}, {"additions": 8, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/ImageTypeImpl.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/ImageTypeImpl.java", "sha": "20c8a235925f4ba1fbfb208ba219007e9963046a", "changes": 20, "status": "modified", "deletions": 12, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/ImageTypeImpl.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f", "patch": "@@ -17,8 +17,6 @@\n package org.apache.myfaces.trinidadinternal.image;\n \n import java.util.Map;\n-import java.util.Iterator;\n-\n \n import org.apache.myfaces.trinidad.util.ArrayMap;\n \n@@ -33,10 +31,11 @@\n   public ImageTypeImpl(\n     String namespaceURI,\n     String name,\n-    Map properties)\n+    Map<Object, Object> properties)\n   {\n     _namespace = namespaceURI;\n     _name = name;\n+    _properties = new ArrayMap<Object, Object>();\n \n     setProperties(properties);\n   }\n@@ -105,27 +104,24 @@ synchronized public void setProperty(Object key, Object value)\n    * This method is not defined on ImageType or MutableImageType -\n    * it is provided as a convenience for ImageTypeManager.\n    */\n-  public void setProperties(Map properties)\n+  public void setProperties(Map<Object, Object> properties)\n   {\n     if (properties == null)\n       return;\n-\n-    Iterator keys = properties.keySet().iterator();\n-    while (keys.hasNext())\n+    \n+    for(Map.Entry<Object, Object> entry : properties.entrySet())\n     {\n-      Object key = keys.next();\n-      Object value = properties.get(key);\n-\n-      setProperty(key, value);\n+      setProperty(entry.getKey(), entry.getValue());\n     }\n   }\n \n+  @Override\n   public String toString()\n   {\n     return getClass().getName() + \"[\" + _namespace + \", \" + _name + \"]\";\n   }\n \n   private String   _namespace;\n   private String   _name;\n-  private ArrayMap _properties = new ArrayMap();\n+  private ArrayMap<Object, Object> _properties;\n }", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/ImageTypeImpl.java"}, {"additions": 1, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/ImageTypeManager.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/ImageTypeManager.java", "sha": "d5f44a4ea1579fc6a81a37952cfd6e391f51f3a3", "changes": 2, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/ImageTypeManager.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f", "patch": "@@ -93,7 +93,7 @@ synchronized public ImageType getImageType(String namespace, String name)\n   synchronized public ImageType registerImageType(\n     String namespace,\n     String name,\n-    Map properties\n+    Map<Object, Object> properties\n     )\n   {\n     ImageType type = getImageType(namespace, name);", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/ImageTypeManager.java"}, {"additions": 19, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/PainterImageRenderer.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/PainterImageRenderer.java", "sha": "05c433615a71225284dcc17b01217baa8fbe8bb8", "changes": 33, "status": "modified", "deletions": 14, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/PainterImageRenderer.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f", "patch": "@@ -83,10 +83,11 @@ public Painter getPainter()\n       * properties that describe what to render.  A PaintContext\n       * object is created using the given Map of properties.\n       */\n+    @Override\n     public Image renderImage(\n       ImageContext imageContext,\n-      Map requestedProperties,\n-      Map responseProperties\n+      Map<Object, Object> requestedProperties,\n+      Map<Object, Object> responseProperties\n       )\n     {\n         if (!isRenderable(imageContext, requestedProperties))\n@@ -155,7 +156,7 @@ public Image renderImage(\n      */\n     protected Painter getPainter(\n       ImageContext imageContext,\n-      Map requestedProperties\n+      Map<Object, Object> requestedProperties\n       )\n     {\n       return getPainter();\n@@ -173,7 +174,7 @@ protected Painter getPainter(\n      */\n     protected boolean isRenderable(\n       ImageContext imageContext,\n-      Map requestedProperties\n+      Map<Object, Object> requestedProperties\n       )\n     {\n       return GraphicsUtils.isGraphicalEnvironment();\n@@ -183,7 +184,9 @@ protected boolean isRenderable(\n      * Returns the foreground color to use when painting an image\n      * with the specified Map.\n      */\n-    protected Color getPaintForeground(ImageContext context, Map d)\n+    protected Color getPaintForeground(\n+        ImageContext context, \n+        Map<Object,Object> d)\n     {\n       return (Color)d.get(FOREGROUND_KEY);\n     }\n@@ -192,7 +195,9 @@ protected Color getPaintForeground(ImageContext context, Map d)\n      * Returns the background color to use when painting an image\n      * with the specified Map.\n      */\n-    protected Color getPaintBackground(ImageContext context, Map d)\n+    protected Color getPaintBackground(\n+        ImageContext context, \n+        Map<Object,Object> d)\n     {\n       return (Color)d.get(BACKGROUND_KEY);\n     }\n@@ -201,7 +206,7 @@ protected Color getPaintBackground(ImageContext context, Map d)\n      * Returns the font color to use when painting an image\n      * with the specified Map.\n      */\n-    protected Font getPaintFont(Map d)\n+    protected Font getPaintFont(Map<Object,Object> d)\n     {\n       Object o = d.get(FONT_KEY);\n \n@@ -211,7 +216,7 @@ protected Font getPaintFont(Map d)\n       return (Font)d.get(FONT_KEY);\n     }\n \n-    protected Object getPaintData(Object key, Map d)\n+    protected Object getPaintData(Object key, Map<Object,Object> d)\n     {\n       return d.get(key);\n     }\n@@ -223,8 +228,8 @@ protected Object getPaintData(Object key, Map d)\n     protected PaintContext createPaintContext(\n       ImageContext imageContext,\n       BufferedImage image,\n-      Map requestedProperties,\n-      Map responseProperties\n+      Map<Object,Object> requestedProperties,\n+      Map<Object,Object> responseProperties\n       )\n     {\n       return\n@@ -250,8 +255,8 @@ protected void disposePaintContext(PaintContext context)\n         public Context(\n           ImageContext imageContext,\n           BufferedImage image,\n-          Map requestedProperties,\n-          Map responseProperties\n+          Map<Object,Object> requestedProperties,\n+          Map<Object,Object> responseProperties\n           )\n \n         {\n@@ -395,8 +400,8 @@ public int getReadingDirection()\n \n         private Graphics2D            _graphics;\n         private ImageContext          _imageContext;\n-        private Map            _requested;\n-        private Map            _response;\n+        private Map<Object,Object>    _requested;\n+        private Map<Object,Object>    _response;\n         private int                   _direction;\n \n     }", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/PainterImageRenderer.java"}, {"additions": 1, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/PropertyInstantiator.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/PropertyInstantiator.java", "sha": "78e5110fb9add24ce009bbfb9f83337db443250c", "changes": 2, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/PropertyInstantiator.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f", "patch": "@@ -46,7 +46,7 @@ public Object instantiate()\n   {\n     try\n     {\n-      Class classInstance = ClassLoaderUtils.loadClass(_className);\n+      Class<?> classInstance = ClassLoaderUtils.loadClass(_className);\n       return classInstance.newInstance();\n     }\n     catch (ClassNotFoundException cnfe)", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/PropertyInstantiator.java"}, {"additions": 8, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/AccentColorizedIconKey.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/AccentColorizedIconKey.java", "sha": "4f45d56b5c7cb70ad23f5294b31590c896e79def", "changes": 14, "status": "modified", "deletions": 6, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/AccentColorizedIconKey.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f", "patch": "@@ -36,7 +36,7 @@\n    */\n   public AccentColorizedIconKey(\n     ImageContext context,\n-    Map properties\n+    Map<Object, Object> properties\n     )\n   {\n     super(context, properties);\n@@ -47,11 +47,11 @@ public AccentColorizedIconKey(\n    */\n   protected AccentColorizedIconKey(\n     ImageContext context,\n-    String source,\n-    Class  lookAndFeel,\n-    int    direction,\n-    Color  color,\n-    Color  surroundingColor)\n+    String   source,\n+    Class<?> lookAndFeel,\n+    int      direction,\n+    Color    color,\n+    Color    surroundingColor)\n   {\n     super(context, source, lookAndFeel, direction, color, surroundingColor);\n   }\n@@ -62,6 +62,7 @@ protected AccentColorizedIconKey(\n    * @deprecated in favor of\n    * {@link #AccentColorizedIconKey( ImageContext, String, Class, int, Color, Color)}\n    */\n+  @Deprecated\n   protected AccentColorizedIconKey(\n     ImageContext context,\n     String source,\n@@ -83,6 +84,7 @@ protected AccentColorizedIconKey(\n    * Returns the color key for accent colorized icons: \n    * ImageConstants.DARK_ACCENT_COLOR_KEY.\n    */\n+  @Override\n   public Object getColorKey()\n   {\n     return ImageConstants.DARK_ACCENT_COLOR_KEY;", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/AccentColorizedIconKey.java"}, {"additions": 20, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/BaseColorizedIconKey.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/BaseColorizedIconKey.java", "sha": "a76750f17165573e5a74edce3ca9b6b791a72665", "changes": 37, "status": "modified", "deletions": 17, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/BaseColorizedIconKey.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f", "patch": "@@ -44,11 +44,11 @@\n    */\n   protected BaseColorizedIconKey(\n     ImageContext context,\n-    Map properties\n+    Map<Object, Object> properties\n     )\n   {\n     String source = (String)properties.get(SOURCE_KEY);\n-    Class lookAndFeel = (Class)properties.get(LAF_KEY);\n+    Class<?> lookAndFeel = (Class)properties.get(LAF_KEY);\n     int direction = CacheUtils.getReadingDirection(context, properties);\n     Color color = (Color)properties.get(getColorKey());\n     Color surroundingColor = (Color)properties.get(SURROUNDING_COLOR_KEY);\n@@ -61,11 +61,11 @@ protected BaseColorizedIconKey(\n    */\n   protected BaseColorizedIconKey(\n     ImageContext context,\n-    String source,\n-    Class  lookAndFeel,\n-    int    direction,\n-    Color  color,\n-    Color  surroundingColor)\n+    String   source,\n+    Class<?> lookAndFeel,\n+    int      direction,\n+    Color    color,\n+    Color    surroundingColor)\n   {\n     _init(source, lookAndFeel, direction, color, surroundingColor);\n   }\n@@ -75,6 +75,7 @@ protected BaseColorizedIconKey(\n    * @deprecated in favor of\n    * {@link #BaseColorizedIconKey( ImageContext, String, Class, int, Color, Color)}\n    */\n+  @Deprecated\n   protected BaseColorizedIconKey(\n     ImageContext context,\n     String source,\n@@ -111,6 +112,7 @@ public String getLocalName()\n   /**\n    * Override of Object.equals().\n    */\n+  @Override\n   public boolean equals(Object o)\n   {\n     // This equals implementation assumes that the same source icon name\n@@ -132,6 +134,7 @@ public boolean equals(Object o)\n   /**\n    * Override of Object.hashCode().\n    */\n+  @Override\n   public int hashCode()\n   {\n     return (_source.hashCode() |\n@@ -144,9 +147,9 @@ public int hashCode()\n   /**\n    * Implementation of ImageProviderRequest.getRenderProperties().\n    */\n-  public Map getRenderProperties(ImageContext context)\n+  public Map<Object, Object> getRenderProperties(ImageContext context)\n   {\n-    ArrayMap properties = new ArrayMap(_MAP_SIZE);\n+    ArrayMap<Object, Object> properties = new ArrayMap<Object, Object>(_MAP_SIZE);\n     properties.put(ImageConstants.SOURCE_KEY, getSource());\n     properties.put(getColorKey(), getColor());\n     properties.put(SURROUNDING_COLOR_KEY, _surroundingColor);\n@@ -168,7 +171,7 @@ protected String getSource()\n   /**\n    * Returns the lookAndFeel property.\n    */\n-  protected Class getLookAndFeel()\n+  protected Class<?> getLookAndFeel()\n   {\n     return _lookAndFeel;\n   }\n@@ -200,7 +203,7 @@ protected void setSource(String source)\n   /**\n    * Sets the lookAndFeel property.\n    */\n-  protected void setLookAndFeel(Class lookAndFeel)\n+  protected void setLookAndFeel(Class<?> lookAndFeel)\n   {\n     _lookAndFeel = lookAndFeel;\n   }\n@@ -223,11 +226,11 @@ protected void setColor(Color color)\n   }\n \n   private void _init(\n-    String source,\n-    Class  lookAndFeel,\n-    int    direction,\n-    Color  color,\n-    Color  surroundingColor\n+    String   source,\n+    Class<?> lookAndFeel,\n+    int      direction,\n+    Color    color,\n+    Color    surroundingColor\n     )\n   {\n     _lookAndFeel = lookAndFeel;\n@@ -248,7 +251,7 @@ private void _init(\n   private int         _direction;\n   private Color       _color;\n   private Color       _surroundingColor;\n-  private Class       _lookAndFeel;\n+  private Class<?>    _lookAndFeel;\n \n   // The size for the render properties ArrayMap.  We leave room for\n   // the SOURCE_INPUT_STREAM_PROVIDER_KEY property, typically provided", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/BaseColorizedIconKey.java"}, {"additions": 11, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/Cache.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/Cache.java", "sha": "fb5d1f57af9d00583df7577b12eb10f32fdbbb97", "changes": 17, "status": "modified", "deletions": 6, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/Cache.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f", "patch": "@@ -37,11 +37,12 @@\n {\n   public Cache()\n   {\n+    _cache = new OptimisticHashMap<Object, CacheEntry>(_CACHE_SIZE);\n   }\n \n   public CacheEntry get(ImageContext context, Object key)\n   {\n-    CacheEntry entry = (CacheEntry)_cache.get(key);\n+    CacheEntry entry = _cache.get(key);\n     if (entry == null)\n       return null;\n \n@@ -81,7 +82,7 @@ public void put(ImageContext context, Object key, CacheEntry entry)\n     {\n       // First check to see if we have already got an entry -\n       // perhaps for some other encoding\n-      CacheEntry topEntry = (CacheEntry)_cache.get(key);\n+      CacheEntry topEntry = _cache.get(key);\n       if (topEntry == null)\n       {\n         _cache.put(key, entry);\n@@ -123,7 +124,7 @@ public void remove(\n   {\n     synchronized (_cache)\n     {\n-      CacheEntry topEntry = (CacheEntry)_cache.get(key);\n+      CacheEntry topEntry = _cache.get(key);\n \n       if (topEntry == entry)\n       {\n@@ -258,7 +259,7 @@ private char _getValidCharacter(char c)\n       return 0x5f;\n \n     // Convert to hexidecimal string\n-    String hex = Integer.toHexString((int)c);\n+    String hex = Integer.toHexString(c);\n \n     // To keep names short, just pick off the last character - it's the\n     // most variable digit.\n@@ -311,13 +312,17 @@ private static boolean _isMissRetryEntry(CacheEntry entry)\n   }\n \n   // Hashtable of CacheKeys to CacheEntrys\n-  private OptimisticHashMap _cache = new OptimisticHashMap(_CACHE_SIZE);\n+  private OptimisticHashMap<Object, CacheEntry> _cache;\n \n   // List of base names.\n   // =-=ags We use a Hashtable so that lookups are quick.  However,\n   // this probably should just be a sorted list and do a binary\n   // search, since we don't care about the value, just the key.\n-  private Hashtable _names = new Hashtable(_NAMES_SIZE);\n+  // -= Simon Lessard =-\n+  // FIXME: Hashtale is synchronized (thus slow). If thread safety is not \n+  //        required, HashMap would be better,\n+  private Hashtable<String, Boolean> _names = \n+    new Hashtable<String, Boolean>(_NAMES_SIZE);\n \n   private static final int _CACHE_SIZE = 101;\n ", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/Cache.java"}, {"additions": 2, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/CacheEntry.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/CacheEntry.java", "sha": "0cb97a6f6e0c914c8beeeab333a5ab7e43b26b06", "changes": 3, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/CacheEntry.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f", "patch": "@@ -22,6 +22,7 @@\n import org.apache.myfaces.trinidadinternal.image.ImageProviderResponse;\n \n import org.apache.myfaces.trinidadinternal.image.encode.ImageEncoderManager;\n+import org.apache.myfaces.trinidadinternal.image.util.MapArea;\n \n /** \n  * Cache entry data structure\n@@ -84,7 +85,7 @@ public String getEncoding()\n     return _encoding;\n   }\n \n-  public Collection getMapAreas()\n+  public Collection<MapArea> getMapAreas()\n   {\n     return null;\n   }", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/CacheEntry.java"}, {"additions": 1, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/CacheKeyFactory.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/CacheKeyFactory.java", "sha": "8efb4c7aea54191626af383ac8811f9b855db4bb", "changes": 2, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/CacheKeyFactory.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f", "patch": "@@ -45,6 +45,6 @@\n    * @param context The image context\n    * @param property The dictionary of requested image properties\n    */\n-  public Object getCacheKey(ImageContext context, Map properties);\n+  public Object getCacheKey(ImageContext context, Map<Object, Object> properties);\n }\n ", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/CacheKeyFactory.java"}, {"additions": 8, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/CacheUtils.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/CacheUtils.java", "sha": "d06cdc144bb3ba8338f00ddf431cafe11db0c514", "changes": 16, "status": "modified", "deletions": 8, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/CacheUtils.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f", "patch": "@@ -50,7 +50,7 @@ private CacheUtils() {}\n \n   public static int getReadingDirection(\n     ImageContext context,\n-    Map properties\n+    Map<Object, Object> properties\n     )\n   {\n     LocaleContext localeContext = context.getLocaleContext();\n@@ -75,7 +75,7 @@ public static int getReadingDirection(\n \n   // Gets a Boolean value\n   public static boolean getBoolean(\n-    Map properties,\n+    Map<Object, Object> properties,\n     Object key,\n     boolean defaultValue\n     )\n@@ -89,7 +89,7 @@ public static boolean getBoolean(\n \n   // Puts a Boolean value into a dictionary\n   public static void putBoolean(\n-    Map properties,\n+    Map<Object, Object> properties,\n     Object key,\n     boolean value\n     )\n@@ -98,7 +98,7 @@ public static void putBoolean(\n   }\n \n   // Tests for TEXT_ANTIALIAS_KEY\n-  public static boolean isTextAntialiased(Map properties)\n+  public static boolean isTextAntialiased(Map<Object, Object> properties)\n   {\n     return getBoolean(properties, ImageConstants.TEXT_ANTIALIAS_KEY, false);\n   }\n@@ -123,7 +123,7 @@ public static FontProxy getSharedFont(FontProxy font)\n     if (font == null)\n       return null;\n \n-    FontProxy sharedFont = (FontProxy)_sFontProxyCache.get(font);\n+    FontProxy sharedFont = _sFontProxyCache.get(font);\n     if (sharedFont != null)\n       return sharedFont;\n \n@@ -141,7 +141,7 @@ public static FontProxy getSharedFont(FontProxy font)\n    * Convenience method for getting a shared FontProxy for a font\n    * specified in a properties dictionary.\n    */\n-  public static FontProxy getSharedFont(Map properties, Object key)\n+  public static FontProxy getSharedFont(Map<Object, Object> properties, Object key)\n   {\n     return getSharedFont((FontProxy)properties.get(key));\n   }\n@@ -167,8 +167,8 @@ public static String base64Encode(int value)\n     return buffer.toString();\n   }\n \n-  private static final Map _sFontProxyCache = \n-    Collections.synchronizedMap(new LRUCache(50));\n+  private static final Map<FontProxy, FontProxy> _sFontProxyCache = \n+    Collections.synchronizedMap(new LRUCache<FontProxy, FontProxy>(50));\n \n   // Characters for base 64 encodings\n   private static final char[] _BASE_64_CHARS =", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/CacheUtils.java"}, {"additions": 1, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/ColorizedIconKeyFactory.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/ColorizedIconKeyFactory.java", "sha": "5aedd30ca6af69ff85cac09aba297ee606a126ac", "changes": 2, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/ColorizedIconKeyFactory.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f", "patch": "@@ -32,7 +32,7 @@\n   /**\n    * Implementation of CacheKeyFactory.getCacheKey().\n    */\n-  public Object getCacheKey(ImageContext context, Map properties)\n+  public Object getCacheKey(ImageContext context, Map<Object, Object> properties)\n   {\n     if (properties.get(ImageConstants.DARK_COLOR_KEY) != null)\n       return new CoreColorizedIconKey(context, properties);", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/ColorizedIconKeyFactory.java"}, {"additions": 1, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/ColorizedIconNameProvider.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/ColorizedIconNameProvider.java", "sha": "24d6cd622d2f62ee9c7b4aede43146f8b65fa9e7", "changes": 2, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/ColorizedIconNameProvider.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f", "patch": "@@ -32,7 +32,7 @@\n  */\n public class ColorizedIconNameProvider implements NameProvider\n {\n-  public String getName(ImageContext context, Map properties)\n+  public String getName(ImageContext context, Map<Object, Object> properties)\n   {\n     String name = (String)properties.get(ImageConstants.NAME_KEY);\n ", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/ColorizedIconNameProvider.java"}, {"additions": 13, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/CompositeButtonKey.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/CompositeButtonKey.java", "sha": "d25a76804c0b4a58d2e8e9923b3aa1914dbf678f", "changes": 23, "status": "modified", "deletions": 10, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/CompositeButtonKey.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f", "patch": "@@ -46,7 +46,7 @@\n    */\n   public CompositeButtonKey(\n     ImageContext context,\n-    Map properties\n+    Map<Object, Object> properties\n     )\n   {\n     String lookAndFeelId = (String)properties.get(LOOK_AND_FEEL_ID_KEY);\n@@ -144,6 +144,7 @@ public String getLocalName()\n   /**\n    * Override of Object.equals().\n    */\n+  @Override\n   public boolean equals(Object o)\n   {\n     if (this == o)\n@@ -172,6 +173,7 @@ public boolean equals(Object o)\n   /**\n    * Override of Object.hashCode().\n    */\n+  @Override\n   public int hashCode()\n   {\n     // In order to implement font name wildcarding, we don't hash on font\n@@ -197,9 +199,9 @@ public int hashCode()\n   /**\n    * Implementation of ImageProviderRequest.getRenderProperties().\n    */\n-  public Map getRenderProperties(ImageContext context)\n+  public Map<Object, Object> getRenderProperties(ImageContext context)\n   {\n-    ArrayMap properties = new ArrayMap(_MAP_SIZE);\n+    ArrayMap<Object, Object> properties = new ArrayMap<Object, Object>(_MAP_SIZE);\n     properties.put(LOOK_AND_FEEL_ID_KEY, _lookAndFeelId);\n     properties.put(NAME_KEY, _name);\n     properties.put(TEXT_KEY, _text);\n@@ -251,6 +253,7 @@ protected InputStreamProvider getBottomBackgroundIcon()\n     return null;\n   }\n \n+  @Override\n   public String toString()\n   {\n     String propertiesString =\n@@ -398,7 +401,7 @@ private void _init(\n   }\n \n   private char _getChar(\n-    Map properties,\n+    Map<Object, Object> properties,\n     Object key\n     )\n   {\n@@ -410,7 +413,7 @@ private char _getChar(\n   }\n \n   private void _putChar(\n-    Map properties,\n+    Map<Object, Object> properties,\n     Object key,\n     char value\n     )\n@@ -482,15 +485,15 @@ private boolean _fontEquals(FontProxy font)\n   // Returns the InputStreamProvider for the icon with\n   // the specific key.\n   private InputStreamProvider _getIcon(\n-    Map properties,\n+    Map<Object, Object> properties,\n     Object     iconKey\n     )\n   {\n     return (InputStreamProvider)properties.get(iconKey);\n   }\n \n   // Put the start icon in the specified properties dictionary\n-  private void _putStartIcon(Map properties)\n+  private void _putStartIcon(Map<Object, Object> properties)\n   {\n     if (_startIcon == null)\n       _startIcon = getStartIcon();\n@@ -500,7 +503,7 @@ private void _putStartIcon(Map properties)\n   }\n \n   // Put the end icon in the specified properties dictionary\n-  private void _putEndIcon(Map properties)\n+  private void _putEndIcon(Map<Object, Object> properties)\n   {\n     if (_endIcon == null)\n       _endIcon = getEndIcon();\n@@ -510,7 +513,7 @@ private void _putEndIcon(Map properties)\n   }\n \n   // Put the top background icon in the specified properties dictionary\n-  private void _putTopBackgroundIcon(Map properties)\n+  private void _putTopBackgroundIcon(Map<Object, Object> properties)\n   {\n     if (_topBackgroundIcon == null)\n       _topBackgroundIcon = getTopBackgroundIcon();\n@@ -520,7 +523,7 @@ private void _putTopBackgroundIcon(Map properties)\n   }\n \n   // Put the bottom background icon in the specified properties dictionary\n-  private void _putBottomBackgroundIcon(Map properties)\n+  private void _putBottomBackgroundIcon(Map<Object, Object> properties)\n   {\n     if (_bottomBackgroundIcon == null)\n       _bottomBackgroundIcon = getBottomBackgroundIcon();", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/CompositeButtonKey.java"}, {"additions": 1, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/CompositeButtonKeyFactory.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/CompositeButtonKeyFactory.java", "sha": "181184a5b76cdbde62ba10fcdcf48421c12444d7", "changes": 2, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/CompositeButtonKeyFactory.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f", "patch": "@@ -31,7 +31,7 @@\n   /**\n    * Implementation of CacheKeyFactory.getCacheKey().\n    */\n-  public Object getCacheKey(ImageContext context, Map properties)\n+  public Object getCacheKey(ImageContext context, Map<Object, Object> properties)\n   {\n     return new CompositeButtonKey(context, properties);\n   }", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/CompositeButtonKeyFactory.java"}, {"additions": 4, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/CompositeButtonNameProvider.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/CompositeButtonNameProvider.java", "sha": "62260e872b6466f79c76b3d004cecda64a885d60", "changes": 6, "status": "modified", "deletions": 2, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/CompositeButtonNameProvider.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f", "patch": "@@ -30,7 +30,9 @@\n public class CompositeButtonNameProvider\n   implements NameProvider, ImageConstants\n {\n-  public String getName(ImageContext context, Map requestedProperties)\n+  public String getName(\n+      ImageContext context, \n+      Map<Object, Object> requestedProperties)\n   {\n     String name = (String)requestedProperties.get(ImageConstants.NAME_KEY);\n \n@@ -65,7 +67,7 @@ public String getName(ImageContext context, Map requestedProperties)\n   // Produces a hash code based on the requested properties\n   private int _hashCode(\n     ImageContext context,\n-    Map properties\n+    Map<Object, Object> properties\n     )\n   {\n     Object text = properties.get(TEXT_KEY);", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/CompositeButtonNameProvider.java"}, {"additions": 10, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/CompositeButtonPropertiesFilter.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/CompositeButtonPropertiesFilter.java", "sha": "d813e3839223be115a76084bc34f9107d3359cab", "changes": 19, "status": "modified", "deletions": 9, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/CompositeButtonPropertiesFilter.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f", "patch": "@@ -37,9 +37,9 @@\n   /**\n    * Implementation of PropertiesFilter.filterProperties()\n    */\n-  public Map filterProperties(\n+  public Map<Object, Object> filterProperties(\n     ImageContext context,\n-    Map properties\n+    Map<Object, Object> properties\n     )\n   {\n     return new Defaults(context, properties);\n@@ -50,19 +50,20 @@ public Map filterProperties(\n    * WrappingMap which provides default values for\n    * missing properties.\n    */\n-  static private class Defaults extends WrappingMap\n+  static private class Defaults extends WrappingMap<Object, Object>\n     implements ImageConstants\n   {\n     public Defaults(\n       ImageContext context,\n-      Map   properties\n+      Map<Object, Object> properties\n       )\n     {\n       super(properties);\n \n       _context = context;\n     }\n \n+    @Override\n     public Object get(Object key)\n     {\n       Object value = super.get(key);\n@@ -90,7 +91,7 @@ public Object get(Object key)\n         return value;\n       }\n \n-      Map properties = getWrappedMap();\n+      Map<Object, Object> properties = getWrappedMap();\n \n       if (key.equals(ImageConstants.FOREGROUND_KEY))\n         return _getDefaultForeground(properties);\n@@ -104,20 +105,20 @@ public Object get(Object key)\n       return null;\n     }\n \n-    private Color _getDefaultForeground(Map properties)\n+    private Color _getDefaultForeground(Map<Object, Object> properties)\n     {\n       return ButtonPainter.getDefaultForeground(_context,\n                                                 _isDisabled(properties));\n     }\n \n-    private Color _getDefaultBackground(Map properties)\n+    private Color _getDefaultBackground(Map<Object, Object> properties)\n     {\n       return ButtonPainter.getDefaultBackground(_context,\n                                                 _isDisabled(properties));\n     }\n \n \n-    private boolean _isDisabled(Map properties)\n+    private boolean _isDisabled(Map<Object, Object> properties)\n     {\n       Boolean disabled = (Boolean)properties.get(DISABLED_KEY);\n \n@@ -127,7 +128,7 @@ private boolean _isDisabled(Map properties)\n       return disabled.booleanValue();\n     }\n \n-    private Color _getDefaultBorderColor(Map properties)\n+    private Color _getDefaultBorderColor(Map<Object, Object> properties)\n     {\n       return ButtonPainter.getDefaultBorderColor(_context,\n                                                  _isDisabled(properties));", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/CompositeButtonPropertiesFilter.java"}, {"additions": 4, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/CoreColorizedIconKey.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/CoreColorizedIconKey.java", "sha": "07e47cf7e46f55ae4697b6cd99793663b8ee7074", "changes": 6, "status": "modified", "deletions": 2, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/CoreColorizedIconKey.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f", "patch": "@@ -36,7 +36,7 @@\n    */\n   public CoreColorizedIconKey(\n     ImageContext context,\n-    Map properties\n+    Map<Object, Object> properties\n     )\n   {\n     super(context, properties);\n@@ -48,7 +48,7 @@ public CoreColorizedIconKey(\n   protected CoreColorizedIconKey(\n     ImageContext context,\n     String source,\n-    Class  lookAndFeel,\n+    Class<?> lookAndFeel,\n     int    direction,\n     Color  color,\n     Color  surroundingColor)\n@@ -61,6 +61,7 @@ protected CoreColorizedIconKey(\n    * @deprecated in favor of\n    * {@link #CoreColorizedIconKey( ImageContext, String, Class, int, Color, Color)}\n    */\n+  @Deprecated\n   protected CoreColorizedIconKey(\n     ImageContext context,\n     String source,\n@@ -75,6 +76,7 @@ protected CoreColorizedIconKey(\n    * Returns the color key for core colorized icons:\n    * ImageConstants.DARK_COLOR_KEY.\n    */\n+  @Override\n   public Object getColorKey()\n   {\n     return ImageConstants.DARK_COLOR_KEY;", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/CoreColorizedIconKey.java"}, {"additions": 49, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/FileSystemImageCache.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/FileSystemImageCache.java", "sha": "6e0e25ca888969c0afa2820cc8c1af9c40a1bf07", "changes": 83, "status": "modified", "deletions": 34, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/FileSystemImageCache.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f", "patch": "@@ -104,7 +104,7 @@ public static ImageProvider getSharedCache(\n     // fail due to insignificant path incosistencies.\n     realPath = _getCanonicalPath(realPath);\n \n-    ImageProvider cache = (ImageProvider)_sSharedCaches.get(realPath);\n+    ImageProvider cache = _sSharedCaches.get(realPath);\n \n     // If we didn't find a shared cache, create a new cache\n     // and cache it in the shared cache cache.  :-)\n@@ -118,7 +118,7 @@ public static ImageProvider getSharedCache(\n       // _sSharedCaches.\n       synchronized (_sSharedCaches)\n       {\n-        ImageProvider tmp = (ImageProvider)_sSharedCaches.get(realPath);\n+        ImageProvider tmp = _sSharedCaches.get(realPath);\n         if (tmp != null)\n         {\n           // Stick with tmp\n@@ -156,7 +156,7 @@ protected FileSystemImageCache(String realPath)\n     // Initialize our table of per-Locale caches.  Note on table size:\n     // We don't expect a single FileSystemImageCache to be serving up images\n     // for a huge number of different locales - using a small table size.\n-     _caches = new OptimisticHashMap(19);\n+     _caches = new OptimisticHashMap<String, Cache>(19);\n   }\n \n   /**\n@@ -236,7 +236,7 @@ public ImageProviderResponse getImage(\n       // may have been generated by another FileSystemImageCache instance\n       // running in a different process.  We need the request properties\n       // to do this, in order to produce the target file name.\n-      Map properties = _getFilteredProperties(context, type, request);\n+      Map<Object, Object> properties = _getFilteredProperties(context, type, request);\n \n       // If we don't have any properties, we can't render.\n       if (properties == null)\n@@ -349,7 +349,7 @@ private Cache _getCache(ImageContext context, ImageType type)\n     Cache cache = null;\n \n     if (localized)\n-      cache = (Cache)_caches.get(language);\n+      cache = _caches.get(language);\n     else\n       cache = _globalCache;\n \n@@ -379,7 +379,7 @@ private Cache _getCache(ImageContext context, ImageType type)\n       }\n       else\n       {\n-        cache = (Cache)_caches.get(language);\n+        cache = _caches.get(language);\n       }\n     }\n     else\n@@ -464,7 +464,7 @@ private CacheEntry _getImageFromFileSystem(\n     ImageType            type,\n     Cache                cache,\n     Object               key,\n-    Map           properties\n+    Map<Object, Object>  properties\n     ) throws CacheException\n   {\n     // We identify potential matches on the file system by checking\n@@ -537,7 +537,7 @@ private CacheEntry _generateImage(\n     ImageProviderRequest request,\n     Cache        cache,\n     Object       key,\n-    Map   properties\n+    Map<Object, Object> properties\n     )\n     throws CacheException\n   {\n@@ -550,7 +550,9 @@ private CacheEntry _generateImage(\n     // 1. WIDTH_RESPONSE_KEY\n     // 2. HEIGHT_RESPONSE_KEY\n     // 3. IMAGE_MAP_AREAS_RESPONSE_KEY\n-    ArrayMap responseProperties = new ArrayMap(3);\n+    ArrayMap<Object, Object> responseProperties = \n+      new ArrayMap<Object, Object>(3);\n+    \n     byte[] imageData = null;\n \n     try\n@@ -711,7 +713,7 @@ private Object _loadImage(\n     assert (type != null);\n \n       // Get the properties from the request\n-    Map properties = request.getRenderProperties(context);\n+    Map<Object, Object> properties = request.getRenderProperties(context);\n     assert (properties != null);\n \n     // Get the base name for the URI (minus the extension)\n@@ -762,8 +764,8 @@ private CacheEntry _putCachedImage(\n     Cache        cache,\n     Object       key,\n     String       name,\n-    Map   properties,\n-    Map   responseProperties\n+    Map<Object, Object> properties,\n+    Map<Object, Object> responseProperties\n     ) throws CacheException\n   {\n     // Make sure that we've got a new CacheKey.  We wouldn't want to\n@@ -860,8 +862,8 @@ private void _removeImageFromFileSystem(\n   private byte[] _renderImageLocal(\n     ImageContext context,\n     ImageType    type,\n-    Map   properties,\n-    Map   responseProperties\n+    Map<Object, Object> properties,\n+    Map<Object, Object> responseProperties\n     ) throws CacheException\n   {\n     Configuration config = context.getConfiguration();\n@@ -889,7 +891,7 @@ private void _removeImageFromFileSystem(\n     }\n \n     // Before we do any rendering check for Configuration.HEADLESS\n-    if (Boolean.TRUE.equals(config.getProperty(config.HEADLESS)) ||\n+    if (Boolean.TRUE.equals(config.getProperty(Configuration.HEADLESS)) ||\n         !GraphicsUtils.isGraphicalEnvironment())\n     {\n       // We're special casing colorized icons so that we can generate\n@@ -1006,7 +1008,7 @@ private File _writeImageFile(\n     ImageType    type,\n     String       name,\n     byte[]       data,\n-    Map   properties\n+    Map<Object, Object> properties\n     ) throws CacheException\n   {\n     // Derive the full path of the image file\n@@ -1034,8 +1036,8 @@ private File _writeImageMetadataFile(\n     ImageContext context,\n     ImageType    type,\n     String       name,\n-    Map   properties,\n-    Map   responseProperties\n+    Map<Object, Object> properties,\n+    Map<Object, Object> responseProperties\n     )\n     throws CacheException\n   {\n@@ -1094,8 +1096,8 @@ private File _writeImageMetadataFile(\n   private void _writeImageProviderRequest(\n     ImageContext context,\n     ImageType    type,\n-    Map   properties,\n-    Map   responseProperties,\n+    Map<Object, Object> properties,\n+    Map<Object, Object> responseProperties,\n     PrintWriter  writer\n     ) throws CacheException\n   {\n@@ -1204,7 +1206,7 @@ private CacheEntry _createCacheEntry(\n     ImageContext context,\n     ImageType    type,\n     String       uri,\n-    Map   properties)\n+    Map<Object, Object> properties)\n   {\n     // Get the cache entry\n     int width = _getIntSize(properties, WIDTH_RESPONSE_KEY);\n@@ -1285,7 +1287,7 @@ private CacheKeyFactory _getCacheKeyFactory(ImageType type)\n   // instance.\n   private static String _getCanonicalPath(String path)\n   {\n-    String canonicalPath = (String)_sCanonicalPaths.get(path);\n+    String canonicalPath = _sCanonicalPaths.get(path);\n     if (canonicalPath != null)\n       return canonicalPath;\n \n@@ -1310,7 +1312,7 @@ private static String _getCanonicalPath(String path)\n   private String _getFileName(\n     ImageContext context,\n     ImageType    type,\n-    Map   properties\n+    Map<Object, Object> properties\n     )\n     throws CacheException\n   {\n@@ -1331,13 +1333,13 @@ private String _getFileName(\n \n   // Returns the complete set of properties needed to render/encode\n   // the requested image\n-  private Map _getFilteredProperties(\n+  private Map<Object, Object> _getFilteredProperties(\n     ImageContext context,\n     ImageType type,\n     ImageProviderRequest request\n     )\n   {\n-    Map properties = request.getRenderProperties(context);\n+    Map<Object, Object> properties = request.getRenderProperties(context);\n     if (properties == null)\n       return null;\n \n@@ -1360,7 +1362,7 @@ private Map _getFilteredProperties(\n   // Returns the ImageEncoder to use for the requested image\n   private ImageEncoder _getImageEncoder(\n     ImageContext context,\n-    Map   properties\n+    Map<Object, Object> properties\n     ) throws CacheException\n   {\n     String encoding = _getImageEncoding(context, properties);\n@@ -1380,7 +1382,9 @@ private ImageEncoder _getImageEncoder(\n \n   // Returns the encoding to use for images generated\n   // using the specified context\n-  private String _getImageEncoding(ImageContext context, Map properties)\n+  private String _getImageEncoding(\n+      ImageContext context, \n+      Map<Object, Object> properties)\n   {\n     String encoding = (String)properties.get(ENCODING_TYPE_KEY);\n     if (encoding != null)\n@@ -1429,7 +1433,7 @@ private String _getImageEncoding(ImageContext context, Map properties)\n   // Returns the extension for the current image encoding\n   private String _getImageEncodingExtension(\n     ImageContext context,\n-    Map   properties\n+    Map<Object, Object> properties\n     ) throws CacheException\n   {\n     String encoding = _getImageEncoding(context, properties);\n@@ -1485,7 +1489,9 @@ private ImageType _getImageType(\n   }\n \n   // Returns an int from the specified Map\n-  private int _getIntSize(Map properties, Object key)\n+  private int _getIntSize(\n+      Map<Object, Object> properties, \n+      Object key)\n   {\n     Integer value = (Integer)properties.get(key);\n \n@@ -1631,8 +1637,8 @@ private boolean _isTypeLocalized(ImageType type)\n   // Reads colorized icon image data from the request properties\n   private byte[] _readColorizedIconData(\n     ImageContext context,\n-    Map   properties,\n-    Map   responseProperties\n+    Map<Object, Object> properties,\n+    Map<Object, Object> responseProperties\n     ) throws CacheException\n   {\n     // Only bother doing this if we're generating GIFs\n@@ -1728,15 +1734,19 @@ public boolean accept(File dir, String name)\n   // Hashtable containing caches (ie. Hashtables) hashed by Locale.\n   // Each cache stores mappings from PropertiesKeys to the \"base name\"\n   // of the image/metadata/map.\n-  private OptimisticHashMap _caches;\n+  private OptimisticHashMap<String, Cache> _caches;\n \n   // The locale-independent cache\n   private Cache _globalCache;\n \n   // Table of shared FileSystemImageCaches, hashed by path.\n   // Note on table size: We don't expect to have very many FileSystemCaches\n   // running in a single VM - table can be small.\n-  private static final Hashtable _sSharedCaches = new Hashtable(19);\n+  // -= Simon Lessard =-\n+  // FIXME: The code already take care of synchronization when needed it seems,\n+  //        using a HashMap should be more performant.\n+  private static final Hashtable<String, ImageProvider> _sSharedCaches = \n+    new Hashtable<String, ImageProvider>(19);\n \n   // Extension for IMX files\n   static final String __IMX_EXTENSION = \".imx\";\n@@ -1807,6 +1817,11 @@ public boolean accept(File dir, String name)\n   // Configuration property to test whether GIF support is enabled.\n   private static final String _GIF_ENABLED = \"gifEnabled\";\n \n-  private static final Hashtable _sCanonicalPaths = new Hashtable(19);\n+  // -= Simon Lessard =-\n+  // FIXME: Hashtable is synchronized and more than often inefficient\n+  //        use a HashMap instead\n+  private static final Hashtable<String, String> _sCanonicalPaths = \n+    new Hashtable<String, String>(19);\n+  \n   private static final TrinidadLogger _LOG = TrinidadLogger.createTrinidadLogger(FileSystemImageCache.class);\n }", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/FileSystemImageCache.java"}, {"additions": 5, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/FlippedIconKey.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/FlippedIconKey.java", "sha": "4aa890788762b75737c8835fbb30a89ce338a858", "changes": 8, "status": "modified", "deletions": 3, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/FlippedIconKey.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f", "patch": "@@ -40,7 +40,7 @@\n    * and properties.\n    */\n   public FlippedIconKey(\n-    Map properties\n+    Map<Object, Object> properties\n     )\n   {\n     String source = (String)properties.get(SOURCE_KEY);\n@@ -77,6 +77,7 @@ public String getLocalName()\n   /**\n    * Override of Object.equals().\n    */\n+  @Override\n   public boolean equals(Object o)\n   {\n     // This equals implementation assumes that the same source icon name\n@@ -92,6 +93,7 @@ public boolean equals(Object o)\n   /**\n    * Override of Object.hashCode().\n    */\n+  @Override\n   public int hashCode()\n   {\n     return (_source.hashCode() );\n@@ -100,9 +102,9 @@ public int hashCode()\n   /**\n    * Implementation of ImageProviderRequest.getRenderProperties().\n    */\n-  public Map getRenderProperties(ImageContext context)\n+  public Map<Object, Object> getRenderProperties(ImageContext context)\n   {\n-    ArrayMap properties = new ArrayMap(_MAP_SIZE);\n+    ArrayMap<Object, Object> properties = new ArrayMap<Object, Object>(_MAP_SIZE);\n     properties.put(ImageConstants.SOURCE_KEY, getSource());\n \n     return properties;", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/FlippedIconKey.java"}, {"additions": 3, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/FlippedIconKeyFactory.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/FlippedIconKeyFactory.java", "sha": "10b29c669bc83e25c98cd0f9841f5474031b1277", "changes": 4, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/FlippedIconKeyFactory.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f", "patch": "@@ -31,7 +31,9 @@\n   /**\n    * Implementation of CacheKeyFactory.getCacheKey().\n    */\n-  public Object getCacheKey(ImageContext context, Map properties)\n+  public Object getCacheKey(\n+      ImageContext context, \n+      Map<Object, Object> properties)\n   {\n     return new FlippedIconKey(properties);\n   }", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/FlippedIconKeyFactory.java"}, {"additions": 3, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/FlippedIconNameProvider.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/FlippedIconNameProvider.java", "sha": "786cd753a5a0b7323e0feca03af9f81b0e9ad937", "changes": 4, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/FlippedIconNameProvider.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f", "patch": "@@ -32,7 +32,9 @@\n  */\n public class FlippedIconNameProvider implements NameProvider\n {\n-  public String getName(ImageContext context, Map properties)\n+  public String getName(\n+      ImageContext context, \n+      Map<Object, Object> properties)\n   {\n     String name = (String)properties.get(ImageConstants.NAME_KEY);\n ", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/FlippedIconNameProvider.java"}, {"additions": 4, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/MapCacheEntry.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/MapCacheEntry.java", "sha": "d0337a108d9075df95ebb343856f5d44baa3246a", "changes": 6, "status": "modified", "deletions": 2, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/MapCacheEntry.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f", "patch": "@@ -30,6 +30,7 @@\n  */\n class MapCacheEntry extends CacheEntry\n {\n+  @SuppressWarnings(\"unchecked\")\n   public MapCacheEntry(\n     String uri,\n     int width,\n@@ -47,10 +48,11 @@ public MapCacheEntry(\n       _areas = Collections.unmodifiableList(Arrays.asList(areas));\n   }\n \n-  public Collection getMapAreas()\n+  @Override\n+  public Collection<MapArea> getMapAreas()\n   {\n     return _areas;\n   }\n \n-  private Collection _areas;\n+  private Collection<MapArea> _areas;\n }", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/MapCacheEntry.java"}, {"additions": 1, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/NameProvider.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/NameProvider.java", "sha": "076435579ca1b996e2db2d6b27b6838e4e3cbc39", "changes": 2, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/NameProvider.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f", "patch": "@@ -44,5 +44,5 @@\n    * @param requestedProperties The client-provided properties which\n    *   describe the requested image.\n    */\n-  public String getName(ImageContext context, Map requestedProperties);\n+  public String getName(ImageContext context, Map<Object, Object> requestedProperties);\n }", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/NameProvider.java"}, {"additions": 2, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/PropertiesFilter.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/PropertiesFilter.java", "sha": "546e9e14c6d119ed63591c1107239d8373513e0a", "changes": 4, "status": "modified", "deletions": 2, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/PropertiesFilter.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f", "patch": "@@ -49,8 +49,8 @@\n    * @param properties The dictionary of properties to filter\n    * @return The filtered dictionary of properties\n    */\n-  public Map filterProperties(\n+  public Map<Object, Object> filterProperties(\n     ImageContext context,\n-    Map properties\n+    Map<Object, Object> properties\n     );\n }", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/PropertiesFilter.java"}, {"additions": 2, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/SourceCheckingCacheEntry.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/SourceCheckingCacheEntry.java", "sha": "d719c6c757805b92b149f03c593df83466ab3529", "changes": 3, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/SourceCheckingCacheEntry.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f", "patch": "@@ -48,6 +48,7 @@ public SourceCheckingCacheEntry(\n     super(uri, width, height, encoding);\n   }\n \n+  @Override\n   public boolean isValid(\n     ImageContext context,\n     ImageProviderRequest request\n@@ -82,7 +83,7 @@ private static InputStreamProvider _getInputStreamProvider(\n     ImageProviderRequest request\n     )\n   {\n-    Map properties = request.getRenderProperties(context);\n+    Map<Object, Object> properties = request.getRenderProperties(context);\n     assert (properties != null);\n \n     InputStreamProvider provider = (InputStreamProvider)properties.get(", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/SourceCheckingCacheEntry.java"}, {"additions": 13, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/WrappingMap.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/WrappingMap.java", "sha": "688f0521ac93a639f55ce038f93ae595cd48b231", "changes": 26, "status": "modified", "deletions": 13, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/WrappingMap.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f", "patch": "@@ -26,9 +26,9 @@\n  * @version $Name:  $ ($Revision: adfrt/faces/adf-faces-impl/src/main/java/oracle/adfinternal/view/faces/image/cache/WrappingMap.java#0 $) $Date: 10-nov-2005.19:06:16 $\n  * @author The Oracle ADF Faces Team\n  */\n-class WrappingMap implements Map\n+class WrappingMap<K, V> implements Map<K, V>\n {\n-  public WrappingMap(Map map)\n+  public WrappingMap(Map<K, V> map)\n   {\n     _wrappedMap = map;\n   }\n@@ -43,27 +43,27 @@ public boolean isEmpty()\n     return _wrappedMap.isEmpty();\n   }\n \n-  public Iterator keys()\n+  public Iterator<K> keys()\n   {\n     return _wrappedMap.keySet().iterator();\n   }\n \n-  public Set entrySet()\n+  public Set<Map.Entry<K, V>> entrySet()\n   {\n     return _wrappedMap.entrySet();\n   }\n \n-  public Set keySet()\n+  public Set<K> keySet()\n   {\n     return _wrappedMap.keySet();\n   }\n \n-  public void putAll(Map map)\n+  public void putAll(Map<? extends K, ? extends V> map)\n   {\n     throw new UnsupportedOperationException(\"putAll operation not supported for WrappingMap\");\n   }\n \n-  public Collection values()\n+  public Collection<V> values()\n   {\n     return _wrappedMap.values();\n   }\n@@ -83,30 +83,30 @@ public void clear()\n     throw new UnsupportedOperationException(\"clear operation not supported for WrappingMap\");\n   }\n \n-  public Iterator elements()\n+  public Iterator<V> elements()\n   {\n     return _wrappedMap.values().iterator();\n   }\n \n-  public Object get(Object key)\n+  public V get(Object key)\n   {\n     return _wrappedMap.get(key);\n   }\n \n-  public Object put(Object key, Object value)\n+  public V put(K key, V value)\n   {\n     return _wrappedMap.put(key, value);\n   }\n \n-  public Object remove(Object key)\n+  public V remove(Object key)\n   {\n     return _wrappedMap.remove(key);\n   }\n \n-  protected Map getWrappedMap()\n+  protected Map<K, V> getWrappedMap()\n   {\n     return _wrappedMap;\n   }\n \n-  private Map _wrappedMap;\n+  private Map<K, V> _wrappedMap;\n }", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/WrappingMap.java"}, {"additions": 1, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/encode/AlphaMultiplyFilter.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/encode/AlphaMultiplyFilter.java", "sha": "60ef53bc6648d51f3dc8a824712b4877747a1810", "changes": 1, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/encode/AlphaMultiplyFilter.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f", "patch": "@@ -45,6 +45,7 @@ public AlphaMultiplyFilter(int rgb)\n   /**\n    * Implementation of abstract method from RGBImageFilter\n    */\n+  @Override\n   public int filterRGB(int x, int y, int rgb)\n   {\n ", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/encode/AlphaMultiplyFilter.java"}, {"additions": 11, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/encode/GifEncoder.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/encode/GifEncoder.java", "sha": "2737a58d149659b23b00e4f5e45990c9feeaa6df", "changes": 15, "status": "modified", "deletions": 4, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/encode/GifEncoder.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f", "patch": "@@ -84,7 +84,11 @@ public static void encode(Image image, OutputStream stream)\n \n     // A hashtable is used to keep track of colors already in the table\n     // max. one-color entries\n-    Hashtable hsh = new Hashtable(_MAXIMUM_COLOR_TABLE_SIZE);\n+    // -= Simon Lessard =-\n+    // FIXME: JDK 1.2 was truly evil... \n+    //        HashMap would be better\n+    Hashtable<Integer, Integer> hsh = \n+      new Hashtable<Integer, Integer>(_MAXIMUM_COLOR_TABLE_SIZE);\n \n     int colorIndex = 0;           // the code values of the colors\n     int background = 0;           // the code of the background color\n@@ -126,7 +130,7 @@ else if (_isTransparent(color))\n         // color has already been added to the color table.  We use an\n         // the Integer RGB value as our hash key\n         Integer colorKey = IntegerUtils.getInteger(color & 0x00ffffff);\n-        Integer colorIndexValue = (Integer) hsh.get(colorKey);\n+        Integer colorIndexValue = hsh.get(colorKey);\n \n         if (colorIndexValue != null)\n         {\n@@ -318,7 +322,10 @@ else if (_isTransparent(color))\n     // Float is in the form a.b where a = sqnc, and b = 1/(newcol+2).\n     // Now, we use a Integer where the top 16 bits store the sequence and\n     // the bottom 16 bits store the newcol.\n-    hsh = new Hashtable(_LARGEST_CODE); // max. compression entries\n+    // -= Simon Lessard =-\n+    // FIXME: Another line of code, another Hashtable,\n+    //        Yet again HashMap would be more efficient\n+    hsh = new Hashtable<Integer, Integer>(_LARGEST_CODE); // max. compression entries\n \n     int code = (1<< codeSize)+2; // where code values start\n     int clearCode = (code++)-2; // special codes\n@@ -361,7 +368,7 @@ else if (_isTransparent(color))\n       if (sqnc > 0)\n       {\n         fsqnc_newcol = IntegerUtils.getInteger(sqnc_newcol);\n-        Integer sqnc_newcol_code = (Integer) hsh.get(fsqnc_newcol);\n+        Integer sqnc_newcol_code = hsh.get(fsqnc_newcol);\n         if (sqnc_newcol_code == null)\n         {\n           // string not in table.", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/encode/GifEncoder.java"}, {"additions": 3, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/encode/ImageEncoderManager.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/encode/ImageEncoderManager.java", "sha": "3b62499e0252d9265010da226cae3d4625ba0f9e", "changes": 6, "status": "modified", "deletions": 3, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/encode/ImageEncoderManager.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f", "patch": "@@ -81,7 +81,7 @@ public ImageEncoder getImageEncoder(String type)\n    */\n   public String getImageExtension(String type)\n   {\n-    return (String)_extensions.get(type);\n+    return _extensions.get(type);\n   }\n \n   /**\n@@ -156,10 +156,10 @@ static private void _registerDefaultEncodings(ImageEncoderManager manager)\n   }\n \n   // Maps mime type to ImageEncoder objects\n-  private ArrayMap _encoders = new ArrayMap();\n+  private ArrayMap<String, Object> _encoders = new ArrayMap<String, Object>();\n \n   // Maps mime type to extension\n-  private ArrayMap _extensions = new ArrayMap();\n+  private ArrayMap<String, String> _extensions = new ArrayMap<String, String>();\n \n   static private ImageEncoderManager _sDefaultInstance = \n     new ImageEncoderManager();", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/encode/ImageEncoderManager.java"}, {"additions": 1, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/encode/OctreeFilter.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/encode/OctreeFilter.java", "sha": "1629c9e9d012d29ebb72f7f2501dfcc623514015", "changes": 1, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/encode/OctreeFilter.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f", "patch": "@@ -44,6 +44,7 @@ public OctreeFilter(Image im)\n   /**\n    * Implementation of abstract method from RGBImageFilter\n    */\n+  @Override\n   public int filterRGB(int x, int y, int rgb)\n   {\n     return _tree.mapColor(rgb);", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/encode/OctreeFilter.java"}, {"additions": 3, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/encode/OctreeNode.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/encode/OctreeNode.java", "sha": "a135711fb9a836be6e8ff47654803ffe4f2aa421", "changes": 3, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/encode/OctreeNode.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f", "patch": "@@ -212,6 +212,9 @@ private int _setColorVals(int rgb, boolean isNew)\n   private int _children;  // how many leaves are filled\n   private OctreeNode[] _leaf; // 8 children of node\n   private int _pixels; // how many pixels have passed through this node\n+  // -= Simon Lessard =-\n+  // FIXME: Never read locally\n+  @SuppressWarnings(\"unused\")\n   private OctreeNode _parent; // parent node in tree\n   private int _level; // where does this node lie in the tree?\n   private OctreeNode _next; // next node at this level", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/encode/OctreeNode.java"}, {"additions": 11, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/encode/PNGEncoder.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/encode/PNGEncoder.java", "sha": "62551e12fad0158b4d24d2d32a374f1d7b38f902", "changes": 20, "status": "modified", "deletions": 9, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/encode/PNGEncoder.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f", "patch": "@@ -86,7 +86,9 @@ public static void encode(Image image, OutputStream out)\n                                          \" x \"+height+\" image.\");\n     }\n \n-    Hashtable colors = new Hashtable();\n+    // -= Simon Lessard =-\n+    // FIXME: HashMap please if synchronization is not required...\n+    Hashtable<Color, Integer> colors = new Hashtable<Color, Integer>();\n     int   count = 0;\n     Color lastColor = null;\n     // Use -2 instead of -1 for last pixel because -1 is tranparent white\n@@ -154,7 +156,7 @@ private static void _writePaletteImage(\n     int          width,\n     int          height,\n     int[]        pixels,\n-    Map   colors,\n+    Map<Color, Integer> colors,\n     boolean      transparent,\n     OutputStream out\n     ) throws IOException\n@@ -276,20 +278,20 @@ private static void _writeHeader(\n \n   // Write out the PLTE chunk\n   private static void _writePalette(\n-    Map colors,\n+    Map<Color, Integer> colors,\n     OutputStream out\n     ) throws IOException\n   {\n     // Convert the colors Map into the palette data, sorted by index\n     int count = colors.size();\n     byte[] data = new byte[count * 3];\n \n-    Iterator e = colors.keySet().iterator();\n+    Iterator<Color> e = colors.keySet().iterator();\n \n     while (e.hasNext())\n     {\n-      Color color = (Color)e.next();\n-      int index = (((Integer)colors.get(color)).intValue() * 3);\n+      Color color = e.next();\n+      int index = colors.get(color).intValue() * 3;\n \n       int rgb = color.getRGB();\n       data[index]     = _getRed(rgb);\n@@ -388,7 +390,7 @@ private static long _getCRC(int type, byte[] data)\n     int        height,\n     int        depth,\n     int[]      pixels,\n-    Map colors\n+    Map<Color, Integer> colors\n     )\n   {\n // =-=ags At the moment we only support 8-bit pixel depths\n@@ -431,7 +433,7 @@ private static long _getCRC(int type, byte[] data)\n     int        width,\n     int        height,\n     int[]      pixels,\n-    Map colors\n+    Map<Color, Integer> colors\n     )\n   {\n     // Convert pixels to an array of palette indices.  Each scanline\n@@ -461,7 +463,7 @@ private static long _getCRC(int type, byte[] data)\n         else\n           color = _createColor(pixel);\n \n-        int index = ((Integer)colors.get(color)).intValue();\n+        int index = colors.get(color).intValue();\n \n         data[targetLine + j + 1] = (byte)index;\n ", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/encode/PNGEncoder.java"}, {"additions": 21, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/laf/browser/ButtonImageRenderer.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/laf/browser/ButtonImageRenderer.java", "sha": "dd7bd93f815249de9e5e758704ebe09d0592460b", "changes": 30, "status": "modified", "deletions": 9, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/laf/browser/ButtonImageRenderer.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f", "patch": "@@ -58,9 +58,10 @@ public ButtonImageRenderer()\n     super(new ButtonPainter());\n   }\n \n+  @Override\n   protected Painter getPainter(\n     ImageContext imageContext,\n-    Map requestedProperties\n+    Map<Object, Object> requestedProperties\n     )\n   {\n     // We use a special ButtonPainter for Dialog which dynamically\n@@ -87,9 +88,10 @@ protected Painter getPainter(\n     return super.getPainter(imageContext, requestedProperties);\n   }\n \n+  @Override\n   protected boolean isRenderable(\n       ImageContext imageContext,\n-      Map requestedProperties\n+      Map<Object, Object> requestedProperties\n       )\n   {\n     if (!super.isRenderable(imageContext, requestedProperties))\n@@ -98,11 +100,12 @@ protected boolean isRenderable(\n     return GraphicsUtils.isFontName(_getFontName(requestedProperties));\n   }\n \n+  @Override\n   protected PaintContext createPaintContext(\n     ImageContext imageContext,\n     BufferedImage image,\n-    Map requestedProperties,\n-    Map responseProperties\n+    Map<Object, Object> requestedProperties,\n+    Map<Object, Object> responseProperties\n     )\n   {\n     return new ProxyContext(super.createPaintContext(imageContext,\n@@ -115,7 +118,10 @@ protected PaintContext createPaintContext(\n    * Returns the foreground color to use when painting an image\n    * with the specified dictionary.\n    */\n-  protected Color getPaintForeground(ImageContext context, Map d)\n+  @Override\n+  protected Color getPaintForeground(\n+      ImageContext context, \n+      Map<Object, Object> d)\n   {\n     Color foreground = super.getPaintForeground(context, d);\n \n@@ -129,7 +135,10 @@ protected Color getPaintForeground(ImageContext context, Map d)\n    * Returns the background color to use when painting an image\n    * with the specified dictionary.\n    */\n-  protected Color getPaintBackground(ImageContext context, Map d)\n+  @Override\n+  protected Color getPaintBackground(\n+      ImageContext context, \n+      Map<Object, Object> d)\n   {\n     Color background = super.getPaintBackground(context, d);\n \n@@ -143,7 +152,8 @@ protected Color getPaintBackground(ImageContext context, Map d)\n    * Returns the font color to use when painting an image\n    * with the specified dictionary.\n    */\n-  protected Font getPaintFont(Map d)\n+  @Override\n+  protected Font getPaintFont(Map<Object, Object> d)\n   {\n     Font font = super.getPaintFont(d);\n \n@@ -153,7 +163,7 @@ protected Font getPaintFont(Map d)\n     return ButtonPainter.getDefaultFont().getFont();\n   }\n \n-  private String _getFontName(Map requestedProperties)\n+  private String _getFontName(Map<Object, Object> requestedProperties)\n   {\n     // Make sure we've got a valid font\n     Object o = requestedProperties.get(FONT_KEY);\n@@ -166,7 +176,7 @@ else if (o instanceof Font)\n     return name;\n   }\n \n-  private boolean _isDisabled(Map properties)\n+  private boolean _isDisabled(Map<Object, Object> properties)\n   {\n     Boolean disabled = (Boolean)properties.get(DISABLED_KEY);\n \n@@ -183,6 +193,7 @@ public ProxyContext(PaintContext context)\n       _context = context;\n     }\n \n+    @Override\n     public Object getPaintData(Object key)\n     {\n       Object o = super.getPaintData(key);\n@@ -204,6 +215,7 @@ public Object getPaintData(Object key)\n       return null;\n     }\n \n+    @Override\n     protected PaintContext getPaintContext()\n     {\n       return _context;", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/laf/browser/ButtonImageRenderer.java"}, {"additions": 4, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/laf/browser/ButtonPainter.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/laf/browser/ButtonPainter.java", "sha": "f713bd9d3f2f921c5f9ec8a83ca9df4ca1d8c7b9", "changes": 5, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/laf/browser/ButtonPainter.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f", "patch": "@@ -139,6 +139,7 @@ public static Color getDefaultBorderColor(\n   /**\n    * Returns the insets of just the ButtonPainter.\n    */\n+  @Override\n   protected ImmInsets getOwnInsets(PaintContext context)\n   {\n     int start  = _START;\n@@ -168,6 +169,7 @@ protected ImmInsets getOwnInsets(PaintContext context)\n   /**\n    * Paint just the border of the ButtonPainter.\n    */\n+  @Override\n   protected void paintBorder(\n     PaintContext context,\n     Graphics g,\n@@ -563,7 +565,7 @@ private int _getCurveWidth(int height)\n   {\n     // The curve width is about 3/4 of the height\n \n-    return (int)(((float)height) * 0.75);\n+    return (int)(height * 0.75);\n \n   }\n \n@@ -608,6 +610,7 @@ public DisabledColorChange(Painter wrappedPainter)\n       super(wrappedPainter);\n     }\n \n+    @Override\n     protected Color getColor(PaintContext context)\n     {\n       // If the foreground is explicitly set, just use it", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/laf/browser/ButtonPainter.java"}, {"additions": 4, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/laf/browser/ColorizedIconImageRenderer.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/laf/browser/ColorizedIconImageRenderer.java", "sha": "aa0e6867f5149d6eab3a62776cb12b8d4ef97ad7", "changes": 7, "status": "modified", "deletions": 3, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/laf/browser/ColorizedIconImageRenderer.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f", "patch": "@@ -51,8 +51,8 @@\n    */\n   public Image renderImage(\n     ImageContext context,\n-    Map requestedProperties,\n-    Map responseProperties\n+    Map<Object, Object> requestedProperties,\n+    Map<Object, Object> responseProperties\n     )\n   {\n     // Make sure we've got a graphical environment before we try rendering.\n@@ -152,7 +152,7 @@ private boolean _isRightToLeft(\n   // Returns the target colors for a colorization based on the\n   // specified context\n   private static int[] _getTargetColors(\n-    Map           properties\n+    Map<Object, Object> properties\n     )\n   {\n     // We derive the colors for the two color ramps based on the\n@@ -219,6 +219,7 @@ public ColorizingFilter(int[] sourceColors, int[] targetColors)\n       canFilterIndexColorModel = true;\n     }\n \n+    @Override\n     public int filterRGB(int x, int y, int rgb)\n     {\n       // First, see if we can short circuit", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/laf/browser/ColorizedIconImageRenderer.java"}, {"additions": 20, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/laf/browser/CompositeButtonImageRenderer.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/laf/browser/CompositeButtonImageRenderer.java", "sha": "a9e089c8b01a0666f7af52f84c46e5e9831fb77b", "changes": 28, "status": "modified", "deletions": 8, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/laf/browser/CompositeButtonImageRenderer.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f", "patch": "@@ -57,9 +57,10 @@ public CompositeButtonImageRenderer()\n     super(new CompositeButtonPainter());\n   }\n \n+  @Override\n   protected boolean isRenderable(\n       ImageContext imageContext,\n-      Map requestedProperties\n+      Map<Object, Object> requestedProperties\n       )\n   {\n     if (!super.isRenderable(imageContext, requestedProperties))\n@@ -68,11 +69,12 @@ protected boolean isRenderable(\n     return GraphicsUtils.isFontName(_getFontName(requestedProperties));\n   }\n \n+  @Override\n   protected PaintContext createPaintContext(\n     ImageContext imageContext,\n     BufferedImage image,\n-    Map requestedProperties,\n-    Map responseProperties\n+    Map<Object, Object> requestedProperties,\n+    Map<Object, Object> responseProperties\n     )\n   {\n     Image startImage = SourceUtils.getSourceIcon(imageContext,\n@@ -102,6 +104,7 @@ protected PaintContext createPaintContext(\n                             bottomBackgroundImage);\n   }\n \n+  @Override\n   protected void disposePaintContext(PaintContext context)\n   {\n     if (context instanceof ProxyContext)\n@@ -112,7 +115,10 @@ protected void disposePaintContext(PaintContext context)\n    * Returns the foreground color to use when painting an image\n    * with the specified dictionary.\n    */\n-  protected Color getPaintForeground(ImageContext context, Map d)\n+  @Override\n+  protected Color getPaintForeground(\n+      ImageContext context, \n+      Map<Object, Object> d)\n   {\n     Color foreground = super.getPaintForeground(context, d);\n \n@@ -126,7 +132,10 @@ protected Color getPaintForeground(ImageContext context, Map d)\n    * Returns the background color to use when painting an image\n    * with the specified dictionary.\n    */\n-  protected Color getPaintBackground(ImageContext context, Map d)\n+  @Override\n+  protected Color getPaintBackground(\n+      ImageContext context, \n+      Map<Object, Object> d)\n   {\n     Color background = super.getPaintBackground(context, d);\n \n@@ -140,7 +149,8 @@ protected Color getPaintBackground(ImageContext context, Map d)\n    * Returns the font color to use when painting an image\n    * with the specified dictionary.\n    */\n-  protected Font getPaintFont(Map d)\n+  @Override\n+  protected Font getPaintFont(Map<Object, Object> d)\n   {\n     Font font = super.getPaintFont(d);\n \n@@ -150,7 +160,7 @@ protected Font getPaintFont(Map d)\n     return ButtonPainter.getDefaultFont().getFont();\n   }\n \n-  private String _getFontName(Map requestedProperties)\n+  private String _getFontName(Map<Object, Object> requestedProperties)\n   {\n     // Make sure we've got a valid font\n     Object o = requestedProperties.get(FONT_KEY);\n@@ -163,7 +173,7 @@ else if (o instanceof Font)\n     return name;\n   }\n \n-  private boolean _isDisabled(Map properties)\n+  private boolean _isDisabled(Map<Object, Object> properties)\n   {\n     Boolean disabled = (Boolean)properties.get(DISABLED_KEY);\n \n@@ -190,6 +200,7 @@ public ProxyContext(\n       _bottomBackgroundImage = bottomBackgroundImage;\n     }\n \n+    @Override\n     public Object getPaintData(Object key)\n     {\n       Object o = super.getPaintData(key);\n@@ -238,6 +249,7 @@ public void flush()\n       }\n     }\n \n+    @Override\n     protected PaintContext getPaintContext()\n     {\n       return _context;", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/laf/browser/CompositeButtonImageRenderer.java"}, {"additions": 3, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/laf/browser/CompositeButtonPainter.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/laf/browser/CompositeButtonPainter.java", "sha": "59bb955e3f55c64ec2a2e0c5247857d9b1a9a8b5", "changes": 3, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/laf/browser/CompositeButtonPainter.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f", "patch": "@@ -78,6 +78,7 @@ public CompositeButtonPainter()\n         ));\n   }\n \n+  @Override\n   protected ImmInsets getOwnInsets(\n     PaintContext context\n     )\n@@ -130,6 +131,7 @@ protected ImmInsets getOwnInsets(\n                          rightSize.width);\n   }\n \n+  @Override\n   protected void paintBorder(\n     PaintContext context,\n     Graphics g,\n@@ -359,6 +361,7 @@ public DisabledColorChange(Painter wrappedPainter)\n       super(wrappedPainter);\n     }\n \n+    @Override\n     protected Color getColor(PaintContext context)\n     {\n       // If the foreground is explicitly set, just use it", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/laf/browser/CompositeButtonPainter.java"}, {"additions": 2, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/laf/browser/FlippedIconImageRenderer.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/laf/browser/FlippedIconImageRenderer.java", "sha": "25cb208bd4305aa671653529679790238007b40c", "changes": 4, "status": "modified", "deletions": 2, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/laf/browser/FlippedIconImageRenderer.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f", "patch": "@@ -51,8 +51,8 @@\n    */\n   public Image renderImage(\n     ImageContext context,\n-    Map requestedProperties,\n-    Map responseProperties\n+    Map<Object, Object> requestedProperties,\n+    Map<Object, Object> responseProperties\n     )\n   {\n     // Make sure we've got a graphical environment before we try rendering.", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/laf/browser/FlippedIconImageRenderer.java"}, {"additions": 4, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/laf/browser/MirrorImageFilter.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/laf/browser/MirrorImageFilter.java", "sha": "d4c8959d25cc85931a5e89833929cc63e9d54674", "changes": 4, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/laf/browser/MirrorImageFilter.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f", "patch": "@@ -27,6 +27,7 @@\n  */\n class MirrorImageFilter extends ImageFilter\n {\n+  @Override\n   public void setDimensions(int width, int height) \n   {\n     if (!_done)\n@@ -39,6 +40,7 @@ public void setDimensions(int width, int height)\n     super.setDimensions(width, height);\n   }\n \n+  @Override\n   public void setPixels(\n     int x, \n     int y, \n@@ -67,6 +69,7 @@ public void setPixels(\n     }\n   }\n \n+  @Override\n   public void setPixels(\n     int x, \n     int y, \n@@ -95,6 +98,7 @@ public void setPixels(\n     }\n   }\n \n+  @Override\n   public void imageComplete(int status) \n   {\n     int[] pixels = _pixels;", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/laf/browser/MirrorImageFilter.java"}, {"additions": 3, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/laf/browser/SourceUtils.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/laf/browser/SourceUtils.java", "sha": "fe1d219c1a46e9c512da9590f3691c901fc4c97f", "changes": 6, "status": "modified", "deletions": 3, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/laf/browser/SourceUtils.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f", "patch": "@@ -41,7 +41,7 @@\n {\n   public static Image getSourceIcon(\n     ImageContext context,\n-    Map properties\n+    Map<Object, Object> properties\n     )\n   {\n     return getSourceIcon(context,\n@@ -54,7 +54,7 @@ public static Image getSourceIcon(\n    */\n   public static Image getSourceIcon(\n     ImageContext context,\n-    Map properties,\n+    Map<Object, Object> properties,\n     Object     key\n     )\n   {\n@@ -104,7 +104,7 @@ public static Image getSourceIcon(\n \n   // Logs a warning\n   private static void _log(\n-    Map properties,\n+    Map<Object, Object> properties,\n     String message,\n     Throwable t\n     )", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/laf/browser/SourceUtils.java"}, {"additions": 2, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/laf/browser/UnsupportedImageRenderer.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/laf/browser/UnsupportedImageRenderer.java", "sha": "90252e359c150bc62687f9463885aa12bd2424cd", "changes": 4, "status": "modified", "deletions": 2, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/laf/browser/UnsupportedImageRenderer.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f", "patch": "@@ -63,8 +63,8 @@ static public ImageRenderer sharedInstance()\n    */\n   public Image renderImage(\n     ImageContext context,\n-    Map requestedProperties,\n-    Map responseProperties\n+    Map<Object, Object> requestedProperties,\n+    Map<Object, Object> responseProperties\n     )\n   {\n     if ((_LOG.isWarning()))", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/laf/browser/UnsupportedImageRenderer.java"}, {"additions": 3, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/painter/AbstractBorderPainter.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/painter/AbstractBorderPainter.java", "sha": "2bdec37f332b2b713dbed63fe5b25b9624bc3963", "changes": 3, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/painter/AbstractBorderPainter.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f", "patch": "@@ -86,6 +86,7 @@ public AbstractBorderPainter(\n    * <p>\n    * @return The preferred size of the Painter.\n    */\n+  @Override\n   public Dimension getPreferredSize(\n     PaintContext context\n     )\n@@ -104,6 +105,7 @@ public Dimension getPreferredSize(\n    * <p>\n    * @return The minimum size of the Painter.\n    */\n+  @Override\n   public Dimension getMinimumSize(\n     PaintContext context\n     )\n@@ -134,6 +136,7 @@ public Dimension getMinimumSize(\n    * <p>\n    * @see #paintBorder\n    */\n+  @Override\n   public final void paint(\n     PaintContext context,\n     Graphics     g,", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/painter/AbstractBorderPainter.java"}, {"additions": 1, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/painter/AbstractWrappingPainter.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/painter/AbstractWrappingPainter.java", "sha": "26fc5f20975ee76944130be05953dff58da0a0e4", "changes": 1, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/painter/AbstractWrappingPainter.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f", "patch": "@@ -69,6 +69,7 @@ public AbstractWrappingPainter(\n    * <p>\n    * @return The preferred size of the Painter.\n    */\n+  @Override\n   public Dimension getPreferredSize(\n     PaintContext context\n     )", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/painter/AbstractWrappingPainter.java"}, {"additions": 1, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/painter/AdjustableBorderPainter.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/painter/AdjustableBorderPainter.java", "sha": "35d5b48cfc993ddc990e67bd09f7f1e25eabcff3", "changes": 1, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/painter/AdjustableBorderPainter.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f", "patch": "@@ -85,6 +85,7 @@ public AdjustableBorderPainter(\n    * <p>\n    * @see org.apache.myfaces.trinidadinternal.image.painter.AbstractBorderPainter#getInsets\n    */\n+  @Override\n   protected ImmInsets getOwnInsets(\n     PaintContext context\n     )", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/painter/AdjustableBorderPainter.java"}, {"additions": 1, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/painter/ColorChange.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/painter/ColorChange.java", "sha": "c841bacb36ac52036a75781ee561bba97f708a3c", "changes": 1, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/painter/ColorChange.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f", "patch": "@@ -38,6 +38,7 @@ public ColorChange(\n   /**\n    * Paints the text at the specified coordinates.\n    */\n+  @Override\n   public void paint(\n     PaintContext context,\n     Graphics     g,", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/painter/ColorChange.java"}, {"additions": 2, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/painter/ImageUtils.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/painter/ImageUtils.java", "sha": "94e2cb8ac9e14b1f9b3face2df19f00c33a8e5f1", "changes": 4, "status": "modified", "deletions": 2, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/painter/ImageUtils.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f", "patch": "@@ -74,7 +74,7 @@ public static Image createFilteredImage(\n    * @param cl the class used to load the resource\n    * @param name the path to the resource, relative to the class\n    */\n-  static public Image getImageResource(Class cl, String name)\n+  static public Image getImageResource(Class<?> cl, String name)\n   {\n     Image image = _getImageResource(cl, name);\n     if (image == null)\n@@ -198,7 +198,7 @@ static public boolean loadImages(Image[] images)\n    * @param cl the class used to load the resource\n    * @param name the path to the resource, relative to the class\n    */\n-  static private Image _getImageResource(Class cl, String name)\n+  static private Image _getImageResource(Class<?> cl, String name)\n   {\n      //\n     // =-=  bts completely rewrite this method to use getResourceAsStream()", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/painter/ImageUtils.java"}, {"additions": 4, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/painter/ImmInsets.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/painter/ImmInsets.java", "sha": "0b4eafb5af7725d1b29709958e4cb8a4d8ea5881", "changes": 4, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/painter/ImmInsets.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f", "patch": "@@ -107,6 +107,7 @@ public Insets toInsets()\n   /**\n    * Checks whether two insets objects are equal.\n    */\n+  @Override\n   public boolean equals(Object obj)\n   {\n     if (obj instanceof ImmInsets)\n@@ -139,6 +140,7 @@ public boolean equals(Object obj)\n   /**\n    * Override of Object.hashCode()\n    */\n+  @Override\n   public int hashCode()\n   {\n     // We need to override hashCode since we override equals().\n@@ -154,6 +156,7 @@ public int hashCode()\n   /**\n    * Returns a String object representing this Inset's values.\n    */\n+  @Override\n   public String toString()\n   {\n     return getClass().getName() +\n@@ -164,6 +167,7 @@ public String toString()\n   }\n \n \n+  @Override\n   public Object clone()\n   {\n     try", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/painter/ImmInsets.java"}, {"additions": 7, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/painter/OffscreenWrappingPainter.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/painter/OffscreenWrappingPainter.java", "sha": "fa1a08034387ecca4ab3efad2bef6286a6c6e756", "changes": 7, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/painter/OffscreenWrappingPainter.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f", "patch": "@@ -57,6 +57,7 @@ public OffscreenWrappingPainter(Painter wrappedPainter)\n     super(wrappedPainter);\n   }\n \n+  @Override\n   public void paint(\n     PaintContext context,\n     Graphics     g,\n@@ -135,6 +136,7 @@ public void paint(\n     buffer.flush();\n   }\n \n+  @Override\n   public Dimension getPreferredSize(PaintContext context)\n   {\n     Dimension size = null;\n@@ -274,21 +276,25 @@ public ProxyContext(PaintContext wrappedContext, Graphics offscreenG)\n       _g = offscreenG;\n     }\n \n+    @Override\n     protected PaintContext getPaintContext()\n     {\n       return _context;\n     }\n \n+    @Override\n     public Graphics getPaintGraphics()\n     {\n       return _g;\n     }\n \n+    @Override\n     public Font getPaintFont()\n     {\n       return _g.getFont();\n     }\n \n+    @Override\n     public FontMetrics getFontMetrics(Font font)\n     {\n        return _g.getFontMetrics(font);\n@@ -321,6 +327,7 @@ public TransparencyFilter()\n       canFilterIndexColorModel = false;\n     }\n \n+    @Override\n     public int filterRGB(int x, int y, int rgb)\n     {\n       // Make sure we see pixels at y=0 before any other pixels.", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/painter/OffscreenWrappingPainter.java"}, {"additions": 3, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/painter/TextPainter.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/painter/TextPainter.java", "sha": "a9b5b149523e535e3985c8bb448d3b312cc8e449", "changes": 3, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/painter/TextPainter.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f", "patch": "@@ -98,6 +98,7 @@ public TextPainter(\n    * @param context Context for determining the preferred size.\n    * @return The preferred size of the Painter.\n    */\n+  @Override\n   public Dimension getPreferredSize(\n     PaintContext context\n     )\n@@ -331,6 +332,7 @@ protected String getMinimumStringData(\n   }\n \n \n+  @Override\n   protected Object getData(\n     PaintContext context\n     )\n@@ -348,6 +350,7 @@ protected Object getData(\n   }\n \n \n+  @Override\n   protected Object getDataKey()\n   {\n     return _dataKey;", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/painter/TextPainter.java"}, {"additions": 6, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/xml/ImageProviderRequestUtils.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/xml/ImageProviderRequestUtils.java", "sha": "ad29262a9ab43d9625b509d58e63978fce82096a", "changes": 12, "status": "modified", "deletions": 6, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/xml/ImageProviderRequestUtils.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f", "patch": "@@ -105,8 +105,8 @@ public static void encodeImageProviderRequest(\n     String       namespaceURI,\n     String       localName,\n     ImageType    type,\n-    Map   properties,\n-    Map   responseProperties,\n+    Map<Object, Object> properties,\n+    Map<Object, Object> responseProperties,\n     PrintWriter  writer\n     ) throws IllegalArgumentException\n   {\n@@ -236,7 +236,7 @@ public static ParserManager createDefaultManager()\n    * objects for elements in the specified namespace.\n    */\n   public static void registerParserFactory(\n-    Class expectedType,\n+    Class<?> expectedType,\n     String namespace,\n     ParserFactory factory\n     )\n@@ -248,7 +248,7 @@ public static void registerParserFactory(\n    * Unregisters the ParserFactory for the specified namespace.\n    */\n   public static void unregisterParserFactory(\n-    Class expectedType,\n+    Class<?> expectedType,\n     String namespace\n     )\n   {\n@@ -282,7 +282,7 @@ private static Object _parse(\n     ImageContext context,\n     XMLProvider  provider,\n     InputSource  source,\n-    Class        expectedClass\n+    Class<?>     expectedClass\n     ) throws IOException, SAXException\n   {\n     // Get the ParserManager\n@@ -323,5 +323,5 @@ private ImageProviderRequestUtils() {}\n \n   // We use this empty dictionary as a stub for the response properties\n   // dictionary when we encode the image properties with the XMLEncoder\n-  private static final Map _EMPTY_MAP = new ArrayMap(0);\n+  private static final Map<Object, Object> _EMPTY_MAP = new ArrayMap<Object, Object>(0);\n }", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/xml/ImageProviderRequestUtils.java"}, {"additions": 7, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/xml/encode/AbstractXMLEncoder.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/xml/encode/AbstractXMLEncoder.java", "sha": "ff9ac2373a227f4fb28b933351086f9bf9fd191b", "changes": 14, "status": "modified", "deletions": 7, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/xml/encode/AbstractXMLEncoder.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f", "patch": "@@ -50,8 +50,8 @@ public void encodeXML(\n     ImageContext context,\n     String       namespaceURI,\n     String       localName,\n-    Map properties,\n-    Map responseProperties,\n+    Map<Object, Object> properties,\n+    Map<Object, Object> responseProperties,\n     PrintWriter out\n     )\n   {\n@@ -69,8 +69,8 @@ public void encodeXML(\n \n   protected void encodeAttributes(\n     ImageContext context,\n-    Map properties,\n-    Map responseProperties,\n+    Map<Object, Object> properties,\n+    Map<Object, Object> responseProperties,\n     PrintWriter out\n     )\n   {\n@@ -100,8 +100,8 @@ protected void encodeAttributes(\n    */\n   protected void encodeBody(\n     ImageContext context,\n-    Map properties,\n-    Map responseProperties,\n+    Map<Object, Object> properties,\n+    Map<Object, Object> responseProperties,\n     PrintWriter out\n     )\n   {\n@@ -340,7 +340,7 @@ else if (ch == '\"')\n \n   private final void _encodeDirectionAttribute(\n     ImageContext context,\n-    Map properties,\n+    Map<Object, Object> properties,\n     PrintWriter out\n     )\n   {", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/xml/encode/AbstractXMLEncoder.java"}, {"additions": 7, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/xml/encode/ColorizedIconEncoder.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/xml/encode/ColorizedIconEncoder.java", "sha": "184c59703e36307eeccea3c0dea58ea53844432b", "changes": 12, "status": "modified", "deletions": 5, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/xml/encode/ColorizedIconEncoder.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f", "patch": "@@ -37,10 +37,11 @@ public ColorizedIconEncoder()\n   {\n   }\n \n+  @Override\n   protected void encodeAttributes(\n     ImageContext context,\n-    Map properties, \n-    Map responseProperties,\n+    Map<Object, Object> properties, \n+    Map<Object, Object> responseProperties,\n     PrintWriter out\n     )\n   {\n@@ -49,7 +50,7 @@ protected void encodeAttributes(\n     String source = (String)properties.get(SOURCE_KEY);\n     encodeAttribute(SOURCE_ATTR, source, out);\n \n-    Class laf = (Class)properties.get(LAF_KEY);\n+    Class<?> laf = (Class<?>)properties.get(LAF_KEY);\n     \n     if ( laf != null )\n     {\n@@ -61,10 +62,11 @@ protected void encodeAttributes(\n   /**\n    * Override of AbstractXMLEncoder.encodeBody.\n    */\n+  @Override\n   protected void encodeBody(\n     ImageContext context,\n-    Map properties, \n-    Map responseProperties,\n+    Map<Object, Object> properties, \n+    Map<Object, Object> responseProperties,\n     PrintWriter out\n     )\n   {", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/xml/encode/ColorizedIconEncoder.java"}, {"additions": 6, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/xml/encode/CompositeButtonEncoder.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/xml/encode/CompositeButtonEncoder.java", "sha": "b6b0eff440ddbe6c0ba478480c7cbe043631bd0f", "changes": 10, "status": "modified", "deletions": 4, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/xml/encode/CompositeButtonEncoder.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f", "patch": "@@ -36,10 +36,11 @@ public CompositeButtonEncoder()\n   {\n   }\n \n+  @Override\n   protected void encodeAttributes(\n     ImageContext context,\n-    Map properties, \n-    Map responseProperties,\n+    Map<Object, Object> properties, \n+    Map<Object, Object> responseProperties,\n     PrintWriter out\n     )\n   {\n@@ -56,10 +57,11 @@ protected void encodeAttributes(\n   /**\n    * Override of AbstractXMLEncoder.encodeBody.\n    */\n+  @Override\n   protected void encodeBody(\n     ImageContext context,\n-    Map properties, \n-    Map responseProperties,\n+    Map<Object, Object> properties, \n+    Map<Object, Object> responseProperties,\n     PrintWriter out\n     )\n   {", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/xml/encode/CompositeButtonEncoder.java"}, {"additions": 3, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/xml/encode/FlippedIconEncoder.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/xml/encode/FlippedIconEncoder.java", "sha": "decc5e3b557da0e27f3cf2c417f33db143c03b92", "changes": 5, "status": "modified", "deletions": 2, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/xml/encode/FlippedIconEncoder.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f", "patch": "@@ -35,10 +35,11 @@ public FlippedIconEncoder()\n   {\n   }\n \n+  @Override\n   protected void encodeAttributes(\n     ImageContext context,\n-    Map properties, \n-    Map responseProperties,\n+    Map<Object, Object> properties, \n+    Map<Object, Object> responseProperties,\n     PrintWriter out\n     )\n   {", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/xml/encode/FlippedIconEncoder.java"}, {"additions": 2, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/xml/encode/XMLEncoder.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/xml/encode/XMLEncoder.java", "sha": "2049b552bb28b650bbaed1771d7db212eb781a1f", "changes": 4, "status": "modified", "deletions": 2, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/xml/encode/XMLEncoder.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f", "patch": "@@ -37,8 +37,8 @@ public void encodeXML(\n     ImageContext context,\n     String     namespaceURI,\n     String     localName,\n-    Map properties,\n-    Map responseProperties,\n+    Map<Object, Object> properties,\n+    Map<Object, Object> responseProperties,\n     PrintWriter out\n     );\n }", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/xml/encode/XMLEncoder.java"}, {"additions": 8, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/xml/parse/BaseImageProviderRequestParser.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/xml/parse/BaseImageProviderRequestParser.java", "sha": "e57005b1c4e5e059fd4ce380e950c7519f461da5", "changes": 12, "status": "modified", "deletions": 4, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/xml/parse/BaseImageProviderRequestParser.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f", "patch": "@@ -72,12 +72,13 @@\n   protected BaseImageProviderRequestParser(int capacity)\n   {\n     // Tack on an extra bucket for the encoding\n-    _properties = new ArrayMap(capacity + 1);\n+    _properties = new ArrayMap<Object, Object>(capacity + 1);\n   }\n \n   /**\n    * Implementation of NodeParser.startElement\n    */\n+  @Override\n   public void startElement(\n     ParseContext context,\n     String       namespaceURI,\n@@ -135,6 +136,7 @@ public void startElement(\n   /**\n    * Implementation of NodeParser.endElement()\n    */\n+  @Override\n   public Object endElement(\n     ParseContext context,\n     String       namespaceURI,\n@@ -152,6 +154,7 @@ public Object endElement(\n   /**\n    * Implementation of NodeParser.startChildElement()\n    */\n+  @Override\n   public NodeParser startChildElement(\n     ParseContext context,\n     String       namespaceURI,\n@@ -177,6 +180,7 @@ else if (\"colorScheme\".equals(localName))\n   /**\n    * Implementation of NodeParser.addCompletedChild().\n    */\n+  @Override\n   public void addCompletedChild(\n     ParseContext context,\n     String       namespaceURI,\n@@ -185,9 +189,9 @@ public void addCompletedChild(\n     )\n   {\n     if (isColorElement(namespaceURI, localName))\n-      setProperty(getColorKey(namespaceURI, localName), (Color)child);\n+      setProperty(getColorKey(namespaceURI, localName), child);\n     else if (isFontElement(namespaceURI, localName))\n-      setProperty(getFontKey(namespaceURI, localName), (FontProxy)child);\n+      setProperty(getFontKey(namespaceURI, localName), child);\n   }\n \n   /**\n@@ -482,7 +486,7 @@ private BaseImageProviderRequestParser() {}\n \n   private String     _namespaceURI;\n   private String     _localName;\n-  private Map _properties;\n+  private Map<Object, Object> _properties;\n \n   private boolean   _error;\n ", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/xml/parse/BaseImageProviderRequestParser.java"}, {"additions": 1, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/xml/parse/ColorParser.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/xml/parse/ColorParser.java", "sha": "1b8ed7585215691489b689edc57cf065d9970101", "changes": 1, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/xml/parse/ColorParser.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f", "patch": "@@ -41,6 +41,7 @@\n   /**\n    * Implementation of NodeParser.startElement()\n    */\n+  @Override\n   public Object getNodeValue(\n     ParseContext context,\n     String       namespaceURI,", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/xml/parse/ColorParser.java"}, {"additions": 5, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/xml/parse/ColorizedIconParser.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/xml/parse/ColorizedIconParser.java", "sha": "9d6616ee1770f72341d2397ecfdacc096ac994fb", "changes": 6, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/xml/parse/ColorizedIconParser.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f", "patch": "@@ -38,6 +38,7 @@ public ColorizedIconParser()\n     super(_PROPERTY_COUNT);\n   }\n \n+  @Override\n   public void startElement(\n     ParseContext context,\n     String       namespaceURI,\n@@ -67,7 +68,7 @@ public void startElement(\n     if (newLafString != null)\n       lafString = newLafString;\n \n-    Class laf = null;\n+    Class<?> laf = null;\n     try\n     {\n       laf = Class.forName(lafString);\n@@ -89,6 +90,8 @@ static private String _mapOldLaf(String lafString)\n       return \"org.apache.myfaces.trinidadinternal.ui.laf.oracle.desktop.BrowserLookAndFeel\";\n     return null;\n   }\n+  \n+  @Override\n   protected boolean isColorElement(String namespaceURI, String localName)\n   {\n     if ((XMLConstants.DARK_COLOR_NAME.equals(localName)) ||\n@@ -102,6 +105,7 @@ protected boolean isColorElement(String namespaceURI, String localName)\n    * Override of BaseImageProviderRequestParser.getColorKey() for\n    * borderColor.\n    */\n+  @Override\n   protected Object getColorKey(String namespaceURI, String localName)\n   {\n     if (XMLConstants.DARK_COLOR_NAME.equals(localName))", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/xml/parse/ColorizedIconParser.java"}, {"additions": 3, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/xml/parse/CompositeButtonParser.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/xml/parse/CompositeButtonParser.java", "sha": "6cf6efe630c4362b9bed05a8f0aff23cf337ae31", "changes": 3, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/xml/parse/CompositeButtonParser.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f", "patch": "@@ -37,6 +37,7 @@ public CompositeButtonParser()\n     super(_PROPERTY_COUNT);\n   }\n \n+  @Override\n   public void startElement(\n     ParseContext context,\n     String       namespaceURI,\n@@ -87,6 +88,7 @@ public void startElement(\n   /**\n    * Implementation of NodeParser.startChildElement()\n    */\n+  @Override\n   public NodeParser startChildElement(\n     ParseContext context,\n     String       namespaceURI,\n@@ -106,6 +108,7 @@ public NodeParser startChildElement(\n   /**\n    * Implementation of NodeParser.addCompletedChild().\n    */\n+  @Override\n   public void addCompletedChild(\n     ParseContext context,\n     String       namespaceURI,", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/xml/parse/CompositeButtonParser.java"}, {"additions": 4, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/xml/parse/DefaultsParser.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/xml/parse/DefaultsParser.java", "sha": "1cd99a457ae9f3eccf8e4e95e264b860d4c61bb7", "changes": 4, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/xml/parse/DefaultsParser.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f", "patch": "@@ -35,6 +35,7 @@ public DefaultsParser()\n    * Override of BaseImageProviderRequestParser.isColorElement()\n    * which adds in the borderColor element.\n    */\n+  @Override\n   protected boolean isColorElement(String namespaceURI, String localName)\n   {\n     if (localName.equals(XMLConstants.BORDER_COLOR_NAME)        ||\n@@ -53,6 +54,7 @@ protected boolean isColorElement(String namespaceURI, String localName)\n    * Override of BaseImageProviderRequestParser.isFontElement()\n    * which adds in the selected/disabled font elements.\n    */\n+  @Override\n   protected boolean isFontElement(String namespaceURI, String localName)\n   {\n     if (localName.equals(XMLConstants.SELECTED_FONT_NAME)  ||\n@@ -68,6 +70,7 @@ protected boolean isFontElement(String namespaceURI, String localName)\n    * Override of BaseImageProviderRequestParser.getColorKey() for\n    * borderColor.\n    */\n+  @Override\n   protected Object getColorKey(String namespaceURI, String localName)\n   {\n     if (localName.equals(XMLConstants.BORDER_COLOR_NAME))\n@@ -88,6 +91,7 @@ protected Object getColorKey(String namespaceURI, String localName)\n    * Override of BaseImageProviderRequestParser.getFontKey() for\n    * selected/disabled fonts.\n    */\n+  @Override\n   protected Object getFontKey(String namespaceURI, String localName)\n   {\n     if (localName.equals(XMLConstants.SELECTED_FONT_NAME))", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/xml/parse/DefaultsParser.java"}, {"additions": 1, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/xml/parse/FlippedIconParser.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/xml/parse/FlippedIconParser.java", "sha": "92cbde96d8abbdca74627348577306dda28b4b45", "changes": 1, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/xml/parse/FlippedIconParser.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f", "patch": "@@ -35,6 +35,7 @@ public FlippedIconParser()\n     super(_PROPERTY_COUNT);\n   }\n \n+  @Override\n   public void startElement(\n     ParseContext context,\n     String       namespaceURI,", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/xml/parse/FlippedIconParser.java"}, {"additions": 4, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/xml/parse/FontParser.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/xml/parse/FontParser.java", "sha": "61da06a50fbbcc1363e031b774cccd6becbbf433", "changes": 4, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/xml/parse/FontParser.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f", "patch": "@@ -41,6 +41,7 @@\n   /**\n    * Implementation of NodeParser.startElement()\n    */\n+  @Override\n   public void startElement(\n     ParseContext context,\n     String       namespaceURI,\n@@ -67,6 +68,7 @@ public void startElement(\n   /**\n    * Implementation of NodeParser.endElement()\n    */\n+  @Override\n   public Object endElement(\n     ParseContext context,\n     String       namespaceURI,\n@@ -83,6 +85,7 @@ public Object endElement(\n   /**\n    * Implementation of NodeParser.startChildElement()\n    */\n+  @Override\n   public NodeParser startChildElement(\n     ParseContext context,\n     String       namespaceURI,\n@@ -103,6 +106,7 @@ public NodeParser startChildElement(\n   /**\n    * Implementation of NodeParser.addCompletedChild().\n    */\n+  @Override\n   public void addCompletedChild(\n     ParseContext context,\n     String       namespaceURI,", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/xml/parse/FontParser.java"}, {"additions": 8, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/xml/parse/ImageGeneratorParser.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/xml/parse/ImageGeneratorParser.java", "sha": "26e324099acbd2b58401969db497e789d5a3ed4f", "changes": 9, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/xml/parse/ImageGeneratorParser.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f", "patch": "@@ -39,6 +39,7 @@\n   /**\n    * Implementations of NodeParser.startElement();\n    */\n+  @Override\n   public void startElement(\n     ParseContext context,\n     String       namespaceURI,\n@@ -55,6 +56,7 @@ public void startElement(\n   /**\n    * Implementation of NodeParser.endElement()\n    */\n+  @Override\n   public Object endElement(\n     ParseContext context,\n     String       namespaceURI,\n@@ -76,6 +78,7 @@ public Object endElement(\n   /**\n    * Implementation of NodeParser.startChildElement()\n    */\n+  @Override\n   public NodeParser startChildElement(\n     ParseContext context,\n     String       namespaceURI,\n@@ -91,6 +94,7 @@ public NodeParser startChildElement(\n   /**\n    * Implementation of NodeParser.addCompletedChild().\n    */\n+  @Override\n   public void addCompletedChild(\n     ParseContext context,\n     String       namespaceURI,\n@@ -101,6 +105,9 @@ public void addCompletedChild(\n     _requests.addElement((ImageProviderRequest)child);\n   }\n \n-  private Vector _requests = new Vector();\n+  // -= Simon Lessard =-\n+  // FIXME: Wow! A Vector... Change that to ArrayList\n+  //        or Collections.synchronizedList(ArrayList)\n+  private Vector<ImageProviderRequest> _requests = new Vector<ImageProviderRequest>();\n }\n ", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/xml/parse/ImageGeneratorParser.java"}, {"additions": 6, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/xml/parse/ImageMapParser.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/xml/parse/ImageMapParser.java", "sha": "2d3720790cf9f32937ff49a6c3f0b3588e92dce7", "changes": 7, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/xml/parse/ImageMapParser.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f", "patch": "@@ -37,6 +37,7 @@\n   /**\n    * Implementation of NodeParser.endElement()\n    */\n+  @Override\n   public Object endElement(\n     ParseContext context,\n     String       namespaceURI,\n@@ -51,6 +52,7 @@ public Object endElement(\n   /**\n    * Implementation of NodeParser.startChildElement()\n    */\n+  @Override\n   public NodeParser startChildElement(\n     ParseContext context,\n     String       namespaceURI,\n@@ -78,5 +80,8 @@ public NodeParser startChildElement(\n     }\n   }\n \n-  private Vector _areas = new Vector();\n+  // -= Simon Lessard =-\n+  // FIXME: Wow! Another Vector... Change that to ArrayList\n+  //        or Collections.synchronizedList(ArrayList)\n+  private Vector<MapArea> _areas = new Vector<MapArea>();\n }", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/xml/parse/ImageMapParser.java"}, {"additions": 4, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/xml/parse/ImageMetadataParser.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/xml/parse/ImageMetadataParser.java", "sha": "9c73581b90454af9cb484fcfdb99cbba6c934df7", "changes": 4, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/xml/parse/ImageMetadataParser.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f", "patch": "@@ -39,6 +39,7 @@\n   /**\n    * Implementation of NodeParser.startElement\n    */\n+  @Override\n   public void startElement(\n     ParseContext context,\n     String       namespaceURI,\n@@ -60,6 +61,7 @@ public void startElement(\n   /**\n    * Implementation of NodeParser.endElement()\n    */\n+  @Override\n   public Object endElement(\n     ParseContext context,\n     String       namespaceURI,\n@@ -72,6 +74,7 @@ public Object endElement(\n   /**\n    * Implementation of NodeParser.startChildElement()\n    */\n+  @Override\n   public NodeParser startChildElement(\n     ParseContext context,\n     String       namespaceURI,\n@@ -87,6 +90,7 @@ public NodeParser startChildElement(\n   /**\n    * Implementation of NodeParser.addCompletedChild().\n    */\n+  @Override\n   public void addCompletedChild(\n     ParseContext context,\n     String       namespaceURI,", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/xml/parse/ImageMetadataParser.java"}, {"additions": 9, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/xml/parse/TextParser.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/xml/parse/TextParser.java", "sha": "d7f32ca2b8fda78174938eddddf7c40a62f89419", "changes": 9, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/xml/parse/TextParser.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f", "patch": "@@ -42,6 +42,7 @@\n   /**\n    * Implementation of NodeParser.startElement()\n    */\n+  @Override\n   public void startElement(\n     ParseContext context,\n     String       namespaceURI,\n@@ -56,6 +57,7 @@ public void startElement(\n   /**\n    * Implementation of NodeParser.endElement()\n    */\n+  @Override\n   public Object endElement(\n     ParseContext context,\n     String       namespaceURI,\n@@ -98,6 +100,7 @@ public Object endElement(\n   /**\n    * Implementation of NodeParser.startChildElement()\n    */\n+  @Override\n   public NodeParser startChildElement(\n     ParseContext context,\n     String       namespaceURI,\n@@ -111,6 +114,7 @@ public NodeParser startChildElement(\n   /**\n    * Implementation of NodeParser.addText().\n    */\n+  @Override\n   public void addText(\n     ParseContext context,\n     char[]       text,\n@@ -128,6 +132,7 @@ public void addText(\n   /**\n    * Implemenation of NodeParser.addWhitespace().\n    */\n+  @Override\n   public void addWhitespace(\n     ParseContext context,\n     char[]       text,\n@@ -143,6 +148,10 @@ public void addWhitespace(\n \n   private String _bundleName;\n   private String _key;\n+  // -= Simon Lessard =-\n+  // FIXME: Using a StringBuilder could be MUCH more efficient\n+  //        Currently String concatenation within a loop process\n+  //        which is bad.\n   private String _text;\n \n   // Error messages", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/xml/parse/TextParser.java"}, {"additions": 34, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/io/DebugHtmlResponseWriter.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/io/DebugHtmlResponseWriter.java", "sha": "6a99c0a45f074792aa89c1ea25b4c30e85890812", "changes": 61, "status": "modified", "deletions": 27, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/io/DebugHtmlResponseWriter.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f", "patch": "@@ -17,10 +17,11 @@\n \n import java.io.IOException;\n import java.io.Writer;\n-\n import java.util.Arrays;\n import java.util.Collection;\n import java.util.HashMap;\n+import java.util.List;\n+import java.util.Map;\n import java.util.Stack;\n \n import javax.faces.component.UIComponent;\n@@ -45,13 +46,14 @@\n   public DebugHtmlResponseWriter(ResponseWriter decorated)\n   {\n     super(decorated);\n-    _elementStack = new Stack();\n+    _elementStack = new Stack<String>();\n   }\n \n   /**\n    * Creates a new instance of this DebugHtmlResponseWriter, using a different\n    * Writer.\n    */\n+  @Override\n   public ResponseWriter cloneWithWriter(Writer writer)\n   {\n     DebugHtmlResponseWriter cloned =\n@@ -62,6 +64,7 @@ public ResponseWriter cloneWithWriter(Writer writer)\n \n \n \n+  @Override\n   public void startElement(String name, UIComponent component) throws IOException\n   {\n     String lowerName = name.toLowerCase();\n@@ -79,9 +82,9 @@ public void startElement(String name, UIComponent component) throws IOException\n     // Check for elements that are not allowed inside each other\n     if (!_elementStack.empty())\n     {\n-      String parent = (String) _elementStack.peek();\n-      Collection allowedParents = (Collection) _sAllowedParents.get(lowerName);\n-      Collection allowedChildren = (Collection) _sAllowedChildren.get(parent);\n+      String parent = _elementStack.peek();\n+      Collection<String> allowedParents = _sAllowedParents.get(lowerName);\n+      Collection<String> allowedChildren = _sAllowedChildren.get(parent);\n       if (((allowedParents != null)  &&\n            !allowedParents.contains(parent)) ||\n           ((allowedChildren != null)  &&\n@@ -100,6 +103,7 @@ public void startElement(String name, UIComponent component) throws IOException\n   }\n \n \n+  @Override\n   public void endElement(String name) throws IOException\n   {\n     if (!_elementStack.empty())\n@@ -108,6 +112,7 @@ public void endElement(String name) throws IOException\n     super.endElement(name);\n   }\n \n+  @Override\n   public void writeAttribute(String name,\n                              Object value,\n                              String componentPropertyName)\n@@ -165,10 +170,12 @@ private void _errorWithComment(String text) throws IOException\n \n   // Yes, Stack is slow and lame.  This code is used for debugging\n   // only, so that is of little concern.\n-  private Stack        _elementStack;\n+  private Stack<String> _elementStack;\n \n-  static private final HashMap _sAllowedParents = new HashMap(13);\n-  static private final HashMap _sAllowedChildren  = new HashMap(13);\n+  static private final Map<String, List<String>> _sAllowedParents = \n+    new HashMap<String, List<String>>(13);\n+  static private final Map<String, List<String>> _sAllowedChildren  = \n+    new HashMap<String, List<String>>(13);\n \n   static\n   {\n@@ -178,70 +185,70 @@ private void _errorWithComment(String text) throws IOException\n     // but we hardcode that rule.\n     _sAllowedChildren.put(\"table\",\n        Arrays.asList(\n-          new Object[]{\"tr\", \"caption\",\n+          new String[]{\"tr\", \"caption\",\n                        \"thead\", \"tfoot\", \"tbody\", \"col\", \"colgroup\"}));\n \n     _sAllowedChildren.put(\"tr\",\n        Arrays.asList(\n-          new Object[]{\"th\", \"td\"}));\n+          new String[]{\"th\", \"td\"}));\n \n     _sAllowedChildren.put(\"select\",\n        Arrays.asList(\n-          new Object[]{\"option\", \"optgroup\"}));\n+          new String[]{\"option\", \"optgroup\"}));\n \n     _sAllowedChildren.put(\"ol\",\n        Arrays.asList(\n-          new Object[]{\"li\"}));\n+          new String[]{\"li\"}));\n \n     _sAllowedChildren.put(\"ul\",\n        Arrays.asList(\n-          new Object[]{\"li\"}));\n+          new String[]{\"li\"}));\n \n     _sAllowedChildren.put(\"input\",\n-       Arrays.asList(new Object[0]));\n+       Arrays.asList(new String[0]));\n \n     _sAllowedChildren.put(\"hr\",\n-       Arrays.asList(new Object[0]));\n+       Arrays.asList(new String[0]));\n \n     _sAllowedChildren.put(\"br\",\n-       Arrays.asList(new Object[0]));\n+       Arrays.asList(new String[0]));\n \n     _sAllowedChildren.put(\"area\",\n-       Arrays.asList(new Object[0]));\n+       Arrays.asList(new String[0]));\n \n     _sAllowedChildren.put(\"link\",\n-       Arrays.asList(new Object[0]));\n+       Arrays.asList(new String[0]));\n \n     _sAllowedChildren.put(\"img\",\n-       Arrays.asList(new Object[0]));\n+       Arrays.asList(new String[0]));\n \n     _sAllowedChildren.put(\"col\",\n-       Arrays.asList(new Object[0]));\n+       Arrays.asList(new String[0]));\n \n     _sAllowedChildren.put(\"frame\",\n-       Arrays.asList(new Object[0]));\n+       Arrays.asList(new String[0]));\n \n     _sAllowedChildren.put(\"base\",\n-       Arrays.asList(new Object[0]));\n+       Arrays.asList(new String[0]));\n \n     _sAllowedChildren.put(\"meta\",\n-       Arrays.asList(new Object[0]));\n+       Arrays.asList(new String[0]));\n \n     _sAllowedParents.put(\"tr\",\n        Arrays.asList(\n-          new Object[]{\"table\", \"thead\", \"tfoot\", \"tbody\"}));\n+          new String[]{\"table\", \"thead\", \"tfoot\", \"tbody\"}));\n \n     _sAllowedParents.put(\"td\",\n        Arrays.asList(\n-          new Object[]{\"tr\"}));\n+          new String[]{\"tr\"}));\n \n     _sAllowedParents.put(\"th\",\n        Arrays.asList(\n-          new Object[]{\"tr\"}));\n+          new String[]{\"tr\"}));\n \n     _sAllowedParents.put(\"option\",\n        Arrays.asList(\n-          new Object[]{\"select\", \"optgroup\"}));\n+          new String[]{\"select\", \"optgroup\"}));\n   }\n \n   static private final TrinidadLogger _LOG = TrinidadLogger.createTrinidadLogger(DebugHtmlResponseWriter.class);", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/io/DebugHtmlResponseWriter.java"}, {"additions": 31, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/io/DebugResponseWriter.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/io/DebugResponseWriter.java", "sha": "5902ec7ebf41b329f8792be7106fa52e20e78523", "changes": 50, "status": "modified", "deletions": 19, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/io/DebugResponseWriter.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f", "patch": "@@ -45,23 +45,25 @@\n    public DebugResponseWriter(ResponseWriter decorated)\n    {\n      super(decorated);\n-     _elementStack = new Stack();\n-     _idMap = new HashMap();\n-     _attributes = new HashSet();\n+     _elementStack = new Stack<String>();\n+     _idMap = new HashMap<Object, Boolean>();\n+     _attributes = new HashSet<String>();\n    }\n \n    /**\n     * Creates a new instance of this DebugResponseWriter, using a different\n     * Writer.\n     */\n-   public ResponseWriter cloneWithWriter(Writer writer)\n+   @Override\n+  public ResponseWriter cloneWithWriter(Writer writer)\n    {\n      return new DebugResponseWriter(\n        getResponseWriter().cloneWithWriter(writer));\n    }\n \n \n-   public void endDocument() throws IOException\n+   @Override\n+  public void endDocument() throws IOException\n    {\n      super.endDocument();\n      if (!_elementStack.empty())\n@@ -75,7 +77,8 @@ public void endDocument() throws IOException\n    /**\n     * Writes a comment.\n     */\n-   public void writeComment(Object text) throws IOException\n+   @Override\n+  public void writeComment(Object text) throws IOException\n    {\n      if ((text != null) && (text.toString().indexOf(\"--\") >= 0))\n        _LOG.warning(\"Comments cannot include \\\"--\\\"\");\n@@ -88,7 +91,8 @@ public void writeComment(Object text) throws IOException\n    /**\n     * Writes a String, escaped properly for this method.\n     */\n-   public void writeText(Object text, String componentPropertyName) throws IOException\n+   @Override\n+  public void writeText(Object text, String componentPropertyName) throws IOException\n    {\n      _inElement = false;\n      super.writeText(text, componentPropertyName);\n@@ -97,7 +101,8 @@ public void writeText(Object text, String componentPropertyName) throws IOExcept\n    /**\n     * Writes a character array, escaped properly for this method.\n     */\n-   public void writeText(\n+   @Override\n+  public void writeText(\n      char[]      text,\n      int         start,\n      int         length) throws IOException\n@@ -110,7 +115,8 @@ public void writeText(\n    /**\n     * Writes a string, without performing any escaping.\n     */\n-   public void write(String text) throws IOException\n+   @Override\n+  public void write(String text) throws IOException\n    {\n      _inElement = false;\n      super.write(text);\n@@ -119,7 +125,8 @@ public void write(String text) throws IOException\n    /**\n     * Writes a character array, without performing any escaping.\n     */\n-   public void write(\n+   @Override\n+  public void write(\n      char[]      text,\n      int         start,\n      int         length) throws IOException\n@@ -132,7 +139,8 @@ public void write(\n    /**\n     * Writes a character, without performing any escaping.\n     */\n-   public void write(\n+   @Override\n+  public void write(\n      int ch\n      ) throws IOException\n    {\n@@ -141,7 +149,8 @@ public void write(\n    }\n \n \n-   public void startElement(String name, UIComponent component) throws IOException\n+   @Override\n+  public void startElement(String name, UIComponent component) throws IOException\n    {\n      if ((component != null) && (_lastComponentStarted != component))\n      {\n@@ -164,7 +173,8 @@ public void startElement(String name, UIComponent component) throws IOException\n    }\n \n \n-   public void endElement(String name) throws IOException\n+   @Override\n+  public void endElement(String name) throws IOException\n    {\n      _inElement = false;\n      _lastComponentStarted = null;\n@@ -195,7 +205,8 @@ public void endElement(String name) throws IOException\n      super.endElement(name);\n    }\n \n-   public void writeAttribute(String name,\n+   @Override\n+  public void writeAttribute(String name,\n                               Object value,\n                               String componentPropertyName)\n          throws IOException\n@@ -223,7 +234,8 @@ public void writeAttribute(String name,\n      super.writeAttribute(name, value, componentPropertyName);\n    }\n \n-   public void writeURIAttribute(\n+   @Override\n+  public void writeURIAttribute(\n      String     name,\n      Object     value,\n      String     componentPropertyName) throws IOException\n@@ -300,15 +312,15 @@ private void _logDuplicateId(Object value)\n    private boolean      _inElement;\n    // Yes, Stack is slow and lame.  This code is used for debugging\n    // only, so that is of little concern.\n-   private Stack        _elementStack;\n+   private Stack<String> _elementStack;\n    // the following is used to keep track of how many time endElement is called.\n    // This is to help in debuggin. An often error is that some element was\n    // too many times or too few times. But by the time the error is detected\n    // it is too late. Now we can print out this count, and you can set the\n    // debugger to stop when the count-1 'th endElement is called:\n-   private int          _endElementCount = 0;\n-   private Map          _idMap;\n-   private Set          _attributes;\n+   private int                  _endElementCount = 0;\n+   private Map<Object, Boolean> _idMap;\n+   private Set<String>          _attributes;\n    // Last component that had a \"start\" component output;  used\n    // to avoid multiple \"start\" comments\n    private UIComponent  _lastComponentStarted;", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/io/DebugResponseWriter.java"}, {"additions": 25, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/io/HtmlResponseWriter.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/io/HtmlResponseWriter.java", "sha": "ed06db8cf7b10b5dea4c1d5cdf29e4712ba23489", "changes": 33, "status": "modified", "deletions": 8, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/io/HtmlResponseWriter.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f", "patch": "@@ -57,38 +57,45 @@ public HtmlResponseWriter(Writer out, String encoding)\n     CaboHttpUtils.validateEncoding(encoding);\n   }\n \n+  @Override\n   public String getCharacterEncoding()\n   {\n     return _encoding;\n   }\n \n+  @Override\n   public String getContentType()\n   {\n     return HTML_CONTENT_TYPE;\n   }\n \n+  @Override\n   public void startDocument() throws IOException\n   {\n   }\n \n \n+  @Override\n   public void endDocument() throws IOException\n   {\n     _out.flush();\n   }\n \n+  @Override\n   public void flush() throws IOException\n   {\n     _closeStartIfNecessary();\n   }\n \n \n+  @Override\n   public void close()throws IOException\n   {\n     flush();\n     // =-=AEW And anything else?\n   }\n \n+  @Override\n   public void startElement(String name,\n                            UIComponent component) throws IOException\n   {\n@@ -120,6 +127,7 @@ else if (\"script\".equals(name) ||\n   }\n \n \n+  @Override\n   public void endElement(String name) throws IOException\n   {\n     // eliminate any <pending></pending> combinations\n@@ -178,6 +186,7 @@ public void endElement(String name) throws IOException\n   }\n \n \n+  @Override\n   public void writeAttribute(String name,\n                              Object value,\n                              String componentPropertyName)\n@@ -192,7 +201,7 @@ public void writeAttribute(String name,\n \n     Writer out = _out;\n \n-    Class valueClass = value.getClass();\n+    Class<?> valueClass = value.getClass();\n \n     // See what attribute we were involved in\n     String currAttr = _currAttr;\n@@ -234,6 +243,7 @@ public void writeAttribute(String name,\n   }\n \n \n+  @Override\n   public void writeURIAttribute(String name,\n                                 Object value,\n                                 String componentPropertyName)\n@@ -273,6 +283,7 @@ public void writeURIAttribute(String name,\n     out.write('\"');\n   }\n \n+  @Override\n   public void writeComment(Object comment) throws IOException\n   {\n     if (comment != null)\n@@ -285,6 +296,7 @@ public void writeComment(Object comment) throws IOException\n   }\n \n \n+  @Override\n   public void writeText(Object text, String componentPropertyName)\n      throws IOException\n   {\n@@ -304,6 +316,7 @@ public void writeText(Object text, String componentPropertyName)\n   }\n \n \n+  @Override\n   public void writeText(char text[], int off, int len)\n         throws IOException\n   {\n@@ -318,25 +331,29 @@ public void writeText(char text[], int off, int len)\n     }\n   }\n \n+  @Override\n   public void write(char cbuf[], int off, int len) throws IOException\n   {\n     _closeStartIfNecessary();\n     _out.write(cbuf, off, len);\n   }\n \n+  @Override\n   public void write(String str) throws IOException\n   {\n     _closeStartIfNecessary();\n     _out.write(str);\n   }\n \n+  @Override\n   public void write(int c) throws IOException\n   {\n     _closeStartIfNecessary();\n     _out.write((char) c);\n   }\n \n \n+  @Override\n   public ResponseWriter cloneWithWriter(Writer writer)\n   {\n     try\n@@ -376,7 +393,7 @@ private void _startElementImpl(String name) throws IOException\n    * Writes the value of an object\n    */\n   private void _writeValue(\n-    Class       valueClass,\n+    Class<?>    valueClass,\n     Object      value,\n     boolean     isAttribute\n     ) throws IOException\n@@ -488,7 +505,7 @@ private String _popSkippedElement()\n     if (size == 0)\n       return null;\n \n-    return (String)_skippedElements.remove(size - 1);\n+    return _skippedElements.remove(size - 1);\n   }\n \n   /**\n@@ -621,13 +638,13 @@ static private boolean _isEmptyElement(String name)\n \n   // stack of skipped and unskipped elements used to determine when\n   // to suppress the end tag of a skipped element\n-  private final ArrayList   _skippedElements = new ArrayList(20);\n+  private final ArrayList<String> _skippedElements = new ArrayList<String>(20);\n \n \n-  private static final Class _CHAR_ARRAY_CLASS = (new char[0]).getClass();\n-  private static final Class _BOOLEAN_CLASS = Boolean.class;\n-  private static final Class _INTEGER_CLASS = Integer.class;\n-  private static final Class _ESCAPED_TEXT_CLASS = EscapedText.class;\n+  private static final Class<?> _CHAR_ARRAY_CLASS = (new char[0]).getClass();\n+  private static final Class<?> _BOOLEAN_CLASS = Boolean.class;\n+  private static final Class<?> _INTEGER_CLASS = Integer.class;\n+  private static final Class<?> _ESCAPED_TEXT_CLASS = EscapedText.class;\n \n \n   static private final TrinidadLogger _LOG = TrinidadLogger.createTrinidadLogger(HtmlResponseWriter.class);", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/io/HtmlResponseWriter.java"}, {"additions": 10, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/io/IndentingResponseWriter.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/io/IndentingResponseWriter.java", "sha": "776decbd5c63377c9253bd372f143692e5b60333", "changes": 11, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/io/IndentingResponseWriter.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f", "patch": "@@ -50,12 +50,14 @@ public IndentingResponseWriter(\n    * Creates a new instance of this DebugResponseWriter, using a different\n    * Writer.\n    */\n+  @Override\n   public ResponseWriter cloneWithWriter(Writer writer)\n   {\n     return new IndentingResponseWriter(\n       getResponseWriter().cloneWithWriter(writer));\n   }\n \n+  @Override\n   public void startElement(String name,\n                            UIComponent component) throws IOException\n   {\n@@ -74,6 +76,7 @@ public void startElement(String name,\n     super.startElement(name, component);\n   }\n \n+  @Override\n   public void endElement(String name) throws IOException\n   {\n     _depth--;\n@@ -93,6 +96,7 @@ public void endElement(String name) throws IOException\n   /**\n    * Writes a comment.\n    */\n+  @Override\n   public void writeComment(Object comment) throws IOException\n   {\n     // start a new line only if an element just ended and\n@@ -105,6 +109,7 @@ public void writeComment(Object comment) throws IOException\n   /**\n    * Writes a String, escaped properly for this method.\n    */\n+  @Override\n   public void writeText(Object text, String componentPropertyName) throws IOException\n   {\n     _seeIfJustEndedElement();\n@@ -115,6 +120,7 @@ public void writeText(Object text, String componentPropertyName) throws IOExcept\n   /**\n    * Writes a character array, escaped properly for this method.\n    */\n+  @Override\n   public void writeText(\n     char[]      text, \n     int         start,\n@@ -127,6 +133,7 @@ public void writeText(\n   /**\n    * Writes a string, without performing any escaping.\n    */\n+  @Override\n   public void write(String text) throws IOException\n   {\n     _seeIfJustEndedElement();\n@@ -136,6 +143,7 @@ public void write(String text) throws IOException\n   /**\n    * Writes a character array, without performing any escaping.\n    */\n+  @Override\n   public void write(\n     char[]      text, \n     int         start,\n@@ -148,6 +156,7 @@ public void write(\n   /**\n    * Writes a character, without performing any escaping.\n    */\n+  @Override\n   public void write(\n     int c\n     ) throws IOException\n@@ -229,7 +238,7 @@ private boolean _isWhiteSpaceSensitive(String element)\n     }\n   }\n \n-  static private final Set _HTML_TYPES = new HashSet();\n+  static private final Set<String> _HTML_TYPES = new HashSet<String>();\n   static\n   {\n     _HTML_TYPES.add(HtmlResponseWriter.HTML_CONTENT_TYPE);", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/io/IndentingResponseWriter.java"}, {"additions": 2, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/io/RepeatIdResponseWriter.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/io/RepeatIdResponseWriter.java", "sha": "e6c65dc905beef31e19226cbacc3ca59d5eb8762", "changes": 2, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/io/RepeatIdResponseWriter.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f", "patch": "@@ -52,12 +52,14 @@ private RepeatIdResponseWriter(ResponseWriter out)\n     super(out);\n   }\n   \n+  @Override\n   public ResponseWriter cloneWithWriter(Writer writer)\n   {\n     return new RepeatIdResponseWriter(\n       getResponseWriter().cloneWithWriter(writer));\n   }\n \n+  @Override\n   public void writeAttribute(String     name,\n                              Object     value,\n                              String     property) throws IOException", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/io/RepeatIdResponseWriter.java"}, {"additions": 19, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/io/ResponseWriterDecorator.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/io/ResponseWriterDecorator.java", "sha": "4373ac50084bdde68f1b818b490de2ee879d06dd", "changes": 19, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/io/ResponseWriterDecorator.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f", "patch": "@@ -46,51 +46,60 @@ protected ResponseWriter getResponseWriter()\n     return _decorated;\n   }\n \n+  @Override\n   public String getCharacterEncoding()\n   {\n     return getResponseWriter().getCharacterEncoding();\n   }\n \n+  @Override\n   public String getContentType()\n   {\n     return getResponseWriter().getContentType();\n   }\n \n+  @Override\n   public void startDocument() throws IOException\n   {\n     getResponseWriter().startDocument();\n   }\n \n \n+  @Override\n   public void endDocument() throws IOException\n   {\n     getResponseWriter().endDocument();\n   }\n \n+  @Override\n   public void flush() throws IOException\n   {\n     getResponseWriter().flush();\n   }\n \n \n+  @Override\n   public void close()throws IOException\n   {\n     getResponseWriter().close();\n   }\n \n+  @Override\n   public void startElement(String name,\n                            UIComponent component) throws IOException\n   {\n     getResponseWriter().startElement(name, component);\n   }\n \n   \n+  @Override\n   public void endElement(String name) throws IOException\n   {\n     getResponseWriter().endElement(name);\n   }\n \n \n+  @Override\n   public void writeAttribute(String name,\n                              Object value,\n                              String componentPropertyName)\n@@ -100,6 +109,7 @@ public void writeAttribute(String name,\n   }\n \n \n+  @Override\n   public void writeURIAttribute(String name,\n                                 Object value,\n                                 String componentPropertyName)\n@@ -108,51 +118,60 @@ public void writeURIAttribute(String name,\n     getResponseWriter().writeURIAttribute(name, value, componentPropertyName);\n   }\n \n+  @Override\n   public void writeComment(Object comment) throws IOException\n   {\n     getResponseWriter().writeComment(comment);\n   }\n \n   \n+  @Override\n   public void writeText(Object text, String componentPropertyName) throws IOException\n   {\n     getResponseWriter().writeText(text, componentPropertyName);\n   }\n \n \n+  @Override\n   public void writeText(char text[], int off, int len)\n         throws IOException\n   {\n     getResponseWriter().writeText(text, off, len);\n   }\n \n+  @Override\n   public void write(char cbuf[], int off, int len) throws IOException\n   {\n     getResponseWriter().write(cbuf, off, len);\n   }\n \n+  @Override\n   public void write(String str) throws IOException\n   {\n     getResponseWriter().write(str);\n   }\n \n+  @Override\n   public void write(int c) throws IOException\n   {\n     getResponseWriter().write((char) c);\n   }\n \n+  @Override\n   public void write(char[] cbuf)\n     throws IOException\n   {\n     getResponseWriter().write(cbuf);\n   }\n \n+  @Override\n   public void write(String str, int off, int len)\n     throws IOException\n   {\n     getResponseWriter().write(str, off, len);\n   }\n \n+  @Override\n   public ResponseWriter cloneWithWriter(Writer writer)\n   {\n     return getResponseWriter().cloneWithWriter(writer);", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/io/ResponseWriterDecorator.java"}, {"additions": 28, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/io/XhtmlResponseWriter.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/io/XhtmlResponseWriter.java", "sha": "93575d5a97c480e5450a78c7d753e6696ee82979", "changes": 36, "status": "modified", "deletions": 8, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/io/XhtmlResponseWriter.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f", "patch": "@@ -59,38 +59,45 @@ public XhtmlResponseWriter(\n     CaboHttpUtils.validateEncoding(encoding);\n   }\n \n+  @Override\n   public String getCharacterEncoding()\n   {\n     return _encoding;\n   }\n \n+  @Override\n   public String getContentType()\n   {\n     return XHTML_CONTENT_TYPE;\n   }\n \n+  @Override\n   public void startDocument() throws IOException\n   {\n   }\n \n \n+  @Override\n   public void endDocument() throws IOException\n   {\n     _out.flush();\n   }\n \n+  @Override\n   public void flush() throws IOException\n   {\n     _closeStartIfNecessary();\n   }\n \n \n+  @Override\n   public void close()throws IOException\n   {\n     flush();\n     // =-=AEW And anything else?\n   }\n \n+  @Override\n   public void startElement(String name,\n                            UIComponent component) throws IOException\n   {\n@@ -122,6 +129,7 @@ else if (\"script\".equals(name) ||\n   }\n \n \n+  @Override\n   public void endElement(String name) throws IOException\n   {\n     // eliminate any <pending></pending> combinations\n@@ -167,6 +175,7 @@ public void endElement(String name) throws IOException\n   }\n \n \n+  @Override\n   public void writeAttribute(String name,\n                              Object value,\n                              String componentPropertyName)\n@@ -181,7 +190,7 @@ public void writeAttribute(String name,\n \n     Writer out = _out;\n \n-    Class valueClass = value.getClass();\n+    Class<?> valueClass = value.getClass();\n \n     // Output Boolean values specially\n     if (valueClass == _BOOLEAN_CLASS)\n@@ -208,6 +217,7 @@ public void writeAttribute(String name,\n   }\n \n \n+  @Override\n   public void writeURIAttribute(String name,\n                                 Object value,\n                                 String componentPropertyName)\n@@ -217,6 +227,7 @@ public void writeURIAttribute(String name,\n     writeAttribute(name, value, componentPropertyName);\n   }\n \n+  @Override\n   public void writeComment(Object comment) throws IOException\n   {\n     if (comment != null)\n@@ -229,6 +240,7 @@ public void writeComment(Object comment) throws IOException\n   }\n \n \n+  @Override\n   public void writeText(Object text, String componentPropertyName)\n      throws IOException\n   {\n@@ -248,6 +260,7 @@ public void writeText(Object text, String componentPropertyName)\n   }\n \n \n+  @Override\n   public void writeText(char text[], int off, int len)\n         throws IOException\n   {\n@@ -262,25 +275,29 @@ public void writeText(char text[], int off, int len)\n     }\n   }\n \n+  @Override\n   public void write(char cbuf[], int off, int len) throws IOException\n   {\n     _closeStartIfNecessary();\n     _out.write(cbuf, off, len);\n   }\n \n+  @Override\n   public void write(String str) throws IOException\n   {\n     _closeStartIfNecessary();\n     _out.write(str);\n   }\n \n+  @Override\n   public void write(int c) throws IOException\n   {\n     _closeStartIfNecessary();\n     _out.write((char) c);\n   }\n \n \n+  @Override\n   public ResponseWriter cloneWithWriter(Writer writer)\n   {\n     try\n@@ -321,7 +338,7 @@ private void _startElementImpl(String name) throws IOException\n    * Writes the value of an object\n    */\n   private void _writeValue(\n-    Class       valueClass,\n+    Class<?>    valueClass,\n     Object      value,\n     boolean     isAttribute\n     ) throws IOException\n@@ -427,7 +444,7 @@ private String _popSkippedElement()\n     if (size == 0)\n       return null;\n \n-    return (String)_skippedElements.remove(size - 1);\n+    return _skippedElements.remove(size - 1);\n   }\n \n   /**\n@@ -457,6 +474,9 @@ private void _pushOutputtedElement(\n   private boolean     _dontEscape;\n \n   private Writer       _out;\n+  // -= Simon Lessard =-\n+  // FIXME: Never read locally\n+  @SuppressWarnings(\"unused\")\n   private String       _contentType;\n   private String       _encoding;\n \n@@ -465,13 +485,13 @@ private void _pushOutputtedElement(\n \n   // stack of skipped and unskipped elements used to determine when\n   // to suppress the end tag of a skipped element\n-  private final ArrayList   _skippedElements = new ArrayList(20);\n+  private final ArrayList<String> _skippedElements = new ArrayList<String>(20);\n \n \n-  private static final Class _CHAR_ARRAY_CLASS = (new char[0]).getClass();\n-  private static final Class _BOOLEAN_CLASS = Boolean.class;\n-  private static final Class _INTEGER_CLASS = Integer.class;\n-  private static final Class _ESCAPED_TEXT_CLASS = EscapedText.class;\n+  private static final Class<?> _CHAR_ARRAY_CLASS = (new char[0]).getClass();\n+  private static final Class<?> _BOOLEAN_CLASS = Boolean.class;\n+  private static final Class<?> _INTEGER_CLASS = Integer.class;\n+  private static final Class<?> _ESCAPED_TEXT_CLASS = EscapedText.class;\n \n   static private final TrinidadLogger _LOG = TrinidadLogger.createTrinidadLogger(XhtmlResponseWriter.class);\n }", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/io/XhtmlResponseWriter.java"}, {"additions": 44, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/metadata/RegionMetadata.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/metadata/RegionMetadata.java", "sha": "3ce7337697094d81a32251e5b581d8f49373dd93", "changes": 66, "status": "modified", "deletions": 22, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/metadata/RegionMetadata.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f", "patch": "@@ -51,13 +51,20 @@\n  */\n public final class RegionMetadata extends RegionManager\n {\n-\n+  @SuppressWarnings(\"unchecked\")\n+  private RegionMetadata()\n+  {\n+    _map = Collections.EMPTY_MAP;\n+  }\n+  \n+  @Override\n   public RegionConfig getRegionConfig(String regionType)\n   {\n-    return (ComponentMetaData) _map.get(regionType);\n+    return _map.get(regionType);\n   }\n \n-  public Map getRegionConfigs()\n+  @Override\n+  public Map<String, RegionConfig> getRegionConfigs()\n   {\n     return Collections.unmodifiableMap(_map);\n   }\n@@ -69,10 +76,11 @@ public Map getRegionConfigs()\n    * All resources with the name \"/META-INF/region-metadata.xml\" will be searched.\n    * /WEB-INF/region-metadata.xml will also be searched.\n    */\n+  @SuppressWarnings(\"unchecked\")\n   public static synchronized RegionMetadata getRegionMetadata(\n     FacesContext context)\n   {\n-    Map appMap = context.getExternalContext().getApplicationMap();\n+    Map<String, Object> appMap = context.getExternalContext().getApplicationMap();\n     RegionMetadata bean = (RegionMetadata) appMap.get(_KEY);\n     if (bean == null)\n     {\n@@ -109,9 +117,10 @@ public static synchronized RegionMetadata getRegionMetadata(\n    * The next time {@link #getRegionMetadata} is called, it\n    * will reparse all the region-metadata.xml files.\n    */\n+  @SuppressWarnings(\"unchecked\")\n   public static synchronized void invalidate(FacesContext context)\n   {\n-    Map appMap = context.getExternalContext().getApplicationMap();\n+    Map<String, Object> appMap = context.getExternalContext().getApplicationMap();\n     appMap.remove(_KEY);\n   }\n \n@@ -126,10 +135,10 @@ private static void _readAllRegionMDFiles(\n     }\n     try\n     {\n-      Enumeration files = loader.getResources(regionMDFile);\n+      Enumeration<URL> files = loader.getResources(regionMDFile);\n       while(files.hasMoreElements())\n       {\n-        URL url = (URL)files.nextElement();\n+        URL url = files.nextElement();\n         String publicId = url.toString();\n         try\n         {\n@@ -196,20 +205,16 @@ private void _put(String componentType, ComponentMetaData comp)\n     }\n     if (_map == Collections.EMPTY_MAP)\n     {\n-      _map = new HashMap(5);\n+      _map = new HashMap<String, RegionConfig>(5);\n     }\n-    ComponentMetaData old = (ComponentMetaData) _map.put(componentType, comp);\n+    RegionConfig old = _map.put(componentType, comp);\n     if (old != null)\n     {\n       _LOG.warning(\"Replaced jspUri {0} with {1} for componentType:{2}\",\n         new Object[] {old.getJspUIDef(), comp.getJspUIDef(), componentType});\n     }\n   }\n \n-  private RegionMetadata()\n-  {\n-  }\n-\n \n   static private class Handler extends DefaultHandler\n   {\n@@ -218,6 +223,7 @@ public Handler(RegionMetadata bean)\n       _bean = bean;\n     }\n \n+    @Override\n     public InputSource resolveEntity (String publicId, String systemId)\n     \tthrows SAXException\n     {\n@@ -226,12 +232,14 @@ public InputSource resolveEntity (String publicId, String systemId)\n       return new InputSource(new StringReader(\"\"));\n     }\n \n+    @Override\n     public void setDocumentLocator(Locator locator)\n     {\n       super.setDocumentLocator(locator);\n       _loc = locator;\n     }\n \n+    @Override\n     public void startElement(String uri,\n                              String localName,\n                              String qName,\n@@ -315,6 +323,7 @@ private boolean _changeState(String localName, String tag, int newState)\n       return false;\n     }\n \n+    @Override\n     public void characters(char[] ch, int start, int length)\n     {\n       switch(_state)\n@@ -330,6 +339,7 @@ public void characters(char[] ch, int start, int length)\n       }\n     }\n \n+    @Override\n     public void endElement(String uri,\n                            String localName,\n                            String qName)\n@@ -398,7 +408,7 @@ private void _addComponentMetadata()\n       _comp._trim(); // no more attributes will be added, so trim-to-size\n     }\n \n-    private Class _getClass(String javaType)\n+    private Class<?> _getClass(String javaType)\n     {\n       String className = ConvertBoundValue.getClassName(javaType);\n       try\n@@ -477,16 +487,17 @@ private void _skip(String localName)\n \n   public static final class AttributeMetaData\n   {\n-    private String _name, _default;\n-    private Class _class;\n+    private String _default;\n+    private String _name;\n+    private Class<?> _class;\n     private boolean _required = false;\n \n     public String getAttrName()\n     {\n       return _name;\n     }\n \n-    public Class getAttrClass()\n+    public Class<?> getAttrClass()\n     {\n       return _class;\n     }\n@@ -504,30 +515,37 @@ public boolean isRequired()\n \n   public static final class ComponentMetaData extends RegionConfig\n   {\n-    private String _jsp, _regionType;\n-    private List _attrs = Collections.EMPTY_LIST;\n+    @SuppressWarnings(\"unchecked\")\n+    public ComponentMetaData()\n+    {\n+      _attrs = Collections.EMPTY_LIST;\n+    }\n \n+    @Override\n     public String getDescription()\n     {\n       return null;\n     }\n \n+    @Override\n     public String getDisplayName()\n     {\n       return null;\n     }\n \n+    @Override\n     public String getComponentType()\n     {\n       return _regionType;\n     }\n \n+    @Override\n     public String getJspUIDef()\n     {\n       return _jsp;\n     }\n \n-    public List getAttributes()\n+    public List<AttributeMetaData> getAttributes()\n     {\n       return _attrs;\n     }\n@@ -536,7 +554,7 @@ private void _addAttribute(AttributeMetaData attr)\n     {\n       if (_attrs == Collections.EMPTY_LIST)\n       {\n-        _attrs = new ArrayList(5);\n+        _attrs = new ArrayList<AttributeMetaData>(5);\n       }\n       _attrs.add(attr);\n     }\n@@ -546,9 +564,13 @@ public void _trim()\n       if (_attrs instanceof ArrayList)\n         ((ArrayList) _attrs).trimToSize();\n     }\n+    \n+    private String _jsp;\n+    private String _regionType;\n+    private List<AttributeMetaData> _attrs;\n   }\n \n-  private Map _map = Collections.EMPTY_MAP;\n+  private Map<String, RegionConfig> _map;\n \n   private static final int _STATE_INIT = 0;\n   private static final int _STATE_SKIP = 10;", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/metadata/RegionMetadata.java"}, {"additions": 1, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/ClassRendererInstantiator.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/ClassRendererInstantiator.java", "sha": "da87a55edb5b09abd187e90a4eae8b7516126f04", "changes": 2, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/ClassRendererInstantiator.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f", "patch": "@@ -43,7 +43,7 @@ public Renderer instantiate()\n   {\n     try\n     {\n-      Class classInstance = ClassLoaderUtils.loadClass(_className);\n+      Class<?> classInstance = ClassLoaderUtils.loadClass(_className);\n       return (Renderer) classInstance.newInstance();\n     }\n     catch (ClassNotFoundException cnfe)", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/ClassRendererInstantiator.java"}, {"additions": 5, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/CoreRenderKitFactory.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/CoreRenderKitFactory.java", "sha": "54f0e76cdfe9b0b94bcc3478ecd2f5ecaa6aaca0", "changes": 8, "status": "modified", "deletions": 3, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/CoreRenderKitFactory.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f", "patch": "@@ -36,13 +36,13 @@ public CoreRenderKitFactory(RenderKitFactory factory)\n     _factory = factory;\n   }\n \n-\n+  @Override\n   public void addRenderKit(String renderKitId, RenderKit renderKit)\n   {\n     _factory.addRenderKit(renderKitId, renderKit);\n   }\n \n-\n+  @Override\n   public RenderKit getRenderKit(FacesContext context, String renderKitId)\n   {\n     if (CoreRenderKit.getId().equals(renderKitId))\n@@ -53,7 +53,9 @@ public RenderKit getRenderKit(FacesContext context, String renderKitId)\n     return _factory.getRenderKit(context, renderKitId);\n   }\n \n-  public Iterator getRenderKitIds()\n+  @SuppressWarnings(\"unchecked\")\n+  @Override\n+  public Iterator<String> getRenderKitIds()\n   {\n     return _factory.getRenderKitIds();\n   }", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/CoreRenderKitFactory.java"}, {"additions": 2, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/RenderKitBase.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/RenderKitBase.java", "sha": "f39058aacc505e6591088906428dc5fa0cdd7d72", "changes": 2, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/RenderKitBase.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f", "patch": "@@ -55,6 +55,7 @@ public RenderKitBase()\n    * @exception NullPointerException if <code>rendererType</code> or\n    *  <code>renderer</code> is null\n    */\n+  @Override\n   public void addRenderer(\n      String family,\n      String rendererType,\n@@ -109,6 +110,7 @@ public void addRenderer(String family,\n    * @exception NullPointerException if <code>rendererType</code>\n    *  is <code>null</code>\n    */\n+  @Override\n   public Renderer getRenderer(String family, String rendererType)\n   {\n     Renderer renderer = findRenderer(family, rendererType);", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/RenderKitBase.java"}, {"additions": 6, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/RenderKitDecorator.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/RenderKitDecorator.java", "sha": "b9ae330d809dcf8068b4600169a40d4e198794ac", "changes": 10, "status": "modified", "deletions": 4, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/RenderKitDecorator.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f", "patch": "@@ -37,6 +37,7 @@\n     return Service.getService(getRenderKit(), serviceClass);\n   }\n \n+  @Override\n   public ResponseWriter createResponseWriter(\n     Writer writer,\n     String contentTypeList,\n@@ -49,17 +50,17 @@ public ResponseWriter createResponseWriter(\n     return createDecoratedResponseWriter(out);\n   }\n \n+  @Override\n   public ResponseStream createResponseStream(\n     OutputStream out)\n   {\n-    RenderKit renderKit = getRenderKit();\n-    return renderKit.createResponseStream(out);\n+    return getRenderKit().createResponseStream(out);\n   }\n \n+  @Override\n   public ResponseStateManager getResponseStateManager()\n   {\n-    RenderKit renderKit = getRenderKit();\n-    return renderKit.getResponseStateManager();\n+    return getRenderKit().getResponseStateManager();\n   }\n \n   protected ResponseWriter createDecoratedResponseWriter(\n@@ -68,6 +69,7 @@ protected ResponseWriter createDecoratedResponseWriter(\n     return delegate;\n   }\n \n+  @Override\n   protected Renderer findRenderer(\n     String componentFamily,\n     String rendererType)", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/RenderKitDecorator.java"}, {"additions": 6, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/RenderUtils.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/RenderUtils.java", "sha": "fc4fc08fef4eadcf1fe99b17410c4d7258590297", "changes": 10, "status": "modified", "deletions": 4, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/RenderUtils.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f", "patch": "@@ -16,7 +16,7 @@\n package org.apache.myfaces.trinidadinternal.renderkit;\n \n import java.io.IOException;\n-import java.util.Iterator;\n+import java.util.List;\n \n import javax.faces.component.UIComponent;\n import javax.faces.component.UIForm;\n@@ -40,6 +40,7 @@ private RenderUtils()\n   /**\n    * Encodes a component and all of its children.\n    */\n+  @SuppressWarnings(\"unchecked\")\n   static public void encodeRecursive(FacesContext context,\n                                      UIComponent component)\n     throws IOException\n@@ -55,9 +56,10 @@ static public void encodeRecursive(FacesContext context,\n       {\n         if (component.getChildCount() > 0)\n         {\n-          Iterator children = component.getChildren().iterator();\n-          while (children.hasNext())\n-            encodeRecursive(context, (UIComponent) children.next());\n+          for(UIComponent child : (List<UIComponent>)component.getChildren())\n+          {\n+            encodeRecursive(context, child);\n+          }\n         }\n       }\n ", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/RenderUtils.java"}, {"additions": 8, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/RenderingContext.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/RenderingContext.java", "sha": "0e200af1fca081a1e119c5a220c29e7d34120f83", "changes": 14, "status": "modified", "deletions": 6, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/RenderingContext.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f", "patch": "@@ -39,7 +39,7 @@\n    */\n   static public RenderingContext getCurrentInstance()\n   {\n-    return (RenderingContext) _CURRENT_CONTEXT.get();\n+    return _CURRENT_CONTEXT.get();\n   }\n \n   static public final Object INACCESSIBLE_MODE =\n@@ -55,7 +55,7 @@ public RenderingContext()\n   /**\n    * A map of properties specific to rendering.\n    */\n-  abstract public Map           getProperties();\n+  abstract public Map<Object, Object> getProperties();\n \n   abstract public TrinidadAgent getAgent();\n   /**\n@@ -101,8 +101,8 @@ public String getTranslatedString(String key)\n \n \n   abstract public String getStyleClass(String styleClass);\n-  abstract public void   setSkinResourceKeyMap(Map mapping);\n-  abstract public Map    getSkinResourceKeyMap();\n+  abstract public void   setSkinResourceKeyMap(Map<String, String> mapping);\n+  abstract public Map<String, String> getSkinResourceKeyMap();\n   abstract public boolean isRightToLeft();\n   abstract public String getOutputMode();\n   abstract public Object getAccessibilityMode();\n@@ -128,7 +128,7 @@ public void release()\n   {\n     Object o = _CURRENT_CONTEXT.get();\n     // Clean up first...\n-    _CURRENT_CONTEXT.set(null);\n+    _CURRENT_CONTEXT.remove();\n \n     // Then see if there's a problem, and scream if there is one\n     if (o == null)\n@@ -164,7 +164,9 @@ protected void attach()\n   }\n \n \n-  static private final ThreadLocal _CURRENT_CONTEXT = new ThreadLocal();\n+  static private final ThreadLocal<RenderingContext> _CURRENT_CONTEXT = \n+    new ThreadLocal<RenderingContext>();\n+  \n   static private final TrinidadLogger _LOG =\n     TrinidadLogger.createTrinidadLogger(RenderingContext.class);\n }", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/RenderingContext.java"}, {"additions": 47, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/CoreRenderKit.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/CoreRenderKit.java", "sha": "6313591bdc031c9686562038e42a09a842419112", "changes": 74, "status": "modified", "deletions": 27, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/CoreRenderKit.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f", "patch": "@@ -21,7 +21,6 @@\n \n import java.util.ArrayList;\n import java.util.HashMap;\n-import java.util.Iterator;\n import java.util.List;\n import java.util.Map;\n \n@@ -163,7 +162,9 @@ public CoreRenderKit()\n   static public void saveDialogPostbackValues(\n     String returnId)\n   {\n-    Map pageFlowScope = RequestContext.getCurrentInstance().getPageFlowScope();\n+    Map<String, Object> pageFlowScope = \n+      RequestContext.getCurrentInstance().getPageFlowScope();\n+    \n     pageFlowScope.put(_RETURN_ID, returnId);\n   }\n \n@@ -172,13 +173,14 @@ static public void saveDialogPostbackValues(\n   //\n \n \n+  @SuppressWarnings(\"unchecked\")\n   public boolean launchDialog(\n-    FacesContext context,\n-    UIViewRoot   targetRoot,\n-    UIComponent  source,\n-    Map          processParameters,\n-    boolean      useWindow,\n-    Map          windowProperties)\n+    FacesContext       context,\n+    UIViewRoot         targetRoot,\n+    UIComponent        source,\n+    Map<String,Object> processParameters,\n+    boolean            useWindow,\n+    Map<String,Object> windowProperties)\n   {\n     // If we're not being asked to use a separate window,\n     // just fallback on the default launchDialog() code\n@@ -194,17 +196,19 @@ public boolean launchDialog(\n     String formId = RenderUtils.getFormId(context, source);\n \n     if (windowProperties == null)\n-      windowProperties = new HashMap();\n+      windowProperties = new HashMap<String,Object>();\n \n     // Copy properties from the source component to the dialog properties\n     if (source != null)\n     {\n-      Map sourceAttrs = source.getAttributes();\n+      Map<String, Object> sourceAttrs = source.getAttributes();\n       _copyProperty(windowProperties, \"width\", sourceAttrs, \"windowWidth\");\n       _copyProperty(windowProperties, \"height\", sourceAttrs, \"windowHeight\");\n     }\n \n-    Map pageFlowScope = RequestContext.getCurrentInstance().getPageFlowScope();\n+    Map<String, Object> pageFlowScope = \n+      RequestContext.getCurrentInstance().getPageFlowScope();\n+    \n     if (processParameters != null)\n       pageFlowScope.putAll(processParameters);\n \n@@ -254,12 +258,14 @@ public boolean returnFromDialog(\n     return true;\n   }\n \n-\n+  @SuppressWarnings(\"unchecked\")\n   public boolean isReturning(\n     FacesContext context,\n     UIComponent  source)\n   {\n-    Map parameterMap = context.getExternalContext().getRequestParameterMap();\n+    Map<String, String> parameterMap = \n+      context.getExternalContext().getRequestParameterMap();\n+    \n     Object returning = parameterMap.get(RETURN_PARAM);\n     if ((returning == null) || \"\".equals(returning))\n       return false;\n@@ -277,12 +283,14 @@ public boolean isReturning(\n   // BEGIN ExtendedRenderKitService\n   //\n \n+  @SuppressWarnings(\"unchecked\")\n   public boolean shortCircuitRenderView(\n     FacesContext context) throws IOException\n   {\n     if (PartialPageUtils.isPartialRequest(context))\n     {\n-      Map requestMap = context.getExternalContext().getRequestMap();\n+      Map<String, Object> requestMap = \n+        context.getExternalContext().getRequestMap();\n \n       UIViewRoot originalRoot = (UIViewRoot) requestMap.get(\n                          TrinidadPhaseListener.INITIAL_VIEW_ROOT_KEY);\n@@ -436,17 +444,20 @@ public void encodeFinally(FacesContext context)\n   //\n \n \n+  @Override\n   public ResponseStateManager getResponseStateManager()\n   {\n     return _rsm;\n   }\n \n+  @Override\n   public ResponseStream createResponseStream(OutputStream out)\n   {\n     // =-=AEW What to do here???\n     throw new UnsupportedOperationException();\n   }\n \n+  @Override\n   public ResponseWriter createResponseWriter(Writer writer,\n                                              String contentTypeList,\n                                              String characterEncoding)\n@@ -555,31 +566,40 @@ private void _addBasicHTMLRenderKit()\n   }\n \n \n+  @SuppressWarnings(\"unchecked\")\n   private List<DialogRequest> _getDialogList(\n     FacesContext context,\n     boolean      createIfNew)\n   {\n-    Map requestMap = context.getExternalContext().getRequestMap();\n-    List<DialogRequest> l = (List<DialogRequest>)\n-      requestMap.get(_DIALOG_LIST_KEY);\n+    Map<String, Object> requestMap = \n+      context.getExternalContext().getRequestMap();\n+    \n+    List<DialogRequest> l = \n+      (List<DialogRequest>)requestMap.get(_DIALOG_LIST_KEY);\n+    \n     if ((l == null) && createIfNew)\n     {\n-      l = new ArrayList();\n+      l = new ArrayList<DialogRequest>();\n       requestMap.put(_DIALOG_LIST_KEY, l);\n     }\n \n     return l;\n   }\n \n+  @SuppressWarnings(\"unchecked\")\n   private List<String> _getScriptList(\n     FacesContext context,\n     boolean      createIfNew)\n   {\n-    Map requestMap = context.getExternalContext().getRequestMap();\n-    List<String> l = (List<String>) requestMap.get(_SCRIPT_LIST_KEY);\n+    Map<String, Object> requestMap = \n+      context.getExternalContext().getRequestMap();\n+    \n+    List<String> l = \n+      (List<String>) requestMap.get(_SCRIPT_LIST_KEY);\n+    \n     if ((l == null) && createIfNew)\n     {\n-      l = new ArrayList();\n+      l = new ArrayList<String>();\n       requestMap.put(_SCRIPT_LIST_KEY, l);\n     }\n \n@@ -640,15 +660,15 @@ private Writer _getHtmlWriter(FacesContext context) throws IOException\n   };\n \n \n-  static private void _copyProperty(\n-    Map    toMap,\n-    Object toKey,\n-    Map    fromMap,\n-    Object fromKey)\n+  static private <K1, K2, V> void _copyProperty(\n+    Map<K1, V> toMap,\n+    K1 toKey,\n+    Map<K2, ? extends V> fromMap,\n+    K2 fromKey)\n   {\n     if (!toMap.containsKey(toKey))\n     {\n-      Object o = fromMap.get(fromKey);\n+      V o = fromMap.get(fromKey);\n       if (o != null)\n         toMap.put(toKey, o);\n     }", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/CoreRenderKit.java"}, {"additions": 26, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/CoreRenderer.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/CoreRenderer.java", "sha": "69f355b5e80d0af89270c91abfcf484fc979d5e4", "changes": 52, "status": "modified", "deletions": 26, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/CoreRenderer.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f", "patch": "@@ -145,6 +145,7 @@ static public char toChar(Object o)\n   }\n \n \n+  @Override\n   public final void encodeBegin(FacesContext context,\n                           UIComponent component) throws IOException\n   {\n@@ -159,12 +160,14 @@ public final void encodeBegin(FacesContext context,\n     }\n   }\n \n+  @Override\n   public final void encodeChildren(FacesContext context, UIComponent component)\n   {\n     // encodeChildren() is fairly useless - it's simpler to just\n     // put the output in encodeEnd(), or use the encodeAll() hook\n   }\n \n+  @Override\n   public final void encodeEnd(FacesContext context,\n                         UIComponent component) throws IOException\n   {\n@@ -232,6 +235,7 @@ protected void encodeAll(\n    * can be used if you don't need that check.)\n    * =-=AEW Ugh.\n    */\n+  @SuppressWarnings(\"unchecked\")\n   protected void encodeChild(\n     FacesContext context,\n     UIComponent  child) throws IOException\n@@ -246,16 +250,18 @@ protected void encodeChild(\n     {\n       if (child.getChildCount() > 0)\n       {\n-        Iterator children = child.getChildren().iterator();\n-        while (children.hasNext())\n-          RenderUtils.encodeRecursive(context, (UIComponent) children.next());\n+        for(UIComponent subChild : (List<UIComponent>)child.getChildren())\n+        {\n+          RenderUtils.encodeRecursive(context, subChild);\n+        }\n       }\n     }\n     \n     child.encodeEnd(context);\n   }\n \n \n+  @SuppressWarnings(\"unchecked\")\n   protected final void encodeAllChildren(\n     FacesContext context,\n     UIComponent  component) throws IOException\n@@ -264,14 +270,12 @@ protected final void encodeAllChildren(\n     if (childCount == 0)\n       return;\n     \n-    List children   = component.getChildren();\n-    for (int i = 0; i < childCount; i++)\n+    for(UIComponent child : (List<UIComponent>)component.getChildren())\n     {\n-      UIComponent child = (UIComponent) children.get(i);\n-      if (!child.isRendered())\n-        continue;\n-\n-      encodeChild(context, child);\n+      if (child.isRendered())\n+      {\n+        encodeChild(context, child);\n+      }\n     }\n   }\n \n@@ -442,18 +446,19 @@ static public UIComponent getFacet(\n    * Returns true if the component has children and at least\n    * one has rendered==\"true\".\n    */\n+  @SuppressWarnings(\"unchecked\")\n   static public boolean hasRenderedChildren(UIComponent component)\n   {\n     int count = component.getChildCount();\n     if (count == 0)\n       return false;\n       \n-    List children = component.getChildren();\n-    for (int i = 0; i < count; i++)\n+    for(UIComponent child : (List<UIComponent>)component.getChildren())\n     {\n-      UIComponent child = (UIComponent) children.get(i);\n       if (child.isRendered())\n+      {\n         return true;\n+      }\n     }\n     \n     return false;\n@@ -462,19 +467,20 @@ static public boolean hasRenderedChildren(UIComponent component)\n   /**\n    * Returns the total number of children with rendered==\"true\".\n    */\n+  @SuppressWarnings(\"unchecked\")\n   static public int getRenderedChildCount(UIComponent component)\n   {\n     int count = component.getChildCount();\n     if (count == 0)\n       return 0;\n       \n     int total = 0;\n-    List children = component.getChildren();\n-    for (int i = 0; i < count; i++)\n+    for(UIComponent child : (List<UIComponent>)component.getChildren())\n     {\n-      UIComponent child = (UIComponent) children.get(i);\n       if (child.isRendered())\n+      {\n         total++;\n+      }\n     }\n     \n     return total;\n@@ -488,26 +494,20 @@ static public int getRenderedChildCount(UIComponent component)\n    * {@link #NO_CHILD_INDEX} if there is none.\n    */\n   public static int getNextRenderedChildIndex(\n-    List components,\n+    List<UIComponent> components,\n     int  afterChildIndex\n     )\n   {\n-    int childCount = components.size();\n     int childIndex = afterChildIndex + 1;\n-\n-    for (; childIndex < childCount; childIndex++)\n+    Iterator<UIComponent> iter = components.listIterator(childIndex);\n+    for(; iter.hasNext(); childIndex++)\n     {\n-      UIComponent currChild = (UIComponent)components.get(childIndex);\n-\n-      if (currChild.isRendered())\n+      if(iter.next().isRendered())\n       {\n         return childIndex;\n       }\n     }\n \n     return NO_CHILD_INDEX;\n   }\n-\n-  \n-\n }", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/CoreRenderer.java"}, {"additions": 53, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/CoreRenderingContext.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/CoreRenderingContext.java", "sha": "5a9965b81390732f6cc263eb898d0e33b50a515a", "changes": 77, "status": "modified", "deletions": 24, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/CoreRenderingContext.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f", "patch": "@@ -62,6 +62,8 @@ public CoreRenderingContext()\n     FacesContext context = FacesContext.getCurrentInstance();\n     RequestContext afContext = RequestContext.getCurrentInstance();\n \n+    _properties = new HashMap<Object, Object>();\n+    \n     _outputMode = afContext.getOutputMode();\n     _agent = _initializeAgent(context, afContext.getAgent(), _outputMode);\n \n@@ -122,16 +124,19 @@ public void setLinkDisabled(boolean isDisabled)\n \n   // Implementation of AdfRenderingContext\n \n-  public Map getProperties()\n+  @Override\n+  public Map<Object, Object> getProperties()\n   {\n     return _properties;\n   }\n \n+  @Override\n   public TrinidadAgent getAgent()\n   {\n     return _agent;\n   }\n \n+  @Override\n   public boolean isRightToLeft()\n   {\n     if (_localeContext != null)\n@@ -142,12 +147,14 @@ public boolean isRightToLeft()\n     return RequestContext.getCurrentInstance().isRightToLeft();\n   }\n \n+  @Override\n   public String getOutputMode()\n   {\n     return _outputMode;\n   }\n \n \n+  @Override\n   public Object getAccessibilityMode()\n   {\n     return _accessibilityMode;\n@@ -156,23 +163,27 @@ public Object getAccessibilityMode()\n   /**\n    * This will create a FormData object if it's null.\n    */\n+  @Override\n   public FormData getFormData()\n   {\n     assert(_formData != null);\n     return _formData;\n   }\n \n+  @Override\n   public void setFormData(FormData formData)\n   {\n     _formData = formData;\n   }\n \n+  @Override\n   public void clearFormData()\n   {\n     _formData = null;\n   }\n \n \n+  @Override\n   public Skin getSkin()\n   {\n     return _skin;\n@@ -181,6 +192,7 @@ public Skin getSkin()\n   /**\n    * Get an interface that can be used for style lookups and generation.\n    */\n+  @Override\n   public StyleContext getStyleContext()\n   {\n     if (_styleContext == null)\n@@ -195,6 +207,7 @@ public StyleContext getStyleContext()\n   }\n \n \n+  @Override\n   public LocaleContext getLocaleContext()\n   {\n     // Initialize the locale context lazily, because we may\n@@ -209,11 +222,13 @@ public LocaleContext getLocaleContext()\n     return _localeContext;\n   }\n \n+  @Override\n   public PartialPageContext getPartialPageContext()\n   {\n     return _pprContext;\n   }\n \n+  @Override\n   public String getStyleClass(String styleClass)\n   {\n     if (styleClass == null) return null;\n@@ -222,7 +237,7 @@ public String getStyleClass(String styleClass)\n     String shortenedStyle = null;\n     if (_styleMap != null)\n     {\n-      shortenedStyle = (String) _styleMap.get(styleClass);\n+      shortenedStyle = _styleMap.get(styleClass);\n     }\n \n     if (shortenedStyle != null)\n@@ -238,7 +253,7 @@ public String getStyleClass(String styleClass)\n     return styleClass;\n   }\n \n-\n+  @Override\n   public Icon getIcon(String iconName)\n   {\n     iconName = getSkinResourceMappedKey(iconName);\n@@ -280,7 +295,7 @@ public Icon getIcon(String iconName)\n   /**\n    * Store a map that provides abbreviations of styles.\n    */\n-  public void setStyleMap(Map mapping)\n+  public void setStyleMap(Map<String, String> mapping)\n   {\n     _styleMap = mapping;\n   }\n@@ -289,7 +304,8 @@ public void setStyleMap(Map mapping)\n   /**\n    * Store a Map that maps a skin's resource keys from one key to another.\n    */\n-  public void setSkinResourceKeyMap(Map mapping)\n+  @Override\n+  public void setSkinResourceKeyMap(Map<String, String> mapping)\n   {\n     _skinResourceKeyMap = mapping;\n   }\n@@ -298,18 +314,19 @@ public void setSkinResourceKeyMap(Map mapping)\n   /**\n    * Get the _skinResourceKeyMap Map.\n    */\n-  public Map getSkinResourceKeyMap()\n+  @Override\n+  public Map<String, String> getSkinResourceKeyMap()\n   {\n     return _skinResourceKeyMap;\n   }\n \n   protected String getSkinResourceMappedKey(String key)\n   {\n-    Map keyMap = getSkinResourceKeyMap();\n+    Map<String, String> keyMap = getSkinResourceKeyMap();\n \n     if (keyMap != null)\n     {\n-      String mappedKey = (String) keyMap.get(key);\n+      String mappedKey = keyMap.get(key);\n       // if it isn't in the map, just use the key itself.\n       if (mappedKey != null)\n       {\n@@ -415,11 +432,14 @@ private void _initializePPR(\n    * Get the directory for temporary files.\n    * @todo: move into the util package?\n    */\n+  @SuppressWarnings(\"unchecked\")\n   static public String getTemporaryDirectory(FacesContext fContext)\n   {\n     String path = null;\n \n-    Map applicationMap = fContext.getExternalContext().getApplicationMap();\n+    Map<String, Object> applicationMap = \n+      fContext.getExternalContext().getApplicationMap();\n+    \n     if (applicationMap != null)\n     {\n       // In general, write to the Servlet spec'd temporary directory\n@@ -482,23 +502,32 @@ private void _initializeLocaleContext(\n   }\n \n \n-  private Skin               _skin;\n-  private FormData           _formData;\n-  private TrinidadAgent      _agent;\n-  private Map                _styleMap;\n-  private Map                _skinResourceKeyMap;\n-  private String             _outputMode;\n-  private Object             _accessibilityMode;\n-  private PartialPageContext _pprContext;\n-  private LocaleContext      _localeContext;\n-  private StyleContext       _styleContext;\n-  private Map                _properties = new HashMap();\n-  private int                _linkStyleDisabledCount = 0;\n-  private boolean            _isLinkDisabled = false;\n+  private Skin                _skin;\n+  private FormData            _formData;\n+  private TrinidadAgent       _agent;\n+  private Map<String, String> _styleMap;\n+  private Map<String, String> _skinResourceKeyMap;\n+  private String              _outputMode;\n+  private Object              _accessibilityMode;\n+  private PartialPageContext  _pprContext;\n+  private LocaleContext       _localeContext;\n+  private StyleContext        _styleContext;\n+  private Map<Object, Object> _properties;\n+  private int                 _linkStyleDisabledCount = 0;\n+  private boolean             _isLinkDisabled = false;\n \n   // Maps describing the capabilities of our output modes\n-  static private final Map _PRINTABLE_CAPABILITIES = new HashMap();\n-  static private final Map _EMAIL_CAPABILITIES = new HashMap();\n+  // -= Simon Lessard =-\n+  // FIXME: Cannot use CapabilityKey in the generic definition because \n+  //        CapabilityKey is not in the public API and those map are \n+  //        used as a parameter in an API call receiving a \n+  //        Map<Object, Object> argument\n+  static private final Map<Object, Object> _PRINTABLE_CAPABILITIES = \n+    new HashMap<Object, Object>();\n+  \n+  static private final Map<Object, Object> _EMAIL_CAPABILITIES = \n+    new HashMap<Object, Object>();\n+  \n   static\n   {\n     _PRINTABLE_CAPABILITIES.put(TrinidadAgent.CAP_INTRINSIC_EVENTS,", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/CoreRenderingContext.java"}, {"additions": 9, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/CoreResponseStateManager.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/CoreResponseStateManager.java", "sha": "948f9dea315f7b5c1669537793b7a22699c0ea7d", "changes": 12, "status": "modified", "deletions": 3, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/CoreResponseStateManager.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f", "patch": "@@ -59,6 +59,7 @@\n    *       instead of buffering it.\n    * @todo Don't directly write out hidden input field;  use an abstraction\n    */\n+  @Override\n   public void writeState(\n     FacesContext context,\n     StateManager.SerializedView serializedView) throws IOException\n@@ -102,6 +103,7 @@ protected String encodeSerializedViewAsString(\n     return retVal;\n   }\n \n+  @Override\n   public Object getTreeStructureToRestore(FacesContext context,\n                                           String viewId)\n   {\n@@ -112,6 +114,7 @@ public Object getTreeStructureToRestore(FacesContext context,\n     return view[0];\n   }\n \n+  @Override\n   public Object getComponentStateToRestore(FacesContext context)\n   {\n     Object[] view = _restoreSerializedView(context);\n@@ -127,17 +130,20 @@ public Object getComponentStateToRestore(FacesContext context)\n    * @todo ensure that the caching never gets confused by two\n    *       different views being reconstituted in the same request?\n    */\n+  @SuppressWarnings(\"unchecked\")\n   private Object[] _restoreSerializedView(\n      FacesContext context)\n   {\n-    Map requestMap = context.getExternalContext().getRequestMap();\n+    Map<String, Object> requestMap = \n+      context.getExternalContext().getRequestMap();\n+    \n     Object[] view = (Object[]) requestMap.get(_CACHED_SERIALIZED_VIEW);\n     if (view == null)\n     {\n-      Map requestParamMap =\n+      Map<String, String> requestParamMap =\n          context.getExternalContext().getRequestParameterMap();\n \n-      String stateString = (String) requestParamMap.get(_STATE_FIELD_NAME);\n+      String stateString = requestParamMap.get(_STATE_FIELD_NAME);\n       if (stateString == null)\n         return null;\n ", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/CoreResponseStateManager.java"}, {"additions": 14, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/DialogRequest.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/DialogRequest.java", "sha": "c13d641347109af82cdffa5a375f18104be8f323", "changes": 26, "status": "modified", "deletions": 12, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/DialogRequest.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f", "patch": "@@ -34,15 +34,16 @@\n  */\n class DialogRequest\n {\n+  @SuppressWarnings(\"unchecked\")\n   public DialogRequest(\n-    UIViewRoot targetRoot,\n-    String     clientId,\n-    String     formId,\n-    Map        dialogProperties\n+    UIViewRoot         targetRoot,\n+    String             clientId,\n+    String             formId,\n+    Map<String,Object> dialogProperties\n     )\n   {\n-    _clientId          = clientId;\n-    _formId             = formId;\n+    _clientId = clientId;\n+    _formId   = formId;\n \n     if (dialogProperties == null)\n       dialogProperties = Collections.EMPTY_MAP;\n@@ -54,6 +55,7 @@ public DialogRequest(\n                                   targetRoot,\n                                   CoreRenderer.toString(width),\n                                   CoreRenderer.toString(height));\n+    \n     _dialogProperties  = dialogProperties;\n   }\n \n@@ -99,10 +101,10 @@ public void renderLaunchJavascript(\n       out.writeText(_DEFAULT_HEIGHT, null);\n     }\n \n-    Iterator propertiesIter = _dialogProperties.keySet().iterator();\n+    Iterator<String> propertiesIter = _dialogProperties.keySet().iterator();\n     while (propertiesIter.hasNext())\n     {\n-      Object key = propertiesIter.next();\n+      String key = propertiesIter.next();\n       Object value = _dialogProperties.get(key);\n       // =-=AEW When to put in quotes????\n       if (value != null)\n@@ -143,10 +145,10 @@ static private synchronized String _getDialogWindowName()\n     return \"ADFDialog\" + _sCount++;\n   }\n \n-  private final String     _clientId;\n-  private final String     _formId;\n-  private final String     _url;\n-  private final Map        _dialogProperties;\n+  private final String             _clientId;\n+  private final String             _formId;\n+  private final String             _url;\n+  private final Map<String,Object> _dialogProperties;\n \n \n   // Some default widths and heights to avoid popping up huge", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/DialogRequest.java"}, {"additions": 1, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/desktop/DesktopRenderKit.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/desktop/DesktopRenderKit.java", "sha": "9336b15177a770856af76add7eaf0f7e169223d3", "changes": 2, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/desktop/DesktopRenderKit.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f", "patch": "@@ -30,9 +30,9 @@ public DesktopRenderKit()\n                 new TrainRenderer());\n   }\n \n+  @Override\n   protected String getDecoratedRenderKitId()\n   {\n     return CoreRenderKit.BASE_RENDER_KIT_ID;\n   }\n-\n }", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/desktop/DesktopRenderKit.java"}, {"additions": 22, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/desktop/DesktopTableRenderer.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/desktop/DesktopTableRenderer.java", "sha": "833e71d31e1e38b92e86d262d1c0352c104dbd95", "changes": 28, "status": "modified", "deletions": 6, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/desktop/DesktopTableRenderer.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f", "patch": "@@ -64,6 +64,7 @@ protected DesktopTableRenderer(FacesBean.Type type)\n     super(type);\n   }\n   \n+  @Override\n   protected void findTypeConstants(FacesBean.Type type)\n   {\n     super.findTypeConstants(type);\n@@ -81,6 +82,7 @@ public DesktopTableRenderer()\n     this(CoreTable.TYPE);\n   }\n \n+  @Override\n   protected final void renderSingleRow(\n     FacesContext context,\n     RenderingContext arc,\n@@ -226,6 +228,7 @@ protected final void renderControlBarLink(\n       writer.writeText(LINKS_DIVIDER_TEXT, null);\n   }\n \n+  @Override\n   protected void renderSubControlBar(\n     FacesContext context,\n     RenderingContext arc,\n@@ -241,6 +244,7 @@ protected void renderSubControlBar(\n     renderSelectionLinks(context, arc, tContext, component);\n   }\n \n+  @Override\n   protected void renderTableContent(\n     FacesContext context,\n     RenderingContext arc,\n@@ -504,6 +508,7 @@ private void _writeIEscrollScript(\n \n \n   // render the control bar\n+  @Override\n   protected final void renderControlBar(\n     FacesContext          context,\n     RenderingContext   arc,\n@@ -626,6 +631,7 @@ protected void renderTableRows(\n    * renders attributes on the outermost table element.\n    * this includes width, cellpadding, cellspacing, border.\n    */\n+  @Override\n   protected void renderTableAttributes(\n     FacesContext        context,\n     RenderingContext arc,\n@@ -815,6 +821,7 @@ private void _renderTableRows(\n     final UIComponent detail = tContext.getDetail();\n     final RenderStage renderStage = tContext.getRenderStage();\n     TableUtils.RowLoop loop = new TableUtils.RowLoop() {\n+      @Override\n       protected void processRowImpl(FacesContext fc, CollectionComponent tableBase)\n         throws IOException\n       {\n@@ -939,6 +946,7 @@ protected final void renderRegularHeaders(\n     }\n   }\n \n+  @SuppressWarnings(\"unchecked\")\n   private void _renderRegularColumns(\n     FacesContext          context,\n     TableRenderingContext tContext,\n@@ -948,7 +956,7 @@ private void _renderRegularColumns(\n     // this renders a whole bunch of <TH>...</TH> elements.\n     // part of #1313720, base column header count on\n     // table child count\n-    List children = component.getChildren();\n+    List<UIComponent> children = component.getChildren();\n     int colCount  = children.size();\n     int[] hidden = tContext.getHiddenColumns();\n     ColumnData colData = tContext.getColumnData();\n@@ -975,6 +983,7 @@ private void _renderRegularColumns(\n   /**\n    * @todo Re-fix bug 3211593 (see below)\n    */\n+  @SuppressWarnings(\"unchecked\")\n   protected final void renderFooter(\n     FacesContext          context,\n     RenderingContext   arc,\n@@ -1017,14 +1026,12 @@ protected final void renderFooter(\n         colData.setColumnIndex(tContext.getSpecialColumnCount(),\n                                0/*logicalColumnIndex*/);\n \n-        List children = component.getChildren();\n-        int count = children.size();\n-\n-        for (int i = 0; i < count; i++)\n+        for(UIComponent child : (List<UIComponent>)component.getChildren())\n         {\n-          UIComponent child = (UIComponent) children.get(i);\n           if (child.isRendered())\n+          {\n             encodeChild(context, child);\n+          }\n         }\n       }\n       writer.endElement(XhtmlConstants.TABLE_ROW_ELEMENT);\n@@ -1058,52 +1065,61 @@ public AllDetail(boolean disclosed)\n       _disclosed = disclosed;\n     }\n \n+    @Override\n     protected void renderAllAttributes(\n        FacesContext        context,\n        RenderingContext arc,\n        FacesBean           bean)\n     {\n     }\n \n+    @Override\n     protected boolean isTableAllDisclosure()\n     {\n       return true;\n     }\n \n+    @Override\n     protected boolean renderAsInline()\n     {\n       return true;\n     }\n \n+    @Override\n     protected String getValueParameter(UIComponent component)\n     {\n       return \"all\";\n     }\n \n \n+    @Override\n     protected boolean getDisclosed(FacesBean bean)\n     {\n       return _disclosed;\n     }\n \n+    @Override\n     protected String getDisclosedText(FacesBean bean)\n     {\n       RenderingContext arc = RenderingContext.getCurrentInstance();\n       return arc.getTranslatedString(_HIDE_ALL_DETAILS_TEXT_KEY);\n     }\n \n+    @Override\n     protected String getUndisclosedText(FacesBean bean)\n     {\n       RenderingContext arc = RenderingContext.getCurrentInstance();\n       return arc.getTranslatedString(_SHOW_ALL_DETAILS_TEXT_KEY);\n     }\n \n+    @Override\n     protected String getLinkId(String rootId, boolean disclosed)\n     {\n       String suffix = (disclosed ? \"ha\" : \"sa\");\n       return XhtmlUtils.getCompositeId(rootId, suffix);\n     }\n \n+    @Override\n     protected String getClientId(FacesContext context, UIComponent component)\n     {\n       TableRenderingContext tContext = TableRenderingContext.getCurrentInstance();", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/desktop/DesktopTableRenderer.java"}, {"additions": 10, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/desktop/TrainRenderer.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/desktop/TrainRenderer.java", "sha": "60b1c13b487ba436f60460e97f280d377b6c2c61", "changes": 13, "status": "modified", "deletions": 3, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/desktop/TrainRenderer.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f", "patch": "@@ -58,9 +58,12 @@ public TrainRenderer()\n   \n   /**\n    */\n+  @SuppressWarnings(\"unchecked\")\n+  @Override\n   public void decode(FacesContext context, UIComponent component)\n   {\n-    Map requestMap = context.getExternalContext().getRequestParameterMap();\n+    Map<String, String> requestMap = \n+      context.getExternalContext().getRequestParameterMap();\n \n     Object event = requestMap.get(XhtmlConstants.EVENT_PARAM);\n \n@@ -135,11 +138,13 @@ public void decode(FacesContext context, UIComponent component)\n   /**\n    * @return\n    */\n+  @Override\n   public boolean getRendersChildren()\n   {\n     return true;\n   }\n \n+  @Override\n   protected void encodeAll(\n     FacesContext context, \n     RenderingContext arc, \n@@ -190,6 +195,7 @@ protected void encodeAll(\n    * This is how we can render both the user defined styleClass and our\n    * component style class\n    */\n+  @Override\n   protected void renderStyleAttributes(\n     FacesContext context, \n     RenderingContext arc, \n@@ -536,7 +542,7 @@ private void _renderLink(\n \n     renderStyleClass(context, arc, styleClass);\n \n-    Map originalResourceKeyMap = arc.getSkinResourceKeyMap();\n+    Map<String, String> originalResourceKeyMap = arc.getSkinResourceKeyMap();\n     try\n     {\n       arc.setSkinResourceKeyMap(_RESOURCE_KEY_MAP);\n@@ -799,7 +805,8 @@ public TrainState()\n \n   // for now keep the OraLink/OraDisabledLink styles on the 'a', and\n   // append train link style class.\n-  private static final Map _RESOURCE_KEY_MAP = new HashMap();\n+  private static final Map<String, String> _RESOURCE_KEY_MAP = \n+    new HashMap<String, String>();\n   private static final String _TRAIN_DISABLED_LINK = \n     XhtmlConstants.LINK_DISABLED_STYLE_CLASS + \" \" + \n     XhtmlConstants.AF_PROCESS_TRAIN_LINK_STYLE_CLASS;", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/desktop/TrainRenderer.java"}, {"additions": 31, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/desktop/TreeTableRenderer.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/desktop/TreeTableRenderer.java", "sha": "ef0bbdfaee1c7aba06def2dab046a0a44761e9a9", "changes": 37, "status": "modified", "deletions": 6, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/desktop/TreeTableRenderer.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f", "patch": "@@ -69,6 +69,7 @@ public TreeTableRenderer()\n     super(CoreTreeTable.TYPE);\n   }\n \n+  @Override\n   protected void findTypeConstants(FacesBean.Type type)\n   {\n     super.findTypeConstants(type);\n@@ -83,13 +84,17 @@ protected void findTypeConstants(FacesBean.Type type)\n    *  DisclosureEvent\n    * @todo deal with null and exceptions\n    */\n+  @SuppressWarnings(\"unchecked\")\n+  @Override\n   public void decode(\n     FacesContext context,\n     UIComponent component)\n   {\n     decodeSelection(context, component);\n \n-    Map parameters = context.getExternalContext().getRequestParameterMap();\n+    Map<String, String> parameters = \n+      context.getExternalContext().getRequestParameterMap();\n+    \n     Object source = parameters.get(XhtmlConstants.SOURCE_PARAM);\n     if (component.getClientId(context).equals(source))\n     {\n@@ -107,6 +112,7 @@ public void decode(\n    * Creates the correct subclass of the TableRenderingContext to\n    * use for this Renderer.\n    */\n+  @Override\n   protected TableRenderingContext createRenderingContext(\n     FacesContext        context,\n     RenderingContext arc,\n@@ -121,6 +127,7 @@ protected TableRenderingContext createRenderingContext(\n    * @return true if the table was empty, and an alternative empty\n    * version was shown, false otherwise.\n    */\n+  @Override\n   protected boolean renderTableWithoutColumns(\n     FacesContext          context,\n     RenderingContext   arc,\n@@ -133,6 +140,7 @@ protected boolean renderTableWithoutColumns(\n   /**\n    * render all pieces of the table\n    */\n+  @Override\n   protected void encodeAll(\n     FacesContext        context,\n     RenderingContext arc,\n@@ -180,6 +188,7 @@ protected boolean isImmediate(UIComponent component, FacesBean bean)\n    * Render the navigation header bars, i.e. all the bars that appear above the\n    * actual data table including the breadcrumbs at the end.\n    */\n+  @Override\n   protected void renderNavigationHeaderBars(\n     FacesContext          context,\n     RenderingContext   arc,\n@@ -191,6 +200,7 @@ protected void renderNavigationHeaderBars(\n     _renderBreadCrumbs(context, arc, tContext, component, bean);\n   }\n \n+  @Override\n   protected final void renderRangePagingControl(\n     FacesContext          context,\n     RenderingContext   arc,\n@@ -213,6 +223,7 @@ protected final void renderRangePagingControl(\n     }\n   }\n \n+  @Override\n   protected boolean hasControlBarLinks(\n     FacesContext context,\n     RenderingContext arc,\n@@ -224,6 +235,7 @@ protected boolean hasControlBarLinks(\n       isExpandAllEnabled(component);\n   }\n \n+  @Override\n   protected void renderControlBarLinks(\n     FacesContext context,\n     RenderingContext arc,\n@@ -269,6 +281,7 @@ protected boolean isExpandAllEnabled(UIComponent component)\n    * used to render special column headers, like select and details.\n    * @return the next physicalColumnIndex\n    */\n+  @Override\n   protected int renderSpecialColumns(\n     FacesContext          context,\n     RenderingContext   arc,\n@@ -310,6 +323,7 @@ protected int renderSpecialColumns(\n   /**\n    * render all the table rows\n    */\n+  @Override\n   protected void renderTableRows(\n     FacesContext          context,\n     RenderingContext   arc,\n@@ -413,18 +427,20 @@ private void _renderBreadCrumbs(\n     }\n   }\n \n+  @SuppressWarnings(\"unchecked\")\n   private void _renderTableRows(\n     FacesContext          context,\n     final RenderingContext   arc,\n     final TreeTableRenderingContext ttrc) throws IOException\n   {\n     final UIXTreeTable treeTableBase = ttrc.getUIXTreeTable();\n     final ResponseWriter writer = context.getResponseWriter();\n-    final RowKeySet treeState = treeTableBase.getDisclosedRowKeys();\n+    final RowKeySet<Object> treeState = treeTableBase.getDisclosedRowKeys();\n     final int specialColCount = _getSpecialColCount(ttrc);\n \n     TableUtils.RowLoop loop = new TableUtils.RowLoop()\n     {\n+      @Override\n       protected void loop(FacesContext context, CollectionComponent treeTable)\n         throws IOException\n       {\n@@ -433,6 +449,7 @@ protected void loop(FacesContext context, CollectionComponent treeTable)\n         processRow(context, treeTable);\n       }\n \n+      @Override\n       protected void processRowImpl(FacesContext context, CollectionComponent treeTable)\n         throws IOException\n       {\n@@ -520,6 +537,7 @@ private int _getSpecialColCount(\n \n   private static final class BreadCrumbsRenderer extends org.apache.myfaces.trinidadinternal.renderkit.core.xhtml.BreadCrumbsRenderer\n   {\n+    @Override\n     protected void renderLink(\n       FacesContext context,\n       RenderingContext arc,\n@@ -547,7 +565,7 @@ protected void renderLink(\n       }\n       Object oldPath = tree.getRowKey();\n       Object focusRowKey = ttrc.getFocusRowKey();\n-      List focusPath = tree.getAllAncestorContainerRowKeys(focusRowKey);\n+      List<Object> focusPath = tree.getAllAncestorContainerRowKeys(focusRowKey);\n       Object crumbPath = (renderedCount < focusPath.size())\n         ? focusPath.get(renderedCount)\n         : focusRowKey;\n@@ -566,11 +584,13 @@ protected void renderLink(\n       out.endElement(\"a\");\n     }\n \n+    @Override\n     protected boolean hasChildren(UIComponent component)\n     {\n       return false; // do not render the columns. only the pathStamp\n     }\n \n+    @Override\n     protected boolean shouldRenderId(\n       FacesContext context,\n       UIComponent  component)\n@@ -580,6 +600,7 @@ protected boolean shouldRenderId(\n       return false;\n     }\n \n+    @Override\n     protected UIComponent getStamp(\n       FacesContext        context,\n       RenderingContext arc,\n@@ -592,10 +613,13 @@ protected UIComponent getStamp(\n     }\n   }\n \n-  protected Map createResourceKeyMap()\n+  @Override\n+  protected Map<String, String> createResourceKeyMap()\n   {\n-    Map tablemap = super.createResourceKeyMap();\n-    Map map = ResourceKeyUtils.convertResourceKeyMap(tablemap, \"table\", \"treeTable\");\n+    Map<String, String> tablemap = super.createResourceKeyMap();\n+    Map<String, String> map = \n+      ResourceKeyUtils.convertResourceKeyMap(tablemap, \"table\", \"treeTable\");\n+    \n     // we need a resource key map since we are using a navigationPath.\n     // and we are using table for the styles\n     map.put(XhtmlConstants.AF_NAVIGATION_PATH_SEPARATOR_ICON_NAME,\n@@ -610,6 +634,7 @@ protected Map createResourceKeyMap()\n             XhtmlConstants.AF_TREE_TABLE_CONTROL_BAR_TOP_STYLE);\n     map.put(XhtmlConstants.AF_TABLE_CONTROL_BAR_BOTTOM_STYLE,\n             XhtmlConstants.AF_TREE_TABLE_CONTROL_BAR_BOTTOM_STYLE);\n+    \n     return Collections.unmodifiableMap(map);\n   }\n ", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/desktop/TreeTableRenderer.java"}, {"additions": 12, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/pages/CalendarDialogJSP.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/pages/CalendarDialogJSP.java", "sha": "8e0bbfbf308085628e1a2c6a7cfd291aef22a85b", "changes": 18, "status": "modified", "deletions": 6, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/pages/CalendarDialogJSP.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f", "patch": "@@ -58,6 +58,7 @@\n   /**\n    * @todo Integrate the time zone with RequestContext (somehow)\n    */\n+  @SuppressWarnings(\"unchecked\")\n   static public void service(FacesContext context)\n     throws IOException\n   {\n@@ -181,16 +182,18 @@ static public void service(FacesContext context)\n   }\n \n \n+  @SuppressWarnings(\"unchecked\")\n   static public boolean processReturnDialog(\n     FacesContext context\n     )\n   {\n-    Map requestParameters = context.getExternalContext().\n-                               getRequestParameterMap();\n-    String event = (String) requestParameters.get(XhtmlConstants.EVENT_PARAM);\n+    Map<String, String> requestParameters = \n+      context.getExternalContext().getRequestParameterMap();\n+    \n+    String event = requestParameters.get(XhtmlConstants.EVENT_PARAM);\n     if (XhtmlConstants.DATE_EVENT.equals(event))\n     {\n-      String value = (String) requestParameters.get(XhtmlConstants.VALUE_PARAM);\n+      String value = requestParameters.get(XhtmlConstants.VALUE_PARAM);\n       Date date;\n       try\n       {\n@@ -216,13 +219,16 @@ else if (XhtmlConstants.CANCEL_EVENT.equals(event))\n   }\n \n \n+  @SuppressWarnings(\"unchecked\")\n   static String __getParam(\n     FacesContext context,\n     String name\n     )\n   {\n-    Map requestParams = context.getExternalContext().getRequestParameterMap();\n-    String value = (String) requestParams.get(name);\n+    Map<String, String> requestParams = \n+      context.getExternalContext().getRequestParameterMap();\n+    \n+    String value = requestParams.get(name);\n     if (value == null || value.equals(\"\"))\n     {\n       RequestContext afContext = RequestContext.getCurrentInstance();", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/pages/CalendarDialogJSP.java"}, {"additions": 6, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/pages/CalendarUtils.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/pages/CalendarUtils.java", "sha": "0380b8eaa6996b040de5be3719eee32465179d06", "changes": 12, "status": "modified", "deletions": 6, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/pages/CalendarUtils.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f", "patch": "@@ -36,13 +36,15 @@\n  */\n class CalendarUtils\n {\n+  @SuppressWarnings(\"unchecked\")\n   public static CoreChooseDate createChooseDate(FacesContext context)\n   {\n     final String id = CalendarDialogJSP.__getParam(context,\n                                                    XhtmlConstants.SOURCE_PARAM);\n     \n     CoreChooseDate ccd = new CoreChooseDate()\n     {\n+      @Override\n       public String getClientId(FacesContext context)\n       {\n         return id;\n@@ -68,15 +70,15 @@ public String getClientId(FacesContext context)\n     if (selectedTimeString != null)\n     {\n       ccd.getAttributes().put(\"value\",\n-                                   parseTime(selectedTimeString));\n+                              parseTime(selectedTimeString));\n     }\n \n     String displayTimeString = CalendarDialogJSP.__getParam(context,\n                                                             \"scrolledValue\");\n     if (displayTimeString != null)\n     {\n       ccd.getAttributes().put(\"scrolledValue\",\n-                                   parseTime(displayTimeString));\n+                              parseTime(displayTimeString));\n     }\n \n     return ccd;\n@@ -140,13 +142,11 @@ private static long _adjustTimeZone(long dateValueInMs)\n     // maximum date (in ChooseDateRenderer).\n     if (tzOffset < 0)\n     {\n-      tzOffset = (long)Math.max((float)tzOffset, \n-                                (float)Long.MIN_VALUE - (float)dateValueInMs);\n+      tzOffset = Math.max(tzOffset, Long.MIN_VALUE - dateValueInMs);\n     }\n     else\n     {\n-      tzOffset = (long)Math.min((float)tzOffset, \n-                                (float)Long.MAX_VALUE - (float)dateValueInMs);\n+      tzOffset = Math.min(tzOffset, Long.MAX_VALUE - dateValueInMs);\n     }\n     \n     return dateValueInMs + tzOffset;", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/pages/CalendarUtils.java"}, {"additions": 6, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/pages/ColorPickerJSP.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/pages/ColorPickerJSP.java", "sha": "85914d86ef2b94157ee94d35421e355d86dc11dc", "changes": 10, "status": "modified", "deletions": 4, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/pages/ColorPickerJSP.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f", "patch": "@@ -51,10 +51,12 @@\n  */\n class ColorPickerJSP\n {\n+  @SuppressWarnings(\"unchecked\")\n   static public void service(FacesContext context)\n     throws IOException\n   {\n-    Map requestParams = context.getExternalContext().getRequestParameterMap();\n+    Map<String, String> requestParams = \n+      context.getExternalContext().getRequestParameterMap();\n     \n     RenderingContext arc = RenderingContext.getCurrentInstance();\n     CoreDocument doc = new CoreDocument();\n@@ -81,7 +83,7 @@ static public void service(FacesContext context)\n     sic.setOnkeypress(\"if(_getKC(event)==13){selectColor();return false}\");\n     Converter converter = _getConverter(requestParams);\n     Object value = \n-      converter.getAsObject(context, sic, (String)requestParams.get(\"value\"));\n+      converter.getAsObject(context, sic, requestParams.get(\"value\"));\n     sic.setConverter(converter);\n     sic.setValue(value);\n     sic.setChooseId(\"choose\");\n@@ -134,9 +136,9 @@ static public void service(FacesContext context)\n     doc.getChildren().add(script);\n   }\n \n-  static private Converter _getConverter(Map requestParams)\n+  static private Converter _getConverter(Map<String, String> requestParams)\n   {\n-    String pattern = (String) requestParams.get(\"pattern\");\n+    String pattern = requestParams.get(\"pattern\");\n     boolean allowsTransparent =\n       \"true\".equals(requestParams.get(\"allowsTransparent\"));\n     ColorConverter converter = new ColorConverter();", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/pages/ColorPickerJSP.java"}, {"additions": 14, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/pages/FredJSP.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/pages/FredJSP.java", "sha": "aed9daf8025fc47a1c37ecdd86c67fc0704f1a3f", "changes": 27, "status": "modified", "deletions": 13, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/pages/FredJSP.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f", "patch": "@@ -26,7 +26,6 @@\n import javax.faces.component.UIViewRoot;\n import javax.faces.context.FacesContext;\n \n-import org.apache.myfaces.trinidad.context.RequestContext;\n import org.apache.myfaces.trinidad.component.core.CoreImportScript;\n import org.apache.myfaces.trinidad.component.core.output.CoreOutputText;\n import org.apache.myfaces.trinidad.component.html.HtmlHtml;\n@@ -35,7 +34,6 @@\n import org.apache.myfaces.trinidad.component.html.HtmlScript;\n \n import org.apache.myfaces.trinidadinternal.context.PageFlowScopeProviderImpl;\n-import org.apache.myfaces.trinidadinternal.renderkit.RenderUtils;\n import org.apache.myfaces.trinidadinternal.renderkit.core.CoreRenderKit;\n import org.apache.myfaces.trinidadinternal.share.url.EncoderUtils;\n \n@@ -94,6 +92,7 @@ static public String getRedirectURL(FacesContext context,\n   }\n \n \n+  @SuppressWarnings(\"unchecked\")\n   static void service(FacesContext context) throws IOException\n   {\n     RenderingContext arc = RenderingContext.getCurrentInstance();\n@@ -103,10 +102,12 @@ static void service(FacesContext context) throws IOException\n     HtmlHtml root = new HtmlHtml();\n     context.getViewRoot().getChildren().add(root);\n \n-    Map requestParameters = context.getExternalContext().getRequestParameterMap();\n+    Map<String, String> requestParameters = \n+      context.getExternalContext().getRequestParameterMap();\n+    \n     // Save the return ID - and do so before generating the\n     // link to the frames!\n-    String returnId = (String) requestParameters.get(_RETURN_ID_PARAM);\n+    String returnId = requestParameters.get(_RETURN_ID_PARAM);\n     if (returnId != null)\n       CoreRenderKit.saveDialogPostbackValues(returnId);\n \n@@ -148,13 +149,13 @@ static void service(FacesContext context) throws IOException\n        context.getExternalContext().getRequestParameterValuesMap());\n \n     // grab any sizing parameters\n-    String widthParam = (String) requestParameters.get(_MIN_WIDTH_PARAM);\n+    String widthParam = requestParameters.get(_MIN_WIDTH_PARAM);\n     boolean gotWidth = (widthParam != null);\n \n-    String heightParam = (String) requestParameters.get(_MIN_HEIGHT_PARAM);\n+    String heightParam = requestParameters.get(_MIN_HEIGHT_PARAM);\n     boolean gotHeight = (heightParam != null);\n \n-    String viewIdRedirect = (String) requestParameters.get(_VIEW_ID_REDIRECT_PARAM);\n+    String viewIdRedirect = requestParameters.get(_VIEW_ID_REDIRECT_PARAM);\n     if (viewIdRedirect != null)\n     {\n       ViewHandler vh =\n@@ -169,7 +170,7 @@ static void service(FacesContext context) throws IOException\n     }\n     else\n     {\n-      String internalRedirect = (String) requestParameters.get(\"_red\");\n+      String internalRedirect = requestParameters.get(\"_red\");\n       if (internalRedirect != null)\n       {\n         String path = GenericEntry.getGenericEntryURL(context,\n@@ -241,25 +242,25 @@ static void service(FacesContext context) throws IOException\n   }\n \n   static private String _getQueryString(\n-    Map                parameters) throws IOException\n+    Map<String, String[]> parameters) throws IOException\n   {\n     // Bug #3419817 support request dispatch for Portal\n     // build up the encoded query string from request parameters\n     // this will work for both direct requests and include/forward requests\n     StringBuffer buf = new StringBuffer();\n-    Iterator paramNames = parameters.keySet().iterator();\n+    Iterator<String> paramNames = parameters.keySet().iterator();\n     boolean isFirst = true;\n \n     // iterate through the request parameter names\n     while (paramNames.hasNext())\n     {\n-      String paramName = (String)paramNames.next();\n+      String paramName = paramNames.next();\n \n       // add the parameter to the query string unless skipped\n       if (!_SKIP_PARAMS.contains(paramName))\n       {\n         // the parameter might appear on the request more than once\n-        String[] paramValues = (String[]) parameters.get(paramName);\n+        String[] paramValues = parameters.get(paramName);\n \n         for (int i=0; i < paramValues.length; i++)\n         {\n@@ -297,7 +298,7 @@ static private String _getQueryString(\n   static private final String _FRAMESET_ONUNLOAD_TEXT =\n     \"_checkUnload(event)\";\n \n-  static private final Collection _SKIP_PARAMS =\n+  static private final Collection<String> _SKIP_PARAMS =\n     Arrays.asList(new String[]\n                   {\n                     GenericEntry.__ENTRY_KEY_PARAM,", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/pages/FredJSP.java"}, {"additions": 11, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/pages/GenericEntry.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/pages/GenericEntry.java", "sha": "60fe880e286d82d3101663bd78ddbfa0cfdb9faa", "changes": 16, "status": "modified", "deletions": 5, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/pages/GenericEntry.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f", "patch": "@@ -75,16 +75,19 @@ public GenericEntry()\n   {\n   }\n \n+  @Override\n   public UIViewRoot createView(FacesContext context, String viewId)\n   {\n     return null;\n   }\n \n+  @Override\n   public UIViewRoot restoreView(FacesContext context, String viewId)\n   {\n     return null;\n   }\n \n+  @Override\n   public void renderView(\n     FacesContext context,\n     UIViewRoot   viewToRender) throws IOException, FacesException\n@@ -171,6 +174,7 @@ static public String getGenericEntryPath(FacesContext context)\n   }\n \n \n+  @SuppressWarnings(\"unchecked\")\n   static private void service(FacesContext context, String name)\n     throws IOException\n   {\n@@ -184,7 +188,7 @@ static private void service(FacesContext context, String name)\n \n     if (!_isValidEntry(name))\n     {\n-      response.sendError(response.SC_BAD_REQUEST);\n+      response.sendError(HttpServletResponse.SC_BAD_REQUEST);\n       return;\n     }\n \n@@ -207,8 +211,10 @@ static private void service(FacesContext context, String name)\n       encoding);\n     context.setResponseWriter(responseWriter);\n \n-    Map requestParams = context.getExternalContext().getRequestParameterMap();\n-    String localeName = (String) requestParams.get(\"loc\");\n+    Map<String, String> requestParams = \n+      context.getExternalContext().getRequestParameterMap();\n+    \n+    String localeName = requestParams.get(\"loc\");\n     if (localeName != null)\n     {\n       Locale locale =\n@@ -266,11 +272,11 @@ static private boolean _isValidEntry(String name)\n   // Parameter that is used to store the key for the JSP name.\n   //\n   static final String __ENTRY_KEY_PARAM = \"_t\";\n-  static private final Set _VALID_ENTRIES;\n+  static private final Set<String> _VALID_ENTRIES;\n \n   static\n   {\n-    _VALID_ENTRIES = new HashSet();\n+    _VALID_ENTRIES = new HashSet<String>();\n     _VALID_ENTRIES.add(NEW_FRAME_REDIRECT_ENTRY);\n     _VALID_ENTRIES.add(CALENDAR_DIALOG_ENTRY);\n     _VALID_ENTRIES.add(INLINE_DATE_PICKER_ENTRY);", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/pages/GenericEntry.java"}, {"additions": 4, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/pages/InlineDatePickerJSP.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/pages/InlineDatePickerJSP.java", "sha": "a812b5f330d681809f3bd75d0b180eaa8381c05f", "changes": 6, "status": "modified", "deletions": 2, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/pages/InlineDatePickerJSP.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f", "patch": "@@ -46,14 +46,16 @@\n  */\n class InlineDatePickerJSP\n {\n+  @SuppressWarnings(\"unchecked\")\n   static public void service(FacesContext context)\n     throws IOException\n   {\n-    Map requestParams = context.getExternalContext().getRequestParameterMap();\n+    Map<String, String> requestParams = \n+      context.getExternalContext().getRequestParameterMap();\n \n     RenderingContext arc = RenderingContext.getCurrentInstance();\n     arc.getPartialPageContext().addPartialTarget(\n-              (String) requestParams.get(XhtmlConstants.SOURCE_PARAM));\n+              requestParams.get(XhtmlConstants.SOURCE_PARAM));\n \n     // Use Html and Body to avoid the cost of the stylesheet\n     HtmlHtml html = new HtmlHtml();", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/pages/InlineDatePickerJSP.java"}, {"additions": 1, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/pda/PdaRenderKit.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/pda/PdaRenderKit.java", "sha": "a098fdf264537f0fd70a20959f62168626731936", "changes": 1, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/pda/PdaRenderKit.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f", "patch": "@@ -30,6 +30,7 @@ public PdaRenderKit()\n                 new TrainRenderer());\n   }\n \n+  @Override\n   protected String getDecoratedRenderKitId()\n   {\n     return CoreRenderKit.BASE_RENDER_KIT_ID;", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/pda/PdaRenderKit.java"}, {"additions": 10, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/pda/PdaTableRenderer.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/pda/PdaTableRenderer.java", "sha": "2e9f8c636cf66fc8cb4849fa50339bb31503008a", "changes": 16, "status": "modified", "deletions": 6, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/pda/PdaTableRenderer.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f", "patch": "@@ -53,6 +53,7 @@ public PdaTableRenderer()\n     super(CoreTable.TYPE);\n   }\n   \n+  @Override\n   protected final void renderControlBar(\n     FacesContext          context,\n     RenderingContext   arc,\n@@ -102,6 +103,7 @@ protected final void renderControlBar(\n     }\n   }\n \n+  @Override\n   protected void renderSubControlBar(\n     FacesContext context,\n     RenderingContext arc,\n@@ -133,6 +135,7 @@ private void _renderEmptyCell(\n   }\n \n   // render the actual table content, with headers\n+  @Override\n   protected void renderTableContent(\n     FacesContext context,\n     final RenderingContext arc,\n@@ -235,6 +238,7 @@ protected void renderTableContent(\n     {\n       TableUtils.RowLoop loop = new TableUtils.RowLoop()\n         {\n+          @Override\n           protected void processRowImpl(FacesContext fc, CollectionComponent tableBase)\n             throws IOException\n           {\n@@ -289,7 +293,8 @@ protected void processRowImpl(FacesContext fc, CollectionComponent tableBase)\n     //context.setDataResponseWriterUsed(false);\n   }\n   \n-     private void _renderColumnFooter(\n+     @SuppressWarnings(\"unchecked\")\n+    private void _renderColumnFooter(\n        FacesContext          context,\n        RenderingContext   arc,\n        TableRenderingContext tContext,\n@@ -331,21 +336,20 @@ private void _renderColumnFooter(\n            colData.setColumnIndex(tContext.getSpecialColumnCount(),\n                                   0/*logicalColumnIndex*/);\n \n-           List children = component.getChildren();\n-           int count = children.size();\n-\n-           for (int i = 0; i < count; i++)\n+           for(UIComponent child : (List<UIComponent>)component.getChildren())\n            {\n-             UIComponent child = (UIComponent) children.get(i);\n              if (child.isRendered())\n+             {\n                encodeChild(context, child);\n+             }\n            }\n          }\n          writer.endElement(XhtmlConstants.TABLE_ROW_ELEMENT);\n        }\n      }\n \n \n+  @Override\n   protected final void renderSingleRow(\n     FacesContext          context,\n     RenderingContext   arc,", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/pda/PdaTableRenderer.java"}, {"additions": 2, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/pda/TrainRenderer.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/pda/TrainRenderer.java", "sha": "8ce59ecb0bb91a7ee38c1e159c210d9755844aba", "changes": 3, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/pda/TrainRenderer.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f", "patch": "@@ -44,6 +44,7 @@ public TrainRenderer()\n     super(CoreTrain.TYPE);\n   }\n \n+  @Override\n   protected void encodeAll(\n     FacesContext        context,\n     RenderingContext    arc,\n@@ -99,7 +100,7 @@ protected void encodeAll(\n     }\n   }\n \n-\n+  @Override\n   public boolean getRendersChildren()\n   {\n     return true;", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/pda/TrainRenderer.java"}, {"additions": 24, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/ppr/PPRResponseWriter.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/ppr/PPRResponseWriter.java", "sha": "f066a9aa73f034ace1c7aa3f76ea9e7303827831", "changes": 33, "status": "modified", "deletions": 9, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/ppr/PPRResponseWriter.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f", "patch": "@@ -37,8 +37,11 @@ public PPRResponseWriter(ResponseWriter     out,\n     super(out);\n     _pprContext = pprContext;\n     _useXMLDom = useXMLDom;\n+    _componentStack = new ArrayList<PPRTag>(50);\n+    _facesContext = FacesContext.getCurrentInstance();\n   }\n \n+  @Override\n   public ResponseWriter cloneWithWriter(Writer writer)\n   {\n     return new PPRResponseWriter(\n@@ -47,53 +50,60 @@ public ResponseWriter cloneWithWriter(Writer writer)\n       _useXMLDom);\n   }\n \n+  @Override\n   public void startDocument() throws IOException\n   {\n     if (_isInsideTarget())\n       super.startDocument();\n   }\n \n+  @Override\n   public void endDocument() throws IOException\n   {\n     if (_isInsideTarget())\n       super.endDocument();\n   }\n \n+  @Override\n   public void flush() throws IOException\n   {\n     if (_isInsideTarget())\n       super.flush();\n   }\n \n+  @Override\n   public void writeComment(Object text) throws IOException\n   {\n     if (_isInsideTarget())\n       super.writeComment(text);\n   }\n \n \n+  @Override\n   public void writeText(Object text, String property) throws IOException\n   {\n     if (_isInsideTarget())\n       super.writeText(text, property);\n   }\n \n+  @Override\n   public void writeText(\n-                        char[]      text,\n-                        int         start,\n-                        int         length) throws IOException\n+      char[]      text,\n+      int         start,\n+      int         length) throws IOException\n   {\n     if (_isInsideTarget())\n       super.writeText(text, start, length);\n   }\n \n-\n+  @Override\n   public void write(String text) throws IOException\n   {\n     if (_isInsideTarget())\n       super.write(text);\n   }\n \n+  @Override\n   public void write(\n                     char[]      text,\n                     int         start,\n@@ -103,12 +113,14 @@ public void write(\n       super.write(text, start, length);\n   }\n \n+  @Override\n   public void write(int ch) throws IOException\n   {\n     if (_isInsideTarget())\n       super.write(ch);\n   }\n \n+  @Override\n   public void startElement(String name, UIComponent component)\n      throws IOException\n   {\n@@ -137,7 +149,7 @@ public void startElement(String name, UIComponent component)\n     }\n   }\n \n-\n+  @Override\n   public void endElement(String name) throws IOException\n   {\n     if (_isInsideTarget())\n@@ -148,6 +160,7 @@ public void endElement(String name) throws IOException\n     _popPartialTarget();\n   }\n \n+  @Override\n   public void writeAttribute(String     name,\n                              Object     value,\n                              String     property) throws IOException\n@@ -165,6 +178,7 @@ public void writeAttribute(String     name,\n     }\n   }\n \n+  @Override\n   public void writeURIAttribute(\n                                 String     name,\n                                 Object     value,\n@@ -230,7 +244,7 @@ else if (\"tr\".equals(element))\n   private void _popPartialTarget() throws IOException\n   {\n     int pos = _componentStack.size() - 1;\n-    PPRTag tag = (PPRTag) _componentStack.get(pos);\n+    PPRTag tag = _componentStack.get(pos);\n     _componentStack.remove(pos);\n \n     if (tag != null)\n@@ -329,6 +343,7 @@ public AddTags(String id, String[] tags)\n       _tags = tags;\n     }\n \n+    @Override\n     public void start(PartialPageContext pprContext) throws IOException\n     {\n       super.start(pprContext);\n@@ -340,6 +355,7 @@ public void start(PartialPageContext pprContext) throws IOException\n       }\n     }\n \n+    @Override\n     public void finish(PartialPageContext pprContext) throws IOException\n     {\n       // And then end them in reverse order...\n@@ -358,10 +374,9 @@ public void finish(PartialPageContext pprContext) throws IOException\n \n   private boolean _writingForm;\n   private final boolean _useXMLDom;\n-  private final List _componentStack = new ArrayList(50);\n+  private final List<PPRTag> _componentStack;\n   private final PartialPageContext _pprContext;\n-  private final FacesContext _facesContext =\n-     FacesContext.getCurrentInstance();\n+  private final FacesContext _facesContext;\n \n   static private final String[] _ADD_TABLE_AND_TR =\n      new String[]{\"table\", \"tr\"};", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/ppr/PPRResponseWriter.java"}, {"additions": 13, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/ppr/PartialPageContext.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/ppr/PartialPageContext.java", "sha": "3eab404e4834389420f91b7de7a6f8a2e5b9e588", "changes": 26, "status": "modified", "deletions": 13, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/ppr/PartialPageContext.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f", "patch": "@@ -49,11 +49,11 @@\n {\n   PartialPageContext()\n   {\n-    _targets = new HashMap();\n-    _renderedTargets = new HashSet();\n+    _targets = new HashMap<String, Boolean>();\n+    _renderedTargets = new HashSet<String>();\n \n     // Pre-allocate the rendered stack\n-    _currentTargetStack = new Stack();\n+    _currentTargetStack = new Stack<String>();\n   }\n \n   /**\n@@ -71,7 +71,7 @@ public PartialPageContext(\n     // target list.\n     RequestContextImpl adfContext =\n       (RequestContextImpl) afContext;\n-    Iterator targetIter = adfContext.getPartialTargets();\n+    Iterator<String> targetIter = adfContext.getPartialTargets();\n     while (targetIter.hasNext())\n       _targets.put(targetIter.next(), Boolean.FALSE);\n \n@@ -85,10 +85,8 @@ public void finish()\n   {\n     if (_LOG.isWarning())\n     {\n-      Iterator entries = _targets.entrySet().iterator();\n-      while (entries.hasNext())\n+      for(Map.Entry<String, Boolean> entry : _targets.entrySet())\n       {\n-        Map.Entry entry = (Map.Entry) entries.next();\n         if (entry.getValue() == Boolean.FALSE)\n           _LOG.warning(\"PPR target {0} was not rendered.\",\n                        entry.getKey());\n@@ -100,7 +98,7 @@ public void finish()\n   /**\n    * Returns the set of partial targets for this rendering pass.\n    */\n-  public Iterator getPartialTargets()\n+  public Iterator<String> getPartialTargets()\n   {\n     return _targets.keySet().iterator();\n   }\n@@ -165,7 +163,7 @@ public void addRenderedPartialTarget(String id)\n     _renderedTargets.add(id);\n   }\n \n-  public Iterator getRenderedPartialTargets()\n+  public Iterator<String> getRenderedPartialTargets()\n   {\n     return _renderedTargets.iterator();\n   }\n@@ -237,14 +235,16 @@ private String _getCurrentPartialTarget()\n     if (_currentTargetStack.empty())\n       return null;\n \n-    return (String)_currentTargetStack.peek();\n+    return _currentTargetStack.peek();\n   }\n \n-  private Map _targets;\n-  private Set _renderedTargets;\n+  private Map<String, Boolean> _targets;\n+  private Set<String> _renderedTargets;\n \n   // The stack of partial targets that are currently being rendered\n-  private Stack    _currentTargetStack;\n+  // -= Simon Lessard =-\n+  // FIXME: java.util.Stack... enough said... ArrayList or LinkedList please\n+  private Stack<String> _currentTargetStack;\n \n   private static final TrinidadLogger _LOG = TrinidadLogger.createTrinidadLogger(PartialPageContext.class);\n }", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/ppr/PartialPageContext.java"}, {"additions": 30, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/ppr/ScriptBufferingResponseWriter.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/ppr/ScriptBufferingResponseWriter.java", "sha": "3d0eb3e8f08b251fa5e2c0a2586a3540b5cd8f27", "changes": 45, "status": "modified", "deletions": 15, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/ppr/ScriptBufferingResponseWriter.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f", "patch": "@@ -38,13 +38,16 @@\n  */\n public class ScriptBufferingResponseWriter extends ResponseWriterDecorator\n {\n+  @SuppressWarnings(\"unchecked\")\n   public ScriptBufferingResponseWriter(\n      FacesContext   context,\n      ResponseWriter output)\n   {\n     this(output, null);\n \n-    Map requestScope = context.getExternalContext().getRequestMap();\n+    Map<String, Object> requestScope = \n+      context.getExternalContext().getRequestMap();\n+    \n     // To support multiple Partial Roots, always look for past\n     // data from a rendered partial request.\n     _data = (Data) requestScope.get(_STORED_DATA_KEY);\n@@ -96,28 +99,31 @@ public String getBufferedScripts()\n    * Returns objects representing any JavaScript libraries that\n    * have been rendered during buffering.\n    */\n-  public Iterator getBufferedLibraries()\n+  public Iterator<Object> getBufferedLibraries()\n   {\n     if (_data.libraries == null)\n       return null;\n \n     return _data.libraries.iterator();\n   }\n \n+  @Override\n   public ResponseWriter cloneWithWriter(Writer writer)\n   {\n     return new ScriptBufferingResponseWriter(\n       getResponseWriter().cloneWithWriter(writer),\n       _data);\n   }\n \n+  @Override\n   public void writeComment(Object text) throws IOException\n   {\n     // Don't bother write out comments if we are buffering\n     if (!_checkBuffer())\n       super.writeComment(text);\n   }\n \n+  @Override\n   public void writeText(Object text, String property) throws IOException\n   {\n     if (_checkBuffer())\n@@ -126,6 +132,7 @@ public void writeText(Object text, String property) throws IOException\n       super.writeText(text, property);\n   }\n \n+  @Override\n   public void writeText(\n     char[]      text,\n     int         start,\n@@ -138,6 +145,7 @@ public void writeText(\n   }\n \n \n+  @Override\n   public void write(String text) throws IOException\n   {\n     if (_checkBuffer())\n@@ -146,6 +154,7 @@ public void write(String text) throws IOException\n       super.write(text);\n   }\n \n+  @Override\n   public void write(\n     char[]      text,\n     int         start,\n@@ -157,6 +166,7 @@ public void write(\n       super.write(text, start, length);\n   }\n \n+  @Override\n   public void write(int ch) throws IOException\n   {\n     if (_checkBuffer())\n@@ -165,6 +175,7 @@ public void write(int ch) throws IOException\n       super.write(ch);\n   }\n \n+  @Override\n   public void startElement(String name,\n                            UIComponent component) throws IOException\n   {\n@@ -192,6 +203,7 @@ else if (_isObject(name))\n       super.startElement(name, component);\n   }\n \n+  @Override\n   public void endElement(String name) throws IOException\n   {\n     if (_isScript(name))\n@@ -204,7 +216,7 @@ public void endElement(String name) throws IOException\n       {\n         // Add the library to the our list\n         if (_data.libraries == null)\n-          _data.libraries = new ArrayList(10);\n+          _data.libraries = new ArrayList<Object>(10);\n \n         _data.libraries.add(source);\n       }\n@@ -241,6 +253,7 @@ else if (_isObject(name))\n       super.endElement(name);\n   }\n \n+  @Override\n   public void writeAttribute(\n     String     name,\n     Object     value,\n@@ -252,6 +265,7 @@ public void writeAttribute(\n       super.writeAttribute(name, value, property);\n   }\n \n+  @Override\n   public void writeURIAttribute(\n     String     name,\n     Object     value,\n@@ -296,12 +310,12 @@ private boolean _checkBuffer() throws IOException\n     // the script start element now.\n     super.startElement(\"script\", null);\n \n-    Iterator keys = _data.attrs.keys();\n+    Iterator<String> keys = _data.attrs.keys();\n     if (keys != null)\n     {\n       while (keys.hasNext())\n       {\n-        String key = (String)keys.next();\n+        String key = keys.next();\n         super.writeAttribute(key, _data.attrs.get(key), null);\n       }\n     }\n@@ -311,7 +325,7 @@ private boolean _checkBuffer() throws IOException\n     {\n       while (keys.hasNext())\n       {\n-        String key = (String)keys.next();\n+        String key = keys.next();\n         super.writeURIAttribute(key, _data.uriAttrs.get(key), null);\n       }\n     }\n@@ -355,17 +369,18 @@ private boolean _isObject(String name)\n   {\n     public Data()\n     {\n-      attrs = new ArrayMap(3);\n-      uriAttrs = new ArrayMap(1);\n+      attrs = new ArrayMap<String, Object>(3);\n+      uriAttrs = new ArrayMap<String, Object>(1);\n+      objectSuffix = 0;\n     }\n \n-    public boolean      inScriptStart;  // Inside a script start element?\n-    public ArrayMap     attrs;          // Attrs of the script element\n-    public ArrayMap     uriAttrs;       // URI attrs of the script element\n-    public boolean      buffering;      // Are currently buffering?\n-    public StringBuffer buffer;         // The buffer\n-    public ArrayList    libraries;      // Imported JavaScript libraries\n-    public int          objectSuffix=0; // For the object element ppr bug\n+    public boolean                  inScriptStart;        // Inside a script start element?\n+    public ArrayMap<String, Object> attrs;                // Attrs of the script element\n+    public ArrayMap<String, Object> uriAttrs;             // URI attrs of the script element\n+    public boolean                  buffering;            // Are currently buffering?\n+    public StringBuffer             buffer;               // The buffer\n+    public ArrayList<Object>        libraries;            // Imported JavaScript libraries\n+    public int                      objectSuffix;         // For the object element ppr bug\n   }\n \n   // This utility method is used to strip /**/ style comments out of", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/ppr/ScriptBufferingResponseWriter.java"}, {"additions": 4, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/skin/BaseDesktopSkin.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/skin/BaseDesktopSkin.java", "sha": "88eebecd81506eb9f753b325e333fc52a118229c", "changes": 4, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/skin/BaseDesktopSkin.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f", "patch": "@@ -46,6 +46,7 @@ public BaseDesktopSkin()\n    * Returns the id for the desktop implementation of the Base\n    * Look And Feel: \"base.desktop\".\n    */\n+  @Override\n   public String getId()\n   {\n     return BaseDesktopConstants.BASE_DESKTOP_ID;\n@@ -55,6 +56,7 @@ public String getId()\n    * Returns the family for the Base\n    * Look And Feel: \"base\".\n    */\n+  @Override\n   public String getFamily()\n   {\n     return \"base\";\n@@ -64,6 +66,7 @@ public String getFamily()\n   /**\n    * Returns the renderKitId for the BaseDesktopSkin: \"org.apache.myfaces.trinidad.desktop\".\n    */\n+  @Override\n   public String getRenderKitId()\n   {\n     return ORACLE_ADF_DESKTOP;\n@@ -72,6 +75,7 @@ public String getRenderKitId()\n   /**\n    * Returns the name of the XSS style sheet for this Skin.\n    */\n+  @Override\n   public String getStyleSheetName()\n   {\n     return \"base-desktop.xss\";", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/skin/BaseDesktopSkin.java"}, {"additions": 2, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/skin/BaseSkin.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/skin/BaseSkin.java", "sha": "af362f125c4ea1d315b9eeafad32e0c266f97dec", "changes": 2, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/skin/BaseSkin.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f", "patch": "@@ -31,11 +31,13 @@ public BaseSkin()\n   /**\n    * Returns the name of the XSS style sheet for this Skin.\n    */\n+  @Override\n   public String getStyleSheetName()\n   {\n     return null;\n   }\n \n+  @Override\n   protected String getBundleName()\n   {\n     return null;", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/skin/BaseSkin.java"}, {"additions": 6, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/skin/MacOSSwitcherIcon.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/skin/MacOSSwitcherIcon.java", "sha": "1fe652404bc59574edb3a5e95e77cebb0f97ce34", "changes": 8, "status": "modified", "deletions": 2, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/skin/MacOSSwitcherIcon.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f", "patch": "@@ -52,10 +52,11 @@ public MacOSSwitcherIcon(\n   /**\n    * Override of Icon.renderIcon().\n    */\n+  @Override\n   public void renderIcon(\n     FacesContext        context,\n-    RenderingContext arc,\n-    Map              attrs\n+    RenderingContext    arc,\n+    Map<String, Object> attrs\n     ) throws IOException\n   {\n     Icon icon = _getIcon(arc);\n@@ -66,6 +67,7 @@ public void renderIcon(\n   /**\n    * Override of Icon.getImageURI().\n    */\n+  @Override\n   public Object getImageURI(\n     FacesContext        context,\n     RenderingContext arc)\n@@ -78,6 +80,7 @@ public Object getImageURI(\n   /**\n    * Override of Icon.getImageWidth().\n    */\n+  @Override\n   public Integer getImageWidth(RenderingContext arc)\n   {\n     Icon icon = _getIcon(arc);\n@@ -88,6 +91,7 @@ public Integer getImageWidth(RenderingContext arc)\n   /**\n    * Override of Icon.getImageHeight().\n    */\n+  @Override\n   public Integer getImageHeight(RenderingContext arc)\n   {\n     Icon icon = _getIcon(arc);", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/skin/MacOSSwitcherIcon.java"}, {"additions": 4, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/skin/SimpleDesktopSkin.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/skin/SimpleDesktopSkin.java", "sha": "546c9f8712712403e2a2c666396a8e76889207f8", "changes": 4, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/skin/SimpleDesktopSkin.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f", "patch": "@@ -38,6 +38,7 @@ public SimpleDesktopSkin()\n   /**\n    * Returns the name of the XSS style sheet for this Skin.\n    */\n+  @Override\n   public String getStyleSheetName()\n   {\n     return \"META-INF/adf/styles/simple-desktop.xss\";\n@@ -46,6 +47,7 @@ public String getStyleSheetName()\n   /**\n    * Returns the id of this simple desktop Skin \"simple.desktop\".\n    */\n+  @Override\n   public String getId()\n   {\n     return \"simple.desktop\";\n@@ -55,6 +57,7 @@ public String getId()\n    * Returns the family for the Simple\n    * Skin: \"simple\".\n    */\n+  @Override\n   public String getFamily()\n   {\n     return \"simple\";\n@@ -63,6 +66,7 @@ public String getFamily()\n   /**\n    * Returns the renderKitId for the SimpleDesktopSkin: \"org.apache.myfaces.trinidad.desktop\".\n    */  \n+  @Override\n   public String getRenderKitId()\n   {\n     return ORACLE_ADF_DESKTOP;", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/skin/SimpleDesktopSkin.java"}, {"additions": 4, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/skin/SimplePdaSkin.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/skin/SimplePdaSkin.java", "sha": "911df5682e62b7f3f93045e98478232fc36fae95", "changes": 6, "status": "modified", "deletions": 2, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/skin/SimplePdaSkin.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f", "patch": "@@ -28,6 +28,7 @@\n   /**\n    * Returns the name of the XSS style sheet for this Skin.\n    */\n+  @Override\n   public String getStyleSheetName()\n   {\n     return \"META-INF/adf/styles/simple-pda.xss\";\n@@ -37,6 +38,7 @@ public String getStyleSheetName()\n    * Returns the id for the PDA implementation of the Simple\n    * Skin: \"simple.pda\".\n    */\n+  @Override\n   public String getId()\n   {\n     return \"simple.pda\";\n@@ -46,6 +48,7 @@ public String getId()\n    * Returns the family for the PDA implementation of the Simple\n    * Skin: \"simple.pda\".\n    */\n+  @Override\n   public String getFamily()\n   {\n     return \"simple\";\n@@ -55,10 +58,9 @@ public String getFamily()\n    * Returns the renderKitId for the PDA implementation of the Simple\n    * Skin: \"org.apache.myfaces.trinidad.pda\".\n    */  \n+  @Override\n   public String getRenderKitId()\n   {\n     return ORACLE_ADF_PDA;\n   }\n-\n-\n }", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/skin/SimplePdaSkin.java"}, {"additions": 2, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/skin/TranslatedTextIcon.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/skin/TranslatedTextIcon.java", "sha": "e4b3a77b94815c2625f93ab116ceb7fa10f8b8ba", "changes": 5, "status": "modified", "deletions": 3, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/skin/TranslatedTextIcon.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f", "patch": "@@ -37,12 +37,11 @@ public TranslatedTextIcon(String key)\n   /**\n    * Returns the text to render.\n    */\n+  @Override\n   protected String getText(RenderingContext arc)\n   {\n-   return arc.getTranslatedString(_key);\n-\n+    return arc.getTranslatedString(_key);\n   }\n \n-\n   private String _key;\n }", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/skin/TranslatedTextIcon.java"}, {"additions": 1, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/skin/XhtmlSkin.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/skin/XhtmlSkin.java", "sha": "6e2f5d587e0b3ad61044fd0a65377b981811ac85", "changes": 1, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/skin/XhtmlSkin.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f", "patch": "@@ -44,6 +44,7 @@ public XhtmlSkin()\n   /**\n    * @todo Move the \"BLAF\" bundle to a more generic location.\n    */\n+  @Override\n   protected String getBundleName()\n   {\n     return _BUNDLE_CLASS;", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/skin/XhtmlSkin.java"}, {"additions": 4, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/AutoSubmitUtils.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/AutoSubmitUtils.java", "sha": "f6151bc23f6dbc6ed2ae9383af64064869a852ae", "changes": 7, "status": "modified", "deletions": 3, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/AutoSubmitUtils.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f", "patch": "@@ -50,17 +50,16 @@ public static void writeDependencies(\n    * Find all UIParameter children of a component, and\n    * return it as a JS string of \"name1:value1,name2:value2\".\n    */\n+  @SuppressWarnings(\"unchecked\")\n   public static String getParameters(UIComponent comp)\n   {\n     int childCount = comp.getChildCount();\n     if (childCount == 0)\n       return null;\n       \n     StringBuffer buffer = null;\n-    List children = comp.getChildren();\n-    for (int i = 0; i < childCount; i++)\n+    for(UIComponent child : (List<UIComponent>)comp.getChildren())\n     {\n-      UIComponent child = (UIComponent) children.get(i);\n       if (child instanceof UIParameter)\n       {\n         UIParameter param = (UIParameter) child;\n@@ -283,11 +282,13 @@ static public Scriptlet sharedInstance()\n       return _sInstance;\n     }\n \n+    @Override\n     public Object getScriptletKey()\n     {\n       return _AUTO_SUBMIT_SCRIPTLET;\n     }\n \n+    @Override\n     protected void outputScriptletContent(\n       FacesContext context,\n       RenderingContext arc)", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/AutoSubmitUtils.java"}, {"additions": 11, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/BodyRenderer.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/BodyRenderer.java", "sha": "3162dd419887860a504c1536838bdbbb1baaebc4", "changes": 17, "status": "modified", "deletions": 6, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/BodyRenderer.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f", "patch": "@@ -52,6 +52,7 @@ protected BodyRenderer(FacesBean.Type type)\n     super(type);\n   }\n   \n+  @Override\n   protected void findTypeConstants(FacesBean.Type type)\n   {\n     super.findTypeConstants(type);\n@@ -61,7 +62,7 @@ protected void findTypeConstants(FacesBean.Type type)\n     _onunloadKey = type.findKey(\"onunload\");\n   }\n \n-\n+  @Override\n   protected void encodeAll(\n     FacesContext        context,\n     RenderingContext arc,\n@@ -78,6 +79,7 @@ protected void encodeAll(\n     _writeVersionInformation(context, arc);\n   }\n \n+  @Override\n   protected void renderAtEnd(\n     FacesContext context,\n     RenderingContext arc) throws IOException\n@@ -87,6 +89,7 @@ protected void renderAtEnd(\n     _renderInitialFocusScript(context, arc);\n   }\n \n+  @Override\n   protected void renderPPRSupport(\n     FacesContext        context,\n     RenderingContext arc,\n@@ -105,6 +108,7 @@ protected void renderPPRSupport(\n     }\n   }\n \n+  @Override\n   protected void renderContent(\n     FacesContext        context,\n     RenderingContext arc,\n@@ -136,12 +140,13 @@ protected void renderContent(\n     }\n   }\n \n+  @Override\n   protected String getStyleClass(FacesBean bean)\n   {\n-    String styleClass = super.getStyleClass(bean);\n-    return styleClass;\n+    return super.getStyleClass(bean);\n   }\n \n+  @Override\n   protected void renderEventHandlers(\n     FacesContext context,\n     FacesBean    bean) throws IOException\n@@ -399,11 +404,11 @@ static private void _writeVersionInformation(\n   {\n     String comment = _VERSION_COMMENT;\n \n-    Class implClass = BodyRenderer.class;\n+    Class<BodyRenderer> implClass = BodyRenderer.class;\n     Package implPkg = implClass.getPackage();\n \n-    Class apiClass  =  FacesBean.class;\n-    Package apiPkg  =  apiClass.getPackage();\n+    Class<FacesBean> apiClass  =  FacesBean.class;\n+    Package apiPkg = apiClass.getPackage();\n \n     String versionInfo = _getVersionInfo(apiPkg, implPkg);\n ", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/BodyRenderer.java"}, {"additions": 14, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/BreadCrumbsRenderer.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/BreadCrumbsRenderer.java", "sha": "7584d11ff9d3c257e07d19a2c4a304e930e8891e", "changes": 20, "status": "modified", "deletions": 6, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/BreadCrumbsRenderer.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f", "patch": "@@ -45,18 +45,20 @@ public BreadCrumbsRenderer()\n     super(CoreBreadCrumbs.TYPE);\n   }\n   \n+  @Override\n   protected void findTypeConstants(FacesBean.Type type)\n   {\n     super.findTypeConstants(type);\n     _orientationKey = type.findKey(\"orientation\");\n   }\n \n-\n+  @Override\n   public boolean getRendersChildren()\n   {\n     return true;\n   }\n   \n+  @Override\n   protected void encodeAll(\n     FacesContext        context,\n     RenderingContext arc,\n@@ -96,6 +98,7 @@ protected UIComponent getStamp(\n     return stamp;\n   }\n \n+  @SuppressWarnings(\"unchecked\")\n   protected void renderContent(\n     FacesContext        context,\n     RenderingContext arc,\n@@ -123,7 +126,9 @@ protected void renderContent(\n       if (focusPath == null)\n         return;\n       \n-      List paths = new ArrayList(component.getAllAncestorContainerRowKeys(focusPath));\n+      List<Object> paths = \n+        new ArrayList<Object>(component.getAllAncestorContainerRowKeys(focusPath));\n+      \n       paths.add(focusPath);\n       int size = paths.size();        \n \n@@ -153,11 +158,11 @@ protected void renderContent(\n     // now render children\n     if (hasChildren(component))\n     {\n-      List children = component.getChildren();\n+      List<UIComponent> children = component.getChildren();\n       nextVisChildIndex = getNextRenderedChildIndex(children, -1);\n       while (nextVisChildIndex != NO_CHILD_INDEX)\n       {\n-        UIComponent child = (UIComponent)children.get(nextVisChildIndex);        \n+        UIComponent child = children.get(nextVisChildIndex);        \n         nextVisChildIndex = getNextRenderedChildIndex(children, \n                                                       nextVisChildIndex);\n         isLastChild = (nextVisChildIndex == NO_CHILD_INDEX);           \n@@ -249,7 +254,7 @@ protected void renderLink(\n       isBidi = Bidi.requiresBidi(firstChar, 0, 1);\n     }\n     \n-    Map originalResourceKeyMap = arc.getSkinResourceKeyMap();\n+    Map<String, String> originalResourceKeyMap = arc.getSkinResourceKeyMap();\n     try\n     {\n       arc.setSkinResourceKeyMap(_RESOURCE_KEY_MAP);\n@@ -287,6 +292,7 @@ protected boolean shouldRenderLastChild(\n    * renderStyleAttributes - use the NavigationPath style class as the default\n    * styleClass\n    */\n+  @Override\n   protected void renderStyleAttributes(\n     FacesContext        context,\n     RenderingContext arc,\n@@ -401,9 +407,11 @@ private boolean _isVertical(FacesBean bean)\n   private static final int _INDENT_SPACES = 10;  \n   \n   \n-  private static final Map _RESOURCE_KEY_MAP  =  new HashMap();\n+  private static final Map<String, String> _RESOURCE_KEY_MAP;\n   static\n   {\n+    _RESOURCE_KEY_MAP  =  new HashMap<String, String>();\n+    \n     _RESOURCE_KEY_MAP.put(\n       XhtmlConstants.LINK_STYLE_CLASS,\n       XhtmlConstants.AF_NAVIGATION_PATH_STEP_STYLE_CLASS);", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/BreadCrumbsRenderer.java"}, {"additions": 19, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/ChooseDateRenderer.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/ChooseDateRenderer.java", "sha": "585a502ec0e78fece90c1519246ae192edf12c8b", "changes": 29, "status": "modified", "deletions": 10, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/ChooseDateRenderer.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f", "patch": "@@ -71,6 +71,7 @@ protected ChooseDateRenderer(FacesBean.Type type)\n     super(type);\n   }\n \n+  @Override\n   protected void findTypeConstants(FacesBean.Type type)\n   {\n     super.findTypeConstants(type);\n@@ -81,18 +82,21 @@ protected void findTypeConstants(FacesBean.Type type)\n     _destinationKey = PropertyKey.createPropertyKey(\"destination\");\n   }\n \n+  @Override\n   public boolean getRendersChildren()\n   {\n     return true;\n   }\n \n+  @Override\n   protected boolean shouldRenderId(\n     FacesContext context,\n     UIComponent  component)\n   {\n     return true;\n   }\n \n+  @Override\n   protected final void encodeAll(\n     FacesContext        context,\n     RenderingContext arc,\n@@ -1113,6 +1117,7 @@ private void _renderMonthAndYear(\n   }\n \n \n+  @SuppressWarnings(\"deprecation\")\n   private static long _getTimeAttr(\n     RenderingContext arc,\n     FacesBean   bean,\n@@ -1165,13 +1170,11 @@ else if (value instanceof Calendar)\n         // maximum date.\n         if (tzOffset < 0)\n         {\n-          tzOffset = (long)Math.max((float)tzOffset,\n-                              (float)Long.MIN_VALUE - (float)dateValueInMs);\n+          tzOffset = Math.max(tzOffset, Long.MIN_VALUE - dateValueInMs);\n         }\n         else\n         {\n-          tzOffset = (long)Math.min((float)tzOffset,\n-                              (float)Long.MAX_VALUE - (float)dateValueInMs);\n+          tzOffset = Math.min(tzOffset, Long.MAX_VALUE - dateValueInMs);\n         }\n \n         // adjust the date in ms to the adjusted time zone.\n@@ -1542,19 +1545,25 @@ public CalendarStyles(\n \n   private static final int _MILLIS_IN_DAY = 1000 * 60 * 60 * 24;\n \n-  // =-= bts\n-  // default minimum date is 1AD so we don't have to deal with years in\n-  // different eras.  Hopefully this won't be a problem in other calendars\n-  // (but I think that it will)\n-  private static final long _MIN_TIME =\n-    (new Date(-1899, 1, 1, 0, 0)).getTime();\n+  private static final long _MIN_TIME;\n \n   private static final long _MAX_TIME = Long.MAX_VALUE;\n \n   //\n   // Rendering Context cache keys\n   //\n   private static final Object _DATE_SYMBOLS_KEY = new Object();\n+  \n+  static\n+  {\n+    // =-= bts\n+    // default minimum date is 1AD so we don't have to deal with years in\n+    // different eras.  Hopefully this won't be a problem in other calendars\n+    // (but I think that it will)\n+    Calendar cal = Calendar.getInstance();\n+    cal.set(1, 1, 1, 0, 0);\n+    _MIN_TIME = cal.getTimeInMillis();\n+  }\n \n   private PropertyKey _maxValueKey;\n   private PropertyKey _minValueKey;", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/ChooseDateRenderer.java"}, {"additions": 16, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/ColumnGroupRenderer.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/ColumnGroupRenderer.java", "sha": "f1638c9002b99b749a2569b672f5559fb81179b8", "changes": 27, "status": "modified", "deletions": 11, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/ColumnGroupRenderer.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f", "patch": "@@ -61,6 +61,7 @@ public ColumnGroupRenderer()\n     super(CoreColumn.TYPE);\n   }\n \n+  @Override\n   protected void findTypeConstants(FacesBean.Type type)\n   {\n     super.findTypeConstants(type);\n@@ -76,7 +77,7 @@ protected void findTypeConstants(FacesBean.Type type)\n     _defaultSortOrderKey = type.findKey(\"defaultSortOrder\");\n   }\n \n-\n+  @Override\n   public boolean getRendersChildren()\n   {\n     return true;\n@@ -180,6 +181,7 @@ protected String getHeaderStyleClass(TableRenderingContext tContext)\n   /**\n    * @todo Will need to support TREE_NODE_STAGE\n    */\n+  @Override\n   protected void encodeAll(\n     FacesContext        context,\n     RenderingContext arc,\n@@ -513,7 +515,7 @@ else if (\"descending\".equals(getDefaultSortOrder(bean)))\n     String sortJS = buffer.toString();\n     if (onclick != null)\n     {\n-      sortJS = (String) XhtmlUtils.getChainedJS(onclick, sortJS, true);\n+      sortJS = XhtmlUtils.getChainedJS(onclick, sortJS, true);\n     }\n \n     return sortJS;\n@@ -632,11 +634,11 @@ protected final int getSortability(\n     // Otherwise, look at the first sort criteria\n     // =-=AEW This seems slow...\n     UIXCollection table = (UIXCollection) tContext.getTable();\n-    List criteria = table.getSortCriteria();\n+    List<SortCriterion> criteria = table.getSortCriteria();\n     // We currently only show anything for the primary sort criterion\n     if (criteria.size() > 0)\n     {\n-      SortCriterion criterion = (SortCriterion) criteria.get(0);\n+      SortCriterion criterion = criteria.get(0);\n       if (property.equals(criterion.getProperty()))\n       {\n         return criterion.isAscending() ? SORT_ASCENDING : SORT_DESCENDING;\n@@ -717,24 +719,27 @@ private void _computeMode(\n     _setParentNode(tContext, parentNode);\n   }\n \n-\n+  @SuppressWarnings(\"unchecked\")\n   private void _renderChildren(FacesContext context,\n                                UIComponent  component,\n                                NodeData     parentNode)\n     throws IOException\n   {\n-    List children = component.getChildren();\n-    int size = children.size();\n-    for (int i = 0; i < size; i++)\n+    int i = 0;\n+    for(UIComponent child : (List<UIComponent>)component.getChildren())\n     {\n-      UIComponent child = (UIComponent) children.get(i);\n       if (child.isRendered())\n       {\n         // Tell the parent node - if there is one - which child we're rendering\n         if (parentNode != null)\n+        {\n           parentNode.currentChild = i;\n+        }\n+        \n         encodeChild(context, child);\n       }\n+      \n+      i++;\n     }\n   }\n \n@@ -790,7 +795,7 @@ private NodeList _getNodeList(TableRenderingContext tContext,\n \n   private static final class NodeList\n   {\n-    private final ArrayList _list = new ArrayList(10);\n+    private final ArrayList<NodeData> _list = new ArrayList<NodeData>(10);\n     private int _index = 0;\n \n     public NodeData currentNode = null;\n@@ -805,7 +810,7 @@ public NodeData getNext()\n       if (_index >= _list.size())\n         _index = 0;\n \n-      return (NodeData) _list.get(_index++);\n+      return _list.get(_index++);\n     }\n   }\n ", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/ColumnGroupRenderer.java"}, {"additions": 6, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/ColumnRenderer.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/ColumnRenderer.java", "sha": "840870872bbc2aff08e6e89836344bbc9276792d", "changes": 13, "status": "modified", "deletions": 7, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/ColumnRenderer.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f", "patch": "@@ -46,10 +46,10 @@ public ColumnRenderer()\n     super();\n   }\n \n-\n   /**\n    * @todo Will need to support TREE_NODE_STAGE\n    */\n+  @Override\n   protected void encodeAll(\n     FacesContext        context,\n     RenderingContext arc,\n@@ -114,9 +114,10 @@ protected void encodeAll(\n     colData.incrementColumnIndex();\n   }\n \n+  @SuppressWarnings(\"unchecked\")\n   private boolean _isColumnGroup(UIComponent column)\n   {\n-    Iterator kids = column.getChildren().iterator();\n+    Iterator<UIComponent> kids = column.getChildren().iterator();\n     // Special columns - nothing is a column group\n     if (!kids.hasNext())\n       return false;\n@@ -125,17 +126,15 @@ private boolean _isColumnGroup(UIComponent column)\n   }\n \n \n+  @SuppressWarnings(\"unchecked\")\n   protected void renderKids(FacesContext          context,\n-                            RenderingContext   arc,\n+                            RenderingContext      arc,\n                             TableRenderingContext trc,\n                             UIComponent           column) throws IOException\n   {\n-    List children = column.getChildren();\n     boolean renderedOne = false;\n-    int size = children.size();\n-    for (int i = 0; i < size; i++)\n+    for(UIComponent child : (List<UIComponent>)column.getChildren())\n     {\n-      UIComponent child = (UIComponent) children.get(i);\n       if (child.isRendered())\n       {\n         // Put each component on a separate line, separated by a div", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/ColumnRenderer.java"}, {"additions": 13, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/CommandLinkRenderer.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/CommandLinkRenderer.java", "sha": "c8da0452b9e8ec817a14396a36d8bc80f0ca6a3a", "changes": 15, "status": "modified", "deletions": 2, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/CommandLinkRenderer.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f", "patch": "@@ -38,13 +38,16 @@ public CommandLinkRenderer()\n     super(CoreCommandLink.TYPE);\n   }\n   \n+  @Override\n   protected void findTypeConstants(FacesBean.Type type)\n   {\n     super.findTypeConstants(type);\n     _immediateKey = type.findKey(\"immediate\");\n     _partialSubmitKey = type.findKey(\"partialSubmit\");\n   }\n \n+  @SuppressWarnings(\"unchecked\")\n+  @Override\n   public void decode(FacesContext context, UIComponent component)\n   {\n     RequestContext afContext = RequestContext.getCurrentInstance();\n@@ -56,7 +59,9 @@ public void decode(FacesContext context, UIComponent component)\n     }\n     else\n     {\n-      Map parameterMap = context.getExternalContext().getRequestParameterMap();\n+      Map<String, String> parameterMap = \n+        context.getExternalContext().getRequestParameterMap();\n+      \n       Object source = parameterMap.get(\"source\");\n       String clientId = component.getClientId(context);\n \n@@ -71,6 +76,7 @@ public void decode(FacesContext context, UIComponent component)\n     }\n   }\n   \n+  @Override\n   protected void encodeBegin(\n     FacesContext        context,\n     RenderingContext arc,\n@@ -99,6 +105,7 @@ protected void encodeBegin(\n     arc.setCurrentClientId(null);\n   }\n \n+  @Override\n   public void encodeEnd(\n     FacesContext        context,\n     RenderingContext arc,\n@@ -111,6 +118,7 @@ public void encodeEnd(\n       fd.addNeededValue(XhtmlConstants.SOURCE_PARAM);\n   }\n \n+  @Override\n   protected String getClientId(\n     FacesContext context,\n     UIComponent  component)\n@@ -119,23 +127,26 @@ protected String getClientId(\n     return RenderingContext.getCurrentInstance().getCurrentClientId();\n   }\n \n+  @Override\n   protected String getDestination(FacesBean bean)\n   {\n     return null;\n   }\n \n+  @Override\n   protected String getTargetFrame(FacesBean bean)\n   {\n     return null;\n   }\n \n-\n+  @Override\n   protected boolean hasOnclick(FacesBean bean)\n   {\n     // More efficient\n     return true;\n   }\n \n+  @Override\n   protected String getOnclick(FacesBean bean)\n   {\n     String onclick = super.getOnclick(bean);", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/CommandLinkRenderer.java"}, {"additions": 3, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/DesktopPanelPageHeaderRenderer.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/DesktopPanelPageHeaderRenderer.java", "sha": "b8460a6120feee91ec49991787b196462bdc7fa0", "changes": 3, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/DesktopPanelPageHeaderRenderer.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f", "patch": "@@ -47,17 +47,20 @@ public DesktopPanelPageHeaderRenderer()\n     super(CorePanelPageHeader.TYPE);\n   }\n \n+  @Override\n   protected void findTypeConstants(FacesBean.Type type)\n   {\n     super.findTypeConstants(type);\n     _chromeTypeKey = type.findKey(\"chromeType\");\n   }\n \n+  @Override\n   public boolean getRendersChildren()\n   {\n     return true;\n   }\n \n+  @Override\n   protected void encodeAll(\n     FacesContext        context,\n     RenderingContext arc,", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/DesktopPanelPageHeaderRenderer.java"}, {"additions": 4, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/DocumentRenderer.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/DocumentRenderer.java", "sha": "ee7b00ef63b62c440a8724735c6b166cb7a2ba74", "changes": 4, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/DocumentRenderer.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f", "patch": "@@ -45,6 +45,7 @@ protected DocumentRenderer(FacesBean.Type type)\n     super(type);\n   }\n   \n+  @Override\n   protected void findTypeConstants(FacesBean.Type type)\n   {\n     super.findTypeConstants(type);\n@@ -53,11 +54,13 @@ protected void findTypeConstants(FacesBean.Type type)\n     _body = new BodyRenderer(type);\n   }\n \n+  @Override\n   public boolean getRendersChildren()\n   {\n     return true;\n   }\n \n+  @Override\n   protected void encodeAll(\n     FacesContext        context,\n     RenderingContext arc,\n@@ -83,6 +86,7 @@ public Head(FacesBean.Type type)\n       super(type);\n     }\n \n+    @Override\n     protected String getClientId(\n       FacesContext context,\n       UIComponent  component)", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/DocumentRenderer.java"}, {"additions": 10, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/EditableValueRenderer.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/EditableValueRenderer.java", "sha": "e72307ff3b739d83918280e240eebeec60150a2f", "changes": 13, "status": "modified", "deletions": 3, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/EditableValueRenderer.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f", "patch": "@@ -25,6 +25,7 @@\n import javax.faces.convert.Converter;\n import javax.faces.convert.ConverterException;\n import javax.faces.el.ValueBinding;\n+import javax.faces.validator.Validator;\n \n import org.apache.myfaces.trinidad.logging.TrinidadLogger;\n \n@@ -40,6 +41,7 @@ protected EditableValueRenderer(FacesBean.Type type)\n     super(type);\n   }\n \n+  @Override\n   protected void findTypeConstants(FacesBean.Type type)\n    {\n     super.findTypeConstants(type);\n@@ -54,6 +56,7 @@ protected void findTypeConstants(FacesBean.Type type)\n   //\n   // DECODING IMPLEMENTATION\n   //\n+  @Override\n   public void decode(FacesContext context, UIComponent component)\n   {\n     if (skipDecode(context))\n@@ -91,6 +94,7 @@ public Object getSubmittedValue(\n    * @param component the component\n    * @param newValue the unconverted string value\n    */\n+  @Override\n   public Object getConvertedValue(\n     FacesContext context,\n     UIComponent  component,\n@@ -128,6 +132,7 @@ protected boolean wasSubmitted(\n   /**\n    * All editable components need IDs.\n    */\n+  @Override\n   protected boolean shouldRenderId(\n     FacesContext context,\n     UIComponent  component)\n@@ -138,6 +143,7 @@ protected boolean shouldRenderId(\n   /**\n    * Override to include \"submitted value\".\n    */\n+  @Override\n   protected String getConvertedString(\n     FacesContext context,\n     UIComponent  component,\n@@ -180,7 +186,7 @@ protected void addOnSubmitConverterValidators(\n       if ( converter == null)\n         converter = getDefaultConverter(context, bean);\n \n-      Iterator validators = getValidators(bean);\n+      Iterator<Validator> validators = getValidators(bean);\n \n       if (requiredField ||\n           (converter != null) ||\n@@ -265,9 +271,10 @@ protected boolean isImmediate(FacesBean bean)\n     return Boolean.TRUE.equals(o);\n   }\n \n-  protected Iterator getValidators(FacesBean bean)\n+  @SuppressWarnings(\"unchecked\")\n+  protected Iterator<Validator> getValidators(FacesBean bean)\n   {\n-    return bean.entries(_validatorsKey);\n+    return (Iterator<Validator>)bean.entries(_validatorsKey);\n   }\n \n   private PropertyKey _submittedValueKey;", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/EditableValueRenderer.java"}, {"additions": 68, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/FormData.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/FormData.java", "sha": "cdb23ef65316d878445296c1072a50318c68d2b7", "changes": 137, "status": "modified", "deletions": 69, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/FormData.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f", "patch": "@@ -99,34 +99,34 @@ public void addLabel(\n     if (targetId == null || label == null)\n       return;\n \n-    Map labelMap = getLabelMap(true);\n+    Map<String, String> labelMap = getLabelMap(true);\n \n     labelMap.put(targetId, label);\n   }\n \n \n \n-  public Map getLabelMap(\n+  public Map<String, String> getLabelMap(\n     boolean  createIfNecessary\n     )\n   {\n     if ((_labelMap == null) && createIfNecessary)\n     {\n-      _labelMap = new HashMap(31);\n+      _labelMap = new HashMap<String, String>(31);\n     }\n \n     return _labelMap;\n   }\n \n \n \n-  public Map getPatternMap(\n+  public Map<String, String> getPatternMap(\n     boolean createIfNecessary\n     )\n   {\n     if ((_patternMap == null) && createIfNecessary)\n     {\n-      _patternMap = new HashMap();\n+      _patternMap = new HashMap<String, String>();\n     }\n \n     return _patternMap;\n@@ -141,7 +141,7 @@ public void addPattern(\n     if (targetId == null || pattern == null)\n       return;\n \n-    Map patternMap = getPatternMap(true);\n+    Map<String, String> patternMap = getPatternMap(true);\n \n     patternMap.put(targetId, pattern);\n   }\n@@ -162,14 +162,14 @@ public void addNeededValue(String name)\n       return;\n     }\n \n-    List neededValues = getNeededValues(true);\n+    List<String> neededValues = getNeededValues(true);\n     neededValues.add(name);\n   }\n \n \n   public void addRenderedValue(String name)\n   {\n-    Set renderedSet = getRenderedValues(true);\n+    Set<String> renderedSet = getRenderedValues(true);\n     renderedSet.add(name);\n   }\n \n@@ -192,106 +192,106 @@ public void addResetCall(\n \n     if (call != null)\n     {\n-      List resetCalls = getResetCalls(true);\n+      List<String> resetCalls = getResetCalls(true);\n \n       // add the call\n       resetCalls.add(call);\n     }\n   }\n \n \n-  public List getResetCalls(\n+  public List<String> getResetCalls(\n     boolean          createIfNecessary\n     )\n   {\n \n     if (_resetCallsList == null && createIfNecessary)\n     {\n-      _resetCallsList = new ArrayList();\n+      _resetCallsList = new ArrayList<String>();\n     }\n \n     return _resetCallsList;\n   }\n \n \n-  public List getClientDependencies(\n+  public List<String> getClientDependencies(\n     boolean          createIfNecessary\n     )\n   {\n     if ((_clientDependencies == null) && createIfNecessary)\n     {\n-      _clientDependencies = new ArrayList(10);\n+      _clientDependencies = new ArrayList<String>(10);\n     }\n \n     return _clientDependencies;\n   }\n \n-  public List getNeededValues(\n+  public List<String> getNeededValues(\n     boolean createIfNecessary\n     )\n   {\n     if ((_neededValues == null) && createIfNecessary)\n     {\n-      _neededValues = new ArrayList(10);\n+      _neededValues = new ArrayList<String>(10);\n     }\n \n     return _neededValues;\n   }\n \n \n-  public Set getRenderedValues(\n+  public Set<String> getRenderedValues(\n     boolean createIfNecessary\n     )\n   {\n     if ((_renderedSet == null) && createIfNecessary)\n     {\n-      _renderedSet =  new HashSet(23);\n+      _renderedSet =  new HashSet<String>(23);\n     }\n \n     return _renderedSet;\n   }\n \n \n-  public Iterator getValidationIterator()\n+  public Iterator<String> getValidationIterator()\n   {\n-    Map validationMap = _getValidationMap(false);\n+    Map<String, Integer> validationMap = _getValidationMap(false);\n     if ( validationMap == null)\n       return null;\n \n     return validationMap.keySet().iterator();\n   }\n \n \n-  public Iterator getErrorFormatIterator()\n+  public Iterator<String> getErrorFormatIterator()\n   {\n-    Map errorFormatMap = _getErrorFormatMap(false);\n+    Map<String, Integer> errorFormatMap = _getErrorFormatMap(false);\n     if ( errorFormatMap == null)\n       return null;\n \n     return errorFormatMap.keySet().iterator();\n   }\n \n-  public List getFormValidatorsInfo(\n+  public List<ConvertValidate> getFormValidatorsInfo(\n     boolean createIfNecessary\n     )\n   {\n     // create the validators if they don't already exist\n     if ((_formValidatorsInfo == null) && createIfNecessary)\n     {\n-      _formValidatorsInfo = new ArrayList();\n+      _formValidatorsInfo = new ArrayList<ConvertValidate>();\n     }\n \n     return _formValidatorsInfo;\n   }\n \n \n-  public List getValidatedInputList(\n+  public List<String> getValidatedInputList(\n     boolean createIfNecessary\n     )\n   {\n     if ((_validatedInputList == null) && createIfNecessary)\n     {\n-      _validatedInputList = new ArrayList();\n+      _validatedInputList = new ArrayList<String>();\n     }\n \n     return _validatedInputList;\n@@ -302,13 +302,13 @@ public List getValidatedInputList(\n    * and this method should be killed.\n    */\n   public void addOnSubmitConverterValidators(\n-    UIComponent      component,\n-    Converter        converter,\n-    Iterator         validators,\n-    String           clientId,\n-    boolean          immediate,\n-    boolean          required,\n-    String           requiredMessageKey\n+    UIComponent         component,\n+    Converter           converter,\n+    Iterator<Validator> validators,\n+    String              clientId,\n+    boolean             immediate,\n+    boolean             required,\n+    String              requiredMessageKey\n     ) throws IOException\n   {\n     if (clientId == null)\n@@ -362,7 +362,7 @@ public void addOnSubmitConverterValidators(\n     {\n       while (validators.hasNext())\n       {\n-        Validator validator = (Validator) validators.next();\n+        Validator validator = validators.next();\n \n         if (validator instanceof ClientValidator)\n         {\n@@ -419,7 +419,7 @@ private void _addFormValidatorInfo(\n     if (validator != null && convertValidate != null)\n     {\n       if (convertValidate.validators == null)\n-        convertValidate.validators = new ArrayList();\n+        convertValidate.validators = new ArrayList<Integer>();\n \n       // add the validator\n       convertValidate.validators.add(_addValidation(validator));\n@@ -459,16 +459,16 @@ private void _addOnSubmitConverter(\n \n     }\n \n-    Object clientDependency = submitConverter.getClientScript(fcontext,\n-                                                                component);\n+    String clientDependency = submitConverter.getClientScript(fcontext,\n+                                                              component);\n     if (clientDependency != null)\n     {\n-      List clientDependencies = getClientDependencies(true);\n+      List<String> clientDependencies = getClientDependencies(true);\n       clientDependencies.add(clientDependency);\n     }\n \n-    String converter = (String)submitConverter.getClientConversion(fcontext,\n-                                                                   component);\n+    String converter = submitConverter.getClientConversion(fcontext,\n+                                                           component);\n \n     if (converter != null)\n     {\n@@ -505,18 +505,17 @@ private void _addOnSubmitValidator(\n     }\n     else\n     {\n-      Object clientDependency = submitValidator.getClientScript(fContext,\n-                                                                  component);\n+      String clientDependency = submitValidator.getClientScript(fContext,\n+                                                                component);\n       if (clientDependency != null)\n       {\n-        List clientDependencies = getClientDependencies(true);\n+        List<String> clientDependencies = getClientDependencies(true);\n         clientDependencies.add(clientDependency);\n       }\n     }\n \n-    String validator = (String)submitValidator.getClientValidation(\n-                                                     fContext,\n-                                                     component);\n+    String validator = submitValidator.getClientValidation(fContext,\n+                                                           component);\n \n     if (validator != null)\n     {\n@@ -535,9 +534,9 @@ private Integer _addValidation(\n     )\n   {\n     //TODO - not checking for null so map always getting created\n-    Map validationMap = _getValidationMap(true);\n+    Map<String, Integer> validationMap = _getValidationMap(true);\n \n-    Integer validationIndex = (Integer)validationMap.get(validation);\n+    Integer validationIndex = validationMap.get(validation);\n \n     if (validationIndex == null)\n     {\n@@ -559,9 +558,9 @@ private Integer _addErrorFormat(\n   {\n     if (errorFormat != null)\n     {\n-      Map errorFormatMap = _getErrorFormatMap(true);\n+      Map<String, Integer> errorFormatMap = _getErrorFormatMap(true);\n \n-      Integer errorFormatIndex = (Integer)errorFormatMap.get(errorFormat);\n+      Integer errorFormatIndex = errorFormatMap.get(errorFormat);\n \n       if (errorFormatIndex == null)\n       {\n@@ -593,7 +592,7 @@ private ConvertValidate _getNewConvertValidate(\n       convertValidateInfo.clientId = clientId;\n \n       // add to list\n-      List convertValidateList = getFormValidatorsInfo(true);\n+      List<ConvertValidate> convertValidateList = getFormValidatorsInfo(true);\n       convertValidateList.add(convertValidateInfo);\n \n       return convertValidateInfo;\n@@ -618,25 +617,25 @@ private void _addValidatedInput(\n \n \n \n-  private Map _getValidationMap(\n+  private Map<String, Integer> _getValidationMap(\n     boolean          createIfNecessary\n     )\n   {\n     if ((_validationMap == null) && createIfNecessary)\n     {\n-      _validationMap = new LinkedHashMap(31);\n+      _validationMap = new LinkedHashMap<String, Integer>(31);\n     }\n \n     return _validationMap;\n   }\n \n-  private Map _getErrorFormatMap(\n+  private Map<String, Integer> _getErrorFormatMap(\n     boolean          createIfNecessary\n     )\n   {\n     if ((_errorFormatMap == null) && createIfNecessary)\n     {\n-      _errorFormatMap = new LinkedHashMap(31);\n+      _errorFormatMap = new LinkedHashMap<String, Integer>(31);\n     }\n \n     return _errorFormatMap;\n@@ -716,51 +715,51 @@ static private void _writeDependencies(\n   // map of unique validation string to index in map\n   // used so that each converter and validator constructor\n   // is only written out once\n-  private Map _validationMap = null;\n+  private Map<String, Integer> _validationMap = null;\n \n   // map of unique error string to index in map\n   // used so that each error string is only written out once\n-  private Map _errorFormatMap = null;\n+  private Map<String, Integer> _errorFormatMap = null;\n \n   // List of ConvertValidate objects\n-  private List _formValidatorsInfo;\n+  private List<ConvertValidate> _formValidatorsInfo;\n \n   // javascript needed for client validations\n-  private List _clientDependencies;\n+  private List<String> _clientDependencies;\n \n \n   // List of id's of input controls that need to get validated\n-  private List _validatedInputList;\n+  private List<String> _validatedInputList;\n \n \n   private boolean _useCompoundNames = false;\n \n   // List of empty hidden fields that will be filled during event generation\n-  private List _neededValues;\n+  private List<String> _neededValues;\n \n \n-  private Set _renderedSet;\n+  private Set<String> _renderedSet;\n \n   // maps labels to id's\n   // need a label map because the label is not always an attribute\n   // on the component\n-  private Map _labelMap = null;\n+  private Map<String, String> _labelMap = null;\n \n   // List of reset calls\n-  private List _resetCallsList = null;\n+  private List<String> _resetCallsList = null;\n \n   // maps patterns to id's\n-  private Map _patternMap;\n+  private Map<String, String> _patternMap;\n \n   private String _formName = null;\n \n  public static final class ConvertValidate\n   {\n-    public String    clientId;\n-    public boolean   required = false;\n-    public Integer   requiredFormatIndex;\n-    public ArrayList validators;\n-    public Object    converter;\n+    public String             clientId;\n+    public boolean            required = false;\n+    public Integer            requiredFormatIndex;\n+    public ArrayList<Integer> validators;\n+    public Object             converter;\n   }\n \n ", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/FormData.java"}, {"additions": 4, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/FormElementRenderer.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/FormElementRenderer.java", "sha": "f33af80f5c7f1ab9ce79b9e9f313cc2a98b2b3ae", "changes": 4, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/FormElementRenderer.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f", "patch": "@@ -33,6 +33,7 @@ protected FormElementRenderer(FacesBean.Type type)\n     super(type);\n   }\n \n+  @Override\n   protected void findTypeConstants(FacesBean.Type type)\n   {\n     super.findTypeConstants(type);\n@@ -44,11 +45,13 @@ protected void findTypeConstants(FacesBean.Type type)\n     _contentStyleKey = type.findKey(\"contentStyle\");\n   }\n \n+  @Override\n   public boolean getRendersChildren()\n   {\n     return true;\n   }\n \n+  @Override\n   protected final void encodeAll(\n     FacesContext        context,\n     RenderingContext arc,\n@@ -140,6 +143,7 @@ protected void renderNonElementContent(\n   {\n   }\n \n+  @Override\n   protected void renderEventHandlers(\n     FacesContext context,\n     FacesBean    bean) throws IOException", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/FormElementRenderer.java"}, {"additions": 3, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/FormInputRenderer.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/FormInputRenderer.java", "sha": "eb1a4411893323ed7bf099a2ac4c295e17986861", "changes": 3, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/FormInputRenderer.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f", "patch": "@@ -33,6 +33,7 @@ protected FormInputRenderer(FacesBean.Type type)\n     super(type);\n   }\n   \n+  @Override\n   protected void findTypeConstants(FacesBean.Type type)\n   {\n     super.findTypeConstants(type);\n@@ -42,6 +43,7 @@ protected void findTypeConstants(FacesBean.Type type)\n   /**\n    * Render the client ID as both an \"id\" and a \"name\"\n    */\n+  @Override\n   protected void renderId(\n     FacesContext context,\n     UIComponent  component) throws IOException\n@@ -90,6 +92,7 @@ protected void renderDisabledAttribute(\n    * attribute values on the 'content' piece. This is usually false.\n    * @throws IOException\n    */\n+  @Override\n   protected void renderAllAttributes(\n     FacesContext        context,\n     RenderingContext arc,", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/FormInputRenderer.java"}, {"additions": 51, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/FormRenderer.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/FormRenderer.java", "sha": "b73cf2f995cd7ac8d65e7dbc3902e4265b767d89", "changes": 89, "status": "modified", "deletions": 38, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/FormRenderer.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f", "patch": "@@ -28,6 +28,7 @@\n import javax.faces.context.FacesContext;\n import javax.faces.context.ResponseWriter;\n import javax.faces.convert.Converter;\n+import javax.faces.validator.Validator;\n \n import org.apache.myfaces.trinidad.logging.TrinidadLogger;\n import org.apache.myfaces.trinidad.bean.FacesBean;\n@@ -46,8 +47,6 @@\n // TODO: Remove this class\n import org.apache.myfaces.trinidadinternal.share.data.ServletRequestParameters;\n \n-import org.apache.myfaces.trinidadinternal.util.IntegerUtils;\n-\n /**\n  * @version $Name:  $ ($Revision: adfrt/faces/adf-faces-impl/src/main/java/oracle/adfinternal/view/faces/ui/laf/base/xhtml/FormRenderer.java#0 $) $Date: 10-nov-2005.18:53:51 $\n  * @author The Oracle ADF Faces Team\n@@ -59,10 +58,14 @@ public FormRenderer()\n     super(CoreForm.TYPE);\n   }\n \n+  @SuppressWarnings(\"unchecked\")\n+  @Override\n   public void decode(FacesContext context,\n                      UIComponent component)\n   {\n-    Map paramMap = context.getExternalContext().getRequestParameterMap();\n+    Map<String, String> paramMap = \n+      context.getExternalContext().getRequestParameterMap();\n+    \n     Object formName = paramMap.get(CoreResponseStateManager.FORM_FIELD_NAME);\n     boolean submitted = false;\n \n@@ -76,11 +79,13 @@ public void decode(FacesContext context,\n       ((UIXForm) component).setSubmitted(submitted);\n   }\n \n+  @Override\n   public boolean getRendersChildren()\n   {\n     return false;\n   }\n \n+  @Override\n   protected void findTypeConstants(FacesBean.Type type)\n   {\n     super.findTypeConstants(type);\n@@ -91,7 +96,7 @@ protected void findTypeConstants(FacesBean.Type type)\n     _targetFrameKey = type.findKey(\"targetFrame\");\n   }\n \n-\n+  @Override\n   protected void encodeBegin(\n     FacesContext        context,\n     RenderingContext arc,\n@@ -193,7 +198,7 @@ protected void encodeBegin(\n     }\n   }\n \n-\n+  @Override\n   protected void encodeEnd(\n     FacesContext        context,\n     RenderingContext arc,\n@@ -307,6 +312,7 @@ protected void encodeEnd(\n   /**\n    * Returns the inline Style used to render this node.\n    */\n+  @Override\n   protected String getInlineStyle(FacesBean bean)\n   {\n     String inlineStyle = super.getInlineStyle(bean);\n@@ -320,6 +326,7 @@ protected String getInlineStyle(FacesBean bean)\n   /**\n    * Render the client ID as both an \"id\" and a \"name\"\n    */\n+  @Override\n   protected void renderId(\n     FacesContext context,\n     UIComponent  component) throws IOException\n@@ -334,6 +341,7 @@ protected void renderId(\n   /**\n    * All editable components need IDs.\n    */\n+  @Override\n   protected boolean shouldRenderId(\n     FacesContext context,\n     UIComponent  component)\n@@ -355,7 +363,7 @@ private static void _renderResetCalls(\n     // Write the array of reset calls\n     //\n     FormData fData = arc.getFormData();\n-    List resetCallList = fData.getResetCalls(false);\n+    List<String> resetCallList = fData.getResetCalls(false);\n \n     int resetCallCount = (resetCallList != null)\n                             ? resetCallList.size()\n@@ -380,7 +388,7 @@ private static void _renderResetCalls(\n \n       for (int i = 0; i < resetCallCount; i++)\n       {\n-        String currCall = (String)resetCallList.get(i);\n+        String currCall = resetCallList.get(i);\n \n         if (firstCall)\n         {\n@@ -436,7 +444,7 @@ private static void _renderValidationScripts(\n     // The dependencies may be needed - see bug\n     // 4409339 TURNING OFF CLIENT SIDE VALIDATION CAUSES\n     //                                ERRORS IN SELECTINPUTCOLOR & DATE\n-    List clientDependencies = fData.getClientDependencies( false);\n+    List<String> clientDependencies = fData.getClientDependencies( false);\n     if (clientDependencies != null)\n     {\n       for (int d = 0; d < clientDependencies.size(); d++)\n@@ -471,7 +479,7 @@ private static void _renderValidationScripts(\n     // Write the array of validation calls\n     //\n \n-    Iterator validationIterator = fData.getValidationIterator();\n+    Iterator<String> validationIterator = fData.getValidationIterator();\n \n     if (validationIterator != null)\n     {\n@@ -483,7 +491,7 @@ private static void _renderValidationScripts(\n \n       while(validationIterator.hasNext())\n       {\n-        String currValidation = (String)validationIterator.next();\n+        String currValidation = validationIterator.next();\n \n         if (firstValidation)\n         {\n@@ -514,7 +522,8 @@ private static void _renderValidationScripts(\n     writer.writeText(jsID, null);\n \n     // get the form validators\n-    List validatorInfoList = fData.getFormValidatorsInfo(false);\n+    List<FormData.ConvertValidate> validatorInfoList = \n+      fData.getFormValidatorsInfo(false);\n \n     if (validatorInfoList == null)\n     {\n@@ -540,8 +549,7 @@ private static void _renderValidationScripts(\n           writer.writeText(\"],\", null);\n         }\n \n-        FormData.ConvertValidate convertValidate =\n-          (FormData.ConvertValidate)validatorInfoList.get(j);\n+        FormData.ConvertValidate convertValidate = validatorInfoList.get(j);\n \n         writer.writeText(\"\\\"\", null);\n \n@@ -574,7 +582,7 @@ private static void _renderValidationScripts(\n \n         writer.writeText(\",[\", null);\n \n-        ArrayList validatorInfo = convertValidate.validators;\n+        ArrayList<Integer> validatorInfo = convertValidate.validators;\n \n         if (validatorInfo != null)\n         {\n@@ -615,15 +623,15 @@ private static void _renderValidationScripts(\n     //\n \n     // list of labels used for validation on this form\n-    List inputList = fData.getValidatedInputList(false);\n+    List<String> inputList = fData.getValidatedInputList(false);\n \n     int inputCount = (inputList != null)\n                          ? inputList.size()\n                          : 0;\n \n     if (inputCount > 0)\n     {\n-      Map labelMap = fData.getLabelMap(false);\n+      Map<String, String> labelMap = fData.getLabelMap(false);\n \n       if (labelMap != null)\n       {\n@@ -635,11 +643,11 @@ private static void _renderValidationScripts(\n \n         for (int i = 0; i < inputCount; i++)\n         {\n-          String currID = (String)inputList.get(i);\n+          String currID = inputList.get(i);\n \n           // remove the ID entry to prevent multiple labels from\n           // being written\n-          String currLabel = (String)labelMap.remove(currID);\n+          String currLabel = labelMap.remove(currID);\n \n           if (currLabel != null)\n           {\n@@ -671,7 +679,7 @@ private static void _renderValidationScripts(\n       // =-= jrf: optimize pattern reuse?\n       // BUG 2024773\n \n-      Map patternMap = fData.getPatternMap(false);\n+      Map<String, String> patternMap = fData.getPatternMap(false);\n \n       if (patternMap != null)\n       {\n@@ -683,11 +691,11 @@ private static void _renderValidationScripts(\n \n         for (int i = 0; i < inputCount; i++)\n         {\n-          String currID = (String)inputList.get(i);\n+          String currID = inputList.get(i);\n \n           // remove the ID entry to prevent multiple labels from\n           // being written\n-          String currPattern = (String)patternMap.remove(currID);\n+          String currPattern = patternMap.remove(currID);\n \n           if (currPattern != null)\n           {\n@@ -722,7 +730,7 @@ private static void _renderValidationScripts(\n     //\n \n     // list of error formats used for validation on this form\n-    Iterator errorFormatIterator = fData.getErrorFormatIterator();\n+    Iterator<String> errorFormatIterator = fData.getErrorFormatIterator();\n \n     if (errorFormatIterator != null)\n     {\n@@ -734,7 +742,7 @@ private static void _renderValidationScripts(\n \n       while(errorFormatIterator.hasNext())\n       {\n-        String currErrorFormat = (String)errorFormatIterator.next();\n+        String currErrorFormat = errorFormatIterator.next();\n \n         if (firstFormat)\n         {\n@@ -767,19 +775,21 @@ private static void _renderSubformLists(\n     ) throws IOException\n   {\n     ResponseWriter writer = context.getResponseWriter();\n-    List subforms =\n+    List<String> subforms =\n       SubformRenderer.getSubformList(context, false, false);\n+    \n     writer.writeText(\"var \", null);\n     writer.writeText(jsID, null);\n     writer.writeText(\"_SF={\", null);\n     if ((subforms != null) && !subforms.isEmpty())\n     {\n-      List defaultSubforms =\n+      List<String> defaultSubforms =\n         SubformRenderer.getSubformList(context, true, false);\n-      Iterator ids = subforms.iterator();\n+      \n+      Iterator<String> ids = subforms.iterator();\n       while (ids.hasNext())\n       {\n-        String id = (String) ids.next();\n+        String id = ids.next();\n         writer.writeText(\"\\\"\", null);\n         writer.writeText(id, null);\n         writer.writeText(\"\\\":\", null);\n@@ -836,13 +846,13 @@ public static void addResetCall(\n   }\n \n  public static void addOnSubmitConverterValidators(\n-    UIComponent      component,\n-    Converter        converter,\n-    Iterator         validators,\n-    String           clientId,\n-    boolean          immediate,\n-    boolean          required,\n-    String           requiredMessageKey\n+    UIComponent         component,\n+    Converter           converter,\n+    Iterator<Validator> validators,\n+    String              clientId,\n+    boolean             immediate,\n+    boolean             required,\n+    String              requiredMessageKey\n     ) throws IOException\n   {\n     FormData fData = RenderingContext.getCurrentInstance().getFormData();\n@@ -1017,6 +1027,7 @@ protected String getFullOnkeypress(\n     return onKeypress;\n   }\n \n+  @Override\n   protected String getOnkeypress(FacesBean bean)\n   {\n     // Back out the default keypress, since we need more info\n@@ -1070,7 +1081,7 @@ static private void _renderNeededValues(\n     else\n     {\n       int realNeededIndex = 0;\n-      List neededValues = fData.getNeededValues(false);\n+      List<String> neededValues = fData.getNeededValues(false);\n \n       //\n       // loop over the list of needed names, creating hidden fields\n@@ -1090,11 +1101,11 @@ static private void _renderNeededValues(\n                                 ? null\n                                 : \"a\";\n \n-        Set renderedValues = fData.getRenderedValues(true);\n+        Set<String> renderedValues = fData.getRenderedValues(true);\n \n         for (int i = 0; i < neededCount; i++)\n         {\n-          Object currName = neededValues.get(i);\n+          String currName = neededValues.get(i);\n \n           // if the needed name hasn't been rendered, add it to our\n           // list of unrendered elements\n@@ -1152,6 +1163,8 @@ static private void _renderNeededValues(\n   private PropertyKey _onsubmitKey;\n   private PropertyKey _targetFrameKey;\n \n-\n+  // -= Simon Lessard =-\n+  // FIXME: Nothing in this class is logged as of 2006-08-03\n+  @SuppressWarnings(\"unused\")\n   static private final TrinidadLogger _LOG = TrinidadLogger.createTrinidadLogger(FormRenderer.class);\n }", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/FormRenderer.java"}, {"additions": 6, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/GoLinkRenderer.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/GoLinkRenderer.java", "sha": "effabe4ea0caeb1f0b9efda8aa2d63e6f285653a", "changes": 7, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/GoLinkRenderer.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f", "patch": "@@ -41,6 +41,7 @@ protected GoLinkRenderer(FacesBean.Type type)\n     super(type);\n   }\n   \n+  @Override\n   protected void findTypeConstants(FacesBean.Type type)\n   {\n     super.findTypeConstants(type);\n@@ -53,7 +54,7 @@ protected void findTypeConstants(FacesBean.Type type)\n     _textKey = type.findKey(\"text\");\n   }\n \n-\n+  @Override\n   protected void encodeBegin(\n     FacesContext        context,\n     RenderingContext arc,\n@@ -111,6 +112,7 @@ protected void encodeBegin(\n                                        \"b\");\n   }\n \n+  @Override\n   public void encodeEnd(\n     FacesContext        context,\n     RenderingContext arc,\n@@ -124,6 +126,7 @@ public void encodeEnd(\n   /**\n    * Renders the client ID as both \"id\" and \"name\"\n    */\n+  @Override\n   protected void renderId(\n     FacesContext context,\n     UIComponent  component) throws IOException\n@@ -137,6 +140,7 @@ protected void renderId(\n     }\n   }\n \n+  @Override\n   protected void renderEventHandlers(\n     FacesContext context,\n     FacesBean    bean) throws IOException\n@@ -196,6 +200,7 @@ protected String getText(FacesBean bean)\n     return toString(bean.getProperty(_textKey));\n   }\n \n+  @Override\n   protected String getStyleClass(FacesBean bean)\n   {\n     String styleClass = super.getStyleClass(bean);", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/GoLinkRenderer.java"}, {"additions": 2, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/GroupRenderer.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/GroupRenderer.java", "sha": "f322e5993735a4a777e1afbb6663793abd5c380c", "changes": 5, "status": "modified", "deletions": 3, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/GroupRenderer.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f", "patch": "@@ -17,14 +17,11 @@\n \n import java.io.IOException;\n \n-import java.util.List;\n-\n import javax.faces.component.UIComponent;\n import javax.faces.context.FacesContext;\n import javax.faces.context.ResponseWriter;\n \n import org.apache.myfaces.trinidad.bean.FacesBean;\n-import org.apache.myfaces.trinidad.bean.PropertyKey;\n import org.apache.myfaces.trinidad.component.core.CoreGroup;\n \n import org.apache.myfaces.trinidadinternal.renderkit.RenderingContext;\n@@ -36,11 +33,13 @@ public GroupRenderer()\n     super(CoreGroup.TYPE);\n   }\n \n+  @Override\n   public boolean getRendersChildren()\n   {\n     return true;\n   }\n \n+  @Override\n   protected void encodeAll(\n     FacesContext        context,\n     RenderingContext arc,", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/GroupRenderer.java"}, {"additions": 4, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/HeadRenderer.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/HeadRenderer.java", "sha": "0665473ec713a74240b223a29feb34092dd62455", "changes": 5, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/HeadRenderer.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f", "patch": "@@ -52,12 +52,14 @@ protected HeadRenderer(FacesBean.Type type)\n     super(type);\n   }\n   \n+  @Override\n   protected void findTypeConstants(FacesBean.Type type)\n   {\n     super.findTypeConstants(type);\n     _titleKey = type.findKey(\"title\");\n   }\n \n+  @Override\n   protected void encodeBegin(\n     FacesContext        context,\n     RenderingContext arc,\n@@ -87,7 +89,7 @@ protected void encodeBegin(\n     _writeCookieScript(context, arc);\n   }\n \n-\n+  @Override\n   protected void encodeEnd(\n     FacesContext        context,\n     RenderingContext arc,\n@@ -187,6 +189,7 @@ static private boolean _supportsUIXCookie(RenderingContext arc)\n   private CoreRenderer _styleSheetRenderer = new StyleSheetRenderer()\n   {\n     // Don't render the ID\n+    @Override\n     protected void renderId(\n       FacesContext context,\n       UIComponent  component)", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/HeadRenderer.java"}, {"additions": 6, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/HtmlRenderer.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/HtmlRenderer.java", "sha": "c5f7f44b26d0463fe08c82da46c462309a7396cf", "changes": 14, "status": "modified", "deletions": 8, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/HtmlRenderer.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f", "patch": "@@ -61,6 +61,7 @@ protected HtmlRenderer(FacesBean.Type type)\n     super(type);\n   }\n \n+  @Override\n   protected void encodeBegin(\n     FacesContext        context,\n     RenderingContext arc,\n@@ -116,6 +117,7 @@ protected void encodeBegin(\n     }\n   }\n \n+  @Override\n   public void encodeEnd(\n     FacesContext        context,\n     RenderingContext arc,\n@@ -198,19 +200,15 @@ protected String getDocumentDocType(\n    * Determines whether we have a frameset component as a child\n    * for determining which doctype to return\n    */\n+  @SuppressWarnings(\"unchecked\")\n   private boolean _hasFrameSet(UIComponent component)\n   {\n-    List children = component.getChildren();\n-    int childCount = component.getChildCount();\n-    \n-    for (int i = 0; i < childCount; i++)\n+    for(UIComponent child : (List<UIComponent>)component.getChildren())\n     {\n-      UIComponent currChild = (UIComponent) children.get(i);\n-      \n-      if (HtmlFrameBorderLayout.COMPONENT_FAMILY.equals(currChild.getFamily()))\n+      if (HtmlFrameBorderLayout.COMPONENT_FAMILY.equals(child.getFamily()))\n       {\n         return true;\n-      }\n+      }     \n     }\n \n     return false;", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/HtmlRenderer.java"}, {"additions": 6, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/IconRenderer.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/IconRenderer.java", "sha": "6d4ceefe3f11d1c712fd81e5b641e59a29159806", "changes": 9, "status": "modified", "deletions": 3, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/IconRenderer.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f", "patch": "@@ -38,12 +38,14 @@ public IconRenderer()\n     super(CoreIcon.TYPE);\n   }\n \n+  @Override\n   protected void findTypeConstants(FacesBean.Type type)\n   {\n     super.findTypeConstants(type);\n     _nameKey = type.findKey(\"name\");\n   }\n \n+  @Override\n   protected void encodeBegin(\n     FacesContext        context,\n     RenderingContext arc,\n@@ -111,6 +113,7 @@ protected void encodeBegin(\n     }\n   }\n \n+  @Override\n   protected void renderShortDescAttribute(\n     FacesContext        context,\n     RenderingContext arc,\n@@ -124,14 +127,14 @@ protected String getName(FacesBean bean)\n     return toString(bean.getProperty(_nameKey));\n   }\n \n-  private Map _getNodeAttributeMap(\n+  private Map<String, Object> _getNodeAttributeMap(\n     FacesContext        context,\n     UIComponent         comp,\n     FacesBean           bean,\n     boolean             embed)\n   {\n-    Map attrs = null;\n-    attrs = new ArrayMap(1);\n+    Map<String, Object> attrs = null;\n+    attrs = new ArrayMap<String, Object>(1);\n \n     attrs.put(Icon.SHORT_DESC_KEY, getShortDesc(bean));\n ", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/IconRenderer.java"}, {"additions": 4, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/ImageRenderer.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/ImageRenderer.java", "sha": "a5f3f8c4b7ea250d0c1d178467adde678b2cd14e", "changes": 6, "status": "modified", "deletions": 2, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/ImageRenderer.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f", "patch": "@@ -35,6 +35,7 @@ public ImageRenderer()\n     super(CoreImage.TYPE);\n   }\n   \n+  @Override\n   protected void findTypeConstants(FacesBean.Type type)\n   {\n     super.findTypeConstants(type);\n@@ -43,6 +44,7 @@ protected void findTypeConstants(FacesBean.Type type)\n     _sourceKey = type.findKey(\"source\");\n   }\n \n+  @Override\n   protected void encodeBegin(\n     FacesContext        context,\n     RenderingContext arc,\n@@ -57,6 +59,7 @@ protected void encodeBegin(\n     rw.endElement(\"img\");\n   }\n \n+  @Override\n   protected void renderAllAttributes(\n     FacesContext        context,\n     RenderingContext arc,\n@@ -72,6 +75,7 @@ protected void renderAllAttributes(\n     _renderImageMap(bean, rw);\n   }\n \n+  @Override\n   protected void renderShortDescAttribute(\n     FacesContext        context,\n     RenderingContext arc,\n@@ -95,7 +99,6 @@ protected String getLongDescURL(FacesBean bean)\n     return toUri(bean.getProperty(_longDescURLKey));\n   }\n \n-\n   protected String getSource(FacesBean bean)\n   {\n     return toUri(bean.getProperty(_sourceKey));\n@@ -119,7 +122,6 @@ protected void renderId(\n     }\n   }\n \n-\n   private void _renderImageMap(\n     FacesBean           bean,\n     ResponseWriter      writer) throws IOException", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/ImageRenderer.java"}, {"additions": 3, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/InputColorRenderer.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/InputColorRenderer.java", "sha": "c74d909f077a1269ccb52ac392595f11026cf42e", "changes": 3, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/InputColorRenderer.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f", "patch": "@@ -30,16 +30,19 @@ public InputColorRenderer()\n     super(CoreInputColor.TYPE);\n   }  \n \n+  @Override\n   protected String getRootStyleClass(FacesBean bean)  \n   {\n     return \"af|inputColor\";\n   }  \n     \n+  @Override\n   protected FormInputRenderer getFormInputRenderer()\n   {\n     return _simpleInputColor;\n   }\n   \n+  @Override\n   protected String getLabelFor(\n     FacesContext        context,\n     RenderingContext arc,", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/InputColorRenderer.java"}, {"additions": 2, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/InputDateRenderer.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/InputDateRenderer.java", "sha": "20da3b831e4e813eba1c84208cc92a44266e7ef4", "changes": 2, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/InputDateRenderer.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f", "patch": "@@ -26,11 +26,13 @@ public InputDateRenderer()\n     super(CoreInputDate.TYPE);\n   }  \n   \n+  @Override\n   protected FormInputRenderer getFormInputRenderer()\n   {\n     return _simpleInputDate;\n   }\n \n+  @Override\n   protected String getRootStyleClass(FacesBean bean)  \n   {\n     return \"af|inputDate\";", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/InputDateRenderer.java"}, {"additions": 4, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/InputFileRenderer.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/InputFileRenderer.java", "sha": "1b209c3513fbcbbd7134b624264019432eeef486", "changes": 4, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/InputFileRenderer.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f", "patch": "@@ -34,6 +34,7 @@ public InputFileRenderer()\n     super(CoreInputFile.TYPE);\n   }\n   \n+  @Override\n   protected final void encodeAll(\n     FacesContext        context,\n     RenderingContext arc,\n@@ -48,11 +49,13 @@ protected final void encodeAll(\n     }\n   }\n \n+  @Override\n   protected String getRootStyleClass(FacesBean bean)  \n   {\n     return \"af|inputFile\";\n   }\n   \n+  @Override\n   protected FormInputRenderer getFormInputRenderer()\n   {\n     return _simpleInputFile;\n@@ -63,6 +66,7 @@ protected FormInputRenderer getFormInputRenderer()\n    * @param bean\n    * @return false, since inputFile does not support the readOnly attribute\n    */\n+  @Override\n   protected boolean isReadOnly(FacesBean bean)\n   {\n     return false;", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/InputFileRenderer.java"}, {"additions": 3, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/InputHiddenRenderer.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/InputHiddenRenderer.java", "sha": "83a342e68fd3c86e09c57b47140f55172abdae3c", "changes": 3, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/InputHiddenRenderer.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f", "patch": "@@ -33,18 +33,21 @@ public InputHiddenRenderer()\n     super(CoreInputHidden.TYPE);\n   }\n   \n+  @Override\n   protected boolean wasSubmitted(\n     FacesContext context,\n     UIComponent  component)\n   {\n     return true;\n   }\n \n+  @Override\n   public boolean getRendersChildren()\n   {\n     return true;\n   }\n \n+  @Override\n   protected final void encodeAll(\n     FacesContext        context,\n     RenderingContext arc,", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/InputHiddenRenderer.java"}, {"additions": 8, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/InputLabelAndMessageRenderer.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/InputLabelAndMessageRenderer.java", "sha": "52af2b2345daad566534438fd211974629843f60", "changes": 11, "status": "modified", "deletions": 3, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/InputLabelAndMessageRenderer.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f", "patch": "@@ -37,6 +37,7 @@ public InputLabelAndMessageRenderer(FacesBean.Type type)\n     super(type);\n   }\n   \n+  @Override\n   protected void findTypeConstants(FacesBean.Type type)\n   {\n     super.findTypeConstants(type);\n@@ -45,11 +46,13 @@ protected void findTypeConstants(FacesBean.Type type)\n     _readOnlyKey   = type.findKey(\"readOnly\");\n   }  \n   \n+  @Override\n   public void decode(FacesContext context, UIComponent component)\n   {\n      getFormInputRenderer().decode(context, component);\n   }\n   \n+  @Override\n   public Object getConvertedValue(\n     FacesContext context,\n     UIComponent  component,\n@@ -60,6 +63,7 @@ public Object getConvertedValue(\n                                               submittedValue);\n   }\n \n+  @Override\n   protected String getLabelFor(\n     FacesContext        context,\n     RenderingContext arc,\n@@ -74,6 +78,7 @@ protected String getLabelFor(\n   }\n \n \n+  @Override\n   protected void encodeAll(\n     FacesContext        context,\n     RenderingContext arc,\n@@ -116,13 +121,14 @@ protected void encodeAll(\n    * If it's known that the field content is not editable, return false. \n    * Otherwise, assume it is editable and return true\n    */\n+  @Override\n   protected boolean isContentEditable(FacesBean bean)\n   {\n     return !getFormInputRenderer().getReadOnly(\n                                    FacesContext.getCurrentInstance(), bean);  \n   }\n  \n-  \n+  @Override\n   protected void renderFieldCellContents(\n     FacesContext        context,\n     RenderingContext arc,\n@@ -131,8 +137,6 @@ protected void renderFieldCellContents(\n   {\n     delegateRenderer(context, arc, component, bean, getFormInputRenderer());\n   }\n-  \n-\n  \n   protected boolean getSimple(FacesBean bean)\n   {\n@@ -152,6 +156,7 @@ protected boolean getSimple(FacesBean bean)\n    * @param bean\n    * @throws IOException\n    */\n+  @Override\n   protected void renderRootDomElementStyles(\n    FacesContext        context,\n    RenderingContext arc,", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/InputLabelAndMessageRenderer.java"}, {"additions": 2, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/InputListOfValuesRenderer.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/InputListOfValuesRenderer.java", "sha": "3b7bc985a2184f11022887d9cd6bce34e84a4eeb", "changes": 2, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/InputListOfValuesRenderer.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f", "patch": "@@ -28,11 +28,13 @@ public InputListOfValuesRenderer()\n     super(CoreInputListOfValues.TYPE);\n   }  \n \n+  @Override\n   protected String getRootStyleClass(FacesBean bean)  \n   {\n     return \"af|inputListOfValues\";\n   } \n  \n+  @Override\n   protected FormInputRenderer getFormInputRenderer()\n   {\n     return _simpleInputListOfValue;", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/InputListOfValuesRenderer.java"}, {"additions": 3, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/InputTextRenderer.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/InputTextRenderer.java", "sha": "8d1ff3e9bb42b2b7435356751ab96180379daa2e", "changes": 3, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/InputTextRenderer.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f", "patch": "@@ -27,11 +27,13 @@ public InputTextRenderer()\n     super(CoreInputText.TYPE);\n   } \n \n+  @Override\n   protected String getRootStyleClass(FacesBean bean)  \n   {\n     return \"af|inputText\";\n   } \n   \n+  @Override\n   protected String getDefaultLabelValign(FacesBean bean)\n   {\n     if (_simpleInputText.isTextArea(bean))\n@@ -40,6 +42,7 @@ protected String getDefaultLabelValign(FacesBean bean)\n     return null;\n   }\n \n+  @Override\n   protected FormInputRenderer getFormInputRenderer()\n   {\n     return _simpleInputText;", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/InputTextRenderer.java"}, {"additions": 21, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/LabelAndMessageRenderer.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/LabelAndMessageRenderer.java", "sha": "ef448d728a46c7f2017132464370111f84692b01", "changes": 23, "status": "modified", "deletions": 2, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/LabelAndMessageRenderer.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f", "patch": "@@ -49,6 +49,7 @@ public LabelAndMessageRenderer(FacesBean.Type type)\n     super(type);\n   }\n \n+  @Override\n   protected void findTypeConstants(FacesBean.Type type)\n   {\n     super.findTypeConstants(type);\n@@ -63,6 +64,7 @@ protected void findTypeConstants(FacesBean.Type type)\n   }\n \n \n+  @Override\n   public boolean getRendersChildren()\n   {\n     return true;\n@@ -137,6 +139,7 @@ protected void renderRootDomElementStyles(\n     // do nothing for now\n   } \n \n+  @Override\n   protected boolean shouldRenderId(\n     FacesContext context,\n     UIComponent  component)\n@@ -158,6 +161,7 @@ private boolean _isInTable()\n \n   /**\n    */\n+  @Override\n   protected void encodeAll(\n     FacesContext        context,\n     RenderingContext arc,\n@@ -403,6 +407,7 @@ private void _renderMessageCellContents(\n   /**\n    * Returns the client ID.\n    */\n+  @Override\n   protected String getClientId(\n     FacesContext context,\n     UIComponent  component)\n@@ -489,13 +494,15 @@ public Label(FacesBean.Type type, boolean inTable)\n       _inTable = inTable;\n     }\n \n+    @Override\n     protected boolean shouldRenderId(\n       FacesContext context,\n       UIComponent  component)\n     {\n       return false;\n     }\n \n+    @Override\n     protected void renderAllAttributes(\n       FacesContext        context,\n       RenderingContext arc,\n@@ -504,13 +511,15 @@ protected void renderAllAttributes(\n       // Block everything\n     }\n \n+    @Override\n     protected String getDefaultValign(FacesBean bean)\n     {\n       // get the defaultLabelValign from the form component.\n       return getDefaultLabelValign(bean);\n     }\n \n \n+    @Override\n     protected String getConvertedString(\n       FacesContext context,\n       UIComponent  component,\n@@ -526,6 +535,7 @@ protected String getConvertedString(\n      * Only display the required icon indicator if we're required\n      * or showRequired is on.\n      */\n+    @Override\n     protected boolean getShowRequired(FacesBean bean)\n     {\n       // Inside the table, never show the required icon.\n@@ -535,6 +545,7 @@ protected boolean getShowRequired(FacesBean bean)\n       return (LabelAndMessageRenderer.this.labelShowRequired(bean));\n     }\n \n+    @Override\n     protected char getAccessKey(FacesBean bean)\n     {\n       if (LabelAndMessageRenderer.this.showAccessKeyOnLabel(bean))\n@@ -543,6 +554,7 @@ protected char getAccessKey(FacesBean bean)\n       return CHAR_UNDEFINED;\n     }\n \n+    @Override\n     protected String getShortDesc(FacesBean bean)\n     {\n       String shortDesc = super.getShortDesc(bean);\n@@ -556,6 +568,7 @@ protected String getShortDesc(FacesBean bean)\n       return shortDesc;\n     }\n \n+    @Override\n     protected String getForId(\n       FacesContext context,\n       UIComponent  component,\n@@ -567,6 +580,7 @@ protected String getForId(\n                          bean);\n     }\n \n+    @Override\n     protected boolean isLabelTagNeeded(\n       RenderingContext arc,\n       FacesBean           bean,\n@@ -590,30 +604,35 @@ public Message(FacesBean.Type type)\n       super(type);\n     }\n \n+    @Override\n     protected boolean shouldRenderId(\n       FacesContext context,\n       UIComponent  component)\n     {\n       return false;\n     }\n \n+    @Override\n     protected String getShortDesc(FacesBean bean)\n     {\n       return null;\n     }\n \n+    @Override\n     protected boolean getIndented(FacesBean bean)\n     {\n       return LabelAndMessageRenderer.this.isIndented();\n     }\n \n+    @Override\n     protected void renderAllAttributes(\n       FacesContext        context,\n       RenderingContext arc,\n       FacesBean           bean) throws IOException\n     {\n     }\n \n+    @Override\n     protected String getForId(\n       FacesContext context,\n       UIComponent  component,\n@@ -693,9 +712,9 @@ private String _getDefaultLabelStyleClass(\n     RenderingContext arc,\n     String              styleClass)  \n   {\n-    Map keyMap = arc.getSkinResourceKeyMap();\n+    Map<String, String> keyMap = arc.getSkinResourceKeyMap();\n     return (keyMap != null) ?\n-            (String) keyMap.get(styleClass) :\n+            keyMap.get(styleClass) :\n             null;\n   }\n   ", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/LabelAndMessageRenderer.java"}, {"additions": 3, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/MessageRenderer.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/MessageRenderer.java", "sha": "5de6189dde0b8ae31d50f12ec5fd3310ced1ff53", "changes": 3, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/MessageRenderer.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f", "patch": "@@ -45,6 +45,7 @@ protected MessageRenderer(FacesBean.Type type)\n     super(type);\n   }\n \n+  @Override\n   protected void findTypeConstants(FacesBean.Type type)\n   {\n     super.findTypeConstants(type);\n@@ -53,11 +54,13 @@ protected void findTypeConstants(FacesBean.Type type)\n     _messageKey     = type.findKey(\"message\");\n   }\n \n+  @Override\n   public boolean getRendersChildren()\n   {\n     return true;\n   }\n \n+  @Override\n   protected void encodeAll(\n     FacesContext        context,\n     RenderingContext arc,", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/MessageRenderer.java"}, {"additions": 20, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/NavigationPaneRenderer.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/NavigationPaneRenderer.java", "sha": "0723874223a54d51b9c42c50552100ae9fcf557d", "changes": 37, "status": "modified", "deletions": 17, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/NavigationPaneRenderer.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f", "patch": "@@ -47,6 +47,7 @@ public NavigationPaneRenderer()\n     super(CoreNavigationPane.TYPE);\n   }\n \n+  @Override\n   protected void findTypeConstants(FacesBean.Type type)\n   {\n     super.findTypeConstants(type);\n@@ -55,11 +56,13 @@ protected void findTypeConstants(FacesBean.Type type)\n     _titleKey = type.findKey(\"title\");\n   }\n \n+  @Override\n   public boolean getRendersChildren()\n   {\n     return true;\n   }\n \n+  @Override\n   protected void encodeAll(\n     FacesContext        context,\n     RenderingContext arc,\n@@ -96,6 +99,7 @@ private UIComponent _getStamp(\n     return stamp;\n   }\n \n+  @SuppressWarnings(\"unchecked\")\n   protected void renderContent(\n     FacesContext        context,\n     RenderingContext arc,\n@@ -110,13 +114,11 @@ protected void renderContent(\n     if (nodeStamp == null)\n     {\n       // we aren't stamping, but rather have explicitly defined children:\n-      List<UIComponent> children = component.getChildren();\n-      int childrenLength = children.size();\n-      for (int i=0; i<childrenLength; i++)\n+      for(UIComponent child : (List<UIComponent>)component.getChildren())\n       {\n         try\n         {\n-          UIXCommand navItem = (UIXCommand)children.get(i);\n+          UIXCommand navItem = (UIXCommand)child;\n           if (navItem.isRendered())\n           {\n             // collect the information needed to render this nav item:\n@@ -174,7 +176,7 @@ protected void renderContent(\n       int nextActiveIndex = navItemData.getEffectiveActiveIndex() - 1;\n       for (int i=0; i<visibleItemCount; i++)\n       {\n-        Map currentItemData = navItemData.getItemData(i);\n+        Map<String, Object> currentItemData = navItemData.getItemData(i);\n         currentItemData.put(\"isFirst\", (i == 0));\n         currentItemData.put(\"isLast\", (i == lastRowIndex));\n         currentItemData.put(\"previousActive\", previousActive);\n@@ -252,6 +254,7 @@ private String _getHint(FacesBean bean)\n     return renderingHint;\n   }\n \n+  @Override\n   protected String getShortDesc(FacesBean bean)\n   {\n     return toString(bean.getProperty(_shortDescKey));\n@@ -314,7 +317,7 @@ private void _collectNavItemData(\n         isActive = false; // there can only be 1 active item\n       }\n     }\n-    HashMap itemDataMap = new HashMap();\n+    HashMap<String, Object> itemDataMap = new HashMap<String, Object>();\n     itemDataMap.put(\"accessKey\", _getCommandChildProperty(commandChild, \"accessKey\"));\n     itemDataMap.put(\"component\", commandChild);\n     itemDataMap.put(\"dataIndex\", itemDataIndex);\n@@ -378,7 +381,7 @@ private void _renderNavigationItem(\n     FacesContext context,\n     RenderingContext arc,\n     ResponseWriter rw,\n-    Map itemData,\n+    Map<String, Object> itemData,\n     String renderingHint,\n     boolean isRtl\n     ) throws IOException\n@@ -456,7 +459,7 @@ private void _appendIconAndText(\n     RenderingContext arc,\n     ResponseWriter rw,\n     String iconUri,\n-    Map itemData,\n+    Map<String, Object> itemData,\n     boolean isDisabled,\n     boolean isRtl\n     ) throws IOException\n@@ -501,7 +504,7 @@ private void _writeItemLink(\n     FacesContext context,\n     RenderingContext arc,\n     ResponseWriter rw,\n-    Map itemData,\n+    Map<String, Object> itemData,\n     boolean isDisabled\n     ) throws IOException\n   {\n@@ -658,7 +661,7 @@ private void _renderNonOverlappingItem(\n     FacesContext context,\n     RenderingContext arc,\n     ResponseWriter rw,\n-    Map itemData,\n+    Map<String, Object> itemData,\n     boolean isRtl,\n     boolean isBar,\n     boolean isList\n@@ -845,7 +848,7 @@ private void _renderChoiceItem(\n     FacesContext context,\n     RenderingContext arc,\n     ResponseWriter rw,\n-    Map itemData\n+    Map<String, Object> itemData\n     ) throws IOException\n   {\n     // Choice items do not support icons at this time.\n@@ -1016,7 +1019,7 @@ private void _renderTabItem(\n     FacesContext context,\n     RenderingContext arc,\n     ResponseWriter rw,\n-    Map itemData,\n+    Map<String, Object> itemData,\n     boolean isRtl\n     ) throws IOException\n   {\n@@ -1211,7 +1214,7 @@ private void _renderTabSection(\n     String topStyleClass,\n     String bottomStyleClass,\n     String bottomContentStyleClass,\n-    Map itemData,\n+    Map<String, Object> itemData,\n     boolean isDisabled,\n     boolean isRtl\n     ) throws IOException\n@@ -1263,7 +1266,7 @@ private void _renderTabSection(\n   {\n     NavItemData()\n     {\n-      _list = new ArrayList<Map>();\n+      _list = new ArrayList<Map<String, Object>>();\n       _effectiveActiveIndex = -1;\n     }\n \n@@ -1282,17 +1285,17 @@ int getItemCount()\n       return _list.size();\n     }\n \n-    void addItemData(Map itemData)\n+    void addItemData(Map<String, Object> itemData)\n     {\n       _list.add(itemData);\n     }\n \n-    Map getItemData(int index)\n+    Map<String, Object> getItemData(int index)\n     {\n       return _list.get(index);\n     }\n \n-    private List<Map> _list;\n+    private List<Map<String, Object>> _list;\n     private int _effectiveActiveIndex;\n   }\n ", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/NavigationPaneRenderer.java"}, {"additions": 7, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/OutputFormattedRenderer.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/OutputFormattedRenderer.java", "sha": "27c5fab1c19c851c0b00acbd14c089e6801b4da9", "changes": 10, "status": "modified", "deletions": 3, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/OutputFormattedRenderer.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f", "patch": "@@ -37,13 +37,14 @@ public OutputFormattedRenderer()\n     super(CoreOutputFormatted.TYPE);\n   }\n   \n-  \n+  @Override\n   protected void findTypeConstants(FacesBean.Type type)\n   {\n     super.findTypeConstants(type);\n     _styleUsageKey = type.findKey(\"styleUsage\");\n   }\n \n+  @Override\n   protected void encodeBegin(\n     FacesContext        context,\n     RenderingContext arc,\n@@ -57,6 +58,7 @@ protected void encodeBegin(\n     renderAllAttributes(context, arc, bean);\n   }\n \n+  @Override\n   public void encodeEnd(\n     FacesContext        context,\n     RenderingContext arc,\n@@ -74,6 +76,7 @@ protected String getStyleUsage(FacesBean bean)\n     return toString(bean.getProperty(_styleUsageKey));\n   }\n \n+  @Override\n   protected String getStyleClass(FacesBean bean)\n   {\n     String styleClass = super.getStyleClass(bean);\n@@ -82,16 +85,17 @@ protected String getStyleClass(FacesBean bean)\n       String usage = getStyleUsage(bean);\n       if (usage != null)\n       {\n-        styleClass = (String) _USAGES.get(usage);\n+        styleClass = _USAGES.get(usage);\n       }\n     }\n \n     return styleClass;\n   }\n \n-  static private final Map _USAGES = new HashMap();\n+  static private final Map<String, String> _USAGES;\n   static\n   {\n+    _USAGES = new HashMap<String, String>();\n     _USAGES.put(CoreOutputFormatted.STYLE_USAGE_IN_CONTEXT_BRANDING,\n                 XhtmlConstants.IN_CONTEXT_TEXT_STYLE_CLASS);\n     _USAGES.put(CoreOutputFormatted.STYLE_USAGE_INSTRUCTION,", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/OutputFormattedRenderer.java"}, {"additions": 9, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/OutputLabelRenderer.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/OutputLabelRenderer.java", "sha": "5cd897a86a8dc33305355c27c48814b26ec6d3ae", "changes": 15, "status": "modified", "deletions": 6, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/OutputLabelRenderer.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f", "patch": "@@ -48,6 +48,13 @@ protected OutputLabelRenderer(FacesBean.Type type)\n     super(type);\n   }\n \n+  @Override\n+  public boolean getRendersChildren()\n+  {\n+    return true;\n+  }\n+\n+  @Override\n   protected void findTypeConstants(FacesBean.Type type)\n   {\n     super.findTypeConstants(type);\n@@ -57,18 +64,13 @@ protected void findTypeConstants(FacesBean.Type type)\n     _showRequiredKey       = type.findKey(\"showRequired\");\n   }\n \n-\n-  public boolean getRendersChildren()\n-  {\n-    return true;\n-  }\n-\n   /**\n    * @todo Often, we can get by with just a single label, not\n    * a span and a label\n    * @todo If all that is set is \"required\", it seems that we\n    *  *don't* render a span, but do render the icon.  This is strange.\n    */\n+  @Override\n   protected void encodeAll(\n     FacesContext        context,\n     RenderingContext arc,\n@@ -273,6 +275,7 @@ else if (XhtmlConstants.MESSAGE_TYPE_WARNING.equals(type))\n   // OVERRIDES\n   //\n   \n+  @Override\n    protected void renderAllAttributes(\n      FacesContext        context,\n      RenderingContext arc,", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/OutputLabelRenderer.java"}, {"additions": 3, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/OutputTextRenderer.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/OutputTextRenderer.java", "sha": "eecdb15fd48590e68b52f2e4ec33933dc41a0d6e", "changes": 3, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/OutputTextRenderer.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f", "patch": "@@ -35,6 +35,7 @@ public OutputTextRenderer()\n     super(CoreOutputText.TYPE);\n   }\n \n+  @Override\n   protected void findTypeConstants(FacesBean.Type type)\n   {\n     super.findTypeConstants(type);\n@@ -44,6 +45,7 @@ protected void findTypeConstants(FacesBean.Type type)\n     _descriptionKey = type.findKey(\"description\");\n   }\n \n+  @Override\n   protected void encodeBegin(\n     FacesContext        context,\n     RenderingContext arc,\n@@ -60,6 +62,7 @@ protected void encodeBegin(\n     }\n   }\n \n+  @Override\n   public void encodeEnd(\n     FacesContext        context,\n     RenderingContext arc,", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/OutputTextRenderer.java"}, {"additions": 2, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/OutputUtils.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/OutputUtils.java", "sha": "f9b6cb460a80e9e8f3b95ab675394186a06b3c3d", "changes": 4, "status": "modified", "deletions": 2, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/OutputUtils.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f", "patch": "@@ -232,13 +232,13 @@ public static void renderIcon(\n     if (icon.isNull())\n       return;\n \n-    Map attrs = null;\n+    Map<String, Object> attrs = null;\n \n     if ((shortDesc != null)  ||\n         (align != null)      ||\n          embedded)\n     {\n-      attrs = new ArrayMap(3);\n+      attrs = new ArrayMap<String, Object>(3);\n       attrs.put(Icon.SHORT_DESC_KEY, shortDesc);\n       attrs.put(Icon.ALIGN_KEY, align);\n       attrs.put(Icon.EMBEDDED_KEY, Boolean.valueOf(embedded));", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/OutputUtils.java"}, {"additions": 5, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/PanelBoxRenderer.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/PanelBoxRenderer.java", "sha": "a35071d7a1b1b84fcf3fc727f3e07b21a16e0509", "changes": 5, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/PanelBoxRenderer.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f", "patch": "@@ -41,6 +41,7 @@ protected PanelBoxRenderer(FacesBean.Type type)\n     super(type);\n   }\n   \n+  @Override\n   protected void findTypeConstants(FacesBean.Type type)\n   {\n     super.findTypeConstants(type);\n@@ -50,11 +51,13 @@ protected void findTypeConstants(FacesBean.Type type)\n     _contentStyleKey = type.findKey(\"contentStyle\");\n   }\n   \n+  @Override\n   public boolean getRendersChildren()\n   {\n     return true;\n   }\n \n+  @Override\n   protected void encodeAll(\n     FacesContext        context,\n     RenderingContext arc,\n@@ -79,6 +82,7 @@ protected void encodeAll(\n     writer.endElement(\"table\");\n   }\n   \n+  @Override\n   protected void renderAllAttributes(FacesContext context, \n     RenderingContext arc, \n     FacesBean bean) throws IOException\n@@ -87,6 +91,7 @@ protected void renderAllAttributes(FacesContext context,\n     OutputUtils.renderLayoutTableAttributes(context, arc, \"0\", null);\n   }\n   \n+  @Override\n   protected void renderStyleAttributes(\n     FacesContext        context,\n     RenderingContext arc,", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/PanelBoxRenderer.java"}, {"additions": 25, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/PanelFormLayoutRenderer.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/PanelFormLayoutRenderer.java", "sha": "3086461a24842e4963887c48cd90c01423cf0c23", "changes": 32, "status": "modified", "deletions": 7, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/PanelFormLayoutRenderer.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f", "patch": "@@ -48,6 +48,7 @@ public PanelFormLayoutRenderer()\n     super(CorePanelFormLayout.TYPE);\n   }\n   \n+  @Override\n   protected void findTypeConstants(FacesBean.Type type)\n   {\n     super.findTypeConstants(type);\n@@ -58,6 +59,7 @@ protected void findTypeConstants(FacesBean.Type type)\n     _maxColumnsKey = type.findKey(\"maxColumns\");\n   }\n \n+  @Override\n   public boolean getRendersChildren()\n   {\n     return true;\n@@ -67,6 +69,7 @@ public boolean getRendersChildren()\n    * This is how we can render both the user defined styleClass and our\n    * component style class.\n    */\n+  @Override\n   protected void renderStyleAttributes(\n     FacesContext        context,\n     RenderingContext arc,\n@@ -130,6 +133,8 @@ protected String getDefaultStyleClass()\n     return XhtmlConstants.AF_LABEL_TEXT_STYLE_CLASS;\n   }\n \n+  @SuppressWarnings(\"unchecked\")\n+  @Override\n   protected void encodeAll(\n     FacesContext        context,\n     RenderingContext arc,\n@@ -197,6 +202,7 @@ protected void encodeAll(\n     rw.endElement(\"div\"); // the root element\n   }\n   \n+  @SuppressWarnings(\"unchecked\")\n   private void _encodeChildren(\n     FacesContext        context,\n     RenderingContext arc,\n@@ -208,7 +214,9 @@ private void _encodeChildren(\n   {\n     // We cannot render a nested panelForm with any more than a single column\n     // so we must monitor whether we are nested or not:\n-    Map requestMap = context.getExternalContext().getRequestMap();\n+    Map<String, Object> requestMap = \n+      context.getExternalContext().getRequestMap();\n+    \n     Integer nestLevelObject = (Integer)requestMap.get(PANEL_FORM_NEST_LEVEL_KEY);\n     int nestLevel = 0;\n     if (nestLevelObject != null)\n@@ -220,7 +228,7 @@ private void _encodeChildren(\n     // Iterate through the childPeers extracting and counting the number of\n     // visible children, also count the visible children inside of visible\n     // DhtmlGroupPeers:\n-    List childComponents = component.getChildren();\n+    List<UIComponent> childComponents = component.getChildren();\n     FormItemInfo visibleFormItemInfo = _extractVisibleItems(childComponents);\n     List<FormItem> visibleFormItems = visibleFormItemInfo.getFormItems();\n     int totalFormItemCount = visibleFormItemInfo.getTotalFormItemCount();\n@@ -353,6 +361,7 @@ else if (actualColumns == 1)\n    * UIXGroups.\n    * @param \n    */\n+  @SuppressWarnings(\"unchecked\")\n   private FormItemInfo _extractVisibleItems(List<UIComponent> children)\n   {\n     FormItemInfo formItemInfo = new FormItemInfo();\n@@ -568,6 +577,7 @@ else if ( (labelWidth != null) && (fieldWidth != null) )\n       outerTableWidth);\n   }\n \n+  @SuppressWarnings(\"unchecked\")\n   private void _encodeFormColumns(\n     FacesContext        context,\n     RenderingContext arc,\n@@ -717,7 +727,7 @@ private void _encodeFormItem(\n       // If a peer wants to play well with panelForm, it must use the proper\n       // PanelForm wrapper APIs to ensure proper DOM structure.\n       _encodeBeforeLabelTd(context, arc, rw, startAlignedLabels);\n-      Map originalResourceKeyMap = arc.getSkinResourceKeyMap();\n+      Map<String, String> originalResourceKeyMap = arc.getSkinResourceKeyMap();\n       try\n       {\n         if (startAlignedLabels)\n@@ -797,12 +807,15 @@ private static void _encodeBeforeLabelTd(\n    * @param rw ResponseWriter\n    * @throws IOException\n    */\n+  @SuppressWarnings(\"unchecked\")\n   protected static void encodeBetweenLabelAndFieldCells(\n     FacesContext        context,\n     RenderingContext arc,\n     ResponseWriter      rw) throws IOException\n   {\n-    Map requestMap = context.getExternalContext().getRequestMap();\n+    Map<String, Object> requestMap = \n+      context.getExternalContext().getRequestMap();\n+    \n     Integer nestLevelObject = (Integer)requestMap.get(PANEL_FORM_NEST_LEVEL_KEY);\n     if ( (nestLevelObject != null) &&\n       (nestLevelObject.intValue() > 0) ) // top-aligned (labels stacked above fields)\n@@ -942,9 +955,10 @@ void setTotalFormItemCount(int totalFormItemCount)\n   private PropertyKey _maxColumnsKey;\n \n   // Overallocate because we basically want everything to miss\n-  private static final Set _UNSUPPORTED_RENDERER_TYPES = new HashSet(64);\n+  private static final Set<String> _UNSUPPORTED_RENDERER_TYPES;\n   static\n   {\n+    _UNSUPPORTED_RENDERER_TYPES = new HashSet<String>(64);\n     _UNSUPPORTED_RENDERER_TYPES.add(\"org.apache.myfaces.trinidad.Hidden\");\n     _UNSUPPORTED_RENDERER_TYPES.add(\"org.apache.myfaces.trinidad.Shuttle\");\n     _UNSUPPORTED_RENDERER_TYPES.add(\"org.apache.myfaces.trinidad.rich.Hidden\");\n@@ -957,8 +971,8 @@ void setTotalFormItemCount(int totalFormItemCount)\n   private static final int _COLUMNS_DEFAULT = 3;\n \n   // we need a  resource key map since we are using LabelAndMessageRenderer.\n-  private static final Map _RESOURCE_KEY_SIDE_BY_SIDE_MAP = new HashMap();\n-  private static final Map _RESOURCE_KEY_STACKED_MAP = new HashMap();\n+  private static final Map<String, String> _RESOURCE_KEY_SIDE_BY_SIDE_MAP;\n+  private static final Map<String, String> _RESOURCE_KEY_STACKED_MAP;\n \n   static\n   {\n@@ -967,6 +981,8 @@ void setTotalFormItemCount(int totalFormItemCount)\n     // instead of the generic prompt cell style.\n \n     // Start-aligned labels for side-by-side orientation:\n+    _RESOURCE_KEY_SIDE_BY_SIDE_MAP = new HashMap<String, String>();\n+    \n     _RESOURCE_KEY_SIDE_BY_SIDE_MAP.put(\n       XhtmlConstants.AF_LABEL_TEXT_STYLE_CLASS,\n       XhtmlConstants.AF_PANEL_FORM_LABEL_CELL_STYLE_CLASS);\n@@ -978,6 +994,8 @@ void setTotalFormItemCount(int totalFormItemCount)\n       XhtmlConstants.AF_PANEL_FORM_MESSAGE_CELL_STYLE_CLASS);\n \n     // Stacked labels for one-over-the-other orientation:\n+    _RESOURCE_KEY_STACKED_MAP = new HashMap<String, String>();\n+    \n     _RESOURCE_KEY_STACKED_MAP.put(\n       XhtmlConstants.AF_LABEL_TEXT_STYLE_CLASS,\n       XhtmlConstants.AF_PANEL_FORM_LABEL_STACKED_CELL_STYLE_CLASS);", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/PanelFormLayoutRenderer.java"}, {"additions": 5, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/PanelGroupLayoutRenderer.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/PanelGroupLayoutRenderer.java", "sha": "186d674e700628747c0d2056b60024de75f3dc74", "changes": 11, "status": "modified", "deletions": 6, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/PanelGroupLayoutRenderer.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f", "patch": "@@ -36,18 +36,20 @@ public PanelGroupLayoutRenderer()\n     super(CorePanelGroupLayout.TYPE);\n   }\n   \n+  @Override\n   protected void findTypeConstants(FacesBean.Type type)\n   {\n     super.findTypeConstants(type);\n     _layoutKey = type.findKey(\"layout\");\n   }\n \n-\n+  @Override\n   public boolean getRendersChildren()\n   {\n     return true;\n   }\n \n+  @Override\n   protected void encodeAll(\n     FacesContext        context,\n     RenderingContext arc,\n@@ -102,6 +104,7 @@ else if (isVertical)\n   /**\n    * Render all the children of the PanelGroup\n    */\n+  @SuppressWarnings(\"unchecked\")\n   private void _encodeChildren(\n     FacesContext context,\n     UIComponent  component,\n@@ -111,16 +114,12 @@ private void _encodeChildren(\n   {\n     ResponseWriter rw = context.getResponseWriter();\n \n-    List children   = component.getChildren();\n-    int  childCount = component.getChildCount();\n-\n     UIComponent separator = getFacet(component,\n                                      CorePanelGroupLayout.SEPARATOR_FACET);\n \n     boolean needSeparator = false;\n-    for (int i = 0; i < childCount; i++)\n+    for(UIComponent child : (List<UIComponent>)component.getChildren())\n     {\n-      UIComponent child = (UIComponent) children.get(i);\n       if (!child.isRendered())\n         continue;\n ", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/PanelGroupLayoutRenderer.java"}, {"additions": 5, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/PanelHeaderRenderer.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/PanelHeaderRenderer.java", "sha": "e85fbdc60f91457e3f4f2149fa3a6b2a6e4acc47", "changes": 7, "status": "modified", "deletions": 2, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/PanelHeaderRenderer.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f", "patch": "@@ -26,6 +26,7 @@\n import org.apache.myfaces.trinidad.component.core.layout.CorePanelHeader;\n \n \n+import org.apache.myfaces.trinidadinternal.agent.TrinidadAgent;\n import org.apache.myfaces.trinidadinternal.renderkit.RenderingContext;\n import org.apache.myfaces.trinidadinternal.util.IntegerUtils;\n \n@@ -48,6 +49,7 @@ protected PanelHeaderRenderer(FacesBean.Type type)\n     super(type);\n   }\n \n+  @Override\n   protected void findTypeConstants(FacesBean.Type type)\n   {\n     super.findTypeConstants(type);\n@@ -57,12 +59,13 @@ protected void findTypeConstants(FacesBean.Type type)\n     _messageTypeKey = type.findKey(\"messageType\");\n   }\n   \n-\n+  @Override\n   public boolean getRendersChildren()\n   {\n     return true;\n   }\n \n+  @Override\n   protected void encodeAll(\n     FacesContext        context,\n     RenderingContext arc,\n@@ -138,7 +141,7 @@ protected void encodeAll(\n     // need to clear after the header or you get strange behavior\n     if ( nesting &&\n          isIE(arc) &&\n-         arc.getAgent().OS_WINDOWS == arc.getAgent().getAgentOS())\n+         TrinidadAgent.OS_WINDOWS == arc.getAgent().getAgentOS())\n     {\n       writer.startElement(\"div\", component);\n       writer.writeAttribute(\"style\",\"clear:both\", null);", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/PanelHeaderRenderer.java"}, {"additions": 5, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/PanelHorizontalLayoutRenderer.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/PanelHorizontalLayoutRenderer.java", "sha": "557026d7bfdfa2f68654b8d0d3c8af0c6e47a8a7", "changes": 12, "status": "modified", "deletions": 7, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/PanelHorizontalLayoutRenderer.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f", "patch": "@@ -36,19 +36,21 @@ public PanelHorizontalLayoutRenderer()\n     super(CorePanelHorizontalLayout.TYPE);\n   }\n   \n+  @Override\n   protected void findTypeConstants(FacesBean.Type type)\n   {\n     super.findTypeConstants(type);\n     _valignKey = type.findKey(\"valign\");\n     _halignKey = type.findKey(\"halign\");\n   }\n \n-\n+  @Override\n   public boolean getRendersChildren()\n   {\n     return true;\n   }\n \n+  @Override\n   protected void encodeAll(\n     FacesContext        context,\n     RenderingContext arc,\n@@ -94,6 +96,7 @@ protected Object getHalign(FacesBean bean)\n   /**\n    * Render all the children of the PanelGroup\n    */\n+  @SuppressWarnings(\"unchecked\")\n   private void _encodeChildren(\n     FacesContext context,\n     RenderingContext arc,\n@@ -103,10 +106,6 @@ private void _encodeChildren(\n     ) throws IOException\n   {\n \n-    List children   = component.getChildren();\n-    int  childCount = component.getChildCount();\n-\n-\n     UIComponent separator = getFacet(component,\n                                      CorePanelHorizontalLayout.SEPARATOR_FACET);\n \n@@ -123,9 +122,8 @@ else if (CorePanelHorizontalLayout.HALIGN_RIGHT.equals(hAlign))\n     else\n       isEndAlignment = false;\n     \n-    for (int i = 0; i < childCount; i++)\n+    for(UIComponent child : (List<UIComponent>)component.getChildren())\n     {\n-      UIComponent child = (UIComponent) children.get(i);\n       if (!child.isRendered())\n         continue;\n ", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/PanelHorizontalLayoutRenderer.java"}, {"additions": 8, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/PanelLabelAndMessageRenderer.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/PanelLabelAndMessageRenderer.java", "sha": "26cbd1dd69f213fa073ce30b89f837904ad64596", "changes": 10, "status": "modified", "deletions": 2, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/PanelLabelAndMessageRenderer.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f", "patch": "@@ -39,25 +39,28 @@ public PanelLabelAndMessageRenderer()\n     super(CorePanelLabelAndMessage.TYPE);\n   }\n   \n+  @Override\n   protected void findTypeConstants(FacesBean.Type type)\n   {\n     super.findTypeConstants(type);\n     _forKey = type.findKey(\"for\");\n     _labelInlineStyleKey = type.findKey(\"labelStyle\");\n   }    \n \n+  @Override\n   protected boolean labelShowRequired(FacesBean bean)\n   {\n     // Simpler algorithm for panelLabelAndMessage\n     return getShowRequired(bean);\n-  }\n-  \n+  } \n  \n+  @Override\n   protected String getRootStyleClass(FacesBean bean)\n   {\n     return \"af|panelLabelAndMessage\";\n   }\n   \n+  @Override\n   protected String getLabelFor(\n     FacesContext        context,\n     RenderingContext arc,\n@@ -71,6 +74,7 @@ protected String getLabelFor(\n                                        forValue);\n   }\n \n+  @Override\n   protected void renderFieldCellContents(\n     FacesContext        context,\n     RenderingContext arc,\n@@ -124,6 +128,7 @@ protected void renderFieldCellContents(\n     rw.endElement(\"table\");\n   }\n \n+  @Override\n   protected boolean hasMessage(\n     FacesContext        context,\n     RenderingContext arc,\n@@ -138,6 +143,7 @@ protected String getFor(FacesBean bean)\n     return toString(bean.getProperty(_forKey));\n   }\n \n+  @Override\n   protected String getLabelInlineStyleKey(FacesBean bean)\n   {\n     return toString(bean.getProperty(_labelInlineStyleKey));", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/PanelLabelAndMessageRenderer.java"}, {"additions": 7, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/PanelListRenderer.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/PanelListRenderer.java", "sha": "a777a305a1588f2b70ae33b908392130b793658e", "changes": 10, "status": "modified", "deletions": 3, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/PanelListRenderer.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f", "patch": "@@ -38,6 +38,7 @@ public PanelListRenderer()\n     super(CorePanelList.TYPE);\n   }\n \n+  @Override\n   protected void findTypeConstants(FacesBean.Type type)\n   {\n     super.findTypeConstants(type);\n@@ -51,6 +52,7 @@ protected void findTypeConstants(FacesBean.Type type)\n    * We want to render the styleClass/inlineStyle attributes as well\n    * as our component styleClass.\n    */\n+  @Override\n   protected void renderStyleAttributes(\n     FacesContext        context,\n     RenderingContext arc,\n@@ -60,12 +62,13 @@ protected void renderStyleAttributes(\n                           XhtmlConstants.AF_PANEL_LIST_STYLE_CLASS);\n   }\n \n-\n+  @Override\n   public boolean getRendersChildren()\n   {\n     return true;\n   }\n \n+  @Override\n   protected void encodeAll(\n     FacesContext        context,\n     RenderingContext arc,\n@@ -126,6 +129,7 @@ private void _renderListStyle(\n \n   // render without columns. Called when rows > children or when we have\n   // multiple columns, and we are rendering a single column.\n+  @SuppressWarnings(\"unchecked\")\n   private int _renderNoColumns(\n     FacesContext context,\n     RenderingContext arc,\n@@ -139,14 +143,14 @@ private int _renderNoColumns(\n     int maxChildIndex = component.getChildCount();\n     int numRendered = 0;\n     int childIndex = start;\n-    List children   = component.getChildren();\n+    List<UIComponent> children   = component.getChildren();\n \n     writer.startElement(\"ul\", null);\n     _renderListStyle(context, bean);\n \n     while ( numRendered < numToRender  && childIndex < maxChildIndex)\n     {\n-      UIComponent child = (UIComponent) children.get(childIndex);\n+      UIComponent child = children.get(childIndex);\n \n       // if visible child\n       if ( child != null && child.isRendered())", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/PanelListRenderer.java"}, {"additions": 9, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/PanelPartialRootRenderer.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/PanelPartialRootRenderer.java", "sha": "f6d647c3c54b514eafeeeb9e7294350a4956d72d", "changes": 14, "status": "modified", "deletions": 5, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/PanelPartialRootRenderer.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f", "patch": "@@ -59,6 +59,7 @@ protected PanelPartialRootRenderer(FacesBean.Type type)\n     super(type);\n   }\n \n+  @Override\n   public boolean getRendersChildren()\n   {\n     return true;\n@@ -73,7 +74,7 @@ protected void renderContent(\n     encodeAllChildren(context, component);\n   }\n \n-\n+  @Override\n   protected void encodeAll(\n     FacesContext        context,\n     RenderingContext arc,\n@@ -185,7 +186,7 @@ private void _renderPartialScripts(\n     PartialPageContext pprContext = arc.getPartialPageContext();\n     if (_shouldRenderPartialScripts(pprContext))\n     {\n-      Iterator targets = pprContext.getRenderedPartialTargets();\n+      Iterator<String> targets = pprContext.getRenderedPartialTargets();\n       String scripts = scriptBufferingWriter.getBufferedScripts();\n \n       ResponseWriter writer = context.getResponseWriter();\n@@ -205,7 +206,7 @@ private void _renderPartialScripts(\n         writer.startElement(\"pprtargets\",null);\n         while (targets.hasNext())\n         {\n-          String target = (String) targets.next();\n+          String target = targets.next();\n           if (pprContext.isPartialTargetRendered(target))\n           {\n             writer.startElement(\"pprtarget\", null);\n@@ -240,7 +241,8 @@ private void _renderPartialScripts(\n \n         writer.endElement(\"script\");\n \n-        Iterator libraries = scriptBufferingWriter.getBufferedLibraries();\n+        Iterator<Object> libraries = \n+          scriptBufferingWriter.getBufferedLibraries();\n \n         writer.startElement(\"script\", null);\n         XhtmlRenderer.renderScriptTypeAttribute(context, arc);\n@@ -287,7 +289,7 @@ private void _renderPartialScripts(\n \n         while (targets.hasNext())\n         {\n-          String target = (String) targets.next();\n+          String target = targets.next();\n           if (pprContext.isPartialTargetRendered(target))\n           {\n             if (firstRenderedTarget)\n@@ -496,11 +498,13 @@ static public Scriptlet sharedInstance()\n       return _sInstance;\n     }\n \n+    @Override\n     public Object getScriptletKey()\n     {\n       return _PARTIAL_CACHE_LIBRARY_SCRIPTLET;\n     }\n \n+    @Override\n     protected void outputScriptletContent(\n       FacesContext context,\n       RenderingContext arc) throws IOException", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/PanelPartialRootRenderer.java"}, {"additions": 10, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/PartialPageUtils.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/PartialPageUtils.java", "sha": "7d08aa042ed65e6d6d3c2d4c2e59be283a047d97", "changes": 14, "status": "modified", "deletions": 4, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/PartialPageUtils.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f", "patch": "@@ -22,7 +22,6 @@\n import org.apache.myfaces.trinidad.context.RequestContext;\n \n import org.apache.myfaces.trinidadinternal.agent.TrinidadAgent;\n-import org.apache.myfaces.trinidadinternal.context.RequestContextBean;\n \n import org.apache.myfaces.trinidadinternal.renderkit.RenderingContext;\n import org.apache.myfaces.trinidadinternal.renderkit.core.ppr.PartialPageContext;\n@@ -50,9 +49,12 @@ public static boolean isPartialRequest(FacesContext context)\n    * a \"partial\" parameter.\n    * @todo This is probably unnecessary.\n    */\n+  @SuppressWarnings(\"unchecked\")\n   public static void forcePartialRendering(FacesContext context)\n   {\n-    Map requestMap = context.getExternalContext().getRequestMap();\n+    Map<String, Object> requestMap = \n+      context.getExternalContext().getRequestMap();\n+    \n     requestMap.put(_PARTIAL_KEY, Boolean.TRUE);\n   }\n \n@@ -125,20 +127,24 @@ public static boolean supportsBlocking(\n   /**\n    * Test if PPR is active during rendering.\n    */\n+  @SuppressWarnings(\"unchecked\")\n   public static boolean isPPRActive(FacesContext context)\n   {\n-    Map requestScope =\n+    Map<String, Object> requestScope =\n       context.getExternalContext().getRequestMap();\n+    \n     return Boolean.TRUE.equals(requestScope.get(_PPR_ACTIVE_FLAG_NAME));\n   }\n \n   /**\n    * Mark that PPR is in fact active during rendering.\n    */\n+  @SuppressWarnings(\"unchecked\")\n   public static void markPPRActive(FacesContext context)\n   {\n-    Map requestScope =\n+    Map<String, Object> requestScope =\n       context.getExternalContext().getRequestMap();\n+    \n     requestScope.put(_PPR_ACTIVE_FLAG_NAME, Boolean.TRUE);\n   }\n ", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/PartialPageUtils.java"}, {"additions": 2, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/PdaPanelPageHeaderRenderer.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/PdaPanelPageHeaderRenderer.java", "sha": "8d309ae81637196618ac4eefd286d540cf96f918", "changes": 2, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/PdaPanelPageHeaderRenderer.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f", "patch": "@@ -41,11 +41,13 @@ public PdaPanelPageHeaderRenderer()\n     super(CorePanelPageHeader.TYPE);\n   }\n \n+  @Override\n   public boolean getRendersChildren()\n   {\n     return true;\n   }\n \n+  @Override\n   protected void encodeAll(\n     FacesContext        context,\n     RenderingContext arc,", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/PdaPanelPageHeaderRenderer.java"}, {"additions": 4, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/ProcessUtils.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/ProcessUtils.java", "sha": "81f685f92803db8c9a0e35ae8f2bc3779e54cc30", "changes": 4, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/ProcessUtils.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f", "patch": "@@ -205,11 +205,13 @@ static public Scriptlet sharedInstance()\n       return _sInstance;\n     }\n \n+    @Override\n     public Object getScriptletKey()\n     {\n       return _NAV_SUBMIT_SCRIPTLET;\n     }\n \n+    @Override\n     protected void outputScriptletContent(\n       FacesContext context,\n       RenderingContext arc) throws IOException\n@@ -229,11 +231,13 @@ static public Scriptlet sharedInstance()\n       return _sInstance;\n     }\n \n+    @Override\n     public Object getScriptletKey()\n     {\n       return _NAV_CHOICE_SUBMIT_SCRIPTLET;\n     }\n \n+    @Override\n     protected void outputScriptletContent(\n       FacesContext context,\n       RenderingContext arc) throws IOException", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/ProcessUtils.java"}, {"additions": 17, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/ResourceKeyUtils.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/ResourceKeyUtils.java", "sha": "39afcd873688e349c73950b0f1f923382869c9ad", "changes": 25, "status": "modified", "deletions": 8, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/ResourceKeyUtils.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f", "patch": "@@ -34,8 +34,8 @@\n    * @param toComponent eg: treeTable\n    * @return A new map with the replacesment values.\n    */\n-  public static Map convertResourceKeyMap(\n-    Map original, \n+  public static Map<String, String> convertResourceKeyMap(\n+    Map<String, String> original, \n     String fromComponent, \n     String toComponent)\n   {\n@@ -44,18 +44,27 @@ public static Map convertResourceKeyMap(\n     String pattern2 = \"af|\"+fromComponent+\":\";\n     String replace2 = \"af|\"+toComponent+\":\";\n     \n-    Map result = new HashMap(original.size());\n-    Iterator entries = original.entrySet().iterator();\n-    while(entries.hasNext())\n+    Map<String, String> result = \n+      new HashMap<String, String>(original.size());\n+    \n+    Iterator<Map.Entry<String, String>> entries = \n+      original.entrySet().iterator();\n+    \n+    for(Map.Entry<String, String> entry : original.entrySet())\n     {\n-      Map.Entry en = (Map.Entry) entries.next();\n-      String value = (String) en.getValue();\n+      String value = entry.getValue();\n       if (value.startsWith(pattern1))\n+      {\n         value = _replace(value, pattern1, replace1);\n+      }\n       else if (value.startsWith(pattern2))\n+      {\n         value = _replace(value, pattern2, replace2);\n-      result.put(en.getKey(), value);\n+      }\n+      \n+      result.put(entry.getKey(), value);\n     }\n+    \n     return result;\n   }\n   ", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/ResourceKeyUtils.java"}, {"additions": 4, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SelectBooleanCheckboxRenderer.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SelectBooleanCheckboxRenderer.java", "sha": "78201b80596d4b91b969bd2674e97f7622541d9d", "changes": 4, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SelectBooleanCheckboxRenderer.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f", "patch": "@@ -28,11 +28,13 @@ public SelectBooleanCheckboxRenderer()\n     \n   }  \n   \n+  @Override\n   protected String getRootStyleClass(FacesBean bean)  \n   {\n     return \"af|selectBooleanCheckbox\";\n   }\n   \n+  @Override\n   protected boolean isIndented()\n   {\n     return true;\n@@ -42,6 +44,7 @@ protected boolean isIndented()\n    * Don't render <label> on the label portion if there's\n    * a \"text\" attribute set.\n    */\n+  @Override\n   protected boolean hasOwnLabel(FacesBean bean)\n   {\n     String text = _simpleSelectBooleanCheckbox.getText(bean);\n@@ -52,6 +55,7 @@ protected boolean hasOwnLabel(FacesBean bean)\n     return false;\n   }\n \n+  @Override\n   protected FormInputRenderer getFormInputRenderer()\n   {\n     return _simpleSelectBooleanCheckbox;", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SelectBooleanCheckboxRenderer.java"}, {"additions": 4, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SelectBooleanRadioRenderer.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SelectBooleanRadioRenderer.java", "sha": "77702ed73640289543f89bcc7460c9393f1252ea", "changes": 4, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SelectBooleanRadioRenderer.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f", "patch": "@@ -27,6 +27,7 @@ public SelectBooleanRadioRenderer()\n     \n   } \n   \n+  @Override\n   protected String getRootStyleClass(FacesBean bean)  \n   {\n     return \"af|selectBooleanRadio\";\n@@ -36,6 +37,7 @@ protected String getRootStyleClass(FacesBean bean)\n    * selectBooleanRadio should not render a &lt;label&gt; on itself\n    * if \"text\" is set.\n    */ \n+  @Override\n   protected boolean hasOwnLabel(FacesBean bean)\n   {\n     String text = _simpleSelectBooleanRadio.getText(bean);\n@@ -46,11 +48,13 @@ protected boolean hasOwnLabel(FacesBean bean)\n     return false;\n   }\n \n+  @Override\n   protected boolean isIndented()\n   {\n     return true;\n   }  \n  \n+  @Override\n   protected FormInputRenderer getFormInputRenderer()\n   {\n     return _simpleSelectBooleanRadio;", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SelectBooleanRadioRenderer.java"}, {"additions": 6, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SelectManyCheckboxRenderer.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SelectManyCheckboxRenderer.java", "sha": "23693d15ac280d7bacc3f6ddda5ab59d61d9db67", "changes": 6, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SelectManyCheckboxRenderer.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f", "patch": "@@ -28,12 +28,14 @@ public SelectManyCheckboxRenderer()\n     super(CoreSelectManyCheckbox.TYPE);\n   }\n   \n+  @Override\n   protected void findTypeConstants(FacesBean.Type type)\n   {\n     super.findTypeConstants(type);\n     _layoutKey = type.findKey(\"layout\");\n   } \n   \n+  @Override\n   protected String getRootStyleClass(FacesBean bean)  \n   {\n     return \"af|selectManyCheckbox\";\n@@ -44,6 +46,7 @@ protected String getLayout(FacesBean bean)\n     return toString(bean.getProperty(_layoutKey));\n   }\n \n+  @Override\n   protected String getDefaultLabelValign(FacesBean bean)\n   {\n     // Don't top-align for horizontal radio buttons.\n@@ -56,16 +59,19 @@ protected String getDefaultLabelValign(FacesBean bean)\n   /**\n    * selectManyCheckbox should not render a &lt;label&gt; on itself.\n    */ \n+  @Override\n   protected boolean hasOwnLabel(FacesBean bean)\n   {\n     return true;\n   }\n   \n+  @Override\n   protected boolean showAccessKeyOnLabel(FacesBean bean)\n   {\n     return true;\n   }\n \n+  @Override\n   protected FormInputRenderer getFormInputRenderer()\n   {\n     return _simpleSelectManyCheckbox;", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SelectManyCheckboxRenderer.java"}, {"additions": 3, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SelectManyListboxRenderer.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SelectManyListboxRenderer.java", "sha": "1c0098929c13fbd841f89831a9fb9107abaf636f", "changes": 3, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SelectManyListboxRenderer.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f", "patch": "@@ -27,16 +27,19 @@ public SelectManyListboxRenderer()\n     super(CoreSelectManyListbox.TYPE);\n   }  \n   \n+  @Override\n   protected String getRootStyleClass(FacesBean bean)  \n   {\n     return \"af|selectManyListbox\";\n   }\n   \n+  @Override\n   protected String getDefaultLabelValign(FacesBean bean)\n   {\n     return \"top\";\n   }\n \n+  @Override\n   protected FormInputRenderer getFormInputRenderer()\n   {\n     return _simpleSelectManyListbox;", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SelectManyListboxRenderer.java"}, {"additions": 2, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SelectOneChoiceRenderer.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SelectOneChoiceRenderer.java", "sha": "4d1d4fab467387f65cd160e1032dfcd02f525353", "changes": 2, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SelectOneChoiceRenderer.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f", "patch": "@@ -28,11 +28,13 @@ public SelectOneChoiceRenderer()\n     \n   }  \n   \n+  @Override\n   protected String getRootStyleClass(FacesBean bean)  \n   {\n     return \"af|selectOneChoice\";\n   }\n   \n+  @Override\n   protected FormInputRenderer getFormInputRenderer()\n   {\n     return _simpleSelectOneChoice;", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SelectOneChoiceRenderer.java"}, {"additions": 3, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SelectOneListboxRenderer.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SelectOneListboxRenderer.java", "sha": "06db36a44da4f1c7c6d32bf811658f7b61010f12", "changes": 3, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SelectOneListboxRenderer.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f", "patch": "@@ -28,16 +28,19 @@ public SelectOneListboxRenderer()\n     \n   }\n   \n+  @Override\n   protected String getRootStyleClass(FacesBean bean)  \n   {\n     return \"af|selectOneListbox\";\n   }\n   \n+  @Override\n   protected String getDefaultLabelValign(FacesBean bean)\n   {\n     return \"top\";\n   }\n \n+  @Override\n   protected FormInputRenderer getFormInputRenderer()\n   {\n     return _simpleSelectOneListbox;", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SelectOneListboxRenderer.java"}, {"additions": 10, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SelectOneRadioRenderer.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SelectOneRadioRenderer.java", "sha": "1ab103cb7d2db603dd031c966cdf5aa4df2d778c", "changes": 14, "status": "modified", "deletions": 4, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SelectOneRadioRenderer.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f", "patch": "@@ -27,12 +27,14 @@ public SelectOneRadioRenderer()\n     super(CoreSelectOneRadio.TYPE);\n   }\n   \n+  @Override\n   protected void findTypeConstants(FacesBean.Type type)\n   {\n     super.findTypeConstants(type);\n     _layoutKey = type.findKey(\"layout\");\n   } \n   \n+  @Override\n   protected String getRootStyleClass(FacesBean bean)  \n   {\n     return \"af|selectOneRadio\";\n@@ -43,6 +45,7 @@ protected String getLayout(FacesBean bean)\n     return toString(bean.getProperty(_layoutKey));\n   }\n \n+  @Override\n   protected String getDefaultLabelValign(FacesBean bean)\n   {\n     // Don't top-align for horizontal radio buttons.\n@@ -55,16 +58,19 @@ protected String getDefaultLabelValign(FacesBean bean)\n   /**\n    * selectOneRadio should not render a &lt;label&gt; on itself.\n    */ \n-   protected boolean hasOwnLabel(FacesBean bean)\n-   {\n-     return true;\n-   }\n+  @Override\n+  protected boolean hasOwnLabel(FacesBean bean)\n+  {\n+    return true;\n+  }\n \n+  @Override\n   protected boolean showAccessKeyOnLabel(FacesBean bean)\n   {\n     return true;\n   }\n   \n+  @Override\n   protected FormInputRenderer getFormInputRenderer()\n   {\n     return _simpleSelectOneRadio;", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SelectOneRadioRenderer.java"}, {"additions": 24, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SelectRangeChoiceBarRenderer.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SelectRangeChoiceBarRenderer.java", "sha": "dd8ab5e1de42ff593a7e5376fee1050b2346470d", "changes": 41, "status": "modified", "deletions": 17, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SelectRangeChoiceBarRenderer.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f", "patch": "@@ -58,6 +58,7 @@ public SelectRangeChoiceBarRenderer(FacesBean.Type type)\n     super(type);\n   }\n \n+  @Override\n   protected void findTypeConstants(FacesBean.Type type)\n   {\n     super.findTypeConstants(type);\n@@ -68,9 +69,13 @@ protected void findTypeConstants(FacesBean.Type type)\n     _varKey = type.findKey(\"var\");\n   }\n \n+  @SuppressWarnings(\"unchecked\")\n+  @Override\n   public void decode(FacesContext context, UIComponent component)\n   {\n-    Map parameters =  context.getExternalContext().getRequestParameterMap();\n+    Map<String, String> parameters = \n+      context.getExternalContext().getRequestParameterMap();\n+    \n     Object event = parameters.get(XhtmlConstants.EVENT_PARAM);\n \n     // get the goto event parameter values and queue a RangeChangeEvent.\n@@ -153,7 +158,7 @@ private RangeChangeEvent _createRangeChangeEvent(\n                                 newStart, newEnd);\n   }\n \n-\n+  @Override\n   public boolean getRendersChildren()\n   {\n     return true;\n@@ -162,6 +167,7 @@ public boolean getRendersChildren()\n   /**\n    * Always render an ID, needed for proper PPR.\n    */\n+  @Override\n   protected boolean shouldRenderId(\n     FacesContext context,\n     UIComponent  component)\n@@ -269,6 +275,7 @@ protected boolean showAllSupported()\n \n   /**\n    */\n+  @Override\n   protected void encodeAll(\n     FacesContext        context,\n     RenderingContext arc,\n@@ -629,7 +636,8 @@ else if (/*(maxValue == MAX_VALUE_UNKNOWN) ||*/ !supportsScripting(arc))\n     }\n     else\n     {\n-      List items = new ArrayList((int) _MAX_VISIBLE_OPTIONS);\n+      List<SelectItem> items = \n+        new ArrayList<SelectItem>((int) _MAX_VISIBLE_OPTIONS);\n \n       int selectedIndex = _getItems(context, arc, component, items,\n                                     minValue, maxValue, currentValue,\n@@ -685,24 +693,23 @@ else if (count == 1)\n         writer.startElement(\"span\", null);\n         renderStyleClass(context, arc,\n                          XhtmlConstants.AF_FIELD_TEXT_STYLE_CLASS);\n-        writer.writeText(((SelectItem) items.get(0)).getLabel(),\n-                         null);\n+        writer.writeText(items.get(0).getLabel(), null);\n         writer.endElement(\"span\");\n       }\n     }\n   }\n \n \n   private void _writeSelectItems(\n-    FacesContext context,\n-    List         items,\n-    int          selectedIndex) throws IOException\n+    FacesContext     context,\n+    List<SelectItem> items,\n+    int              selectedIndex) throws IOException\n   {\n     ResponseWriter writer = context.getResponseWriter();\n     int count = items.size();\n     for (int i = 0; i < count; i++)\n     {\n-      SelectItem item = (SelectItem) items.get(i);\n+      SelectItem item = items.get(i);\n       writer.startElement(\"option\", null);\n       writer.writeAttribute(\"value\", item.getValue(), null);\n       if (i == selectedIndex)\n@@ -720,7 +727,7 @@ private int _getItems(\n     FacesContext        context,\n     RenderingContext arc,\n     UIComponent         component,\n-    List                items,\n+    List<SelectItem>    items,\n     long                minValue, long maxValue, long value,\n     int                 blockSize,\n     UIComponent         rangeLabel)\n@@ -730,8 +737,7 @@ private int _getItems(\n     boolean maxUnknown = (maxValue == XhtmlConstants.MAX_VALUE_UNKNOWN);\n \n     // Zero-indexed block index.\n-    long blockIndex = (value - minValue + ((long) blockSize) - 1L) /\n-      (long) blockSize;\n+    long blockIndex = (value - minValue + blockSize - 1L) / blockSize;\n \n     // sometimes a record set won't start on a multiple of blockSize. So\n     // remember to add any offset:\n@@ -747,8 +753,7 @@ private int _getItems(\n       maxBlockIndex = blockIndex + 1;\n     else\n     {\n-      maxBlockIndex = (maxValue - minValue - offset) /\n-                      ((long) blockSize);\n+      maxBlockIndex = (maxValue - minValue - offset) / blockSize;\n       if (offset > 0)\n         maxBlockIndex++;\n     }\n@@ -798,7 +803,7 @@ private int _getItems(\n          blockIndex <= lastBlockIndex;\n          blockIndex++)\n     {\n-      long blockStart = minValue + (blockIndex * ((long) blockSize));\n+      long blockStart = minValue + (blockIndex * blockSize);\n \n       // if there is an offset, then adjust accordingly. for example, if the\n       // offset is 7 (and the blockSize is 10), then the new blockStarts are:\n@@ -1094,6 +1099,7 @@ protected String getBlockString(\n    *   {0}-{1}\n    *  (and not bother with the \"of\" substitution)\n    */\n+  @SuppressWarnings(\"unchecked\")\n   private String _getRangeString(\n     FacesContext        context,\n     RenderingContext arc,\n@@ -1138,7 +1144,7 @@ private String _getRangeString(\n       String var = getVar(getFacesBean(component));\n       if (var != null)\n       {\n-        Map requestMap =\n+        Map<String, Object> requestMap =\n           context.getExternalContext().getRequestMap();\n         old = requestMap.put(var, range);\n       }\n@@ -1149,8 +1155,9 @@ private String _getRangeString(\n \n       if (var != null)\n       {\n-        Map requestMap =\n+        Map<String, Object> requestMap =\n           context.getExternalContext().getRequestMap();\n+        \n         if (old == null)\n           requestMap.remove(var);\n         else", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SelectRangeChoiceBarRenderer.java"}, {"additions": 14, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/ShowDetailHeaderRenderer.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/ShowDetailHeaderRenderer.java", "sha": "aaf1a37846ade5e3ff1ca56706abfe3d6bd5e988", "changes": 18, "status": "modified", "deletions": 4, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/ShowDetailHeaderRenderer.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f", "patch": "@@ -37,22 +37,23 @@ public ShowDetailHeaderRenderer()\n   {\n     super(CoreShowDetailHeader.TYPE);\n   }\n-\n   \n+  @Override\n   protected void findTypeConstants(FacesBean.Type type)\n   {\n     super.findTypeConstants(type);\n     _detailRenderer = new DetailRenderer(type);\n     _disclosedKey = type.findKey(\"disclosed\");\n   }\n \n+  @Override\n   public void decode(FacesContext context, UIComponent component)\n   {\n     // Delegate decoding to the showDetail renderer\n     _detailRenderer.decode(context, component);\n   }\n \n-\n+  @Override\n   protected void encodeAll(\n     FacesContext        context,\n     RenderingContext arc,\n@@ -61,7 +62,7 @@ protected void encodeAll(\n   {\n     // map the resource value keys that are used in showDetail and header\n     // to the keys we need to use in this renderer.\n-    Map originalResourceKeyMap = arc.getSkinResourceKeyMap();\n+    Map<String, String> originalResourceKeyMap = arc.getSkinResourceKeyMap();\n     try\n     {\n \n@@ -75,13 +76,15 @@ protected void encodeAll(\n     }\n   }\n \n+  @Override\n   protected void renderIcon(FacesContext context, RenderingContext arc, \n                             UIComponent component, FacesBean bean, String messageType)\n     throws IOException\n   {\n     delegateRenderer(context, arc, component, bean, _detailRenderer);\n   }\n \n+  @Override\n   protected String getMessageType(FacesBean bean)\n   {\n     // Not currently supported\n@@ -97,6 +100,7 @@ protected boolean getDisclosed(FacesBean bean)\n     return Boolean.TRUE.equals(o);\n   }\n \n+  @Override\n   protected boolean shouldRenderChildren(FacesBean bean)\n   {\n     return getDisclosed(bean);\n@@ -110,23 +114,27 @@ public DetailRenderer(FacesBean.Type type)\n       super(type);\n     }\n     \n+    @Override\n     protected void renderId(FacesContext context, UIComponent component)\n       throws IOException\n     {\n     }\n \n+    @Override\n     protected void renderAllAttributes(FacesContext context, \n                                        RenderingContext arc, \n                                        FacesBean bean)\n       throws IOException\n     {\n     }\n \n+    @Override\n     protected boolean renderAsInline()\n     {\n       return true;\n     }\n \n+    @Override\n     protected String getDisclosureText(RenderingContext arc, \n                                        FacesBean bean, boolean disclosed)\n     {\n@@ -137,9 +145,11 @@ protected String getDisclosureText(RenderingContext arc,\n   private CoreRenderer _detailRenderer;\n   private PropertyKey  _disclosedKey;\n   \n-  private static final Map _RESOURCE_KEY_MAP  =  new HashMap();\n+  private static final Map<String, String> _RESOURCE_KEY_MAP;\n   static\n   {\n+    _RESOURCE_KEY_MAP  =  new HashMap<String, String>();\n+    \n     _RESOURCE_KEY_MAP.put(\"af_showDetail.DISCLOSED\" ,\n                           \"af_showDetailHeader.DISCLOSED\");\n     _RESOURCE_KEY_MAP.put(\"af_showDetail.UNDISCLOSED\" ,", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/ShowDetailHeaderRenderer.java"}, {"additions": 8, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/ShowDetailItemRenderer.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/ShowDetailItemRenderer.java", "sha": "5eeed263ed5c0f8ba7f4f5bffc8d028c25605848", "changes": 10, "status": "modified", "deletions": 2, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/ShowDetailItemRenderer.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f", "patch": "@@ -43,15 +43,20 @@ protected ShowDetailItemRenderer(FacesBean.Type type)\n     super(type);\n   }\n   \n+  @Override\n   protected void findTypeConstants(FacesBean.Type type)\n   {\n     super.findTypeConstants(type);\n     _disclosedKey = type.findKey(\"disclosed\");\n   }\n \n+  @SuppressWarnings(\"unchecked\")\n+  @Override\n   public void decode(FacesContext context, UIComponent component)\n   {\n-    Map parameters =  context.getExternalContext().getRequestParameterMap();\n+    Map<String, String> parameters = \n+      context.getExternalContext().getRequestParameterMap();\n+    \n     Object event = parameters.get(XhtmlConstants.EVENT_PARAM);\n     if (XhtmlConstants.HIDE_EVENT.equals(event) ||\n         XhtmlConstants.SHOW_EVENT.equals(event))\n@@ -68,7 +73,7 @@ public void decode(FacesContext context, UIComponent component)\n     }\n   }\n \n-\n+  @Override\n   public boolean getRendersChildren()\n   {\n     return true;\n@@ -83,6 +88,7 @@ protected boolean getDisclosed(FacesBean bean)\n     return Boolean.TRUE.equals(o);\n   }\n \n+  @Override\n   protected void encodeAll(\n     FacesContext        context,\n     RenderingContext arc,", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/ShowDetailItemRenderer.java"}, {"additions": 3, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/ShowDetailRenderer.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/ShowDetailRenderer.java", "sha": "1f206ed736e73ad8256ef4a85a3d7964b97e1815", "changes": 3, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/ShowDetailRenderer.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f", "patch": "@@ -46,6 +46,7 @@ protected ShowDetailRenderer(FacesBean.Type type)\n     super(type);\n   }\n \n+  @Override\n   protected void findTypeConstants(FacesBean.Type type)\n   {\n     super.findTypeConstants(type);\n@@ -56,6 +57,7 @@ protected void findTypeConstants(FacesBean.Type type)\n \n   /**\n    */\n+  @Override\n   protected void encodeAll(\n     FacesContext        context,\n     RenderingContext arc,\n@@ -193,6 +195,7 @@ protected void renderDisclosureIcon(\n   /**\n    * Always render an ID, needed for proper PPR.\n    */\n+  @Override\n   protected boolean shouldRenderId(\n     FacesContext context,\n     UIComponent  component)", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/ShowDetailRenderer.java"}, {"additions": 23, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SimpleInputColorRenderer.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SimpleInputColorRenderer.java", "sha": "85ca0ca43f2d11cf0a3bbbd46be93894e1edf31e", "changes": 32, "status": "modified", "deletions": 9, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SimpleInputColorRenderer.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f", "patch": "@@ -62,13 +62,15 @@ public SimpleInputColorRenderer()\n     super(CoreInputColor.TYPE);\n   }\n \n+  @Override\n   protected void findTypeConstants(FacesBean.Type type)\n   {\n     super.findTypeConstants(type);\n     _compactKey = type.findKey(\"compact\");\n     _chooseIdKey = type.findKey(\"chooseId\");\n   }\n \n+  @Override\n   protected void queueActionEvent(FacesContext context, UIComponent component)\n   {\n     FacesBean bean = getFacesBean(component);\n@@ -83,7 +85,7 @@ protected void queueActionEvent(FacesContext context, UIComponent component)\n     // a calendar window with the _ldp JS function)\n     else\n     {\n-      Object submittedValue = (String) getSubmittedValue(bean);\n+      Object submittedValue = getSubmittedValue(bean);\n       Color color = null;\n       try\n       {\n@@ -104,7 +106,7 @@ protected void queueActionEvent(FacesContext context, UIComponent component)\n       RequestContext afContext = RequestContext.getCurrentInstance();\n \n       // =-=AEW Parameters?  Shouldn't we pass in the color?\n-      Map parameters = null;\n+      Map<String, Object> parameters = null;\n       afContext.launchDialog(GenericEntry.getGenericEntryViewRoot(context),\n                              parameters,\n                              component,\n@@ -117,6 +119,7 @@ protected void queueActionEvent(FacesContext context, UIComponent component)\n   /**\n    * Give subclasses a chance to override the ReturnEvent.\n    */\n+  @Override\n   protected void queueReturnEvent(\n     FacesContext context,\n     UIComponent  component,\n@@ -152,7 +155,7 @@ protected void queueReturnEvent(\n     event.queue();\n   }\n \n-\n+  @Override\n   protected void encodeAllAsElement(\n     FacesContext        context,\n     RenderingContext arc,\n@@ -176,6 +179,7 @@ protected void encodeAllAsElement(\n     arc.getProperties().remove(_CACHED_CHOOSE_ID);\n   }\n \n+  @Override\n   protected void renderTextField(\n     FacesContext        context,\n     RenderingContext arc,\n@@ -210,6 +214,7 @@ protected void renderTextField(\n     }\n   }\n \n+  @Override\n   protected void renderContent(\n     FacesContext        context,\n     RenderingContext arc,\n@@ -228,6 +233,7 @@ protected void renderContent(\n     }\n   }\n \n+  @Override\n   protected void renderAfterTextField(\n     FacesContext        context,\n     RenderingContext arc,\n@@ -249,6 +255,7 @@ protected void renderAfterTextField(\n     }\n   }\n \n+  @Override\n   protected void renderIcon(\n     FacesContext        context,\n     RenderingContext arc,\n@@ -271,14 +278,15 @@ protected void renderIcon(\n   /**\n    * Return a default converter.\n    */\n+  @Override\n   protected Converter getDefaultConverter(\n     FacesContext context,\n     FacesBean    bean)\n   {\n     return _DEFAULT_CONVERTER;\n   }\n \n-\n+  @Override\n   protected String getLaunchOnclick(\n     FacesContext        context,\n     RenderingContext arc,\n@@ -310,6 +318,7 @@ protected String getLaunchOnclick(\n     return onClickBuffer.toString();\n   }\n \n+  @Override\n   protected String getOnfocus(FacesBean bean)\n   {\n     String onfocus = super.getOnfocus(bean);\n@@ -337,6 +346,7 @@ protected String getOnfocus(FacesBean bean)\n     }\n   }\n \n+  @Override\n   protected String getOnblur(FacesBean bean)\n   {\n     String onblur = super.getOnblur(bean);\n@@ -349,8 +359,7 @@ protected String getOnblur(FacesBean bean)\n                                    onblur, false);\n   }\n \n-\n-\n+  @Override\n   protected Integer getDefaultColumns(RenderingContext arc, FacesBean bean)\n   {\n     Converter converter = getConverter(bean);\n@@ -366,14 +375,15 @@ protected Integer getDefaultColumns(RenderingContext arc, FacesBean bean)\n     return _DEFAULT_COLUMNS;\n   }\n \n+  @Override\n   protected Number getMaximumLength(FacesBean bean)\n   {\n     // Not supported for selectInputColor\n     // =-=AEW We could have a good default\n     return null;\n   }\n \n-\n+  @Override\n   protected String getButtonIconName()\n   {\n     return XhtmlConstants.AF_SELECT_INPUT_COLOR_LAUNCH_ICON_NAME;\n@@ -393,11 +403,13 @@ protected boolean isCompact(FacesBean bean)\n     return Boolean.TRUE.equals(o);\n   }\n \n+  @Override\n   protected String getRootStyleClass(FacesBean bean)\n   {\n     return \"af|inputColor\";\n   }\n \n+  @Override\n   protected String getContentStyleClass(FacesBean bean)\n   {\n     return \"af|inputColor::content\";\n@@ -425,6 +437,7 @@ private boolean _supportsSwatchAndChooser(RenderingContext arc)\n     return (arc.getAgent().getAgentType() != TrinidadAgent.TYPE_PDA);\n   }\n \n+  @Override\n   protected String getSearchDesc(FacesBean bean)\n   {\n     RenderingContext arc = RenderingContext.getCurrentInstance();\n@@ -531,6 +544,7 @@ private Color _getColorValue(FacesBean bean)\n \n   // Checks to see whether this is the first color field for\n   // a given chooseId, and if so renders a script\n+  @SuppressWarnings(\"unchecked\")\n   private void _renderFirstColorFieldScript(\n     FacesContext        context,\n     RenderingContext arc,\n@@ -550,12 +564,12 @@ private void _renderFirstColorFieldScript(\n     String id = getClientId(context, component);\n \n \n-    Map chooseColorIds = (Map)\n+    Map<String, Boolean> chooseColorIds = (Map<String, Boolean>)\n       arc.getProperties().get(_CHOOSE_COLOR_IDS_KEY);\n \n     if (chooseColorIds == null)\n     {\n-      chooseColorIds = new HashMap();\n+      chooseColorIds = new HashMap<String, Boolean>();\n       arc.getProperties().put(_CHOOSE_COLOR_IDS_KEY, chooseColorIds);\n     }\n ", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SimpleInputColorRenderer.java"}, {"additions": 25, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SimpleInputDateRenderer.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SimpleInputDateRenderer.java", "sha": "aa95f9fffe1c431f3f12ff39c527de36a3b9f1d2", "changes": 40, "status": "modified", "deletions": 15, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SimpleInputDateRenderer.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f", "patch": "@@ -30,6 +30,7 @@\n import javax.faces.convert.Converter;\n import javax.faces.convert.ConverterException;\n import javax.faces.convert.DateTimeConverter;\n+import javax.faces.validator.Validator;\n \n import org.apache.myfaces.trinidad.logging.TrinidadLogger;\n \n@@ -60,12 +61,14 @@ public SimpleInputDateRenderer()\n     super(CoreInputDate.TYPE);\n   }\n \n+  @Override\n   protected void findTypeConstants(FacesBean.Type type)\n   {\n     super.findTypeConstants(type);\n     _chooseIdKey = type.findKey(\"chooseId\");\n   }\n \n+  @Override\n   protected void queueActionEvent(FacesContext context, UIComponent component)\n   {\n     FacesBean bean = getFacesBean(component);\n@@ -80,7 +83,7 @@ protected void queueActionEvent(FacesContext context, UIComponent component)\n     // a calendar window with the _ldp JS function)\n     else\n     {\n-      Object submittedValue = (String) getSubmittedValue(bean);\n+      Object submittedValue = getSubmittedValue(bean);\n       Date date = null;\n       try\n       {\n@@ -110,7 +113,7 @@ protected void queueActionEvent(FacesContext context, UIComponent component)\n       if (date == null)\n         date = new Date();\n \n-      Map parameters = new HashMap();\n+      Map<String, Object> parameters = new HashMap<String, Object>();\n       parameters.put(XhtmlConstants.VALUE_PARAM, _getDateAsString(date));\n       parameters.put(XhtmlConstants.MIN_VALUE_PARAM,\n                      dtrv == null\n@@ -133,6 +136,7 @@ protected void queueActionEvent(FacesContext context, UIComponent component)\n   /**\n    * Give subclasses a chance to override the ReturnEvent.\n    */\n+  @Override\n   protected void queueReturnEvent(\n     FacesContext context,\n     UIComponent  component,\n@@ -169,7 +173,7 @@ protected void queueReturnEvent(\n     event.queue();\n   }\n \n-\n+  @Override\n   protected void encodeAllAsElement(\n     FacesContext        context,\n     RenderingContext arc,\n@@ -191,6 +195,7 @@ protected void encodeAllAsElement(\n     }\n   }\n \n+  @Override\n   protected void renderIcon(\n     FacesContext        context,\n     RenderingContext arc,\n@@ -213,6 +218,7 @@ protected void renderIcon(\n    * may map to \"medium\"\n    * @todo medium / default is  what it is defaulted to in faces\n    */\n+  @Override\n   protected Converter getDefaultConverter(\n     FacesContext context,\n     FacesBean    bean)\n@@ -258,6 +264,7 @@ protected Converter getDefaultConverter(\n     return converter;\n   }\n \n+  @Override\n   protected String getOnblur(FacesBean bean)\n   {\n     String onblur = super.getOnblur(bean);\n@@ -283,6 +290,7 @@ protected String getOnblur(FacesBean bean)\n     return XhtmlUtils.getChainedJS(buffer.toString(), onblur, false);\n   }\n \n+  @Override\n   protected String getOnfocus(FacesBean bean)\n   {\n     String onfocus = super.getOnfocus(bean);\n@@ -317,7 +325,7 @@ protected String getOnfocus(FacesBean bean)\n     }\n   }\n \n-\n+  @Override\n   protected String getLaunchOnclick(\n     FacesContext        context,\n     RenderingContext arc,\n@@ -379,7 +387,7 @@ protected String getLaunchOnclick(\n     return onClickBuffer.toString();\n   }\n \n-\n+  @Override\n   protected Integer getDefaultColumns(RenderingContext arc, FacesBean bean)\n   {\n     Converter converter = getConverter(bean);\n@@ -397,7 +405,7 @@ protected Integer getDefaultColumns(RenderingContext arc, FacesBean bean)\n     return _DEFAULT_COLUMNS;\n   }\n \n-\n+  @Override\n   protected String getButtonIconName()\n   {\n     return XhtmlConstants.AF_SELECT_INPUT_DATE_LAUNCH_ICON_NAME;\n@@ -408,6 +416,7 @@ protected String getChooseId(FacesBean bean)\n     return toString(bean.getProperty(_chooseIdKey));\n   }\n \n+  @Override\n   protected String getSearchDesc(FacesBean bean)\n   {\n     RenderingContext arc = RenderingContext.getCurrentInstance();\n@@ -417,12 +426,13 @@ protected String getSearchDesc(FacesBean bean)\n     return arc.getTranslatedString(_LAUNCH_PICKER_TIP_KEY);\n   }\n \n-\n+  @Override\n   protected String getRootStyleClass(FacesBean bean)\n   {\n     return \"af|inputDate\";\n   }\n \n+  @Override\n   protected String getContentStyleClass(FacesBean bean)\n   {\n     return \"af|inputDate::content\";\n@@ -447,6 +457,7 @@ private String _computeChooseId(\n   // Checks to see whether the current dateField should\n   // be active, and if so, renders a script that will activate\n   // it.\n+  @SuppressWarnings(\"unchecked\")\n   private void _checkIfActive(\n     FacesContext        context,\n     RenderingContext arc,\n@@ -459,13 +470,12 @@ private void _checkIfActive(\n \n     String id = getClientId(context, component);\n \n-\n-    Map activeDateFields = (Map)\n+    Map<String, Boolean> activeDateFields = (Map<String, Boolean>)\n       arc.getProperties().get(_ACTIVE_DATE_FIELDS_KEY);\n \n     if (activeDateFields == null)\n     {\n-      activeDateFields = new HashMap();\n+      activeDateFields = new HashMap<String, Boolean>();\n       arc.getProperties().put(_ACTIVE_DATE_FIELDS_KEY, activeDateFields);\n     }\n \n@@ -500,7 +510,7 @@ private void _checkIfActive(\n   //\n   private DateTimeRangeValidator _findDateTimeRangeValidator(FacesBean bean)\n   {\n-    Iterator validators = getValidators(bean);\n+    Iterator<Validator> validators = getValidators(bean);\n     while (validators.hasNext())\n     {\n       Object validator = validators.next();\n@@ -563,13 +573,11 @@ private static long _adjustTimeZone(Date date)\n     // properly ie. MIN_VALUE < (longValue + tzOffset) < MAX_VALUE.\n     if (tzOffset < 0)\n     {\n-     tzOffset = (long)Math.max((float)tzOffset,\n-                               (float)Long.MIN_VALUE - (float)dateValueInMs);\n+      tzOffset = Math.max(tzOffset, Long.MIN_VALUE - dateValueInMs);\n     }\n     else\n     {\n-     tzOffset = (long)Math.min((float)tzOffset,\n-                               (float)Long.MAX_VALUE - (float)dateValueInMs);\n+      tzOffset = Math.min(tzOffset, Long.MAX_VALUE - dateValueInMs);\n     }\n \n     // adjust the date in ms to the adjusted time zone.\n@@ -592,11 +600,13 @@ private DateTimeZoneOffsetScriptlet()\n     {\n     }\n \n+    @Override\n     public Object getScriptletKey()\n     {\n       return _DATE_TIME_ZONE_OFFSET_KEY;\n     }\n \n+    @Override\n     protected void outputScriptletContent(\n       FacesContext context,\n       RenderingContext arc)", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SimpleInputDateRenderer.java"}, {"additions": 12, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SimpleInputFileRenderer.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SimpleInputFileRenderer.java", "sha": "f6e0fade50f62f8ae06a5d526fc2b098ae9fde2b", "changes": 13, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SimpleInputFileRenderer.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f", "patch": "@@ -37,6 +37,7 @@ public SimpleInputFileRenderer()\n   //\n   // DECODE BEHAVIOR\n   // \n+  @Override\n   public Object getSubmittedValue(\n     FacesContext context,\n     UIComponent  component)\n@@ -59,6 +60,7 @@ public Object getSubmittedValue(\n     return result;\n   }\n \n+  @Override\n   public Object getConvertedValue(\n     FacesContext context,\n     UIComponent  component,\n@@ -79,6 +81,7 @@ public Object getConvertedValue(\n   /**\n    * <inputFile> cannot show a value.\n    */\n+  @Override\n   protected String getConvertedString(\n     FacesContext context,\n     UIComponent  component,\n@@ -87,6 +90,7 @@ protected String getConvertedString(\n     return null;\n   }\n \n+  @Override\n   protected String getDefaultInputType()\n   {\n     return \"file\";\n@@ -98,44 +102,51 @@ protected String getDefaultInputType()\n   // an inputFile\n   // \n \n+  @Override\n   public boolean isTextArea(\n     FacesBean bean)\n   {\n     return false;\n   }\n \n+  @Override\n   protected boolean isAutoSubmit(\n     FacesBean bean)\n   {\n     return false;\n   }\n \n+  @Override\n   protected boolean getSecret(FacesBean bean)\n   {\n     return false;\n   }\n \n+  @Override\n   protected Number getMaximumLength(FacesBean bean)\n   {\n     return null;\n   }\n \n-\n+  @Override\n   protected boolean getReadOnly(FacesContext context, FacesBean bean)\n   {\n     return false;\n   }\n   \n+  @Override\n   protected String getRootStyleClass(FacesBean bean)  \n   {\n     return \"af|inputFile\";\n   }\n \n+  @Override\n   protected String getContentStyleClass(FacesBean bean)\n   {\n     return \"af|inputFile::content\";\n   }\n \n+  @Override\n   protected Integer getDefaultColumns(RenderingContext arc, FacesBean bean)\n   {\n     return null;", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SimpleInputFileRenderer.java"}, {"additions": 14, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SimpleInputListOfValuesRenderer.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SimpleInputListOfValuesRenderer.java", "sha": "b5d482336e1927f5d589224405517f4d73df66c6", "changes": 15, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SimpleInputListOfValuesRenderer.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f", "patch": "@@ -53,6 +53,7 @@ protected SimpleInputListOfValuesRenderer(FacesBean.Type type)\n     super(type);\n   }\n   \n+  @Override\n   protected void findTypeConstants(FacesBean.Type type)\n   {\n     super.findTypeConstants(type);\n@@ -65,6 +66,8 @@ protected void findTypeConstants(FacesBean.Type type)\n   // DECODE BEHAVIOR\n   //\n \n+  @SuppressWarnings(\"unchecked\")\n+  @Override\n   public void decode(FacesContext context, UIComponent component)\n   {\n     super.decode(context, component);\n@@ -81,7 +84,9 @@ public void decode(FacesContext context, UIComponent component)\n     }\n     else\n     {\n-      Map parameterMap = context.getExternalContext().getRequestParameterMap();\n+      Map<String, String> parameterMap = \n+        context.getExternalContext().getRequestParameterMap();\n+      \n       Object source = parameterMap.get(\"source\");\n       String clientId = component.getClientId(context);\n       if ((source != null) && source.equals(clientId))\n@@ -125,6 +130,7 @@ protected void queueActionEvent(\n   // Encode behavior\n   //\n \n+  @Override\n   protected void encodeAllAsElement(\n     FacesContext        context,\n     RenderingContext arc,\n@@ -147,6 +153,7 @@ protected void encodeAllAsElement(\n       rw.endElement(\"span\");\n   }\n   \n+  @Override\n   protected void encodeAllAsNonElement(\n     FacesContext        context,\n     RenderingContext arc,\n@@ -171,6 +178,7 @@ protected void encodeAllAsNonElement(\n    * the span and root dom element styles on the text field, which we \n    * don't, since we do it ourselves on our root dom element.\n    */\n+  @Override\n   protected boolean isSimpleInputText(FacesBean bean)\n   {\n     return false;\n@@ -317,12 +325,14 @@ protected String getLaunchOnclick(\n     }\n   }\n \n+  @Override\n   public boolean isTextArea(\n     FacesBean bean)\n   {\n     return false;\n   }\n \n+  @Override\n   protected boolean getSecret(FacesBean bean)\n   {\n     return false;\n@@ -332,6 +342,7 @@ protected boolean getSecret(FacesBean bean)\n    * We want onclick to move from the input field to the button;\n    * @see #getButtonOnclick\n    */\n+  @Override\n   protected String getOnclick(FacesBean bean)\n   {\n     return null;\n@@ -360,11 +371,13 @@ protected String getIcon(\n     return toUri(bean.getProperty(_iconKey));\n   }\n \n+  @Override\n   protected String getRootStyleClass(FacesBean bean)  \n   {\n     return \"af|inputListOfValues\";\n   }\n \n+  @Override\n   protected String getContentStyleClass(FacesBean bean)\n   {\n     return \"af|inputListOfValues::content\";", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SimpleInputListOfValuesRenderer.java"}, {"additions": 21, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SimpleInputTextRenderer.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SimpleInputTextRenderer.java", "sha": "52f9824ded5012a1be1716735f67bb608eea321b", "changes": 29, "status": "modified", "deletions": 8, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SimpleInputTextRenderer.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f", "patch": "@@ -47,6 +47,7 @@ protected SimpleInputTextRenderer(FacesBean.Type type)\n     super(type);\n   }\n \n+  @Override\n   protected void findTypeConstants(FacesBean.Type type)\n   {\n     super.findTypeConstants(type);\n@@ -59,7 +60,7 @@ protected void findTypeConstants(FacesBean.Type type)\n \n   }\n \n-\n+  @Override\n   public Object getSubmittedValue(\n     FacesContext context,\n     UIComponent  component)\n@@ -86,7 +87,7 @@ else if (isTextArea(bean))\n     return submitted;\n   }\n \n-\n+  @Override\n   protected void encodeAllAsElement(\n     FacesContext        context,\n     RenderingContext arc,\n@@ -152,6 +153,7 @@ protected void encodeAllAsElement(\n \n   }    \n        \n+  @Override\n   protected void renderAllAttributes(\n     FacesContext        context,\n     RenderingContext arc,\n@@ -240,11 +242,13 @@ protected void renderAllAttributes(\n \n   }\n   \n+  @Override\n   protected String getContentStyleClass(FacesBean bean)  \n   {\n     return \"af|inputText::content\";\n   }\n   \n+  @Override\n   protected String getRootStyleClass(FacesBean bean)  \n   {\n     return \"af|inputText\";\n@@ -280,6 +284,7 @@ protected String getDefaultInputType()\n   /**\n    * Renders event handlers for the node.\n    */\n+  @Override\n   protected void renderEventHandlers(\n     FacesContext context,\n     FacesBean    bean) throws IOException\n@@ -290,6 +295,7 @@ protected void renderEventHandlers(\n     rw.writeAttribute(\"onselect\", getOnselect(bean), \"onselect\");\n   }\n \n+  @Override\n   protected void encodeAllAsNonElement(\n     FacesContext        context,\n     RenderingContext arc,\n@@ -331,6 +337,7 @@ protected void encodeAllAsNonElement(\n   /**\n    * @todo Remove if never necessary\n    */\n+  @Override\n   protected void renderNonElementContent(\n     FacesContext        context,\n     RenderingContext arc,\n@@ -510,7 +517,7 @@ private void _writeTextLineWithBreaks(\n     }\n   }\n \n-\n+  @Override\n   protected String getOnkeypress(\n     FacesBean bean\n     )\n@@ -529,7 +536,7 @@ protected String getOnkeypress(\n     return onKeyPress;\n   }\n \n-\n+  @Override\n   protected String getOnkeydown(FacesBean bean)\n   {\n     String onKeydown = super.getOnkeydown(bean);\n@@ -546,6 +553,7 @@ protected String getOnkeydown(FacesBean bean)\n   /**\n    * @todo We have to \"getCurrentInstance()\" *twice*.  UGH!\n    */\n+  @Override\n   protected String getOnfocus(FacesBean bean)\n   {\n     String onfocus = super.getOnfocus(bean);\n@@ -558,15 +566,16 @@ protected String getOnfocus(FacesBean bean)\n       RenderingContext arc = RenderingContext.getCurrentInstance();\n       if (!supportsReadonlyFormElements(arc))\n       {\n-        onfocus = (String) XhtmlUtils.getChainedJS(\"this.blur()\",\n-                                                   onfocus,\n-                                                   true);\n+        onfocus = XhtmlUtils.getChainedJS(\"this.blur()\",\n+                                          onfocus,\n+                                          true);\n       }\n     }\n \n     return onfocus;\n   }\n \n+  @Override\n   protected String getOnchange(\n     FacesBean bean\n     )\n@@ -641,6 +650,9 @@ protected boolean getSecret(FacesBean bean)\n   /**\n    * @todo - Find a efficient way to identify that this is a numeric field\n    */\n+  //-= Simon Lessard =-\n+  //TODO:  This method is not even used locally\n+  @SuppressWarnings(\"unused\")\n   private boolean _isNumericField(\n //    FacesBean bean\n     )\n@@ -664,6 +676,7 @@ public boolean isTextArea(\n   /**\n    * @todo RENABLE ONFOCUS HACK\n    */\n+  @Override\n   protected boolean renderReadOnlyAsElement(\n     RenderingContext arc,\n     FacesBean           bean)\n@@ -721,7 +734,7 @@ static private String _getMaxLengthFunction(\n     if (userFunc == null)\n       return functionCall;\n \n-    return (String) XhtmlUtils.getChainedJS(functionCall, userFunc, true);\n+    return XhtmlUtils.getChainedJS(functionCall, userFunc, true);\n   }\n \n   /**", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SimpleInputTextRenderer.java"}, {"additions": 8, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SimpleSelectBooleanCheckboxRenderer.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SimpleSelectBooleanCheckboxRenderer.java", "sha": "b2ed64aa9017006751a6ad6e91c70f7c4f4726fa", "changes": 9, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SimpleSelectBooleanCheckboxRenderer.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f", "patch": "@@ -40,6 +40,7 @@ public SimpleSelectBooleanCheckboxRenderer(FacesBean.Type type)\n   //decode\n   //**********************\n   \n+  @Override\n   public Object getSubmittedValue(\n     FacesContext context,\n     UIComponent  component)\n@@ -55,17 +56,20 @@ public Object getSubmittedValue(\n   //encode\n   //**********************\n \n+  @Override\n   protected Object getValueAttr(RenderingContext arc)\n   {\n     // HTML 3.2 specification, default value for checkboxes\n     return \"t\";\n   }\n \n+  @Override\n   protected Object getType()\n   {\n     return \"checkbox\";\n   }\n \n+  @Override\n   protected String getIconAltTextName(\n     boolean selected\n   )\n@@ -75,6 +79,7 @@ protected String getIconAltTextName(\n       : \"af_selectBooleanCheckbox.READONLY_NOT_CHECKED_TIP\");\n   }\n   \n+  @Override\n   protected String getIconName(\n     boolean selected,\n     boolean disabled\n@@ -97,7 +102,7 @@ protected String getIconName(\n     return iconName;           \n   }\n   \n-\n+  @Override\n   protected String getOnclick(\n     FacesBean bean\n     )\n@@ -115,11 +120,13 @@ else if (auto != null)\n     return onClick;\n   }  \n   \n+  @Override\n   protected String getContentStyleClass(FacesBean bean)\n   {\n    return \"af|selectBooleanCheckbox::content\";\n   }\n   \n+  @Override\n   protected String getRootStyleClass(FacesBean bean)\n   {\n    return \"af|selectBooleanCheckbox\";", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SimpleSelectBooleanCheckboxRenderer.java"}, {"additions": 15, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SimpleSelectBooleanRadioRenderer.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SimpleSelectBooleanRadioRenderer.java", "sha": "58bf3d767d628844714567370d9cab279f3b3680", "changes": 19, "status": "modified", "deletions": 4, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SimpleSelectBooleanRadioRenderer.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f", "patch": "@@ -39,6 +39,7 @@ public SimpleSelectBooleanRadioRenderer(FacesBean.Type type)\n     super(type);\n   }\n   \n+  @Override\n   protected void findTypeConstants(FacesBean.Type type)\n   {\n     super.findTypeConstants(type);\n@@ -49,6 +50,7 @@ protected void findTypeConstants(FacesBean.Type type)\n   //decode\n   //**********************\n   \n+  @Override\n   public Object getSubmittedValue(\n     FacesContext context,\n     UIComponent  component)\n@@ -71,16 +73,19 @@ public Object getSubmittedValue(\n   //encode\n   //**********************\n \n+  @Override\n   protected Object getValueAttr(RenderingContext arc)\n   {\n     return arc.getCurrentClientId();\n   }\n \n+  @Override\n   protected Object getType()\n   {\n     return \"radio\";\n   }\n \n+  @Override\n   protected String getIconAltTextName(\n     boolean selected\n   )\n@@ -90,6 +95,7 @@ protected String getIconAltTextName(\n       : \"af_selectBooleanRadio.READONLY_NOT_CHECKED_TIP\");\n   }\n   \n+  @Override\n   protected String getIconName(\n     boolean selected,\n     boolean disabled\n@@ -113,6 +119,7 @@ protected String getIconName(\n     return iconName;           \n   }\n \n+  @Override\n   protected void renderNameAttribute(\n     FacesContext        context,\n     RenderingContext arc,\n@@ -131,26 +138,27 @@ protected void renderNameAttribute(\n    * Returns true if the component should render the ID as a name.\n    * By default, don't if the component is readonly.\n    */\n+  @Override\n   protected boolean shouldRenderName(\n     FacesContext context,\n     UIComponent  component)\n   {\n     return false;\n   }\n-\n-\n+  \n+  @Override\n   protected boolean isRadio()\n   {\n     return true;\n   }\n \n-\n+  @Override\n   protected String getCompositeId(String clientId)\n   {\n     return clientId + XhtmlConstants.COMPOSITE_ID_EXTENSION + \"r\";   \n   }\n   \n-\n+  @Override\n   protected void renderSpanEventHandlers(\n     FacesContext context, \n     FacesBean    bean) throws IOException\n@@ -170,6 +178,7 @@ protected void renderSpanEventHandlers(\n     rw.writeAttribute(\"onmouseup\", getOnmouseup(bean),  \"onmouseup\");\n   }\n   \n+  @Override\n   protected void renderInputEventHandlers(\n     FacesContext context, \n     FacesBean    bean) throws IOException\n@@ -186,11 +195,13 @@ protected String getGroup(FacesBean bean)\n     return toString(bean.getProperty(_groupKey));\n   }\n   \n+  @Override\n   protected String getContentStyleClass(FacesBean bean)\n   {\n    return \"af|selectBooleanRadio::content\";\n   }\n   \n+  @Override\n   protected String getRootStyleClass(FacesBean bean)\n   {\n    return \"af|selectBooleanRadio\";", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SimpleSelectBooleanRadioRenderer.java"}, {"additions": 3, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SimpleSelectBooleanRenderer.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SimpleSelectBooleanRenderer.java", "sha": "b7b9e2f6db34cd438aa6871ed2f2e9c7352c8a90", "changes": 4, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SimpleSelectBooleanRenderer.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f", "patch": "@@ -37,6 +37,7 @@ public SimpleSelectBooleanRenderer(FacesBean.Type type)\n     super(type);\n   }\n   \n+  @Override\n   protected void findTypeConstants(FacesBean.Type type)\n   {\n     super.findTypeConstants(type);\n@@ -77,6 +78,7 @@ protected void renderNameAttribute(\n    * @TODO use new renderAllAttributes that doesn't render styleclass once\n    * Jeanne adds it.\n    */\n+  @Override\n   protected void encodeAllAsElement(\n     FacesContext        context,\n     RenderingContext arc,\n@@ -172,7 +174,7 @@ protected void encodeAllAsElement(\n       writer.endElement(\"span\");      \n   }\n \n-\n+  @Override\n   protected void encodeAllAsNonElement(\n     FacesContext        context,\n     RenderingContext arc,", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SimpleSelectBooleanRenderer.java"}, {"additions": 13, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SimpleSelectManyCheckboxRenderer.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SimpleSelectManyCheckboxRenderer.java", "sha": "9c3fae31bce686f8491b78ef39426173ca9dec34", "changes": 16, "status": "modified", "deletions": 3, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SimpleSelectManyCheckboxRenderer.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f", "patch": "@@ -44,6 +44,7 @@ public SimpleSelectManyCheckboxRenderer()\n     super(CoreSelectManyCheckbox.TYPE);\n   }\n   \n+  @Override\n   protected void findTypeConstants(FacesBean.Type type)\n   {\n     super.findTypeConstants(type);\n@@ -55,12 +56,13 @@ protected void findTypeConstants(FacesBean.Type type)\n   //\n   // ENCODE BEHAVIOR\n   //\n+  @Override\n   protected void encodeElementContent(\n     FacesContext        context,\n     RenderingContext arc,\n     UIComponent         component,\n     FacesBean           bean,\n-    List                selectItems,\n+    List<SelectItem>    selectItems,\n     int[]               selectedIndices,\n     Converter           converter,\n     boolean             valuePassThru) throws IOException\n@@ -108,7 +110,7 @@ protected void encodeSelectItems(\n     RenderingContext arc,\n     UIComponent         component,\n     FacesBean           bean,\n-    List                selectItems,\n+    List<SelectItem>    selectItems,\n     int[]               selectedIndices,\n     Converter           converter,\n     boolean             valuePassThru) throws IOException\n@@ -141,7 +143,7 @@ protected void encodeSelectItems(\n       if (selected)\n         selectedEntry++;\n \n-      SelectItem item = (SelectItem) selectItems.get(i);\n+      SelectItem item = selectItems.get(i);\n       if (encodeSelectItem(context, arc, component, item, converter,\n                            valuePassThru, accessKey,\n                            i, selected, disabled,\n@@ -237,6 +239,7 @@ protected boolean encodeSelectItem(\n     return true;\n   }\n \n+  @Override\n   protected void renderBetweenNonElements(\n     FacesContext        context,\n     RenderingContext arc,\n@@ -249,6 +252,7 @@ protected void renderBetweenNonElements(\n       super.renderBetweenNonElements(context, arc, component, bean);\n   }\n \n+  @Override\n   protected void renderId(\n     FacesContext context,\n     UIComponent  component) throws IOException\n@@ -265,6 +269,7 @@ protected void renderId(\n    * In Gecko, they bubble up, but in IE, they don't, so\n    * they have to go on the items.\n    */\n+  @Override\n   protected void renderFormEventHandlers(\n     FacesContext context,\n     FacesBean    bean) throws IOException\n@@ -276,6 +281,7 @@ protected void renderFormEventHandlers(\n    * Disable rendering \"onclick\" on the parent;  it needs to\n    * go on the individual radio buttons\n    */\n+  @Override\n   protected String getOnclick(\n     FacesBean bean\n     )\n@@ -328,15 +334,19 @@ protected String getLayout(FacesBean bean)\n \n   // Never render the \"hidden label\";  labels entirely go on the individual\n   // items\n+  @Override\n   protected boolean isHiddenLabelRequired(RenderingContext arc)\n   {\n     return false;\n   } \n+  \n+  @Override\n   protected String getContentStyleClass(FacesBean bean)\n   {\n    return \"af|selectManyCheckbox::content\";\n   }\n   \n+  @Override\n   protected String getRootStyleClass(FacesBean bean)\n   {\n    return \"af|selectManyCheckbox\";", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SimpleSelectManyCheckboxRenderer.java"}, {"additions": 8, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SimpleSelectManyListboxRenderer.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SimpleSelectManyListboxRenderer.java", "sha": "aeff52fbedf7e634bc2fd1db9bedfa7fd38f1057", "changes": 11, "status": "modified", "deletions": 3, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SimpleSelectManyListboxRenderer.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f", "patch": "@@ -46,18 +46,20 @@ public SimpleSelectManyListboxRenderer()\n     super(CoreSelectManyListbox.TYPE);\n   }\n   \n+  @Override\n   protected void findTypeConstants(FacesBean.Type type)\n   {\n     super.findTypeConstants(type);\n     _sizeKey = type.findKey(\"size\");\n   }\n \n+  @Override\n   protected void encodeElementContent(\n     FacesContext        context,\n-    RenderingContext arc,\n+    RenderingContext    arc,\n     UIComponent         component,\n     FacesBean           bean,\n-    List                selectItems,\n+    List<SelectItem>    selectItems,\n     int[]               selectedIndices,\n     Converter           converter,\n     boolean             valuePassThru) throws IOException\n@@ -83,7 +85,7 @@ protected void encodeElementContent(\n       if (selected)\n         selectedEntry++;\n \n-      SelectItem item = (SelectItem) selectItems.get(i);\n+      SelectItem item = selectItems.get(i);\n       SimpleSelectOneRenderer.encodeOption(\n            context, arc, component, item, converter,\n            valuePassThru, i, selected);\n@@ -96,6 +98,7 @@ protected void encodeElementContent(\n   /**\n    * Add autosubmit script\n    */\n+  @Override\n   protected String getOnchange(\n     FacesBean bean\n     )\n@@ -124,11 +127,13 @@ protected int getSize(FacesBean bean)\n     return toInt(o);\n   }\n   \n+  @Override\n   protected String getContentStyleClass(FacesBean bean)\n   {\n     return \"af|selectManyListbox::content\";\n   }\n   \n+  @Override\n   protected String getRootStyleClass(FacesBean bean)  \n   {\n     return \"af|selectManyListbox\";", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SimpleSelectManyListboxRenderer.java"}, {"additions": 37, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SimpleSelectManyRenderer.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SimpleSelectManyRenderer.java", "sha": "84e57b07575d1a4e81fed8dd2b6785293bd91f92", "changes": 68, "status": "modified", "deletions": 31, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SimpleSelectManyRenderer.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f", "patch": "@@ -57,6 +57,7 @@ public SimpleSelectManyRenderer(FacesBean.Type type)\n     super(type);\n   }\n \n+  @Override\n   protected void findTypeConstants(FacesBean.Type type)\n   {\n     super.findTypeConstants(type);\n@@ -70,6 +71,7 @@ protected void findTypeConstants(FacesBean.Type type)\n    * @todo This throws a ConverterException on the first unconvertable\n    *  value;  it should wait\n    */\n+  @Override\n   public Object getConvertedValue(\n     FacesContext context,\n     UIComponent  component,\n@@ -88,7 +90,7 @@ public Object getConvertedValue(\n     if ( converter == null)\n       converter = getDefaultConverter(context, bean);\n \n-    Class modelClass = null;\n+    Class<?> modelClass = null;\n     ValueBinding binding = getValueBinding(bean);\n     if (binding != null)\n     {\n@@ -115,8 +117,7 @@ public Object getConvertedValue(\n     }\n   }\n \n-\n-\n+  @Override\n   public Object getSubmittedValue(\n     FacesContext context,\n     UIComponent  component)\n@@ -137,6 +138,7 @@ public Object getSubmittedValue(\n    * Override to return a Converter for the items in the value,\n    * not the value itself.\n    */\n+  @Override\n   protected Converter getDefaultConverter(\n     FacesContext context,\n     FacesBean    bean)\n@@ -145,13 +147,13 @@ protected Converter getDefaultConverter(\n     if (binding == null)\n       return null;\n \n-    Class type = binding.getType(context);\n+    Class<?> type = binding.getType(context);\n     if ((type == null) || type.isAssignableFrom(List.class))\n       return null;\n \n     if (type.isArray())\n     {\n-      Class itemClass = type.getComponentType();\n+      Class<?> itemClass = type.getComponentType();\n       return ConverterUtils.createConverter(context, itemClass);\n     }\n \n@@ -165,15 +167,15 @@ static private Object _convertSubmittedValue(\n     UIComponent  component,\n     Converter    converter,\n     String[]     values,\n-    Class        modelClass) throws ConverterException\n+    Class<?>     modelClass) throws ConverterException\n   {\n     // Handle lists\n     if ((modelClass == null) || modelClass.isAssignableFrom(List.class))\n     {\n       if (converter == null)\n         return Arrays.asList(values);\n \n-      ArrayList newList = new ArrayList(values.length);\n+      ArrayList<Object> newList = new ArrayList<Object>(values.length);\n       for (int i = 0; i < values.length; i++)\n       {\n         // Note - any error will result in an immediate ConverterException\n@@ -188,7 +190,7 @@ else if (modelClass.isArray())\n       if (converter == null)\n         return values;\n \n-      Class itemClass = modelClass.getComponentType();\n+      Class<?> itemClass = modelClass.getComponentType();\n       Object convertedArray = Array.newInstance(itemClass, values.length);\n       for (int i = 0; i < values.length; i++)\n       {\n@@ -222,9 +224,10 @@ static private Object _convertIndexedSubmittedValue(\n     UIComponent  component,\n     Converter    converter,\n     String[]     values,\n-    Class        modelClass) throws ConverterException\n+    Class<?>     modelClass) throws ConverterException\n   {\n-    List selectItems = SelectItemSupport.getSelectItems(component, converter);\n+    List<SelectItem> selectItems = \n+      SelectItemSupport.getSelectItems(component, converter);\n \n     // No selectItems automatically means that we failed to convert\n     if ((selectItems == null) || (selectItems.isEmpty()))\n@@ -233,7 +236,7 @@ static private Object _convertIndexedSubmittedValue(\n       _throwConversionError(context, component);\n     }\n \n-    assert (values instanceof String[]);\n+    // -= Simon Lessard =- Useless assertion: assert (values instanceof String[]);\n \n     // OK, is this a List or an array?\n     boolean isList = ((modelClass == null) ||\n@@ -247,17 +250,17 @@ static private Object _convertIndexedSubmittedValue(\n \n \n     // Create either a List or array\n-    List     objectList;\n-    Object   objectArray;\n+    List<Object> objectList;\n+    Object       objectArray;\n     if (isList)\n     {\n-      objectList = new ArrayList(values.length);\n+      objectList = new ArrayList<Object>(values.length);\n       objectArray = null;\n     }\n     else\n     {\n       objectList = null;\n-      Class itemClass = modelClass.getComponentType();\n+      Class<?> itemClass = modelClass.getComponentType();\n       // Use Array API instead of Object[] to support primitive types\n       objectArray = Array.newInstance(itemClass, values.length);\n     }\n@@ -273,7 +276,7 @@ static private Object _convertIndexedSubmittedValue(\n \n         if (( -1 < index) && (selectItems.size() > index))\n         {\n-          SelectItem item = (SelectItem)selectItems.get(index);\n+          SelectItem item = selectItems.get(index);\n           if (item == null)\n             continue;\n \n@@ -301,7 +304,7 @@ static private Object _convertIndexedSubmittedValue(\n       return objectArray;\n   }\n \n-\n+  @Override\n   protected void encodeAllAsElement(\n     FacesContext        context,\n     RenderingContext arc,\n@@ -330,7 +333,7 @@ protected void encodeAllAsElement(\n                       getRequiredMessageKey());\n     }\n \n-    List selectItems = SelectItemSupport.getSelectItems(component, converter);\n+    List<SelectItem> selectItems = SelectItemSupport.getSelectItems(component, converter);\n     int selectedIndices[] = _getSelectedIndices(context,\n                                                 component,\n                                                 bean,\n@@ -379,11 +382,12 @@ abstract protected void encodeElementContent(\n     RenderingContext arc,\n     UIComponent         component,\n     FacesBean           bean,\n-    List                selectItems,\n+    List<SelectItem>    selectItems,\n     int[]               selectedIndices,\n     Converter           converter,\n     boolean             valuePassThru) throws IOException;\n \n+  @Override\n   protected void renderNonElementContent(\n     FacesContext        context,\n     RenderingContext arc,\n@@ -398,7 +402,9 @@ protected void renderNonElementContent(\n     // =-=AEW If needed, this could be made more efficient\n     // by iterating through the list instead of getting\n     // all the items\n-    List selectItems = SelectItemSupport.getSelectItems(component, converter);\n+    List<SelectItem> selectItems = \n+      SelectItemSupport.getSelectItems(component, converter);\n+    \n     int selectedIndices[] = _getSelectedIndices(context,\n                                                 component,\n                                                 bean,\n@@ -414,7 +420,7 @@ protected void renderNonElementContent(\n         renderBetweenNonElements(context, arc, component, bean);\n       }\n \n-      SelectItem item = (SelectItem) selectItems.get(selectedIndices[i]);\n+      SelectItem item = selectItems.get(selectedIndices[i]);\n       rw.writeText(item.getLabel(), null);\n     }\n   }\n@@ -430,13 +436,12 @@ protected void renderBetweenNonElements(\n     rw.endElement(\"br\");\n   }\n \n-\n+  @Override\n   protected String getRequiredMessageKey()\n   {\n     return UIXSelectMany.REQUIRED_MESSAGE_ID;\n   }\n \n-\n   protected boolean getValuePassThru(FacesBean bean)\n   {\n     Object o = bean.getProperty(_valuePassThruKey);\n@@ -451,11 +456,12 @@ protected boolean getValuePassThru(FacesBean bean)\n    * Return all the selected indices, in sorted order.  (There\n    * may be trailing -1's in case of an error)\n    */\n+  @SuppressWarnings(\"unchecked\")\n   private int[] _getSelectedIndices(\n     FacesContext        context,\n     UIComponent         component,\n     FacesBean           bean,\n-    List                selectItems,\n+    List<SelectItem>    selectItems,\n     Converter           converter,\n     boolean             valuePassThru)\n   {\n@@ -495,7 +501,7 @@ protected boolean getValuePassThru(FacesBean bean)\n       else\n       {\n         String[] values = (String[]) submittedValue;\n-        List valuesList = new ArrayList(values.length);\n+        List<Object> valuesList = new ArrayList<Object>(values.length);\n         for (int i = 0; i < values.length; i++)\n         {\n           valuesList.add(converter.getAsObject(context,\n@@ -511,16 +517,16 @@ protected boolean getValuePassThru(FacesBean bean)\n       return _EMPTY_INT_ARRAY;\n \n     // Now, get the value looking like a list\n-    List valueList;\n+    List<Object> valueList;\n     if (value instanceof List)\n     {\n       // Make a copy of the list so we can mutate it safely\n-      valueList = new ArrayList((List) value);\n+      valueList = new ArrayList<Object>((List<Object>) value);\n     }\n     else if (value.getClass().isArray())\n     {\n       int length = Array.getLength(value);\n-      valueList = new ArrayList(length);\n+      valueList = new ArrayList<Object>(length);\n       for (int i = 0; i < length; i++)\n       {\n         valueList.add(Array.get(value, i));\n@@ -529,7 +535,7 @@ else if (value.getClass().isArray())\n     else\n     {\n       // Let's just take the one value as a single element\n-      valueList = new ArrayList(1);\n+      valueList = new ArrayList<Object>(1);\n       valueList.add(value);\n     }\n \n@@ -540,7 +546,7 @@ else if (value.getClass().isArray())\n     int lastEntry = 0;\n     for (int i = 0; i < itemCount; i++)\n     {\n-      SelectItem item = (SelectItem) selectItems.get(i);\n+      SelectItem item = selectItems.get(i);\n       if (item == null)\n         continue;\n \n@@ -595,7 +601,7 @@ static private void _throwConversionError(\n \n \n   static private void _throwUnsupportedModelType(\n-    FacesContext context, Class type, UIComponent component)\n+    FacesContext context, Class<?> type, UIComponent component)\n       throws ConverterException\n   {\n     throw new ConverterException(", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SimpleSelectManyRenderer.java"}, {"additions": 11, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SimpleSelectOneChoiceRenderer.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SimpleSelectOneChoiceRenderer.java", "sha": "9a844a788413cb86b925bc4ad641e03302c45394", "changes": 15, "status": "modified", "deletions": 4, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SimpleSelectOneChoiceRenderer.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f", "patch": "@@ -42,22 +42,23 @@ public SimpleSelectOneChoiceRenderer()\n     super(CoreSelectOneChoice.TYPE);\n   }\n \n+  @Override\n   protected void findTypeConstants(FacesBean.Type type)\n   {\n     super.findTypeConstants(type);\n     _unselectedLabelKey = type.findKey(\"unselectedLabel\");\n   }\n \n-\n   //\n   // ENCODE BEHAVIOR\n   // \n+  @Override\n   protected void encodeElementContent(\n     FacesContext        context,\n     RenderingContext arc,\n     UIComponent         component,\n     FacesBean           bean,\n-    List                selectItems,\n+    List<SelectItem>    selectItems,\n     int                 selectedIndex,\n     Converter           converter,\n     boolean             valuePassThru) throws IOException\n@@ -79,7 +80,7 @@ protected void encodeSelectItems(\n     RenderingContext arc,\n     UIComponent         component,\n     FacesBean           bean,\n-    List                selectItems,\n+    List<SelectItem>    selectItems,\n     int                 selectedIndex,\n     Converter           converter,\n     boolean             valuePassThru) throws IOException\n@@ -116,7 +117,7 @@ else if (unselectedLabel != null)\n \n     for (int i = 0; i < size; i++)\n     {\n-      SelectItem item = (SelectItem) selectItems.get(i);\n+      SelectItem item = selectItems.get(i);\n       encodeOption(context, arc, component, item, converter,\n                    valuePassThru, i, selectedIndex == i);\n     }\n@@ -127,6 +128,7 @@ else if (unselectedLabel != null)\n   /**\n    * In Internet Explorer, handle autosubmit.\n    */\n+  @Override\n   protected String getOnclick(\n     FacesBean bean)\n   {\n@@ -155,6 +157,7 @@ protected String getOnclick(\n   /**\n    * In Internet Explorer, handle autosubmit.\n    */\n+  @Override\n   protected String getOnblur(\n     FacesBean bean)\n   {\n@@ -175,6 +178,7 @@ protected String getOnblur(\n   /**\n    * Add autosubmit script, and autosync script.\n    */\n+  @Override\n   protected String getOnchange(\n     FacesBean bean\n     )\n@@ -207,16 +211,19 @@ protected String getOnchange(\n     return XhtmlUtils.getChainedJS(onchange, auto, true);\n   }\n \n+  @Override\n   protected String getUnselectedLabel(FacesBean bean)\n   {\n     return toString(bean.getProperty(_unselectedLabelKey));\n   }\n   \n+  @Override\n   protected String getContentStyleClass(FacesBean bean)\n   {\n     return \"af|selectOneChoice::content\";\n   }\n   \n+  @Override\n   protected String getRootStyleClass(FacesBean bean)  \n   {\n     return \"af|selectOneChoice\";", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SimpleSelectOneChoiceRenderer.java"}, {"additions": 8, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SimpleSelectOneListboxRenderer.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SimpleSelectOneListboxRenderer.java", "sha": "c1afccc4a8ee66ba8907d4290f966869793daadd", "changes": 10, "status": "modified", "deletions": 2, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SimpleSelectOneListboxRenderer.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f", "patch": "@@ -43,6 +43,7 @@ public SimpleSelectOneListboxRenderer()\n     super(CoreSelectOneListbox.TYPE);\n   }\n   \n+  @Override\n   protected void findTypeConstants(FacesBean.Type type)\n   {\n     super.findTypeConstants(type);\n@@ -71,12 +72,13 @@ static public int getListSize(\n   //\n   // ENCODE BEHAVIOR\n   // \n+  @Override\n   protected void encodeElementContent(\n     FacesContext        context,\n     RenderingContext arc,\n     UIComponent         component,\n     FacesBean           bean,\n-    List                selectItems,\n+    List<SelectItem>    selectItems,\n     int                 selectedIndex,\n     Converter           converter,\n     boolean             valuePassThru) throws IOException\n@@ -104,14 +106,15 @@ protected void encodeElementContent(\n \n     for (int i = 0; i < count; i++)\n     {\n-      SelectItem item = (SelectItem) selectItems.get(i);\n+      SelectItem item = selectItems.get(i);\n       encodeOption(context, arc, component, item, converter,\n                    valuePassThru, i, selectedIndex == i);\n     }\n     \n     writer.endElement(\"select\");\n   }\n \n+  @Override\n   protected String getUnselectedLabel(FacesBean bean)\n   {\n     return toString(bean.getProperty(_unselectedLabelKey));\n@@ -120,6 +123,7 @@ protected String getUnselectedLabel(FacesBean bean)\n   /**\n    * Add autosubmit script\n    */\n+  @Override\n   protected String getOnchange(\n     FacesBean bean\n     )\n@@ -146,11 +150,13 @@ protected int getSize(FacesBean bean)\n     return toInt(o);\n   }\n   \n+  @Override\n   protected String getContentStyleClass(FacesBean bean)\n   {\n     return \"af|selectOneListbox::content\";\n   }\n   \n+  @Override\n   protected String getRootStyleClass(FacesBean bean)  \n   {\n     return \"af|selectOneListbox\";", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SimpleSelectOneListboxRenderer.java"}, {"additions": 12, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SimpleSelectOneRadioRenderer.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SimpleSelectOneRadioRenderer.java", "sha": "e4e9e955f72125753b64998fbffca4a7fbd5a40d", "changes": 15, "status": "modified", "deletions": 3, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SimpleSelectOneRadioRenderer.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f", "patch": "@@ -44,6 +44,7 @@ public SimpleSelectOneRadioRenderer()\n     super(CoreSelectOneRadio.TYPE);\n   }\n \n+  @Override\n   protected void findTypeConstants(FacesBean.Type type)\n   {\n     super.findTypeConstants(type);\n@@ -56,12 +57,13 @@ protected void findTypeConstants(FacesBean.Type type)\n   //\n   // ENCODE BEHAVIOR\n   //\n+  @Override\n   protected void encodeElementContent(\n     FacesContext        context,\n     RenderingContext arc,\n     UIComponent         component,\n     FacesBean           bean,\n-    List                selectItems,\n+    List<SelectItem>    selectItems,\n     int                 selectedIndex,\n     Converter           converter,\n     boolean             valuePassThru) throws IOException\n@@ -109,7 +111,7 @@ protected void encodeSelectItems(\n     RenderingContext arc,\n     UIComponent         component,\n     FacesBean           bean,\n-    List                selectItems,\n+    List<SelectItem>    selectItems,\n     int                 selectedIndex,\n     Converter           converter,\n     boolean             valuePassThru) throws IOException\n@@ -144,7 +146,7 @@ protected void encodeSelectItems(\n \n     for (int i = 0; i < size; i++)\n     {\n-      SelectItem item = (SelectItem) selectItems.get(i);\n+      SelectItem item = selectItems.get(i);\n       if (encodeSelectItem(context, arc, component, item, converter,\n                            valuePassThru, accessKey,\n                            i, selectedIndex == i, disabled,\n@@ -240,6 +242,7 @@ protected boolean encodeSelectItem(\n     return true;\n   }\n \n+  @Override\n   protected void renderId(\n     FacesContext context,\n     UIComponent  component) throws IOException\n@@ -256,6 +259,7 @@ protected void renderId(\n    * In Gecko, they bubble up, but in IE, they don't, so\n    * they have to go on the items.\n    */\n+  @Override\n   protected void renderFormEventHandlers(\n     FacesContext context,\n     FacesBean    bean) throws IOException\n@@ -267,6 +271,7 @@ protected void renderFormEventHandlers(\n    * Disable rendering \"onclick\" on the parent;  it needs to\n    * go on the individual radio buttons\n    */\n+  @Override\n   protected String getOnclick(\n     FacesBean bean\n     )\n@@ -317,23 +322,27 @@ protected String getLayout(FacesBean bean)\n     return toString(bean.getProperty(_layoutKey));\n   }\n \n+  @Override\n   protected String getUnselectedLabel(FacesBean bean)\n   {\n     return toString(bean.getProperty(_unselectedLabelKey));\n   }\n \n   // Never render the \"hidden label\";  labels entirely go on the individual\n   // items\n+  @Override\n   protected boolean isHiddenLabelRequired(RenderingContext arc)\n   {\n     return false;\n   }\n    \n+  @Override\n   protected String getContentStyleClass(FacesBean bean)\n   {\n     return \"af|selectOneRadio::content\";\n   }\n   \n+  @Override\n   protected String getRootStyleClass(FacesBean bean)  \n   {\n     return \"af|selectOneRadio\";", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SimpleSelectOneRadioRenderer.java"}, {"additions": 27, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SimpleSelectOneRenderer.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SimpleSelectOneRenderer.java", "sha": "37d173a7472399a08abc7a4f5c2451f73002ba76", "changes": 42, "status": "modified", "deletions": 15, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SimpleSelectOneRenderer.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f", "patch": "@@ -48,13 +48,14 @@ public SimpleSelectOneRenderer(FacesBean.Type type)\n     super(type);\n   }\n \n+  @Override\n   protected void findTypeConstants(FacesBean.Type type)\n   {\n     super.findTypeConstants(type);\n     _valuePassThruKey = type.findKey(\"valuePassThru\");\n   }\n \n-\n+  @Override\n   public Object getSubmittedValue(\n     FacesContext context,\n     UIComponent  component)\n@@ -160,6 +161,7 @@ static public boolean encodeOption(\n   //\n   // DECODE BEHAVIOR\n   //\n+  @Override\n   public Object getConvertedValue(\n     FacesContext context,\n     UIComponent  component,\n@@ -200,13 +202,14 @@ private Object _convertIndexedSubmittedValue(\n     if ( converter == null)\n       converter = getDefaultConverter(context, bean);\n \n-    List selectItems = SelectItemSupport.getSelectItems(component, converter);\n+    List<SelectItem> selectItems =\n+      SelectItemSupport.getSelectItems(component, converter);\n+    \n     int index = __getIndex(submittedValue, selectItems);\n     if (index < 0)\n       return null;\n \n-    SelectItem item =\n-      (SelectItem) selectItems.get(index);\n+    SelectItem item = selectItems.get(index);\n     if (item != null)\n       return item.getValue();\n     else\n@@ -219,9 +222,10 @@ private Object _convertIndexedSubmittedValue(\n   //\n   /*\n    */\n+  @Override\n   protected void encodeAllAsElement(\n     FacesContext        context,\n-    RenderingContext arc,\n+    RenderingContext    arc,\n     UIComponent         component,\n     FacesBean           bean) throws IOException\n   {\n@@ -247,7 +251,9 @@ protected void encodeAllAsElement(\n                       getRequiredMessageKey());\n     }\n \n-    List selectItems = SelectItemSupport.getSelectItems(component, converter);\n+    List<SelectItem> selectItems = \n+      SelectItemSupport.getSelectItems(component, converter);\n+    \n     int selectedIndex = _getSelectedIndex(context,\n                                           component,\n                                           bean,\n@@ -290,11 +296,12 @@ abstract   protected void encodeElementContent(\n     RenderingContext arc,\n     UIComponent         component,\n     FacesBean           bean,\n-    List                selectItems,\n+    List<SelectItem>    selectItems,\n     int                 selectedIndex,\n     Converter           converter,\n     boolean             valuePassThru) throws IOException;\n \n+  @Override\n   protected void renderNonElementContent(\n     FacesContext        context,\n     RenderingContext arc,\n@@ -309,7 +316,9 @@ protected void renderNonElementContent(\n     // =-=AEW If needed, this could be made more efficient\n     // by iterating through the list instead of getting\n     // all the items\n-    List selectItems = SelectItemSupport.getSelectItems(component, converter);\n+    List<SelectItem> selectItems = \n+      SelectItemSupport.getSelectItems(component, converter);\n+    \n     int selectedIndex = _getSelectedIndex(context,\n                                           component,\n                                           bean,\n@@ -321,7 +330,7 @@ protected void renderNonElementContent(\n     String text;\n     if (selectedIndex >= 0)\n     {\n-      SelectItem item = (SelectItem) selectItems.get(selectedIndex);\n+      SelectItem item = selectItems.get(selectedIndex);\n       text = item.getLabel();\n     }\n     else\n@@ -332,13 +341,12 @@ protected void renderNonElementContent(\n     context.getResponseWriter().writeText(text, null);\n   }\n \n-\n+  @Override\n   protected String getRequiredMessageKey()\n   {\n     return UIXSelectOne.REQUIRED_MESSAGE_ID;\n   }\n \n-\n   protected boolean getValuePassThru(FacesBean bean)\n   {\n     Object o = bean.getProperty(_valuePassThruKey);\n@@ -359,7 +367,9 @@ protected String getUnselectedLabel(FacesBean bean)\n   /**\n    * Convert a stringified index into an index, with range-checking.\n    */\n-  static int __getIndex(Object submittedValue, List selectItems)\n+  static int __getIndex(\n+      Object submittedValue, \n+      List<SelectItem> selectItems)\n   {\n     if (\"\".equals(submittedValue))\n       return -1;\n@@ -393,12 +403,14 @@ static int __getIndex(Object submittedValue, List selectItems)\n   //\n   // Find the selected item in the list\n   //\n-  private int _findIndex(Object value, List selectItems)\n+  private int _findIndex(\n+      Object value, \n+      List<SelectItem> selectItems)\n   {\n     int size = selectItems.size();\n     for (int i = 0; i < size; i++)\n     {\n-      SelectItem item = (SelectItem) selectItems.get(i);\n+      SelectItem item = selectItems.get(i);\n       if (item == null)\n         continue;\n \n@@ -434,7 +446,7 @@ private int _getSelectedIndex(\n     FacesContext        context,\n     UIComponent         component,\n     FacesBean           bean,\n-    List                selectItems,\n+    List<SelectItem>    selectItems,\n     Converter           converter,\n     boolean             valuePassThru)\n   {", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SimpleSelectOneRenderer.java"}, {"additions": 2, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SpacerRenderer.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SpacerRenderer.java", "sha": "db9da4977d2cb8b8d6d05593de6ebf0287190897", "changes": 2, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SpacerRenderer.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f", "patch": "@@ -34,13 +34,15 @@ public SpacerRenderer()\n     super(CoreSpacer.TYPE);\n   }\n   \n+  @Override\n   protected void findTypeConstants(FacesBean.Type type)\n   {\n     super.findTypeConstants(type);\n     _heightKey = type.findKey(\"height\");\n     _widthKey = type.findKey(\"width\");\n   }\n \n+  @Override\n   protected void encodeBegin(\n     FacesContext        context,\n     RenderingContext arc,", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SpacerRenderer.java"}, {"additions": 5, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/StyleSheetRenderer.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/StyleSheetRenderer.java", "sha": "13eda8d96dce9510d63bd5ad205353b49fd2f6b6", "changes": 7, "status": "modified", "deletions": 2, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/StyleSheetRenderer.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f", "patch": "@@ -66,12 +66,13 @@ protected StyleSheetRenderer(FacesBean.Type type)\n     super(type);\n   }\n \n+  @Override\n   public boolean getRendersChildren()\n   {\n     return true;\n   }\n \n-\n+  @Override\n   protected void encodeAll(\n     FacesContext        context,\n     RenderingContext arc,\n@@ -140,7 +141,9 @@ protected void encodeAll(\n       {\n         if (arc instanceof CoreRenderingContext)\n         {\n-          Map shortStyles = StyleUtils.getShortStyleClasses(sContext, provider);\n+          Map<String, String> shortStyles = \n+            StyleUtils.getShortStyleClasses(sContext, provider);\n+          \n           ((CoreRenderingContext) arc).setStyleMap(shortStyles);\n         }\n       }", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/StyleSheetRenderer.java"}, {"additions": 43, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/TableRenderer.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/TableRenderer.java", "sha": "9e8bcfd8138c3e6b510a19c74caa31919f83d62d", "changes": 61, "status": "modified", "deletions": 18, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/TableRenderer.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f", "patch": "@@ -67,6 +67,7 @@ public TableRenderer(FacesBean.Type type)\n     _resourceKeyMap = createResourceKeyMap();\n   }\n \n+  @Override\n   protected void findTypeConstants(FacesBean.Type type)\n   {\n     super.findTypeConstants(type);\n@@ -75,19 +76,22 @@ protected void findTypeConstants(FacesBean.Type type)\n     _emptyTextKey  = type.findKey(\"emptyText\");\n   }\n \n-\n+  @Override\n   public boolean getRendersChildren()\n   {\n     return true;\n   }\n \n-\n+  @SuppressWarnings(\"unchecked\")\n+  @Override\n   public void decode(FacesContext context, UIComponent component)\n   {\n     decodeSelection(context, component);\n \n-    Map parameters =  context.getExternalContext().getRequestParameterMap();\n-    Object source = parameters.get(XhtmlConstants.SOURCE_PARAM);\n+    Map<String, String> parameters =  \n+      context.getExternalContext().getRequestParameterMap();\n+    \n+    String source = parameters.get(XhtmlConstants.SOURCE_PARAM);\n     String id = component.getClientId(context);\n     if (!id.equals(source))\n       return;\n@@ -141,9 +145,9 @@ private static RangeChangeEvent _createRangeChangeEvent(\n   }\n    private void _decodeSort(\n     UIXTable table,\n-    Map parameters)\n+    Map<String, String> parameters)\n   {\n-    String property = (String) parameters.get(XhtmlConstants.VALUE_PARAM);\n+    String property = parameters.get(XhtmlConstants.VALUE_PARAM);\n     Object state = parameters.get(XhtmlConstants.STATE_PARAM);\n     boolean sortOrder = !XhtmlConstants.SORTABLE_ASCENDING.equals(state);\n     SortCriterion criterion = new SortCriterion(property, sortOrder);\n@@ -155,9 +159,9 @@ private void _decodeSort(\n \n   private void _decodeGoto(\n     UIXTable table,\n-    Map parameters)\n+    Map<String, String> parameters)\n   {\n-    String value = (String) parameters.get(XhtmlConstants.VALUE_PARAM);\n+    String value = parameters.get(XhtmlConstants.VALUE_PARAM);\n     if (value != null)\n     {\n       final FacesEvent event;\n@@ -190,17 +194,18 @@ private void _decodeGoto(\n   }\n \n \n+  @SuppressWarnings(\"unchecked\")\n   private void _decodeHideShow(\n     UIXTable table,\n-    Map parameters,\n+    Map<String, String> parameters,\n     Object eventParam)\n   {\n     boolean doExpand = XhtmlConstants.SHOW_EVENT.equals(eventParam);\n     Object value = parameters.get(XhtmlConstants.VALUE_PARAM);\n     if (value != null)\n     {\n-      RowKeySet old = table.getDisclosedRowKeys();\n-      RowKeySet newset = old.clone();\n+      RowKeySet<Object> old = table.getDisclosedRowKeys();\n+      RowKeySet<Object> newset = old.clone();\n       if (\"all\".equals(value))\n       {\n         if (doExpand)\n@@ -223,14 +228,15 @@ private void _decodeHideShow(\n     }\n   }\n \n+  @Override\n   protected void encodeAll(\n     FacesContext        context,\n     RenderingContext arc,\n     UIComponent         component,\n     FacesBean           bean) throws IOException\n   {\n     // save current skin resource map, if any, on the local property\n-    Map oldSkinResourceMap = arc.getSkinResourceKeyMap();\n+    Map<String, String> oldSkinResourceMap = arc.getSkinResourceKeyMap();\n \n     // store TableRenderer's skin resource map, so that called to\n     // context.getTranslatedValue will get the correct key.\n@@ -456,6 +462,7 @@ protected boolean renderTableWithoutColumns(\n    * used to render special column headers, like select and details.\n    * @return the next physicalColumnIndex\n    */\n+  @SuppressWarnings(\"unchecked\")\n   protected int renderSpecialColumns(\n     FacesContext          context,\n     RenderingContext   arc,\n@@ -468,7 +475,7 @@ protected int renderSpecialColumns(\n     // depending on the RenderStage\n     final ColumnData colData = tContext.getColumnData();\n     int[] hidden = tContext.getHiddenColumns();\n-    List children = treeTable.getChildren();\n+    List<UIComponent> children = treeTable.getChildren();\n     int colCount  = children.size();\n     for (int i = 0;  i < colCount;  i++)\n     {\n@@ -529,7 +536,7 @@ private void _renderSelectionColumn(\n     RenderingContext   arc,\n     TableRenderingContext tContext) throws IOException\n   {\n-    Map originalResourceKeyMap = arc.getSkinResourceKeyMap();\n+    Map<String, String> originalResourceKeyMap = arc.getSkinResourceKeyMap();\n     setSelectionResourceKeyMap(arc, tContext);\n     try\n     {\n@@ -717,7 +724,9 @@ public static void setSelectionResourceKeyMap(\n   {\n     if (tContext.hasSelection())\n     {\n-      Map selectionColumnStylesMap = new HashMap();\n+      Map<String, String> selectionColumnStylesMap = \n+        new HashMap<String, String>();\n+      \n       // if selection is multiple-selection:\n       if (tContext.hasSelectAll())\n       {\n@@ -738,20 +747,21 @@ public static void setSelectionResourceKeyMap(\n \n   }\n \n+  @Override\n   protected boolean shouldRenderId(FacesContext context, UIComponent component)\n   {\n     return true;\n   }\n \n-  protected Map createResourceKeyMap()\n+  protected Map<String, String> createResourceKeyMap()\n   {\n     // map the skin resource keys that are used in components used\n     // by the table renderer to table keys.\n     // This way the table can be customized separately from other\n     // components that it uses within it. For example, we can customize\n     // af_table.DISCLOSED translation key\n     // separately from af_showDetail.DISCLOSED.\n-    Map map = new HashMap(6);\n+    Map<String, String> map = new HashMap<String, String>(6);\n     map.put(\"af_showDetail.DISCLOSED\",\n             \"af_table.DISCLOSED\");\n     map.put(\"af_showDetail.UNDISCLOSED\",\n@@ -786,11 +796,13 @@ public NavBar(FacesBean.Type type)\n       super(type);\n     }\n \n+    @Override\n     protected void renderAllAttributes(\n       FacesContext context, RenderingContext arc, FacesBean bean)\n     {\n     }\n \n+    @Override\n     protected boolean getShowAll(FacesBean bean)\n     {\n       TableRenderingContext tContext =\n@@ -806,6 +818,7 @@ protected boolean getShowAll(FacesBean bean)\n     }\n \n     // For now, disable showAll except on UIXTable\n+    @Override\n     protected boolean showAllSupported()\n     {\n       TableRenderingContext tContext =\n@@ -815,6 +828,7 @@ protected boolean showAllSupported()\n       }\n \n \n+    @Override\n     protected String getSource()\n     {\n       TableRenderingContext tContext =\n@@ -825,59 +839,70 @@ protected String getSource()\n     /**\n      * @todo Deal with repeating!\n      */\n+    @Override\n     protected String getClientId(FacesContext context, UIComponent component)\n     {\n       TableRenderingContext tContext =\n         TableRenderingContext.getCurrentInstance();\n       return tContext.getTableId() + \"-nb\";\n     }\n \n+    @Override\n     protected String getVar(FacesBean bean)\n     {\n       return null;\n     }\n \n     // No support for range labels\n+    @Override\n     protected UIComponent getRangeLabel(UIComponent component)\n     {\n       return null;\n     }\n \n+    @Override\n     protected int getRowCount(UIComponent component)\n     {\n       return ((CollectionComponent) component).getRowCount();\n     }\n \n+    @Override\n     protected int getRowIndex(UIComponent component)\n     {\n       return ((CollectionComponent) component).getRowIndex();\n     }\n \n+    @Override\n     protected void setRowIndex(UIComponent component, int index)\n     {\n       ((CollectionComponent) component).setRowIndex(index);\n     }\n \n+    @Override\n     protected boolean isRowAvailable(UIComponent component)\n     {\n       return ((CollectionComponent) component).isRowAvailable();\n     }\n \n+    @Override\n     protected boolean isRowAvailable(UIComponent component, int rowIndex)\n     {\n       return ((UIXCollection) component).isRowAvailable(rowIndex);\n     }\n \n+    @Override\n     protected Object getRowData(UIComponent component)\n     {\n       return ((CollectionComponent) component).getRowData();\n     }\n \n+    @Override\n     protected int getRows(UIComponent component, FacesBean bean)\n     {\n       return ((CollectionComponent) component).getRows();\n     }\n \n+    @Override\n     protected int getFirst(UIComponent component, FacesBean bean)\n     {\n       return ((CollectionComponent) component).getFirst();\n@@ -887,7 +912,7 @@ protected int getFirst(UIComponent component, FacesBean bean)\n \n   private PropertyKey _widthKey;\n   private PropertyKey _emptyTextKey;\n-  private final Map _resourceKeyMap;\n+  private final Map<String, String> _resourceKeyMap;\n \n   // Key for RenderingContext property used to store the generated ID\n   // to use for the upper navigation bar.  (Part of fix for 2275703.)", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/TableRenderer.java"}, {"additions": 2, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/ValueRenderer.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/ValueRenderer.java", "sha": "fa8964034df5a2f126230ce54a0db2631e43c2f6", "changes": 3, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/ValueRenderer.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f", "patch": "@@ -32,6 +32,7 @@ protected ValueRenderer(FacesBean.Type type)\n     super(type);\n   }\n \n+  @Override\n   protected void findTypeConstants(FacesBean.Type type)\n   {\n     super.findTypeConstants(type);\n@@ -69,7 +70,7 @@ protected Converter getDefaultConverter(\n     if (binding == null)\n       return null;\n \n-    Class type = binding.getType(context);\n+    Class<?> type = binding.getType(context);\n     return ConverterUtils.createConverter(context, type);\n   }\n ", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/ValueRenderer.java"}, {"additions": 6, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/XhtmlFormattedText.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/XhtmlFormattedText.java", "sha": "e2a04cc3bb79a8d4a2f89a1b4e0434b5d4071c2a", "changes": 6, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/XhtmlFormattedText.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f", "patch": "@@ -55,20 +55,24 @@ public FontElement(String name, boolean empty, boolean closeRequired)\n       super(name, empty, closeRequired);\n     }\n     \n+    @Override\n     public void writeInlineStyle(FacesContext context, String style)\n     {\n \n     }\n \n+    @Override\n     public void writeStyleClass(FacesContext context, String styleClass)\n     {\n \n     }\n+    @Override\n     public void writeHRef(FacesContext context, String href)\n     {\n     \n     }  \n \n+    @Override\n     public void writeSize(FacesContext context, String fontSize)\n       throws IOException\n     {\n@@ -89,6 +93,7 @@ public XhtmlElement(String name, boolean empty, boolean closeRequired)\n       super(name, empty, closeRequired);\n     }\n \n+    @Override\n     public void writeInlineStyle(FacesContext context, String style)\n       throws IOException\n     {\n@@ -102,6 +107,7 @@ public void writeInlineStyle(FacesContext context, String style)\n       }*/\n     }\n \n+    @Override\n     public void writeStyleClass(FacesContext context, String styleClass)\n       throws IOException\n     {", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/XhtmlFormattedText.java"}, {"additions": 2, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/XhtmlRenderer.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/XhtmlRenderer.java", "sha": "51a3c25c277fbf512234430996091e396d53e1c2", "changes": 3, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/XhtmlRenderer.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f", "patch": "@@ -252,6 +252,7 @@ public static boolean supportsXMLDOM(\n    * that deliver events should always return \"true\".\n    * @todo Profile and possibly optimize.\n    */\n+  @Override\n   protected boolean shouldRenderId(\n     FacesContext context,\n     UIComponent  component)\n@@ -878,7 +879,7 @@ public static void enableScriptDeferring(RenderingContext arc, boolean isEnabled\n     // since IE has problems with deferred scripts.  This property is\n     // enabled by PanelPartialRootRenderer when rendering the contents\n     // of the body.\n-    Map props = arc.getProperties();\n+    Map<Object, Object> props = arc.getProperties();\n     if (isEnabled)\n     {\n       // Turn script deferring on", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/XhtmlRenderer.java"}, {"additions": 5, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/XhtmlUtils.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/XhtmlUtils.java", "sha": "4f3541f7e0efd61e0f975a884ace1c4b1ab79866", "changes": 10, "status": "modified", "deletions": 5, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/XhtmlUtils.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f", "patch": "@@ -123,7 +123,7 @@ static public void addLib(\n   {\n     if ((XhtmlRenderer.supportsScripting(arc)) && (libKey != null))\n     {\n-      Scriptlet scriptlet = (Scriptlet) _sScriptletTable.get(libKey);\n+      Scriptlet scriptlet = _sScriptletTable.get(libKey);\n       if (scriptlet == null)\n       {\n         if (_LOG.isWarning())\n@@ -505,17 +505,17 @@ public static String getFormattedString(String pattern, String[] parameters)\n   }\n \n   /** HashMap mapping names to their scriptlets */\n-  private static Map _sScriptletTable =\n-    Collections.synchronizedMap(new HashMap(37));\n+  private static Map<Object, Scriptlet> _sScriptletTable =\n+    Collections.synchronizedMap(new HashMap<Object, Scriptlet>(37));\n \n   // Key for storing whether we've written out the script\n   // for storing loaded libraries\n   static private final Object _PORTLET_LIB_TABLE_KEY = new Object();\n-  static private final Set\n-    _NON_STRUCTURAL_COMPONENT_FAMILIES = new HashSet();\n+  static private final Set<String> _NON_STRUCTURAL_COMPONENT_FAMILIES;\n \n   static\n   {\n+    _NON_STRUCTURAL_COMPONENT_FAMILIES = new HashSet<String>();\n     _NON_STRUCTURAL_COMPONENT_FAMILIES.add(UIXIterator.COMPONENT_FAMILY);\n     _NON_STRUCTURAL_COMPONENT_FAMILIES.add(UIXComponentRef.COMPONENT_FAMILY);\n     _NON_STRUCTURAL_COMPONENT_FAMILIES.add(UIXSubform.COMPONENT_FAMILY);", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/XhtmlUtils.java"}, {"additions": 9, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/jsLibs/AliasedScriptlet.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/jsLibs/AliasedScriptlet.java", "sha": "04b596d8a3360aeab9460e1656d66689e43ca17c", "changes": 16, "status": "modified", "deletions": 7, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/jsLibs/AliasedScriptlet.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f", "patch": "@@ -18,7 +18,6 @@\n import java.io.IOException;\n import java.io.InputStream;\n \n-import java.util.Iterator;\n import java.util.Enumeration;\n import java.util.HashSet;\n import java.util.Properties;\n@@ -43,17 +42,15 @@\n    */\n   static public void registerAliases()\n   {\n-    HashSet aliases = new HashSet();\n-    Enumeration names = _ALIASES.propertyNames();\n+    HashSet<String> aliases = new HashSet<String>();\n+    Enumeration<?> names = _ALIASES.propertyNames();\n     while (names.hasMoreElements())\n     {\n       aliases.add(_ALIASES.getProperty((String) names.nextElement()));\n     }\n \n-    Iterator iterator = aliases.iterator();\n-    while (iterator.hasNext())\n+    for(String libName : aliases)\n     {\n-      String libName = (String) iterator.next();\n       Scriptlet scriptlet = null;\n \n       if (\"Common\".equals(libName))\n@@ -64,6 +61,7 @@ static public void registerAliases()\n           // when it's outside of a partial page request, since the\n           // partial page library itself needs it.\n           // See comments in Scriptlet.__isOutsidePartialPage()\n+          @Override\n           boolean __isOutsidePartialPage(RenderingContext arc)\n           {\n             return false;\n@@ -97,11 +95,13 @@ public AliasedScriptlet(\n     _actualLibrary = _getAlias(name);\n   }\n \n+  @Override\n   public Object getScriptletKey()\n   {\n     return _name;\n   }\n \n+  @Override\n   public void registerSelf()\n   {\n     super.registerSelf();\n@@ -112,6 +112,7 @@ public void registerSelf()\n     }\n   }\n \n+  @Override\n   protected void outputScriptletImpl(\n     FacesContext        context,\n     RenderingContext arc) throws IOException\n@@ -125,6 +126,7 @@ protected void outputScriptletImpl(\n     outputDependency(context, arc, _actualLibrary);\n   }\n \n+  @Override\n   protected void outputScriptletContent(\n     FacesContext        context,\n     RenderingContext arc) throws IOException\n@@ -159,7 +161,7 @@ static private String _getAlias(String theLibraryName)\n     _LOG = TrinidadLogger.createTrinidadLogger(AliasedScriptlet.class);\n \n     // Load library versions\n-    Class cl = AliasedScriptlet.class;\n+    Class<AliasedScriptlet> cl = AliasedScriptlet.class;\n     InputStream in = cl.getResourceAsStream(_JAVASCRIPT_ALIAS_FILE);\n \n     if (in == null)", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/jsLibs/AliasedScriptlet.java"}, {"additions": 2, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/jsLibs/ColorFieldInfoScriptlet.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/jsLibs/ColorFieldInfoScriptlet.java", "sha": "efac4d9c0fe9f1b8b74a215eabc2415d4f983164", "changes": 2, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/jsLibs/ColorFieldInfoScriptlet.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f", "patch": "@@ -44,6 +44,7 @@ static public Scriptlet sharedInstance()\n     return _sInstance;\n   }\n \n+  @Override\n   public Object getScriptletKey()\n   {\n     return COLOR_FIELD_INFO_KEY;\n@@ -52,6 +53,7 @@ public Object getScriptletKey()\n   /**\n    * @todo Rebuild in Faces-major land\n    */\n+  @Override\n   protected void outputScriptletContent(\n     FacesContext        context,\n     RenderingContext arc) throws IOException", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/jsLibs/ColorFieldInfoScriptlet.java"}, {"additions": 2, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/jsLibs/ColorFormatInfoScriptlet.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/jsLibs/ColorFormatInfoScriptlet.java", "sha": "164c9cb6b8d23dd6d4daa0f0adb849ab1f028216", "changes": 2, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/jsLibs/ColorFormatInfoScriptlet.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f", "patch": "@@ -42,6 +42,7 @@ private ColorFormatInfoScriptlet()\n   {\n   }\n \n+  @Override\n   public Object getScriptletKey()\n   {\n     return COLOR_FORMAT_INFO_KEY;\n@@ -50,6 +51,7 @@ public Object getScriptletKey()\n   /**\n    * @todo GET TRANSPARENT OFF OF SKIN, NOT HARDCODED BUNDLE\n    */\n+  @Override\n   protected void outputScriptletContent(\n     FacesContext        context,\n     RenderingContext arc) throws IOException", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/jsLibs/ColorFormatInfoScriptlet.java"}, {"additions": 2, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/jsLibs/ConfigurationScriptlet.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/jsLibs/ConfigurationScriptlet.java", "sha": "c040e473942a6af9867b006455ae2d6ac65d137e", "changes": 2, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/jsLibs/ConfigurationScriptlet.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f", "patch": "@@ -34,6 +34,7 @@ public ConfigurationScriptlet()\n   {\n   }\n \n+  @Override\n   public Object getScriptletKey()\n   {\n     return _CONFIGURATION_SCRIPTLET_KEY;\n@@ -52,6 +53,7 @@ static public Scriptlet sharedInstance()\n   /**\n    * @todo See if truly necessary.\n    */\n+  @Override\n   protected void outputScriptletContent(\n     FacesContext        context,\n     RenderingContext arc)", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/jsLibs/ConfigurationScriptlet.java"}, {"additions": 2, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/jsLibs/DateFormatInfoScriptlet.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/jsLibs/DateFormatInfoScriptlet.java", "sha": "c0240deab70e326a3ee5fa498c1074d78f9869d6", "changes": 2, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/jsLibs/DateFormatInfoScriptlet.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f", "patch": "@@ -43,11 +43,13 @@ private DateFormatInfoScriptlet()\n   {\n   }\n \n+  @Override\n   public Object getScriptletKey()\n   {\n     return DATE_FORMAT_INFO_KEY;\n   }\n \n+  @Override\n   protected void outputScriptletContent(\n     FacesContext        context,\n     RenderingContext arc) throws IOException", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/jsLibs/DateFormatInfoScriptlet.java"}, {"additions": 3, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/jsLibs/DefaultTimeZoneScriptlet.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/jsLibs/DefaultTimeZoneScriptlet.java", "sha": "6aa6779c12887642fca8d5893b07b4ff1fcfa478", "changes": 3, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/jsLibs/DefaultTimeZoneScriptlet.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f", "patch": "@@ -39,11 +39,13 @@ private DefaultTimeZoneScriptlet()\n   {\n   }\n \n+  @Override\n   public Object getScriptletKey()\n   {\n     return DEFAULT_TIME_ZONE_KEY;\n   }\n \n+  @Override\n   protected void outputScriptletImpl(\n     FacesContext        context,\n     RenderingContext arc) throws IOException\n@@ -52,6 +54,7 @@ protected void outputScriptletImpl(\n     super.outputScriptletImpl(context, arc);\n   }\n \n+  @Override\n   protected void outputScriptletContent(\n     FacesContext        context,\n     RenderingContext arc) throws IOException", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/jsLibs/DefaultTimeZoneScriptlet.java"}, {"additions": 2, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/jsLibs/GlobalVariablesScriptlet.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/jsLibs/GlobalVariablesScriptlet.java", "sha": "575b339cb2813e54712985de60c330edd2a05f00", "changes": 2, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/jsLibs/GlobalVariablesScriptlet.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f", "patch": "@@ -36,6 +36,7 @@ public GlobalVariablesScriptlet()\n   {\n   }\n \n+  @Override\n   public Object getScriptletKey()\n   {\n     return GLOBAL_VARIABLES_KEY;\n@@ -51,6 +52,7 @@ static public Scriptlet sharedInstance()\n     return _sInstance;\n   }\n \n+  @Override\n   protected void outputScriptletContent(\n     FacesContext        context,\n     RenderingContext arc) throws IOException", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/jsLibs/GlobalVariablesScriptlet.java"}, {"additions": 2, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/jsLibs/JspDirScriptlet.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/jsLibs/JspDirScriptlet.java", "sha": "3b9b4ebac06c878a5d5864341720174cd1df1ad1", "changes": 2, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/jsLibs/JspDirScriptlet.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f", "patch": "@@ -41,11 +41,13 @@ protected JspDirScriptlet()\n   {\n   }\n \n+  @Override\n   public Object getScriptletKey()\n   {\n     return JSP_DIR_KEY;\n   }\n \n+  @Override\n   protected void outputScriptletContent(\n     FacesContext        context,\n     RenderingContext arc) throws IOException", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/jsLibs/JspDirScriptlet.java"}, {"additions": 5, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/jsLibs/LibraryScriptlet.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/jsLibs/LibraryScriptlet.java", "sha": "19d0506ba0c59bde70d95327f51f1df453368f99", "changes": 7, "status": "modified", "deletions": 2, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/jsLibs/LibraryScriptlet.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f", "patch": "@@ -46,7 +46,7 @@ public LibraryScriptlet(String libraryName,\n     _dependencies = dependencies;\n   }\n \n-\n+  @Override\n   public void registerSelf()\n   {\n     super.registerSelf();\n@@ -57,7 +57,7 @@ public void registerSelf()\n     }\n   }\n \n-\n+  @Override\n   public Object getScriptletKey()\n   {\n     return _libraryName;\n@@ -81,6 +81,7 @@ public static String getLibraryNameWithVersion(\n     return libraryName;\n   }\n \n+  @Override\n   protected void outputScriptletImpl(\n     FacesContext        context,\n     RenderingContext arc) throws IOException\n@@ -94,13 +95,15 @@ protected void outputScriptletImpl(\n     XhtmlUtils.writeLibImport(context, arc, _getLibraryURL(context, arc));\n   }\n \n+  @Override\n   protected void outputScriptletContent(\n     FacesContext        context,\n     RenderingContext arc) throws IOException\n   {\n     // No-op.\n   }\n \n+  @Override\n   protected void embedInScriptTagImpl(\n     FacesContext        context,\n     RenderingContext arc) throws IOException", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/jsLibs/LibraryScriptlet.java"}, {"additions": 5, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/jsLibs/LocaleInfoScriptlet.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/jsLibs/LocaleInfoScriptlet.java", "sha": "64000871035ec97dbd9aebe21b8b136a642184ae", "changes": 6, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/jsLibs/LocaleInfoScriptlet.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f", "patch": "@@ -56,6 +56,7 @@ public LocaleInfoScriptlet()\n    * @todo Revisit separate translation and internationalization\n    * locales.\n    */ \n+  @Override\n   protected void outputScriptletImpl(\n     FacesContext        context,\n     RenderingContext arc) throws IOException\n@@ -108,6 +109,7 @@ protected void outputScriptletImpl(\n     super.outputScriptletImpl(context, arc);\n   }\n \n+  @Override\n   protected String getLibraryName(\n     FacesContext        context,\n     RenderingContext arc)\n@@ -163,7 +165,9 @@ private static Locale _getJSLocaleElementsLocale(\n     Locale inLocale\n     )\n   {\n-    HashMap supportedMap = LocaleList.getSupportedLocales();\n+    HashMap<Locale, Locale> supportedMap = \n+      LocaleList.getSupportedLocales();\n+    \n     Locale outLocale = inLocale;\n     if(supportedMap.containsKey(outLocale))\n     {", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/jsLibs/LocaleInfoScriptlet.java"}, {"additions": 3, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/jsLibs/XhtmlScriptletFactory.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/jsLibs/XhtmlScriptletFactory.java", "sha": "cd7da7f9f9760ee2f5aab374cf6d7b82402bca78", "changes": 3, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/jsLibs/XhtmlScriptletFactory.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f", "patch": "@@ -90,6 +90,8 @@ private XhtmlScriptletFactory()\n   static private Scriptlet _sCharSetsScriptlet;\n   static private Scriptlet _sShuttleScriptlet;\n   static private Scriptlet _sTableProxyScriptlet;\n+  // FIXME: Never read\n+  @SuppressWarnings(\"unused\")\n   static private Scriptlet _sDiagrammerScriptlet;\n   static private Scriptlet _sColorFormatScriptlet;\n   static private Scriptlet _sColorFieldFormatScriptlet;\n@@ -143,6 +145,7 @@ private XhtmlScriptletFactory()\n         // =-=AEW  The MarlinCore library needs to be rendered even\n         // when it's outside of a partial page request, since the\n         // partial page library itself needs it.\n+        @Override\n         boolean __isOutsidePartialPage(RenderingContext context)\n         {\n           return false;", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/jsLibs/XhtmlScriptletFactory.java"}, {"additions": 5, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/table/BandingData.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/table/BandingData.java", "sha": "ffbd04ac054ad68f64ddde7a692dcd72ddb52b8e", "changes": 7, "status": "modified", "deletions": 2, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/table/BandingData.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f", "patch": "@@ -32,18 +32,21 @@\n   /**\n    * @param context gets the appropriate banding data from this context.\n    */\n+  @SuppressWarnings(\"unchecked\")\n   public static BandingData create(TableRenderingContext context)\n   {\n     // using the variable name \"hgrid\" so that we don't forget that\n     // the table instance might infact be an hgrid:\n     UIComponent hgrid = context.getTable();\n-    Map attrs = hgrid.getAttributes();\n+    Map<String, Object> attrs = hgrid.getAttributes();\n     int row = _getInterval(attrs, CoreTable.ROW_BANDING_INTERVAL_KEY);\n     int col = _getInterval(attrs, CoreTable.COLUMN_BANDING_INTERVAL_KEY);\n     return new BandingData(col, row);\n   }\n \n-  private static int _getInterval(Map attrs, PropertyKey key)\n+  private static int _getInterval(\n+      Map<String, Object> attrs, \n+      PropertyKey key)\n   {\n     Number num = (Number) attrs.get(key.getName());\n     int interval = (num != null) ? num.intValue() : 0;", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/table/BandingData.java"}, {"additions": 3, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/table/ColumnData.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/table/ColumnData.java", "sha": "a89e391844e95d892f70dbf7f9063f43636457c7", "changes": 5, "status": "modified", "deletions": 2, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/table/ColumnData.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f", "patch": "@@ -18,6 +18,7 @@\n import java.awt.Dimension;\n \n import java.util.ArrayList;\n+import java.util.List;\n \n import org.apache.myfaces.trinidad.logging.TrinidadLogger;\n import org.apache.myfaces.trinidad.component.UIXTreeTable;\n@@ -430,7 +431,7 @@ else if (CoreColumn.ALIGN_CENTER.equals(format))\n \n   private Data _get(int physicalIndex)\n   {\n-    Data d = (Data) _data.get(physicalIndex);\n+    Data d = _data.get(physicalIndex);\n     assert (d != null)\n         : \"no column data for physicalIndex:\" + physicalIndex;\n     return d;\n@@ -551,7 +552,7 @@ static private Object _getSpecialWidth(\n   private int _rowIndex = -1;\n \n   private final Dimension _currentSpan = new Dimension(1,1);\n-  private final ArrayList _data = new ArrayList(10);\n+  private final List<Data> _data = new ArrayList<Data>(10);\n \n   // this constants is used for assert only:\n   private boolean _assertInitMode = true;", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/table/ColumnData.java"}, {"additions": 10, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/table/DetailColumnRenderer.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/table/DetailColumnRenderer.java", "sha": "cac87ecaedd46e5daf9bbe703d5579e212d2f780", "changes": 10, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/table/DetailColumnRenderer.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f", "patch": "@@ -31,6 +31,7 @@\n \n public class DetailColumnRenderer extends SpecialColumnRenderer\n {\n+  @Override\n   protected void encodeAll(\n     FacesContext        context,\n     RenderingContext arc,\n@@ -55,17 +56,20 @@ protected void encodeAll(\n     super.encodeAll(context, arc, component, bean);\n   }  \n   \n+  @Override\n   protected String getHeaderText(FacesBean bean)\n   {\n     RenderingContext arc = RenderingContext.getCurrentInstance();\n     return arc.getTranslatedString(\"af_table.DETAIL_COLUMN_HEADER\");\n   }\n   \n+  @Override\n   protected boolean getNoWrap(FacesBean bean)\n   {\n     return true;\n   }\n \n+  @Override\n   protected void renderKids(FacesContext          context,\n                             RenderingContext   arc,\n                             TableRenderingContext tContext,\n@@ -87,6 +91,7 @@ public Detail()\n       super(CoreTable.TYPE);\n     }\n     \n+    @Override\n     protected void renderAllAttributes(\n        FacesContext        context,\n        RenderingContext arc,\n@@ -107,30 +112,35 @@ protected void renderPromptStart(\n       super.renderPromptStart(context, arc, component, bean);\n     }\n     \n+    @Override\n     protected String getValueParameter(UIComponent component)\n     {\n       UIXCollection cb = (UIXCollection) component;\n       int rowIndex = cb.getRowIndex();\n       return IntegerUtils.getString(rowIndex);\n     }\n     \n+    @Override\n     protected boolean isTableDetailDisclosure()\n     {\n       return true;\n     }\n     \n+    @Override\n     protected boolean getDisclosed(FacesBean bean)\n     {\n       TableRenderingContext tContext = TableRenderingContext.getCurrentInstance();\n       UIXTable table = (UIXTable) tContext.getCollectionComponent();\n       return (table.getDisclosedRowKeys().isContained());\n     }\n \n+    @Override\n    protected String getLinkId(String rootId, boolean disclosed)\n    {\n      return _getDetailLinkId(TableRenderingContext.getCurrentInstance());\n    }\n    \n+    @Override\n     protected String getClientId(FacesContext context, UIComponent component)\n     {\n       TableRenderingContext tContext = TableRenderingContext.getCurrentInstance();", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/table/DetailColumnRenderer.java"}, {"additions": 4, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/table/FocusColumnRenderer.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/table/FocusColumnRenderer.java", "sha": "7a02d8070b32ad3a1c58689820df5e936db01dd0", "changes": 4, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/table/FocusColumnRenderer.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f", "patch": "@@ -34,22 +34,26 @@\n \n public class FocusColumnRenderer extends SpecialColumnRenderer\n {\n+  @Override\n   protected String getHeaderText(FacesBean bean)\n   {\n     RenderingContext arc = RenderingContext.getCurrentInstance();\n     return arc.getTranslatedString(\"af_treeTable.FOCUS_COLUMN_HEADER\");\n   }\n   \n+  @Override\n   protected String getHeaderStyleClass(TableRenderingContext tContext)\n   {\n     return XhtmlConstants.AF_COLUMN_HEADER_ICON_STYLE;\n   }\n \n+  @Override\n   protected String getFormatType(FacesBean bean)\n   {\n     return CoreColumn.ALIGN_CENTER;\n   }\n \n+  @Override\n   protected void renderKids(FacesContext          context,\n                             RenderingContext   arc,\n                             TableRenderingContext trc,", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/table/FocusColumnRenderer.java"}, {"additions": 1, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/table/RenderStage.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/table/RenderStage.java", "sha": "32de91799ea10fad553cffb87a11330633625a08", "changes": 1, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/table/RenderStage.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f", "patch": "@@ -52,6 +52,7 @@ public int setStage(int stage)\n     return ps;\n   }\n \n+  @Override\n   public String toString()\n   {\n     return \"RenderStage:\"+_stage;", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/table/RenderStage.java"}, {"additions": 8, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/table/RowData.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/table/RowData.java", "sha": "1634db21558ee9cf5b835a1e85312606dae86901", "changes": 10, "status": "modified", "deletions": 2, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/table/RowData.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f", "patch": "@@ -93,8 +93,14 @@ public int getCurrentRowSpan()\n   public void setCurrentRowSpan(int rowSpan)\n   {\n \n-\tboolean assertEnabled = false;\n-\tassert assertEnabled = true;\n+    // -= Simon Lessard =-\n+    //    I really dislike to see assert used like that. It's much like\n+    //    #ifdef __DEBUG, but it has a performance cost as well since \n+    //    assertEnabled get instanciated for nothing and this add one \n+    //    if to the coding path. This basically break the purpose of \n+    //    the assert to not polute the execution when not enabled.\n+    boolean assertEnabled = false;\n+    assert assertEnabled = true;\n \n     if (rowSpan < 0)\n     {", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/table/RowData.java"}, {"additions": 5, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/table/SelectionColumnRenderer.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/table/SelectionColumnRenderer.java", "sha": "d1de77e8e7a9c9ff9e8d51a48cc2015017fa8bb0", "changes": 7, "status": "modified", "deletions": 2, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/table/SelectionColumnRenderer.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f", "patch": "@@ -27,6 +27,7 @@\n public class SelectionColumnRenderer extends SpecialColumnRenderer\n {\n \n+  @Override\n   protected void renderKids(FacesContext          context,\n                             RenderingContext   arc,\n                             TableRenderingContext trc,\n@@ -40,7 +41,7 @@ protected void renderKids(FacesContext          context,\n                      : _singleRenderer);\n   }\n   \n-\n+  @Override\n   protected String getHeaderText(FacesBean bean)\n   {\n     RenderingContext arc = RenderingContext.getCurrentInstance();\n@@ -54,17 +55,19 @@ protected String getHeaderText(FacesBean bean)\n     return arc.getTranslatedString(key);\n   }  \n \n+  @Override\n   protected boolean getNoWrap(FacesBean bean)\n   {\n     return false;\n   }\n \n-\n+  @Override\n   protected String getFormatType(FacesBean bean)\n   {\n     return CoreColumn.ALIGN_CENTER;\n   }\n \n+  @Override\n   protected String getHeaderStyleClass(TableRenderingContext tContext)\n   {\n     return XhtmlConstants.AF_COLUMN_HEADER_ICON_STYLE;", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/table/SelectionColumnRenderer.java"}, {"additions": 5, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/table/SpecialColumnRenderer.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/table/SpecialColumnRenderer.java", "sha": "af5285b2c119bbbb561fd454918180f8ba660778", "changes": 7, "status": "modified", "deletions": 2, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/table/SpecialColumnRenderer.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f", "patch": "@@ -36,23 +36,25 @@ public UIComponent getSpecialColumn()\n     return _specialColumn;\n   }\n \n+  @Override\n   protected boolean getHeaderNoWrap(FacesBean bean)\n   {\n     return true;\n   }\n \n-\n+  @Override\n   protected boolean getSortable(FacesBean bean)\n   {\n     return false;\n   }\n \n-\n+  @Override\n   protected String getSortProperty(FacesBean bean)\n   {\n     return null;\n   }\n \n+  @Override\n   protected String getHeaderInlineStyle(RenderingContext arc)\n   {\n     if (XhtmlRenderer.isIE(arc))\n@@ -61,6 +63,7 @@ protected String getHeaderInlineStyle(RenderingContext arc)\n     return null;\n   }\n   \n+  @Override\n   protected boolean isSpecialColumn()\n   {\n     return true;", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/table/SpecialColumnRenderer.java"}, {"additions": 13, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/table/TableRenderingContext.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/table/TableRenderingContext.java", "sha": "3211fe11ef0ce593059772b821fe7d9c4089eda3", "changes": 24, "status": "modified", "deletions": 11, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/table/TableRenderingContext.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f", "patch": "@@ -41,7 +41,7 @@\n {\n   static public TableRenderingContext getCurrentInstance()\n   {\n-    return (TableRenderingContext) _CURRENT_CONTEXT.get();\n+    return _CURRENT_CONTEXT.get();\n   }\n \n   public TableRenderingContext(\n@@ -219,7 +219,8 @@ public final CollectionComponent getCollectionComponent()\n    * Gets the selection state for this table.\n    * This is overwritten in HGridRenderingContext\n    */\n-  public RowKeySet getSelectedRowKeys()\n+  @SuppressWarnings(\"unchecked\")\n+  public RowKeySet<Object> getSelectedRowKeys()\n   {\n     return ((UIXTable) getCollectionComponent()).getSelectedRowKeys();\n   }\n@@ -494,14 +495,15 @@ static private Boolean _toBoolean(Object value, boolean defaultValue)\n     }\n   }\n \n+  @SuppressWarnings(\"unchecked\")\n   private void _gatherChildInformation(\n     UIComponent      parent)\n   {\n-    List children = parent.getChildren();\n+    List<UIComponent> children = parent.getChildren();\n     int count = children.size();\n     for (int index = 0; index < count; index++)\n     {\n-      UIComponent child = (UIComponent) children.get(index);\n+      UIComponent child = children.get(index);\n \n       if (!child.isRendered())\n       {\n@@ -517,8 +519,7 @@ private void _gatherChildInformation(\n \n   public static boolean isInsideContentOfTable()\n   {\n-    TableRenderingContext tContext =\n-      (TableRenderingContext) _CURRENT_CONTEXT.get();\n+    TableRenderingContext tContext = _CURRENT_CONTEXT.get();\n \n     if (tContext == null)\n       return false;\n@@ -533,7 +534,7 @@ public static boolean isInsideContentOfTable()\n    */\n   public final Object getTableProperty(Object key)\n   {\n-    Map props = _tableProps;\n+    Map<Object, Object> props = _tableProps;\n     return (props == null) ? null : props.get(key);\n   }\n \n@@ -545,10 +546,10 @@ public final Object getTableProperty(Object key)\n    */\n   public final Object setTableProperty(Object key, Object value)\n   {\n-    Map props = _tableProps;\n+    Map<Object, Object> props = _tableProps;\n     if (props == null)\n     {\n-      props = new HashMap(5);\n+      props = new HashMap<Object, Object>(5);\n       _tableProps = props;\n     }\n     return props.put(key, value);\n@@ -590,7 +591,7 @@ public final Object setTableProperty(Object key, Object value)\n \n   // this is a map of properties that are local to this table. This is to\n   // support nested tables:\n-  private Map _tableProps = null;\n+  private Map<Object, Object> _tableProps = null;\n \n \n   // general fields\n@@ -603,5 +604,6 @@ public final Object setTableProperty(Object key, Object value)\n   public static final int DONT_KNOW = -1;\n \n \n-  static private final ThreadLocal _CURRENT_CONTEXT = new ThreadLocal();\n+  static private final ThreadLocal<TableRenderingContext> _CURRENT_CONTEXT = \n+    new ThreadLocal<TableRenderingContext>();\n }", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/table/TableRenderingContext.java"}, {"additions": 24, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/table/TableSelectManyRenderer.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/table/TableSelectManyRenderer.java", "sha": "52b5c27256338c18325e19212e9897ee5135d23c", "changes": 41, "status": "modified", "deletions": 17, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/table/TableSelectManyRenderer.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f", "patch": "@@ -18,7 +18,6 @@\n import java.io.IOException;\n \n import java.util.HashMap;\n-import java.util.Iterator;\n import java.util.Map;\n \n import javax.faces.component.NamingContainer;\n@@ -53,6 +52,8 @@ public TableSelectManyRenderer()\n   //\n   // Decode\n   //\n+  @SuppressWarnings(\"unchecked\")\n+  @Override\n   public void decode(FacesContext context, UIComponent component)\n   {\n     UIXCollection table = (UIXCollection) component;\n@@ -61,9 +62,10 @@ public void decode(FacesContext context, UIComponent component)\n     table.setRowIndex(-1);\n     String tableId = table.getClientId(context);\n \n-    Map parameters =  context.getExternalContext().getRequestParameterValuesMap();\n+    Map<String, String[]> parameters = \n+      context.getExternalContext().getRequestParameterValuesMap();\n \n-    String[] unselectedBoxes = (String[])\n+    String[] unselectedBoxes = \n       parameters.get(tableId+NamingContainer.SEPARATOR_CHAR+UNSELECTED_KEY);\n \n     // check to see if there were any selection boxes in the request.\n@@ -72,11 +74,11 @@ public void decode(FacesContext context, UIComponent component)\n     if ((unselectedBoxes == null) || (unselectedBoxes.length == 0))\n       return;\n \n-    String[] selectedBoxes = (String[])\n+    String[] selectedBoxes = \n       parameters.get(tableId+NamingContainer.SEPARATOR_CHAR+SELECTED_KEY);\n \n     // must work with both table and hgrid:\n-    final RowKeySet selectionModel;\n+    final RowKeySet<Object> selectionModel;\n     if (table instanceof UIXTable)\n       selectionModel = ((UIXTable) table).getSelectedRowKeys();\n     else\n@@ -100,9 +102,9 @@ public void decode(FacesContext context, UIComponent component)\n //      // have clicked select-all and then deselected some rows before submitting:\n //    }\n \n-    RowKeySet selectedDelta = selectionModel.clone();\n+    RowKeySet<Object> selectedDelta = selectionModel.clone();\n     selectedDelta.clear();\n-    RowKeySet unselectedDelta = selectedDelta.clone();\n+    RowKeySet<Object> unselectedDelta = selectedDelta.clone();\n \n     _setDeltas(table, selectedBoxes, unselectedBoxes,\n                selectionModel, selectedDelta, unselectedDelta);\n@@ -117,11 +119,12 @@ public void decode(FacesContext context, UIComponent component)\n \n   private void _setDeltas(UIXCollection table,\n                           String[] selectedBoxes, String[] unselectedBoxes,\n-                          RowKeySet current,\n-                          RowKeySet selectedDelta,\n-                          RowKeySet unselectedDelta)\n+                          RowKeySet<Object> current,\n+                          RowKeySet<Object> selectedDelta,\n+                          RowKeySet<Object> unselectedDelta)\n   {\n-    Map deltas = new HashMap(unselectedBoxes.length);\n+    Map<String, Boolean> deltas = \n+      new HashMap<String, Boolean>(unselectedBoxes.length);\n     for(int i=0; i< unselectedBoxes.length; i++)\n     {\n       String currencyStr = unselectedBoxes[i];\n@@ -137,10 +140,9 @@ private void _setDeltas(UIXCollection table,\n       }\n     }\n \n-    for(Iterator entries=deltas.entrySet().iterator(); entries.hasNext();)\n+    for(Map.Entry<String, Boolean> entry : deltas.entrySet())\n     {\n-      Map.Entry entry = (Map.Entry) entries.next();\n-      String currencyStr = (String) entry.getKey();\n+      String currencyStr = entry.getKey();\n       boolean select = (Boolean.TRUE == entry.getValue());\n       table.setCurrencyString(currencyStr);\n \n@@ -164,11 +166,13 @@ else if (current.remove())\n     }\n   }\n \n+  @Override\n   protected CoreRenderer createCellRenderer(FacesBean.Type type)\n   {\n     return new Checkbox(type);\n   }\n \n+  @Override\n   protected boolean isSelectOne()\n   {\n     return false;\n@@ -204,7 +208,7 @@ public static void renderScripts(\n       arc.getFormData().addNeededValue(selectedModeName);\n   }\n \n-\n+  @Override\n   protected void renderCellContent(\n     FacesContext          context,\n     RenderingContext   arc,\n@@ -245,6 +249,7 @@ public Checkbox(FacesBean.Type type)\n       super(type);\n     }\n \n+    @Override\n     protected void renderId(\n       FacesContext context,\n       UIComponent  component) throws IOException\n@@ -264,20 +269,22 @@ protected void renderId(\n \n     }\n \n-\n+    @Override\n     protected Object getType()\n     {\n       return \"checkbox\";\n     }\n \n-\n+    @Override\n     protected String getDefaultShortDescKey()\n     {\n       return \"af_tableSelectMany.SELECT_COLUMN_HEADER\";\n     }\n   }\n \n   private static final Object _JS_RENDERED_KEY = new Object();\n+  // -= Simon Lessard =- nothing is logge in this class as of 2006-08-03\n+  @SuppressWarnings(\"unused\")\n   private static final TrinidadLogger _LOG =\n     TrinidadLogger.createTrinidadLogger(TableSelectManyRenderer.class);\n }", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/table/TableSelectManyRenderer.java"}, {"additions": 29, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/table/TableSelectOneRenderer.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/table/TableSelectOneRenderer.java", "sha": "bc09e8049857bf8fdc483d33817a01b173ebabf5", "changes": 36, "status": "modified", "deletions": 7, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/table/TableSelectOneRenderer.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f", "patch": "@@ -49,6 +49,7 @@ public TableSelectOneRenderer()\n     super(CoreTable.TYPE);\n   }\n \n+  @Override\n   protected void findTypeConstants(FacesBean.Type type)\n   {\n     super.findTypeConstants(type);\n@@ -58,6 +59,8 @@ protected void findTypeConstants(FacesBean.Type type)\n   //\n   // Decode\n   //\n+  @SuppressWarnings(\"unchecked\")\n+  @Override\n   public void decode(FacesContext context, UIComponent component)\n   {\n     UIXCollection table = (UIXCollection) component;\n@@ -70,14 +73,16 @@ public void decode(FacesContext context, UIComponent component)\n \n       String selectionParam = __getSelectionParameterName(context, table);\n \n-      Map parameters =  context.getExternalContext().getRequestParameterMap();\n+      Map<String, String> parameters =  \n+        context.getExternalContext().getRequestParameterMap();\n+      \n       _LOG.finest(\"Params:{0}\", parameters);\n \n-      String selection = (String) parameters.get(selectionParam);\n+      String selection = parameters.get(selectionParam);\n \n       if (selection != null)\n       {\n-        final RowKeySet state;\n+        final RowKeySet<Object> state;\n         if (table instanceof UIXTable)\n           state = ((UIXTable) table).getSelectedRowKeys();\n         else\n@@ -86,14 +91,14 @@ public void decode(FacesContext context, UIComponent component)\n         table.setCurrencyString(selection);\n         if (!state.isContained())\n         {\n-          RowKeySet unselected = state.clone();\n+          RowKeySet<Object> unselected = state.clone();\n           // TODO : do not mutate the selectedRowKeys here.\n           // instead, mutate when event is broadcast:\n           state.clear();\n           state.add();\n           // clone, so that subsequent mutations of \"state\" will\n           // not affect the parameters of this event: bug 4733858:\n-          RowKeySet selected = state.clone();\n+          RowKeySet<Object> selected = state.clone();\n           FacesEvent event = new SelectionEvent(table, unselected, selected);\n           event.queue();\n         }\n@@ -109,11 +114,13 @@ public void decode(FacesContext context, UIComponent component)\n   //\n   // Encode\n   //\n+  @Override\n   public boolean getRendersChildren()\n   {\n     return true;\n   }\n \n+  @Override\n   protected void encodeAll(\n     FacesContext        context,\n     RenderingContext arc,\n@@ -188,6 +195,7 @@ public Radio(FacesBean.Type type)\n       super(type);\n     }\n \n+    @Override\n     protected String getCompositeId(String clientId)\n     {\n       return null;\n@@ -196,18 +204,21 @@ protected String getCompositeId(String clientId)\n     /**\n      * we do not want to render the simple span for the checkbox.\n      */\n+    @Override\n     protected boolean getRenderSimpleSpan(FacesBean bean)\n     {\n       return false;\n     }\n     /**\n      * don't render a special content style class on the radio.\n      */\n+    @Override\n     protected String getContentStyleClass(FacesBean bean)\n     {\n      return null;\n     }\n \n+    @Override\n     protected void renderId(\n       FacesContext context,\n       UIComponent  component) throws IOException\n@@ -225,6 +236,7 @@ protected void renderId(\n         writer.writeAttribute(\"id\", getClientId(context, component), null);\n     }\n \n+    @Override\n     protected Object getSubmittedValue(FacesBean bean)\n     {\n       TableRenderingContext tContext =\n@@ -233,12 +245,13 @@ protected Object getSubmittedValue(FacesBean bean)\n         Boolean.TRUE : Boolean.FALSE;\n     }\n \n+    @Override\n     protected Object getType()\n     {\n       return \"radio\";\n     }\n \n-\n+    @Override\n     protected Object getValueAttr(RenderingContext arc)\n     {\n       TableRenderingContext tContext =\n@@ -247,7 +260,7 @@ protected Object getValueAttr(RenderingContext arc)\n                 getCurrencyString();\n     }\n \n-\n+    @Override\n     protected String getShortDesc(FacesBean bean)\n     {\n       String key = getDefaultShortDescKey();\n@@ -260,28 +273,33 @@ protected String getDefaultShortDescKey()\n       return \"af_tableSelectOne.SELECT_COLUMN_HEADER\";\n     }\n \n+    @Override\n     protected char getAccessKey(FacesBean bean)\n     {\n       return CHAR_UNDEFINED;\n     }\n \n+    @Override\n     protected boolean isAutoSubmit(FacesBean bean)\n     {\n       return false;\n     }\n \n+    @Override\n     protected boolean isImmediate(FacesBean bean)\n     {\n       TableRenderingContext tContext =\n         TableRenderingContext.getCurrentInstance();\n       return tContext.isImmediate();\n     }\n \n+    @Override\n     protected boolean getReadOnly(FacesContext context, FacesBean bean)\n     {\n       return false;\n     }\n \n+    @Override\n     protected boolean getDisabled(FacesBean bean)\n     {\n       return false;\n@@ -290,6 +308,7 @@ protected boolean getDisabled(FacesBean bean)\n     /**\n      * @todo Support?\n      */\n+    @Override\n     protected String getOnblur(FacesBean bean)\n     {\n       return null;\n@@ -298,11 +317,13 @@ protected String getOnblur(FacesBean bean)\n     /**\n      * @todo Support?\n      */\n+    @Override\n     protected String getOnfocus(FacesBean bean)\n     {\n       return null;\n     }\n \n+    @Override\n     protected String getOnchange(FacesBean bean)\n     {\n       return null;\n@@ -313,6 +334,7 @@ protected String getOnselect(FacesBean bean)\n       return null;\n     }\n \n+    @Override\n     protected String getText(FacesBean bean)\n     {\n       return null;", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/table/TableSelectOneRenderer.java"}, {"additions": 3, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/table/TreeNodeColumnRenderer.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/table/TreeNodeColumnRenderer.java", "sha": "6bf5f541e1518ddc3e88434e3509a6f942750ccf", "changes": 5, "status": "modified", "deletions": 2, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/table/TreeNodeColumnRenderer.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f", "patch": "@@ -34,7 +34,8 @@\n \n public class TreeNodeColumnRenderer extends ColumnRenderer\n {\n-\n+  @SuppressWarnings(\"unchecked\")\n+  @Override\n   protected void renderKids(FacesContext          context,\n                             RenderingContext   arc,\n                             TableRenderingContext tContext,\n@@ -47,7 +48,7 @@ protected void renderKids(FacesContext          context,\n     final String onclick;\n     if (hGrid.isContainer())\n     {\n-      RowKeySet treeState = hGrid.getDisclosedRowKeys();\n+      RowKeySet<Object> treeState = hGrid.getDisclosedRowKeys();\n       String jsVarName = ttrc.getJSVarName();\n       if (treeState.isContained())\n       {", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/table/TreeNodeColumnRenderer.java"}, {"additions": 2, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/table/TreeTableNavRenderer.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/table/TreeTableNavRenderer.java", "sha": "56304447740d1dcfa0e11f55e9cc9c9a4cc8e26c", "changes": 2, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/table/TreeTableNavRenderer.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f", "patch": "@@ -40,13 +40,15 @@ public TreeTableNavRenderer(boolean isTop)\n     _isTop = isTop;\n   }\n \n+  @Override\n   public boolean getRendersChildren()\n   {\n     // we don't take any children. however, return true so that\n     // encodeAll is called:\n     return true;\n   }\n \n+  @Override\n   protected void encodeAll(\n     FacesContext        context,\n     RenderingContext arc,", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/table/TreeTableNavRenderer.java"}, {"additions": 5, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/table/TreeTableRenderingContext.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/table/TreeTableRenderingContext.java", "sha": "d1ce24bdd31a471a69d62b8ff3d4aa08d472105a", "changes": 6, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/table/TreeTableRenderingContext.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f", "patch": "@@ -87,7 +87,9 @@ public TreeTableRenderingContext(\n    * Gets the selection state for this table.\n    * This is overwritten in HGridRenderingContext\n    */\n-  public RowKeySet getSelectedRowKeys()\n+  @SuppressWarnings(\"unchecked\")\n+  @Override\n+  public RowKeySet<Object> getSelectedRowKeys()\n   {\n     return ((UIXTree) getCollectionComponent()).getSelectedRowKeys();\n   }\n@@ -142,6 +144,7 @@ public boolean isFocusColumnVisible()\n    * Get the actual column count, taking selection,  focus\n    * and object-hierarchy columns into account.\n    */\n+  @Override\n   public int getSpecialColumnCount()\n   {\n     // we need to add one for the object hierarchy column and possibly another\n@@ -153,6 +156,7 @@ public int getSpecialColumnCount()\n   /**\n    * @return null. HGrids cannot have detail-disclosure.\n    */\n+  @Override\n   public UIComponent getDetail()\n   {\n     return null;", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/table/TreeTableRenderingContext.java"}, {"additions": 18, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/table/TreeUtils.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/table/TreeUtils.java", "sha": "5d355dfef005e5f04d63f03550ea01e61e6a8e5b", "changes": 30, "status": "modified", "deletions": 12, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/table/TreeUtils.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f", "patch": "@@ -193,22 +193,23 @@ public static String callJSSelectAll(String jsVarName, boolean isSelectAll)\n     return jsVarName+\".multiSelect(\"+(isSelectAll ? \"true\" : \"false\")+\")\";\n   }\n \n-  public static void decodeGotoEvent(final Map parameters,\n+  public static void decodeGotoEvent(final Map<String, String> parameters,\n                                      UIComponent tree)\n   {\n     Object event = parameters.get(EVENT_PARAM);\n     if (_GOTO.equals(event))\n     {\n       PreserveState preserve = new PreserveState()\n       {\n+        @Override\n         protected void process(UIXHierarchy tree)\n         {\n           final int newStart;\n-          String startParam = (String) parameters.get(_START_PARAM);\n+          String startParam = parameters.get(_START_PARAM);\n           if ((startParam == null) || (\"\".equals(startParam)))\n           {\n             // this must be a root level range change:\n-            startParam = (String) parameters.get(XhtmlConstants.VALUE_PARAM);\n+            startParam = parameters.get(XhtmlConstants.VALUE_PARAM);\n             newStart = Integer.parseInt(startParam) - 1; // value is based at one.\n             tree.setRowKey(tree.getFocusRowKey());\n             tree.setRowIndex(newStart);\n@@ -228,14 +229,15 @@ protected void process(UIXHierarchy tree)\n     }\n   }\n \n-  public static void decodeFocusEvent(final Map parameters,\n+  public static void decodeFocusEvent(final Map<String, String> parameters,\n                                       UIComponent tree)\n   {\n     Object event = parameters.get(EVENT_PARAM);\n     if (_FOCUS.equals(event))\n     {\n       PreserveState preserve = new PreserveState()\n       {\n+        @Override\n         protected void process(UIXHierarchy tree)\n         {\n           _restorePathFromParam(parameters, tree);\n@@ -246,7 +248,7 @@ protected void process(UIXHierarchy tree)\n     }\n   }\n \n-  public static void decodeExpandEvents(final Map parameters,\n+  public static void decodeExpandEvents(final Map<String, String> parameters,\n                                         final UIComponent tree,\n                                         final Object focusRowKey)\n   {\n@@ -267,6 +269,7 @@ else if (_SHOW.equals(event))\n \n     PreserveState preserve = new PreserveState()\n     {\n+      @Override\n       protected void process(UIXHierarchy tree)\n       {\n         final FacesEvent event;\n@@ -283,8 +286,8 @@ protected void process(UIXHierarchy tree)\n           else\n           {\n             tree.setRowKey(focusRowKey);\n-            RowKeySet old = _getExpandedRowKeys(tree);\n-            RowKeySet newset = old.clone();\n+            RowKeySet<Object> old = _getExpandedRowKeys(tree);\n+            RowKeySet<Object> newset = old.clone();\n             if (expand)\n               newset.addAll();\n             else\n@@ -295,8 +298,8 @@ protected void process(UIXHierarchy tree)\n         else  // expand/collapse event\n         {\n           _restorePathFromParam(parameters, tree);\n-          RowKeySet old = _getExpandedRowKeys(tree);\n-          RowKeySet newset = old.clone();\n+          RowKeySet<Object> old = _getExpandedRowKeys(tree);\n+          RowKeySet<Object> newset = old.clone();\n           newset.setContained(expand);\n           event = new RowDisclosureEvent(old, newset, tree);\n         }\n@@ -307,7 +310,8 @@ protected void process(UIXHierarchy tree)\n     preserve.run((UIXHierarchy) tree);\n   }\n \n-  private static RowKeySet _getExpandedRowKeys(UIXHierarchy tree)\n+  @SuppressWarnings(\"unchecked\")\n+  private static RowKeySet<Object> _getExpandedRowKeys(UIXHierarchy tree)\n   {\n     if (tree instanceof UIXTree)\n       return ((UIXTree) tree).getDisclosedRowKeys();\n@@ -318,9 +322,11 @@ private static RowKeySet _getExpandedRowKeys(UIXHierarchy tree)\n     throw new IllegalArgumentException(\"Don't know how to get disclosedRowKeys from:\"+tree);\n   }\n \n-  private static void _restorePathFromParam(Map parameters, UIXHierarchy tree)\n+  private static void _restorePathFromParam(\n+      Map<String, String> parameters, \n+      UIXHierarchy tree)\n   {\n-    String currencyString = (String) parameters.get(_PATH_PARAM);\n+    String currencyString = parameters.get(_PATH_PARAM);\n     tree.setCurrencyString(currencyString);\n   }\n ", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/table/TreeUtils.java"}, {"additions": 1, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/html/DontRenderChildrenRenderer.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/html/DontRenderChildrenRenderer.java", "sha": "1eeab1418f414ba41a5db80bc782c7f8ac17cfed", "changes": 1, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/html/DontRenderChildrenRenderer.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f", "patch": "@@ -22,6 +22,7 @@\n  */\n public class DontRenderChildrenRenderer extends UINodeRendererBase\n {\n+  @Override\n   public boolean getRendersChildren()\n   {\n     return false;", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/html/DontRenderChildrenRenderer.java"}, {"additions": 10, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/html/layout/CorePanelAccordionRenderer.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/html/layout/CorePanelAccordionRenderer.java", "sha": "ff165b82bce6a6666f9ee260f6130acf6f5918d1", "changes": 15, "status": "modified", "deletions": 5, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/html/layout/CorePanelAccordionRenderer.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f", "patch": "@@ -55,18 +55,20 @@\n    * @param component the UIComponent object\n    * @throws IOException when some issues while writing output\n    */\n+  @SuppressWarnings(\"unchecked\")\n+  @Override\n   public void encodeBegin(FacesContext context, UIComponent component)\n     throws IOException\n   {\n     _LOG.finer(\"Entering CorePanelAccordionRenderer.encodeBegin()\");\n-    List children = component.getChildren();\n+    List<UIComponent> children = component.getChildren();\n     int numChildren = children.size();\n     UIComponent disclosedChild = null;\n     UIXShowDetail renderableChild = null;\n \n     for (int indxChild = 0; indxChild < numChildren ; indxChild++ )\n     {\n-      UIComponent child =  (UIComponent) children.get(indxChild);\n+      UIComponent child =  children.get(indxChild);\n       if (! (child instanceof UIXShowDetail) )\n       {\n         continue;\n@@ -125,6 +127,8 @@ public void encodeBegin(FacesContext context, UIComponent component)\n    * @param component the UIComponent object\n    * @throws IOException when some issues while writing output\n    */\n+  @SuppressWarnings(\"unchecked\")\n+  @Override\n   public void encodeChildren(FacesContext context, UIComponent component)\n     throws IOException\n   {\n@@ -135,7 +139,7 @@ public void encodeChildren(FacesContext context, UIComponent component)\n \n     ResponseWriter out = context.getResponseWriter();\n \n-    ListIterator iter = component.getChildren().listIterator();\n+    ListIterator<UIComponent> iter = component.getChildren().listIterator();\n \n     if (iter == null)\n     {\n@@ -343,6 +347,7 @@ else if (disclosed)\n    * @param component the UIComponent object\n    * @throws IOException when some issues while writing output\n    */\n+  @Override\n   public void encodeEnd(FacesContext context,\n                         UIComponent component)\n     throws IOException\n@@ -524,9 +529,9 @@ private boolean _isDiscloseMany(UIComponent component)\n     return discloseNone;\n   }\n \n-  private UIXShowDetail _getNextShowDetailChild(ListIterator iter)\n+  private UIXShowDetail _getNextShowDetailChild(ListIterator<UIComponent> iter)\n   {\n-    UIComponent child = (UIComponent)iter.next();\n+    UIComponent child = iter.next();\n     if (! child.isRendered() )\n     {\n       return null;", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/html/layout/CorePanelAccordionRenderer.java"}, {"additions": 6, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/html/layout/CorePanelChoiceRenderer.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/acd93fb5c5cb6f917c07b625f5b2208938a1750f/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/html/layout/CorePanelChoiceRenderer.java", "sha": "c64f099fe175b0a9544eec5844095ee3dfa69057", "changes": 8, "status": "modified", "deletions": 2, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/html/layout/CorePanelChoiceRenderer.java?ref=acd93fb5c5cb6f917c07b625f5b2208938a1750f", "patch": "@@ -45,6 +45,7 @@\n   /**\n    *  {@inheritDoc}\n    */\n+  @Override\n   protected void writeAdditionalJS(FacesContext context,\n                                    UIComponent component)\n     throws IOException\n@@ -108,6 +109,7 @@ protected void writeAdditionalJS(FacesContext context,\n    * @inheritDoc\n    *\n    */\n+  @Override\n   protected void renderListDisplay(FacesContext context,\n                                    UIComponent component,\n                                    String disclosedChildId)\n@@ -152,6 +154,7 @@ protected void renderListDisplay(FacesContext context,\n   /**\n    *  {@inheritDoc}\n    */\n+  @Override\n   protected String getHTMLControlID(String compId)\n   {\n     return compId + _CHOICE_SELECT_SUFFIX_ID_CONST;\n@@ -162,6 +165,7 @@ protected String getHTMLControlID(String compId)\n    *\n    *  The select control markup is contained within a TD element.\n    */\n+  @SuppressWarnings(\"unchecked\")\n   private void _renderSelectItemInTD(FacesContext context,\n                                      UIComponent component,\n                                      String disclosedChildId)\n@@ -190,10 +194,10 @@ private void _renderSelectItemInTD(FacesContext context,\n \n     URLEncoder encoder = rCtx.getURLEncoder();\n     // Render options now.\n-    ListIterator children = component.getChildren().listIterator();\n+    ListIterator<UIComponent> children = component.getChildren().listIterator();\n     while (children.hasNext())\n     {\n-      UIComponent child = (UIComponent) children.next();\n+      UIComponent child = children.next();\n       if (child instanceof UIXShowDetail)\n       {\n         UIXShowDetail detailItem = (UIXShowDetail) child;", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/html/layout/CorePanelChoiceRenderer.java"}], "repo": "myfaces-trinidad"}, {"commit": "https://github.com/apache/myfaces-trinidad/commit/bd1409866ad7925142a2a525f9f780fbb08f3add", "parent": "https://github.com/apache/myfaces-trinidad/commit/877b8888f0776fbd953bebda3e764e0b4fef338b", "message": "Commit nearly all of Simon Lessard's patch for ADFFACES-72 (for impl and API);  had to revert SubKeyMap changes as it broke the SubKeyMapTest, and fix the CapabilitiesDocumentParser change as it caused an NPE when running the CoreRenderKitTest", "bug_id": "myfaces-trinidad_63", "file": [{"additions": 1, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-api/src/main/java/org/apache/myfaces/trinidad/bean/FacesBean.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-api/src/main/java/org/apache/myfaces/trinidad/bean/FacesBean.java", "sha": "d59da3bdcd169ade2403774ca53ae3ce053813ab", "changes": 2, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-api/src/main/java/org/apache/myfaces/trinidad/bean/FacesBean.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add", "patch": "@@ -150,7 +150,7 @@\n    * @todo is this iterator read-only or read-write?\n    * @exception IllegalArgumentException if the key is not a list key.\n    */\n-  public Iterator<Object> entries(PropertyKey listKey);\n+  public Iterator<? extends Object> entries(PropertyKey listKey);\n \n   /**\n    * Copies all properties, bindings, and list entries from", "filename": "trinidad/trinidad-api/src/main/java/org/apache/myfaces/trinidad/bean/FacesBean.java"}, {"additions": 1, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-api/src/main/java/org/apache/myfaces/trinidad/bean/FacesBeanImpl.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-api/src/main/java/org/apache/myfaces/trinidad/bean/FacesBeanImpl.java", "sha": "a3538ab32be1724c14a0ca81a9a49f9691cd10b1", "changes": 2, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-api/src/main/java/org/apache/myfaces/trinidad/bean/FacesBeanImpl.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add", "patch": "@@ -253,7 +253,7 @@ public void addAll(FacesBean from)\n         }\n         else\n         {\n-          Iterator<Object> entries = from.entries(fromKey);\n+          Iterator<? extends Object> entries = from.entries(fromKey);\n           while (entries.hasNext())\n             addEntry(toKey, entries.next());\n         }", "filename": "trinidad/trinidad-api/src/main/java/org/apache/myfaces/trinidad/bean/FacesBeanImpl.java"}, {"additions": 15, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-api/src/main/java/org/apache/myfaces/trinidad/component/UIXComponentBase.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-api/src/main/java/org/apache/myfaces/trinidad/component/UIXComponentBase.java", "sha": "d7daea717c1bb3f10ece50ff18e2af4b0515e2ff", "changes": 26, "status": "modified", "deletions": 11, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-api/src/main/java/org/apache/myfaces/trinidad/component/UIXComponentBase.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add", "patch": "@@ -560,6 +560,7 @@ public Iterator getFacetsAndChildren()\n \n   // ------------------------------------------- Event processing methods\n \n+  @SuppressWarnings(\"unchecked\")\n   @Override\n   public void broadcast(FacesEvent event)\n     throws AbortProcessingException\n@@ -578,10 +579,12 @@ public void broadcast(FacesEvent event)\n         adfContext.partialUpdateNotify(component);\n     }\n \n-    Iterator<Object> iter = getFacesBean().entries(_LISTENERS_KEY);\n+    Iterator<FacesListener> iter = \n+      (Iterator<FacesListener>)getFacesBean().entries(_LISTENERS_KEY);\n+    \n     while (iter.hasNext())\n     {\n-      FacesListener listener = (FacesListener) iter.next();\n+      FacesListener listener = iter.next();\n       if (event.isAppropriateListener(listener))\n       {\n         event.processListener(listener);\n@@ -606,8 +609,8 @@ public void decode(FacesContext context)\n       throw new NullPointerException();\n \n     // Find all the partialTriggers and save on the context\n-    // FIXME: -= Simon Lessard =-\n-    //        JSF 1.2 specify <String, Object>\n+    // -= Simon Lessard =-\n+    // FIXME: JSF 1.2 specify <String, Object>\n     Map<Object, Object> attrs = getAttributes();\n     Object triggers = attrs.get(\"partialTriggers\");\n     if (triggers instanceof String[])\n@@ -809,8 +812,8 @@ public void processRestoreState(FacesContext context, Object state)\n   @Override\n   public void markInitialState()\n   {\n-    // FIXME: -= Simon Lessard =-\n-    //        Set to true, but never read\n+    // -= Simon Lessard =-\n+    // FIXME: Set to true, but never read\n     //_initialStateMarked = true;\n     getFacesBean().markInitialState();\n   }\n@@ -1272,15 +1275,16 @@ private void _init(\n     if (oldBean != null)\n       _facesBean.addAll(oldBean);\n \n-    // FIXME: -= Simon Lessard =- \n-    //        JSF 1.2 specify <String, Object>, but ValueMap\n+    // -= Simon Lessard =-\n+    // FIXME: JSF 1.2 specify <String, Object>, but ValueMap\n     //        accept PropertyKey as key as well\n     _attributes = new ValueMap(_facesBean);\n   }\n \n   private FacesBean                _facesBean;\n   private List<UIComponent>        _children;\n-  // FIXME: -= Simon Lessard =- JSF 1.2 specify <String, Object>\n+  // -= Simon Lessard =-\n+  // FIXME: JSF 1.2 specify <String, Object>\n   private Map<Object, Object>      _attributes;\n   private Map<String, UIComponent> _facets;\n   private UIComponent              _parent;\n@@ -1291,8 +1295,8 @@ private void _init(\n   private transient LifecycleRenderer _cachedLifecycleRenderer =\n                                                 _UNDEFINED_LIFECYCLE_RENDERER;\n   \n-  // FIXME: -= Simon Lessard =- \n-  //        _initialStateMarked is never read \n+  // -= Simon Lessard =-\n+  // FIXME: _initialStateMarked is never read \n   //        So commented out, is that ok? If so, this attribute should be deleted\n   //private transient boolean _initialStateMarked;\n ", "filename": "trinidad/trinidad-api/src/main/java/org/apache/myfaces/trinidad/component/UIXComponentBase.java"}, {"additions": 1, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-api/src/main/java/org/apache/myfaces/trinidad/context/Agent.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-api/src/main/java/org/apache/myfaces/trinidad/context/Agent.java", "sha": "28a366e61542e8a4dd08f8397a46b01cd86082af", "changes": 2, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-api/src/main/java/org/apache/myfaces/trinidad/context/Agent.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add", "patch": "@@ -163,5 +163,5 @@\n    * <br><i>accessKeys</i>- returns a Boolean value signifying whether or not the Agent\n    * supports accessKeys.\n    */\n-  public Map<String, Object> getCapabilities();\n+  public Map<Object, Object> getCapabilities();\n }", "filename": "trinidad/trinidad-api/src/main/java/org/apache/myfaces/trinidad/context/Agent.java"}, {"additions": 2, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-api/src/main/java/org/apache/myfaces/trinidad/context/DialogService.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-api/src/main/java/org/apache/myfaces/trinidad/context/DialogService.java", "sha": "81ac1a8cf160373341718ae0805fd32d0d72fa29", "changes": 4, "status": "modified", "deletions": 2, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-api/src/main/java/org/apache/myfaces/trinidad/context/DialogService.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add", "patch": "@@ -119,10 +119,10 @@ public void setCurrentLaunchSource(UIComponent component)\n    */\n   public abstract void launchDialog(\n     UIViewRoot  dialogRoot,\n-    Map<Object, Object> dialogParameters,\n+    Map<String, Object> dialogParameters,\n     UIComponent source,\n     boolean     useWindow,\n-    Map<Object, Object> windowProperties);\n+    Map<String, Object> windowProperties);\n \n \n   /**", "filename": "trinidad/trinidad-api/src/main/java/org/apache/myfaces/trinidad/context/DialogService.java"}, {"additions": 6, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-api/src/main/java/org/apache/myfaces/trinidad/context/RequestContext.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-api/src/main/java/org/apache/myfaces/trinidad/context/RequestContext.java", "sha": "988f67e5dc3012f7c0846d8415dd64b165b358ad", "changes": 13, "status": "modified", "deletions": 7, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-api/src/main/java/org/apache/myfaces/trinidad/context/RequestContext.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add", "patch": "@@ -16,7 +16,6 @@\n package org.apache.myfaces.trinidad.context;\n \n import java.awt.Color;\n-import java.net.URL;\n import java.util.List;\n import java.util.Map;\n import java.util.TimeZone;\n@@ -100,7 +99,7 @@ protected RequestContext()\n   /**\n    * @deprecated use getPageFlowScope()\n    */\n-  @SuppressWarnings(\"dep-ann\")\n+  @Deprecated\n   final public Map<String, Object> getProcessScope()\n   {\n     return getPageFlowScope();\n@@ -159,10 +158,10 @@ public abstract void returnFromDialog(\n    */\n   public abstract void launchDialog(\n     UIViewRoot  dialogRoot,\n-    Map<Object, Object> dialogParameters,\n+    Map<String, Object> dialogParameters,\n     UIComponent source,\n     boolean     useWindow,\n-    Map<Object, Object> windowProperties);\n+    Map<String, Object> windowProperties);\n \n   //\n   // General ADF Faces\n@@ -286,13 +285,13 @@ public abstract void launchDialog(\n    * Returns a Map that will accept topic names as keys, and return\n    * an URL as a result.\n    */\n-  public abstract Map<String, URL> getHelpTopic();\n+  public abstract Map<String, Object> getHelpTopic();\n \n   /**\n    * Returns a Map that will accept help system properties as keys, and return\n    * an URL as a result.\n    */\n-  public abstract Map<String, URL> getHelpSystem();\n+  public abstract Map<String, Object> getHelpSystem();\n \n   //\n   // Date formatting\n@@ -368,7 +367,7 @@ public abstract void addPartialTriggerListeners(UIComponent listener,\n    * second the first parameter into the message. (The formatter Map supports\n    * only a single parameter at this time.)\n    */\n-  public abstract Map<Object, String> getFormatter();\n+  public abstract Map<Object, Map<Object,String>> getFormatter();\n \n   /**\n    * Returns the Agent information for the current context", "filename": "trinidad/trinidad-api/src/main/java/org/apache/myfaces/trinidad/context/RequestContext.java"}, {"additions": 6, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-api/src/main/java/org/apache/myfaces/trinidad/event/LaunchEvent.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-api/src/main/java/org/apache/myfaces/trinidad/event/LaunchEvent.java", "sha": "655deeb7fc8aa7d458d6538e34f77a2e6d3b7804", "changes": 12, "status": "modified", "deletions": 6, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-api/src/main/java/org/apache/myfaces/trinidad/event/LaunchEvent.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add", "patch": "@@ -52,8 +52,8 @@ public LaunchEvent(UIComponent source,\n   {\n     super(source);\n     _viewRoot = viewRoot;\n-    _dialogParameters = new HashMap<Object, Object>();\n-    _windowProperties  = new HashMap<Object, Object>();\n+    _dialogParameters = new HashMap<String, Object>();\n+    _windowProperties  = new HashMap<String, Object>();\n \n     // LaunchEvents should always be queued for the current phase\n     setPhaseId(PhaseId.ANY_PHASE);\n@@ -84,7 +84,7 @@ public UIViewRoot getViewRoot()\n    * A map of parameters to pass to the dialog.  All entries\n    * in the map will be added to the pageFlowScope.\n    */\n-  public Map<Object, Object> getDialogParameters()\n+  public Map<String, Object> getDialogParameters()\n   {\n     return _dialogParameters;\n   }\n@@ -96,7 +96,7 @@ public UIViewRoot getViewRoot()\n    * The map will be ignored if a dialog is not used.\n    * =-=AEW getWindowProperties or getDialogProperties or ??\n    */\n-  public Map<Object, Object> getWindowProperties()\n+  public Map<String, Object> getWindowProperties()\n   {\n     return _windowProperties;\n   }\n@@ -176,6 +176,6 @@ public String toString()\n   }\n \n   private UIViewRoot          _viewRoot;\n-  private Map<Object, Object> _dialogParameters;\n-  private Map<Object, Object> _windowProperties;\n+  private Map<String, Object> _dialogParameters;\n+  private Map<String, Object> _windowProperties;\n }", "filename": "trinidad/trinidad-api/src/main/java/org/apache/myfaces/trinidad/event/LaunchEvent.java"}, {"additions": 5, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-api/src/main/java/org/apache/myfaces/trinidad/model/ProcessUtils.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-api/src/main/java/org/apache/myfaces/trinidad/model/ProcessUtils.java", "sha": "c50bfd8f45b501a88b74adfb0ced04daee9c3f0f", "changes": 8, "status": "modified", "deletions": 3, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-api/src/main/java/org/apache/myfaces/trinidad/model/ProcessUtils.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add", "patch": "@@ -339,11 +339,13 @@ public static Object getMaxVisitedRowKey(\n \n       //TODO - if I change this to use pageFlowScope it doesn't work.\n       // figure out why.\n-      Map sessionMap  = externalContext.getSessionMap();\n+      // FIXME: -= Simon Lessard\n+      //        session map is <String, Object> as of JSF 1.2\n+      Map<Object,Object> sessionMap  = externalContext.getSessionMap();\n \n-      Map maxPathMap = (Map)sessionMap.get(maxPathKey);\n+      Map<Object,Object> maxPathMap = (Map<Object,Object>)sessionMap.get(maxPathKey);\n       if (maxPathMap == null)\n-        maxPathMap = new HashMap();\n+        maxPathMap = new HashMap<Object,Object>();\n \n       Object focusRowKey = model.getFocusRowKey();\n       Object parentRowKey = model.getContainerRowKey(focusRowKey);", "filename": "trinidad/trinidad-api/src/main/java/org/apache/myfaces/trinidad/model/ProcessUtils.java"}, {"additions": 4, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-api/src/main/java/org/apache/myfaces/trinidad/model/RowKeySet.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-api/src/main/java/org/apache/myfaces/trinidad/model/RowKeySet.java", "sha": "30f22fb3d293bb0164a26dfa9a9ba1f5733a66ae", "changes": 4, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-api/src/main/java/org/apache/myfaces/trinidad/model/RowKeySet.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add", "patch": "@@ -33,6 +33,10 @@\n  * compute. Use the {@link #getSize()} method on this class for an inexpensive size.\n  * @author The Oracle ADF Faces Team\n  */\n+// -= Simon Lessard =-\n+// TODO: Since RowKeySet is used by so many components internally,\n+//       I believe we shouldn't parametrize it. I would rather see \n+//       public abstract class RowKeySet extends AbstractSet<Object> implements Cloneable\n public abstract class RowKeySet<E> extends AbstractSet<E> implements Cloneable\n {\n   public RowKeySet()", "filename": "trinidad/trinidad-api/src/main/java/org/apache/myfaces/trinidad/model/RowKeySet.java"}, {"additions": 6, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-api/src/main/java/org/apache/myfaces/trinidad/render/DialogRenderKitService.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-api/src/main/java/org/apache/myfaces/trinidad/render/DialogRenderKitService.java", "sha": "8a906c06a934b6c0f25ac1913f4aee44ed7a4742", "changes": 12, "status": "modified", "deletions": 6, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-api/src/main/java/org/apache/myfaces/trinidad/render/DialogRenderKitService.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add", "patch": "@@ -67,12 +67,12 @@\n    *   default dialog functionality.\n    */\n   public boolean launchDialog(\n-    FacesContext context,\n-    UIViewRoot   targetRoot,\n-    UIComponent  source,\n-    Map<?, ?>    processParameters,\n-    boolean      useWindow,\n-    Map<?, ?>    windowProperties);\n+    FacesContext       context,\n+    UIViewRoot         targetRoot,\n+    UIComponent        source,\n+    Map<String,Object> processParameters,\n+    boolean            useWindow,\n+    Map<String,Object> windowProperties);\n \n   /**\n    * Called to return from a dialog.", "filename": "trinidad/trinidad-api/src/main/java/org/apache/myfaces/trinidad/render/DialogRenderKitService.java"}, {"additions": 4, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-api/src/main/java/org/apache/myfaces/trinidad/util/ArrayMap.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-api/src/main/java/org/apache/myfaces/trinidad/util/ArrayMap.java", "sha": "626e3d7336eacaa500b5864be31ad5c19e9b1973", "changes": 4, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-api/src/main/java/org/apache/myfaces/trinidad/util/ArrayMap.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add", "patch": "@@ -52,6 +52,10 @@\n  * @version $Name:  $ ($Revision: adfrt/faces/adf-faces-api/src/main/java/oracle/adf/view/faces/util/ArrayMap.java#0 $) $Date: 10-nov-2005.19:08:36 $\n  * @author The Oracle ADF Faces Team\n  */\n+// -= Simon Lessard =-\n+// FIXME: Using a single array for both the key and the value leads to many \n+//        problems, especially with type safety. Using parallel arrays or \n+//        a sigle array containing nodes would be a much cleaner/safer idea.\n public class ArrayMap<K,V> extends AbstractMap<K,V> implements Cloneable\n {\n   /**", "filename": "trinidad/trinidad-api/src/main/java/org/apache/myfaces/trinidad/util/ArrayMap.java"}, {"additions": 10, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/agent/AgentFactoryImpl.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/agent/AgentFactoryImpl.java", "sha": "25eb69c1312ab158ce56efeb8534767c1e0fb59f", "changes": 16, "status": "modified", "deletions": 6, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/agent/AgentFactoryImpl.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add", "patch": "@@ -42,11 +42,12 @@ public Agent createAgent(String userAgent, String accept)\n     return agent;\n   }\n \n+  @SuppressWarnings(\"unchecked\")\n   public Agent createAgent(FacesContext facesContext)\n   {\n     AgentImpl agent = new AgentImpl();\n \n-    Map headerMap;\n+    Map<String, String> headerMap;\n     if (facesContext != null)\n     {\n       headerMap = facesContext.getExternalContext().getRequestHeaderMap();\n@@ -63,22 +64,25 @@ public Agent createAgent(FacesContext facesContext)\n   }\n \n \n-  private void _populateAgentImpl(Map headerMap, AgentImpl agent)\n+  private void _populateAgentImpl(Map<String, String> headerMap, AgentImpl agent)\n   {\n-    String userAgent = (String) headerMap.get(\"User-Agent\");\n+    String userAgent = headerMap.get(\"User-Agent\");\n \n     if ((userAgent != null) && userAgent.startsWith(\"PTG\"))\n     {\n       _populateIaswAgentImpl(userAgent,\n-                             (String) headerMap.get(_IASW_DEVICE_HINT_PARAM),agent);\n+                             headerMap.get(_IASW_DEVICE_HINT_PARAM),agent);\n       return;\n     }\n \n     // determine the agent from the headers\n-    _populateAgentImpl(userAgent, (String) headerMap.get(\"Accept\"),agent);\n+    _populateAgentImpl(userAgent, headerMap.get(\"Accept\"), agent);\n   }\n \n-  private void _populateAgentImpl(String userAgent, String accept,AgentImpl agent)\n+  private void _populateAgentImpl(\n+      String userAgent, \n+      String accept, \n+      AgentImpl agent)\n   {\n     /* for testing PocketPC */\n ", "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/agent/AgentFactoryImpl.java"}, {"additions": 10, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/agent/AgentImpl.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/agent/AgentImpl.java", "sha": "e1a79b04dc1467444b22002aca7122f6ad7cb575", "changes": 13, "status": "modified", "deletions": 3, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/agent/AgentImpl.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add", "patch": "@@ -61,37 +61,44 @@ public AgentImpl(boolean nullAgentEntry)\n     _entry = _getAgentEntry(userAgent, accept);\n   }\n   */\n+  @Override\n   public Object getType()\n   {\n     return _entry._type;\n   }\n \n+  @Override\n   public String getAgentName()\n   {\n     return _entry._agent;\n   }\n \n+  @Override\n   public String getAgentVersion()\n   {\n     return _entry._agentVersion;\n   }\n \n+  @Override\n   public String getPlatformName()\n   {\n     return _entry._platform;\n   }\n \n+  @Override\n   public String getPlatformVersion()\n   {\n     return _entry._platformVersion;\n   }\n \n+  @Override\n   public String getHardwareMakeModel()\n   {\n     return _entry._makeModel;\n   }\n \n-  public Map getCapabilities()\n+  @Override\n+  public Map<Object, Object> getCapabilities()\n   {\n     return _requestCapabilities;\n   }\n@@ -148,12 +155,12 @@ void __addRequestCapability(CapabilityKey key,Object value)\n   {\n      if (_requestCapabilities == null)\n      {\n-       _requestCapabilities = new HashMap();\n+       _requestCapabilities = new HashMap<Object, Object>();\n      }\n     _requestCapabilities.put(key,value);\n   }\n \n-  private HashMap _requestCapabilities;\n+  private HashMap<Object, Object> _requestCapabilities;\n   private AgentEntry _entry;\n   static private final AgentEntry _NULL_AGENT_ENTRY = new AgentEntry();\n   static final private TrinidadLogger _LOG = TrinidadLogger.createTrinidadLogger(AgentImpl.class);", "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/agent/AgentImpl.java"}, {"additions": 13, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/agent/AgentUtil.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/agent/AgentUtil.java", "sha": "8905122d8bf3873b16991f373327632af4380a45", "changes": 15, "status": "modified", "deletions": 2, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/agent/AgentUtil.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add", "patch": "@@ -39,7 +39,11 @@\n    * @param platform\n    * @return\n    */\n-  public static TrinidadAgent getAgent(int type, int browser, String agentVersion, int platform)\n+  public static TrinidadAgent getAgent(\n+      int type, \n+      int browser, \n+      String agentVersion, \n+      int platform)\n   {\n     final int fType = type;\n     final int fBrowser = browser;\n@@ -49,18 +53,23 @@ public static TrinidadAgent getAgent(int type, int browser, String agentVersion,\n     Agent agent =\n             new DefaultAgent ()\n             {\n+              @Override\n               public Object getType() {\n                 return AgentNameUtil.getAgentName(fType);\n               }\n \n+              @Override\n               public String getAgentName() {\n                 return AgentNameUtil.getAgentName(fBrowser);\n               }\n \n+              @Override\n               public String getAgentVersion() {\n                 return fAgentVersion;\n               }\n \n+              // FIXME: This method is never used locally, should it be removed?\n+              @SuppressWarnings(\"unused\")\n               public String getPlatFormName() {\n                 return AgentNameUtil.getPlatformName(fPlatform);\n               }\n@@ -110,7 +119,9 @@ public static TrinidadAgent getAgent(FacesContext context)\n   //=-=AEW: I don't believe this is a repository thing:  the concept\n   //of output mode is entirely renderkit specific, and the tweaks\n   //that are made to the capabilities are also renderkit specific.\n-  public static TrinidadAgent mergeCapabilities(TrinidadAgent agent, Map capabilities)\n+  public static TrinidadAgent mergeCapabilities(\n+      TrinidadAgent agent, \n+      Map<Object, Object> capabilities)\n   {\n     if (!(agent instanceof TrinidadAgentImpl))\n       throw new IllegalArgumentException(\"mergeCapabilities() may only be \" +", "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/agent/AgentUtil.java"}, {"additions": 10, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/agent/CapabilitiesProvider.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/agent/CapabilitiesProvider.java", "sha": "32e675269758e71940e7e93ff2301bdbf72cd5eb", "changes": 16, "status": "modified", "deletions": 6, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/agent/CapabilitiesProvider.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add", "patch": "@@ -54,10 +54,10 @@ static public CapabilitiesProvider getCapabilitiesProvider(URL capUrl)\n     //getCapabilitiesProvider\n     //--Are we really going to support multiple files??\n     CapabilitiesProvider provider = null;\n-    Map providerMap = _getProviderMap();\n+    Map<URL, CapabilitiesProvider> providerMap = _getProviderMap();\n     synchronized (providerMap)\n     {\n-      provider = (CapabilitiesProvider) providerMap.get(capUrl);\n+      provider = providerMap.get(capUrl);\n       if (provider == null)\n       {\n         provider = new CapabilitiesProvider(capUrl);\n@@ -83,7 +83,7 @@ public CapabilityMap getCapabilities(Agent agent)\n     synchronized (this) {\n       try\n       {\n-        caps = (CapabilityMap) _sCache.get(key);\n+        caps = _sCache.get(key);\n \n         //if not in cache, acquire\n         if (caps == null)\n@@ -134,7 +134,7 @@ private CapabilitiesDocument _getCapabilityDocument()\n     return _document;\n   }\n \n-  static private Map _getProviderMap()\n+  static private Map<URL, CapabilitiesProvider> _getProviderMap()\n   {\n     return _providerMap;\n   }\n@@ -175,11 +175,13 @@ static private Map _getProviderMap()\n \n     }\n \n+    @Override\n     public int hashCode()\n     {\n       return _hashCode;\n     }\n \n+    @Override\n     public boolean equals(Object obj)\n     {\n       if (obj == this)\n@@ -216,10 +218,12 @@ public boolean equals(Object obj)\n \n   //@todo: The caches are global. Should we store in SC?\n   //@todo: Use an LRU, to limit number of entries\n-  static private HashMap _sCache = new HashMap(64);\n+  static private HashMap<CacheKey, CapabilityMap> _sCache = \n+    new HashMap<CacheKey, CapabilityMap>(64);\n \n \n-  static private Map _providerMap = new HashMap(4);\n+  static private Map<URL, CapabilitiesProvider> _providerMap = \n+    new HashMap<URL, CapabilitiesProvider>(4);\n   static final private TrinidadLogger _LOG = TrinidadLogger.createTrinidadLogger(CapabilitiesProvider.class);\n \n }", "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/agent/CapabilitiesProvider.java"}, {"additions": 5, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/agent/CapabilityKey.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/agent/CapabilityKey.java", "sha": "abd7e08a7f427cba35908887d85e8f4846853ecc", "changes": 6, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/agent/CapabilityKey.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add", "patch": "@@ -106,11 +106,13 @@ public static CapabilityKey getKeyAt(int index)\n     return null;\n   }\n \n+  @Override\n   public boolean equals(Object obj)\n   {\n     return this == obj;\n   }\n \n+  @Override\n   public int hashCode()\n   {\n     return _capIndex;\n@@ -126,6 +128,7 @@ synchronized private static Object _createKey(String capabilityName)\n     return key;\n   }\n \n+  @Override\n   public String toString()\n   {\n     return _capName;\n@@ -136,7 +139,8 @@ public String toString()\n \n   static final private int DEFAULT_SIZE = 50;\n \n-  static private HashMap _capKeyNames = new HashMap();\n+  static private HashMap<String, CapabilityKey> _capKeyNames = \n+    new HashMap<String, CapabilityKey>();\n   static private CapabilityKey[] _keys = new CapabilityKey[DEFAULT_SIZE];\n   private static int _count = 0;\n }", "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/agent/CapabilityKey.java"}, {"additions": 21, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/agent/CapabilityMap.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/agent/CapabilityMap.java", "sha": "961386e34937c68f805f0b3befa66031f178b842", "changes": 32, "status": "modified", "deletions": 11, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/agent/CapabilityMap.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add", "patch": "@@ -30,7 +30,10 @@\n  * -- Also this impl assumes that the number of keys **will** change (increase) after init.\n  *\n  */\n-public class CapabilityMap extends AbstractMap implements Cloneable\n+// FIXME -= Simon Lessard =-\n+//       This is another map that can accept both String and another type as keys.\n+//       Shouldn't we force type safety with a single key type ?\n+public class CapabilityMap extends AbstractMap<Object, Object> implements Cloneable\n {\n \n   private CapabilityMap()\n@@ -99,7 +102,7 @@ public Object getCapability(CapabilityKey capKey)\n    * @param capabilities\n    * @return  returns a new capability map that merges key/values of the provided map\n    */\n-  public CapabilityMap merge(Map capabilities)\n+  public CapabilityMap merge(Map<Object, Object> capabilities)\n   {\n     if ((capabilities == null) || (capabilities.isEmpty()))\n       return this;\n@@ -155,6 +158,7 @@ public CapabilityMap merge(Object[] capabilities)\n    * @param key\n    * @return\n    */\n+  @Override\n   public Object get(Object key)\n   {\n     if (key == null)\n@@ -171,6 +175,7 @@ public Object get(Object key)\n    * @param value\n    * @return\n    */\n+  @Override\n   public Object put(Object key, Object value)\n   {\n     return new UnsupportedOperationException();\n@@ -179,20 +184,22 @@ public Object put(Object key, Object value)\n   /**\n    * @return\n    */\n-  public Set entrySet()\n+  @Override\n+  public Set<Map.Entry<Object, Object>> entrySet()\n   {\n     if (_entrySet == null)\n       _createEntrySet();\n \n     return _entrySet;\n   }\n \n+  @Override\n   public Object clone()\n   {\n     try\n     {\n       CapabilityMap that = (CapabilityMap) super.clone();\n-      that._indexedValues = (Object[]) _indexedValues.clone();\n+      that._indexedValues = _indexedValues.clone();\n       that._entrySet = null;\n       return that;\n     }\n@@ -220,8 +227,9 @@ synchronized private void _createEntrySet()\n   {\n     if (_entrySet == null)\n     {\n-      HashSet hs = new HashSet();\n-      Iterator iter = new KeyIterator();\n+      HashSet<Map.Entry<Object, Object>> hs = \n+        new HashSet<Map.Entry<Object, Object>>();\n+      Iterator<Object> iter = new KeyIterator();\n       while (iter.hasNext())\n       {\n         CapabilityKey capKey = (CapabilityKey) iter.next();\n@@ -241,9 +249,9 @@ private int _max(int value1, int value2)\n   }\n \n \n-  private Object[] _getMapAsArray(Map capabilities)\n+  private Object[] _getMapAsArray(Map<Object, Object> capabilities)\n   {\n-    Iterator iter = capabilities.keySet().iterator();\n+    Iterator<Object> iter = capabilities.keySet().iterator();\n     Object[] caps = new Object[capabilities.size() * 2];\n     int i = 0;\n     while (iter.hasNext())\n@@ -260,7 +268,7 @@ private int _max(int value1, int value2)\n \n \n   //KeyIterator\n-  private class KeyIterator implements Iterator\n+  private class KeyIterator implements Iterator<Object>\n   {\n     public KeyIterator()\n     {\n@@ -315,7 +323,7 @@ private void _setNext()\n \n \n   //Map Entry\n-  private class CEntry implements Entry\n+  private class CEntry implements Entry<Object, Object>\n   {\n \n     private Object key;\n@@ -327,6 +335,7 @@ private void _setNext()\n       this.value = value;\n     }\n \n+    @Override\n     public boolean equals(Object o)\n     {\n       if (this == o)\n@@ -355,6 +364,7 @@ public Object setValue(Object newValue)\n       throw new UnsupportedOperationException();\n     }\n \n+    @Override\n     public int hashCode()\n     {\n       return key.hashCode() ^ (value == null ? 0 : value.hashCode());\n@@ -363,5 +373,5 @@ public int hashCode()\n \n \n   private Object[] _indexedValues;\n-  private Set _entrySet;\n+  private Set<Map.Entry<Object, Object>> _entrySet;\n }", "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/agent/CapabilityMap.java"}, {"additions": 1, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/agent/CapabilityValue.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/agent/CapabilityValue.java", "sha": "3b0f429d208a96015a1e7cb9d11b6ec24995cbeb", "changes": 2, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/agent/CapabilityValue.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add", "patch": "@@ -72,5 +72,5 @@ synchronized static private Object _getValue(Object value)\n     return value;\n   }\n   \n-  private static HashMap _values = new HashMap(32);\n+  private static HashMap<Object, Object> _values = new HashMap<Object, Object>(32);\n }", "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/agent/CapabilityValue.java"}, {"additions": 1, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/agent/DefaultAgent.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/agent/DefaultAgent.java", "sha": "263d44211d835f29ed09aa0aa8f7680558d25ea0", "changes": 2, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/agent/DefaultAgent.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add", "patch": "@@ -91,7 +91,7 @@ public String getHardwareMakeModel()\n    *\n    * @return Map of capability name and value for the current Agent.\n    */\n-  public Map getCapabilities ()\n+  public Map<Object, Object> getCapabilities ()\n   {\n     return null;\n   }  ", "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/agent/DefaultAgent.java"}, {"additions": 1, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/agent/TrinidadAgent.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/agent/TrinidadAgent.java", "sha": "cfb2ed7e8f109332a8074327b7b933984aa4ffaf", "changes": 1, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/agent/TrinidadAgent.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add", "patch": "@@ -267,6 +267,7 @@\n    * based on it (like Netscape 6).\n    * @deprecated since 2.2.0. Use {@link #APPLICATION_GECKO}.\n    */\n+  @Deprecated\n   static public final int APPLICATION_MOZILLA   = APPLICATION_GECKO;\n \n   /**", "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/agent/TrinidadAgent.java"}, {"additions": 5, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/agent/TrinidadAgentImpl.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/agent/TrinidadAgentImpl.java", "sha": "b1973c53276d041f10ee35986098ca86815528e9", "changes": 8, "status": "modified", "deletions": 3, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/agent/TrinidadAgentImpl.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add", "patch": "@@ -121,7 +121,7 @@ public String getPlatformVersion()\n   /**\n    * @return Map of capability name and value for the current Agent.\n    */\n-  public Map getCapabilities()\n+  public Map<Object, Object> getCapabilities()\n   {\n     return _capMap;\n   }\n@@ -154,6 +154,7 @@ public Object getCapability(CapabilityKey key)\n   }\n \n \n+  @Override\n   public Object clone()\n   {\n     try\n@@ -170,6 +171,7 @@ public Object clone()\n   }\n \n \n+  @Override\n   public String toString()\n   {\n     StringBuffer buffer = new StringBuffer(\"Agent[\");\n@@ -231,7 +233,7 @@ private void _initialize(FacesContext context)\n       _major = _getMajorVersion(getAgentVersion());\n \n     _capMap = _getCapabilityMap(context);\n-    Map requestCaps = _delegate.getCapabilities();\n+    Map<Object, Object> requestCaps = _delegate.getCapabilities();\n     if (requestCaps != null)\n     {\n       _capMap = _capMap.merge(requestCaps);\n@@ -370,7 +372,7 @@ static private int _getMajorVersion(String source)\n     return (int) version;\n   }\n \n-  void __mergeCapabilities(Map capabilities)\n+  void __mergeCapabilities(Map<Object, Object> capabilities)\n   {\n     _capMap = _capMap.merge(capabilities);\n   }", "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/agent/TrinidadAgentImpl.java"}, {"additions": 9, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/agent/parse/CapabilitiesDocument.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/agent/parse/CapabilitiesDocument.java", "sha": "4dd5d0b5bd10d9e36cba2714881a5ebcdf0491c3", "changes": 17, "status": "modified", "deletions": 8, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/agent/parse/CapabilitiesDocument.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add", "patch": "@@ -35,6 +35,7 @@\n   {\n     _agents = agents;\n     _devices = devices;\n+    _includeNodeBySrcCaps = new HashMap<URL, Object>();\n     _defaultAgentCapabilities = _getDefaultAgentCapabilities(_agents);\n   }\n \n@@ -174,7 +175,7 @@ private DeviceNode _getDeviceNode(Agent agent)\n    */\n   private Object[][] _getCapabilities(Agent agent,\n                                       CapabilitiesNode[] capNodes,\n-                                      List includedByRefs,\n+                                      List<String> includedByRefs,\n                                       CapabilitiesNode matchNode)\n   {\n     assert (matchNode != null);\n@@ -187,7 +188,7 @@ private DeviceNode _getDeviceNode(Agent agent)\n \n     //check for circular dependecy\n     if (includedByRefs == null)\n-      includedByRefs = new ArrayList();\n+      includedByRefs = new ArrayList<String>();\n \n     if (matchNode.__getId() != null)\n     {\n@@ -240,7 +241,7 @@ private DeviceNode _getDeviceNode(Agent agent)\n     assert (capNodes != null);\n     assert (dcNode != null);\n \n-    ArrayList includedByRefs = new ArrayList();\n+    ArrayList<String> includedByRefs = new ArrayList<String>();\n \n     //process node that includes by reference\n     IncludeNode[] refIncludes = dcNode.__getIncludesByRef();\n@@ -279,7 +280,7 @@ private DeviceNode _getDeviceNode(Agent agent)\n    */\n   private Object[][] _getCapabilities(Agent agent,\n                                       CapabilitiesNode[] capNodes,\n-                                      List includedByRefs,\n+                                      List<String> includedByRefs,\n                                       String refId)\n   {\n     assert (capNodes != null);\n@@ -305,15 +306,15 @@ private DeviceNode _getDeviceNode(Agent agent)\n    */\n   private Object[] _getCapabilities(URL srcUrl)\n   {\n-    Object o = includeNodeBySrcCaps.get(srcUrl);\n+    Object o = _includeNodeBySrcCaps.get(srcUrl);\n     if (o != null)\n       return (Object[]) o;\n \n     Object[] caps = null;\n-    synchronized (includeNodeBySrcCaps)\n+    synchronized (_includeNodeBySrcCaps)\n     {\n       caps = CapabilityDataDocumentParser.parse(srcUrl);\n-      includeNodeBySrcCaps.put(srcUrl, caps);\n+      _includeNodeBySrcCaps.put(srcUrl, caps);\n     }\n \n     return caps;\n@@ -348,7 +349,7 @@ private DeviceNode _getDeviceNode(Agent agent)\n \n   private CapabilitiesNode[] _agents;\n   private DeviceNode[] _devices;\n-  private HashMap includeNodeBySrcCaps = new HashMap();\n+  private HashMap<URL, Object> _includeNodeBySrcCaps;\n   private Object[][] _defaultAgentCapabilities;\n \n   static final CapabilitiesDocument EMPTY_DOCUMENT = new CapabilitiesDocument();", "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/agent/parse/CapabilitiesDocument.java"}, {"additions": 15, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/agent/parse/CapabilitiesDocumentParser.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/agent/parse/CapabilitiesDocumentParser.java", "sha": "4766723ec1342e4e1080ac1cc57d139f4bcb1925", "changes": 22, "status": "modified", "deletions": 7, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/agent/parse/CapabilitiesDocumentParser.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add", "patch": "@@ -43,7 +43,11 @@\n         implements XMLConstants\n {\n \n-  private CapabilitiesDocumentParser() {}\n+  private CapabilitiesDocumentParser()\n+  {\n+    _capabilitiesNodes = new ArrayList<CapabilitiesNode>();\n+    _deviceNodes = new ArrayList<DeviceNode>();\n+  }\n \n   static public CapabilitiesDocument createInstance (URL capUrl)\n   {\n@@ -95,6 +99,7 @@ static public CapabilitiesDocument createInstance (URL capUrl)\n   }\n \n \n+  @Override\n   public void startElement (ParseContext context,\n                             String       namespaceURI,\n                             String       localName,\n@@ -115,6 +120,7 @@ public void startElement (ParseContext context,\n   }\n \n \n+  @Override\n   public NodeParser startChildElement(ParseContext context,\n                                       String       namespaceURI,\n                                       String       localName,\n@@ -143,6 +149,7 @@ else if (ELEMENT_DEVICE.equals(localName))\n   }\n \n \n+  @Override\n   public void addCompletedChild (ParseContext context,\n                                  String       namespaceURI,\n                                  String       localName,\n@@ -153,13 +160,14 @@ public void addCompletedChild (ParseContext context,\n       return;\n \n     if (ELEMENT_CAPABILITIES.equals(localName))\n-      _capabilitiesNodes.add(child);\n+      _capabilitiesNodes.add((CapabilitiesNode)child);\n \n     if (ELEMENT_DEVICE.equals(localName))\n-      _deviceNodes.add(child);\n+      _deviceNodes.add((DeviceNode)child);\n   }\n \n \n+  @Override\n   public Object endElement (ParseContext context,\n                             String       namespaceURI,\n                             String       localName)\n@@ -170,23 +178,23 @@ public Object endElement (ParseContext context,\n     CapabilitiesNode[] agents = null;\n     if (_capabilitiesNodes.size() > 0)\n     {\n-      agents = (CapabilitiesNode[]) _capabilitiesNodes.toArray\n+      agents = _capabilitiesNodes.toArray\n               (new CapabilitiesNode[_capabilitiesNodes.size()]);\n     }\n \n     DeviceNode[] devices = null;\n     if (_deviceNodes.size() > 0)\n     {\n-      devices = (DeviceNode[]) _deviceNodes.toArray\n+      devices = _deviceNodes.toArray\n               (new DeviceNode[_deviceNodes.size()]);\n     }\n \n     CapabilitiesDocument document = new CapabilitiesDocument(agents, devices);\n     return document;\n   }\n \n-  private List _capabilitiesNodes = new ArrayList();\n-  private List _deviceNodes = new ArrayList();\n+  private List<CapabilitiesNode> _capabilitiesNodes;\n+  private List<DeviceNode> _deviceNodes;\n \n   static final String __BASE_URL = \"baseURL\";\n ", "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/agent/parse/CapabilitiesDocumentParser.java"}, {"additions": 16, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/agent/parse/CapabilitiesNodeParser.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/agent/parse/CapabilitiesNodeParser.java", "sha": "b80dcae526de680ca0f6690913788c00ab8e8ef1", "changes": 24, "status": "modified", "deletions": 8, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/agent/parse/CapabilitiesNodeParser.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add", "patch": "@@ -33,7 +33,12 @@\n  */\n class CapabilitiesNodeParser extends BaseNodeParser implements XMLConstants\n {\n-\n+  CapabilitiesNodeParser()\n+  {\n+    _includeNodes = new ArrayList<IncludeNode>();\n+  }\n+  \n+  @Override\n   public void startElement (ParseContext context,\n                             String       namespaceURI,\n                             String       localName,\n@@ -84,6 +89,7 @@ public void startElement (ParseContext context,\n   }\n \n \n+  @Override\n   public NodeParser startChildElement(ParseContext context,\n                                       String       namespaceURI,\n                                       String       localName,\n@@ -98,6 +104,7 @@ public NodeParser startChildElement(ParseContext context,\n   }\n \n \n+  @Override\n   public void addCompletedChild (ParseContext context,\n                                  String       namespaceURI,\n                                  String       localName,\n@@ -108,29 +115,30 @@ public void addCompletedChild (ParseContext context,\n       return;\n \n     if (ELEMENT_INCLUDE.equals(localName))\n-      _includeNodes.add(child);\n+      _includeNodes.add((IncludeNode)child);\n   }\n \n+  @Override\n   public Object endElement (ParseContext context,\n                             String       namespaceURI,\n                             String       localName)\n   {\n     if ((_id == null) && (_agent == null))\n       return null;\n \n-    ArrayList nodesWithRefList = new ArrayList(_includeNodes.size());\n-    ArrayList nodesWithSrcList = new ArrayList(_includeNodes.size());\n+    ArrayList<IncludeNode> nodesWithRefList = new ArrayList<IncludeNode>(_includeNodes.size());\n+    ArrayList<IncludeNode> nodesWithSrcList = new ArrayList<IncludeNode>(_includeNodes.size());\n     for (int i = 0; i < _includeNodes.size(); i++)\n     {\n-      IncludeNode node = (IncludeNode) _includeNodes.get(i);\n+      IncludeNode node = _includeNodes.get(i);\n       if (node.__getRefId() != null)\n         nodesWithRefList.add(node);\n       else\n         nodesWithSrcList.add(node);\n     }\n-    IncludeNode[] nodesWithRef = (IncludeNode[])\n+    IncludeNode[] nodesWithRef = \n             nodesWithRefList.toArray(new IncludeNode[nodesWithRefList.size()]);\n-    IncludeNode[] nodesWithSrc = (IncludeNode[])\n+    IncludeNode[] nodesWithSrc = \n             nodesWithSrcList.toArray(new IncludeNode[nodesWithSrcList.size()]);\n \n     return new CapabilitiesNode(_id, _isDefault, _agent,\n@@ -143,7 +151,7 @@ public Object endElement (ParseContext context,\n   private boolean _isDefault;\n   private NameVersion _agent;\n   private NameVersion _platform;\n-  private List _includeNodes = new ArrayList();\n+  private List<IncludeNode> _includeNodes;\n \n   static private final TrinidadLogger _LOG = TrinidadLogger.createTrinidadLogger(CapabilitiesNodeParser.class);\n }", "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/agent/parse/CapabilitiesNodeParser.java"}, {"additions": 5, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/agent/parse/CapabilityDataDocumentParser.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/agent/parse/CapabilityDataDocumentParser.java", "sha": "638c645721354c99a373f20f3b0d966f8eb048ec", "changes": 6, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/agent/parse/CapabilityDataDocumentParser.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add", "patch": "@@ -45,6 +45,7 @@\n \n   private CapabilityDataDocumentParser()\n   {\n+    _capList = new ArrayList<Object>();\n   }\n \n   static public Object[] parse (URL srcUrl)\n@@ -92,6 +93,7 @@ private CapabilityDataDocumentParser()\n     return new Object[0];\n   }\n \n+  @Override\n   public void startElement (ParseContext context,\n                             String       namespaceURI,\n                             String       localName,\n@@ -105,6 +107,7 @@ public void startElement (ParseContext context,\n     }\n   }\n \n+  @Override\n   public NodeParser startChildElement(\n     ParseContext context,\n     String       namespaceURI,\n@@ -144,6 +147,7 @@ public NodeParser startChildElement(\n   }\n \n \n+  @Override\n   public Object endElement (ParseContext context,\n                             String       namespaceURI,\n                             String       localName)\n@@ -154,7 +158,7 @@ public Object endElement (ParseContext context,\n     return null;\n   }\n \n-  private List _capList = new ArrayList();\n+  private List<Object> _capList;\n \n   static private final TrinidadLogger _LOG = TrinidadLogger.createTrinidadLogger(CapabilityDataDocumentParser.class);\n ", "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/agent/parse/CapabilityDataDocumentParser.java"}, {"additions": 16, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/agent/parse/ComponentNodeParser.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/agent/parse/ComponentNodeParser.java", "sha": "9e83a4e4c41bc57be95a6b890c3711c1e204af42", "changes": 24, "status": "modified", "deletions": 8, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/agent/parse/ComponentNodeParser.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add", "patch": "@@ -29,7 +29,12 @@\n  */\n class ComponentNodeParser extends BaseNodeParser implements XMLConstants\n {\n-\n+  ComponentNodeParser()\n+  {\n+    _includeNodes = new ArrayList<IncludeNode>();\n+  }\n+  \n+  @Override\n   public void startElement (ParseContext context,\n                             String       namespaceURI,\n                             String       localName,\n@@ -46,6 +51,7 @@ public void startElement (ParseContext context,\n \n   }\n \n+  @Override\n   public NodeParser startChildElement(ParseContext context,\n                                       String       namespaceURI,\n                                       String       localName,\n@@ -60,6 +66,7 @@ public NodeParser startChildElement(ParseContext context,\n   }\n \n \n+  @Override\n   public void addCompletedChild (ParseContext context,\n                                  String       namespaceURI,\n                                  String       localName,\n@@ -69,30 +76,31 @@ public void addCompletedChild (ParseContext context,\n     if (child == null)\n       return;\n \n-    _includeNodes.add(child);\n+    _includeNodes.add((IncludeNode)child);\n   }\n \n+  @Override\n   public Object endElement (ParseContext context,\n                             String       namespaceURI,\n                             String       localName)\n   {\n-    ArrayList nodesWithRefList = new ArrayList(_includeNodes.size());\n-    ArrayList nodesWithSrcList = new ArrayList(_includeNodes.size());\n+    ArrayList<IncludeNode> nodesWithRefList = new ArrayList<IncludeNode>(_includeNodes.size());\n+    ArrayList<IncludeNode> nodesWithSrcList = new ArrayList<IncludeNode>(_includeNodes.size());\n     for (int i = 0; i < _includeNodes.size(); i++)\n     {\n-      IncludeNode node = (IncludeNode) _includeNodes.get(i);\n+      IncludeNode node = _includeNodes.get(i);\n       if (node.__getRefId() != null)\n         nodesWithRefList.add(node);\n       else\n         nodesWithSrcList.add(node);\n     }\n-    IncludeNode[] nodesWithRef = (IncludeNode[])\n+    IncludeNode[] nodesWithRef = \n             nodesWithRefList.toArray(new IncludeNode[nodesWithRefList.size()]);\n-    IncludeNode[] nodesWithSrc = (IncludeNode[])\n+    IncludeNode[] nodesWithSrc = \n             nodesWithSrcList.toArray(new IncludeNode[nodesWithSrcList.size()]);\n     return new DeviceComponentNode(_type, nodesWithRef, nodesWithSrc);    \n   }\n \n-  private List _includeNodes = new ArrayList();\n+  private List<IncludeNode> _includeNodes;\n   private String _type;\n }", "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/agent/parse/ComponentNodeParser.java"}, {"additions": 4, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/agent/parse/DeviceNode.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/agent/parse/DeviceNode.java", "sha": "fdaac152a64bba267775bfb9a45b53fcc0fa404b", "changes": 4, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/agent/parse/DeviceNode.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add", "patch": "@@ -47,8 +47,12 @@ public DeviceNode(String id, NameVersion makeModel,\n     return _makeModel.match(makeModel, null);\n   }\n \n+  // -= Simon Lessard =-\n+  // FIXME: _id and _extendsId are never read locally\n+  @SuppressWarnings(\"unused\")\n   private String _id;\n   private NameVersion _makeModel;\n+  @SuppressWarnings(\"unused\")\n   private String _extendsId;\n   private DeviceComponentNode[] _componentNodes;\n }", "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/agent/parse/DeviceNode.java"}, {"additions": 12, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/agent/parse/DeviceNodeParser.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/agent/parse/DeviceNodeParser.java", "sha": "890d8f7b3d2191acea6731ca5483915a8e5e1fbe", "changes": 15, "status": "modified", "deletions": 3, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/agent/parse/DeviceNodeParser.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add", "patch": "@@ -31,6 +31,12 @@\n  */\n class DeviceNodeParser extends BaseNodeParser implements XMLConstants\n {\n+  DeviceNodeParser()\n+  {\n+    _componentNodes = new ArrayList<DeviceComponentNode>();\n+  }\n+  \n+  @Override\n   public void startElement (ParseContext context,\n                             String       namespaceURI,\n                             String       localName,\n@@ -71,6 +77,7 @@ public void startElement (ParseContext context,\n   }\n \n \n+  @Override\n   public NodeParser startChildElement(ParseContext context,\n                                       String       namespaceURI,\n                                       String       localName,\n@@ -85,6 +92,7 @@ public NodeParser startChildElement(ParseContext context,\n \n   }\n \n+  @Override\n   public void addCompletedChild (ParseContext context,\n                                  String       namespaceURI,\n                                  String       localName,\n@@ -94,17 +102,18 @@ public void addCompletedChild (ParseContext context,\n     if (child == null)\n       return;\n \n-    _componentNodes.add(child);\n+    _componentNodes.add((DeviceComponentNode)child);\n   }\n \n+  @Override\n   public Object endElement (ParseContext context,\n                             String       namespaceURI,\n                             String       localName)\n   {\n     if ((_id == null) && (_model == null))\n       return null;\n \n-    DeviceComponentNode[] cNodes = (DeviceComponentNode[])\n+    DeviceComponentNode[] cNodes = \n             _componentNodes.toArray(\n                     new DeviceComponentNode[_componentNodes.size()]);\n     return new DeviceNode(_id, _model, _extendsId, cNodes);\n@@ -114,7 +123,7 @@ public Object endElement (ParseContext context,\n   private String _id;\n   private NameVersion _model;\n   private String _extendsId;\n-  private List _componentNodes = new ArrayList();\n+  private List<DeviceComponentNode> _componentNodes;\n \n   static private final TrinidadLogger _LOG = TrinidadLogger.createTrinidadLogger(DeviceNodeParser.class);\n }", "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/agent/parse/DeviceNodeParser.java"}, {"additions": 2, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/agent/parse/IncludeNodeParser.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/agent/parse/IncludeNodeParser.java", "sha": "e766a1e84102d841fa434b5e2ef4db5e024f1a03", "changes": 2, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/agent/parse/IncludeNodeParser.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add", "patch": "@@ -30,6 +30,7 @@\n class IncludeNodeParser extends BaseNodeParser implements XMLConstants\n {\n \n+  @Override\n   public void startElement (ParseContext context,\n                             String       namespaceURI,\n                             String       localName,\n@@ -57,6 +58,7 @@ public void startElement (ParseContext context,\n     _refId = refId;\n   }\n \n+  @Override\n   public Object endElement (ParseContext context,\n                             String       namespaceURI,\n                             String       localName)", "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/agent/parse/IncludeNodeParser.java"}, {"additions": 29, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/agent/parse/NameVersion.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/agent/parse/NameVersion.java", "sha": "bfc433175c0679b2e699461a0fa4ce634a61127a", "changes": 50, "status": "modified", "deletions": 21, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/agent/parse/NameVersion.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add", "patch": "@@ -107,7 +107,7 @@ public double match(String name, VersionId version)\n     int i = 0;\n     char ch = data[i];\n \n-    ArrayList entries = new ArrayList(5);\n+    ArrayList<Object[]> entries = new ArrayList<Object[]>(5);\n     VersionEntry vEntry = null;\n     NameEntry head, curr;\n     head = curr = new NameEntry();\n@@ -173,7 +173,9 @@ public double match(String name, VersionId version)\n           }\n           else\n           {\n-            while (!Character.isSpace(ch) && (ch != (char) 0x1000000))\n+            // 2006-08-02: -= Simon Lessard =-\n+            //while (!Character.isSpace(ch) && (ch != (char) 0x1000000))\n+            while (!Character.isWhitespace(ch) && (ch != (char) 0x1000000))\n               ch = data[++i];\n           }\n \n@@ -207,7 +209,9 @@ public double match(String name, VersionId version)\n           i++;\n           break;\n         default:\n-          if ((!inQuote) && (Character.isSpace(ch)))\n+          // 2006-08-02: -= Simon Lessard =-\n+          //if ((!inQuote) && (Character.isSpace(ch)))\n+          if ((!inQuote) && (Character.isWhitespace(ch)))\n           {\n             if (start != i)\n             {\n@@ -228,7 +232,9 @@ public double match(String name, VersionId version)\n             }\n             //Skip space\n             ch = data[++i];\n-            while (Character.isSpace(ch))\n+            // 2006-08-02: -= Simon Lessard =-\n+            //while (Character.isSpace(ch))\n+            while (Character.isWhitespace(ch))\n               ch = data[++i];\n             start = i;\n           }\n@@ -280,7 +286,9 @@ private VersionEntry _parseVersion(String value,\n           version = value.substring(0, i);\n           for (++i; i < length; i++)\n           {\n-            if (!Character.isSpace(ch))\n+            // 2006-08-02: -= Simon Lessard =-\n+            //if (!Character.isSpace(ch))\n+            if (!Character.isWhitespace(ch))\n               throw new ParseException(\"Unexpected char.\", offset + i);\n           }\n           //if the version string was simpley \"*\" or \"+\"\n@@ -370,15 +378,15 @@ private double _matchVersion(VersionEntry entry,\n \n     if (entry._type == VersionEntry.STAR_TYPE)\n     {\n-      Iterator vIterator1 = version.iterator();\n-      Iterator vIterator2 = entry._versionId.iterator();\n+      Iterator<String> vIterator1 = version.iterator();\n+      Iterator<String> vIterator2 = entry._versionId.iterator();\n \n       //Check upto where both have values\n       int matchedParts = 0;\n       while ((vIterator1.hasNext()) && (vIterator2.hasNext()))\n       {\n-        String part1 = (String) vIterator1.next();\n-        String part2 = (String) vIterator2.next();\n+        String part1 = vIterator1.next();\n+        String part2 = vIterator2.next();\n         if (!part1.equals(part2))\n           return NO_MATCH;\n         matchedParts++;\n@@ -388,7 +396,7 @@ private double _matchVersion(VersionEntry entry,\n       //parts (sub versions), then it must be .0's\n       while (vIterator2.hasNext())\n       {\n-        if (!\"0\".equals((String) vIterator2.next()))\n+        if (!\"0\".equals(vIterator2.next()))\n           return NO_MATCH;\n       }\n \n@@ -405,16 +413,16 @@ private double _matchVersion(VersionEntry entry,\n     }\n     else if (entry._type == VersionEntry.PLUS_TYPE)\n     {\n-      Iterator vIterator1 = version.iterator();\n-      Iterator vIterator2 = entry._versionId.iterator();\n+      Iterator<String> vIterator1 = version.iterator();\n+      Iterator<String> vIterator2 = entry._versionId.iterator();\n \n       //Check upto where both have values\n       while ((vIterator1.hasNext()) && (vIterator2.hasNext()))\n       {\n         try\n         {\n-          int v1 = Integer.parseInt((String) vIterator1.next());\n-          int v2 = Integer.parseInt((String) vIterator2.next());\n+          int v1 = Integer.parseInt(vIterator1.next());\n+          int v2 = Integer.parseInt(vIterator2.next());\n           if (v1 > v2)\n             return (VERSION_GE_MATCH * (entry._versionId.getVersion() / version.getVersion()));\n           else if (v1 < v2)\n@@ -432,7 +440,7 @@ else if (v1 < v2)\n       {\n         try\n         {\n-          if (Integer.parseInt((String) vIterator2.next()) != 0)\n+          if (Integer.parseInt(vIterator2.next()) != 0)\n             return NO_MATCH;\n         }\n         catch (NumberFormatException npe)\n@@ -446,27 +454,27 @@ else if (v1 < v2)\n     else\n     {\n       //exact match\n-      Iterator vIterator1 = version.iterator();\n-      Iterator vIterator2 = entry._versionId.iterator();\n+      Iterator<String> vIterator1 = version.iterator();\n+      Iterator<String> vIterator2 = entry._versionId.iterator();\n \n       //Check upto where both have values\n       while ((vIterator1.hasNext()) && (vIterator2.hasNext()))\n       {\n-        String part1 = (String) vIterator1.next();\n-        String part2 = (String) vIterator2.next();\n+        String part1 = vIterator1.next();\n+        String part2 = vIterator2.next();\n         if (!part1.equals(part2))\n           return NO_MATCH;\n       }\n \n       while (vIterator1.hasNext())\n       {\n-        if (!\"0\".equals((String) vIterator1.next()))\n+        if (!\"0\".equals(vIterator1.next()))\n           return NO_MATCH;\n       }\n \n       while (vIterator2.hasNext())\n       {\n-        if (!\"0\".equals((String) vIterator2.next()))\n+        if (!\"0\".equals(vIterator2.next()))\n           return NO_MATCH;\n       }\n ", "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/agent/parse/NameVersion.java"}, {"additions": 8, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/agent/parse/VersionId.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/agent/parse/VersionId.java", "sha": "74ce4437978298c4ad53e8bb2d8d6806a808d649", "changes": 13, "status": "modified", "deletions": 5, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/agent/parse/VersionId.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add", "patch": "@@ -32,6 +32,7 @@ public VersionId(String version)\n     _version = _parseVersion(version);\n   }\n \n+  @Override\n   public String toString()\n   {\n     return _versionString;\n@@ -53,7 +54,7 @@ public double getVersion()\n         char currChar = _versionString.charAt(currIndex);\n         if ((currChar >= '0') && (currChar <= '9'))\n         {\n-          double addValue = (double) (currChar - '0');\n+          double addValue = (currChar - '0');\n           if (hasDecimal)\n           {\n             // handle digits to right of decimal\n@@ -88,7 +89,7 @@ public double getVersion()\n   }\n \n \n-  public Iterator iterator()\n+  public Iterator<String> iterator()\n   {\n     return new VIterator();\n   }\n@@ -112,7 +113,9 @@ private Entry _parseVersion(String value)\n     while (i < length + 1)\n     {\n       //Ignore spaces. TODO: This should happen only for start and end (trim).\n-      while (Character.isSpace(ch))\n+      // 2006-08-02: -= Simon Lessard =-\n+      //while (Character.isSpace(ch))\n+      while (Character.isWhitespace(ch))\n         ch = data[++i];\n \n       switch (ch)\n@@ -151,7 +154,7 @@ private Entry _parseVersion(String value)\n     Entry next;\n   }\n \n-  private class VIterator implements Iterator\n+  private class VIterator implements Iterator<String>\n   {\n     public VIterator()\n     {\n@@ -168,7 +171,7 @@ public boolean hasNext()\n       return (null != _current);\n     }\n \n-    public Object next()\n+    public String next()\n     {\n       String part = _current.text;\n       _current = _current.next;", "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/agent/parse/VersionId.java"}, {"additions": 1, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/application/NavigationHandlerImpl.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/application/NavigationHandlerImpl.java", "sha": "c0e298e70a85bbae4faab71b82e02bd1f4835f6f", "changes": 1, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/application/NavigationHandlerImpl.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add", "patch": "@@ -29,6 +29,7 @@ public NavigationHandlerImpl(NavigationHandler delegate)\n     _dialogPrefix = null;\n   }\n \n+  @Override\n   public void handleNavigation(\n     FacesContext context,\n     String       fromAction,", "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/application/NavigationHandlerImpl.java"}, {"additions": 56, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/application/StateManagerImpl.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/application/StateManagerImpl.java", "sha": "792d9b2277e7fef51b17c0db85ac3fc448c709aa", "changes": 86, "status": "modified", "deletions": 30, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/application/StateManagerImpl.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add", "patch": "@@ -169,6 +169,8 @@ static public UIViewRoot restoreViewRoot(\n     return root;\n   }\n \n+  @SuppressWarnings(\"unchecked\")\n+  @Override\n   public SerializedView saveSerializedView(FacesContext context)\n   {\n     if (!isSavingStateInClient(context))\n@@ -183,8 +185,8 @@ public SerializedView saveSerializedView(FacesContext context)\n \n     // See if we're going to use the application view cache for\n     // this request\n-    Map applicationViewCache = null;\n-    Map perSessionApplicationViewCache = null;\n+    Map<String, Object> applicationViewCache = null;\n+    Map<String, Object> perSessionApplicationViewCache = null;\n     if (_useApplicationViewCache(context))\n     {\n       // OK, we are: so find the application cache and\n@@ -225,12 +227,14 @@ public SerializedView saveSerializedView(FacesContext context)\n         assert(cache != null);\n \n         // Store bits of the session as subkeys off of the session\n-        Map stateMap = new SubKeyMap(\n+        Map<String, Object> stateMap = new SubKeyMap(\n                          context.getExternalContext().getSessionMap(),\n                          _VIEW_CACHE_KEY + \".\");\n         // Sadly, we can't save just a SerializedView, because we should\n         // save a serialized object, and SerializedView is a *non*-static\n         // inner class of StateManager\n+        // -= Simon Lessard =-\n+        // FIXME: pageState is never read\n         PageState pageState = new PageState(\n             structure,\n             state,\n@@ -278,12 +282,15 @@ public SerializedView saveSerializedView(FacesContext context)\n     return view;\n   }\n \n+  @Override\n   public void writeState(FacesContext context,\n                          SerializedView state) throws IOException\n   {\n     _delegate.writeState(context, state);\n   }\n \n+  @SuppressWarnings(\"unchecked\")\n+  @Override\n   public UIViewRoot restoreView(FacesContext context, String viewId,\n                                 String renderKitId)\n   {\n@@ -312,8 +319,8 @@ public UIViewRoot restoreView(FacesContext context, String viewId,\n       // Load from the application cache\n       if (_APPLICATION_CACHE_TOKEN.equals(token))\n       {\n-        Map cache = _getApplicationViewCache(context);\n-        Map perSessionCache =\n+        Map<String, Object> cache = _getApplicationViewCache(context);\n+        Map<String, Object> perSessionCache =\n           _getPerSessionApplicationViewCache(context);\n \n         // Synchronize on the application-level cache.\n@@ -336,10 +343,10 @@ public UIViewRoot restoreView(FacesContext context, String viewId,\n       }\n       else\n       {\n-        Map stateMap = new SubKeyMap(\n+        Map<String, Object> stateMap = new SubKeyMap(\n                          context.getExternalContext().getSessionMap(),\n                          _VIEW_CACHE_KEY + \".\");\n-        viewState = (PageState) stateMap.get((String) token);\n+        viewState = (PageState) stateMap.get(token);\n \n         // Make sure that if the view state is present, the cache still\n         // has the token, and vice versa\n@@ -380,7 +387,7 @@ public UIViewRoot restoreView(FacesContext context, String viewId,\n         // newRoot.getChildren().addAll(root.getChildren());\n         // because \"root\"'s child List is being mutated as the List\n         // is traversed.\n-        List temp = new ArrayList(root.getChildCount());\n+        List<UIComponent> temp = new ArrayList<UIComponent>(root.getChildCount());\n         temp.addAll(root.getChildren());\n         newRoot.getChildren().addAll(temp);\n \n@@ -448,6 +455,7 @@ public UIViewRoot restoreView(FacesContext context, String viewId,\n     return null;\n   }\n \n+  @Override\n   public boolean isSavingStateInClient(FacesContext context)\n   {\n     return _delegate.isSavingStateInClient(context);\n@@ -457,22 +465,26 @@ public boolean isSavingStateInClient(FacesContext context)\n   // Protected APIs: we don't want\n   //\n \n+  @Override\n   protected Object getTreeStructureToSave(FacesContext context)\n   {\n     throw new UnsupportedOperationException();\n   }\n \n+  @Override\n   protected Object getComponentStateToSave(FacesContext context)\n   {\n     throw new UnsupportedOperationException();\n   }\n \n+  @Override\n   protected UIViewRoot restoreTreeStructure\n     (FacesContext context, String viewId, String renderKitId)\n   {\n     throw new UnsupportedOperationException();\n   }\n \n+  @Override\n   protected void restoreComponentState\n     (FacesContext context, UIViewRoot viewRoot, String renderKitId)\n   {\n@@ -530,38 +542,41 @@ private int _getCacheSize(FacesContext context)\n   // @todo Map is a bad structure\n   // @todo a static size is bad\n   //\n-  static private Map _getApplicationViewCache(FacesContext context)\n+  @SuppressWarnings(\"unchecked\")\n+  static private Map<String, Object> _getApplicationViewCache(FacesContext context)\n   {\n     synchronized (_APPLICATION_VIEW_CACHE_LOCK)\n     {\n-      Map appMap = context.getExternalContext().getApplicationMap();\n-      Map cache = (Map) appMap.get(_APPLICATION_VIEW_CACHE_KEY);\n+      Map<String, Object> appMap = context.getExternalContext().getApplicationMap();\n+      Map<String, Object> cache = (Map<String, Object>) appMap.get(_APPLICATION_VIEW_CACHE_KEY);\n       if (cache == null)\n       {\n-        cache = new HashMap(128);\n+        cache = new HashMap<String, Object>(128);\n         appMap.put(_APPLICATION_VIEW_CACHE_KEY, cache);\n       }\n \n       return cache;\n     }\n   }\n \n-  static private Map _getPerSessionApplicationViewCache(FacesContext context)\n+  @SuppressWarnings(\"unchecked\")\n+  static private Map<String, Object> _getPerSessionApplicationViewCache(FacesContext context)\n   {\n     ExternalContext external = context.getExternalContext();\n     Object session = external.getSession(true);\n     assert(session != null);\n \n-    Map cache;\n+    Map<String, Object> cache;\n     // Synchronize on the session object to ensure that\n     // we don't ever create two different caches\n     synchronized (session)\n     {\n-      cache = (Map) external.getSessionMap().get(_APPLICATION_VIEW_CACHE_KEY);\n+      Map<String, Object> sessionMap = external.getSessionMap();\n+      cache = (Map<String, Object>) sessionMap.get(_APPLICATION_VIEW_CACHE_KEY);\n       if (cache == null)\n       {\n         cache = _createPerSessionApplicationViewCache();\n-        external.getSessionMap().put(_APPLICATION_VIEW_CACHE_KEY, cache);\n+        sessionMap.put(_APPLICATION_VIEW_CACHE_KEY, cache);\n       }\n     }\n \n@@ -572,9 +587,9 @@ static private Map _getPerSessionApplicationViewCache(FacesContext context)\n   // For the per-session mirror of the application view cache,\n   // use an LRU LinkedHashMap to store the latest 16 pages.\n   //\n-  static private Map _createPerSessionApplicationViewCache()\n+  static private Map<String, Object> _createPerSessionApplicationViewCache()\n   {\n-    return new LRUCache(_MAX_PER_SESSION_APPLICATION_SIZE);\n+    return new LRUCache<String, Object>(_MAX_PER_SESSION_APPLICATION_SIZE);\n   }\n \n   static private final int _MAX_PER_SESSION_APPLICATION_SIZE = 16;\n@@ -648,34 +663,43 @@ static private ResponseStateManager _getResponseStateManager(\n     return kit.getResponseStateManager();\n   }\n \n+  @SuppressWarnings(\"unchecked\")\n   static private void _removeTransientComponents(\n     UIComponent root)\n   {\n-    List components = new ArrayList();\n+    List<UIComponent> components = new ArrayList<UIComponent>();\n     _gatherTransientComponents(root, components);\n-    Iterator iter = components.iterator();\n+    Iterator<UIComponent> iter = components.iterator();\n     while (iter.hasNext())\n     {\n-      UIComponent kid = (UIComponent) iter.next();\n+      UIComponent kid = iter.next();\n       UIComponent parent = kid.getParent();\n       // First, see if its a child\n       if (parent.getChildCount() > 0)\n       {\n-        List children = parent.getChildren();\n+        List<UIComponent> children = parent.getChildren();\n         if (children.remove(kid))\n         {\n           continue;\n         }\n       }\n \n       // Nope, guess it's a facet\n-      Iterator facetNames = parent.getFacets().keySet().iterator();\n-      while (facetNames.hasNext())\n+      // 2006-08-02: -= Simon Lessard\n+      //             Not 1.5 structure and inefficient loop\n+      //             values() is more efficient as you don't have \n+      //             to do a second lookup for the value.\n+      Map<String, UIComponent> facets = parent.getFacets();\n+      for(Iterator<UIComponent> facetIter = facets.values().iterator(); \n+          facetIter.hasNext();)\n       {\n-        String name = (String) facetNames.next();\n-        if (parent.getFacet(name) == kid)\n+        if(facetIter.next() == kid)\n         {\n-          parent.getFacets().remove(name);\n+          facetIter.remove();\n+          // FIXME: -= Simon Lessard\n+          //        Is that continue need to labeled to go all the way up to \n+          //        the first while? Currently it won't cause any problem, but \n+          //        it's a performance loss.\n           continue;\n         }\n       }\n@@ -686,13 +710,14 @@ static private void _removeTransientComponents(\n     }\n   }\n \n+  @SuppressWarnings(\"unchecked\")\n   static private void _gatherTransientComponents(\n-    UIComponent component, List componentsToRemove)\n+    UIComponent component, List<UIComponent> componentsToRemove)\n   {\n-    Iterator kids = component.getFacetsAndChildren();\n+    Iterator<UIComponent> kids = component.getFacetsAndChildren();\n     while (kids.hasNext())\n     {\n-      UIComponent kid = (UIComponent) kids.next();\n+      UIComponent kid = kids.next();\n       // UIXComponentBase doesn't mind transient components\n       // in its saved state, so don't bother with this.\n       if (!(component instanceof UIXComponentBase) &&\n@@ -715,6 +740,7 @@ private SerializedView _getCachedSerializedView(\n                  getRequestMap().get(_CACHED_SERIALIZED_VIEW);\n   }\n \n+  @SuppressWarnings(\"unchecked\")\n   private void _saveCachedSerializedView(\n     FacesContext context, SerializedView state)\n   {", "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/application/StateManagerImpl.java"}, {"additions": 44, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/application/Structure.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/application/Structure.java", "sha": "b12c244bdd4c29cc0b6843785e67240ef9fe3064", "changes": 66, "status": "modified", "deletions": 22, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/application/Structure.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add", "patch": "@@ -35,6 +35,22 @@\n  * <p>\n  * @author The Oracle ADF Faces Team\n  */\n+// -= Simon Lessard =-\n+//     Why using an ArrayList as a map again? It is not type-safe.\n+//     Using an object to store the key/value seems like a decent\n+//     compromise memory wise. Or better, I would suggest a TreeMap \n+//     to lower the complexity to O(log(n)) instead of O(n) at \n+//     minimal memory cost. If balancing is still considered too \n+//     expensive and an additional class is not wanted, then parallel\n+//     lists would also do the trick\n+// =-=Adam Winer =-=\n+//   To answer the question:  the explicit intent of this\n+//   class is entirely to produce an optimal, minimally-sized\n+//   structure for state saving.  Everything is iterated through\n+//   straight away.  Type-safety is nearly irrelevant (it's\n+//   one, self-encapsulated structure, with no relevant external API);\n+//   everything is iterated through directly (there is no O(log n) anything)\n+//   relevant.  Of overriding importance here is size and efficiency.\n final class Structure implements Externalizable\n {\n   /**\n@@ -59,33 +75,34 @@ public Structure(UIComponent component)\n   /**\n    * Re-create a component from a structure object\n    */\n+  @SuppressWarnings(\"unchecked\")\n   public UIComponent createComponent()\n     throws ClassNotFoundException, InstantiationException,\n            IllegalAccessException\n   {\n-    Class clazz = ClassLoaderUtils.loadClass(_class);\n+    Class<?> clazz = ClassLoaderUtils.loadClass(_class);\n     UIComponent component = (UIComponent) clazz.newInstance();\n     if (_id != null)\n       component.setId(_id);\n     // Create any facets\n     if (_facets != null)\n     {\n-      Map facets = component.getFacets();\n+      Map<String, UIComponent> facets = component.getFacets();\n       for (int i = 0 ; i < _facets.size(); i += 2)\n       {\n         UIComponent facet = ((Structure) _facets.get(i + 1)).\n                                  createComponent();\n-        facets.put(_facets.get(i), facet);\n+        facets.put((String)_facets.get(i), facet);\n       }\n     }\n \n     // Create any children\n     if (_children != null)\n     {\n-      List children = component.getChildren();\n+      List<UIComponent> children = component.getChildren();\n       for (int i = 0 ; i < _children.size(); i++)\n       {\n-        UIComponent child = ((Structure) _children.get(i)).createComponent();\n+        UIComponent child = _children.get(i).createComponent();\n         children.add(child);\n       }\n     }\n@@ -121,9 +138,14 @@ public void writeExternal(ObjectOutput out) throws IOException\n     else\n     {\n       out.writeShort(_children.size());\n+      \n+      // 2006-08-02: -= Simon Lessard =-\n+      //             get(index) is inefficient if the List ever\n+      //             become something else than ArrayList\n+      // =-=Adam Winer=-=:  yep, so we won't change it to be something else.\n       for (int i = 0; i < _children.size(); i++)\n       {\n-        ((Structure) _children.get(i)).writeExternal(out);\n+        _children.get(i).writeExternal(out);\n       }\n     }\n   }\n@@ -138,7 +160,7 @@ public void readExternal(ObjectInput in)\n     short facetCount = in.readShort();\n     if (facetCount > 0)\n     {\n-      _facets = new ArrayList(facetCount);\n+      _facets = new ArrayList<Object>(facetCount);\n       for (int i = 0; i < facetCount; i += 2)\n       {\n         _facets.add(in.readObject());\n@@ -152,7 +174,7 @@ public void readExternal(ObjectInput in)\n     short childCount = in.readShort();\n     if (childCount > 0)\n     {\n-      _children = new ArrayList(childCount);\n+      _children = new ArrayList<Structure>(childCount);\n       for (int i = 0; i < childCount; i++)\n       {\n         Structure newStruct = new Structure();\n@@ -165,18 +187,17 @@ public void readExternal(ObjectInput in)\n   /**\n    * Store the structure of all the children.\n    */\n-  private List _getChildren(UIComponent component)\n+  @SuppressWarnings(\"unchecked\")\n+  private List<Structure> _getChildren(UIComponent component)\n   {\n     if (component.getChildCount() == 0)\n       return null;\n \n-    List children = component.getChildren();\n-    ArrayList list = new ArrayList(children.size());\n+    List<UIComponent> children = component.getChildren();\n+    ArrayList<Structure> list = new ArrayList<Structure>(children.size());\n \n-    Iterator childIterator = children.iterator();\n-    while (childIterator.hasNext())\n+    for(UIComponent child : children)\n     {\n-      UIComponent child = (UIComponent) childIterator.next();\n       if ((child != null) && !child.isTransient())\n       {\n         list.add(new Structure(child));\n@@ -193,9 +214,10 @@ private List _getChildren(UIComponent component)\n   /**\n    * Store the structure of all the facets.\n    */\n-  private List _getFacets(UIComponent component)\n+  @SuppressWarnings(\"unchecked\")\n+  private List<Object> _getFacets(UIComponent component)\n   {\n-    Iterator facetNames;\n+    Iterator<String> facetNames;\n     if (component instanceof UIXComponentBase)\n     {\n       facetNames = ((UIXComponentBase) component).getFacetNames();\n@@ -208,12 +230,12 @@ private List _getFacets(UIComponent component)\n     if (!facetNames.hasNext())\n       return null;\n \n-    Map facets = component.getFacets();\n-    ArrayList list = new ArrayList(facets.size() * 2);\n+    Map<String, UIComponent> facets = component.getFacets();\n+    ArrayList<Object> list = new ArrayList<Object>(facets.size() * 2);\n     while (facetNames.hasNext())\n     {\n-      Object name = facetNames.next();\n-      UIComponent facet = (UIComponent) facets.get(name);\n+      String name = facetNames.next();\n+      UIComponent facet = facets.get(name);\n       if ((facet != null) && !facet.isTransient())\n       {\n         list.add(name);\n@@ -245,8 +267,8 @@ static private String _unabbreviateClass(String clazz)\n \n   private String _class;\n   private String _id;\n-  private List _facets;\n-  private List _children;\n+  private List<Object> _facets;\n+  private List<Structure> _children;\n \n \n   static private final String _COMMON_CLASS_PREFIX =", "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/application/Structure.java"}, {"additions": 21, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/application/ViewHandlerImpl.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/application/ViewHandlerImpl.java", "sha": "84fd93afcb405dc2a7e7f58d95226fcfaaf95a70", "changes": 34, "status": "modified", "deletions": 13, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/application/ViewHandlerImpl.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add", "patch": "@@ -64,20 +64,23 @@ public ViewHandlerImpl(\n     ViewHandler delegate)\n   {\n     _delegate = delegate;\n-    _timestamps = new HashMap();\n+    _timestamps = new HashMap<String, Long>();\n     _loadInternalViews();\n   }\n \n+  @Override\n   public Locale calculateLocale(FacesContext context)\n   {\n     return _delegate.calculateLocale(context);\n   }\n \n+  @Override\n   public String calculateRenderKitId(FacesContext context)\n   {\n     return _delegate.calculateRenderKitId(context);\n   }\n \n+  @Override\n   public UIViewRoot createView(FacesContext context, String viewId)\n   {\n     _initIfNeeded(context);\n@@ -98,7 +101,7 @@ else if (_checkTimestamp(context))\n         String path = _getPath(viewId);\n         synchronized (_timestamps)\n         {\n-          Long ts = (Long) _timestamps.get(path);\n+          Long ts = _timestamps.get(path);\n           if (ts != _NOT_FOUND)\n           {\n             URL url = context.getExternalContext().getResource(path);\n@@ -116,6 +119,7 @@ else if (_checkTimestamp(context))\n     return _delegate.createView(context, viewId);\n   }\n \n+  @Override\n   public String getActionURL(FacesContext context, String viewId)\n   {\n     String actionURL = _delegate.getActionURL(context, viewId);\n@@ -130,6 +134,7 @@ public String getActionURL(FacesContext context, String viewId)\n     return actionURL;\n   }\n \n+  @Override\n   public String getResourceURL(\n     FacesContext context,\n     String       path)\n@@ -138,6 +143,7 @@ public String getResourceURL(\n   }\n \n \n+  @Override\n   public void renderView(\n     FacesContext context,\n     UIViewRoot   viewToRender) throws IOException, FacesException\n@@ -181,6 +187,7 @@ public void renderView(\n     }\n   }\n \n+  @Override\n   public UIViewRoot restoreView(\n     FacesContext context,\n     String       viewId)\n@@ -216,7 +223,7 @@ public UIViewRoot restoreView(\n         String path = _getPath(viewId);\n         synchronized (_timestamps)\n         {\n-          Long ts = (Long)_timestamps.get(path);\n+          Long ts = _timestamps.get(path);\n           if (ts != _NOT_FOUND)\n           {\n             URL url = context.getExternalContext().getResource(path);\n@@ -261,6 +268,7 @@ else if ((ts == null) ||\n     return result;\n   }\n \n+  @Override\n   public void writeState(\n     FacesContext context) throws IOException\n   {\n@@ -294,10 +302,10 @@ synchronized private void _initIfNeeded(FacesContext context)\n         try\n         {\n           ClassLoader loader = Thread.currentThread().getContextClassLoader();\n-          Class c = loader.loadClass(alternateViewHandler);\n+          Class<?> c = loader.loadClass(alternateViewHandler);\n           try\n           {\n-            Constructor constructor = c.getConstructor(\n+            Constructor<?> constructor = c.getConstructor(\n                new Class[]{ViewHandler.class});\n             viewHandlerInstance =\n                (ViewHandler) constructor.newInstance(new Object[]{_delegate});\n@@ -393,16 +401,16 @@ private Long _getLastModified(URL url) throws IOException\n   //\n   private void _loadInternalViews()\n   {\n-    _internalViews = new HashMap();\n-    List<URL> list = new ArrayList();\n+    _internalViews = new HashMap<String, InternalView>();\n+    List<URL> list = new ArrayList<URL>();\n     ClassLoader loader = _getClassLoader();\n     try\n     {\n-      Enumeration en = loader.getResources(\n+      Enumeration<URL> en = loader.getResources(\n                \"META-INF/org.apache.myfaces.trinidad.render.InternalView.properties\");\n       while (en.hasMoreElements())\n       {\n-        list.add((URL) en.nextElement());\n+        list.add(en.nextElement());\n       }\n \n       // And, for some temporary backwards compatibility, also load\n@@ -411,7 +419,7 @@ private void _loadInternalViews()\n                \"META-INF/org.apache.myfaces.trinidad.InternalView.properties\");\n       while (en.hasMoreElements())\n       {\n-        list.add((URL) en.nextElement());\n+        list.add(en.nextElement());\n       }\n \n \n@@ -432,11 +440,11 @@ private void _loadInternalViews()\n         _LOG.fine(\"Loading internal views from {0}\",  url);\n         properties.load(url.openStream());\n \n-        for (Map.Entry entry : properties.entrySet())\n+        for (Map.Entry<Object, Object> entry : properties.entrySet())\n         {\n           String name = (String) entry.getKey();\n           String className = (String) entry.getValue();\n-          Class clazz = loader.loadClass(className);\n+          Class<?> clazz = loader.loadClass(className);\n           InternalView view = (InternalView) clazz.newInstance();\n           _internalViews.put(name, view);\n         }\n@@ -472,7 +480,7 @@ static private ClassLoader _getClassLoader()\n   private Boolean           _checkTimestamp;\n   // Mostly final, but see _initIfNeeded()\n   private ViewHandler       _delegate;\n-  private final Map         _timestamps;\n+  private final Map<String, Long> _timestamps;\n   private boolean           _inited;\n   private Map<String, InternalView> _internalViews;\n ", "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/application/ViewHandlerImpl.java"}, {"additions": 1, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/bean/UIXEditableFacesBeanImpl.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/bean/UIXEditableFacesBeanImpl.java", "sha": "a6a2dea362868eec7eae6ba2f5ab5c030c740c5d", "changes": 1, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/bean/UIXEditableFacesBeanImpl.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add", "patch": "@@ -24,6 +24,7 @@ public UIXEditableFacesBeanImpl()\n   {\n   }\n \n+  @Override\n   public void setProperty(PropertyKey key, Object value)\n   {\n     super.setProperty(key, value);", "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/bean/UIXEditableFacesBeanImpl.java"}, {"additions": 1, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/bean/UIXFacesBeanImpl.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/bean/UIXFacesBeanImpl.java", "sha": "4b8b5b33d263bc30c941f4fdab907550da062e38", "changes": 1, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/bean/UIXFacesBeanImpl.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add", "patch": "@@ -25,6 +25,7 @@ public UIXFacesBeanImpl()\n   {\n   }\n \n+  @Override\n   public Type getType()\n   {\n     return _type;", "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/bean/UIXFacesBeanImpl.java"}, {"additions": 3, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/binding/AccessKeyBinding.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/binding/AccessKeyBinding.java", "sha": "08015b50515ba443c6e8aed8daca8c0334ea2fe1", "changes": 4, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/binding/AccessKeyBinding.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add", "patch": "@@ -42,6 +42,7 @@ public AccessKeyBinding(ValueBinding base)\n     super(base);\n   }\n \n+  @Override\n   public Object getValue(FacesContext context)\n   {\n     Object o = super.getValue(context);\n@@ -56,7 +57,8 @@ public Object getValue(FacesContext context)\n     return new Character(text.charAt(accessKeyIndex + 1));\n   }\n \n-  public Class getType(FacesContext context)\n+  @Override\n+  public Class<?> getType(FacesContext context)\n   {\n     return Character.class;\n   }", "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/binding/AccessKeyBinding.java"}, {"additions": 3, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/binding/StripAccessKeyBinding.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/binding/StripAccessKeyBinding.java", "sha": "f0f095cb19c5de2057c356f397bae45e61ae000b", "changes": 4, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/binding/StripAccessKeyBinding.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add", "patch": "@@ -42,6 +42,7 @@ public StripAccessKeyBinding(ValueBinding base)\n     super(base);\n   }\n \n+  @Override\n   public Object getValue(FacesContext context)\n   {\n     Object o = super.getValue(context);\n@@ -56,7 +57,8 @@ public Object getValue(FacesContext context)\n     return StringUtils.stripMnemonic(text);\n   }\n \n-  public Class getType(FacesContext context)\n+  @Override\n+  public Class<?> getType(FacesContext context)\n   {\n     return String.class;\n   }", "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/binding/StripAccessKeyBinding.java"}, {"additions": 5, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/binding/ValueBindingAdapter.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/binding/ValueBindingAdapter.java", "sha": "0de21d7b24551471cb01bdcd283e64005095ee15", "changes": 6, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/binding/ValueBindingAdapter.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add", "patch": "@@ -36,22 +36,26 @@ protected ValueBindingAdapter(ValueBinding base)\n     _base = base;\n   }\n \n+  @Override\n   public Object getValue(FacesContext context)\n   {\n     return _base.getValue(context);\n   }\n \n+  @Override\n   public void setValue(FacesContext context, Object value)\n   {\n     throw new PropertyNotFoundException(\"Can't set value\");\n   }\n   \n+  @Override\n   public boolean isReadOnly(FacesContext context)\n   {\n     return true;\n   }\n \n-  public Class getType(FacesContext context)\n+  @Override\n+  public Class<?> getType(FacesContext context)\n   {\n     return _base.getType(context);\n   }", "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/binding/ValueBindingAdapter.java"}, {"additions": 22, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/change/BaseChangeManager.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/change/BaseChangeManager.java", "sha": "3a37b9f56441c2f7886c7be35ccee996a79ed453", "changes": 39, "status": "modified", "deletions": 17, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/change/BaseChangeManager.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add", "patch": "@@ -57,6 +57,7 @@\n    * @todo =-=pu : Maybe we need to allow adding Changes for specific viewId's -\n    *  BIBeans req. - external customizer dialog\n    */\n+  @Override\n   public void addComponentChange(\n     FacesContext facesContext,\n     UIComponent uiComponent,\n@@ -94,6 +95,7 @@ public void addComponentChange(\n   /**\n    * {@inheritDoc}\n    */\n+  @Override\n   public void addDocumentChange(\n     FacesContext facesContext,\n     UIComponent uiComponent,\n@@ -140,22 +142,23 @@ private void _addDocumentChangeImpl(\n   /**\n    * {@inheritDoc}\n    */\n-  public Iterator getComponentChanges(\n+  @Override\n+  public Iterator<ComponentChange> getComponentChanges(\n     FacesContext facesContext,\n     UIComponent uiComponent)\n   {\n     if (uiComponent == null)\n       return null;\n \n     String viewId = facesContext.getViewRoot().getViewId();\n-    Map componentToChangesMap =\n+    Map<String, List<ComponentChange>> componentToChangesMap =\n        getComponentToChangesMapForView(facesContext, viewId, false);\n \n     if (componentToChangesMap == null)\n       return null;\n \n     String uniqueIdForComponent = _getUniqueIdForComponent(uiComponent);\n-    List changesList = (List) componentToChangesMap.get(uniqueIdForComponent);\n+    List<ComponentChange> changesList = componentToChangesMap.get(uniqueIdForComponent);\n     if (changesList == null)\n       return null;\n \n@@ -165,10 +168,11 @@ public Iterator getComponentChanges(\n   /**\n    * {@inheritDoc}\n    */\n-  public Iterator getComponentIdsWithChanges(FacesContext facesContext)\n+  @Override\n+  public Iterator<String> getComponentIdsWithChanges(FacesContext facesContext)\n   {\n     String viewId = facesContext.getViewRoot().getViewId();\n-    Map componentToChangesMap =\n+    Map<String, List<ComponentChange>> componentToChangesMap =\n        getComponentToChangesMapForView(facesContext, viewId, false);\n \n     if (componentToChangesMap == null)\n@@ -187,7 +191,7 @@ public Iterator getComponentIdsWithChanges(FacesContext facesContext)\n    *        already present\n    * @return Map of componentID tokens to Lists of Changes\n    */\n-  protected abstract Map getComponentToChangesMapForView(\n+  protected abstract Map<String, List<ComponentChange>> getComponentToChangesMapForView(\n     FacesContext facesContext,\n     String viewId,\n     boolean createIfNecessary);\n@@ -203,18 +207,18 @@ private void _addComponentChangeImpl(\n   {\n     String viewId = facesContext.getViewRoot().getViewId();\n \n-    Map componentToChangesMap = getComponentToChangesMapForView(facesContext,\n+    Map<String, List<ComponentChange>> componentToChangesMap = getComponentToChangesMapForView(facesContext,\n                                                                 viewId,\n                                                                 true);\n \n     String uniqueIdForComponent = _getUniqueIdForComponent(uiComponent);\n \n-    List changeListForComponent =\n-      (List) componentToChangesMap.get(uniqueIdForComponent);\n+    List<ComponentChange> changeListForComponent = \n+      componentToChangesMap.get(uniqueIdForComponent);\n \n     if (changeListForComponent == null)\n     {\n-      changeListForComponent = new LinkedList();\n+      changeListForComponent = new LinkedList<ComponentChange>();\n       componentToChangesMap.put(uniqueIdForComponent, changeListForComponent);\n     }\n \n@@ -283,11 +287,11 @@ private Node _getComponentNode(\n   {\n     if (document instanceof DocumentTraversal)\n     {\n-      List idPath = _getIdPath(component);\n+      List<String> idPath = _getIdPath(component);\n \n       if (!idPath.isEmpty())\n       {\n-        Iterator pathIds = idPath.iterator();\n+        Iterator<String> pathIds = idPath.iterator();\n \n         DocumentTraversal traversalFactory = (DocumentTraversal)document;\n         TreeWalker walker = traversalFactory.createTreeWalker(\n@@ -296,9 +300,9 @@ private Node _getComponentNode(\n                                    null,\n                                    true);\n \n-        Node currElement = (Element)walker.getCurrentNode();\n+        Node currElement = walker.getCurrentNode();\n         Node stopElement = walker.getRoot();\n-        String neededID = (String)pathIds.next();\n+        String neededID = pathIds.next();\n \n         do\n         {\n@@ -319,7 +323,7 @@ private Node _getComponentNode(\n                 return currElement;\n \n               // update the id we need\n-              neededID = (String)pathIds.next();\n+              neededID = pathIds.next();\n \n               // don't pop back up to this parent\n               stopElement = currElement;\n@@ -391,15 +395,16 @@ private Node _getNextNode(\n    * @param component\n    * @return\n    */\n-  private List _getIdPath(UIComponent component)\n+  @SuppressWarnings(\"unchecked\")\n+  private List<String> _getIdPath(UIComponent component)\n   {\n     String componentID = component.getId();\n \n     // we need an ID\n     if ((componentID == null) || (componentID.length() == 0))\n       return Collections.EMPTY_LIST;\n \n-    LinkedList pathList = new LinkedList();\n+    LinkedList<String> pathList = new LinkedList<String>();\n     pathList.addFirst(componentID);\n \n     UIComponent currAncestor = component.getParent();", "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/change/BaseChangeManager.java"}, {"additions": 5, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/change/NullChangeManager.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/change/NullChangeManager.java", "sha": "a71972d43be8f17a2eb6873e0e41fe33b97ecc64", "changes": 7, "status": "modified", "deletions": 2, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/change/NullChangeManager.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add", "patch": "@@ -34,6 +34,7 @@\n   /**\n    * {@inheritDoc}\n    */\n+  @Override\n   public void addComponentChange(\n     FacesContext facesContext,\n     UIComponent uiComponent,\n@@ -45,7 +46,8 @@ public void addComponentChange(\n   /**\n    * {@inheritDoc}\n    */\n-  public Iterator getComponentChanges(FacesContext facesContext,\n+  @Override\n+  public Iterator<ComponentChange> getComponentChanges(FacesContext facesContext,\n                              UIComponent uiComponent)\n   {\n     return null;\n@@ -54,7 +56,8 @@ public Iterator getComponentChanges(FacesContext facesContext,\n   /**\n    * {@inheritDoc}\n    */\n-  public Iterator getComponentIdsWithChanges(FacesContext facesContext)\n+  @Override\n+  public Iterator<String> getComponentIdsWithChanges(FacesContext facesContext)\n   {\n     return null;\n   }", "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/change/NullChangeManager.java"}, {"additions": 12, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/change/SessionChangeManager.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/change/SessionChangeManager.java", "sha": "abbb8765171284e354e68f71b4bf0ae91a3a4044", "changes": 18, "status": "modified", "deletions": 6, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/change/SessionChangeManager.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add", "patch": "@@ -17,10 +17,12 @@\n package org.apache.myfaces.trinidadinternal.change;\n \n import java.util.HashMap;\n+import java.util.List;\n import java.util.Map;\n \n import javax.faces.context.FacesContext;\n \n+import org.apache.myfaces.trinidad.change.ComponentChange;\n import org.w3c.dom.Document;\n \n /**\n@@ -42,29 +44,32 @@\n    *        already present\n    * @return Map of componentID tokens to Lists of Changes\n    */\n-  protected Map getComponentToChangesMapForView(\n+  @SuppressWarnings(\"unchecked\")\n+  @Override\n+  protected Map<String, List<ComponentChange>> getComponentToChangesMapForView(\n     FacesContext facesContext,\n     String viewId,\n     boolean createIfNecessary)\n   {\n-    Map sessMap = facesContext.getExternalContext().getSessionMap();\n+    Map<String, Object> sessMap = facesContext.getExternalContext().getSessionMap();\n     //pu: Get datastructure #1 described at the end of this file.\n-    Map viewToChangesMap = (Map) sessMap.get(_CHANGE_KEY);\n+    Map<String, Map<String, List<ComponentChange>>> viewToChangesMap = \n+      (Map<String, Map<String, List<ComponentChange>>>)sessMap.get(_CHANGE_KEY);\n     if (viewToChangesMap == null)\n     {\n       if (!createIfNecessary)\n         return null;\n-      viewToChangesMap = new HashMap();\n+      viewToChangesMap = new HashMap<String, Map<String, List<ComponentChange>>>();\n       sessMap.put(_CHANGE_KEY, viewToChangesMap);\n     }\n     \n     //pu: Get datastructure #2 described at the end of this file.\n-    Map componentToChangesMap = (Map) viewToChangesMap.get(viewId);\n+    Map<String, List<ComponentChange>> componentToChangesMap = viewToChangesMap.get(viewId);\n     if (componentToChangesMap == null)\n     {\n       if (!createIfNecessary)\n         return null;\n-      componentToChangesMap = new HashMap();\n+      componentToChangesMap = new HashMap<String, List<ComponentChange>>();\n       viewToChangesMap.put(viewId, componentToChangesMap);\n     }\n     return componentToChangesMap;\n@@ -73,6 +78,7 @@ protected Map getComponentToChangesMapForView(\n   /** \n    * We don't support DocumentAspect persistence\n    */\n+  @Override\n   protected Document getDocument(FacesContext context)\n   {\n     return null;", "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/change/SessionChangeManager.java"}, {"additions": 38, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/context/DialogServiceImpl.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/context/DialogServiceImpl.java", "sha": "a6533526f9044219cdc3e590fd44a6d4f87f05f8", "changes": 59, "status": "modified", "deletions": 21, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/context/DialogServiceImpl.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add", "patch": "@@ -46,17 +46,19 @@ public DialogServiceImpl(RequestContextImpl context)\n     _context = context;\n   }\n \n+  @SuppressWarnings(\"unchecked\")\n+  @Override\n   public void pushView(UIViewRoot viewRoot)\n   {\n     FacesContext context = _getFacesContext();\n     Object savedOld = StateManagerImpl.saveViewRoot(context, viewRoot);\n \n-    List list = (List) _getPageFlowScope().get(_PUSHED_VIEWS_KEY);\n+    List<Object> list = (List<Object>) _getPageFlowScope().get(_PUSHED_VIEWS_KEY);\n     if (list == null)\n-      list = new ArrayList(1);\n+      list = new ArrayList<Object>(1);\n     else\n     {\n-      List tmp = new ArrayList(list.size() + 1);\n+      List<Object> tmp = new ArrayList<Object>(list.size() + 1);\n       tmp.addAll(list);\n       list = tmp;\n     }\n@@ -67,6 +69,8 @@ public void pushView(UIViewRoot viewRoot)\n     _LOG.fine(\"Pushed view {0}\", viewRoot.getViewId());\n   }\n \n+  @SuppressWarnings(\"unchecked\")\n+  @Override\n   public void popView(boolean navigateToPoppedView)\n   {\n     FacesContext context = _getFacesContext();\n@@ -86,7 +90,7 @@ public void popView(boolean navigateToPoppedView)\n     }\n \n     // Make a copy of the List;  never mutate the original list\n-    List list = (List) _getPageFlowScope().get(_PUSHED_VIEWS_KEY);\n+    List<Object> list = (List<Object>) _getPageFlowScope().get(_PUSHED_VIEWS_KEY);\n     if (list == null)\n     {\n       // For starters, this should only happen if we weren't navigating\n@@ -100,18 +104,20 @@ else if (list.size() == 1)\n     }\n     else\n     {\n-      list = new ArrayList(list);\n+      list = new ArrayList<Object>(list);\n       list.remove(list.size() - 1);\n       _getPageFlowScope().put(_PUSHED_VIEWS_KEY, list);\n     }\n   }\n \n+  @SuppressWarnings(\"unchecked\")\n+  @Override\n   public UIViewRoot peekView()\n   {\n     FacesContext context = _getFacesContext();\n     Object savedRoot = null;\n \n-    List list = (List) _getPageFlowScope().get(_PUSHED_VIEWS_KEY);\n+    List<Object> list = (List<Object>) _getPageFlowScope().get(_PUSHED_VIEWS_KEY);\n     if (list != null)\n       savedRoot = list.get(list.size() - 1);\n \n@@ -140,8 +146,10 @@ public UIViewRoot peekView()\n     return null;\n   }\n \n+  @SuppressWarnings(\"unchecked\")\n+  @Override\n   public boolean returnFromDialog(Object returnValue,\n-                                  Map returnParameters)\n+                                  Map<Object, Object> returnParameters)\n   {\n     FacesContext context = _getFacesContext();\n     context.getExternalContext().getSessionMap().\n@@ -172,7 +180,7 @@ public boolean returnFromDialog(Object returnValue,\n     // do that;  we'll mark the response as complete, because we'll need\n     // the AdfFacesFilter to re-execute the faces lifecycle with the\n     // new parameters\n-    Map launchParameters = (Map)\n+    Map<Object, Object> launchParameters = (Map<Object, Object>)\n       poppedView.getAttributes().get(RequestContextImpl.LAUNCH_PARAMETERS);\n \n     if (launchParameters != null)\n@@ -181,7 +189,7 @@ public boolean returnFromDialog(Object returnValue,\n       // AdfFacesFilterImpl and ViewHandlerImpl\n       poppedView.getAttributes().remove(RequestContextImpl.LAUNCH_PARAMETERS);\n \n-      Map requestMap = context.getExternalContext().getRequestMap();\n+      Map<String, Object> requestMap = context.getExternalContext().getRequestMap();\n       requestMap.put(RequestContextImpl.LAUNCH_PARAMETERS, launchParameters);\n       requestMap.put(RequestContextImpl.LAUNCH_VIEW, poppedView);\n \n@@ -194,12 +202,14 @@ public boolean returnFromDialog(Object returnValue,\n \n   }\n \n+  @SuppressWarnings(\"unchecked\")\n+  @Override\n   public ReturnEvent getReturnEvent(UIComponent source)\n   {\n     FacesContext context = _getFacesContext();\n     if (TrinidadFilterImpl.isExecutingDialogReturn(context))\n     {\n-      Map parameterMap = context.getExternalContext().getRequestParameterMap();\n+      Map<String, Object> parameterMap = context.getExternalContext().getRequestParameterMap();\n       Object returnParam = parameterMap.get(_RETURN_PARAM);\n       if (returnParam == null)\n         return null;\n@@ -225,11 +235,11 @@ public ReturnEvent getReturnEvent(UIComponent source)\n              remove(_DIALOG_RETURN_KEY);\n \n     Object returnValue = null;\n-    Map    returnParams = null;\n+    Map<Object, Object> returnParams = null;\n     if (o != null)\n     {\n       returnValue = ((Object[]) o)[0];\n-      returnParams = (Map) ((Object[]) o)[1];\n+      returnParams = (Map<Object, Object>)((Object[]) o)[1];\n     }\n \n     ReturnEvent returnEvent =\n@@ -241,6 +251,7 @@ public ReturnEvent getReturnEvent(UIComponent source)\n     return returnEvent;\n   }\n \n+  @Override\n   public void queueLaunchEvent(UIViewRoot viewRoot)\n   {\n     UIComponent source = getCurrentLaunchSource();\n@@ -254,9 +265,10 @@ public void queueLaunchEvent(UIViewRoot viewRoot)\n     }\n   }\n \n+  @Override\n   public void queueReturnEvent(\n     Object returnValue,\n-    Map    returnParams)\n+    Map<Object, Object> returnParams)\n   {\n     UIComponent source = getCurrentLaunchSource();\n     if (source == null)\n@@ -274,15 +286,17 @@ public void queueReturnEvent(\n    * Launch a dialog.\n    * @todo Don't save parameters for state-saving, page-flow scope, etc.\n    */\n+  @SuppressWarnings(\"unchecked\")\n+  @Override\n   public void launchDialog(\n     UIViewRoot  dialogRoot,\n-    Map         dialogParameters,\n+    Map<String, Object> dialogParameters,\n     UIComponent source,\n     boolean     useWindow,\n-    Map         windowProperties)\n+    Map<String, Object> windowProperties)\n   {\n     if (dialogParameters == null)\n-      dialogParameters = new HashMap();\n+      dialogParameters = new HashMap<String, Object>();\n \n     FacesContext context = _getFacesContext();\n \n@@ -323,7 +337,7 @@ public void launchDialog(\n       // Save the parameters used to launch the dialog so we can\n       // simulate a postback when coming back to the dialog;  and\n       // write in a \"returnId\" with the \"id\" that will be used.\n-      Map savedRequestParameters = new HashMap();\n+      Map<String, Object> savedRequestParameters = new HashMap<String, Object>();\n       savedRequestParameters.putAll(\n             context.getExternalContext().getRequestParameterValuesMap());\n       if (source != null)\n@@ -365,7 +379,8 @@ private FacesContext _getFacesContext()\n     return _context.__getFacesContext();\n   }\n \n-  private Map _getPageFlowScope()\n+  @SuppressWarnings(\"unchecked\")\n+  private Map<String, Object> _getPageFlowScope()\n   {\n     return _context.getPageFlowScope();\n   }\n@@ -374,7 +389,7 @@ static private DialogRenderKitService _getDialogRenderKitService(\n     FacesContext context)\n   {\n     RenderKit rk = context.getRenderKit();\n-    DialogRenderKitService service = (DialogRenderKitService)\n+    DialogRenderKitService service = \n        Service.getService(rk, DialogRenderKitService.class);\n \n     if (service == null)\n@@ -391,15 +406,16 @@ static private DialogRenderKitService _getDialogRenderKitService(\n    * Execute any \"binding\" attributes so that a popped view\n    * is properly set up\n    */\n+  @SuppressWarnings(\"unchecked\")\n   private void _executeBindings(FacesContext context, UIComponent component)\n   {\n     ValueBinding binding = component.getValueBinding(\"binding\");\n     if (binding != null)\n       binding.setValue(context, component);\n \n-    Iterator kids = component.getFacetsAndChildren();\n+    Iterator<UIComponent> kids = component.getFacetsAndChildren();\n     while (kids.hasNext())\n-      _executeBindings(context, (UIComponent) kids.next());\n+      _executeBindings(context, kids.next());\n   }\n \n   private RequestContextImpl _context;\n@@ -417,6 +433,7 @@ public InternalLaunch(UIComponent source,\n       super(source, viewRoot);\n     }\n \n+    @Override\n     public void launchDialog(boolean useWindow)\n     {\n       RequestContext afContext = RequestContext.getCurrentInstance();", "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/context/DialogServiceImpl.java"}, {"additions": 46, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/context/ExternalContextDecorator.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/context/ExternalContextDecorator.java", "sha": "6b7c13d9091fac2a4d58da8340bb2e78bf509365", "changes": 50, "status": "modified", "deletions": 4, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/context/ExternalContextDecorator.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add", "patch": "@@ -35,175 +35,217 @@\n  */\n abstract public class ExternalContextDecorator extends ExternalContext\n {\n+  @Override\n   public void dispatch(String path) throws IOException\n   {\n     getExternalContext().dispatch(path);\n   }\n \n-\n+  @Override\n   public Object getContext()\n   { \n     return getExternalContext().getContext();\n   }\n   \n+  @Override\n   public Object getRequest()\n   {\n     return getExternalContext().getRequest(); \n   }\n   \n+  @Override\n   public Object getResponse()\n   {\n     return getExternalContext().getResponse();\n   }\n   \n+  @Override\n   public Object getSession(boolean create)\n   {\n     return getExternalContext().getSession(create);\n   }\n   \n+  @Override\n   public String getRequestContextPath()\n   {\n     return getExternalContext().getRequestContextPath();\n   }\n \n+  @Override\n   public String getRequestPathInfo()\n   {\n     return getExternalContext().getRequestPathInfo();\n   }\n \n+  @Override\n   public String getRequestServletPath()\n   {\n     return getExternalContext().getRequestServletPath();\n   }\n \n+  @Override\n   public String getInitParameter(String name)\n   {\n     return getExternalContext().getInitParameter(name);\n   }\n   \n+  @Override\n   public String encodeResourceURL(String url)\n   {\n     return getExternalContext().encodeResourceURL(url);\n   }\n \n+  @Override\n   public String encodeActionURL(String url)\n   {\n     return getExternalContext().encodeActionURL(url);\n   }\n \n+  @Override\n   public String encodeNamespace(String ns)\n   {\n     return getExternalContext().encodeNamespace(ns);\n   }\n \n+  @Override\n   public String getAuthType()\n   {\n     return getExternalContext().getAuthType();\n   }\n \n+  @Override\n   public String getRemoteUser()\n   {\n     return getExternalContext().getRemoteUser();\n   }\n \n+  @Override\n   public Principal getUserPrincipal()\n   {\n     return getExternalContext().getUserPrincipal();\n   }\n \n+  @Override\n   public boolean isUserInRole(String role)\n   {\n     return getExternalContext().isUserInRole(role);\n   }\n \n+  @Override\n   public URL getResource(String path) throws MalformedURLException\n   {\n     return getExternalContext().getResource(path);\n   }\n \n+  @Override\n   public InputStream getResourceAsStream(String path)\n   {\n     return getExternalContext().getResourceAsStream(path);\n   }\n \n+  @SuppressWarnings(\"unchecked\")\n+  @Override\n   public Set getResourcePaths(String path)\n   {\n     return getExternalContext().getResourcePaths(path);\n   }\n \n+  @SuppressWarnings(\"unchecked\")\n+  @Override\n   public Map getRequestParameterMap()\n   {\n     return getExternalContext().getRequestParameterMap();\n   }\n \n+  @SuppressWarnings(\"unchecked\")\n+  @Override\n   public Map getRequestParameterValuesMap()\n   {\n     return getExternalContext().getRequestParameterValuesMap();\n   }\n \n+  @SuppressWarnings(\"unchecked\")\n+  @Override\n   public Iterator getRequestParameterNames()\n   {\n     return getExternalContext().getRequestParameterNames();\n   }\n \n+  @SuppressWarnings(\"unchecked\")\n+  @Override\n   public Map getRequestCookieMap()\n   {\n     return getExternalContext().getRequestCookieMap();\n   }\n \n+  @SuppressWarnings(\"unchecked\")\n+  @Override\n   public Map getRequestHeaderMap()\n   {\n     return getExternalContext().getRequestHeaderMap();\n   }\n \n+  @SuppressWarnings(\"unchecked\")\n+  @Override\n   public Map getRequestHeaderValuesMap()\n   {\n     return getExternalContext().getRequestHeaderValuesMap();\n   }\n \n-\n+  @SuppressWarnings(\"unchecked\")\n+  @Override\n   public Map getInitParameterMap()\n   {\n     return getExternalContext().getInitParameterMap();\n   }\n \n+  @SuppressWarnings(\"unchecked\")\n+  @Override\n   public Map getApplicationMap()\n   {\n     return getExternalContext().getApplicationMap();\n   }\n \n+  @SuppressWarnings(\"unchecked\")\n+  @Override\n   public Map getSessionMap()\n   {\n     return getExternalContext().getSessionMap();\n   }\n \n+  @SuppressWarnings(\"unchecked\")\n+  @Override\n   public Map getRequestMap()\n   {\n     return getExternalContext().getRequestMap();\n   }\n \n-\n+  @Override\n   public Locale getRequestLocale()\n   {\n     return getExternalContext().getRequestLocale();\n   }\n \n+  @SuppressWarnings(\"unchecked\")\n+  @Override\n   public Iterator getRequestLocales()\n   {\n     return getExternalContext().getRequestLocales();\n   }\n \n-\n+  @Override\n   public void log(String message)\n   {\n     getExternalContext().log(message);\n   }\n \n+  @Override\n   public void log(String message, Throwable t)\n   {\n     getExternalContext().log(message, t);\n   }\n \n+  @Override\n   public void redirect(String url) throws IOException\n   {\n     getExternalContext().redirect(url);", "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/context/ExternalContextDecorator.java"}, {"additions": 33, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/context/FacesContextFactoryImpl.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/context/FacesContextFactoryImpl.java", "sha": "71f30ad14fc96115dcf11e23f398e941d29c7411", "changes": 35, "status": "modified", "deletions": 2, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/context/FacesContextFactoryImpl.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add", "patch": "@@ -48,8 +48,12 @@ public FacesContextFactoryImpl(FacesContextFactory factory)\n     _factory = factory;\n   }\n \n-  public FacesContext getFacesContext(Object context, Object request,\n-                                      Object response, Lifecycle lifecycle)\n+  @Override\n+  public FacesContext getFacesContext(\n+      Object context,\n+      Object request,\n+      Object response, \n+      Lifecycle lifecycle)\n   {\n     return new CacheRenderKit(_factory.getFacesContext(context,\n                                                        request,\n@@ -66,36 +70,46 @@ public CacheRenderKit(FacesContext base)\n       setCurrentInstance(this);\n     }\n \n+    @Override\n     public Application getApplication()\n     {\n       return _base.getApplication();\n     }\n \n+    @SuppressWarnings(\"unchecked\")\n+    @Override\n     public Iterator getClientIdsWithMessages()\n     {\n       return _base.getClientIdsWithMessages();\n     }\n \n+    @Override\n     public ExternalContext getExternalContext()\n     {\n       return _external;\n     }\n \n+    @Override\n     public FacesMessage.Severity getMaximumSeverity()\n     {\n       return _base.getMaximumSeverity();\n     }\n \n+    @SuppressWarnings(\"unchecked\")\n+    @Override\n     public Iterator getMessages()\n     {\n       return _base.getMessages();\n     }\n \n+    @SuppressWarnings(\"unchecked\")\n+    @Override\n     public Iterator getMessages(String clientId)\n     {\n       return _base.getMessages(clientId);\n     }\n \n+    @Override\n     public RenderKit getRenderKit()\n     {\n       if (_kit == null)\n@@ -124,61 +138,73 @@ public RenderKit getRenderKit()\n       return _kit;\n     }\n \n+    @Override\n     public boolean getRenderResponse()\n     {\n       return _base.getRenderResponse();\n     }\n \n+    @Override\n     public boolean getResponseComplete()\n     {\n       return _base.getResponseComplete();\n     }\n \n+    @Override\n     public ResponseStream getResponseStream()\n     {\n       return _base.getResponseStream();\n     }\n \n+    @Override\n     public void setResponseStream(ResponseStream responseStream)\n     {\n       _base.setResponseStream(responseStream);\n     }\n \n+    @Override\n     public ResponseWriter getResponseWriter()\n     {\n       return _base.getResponseWriter();\n     }\n \n+    @Override\n     public void setResponseWriter(ResponseWriter responseWriter)\n     {\n       _base.setResponseWriter(responseWriter);\n     }\n \n+    @Override\n     public UIViewRoot getViewRoot()\n     {\n       return _base.getViewRoot();\n     }\n \n+    @Override\n     public void setViewRoot(UIViewRoot viewRoot)\n     {\n       _base.setViewRoot(viewRoot);\n     }\n \n+    @Override\n     public void addMessage(String clientId, FacesMessage facesMessage)\n     {\n       _base.addMessage(clientId, facesMessage);\n     }\n \n+    @Override\n     public void release()\n     {\n       _base.release();\n     }\n \n+    @Override\n     public void renderResponse()\n     {\n       _base.renderResponse();\n     }\n \n+    @Override\n     public void responseComplete()\n     {\n       _base.responseComplete();\n@@ -197,6 +223,7 @@ public OverrideDispatch(ExternalContext decorated)\n       _decorated = decorated;\n     }\n \n+    @Override\n     public void dispatch(String path) throws IOException\n     {\n       RequestContext afc = RequestContext.getCurrentInstance();\n@@ -209,6 +236,7 @@ public void dispatch(String path) throws IOException\n     }\n \n \n+    @Override\n     protected ExternalContext getExternalContext()\n     {\n       return _decorated;\n@@ -219,6 +247,9 @@ protected ExternalContext getExternalContext()\n \n   private final FacesContextFactory _factory;\n \n+  // 2006-08-02; -= Simon Lessard =-\n+  // There's nothing logged in this class at this time.\n+  @SuppressWarnings(\"unused\")\n   static private final TrinidadLogger _LOG =\n     TrinidadLogger.createTrinidadLogger(FacesContextFactoryImpl.class);\n }", "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/context/FacesContextFactoryImpl.java"}, {"additions": 21, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/context/PageFlowScopeMap.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/context/PageFlowScopeMap.java", "sha": "13cda3324c609742c7f9b228df6e69aaf2439424", "changes": 37, "status": "modified", "deletions": 16, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/context/PageFlowScopeMap.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add", "patch": "@@ -34,7 +34,7 @@\n  *\n  * @author The Oracle ADF Faces Team\n  */\n-class PageFlowScopeMap implements Map, Serializable\n+class PageFlowScopeMap implements Map<String, Object>, Serializable\n {\n   /**\n    * Return a PageFlowScopeMap stored with a token.\n@@ -87,7 +87,7 @@ static private PageFlowScopeMap _getPageFlowScopeMap(\n       childToken = token.substring(lastSeparator + 1);\n     }\n \n-    Map storeMap = _createMapToStore(context, parentToken);\n+    Map<String, Object> storeMap = _createMapToStore(context, parentToken);\n     return (PageFlowScopeMap) storeMap.get(childToken);\n   }\n \n@@ -101,11 +101,11 @@ public PageFlowScopeMap()\n \n   public PageFlowScopeMap(int lifetime)\n   {\n-    this(new HashMap(13), null, new SharedData(lifetime));\n+    this(new HashMap<String, Object>(13), null, new SharedData(lifetime));\n   }\n \n   private PageFlowScopeMap(\n-    HashMap map,\n+    HashMap<String, Object> map,\n     String token,\n     SharedData sharedData)\n   {\n@@ -124,7 +124,7 @@ private PageFlowScopeMap(PageFlowScopeMap parent, boolean copyParent)\n     _sharedData = new SharedData(parent._sharedData._lifetime);\n     _sharedData._parent = parent;\n \n-    _map = new HashMap();\n+    _map = new HashMap<String, Object>();\n     if (copyParent)\n       _map.putAll(parent._map);\n   }\n@@ -160,7 +160,7 @@ synchronized public String getToken(FacesContext context)\n       cache = _getRootTokenCache(context, _sharedData._lifetime);\n     }\n \n-    Map store = _createMapToStore(context, parentToken);\n+    Map<String, Object> store = _createMapToStore(context, parentToken);\n \n     String token = cache.addNewEntry(this, store);\n \n@@ -181,7 +181,8 @@ synchronized public String getToken(FacesContext context)\n     return _token;\n   }\n \n-  static private Map _createMapToStore(\n+  @SuppressWarnings(\"unchecked\")\n+  static private Map<String, Object> _createMapToStore(\n     FacesContext context,\n     String       parentToken)\n   {\n@@ -201,6 +202,7 @@ static private Map _createMapToStore(\n                          fullToken);\n   }\n \n+  @Override\n   public boolean equals(Object o)\n   {\n     if (o instanceof PageFlowScopeMap)\n@@ -209,6 +211,7 @@ public boolean equals(Object o)\n     return _map.equals(o);\n   }\n \n+  @Override\n   public int hashCode()\n   {\n     return _map.hashCode();\n@@ -234,22 +237,22 @@ public boolean containsValue(Object value)\n     return _map.containsValue(value);\n   }\n \n-  public Collection values()\n+  public Collection<Object> values()\n   {\n     // Use an unmodifiableCollection to save me the headache\n     // of catching mutations\n     return Collections.unmodifiableCollection(_map.values());\n   }\n \n \n-  public Set entrySet()\n+  public Set<Map.Entry<String, Object>> entrySet()\n   {\n     // Use an unmodifiableSet to save me the headache\n     // of catching mutations\n     return Collections.unmodifiableSet(_map.entrySet());\n   }\n \n-  public Set keySet()\n+  public Set<String> keySet()\n   {\n     // Use an unmodifiableSet to save me the headache\n     // of catching mutations\n@@ -261,7 +264,7 @@ public Object get(Object key)\n     return _map.get(key);\n   }\n \n-  public Object put(Object key, Object value)\n+  public Object put(String key, Object value)\n   {\n     _detachIfNeeded();\n     if (_LOG.isFine())\n@@ -283,7 +286,7 @@ public Object remove(Object key)\n     return _map.remove(key);\n   }\n \n-  public void putAll(Map t)\n+  public void putAll(Map<? extends String, ? extends Object> t)\n   {\n     _detachIfNeeded();\n     if (_LOG.isFine())\n@@ -332,7 +335,7 @@ public void discard()\n     // Remove ourselves\n     if (_sharedData._parent != null)\n     {\n-      Map storeMap = _createMapToStore(context, parentToken);\n+      Map<String, Object> storeMap = _createMapToStore(context, parentToken);\n       _sharedData._parent._sharedData._children.removeOldEntry(childToken,\n                                                                storeMap);\n     }\n@@ -347,11 +350,12 @@ private void _removeAllChildren(FacesContext context, String token)\n     // this will in fact automatically recurse through all children\n     // grandchildren etc. - which is kind of a design flaw of SubKeyMap,\n     // but one we're relying on\n-    Map store = _createMapToStore(context, token);\n+    Map<String, Object> store = _createMapToStore(context, token);\n     store.clear();\n     _sharedData._children = null;\n   }\n \n+  @Override\n   public String toString()\n   {\n     return \"PageFlowScopeMap@\" + System.identityHashCode(this) +\n@@ -383,11 +387,12 @@ private TokenCache _getTokenCache()\n   // repeatedly during Render Response *without further\n   // mutations*.  Both of these assumptions seem very\n   // dubious!\n+  @SuppressWarnings(\"unchecked\")\n   private void _detachIfNeeded()\n   {\n     if (_token != null)\n     {\n-      _map = (HashMap) _map.clone();\n+      _map = (HashMap<String, Object>) _map.clone();\n       _token = null;\n \n       // =-=AEW When do we discard children?\n@@ -416,7 +421,7 @@ public SharedData(int lifetime)\n \n   private SharedData _sharedData;\n   private String     _token;\n-  private HashMap    _map;\n+  private HashMap<String, Object> _map;\n \n   static private final String _PAGE_FLOW_SCOPE_CACHE =\n     \"org.apache.myfaces.trinidadinternal.application.PageFlowScope\";", "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/context/PageFlowScopeMap.java"}, {"additions": 8, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/context/PageFlowScopeProviderImpl.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/context/PageFlowScopeProviderImpl.java", "sha": "0c31f4a3749020e37f0a96bba6feb2d111acfe57", "changes": 11, "status": "modified", "deletions": 3, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/context/PageFlowScopeProviderImpl.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add", "patch": "@@ -38,7 +38,8 @@ private PageFlowScopeProviderImpl()\n   {\n   }\n \n-  public Map getPageFlowScope(FacesContext context)\n+  @Override\n+  public Map<String, Object> getPageFlowScope(FacesContext context)\n   {\n     PageFlowScopeMap pageFlowScope = _getPageFlowScope(context);\n     if (pageFlowScope == null)\n@@ -68,7 +69,8 @@ public Map getPageFlowScope(FacesContext context)\n     return pageFlowScope;\n   }\n \n-  public Map pushPageFlowScope(FacesContext context, boolean copyParent)\n+  @Override\n+  public Map<String, Object> pushPageFlowScope(FacesContext context, boolean copyParent)\n   {\n     PageFlowScopeMap oldPageFlowScope = (PageFlowScopeMap) getPageFlowScope(context);\n     if (oldPageFlowScope.getToken(context) != null)\n@@ -86,7 +88,8 @@ public Map pushPageFlowScope(FacesContext context, boolean copyParent)\n     return oldPageFlowScope;\n   }\n \n-  public Map popPageFlowScope(FacesContext context, boolean discardScope)\n+  @Override\n+  public Map<String, Object> popPageFlowScope(FacesContext context, boolean discardScope)\n   {\n     PageFlowScopeMap oldPageFlowScope = _getPageFlowScope(context);\n \n@@ -103,6 +106,7 @@ public Map popPageFlowScope(FacesContext context, boolean discardScope)\n     return oldPageFlowScope;\n   }\n \n+  @Override\n   public String encodeCurrentPageFlowScopeURL(FacesContext context, String url)\n   {\n     PageFlowScopeMap pageFlowScope = (PageFlowScopeMap) getPageFlowScope(context);\n@@ -137,6 +141,7 @@ static private PageFlowScopeMap _getPageFlowScope(FacesContext context)\n   // Store the page flow scope\n   // =-=AEW MAKE THIS PRIVATE WHNE OBSOLETE DIALOGSERVICE METHODS\n   // ARE REMOVED\n+  @SuppressWarnings(\"unchecked\")\n   static void __setPageFlowScope(FacesContext context,\n                                  PageFlowScopeMap pageFlowScope)\n   {", "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/context/PageFlowScopeProviderImpl.java"}, {"additions": 2, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/context/PageResolverDefaultImpl.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/context/PageResolverDefaultImpl.java", "sha": "6e56f68a846d93b6257d31c92e7fbab5215a26af", "changes": 2, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/context/PageResolverDefaultImpl.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add", "patch": "@@ -37,6 +37,7 @@ private PageResolverDefaultImpl()\n    * @param viewId {@inheritDoc}\n    * @return {@inheritDoc}\n    */\n+  @Override\n   public String getPhysicalURI(String viewId)\n   {\n     return viewId;\n@@ -45,6 +46,7 @@ public String getPhysicalURI(String viewId)\n   /**\n    * Encodes an action URI.\n    */\n+  @Override\n   public String encodeActionURI(String actionURI)\n   {\n     return actionURI;", "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/context/PageResolverDefaultImpl.java"}, {"additions": 1, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/context/RequestContextBean.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/context/RequestContextBean.java", "sha": "d600986a7eac2490944164494e6fc89030cd2029", "changes": 1, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/context/RequestContextBean.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add", "patch": "@@ -64,6 +64,7 @@\n     TYPE.lock();\n   }\n \n+  @Override\n   public Type getType()\n   {\n     return TYPE;", "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/context/RequestContextBean.java"}, {"additions": 1, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/context/RequestContextFactoryImpl.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/context/RequestContextFactoryImpl.java", "sha": "ad91a3f4033bf8d3d124eb32cad07bb919d2f9a7", "changes": 1, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/context/RequestContextFactoryImpl.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add", "patch": "@@ -37,6 +37,7 @@ public RequestContextFactoryImpl()\n   {\n   }\n \n+  @Override\n   public RequestContext createContext(Object context,\n                                        Object request)\n   {", "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/context/RequestContextFactoryImpl.java"}, {"additions": 61, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/context/RequestContextImpl.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/context/RequestContextImpl.java", "sha": "31a54e02f67926b5252c4ad046622375b998541e", "changes": 91, "status": "modified", "deletions": 30, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/context/RequestContextImpl.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add", "patch": "@@ -15,10 +15,11 @@\n  */\n package org.apache.myfaces.trinidadinternal.context;\n \n-\n+import java.awt.Color;\n import java.util.HashMap;\n import java.util.HashSet;\n import java.util.Iterator;\n+import java.util.List;\n import java.util.Locale;\n import java.util.Map;\n import java.util.Set;\n@@ -82,6 +83,7 @@ public RequestContextImpl(RequestContextBean bean)\n   {\n     _bean = bean;\n     _dialogService = new DialogServiceImpl(this);\n+    _partialTargets = new HashSet<String>();\n   }\n \n   public void init(Object request)\n@@ -90,28 +92,33 @@ public void init(Object request)\n   }\n \n \n+  @Override\n   public DialogService getDialogService()\n   {\n     return _dialogService;\n   }\n \n+  @Override\n   public PageResolver getPageResolver()\n   {\n     return _pageResolver;\n   }\n \n+  @Override\n   public PageFlowScopeProvider getPageFlowScopeProvider()\n   {\n     return _pageFlowScopeProvider;\n   }\n \n-  public Map getPageFlowScope()\n+  @Override\n+  public Map<String, Object> getPageFlowScope()\n   {\n     return _pageFlowScopeProvider.getPageFlowScope(__getFacesContext());\n   }\n \n \n-  public void returnFromDialog(Object returnValue, Map returnParameters)\n+  @Override\n+  public void returnFromDialog(Object returnValue, Map<Object, Object> returnParameters)\n   {\n     boolean dialogIsInaccessible =\n       _dialogService.returnFromDialog(returnValue, returnParameters);\n@@ -125,12 +132,13 @@ public void returnFromDialog(Object returnValue, Map returnParameters)\n    * Launch a dialog.\n    * @todo Don't save parameters for state-saving, page-flow scope, etc.\n    */\n+  @Override\n   public void launchDialog(\n     UIViewRoot  dialogRoot,\n-    Map         dialogParameters,\n+    Map<String, Object> dialogParameters,\n     UIComponent source,\n     boolean     useWindow,\n-    Map         windowProperties)\n+    Map<String, Object> windowProperties)\n   {\n     _pageFlowScopeProvider.pushPageFlowScope(__getFacesContext(),\n                                              true);\n@@ -141,13 +149,15 @@ public void launchDialog(\n                                 windowProperties);\n   }\n \n+  @Override\n   public UploadedFileProcessor getUploadedFileProcessor()\n   {\n     return (UploadedFileProcessor)\n       _bean.getProperty(RequestContextBean.UPLOADED_FILE_PROCESSOR_KEY);\n   }\n \n \n+  @Override\n   public boolean isPostback()\n   {\n     FacesContext context = __getFacesContext();\n@@ -175,38 +185,44 @@ public boolean isPostback()\n     return true;\n   }\n   \n+  @SuppressWarnings(\"unchecked\")\n+  @Override\n   public boolean isPartialRequest(FacesContext context)\n   {\n-    Map requestMap = context.getExternalContext().getRequestMap();\n+    Map<String, Object> requestMap = context.getExternalContext().getRequestMap();\n     if (Boolean.TRUE.equals(requestMap.get(XhtmlConstants.PARTIAL_PARAM)))\n       return true;\n     \n-    Map parameters = context.getExternalContext().getRequestParameterMap();\n+    Map<String, Object> parameters = context.getExternalContext().getRequestParameterMap();\n     if (\"true\".equals(parameters.get(\"partial\")))\n       return true;\n \n     return false;\n   }\n \n \n+  @Override\n   public boolean isDebugOutput()\n   {\n     return Boolean.TRUE.equals(\n        _bean.getProperty(RequestContextBean.DEBUG_OUTPUT_KEY));\n   }\n \n+  @Override\n   public boolean isClientValidationDisabled()\n   {\n     return Boolean.TRUE.equals(\n        _bean.getProperty(RequestContextBean.CLIENT_VALIDATION_DISABLED_KEY));\n   }\n \n+  @Override\n   public String getOutputMode()\n   {\n     return (String) _bean.getProperty(RequestContextBean.OUTPUT_MODE_KEY);\n   }\n \n   // get skinFamily; default to minimal if nothing is specified.\n+  @Override\n   public String getSkinFamily()\n   {\n     String skinFamily =\n@@ -216,6 +232,7 @@ public String getSkinFamily()\n     return skinFamily;\n   }\n \n+  @Override\n   public String getAccessibilityMode()\n   {\n     String s = (String) _bean.getProperty(\n@@ -233,6 +250,7 @@ public String getAccessibilityMode()\n     return null;\n   }\n \n+  @Override\n   public char getNumberGroupingSeparator()\n   {\n     Character c = (Character) _bean.getProperty(\n@@ -243,6 +261,7 @@ public char getNumberGroupingSeparator()\n     return (char) 0;\n   }\n \n+  @Override\n   public char getDecimalSeparator()\n   {\n     Character c = (Character) _bean.getProperty(\n@@ -254,6 +273,7 @@ public char getDecimalSeparator()\n   }\n \n \n+  @Override\n   public TimeZone getTimeZone()\n   {\n     TimeZone tz = (TimeZone) _bean.getProperty(RequestContextBean.TIME_ZONE_KEY);\n@@ -277,10 +297,12 @@ public TimeZone getTimeZone()\n   /**\n    * {@inheritDoc}\n    */\n+  @SuppressWarnings(\"unchecked\")\n+  @Override\n   public ChangeManager getChangeManager()\n   {\n     FacesContext context = __getFacesContext();\n-    Map appMap = context.getExternalContext().getApplicationMap();\n+    Map<String, Object> appMap = context.getExternalContext().getApplicationMap();\n     ChangeManager changeManager = (ChangeManager)appMap.get(_CHANGE_MANAGER_KEY);\n \n     if (changeManager == null)\n@@ -325,7 +347,7 @@ private ChangeManager _createChangeManager(\n   {\n     try\n     {\n-      Class managerClass = ClassLoaderUtils.loadClass(className);\n+      Class<?> managerClass = ClassLoaderUtils.loadClass(className);\n       return (ChangeManager)managerClass.newInstance();\n     }\n     catch (Throwable throwable)\n@@ -337,23 +359,27 @@ private ChangeManager _createChangeManager(\n   }\n \n \n+  @Override\n   public RegionManager getRegionManager()\n   {\n     FacesContext context = __getFacesContext();\n     return RegionMetadata.getRegionMetadata(context);\n   }\n \n+  @Override\n   public String getCurrencyCode()\n   {\n     return (String) _bean.getProperty(RequestContextBean.CURRENCY_CODE_KEY);\n   }\n \n+  @Override\n   public String getOracleHelpServletUrl()\n   {\n     return (String) _bean.getProperty(\n      RequestContextBean.ORACLE_HELP_SERVLET_URL_KEY);\n   }\n \n+  @Override\n   public boolean isRightToLeft()\n   {\n     Boolean b = (Boolean) _bean.getProperty(RequestContextBean.RIGHT_TO_LEFT_KEY);\n@@ -372,7 +398,8 @@ public boolean isRightToLeft()\n   }\n \n \n-  public Map getHelpTopic()\n+  @Override\n+  public Map<String, Object> getHelpTopic()\n   {\n     HelpProvider provider = _getHelpProvider();\n     if (provider == null)\n@@ -381,7 +408,8 @@ public Map getHelpTopic()\n     return provider.getHelpTopicMap();\n   }\n \n-  public Map getHelpSystem()\n+  @Override\n+  public Map<String, Object> getHelpSystem()\n   {\n     HelpProvider provider = _getHelpProvider();\n     if (provider == null)\n@@ -394,6 +422,7 @@ public Map getHelpSystem()\n   // Partial Page Rendering support\n   //\n \n+  @Override\n   public void addPartialTarget(UIComponent newTarget)\n   {\n     FacesContext fContext = __getFacesContext();\n@@ -437,38 +466,38 @@ public void addPartialTarget(UIComponent newTarget)\n     }\n   }\n \n+  @Override\n   public void addPartialTriggerListeners\n     (UIComponent listener,\n      String[] triggers)\n   {\n     if ((listener == null) || (triggers == null))\n       return;\n \n-    Map pl = _getPartialListeners();\n+    Map<UIComponent, Set<UIComponent>> pl = _getPartialListeners();\n \n     for (int i = 0; i < triggers.length; i++)\n     {\n       String trigger = triggers[i];\n \n-      Object master;\n-\n       // Wildcards removed for now....\n       // if (\"*\".equals(trigger))\n       //   master = _GLOBAL_TRIGGER;\n       // else\n-      master = listener.getParent().findComponent(trigger);\n+      UIComponent master = listener.getParent().findComponent(trigger);\n \n       // Get the set of listeners on this trigger and add this component.\n-      Set listeners = (Set) pl.get(master);\n+      Set<UIComponent> listeners = pl.get(master);\n       if (listeners == null)\n       {\n-        listeners = new HashSet();\n+        listeners = new HashSet<UIComponent>();\n         pl.put(master, listeners);\n       }\n       listeners.add(listener);\n     }\n   }\n \n+  @Override\n   public void partialUpdateNotify(UIComponent updated)\n   {\n     if (updated != null)\n@@ -487,7 +516,7 @@ public void partialUpdateNotify(UIComponent updated)\n   /**\n    * Get the clientIds of all components that have requested partial update\n    */\n-  public Iterator getPartialTargets()\n+  public Iterator<String> getPartialTargets()\n   {\n     return _partialTargets.iterator();\n   }\n@@ -497,21 +526,24 @@ public Iterator getPartialTargets()\n    * is listening on this component, it will add itself to the partialTargets\n    * list).\n    */\n-  public Set getPartialUpdates()\n+  public Set<String> getPartialUpdates()\n   {\n     return _partialTargets;\n   }\n \n-  public Map getColorPalette()\n+  @Override\n+  public Map<String, List<Color>> getColorPalette()\n   {\n     return ColorPaletteUtils.getColorPaletteMap();\n   }\n \n-  public Map getFormatter()\n+  @Override\n+  public Map<Object, Map<Object,String>> getFormatter()\n   {\n     return FormatterMap.sharedInstance();\n   }\n \n+  @Override\n   public int getTwoDigitYearStart()\n   {\n     Integer twoDigitYearStart  = (Integer) _bean.getProperty(\n@@ -523,6 +555,7 @@ public int getTwoDigitYearStart()\n     return 1950;\n   }\n \n+  @Override\n   public Agent getAgent()\n   {\n     if (_agent == null)\n@@ -559,17 +592,15 @@ int __getPageFlowScopeLifetime()\n \n   private void _addTargets(Object key)\n   {\n-    Map pl = _getPartialListeners();\n-    Set listeners = (Set) pl.get(key);\n+    Map<UIComponent, Set<UIComponent>> pl = _getPartialListeners();\n+    Set<UIComponent> listeners = pl.get(key);\n     if (listeners != null)\n     {\n       // protect from infinite recursion\n       pl.remove(key);\n \n-      Iterator iter = listeners.iterator();\n-      while (iter.hasNext())\n+      for(UIComponent listener : listeners)\n       {\n-        UIComponent listener = (UIComponent) iter.next();\n         addPartialTarget(listener);\n         // This target will be re-rendered, re-render anything that's\n         // listening on it also.\n@@ -630,19 +661,19 @@ private UIXCookie _getUIXCookie()\n     return null;\n   }\n \n-  private Map _getPartialListeners()\n+  private Map<UIComponent, Set<UIComponent>> _getPartialListeners()\n   {\n     if (_partialListeners == null)\n-      _partialListeners = new HashMap();\n+      _partialListeners = new HashMap<UIComponent, Set<UIComponent>>();\n \n     return _partialListeners;\n   }\n \n \n   private RequestContextBean _bean;\n   private HelpProvider        _provider;\n-  private Map                 _partialListeners;\n-  private Set                 _partialTargets = new HashSet();\n+  private Map<UIComponent, Set<UIComponent>> _partialListeners;\n+  private Set<String>         _partialTargets;\n   private Agent               _agent;\n \n   private DialogServiceImpl   _dialogService;", "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/context/RequestContextImpl.java"}, {"additions": 4, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/context/TrinidadPhaseListener.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/context/TrinidadPhaseListener.java", "sha": "f235543303f15b6ff795dcec3a37b65500b6c93a", "changes": 5, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/context/TrinidadPhaseListener.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add", "patch": "@@ -58,6 +58,7 @@ static public void markPostback(FacesContext context)\n     context.getExternalContext().getRequestMap().remove(_POSTBACK_KEY);\n   }\n \n+  @SuppressWarnings(\"unchecked\")\n   public void afterPhase(PhaseEvent event)\n   {\n     if (event.getPhaseId() == PhaseId.RESTORE_VIEW)\n@@ -83,6 +84,7 @@ public void afterPhase(PhaseEvent event)\n     }\n   }\n \n+  @SuppressWarnings(\"unchecked\")\n   public void beforePhase(PhaseEvent event)\n   {\n     // Ensure that the implicit object gets created.  In general,\n@@ -123,9 +125,10 @@ public PhaseId getPhaseId()\n   // Create the RequestContext if necessary;  ideally, this is unnecessary\n   // because our filter will have executed - but if not, deal.\n   //\n+  @SuppressWarnings(\"unchecked\")\n   static private void _createContextIfNecessary(FacesContext fContext)\n   {\n-    Map requestMap = fContext.getExternalContext().getRequestMap();\n+    Map<String, Object> requestMap = fContext.getExternalContext().getRequestMap();\n     Boolean createdContext = (Boolean)\n       requestMap.get(_CREATED_CONTEXT_KEY);\n     if (createdContext == null)", "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/context/TrinidadPhaseListener.java"}, {"additions": 26, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/convert/BaseConverter.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/convert/BaseConverter.java", "sha": "00f7bd495bd0cf50fbe8ea5aedc35b8857231cec", "changes": 41, "status": "modified", "deletions": 15, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/convert/BaseConverter.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add", "patch": "@@ -15,9 +15,8 @@\n */\n package org.apache.myfaces.trinidadinternal.convert;\n \n-import java.util.Arrays;\n+import java.util.ArrayList;\n import java.util.Calendar;\n-import java.util.Collections;\n import java.util.Date;\n import java.util.List;\n \n@@ -27,7 +26,8 @@ public BaseConverter()\n   {\n   }\n \n-  public Object convert(Object source, Class targetType)\n+  @Override\n+  public Object convert(Object source, Class<?> targetType)\n   {\n     if (source instanceof Calendar)\n     {\n@@ -62,25 +62,36 @@ public Object convert(Object source, Class targetType)\n       source.getClass() + \" to:\"+targetType);\n   }\n \n-  public List getTargetTypes(Class sourceType)\n+  @SuppressWarnings(\"unchecked\")\n+  @Override\n+  public List<Class<?>> getTargetTypes(Class<?> sourceType)\n   {\n+    ArrayList<Class<?>> list = new ArrayList<Class<?>>(1);\n     if (Date.class.isAssignableFrom(sourceType))\n     {\n-      return Collections.singletonList(Calendar.class);\n+      list.add(Calendar.class);\n     }\n-    if (Calendar.class.isAssignableFrom(sourceType))\n+    else if (Calendar.class.isAssignableFrom(sourceType))\n     {\n-      return Collections.singletonList(Date.class);\n+      list.add(Date.class);\n     }\n-    if (Number.class.isAssignableFrom(sourceType))\n+    else if (Number.class.isAssignableFrom(sourceType))\n     {\n-      return Arrays.asList(new Class[] {\n-        Byte.class, Double.class, Float.class, \n-        Integer.class, Long.class, Short.class,\n-        Byte.TYPE, Double.TYPE, Float.TYPE, // bug 4891181\n-        Integer.TYPE, Long.TYPE, Short.TYPE}\n-        );\n+      list.ensureCapacity(12);\n+      list.add(Byte.class);\n+      list.add(Double.class);\n+      list.add(Float.class);\n+      list.add(Integer.class);\n+      list.add(Long.class);\n+      list.add(Short.class);\n+      list.add(Byte.TYPE);\n+      list.add(Double.TYPE);\n+      list.add(Float.TYPE); // bug 4891181\n+      list.add(Integer.TYPE);\n+      list.add(Long.TYPE);\n+      list.add(Short.TYPE);\n     }\n-    return Collections.EMPTY_LIST;\n+    \n+    return list;\n   }\n }", "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/convert/BaseConverter.java"}, {"additions": 1, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/convert/ByteConverter.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/convert/ByteConverter.java", "sha": "ac0ceb1ecf8c305dd84c7d3c10de46267cc00678", "changes": 1, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/convert/ByteConverter.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add", "patch": "@@ -58,6 +58,7 @@\n     public static final String CONVERT_MESSAGE_ID =\n         \"org.apache.myfaces.trinidad.convert.ByteConverter.CONVERT\";\n \n+  @Override\n   public Object getAsObject(\n     FacesContext context, \n     UIComponent component,", "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/convert/ByteConverter.java"}, {"additions": 4, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/convert/ColorConverter.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/convert/ColorConverter.java", "sha": "e149fe1be0e1c21b762f8d801dd626068f1e034a", "changes": 6, "status": "modified", "deletions": 2, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/convert/ColorConverter.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add", "patch": "@@ -17,7 +17,6 @@\n \n import java.util.Map;\n \n-import javax.faces.application.FacesMessage;\n import javax.faces.component.UIComponent;\n import javax.faces.context.FacesContext;\n \n@@ -43,6 +42,7 @@ public String getLibKey(FacesContext context, UIComponent component)\n   }\n \n \n+  @SuppressWarnings(\"unchecked\")\n   public String getClientScript(FacesContext context, UIComponent component)\n   {\n \n@@ -66,7 +66,9 @@ public String getClientScript(FacesContext context, UIComponent component)\n       // FIX - figure out size!!!\n       StringBuffer buff = new StringBuffer();\n \n-      Map requestMap = context.getExternalContext().getRequestMap();\n+      // -= Simon Lessard =-\n+      // FIXME: JSF 1.2 specifies <String, Object>\n+      Map<Object, Object> requestMap = context.getExternalContext().getRequestMap();\n       // =-=JRF Only if Javascript...\n       if (requestMap.get(_PATTERN_WRITTEN_KEY) == null)\n       {", "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/convert/ColorConverter.java"}, {"additions": 3, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/convert/ConvertException.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/convert/ConvertException.java", "sha": "b574530a171ad8d738bc5484533995764c183fd9", "changes": 6, "status": "modified", "deletions": 3, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/convert/ConvertException.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add", "patch": "@@ -17,17 +17,17 @@\n \n class ConvertException extends RuntimeException\n {\n-  public ConvertException(Object source, Class targetType, Throwable error)\n+  public ConvertException(Object source, Class<?> targetType, Throwable error)\n   {\n     super(_getMessage(source, targetType), error);\n   }\n   \n-  public ConvertException(Object source, Class targetType)\n+  public ConvertException(Object source, Class<?> targetType)\n   {\n     super(_getMessage(source, targetType));\n   }\n   \n-  private static String _getMessage(Object source, Class targetType)\n+  private static String _getMessage(Object source, Class<?> targetType)\n   {\n     return \"Could not convert instance:\"+source +\n       \" of type:\"+source.getClass()+\" into type:\"+targetType;", "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/convert/ConvertException.java"}, {"additions": 1, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/convert/ConverterUtils.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/convert/ConverterUtils.java", "sha": "3b340f73db7c2fa5d2786e77640686c5b1c1722e", "changes": 2, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/convert/ConverterUtils.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add", "patch": "@@ -149,7 +149,7 @@ private static final Object _getLabel(\n    */\n   static public Converter createConverter(\n     FacesContext context,\n-    Class        converterType)\n+    Class<?>     converterType)\n   {\n     // Don't bother for Strings and Objects;  note that the 1.1_01 RI\n     // returns null, but the spec requires a FacesException, and MyFaces", "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/convert/ConverterUtils.java"}, {"additions": 9, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/convert/DateTimeConverter.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/convert/DateTimeConverter.java", "sha": "83421a912f46090209943e42429fd1f46751ed6b", "changes": 11, "status": "modified", "deletions": 2, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/convert/DateTimeConverter.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add", "patch": "@@ -66,6 +66,7 @@ public DateTimeConverter(String pattern, String secondaryPattern)\n     super(pattern, secondaryPattern);\n   }\n \n+  @Override\n   public String getAsString(FacesContext context, UIComponent component, Object value)\n   {\n     if (value == null)\n@@ -81,6 +82,7 @@ public String getAsString(FacesContext context, UIComponent component, Object va\n   }\n \n \n+  @Override\n   public Object getAsObject(FacesContext context, UIComponent component, String value)\n   {\n     Object date = super.getAsObject(context, component, value);\n@@ -107,7 +109,7 @@ static Object __typeConvert(\n     ValueBinding binding = component.getValueBinding(\"value\");\n     if (binding != null)\n     {\n-      Class expectedType = binding.getType(context);\n+      Class<?> expectedType = binding.getType(context);\n       // Sometimes the type might be null, if it cannot be determined:\n       if ((expectedType != null) && (!expectedType.isAssignableFrom(value.getClass())))\n       {\n@@ -132,6 +134,7 @@ static Object __typeConvert(\n     return value;\n   }\n \n+  @SuppressWarnings(\"unchecked\")\n   public String getClientScript(FacesContext context, UIComponent component)\n   {\n \n@@ -154,7 +157,9 @@ public String getClientScript(FacesContext context, UIComponent component)\n       FormRenderer.addPatternMapping( clientId,\n                                       getExample(context));\n       // =-=AEW Only if Javascript...\n-      Map requestMap = context.getExternalContext().getRequestMap();\n+      // -= Simon Lessard =-\n+      // FIXME: JSF 1.2 specifies <String, Object>\n+      Map<Object, Object> requestMap = context.getExternalContext().getRequestMap();\n \n       // this fetch could be at the place where we append, but has been\n       // moved ahead to optimize use of StringBuffer\n@@ -305,6 +310,7 @@ public int getColumns()\n     return len;\n   }\n \n+  @Override\n   protected Date getDate(FacesContext context, UIComponent component)\n   {\n     if (false)\n@@ -339,6 +345,7 @@ protected Date getDate(FacesContext context, UIComponent component)\n    * TimeZone names of Java, since these names are not available in\n    * client side JavaScript.\n    */\n+  @Override\n   protected TimeZone getFormattingTimeZone(TimeZone tZone)\n   {\n     TimeZone zone = (TimeZone)tZone.clone();", "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/convert/DateTimeConverter.java"}, {"additions": 1, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/convert/DoubleConverter.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/convert/DoubleConverter.java", "sha": "9eca2711668eb449ebd5913a8846b969d1366670", "changes": 1, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/convert/DoubleConverter.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add", "patch": "@@ -34,6 +34,7 @@\n     public static final String CONVERT_MESSAGE_ID =\n         \"org.apache.myfaces.trinidad.convert.DoubleConverter.CONVERT\";\n \n+  @Override\n   public Object getAsObject(\n     FacesContext context, \n     UIComponent component,", "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/convert/DoubleConverter.java"}, {"additions": 1, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/convert/FloatConverter.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/convert/FloatConverter.java", "sha": "b7fc27ba4a0fc92bcdea74ea9682607b87490c35", "changes": 1, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/convert/FloatConverter.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add", "patch": "@@ -34,6 +34,7 @@\n     public static final String CONVERT_MESSAGE_ID =\n         \"org.apache.myfaces.trinidad.convert.FloatConverter.CONVERT\";\n \n+  @Override\n   public Object getAsObject(\n     FacesContext context, \n     UIComponent component,", "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/convert/FloatConverter.java"}, {"additions": 2, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/convert/GenericConverter.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/convert/GenericConverter.java", "sha": "1c06a9d5f130ea05e903cb914c403303191d69d8", "changes": 4, "status": "modified", "deletions": 2, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/convert/GenericConverter.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add", "patch": "@@ -31,7 +31,7 @@\n    * targetType.\n    * @return an instance of the targetType.\n    */\n-  public abstract Object convert(Object source, Class targetType);\n+  public abstract Object convert(Object source, Class<?> targetType);\n     \n   /**\n    * Gets all the supported targetTypes for the given sourceType.\n@@ -40,5 +40,5 @@\n    * @return Each item is of type {@link Class}. An empty list must be\n    * returned if the given sourceType cannot be converted into anything.\n    */\n-  public abstract List getTargetTypes(Class sourceType);\n+  public abstract List<Class<?>> getTargetTypes(Class<?> sourceType);\n }", "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/convert/GenericConverter.java"}, {"additions": 55, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/convert/GenericConverterFactory.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/convert/GenericConverterFactory.java", "sha": "582bd692a13dd6f9c581dc34b4f6fcf43df86f06", "changes": 84, "status": "modified", "deletions": 29, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/convert/GenericConverterFactory.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add", "patch": "@@ -37,7 +37,8 @@\n {\n   private GenericConverterFactory()\n   {\n-    _converters = new ArrayList(3);\n+    _cache = new HashMap<Key, GenericConverter>(16);\n+    _converters = new ArrayList<GenericConverter>(3);\n     registerConverter(new SqlConverter());\n     registerConverter(new BaseConverter());\n   }\n@@ -55,7 +56,7 @@ private GenericConverterFactory()\n    * requests for the same source and target types will be fast.\n    * @return null if there is no such converter.\n    */\n-  public GenericConverter getConverter(Class sourceType, Class targetType)\n+  public GenericConverter getConverter(Class<?> sourceType, Class<?> targetType)\n   {\n     Key key = new Key(sourceType, targetType);\n     // check the cache first:\n@@ -69,11 +70,11 @@ public GenericConverter getConverter(Class sourceType, Class targetType)\n     // can be used to perform this conversion.\n     // initial node in chain:\n     Node start = new Node(null, null, sourceType);\n-    LinkedList sourcesToBeSearched = new LinkedList();\n+    LinkedList<Node> sourcesToBeSearched = new LinkedList<Node>();\n     sourcesToBeSearched.add(start);\n     // cache to store all the classes we've tested already. This is to\n     // avoid our chains from looping indefinitely:\n-    Set cache  = new HashSet(16);\n+    Set<Class<?>> cache  = new HashSet<Class<?>>(16);\n     GenericConverter converter = _findConverter(sourcesToBeSearched, targetType, cache);\n     if (converter == null)\n     {\n@@ -98,19 +99,19 @@ public GenericConverter getConverter(Class sourceType, Class targetType)\n    * @return null if no converter was found.\n    */\n   private GenericConverter _findConverter(\n-    LinkedList sourcesToBeSearched,\n-    Class targetType, \n-    Set cache)\n+    LinkedList<Node> sourcesToBeSearched,\n+    Class<?> targetType, \n+    Set<Class<?>> cache)\n   {\n     while(!sourcesToBeSearched.isEmpty())\n     {\n-      Node source = (Node) sourcesToBeSearched.removeFirst();\n+      Node source = sourcesToBeSearched.removeFirst();\n       // loop through all the converters and see what types they can turn \n       // the current sourceType into \n       // (the current sourceType is source.targetType):\n       for(int j=0,jsz=_converters.size(); j<jsz; j++)\n       {\n-        GenericConverter conv = (GenericConverter) _converters.get(j);\n+        GenericConverter conv = _converters.get(j);\n         // loop though all the targetTypes on this converter to see\n         // if we can find the one we're looking for:\n         if (_searchTargetTypes(sourcesToBeSearched, source, conv, targetType,\n@@ -142,17 +143,17 @@ private GenericConverter _findConverter(\n    * currentSource.targetType into searchType.\n    */\n   private boolean _searchTargetTypes(\n-    List sourcesToBeSearched,\n+    List<Node> sourcesToBeSearched,\n     Node currentSource,\n     GenericConverter currentConverter,\n-    Class searchType,\n-    Set cache)\n+    Class<?> searchType,\n+    Set<Class<?>> cache)\n   {\n-    Class sourceType = currentSource.targetType;\n-    List targetTypes = currentConverter.getTargetTypes(sourceType);\n+    Class<?> sourceType = currentSource.targetType;\n+    List<Class<?>> targetTypes = currentConverter.getTargetTypes(sourceType);\n     for(int i=0,sz=targetTypes.size(); i<sz; i++)\n     {\n-      Class targetType = (Class) targetTypes.get(i);\n+      Class<?> targetType = targetTypes.get(i);\n       // check to see if we've seen this targetType before:\n       if (cache.add(targetType))\n       {\n@@ -188,7 +189,7 @@ public void registerConverter(GenericConverter converter)\n    * @param targetType the required type.\n    * @return null, if the source is null.\n    */\n-  public Object convert(Object source, Class targetType)\n+  public Object convert(Object source, Class<?> targetType)\n   {\n     if (source == null)\n       return null;\n@@ -209,7 +210,7 @@ public Object convert(Object source, Class targetType)\n    * into the specified targetType\n    * @return true if conversion is possible.\n    */\n-  public boolean isConvertible(Object source, Class targetType)\n+  public boolean isConvertible(Object source, Class<?> targetType)\n   {\n     if (source == null)\n       return false; // bug 4589048\n@@ -221,13 +222,30 @@ public boolean isConvertible(Object source, Class targetType)\n     return converter != null;\n   }\n   \n-  private final Map _cache = new HashMap(16);\n-  private final List _converters;\n-  private static final Object _NULL = Node.class; // reuse an object\n+  private final Map<Key, GenericConverter> _cache;\n+  private final List<GenericConverter> _converters;\n+  // 2006-08-02: -= Simon Lessard =-\n+  //             Using a GenericConverter null value instead \n+  //             of Node.class to be typesafe\n+  private static final GenericConverter _NULL = new GenericConverter()\n+  {\n+    @Override\n+    public Object convert(Object source, Class<?> targetType)\n+    {\n+      return null;\n+    }\n+    \n+    @Override\n+    @SuppressWarnings(\"unchecked\")\n+    public List<Class<?>> getTargetTypes(Class<?> sourceType)\n+    {\n+      return Collections.EMPTY_LIST;\n+    }\n+  };\n \n   private static final class Node\n   {\n-    public Node(Node previous, GenericConverter converter, Class targetType)\n+    public Node(Node previous, GenericConverter converter, Class<?> targetType)\n     {\n       this.previous = previous;\n       this.converter = converter;\n@@ -244,7 +262,7 @@ public Object convert(Object source)\n       return source;\n     }\n     \n-    public Class getSourceType()\n+    public Class<?> getSourceType()\n     {\n       if (previous == null)\n         return targetType;\n@@ -253,12 +271,12 @@ public Class getSourceType()\n     \n     public final Node previous;\n     public final GenericConverter converter;\n-    public final Class targetType;\n+    public final Class<?> targetType;\n   }\n   \n   private static final class Key\n   {\n-    public Key(Class source, Class target)\n+    public Key(Class<?> source, Class<?> target)\n     {\n       assert !source.equals(target);\n \n@@ -268,11 +286,13 @@ public Key(Class source, Class target)\n       _hc = source.hashCode() + target.hashCode();\n     }\n   \n+    @Override\n     public int hashCode()\n     {\n       return _hc;\n     }\n     \n+    @Override\n     public boolean equals(Object other)\n     {\n       if (this == other)\n@@ -286,18 +306,20 @@ public boolean equals(Object other)\n     }\n     \n     private final int _hc;  \n-    private final Class _source, _target;\n+    private final Class<?> _source;\n+    private final Class<?> _target;\n   }\n   \n   private static final class CompositeConverter extends GenericConverter\n   {\n-    public CompositeConverter(Node source, GenericConverter conv, Class targetType)\n+    public CompositeConverter(Node source, GenericConverter conv, Class<?> targetType)\n     {\n       assert source != null;\n       _chain = new Node(source, conv, targetType) ;\n     }\n \n-    public Object convert(Object source, Class targetType)\n+    @Override\n+    public Object convert(Object source, Class<?> targetType)\n     {\n       if (targetType.isAssignableFrom(_chain.targetType))\n       {\n@@ -307,11 +329,15 @@ public Object convert(Object source, Class targetType)\n         throw new IllegalArgumentException(\"Cannot convert to:\"+targetType);\n     }\n \n-    public List getTargetTypes(Class sourceType)\n+    @SuppressWarnings(\"unchecked\")\n+    @Override\n+    public List<Class<?>> getTargetTypes(Class<?> sourceType)\n     {\n       if (_chain.getSourceType().isAssignableFrom(sourceType))\n       {\n-        return Collections.singletonList(_chain.targetType);\n+        List<Class<?>> list = new ArrayList<Class<?>>(1);\n+        list.add(_chain.targetType);\n+        return list;\n       }\n       return Collections.EMPTY_LIST;\n     }", "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/convert/GenericConverterFactory.java"}, {"additions": 1, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/convert/IntegerConverter.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/convert/IntegerConverter.java", "sha": "cd8d250ace2984ffbb194697807c12fa87b85b00", "changes": 1, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/convert/IntegerConverter.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add", "patch": "@@ -62,6 +62,7 @@\n \n \n  \n+  @Override\n   public Object getAsObject(\n     FacesContext context, \n     UIComponent component,", "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/convert/IntegerConverter.java"}, {"additions": 1, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/convert/LongConverter.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/convert/LongConverter.java", "sha": "0f3ff65f45a503a94daa847888006d6c296e0d8f", "changes": 1, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/convert/LongConverter.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add", "patch": "@@ -60,6 +60,7 @@\n         \"org.apache.myfaces.trinidad.convert.LongConverter.CONVERT\";\n \n \n+  @Override\n   public Object getAsObject(\n     FacesContext context, \n     UIComponent component,", "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/convert/LongConverter.java"}, {"additions": 2, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/convert/NumberConverter.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/convert/NumberConverter.java", "sha": "f61815c60616481ee5bfc1a10509218253f2eacd", "changes": 2, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/convert/NumberConverter.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add", "patch": "@@ -25,6 +25,7 @@ public NumberConverter()\n   {\n   }\n   \n+  @Override\n   public Object getAsObject(\n     FacesContext context,\n     UIComponent component,\n@@ -41,6 +42,7 @@ public Object getAsObject(\n     return number;\n   }\n   \n+  @Override\n   public String getAsString(\n     FacesContext context, \n     UIComponent component,", "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/convert/NumberConverter.java"}, {"additions": 1, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/convert/ShortConverter.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/convert/ShortConverter.java", "sha": "20c15243248c7ec40f87574a8bb50752c86130d3", "changes": 1, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/convert/ShortConverter.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add", "patch": "@@ -60,6 +60,7 @@\n \n \n \n+  @Override\n   public Object getAsObject(\n     FacesContext context, \n     UIComponent component,", "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/convert/ShortConverter.java"}, {"additions": 11, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/convert/SqlConverter.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/convert/SqlConverter.java", "sha": "a4b36465b27160b3b2d918519c9f5ebd282b4ed4", "changes": 20, "status": "modified", "deletions": 9, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/convert/SqlConverter.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add", "patch": "@@ -19,7 +19,7 @@\n import java.sql.Time;\n import java.sql.Timestamp;\n \n-import java.util.Arrays;\n+import java.util.ArrayList;\n import java.util.Collections;\n import java.util.List;\n \n@@ -32,7 +32,8 @@ public SqlConverter()\n   {\n   }\n \n-  public Object convert(Object source, Class targetType)\n+  @Override\n+  public Object convert(Object source, Class<?> targetType)\n   {\n     java.util.Date jDate = (java.util.Date) source;\n     if (targetType.isAssignableFrom(Date.class))\n@@ -50,16 +51,17 @@ public Object convert(Object source, Class targetType)\n     throw new ConvertException(source, targetType);\n   }\n \n-  public List getTargetTypes(Class sourceType)\n+  @SuppressWarnings(\"unchecked\")\n+  @Override\n+  public List<Class<?>> getTargetTypes(Class<?> sourceType)\n   {\n     if (java.util.Date.class.isAssignableFrom(sourceType))\n     {\n-      Class[] types = new Class[] {\n-        Date.class,\n-        Time.class,\n-        Timestamp.class\n-      };\n-      return Arrays.asList(types);\n+      List<Class<?>> list = new ArrayList<Class<?>>(3);\n+      list.add(Date.class);\n+      list.add(Time.class);\n+      list.add(Timestamp.class);\n+      return list;\n     }\n     return Collections.EMPTY_LIST;\n   }", "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/convert/SqlConverter.java"}, {"additions": 15, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/el/FormatterMap.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/el/FormatterMap.java", "sha": "a5ec8b83307e3454f1c63578a3d95ff92cc1eb1f", "changes": 23, "status": "modified", "deletions": 8, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/el/FormatterMap.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add", "patch": "@@ -27,9 +27,9 @@\n  * <p>\n  * @author The Oracle ADF Faces Team\n  */\n-public class FormatterMap extends AbstractMap\n+public class FormatterMap extends AbstractMap<Object, Map<Object,String>>\n {\n-  static public Map sharedInstance()\n+  static public Map<Object, Map<Object,String>> sharedInstance()\n   {\n     return _INSTANCE;\n   }\n@@ -38,33 +38,40 @@ private FormatterMap()\n   {\n   }\n \n-  public Object get(Object key)\n+  @SuppressWarnings(\"unchecked\")\n+  @Override\n+  public Map<Object,String> get(Object key)\n   {\n     if (key == null)\n       return Collections.EMPTY_MAP;\n \n     return new FunctorMap(key);\n   }\n \n-  public Set entrySet()\n+  @SuppressWarnings(\"unchecked\")\n+  @Override\n+  public Set<Map.Entry<Object, Map<Object,String>>> entrySet()\n   {\n     return Collections.EMPTY_SET;\n   }\n \n-  static private final class FunctorMap extends AbstractMap\n+  static private final class FunctorMap extends AbstractMap<Object, String>\n   {\n     public FunctorMap(Object key)\n     {\n       // Assumes check against null above\n       _format = new FastMessageFormat(key.toString());\n     }\n \n-    public Object get(Object key)\n+    @Override\n+    public String get(Object key)\n     {\n       return _format.format(new Object[]{key});\n     }\n \n-    public Set entrySet()\n+    @SuppressWarnings(\"unchecked\")\n+    @Override\n+    public Set<Map.Entry<Object, String>> entrySet()\n     {\n       return Collections.EMPTY_SET;\n     }\n@@ -73,5 +80,5 @@ public Set entrySet()\n   }\n \n   \n-  static private final Map _INSTANCE = new FormatterMap();\n+  static private final Map<Object, Map<Object,String>> _INSTANCE = new FormatterMap();\n }", "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/el/FormatterMap.java"}, {"additions": 14, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/el/HelpProvider.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/el/HelpProvider.java", "sha": "df34ea7d580d115c425aeced510ad1775efef26f", "changes": 22, "status": "modified", "deletions": 8, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/el/HelpProvider.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add", "patch": "@@ -61,12 +61,12 @@\n {\n   public static final String FRONT_PAGE_KEY = \"frontPage\";\n \n-  public Map getHelpTopicMap()\n+  public Map<String, Object> getHelpTopicMap()\n   {\n     return _topicMap;\n   }\n \n-  public Map getHelpSystemMap()\n+  public Map<String, Object> getHelpSystemMap()\n   {\n     return _systemMap;\n   }\n@@ -99,33 +99,39 @@ public Map getHelpSystemMap()\n    */\n   protected abstract Object getHelpSystemValue(Object key);\n \n-  private class HelpTopicMap extends AbstractMap\n+  private class HelpTopicMap extends AbstractMap<String, Object>\n   {\n-    public Set entrySet()\n+    @SuppressWarnings(\"unchecked\")\n+    @Override\n+    public Set<Map.Entry<String, Object>> entrySet()\n     {\n       return Collections.EMPTY_SET;\n     }\n \n+    @Override\n     public Object get(Object key)\n     {\n       return getHelpTopicValue(key);\n     }\n   }\n \n-  private class HelpSystemMap extends AbstractMap\n+  private class HelpSystemMap extends AbstractMap<String, Object>\n   {\n-    public Set entrySet()\n+    @SuppressWarnings(\"unchecked\")\n+    @Override\n+    public Set<Map.Entry<String, Object>> entrySet()\n     {\n       return Collections.EMPTY_SET;\n     }\n \n+    @Override\n     public Object get(Object key)\n     {\n       return getHelpSystemValue(key);\n     }\n   }\n \n-  private Map _topicMap = new HelpTopicMap();\n-  private Map _systemMap = new HelpSystemMap();\n+  private Map<String, Object> _topicMap = new HelpTopicMap();\n+  private Map<String, Object> _systemMap = new HelpSystemMap();\n }\n ", "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/el/HelpProvider.java"}, {"additions": 6, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/el/OracleHelpProvider.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/el/OracleHelpProvider.java", "sha": "5bee566cea71d4e3e4a7fb19ca3947cfa27289a4", "changes": 10, "status": "modified", "deletions": 4, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/el/OracleHelpProvider.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add", "patch": "@@ -67,7 +67,7 @@ public OracleHelpProvider(String ohwServletLocation)\n     }\n \n     _defaultOHWServletLocation = ohwServletLocation;\n-    _localeSpecificServlets = new OptimisticHashMap(13);\n+    _localeSpecificServlets = new OptimisticHashMap<Locale, String>(13);\n   }\n \n   /**\n@@ -101,6 +101,7 @@ public void registerLocaleSpecificServlet(Locale locale,\n    * <p>\n    * @param key criterion (topic-id)\n    */\n+  @Override\n   protected String getHelpTopicURL(Object key)\n   {\n     String helpURL = null;\n@@ -124,6 +125,7 @@ protected String getHelpTopicURL(Object key)\n    * <p>\n    * @param key criterion (HelpProvider key constant)\n    */\n+  @Override\n   protected String getHelpSystemURL(Object key)\n   {\n     if (HelpProvider.FRONT_PAGE_KEY.equals(key))\n@@ -163,7 +165,7 @@ private String _getLocaleSpecificServlet(FacesContext context)\n     //not then check language/country and lang only locales\n     if (_localeSpecificServlets.containsKey(desiredLocale))\n     {\n-      servletLocation = (String) _localeSpecificServlets.get(desiredLocale);\n+      servletLocation = _localeSpecificServlets.get(desiredLocale);\n     }\n     else\n     {\n@@ -184,7 +186,7 @@ private String _getLocaleSpecificServlet(FacesContext context)\n \n       if (matchingLocale != null)\n       {\n-        servletLocation = (String)_localeSpecificServlets.get(matchingLocale);\n+        servletLocation = _localeSpecificServlets.get(matchingLocale);\n       }\n \n       //cache the result of the search\n@@ -197,6 +199,6 @@ private String _getLocaleSpecificServlet(FacesContext context)\n   private static final String _TOPIC_PARAM = \"topic\";\n   private static final String _LOCALE_PARAM = \"locale\";\n   private String _defaultOHWServletLocation = null;\n-  private OptimisticHashMap _localeSpecificServlets = null;\n+  private OptimisticHashMap<Locale, String> _localeSpecificServlets = null;\n }\n ", "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/el/OracleHelpProvider.java"}, {"additions": 2, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/el/SecondaryWindowHelpProvider.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/el/SecondaryWindowHelpProvider.java", "sha": "186132610e075f50d2c3f1d3c4f60c3cf0f72e67", "changes": 2, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/el/SecondaryWindowHelpProvider.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add", "patch": "@@ -43,6 +43,7 @@\n    * <p>\n    * @param key criterion (topic-id)\n    */\n+  @Override\n   public Object getHelpTopicValue(Object key)\n   {\n     return _wrapURL(getHelpTopicURL(key));\n@@ -55,6 +56,7 @@ public Object getHelpTopicValue(Object key)\n    * <p>\n    * @param key criterion (HelpProvider key constant)\n    */\n+  @Override\n   public Object getHelpSystemValue(Object key)\n   {\n     return _wrapURL(getHelpSystemURL(key));", "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/el/SecondaryWindowHelpProvider.java"}, {"additions": 2, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/el/Tokenizer.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/el/Tokenizer.java", "sha": "78d57574721394e8ea4278a0b9449ee596e79de5", "changes": 4, "status": "modified", "deletions": 2, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/el/Tokenizer.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add", "patch": "@@ -22,7 +22,7 @@\n  * converts a EL expression into tokens.\n  * @author The Oracle ADF Faces Team\n  */\n-public class Tokenizer implements Iterator\n+public class Tokenizer implements Iterator<Tokenizer.Token>\n {\n   /**\n    * Creates a new Tokenizer\n@@ -44,7 +44,7 @@ public boolean hasNext()\n     return _curToken != null;\n   }\n     \n-  public Object next()\n+  public Tokenizer.Token next()\n   {\n     if (_curToken == null)\n       throw new NoSuchElementException();", "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/el/Tokenizer.java"}, {"additions": 1, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/el/TrinidadVariableResolver.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/el/TrinidadVariableResolver.java", "sha": "dce685730064797a45ca21be4c724540d557405f", "changes": 1, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/el/TrinidadVariableResolver.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add", "patch": "@@ -34,6 +34,7 @@ public TrinidadVariableResolver(VariableResolver decorated)\n     _decorated = decorated;\n   }\n \n+  @Override\n   public Object resolveVariable(FacesContext context, String name)\n   {\n     if (RequestContext.VARIABLE_NAME.equals(name))", "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/el/TrinidadVariableResolver.java"}, {"additions": 1, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/facelets/ReturnActionListenerTag.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/facelets/ReturnActionListenerTag.java", "sha": "fc93767220cc13f38a712a84cecfd1880f8a6ad5", "changes": 2, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/facelets/ReturnActionListenerTag.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add", "patch": "@@ -54,7 +54,7 @@ public void apply(FaceletContext faceletContext,\n       ValueExpression valueExp = _value.getValueExpression(faceletContext, Object.class);\n       ActionSource actionSource = (ActionSource)parent;\n       ReturnActionListener listener = new ReturnActionListener();\n-      listener.setValueBinding(listener.VALUE_KEY, new LegacyValueBinding(valueExp));\n+      listener.setValueBinding(ReturnActionListener.VALUE_KEY, new LegacyValueBinding(valueExp));\n       actionSource.addActionListener(listener);\n     }\n   }", "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/facelets/ReturnActionListenerTag.java"}, {"additions": 2, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/facelets/SetActionListenerTag.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/facelets/SetActionListenerTag.java", "sha": "3effa214ff7ffdccbb85d4a9390e47e3206dd52a", "changes": 4, "status": "modified", "deletions": 2, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/facelets/SetActionListenerTag.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add", "patch": "@@ -56,9 +56,9 @@ public void apply(FaceletContext faceletContext,\n                                                             Object.class);\n       ActionSource actionSource= (ActionSource) parent;\n       SetActionListener listener = new SetActionListener();\n-      listener.setValueBinding(listener.FROM_KEY,\n+      listener.setValueBinding(SetActionListener.FROM_KEY,\n                                new LegacyValueBinding(fromExpression));\n-      listener.setValueBinding(listener.TO_KEY,\n+      listener.setValueBinding(SetActionListener.TO_KEY,\n                                new LegacyValueBinding(toExpression));\n       actionSource.addActionListener(listener);\n     }", "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/facelets/SetActionListenerTag.java"}, {"additions": 8, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/facelets/StringArrayPropertyTagRule.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/facelets/StringArrayPropertyTagRule.java", "sha": "837257a74b84181946ad366d08057e31e4768646", "changes": 12, "status": "modified", "deletions": 4, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/facelets/StringArrayPropertyTagRule.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add", "patch": "@@ -45,6 +45,7 @@ public LiteralPropertyMetadata(Method method, TagAttribute attribute)\n       _attribute = attribute;\n     }\n     \n+    @Override\n     public void applyMetadata(FaceletContext ctx, Object instance)\n     {\n       if (_params == null)\n@@ -73,6 +74,7 @@ public void applyMetadata(FaceletContext ctx, Object instance)\n   }\n    \n \n+  @Override\n   public Metadata applyRule(\n      String name,\n      TagAttribute attribute,\n@@ -98,13 +100,15 @@ public Metadata applyRule(\n     if (str == null)\n       return null;\n \n-    ArrayList list = new ArrayList();\n+    ArrayList<String> list = new ArrayList<String>();\n     StringTokenizer tokens = new StringTokenizer(str);\n     while (tokens.hasMoreTokens())\n+    {\n       list.add(tokens.nextToken());\n-    String[] strArray = new String[list.size()];\n-    return (String[]) list.toArray(strArray);\n+    }\n+    \n+    return list.toArray(new String[list.size()]);\n   }\n \n-  static private final Class _STRING_ARRAY_TYPE = (new String[0]).getClass();\n+  static private final Class<? extends String[]> _STRING_ARRAY_TYPE = (new String[0]).getClass();\n }", "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/facelets/StringArrayPropertyTagRule.java"}, {"additions": 3, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/facelets/TrinidadComponentHandler.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/facelets/TrinidadComponentHandler.java", "sha": "74f75ba9301af6ba0aa4df4892fa75e37535c453", "changes": 3, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/facelets/TrinidadComponentHandler.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add", "patch": "@@ -57,6 +57,8 @@ public TrinidadComponentHandler(ComponentConfig config)\n     }\n   }\n \n+  @SuppressWarnings(\"unchecked\")\n+  @Override\n   protected MetaRuleset createMetaRuleset(Class type)\n   {\n     MetaRuleset m = super.createMetaRuleset(type);\n@@ -67,6 +69,7 @@ protected MetaRuleset createMetaRuleset(Class type)\n     return m;\n   }\n \n+  @Override\n   protected void onComponentPopulated(FaceletContext context,\n                                      UIComponent component,\n                                      UIComponent parent)", "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/facelets/TrinidadComponentHandler.java"}, {"additions": 6, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/facelets/TrinidadListenersTagRule.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/facelets/TrinidadListenersTagRule.java", "sha": "9e4fb07b870acb8ea5e6431d065822877a57bdba", "changes": 10, "status": "modified", "deletions": 4, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/facelets/TrinidadListenersTagRule.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add", "patch": "@@ -48,6 +48,7 @@ public ListenerPropertyMetadata(Method method, TagAttribute attribute, Class[] p\n       _paramList = paramList;\n     }\n     \n+    @Override\n     public void applyMetadata(FaceletContext ctx, Object instance)\n     {\n       MethodExpression expr =\n@@ -74,6 +75,7 @@ public void applyMetadata(FaceletContext ctx, Object instance)\n   }\n    \n \n+  @Override\n   public Metadata applyRule(\n      String name,\n      TagAttribute attribute,\n@@ -92,17 +94,17 @@ public Metadata applyRule(\n           return null;\n \n         // It should return an array of FooListener objects\n-        Class arrayType = listeners.getPropertyType();\n+        Class<?> arrayType = listeners.getPropertyType();\n         if (!arrayType.isArray())\n           return null;\n         \n         // Ignore non-ADF types\n-        Class listenerClass = arrayType.getComponentType();\n+        Class<?> listenerClass = arrayType.getComponentType();\n         if (!listenerClass.getName().startsWith(\"org.apache.myfaces.trinidad.\"))\n           return null;\n \n         // Turn that into an Event to get the signature\n-        Class eventClass = _getEventClass(listenerClass);\n+        Class<?> eventClass = _getEventClass(listenerClass);\n         if (eventClass == null)\n           return null;\n \n@@ -114,7 +116,7 @@ public Metadata applyRule(\n     return null;\n   }\n \n-  static private Class _getEventClass(Class listenerClass)\n+  static private Class<?> _getEventClass(Class<?> listenerClass)\n   {\n     String listenerName = listenerClass.getName();\n     if (!listenerName.endsWith(\"Listener\"))", "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/facelets/TrinidadListenersTagRule.java"}, {"additions": 2, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/AbstractImageRenderer.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/AbstractImageRenderer.java", "sha": "e1e6025632b7fb7e2067b8f8962c8a47b3a19a1b", "changes": 4, "status": "modified", "deletions": 2, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/AbstractImageRenderer.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add", "patch": "@@ -42,8 +42,8 @@\n    */\n   abstract public Image renderImage(\n     ImageContext context,\n-    Map requestedProperties,\n-    Map responseProperties\n+    Map<Object, Object> requestedProperties,\n+    Map<Object, Object> responseProperties\n     );\n \n   /**", "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/AbstractImageRenderer.java"}, {"additions": 1, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/ImageProviderRequest.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/ImageProviderRequest.java", "sha": "ff0d73fcd47904826d211bb287cc42a50a25defe", "changes": 2, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/ImageProviderRequest.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add", "patch": "@@ -50,5 +50,5 @@\n    * @see ImageRenderer\n    * @see ImageConstants\n    */\n-  public Map getRenderProperties(ImageContext context);\n+  public Map<Object, Object> getRenderProperties(ImageContext context);\n }", "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/ImageProviderRequest.java"}, {"additions": 3, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/ImageProviderRequestImpl.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/ImageProviderRequestImpl.java", "sha": "5f83f0a80f0a85bb7d34f4d4d2e018dce493c41a", "changes": 6, "status": "modified", "deletions": 3, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/ImageProviderRequestImpl.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add", "patch": "@@ -38,7 +38,7 @@ private ImageProviderRequestImpl() {}\n   public ImageProviderRequestImpl(\n     String     namespaceURI,\n     String     name,\n-    Map renderProperties)\n+    Map<Object, Object> renderProperties)\n   {\n     if (namespaceURI == null) \n     {\n@@ -74,12 +74,12 @@ public String getLocalName()\n   /**\n    * Implementation of ImageProviderRequest.getRenderProperties().\n    */\n-  public Map getRenderProperties(ImageContext context)\n+  public Map<Object, Object> getRenderProperties(ImageContext context)\n   {\n     return _properties;\n   }\n \n   private String     _namespace;\n   private String     _name;\n-  private Map _properties;\n+  private Map<Object, Object> _properties;\n }", "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/ImageProviderRequestImpl.java"}, {"additions": 3, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/ImageProviderResponse.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/ImageProviderResponse.java", "sha": "8332c16390c2912c08aed984f3799bfba09ca2e8", "changes": 4, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/ImageProviderResponse.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add", "patch": "@@ -17,6 +17,8 @@\n package org.apache.myfaces.trinidadinternal.image;\n import java.util.Collection;\n \n+import org.apache.myfaces.trinidadinternal.image.util.MapArea;\n+\n \n /**\n  * ImageProviderResponse objects are returned by the ImageProvider\n@@ -62,5 +64,5 @@\n    *\n    * @see org.apache.myfaces.trinidadinternal.image.util.MapArea\n    */\n-  public Collection getMapAreas();\n+  public Collection<MapArea> getMapAreas();\n }", "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/ImageProviderResponse.java"}, {"additions": 2, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/ImageRenderer.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/ImageRenderer.java", "sha": "35074d92fd73acef347580268a55b60578d3c4da", "changes": 4, "status": "modified", "deletions": 2, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/ImageRenderer.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add", "patch": "@@ -50,7 +50,7 @@\n    */\n   public Image renderImage(\n     ImageContext context,\n-    Map requestedProperties,\n-    Map responseProperties\n+    Map<Object, Object> requestedProperties,\n+    Map<Object, Object> responseProperties\n     );\n }", "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/ImageRenderer.java"}, {"additions": 8, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/ImageTypeImpl.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/ImageTypeImpl.java", "sha": "20c8a235925f4ba1fbfb208ba219007e9963046a", "changes": 20, "status": "modified", "deletions": 12, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/ImageTypeImpl.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add", "patch": "@@ -17,8 +17,6 @@\n package org.apache.myfaces.trinidadinternal.image;\n \n import java.util.Map;\n-import java.util.Iterator;\n-\n \n import org.apache.myfaces.trinidad.util.ArrayMap;\n \n@@ -33,10 +31,11 @@\n   public ImageTypeImpl(\n     String namespaceURI,\n     String name,\n-    Map properties)\n+    Map<Object, Object> properties)\n   {\n     _namespace = namespaceURI;\n     _name = name;\n+    _properties = new ArrayMap<Object, Object>();\n \n     setProperties(properties);\n   }\n@@ -105,27 +104,24 @@ synchronized public void setProperty(Object key, Object value)\n    * This method is not defined on ImageType or MutableImageType -\n    * it is provided as a convenience for ImageTypeManager.\n    */\n-  public void setProperties(Map properties)\n+  public void setProperties(Map<Object, Object> properties)\n   {\n     if (properties == null)\n       return;\n-\n-    Iterator keys = properties.keySet().iterator();\n-    while (keys.hasNext())\n+    \n+    for(Map.Entry<Object, Object> entry : properties.entrySet())\n     {\n-      Object key = keys.next();\n-      Object value = properties.get(key);\n-\n-      setProperty(key, value);\n+      setProperty(entry.getKey(), entry.getValue());\n     }\n   }\n \n+  @Override\n   public String toString()\n   {\n     return getClass().getName() + \"[\" + _namespace + \", \" + _name + \"]\";\n   }\n \n   private String   _namespace;\n   private String   _name;\n-  private ArrayMap _properties = new ArrayMap();\n+  private ArrayMap<Object, Object> _properties;\n }", "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/ImageTypeImpl.java"}, {"additions": 1, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/ImageTypeManager.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/ImageTypeManager.java", "sha": "d5f44a4ea1579fc6a81a37952cfd6e391f51f3a3", "changes": 2, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/ImageTypeManager.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add", "patch": "@@ -93,7 +93,7 @@ synchronized public ImageType getImageType(String namespace, String name)\n   synchronized public ImageType registerImageType(\n     String namespace,\n     String name,\n-    Map properties\n+    Map<Object, Object> properties\n     )\n   {\n     ImageType type = getImageType(namespace, name);", "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/ImageTypeManager.java"}, {"additions": 19, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/PainterImageRenderer.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/PainterImageRenderer.java", "sha": "05c433615a71225284dcc17b01217baa8fbe8bb8", "changes": 33, "status": "modified", "deletions": 14, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/PainterImageRenderer.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add", "patch": "@@ -83,10 +83,11 @@ public Painter getPainter()\n       * properties that describe what to render.  A PaintContext\n       * object is created using the given Map of properties.\n       */\n+    @Override\n     public Image renderImage(\n       ImageContext imageContext,\n-      Map requestedProperties,\n-      Map responseProperties\n+      Map<Object, Object> requestedProperties,\n+      Map<Object, Object> responseProperties\n       )\n     {\n         if (!isRenderable(imageContext, requestedProperties))\n@@ -155,7 +156,7 @@ public Image renderImage(\n      */\n     protected Painter getPainter(\n       ImageContext imageContext,\n-      Map requestedProperties\n+      Map<Object, Object> requestedProperties\n       )\n     {\n       return getPainter();\n@@ -173,7 +174,7 @@ protected Painter getPainter(\n      */\n     protected boolean isRenderable(\n       ImageContext imageContext,\n-      Map requestedProperties\n+      Map<Object, Object> requestedProperties\n       )\n     {\n       return GraphicsUtils.isGraphicalEnvironment();\n@@ -183,7 +184,9 @@ protected boolean isRenderable(\n      * Returns the foreground color to use when painting an image\n      * with the specified Map.\n      */\n-    protected Color getPaintForeground(ImageContext context, Map d)\n+    protected Color getPaintForeground(\n+        ImageContext context, \n+        Map<Object,Object> d)\n     {\n       return (Color)d.get(FOREGROUND_KEY);\n     }\n@@ -192,7 +195,9 @@ protected Color getPaintForeground(ImageContext context, Map d)\n      * Returns the background color to use when painting an image\n      * with the specified Map.\n      */\n-    protected Color getPaintBackground(ImageContext context, Map d)\n+    protected Color getPaintBackground(\n+        ImageContext context, \n+        Map<Object,Object> d)\n     {\n       return (Color)d.get(BACKGROUND_KEY);\n     }\n@@ -201,7 +206,7 @@ protected Color getPaintBackground(ImageContext context, Map d)\n      * Returns the font color to use when painting an image\n      * with the specified Map.\n      */\n-    protected Font getPaintFont(Map d)\n+    protected Font getPaintFont(Map<Object,Object> d)\n     {\n       Object o = d.get(FONT_KEY);\n \n@@ -211,7 +216,7 @@ protected Font getPaintFont(Map d)\n       return (Font)d.get(FONT_KEY);\n     }\n \n-    protected Object getPaintData(Object key, Map d)\n+    protected Object getPaintData(Object key, Map<Object,Object> d)\n     {\n       return d.get(key);\n     }\n@@ -223,8 +228,8 @@ protected Object getPaintData(Object key, Map d)\n     protected PaintContext createPaintContext(\n       ImageContext imageContext,\n       BufferedImage image,\n-      Map requestedProperties,\n-      Map responseProperties\n+      Map<Object,Object> requestedProperties,\n+      Map<Object,Object> responseProperties\n       )\n     {\n       return\n@@ -250,8 +255,8 @@ protected void disposePaintContext(PaintContext context)\n         public Context(\n           ImageContext imageContext,\n           BufferedImage image,\n-          Map requestedProperties,\n-          Map responseProperties\n+          Map<Object,Object> requestedProperties,\n+          Map<Object,Object> responseProperties\n           )\n \n         {\n@@ -395,8 +400,8 @@ public int getReadingDirection()\n \n         private Graphics2D            _graphics;\n         private ImageContext          _imageContext;\n-        private Map            _requested;\n-        private Map            _response;\n+        private Map<Object,Object>    _requested;\n+        private Map<Object,Object>    _response;\n         private int                   _direction;\n \n     }", "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/PainterImageRenderer.java"}, {"additions": 1, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/PropertyInstantiator.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/PropertyInstantiator.java", "sha": "78e5110fb9add24ce009bbfb9f83337db443250c", "changes": 2, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/PropertyInstantiator.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add", "patch": "@@ -46,7 +46,7 @@ public Object instantiate()\n   {\n     try\n     {\n-      Class classInstance = ClassLoaderUtils.loadClass(_className);\n+      Class<?> classInstance = ClassLoaderUtils.loadClass(_className);\n       return classInstance.newInstance();\n     }\n     catch (ClassNotFoundException cnfe)", "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/PropertyInstantiator.java"}, {"additions": 8, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/AccentColorizedIconKey.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/AccentColorizedIconKey.java", "sha": "4f45d56b5c7cb70ad23f5294b31590c896e79def", "changes": 14, "status": "modified", "deletions": 6, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/AccentColorizedIconKey.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add", "patch": "@@ -36,7 +36,7 @@\n    */\n   public AccentColorizedIconKey(\n     ImageContext context,\n-    Map properties\n+    Map<Object, Object> properties\n     )\n   {\n     super(context, properties);\n@@ -47,11 +47,11 @@ public AccentColorizedIconKey(\n    */\n   protected AccentColorizedIconKey(\n     ImageContext context,\n-    String source,\n-    Class  lookAndFeel,\n-    int    direction,\n-    Color  color,\n-    Color  surroundingColor)\n+    String   source,\n+    Class<?> lookAndFeel,\n+    int      direction,\n+    Color    color,\n+    Color    surroundingColor)\n   {\n     super(context, source, lookAndFeel, direction, color, surroundingColor);\n   }\n@@ -62,6 +62,7 @@ protected AccentColorizedIconKey(\n    * @deprecated in favor of\n    * {@link #AccentColorizedIconKey( ImageContext, String, Class, int, Color, Color)}\n    */\n+  @Deprecated\n   protected AccentColorizedIconKey(\n     ImageContext context,\n     String source,\n@@ -83,6 +84,7 @@ protected AccentColorizedIconKey(\n    * Returns the color key for accent colorized icons: \n    * ImageConstants.DARK_ACCENT_COLOR_KEY.\n    */\n+  @Override\n   public Object getColorKey()\n   {\n     return ImageConstants.DARK_ACCENT_COLOR_KEY;", "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/AccentColorizedIconKey.java"}, {"additions": 20, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/BaseColorizedIconKey.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/BaseColorizedIconKey.java", "sha": "a76750f17165573e5a74edce3ca9b6b791a72665", "changes": 37, "status": "modified", "deletions": 17, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/BaseColorizedIconKey.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add", "patch": "@@ -44,11 +44,11 @@\n    */\n   protected BaseColorizedIconKey(\n     ImageContext context,\n-    Map properties\n+    Map<Object, Object> properties\n     )\n   {\n     String source = (String)properties.get(SOURCE_KEY);\n-    Class lookAndFeel = (Class)properties.get(LAF_KEY);\n+    Class<?> lookAndFeel = (Class)properties.get(LAF_KEY);\n     int direction = CacheUtils.getReadingDirection(context, properties);\n     Color color = (Color)properties.get(getColorKey());\n     Color surroundingColor = (Color)properties.get(SURROUNDING_COLOR_KEY);\n@@ -61,11 +61,11 @@ protected BaseColorizedIconKey(\n    */\n   protected BaseColorizedIconKey(\n     ImageContext context,\n-    String source,\n-    Class  lookAndFeel,\n-    int    direction,\n-    Color  color,\n-    Color  surroundingColor)\n+    String   source,\n+    Class<?> lookAndFeel,\n+    int      direction,\n+    Color    color,\n+    Color    surroundingColor)\n   {\n     _init(source, lookAndFeel, direction, color, surroundingColor);\n   }\n@@ -75,6 +75,7 @@ protected BaseColorizedIconKey(\n    * @deprecated in favor of\n    * {@link #BaseColorizedIconKey( ImageContext, String, Class, int, Color, Color)}\n    */\n+  @Deprecated\n   protected BaseColorizedIconKey(\n     ImageContext context,\n     String source,\n@@ -111,6 +112,7 @@ public String getLocalName()\n   /**\n    * Override of Object.equals().\n    */\n+  @Override\n   public boolean equals(Object o)\n   {\n     // This equals implementation assumes that the same source icon name\n@@ -132,6 +134,7 @@ public boolean equals(Object o)\n   /**\n    * Override of Object.hashCode().\n    */\n+  @Override\n   public int hashCode()\n   {\n     return (_source.hashCode() |\n@@ -144,9 +147,9 @@ public int hashCode()\n   /**\n    * Implementation of ImageProviderRequest.getRenderProperties().\n    */\n-  public Map getRenderProperties(ImageContext context)\n+  public Map<Object, Object> getRenderProperties(ImageContext context)\n   {\n-    ArrayMap properties = new ArrayMap(_MAP_SIZE);\n+    ArrayMap<Object, Object> properties = new ArrayMap<Object, Object>(_MAP_SIZE);\n     properties.put(ImageConstants.SOURCE_KEY, getSource());\n     properties.put(getColorKey(), getColor());\n     properties.put(SURROUNDING_COLOR_KEY, _surroundingColor);\n@@ -168,7 +171,7 @@ protected String getSource()\n   /**\n    * Returns the lookAndFeel property.\n    */\n-  protected Class getLookAndFeel()\n+  protected Class<?> getLookAndFeel()\n   {\n     return _lookAndFeel;\n   }\n@@ -200,7 +203,7 @@ protected void setSource(String source)\n   /**\n    * Sets the lookAndFeel property.\n    */\n-  protected void setLookAndFeel(Class lookAndFeel)\n+  protected void setLookAndFeel(Class<?> lookAndFeel)\n   {\n     _lookAndFeel = lookAndFeel;\n   }\n@@ -223,11 +226,11 @@ protected void setColor(Color color)\n   }\n \n   private void _init(\n-    String source,\n-    Class  lookAndFeel,\n-    int    direction,\n-    Color  color,\n-    Color  surroundingColor\n+    String   source,\n+    Class<?> lookAndFeel,\n+    int      direction,\n+    Color    color,\n+    Color    surroundingColor\n     )\n   {\n     _lookAndFeel = lookAndFeel;\n@@ -248,7 +251,7 @@ private void _init(\n   private int         _direction;\n   private Color       _color;\n   private Color       _surroundingColor;\n-  private Class       _lookAndFeel;\n+  private Class<?>    _lookAndFeel;\n \n   // The size for the render properties ArrayMap.  We leave room for\n   // the SOURCE_INPUT_STREAM_PROVIDER_KEY property, typically provided", "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/BaseColorizedIconKey.java"}, {"additions": 11, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/Cache.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/Cache.java", "sha": "fb5d1f57af9d00583df7577b12eb10f32fdbbb97", "changes": 17, "status": "modified", "deletions": 6, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/Cache.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add", "patch": "@@ -37,11 +37,12 @@\n {\n   public Cache()\n   {\n+    _cache = new OptimisticHashMap<Object, CacheEntry>(_CACHE_SIZE);\n   }\n \n   public CacheEntry get(ImageContext context, Object key)\n   {\n-    CacheEntry entry = (CacheEntry)_cache.get(key);\n+    CacheEntry entry = _cache.get(key);\n     if (entry == null)\n       return null;\n \n@@ -81,7 +82,7 @@ public void put(ImageContext context, Object key, CacheEntry entry)\n     {\n       // First check to see if we have already got an entry -\n       // perhaps for some other encoding\n-      CacheEntry topEntry = (CacheEntry)_cache.get(key);\n+      CacheEntry topEntry = _cache.get(key);\n       if (topEntry == null)\n       {\n         _cache.put(key, entry);\n@@ -123,7 +124,7 @@ public void remove(\n   {\n     synchronized (_cache)\n     {\n-      CacheEntry topEntry = (CacheEntry)_cache.get(key);\n+      CacheEntry topEntry = _cache.get(key);\n \n       if (topEntry == entry)\n       {\n@@ -258,7 +259,7 @@ private char _getValidCharacter(char c)\n       return 0x5f;\n \n     // Convert to hexidecimal string\n-    String hex = Integer.toHexString((int)c);\n+    String hex = Integer.toHexString(c);\n \n     // To keep names short, just pick off the last character - it's the\n     // most variable digit.\n@@ -311,13 +312,17 @@ private static boolean _isMissRetryEntry(CacheEntry entry)\n   }\n \n   // Hashtable of CacheKeys to CacheEntrys\n-  private OptimisticHashMap _cache = new OptimisticHashMap(_CACHE_SIZE);\n+  private OptimisticHashMap<Object, CacheEntry> _cache;\n \n   // List of base names.\n   // =-=ags We use a Hashtable so that lookups are quick.  However,\n   // this probably should just be a sorted list and do a binary\n   // search, since we don't care about the value, just the key.\n-  private Hashtable _names = new Hashtable(_NAMES_SIZE);\n+  // -= Simon Lessard =-\n+  // FIXME: Hashtale is synchronized (thus slow). If thread safety is not \n+  //        required, HashMap would be better,\n+  private Hashtable<String, Boolean> _names = \n+    new Hashtable<String, Boolean>(_NAMES_SIZE);\n \n   private static final int _CACHE_SIZE = 101;\n ", "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/Cache.java"}, {"additions": 2, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/CacheEntry.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/CacheEntry.java", "sha": "0cb97a6f6e0c914c8beeeab333a5ab7e43b26b06", "changes": 3, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/CacheEntry.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add", "patch": "@@ -22,6 +22,7 @@\n import org.apache.myfaces.trinidadinternal.image.ImageProviderResponse;\n \n import org.apache.myfaces.trinidadinternal.image.encode.ImageEncoderManager;\n+import org.apache.myfaces.trinidadinternal.image.util.MapArea;\n \n /** \n  * Cache entry data structure\n@@ -84,7 +85,7 @@ public String getEncoding()\n     return _encoding;\n   }\n \n-  public Collection getMapAreas()\n+  public Collection<MapArea> getMapAreas()\n   {\n     return null;\n   }", "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/CacheEntry.java"}, {"additions": 1, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/CacheKeyFactory.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/CacheKeyFactory.java", "sha": "8efb4c7aea54191626af383ac8811f9b855db4bb", "changes": 2, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/CacheKeyFactory.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add", "patch": "@@ -45,6 +45,6 @@\n    * @param context The image context\n    * @param property The dictionary of requested image properties\n    */\n-  public Object getCacheKey(ImageContext context, Map properties);\n+  public Object getCacheKey(ImageContext context, Map<Object, Object> properties);\n }\n ", "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/CacheKeyFactory.java"}, {"additions": 8, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/CacheUtils.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/CacheUtils.java", "sha": "d06cdc144bb3ba8338f00ddf431cafe11db0c514", "changes": 16, "status": "modified", "deletions": 8, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/CacheUtils.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add", "patch": "@@ -50,7 +50,7 @@ private CacheUtils() {}\n \n   public static int getReadingDirection(\n     ImageContext context,\n-    Map properties\n+    Map<Object, Object> properties\n     )\n   {\n     LocaleContext localeContext = context.getLocaleContext();\n@@ -75,7 +75,7 @@ public static int getReadingDirection(\n \n   // Gets a Boolean value\n   public static boolean getBoolean(\n-    Map properties,\n+    Map<Object, Object> properties,\n     Object key,\n     boolean defaultValue\n     )\n@@ -89,7 +89,7 @@ public static boolean getBoolean(\n \n   // Puts a Boolean value into a dictionary\n   public static void putBoolean(\n-    Map properties,\n+    Map<Object, Object> properties,\n     Object key,\n     boolean value\n     )\n@@ -98,7 +98,7 @@ public static void putBoolean(\n   }\n \n   // Tests for TEXT_ANTIALIAS_KEY\n-  public static boolean isTextAntialiased(Map properties)\n+  public static boolean isTextAntialiased(Map<Object, Object> properties)\n   {\n     return getBoolean(properties, ImageConstants.TEXT_ANTIALIAS_KEY, false);\n   }\n@@ -123,7 +123,7 @@ public static FontProxy getSharedFont(FontProxy font)\n     if (font == null)\n       return null;\n \n-    FontProxy sharedFont = (FontProxy)_sFontProxyCache.get(font);\n+    FontProxy sharedFont = _sFontProxyCache.get(font);\n     if (sharedFont != null)\n       return sharedFont;\n \n@@ -141,7 +141,7 @@ public static FontProxy getSharedFont(FontProxy font)\n    * Convenience method for getting a shared FontProxy for a font\n    * specified in a properties dictionary.\n    */\n-  public static FontProxy getSharedFont(Map properties, Object key)\n+  public static FontProxy getSharedFont(Map<Object, Object> properties, Object key)\n   {\n     return getSharedFont((FontProxy)properties.get(key));\n   }\n@@ -167,8 +167,8 @@ public static String base64Encode(int value)\n     return buffer.toString();\n   }\n \n-  private static final Map _sFontProxyCache = \n-    Collections.synchronizedMap(new LRUCache(50));\n+  private static final Map<FontProxy, FontProxy> _sFontProxyCache = \n+    Collections.synchronizedMap(new LRUCache<FontProxy, FontProxy>(50));\n \n   // Characters for base 64 encodings\n   private static final char[] _BASE_64_CHARS =", "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/CacheUtils.java"}, {"additions": 1, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/ColorizedIconKeyFactory.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/ColorizedIconKeyFactory.java", "sha": "5aedd30ca6af69ff85cac09aba297ee606a126ac", "changes": 2, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/ColorizedIconKeyFactory.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add", "patch": "@@ -32,7 +32,7 @@\n   /**\n    * Implementation of CacheKeyFactory.getCacheKey().\n    */\n-  public Object getCacheKey(ImageContext context, Map properties)\n+  public Object getCacheKey(ImageContext context, Map<Object, Object> properties)\n   {\n     if (properties.get(ImageConstants.DARK_COLOR_KEY) != null)\n       return new CoreColorizedIconKey(context, properties);", "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/ColorizedIconKeyFactory.java"}, {"additions": 1, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/ColorizedIconNameProvider.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/ColorizedIconNameProvider.java", "sha": "24d6cd622d2f62ee9c7b4aede43146f8b65fa9e7", "changes": 2, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/ColorizedIconNameProvider.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add", "patch": "@@ -32,7 +32,7 @@\n  */\n public class ColorizedIconNameProvider implements NameProvider\n {\n-  public String getName(ImageContext context, Map properties)\n+  public String getName(ImageContext context, Map<Object, Object> properties)\n   {\n     String name = (String)properties.get(ImageConstants.NAME_KEY);\n ", "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/ColorizedIconNameProvider.java"}, {"additions": 13, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/CompositeButtonKey.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/CompositeButtonKey.java", "sha": "d25a76804c0b4a58d2e8e9923b3aa1914dbf678f", "changes": 23, "status": "modified", "deletions": 10, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/CompositeButtonKey.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add", "patch": "@@ -46,7 +46,7 @@\n    */\n   public CompositeButtonKey(\n     ImageContext context,\n-    Map properties\n+    Map<Object, Object> properties\n     )\n   {\n     String lookAndFeelId = (String)properties.get(LOOK_AND_FEEL_ID_KEY);\n@@ -144,6 +144,7 @@ public String getLocalName()\n   /**\n    * Override of Object.equals().\n    */\n+  @Override\n   public boolean equals(Object o)\n   {\n     if (this == o)\n@@ -172,6 +173,7 @@ public boolean equals(Object o)\n   /**\n    * Override of Object.hashCode().\n    */\n+  @Override\n   public int hashCode()\n   {\n     // In order to implement font name wildcarding, we don't hash on font\n@@ -197,9 +199,9 @@ public int hashCode()\n   /**\n    * Implementation of ImageProviderRequest.getRenderProperties().\n    */\n-  public Map getRenderProperties(ImageContext context)\n+  public Map<Object, Object> getRenderProperties(ImageContext context)\n   {\n-    ArrayMap properties = new ArrayMap(_MAP_SIZE);\n+    ArrayMap<Object, Object> properties = new ArrayMap<Object, Object>(_MAP_SIZE);\n     properties.put(LOOK_AND_FEEL_ID_KEY, _lookAndFeelId);\n     properties.put(NAME_KEY, _name);\n     properties.put(TEXT_KEY, _text);\n@@ -251,6 +253,7 @@ protected InputStreamProvider getBottomBackgroundIcon()\n     return null;\n   }\n \n+  @Override\n   public String toString()\n   {\n     String propertiesString =\n@@ -398,7 +401,7 @@ private void _init(\n   }\n \n   private char _getChar(\n-    Map properties,\n+    Map<Object, Object> properties,\n     Object key\n     )\n   {\n@@ -410,7 +413,7 @@ private char _getChar(\n   }\n \n   private void _putChar(\n-    Map properties,\n+    Map<Object, Object> properties,\n     Object key,\n     char value\n     )\n@@ -482,15 +485,15 @@ private boolean _fontEquals(FontProxy font)\n   // Returns the InputStreamProvider for the icon with\n   // the specific key.\n   private InputStreamProvider _getIcon(\n-    Map properties,\n+    Map<Object, Object> properties,\n     Object     iconKey\n     )\n   {\n     return (InputStreamProvider)properties.get(iconKey);\n   }\n \n   // Put the start icon in the specified properties dictionary\n-  private void _putStartIcon(Map properties)\n+  private void _putStartIcon(Map<Object, Object> properties)\n   {\n     if (_startIcon == null)\n       _startIcon = getStartIcon();\n@@ -500,7 +503,7 @@ private void _putStartIcon(Map properties)\n   }\n \n   // Put the end icon in the specified properties dictionary\n-  private void _putEndIcon(Map properties)\n+  private void _putEndIcon(Map<Object, Object> properties)\n   {\n     if (_endIcon == null)\n       _endIcon = getEndIcon();\n@@ -510,7 +513,7 @@ private void _putEndIcon(Map properties)\n   }\n \n   // Put the top background icon in the specified properties dictionary\n-  private void _putTopBackgroundIcon(Map properties)\n+  private void _putTopBackgroundIcon(Map<Object, Object> properties)\n   {\n     if (_topBackgroundIcon == null)\n       _topBackgroundIcon = getTopBackgroundIcon();\n@@ -520,7 +523,7 @@ private void _putTopBackgroundIcon(Map properties)\n   }\n \n   // Put the bottom background icon in the specified properties dictionary\n-  private void _putBottomBackgroundIcon(Map properties)\n+  private void _putBottomBackgroundIcon(Map<Object, Object> properties)\n   {\n     if (_bottomBackgroundIcon == null)\n       _bottomBackgroundIcon = getBottomBackgroundIcon();", "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/CompositeButtonKey.java"}, {"additions": 1, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/CompositeButtonKeyFactory.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/CompositeButtonKeyFactory.java", "sha": "181184a5b76cdbde62ba10fcdcf48421c12444d7", "changes": 2, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/CompositeButtonKeyFactory.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add", "patch": "@@ -31,7 +31,7 @@\n   /**\n    * Implementation of CacheKeyFactory.getCacheKey().\n    */\n-  public Object getCacheKey(ImageContext context, Map properties)\n+  public Object getCacheKey(ImageContext context, Map<Object, Object> properties)\n   {\n     return new CompositeButtonKey(context, properties);\n   }", "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/CompositeButtonKeyFactory.java"}, {"additions": 4, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/CompositeButtonNameProvider.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/CompositeButtonNameProvider.java", "sha": "62260e872b6466f79c76b3d004cecda64a885d60", "changes": 6, "status": "modified", "deletions": 2, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/CompositeButtonNameProvider.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add", "patch": "@@ -30,7 +30,9 @@\n public class CompositeButtonNameProvider\n   implements NameProvider, ImageConstants\n {\n-  public String getName(ImageContext context, Map requestedProperties)\n+  public String getName(\n+      ImageContext context, \n+      Map<Object, Object> requestedProperties)\n   {\n     String name = (String)requestedProperties.get(ImageConstants.NAME_KEY);\n \n@@ -65,7 +67,7 @@ public String getName(ImageContext context, Map requestedProperties)\n   // Produces a hash code based on the requested properties\n   private int _hashCode(\n     ImageContext context,\n-    Map properties\n+    Map<Object, Object> properties\n     )\n   {\n     Object text = properties.get(TEXT_KEY);", "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/CompositeButtonNameProvider.java"}, {"additions": 10, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/CompositeButtonPropertiesFilter.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/CompositeButtonPropertiesFilter.java", "sha": "d813e3839223be115a76084bc34f9107d3359cab", "changes": 19, "status": "modified", "deletions": 9, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/CompositeButtonPropertiesFilter.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add", "patch": "@@ -37,9 +37,9 @@\n   /**\n    * Implementation of PropertiesFilter.filterProperties()\n    */\n-  public Map filterProperties(\n+  public Map<Object, Object> filterProperties(\n     ImageContext context,\n-    Map properties\n+    Map<Object, Object> properties\n     )\n   {\n     return new Defaults(context, properties);\n@@ -50,19 +50,20 @@ public Map filterProperties(\n    * WrappingMap which provides default values for\n    * missing properties.\n    */\n-  static private class Defaults extends WrappingMap\n+  static private class Defaults extends WrappingMap<Object, Object>\n     implements ImageConstants\n   {\n     public Defaults(\n       ImageContext context,\n-      Map   properties\n+      Map<Object, Object> properties\n       )\n     {\n       super(properties);\n \n       _context = context;\n     }\n \n+    @Override\n     public Object get(Object key)\n     {\n       Object value = super.get(key);\n@@ -90,7 +91,7 @@ public Object get(Object key)\n         return value;\n       }\n \n-      Map properties = getWrappedMap();\n+      Map<Object, Object> properties = getWrappedMap();\n \n       if (key.equals(ImageConstants.FOREGROUND_KEY))\n         return _getDefaultForeground(properties);\n@@ -104,20 +105,20 @@ public Object get(Object key)\n       return null;\n     }\n \n-    private Color _getDefaultForeground(Map properties)\n+    private Color _getDefaultForeground(Map<Object, Object> properties)\n     {\n       return ButtonPainter.getDefaultForeground(_context,\n                                                 _isDisabled(properties));\n     }\n \n-    private Color _getDefaultBackground(Map properties)\n+    private Color _getDefaultBackground(Map<Object, Object> properties)\n     {\n       return ButtonPainter.getDefaultBackground(_context,\n                                                 _isDisabled(properties));\n     }\n \n \n-    private boolean _isDisabled(Map properties)\n+    private boolean _isDisabled(Map<Object, Object> properties)\n     {\n       Boolean disabled = (Boolean)properties.get(DISABLED_KEY);\n \n@@ -127,7 +128,7 @@ private boolean _isDisabled(Map properties)\n       return disabled.booleanValue();\n     }\n \n-    private Color _getDefaultBorderColor(Map properties)\n+    private Color _getDefaultBorderColor(Map<Object, Object> properties)\n     {\n       return ButtonPainter.getDefaultBorderColor(_context,\n                                                  _isDisabled(properties));", "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/CompositeButtonPropertiesFilter.java"}, {"additions": 4, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/CoreColorizedIconKey.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/CoreColorizedIconKey.java", "sha": "07e47cf7e46f55ae4697b6cd99793663b8ee7074", "changes": 6, "status": "modified", "deletions": 2, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/CoreColorizedIconKey.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add", "patch": "@@ -36,7 +36,7 @@\n    */\n   public CoreColorizedIconKey(\n     ImageContext context,\n-    Map properties\n+    Map<Object, Object> properties\n     )\n   {\n     super(context, properties);\n@@ -48,7 +48,7 @@ public CoreColorizedIconKey(\n   protected CoreColorizedIconKey(\n     ImageContext context,\n     String source,\n-    Class  lookAndFeel,\n+    Class<?> lookAndFeel,\n     int    direction,\n     Color  color,\n     Color  surroundingColor)\n@@ -61,6 +61,7 @@ protected CoreColorizedIconKey(\n    * @deprecated in favor of\n    * {@link #CoreColorizedIconKey( ImageContext, String, Class, int, Color, Color)}\n    */\n+  @Deprecated\n   protected CoreColorizedIconKey(\n     ImageContext context,\n     String source,\n@@ -75,6 +76,7 @@ protected CoreColorizedIconKey(\n    * Returns the color key for core colorized icons:\n    * ImageConstants.DARK_COLOR_KEY.\n    */\n+  @Override\n   public Object getColorKey()\n   {\n     return ImageConstants.DARK_COLOR_KEY;", "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/CoreColorizedIconKey.java"}, {"additions": 49, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/FileSystemImageCache.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/FileSystemImageCache.java", "sha": "6e0e25ca888969c0afa2820cc8c1af9c40a1bf07", "changes": 83, "status": "modified", "deletions": 34, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/FileSystemImageCache.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add", "patch": "@@ -104,7 +104,7 @@ public static ImageProvider getSharedCache(\n     // fail due to insignificant path incosistencies.\n     realPath = _getCanonicalPath(realPath);\n \n-    ImageProvider cache = (ImageProvider)_sSharedCaches.get(realPath);\n+    ImageProvider cache = _sSharedCaches.get(realPath);\n \n     // If we didn't find a shared cache, create a new cache\n     // and cache it in the shared cache cache.  :-)\n@@ -118,7 +118,7 @@ public static ImageProvider getSharedCache(\n       // _sSharedCaches.\n       synchronized (_sSharedCaches)\n       {\n-        ImageProvider tmp = (ImageProvider)_sSharedCaches.get(realPath);\n+        ImageProvider tmp = _sSharedCaches.get(realPath);\n         if (tmp != null)\n         {\n           // Stick with tmp\n@@ -156,7 +156,7 @@ protected FileSystemImageCache(String realPath)\n     // Initialize our table of per-Locale caches.  Note on table size:\n     // We don't expect a single FileSystemImageCache to be serving up images\n     // for a huge number of different locales - using a small table size.\n-     _caches = new OptimisticHashMap(19);\n+     _caches = new OptimisticHashMap<String, Cache>(19);\n   }\n \n   /**\n@@ -236,7 +236,7 @@ public ImageProviderResponse getImage(\n       // may have been generated by another FileSystemImageCache instance\n       // running in a different process.  We need the request properties\n       // to do this, in order to produce the target file name.\n-      Map properties = _getFilteredProperties(context, type, request);\n+      Map<Object, Object> properties = _getFilteredProperties(context, type, request);\n \n       // If we don't have any properties, we can't render.\n       if (properties == null)\n@@ -349,7 +349,7 @@ private Cache _getCache(ImageContext context, ImageType type)\n     Cache cache = null;\n \n     if (localized)\n-      cache = (Cache)_caches.get(language);\n+      cache = _caches.get(language);\n     else\n       cache = _globalCache;\n \n@@ -379,7 +379,7 @@ private Cache _getCache(ImageContext context, ImageType type)\n       }\n       else\n       {\n-        cache = (Cache)_caches.get(language);\n+        cache = _caches.get(language);\n       }\n     }\n     else\n@@ -464,7 +464,7 @@ private CacheEntry _getImageFromFileSystem(\n     ImageType            type,\n     Cache                cache,\n     Object               key,\n-    Map           properties\n+    Map<Object, Object>  properties\n     ) throws CacheException\n   {\n     // We identify potential matches on the file system by checking\n@@ -537,7 +537,7 @@ private CacheEntry _generateImage(\n     ImageProviderRequest request,\n     Cache        cache,\n     Object       key,\n-    Map   properties\n+    Map<Object, Object> properties\n     )\n     throws CacheException\n   {\n@@ -550,7 +550,9 @@ private CacheEntry _generateImage(\n     // 1. WIDTH_RESPONSE_KEY\n     // 2. HEIGHT_RESPONSE_KEY\n     // 3. IMAGE_MAP_AREAS_RESPONSE_KEY\n-    ArrayMap responseProperties = new ArrayMap(3);\n+    ArrayMap<Object, Object> responseProperties = \n+      new ArrayMap<Object, Object>(3);\n+    \n     byte[] imageData = null;\n \n     try\n@@ -711,7 +713,7 @@ private Object _loadImage(\n     assert (type != null);\n \n       // Get the properties from the request\n-    Map properties = request.getRenderProperties(context);\n+    Map<Object, Object> properties = request.getRenderProperties(context);\n     assert (properties != null);\n \n     // Get the base name for the URI (minus the extension)\n@@ -762,8 +764,8 @@ private CacheEntry _putCachedImage(\n     Cache        cache,\n     Object       key,\n     String       name,\n-    Map   properties,\n-    Map   responseProperties\n+    Map<Object, Object> properties,\n+    Map<Object, Object> responseProperties\n     ) throws CacheException\n   {\n     // Make sure that we've got a new CacheKey.  We wouldn't want to\n@@ -860,8 +862,8 @@ private void _removeImageFromFileSystem(\n   private byte[] _renderImageLocal(\n     ImageContext context,\n     ImageType    type,\n-    Map   properties,\n-    Map   responseProperties\n+    Map<Object, Object> properties,\n+    Map<Object, Object> responseProperties\n     ) throws CacheException\n   {\n     Configuration config = context.getConfiguration();\n@@ -889,7 +891,7 @@ private void _removeImageFromFileSystem(\n     }\n \n     // Before we do any rendering check for Configuration.HEADLESS\n-    if (Boolean.TRUE.equals(config.getProperty(config.HEADLESS)) ||\n+    if (Boolean.TRUE.equals(config.getProperty(Configuration.HEADLESS)) ||\n         !GraphicsUtils.isGraphicalEnvironment())\n     {\n       // We're special casing colorized icons so that we can generate\n@@ -1006,7 +1008,7 @@ private File _writeImageFile(\n     ImageType    type,\n     String       name,\n     byte[]       data,\n-    Map   properties\n+    Map<Object, Object> properties\n     ) throws CacheException\n   {\n     // Derive the full path of the image file\n@@ -1034,8 +1036,8 @@ private File _writeImageMetadataFile(\n     ImageContext context,\n     ImageType    type,\n     String       name,\n-    Map   properties,\n-    Map   responseProperties\n+    Map<Object, Object> properties,\n+    Map<Object, Object> responseProperties\n     )\n     throws CacheException\n   {\n@@ -1094,8 +1096,8 @@ private File _writeImageMetadataFile(\n   private void _writeImageProviderRequest(\n     ImageContext context,\n     ImageType    type,\n-    Map   properties,\n-    Map   responseProperties,\n+    Map<Object, Object> properties,\n+    Map<Object, Object> responseProperties,\n     PrintWriter  writer\n     ) throws CacheException\n   {\n@@ -1204,7 +1206,7 @@ private CacheEntry _createCacheEntry(\n     ImageContext context,\n     ImageType    type,\n     String       uri,\n-    Map   properties)\n+    Map<Object, Object> properties)\n   {\n     // Get the cache entry\n     int width = _getIntSize(properties, WIDTH_RESPONSE_KEY);\n@@ -1285,7 +1287,7 @@ private CacheKeyFactory _getCacheKeyFactory(ImageType type)\n   // instance.\n   private static String _getCanonicalPath(String path)\n   {\n-    String canonicalPath = (String)_sCanonicalPaths.get(path);\n+    String canonicalPath = _sCanonicalPaths.get(path);\n     if (canonicalPath != null)\n       return canonicalPath;\n \n@@ -1310,7 +1312,7 @@ private static String _getCanonicalPath(String path)\n   private String _getFileName(\n     ImageContext context,\n     ImageType    type,\n-    Map   properties\n+    Map<Object, Object> properties\n     )\n     throws CacheException\n   {\n@@ -1331,13 +1333,13 @@ private String _getFileName(\n \n   // Returns the complete set of properties needed to render/encode\n   // the requested image\n-  private Map _getFilteredProperties(\n+  private Map<Object, Object> _getFilteredProperties(\n     ImageContext context,\n     ImageType type,\n     ImageProviderRequest request\n     )\n   {\n-    Map properties = request.getRenderProperties(context);\n+    Map<Object, Object> properties = request.getRenderProperties(context);\n     if (properties == null)\n       return null;\n \n@@ -1360,7 +1362,7 @@ private Map _getFilteredProperties(\n   // Returns the ImageEncoder to use for the requested image\n   private ImageEncoder _getImageEncoder(\n     ImageContext context,\n-    Map   properties\n+    Map<Object, Object> properties\n     ) throws CacheException\n   {\n     String encoding = _getImageEncoding(context, properties);\n@@ -1380,7 +1382,9 @@ private ImageEncoder _getImageEncoder(\n \n   // Returns the encoding to use for images generated\n   // using the specified context\n-  private String _getImageEncoding(ImageContext context, Map properties)\n+  private String _getImageEncoding(\n+      ImageContext context, \n+      Map<Object, Object> properties)\n   {\n     String encoding = (String)properties.get(ENCODING_TYPE_KEY);\n     if (encoding != null)\n@@ -1429,7 +1433,7 @@ private String _getImageEncoding(ImageContext context, Map properties)\n   // Returns the extension for the current image encoding\n   private String _getImageEncodingExtension(\n     ImageContext context,\n-    Map   properties\n+    Map<Object, Object> properties\n     ) throws CacheException\n   {\n     String encoding = _getImageEncoding(context, properties);\n@@ -1485,7 +1489,9 @@ private ImageType _getImageType(\n   }\n \n   // Returns an int from the specified Map\n-  private int _getIntSize(Map properties, Object key)\n+  private int _getIntSize(\n+      Map<Object, Object> properties, \n+      Object key)\n   {\n     Integer value = (Integer)properties.get(key);\n \n@@ -1631,8 +1637,8 @@ private boolean _isTypeLocalized(ImageType type)\n   // Reads colorized icon image data from the request properties\n   private byte[] _readColorizedIconData(\n     ImageContext context,\n-    Map   properties,\n-    Map   responseProperties\n+    Map<Object, Object> properties,\n+    Map<Object, Object> responseProperties\n     ) throws CacheException\n   {\n     // Only bother doing this if we're generating GIFs\n@@ -1728,15 +1734,19 @@ public boolean accept(File dir, String name)\n   // Hashtable containing caches (ie. Hashtables) hashed by Locale.\n   // Each cache stores mappings from PropertiesKeys to the \"base name\"\n   // of the image/metadata/map.\n-  private OptimisticHashMap _caches;\n+  private OptimisticHashMap<String, Cache> _caches;\n \n   // The locale-independent cache\n   private Cache _globalCache;\n \n   // Table of shared FileSystemImageCaches, hashed by path.\n   // Note on table size: We don't expect to have very many FileSystemCaches\n   // running in a single VM - table can be small.\n-  private static final Hashtable _sSharedCaches = new Hashtable(19);\n+  // -= Simon Lessard =-\n+  // FIXME: The code already take care of synchronization when needed it seems,\n+  //        using a HashMap should be more performant.\n+  private static final Hashtable<String, ImageProvider> _sSharedCaches = \n+    new Hashtable<String, ImageProvider>(19);\n \n   // Extension for IMX files\n   static final String __IMX_EXTENSION = \".imx\";\n@@ -1807,6 +1817,11 @@ public boolean accept(File dir, String name)\n   // Configuration property to test whether GIF support is enabled.\n   private static final String _GIF_ENABLED = \"gifEnabled\";\n \n-  private static final Hashtable _sCanonicalPaths = new Hashtable(19);\n+  // -= Simon Lessard =-\n+  // FIXME: Hashtable is synchronized and more than often inefficient\n+  //        use a HashMap instead\n+  private static final Hashtable<String, String> _sCanonicalPaths = \n+    new Hashtable<String, String>(19);\n+  \n   private static final TrinidadLogger _LOG = TrinidadLogger.createTrinidadLogger(FileSystemImageCache.class);\n }", "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/FileSystemImageCache.java"}, {"additions": 5, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/FlippedIconKey.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/FlippedIconKey.java", "sha": "4aa890788762b75737c8835fbb30a89ce338a858", "changes": 8, "status": "modified", "deletions": 3, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/FlippedIconKey.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add", "patch": "@@ -40,7 +40,7 @@\n    * and properties.\n    */\n   public FlippedIconKey(\n-    Map properties\n+    Map<Object, Object> properties\n     )\n   {\n     String source = (String)properties.get(SOURCE_KEY);\n@@ -77,6 +77,7 @@ public String getLocalName()\n   /**\n    * Override of Object.equals().\n    */\n+  @Override\n   public boolean equals(Object o)\n   {\n     // This equals implementation assumes that the same source icon name\n@@ -92,6 +93,7 @@ public boolean equals(Object o)\n   /**\n    * Override of Object.hashCode().\n    */\n+  @Override\n   public int hashCode()\n   {\n     return (_source.hashCode() );\n@@ -100,9 +102,9 @@ public int hashCode()\n   /**\n    * Implementation of ImageProviderRequest.getRenderProperties().\n    */\n-  public Map getRenderProperties(ImageContext context)\n+  public Map<Object, Object> getRenderProperties(ImageContext context)\n   {\n-    ArrayMap properties = new ArrayMap(_MAP_SIZE);\n+    ArrayMap<Object, Object> properties = new ArrayMap<Object, Object>(_MAP_SIZE);\n     properties.put(ImageConstants.SOURCE_KEY, getSource());\n \n     return properties;", "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/FlippedIconKey.java"}, {"additions": 3, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/FlippedIconKeyFactory.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/FlippedIconKeyFactory.java", "sha": "10b29c669bc83e25c98cd0f9841f5474031b1277", "changes": 4, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/FlippedIconKeyFactory.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add", "patch": "@@ -31,7 +31,9 @@\n   /**\n    * Implementation of CacheKeyFactory.getCacheKey().\n    */\n-  public Object getCacheKey(ImageContext context, Map properties)\n+  public Object getCacheKey(\n+      ImageContext context, \n+      Map<Object, Object> properties)\n   {\n     return new FlippedIconKey(properties);\n   }", "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/FlippedIconKeyFactory.java"}, {"additions": 3, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/FlippedIconNameProvider.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/FlippedIconNameProvider.java", "sha": "786cd753a5a0b7323e0feca03af9f81b0e9ad937", "changes": 4, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/FlippedIconNameProvider.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add", "patch": "@@ -32,7 +32,9 @@\n  */\n public class FlippedIconNameProvider implements NameProvider\n {\n-  public String getName(ImageContext context, Map properties)\n+  public String getName(\n+      ImageContext context, \n+      Map<Object, Object> properties)\n   {\n     String name = (String)properties.get(ImageConstants.NAME_KEY);\n ", "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/FlippedIconNameProvider.java"}, {"additions": 4, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/MapCacheEntry.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/MapCacheEntry.java", "sha": "d0337a108d9075df95ebb343856f5d44baa3246a", "changes": 6, "status": "modified", "deletions": 2, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/MapCacheEntry.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add", "patch": "@@ -30,6 +30,7 @@\n  */\n class MapCacheEntry extends CacheEntry\n {\n+  @SuppressWarnings(\"unchecked\")\n   public MapCacheEntry(\n     String uri,\n     int width,\n@@ -47,10 +48,11 @@ public MapCacheEntry(\n       _areas = Collections.unmodifiableList(Arrays.asList(areas));\n   }\n \n-  public Collection getMapAreas()\n+  @Override\n+  public Collection<MapArea> getMapAreas()\n   {\n     return _areas;\n   }\n \n-  private Collection _areas;\n+  private Collection<MapArea> _areas;\n }", "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/MapCacheEntry.java"}, {"additions": 1, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/NameProvider.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/NameProvider.java", "sha": "076435579ca1b996e2db2d6b27b6838e4e3cbc39", "changes": 2, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/NameProvider.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add", "patch": "@@ -44,5 +44,5 @@\n    * @param requestedProperties The client-provided properties which\n    *   describe the requested image.\n    */\n-  public String getName(ImageContext context, Map requestedProperties);\n+  public String getName(ImageContext context, Map<Object, Object> requestedProperties);\n }", "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/NameProvider.java"}, {"additions": 2, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/PropertiesFilter.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/PropertiesFilter.java", "sha": "546e9e14c6d119ed63591c1107239d8373513e0a", "changes": 4, "status": "modified", "deletions": 2, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/PropertiesFilter.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add", "patch": "@@ -49,8 +49,8 @@\n    * @param properties The dictionary of properties to filter\n    * @return The filtered dictionary of properties\n    */\n-  public Map filterProperties(\n+  public Map<Object, Object> filterProperties(\n     ImageContext context,\n-    Map properties\n+    Map<Object, Object> properties\n     );\n }", "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/PropertiesFilter.java"}, {"additions": 2, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/SourceCheckingCacheEntry.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/SourceCheckingCacheEntry.java", "sha": "d719c6c757805b92b149f03c593df83466ab3529", "changes": 3, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/SourceCheckingCacheEntry.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add", "patch": "@@ -48,6 +48,7 @@ public SourceCheckingCacheEntry(\n     super(uri, width, height, encoding);\n   }\n \n+  @Override\n   public boolean isValid(\n     ImageContext context,\n     ImageProviderRequest request\n@@ -82,7 +83,7 @@ private static InputStreamProvider _getInputStreamProvider(\n     ImageProviderRequest request\n     )\n   {\n-    Map properties = request.getRenderProperties(context);\n+    Map<Object, Object> properties = request.getRenderProperties(context);\n     assert (properties != null);\n \n     InputStreamProvider provider = (InputStreamProvider)properties.get(", "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/SourceCheckingCacheEntry.java"}, {"additions": 13, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/WrappingMap.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/WrappingMap.java", "sha": "688f0521ac93a639f55ce038f93ae595cd48b231", "changes": 26, "status": "modified", "deletions": 13, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/WrappingMap.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add", "patch": "@@ -26,9 +26,9 @@\n  * @version $Name:  $ ($Revision: adfrt/faces/adf-faces-impl/src/main/java/oracle/adfinternal/view/faces/image/cache/WrappingMap.java#0 $) $Date: 10-nov-2005.19:06:16 $\n  * @author The Oracle ADF Faces Team\n  */\n-class WrappingMap implements Map\n+class WrappingMap<K, V> implements Map<K, V>\n {\n-  public WrappingMap(Map map)\n+  public WrappingMap(Map<K, V> map)\n   {\n     _wrappedMap = map;\n   }\n@@ -43,27 +43,27 @@ public boolean isEmpty()\n     return _wrappedMap.isEmpty();\n   }\n \n-  public Iterator keys()\n+  public Iterator<K> keys()\n   {\n     return _wrappedMap.keySet().iterator();\n   }\n \n-  public Set entrySet()\n+  public Set<Map.Entry<K, V>> entrySet()\n   {\n     return _wrappedMap.entrySet();\n   }\n \n-  public Set keySet()\n+  public Set<K> keySet()\n   {\n     return _wrappedMap.keySet();\n   }\n \n-  public void putAll(Map map)\n+  public void putAll(Map<? extends K, ? extends V> map)\n   {\n     throw new UnsupportedOperationException(\"putAll operation not supported for WrappingMap\");\n   }\n \n-  public Collection values()\n+  public Collection<V> values()\n   {\n     return _wrappedMap.values();\n   }\n@@ -83,30 +83,30 @@ public void clear()\n     throw new UnsupportedOperationException(\"clear operation not supported for WrappingMap\");\n   }\n \n-  public Iterator elements()\n+  public Iterator<V> elements()\n   {\n     return _wrappedMap.values().iterator();\n   }\n \n-  public Object get(Object key)\n+  public V get(Object key)\n   {\n     return _wrappedMap.get(key);\n   }\n \n-  public Object put(Object key, Object value)\n+  public V put(K key, V value)\n   {\n     return _wrappedMap.put(key, value);\n   }\n \n-  public Object remove(Object key)\n+  public V remove(Object key)\n   {\n     return _wrappedMap.remove(key);\n   }\n \n-  protected Map getWrappedMap()\n+  protected Map<K, V> getWrappedMap()\n   {\n     return _wrappedMap;\n   }\n \n-  private Map _wrappedMap;\n+  private Map<K, V> _wrappedMap;\n }", "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/cache/WrappingMap.java"}, {"additions": 1, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/encode/AlphaMultiplyFilter.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/encode/AlphaMultiplyFilter.java", "sha": "60ef53bc6648d51f3dc8a824712b4877747a1810", "changes": 1, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/encode/AlphaMultiplyFilter.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add", "patch": "@@ -45,6 +45,7 @@ public AlphaMultiplyFilter(int rgb)\n   /**\n    * Implementation of abstract method from RGBImageFilter\n    */\n+  @Override\n   public int filterRGB(int x, int y, int rgb)\n   {\n ", "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/encode/AlphaMultiplyFilter.java"}, {"additions": 11, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/encode/GifEncoder.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/encode/GifEncoder.java", "sha": "2737a58d149659b23b00e4f5e45990c9feeaa6df", "changes": 15, "status": "modified", "deletions": 4, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/encode/GifEncoder.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add", "patch": "@@ -84,7 +84,11 @@ public static void encode(Image image, OutputStream stream)\n \n     // A hashtable is used to keep track of colors already in the table\n     // max. one-color entries\n-    Hashtable hsh = new Hashtable(_MAXIMUM_COLOR_TABLE_SIZE);\n+    // -= Simon Lessard =-\n+    // FIXME: JDK 1.2 was truly evil... \n+    //        HashMap would be better\n+    Hashtable<Integer, Integer> hsh = \n+      new Hashtable<Integer, Integer>(_MAXIMUM_COLOR_TABLE_SIZE);\n \n     int colorIndex = 0;           // the code values of the colors\n     int background = 0;           // the code of the background color\n@@ -126,7 +130,7 @@ else if (_isTransparent(color))\n         // color has already been added to the color table.  We use an\n         // the Integer RGB value as our hash key\n         Integer colorKey = IntegerUtils.getInteger(color & 0x00ffffff);\n-        Integer colorIndexValue = (Integer) hsh.get(colorKey);\n+        Integer colorIndexValue = hsh.get(colorKey);\n \n         if (colorIndexValue != null)\n         {\n@@ -318,7 +322,10 @@ else if (_isTransparent(color))\n     // Float is in the form a.b where a = sqnc, and b = 1/(newcol+2).\n     // Now, we use a Integer where the top 16 bits store the sequence and\n     // the bottom 16 bits store the newcol.\n-    hsh = new Hashtable(_LARGEST_CODE); // max. compression entries\n+    // -= Simon Lessard =-\n+    // FIXME: Another line of code, another Hashtable,\n+    //        Yet again HashMap would be more efficient\n+    hsh = new Hashtable<Integer, Integer>(_LARGEST_CODE); // max. compression entries\n \n     int code = (1<< codeSize)+2; // where code values start\n     int clearCode = (code++)-2; // special codes\n@@ -361,7 +368,7 @@ else if (_isTransparent(color))\n       if (sqnc > 0)\n       {\n         fsqnc_newcol = IntegerUtils.getInteger(sqnc_newcol);\n-        Integer sqnc_newcol_code = (Integer) hsh.get(fsqnc_newcol);\n+        Integer sqnc_newcol_code = hsh.get(fsqnc_newcol);\n         if (sqnc_newcol_code == null)\n         {\n           // string not in table.", "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/encode/GifEncoder.java"}, {"additions": 3, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/encode/ImageEncoderManager.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/encode/ImageEncoderManager.java", "sha": "3b62499e0252d9265010da226cae3d4625ba0f9e", "changes": 6, "status": "modified", "deletions": 3, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/encode/ImageEncoderManager.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add", "patch": "@@ -81,7 +81,7 @@ public ImageEncoder getImageEncoder(String type)\n    */\n   public String getImageExtension(String type)\n   {\n-    return (String)_extensions.get(type);\n+    return _extensions.get(type);\n   }\n \n   /**\n@@ -156,10 +156,10 @@ static private void _registerDefaultEncodings(ImageEncoderManager manager)\n   }\n \n   // Maps mime type to ImageEncoder objects\n-  private ArrayMap _encoders = new ArrayMap();\n+  private ArrayMap<String, Object> _encoders = new ArrayMap<String, Object>();\n \n   // Maps mime type to extension\n-  private ArrayMap _extensions = new ArrayMap();\n+  private ArrayMap<String, String> _extensions = new ArrayMap<String, String>();\n \n   static private ImageEncoderManager _sDefaultInstance = \n     new ImageEncoderManager();", "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/encode/ImageEncoderManager.java"}, {"additions": 1, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/encode/OctreeFilter.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/encode/OctreeFilter.java", "sha": "1629c9e9d012d29ebb72f7f2501dfcc623514015", "changes": 1, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/encode/OctreeFilter.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add", "patch": "@@ -44,6 +44,7 @@ public OctreeFilter(Image im)\n   /**\n    * Implementation of abstract method from RGBImageFilter\n    */\n+  @Override\n   public int filterRGB(int x, int y, int rgb)\n   {\n     return _tree.mapColor(rgb);", "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/encode/OctreeFilter.java"}, {"additions": 3, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/encode/OctreeNode.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/encode/OctreeNode.java", "sha": "a135711fb9a836be6e8ff47654803ffe4f2aa421", "changes": 3, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/encode/OctreeNode.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add", "patch": "@@ -212,6 +212,9 @@ private int _setColorVals(int rgb, boolean isNew)\n   private int _children;  // how many leaves are filled\n   private OctreeNode[] _leaf; // 8 children of node\n   private int _pixels; // how many pixels have passed through this node\n+  // -= Simon Lessard =-\n+  // FIXME: Never read locally\n+  @SuppressWarnings(\"unused\")\n   private OctreeNode _parent; // parent node in tree\n   private int _level; // where does this node lie in the tree?\n   private OctreeNode _next; // next node at this level", "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/encode/OctreeNode.java"}, {"additions": 11, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/encode/PNGEncoder.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/encode/PNGEncoder.java", "sha": "62551e12fad0158b4d24d2d32a374f1d7b38f902", "changes": 20, "status": "modified", "deletions": 9, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/encode/PNGEncoder.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add", "patch": "@@ -86,7 +86,9 @@ public static void encode(Image image, OutputStream out)\n                                          \" x \"+height+\" image.\");\n     }\n \n-    Hashtable colors = new Hashtable();\n+    // -= Simon Lessard =-\n+    // FIXME: HashMap please if synchronization is not required...\n+    Hashtable<Color, Integer> colors = new Hashtable<Color, Integer>();\n     int   count = 0;\n     Color lastColor = null;\n     // Use -2 instead of -1 for last pixel because -1 is tranparent white\n@@ -154,7 +156,7 @@ private static void _writePaletteImage(\n     int          width,\n     int          height,\n     int[]        pixels,\n-    Map   colors,\n+    Map<Color, Integer> colors,\n     boolean      transparent,\n     OutputStream out\n     ) throws IOException\n@@ -276,20 +278,20 @@ private static void _writeHeader(\n \n   // Write out the PLTE chunk\n   private static void _writePalette(\n-    Map colors,\n+    Map<Color, Integer> colors,\n     OutputStream out\n     ) throws IOException\n   {\n     // Convert the colors Map into the palette data, sorted by index\n     int count = colors.size();\n     byte[] data = new byte[count * 3];\n \n-    Iterator e = colors.keySet().iterator();\n+    Iterator<Color> e = colors.keySet().iterator();\n \n     while (e.hasNext())\n     {\n-      Color color = (Color)e.next();\n-      int index = (((Integer)colors.get(color)).intValue() * 3);\n+      Color color = e.next();\n+      int index = colors.get(color).intValue() * 3;\n \n       int rgb = color.getRGB();\n       data[index]     = _getRed(rgb);\n@@ -388,7 +390,7 @@ private static long _getCRC(int type, byte[] data)\n     int        height,\n     int        depth,\n     int[]      pixels,\n-    Map colors\n+    Map<Color, Integer> colors\n     )\n   {\n // =-=ags At the moment we only support 8-bit pixel depths\n@@ -431,7 +433,7 @@ private static long _getCRC(int type, byte[] data)\n     int        width,\n     int        height,\n     int[]      pixels,\n-    Map colors\n+    Map<Color, Integer> colors\n     )\n   {\n     // Convert pixels to an array of palette indices.  Each scanline\n@@ -461,7 +463,7 @@ private static long _getCRC(int type, byte[] data)\n         else\n           color = _createColor(pixel);\n \n-        int index = ((Integer)colors.get(color)).intValue();\n+        int index = colors.get(color).intValue();\n \n         data[targetLine + j + 1] = (byte)index;\n ", "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/encode/PNGEncoder.java"}, {"additions": 21, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/laf/browser/ButtonImageRenderer.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/laf/browser/ButtonImageRenderer.java", "sha": "dd7bd93f815249de9e5e758704ebe09d0592460b", "changes": 30, "status": "modified", "deletions": 9, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/laf/browser/ButtonImageRenderer.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add", "patch": "@@ -58,9 +58,10 @@ public ButtonImageRenderer()\n     super(new ButtonPainter());\n   }\n \n+  @Override\n   protected Painter getPainter(\n     ImageContext imageContext,\n-    Map requestedProperties\n+    Map<Object, Object> requestedProperties\n     )\n   {\n     // We use a special ButtonPainter for Dialog which dynamically\n@@ -87,9 +88,10 @@ protected Painter getPainter(\n     return super.getPainter(imageContext, requestedProperties);\n   }\n \n+  @Override\n   protected boolean isRenderable(\n       ImageContext imageContext,\n-      Map requestedProperties\n+      Map<Object, Object> requestedProperties\n       )\n   {\n     if (!super.isRenderable(imageContext, requestedProperties))\n@@ -98,11 +100,12 @@ protected boolean isRenderable(\n     return GraphicsUtils.isFontName(_getFontName(requestedProperties));\n   }\n \n+  @Override\n   protected PaintContext createPaintContext(\n     ImageContext imageContext,\n     BufferedImage image,\n-    Map requestedProperties,\n-    Map responseProperties\n+    Map<Object, Object> requestedProperties,\n+    Map<Object, Object> responseProperties\n     )\n   {\n     return new ProxyContext(super.createPaintContext(imageContext,\n@@ -115,7 +118,10 @@ protected PaintContext createPaintContext(\n    * Returns the foreground color to use when painting an image\n    * with the specified dictionary.\n    */\n-  protected Color getPaintForeground(ImageContext context, Map d)\n+  @Override\n+  protected Color getPaintForeground(\n+      ImageContext context, \n+      Map<Object, Object> d)\n   {\n     Color foreground = super.getPaintForeground(context, d);\n \n@@ -129,7 +135,10 @@ protected Color getPaintForeground(ImageContext context, Map d)\n    * Returns the background color to use when painting an image\n    * with the specified dictionary.\n    */\n-  protected Color getPaintBackground(ImageContext context, Map d)\n+  @Override\n+  protected Color getPaintBackground(\n+      ImageContext context, \n+      Map<Object, Object> d)\n   {\n     Color background = super.getPaintBackground(context, d);\n \n@@ -143,7 +152,8 @@ protected Color getPaintBackground(ImageContext context, Map d)\n    * Returns the font color to use when painting an image\n    * with the specified dictionary.\n    */\n-  protected Font getPaintFont(Map d)\n+  @Override\n+  protected Font getPaintFont(Map<Object, Object> d)\n   {\n     Font font = super.getPaintFont(d);\n \n@@ -153,7 +163,7 @@ protected Font getPaintFont(Map d)\n     return ButtonPainter.getDefaultFont().getFont();\n   }\n \n-  private String _getFontName(Map requestedProperties)\n+  private String _getFontName(Map<Object, Object> requestedProperties)\n   {\n     // Make sure we've got a valid font\n     Object o = requestedProperties.get(FONT_KEY);\n@@ -166,7 +176,7 @@ else if (o instanceof Font)\n     return name;\n   }\n \n-  private boolean _isDisabled(Map properties)\n+  private boolean _isDisabled(Map<Object, Object> properties)\n   {\n     Boolean disabled = (Boolean)properties.get(DISABLED_KEY);\n \n@@ -183,6 +193,7 @@ public ProxyContext(PaintContext context)\n       _context = context;\n     }\n \n+    @Override\n     public Object getPaintData(Object key)\n     {\n       Object o = super.getPaintData(key);\n@@ -204,6 +215,7 @@ public Object getPaintData(Object key)\n       return null;\n     }\n \n+    @Override\n     protected PaintContext getPaintContext()\n     {\n       return _context;", "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/laf/browser/ButtonImageRenderer.java"}, {"additions": 4, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/laf/browser/ButtonPainter.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/laf/browser/ButtonPainter.java", "sha": "f713bd9d3f2f921c5f9ec8a83ca9df4ca1d8c7b9", "changes": 5, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/laf/browser/ButtonPainter.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add", "patch": "@@ -139,6 +139,7 @@ public static Color getDefaultBorderColor(\n   /**\n    * Returns the insets of just the ButtonPainter.\n    */\n+  @Override\n   protected ImmInsets getOwnInsets(PaintContext context)\n   {\n     int start  = _START;\n@@ -168,6 +169,7 @@ protected ImmInsets getOwnInsets(PaintContext context)\n   /**\n    * Paint just the border of the ButtonPainter.\n    */\n+  @Override\n   protected void paintBorder(\n     PaintContext context,\n     Graphics g,\n@@ -563,7 +565,7 @@ private int _getCurveWidth(int height)\n   {\n     // The curve width is about 3/4 of the height\n \n-    return (int)(((float)height) * 0.75);\n+    return (int)(height * 0.75);\n \n   }\n \n@@ -608,6 +610,7 @@ public DisabledColorChange(Painter wrappedPainter)\n       super(wrappedPainter);\n     }\n \n+    @Override\n     protected Color getColor(PaintContext context)\n     {\n       // If the foreground is explicitly set, just use it", "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/laf/browser/ButtonPainter.java"}, {"additions": 4, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/laf/browser/ColorizedIconImageRenderer.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/laf/browser/ColorizedIconImageRenderer.java", "sha": "aa0e6867f5149d6eab3a62776cb12b8d4ef97ad7", "changes": 7, "status": "modified", "deletions": 3, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/laf/browser/ColorizedIconImageRenderer.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add", "patch": "@@ -51,8 +51,8 @@\n    */\n   public Image renderImage(\n     ImageContext context,\n-    Map requestedProperties,\n-    Map responseProperties\n+    Map<Object, Object> requestedProperties,\n+    Map<Object, Object> responseProperties\n     )\n   {\n     // Make sure we've got a graphical environment before we try rendering.\n@@ -152,7 +152,7 @@ private boolean _isRightToLeft(\n   // Returns the target colors for a colorization based on the\n   // specified context\n   private static int[] _getTargetColors(\n-    Map           properties\n+    Map<Object, Object> properties\n     )\n   {\n     // We derive the colors for the two color ramps based on the\n@@ -219,6 +219,7 @@ public ColorizingFilter(int[] sourceColors, int[] targetColors)\n       canFilterIndexColorModel = true;\n     }\n \n+    @Override\n     public int filterRGB(int x, int y, int rgb)\n     {\n       // First, see if we can short circuit", "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/laf/browser/ColorizedIconImageRenderer.java"}, {"additions": 20, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/laf/browser/CompositeButtonImageRenderer.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/laf/browser/CompositeButtonImageRenderer.java", "sha": "a9e089c8b01a0666f7af52f84c46e5e9831fb77b", "changes": 28, "status": "modified", "deletions": 8, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/laf/browser/CompositeButtonImageRenderer.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add", "patch": "@@ -57,9 +57,10 @@ public CompositeButtonImageRenderer()\n     super(new CompositeButtonPainter());\n   }\n \n+  @Override\n   protected boolean isRenderable(\n       ImageContext imageContext,\n-      Map requestedProperties\n+      Map<Object, Object> requestedProperties\n       )\n   {\n     if (!super.isRenderable(imageContext, requestedProperties))\n@@ -68,11 +69,12 @@ protected boolean isRenderable(\n     return GraphicsUtils.isFontName(_getFontName(requestedProperties));\n   }\n \n+  @Override\n   protected PaintContext createPaintContext(\n     ImageContext imageContext,\n     BufferedImage image,\n-    Map requestedProperties,\n-    Map responseProperties\n+    Map<Object, Object> requestedProperties,\n+    Map<Object, Object> responseProperties\n     )\n   {\n     Image startImage = SourceUtils.getSourceIcon(imageContext,\n@@ -102,6 +104,7 @@ protected PaintContext createPaintContext(\n                             bottomBackgroundImage);\n   }\n \n+  @Override\n   protected void disposePaintContext(PaintContext context)\n   {\n     if (context instanceof ProxyContext)\n@@ -112,7 +115,10 @@ protected void disposePaintContext(PaintContext context)\n    * Returns the foreground color to use when painting an image\n    * with the specified dictionary.\n    */\n-  protected Color getPaintForeground(ImageContext context, Map d)\n+  @Override\n+  protected Color getPaintForeground(\n+      ImageContext context, \n+      Map<Object, Object> d)\n   {\n     Color foreground = super.getPaintForeground(context, d);\n \n@@ -126,7 +132,10 @@ protected Color getPaintForeground(ImageContext context, Map d)\n    * Returns the background color to use when painting an image\n    * with the specified dictionary.\n    */\n-  protected Color getPaintBackground(ImageContext context, Map d)\n+  @Override\n+  protected Color getPaintBackground(\n+      ImageContext context, \n+      Map<Object, Object> d)\n   {\n     Color background = super.getPaintBackground(context, d);\n \n@@ -140,7 +149,8 @@ protected Color getPaintBackground(ImageContext context, Map d)\n    * Returns the font color to use when painting an image\n    * with the specified dictionary.\n    */\n-  protected Font getPaintFont(Map d)\n+  @Override\n+  protected Font getPaintFont(Map<Object, Object> d)\n   {\n     Font font = super.getPaintFont(d);\n \n@@ -150,7 +160,7 @@ protected Font getPaintFont(Map d)\n     return ButtonPainter.getDefaultFont().getFont();\n   }\n \n-  private String _getFontName(Map requestedProperties)\n+  private String _getFontName(Map<Object, Object> requestedProperties)\n   {\n     // Make sure we've got a valid font\n     Object o = requestedProperties.get(FONT_KEY);\n@@ -163,7 +173,7 @@ else if (o instanceof Font)\n     return name;\n   }\n \n-  private boolean _isDisabled(Map properties)\n+  private boolean _isDisabled(Map<Object, Object> properties)\n   {\n     Boolean disabled = (Boolean)properties.get(DISABLED_KEY);\n \n@@ -190,6 +200,7 @@ public ProxyContext(\n       _bottomBackgroundImage = bottomBackgroundImage;\n     }\n \n+    @Override\n     public Object getPaintData(Object key)\n     {\n       Object o = super.getPaintData(key);\n@@ -238,6 +249,7 @@ public void flush()\n       }\n     }\n \n+    @Override\n     protected PaintContext getPaintContext()\n     {\n       return _context;", "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/laf/browser/CompositeButtonImageRenderer.java"}, {"additions": 3, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/laf/browser/CompositeButtonPainter.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/laf/browser/CompositeButtonPainter.java", "sha": "59bb955e3f55c64ec2a2e0c5247857d9b1a9a8b5", "changes": 3, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/laf/browser/CompositeButtonPainter.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add", "patch": "@@ -78,6 +78,7 @@ public CompositeButtonPainter()\n         ));\n   }\n \n+  @Override\n   protected ImmInsets getOwnInsets(\n     PaintContext context\n     )\n@@ -130,6 +131,7 @@ protected ImmInsets getOwnInsets(\n                          rightSize.width);\n   }\n \n+  @Override\n   protected void paintBorder(\n     PaintContext context,\n     Graphics g,\n@@ -359,6 +361,7 @@ public DisabledColorChange(Painter wrappedPainter)\n       super(wrappedPainter);\n     }\n \n+    @Override\n     protected Color getColor(PaintContext context)\n     {\n       // If the foreground is explicitly set, just use it", "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/laf/browser/CompositeButtonPainter.java"}, {"additions": 2, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/laf/browser/FlippedIconImageRenderer.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/laf/browser/FlippedIconImageRenderer.java", "sha": "25cb208bd4305aa671653529679790238007b40c", "changes": 4, "status": "modified", "deletions": 2, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/laf/browser/FlippedIconImageRenderer.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add", "patch": "@@ -51,8 +51,8 @@\n    */\n   public Image renderImage(\n     ImageContext context,\n-    Map requestedProperties,\n-    Map responseProperties\n+    Map<Object, Object> requestedProperties,\n+    Map<Object, Object> responseProperties\n     )\n   {\n     // Make sure we've got a graphical environment before we try rendering.", "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/laf/browser/FlippedIconImageRenderer.java"}, {"additions": 4, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/laf/browser/MirrorImageFilter.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/laf/browser/MirrorImageFilter.java", "sha": "d4c8959d25cc85931a5e89833929cc63e9d54674", "changes": 4, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/laf/browser/MirrorImageFilter.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add", "patch": "@@ -27,6 +27,7 @@\n  */\n class MirrorImageFilter extends ImageFilter\n {\n+  @Override\n   public void setDimensions(int width, int height) \n   {\n     if (!_done)\n@@ -39,6 +40,7 @@ public void setDimensions(int width, int height)\n     super.setDimensions(width, height);\n   }\n \n+  @Override\n   public void setPixels(\n     int x, \n     int y, \n@@ -67,6 +69,7 @@ public void setPixels(\n     }\n   }\n \n+  @Override\n   public void setPixels(\n     int x, \n     int y, \n@@ -95,6 +98,7 @@ public void setPixels(\n     }\n   }\n \n+  @Override\n   public void imageComplete(int status) \n   {\n     int[] pixels = _pixels;", "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/laf/browser/MirrorImageFilter.java"}, {"additions": 3, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/laf/browser/SourceUtils.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/laf/browser/SourceUtils.java", "sha": "fe1d219c1a46e9c512da9590f3691c901fc4c97f", "changes": 6, "status": "modified", "deletions": 3, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/laf/browser/SourceUtils.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add", "patch": "@@ -41,7 +41,7 @@\n {\n   public static Image getSourceIcon(\n     ImageContext context,\n-    Map properties\n+    Map<Object, Object> properties\n     )\n   {\n     return getSourceIcon(context,\n@@ -54,7 +54,7 @@ public static Image getSourceIcon(\n    */\n   public static Image getSourceIcon(\n     ImageContext context,\n-    Map properties,\n+    Map<Object, Object> properties,\n     Object     key\n     )\n   {\n@@ -104,7 +104,7 @@ public static Image getSourceIcon(\n \n   // Logs a warning\n   private static void _log(\n-    Map properties,\n+    Map<Object, Object> properties,\n     String message,\n     Throwable t\n     )", "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/laf/browser/SourceUtils.java"}, {"additions": 2, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/laf/browser/UnsupportedImageRenderer.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/laf/browser/UnsupportedImageRenderer.java", "sha": "90252e359c150bc62687f9463885aa12bd2424cd", "changes": 4, "status": "modified", "deletions": 2, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/laf/browser/UnsupportedImageRenderer.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add", "patch": "@@ -63,8 +63,8 @@ static public ImageRenderer sharedInstance()\n    */\n   public Image renderImage(\n     ImageContext context,\n-    Map requestedProperties,\n-    Map responseProperties\n+    Map<Object, Object> requestedProperties,\n+    Map<Object, Object> responseProperties\n     )\n   {\n     if ((_LOG.isWarning()))", "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/laf/browser/UnsupportedImageRenderer.java"}, {"additions": 3, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/painter/AbstractBorderPainter.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/painter/AbstractBorderPainter.java", "sha": "2bdec37f332b2b713dbed63fe5b25b9624bc3963", "changes": 3, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/painter/AbstractBorderPainter.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add", "patch": "@@ -86,6 +86,7 @@ public AbstractBorderPainter(\n    * <p>\n    * @return The preferred size of the Painter.\n    */\n+  @Override\n   public Dimension getPreferredSize(\n     PaintContext context\n     )\n@@ -104,6 +105,7 @@ public Dimension getPreferredSize(\n    * <p>\n    * @return The minimum size of the Painter.\n    */\n+  @Override\n   public Dimension getMinimumSize(\n     PaintContext context\n     )\n@@ -134,6 +136,7 @@ public Dimension getMinimumSize(\n    * <p>\n    * @see #paintBorder\n    */\n+  @Override\n   public final void paint(\n     PaintContext context,\n     Graphics     g,", "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/painter/AbstractBorderPainter.java"}, {"additions": 1, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/painter/AbstractWrappingPainter.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/painter/AbstractWrappingPainter.java", "sha": "26fc5f20975ee76944130be05953dff58da0a0e4", "changes": 1, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/painter/AbstractWrappingPainter.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add", "patch": "@@ -69,6 +69,7 @@ public AbstractWrappingPainter(\n    * <p>\n    * @return The preferred size of the Painter.\n    */\n+  @Override\n   public Dimension getPreferredSize(\n     PaintContext context\n     )", "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/painter/AbstractWrappingPainter.java"}, {"additions": 1, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/painter/AdjustableBorderPainter.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/painter/AdjustableBorderPainter.java", "sha": "35d5b48cfc993ddc990e67bd09f7f1e25eabcff3", "changes": 1, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/painter/AdjustableBorderPainter.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add", "patch": "@@ -85,6 +85,7 @@ public AdjustableBorderPainter(\n    * <p>\n    * @see org.apache.myfaces.trinidadinternal.image.painter.AbstractBorderPainter#getInsets\n    */\n+  @Override\n   protected ImmInsets getOwnInsets(\n     PaintContext context\n     )", "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/painter/AdjustableBorderPainter.java"}, {"additions": 1, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/painter/ColorChange.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/painter/ColorChange.java", "sha": "c841bacb36ac52036a75781ee561bba97f708a3c", "changes": 1, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/painter/ColorChange.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add", "patch": "@@ -38,6 +38,7 @@ public ColorChange(\n   /**\n    * Paints the text at the specified coordinates.\n    */\n+  @Override\n   public void paint(\n     PaintContext context,\n     Graphics     g,", "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/painter/ColorChange.java"}, {"additions": 2, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/painter/ImageUtils.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/painter/ImageUtils.java", "sha": "94e2cb8ac9e14b1f9b3face2df19f00c33a8e5f1", "changes": 4, "status": "modified", "deletions": 2, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/painter/ImageUtils.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add", "patch": "@@ -74,7 +74,7 @@ public static Image createFilteredImage(\n    * @param cl the class used to load the resource\n    * @param name the path to the resource, relative to the class\n    */\n-  static public Image getImageResource(Class cl, String name)\n+  static public Image getImageResource(Class<?> cl, String name)\n   {\n     Image image = _getImageResource(cl, name);\n     if (image == null)\n@@ -198,7 +198,7 @@ static public boolean loadImages(Image[] images)\n    * @param cl the class used to load the resource\n    * @param name the path to the resource, relative to the class\n    */\n-  static private Image _getImageResource(Class cl, String name)\n+  static private Image _getImageResource(Class<?> cl, String name)\n   {\n      //\n     // =-=  bts completely rewrite this method to use getResourceAsStream()", "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/painter/ImageUtils.java"}, {"additions": 4, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/painter/ImmInsets.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/painter/ImmInsets.java", "sha": "0b4eafb5af7725d1b29709958e4cb8a4d8ea5881", "changes": 4, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/painter/ImmInsets.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add", "patch": "@@ -107,6 +107,7 @@ public Insets toInsets()\n   /**\n    * Checks whether two insets objects are equal.\n    */\n+  @Override\n   public boolean equals(Object obj)\n   {\n     if (obj instanceof ImmInsets)\n@@ -139,6 +140,7 @@ public boolean equals(Object obj)\n   /**\n    * Override of Object.hashCode()\n    */\n+  @Override\n   public int hashCode()\n   {\n     // We need to override hashCode since we override equals().\n@@ -154,6 +156,7 @@ public int hashCode()\n   /**\n    * Returns a String object representing this Inset's values.\n    */\n+  @Override\n   public String toString()\n   {\n     return getClass().getName() +\n@@ -164,6 +167,7 @@ public String toString()\n   }\n \n \n+  @Override\n   public Object clone()\n   {\n     try", "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/painter/ImmInsets.java"}, {"additions": 7, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/painter/OffscreenWrappingPainter.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/painter/OffscreenWrappingPainter.java", "sha": "fa1a08034387ecca4ab3efad2bef6286a6c6e756", "changes": 7, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/painter/OffscreenWrappingPainter.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add", "patch": "@@ -57,6 +57,7 @@ public OffscreenWrappingPainter(Painter wrappedPainter)\n     super(wrappedPainter);\n   }\n \n+  @Override\n   public void paint(\n     PaintContext context,\n     Graphics     g,\n@@ -135,6 +136,7 @@ public void paint(\n     buffer.flush();\n   }\n \n+  @Override\n   public Dimension getPreferredSize(PaintContext context)\n   {\n     Dimension size = null;\n@@ -274,21 +276,25 @@ public ProxyContext(PaintContext wrappedContext, Graphics offscreenG)\n       _g = offscreenG;\n     }\n \n+    @Override\n     protected PaintContext getPaintContext()\n     {\n       return _context;\n     }\n \n+    @Override\n     public Graphics getPaintGraphics()\n     {\n       return _g;\n     }\n \n+    @Override\n     public Font getPaintFont()\n     {\n       return _g.getFont();\n     }\n \n+    @Override\n     public FontMetrics getFontMetrics(Font font)\n     {\n        return _g.getFontMetrics(font);\n@@ -321,6 +327,7 @@ public TransparencyFilter()\n       canFilterIndexColorModel = false;\n     }\n \n+    @Override\n     public int filterRGB(int x, int y, int rgb)\n     {\n       // Make sure we see pixels at y=0 before any other pixels.", "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/painter/OffscreenWrappingPainter.java"}, {"additions": 3, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/painter/TextPainter.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/painter/TextPainter.java", "sha": "a9b5b149523e535e3985c8bb448d3b312cc8e449", "changes": 3, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/painter/TextPainter.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add", "patch": "@@ -98,6 +98,7 @@ public TextPainter(\n    * @param context Context for determining the preferred size.\n    * @return The preferred size of the Painter.\n    */\n+  @Override\n   public Dimension getPreferredSize(\n     PaintContext context\n     )\n@@ -331,6 +332,7 @@ protected String getMinimumStringData(\n   }\n \n \n+  @Override\n   protected Object getData(\n     PaintContext context\n     )\n@@ -348,6 +350,7 @@ protected Object getData(\n   }\n \n \n+  @Override\n   protected Object getDataKey()\n   {\n     return _dataKey;", "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/painter/TextPainter.java"}, {"additions": 6, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/xml/ImageProviderRequestUtils.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/xml/ImageProviderRequestUtils.java", "sha": "ad29262a9ab43d9625b509d58e63978fce82096a", "changes": 12, "status": "modified", "deletions": 6, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/xml/ImageProviderRequestUtils.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add", "patch": "@@ -105,8 +105,8 @@ public static void encodeImageProviderRequest(\n     String       namespaceURI,\n     String       localName,\n     ImageType    type,\n-    Map   properties,\n-    Map   responseProperties,\n+    Map<Object, Object> properties,\n+    Map<Object, Object> responseProperties,\n     PrintWriter  writer\n     ) throws IllegalArgumentException\n   {\n@@ -236,7 +236,7 @@ public static ParserManager createDefaultManager()\n    * objects for elements in the specified namespace.\n    */\n   public static void registerParserFactory(\n-    Class expectedType,\n+    Class<?> expectedType,\n     String namespace,\n     ParserFactory factory\n     )\n@@ -248,7 +248,7 @@ public static void registerParserFactory(\n    * Unregisters the ParserFactory for the specified namespace.\n    */\n   public static void unregisterParserFactory(\n-    Class expectedType,\n+    Class<?> expectedType,\n     String namespace\n     )\n   {\n@@ -282,7 +282,7 @@ private static Object _parse(\n     ImageContext context,\n     XMLProvider  provider,\n     InputSource  source,\n-    Class        expectedClass\n+    Class<?>     expectedClass\n     ) throws IOException, SAXException\n   {\n     // Get the ParserManager\n@@ -323,5 +323,5 @@ private ImageProviderRequestUtils() {}\n \n   // We use this empty dictionary as a stub for the response properties\n   // dictionary when we encode the image properties with the XMLEncoder\n-  private static final Map _EMPTY_MAP = new ArrayMap(0);\n+  private static final Map<Object, Object> _EMPTY_MAP = new ArrayMap<Object, Object>(0);\n }", "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/xml/ImageProviderRequestUtils.java"}, {"additions": 7, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/xml/encode/AbstractXMLEncoder.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/xml/encode/AbstractXMLEncoder.java", "sha": "ff9ac2373a227f4fb28b933351086f9bf9fd191b", "changes": 14, "status": "modified", "deletions": 7, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/xml/encode/AbstractXMLEncoder.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add", "patch": "@@ -50,8 +50,8 @@ public void encodeXML(\n     ImageContext context,\n     String       namespaceURI,\n     String       localName,\n-    Map properties,\n-    Map responseProperties,\n+    Map<Object, Object> properties,\n+    Map<Object, Object> responseProperties,\n     PrintWriter out\n     )\n   {\n@@ -69,8 +69,8 @@ public void encodeXML(\n \n   protected void encodeAttributes(\n     ImageContext context,\n-    Map properties,\n-    Map responseProperties,\n+    Map<Object, Object> properties,\n+    Map<Object, Object> responseProperties,\n     PrintWriter out\n     )\n   {\n@@ -100,8 +100,8 @@ protected void encodeAttributes(\n    */\n   protected void encodeBody(\n     ImageContext context,\n-    Map properties,\n-    Map responseProperties,\n+    Map<Object, Object> properties,\n+    Map<Object, Object> responseProperties,\n     PrintWriter out\n     )\n   {\n@@ -340,7 +340,7 @@ else if (ch == '\"')\n \n   private final void _encodeDirectionAttribute(\n     ImageContext context,\n-    Map properties,\n+    Map<Object, Object> properties,\n     PrintWriter out\n     )\n   {", "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/xml/encode/AbstractXMLEncoder.java"}, {"additions": 7, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/xml/encode/ColorizedIconEncoder.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/xml/encode/ColorizedIconEncoder.java", "sha": "184c59703e36307eeccea3c0dea58ea53844432b", "changes": 12, "status": "modified", "deletions": 5, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/xml/encode/ColorizedIconEncoder.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add", "patch": "@@ -37,10 +37,11 @@ public ColorizedIconEncoder()\n   {\n   }\n \n+  @Override\n   protected void encodeAttributes(\n     ImageContext context,\n-    Map properties, \n-    Map responseProperties,\n+    Map<Object, Object> properties, \n+    Map<Object, Object> responseProperties,\n     PrintWriter out\n     )\n   {\n@@ -49,7 +50,7 @@ protected void encodeAttributes(\n     String source = (String)properties.get(SOURCE_KEY);\n     encodeAttribute(SOURCE_ATTR, source, out);\n \n-    Class laf = (Class)properties.get(LAF_KEY);\n+    Class<?> laf = (Class<?>)properties.get(LAF_KEY);\n     \n     if ( laf != null )\n     {\n@@ -61,10 +62,11 @@ protected void encodeAttributes(\n   /**\n    * Override of AbstractXMLEncoder.encodeBody.\n    */\n+  @Override\n   protected void encodeBody(\n     ImageContext context,\n-    Map properties, \n-    Map responseProperties,\n+    Map<Object, Object> properties, \n+    Map<Object, Object> responseProperties,\n     PrintWriter out\n     )\n   {", "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/xml/encode/ColorizedIconEncoder.java"}, {"additions": 6, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/xml/encode/CompositeButtonEncoder.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/xml/encode/CompositeButtonEncoder.java", "sha": "b6b0eff440ddbe6c0ba478480c7cbe043631bd0f", "changes": 10, "status": "modified", "deletions": 4, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/xml/encode/CompositeButtonEncoder.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add", "patch": "@@ -36,10 +36,11 @@ public CompositeButtonEncoder()\n   {\n   }\n \n+  @Override\n   protected void encodeAttributes(\n     ImageContext context,\n-    Map properties, \n-    Map responseProperties,\n+    Map<Object, Object> properties, \n+    Map<Object, Object> responseProperties,\n     PrintWriter out\n     )\n   {\n@@ -56,10 +57,11 @@ protected void encodeAttributes(\n   /**\n    * Override of AbstractXMLEncoder.encodeBody.\n    */\n+  @Override\n   protected void encodeBody(\n     ImageContext context,\n-    Map properties, \n-    Map responseProperties,\n+    Map<Object, Object> properties, \n+    Map<Object, Object> responseProperties,\n     PrintWriter out\n     )\n   {", "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/xml/encode/CompositeButtonEncoder.java"}, {"additions": 3, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/xml/encode/FlippedIconEncoder.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/xml/encode/FlippedIconEncoder.java", "sha": "decc5e3b557da0e27f3cf2c417f33db143c03b92", "changes": 5, "status": "modified", "deletions": 2, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/xml/encode/FlippedIconEncoder.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add", "patch": "@@ -35,10 +35,11 @@ public FlippedIconEncoder()\n   {\n   }\n \n+  @Override\n   protected void encodeAttributes(\n     ImageContext context,\n-    Map properties, \n-    Map responseProperties,\n+    Map<Object, Object> properties, \n+    Map<Object, Object> responseProperties,\n     PrintWriter out\n     )\n   {", "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/xml/encode/FlippedIconEncoder.java"}, {"additions": 2, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/xml/encode/XMLEncoder.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/xml/encode/XMLEncoder.java", "sha": "2049b552bb28b650bbaed1771d7db212eb781a1f", "changes": 4, "status": "modified", "deletions": 2, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/xml/encode/XMLEncoder.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add", "patch": "@@ -37,8 +37,8 @@ public void encodeXML(\n     ImageContext context,\n     String     namespaceURI,\n     String     localName,\n-    Map properties,\n-    Map responseProperties,\n+    Map<Object, Object> properties,\n+    Map<Object, Object> responseProperties,\n     PrintWriter out\n     );\n }", "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/xml/encode/XMLEncoder.java"}, {"additions": 8, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/xml/parse/BaseImageProviderRequestParser.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/xml/parse/BaseImageProviderRequestParser.java", "sha": "e57005b1c4e5e059fd4ce380e950c7519f461da5", "changes": 12, "status": "modified", "deletions": 4, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/xml/parse/BaseImageProviderRequestParser.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add", "patch": "@@ -72,12 +72,13 @@\n   protected BaseImageProviderRequestParser(int capacity)\n   {\n     // Tack on an extra bucket for the encoding\n-    _properties = new ArrayMap(capacity + 1);\n+    _properties = new ArrayMap<Object, Object>(capacity + 1);\n   }\n \n   /**\n    * Implementation of NodeParser.startElement\n    */\n+  @Override\n   public void startElement(\n     ParseContext context,\n     String       namespaceURI,\n@@ -135,6 +136,7 @@ public void startElement(\n   /**\n    * Implementation of NodeParser.endElement()\n    */\n+  @Override\n   public Object endElement(\n     ParseContext context,\n     String       namespaceURI,\n@@ -152,6 +154,7 @@ public Object endElement(\n   /**\n    * Implementation of NodeParser.startChildElement()\n    */\n+  @Override\n   public NodeParser startChildElement(\n     ParseContext context,\n     String       namespaceURI,\n@@ -177,6 +180,7 @@ else if (\"colorScheme\".equals(localName))\n   /**\n    * Implementation of NodeParser.addCompletedChild().\n    */\n+  @Override\n   public void addCompletedChild(\n     ParseContext context,\n     String       namespaceURI,\n@@ -185,9 +189,9 @@ public void addCompletedChild(\n     )\n   {\n     if (isColorElement(namespaceURI, localName))\n-      setProperty(getColorKey(namespaceURI, localName), (Color)child);\n+      setProperty(getColorKey(namespaceURI, localName), child);\n     else if (isFontElement(namespaceURI, localName))\n-      setProperty(getFontKey(namespaceURI, localName), (FontProxy)child);\n+      setProperty(getFontKey(namespaceURI, localName), child);\n   }\n \n   /**\n@@ -482,7 +486,7 @@ private BaseImageProviderRequestParser() {}\n \n   private String     _namespaceURI;\n   private String     _localName;\n-  private Map _properties;\n+  private Map<Object, Object> _properties;\n \n   private boolean   _error;\n ", "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/xml/parse/BaseImageProviderRequestParser.java"}, {"additions": 1, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/xml/parse/ColorParser.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/xml/parse/ColorParser.java", "sha": "1b8ed7585215691489b689edc57cf065d9970101", "changes": 1, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/xml/parse/ColorParser.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add", "patch": "@@ -41,6 +41,7 @@\n   /**\n    * Implementation of NodeParser.startElement()\n    */\n+  @Override\n   public Object getNodeValue(\n     ParseContext context,\n     String       namespaceURI,", "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/xml/parse/ColorParser.java"}, {"additions": 5, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/xml/parse/ColorizedIconParser.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/xml/parse/ColorizedIconParser.java", "sha": "9d6616ee1770f72341d2397ecfdacc096ac994fb", "changes": 6, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/xml/parse/ColorizedIconParser.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add", "patch": "@@ -38,6 +38,7 @@ public ColorizedIconParser()\n     super(_PROPERTY_COUNT);\n   }\n \n+  @Override\n   public void startElement(\n     ParseContext context,\n     String       namespaceURI,\n@@ -67,7 +68,7 @@ public void startElement(\n     if (newLafString != null)\n       lafString = newLafString;\n \n-    Class laf = null;\n+    Class<?> laf = null;\n     try\n     {\n       laf = Class.forName(lafString);\n@@ -89,6 +90,8 @@ static private String _mapOldLaf(String lafString)\n       return \"org.apache.myfaces.trinidadinternal.ui.laf.oracle.desktop.BrowserLookAndFeel\";\n     return null;\n   }\n+  \n+  @Override\n   protected boolean isColorElement(String namespaceURI, String localName)\n   {\n     if ((XMLConstants.DARK_COLOR_NAME.equals(localName)) ||\n@@ -102,6 +105,7 @@ protected boolean isColorElement(String namespaceURI, String localName)\n    * Override of BaseImageProviderRequestParser.getColorKey() for\n    * borderColor.\n    */\n+  @Override\n   protected Object getColorKey(String namespaceURI, String localName)\n   {\n     if (XMLConstants.DARK_COLOR_NAME.equals(localName))", "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/xml/parse/ColorizedIconParser.java"}, {"additions": 3, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/xml/parse/CompositeButtonParser.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/xml/parse/CompositeButtonParser.java", "sha": "6cf6efe630c4362b9bed05a8f0aff23cf337ae31", "changes": 3, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/xml/parse/CompositeButtonParser.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add", "patch": "@@ -37,6 +37,7 @@ public CompositeButtonParser()\n     super(_PROPERTY_COUNT);\n   }\n \n+  @Override\n   public void startElement(\n     ParseContext context,\n     String       namespaceURI,\n@@ -87,6 +88,7 @@ public void startElement(\n   /**\n    * Implementation of NodeParser.startChildElement()\n    */\n+  @Override\n   public NodeParser startChildElement(\n     ParseContext context,\n     String       namespaceURI,\n@@ -106,6 +108,7 @@ public NodeParser startChildElement(\n   /**\n    * Implementation of NodeParser.addCompletedChild().\n    */\n+  @Override\n   public void addCompletedChild(\n     ParseContext context,\n     String       namespaceURI,", "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/xml/parse/CompositeButtonParser.java"}, {"additions": 4, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/xml/parse/DefaultsParser.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/xml/parse/DefaultsParser.java", "sha": "1cd99a457ae9f3eccf8e4e95e264b860d4c61bb7", "changes": 4, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/xml/parse/DefaultsParser.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add", "patch": "@@ -35,6 +35,7 @@ public DefaultsParser()\n    * Override of BaseImageProviderRequestParser.isColorElement()\n    * which adds in the borderColor element.\n    */\n+  @Override\n   protected boolean isColorElement(String namespaceURI, String localName)\n   {\n     if (localName.equals(XMLConstants.BORDER_COLOR_NAME)        ||\n@@ -53,6 +54,7 @@ protected boolean isColorElement(String namespaceURI, String localName)\n    * Override of BaseImageProviderRequestParser.isFontElement()\n    * which adds in the selected/disabled font elements.\n    */\n+  @Override\n   protected boolean isFontElement(String namespaceURI, String localName)\n   {\n     if (localName.equals(XMLConstants.SELECTED_FONT_NAME)  ||\n@@ -68,6 +70,7 @@ protected boolean isFontElement(String namespaceURI, String localName)\n    * Override of BaseImageProviderRequestParser.getColorKey() for\n    * borderColor.\n    */\n+  @Override\n   protected Object getColorKey(String namespaceURI, String localName)\n   {\n     if (localName.equals(XMLConstants.BORDER_COLOR_NAME))\n@@ -88,6 +91,7 @@ protected Object getColorKey(String namespaceURI, String localName)\n    * Override of BaseImageProviderRequestParser.getFontKey() for\n    * selected/disabled fonts.\n    */\n+  @Override\n   protected Object getFontKey(String namespaceURI, String localName)\n   {\n     if (localName.equals(XMLConstants.SELECTED_FONT_NAME))", "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/xml/parse/DefaultsParser.java"}, {"additions": 1, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/xml/parse/FlippedIconParser.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/xml/parse/FlippedIconParser.java", "sha": "92cbde96d8abbdca74627348577306dda28b4b45", "changes": 1, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/xml/parse/FlippedIconParser.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add", "patch": "@@ -35,6 +35,7 @@ public FlippedIconParser()\n     super(_PROPERTY_COUNT);\n   }\n \n+  @Override\n   public void startElement(\n     ParseContext context,\n     String       namespaceURI,", "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/xml/parse/FlippedIconParser.java"}, {"additions": 4, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/xml/parse/FontParser.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/xml/parse/FontParser.java", "sha": "61da06a50fbbcc1363e031b774cccd6becbbf433", "changes": 4, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/xml/parse/FontParser.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add", "patch": "@@ -41,6 +41,7 @@\n   /**\n    * Implementation of NodeParser.startElement()\n    */\n+  @Override\n   public void startElement(\n     ParseContext context,\n     String       namespaceURI,\n@@ -67,6 +68,7 @@ public void startElement(\n   /**\n    * Implementation of NodeParser.endElement()\n    */\n+  @Override\n   public Object endElement(\n     ParseContext context,\n     String       namespaceURI,\n@@ -83,6 +85,7 @@ public Object endElement(\n   /**\n    * Implementation of NodeParser.startChildElement()\n    */\n+  @Override\n   public NodeParser startChildElement(\n     ParseContext context,\n     String       namespaceURI,\n@@ -103,6 +106,7 @@ public NodeParser startChildElement(\n   /**\n    * Implementation of NodeParser.addCompletedChild().\n    */\n+  @Override\n   public void addCompletedChild(\n     ParseContext context,\n     String       namespaceURI,", "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/xml/parse/FontParser.java"}, {"additions": 8, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/xml/parse/ImageGeneratorParser.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/xml/parse/ImageGeneratorParser.java", "sha": "26e324099acbd2b58401969db497e789d5a3ed4f", "changes": 9, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/xml/parse/ImageGeneratorParser.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add", "patch": "@@ -39,6 +39,7 @@\n   /**\n    * Implementations of NodeParser.startElement();\n    */\n+  @Override\n   public void startElement(\n     ParseContext context,\n     String       namespaceURI,\n@@ -55,6 +56,7 @@ public void startElement(\n   /**\n    * Implementation of NodeParser.endElement()\n    */\n+  @Override\n   public Object endElement(\n     ParseContext context,\n     String       namespaceURI,\n@@ -76,6 +78,7 @@ public Object endElement(\n   /**\n    * Implementation of NodeParser.startChildElement()\n    */\n+  @Override\n   public NodeParser startChildElement(\n     ParseContext context,\n     String       namespaceURI,\n@@ -91,6 +94,7 @@ public NodeParser startChildElement(\n   /**\n    * Implementation of NodeParser.addCompletedChild().\n    */\n+  @Override\n   public void addCompletedChild(\n     ParseContext context,\n     String       namespaceURI,\n@@ -101,6 +105,9 @@ public void addCompletedChild(\n     _requests.addElement((ImageProviderRequest)child);\n   }\n \n-  private Vector _requests = new Vector();\n+  // -= Simon Lessard =-\n+  // FIXME: Wow! A Vector... Change that to ArrayList\n+  //        or Collections.synchronizedList(ArrayList)\n+  private Vector<ImageProviderRequest> _requests = new Vector<ImageProviderRequest>();\n }\n ", "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/xml/parse/ImageGeneratorParser.java"}, {"additions": 6, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/xml/parse/ImageMapParser.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/xml/parse/ImageMapParser.java", "sha": "2d3720790cf9f32937ff49a6c3f0b3588e92dce7", "changes": 7, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/xml/parse/ImageMapParser.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add", "patch": "@@ -37,6 +37,7 @@\n   /**\n    * Implementation of NodeParser.endElement()\n    */\n+  @Override\n   public Object endElement(\n     ParseContext context,\n     String       namespaceURI,\n@@ -51,6 +52,7 @@ public Object endElement(\n   /**\n    * Implementation of NodeParser.startChildElement()\n    */\n+  @Override\n   public NodeParser startChildElement(\n     ParseContext context,\n     String       namespaceURI,\n@@ -78,5 +80,8 @@ public NodeParser startChildElement(\n     }\n   }\n \n-  private Vector _areas = new Vector();\n+  // -= Simon Lessard =-\n+  // FIXME: Wow! Another Vector... Change that to ArrayList\n+  //        or Collections.synchronizedList(ArrayList)\n+  private Vector<MapArea> _areas = new Vector<MapArea>();\n }", "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/xml/parse/ImageMapParser.java"}, {"additions": 4, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/xml/parse/ImageMetadataParser.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/xml/parse/ImageMetadataParser.java", "sha": "9c73581b90454af9cb484fcfdb99cbba6c934df7", "changes": 4, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/xml/parse/ImageMetadataParser.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add", "patch": "@@ -39,6 +39,7 @@\n   /**\n    * Implementation of NodeParser.startElement\n    */\n+  @Override\n   public void startElement(\n     ParseContext context,\n     String       namespaceURI,\n@@ -60,6 +61,7 @@ public void startElement(\n   /**\n    * Implementation of NodeParser.endElement()\n    */\n+  @Override\n   public Object endElement(\n     ParseContext context,\n     String       namespaceURI,\n@@ -72,6 +74,7 @@ public Object endElement(\n   /**\n    * Implementation of NodeParser.startChildElement()\n    */\n+  @Override\n   public NodeParser startChildElement(\n     ParseContext context,\n     String       namespaceURI,\n@@ -87,6 +90,7 @@ public NodeParser startChildElement(\n   /**\n    * Implementation of NodeParser.addCompletedChild().\n    */\n+  @Override\n   public void addCompletedChild(\n     ParseContext context,\n     String       namespaceURI,", "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/xml/parse/ImageMetadataParser.java"}, {"additions": 9, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/xml/parse/TextParser.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/xml/parse/TextParser.java", "sha": "d7f32ca2b8fda78174938eddddf7c40a62f89419", "changes": 9, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/xml/parse/TextParser.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add", "patch": "@@ -42,6 +42,7 @@\n   /**\n    * Implementation of NodeParser.startElement()\n    */\n+  @Override\n   public void startElement(\n     ParseContext context,\n     String       namespaceURI,\n@@ -56,6 +57,7 @@ public void startElement(\n   /**\n    * Implementation of NodeParser.endElement()\n    */\n+  @Override\n   public Object endElement(\n     ParseContext context,\n     String       namespaceURI,\n@@ -98,6 +100,7 @@ public Object endElement(\n   /**\n    * Implementation of NodeParser.startChildElement()\n    */\n+  @Override\n   public NodeParser startChildElement(\n     ParseContext context,\n     String       namespaceURI,\n@@ -111,6 +114,7 @@ public NodeParser startChildElement(\n   /**\n    * Implementation of NodeParser.addText().\n    */\n+  @Override\n   public void addText(\n     ParseContext context,\n     char[]       text,\n@@ -128,6 +132,7 @@ public void addText(\n   /**\n    * Implemenation of NodeParser.addWhitespace().\n    */\n+  @Override\n   public void addWhitespace(\n     ParseContext context,\n     char[]       text,\n@@ -143,6 +148,10 @@ public void addWhitespace(\n \n   private String _bundleName;\n   private String _key;\n+  // -= Simon Lessard =-\n+  // FIXME: Using a StringBuilder could be MUCH more efficient\n+  //        Currently String concatenation within a loop process\n+  //        which is bad.\n   private String _text;\n \n   // Error messages", "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/image/xml/parse/TextParser.java"}, {"additions": 34, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/io/DebugHtmlResponseWriter.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/io/DebugHtmlResponseWriter.java", "sha": "6a99c0a45f074792aa89c1ea25b4c30e85890812", "changes": 61, "status": "modified", "deletions": 27, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/io/DebugHtmlResponseWriter.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add", "patch": "@@ -17,10 +17,11 @@\n \n import java.io.IOException;\n import java.io.Writer;\n-\n import java.util.Arrays;\n import java.util.Collection;\n import java.util.HashMap;\n+import java.util.List;\n+import java.util.Map;\n import java.util.Stack;\n \n import javax.faces.component.UIComponent;\n@@ -45,13 +46,14 @@\n   public DebugHtmlResponseWriter(ResponseWriter decorated)\n   {\n     super(decorated);\n-    _elementStack = new Stack();\n+    _elementStack = new Stack<String>();\n   }\n \n   /**\n    * Creates a new instance of this DebugHtmlResponseWriter, using a different\n    * Writer.\n    */\n+  @Override\n   public ResponseWriter cloneWithWriter(Writer writer)\n   {\n     DebugHtmlResponseWriter cloned =\n@@ -62,6 +64,7 @@ public ResponseWriter cloneWithWriter(Writer writer)\n \n \n \n+  @Override\n   public void startElement(String name, UIComponent component) throws IOException\n   {\n     String lowerName = name.toLowerCase();\n@@ -79,9 +82,9 @@ public void startElement(String name, UIComponent component) throws IOException\n     // Check for elements that are not allowed inside each other\n     if (!_elementStack.empty())\n     {\n-      String parent = (String) _elementStack.peek();\n-      Collection allowedParents = (Collection) _sAllowedParents.get(lowerName);\n-      Collection allowedChildren = (Collection) _sAllowedChildren.get(parent);\n+      String parent = _elementStack.peek();\n+      Collection<String> allowedParents = _sAllowedParents.get(lowerName);\n+      Collection<String> allowedChildren = _sAllowedChildren.get(parent);\n       if (((allowedParents != null)  &&\n            !allowedParents.contains(parent)) ||\n           ((allowedChildren != null)  &&\n@@ -100,6 +103,7 @@ public void startElement(String name, UIComponent component) throws IOException\n   }\n \n \n+  @Override\n   public void endElement(String name) throws IOException\n   {\n     if (!_elementStack.empty())\n@@ -108,6 +112,7 @@ public void endElement(String name) throws IOException\n     super.endElement(name);\n   }\n \n+  @Override\n   public void writeAttribute(String name,\n                              Object value,\n                              String componentPropertyName)\n@@ -165,10 +170,12 @@ private void _errorWithComment(String text) throws IOException\n \n   // Yes, Stack is slow and lame.  This code is used for debugging\n   // only, so that is of little concern.\n-  private Stack        _elementStack;\n+  private Stack<String> _elementStack;\n \n-  static private final HashMap _sAllowedParents = new HashMap(13);\n-  static private final HashMap _sAllowedChildren  = new HashMap(13);\n+  static private final Map<String, List<String>> _sAllowedParents = \n+    new HashMap<String, List<String>>(13);\n+  static private final Map<String, List<String>> _sAllowedChildren  = \n+    new HashMap<String, List<String>>(13);\n \n   static\n   {\n@@ -178,70 +185,70 @@ private void _errorWithComment(String text) throws IOException\n     // but we hardcode that rule.\n     _sAllowedChildren.put(\"table\",\n        Arrays.asList(\n-          new Object[]{\"tr\", \"caption\",\n+          new String[]{\"tr\", \"caption\",\n                        \"thead\", \"tfoot\", \"tbody\", \"col\", \"colgroup\"}));\n \n     _sAllowedChildren.put(\"tr\",\n        Arrays.asList(\n-          new Object[]{\"th\", \"td\"}));\n+          new String[]{\"th\", \"td\"}));\n \n     _sAllowedChildren.put(\"select\",\n        Arrays.asList(\n-          new Object[]{\"option\", \"optgroup\"}));\n+          new String[]{\"option\", \"optgroup\"}));\n \n     _sAllowedChildren.put(\"ol\",\n        Arrays.asList(\n-          new Object[]{\"li\"}));\n+          new String[]{\"li\"}));\n \n     _sAllowedChildren.put(\"ul\",\n        Arrays.asList(\n-          new Object[]{\"li\"}));\n+          new String[]{\"li\"}));\n \n     _sAllowedChildren.put(\"input\",\n-       Arrays.asList(new Object[0]));\n+       Arrays.asList(new String[0]));\n \n     _sAllowedChildren.put(\"hr\",\n-       Arrays.asList(new Object[0]));\n+       Arrays.asList(new String[0]));\n \n     _sAllowedChildren.put(\"br\",\n-       Arrays.asList(new Object[0]));\n+       Arrays.asList(new String[0]));\n \n     _sAllowedChildren.put(\"area\",\n-       Arrays.asList(new Object[0]));\n+       Arrays.asList(new String[0]));\n \n     _sAllowedChildren.put(\"link\",\n-       Arrays.asList(new Object[0]));\n+       Arrays.asList(new String[0]));\n \n     _sAllowedChildren.put(\"img\",\n-       Arrays.asList(new Object[0]));\n+       Arrays.asList(new String[0]));\n \n     _sAllowedChildren.put(\"col\",\n-       Arrays.asList(new Object[0]));\n+       Arrays.asList(new String[0]));\n \n     _sAllowedChildren.put(\"frame\",\n-       Arrays.asList(new Object[0]));\n+       Arrays.asList(new String[0]));\n \n     _sAllowedChildren.put(\"base\",\n-       Arrays.asList(new Object[0]));\n+       Arrays.asList(new String[0]));\n \n     _sAllowedChildren.put(\"meta\",\n-       Arrays.asList(new Object[0]));\n+       Arrays.asList(new String[0]));\n \n     _sAllowedParents.put(\"tr\",\n        Arrays.asList(\n-          new Object[]{\"table\", \"thead\", \"tfoot\", \"tbody\"}));\n+          new String[]{\"table\", \"thead\", \"tfoot\", \"tbody\"}));\n \n     _sAllowedParents.put(\"td\",\n        Arrays.asList(\n-          new Object[]{\"tr\"}));\n+          new String[]{\"tr\"}));\n \n     _sAllowedParents.put(\"th\",\n        Arrays.asList(\n-          new Object[]{\"tr\"}));\n+          new String[]{\"tr\"}));\n \n     _sAllowedParents.put(\"option\",\n        Arrays.asList(\n-          new Object[]{\"select\", \"optgroup\"}));\n+          new String[]{\"select\", \"optgroup\"}));\n   }\n \n   static private final TrinidadLogger _LOG = TrinidadLogger.createTrinidadLogger(DebugHtmlResponseWriter.class);", "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/io/DebugHtmlResponseWriter.java"}, {"additions": 31, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/io/DebugResponseWriter.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/io/DebugResponseWriter.java", "sha": "5902ec7ebf41b329f8792be7106fa52e20e78523", "changes": 50, "status": "modified", "deletions": 19, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/io/DebugResponseWriter.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add", "patch": "@@ -45,23 +45,25 @@\n    public DebugResponseWriter(ResponseWriter decorated)\n    {\n      super(decorated);\n-     _elementStack = new Stack();\n-     _idMap = new HashMap();\n-     _attributes = new HashSet();\n+     _elementStack = new Stack<String>();\n+     _idMap = new HashMap<Object, Boolean>();\n+     _attributes = new HashSet<String>();\n    }\n \n    /**\n     * Creates a new instance of this DebugResponseWriter, using a different\n     * Writer.\n     */\n-   public ResponseWriter cloneWithWriter(Writer writer)\n+   @Override\n+  public ResponseWriter cloneWithWriter(Writer writer)\n    {\n      return new DebugResponseWriter(\n        getResponseWriter().cloneWithWriter(writer));\n    }\n \n \n-   public void endDocument() throws IOException\n+   @Override\n+  public void endDocument() throws IOException\n    {\n      super.endDocument();\n      if (!_elementStack.empty())\n@@ -75,7 +77,8 @@ public void endDocument() throws IOException\n    /**\n     * Writes a comment.\n     */\n-   public void writeComment(Object text) throws IOException\n+   @Override\n+  public void writeComment(Object text) throws IOException\n    {\n      if ((text != null) && (text.toString().indexOf(\"--\") >= 0))\n        _LOG.warning(\"Comments cannot include \\\"--\\\"\");\n@@ -88,7 +91,8 @@ public void writeComment(Object text) throws IOException\n    /**\n     * Writes a String, escaped properly for this method.\n     */\n-   public void writeText(Object text, String componentPropertyName) throws IOException\n+   @Override\n+  public void writeText(Object text, String componentPropertyName) throws IOException\n    {\n      _inElement = false;\n      super.writeText(text, componentPropertyName);\n@@ -97,7 +101,8 @@ public void writeText(Object text, String componentPropertyName) throws IOExcept\n    /**\n     * Writes a character array, escaped properly for this method.\n     */\n-   public void writeText(\n+   @Override\n+  public void writeText(\n      char[]      text,\n      int         start,\n      int         length) throws IOException\n@@ -110,7 +115,8 @@ public void writeText(\n    /**\n     * Writes a string, without performing any escaping.\n     */\n-   public void write(String text) throws IOException\n+   @Override\n+  public void write(String text) throws IOException\n    {\n      _inElement = false;\n      super.write(text);\n@@ -119,7 +125,8 @@ public void write(String text) throws IOException\n    /**\n     * Writes a character array, without performing any escaping.\n     */\n-   public void write(\n+   @Override\n+  public void write(\n      char[]      text,\n      int         start,\n      int         length) throws IOException\n@@ -132,7 +139,8 @@ public void write(\n    /**\n     * Writes a character, without performing any escaping.\n     */\n-   public void write(\n+   @Override\n+  public void write(\n      int ch\n      ) throws IOException\n    {\n@@ -141,7 +149,8 @@ public void write(\n    }\n \n \n-   public void startElement(String name, UIComponent component) throws IOException\n+   @Override\n+  public void startElement(String name, UIComponent component) throws IOException\n    {\n      if ((component != null) && (_lastComponentStarted != component))\n      {\n@@ -164,7 +173,8 @@ public void startElement(String name, UIComponent component) throws IOException\n    }\n \n \n-   public void endElement(String name) throws IOException\n+   @Override\n+  public void endElement(String name) throws IOException\n    {\n      _inElement = false;\n      _lastComponentStarted = null;\n@@ -195,7 +205,8 @@ public void endElement(String name) throws IOException\n      super.endElement(name);\n    }\n \n-   public void writeAttribute(String name,\n+   @Override\n+  public void writeAttribute(String name,\n                               Object value,\n                               String componentPropertyName)\n          throws IOException\n@@ -223,7 +234,8 @@ public void writeAttribute(String name,\n      super.writeAttribute(name, value, componentPropertyName);\n    }\n \n-   public void writeURIAttribute(\n+   @Override\n+  public void writeURIAttribute(\n      String     name,\n      Object     value,\n      String     componentPropertyName) throws IOException\n@@ -300,15 +312,15 @@ private void _logDuplicateId(Object value)\n    private boolean      _inElement;\n    // Yes, Stack is slow and lame.  This code is used for debugging\n    // only, so that is of little concern.\n-   private Stack        _elementStack;\n+   private Stack<String> _elementStack;\n    // the following is used to keep track of how many time endElement is called.\n    // This is to help in debuggin. An often error is that some element was\n    // too many times or too few times. But by the time the error is detected\n    // it is too late. Now we can print out this count, and you can set the\n    // debugger to stop when the count-1 'th endElement is called:\n-   private int          _endElementCount = 0;\n-   private Map          _idMap;\n-   private Set          _attributes;\n+   private int                  _endElementCount = 0;\n+   private Map<Object, Boolean> _idMap;\n+   private Set<String>          _attributes;\n    // Last component that had a \"start\" component output;  used\n    // to avoid multiple \"start\" comments\n    private UIComponent  _lastComponentStarted;", "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/io/DebugResponseWriter.java"}, {"additions": 25, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/io/HtmlResponseWriter.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/io/HtmlResponseWriter.java", "sha": "ed06db8cf7b10b5dea4c1d5cdf29e4712ba23489", "changes": 33, "status": "modified", "deletions": 8, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/io/HtmlResponseWriter.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add", "patch": "@@ -57,38 +57,45 @@ public HtmlResponseWriter(Writer out, String encoding)\n     CaboHttpUtils.validateEncoding(encoding);\n   }\n \n+  @Override\n   public String getCharacterEncoding()\n   {\n     return _encoding;\n   }\n \n+  @Override\n   public String getContentType()\n   {\n     return HTML_CONTENT_TYPE;\n   }\n \n+  @Override\n   public void startDocument() throws IOException\n   {\n   }\n \n \n+  @Override\n   public void endDocument() throws IOException\n   {\n     _out.flush();\n   }\n \n+  @Override\n   public void flush() throws IOException\n   {\n     _closeStartIfNecessary();\n   }\n \n \n+  @Override\n   public void close()throws IOException\n   {\n     flush();\n     // =-=AEW And anything else?\n   }\n \n+  @Override\n   public void startElement(String name,\n                            UIComponent component) throws IOException\n   {\n@@ -120,6 +127,7 @@ else if (\"script\".equals(name) ||\n   }\n \n \n+  @Override\n   public void endElement(String name) throws IOException\n   {\n     // eliminate any <pending></pending> combinations\n@@ -178,6 +186,7 @@ public void endElement(String name) throws IOException\n   }\n \n \n+  @Override\n   public void writeAttribute(String name,\n                              Object value,\n                              String componentPropertyName)\n@@ -192,7 +201,7 @@ public void writeAttribute(String name,\n \n     Writer out = _out;\n \n-    Class valueClass = value.getClass();\n+    Class<?> valueClass = value.getClass();\n \n     // See what attribute we were involved in\n     String currAttr = _currAttr;\n@@ -234,6 +243,7 @@ public void writeAttribute(String name,\n   }\n \n \n+  @Override\n   public void writeURIAttribute(String name,\n                                 Object value,\n                                 String componentPropertyName)\n@@ -273,6 +283,7 @@ public void writeURIAttribute(String name,\n     out.write('\"');\n   }\n \n+  @Override\n   public void writeComment(Object comment) throws IOException\n   {\n     if (comment != null)\n@@ -285,6 +296,7 @@ public void writeComment(Object comment) throws IOException\n   }\n \n \n+  @Override\n   public void writeText(Object text, String componentPropertyName)\n      throws IOException\n   {\n@@ -304,6 +316,7 @@ public void writeText(Object text, String componentPropertyName)\n   }\n \n \n+  @Override\n   public void writeText(char text[], int off, int len)\n         throws IOException\n   {\n@@ -318,25 +331,29 @@ public void writeText(char text[], int off, int len)\n     }\n   }\n \n+  @Override\n   public void write(char cbuf[], int off, int len) throws IOException\n   {\n     _closeStartIfNecessary();\n     _out.write(cbuf, off, len);\n   }\n \n+  @Override\n   public void write(String str) throws IOException\n   {\n     _closeStartIfNecessary();\n     _out.write(str);\n   }\n \n+  @Override\n   public void write(int c) throws IOException\n   {\n     _closeStartIfNecessary();\n     _out.write((char) c);\n   }\n \n \n+  @Override\n   public ResponseWriter cloneWithWriter(Writer writer)\n   {\n     try\n@@ -376,7 +393,7 @@ private void _startElementImpl(String name) throws IOException\n    * Writes the value of an object\n    */\n   private void _writeValue(\n-    Class       valueClass,\n+    Class<?>    valueClass,\n     Object      value,\n     boolean     isAttribute\n     ) throws IOException\n@@ -488,7 +505,7 @@ private String _popSkippedElement()\n     if (size == 0)\n       return null;\n \n-    return (String)_skippedElements.remove(size - 1);\n+    return _skippedElements.remove(size - 1);\n   }\n \n   /**\n@@ -621,13 +638,13 @@ static private boolean _isEmptyElement(String name)\n \n   // stack of skipped and unskipped elements used to determine when\n   // to suppress the end tag of a skipped element\n-  private final ArrayList   _skippedElements = new ArrayList(20);\n+  private final ArrayList<String> _skippedElements = new ArrayList<String>(20);\n \n \n-  private static final Class _CHAR_ARRAY_CLASS = (new char[0]).getClass();\n-  private static final Class _BOOLEAN_CLASS = Boolean.class;\n-  private static final Class _INTEGER_CLASS = Integer.class;\n-  private static final Class _ESCAPED_TEXT_CLASS = EscapedText.class;\n+  private static final Class<?> _CHAR_ARRAY_CLASS = (new char[0]).getClass();\n+  private static final Class<?> _BOOLEAN_CLASS = Boolean.class;\n+  private static final Class<?> _INTEGER_CLASS = Integer.class;\n+  private static final Class<?> _ESCAPED_TEXT_CLASS = EscapedText.class;\n \n \n   static private final TrinidadLogger _LOG = TrinidadLogger.createTrinidadLogger(HtmlResponseWriter.class);", "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/io/HtmlResponseWriter.java"}, {"additions": 10, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/io/IndentingResponseWriter.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/io/IndentingResponseWriter.java", "sha": "776decbd5c63377c9253bd372f143692e5b60333", "changes": 11, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/io/IndentingResponseWriter.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add", "patch": "@@ -50,12 +50,14 @@ public IndentingResponseWriter(\n    * Creates a new instance of this DebugResponseWriter, using a different\n    * Writer.\n    */\n+  @Override\n   public ResponseWriter cloneWithWriter(Writer writer)\n   {\n     return new IndentingResponseWriter(\n       getResponseWriter().cloneWithWriter(writer));\n   }\n \n+  @Override\n   public void startElement(String name,\n                            UIComponent component) throws IOException\n   {\n@@ -74,6 +76,7 @@ public void startElement(String name,\n     super.startElement(name, component);\n   }\n \n+  @Override\n   public void endElement(String name) throws IOException\n   {\n     _depth--;\n@@ -93,6 +96,7 @@ public void endElement(String name) throws IOException\n   /**\n    * Writes a comment.\n    */\n+  @Override\n   public void writeComment(Object comment) throws IOException\n   {\n     // start a new line only if an element just ended and\n@@ -105,6 +109,7 @@ public void writeComment(Object comment) throws IOException\n   /**\n    * Writes a String, escaped properly for this method.\n    */\n+  @Override\n   public void writeText(Object text, String componentPropertyName) throws IOException\n   {\n     _seeIfJustEndedElement();\n@@ -115,6 +120,7 @@ public void writeText(Object text, String componentPropertyName) throws IOExcept\n   /**\n    * Writes a character array, escaped properly for this method.\n    */\n+  @Override\n   public void writeText(\n     char[]      text, \n     int         start,\n@@ -127,6 +133,7 @@ public void writeText(\n   /**\n    * Writes a string, without performing any escaping.\n    */\n+  @Override\n   public void write(String text) throws IOException\n   {\n     _seeIfJustEndedElement();\n@@ -136,6 +143,7 @@ public void write(String text) throws IOException\n   /**\n    * Writes a character array, without performing any escaping.\n    */\n+  @Override\n   public void write(\n     char[]      text, \n     int         start,\n@@ -148,6 +156,7 @@ public void write(\n   /**\n    * Writes a character, without performing any escaping.\n    */\n+  @Override\n   public void write(\n     int c\n     ) throws IOException\n@@ -229,7 +238,7 @@ private boolean _isWhiteSpaceSensitive(String element)\n     }\n   }\n \n-  static private final Set _HTML_TYPES = new HashSet();\n+  static private final Set<String> _HTML_TYPES = new HashSet<String>();\n   static\n   {\n     _HTML_TYPES.add(HtmlResponseWriter.HTML_CONTENT_TYPE);", "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/io/IndentingResponseWriter.java"}, {"additions": 2, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/io/RepeatIdResponseWriter.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/io/RepeatIdResponseWriter.java", "sha": "e6c65dc905beef31e19226cbacc3ca59d5eb8762", "changes": 2, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/io/RepeatIdResponseWriter.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add", "patch": "@@ -52,12 +52,14 @@ private RepeatIdResponseWriter(ResponseWriter out)\n     super(out);\n   }\n   \n+  @Override\n   public ResponseWriter cloneWithWriter(Writer writer)\n   {\n     return new RepeatIdResponseWriter(\n       getResponseWriter().cloneWithWriter(writer));\n   }\n \n+  @Override\n   public void writeAttribute(String     name,\n                              Object     value,\n                              String     property) throws IOException", "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/io/RepeatIdResponseWriter.java"}, {"additions": 19, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/io/ResponseWriterDecorator.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/io/ResponseWriterDecorator.java", "sha": "4373ac50084bdde68f1b818b490de2ee879d06dd", "changes": 19, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/io/ResponseWriterDecorator.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add", "patch": "@@ -46,51 +46,60 @@ protected ResponseWriter getResponseWriter()\n     return _decorated;\n   }\n \n+  @Override\n   public String getCharacterEncoding()\n   {\n     return getResponseWriter().getCharacterEncoding();\n   }\n \n+  @Override\n   public String getContentType()\n   {\n     return getResponseWriter().getContentType();\n   }\n \n+  @Override\n   public void startDocument() throws IOException\n   {\n     getResponseWriter().startDocument();\n   }\n \n \n+  @Override\n   public void endDocument() throws IOException\n   {\n     getResponseWriter().endDocument();\n   }\n \n+  @Override\n   public void flush() throws IOException\n   {\n     getResponseWriter().flush();\n   }\n \n \n+  @Override\n   public void close()throws IOException\n   {\n     getResponseWriter().close();\n   }\n \n+  @Override\n   public void startElement(String name,\n                            UIComponent component) throws IOException\n   {\n     getResponseWriter().startElement(name, component);\n   }\n \n   \n+  @Override\n   public void endElement(String name) throws IOException\n   {\n     getResponseWriter().endElement(name);\n   }\n \n \n+  @Override\n   public void writeAttribute(String name,\n                              Object value,\n                              String componentPropertyName)\n@@ -100,6 +109,7 @@ public void writeAttribute(String name,\n   }\n \n \n+  @Override\n   public void writeURIAttribute(String name,\n                                 Object value,\n                                 String componentPropertyName)\n@@ -108,51 +118,60 @@ public void writeURIAttribute(String name,\n     getResponseWriter().writeURIAttribute(name, value, componentPropertyName);\n   }\n \n+  @Override\n   public void writeComment(Object comment) throws IOException\n   {\n     getResponseWriter().writeComment(comment);\n   }\n \n   \n+  @Override\n   public void writeText(Object text, String componentPropertyName) throws IOException\n   {\n     getResponseWriter().writeText(text, componentPropertyName);\n   }\n \n \n+  @Override\n   public void writeText(char text[], int off, int len)\n         throws IOException\n   {\n     getResponseWriter().writeText(text, off, len);\n   }\n \n+  @Override\n   public void write(char cbuf[], int off, int len) throws IOException\n   {\n     getResponseWriter().write(cbuf, off, len);\n   }\n \n+  @Override\n   public void write(String str) throws IOException\n   {\n     getResponseWriter().write(str);\n   }\n \n+  @Override\n   public void write(int c) throws IOException\n   {\n     getResponseWriter().write((char) c);\n   }\n \n+  @Override\n   public void write(char[] cbuf)\n     throws IOException\n   {\n     getResponseWriter().write(cbuf);\n   }\n \n+  @Override\n   public void write(String str, int off, int len)\n     throws IOException\n   {\n     getResponseWriter().write(str, off, len);\n   }\n \n+  @Override\n   public ResponseWriter cloneWithWriter(Writer writer)\n   {\n     return getResponseWriter().cloneWithWriter(writer);", "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/io/ResponseWriterDecorator.java"}, {"additions": 28, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/io/XhtmlResponseWriter.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/io/XhtmlResponseWriter.java", "sha": "93575d5a97c480e5450a78c7d753e6696ee82979", "changes": 36, "status": "modified", "deletions": 8, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/io/XhtmlResponseWriter.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add", "patch": "@@ -59,38 +59,45 @@ public XhtmlResponseWriter(\n     CaboHttpUtils.validateEncoding(encoding);\n   }\n \n+  @Override\n   public String getCharacterEncoding()\n   {\n     return _encoding;\n   }\n \n+  @Override\n   public String getContentType()\n   {\n     return XHTML_CONTENT_TYPE;\n   }\n \n+  @Override\n   public void startDocument() throws IOException\n   {\n   }\n \n \n+  @Override\n   public void endDocument() throws IOException\n   {\n     _out.flush();\n   }\n \n+  @Override\n   public void flush() throws IOException\n   {\n     _closeStartIfNecessary();\n   }\n \n \n+  @Override\n   public void close()throws IOException\n   {\n     flush();\n     // =-=AEW And anything else?\n   }\n \n+  @Override\n   public void startElement(String name,\n                            UIComponent component) throws IOException\n   {\n@@ -122,6 +129,7 @@ else if (\"script\".equals(name) ||\n   }\n \n \n+  @Override\n   public void endElement(String name) throws IOException\n   {\n     // eliminate any <pending></pending> combinations\n@@ -167,6 +175,7 @@ public void endElement(String name) throws IOException\n   }\n \n \n+  @Override\n   public void writeAttribute(String name,\n                              Object value,\n                              String componentPropertyName)\n@@ -181,7 +190,7 @@ public void writeAttribute(String name,\n \n     Writer out = _out;\n \n-    Class valueClass = value.getClass();\n+    Class<?> valueClass = value.getClass();\n \n     // Output Boolean values specially\n     if (valueClass == _BOOLEAN_CLASS)\n@@ -208,6 +217,7 @@ public void writeAttribute(String name,\n   }\n \n \n+  @Override\n   public void writeURIAttribute(String name,\n                                 Object value,\n                                 String componentPropertyName)\n@@ -217,6 +227,7 @@ public void writeURIAttribute(String name,\n     writeAttribute(name, value, componentPropertyName);\n   }\n \n+  @Override\n   public void writeComment(Object comment) throws IOException\n   {\n     if (comment != null)\n@@ -229,6 +240,7 @@ public void writeComment(Object comment) throws IOException\n   }\n \n \n+  @Override\n   public void writeText(Object text, String componentPropertyName)\n      throws IOException\n   {\n@@ -248,6 +260,7 @@ public void writeText(Object text, String componentPropertyName)\n   }\n \n \n+  @Override\n   public void writeText(char text[], int off, int len)\n         throws IOException\n   {\n@@ -262,25 +275,29 @@ public void writeText(char text[], int off, int len)\n     }\n   }\n \n+  @Override\n   public void write(char cbuf[], int off, int len) throws IOException\n   {\n     _closeStartIfNecessary();\n     _out.write(cbuf, off, len);\n   }\n \n+  @Override\n   public void write(String str) throws IOException\n   {\n     _closeStartIfNecessary();\n     _out.write(str);\n   }\n \n+  @Override\n   public void write(int c) throws IOException\n   {\n     _closeStartIfNecessary();\n     _out.write((char) c);\n   }\n \n \n+  @Override\n   public ResponseWriter cloneWithWriter(Writer writer)\n   {\n     try\n@@ -321,7 +338,7 @@ private void _startElementImpl(String name) throws IOException\n    * Writes the value of an object\n    */\n   private void _writeValue(\n-    Class       valueClass,\n+    Class<?>    valueClass,\n     Object      value,\n     boolean     isAttribute\n     ) throws IOException\n@@ -427,7 +444,7 @@ private String _popSkippedElement()\n     if (size == 0)\n       return null;\n \n-    return (String)_skippedElements.remove(size - 1);\n+    return _skippedElements.remove(size - 1);\n   }\n \n   /**\n@@ -457,6 +474,9 @@ private void _pushOutputtedElement(\n   private boolean     _dontEscape;\n \n   private Writer       _out;\n+  // -= Simon Lessard =-\n+  // FIXME: Never read locally\n+  @SuppressWarnings(\"unused\")\n   private String       _contentType;\n   private String       _encoding;\n \n@@ -465,13 +485,13 @@ private void _pushOutputtedElement(\n \n   // stack of skipped and unskipped elements used to determine when\n   // to suppress the end tag of a skipped element\n-  private final ArrayList   _skippedElements = new ArrayList(20);\n+  private final ArrayList<String> _skippedElements = new ArrayList<String>(20);\n \n \n-  private static final Class _CHAR_ARRAY_CLASS = (new char[0]).getClass();\n-  private static final Class _BOOLEAN_CLASS = Boolean.class;\n-  private static final Class _INTEGER_CLASS = Integer.class;\n-  private static final Class _ESCAPED_TEXT_CLASS = EscapedText.class;\n+  private static final Class<?> _CHAR_ARRAY_CLASS = (new char[0]).getClass();\n+  private static final Class<?> _BOOLEAN_CLASS = Boolean.class;\n+  private static final Class<?> _INTEGER_CLASS = Integer.class;\n+  private static final Class<?> _ESCAPED_TEXT_CLASS = EscapedText.class;\n \n   static private final TrinidadLogger _LOG = TrinidadLogger.createTrinidadLogger(XhtmlResponseWriter.class);\n }", "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/io/XhtmlResponseWriter.java"}, {"additions": 44, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/metadata/RegionMetadata.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/metadata/RegionMetadata.java", "sha": "3ce7337697094d81a32251e5b581d8f49373dd93", "changes": 66, "status": "modified", "deletions": 22, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/metadata/RegionMetadata.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add", "patch": "@@ -51,13 +51,20 @@\n  */\n public final class RegionMetadata extends RegionManager\n {\n-\n+  @SuppressWarnings(\"unchecked\")\n+  private RegionMetadata()\n+  {\n+    _map = Collections.EMPTY_MAP;\n+  }\n+  \n+  @Override\n   public RegionConfig getRegionConfig(String regionType)\n   {\n-    return (ComponentMetaData) _map.get(regionType);\n+    return _map.get(regionType);\n   }\n \n-  public Map getRegionConfigs()\n+  @Override\n+  public Map<String, RegionConfig> getRegionConfigs()\n   {\n     return Collections.unmodifiableMap(_map);\n   }\n@@ -69,10 +76,11 @@ public Map getRegionConfigs()\n    * All resources with the name \"/META-INF/region-metadata.xml\" will be searched.\n    * /WEB-INF/region-metadata.xml will also be searched.\n    */\n+  @SuppressWarnings(\"unchecked\")\n   public static synchronized RegionMetadata getRegionMetadata(\n     FacesContext context)\n   {\n-    Map appMap = context.getExternalContext().getApplicationMap();\n+    Map<String, Object> appMap = context.getExternalContext().getApplicationMap();\n     RegionMetadata bean = (RegionMetadata) appMap.get(_KEY);\n     if (bean == null)\n     {\n@@ -109,9 +117,10 @@ public static synchronized RegionMetadata getRegionMetadata(\n    * The next time {@link #getRegionMetadata} is called, it\n    * will reparse all the region-metadata.xml files.\n    */\n+  @SuppressWarnings(\"unchecked\")\n   public static synchronized void invalidate(FacesContext context)\n   {\n-    Map appMap = context.getExternalContext().getApplicationMap();\n+    Map<String, Object> appMap = context.getExternalContext().getApplicationMap();\n     appMap.remove(_KEY);\n   }\n \n@@ -126,10 +135,10 @@ private static void _readAllRegionMDFiles(\n     }\n     try\n     {\n-      Enumeration files = loader.getResources(regionMDFile);\n+      Enumeration<URL> files = loader.getResources(regionMDFile);\n       while(files.hasMoreElements())\n       {\n-        URL url = (URL)files.nextElement();\n+        URL url = files.nextElement();\n         String publicId = url.toString();\n         try\n         {\n@@ -196,20 +205,16 @@ private void _put(String componentType, ComponentMetaData comp)\n     }\n     if (_map == Collections.EMPTY_MAP)\n     {\n-      _map = new HashMap(5);\n+      _map = new HashMap<String, RegionConfig>(5);\n     }\n-    ComponentMetaData old = (ComponentMetaData) _map.put(componentType, comp);\n+    RegionConfig old = _map.put(componentType, comp);\n     if (old != null)\n     {\n       _LOG.warning(\"Replaced jspUri {0} with {1} for componentType:{2}\",\n         new Object[] {old.getJspUIDef(), comp.getJspUIDef(), componentType});\n     }\n   }\n \n-  private RegionMetadata()\n-  {\n-  }\n-\n \n   static private class Handler extends DefaultHandler\n   {\n@@ -218,6 +223,7 @@ public Handler(RegionMetadata bean)\n       _bean = bean;\n     }\n \n+    @Override\n     public InputSource resolveEntity (String publicId, String systemId)\n     \tthrows SAXException\n     {\n@@ -226,12 +232,14 @@ public InputSource resolveEntity (String publicId, String systemId)\n       return new InputSource(new StringReader(\"\"));\n     }\n \n+    @Override\n     public void setDocumentLocator(Locator locator)\n     {\n       super.setDocumentLocator(locator);\n       _loc = locator;\n     }\n \n+    @Override\n     public void startElement(String uri,\n                              String localName,\n                              String qName,\n@@ -315,6 +323,7 @@ private boolean _changeState(String localName, String tag, int newState)\n       return false;\n     }\n \n+    @Override\n     public void characters(char[] ch, int start, int length)\n     {\n       switch(_state)\n@@ -330,6 +339,7 @@ public void characters(char[] ch, int start, int length)\n       }\n     }\n \n+    @Override\n     public void endElement(String uri,\n                            String localName,\n                            String qName)\n@@ -398,7 +408,7 @@ private void _addComponentMetadata()\n       _comp._trim(); // no more attributes will be added, so trim-to-size\n     }\n \n-    private Class _getClass(String javaType)\n+    private Class<?> _getClass(String javaType)\n     {\n       String className = ConvertBoundValue.getClassName(javaType);\n       try\n@@ -477,16 +487,17 @@ private void _skip(String localName)\n \n   public static final class AttributeMetaData\n   {\n-    private String _name, _default;\n-    private Class _class;\n+    private String _default;\n+    private String _name;\n+    private Class<?> _class;\n     private boolean _required = false;\n \n     public String getAttrName()\n     {\n       return _name;\n     }\n \n-    public Class getAttrClass()\n+    public Class<?> getAttrClass()\n     {\n       return _class;\n     }\n@@ -504,30 +515,37 @@ public boolean isRequired()\n \n   public static final class ComponentMetaData extends RegionConfig\n   {\n-    private String _jsp, _regionType;\n-    private List _attrs = Collections.EMPTY_LIST;\n+    @SuppressWarnings(\"unchecked\")\n+    public ComponentMetaData()\n+    {\n+      _attrs = Collections.EMPTY_LIST;\n+    }\n \n+    @Override\n     public String getDescription()\n     {\n       return null;\n     }\n \n+    @Override\n     public String getDisplayName()\n     {\n       return null;\n     }\n \n+    @Override\n     public String getComponentType()\n     {\n       return _regionType;\n     }\n \n+    @Override\n     public String getJspUIDef()\n     {\n       return _jsp;\n     }\n \n-    public List getAttributes()\n+    public List<AttributeMetaData> getAttributes()\n     {\n       return _attrs;\n     }\n@@ -536,7 +554,7 @@ private void _addAttribute(AttributeMetaData attr)\n     {\n       if (_attrs == Collections.EMPTY_LIST)\n       {\n-        _attrs = new ArrayList(5);\n+        _attrs = new ArrayList<AttributeMetaData>(5);\n       }\n       _attrs.add(attr);\n     }\n@@ -546,9 +564,13 @@ public void _trim()\n       if (_attrs instanceof ArrayList)\n         ((ArrayList) _attrs).trimToSize();\n     }\n+    \n+    private String _jsp;\n+    private String _regionType;\n+    private List<AttributeMetaData> _attrs;\n   }\n \n-  private Map _map = Collections.EMPTY_MAP;\n+  private Map<String, RegionConfig> _map;\n \n   private static final int _STATE_INIT = 0;\n   private static final int _STATE_SKIP = 10;", "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/metadata/RegionMetadata.java"}, {"additions": 1, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/ClassRendererInstantiator.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/ClassRendererInstantiator.java", "sha": "da87a55edb5b09abd187e90a4eae8b7516126f04", "changes": 2, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/ClassRendererInstantiator.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add", "patch": "@@ -43,7 +43,7 @@ public Renderer instantiate()\n   {\n     try\n     {\n-      Class classInstance = ClassLoaderUtils.loadClass(_className);\n+      Class<?> classInstance = ClassLoaderUtils.loadClass(_className);\n       return (Renderer) classInstance.newInstance();\n     }\n     catch (ClassNotFoundException cnfe)", "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/ClassRendererInstantiator.java"}, {"additions": 5, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/CoreRenderKitFactory.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/CoreRenderKitFactory.java", "sha": "54f0e76cdfe9b0b94bcc3478ecd2f5ecaa6aaca0", "changes": 8, "status": "modified", "deletions": 3, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/CoreRenderKitFactory.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add", "patch": "@@ -36,13 +36,13 @@ public CoreRenderKitFactory(RenderKitFactory factory)\n     _factory = factory;\n   }\n \n-\n+  @Override\n   public void addRenderKit(String renderKitId, RenderKit renderKit)\n   {\n     _factory.addRenderKit(renderKitId, renderKit);\n   }\n \n-\n+  @Override\n   public RenderKit getRenderKit(FacesContext context, String renderKitId)\n   {\n     if (CoreRenderKit.getId().equals(renderKitId))\n@@ -53,7 +53,9 @@ public RenderKit getRenderKit(FacesContext context, String renderKitId)\n     return _factory.getRenderKit(context, renderKitId);\n   }\n \n-  public Iterator getRenderKitIds()\n+  @SuppressWarnings(\"unchecked\")\n+  @Override\n+  public Iterator<String> getRenderKitIds()\n   {\n     return _factory.getRenderKitIds();\n   }", "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/CoreRenderKitFactory.java"}, {"additions": 2, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/RenderKitBase.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/RenderKitBase.java", "sha": "f39058aacc505e6591088906428dc5fa0cdd7d72", "changes": 2, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/RenderKitBase.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add", "patch": "@@ -55,6 +55,7 @@ public RenderKitBase()\n    * @exception NullPointerException if <code>rendererType</code> or\n    *  <code>renderer</code> is null\n    */\n+  @Override\n   public void addRenderer(\n      String family,\n      String rendererType,\n@@ -109,6 +110,7 @@ public void addRenderer(String family,\n    * @exception NullPointerException if <code>rendererType</code>\n    *  is <code>null</code>\n    */\n+  @Override\n   public Renderer getRenderer(String family, String rendererType)\n   {\n     Renderer renderer = findRenderer(family, rendererType);", "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/RenderKitBase.java"}, {"additions": 6, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/RenderKitDecorator.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/RenderKitDecorator.java", "sha": "b9ae330d809dcf8068b4600169a40d4e198794ac", "changes": 10, "status": "modified", "deletions": 4, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/RenderKitDecorator.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add", "patch": "@@ -37,6 +37,7 @@\n     return Service.getService(getRenderKit(), serviceClass);\n   }\n \n+  @Override\n   public ResponseWriter createResponseWriter(\n     Writer writer,\n     String contentTypeList,\n@@ -49,17 +50,17 @@ public ResponseWriter createResponseWriter(\n     return createDecoratedResponseWriter(out);\n   }\n \n+  @Override\n   public ResponseStream createResponseStream(\n     OutputStream out)\n   {\n-    RenderKit renderKit = getRenderKit();\n-    return renderKit.createResponseStream(out);\n+    return getRenderKit().createResponseStream(out);\n   }\n \n+  @Override\n   public ResponseStateManager getResponseStateManager()\n   {\n-    RenderKit renderKit = getRenderKit();\n-    return renderKit.getResponseStateManager();\n+    return getRenderKit().getResponseStateManager();\n   }\n \n   protected ResponseWriter createDecoratedResponseWriter(\n@@ -68,6 +69,7 @@ protected ResponseWriter createDecoratedResponseWriter(\n     return delegate;\n   }\n \n+  @Override\n   protected Renderer findRenderer(\n     String componentFamily,\n     String rendererType)", "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/RenderKitDecorator.java"}, {"additions": 6, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/RenderUtils.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/RenderUtils.java", "sha": "fc4fc08fef4eadcf1fe99b17410c4d7258590297", "changes": 10, "status": "modified", "deletions": 4, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/RenderUtils.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add", "patch": "@@ -16,7 +16,7 @@\n package org.apache.myfaces.trinidadinternal.renderkit;\n \n import java.io.IOException;\n-import java.util.Iterator;\n+import java.util.List;\n \n import javax.faces.component.UIComponent;\n import javax.faces.component.UIForm;\n@@ -40,6 +40,7 @@ private RenderUtils()\n   /**\n    * Encodes a component and all of its children.\n    */\n+  @SuppressWarnings(\"unchecked\")\n   static public void encodeRecursive(FacesContext context,\n                                      UIComponent component)\n     throws IOException\n@@ -55,9 +56,10 @@ static public void encodeRecursive(FacesContext context,\n       {\n         if (component.getChildCount() > 0)\n         {\n-          Iterator children = component.getChildren().iterator();\n-          while (children.hasNext())\n-            encodeRecursive(context, (UIComponent) children.next());\n+          for(UIComponent child : (List<UIComponent>)component.getChildren())\n+          {\n+            encodeRecursive(context, child);\n+          }\n         }\n       }\n ", "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/RenderUtils.java"}, {"additions": 8, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/RenderingContext.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/RenderingContext.java", "sha": "0e200af1fca081a1e119c5a220c29e7d34120f83", "changes": 14, "status": "modified", "deletions": 6, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/RenderingContext.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add", "patch": "@@ -39,7 +39,7 @@\n    */\n   static public RenderingContext getCurrentInstance()\n   {\n-    return (RenderingContext) _CURRENT_CONTEXT.get();\n+    return _CURRENT_CONTEXT.get();\n   }\n \n   static public final Object INACCESSIBLE_MODE =\n@@ -55,7 +55,7 @@ public RenderingContext()\n   /**\n    * A map of properties specific to rendering.\n    */\n-  abstract public Map           getProperties();\n+  abstract public Map<Object, Object> getProperties();\n \n   abstract public TrinidadAgent getAgent();\n   /**\n@@ -101,8 +101,8 @@ public String getTranslatedString(String key)\n \n \n   abstract public String getStyleClass(String styleClass);\n-  abstract public void   setSkinResourceKeyMap(Map mapping);\n-  abstract public Map    getSkinResourceKeyMap();\n+  abstract public void   setSkinResourceKeyMap(Map<String, String> mapping);\n+  abstract public Map<String, String> getSkinResourceKeyMap();\n   abstract public boolean isRightToLeft();\n   abstract public String getOutputMode();\n   abstract public Object getAccessibilityMode();\n@@ -128,7 +128,7 @@ public void release()\n   {\n     Object o = _CURRENT_CONTEXT.get();\n     // Clean up first...\n-    _CURRENT_CONTEXT.set(null);\n+    _CURRENT_CONTEXT.remove();\n \n     // Then see if there's a problem, and scream if there is one\n     if (o == null)\n@@ -164,7 +164,9 @@ protected void attach()\n   }\n \n \n-  static private final ThreadLocal _CURRENT_CONTEXT = new ThreadLocal();\n+  static private final ThreadLocal<RenderingContext> _CURRENT_CONTEXT = \n+    new ThreadLocal<RenderingContext>();\n+  \n   static private final TrinidadLogger _LOG =\n     TrinidadLogger.createTrinidadLogger(RenderingContext.class);\n }", "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/RenderingContext.java"}, {"additions": 47, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/CoreRenderKit.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/CoreRenderKit.java", "sha": "6313591bdc031c9686562038e42a09a842419112", "changes": 74, "status": "modified", "deletions": 27, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/CoreRenderKit.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add", "patch": "@@ -21,7 +21,6 @@\n \n import java.util.ArrayList;\n import java.util.HashMap;\n-import java.util.Iterator;\n import java.util.List;\n import java.util.Map;\n \n@@ -163,7 +162,9 @@ public CoreRenderKit()\n   static public void saveDialogPostbackValues(\n     String returnId)\n   {\n-    Map pageFlowScope = RequestContext.getCurrentInstance().getPageFlowScope();\n+    Map<String, Object> pageFlowScope = \n+      RequestContext.getCurrentInstance().getPageFlowScope();\n+    \n     pageFlowScope.put(_RETURN_ID, returnId);\n   }\n \n@@ -172,13 +173,14 @@ static public void saveDialogPostbackValues(\n   //\n \n \n+  @SuppressWarnings(\"unchecked\")\n   public boolean launchDialog(\n-    FacesContext context,\n-    UIViewRoot   targetRoot,\n-    UIComponent  source,\n-    Map          processParameters,\n-    boolean      useWindow,\n-    Map          windowProperties)\n+    FacesContext       context,\n+    UIViewRoot         targetRoot,\n+    UIComponent        source,\n+    Map<String,Object> processParameters,\n+    boolean            useWindow,\n+    Map<String,Object> windowProperties)\n   {\n     // If we're not being asked to use a separate window,\n     // just fallback on the default launchDialog() code\n@@ -194,17 +196,19 @@ public boolean launchDialog(\n     String formId = RenderUtils.getFormId(context, source);\n \n     if (windowProperties == null)\n-      windowProperties = new HashMap();\n+      windowProperties = new HashMap<String,Object>();\n \n     // Copy properties from the source component to the dialog properties\n     if (source != null)\n     {\n-      Map sourceAttrs = source.getAttributes();\n+      Map<String, Object> sourceAttrs = source.getAttributes();\n       _copyProperty(windowProperties, \"width\", sourceAttrs, \"windowWidth\");\n       _copyProperty(windowProperties, \"height\", sourceAttrs, \"windowHeight\");\n     }\n \n-    Map pageFlowScope = RequestContext.getCurrentInstance().getPageFlowScope();\n+    Map<String, Object> pageFlowScope = \n+      RequestContext.getCurrentInstance().getPageFlowScope();\n+    \n     if (processParameters != null)\n       pageFlowScope.putAll(processParameters);\n \n@@ -254,12 +258,14 @@ public boolean returnFromDialog(\n     return true;\n   }\n \n-\n+  @SuppressWarnings(\"unchecked\")\n   public boolean isReturning(\n     FacesContext context,\n     UIComponent  source)\n   {\n-    Map parameterMap = context.getExternalContext().getRequestParameterMap();\n+    Map<String, String> parameterMap = \n+      context.getExternalContext().getRequestParameterMap();\n+    \n     Object returning = parameterMap.get(RETURN_PARAM);\n     if ((returning == null) || \"\".equals(returning))\n       return false;\n@@ -277,12 +283,14 @@ public boolean isReturning(\n   // BEGIN ExtendedRenderKitService\n   //\n \n+  @SuppressWarnings(\"unchecked\")\n   public boolean shortCircuitRenderView(\n     FacesContext context) throws IOException\n   {\n     if (PartialPageUtils.isPartialRequest(context))\n     {\n-      Map requestMap = context.getExternalContext().getRequestMap();\n+      Map<String, Object> requestMap = \n+        context.getExternalContext().getRequestMap();\n \n       UIViewRoot originalRoot = (UIViewRoot) requestMap.get(\n                          TrinidadPhaseListener.INITIAL_VIEW_ROOT_KEY);\n@@ -436,17 +444,20 @@ public void encodeFinally(FacesContext context)\n   //\n \n \n+  @Override\n   public ResponseStateManager getResponseStateManager()\n   {\n     return _rsm;\n   }\n \n+  @Override\n   public ResponseStream createResponseStream(OutputStream out)\n   {\n     // =-=AEW What to do here???\n     throw new UnsupportedOperationException();\n   }\n \n+  @Override\n   public ResponseWriter createResponseWriter(Writer writer,\n                                              String contentTypeList,\n                                              String characterEncoding)\n@@ -555,31 +566,40 @@ private void _addBasicHTMLRenderKit()\n   }\n \n \n+  @SuppressWarnings(\"unchecked\")\n   private List<DialogRequest> _getDialogList(\n     FacesContext context,\n     boolean      createIfNew)\n   {\n-    Map requestMap = context.getExternalContext().getRequestMap();\n-    List<DialogRequest> l = (List<DialogRequest>)\n-      requestMap.get(_DIALOG_LIST_KEY);\n+    Map<String, Object> requestMap = \n+      context.getExternalContext().getRequestMap();\n+    \n+    List<DialogRequest> l = \n+      (List<DialogRequest>)requestMap.get(_DIALOG_LIST_KEY);\n+    \n     if ((l == null) && createIfNew)\n     {\n-      l = new ArrayList();\n+      l = new ArrayList<DialogRequest>();\n       requestMap.put(_DIALOG_LIST_KEY, l);\n     }\n \n     return l;\n   }\n \n+  @SuppressWarnings(\"unchecked\")\n   private List<String> _getScriptList(\n     FacesContext context,\n     boolean      createIfNew)\n   {\n-    Map requestMap = context.getExternalContext().getRequestMap();\n-    List<String> l = (List<String>) requestMap.get(_SCRIPT_LIST_KEY);\n+    Map<String, Object> requestMap = \n+      context.getExternalContext().getRequestMap();\n+    \n+    List<String> l = \n+      (List<String>) requestMap.get(_SCRIPT_LIST_KEY);\n+    \n     if ((l == null) && createIfNew)\n     {\n-      l = new ArrayList();\n+      l = new ArrayList<String>();\n       requestMap.put(_SCRIPT_LIST_KEY, l);\n     }\n \n@@ -640,15 +660,15 @@ private Writer _getHtmlWriter(FacesContext context) throws IOException\n   };\n \n \n-  static private void _copyProperty(\n-    Map    toMap,\n-    Object toKey,\n-    Map    fromMap,\n-    Object fromKey)\n+  static private <K1, K2, V> void _copyProperty(\n+    Map<K1, V> toMap,\n+    K1 toKey,\n+    Map<K2, ? extends V> fromMap,\n+    K2 fromKey)\n   {\n     if (!toMap.containsKey(toKey))\n     {\n-      Object o = fromMap.get(fromKey);\n+      V o = fromMap.get(fromKey);\n       if (o != null)\n         toMap.put(toKey, o);\n     }", "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/CoreRenderKit.java"}, {"additions": 26, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/CoreRenderer.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/CoreRenderer.java", "sha": "69f355b5e80d0af89270c91abfcf484fc979d5e4", "changes": 52, "status": "modified", "deletions": 26, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/CoreRenderer.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add", "patch": "@@ -145,6 +145,7 @@ static public char toChar(Object o)\n   }\n \n \n+  @Override\n   public final void encodeBegin(FacesContext context,\n                           UIComponent component) throws IOException\n   {\n@@ -159,12 +160,14 @@ public final void encodeBegin(FacesContext context,\n     }\n   }\n \n+  @Override\n   public final void encodeChildren(FacesContext context, UIComponent component)\n   {\n     // encodeChildren() is fairly useless - it's simpler to just\n     // put the output in encodeEnd(), or use the encodeAll() hook\n   }\n \n+  @Override\n   public final void encodeEnd(FacesContext context,\n                         UIComponent component) throws IOException\n   {\n@@ -232,6 +235,7 @@ protected void encodeAll(\n    * can be used if you don't need that check.)\n    * =-=AEW Ugh.\n    */\n+  @SuppressWarnings(\"unchecked\")\n   protected void encodeChild(\n     FacesContext context,\n     UIComponent  child) throws IOException\n@@ -246,16 +250,18 @@ protected void encodeChild(\n     {\n       if (child.getChildCount() > 0)\n       {\n-        Iterator children = child.getChildren().iterator();\n-        while (children.hasNext())\n-          RenderUtils.encodeRecursive(context, (UIComponent) children.next());\n+        for(UIComponent subChild : (List<UIComponent>)child.getChildren())\n+        {\n+          RenderUtils.encodeRecursive(context, subChild);\n+        }\n       }\n     }\n     \n     child.encodeEnd(context);\n   }\n \n \n+  @SuppressWarnings(\"unchecked\")\n   protected final void encodeAllChildren(\n     FacesContext context,\n     UIComponent  component) throws IOException\n@@ -264,14 +270,12 @@ protected final void encodeAllChildren(\n     if (childCount == 0)\n       return;\n     \n-    List children   = component.getChildren();\n-    for (int i = 0; i < childCount; i++)\n+    for(UIComponent child : (List<UIComponent>)component.getChildren())\n     {\n-      UIComponent child = (UIComponent) children.get(i);\n-      if (!child.isRendered())\n-        continue;\n-\n-      encodeChild(context, child);\n+      if (child.isRendered())\n+      {\n+        encodeChild(context, child);\n+      }\n     }\n   }\n \n@@ -442,18 +446,19 @@ static public UIComponent getFacet(\n    * Returns true if the component has children and at least\n    * one has rendered==\"true\".\n    */\n+  @SuppressWarnings(\"unchecked\")\n   static public boolean hasRenderedChildren(UIComponent component)\n   {\n     int count = component.getChildCount();\n     if (count == 0)\n       return false;\n       \n-    List children = component.getChildren();\n-    for (int i = 0; i < count; i++)\n+    for(UIComponent child : (List<UIComponent>)component.getChildren())\n     {\n-      UIComponent child = (UIComponent) children.get(i);\n       if (child.isRendered())\n+      {\n         return true;\n+      }\n     }\n     \n     return false;\n@@ -462,19 +467,20 @@ static public boolean hasRenderedChildren(UIComponent component)\n   /**\n    * Returns the total number of children with rendered==\"true\".\n    */\n+  @SuppressWarnings(\"unchecked\")\n   static public int getRenderedChildCount(UIComponent component)\n   {\n     int count = component.getChildCount();\n     if (count == 0)\n       return 0;\n       \n     int total = 0;\n-    List children = component.getChildren();\n-    for (int i = 0; i < count; i++)\n+    for(UIComponent child : (List<UIComponent>)component.getChildren())\n     {\n-      UIComponent child = (UIComponent) children.get(i);\n       if (child.isRendered())\n+      {\n         total++;\n+      }\n     }\n     \n     return total;\n@@ -488,26 +494,20 @@ static public int getRenderedChildCount(UIComponent component)\n    * {@link #NO_CHILD_INDEX} if there is none.\n    */\n   public static int getNextRenderedChildIndex(\n-    List components,\n+    List<UIComponent> components,\n     int  afterChildIndex\n     )\n   {\n-    int childCount = components.size();\n     int childIndex = afterChildIndex + 1;\n-\n-    for (; childIndex < childCount; childIndex++)\n+    Iterator<UIComponent> iter = components.listIterator(childIndex);\n+    for(; iter.hasNext(); childIndex++)\n     {\n-      UIComponent currChild = (UIComponent)components.get(childIndex);\n-\n-      if (currChild.isRendered())\n+      if(iter.next().isRendered())\n       {\n         return childIndex;\n       }\n     }\n \n     return NO_CHILD_INDEX;\n   }\n-\n-  \n-\n }", "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/CoreRenderer.java"}, {"additions": 53, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/CoreRenderingContext.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/CoreRenderingContext.java", "sha": "5a9965b81390732f6cc263eb898d0e33b50a515a", "changes": 77, "status": "modified", "deletions": 24, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/CoreRenderingContext.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add", "patch": "@@ -62,6 +62,8 @@ public CoreRenderingContext()\n     FacesContext context = FacesContext.getCurrentInstance();\n     RequestContext afContext = RequestContext.getCurrentInstance();\n \n+    _properties = new HashMap<Object, Object>();\n+    \n     _outputMode = afContext.getOutputMode();\n     _agent = _initializeAgent(context, afContext.getAgent(), _outputMode);\n \n@@ -122,16 +124,19 @@ public void setLinkDisabled(boolean isDisabled)\n \n   // Implementation of AdfRenderingContext\n \n-  public Map getProperties()\n+  @Override\n+  public Map<Object, Object> getProperties()\n   {\n     return _properties;\n   }\n \n+  @Override\n   public TrinidadAgent getAgent()\n   {\n     return _agent;\n   }\n \n+  @Override\n   public boolean isRightToLeft()\n   {\n     if (_localeContext != null)\n@@ -142,12 +147,14 @@ public boolean isRightToLeft()\n     return RequestContext.getCurrentInstance().isRightToLeft();\n   }\n \n+  @Override\n   public String getOutputMode()\n   {\n     return _outputMode;\n   }\n \n \n+  @Override\n   public Object getAccessibilityMode()\n   {\n     return _accessibilityMode;\n@@ -156,23 +163,27 @@ public Object getAccessibilityMode()\n   /**\n    * This will create a FormData object if it's null.\n    */\n+  @Override\n   public FormData getFormData()\n   {\n     assert(_formData != null);\n     return _formData;\n   }\n \n+  @Override\n   public void setFormData(FormData formData)\n   {\n     _formData = formData;\n   }\n \n+  @Override\n   public void clearFormData()\n   {\n     _formData = null;\n   }\n \n \n+  @Override\n   public Skin getSkin()\n   {\n     return _skin;\n@@ -181,6 +192,7 @@ public Skin getSkin()\n   /**\n    * Get an interface that can be used for style lookups and generation.\n    */\n+  @Override\n   public StyleContext getStyleContext()\n   {\n     if (_styleContext == null)\n@@ -195,6 +207,7 @@ public StyleContext getStyleContext()\n   }\n \n \n+  @Override\n   public LocaleContext getLocaleContext()\n   {\n     // Initialize the locale context lazily, because we may\n@@ -209,11 +222,13 @@ public LocaleContext getLocaleContext()\n     return _localeContext;\n   }\n \n+  @Override\n   public PartialPageContext getPartialPageContext()\n   {\n     return _pprContext;\n   }\n \n+  @Override\n   public String getStyleClass(String styleClass)\n   {\n     if (styleClass == null) return null;\n@@ -222,7 +237,7 @@ public String getStyleClass(String styleClass)\n     String shortenedStyle = null;\n     if (_styleMap != null)\n     {\n-      shortenedStyle = (String) _styleMap.get(styleClass);\n+      shortenedStyle = _styleMap.get(styleClass);\n     }\n \n     if (shortenedStyle != null)\n@@ -238,7 +253,7 @@ public String getStyleClass(String styleClass)\n     return styleClass;\n   }\n \n-\n+  @Override\n   public Icon getIcon(String iconName)\n   {\n     iconName = getSkinResourceMappedKey(iconName);\n@@ -280,7 +295,7 @@ public Icon getIcon(String iconName)\n   /**\n    * Store a map that provides abbreviations of styles.\n    */\n-  public void setStyleMap(Map mapping)\n+  public void setStyleMap(Map<String, String> mapping)\n   {\n     _styleMap = mapping;\n   }\n@@ -289,7 +304,8 @@ public void setStyleMap(Map mapping)\n   /**\n    * Store a Map that maps a skin's resource keys from one key to another.\n    */\n-  public void setSkinResourceKeyMap(Map mapping)\n+  @Override\n+  public void setSkinResourceKeyMap(Map<String, String> mapping)\n   {\n     _skinResourceKeyMap = mapping;\n   }\n@@ -298,18 +314,19 @@ public void setSkinResourceKeyMap(Map mapping)\n   /**\n    * Get the _skinResourceKeyMap Map.\n    */\n-  public Map getSkinResourceKeyMap()\n+  @Override\n+  public Map<String, String> getSkinResourceKeyMap()\n   {\n     return _skinResourceKeyMap;\n   }\n \n   protected String getSkinResourceMappedKey(String key)\n   {\n-    Map keyMap = getSkinResourceKeyMap();\n+    Map<String, String> keyMap = getSkinResourceKeyMap();\n \n     if (keyMap != null)\n     {\n-      String mappedKey = (String) keyMap.get(key);\n+      String mappedKey = keyMap.get(key);\n       // if it isn't in the map, just use the key itself.\n       if (mappedKey != null)\n       {\n@@ -415,11 +432,14 @@ private void _initializePPR(\n    * Get the directory for temporary files.\n    * @todo: move into the util package?\n    */\n+  @SuppressWarnings(\"unchecked\")\n   static public String getTemporaryDirectory(FacesContext fContext)\n   {\n     String path = null;\n \n-    Map applicationMap = fContext.getExternalContext().getApplicationMap();\n+    Map<String, Object> applicationMap = \n+      fContext.getExternalContext().getApplicationMap();\n+    \n     if (applicationMap != null)\n     {\n       // In general, write to the Servlet spec'd temporary directory\n@@ -482,23 +502,32 @@ private void _initializeLocaleContext(\n   }\n \n \n-  private Skin               _skin;\n-  private FormData           _formData;\n-  private TrinidadAgent      _agent;\n-  private Map                _styleMap;\n-  private Map                _skinResourceKeyMap;\n-  private String             _outputMode;\n-  private Object             _accessibilityMode;\n-  private PartialPageContext _pprContext;\n-  private LocaleContext      _localeContext;\n-  private StyleContext       _styleContext;\n-  private Map                _properties = new HashMap();\n-  private int                _linkStyleDisabledCount = 0;\n-  private boolean            _isLinkDisabled = false;\n+  private Skin                _skin;\n+  private FormData            _formData;\n+  private TrinidadAgent       _agent;\n+  private Map<String, String> _styleMap;\n+  private Map<String, String> _skinResourceKeyMap;\n+  private String              _outputMode;\n+  private Object              _accessibilityMode;\n+  private PartialPageContext  _pprContext;\n+  private LocaleContext       _localeContext;\n+  private StyleContext        _styleContext;\n+  private Map<Object, Object> _properties;\n+  private int                 _linkStyleDisabledCount = 0;\n+  private boolean             _isLinkDisabled = false;\n \n   // Maps describing the capabilities of our output modes\n-  static private final Map _PRINTABLE_CAPABILITIES = new HashMap();\n-  static private final Map _EMAIL_CAPABILITIES = new HashMap();\n+  // -= Simon Lessard =-\n+  // FIXME: Cannot use CapabilityKey in the generic definition because \n+  //        CapabilityKey is not in the public API and those map are \n+  //        used as a parameter in an API call receiving a \n+  //        Map<Object, Object> argument\n+  static private final Map<Object, Object> _PRINTABLE_CAPABILITIES = \n+    new HashMap<Object, Object>();\n+  \n+  static private final Map<Object, Object> _EMAIL_CAPABILITIES = \n+    new HashMap<Object, Object>();\n+  \n   static\n   {\n     _PRINTABLE_CAPABILITIES.put(TrinidadAgent.CAP_INTRINSIC_EVENTS,", "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/CoreRenderingContext.java"}, {"additions": 9, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/CoreResponseStateManager.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/CoreResponseStateManager.java", "sha": "948f9dea315f7b5c1669537793b7a22699c0ea7d", "changes": 12, "status": "modified", "deletions": 3, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/CoreResponseStateManager.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add", "patch": "@@ -59,6 +59,7 @@\n    *       instead of buffering it.\n    * @todo Don't directly write out hidden input field;  use an abstraction\n    */\n+  @Override\n   public void writeState(\n     FacesContext context,\n     StateManager.SerializedView serializedView) throws IOException\n@@ -102,6 +103,7 @@ protected String encodeSerializedViewAsString(\n     return retVal;\n   }\n \n+  @Override\n   public Object getTreeStructureToRestore(FacesContext context,\n                                           String viewId)\n   {\n@@ -112,6 +114,7 @@ public Object getTreeStructureToRestore(FacesContext context,\n     return view[0];\n   }\n \n+  @Override\n   public Object getComponentStateToRestore(FacesContext context)\n   {\n     Object[] view = _restoreSerializedView(context);\n@@ -127,17 +130,20 @@ public Object getComponentStateToRestore(FacesContext context)\n    * @todo ensure that the caching never gets confused by two\n    *       different views being reconstituted in the same request?\n    */\n+  @SuppressWarnings(\"unchecked\")\n   private Object[] _restoreSerializedView(\n      FacesContext context)\n   {\n-    Map requestMap = context.getExternalContext().getRequestMap();\n+    Map<String, Object> requestMap = \n+      context.getExternalContext().getRequestMap();\n+    \n     Object[] view = (Object[]) requestMap.get(_CACHED_SERIALIZED_VIEW);\n     if (view == null)\n     {\n-      Map requestParamMap =\n+      Map<String, String> requestParamMap =\n          context.getExternalContext().getRequestParameterMap();\n \n-      String stateString = (String) requestParamMap.get(_STATE_FIELD_NAME);\n+      String stateString = requestParamMap.get(_STATE_FIELD_NAME);\n       if (stateString == null)\n         return null;\n ", "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/CoreResponseStateManager.java"}, {"additions": 14, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/DialogRequest.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/DialogRequest.java", "sha": "c13d641347109af82cdffa5a375f18104be8f323", "changes": 26, "status": "modified", "deletions": 12, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/DialogRequest.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add", "patch": "@@ -34,15 +34,16 @@\n  */\n class DialogRequest\n {\n+  @SuppressWarnings(\"unchecked\")\n   public DialogRequest(\n-    UIViewRoot targetRoot,\n-    String     clientId,\n-    String     formId,\n-    Map        dialogProperties\n+    UIViewRoot         targetRoot,\n+    String             clientId,\n+    String             formId,\n+    Map<String,Object> dialogProperties\n     )\n   {\n-    _clientId          = clientId;\n-    _formId             = formId;\n+    _clientId = clientId;\n+    _formId   = formId;\n \n     if (dialogProperties == null)\n       dialogProperties = Collections.EMPTY_MAP;\n@@ -54,6 +55,7 @@ public DialogRequest(\n                                   targetRoot,\n                                   CoreRenderer.toString(width),\n                                   CoreRenderer.toString(height));\n+    \n     _dialogProperties  = dialogProperties;\n   }\n \n@@ -99,10 +101,10 @@ public void renderLaunchJavascript(\n       out.writeText(_DEFAULT_HEIGHT, null);\n     }\n \n-    Iterator propertiesIter = _dialogProperties.keySet().iterator();\n+    Iterator<String> propertiesIter = _dialogProperties.keySet().iterator();\n     while (propertiesIter.hasNext())\n     {\n-      Object key = propertiesIter.next();\n+      String key = propertiesIter.next();\n       Object value = _dialogProperties.get(key);\n       // =-=AEW When to put in quotes????\n       if (value != null)\n@@ -143,10 +145,10 @@ static private synchronized String _getDialogWindowName()\n     return \"ADFDialog\" + _sCount++;\n   }\n \n-  private final String     _clientId;\n-  private final String     _formId;\n-  private final String     _url;\n-  private final Map        _dialogProperties;\n+  private final String             _clientId;\n+  private final String             _formId;\n+  private final String             _url;\n+  private final Map<String,Object> _dialogProperties;\n \n \n   // Some default widths and heights to avoid popping up huge", "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/DialogRequest.java"}, {"additions": 1, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/desktop/DesktopRenderKit.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/desktop/DesktopRenderKit.java", "sha": "9336b15177a770856af76add7eaf0f7e169223d3", "changes": 2, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/desktop/DesktopRenderKit.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add", "patch": "@@ -30,9 +30,9 @@ public DesktopRenderKit()\n                 new TrainRenderer());\n   }\n \n+  @Override\n   protected String getDecoratedRenderKitId()\n   {\n     return CoreRenderKit.BASE_RENDER_KIT_ID;\n   }\n-\n }", "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/desktop/DesktopRenderKit.java"}, {"additions": 22, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/desktop/DesktopTableRenderer.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/desktop/DesktopTableRenderer.java", "sha": "833e71d31e1e38b92e86d262d1c0352c104dbd95", "changes": 28, "status": "modified", "deletions": 6, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/desktop/DesktopTableRenderer.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add", "patch": "@@ -64,6 +64,7 @@ protected DesktopTableRenderer(FacesBean.Type type)\n     super(type);\n   }\n   \n+  @Override\n   protected void findTypeConstants(FacesBean.Type type)\n   {\n     super.findTypeConstants(type);\n@@ -81,6 +82,7 @@ public DesktopTableRenderer()\n     this(CoreTable.TYPE);\n   }\n \n+  @Override\n   protected final void renderSingleRow(\n     FacesContext context,\n     RenderingContext arc,\n@@ -226,6 +228,7 @@ protected final void renderControlBarLink(\n       writer.writeText(LINKS_DIVIDER_TEXT, null);\n   }\n \n+  @Override\n   protected void renderSubControlBar(\n     FacesContext context,\n     RenderingContext arc,\n@@ -241,6 +244,7 @@ protected void renderSubControlBar(\n     renderSelectionLinks(context, arc, tContext, component);\n   }\n \n+  @Override\n   protected void renderTableContent(\n     FacesContext context,\n     RenderingContext arc,\n@@ -504,6 +508,7 @@ private void _writeIEscrollScript(\n \n \n   // render the control bar\n+  @Override\n   protected final void renderControlBar(\n     FacesContext          context,\n     RenderingContext   arc,\n@@ -626,6 +631,7 @@ protected void renderTableRows(\n    * renders attributes on the outermost table element.\n    * this includes width, cellpadding, cellspacing, border.\n    */\n+  @Override\n   protected void renderTableAttributes(\n     FacesContext        context,\n     RenderingContext arc,\n@@ -815,6 +821,7 @@ private void _renderTableRows(\n     final UIComponent detail = tContext.getDetail();\n     final RenderStage renderStage = tContext.getRenderStage();\n     TableUtils.RowLoop loop = new TableUtils.RowLoop() {\n+      @Override\n       protected void processRowImpl(FacesContext fc, CollectionComponent tableBase)\n         throws IOException\n       {\n@@ -939,6 +946,7 @@ protected final void renderRegularHeaders(\n     }\n   }\n \n+  @SuppressWarnings(\"unchecked\")\n   private void _renderRegularColumns(\n     FacesContext          context,\n     TableRenderingContext tContext,\n@@ -948,7 +956,7 @@ private void _renderRegularColumns(\n     // this renders a whole bunch of <TH>...</TH> elements.\n     // part of #1313720, base column header count on\n     // table child count\n-    List children = component.getChildren();\n+    List<UIComponent> children = component.getChildren();\n     int colCount  = children.size();\n     int[] hidden = tContext.getHiddenColumns();\n     ColumnData colData = tContext.getColumnData();\n@@ -975,6 +983,7 @@ private void _renderRegularColumns(\n   /**\n    * @todo Re-fix bug 3211593 (see below)\n    */\n+  @SuppressWarnings(\"unchecked\")\n   protected final void renderFooter(\n     FacesContext          context,\n     RenderingContext   arc,\n@@ -1017,14 +1026,12 @@ protected final void renderFooter(\n         colData.setColumnIndex(tContext.getSpecialColumnCount(),\n                                0/*logicalColumnIndex*/);\n \n-        List children = component.getChildren();\n-        int count = children.size();\n-\n-        for (int i = 0; i < count; i++)\n+        for(UIComponent child : (List<UIComponent>)component.getChildren())\n         {\n-          UIComponent child = (UIComponent) children.get(i);\n           if (child.isRendered())\n+          {\n             encodeChild(context, child);\n+          }\n         }\n       }\n       writer.endElement(XhtmlConstants.TABLE_ROW_ELEMENT);\n@@ -1058,52 +1065,61 @@ public AllDetail(boolean disclosed)\n       _disclosed = disclosed;\n     }\n \n+    @Override\n     protected void renderAllAttributes(\n        FacesContext        context,\n        RenderingContext arc,\n        FacesBean           bean)\n     {\n     }\n \n+    @Override\n     protected boolean isTableAllDisclosure()\n     {\n       return true;\n     }\n \n+    @Override\n     protected boolean renderAsInline()\n     {\n       return true;\n     }\n \n+    @Override\n     protected String getValueParameter(UIComponent component)\n     {\n       return \"all\";\n     }\n \n \n+    @Override\n     protected boolean getDisclosed(FacesBean bean)\n     {\n       return _disclosed;\n     }\n \n+    @Override\n     protected String getDisclosedText(FacesBean bean)\n     {\n       RenderingContext arc = RenderingContext.getCurrentInstance();\n       return arc.getTranslatedString(_HIDE_ALL_DETAILS_TEXT_KEY);\n     }\n \n+    @Override\n     protected String getUndisclosedText(FacesBean bean)\n     {\n       RenderingContext arc = RenderingContext.getCurrentInstance();\n       return arc.getTranslatedString(_SHOW_ALL_DETAILS_TEXT_KEY);\n     }\n \n+    @Override\n     protected String getLinkId(String rootId, boolean disclosed)\n     {\n       String suffix = (disclosed ? \"ha\" : \"sa\");\n       return XhtmlUtils.getCompositeId(rootId, suffix);\n     }\n \n+    @Override\n     protected String getClientId(FacesContext context, UIComponent component)\n     {\n       TableRenderingContext tContext = TableRenderingContext.getCurrentInstance();", "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/desktop/DesktopTableRenderer.java"}, {"additions": 10, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/desktop/TrainRenderer.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/desktop/TrainRenderer.java", "sha": "60b1c13b487ba436f60460e97f280d377b6c2c61", "changes": 13, "status": "modified", "deletions": 3, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/desktop/TrainRenderer.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add", "patch": "@@ -58,9 +58,12 @@ public TrainRenderer()\n   \n   /**\n    */\n+  @SuppressWarnings(\"unchecked\")\n+  @Override\n   public void decode(FacesContext context, UIComponent component)\n   {\n-    Map requestMap = context.getExternalContext().getRequestParameterMap();\n+    Map<String, String> requestMap = \n+      context.getExternalContext().getRequestParameterMap();\n \n     Object event = requestMap.get(XhtmlConstants.EVENT_PARAM);\n \n@@ -135,11 +138,13 @@ public void decode(FacesContext context, UIComponent component)\n   /**\n    * @return\n    */\n+  @Override\n   public boolean getRendersChildren()\n   {\n     return true;\n   }\n \n+  @Override\n   protected void encodeAll(\n     FacesContext context, \n     RenderingContext arc, \n@@ -190,6 +195,7 @@ protected void encodeAll(\n    * This is how we can render both the user defined styleClass and our\n    * component style class\n    */\n+  @Override\n   protected void renderStyleAttributes(\n     FacesContext context, \n     RenderingContext arc, \n@@ -536,7 +542,7 @@ private void _renderLink(\n \n     renderStyleClass(context, arc, styleClass);\n \n-    Map originalResourceKeyMap = arc.getSkinResourceKeyMap();\n+    Map<String, String> originalResourceKeyMap = arc.getSkinResourceKeyMap();\n     try\n     {\n       arc.setSkinResourceKeyMap(_RESOURCE_KEY_MAP);\n@@ -799,7 +805,8 @@ public TrainState()\n \n   // for now keep the OraLink/OraDisabledLink styles on the 'a', and\n   // append train link style class.\n-  private static final Map _RESOURCE_KEY_MAP = new HashMap();\n+  private static final Map<String, String> _RESOURCE_KEY_MAP = \n+    new HashMap<String, String>();\n   private static final String _TRAIN_DISABLED_LINK = \n     XhtmlConstants.LINK_DISABLED_STYLE_CLASS + \" \" + \n     XhtmlConstants.AF_PROCESS_TRAIN_LINK_STYLE_CLASS;", "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/desktop/TrainRenderer.java"}, {"additions": 31, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/desktop/TreeTableRenderer.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/desktop/TreeTableRenderer.java", "sha": "ef0bbdfaee1c7aba06def2dab046a0a44761e9a9", "changes": 37, "status": "modified", "deletions": 6, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/desktop/TreeTableRenderer.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add", "patch": "@@ -69,6 +69,7 @@ public TreeTableRenderer()\n     super(CoreTreeTable.TYPE);\n   }\n \n+  @Override\n   protected void findTypeConstants(FacesBean.Type type)\n   {\n     super.findTypeConstants(type);\n@@ -83,13 +84,17 @@ protected void findTypeConstants(FacesBean.Type type)\n    *  DisclosureEvent\n    * @todo deal with null and exceptions\n    */\n+  @SuppressWarnings(\"unchecked\")\n+  @Override\n   public void decode(\n     FacesContext context,\n     UIComponent component)\n   {\n     decodeSelection(context, component);\n \n-    Map parameters = context.getExternalContext().getRequestParameterMap();\n+    Map<String, String> parameters = \n+      context.getExternalContext().getRequestParameterMap();\n+    \n     Object source = parameters.get(XhtmlConstants.SOURCE_PARAM);\n     if (component.getClientId(context).equals(source))\n     {\n@@ -107,6 +112,7 @@ public void decode(\n    * Creates the correct subclass of the TableRenderingContext to\n    * use for this Renderer.\n    */\n+  @Override\n   protected TableRenderingContext createRenderingContext(\n     FacesContext        context,\n     RenderingContext arc,\n@@ -121,6 +127,7 @@ protected TableRenderingContext createRenderingContext(\n    * @return true if the table was empty, and an alternative empty\n    * version was shown, false otherwise.\n    */\n+  @Override\n   protected boolean renderTableWithoutColumns(\n     FacesContext          context,\n     RenderingContext   arc,\n@@ -133,6 +140,7 @@ protected boolean renderTableWithoutColumns(\n   /**\n    * render all pieces of the table\n    */\n+  @Override\n   protected void encodeAll(\n     FacesContext        context,\n     RenderingContext arc,\n@@ -180,6 +188,7 @@ protected boolean isImmediate(UIComponent component, FacesBean bean)\n    * Render the navigation header bars, i.e. all the bars that appear above the\n    * actual data table including the breadcrumbs at the end.\n    */\n+  @Override\n   protected void renderNavigationHeaderBars(\n     FacesContext          context,\n     RenderingContext   arc,\n@@ -191,6 +200,7 @@ protected void renderNavigationHeaderBars(\n     _renderBreadCrumbs(context, arc, tContext, component, bean);\n   }\n \n+  @Override\n   protected final void renderRangePagingControl(\n     FacesContext          context,\n     RenderingContext   arc,\n@@ -213,6 +223,7 @@ protected final void renderRangePagingControl(\n     }\n   }\n \n+  @Override\n   protected boolean hasControlBarLinks(\n     FacesContext context,\n     RenderingContext arc,\n@@ -224,6 +235,7 @@ protected boolean hasControlBarLinks(\n       isExpandAllEnabled(component);\n   }\n \n+  @Override\n   protected void renderControlBarLinks(\n     FacesContext context,\n     RenderingContext arc,\n@@ -269,6 +281,7 @@ protected boolean isExpandAllEnabled(UIComponent component)\n    * used to render special column headers, like select and details.\n    * @return the next physicalColumnIndex\n    */\n+  @Override\n   protected int renderSpecialColumns(\n     FacesContext          context,\n     RenderingContext   arc,\n@@ -310,6 +323,7 @@ protected int renderSpecialColumns(\n   /**\n    * render all the table rows\n    */\n+  @Override\n   protected void renderTableRows(\n     FacesContext          context,\n     RenderingContext   arc,\n@@ -413,18 +427,20 @@ private void _renderBreadCrumbs(\n     }\n   }\n \n+  @SuppressWarnings(\"unchecked\")\n   private void _renderTableRows(\n     FacesContext          context,\n     final RenderingContext   arc,\n     final TreeTableRenderingContext ttrc) throws IOException\n   {\n     final UIXTreeTable treeTableBase = ttrc.getUIXTreeTable();\n     final ResponseWriter writer = context.getResponseWriter();\n-    final RowKeySet treeState = treeTableBase.getDisclosedRowKeys();\n+    final RowKeySet<Object> treeState = treeTableBase.getDisclosedRowKeys();\n     final int specialColCount = _getSpecialColCount(ttrc);\n \n     TableUtils.RowLoop loop = new TableUtils.RowLoop()\n     {\n+      @Override\n       protected void loop(FacesContext context, CollectionComponent treeTable)\n         throws IOException\n       {\n@@ -433,6 +449,7 @@ protected void loop(FacesContext context, CollectionComponent treeTable)\n         processRow(context, treeTable);\n       }\n \n+      @Override\n       protected void processRowImpl(FacesContext context, CollectionComponent treeTable)\n         throws IOException\n       {\n@@ -520,6 +537,7 @@ private int _getSpecialColCount(\n \n   private static final class BreadCrumbsRenderer extends org.apache.myfaces.trinidadinternal.renderkit.core.xhtml.BreadCrumbsRenderer\n   {\n+    @Override\n     protected void renderLink(\n       FacesContext context,\n       RenderingContext arc,\n@@ -547,7 +565,7 @@ protected void renderLink(\n       }\n       Object oldPath = tree.getRowKey();\n       Object focusRowKey = ttrc.getFocusRowKey();\n-      List focusPath = tree.getAllAncestorContainerRowKeys(focusRowKey);\n+      List<Object> focusPath = tree.getAllAncestorContainerRowKeys(focusRowKey);\n       Object crumbPath = (renderedCount < focusPath.size())\n         ? focusPath.get(renderedCount)\n         : focusRowKey;\n@@ -566,11 +584,13 @@ protected void renderLink(\n       out.endElement(\"a\");\n     }\n \n+    @Override\n     protected boolean hasChildren(UIComponent component)\n     {\n       return false; // do not render the columns. only the pathStamp\n     }\n \n+    @Override\n     protected boolean shouldRenderId(\n       FacesContext context,\n       UIComponent  component)\n@@ -580,6 +600,7 @@ protected boolean shouldRenderId(\n       return false;\n     }\n \n+    @Override\n     protected UIComponent getStamp(\n       FacesContext        context,\n       RenderingContext arc,\n@@ -592,10 +613,13 @@ protected UIComponent getStamp(\n     }\n   }\n \n-  protected Map createResourceKeyMap()\n+  @Override\n+  protected Map<String, String> createResourceKeyMap()\n   {\n-    Map tablemap = super.createResourceKeyMap();\n-    Map map = ResourceKeyUtils.convertResourceKeyMap(tablemap, \"table\", \"treeTable\");\n+    Map<String, String> tablemap = super.createResourceKeyMap();\n+    Map<String, String> map = \n+      ResourceKeyUtils.convertResourceKeyMap(tablemap, \"table\", \"treeTable\");\n+    \n     // we need a resource key map since we are using a navigationPath.\n     // and we are using table for the styles\n     map.put(XhtmlConstants.AF_NAVIGATION_PATH_SEPARATOR_ICON_NAME,\n@@ -610,6 +634,7 @@ protected Map createResourceKeyMap()\n             XhtmlConstants.AF_TREE_TABLE_CONTROL_BAR_TOP_STYLE);\n     map.put(XhtmlConstants.AF_TABLE_CONTROL_BAR_BOTTOM_STYLE,\n             XhtmlConstants.AF_TREE_TABLE_CONTROL_BAR_BOTTOM_STYLE);\n+    \n     return Collections.unmodifiableMap(map);\n   }\n ", "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/desktop/TreeTableRenderer.java"}, {"additions": 12, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/pages/CalendarDialogJSP.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/pages/CalendarDialogJSP.java", "sha": "8e0bbfbf308085628e1a2c6a7cfd291aef22a85b", "changes": 18, "status": "modified", "deletions": 6, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/pages/CalendarDialogJSP.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add", "patch": "@@ -58,6 +58,7 @@\n   /**\n    * @todo Integrate the time zone with RequestContext (somehow)\n    */\n+  @SuppressWarnings(\"unchecked\")\n   static public void service(FacesContext context)\n     throws IOException\n   {\n@@ -181,16 +182,18 @@ static public void service(FacesContext context)\n   }\n \n \n+  @SuppressWarnings(\"unchecked\")\n   static public boolean processReturnDialog(\n     FacesContext context\n     )\n   {\n-    Map requestParameters = context.getExternalContext().\n-                               getRequestParameterMap();\n-    String event = (String) requestParameters.get(XhtmlConstants.EVENT_PARAM);\n+    Map<String, String> requestParameters = \n+      context.getExternalContext().getRequestParameterMap();\n+    \n+    String event = requestParameters.get(XhtmlConstants.EVENT_PARAM);\n     if (XhtmlConstants.DATE_EVENT.equals(event))\n     {\n-      String value = (String) requestParameters.get(XhtmlConstants.VALUE_PARAM);\n+      String value = requestParameters.get(XhtmlConstants.VALUE_PARAM);\n       Date date;\n       try\n       {\n@@ -216,13 +219,16 @@ else if (XhtmlConstants.CANCEL_EVENT.equals(event))\n   }\n \n \n+  @SuppressWarnings(\"unchecked\")\n   static String __getParam(\n     FacesContext context,\n     String name\n     )\n   {\n-    Map requestParams = context.getExternalContext().getRequestParameterMap();\n-    String value = (String) requestParams.get(name);\n+    Map<String, String> requestParams = \n+      context.getExternalContext().getRequestParameterMap();\n+    \n+    String value = requestParams.get(name);\n     if (value == null || value.equals(\"\"))\n     {\n       RequestContext afContext = RequestContext.getCurrentInstance();", "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/pages/CalendarDialogJSP.java"}, {"additions": 6, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/pages/CalendarUtils.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/pages/CalendarUtils.java", "sha": "0380b8eaa6996b040de5be3719eee32465179d06", "changes": 12, "status": "modified", "deletions": 6, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/pages/CalendarUtils.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add", "patch": "@@ -36,13 +36,15 @@\n  */\n class CalendarUtils\n {\n+  @SuppressWarnings(\"unchecked\")\n   public static CoreChooseDate createChooseDate(FacesContext context)\n   {\n     final String id = CalendarDialogJSP.__getParam(context,\n                                                    XhtmlConstants.SOURCE_PARAM);\n     \n     CoreChooseDate ccd = new CoreChooseDate()\n     {\n+      @Override\n       public String getClientId(FacesContext context)\n       {\n         return id;\n@@ -68,15 +70,15 @@ public String getClientId(FacesContext context)\n     if (selectedTimeString != null)\n     {\n       ccd.getAttributes().put(\"value\",\n-                                   parseTime(selectedTimeString));\n+                              parseTime(selectedTimeString));\n     }\n \n     String displayTimeString = CalendarDialogJSP.__getParam(context,\n                                                             \"scrolledValue\");\n     if (displayTimeString != null)\n     {\n       ccd.getAttributes().put(\"scrolledValue\",\n-                                   parseTime(displayTimeString));\n+                              parseTime(displayTimeString));\n     }\n \n     return ccd;\n@@ -140,13 +142,11 @@ private static long _adjustTimeZone(long dateValueInMs)\n     // maximum date (in ChooseDateRenderer).\n     if (tzOffset < 0)\n     {\n-      tzOffset = (long)Math.max((float)tzOffset, \n-                                (float)Long.MIN_VALUE - (float)dateValueInMs);\n+      tzOffset = Math.max(tzOffset, Long.MIN_VALUE - dateValueInMs);\n     }\n     else\n     {\n-      tzOffset = (long)Math.min((float)tzOffset, \n-                                (float)Long.MAX_VALUE - (float)dateValueInMs);\n+      tzOffset = Math.min(tzOffset, Long.MAX_VALUE - dateValueInMs);\n     }\n     \n     return dateValueInMs + tzOffset;", "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/pages/CalendarUtils.java"}, {"additions": 6, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/pages/ColorPickerJSP.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/pages/ColorPickerJSP.java", "sha": "85914d86ef2b94157ee94d35421e355d86dc11dc", "changes": 10, "status": "modified", "deletions": 4, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/pages/ColorPickerJSP.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add", "patch": "@@ -51,10 +51,12 @@\n  */\n class ColorPickerJSP\n {\n+  @SuppressWarnings(\"unchecked\")\n   static public void service(FacesContext context)\n     throws IOException\n   {\n-    Map requestParams = context.getExternalContext().getRequestParameterMap();\n+    Map<String, String> requestParams = \n+      context.getExternalContext().getRequestParameterMap();\n     \n     RenderingContext arc = RenderingContext.getCurrentInstance();\n     CoreDocument doc = new CoreDocument();\n@@ -81,7 +83,7 @@ static public void service(FacesContext context)\n     sic.setOnkeypress(\"if(_getKC(event)==13){selectColor();return false}\");\n     Converter converter = _getConverter(requestParams);\n     Object value = \n-      converter.getAsObject(context, sic, (String)requestParams.get(\"value\"));\n+      converter.getAsObject(context, sic, requestParams.get(\"value\"));\n     sic.setConverter(converter);\n     sic.setValue(value);\n     sic.setChooseId(\"choose\");\n@@ -134,9 +136,9 @@ static public void service(FacesContext context)\n     doc.getChildren().add(script);\n   }\n \n-  static private Converter _getConverter(Map requestParams)\n+  static private Converter _getConverter(Map<String, String> requestParams)\n   {\n-    String pattern = (String) requestParams.get(\"pattern\");\n+    String pattern = requestParams.get(\"pattern\");\n     boolean allowsTransparent =\n       \"true\".equals(requestParams.get(\"allowsTransparent\"));\n     ColorConverter converter = new ColorConverter();", "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/pages/ColorPickerJSP.java"}, {"additions": 14, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/pages/FredJSP.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/pages/FredJSP.java", "sha": "aed9daf8025fc47a1c37ecdd86c67fc0704f1a3f", "changes": 27, "status": "modified", "deletions": 13, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/pages/FredJSP.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add", "patch": "@@ -26,7 +26,6 @@\n import javax.faces.component.UIViewRoot;\n import javax.faces.context.FacesContext;\n \n-import org.apache.myfaces.trinidad.context.RequestContext;\n import org.apache.myfaces.trinidad.component.core.CoreImportScript;\n import org.apache.myfaces.trinidad.component.core.output.CoreOutputText;\n import org.apache.myfaces.trinidad.component.html.HtmlHtml;\n@@ -35,7 +34,6 @@\n import org.apache.myfaces.trinidad.component.html.HtmlScript;\n \n import org.apache.myfaces.trinidadinternal.context.PageFlowScopeProviderImpl;\n-import org.apache.myfaces.trinidadinternal.renderkit.RenderUtils;\n import org.apache.myfaces.trinidadinternal.renderkit.core.CoreRenderKit;\n import org.apache.myfaces.trinidadinternal.share.url.EncoderUtils;\n \n@@ -94,6 +92,7 @@ static public String getRedirectURL(FacesContext context,\n   }\n \n \n+  @SuppressWarnings(\"unchecked\")\n   static void service(FacesContext context) throws IOException\n   {\n     RenderingContext arc = RenderingContext.getCurrentInstance();\n@@ -103,10 +102,12 @@ static void service(FacesContext context) throws IOException\n     HtmlHtml root = new HtmlHtml();\n     context.getViewRoot().getChildren().add(root);\n \n-    Map requestParameters = context.getExternalContext().getRequestParameterMap();\n+    Map<String, String> requestParameters = \n+      context.getExternalContext().getRequestParameterMap();\n+    \n     // Save the return ID - and do so before generating the\n     // link to the frames!\n-    String returnId = (String) requestParameters.get(_RETURN_ID_PARAM);\n+    String returnId = requestParameters.get(_RETURN_ID_PARAM);\n     if (returnId != null)\n       CoreRenderKit.saveDialogPostbackValues(returnId);\n \n@@ -148,13 +149,13 @@ static void service(FacesContext context) throws IOException\n        context.getExternalContext().getRequestParameterValuesMap());\n \n     // grab any sizing parameters\n-    String widthParam = (String) requestParameters.get(_MIN_WIDTH_PARAM);\n+    String widthParam = requestParameters.get(_MIN_WIDTH_PARAM);\n     boolean gotWidth = (widthParam != null);\n \n-    String heightParam = (String) requestParameters.get(_MIN_HEIGHT_PARAM);\n+    String heightParam = requestParameters.get(_MIN_HEIGHT_PARAM);\n     boolean gotHeight = (heightParam != null);\n \n-    String viewIdRedirect = (String) requestParameters.get(_VIEW_ID_REDIRECT_PARAM);\n+    String viewIdRedirect = requestParameters.get(_VIEW_ID_REDIRECT_PARAM);\n     if (viewIdRedirect != null)\n     {\n       ViewHandler vh =\n@@ -169,7 +170,7 @@ static void service(FacesContext context) throws IOException\n     }\n     else\n     {\n-      String internalRedirect = (String) requestParameters.get(\"_red\");\n+      String internalRedirect = requestParameters.get(\"_red\");\n       if (internalRedirect != null)\n       {\n         String path = GenericEntry.getGenericEntryURL(context,\n@@ -241,25 +242,25 @@ static void service(FacesContext context) throws IOException\n   }\n \n   static private String _getQueryString(\n-    Map                parameters) throws IOException\n+    Map<String, String[]> parameters) throws IOException\n   {\n     // Bug #3419817 support request dispatch for Portal\n     // build up the encoded query string from request parameters\n     // this will work for both direct requests and include/forward requests\n     StringBuffer buf = new StringBuffer();\n-    Iterator paramNames = parameters.keySet().iterator();\n+    Iterator<String> paramNames = parameters.keySet().iterator();\n     boolean isFirst = true;\n \n     // iterate through the request parameter names\n     while (paramNames.hasNext())\n     {\n-      String paramName = (String)paramNames.next();\n+      String paramName = paramNames.next();\n \n       // add the parameter to the query string unless skipped\n       if (!_SKIP_PARAMS.contains(paramName))\n       {\n         // the parameter might appear on the request more than once\n-        String[] paramValues = (String[]) parameters.get(paramName);\n+        String[] paramValues = parameters.get(paramName);\n \n         for (int i=0; i < paramValues.length; i++)\n         {\n@@ -297,7 +298,7 @@ static private String _getQueryString(\n   static private final String _FRAMESET_ONUNLOAD_TEXT =\n     \"_checkUnload(event)\";\n \n-  static private final Collection _SKIP_PARAMS =\n+  static private final Collection<String> _SKIP_PARAMS =\n     Arrays.asList(new String[]\n                   {\n                     GenericEntry.__ENTRY_KEY_PARAM,", "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/pages/FredJSP.java"}, {"additions": 11, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/pages/GenericEntry.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/pages/GenericEntry.java", "sha": "60fe880e286d82d3101663bd78ddbfa0cfdb9faa", "changes": 16, "status": "modified", "deletions": 5, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/pages/GenericEntry.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add", "patch": "@@ -75,16 +75,19 @@ public GenericEntry()\n   {\n   }\n \n+  @Override\n   public UIViewRoot createView(FacesContext context, String viewId)\n   {\n     return null;\n   }\n \n+  @Override\n   public UIViewRoot restoreView(FacesContext context, String viewId)\n   {\n     return null;\n   }\n \n+  @Override\n   public void renderView(\n     FacesContext context,\n     UIViewRoot   viewToRender) throws IOException, FacesException\n@@ -171,6 +174,7 @@ static public String getGenericEntryPath(FacesContext context)\n   }\n \n \n+  @SuppressWarnings(\"unchecked\")\n   static private void service(FacesContext context, String name)\n     throws IOException\n   {\n@@ -184,7 +188,7 @@ static private void service(FacesContext context, String name)\n \n     if (!_isValidEntry(name))\n     {\n-      response.sendError(response.SC_BAD_REQUEST);\n+      response.sendError(HttpServletResponse.SC_BAD_REQUEST);\n       return;\n     }\n \n@@ -207,8 +211,10 @@ static private void service(FacesContext context, String name)\n       encoding);\n     context.setResponseWriter(responseWriter);\n \n-    Map requestParams = context.getExternalContext().getRequestParameterMap();\n-    String localeName = (String) requestParams.get(\"loc\");\n+    Map<String, String> requestParams = \n+      context.getExternalContext().getRequestParameterMap();\n+    \n+    String localeName = requestParams.get(\"loc\");\n     if (localeName != null)\n     {\n       Locale locale =\n@@ -266,11 +272,11 @@ static private boolean _isValidEntry(String name)\n   // Parameter that is used to store the key for the JSP name.\n   //\n   static final String __ENTRY_KEY_PARAM = \"_t\";\n-  static private final Set _VALID_ENTRIES;\n+  static private final Set<String> _VALID_ENTRIES;\n \n   static\n   {\n-    _VALID_ENTRIES = new HashSet();\n+    _VALID_ENTRIES = new HashSet<String>();\n     _VALID_ENTRIES.add(NEW_FRAME_REDIRECT_ENTRY);\n     _VALID_ENTRIES.add(CALENDAR_DIALOG_ENTRY);\n     _VALID_ENTRIES.add(INLINE_DATE_PICKER_ENTRY);", "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/pages/GenericEntry.java"}, {"additions": 4, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/pages/InlineDatePickerJSP.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/pages/InlineDatePickerJSP.java", "sha": "a812b5f330d681809f3bd75d0b180eaa8381c05f", "changes": 6, "status": "modified", "deletions": 2, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/pages/InlineDatePickerJSP.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add", "patch": "@@ -46,14 +46,16 @@\n  */\n class InlineDatePickerJSP\n {\n+  @SuppressWarnings(\"unchecked\")\n   static public void service(FacesContext context)\n     throws IOException\n   {\n-    Map requestParams = context.getExternalContext().getRequestParameterMap();\n+    Map<String, String> requestParams = \n+      context.getExternalContext().getRequestParameterMap();\n \n     RenderingContext arc = RenderingContext.getCurrentInstance();\n     arc.getPartialPageContext().addPartialTarget(\n-              (String) requestParams.get(XhtmlConstants.SOURCE_PARAM));\n+              requestParams.get(XhtmlConstants.SOURCE_PARAM));\n \n     // Use Html and Body to avoid the cost of the stylesheet\n     HtmlHtml html = new HtmlHtml();", "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/pages/InlineDatePickerJSP.java"}, {"additions": 1, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/pda/PdaRenderKit.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/pda/PdaRenderKit.java", "sha": "a098fdf264537f0fd70a20959f62168626731936", "changes": 1, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/pda/PdaRenderKit.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add", "patch": "@@ -30,6 +30,7 @@ public PdaRenderKit()\n                 new TrainRenderer());\n   }\n \n+  @Override\n   protected String getDecoratedRenderKitId()\n   {\n     return CoreRenderKit.BASE_RENDER_KIT_ID;", "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/pda/PdaRenderKit.java"}, {"additions": 10, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/pda/PdaTableRenderer.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/pda/PdaTableRenderer.java", "sha": "2e9f8c636cf66fc8cb4849fa50339bb31503008a", "changes": 16, "status": "modified", "deletions": 6, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/pda/PdaTableRenderer.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add", "patch": "@@ -53,6 +53,7 @@ public PdaTableRenderer()\n     super(CoreTable.TYPE);\n   }\n   \n+  @Override\n   protected final void renderControlBar(\n     FacesContext          context,\n     RenderingContext   arc,\n@@ -102,6 +103,7 @@ protected final void renderControlBar(\n     }\n   }\n \n+  @Override\n   protected void renderSubControlBar(\n     FacesContext context,\n     RenderingContext arc,\n@@ -133,6 +135,7 @@ private void _renderEmptyCell(\n   }\n \n   // render the actual table content, with headers\n+  @Override\n   protected void renderTableContent(\n     FacesContext context,\n     final RenderingContext arc,\n@@ -235,6 +238,7 @@ protected void renderTableContent(\n     {\n       TableUtils.RowLoop loop = new TableUtils.RowLoop()\n         {\n+          @Override\n           protected void processRowImpl(FacesContext fc, CollectionComponent tableBase)\n             throws IOException\n           {\n@@ -289,7 +293,8 @@ protected void processRowImpl(FacesContext fc, CollectionComponent tableBase)\n     //context.setDataResponseWriterUsed(false);\n   }\n   \n-     private void _renderColumnFooter(\n+     @SuppressWarnings(\"unchecked\")\n+    private void _renderColumnFooter(\n        FacesContext          context,\n        RenderingContext   arc,\n        TableRenderingContext tContext,\n@@ -331,21 +336,20 @@ private void _renderColumnFooter(\n            colData.setColumnIndex(tContext.getSpecialColumnCount(),\n                                   0/*logicalColumnIndex*/);\n \n-           List children = component.getChildren();\n-           int count = children.size();\n-\n-           for (int i = 0; i < count; i++)\n+           for(UIComponent child : (List<UIComponent>)component.getChildren())\n            {\n-             UIComponent child = (UIComponent) children.get(i);\n              if (child.isRendered())\n+             {\n                encodeChild(context, child);\n+             }\n            }\n          }\n          writer.endElement(XhtmlConstants.TABLE_ROW_ELEMENT);\n        }\n      }\n \n \n+  @Override\n   protected final void renderSingleRow(\n     FacesContext          context,\n     RenderingContext   arc,", "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/pda/PdaTableRenderer.java"}, {"additions": 2, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/pda/TrainRenderer.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/pda/TrainRenderer.java", "sha": "8ce59ecb0bb91a7ee38c1e159c210d9755844aba", "changes": 3, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/pda/TrainRenderer.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add", "patch": "@@ -44,6 +44,7 @@ public TrainRenderer()\n     super(CoreTrain.TYPE);\n   }\n \n+  @Override\n   protected void encodeAll(\n     FacesContext        context,\n     RenderingContext    arc,\n@@ -99,7 +100,7 @@ protected void encodeAll(\n     }\n   }\n \n-\n+  @Override\n   public boolean getRendersChildren()\n   {\n     return true;", "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/pda/TrainRenderer.java"}, {"additions": 24, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/ppr/PPRResponseWriter.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/ppr/PPRResponseWriter.java", "sha": "f066a9aa73f034ace1c7aa3f76ea9e7303827831", "changes": 33, "status": "modified", "deletions": 9, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/ppr/PPRResponseWriter.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add", "patch": "@@ -37,8 +37,11 @@ public PPRResponseWriter(ResponseWriter     out,\n     super(out);\n     _pprContext = pprContext;\n     _useXMLDom = useXMLDom;\n+    _componentStack = new ArrayList<PPRTag>(50);\n+    _facesContext = FacesContext.getCurrentInstance();\n   }\n \n+  @Override\n   public ResponseWriter cloneWithWriter(Writer writer)\n   {\n     return new PPRResponseWriter(\n@@ -47,53 +50,60 @@ public ResponseWriter cloneWithWriter(Writer writer)\n       _useXMLDom);\n   }\n \n+  @Override\n   public void startDocument() throws IOException\n   {\n     if (_isInsideTarget())\n       super.startDocument();\n   }\n \n+  @Override\n   public void endDocument() throws IOException\n   {\n     if (_isInsideTarget())\n       super.endDocument();\n   }\n \n+  @Override\n   public void flush() throws IOException\n   {\n     if (_isInsideTarget())\n       super.flush();\n   }\n \n+  @Override\n   public void writeComment(Object text) throws IOException\n   {\n     if (_isInsideTarget())\n       super.writeComment(text);\n   }\n \n \n+  @Override\n   public void writeText(Object text, String property) throws IOException\n   {\n     if (_isInsideTarget())\n       super.writeText(text, property);\n   }\n \n+  @Override\n   public void writeText(\n-                        char[]      text,\n-                        int         start,\n-                        int         length) throws IOException\n+      char[]      text,\n+      int         start,\n+      int         length) throws IOException\n   {\n     if (_isInsideTarget())\n       super.writeText(text, start, length);\n   }\n \n-\n+  @Override\n   public void write(String text) throws IOException\n   {\n     if (_isInsideTarget())\n       super.write(text);\n   }\n \n+  @Override\n   public void write(\n                     char[]      text,\n                     int         start,\n@@ -103,12 +113,14 @@ public void write(\n       super.write(text, start, length);\n   }\n \n+  @Override\n   public void write(int ch) throws IOException\n   {\n     if (_isInsideTarget())\n       super.write(ch);\n   }\n \n+  @Override\n   public void startElement(String name, UIComponent component)\n      throws IOException\n   {\n@@ -137,7 +149,7 @@ public void startElement(String name, UIComponent component)\n     }\n   }\n \n-\n+  @Override\n   public void endElement(String name) throws IOException\n   {\n     if (_isInsideTarget())\n@@ -148,6 +160,7 @@ public void endElement(String name) throws IOException\n     _popPartialTarget();\n   }\n \n+  @Override\n   public void writeAttribute(String     name,\n                              Object     value,\n                              String     property) throws IOException\n@@ -165,6 +178,7 @@ public void writeAttribute(String     name,\n     }\n   }\n \n+  @Override\n   public void writeURIAttribute(\n                                 String     name,\n                                 Object     value,\n@@ -230,7 +244,7 @@ else if (\"tr\".equals(element))\n   private void _popPartialTarget() throws IOException\n   {\n     int pos = _componentStack.size() - 1;\n-    PPRTag tag = (PPRTag) _componentStack.get(pos);\n+    PPRTag tag = _componentStack.get(pos);\n     _componentStack.remove(pos);\n \n     if (tag != null)\n@@ -329,6 +343,7 @@ public AddTags(String id, String[] tags)\n       _tags = tags;\n     }\n \n+    @Override\n     public void start(PartialPageContext pprContext) throws IOException\n     {\n       super.start(pprContext);\n@@ -340,6 +355,7 @@ public void start(PartialPageContext pprContext) throws IOException\n       }\n     }\n \n+    @Override\n     public void finish(PartialPageContext pprContext) throws IOException\n     {\n       // And then end them in reverse order...\n@@ -358,10 +374,9 @@ public void finish(PartialPageContext pprContext) throws IOException\n \n   private boolean _writingForm;\n   private final boolean _useXMLDom;\n-  private final List _componentStack = new ArrayList(50);\n+  private final List<PPRTag> _componentStack;\n   private final PartialPageContext _pprContext;\n-  private final FacesContext _facesContext =\n-     FacesContext.getCurrentInstance();\n+  private final FacesContext _facesContext;\n \n   static private final String[] _ADD_TABLE_AND_TR =\n      new String[]{\"table\", \"tr\"};", "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/ppr/PPRResponseWriter.java"}, {"additions": 13, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/ppr/PartialPageContext.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/ppr/PartialPageContext.java", "sha": "3eab404e4834389420f91b7de7a6f8a2e5b9e588", "changes": 26, "status": "modified", "deletions": 13, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/ppr/PartialPageContext.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add", "patch": "@@ -49,11 +49,11 @@\n {\n   PartialPageContext()\n   {\n-    _targets = new HashMap();\n-    _renderedTargets = new HashSet();\n+    _targets = new HashMap<String, Boolean>();\n+    _renderedTargets = new HashSet<String>();\n \n     // Pre-allocate the rendered stack\n-    _currentTargetStack = new Stack();\n+    _currentTargetStack = new Stack<String>();\n   }\n \n   /**\n@@ -71,7 +71,7 @@ public PartialPageContext(\n     // target list.\n     RequestContextImpl adfContext =\n       (RequestContextImpl) afContext;\n-    Iterator targetIter = adfContext.getPartialTargets();\n+    Iterator<String> targetIter = adfContext.getPartialTargets();\n     while (targetIter.hasNext())\n       _targets.put(targetIter.next(), Boolean.FALSE);\n \n@@ -85,10 +85,8 @@ public void finish()\n   {\n     if (_LOG.isWarning())\n     {\n-      Iterator entries = _targets.entrySet().iterator();\n-      while (entries.hasNext())\n+      for(Map.Entry<String, Boolean> entry : _targets.entrySet())\n       {\n-        Map.Entry entry = (Map.Entry) entries.next();\n         if (entry.getValue() == Boolean.FALSE)\n           _LOG.warning(\"PPR target {0} was not rendered.\",\n                        entry.getKey());\n@@ -100,7 +98,7 @@ public void finish()\n   /**\n    * Returns the set of partial targets for this rendering pass.\n    */\n-  public Iterator getPartialTargets()\n+  public Iterator<String> getPartialTargets()\n   {\n     return _targets.keySet().iterator();\n   }\n@@ -165,7 +163,7 @@ public void addRenderedPartialTarget(String id)\n     _renderedTargets.add(id);\n   }\n \n-  public Iterator getRenderedPartialTargets()\n+  public Iterator<String> getRenderedPartialTargets()\n   {\n     return _renderedTargets.iterator();\n   }\n@@ -237,14 +235,16 @@ private String _getCurrentPartialTarget()\n     if (_currentTargetStack.empty())\n       return null;\n \n-    return (String)_currentTargetStack.peek();\n+    return _currentTargetStack.peek();\n   }\n \n-  private Map _targets;\n-  private Set _renderedTargets;\n+  private Map<String, Boolean> _targets;\n+  private Set<String> _renderedTargets;\n \n   // The stack of partial targets that are currently being rendered\n-  private Stack    _currentTargetStack;\n+  // -= Simon Lessard =-\n+  // FIXME: java.util.Stack... enough said... ArrayList or LinkedList please\n+  private Stack<String> _currentTargetStack;\n \n   private static final TrinidadLogger _LOG = TrinidadLogger.createTrinidadLogger(PartialPageContext.class);\n }", "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/ppr/PartialPageContext.java"}, {"additions": 30, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/ppr/ScriptBufferingResponseWriter.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/ppr/ScriptBufferingResponseWriter.java", "sha": "3d0eb3e8f08b251fa5e2c0a2586a3540b5cd8f27", "changes": 45, "status": "modified", "deletions": 15, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/ppr/ScriptBufferingResponseWriter.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add", "patch": "@@ -38,13 +38,16 @@\n  */\n public class ScriptBufferingResponseWriter extends ResponseWriterDecorator\n {\n+  @SuppressWarnings(\"unchecked\")\n   public ScriptBufferingResponseWriter(\n      FacesContext   context,\n      ResponseWriter output)\n   {\n     this(output, null);\n \n-    Map requestScope = context.getExternalContext().getRequestMap();\n+    Map<String, Object> requestScope = \n+      context.getExternalContext().getRequestMap();\n+    \n     // To support multiple Partial Roots, always look for past\n     // data from a rendered partial request.\n     _data = (Data) requestScope.get(_STORED_DATA_KEY);\n@@ -96,28 +99,31 @@ public String getBufferedScripts()\n    * Returns objects representing any JavaScript libraries that\n    * have been rendered during buffering.\n    */\n-  public Iterator getBufferedLibraries()\n+  public Iterator<Object> getBufferedLibraries()\n   {\n     if (_data.libraries == null)\n       return null;\n \n     return _data.libraries.iterator();\n   }\n \n+  @Override\n   public ResponseWriter cloneWithWriter(Writer writer)\n   {\n     return new ScriptBufferingResponseWriter(\n       getResponseWriter().cloneWithWriter(writer),\n       _data);\n   }\n \n+  @Override\n   public void writeComment(Object text) throws IOException\n   {\n     // Don't bother write out comments if we are buffering\n     if (!_checkBuffer())\n       super.writeComment(text);\n   }\n \n+  @Override\n   public void writeText(Object text, String property) throws IOException\n   {\n     if (_checkBuffer())\n@@ -126,6 +132,7 @@ public void writeText(Object text, String property) throws IOException\n       super.writeText(text, property);\n   }\n \n+  @Override\n   public void writeText(\n     char[]      text,\n     int         start,\n@@ -138,6 +145,7 @@ public void writeText(\n   }\n \n \n+  @Override\n   public void write(String text) throws IOException\n   {\n     if (_checkBuffer())\n@@ -146,6 +154,7 @@ public void write(String text) throws IOException\n       super.write(text);\n   }\n \n+  @Override\n   public void write(\n     char[]      text,\n     int         start,\n@@ -157,6 +166,7 @@ public void write(\n       super.write(text, start, length);\n   }\n \n+  @Override\n   public void write(int ch) throws IOException\n   {\n     if (_checkBuffer())\n@@ -165,6 +175,7 @@ public void write(int ch) throws IOException\n       super.write(ch);\n   }\n \n+  @Override\n   public void startElement(String name,\n                            UIComponent component) throws IOException\n   {\n@@ -192,6 +203,7 @@ else if (_isObject(name))\n       super.startElement(name, component);\n   }\n \n+  @Override\n   public void endElement(String name) throws IOException\n   {\n     if (_isScript(name))\n@@ -204,7 +216,7 @@ public void endElement(String name) throws IOException\n       {\n         // Add the library to the our list\n         if (_data.libraries == null)\n-          _data.libraries = new ArrayList(10);\n+          _data.libraries = new ArrayList<Object>(10);\n \n         _data.libraries.add(source);\n       }\n@@ -241,6 +253,7 @@ else if (_isObject(name))\n       super.endElement(name);\n   }\n \n+  @Override\n   public void writeAttribute(\n     String     name,\n     Object     value,\n@@ -252,6 +265,7 @@ public void writeAttribute(\n       super.writeAttribute(name, value, property);\n   }\n \n+  @Override\n   public void writeURIAttribute(\n     String     name,\n     Object     value,\n@@ -296,12 +310,12 @@ private boolean _checkBuffer() throws IOException\n     // the script start element now.\n     super.startElement(\"script\", null);\n \n-    Iterator keys = _data.attrs.keys();\n+    Iterator<String> keys = _data.attrs.keys();\n     if (keys != null)\n     {\n       while (keys.hasNext())\n       {\n-        String key = (String)keys.next();\n+        String key = keys.next();\n         super.writeAttribute(key, _data.attrs.get(key), null);\n       }\n     }\n@@ -311,7 +325,7 @@ private boolean _checkBuffer() throws IOException\n     {\n       while (keys.hasNext())\n       {\n-        String key = (String)keys.next();\n+        String key = keys.next();\n         super.writeURIAttribute(key, _data.uriAttrs.get(key), null);\n       }\n     }\n@@ -355,17 +369,18 @@ private boolean _isObject(String name)\n   {\n     public Data()\n     {\n-      attrs = new ArrayMap(3);\n-      uriAttrs = new ArrayMap(1);\n+      attrs = new ArrayMap<String, Object>(3);\n+      uriAttrs = new ArrayMap<String, Object>(1);\n+      objectSuffix = 0;\n     }\n \n-    public boolean      inScriptStart;  // Inside a script start element?\n-    public ArrayMap     attrs;          // Attrs of the script element\n-    public ArrayMap     uriAttrs;       // URI attrs of the script element\n-    public boolean      buffering;      // Are currently buffering?\n-    public StringBuffer buffer;         // The buffer\n-    public ArrayList    libraries;      // Imported JavaScript libraries\n-    public int          objectSuffix=0; // For the object element ppr bug\n+    public boolean                  inScriptStart;        // Inside a script start element?\n+    public ArrayMap<String, Object> attrs;                // Attrs of the script element\n+    public ArrayMap<String, Object> uriAttrs;             // URI attrs of the script element\n+    public boolean                  buffering;            // Are currently buffering?\n+    public StringBuffer             buffer;               // The buffer\n+    public ArrayList<Object>        libraries;            // Imported JavaScript libraries\n+    public int                      objectSuffix;         // For the object element ppr bug\n   }\n \n   // This utility method is used to strip /**/ style comments out of", "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/ppr/ScriptBufferingResponseWriter.java"}, {"additions": 4, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/skin/BaseDesktopSkin.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/skin/BaseDesktopSkin.java", "sha": "88eebecd81506eb9f753b325e333fc52a118229c", "changes": 4, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/skin/BaseDesktopSkin.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add", "patch": "@@ -46,6 +46,7 @@ public BaseDesktopSkin()\n    * Returns the id for the desktop implementation of the Base\n    * Look And Feel: \"base.desktop\".\n    */\n+  @Override\n   public String getId()\n   {\n     return BaseDesktopConstants.BASE_DESKTOP_ID;\n@@ -55,6 +56,7 @@ public String getId()\n    * Returns the family for the Base\n    * Look And Feel: \"base\".\n    */\n+  @Override\n   public String getFamily()\n   {\n     return \"base\";\n@@ -64,6 +66,7 @@ public String getFamily()\n   /**\n    * Returns the renderKitId for the BaseDesktopSkin: \"org.apache.myfaces.trinidad.desktop\".\n    */\n+  @Override\n   public String getRenderKitId()\n   {\n     return ORACLE_ADF_DESKTOP;\n@@ -72,6 +75,7 @@ public String getRenderKitId()\n   /**\n    * Returns the name of the XSS style sheet for this Skin.\n    */\n+  @Override\n   public String getStyleSheetName()\n   {\n     return \"base-desktop.xss\";", "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/skin/BaseDesktopSkin.java"}, {"additions": 2, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/skin/BaseSkin.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/skin/BaseSkin.java", "sha": "af362f125c4ea1d315b9eeafad32e0c266f97dec", "changes": 2, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/skin/BaseSkin.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add", "patch": "@@ -31,11 +31,13 @@ public BaseSkin()\n   /**\n    * Returns the name of the XSS style sheet for this Skin.\n    */\n+  @Override\n   public String getStyleSheetName()\n   {\n     return null;\n   }\n \n+  @Override\n   protected String getBundleName()\n   {\n     return null;", "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/skin/BaseSkin.java"}, {"additions": 6, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/skin/MacOSSwitcherIcon.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/skin/MacOSSwitcherIcon.java", "sha": "1fe652404bc59574edb3a5e95e77cebb0f97ce34", "changes": 8, "status": "modified", "deletions": 2, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/skin/MacOSSwitcherIcon.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add", "patch": "@@ -52,10 +52,11 @@ public MacOSSwitcherIcon(\n   /**\n    * Override of Icon.renderIcon().\n    */\n+  @Override\n   public void renderIcon(\n     FacesContext        context,\n-    RenderingContext arc,\n-    Map              attrs\n+    RenderingContext    arc,\n+    Map<String, Object> attrs\n     ) throws IOException\n   {\n     Icon icon = _getIcon(arc);\n@@ -66,6 +67,7 @@ public void renderIcon(\n   /**\n    * Override of Icon.getImageURI().\n    */\n+  @Override\n   public Object getImageURI(\n     FacesContext        context,\n     RenderingContext arc)\n@@ -78,6 +80,7 @@ public Object getImageURI(\n   /**\n    * Override of Icon.getImageWidth().\n    */\n+  @Override\n   public Integer getImageWidth(RenderingContext arc)\n   {\n     Icon icon = _getIcon(arc);\n@@ -88,6 +91,7 @@ public Integer getImageWidth(RenderingContext arc)\n   /**\n    * Override of Icon.getImageHeight().\n    */\n+  @Override\n   public Integer getImageHeight(RenderingContext arc)\n   {\n     Icon icon = _getIcon(arc);", "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/skin/MacOSSwitcherIcon.java"}, {"additions": 4, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/skin/SimpleDesktopSkin.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/skin/SimpleDesktopSkin.java", "sha": "546c9f8712712403e2a2c666396a8e76889207f8", "changes": 4, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/skin/SimpleDesktopSkin.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add", "patch": "@@ -38,6 +38,7 @@ public SimpleDesktopSkin()\n   /**\n    * Returns the name of the XSS style sheet for this Skin.\n    */\n+  @Override\n   public String getStyleSheetName()\n   {\n     return \"META-INF/adf/styles/simple-desktop.xss\";\n@@ -46,6 +47,7 @@ public String getStyleSheetName()\n   /**\n    * Returns the id of this simple desktop Skin \"simple.desktop\".\n    */\n+  @Override\n   public String getId()\n   {\n     return \"simple.desktop\";\n@@ -55,6 +57,7 @@ public String getId()\n    * Returns the family for the Simple\n    * Skin: \"simple\".\n    */\n+  @Override\n   public String getFamily()\n   {\n     return \"simple\";\n@@ -63,6 +66,7 @@ public String getFamily()\n   /**\n    * Returns the renderKitId for the SimpleDesktopSkin: \"org.apache.myfaces.trinidad.desktop\".\n    */  \n+  @Override\n   public String getRenderKitId()\n   {\n     return ORACLE_ADF_DESKTOP;", "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/skin/SimpleDesktopSkin.java"}, {"additions": 4, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/skin/SimplePdaSkin.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/skin/SimplePdaSkin.java", "sha": "911df5682e62b7f3f93045e98478232fc36fae95", "changes": 6, "status": "modified", "deletions": 2, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/skin/SimplePdaSkin.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add", "patch": "@@ -28,6 +28,7 @@\n   /**\n    * Returns the name of the XSS style sheet for this Skin.\n    */\n+  @Override\n   public String getStyleSheetName()\n   {\n     return \"META-INF/adf/styles/simple-pda.xss\";\n@@ -37,6 +38,7 @@ public String getStyleSheetName()\n    * Returns the id for the PDA implementation of the Simple\n    * Skin: \"simple.pda\".\n    */\n+  @Override\n   public String getId()\n   {\n     return \"simple.pda\";\n@@ -46,6 +48,7 @@ public String getId()\n    * Returns the family for the PDA implementation of the Simple\n    * Skin: \"simple.pda\".\n    */\n+  @Override\n   public String getFamily()\n   {\n     return \"simple\";\n@@ -55,10 +58,9 @@ public String getFamily()\n    * Returns the renderKitId for the PDA implementation of the Simple\n    * Skin: \"org.apache.myfaces.trinidad.pda\".\n    */  \n+  @Override\n   public String getRenderKitId()\n   {\n     return ORACLE_ADF_PDA;\n   }\n-\n-\n }", "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/skin/SimplePdaSkin.java"}, {"additions": 2, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/skin/TranslatedTextIcon.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/skin/TranslatedTextIcon.java", "sha": "e4b3a77b94815c2625f93ab116ceb7fa10f8b8ba", "changes": 5, "status": "modified", "deletions": 3, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/skin/TranslatedTextIcon.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add", "patch": "@@ -37,12 +37,11 @@ public TranslatedTextIcon(String key)\n   /**\n    * Returns the text to render.\n    */\n+  @Override\n   protected String getText(RenderingContext arc)\n   {\n-   return arc.getTranslatedString(_key);\n-\n+    return arc.getTranslatedString(_key);\n   }\n \n-\n   private String _key;\n }", "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/skin/TranslatedTextIcon.java"}, {"additions": 1, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/skin/XhtmlSkin.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/skin/XhtmlSkin.java", "sha": "6e2f5d587e0b3ad61044fd0a65377b981811ac85", "changes": 1, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/skin/XhtmlSkin.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add", "patch": "@@ -44,6 +44,7 @@ public XhtmlSkin()\n   /**\n    * @todo Move the \"BLAF\" bundle to a more generic location.\n    */\n+  @Override\n   protected String getBundleName()\n   {\n     return _BUNDLE_CLASS;", "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/skin/XhtmlSkin.java"}, {"additions": 4, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/AutoSubmitUtils.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/AutoSubmitUtils.java", "sha": "f6151bc23f6dbc6ed2ae9383af64064869a852ae", "changes": 7, "status": "modified", "deletions": 3, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/AutoSubmitUtils.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add", "patch": "@@ -50,17 +50,16 @@ public static void writeDependencies(\n    * Find all UIParameter children of a component, and\n    * return it as a JS string of \"name1:value1,name2:value2\".\n    */\n+  @SuppressWarnings(\"unchecked\")\n   public static String getParameters(UIComponent comp)\n   {\n     int childCount = comp.getChildCount();\n     if (childCount == 0)\n       return null;\n       \n     StringBuffer buffer = null;\n-    List children = comp.getChildren();\n-    for (int i = 0; i < childCount; i++)\n+    for(UIComponent child : (List<UIComponent>)comp.getChildren())\n     {\n-      UIComponent child = (UIComponent) children.get(i);\n       if (child instanceof UIParameter)\n       {\n         UIParameter param = (UIParameter) child;\n@@ -283,11 +282,13 @@ static public Scriptlet sharedInstance()\n       return _sInstance;\n     }\n \n+    @Override\n     public Object getScriptletKey()\n     {\n       return _AUTO_SUBMIT_SCRIPTLET;\n     }\n \n+    @Override\n     protected void outputScriptletContent(\n       FacesContext context,\n       RenderingContext arc)", "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/AutoSubmitUtils.java"}, {"additions": 11, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/BodyRenderer.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/BodyRenderer.java", "sha": "3162dd419887860a504c1536838bdbbb1baaebc4", "changes": 17, "status": "modified", "deletions": 6, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/BodyRenderer.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add", "patch": "@@ -52,6 +52,7 @@ protected BodyRenderer(FacesBean.Type type)\n     super(type);\n   }\n   \n+  @Override\n   protected void findTypeConstants(FacesBean.Type type)\n   {\n     super.findTypeConstants(type);\n@@ -61,7 +62,7 @@ protected void findTypeConstants(FacesBean.Type type)\n     _onunloadKey = type.findKey(\"onunload\");\n   }\n \n-\n+  @Override\n   protected void encodeAll(\n     FacesContext        context,\n     RenderingContext arc,\n@@ -78,6 +79,7 @@ protected void encodeAll(\n     _writeVersionInformation(context, arc);\n   }\n \n+  @Override\n   protected void renderAtEnd(\n     FacesContext context,\n     RenderingContext arc) throws IOException\n@@ -87,6 +89,7 @@ protected void renderAtEnd(\n     _renderInitialFocusScript(context, arc);\n   }\n \n+  @Override\n   protected void renderPPRSupport(\n     FacesContext        context,\n     RenderingContext arc,\n@@ -105,6 +108,7 @@ protected void renderPPRSupport(\n     }\n   }\n \n+  @Override\n   protected void renderContent(\n     FacesContext        context,\n     RenderingContext arc,\n@@ -136,12 +140,13 @@ protected void renderContent(\n     }\n   }\n \n+  @Override\n   protected String getStyleClass(FacesBean bean)\n   {\n-    String styleClass = super.getStyleClass(bean);\n-    return styleClass;\n+    return super.getStyleClass(bean);\n   }\n \n+  @Override\n   protected void renderEventHandlers(\n     FacesContext context,\n     FacesBean    bean) throws IOException\n@@ -399,11 +404,11 @@ static private void _writeVersionInformation(\n   {\n     String comment = _VERSION_COMMENT;\n \n-    Class implClass = BodyRenderer.class;\n+    Class<BodyRenderer> implClass = BodyRenderer.class;\n     Package implPkg = implClass.getPackage();\n \n-    Class apiClass  =  FacesBean.class;\n-    Package apiPkg  =  apiClass.getPackage();\n+    Class<FacesBean> apiClass  =  FacesBean.class;\n+    Package apiPkg = apiClass.getPackage();\n \n     String versionInfo = _getVersionInfo(apiPkg, implPkg);\n ", "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/BodyRenderer.java"}, {"additions": 14, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/BreadCrumbsRenderer.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/BreadCrumbsRenderer.java", "sha": "7584d11ff9d3c257e07d19a2c4a304e930e8891e", "changes": 20, "status": "modified", "deletions": 6, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/BreadCrumbsRenderer.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add", "patch": "@@ -45,18 +45,20 @@ public BreadCrumbsRenderer()\n     super(CoreBreadCrumbs.TYPE);\n   }\n   \n+  @Override\n   protected void findTypeConstants(FacesBean.Type type)\n   {\n     super.findTypeConstants(type);\n     _orientationKey = type.findKey(\"orientation\");\n   }\n \n-\n+  @Override\n   public boolean getRendersChildren()\n   {\n     return true;\n   }\n   \n+  @Override\n   protected void encodeAll(\n     FacesContext        context,\n     RenderingContext arc,\n@@ -96,6 +98,7 @@ protected UIComponent getStamp(\n     return stamp;\n   }\n \n+  @SuppressWarnings(\"unchecked\")\n   protected void renderContent(\n     FacesContext        context,\n     RenderingContext arc,\n@@ -123,7 +126,9 @@ protected void renderContent(\n       if (focusPath == null)\n         return;\n       \n-      List paths = new ArrayList(component.getAllAncestorContainerRowKeys(focusPath));\n+      List<Object> paths = \n+        new ArrayList<Object>(component.getAllAncestorContainerRowKeys(focusPath));\n+      \n       paths.add(focusPath);\n       int size = paths.size();        \n \n@@ -153,11 +158,11 @@ protected void renderContent(\n     // now render children\n     if (hasChildren(component))\n     {\n-      List children = component.getChildren();\n+      List<UIComponent> children = component.getChildren();\n       nextVisChildIndex = getNextRenderedChildIndex(children, -1);\n       while (nextVisChildIndex != NO_CHILD_INDEX)\n       {\n-        UIComponent child = (UIComponent)children.get(nextVisChildIndex);        \n+        UIComponent child = children.get(nextVisChildIndex);        \n         nextVisChildIndex = getNextRenderedChildIndex(children, \n                                                       nextVisChildIndex);\n         isLastChild = (nextVisChildIndex == NO_CHILD_INDEX);           \n@@ -249,7 +254,7 @@ protected void renderLink(\n       isBidi = Bidi.requiresBidi(firstChar, 0, 1);\n     }\n     \n-    Map originalResourceKeyMap = arc.getSkinResourceKeyMap();\n+    Map<String, String> originalResourceKeyMap = arc.getSkinResourceKeyMap();\n     try\n     {\n       arc.setSkinResourceKeyMap(_RESOURCE_KEY_MAP);\n@@ -287,6 +292,7 @@ protected boolean shouldRenderLastChild(\n    * renderStyleAttributes - use the NavigationPath style class as the default\n    * styleClass\n    */\n+  @Override\n   protected void renderStyleAttributes(\n     FacesContext        context,\n     RenderingContext arc,\n@@ -401,9 +407,11 @@ private boolean _isVertical(FacesBean bean)\n   private static final int _INDENT_SPACES = 10;  \n   \n   \n-  private static final Map _RESOURCE_KEY_MAP  =  new HashMap();\n+  private static final Map<String, String> _RESOURCE_KEY_MAP;\n   static\n   {\n+    _RESOURCE_KEY_MAP  =  new HashMap<String, String>();\n+    \n     _RESOURCE_KEY_MAP.put(\n       XhtmlConstants.LINK_STYLE_CLASS,\n       XhtmlConstants.AF_NAVIGATION_PATH_STEP_STYLE_CLASS);", "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/BreadCrumbsRenderer.java"}, {"additions": 19, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/ChooseDateRenderer.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/ChooseDateRenderer.java", "sha": "585a502ec0e78fece90c1519246ae192edf12c8b", "changes": 29, "status": "modified", "deletions": 10, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/ChooseDateRenderer.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add", "patch": "@@ -71,6 +71,7 @@ protected ChooseDateRenderer(FacesBean.Type type)\n     super(type);\n   }\n \n+  @Override\n   protected void findTypeConstants(FacesBean.Type type)\n   {\n     super.findTypeConstants(type);\n@@ -81,18 +82,21 @@ protected void findTypeConstants(FacesBean.Type type)\n     _destinationKey = PropertyKey.createPropertyKey(\"destination\");\n   }\n \n+  @Override\n   public boolean getRendersChildren()\n   {\n     return true;\n   }\n \n+  @Override\n   protected boolean shouldRenderId(\n     FacesContext context,\n     UIComponent  component)\n   {\n     return true;\n   }\n \n+  @Override\n   protected final void encodeAll(\n     FacesContext        context,\n     RenderingContext arc,\n@@ -1113,6 +1117,7 @@ private void _renderMonthAndYear(\n   }\n \n \n+  @SuppressWarnings(\"deprecation\")\n   private static long _getTimeAttr(\n     RenderingContext arc,\n     FacesBean   bean,\n@@ -1165,13 +1170,11 @@ else if (value instanceof Calendar)\n         // maximum date.\n         if (tzOffset < 0)\n         {\n-          tzOffset = (long)Math.max((float)tzOffset,\n-                              (float)Long.MIN_VALUE - (float)dateValueInMs);\n+          tzOffset = Math.max(tzOffset, Long.MIN_VALUE - dateValueInMs);\n         }\n         else\n         {\n-          tzOffset = (long)Math.min((float)tzOffset,\n-                              (float)Long.MAX_VALUE - (float)dateValueInMs);\n+          tzOffset = Math.min(tzOffset, Long.MAX_VALUE - dateValueInMs);\n         }\n \n         // adjust the date in ms to the adjusted time zone.\n@@ -1542,19 +1545,25 @@ public CalendarStyles(\n \n   private static final int _MILLIS_IN_DAY = 1000 * 60 * 60 * 24;\n \n-  // =-= bts\n-  // default minimum date is 1AD so we don't have to deal with years in\n-  // different eras.  Hopefully this won't be a problem in other calendars\n-  // (but I think that it will)\n-  private static final long _MIN_TIME =\n-    (new Date(-1899, 1, 1, 0, 0)).getTime();\n+  private static final long _MIN_TIME;\n \n   private static final long _MAX_TIME = Long.MAX_VALUE;\n \n   //\n   // Rendering Context cache keys\n   //\n   private static final Object _DATE_SYMBOLS_KEY = new Object();\n+  \n+  static\n+  {\n+    // =-= bts\n+    // default minimum date is 1AD so we don't have to deal with years in\n+    // different eras.  Hopefully this won't be a problem in other calendars\n+    // (but I think that it will)\n+    Calendar cal = Calendar.getInstance();\n+    cal.set(1, 1, 1, 0, 0);\n+    _MIN_TIME = cal.getTimeInMillis();\n+  }\n \n   private PropertyKey _maxValueKey;\n   private PropertyKey _minValueKey;", "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/ChooseDateRenderer.java"}, {"additions": 16, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/ColumnGroupRenderer.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/ColumnGroupRenderer.java", "sha": "f1638c9002b99b749a2569b672f5559fb81179b8", "changes": 27, "status": "modified", "deletions": 11, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/ColumnGroupRenderer.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add", "patch": "@@ -61,6 +61,7 @@ public ColumnGroupRenderer()\n     super(CoreColumn.TYPE);\n   }\n \n+  @Override\n   protected void findTypeConstants(FacesBean.Type type)\n   {\n     super.findTypeConstants(type);\n@@ -76,7 +77,7 @@ protected void findTypeConstants(FacesBean.Type type)\n     _defaultSortOrderKey = type.findKey(\"defaultSortOrder\");\n   }\n \n-\n+  @Override\n   public boolean getRendersChildren()\n   {\n     return true;\n@@ -180,6 +181,7 @@ protected String getHeaderStyleClass(TableRenderingContext tContext)\n   /**\n    * @todo Will need to support TREE_NODE_STAGE\n    */\n+  @Override\n   protected void encodeAll(\n     FacesContext        context,\n     RenderingContext arc,\n@@ -513,7 +515,7 @@ else if (\"descending\".equals(getDefaultSortOrder(bean)))\n     String sortJS = buffer.toString();\n     if (onclick != null)\n     {\n-      sortJS = (String) XhtmlUtils.getChainedJS(onclick, sortJS, true);\n+      sortJS = XhtmlUtils.getChainedJS(onclick, sortJS, true);\n     }\n \n     return sortJS;\n@@ -632,11 +634,11 @@ protected final int getSortability(\n     // Otherwise, look at the first sort criteria\n     // =-=AEW This seems slow...\n     UIXCollection table = (UIXCollection) tContext.getTable();\n-    List criteria = table.getSortCriteria();\n+    List<SortCriterion> criteria = table.getSortCriteria();\n     // We currently only show anything for the primary sort criterion\n     if (criteria.size() > 0)\n     {\n-      SortCriterion criterion = (SortCriterion) criteria.get(0);\n+      SortCriterion criterion = criteria.get(0);\n       if (property.equals(criterion.getProperty()))\n       {\n         return criterion.isAscending() ? SORT_ASCENDING : SORT_DESCENDING;\n@@ -717,24 +719,27 @@ private void _computeMode(\n     _setParentNode(tContext, parentNode);\n   }\n \n-\n+  @SuppressWarnings(\"unchecked\")\n   private void _renderChildren(FacesContext context,\n                                UIComponent  component,\n                                NodeData     parentNode)\n     throws IOException\n   {\n-    List children = component.getChildren();\n-    int size = children.size();\n-    for (int i = 0; i < size; i++)\n+    int i = 0;\n+    for(UIComponent child : (List<UIComponent>)component.getChildren())\n     {\n-      UIComponent child = (UIComponent) children.get(i);\n       if (child.isRendered())\n       {\n         // Tell the parent node - if there is one - which child we're rendering\n         if (parentNode != null)\n+        {\n           parentNode.currentChild = i;\n+        }\n+        \n         encodeChild(context, child);\n       }\n+      \n+      i++;\n     }\n   }\n \n@@ -790,7 +795,7 @@ private NodeList _getNodeList(TableRenderingContext tContext,\n \n   private static final class NodeList\n   {\n-    private final ArrayList _list = new ArrayList(10);\n+    private final ArrayList<NodeData> _list = new ArrayList<NodeData>(10);\n     private int _index = 0;\n \n     public NodeData currentNode = null;\n@@ -805,7 +810,7 @@ public NodeData getNext()\n       if (_index >= _list.size())\n         _index = 0;\n \n-      return (NodeData) _list.get(_index++);\n+      return _list.get(_index++);\n     }\n   }\n ", "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/ColumnGroupRenderer.java"}, {"additions": 6, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/ColumnRenderer.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/ColumnRenderer.java", "sha": "840870872bbc2aff08e6e89836344bbc9276792d", "changes": 13, "status": "modified", "deletions": 7, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/ColumnRenderer.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add", "patch": "@@ -46,10 +46,10 @@ public ColumnRenderer()\n     super();\n   }\n \n-\n   /**\n    * @todo Will need to support TREE_NODE_STAGE\n    */\n+  @Override\n   protected void encodeAll(\n     FacesContext        context,\n     RenderingContext arc,\n@@ -114,9 +114,10 @@ protected void encodeAll(\n     colData.incrementColumnIndex();\n   }\n \n+  @SuppressWarnings(\"unchecked\")\n   private boolean _isColumnGroup(UIComponent column)\n   {\n-    Iterator kids = column.getChildren().iterator();\n+    Iterator<UIComponent> kids = column.getChildren().iterator();\n     // Special columns - nothing is a column group\n     if (!kids.hasNext())\n       return false;\n@@ -125,17 +126,15 @@ private boolean _isColumnGroup(UIComponent column)\n   }\n \n \n+  @SuppressWarnings(\"unchecked\")\n   protected void renderKids(FacesContext          context,\n-                            RenderingContext   arc,\n+                            RenderingContext      arc,\n                             TableRenderingContext trc,\n                             UIComponent           column) throws IOException\n   {\n-    List children = column.getChildren();\n     boolean renderedOne = false;\n-    int size = children.size();\n-    for (int i = 0; i < size; i++)\n+    for(UIComponent child : (List<UIComponent>)column.getChildren())\n     {\n-      UIComponent child = (UIComponent) children.get(i);\n       if (child.isRendered())\n       {\n         // Put each component on a separate line, separated by a div", "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/ColumnRenderer.java"}, {"additions": 13, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/CommandLinkRenderer.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/CommandLinkRenderer.java", "sha": "c8da0452b9e8ec817a14396a36d8bc80f0ca6a3a", "changes": 15, "status": "modified", "deletions": 2, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/CommandLinkRenderer.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add", "patch": "@@ -38,13 +38,16 @@ public CommandLinkRenderer()\n     super(CoreCommandLink.TYPE);\n   }\n   \n+  @Override\n   protected void findTypeConstants(FacesBean.Type type)\n   {\n     super.findTypeConstants(type);\n     _immediateKey = type.findKey(\"immediate\");\n     _partialSubmitKey = type.findKey(\"partialSubmit\");\n   }\n \n+  @SuppressWarnings(\"unchecked\")\n+  @Override\n   public void decode(FacesContext context, UIComponent component)\n   {\n     RequestContext afContext = RequestContext.getCurrentInstance();\n@@ -56,7 +59,9 @@ public void decode(FacesContext context, UIComponent component)\n     }\n     else\n     {\n-      Map parameterMap = context.getExternalContext().getRequestParameterMap();\n+      Map<String, String> parameterMap = \n+        context.getExternalContext().getRequestParameterMap();\n+      \n       Object source = parameterMap.get(\"source\");\n       String clientId = component.getClientId(context);\n \n@@ -71,6 +76,7 @@ public void decode(FacesContext context, UIComponent component)\n     }\n   }\n   \n+  @Override\n   protected void encodeBegin(\n     FacesContext        context,\n     RenderingContext arc,\n@@ -99,6 +105,7 @@ protected void encodeBegin(\n     arc.setCurrentClientId(null);\n   }\n \n+  @Override\n   public void encodeEnd(\n     FacesContext        context,\n     RenderingContext arc,\n@@ -111,6 +118,7 @@ public void encodeEnd(\n       fd.addNeededValue(XhtmlConstants.SOURCE_PARAM);\n   }\n \n+  @Override\n   protected String getClientId(\n     FacesContext context,\n     UIComponent  component)\n@@ -119,23 +127,26 @@ protected String getClientId(\n     return RenderingContext.getCurrentInstance().getCurrentClientId();\n   }\n \n+  @Override\n   protected String getDestination(FacesBean bean)\n   {\n     return null;\n   }\n \n+  @Override\n   protected String getTargetFrame(FacesBean bean)\n   {\n     return null;\n   }\n \n-\n+  @Override\n   protected boolean hasOnclick(FacesBean bean)\n   {\n     // More efficient\n     return true;\n   }\n \n+  @Override\n   protected String getOnclick(FacesBean bean)\n   {\n     String onclick = super.getOnclick(bean);", "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/CommandLinkRenderer.java"}, {"additions": 3, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/DesktopPanelPageHeaderRenderer.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/DesktopPanelPageHeaderRenderer.java", "sha": "b8460a6120feee91ec49991787b196462bdc7fa0", "changes": 3, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/DesktopPanelPageHeaderRenderer.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add", "patch": "@@ -47,17 +47,20 @@ public DesktopPanelPageHeaderRenderer()\n     super(CorePanelPageHeader.TYPE);\n   }\n \n+  @Override\n   protected void findTypeConstants(FacesBean.Type type)\n   {\n     super.findTypeConstants(type);\n     _chromeTypeKey = type.findKey(\"chromeType\");\n   }\n \n+  @Override\n   public boolean getRendersChildren()\n   {\n     return true;\n   }\n \n+  @Override\n   protected void encodeAll(\n     FacesContext        context,\n     RenderingContext arc,", "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/DesktopPanelPageHeaderRenderer.java"}, {"additions": 4, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/DocumentRenderer.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/DocumentRenderer.java", "sha": "ee7b00ef63b62c440a8724735c6b166cb7a2ba74", "changes": 4, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/DocumentRenderer.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add", "patch": "@@ -45,6 +45,7 @@ protected DocumentRenderer(FacesBean.Type type)\n     super(type);\n   }\n   \n+  @Override\n   protected void findTypeConstants(FacesBean.Type type)\n   {\n     super.findTypeConstants(type);\n@@ -53,11 +54,13 @@ protected void findTypeConstants(FacesBean.Type type)\n     _body = new BodyRenderer(type);\n   }\n \n+  @Override\n   public boolean getRendersChildren()\n   {\n     return true;\n   }\n \n+  @Override\n   protected void encodeAll(\n     FacesContext        context,\n     RenderingContext arc,\n@@ -83,6 +86,7 @@ public Head(FacesBean.Type type)\n       super(type);\n     }\n \n+    @Override\n     protected String getClientId(\n       FacesContext context,\n       UIComponent  component)", "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/DocumentRenderer.java"}, {"additions": 10, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/EditableValueRenderer.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/EditableValueRenderer.java", "sha": "e72307ff3b739d83918280e240eebeec60150a2f", "changes": 13, "status": "modified", "deletions": 3, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/EditableValueRenderer.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add", "patch": "@@ -25,6 +25,7 @@\n import javax.faces.convert.Converter;\n import javax.faces.convert.ConverterException;\n import javax.faces.el.ValueBinding;\n+import javax.faces.validator.Validator;\n \n import org.apache.myfaces.trinidad.logging.TrinidadLogger;\n \n@@ -40,6 +41,7 @@ protected EditableValueRenderer(FacesBean.Type type)\n     super(type);\n   }\n \n+  @Override\n   protected void findTypeConstants(FacesBean.Type type)\n    {\n     super.findTypeConstants(type);\n@@ -54,6 +56,7 @@ protected void findTypeConstants(FacesBean.Type type)\n   //\n   // DECODING IMPLEMENTATION\n   //\n+  @Override\n   public void decode(FacesContext context, UIComponent component)\n   {\n     if (skipDecode(context))\n@@ -91,6 +94,7 @@ public Object getSubmittedValue(\n    * @param component the component\n    * @param newValue the unconverted string value\n    */\n+  @Override\n   public Object getConvertedValue(\n     FacesContext context,\n     UIComponent  component,\n@@ -128,6 +132,7 @@ protected boolean wasSubmitted(\n   /**\n    * All editable components need IDs.\n    */\n+  @Override\n   protected boolean shouldRenderId(\n     FacesContext context,\n     UIComponent  component)\n@@ -138,6 +143,7 @@ protected boolean shouldRenderId(\n   /**\n    * Override to include \"submitted value\".\n    */\n+  @Override\n   protected String getConvertedString(\n     FacesContext context,\n     UIComponent  component,\n@@ -180,7 +186,7 @@ protected void addOnSubmitConverterValidators(\n       if ( converter == null)\n         converter = getDefaultConverter(context, bean);\n \n-      Iterator validators = getValidators(bean);\n+      Iterator<Validator> validators = getValidators(bean);\n \n       if (requiredField ||\n           (converter != null) ||\n@@ -265,9 +271,10 @@ protected boolean isImmediate(FacesBean bean)\n     return Boolean.TRUE.equals(o);\n   }\n \n-  protected Iterator getValidators(FacesBean bean)\n+  @SuppressWarnings(\"unchecked\")\n+  protected Iterator<Validator> getValidators(FacesBean bean)\n   {\n-    return bean.entries(_validatorsKey);\n+    return (Iterator<Validator>)bean.entries(_validatorsKey);\n   }\n \n   private PropertyKey _submittedValueKey;", "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/EditableValueRenderer.java"}, {"additions": 68, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/FormData.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/FormData.java", "sha": "cdb23ef65316d878445296c1072a50318c68d2b7", "changes": 137, "status": "modified", "deletions": 69, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/FormData.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add", "patch": "@@ -99,34 +99,34 @@ public void addLabel(\n     if (targetId == null || label == null)\n       return;\n \n-    Map labelMap = getLabelMap(true);\n+    Map<String, String> labelMap = getLabelMap(true);\n \n     labelMap.put(targetId, label);\n   }\n \n \n \n-  public Map getLabelMap(\n+  public Map<String, String> getLabelMap(\n     boolean  createIfNecessary\n     )\n   {\n     if ((_labelMap == null) && createIfNecessary)\n     {\n-      _labelMap = new HashMap(31);\n+      _labelMap = new HashMap<String, String>(31);\n     }\n \n     return _labelMap;\n   }\n \n \n \n-  public Map getPatternMap(\n+  public Map<String, String> getPatternMap(\n     boolean createIfNecessary\n     )\n   {\n     if ((_patternMap == null) && createIfNecessary)\n     {\n-      _patternMap = new HashMap();\n+      _patternMap = new HashMap<String, String>();\n     }\n \n     return _patternMap;\n@@ -141,7 +141,7 @@ public void addPattern(\n     if (targetId == null || pattern == null)\n       return;\n \n-    Map patternMap = getPatternMap(true);\n+    Map<String, String> patternMap = getPatternMap(true);\n \n     patternMap.put(targetId, pattern);\n   }\n@@ -162,14 +162,14 @@ public void addNeededValue(String name)\n       return;\n     }\n \n-    List neededValues = getNeededValues(true);\n+    List<String> neededValues = getNeededValues(true);\n     neededValues.add(name);\n   }\n \n \n   public void addRenderedValue(String name)\n   {\n-    Set renderedSet = getRenderedValues(true);\n+    Set<String> renderedSet = getRenderedValues(true);\n     renderedSet.add(name);\n   }\n \n@@ -192,106 +192,106 @@ public void addResetCall(\n \n     if (call != null)\n     {\n-      List resetCalls = getResetCalls(true);\n+      List<String> resetCalls = getResetCalls(true);\n \n       // add the call\n       resetCalls.add(call);\n     }\n   }\n \n \n-  public List getResetCalls(\n+  public List<String> getResetCalls(\n     boolean          createIfNecessary\n     )\n   {\n \n     if (_resetCallsList == null && createIfNecessary)\n     {\n-      _resetCallsList = new ArrayList();\n+      _resetCallsList = new ArrayList<String>();\n     }\n \n     return _resetCallsList;\n   }\n \n \n-  public List getClientDependencies(\n+  public List<String> getClientDependencies(\n     boolean          createIfNecessary\n     )\n   {\n     if ((_clientDependencies == null) && createIfNecessary)\n     {\n-      _clientDependencies = new ArrayList(10);\n+      _clientDependencies = new ArrayList<String>(10);\n     }\n \n     return _clientDependencies;\n   }\n \n-  public List getNeededValues(\n+  public List<String> getNeededValues(\n     boolean createIfNecessary\n     )\n   {\n     if ((_neededValues == null) && createIfNecessary)\n     {\n-      _neededValues = new ArrayList(10);\n+      _neededValues = new ArrayList<String>(10);\n     }\n \n     return _neededValues;\n   }\n \n \n-  public Set getRenderedValues(\n+  public Set<String> getRenderedValues(\n     boolean createIfNecessary\n     )\n   {\n     if ((_renderedSet == null) && createIfNecessary)\n     {\n-      _renderedSet =  new HashSet(23);\n+      _renderedSet =  new HashSet<String>(23);\n     }\n \n     return _renderedSet;\n   }\n \n \n-  public Iterator getValidationIterator()\n+  public Iterator<String> getValidationIterator()\n   {\n-    Map validationMap = _getValidationMap(false);\n+    Map<String, Integer> validationMap = _getValidationMap(false);\n     if ( validationMap == null)\n       return null;\n \n     return validationMap.keySet().iterator();\n   }\n \n \n-  public Iterator getErrorFormatIterator()\n+  public Iterator<String> getErrorFormatIterator()\n   {\n-    Map errorFormatMap = _getErrorFormatMap(false);\n+    Map<String, Integer> errorFormatMap = _getErrorFormatMap(false);\n     if ( errorFormatMap == null)\n       return null;\n \n     return errorFormatMap.keySet().iterator();\n   }\n \n-  public List getFormValidatorsInfo(\n+  public List<ConvertValidate> getFormValidatorsInfo(\n     boolean createIfNecessary\n     )\n   {\n     // create the validators if they don't already exist\n     if ((_formValidatorsInfo == null) && createIfNecessary)\n     {\n-      _formValidatorsInfo = new ArrayList();\n+      _formValidatorsInfo = new ArrayList<ConvertValidate>();\n     }\n \n     return _formValidatorsInfo;\n   }\n \n \n-  public List getValidatedInputList(\n+  public List<String> getValidatedInputList(\n     boolean createIfNecessary\n     )\n   {\n     if ((_validatedInputList == null) && createIfNecessary)\n     {\n-      _validatedInputList = new ArrayList();\n+      _validatedInputList = new ArrayList<String>();\n     }\n \n     return _validatedInputList;\n@@ -302,13 +302,13 @@ public List getValidatedInputList(\n    * and this method should be killed.\n    */\n   public void addOnSubmitConverterValidators(\n-    UIComponent      component,\n-    Converter        converter,\n-    Iterator         validators,\n-    String           clientId,\n-    boolean          immediate,\n-    boolean          required,\n-    String           requiredMessageKey\n+    UIComponent         component,\n+    Converter           converter,\n+    Iterator<Validator> validators,\n+    String              clientId,\n+    boolean             immediate,\n+    boolean             required,\n+    String              requiredMessageKey\n     ) throws IOException\n   {\n     if (clientId == null)\n@@ -362,7 +362,7 @@ public void addOnSubmitConverterValidators(\n     {\n       while (validators.hasNext())\n       {\n-        Validator validator = (Validator) validators.next();\n+        Validator validator = validators.next();\n \n         if (validator instanceof ClientValidator)\n         {\n@@ -419,7 +419,7 @@ private void _addFormValidatorInfo(\n     if (validator != null && convertValidate != null)\n     {\n       if (convertValidate.validators == null)\n-        convertValidate.validators = new ArrayList();\n+        convertValidate.validators = new ArrayList<Integer>();\n \n       // add the validator\n       convertValidate.validators.add(_addValidation(validator));\n@@ -459,16 +459,16 @@ private void _addOnSubmitConverter(\n \n     }\n \n-    Object clientDependency = submitConverter.getClientScript(fcontext,\n-                                                                component);\n+    String clientDependency = submitConverter.getClientScript(fcontext,\n+                                                              component);\n     if (clientDependency != null)\n     {\n-      List clientDependencies = getClientDependencies(true);\n+      List<String> clientDependencies = getClientDependencies(true);\n       clientDependencies.add(clientDependency);\n     }\n \n-    String converter = (String)submitConverter.getClientConversion(fcontext,\n-                                                                   component);\n+    String converter = submitConverter.getClientConversion(fcontext,\n+                                                           component);\n \n     if (converter != null)\n     {\n@@ -505,18 +505,17 @@ private void _addOnSubmitValidator(\n     }\n     else\n     {\n-      Object clientDependency = submitValidator.getClientScript(fContext,\n-                                                                  component);\n+      String clientDependency = submitValidator.getClientScript(fContext,\n+                                                                component);\n       if (clientDependency != null)\n       {\n-        List clientDependencies = getClientDependencies(true);\n+        List<String> clientDependencies = getClientDependencies(true);\n         clientDependencies.add(clientDependency);\n       }\n     }\n \n-    String validator = (String)submitValidator.getClientValidation(\n-                                                     fContext,\n-                                                     component);\n+    String validator = submitValidator.getClientValidation(fContext,\n+                                                           component);\n \n     if (validator != null)\n     {\n@@ -535,9 +534,9 @@ private Integer _addValidation(\n     )\n   {\n     //TODO - not checking for null so map always getting created\n-    Map validationMap = _getValidationMap(true);\n+    Map<String, Integer> validationMap = _getValidationMap(true);\n \n-    Integer validationIndex = (Integer)validationMap.get(validation);\n+    Integer validationIndex = validationMap.get(validation);\n \n     if (validationIndex == null)\n     {\n@@ -559,9 +558,9 @@ private Integer _addErrorFormat(\n   {\n     if (errorFormat != null)\n     {\n-      Map errorFormatMap = _getErrorFormatMap(true);\n+      Map<String, Integer> errorFormatMap = _getErrorFormatMap(true);\n \n-      Integer errorFormatIndex = (Integer)errorFormatMap.get(errorFormat);\n+      Integer errorFormatIndex = errorFormatMap.get(errorFormat);\n \n       if (errorFormatIndex == null)\n       {\n@@ -593,7 +592,7 @@ private ConvertValidate _getNewConvertValidate(\n       convertValidateInfo.clientId = clientId;\n \n       // add to list\n-      List convertValidateList = getFormValidatorsInfo(true);\n+      List<ConvertValidate> convertValidateList = getFormValidatorsInfo(true);\n       convertValidateList.add(convertValidateInfo);\n \n       return convertValidateInfo;\n@@ -618,25 +617,25 @@ private void _addValidatedInput(\n \n \n \n-  private Map _getValidationMap(\n+  private Map<String, Integer> _getValidationMap(\n     boolean          createIfNecessary\n     )\n   {\n     if ((_validationMap == null) && createIfNecessary)\n     {\n-      _validationMap = new LinkedHashMap(31);\n+      _validationMap = new LinkedHashMap<String, Integer>(31);\n     }\n \n     return _validationMap;\n   }\n \n-  private Map _getErrorFormatMap(\n+  private Map<String, Integer> _getErrorFormatMap(\n     boolean          createIfNecessary\n     )\n   {\n     if ((_errorFormatMap == null) && createIfNecessary)\n     {\n-      _errorFormatMap = new LinkedHashMap(31);\n+      _errorFormatMap = new LinkedHashMap<String, Integer>(31);\n     }\n \n     return _errorFormatMap;\n@@ -716,51 +715,51 @@ static private void _writeDependencies(\n   // map of unique validation string to index in map\n   // used so that each converter and validator constructor\n   // is only written out once\n-  private Map _validationMap = null;\n+  private Map<String, Integer> _validationMap = null;\n \n   // map of unique error string to index in map\n   // used so that each error string is only written out once\n-  private Map _errorFormatMap = null;\n+  private Map<String, Integer> _errorFormatMap = null;\n \n   // List of ConvertValidate objects\n-  private List _formValidatorsInfo;\n+  private List<ConvertValidate> _formValidatorsInfo;\n \n   // javascript needed for client validations\n-  private List _clientDependencies;\n+  private List<String> _clientDependencies;\n \n \n   // List of id's of input controls that need to get validated\n-  private List _validatedInputList;\n+  private List<String> _validatedInputList;\n \n \n   private boolean _useCompoundNames = false;\n \n   // List of empty hidden fields that will be filled during event generation\n-  private List _neededValues;\n+  private List<String> _neededValues;\n \n \n-  private Set _renderedSet;\n+  private Set<String> _renderedSet;\n \n   // maps labels to id's\n   // need a label map because the label is not always an attribute\n   // on the component\n-  private Map _labelMap = null;\n+  private Map<String, String> _labelMap = null;\n \n   // List of reset calls\n-  private List _resetCallsList = null;\n+  private List<String> _resetCallsList = null;\n \n   // maps patterns to id's\n-  private Map _patternMap;\n+  private Map<String, String> _patternMap;\n \n   private String _formName = null;\n \n  public static final class ConvertValidate\n   {\n-    public String    clientId;\n-    public boolean   required = false;\n-    public Integer   requiredFormatIndex;\n-    public ArrayList validators;\n-    public Object    converter;\n+    public String             clientId;\n+    public boolean            required = false;\n+    public Integer            requiredFormatIndex;\n+    public ArrayList<Integer> validators;\n+    public Object             converter;\n   }\n \n ", "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/FormData.java"}, {"additions": 4, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/FormElementRenderer.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/FormElementRenderer.java", "sha": "f33af80f5c7f1ab9ce79b9e9f313cc2a98b2b3ae", "changes": 4, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/FormElementRenderer.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add", "patch": "@@ -33,6 +33,7 @@ protected FormElementRenderer(FacesBean.Type type)\n     super(type);\n   }\n \n+  @Override\n   protected void findTypeConstants(FacesBean.Type type)\n   {\n     super.findTypeConstants(type);\n@@ -44,11 +45,13 @@ protected void findTypeConstants(FacesBean.Type type)\n     _contentStyleKey = type.findKey(\"contentStyle\");\n   }\n \n+  @Override\n   public boolean getRendersChildren()\n   {\n     return true;\n   }\n \n+  @Override\n   protected final void encodeAll(\n     FacesContext        context,\n     RenderingContext arc,\n@@ -140,6 +143,7 @@ protected void renderNonElementContent(\n   {\n   }\n \n+  @Override\n   protected void renderEventHandlers(\n     FacesContext context,\n     FacesBean    bean) throws IOException", "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/FormElementRenderer.java"}, {"additions": 3, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/FormInputRenderer.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/FormInputRenderer.java", "sha": "eb1a4411893323ed7bf099a2ac4c295e17986861", "changes": 3, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/FormInputRenderer.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add", "patch": "@@ -33,6 +33,7 @@ protected FormInputRenderer(FacesBean.Type type)\n     super(type);\n   }\n   \n+  @Override\n   protected void findTypeConstants(FacesBean.Type type)\n   {\n     super.findTypeConstants(type);\n@@ -42,6 +43,7 @@ protected void findTypeConstants(FacesBean.Type type)\n   /**\n    * Render the client ID as both an \"id\" and a \"name\"\n    */\n+  @Override\n   protected void renderId(\n     FacesContext context,\n     UIComponent  component) throws IOException\n@@ -90,6 +92,7 @@ protected void renderDisabledAttribute(\n    * attribute values on the 'content' piece. This is usually false.\n    * @throws IOException\n    */\n+  @Override\n   protected void renderAllAttributes(\n     FacesContext        context,\n     RenderingContext arc,", "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/FormInputRenderer.java"}, {"additions": 51, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/FormRenderer.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/FormRenderer.java", "sha": "b73cf2f995cd7ac8d65e7dbc3902e4265b767d89", "changes": 89, "status": "modified", "deletions": 38, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/FormRenderer.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add", "patch": "@@ -28,6 +28,7 @@\n import javax.faces.context.FacesContext;\n import javax.faces.context.ResponseWriter;\n import javax.faces.convert.Converter;\n+import javax.faces.validator.Validator;\n \n import org.apache.myfaces.trinidad.logging.TrinidadLogger;\n import org.apache.myfaces.trinidad.bean.FacesBean;\n@@ -46,8 +47,6 @@\n // TODO: Remove this class\n import org.apache.myfaces.trinidadinternal.share.data.ServletRequestParameters;\n \n-import org.apache.myfaces.trinidadinternal.util.IntegerUtils;\n-\n /**\n  * @version $Name:  $ ($Revision: adfrt/faces/adf-faces-impl/src/main/java/oracle/adfinternal/view/faces/ui/laf/base/xhtml/FormRenderer.java#0 $) $Date: 10-nov-2005.18:53:51 $\n  * @author The Oracle ADF Faces Team\n@@ -59,10 +58,14 @@ public FormRenderer()\n     super(CoreForm.TYPE);\n   }\n \n+  @SuppressWarnings(\"unchecked\")\n+  @Override\n   public void decode(FacesContext context,\n                      UIComponent component)\n   {\n-    Map paramMap = context.getExternalContext().getRequestParameterMap();\n+    Map<String, String> paramMap = \n+      context.getExternalContext().getRequestParameterMap();\n+    \n     Object formName = paramMap.get(CoreResponseStateManager.FORM_FIELD_NAME);\n     boolean submitted = false;\n \n@@ -76,11 +79,13 @@ public void decode(FacesContext context,\n       ((UIXForm) component).setSubmitted(submitted);\n   }\n \n+  @Override\n   public boolean getRendersChildren()\n   {\n     return false;\n   }\n \n+  @Override\n   protected void findTypeConstants(FacesBean.Type type)\n   {\n     super.findTypeConstants(type);\n@@ -91,7 +96,7 @@ protected void findTypeConstants(FacesBean.Type type)\n     _targetFrameKey = type.findKey(\"targetFrame\");\n   }\n \n-\n+  @Override\n   protected void encodeBegin(\n     FacesContext        context,\n     RenderingContext arc,\n@@ -193,7 +198,7 @@ protected void encodeBegin(\n     }\n   }\n \n-\n+  @Override\n   protected void encodeEnd(\n     FacesContext        context,\n     RenderingContext arc,\n@@ -307,6 +312,7 @@ protected void encodeEnd(\n   /**\n    * Returns the inline Style used to render this node.\n    */\n+  @Override\n   protected String getInlineStyle(FacesBean bean)\n   {\n     String inlineStyle = super.getInlineStyle(bean);\n@@ -320,6 +326,7 @@ protected String getInlineStyle(FacesBean bean)\n   /**\n    * Render the client ID as both an \"id\" and a \"name\"\n    */\n+  @Override\n   protected void renderId(\n     FacesContext context,\n     UIComponent  component) throws IOException\n@@ -334,6 +341,7 @@ protected void renderId(\n   /**\n    * All editable components need IDs.\n    */\n+  @Override\n   protected boolean shouldRenderId(\n     FacesContext context,\n     UIComponent  component)\n@@ -355,7 +363,7 @@ private static void _renderResetCalls(\n     // Write the array of reset calls\n     //\n     FormData fData = arc.getFormData();\n-    List resetCallList = fData.getResetCalls(false);\n+    List<String> resetCallList = fData.getResetCalls(false);\n \n     int resetCallCount = (resetCallList != null)\n                             ? resetCallList.size()\n@@ -380,7 +388,7 @@ private static void _renderResetCalls(\n \n       for (int i = 0; i < resetCallCount; i++)\n       {\n-        String currCall = (String)resetCallList.get(i);\n+        String currCall = resetCallList.get(i);\n \n         if (firstCall)\n         {\n@@ -436,7 +444,7 @@ private static void _renderValidationScripts(\n     // The dependencies may be needed - see bug\n     // 4409339 TURNING OFF CLIENT SIDE VALIDATION CAUSES\n     //                                ERRORS IN SELECTINPUTCOLOR & DATE\n-    List clientDependencies = fData.getClientDependencies( false);\n+    List<String> clientDependencies = fData.getClientDependencies( false);\n     if (clientDependencies != null)\n     {\n       for (int d = 0; d < clientDependencies.size(); d++)\n@@ -471,7 +479,7 @@ private static void _renderValidationScripts(\n     // Write the array of validation calls\n     //\n \n-    Iterator validationIterator = fData.getValidationIterator();\n+    Iterator<String> validationIterator = fData.getValidationIterator();\n \n     if (validationIterator != null)\n     {\n@@ -483,7 +491,7 @@ private static void _renderValidationScripts(\n \n       while(validationIterator.hasNext())\n       {\n-        String currValidation = (String)validationIterator.next();\n+        String currValidation = validationIterator.next();\n \n         if (firstValidation)\n         {\n@@ -514,7 +522,8 @@ private static void _renderValidationScripts(\n     writer.writeText(jsID, null);\n \n     // get the form validators\n-    List validatorInfoList = fData.getFormValidatorsInfo(false);\n+    List<FormData.ConvertValidate> validatorInfoList = \n+      fData.getFormValidatorsInfo(false);\n \n     if (validatorInfoList == null)\n     {\n@@ -540,8 +549,7 @@ private static void _renderValidationScripts(\n           writer.writeText(\"],\", null);\n         }\n \n-        FormData.ConvertValidate convertValidate =\n-          (FormData.ConvertValidate)validatorInfoList.get(j);\n+        FormData.ConvertValidate convertValidate = validatorInfoList.get(j);\n \n         writer.writeText(\"\\\"\", null);\n \n@@ -574,7 +582,7 @@ private static void _renderValidationScripts(\n \n         writer.writeText(\",[\", null);\n \n-        ArrayList validatorInfo = convertValidate.validators;\n+        ArrayList<Integer> validatorInfo = convertValidate.validators;\n \n         if (validatorInfo != null)\n         {\n@@ -615,15 +623,15 @@ private static void _renderValidationScripts(\n     //\n \n     // list of labels used for validation on this form\n-    List inputList = fData.getValidatedInputList(false);\n+    List<String> inputList = fData.getValidatedInputList(false);\n \n     int inputCount = (inputList != null)\n                          ? inputList.size()\n                          : 0;\n \n     if (inputCount > 0)\n     {\n-      Map labelMap = fData.getLabelMap(false);\n+      Map<String, String> labelMap = fData.getLabelMap(false);\n \n       if (labelMap != null)\n       {\n@@ -635,11 +643,11 @@ private static void _renderValidationScripts(\n \n         for (int i = 0; i < inputCount; i++)\n         {\n-          String currID = (String)inputList.get(i);\n+          String currID = inputList.get(i);\n \n           // remove the ID entry to prevent multiple labels from\n           // being written\n-          String currLabel = (String)labelMap.remove(currID);\n+          String currLabel = labelMap.remove(currID);\n \n           if (currLabel != null)\n           {\n@@ -671,7 +679,7 @@ private static void _renderValidationScripts(\n       // =-= jrf: optimize pattern reuse?\n       // BUG 2024773\n \n-      Map patternMap = fData.getPatternMap(false);\n+      Map<String, String> patternMap = fData.getPatternMap(false);\n \n       if (patternMap != null)\n       {\n@@ -683,11 +691,11 @@ private static void _renderValidationScripts(\n \n         for (int i = 0; i < inputCount; i++)\n         {\n-          String currID = (String)inputList.get(i);\n+          String currID = inputList.get(i);\n \n           // remove the ID entry to prevent multiple labels from\n           // being written\n-          String currPattern = (String)patternMap.remove(currID);\n+          String currPattern = patternMap.remove(currID);\n \n           if (currPattern != null)\n           {\n@@ -722,7 +730,7 @@ private static void _renderValidationScripts(\n     //\n \n     // list of error formats used for validation on this form\n-    Iterator errorFormatIterator = fData.getErrorFormatIterator();\n+    Iterator<String> errorFormatIterator = fData.getErrorFormatIterator();\n \n     if (errorFormatIterator != null)\n     {\n@@ -734,7 +742,7 @@ private static void _renderValidationScripts(\n \n       while(errorFormatIterator.hasNext())\n       {\n-        String currErrorFormat = (String)errorFormatIterator.next();\n+        String currErrorFormat = errorFormatIterator.next();\n \n         if (firstFormat)\n         {\n@@ -767,19 +775,21 @@ private static void _renderSubformLists(\n     ) throws IOException\n   {\n     ResponseWriter writer = context.getResponseWriter();\n-    List subforms =\n+    List<String> subforms =\n       SubformRenderer.getSubformList(context, false, false);\n+    \n     writer.writeText(\"var \", null);\n     writer.writeText(jsID, null);\n     writer.writeText(\"_SF={\", null);\n     if ((subforms != null) && !subforms.isEmpty())\n     {\n-      List defaultSubforms =\n+      List<String> defaultSubforms =\n         SubformRenderer.getSubformList(context, true, false);\n-      Iterator ids = subforms.iterator();\n+      \n+      Iterator<String> ids = subforms.iterator();\n       while (ids.hasNext())\n       {\n-        String id = (String) ids.next();\n+        String id = ids.next();\n         writer.writeText(\"\\\"\", null);\n         writer.writeText(id, null);\n         writer.writeText(\"\\\":\", null);\n@@ -836,13 +846,13 @@ public static void addResetCall(\n   }\n \n  public static void addOnSubmitConverterValidators(\n-    UIComponent      component,\n-    Converter        converter,\n-    Iterator         validators,\n-    String           clientId,\n-    boolean          immediate,\n-    boolean          required,\n-    String           requiredMessageKey\n+    UIComponent         component,\n+    Converter           converter,\n+    Iterator<Validator> validators,\n+    String              clientId,\n+    boolean             immediate,\n+    boolean             required,\n+    String              requiredMessageKey\n     ) throws IOException\n   {\n     FormData fData = RenderingContext.getCurrentInstance().getFormData();\n@@ -1017,6 +1027,7 @@ protected String getFullOnkeypress(\n     return onKeypress;\n   }\n \n+  @Override\n   protected String getOnkeypress(FacesBean bean)\n   {\n     // Back out the default keypress, since we need more info\n@@ -1070,7 +1081,7 @@ static private void _renderNeededValues(\n     else\n     {\n       int realNeededIndex = 0;\n-      List neededValues = fData.getNeededValues(false);\n+      List<String> neededValues = fData.getNeededValues(false);\n \n       //\n       // loop over the list of needed names, creating hidden fields\n@@ -1090,11 +1101,11 @@ static private void _renderNeededValues(\n                                 ? null\n                                 : \"a\";\n \n-        Set renderedValues = fData.getRenderedValues(true);\n+        Set<String> renderedValues = fData.getRenderedValues(true);\n \n         for (int i = 0; i < neededCount; i++)\n         {\n-          Object currName = neededValues.get(i);\n+          String currName = neededValues.get(i);\n \n           // if the needed name hasn't been rendered, add it to our\n           // list of unrendered elements\n@@ -1152,6 +1163,8 @@ static private void _renderNeededValues(\n   private PropertyKey _onsubmitKey;\n   private PropertyKey _targetFrameKey;\n \n-\n+  // -= Simon Lessard =-\n+  // FIXME: Nothing in this class is logged as of 2006-08-03\n+  @SuppressWarnings(\"unused\")\n   static private final TrinidadLogger _LOG = TrinidadLogger.createTrinidadLogger(FormRenderer.class);\n }", "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/FormRenderer.java"}, {"additions": 6, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/GoLinkRenderer.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/GoLinkRenderer.java", "sha": "effabe4ea0caeb1f0b9efda8aa2d63e6f285653a", "changes": 7, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/GoLinkRenderer.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add", "patch": "@@ -41,6 +41,7 @@ protected GoLinkRenderer(FacesBean.Type type)\n     super(type);\n   }\n   \n+  @Override\n   protected void findTypeConstants(FacesBean.Type type)\n   {\n     super.findTypeConstants(type);\n@@ -53,7 +54,7 @@ protected void findTypeConstants(FacesBean.Type type)\n     _textKey = type.findKey(\"text\");\n   }\n \n-\n+  @Override\n   protected void encodeBegin(\n     FacesContext        context,\n     RenderingContext arc,\n@@ -111,6 +112,7 @@ protected void encodeBegin(\n                                        \"b\");\n   }\n \n+  @Override\n   public void encodeEnd(\n     FacesContext        context,\n     RenderingContext arc,\n@@ -124,6 +126,7 @@ public void encodeEnd(\n   /**\n    * Renders the client ID as both \"id\" and \"name\"\n    */\n+  @Override\n   protected void renderId(\n     FacesContext context,\n     UIComponent  component) throws IOException\n@@ -137,6 +140,7 @@ protected void renderId(\n     }\n   }\n \n+  @Override\n   protected void renderEventHandlers(\n     FacesContext context,\n     FacesBean    bean) throws IOException\n@@ -196,6 +200,7 @@ protected String getText(FacesBean bean)\n     return toString(bean.getProperty(_textKey));\n   }\n \n+  @Override\n   protected String getStyleClass(FacesBean bean)\n   {\n     String styleClass = super.getStyleClass(bean);", "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/GoLinkRenderer.java"}, {"additions": 2, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/GroupRenderer.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/GroupRenderer.java", "sha": "f322e5993735a4a777e1afbb6663793abd5c380c", "changes": 5, "status": "modified", "deletions": 3, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/GroupRenderer.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add", "patch": "@@ -17,14 +17,11 @@\n \n import java.io.IOException;\n \n-import java.util.List;\n-\n import javax.faces.component.UIComponent;\n import javax.faces.context.FacesContext;\n import javax.faces.context.ResponseWriter;\n \n import org.apache.myfaces.trinidad.bean.FacesBean;\n-import org.apache.myfaces.trinidad.bean.PropertyKey;\n import org.apache.myfaces.trinidad.component.core.CoreGroup;\n \n import org.apache.myfaces.trinidadinternal.renderkit.RenderingContext;\n@@ -36,11 +33,13 @@ public GroupRenderer()\n     super(CoreGroup.TYPE);\n   }\n \n+  @Override\n   public boolean getRendersChildren()\n   {\n     return true;\n   }\n \n+  @Override\n   protected void encodeAll(\n     FacesContext        context,\n     RenderingContext arc,", "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/GroupRenderer.java"}, {"additions": 4, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/HeadRenderer.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/HeadRenderer.java", "sha": "0665473ec713a74240b223a29feb34092dd62455", "changes": 5, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/HeadRenderer.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add", "patch": "@@ -52,12 +52,14 @@ protected HeadRenderer(FacesBean.Type type)\n     super(type);\n   }\n   \n+  @Override\n   protected void findTypeConstants(FacesBean.Type type)\n   {\n     super.findTypeConstants(type);\n     _titleKey = type.findKey(\"title\");\n   }\n \n+  @Override\n   protected void encodeBegin(\n     FacesContext        context,\n     RenderingContext arc,\n@@ -87,7 +89,7 @@ protected void encodeBegin(\n     _writeCookieScript(context, arc);\n   }\n \n-\n+  @Override\n   protected void encodeEnd(\n     FacesContext        context,\n     RenderingContext arc,\n@@ -187,6 +189,7 @@ static private boolean _supportsUIXCookie(RenderingContext arc)\n   private CoreRenderer _styleSheetRenderer = new StyleSheetRenderer()\n   {\n     // Don't render the ID\n+    @Override\n     protected void renderId(\n       FacesContext context,\n       UIComponent  component)", "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/HeadRenderer.java"}, {"additions": 6, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/HtmlRenderer.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/HtmlRenderer.java", "sha": "c5f7f44b26d0463fe08c82da46c462309a7396cf", "changes": 14, "status": "modified", "deletions": 8, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/HtmlRenderer.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add", "patch": "@@ -61,6 +61,7 @@ protected HtmlRenderer(FacesBean.Type type)\n     super(type);\n   }\n \n+  @Override\n   protected void encodeBegin(\n     FacesContext        context,\n     RenderingContext arc,\n@@ -116,6 +117,7 @@ protected void encodeBegin(\n     }\n   }\n \n+  @Override\n   public void encodeEnd(\n     FacesContext        context,\n     RenderingContext arc,\n@@ -198,19 +200,15 @@ protected String getDocumentDocType(\n    * Determines whether we have a frameset component as a child\n    * for determining which doctype to return\n    */\n+  @SuppressWarnings(\"unchecked\")\n   private boolean _hasFrameSet(UIComponent component)\n   {\n-    List children = component.getChildren();\n-    int childCount = component.getChildCount();\n-    \n-    for (int i = 0; i < childCount; i++)\n+    for(UIComponent child : (List<UIComponent>)component.getChildren())\n     {\n-      UIComponent currChild = (UIComponent) children.get(i);\n-      \n-      if (HtmlFrameBorderLayout.COMPONENT_FAMILY.equals(currChild.getFamily()))\n+      if (HtmlFrameBorderLayout.COMPONENT_FAMILY.equals(child.getFamily()))\n       {\n         return true;\n-      }\n+      }     \n     }\n \n     return false;", "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/HtmlRenderer.java"}, {"additions": 6, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/IconRenderer.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/IconRenderer.java", "sha": "6d4ceefe3f11d1c712fd81e5b641e59a29159806", "changes": 9, "status": "modified", "deletions": 3, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/IconRenderer.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add", "patch": "@@ -38,12 +38,14 @@ public IconRenderer()\n     super(CoreIcon.TYPE);\n   }\n \n+  @Override\n   protected void findTypeConstants(FacesBean.Type type)\n   {\n     super.findTypeConstants(type);\n     _nameKey = type.findKey(\"name\");\n   }\n \n+  @Override\n   protected void encodeBegin(\n     FacesContext        context,\n     RenderingContext arc,\n@@ -111,6 +113,7 @@ protected void encodeBegin(\n     }\n   }\n \n+  @Override\n   protected void renderShortDescAttribute(\n     FacesContext        context,\n     RenderingContext arc,\n@@ -124,14 +127,14 @@ protected String getName(FacesBean bean)\n     return toString(bean.getProperty(_nameKey));\n   }\n \n-  private Map _getNodeAttributeMap(\n+  private Map<String, Object> _getNodeAttributeMap(\n     FacesContext        context,\n     UIComponent         comp,\n     FacesBean           bean,\n     boolean             embed)\n   {\n-    Map attrs = null;\n-    attrs = new ArrayMap(1);\n+    Map<String, Object> attrs = null;\n+    attrs = new ArrayMap<String, Object>(1);\n \n     attrs.put(Icon.SHORT_DESC_KEY, getShortDesc(bean));\n ", "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/IconRenderer.java"}, {"additions": 4, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/ImageRenderer.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/ImageRenderer.java", "sha": "a5f3f8c4b7ea250d0c1d178467adde678b2cd14e", "changes": 6, "status": "modified", "deletions": 2, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/ImageRenderer.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add", "patch": "@@ -35,6 +35,7 @@ public ImageRenderer()\n     super(CoreImage.TYPE);\n   }\n   \n+  @Override\n   protected void findTypeConstants(FacesBean.Type type)\n   {\n     super.findTypeConstants(type);\n@@ -43,6 +44,7 @@ protected void findTypeConstants(FacesBean.Type type)\n     _sourceKey = type.findKey(\"source\");\n   }\n \n+  @Override\n   protected void encodeBegin(\n     FacesContext        context,\n     RenderingContext arc,\n@@ -57,6 +59,7 @@ protected void encodeBegin(\n     rw.endElement(\"img\");\n   }\n \n+  @Override\n   protected void renderAllAttributes(\n     FacesContext        context,\n     RenderingContext arc,\n@@ -72,6 +75,7 @@ protected void renderAllAttributes(\n     _renderImageMap(bean, rw);\n   }\n \n+  @Override\n   protected void renderShortDescAttribute(\n     FacesContext        context,\n     RenderingContext arc,\n@@ -95,7 +99,6 @@ protected String getLongDescURL(FacesBean bean)\n     return toUri(bean.getProperty(_longDescURLKey));\n   }\n \n-\n   protected String getSource(FacesBean bean)\n   {\n     return toUri(bean.getProperty(_sourceKey));\n@@ -119,7 +122,6 @@ protected void renderId(\n     }\n   }\n \n-\n   private void _renderImageMap(\n     FacesBean           bean,\n     ResponseWriter      writer) throws IOException", "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/ImageRenderer.java"}, {"additions": 3, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/InputColorRenderer.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/InputColorRenderer.java", "sha": "c74d909f077a1269ccb52ac392595f11026cf42e", "changes": 3, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/InputColorRenderer.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add", "patch": "@@ -30,16 +30,19 @@ public InputColorRenderer()\n     super(CoreInputColor.TYPE);\n   }  \n \n+  @Override\n   protected String getRootStyleClass(FacesBean bean)  \n   {\n     return \"af|inputColor\";\n   }  \n     \n+  @Override\n   protected FormInputRenderer getFormInputRenderer()\n   {\n     return _simpleInputColor;\n   }\n   \n+  @Override\n   protected String getLabelFor(\n     FacesContext        context,\n     RenderingContext arc,", "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/InputColorRenderer.java"}, {"additions": 2, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/InputDateRenderer.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/InputDateRenderer.java", "sha": "20da3b831e4e813eba1c84208cc92a44266e7ef4", "changes": 2, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/InputDateRenderer.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add", "patch": "@@ -26,11 +26,13 @@ public InputDateRenderer()\n     super(CoreInputDate.TYPE);\n   }  \n   \n+  @Override\n   protected FormInputRenderer getFormInputRenderer()\n   {\n     return _simpleInputDate;\n   }\n \n+  @Override\n   protected String getRootStyleClass(FacesBean bean)  \n   {\n     return \"af|inputDate\";", "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/InputDateRenderer.java"}, {"additions": 4, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/InputFileRenderer.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/InputFileRenderer.java", "sha": "1b209c3513fbcbbd7134b624264019432eeef486", "changes": 4, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/InputFileRenderer.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add", "patch": "@@ -34,6 +34,7 @@ public InputFileRenderer()\n     super(CoreInputFile.TYPE);\n   }\n   \n+  @Override\n   protected final void encodeAll(\n     FacesContext        context,\n     RenderingContext arc,\n@@ -48,11 +49,13 @@ protected final void encodeAll(\n     }\n   }\n \n+  @Override\n   protected String getRootStyleClass(FacesBean bean)  \n   {\n     return \"af|inputFile\";\n   }\n   \n+  @Override\n   protected FormInputRenderer getFormInputRenderer()\n   {\n     return _simpleInputFile;\n@@ -63,6 +66,7 @@ protected FormInputRenderer getFormInputRenderer()\n    * @param bean\n    * @return false, since inputFile does not support the readOnly attribute\n    */\n+  @Override\n   protected boolean isReadOnly(FacesBean bean)\n   {\n     return false;", "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/InputFileRenderer.java"}, {"additions": 3, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/InputHiddenRenderer.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/InputHiddenRenderer.java", "sha": "83a342e68fd3c86e09c57b47140f55172abdae3c", "changes": 3, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/InputHiddenRenderer.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add", "patch": "@@ -33,18 +33,21 @@ public InputHiddenRenderer()\n     super(CoreInputHidden.TYPE);\n   }\n   \n+  @Override\n   protected boolean wasSubmitted(\n     FacesContext context,\n     UIComponent  component)\n   {\n     return true;\n   }\n \n+  @Override\n   public boolean getRendersChildren()\n   {\n     return true;\n   }\n \n+  @Override\n   protected final void encodeAll(\n     FacesContext        context,\n     RenderingContext arc,", "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/InputHiddenRenderer.java"}, {"additions": 8, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/InputLabelAndMessageRenderer.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/InputLabelAndMessageRenderer.java", "sha": "52af2b2345daad566534438fd211974629843f60", "changes": 11, "status": "modified", "deletions": 3, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/InputLabelAndMessageRenderer.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add", "patch": "@@ -37,6 +37,7 @@ public InputLabelAndMessageRenderer(FacesBean.Type type)\n     super(type);\n   }\n   \n+  @Override\n   protected void findTypeConstants(FacesBean.Type type)\n   {\n     super.findTypeConstants(type);\n@@ -45,11 +46,13 @@ protected void findTypeConstants(FacesBean.Type type)\n     _readOnlyKey   = type.findKey(\"readOnly\");\n   }  \n   \n+  @Override\n   public void decode(FacesContext context, UIComponent component)\n   {\n      getFormInputRenderer().decode(context, component);\n   }\n   \n+  @Override\n   public Object getConvertedValue(\n     FacesContext context,\n     UIComponent  component,\n@@ -60,6 +63,7 @@ public Object getConvertedValue(\n                                               submittedValue);\n   }\n \n+  @Override\n   protected String getLabelFor(\n     FacesContext        context,\n     RenderingContext arc,\n@@ -74,6 +78,7 @@ protected String getLabelFor(\n   }\n \n \n+  @Override\n   protected void encodeAll(\n     FacesContext        context,\n     RenderingContext arc,\n@@ -116,13 +121,14 @@ protected void encodeAll(\n    * If it's known that the field content is not editable, return false. \n    * Otherwise, assume it is editable and return true\n    */\n+  @Override\n   protected boolean isContentEditable(FacesBean bean)\n   {\n     return !getFormInputRenderer().getReadOnly(\n                                    FacesContext.getCurrentInstance(), bean);  \n   }\n  \n-  \n+  @Override\n   protected void renderFieldCellContents(\n     FacesContext        context,\n     RenderingContext arc,\n@@ -131,8 +137,6 @@ protected void renderFieldCellContents(\n   {\n     delegateRenderer(context, arc, component, bean, getFormInputRenderer());\n   }\n-  \n-\n  \n   protected boolean getSimple(FacesBean bean)\n   {\n@@ -152,6 +156,7 @@ protected boolean getSimple(FacesBean bean)\n    * @param bean\n    * @throws IOException\n    */\n+  @Override\n   protected void renderRootDomElementStyles(\n    FacesContext        context,\n    RenderingContext arc,", "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/InputLabelAndMessageRenderer.java"}, {"additions": 2, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/InputListOfValuesRenderer.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/InputListOfValuesRenderer.java", "sha": "3b7bc985a2184f11022887d9cd6bce34e84a4eeb", "changes": 2, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/InputListOfValuesRenderer.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add", "patch": "@@ -28,11 +28,13 @@ public InputListOfValuesRenderer()\n     super(CoreInputListOfValues.TYPE);\n   }  \n \n+  @Override\n   protected String getRootStyleClass(FacesBean bean)  \n   {\n     return \"af|inputListOfValues\";\n   } \n  \n+  @Override\n   protected FormInputRenderer getFormInputRenderer()\n   {\n     return _simpleInputListOfValue;", "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/InputListOfValuesRenderer.java"}, {"additions": 3, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/InputTextRenderer.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/InputTextRenderer.java", "sha": "8d1ff3e9bb42b2b7435356751ab96180379daa2e", "changes": 3, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/InputTextRenderer.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add", "patch": "@@ -27,11 +27,13 @@ public InputTextRenderer()\n     super(CoreInputText.TYPE);\n   } \n \n+  @Override\n   protected String getRootStyleClass(FacesBean bean)  \n   {\n     return \"af|inputText\";\n   } \n   \n+  @Override\n   protected String getDefaultLabelValign(FacesBean bean)\n   {\n     if (_simpleInputText.isTextArea(bean))\n@@ -40,6 +42,7 @@ protected String getDefaultLabelValign(FacesBean bean)\n     return null;\n   }\n \n+  @Override\n   protected FormInputRenderer getFormInputRenderer()\n   {\n     return _simpleInputText;", "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/InputTextRenderer.java"}, {"additions": 21, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/LabelAndMessageRenderer.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/LabelAndMessageRenderer.java", "sha": "ef448d728a46c7f2017132464370111f84692b01", "changes": 23, "status": "modified", "deletions": 2, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/LabelAndMessageRenderer.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add", "patch": "@@ -49,6 +49,7 @@ public LabelAndMessageRenderer(FacesBean.Type type)\n     super(type);\n   }\n \n+  @Override\n   protected void findTypeConstants(FacesBean.Type type)\n   {\n     super.findTypeConstants(type);\n@@ -63,6 +64,7 @@ protected void findTypeConstants(FacesBean.Type type)\n   }\n \n \n+  @Override\n   public boolean getRendersChildren()\n   {\n     return true;\n@@ -137,6 +139,7 @@ protected void renderRootDomElementStyles(\n     // do nothing for now\n   } \n \n+  @Override\n   protected boolean shouldRenderId(\n     FacesContext context,\n     UIComponent  component)\n@@ -158,6 +161,7 @@ private boolean _isInTable()\n \n   /**\n    */\n+  @Override\n   protected void encodeAll(\n     FacesContext        context,\n     RenderingContext arc,\n@@ -403,6 +407,7 @@ private void _renderMessageCellContents(\n   /**\n    * Returns the client ID.\n    */\n+  @Override\n   protected String getClientId(\n     FacesContext context,\n     UIComponent  component)\n@@ -489,13 +494,15 @@ public Label(FacesBean.Type type, boolean inTable)\n       _inTable = inTable;\n     }\n \n+    @Override\n     protected boolean shouldRenderId(\n       FacesContext context,\n       UIComponent  component)\n     {\n       return false;\n     }\n \n+    @Override\n     protected void renderAllAttributes(\n       FacesContext        context,\n       RenderingContext arc,\n@@ -504,13 +511,15 @@ protected void renderAllAttributes(\n       // Block everything\n     }\n \n+    @Override\n     protected String getDefaultValign(FacesBean bean)\n     {\n       // get the defaultLabelValign from the form component.\n       return getDefaultLabelValign(bean);\n     }\n \n \n+    @Override\n     protected String getConvertedString(\n       FacesContext context,\n       UIComponent  component,\n@@ -526,6 +535,7 @@ protected String getConvertedString(\n      * Only display the required icon indicator if we're required\n      * or showRequired is on.\n      */\n+    @Override\n     protected boolean getShowRequired(FacesBean bean)\n     {\n       // Inside the table, never show the required icon.\n@@ -535,6 +545,7 @@ protected boolean getShowRequired(FacesBean bean)\n       return (LabelAndMessageRenderer.this.labelShowRequired(bean));\n     }\n \n+    @Override\n     protected char getAccessKey(FacesBean bean)\n     {\n       if (LabelAndMessageRenderer.this.showAccessKeyOnLabel(bean))\n@@ -543,6 +554,7 @@ protected char getAccessKey(FacesBean bean)\n       return CHAR_UNDEFINED;\n     }\n \n+    @Override\n     protected String getShortDesc(FacesBean bean)\n     {\n       String shortDesc = super.getShortDesc(bean);\n@@ -556,6 +568,7 @@ protected String getShortDesc(FacesBean bean)\n       return shortDesc;\n     }\n \n+    @Override\n     protected String getForId(\n       FacesContext context,\n       UIComponent  component,\n@@ -567,6 +580,7 @@ protected String getForId(\n                          bean);\n     }\n \n+    @Override\n     protected boolean isLabelTagNeeded(\n       RenderingContext arc,\n       FacesBean           bean,\n@@ -590,30 +604,35 @@ public Message(FacesBean.Type type)\n       super(type);\n     }\n \n+    @Override\n     protected boolean shouldRenderId(\n       FacesContext context,\n       UIComponent  component)\n     {\n       return false;\n     }\n \n+    @Override\n     protected String getShortDesc(FacesBean bean)\n     {\n       return null;\n     }\n \n+    @Override\n     protected boolean getIndented(FacesBean bean)\n     {\n       return LabelAndMessageRenderer.this.isIndented();\n     }\n \n+    @Override\n     protected void renderAllAttributes(\n       FacesContext        context,\n       RenderingContext arc,\n       FacesBean           bean) throws IOException\n     {\n     }\n \n+    @Override\n     protected String getForId(\n       FacesContext context,\n       UIComponent  component,\n@@ -693,9 +712,9 @@ private String _getDefaultLabelStyleClass(\n     RenderingContext arc,\n     String              styleClass)  \n   {\n-    Map keyMap = arc.getSkinResourceKeyMap();\n+    Map<String, String> keyMap = arc.getSkinResourceKeyMap();\n     return (keyMap != null) ?\n-            (String) keyMap.get(styleClass) :\n+            keyMap.get(styleClass) :\n             null;\n   }\n   ", "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/LabelAndMessageRenderer.java"}, {"additions": 3, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/MessageRenderer.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/MessageRenderer.java", "sha": "5de6189dde0b8ae31d50f12ec5fd3310ced1ff53", "changes": 3, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/MessageRenderer.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add", "patch": "@@ -45,6 +45,7 @@ protected MessageRenderer(FacesBean.Type type)\n     super(type);\n   }\n \n+  @Override\n   protected void findTypeConstants(FacesBean.Type type)\n   {\n     super.findTypeConstants(type);\n@@ -53,11 +54,13 @@ protected void findTypeConstants(FacesBean.Type type)\n     _messageKey     = type.findKey(\"message\");\n   }\n \n+  @Override\n   public boolean getRendersChildren()\n   {\n     return true;\n   }\n \n+  @Override\n   protected void encodeAll(\n     FacesContext        context,\n     RenderingContext arc,", "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/MessageRenderer.java"}, {"additions": 20, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/NavigationPaneRenderer.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/NavigationPaneRenderer.java", "sha": "0723874223a54d51b9c42c50552100ae9fcf557d", "changes": 37, "status": "modified", "deletions": 17, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/NavigationPaneRenderer.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add", "patch": "@@ -47,6 +47,7 @@ public NavigationPaneRenderer()\n     super(CoreNavigationPane.TYPE);\n   }\n \n+  @Override\n   protected void findTypeConstants(FacesBean.Type type)\n   {\n     super.findTypeConstants(type);\n@@ -55,11 +56,13 @@ protected void findTypeConstants(FacesBean.Type type)\n     _titleKey = type.findKey(\"title\");\n   }\n \n+  @Override\n   public boolean getRendersChildren()\n   {\n     return true;\n   }\n \n+  @Override\n   protected void encodeAll(\n     FacesContext        context,\n     RenderingContext arc,\n@@ -96,6 +99,7 @@ private UIComponent _getStamp(\n     return stamp;\n   }\n \n+  @SuppressWarnings(\"unchecked\")\n   protected void renderContent(\n     FacesContext        context,\n     RenderingContext arc,\n@@ -110,13 +114,11 @@ protected void renderContent(\n     if (nodeStamp == null)\n     {\n       // we aren't stamping, but rather have explicitly defined children:\n-      List<UIComponent> children = component.getChildren();\n-      int childrenLength = children.size();\n-      for (int i=0; i<childrenLength; i++)\n+      for(UIComponent child : (List<UIComponent>)component.getChildren())\n       {\n         try\n         {\n-          UIXCommand navItem = (UIXCommand)children.get(i);\n+          UIXCommand navItem = (UIXCommand)child;\n           if (navItem.isRendered())\n           {\n             // collect the information needed to render this nav item:\n@@ -174,7 +176,7 @@ protected void renderContent(\n       int nextActiveIndex = navItemData.getEffectiveActiveIndex() - 1;\n       for (int i=0; i<visibleItemCount; i++)\n       {\n-        Map currentItemData = navItemData.getItemData(i);\n+        Map<String, Object> currentItemData = navItemData.getItemData(i);\n         currentItemData.put(\"isFirst\", (i == 0));\n         currentItemData.put(\"isLast\", (i == lastRowIndex));\n         currentItemData.put(\"previousActive\", previousActive);\n@@ -252,6 +254,7 @@ private String _getHint(FacesBean bean)\n     return renderingHint;\n   }\n \n+  @Override\n   protected String getShortDesc(FacesBean bean)\n   {\n     return toString(bean.getProperty(_shortDescKey));\n@@ -314,7 +317,7 @@ private void _collectNavItemData(\n         isActive = false; // there can only be 1 active item\n       }\n     }\n-    HashMap itemDataMap = new HashMap();\n+    HashMap<String, Object> itemDataMap = new HashMap<String, Object>();\n     itemDataMap.put(\"accessKey\", _getCommandChildProperty(commandChild, \"accessKey\"));\n     itemDataMap.put(\"component\", commandChild);\n     itemDataMap.put(\"dataIndex\", itemDataIndex);\n@@ -378,7 +381,7 @@ private void _renderNavigationItem(\n     FacesContext context,\n     RenderingContext arc,\n     ResponseWriter rw,\n-    Map itemData,\n+    Map<String, Object> itemData,\n     String renderingHint,\n     boolean isRtl\n     ) throws IOException\n@@ -456,7 +459,7 @@ private void _appendIconAndText(\n     RenderingContext arc,\n     ResponseWriter rw,\n     String iconUri,\n-    Map itemData,\n+    Map<String, Object> itemData,\n     boolean isDisabled,\n     boolean isRtl\n     ) throws IOException\n@@ -501,7 +504,7 @@ private void _writeItemLink(\n     FacesContext context,\n     RenderingContext arc,\n     ResponseWriter rw,\n-    Map itemData,\n+    Map<String, Object> itemData,\n     boolean isDisabled\n     ) throws IOException\n   {\n@@ -658,7 +661,7 @@ private void _renderNonOverlappingItem(\n     FacesContext context,\n     RenderingContext arc,\n     ResponseWriter rw,\n-    Map itemData,\n+    Map<String, Object> itemData,\n     boolean isRtl,\n     boolean isBar,\n     boolean isList\n@@ -845,7 +848,7 @@ private void _renderChoiceItem(\n     FacesContext context,\n     RenderingContext arc,\n     ResponseWriter rw,\n-    Map itemData\n+    Map<String, Object> itemData\n     ) throws IOException\n   {\n     // Choice items do not support icons at this time.\n@@ -1016,7 +1019,7 @@ private void _renderTabItem(\n     FacesContext context,\n     RenderingContext arc,\n     ResponseWriter rw,\n-    Map itemData,\n+    Map<String, Object> itemData,\n     boolean isRtl\n     ) throws IOException\n   {\n@@ -1211,7 +1214,7 @@ private void _renderTabSection(\n     String topStyleClass,\n     String bottomStyleClass,\n     String bottomContentStyleClass,\n-    Map itemData,\n+    Map<String, Object> itemData,\n     boolean isDisabled,\n     boolean isRtl\n     ) throws IOException\n@@ -1263,7 +1266,7 @@ private void _renderTabSection(\n   {\n     NavItemData()\n     {\n-      _list = new ArrayList<Map>();\n+      _list = new ArrayList<Map<String, Object>>();\n       _effectiveActiveIndex = -1;\n     }\n \n@@ -1282,17 +1285,17 @@ int getItemCount()\n       return _list.size();\n     }\n \n-    void addItemData(Map itemData)\n+    void addItemData(Map<String, Object> itemData)\n     {\n       _list.add(itemData);\n     }\n \n-    Map getItemData(int index)\n+    Map<String, Object> getItemData(int index)\n     {\n       return _list.get(index);\n     }\n \n-    private List<Map> _list;\n+    private List<Map<String, Object>> _list;\n     private int _effectiveActiveIndex;\n   }\n ", "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/NavigationPaneRenderer.java"}, {"additions": 7, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/OutputFormattedRenderer.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/OutputFormattedRenderer.java", "sha": "27c5fab1c19c851c0b00acbd14c089e6801b4da9", "changes": 10, "status": "modified", "deletions": 3, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/OutputFormattedRenderer.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add", "patch": "@@ -37,13 +37,14 @@ public OutputFormattedRenderer()\n     super(CoreOutputFormatted.TYPE);\n   }\n   \n-  \n+  @Override\n   protected void findTypeConstants(FacesBean.Type type)\n   {\n     super.findTypeConstants(type);\n     _styleUsageKey = type.findKey(\"styleUsage\");\n   }\n \n+  @Override\n   protected void encodeBegin(\n     FacesContext        context,\n     RenderingContext arc,\n@@ -57,6 +58,7 @@ protected void encodeBegin(\n     renderAllAttributes(context, arc, bean);\n   }\n \n+  @Override\n   public void encodeEnd(\n     FacesContext        context,\n     RenderingContext arc,\n@@ -74,6 +76,7 @@ protected String getStyleUsage(FacesBean bean)\n     return toString(bean.getProperty(_styleUsageKey));\n   }\n \n+  @Override\n   protected String getStyleClass(FacesBean bean)\n   {\n     String styleClass = super.getStyleClass(bean);\n@@ -82,16 +85,17 @@ protected String getStyleClass(FacesBean bean)\n       String usage = getStyleUsage(bean);\n       if (usage != null)\n       {\n-        styleClass = (String) _USAGES.get(usage);\n+        styleClass = _USAGES.get(usage);\n       }\n     }\n \n     return styleClass;\n   }\n \n-  static private final Map _USAGES = new HashMap();\n+  static private final Map<String, String> _USAGES;\n   static\n   {\n+    _USAGES = new HashMap<String, String>();\n     _USAGES.put(CoreOutputFormatted.STYLE_USAGE_IN_CONTEXT_BRANDING,\n                 XhtmlConstants.IN_CONTEXT_TEXT_STYLE_CLASS);\n     _USAGES.put(CoreOutputFormatted.STYLE_USAGE_INSTRUCTION,", "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/OutputFormattedRenderer.java"}, {"additions": 9, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/OutputLabelRenderer.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/OutputLabelRenderer.java", "sha": "5cd897a86a8dc33305355c27c48814b26ec6d3ae", "changes": 15, "status": "modified", "deletions": 6, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/OutputLabelRenderer.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add", "patch": "@@ -48,6 +48,13 @@ protected OutputLabelRenderer(FacesBean.Type type)\n     super(type);\n   }\n \n+  @Override\n+  public boolean getRendersChildren()\n+  {\n+    return true;\n+  }\n+\n+  @Override\n   protected void findTypeConstants(FacesBean.Type type)\n   {\n     super.findTypeConstants(type);\n@@ -57,18 +64,13 @@ protected void findTypeConstants(FacesBean.Type type)\n     _showRequiredKey       = type.findKey(\"showRequired\");\n   }\n \n-\n-  public boolean getRendersChildren()\n-  {\n-    return true;\n-  }\n-\n   /**\n    * @todo Often, we can get by with just a single label, not\n    * a span and a label\n    * @todo If all that is set is \"required\", it seems that we\n    *  *don't* render a span, but do render the icon.  This is strange.\n    */\n+  @Override\n   protected void encodeAll(\n     FacesContext        context,\n     RenderingContext arc,\n@@ -273,6 +275,7 @@ else if (XhtmlConstants.MESSAGE_TYPE_WARNING.equals(type))\n   // OVERRIDES\n   //\n   \n+  @Override\n    protected void renderAllAttributes(\n      FacesContext        context,\n      RenderingContext arc,", "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/OutputLabelRenderer.java"}, {"additions": 3, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/OutputTextRenderer.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/OutputTextRenderer.java", "sha": "eecdb15fd48590e68b52f2e4ec33933dc41a0d6e", "changes": 3, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/OutputTextRenderer.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add", "patch": "@@ -35,6 +35,7 @@ public OutputTextRenderer()\n     super(CoreOutputText.TYPE);\n   }\n \n+  @Override\n   protected void findTypeConstants(FacesBean.Type type)\n   {\n     super.findTypeConstants(type);\n@@ -44,6 +45,7 @@ protected void findTypeConstants(FacesBean.Type type)\n     _descriptionKey = type.findKey(\"description\");\n   }\n \n+  @Override\n   protected void encodeBegin(\n     FacesContext        context,\n     RenderingContext arc,\n@@ -60,6 +62,7 @@ protected void encodeBegin(\n     }\n   }\n \n+  @Override\n   public void encodeEnd(\n     FacesContext        context,\n     RenderingContext arc,", "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/OutputTextRenderer.java"}, {"additions": 2, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/OutputUtils.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/OutputUtils.java", "sha": "f9b6cb460a80e9e8f3b95ab675394186a06b3c3d", "changes": 4, "status": "modified", "deletions": 2, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/OutputUtils.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add", "patch": "@@ -232,13 +232,13 @@ public static void renderIcon(\n     if (icon.isNull())\n       return;\n \n-    Map attrs = null;\n+    Map<String, Object> attrs = null;\n \n     if ((shortDesc != null)  ||\n         (align != null)      ||\n          embedded)\n     {\n-      attrs = new ArrayMap(3);\n+      attrs = new ArrayMap<String, Object>(3);\n       attrs.put(Icon.SHORT_DESC_KEY, shortDesc);\n       attrs.put(Icon.ALIGN_KEY, align);\n       attrs.put(Icon.EMBEDDED_KEY, Boolean.valueOf(embedded));", "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/OutputUtils.java"}, {"additions": 5, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/PanelBoxRenderer.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/PanelBoxRenderer.java", "sha": "a35071d7a1b1b84fcf3fc727f3e07b21a16e0509", "changes": 5, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/PanelBoxRenderer.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add", "patch": "@@ -41,6 +41,7 @@ protected PanelBoxRenderer(FacesBean.Type type)\n     super(type);\n   }\n   \n+  @Override\n   protected void findTypeConstants(FacesBean.Type type)\n   {\n     super.findTypeConstants(type);\n@@ -50,11 +51,13 @@ protected void findTypeConstants(FacesBean.Type type)\n     _contentStyleKey = type.findKey(\"contentStyle\");\n   }\n   \n+  @Override\n   public boolean getRendersChildren()\n   {\n     return true;\n   }\n \n+  @Override\n   protected void encodeAll(\n     FacesContext        context,\n     RenderingContext arc,\n@@ -79,6 +82,7 @@ protected void encodeAll(\n     writer.endElement(\"table\");\n   }\n   \n+  @Override\n   protected void renderAllAttributes(FacesContext context, \n     RenderingContext arc, \n     FacesBean bean) throws IOException\n@@ -87,6 +91,7 @@ protected void renderAllAttributes(FacesContext context,\n     OutputUtils.renderLayoutTableAttributes(context, arc, \"0\", null);\n   }\n   \n+  @Override\n   protected void renderStyleAttributes(\n     FacesContext        context,\n     RenderingContext arc,", "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/PanelBoxRenderer.java"}, {"additions": 25, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/PanelFormLayoutRenderer.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/PanelFormLayoutRenderer.java", "sha": "3086461a24842e4963887c48cd90c01423cf0c23", "changes": 32, "status": "modified", "deletions": 7, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/PanelFormLayoutRenderer.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add", "patch": "@@ -48,6 +48,7 @@ public PanelFormLayoutRenderer()\n     super(CorePanelFormLayout.TYPE);\n   }\n   \n+  @Override\n   protected void findTypeConstants(FacesBean.Type type)\n   {\n     super.findTypeConstants(type);\n@@ -58,6 +59,7 @@ protected void findTypeConstants(FacesBean.Type type)\n     _maxColumnsKey = type.findKey(\"maxColumns\");\n   }\n \n+  @Override\n   public boolean getRendersChildren()\n   {\n     return true;\n@@ -67,6 +69,7 @@ public boolean getRendersChildren()\n    * This is how we can render both the user defined styleClass and our\n    * component style class.\n    */\n+  @Override\n   protected void renderStyleAttributes(\n     FacesContext        context,\n     RenderingContext arc,\n@@ -130,6 +133,8 @@ protected String getDefaultStyleClass()\n     return XhtmlConstants.AF_LABEL_TEXT_STYLE_CLASS;\n   }\n \n+  @SuppressWarnings(\"unchecked\")\n+  @Override\n   protected void encodeAll(\n     FacesContext        context,\n     RenderingContext arc,\n@@ -197,6 +202,7 @@ protected void encodeAll(\n     rw.endElement(\"div\"); // the root element\n   }\n   \n+  @SuppressWarnings(\"unchecked\")\n   private void _encodeChildren(\n     FacesContext        context,\n     RenderingContext arc,\n@@ -208,7 +214,9 @@ private void _encodeChildren(\n   {\n     // We cannot render a nested panelForm with any more than a single column\n     // so we must monitor whether we are nested or not:\n-    Map requestMap = context.getExternalContext().getRequestMap();\n+    Map<String, Object> requestMap = \n+      context.getExternalContext().getRequestMap();\n+    \n     Integer nestLevelObject = (Integer)requestMap.get(PANEL_FORM_NEST_LEVEL_KEY);\n     int nestLevel = 0;\n     if (nestLevelObject != null)\n@@ -220,7 +228,7 @@ private void _encodeChildren(\n     // Iterate through the childPeers extracting and counting the number of\n     // visible children, also count the visible children inside of visible\n     // DhtmlGroupPeers:\n-    List childComponents = component.getChildren();\n+    List<UIComponent> childComponents = component.getChildren();\n     FormItemInfo visibleFormItemInfo = _extractVisibleItems(childComponents);\n     List<FormItem> visibleFormItems = visibleFormItemInfo.getFormItems();\n     int totalFormItemCount = visibleFormItemInfo.getTotalFormItemCount();\n@@ -353,6 +361,7 @@ else if (actualColumns == 1)\n    * UIXGroups.\n    * @param \n    */\n+  @SuppressWarnings(\"unchecked\")\n   private FormItemInfo _extractVisibleItems(List<UIComponent> children)\n   {\n     FormItemInfo formItemInfo = new FormItemInfo();\n@@ -568,6 +577,7 @@ else if ( (labelWidth != null) && (fieldWidth != null) )\n       outerTableWidth);\n   }\n \n+  @SuppressWarnings(\"unchecked\")\n   private void _encodeFormColumns(\n     FacesContext        context,\n     RenderingContext arc,\n@@ -717,7 +727,7 @@ private void _encodeFormItem(\n       // If a peer wants to play well with panelForm, it must use the proper\n       // PanelForm wrapper APIs to ensure proper DOM structure.\n       _encodeBeforeLabelTd(context, arc, rw, startAlignedLabels);\n-      Map originalResourceKeyMap = arc.getSkinResourceKeyMap();\n+      Map<String, String> originalResourceKeyMap = arc.getSkinResourceKeyMap();\n       try\n       {\n         if (startAlignedLabels)\n@@ -797,12 +807,15 @@ private static void _encodeBeforeLabelTd(\n    * @param rw ResponseWriter\n    * @throws IOException\n    */\n+  @SuppressWarnings(\"unchecked\")\n   protected static void encodeBetweenLabelAndFieldCells(\n     FacesContext        context,\n     RenderingContext arc,\n     ResponseWriter      rw) throws IOException\n   {\n-    Map requestMap = context.getExternalContext().getRequestMap();\n+    Map<String, Object> requestMap = \n+      context.getExternalContext().getRequestMap();\n+    \n     Integer nestLevelObject = (Integer)requestMap.get(PANEL_FORM_NEST_LEVEL_KEY);\n     if ( (nestLevelObject != null) &&\n       (nestLevelObject.intValue() > 0) ) // top-aligned (labels stacked above fields)\n@@ -942,9 +955,10 @@ void setTotalFormItemCount(int totalFormItemCount)\n   private PropertyKey _maxColumnsKey;\n \n   // Overallocate because we basically want everything to miss\n-  private static final Set _UNSUPPORTED_RENDERER_TYPES = new HashSet(64);\n+  private static final Set<String> _UNSUPPORTED_RENDERER_TYPES;\n   static\n   {\n+    _UNSUPPORTED_RENDERER_TYPES = new HashSet<String>(64);\n     _UNSUPPORTED_RENDERER_TYPES.add(\"org.apache.myfaces.trinidad.Hidden\");\n     _UNSUPPORTED_RENDERER_TYPES.add(\"org.apache.myfaces.trinidad.Shuttle\");\n     _UNSUPPORTED_RENDERER_TYPES.add(\"org.apache.myfaces.trinidad.rich.Hidden\");\n@@ -957,8 +971,8 @@ void setTotalFormItemCount(int totalFormItemCount)\n   private static final int _COLUMNS_DEFAULT = 3;\n \n   // we need a  resource key map since we are using LabelAndMessageRenderer.\n-  private static final Map _RESOURCE_KEY_SIDE_BY_SIDE_MAP = new HashMap();\n-  private static final Map _RESOURCE_KEY_STACKED_MAP = new HashMap();\n+  private static final Map<String, String> _RESOURCE_KEY_SIDE_BY_SIDE_MAP;\n+  private static final Map<String, String> _RESOURCE_KEY_STACKED_MAP;\n \n   static\n   {\n@@ -967,6 +981,8 @@ void setTotalFormItemCount(int totalFormItemCount)\n     // instead of the generic prompt cell style.\n \n     // Start-aligned labels for side-by-side orientation:\n+    _RESOURCE_KEY_SIDE_BY_SIDE_MAP = new HashMap<String, String>();\n+    \n     _RESOURCE_KEY_SIDE_BY_SIDE_MAP.put(\n       XhtmlConstants.AF_LABEL_TEXT_STYLE_CLASS,\n       XhtmlConstants.AF_PANEL_FORM_LABEL_CELL_STYLE_CLASS);\n@@ -978,6 +994,8 @@ void setTotalFormItemCount(int totalFormItemCount)\n       XhtmlConstants.AF_PANEL_FORM_MESSAGE_CELL_STYLE_CLASS);\n \n     // Stacked labels for one-over-the-other orientation:\n+    _RESOURCE_KEY_STACKED_MAP = new HashMap<String, String>();\n+    \n     _RESOURCE_KEY_STACKED_MAP.put(\n       XhtmlConstants.AF_LABEL_TEXT_STYLE_CLASS,\n       XhtmlConstants.AF_PANEL_FORM_LABEL_STACKED_CELL_STYLE_CLASS);", "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/PanelFormLayoutRenderer.java"}, {"additions": 5, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/PanelGroupLayoutRenderer.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/PanelGroupLayoutRenderer.java", "sha": "186d674e700628747c0d2056b60024de75f3dc74", "changes": 11, "status": "modified", "deletions": 6, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/PanelGroupLayoutRenderer.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add", "patch": "@@ -36,18 +36,20 @@ public PanelGroupLayoutRenderer()\n     super(CorePanelGroupLayout.TYPE);\n   }\n   \n+  @Override\n   protected void findTypeConstants(FacesBean.Type type)\n   {\n     super.findTypeConstants(type);\n     _layoutKey = type.findKey(\"layout\");\n   }\n \n-\n+  @Override\n   public boolean getRendersChildren()\n   {\n     return true;\n   }\n \n+  @Override\n   protected void encodeAll(\n     FacesContext        context,\n     RenderingContext arc,\n@@ -102,6 +104,7 @@ else if (isVertical)\n   /**\n    * Render all the children of the PanelGroup\n    */\n+  @SuppressWarnings(\"unchecked\")\n   private void _encodeChildren(\n     FacesContext context,\n     UIComponent  component,\n@@ -111,16 +114,12 @@ private void _encodeChildren(\n   {\n     ResponseWriter rw = context.getResponseWriter();\n \n-    List children   = component.getChildren();\n-    int  childCount = component.getChildCount();\n-\n     UIComponent separator = getFacet(component,\n                                      CorePanelGroupLayout.SEPARATOR_FACET);\n \n     boolean needSeparator = false;\n-    for (int i = 0; i < childCount; i++)\n+    for(UIComponent child : (List<UIComponent>)component.getChildren())\n     {\n-      UIComponent child = (UIComponent) children.get(i);\n       if (!child.isRendered())\n         continue;\n ", "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/PanelGroupLayoutRenderer.java"}, {"additions": 5, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/PanelHeaderRenderer.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/PanelHeaderRenderer.java", "sha": "e85fbdc60f91457e3f4f2149fa3a6b2a6e4acc47", "changes": 7, "status": "modified", "deletions": 2, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/PanelHeaderRenderer.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add", "patch": "@@ -26,6 +26,7 @@\n import org.apache.myfaces.trinidad.component.core.layout.CorePanelHeader;\n \n \n+import org.apache.myfaces.trinidadinternal.agent.TrinidadAgent;\n import org.apache.myfaces.trinidadinternal.renderkit.RenderingContext;\n import org.apache.myfaces.trinidadinternal.util.IntegerUtils;\n \n@@ -48,6 +49,7 @@ protected PanelHeaderRenderer(FacesBean.Type type)\n     super(type);\n   }\n \n+  @Override\n   protected void findTypeConstants(FacesBean.Type type)\n   {\n     super.findTypeConstants(type);\n@@ -57,12 +59,13 @@ protected void findTypeConstants(FacesBean.Type type)\n     _messageTypeKey = type.findKey(\"messageType\");\n   }\n   \n-\n+  @Override\n   public boolean getRendersChildren()\n   {\n     return true;\n   }\n \n+  @Override\n   protected void encodeAll(\n     FacesContext        context,\n     RenderingContext arc,\n@@ -138,7 +141,7 @@ protected void encodeAll(\n     // need to clear after the header or you get strange behavior\n     if ( nesting &&\n          isIE(arc) &&\n-         arc.getAgent().OS_WINDOWS == arc.getAgent().getAgentOS())\n+         TrinidadAgent.OS_WINDOWS == arc.getAgent().getAgentOS())\n     {\n       writer.startElement(\"div\", component);\n       writer.writeAttribute(\"style\",\"clear:both\", null);", "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/PanelHeaderRenderer.java"}, {"additions": 5, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/PanelHorizontalLayoutRenderer.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/PanelHorizontalLayoutRenderer.java", "sha": "557026d7bfdfa2f68654b8d0d3c8af0c6e47a8a7", "changes": 12, "status": "modified", "deletions": 7, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/PanelHorizontalLayoutRenderer.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add", "patch": "@@ -36,19 +36,21 @@ public PanelHorizontalLayoutRenderer()\n     super(CorePanelHorizontalLayout.TYPE);\n   }\n   \n+  @Override\n   protected void findTypeConstants(FacesBean.Type type)\n   {\n     super.findTypeConstants(type);\n     _valignKey = type.findKey(\"valign\");\n     _halignKey = type.findKey(\"halign\");\n   }\n \n-\n+  @Override\n   public boolean getRendersChildren()\n   {\n     return true;\n   }\n \n+  @Override\n   protected void encodeAll(\n     FacesContext        context,\n     RenderingContext arc,\n@@ -94,6 +96,7 @@ protected Object getHalign(FacesBean bean)\n   /**\n    * Render all the children of the PanelGroup\n    */\n+  @SuppressWarnings(\"unchecked\")\n   private void _encodeChildren(\n     FacesContext context,\n     RenderingContext arc,\n@@ -103,10 +106,6 @@ private void _encodeChildren(\n     ) throws IOException\n   {\n \n-    List children   = component.getChildren();\n-    int  childCount = component.getChildCount();\n-\n-\n     UIComponent separator = getFacet(component,\n                                      CorePanelHorizontalLayout.SEPARATOR_FACET);\n \n@@ -123,9 +122,8 @@ else if (CorePanelHorizontalLayout.HALIGN_RIGHT.equals(hAlign))\n     else\n       isEndAlignment = false;\n     \n-    for (int i = 0; i < childCount; i++)\n+    for(UIComponent child : (List<UIComponent>)component.getChildren())\n     {\n-      UIComponent child = (UIComponent) children.get(i);\n       if (!child.isRendered())\n         continue;\n ", "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/PanelHorizontalLayoutRenderer.java"}, {"additions": 8, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/PanelLabelAndMessageRenderer.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/PanelLabelAndMessageRenderer.java", "sha": "26cbd1dd69f213fa073ce30b89f837904ad64596", "changes": 10, "status": "modified", "deletions": 2, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/PanelLabelAndMessageRenderer.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add", "patch": "@@ -39,25 +39,28 @@ public PanelLabelAndMessageRenderer()\n     super(CorePanelLabelAndMessage.TYPE);\n   }\n   \n+  @Override\n   protected void findTypeConstants(FacesBean.Type type)\n   {\n     super.findTypeConstants(type);\n     _forKey = type.findKey(\"for\");\n     _labelInlineStyleKey = type.findKey(\"labelStyle\");\n   }    \n \n+  @Override\n   protected boolean labelShowRequired(FacesBean bean)\n   {\n     // Simpler algorithm for panelLabelAndMessage\n     return getShowRequired(bean);\n-  }\n-  \n+  } \n  \n+  @Override\n   protected String getRootStyleClass(FacesBean bean)\n   {\n     return \"af|panelLabelAndMessage\";\n   }\n   \n+  @Override\n   protected String getLabelFor(\n     FacesContext        context,\n     RenderingContext arc,\n@@ -71,6 +74,7 @@ protected String getLabelFor(\n                                        forValue);\n   }\n \n+  @Override\n   protected void renderFieldCellContents(\n     FacesContext        context,\n     RenderingContext arc,\n@@ -124,6 +128,7 @@ protected void renderFieldCellContents(\n     rw.endElement(\"table\");\n   }\n \n+  @Override\n   protected boolean hasMessage(\n     FacesContext        context,\n     RenderingContext arc,\n@@ -138,6 +143,7 @@ protected String getFor(FacesBean bean)\n     return toString(bean.getProperty(_forKey));\n   }\n \n+  @Override\n   protected String getLabelInlineStyleKey(FacesBean bean)\n   {\n     return toString(bean.getProperty(_labelInlineStyleKey));", "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/PanelLabelAndMessageRenderer.java"}, {"additions": 7, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/PanelListRenderer.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/PanelListRenderer.java", "sha": "a777a305a1588f2b70ae33b908392130b793658e", "changes": 10, "status": "modified", "deletions": 3, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/PanelListRenderer.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add", "patch": "@@ -38,6 +38,7 @@ public PanelListRenderer()\n     super(CorePanelList.TYPE);\n   }\n \n+  @Override\n   protected void findTypeConstants(FacesBean.Type type)\n   {\n     super.findTypeConstants(type);\n@@ -51,6 +52,7 @@ protected void findTypeConstants(FacesBean.Type type)\n    * We want to render the styleClass/inlineStyle attributes as well\n    * as our component styleClass.\n    */\n+  @Override\n   protected void renderStyleAttributes(\n     FacesContext        context,\n     RenderingContext arc,\n@@ -60,12 +62,13 @@ protected void renderStyleAttributes(\n                           XhtmlConstants.AF_PANEL_LIST_STYLE_CLASS);\n   }\n \n-\n+  @Override\n   public boolean getRendersChildren()\n   {\n     return true;\n   }\n \n+  @Override\n   protected void encodeAll(\n     FacesContext        context,\n     RenderingContext arc,\n@@ -126,6 +129,7 @@ private void _renderListStyle(\n \n   // render without columns. Called when rows > children or when we have\n   // multiple columns, and we are rendering a single column.\n+  @SuppressWarnings(\"unchecked\")\n   private int _renderNoColumns(\n     FacesContext context,\n     RenderingContext arc,\n@@ -139,14 +143,14 @@ private int _renderNoColumns(\n     int maxChildIndex = component.getChildCount();\n     int numRendered = 0;\n     int childIndex = start;\n-    List children   = component.getChildren();\n+    List<UIComponent> children   = component.getChildren();\n \n     writer.startElement(\"ul\", null);\n     _renderListStyle(context, bean);\n \n     while ( numRendered < numToRender  && childIndex < maxChildIndex)\n     {\n-      UIComponent child = (UIComponent) children.get(childIndex);\n+      UIComponent child = children.get(childIndex);\n \n       // if visible child\n       if ( child != null && child.isRendered())", "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/PanelListRenderer.java"}, {"additions": 9, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/PanelPartialRootRenderer.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/PanelPartialRootRenderer.java", "sha": "f6d647c3c54b514eafeeeb9e7294350a4956d72d", "changes": 14, "status": "modified", "deletions": 5, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/PanelPartialRootRenderer.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add", "patch": "@@ -59,6 +59,7 @@ protected PanelPartialRootRenderer(FacesBean.Type type)\n     super(type);\n   }\n \n+  @Override\n   public boolean getRendersChildren()\n   {\n     return true;\n@@ -73,7 +74,7 @@ protected void renderContent(\n     encodeAllChildren(context, component);\n   }\n \n-\n+  @Override\n   protected void encodeAll(\n     FacesContext        context,\n     RenderingContext arc,\n@@ -185,7 +186,7 @@ private void _renderPartialScripts(\n     PartialPageContext pprContext = arc.getPartialPageContext();\n     if (_shouldRenderPartialScripts(pprContext))\n     {\n-      Iterator targets = pprContext.getRenderedPartialTargets();\n+      Iterator<String> targets = pprContext.getRenderedPartialTargets();\n       String scripts = scriptBufferingWriter.getBufferedScripts();\n \n       ResponseWriter writer = context.getResponseWriter();\n@@ -205,7 +206,7 @@ private void _renderPartialScripts(\n         writer.startElement(\"pprtargets\",null);\n         while (targets.hasNext())\n         {\n-          String target = (String) targets.next();\n+          String target = targets.next();\n           if (pprContext.isPartialTargetRendered(target))\n           {\n             writer.startElement(\"pprtarget\", null);\n@@ -240,7 +241,8 @@ private void _renderPartialScripts(\n \n         writer.endElement(\"script\");\n \n-        Iterator libraries = scriptBufferingWriter.getBufferedLibraries();\n+        Iterator<Object> libraries = \n+          scriptBufferingWriter.getBufferedLibraries();\n \n         writer.startElement(\"script\", null);\n         XhtmlRenderer.renderScriptTypeAttribute(context, arc);\n@@ -287,7 +289,7 @@ private void _renderPartialScripts(\n \n         while (targets.hasNext())\n         {\n-          String target = (String) targets.next();\n+          String target = targets.next();\n           if (pprContext.isPartialTargetRendered(target))\n           {\n             if (firstRenderedTarget)\n@@ -496,11 +498,13 @@ static public Scriptlet sharedInstance()\n       return _sInstance;\n     }\n \n+    @Override\n     public Object getScriptletKey()\n     {\n       return _PARTIAL_CACHE_LIBRARY_SCRIPTLET;\n     }\n \n+    @Override\n     protected void outputScriptletContent(\n       FacesContext context,\n       RenderingContext arc) throws IOException", "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/PanelPartialRootRenderer.java"}, {"additions": 10, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/PartialPageUtils.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/PartialPageUtils.java", "sha": "7d08aa042ed65e6d6d3c2d4c2e59be283a047d97", "changes": 14, "status": "modified", "deletions": 4, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/PartialPageUtils.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add", "patch": "@@ -22,7 +22,6 @@\n import org.apache.myfaces.trinidad.context.RequestContext;\n \n import org.apache.myfaces.trinidadinternal.agent.TrinidadAgent;\n-import org.apache.myfaces.trinidadinternal.context.RequestContextBean;\n \n import org.apache.myfaces.trinidadinternal.renderkit.RenderingContext;\n import org.apache.myfaces.trinidadinternal.renderkit.core.ppr.PartialPageContext;\n@@ -50,9 +49,12 @@ public static boolean isPartialRequest(FacesContext context)\n    * a \"partial\" parameter.\n    * @todo This is probably unnecessary.\n    */\n+  @SuppressWarnings(\"unchecked\")\n   public static void forcePartialRendering(FacesContext context)\n   {\n-    Map requestMap = context.getExternalContext().getRequestMap();\n+    Map<String, Object> requestMap = \n+      context.getExternalContext().getRequestMap();\n+    \n     requestMap.put(_PARTIAL_KEY, Boolean.TRUE);\n   }\n \n@@ -125,20 +127,24 @@ public static boolean supportsBlocking(\n   /**\n    * Test if PPR is active during rendering.\n    */\n+  @SuppressWarnings(\"unchecked\")\n   public static boolean isPPRActive(FacesContext context)\n   {\n-    Map requestScope =\n+    Map<String, Object> requestScope =\n       context.getExternalContext().getRequestMap();\n+    \n     return Boolean.TRUE.equals(requestScope.get(_PPR_ACTIVE_FLAG_NAME));\n   }\n \n   /**\n    * Mark that PPR is in fact active during rendering.\n    */\n+  @SuppressWarnings(\"unchecked\")\n   public static void markPPRActive(FacesContext context)\n   {\n-    Map requestScope =\n+    Map<String, Object> requestScope =\n       context.getExternalContext().getRequestMap();\n+    \n     requestScope.put(_PPR_ACTIVE_FLAG_NAME, Boolean.TRUE);\n   }\n ", "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/PartialPageUtils.java"}, {"additions": 2, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/PdaPanelPageHeaderRenderer.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/PdaPanelPageHeaderRenderer.java", "sha": "8d309ae81637196618ac4eefd286d540cf96f918", "changes": 2, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/PdaPanelPageHeaderRenderer.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add", "patch": "@@ -41,11 +41,13 @@ public PdaPanelPageHeaderRenderer()\n     super(CorePanelPageHeader.TYPE);\n   }\n \n+  @Override\n   public boolean getRendersChildren()\n   {\n     return true;\n   }\n \n+  @Override\n   protected void encodeAll(\n     FacesContext        context,\n     RenderingContext arc,", "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/PdaPanelPageHeaderRenderer.java"}, {"additions": 4, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/ProcessUtils.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/ProcessUtils.java", "sha": "81f685f92803db8c9a0e35ae8f2bc3779e54cc30", "changes": 4, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/ProcessUtils.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add", "patch": "@@ -205,11 +205,13 @@ static public Scriptlet sharedInstance()\n       return _sInstance;\n     }\n \n+    @Override\n     public Object getScriptletKey()\n     {\n       return _NAV_SUBMIT_SCRIPTLET;\n     }\n \n+    @Override\n     protected void outputScriptletContent(\n       FacesContext context,\n       RenderingContext arc) throws IOException\n@@ -229,11 +231,13 @@ static public Scriptlet sharedInstance()\n       return _sInstance;\n     }\n \n+    @Override\n     public Object getScriptletKey()\n     {\n       return _NAV_CHOICE_SUBMIT_SCRIPTLET;\n     }\n \n+    @Override\n     protected void outputScriptletContent(\n       FacesContext context,\n       RenderingContext arc) throws IOException", "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/ProcessUtils.java"}, {"additions": 17, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/ResourceKeyUtils.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/ResourceKeyUtils.java", "sha": "39afcd873688e349c73950b0f1f923382869c9ad", "changes": 25, "status": "modified", "deletions": 8, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/ResourceKeyUtils.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add", "patch": "@@ -34,8 +34,8 @@\n    * @param toComponent eg: treeTable\n    * @return A new map with the replacesment values.\n    */\n-  public static Map convertResourceKeyMap(\n-    Map original, \n+  public static Map<String, String> convertResourceKeyMap(\n+    Map<String, String> original, \n     String fromComponent, \n     String toComponent)\n   {\n@@ -44,18 +44,27 @@ public static Map convertResourceKeyMap(\n     String pattern2 = \"af|\"+fromComponent+\":\";\n     String replace2 = \"af|\"+toComponent+\":\";\n     \n-    Map result = new HashMap(original.size());\n-    Iterator entries = original.entrySet().iterator();\n-    while(entries.hasNext())\n+    Map<String, String> result = \n+      new HashMap<String, String>(original.size());\n+    \n+    Iterator<Map.Entry<String, String>> entries = \n+      original.entrySet().iterator();\n+    \n+    for(Map.Entry<String, String> entry : original.entrySet())\n     {\n-      Map.Entry en = (Map.Entry) entries.next();\n-      String value = (String) en.getValue();\n+      String value = entry.getValue();\n       if (value.startsWith(pattern1))\n+      {\n         value = _replace(value, pattern1, replace1);\n+      }\n       else if (value.startsWith(pattern2))\n+      {\n         value = _replace(value, pattern2, replace2);\n-      result.put(en.getKey(), value);\n+      }\n+      \n+      result.put(entry.getKey(), value);\n     }\n+    \n     return result;\n   }\n   ", "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/ResourceKeyUtils.java"}, {"additions": 4, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SelectBooleanCheckboxRenderer.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SelectBooleanCheckboxRenderer.java", "sha": "78201b80596d4b91b969bd2674e97f7622541d9d", "changes": 4, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SelectBooleanCheckboxRenderer.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add", "patch": "@@ -28,11 +28,13 @@ public SelectBooleanCheckboxRenderer()\n     \n   }  \n   \n+  @Override\n   protected String getRootStyleClass(FacesBean bean)  \n   {\n     return \"af|selectBooleanCheckbox\";\n   }\n   \n+  @Override\n   protected boolean isIndented()\n   {\n     return true;\n@@ -42,6 +44,7 @@ protected boolean isIndented()\n    * Don't render <label> on the label portion if there's\n    * a \"text\" attribute set.\n    */\n+  @Override\n   protected boolean hasOwnLabel(FacesBean bean)\n   {\n     String text = _simpleSelectBooleanCheckbox.getText(bean);\n@@ -52,6 +55,7 @@ protected boolean hasOwnLabel(FacesBean bean)\n     return false;\n   }\n \n+  @Override\n   protected FormInputRenderer getFormInputRenderer()\n   {\n     return _simpleSelectBooleanCheckbox;", "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SelectBooleanCheckboxRenderer.java"}, {"additions": 4, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SelectBooleanRadioRenderer.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SelectBooleanRadioRenderer.java", "sha": "77702ed73640289543f89bcc7460c9393f1252ea", "changes": 4, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SelectBooleanRadioRenderer.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add", "patch": "@@ -27,6 +27,7 @@ public SelectBooleanRadioRenderer()\n     \n   } \n   \n+  @Override\n   protected String getRootStyleClass(FacesBean bean)  \n   {\n     return \"af|selectBooleanRadio\";\n@@ -36,6 +37,7 @@ protected String getRootStyleClass(FacesBean bean)\n    * selectBooleanRadio should not render a &lt;label&gt; on itself\n    * if \"text\" is set.\n    */ \n+  @Override\n   protected boolean hasOwnLabel(FacesBean bean)\n   {\n     String text = _simpleSelectBooleanRadio.getText(bean);\n@@ -46,11 +48,13 @@ protected boolean hasOwnLabel(FacesBean bean)\n     return false;\n   }\n \n+  @Override\n   protected boolean isIndented()\n   {\n     return true;\n   }  \n  \n+  @Override\n   protected FormInputRenderer getFormInputRenderer()\n   {\n     return _simpleSelectBooleanRadio;", "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SelectBooleanRadioRenderer.java"}, {"additions": 6, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SelectManyCheckboxRenderer.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SelectManyCheckboxRenderer.java", "sha": "23693d15ac280d7bacc3f6ddda5ab59d61d9db67", "changes": 6, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SelectManyCheckboxRenderer.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add", "patch": "@@ -28,12 +28,14 @@ public SelectManyCheckboxRenderer()\n     super(CoreSelectManyCheckbox.TYPE);\n   }\n   \n+  @Override\n   protected void findTypeConstants(FacesBean.Type type)\n   {\n     super.findTypeConstants(type);\n     _layoutKey = type.findKey(\"layout\");\n   } \n   \n+  @Override\n   protected String getRootStyleClass(FacesBean bean)  \n   {\n     return \"af|selectManyCheckbox\";\n@@ -44,6 +46,7 @@ protected String getLayout(FacesBean bean)\n     return toString(bean.getProperty(_layoutKey));\n   }\n \n+  @Override\n   protected String getDefaultLabelValign(FacesBean bean)\n   {\n     // Don't top-align for horizontal radio buttons.\n@@ -56,16 +59,19 @@ protected String getDefaultLabelValign(FacesBean bean)\n   /**\n    * selectManyCheckbox should not render a &lt;label&gt; on itself.\n    */ \n+  @Override\n   protected boolean hasOwnLabel(FacesBean bean)\n   {\n     return true;\n   }\n   \n+  @Override\n   protected boolean showAccessKeyOnLabel(FacesBean bean)\n   {\n     return true;\n   }\n \n+  @Override\n   protected FormInputRenderer getFormInputRenderer()\n   {\n     return _simpleSelectManyCheckbox;", "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SelectManyCheckboxRenderer.java"}, {"additions": 3, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SelectManyListboxRenderer.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SelectManyListboxRenderer.java", "sha": "1c0098929c13fbd841f89831a9fb9107abaf636f", "changes": 3, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SelectManyListboxRenderer.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add", "patch": "@@ -27,16 +27,19 @@ public SelectManyListboxRenderer()\n     super(CoreSelectManyListbox.TYPE);\n   }  \n   \n+  @Override\n   protected String getRootStyleClass(FacesBean bean)  \n   {\n     return \"af|selectManyListbox\";\n   }\n   \n+  @Override\n   protected String getDefaultLabelValign(FacesBean bean)\n   {\n     return \"top\";\n   }\n \n+  @Override\n   protected FormInputRenderer getFormInputRenderer()\n   {\n     return _simpleSelectManyListbox;", "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SelectManyListboxRenderer.java"}, {"additions": 2, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SelectOneChoiceRenderer.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SelectOneChoiceRenderer.java", "sha": "4d1d4fab467387f65cd160e1032dfcd02f525353", "changes": 2, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SelectOneChoiceRenderer.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add", "patch": "@@ -28,11 +28,13 @@ public SelectOneChoiceRenderer()\n     \n   }  \n   \n+  @Override\n   protected String getRootStyleClass(FacesBean bean)  \n   {\n     return \"af|selectOneChoice\";\n   }\n   \n+  @Override\n   protected FormInputRenderer getFormInputRenderer()\n   {\n     return _simpleSelectOneChoice;", "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SelectOneChoiceRenderer.java"}, {"additions": 3, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SelectOneListboxRenderer.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SelectOneListboxRenderer.java", "sha": "06db36a44da4f1c7c6d32bf811658f7b61010f12", "changes": 3, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SelectOneListboxRenderer.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add", "patch": "@@ -28,16 +28,19 @@ public SelectOneListboxRenderer()\n     \n   }\n   \n+  @Override\n   protected String getRootStyleClass(FacesBean bean)  \n   {\n     return \"af|selectOneListbox\";\n   }\n   \n+  @Override\n   protected String getDefaultLabelValign(FacesBean bean)\n   {\n     return \"top\";\n   }\n \n+  @Override\n   protected FormInputRenderer getFormInputRenderer()\n   {\n     return _simpleSelectOneListbox;", "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SelectOneListboxRenderer.java"}, {"additions": 10, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SelectOneRadioRenderer.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SelectOneRadioRenderer.java", "sha": "1ab103cb7d2db603dd031c966cdf5aa4df2d778c", "changes": 14, "status": "modified", "deletions": 4, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SelectOneRadioRenderer.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add", "patch": "@@ -27,12 +27,14 @@ public SelectOneRadioRenderer()\n     super(CoreSelectOneRadio.TYPE);\n   }\n   \n+  @Override\n   protected void findTypeConstants(FacesBean.Type type)\n   {\n     super.findTypeConstants(type);\n     _layoutKey = type.findKey(\"layout\");\n   } \n   \n+  @Override\n   protected String getRootStyleClass(FacesBean bean)  \n   {\n     return \"af|selectOneRadio\";\n@@ -43,6 +45,7 @@ protected String getLayout(FacesBean bean)\n     return toString(bean.getProperty(_layoutKey));\n   }\n \n+  @Override\n   protected String getDefaultLabelValign(FacesBean bean)\n   {\n     // Don't top-align for horizontal radio buttons.\n@@ -55,16 +58,19 @@ protected String getDefaultLabelValign(FacesBean bean)\n   /**\n    * selectOneRadio should not render a &lt;label&gt; on itself.\n    */ \n-   protected boolean hasOwnLabel(FacesBean bean)\n-   {\n-     return true;\n-   }\n+  @Override\n+  protected boolean hasOwnLabel(FacesBean bean)\n+  {\n+    return true;\n+  }\n \n+  @Override\n   protected boolean showAccessKeyOnLabel(FacesBean bean)\n   {\n     return true;\n   }\n   \n+  @Override\n   protected FormInputRenderer getFormInputRenderer()\n   {\n     return _simpleSelectOneRadio;", "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SelectOneRadioRenderer.java"}, {"additions": 24, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SelectRangeChoiceBarRenderer.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SelectRangeChoiceBarRenderer.java", "sha": "dd8ab5e1de42ff593a7e5376fee1050b2346470d", "changes": 41, "status": "modified", "deletions": 17, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SelectRangeChoiceBarRenderer.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add", "patch": "@@ -58,6 +58,7 @@ public SelectRangeChoiceBarRenderer(FacesBean.Type type)\n     super(type);\n   }\n \n+  @Override\n   protected void findTypeConstants(FacesBean.Type type)\n   {\n     super.findTypeConstants(type);\n@@ -68,9 +69,13 @@ protected void findTypeConstants(FacesBean.Type type)\n     _varKey = type.findKey(\"var\");\n   }\n \n+  @SuppressWarnings(\"unchecked\")\n+  @Override\n   public void decode(FacesContext context, UIComponent component)\n   {\n-    Map parameters =  context.getExternalContext().getRequestParameterMap();\n+    Map<String, String> parameters = \n+      context.getExternalContext().getRequestParameterMap();\n+    \n     Object event = parameters.get(XhtmlConstants.EVENT_PARAM);\n \n     // get the goto event parameter values and queue a RangeChangeEvent.\n@@ -153,7 +158,7 @@ private RangeChangeEvent _createRangeChangeEvent(\n                                 newStart, newEnd);\n   }\n \n-\n+  @Override\n   public boolean getRendersChildren()\n   {\n     return true;\n@@ -162,6 +167,7 @@ public boolean getRendersChildren()\n   /**\n    * Always render an ID, needed for proper PPR.\n    */\n+  @Override\n   protected boolean shouldRenderId(\n     FacesContext context,\n     UIComponent  component)\n@@ -269,6 +275,7 @@ protected boolean showAllSupported()\n \n   /**\n    */\n+  @Override\n   protected void encodeAll(\n     FacesContext        context,\n     RenderingContext arc,\n@@ -629,7 +636,8 @@ else if (/*(maxValue == MAX_VALUE_UNKNOWN) ||*/ !supportsScripting(arc))\n     }\n     else\n     {\n-      List items = new ArrayList((int) _MAX_VISIBLE_OPTIONS);\n+      List<SelectItem> items = \n+        new ArrayList<SelectItem>((int) _MAX_VISIBLE_OPTIONS);\n \n       int selectedIndex = _getItems(context, arc, component, items,\n                                     minValue, maxValue, currentValue,\n@@ -685,24 +693,23 @@ else if (count == 1)\n         writer.startElement(\"span\", null);\n         renderStyleClass(context, arc,\n                          XhtmlConstants.AF_FIELD_TEXT_STYLE_CLASS);\n-        writer.writeText(((SelectItem) items.get(0)).getLabel(),\n-                         null);\n+        writer.writeText(items.get(0).getLabel(), null);\n         writer.endElement(\"span\");\n       }\n     }\n   }\n \n \n   private void _writeSelectItems(\n-    FacesContext context,\n-    List         items,\n-    int          selectedIndex) throws IOException\n+    FacesContext     context,\n+    List<SelectItem> items,\n+    int              selectedIndex) throws IOException\n   {\n     ResponseWriter writer = context.getResponseWriter();\n     int count = items.size();\n     for (int i = 0; i < count; i++)\n     {\n-      SelectItem item = (SelectItem) items.get(i);\n+      SelectItem item = items.get(i);\n       writer.startElement(\"option\", null);\n       writer.writeAttribute(\"value\", item.getValue(), null);\n       if (i == selectedIndex)\n@@ -720,7 +727,7 @@ private int _getItems(\n     FacesContext        context,\n     RenderingContext arc,\n     UIComponent         component,\n-    List                items,\n+    List<SelectItem>    items,\n     long                minValue, long maxValue, long value,\n     int                 blockSize,\n     UIComponent         rangeLabel)\n@@ -730,8 +737,7 @@ private int _getItems(\n     boolean maxUnknown = (maxValue == XhtmlConstants.MAX_VALUE_UNKNOWN);\n \n     // Zero-indexed block index.\n-    long blockIndex = (value - minValue + ((long) blockSize) - 1L) /\n-      (long) blockSize;\n+    long blockIndex = (value - minValue + blockSize - 1L) / blockSize;\n \n     // sometimes a record set won't start on a multiple of blockSize. So\n     // remember to add any offset:\n@@ -747,8 +753,7 @@ private int _getItems(\n       maxBlockIndex = blockIndex + 1;\n     else\n     {\n-      maxBlockIndex = (maxValue - minValue - offset) /\n-                      ((long) blockSize);\n+      maxBlockIndex = (maxValue - minValue - offset) / blockSize;\n       if (offset > 0)\n         maxBlockIndex++;\n     }\n@@ -798,7 +803,7 @@ private int _getItems(\n          blockIndex <= lastBlockIndex;\n          blockIndex++)\n     {\n-      long blockStart = minValue + (blockIndex * ((long) blockSize));\n+      long blockStart = minValue + (blockIndex * blockSize);\n \n       // if there is an offset, then adjust accordingly. for example, if the\n       // offset is 7 (and the blockSize is 10), then the new blockStarts are:\n@@ -1094,6 +1099,7 @@ protected String getBlockString(\n    *   {0}-{1}\n    *  (and not bother with the \"of\" substitution)\n    */\n+  @SuppressWarnings(\"unchecked\")\n   private String _getRangeString(\n     FacesContext        context,\n     RenderingContext arc,\n@@ -1138,7 +1144,7 @@ private String _getRangeString(\n       String var = getVar(getFacesBean(component));\n       if (var != null)\n       {\n-        Map requestMap =\n+        Map<String, Object> requestMap =\n           context.getExternalContext().getRequestMap();\n         old = requestMap.put(var, range);\n       }\n@@ -1149,8 +1155,9 @@ private String _getRangeString(\n \n       if (var != null)\n       {\n-        Map requestMap =\n+        Map<String, Object> requestMap =\n           context.getExternalContext().getRequestMap();\n+        \n         if (old == null)\n           requestMap.remove(var);\n         else", "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SelectRangeChoiceBarRenderer.java"}, {"additions": 14, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/ShowDetailHeaderRenderer.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/ShowDetailHeaderRenderer.java", "sha": "aaf1a37846ade5e3ff1ca56706abfe3d6bd5e988", "changes": 18, "status": "modified", "deletions": 4, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/ShowDetailHeaderRenderer.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add", "patch": "@@ -37,22 +37,23 @@ public ShowDetailHeaderRenderer()\n   {\n     super(CoreShowDetailHeader.TYPE);\n   }\n-\n   \n+  @Override\n   protected void findTypeConstants(FacesBean.Type type)\n   {\n     super.findTypeConstants(type);\n     _detailRenderer = new DetailRenderer(type);\n     _disclosedKey = type.findKey(\"disclosed\");\n   }\n \n+  @Override\n   public void decode(FacesContext context, UIComponent component)\n   {\n     // Delegate decoding to the showDetail renderer\n     _detailRenderer.decode(context, component);\n   }\n \n-\n+  @Override\n   protected void encodeAll(\n     FacesContext        context,\n     RenderingContext arc,\n@@ -61,7 +62,7 @@ protected void encodeAll(\n   {\n     // map the resource value keys that are used in showDetail and header\n     // to the keys we need to use in this renderer.\n-    Map originalResourceKeyMap = arc.getSkinResourceKeyMap();\n+    Map<String, String> originalResourceKeyMap = arc.getSkinResourceKeyMap();\n     try\n     {\n \n@@ -75,13 +76,15 @@ protected void encodeAll(\n     }\n   }\n \n+  @Override\n   protected void renderIcon(FacesContext context, RenderingContext arc, \n                             UIComponent component, FacesBean bean, String messageType)\n     throws IOException\n   {\n     delegateRenderer(context, arc, component, bean, _detailRenderer);\n   }\n \n+  @Override\n   protected String getMessageType(FacesBean bean)\n   {\n     // Not currently supported\n@@ -97,6 +100,7 @@ protected boolean getDisclosed(FacesBean bean)\n     return Boolean.TRUE.equals(o);\n   }\n \n+  @Override\n   protected boolean shouldRenderChildren(FacesBean bean)\n   {\n     return getDisclosed(bean);\n@@ -110,23 +114,27 @@ public DetailRenderer(FacesBean.Type type)\n       super(type);\n     }\n     \n+    @Override\n     protected void renderId(FacesContext context, UIComponent component)\n       throws IOException\n     {\n     }\n \n+    @Override\n     protected void renderAllAttributes(FacesContext context, \n                                        RenderingContext arc, \n                                        FacesBean bean)\n       throws IOException\n     {\n     }\n \n+    @Override\n     protected boolean renderAsInline()\n     {\n       return true;\n     }\n \n+    @Override\n     protected String getDisclosureText(RenderingContext arc, \n                                        FacesBean bean, boolean disclosed)\n     {\n@@ -137,9 +145,11 @@ protected String getDisclosureText(RenderingContext arc,\n   private CoreRenderer _detailRenderer;\n   private PropertyKey  _disclosedKey;\n   \n-  private static final Map _RESOURCE_KEY_MAP  =  new HashMap();\n+  private static final Map<String, String> _RESOURCE_KEY_MAP;\n   static\n   {\n+    _RESOURCE_KEY_MAP  =  new HashMap<String, String>();\n+    \n     _RESOURCE_KEY_MAP.put(\"af_showDetail.DISCLOSED\" ,\n                           \"af_showDetailHeader.DISCLOSED\");\n     _RESOURCE_KEY_MAP.put(\"af_showDetail.UNDISCLOSED\" ,", "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/ShowDetailHeaderRenderer.java"}, {"additions": 8, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/ShowDetailItemRenderer.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/ShowDetailItemRenderer.java", "sha": "5eeed263ed5c0f8ba7f4f5bffc8d028c25605848", "changes": 10, "status": "modified", "deletions": 2, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/ShowDetailItemRenderer.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add", "patch": "@@ -43,15 +43,20 @@ protected ShowDetailItemRenderer(FacesBean.Type type)\n     super(type);\n   }\n   \n+  @Override\n   protected void findTypeConstants(FacesBean.Type type)\n   {\n     super.findTypeConstants(type);\n     _disclosedKey = type.findKey(\"disclosed\");\n   }\n \n+  @SuppressWarnings(\"unchecked\")\n+  @Override\n   public void decode(FacesContext context, UIComponent component)\n   {\n-    Map parameters =  context.getExternalContext().getRequestParameterMap();\n+    Map<String, String> parameters = \n+      context.getExternalContext().getRequestParameterMap();\n+    \n     Object event = parameters.get(XhtmlConstants.EVENT_PARAM);\n     if (XhtmlConstants.HIDE_EVENT.equals(event) ||\n         XhtmlConstants.SHOW_EVENT.equals(event))\n@@ -68,7 +73,7 @@ public void decode(FacesContext context, UIComponent component)\n     }\n   }\n \n-\n+  @Override\n   public boolean getRendersChildren()\n   {\n     return true;\n@@ -83,6 +88,7 @@ protected boolean getDisclosed(FacesBean bean)\n     return Boolean.TRUE.equals(o);\n   }\n \n+  @Override\n   protected void encodeAll(\n     FacesContext        context,\n     RenderingContext arc,", "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/ShowDetailItemRenderer.java"}, {"additions": 3, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/ShowDetailRenderer.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/ShowDetailRenderer.java", "sha": "1f206ed736e73ad8256ef4a85a3d7964b97e1815", "changes": 3, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/ShowDetailRenderer.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add", "patch": "@@ -46,6 +46,7 @@ protected ShowDetailRenderer(FacesBean.Type type)\n     super(type);\n   }\n \n+  @Override\n   protected void findTypeConstants(FacesBean.Type type)\n   {\n     super.findTypeConstants(type);\n@@ -56,6 +57,7 @@ protected void findTypeConstants(FacesBean.Type type)\n \n   /**\n    */\n+  @Override\n   protected void encodeAll(\n     FacesContext        context,\n     RenderingContext arc,\n@@ -193,6 +195,7 @@ protected void renderDisclosureIcon(\n   /**\n    * Always render an ID, needed for proper PPR.\n    */\n+  @Override\n   protected boolean shouldRenderId(\n     FacesContext context,\n     UIComponent  component)", "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/ShowDetailRenderer.java"}, {"additions": 23, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SimpleInputColorRenderer.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SimpleInputColorRenderer.java", "sha": "85ca0ca43f2d11cf0a3bbbd46be93894e1edf31e", "changes": 32, "status": "modified", "deletions": 9, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SimpleInputColorRenderer.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add", "patch": "@@ -62,13 +62,15 @@ public SimpleInputColorRenderer()\n     super(CoreInputColor.TYPE);\n   }\n \n+  @Override\n   protected void findTypeConstants(FacesBean.Type type)\n   {\n     super.findTypeConstants(type);\n     _compactKey = type.findKey(\"compact\");\n     _chooseIdKey = type.findKey(\"chooseId\");\n   }\n \n+  @Override\n   protected void queueActionEvent(FacesContext context, UIComponent component)\n   {\n     FacesBean bean = getFacesBean(component);\n@@ -83,7 +85,7 @@ protected void queueActionEvent(FacesContext context, UIComponent component)\n     // a calendar window with the _ldp JS function)\n     else\n     {\n-      Object submittedValue = (String) getSubmittedValue(bean);\n+      Object submittedValue = getSubmittedValue(bean);\n       Color color = null;\n       try\n       {\n@@ -104,7 +106,7 @@ protected void queueActionEvent(FacesContext context, UIComponent component)\n       RequestContext afContext = RequestContext.getCurrentInstance();\n \n       // =-=AEW Parameters?  Shouldn't we pass in the color?\n-      Map parameters = null;\n+      Map<String, Object> parameters = null;\n       afContext.launchDialog(GenericEntry.getGenericEntryViewRoot(context),\n                              parameters,\n                              component,\n@@ -117,6 +119,7 @@ protected void queueActionEvent(FacesContext context, UIComponent component)\n   /**\n    * Give subclasses a chance to override the ReturnEvent.\n    */\n+  @Override\n   protected void queueReturnEvent(\n     FacesContext context,\n     UIComponent  component,\n@@ -152,7 +155,7 @@ protected void queueReturnEvent(\n     event.queue();\n   }\n \n-\n+  @Override\n   protected void encodeAllAsElement(\n     FacesContext        context,\n     RenderingContext arc,\n@@ -176,6 +179,7 @@ protected void encodeAllAsElement(\n     arc.getProperties().remove(_CACHED_CHOOSE_ID);\n   }\n \n+  @Override\n   protected void renderTextField(\n     FacesContext        context,\n     RenderingContext arc,\n@@ -210,6 +214,7 @@ protected void renderTextField(\n     }\n   }\n \n+  @Override\n   protected void renderContent(\n     FacesContext        context,\n     RenderingContext arc,\n@@ -228,6 +233,7 @@ protected void renderContent(\n     }\n   }\n \n+  @Override\n   protected void renderAfterTextField(\n     FacesContext        context,\n     RenderingContext arc,\n@@ -249,6 +255,7 @@ protected void renderAfterTextField(\n     }\n   }\n \n+  @Override\n   protected void renderIcon(\n     FacesContext        context,\n     RenderingContext arc,\n@@ -271,14 +278,15 @@ protected void renderIcon(\n   /**\n    * Return a default converter.\n    */\n+  @Override\n   protected Converter getDefaultConverter(\n     FacesContext context,\n     FacesBean    bean)\n   {\n     return _DEFAULT_CONVERTER;\n   }\n \n-\n+  @Override\n   protected String getLaunchOnclick(\n     FacesContext        context,\n     RenderingContext arc,\n@@ -310,6 +318,7 @@ protected String getLaunchOnclick(\n     return onClickBuffer.toString();\n   }\n \n+  @Override\n   protected String getOnfocus(FacesBean bean)\n   {\n     String onfocus = super.getOnfocus(bean);\n@@ -337,6 +346,7 @@ protected String getOnfocus(FacesBean bean)\n     }\n   }\n \n+  @Override\n   protected String getOnblur(FacesBean bean)\n   {\n     String onblur = super.getOnblur(bean);\n@@ -349,8 +359,7 @@ protected String getOnblur(FacesBean bean)\n                                    onblur, false);\n   }\n \n-\n-\n+  @Override\n   protected Integer getDefaultColumns(RenderingContext arc, FacesBean bean)\n   {\n     Converter converter = getConverter(bean);\n@@ -366,14 +375,15 @@ protected Integer getDefaultColumns(RenderingContext arc, FacesBean bean)\n     return _DEFAULT_COLUMNS;\n   }\n \n+  @Override\n   protected Number getMaximumLength(FacesBean bean)\n   {\n     // Not supported for selectInputColor\n     // =-=AEW We could have a good default\n     return null;\n   }\n \n-\n+  @Override\n   protected String getButtonIconName()\n   {\n     return XhtmlConstants.AF_SELECT_INPUT_COLOR_LAUNCH_ICON_NAME;\n@@ -393,11 +403,13 @@ protected boolean isCompact(FacesBean bean)\n     return Boolean.TRUE.equals(o);\n   }\n \n+  @Override\n   protected String getRootStyleClass(FacesBean bean)\n   {\n     return \"af|inputColor\";\n   }\n \n+  @Override\n   protected String getContentStyleClass(FacesBean bean)\n   {\n     return \"af|inputColor::content\";\n@@ -425,6 +437,7 @@ private boolean _supportsSwatchAndChooser(RenderingContext arc)\n     return (arc.getAgent().getAgentType() != TrinidadAgent.TYPE_PDA);\n   }\n \n+  @Override\n   protected String getSearchDesc(FacesBean bean)\n   {\n     RenderingContext arc = RenderingContext.getCurrentInstance();\n@@ -531,6 +544,7 @@ private Color _getColorValue(FacesBean bean)\n \n   // Checks to see whether this is the first color field for\n   // a given chooseId, and if so renders a script\n+  @SuppressWarnings(\"unchecked\")\n   private void _renderFirstColorFieldScript(\n     FacesContext        context,\n     RenderingContext arc,\n@@ -550,12 +564,12 @@ private void _renderFirstColorFieldScript(\n     String id = getClientId(context, component);\n \n \n-    Map chooseColorIds = (Map)\n+    Map<String, Boolean> chooseColorIds = (Map<String, Boolean>)\n       arc.getProperties().get(_CHOOSE_COLOR_IDS_KEY);\n \n     if (chooseColorIds == null)\n     {\n-      chooseColorIds = new HashMap();\n+      chooseColorIds = new HashMap<String, Boolean>();\n       arc.getProperties().put(_CHOOSE_COLOR_IDS_KEY, chooseColorIds);\n     }\n ", "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SimpleInputColorRenderer.java"}, {"additions": 25, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SimpleInputDateRenderer.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SimpleInputDateRenderer.java", "sha": "aa95f9fffe1c431f3f12ff39c527de36a3b9f1d2", "changes": 40, "status": "modified", "deletions": 15, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SimpleInputDateRenderer.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add", "patch": "@@ -30,6 +30,7 @@\n import javax.faces.convert.Converter;\n import javax.faces.convert.ConverterException;\n import javax.faces.convert.DateTimeConverter;\n+import javax.faces.validator.Validator;\n \n import org.apache.myfaces.trinidad.logging.TrinidadLogger;\n \n@@ -60,12 +61,14 @@ public SimpleInputDateRenderer()\n     super(CoreInputDate.TYPE);\n   }\n \n+  @Override\n   protected void findTypeConstants(FacesBean.Type type)\n   {\n     super.findTypeConstants(type);\n     _chooseIdKey = type.findKey(\"chooseId\");\n   }\n \n+  @Override\n   protected void queueActionEvent(FacesContext context, UIComponent component)\n   {\n     FacesBean bean = getFacesBean(component);\n@@ -80,7 +83,7 @@ protected void queueActionEvent(FacesContext context, UIComponent component)\n     // a calendar window with the _ldp JS function)\n     else\n     {\n-      Object submittedValue = (String) getSubmittedValue(bean);\n+      Object submittedValue = getSubmittedValue(bean);\n       Date date = null;\n       try\n       {\n@@ -110,7 +113,7 @@ protected void queueActionEvent(FacesContext context, UIComponent component)\n       if (date == null)\n         date = new Date();\n \n-      Map parameters = new HashMap();\n+      Map<String, Object> parameters = new HashMap<String, Object>();\n       parameters.put(XhtmlConstants.VALUE_PARAM, _getDateAsString(date));\n       parameters.put(XhtmlConstants.MIN_VALUE_PARAM,\n                      dtrv == null\n@@ -133,6 +136,7 @@ protected void queueActionEvent(FacesContext context, UIComponent component)\n   /**\n    * Give subclasses a chance to override the ReturnEvent.\n    */\n+  @Override\n   protected void queueReturnEvent(\n     FacesContext context,\n     UIComponent  component,\n@@ -169,7 +173,7 @@ protected void queueReturnEvent(\n     event.queue();\n   }\n \n-\n+  @Override\n   protected void encodeAllAsElement(\n     FacesContext        context,\n     RenderingContext arc,\n@@ -191,6 +195,7 @@ protected void encodeAllAsElement(\n     }\n   }\n \n+  @Override\n   protected void renderIcon(\n     FacesContext        context,\n     RenderingContext arc,\n@@ -213,6 +218,7 @@ protected void renderIcon(\n    * may map to \"medium\"\n    * @todo medium / default is  what it is defaulted to in faces\n    */\n+  @Override\n   protected Converter getDefaultConverter(\n     FacesContext context,\n     FacesBean    bean)\n@@ -258,6 +264,7 @@ protected Converter getDefaultConverter(\n     return converter;\n   }\n \n+  @Override\n   protected String getOnblur(FacesBean bean)\n   {\n     String onblur = super.getOnblur(bean);\n@@ -283,6 +290,7 @@ protected String getOnblur(FacesBean bean)\n     return XhtmlUtils.getChainedJS(buffer.toString(), onblur, false);\n   }\n \n+  @Override\n   protected String getOnfocus(FacesBean bean)\n   {\n     String onfocus = super.getOnfocus(bean);\n@@ -317,7 +325,7 @@ protected String getOnfocus(FacesBean bean)\n     }\n   }\n \n-\n+  @Override\n   protected String getLaunchOnclick(\n     FacesContext        context,\n     RenderingContext arc,\n@@ -379,7 +387,7 @@ protected String getLaunchOnclick(\n     return onClickBuffer.toString();\n   }\n \n-\n+  @Override\n   protected Integer getDefaultColumns(RenderingContext arc, FacesBean bean)\n   {\n     Converter converter = getConverter(bean);\n@@ -397,7 +405,7 @@ protected Integer getDefaultColumns(RenderingContext arc, FacesBean bean)\n     return _DEFAULT_COLUMNS;\n   }\n \n-\n+  @Override\n   protected String getButtonIconName()\n   {\n     return XhtmlConstants.AF_SELECT_INPUT_DATE_LAUNCH_ICON_NAME;\n@@ -408,6 +416,7 @@ protected String getChooseId(FacesBean bean)\n     return toString(bean.getProperty(_chooseIdKey));\n   }\n \n+  @Override\n   protected String getSearchDesc(FacesBean bean)\n   {\n     RenderingContext arc = RenderingContext.getCurrentInstance();\n@@ -417,12 +426,13 @@ protected String getSearchDesc(FacesBean bean)\n     return arc.getTranslatedString(_LAUNCH_PICKER_TIP_KEY);\n   }\n \n-\n+  @Override\n   protected String getRootStyleClass(FacesBean bean)\n   {\n     return \"af|inputDate\";\n   }\n \n+  @Override\n   protected String getContentStyleClass(FacesBean bean)\n   {\n     return \"af|inputDate::content\";\n@@ -447,6 +457,7 @@ private String _computeChooseId(\n   // Checks to see whether the current dateField should\n   // be active, and if so, renders a script that will activate\n   // it.\n+  @SuppressWarnings(\"unchecked\")\n   private void _checkIfActive(\n     FacesContext        context,\n     RenderingContext arc,\n@@ -459,13 +470,12 @@ private void _checkIfActive(\n \n     String id = getClientId(context, component);\n \n-\n-    Map activeDateFields = (Map)\n+    Map<String, Boolean> activeDateFields = (Map<String, Boolean>)\n       arc.getProperties().get(_ACTIVE_DATE_FIELDS_KEY);\n \n     if (activeDateFields == null)\n     {\n-      activeDateFields = new HashMap();\n+      activeDateFields = new HashMap<String, Boolean>();\n       arc.getProperties().put(_ACTIVE_DATE_FIELDS_KEY, activeDateFields);\n     }\n \n@@ -500,7 +510,7 @@ private void _checkIfActive(\n   //\n   private DateTimeRangeValidator _findDateTimeRangeValidator(FacesBean bean)\n   {\n-    Iterator validators = getValidators(bean);\n+    Iterator<Validator> validators = getValidators(bean);\n     while (validators.hasNext())\n     {\n       Object validator = validators.next();\n@@ -563,13 +573,11 @@ private static long _adjustTimeZone(Date date)\n     // properly ie. MIN_VALUE < (longValue + tzOffset) < MAX_VALUE.\n     if (tzOffset < 0)\n     {\n-     tzOffset = (long)Math.max((float)tzOffset,\n-                               (float)Long.MIN_VALUE - (float)dateValueInMs);\n+      tzOffset = Math.max(tzOffset, Long.MIN_VALUE - dateValueInMs);\n     }\n     else\n     {\n-     tzOffset = (long)Math.min((float)tzOffset,\n-                               (float)Long.MAX_VALUE - (float)dateValueInMs);\n+      tzOffset = Math.min(tzOffset, Long.MAX_VALUE - dateValueInMs);\n     }\n \n     // adjust the date in ms to the adjusted time zone.\n@@ -592,11 +600,13 @@ private DateTimeZoneOffsetScriptlet()\n     {\n     }\n \n+    @Override\n     public Object getScriptletKey()\n     {\n       return _DATE_TIME_ZONE_OFFSET_KEY;\n     }\n \n+    @Override\n     protected void outputScriptletContent(\n       FacesContext context,\n       RenderingContext arc)", "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SimpleInputDateRenderer.java"}, {"additions": 12, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SimpleInputFileRenderer.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SimpleInputFileRenderer.java", "sha": "f6e0fade50f62f8ae06a5d526fc2b098ae9fde2b", "changes": 13, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SimpleInputFileRenderer.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add", "patch": "@@ -37,6 +37,7 @@ public SimpleInputFileRenderer()\n   //\n   // DECODE BEHAVIOR\n   // \n+  @Override\n   public Object getSubmittedValue(\n     FacesContext context,\n     UIComponent  component)\n@@ -59,6 +60,7 @@ public Object getSubmittedValue(\n     return result;\n   }\n \n+  @Override\n   public Object getConvertedValue(\n     FacesContext context,\n     UIComponent  component,\n@@ -79,6 +81,7 @@ public Object getConvertedValue(\n   /**\n    * <inputFile> cannot show a value.\n    */\n+  @Override\n   protected String getConvertedString(\n     FacesContext context,\n     UIComponent  component,\n@@ -87,6 +90,7 @@ protected String getConvertedString(\n     return null;\n   }\n \n+  @Override\n   protected String getDefaultInputType()\n   {\n     return \"file\";\n@@ -98,44 +102,51 @@ protected String getDefaultInputType()\n   // an inputFile\n   // \n \n+  @Override\n   public boolean isTextArea(\n     FacesBean bean)\n   {\n     return false;\n   }\n \n+  @Override\n   protected boolean isAutoSubmit(\n     FacesBean bean)\n   {\n     return false;\n   }\n \n+  @Override\n   protected boolean getSecret(FacesBean bean)\n   {\n     return false;\n   }\n \n+  @Override\n   protected Number getMaximumLength(FacesBean bean)\n   {\n     return null;\n   }\n \n-\n+  @Override\n   protected boolean getReadOnly(FacesContext context, FacesBean bean)\n   {\n     return false;\n   }\n   \n+  @Override\n   protected String getRootStyleClass(FacesBean bean)  \n   {\n     return \"af|inputFile\";\n   }\n \n+  @Override\n   protected String getContentStyleClass(FacesBean bean)\n   {\n     return \"af|inputFile::content\";\n   }\n \n+  @Override\n   protected Integer getDefaultColumns(RenderingContext arc, FacesBean bean)\n   {\n     return null;", "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SimpleInputFileRenderer.java"}, {"additions": 14, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SimpleInputListOfValuesRenderer.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SimpleInputListOfValuesRenderer.java", "sha": "b5d482336e1927f5d589224405517f4d73df66c6", "changes": 15, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SimpleInputListOfValuesRenderer.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add", "patch": "@@ -53,6 +53,7 @@ protected SimpleInputListOfValuesRenderer(FacesBean.Type type)\n     super(type);\n   }\n   \n+  @Override\n   protected void findTypeConstants(FacesBean.Type type)\n   {\n     super.findTypeConstants(type);\n@@ -65,6 +66,8 @@ protected void findTypeConstants(FacesBean.Type type)\n   // DECODE BEHAVIOR\n   //\n \n+  @SuppressWarnings(\"unchecked\")\n+  @Override\n   public void decode(FacesContext context, UIComponent component)\n   {\n     super.decode(context, component);\n@@ -81,7 +84,9 @@ public void decode(FacesContext context, UIComponent component)\n     }\n     else\n     {\n-      Map parameterMap = context.getExternalContext().getRequestParameterMap();\n+      Map<String, String> parameterMap = \n+        context.getExternalContext().getRequestParameterMap();\n+      \n       Object source = parameterMap.get(\"source\");\n       String clientId = component.getClientId(context);\n       if ((source != null) && source.equals(clientId))\n@@ -125,6 +130,7 @@ protected void queueActionEvent(\n   // Encode behavior\n   //\n \n+  @Override\n   protected void encodeAllAsElement(\n     FacesContext        context,\n     RenderingContext arc,\n@@ -147,6 +153,7 @@ protected void encodeAllAsElement(\n       rw.endElement(\"span\");\n   }\n   \n+  @Override\n   protected void encodeAllAsNonElement(\n     FacesContext        context,\n     RenderingContext arc,\n@@ -171,6 +178,7 @@ protected void encodeAllAsNonElement(\n    * the span and root dom element styles on the text field, which we \n    * don't, since we do it ourselves on our root dom element.\n    */\n+  @Override\n   protected boolean isSimpleInputText(FacesBean bean)\n   {\n     return false;\n@@ -317,12 +325,14 @@ protected String getLaunchOnclick(\n     }\n   }\n \n+  @Override\n   public boolean isTextArea(\n     FacesBean bean)\n   {\n     return false;\n   }\n \n+  @Override\n   protected boolean getSecret(FacesBean bean)\n   {\n     return false;\n@@ -332,6 +342,7 @@ protected boolean getSecret(FacesBean bean)\n    * We want onclick to move from the input field to the button;\n    * @see #getButtonOnclick\n    */\n+  @Override\n   protected String getOnclick(FacesBean bean)\n   {\n     return null;\n@@ -360,11 +371,13 @@ protected String getIcon(\n     return toUri(bean.getProperty(_iconKey));\n   }\n \n+  @Override\n   protected String getRootStyleClass(FacesBean bean)  \n   {\n     return \"af|inputListOfValues\";\n   }\n \n+  @Override\n   protected String getContentStyleClass(FacesBean bean)\n   {\n     return \"af|inputListOfValues::content\";", "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SimpleInputListOfValuesRenderer.java"}, {"additions": 21, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SimpleInputTextRenderer.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SimpleInputTextRenderer.java", "sha": "52f9824ded5012a1be1716735f67bb608eea321b", "changes": 29, "status": "modified", "deletions": 8, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SimpleInputTextRenderer.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add", "patch": "@@ -47,6 +47,7 @@ protected SimpleInputTextRenderer(FacesBean.Type type)\n     super(type);\n   }\n \n+  @Override\n   protected void findTypeConstants(FacesBean.Type type)\n   {\n     super.findTypeConstants(type);\n@@ -59,7 +60,7 @@ protected void findTypeConstants(FacesBean.Type type)\n \n   }\n \n-\n+  @Override\n   public Object getSubmittedValue(\n     FacesContext context,\n     UIComponent  component)\n@@ -86,7 +87,7 @@ else if (isTextArea(bean))\n     return submitted;\n   }\n \n-\n+  @Override\n   protected void encodeAllAsElement(\n     FacesContext        context,\n     RenderingContext arc,\n@@ -152,6 +153,7 @@ protected void encodeAllAsElement(\n \n   }    \n        \n+  @Override\n   protected void renderAllAttributes(\n     FacesContext        context,\n     RenderingContext arc,\n@@ -240,11 +242,13 @@ protected void renderAllAttributes(\n \n   }\n   \n+  @Override\n   protected String getContentStyleClass(FacesBean bean)  \n   {\n     return \"af|inputText::content\";\n   }\n   \n+  @Override\n   protected String getRootStyleClass(FacesBean bean)  \n   {\n     return \"af|inputText\";\n@@ -280,6 +284,7 @@ protected String getDefaultInputType()\n   /**\n    * Renders event handlers for the node.\n    */\n+  @Override\n   protected void renderEventHandlers(\n     FacesContext context,\n     FacesBean    bean) throws IOException\n@@ -290,6 +295,7 @@ protected void renderEventHandlers(\n     rw.writeAttribute(\"onselect\", getOnselect(bean), \"onselect\");\n   }\n \n+  @Override\n   protected void encodeAllAsNonElement(\n     FacesContext        context,\n     RenderingContext arc,\n@@ -331,6 +337,7 @@ protected void encodeAllAsNonElement(\n   /**\n    * @todo Remove if never necessary\n    */\n+  @Override\n   protected void renderNonElementContent(\n     FacesContext        context,\n     RenderingContext arc,\n@@ -510,7 +517,7 @@ private void _writeTextLineWithBreaks(\n     }\n   }\n \n-\n+  @Override\n   protected String getOnkeypress(\n     FacesBean bean\n     )\n@@ -529,7 +536,7 @@ protected String getOnkeypress(\n     return onKeyPress;\n   }\n \n-\n+  @Override\n   protected String getOnkeydown(FacesBean bean)\n   {\n     String onKeydown = super.getOnkeydown(bean);\n@@ -546,6 +553,7 @@ protected String getOnkeydown(FacesBean bean)\n   /**\n    * @todo We have to \"getCurrentInstance()\" *twice*.  UGH!\n    */\n+  @Override\n   protected String getOnfocus(FacesBean bean)\n   {\n     String onfocus = super.getOnfocus(bean);\n@@ -558,15 +566,16 @@ protected String getOnfocus(FacesBean bean)\n       RenderingContext arc = RenderingContext.getCurrentInstance();\n       if (!supportsReadonlyFormElements(arc))\n       {\n-        onfocus = (String) XhtmlUtils.getChainedJS(\"this.blur()\",\n-                                                   onfocus,\n-                                                   true);\n+        onfocus = XhtmlUtils.getChainedJS(\"this.blur()\",\n+                                          onfocus,\n+                                          true);\n       }\n     }\n \n     return onfocus;\n   }\n \n+  @Override\n   protected String getOnchange(\n     FacesBean bean\n     )\n@@ -641,6 +650,9 @@ protected boolean getSecret(FacesBean bean)\n   /**\n    * @todo - Find a efficient way to identify that this is a numeric field\n    */\n+  //-= Simon Lessard =-\n+  //TODO:  This method is not even used locally\n+  @SuppressWarnings(\"unused\")\n   private boolean _isNumericField(\n //    FacesBean bean\n     )\n@@ -664,6 +676,7 @@ public boolean isTextArea(\n   /**\n    * @todo RENABLE ONFOCUS HACK\n    */\n+  @Override\n   protected boolean renderReadOnlyAsElement(\n     RenderingContext arc,\n     FacesBean           bean)\n@@ -721,7 +734,7 @@ static private String _getMaxLengthFunction(\n     if (userFunc == null)\n       return functionCall;\n \n-    return (String) XhtmlUtils.getChainedJS(functionCall, userFunc, true);\n+    return XhtmlUtils.getChainedJS(functionCall, userFunc, true);\n   }\n \n   /**", "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SimpleInputTextRenderer.java"}, {"additions": 8, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SimpleSelectBooleanCheckboxRenderer.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SimpleSelectBooleanCheckboxRenderer.java", "sha": "b2ed64aa9017006751a6ad6e91c70f7c4f4726fa", "changes": 9, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SimpleSelectBooleanCheckboxRenderer.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add", "patch": "@@ -40,6 +40,7 @@ public SimpleSelectBooleanCheckboxRenderer(FacesBean.Type type)\n   //decode\n   //**********************\n   \n+  @Override\n   public Object getSubmittedValue(\n     FacesContext context,\n     UIComponent  component)\n@@ -55,17 +56,20 @@ public Object getSubmittedValue(\n   //encode\n   //**********************\n \n+  @Override\n   protected Object getValueAttr(RenderingContext arc)\n   {\n     // HTML 3.2 specification, default value for checkboxes\n     return \"t\";\n   }\n \n+  @Override\n   protected Object getType()\n   {\n     return \"checkbox\";\n   }\n \n+  @Override\n   protected String getIconAltTextName(\n     boolean selected\n   )\n@@ -75,6 +79,7 @@ protected String getIconAltTextName(\n       : \"af_selectBooleanCheckbox.READONLY_NOT_CHECKED_TIP\");\n   }\n   \n+  @Override\n   protected String getIconName(\n     boolean selected,\n     boolean disabled\n@@ -97,7 +102,7 @@ protected String getIconName(\n     return iconName;           \n   }\n   \n-\n+  @Override\n   protected String getOnclick(\n     FacesBean bean\n     )\n@@ -115,11 +120,13 @@ else if (auto != null)\n     return onClick;\n   }  \n   \n+  @Override\n   protected String getContentStyleClass(FacesBean bean)\n   {\n    return \"af|selectBooleanCheckbox::content\";\n   }\n   \n+  @Override\n   protected String getRootStyleClass(FacesBean bean)\n   {\n    return \"af|selectBooleanCheckbox\";", "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SimpleSelectBooleanCheckboxRenderer.java"}, {"additions": 15, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SimpleSelectBooleanRadioRenderer.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SimpleSelectBooleanRadioRenderer.java", "sha": "58bf3d767d628844714567370d9cab279f3b3680", "changes": 19, "status": "modified", "deletions": 4, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SimpleSelectBooleanRadioRenderer.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add", "patch": "@@ -39,6 +39,7 @@ public SimpleSelectBooleanRadioRenderer(FacesBean.Type type)\n     super(type);\n   }\n   \n+  @Override\n   protected void findTypeConstants(FacesBean.Type type)\n   {\n     super.findTypeConstants(type);\n@@ -49,6 +50,7 @@ protected void findTypeConstants(FacesBean.Type type)\n   //decode\n   //**********************\n   \n+  @Override\n   public Object getSubmittedValue(\n     FacesContext context,\n     UIComponent  component)\n@@ -71,16 +73,19 @@ public Object getSubmittedValue(\n   //encode\n   //**********************\n \n+  @Override\n   protected Object getValueAttr(RenderingContext arc)\n   {\n     return arc.getCurrentClientId();\n   }\n \n+  @Override\n   protected Object getType()\n   {\n     return \"radio\";\n   }\n \n+  @Override\n   protected String getIconAltTextName(\n     boolean selected\n   )\n@@ -90,6 +95,7 @@ protected String getIconAltTextName(\n       : \"af_selectBooleanRadio.READONLY_NOT_CHECKED_TIP\");\n   }\n   \n+  @Override\n   protected String getIconName(\n     boolean selected,\n     boolean disabled\n@@ -113,6 +119,7 @@ protected String getIconName(\n     return iconName;           \n   }\n \n+  @Override\n   protected void renderNameAttribute(\n     FacesContext        context,\n     RenderingContext arc,\n@@ -131,26 +138,27 @@ protected void renderNameAttribute(\n    * Returns true if the component should render the ID as a name.\n    * By default, don't if the component is readonly.\n    */\n+  @Override\n   protected boolean shouldRenderName(\n     FacesContext context,\n     UIComponent  component)\n   {\n     return false;\n   }\n-\n-\n+  \n+  @Override\n   protected boolean isRadio()\n   {\n     return true;\n   }\n \n-\n+  @Override\n   protected String getCompositeId(String clientId)\n   {\n     return clientId + XhtmlConstants.COMPOSITE_ID_EXTENSION + \"r\";   \n   }\n   \n-\n+  @Override\n   protected void renderSpanEventHandlers(\n     FacesContext context, \n     FacesBean    bean) throws IOException\n@@ -170,6 +178,7 @@ protected void renderSpanEventHandlers(\n     rw.writeAttribute(\"onmouseup\", getOnmouseup(bean),  \"onmouseup\");\n   }\n   \n+  @Override\n   protected void renderInputEventHandlers(\n     FacesContext context, \n     FacesBean    bean) throws IOException\n@@ -186,11 +195,13 @@ protected String getGroup(FacesBean bean)\n     return toString(bean.getProperty(_groupKey));\n   }\n   \n+  @Override\n   protected String getContentStyleClass(FacesBean bean)\n   {\n    return \"af|selectBooleanRadio::content\";\n   }\n   \n+  @Override\n   protected String getRootStyleClass(FacesBean bean)\n   {\n    return \"af|selectBooleanRadio\";", "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SimpleSelectBooleanRadioRenderer.java"}, {"additions": 3, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SimpleSelectBooleanRenderer.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SimpleSelectBooleanRenderer.java", "sha": "b7b9e2f6db34cd438aa6871ed2f2e9c7352c8a90", "changes": 4, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SimpleSelectBooleanRenderer.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add", "patch": "@@ -37,6 +37,7 @@ public SimpleSelectBooleanRenderer(FacesBean.Type type)\n     super(type);\n   }\n   \n+  @Override\n   protected void findTypeConstants(FacesBean.Type type)\n   {\n     super.findTypeConstants(type);\n@@ -77,6 +78,7 @@ protected void renderNameAttribute(\n    * @TODO use new renderAllAttributes that doesn't render styleclass once\n    * Jeanne adds it.\n    */\n+  @Override\n   protected void encodeAllAsElement(\n     FacesContext        context,\n     RenderingContext arc,\n@@ -172,7 +174,7 @@ protected void encodeAllAsElement(\n       writer.endElement(\"span\");      \n   }\n \n-\n+  @Override\n   protected void encodeAllAsNonElement(\n     FacesContext        context,\n     RenderingContext arc,", "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SimpleSelectBooleanRenderer.java"}, {"additions": 13, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SimpleSelectManyCheckboxRenderer.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SimpleSelectManyCheckboxRenderer.java", "sha": "9c3fae31bce686f8491b78ef39426173ca9dec34", "changes": 16, "status": "modified", "deletions": 3, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SimpleSelectManyCheckboxRenderer.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add", "patch": "@@ -44,6 +44,7 @@ public SimpleSelectManyCheckboxRenderer()\n     super(CoreSelectManyCheckbox.TYPE);\n   }\n   \n+  @Override\n   protected void findTypeConstants(FacesBean.Type type)\n   {\n     super.findTypeConstants(type);\n@@ -55,12 +56,13 @@ protected void findTypeConstants(FacesBean.Type type)\n   //\n   // ENCODE BEHAVIOR\n   //\n+  @Override\n   protected void encodeElementContent(\n     FacesContext        context,\n     RenderingContext arc,\n     UIComponent         component,\n     FacesBean           bean,\n-    List                selectItems,\n+    List<SelectItem>    selectItems,\n     int[]               selectedIndices,\n     Converter           converter,\n     boolean             valuePassThru) throws IOException\n@@ -108,7 +110,7 @@ protected void encodeSelectItems(\n     RenderingContext arc,\n     UIComponent         component,\n     FacesBean           bean,\n-    List                selectItems,\n+    List<SelectItem>    selectItems,\n     int[]               selectedIndices,\n     Converter           converter,\n     boolean             valuePassThru) throws IOException\n@@ -141,7 +143,7 @@ protected void encodeSelectItems(\n       if (selected)\n         selectedEntry++;\n \n-      SelectItem item = (SelectItem) selectItems.get(i);\n+      SelectItem item = selectItems.get(i);\n       if (encodeSelectItem(context, arc, component, item, converter,\n                            valuePassThru, accessKey,\n                            i, selected, disabled,\n@@ -237,6 +239,7 @@ protected boolean encodeSelectItem(\n     return true;\n   }\n \n+  @Override\n   protected void renderBetweenNonElements(\n     FacesContext        context,\n     RenderingContext arc,\n@@ -249,6 +252,7 @@ protected void renderBetweenNonElements(\n       super.renderBetweenNonElements(context, arc, component, bean);\n   }\n \n+  @Override\n   protected void renderId(\n     FacesContext context,\n     UIComponent  component) throws IOException\n@@ -265,6 +269,7 @@ protected void renderId(\n    * In Gecko, they bubble up, but in IE, they don't, so\n    * they have to go on the items.\n    */\n+  @Override\n   protected void renderFormEventHandlers(\n     FacesContext context,\n     FacesBean    bean) throws IOException\n@@ -276,6 +281,7 @@ protected void renderFormEventHandlers(\n    * Disable rendering \"onclick\" on the parent;  it needs to\n    * go on the individual radio buttons\n    */\n+  @Override\n   protected String getOnclick(\n     FacesBean bean\n     )\n@@ -328,15 +334,19 @@ protected String getLayout(FacesBean bean)\n \n   // Never render the \"hidden label\";  labels entirely go on the individual\n   // items\n+  @Override\n   protected boolean isHiddenLabelRequired(RenderingContext arc)\n   {\n     return false;\n   } \n+  \n+  @Override\n   protected String getContentStyleClass(FacesBean bean)\n   {\n    return \"af|selectManyCheckbox::content\";\n   }\n   \n+  @Override\n   protected String getRootStyleClass(FacesBean bean)\n   {\n    return \"af|selectManyCheckbox\";", "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SimpleSelectManyCheckboxRenderer.java"}, {"additions": 8, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SimpleSelectManyListboxRenderer.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SimpleSelectManyListboxRenderer.java", "sha": "aeff52fbedf7e634bc2fd1db9bedfa7fd38f1057", "changes": 11, "status": "modified", "deletions": 3, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SimpleSelectManyListboxRenderer.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add", "patch": "@@ -46,18 +46,20 @@ public SimpleSelectManyListboxRenderer()\n     super(CoreSelectManyListbox.TYPE);\n   }\n   \n+  @Override\n   protected void findTypeConstants(FacesBean.Type type)\n   {\n     super.findTypeConstants(type);\n     _sizeKey = type.findKey(\"size\");\n   }\n \n+  @Override\n   protected void encodeElementContent(\n     FacesContext        context,\n-    RenderingContext arc,\n+    RenderingContext    arc,\n     UIComponent         component,\n     FacesBean           bean,\n-    List                selectItems,\n+    List<SelectItem>    selectItems,\n     int[]               selectedIndices,\n     Converter           converter,\n     boolean             valuePassThru) throws IOException\n@@ -83,7 +85,7 @@ protected void encodeElementContent(\n       if (selected)\n         selectedEntry++;\n \n-      SelectItem item = (SelectItem) selectItems.get(i);\n+      SelectItem item = selectItems.get(i);\n       SimpleSelectOneRenderer.encodeOption(\n            context, arc, component, item, converter,\n            valuePassThru, i, selected);\n@@ -96,6 +98,7 @@ protected void encodeElementContent(\n   /**\n    * Add autosubmit script\n    */\n+  @Override\n   protected String getOnchange(\n     FacesBean bean\n     )\n@@ -124,11 +127,13 @@ protected int getSize(FacesBean bean)\n     return toInt(o);\n   }\n   \n+  @Override\n   protected String getContentStyleClass(FacesBean bean)\n   {\n     return \"af|selectManyListbox::content\";\n   }\n   \n+  @Override\n   protected String getRootStyleClass(FacesBean bean)  \n   {\n     return \"af|selectManyListbox\";", "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SimpleSelectManyListboxRenderer.java"}, {"additions": 37, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SimpleSelectManyRenderer.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SimpleSelectManyRenderer.java", "sha": "84e57b07575d1a4e81fed8dd2b6785293bd91f92", "changes": 68, "status": "modified", "deletions": 31, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SimpleSelectManyRenderer.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add", "patch": "@@ -57,6 +57,7 @@ public SimpleSelectManyRenderer(FacesBean.Type type)\n     super(type);\n   }\n \n+  @Override\n   protected void findTypeConstants(FacesBean.Type type)\n   {\n     super.findTypeConstants(type);\n@@ -70,6 +71,7 @@ protected void findTypeConstants(FacesBean.Type type)\n    * @todo This throws a ConverterException on the first unconvertable\n    *  value;  it should wait\n    */\n+  @Override\n   public Object getConvertedValue(\n     FacesContext context,\n     UIComponent  component,\n@@ -88,7 +90,7 @@ public Object getConvertedValue(\n     if ( converter == null)\n       converter = getDefaultConverter(context, bean);\n \n-    Class modelClass = null;\n+    Class<?> modelClass = null;\n     ValueBinding binding = getValueBinding(bean);\n     if (binding != null)\n     {\n@@ -115,8 +117,7 @@ public Object getConvertedValue(\n     }\n   }\n \n-\n-\n+  @Override\n   public Object getSubmittedValue(\n     FacesContext context,\n     UIComponent  component)\n@@ -137,6 +138,7 @@ public Object getSubmittedValue(\n    * Override to return a Converter for the items in the value,\n    * not the value itself.\n    */\n+  @Override\n   protected Converter getDefaultConverter(\n     FacesContext context,\n     FacesBean    bean)\n@@ -145,13 +147,13 @@ protected Converter getDefaultConverter(\n     if (binding == null)\n       return null;\n \n-    Class type = binding.getType(context);\n+    Class<?> type = binding.getType(context);\n     if ((type == null) || type.isAssignableFrom(List.class))\n       return null;\n \n     if (type.isArray())\n     {\n-      Class itemClass = type.getComponentType();\n+      Class<?> itemClass = type.getComponentType();\n       return ConverterUtils.createConverter(context, itemClass);\n     }\n \n@@ -165,15 +167,15 @@ static private Object _convertSubmittedValue(\n     UIComponent  component,\n     Converter    converter,\n     String[]     values,\n-    Class        modelClass) throws ConverterException\n+    Class<?>     modelClass) throws ConverterException\n   {\n     // Handle lists\n     if ((modelClass == null) || modelClass.isAssignableFrom(List.class))\n     {\n       if (converter == null)\n         return Arrays.asList(values);\n \n-      ArrayList newList = new ArrayList(values.length);\n+      ArrayList<Object> newList = new ArrayList<Object>(values.length);\n       for (int i = 0; i < values.length; i++)\n       {\n         // Note - any error will result in an immediate ConverterException\n@@ -188,7 +190,7 @@ else if (modelClass.isArray())\n       if (converter == null)\n         return values;\n \n-      Class itemClass = modelClass.getComponentType();\n+      Class<?> itemClass = modelClass.getComponentType();\n       Object convertedArray = Array.newInstance(itemClass, values.length);\n       for (int i = 0; i < values.length; i++)\n       {\n@@ -222,9 +224,10 @@ static private Object _convertIndexedSubmittedValue(\n     UIComponent  component,\n     Converter    converter,\n     String[]     values,\n-    Class        modelClass) throws ConverterException\n+    Class<?>     modelClass) throws ConverterException\n   {\n-    List selectItems = SelectItemSupport.getSelectItems(component, converter);\n+    List<SelectItem> selectItems = \n+      SelectItemSupport.getSelectItems(component, converter);\n \n     // No selectItems automatically means that we failed to convert\n     if ((selectItems == null) || (selectItems.isEmpty()))\n@@ -233,7 +236,7 @@ static private Object _convertIndexedSubmittedValue(\n       _throwConversionError(context, component);\n     }\n \n-    assert (values instanceof String[]);\n+    // -= Simon Lessard =- Useless assertion: assert (values instanceof String[]);\n \n     // OK, is this a List or an array?\n     boolean isList = ((modelClass == null) ||\n@@ -247,17 +250,17 @@ static private Object _convertIndexedSubmittedValue(\n \n \n     // Create either a List or array\n-    List     objectList;\n-    Object   objectArray;\n+    List<Object> objectList;\n+    Object       objectArray;\n     if (isList)\n     {\n-      objectList = new ArrayList(values.length);\n+      objectList = new ArrayList<Object>(values.length);\n       objectArray = null;\n     }\n     else\n     {\n       objectList = null;\n-      Class itemClass = modelClass.getComponentType();\n+      Class<?> itemClass = modelClass.getComponentType();\n       // Use Array API instead of Object[] to support primitive types\n       objectArray = Array.newInstance(itemClass, values.length);\n     }\n@@ -273,7 +276,7 @@ static private Object _convertIndexedSubmittedValue(\n \n         if (( -1 < index) && (selectItems.size() > index))\n         {\n-          SelectItem item = (SelectItem)selectItems.get(index);\n+          SelectItem item = selectItems.get(index);\n           if (item == null)\n             continue;\n \n@@ -301,7 +304,7 @@ static private Object _convertIndexedSubmittedValue(\n       return objectArray;\n   }\n \n-\n+  @Override\n   protected void encodeAllAsElement(\n     FacesContext        context,\n     RenderingContext arc,\n@@ -330,7 +333,7 @@ protected void encodeAllAsElement(\n                       getRequiredMessageKey());\n     }\n \n-    List selectItems = SelectItemSupport.getSelectItems(component, converter);\n+    List<SelectItem> selectItems = SelectItemSupport.getSelectItems(component, converter);\n     int selectedIndices[] = _getSelectedIndices(context,\n                                                 component,\n                                                 bean,\n@@ -379,11 +382,12 @@ abstract protected void encodeElementContent(\n     RenderingContext arc,\n     UIComponent         component,\n     FacesBean           bean,\n-    List                selectItems,\n+    List<SelectItem>    selectItems,\n     int[]               selectedIndices,\n     Converter           converter,\n     boolean             valuePassThru) throws IOException;\n \n+  @Override\n   protected void renderNonElementContent(\n     FacesContext        context,\n     RenderingContext arc,\n@@ -398,7 +402,9 @@ protected void renderNonElementContent(\n     // =-=AEW If needed, this could be made more efficient\n     // by iterating through the list instead of getting\n     // all the items\n-    List selectItems = SelectItemSupport.getSelectItems(component, converter);\n+    List<SelectItem> selectItems = \n+      SelectItemSupport.getSelectItems(component, converter);\n+    \n     int selectedIndices[] = _getSelectedIndices(context,\n                                                 component,\n                                                 bean,\n@@ -414,7 +420,7 @@ protected void renderNonElementContent(\n         renderBetweenNonElements(context, arc, component, bean);\n       }\n \n-      SelectItem item = (SelectItem) selectItems.get(selectedIndices[i]);\n+      SelectItem item = selectItems.get(selectedIndices[i]);\n       rw.writeText(item.getLabel(), null);\n     }\n   }\n@@ -430,13 +436,12 @@ protected void renderBetweenNonElements(\n     rw.endElement(\"br\");\n   }\n \n-\n+  @Override\n   protected String getRequiredMessageKey()\n   {\n     return UIXSelectMany.REQUIRED_MESSAGE_ID;\n   }\n \n-\n   protected boolean getValuePassThru(FacesBean bean)\n   {\n     Object o = bean.getProperty(_valuePassThruKey);\n@@ -451,11 +456,12 @@ protected boolean getValuePassThru(FacesBean bean)\n    * Return all the selected indices, in sorted order.  (There\n    * may be trailing -1's in case of an error)\n    */\n+  @SuppressWarnings(\"unchecked\")\n   private int[] _getSelectedIndices(\n     FacesContext        context,\n     UIComponent         component,\n     FacesBean           bean,\n-    List                selectItems,\n+    List<SelectItem>    selectItems,\n     Converter           converter,\n     boolean             valuePassThru)\n   {\n@@ -495,7 +501,7 @@ protected boolean getValuePassThru(FacesBean bean)\n       else\n       {\n         String[] values = (String[]) submittedValue;\n-        List valuesList = new ArrayList(values.length);\n+        List<Object> valuesList = new ArrayList<Object>(values.length);\n         for (int i = 0; i < values.length; i++)\n         {\n           valuesList.add(converter.getAsObject(context,\n@@ -511,16 +517,16 @@ protected boolean getValuePassThru(FacesBean bean)\n       return _EMPTY_INT_ARRAY;\n \n     // Now, get the value looking like a list\n-    List valueList;\n+    List<Object> valueList;\n     if (value instanceof List)\n     {\n       // Make a copy of the list so we can mutate it safely\n-      valueList = new ArrayList((List) value);\n+      valueList = new ArrayList<Object>((List<Object>) value);\n     }\n     else if (value.getClass().isArray())\n     {\n       int length = Array.getLength(value);\n-      valueList = new ArrayList(length);\n+      valueList = new ArrayList<Object>(length);\n       for (int i = 0; i < length; i++)\n       {\n         valueList.add(Array.get(value, i));\n@@ -529,7 +535,7 @@ else if (value.getClass().isArray())\n     else\n     {\n       // Let's just take the one value as a single element\n-      valueList = new ArrayList(1);\n+      valueList = new ArrayList<Object>(1);\n       valueList.add(value);\n     }\n \n@@ -540,7 +546,7 @@ else if (value.getClass().isArray())\n     int lastEntry = 0;\n     for (int i = 0; i < itemCount; i++)\n     {\n-      SelectItem item = (SelectItem) selectItems.get(i);\n+      SelectItem item = selectItems.get(i);\n       if (item == null)\n         continue;\n \n@@ -595,7 +601,7 @@ static private void _throwConversionError(\n \n \n   static private void _throwUnsupportedModelType(\n-    FacesContext context, Class type, UIComponent component)\n+    FacesContext context, Class<?> type, UIComponent component)\n       throws ConverterException\n   {\n     throw new ConverterException(", "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SimpleSelectManyRenderer.java"}, {"additions": 11, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SimpleSelectOneChoiceRenderer.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SimpleSelectOneChoiceRenderer.java", "sha": "9a844a788413cb86b925bc4ad641e03302c45394", "changes": 15, "status": "modified", "deletions": 4, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SimpleSelectOneChoiceRenderer.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add", "patch": "@@ -42,22 +42,23 @@ public SimpleSelectOneChoiceRenderer()\n     super(CoreSelectOneChoice.TYPE);\n   }\n \n+  @Override\n   protected void findTypeConstants(FacesBean.Type type)\n   {\n     super.findTypeConstants(type);\n     _unselectedLabelKey = type.findKey(\"unselectedLabel\");\n   }\n \n-\n   //\n   // ENCODE BEHAVIOR\n   // \n+  @Override\n   protected void encodeElementContent(\n     FacesContext        context,\n     RenderingContext arc,\n     UIComponent         component,\n     FacesBean           bean,\n-    List                selectItems,\n+    List<SelectItem>    selectItems,\n     int                 selectedIndex,\n     Converter           converter,\n     boolean             valuePassThru) throws IOException\n@@ -79,7 +80,7 @@ protected void encodeSelectItems(\n     RenderingContext arc,\n     UIComponent         component,\n     FacesBean           bean,\n-    List                selectItems,\n+    List<SelectItem>    selectItems,\n     int                 selectedIndex,\n     Converter           converter,\n     boolean             valuePassThru) throws IOException\n@@ -116,7 +117,7 @@ else if (unselectedLabel != null)\n \n     for (int i = 0; i < size; i++)\n     {\n-      SelectItem item = (SelectItem) selectItems.get(i);\n+      SelectItem item = selectItems.get(i);\n       encodeOption(context, arc, component, item, converter,\n                    valuePassThru, i, selectedIndex == i);\n     }\n@@ -127,6 +128,7 @@ else if (unselectedLabel != null)\n   /**\n    * In Internet Explorer, handle autosubmit.\n    */\n+  @Override\n   protected String getOnclick(\n     FacesBean bean)\n   {\n@@ -155,6 +157,7 @@ protected String getOnclick(\n   /**\n    * In Internet Explorer, handle autosubmit.\n    */\n+  @Override\n   protected String getOnblur(\n     FacesBean bean)\n   {\n@@ -175,6 +178,7 @@ protected String getOnblur(\n   /**\n    * Add autosubmit script, and autosync script.\n    */\n+  @Override\n   protected String getOnchange(\n     FacesBean bean\n     )\n@@ -207,16 +211,19 @@ protected String getOnchange(\n     return XhtmlUtils.getChainedJS(onchange, auto, true);\n   }\n \n+  @Override\n   protected String getUnselectedLabel(FacesBean bean)\n   {\n     return toString(bean.getProperty(_unselectedLabelKey));\n   }\n   \n+  @Override\n   protected String getContentStyleClass(FacesBean bean)\n   {\n     return \"af|selectOneChoice::content\";\n   }\n   \n+  @Override\n   protected String getRootStyleClass(FacesBean bean)  \n   {\n     return \"af|selectOneChoice\";", "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SimpleSelectOneChoiceRenderer.java"}, {"additions": 8, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SimpleSelectOneListboxRenderer.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SimpleSelectOneListboxRenderer.java", "sha": "c1afccc4a8ee66ba8907d4290f966869793daadd", "changes": 10, "status": "modified", "deletions": 2, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SimpleSelectOneListboxRenderer.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add", "patch": "@@ -43,6 +43,7 @@ public SimpleSelectOneListboxRenderer()\n     super(CoreSelectOneListbox.TYPE);\n   }\n   \n+  @Override\n   protected void findTypeConstants(FacesBean.Type type)\n   {\n     super.findTypeConstants(type);\n@@ -71,12 +72,13 @@ static public int getListSize(\n   //\n   // ENCODE BEHAVIOR\n   // \n+  @Override\n   protected void encodeElementContent(\n     FacesContext        context,\n     RenderingContext arc,\n     UIComponent         component,\n     FacesBean           bean,\n-    List                selectItems,\n+    List<SelectItem>    selectItems,\n     int                 selectedIndex,\n     Converter           converter,\n     boolean             valuePassThru) throws IOException\n@@ -104,14 +106,15 @@ protected void encodeElementContent(\n \n     for (int i = 0; i < count; i++)\n     {\n-      SelectItem item = (SelectItem) selectItems.get(i);\n+      SelectItem item = selectItems.get(i);\n       encodeOption(context, arc, component, item, converter,\n                    valuePassThru, i, selectedIndex == i);\n     }\n     \n     writer.endElement(\"select\");\n   }\n \n+  @Override\n   protected String getUnselectedLabel(FacesBean bean)\n   {\n     return toString(bean.getProperty(_unselectedLabelKey));\n@@ -120,6 +123,7 @@ protected String getUnselectedLabel(FacesBean bean)\n   /**\n    * Add autosubmit script\n    */\n+  @Override\n   protected String getOnchange(\n     FacesBean bean\n     )\n@@ -146,11 +150,13 @@ protected int getSize(FacesBean bean)\n     return toInt(o);\n   }\n   \n+  @Override\n   protected String getContentStyleClass(FacesBean bean)\n   {\n     return \"af|selectOneListbox::content\";\n   }\n   \n+  @Override\n   protected String getRootStyleClass(FacesBean bean)  \n   {\n     return \"af|selectOneListbox\";", "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SimpleSelectOneListboxRenderer.java"}, {"additions": 12, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SimpleSelectOneRadioRenderer.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SimpleSelectOneRadioRenderer.java", "sha": "e4e9e955f72125753b64998fbffca4a7fbd5a40d", "changes": 15, "status": "modified", "deletions": 3, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SimpleSelectOneRadioRenderer.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add", "patch": "@@ -44,6 +44,7 @@ public SimpleSelectOneRadioRenderer()\n     super(CoreSelectOneRadio.TYPE);\n   }\n \n+  @Override\n   protected void findTypeConstants(FacesBean.Type type)\n   {\n     super.findTypeConstants(type);\n@@ -56,12 +57,13 @@ protected void findTypeConstants(FacesBean.Type type)\n   //\n   // ENCODE BEHAVIOR\n   //\n+  @Override\n   protected void encodeElementContent(\n     FacesContext        context,\n     RenderingContext arc,\n     UIComponent         component,\n     FacesBean           bean,\n-    List                selectItems,\n+    List<SelectItem>    selectItems,\n     int                 selectedIndex,\n     Converter           converter,\n     boolean             valuePassThru) throws IOException\n@@ -109,7 +111,7 @@ protected void encodeSelectItems(\n     RenderingContext arc,\n     UIComponent         component,\n     FacesBean           bean,\n-    List                selectItems,\n+    List<SelectItem>    selectItems,\n     int                 selectedIndex,\n     Converter           converter,\n     boolean             valuePassThru) throws IOException\n@@ -144,7 +146,7 @@ protected void encodeSelectItems(\n \n     for (int i = 0; i < size; i++)\n     {\n-      SelectItem item = (SelectItem) selectItems.get(i);\n+      SelectItem item = selectItems.get(i);\n       if (encodeSelectItem(context, arc, component, item, converter,\n                            valuePassThru, accessKey,\n                            i, selectedIndex == i, disabled,\n@@ -240,6 +242,7 @@ protected boolean encodeSelectItem(\n     return true;\n   }\n \n+  @Override\n   protected void renderId(\n     FacesContext context,\n     UIComponent  component) throws IOException\n@@ -256,6 +259,7 @@ protected void renderId(\n    * In Gecko, they bubble up, but in IE, they don't, so\n    * they have to go on the items.\n    */\n+  @Override\n   protected void renderFormEventHandlers(\n     FacesContext context,\n     FacesBean    bean) throws IOException\n@@ -267,6 +271,7 @@ protected void renderFormEventHandlers(\n    * Disable rendering \"onclick\" on the parent;  it needs to\n    * go on the individual radio buttons\n    */\n+  @Override\n   protected String getOnclick(\n     FacesBean bean\n     )\n@@ -317,23 +322,27 @@ protected String getLayout(FacesBean bean)\n     return toString(bean.getProperty(_layoutKey));\n   }\n \n+  @Override\n   protected String getUnselectedLabel(FacesBean bean)\n   {\n     return toString(bean.getProperty(_unselectedLabelKey));\n   }\n \n   // Never render the \"hidden label\";  labels entirely go on the individual\n   // items\n+  @Override\n   protected boolean isHiddenLabelRequired(RenderingContext arc)\n   {\n     return false;\n   }\n    \n+  @Override\n   protected String getContentStyleClass(FacesBean bean)\n   {\n     return \"af|selectOneRadio::content\";\n   }\n   \n+  @Override\n   protected String getRootStyleClass(FacesBean bean)  \n   {\n     return \"af|selectOneRadio\";", "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SimpleSelectOneRadioRenderer.java"}, {"additions": 27, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SimpleSelectOneRenderer.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SimpleSelectOneRenderer.java", "sha": "37d173a7472399a08abc7a4f5c2451f73002ba76", "changes": 42, "status": "modified", "deletions": 15, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SimpleSelectOneRenderer.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add", "patch": "@@ -48,13 +48,14 @@ public SimpleSelectOneRenderer(FacesBean.Type type)\n     super(type);\n   }\n \n+  @Override\n   protected void findTypeConstants(FacesBean.Type type)\n   {\n     super.findTypeConstants(type);\n     _valuePassThruKey = type.findKey(\"valuePassThru\");\n   }\n \n-\n+  @Override\n   public Object getSubmittedValue(\n     FacesContext context,\n     UIComponent  component)\n@@ -160,6 +161,7 @@ static public boolean encodeOption(\n   //\n   // DECODE BEHAVIOR\n   //\n+  @Override\n   public Object getConvertedValue(\n     FacesContext context,\n     UIComponent  component,\n@@ -200,13 +202,14 @@ private Object _convertIndexedSubmittedValue(\n     if ( converter == null)\n       converter = getDefaultConverter(context, bean);\n \n-    List selectItems = SelectItemSupport.getSelectItems(component, converter);\n+    List<SelectItem> selectItems =\n+      SelectItemSupport.getSelectItems(component, converter);\n+    \n     int index = __getIndex(submittedValue, selectItems);\n     if (index < 0)\n       return null;\n \n-    SelectItem item =\n-      (SelectItem) selectItems.get(index);\n+    SelectItem item = selectItems.get(index);\n     if (item != null)\n       return item.getValue();\n     else\n@@ -219,9 +222,10 @@ private Object _convertIndexedSubmittedValue(\n   //\n   /*\n    */\n+  @Override\n   protected void encodeAllAsElement(\n     FacesContext        context,\n-    RenderingContext arc,\n+    RenderingContext    arc,\n     UIComponent         component,\n     FacesBean           bean) throws IOException\n   {\n@@ -247,7 +251,9 @@ protected void encodeAllAsElement(\n                       getRequiredMessageKey());\n     }\n \n-    List selectItems = SelectItemSupport.getSelectItems(component, converter);\n+    List<SelectItem> selectItems = \n+      SelectItemSupport.getSelectItems(component, converter);\n+    \n     int selectedIndex = _getSelectedIndex(context,\n                                           component,\n                                           bean,\n@@ -290,11 +296,12 @@ abstract   protected void encodeElementContent(\n     RenderingContext arc,\n     UIComponent         component,\n     FacesBean           bean,\n-    List                selectItems,\n+    List<SelectItem>    selectItems,\n     int                 selectedIndex,\n     Converter           converter,\n     boolean             valuePassThru) throws IOException;\n \n+  @Override\n   protected void renderNonElementContent(\n     FacesContext        context,\n     RenderingContext arc,\n@@ -309,7 +316,9 @@ protected void renderNonElementContent(\n     // =-=AEW If needed, this could be made more efficient\n     // by iterating through the list instead of getting\n     // all the items\n-    List selectItems = SelectItemSupport.getSelectItems(component, converter);\n+    List<SelectItem> selectItems = \n+      SelectItemSupport.getSelectItems(component, converter);\n+    \n     int selectedIndex = _getSelectedIndex(context,\n                                           component,\n                                           bean,\n@@ -321,7 +330,7 @@ protected void renderNonElementContent(\n     String text;\n     if (selectedIndex >= 0)\n     {\n-      SelectItem item = (SelectItem) selectItems.get(selectedIndex);\n+      SelectItem item = selectItems.get(selectedIndex);\n       text = item.getLabel();\n     }\n     else\n@@ -332,13 +341,12 @@ protected void renderNonElementContent(\n     context.getResponseWriter().writeText(text, null);\n   }\n \n-\n+  @Override\n   protected String getRequiredMessageKey()\n   {\n     return UIXSelectOne.REQUIRED_MESSAGE_ID;\n   }\n \n-\n   protected boolean getValuePassThru(FacesBean bean)\n   {\n     Object o = bean.getProperty(_valuePassThruKey);\n@@ -359,7 +367,9 @@ protected String getUnselectedLabel(FacesBean bean)\n   /**\n    * Convert a stringified index into an index, with range-checking.\n    */\n-  static int __getIndex(Object submittedValue, List selectItems)\n+  static int __getIndex(\n+      Object submittedValue, \n+      List<SelectItem> selectItems)\n   {\n     if (\"\".equals(submittedValue))\n       return -1;\n@@ -393,12 +403,14 @@ static int __getIndex(Object submittedValue, List selectItems)\n   //\n   // Find the selected item in the list\n   //\n-  private int _findIndex(Object value, List selectItems)\n+  private int _findIndex(\n+      Object value, \n+      List<SelectItem> selectItems)\n   {\n     int size = selectItems.size();\n     for (int i = 0; i < size; i++)\n     {\n-      SelectItem item = (SelectItem) selectItems.get(i);\n+      SelectItem item = selectItems.get(i);\n       if (item == null)\n         continue;\n \n@@ -434,7 +446,7 @@ private int _getSelectedIndex(\n     FacesContext        context,\n     UIComponent         component,\n     FacesBean           bean,\n-    List                selectItems,\n+    List<SelectItem>    selectItems,\n     Converter           converter,\n     boolean             valuePassThru)\n   {", "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SimpleSelectOneRenderer.java"}, {"additions": 2, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SpacerRenderer.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SpacerRenderer.java", "sha": "db9da4977d2cb8b8d6d05593de6ebf0287190897", "changes": 2, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SpacerRenderer.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add", "patch": "@@ -34,13 +34,15 @@ public SpacerRenderer()\n     super(CoreSpacer.TYPE);\n   }\n   \n+  @Override\n   protected void findTypeConstants(FacesBean.Type type)\n   {\n     super.findTypeConstants(type);\n     _heightKey = type.findKey(\"height\");\n     _widthKey = type.findKey(\"width\");\n   }\n \n+  @Override\n   protected void encodeBegin(\n     FacesContext        context,\n     RenderingContext arc,", "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/SpacerRenderer.java"}, {"additions": 5, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/StyleSheetRenderer.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/StyleSheetRenderer.java", "sha": "13eda8d96dce9510d63bd5ad205353b49fd2f6b6", "changes": 7, "status": "modified", "deletions": 2, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/StyleSheetRenderer.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add", "patch": "@@ -66,12 +66,13 @@ protected StyleSheetRenderer(FacesBean.Type type)\n     super(type);\n   }\n \n+  @Override\n   public boolean getRendersChildren()\n   {\n     return true;\n   }\n \n-\n+  @Override\n   protected void encodeAll(\n     FacesContext        context,\n     RenderingContext arc,\n@@ -140,7 +141,9 @@ protected void encodeAll(\n       {\n         if (arc instanceof CoreRenderingContext)\n         {\n-          Map shortStyles = StyleUtils.getShortStyleClasses(sContext, provider);\n+          Map<String, String> shortStyles = \n+            StyleUtils.getShortStyleClasses(sContext, provider);\n+          \n           ((CoreRenderingContext) arc).setStyleMap(shortStyles);\n         }\n       }", "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/StyleSheetRenderer.java"}, {"additions": 43, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/TableRenderer.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/TableRenderer.java", "sha": "9e8bcfd8138c3e6b510a19c74caa31919f83d62d", "changes": 61, "status": "modified", "deletions": 18, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/TableRenderer.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add", "patch": "@@ -67,6 +67,7 @@ public TableRenderer(FacesBean.Type type)\n     _resourceKeyMap = createResourceKeyMap();\n   }\n \n+  @Override\n   protected void findTypeConstants(FacesBean.Type type)\n   {\n     super.findTypeConstants(type);\n@@ -75,19 +76,22 @@ protected void findTypeConstants(FacesBean.Type type)\n     _emptyTextKey  = type.findKey(\"emptyText\");\n   }\n \n-\n+  @Override\n   public boolean getRendersChildren()\n   {\n     return true;\n   }\n \n-\n+  @SuppressWarnings(\"unchecked\")\n+  @Override\n   public void decode(FacesContext context, UIComponent component)\n   {\n     decodeSelection(context, component);\n \n-    Map parameters =  context.getExternalContext().getRequestParameterMap();\n-    Object source = parameters.get(XhtmlConstants.SOURCE_PARAM);\n+    Map<String, String> parameters =  \n+      context.getExternalContext().getRequestParameterMap();\n+    \n+    String source = parameters.get(XhtmlConstants.SOURCE_PARAM);\n     String id = component.getClientId(context);\n     if (!id.equals(source))\n       return;\n@@ -141,9 +145,9 @@ private static RangeChangeEvent _createRangeChangeEvent(\n   }\n    private void _decodeSort(\n     UIXTable table,\n-    Map parameters)\n+    Map<String, String> parameters)\n   {\n-    String property = (String) parameters.get(XhtmlConstants.VALUE_PARAM);\n+    String property = parameters.get(XhtmlConstants.VALUE_PARAM);\n     Object state = parameters.get(XhtmlConstants.STATE_PARAM);\n     boolean sortOrder = !XhtmlConstants.SORTABLE_ASCENDING.equals(state);\n     SortCriterion criterion = new SortCriterion(property, sortOrder);\n@@ -155,9 +159,9 @@ private void _decodeSort(\n \n   private void _decodeGoto(\n     UIXTable table,\n-    Map parameters)\n+    Map<String, String> parameters)\n   {\n-    String value = (String) parameters.get(XhtmlConstants.VALUE_PARAM);\n+    String value = parameters.get(XhtmlConstants.VALUE_PARAM);\n     if (value != null)\n     {\n       final FacesEvent event;\n@@ -190,17 +194,18 @@ private void _decodeGoto(\n   }\n \n \n+  @SuppressWarnings(\"unchecked\")\n   private void _decodeHideShow(\n     UIXTable table,\n-    Map parameters,\n+    Map<String, String> parameters,\n     Object eventParam)\n   {\n     boolean doExpand = XhtmlConstants.SHOW_EVENT.equals(eventParam);\n     Object value = parameters.get(XhtmlConstants.VALUE_PARAM);\n     if (value != null)\n     {\n-      RowKeySet old = table.getDisclosedRowKeys();\n-      RowKeySet newset = old.clone();\n+      RowKeySet<Object> old = table.getDisclosedRowKeys();\n+      RowKeySet<Object> newset = old.clone();\n       if (\"all\".equals(value))\n       {\n         if (doExpand)\n@@ -223,14 +228,15 @@ private void _decodeHideShow(\n     }\n   }\n \n+  @Override\n   protected void encodeAll(\n     FacesContext        context,\n     RenderingContext arc,\n     UIComponent         component,\n     FacesBean           bean) throws IOException\n   {\n     // save current skin resource map, if any, on the local property\n-    Map oldSkinResourceMap = arc.getSkinResourceKeyMap();\n+    Map<String, String> oldSkinResourceMap = arc.getSkinResourceKeyMap();\n \n     // store TableRenderer's skin resource map, so that called to\n     // context.getTranslatedValue will get the correct key.\n@@ -456,6 +462,7 @@ protected boolean renderTableWithoutColumns(\n    * used to render special column headers, like select and details.\n    * @return the next physicalColumnIndex\n    */\n+  @SuppressWarnings(\"unchecked\")\n   protected int renderSpecialColumns(\n     FacesContext          context,\n     RenderingContext   arc,\n@@ -468,7 +475,7 @@ protected int renderSpecialColumns(\n     // depending on the RenderStage\n     final ColumnData colData = tContext.getColumnData();\n     int[] hidden = tContext.getHiddenColumns();\n-    List children = treeTable.getChildren();\n+    List<UIComponent> children = treeTable.getChildren();\n     int colCount  = children.size();\n     for (int i = 0;  i < colCount;  i++)\n     {\n@@ -529,7 +536,7 @@ private void _renderSelectionColumn(\n     RenderingContext   arc,\n     TableRenderingContext tContext) throws IOException\n   {\n-    Map originalResourceKeyMap = arc.getSkinResourceKeyMap();\n+    Map<String, String> originalResourceKeyMap = arc.getSkinResourceKeyMap();\n     setSelectionResourceKeyMap(arc, tContext);\n     try\n     {\n@@ -717,7 +724,9 @@ public static void setSelectionResourceKeyMap(\n   {\n     if (tContext.hasSelection())\n     {\n-      Map selectionColumnStylesMap = new HashMap();\n+      Map<String, String> selectionColumnStylesMap = \n+        new HashMap<String, String>();\n+      \n       // if selection is multiple-selection:\n       if (tContext.hasSelectAll())\n       {\n@@ -738,20 +747,21 @@ public static void setSelectionResourceKeyMap(\n \n   }\n \n+  @Override\n   protected boolean shouldRenderId(FacesContext context, UIComponent component)\n   {\n     return true;\n   }\n \n-  protected Map createResourceKeyMap()\n+  protected Map<String, String> createResourceKeyMap()\n   {\n     // map the skin resource keys that are used in components used\n     // by the table renderer to table keys.\n     // This way the table can be customized separately from other\n     // components that it uses within it. For example, we can customize\n     // af_table.DISCLOSED translation key\n     // separately from af_showDetail.DISCLOSED.\n-    Map map = new HashMap(6);\n+    Map<String, String> map = new HashMap<String, String>(6);\n     map.put(\"af_showDetail.DISCLOSED\",\n             \"af_table.DISCLOSED\");\n     map.put(\"af_showDetail.UNDISCLOSED\",\n@@ -786,11 +796,13 @@ public NavBar(FacesBean.Type type)\n       super(type);\n     }\n \n+    @Override\n     protected void renderAllAttributes(\n       FacesContext context, RenderingContext arc, FacesBean bean)\n     {\n     }\n \n+    @Override\n     protected boolean getShowAll(FacesBean bean)\n     {\n       TableRenderingContext tContext =\n@@ -806,6 +818,7 @@ protected boolean getShowAll(FacesBean bean)\n     }\n \n     // For now, disable showAll except on UIXTable\n+    @Override\n     protected boolean showAllSupported()\n     {\n       TableRenderingContext tContext =\n@@ -815,6 +828,7 @@ protected boolean showAllSupported()\n       }\n \n \n+    @Override\n     protected String getSource()\n     {\n       TableRenderingContext tContext =\n@@ -825,59 +839,70 @@ protected String getSource()\n     /**\n      * @todo Deal with repeating!\n      */\n+    @Override\n     protected String getClientId(FacesContext context, UIComponent component)\n     {\n       TableRenderingContext tContext =\n         TableRenderingContext.getCurrentInstance();\n       return tContext.getTableId() + \"-nb\";\n     }\n \n+    @Override\n     protected String getVar(FacesBean bean)\n     {\n       return null;\n     }\n \n     // No support for range labels\n+    @Override\n     protected UIComponent getRangeLabel(UIComponent component)\n     {\n       return null;\n     }\n \n+    @Override\n     protected int getRowCount(UIComponent component)\n     {\n       return ((CollectionComponent) component).getRowCount();\n     }\n \n+    @Override\n     protected int getRowIndex(UIComponent component)\n     {\n       return ((CollectionComponent) component).getRowIndex();\n     }\n \n+    @Override\n     protected void setRowIndex(UIComponent component, int index)\n     {\n       ((CollectionComponent) component).setRowIndex(index);\n     }\n \n+    @Override\n     protected boolean isRowAvailable(UIComponent component)\n     {\n       return ((CollectionComponent) component).isRowAvailable();\n     }\n \n+    @Override\n     protected boolean isRowAvailable(UIComponent component, int rowIndex)\n     {\n       return ((UIXCollection) component).isRowAvailable(rowIndex);\n     }\n \n+    @Override\n     protected Object getRowData(UIComponent component)\n     {\n       return ((CollectionComponent) component).getRowData();\n     }\n \n+    @Override\n     protected int getRows(UIComponent component, FacesBean bean)\n     {\n       return ((CollectionComponent) component).getRows();\n     }\n \n+    @Override\n     protected int getFirst(UIComponent component, FacesBean bean)\n     {\n       return ((CollectionComponent) component).getFirst();\n@@ -887,7 +912,7 @@ protected int getFirst(UIComponent component, FacesBean bean)\n \n   private PropertyKey _widthKey;\n   private PropertyKey _emptyTextKey;\n-  private final Map _resourceKeyMap;\n+  private final Map<String, String> _resourceKeyMap;\n \n   // Key for RenderingContext property used to store the generated ID\n   // to use for the upper navigation bar.  (Part of fix for 2275703.)", "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/TableRenderer.java"}, {"additions": 2, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/ValueRenderer.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/ValueRenderer.java", "sha": "fa8964034df5a2f126230ce54a0db2631e43c2f6", "changes": 3, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/ValueRenderer.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add", "patch": "@@ -32,6 +32,7 @@ protected ValueRenderer(FacesBean.Type type)\n     super(type);\n   }\n \n+  @Override\n   protected void findTypeConstants(FacesBean.Type type)\n   {\n     super.findTypeConstants(type);\n@@ -69,7 +70,7 @@ protected Converter getDefaultConverter(\n     if (binding == null)\n       return null;\n \n-    Class type = binding.getType(context);\n+    Class<?> type = binding.getType(context);\n     return ConverterUtils.createConverter(context, type);\n   }\n ", "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/ValueRenderer.java"}, {"additions": 6, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/XhtmlFormattedText.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/XhtmlFormattedText.java", "sha": "e2a04cc3bb79a8d4a2f89a1b4e0434b5d4071c2a", "changes": 6, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/XhtmlFormattedText.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add", "patch": "@@ -55,20 +55,24 @@ public FontElement(String name, boolean empty, boolean closeRequired)\n       super(name, empty, closeRequired);\n     }\n     \n+    @Override\n     public void writeInlineStyle(FacesContext context, String style)\n     {\n \n     }\n \n+    @Override\n     public void writeStyleClass(FacesContext context, String styleClass)\n     {\n \n     }\n+    @Override\n     public void writeHRef(FacesContext context, String href)\n     {\n     \n     }  \n \n+    @Override\n     public void writeSize(FacesContext context, String fontSize)\n       throws IOException\n     {\n@@ -89,6 +93,7 @@ public XhtmlElement(String name, boolean empty, boolean closeRequired)\n       super(name, empty, closeRequired);\n     }\n \n+    @Override\n     public void writeInlineStyle(FacesContext context, String style)\n       throws IOException\n     {\n@@ -102,6 +107,7 @@ public void writeInlineStyle(FacesContext context, String style)\n       }*/\n     }\n \n+    @Override\n     public void writeStyleClass(FacesContext context, String styleClass)\n       throws IOException\n     {", "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/XhtmlFormattedText.java"}, {"additions": 2, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/XhtmlRenderer.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/XhtmlRenderer.java", "sha": "51a3c25c277fbf512234430996091e396d53e1c2", "changes": 3, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/XhtmlRenderer.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add", "patch": "@@ -252,6 +252,7 @@ public static boolean supportsXMLDOM(\n    * that deliver events should always return \"true\".\n    * @todo Profile and possibly optimize.\n    */\n+  @Override\n   protected boolean shouldRenderId(\n     FacesContext context,\n     UIComponent  component)\n@@ -878,7 +879,7 @@ public static void enableScriptDeferring(RenderingContext arc, boolean isEnabled\n     // since IE has problems with deferred scripts.  This property is\n     // enabled by PanelPartialRootRenderer when rendering the contents\n     // of the body.\n-    Map props = arc.getProperties();\n+    Map<Object, Object> props = arc.getProperties();\n     if (isEnabled)\n     {\n       // Turn script deferring on", "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/XhtmlRenderer.java"}, {"additions": 5, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/XhtmlUtils.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/XhtmlUtils.java", "sha": "4f3541f7e0efd61e0f975a884ace1c4b1ab79866", "changes": 10, "status": "modified", "deletions": 5, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/XhtmlUtils.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add", "patch": "@@ -123,7 +123,7 @@ static public void addLib(\n   {\n     if ((XhtmlRenderer.supportsScripting(arc)) && (libKey != null))\n     {\n-      Scriptlet scriptlet = (Scriptlet) _sScriptletTable.get(libKey);\n+      Scriptlet scriptlet = _sScriptletTable.get(libKey);\n       if (scriptlet == null)\n       {\n         if (_LOG.isWarning())\n@@ -505,17 +505,17 @@ public static String getFormattedString(String pattern, String[] parameters)\n   }\n \n   /** HashMap mapping names to their scriptlets */\n-  private static Map _sScriptletTable =\n-    Collections.synchronizedMap(new HashMap(37));\n+  private static Map<Object, Scriptlet> _sScriptletTable =\n+    Collections.synchronizedMap(new HashMap<Object, Scriptlet>(37));\n \n   // Key for storing whether we've written out the script\n   // for storing loaded libraries\n   static private final Object _PORTLET_LIB_TABLE_KEY = new Object();\n-  static private final Set\n-    _NON_STRUCTURAL_COMPONENT_FAMILIES = new HashSet();\n+  static private final Set<String> _NON_STRUCTURAL_COMPONENT_FAMILIES;\n \n   static\n   {\n+    _NON_STRUCTURAL_COMPONENT_FAMILIES = new HashSet<String>();\n     _NON_STRUCTURAL_COMPONENT_FAMILIES.add(UIXIterator.COMPONENT_FAMILY);\n     _NON_STRUCTURAL_COMPONENT_FAMILIES.add(UIXComponentRef.COMPONENT_FAMILY);\n     _NON_STRUCTURAL_COMPONENT_FAMILIES.add(UIXSubform.COMPONENT_FAMILY);", "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/XhtmlUtils.java"}, {"additions": 9, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/jsLibs/AliasedScriptlet.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/jsLibs/AliasedScriptlet.java", "sha": "04b596d8a3360aeab9460e1656d66689e43ca17c", "changes": 16, "status": "modified", "deletions": 7, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/jsLibs/AliasedScriptlet.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add", "patch": "@@ -18,7 +18,6 @@\n import java.io.IOException;\n import java.io.InputStream;\n \n-import java.util.Iterator;\n import java.util.Enumeration;\n import java.util.HashSet;\n import java.util.Properties;\n@@ -43,17 +42,15 @@\n    */\n   static public void registerAliases()\n   {\n-    HashSet aliases = new HashSet();\n-    Enumeration names = _ALIASES.propertyNames();\n+    HashSet<String> aliases = new HashSet<String>();\n+    Enumeration<?> names = _ALIASES.propertyNames();\n     while (names.hasMoreElements())\n     {\n       aliases.add(_ALIASES.getProperty((String) names.nextElement()));\n     }\n \n-    Iterator iterator = aliases.iterator();\n-    while (iterator.hasNext())\n+    for(String libName : aliases)\n     {\n-      String libName = (String) iterator.next();\n       Scriptlet scriptlet = null;\n \n       if (\"Common\".equals(libName))\n@@ -64,6 +61,7 @@ static public void registerAliases()\n           // when it's outside of a partial page request, since the\n           // partial page library itself needs it.\n           // See comments in Scriptlet.__isOutsidePartialPage()\n+          @Override\n           boolean __isOutsidePartialPage(RenderingContext arc)\n           {\n             return false;\n@@ -97,11 +95,13 @@ public AliasedScriptlet(\n     _actualLibrary = _getAlias(name);\n   }\n \n+  @Override\n   public Object getScriptletKey()\n   {\n     return _name;\n   }\n \n+  @Override\n   public void registerSelf()\n   {\n     super.registerSelf();\n@@ -112,6 +112,7 @@ public void registerSelf()\n     }\n   }\n \n+  @Override\n   protected void outputScriptletImpl(\n     FacesContext        context,\n     RenderingContext arc) throws IOException\n@@ -125,6 +126,7 @@ protected void outputScriptletImpl(\n     outputDependency(context, arc, _actualLibrary);\n   }\n \n+  @Override\n   protected void outputScriptletContent(\n     FacesContext        context,\n     RenderingContext arc) throws IOException\n@@ -159,7 +161,7 @@ static private String _getAlias(String theLibraryName)\n     _LOG = TrinidadLogger.createTrinidadLogger(AliasedScriptlet.class);\n \n     // Load library versions\n-    Class cl = AliasedScriptlet.class;\n+    Class<AliasedScriptlet> cl = AliasedScriptlet.class;\n     InputStream in = cl.getResourceAsStream(_JAVASCRIPT_ALIAS_FILE);\n \n     if (in == null)", "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/jsLibs/AliasedScriptlet.java"}, {"additions": 2, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/jsLibs/ColorFieldInfoScriptlet.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/jsLibs/ColorFieldInfoScriptlet.java", "sha": "efac4d9c0fe9f1b8b74a215eabc2415d4f983164", "changes": 2, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/jsLibs/ColorFieldInfoScriptlet.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add", "patch": "@@ -44,6 +44,7 @@ static public Scriptlet sharedInstance()\n     return _sInstance;\n   }\n \n+  @Override\n   public Object getScriptletKey()\n   {\n     return COLOR_FIELD_INFO_KEY;\n@@ -52,6 +53,7 @@ public Object getScriptletKey()\n   /**\n    * @todo Rebuild in Faces-major land\n    */\n+  @Override\n   protected void outputScriptletContent(\n     FacesContext        context,\n     RenderingContext arc) throws IOException", "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/jsLibs/ColorFieldInfoScriptlet.java"}, {"additions": 2, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/jsLibs/ColorFormatInfoScriptlet.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/jsLibs/ColorFormatInfoScriptlet.java", "sha": "164c9cb6b8d23dd6d4daa0f0adb849ab1f028216", "changes": 2, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/jsLibs/ColorFormatInfoScriptlet.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add", "patch": "@@ -42,6 +42,7 @@ private ColorFormatInfoScriptlet()\n   {\n   }\n \n+  @Override\n   public Object getScriptletKey()\n   {\n     return COLOR_FORMAT_INFO_KEY;\n@@ -50,6 +51,7 @@ public Object getScriptletKey()\n   /**\n    * @todo GET TRANSPARENT OFF OF SKIN, NOT HARDCODED BUNDLE\n    */\n+  @Override\n   protected void outputScriptletContent(\n     FacesContext        context,\n     RenderingContext arc) throws IOException", "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/jsLibs/ColorFormatInfoScriptlet.java"}, {"additions": 2, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/jsLibs/ConfigurationScriptlet.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/jsLibs/ConfigurationScriptlet.java", "sha": "c040e473942a6af9867b006455ae2d6ac65d137e", "changes": 2, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/jsLibs/ConfigurationScriptlet.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add", "patch": "@@ -34,6 +34,7 @@ public ConfigurationScriptlet()\n   {\n   }\n \n+  @Override\n   public Object getScriptletKey()\n   {\n     return _CONFIGURATION_SCRIPTLET_KEY;\n@@ -52,6 +53,7 @@ static public Scriptlet sharedInstance()\n   /**\n    * @todo See if truly necessary.\n    */\n+  @Override\n   protected void outputScriptletContent(\n     FacesContext        context,\n     RenderingContext arc)", "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/jsLibs/ConfigurationScriptlet.java"}, {"additions": 2, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/jsLibs/DateFormatInfoScriptlet.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/jsLibs/DateFormatInfoScriptlet.java", "sha": "c0240deab70e326a3ee5fa498c1074d78f9869d6", "changes": 2, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/jsLibs/DateFormatInfoScriptlet.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add", "patch": "@@ -43,11 +43,13 @@ private DateFormatInfoScriptlet()\n   {\n   }\n \n+  @Override\n   public Object getScriptletKey()\n   {\n     return DATE_FORMAT_INFO_KEY;\n   }\n \n+  @Override\n   protected void outputScriptletContent(\n     FacesContext        context,\n     RenderingContext arc) throws IOException", "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/jsLibs/DateFormatInfoScriptlet.java"}, {"additions": 3, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/jsLibs/DefaultTimeZoneScriptlet.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/jsLibs/DefaultTimeZoneScriptlet.java", "sha": "6aa6779c12887642fca8d5893b07b4ff1fcfa478", "changes": 3, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/jsLibs/DefaultTimeZoneScriptlet.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add", "patch": "@@ -39,11 +39,13 @@ private DefaultTimeZoneScriptlet()\n   {\n   }\n \n+  @Override\n   public Object getScriptletKey()\n   {\n     return DEFAULT_TIME_ZONE_KEY;\n   }\n \n+  @Override\n   protected void outputScriptletImpl(\n     FacesContext        context,\n     RenderingContext arc) throws IOException\n@@ -52,6 +54,7 @@ protected void outputScriptletImpl(\n     super.outputScriptletImpl(context, arc);\n   }\n \n+  @Override\n   protected void outputScriptletContent(\n     FacesContext        context,\n     RenderingContext arc) throws IOException", "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/jsLibs/DefaultTimeZoneScriptlet.java"}, {"additions": 2, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/jsLibs/GlobalVariablesScriptlet.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/jsLibs/GlobalVariablesScriptlet.java", "sha": "575b339cb2813e54712985de60c330edd2a05f00", "changes": 2, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/jsLibs/GlobalVariablesScriptlet.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add", "patch": "@@ -36,6 +36,7 @@ public GlobalVariablesScriptlet()\n   {\n   }\n \n+  @Override\n   public Object getScriptletKey()\n   {\n     return GLOBAL_VARIABLES_KEY;\n@@ -51,6 +52,7 @@ static public Scriptlet sharedInstance()\n     return _sInstance;\n   }\n \n+  @Override\n   protected void outputScriptletContent(\n     FacesContext        context,\n     RenderingContext arc) throws IOException", "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/jsLibs/GlobalVariablesScriptlet.java"}, {"additions": 2, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/jsLibs/JspDirScriptlet.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/jsLibs/JspDirScriptlet.java", "sha": "3b9b4ebac06c878a5d5864341720174cd1df1ad1", "changes": 2, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/jsLibs/JspDirScriptlet.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add", "patch": "@@ -41,11 +41,13 @@ protected JspDirScriptlet()\n   {\n   }\n \n+  @Override\n   public Object getScriptletKey()\n   {\n     return JSP_DIR_KEY;\n   }\n \n+  @Override\n   protected void outputScriptletContent(\n     FacesContext        context,\n     RenderingContext arc) throws IOException", "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/jsLibs/JspDirScriptlet.java"}, {"additions": 5, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/jsLibs/LibraryScriptlet.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/jsLibs/LibraryScriptlet.java", "sha": "19d0506ba0c59bde70d95327f51f1df453368f99", "changes": 7, "status": "modified", "deletions": 2, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/jsLibs/LibraryScriptlet.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add", "patch": "@@ -46,7 +46,7 @@ public LibraryScriptlet(String libraryName,\n     _dependencies = dependencies;\n   }\n \n-\n+  @Override\n   public void registerSelf()\n   {\n     super.registerSelf();\n@@ -57,7 +57,7 @@ public void registerSelf()\n     }\n   }\n \n-\n+  @Override\n   public Object getScriptletKey()\n   {\n     return _libraryName;\n@@ -81,6 +81,7 @@ public static String getLibraryNameWithVersion(\n     return libraryName;\n   }\n \n+  @Override\n   protected void outputScriptletImpl(\n     FacesContext        context,\n     RenderingContext arc) throws IOException\n@@ -94,13 +95,15 @@ protected void outputScriptletImpl(\n     XhtmlUtils.writeLibImport(context, arc, _getLibraryURL(context, arc));\n   }\n \n+  @Override\n   protected void outputScriptletContent(\n     FacesContext        context,\n     RenderingContext arc) throws IOException\n   {\n     // No-op.\n   }\n \n+  @Override\n   protected void embedInScriptTagImpl(\n     FacesContext        context,\n     RenderingContext arc) throws IOException", "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/jsLibs/LibraryScriptlet.java"}, {"additions": 5, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/jsLibs/LocaleInfoScriptlet.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/jsLibs/LocaleInfoScriptlet.java", "sha": "64000871035ec97dbd9aebe21b8b136a642184ae", "changes": 6, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/jsLibs/LocaleInfoScriptlet.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add", "patch": "@@ -56,6 +56,7 @@ public LocaleInfoScriptlet()\n    * @todo Revisit separate translation and internationalization\n    * locales.\n    */ \n+  @Override\n   protected void outputScriptletImpl(\n     FacesContext        context,\n     RenderingContext arc) throws IOException\n@@ -108,6 +109,7 @@ protected void outputScriptletImpl(\n     super.outputScriptletImpl(context, arc);\n   }\n \n+  @Override\n   protected String getLibraryName(\n     FacesContext        context,\n     RenderingContext arc)\n@@ -163,7 +165,9 @@ private static Locale _getJSLocaleElementsLocale(\n     Locale inLocale\n     )\n   {\n-    HashMap supportedMap = LocaleList.getSupportedLocales();\n+    HashMap<Locale, Locale> supportedMap = \n+      LocaleList.getSupportedLocales();\n+    \n     Locale outLocale = inLocale;\n     if(supportedMap.containsKey(outLocale))\n     {", "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/jsLibs/LocaleInfoScriptlet.java"}, {"additions": 3, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/jsLibs/XhtmlScriptletFactory.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/jsLibs/XhtmlScriptletFactory.java", "sha": "cd7da7f9f9760ee2f5aab374cf6d7b82402bca78", "changes": 3, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/jsLibs/XhtmlScriptletFactory.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add", "patch": "@@ -90,6 +90,8 @@ private XhtmlScriptletFactory()\n   static private Scriptlet _sCharSetsScriptlet;\n   static private Scriptlet _sShuttleScriptlet;\n   static private Scriptlet _sTableProxyScriptlet;\n+  // FIXME: Never read\n+  @SuppressWarnings(\"unused\")\n   static private Scriptlet _sDiagrammerScriptlet;\n   static private Scriptlet _sColorFormatScriptlet;\n   static private Scriptlet _sColorFieldFormatScriptlet;\n@@ -143,6 +145,7 @@ private XhtmlScriptletFactory()\n         // =-=AEW  The MarlinCore library needs to be rendered even\n         // when it's outside of a partial page request, since the\n         // partial page library itself needs it.\n+        @Override\n         boolean __isOutsidePartialPage(RenderingContext context)\n         {\n           return false;", "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/jsLibs/XhtmlScriptletFactory.java"}, {"additions": 5, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/table/BandingData.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/table/BandingData.java", "sha": "ffbd04ac054ad68f64ddde7a692dcd72ddb52b8e", "changes": 7, "status": "modified", "deletions": 2, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/table/BandingData.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add", "patch": "@@ -32,18 +32,21 @@\n   /**\n    * @param context gets the appropriate banding data from this context.\n    */\n+  @SuppressWarnings(\"unchecked\")\n   public static BandingData create(TableRenderingContext context)\n   {\n     // using the variable name \"hgrid\" so that we don't forget that\n     // the table instance might infact be an hgrid:\n     UIComponent hgrid = context.getTable();\n-    Map attrs = hgrid.getAttributes();\n+    Map<String, Object> attrs = hgrid.getAttributes();\n     int row = _getInterval(attrs, CoreTable.ROW_BANDING_INTERVAL_KEY);\n     int col = _getInterval(attrs, CoreTable.COLUMN_BANDING_INTERVAL_KEY);\n     return new BandingData(col, row);\n   }\n \n-  private static int _getInterval(Map attrs, PropertyKey key)\n+  private static int _getInterval(\n+      Map<String, Object> attrs, \n+      PropertyKey key)\n   {\n     Number num = (Number) attrs.get(key.getName());\n     int interval = (num != null) ? num.intValue() : 0;", "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/table/BandingData.java"}, {"additions": 3, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/table/ColumnData.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/table/ColumnData.java", "sha": "a89e391844e95d892f70dbf7f9063f43636457c7", "changes": 5, "status": "modified", "deletions": 2, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/table/ColumnData.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add", "patch": "@@ -18,6 +18,7 @@\n import java.awt.Dimension;\n \n import java.util.ArrayList;\n+import java.util.List;\n \n import org.apache.myfaces.trinidad.logging.TrinidadLogger;\n import org.apache.myfaces.trinidad.component.UIXTreeTable;\n@@ -430,7 +431,7 @@ else if (CoreColumn.ALIGN_CENTER.equals(format))\n \n   private Data _get(int physicalIndex)\n   {\n-    Data d = (Data) _data.get(physicalIndex);\n+    Data d = _data.get(physicalIndex);\n     assert (d != null)\n         : \"no column data for physicalIndex:\" + physicalIndex;\n     return d;\n@@ -551,7 +552,7 @@ static private Object _getSpecialWidth(\n   private int _rowIndex = -1;\n \n   private final Dimension _currentSpan = new Dimension(1,1);\n-  private final ArrayList _data = new ArrayList(10);\n+  private final List<Data> _data = new ArrayList<Data>(10);\n \n   // this constants is used for assert only:\n   private boolean _assertInitMode = true;", "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/table/ColumnData.java"}, {"additions": 10, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/table/DetailColumnRenderer.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/table/DetailColumnRenderer.java", "sha": "cac87ecaedd46e5daf9bbe703d5579e212d2f780", "changes": 10, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/table/DetailColumnRenderer.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add", "patch": "@@ -31,6 +31,7 @@\n \n public class DetailColumnRenderer extends SpecialColumnRenderer\n {\n+  @Override\n   protected void encodeAll(\n     FacesContext        context,\n     RenderingContext arc,\n@@ -55,17 +56,20 @@ protected void encodeAll(\n     super.encodeAll(context, arc, component, bean);\n   }  \n   \n+  @Override\n   protected String getHeaderText(FacesBean bean)\n   {\n     RenderingContext arc = RenderingContext.getCurrentInstance();\n     return arc.getTranslatedString(\"af_table.DETAIL_COLUMN_HEADER\");\n   }\n   \n+  @Override\n   protected boolean getNoWrap(FacesBean bean)\n   {\n     return true;\n   }\n \n+  @Override\n   protected void renderKids(FacesContext          context,\n                             RenderingContext   arc,\n                             TableRenderingContext tContext,\n@@ -87,6 +91,7 @@ public Detail()\n       super(CoreTable.TYPE);\n     }\n     \n+    @Override\n     protected void renderAllAttributes(\n        FacesContext        context,\n        RenderingContext arc,\n@@ -107,30 +112,35 @@ protected void renderPromptStart(\n       super.renderPromptStart(context, arc, component, bean);\n     }\n     \n+    @Override\n     protected String getValueParameter(UIComponent component)\n     {\n       UIXCollection cb = (UIXCollection) component;\n       int rowIndex = cb.getRowIndex();\n       return IntegerUtils.getString(rowIndex);\n     }\n     \n+    @Override\n     protected boolean isTableDetailDisclosure()\n     {\n       return true;\n     }\n     \n+    @Override\n     protected boolean getDisclosed(FacesBean bean)\n     {\n       TableRenderingContext tContext = TableRenderingContext.getCurrentInstance();\n       UIXTable table = (UIXTable) tContext.getCollectionComponent();\n       return (table.getDisclosedRowKeys().isContained());\n     }\n \n+    @Override\n    protected String getLinkId(String rootId, boolean disclosed)\n    {\n      return _getDetailLinkId(TableRenderingContext.getCurrentInstance());\n    }\n    \n+    @Override\n     protected String getClientId(FacesContext context, UIComponent component)\n     {\n       TableRenderingContext tContext = TableRenderingContext.getCurrentInstance();", "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/table/DetailColumnRenderer.java"}, {"additions": 4, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/table/FocusColumnRenderer.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/table/FocusColumnRenderer.java", "sha": "7a02d8070b32ad3a1c58689820df5e936db01dd0", "changes": 4, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/table/FocusColumnRenderer.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add", "patch": "@@ -34,22 +34,26 @@\n \n public class FocusColumnRenderer extends SpecialColumnRenderer\n {\n+  @Override\n   protected String getHeaderText(FacesBean bean)\n   {\n     RenderingContext arc = RenderingContext.getCurrentInstance();\n     return arc.getTranslatedString(\"af_treeTable.FOCUS_COLUMN_HEADER\");\n   }\n   \n+  @Override\n   protected String getHeaderStyleClass(TableRenderingContext tContext)\n   {\n     return XhtmlConstants.AF_COLUMN_HEADER_ICON_STYLE;\n   }\n \n+  @Override\n   protected String getFormatType(FacesBean bean)\n   {\n     return CoreColumn.ALIGN_CENTER;\n   }\n \n+  @Override\n   protected void renderKids(FacesContext          context,\n                             RenderingContext   arc,\n                             TableRenderingContext trc,", "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/table/FocusColumnRenderer.java"}, {"additions": 1, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/table/RenderStage.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/table/RenderStage.java", "sha": "32de91799ea10fad553cffb87a11330633625a08", "changes": 1, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/table/RenderStage.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add", "patch": "@@ -52,6 +52,7 @@ public int setStage(int stage)\n     return ps;\n   }\n \n+  @Override\n   public String toString()\n   {\n     return \"RenderStage:\"+_stage;", "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/table/RenderStage.java"}, {"additions": 8, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/table/RowData.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/table/RowData.java", "sha": "1634db21558ee9cf5b835a1e85312606dae86901", "changes": 10, "status": "modified", "deletions": 2, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/table/RowData.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add", "patch": "@@ -93,8 +93,14 @@ public int getCurrentRowSpan()\n   public void setCurrentRowSpan(int rowSpan)\n   {\n \n-\tboolean assertEnabled = false;\n-\tassert assertEnabled = true;\n+    // -= Simon Lessard =-\n+    //    I really dislike to see assert used like that. It's much like\n+    //    #ifdef __DEBUG, but it has a performance cost as well since \n+    //    assertEnabled get instanciated for nothing and this add one \n+    //    if to the coding path. This basically break the purpose of \n+    //    the assert to not polute the execution when not enabled.\n+    boolean assertEnabled = false;\n+    assert assertEnabled = true;\n \n     if (rowSpan < 0)\n     {", "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/table/RowData.java"}, {"additions": 5, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/table/SelectionColumnRenderer.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/table/SelectionColumnRenderer.java", "sha": "d1de77e8e7a9c9ff9e8d51a48cc2015017fa8bb0", "changes": 7, "status": "modified", "deletions": 2, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/table/SelectionColumnRenderer.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add", "patch": "@@ -27,6 +27,7 @@\n public class SelectionColumnRenderer extends SpecialColumnRenderer\n {\n \n+  @Override\n   protected void renderKids(FacesContext          context,\n                             RenderingContext   arc,\n                             TableRenderingContext trc,\n@@ -40,7 +41,7 @@ protected void renderKids(FacesContext          context,\n                      : _singleRenderer);\n   }\n   \n-\n+  @Override\n   protected String getHeaderText(FacesBean bean)\n   {\n     RenderingContext arc = RenderingContext.getCurrentInstance();\n@@ -54,17 +55,19 @@ protected String getHeaderText(FacesBean bean)\n     return arc.getTranslatedString(key);\n   }  \n \n+  @Override\n   protected boolean getNoWrap(FacesBean bean)\n   {\n     return false;\n   }\n \n-\n+  @Override\n   protected String getFormatType(FacesBean bean)\n   {\n     return CoreColumn.ALIGN_CENTER;\n   }\n \n+  @Override\n   protected String getHeaderStyleClass(TableRenderingContext tContext)\n   {\n     return XhtmlConstants.AF_COLUMN_HEADER_ICON_STYLE;", "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/table/SelectionColumnRenderer.java"}, {"additions": 5, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/table/SpecialColumnRenderer.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/table/SpecialColumnRenderer.java", "sha": "af5285b2c119bbbb561fd454918180f8ba660778", "changes": 7, "status": "modified", "deletions": 2, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/table/SpecialColumnRenderer.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add", "patch": "@@ -36,23 +36,25 @@ public UIComponent getSpecialColumn()\n     return _specialColumn;\n   }\n \n+  @Override\n   protected boolean getHeaderNoWrap(FacesBean bean)\n   {\n     return true;\n   }\n \n-\n+  @Override\n   protected boolean getSortable(FacesBean bean)\n   {\n     return false;\n   }\n \n-\n+  @Override\n   protected String getSortProperty(FacesBean bean)\n   {\n     return null;\n   }\n \n+  @Override\n   protected String getHeaderInlineStyle(RenderingContext arc)\n   {\n     if (XhtmlRenderer.isIE(arc))\n@@ -61,6 +63,7 @@ protected String getHeaderInlineStyle(RenderingContext arc)\n     return null;\n   }\n   \n+  @Override\n   protected boolean isSpecialColumn()\n   {\n     return true;", "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/table/SpecialColumnRenderer.java"}, {"additions": 13, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/table/TableRenderingContext.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/table/TableRenderingContext.java", "sha": "3211fe11ef0ce593059772b821fe7d9c4089eda3", "changes": 24, "status": "modified", "deletions": 11, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/table/TableRenderingContext.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add", "patch": "@@ -41,7 +41,7 @@\n {\n   static public TableRenderingContext getCurrentInstance()\n   {\n-    return (TableRenderingContext) _CURRENT_CONTEXT.get();\n+    return _CURRENT_CONTEXT.get();\n   }\n \n   public TableRenderingContext(\n@@ -219,7 +219,8 @@ public final CollectionComponent getCollectionComponent()\n    * Gets the selection state for this table.\n    * This is overwritten in HGridRenderingContext\n    */\n-  public RowKeySet getSelectedRowKeys()\n+  @SuppressWarnings(\"unchecked\")\n+  public RowKeySet<Object> getSelectedRowKeys()\n   {\n     return ((UIXTable) getCollectionComponent()).getSelectedRowKeys();\n   }\n@@ -494,14 +495,15 @@ static private Boolean _toBoolean(Object value, boolean defaultValue)\n     }\n   }\n \n+  @SuppressWarnings(\"unchecked\")\n   private void _gatherChildInformation(\n     UIComponent      parent)\n   {\n-    List children = parent.getChildren();\n+    List<UIComponent> children = parent.getChildren();\n     int count = children.size();\n     for (int index = 0; index < count; index++)\n     {\n-      UIComponent child = (UIComponent) children.get(index);\n+      UIComponent child = children.get(index);\n \n       if (!child.isRendered())\n       {\n@@ -517,8 +519,7 @@ private void _gatherChildInformation(\n \n   public static boolean isInsideContentOfTable()\n   {\n-    TableRenderingContext tContext =\n-      (TableRenderingContext) _CURRENT_CONTEXT.get();\n+    TableRenderingContext tContext = _CURRENT_CONTEXT.get();\n \n     if (tContext == null)\n       return false;\n@@ -533,7 +534,7 @@ public static boolean isInsideContentOfTable()\n    */\n   public final Object getTableProperty(Object key)\n   {\n-    Map props = _tableProps;\n+    Map<Object, Object> props = _tableProps;\n     return (props == null) ? null : props.get(key);\n   }\n \n@@ -545,10 +546,10 @@ public final Object getTableProperty(Object key)\n    */\n   public final Object setTableProperty(Object key, Object value)\n   {\n-    Map props = _tableProps;\n+    Map<Object, Object> props = _tableProps;\n     if (props == null)\n     {\n-      props = new HashMap(5);\n+      props = new HashMap<Object, Object>(5);\n       _tableProps = props;\n     }\n     return props.put(key, value);\n@@ -590,7 +591,7 @@ public final Object setTableProperty(Object key, Object value)\n \n   // this is a map of properties that are local to this table. This is to\n   // support nested tables:\n-  private Map _tableProps = null;\n+  private Map<Object, Object> _tableProps = null;\n \n \n   // general fields\n@@ -603,5 +604,6 @@ public final Object setTableProperty(Object key, Object value)\n   public static final int DONT_KNOW = -1;\n \n \n-  static private final ThreadLocal _CURRENT_CONTEXT = new ThreadLocal();\n+  static private final ThreadLocal<TableRenderingContext> _CURRENT_CONTEXT = \n+    new ThreadLocal<TableRenderingContext>();\n }", "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/table/TableRenderingContext.java"}, {"additions": 24, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/table/TableSelectManyRenderer.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/table/TableSelectManyRenderer.java", "sha": "52b5c27256338c18325e19212e9897ee5135d23c", "changes": 41, "status": "modified", "deletions": 17, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/table/TableSelectManyRenderer.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add", "patch": "@@ -18,7 +18,6 @@\n import java.io.IOException;\n \n import java.util.HashMap;\n-import java.util.Iterator;\n import java.util.Map;\n \n import javax.faces.component.NamingContainer;\n@@ -53,6 +52,8 @@ public TableSelectManyRenderer()\n   //\n   // Decode\n   //\n+  @SuppressWarnings(\"unchecked\")\n+  @Override\n   public void decode(FacesContext context, UIComponent component)\n   {\n     UIXCollection table = (UIXCollection) component;\n@@ -61,9 +62,10 @@ public void decode(FacesContext context, UIComponent component)\n     table.setRowIndex(-1);\n     String tableId = table.getClientId(context);\n \n-    Map parameters =  context.getExternalContext().getRequestParameterValuesMap();\n+    Map<String, String[]> parameters = \n+      context.getExternalContext().getRequestParameterValuesMap();\n \n-    String[] unselectedBoxes = (String[])\n+    String[] unselectedBoxes = \n       parameters.get(tableId+NamingContainer.SEPARATOR_CHAR+UNSELECTED_KEY);\n \n     // check to see if there were any selection boxes in the request.\n@@ -72,11 +74,11 @@ public void decode(FacesContext context, UIComponent component)\n     if ((unselectedBoxes == null) || (unselectedBoxes.length == 0))\n       return;\n \n-    String[] selectedBoxes = (String[])\n+    String[] selectedBoxes = \n       parameters.get(tableId+NamingContainer.SEPARATOR_CHAR+SELECTED_KEY);\n \n     // must work with both table and hgrid:\n-    final RowKeySet selectionModel;\n+    final RowKeySet<Object> selectionModel;\n     if (table instanceof UIXTable)\n       selectionModel = ((UIXTable) table).getSelectedRowKeys();\n     else\n@@ -100,9 +102,9 @@ public void decode(FacesContext context, UIComponent component)\n //      // have clicked select-all and then deselected some rows before submitting:\n //    }\n \n-    RowKeySet selectedDelta = selectionModel.clone();\n+    RowKeySet<Object> selectedDelta = selectionModel.clone();\n     selectedDelta.clear();\n-    RowKeySet unselectedDelta = selectedDelta.clone();\n+    RowKeySet<Object> unselectedDelta = selectedDelta.clone();\n \n     _setDeltas(table, selectedBoxes, unselectedBoxes,\n                selectionModel, selectedDelta, unselectedDelta);\n@@ -117,11 +119,12 @@ public void decode(FacesContext context, UIComponent component)\n \n   private void _setDeltas(UIXCollection table,\n                           String[] selectedBoxes, String[] unselectedBoxes,\n-                          RowKeySet current,\n-                          RowKeySet selectedDelta,\n-                          RowKeySet unselectedDelta)\n+                          RowKeySet<Object> current,\n+                          RowKeySet<Object> selectedDelta,\n+                          RowKeySet<Object> unselectedDelta)\n   {\n-    Map deltas = new HashMap(unselectedBoxes.length);\n+    Map<String, Boolean> deltas = \n+      new HashMap<String, Boolean>(unselectedBoxes.length);\n     for(int i=0; i< unselectedBoxes.length; i++)\n     {\n       String currencyStr = unselectedBoxes[i];\n@@ -137,10 +140,9 @@ private void _setDeltas(UIXCollection table,\n       }\n     }\n \n-    for(Iterator entries=deltas.entrySet().iterator(); entries.hasNext();)\n+    for(Map.Entry<String, Boolean> entry : deltas.entrySet())\n     {\n-      Map.Entry entry = (Map.Entry) entries.next();\n-      String currencyStr = (String) entry.getKey();\n+      String currencyStr = entry.getKey();\n       boolean select = (Boolean.TRUE == entry.getValue());\n       table.setCurrencyString(currencyStr);\n \n@@ -164,11 +166,13 @@ else if (current.remove())\n     }\n   }\n \n+  @Override\n   protected CoreRenderer createCellRenderer(FacesBean.Type type)\n   {\n     return new Checkbox(type);\n   }\n \n+  @Override\n   protected boolean isSelectOne()\n   {\n     return false;\n@@ -204,7 +208,7 @@ public static void renderScripts(\n       arc.getFormData().addNeededValue(selectedModeName);\n   }\n \n-\n+  @Override\n   protected void renderCellContent(\n     FacesContext          context,\n     RenderingContext   arc,\n@@ -245,6 +249,7 @@ public Checkbox(FacesBean.Type type)\n       super(type);\n     }\n \n+    @Override\n     protected void renderId(\n       FacesContext context,\n       UIComponent  component) throws IOException\n@@ -264,20 +269,22 @@ protected void renderId(\n \n     }\n \n-\n+    @Override\n     protected Object getType()\n     {\n       return \"checkbox\";\n     }\n \n-\n+    @Override\n     protected String getDefaultShortDescKey()\n     {\n       return \"af_tableSelectMany.SELECT_COLUMN_HEADER\";\n     }\n   }\n \n   private static final Object _JS_RENDERED_KEY = new Object();\n+  // -= Simon Lessard =- nothing is logge in this class as of 2006-08-03\n+  @SuppressWarnings(\"unused\")\n   private static final TrinidadLogger _LOG =\n     TrinidadLogger.createTrinidadLogger(TableSelectManyRenderer.class);\n }", "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/table/TableSelectManyRenderer.java"}, {"additions": 29, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/table/TableSelectOneRenderer.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/table/TableSelectOneRenderer.java", "sha": "bc09e8049857bf8fdc483d33817a01b173ebabf5", "changes": 36, "status": "modified", "deletions": 7, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/table/TableSelectOneRenderer.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add", "patch": "@@ -49,6 +49,7 @@ public TableSelectOneRenderer()\n     super(CoreTable.TYPE);\n   }\n \n+  @Override\n   protected void findTypeConstants(FacesBean.Type type)\n   {\n     super.findTypeConstants(type);\n@@ -58,6 +59,8 @@ protected void findTypeConstants(FacesBean.Type type)\n   //\n   // Decode\n   //\n+  @SuppressWarnings(\"unchecked\")\n+  @Override\n   public void decode(FacesContext context, UIComponent component)\n   {\n     UIXCollection table = (UIXCollection) component;\n@@ -70,14 +73,16 @@ public void decode(FacesContext context, UIComponent component)\n \n       String selectionParam = __getSelectionParameterName(context, table);\n \n-      Map parameters =  context.getExternalContext().getRequestParameterMap();\n+      Map<String, String> parameters =  \n+        context.getExternalContext().getRequestParameterMap();\n+      \n       _LOG.finest(\"Params:{0}\", parameters);\n \n-      String selection = (String) parameters.get(selectionParam);\n+      String selection = parameters.get(selectionParam);\n \n       if (selection != null)\n       {\n-        final RowKeySet state;\n+        final RowKeySet<Object> state;\n         if (table instanceof UIXTable)\n           state = ((UIXTable) table).getSelectedRowKeys();\n         else\n@@ -86,14 +91,14 @@ public void decode(FacesContext context, UIComponent component)\n         table.setCurrencyString(selection);\n         if (!state.isContained())\n         {\n-          RowKeySet unselected = state.clone();\n+          RowKeySet<Object> unselected = state.clone();\n           // TODO : do not mutate the selectedRowKeys here.\n           // instead, mutate when event is broadcast:\n           state.clear();\n           state.add();\n           // clone, so that subsequent mutations of \"state\" will\n           // not affect the parameters of this event: bug 4733858:\n-          RowKeySet selected = state.clone();\n+          RowKeySet<Object> selected = state.clone();\n           FacesEvent event = new SelectionEvent(table, unselected, selected);\n           event.queue();\n         }\n@@ -109,11 +114,13 @@ public void decode(FacesContext context, UIComponent component)\n   //\n   // Encode\n   //\n+  @Override\n   public boolean getRendersChildren()\n   {\n     return true;\n   }\n \n+  @Override\n   protected void encodeAll(\n     FacesContext        context,\n     RenderingContext arc,\n@@ -188,6 +195,7 @@ public Radio(FacesBean.Type type)\n       super(type);\n     }\n \n+    @Override\n     protected String getCompositeId(String clientId)\n     {\n       return null;\n@@ -196,18 +204,21 @@ protected String getCompositeId(String clientId)\n     /**\n      * we do not want to render the simple span for the checkbox.\n      */\n+    @Override\n     protected boolean getRenderSimpleSpan(FacesBean bean)\n     {\n       return false;\n     }\n     /**\n      * don't render a special content style class on the radio.\n      */\n+    @Override\n     protected String getContentStyleClass(FacesBean bean)\n     {\n      return null;\n     }\n \n+    @Override\n     protected void renderId(\n       FacesContext context,\n       UIComponent  component) throws IOException\n@@ -225,6 +236,7 @@ protected void renderId(\n         writer.writeAttribute(\"id\", getClientId(context, component), null);\n     }\n \n+    @Override\n     protected Object getSubmittedValue(FacesBean bean)\n     {\n       TableRenderingContext tContext =\n@@ -233,12 +245,13 @@ protected Object getSubmittedValue(FacesBean bean)\n         Boolean.TRUE : Boolean.FALSE;\n     }\n \n+    @Override\n     protected Object getType()\n     {\n       return \"radio\";\n     }\n \n-\n+    @Override\n     protected Object getValueAttr(RenderingContext arc)\n     {\n       TableRenderingContext tContext =\n@@ -247,7 +260,7 @@ protected Object getValueAttr(RenderingContext arc)\n                 getCurrencyString();\n     }\n \n-\n+    @Override\n     protected String getShortDesc(FacesBean bean)\n     {\n       String key = getDefaultShortDescKey();\n@@ -260,28 +273,33 @@ protected String getDefaultShortDescKey()\n       return \"af_tableSelectOne.SELECT_COLUMN_HEADER\";\n     }\n \n+    @Override\n     protected char getAccessKey(FacesBean bean)\n     {\n       return CHAR_UNDEFINED;\n     }\n \n+    @Override\n     protected boolean isAutoSubmit(FacesBean bean)\n     {\n       return false;\n     }\n \n+    @Override\n     protected boolean isImmediate(FacesBean bean)\n     {\n       TableRenderingContext tContext =\n         TableRenderingContext.getCurrentInstance();\n       return tContext.isImmediate();\n     }\n \n+    @Override\n     protected boolean getReadOnly(FacesContext context, FacesBean bean)\n     {\n       return false;\n     }\n \n+    @Override\n     protected boolean getDisabled(FacesBean bean)\n     {\n       return false;\n@@ -290,6 +308,7 @@ protected boolean getDisabled(FacesBean bean)\n     /**\n      * @todo Support?\n      */\n+    @Override\n     protected String getOnblur(FacesBean bean)\n     {\n       return null;\n@@ -298,11 +317,13 @@ protected String getOnblur(FacesBean bean)\n     /**\n      * @todo Support?\n      */\n+    @Override\n     protected String getOnfocus(FacesBean bean)\n     {\n       return null;\n     }\n \n+    @Override\n     protected String getOnchange(FacesBean bean)\n     {\n       return null;\n@@ -313,6 +334,7 @@ protected String getOnselect(FacesBean bean)\n       return null;\n     }\n \n+    @Override\n     protected String getText(FacesBean bean)\n     {\n       return null;", "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/table/TableSelectOneRenderer.java"}, {"additions": 3, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/table/TreeNodeColumnRenderer.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/table/TreeNodeColumnRenderer.java", "sha": "6bf5f541e1518ddc3e88434e3509a6f942750ccf", "changes": 5, "status": "modified", "deletions": 2, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/table/TreeNodeColumnRenderer.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add", "patch": "@@ -34,7 +34,8 @@\n \n public class TreeNodeColumnRenderer extends ColumnRenderer\n {\n-\n+  @SuppressWarnings(\"unchecked\")\n+  @Override\n   protected void renderKids(FacesContext          context,\n                             RenderingContext   arc,\n                             TableRenderingContext tContext,\n@@ -47,7 +48,7 @@ protected void renderKids(FacesContext          context,\n     final String onclick;\n     if (hGrid.isContainer())\n     {\n-      RowKeySet treeState = hGrid.getDisclosedRowKeys();\n+      RowKeySet<Object> treeState = hGrid.getDisclosedRowKeys();\n       String jsVarName = ttrc.getJSVarName();\n       if (treeState.isContained())\n       {", "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/table/TreeNodeColumnRenderer.java"}, {"additions": 2, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/table/TreeTableNavRenderer.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/table/TreeTableNavRenderer.java", "sha": "56304447740d1dcfa0e11f55e9cc9c9a4cc8e26c", "changes": 2, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/table/TreeTableNavRenderer.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add", "patch": "@@ -40,13 +40,15 @@ public TreeTableNavRenderer(boolean isTop)\n     _isTop = isTop;\n   }\n \n+  @Override\n   public boolean getRendersChildren()\n   {\n     // we don't take any children. however, return true so that\n     // encodeAll is called:\n     return true;\n   }\n \n+  @Override\n   protected void encodeAll(\n     FacesContext        context,\n     RenderingContext arc,", "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/table/TreeTableNavRenderer.java"}, {"additions": 5, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/table/TreeTableRenderingContext.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/table/TreeTableRenderingContext.java", "sha": "d1ce24bdd31a471a69d62b8ff3d4aa08d472105a", "changes": 6, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/table/TreeTableRenderingContext.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add", "patch": "@@ -87,7 +87,9 @@ public TreeTableRenderingContext(\n    * Gets the selection state for this table.\n    * This is overwritten in HGridRenderingContext\n    */\n-  public RowKeySet getSelectedRowKeys()\n+  @SuppressWarnings(\"unchecked\")\n+  @Override\n+  public RowKeySet<Object> getSelectedRowKeys()\n   {\n     return ((UIXTree) getCollectionComponent()).getSelectedRowKeys();\n   }\n@@ -142,6 +144,7 @@ public boolean isFocusColumnVisible()\n    * Get the actual column count, taking selection,  focus\n    * and object-hierarchy columns into account.\n    */\n+  @Override\n   public int getSpecialColumnCount()\n   {\n     // we need to add one for the object hierarchy column and possibly another\n@@ -153,6 +156,7 @@ public int getSpecialColumnCount()\n   /**\n    * @return null. HGrids cannot have detail-disclosure.\n    */\n+  @Override\n   public UIComponent getDetail()\n   {\n     return null;", "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/table/TreeTableRenderingContext.java"}, {"additions": 18, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/table/TreeUtils.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/table/TreeUtils.java", "sha": "5d355dfef005e5f04d63f03550ea01e61e6a8e5b", "changes": 30, "status": "modified", "deletions": 12, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/table/TreeUtils.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add", "patch": "@@ -193,22 +193,23 @@ public static String callJSSelectAll(String jsVarName, boolean isSelectAll)\n     return jsVarName+\".multiSelect(\"+(isSelectAll ? \"true\" : \"false\")+\")\";\n   }\n \n-  public static void decodeGotoEvent(final Map parameters,\n+  public static void decodeGotoEvent(final Map<String, String> parameters,\n                                      UIComponent tree)\n   {\n     Object event = parameters.get(EVENT_PARAM);\n     if (_GOTO.equals(event))\n     {\n       PreserveState preserve = new PreserveState()\n       {\n+        @Override\n         protected void process(UIXHierarchy tree)\n         {\n           final int newStart;\n-          String startParam = (String) parameters.get(_START_PARAM);\n+          String startParam = parameters.get(_START_PARAM);\n           if ((startParam == null) || (\"\".equals(startParam)))\n           {\n             // this must be a root level range change:\n-            startParam = (String) parameters.get(XhtmlConstants.VALUE_PARAM);\n+            startParam = parameters.get(XhtmlConstants.VALUE_PARAM);\n             newStart = Integer.parseInt(startParam) - 1; // value is based at one.\n             tree.setRowKey(tree.getFocusRowKey());\n             tree.setRowIndex(newStart);\n@@ -228,14 +229,15 @@ protected void process(UIXHierarchy tree)\n     }\n   }\n \n-  public static void decodeFocusEvent(final Map parameters,\n+  public static void decodeFocusEvent(final Map<String, String> parameters,\n                                       UIComponent tree)\n   {\n     Object event = parameters.get(EVENT_PARAM);\n     if (_FOCUS.equals(event))\n     {\n       PreserveState preserve = new PreserveState()\n       {\n+        @Override\n         protected void process(UIXHierarchy tree)\n         {\n           _restorePathFromParam(parameters, tree);\n@@ -246,7 +248,7 @@ protected void process(UIXHierarchy tree)\n     }\n   }\n \n-  public static void decodeExpandEvents(final Map parameters,\n+  public static void decodeExpandEvents(final Map<String, String> parameters,\n                                         final UIComponent tree,\n                                         final Object focusRowKey)\n   {\n@@ -267,6 +269,7 @@ else if (_SHOW.equals(event))\n \n     PreserveState preserve = new PreserveState()\n     {\n+      @Override\n       protected void process(UIXHierarchy tree)\n       {\n         final FacesEvent event;\n@@ -283,8 +286,8 @@ protected void process(UIXHierarchy tree)\n           else\n           {\n             tree.setRowKey(focusRowKey);\n-            RowKeySet old = _getExpandedRowKeys(tree);\n-            RowKeySet newset = old.clone();\n+            RowKeySet<Object> old = _getExpandedRowKeys(tree);\n+            RowKeySet<Object> newset = old.clone();\n             if (expand)\n               newset.addAll();\n             else\n@@ -295,8 +298,8 @@ protected void process(UIXHierarchy tree)\n         else  // expand/collapse event\n         {\n           _restorePathFromParam(parameters, tree);\n-          RowKeySet old = _getExpandedRowKeys(tree);\n-          RowKeySet newset = old.clone();\n+          RowKeySet<Object> old = _getExpandedRowKeys(tree);\n+          RowKeySet<Object> newset = old.clone();\n           newset.setContained(expand);\n           event = new RowDisclosureEvent(old, newset, tree);\n         }\n@@ -307,7 +310,8 @@ protected void process(UIXHierarchy tree)\n     preserve.run((UIXHierarchy) tree);\n   }\n \n-  private static RowKeySet _getExpandedRowKeys(UIXHierarchy tree)\n+  @SuppressWarnings(\"unchecked\")\n+  private static RowKeySet<Object> _getExpandedRowKeys(UIXHierarchy tree)\n   {\n     if (tree instanceof UIXTree)\n       return ((UIXTree) tree).getDisclosedRowKeys();\n@@ -318,9 +322,11 @@ private static RowKeySet _getExpandedRowKeys(UIXHierarchy tree)\n     throw new IllegalArgumentException(\"Don't know how to get disclosedRowKeys from:\"+tree);\n   }\n \n-  private static void _restorePathFromParam(Map parameters, UIXHierarchy tree)\n+  private static void _restorePathFromParam(\n+      Map<String, String> parameters, \n+      UIXHierarchy tree)\n   {\n-    String currencyString = (String) parameters.get(_PATH_PARAM);\n+    String currencyString = parameters.get(_PATH_PARAM);\n     tree.setCurrencyString(currencyString);\n   }\n ", "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/core/xhtml/table/TreeUtils.java"}, {"additions": 1, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/html/DontRenderChildrenRenderer.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/html/DontRenderChildrenRenderer.java", "sha": "1eeab1418f414ba41a5db80bc782c7f8ac17cfed", "changes": 1, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/html/DontRenderChildrenRenderer.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add", "patch": "@@ -22,6 +22,7 @@\n  */\n public class DontRenderChildrenRenderer extends UINodeRendererBase\n {\n+  @Override\n   public boolean getRendersChildren()\n   {\n     return false;", "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/html/DontRenderChildrenRenderer.java"}, {"additions": 10, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/html/layout/CorePanelAccordionRenderer.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/html/layout/CorePanelAccordionRenderer.java", "sha": "ff165b82bce6a6666f9ee260f6130acf6f5918d1", "changes": 15, "status": "modified", "deletions": 5, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/html/layout/CorePanelAccordionRenderer.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add", "patch": "@@ -55,18 +55,20 @@\n    * @param component the UIComponent object\n    * @throws IOException when some issues while writing output\n    */\n+  @SuppressWarnings(\"unchecked\")\n+  @Override\n   public void encodeBegin(FacesContext context, UIComponent component)\n     throws IOException\n   {\n     _LOG.finer(\"Entering CorePanelAccordionRenderer.encodeBegin()\");\n-    List children = component.getChildren();\n+    List<UIComponent> children = component.getChildren();\n     int numChildren = children.size();\n     UIComponent disclosedChild = null;\n     UIXShowDetail renderableChild = null;\n \n     for (int indxChild = 0; indxChild < numChildren ; indxChild++ )\n     {\n-      UIComponent child =  (UIComponent) children.get(indxChild);\n+      UIComponent child =  children.get(indxChild);\n       if (! (child instanceof UIXShowDetail) )\n       {\n         continue;\n@@ -125,6 +127,8 @@ public void encodeBegin(FacesContext context, UIComponent component)\n    * @param component the UIComponent object\n    * @throws IOException when some issues while writing output\n    */\n+  @SuppressWarnings(\"unchecked\")\n+  @Override\n   public void encodeChildren(FacesContext context, UIComponent component)\n     throws IOException\n   {\n@@ -135,7 +139,7 @@ public void encodeChildren(FacesContext context, UIComponent component)\n \n     ResponseWriter out = context.getResponseWriter();\n \n-    ListIterator iter = component.getChildren().listIterator();\n+    ListIterator<UIComponent> iter = component.getChildren().listIterator();\n \n     if (iter == null)\n     {\n@@ -343,6 +347,7 @@ else if (disclosed)\n    * @param component the UIComponent object\n    * @throws IOException when some issues while writing output\n    */\n+  @Override\n   public void encodeEnd(FacesContext context,\n                         UIComponent component)\n     throws IOException\n@@ -524,9 +529,9 @@ private boolean _isDiscloseMany(UIComponent component)\n     return discloseNone;\n   }\n \n-  private UIXShowDetail _getNextShowDetailChild(ListIterator iter)\n+  private UIXShowDetail _getNextShowDetailChild(ListIterator<UIComponent> iter)\n   {\n-    UIComponent child = (UIComponent)iter.next();\n+    UIComponent child = iter.next();\n     if (! child.isRendered() )\n     {\n       return null;", "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/html/layout/CorePanelAccordionRenderer.java"}, {"additions": 6, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/html/layout/CorePanelChoiceRenderer.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bd1409866ad7925142a2a525f9f780fbb08f3add/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/html/layout/CorePanelChoiceRenderer.java", "sha": "c64f099fe175b0a9544eec5844095ee3dfa69057", "changes": 8, "status": "modified", "deletions": 2, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/html/layout/CorePanelChoiceRenderer.java?ref=bd1409866ad7925142a2a525f9f780fbb08f3add", "patch": "@@ -45,6 +45,7 @@\n   /**\n    *  {@inheritDoc}\n    */\n+  @Override\n   protected void writeAdditionalJS(FacesContext context,\n                                    UIComponent component)\n     throws IOException\n@@ -108,6 +109,7 @@ protected void writeAdditionalJS(FacesContext context,\n    * @inheritDoc\n    *\n    */\n+  @Override\n   protected void renderListDisplay(FacesContext context,\n                                    UIComponent component,\n                                    String disclosedChildId)\n@@ -152,6 +154,7 @@ protected void renderListDisplay(FacesContext context,\n   /**\n    *  {@inheritDoc}\n    */\n+  @Override\n   protected String getHTMLControlID(String compId)\n   {\n     return compId + _CHOICE_SELECT_SUFFIX_ID_CONST;\n@@ -162,6 +165,7 @@ protected String getHTMLControlID(String compId)\n    *\n    *  The select control markup is contained within a TD element.\n    */\n+  @SuppressWarnings(\"unchecked\")\n   private void _renderSelectItemInTD(FacesContext context,\n                                      UIComponent component,\n                                      String disclosedChildId)\n@@ -190,10 +194,10 @@ private void _renderSelectItemInTD(FacesContext context,\n \n     URLEncoder encoder = rCtx.getURLEncoder();\n     // Render options now.\n-    ListIterator children = component.getChildren().listIterator();\n+    ListIterator<UIComponent> children = component.getChildren().listIterator();\n     while (children.hasNext())\n     {\n-      UIComponent child = (UIComponent) children.next();\n+      UIComponent child = children.next();\n       if (child instanceof UIXShowDetail)\n       {\n         UIXShowDetail detailItem = (UIXShowDetail) child;", "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/renderkit/html/layout/CorePanelChoiceRenderer.java"}], "repo": "myfaces-trinidad"}, {"commit": "https://github.com/apache/myfaces-trinidad/commit/9379cb1722de7caec14c9981d098193d2f86b3bf", "parent": "https://github.com/apache/myfaces-trinidad/commit/1c80c15172d1eecea082703ede7dd2db5027be2e", "message": "TRINIDAD-2025 move _styleNodeToStyleMap to FileSystemStyleCache to take advantage of same entires on the higher, browser or version or platform layer\n1. PropertyNode is interning values that are likely duplicated in the css file. This checkin protects against a potential NPE in that new interning code if value is null.\n2. remove extra @duplicated tag in BaseStyle", "bug_id": "myfaces-trinidad_64", "file": [{"additions": 1, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/9379cb1722de7caec14c9981d098193d2f86b3bf/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/style/BaseStyle.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/9379cb1722de7caec14c9981d098193d2f86b3bf/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/style/BaseStyle.java", "sha": "1e860d130501673a72d5b758fee3a12547133c1f", "changes": 1, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/style/BaseStyle.java?ref=9379cb1722de7caec14c9981d098193d2f86b3bf", "patch": "@@ -31,6 +31,7 @@\n  * the un-used image generation code.\n  * TODO Then remove CoreStyle and implement the public Style object instead.\n  * @deprecated\n+ * @deprecated\n  * @version $Name:  $ ($Revision: adfrt/faces/adf-faces-impl/src/main/java/oracle/adfinternal/view/faces/style/BaseStyle.java#0 $) $Date: 10-nov-2005.18:57:54 $\n  */\n abstract public class BaseStyle extends CoreStyle implements Serializable ", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/style/BaseStyle.java"}, {"additions": 12, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/9379cb1722de7caec14c9981d098193d2f86b3bf/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/style/xml/parse/PropertyNode.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/9379cb1722de7caec14c9981d098193d2f86b3bf/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/style/xml/parse/PropertyNode.java", "sha": "367232b09afaf98d76bfaa13f812ccdf10cf91ae", "changes": 21, "status": "modified", "deletions": 9, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/style/xml/parse/PropertyNode.java?ref=9379cb1722de7caec14c9981d098193d2f86b3bf", "patch": "@@ -48,17 +48,20 @@ public PropertyNode(String name, String value)\n       // This will improve the memory used.\n       _name = name.intern();\n      \n-      if (_INTERN_VALUES_FOR.contains(name))\n+      if (value != null)\n       {\n-        value = value.intern();\n-      }\n-      else\n-      {\n-        String internedValue =  _INTERNED_VALUES.get(value);\n-       \n-        if (internedValue != null)\n+        if (_INTERN_VALUES_FOR.contains(name))\n+        {\n+          value = value.intern();\n+        }\n+        else\n         {\n-          value = internedValue;\n+          String internedValue =  _INTERNED_VALUES.get(value);\n+         \n+          if (internedValue != null)\n+          {\n+            value = internedValue;\n+          }\n         }\n       }\n      ", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/style/xml/parse/PropertyNode.java"}], "repo": "myfaces-trinidad"}, {"commit": "https://github.com/apache/myfaces-trinidad/commit/52b1a8ff142e03537071cbb481314472856bb4e7", "parent": "https://github.com/apache/myfaces-trinidad/commit/08bf076d40c39025998d62f8e2056f4b08e17ae0", "message": "TRINIDAD-1629 ResourceServlet.java._setHeaders() can call response.setContentType() with a null contentType resulting in an NPE on Websphere.\nThanks to Gary Kind.\nThe _setHeaders method was changed to check for more cases and to check for null and log a warning.", "bug_id": "myfaces-trinidad_65", "file": [{"additions": 33, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/52b1a8ff142e03537071cbb481314472856bb4e7/trinidad-api/src/main/java/org/apache/myfaces/trinidad/webapp/ResourceServlet.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/52b1a8ff142e03537071cbb481314472856bb4e7/trinidad-api/src/main/java/org/apache/myfaces/trinidad/webapp/ResourceServlet.java", "sha": "65082cf5c5d9f4708807eb78bbc8a3dea868eea3", "changes": 43, "status": "modified", "deletions": 10, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-api/src/main/java/org/apache/myfaces/trinidad/webapp/ResourceServlet.java?ref=52b1a8ff142e03537071cbb481314472856bb4e7", "patch": "@@ -418,24 +418,47 @@ private void _setHeaders(\n     URLConnection       connection,\n     HttpServletResponse response)\n   {\n-    String contentType = connection.getContentType();\n+    String resourcePath;\n+    URL    url;\n+    String contentType  = connection.getContentType();\n+\n     if (contentType == null || \"content/unknown\".equals(contentType))\n     {\n-      URL url = connection.getURL();\n-      String resourcePath = url.getPath();\n-      if(resourcePath.endsWith(\".css\"))\n+      url = connection.getURL();\n+      resourcePath = url.getPath();\n+\n+      // 'Case' statement for unknown content types\n+      if (resourcePath.endsWith(\".css\"))\n         contentType = \"text/css\";\n-      else if(resourcePath.endsWith(\".js\"))\n+      else if (resourcePath.endsWith(\".js\"))\n         contentType = \"application/x-javascript\";\n+      else if (resourcePath.endsWith(\".cur\") || resourcePath.endsWith(\".ico\"))\n+        contentType = \"image/vnd.microsoft.icon\";\n       else\n         contentType = getServletContext().getMimeType(resourcePath);\n     }\n-    response.setContentType(contentType);\n-\n-    int contentLength = connection.getContentLength();\n-    if (contentLength >= 0)\n-      response.setContentLength(contentLength);\n+    \n+    if (contentType != null)\n+    {\n+      response.setContentType(contentType);    \n+      int contentLength = connection.getContentLength();\n \n+      if (contentLength >= 0)\n+        response.setContentLength(contentLength);\n+    }\n+    else\n+    {\n+      // The resource has an file extension we have not \n+      // included in the case statement above\n+      url = connection.getURL();\n+      resourcePath = url.getPath();\n+\n+      _LOG.warning(\"ResourceServlet._setHeaders(): \" +  \n+                   \"Content type for {0} is NULL!\\n\" +\n+                   \"Cause: Unknown file extension\",\n+                   resourcePath);\n+    } \n+    \n     long lastModified;\n     try\n     {", "filename": "trinidad-api/src/main/java/org/apache/myfaces/trinidad/webapp/ResourceServlet.java"}], "repo": "myfaces-trinidad"}, {"commit": "https://github.com/apache/myfaces-trinidad/commit/bb0b26e34d920683a0b918a54b02acdac7ed3ca1", "parent": "https://github.com/apache/myfaces-trinidad/commit/55acc3e4f544f508b213b40c837c1f77201e8c74", "message": "TRINIDAD-914 Selected and disclosed row key sets in UIXTableTemplate.java are assumed to be non-null\n\nAdded checks in UIXTableTemplate.createCollectionModel() for null selectedRowKeys and disclosedRowKeys before invoking methods on them respectively so that it will not throw any NPEs.", "bug_id": "myfaces-trinidad_66", "file": [{"additions": 12, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/bb0b26e34d920683a0b918a54b02acdac7ed3ca1/trinidad-api/src/main/java-templates/org/apache/myfaces/trinidad/component/UIXTableTemplate.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/bb0b26e34d920683a0b918a54b02acdac7ed3ca1/trinidad-api/src/main/java-templates/org/apache/myfaces/trinidad/component/UIXTableTemplate.java", "sha": "1cf65af36ccb1d24a20473c0d09a0100a32ae91d", "changes": 14, "status": "modified", "deletions": 2, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-api/src/main/java-templates/org/apache/myfaces/trinidad/component/UIXTableTemplate.java?ref=bb0b26e34d920683a0b918a54b02acdac7ed3ca1", "patch": "@@ -311,8 +311,18 @@ protected final CollectionModel createCollectionModel(\n   {\n     CollectionModel model = super.createCollectionModel(current, value); \n \n-    getSelectedRowKeys().setCollectionModel(model);\n-    getDisclosedRowKeys().setCollectionModel(model);\n+    RowKeySet selectedRowKeys = getSelectedRowKeys();\n+    RowKeySet disclosedRowKeys = getDisclosedRowKeys();\n+\n+    if (selectedRowKeys != null)\n+    {\n+      selectedRowKeys.setCollectionModel(model);\n+    }\n+\n+    if (disclosedRowKeys != null)\n+    {\n+      disclosedRowKeys.setCollectionModel(model);\n+    }\n \n     // If we were perviously sorted, restore the sort order:\n     if (_sortCriteria != null)", "filename": "trinidad-api/src/main/java-templates/org/apache/myfaces/trinidad/component/UIXTableTemplate.java"}], "repo": "myfaces-trinidad"}, {"commit": "https://github.com/apache/myfaces-trinidad/commit/4f4c88f255efd1e9b8152f3ddd20ada90a2c466c", "parent": "https://github.com/apache/myfaces-trinidad/commit/2e8df3c4bc078e4a88384ecc7d3105c033a165e8", "message": "TRINIDAD-914 Selected and disclosed row key sets in UIXTableTemplate.java are assumed to be non-null\n\nAdded checks in UIXTableTemplate.createCollectionModel() for null selectedRowKeys and disclosedRowKeys before invoking methods on them respectively so that it will not throw any NPEs.", "bug_id": "myfaces-trinidad_67", "file": [{"additions": 12, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/4f4c88f255efd1e9b8152f3ddd20ada90a2c466c/trinidad-api/src/main/java-templates/org/apache/myfaces/trinidad/component/UIXTableTemplate.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/4f4c88f255efd1e9b8152f3ddd20ada90a2c466c/trinidad-api/src/main/java-templates/org/apache/myfaces/trinidad/component/UIXTableTemplate.java", "sha": "1c84badc1a2d5b5c1b96d8b18ed97fcc4432fa80", "changes": 14, "status": "modified", "deletions": 2, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-api/src/main/java-templates/org/apache/myfaces/trinidad/component/UIXTableTemplate.java?ref=4f4c88f255efd1e9b8152f3ddd20ada90a2c466c", "patch": "@@ -286,8 +286,18 @@ protected final CollectionModel createCollectionModel(\n   {\n     CollectionModel model = super.createCollectionModel(current, value); \n \n-    getSelectedRowKeys().setCollectionModel(model);\n-    getDisclosedRowKeys().setCollectionModel(model);\n+    RowKeySet selectedRowKeys = getSelectedRowKeys();\n+    RowKeySet disclosedRowKeys = getDisclosedRowKeys();\n+\n+    if (selectedRowKeys != null)\n+    {\n+      selectedRowKeys.setCollectionModel(model);\n+    }\n+\n+    if (disclosedRowKeys != null)\n+    {\n+      disclosedRowKeys.setCollectionModel(model);\n+    }\n \n     // If we were perviously sorted, restore the sort order:\n     if (_sortCriteria != null)", "filename": "trinidad-api/src/main/java-templates/org/apache/myfaces/trinidad/component/UIXTableTemplate.java"}], "repo": "myfaces-trinidad"}, {"commit": "https://github.com/apache/myfaces-trinidad/commit/97bf201d82d58a30a19dc5b71daa6f67143d0613", "parent": "https://github.com/apache/myfaces-trinidad/commit/dc5f7eec1de30823e8d935fe79abe3fdbaec30df", "message": "ADFFACES-478\nhttps://issues.apache.org/jira/browse/ADFFACES-478\nservlet exception when browser is unknown because the Agent for unknown browser had null attributes. \nNow they have \"unknown\" String attributes so that we won't get NPEs when code uses the Agent's\nattribute values in comparisons.", "bug_id": "myfaces-trinidad_68", "file": [{"additions": 23, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/97bf201d82d58a30a19dc5b71daa6f67143d0613/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/agent/AgentFactoryImpl.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/97bf201d82d58a30a19dc5b71daa6f67143d0613/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/agent/AgentFactoryImpl.java", "sha": "1b83b5476e8ea6432cf5d740f6c66f22bc475ace", "changes": 37, "status": "modified", "deletions": 14, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/agent/AgentFactoryImpl.java?ref=97bf201d82d58a30a19dc5b71daa6f67143d0613", "patch": "@@ -49,6 +49,7 @@ public Agent createAgent(FacesContext facesContext)\n   {\n     AgentImpl agent = new AgentImpl();\n \n+    // Get the RequestHeaderMap to help populate the agent\n     Map<String, String> headerMap;\n     if (facesContext != null)\n     {\n@@ -60,12 +61,14 @@ public Agent createAgent(FacesContext facesContext)\n     }\n \n     //TODO: Add declarative and extensible means for populating AgentImpl object\n+    // the RequestHeaderMap helps populate the agent\n     _populateAgentImpl(headerMap, agent);\n \n     return agent;\n   }\n \n-\n+  // The headerMap is the RequestHeaderMap from the externalContext. It is \n+  // consulted to correctly populate the agent\n   private void _populateAgentImpl(Map<String, String> headerMap, AgentImpl agent)\n   {\n     \n@@ -90,7 +93,7 @@ private void _populateAgentImpl(Map<String, String> headerMap, AgentImpl agent)\n \n     if (userAgent == null)\n     {\n-      _populateNullAgentImpl(userAgent, agent);\n+      _populateUnknownAgentImpl(userAgent, agent);\n       return;\n     }\n     \n@@ -207,14 +210,20 @@ else if (userAgent.startsWith(\"Mozilla\"))\n         return;\n     }\n \n-    _populateNullAgentImpl(userAgent, agent);\n+    _populateUnknownAgentImpl(userAgent, agent);\n   }\n \n-  private void _populateNullAgentImpl(String userAgent, AgentImpl agent)\n+  private void _populateUnknownAgentImpl(String userAgent, AgentImpl agent)\n   {\n-    // Log warning message that we are setting the agent entry to null\n-    _LOG.warning(\"UNKNOWN_AGENT_ATTRIBUTES_CREATE_WITH_NULL\", userAgent);\n+    // Log warning message that we are setting the agent entry to unknown attributes\n+    _LOG.warning(\"UNKNOWN_AGENT_ATTRIBUTES_CREATE_WITH_UNKNOWN\", userAgent);\n     agent.setAgentEntryToNULL();\n+    agent.setAgent(_UNKNOWN);\n+    agent.setType(_UNKNOWN);\n+    agent.setAgentVersion(_UNKNOWN);\n+    agent.setPlatform(_UNKNOWN);\n+    agent.setPlatformVersion(_UNKNOWN);\n+    agent.setMakeModel(_UNKNOWN);\n   }\n \n   //populates the agent entry for DT access for either Telnet or PDA\n@@ -226,7 +235,7 @@ private void _populateJDevMobileAgentImpl(String agent,AgentImpl agentObj)\n     //the form of JDEVMobile user agent string will be:\n     //OracleJDevMobile_[PDA or ITS]/[version](DeviceName:[device name];[capability1]:[capability 1 value];...)\n \n-    boolean returnNullAgentObj = false;\n+    boolean returnUnknownAgentObj = false;\n     int itsIndex = agent.indexOf(\"ITS\");\n     int pdaIndex = agent.indexOf(\"PDA\");\n     int versionStartIndex = -1;\n@@ -235,19 +244,18 @@ private void _populateJDevMobileAgentImpl(String agent,AgentImpl agentObj)\n       agentObj.setType(Agent.TYPE_TELNET);\n       versionStartIndex = \"OracleJDevMobile_ITS\".length()+1;\n     }\n-    else\n-      if (pdaIndex > -1)\n+    else if (pdaIndex > -1)\n     {\n \n       agentObj.setType(Agent.TYPE_PDA);\n       versionStartIndex = \"OracleJDevMobile_PDA\".length()+1;\n     }\n     else\n     {\n-      returnNullAgentObj = true;\n+      returnUnknownAgentObj = true;\n     }\n     //Now find the name of the device\n-    if (!returnNullAgentObj){\n+    if (!returnUnknownAgentObj){\n       int versionEndIndex = agent.indexOf(\"(\");\n       String version = agent.substring(versionStartIndex,versionEndIndex);\n       agentObj.setAgentVersion(version);\n@@ -282,9 +290,9 @@ private void _populateJDevMobileAgentImpl(String agent,AgentImpl agentObj)\n         agentObj.__addRequestCapability(CapabilityKey.getCapabilityKey(capabilityName,true),capabilityValue);\n       }\n     }\n-    if (returnNullAgentObj)\n+    if (returnUnknownAgentObj)\n     {\n-      _populateNullAgentImpl(agent, agentObj);\n+      _populateUnknownAgentImpl(agent, agentObj);\n     }\n   }\n \n@@ -517,7 +525,7 @@ private void _populateIaswAgentImpl(String agent, String wirelessType,AgentImpl\n     // map device hint to agent type\n     if (wirelessType == null)\n     {\n-      _populateNullAgentImpl(agent, agentObj);\n+      _populateUnknownAgentImpl(agent, agentObj);\n       return;\n     }\n \n@@ -852,6 +860,7 @@ private String _getJavaOS(String base, int start)\n   }\n \n   static final private String _IASW_DEVICE_HINT_PARAM = \"X-Oracle-Device.Class\";\n+  static final private String _UNKNOWN = \"unknown\";\n   static final private TrinidadLogger _LOG = TrinidadLogger.createTrinidadLogger(AgentFactoryImpl.class);\n \n }", "filename": "trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/agent/AgentFactoryImpl.java"}, {"additions": 2, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/97bf201d82d58a30a19dc5b71daa6f67143d0613/trinidad-impl/src/main/xrts/org/apache/myfaces/trinidadinternal/resource/LoggerBundle.xrts", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/97bf201d82d58a30a19dc5b71daa6f67143d0613/trinidad-impl/src/main/xrts/org/apache/myfaces/trinidadinternal/resource/LoggerBundle.xrts", "sha": "0e774c67fbe95d9e394cd3e2bba00547a224937f", "changes": 4, "status": "modified", "deletions": 2, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad-impl/src/main/xrts/org/apache/myfaces/trinidadinternal/resource/LoggerBundle.xrts?ref=97bf201d82d58a30a19dc5b71daa6f67143d0613", "patch": "@@ -21,8 +21,8 @@\n <!DOCTYPE resources SYSTEM \"rts.dtd\">\r\n <resources xmlns=\"http://myfaces.apache.org/trinidad/rts\" package=\"org.apache.myfaces.trinidadinternal.resource\">\r\n \r\n-<!-- UNKNOWN_AGENT_ATTRIBUTES_CREATE_WITH_NULL -->\r\n-<resource key=\"UNKNOWN_AGENT_ATTRIBUTES_CREATE_WITH_NULL\">The User-Agent \"{0}\" is unknown; creating an agent with null agent attributes.</resource>\r\n+<!-- UNKNOWN_AGENT_ATTRIBUTES_CREATE_WITH_UNKNOWN -->\r\n+<resource key=\"UNKNOWN_AGENT_ATTRIBUTES_CREATE_WITH_UNKNOWN\">The User-Agent \"{0}\" is unknown; creating an agent with \"unknown\" agent attributes.</resource>\r\n \r\n <!-- UNKNOWN_AGENT_TYPE_CREATE_WITH_NULL -->\r\n <resource key=\"UNKNOWN_AGENT_TYPE_CREATE_WITH_NULL\">The agent type is unknown; creating an agent with null agent attributes.</resource>\r", "filename": "trinidad-impl/src/main/xrts/org/apache/myfaces/trinidadinternal/resource/LoggerBundle.xrts"}], "repo": "myfaces-trinidad"}, {"commit": "https://github.com/apache/myfaces-trinidad/commit/7d7b8c755bdfa30aa6d8047612b5e674c3f41a86", "parent": "https://github.com/apache/myfaces-trinidad/commit/29f01f702b4ca42a70b52f536adb0811542e1dc3", "message": "ADFFACES-478\nhttps://issues.apache.org/jira/browse/ADFFACES-478\nservlet exception when browser is unknown because the Agent for unknown browser had null attributes. \nNow they have \"unknown\" String attributes so that we won't get NPEs when code uses the Agent's\nattribute values in comparisons.", "bug_id": "myfaces-trinidad_69", "file": [{"additions": 23, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/7d7b8c755bdfa30aa6d8047612b5e674c3f41a86/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/agent/AgentFactoryImpl.java", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/7d7b8c755bdfa30aa6d8047612b5e674c3f41a86/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/agent/AgentFactoryImpl.java", "sha": "1b83b5476e8ea6432cf5d740f6c66f22bc475ace", "changes": 37, "status": "modified", "deletions": 14, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/agent/AgentFactoryImpl.java?ref=7d7b8c755bdfa30aa6d8047612b5e674c3f41a86", "patch": "@@ -49,6 +49,7 @@ public Agent createAgent(FacesContext facesContext)\n   {\n     AgentImpl agent = new AgentImpl();\n \n+    // Get the RequestHeaderMap to help populate the agent\n     Map<String, String> headerMap;\n     if (facesContext != null)\n     {\n@@ -60,12 +61,14 @@ public Agent createAgent(FacesContext facesContext)\n     }\n \n     //TODO: Add declarative and extensible means for populating AgentImpl object\n+    // the RequestHeaderMap helps populate the agent\n     _populateAgentImpl(headerMap, agent);\n \n     return agent;\n   }\n \n-\n+  // The headerMap is the RequestHeaderMap from the externalContext. It is \n+  // consulted to correctly populate the agent\n   private void _populateAgentImpl(Map<String, String> headerMap, AgentImpl agent)\n   {\n     \n@@ -90,7 +93,7 @@ private void _populateAgentImpl(Map<String, String> headerMap, AgentImpl agent)\n \n     if (userAgent == null)\n     {\n-      _populateNullAgentImpl(userAgent, agent);\n+      _populateUnknownAgentImpl(userAgent, agent);\n       return;\n     }\n     \n@@ -207,14 +210,20 @@ else if (userAgent.startsWith(\"Mozilla\"))\n         return;\n     }\n \n-    _populateNullAgentImpl(userAgent, agent);\n+    _populateUnknownAgentImpl(userAgent, agent);\n   }\n \n-  private void _populateNullAgentImpl(String userAgent, AgentImpl agent)\n+  private void _populateUnknownAgentImpl(String userAgent, AgentImpl agent)\n   {\n-    // Log warning message that we are setting the agent entry to null\n-    _LOG.warning(\"UNKNOWN_AGENT_ATTRIBUTES_CREATE_WITH_NULL\", userAgent);\n+    // Log warning message that we are setting the agent entry to unknown attributes\n+    _LOG.warning(\"UNKNOWN_AGENT_ATTRIBUTES_CREATE_WITH_UNKNOWN\", userAgent);\n     agent.setAgentEntryToNULL();\n+    agent.setAgent(_UNKNOWN);\n+    agent.setType(_UNKNOWN);\n+    agent.setAgentVersion(_UNKNOWN);\n+    agent.setPlatform(_UNKNOWN);\n+    agent.setPlatformVersion(_UNKNOWN);\n+    agent.setMakeModel(_UNKNOWN);\n   }\n \n   //populates the agent entry for DT access for either Telnet or PDA\n@@ -226,7 +235,7 @@ private void _populateJDevMobileAgentImpl(String agent,AgentImpl agentObj)\n     //the form of JDEVMobile user agent string will be:\n     //OracleJDevMobile_[PDA or ITS]/[version](DeviceName:[device name];[capability1]:[capability 1 value];...)\n \n-    boolean returnNullAgentObj = false;\n+    boolean returnUnknownAgentObj = false;\n     int itsIndex = agent.indexOf(\"ITS\");\n     int pdaIndex = agent.indexOf(\"PDA\");\n     int versionStartIndex = -1;\n@@ -235,19 +244,18 @@ private void _populateJDevMobileAgentImpl(String agent,AgentImpl agentObj)\n       agentObj.setType(Agent.TYPE_TELNET);\n       versionStartIndex = \"OracleJDevMobile_ITS\".length()+1;\n     }\n-    else\n-      if (pdaIndex > -1)\n+    else if (pdaIndex > -1)\n     {\n \n       agentObj.setType(Agent.TYPE_PDA);\n       versionStartIndex = \"OracleJDevMobile_PDA\".length()+1;\n     }\n     else\n     {\n-      returnNullAgentObj = true;\n+      returnUnknownAgentObj = true;\n     }\n     //Now find the name of the device\n-    if (!returnNullAgentObj){\n+    if (!returnUnknownAgentObj){\n       int versionEndIndex = agent.indexOf(\"(\");\n       String version = agent.substring(versionStartIndex,versionEndIndex);\n       agentObj.setAgentVersion(version);\n@@ -282,9 +290,9 @@ private void _populateJDevMobileAgentImpl(String agent,AgentImpl agentObj)\n         agentObj.__addRequestCapability(CapabilityKey.getCapabilityKey(capabilityName,true),capabilityValue);\n       }\n     }\n-    if (returnNullAgentObj)\n+    if (returnUnknownAgentObj)\n     {\n-      _populateNullAgentImpl(agent, agentObj);\n+      _populateUnknownAgentImpl(agent, agentObj);\n     }\n   }\n \n@@ -517,7 +525,7 @@ private void _populateIaswAgentImpl(String agent, String wirelessType,AgentImpl\n     // map device hint to agent type\n     if (wirelessType == null)\n     {\n-      _populateNullAgentImpl(agent, agentObj);\n+      _populateUnknownAgentImpl(agent, agentObj);\n       return;\n     }\n \n@@ -852,6 +860,7 @@ private String _getJavaOS(String base, int start)\n   }\n \n   static final private String _IASW_DEVICE_HINT_PARAM = \"X-Oracle-Device.Class\";\n+  static final private String _UNKNOWN = \"unknown\";\n   static final private TrinidadLogger _LOG = TrinidadLogger.createTrinidadLogger(AgentFactoryImpl.class);\n \n }", "filename": "trinidad/trinidad-impl/src/main/java/org/apache/myfaces/trinidadinternal/agent/AgentFactoryImpl.java"}, {"additions": 2, "raw_url": "https://github.com/apache/myfaces-trinidad/raw/7d7b8c755bdfa30aa6d8047612b5e674c3f41a86/trinidad/trinidad-impl/src/main/xrts/org/apache/myfaces/trinidadinternal/resource/LoggerBundle.xrts", "blob_url": "https://github.com/apache/myfaces-trinidad/blob/7d7b8c755bdfa30aa6d8047612b5e674c3f41a86/trinidad/trinidad-impl/src/main/xrts/org/apache/myfaces/trinidadinternal/resource/LoggerBundle.xrts", "sha": "0e774c67fbe95d9e394cd3e2bba00547a224937f", "changes": 4, "status": "modified", "deletions": 2, "contents_url": "https://api.github.com/repos/apache/myfaces-trinidad/contents/trinidad/trinidad-impl/src/main/xrts/org/apache/myfaces/trinidadinternal/resource/LoggerBundle.xrts?ref=7d7b8c755bdfa30aa6d8047612b5e674c3f41a86", "patch": "@@ -21,8 +21,8 @@\n <!DOCTYPE resources SYSTEM \"rts.dtd\">\r\n <resources xmlns=\"http://myfaces.apache.org/trinidad/rts\" package=\"org.apache.myfaces.trinidadinternal.resource\">\r\n \r\n-<!-- UNKNOWN_AGENT_ATTRIBUTES_CREATE_WITH_NULL -->\r\n-<resource key=\"UNKNOWN_AGENT_ATTRIBUTES_CREATE_WITH_NULL\">The User-Agent \"{0}\" is unknown; creating an agent with null agent attributes.</resource>\r\n+<!-- UNKNOWN_AGENT_ATTRIBUTES_CREATE_WITH_UNKNOWN -->\r\n+<resource key=\"UNKNOWN_AGENT_ATTRIBUTES_CREATE_WITH_UNKNOWN\">The User-Agent \"{0}\" is unknown; creating an agent with \"unknown\" agent attributes.</resource>\r\n \r\n <!-- UNKNOWN_AGENT_TYPE_CREATE_WITH_NULL -->\r\n <resource key=\"UNKNOWN_AGENT_TYPE_CREATE_WITH_NULL\">The agent type is unknown; creating an agent with null agent attributes.</resource>\r", "filename": "trinidad/trinidad-impl/src/main/xrts/org/apache/myfaces/trinidadinternal/resource/LoggerBundle.xrts"}], "repo": "myfaces-trinidad"}]
