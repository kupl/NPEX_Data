[
    {
        "repo": "tapestry3",
        "message": "Remove the \"is rewinding\" check from RenderTemplateHTML ... just rely on the use\nof a NullResponseWriter when rewinding.\nDeprecate the immediate submit option for the SelectPropertySelectionRenderer.\nFix minor errors in inspector/ShowLogging.html template.\nFix JavaDoc comments in InsertText component.\n[132729] AbstractComponent.getBindingNames() doesn't return all names\n[132726] Script component with no bindings throws NullPointerException\n[133265] ImageSubmit NullPointerException if disabled\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/tapestry/trunk@242124 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/tapestry3/commit/0d67c85ead7a787abf95078155856faebcc971d6",
        "parent": "https://github.com/apache/tapestry3/commit/2445cb6f46c09efdd029ccc21205cb476d01b737",
        "bug_id": "tapestry3_1",
        "file": [
            {
                "sha": "5cb9a430df56617035202a28ac3d854f3a8b5eb9",
                "filename": "framework/ChangeLog",
                "blob_url": "https://github.com/apache/tapestry3/blob/0d67c85ead7a787abf95078155856faebcc971d6/framework/ChangeLog",
                "raw_url": "https://github.com/apache/tapestry3/raw/0d67c85ead7a787abf95078155856faebcc971d6/framework/ChangeLog",
                "status": "modified",
                "changes": 11,
                "additions": 11,
                "contents_url": "https://api.github.com/repos/apache/tapestry3/contents/framework/ChangeLog?ref=0d67c85ead7a787abf95078155856faebcc971d6",
                "patch": "@@ -1,3 +1,14 @@\n+* Feb 23 2001 hship\n+\n+Remove the \"is rewinding\" check from RenderTemplateHTML ... just rely on the use\n+of a NullResponseWriter when rewinding.\n+Deprecate the immediate submit option for the SelectPropertySelectionRenderer.\n+Fix minor errors in inspector/ShowLogging.html template.\n+Fix JavaDoc comments in InsertText component.\n+[132729] AbstractComponent.getBindingNames() doesn't return all names\n+[132726] Script component with no bindings throws NullPointerException\n+[133265] ImageSubmit NullPointerException if disabled \n+\n * Feb 12 2001 hship\n \n Fix some bad JavaDoc comments.",
                "deletions": 0
            },
            {
                "sha": "aee8332166062af83ec5c19c94412fd8677c9474",
                "filename": "framework/src/com/primix/tapestry/AbstractComponent.java",
                "blob_url": "https://github.com/apache/tapestry3/blob/0d67c85ead7a787abf95078155856faebcc971d6/framework/src/com/primix/tapestry/AbstractComponent.java",
                "raw_url": "https://github.com/apache/tapestry3/raw/0d67c85ead7a787abf95078155856faebcc971d6/framework/src/com/primix/tapestry/AbstractComponent.java",
                "status": "modified",
                "changes": 35,
                "additions": 15,
                "contents_url": "https://api.github.com/repos/apache/tapestry3/contents/framework/src/com/primix/tapestry/AbstractComponent.java?ref=0d67c85ead7a787abf95078155856faebcc971d6",
                "patch": "@@ -102,19 +102,19 @@\n \t \n \tprivate Map bindings;\n \t\n-\t/**\n-\t *  An unmodifiable {@link Collection} of the names of all bindings (the\n-\t *  keys of the bindings map).\n-\t *\n-\t */\n-\t \n-\tprivate Collection bindingNames;\n-\n \tprivate Map components;\n \tprivate Map safeComponents;\n \n \tprivate static final int WRAPPED_INIT_SIZE = 5;\n \n+\t/**\n+\t *  Used in place of JDK 1.3's Collections.EMPTY_MAP (which is not\n+\t *  available in JDK 1.2).\n+\t *\n+\t */\n+\t \n+\tprivate static final Map EMPTY_MAP = Collections.unmodifiableMap(new HashMap(1));\n+\t\n \t/**\n \t*  The number of {@link IRender} objects wrapped by\n \t*  this component.\n@@ -764,11 +764,8 @@ public String toString()\n \t \n \tpublic Map getComponents()\n \t{\n-\t\t// Note: Collections.EMPTY_MAP not available until JDK 1.3 ... and\n-\t\t// we're trying for JDK 1.2 compatibility.\n-\n \t\tif (components == null)\n-\t\t\treturn new HashMap(1);\t\n+\t\t\treturn EMPTY_MAP;\t\n \t\t\n \t\tif (safeComponents == null)\n \t\t\tsafeComponents = Collections.unmodifiableMap(components);\n@@ -778,11 +775,8 @@ public Map getComponents()\n \t\n \tpublic Map getAssets()\n \t{\n-    \t// Note: Collections.EMPTY_MAP not available until JDK 1.3 ... and\n-        // we're trying for JDK 1.2 compatibility.\n-        \n     \tif (assets == null)\n-            return new HashMap(1);\n+            return EMPTY_MAP;\n             \t\t        \n \t\tif (safeAssets == null)\n \t\t\tsafeAssets = Collections.unmodifiableMap(assets);\n@@ -792,12 +786,13 @@ public Map getAssets()\n \t\n \tpublic Collection getBindingNames()\n \t{\n-\t\tif (bindings == null)\n+\t\t// If no conainer, i.e. a page, then no bindings.\n+\t\t\n+\t\tif (container == null)\n \t\t\treturn null;\n \t\t\n-\t\tif (bindingNames == null)\n-\t\t\tbindingNames = Collections.unmodifiableCollection(bindings.keySet());\n+\t\tContainedComponent contained = container.getSpecification().getComponent(id);\n \t\t\n-\t\treturn bindingNames;\t\n+\t\treturn contained.getBindingNames();\t\n \t}\t\n }",
                "deletions": 20
            },
            {
                "sha": "12f32fee828d968ff8bfdffb17c2d6ce949b6581",
                "filename": "framework/src/com/primix/tapestry/IComponent.java",
                "blob_url": "https://github.com/apache/tapestry3/blob/0d67c85ead7a787abf95078155856faebcc971d6/framework/src/com/primix/tapestry/IComponent.java",
                "raw_url": "https://github.com/apache/tapestry3/raw/0d67c85ead7a787abf95078155856faebcc971d6/framework/src/com/primix/tapestry/IComponent.java",
                "status": "modified",
                "changes": 4,
                "additions": 2,
                "contents_url": "https://api.github.com/repos/apache/tapestry3/contents/framework/src/com/primix/tapestry/IComponent.java?ref=0d67c85ead7a787abf95078155856faebcc971d6",
                "patch": "@@ -97,8 +97,8 @@\n      *  Returns a {@link Collection} of the names of all bindings (which includes\n      *  bindings for both formal and informal parameters).\n      *\n-     *  <P>The return value is unmodifiable, and may be null if the component has\n-     *  no parameters bound.\n+     *  <p>The return value is unmodifiable.  It will be null for a {@link IPage page},\n+\t *  or may simply be empty for a component with no bindings.\n      *\n      */\n ",
                "deletions": 2
            },
            {
                "sha": "8a1461a54116d003b872962d1ceaf7ed3f7a86b0",
                "filename": "framework/src/com/primix/tapestry/form/ImageSubmit.java",
                "blob_url": "https://github.com/apache/tapestry3/blob/0d67c85ead7a787abf95078155856faebcc971d6/framework/src/com/primix/tapestry/form/ImageSubmit.java",
                "raw_url": "https://github.com/apache/tapestry3/raw/0d67c85ead7a787abf95078155856faebcc971d6/framework/src/com/primix/tapestry/form/ImageSubmit.java",
                "status": "modified",
                "changes": 4,
                "additions": 2,
                "contents_url": "https://api.github.com/repos/apache/tapestry3/contents/framework/src/com/primix/tapestry/form/ImageSubmit.java?ref=0d67c85ead7a787abf95078155856faebcc971d6",
                "patch": "@@ -299,8 +299,8 @@ public void render(IResponseWriter writer, IRequestCycle cycle)\n \n \t\t// Not rewinding, do the real render\n \n-\t\tif (disabled)\n-\t\t\timage = (IAsset)disabledImageBinding.getObject(\"disabled\", IAsset.class);\n+\t\tif (disabled && disabledImageBinding != null)\n+\t\t\timage = (IAsset)disabledImageBinding.getObject(\"disabledImage\", IAsset.class);\n \n \t\tif (image == null)\n \t\t{",
                "deletions": 2
            },
            {
                "sha": "9a08d43ea44ec274b3e7fa05aae4ab5d3ade3666",
                "filename": "framework/src/com/primix/tapestry/form/SelectPropertySelectionRenderer.java",
                "blob_url": "https://github.com/apache/tapestry3/blob/0d67c85ead7a787abf95078155856faebcc971d6/framework/src/com/primix/tapestry/form/SelectPropertySelectionRenderer.java",
                "raw_url": "https://github.com/apache/tapestry3/raw/0d67c85ead7a787abf95078155856faebcc971d6/framework/src/com/primix/tapestry/form/SelectPropertySelectionRenderer.java",
                "status": "modified",
                "changes": 17,
                "additions": 15,
                "contents_url": "https://api.github.com/repos/apache/tapestry3/contents/framework/src/com/primix/tapestry/form/SelectPropertySelectionRenderer.java?ref=0d67c85ead7a787abf95078155856faebcc971d6",
                "patch": "@@ -49,6 +49,15 @@ public SelectPropertySelectionRenderer()\n \t\tsuper();\n \t}\n \n+\t/**\n+\t *  This method is deprecated; the behavior can be better\n+\t *  achieved by using a {@link com.primix.tapestry.script.Script} component\n+\t *  to provide the necessary <code>onChange</code> handler.\n+\t *\n+\t *  @deprecated\n+\t *\n+\t */\n+\t \n \tpublic SelectPropertySelectionRenderer(boolean immediateSubmit)\n \t{\n \t\tthis.immediateSubmit = immediateSubmit;\n@@ -59,6 +68,7 @@ public SelectPropertySelectionRenderer(boolean immediateSubmit)\n \t *  If so, changing the value of the &lt;select&gt; causes the form containing\n \t *  it to be submitted.\n \t *\n+\t *  @deprecated\n \t */\n \n \tpublic boolean getImmediateSubmit()\n@@ -70,7 +80,7 @@ public boolean getImmediateSubmit()\n \t *  Writes the &lt;select&gt; element.  If the\n \t *  {@link PropertySelection} is {@link PropertySelection#isDisabled() disabled}\n \t *  then a <code>disabled</code> attribute is written into the tag\n-\t *  (though Navigator may ignore this).\n+\t *  (though Navigator will ignore this).\n \t *\n \t */\n \n@@ -84,6 +94,8 @@ public void beginRender(PropertySelection component, IResponseWriter writer,\n \t\tif (component.isDisabled())\n \t\t\twriter.attribute(\"disabled\");\n \t\t\t\n+\t\t// We're in the process of removing this immediateSubmit business.\n+\t\t\n \t\tif (immediateSubmit)\n \t\t\twriter.attribute(\"onChange\", \"javascript:this.form.submit();\");\n \t\t\n@@ -95,7 +107,8 @@ public void beginRender(PropertySelection component, IResponseWriter writer,\n \t *\n \t */\n \n-\tpublic void endRender(PropertySelection component, IResponseWriter writer, IRequestCycle cycle) throws RequestCycleException\n+\tpublic void endRender(PropertySelection component, IResponseWriter writer, IRequestCycle cycle)\n+\tthrows RequestCycleException\n \t{\n \t\twriter.end(); // <select>\n \t}",
                "deletions": 2
            },
            {
                "sha": "51a66b8a11c0666c85036cca4306b81608022eee",
                "filename": "framework/src/com/primix/tapestry/html/InsertText.java",
                "blob_url": "https://github.com/apache/tapestry3/blob/0d67c85ead7a787abf95078155856faebcc971d6/framework/src/com/primix/tapestry/html/InsertText.java",
                "raw_url": "https://github.com/apache/tapestry3/raw/0d67c85ead7a787abf95078155856faebcc971d6/framework/src/com/primix/tapestry/html/InsertText.java",
                "status": "modified",
                "changes": 1,
                "additions": 1,
                "contents_url": "https://api.github.com/repos/apache/tapestry3/contents/framework/src/com/primix/tapestry/html/InsertText.java?ref=0d67c85ead7a787abf95078155856faebcc971d6",
                "patch": "@@ -54,6 +54,7 @@\n  *  <tr>\n  *      <td>mode</td>\n  *      <td>{@link InsertTextMode}</td>\n+ *\t\t<td>R</td>\n  *      <td>no</td>\n  *      <td>{@link InsertTextMode#BREAK}</td>\n  *      <td>Defines how each line will be emitted.",
                "deletions": 0
            },
            {
                "sha": "082bd73e2ef092c7e1d426b782aee0a792bfb444",
                "filename": "framework/src/com/primix/tapestry/inspector/ShowLogging.html",
                "blob_url": "https://github.com/apache/tapestry3/blob/0d67c85ead7a787abf95078155856faebcc971d6/framework/src/com/primix/tapestry/inspector/ShowLogging.html",
                "raw_url": "https://github.com/apache/tapestry3/raw/0d67c85ead7a787abf95078155856faebcc971d6/framework/src/com/primix/tapestry/inspector/ShowLogging.html",
                "status": "modified",
                "changes": 2,
                "additions": 1,
                "contents_url": "https://api.github.com/repos/apache/tapestry3/contents/framework/src/com/primix/tapestry/inspector/ShowLogging.html?ref=0d67c85ead7a787abf95078155856faebcc971d6",
                "patch": "@@ -11,7 +11,7 @@ <h1>Log4J Logging Controls</h1>\n \t</tr>\n \t\t\n \t<tr class=\"even\">\n-\t\t<td><em>Root Category</eh>\n+\t\t<td><em>Root Category</em></td>\n \t\t<td><jwc id=\"inputRootLevel\"/></td>\n \t</tr>\n ",
                "deletions": 1
            },
            {
                "sha": "81f68397d5c6aca85f3fd6dd546f63f83e2ab90f",
                "filename": "framework/src/com/primix/tapestry/parse/RenderTemplateHTML.java",
                "blob_url": "https://github.com/apache/tapestry3/blob/0d67c85ead7a787abf95078155856faebcc971d6/framework/src/com/primix/tapestry/parse/RenderTemplateHTML.java",
                "raw_url": "https://github.com/apache/tapestry3/raw/0d67c85ead7a787abf95078155856faebcc971d6/framework/src/com/primix/tapestry/parse/RenderTemplateHTML.java",
                "status": "modified",
                "changes": 11,
                "additions": 8,
                "contents_url": "https://api.github.com/repos/apache/tapestry3/contents/framework/src/com/primix/tapestry/parse/RenderTemplateHTML.java?ref=0d67c85ead7a787abf95078155856faebcc971d6",
                "patch": "@@ -60,9 +60,14 @@ public void render(IResponseWriter writer, IRequestCycle cycle)\n \t\t\t\n \t\tif (length == 0)\n \t\t\treturn;\n-\t\t\t\n-\t\tif (!cycle.isRewinding())\n-\t\t\twriter.printRaw(templateData, offset, length);\n+\n+\t\t// At one time, we would check to see if the cycle was rewinding and\n+\t\t// only invoke printRaw() if it was.  However, that slows down\n+\t\t// normal rendering (microscopically) and, with the new\n+\t\t// NullResponseWriter class, the \"cost\" of invoking cycle.isRewinding()\n+\t\t// is approximately the same as the \"cost\" of invoking writer.printRaw().\n+\t\t\t\t\t\n+\t\twriter.printRaw(templateData, offset, length);\n \t}\n \t\n \t/**",
                "deletions": 3
            }
        ]
    },
    {
        "repo": "tapestry3",
        "message": "Fix the Hidden component to not throw NullPointerException if the listener parameter\nis not bound.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/tapestry/trunk@241925 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/tapestry3/commit/aa25ef696d09f79fd4bf0c8222f30cbd061ac261",
        "parent": "https://github.com/apache/tapestry3/commit/877cbc0b2406f524886327435196fc663c18dc78",
        "bug_id": "tapestry3_2",
        "file": [
            {
                "sha": "ba83bcde746c1cbe6579f58f3930174a0745b183",
                "filename": "framework/ChangeLog",
                "blob_url": "https://github.com/apache/tapestry3/blob/aa25ef696d09f79fd4bf0c8222f30cbd061ac261/framework/ChangeLog",
                "raw_url": "https://github.com/apache/tapestry3/raw/aa25ef696d09f79fd4bf0c8222f30cbd061ac261/framework/ChangeLog",
                "status": "modified",
                "changes": 5,
                "additions": 5,
                "contents_url": "https://api.github.com/repos/apache/tapestry3/contents/framework/ChangeLog?ref=aa25ef696d09f79fd4bf0c8222f30cbd061ac261",
                "patch": "@@ -1,5 +1,10 @@\n * Oct 6 2000 hship\n \n+Fix the Hidden component to not throw NullPointerException if the listener parameter\n+is not bound.\n+\n+* Oct 6 2000 hship\n+\n Re-introduce support for automatic onLoad method for the Body component.\n Rename the TextField parameter \"maximumWidth\" to \"maximumLength\".\n Make the Form component emit a name attribute, to faciliate JavaScript access",
                "deletions": 0
            },
            {
                "sha": "7534d9d1fbb5e5c30e3b4ad530e408644d03062d",
                "filename": "framework/src/com/primix/tapestry/components/Hidden.java",
                "blob_url": "https://github.com/apache/tapestry3/blob/aa25ef696d09f79fd4bf0c8222f30cbd061ac261/framework/src/com/primix/tapestry/components/Hidden.java",
                "raw_url": "https://github.com/apache/tapestry3/raw/aa25ef696d09f79fd4bf0c8222f30cbd061ac261/framework/src/com/primix/tapestry/components/Hidden.java",
                "status": "modified",
                "changes": 3,
                "additions": 3,
                "contents_url": "https://api.github.com/repos/apache/tapestry3/contents/framework/src/com/primix/tapestry/components/Hidden.java?ref=aa25ef696d09f79fd4bf0c8222f30cbd061ac261",
                "patch": "@@ -150,6 +150,9 @@ public void render(IResponseWriter writer, IRequestCycle cycle)\n \n \t\tvalueBinding.setString(value);\n \t\t\n+        if (listenerBinding == null)\n+            return;\n+\n         try\n         {\n             listener = (IActionListener)listenerBinding.getValue();",
                "deletions": 0
            }
        ]
    },
    {
        "repo": "tapestry3",
        "message": "[ 25585 ] ValidationDelegate throws NPE for some new FieldLabel/ValidField\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/tapestry/trunk@243678 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/tapestry3/commit/268a85714cc64daa2d50582c9632ae0889eda3bc",
        "parent": "https://github.com/apache/tapestry3/commit/142eefacf6a50f9cd30f4b9efa69ef16a673b466",
        "bug_id": "tapestry3_3",
        "file": [
            {
                "sha": "8d015a18c84ac319a80cbb11c1584bbfc8a67000",
                "filename": "framework/src/org/apache/tapestry/valid/ValidationDelegate.java",
                "blob_url": "https://github.com/apache/tapestry3/blob/268a85714cc64daa2d50582c9632ae0889eda3bc/framework/src/org/apache/tapestry/valid/ValidationDelegate.java",
                "raw_url": "https://github.com/apache/tapestry3/raw/268a85714cc64daa2d50582c9632ae0889eda3bc/framework/src/org/apache/tapestry/valid/ValidationDelegate.java",
                "status": "modified",
                "changes": 9,
                "additions": 8,
                "contents_url": "https://api.github.com/repos/apache/tapestry3/contents/framework/src/org/apache/tapestry/valid/ValidationDelegate.java?ref=268a85714cc64daa2d50582c9632ae0889eda3bc",
                "patch": "@@ -62,6 +62,7 @@\n import java.util.List;\n import java.util.Map;\n \n+import org.apache.tapestry.IForm;\n import org.apache.tapestry.IMarkupWriter;\n import org.apache.tapestry.IRender;\n import org.apache.tapestry.IRequestCycle;\n@@ -432,7 +433,13 @@ protected boolean isInError(IFormComponent component)\n         if (_trackingMap == null)\n             return false;\n \n-        String formName = component.getForm().getName();\n+        IForm form = component.getForm();\n+        // if there is no form, the component cannot have been rewound or rendered into a form yet\n+        // so assume it cannot have errors.\n+        if (form == null)\n+            return false;\n+        \n+        String formName = form.getName();\n         Map formMap = (Map) _trackingMap.get(formName);\n \n         if (formMap == null)",
                "deletions": 1
            }
        ]
    },
    {
        "repo": "tapestry3",
        "message": "[ 627332 ] NPE in BaseValidator (form without body)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/tapestry/trunk@243003 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/tapestry3/commit/60f37294052072f87557264172305cb58cc395cc",
        "parent": "https://github.com/apache/tapestry3/commit/46f26f58cc257ab8665acdf33b3c0cc1615b88e2",
        "bug_id": "tapestry3_4",
        "file": [
            {
                "sha": "7ac909b73472eeb88f5297d6c7d88b56be89e467",
                "filename": "framework/src/net/sf/tapestry/TapestryStrings.properties",
                "blob_url": "https://github.com/apache/tapestry3/blob/60f37294052072f87557264172305cb58cc395cc/framework/src/net/sf/tapestry/TapestryStrings.properties",
                "raw_url": "https://github.com/apache/tapestry3/raw/60f37294052072f87557264172305cb58cc395cc/framework/src/net/sf/tapestry/TapestryStrings.properties",
                "status": "modified",
                "changes": 1,
                "additions": 1,
                "contents_url": "https://api.github.com/repos/apache/tapestry3/contents/framework/src/net/sf/tapestry/TapestryStrings.properties?ref=60f37294052072f87557264172305cb58cc395cc",
                "patch": "@@ -368,6 +368,7 @@ FieldLabel.no-display-name=Display name not specified and not provided by field\n \n ValidField.no-delegate=No IValidationDelegate is available to ValidField {0}; it is specified as the delegate parameter of Form {1}.\n ValidField.no-type=The type parameter for field {0} was not specified and is required by the field''s validator.\n+ValidField.must-be-contained-by-body=A ValidField using client-side validation must be wrapped by a Body component.\n \n NumberValidator.no-adaptor-for-field=Unable to provide validation for field {0} (value type {1}).\n ",
                "deletions": 0
            },
            {
                "sha": "db6daeb04373957b27edf89e5503bac0d53572bb",
                "filename": "framework/src/net/sf/tapestry/valid/BaseValidator.java",
                "blob_url": "https://github.com/apache/tapestry3/blob/60f37294052072f87557264172305cb58cc395cc/framework/src/net/sf/tapestry/valid/BaseValidator.java",
                "raw_url": "https://github.com/apache/tapestry3/raw/60f37294052072f87557264172305cb58cc395cc/framework/src/net/sf/tapestry/valid/BaseValidator.java",
                "status": "modified",
                "changes": 3,
                "additions": 3,
                "contents_url": "https://api.github.com/repos/apache/tapestry3/contents/framework/src/net/sf/tapestry/valid/BaseValidator.java?ref=60f37294052072f87557264172305cb58cc395cc",
                "patch": "@@ -266,6 +266,9 @@ protected void processValidatorScript(String scriptPath, IRequestCycle cycle, IF\n \n         Body body = Body.get(cycle);\n \n+        if (body == null)\n+            throw new RequestCycleException(Tapestry.getString(\"ValidField.must-be-contained-by-body\"), field);\n+\n         body.process(session);\n \n         String functionName = (String) finalSymbols.get(FUNCTION_SYMBOL);",
                "deletions": 0
            },
            {
                "sha": "da095ad846955a393f90fb90ec2a1d54d8c1d4c3",
                "filename": "junit/src/net/sf/tapestry/junit/mock/MockTestCase.java",
                "blob_url": "https://github.com/apache/tapestry3/blob/60f37294052072f87557264172305cb58cc395cc/junit/src/net/sf/tapestry/junit/mock/MockTestCase.java",
                "raw_url": "https://github.com/apache/tapestry3/raw/60f37294052072f87557264172305cb58cc395cc/junit/src/net/sf/tapestry/junit/mock/MockTestCase.java",
                "status": "modified",
                "changes": 12,
                "additions": 12,
                "contents_url": "https://api.github.com/repos/apache/tapestry3/contents/junit/src/net/sf/tapestry/junit/mock/MockTestCase.java?ref=60f37294052072f87557264172305cb58cc395cc",
                "patch": "@@ -159,4 +159,16 @@ public void testStrings()\n     {\n         attempt(\"/net/sf/tapestry/junit/mock/TestStrings.xml\");\n     }\n+    \n+    /**\n+     *  Test case for a ValidField with a validator and client-side scripting, but\n+     *  no Body.\n+     * \n+     **/\n+    \n+    public void testValidFieldNoBody()\n+    throws Exception\n+    {\n+        attempt(\"/net/sf/tapestry/junit/mock/TestValidFieldNoBody.xml\");\n+    }\n }",
                "deletions": 0
            },
            {
                "sha": "b3c72dab2438a5f98fd43b818289756f62a6aa81",
                "filename": "junit/src/net/sf/tapestry/junit/mock/TestStrings.xml",
                "blob_url": "https://github.com/apache/tapestry3/blob/60f37294052072f87557264172305cb58cc395cc/junit/src/net/sf/tapestry/junit/mock/TestStrings.xml",
                "raw_url": "https://github.com/apache/tapestry3/raw/60f37294052072f87557264172305cb58cc395cc/junit/src/net/sf/tapestry/junit/mock/TestStrings.xml",
                "status": "modified",
                "changes": 4,
                "additions": 0,
                "contents_url": "https://api.github.com/repos/apache/tapestry3/contents/junit/src/net/sf/tapestry/junit/mock/TestStrings.xml?ref=60f37294052072f87557264172305cb58cc395cc",
                "patch": "@@ -3,8 +3,6 @@\n <!-- $Id$ -->\n \n \n-<!-- Tests stale session exception with a DirectLink. -->\n-\n <mock-test>\n     <context name=\"mock\"/>\n     \n@@ -14,8 +12,6 @@\n   \t\t\tvalue=\"/net/sf/tapestry/junit/mock/app/Mock.application\"/>\n   \t</servlet>  \t\n   \t\n-  \t<!-- Simulate clicking the link, which should send the\n-  \t     user to the Protected page.  -->\n   \t     \n   \t<request>\n   \t\t<parameter name=\"service\" value=\"page\"/>",
                "deletions": 4
            },
            {
                "sha": "1be189a2f73630c2bac0689eb51eb1d9de5c4b37",
                "filename": "junit/src/net/sf/tapestry/junit/mock/TestValidFieldNoBody.xml",
                "blob_url": "https://github.com/apache/tapestry3/blob/60f37294052072f87557264172305cb58cc395cc/junit/src/net/sf/tapestry/junit/mock/TestValidFieldNoBody.xml",
                "raw_url": "https://github.com/apache/tapestry3/raw/60f37294052072f87557264172305cb58cc395cc/junit/src/net/sf/tapestry/junit/mock/TestValidFieldNoBody.xml",
                "status": "added",
                "changes": 36,
                "additions": 36,
                "contents_url": "https://api.github.com/repos/apache/tapestry3/contents/junit/src/net/sf/tapestry/junit/mock/TestValidFieldNoBody.xml?ref=60f37294052072f87557264172305cb58cc395cc",
                "patch": "@@ -0,0 +1,36 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+\n+<!-- $Id$ -->\n+\n+\n+\n+<mock-test>\n+    <context name=\"mock\"/>\n+    \n+    <servlet name=\"app\" class=\"net.sf.tapestry.ApplicationServlet\">\n+  \t\t<init-parameter\n+  \t\t\tname=\"net.sf.tapestry.application-specification\"\n+  \t\t\tvalue=\"/net/sf/tapestry/junit/mock/app/Mock.application\"/>\n+  \t</servlet>  \t\n+  \t\n+  \t     \n+  \t<request>\n+  \t\t<parameter name=\"service\" value=\"page\"/>\n+  \t\t<parameter name=\"context\" value=\"ValidFieldNoBody\"/>\n+  \t\t\n+\t\n+\t\t<!-- Should get an Exception -->\n+\t\n+\t\t<assert-output name=\"Title\">\n+<![CDATA[\n+<title>Exception</title>\n+]]>\t\t\n+\t\t</assert-output>\n+\t\n+\t\t<assert-output name=\"Message\">\n+\t\tA ValidField using client-side validation must be wrapped by a Body component.\n+\t\t</assert-output>\n+\t\n+\t</request>\n+\t\t  \t\n+</mock-test>\n\\ No newline at end of file",
                "deletions": 0
            },
            {
                "sha": "edd73db0f3bbda13aa0d28bd546e60850eb063d0",
                "filename": "junit/src/net/sf/tapestry/junit/mock/app/Mock.application",
                "blob_url": "https://github.com/apache/tapestry3/blob/60f37294052072f87557264172305cb58cc395cc/junit/src/net/sf/tapestry/junit/mock/app/Mock.application",
                "raw_url": "https://github.com/apache/tapestry3/raw/60f37294052072f87557264172305cb58cc395cc/junit/src/net/sf/tapestry/junit/mock/app/Mock.application",
                "status": "modified",
                "changes": 2,
                "additions": 2,
                "contents_url": "https://api.github.com/repos/apache/tapestry3/contents/junit/src/net/sf/tapestry/junit/mock/app/Mock.application?ref=60f37294052072f87557264172305cb58cc395cc",
                "patch": "@@ -22,6 +22,8 @@\n \n \t<page name=\"Stale\" specification-path=\"/net/sf/tapestry/junit/mock/app/Stale.page\"/>\n \n+\t<page name=\"ValidFieldNoBody\" specification-path=\"/net/sf/tapestry/junit/mock/app/ValidFieldNoBody.page\"/>\n+\n \t\t\n \t<library id=\"lib\" specification-path=\"/net/sf/tapestry/junit/mock/lib/MockLibrary.library\"/>\n \t",
                "deletions": 0
            },
            {
                "sha": "ee9401332055d3b21d068f558fa4266b369a90ea",
                "filename": "junit/src/net/sf/tapestry/junit/mock/app/Strings.page",
                "blob_url": "https://github.com/apache/tapestry3/blob/60f37294052072f87557264172305cb58cc395cc/junit/src/net/sf/tapestry/junit/mock/app/Strings.page",
                "raw_url": "https://github.com/apache/tapestry3/raw/60f37294052072f87557264172305cb58cc395cc/junit/src/net/sf/tapestry/junit/mock/app/Strings.page",
                "status": "modified",
                "changes": 2,
                "additions": 1,
                "contents_url": "https://api.github.com/repos/apache/tapestry3/contents/junit/src/net/sf/tapestry/junit/mock/app/Strings.page?ref=60f37294052072f87557264172305cb58cc395cc",
                "patch": "@@ -7,7 +7,7 @@\n <page-specification class=\"net.sf.tapestry.html.BasePage\">\n \n   <component id=\"border\" type=\"lib:Border\">\n-  \t<static-binding name=\"title\">StaleSession Test Page</static-binding>\n+  \t<static-binding name=\"title\">Insert Localized Key Test Page</static-binding>\n   </component>\n \n </page-specification>\t\n\\ No newline at end of file",
                "deletions": 1
            },
            {
                "sha": "65f5752f60c5cadd367c8de0168958c8b8e87510",
                "filename": "junit/src/net/sf/tapestry/junit/mock/app/ValidFieldNoBody.html",
                "blob_url": "https://github.com/apache/tapestry3/blob/60f37294052072f87557264172305cb58cc395cc/junit/src/net/sf/tapestry/junit/mock/app/ValidFieldNoBody.html",
                "raw_url": "https://github.com/apache/tapestry3/raw/60f37294052072f87557264172305cb58cc395cc/junit/src/net/sf/tapestry/junit/mock/app/ValidFieldNoBody.html",
                "status": "added",
                "changes": 17,
                "additions": 17,
                "contents_url": "https://api.github.com/repos/apache/tapestry3/contents/junit/src/net/sf/tapestry/junit/mock/app/ValidFieldNoBody.html?ref=60f37294052072f87557264172305cb58cc395cc",
                "patch": "@@ -0,0 +1,17 @@\n+<!-- $Id$ -->\n+\n+<span jwcid=\"Shell\">\n+\n+<body>\n+\n+<form jwcid=\"form\">\n+\n+<input jwcid=\"inputNumber\"/>\n+\n+<input type=\"submit\"/>\n+\n+</form>\n+\n+</body>\n+\n+</span>\n\\ No newline at end of file",
                "deletions": 0
            },
            {
                "sha": "e0c8209a9f64835aba54ccadf98892a779136bd8",
                "filename": "junit/src/net/sf/tapestry/junit/mock/app/ValidFieldNoBody.java",
                "blob_url": "https://github.com/apache/tapestry3/blob/60f37294052072f87557264172305cb58cc395cc/junit/src/net/sf/tapestry/junit/mock/app/ValidFieldNoBody.java",
                "raw_url": "https://github.com/apache/tapestry3/raw/60f37294052072f87557264172305cb58cc395cc/junit/src/net/sf/tapestry/junit/mock/app/ValidFieldNoBody.java",
                "status": "added",
                "changes": 58,
                "additions": 58,
                "contents_url": "https://api.github.com/repos/apache/tapestry3/contents/junit/src/net/sf/tapestry/junit/mock/app/ValidFieldNoBody.java?ref=60f37294052072f87557264172305cb58cc395cc",
                "patch": "@@ -0,0 +1,58 @@\n+//\n+// Tapestry Web Application Framework\n+// Copyright (c) 2002 by Howard Lewis Ship\n+//\n+// Howard Lewis Ship\n+// http://sf.net/projects/tapestry\n+// mailto:hship@users.sf.net\n+//\n+// This library is free software.\n+//\n+// You may redistribute it and/or modify it under the terms of the GNU\n+// Lesser General Public License as published by the Free Software Foundation.\n+//\n+// Version 2.1 of the license should be included with this distribution in\n+// the file LICENSE, as well as License.html. If the license is not\n+// included with this distribution, you may find a copy at the FSF web\n+// site at 'www.gnu.org' or 'www.fsf.org', or you may write to the\n+// Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139 USA.\n+//\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied waranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+// Lesser General Public License for more details.\n+//\n+\n+package net.sf.tapestry.junit.mock.app;\n+\n+import net.sf.tapestry.html.BasePage;\n+\n+/**\n+ *  Page for testing a validator, with client side validation, but no Body.\n+ *\n+ *  @author Howard Lewis Ship\n+ *  @version $Id$\n+ *  @since 2.3\n+ * \n+ **/\n+\n+public class ValidFieldNoBody extends BasePage\n+{\n+    private int _intValue;        \n+    \n+    protected void initialize()\n+    {\n+        _intValue = 10;\n+    }\n+        \n+    public int getIntValue()\n+    {\n+        return _intValue;\n+    }\n+\n+    public void setIntValue(int intValue)\n+    {\n+        _intValue = intValue;\n+    }\n+\n+}",
                "deletions": 0
            },
            {
                "sha": "ba6d45112838b70d6799e08259c5ed64b202f13c",
                "filename": "junit/src/net/sf/tapestry/junit/mock/app/ValidFieldNoBody.page",
                "blob_url": "https://github.com/apache/tapestry3/blob/60f37294052072f87557264172305cb58cc395cc/junit/src/net/sf/tapestry/junit/mock/app/ValidFieldNoBody.page",
                "raw_url": "https://github.com/apache/tapestry3/raw/60f37294052072f87557264172305cb58cc395cc/junit/src/net/sf/tapestry/junit/mock/app/ValidFieldNoBody.page",
                "status": "added",
                "changes": 34,
                "additions": 34,
                "contents_url": "https://api.github.com/repos/apache/tapestry3/contents/junit/src/net/sf/tapestry/junit/mock/app/ValidFieldNoBody.page?ref=60f37294052072f87557264172305cb58cc395cc",
                "patch": "@@ -0,0 +1,34 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<!-- $Id$ -->\n+<!DOCTYPE page-specification PUBLIC \n+\t\"-//Howard Lewis Ship//Tapestry Specification 1.3//EN\" \n+\t\"http://tapestry.sf.net/dtd/Tapestry_1_3.dtd\">\n+\t\n+<page-specification class=\"net.sf.tapestry.junit.mock.app.ValidFieldNoBody\">\n+\n+  <bean name=\"delegate\" class=\"net.sf.tapestry.valid.ValidationDelegate\"/>\n+\n+  <bean name=\"intValidator\" lifecycle=\"render\" class=\"net.sf.tapestry.valid.NumberValidator\">\n+  \t<set-property name=\"required\" expression=\"true\"/>\n+  \t<set-property name=\"clientScriptingEnabled\" expression=\"true\"/>\n+  </bean>\n+  \n+  <component id=\"Shell\" type=\"Shell\">\n+  \t<static-binding name=\"title\">ValidField w/o Body Test Page</static-binding>\n+  </component>\n+\n+  <component id=\"form\" type=\"Form\">\n+  \t<binding name=\"delegate\" expression=\"beans.delegate\"/>\n+  </component>\n+  \n+\n+  <component id=\"inputNumber\" type=\"ValidField\">\n+    <binding name=\"validator\" expression=\"beans.intValidator\"/>\n+    <binding name=\"value\" expression=\"intValue\"/>\n+    <static-binding name=\"displayName\">Integer Field</static-binding>\n+    <static-binding name=\"type\">Integer</static-binding>\n+  </component>  \n+  \n+  \n+\n+</page-specification>\t\n\\ No newline at end of file",
                "deletions": 0
            },
            {
                "sha": "a3952749d0b203899017bdbdd13f99c5559b2099",
                "filename": "web/new.html",
                "blob_url": "https://github.com/apache/tapestry3/blob/60f37294052072f87557264172305cb58cc395cc/web/new.html",
                "raw_url": "https://github.com/apache/tapestry3/raw/60f37294052072f87557264172305cb58cc395cc/web/new.html",
                "status": "modified",
                "changes": 1,
                "additions": 1,
                "contents_url": "https://api.github.com/repos/apache/tapestry3/contents/web/new.html?ref=60f37294052072f87557264172305cb58cc395cc",
                "patch": "@@ -39,6 +39,7 @@ <h3>Release 2.3-alpha-1</h3>\n [ 619481 ] use jakarta commons lang Enum\n [ 627478 ] Don't require servlet subclass\n [ 614324 ] Add a param \"raw\" in addition to \"key\"\n+[ 627332 ] NPE in BaseValidator (form without body)\n </pre>\n \n <h3>Release 2.2</h3>",
                "deletions": 0
            }
        ]
    },
    {
        "repo": "tapestry3",
        "message": "[ 618342 ] NPE in AbstractComponent toString\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/tapestry/trunk@242972 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/tapestry3/commit/6a366c85d9f70216dca1f82f64ac665d5ce2f9b2",
        "parent": "https://github.com/apache/tapestry3/commit/f8b156da1273cb46921d9f4082abbb52dc826c76",
        "bug_id": "tapestry3_5",
        "file": [
            {
                "sha": "7da50b4e7ed41b6e42163e94502ed4082fdde6b1",
                "filename": "framework/src/net/sf/tapestry/AbstractComponent.java",
                "blob_url": "https://github.com/apache/tapestry3/blob/6a366c85d9f70216dca1f82f64ac665d5ce2f9b2/framework/src/net/sf/tapestry/AbstractComponent.java",
                "raw_url": "https://github.com/apache/tapestry3/raw/6a366c85d9f70216dca1f82f64ac665d5ce2f9b2/framework/src/net/sf/tapestry/AbstractComponent.java",
                "status": "modified",
                "changes": 3,
                "additions": 3,
                "contents_url": "https://api.github.com/repos/apache/tapestry3/contents/framework/src/net/sf/tapestry/AbstractComponent.java?ref=6a366c85d9f70216dca1f82f64ac665d5ce2f9b2",
                "patch": "@@ -596,6 +596,9 @@ public void setContainer(IComponent value)\n \n     public String getExtendedId()\n     {\n+        if (page == null)\n+            return null;\n+            \n         return page.getName() + \"/\" + getIdPath();\n     }\n ",
                "deletions": 0
            },
            {
                "sha": "3136993716c9833f34ea23c8d493502020f0c495",
                "filename": "web/new.html",
                "blob_url": "https://github.com/apache/tapestry3/blob/6a366c85d9f70216dca1f82f64ac665d5ce2f9b2/web/new.html",
                "raw_url": "https://github.com/apache/tapestry3/raw/6a366c85d9f70216dca1f82f64ac665d5ce2f9b2/web/new.html",
                "status": "modified",
                "changes": 1,
                "additions": 1,
                "contents_url": "https://api.github.com/repos/apache/tapestry3/contents/web/new.html?ref=6a366c85d9f70216dca1f82f64ac665d5ce2f9b2",
                "patch": "@@ -21,6 +21,7 @@ <h3>Release 2.2-rc-1</h3>\n [ 616851 ] Can't redirect to a library page\n [ 617867 ] ImageSubmit null image\n [ 618317 ] Contrib:NumericField missing type param\n+[ 618342 ] NPE in AbstractComponent toString\n </pre>\n \n <h3>Release 2.2-beta-3</h3>",
                "deletions": 0
            }
        ]
    },
    {
        "repo": "tapestry3",
        "message": " [ 566158 ] ValidField NPE if no delegate\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/tapestry/trunk@242590 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/tapestry3/commit/46a8f312c2bc1f4de03e4cb19323c2aaec060eaf",
        "parent": "https://github.com/apache/tapestry3/commit/da42fb0784c6b709280df9f0d2792c868a69734b",
        "bug_id": "tapestry3_6",
        "file": [
            {
                "sha": "a5b004991110db2c115ba61b9c6b6773954c47cb",
                "filename": "framework/src/net/sf/tapestry/RequestContext.java",
                "blob_url": "https://github.com/apache/tapestry3/blob/46a8f312c2bc1f4de03e4cb19323c2aaec060eaf/framework/src/net/sf/tapestry/RequestContext.java",
                "raw_url": "https://github.com/apache/tapestry3/raw/46a8f312c2bc1f4de03e4cb19323c2aaec060eaf/framework/src/net/sf/tapestry/RequestContext.java",
                "status": "modified",
                "changes": 2,
                "additions": 1,
                "contents_url": "https://api.github.com/repos/apache/tapestry3/contents/framework/src/net/sf/tapestry/RequestContext.java?ref=46a8f312c2bc1f4de03e4cb19323c2aaec060eaf",
                "patch": "@@ -819,7 +819,7 @@ public void write(IMarkupWriter writer)\n \n             writer.begin(\"tr\");\n             writer.attribute(\"class\", getRowClass());\n-            writer.begin(\"td\");\n+            writer.begin(\"th\");\n             writer.print(name);\n             writer.end();\n             writer.begin(\"td\");",
                "deletions": 1
            },
            {
                "sha": "066ad9165839549c3d607d75376a18c3c61f0cd8",
                "filename": "framework/src/net/sf/tapestry/TapestryStrings.properties",
                "blob_url": "https://github.com/apache/tapestry3/blob/46a8f312c2bc1f4de03e4cb19323c2aaec060eaf/framework/src/net/sf/tapestry/TapestryStrings.properties",
                "raw_url": "https://github.com/apache/tapestry3/raw/46a8f312c2bc1f4de03e4cb19323c2aaec060eaf/framework/src/net/sf/tapestry/TapestryStrings.properties",
                "status": "modified",
                "changes": 2,
                "additions": 1,
                "contents_url": "https://api.github.com/repos/apache/tapestry3/contents/framework/src/net/sf/tapestry/TapestryStrings.properties?ref=46a8f312c2bc1f4de03e4cb19323c2aaec060eaf",
                "patch": "@@ -331,7 +331,7 @@ AbstractDocumentParser.invalid-identifier={0} is not a valid identifier (in elem\n # net.sf.tapestry.valid\n \n FieldLabel.no-display-name=Display name not specified and not provided by field {0}.\n-\n+ValidField.no-delegate=No IValidationDelegate is available to ValidField {0}; it is specified as the delegate parameter of Form {1}.\n \n \n ",
                "deletions": 1
            },
            {
                "sha": "835dde12f93543f85b6daa8b19677ad8e9afdb5c",
                "filename": "framework/src/net/sf/tapestry/html/ExceptionDisplay.html",
                "blob_url": "https://github.com/apache/tapestry3/blob/46a8f312c2bc1f4de03e4cb19323c2aaec060eaf/framework/src/net/sf/tapestry/html/ExceptionDisplay.html",
                "raw_url": "https://github.com/apache/tapestry3/raw/46a8f312c2bc1f4de03e4cb19323c2aaec060eaf/framework/src/net/sf/tapestry/html/ExceptionDisplay.html",
                "status": "modified",
                "changes": 71,
                "additions": 45,
                "contents_url": "https://api.github.com/repos/apache/tapestry3/contents/framework/src/net/sf/tapestry/html/ExceptionDisplay.html?ref=46a8f312c2bc1f4de03e4cb19323c2aaec060eaf",
                "patch": "@@ -1,51 +1,70 @@\n <!-- $Id$ -->\n+<html>\n+<link rel=\"stylesheet\" type=\"text/css\" href=\"../pages/Exception.css\">\n \n+<body>\n+\n+<span jwcid=\"$content$\">\n <p>\n \n <table class=\"exception-display\">\n \n-<jwc id=\"e-exception\">\n+<span jwcid=\"e-exception\">\n \t\n-\t\t<tr class=\"property\">\n-\t\t\t<th>Name:</th>\n-\t\t\t<td><jwc id=\"insertClass\"/></td>\n+\t\t<tr class=\"exception-name\">\n+\t\t\t<td colspan=\"2\"><span jwcid=\"insertClass\">some.exception.Class</span></td>\n \t\t</tr>\n \t\t\n-\t\t<tr class=\"property\">\n-\t\t\t<th>Message:</th>\n-\t\t\t<td><jwc id=\"insertMessage\"/></td>\n+\t\t<tr class=\"exception-message\">\n+\t\t\t<td colspan=\"2\"><span jwcid=\"insertMessage\">A message describing the exception.</span></td>\n \t\t</tr>\n-\n-<jwc id=\"e-property\">\n \t\t\n-\t\t<tr class=\"property\">\n-\t\t\t<th><jwc id=\"insertPropertyName\"/>:</th>\n-\t\t\t<td><jwc id=\"insertPropertyValue\"/></td>\n+\t\t<tr jwcid=\"e-property\">\n+\t\t\t<th><span jwcid=\"insertPropertyName\">Property Name</span>:</th>\n+\t\t\t<td><span jwcid=\"insertPropertyValue\">Property Value</span></td>\n+\t\t</tr>\n+\n+\t\t<tr jwcid=\"$remove$\" class=\"odd\">\n+\t\t\t<th>Property Name 2:</th>\n+\t\t\t<td>Property Value 2</td>\n+\t\t</tr>\n+\n+\t\t<tr jwcid=\"$remove$\" class=\"even\">\n+\t\t\t<th>Property Name 3:</th>\n+\t\t\t<td>Property Value 3</td>\n \t\t</tr>\n+\n+\t\t<tr jwcid=\"$remove$\" class=\"odd\">\n+\t\t\t<th>Property Name 4:</th>\n+\t\t\t<td>Property Value 4</td>\n+\t\t</tr>\t\t\n \t\t\n-</jwc>\t\n-\t\n-<jwc id=\"ifNotLast\">\n+<span jwcid=\"ifNotLast\">\n \t\t<tr> <td colspan=2> &nbsp; </td> </tr>\n-</jwc>\n+</span>\n \t\n-<jwc id=\"ifLast\">\n-\t\t<tr class=\"property\">\n-\t\t\t<th>Trace:</th> <td>&nbsp;</td>\n+<span jwcid=\"ifLast\">\n+\t\t<tr class=\"stack-trace-label\">\n+\t\t\t<td colspan=\"2\">Stack Trace:</td>\n \t\t</tr>\n \n \t\t<tr class=\"stack-trace\">\n \t\t\t<td colspan=2>\n \t\t\t\t<ul>\n-\t\t\t\t<jwc id=\"e-stack\">\n-\t\t\t\t\t<li><jwc id=\"insertStackTrace\"/>\n-\t\t\t\t</jwc>\n+\t\t\t\t\t<li jwcid=\"e-stack\"><span jwcid=\"insertStackTrace\">foo.bar.baz(Line:xyz)</span></li>\n+\t\t\t\t\t<li jwcid=\"$remove$\">foo.bar.baz(Line:xyz)</li>\n+\t\t\t\t\t<li jwcid=\"$remove$\">foo.bar.baz(Line:xyz)</li>\n+\t\t\t\t\t<li jwcid=\"$remove$\">foo.bar.baz(Line:xyz)</li>\t\t\t\t\t\n+\t\t\t\t\t<li jwcid=\"$remove$\">foo.bar.baz(Line:xyz)</li>\n \t\t\t\t</ul>\n-\n-\n \t\t\t</td>\n \t\t</tr>\n-</jwc>\n-</jwc>\n+</span> <!-- ifLast -->\n+</span> <!-- e-exception -->\n \n </table>\n+\n+</span> <!-- $content$ -->\n+\n+</body>\n+</html>",
                "deletions": 26
            },
            {
                "sha": "1e33579e8e56a8a37717e7fd07b2485688ec407a",
                "filename": "framework/src/net/sf/tapestry/html/ExceptionDisplay.java",
                "blob_url": "https://github.com/apache/tapestry3/blob/46a8f312c2bc1f4de03e4cb19323c2aaec060eaf/framework/src/net/sf/tapestry/html/ExceptionDisplay.java",
                "raw_url": "https://github.com/apache/tapestry3/raw/46a8f312c2bc1f4de03e4cb19323c2aaec060eaf/framework/src/net/sf/tapestry/html/ExceptionDisplay.java",
                "status": "modified",
                "changes": 24,
                "additions": 22,
                "contents_url": "https://api.github.com/repos/apache/tapestry3/contents/framework/src/net/sf/tapestry/html/ExceptionDisplay.java?ref=46a8f312c2bc1f4de03e4cb19323c2aaec060eaf",
                "patch": "@@ -30,6 +30,7 @@\n import net.sf.tapestry.IMarkupWriter;\n import net.sf.tapestry.IRequestCycle;\n import net.sf.tapestry.RequestCycleException;\n+import net.sf.tapestry.bean.EvenOdd;\n import net.sf.tapestry.util.exception.ExceptionDescription;\n \n /**\n@@ -46,6 +47,7 @@\n     private ExceptionDescription exception;\n     private int count;\n     private int index;\n+    private EvenOdd evenOdd;\n \n     public void setExceptionsBinding(IBinding value)\n     {\n@@ -57,9 +59,17 @@ public IBinding getExceptionsBinding()\n         return exceptionsBinding;\n     }\n \n+    /**\n+     *  Each time the current exception is set, as a side effect,\n+     *  the evenOdd helper bean is reset to even.\n+     * \n+     **/\n+    \n     public void setException(ExceptionDescription value)\n     {\n         exception = value;\n+        \n+        evenOdd.setEven(true);\n     }\n \n     public ExceptionDescription getException()\n@@ -76,8 +86,18 @@ protected void renderComponent(IMarkupWriter writer, IRequestCycle cycle)\n                 ExceptionDescription[].class);\n \n         count = exceptions.length;\n-\n-        super.renderComponent(writer, cycle);\n+        \n+        try\n+        {\n+            evenOdd = (EvenOdd)getBeans().getBean(\"evenOdd\");\n+            \n+            super.renderComponent(writer, cycle);\n+        }\n+        finally\n+        {\n+            exception = null;\n+            evenOdd = null;\n+        }\n     }\n \n     public void setIndex(int value)",
                "deletions": 2
            },
            {
                "sha": "362413735414d5a5d26e647decdd818255374edf",
                "filename": "framework/src/net/sf/tapestry/html/ExceptionDisplay.jwc",
                "blob_url": "https://github.com/apache/tapestry3/blob/46a8f312c2bc1f4de03e4cb19323c2aaec060eaf/framework/src/net/sf/tapestry/html/ExceptionDisplay.jwc",
                "raw_url": "https://github.com/apache/tapestry3/raw/46a8f312c2bc1f4de03e4cb19323c2aaec060eaf/framework/src/net/sf/tapestry/html/ExceptionDisplay.jwc",
                "status": "modified",
                "changes": 10,
                "additions": 9,
                "contents_url": "https://api.github.com/repos/apache/tapestry3/contents/framework/src/net/sf/tapestry/html/ExceptionDisplay.jwc?ref=46a8f312c2bc1f4de03e4cb19323c2aaec060eaf",
                "patch": "@@ -1,6 +1,9 @@\n <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n <!-- $Id$ -->\n-<!DOCTYPE specification PUBLIC \"-//Howard Ship//Tapestry Specification 1.1//EN\" \"http://tapestry.sf.net/dtd/Tapestry_1_1.dtd\">\n+<!DOCTYPE specification PUBLIC \n+\t\"-//Howard Lewis Ship//Tapestry Specification 1.2//EN\" \n+\t\t\"http://tapestry.sf.net/dtd/Tapestry_1_2.dtd\">\n+\t\t\n <specification class=\"net.sf.tapestry.html.ExceptionDisplay\" \n \tallow-body=\"no\" \n \tallow-informal-parameters=\"no\">\n@@ -15,6 +18,8 @@\n     </description>\n   </parameter>\n   \n+  <bean name=\"evenOdd\" class=\"net.sf.tapestry.bean.EvenOdd\"/>\n+    \n   <component id=\"e-exception\" type=\"Foreach\">\n     <inherited-binding name=\"source\" parameter-name=\"exceptions\"/>\n     <binding name=\"value\" property-path=\"exception\"/>\n@@ -30,6 +35,8 @@\n   </component>\n   \n   <component id=\"e-property\" type=\"Foreach\">\n+  \t<static-binding name=\"element\">tr</static-binding>\n+  \t<binding name=\"class\" property-path=\"beans.evenOdd.next\"/>\n     <binding name=\"source\" property-path=\"exception.properties\"/>\n   </component>\n   \n@@ -51,6 +58,7 @@\n   </component>\n   \n   <component id=\"e-stack\" type=\"Foreach\">\n+    <static-binding name=\"element\">li</static-binding>\n     <binding name=\"source\" property-path=\"exception.stackTrace\"/>\n   </component>\n   ",
                "deletions": 1
            },
            {
                "sha": "4d02c3d519fcf7b8f86c27baa27a233faa437b24",
                "filename": "framework/src/net/sf/tapestry/inspector/Inspector.css",
                "blob_url": "https://github.com/apache/tapestry3/blob/46a8f312c2bc1f4de03e4cb19323c2aaec060eaf/framework/src/net/sf/tapestry/inspector/Inspector.css",
                "raw_url": "https://github.com/apache/tapestry3/raw/46a8f312c2bc1f4de03e4cb19323c2aaec060eaf/framework/src/net/sf/tapestry/inspector/Inspector.css",
                "status": "modified",
                "changes": 30,
                "additions": 23,
                "contents_url": "https://api.github.com/repos/apache/tapestry3/contents/framework/src/net/sf/tapestry/inspector/Inspector.css?ref=46a8f312c2bc1f4de03e4cb19323c2aaec060eaf",
                "patch": "@@ -120,24 +120,24 @@ SPAN.request-context-object  {\n TR.request-context-section TH  {\n \ttext-align : center;\n \tcolor : White;\n-\tbackground-color : \"#330066\";\n+\tbackground-color : Blue;\n }\n \n TR.request-context-header TH  {\n \ttext-align : center;\n \tcolor : White;\n-\tbackground-color : \"#330066\";\n+\tbackground-color : Blue;\n }\n \n TABLE.request-context-object TR.odd TD  {\n \ttext-align : left;\n \tcolor : Black;\n-\tbackground-color : Silver;\n+\tbackground-color : #C0C0FF;\n }\n \n TABLE.request-context-object TR.odd TH  {\n \tcolor : Black;\n-\tbackground-color : Silver;\n+\tbackground-color : #C0C0FF;\n \ttext-align : right;\n }\n \n@@ -158,16 +158,32 @@ TABLE.request-context-object TR  {\n \tvertical-align : text-top;\n }\n \n-TABLE.exception-display TR.property  {\n+TABLE.exception-display TR.even  {\n \ttop : auto;\n }\n \n-TABLE.exception-display TR.property TH  {\n+TABLE.exception-displaY TD\n+{\n+\twidth: 100%;\n+}\n+\n+TABLE.exception-display TR.even TH  {\n+\ttext-align : right;\n+\tfont-weight : bold;\n+}\n+\n+TABLE.exception-display TR.odd TD  {\n+\ttext-align : left;\n+\tbackground-color : #C0C0FF;\n+}\n+\n+TABLE.exception-display TR.odd TH  {\n \ttext-align : right;\n \tfont-weight : bold;\n+\tbackground-color : #C0C0FF;\t\n }\n \n-TABLE.exception-display TR.property TD  {\n+TABLE.exception-display TR.even TD  {\n \ttext-align : left;\n }\n ",
                "deletions": 7
            },
            {
                "sha": "e6f19213aa864a1a212398afd30b38af466dc8a4",
                "filename": "framework/src/net/sf/tapestry/pages/Exception.css",
                "blob_url": "https://github.com/apache/tapestry3/blob/46a8f312c2bc1f4de03e4cb19323c2aaec060eaf/framework/src/net/sf/tapestry/pages/Exception.css",
                "raw_url": "https://github.com/apache/tapestry3/raw/46a8f312c2bc1f4de03e4cb19323c2aaec060eaf/framework/src/net/sf/tapestry/pages/Exception.css",
                "status": "modified",
                "changes": 68,
                "additions": 54,
                "contents_url": "https://api.github.com/repos/apache/tapestry3/contents/framework/src/net/sf/tapestry/pages/Exception.css?ref=46a8f312c2bc1f4de03e4cb19323c2aaec060eaf",
                "patch": "@@ -16,18 +16,23 @@ A:Hover  {}\n \n BODY  {}\n \n-TABLE.exception-display TR.property  {\n+TABLE.exception-display TR.even  {\n \ttop : auto;\n-\tbackground-color : Silver;\n }\n \n-TABLE.exception-display TR.property TH  {\n+TABLE.exception-display TR.odd  {\n+\ttop : auto;\n+\tbackground-color : #C0C0FF;\n+}\n+\n+TABLE.exception-display TH  {\n \ttext-align : right;\n \tfont-weight : bold;\n }\n \n-TABLE.exception-display TR.property TD  {\n+TABLE.exception-display TD  {\n \ttext-align : left;\n+\twidth : 100%;\t\n }\n \n TABLE.exception-display TR.stack-trace  {\n@@ -60,7 +65,7 @@ TR.request-context-section TH  {\n \tfont-weight : bold;\n \ttext-align : center;\n \tcolor : White;\n-\tbackground-color : Black;\n+\tbackground-color : Blue;\n }\n \n TR.request-context-header TH  {\n@@ -69,18 +74,24 @@ TR.request-context-header TH  {\n \tfont-weight : bold;\n \ttext-align : center;\n \tcolor : White;\n-\tbackground-color : Black;\n+\tbackground-color : Blue;\n+}\n+\n+TABLE.request-context-object TD\n+{\n+\twidth: 100%;\n }\n \n TABLE.request-context-object TR.odd TD  {\n \ttext-align : left;\n \tcolor : Black;\n-\tbackground-color : Silver;\n+\tbackground-color : #C0C0FF;\n+\twidth: 100%;\n }\n \n TABLE.request-context-object TR.odd TH  {\n \tcolor : Black;\n-\tbackground-color : Silver;\n+\tbackground-color : #C0C0FF;\n \ttext-align : right;\n }\n \n@@ -100,9 +111,38 @@ TABLE.request-context-object TR  {\n \tvertical-align : text-top;\n }\n \n-UL \n-{\n-\tmargin-top: 0px;\n-\tmargin-bottom: 0px;\n-\tmargin-left: 20px;\n-}\n\\ No newline at end of file\n+UL  {\n+\tmargin-top : 0px;\n+\tmargin-bottom : 0px;\n+\tmargin-left : 20px;\n+}\n+\n+TABLE.exception-display TR.exception-name TD  {\n+\tfont-size : larger;\n+\tfont-weight : bold;\n+\ttext-align : center;\n+\tbackground-color : Blue;\n+\tcolor : White;\n+}\n+\n+TABLE.exception-display  {\n+\twidth : 100%;\n+}\n+\n+TABLE.exception-display TR.exception-message TD  {\n+\tborder-width : 1;\n+\tborder-color : Black;\n+\tborder-style : solid;\n+\tpadding : 2;\n+\ttext-align : left;\n+\tfont-style : italic;\n+}\n+\n+TABLE.exception-display TR.strack-trace-label TD  {\n+\tmargin : 2;\n+\tborder-width : 1;\n+\tborder-color : Black;\n+\tborder-style : solid;\n+\ttext-align : center;\n+}\n+",
                "deletions": 14
            },
            {
                "sha": "0c774de9953a4a0b046c0c57ddd5a7e14dc8dbd0",
                "filename": "framework/src/net/sf/tapestry/valid/ValidField.java",
                "blob_url": "https://github.com/apache/tapestry3/blob/46a8f312c2bc1f4de03e4cb19323c2aaec060eaf/framework/src/net/sf/tapestry/valid/ValidField.java",
                "raw_url": "https://github.com/apache/tapestry3/raw/46a8f312c2bc1f4de03e4cb19323c2aaec060eaf/framework/src/net/sf/tapestry/valid/ValidField.java",
                "status": "modified",
                "changes": 22,
                "additions": 12,
                "contents_url": "https://api.github.com/repos/apache/tapestry3/contents/framework/src/net/sf/tapestry/valid/ValidField.java?ref=46a8f312c2bc1f4de03e4cb19323c2aaec060eaf",
                "patch": "@@ -150,9 +150,7 @@\n  *\n  **/\n \n-public class ValidField\n-    extends AbstractTextField\n-    implements IField, IFormComponent\n+public class ValidField extends AbstractTextField implements IField, IFormComponent\n {\n     private IBinding valueBinding;\n \n@@ -190,7 +188,7 @@ public void setDisplayNameBinding(IBinding value)\n      *  is direction custom, allowing it to be resolved even when not renderring.\n      * \n      **/\n-    \n+\n     public String getDisplayName()\n     {\n         // Return the static value, if known.\n@@ -203,15 +201,14 @@ public String getDisplayName()\n         return displayNameBinding.getString();\n     }\n \n-\n     /**\n      *\n-     * Renders the component, which involves the {@link IValidationDelegate delegate}.\n+     *  Renders the component, which involves the {@link IValidationDelegate delegate}.\n      *\n-     * <p>During a render, the <em>first</em> field rendered that is either\n-     * in error, or required but null gets special treatment.  JavaScript is added\n-     * to select that field (such that the cursor jumps right to the field when the\n-     * page loads).\n+     *  <p>During a render, the <em>first</em> field rendered that is either\n+     *  in error, or required but null gets special treatment.  JavaScript is added\n+     *  to select that field (such that the cursor jumps right to the field when the\n+     *  page loads).\n      *\n      **/\n \n@@ -220,6 +217,11 @@ protected void renderComponent(IMarkupWriter writer, IRequestCycle cycle)\n     {\n         IValidationDelegate delegate = getForm().getDelegate();\n \n+        if (delegate == null)\n+            throw new RequestCycleException(\n+                Tapestry.getString(\"ValidField.no-delegate\", getExtendedId(), getForm().getExtendedId()),\n+                this);\n+\n         String displayName = null;\n \n         boolean rendering = !cycle.isRewinding();",
                "deletions": 10
            }
        ]
    },
    {
        "repo": "tapestry3",
        "message": "[ 549482 ] NPE in RequestCycle.observeChange()\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/tapestry/trunk@242522 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/tapestry3/commit/c63e0e0126d72f2c9fd24b0c0787540f1d56e9f2",
        "parent": "https://github.com/apache/tapestry3/commit/2ceec2df4ad58a7df7bfdf3b6f9e23c8f6b80efe",
        "bug_id": "tapestry3_7",
        "file": [
            {
                "sha": "783eaad5803c56888cee0dac4a9bd47600c6613b",
                "filename": "config/Version.properties",
                "blob_url": "https://github.com/apache/tapestry3/blob/c63e0e0126d72f2c9fd24b0c0787540f1d56e9f2/config/Version.properties",
                "raw_url": "https://github.com/apache/tapestry3/raw/c63e0e0126d72f2c9fd24b0c0787540f1d56e9f2/config/Version.properties",
                "status": "modified",
                "changes": 2,
                "additions": 1,
                "contents_url": "https://api.github.com/repos/apache/tapestry3/contents/config/Version.properties?ref=c63e0e0126d72f2c9fd24b0c0787540f1d56e9f2",
                "patch": "@@ -2,4 +2,4 @@\n #\n # Stores the version number of the framework.\n \n-framework.version=2.0.2\n+framework.version=2.0.2a",
                "deletions": 1
            },
            {
                "sha": "5624edb1fe7d7e7249852bc84503a41ed257e023",
                "filename": "framework/src/com/primix/tapestry/engine/RequestCycle.java",
                "blob_url": "https://github.com/apache/tapestry3/blob/c63e0e0126d72f2c9fd24b0c0787540f1d56e9f2/framework/src/com/primix/tapestry/engine/RequestCycle.java",
                "raw_url": "https://github.com/apache/tapestry3/raw/c63e0e0126d72f2c9fd24b0c0787540f1d56e9f2/framework/src/com/primix/tapestry/engine/RequestCycle.java",
                "status": "modified",
                "changes": 41,
                "additions": 34,
                "contents_url": "https://api.github.com/repos/apache/tapestry3/contents/framework/src/com/primix/tapestry/engine/RequestCycle.java?ref=c63e0e0126d72f2c9fd24b0c0787540f1d56e9f2",
                "patch": "@@ -304,6 +304,34 @@ protected IPageRecorder getPageRecorder(String name)\n \t\treturn result;\n \t}\n \n+\t/** \n+\t * \n+\t *  Gets the page recorder from the loadedRecorders cache, or from the engine\n+\t *  (putting it into loadedRecorders).  If the recorder does not yet exist,\n+\t *  it is created.\n+\t * \n+\t *  @see IEngine#createPageRecorder(String, IRequestCycle)\n+\t *  @since 2.0.3\n+\t * \n+\t **/\n+\n+\tprivate IPageRecorder createPageRecorder(String name)\n+\t{\n+\t\tIPageRecorder result = getPageRecorder(name);\n+\n+\t\tif (result == null)\n+\t\t{\n+\t\t\tresult = engine.createPageRecorder(name, this);\n+\n+\t\t\tif (loadedRecorders == null)\n+\t\t\t\tloadedRecorders = new HashMap();\n+\n+\t\t\tloadedRecorders.put(name, result);\n+\t\t}\n+\n+\t\treturn result;\n+\t}\n+\n \tpublic RequestContext getRequestContext()\n \t{\n \t\treturn requestContext;\n@@ -633,14 +661,13 @@ public void observeChange(ObservedChangeEvent event)\n \t\tif (CAT.isDebugEnabled())\n \t\t\tCAT.debug(\"Observed change in page \" + pageName + \"; creating page recorder.\");\n \n-\t\tIPageRecorder recorder = getPageRecorder(pageName);\n-         \n+\t\tIPageRecorder recorder = createPageRecorder(pageName);\n+\n \t\tpage.setChangeObserver(recorder);\n \n \t\trecorder.observeChange(event);\n \t}\n \n-\n \t/**\n \t *  Finds the page and its page recorder, creating the page recorder if necessary.\n \t *  The page recorder is marked for discard regardless of its current state.\n@@ -656,17 +683,17 @@ public void observeChange(ObservedChangeEvent event)\n \n \tpublic void discardPage(String name)\n \t{\n-        if (CAT.isDebugEnabled())\n-            CAT.debug(\"Discarding page \" + name);\n-            \n+\t\tif (CAT.isDebugEnabled())\n+\t\t\tCAT.debug(\"Discarding page \" + name);\n+\n \t\tIPageRecorder recorder = engine.getPageRecorder(name);\n \n \t\tif (recorder == null)\n \t\t{\n \n \t\t\tpage = getPage(name);\n \n-\t\t\trecorder = engine.createPageRecorder(name, this);\n+\t\t\trecorder = createPageRecorder(name);\n \n \t\t\tpage.setChangeObserver(recorder);\n \t\t}",
                "deletions": 7
            },
            {
                "sha": "5541f149d9f3b34c40556120f7bd170f795b9d99",
                "filename": "web/new.html",
                "blob_url": "https://github.com/apache/tapestry3/blob/c63e0e0126d72f2c9fd24b0c0787540f1d56e9f2/web/new.html",
                "raw_url": "https://github.com/apache/tapestry3/raw/c63e0e0126d72f2c9fd24b0c0787540f1d56e9f2/web/new.html",
                "status": "modified",
                "changes": 4,
                "additions": 4,
                "contents_url": "https://api.github.com/repos/apache/tapestry3/contents/web/new.html?ref=c63e0e0126d72f2c9fd24b0c0787540f1d56e9f2",
                "patch": "@@ -11,6 +11,10 @@\n \t<tr>\n \t\t<td valign=\"top\" align=\"left\"><img height=\"44\" src=\"images/ico_t.gif\" alt=\"[Tapestry Logo]\" width=\"44\" align=\"absMiddle\" border=\"0\">&nbsp;<img height=\"22\" alt=\"Tapestry\" src=\"images/hd_tapestry.gif\" width=\"100\" align=\"absMiddle\" vspace=\"17\" border=\"0\">\n \n+<h3>Release 2.0.2a</h3>\n+\n+[ 549482 ] NPE in RequestCycle.observeChange()\n+\n <h3>Release 2.0.2</h3>\n \n Changed the inspector icon into an animated GIF for compatiblility with more browsers.",
                "deletions": 0
            }
        ]
    },
    {
        "repo": "tapestry3",
        "message": "[ 532562 ] Submit.jwc contains error\n[ 532587 ] Submit throws NPE\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/tapestry/trunk@242454 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/tapestry3/commit/fa1d223e7783eb1fd3e4500023ba3775b868c337",
        "parent": "https://github.com/apache/tapestry3/commit/7913ff033feac8e7e419f550817cd191473e2618",
        "bug_id": "tapestry3_8",
        "file": [
            {
                "sha": "18b9da8552ec19a460ec33fa74021f398d69a669",
                "filename": "framework/src/com/primix/tapestry/form/Submit.java",
                "blob_url": "https://github.com/apache/tapestry3/blob/fa1d223e7783eb1fd3e4500023ba3775b868c337/framework/src/com/primix/tapestry/form/Submit.java",
                "raw_url": "https://github.com/apache/tapestry3/raw/fa1d223e7783eb1fd3e4500023ba3775b868c337/framework/src/com/primix/tapestry/form/Submit.java",
                "status": "modified",
                "changes": 31,
                "additions": 21,
                "contents_url": "https://api.github.com/repos/apache/tapestry3/contents/framework/src/com/primix/tapestry/form/Submit.java?ref=fa1d223e7783eb1fd3e4500023ba3775b868c337",
                "patch": "@@ -215,16 +215,27 @@ public void render(IResponseWriter writer, IRequestCycle cycle)\n \t\t\tif (value == null)\n \t\t\t\treturn;\n \n-\t\t\t// OK, now to notify the application code (via the parameters)\n-\t\t\t// that *this* Submit was selected.  We do this by applying\n-\t\t\t// a tag (presumably, specific to the Submit in question)\n-\t\t\t// to the selected binding.\n-\n-\t\t\tif (tagValue == null)\n-\t\t\t\ttagValue = tagBinding.getObject();\n-\n-\t\t\tif (tagValue != null)\n-\t\t\t\tselectedBinding.setObject(tagValue);\n+\t\t\tif (selectedBinding != null)\n+    \t\t\t{\n+    \t\t\t// OK, now to notify the application code (via the parameters)\n+    \t\t\t// that *this* Submit was selected.  We do this by applying\n+    \t\t\t// a tag (presumably, specific to the Submit in question)\n+    \t\t\t// to the selected binding.\n+    \n+\t\t\t\tif (tagBinding == null)\n+\t\t\t\t\tthrow new RequestCycleException(\n+\t\t\t\t\t\t\"The tag parameter is required if the selected parameter is bound.\",\n+\t\t\t\t\t\tthis);\n+\n+    \t\t\tif (tagValue == null)\n+    \t\t\t\ttagValue = tagBinding.getObject();\n+    \n+ \t\t\t\tif (tagValue == null)\n+\t\t\t\t\tthrow new RequiredParameterException(this, \"tag\", tagBinding);\n+\n+\t   \t\t\tif (tagValue != null)\n+    \t\t\t\tselectedBinding.setObject(tagValue);\n+\t\t\t}\n \n \t\t\tif (listenerBinding != null)\n \t\t\t{",
                "deletions": 10
            },
            {
                "sha": "064c6d4fc05697b1797b27ddff16d3ad1ba215d7",
                "filename": "framework/src/com/primix/tapestry/form/Submit.jwc",
                "blob_url": "https://github.com/apache/tapestry3/blob/fa1d223e7783eb1fd3e4500023ba3775b868c337/framework/src/com/primix/tapestry/form/Submit.jwc",
                "raw_url": "https://github.com/apache/tapestry3/raw/fa1d223e7783eb1fd3e4500023ba3775b868c337/framework/src/com/primix/tapestry/form/Submit.jwc",
                "status": "modified",
                "changes": 4,
                "additions": 2,
                "contents_url": "https://api.github.com/repos/apache/tapestry3/contents/framework/src/com/primix/tapestry/form/Submit.jwc?ref=fa1d223e7783eb1fd3e4500023ba3775b868c337",
                "patch": "@@ -4,8 +4,8 @@\n <specification class=\"com.primix.tapestry.form.Submit\" allow-body=\"no\">\n   <parameter name=\"label\" java-type=\"java.lang.String\"/>\n   <parameter name=\"disabled\"/>\n-  <parameter name=\"selected\">\n-  <parameter name=\"tag\">\n+  <parameter name=\"selected\"/>\n+  <parameter name=\"tag\"/>\n   <parameter name=\"listener\" java-type=\"com.primix.tapestry.IActionListener\"/>\n   \n   <reserved-parameter name=\"name\"/>",
                "deletions": 2
            }
        ]
    },
    {
        "repo": "tapestry3",
        "message": "Fix a NullPointerException in SimpleApplication.cleanupAfterRequest().  The exception may be thrown\nif another exception is thrown earlier in the request cycle (before any page recoders are accessed).\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/tapestry/trunk@241921 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/tapestry3/commit/362f9cf7e6a4e1dae65f9d656666d35add4c301c",
        "parent": "https://github.com/apache/tapestry3/commit/a8e9a47a6a52791554c67933fb041adf82e3b86a",
        "bug_id": "tapestry3_9",
        "file": [
            {
                "sha": "700360f7bcdb363c6380fe2519921ee81b540c7e",
                "filename": "framework/ChangeLog",
                "blob_url": "https://github.com/apache/tapestry3/blob/362f9cf7e6a4e1dae65f9d656666d35add4c301c/framework/ChangeLog",
                "raw_url": "https://github.com/apache/tapestry3/raw/362f9cf7e6a4e1dae65f9d656666d35add4c301c/framework/ChangeLog",
                "status": "modified",
                "changes": 5,
                "additions": 5,
                "contents_url": "https://api.github.com/repos/apache/tapestry3/contents/framework/ChangeLog?ref=362f9cf7e6a4e1dae65f9d656666d35add4c301c",
                "patch": "@@ -1,5 +1,10 @@\n * Oct 4 2000 hship\n \n+Fix a NullPointerException in SimpleApplication.cleanupAfterRequest().  The exception may be thrown\n+if another exception is thrown earlier in the request cycle (before any page recoders are accessed).\n+\n+* Oct 4 2000 hship\n+\n Revise Submit and ImageButton components to set a property if clicked, remove\n listener parameters from Form-related components.\n ",
                "deletions": 0
            },
            {
                "sha": "02190fd7709259601b27938374fc0b9569961082",
                "filename": "framework/src/com/primix/tapestry/app/SimpleApplication.java",
                "blob_url": "https://github.com/apache/tapestry3/blob/362f9cf7e6a4e1dae65f9d656666d35add4c301c/framework/src/com/primix/tapestry/app/SimpleApplication.java",
                "raw_url": "https://github.com/apache/tapestry3/raw/362f9cf7e6a4e1dae65f9d656666d35add4c301c/framework/src/com/primix/tapestry/app/SimpleApplication.java",
                "status": "modified",
                "changes": 3,
                "additions": 3,
                "contents_url": "https://api.github.com/repos/apache/tapestry3/contents/framework/src/com/primix/tapestry/app/SimpleApplication.java?ref=362f9cf7e6a4e1dae65f9d656666d35add4c301c",
                "patch": "@@ -85,6 +85,9 @@ protected void cleanupAfterRequest(IRequestCycle cycle)\n \t\tMap.Entry entry;\n \t\tIPageRecorder recorder;\n \t\t\n+        if (recorders == null)\n+            return;\n+\n \t\ti = recorders.entrySet().iterator();\n \t\t\n \t\twhile (i.hasNext())",
                "deletions": 0
            }
        ]
    },
    {
        "repo": "tapestry3",
        "message": "Fix NullPointerException when the Home page does NOT throw an exception inside validate().\nChange the signature for AbstractApplication.cleanupAfterRequest to include the IRequestCycle.\nUndo the [114878] fix, since it uses servlet 2.2 only API.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/tapestry/trunk@241917 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/tapestry3/commit/d4a3651ed863531de57db48d14f0c509ed7adf3a",
        "parent": "https://github.com/apache/tapestry3/commit/293a592c2344ceb4c380f622b302cea88de25fcd",
        "bug_id": "tapestry3_10",
        "file": [
            {
                "sha": "65a05fd8e86500c9f6e735d3472fb099810f9faa",
                "filename": "framework/ChangeLog",
                "blob_url": "https://github.com/apache/tapestry3/blob/d4a3651ed863531de57db48d14f0c509ed7adf3a/framework/ChangeLog",
                "raw_url": "https://github.com/apache/tapestry3/raw/d4a3651ed863531de57db48d14f0c509ed7adf3a/framework/ChangeLog",
                "status": "modified",
                "changes": 13,
                "additions": 13,
                "contents_url": "https://api.github.com/repos/apache/tapestry3/contents/framework/ChangeLog?ref=d4a3651ed863531de57db48d14f0c509ed7adf3a",
                "patch": "@@ -1,3 +1,16 @@\n+* Sep 26 2000 hship\n+\n+Fix NullPointerException when the Home page does NOT throw an exception inside validate().\n+\n+* Sep 25 2000 hship\n+\n+Change the signature for AbstractApplication.cleanupAfterRequest to include the IRequestCycle.\n+Undo the [114878] fix, since it uses servlet 2.2 only API.\n+\n+* Sep 24 2000 hship\n+\n+[114878] com.primix.tapestry.context-path should be for context \n+\n * Sep 24 2000 hship\n \n [115140] Home service must validate()",
                "deletions": 0
            },
            {
                "sha": "22fca4b69612e5c2c239ed73acd0210450b0fc5d",
                "filename": "framework/src/com/primix/tapestry/app/AbstractApplication.java",
                "blob_url": "https://github.com/apache/tapestry3/blob/d4a3651ed863531de57db48d14f0c509ed7adf3a/framework/src/com/primix/tapestry/app/AbstractApplication.java",
                "raw_url": "https://github.com/apache/tapestry3/raw/d4a3651ed863531de57db48d14f0c509ed7adf3a/framework/src/com/primix/tapestry/app/AbstractApplication.java",
                "status": "modified",
                "changes": 51,
                "additions": 26,
                "contents_url": "https://api.github.com/repos/apache/tapestry3/contents/framework/src/com/primix/tapestry/app/AbstractApplication.java?ref=d4a3651ed863531de57db48d14f0c509ed7adf3a",
                "patch": "@@ -107,7 +107,7 @@\n \n \t/**\n \t*  Servlet context attribute name for the default {@link ITemplateSource}\n-\t*  instance.\n+\t*  instance.  The application's name is appended.\n \t*\n \t*/\n \n@@ -116,7 +116,7 @@\n \n \t/**\n \t*  Servlet context attribute name for the default {@link ISpecificationSource}\n-\t*  instance.\n+\t*  instance.  The application's name is appended.\n \t*\n \t*/\n \n@@ -233,8 +233,9 @@ public void service(IRequestCycle cycle, ResponseOutputStream output)\n \n \t\t\thome.validate(cycle);\n \n-\t\t\t// If that worked, then render it.\n+\t\t\t// If it validates, then redner it.\n \n+\t\t\tcycle.setPage(home);\n \t\t\trender(cycle, output);\n \n \t\t\tif (monitor != null)\n@@ -496,7 +497,7 @@ protected void reportException(String reportTitle, Throwable e)\n \t*\n \t*/\n \n-\tprotected abstract void cleanupAfterRequest();\n+\tprotected abstract void cleanupAfterRequest(IRequestCycle cycle);\n \n \t/**\n \t*  Invoked by {@link #getService(String)} to construct a named service.  This method\n@@ -564,10 +565,7 @@ protected IApplicationService constructService(String name)\n \n \tpublic void extendDescription(StringBuffer buffer)\n \t{\n-\t\tif (specification == null)\n-\t\t\tbuffer.append(\"<specification not loaded>\");\n-\t\telse\n-\t\t\tbuffer.append(specification.getName());\n+\t\tbuffer.append(specification.getName());\n \n \t\tif (sessionId != null)\n \t\t{\n@@ -899,7 +897,7 @@ public void service(RequestContext context) throws ServletException, IOException\n \t\t\tif (output != null)\n \t\t\t\toutput.forceClose();\n \t\t\t\t\n-\t\t\tcleanupAfterRequest();\n+\t\t\tcleanupAfterRequest(cycle);\n \n \t\t}\n \n@@ -1125,6 +1123,7 @@ private void reset(IRequestCycle cycle)\n \t\tRequestContext context;\n \t\tServletContext servletContext;\n \t\tIMonitor monitor;\n+\t\tString name;\n \n \t\tmonitor = cycle.getMonitor();\n \n@@ -1135,8 +1134,10 @@ private void reset(IRequestCycle cycle)\n \n \t\tservletContext = context.getServlet().getServletContext();\n \n-\t\tservletContext.removeAttribute(TEMPLATE_SOURCE_NAME);\n-\t\tservletContext.removeAttribute(SPECIFICATION_SOURCE_NAME);\n+\t\tname = specification.getName();\n+\n+\t\tservletContext.removeAttribute(TEMPLATE_SOURCE_NAME + \".\" + name);\n+\t\tservletContext.removeAttribute(SPECIFICATION_SOURCE_NAME + \".\" + name);\n \t\tservletContext.removeAttribute(PAGE_SOURCE_NAME + \".\" + specification.getName());\n \n \t\trestart(cycle);\n@@ -1172,7 +1173,7 @@ public void setLocale(Locale value)\n \t*  <p>The context path is only defined under Servlet API 2.2.  It can\n \t*  be accessed via the method {@link HttpServletRequest#getContextPath()}.\n \t*  Since Tapestry is designed to work with Servlet API 2.1, we don't use this.\n-\t*  Instead, we require that the servlet initial parameter\n+\t*  Instead, we require that the <i>context</i> initial parameter\n \t* <code>com.primix.tapestry.context-path</code> be defined with the\n \t* correct value, typically \"/<i>webapp</i>\".\n \t*\n@@ -1201,6 +1202,7 @@ protected void setupForRequest(RequestContext context)\n \t\tServletContext servletContext = null;\n \t\tString name;\n \t\tString servletPath;\n+\t\tString applicationName;\n \n \t\tservlet = context.getServlet();\n \t\t\n@@ -1210,49 +1212,48 @@ protected void setupForRequest(RequestContext context)\n \t\t{\n \t\t\tservletPath = context.getRequest().getServletPath();\n \n-\t\t\tcontextPath = servlet.getInitParameter(\"com.primix.tapestry.context-path\");\n+\t\t\tcontextPath = servlet.getInitParameter(\n+\t\t\t\t\"com.primix.tapestry.context-path\");\n \t\t\t\n \t\t\tif (contextPath == null)\n \t\t\t\tservletPrefix = servletPath;\n \t\t\telse\n \t\t\t\tservletPrefix = contextPath + servletPath;\n \t\t}\t\n \n-\t\t// Need to redo a bunch of this because of class loader issues related\n-\t\t// to IResourceResolver.  Each Tapestry app will need its own template source\n-\t\t// and page source.  Possibly, there should be chaining, such that templates\n-\t\t// and specifications provided by the framework can come from dedicated\n-\t\t// sources .. this allows greater sharing.  Somewhat academic though, since\n-\t\t// typically only a single Tapestry application will be running within\n-\t\t// a single servlet container or ServletContext.\n+\t\tapplicationName = specification.getName();\n \n \t\tif (templateSource == null)\n \t\t{\n+\t\t\tname = TEMPLATE_SOURCE_NAME + \".\" + applicationName;\n+\n \t\t\ttemplateSource = \n-\t\t\t\t(ITemplateSource)servletContext.getAttribute(TEMPLATE_SOURCE_NAME);\n+\t\t\t\t(ITemplateSource)servletContext.getAttribute(name);\n \n \t\t\tif (templateSource == null)\n \t\t\t\ttemplateSource = new DefaultTemplateSource(getResourceResolver());\n \n-\t\t\tservletContext.setAttribute(TEMPLATE_SOURCE_NAME, templateSource);\n+\t\t\tservletContext.setAttribute(name, templateSource);\n \t\t}\n \n \t\tif (specificationSource == null)\n \t\t{\n+\t\t\tname = SPECIFICATION_SOURCE_NAME + \".\" + applicationName;\n+\n \t\t\tspecificationSource = \n-\t\t\t\t(ISpecificationSource)servletContext.getAttribute(SPECIFICATION_SOURCE_NAME);\n+\t\t\t\t(ISpecificationSource)servletContext.getAttribute(name);\n \n \t\t\tif (specificationSource == null)\n \t\t\t\tspecificationSource = \n \t\t\t\tnew DefaultSpecificationSource(getResourceResolver(), \n                 \tspecification);\n \n-\t\t\tservletContext.setAttribute(SPECIFICATION_SOURCE_NAME, specificationSource);\n+\t\t\tservletContext.setAttribute(name, specificationSource);\n \t\t}\n \n \t\tif (pageSource == null)\n \t\t{\n-\t\t\tname = PAGE_SOURCE_NAME + \".\" + specification.getName();\n+\t\t\tname = PAGE_SOURCE_NAME + \".\" + applicationName;\n \n \t\t\tpageSource = (PageSource)servletContext.getAttribute(name);\n ",
                "deletions": 25
            },
            {
                "sha": "88c317a54fadd1e147dd2b3d85d125e5dfb0c1a2",
                "filename": "framework/src/com/primix/tapestry/app/SimpleApplication.java",
                "blob_url": "https://github.com/apache/tapestry3/blob/d4a3651ed863531de57db48d14f0c509ed7adf3a/framework/src/com/primix/tapestry/app/SimpleApplication.java",
                "raw_url": "https://github.com/apache/tapestry3/raw/d4a3651ed863531de57db48d14f0c509ed7adf3a/framework/src/com/primix/tapestry/app/SimpleApplication.java",
                "status": "modified",
                "changes": 2,
                "additions": 1,
                "contents_url": "https://api.github.com/repos/apache/tapestry3/contents/framework/src/com/primix/tapestry/app/SimpleApplication.java?ref=d4a3651ed863531de57db48d14f0c509ed7adf3a",
                "patch": "@@ -79,7 +79,7 @@ public SimpleApplication(RequestContext context, Locale locale)\n \t*\n \t*/\n \n-\tprotected void cleanupAfterRequest()\n+\tprotected void cleanupAfterRequest(IRequestCycle cycle)\n \t{\n \t\tIterator i;\n \t\tMap.Entry entry;",
                "deletions": 1
            }
        ]
    },
    {
        "repo": "tapestry3",
        "message": "[29871] Fix NPE in ValidationDelegate when the form has errors recorded for fields that did not render.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/tapestry/branches/branch-3-0@243926 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/tapestry3/commit/0052de79ef91790bb2fab38d237f48e46036455e",
        "parent": "https://github.com/apache/tapestry3/commit/9f6cb54118d084f48964c8595ce38d7c0c80a488",
        "bug_id": "tapestry3_11",
        "file": [
            {
                "sha": "986bdb0248d0e026853a302b6894507847f399d6",
                "filename": "framework/src/org/apache/tapestry/valid/ValidationDelegate.java",
                "blob_url": "https://github.com/apache/tapestry3/blob/0052de79ef91790bb2fab38d237f48e46036455e/framework/src/org/apache/tapestry/valid/ValidationDelegate.java",
                "raw_url": "https://github.com/apache/tapestry3/raw/0052de79ef91790bb2fab38d237f48e46036455e/framework/src/org/apache/tapestry/valid/ValidationDelegate.java",
                "status": "modified",
                "changes": 2,
                "additions": 1,
                "contents_url": "https://api.github.com/repos/apache/tapestry3/contents/framework/src/org/apache/tapestry/valid/ValidationDelegate.java?ref=0052de79ef91790bb2fab38d237f48e46036455e",
                "patch": "@@ -262,7 +262,7 @@ protected FieldTracking findCurrentTracking()\n         if (_trackingMap == null)\n             _trackingMap = new HashMap();\n \n-        if (_currentComponent == null)\n+        if (_currentComponent == null || _currentComponent.getName() == null)\n         {\n             result = new FieldTracking();\n ",
                "deletions": 1
            },
            {
                "sha": "51843bfab98c3027a585abfd085bc22170a3220e",
                "filename": "junit/src/org/apache/tapestry/junit/valid/TestValidationDelegate.java",
                "blob_url": "https://github.com/apache/tapestry3/blob/0052de79ef91790bb2fab38d237f48e46036455e/junit/src/org/apache/tapestry/junit/valid/TestValidationDelegate.java",
                "raw_url": "https://github.com/apache/tapestry3/raw/0052de79ef91790bb2fab38d237f48e46036455e/junit/src/org/apache/tapestry/junit/valid/TestValidationDelegate.java",
                "status": "modified",
                "changes": 29,
                "additions": 28,
                "contents_url": "https://api.github.com/repos/apache/tapestry3/contents/junit/src/org/apache/tapestry/junit/valid/TestValidationDelegate.java?ref=0052de79ef91790bb2fab38d237f48e46036455e",
                "patch": "@@ -30,7 +30,6 @@\n  * \n  *\n  *  @author Howard Lewis Ship\n- *  @version $Id$\n  *  @since 1.0.8\n  *\n  **/\n@@ -165,6 +164,34 @@ public void testUnassociatedErrors()\n         assertEquals(1, trackings.size());\n         assertEquals(t0, trackings.get(0));\n     }\n+    \n+\t/**\n+\t * In rare cases, you may add errors even though the page hasn't rendered and that's\n+\t * was causing a NPE.\n+\t */\n+    public void testComponentNotRecorded()\n+    {\n+    \t// This mock field neaver rendered, so it does not have a Form-assigned name.\n+    \t\n+\t\tIFormComponent f = new MockField(null);\n+\t\t\n+\t\td.setFormComponent(f);\n+\t\td.record(\"Never rendered.\", ValidationConstraint.CONSISTENCY);\n+\t\t\n+\t\tassertEquals(true, d.getHasErrors());\n+\t\t\n+\t\tList fieldTracking = d.getFieldTracking();\n+\t\tassertEquals(1, fieldTracking.size());\n+\t\t\n+\t\tList trackings = d.getUnassociatedTrackings();\n+\t\tassertEquals(1, trackings.size());\n+\t\t\n+\t\tIFieldTracking t = (IFieldTracking)trackings.get(0);\n+\t\t\n+\t\tassertEquals(null, t.getComponent());\n+\t\tassertEquals(true, t.isInError());\n+\t\tcheckRender(\"Never rendered.\", t);\n+    }\n \n     private void checkRender(String errorMessage, IFieldTracking tracking)\n     {",
                "deletions": 1
            },
            {
                "sha": "9e7cd6be3890db47883a8f2c5c88fee1b3983a35",
                "filename": "status.xml",
                "blob_url": "https://github.com/apache/tapestry3/blob/0052de79ef91790bb2fab38d237f48e46036455e/status.xml",
                "raw_url": "https://github.com/apache/tapestry3/raw/0052de79ef91790bb2fab38d237f48e46036455e/status.xml",
                "status": "modified",
                "changes": 8,
                "additions": 8,
                "contents_url": "https://api.github.com/repos/apache/tapestry3/contents/status.xml?ref=0052de79ef91790bb2fab38d237f48e46036455e",
                "patch": "@@ -254,6 +254,14 @@ NextGen) be released as version number 3.0.\n       Ensure that the page's requestCycle property is set before finishLoad() is invoked on any component.\n     </action>\n     \n+    <action type=\"update\" dev=\"HLS\">\n+      Make IMessages smartly expand exceptions into their message, or their class name.\n+    </action>\n+    \n+    <action type=\"fix\" dev=\"HLS\" fixes-bug=\"29871\">\n+      Fix NPE in ValidationDelegate when the form has errors recorded for fields that did not render.\n+    </action>\n+    \n   </release>\t\n    \n  \t<release version=\"3.0\" date=\"Apr 18 2004\">",
                "deletions": 0
            }
        ]
    },
    {
        "repo": "tapestry3",
        "message": "Fix bug 28177 (NPE in org.apache.tapestry.form.LinkSubmit). Thanks to sito@htf.highway.ne.jp\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/tapestry/trunk@243875 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/tapestry3/commit/83c0e2643427a253787b99b088b8b39793fa4db7",
        "parent": "https://github.com/apache/tapestry3/commit/f976404502d1b737498509696926e2f6782a89b2",
        "bug_id": "tapestry3_12",
        "file": [
            {
                "sha": "07acee631dacb64e34f0bfa4ec46e116a40efdfb",
                "filename": "framework/src/org/apache/tapestry/form/LinkSubmit.java",
                "blob_url": "https://github.com/apache/tapestry3/blob/83c0e2643427a253787b99b088b8b39793fa4db7/framework/src/org/apache/tapestry/form/LinkSubmit.java",
                "raw_url": "https://github.com/apache/tapestry3/raw/83c0e2643427a253787b99b088b8b39793fa4db7/framework/src/org/apache/tapestry/form/LinkSubmit.java",
                "status": "modified",
                "changes": 7,
                "additions": 7,
                "contents_url": "https://api.github.com/repos/apache/tapestry3/contents/framework/src/org/apache/tapestry/form/LinkSubmit.java?ref=83c0e2643427a253787b99b088b8b39793fa4db7",
                "patch": "@@ -81,6 +81,13 @@ protected void renderComponent(IMarkupWriter writer, IRequestCycle cycle)\n             {\n                 Body body = Body.get(cycle);\n \n+\t\t\t\tif (body == null)\n+\t\t\t\t    throw new ApplicationRuntimeException(\n+\t\t\t\t        Tapestry.format(\"must-be-contained-by-body\", \"LinkSubmit\"),\n+\t\t\t\t        this,\n+\t\t\t\t        null,\n+\t\t\t\t        null);\n+\t\t\t\t        \t\t\t\t\n                 // make sure the submit function is on the page (once)\n                 if (cycle.getAttribute(ATTRIBUTE_FUNCTION_NAME) == null)\n                 {",
                "deletions": 0
            },
            {
                "sha": "282c50be3b0e936ce614192b914a7a2e2bc73290",
                "filename": "status.xml",
                "blob_url": "https://github.com/apache/tapestry3/blob/83c0e2643427a253787b99b088b8b39793fa4db7/status.xml",
                "raw_url": "https://github.com/apache/tapestry3/raw/83c0e2643427a253787b99b088b8b39793fa4db7/status.xml",
                "status": "modified",
                "changes": 3,
                "additions": 3,
                "contents_url": "https://api.github.com/repos/apache/tapestry3/contents/status.xml?ref=83c0e2643427a253787b99b088b8b39793fa4db7",
                "patch": "@@ -240,6 +240,9 @@ NextGen) be released as version number 3.0.\n   <action type=\"fix\" dev=\"HLS\" fixes-bug=\"28010\">\n      ExpressionBinding optimizes expressions incorrectly  \t\n   </action>\n+  <action type=\"fix\" dev=\"DS\" fixes-bug=\"28177\" due-to=\"sito@htf.highway.ne.jp\">\n+     NPE in org.apache.tapestry.form.LinkSubmit.\n+  </action>\n \n  </release>\n   ",
                "deletions": 0
            }
        ]
    },
    {
        "repo": "tapestry3",
        "message": "[27954] NPE as follow-up to a ClassNotFoundException caused by a wrongly stuffed OGNL context\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/tapestry/trunk@243860 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/tapestry3/commit/3d22aaa2e573ffe36a5522b22eb15320376c4c12",
        "parent": "https://github.com/apache/tapestry3/commit/81cb012aa3758af4d7125dcd9a7e838ae2d3afc4",
        "bug_id": "tapestry3_13",
        "file": [
            {
                "sha": "1aaab8710d7d712ac912f8d8e86ca53458a546a7",
                "filename": "status.xml",
                "blob_url": "https://github.com/apache/tapestry3/blob/3d22aaa2e573ffe36a5522b22eb15320376c4c12/status.xml",
                "raw_url": "https://github.com/apache/tapestry3/raw/3d22aaa2e573ffe36a5522b22eb15320376c4c12/status.xml",
                "status": "modified",
                "changes": 6,
                "additions": 5,
                "contents_url": "https://api.github.com/repos/apache/tapestry3/contents/status.xml?ref=3d22aaa2e573ffe36a5522b22eb15320376c4c12",
                "patch": "@@ -209,9 +209,13 @@ NextGen) be released as version number 3.0.\n <!-- Use due-to to give acknowledgement for patches. -->\n   \n  <release version=\"3.0-rc-2\" date=\"unreleased\">\n- \t<action type=\"fix\" dev=\"HLS\" fixed-bug=\"28057\">\n+ \t<action type=\"fix\" dev=\"HLS\" fixes-bug=\"28057\">\n  \t\tFix problems in the binary distribution.\n  \t</action>\t\n+ \t<action type=\"fix\" dev=\"HLS\" fixes-bug=\"27954\">\n+ \t\tCreate proper OGNL context when checking for invariant OGNL expressions\n+ \t\t(when initializing component properties).\n+ \t</action>\n  </release>\n   \n  <release version=\"3.0-rc-1\" date=\"Mar 15 2004\">",
                "deletions": 1
            }
        ]
    },
    {
        "repo": "tapestry3",
        "message": "[27954 ] NPE as follow-up to a ClassNotFoundException caused by a wrongly stuffed OGNL context\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/tapestry/trunk@243859 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/tapestry3/commit/81cb012aa3758af4d7125dcd9a7e838ae2d3afc4",
        "parent": "https://github.com/apache/tapestry3/commit/b24d25a075abc1fcf7383e8767ae29e06177e727",
        "bug_id": "tapestry3_14",
        "file": [
            {
                "sha": "2d3d9ebec098fddcd4412d7a6e5a5d4bbd14544e",
                "filename": "framework/src/org/apache/tapestry/pageload/PropertyInitializer.java",
                "blob_url": "https://github.com/apache/tapestry3/blob/81cb012aa3758af4d7125dcd9a7e838ae2d3afc4/framework/src/org/apache/tapestry/pageload/PropertyInitializer.java",
                "raw_url": "https://github.com/apache/tapestry3/raw/81cb012aa3758af4d7125dcd9a7e838ae2d3afc4/framework/src/org/apache/tapestry/pageload/PropertyInitializer.java",
                "status": "modified",
                "changes": 22,
                "additions": 13,
                "contents_url": "https://api.github.com/repos/apache/tapestry3/contents/framework/src/org/apache/tapestry/pageload/PropertyInitializer.java?ref=81cb012aa3758af4d7125dcd9a7e838ae2d3afc4",
                "patch": "@@ -58,13 +58,14 @@ public PropertyInitializer(\n         _propertyName = propertyName;\n         _expression = expression;\n         _location = location;\n-        \n+\n         prepareInvariant();\n     }\n \n     public void prepareInvariant()\n     {\n         _invariant = false;\n+\n         try\n         {\n             // If no initial value expression is provided, then read the current\n@@ -76,12 +77,13 @@ public void prepareInvariant()\n                 _invariant = true;\n                 _value = OgnlUtils.get(_propertyName, _resolver, _component);\n             }\n-            else if (Ognl.isConstant(_expression))\n-            {\n-                // If the expression is a constant, evaluate it and remember the value \n-                _invariant = true;\n-                _value = OgnlUtils.get(_expression, _resolver, _component);\n-            }\n+            else\n+                if (Ognl.isConstant(_expression, Ognl.createDefaultContext(_component, _resolver)))\n+                {\n+                    // If the expression is a constant, evaluate it and remember the value \n+                    _invariant = true;\n+                    _value = OgnlUtils.get(_expression, _resolver, _component);\n+                }\n         }\n         catch (Exception ex)\n         {\n@@ -98,10 +100,12 @@ else if (Ognl.isConstant(_expression))\n \n     public void pageDetached(PageEvent event)\n     {\n-        try {\n+        try\n+        {\n             if (_invariant)\n                 OgnlUtils.set(_propertyName, _resolver, _component, _value);\n-            else {\n+            else\n+            {\n                 Object value = OgnlUtils.get(_expression, _resolver, _component);\n                 OgnlUtils.set(_propertyName, _resolver, _component, value);\n             }",
                "deletions": 9
            }
        ]
    },
    {
        "repo": "tapestry3",
        "message": "Fixed Bug: 26599; NPE in toString() reported by Michael.Frericks@sparkassen-informatik.de\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/tapestry/trunk@243762 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/tapestry3/commit/909723a2759dc41524d42e1563ddcad2655b1281",
        "parent": "https://github.com/apache/tapestry3/commit/528d4e2cb9db38f43a61e07d213d15624dd943aa",
        "bug_id": "tapestry3_15",
        "file": [
            {
                "sha": "98b8eadd2a675caf78b833494411ce0c16efdc9a",
                "filename": "framework/src/org/apache/tapestry/valid/PatternValidator.java",
                "blob_url": "https://github.com/apache/tapestry3/blob/909723a2759dc41524d42e1563ddcad2655b1281/framework/src/org/apache/tapestry/valid/PatternValidator.java",
                "raw_url": "https://github.com/apache/tapestry3/raw/909723a2759dc41524d42e1563ddcad2655b1281/framework/src/org/apache/tapestry/valid/PatternValidator.java",
                "status": "modified",
                "changes": 2,
                "additions": 1,
                "contents_url": "https://api.github.com/repos/apache/tapestry3/contents/framework/src/org/apache/tapestry/valid/PatternValidator.java?ref=909723a2759dc41524d42e1563ddcad2655b1281",
                "patch": "@@ -291,6 +291,6 @@ public String toString()\n             + \"; Script Path: \"\n             + _scriptPath\n             + \"; Pattern Delegate: \"\n-            + _patternDelegate.toString();\n+            + _patternDelegate;\n     }\n }",
                "deletions": 1
            }
        ]
    },
    {
        "repo": "tapestry3",
        "message": "Fix minor errors in AbstractEngine exception messages.\nEliminate NPE in Image component when binding value is null.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/tapestry/trunk@243291 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/tapestry3/commit/1bbbb92942c8a4dd4d3cf2a8056cc06bf2a3c6c4",
        "parent": "https://github.com/apache/tapestry3/commit/7ac9c0af04e7fe4166f7ae47e3ea3857a68056f7",
        "bug_id": "tapestry3_16",
        "file": [
            {
                "sha": "1c9cb693a62642bcd00ca6c067e12c4d4303635f",
                "filename": "framework/src/org/apache/tapestry/IEngine.java",
                "blob_url": "https://github.com/apache/tapestry3/blob/1bbbb92942c8a4dd4d3cf2a8056cc06bf2a3c6c4/framework/src/org/apache/tapestry/IEngine.java",
                "raw_url": "https://github.com/apache/tapestry3/raw/1bbbb92942c8a4dd4d3cf2a8056cc06bf2a3c6c4/framework/src/org/apache/tapestry/IEngine.java",
                "status": "modified",
                "changes": 7,
                "additions": 2,
                "contents_url": "https://api.github.com/repos/apache/tapestry3/contents/framework/src/org/apache/tapestry/IEngine.java?ref=1bbbb92942c8a4dd4d3cf2a8056cc06bf2a3c6c4",
                "patch": "@@ -242,11 +242,8 @@\n     /**\n      *  Method invoked from the {@link org.apache.tapestry.ApplicationServlet} \n      *  to perform processing of the\n-     *  request.  The return value for this method indicates whether the state of the engine\n-     *  could possibly change during processing; in most cases this is true.  In a few\n-     *  possible cases, this is false.  The ApplicationServlet sometimes performs extra\n-     *  work to ensure that the engine is properly replicated in a clustering environment; if\n-     *  this method returns false, it can skip that extra work.\n+     *  request.  In release 2.4, this has become more of a dirty flag, indicating\n+     *  if any state stored by the engine instance itself has changed.\n      *\n      *  @return true if the state of the engine was, or could have been, changed during\n      *  processing.",
                "deletions": 5
            },
            {
                "sha": "c61247e0be924de9e28dfde5c1a8e09cd817d7c1",
                "filename": "framework/src/org/apache/tapestry/TapestryStrings.properties",
                "blob_url": "https://github.com/apache/tapestry3/blob/1bbbb92942c8a4dd4d3cf2a8056cc06bf2a3c6c4/framework/src/org/apache/tapestry/TapestryStrings.properties",
                "raw_url": "https://github.com/apache/tapestry3/raw/1bbbb92942c8a4dd4d3cf2a8056cc06bf2a3c6c4/framework/src/org/apache/tapestry/TapestryStrings.properties",
                "status": "modified",
                "changes": 5,
                "additions": 1,
                "contents_url": "https://api.github.com/repos/apache/tapestry3/contents/framework/src/org/apache/tapestry/TapestryStrings.properties?ref=1bbbb92942c8a4dd4d3cf2a8056cc06bf2a3c6c4",
                "patch": "@@ -121,11 +121,10 @@ AbstractEngine.unknown-specification=<Unknown specification>\n AbstractEngine.unknown-service=Engine does not implement a service name {0}.\n AbstractEngine.unable-to-begin-request=Tapestry unable to begin processing request.\n AbstractEngine.unable-to-cleanup-page=Unable to cleanup page {0}.\n-AbstractEngine.visit-class-property-not-specified=Could not create visit object because property {0} was not configured.\n AbstractEngine.unable-to-instantiate-visit=Unable to instantiate visit object from class {0}.\n AbstractEngine.unable-to-instantiate-global=Unable to instantiate global object from class {0}.\n AbstractEngine.unable-to-redirect=Unable to redirect to {0}.\n-AbstractEngine.service-name-mismatch=Class {1} is registerred as service {0} but provides service {2} instead.\n+AbstractEngine.service-name-mismatch=Class {1} is registered as service {0} but provides service {2} instead.\n AbstractEngine.unable-to-instantiate-service=Unable to instantiate class {1} as service {0}.\n AbstractEngine.unable-to-find-dispatcher=Unable to find a request dispatcher for local resource ''{0}''.\n AbstractEngine.unable-to-forward=Unable to forward to local resource ''{0}''.\n@@ -318,8 +317,6 @@ PageRecorder.null-property-name=A change event for component {0} failed to speci\n \n RollbackException.message=Unable to set property {0} of component {1} to {2}.\n \n-DefaultValuePersister.no-value-copier-for-class=No value copier has been registerred for class {0}.\n-\n # net.sf.tapestry.resource\n \n ContextResourceLocation.unable-to-reference-context-path=Unable to reference context path ''{0}''.",
                "deletions": 4
            },
            {
                "sha": "91d7a16cca32dc63508e399e03e015ae6ddb25a3",
                "filename": "framework/src/org/apache/tapestry/engine/AbstractEngine.java",
                "blob_url": "https://github.com/apache/tapestry3/blob/1bbbb92942c8a4dd4d3cf2a8056cc06bf2a3c6c4/framework/src/org/apache/tapestry/engine/AbstractEngine.java",
                "raw_url": "https://github.com/apache/tapestry3/raw/1bbbb92942c8a4dd4d3cf2a8056cc06bf2a3c6c4/framework/src/org/apache/tapestry/engine/AbstractEngine.java",
                "status": "modified",
                "changes": 169,
                "additions": 138,
                "contents_url": "https://api.github.com/repos/apache/tapestry3/contents/framework/src/org/apache/tapestry/engine/AbstractEngine.java?ref=1bbbb92942c8a4dd4d3cf2a8056cc06bf2a3c6c4",
                "patch": "@@ -75,6 +75,8 @@\n import javax.servlet.http.HttpServletRequest;\n import javax.servlet.http.HttpServletResponse;\n import javax.servlet.http.HttpSession;\n+import javax.servlet.http.HttpSessionBindingEvent;\n+import javax.servlet.http.HttpSessionBindingListener;\n \n import org.apache.tapestry.ApplicationRuntimeException;\n import org.apache.tapestry.ApplicationServlet;\n@@ -107,6 +109,7 @@\n import org.apache.tapestry.util.pool.Pool;\n import org.apache.tapestry.util.prop.OgnlUtils;\n import org.apache.bsf.BSFManager;\n+import org.apache.commons.lang.builder.ToStringBuilder;\n import org.apache.commons.logging.Log;\n import org.apache.commons.logging.LogFactory;\n \n@@ -162,7 +165,8 @@\n  * \n  **/\n \n-public abstract class AbstractEngine implements IEngine, IEngineServiceView, Externalizable\n+public abstract class AbstractEngine\n+    implements IEngine, IEngineServiceView, Externalizable, HttpSessionBindingListener\n {\n     private static final Log LOG = LogFactory.getLog(AbstractEngine.class);\n \n@@ -312,7 +316,8 @@\n      *\n      **/\n \n-    protected static final String SPECIFICATION_SOURCE_NAME = \"org.apache.tapestry.SpecificationSource\";\n+    protected static final String SPECIFICATION_SOURCE_NAME =\n+        \"org.apache.tapestry.SpecificationSource\";\n \n     /**\n      *  Servlet context attribute name for the {@link IPageSource}\n@@ -431,6 +436,18 @@\n \n     private transient IComponentClassEnhancer _enhancer;\n \n+    /**\n+     *  Set to true when there is a (potential)\n+     *  change to the internal state of the engine, set\n+     *  to false when the engine is stored into the\n+     *  {@link HttpSession}.  \n+     * \n+     *  @since 2.4\n+     * \n+     **/\n+\n+    private transient boolean _dirty;\n+\n     /**\n      *  Sets the Exception page's exception property, then renders the Exception page.\n      *\n@@ -515,23 +532,16 @@ public void reportException(String reportTitle, Throwable ex)\n     /**\n      *  Extends the description of the class generated by {@link #toString()}.\n      *  If a subclass adds additional instance variables that should be described\n-     *  in the instance description, it may overide this method.  Subclasses\n-     *  should invoke this implementation first.  They should append a space\n-     *  before each value.\n+     *  in the instance description, it may overide this method. This implementation\n+     *  does nothing.\n      *\n      *  @see #toString()\n+     * \n      **/\n \n-    public void extendDescription(StringBuffer buffer)\n+    protected void extendDescription(ToStringBuilder builder)\n     {\n-        // In rare cases, toString() may be invoked before\n-        // the engine has a change to obtain the specification\n-        // from the servlet.\n \n-        if (_specification == null)\n-            buffer.append(Tapestry.getString(\"AbstractEngine.unknown-specification\"));\n-        else\n-            buffer.append(_specification.getName());\n     }\n \n     /**\n@@ -850,7 +860,16 @@ public boolean service(RequestContext context) throws ServletException, IOExcept\n \n                 monitor.serviceBegin(serviceName, context.getRequestURI());\n \n-                return service.service(this, cycle, output);\n+                // Invoke the service, which returns true if it may have changed\n+                // the state of the engine (most do return true).\n+\n+                boolean serviceResult = service.service(this, cycle, output);\n+\n+                // Return true only if the engine is actually dirty.  This cuts down\n+                // on the number of times the engine is stored into the\n+                // session unceccesarily.\n+\n+                return serviceResult && _dirty;\n             }\n             catch (PageRedirectException ex)\n             {\n@@ -930,7 +949,7 @@ public boolean service(RequestContext context) throws ServletException, IOExcept\n         // When in doubt, assume that the request did cause some change\n         // to the engine.\n \n-        return true;\n+        return _dirty;\n     }\n \n     /**\n@@ -1049,6 +1068,7 @@ public void setLocale(Locale value)\n         {\n             _locale = value;\n             _localeChanged = true;\n+            markDirty();\n         }\n     }\n \n@@ -1379,23 +1399,28 @@ public IResourceResolver getResourceResolver()\n      *  Invokes {@link #extendDescription(StringBuffer)}\n      *  to fill in details about the instance.\n      *\n-     *  @see #extendDescription(StringBuffer)\n+     *  @see #extendDescription(ToStringB)\n      *\n      **/\n \n     public String toString()\n     {\n-        StringBuffer buffer;\n+        ToStringBuilder builder = new ToStringBuilder(this);\n \n-        buffer = new StringBuffer(super.toString());\n+        builder.append(\n+            \"name\",\n+            _specification == null\n+                ? Tapestry.getString(\"AbstractEngine.unknown-specification\")\n+                : _specification.getName());\n \n-        buffer.append('[');\n+        builder.append(\"dirty\", _dirty);\n+        builder.append(\"locale\", _locale);\n+        builder.append(\"stateful\", _stateful);\n+        builder.append(\"visit\", _visit);\n \n-        extendDescription(buffer);\n+        extendDescription(builder);\n \n-        buffer.append(']');\n-\n-        return buffer.toString();\n+        return builder.toString();\n     }\n \n     /**\n@@ -1420,10 +1445,19 @@ public boolean isResetServiceEnabled()\n     /**\n      *  Gets the visit object, if it has been created already.\n      *\n+     *  <p>\n+     *  If the visit is non-null then\n+     *  the {@link #isDirty()} flag is set (because\n+     *  the engine can't tell what the caller will\n+     *  <i>do</i> with the visit).\n+     * \n      **/\n \n     public Object getVisit()\n     {\n+        if (_visit != null)\n+            markDirty();\n+\n         return _visit;\n     }\n \n@@ -1435,6 +1469,10 @@ public Object getVisit()\n      *  After creating the visit, but before returning,\n      *  the {@link HttpSession} will be created, and\n      *  {@link #setStateful()} will be invoked.\n+     * \n+     *  <p>\n+     *  Sets the {@link #isDirty()} flag, if the return value\n+     *  is not null.\n      *\n      *\n      **/\n@@ -1453,12 +1491,23 @@ public Object getVisit(IRequestCycle cycle)\n             setStateful();\n         }\n \n+        if (_visit != null)\n+            markDirty();\n+\n         return _visit;\n     }\n \n+    /**\n+     *  Updates the visit object and\n+     *  sets the {@link #isDirty() dirty flag}.\n+     * \n+     **/\n+\n     public void setVisit(Object value)\n     {\n         _visit = value;\n+\n+        markDirty();\n     }\n \n     public boolean getHasVisit()\n@@ -1483,11 +1532,6 @@ protected Object createVisit(IRequestCycle cycle)\n         Object result = null;\n \n         visitClassName = _propertySource.getPropertyValue(VISIT_CLASS_PROPERTY_NAME);\n-        if (visitClassName == null)\n-            throw new ApplicationRuntimeException(\n-                Tapestry.getString(\n-                    \"AbstractEngine.visit-class-property-not-specified\",\n-                    VISIT_CLASS_PROPERTY_NAME));\n \n         if (LOG.isDebugEnabled())\n             LOG.debug(\"Creating visit object as instance of \" + visitClassName);\n@@ -1744,7 +1788,7 @@ private Map createServiceMap()\n                         Tapestry.getString(\n                             \"AbstractEngine.service-name-mismatch\",\n                             name,\n-                            serviceClass,\n+                            className,\n                             serviceName));\n \n                 // Replace the class name with an instance\n@@ -1914,7 +1958,8 @@ public IPropertySource getPropertySource()\n      * \n      **/\n \n-    private static final String EXTENSION_PROPERTY_SOURCE_NAME = \"org.apache.tapestry.property-source\";\n+    private static final String EXTENSION_PROPERTY_SOURCE_NAME =\n+        \"org.apache.tapestry.property-source\";\n \n     /**\n      *  The name of an application extension that implements {@link IMonitor}.\n@@ -1972,7 +2017,8 @@ protected IPropertySource createPropertySource(RequestContext context)\n \n         // Lastly, add a final source to handle \"factory defaults\".\n \n-        ResourceBundle bundle = ResourceBundle.getBundle(\"org.apache.tapestry.ConfigurationDefaults\");\n+        ResourceBundle bundle =\n+            ResourceBundle.getBundle(\"org.apache.tapestry.ConfigurationDefaults\");\n \n         result.addSource(new ResourceBundlePropertySource(bundle));\n \n@@ -2072,4 +2118,65 @@ public IComponentClassEnhancer getComponentClassEnhancer()\n         return _enhancer;\n     }\n \n+    /**\n+     *  Returns true if the engine has (potentially) changed\n+     *  state since the last time it was stored\n+     *  into the {@link javax.servlet.http.HttpSession}.  Various\n+     *  events set this property to true.\n+     * \n+     *  @since 2.4\n+     * \n+     **/\n+\n+    public boolean isDirty()\n+    {\n+        return _dirty;\n+    }\n+\n+    /**\n+     *  Invoked to set the dirty flag, indicating that the\n+     *  engine should be stored into the \n+     *  {@link javax.servlet.http.HttpSession}.\n+     * \n+     * \n+     *  @since 2.4\n+     * \n+     **/\n+\n+    protected void markDirty()\n+    {\n+        if (!_dirty)\n+            LOG.debug(\"Setting dirty flag.\");\n+\n+        _dirty = true;\n+    }\n+\n+    /** \n+     * \n+     *  Clears the dirty flag when a engine is stored into the \n+     *  {@link HttpSession}.\n+     * \n+     * \n+     *  @since 2.4 \n+     * \n+     **/\n+\n+    public void valueBound(HttpSessionBindingEvent arg0)\n+    {\n+        LOG.debug(_dirty ? \"Clearing dirty flag.\" : \"Dirty flag already cleared.\");\n+\n+        _dirty = false;\n+    }\n+\n+    /**\n+     *  Does nothing.\n+     * \n+     *  @since 2.4\n+     * \n+     **/\n+\n+    public void valueUnbound(HttpSessionBindingEvent arg0)\n+    {\n+    }\n+\n }\n\\ No newline at end of file",
                "deletions": 31
            },
            {
                "sha": "5ee61c81845cc39d5230d3469eec372173ec6944",
                "filename": "framework/src/org/apache/tapestry/engine/BaseEngine.java",
                "blob_url": "https://github.com/apache/tapestry3/blob/1bbbb92942c8a4dd4d3cf2a8056cc06bf2a3c6c4/framework/src/org/apache/tapestry/engine/BaseEngine.java",
                "raw_url": "https://github.com/apache/tapestry3/raw/1bbbb92942c8a4dd4d3cf2a8056cc06bf2a3c6c4/framework/src/org/apache/tapestry/engine/BaseEngine.java",
                "status": "modified",
                "changes": 17,
                "additions": 17,
                "contents_url": "https://api.github.com/repos/apache/tapestry3/contents/framework/src/org/apache/tapestry/engine/BaseEngine.java?ref=1bbbb92942c8a4dd4d3cf2a8056cc06bf2a3c6c4",
                "patch": "@@ -65,6 +65,7 @@\n import java.util.Map;\n import java.util.*;\n \n+import org.apache.commons.lang.builder.ToStringBuilder;\n import org.apache.tapestry.ApplicationRuntimeException;\n import org.apache.tapestry.IRequestCycle;\n import org.apache.tapestry.Tapestry;\n@@ -104,6 +105,7 @@ protected void cleanupAfterRequest(IRequestCycle cycle)\n         if (Tapestry.isEmpty(_recorders))\n             return;\n \n+\t\tboolean markDirty = false;\n         Iterator i = _recorders.entrySet().iterator();\n \n         while (i.hasNext())\n@@ -119,8 +121,13 @@ protected void cleanupAfterRequest(IRequestCycle cycle)\n                 i.remove();\n \n                 _activePageNames.remove(pageName);\n+      \t\n+      \t\t\tmarkDirty = true;\n             }\n         }\n+        \n+        if (markDirty)\n+        \tmarkDirty();\n     }\n \n     public void forgetPage(String name)\n@@ -139,6 +146,8 @@ public void forgetPage(String name)\n         recorder.discard();\n         _recorders.remove(name);\n         _activePageNames.remove(name);\n+        \n+        markDirty();\n     }\n \n     /**\n@@ -190,6 +199,7 @@ public IPageRecorder createPageRecorder(String pageName, IRequestCycle cycle)\n \n         cycle.getRequestContext().createSession();\n         setStateful();\n+       \n \n         IPageRecorder result = new SessionPageRecorder();\n         result.initialize(pageName, cycle);\n@@ -200,6 +210,8 @@ public IPageRecorder createPageRecorder(String pageName, IRequestCycle cycle)\n             _activePageNames = new HashSet();\n \n         _activePageNames.add(pageName);\n+        \n+        markDirty();\n \n         return result;\n     }\n@@ -259,4 +271,9 @@ public void writeExternal(ObjectOutput out) throws IOException\n         }\n     }\n \n+    public void extendDescription(ToStringBuilder builder)\n+    {\n+\t\tbuilder.append(\"activePageNames\", _activePageNames);\n+    }\n+\n }\n\\ No newline at end of file",
                "deletions": 0
            },
            {
                "sha": "a24d23c033d7d2fdf76f0689fb9d54724f0905c5",
                "filename": "framework/src/org/apache/tapestry/html/Image.java",
                "blob_url": "https://github.com/apache/tapestry3/blob/1bbbb92942c8a4dd4d3cf2a8056cc06bf2a3c6c4/framework/src/org/apache/tapestry/html/Image.java",
                "raw_url": "https://github.com/apache/tapestry3/raw/1bbbb92942c8a4dd4d3cf2a8056cc06bf2a3c6c4/framework/src/org/apache/tapestry/html/Image.java",
                "status": "modified",
                "changes": 10,
                "additions": 8,
                "contents_url": "https://api.github.com/repos/apache/tapestry3/contents/framework/src/org/apache/tapestry/html/Image.java?ref=1bbbb92942c8a4dd4d3cf2a8056cc06bf2a3c6c4",
                "patch": "@@ -60,6 +60,7 @@\n import org.apache.tapestry.IMarkupWriter;\n import org.apache.tapestry.IRequestCycle;\n import org.apache.tapestry.RequestCycleException;\n+import org.apache.tapestry.RequiredParameterException;\n \n /**\n  *  Used to insert an image.  To create a rollover image, use the\n@@ -91,7 +92,12 @@ protected void renderComponent(IMarkupWriter writer, IRequestCycle cycle)\n         if (cycle.isRewinding())\n             return;\n \n-        String imageURL = getImage().buildURL(cycle);\n+        IAsset imageAsset = getImage();\n+\n+        if (imageAsset == null)\n+            throw new RequiredParameterException(this, \"image\", getBinding(\"image\"));\n+\n+        String imageURL = imageAsset.buildURL(cycle);\n \n         writer.beginEmpty(\"img\");\n \n@@ -106,6 +112,6 @@ protected void renderComponent(IMarkupWriter writer, IRequestCycle cycle)\n     }\n \n     public abstract IAsset getImage();\n-    \n+\n     public abstract int getBorder();\n }\n\\ No newline at end of file",
                "deletions": 2
            }
        ]
    },
    {
        "repo": "tapestry3",
        "message": "Fix a bug where NPE was thrown when HttpSession timed out.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/tapestry/trunk@243205 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/tapestry3/commit/1ab692d8e68386f40c9426a8d00a652e5e7ec39c",
        "parent": "https://github.com/apache/tapestry3/commit/8ffab5ec3ef3fc38fb685c4a2399fe03c9de56d7",
        "bug_id": "tapestry3_17",
        "file": [
            {
                "sha": "e67639d08f46a51d9f4189b6254fae378c111bae",
                "filename": "framework/src/net/sf/tapestry/engine/AbstractEngine.java",
                "blob_url": "https://github.com/apache/tapestry3/blob/1ab692d8e68386f40c9426a8d00a652e5e7ec39c/framework/src/net/sf/tapestry/engine/AbstractEngine.java",
                "raw_url": "https://github.com/apache/tapestry3/raw/1ab692d8e68386f40c9426a8d00a652e5e7ec39c/framework/src/net/sf/tapestry/engine/AbstractEngine.java",
                "status": "modified",
                "changes": 3,
                "additions": 1,
                "contents_url": "https://api.github.com/repos/apache/tapestry3/contents/framework/src/net/sf/tapestry/engine/AbstractEngine.java?ref=1ab692d8e68386f40c9426a8d00a652e5e7ec39c",
                "patch": "@@ -1418,7 +1418,6 @@ protected void cleanupEngine()\n         if (activePageNames.isEmpty())\n             return;\n \n-        ISpecificationSource specSource = getSpecificationSource();\n         IPageSource source = getPageSource();\n \n         // A bit of a hack, used only when cleaning up the engine and any pages\n@@ -1439,7 +1438,7 @@ protected void cleanupEngine()\n             return;\n         }\n \n-        IRequestCycle fakeCycle = new RequestCycle(this, fakeContext, null);\n+        IRequestCycle fakeCycle = new RequestCycle(this, fakeContext, new NullMonitor());\n \n         Iterator i = activePageNames.iterator();\n ",
                "deletions": 2
            }
        ]
    },
    {
        "repo": "tapestry3",
        "message": "Changed the build to include debugging symbols with the frameworks.\n\n[ 532562 ] Submit.jwc contains error\n[ 532587 ] Submit throws NPE\n[ 532815 ] ValidationDelegate errors\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/tapestry/trunk@242455 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/tapestry3/commit/235e9c7e6f304ebd66338fbb92db278d943bcd36",
        "parent": "https://github.com/apache/tapestry3/commit/fa1d223e7783eb1fd3e4500023ba3775b868c337",
        "bug_id": "tapestry3_18",
        "file": [
            {
                "sha": "b487b24cf2ae83d6ba4df08dad4e524b104edbe9",
                "filename": "web/ex_new.html",
                "blob_url": "https://github.com/apache/tapestry3/blob/235e9c7e6f304ebd66338fbb92db278d943bcd36/web/ex_new.html",
                "raw_url": "https://github.com/apache/tapestry3/raw/235e9c7e6f304ebd66338fbb92db278d943bcd36/web/ex_new.html",
                "status": "modified",
                "changes": 8,
                "additions": 8,
                "contents_url": "https://api.github.com/repos/apache/tapestry3/contents/web/ex_new.html?ref=235e9c7e6f304ebd66338fbb92db278d943bcd36",
                "patch": "@@ -42,6 +42,14 @@\n \t<IMG height=44 src=\"images/ico_t.gif\" width=44 align=absMiddle border=0>&nbsp;\n \t  <IMG height=22 alt=\"\" src=\"images/hd_tapestry.gif\" width=100 align=absMiddle vspace=17 border=0> \n \t\n+<h3>Release 1.0.10</h3>\n+\n+Changed the build to include debugging symbols with the frameworks.\n+\n+[ 532562 ] Submit.jwc contains error\n+[ 532587 ] Submit throws NPE\n+[ 532815 ] ValidationDelegate errors\n+\n <h3>Release 1.0.9</h3>\n \n <p>The framework and contrib jar files are now named with the release number (i.e.,",
                "deletions": 0
            }
        ]
    }
]