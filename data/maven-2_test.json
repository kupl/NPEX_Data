{
    "maven-2_017e552": {
        "bug_id": "maven-2_017e552",
        "commit": "https://github.com/apache/maven-2/commit/017e552933d16a99d6798354fd862a026eb8a631",
        "file": [
            {
                "additions": 10,
                "blob_url": "https://github.com/apache/maven-2/blob/017e552933d16a99d6798354fd862a026eb8a631/maven-artifact-manager/src/main/java/org/apache/maven/artifact/manager/DefaultWagonManager.java",
                "changes": 10,
                "contents_url": "https://api.github.com/repos/apache/maven-2/contents/maven-artifact-manager/src/main/java/org/apache/maven/artifact/manager/DefaultWagonManager.java?ref=017e552933d16a99d6798354fd862a026eb8a631",
                "deletions": 0,
                "filename": "maven-artifact-manager/src/main/java/org/apache/maven/artifact/manager/DefaultWagonManager.java",
                "patch": "@@ -468,6 +468,16 @@ private void getRemoteFile( ArtifactRepository repository,\n \n                     if ( downloaded )\n                     {\n+                        if ( sha1ChecksumObserver != null )\n+                        {\n+                            wagon.removeTransferListener( sha1ChecksumObserver );\n+                        }\n+\n+                        if ( md5ChecksumObserver != null )\n+                        {\n+                            wagon.removeTransferListener( md5ChecksumObserver );\n+                        }\n+\n                         // keep the checksum files from showing up on the download monitor...\n                         if ( downloadMonitor != null )\n                         {",
                "raw_url": "https://github.com/apache/maven-2/raw/017e552933d16a99d6798354fd862a026eb8a631/maven-artifact-manager/src/main/java/org/apache/maven/artifact/manager/DefaultWagonManager.java",
                "sha": "6d1ec62c8861e066df862c0dbfcb764a66600829",
                "status": "modified"
            }
        ],
        "message": "Taking another shot at cleaning up the NPE related to wagon beta-3 and the digest that goes null on a transfer error...this time, remove the checksum observers before verifying the checksum(s).\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/components/branches/maven-2.0.x@674876 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/maven-2/commit/bf05393deb370a045c582312e347d9f5a93c5e64",
        "patched_files": [
            "DefaultWagonManager.java"
        ],
        "repo": "maven-2",
        "unit_tests": [
            "DefaultWagonManagerTest.java"
        ]
    },
    "maven-2_1694080": {
        "bug_id": "maven-2_1694080",
        "commit": "https://github.com/apache/maven-2/commit/1694080fd6b53f099bce676acf72771770926a3c",
        "file": [
            {
                "additions": 8,
                "blob_url": "https://github.com/apache/maven-2/blob/1694080fd6b53f099bce676acf72771770926a3c/maven-model/src/main/mdo/maven.mdo",
                "changes": 11,
                "contents_url": "https://api.github.com/repos/apache/maven-2/contents/maven-model/src/main/mdo/maven.mdo?ref=1694080fd6b53f099bce676acf72771770926a3c",
                "deletions": 3,
                "filename": "maven-model/src/main/mdo/maven.mdo",
                "patch": "@@ -3429,21 +3429,26 @@\n \n         Extension e = (Extension) o;\n \n-        if ( !e.getArtifactId().equals( getArtifactId() ) )\n+        if ( !equal( e.getArtifactId(), getArtifactId() ) )\n         {\n             return false;\n         }\n-        else if ( !e.getGroupId().equals( getGroupId() ) )\n+        else if ( !equal( e.getGroupId(), getGroupId() ) )\n         {\n             return false;\n         }\n-        else if ( e.getVersion() != null ? !e.getVersion().equals( getVersion() ) : getVersion() != null )\n+        else if ( !equal( e.getVersion(), getVersion() ) )\n         {\n             return false;\n         }\n         return true;\n     }\n \n+    private static <T> boolean equal( T obj1, T obj2 )\n+    {\n+        return ( obj1 != null ) ? obj1.equals( obj2 ) : obj2 == null;\n+    }\n+\n     /**\n      * @see java.lang.Object#hashCode()\n      */",
                "raw_url": "https://github.com/apache/maven-2/raw/1694080fd6b53f099bce676acf72771770926a3c/maven-model/src/main/mdo/maven.mdo",
                "sha": "57d86c40bb6818d8f30e6eaebd73eb584c255b71",
                "status": "modified"
            },
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/maven-2/blob/1694080fd6b53f099bce676acf72771770926a3c/maven-model/src/test/java/org/apache/maven/model/ActivationFileTest.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/maven-2/contents/maven-model/src/test/java/org/apache/maven/model/ActivationFileTest.java?ref=1694080fd6b53f099bce676acf72771770926a3c",
                "deletions": 0,
                "filename": "maven-model/src/test/java/org/apache/maven/model/ActivationFileTest.java",
                "patch": "@@ -39,6 +39,8 @@ public void testHashCodeNullSafe()\n     public void testEqualsNullSafe()\n     {\n         assertFalse( new ActivationFile().equals( null ) );\n+\n+        new ActivationFile().equals( new ActivationFile() );\n     }\n \n     public void testEqualsIdentity()",
                "raw_url": "https://github.com/apache/maven-2/raw/1694080fd6b53f099bce676acf72771770926a3c/maven-model/src/test/java/org/apache/maven/model/ActivationFileTest.java",
                "sha": "e6f057a5ed5d88b000e3ba14039f2b702690070c",
                "status": "modified"
            },
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/maven-2/blob/1694080fd6b53f099bce676acf72771770926a3c/maven-model/src/test/java/org/apache/maven/model/ActivationOSTest.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/maven-2/contents/maven-model/src/test/java/org/apache/maven/model/ActivationOSTest.java?ref=1694080fd6b53f099bce676acf72771770926a3c",
                "deletions": 0,
                "filename": "maven-model/src/test/java/org/apache/maven/model/ActivationOSTest.java",
                "patch": "@@ -39,6 +39,8 @@ public void testHashCodeNullSafe()\n     public void testEqualsNullSafe()\n     {\n         assertFalse( new ActivationOS().equals( null ) );\n+\n+        new ActivationOS().equals( new ActivationOS() );\n     }\n \n     public void testEqualsIdentity()",
                "raw_url": "https://github.com/apache/maven-2/raw/1694080fd6b53f099bce676acf72771770926a3c/maven-model/src/test/java/org/apache/maven/model/ActivationOSTest.java",
                "sha": "39b1e6210e07809739cff9273c7dda7455c63b1c",
                "status": "modified"
            },
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/maven-2/blob/1694080fd6b53f099bce676acf72771770926a3c/maven-model/src/test/java/org/apache/maven/model/ActivationPropertyTest.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/maven-2/contents/maven-model/src/test/java/org/apache/maven/model/ActivationPropertyTest.java?ref=1694080fd6b53f099bce676acf72771770926a3c",
                "deletions": 0,
                "filename": "maven-model/src/test/java/org/apache/maven/model/ActivationPropertyTest.java",
                "patch": "@@ -39,6 +39,8 @@ public void testHashCodeNullSafe()\n     public void testEqualsNullSafe()\n     {\n         assertFalse( new ActivationProperty().equals( null ) );\n+\n+        new ActivationProperty().equals( new ActivationProperty() );\n     }\n \n     public void testEqualsIdentity()",
                "raw_url": "https://github.com/apache/maven-2/raw/1694080fd6b53f099bce676acf72771770926a3c/maven-model/src/test/java/org/apache/maven/model/ActivationPropertyTest.java",
                "sha": "014d321c6c060e027b9ab29124074d3e2925dc2a",
                "status": "modified"
            },
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/maven-2/blob/1694080fd6b53f099bce676acf72771770926a3c/maven-model/src/test/java/org/apache/maven/model/ActivationTest.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/maven-2/contents/maven-model/src/test/java/org/apache/maven/model/ActivationTest.java?ref=1694080fd6b53f099bce676acf72771770926a3c",
                "deletions": 0,
                "filename": "maven-model/src/test/java/org/apache/maven/model/ActivationTest.java",
                "patch": "@@ -39,6 +39,8 @@ public void testHashCodeNullSafe()\n     public void testEqualsNullSafe()\n     {\n         assertFalse( new Activation().equals( null ) );\n+\n+        new Activation().equals( new Activation() );\n     }\n \n     public void testEqualsIdentity()",
                "raw_url": "https://github.com/apache/maven-2/raw/1694080fd6b53f099bce676acf72771770926a3c/maven-model/src/test/java/org/apache/maven/model/ActivationTest.java",
                "sha": "cd5b17c88a5f9f32481e1e87d8903d11d76deae7",
                "status": "modified"
            },
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/maven-2/blob/1694080fd6b53f099bce676acf72771770926a3c/maven-model/src/test/java/org/apache/maven/model/BuildTest.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/maven-2/contents/maven-model/src/test/java/org/apache/maven/model/BuildTest.java?ref=1694080fd6b53f099bce676acf72771770926a3c",
                "deletions": 0,
                "filename": "maven-model/src/test/java/org/apache/maven/model/BuildTest.java",
                "patch": "@@ -39,6 +39,8 @@ public void testHashCodeNullSafe()\n     public void testEqualsNullSafe()\n     {\n         assertFalse( new Build().equals( null ) );\n+\n+        new Build().equals( new Build() );\n     }\n \n     public void testEqualsIdentity()",
                "raw_url": "https://github.com/apache/maven-2/raw/1694080fd6b53f099bce676acf72771770926a3c/maven-model/src/test/java/org/apache/maven/model/BuildTest.java",
                "sha": "0e21231211861591c7fdd0d0f54a6ba61ed07352",
                "status": "modified"
            },
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/maven-2/blob/1694080fd6b53f099bce676acf72771770926a3c/maven-model/src/test/java/org/apache/maven/model/CiManagementTest.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/maven-2/contents/maven-model/src/test/java/org/apache/maven/model/CiManagementTest.java?ref=1694080fd6b53f099bce676acf72771770926a3c",
                "deletions": 0,
                "filename": "maven-model/src/test/java/org/apache/maven/model/CiManagementTest.java",
                "patch": "@@ -39,6 +39,8 @@ public void testHashCodeNullSafe()\n     public void testEqualsNullSafe()\n     {\n         assertFalse( new CiManagement().equals( null ) );\n+\n+        new CiManagement().equals( new CiManagement() );\n     }\n \n     public void testEqualsIdentity()",
                "raw_url": "https://github.com/apache/maven-2/raw/1694080fd6b53f099bce676acf72771770926a3c/maven-model/src/test/java/org/apache/maven/model/CiManagementTest.java",
                "sha": "57b386520e59a7c7122b4597e3e404bc183dd13c",
                "status": "modified"
            },
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/maven-2/blob/1694080fd6b53f099bce676acf72771770926a3c/maven-model/src/test/java/org/apache/maven/model/ContributorTest.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/maven-2/contents/maven-model/src/test/java/org/apache/maven/model/ContributorTest.java?ref=1694080fd6b53f099bce676acf72771770926a3c",
                "deletions": 0,
                "filename": "maven-model/src/test/java/org/apache/maven/model/ContributorTest.java",
                "patch": "@@ -39,6 +39,8 @@ public void testHashCodeNullSafe()\n     public void testEqualsNullSafe()\n     {\n         assertFalse( new Contributor().equals( null ) );\n+\n+        new Contributor().equals( new Contributor() );\n     }\n \n     public void testEqualsIdentity()",
                "raw_url": "https://github.com/apache/maven-2/raw/1694080fd6b53f099bce676acf72771770926a3c/maven-model/src/test/java/org/apache/maven/model/ContributorTest.java",
                "sha": "61b3e007ed2eb248dbcf6098b7e71910eb5e6315",
                "status": "modified"
            },
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/maven-2/blob/1694080fd6b53f099bce676acf72771770926a3c/maven-model/src/test/java/org/apache/maven/model/DependencyManagementTest.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/maven-2/contents/maven-model/src/test/java/org/apache/maven/model/DependencyManagementTest.java?ref=1694080fd6b53f099bce676acf72771770926a3c",
                "deletions": 0,
                "filename": "maven-model/src/test/java/org/apache/maven/model/DependencyManagementTest.java",
                "patch": "@@ -39,6 +39,8 @@ public void testHashCodeNullSafe()\n     public void testEqualsNullSafe()\n     {\n         assertFalse( new DependencyManagement().equals( null ) );\n+\n+        new DependencyManagement().equals( new DependencyManagement() );\n     }\n \n     public void testEqualsIdentity()",
                "raw_url": "https://github.com/apache/maven-2/raw/1694080fd6b53f099bce676acf72771770926a3c/maven-model/src/test/java/org/apache/maven/model/DependencyManagementTest.java",
                "sha": "85a697b46967d9a1774bdc0fd93b5cdb21a6eab2",
                "status": "modified"
            },
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/maven-2/blob/1694080fd6b53f099bce676acf72771770926a3c/maven-model/src/test/java/org/apache/maven/model/DependencyTest.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/maven-2/contents/maven-model/src/test/java/org/apache/maven/model/DependencyTest.java?ref=1694080fd6b53f099bce676acf72771770926a3c",
                "deletions": 0,
                "filename": "maven-model/src/test/java/org/apache/maven/model/DependencyTest.java",
                "patch": "@@ -39,6 +39,8 @@ public void testHashCodeNullSafe()\n     public void testEqualsNullSafe()\n     {\n         assertFalse( new Dependency().equals( null ) );\n+\n+        new Dependency().equals( new Dependency() );\n     }\n \n     public void testEqualsIdentity()",
                "raw_url": "https://github.com/apache/maven-2/raw/1694080fd6b53f099bce676acf72771770926a3c/maven-model/src/test/java/org/apache/maven/model/DependencyTest.java",
                "sha": "3d08d50c8d155704c290619b6a19dc053a20645c",
                "status": "modified"
            },
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/maven-2/blob/1694080fd6b53f099bce676acf72771770926a3c/maven-model/src/test/java/org/apache/maven/model/DeploymentRepositoryTest.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/maven-2/contents/maven-model/src/test/java/org/apache/maven/model/DeploymentRepositoryTest.java?ref=1694080fd6b53f099bce676acf72771770926a3c",
                "deletions": 0,
                "filename": "maven-model/src/test/java/org/apache/maven/model/DeploymentRepositoryTest.java",
                "patch": "@@ -39,6 +39,8 @@ public void testHashCodeNullSafe()\n     public void testEqualsNullSafe()\n     {\n         assertFalse( new DeploymentRepository().equals( null ) );\n+\n+        new DeploymentRepository().equals( new DeploymentRepository() );\n     }\n \n     public void testEqualsIdentity()",
                "raw_url": "https://github.com/apache/maven-2/raw/1694080fd6b53f099bce676acf72771770926a3c/maven-model/src/test/java/org/apache/maven/model/DeploymentRepositoryTest.java",
                "sha": "b16c85cfe15d9099d5f5bf82c317c7fff0b948a8",
                "status": "modified"
            },
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/maven-2/blob/1694080fd6b53f099bce676acf72771770926a3c/maven-model/src/test/java/org/apache/maven/model/DeveloperTest.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/maven-2/contents/maven-model/src/test/java/org/apache/maven/model/DeveloperTest.java?ref=1694080fd6b53f099bce676acf72771770926a3c",
                "deletions": 0,
                "filename": "maven-model/src/test/java/org/apache/maven/model/DeveloperTest.java",
                "patch": "@@ -39,6 +39,8 @@ public void testHashCodeNullSafe()\n     public void testEqualsNullSafe()\n     {\n         assertFalse( new Developer().equals( null ) );\n+\n+        new Developer().equals( new Developer() );\n     }\n \n     public void testEqualsIdentity()",
                "raw_url": "https://github.com/apache/maven-2/raw/1694080fd6b53f099bce676acf72771770926a3c/maven-model/src/test/java/org/apache/maven/model/DeveloperTest.java",
                "sha": "45ee509028120600a5add7123fec8e6ff7438f3e",
                "status": "modified"
            },
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/maven-2/blob/1694080fd6b53f099bce676acf72771770926a3c/maven-model/src/test/java/org/apache/maven/model/DistributionManagementTest.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/maven-2/contents/maven-model/src/test/java/org/apache/maven/model/DistributionManagementTest.java?ref=1694080fd6b53f099bce676acf72771770926a3c",
                "deletions": 0,
                "filename": "maven-model/src/test/java/org/apache/maven/model/DistributionManagementTest.java",
                "patch": "@@ -39,6 +39,8 @@ public void testHashCodeNullSafe()\n     public void testEqualsNullSafe()\n     {\n         assertFalse( new DistributionManagement().equals( null ) );\n+\n+        new DistributionManagement().equals( new DistributionManagement() );\n     }\n \n     public void testEqualsIdentity()",
                "raw_url": "https://github.com/apache/maven-2/raw/1694080fd6b53f099bce676acf72771770926a3c/maven-model/src/test/java/org/apache/maven/model/DistributionManagementTest.java",
                "sha": "5a7a155bffb8cad8aee90bd7fa54ffa9d40a7125",
                "status": "modified"
            },
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/maven-2/blob/1694080fd6b53f099bce676acf72771770926a3c/maven-model/src/test/java/org/apache/maven/model/ExclusionTest.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/maven-2/contents/maven-model/src/test/java/org/apache/maven/model/ExclusionTest.java?ref=1694080fd6b53f099bce676acf72771770926a3c",
                "deletions": 0,
                "filename": "maven-model/src/test/java/org/apache/maven/model/ExclusionTest.java",
                "patch": "@@ -39,6 +39,8 @@ public void testHashCodeNullSafe()\n     public void testEqualsNullSafe()\n     {\n         assertFalse( new Exclusion().equals( null ) );\n+\n+        new Exclusion().equals( new Exclusion() );\n     }\n \n     public void testEqualsIdentity()",
                "raw_url": "https://github.com/apache/maven-2/raw/1694080fd6b53f099bce676acf72771770926a3c/maven-model/src/test/java/org/apache/maven/model/ExclusionTest.java",
                "sha": "d6fb2d72e96d47a4e050d31daa5bc097dd3a10c2",
                "status": "modified"
            },
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/maven-2/blob/1694080fd6b53f099bce676acf72771770926a3c/maven-model/src/test/java/org/apache/maven/model/ExtensionTest.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/maven-2/contents/maven-model/src/test/java/org/apache/maven/model/ExtensionTest.java?ref=1694080fd6b53f099bce676acf72771770926a3c",
                "deletions": 0,
                "filename": "maven-model/src/test/java/org/apache/maven/model/ExtensionTest.java",
                "patch": "@@ -39,6 +39,8 @@ public void testHashCodeNullSafe()\n     public void testEqualsNullSafe()\n     {\n         assertFalse( new Extension().equals( null ) );\n+\n+        new Extension().equals( new Extension() );\n     }\n \n     public void testEqualsIdentity()",
                "raw_url": "https://github.com/apache/maven-2/raw/1694080fd6b53f099bce676acf72771770926a3c/maven-model/src/test/java/org/apache/maven/model/ExtensionTest.java",
                "sha": "db74935a9c33081c94410567e1641749ec478605",
                "status": "modified"
            },
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/maven-2/blob/1694080fd6b53f099bce676acf72771770926a3c/maven-model/src/test/java/org/apache/maven/model/IssueManagementTest.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/maven-2/contents/maven-model/src/test/java/org/apache/maven/model/IssueManagementTest.java?ref=1694080fd6b53f099bce676acf72771770926a3c",
                "deletions": 0,
                "filename": "maven-model/src/test/java/org/apache/maven/model/IssueManagementTest.java",
                "patch": "@@ -39,6 +39,8 @@ public void testHashCodeNullSafe()\n     public void testEqualsNullSafe()\n     {\n         assertFalse( new IssueManagement().equals( null ) );\n+\n+        new IssueManagement().equals( new IssueManagement() );\n     }\n \n     public void testEqualsIdentity()",
                "raw_url": "https://github.com/apache/maven-2/raw/1694080fd6b53f099bce676acf72771770926a3c/maven-model/src/test/java/org/apache/maven/model/IssueManagementTest.java",
                "sha": "5b5150905ec70bff1a831ff3ed8f27d26574ef16",
                "status": "modified"
            },
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/maven-2/blob/1694080fd6b53f099bce676acf72771770926a3c/maven-model/src/test/java/org/apache/maven/model/LicenseTest.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/maven-2/contents/maven-model/src/test/java/org/apache/maven/model/LicenseTest.java?ref=1694080fd6b53f099bce676acf72771770926a3c",
                "deletions": 0,
                "filename": "maven-model/src/test/java/org/apache/maven/model/LicenseTest.java",
                "patch": "@@ -39,6 +39,8 @@ public void testHashCodeNullSafe()\n     public void testEqualsNullSafe()\n     {\n         assertFalse( new License().equals( null ) );\n+\n+        new License().equals( new License() );\n     }\n \n     public void testEqualsIdentity()",
                "raw_url": "https://github.com/apache/maven-2/raw/1694080fd6b53f099bce676acf72771770926a3c/maven-model/src/test/java/org/apache/maven/model/LicenseTest.java",
                "sha": "e1826f53f980ee0c16d486fd96dc325c8780c0fb",
                "status": "modified"
            },
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/maven-2/blob/1694080fd6b53f099bce676acf72771770926a3c/maven-model/src/test/java/org/apache/maven/model/MailingListTest.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/maven-2/contents/maven-model/src/test/java/org/apache/maven/model/MailingListTest.java?ref=1694080fd6b53f099bce676acf72771770926a3c",
                "deletions": 0,
                "filename": "maven-model/src/test/java/org/apache/maven/model/MailingListTest.java",
                "patch": "@@ -39,6 +39,8 @@ public void testHashCodeNullSafe()\n     public void testEqualsNullSafe()\n     {\n         assertFalse( new MailingList().equals( null ) );\n+\n+        new MailingList().equals( new MailingList() );\n     }\n \n     public void testEqualsIdentity()",
                "raw_url": "https://github.com/apache/maven-2/raw/1694080fd6b53f099bce676acf72771770926a3c/maven-model/src/test/java/org/apache/maven/model/MailingListTest.java",
                "sha": "028583e02e91c59c76e34cd16d198ff72cb8ac5d",
                "status": "modified"
            },
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/maven-2/blob/1694080fd6b53f099bce676acf72771770926a3c/maven-model/src/test/java/org/apache/maven/model/ModelTest.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/maven-2/contents/maven-model/src/test/java/org/apache/maven/model/ModelTest.java?ref=1694080fd6b53f099bce676acf72771770926a3c",
                "deletions": 0,
                "filename": "maven-model/src/test/java/org/apache/maven/model/ModelTest.java",
                "patch": "@@ -39,6 +39,8 @@ public void testHashCodeNullSafe()\n     public void testEqualsNullSafe()\n     {\n         assertFalse( new Model().equals( null ) );\n+\n+        new Model().equals( new Model() );\n     }\n \n     public void testEqualsIdentity()",
                "raw_url": "https://github.com/apache/maven-2/raw/1694080fd6b53f099bce676acf72771770926a3c/maven-model/src/test/java/org/apache/maven/model/ModelTest.java",
                "sha": "f322a343d711e33da13a386601da43e9848ef530",
                "status": "modified"
            },
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/maven-2/blob/1694080fd6b53f099bce676acf72771770926a3c/maven-model/src/test/java/org/apache/maven/model/NotifierTest.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/maven-2/contents/maven-model/src/test/java/org/apache/maven/model/NotifierTest.java?ref=1694080fd6b53f099bce676acf72771770926a3c",
                "deletions": 0,
                "filename": "maven-model/src/test/java/org/apache/maven/model/NotifierTest.java",
                "patch": "@@ -39,6 +39,8 @@ public void testHashCodeNullSafe()\n     public void testEqualsNullSafe()\n     {\n         assertFalse( new Notifier().equals( null ) );\n+\n+        new Notifier().equals( new Notifier() );\n     }\n \n     public void testEqualsIdentity()",
                "raw_url": "https://github.com/apache/maven-2/raw/1694080fd6b53f099bce676acf72771770926a3c/maven-model/src/test/java/org/apache/maven/model/NotifierTest.java",
                "sha": "961094e2b9ae3f17bf3f43cc4fd6b0a8c8483942",
                "status": "modified"
            },
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/maven-2/blob/1694080fd6b53f099bce676acf72771770926a3c/maven-model/src/test/java/org/apache/maven/model/OrganizationTest.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/maven-2/contents/maven-model/src/test/java/org/apache/maven/model/OrganizationTest.java?ref=1694080fd6b53f099bce676acf72771770926a3c",
                "deletions": 0,
                "filename": "maven-model/src/test/java/org/apache/maven/model/OrganizationTest.java",
                "patch": "@@ -39,6 +39,8 @@ public void testHashCodeNullSafe()\n     public void testEqualsNullSafe()\n     {\n         assertFalse( new Organization().equals( null ) );\n+\n+        new Organization().equals( new Organization() );\n     }\n \n     public void testEqualsIdentity()",
                "raw_url": "https://github.com/apache/maven-2/raw/1694080fd6b53f099bce676acf72771770926a3c/maven-model/src/test/java/org/apache/maven/model/OrganizationTest.java",
                "sha": "3bb3ec17ad6b62877c74fcb40a24f201b15ffefc",
                "status": "modified"
            },
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/maven-2/blob/1694080fd6b53f099bce676acf72771770926a3c/maven-model/src/test/java/org/apache/maven/model/ParentTest.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/maven-2/contents/maven-model/src/test/java/org/apache/maven/model/ParentTest.java?ref=1694080fd6b53f099bce676acf72771770926a3c",
                "deletions": 0,
                "filename": "maven-model/src/test/java/org/apache/maven/model/ParentTest.java",
                "patch": "@@ -39,6 +39,8 @@ public void testHashCodeNullSafe()\n     public void testEqualsNullSafe()\n     {\n         assertFalse( new Parent().equals( null ) );\n+\n+        new Parent().equals( new Parent() );\n     }\n \n     public void testEqualsIdentity()",
                "raw_url": "https://github.com/apache/maven-2/raw/1694080fd6b53f099bce676acf72771770926a3c/maven-model/src/test/java/org/apache/maven/model/ParentTest.java",
                "sha": "0be4324e7f4aeb79e66dd6f6db944cc797874693",
                "status": "modified"
            },
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/maven-2/blob/1694080fd6b53f099bce676acf72771770926a3c/maven-model/src/test/java/org/apache/maven/model/PluginConfigurationTest.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/maven-2/contents/maven-model/src/test/java/org/apache/maven/model/PluginConfigurationTest.java?ref=1694080fd6b53f099bce676acf72771770926a3c",
                "deletions": 0,
                "filename": "maven-model/src/test/java/org/apache/maven/model/PluginConfigurationTest.java",
                "patch": "@@ -39,6 +39,8 @@ public void testHashCodeNullSafe()\n     public void testEqualsNullSafe()\n     {\n         assertFalse( new PluginConfiguration().equals( null ) );\n+\n+        new PluginConfiguration().equals( new PluginConfiguration() );\n     }\n \n     public void testEqualsIdentity()",
                "raw_url": "https://github.com/apache/maven-2/raw/1694080fd6b53f099bce676acf72771770926a3c/maven-model/src/test/java/org/apache/maven/model/PluginConfigurationTest.java",
                "sha": "349d4646c1a4734c0ba2cd3e38b3360eb9b3f5cb",
                "status": "modified"
            },
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/maven-2/blob/1694080fd6b53f099bce676acf72771770926a3c/maven-model/src/test/java/org/apache/maven/model/PluginContainerTest.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/maven-2/contents/maven-model/src/test/java/org/apache/maven/model/PluginContainerTest.java?ref=1694080fd6b53f099bce676acf72771770926a3c",
                "deletions": 0,
                "filename": "maven-model/src/test/java/org/apache/maven/model/PluginContainerTest.java",
                "patch": "@@ -39,6 +39,8 @@ public void testHashCodeNullSafe()\n     public void testEqualsNullSafe()\n     {\n         assertFalse( new PluginContainer().equals( null ) );\n+\n+        new PluginContainer().equals( new PluginContainer() );\n     }\n \n     public void testEqualsIdentity()",
                "raw_url": "https://github.com/apache/maven-2/raw/1694080fd6b53f099bce676acf72771770926a3c/maven-model/src/test/java/org/apache/maven/model/PluginContainerTest.java",
                "sha": "85b1d34836c48cb52c975699c961e92e81a50c6e",
                "status": "modified"
            },
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/maven-2/blob/1694080fd6b53f099bce676acf72771770926a3c/maven-model/src/test/java/org/apache/maven/model/PluginExecutionTest.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/maven-2/contents/maven-model/src/test/java/org/apache/maven/model/PluginExecutionTest.java?ref=1694080fd6b53f099bce676acf72771770926a3c",
                "deletions": 0,
                "filename": "maven-model/src/test/java/org/apache/maven/model/PluginExecutionTest.java",
                "patch": "@@ -39,6 +39,8 @@ public void testHashCodeNullSafe()\n     public void testEqualsNullSafe()\n     {\n         assertFalse( new PluginExecution().equals( null ) );\n+\n+        new PluginExecution().equals( new PluginExecution() );\n     }\n \n     public void testEqualsIdentity()",
                "raw_url": "https://github.com/apache/maven-2/raw/1694080fd6b53f099bce676acf72771770926a3c/maven-model/src/test/java/org/apache/maven/model/PluginExecutionTest.java",
                "sha": "341b5d615bf759000360194e18a47228f6d2de05",
                "status": "modified"
            },
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/maven-2/blob/1694080fd6b53f099bce676acf72771770926a3c/maven-model/src/test/java/org/apache/maven/model/PluginManagementTest.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/maven-2/contents/maven-model/src/test/java/org/apache/maven/model/PluginManagementTest.java?ref=1694080fd6b53f099bce676acf72771770926a3c",
                "deletions": 0,
                "filename": "maven-model/src/test/java/org/apache/maven/model/PluginManagementTest.java",
                "patch": "@@ -39,6 +39,8 @@ public void testHashCodeNullSafe()\n     public void testEqualsNullSafe()\n     {\n         assertFalse( new PluginManagement().equals( null ) );\n+\n+        new PluginManagement().equals( new PluginManagement() );\n     }\n \n     public void testEqualsIdentity()",
                "raw_url": "https://github.com/apache/maven-2/raw/1694080fd6b53f099bce676acf72771770926a3c/maven-model/src/test/java/org/apache/maven/model/PluginManagementTest.java",
                "sha": "93331463353da1991dc9da408bce228495407249",
                "status": "modified"
            },
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/maven-2/blob/1694080fd6b53f099bce676acf72771770926a3c/maven-model/src/test/java/org/apache/maven/model/PluginTest.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/maven-2/contents/maven-model/src/test/java/org/apache/maven/model/PluginTest.java?ref=1694080fd6b53f099bce676acf72771770926a3c",
                "deletions": 0,
                "filename": "maven-model/src/test/java/org/apache/maven/model/PluginTest.java",
                "patch": "@@ -39,6 +39,8 @@ public void testHashCodeNullSafe()\n     public void testEqualsNullSafe()\n     {\n         assertFalse( new Plugin().equals( null ) );\n+\n+        new Plugin().equals( new Plugin() );\n     }\n \n     public void testEqualsIdentity()",
                "raw_url": "https://github.com/apache/maven-2/raw/1694080fd6b53f099bce676acf72771770926a3c/maven-model/src/test/java/org/apache/maven/model/PluginTest.java",
                "sha": "e7be0a692959e1ee61cf1ebe6766d421518d16d6",
                "status": "modified"
            },
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/maven-2/blob/1694080fd6b53f099bce676acf72771770926a3c/maven-model/src/test/java/org/apache/maven/model/PrerequisitesTest.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/maven-2/contents/maven-model/src/test/java/org/apache/maven/model/PrerequisitesTest.java?ref=1694080fd6b53f099bce676acf72771770926a3c",
                "deletions": 0,
                "filename": "maven-model/src/test/java/org/apache/maven/model/PrerequisitesTest.java",
                "patch": "@@ -39,6 +39,8 @@ public void testHashCodeNullSafe()\n     public void testEqualsNullSafe()\n     {\n         assertFalse( new Prerequisites().equals( null ) );\n+\n+        new Prerequisites().equals( new Prerequisites() );\n     }\n \n     public void testEqualsIdentity()",
                "raw_url": "https://github.com/apache/maven-2/raw/1694080fd6b53f099bce676acf72771770926a3c/maven-model/src/test/java/org/apache/maven/model/PrerequisitesTest.java",
                "sha": "daa9c266445b9ad4b5eb373d4ac62a5600b96819",
                "status": "modified"
            },
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/maven-2/blob/1694080fd6b53f099bce676acf72771770926a3c/maven-model/src/test/java/org/apache/maven/model/ProfileTest.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/maven-2/contents/maven-model/src/test/java/org/apache/maven/model/ProfileTest.java?ref=1694080fd6b53f099bce676acf72771770926a3c",
                "deletions": 0,
                "filename": "maven-model/src/test/java/org/apache/maven/model/ProfileTest.java",
                "patch": "@@ -39,6 +39,8 @@ public void testHashCodeNullSafe()\n     public void testEqualsNullSafe()\n     {\n         assertFalse( new Profile().equals( null ) );\n+\n+        new Profile().equals( new Profile() );\n     }\n \n     public void testEqualsIdentity()",
                "raw_url": "https://github.com/apache/maven-2/raw/1694080fd6b53f099bce676acf72771770926a3c/maven-model/src/test/java/org/apache/maven/model/ProfileTest.java",
                "sha": "ae111ee15e491885fd9004fad696ff8afd8404e8",
                "status": "modified"
            },
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/maven-2/blob/1694080fd6b53f099bce676acf72771770926a3c/maven-model/src/test/java/org/apache/maven/model/RelocationTest.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/maven-2/contents/maven-model/src/test/java/org/apache/maven/model/RelocationTest.java?ref=1694080fd6b53f099bce676acf72771770926a3c",
                "deletions": 0,
                "filename": "maven-model/src/test/java/org/apache/maven/model/RelocationTest.java",
                "patch": "@@ -39,6 +39,8 @@ public void testHashCodeNullSafe()\n     public void testEqualsNullSafe()\n     {\n         assertFalse( new Relocation().equals( null ) );\n+\n+        new Relocation().equals( new Relocation() );\n     }\n \n     public void testEqualsIdentity()",
                "raw_url": "https://github.com/apache/maven-2/raw/1694080fd6b53f099bce676acf72771770926a3c/maven-model/src/test/java/org/apache/maven/model/RelocationTest.java",
                "sha": "0ae97f7d0acf3de74d18623845c9a8542a489056",
                "status": "modified"
            },
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/maven-2/blob/1694080fd6b53f099bce676acf72771770926a3c/maven-model/src/test/java/org/apache/maven/model/ReportPluginTest.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/maven-2/contents/maven-model/src/test/java/org/apache/maven/model/ReportPluginTest.java?ref=1694080fd6b53f099bce676acf72771770926a3c",
                "deletions": 0,
                "filename": "maven-model/src/test/java/org/apache/maven/model/ReportPluginTest.java",
                "patch": "@@ -39,6 +39,8 @@ public void testHashCodeNullSafe()\n     public void testEqualsNullSafe()\n     {\n         assertFalse( new ReportPlugin().equals( null ) );\n+\n+        new ReportPlugin().equals( new ReportPlugin() );\n     }\n \n     public void testEqualsIsKey()",
                "raw_url": "https://github.com/apache/maven-2/raw/1694080fd6b53f099bce676acf72771770926a3c/maven-model/src/test/java/org/apache/maven/model/ReportPluginTest.java",
                "sha": "cd3fb8547a78b92aa53213b70efb669a3231101b",
                "status": "modified"
            },
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/maven-2/blob/1694080fd6b53f099bce676acf72771770926a3c/maven-model/src/test/java/org/apache/maven/model/ReportSetTest.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/maven-2/contents/maven-model/src/test/java/org/apache/maven/model/ReportSetTest.java?ref=1694080fd6b53f099bce676acf72771770926a3c",
                "deletions": 0,
                "filename": "maven-model/src/test/java/org/apache/maven/model/ReportSetTest.java",
                "patch": "@@ -39,6 +39,8 @@ public void testHashCodeNullSafe()\n     public void testEqualsNullSafe()\n     {\n         assertFalse( new ReportSet().equals( null ) );\n+\n+        new ReportSet().equals( new ReportSet() );\n     }\n \n     public void testEqualsIdentity()",
                "raw_url": "https://github.com/apache/maven-2/raw/1694080fd6b53f099bce676acf72771770926a3c/maven-model/src/test/java/org/apache/maven/model/ReportSetTest.java",
                "sha": "9dc6d063d491603f0393d8c8b786da997c8457fc",
                "status": "modified"
            },
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/maven-2/blob/1694080fd6b53f099bce676acf72771770926a3c/maven-model/src/test/java/org/apache/maven/model/ReportingTest.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/maven-2/contents/maven-model/src/test/java/org/apache/maven/model/ReportingTest.java?ref=1694080fd6b53f099bce676acf72771770926a3c",
                "deletions": 0,
                "filename": "maven-model/src/test/java/org/apache/maven/model/ReportingTest.java",
                "patch": "@@ -39,6 +39,8 @@ public void testHashCodeNullSafe()\n     public void testEqualsNullSafe()\n     {\n         assertFalse( new Reporting().equals( null ) );\n+\n+        new Reporting().equals( new Reporting() );\n     }\n \n     public void testEqualsIdentity()",
                "raw_url": "https://github.com/apache/maven-2/raw/1694080fd6b53f099bce676acf72771770926a3c/maven-model/src/test/java/org/apache/maven/model/ReportingTest.java",
                "sha": "20c88d274023d5f9c013332463d990f87b814a4a",
                "status": "modified"
            },
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/maven-2/blob/1694080fd6b53f099bce676acf72771770926a3c/maven-model/src/test/java/org/apache/maven/model/RepositoryPolicyTest.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/maven-2/contents/maven-model/src/test/java/org/apache/maven/model/RepositoryPolicyTest.java?ref=1694080fd6b53f099bce676acf72771770926a3c",
                "deletions": 0,
                "filename": "maven-model/src/test/java/org/apache/maven/model/RepositoryPolicyTest.java",
                "patch": "@@ -39,6 +39,8 @@ public void testHashCodeNullSafe()\n     public void testEqualsNullSafe()\n     {\n         assertFalse( new RepositoryPolicy().equals( null ) );\n+\n+        new RepositoryPolicy().equals( new RepositoryPolicy() );\n     }\n \n     public void testEqualsIdentity()",
                "raw_url": "https://github.com/apache/maven-2/raw/1694080fd6b53f099bce676acf72771770926a3c/maven-model/src/test/java/org/apache/maven/model/RepositoryPolicyTest.java",
                "sha": "639a29e40418cc3ed15c216b7560728b66d1f5ac",
                "status": "modified"
            },
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/maven-2/blob/1694080fd6b53f099bce676acf72771770926a3c/maven-model/src/test/java/org/apache/maven/model/RepositoryTest.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/maven-2/contents/maven-model/src/test/java/org/apache/maven/model/RepositoryTest.java?ref=1694080fd6b53f099bce676acf72771770926a3c",
                "deletions": 0,
                "filename": "maven-model/src/test/java/org/apache/maven/model/RepositoryTest.java",
                "patch": "@@ -39,6 +39,8 @@ public void testHashCodeNullSafe()\n     public void testEqualsNullSafe()\n     {\n         assertFalse( new Repository().equals( null ) );\n+\n+        new Repository().equals( new Repository() );\n     }\n \n     public void testEqualsIdentity()",
                "raw_url": "https://github.com/apache/maven-2/raw/1694080fd6b53f099bce676acf72771770926a3c/maven-model/src/test/java/org/apache/maven/model/RepositoryTest.java",
                "sha": "8f6a03ebc2ec7fb4e02cb9e6c6415ed911dd7911",
                "status": "modified"
            },
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/maven-2/blob/1694080fd6b53f099bce676acf72771770926a3c/maven-model/src/test/java/org/apache/maven/model/ResourceTest.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/maven-2/contents/maven-model/src/test/java/org/apache/maven/model/ResourceTest.java?ref=1694080fd6b53f099bce676acf72771770926a3c",
                "deletions": 0,
                "filename": "maven-model/src/test/java/org/apache/maven/model/ResourceTest.java",
                "patch": "@@ -39,6 +39,8 @@ public void testHashCodeNullSafe()\n     public void testEqualsNullSafe()\n     {\n         assertFalse( new Resource().equals( null ) );\n+\n+        new Resource().equals( new Resource() );\n     }\n \n     public void testEqualsIdentity()",
                "raw_url": "https://github.com/apache/maven-2/raw/1694080fd6b53f099bce676acf72771770926a3c/maven-model/src/test/java/org/apache/maven/model/ResourceTest.java",
                "sha": "4515c6c75e7e5044b0260c3ac9fd1368baf6da18",
                "status": "modified"
            },
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/maven-2/blob/1694080fd6b53f099bce676acf72771770926a3c/maven-model/src/test/java/org/apache/maven/model/ScmTest.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/maven-2/contents/maven-model/src/test/java/org/apache/maven/model/ScmTest.java?ref=1694080fd6b53f099bce676acf72771770926a3c",
                "deletions": 0,
                "filename": "maven-model/src/test/java/org/apache/maven/model/ScmTest.java",
                "patch": "@@ -39,6 +39,8 @@ public void testHashCodeNullSafe()\n     public void testEqualsNullSafe()\n     {\n         assertFalse( new Scm().equals( null ) );\n+\n+        new Scm().equals( new Scm() );\n     }\n \n     public void testEqualsIdentity()",
                "raw_url": "https://github.com/apache/maven-2/raw/1694080fd6b53f099bce676acf72771770926a3c/maven-model/src/test/java/org/apache/maven/model/ScmTest.java",
                "sha": "7d1e31f9952db1a93b02ea99d876389538792df7",
                "status": "modified"
            },
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/maven-2/blob/1694080fd6b53f099bce676acf72771770926a3c/maven-model/src/test/java/org/apache/maven/model/SiteTest.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/maven-2/contents/maven-model/src/test/java/org/apache/maven/model/SiteTest.java?ref=1694080fd6b53f099bce676acf72771770926a3c",
                "deletions": 0,
                "filename": "maven-model/src/test/java/org/apache/maven/model/SiteTest.java",
                "patch": "@@ -39,6 +39,8 @@ public void testHashCodeNullSafe()\n     public void testEqualsNullSafe()\n     {\n         assertFalse( new Site().equals( null ) );\n+\n+        new Site().equals( new Site() );\n     }\n \n     public void testEqualsIdentity()",
                "raw_url": "https://github.com/apache/maven-2/raw/1694080fd6b53f099bce676acf72771770926a3c/maven-model/src/test/java/org/apache/maven/model/SiteTest.java",
                "sha": "0d910eadb6e8beeb6a22de5cbd4722ee425c970e",
                "status": "modified"
            }
        ],
        "message": "[MNG-3265] maven-model Extension.equals causes NPE when any field is uninitialized\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/maven-2/branches/maven-2.2.x@793311 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/maven-2/commit/484cc50c1671f718e382f0c690241727936e5023",
        "patched_files": [
            "maven.java"
        ],
        "repo": "maven-2",
        "unit_tests": [
            "ReportPluginTest.java",
            "ActivationOSTest.java",
            "DeveloperTest.java",
            "BuildTest.java",
            "SiteTest.java",
            "ParentTest.java",
            "PluginExecutionTest.java",
            "ProfileTest.java",
            "ScmTest.java",
            "DistributionManagementTest.java",
            "PluginConfigurationTest.java",
            "ResourceTest.java",
            "MailingListTest.java",
            "DeploymentRepositoryTest.java",
            "IssueManagementTest.java",
            "ActivationPropertyTest.java",
            "OrganizationTest.java",
            "ActivationFileTest.java",
            "NotifierTest.java",
            "DependencyTest.java",
            "ExtensionTest.java",
            "RelocationTest.java",
            "DependencyManagementTest.java",
            "ExclusionTest.java",
            "RepositoryPolicyTest.java",
            "CiManagementTest.java",
            "ReportSetTest.java",
            "ContributorTest.java",
            "ReportingTest.java",
            "ActivationTest.java",
            "PluginContainerTest.java",
            "PluginTest.java",
            "LicenseTest.java",
            "PluginManagementTest.java",
            "PrerequisitesTest.java",
            "RepositoryTest.java",
            "ModelTest.java"
        ]
    },
    "maven-2_16ea6ce": {
        "bug_id": "maven-2_16ea6ce",
        "commit": "https://github.com/apache/maven-2/commit/16ea6ce332bf399267bfc2c449496e23736433b2",
        "file": [
            {
                "additions": 18,
                "blob_url": "https://github.com/apache/maven-2/blob/16ea6ce332bf399267bfc2c449496e23736433b2/maven-core/src/main/java/org/apache/maven/project/interpolation/RegexBasedModelInterpolator.java",
                "changes": 37,
                "contents_url": "https://api.github.com/repos/apache/maven-2/contents/maven-core/src/main/java/org/apache/maven/project/interpolation/RegexBasedModelInterpolator.java?ref=16ea6ce332bf399267bfc2c449496e23736433b2",
                "deletions": 19,
                "filename": "maven-core/src/main/java/org/apache/maven/project/interpolation/RegexBasedModelInterpolator.java",
                "patch": "@@ -1,20 +1,19 @@\n package org.apache.maven.project.interpolation;\n \n-/* ====================================================================\n- *   Copyright 2001-2004 The Apache Software Foundation.\n+/*\n+ * Copyright 2001-2005 The Apache Software Foundation.\n  *\n- *   Licensed under the Apache License, Version 2.0 (the \"License\");\n- *   you may not use this file except in compliance with the License.\n- *   You may obtain a copy of the License at\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n  *\n- *       http://www.apache.org/licenses/LICENSE-2.0\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n  *\n- *   Unless required by applicable law or agreed to in writing, software\n- *   distributed under the License is distributed on an \"AS IS\" BASIS,\n- *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n- *   See the License for the specific language governing permissions and\n- *   limitations under the License.\n- * ====================================================================\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n  */\n \n import org.apache.maven.model.Model;\n@@ -32,12 +31,12 @@\n \n /**\n  * @author jdcasey Created on Feb 3, 2005\n+ * @version $Id$\n  */\n public class RegexBasedModelInterpolator\n     extends AbstractLogEnabled\n     implements ModelInterpolator\n {\n-\n     private static final Pattern EXPRESSION_PATTERN = Pattern.compile( \"\\\\$\\\\{(pom|project\\\\.)?([^}]+)\\\\}\" );\n \n     /**\n@@ -89,10 +88,11 @@ private String interpolateInternal( String src, Model model )\n             String wholeExpr = matcher.group( 0 );\n             String realExpr = matcher.group( 2 );\n \n-            String value = null;\n+            Object value = null;\n+\n             try\n             {\n-                value = String.valueOf( ReflectionValueExtractor.evaluate( realExpr, model ) );\n+                value = ReflectionValueExtractor.evaluate( realExpr, model );\n             }\n             catch ( Exception e )\n             {\n@@ -105,15 +105,14 @@ private String interpolateInternal( String src, Model model )\n \n             if ( value != null )\n             {\n-                result = StringUtils.replace( result, wholeExpr, value );\n+                result = StringUtils.replace( result, wholeExpr, String.valueOf( value ) );\n                 // could use:\n-                // result = matcher.replaceFirst( value );\n-                // but this could result in multiple lookups of value, and replaceAll is not correct behaviour \n+                // result = matcher.replaceFirst( stringValue );\n+                // but this could result in multiple lookups of stringValue, and replaceAll is not correct behaviour\n                 matcher.reset( result );\n             }\n         }\n \n         return result;\n     }\n-\n }\n\\ No newline at end of file",
                "raw_url": "https://github.com/apache/maven-2/raw/16ea6ce332bf399267bfc2c449496e23736433b2/maven-core/src/main/java/org/apache/maven/project/interpolation/RegexBasedModelInterpolator.java",
                "sha": "a8ae1c89ace14c1b4fd34ce4a780654fe722dfe9",
                "status": "modified"
            },
            {
                "additions": 27,
                "blob_url": "https://github.com/apache/maven-2/blob/16ea6ce332bf399267bfc2c449496e23736433b2/maven-core/src/main/java/org/apache/maven/util/introspection/ReflectionValueExtractor.java",
                "changes": 48,
                "contents_url": "https://api.github.com/repos/apache/maven-2/contents/maven-core/src/main/java/org/apache/maven/util/introspection/ReflectionValueExtractor.java?ref=16ea6ce332bf399267bfc2c449496e23736433b2",
                "deletions": 21,
                "filename": "maven-core/src/main/java/org/apache/maven/util/introspection/ReflectionValueExtractor.java",
                "patch": "@@ -1,43 +1,41 @@\n package org.apache.maven.util.introspection;\n \n-/* ====================================================================\n- *   Copyright 2001-2004 The Apache Software Foundation.\n+/*\n+ * Copyright 2001-2005 The Apache Software Foundation.\n  *\n- *   Licensed under the Apache License, Version 2.0 (the \"License\");\n- *   you may not use this file except in compliance with the License.\n- *   You may obtain a copy of the License at\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n  *\n- *       http://www.apache.org/licenses/LICENSE-2.0\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n  *\n- *   Unless required by applicable law or agreed to in writing, software\n- *   distributed under the License is distributed on an \"AS IS\" BASIS,\n- *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n- *   See the License for the specific language governing permissions and\n- *   limitations under the License.\n- * ====================================================================\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n  */\n \n-import org.codehaus.plexus.util.StringUtils;\n-\n import java.lang.reflect.Method;\n import java.util.HashMap;\n import java.util.Map;\n import java.util.StringTokenizer;\n \n+import org.codehaus.plexus.util.StringUtils;\n+\n /**\n  * Using simple dotted expressions extract the values from a MavenProject\n  * instance, For example we might want to extract a value like:\n  * project.build.sourceDirectory\n- * \n+ *\n  * @author <a href=\"mailto:jason@maven.org\">Jason van Zyl </a>\n- * @version $Id: ReflectionValueExtractor.java,v 1.2 2005/03/01 07:05:33 brett\n- *          Exp $\n+ * @version $Id$\n  */\n public class ReflectionValueExtractor\n {\n-    private static Class[] args = new Class[0];\n+    private static Class[] args = new Class[ 0 ];\n \n-    private static Object[] params = new Object[0];\n+    private static Object[] params = new Object[ 0 ];\n \n     private static ClassMap classMap;\n \n@@ -48,7 +46,8 @@ private ReflectionValueExtractor()\n     }\n \n     // TODO: don't throw Exception\n-    public static Object evaluate( String expression, Object root ) throws Exception\n+    public static Object evaluate( String expression, Object root )\n+        throws Exception\n     {\n         // ----------------------------------------------------------------------\n         // Remove the leading \"project\" token\n@@ -75,6 +74,11 @@ public static Object evaluate( String expression, Object root ) throws Exception\n \n             Method method = classMap.findMethod( methodName, args );\n \n+            if ( method == null )\n+            {\n+                return null;\n+            }\n+\n             value = method.invoke( value, params );\n         }\n \n@@ -88,8 +92,10 @@ private static ClassMap getClassMap( Class clazz )\n         if ( classMap == null )\n         {\n             classMap = new ClassMap( clazz );\n+\n+            classMaps.put( clazz, classMap );\n         }\n \n         return classMap;\n     }\n-}\n\\ No newline at end of file\n+}",
                "raw_url": "https://github.com/apache/maven-2/raw/16ea6ce332bf399267bfc2c449496e23736433b2/maven-core/src/main/java/org/apache/maven/util/introspection/ReflectionValueExtractor.java",
                "sha": "487d89f0ce868f13ba5523c9c0bf5fd565c24d17",
                "status": "modified"
            },
            {
                "additions": 4,
                "blob_url": "https://github.com/apache/maven-2/blob/16ea6ce332bf399267bfc2c449496e23736433b2/maven-core/src/test/java/org/apache/maven/project/interpolation/RegexBasedModelInterpolatorTest.java",
                "changes": 8,
                "contents_url": "https://api.github.com/repos/apache/maven-2/contents/maven-core/src/test/java/org/apache/maven/project/interpolation/RegexBasedModelInterpolatorTest.java?ref=16ea6ce332bf399267bfc2c449496e23736433b2",
                "deletions": 4,
                "filename": "maven-core/src/test/java/org/apache/maven/project/interpolation/RegexBasedModelInterpolatorTest.java",
                "patch": "@@ -16,17 +16,18 @@\n  * limitations under the License.\n  */\n \n-import junit.framework.TestCase;\n import org.apache.maven.model.Dependency;\n import org.apache.maven.model.Model;\n \n+import junit.framework.TestCase;\n+\n /**\n  * @author jdcasey\n+ * @version $Id$\n  */\n public class RegexBasedModelInterpolatorTest\n     extends TestCase\n {\n-\n     public void testShouldInterpolateDependencyVersionToSetSameAsProjectVersion()\n         throws ModelInterpolationException\n     {\n@@ -75,5 +76,4 @@ public void testTwoReferences()\n \n         assertEquals( \"foo-3.8.1\", ( (Dependency) out.getDependencies().get( 0 ) ).getVersion() );\n     }\n-\n-}\n\\ No newline at end of file\n+}",
                "raw_url": "https://github.com/apache/maven-2/raw/16ea6ce332bf399267bfc2c449496e23736433b2/maven-core/src/test/java/org/apache/maven/project/interpolation/RegexBasedModelInterpolatorTest.java",
                "sha": "6abfedfb99c9199c9d8356959654c69815d62b21",
                "status": "modified"
            },
            {
                "additions": 6,
                "blob_url": "https://github.com/apache/maven-2/blob/16ea6ce332bf399267bfc2c449496e23736433b2/maven-core/src/test/java/org/apache/maven/util/introspection/ReflectionValueExtractorTest.java",
                "changes": 10,
                "contents_url": "https://api.github.com/repos/apache/maven-2/contents/maven-core/src/test/java/org/apache/maven/util/introspection/ReflectionValueExtractorTest.java?ref=16ea6ce332bf399267bfc2c449496e23736433b2",
                "deletions": 4,
                "filename": "maven-core/src/test/java/org/apache/maven/util/introspection/ReflectionValueExtractorTest.java",
                "patch": "@@ -33,15 +33,11 @@\n {\n     private MavenProject project;\n \n-    private MavenProjectBuilder builder;\n-\n     protected void setUp()\n         throws Exception\n     {\n         super.setUp();\n \n-        builder = (MavenProjectBuilder) lookup( MavenProjectBuilder.ROLE );\n-\n         File f = getFileForClasspathResource( \"pom.xml\" );\n \n         project = getProject( f );\n@@ -88,4 +84,10 @@ public void testValueExtraction()\n \n         assertNotNull( build );\n     }\n+\n+    public void testValueExtractorWithAInvalidExpression()\n+        throws Exception\n+    {\n+        assertNull( ReflectionValueExtractor.evaluate( \"project.foo\", project ) );\n+    }\n }",
                "raw_url": "https://github.com/apache/maven-2/raw/16ea6ce332bf399267bfc2c449496e23736433b2/maven-core/src/test/java/org/apache/maven/util/introspection/ReflectionValueExtractorTest.java",
                "sha": "829c9319aa44fbf3f6388b5cf465c90113af313f",
                "status": "modified"
            }
        ],
        "message": "o Fixing a NullPointerException in the value extractor if the specified getter\n  didn't exists. The value extractor will now return null if the getter doesn't\n  exists.\no Properly implemented the method caching in the value exctrator.\no Changed the RegexBasedModelInterpolator so it would properly handle null\n  values. It used to convert null to \"null\" and then insert that, now it will\n  leave the expression as is.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@163696 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/maven-2/commit/39a96456cddd9049a639679d4a9dad653294ea07",
        "patched_files": [
            "RegexBasedModelInterpolator.java",
            "ReflectionValueExtractor.java"
        ],
        "repo": "maven-2",
        "unit_tests": [
            "ReflectionValueExtractorTest.java",
            "RegexBasedModelInterpolatorTest.java"
        ]
    },
    "maven-2_3bf9e43": {
        "bug_id": "maven-2_3bf9e43",
        "commit": "https://github.com/apache/maven-2/commit/3bf9e4316e5f503d80afcec9048747f69382da7b",
        "file": [
            {
                "additions": 9,
                "blob_url": "https://github.com/apache/maven-2/blob/3bf9e4316e5f503d80afcec9048747f69382da7b/maven-project/src/main/java/org/apache/maven/project/inheritance/DefaultModelInheritanceAssembler.java",
                "changes": 12,
                "contents_url": "https://api.github.com/repos/apache/maven-2/contents/maven-project/src/main/java/org/apache/maven/project/inheritance/DefaultModelInheritanceAssembler.java?ref=3bf9e4316e5f503d80afcec9048747f69382da7b",
                "deletions": 3,
                "filename": "maven-project/src/main/java/org/apache/maven/project/inheritance/DefaultModelInheritanceAssembler.java",
                "patch": "@@ -538,10 +538,16 @@ protected String appendPath( String parentPath, String childPath, String pathAdj\n                 lastToken = currentToken;\n                 currentToken = tokens.nextToken();\n \n-                if ( \"..\".equals( currentToken ) )\n+                if ( \"..\".equals( currentToken ) && lastToken != null )\n                 {\n-                    // trim the previous path part off...\n-                    cleanedPath.setLength( cleanedPath.length() - ( lastToken.length() + 1 ) );\n+                    int cleanedPathLen = cleanedPath.length();\n+                    int lastTokenLen = lastToken.length();\n+                    \n+                    if ( cleanedPathLen > lastTokenLen )\n+                    {\n+                        // trim the previous path part off...\n+                        cleanedPath.setLength( cleanedPath.length() - ( lastToken.length() + 1 ) );\n+                    }\n                 }\n                 else if ( !\".\".equals( currentToken ) )\n                 {",
                "raw_url": "https://github.com/apache/maven-2/raw/3bf9e4316e5f503d80afcec9048747f69382da7b/maven-project/src/main/java/org/apache/maven/project/inheritance/DefaultModelInheritanceAssembler.java",
                "sha": "218670e8cc19343d1a77491251c8765132552998",
                "status": "modified"
            }
        ],
        "message": "(Merged from 382849.) Fixing NPE in appendPath(..) when calculating adjustments due to '..' in paths.\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/components/branches/maven-2.0.x@382854 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/maven-2/commit/d95f88bdce195ae1c9f99a5d59d038c77e39960c",
        "patched_files": [
            "DefaultModelInheritanceAssembler.java"
        ],
        "repo": "maven-2",
        "unit_tests": [
            "DefaultModelInheritanceAssemblerTest.java"
        ]
    },
    "maven-2_3f031d5": {
        "bug_id": "maven-2_3f031d5",
        "commit": "https://github.com/apache/maven-2/commit/3f031d5722ec5799c1fb72711867dda8b02b4b23",
        "file": [
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/maven-2/blob/3f031d5722ec5799c1fb72711867dda8b02b4b23/maven-core/src/main/java/org/apache/maven/lifecycle/DefaultLifecycleExecutor.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/maven-2/contents/maven-core/src/main/java/org/apache/maven/lifecycle/DefaultLifecycleExecutor.java?ref=3f031d5722ec5799c1fb72711867dda8b02b4b23",
                "deletions": 1,
                "filename": "maven-core/src/main/java/org/apache/maven/lifecycle/DefaultLifecycleExecutor.java",
                "patch": "@@ -200,7 +200,7 @@ private void injectHandlerPluginConfiguration( MavenProject project, String grou\n     private void processPluginConfiguration( MavenProject project, MavenSession mavenSession, Map phaseMap )\n         throws LifecycleExecutionException, ArtifactResolutionException\n     {\n-        for ( Iterator i = project.getPlugins().iterator(); i.hasNext(); )\n+        for ( Iterator i = project.getBuildPlugins().iterator(); i.hasNext(); )\n         {\n             Plugin plugin = (Plugin) i.next();\n ",
                "raw_url": "https://github.com/apache/maven-2/raw/3f031d5722ec5799c1fb72711867dda8b02b4b23/maven-core/src/main/java/org/apache/maven/lifecycle/DefaultLifecycleExecutor.java",
                "sha": "e2d4ddda3aa43dd60b05eed9250371067b85a0a5",
                "status": "modified"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/maven-2/blob/3f031d5722ec5799c1fb72711867dda8b02b4b23/maven-core/src/main/java/org/apache/maven/plugin/DefaultPluginManager.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/maven-2/contents/maven-core/src/main/java/org/apache/maven/plugin/DefaultPluginManager.java?ref=3f031d5722ec5799c1fb72711867dda8b02b4b23",
                "deletions": 1,
                "filename": "maven-core/src/main/java/org/apache/maven/plugin/DefaultPluginManager.java",
                "patch": "@@ -152,7 +152,7 @@ public PluginDescriptor verifyPlugin( String groupId, String artifactId, String\n \n             org.apache.maven.model.Plugin pluginConfig = null;\n \n-            for ( Iterator it = project.getPlugins().iterator(); it.hasNext(); )\n+            for ( Iterator it = project.getBuildPlugins().iterator(); it.hasNext(); )\n             {\n                 org.apache.maven.model.Plugin plugin = (org.apache.maven.model.Plugin) it.next();\n ",
                "raw_url": "https://github.com/apache/maven-2/raw/3f031d5722ec5799c1fb72711867dda8b02b4b23/maven-core/src/main/java/org/apache/maven/plugin/DefaultPluginManager.java",
                "sha": "ad3a8b46ee10793c59520aa7ab717a2112889196",
                "status": "modified"
            },
            {
                "additions": 9,
                "blob_url": "https://github.com/apache/maven-2/blob/3f031d5722ec5799c1fb72711867dda8b02b4b23/maven-core/src/main/java/org/apache/maven/plugin/PluginParameterExpressionEvaluator.java",
                "changes": 13,
                "contents_url": "https://api.github.com/repos/apache/maven-2/contents/maven-core/src/main/java/org/apache/maven/plugin/PluginParameterExpressionEvaluator.java?ref=3f031d5722ec5799c1fb72711867dda8b02b4b23",
                "deletions": 4,
                "filename": "maven-core/src/main/java/org/apache/maven/plugin/PluginParameterExpressionEvaluator.java",
                "patch": "@@ -28,6 +28,7 @@\n import java.io.File;\n import java.util.Iterator;\n import java.util.Map;\n+import java.util.List;\n \n /**\n  * @author <a href=\"mailto:jason@maven.org\">Jason van Zyl</a>\n@@ -84,11 +85,15 @@ public Object evaluate( String expr )\n             try\n             {\n                 PluginManager pluginManager = (PluginManager) context.lookup( role );\n-                for ( Iterator it = context.getProject().getReports().getPlugins().iterator(); it.hasNext(); )\n+                List reportPlugins = context.getProject().getReportPlugins();\n+                if ( reportPlugins != null )\n                 {\n-                    org.apache.maven.model.Plugin plugin = (org.apache.maven.model.Plugin) it.next();\n-                    pluginManager.verifyPlugin( plugin.getGroupId(), plugin.getArtifactId(), plugin.getVersion(),\n-                                                context );\n+                    for ( Iterator it = reportPlugins.iterator(); it.hasNext(); )\n+                    {\n+                        org.apache.maven.model.Plugin plugin = (org.apache.maven.model.Plugin) it.next();\n+                        pluginManager.verifyPlugin( plugin.getGroupId(), plugin.getArtifactId(), plugin.getVersion(),\n+                                                    context );\n+                    }\n                 }\n             }\n             catch ( ComponentLookupException cle )",
                "raw_url": "https://github.com/apache/maven-2/raw/3f031d5722ec5799c1fb72711867dda8b02b4b23/maven-core/src/main/java/org/apache/maven/plugin/PluginParameterExpressionEvaluator.java",
                "sha": "3bfdc79479b8f8f2c377b21e8b055376dae5edf5",
                "status": "modified"
            },
            {
                "additions": 13,
                "blob_url": "https://github.com/apache/maven-2/blob/3f031d5722ec5799c1fb72711867dda8b02b4b23/maven-project/src/main/java/org/apache/maven/project/MavenProject.java",
                "changes": 16,
                "contents_url": "https://api.github.com/repos/apache/maven-2/contents/maven-project/src/main/java/org/apache/maven/project/MavenProject.java?ref=3f031d5722ec5799c1fb72711867dda8b02b4b23",
                "deletions": 3,
                "filename": "maven-project/src/main/java/org/apache/maven/project/MavenProject.java",
                "patch": "@@ -677,7 +677,16 @@ public List getRepositories()\n     // Plugins\n     // ----------------------------------------------------------------------\n \n-    public List getPlugins()\n+    public List getReportPlugins()\n+    {\n+        if ( model.getReports() == null )\n+        {\n+            return null;\n+        }\n+        return model.getReports().getPlugins();\n+\n+    }\n+    public List getBuildPlugins()\n     {\n         if ( model.getBuild() == null )\n         {\n@@ -811,9 +820,9 @@ public Xpp3Dom getGoalConfiguration( String pluginGroupId, String pluginArtifact\n         // for now I have to iterate through and see what we have.\n         // ----------------------------------------------------------------------\n \n-        if ( getPlugins() != null )\n+        if ( getBuildPlugins() != null )\n         {\n-            for ( Iterator iterator = getPlugins().iterator(); iterator.hasNext(); )\n+            for ( Iterator iterator = getBuildPlugins().iterator(); iterator.hasNext(); )\n             {\n                 Plugin plugin = (Plugin) iterator.next();\n \n@@ -845,4 +854,5 @@ public List getPluginRepositories()\n     {\n         return model.getPluginRepositories();\n     }\n+\n }",
                "raw_url": "https://github.com/apache/maven-2/raw/3f031d5722ec5799c1fb72711867dda8b02b4b23/maven-project/src/main/java/org/apache/maven/project/MavenProject.java",
                "sha": "ed1bd73b79953432f967eb9448833efcaa9572ae",
                "status": "modified"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/maven-2/blob/3f031d5722ec5799c1fb72711867dda8b02b4b23/maven-project/src/test/java/org/apache/maven/project/canonical/CanonicalProjectBuilderTest.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/maven-2/contents/maven-project/src/test/java/org/apache/maven/project/canonical/CanonicalProjectBuilderTest.java?ref=3f031d5722ec5799c1fb72711867dda8b02b4b23",
                "deletions": 1,
                "filename": "maven-project/src/test/java/org/apache/maven/project/canonical/CanonicalProjectBuilderTest.java",
                "patch": "@@ -49,7 +49,7 @@ public void testProjectBuilder()\n         // Plugins\n         // ----------------------------------------------------------------------\n \n-        List plugins = project.getPlugins();\n+        List plugins = project.getBuildPlugins();\n \n         // Plugin0 [plexus]\n ",
                "raw_url": "https://github.com/apache/maven-2/raw/3f031d5722ec5799c1fb72711867dda8b02b4b23/maven-project/src/test/java/org/apache/maven/project/canonical/CanonicalProjectBuilderTest.java",
                "sha": "d29e424cab4fd689393e6035a7e21e4682fd3d89",
                "status": "modified"
            }
        ],
        "message": "avoid NPE if there are not report plugins defined in the POM when generating the site.\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@168565 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/maven-2/commit/57284e462cb9f55931774a5b9caa453d7deb42e7",
        "patched_files": [
            "DefaultLifecycleExecutor.java",
            "DefaultPluginManager.java",
            "MavenProject.java",
            "PluginParameterExpressionEvaluator.java"
        ],
        "repo": "maven-2",
        "unit_tests": [
            "PluginParameterExpressionEvaluatorTest.java",
            "CanonicalProjectBuilderTest.java"
        ]
    },
    "maven-2_40d4792": {
        "bug_id": "maven-2_40d4792",
        "commit": "https://github.com/apache/maven-2/commit/40d47927dee5a419ad71add6a80789bfd07e52ee",
        "file": [
            {
                "additions": 7,
                "blob_url": "https://github.com/apache/maven-2/blob/40d47927dee5a419ad71add6a80789bfd07e52ee/maven-plugin-tools/maven-plugin-tools-api/src/main/java/org/apache/maven/tools/plugin/generator/PluginDescriptorGenerator.java",
                "changes": 11,
                "contents_url": "https://api.github.com/repos/apache/maven-2/contents/maven-plugin-tools/maven-plugin-tools-api/src/main/java/org/apache/maven/tools/plugin/generator/PluginDescriptorGenerator.java?ref=40d47927dee5a419ad71add6a80789bfd07e52ee",
                "deletions": 4,
                "filename": "maven-plugin-tools/maven-plugin-tools-api/src/main/java/org/apache/maven/tools/plugin/generator/PluginDescriptorGenerator.java",
                "patch": "@@ -76,10 +76,13 @@ public void execute( File destinationDirectory, PluginDescriptor pluginDescripto\n             \n             w.startElement( \"mojos\" );\n \n-            for ( Iterator it = pluginDescriptor.getMojos().iterator(); it.hasNext(); )\n+            if ( pluginDescriptor.getMojos() != null )\n             {\n-                MojoDescriptor descriptor = (MojoDescriptor) it.next();\n-                processMojoDescriptor( descriptor, w );\n+                for ( Iterator it = pluginDescriptor.getMojos().iterator(); it.hasNext(); )\n+                {\n+                    MojoDescriptor descriptor = (MojoDescriptor) it.next();\n+                    processMojoDescriptor( descriptor, w );\n+                }\n             }\n \n             w.endElement();\n@@ -362,4 +365,4 @@ public void element( XMLWriter w, String name, String value )\n \n         w.endElement();\n     }\n-}\n\\ No newline at end of file\n+}",
                "raw_url": "https://github.com/apache/maven-2/raw/40d47927dee5a419ad71add6a80789bfd07e52ee/maven-plugin-tools/maven-plugin-tools-api/src/main/java/org/apache/maven/tools/plugin/generator/PluginDescriptorGenerator.java",
                "sha": "b27782b76833fc304a6affd0fdf6aad0370e39a1",
                "status": "modified"
            }
        ],
        "message": "o Fixing a small bug that would cause a NPE if a plugin doesn't contain any mojos.\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@179987 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/maven-2/commit/177692f82ca6659ba6022849ae991371e76ac3b3",
        "patched_files": [
            "PluginDescriptorGenerator.java"
        ],
        "repo": "maven-2",
        "unit_tests": [
            "PluginDescriptorGeneratorTest.java"
        ]
    },
    "maven-2_484cc50": {
        "bug_id": "maven-2_484cc50",
        "commit": "https://github.com/apache/maven-2/commit/484cc50c1671f718e382f0c690241727936e5023",
        "file": [
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/maven-2/blob/484cc50c1671f718e382f0c690241727936e5023/maven-core/src/main/java/org/apache/maven/usability/ArtifactResolverDiagnoser.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/maven-2/contents/maven-core/src/main/java/org/apache/maven/usability/ArtifactResolverDiagnoser.java?ref=484cc50c1671f718e382f0c690241727936e5023",
                "deletions": 1,
                "filename": "maven-core/src/main/java/org/apache/maven/usability/ArtifactResolverDiagnoser.java",
                "patch": "@@ -50,7 +50,7 @@ public String diagnose( Throwable error )\n \n         IOException ioe = (IOException) DiagnosisUtils.getFromCausality( exception, IOException.class );\n \n-        if ( ioe != null && exception.getMessage().indexOf( ioe.getMessage() ) < 0 )\n+        if ( ioe != null && ioe.getMessage() != null && exception.getMessage().indexOf( ioe.getMessage() ) < 0 )\n         {\n             message.append( \"\\n\\nCaused by I/O exception: \" ).append( ioe.getMessage() );\n         }",
                "raw_url": "https://github.com/apache/maven-2/raw/484cc50c1671f718e382f0c690241727936e5023/maven-core/src/main/java/org/apache/maven/usability/ArtifactResolverDiagnoser.java",
                "sha": "e27820c5ef49d9da0c045c5e2ba07d0ff443e670",
                "status": "modified"
            },
            {
                "additions": 53,
                "blob_url": "https://github.com/apache/maven-2/blob/484cc50c1671f718e382f0c690241727936e5023/maven-core/src/test/java/org/apache/maven/usability/ArtifactResolverDiagnoserTest.java",
                "changes": 53,
                "contents_url": "https://api.github.com/repos/apache/maven-2/contents/maven-core/src/test/java/org/apache/maven/usability/ArtifactResolverDiagnoserTest.java?ref=484cc50c1671f718e382f0c690241727936e5023",
                "deletions": 0,
                "filename": "maven-core/src/test/java/org/apache/maven/usability/ArtifactResolverDiagnoserTest.java",
                "patch": "@@ -0,0 +1,53 @@\n+package org.apache.maven.usability;\n+\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *  http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+import java.io.IOException;\n+\n+import org.apache.maven.artifact.resolver.ArtifactResolutionException;\n+import org.apache.maven.usability.diagnostics.ErrorDiagnoser;\n+import org.codehaus.plexus.PlexusTestCase;\n+\n+/**\n+ * @author Benjamin Bentmann\n+ * @version $Id$\n+ */\n+public class ArtifactResolverDiagnoserTest\n+    extends PlexusTestCase\n+{\n+\n+    /**\n+     * Tests that inner IOException without detail message does not crash diagnoser.\n+     * \n+     * @throws Exception\n+     */\n+    public void testNullMessage()\n+        throws Exception\n+    {\n+        ErrorDiagnoser diagnoser =\n+            (ArtifactResolverDiagnoser) lookup( ErrorDiagnoser.ROLE, \"ArtifactResolverDiagnoser\" );\n+\n+        Throwable error = new ArtifactResolutionException( null, null, null, null, null, null, new IOException() );\n+\n+        assertTrue( diagnoser.canDiagnose( error ) );\n+        diagnoser.diagnose( error );\n+    }\n+\n+}",
                "raw_url": "https://github.com/apache/maven-2/raw/484cc50c1671f718e382f0c690241727936e5023/maven-core/src/test/java/org/apache/maven/usability/ArtifactResolverDiagnoserTest.java",
                "sha": "201306da42b7493c2e518466a291282463ea515a",
                "status": "added"
            }
        ],
        "message": "[MNG-3753] ArtifactResolverDiagnoser.diagnose() fails with NPE if nested IOException has no detail message\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/maven-2/branches/maven-2.2.x@793305 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/maven-2/commit/edb0e166243ee1febc285d6c4593212d87ca8970",
        "patched_files": [
            "ArtifactResolverDiagnoser.java"
        ],
        "repo": "maven-2",
        "unit_tests": [
            "ArtifactResolverDiagnoserTest.java"
        ]
    },
    "maven-2_48f1133": {
        "bug_id": "maven-2_48f1133",
        "commit": "https://github.com/apache/maven-2/commit/48f1133974c4d05ff958d097f9f9607d5136ddd7",
        "file": [
            {
                "additions": 13,
                "blob_url": "https://github.com/apache/maven-2/blob/48f1133974c4d05ff958d097f9f9607d5136ddd7/maven-core/src/main/java/org/apache/maven/cli/MavenCli.java",
                "changes": 18,
                "contents_url": "https://api.github.com/repos/apache/maven-2/contents/maven-core/src/main/java/org/apache/maven/cli/MavenCli.java?ref=48f1133974c4d05ff958d097f9f9607d5136ddd7",
                "deletions": 5,
                "filename": "maven-core/src/main/java/org/apache/maven/cli/MavenCli.java",
                "patch": "@@ -536,16 +536,24 @@ private static void showVersion()\n             Properties properties = new Properties();\n             resourceAsStream = MavenCli.class.getClassLoader().getResourceAsStream(\n                 \"META-INF/maven/org.apache.maven/maven-core/pom.properties\" );\n-            properties.load( resourceAsStream );\n \n-            if( properties.getProperty( \"builtOn\" ) != null )\n+            if ( resourceAsStream != null )\n             {\n-                System.out.println( \"Maven version: \" + properties.getProperty( \"version\", \"unknown\" )\n-                    + \" built on \" + properties.getProperty( \"builtOn\" ) );\n+                properties.load( resourceAsStream );\n+\n+                if( properties.getProperty( \"builtOn\" ) != null )\n+                {\n+                    System.out.println( \"Maven version: \" + properties.getProperty( \"version\", \"unknown\" )\n+                        + \" built on \" + properties.getProperty( \"builtOn\" ) );\n+                }\n+                else\n+                {\n+                    System.out.println( \"Maven version: \" + properties.getProperty( \"version\", \"unknown\" ) );\n+                }\n             }\n             else\n             {\n-                System.out.println( \"Maven version: \" + properties.getProperty( \"version\", \"unknown\" ) );\n+                System.out.println( \"Maven version: unknown\" );\n             }\n \n             System.out.println( \"Java version: \" + System.getProperty( \"java.version\", \"<unknown java version>\" ) );",
                "raw_url": "https://github.com/apache/maven-2/raw/48f1133974c4d05ff958d097f9f9607d5136ddd7/maven-core/src/main/java/org/apache/maven/cli/MavenCli.java",
                "sha": "70fd6c7f5392febb84e7143c12bfa464c5caffac",
                "status": "modified"
            }
        ],
        "message": "o fixed potential NPE\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/components/branches/maven-2.0.x@633053 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/maven-2/commit/288a35989545921074b4d5ad34d9214141211bfd",
        "patched_files": [
            "MavenCli.java"
        ],
        "repo": "maven-2",
        "unit_tests": [
            "MavenCliTest.java"
        ]
    },
    "maven-2_51f23d9": {
        "bug_id": "maven-2_51f23d9",
        "commit": "https://github.com/apache/maven-2/commit/51f23d93d9234ba0c5c5c95b0724494c006e6c09",
        "file": [
            {
                "additions": 7,
                "blob_url": "https://github.com/apache/maven-2/blob/51f23d93d9234ba0c5c5c95b0724494c006e6c09/maven-project/src/main/java/org/apache/maven/project/ProjectSorter.java",
                "changes": 11,
                "contents_url": "https://api.github.com/repos/apache/maven-2/contents/maven-project/src/main/java/org/apache/maven/project/ProjectSorter.java?ref=51f23d93d9234ba0c5c5c95b0724494c006e6c09",
                "deletions": 4,
                "filename": "maven-project/src/main/java/org/apache/maven/project/ProjectSorter.java",
                "patch": "@@ -175,11 +175,14 @@ private void addEdgeWithParentCheck( Map projectMap, String extensionId, MavenPr\n         project.addProjectReference( extProject );\n \n         MavenProject extParent = extProject.getParent();\n-        String parentId = ArtifactUtils.versionlessKey( extParent.getGroupId(), extParent.getArtifactId() );\n-        // Don't add edge from parent to extension if a reverse edge already exists\n-        if ( !dag.hasEdge( extensionId, id ) || !parentId.equals( id ) )\n+        if ( extParent != null )\n         {\n-            dag.addEdge( id, extensionId );\n+            String parentId = ArtifactUtils.versionlessKey( extParent.getGroupId(), extParent.getArtifactId() );\n+            // Don't add edge from parent to extension if a reverse edge already exists\n+            if ( !dag.hasEdge( extensionId, id ) || !parentId.equals( id ) )\n+            {\n+                dag.addEdge( id, extensionId );\n+            }\n         }\n     }\n ",
                "raw_url": "https://github.com/apache/maven-2/raw/51f23d93d9234ba0c5c5c95b0724494c006e6c09/maven-project/src/main/java/org/apache/maven/project/ProjectSorter.java",
                "sha": "d01bb34be95a01330aba7bd4f5b5024f6a218d80",
                "status": "modified"
            }
        ],
        "message": "Fixing NPE.\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@328898 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/maven-2/commit/58e96169a60ad7a720abf6efe8e522c98bf058d8",
        "patched_files": [
            "ProjectSorter.java"
        ],
        "repo": "maven-2",
        "unit_tests": [
            "ProjectSorterTest.java"
        ]
    },
    "maven-2_6c0064a": {
        "bug_id": "maven-2_6c0064a",
        "commit": "https://github.com/apache/maven-2/commit/6c0064a80023606134db0476aa4802bbca931688",
        "file": [
            {
                "additions": 109,
                "blob_url": "https://github.com/apache/maven-2/blob/6c0064a80023606134db0476aa4802bbca931688/maven-artifact-manager/src/main/java/org/apache/maven/artifact/manager/DefaultWagonManager.java",
                "changes": 206,
                "contents_url": "https://api.github.com/repos/apache/maven-2/contents/maven-artifact-manager/src/main/java/org/apache/maven/artifact/manager/DefaultWagonManager.java?ref=6c0064a80023606134db0476aa4802bbca931688",
                "deletions": 97,
                "filename": "maven-artifact-manager/src/main/java/org/apache/maven/artifact/manager/DefaultWagonManager.java",
                "patch": "@@ -19,19 +19,6 @@\n  * under the License.\n  */\n \n-import java.io.File;\n-import java.io.IOException;\n-import java.net.MalformedURLException;\n-import java.net.URL;\n-import java.security.NoSuchAlgorithmException;\n-import java.util.Collection;\n-import java.util.HashMap;\n-import java.util.Iterator;\n-import java.util.LinkedHashMap;\n-import java.util.List;\n-import java.util.Map;\n-import java.util.Set;\n-\n import org.apache.maven.artifact.Artifact;\n import org.apache.maven.artifact.metadata.ArtifactMetadata;\n import org.apache.maven.artifact.repository.ArtifactRepository;\n@@ -66,12 +53,25 @@\n import org.codehaus.plexus.util.FileUtils;\n import org.codehaus.plexus.util.xml.Xpp3Dom;\n \n+import java.io.File;\n+import java.io.IOException;\n+import java.net.MalformedURLException;\n+import java.net.URL;\n+import java.security.NoSuchAlgorithmException;\n+import java.util.Collection;\n+import java.util.HashMap;\n+import java.util.Iterator;\n+import java.util.LinkedHashMap;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Set;\n+\n public class DefaultWagonManager\n     extends AbstractLogEnabled\n     implements WagonManager, Contextualizable\n {\n     private static final String WILDCARD = \"*\";\n-    \n+\n     private static final String EXTERNAL_WILDCARD = \"external:*\";\n \n     private PlexusContainer container;\n@@ -409,22 +409,6 @@ private void getRemoteFile( ArtifactRepository repository,\n             wagon.addTransferListener( downloadMonitor );\n         }\n \n-        // TODO: configure on repository\n-        ChecksumObserver md5ChecksumObserver;\n-        ChecksumObserver sha1ChecksumObserver;\n-        try\n-        {\n-            md5ChecksumObserver = new ChecksumObserver( \"MD5\" );\n-            wagon.addTransferListener( md5ChecksumObserver );\n-\n-            sha1ChecksumObserver = new ChecksumObserver( \"SHA-1\" );\n-            wagon.addTransferListener( sha1ChecksumObserver );\n-        }\n-        catch ( NoSuchAlgorithmException e )\n-        {\n-            throw new TransferFailedException( \"Unable to add checksum methods: \" + e.getMessage(), e );\n-        }\n-\n         File temp = new File( destination + \".tmp\" );\n         temp.deleteOnExit();\n \n@@ -446,100 +430,128 @@ private void getRemoteFile( ArtifactRepository repository,\n                 // reset the retry flag.\n                 retry = false;\n \n-                // This should take care of creating destination directory now on\n-                if ( destination.exists() && !force )\n+                // TODO: configure on repository\n+                ChecksumObserver md5ChecksumObserver = null;\n+                ChecksumObserver sha1ChecksumObserver = null;\n+                try\n                 {\n-                    try\n+                    md5ChecksumObserver = new ChecksumObserver( \"MD5\" );\n+                    wagon.addTransferListener( md5ChecksumObserver );\n+\n+                    sha1ChecksumObserver = new ChecksumObserver( \"SHA-1\" );\n+                    wagon.addTransferListener( sha1ChecksumObserver );\n+\n+                    // This should take care of creating destination directory now on\n+                    if ( destination.exists() && !force )\n                     {\n-                        downloaded = wagon.getIfNewer( remotePath, temp, destination.lastModified() );\n-                        if ( !downloaded )\n+                        try\n+                        {\n+                            downloaded = wagon.getIfNewer( remotePath, temp, destination.lastModified() );\n+                            if ( !downloaded )\n+                            {\n+                                // prevent additional checks of this artifact until it expires again\n+                                destination.setLastModified( System.currentTimeMillis() );\n+                            }\n+                        }\n+                        catch ( UnsupportedOperationException e )\n                         {\n-                            // prevent additional checks of this artifact until it expires again\n-                            destination.setLastModified( System.currentTimeMillis() );\n+                            // older wagons throw this. Just get() instead\n+                            wagon.get( remotePath, temp );\n+                            downloaded = true;\n                         }\n                     }\n-                    catch ( UnsupportedOperationException e )\n+                    else\n                     {\n-                        // older wagons throw this. Just get() instead\n                         wagon.get( remotePath, temp );\n                         downloaded = true;\n                     }\n-                }\n-                else\n-                {\n-                    wagon.get( remotePath, temp );\n-                    downloaded = true;\n-                }\n \n-                if ( downloaded )\n-                {\n-                    // keep the checksum files from showing up on the download monitor...\n-                    if ( downloadMonitor != null )\n+                    if ( downloaded )\n                     {\n-                        wagon.removeTransferListener( downloadMonitor );\n-                    }\n-\n-                    // try to verify the SHA-1 checksum for this file.\n-                    try\n-                    {\n-                        verifyChecksum( sha1ChecksumObserver, destination, temp, remotePath, \".sha1\", wagon );\n-                    }\n-                    catch ( ChecksumFailedException e )\n-                    {\n-                        // if we catch a ChecksumFailedException, it means the transfer/read succeeded, but the checksum\n-                        // doesn't match. This could be a problem with the server (ibiblio HTTP-200 error page), so we'll\n-                        // try this up to two times. On the second try, we'll handle it as a bona-fide error, based on the\n-                        // repository's checksum checking policy.\n-                        if ( firstRun )\n-                        {\n-                            getLogger().warn( \"*** CHECKSUM FAILED - \" + e.getMessage() + \" - RETRYING\" );\n-                            retry = true;\n-                        }\n-                        else\n+                        // keep the checksum files from showing up on the download monitor...\n+                        if ( downloadMonitor != null )\n                         {\n-                            handleChecksumFailure( checksumPolicy, e.getMessage(), e.getCause() );\n+                            wagon.removeTransferListener( downloadMonitor );\n                         }\n-                    }\n-                    catch ( ResourceDoesNotExistException sha1TryException )\n-                    {\n-                        getLogger().debug( \"SHA1 not found, trying MD5\", sha1TryException );\n \n-                        // if this IS NOT a ChecksumFailedException, it was a problem with transfer/read of the checksum\n-                        // file...we'll try again with the MD5 checksum.\n+                        // try to verify the SHA-1 checksum for this file.\n                         try\n                         {\n-                            verifyChecksum( md5ChecksumObserver, destination, temp, remotePath, \".md5\", wagon );\n+                            verifyChecksum( sha1ChecksumObserver, destination, temp, remotePath, \".sha1\", wagon );\n                         }\n                         catch ( ChecksumFailedException e )\n                         {\n-                            // if we also fail to verify based on the MD5 checksum, and the checksum transfer/read\n-                            // succeeded, then we need to determine whether to retry or handle it as a failure.\n+                            // if we catch a ChecksumFailedException, it means the transfer/read succeeded, but the checksum\n+                            // doesn't match. This could be a problem with the server (ibiblio HTTP-200 error page), so we'll\n+                            // try this up to two times. On the second try, we'll handle it as a bona-fide error, based on the\n+                            // repository's checksum checking policy.\n                             if ( firstRun )\n                             {\n+                                getLogger().warn( \"*** CHECKSUM FAILED - \" + e.getMessage() + \" - RETRYING\" );\n                                 retry = true;\n                             }\n                             else\n                             {\n                                 handleChecksumFailure( checksumPolicy, e.getMessage(), e.getCause() );\n                             }\n                         }\n-                        catch ( ResourceDoesNotExistException md5TryException )\n+                        catch ( ResourceDoesNotExistException sha1TryException )\n+                        {\n+                            getLogger().debug( \"SHA1 not found, trying MD5\", sha1TryException );\n+\n+                            // if this IS NOT a ChecksumFailedException, it was a problem with transfer/read of the checksum\n+                            // file...we'll try again with the MD5 checksum.\n+                            try\n+                            {\n+                                verifyChecksum( md5ChecksumObserver, destination, temp, remotePath, \".md5\", wagon );\n+                            }\n+                            catch ( ChecksumFailedException e )\n+                            {\n+                                // if we also fail to verify based on the MD5 checksum, and the checksum transfer/read\n+                                // succeeded, then we need to determine whether to retry or handle it as a failure.\n+                                if ( firstRun )\n+                                {\n+                                    retry = true;\n+                                }\n+                                else\n+                                {\n+                                    handleChecksumFailure( checksumPolicy, e.getMessage(), e.getCause() );\n+                                }\n+                            }\n+                            catch ( ResourceDoesNotExistException md5TryException )\n+                            {\n+                                // this was a failed transfer, and we don't want to retry.\n+                                handleChecksumFailure( checksumPolicy, \"Error retrieving checksum file for \" + remotePath,\n+                                                       md5TryException );\n+                            }\n+                        }\n+\n+                        // reinstate the download monitor...\n+                        if ( downloadMonitor != null )\n                         {\n-                            // this was a failed transfer, and we don't want to retry.\n-                            handleChecksumFailure( checksumPolicy, \"Error retrieving checksum file for \" + remotePath,\n-                                                   md5TryException );\n+                            wagon.addTransferListener( downloadMonitor );\n                         }\n                     }\n \n-                    // reinstate the download monitor...\n-                    if ( downloadMonitor != null )\n+                    // unset the firstRun flag, so we don't get caught in an infinite loop...\n+                    firstRun = false;\n+                }\n+                catch ( NoSuchAlgorithmException e )\n+                {\n+                    throw new TransferFailedException( \"Unable to add checksum methods: \" + e.getMessage(), e );\n+                }\n+                finally\n+                {\n+                    if ( sha1ChecksumObserver != null )\n                     {\n-                        wagon.addTransferListener( downloadMonitor );\n+                        wagon.removeTransferListener( sha1ChecksumObserver );\n                     }\n-                }\n \n-                // unset the firstRun flag, so we don't get caught in an infinite loop...\n-                firstRun = false;\n+                    if ( md5ChecksumObserver != null )\n+                    {\n+                        wagon.removeTransferListener( md5ChecksumObserver );\n+                    }\n+                }\n             }\n         }\n         catch ( ConnectionException e )\n@@ -695,7 +707,7 @@ private void verifyChecksum( ChecksumObserver checksumObserver,\n         }\n     }\n \n-    \n+\n     private void disconnectWagon( Wagon wagon )\n     {\n         try\n@@ -735,7 +747,7 @@ public AuthenticationInfo getAuthenticationInfo( String id )\n     /**\n      * This method finds a matching mirror for the selected repository. If there is an exact match, this will be used.\n      * If there is no exact match, then the list of mirrors is examined to see if a pattern applies.\n-     * \n+     *\n      * @param originalRepository See if there is a mirror for this repository.\n      * @return the selected mirror or null if none are found.\n      */\n@@ -764,13 +776,13 @@ public ArtifactRepository getMirror( ArtifactRepository originalRepository )\n     }\n \n     /**\n-     * This method checks if the pattern matches the originalRepository. \n-     * Valid patterns: \n+     * This method checks if the pattern matches the originalRepository.\n+     * Valid patterns:\n      * * = everything\n      * external:* = everything not on the localhost and not file based.\n      * repo,repo1 = repo or repo1\n      * *,!repo1 = everything except repo1\n-     * \n+     *\n      * @param originalRepository to compare for a match.\n      * @param pattern used for match. Currently only '*' is supported.\n      * @return true if the repository is a match to this pattern.\n@@ -827,7 +839,7 @@ else if ( WILDCARD.equals( repo ) )\n \n     /**\n      * Checks the URL to see if this repository refers to an external repository\n-     * \n+     *\n      * @param originalRepository\n      * @return true if external.\n      */\n@@ -845,10 +857,10 @@ public boolean isExternalRepo( ArtifactRepository originalRepository )\n             return false;\n         }\n     }\n-    \n+\n     /**\n      * Set the proxy used for a particular protocol.\n-     * \n+     *\n      * @param protocol the protocol (required)\n      * @param host the proxy host name (required)\n      * @param port the proxy port (required)",
                "raw_url": "https://github.com/apache/maven-2/raw/6c0064a80023606134db0476aa4802bbca931688/maven-artifact-manager/src/main/java/org/apache/maven/artifact/manager/DefaultWagonManager.java",
                "sha": "4c2309d510c4a0e440d53fc645a1d148ec6d3774",
                "status": "modified"
            }
        ],
        "message": "Add code to mirror the modifications on trunk, where checksum observers are added/removed per iteration when attempting to download a file, since 1.0-beta-3 of wagon has code where a transfer error will set the internal digest instance to null rather than resetting it; successive attempts to use the observer after that point will cause NPEs.\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/components/branches/maven-2.0.x@673521 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/maven-2/commit/9f8bd2a13ea3ddf2c1f30720e45ffcb45d5a3ce3",
        "patched_files": [
            "DefaultWagonManager.java"
        ],
        "repo": "maven-2",
        "unit_tests": [
            "DefaultWagonManagerTest.java"
        ]
    },
    "maven-2_883e9e5": {
        "bug_id": "maven-2_883e9e5",
        "commit": "https://github.com/apache/maven-2/commit/883e9e53dba6930e79ab1157b561a4984205f0d4",
        "file": [
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/maven-2/blob/883e9e53dba6930e79ab1157b561a4984205f0d4/maven-project/src/main/java/org/apache/maven/project/artifact/MavenMetadataSource.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/maven-2/contents/maven-project/src/main/java/org/apache/maven/project/artifact/MavenMetadataSource.java?ref=883e9e53dba6930e79ab1157b561a4984205f0d4",
                "deletions": 1,
                "filename": "maven-project/src/main/java/org/apache/maven/project/artifact/MavenMetadataSource.java",
                "patch": "@@ -338,7 +338,7 @@ public List retrieveAvailableVersions( Artifact artifact, ArtifactRepository loc\n \n         List versions;\n         Metadata repoMetadata = metadata.getMetadata();\n-        if ( repoMetadata != null )\n+        if ( repoMetadata != null && repoMetadata.getVersioning() != null )\n         {\n             List metadataVersions = repoMetadata.getVersioning().getVersions();\n             versions = new ArrayList( metadataVersions.size() );",
                "raw_url": "https://github.com/apache/maven-2/raw/883e9e53dba6930e79ab1157b561a4984205f0d4/maven-project/src/main/java/org/apache/maven/project/artifact/MavenMetadataSource.java",
                "sha": "bb9f4d8c9c99948ab540362a88e0af8b126d2a74",
                "status": "modified"
            }
        ],
        "message": "avoid NPE\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@291582 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/maven-2/commit/e5070aa9b253be41fb9b4757d96b3431eeea58bf",
        "patched_files": [
            "MavenMetadataSource.java"
        ],
        "repo": "maven-2",
        "unit_tests": [
            "MavenMetadataSourceTest.java"
        ]
    },
    "maven-2_8a6aae6": {
        "bug_id": "maven-2_8a6aae6",
        "commit": "https://github.com/apache/maven-2/commit/8a6aae6db4f048400b3fe3f78f1869150cdd6dd9",
        "file": [
            {
                "additions": 6,
                "blob_url": "https://github.com/apache/maven-2/blob/8a6aae6db4f048400b3fe3f78f1869150cdd6dd9/maven-artifact-ant/sample-build-test.pom",
                "changes": 6,
                "contents_url": "https://api.github.com/repos/apache/maven-2/contents/maven-artifact-ant/sample-build-test.pom?ref=8a6aae6db4f048400b3fe3f78f1869150cdd6dd9",
                "deletions": 0,
                "filename": "maven-artifact-ant/sample-build-test.pom",
                "patch": "@@ -0,0 +1,6 @@\n+<project>\r\n+  <modelVersion>4.0.0</modelVersion>\r\n+  <groupId>org.apache.maven.test</groupId>\r\n+  <artifactId>sample-build-test</artifactId>\r\n+  <version>2.0-beta-4-SNAPSHOT</version>\r\n+</project>\r",
                "raw_url": "https://github.com/apache/maven-2/raw/8a6aae6db4f048400b3fe3f78f1869150cdd6dd9/maven-artifact-ant/sample-build-test.pom",
                "sha": "f778e731aa7ae1a010428ea867ada3d28e3d84cd",
                "status": "added"
            },
            {
                "additions": 10,
                "blob_url": "https://github.com/apache/maven-2/blob/8a6aae6db4f048400b3fe3f78f1869150cdd6dd9/maven-artifact-ant/sample.build.xml",
                "changes": 13,
                "contents_url": "https://api.github.com/repos/apache/maven-2/contents/maven-artifact-ant/sample.build.xml?ref=8a6aae6db4f048400b3fe3f78f1869150cdd6dd9",
                "deletions": 3,
                "filename": "maven-artifact-ant/sample.build.xml",
                "patch": "@@ -70,7 +70,7 @@\n \n   <target name=\"foo\" depends=\"initTaskDefs\">\n     <artifact:dependencies pathId=\"dependency.classpath\" filesetId=\"dependency.fileset\">\n-      <dependency groupId=\"org.apache.maven.wagon\" artifactId=\"wagon-provider-test\" version=\"1.0-alpha-2\">\n+      <dependency groupId=\"org.apache.maven.wagon\" artifactId=\"wagon-provider-test\" version=\"1.0-alpha-4\">\n         <exclusion groupId=\"junit\" artifactId=\"junit\"/>\n       </dependency>\n       <dependency groupId=\"plexus\" artifactId=\"plexus-container-default\" version=\"1.0-alpha-6-SNAPSHOT\"/>\n@@ -164,7 +164,7 @@\n     <artifact:remoteRepository id=\"deploy.repository\" url=\"scm:svn:${scm.url}\" layout=\"default\"/>\n \n     <artifact:dependencies pathId=\"dependency.classpath\">\n-      <dependency groupId=\"org.apache.maven.wagon\" artifactId=\"wagon-provider-test\" version=\"1.0-alpha-2\"/>\n+      <dependency groupId=\"org.apache.maven.wagon\" artifactId=\"wagon-provider-test\" version=\"1.0-alpha-4\"/>\n       <dependency groupId=\"plexus\" artifactId=\"plexus-container-default\" version=\"1.0-alpha-6-SNAPSHOT\"/>\n       <localRepository refid=\"local.repository\"/>\n     </artifact:dependencies>\n@@ -183,7 +183,7 @@\n     <artifact:localRepository id=\"local.repository.scm\" location=\"${basedir}/target/local-repo-scm\" layout=\"default\"/>\n \n     <artifact:dependencies pathId=\"dependency.classpath.scm\">\n-      <dependency groupId=\"org.apache.maven.wagon\" artifactId=\"wagon-provider-test\" version=\"1.0-alpha-2\"/>\n+      <dependency groupId=\"org.apache.maven.wagon\" artifactId=\"wagon-provider-test\" version=\"1.0-alpha-4\"/>\n       <dependency groupId=\"plexus\" artifactId=\"plexus-container-default\" version=\"1.0-alpha-6-SNAPSHOT\"/>\n       <localRepository refid=\"local.repository.scm\"/>\n       <remoteRepository refid=\"deploy.repository\"/>\n@@ -202,5 +202,12 @@\n       <pom refid=\"invalid-ref\" />\n     </artifact:dependencies>\n   </target>\n+\n+  <target name=\"test-no-dist-mgmt\" depends=\"initTaskDefs\">\n+    <artifact:deploy file=\"sample-build-test.pom\">\n+      <pom file=\"sample-build-test.pom\" />\n+      <remoteRepository refid=\"deploy.repository\" />\n+    </artifact:deploy>  \n+  </target>\n </project>\n ",
                "raw_url": "https://github.com/apache/maven-2/raw/8a6aae6db4f048400b3fe3f78f1869150cdd6dd9/maven-artifact-ant/sample.build.xml",
                "sha": "e072640e4ff4919141e506c579427f0c83feffcb",
                "status": "modified"
            },
            {
                "additions": 29,
                "blob_url": "https://github.com/apache/maven-2/blob/8a6aae6db4f048400b3fe3f78f1869150cdd6dd9/maven-artifact-ant/src/main/java/org/apache/maven/artifact/ant/DeployTask.java",
                "changes": 45,
                "contents_url": "https://api.github.com/repos/apache/maven-2/contents/maven-artifact-ant/src/main/java/org/apache/maven/artifact/ant/DeployTask.java?ref=8a6aae6db4f048400b3fe3f78f1869150cdd6dd9",
                "deletions": 16,
                "filename": "maven-artifact-ant/src/main/java/org/apache/maven/artifact/ant/DeployTask.java",
                "patch": "@@ -21,6 +21,7 @@\n import org.apache.maven.artifact.deployer.ArtifactDeploymentException;\n import org.apache.maven.artifact.metadata.ArtifactMetadata;\n import org.apache.maven.artifact.repository.ArtifactRepository;\n+import org.apache.maven.model.DistributionManagement;\n import org.apache.maven.project.MavenProjectBuilder;\n import org.apache.maven.project.artifact.ProjectArtifactMetadata;\n import org.apache.tools.ant.BuildException;\n@@ -54,35 +55,47 @@ public void execute()\n             throw new BuildException( \"A POM element is required to deploy to the repository\" );\n         }\n \n-        if ( remoteRepository == null )\n+        Artifact artifact = createArtifact( pom );\n+\n+        DistributionManagement distributionManagement = pom.getDistributionManagement();\n+\n+        if ( remoteSnapshotRepository == null && remoteRepository == null )\n         {\n-            if ( pom.getDistributionManagement() == null || pom.getDistributionManagement().getRepository() == null )\n+            if ( distributionManagement != null )\n             {\n-                throw new BuildException( \"A distributionManagement element is required in your POM to deploy\" );\n+                if ( distributionManagement.getSnapshotRepository() != null )\n+                {\n+                    remoteSnapshotRepository = createAntRemoteRepositoryBase(\n+                        distributionManagement.getSnapshotRepository() );\n+                }\n+                if ( distributionManagement.getRepository() != null )\n+                {\n+                    remoteRepository = createAntRemoteRepositoryBase( distributionManagement.getRepository() );\n+                }\n             }\n-\n-            remoteRepository = createAntRemoteRepositoryBase( pom.getDistributionManagement().getRepository() );\n         }\n \n         if ( remoteSnapshotRepository == null )\n         {\n-            if ( pom.getDistributionManagement().getSnapshotRepository() != null )\n-            {\n-                remoteSnapshotRepository = createAntRemoteRepositoryBase(\n-                    pom.getDistributionManagement().getSnapshotRepository() );\n-            }\n+            remoteSnapshotRepository = remoteRepository;\n         }\n \n-        // Deploy the POM\n-        Artifact artifact = createArtifact( pom );\n-\n-        ArtifactRepository deploymentRepository = createRemoteArtifactRepository( remoteRepository );\n-\n-        if ( remoteSnapshotRepository != null && artifact.isSnapshot() )\n+        ArtifactRepository deploymentRepository = null;\n+        if ( artifact.isSnapshot() && remoteSnapshotRepository != null )\n         {\n             deploymentRepository = createRemoteArtifactRepository( remoteSnapshotRepository );\n         }\n+        else if ( remoteRepository != null )\n+        {\n+            deploymentRepository = createRemoteArtifactRepository( remoteRepository );\n+        }\n+        else\n+        {\n+            throw new BuildException(\n+                \"A distributionManagement element or remoteRepository element is required to deploy\" );\n+        }\n \n+        // Deploy the POM\n         boolean isPomArtifact = \"pom\".equals( pom.getPackaging() );\n         if ( !isPomArtifact )\n         {",
                "raw_url": "https://github.com/apache/maven-2/raw/8a6aae6db4f048400b3fe3f78f1869150cdd6dd9/maven-artifact-ant/src/main/java/org/apache/maven/artifact/ant/DeployTask.java",
                "sha": "504b2e215ee59f661273dbd5c549923a6c0286ed",
                "status": "modified"
            }
        ],
        "message": "PR: MNG-1160\nfix up some deployment repository determination logic, and avoid NPE in the process\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@312810 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/maven-2/commit/d3f5c3d7555d76887abef3bf4de5d36e5a75137a",
        "patched_files": [
            "DeployTask.java",
            "sample.java"
        ],
        "repo": "maven-2",
        "unit_tests": [
            "sample-build-test.java"
        ]
    },
    "maven-2_8cf70fa": {
        "bug_id": "maven-2_8cf70fa",
        "commit": "https://github.com/apache/maven-2/commit/8cf70faba0e69f316e00bb5cf39c6358048e8ad4",
        "file": [
            {
                "additions": 12,
                "blob_url": "https://github.com/apache/maven-2/blob/8cf70faba0e69f316e00bb5cf39c6358048e8ad4/maven-artifact/src/main/java/org/apache/maven/artifact/resolver/DefaultArtifactCollector.java",
                "changes": 14,
                "contents_url": "https://api.github.com/repos/apache/maven-2/contents/maven-artifact/src/main/java/org/apache/maven/artifact/resolver/DefaultArtifactCollector.java?ref=8cf70faba0e69f316e00bb5cf39c6358048e8ad4",
                "deletions": 2,
                "filename": "maven-artifact/src/main/java/org/apache/maven/artifact/resolver/DefaultArtifactCollector.java",
                "patch": "@@ -220,8 +220,18 @@ private void recurse( ResolutionNode node, Map resolvedArtifacts, ManagedVersion\n                                     }\n                                 }\n                                 //end hack\n-                                resetArtifact.selectVersion( resetArtifact.getVersionRange().matchVersion(\n-                                                                                                           resetArtifact.getAvailableVersions() ).toString() );\n+                               \n+                                //MNG-2861: match version can return null\n+                                ArtifactVersion selectedVersion = resetArtifact.getVersionRange().matchVersion( resetArtifact.getAvailableVersions() );\n+                                if (selectedVersion != null)\n+                                {\n+                                  resetArtifact.selectVersion( selectedVersion.toString() );\n+                                }\n+                                else\n+                                {\n+                                  throw new OverConstrainedVersionException(\" Unable to find a version in \"+ resetArtifact.getAvailableVersions()+\" to match the range \"+ resetArtifact.getVersionRange(), resetArtifact);\n+                                }\n+                                \n                                 fireEvent( ResolutionListener.SELECT_VERSION_FROM_RANGE, listeners, resetNodes[j] );\n                             }\n                         }",
                "raw_url": "https://github.com/apache/maven-2/raw/8cf70faba0e69f316e00bb5cf39c6358048e8ad4/maven-artifact/src/main/java/org/apache/maven/artifact/resolver/DefaultArtifactCollector.java",
                "sha": "ed549f7c1823d2e06d835f3e8cefaaa62d4c6374",
                "status": "modified"
            }
        ],
        "message": "MNG-2861: intermediate fix to produce better logging than an NPE\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/components/branches/maven-2.0.x@635645 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/maven-2/commit/7dfac68dd7e69cf65b941431028e40330e09df94",
        "patched_files": [
            "DefaultArtifactCollector.java"
        ],
        "repo": "maven-2",
        "unit_tests": [
            "DefaultArtifactCollectorTest.java"
        ]
    },
    "maven-2_8e279f8": {
        "bug_id": "maven-2_8e279f8",
        "commit": "https://github.com/apache/maven-2/commit/8e279f87e1ac9ce7e69988f8801c4460266fc09c",
        "file": [
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/maven-2/blob/8e279f87e1ac9ce7e69988f8801c4460266fc09c/maven-core/src/main/java/org/apache/maven/plugin/PluginParameterExpressionEvaluator.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/maven-2/contents/maven-core/src/main/java/org/apache/maven/plugin/PluginParameterExpressionEvaluator.java?ref=8e279f87e1ac9ce7e69988f8801c4460266fc09c",
                "deletions": 1,
                "filename": "maven-core/src/main/java/org/apache/maven/plugin/PluginParameterExpressionEvaluator.java",
                "patch": "@@ -112,7 +112,7 @@ else if ( \"#settings\".equals( expression ) )\n         }\n         else if ( expression.equals( \"#basedir\" ) )\n         {\n-            value = context.getProject().getFile().getParentFile().getAbsolutePath();\n+            value = context.getProject().getBasedir().getAbsolutePath();\n         }\n         else if ( expression.startsWith( \"#basedir\" ) )\n         {",
                "raw_url": "https://github.com/apache/maven-2/raw/8e279f87e1ac9ce7e69988f8801c4460266fc09c/maven-core/src/main/java/org/apache/maven/plugin/PluginParameterExpressionEvaluator.java",
                "sha": "2d723922c6e681b4090ef924c6c2935589af9978",
                "status": "modified"
            },
            {
                "additions": 8,
                "blob_url": "https://github.com/apache/maven-2/blob/8e279f87e1ac9ce7e69988f8801c4460266fc09c/maven-core/src/main/java/org/apache/maven/project/MavenProject.java",
                "changes": 9,
                "contents_url": "https://api.github.com/repos/apache/maven-2/contents/maven-core/src/main/java/org/apache/maven/project/MavenProject.java?ref=8e279f87e1ac9ce7e69988f8801c4460266fc09c",
                "deletions": 1,
                "filename": "maven-core/src/main/java/org/apache/maven/project/MavenProject.java",
                "patch": "@@ -132,7 +132,14 @@ public void setFile( File file )\n \n     public File getBasedir()\n     {\n-        return getFile().getParentFile();\n+        if ( getFile() != null )\n+        {\n+            return getFile().getParentFile();\n+        }\n+        else\n+        {\n+            return new File( System.getProperty( \"user.dir\" ) );\n+        }\n     }\n \n     public void setDependencies( List denpendencies )",
                "raw_url": "https://github.com/apache/maven-2/raw/8e279f87e1ac9ce7e69988f8801c4460266fc09c/maven-core/src/main/java/org/apache/maven/project/MavenProject.java",
                "sha": "93745033090548c6e70eeac91ac8aff4f7d6784e",
                "status": "modified"
            }
        ],
        "message": "avoid NPE when there is no project file\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@163991 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/maven-2/commit/666c60dea6668db3dae494f38241e6cfd3f42730",
        "patched_files": [
            "PluginParameterExpressionEvaluator.java"
        ],
        "repo": "maven-2",
        "unit_tests": [
            "PluginParameterExpressionEvaluatorTest.java"
        ]
    },
    "maven-2_a49c4af": {
        "bug_id": "maven-2_a49c4af",
        "commit": "https://github.com/apache/maven-2/commit/a49c4afdc1c44a9f917f894d9e83874c5883e736",
        "file": [
            {
                "additions": 5,
                "blob_url": "https://github.com/apache/maven-2/blob/a49c4afdc1c44a9f917f894d9e83874c5883e736/maven-project/src/main/java/org/apache/maven/project/DefaultMavenProjectBuilder.java",
                "changes": 5,
                "contents_url": "https://api.github.com/repos/apache/maven-2/contents/maven-project/src/main/java/org/apache/maven/project/DefaultMavenProjectBuilder.java?ref=a49c4afdc1c44a9f917f894d9e83874c5883e736",
                "deletions": 0,
                "filename": "maven-project/src/main/java/org/apache/maven/project/DefaultMavenProjectBuilder.java",
                "patch": "@@ -257,6 +257,11 @@ public MavenProject buildStandaloneSuperProject( ArtifactRepository localReposit\n \n \n         List activeProfiles;\n+        \n+        if ( profileManager == null )\n+        {\n+        \tprofileManager = new DefaultProfileManager( container );\n+        }\n \n         profileManager.addProfiles( superModel.getProfiles() );\n ",
                "raw_url": "https://github.com/apache/maven-2/raw/a49c4afdc1c44a9f917f894d9e83874c5883e736/maven-project/src/main/java/org/apache/maven/project/DefaultMavenProjectBuilder.java",
                "sha": "855fb5feeab48340db9752dbc9d106e85ea88f72",
                "status": "modified"
            }
        ],
        "message": "Fixing NPE from MavenMetadataSource to buildStandaloneSuperProject(), where the profile manager is null.\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/components/branches/maven-2.0.x@453405 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/maven-2/commit/b511407dce32a373fdc3dbe131e427e87a16c35e",
        "patched_files": [
            "DefaultMavenProjectBuilder.java"
        ],
        "repo": "maven-2",
        "unit_tests": [
            "DefaultMavenProjectBuilderTest.java"
        ]
    },
    "maven-2_a7ea4e9": {
        "bug_id": "maven-2_a7ea4e9",
        "commit": "https://github.com/apache/maven-2/commit/a7ea4e92d404b7e21be20b2cb61455d590153895",
        "file": [
            {
                "additions": 11,
                "blob_url": "https://github.com/apache/maven-2/blob/a7ea4e92d404b7e21be20b2cb61455d590153895/maven-project/src/main/java/org/apache/maven/project/DefaultMavenProjectBuilder.java",
                "changes": 20,
                "contents_url": "https://api.github.com/repos/apache/maven-2/contents/maven-project/src/main/java/org/apache/maven/project/DefaultMavenProjectBuilder.java?ref=a7ea4e92d404b7e21be20b2cb61455d590153895",
                "deletions": 9,
                "filename": "maven-project/src/main/java/org/apache/maven/project/DefaultMavenProjectBuilder.java",
                "patch": "@@ -1096,20 +1096,22 @@ else if ( StringUtils.isEmpty( parentModel.getVersion() ) )\n                         {\n                             getLogger().debug( \"Parent-POM: \" + parentModel.getId() + \" for project: \" + project.getId() + \" cannot be loaded from relative path: \" + parentDescriptor + \"; path does not exist.\" );\n                         }\n-\n-                        parentDescriptor = null;\n                     }\n                 }\n \n-                try\n-                {\n-                    parentDescriptor = parentDescriptor.getCanonicalFile();\n-                }\n-                catch ( IOException e )\n+                if ( parentDescriptor != null )\n                 {\n-                    getLogger().debug( \"Failed to canonicalize potential parent POM: \\'\" + parentDescriptor + \"\\'\", e );\n+                    try\n+                    {\n+                        parentDescriptor = parentDescriptor.getCanonicalFile();\n+                    }\n+                    catch ( IOException e )\n+                    {\n+                        getLogger().debug( \"Failed to canonicalize potential parent POM: \\'\" + parentDescriptor + \"\\'\",\n+                                           e );\n \n-                    parentDescriptor = null;\n+                        parentDescriptor = null;\n+                    }\n                 }\n \n                 if ( parentDescriptor != null && parentDescriptor.exists() )",
                "raw_url": "https://github.com/apache/maven-2/raw/a7ea4e92d404b7e21be20b2cb61455d590153895/maven-project/src/main/java/org/apache/maven/project/DefaultMavenProjectBuilder.java",
                "sha": "7ed2f63751b9e26673dc5f5d26c805ed3dd92dfe",
                "status": "modified"
            }
        ],
        "message": "MNG-2746 fixing an obvious NPE when parent path is a directory and pom is not found. Also reported in MNGECLIPSE-184 and CONTINUUM-1000\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/components/branches/maven-2.0.x@494084 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/maven-2/commit/413ba58306818f9cb54b9e408c704404491cdc11",
        "patched_files": [
            "DefaultMavenProjectBuilder.java"
        ],
        "repo": "maven-2",
        "unit_tests": [
            "DefaultMavenProjectBuilderTest.java"
        ]
    },
    "maven-2_ab362dc": {
        "bug_id": "maven-2_ab362dc",
        "commit": "https://github.com/apache/maven-2/commit/ab362dcb3234c9c51c64c8b2b44223ec70ffcb24",
        "file": [
            {
                "additions": 13,
                "blob_url": "https://github.com/apache/maven-2/blob/ab362dcb3234c9c51c64c8b2b44223ec70ffcb24/maven-project/src/main/java/org/apache/maven/project/MavenProject.java",
                "changes": 13,
                "contents_url": "https://api.github.com/repos/apache/maven-2/contents/maven-project/src/main/java/org/apache/maven/project/MavenProject.java?ref=ab362dcb3234c9c51c64c8b2b44223ec70ffcb24",
                "deletions": 0,
                "filename": "maven-project/src/main/java/org/apache/maven/project/MavenProject.java",
                "patch": "@@ -77,6 +77,12 @@\n  */\n public class MavenProject\n {\n+    public static final String EMPTY_PROJECT_GROUP_ID = \"unknown\";\n+    \n+    public static final String EMPTY_PROJECT_ARTIFACT_ID = \"empty-project\";\n+    \n+    public static final String EMPTY_PROJECT_VERSION = \"0\";\n+    \n     private Model model;\n \n     private MavenProject parent;\n@@ -140,6 +146,13 @@\n \n     public MavenProject()\n     {\n+        Model model = new Model();\n+        \n+        model.setGroupId( EMPTY_PROJECT_GROUP_ID );\n+        model.setArtifactId( EMPTY_PROJECT_ARTIFACT_ID );\n+        model.setVersion( EMPTY_PROJECT_VERSION );\n+        \n+        this.model = model;\n     }\n \n     public MavenProject( Model model )",
                "raw_url": "https://github.com/apache/maven-2/raw/ab362dcb3234c9c51c64c8b2b44223ec70ffcb24/maven-project/src/main/java/org/apache/maven/project/MavenProject.java",
                "sha": "e6b675e3c15613beb73380fd380a6729de92d8dc",
                "status": "modified"
            },
            {
                "additions": 9,
                "blob_url": "https://github.com/apache/maven-2/blob/ab362dcb3234c9c51c64c8b2b44223ec70ffcb24/maven-project/src/test/java/org/apache/maven/project/MavenProjectTest.java",
                "changes": 9,
                "contents_url": "https://api.github.com/repos/apache/maven-2/contents/maven-project/src/test/java/org/apache/maven/project/MavenProjectTest.java?ref=ab362dcb3234c9c51c64c8b2b44223ec70ffcb24",
                "deletions": 0,
                "filename": "maven-project/src/test/java/org/apache/maven/project/MavenProjectTest.java",
                "patch": "@@ -24,6 +24,15 @@\n public class MavenProjectTest\n     extends AbstractMavenProjectTestCase\n {\n+    \n+    public void testEmptyConstructor()\n+    {\n+        MavenProject project = new MavenProject();\n+        \n+        assertEquals( MavenProject.EMPTY_PROJECT_GROUP_ID + \":\" + MavenProject.EMPTY_PROJECT_ARTIFACT_ID + \":jar:\"\n+            + MavenProject.EMPTY_PROJECT_VERSION, project.getId() );\n+    }\n+    \n     public void testCopyConstructor() throws Exception\n     {\n         File f = getFileForClasspathResource( \"canonical-pom.xml\" );",
                "raw_url": "https://github.com/apache/maven-2/raw/ab362dcb3234c9c51c64c8b2b44223ec70ffcb24/maven-project/src/test/java/org/apache/maven/project/MavenProjectTest.java",
                "sha": "79c57c447174247c4a1de99f8388e3928ca1bede",
                "status": "modified"
            }
        ],
        "message": "Fixing empty constructor to avoid NPEs in resulting MavenProject.\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/components/branches/maven-2.0.x@389201 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/maven-2/commit/19e13d47c2a46aeb3e0972a1d3dceb7bab60d961",
        "patched_files": [
            "MavenProject.java"
        ],
        "repo": "maven-2",
        "unit_tests": [
            "MavenProjectTest.java"
        ]
    },
    "maven-2_b1c59f6": {
        "bug_id": "maven-2_b1c59f6",
        "commit": "https://github.com/apache/maven-2/commit/b1c59f6d19e93c18a7daeccccda47af6fd59b0ea",
        "file": [
            {
                "additions": 17,
                "blob_url": "https://github.com/apache/maven-2/blob/b1c59f6d19e93c18a7daeccccda47af6fd59b0ea/maven-project/src/test/java/org/apache/maven/project/canonical/CanonicalProjectBuilderTest.java",
                "changes": 23,
                "contents_url": "https://api.github.com/repos/apache/maven-2/contents/maven-project/src/test/java/org/apache/maven/project/canonical/CanonicalProjectBuilderTest.java?ref=b1c59f6d19e93c18a7daeccccda47af6fd59b0ea",
                "deletions": 6,
                "filename": "maven-project/src/test/java/org/apache/maven/project/canonical/CanonicalProjectBuilderTest.java",
                "patch": "@@ -23,6 +23,7 @@\n import org.codehaus.plexus.util.xml.Xpp3Dom;\n \n import java.io.File;\n+import java.util.Iterator;\n import java.util.List;\n \n /**\n@@ -53,12 +54,22 @@ public void testProjectBuilder()\n \n         // Plugin0 [plexus]\n \n-        Plugin plugin = (Plugin) plugins.get( 0 );\n-\n-        assertEquals( \"org.apache.maven.plugins\", plugin.getGroupId() );\n-\n-        assertEquals( \"maven-plexus-plugin\", plugin.getArtifactId() );\n-\n+        String key = \"org.apache.maven.plugins:maven-plexus-plugin\";\n+        \n+        Plugin plugin = null;\n+        for ( Iterator it = plugins.iterator(); it.hasNext(); )\n+        {\n+            Plugin check = (Plugin) it.next();\n+            \n+            if ( key.equals( check.getKey() ) )\n+            {\n+                plugin = check;\n+                break;\n+            }\n+        }\n+        \n+        assertNotNull( plugin );\n+        \n         assertEquals( \"1.0\", plugin.getVersion() );\n \n         Xpp3Dom configuration = (Xpp3Dom) plugin.getConfiguration();",
                "raw_url": "https://github.com/apache/maven-2/raw/b1c59f6d19e93c18a7daeccccda47af6fd59b0ea/maven-project/src/test/java/org/apache/maven/project/canonical/CanonicalProjectBuilderTest.java",
                "sha": "cc00d4ed4574a197746af0e0793d273fd68cc71f",
                "status": "modified"
            },
            {
                "additions": 15,
                "blob_url": "https://github.com/apache/maven-2/blob/b1c59f6d19e93c18a7daeccccda47af6fd59b0ea/maven-project/src/test/java/org/apache/maven/project/injection/TestProfileInjector.java",
                "changes": 15,
                "contents_url": "https://api.github.com/repos/apache/maven-2/contents/maven-project/src/test/java/org/apache/maven/project/injection/TestProfileInjector.java?ref=b1c59f6d19e93c18a7daeccccda47af6fd59b0ea",
                "deletions": 0,
                "filename": "maven-project/src/test/java/org/apache/maven/project/injection/TestProfileInjector.java",
                "patch": "@@ -0,0 +1,15 @@\n+package org.apache.maven.project.injection;\n+\n+import org.apache.maven.model.Model;\n+import org.apache.maven.model.Profile;\n+\n+public class TestProfileInjector\n+    implements ProfileInjector\n+{\n+\n+    public void inject( Profile profile, Model model )\n+    {\n+        // do nothing.\n+    }\n+\n+}",
                "raw_url": "https://github.com/apache/maven-2/raw/b1c59f6d19e93c18a7daeccccda47af6fd59b0ea/maven-project/src/test/java/org/apache/maven/project/injection/TestProfileInjector.java",
                "sha": "5e759de54d32c58e150457afc9b6b39c5c385286",
                "status": "added"
            },
            {
                "additions": 9,
                "blob_url": "https://github.com/apache/maven-2/blob/b1c59f6d19e93c18a7daeccccda47af6fd59b0ea/maven-project/src/test/resources/org/apache/maven/project/ProjectClasspathTest.xml",
                "changes": 9,
                "contents_url": "https://api.github.com/repos/apache/maven-2/contents/maven-project/src/test/resources/org/apache/maven/project/ProjectClasspathTest.xml?ref=b1c59f6d19e93c18a7daeccccda47af6fd59b0ea",
                "deletions": 0,
                "filename": "maven-project/src/test/resources/org/apache/maven/project/ProjectClasspathTest.xml",
                "patch": "@@ -14,6 +14,11 @@\n       </requirements>\n     </component>\n     -->\n+    <component>\n+      <role>org.apache.maven.project.injection.ProfileInjector</role>\n+      <role-hint>test</role-hint>\n+      <implementation>org.apache.maven.project.injection.TestProfileInjector</implementation>\n+    </component>\n     <component>\n       <role>org.apache.maven.project.TestArtifactResolver</role>\n       <implementation>org.apache.maven.project.TestArtifactResolver</implementation>\n@@ -43,6 +48,10 @@\n         <requirement>\n           <role>org.apache.maven.project.injection.ModelDefaultsInjector</role>\n         </requirement>\n+        <requirement>\n+          <role>org.apache.maven.project.injection.ProfileInjector</role>\n+          <role-hint>test</role-hint>\n+        </requirement>\n         <requirement>\n           <role>org.apache.maven.project.interpolation.ModelInterpolator</role>\n         </requirement>",
                "raw_url": "https://github.com/apache/maven-2/raw/b1c59f6d19e93c18a7daeccccda47af6fd59b0ea/maven-project/src/test/resources/org/apache/maven/project/ProjectClasspathTest.xml",
                "sha": "e8192d2bc406ef3f71224a42abd555c84d9f845a",
                "status": "modified"
            },
            {
                "additions": 79,
                "blob_url": "https://github.com/apache/maven-2/blob/b1c59f6d19e93c18a7daeccccda47af6fd59b0ea/maven-project/src/test/resources/org/apache/maven/project/canonical/CanonicalProjectBuilderTest.xml",
                "changes": 79,
                "contents_url": "https://api.github.com/repos/apache/maven-2/contents/maven-project/src/test/resources/org/apache/maven/project/canonical/CanonicalProjectBuilderTest.xml?ref=b1c59f6d19e93c18a7daeccccda47af6fd59b0ea",
                "deletions": 0,
                "filename": "maven-project/src/test/resources/org/apache/maven/project/canonical/CanonicalProjectBuilderTest.xml",
                "patch": "@@ -0,0 +1,79 @@\n+<plexus>\n+  <components>\n+    <!-- Due to PLX-108, have to work around it...\n+    <component>\n+      <role>org.apache.maven.artifact.ArtifactResolver</role>\n+      <implementation>org.apache.maven.project.TestArtifactResolvertion>\n+      <requirements>\n+        <requirement>\n+          <role>org.apache.maven.artifact.manager.WagonManager</role>\n+        </requirement>\n+        <requirement>\n+          <role>org.apache.maven.artifact.factory.ArtifactFactory</role>\n+        </requirement>\n+      </requirements>\n+    </component>\n+    -->\n+    <component>\n+      <role>org.apache.maven.project.injection.ProfileInjector</role>\n+      <role-hint>test</role-hint>\n+      <implementation>org.apache.maven.project.injection.TestProfileInjector</implementation>\n+    </component>\n+    <component>\n+      <role>org.apache.maven.project.TestArtifactResolver</role>\n+      <implementation>org.apache.maven.project.TestArtifactResolver</implementation>\n+      <requirements>\n+        <requirement>\n+          <role>org.apache.maven.artifact.manager.WagonManager</role>\n+        </requirement>\n+        <requirement>\n+          <role>org.apache.maven.artifact.factory.ArtifactFactory</role>\n+        </requirement>\n+        <requirement>\n+          <role>org.apache.maven.artifact.repository.ArtifactRepositoryFactory</role>\n+        </requirement>\n+        <requirement>\n+          <role>org.apache.maven.artifact.resolver.ArtifactCollector</role>\n+        </requirement>\n+      </requirements>\n+    </component>\n+    <component>\n+      <role>org.apache.maven.project.MavenProjectBuilder</role>\n+      <role-hint>test</role-hint>\n+      <implementation>org.apache.maven.project.TestProjectBuilder</implementation>\n+      <requirements>\n+        <requirement>\n+          <role>org.apache.maven.profiles.MavenProfilesBuilder</role>\n+        </requirement>\n+        <requirement>\n+          <role>org.apache.maven.project.injection.ModelDefaultsInjector</role>\n+        </requirement>\n+        <requirement>\n+          <role>org.apache.maven.project.injection.ProfileInjector</role>\n+          <role-hint>test</role-hint>\n+        </requirement>\n+        <requirement>\n+          <role>org.apache.maven.project.interpolation.ModelInterpolator</role>\n+        </requirement>\n+        <requirement>\n+          <role>org.apache.maven.project.inheritance.ModelInheritanceAssembler</role>\n+        </requirement>\n+        <requirement>\n+          <role>org.apache.maven.project.validation.ModelValidator</role>\n+        </requirement>\n+        <requirement>\n+          <role>org.apache.maven.project.path.PathTranslator</role>\n+        </requirement>\n+        <requirement>\n+          <role>org.apache.maven.artifact.factory.ArtifactFactory</role>\n+        </requirement>\n+        <requirement>\n+          <role>org.apache.maven.artifact.resolver.ArtifactResolver</role>\n+        </requirement>\n+        <requirement>\n+          <role>org.apache.maven.artifact.repository.ArtifactRepositoryFactory</role>\n+        </requirement>\n+      </requirements>\n+    </component>\n+  </components>\n+</plexus>\n\\ No newline at end of file",
                "raw_url": "https://github.com/apache/maven-2/raw/b1c59f6d19e93c18a7daeccccda47af6fd59b0ea/maven-project/src/test/resources/org/apache/maven/project/canonical/CanonicalProjectBuilderTest.xml",
                "sha": "e8192d2bc406ef3f71224a42abd555c84d9f845a",
                "status": "added"
            }
        ],
        "message": "Resolving: MNG-1022...Adding TestProfileInjector to avoid injecting profiles for tests, and still guard against NPEs when profiles exist.\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@291751 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/maven-2/commit/945af4835915ac254924a8be367925a979f12d78",
        "patched_files": [
            "ProfileInjector.java"
        ],
        "repo": "maven-2",
        "unit_tests": [
            "TestProfileInjector.java",
            "CanonicalProjectBuilderTest.java",
            "ProjectClasspathTest.java"
        ]
    },
    "maven-2_cd8108f": {
        "bug_id": "maven-2_cd8108f",
        "commit": "https://github.com/apache/maven-2/commit/cd8108f4f1e05d7d1bf7bbf749cc62bafccebbf0",
        "file": [
            {
                "additions": 8,
                "blob_url": "https://github.com/apache/maven-2/blob/cd8108f4f1e05d7d1bf7bbf749cc62bafccebbf0/maven-artifact-manager/src/main/java/org/apache/maven/artifact/manager/DefaultWagonManager.java",
                "changes": 9,
                "contents_url": "https://api.github.com/repos/apache/maven-2/contents/maven-artifact-manager/src/main/java/org/apache/maven/artifact/manager/DefaultWagonManager.java?ref=cd8108f4f1e05d7d1bf7bbf749cc62bafccebbf0",
                "deletions": 1,
                "filename": "maven-artifact-manager/src/main/java/org/apache/maven/artifact/manager/DefaultWagonManager.java",
                "patch": "@@ -596,7 +596,14 @@ public ArtifactRepository getMirrorRepository( ArtifactRepository repository )\n         ArtifactRepository mirror = getMirror( repository );\n         if ( mirror != null )\n         {\n-            repository = repositoryFactory.createArtifactRepository( mirror.getId(), mirror.getUrl(),\n+            String id = mirror.getId();\n+            if ( id == null )\n+            {\n+                // TODO: this should be illegal in settings.xml\n+                id = repository.getId();\n+            }\n+\n+            repository = repositoryFactory.createArtifactRepository( id, mirror.getUrl(),\n                                                                      repository.getLayout(), repository.getSnapshots(),\n                                                                      repository.getReleases() );\n         }",
                "raw_url": "https://github.com/apache/maven-2/raw/cd8108f4f1e05d7d1bf7bbf749cc62bafccebbf0/maven-artifact-manager/src/main/java/org/apache/maven/artifact/manager/DefaultWagonManager.java",
                "sha": "ae2813116c181883a95acc47846c9ea17a84a7fd",
                "status": "modified"
            }
        ],
        "message": "[MNG-3495] avoid a potential NPE in the repository hashcode during exceptions for artifact resolution errors if settings.xml is malformed\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/components/branches/maven-2.0.x@643880 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/maven-2/commit/64110eb9164016bf5b5c5c90ef90c386be066aa6",
        "patched_files": [
            "DefaultWagonManager.java"
        ],
        "repo": "maven-2",
        "unit_tests": [
            "DefaultWagonManagerTest.java"
        ]
    },
    "maven-2_d25a80d": {
        "bug_id": "maven-2_d25a80d",
        "commit": "https://github.com/apache/maven-2/commit/d25a80d512e5d5ded4f2505cabc6c46467bc21d5",
        "file": [
            {
                "additions": 24,
                "blob_url": "https://github.com/apache/maven-2/blob/d25a80d512e5d5ded4f2505cabc6c46467bc21d5/maven-artifact/src/main/java/org/apache/maven/artifact/DefaultArtifact.java",
                "changes": 38,
                "contents_url": "https://api.github.com/repos/apache/maven-2/contents/maven-artifact/src/main/java/org/apache/maven/artifact/DefaultArtifact.java?ref=d25a80d512e5d5ded4f2505cabc6c46467bc21d5",
                "deletions": 14,
                "filename": "maven-artifact/src/main/java/org/apache/maven/artifact/DefaultArtifact.java",
                "patch": "@@ -101,7 +101,7 @@ public DefaultArtifact( String groupId, String artifactId, VersionRange versionR\n         this.artifactId = artifactId;\n \n         this.versionRange = versionRange;\n-        \n+\n         selectVersionFromNewRangeIfAvailable();\n \n         this.artifactHandler = artifactHandler;\n@@ -142,7 +142,7 @@ private void validateIdentity()\n                                                   \"The type cannot be empty.\" );\n         }\n \n-        if ( version == null && versionRange == null )\n+        if ( ( version == null ) && ( versionRange == null ) )\n         {\n             throw new InvalidArtifactRTException( groupId, artifactId, getVersion(), type,\n                                                   \"The version cannot be empty.\" );\n@@ -151,7 +151,7 @@ private void validateIdentity()\n \n     private boolean empty( String value )\n     {\n-        return value == null || value.trim().length() < 1;\n+        return ( value == null ) || ( value.trim().length() < 1 );\n     }\n \n     public String getClassifier()\n@@ -187,8 +187,8 @@ public String getVersion()\n     public void setVersion( String version )\n     {\n         this.version = version;\n-        this.setBaseVersionInternal( version );\n-        this.versionRange = null;\n+        setBaseVersionInternal( version );\n+        versionRange = null;\n     }\n \n     public String getType()\n@@ -283,9 +283,9 @@ public String toString()\n         }\n         appendArtifactTypeClassifierString( sb );\n         sb.append( \":\" );\n-        if ( getBaseVersion() != null )\n+        if ( getBaseVersionInternal() != null )\n         {\n-            sb.append( getBaseVersion() );\n+            sb.append( getBaseVersionInternal() );\n         }\n         else\n         {\n@@ -366,11 +366,21 @@ public String getBaseVersion()\n         return baseVersion;\n     }\n \n+    protected String getBaseVersionInternal()\n+    {\n+        if ( ( baseVersion == null ) && ( version != null ) )\n+        {\n+            setBaseVersionInternal( version );\n+        }\n+\n+        return baseVersion;\n+    }\n+\n     public void setBaseVersion( String baseVersion )\n     {\n         setBaseVersionInternal( baseVersion );\n     }\n-    \n+\n     protected void setBaseVersionInternal( String baseVersion )\n     {\n         Matcher m = VERSION_FILE_PATTERN.matcher( baseVersion );\n@@ -449,7 +459,7 @@ public ArtifactFilter getDependencyFilter()\n \n     public void setDependencyFilter( ArtifactFilter artifactFilter )\n     {\n-        this.dependencyFilter = artifactFilter;\n+        dependencyFilter = artifactFilter;\n     }\n \n     public ArtifactHandler getArtifactHandler()\n@@ -488,20 +498,20 @@ public VersionRange getVersionRange()\n     public void setVersionRange( VersionRange versionRange )\n     {\n         this.versionRange = versionRange;\n-        \n+\n         selectVersionFromNewRangeIfAvailable();\n     }\n-    \n+\n     private void selectVersionFromNewRangeIfAvailable()\n     {\n-        if ( versionRange != null && versionRange.getRecommendedVersion() != null )\n+        if ( ( versionRange != null ) && ( versionRange.getRecommendedVersion() != null ) )\n         {\n             selectVersion( versionRange.getRecommendedVersion().toString() );\n         }\n         else\n         {\n-            this.version = null;\n-            this.baseVersion = null;\n+            version = null;\n+            baseVersion = null;\n         }\n     }\n ",
                "raw_url": "https://github.com/apache/maven-2/raw/d25a80d512e5d5ded4f2505cabc6c46467bc21d5/maven-artifact/src/main/java/org/apache/maven/artifact/DefaultArtifact.java",
                "sha": "c0e5bca4f1292465f4017b5aa044fa513b4ac607",
                "status": "modified"
            }
        ],
        "message": "Fixing NPE when version is null on DefaultArtifact.toString() without removing the NPE throw when the public API getBaseVersion() is called and version is null. Merged from RevId 570473 in artifact trunk.\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/components/branches/maven-2.0.x@570476 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/maven-2/commit/c43a910ac9408139bad6f41bb90e4ad6f3ad2354",
        "patched_files": [
            "DefaultArtifact.java"
        ],
        "repo": "maven-2",
        "unit_tests": [
            "DefaultArtifactTest.java"
        ]
    },
    "maven-2_ecb04d2": {
        "bug_id": "maven-2_ecb04d2",
        "commit": "https://github.com/apache/maven-2/commit/ecb04d2bb820855728ac34ba6a41463cf0ecf92c",
        "file": [
            {
                "additions": 5,
                "blob_url": "https://github.com/apache/maven-2/blob/ecb04d2bb820855728ac34ba6a41463cf0ecf92c/maven-artifact/src/main/java/org/apache/maven/artifact/versioning/VersionRange.java",
                "changes": 5,
                "contents_url": "https://api.github.com/repos/apache/maven-2/contents/maven-artifact/src/main/java/org/apache/maven/artifact/versioning/VersionRange.java?ref=ecb04d2bb820855728ac34ba6a41463cf0ecf92c",
                "deletions": 0,
                "filename": "maven-artifact/src/main/java/org/apache/maven/artifact/versioning/VersionRange.java",
                "patch": "@@ -54,6 +54,11 @@ public List getRestrictions()\n     public static VersionRange createFromVersionSpec( String spec )\n         throws InvalidVersionSpecificationException\n     {\n+        if ( spec == null )\n+        {\n+            return null;\n+        }\n+\n         List restrictions = new ArrayList();\n         String process = spec;\n         ArtifactVersion version = null;",
                "raw_url": "https://github.com/apache/maven-2/raw/ecb04d2bb820855728ac34ba6a41463cf0ecf92c/maven-artifact/src/main/java/org/apache/maven/artifact/versioning/VersionRange.java",
                "sha": "945f988cb0146608010b1865151f5ce3714bb0d0",
                "status": "modified"
            }
        ],
        "message": "avoid NPE, pass on to proper validation\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@219888 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/maven-2/commit/473d99609ce2702c9d4a8b65560667eb2ad2b47c",
        "patched_files": [
            "VersionRange.java"
        ],
        "repo": "maven-2",
        "unit_tests": [
            "VersionRangeTest.java"
        ]
    },
    "maven-2_f595fbc": {
        "bug_id": "maven-2_f595fbc",
        "commit": "https://github.com/apache/maven-2/commit/f595fbc6fc0daac9cbf7f67dfda25848ef432909",
        "file": [
            {
                "additions": 3,
                "blob_url": "https://github.com/apache/maven-2/blob/f595fbc6fc0daac9cbf7f67dfda25848ef432909/maven-model/src/main/mdo/maven.mdo",
                "changes": 6,
                "contents_url": "https://api.github.com/repos/apache/maven-2/contents/maven-model/src/main/mdo/maven.mdo?ref=f595fbc6fc0daac9cbf7f67dfda25848ef432909",
                "deletions": 3,
                "filename": "maven-model/src/main/mdo/maven.mdo",
                "patch": "@@ -3413,9 +3413,9 @@\n     public int hashCode()\n     {\n         int result = 17;\n-        result = 37 * result + getArtifactId() != null ? getArtifactId().hashCode() : 0;\n-        result = 37 * result + getGroupId() != null ? getGroupId().hashCode() : 0;\n-        result = 37 * result + getVersion() != null ? getVersion().hashCode() : 0;\n+        result = 37 * result + ( getArtifactId() != null ? getArtifactId().hashCode() : 0 );\n+        result = 37 * result + ( getGroupId() != null ? getGroupId().hashCode() : 0 );\n+        result = 37 * result + ( getVersion() != null ? getVersion().hashCode() : 0 );\n         return result;\n     }\n             ]]>",
                "raw_url": "https://github.com/apache/maven-2/raw/f595fbc6fc0daac9cbf7f67dfda25848ef432909/maven-model/src/main/mdo/maven.mdo",
                "sha": "b0cc5c76bf78efa0fd4691d560e643cb93e447e2",
                "status": "modified"
            },
            {
                "additions": 55,
                "blob_url": "https://github.com/apache/maven-2/blob/f595fbc6fc0daac9cbf7f67dfda25848ef432909/maven-model/src/test/java/org/apache/maven/model/ActivationFileTest.java",
                "changes": 55,
                "contents_url": "https://api.github.com/repos/apache/maven-2/contents/maven-model/src/test/java/org/apache/maven/model/ActivationFileTest.java?ref=f595fbc6fc0daac9cbf7f67dfda25848ef432909",
                "deletions": 0,
                "filename": "maven-model/src/test/java/org/apache/maven/model/ActivationFileTest.java",
                "patch": "@@ -0,0 +1,55 @@\n+package org.apache.maven.model;\n+\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+import junit.framework.TestCase;\n+\n+/**\n+ * Tests {@code ActivationFile}.\n+ * \n+ * @author Benjamin Bentmann\n+ * @version $Id$\n+ */\n+public class ActivationFileTest\n+    extends TestCase\n+{\n+\n+    public void testHashCodeNullSafe()\n+    {\n+        new ActivationFile().hashCode();\n+    }\n+\n+    public void testEqualsNullSafe()\n+    {\n+        assertFalse( new ActivationFile().equals( null ) );\n+    }\n+\n+    public void testEqualsIdentity()\n+    {\n+        ActivationFile thing = new ActivationFile();\n+        assertTrue( thing.equals( thing ) );\n+    }\n+\n+    public void testToStringNullSafe()\n+    {\n+        assertNotNull( new ActivationFile().toString() );\n+    }\n+\n+}",
                "raw_url": "https://github.com/apache/maven-2/raw/f595fbc6fc0daac9cbf7f67dfda25848ef432909/maven-model/src/test/java/org/apache/maven/model/ActivationFileTest.java",
                "sha": "a2728e474f0a60c76fbe0c148381e11224d345d4",
                "status": "added"
            },
            {
                "additions": 55,
                "blob_url": "https://github.com/apache/maven-2/blob/f595fbc6fc0daac9cbf7f67dfda25848ef432909/maven-model/src/test/java/org/apache/maven/model/ActivationOSTest.java",
                "changes": 55,
                "contents_url": "https://api.github.com/repos/apache/maven-2/contents/maven-model/src/test/java/org/apache/maven/model/ActivationOSTest.java?ref=f595fbc6fc0daac9cbf7f67dfda25848ef432909",
                "deletions": 0,
                "filename": "maven-model/src/test/java/org/apache/maven/model/ActivationOSTest.java",
                "patch": "@@ -0,0 +1,55 @@\n+package org.apache.maven.model;\n+\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+import junit.framework.TestCase;\n+\n+/**\n+ * Tests {@code ActivationOS}.\n+ * \n+ * @author Benjamin Bentmann\n+ * @version $Id$\n+ */\n+public class ActivationOSTest\n+    extends TestCase\n+{\n+\n+    public void testHashCodeNullSafe()\n+    {\n+        new ActivationOS().hashCode();\n+    }\n+\n+    public void testEqualsNullSafe()\n+    {\n+        assertFalse( new ActivationOS().equals( null ) );\n+    }\n+\n+    public void testEqualsIdentity()\n+    {\n+        ActivationOS thing = new ActivationOS();\n+        assertTrue( thing.equals( thing ) );\n+    }\n+\n+    public void testToStringNullSafe()\n+    {\n+        assertNotNull( new ActivationOS().toString() );\n+    }\n+\n+}",
                "raw_url": "https://github.com/apache/maven-2/raw/f595fbc6fc0daac9cbf7f67dfda25848ef432909/maven-model/src/test/java/org/apache/maven/model/ActivationOSTest.java",
                "sha": "76c457fe64f838629c865dd5215d865ed09c2aeb",
                "status": "added"
            },
            {
                "additions": 55,
                "blob_url": "https://github.com/apache/maven-2/blob/f595fbc6fc0daac9cbf7f67dfda25848ef432909/maven-model/src/test/java/org/apache/maven/model/ActivationPropertyTest.java",
                "changes": 55,
                "contents_url": "https://api.github.com/repos/apache/maven-2/contents/maven-model/src/test/java/org/apache/maven/model/ActivationPropertyTest.java?ref=f595fbc6fc0daac9cbf7f67dfda25848ef432909",
                "deletions": 0,
                "filename": "maven-model/src/test/java/org/apache/maven/model/ActivationPropertyTest.java",
                "patch": "@@ -0,0 +1,55 @@\n+package org.apache.maven.model;\n+\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+import junit.framework.TestCase;\n+\n+/**\n+ * Tests {@code ActivationProperty}.\n+ * \n+ * @author Benjamin Bentmann\n+ * @version $Id$\n+ */\n+public class ActivationPropertyTest\n+    extends TestCase\n+{\n+\n+    public void testHashCodeNullSafe()\n+    {\n+        new ActivationProperty().hashCode();\n+    }\n+\n+    public void testEqualsNullSafe()\n+    {\n+        assertFalse( new ActivationProperty().equals( null ) );\n+    }\n+\n+    public void testEqualsIdentity()\n+    {\n+        ActivationProperty thing = new ActivationProperty();\n+        assertTrue( thing.equals( thing ) );\n+    }\n+\n+    public void testToStringNullSafe()\n+    {\n+        assertNotNull( new ActivationProperty().toString() );\n+    }\n+\n+}",
                "raw_url": "https://github.com/apache/maven-2/raw/f595fbc6fc0daac9cbf7f67dfda25848ef432909/maven-model/src/test/java/org/apache/maven/model/ActivationPropertyTest.java",
                "sha": "d298c5657d424fe4578d0c9931c3e6a33b83f934",
                "status": "added"
            },
            {
                "additions": 55,
                "blob_url": "https://github.com/apache/maven-2/blob/f595fbc6fc0daac9cbf7f67dfda25848ef432909/maven-model/src/test/java/org/apache/maven/model/ActivationTest.java",
                "changes": 55,
                "contents_url": "https://api.github.com/repos/apache/maven-2/contents/maven-model/src/test/java/org/apache/maven/model/ActivationTest.java?ref=f595fbc6fc0daac9cbf7f67dfda25848ef432909",
                "deletions": 0,
                "filename": "maven-model/src/test/java/org/apache/maven/model/ActivationTest.java",
                "patch": "@@ -0,0 +1,55 @@\n+package org.apache.maven.model;\n+\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+import junit.framework.TestCase;\n+\n+/**\n+ * Tests {@code Activation}.\n+ * \n+ * @author Benjamin Bentmann\n+ * @version $Id$\n+ */\n+public class ActivationTest\n+    extends TestCase\n+{\n+\n+    public void testHashCodeNullSafe()\n+    {\n+        new Activation().hashCode();\n+    }\n+\n+    public void testEqualsNullSafe()\n+    {\n+        assertFalse( new Activation().equals( null ) );\n+    }\n+\n+    public void testEqualsIdentity()\n+    {\n+        Activation thing = new Activation();\n+        assertTrue( thing.equals( thing ) );\n+    }\n+\n+    public void testToStringNullSafe()\n+    {\n+        assertNotNull( new Activation().toString() );\n+    }\n+\n+}",
                "raw_url": "https://github.com/apache/maven-2/raw/f595fbc6fc0daac9cbf7f67dfda25848ef432909/maven-model/src/test/java/org/apache/maven/model/ActivationTest.java",
                "sha": "ba7aad6bcd23ee34184d8746205e5cf6de25bb48",
                "status": "added"
            },
            {
                "additions": 55,
                "blob_url": "https://github.com/apache/maven-2/blob/f595fbc6fc0daac9cbf7f67dfda25848ef432909/maven-model/src/test/java/org/apache/maven/model/BuildTest.java",
                "changes": 55,
                "contents_url": "https://api.github.com/repos/apache/maven-2/contents/maven-model/src/test/java/org/apache/maven/model/BuildTest.java?ref=f595fbc6fc0daac9cbf7f67dfda25848ef432909",
                "deletions": 0,
                "filename": "maven-model/src/test/java/org/apache/maven/model/BuildTest.java",
                "patch": "@@ -0,0 +1,55 @@\n+package org.apache.maven.model;\n+\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+import junit.framework.TestCase;\n+\n+/**\n+ * Tests {@code Build}.\n+ * \n+ * @author Benjamin Bentmann\n+ * @version $Id$\n+ */\n+public class BuildTest\n+    extends TestCase\n+{\n+\n+    public void testHashCodeNullSafe()\n+    {\n+        new Build().hashCode();\n+    }\n+\n+    public void testEqualsNullSafe()\n+    {\n+        assertFalse( new Build().equals( null ) );\n+    }\n+\n+    public void testEqualsIdentity()\n+    {\n+        Build thing = new Build();\n+        assertTrue( thing.equals( thing ) );\n+    }\n+\n+    public void testToStringNullSafe()\n+    {\n+        assertNotNull( new Build().toString() );\n+    }\n+\n+}",
                "raw_url": "https://github.com/apache/maven-2/raw/f595fbc6fc0daac9cbf7f67dfda25848ef432909/maven-model/src/test/java/org/apache/maven/model/BuildTest.java",
                "sha": "04a13b818920aa01904d34a0b6e4487002c68243",
                "status": "added"
            },
            {
                "additions": 55,
                "blob_url": "https://github.com/apache/maven-2/blob/f595fbc6fc0daac9cbf7f67dfda25848ef432909/maven-model/src/test/java/org/apache/maven/model/CiManagementTest.java",
                "changes": 55,
                "contents_url": "https://api.github.com/repos/apache/maven-2/contents/maven-model/src/test/java/org/apache/maven/model/CiManagementTest.java?ref=f595fbc6fc0daac9cbf7f67dfda25848ef432909",
                "deletions": 0,
                "filename": "maven-model/src/test/java/org/apache/maven/model/CiManagementTest.java",
                "patch": "@@ -0,0 +1,55 @@\n+package org.apache.maven.model;\n+\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+import junit.framework.TestCase;\n+\n+/**\n+ * Tests {@code CiManagement}.\n+ * \n+ * @author Benjamin Bentmann\n+ * @version $Id$\n+ */\n+public class CiManagementTest\n+    extends TestCase\n+{\n+\n+    public void testHashCodeNullSafe()\n+    {\n+        new CiManagement().hashCode();\n+    }\n+\n+    public void testEqualsNullSafe()\n+    {\n+        assertFalse( new CiManagement().equals( null ) );\n+    }\n+\n+    public void testEqualsIdentity()\n+    {\n+        CiManagement thing = new CiManagement();\n+        assertTrue( thing.equals( thing ) );\n+    }\n+\n+    public void testToStringNullSafe()\n+    {\n+        assertNotNull( new CiManagement().toString() );\n+    }\n+\n+}",
                "raw_url": "https://github.com/apache/maven-2/raw/f595fbc6fc0daac9cbf7f67dfda25848ef432909/maven-model/src/test/java/org/apache/maven/model/CiManagementTest.java",
                "sha": "1b8c3ef2d4653d55d3e9c6e681857511df291e94",
                "status": "added"
            },
            {
                "additions": 55,
                "blob_url": "https://github.com/apache/maven-2/blob/f595fbc6fc0daac9cbf7f67dfda25848ef432909/maven-model/src/test/java/org/apache/maven/model/ContributorTest.java",
                "changes": 55,
                "contents_url": "https://api.github.com/repos/apache/maven-2/contents/maven-model/src/test/java/org/apache/maven/model/ContributorTest.java?ref=f595fbc6fc0daac9cbf7f67dfda25848ef432909",
                "deletions": 0,
                "filename": "maven-model/src/test/java/org/apache/maven/model/ContributorTest.java",
                "patch": "@@ -0,0 +1,55 @@\n+package org.apache.maven.model;\n+\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+import junit.framework.TestCase;\n+\n+/**\n+ * Tests {@code Contributor}.\n+ * \n+ * @author Benjamin Bentmann\n+ * @version $Id$\n+ */\n+public class ContributorTest\n+    extends TestCase\n+{\n+\n+    public void testHashCodeNullSafe()\n+    {\n+        new Contributor().hashCode();\n+    }\n+\n+    public void testEqualsNullSafe()\n+    {\n+        assertFalse( new Contributor().equals( null ) );\n+    }\n+\n+    public void testEqualsIdentity()\n+    {\n+        Contributor thing = new Contributor();\n+        assertTrue( thing.equals( thing ) );\n+    }\n+\n+    public void testToStringNullSafe()\n+    {\n+        assertNotNull( new Contributor().toString() );\n+    }\n+\n+}",
                "raw_url": "https://github.com/apache/maven-2/raw/f595fbc6fc0daac9cbf7f67dfda25848ef432909/maven-model/src/test/java/org/apache/maven/model/ContributorTest.java",
                "sha": "6155326c0e5f4e977d7b5d83391d0887146319a4",
                "status": "added"
            },
            {
                "additions": 55,
                "blob_url": "https://github.com/apache/maven-2/blob/f595fbc6fc0daac9cbf7f67dfda25848ef432909/maven-model/src/test/java/org/apache/maven/model/DependencyManagementTest.java",
                "changes": 55,
                "contents_url": "https://api.github.com/repos/apache/maven-2/contents/maven-model/src/test/java/org/apache/maven/model/DependencyManagementTest.java?ref=f595fbc6fc0daac9cbf7f67dfda25848ef432909",
                "deletions": 0,
                "filename": "maven-model/src/test/java/org/apache/maven/model/DependencyManagementTest.java",
                "patch": "@@ -0,0 +1,55 @@\n+package org.apache.maven.model;\n+\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+import junit.framework.TestCase;\n+\n+/**\n+ * Tests {@code DependencyManagement}.\n+ * \n+ * @author Benjamin Bentmann\n+ * @version $Id$\n+ */\n+public class DependencyManagementTest\n+    extends TestCase\n+{\n+\n+    public void testHashCodeNullSafe()\n+    {\n+        new DependencyManagement().hashCode();\n+    }\n+\n+    public void testEqualsNullSafe()\n+    {\n+        assertFalse( new DependencyManagement().equals( null ) );\n+    }\n+\n+    public void testEqualsIdentity()\n+    {\n+        DependencyManagement thing = new DependencyManagement();\n+        assertTrue( thing.equals( thing ) );\n+    }\n+\n+    public void testToStringNullSafe()\n+    {\n+        assertNotNull( new DependencyManagement().toString() );\n+    }\n+\n+}",
                "raw_url": "https://github.com/apache/maven-2/raw/f595fbc6fc0daac9cbf7f67dfda25848ef432909/maven-model/src/test/java/org/apache/maven/model/DependencyManagementTest.java",
                "sha": "b57469f70724785865faf5e776c14e83af38d7c8",
                "status": "added"
            },
            {
                "additions": 55,
                "blob_url": "https://github.com/apache/maven-2/blob/f595fbc6fc0daac9cbf7f67dfda25848ef432909/maven-model/src/test/java/org/apache/maven/model/DependencyTest.java",
                "changes": 55,
                "contents_url": "https://api.github.com/repos/apache/maven-2/contents/maven-model/src/test/java/org/apache/maven/model/DependencyTest.java?ref=f595fbc6fc0daac9cbf7f67dfda25848ef432909",
                "deletions": 0,
                "filename": "maven-model/src/test/java/org/apache/maven/model/DependencyTest.java",
                "patch": "@@ -0,0 +1,55 @@\n+package org.apache.maven.model;\n+\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+import junit.framework.TestCase;\n+\n+/**\n+ * Tests {@code Dependency}.\n+ * \n+ * @author Benjamin Bentmann\n+ * @version $Id$\n+ */\n+public class DependencyTest\n+    extends TestCase\n+{\n+\n+    public void testHashCodeNullSafe()\n+    {\n+        new Dependency().hashCode();\n+    }\n+\n+    public void testEqualsNullSafe()\n+    {\n+        assertFalse( new Dependency().equals( null ) );\n+    }\n+\n+    public void testEqualsIdentity()\n+    {\n+        Dependency thing = new Dependency();\n+        assertTrue( thing.equals( thing ) );\n+    }\n+\n+    public void testToStringNullSafe()\n+    {\n+        assertNotNull( new Dependency().toString() );\n+    }\n+\n+}",
                "raw_url": "https://github.com/apache/maven-2/raw/f595fbc6fc0daac9cbf7f67dfda25848ef432909/maven-model/src/test/java/org/apache/maven/model/DependencyTest.java",
                "sha": "d86a2b49a43d14eb3fc0257b48f9bb204847af54",
                "status": "added"
            },
            {
                "additions": 55,
                "blob_url": "https://github.com/apache/maven-2/blob/f595fbc6fc0daac9cbf7f67dfda25848ef432909/maven-model/src/test/java/org/apache/maven/model/DeploymentRepositoryTest.java",
                "changes": 55,
                "contents_url": "https://api.github.com/repos/apache/maven-2/contents/maven-model/src/test/java/org/apache/maven/model/DeploymentRepositoryTest.java?ref=f595fbc6fc0daac9cbf7f67dfda25848ef432909",
                "deletions": 0,
                "filename": "maven-model/src/test/java/org/apache/maven/model/DeploymentRepositoryTest.java",
                "patch": "@@ -0,0 +1,55 @@\n+package org.apache.maven.model;\n+\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+import junit.framework.TestCase;\n+\n+/**\n+ * Tests {@code DeploymentRepository}.\n+ * \n+ * @author Benjamin Bentmann\n+ * @version $Id$\n+ */\n+public class DeploymentRepositoryTest\n+    extends TestCase\n+{\n+\n+    public void testHashCodeNullSafe()\n+    {\n+        new DeploymentRepository().hashCode();\n+    }\n+\n+    public void testEqualsNullSafe()\n+    {\n+        assertFalse( new DeploymentRepository().equals( null ) );\n+    }\n+\n+    public void testEqualsIdentity()\n+    {\n+        DeploymentRepository thing = new DeploymentRepository();\n+        assertTrue( thing.equals( thing ) );\n+    }\n+\n+    public void testToStringNullSafe()\n+    {\n+        assertNotNull( new DeploymentRepository().toString() );\n+    }\n+\n+}",
                "raw_url": "https://github.com/apache/maven-2/raw/f595fbc6fc0daac9cbf7f67dfda25848ef432909/maven-model/src/test/java/org/apache/maven/model/DeploymentRepositoryTest.java",
                "sha": "a678db722094e553cb669ab2832fabce768383e9",
                "status": "added"
            },
            {
                "additions": 55,
                "blob_url": "https://github.com/apache/maven-2/blob/f595fbc6fc0daac9cbf7f67dfda25848ef432909/maven-model/src/test/java/org/apache/maven/model/DeveloperTest.java",
                "changes": 55,
                "contents_url": "https://api.github.com/repos/apache/maven-2/contents/maven-model/src/test/java/org/apache/maven/model/DeveloperTest.java?ref=f595fbc6fc0daac9cbf7f67dfda25848ef432909",
                "deletions": 0,
                "filename": "maven-model/src/test/java/org/apache/maven/model/DeveloperTest.java",
                "patch": "@@ -0,0 +1,55 @@\n+package org.apache.maven.model;\n+\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+import junit.framework.TestCase;\n+\n+/**\n+ * Tests {@code Developer}.\n+ * \n+ * @author Benjamin Bentmann\n+ * @version $Id$\n+ */\n+public class DeveloperTest\n+    extends TestCase\n+{\n+\n+    public void testHashCodeNullSafe()\n+    {\n+        new Developer().hashCode();\n+    }\n+\n+    public void testEqualsNullSafe()\n+    {\n+        assertFalse( new Developer().equals( null ) );\n+    }\n+\n+    public void testEqualsIdentity()\n+    {\n+        Developer thing = new Developer();\n+        assertTrue( thing.equals( thing ) );\n+    }\n+\n+    public void testToStringNullSafe()\n+    {\n+        assertNotNull( new Developer().toString() );\n+    }\n+\n+}",
                "raw_url": "https://github.com/apache/maven-2/raw/f595fbc6fc0daac9cbf7f67dfda25848ef432909/maven-model/src/test/java/org/apache/maven/model/DeveloperTest.java",
                "sha": "eebe4563a5059811adf3289709db6951bb8ea51c",
                "status": "added"
            },
            {
                "additions": 55,
                "blob_url": "https://github.com/apache/maven-2/blob/f595fbc6fc0daac9cbf7f67dfda25848ef432909/maven-model/src/test/java/org/apache/maven/model/DistributionManagementTest.java",
                "changes": 55,
                "contents_url": "https://api.github.com/repos/apache/maven-2/contents/maven-model/src/test/java/org/apache/maven/model/DistributionManagementTest.java?ref=f595fbc6fc0daac9cbf7f67dfda25848ef432909",
                "deletions": 0,
                "filename": "maven-model/src/test/java/org/apache/maven/model/DistributionManagementTest.java",
                "patch": "@@ -0,0 +1,55 @@\n+package org.apache.maven.model;\n+\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+import junit.framework.TestCase;\n+\n+/**\n+ * Tests {@code DistributionManagement}.\n+ * \n+ * @author Benjamin Bentmann\n+ * @version $Id$\n+ */\n+public class DistributionManagementTest\n+    extends TestCase\n+{\n+\n+    public void testHashCodeNullSafe()\n+    {\n+        new DistributionManagement().hashCode();\n+    }\n+\n+    public void testEqualsNullSafe()\n+    {\n+        assertFalse( new DistributionManagement().equals( null ) );\n+    }\n+\n+    public void testEqualsIdentity()\n+    {\n+        DistributionManagement thing = new DistributionManagement();\n+        assertTrue( thing.equals( thing ) );\n+    }\n+\n+    public void testToStringNullSafe()\n+    {\n+        assertNotNull( new DistributionManagement().toString() );\n+    }\n+\n+}",
                "raw_url": "https://github.com/apache/maven-2/raw/f595fbc6fc0daac9cbf7f67dfda25848ef432909/maven-model/src/test/java/org/apache/maven/model/DistributionManagementTest.java",
                "sha": "8ac8d99538a8935f5214cb9099174e296bc0e984",
                "status": "added"
            },
            {
                "additions": 55,
                "blob_url": "https://github.com/apache/maven-2/blob/f595fbc6fc0daac9cbf7f67dfda25848ef432909/maven-model/src/test/java/org/apache/maven/model/ExclusionTest.java",
                "changes": 55,
                "contents_url": "https://api.github.com/repos/apache/maven-2/contents/maven-model/src/test/java/org/apache/maven/model/ExclusionTest.java?ref=f595fbc6fc0daac9cbf7f67dfda25848ef432909",
                "deletions": 0,
                "filename": "maven-model/src/test/java/org/apache/maven/model/ExclusionTest.java",
                "patch": "@@ -0,0 +1,55 @@\n+package org.apache.maven.model;\n+\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+import junit.framework.TestCase;\n+\n+/**\n+ * Tests {@code Exclusion}.\n+ * \n+ * @author Benjamin Bentmann\n+ * @version $Id$\n+ */\n+public class ExclusionTest\n+    extends TestCase\n+{\n+\n+    public void testHashCodeNullSafe()\n+    {\n+        new Exclusion().hashCode();\n+    }\n+\n+    public void testEqualsNullSafe()\n+    {\n+        assertFalse( new Exclusion().equals( null ) );\n+    }\n+\n+    public void testEqualsIdentity()\n+    {\n+        Exclusion thing = new Exclusion();\n+        assertTrue( thing.equals( thing ) );\n+    }\n+\n+    public void testToStringNullSafe()\n+    {\n+        assertNotNull( new Exclusion().toString() );\n+    }\n+\n+}",
                "raw_url": "https://github.com/apache/maven-2/raw/f595fbc6fc0daac9cbf7f67dfda25848ef432909/maven-model/src/test/java/org/apache/maven/model/ExclusionTest.java",
                "sha": "41041443668b0fb41a51fa94e972e994c2f088ab",
                "status": "added"
            },
            {
                "additions": 55,
                "blob_url": "https://github.com/apache/maven-2/blob/f595fbc6fc0daac9cbf7f67dfda25848ef432909/maven-model/src/test/java/org/apache/maven/model/ExtensionTest.java",
                "changes": 55,
                "contents_url": "https://api.github.com/repos/apache/maven-2/contents/maven-model/src/test/java/org/apache/maven/model/ExtensionTest.java?ref=f595fbc6fc0daac9cbf7f67dfda25848ef432909",
                "deletions": 0,
                "filename": "maven-model/src/test/java/org/apache/maven/model/ExtensionTest.java",
                "patch": "@@ -0,0 +1,55 @@\n+package org.apache.maven.model;\n+\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+import junit.framework.TestCase;\n+\n+/**\n+ * Tests {@code Extension}.\n+ * \n+ * @author Benjamin Bentmann\n+ * @version $Id$\n+ */\n+public class ExtensionTest\n+    extends TestCase\n+{\n+\n+    public void testHashCodeNullSafe()\n+    {\n+        new Extension().hashCode();\n+    }\n+\n+    public void testEqualsNullSafe()\n+    {\n+        assertFalse( new Extension().equals( null ) );\n+    }\n+\n+    public void testEqualsIdentity()\n+    {\n+        Extension thing = new Extension();\n+        assertTrue( thing.equals( thing ) );\n+    }\n+\n+    public void testToStringNullSafe()\n+    {\n+        assertNotNull( new Extension().toString() );\n+    }\n+\n+}",
                "raw_url": "https://github.com/apache/maven-2/raw/f595fbc6fc0daac9cbf7f67dfda25848ef432909/maven-model/src/test/java/org/apache/maven/model/ExtensionTest.java",
                "sha": "3c0fe105b7dfa375098e912418e314927524381c",
                "status": "added"
            },
            {
                "additions": 55,
                "blob_url": "https://github.com/apache/maven-2/blob/f595fbc6fc0daac9cbf7f67dfda25848ef432909/maven-model/src/test/java/org/apache/maven/model/IssueManagementTest.java",
                "changes": 55,
                "contents_url": "https://api.github.com/repos/apache/maven-2/contents/maven-model/src/test/java/org/apache/maven/model/IssueManagementTest.java?ref=f595fbc6fc0daac9cbf7f67dfda25848ef432909",
                "deletions": 0,
                "filename": "maven-model/src/test/java/org/apache/maven/model/IssueManagementTest.java",
                "patch": "@@ -0,0 +1,55 @@\n+package org.apache.maven.model;\n+\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+import junit.framework.TestCase;\n+\n+/**\n+ * Tests {@code IssueManagement}.\n+ * \n+ * @author Benjamin Bentmann\n+ * @version $Id$\n+ */\n+public class IssueManagementTest\n+    extends TestCase\n+{\n+\n+    public void testHashCodeNullSafe()\n+    {\n+        new IssueManagement().hashCode();\n+    }\n+\n+    public void testEqualsNullSafe()\n+    {\n+        assertFalse( new IssueManagement().equals( null ) );\n+    }\n+\n+    public void testEqualsIdentity()\n+    {\n+        IssueManagement thing = new IssueManagement();\n+        assertTrue( thing.equals( thing ) );\n+    }\n+\n+    public void testToStringNullSafe()\n+    {\n+        assertNotNull( new IssueManagement().toString() );\n+    }\n+\n+}",
                "raw_url": "https://github.com/apache/maven-2/raw/f595fbc6fc0daac9cbf7f67dfda25848ef432909/maven-model/src/test/java/org/apache/maven/model/IssueManagementTest.java",
                "sha": "0c4d5331ba450456d7649703c344042011d21081",
                "status": "added"
            },
            {
                "additions": 55,
                "blob_url": "https://github.com/apache/maven-2/blob/f595fbc6fc0daac9cbf7f67dfda25848ef432909/maven-model/src/test/java/org/apache/maven/model/LicenseTest.java",
                "changes": 55,
                "contents_url": "https://api.github.com/repos/apache/maven-2/contents/maven-model/src/test/java/org/apache/maven/model/LicenseTest.java?ref=f595fbc6fc0daac9cbf7f67dfda25848ef432909",
                "deletions": 0,
                "filename": "maven-model/src/test/java/org/apache/maven/model/LicenseTest.java",
                "patch": "@@ -0,0 +1,55 @@\n+package org.apache.maven.model;\n+\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+import junit.framework.TestCase;\n+\n+/**\n+ * Tests {@code License}.\n+ * \n+ * @author Benjamin Bentmann\n+ * @version $Id$\n+ */\n+public class LicenseTest\n+    extends TestCase\n+{\n+\n+    public void testHashCodeNullSafe()\n+    {\n+        new License().hashCode();\n+    }\n+\n+    public void testEqualsNullSafe()\n+    {\n+        assertFalse( new License().equals( null ) );\n+    }\n+\n+    public void testEqualsIdentity()\n+    {\n+        License thing = new License();\n+        assertTrue( thing.equals( thing ) );\n+    }\n+\n+    public void testToStringNullSafe()\n+    {\n+        assertNotNull( new License().toString() );\n+    }\n+\n+}",
                "raw_url": "https://github.com/apache/maven-2/raw/f595fbc6fc0daac9cbf7f67dfda25848ef432909/maven-model/src/test/java/org/apache/maven/model/LicenseTest.java",
                "sha": "248b68c9c120690975aee030f1124be4872b2ea2",
                "status": "added"
            },
            {
                "additions": 55,
                "blob_url": "https://github.com/apache/maven-2/blob/f595fbc6fc0daac9cbf7f67dfda25848ef432909/maven-model/src/test/java/org/apache/maven/model/MailingListTest.java",
                "changes": 55,
                "contents_url": "https://api.github.com/repos/apache/maven-2/contents/maven-model/src/test/java/org/apache/maven/model/MailingListTest.java?ref=f595fbc6fc0daac9cbf7f67dfda25848ef432909",
                "deletions": 0,
                "filename": "maven-model/src/test/java/org/apache/maven/model/MailingListTest.java",
                "patch": "@@ -0,0 +1,55 @@\n+package org.apache.maven.model;\n+\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+import junit.framework.TestCase;\n+\n+/**\n+ * Tests {@code MailingList}.\n+ * \n+ * @author Benjamin Bentmann\n+ * @version $Id$\n+ */\n+public class MailingListTest\n+    extends TestCase\n+{\n+\n+    public void testHashCodeNullSafe()\n+    {\n+        new MailingList().hashCode();\n+    }\n+\n+    public void testEqualsNullSafe()\n+    {\n+        assertFalse( new MailingList().equals( null ) );\n+    }\n+\n+    public void testEqualsIdentity()\n+    {\n+        MailingList thing = new MailingList();\n+        assertTrue( thing.equals( thing ) );\n+    }\n+\n+    public void testToStringNullSafe()\n+    {\n+        assertNotNull( new MailingList().toString() );\n+    }\n+\n+}",
                "raw_url": "https://github.com/apache/maven-2/raw/f595fbc6fc0daac9cbf7f67dfda25848ef432909/maven-model/src/test/java/org/apache/maven/model/MailingListTest.java",
                "sha": "8bd0c73aa9183c8e111c9b41a55f033590f4e0ed",
                "status": "added"
            },
            {
                "additions": 55,
                "blob_url": "https://github.com/apache/maven-2/blob/f595fbc6fc0daac9cbf7f67dfda25848ef432909/maven-model/src/test/java/org/apache/maven/model/ModelTest.java",
                "changes": 55,
                "contents_url": "https://api.github.com/repos/apache/maven-2/contents/maven-model/src/test/java/org/apache/maven/model/ModelTest.java?ref=f595fbc6fc0daac9cbf7f67dfda25848ef432909",
                "deletions": 0,
                "filename": "maven-model/src/test/java/org/apache/maven/model/ModelTest.java",
                "patch": "@@ -0,0 +1,55 @@\n+package org.apache.maven.model;\n+\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+import junit.framework.TestCase;\n+\n+/**\n+ * Tests {@code Model}.\n+ * \n+ * @author Benjamin Bentmann\n+ * @version $Id$\n+ */\n+public class ModelTest\n+    extends TestCase\n+{\n+\n+    public void testHashCodeNullSafe()\n+    {\n+        new Model().hashCode();\n+    }\n+\n+    public void testEqualsNullSafe()\n+    {\n+        assertFalse( new Model().equals( null ) );\n+    }\n+\n+    public void testEqualsIdentity()\n+    {\n+        Model thing = new Model();\n+        assertTrue( thing.equals( thing ) );\n+    }\n+\n+    public void testToStringNullSafe()\n+    {\n+        assertNotNull( new Model().toString() );\n+    }\n+\n+}",
                "raw_url": "https://github.com/apache/maven-2/raw/f595fbc6fc0daac9cbf7f67dfda25848ef432909/maven-model/src/test/java/org/apache/maven/model/ModelTest.java",
                "sha": "cb9e6d656335f713bddaae00bf91e01bb74fa07b",
                "status": "added"
            },
            {
                "additions": 55,
                "blob_url": "https://github.com/apache/maven-2/blob/f595fbc6fc0daac9cbf7f67dfda25848ef432909/maven-model/src/test/java/org/apache/maven/model/NotifierTest.java",
                "changes": 55,
                "contents_url": "https://api.github.com/repos/apache/maven-2/contents/maven-model/src/test/java/org/apache/maven/model/NotifierTest.java?ref=f595fbc6fc0daac9cbf7f67dfda25848ef432909",
                "deletions": 0,
                "filename": "maven-model/src/test/java/org/apache/maven/model/NotifierTest.java",
                "patch": "@@ -0,0 +1,55 @@\n+package org.apache.maven.model;\n+\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+import junit.framework.TestCase;\n+\n+/**\n+ * Tests {@code Notifier}.\n+ * \n+ * @author Benjamin Bentmann\n+ * @version $Id$\n+ */\n+public class NotifierTest\n+    extends TestCase\n+{\n+\n+    public void testHashCodeNullSafe()\n+    {\n+        new Notifier().hashCode();\n+    }\n+\n+    public void testEqualsNullSafe()\n+    {\n+        assertFalse( new Notifier().equals( null ) );\n+    }\n+\n+    public void testEqualsIdentity()\n+    {\n+        Notifier thing = new Notifier();\n+        assertTrue( thing.equals( thing ) );\n+    }\n+\n+    public void testToStringNullSafe()\n+    {\n+        assertNotNull( new Notifier().toString() );\n+    }\n+\n+}",
                "raw_url": "https://github.com/apache/maven-2/raw/f595fbc6fc0daac9cbf7f67dfda25848ef432909/maven-model/src/test/java/org/apache/maven/model/NotifierTest.java",
                "sha": "2d5b8eeb5ed26e3c5f2457d85299e29cbcf13ad0",
                "status": "added"
            },
            {
                "additions": 55,
                "blob_url": "https://github.com/apache/maven-2/blob/f595fbc6fc0daac9cbf7f67dfda25848ef432909/maven-model/src/test/java/org/apache/maven/model/OrganizationTest.java",
                "changes": 55,
                "contents_url": "https://api.github.com/repos/apache/maven-2/contents/maven-model/src/test/java/org/apache/maven/model/OrganizationTest.java?ref=f595fbc6fc0daac9cbf7f67dfda25848ef432909",
                "deletions": 0,
                "filename": "maven-model/src/test/java/org/apache/maven/model/OrganizationTest.java",
                "patch": "@@ -0,0 +1,55 @@\n+package org.apache.maven.model;\n+\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+import junit.framework.TestCase;\n+\n+/**\n+ * Tests {@code Organization}.\n+ * \n+ * @author Benjamin Bentmann\n+ * @version $Id$\n+ */\n+public class OrganizationTest\n+    extends TestCase\n+{\n+\n+    public void testHashCodeNullSafe()\n+    {\n+        new Organization().hashCode();\n+    }\n+\n+    public void testEqualsNullSafe()\n+    {\n+        assertFalse( new Organization().equals( null ) );\n+    }\n+\n+    public void testEqualsIdentity()\n+    {\n+        Organization thing = new Organization();\n+        assertTrue( thing.equals( thing ) );\n+    }\n+\n+    public void testToStringNullSafe()\n+    {\n+        assertNotNull( new Organization().toString() );\n+    }\n+\n+}",
                "raw_url": "https://github.com/apache/maven-2/raw/f595fbc6fc0daac9cbf7f67dfda25848ef432909/maven-model/src/test/java/org/apache/maven/model/OrganizationTest.java",
                "sha": "4e4f99485a3f7c0f78ead70ac1fd227179887b5d",
                "status": "added"
            },
            {
                "additions": 55,
                "blob_url": "https://github.com/apache/maven-2/blob/f595fbc6fc0daac9cbf7f67dfda25848ef432909/maven-model/src/test/java/org/apache/maven/model/ParentTest.java",
                "changes": 55,
                "contents_url": "https://api.github.com/repos/apache/maven-2/contents/maven-model/src/test/java/org/apache/maven/model/ParentTest.java?ref=f595fbc6fc0daac9cbf7f67dfda25848ef432909",
                "deletions": 0,
                "filename": "maven-model/src/test/java/org/apache/maven/model/ParentTest.java",
                "patch": "@@ -0,0 +1,55 @@\n+package org.apache.maven.model;\n+\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+import junit.framework.TestCase;\n+\n+/**\n+ * Tests {@code Parent}.\n+ * \n+ * @author Benjamin Bentmann\n+ * @version $Id$\n+ */\n+public class ParentTest\n+    extends TestCase\n+{\n+\n+    public void testHashCodeNullSafe()\n+    {\n+        new Parent().hashCode();\n+    }\n+\n+    public void testEqualsNullSafe()\n+    {\n+        assertFalse( new Parent().equals( null ) );\n+    }\n+\n+    public void testEqualsIdentity()\n+    {\n+        Parent thing = new Parent();\n+        assertTrue( thing.equals( thing ) );\n+    }\n+\n+    public void testToStringNullSafe()\n+    {\n+        assertNotNull( new Parent().toString() );\n+    }\n+\n+}",
                "raw_url": "https://github.com/apache/maven-2/raw/f595fbc6fc0daac9cbf7f67dfda25848ef432909/maven-model/src/test/java/org/apache/maven/model/ParentTest.java",
                "sha": "a35782cc2736f5cb7283eccebeb7eac7cdf2a1ef",
                "status": "added"
            },
            {
                "additions": 55,
                "blob_url": "https://github.com/apache/maven-2/blob/f595fbc6fc0daac9cbf7f67dfda25848ef432909/maven-model/src/test/java/org/apache/maven/model/PluginConfigurationTest.java",
                "changes": 55,
                "contents_url": "https://api.github.com/repos/apache/maven-2/contents/maven-model/src/test/java/org/apache/maven/model/PluginConfigurationTest.java?ref=f595fbc6fc0daac9cbf7f67dfda25848ef432909",
                "deletions": 0,
                "filename": "maven-model/src/test/java/org/apache/maven/model/PluginConfigurationTest.java",
                "patch": "@@ -0,0 +1,55 @@\n+package org.apache.maven.model;\n+\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+import junit.framework.TestCase;\n+\n+/**\n+ * Tests {@code PluginConfiguration}.\n+ * \n+ * @author Benjamin Bentmann\n+ * @version $Id$\n+ */\n+public class PluginConfigurationTest\n+    extends TestCase\n+{\n+\n+    public void testHashCodeNullSafe()\n+    {\n+        new PluginConfiguration().hashCode();\n+    }\n+\n+    public void testEqualsNullSafe()\n+    {\n+        assertFalse( new PluginConfiguration().equals( null ) );\n+    }\n+\n+    public void testEqualsIdentity()\n+    {\n+        PluginConfiguration thing = new PluginConfiguration();\n+        assertTrue( thing.equals( thing ) );\n+    }\n+\n+    public void testToStringNullSafe()\n+    {\n+        assertNotNull( new PluginConfiguration().toString() );\n+    }\n+\n+}",
                "raw_url": "https://github.com/apache/maven-2/raw/f595fbc6fc0daac9cbf7f67dfda25848ef432909/maven-model/src/test/java/org/apache/maven/model/PluginConfigurationTest.java",
                "sha": "b6b54acb869db980a6bf39439c924b3d1de8327e",
                "status": "added"
            },
            {
                "additions": 55,
                "blob_url": "https://github.com/apache/maven-2/blob/f595fbc6fc0daac9cbf7f67dfda25848ef432909/maven-model/src/test/java/org/apache/maven/model/PluginContainerTest.java",
                "changes": 55,
                "contents_url": "https://api.github.com/repos/apache/maven-2/contents/maven-model/src/test/java/org/apache/maven/model/PluginContainerTest.java?ref=f595fbc6fc0daac9cbf7f67dfda25848ef432909",
                "deletions": 0,
                "filename": "maven-model/src/test/java/org/apache/maven/model/PluginContainerTest.java",
                "patch": "@@ -0,0 +1,55 @@\n+package org.apache.maven.model;\n+\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+import junit.framework.TestCase;\n+\n+/**\n+ * Tests {@code PluginContainer}.\n+ * \n+ * @author Benjamin Bentmann\n+ * @version $Id$\n+ */\n+public class PluginContainerTest\n+    extends TestCase\n+{\n+\n+    public void testHashCodeNullSafe()\n+    {\n+        new PluginContainer().hashCode();\n+    }\n+\n+    public void testEqualsNullSafe()\n+    {\n+        assertFalse( new PluginContainer().equals( null ) );\n+    }\n+\n+    public void testEqualsIdentity()\n+    {\n+        PluginContainer thing = new PluginContainer();\n+        assertTrue( thing.equals( thing ) );\n+    }\n+\n+    public void testToStringNullSafe()\n+    {\n+        assertNotNull( new PluginContainer().toString() );\n+    }\n+\n+}",
                "raw_url": "https://github.com/apache/maven-2/raw/f595fbc6fc0daac9cbf7f67dfda25848ef432909/maven-model/src/test/java/org/apache/maven/model/PluginContainerTest.java",
                "sha": "0cd16a666b50ad032f4d4166f81337164f9c6400",
                "status": "added"
            },
            {
                "additions": 55,
                "blob_url": "https://github.com/apache/maven-2/blob/f595fbc6fc0daac9cbf7f67dfda25848ef432909/maven-model/src/test/java/org/apache/maven/model/PluginExecutionTest.java",
                "changes": 55,
                "contents_url": "https://api.github.com/repos/apache/maven-2/contents/maven-model/src/test/java/org/apache/maven/model/PluginExecutionTest.java?ref=f595fbc6fc0daac9cbf7f67dfda25848ef432909",
                "deletions": 0,
                "filename": "maven-model/src/test/java/org/apache/maven/model/PluginExecutionTest.java",
                "patch": "@@ -0,0 +1,55 @@\n+package org.apache.maven.model;\n+\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+import junit.framework.TestCase;\n+\n+/**\n+ * Tests {@code PluginExecution}.\n+ * \n+ * @author Benjamin Bentmann\n+ * @version $Id$\n+ */\n+public class PluginExecutionTest\n+    extends TestCase\n+{\n+\n+    public void testHashCodeNullSafe()\n+    {\n+        new PluginExecution().hashCode();\n+    }\n+\n+    public void testEqualsNullSafe()\n+    {\n+        assertFalse( new PluginExecution().equals( null ) );\n+    }\n+\n+    public void testEqualsIdentity()\n+    {\n+        PluginExecution thing = new PluginExecution();\n+        assertTrue( thing.equals( thing ) );\n+    }\n+\n+    public void testToStringNullSafe()\n+    {\n+        assertNotNull( new PluginExecution().toString() );\n+    }\n+\n+}",
                "raw_url": "https://github.com/apache/maven-2/raw/f595fbc6fc0daac9cbf7f67dfda25848ef432909/maven-model/src/test/java/org/apache/maven/model/PluginExecutionTest.java",
                "sha": "6b14cfb971622b167cad0f8d3302f18a2e64208c",
                "status": "added"
            },
            {
                "additions": 55,
                "blob_url": "https://github.com/apache/maven-2/blob/f595fbc6fc0daac9cbf7f67dfda25848ef432909/maven-model/src/test/java/org/apache/maven/model/PluginManagementTest.java",
                "changes": 55,
                "contents_url": "https://api.github.com/repos/apache/maven-2/contents/maven-model/src/test/java/org/apache/maven/model/PluginManagementTest.java?ref=f595fbc6fc0daac9cbf7f67dfda25848ef432909",
                "deletions": 0,
                "filename": "maven-model/src/test/java/org/apache/maven/model/PluginManagementTest.java",
                "patch": "@@ -0,0 +1,55 @@\n+package org.apache.maven.model;\n+\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+import junit.framework.TestCase;\n+\n+/**\n+ * Tests {@code PluginManagement}.\n+ * \n+ * @author Benjamin Bentmann\n+ * @version $Id$\n+ */\n+public class PluginManagementTest\n+    extends TestCase\n+{\n+\n+    public void testHashCodeNullSafe()\n+    {\n+        new PluginManagement().hashCode();\n+    }\n+\n+    public void testEqualsNullSafe()\n+    {\n+        assertFalse( new PluginManagement().equals( null ) );\n+    }\n+\n+    public void testEqualsIdentity()\n+    {\n+        PluginManagement thing = new PluginManagement();\n+        assertTrue( thing.equals( thing ) );\n+    }\n+\n+    public void testToStringNullSafe()\n+    {\n+        assertNotNull( new PluginManagement().toString() );\n+    }\n+\n+}",
                "raw_url": "https://github.com/apache/maven-2/raw/f595fbc6fc0daac9cbf7f67dfda25848ef432909/maven-model/src/test/java/org/apache/maven/model/PluginManagementTest.java",
                "sha": "08a83858f6f51858d0c0e226eea41e8a848ce15e",
                "status": "added"
            },
            {
                "additions": 55,
                "blob_url": "https://github.com/apache/maven-2/blob/f595fbc6fc0daac9cbf7f67dfda25848ef432909/maven-model/src/test/java/org/apache/maven/model/PluginTest.java",
                "changes": 55,
                "contents_url": "https://api.github.com/repos/apache/maven-2/contents/maven-model/src/test/java/org/apache/maven/model/PluginTest.java?ref=f595fbc6fc0daac9cbf7f67dfda25848ef432909",
                "deletions": 0,
                "filename": "maven-model/src/test/java/org/apache/maven/model/PluginTest.java",
                "patch": "@@ -0,0 +1,55 @@\n+package org.apache.maven.model;\n+\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+import junit.framework.TestCase;\n+\n+/**\n+ * Tests {@code Plugin}.\n+ * \n+ * @author Benjamin Bentmann\n+ * @version $Id$\n+ */\n+public class PluginTest\n+    extends TestCase\n+{\n+\n+    public void testHashCodeNullSafe()\n+    {\n+        new Plugin().hashCode();\n+    }\n+\n+    public void testEqualsNullSafe()\n+    {\n+        assertFalse( new Plugin().equals( null ) );\n+    }\n+\n+    public void testEqualsIdentity()\n+    {\n+        Plugin thing = new Plugin();\n+        assertTrue( thing.equals( thing ) );\n+    }\n+\n+    public void testToStringNullSafe()\n+    {\n+        assertNotNull( new Plugin().toString() );\n+    }\n+\n+}",
                "raw_url": "https://github.com/apache/maven-2/raw/f595fbc6fc0daac9cbf7f67dfda25848ef432909/maven-model/src/test/java/org/apache/maven/model/PluginTest.java",
                "sha": "3a9deb4866f5291f0b9622f45a4db420bf52d36b",
                "status": "added"
            },
            {
                "additions": 55,
                "blob_url": "https://github.com/apache/maven-2/blob/f595fbc6fc0daac9cbf7f67dfda25848ef432909/maven-model/src/test/java/org/apache/maven/model/PrerequisitesTest.java",
                "changes": 55,
                "contents_url": "https://api.github.com/repos/apache/maven-2/contents/maven-model/src/test/java/org/apache/maven/model/PrerequisitesTest.java?ref=f595fbc6fc0daac9cbf7f67dfda25848ef432909",
                "deletions": 0,
                "filename": "maven-model/src/test/java/org/apache/maven/model/PrerequisitesTest.java",
                "patch": "@@ -0,0 +1,55 @@\n+package org.apache.maven.model;\n+\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+import junit.framework.TestCase;\n+\n+/**\n+ * Tests {@code Prerequisites}.\n+ * \n+ * @author Benjamin Bentmann\n+ * @version $Id$\n+ */\n+public class PrerequisitesTest\n+    extends TestCase\n+{\n+\n+    public void testHashCodeNullSafe()\n+    {\n+        new Prerequisites().hashCode();\n+    }\n+\n+    public void testEqualsNullSafe()\n+    {\n+        assertFalse( new Prerequisites().equals( null ) );\n+    }\n+\n+    public void testEqualsIdentity()\n+    {\n+        Prerequisites thing = new Prerequisites();\n+        assertTrue( thing.equals( thing ) );\n+    }\n+\n+    public void testToStringNullSafe()\n+    {\n+        assertNotNull( new Prerequisites().toString() );\n+    }\n+\n+}",
                "raw_url": "https://github.com/apache/maven-2/raw/f595fbc6fc0daac9cbf7f67dfda25848ef432909/maven-model/src/test/java/org/apache/maven/model/PrerequisitesTest.java",
                "sha": "441ead26da46dd8877b7dfeb95668b83dabb1ca9",
                "status": "added"
            },
            {
                "additions": 55,
                "blob_url": "https://github.com/apache/maven-2/blob/f595fbc6fc0daac9cbf7f67dfda25848ef432909/maven-model/src/test/java/org/apache/maven/model/ProfileTest.java",
                "changes": 55,
                "contents_url": "https://api.github.com/repos/apache/maven-2/contents/maven-model/src/test/java/org/apache/maven/model/ProfileTest.java?ref=f595fbc6fc0daac9cbf7f67dfda25848ef432909",
                "deletions": 0,
                "filename": "maven-model/src/test/java/org/apache/maven/model/ProfileTest.java",
                "patch": "@@ -0,0 +1,55 @@\n+package org.apache.maven.model;\n+\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+import junit.framework.TestCase;\n+\n+/**\n+ * Tests {@code Profile}.\n+ * \n+ * @author Benjamin Bentmann\n+ * @version $Id$\n+ */\n+public class ProfileTest\n+    extends TestCase\n+{\n+\n+    public void testHashCodeNullSafe()\n+    {\n+        new Profile().hashCode();\n+    }\n+\n+    public void testEqualsNullSafe()\n+    {\n+        assertFalse( new Profile().equals( null ) );\n+    }\n+\n+    public void testEqualsIdentity()\n+    {\n+        Profile thing = new Profile();\n+        assertTrue( thing.equals( thing ) );\n+    }\n+\n+    public void testToStringNullSafe()\n+    {\n+        assertNotNull( new Profile().toString() );\n+    }\n+\n+}",
                "raw_url": "https://github.com/apache/maven-2/raw/f595fbc6fc0daac9cbf7f67dfda25848ef432909/maven-model/src/test/java/org/apache/maven/model/ProfileTest.java",
                "sha": "4b950c8c7ae1e6cdf922ad41ed68c7b884cee454",
                "status": "added"
            },
            {
                "additions": 55,
                "blob_url": "https://github.com/apache/maven-2/blob/f595fbc6fc0daac9cbf7f67dfda25848ef432909/maven-model/src/test/java/org/apache/maven/model/RelocationTest.java",
                "changes": 55,
                "contents_url": "https://api.github.com/repos/apache/maven-2/contents/maven-model/src/test/java/org/apache/maven/model/RelocationTest.java?ref=f595fbc6fc0daac9cbf7f67dfda25848ef432909",
                "deletions": 0,
                "filename": "maven-model/src/test/java/org/apache/maven/model/RelocationTest.java",
                "patch": "@@ -0,0 +1,55 @@\n+package org.apache.maven.model;\n+\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+import junit.framework.TestCase;\n+\n+/**\n+ * Tests {@code Relocation}.\n+ * \n+ * @author Benjamin Bentmann\n+ * @version $Id$\n+ */\n+public class RelocationTest\n+    extends TestCase\n+{\n+\n+    public void testHashCodeNullSafe()\n+    {\n+        new Relocation().hashCode();\n+    }\n+\n+    public void testEqualsNullSafe()\n+    {\n+        assertFalse( new Relocation().equals( null ) );\n+    }\n+\n+    public void testEqualsIdentity()\n+    {\n+        Relocation thing = new Relocation();\n+        assertTrue( thing.equals( thing ) );\n+    }\n+\n+    public void testToStringNullSafe()\n+    {\n+        assertNotNull( new Relocation().toString() );\n+    }\n+\n+}",
                "raw_url": "https://github.com/apache/maven-2/raw/f595fbc6fc0daac9cbf7f67dfda25848ef432909/maven-model/src/test/java/org/apache/maven/model/RelocationTest.java",
                "sha": "c016a26d9de7ec86f69c712ad1e1772d3d9efaba",
                "status": "added"
            },
            {
                "additions": 55,
                "blob_url": "https://github.com/apache/maven-2/blob/f595fbc6fc0daac9cbf7f67dfda25848ef432909/maven-model/src/test/java/org/apache/maven/model/ReportPluginTest.java",
                "changes": 55,
                "contents_url": "https://api.github.com/repos/apache/maven-2/contents/maven-model/src/test/java/org/apache/maven/model/ReportPluginTest.java?ref=f595fbc6fc0daac9cbf7f67dfda25848ef432909",
                "deletions": 0,
                "filename": "maven-model/src/test/java/org/apache/maven/model/ReportPluginTest.java",
                "patch": "@@ -0,0 +1,55 @@\n+package org.apache.maven.model;\n+\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+import junit.framework.TestCase;\n+\n+/**\n+ * Tests {@code ReportPlugin}.\n+ * \n+ * @author Benjamin Bentmann\n+ * @version $Id$\n+ */\n+public class ReportPluginTest\n+    extends TestCase\n+{\n+\n+    public void testHashCodeNullSafe()\n+    {\n+        new ReportPlugin().hashCode();\n+    }\n+\n+    public void testEqualsNullSafe()\n+    {\n+        assertFalse( new ReportPlugin().equals( null ) );\n+    }\n+\n+    public void testEqualsIdentity()\n+    {\n+        ReportPlugin thing = new ReportPlugin();\n+        assertTrue( thing.equals( thing ) );\n+    }\n+\n+    public void testToStringNullSafe()\n+    {\n+        assertNotNull( new ReportPlugin().toString() );\n+    }\n+\n+}",
                "raw_url": "https://github.com/apache/maven-2/raw/f595fbc6fc0daac9cbf7f67dfda25848ef432909/maven-model/src/test/java/org/apache/maven/model/ReportPluginTest.java",
                "sha": "cac2bc0436a2280cb6f2d8de1d9ca4cd91e0f8f3",
                "status": "added"
            },
            {
                "additions": 55,
                "blob_url": "https://github.com/apache/maven-2/blob/f595fbc6fc0daac9cbf7f67dfda25848ef432909/maven-model/src/test/java/org/apache/maven/model/ReportSetTest.java",
                "changes": 55,
                "contents_url": "https://api.github.com/repos/apache/maven-2/contents/maven-model/src/test/java/org/apache/maven/model/ReportSetTest.java?ref=f595fbc6fc0daac9cbf7f67dfda25848ef432909",
                "deletions": 0,
                "filename": "maven-model/src/test/java/org/apache/maven/model/ReportSetTest.java",
                "patch": "@@ -0,0 +1,55 @@\n+package org.apache.maven.model;\n+\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+import junit.framework.TestCase;\n+\n+/**\n+ * Tests {@code ReportSet}.\n+ * \n+ * @author Benjamin Bentmann\n+ * @version $Id$\n+ */\n+public class ReportSetTest\n+    extends TestCase\n+{\n+\n+    public void testHashCodeNullSafe()\n+    {\n+        new ReportSet().hashCode();\n+    }\n+\n+    public void testEqualsNullSafe()\n+    {\n+        assertFalse( new ReportSet().equals( null ) );\n+    }\n+\n+    public void testEqualsIdentity()\n+    {\n+        ReportSet thing = new ReportSet();\n+        assertTrue( thing.equals( thing ) );\n+    }\n+\n+    public void testToStringNullSafe()\n+    {\n+        assertNotNull( new ReportSet().toString() );\n+    }\n+\n+}",
                "raw_url": "https://github.com/apache/maven-2/raw/f595fbc6fc0daac9cbf7f67dfda25848ef432909/maven-model/src/test/java/org/apache/maven/model/ReportSetTest.java",
                "sha": "2839a9bbc027a9814b239af4d72d471984f6de72",
                "status": "added"
            },
            {
                "additions": 55,
                "blob_url": "https://github.com/apache/maven-2/blob/f595fbc6fc0daac9cbf7f67dfda25848ef432909/maven-model/src/test/java/org/apache/maven/model/ReportingTest.java",
                "changes": 55,
                "contents_url": "https://api.github.com/repos/apache/maven-2/contents/maven-model/src/test/java/org/apache/maven/model/ReportingTest.java?ref=f595fbc6fc0daac9cbf7f67dfda25848ef432909",
                "deletions": 0,
                "filename": "maven-model/src/test/java/org/apache/maven/model/ReportingTest.java",
                "patch": "@@ -0,0 +1,55 @@\n+package org.apache.maven.model;\n+\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+import junit.framework.TestCase;\n+\n+/**\n+ * Tests {@code Reporting}.\n+ * \n+ * @author Benjamin Bentmann\n+ * @version $Id$\n+ */\n+public class ReportingTest\n+    extends TestCase\n+{\n+\n+    public void testHashCodeNullSafe()\n+    {\n+        new Reporting().hashCode();\n+    }\n+\n+    public void testEqualsNullSafe()\n+    {\n+        assertFalse( new Reporting().equals( null ) );\n+    }\n+\n+    public void testEqualsIdentity()\n+    {\n+        Reporting thing = new Reporting();\n+        assertTrue( thing.equals( thing ) );\n+    }\n+\n+    public void testToStringNullSafe()\n+    {\n+        assertNotNull( new Reporting().toString() );\n+    }\n+\n+}",
                "raw_url": "https://github.com/apache/maven-2/raw/f595fbc6fc0daac9cbf7f67dfda25848ef432909/maven-model/src/test/java/org/apache/maven/model/ReportingTest.java",
                "sha": "6c3d8a1d4803967a3d42d41a6e846d667f7a7c6e",
                "status": "added"
            },
            {
                "additions": 55,
                "blob_url": "https://github.com/apache/maven-2/blob/f595fbc6fc0daac9cbf7f67dfda25848ef432909/maven-model/src/test/java/org/apache/maven/model/RepositoryPolicyTest.java",
                "changes": 55,
                "contents_url": "https://api.github.com/repos/apache/maven-2/contents/maven-model/src/test/java/org/apache/maven/model/RepositoryPolicyTest.java?ref=f595fbc6fc0daac9cbf7f67dfda25848ef432909",
                "deletions": 0,
                "filename": "maven-model/src/test/java/org/apache/maven/model/RepositoryPolicyTest.java",
                "patch": "@@ -0,0 +1,55 @@\n+package org.apache.maven.model;\n+\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+import junit.framework.TestCase;\n+\n+/**\n+ * Tests {@code RepositoryPolicy}.\n+ * \n+ * @author Benjamin Bentmann\n+ * @version $Id$\n+ */\n+public class RepositoryPolicyTest\n+    extends TestCase\n+{\n+\n+    public void testHashCodeNullSafe()\n+    {\n+        new RepositoryPolicy().hashCode();\n+    }\n+\n+    public void testEqualsNullSafe()\n+    {\n+        assertFalse( new RepositoryPolicy().equals( null ) );\n+    }\n+\n+    public void testEqualsIdentity()\n+    {\n+        RepositoryPolicy thing = new RepositoryPolicy();\n+        assertTrue( thing.equals( thing ) );\n+    }\n+\n+    public void testToStringNullSafe()\n+    {\n+        assertNotNull( new RepositoryPolicy().toString() );\n+    }\n+\n+}",
                "raw_url": "https://github.com/apache/maven-2/raw/f595fbc6fc0daac9cbf7f67dfda25848ef432909/maven-model/src/test/java/org/apache/maven/model/RepositoryPolicyTest.java",
                "sha": "ef9919df5842d9ea9cd947c30843cd82bb92fe8e",
                "status": "added"
            },
            {
                "additions": 55,
                "blob_url": "https://github.com/apache/maven-2/blob/f595fbc6fc0daac9cbf7f67dfda25848ef432909/maven-model/src/test/java/org/apache/maven/model/RepositoryTest.java",
                "changes": 55,
                "contents_url": "https://api.github.com/repos/apache/maven-2/contents/maven-model/src/test/java/org/apache/maven/model/RepositoryTest.java?ref=f595fbc6fc0daac9cbf7f67dfda25848ef432909",
                "deletions": 0,
                "filename": "maven-model/src/test/java/org/apache/maven/model/RepositoryTest.java",
                "patch": "@@ -0,0 +1,55 @@\n+package org.apache.maven.model;\n+\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+import junit.framework.TestCase;\n+\n+/**\n+ * Tests {@code Repository}.\n+ * \n+ * @author Benjamin Bentmann\n+ * @version $Id$\n+ */\n+public class RepositoryTest\n+    extends TestCase\n+{\n+\n+    public void testHashCodeNullSafe()\n+    {\n+        new Repository().hashCode();\n+    }\n+\n+    public void testEqualsNullSafe()\n+    {\n+        assertFalse( new Repository().equals( null ) );\n+    }\n+\n+    public void testEqualsIdentity()\n+    {\n+        Repository thing = new Repository();\n+        assertTrue( thing.equals( thing ) );\n+    }\n+\n+    public void testToStringNullSafe()\n+    {\n+        assertNotNull( new Repository().toString() );\n+    }\n+\n+}",
                "raw_url": "https://github.com/apache/maven-2/raw/f595fbc6fc0daac9cbf7f67dfda25848ef432909/maven-model/src/test/java/org/apache/maven/model/RepositoryTest.java",
                "sha": "8113a59c1866f644dd49065e004d680aabe572e4",
                "status": "added"
            },
            {
                "additions": 55,
                "blob_url": "https://github.com/apache/maven-2/blob/f595fbc6fc0daac9cbf7f67dfda25848ef432909/maven-model/src/test/java/org/apache/maven/model/ResourceTest.java",
                "changes": 55,
                "contents_url": "https://api.github.com/repos/apache/maven-2/contents/maven-model/src/test/java/org/apache/maven/model/ResourceTest.java?ref=f595fbc6fc0daac9cbf7f67dfda25848ef432909",
                "deletions": 0,
                "filename": "maven-model/src/test/java/org/apache/maven/model/ResourceTest.java",
                "patch": "@@ -0,0 +1,55 @@\n+package org.apache.maven.model;\n+\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+import junit.framework.TestCase;\n+\n+/**\n+ * Tests {@code Resource}.\n+ * \n+ * @author Benjamin Bentmann\n+ * @version $Id$\n+ */\n+public class ResourceTest\n+    extends TestCase\n+{\n+\n+    public void testHashCodeNullSafe()\n+    {\n+        new Resource().hashCode();\n+    }\n+\n+    public void testEqualsNullSafe()\n+    {\n+        assertFalse( new Resource().equals( null ) );\n+    }\n+\n+    public void testEqualsIdentity()\n+    {\n+        Resource thing = new Resource();\n+        assertTrue( thing.equals( thing ) );\n+    }\n+\n+    public void testToStringNullSafe()\n+    {\n+        assertNotNull( new Resource().toString() );\n+    }\n+\n+}",
                "raw_url": "https://github.com/apache/maven-2/raw/f595fbc6fc0daac9cbf7f67dfda25848ef432909/maven-model/src/test/java/org/apache/maven/model/ResourceTest.java",
                "sha": "c906bbe18c2b65dc5104e3103105e4788b1ec7fd",
                "status": "added"
            },
            {
                "additions": 55,
                "blob_url": "https://github.com/apache/maven-2/blob/f595fbc6fc0daac9cbf7f67dfda25848ef432909/maven-model/src/test/java/org/apache/maven/model/ScmTest.java",
                "changes": 55,
                "contents_url": "https://api.github.com/repos/apache/maven-2/contents/maven-model/src/test/java/org/apache/maven/model/ScmTest.java?ref=f595fbc6fc0daac9cbf7f67dfda25848ef432909",
                "deletions": 0,
                "filename": "maven-model/src/test/java/org/apache/maven/model/ScmTest.java",
                "patch": "@@ -0,0 +1,55 @@\n+package org.apache.maven.model;\n+\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+import junit.framework.TestCase;\n+\n+/**\n+ * Tests {@code Scm}.\n+ * \n+ * @author Benjamin Bentmann\n+ * @version $Id$\n+ */\n+public class ScmTest\n+    extends TestCase\n+{\n+\n+    public void testHashCodeNullSafe()\n+    {\n+        new Scm().hashCode();\n+    }\n+\n+    public void testEqualsNullSafe()\n+    {\n+        assertFalse( new Scm().equals( null ) );\n+    }\n+\n+    public void testEqualsIdentity()\n+    {\n+        Scm thing = new Scm();\n+        assertTrue( thing.equals( thing ) );\n+    }\n+\n+    public void testToStringNullSafe()\n+    {\n+        assertNotNull( new Scm().toString() );\n+    }\n+\n+}",
                "raw_url": "https://github.com/apache/maven-2/raw/f595fbc6fc0daac9cbf7f67dfda25848ef432909/maven-model/src/test/java/org/apache/maven/model/ScmTest.java",
                "sha": "fc76fcae21ebbaa74059cb18dc6d02398ae8697c",
                "status": "added"
            },
            {
                "additions": 55,
                "blob_url": "https://github.com/apache/maven-2/blob/f595fbc6fc0daac9cbf7f67dfda25848ef432909/maven-model/src/test/java/org/apache/maven/model/SiteTest.java",
                "changes": 55,
                "contents_url": "https://api.github.com/repos/apache/maven-2/contents/maven-model/src/test/java/org/apache/maven/model/SiteTest.java?ref=f595fbc6fc0daac9cbf7f67dfda25848ef432909",
                "deletions": 0,
                "filename": "maven-model/src/test/java/org/apache/maven/model/SiteTest.java",
                "patch": "@@ -0,0 +1,55 @@\n+package org.apache.maven.model;\n+\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+import junit.framework.TestCase;\n+\n+/**\n+ * Tests {@code Site}.\n+ * \n+ * @author Benjamin Bentmann\n+ * @version $Id$\n+ */\n+public class SiteTest\n+    extends TestCase\n+{\n+\n+    public void testHashCodeNullSafe()\n+    {\n+        new Site().hashCode();\n+    }\n+\n+    public void testEqualsNullSafe()\n+    {\n+        assertFalse( new Site().equals( null ) );\n+    }\n+\n+    public void testEqualsIdentity()\n+    {\n+        Site thing = new Site();\n+        assertTrue( thing.equals( thing ) );\n+    }\n+\n+    public void testToStringNullSafe()\n+    {\n+        assertNotNull( new Site().toString() );\n+    }\n+\n+}",
                "raw_url": "https://github.com/apache/maven-2/raw/f595fbc6fc0daac9cbf7f67dfda25848ef432909/maven-model/src/test/java/org/apache/maven/model/SiteTest.java",
                "sha": "0626f79f039f33a2a721ddad994da93276ea4a6a",
                "status": "added"
            }
        ],
        "message": "[MNG-3921] Extensions are subject to NPEs in their hashCode() impl\n\no Merged from r727548\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/components/branches/maven-2.1.x@727553 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/maven-2/commit/d7c623ebcb52039c845952ddc6a7736c048301b7",
        "patched_files": [
            "maven.java"
        ],
        "repo": "maven-2",
        "unit_tests": [
            "ReportPluginTest.java",
            "ActivationOSTest.java",
            "DeveloperTest.java",
            "BuildTest.java",
            "SiteTest.java",
            "ParentTest.java",
            "PluginExecutionTest.java",
            "ProfileTest.java",
            "ScmTest.java",
            "DistributionManagementTest.java",
            "PluginConfigurationTest.java",
            "ResourceTest.java",
            "MailingListTest.java",
            "DeploymentRepositoryTest.java",
            "IssueManagementTest.java",
            "ActivationPropertyTest.java",
            "OrganizationTest.java",
            "ActivationFileTest.java",
            "NotifierTest.java",
            "DependencyTest.java",
            "ExtensionTest.java",
            "RelocationTest.java",
            "DependencyManagementTest.java",
            "ExclusionTest.java",
            "RepositoryPolicyTest.java",
            "CiManagementTest.java",
            "ReportSetTest.java",
            "ContributorTest.java",
            "ReportingTest.java",
            "ActivationTest.java",
            "PluginContainerTest.java",
            "PluginTest.java",
            "LicenseTest.java",
            "PluginManagementTest.java",
            "PrerequisitesTest.java",
            "RepositoryTest.java",
            "ModelTest.java"
        ]
    }
}