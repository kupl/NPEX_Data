{
    "asterixdb_4eaaff5": {
        "bug_id": "asterixdb_4eaaff5",
        "commit": "https://github.com/apache/asterixdb/commit/4eaaff59f6ff53bd6a4adbe0127b7127cbbdd7d4",
        "file": [
            {
                "additions": 4,
                "blob_url": "https://github.com/apache/asterixdb/blob/4eaaff59f6ff53bd6a4adbe0127b7127cbbdd7d4/hyracks-fullstack/hyracks/hyracks-http/src/main/java/org/apache/hyracks/http/server/HttpServer.java",
                "changes": 6,
                "contents_url": "https://api.github.com/repos/apache/asterixdb/contents/hyracks-fullstack/hyracks/hyracks-http/src/main/java/org/apache/hyracks/http/server/HttpServer.java?ref=4eaaff59f6ff53bd6a4adbe0127b7127cbbdd7d4",
                "deletions": 2,
                "filename": "hyracks-fullstack/hyracks/hyracks-http/src/main/java/org/apache/hyracks/http/server/HttpServer.java",
                "patch": "@@ -333,8 +333,10 @@ protected void doStop() throws InterruptedException {\n         } catch (Exception e) {\n             LOGGER.log(Level.ERROR, \"Error while shutting down http server executor\", e);\n         }\n-        channel.close();\n-        channel.closeFuture().sync();\n+        if (channel != null) {\n+            channel.close();\n+            channel.closeFuture().sync();\n+        }\n     }\n \n     public IServlet getServlet(FullHttpRequest request) {",
                "raw_url": "https://github.com/apache/asterixdb/raw/4eaaff59f6ff53bd6a4adbe0127b7127cbbdd7d4/hyracks-fullstack/hyracks/hyracks-http/src/main/java/org/apache/hyracks/http/server/HttpServer.java",
                "sha": "d9902da942921e10e7da92818644bcb17a50104a",
                "status": "modified"
            }
        ],
        "message": "[NO ISSUE][OTH] Ensure HttpServer Channel is Initialized\n\n- user model changes: no\n- storage format changes: no\n- interface changes: no\n\nDetails:\n- Ensure the HttpServer channel is initialized when stopping\n  the server to avoid NPE.\n\nChange-Id: I5b7403e80f6118f99be46d166c6cfbee8d4305ac\nReviewed-on: https://asterix-gerrit.ics.uci.edu/3389\nContrib: Jenkins <jenkins@fulliautomatix.ics.uci.edu>\nTested-by: Jenkins <jenkins@fulliautomatix.ics.uci.edu>\nIntegration-Tests: Jenkins <jenkins@fulliautomatix.ics.uci.edu>\nReviewed-by: Dmitry Lychagin <dmitry.lychagin@couchbase.com>",
        "parent": "https://github.com/apache/asterixdb/commit/a93a5c6fe4f83cef973f5caaa540723c96e29ba2",
        "repo": "asterixdb",
        "unit_tests": [
            "HttpServerTest.java"
        ]
    },
    "asterixdb_89e6a93": {
        "bug_id": "asterixdb_89e6a93",
        "commit": "https://github.com/apache/asterixdb/commit/89e6a93277205a9dbc76c18e249919a745d224d2",
        "file": [
            {
                "additions": 10,
                "blob_url": "https://github.com/apache/asterixdb/blob/89e6a93277205a9dbc76c18e249919a745d224d2/hyracks-fullstack/hyracks/hyracks-storage-am-lsm-btree/src/main/java/org/apache/hyracks/storage/am/lsm/btree/impls/LSMBTreePointSearchCursor.java",
                "changes": 13,
                "contents_url": "https://api.github.com/repos/apache/asterixdb/contents/hyracks-fullstack/hyracks/hyracks-storage-am-lsm-btree/src/main/java/org/apache/hyracks/storage/am/lsm/btree/impls/LSMBTreePointSearchCursor.java?ref=89e6a93277205a9dbc76c18e249919a745d224d2",
                "deletions": 3,
                "filename": "hyracks-fullstack/hyracks/hyracks-storage-am-lsm-btree/src/main/java/org/apache/hyracks/storage/am/lsm/btree/impls/LSMBTreePointSearchCursor.java",
                "patch": "@@ -214,9 +214,7 @@ public void next() throws HyracksDataException {\n     public void close() throws HyracksDataException {\n         if (lsmHarness != null) {\n             try {\n-                for (int i = 0; i < rangeCursors.length; i++) {\n-                    rangeCursors[i].close();\n-                }\n+                closeCursors();\n                 rangeCursors = null;\n             } finally {\n                 lsmHarness.endSearch(opCtx);\n@@ -265,4 +263,13 @@ public boolean isExclusiveLatchNodes() {\n         return false;\n     }\n \n+    private void closeCursors() throws HyracksDataException {\n+        if (rangeCursors != null) {\n+            for (int i = 0; i < rangeCursors.length; ++i) {\n+                if (rangeCursors[i] != null) {\n+                    rangeCursors[i].close();\n+                }\n+            }\n+        }\n+    }\n }",
                "raw_url": "https://github.com/apache/asterixdb/raw/89e6a93277205a9dbc76c18e249919a745d224d2/hyracks-fullstack/hyracks/hyracks-storage-am-lsm-btree/src/main/java/org/apache/hyracks/storage/am/lsm/btree/impls/LSMBTreePointSearchCursor.java",
                "sha": "0f7aa38826cf6e122aaab0193a0f9b91f1e4a0a0",
                "status": "modified"
            }
        ],
        "message": "[ASTERIXDB-2135][IDX] Prevent NPE in LSMBTreePointSearchCursor\n\n- user model changes: no\n- storage format changes: no\n- interface changes: no\n\nDetails:\n- Prevent NPE on LSMBTreePointSearchCursor.close\n\nChange-Id: I062c1200d9c5a1a574a1ccdb32be0ac011406d92\nReviewed-on: https://asterix-gerrit.ics.uci.edu/2081\nSonar-Qube: Jenkins <jenkins@fulliautomatix.ics.uci.edu>\nTested-by: Jenkins <jenkins@fulliautomatix.ics.uci.edu>\nContrib: Jenkins <jenkins@fulliautomatix.ics.uci.edu>\nIntegration-Tests: Jenkins <jenkins@fulliautomatix.ics.uci.edu>\nReviewed-by: Ian Maxon <imaxon@apache.org>",
        "parent": "https://github.com/apache/asterixdb/commit/536c707dc2ffc92a9e2f331b8765697367d9ab3a",
        "repo": "asterixdb",
        "unit_tests": [
            "LSMBTreePointSearchCursorTest.java"
        ]
    },
    "asterixdb_e0d8e50": {
        "bug_id": "asterixdb_e0d8e50",
        "commit": "https://github.com/apache/asterixdb/commit/e0d8e5078f90823e8dd51052317a7da1c08cc9f9",
        "file": [
            {
                "additions": 26,
                "blob_url": "https://github.com/apache/asterixdb/blob/e0d8e5078f90823e8dd51052317a7da1c08cc9f9/asterixdb/asterix-app/src/main/java/org/apache/asterix/app/message/ExecuteStatementRequestMessage.java",
                "changes": 33,
                "contents_url": "https://api.github.com/repos/apache/asterixdb/contents/asterixdb/asterix-app/src/main/java/org/apache/asterix/app/message/ExecuteStatementRequestMessage.java?ref=e0d8e5078f90823e8dd51052317a7da1c08cc9f9",
                "deletions": 7,
                "filename": "asterixdb/asterix-app/src/main/java/org/apache/asterix/app/message/ExecuteStatementRequestMessage.java",
                "patch": "@@ -92,6 +92,11 @@ public void handle(ICcApplicationContext ccAppCtx) throws HyracksDataException,\n         ClusterControllerService ccSrv = (ClusterControllerService) ccSrvContext.getControllerService();\n         CCApplication ccApp = (CCApplication) ccSrv.getApplication();\n         CCMessageBroker messageBroker = (CCMessageBroker) ccSrvContext.getMessageBroker();\n+        final String rejectionReason = getRejectionReason(ccSrv);\n+        if (rejectionReason != null) {\n+            sendRejection(rejectionReason, messageBroker);\n+            return;\n+        }\n         CCExtensionManager ccExtMgr = (CCExtensionManager) ccAppCtx.getExtensionManager();\n         ILangCompilationProvider compilationProvider = ccExtMgr.getCompilationProvider(lang);\n         IStorageComponentProvider storageComponentProvider = ccAppCtx.getStorageComponentProvider();\n@@ -100,16 +105,9 @@ public void handle(ICcApplicationContext ccAppCtx) throws HyracksDataException,\n \n         ccSrv.getExecutor().submit(() -> {\n             ExecuteStatementResponseMessage responseMsg = new ExecuteStatementResponseMessage(requestMessageId);\n-\n             try {\n-                final IClusterManagementWork.ClusterState clusterState = ClusterStateManager.INSTANCE.getState();\n-                if (clusterState != IClusterManagementWork.ClusterState.ACTIVE) {\n-                    throw new IllegalStateException(\"Cannot execute request, cluster is \" + clusterState);\n-                }\n-\n                 IParser parser = compilationProvider.getParserFactory().createParser(statementsText);\n                 List<Statement> statements = parser.parse();\n-\n                 StringWriter outWriter = new StringWriter(256);\n                 PrintWriter outPrinter = new PrintWriter(outWriter);\n                 SessionOutput.ResultDecorator resultPrefix = ResultUtil.createPreResultDecorator();\n@@ -148,6 +146,27 @@ public void handle(ICcApplicationContext ccAppCtx) throws HyracksDataException,\n         });\n     }\n \n+    private String getRejectionReason(ClusterControllerService ccSrv) {\n+        if (ccSrv.getNodeManager().getNodeControllerState(requestNodeId) == null) {\n+            return \"Node is not registerted with the CC\";\n+        }\n+        final IClusterManagementWork.ClusterState clusterState = ClusterStateManager.INSTANCE.getState();\n+        if (clusterState != IClusterManagementWork.ClusterState.ACTIVE) {\n+            return \"Cannot execute request, cluster is \" + clusterState;\n+        }\n+        return null;\n+    }\n+\n+    private void sendRejection(String reason, CCMessageBroker messageBroker) {\n+        ExecuteStatementResponseMessage responseMsg = new ExecuteStatementResponseMessage(requestMessageId);\n+        responseMsg.setError(new Exception(reason));\n+        try {\n+            messageBroker.sendApplicationMessageToNC(responseMsg, requestNodeId);\n+        } catch (Exception e) {\n+            LOGGER.log(Level.WARNING, e.toString(), e);\n+        }\n+    }\n+\n     @Override\n     public String toString() {\n         return String.format(\"%s(id=%s, from=%s): %s\", getClass().getSimpleName(), requestMessageId, requestNodeId,",
                "raw_url": "https://github.com/apache/asterixdb/raw/e0d8e5078f90823e8dd51052317a7da1c08cc9f9/asterixdb/asterix-app/src/main/java/org/apache/asterix/app/message/ExecuteStatementRequestMessage.java",
                "sha": "9faa9e9a09265664248143e1a46b44d76cb2e7fc",
                "status": "modified"
            },
            {
                "additions": 7,
                "blob_url": "https://github.com/apache/asterixdb/blob/e0d8e5078f90823e8dd51052317a7da1c08cc9f9/asterixdb/asterix-app/src/main/java/org/apache/asterix/messaging/CCMessageBroker.java",
                "changes": 8,
                "contents_url": "https://api.github.com/repos/apache/asterixdb/contents/asterixdb/asterix-app/src/main/java/org/apache/asterix/messaging/CCMessageBroker.java?ref=e0d8e5078f90823e8dd51052317a7da1c08cc9f9",
                "deletions": 1,
                "filename": "asterixdb/asterix-app/src/main/java/org/apache/asterix/messaging/CCMessageBroker.java",
                "patch": "@@ -69,7 +69,13 @@ public void receivedMessage(IMessage message, String nodeId) throws Exception {\n     public void sendApplicationMessageToNC(INcAddressedMessage msg, String nodeId) throws Exception {\n         INodeManager nodeManager = ccs.getNodeManager();\n         NodeControllerState state = nodeManager.getNodeControllerState(nodeId);\n-        state.getNodeController().sendApplicationMessageToNC(JavaSerializationUtils.serialize(msg), null, nodeId);\n+        if (state != null) {\n+            state.getNodeController().sendApplicationMessageToNC(JavaSerializationUtils.serialize(msg), null, nodeId);\n+        } else {\n+            if (LOGGER.isLoggable(Level.WARNING)) {\n+                LOGGER.warning(\"Couldn't send message to unregistered node (\" + nodeId + \")\");\n+            }\n+        }\n     }\n \n     @Override",
                "raw_url": "https://github.com/apache/asterixdb/raw/e0d8e5078f90823e8dd51052317a7da1c08cc9f9/asterixdb/asterix-app/src/main/java/org/apache/asterix/messaging/CCMessageBroker.java",
                "sha": "0eade416d072d0927f5b7ddaec045defbf7387e5",
                "status": "modified"
            },
            {
                "additions": 10,
                "blob_url": "https://github.com/apache/asterixdb/blob/e0d8e5078f90823e8dd51052317a7da1c08cc9f9/asterixdb/asterix-common/src/main/java/org/apache/asterix/common/cluster/IClusterStateManager.java",
                "changes": 11,
                "contents_url": "https://api.github.com/repos/apache/asterixdb/contents/asterixdb/asterix-common/src/main/java/org/apache/asterix/common/cluster/IClusterStateManager.java?ref=e0d8e5078f90823e8dd51052317a7da1c08cc9f9",
                "deletions": 1,
                "filename": "asterixdb/asterix-common/src/main/java/org/apache/asterix/common/cluster/IClusterStateManager.java",
                "patch": "@@ -100,11 +100,20 @@ boolean waitForState(ClusterState waitForState, long timeout, TimeUnit unit)\n \n     /**\n      * Register the specified node partitions with the specified nodeId with this cluster state manager\n+     * then calls {@link IClusterStateManager#refreshState()}\n+     *\n+     * @param nodeId\n+     * @param nodePartitions\n+     * @throws AsterixException\n      */\n     void registerNodePartitions(String nodeId, ClusterPartition[] nodePartitions) throws AsterixException;\n \n     /**\n      * De-register the specified node's partitions from this cluster state manager\n+     * then calls {@link IClusterStateManager#refreshState()}\n+     *\n+     * @param nodeId\n+     * @throws HyracksDataException\n      */\n-    void deregisterNodePartitions(String nodeId);\n+    void deregisterNodePartitions(String nodeId) throws HyracksDataException;\n }",
                "raw_url": "https://github.com/apache/asterixdb/raw/e0d8e5078f90823e8dd51052317a7da1c08cc9f9/asterixdb/asterix-common/src/main/java/org/apache/asterix/common/cluster/IClusterStateManager.java",
                "sha": "30675cd631ccbcbca68def98685009d07fd82829",
                "status": "modified"
            },
            {
                "additions": 14,
                "blob_url": "https://github.com/apache/asterixdb/blob/e0d8e5078f90823e8dd51052317a7da1c08cc9f9/asterixdb/asterix-runtime/src/main/java/org/apache/asterix/runtime/utils/ClusterStateManager.java",
                "changes": 15,
                "contents_url": "https://api.github.com/repos/apache/asterixdb/contents/asterixdb/asterix-runtime/src/main/java/org/apache/asterix/runtime/utils/ClusterStateManager.java?ref=e0d8e5078f90823e8dd51052317a7da1c08cc9f9",
                "deletions": 1,
                "filename": "asterixdb/asterix-runtime/src/main/java/org/apache/asterix/runtime/utils/ClusterStateManager.java",
                "patch": "@@ -154,6 +154,12 @@ public synchronized void updateClusterPartition(Integer partitionNum, String act\n     @Override\n     public synchronized void refreshState() throws HyracksDataException {\n         resetClusterPartitionConstraint();\n+        if (clusterPartitions.isEmpty()) {\n+            LOGGER.info(\"Cluster does not have any registered partitions\");\n+            setState(ClusterState.UNUSABLE);\n+            return;\n+        }\n+\n         for (ClusterPartition p : clusterPartitions.values()) {\n             if (!p.isActive()) {\n                 setState(ClusterState.UNUSABLE);\n@@ -368,10 +374,16 @@ public synchronized void registerNodePartitions(String nodeId, ClusterPartition[\n             clusterPartitions.put(nodePartition.getPartitionId(), nodePartition);\n         }\n         node2PartitionsMap.put(nodeId, nodePartitions);\n+        //TODO fix exception propagation from refreshState\n+        try {\n+            refreshState();\n+        } catch (HyracksDataException e) {\n+            throw new AsterixException(e);\n+        }\n     }\n \n     @Override\n-    public synchronized void deregisterNodePartitions(String nodeId) {\n+    public synchronized void deregisterNodePartitions(String nodeId) throws HyracksDataException {\n         ClusterPartition[] nodePartitions = node2PartitionsMap.remove(nodeId);\n         if (nodePartitions == null) {\n             LOGGER.info(\"deregisterNodePartitions unknown node \" + nodeId + \" (already removed?)\");\n@@ -382,6 +394,7 @@ public synchronized void deregisterNodePartitions(String nodeId) {\n             for (ClusterPartition nodePartition : nodePartitions) {\n                 clusterPartitions.remove(nodePartition.getPartitionId());\n             }\n+            refreshState();\n         }\n     }\n ",
                "raw_url": "https://github.com/apache/asterixdb/raw/e0d8e5078f90823e8dd51052317a7da1c08cc9f9/asterixdb/asterix-runtime/src/main/java/org/apache/asterix/runtime/utils/ClusterStateManager.java",
                "sha": "8156a231d3ae1529282964c6f2a2ed10ebe68d4a",
                "status": "modified"
            }
        ],
        "message": "[ASTERIXDB-2019][CLUS] Update cluster state on partitions changes\n\n- user model changes: no\n- storage format changes: no\n- interface changes: no\n\nDetails:\n- Set the cluster to UNUSABLE when no partitions are registered\n- Update cluster state after partitions register/de-register\n- Reject unregistered nodes queries on CC\n- Avoid NPE when trying to send to a node that was de-registered\n\nChange-Id: I7d11733a1dcd86136e157d80517bff4abcfc776b\nReviewed-on: https://asterix-gerrit.ics.uci.edu/1918\nSonar-Qube: Jenkins <jenkins@fulliautomatix.ics.uci.edu>\nTested-by: Jenkins <jenkins@fulliautomatix.ics.uci.edu>\nContrib: Jenkins <jenkins@fulliautomatix.ics.uci.edu>\nIntegration-Tests: Jenkins <jenkins@fulliautomatix.ics.uci.edu>\nReviewed-by: Michael Blow <mblow@apache.org>",
        "parent": "https://github.com/apache/asterixdb/commit/f94f63d3f8e52cdb099cce365b9fb053050969cf",
        "repo": "asterixdb",
        "unit_tests": [
            "ClusterStateManagerTest.java"
        ]
    }
}