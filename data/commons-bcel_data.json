[{"commit": "https://github.com/apache/commons-bcel/commit/78f672a2c6bd6e21a731e982f8e495563280d7d9", "parent": "https://github.com/apache/commons-bcel/commit/45da20f49abafa125ff4f616e8312b89fbd1f139", "message": "[BCEL-297] Possible NPE in override implementation of Object.equals.", "bug_id": "commons-bcel_1", "file": [{"additions": 1, "raw_url": "https://github.com/apache/commons-bcel/raw/78f672a2c6bd6e21a731e982f8e495563280d7d9/src/changes/changes.xml", "blob_url": "https://github.com/apache/commons-bcel/blob/78f672a2c6bd6e21a731e982f8e495563280d7d9/src/changes/changes.xml", "sha": "b7bd9a1001a70bc5e2cd2f05ce6ac9c69a99c470", "changes": 1, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/commons-bcel/contents/src/changes/changes.xml?ref=78f672a2c6bd6e21a731e982f8e495563280d7d9", "patch": "@@ -64,6 +64,7 @@ The <action> type attribute can be add,update,fix,remove.\n   <body>\n     <release version=\"6.4\" date=\"2019-MM-DD\" description=\"TO DO\">\n       <action issue=\"BCEL-267\" type=\"fix\" dev=\"ggregory\" due-to=\"Stephan Herrmann, Sebb, Gary Gregory, Torsten Curdt\">Race conditions on static fields in BranchHandle and InstructionHandle.</action>\n+      <action issue=\"BCEL-297\" type=\"fix\" dev=\"ggregory\" due-to=\"Mark Roberts, mingleizhang\">Possible NPE in override implementation of Object.equals.</action>\n     </release>\n \n     <release version=\"6.3\" date=\"2019-01-23\" description=\"Experimental Java 9, 10, 11, 12-EA, and 13-EA Support\">", "filename": "src/changes/changes.xml"}], "repo": "commons-bcel"}, {"commit": "https://github.com/apache/commons-bcel/commit/45da20f49abafa125ff4f616e8312b89fbd1f139", "parent": "https://github.com/apache/commons-bcel/commit/ed403b6580ed403a814e1c821200f302ffa5805d", "message": "[BCEL-297] Fix NPE in BCELComparator concrete implementations. (#20)", "bug_id": "commons-bcel_2", "file": [{"additions": 2, "raw_url": "https://github.com/apache/commons-bcel/raw/45da20f49abafa125ff4f616e8312b89fbd1f139/src/main/java/org/apache/bcel/classfile/Constant.java", "blob_url": "https://github.com/apache/commons-bcel/blob/45da20f49abafa125ff4f616e8312b89fbd1f139/src/main/java/org/apache/bcel/classfile/Constant.java", "sha": "a352fe06f8f7d68e194cf78e16671063d32c4782", "changes": 3, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/commons-bcel/contents/src/main/java/org/apache/bcel/classfile/Constant.java?ref=45da20f49abafa125ff4f616e8312b89fbd1f139", "patch": "@@ -20,6 +20,7 @@\n import java.io.DataInput;\n import java.io.DataOutputStream;\n import java.io.IOException;\n+import java.util.Objects;\n \n import org.apache.bcel.Const;\n import org.apache.bcel.util.BCELComparator;\n@@ -39,7 +40,7 @@\n         public boolean equals( final Object o1, final Object o2 ) {\n             final Constant THIS = (Constant) o1;\n             final Constant THAT = (Constant) o2;\n-            return THIS.toString().equals(THAT.toString());\n+            return Objects.equals(THIS.toString(), THAT.toString());\n         }\n \n ", "filename": "src/main/java/org/apache/bcel/classfile/Constant.java"}, {"additions": 3, "raw_url": "https://github.com/apache/commons-bcel/raw/45da20f49abafa125ff4f616e8312b89fbd1f139/src/main/java/org/apache/bcel/classfile/Field.java", "blob_url": "https://github.com/apache/commons-bcel/blob/45da20f49abafa125ff4f616e8312b89fbd1f139/src/main/java/org/apache/bcel/classfile/Field.java", "sha": "ebdea958fcdd58dd1243191b6506be56092ba0c3", "changes": 5, "status": "modified", "deletions": 2, "contents_url": "https://api.github.com/repos/apache/commons-bcel/contents/src/main/java/org/apache/bcel/classfile/Field.java?ref=45da20f49abafa125ff4f616e8312b89fbd1f139", "patch": "@@ -19,6 +19,7 @@\n \n import java.io.DataInput;\n import java.io.IOException;\n+import java.util.Objects;\n \n import org.apache.bcel.Const;\n import org.apache.bcel.generic.Type;\n@@ -38,8 +39,8 @@\n         public boolean equals( final Object o1, final Object o2 ) {\n             final Field THIS = (Field) o1;\n             final Field THAT = (Field) o2;\n-            return THIS.getName().equals(THAT.getName())\n-                    && THIS.getSignature().equals(THAT.getSignature());\n+            return Objects.equals(THIS.getName(), THAT.getName())\n+                    && Objects.equals(THIS.getSignature(), THAT.getSignature());\n         }\n \n ", "filename": "src/main/java/org/apache/bcel/classfile/Field.java"}, {"additions": 3, "raw_url": "https://github.com/apache/commons-bcel/raw/45da20f49abafa125ff4f616e8312b89fbd1f139/src/main/java/org/apache/bcel/classfile/JavaClass.java", "blob_url": "https://github.com/apache/commons-bcel/blob/45da20f49abafa125ff4f616e8312b89fbd1f139/src/main/java/org/apache/bcel/classfile/JavaClass.java", "sha": "be18dbe7ab4ea0e079be4aaf12b17668aeb515e6", "changes": 5, "status": "modified", "deletions": 2, "contents_url": "https://api.github.com/repos/apache/commons-bcel/contents/src/main/java/org/apache/bcel/classfile/JavaClass.java?ref=45da20f49abafa125ff4f616e8312b89fbd1f139", "patch": "@@ -24,9 +24,10 @@\n import java.io.IOException;\n import java.io.OutputStream;\n import java.util.ArrayList;\n+import java.util.Objects;\n+import java.util.StringTokenizer;\n import java.util.List;\n import java.util.Set;\n-import java.util.StringTokenizer;\n import java.util.TreeSet;\n \n import org.apache.bcel.Const;\n@@ -79,7 +80,7 @@\n         public boolean equals( final Object o1, final Object o2 ) {\n             final JavaClass THIS = (JavaClass) o1;\n             final JavaClass THAT = (JavaClass) o2;\n-            return THIS.getClassName().equals(THAT.getClassName());\n+            return Objects.equals(THIS.getClassName(), THAT.getClassName());\n         }\n \n ", "filename": "src/main/java/org/apache/bcel/classfile/JavaClass.java"}, {"additions": 3, "raw_url": "https://github.com/apache/commons-bcel/raw/45da20f49abafa125ff4f616e8312b89fbd1f139/src/main/java/org/apache/bcel/classfile/Method.java", "blob_url": "https://github.com/apache/commons-bcel/blob/45da20f49abafa125ff4f616e8312b89fbd1f139/src/main/java/org/apache/bcel/classfile/Method.java", "sha": "e19522c0a3863b0155ed258799551b9d32c62407", "changes": 5, "status": "modified", "deletions": 2, "contents_url": "https://api.github.com/repos/apache/commons-bcel/contents/src/main/java/org/apache/bcel/classfile/Method.java?ref=45da20f49abafa125ff4f616e8312b89fbd1f139", "patch": "@@ -19,6 +19,7 @@\n \n import java.io.DataInput;\n import java.io.IOException;\n+import java.util.Objects;\n \n import org.apache.bcel.Const;\n import org.apache.bcel.generic.Type;\n@@ -39,8 +40,8 @@\n         public boolean equals( final Object o1, final Object o2 ) {\n             final Method THIS = (Method) o1;\n             final Method THAT = (Method) o2;\n-            return THIS.getName().equals(THAT.getName())\n-                    && THIS.getSignature().equals(THAT.getSignature());\n+            return Objects.equals(THIS.getName(), THAT.getName())\n+                    && Objects.equals(THIS.getSignature(), THAT.getSignature());\n         }\n \n ", "filename": "src/main/java/org/apache/bcel/classfile/Method.java"}, {"additions": 2, "raw_url": "https://github.com/apache/commons-bcel/raw/45da20f49abafa125ff4f616e8312b89fbd1f139/src/main/java/org/apache/bcel/generic/ClassGen.java", "blob_url": "https://github.com/apache/commons-bcel/blob/45da20f49abafa125ff4f616e8312b89fbd1f139/src/main/java/org/apache/bcel/generic/ClassGen.java", "sha": "5fad2d3d8f9f1a7a92f7973ff9536160b7524036", "changes": 3, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/commons-bcel/contents/src/main/java/org/apache/bcel/generic/ClassGen.java?ref=45da20f49abafa125ff4f616e8312b89fbd1f139", "patch": "@@ -19,6 +19,7 @@\n \n import java.util.ArrayList;\n import java.util.List;\n+import java.util.Objects;\n \n import org.apache.bcel.Const;\n import org.apache.bcel.classfile.AccessFlags;\n@@ -66,7 +67,7 @@\n         public boolean equals( final Object o1, final Object o2 ) {\n             final ClassGen THIS = (ClassGen) o1;\n             final ClassGen THAT = (ClassGen) o2;\n-            return THIS.getClassName().equals(THAT.getClassName());\n+            return Objects.equals(THIS.getClassName(), THAT.getClassName());\n         }\n \n ", "filename": "src/main/java/org/apache/bcel/generic/ClassGen.java"}, {"additions": 3, "raw_url": "https://github.com/apache/commons-bcel/raw/45da20f49abafa125ff4f616e8312b89fbd1f139/src/main/java/org/apache/bcel/generic/FieldGen.java", "blob_url": "https://github.com/apache/commons-bcel/blob/45da20f49abafa125ff4f616e8312b89fbd1f139/src/main/java/org/apache/bcel/generic/FieldGen.java", "sha": "4ddf44a47138f68562cb7051d66d246da5ac4740", "changes": 5, "status": "modified", "deletions": 2, "contents_url": "https://api.github.com/repos/apache/commons-bcel/contents/src/main/java/org/apache/bcel/generic/FieldGen.java?ref=45da20f49abafa125ff4f616e8312b89fbd1f139", "patch": "@@ -19,6 +19,7 @@\n \n import java.util.ArrayList;\n import java.util.List;\n+import java.util.Objects;\n \n import org.apache.bcel.Const;\n import org.apache.bcel.classfile.AnnotationEntry;\n@@ -49,8 +50,8 @@\n         public boolean equals( final Object o1, final Object o2 ) {\n             final FieldGen THIS = (FieldGen) o1;\n             final FieldGen THAT = (FieldGen) o2;\n-            return THIS.getName().equals(THAT.getName())\n-                    && THIS.getSignature().equals(THAT.getSignature());\n+            return Objects.equals(THIS.getName(), THAT.getName())\n+                    && Objects.equals(THIS.getSignature(), THAT.getSignature());\n         }\n \n ", "filename": "src/main/java/org/apache/bcel/generic/FieldGen.java"}, {"additions": 6, "raw_url": "https://github.com/apache/commons-bcel/raw/45da20f49abafa125ff4f616e8312b89fbd1f139/src/main/java/org/apache/bcel/generic/MethodGen.java", "blob_url": "https://github.com/apache/commons-bcel/blob/45da20f49abafa125ff4f616e8312b89fbd1f139/src/main/java/org/apache/bcel/generic/MethodGen.java", "sha": "e497d347dfba59a29c0639718ca928085cc9e425", "changes": 11, "status": "modified", "deletions": 5, "contents_url": "https://api.github.com/repos/apache/commons-bcel/contents/src/main/java/org/apache/bcel/generic/MethodGen.java?ref=45da20f49abafa125ff4f616e8312b89fbd1f139", "patch": "@@ -18,11 +18,12 @@\n package org.apache.bcel.generic;\n \n import java.util.ArrayList;\n-import java.util.Arrays;\n-import java.util.Comparator;\n-import java.util.Hashtable;\n+import java.util.Objects;\n import java.util.List;\n import java.util.Stack;\n+import java.util.Hashtable;\n+import java.util.Arrays;\n+import java.util.Comparator;\n \n import org.apache.bcel.Const;\n import org.apache.bcel.classfile.AnnotationEntry;\n@@ -83,8 +84,8 @@\n         public boolean equals( final Object o1, final Object o2 ) {\n             final MethodGen THIS = (MethodGen) o1;\n             final MethodGen THAT = (MethodGen) o2;\n-            return THIS.getName().equals(THAT.getName())\n-                    && THIS.getSignature().equals(THAT.getSignature());\n+            return Objects.equals(THIS.getName(), THAT.getName())\n+                    && Objects.equals(THIS.getSignature(), THAT.getSignature());\n         }\n \n ", "filename": "src/main/java/org/apache/bcel/generic/MethodGen.java"}], "repo": "commons-bcel"}, {"commit": "https://github.com/apache/commons-bcel/commit/f8e618138c6ba4af63638df26b6308004076af82", "parent": "https://github.com/apache/commons-bcel/commit/28f4f17258aeaf9426cd1230b16c6445eae588ab", "message": "Clirr Plugin 2.7 fails with NPE\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/bcel/trunk@1746731 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "commons-bcel_3", "file": [{"additions": 2, "raw_url": "https://github.com/apache/commons-bcel/raw/f8e618138c6ba4af63638df26b6308004076af82/pom.xml", "blob_url": "https://github.com/apache/commons-bcel/blob/f8e618138c6ba4af63638df26b6308004076af82/pom.xml", "sha": "73ad79b9d8e02d8ca054c1fe09dfcf73b7b990e0", "changes": 2, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/commons-bcel/contents/pom.xml?ref=f8e618138c6ba4af63638df26b6308004076af82", "patch": "@@ -57,6 +57,8 @@\n     <commons.jira.pid>12314220</commons.jira.pid>\n     <commons.findbugs.version>3.0.3</commons.findbugs.version>\n     <checkstyle.plugin.version>2.17</checkstyle.plugin.version>\n+    <!-- Latest Clirr Plugin version (2.7) causes NPE -->\n+    <commons.clirr.version>2.6.1</commons.clirr.version>\n   </properties>\n \n   <!-- Cannot be added to Commons Parent, see https://issues.apache.org/jira/browse/COMMONSSITE-26 -->", "filename": "pom.xml"}], "repo": "commons-bcel"}, {"commit": "https://github.com/apache/commons-bcel/commit/f53ac2222d10c1f749a616919f6bcc383f599cec", "parent": "https://github.com/apache/commons-bcel/commit/6e08c112527e45080ff99c6bb1ae4bd2165d292a", "message": "Avoid NPE\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/bcel/trunk@1702427 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "commons-bcel_4", "file": [{"additions": 1, "raw_url": "https://github.com/apache/commons-bcel/raw/f53ac2222d10c1f749a616919f6bcc383f599cec/src/main/java/org/apache/commons/bcel6/classfile/FieldOrMethod.java", "blob_url": "https://github.com/apache/commons-bcel/blob/f53ac2222d10c1f749a616919f6bcc383f599cec/src/main/java/org/apache/commons/bcel6/classfile/FieldOrMethod.java", "sha": "6b84a3638b1dc701a3bb33597df905f2cf0bc23e", "changes": 2, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/commons-bcel/contents/src/main/java/org/apache/commons/bcel6/classfile/FieldOrMethod.java?ref=f53ac2222d10c1f749a616919f6bcc383f599cec", "patch": "@@ -158,7 +158,7 @@ public final void dump( DataOutputStream file ) throws IOException {\n      */\n     public final void setAttributes( Attribute[] attributes ) {\n         this.attributes = attributes;\n-        this.attributes_count = attributes.length; // init deprecated field\n+        this.attributes_count = attributes != null ? attributes.length : 0; // init deprecated field\n     }\n \n ", "filename": "src/main/java/org/apache/commons/bcel6/classfile/FieldOrMethod.java"}], "repo": "commons-bcel"}, {"commit": "https://github.com/apache/commons-bcel/commit/2dfed781d14c801f9856fd5ad570d3d53ad3dfcb", "parent": "https://github.com/apache/commons-bcel/commit/4ad705443258be2483cde74ca49033a9a2b93924", "message": "avoid possible NPEs in toStrings, and simplify\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/bcel/trunk@1697270 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "commons-bcel_5", "file": [{"additions": 1, "raw_url": "https://github.com/apache/commons-bcel/raw/2dfed781d14c801f9856fd5ad570d3d53ad3dfcb/src/main/java/org/apache/commons/bcel6/classfile/ArrayElementValue.java", "blob_url": "https://github.com/apache/commons-bcel/blob/2dfed781d14c801f9856fd5ad570d3d53ad3dfcb/src/main/java/org/apache/commons/bcel6/classfile/ArrayElementValue.java", "sha": "1f45d664fab2c945ad1960f14f2dd01e02080fb0", "changes": 2, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/commons-bcel/contents/src/main/java/org/apache/commons/bcel6/classfile/ArrayElementValue.java?ref=2dfed781d14c801f9856fd5ad570d3d53ad3dfcb", "patch": "@@ -35,7 +35,7 @@ public String toString()\n         sb.append(\"{\");\n         for (int i = 0; i < evalues.length; i++)\n         {\n-            sb.append(evalues[i].toString());\n+            sb.append(evalues[i]);\n             if ((i + 1) < evalues.length) {\n                 sb.append(\",\");\n             }", "filename": "src/main/java/org/apache/commons/bcel6/classfile/ArrayElementValue.java"}, {"additions": 1, "raw_url": "https://github.com/apache/commons-bcel/raw/2dfed781d14c801f9856fd5ad570d3d53ad3dfcb/src/main/java/org/apache/commons/bcel6/classfile/Code.java", "blob_url": "https://github.com/apache/commons-bcel/blob/2dfed781d14c801f9856fd5ad570d3d53ad3dfcb/src/main/java/org/apache/commons/bcel6/classfile/Code.java", "sha": "cfaca56e4c1ccba3c4ad9016b2b2772d2009bbd1", "changes": 2, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/commons-bcel/contents/src/main/java/org/apache/commons/bcel6/classfile/Code.java?ref=2dfed781d14c801f9856fd5ad570d3d53ad3dfcb", "patch": "@@ -313,7 +313,7 @@ public final String toString( boolean verbose ) {\n         if (attributes.length > 0) {\n             buf.append(\"\\nAttribute(s) = \");\n             for (Attribute attribute : attributes) {\n-                buf.append(\"\\n\").append(attribute.toString());\n+                buf.append(\"\\n\").append(attribute);\n             }\n         }\n         return buf.toString();", "filename": "src/main/java/org/apache/commons/bcel6/classfile/Code.java"}, {"additions": 1, "raw_url": "https://github.com/apache/commons-bcel/raw/2dfed781d14c801f9856fd5ad570d3d53ad3dfcb/src/main/java/org/apache/commons/bcel6/classfile/Field.java", "blob_url": "https://github.com/apache/commons-bcel/blob/2dfed781d14c801f9856fd5ad570d3d53ad3dfcb/src/main/java/org/apache/commons/bcel6/classfile/Field.java", "sha": "668301d8058b7eb50151b18708d92d06478f1cf6", "changes": 2, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/commons-bcel/contents/src/main/java/org/apache/commons/bcel6/classfile/Field.java?ref=2dfed781d14c801f9856fd5ad570d3d53ad3dfcb", "patch": "@@ -134,7 +134,7 @@ public final String toString() {\n         }\n         for (Attribute attribute : super.getAttributes()) {\n             if (!(attribute instanceof ConstantValue)) {\n-                buf.append(\" [\").append(attribute.toString()).append(\"]\");\n+                buf.append(\" [\").append(attribute).append(\"]\");\n             }\n         }\n         return buf.toString();", "filename": "src/main/java/org/apache/commons/bcel6/classfile/Field.java"}, {"additions": 1, "raw_url": "https://github.com/apache/commons-bcel/raw/2dfed781d14c801f9856fd5ad570d3d53ad3dfcb/src/main/java/org/apache/commons/bcel6/classfile/LineNumberTable.java", "blob_url": "https://github.com/apache/commons-bcel/blob/2dfed781d14c801f9856fd5ad570d3d53ad3dfcb/src/main/java/org/apache/commons/bcel6/classfile/LineNumberTable.java", "sha": "bb475e12365f21f1946206dab66c1fd63038aa0d", "changes": 2, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/commons-bcel/contents/src/main/java/org/apache/commons/bcel6/classfile/LineNumberTable.java?ref=2dfed781d14c801f9856fd5ad570d3d53ad3dfcb", "patch": "@@ -139,7 +139,7 @@ public final String toString() {\n             }\n             if ((line.length() > MAX_LINE_LENGTH) && (i < line_number_table.length - 1)) {\n                 line.append(newLine);\n-                buf.append(line.toString());\n+                buf.append(line);\n                 line.setLength(0);\n             }\n         }", "filename": "src/main/java/org/apache/commons/bcel6/classfile/LineNumberTable.java"}, {"additions": 1, "raw_url": "https://github.com/apache/commons-bcel/raw/2dfed781d14c801f9856fd5ad570d3d53ad3dfcb/src/main/java/org/apache/commons/bcel6/classfile/LocalVariableTable.java", "blob_url": "https://github.com/apache/commons-bcel/blob/2dfed781d14c801f9856fd5ad570d3d53ad3dfcb/src/main/java/org/apache/commons/bcel6/classfile/LocalVariableTable.java", "sha": "35fd3e0895c63341a83c1eb61819a21e33b39e83", "changes": 2, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/commons-bcel/contents/src/main/java/org/apache/commons/bcel6/classfile/LocalVariableTable.java?ref=2dfed781d14c801f9856fd5ad570d3d53ad3dfcb", "patch": "@@ -147,7 +147,7 @@ public final void setLocalVariableTable( LocalVariable[] local_variable_table )\n     public final String toString() {\n         StringBuilder buf = new StringBuilder();\n         for (int i = 0; i < local_variable_table.length; i++) {\n-            buf.append(local_variable_table[i].toString());\n+            buf.append(local_variable_table[i]);\n             if (i < local_variable_table.length - 1) {\n                 buf.append('\\n');\n             }", "filename": "src/main/java/org/apache/commons/bcel6/classfile/LocalVariableTable.java"}, {"additions": 1, "raw_url": "https://github.com/apache/commons-bcel/raw/2dfed781d14c801f9856fd5ad570d3d53ad3dfcb/src/main/java/org/apache/commons/bcel6/classfile/Method.java", "blob_url": "https://github.com/apache/commons-bcel/blob/2dfed781d14c801f9856fd5ad570d3d53ad3dfcb/src/main/java/org/apache/commons/bcel6/classfile/Method.java", "sha": "f3f214bad27c45873871840f31cf59f073179c1f", "changes": 2, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/commons-bcel/contents/src/main/java/org/apache/commons/bcel6/classfile/Method.java?ref=2dfed781d14c801f9856fd5ad570d3d53ad3dfcb", "patch": "@@ -179,7 +179,7 @@ public final String toString() {\n         StringBuilder buf = new StringBuilder(signature);\n         for (Attribute attribute : super.getAttributes()) {\n             if (!((attribute instanceof Code) || (attribute instanceof ExceptionTable))) {\n-                buf.append(\" [\").append(attribute.toString()).append(\"]\");\n+                buf.append(\" [\").append(attribute).append(\"]\");\n             }\n         }\n         ExceptionTable e = getExceptionTable();", "filename": "src/main/java/org/apache/commons/bcel6/classfile/Method.java"}, {"additions": 1, "raw_url": "https://github.com/apache/commons-bcel/raw/2dfed781d14c801f9856fd5ad570d3d53ad3dfcb/src/main/java/org/apache/commons/bcel6/classfile/StackMap.java", "blob_url": "https://github.com/apache/commons-bcel/blob/2dfed781d14c801f9856fd5ad570d3d53ad3dfcb/src/main/java/org/apache/commons/bcel6/classfile/StackMap.java", "sha": "8164fb9f713e21ca20cbbd039eb3b896783addf8", "changes": 2, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/commons-bcel/contents/src/main/java/org/apache/commons/bcel6/classfile/StackMap.java?ref=2dfed781d14c801f9856fd5ad570d3d53ad3dfcb", "patch": "@@ -117,7 +117,7 @@ public final void setStackMap( StackMapEntry[] map ) {\n     public final String toString() {\n         StringBuilder buf = new StringBuilder(\"StackMap(\");\n         for (int i = 0; i < map.length; i++) {\n-            buf.append(map[i].toString());\n+            buf.append(map[i]);\n             if (i < map.length - 1) {\n                 buf.append(\", \");\n             }", "filename": "src/main/java/org/apache/commons/bcel6/classfile/StackMap.java"}, {"additions": 1, "raw_url": "https://github.com/apache/commons-bcel/raw/2dfed781d14c801f9856fd5ad570d3d53ad3dfcb/src/main/java/org/apache/commons/bcel6/classfile/Utility.java", "blob_url": "https://github.com/apache/commons-bcel/blob/2dfed781d14c801f9856fd5ad570d3d53ad3dfcb/src/main/java/org/apache/commons/bcel6/classfile/Utility.java", "sha": "3792ddffc94d44e91a10ca3074c96b073f8fe6d9", "changes": 2, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/commons-bcel/contents/src/main/java/org/apache/commons/bcel6/classfile/Utility.java?ref=2dfed781d14c801f9856fd5ad570d3d53ad3dfcb", "patch": "@@ -1223,7 +1223,7 @@ public static String printArray( Object[] obj, boolean braces, boolean quote ) {\n         }\n         for (int i = 0; i < obj.length; i++) {\n             if (obj[i] != null) {\n-                buf.append(quote ? \"\\\"\" : \"\").append(obj[i].toString()).append(quote ? \"\\\"\" : \"\");\n+                buf.append(quote ? \"\\\"\" : \"\").append(obj[i]).append(quote ? \"\\\"\" : \"\");\n             } else {\n                 buf.append(\"null\");\n             }", "filename": "src/main/java/org/apache/commons/bcel6/classfile/Utility.java"}, {"additions": 1, "raw_url": "https://github.com/apache/commons-bcel/raw/2dfed781d14c801f9856fd5ad570d3d53ad3dfcb/src/main/java/org/apache/commons/bcel6/generic/MethodGen.java", "blob_url": "https://github.com/apache/commons-bcel/blob/2dfed781d14c801f9856fd5ad570d3d53ad3dfcb/src/main/java/org/apache/commons/bcel6/generic/MethodGen.java", "sha": "5f2a135a098a9f84acaa182e08d8a1ff690c17dd", "changes": 2, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/commons-bcel/contents/src/main/java/org/apache/commons/bcel6/generic/MethodGen.java?ref=2dfed781d14c801f9856fd5ad570d3d53ad3dfcb", "patch": "@@ -1038,7 +1038,7 @@ public final String toString() {\n         for (int i = 0; i < getAttributes().length; i++) {\n             Attribute a = getAttributes()[i];\n             if (!((a instanceof Code) || (a instanceof ExceptionTable))) {\n-                buf.append(\" [\").append(a.toString()).append(\"]\");\n+                buf.append(\" [\").append(a).append(\"]\");\n             }\n         }\n ", "filename": "src/main/java/org/apache/commons/bcel6/generic/MethodGen.java"}, {"additions": 1, "raw_url": "https://github.com/apache/commons-bcel/raw/2dfed781d14c801f9856fd5ad570d3d53ad3dfcb/src/main/java/org/apache/commons/bcel6/generic/PUSH.java", "blob_url": "https://github.com/apache/commons-bcel/blob/2dfed781d14c801f9856fd5ad570d3d53ad3dfcb/src/main/java/org/apache/commons/bcel6/generic/PUSH.java", "sha": "9317b77a23b8f77f1cdea50b53771f2d1f8ac789", "changes": 2, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/commons-bcel/contents/src/main/java/org/apache/commons/bcel6/generic/PUSH.java?ref=2dfed781d14c801f9856fd5ad570d3d53ad3dfcb", "patch": "@@ -187,6 +187,6 @@ public final Instruction getInstruction() {\n      */\n     @Override\n     public String toString() {\n-        return instruction.toString() + \" (PUSH)\";\n+        return instruction + \" (PUSH)\";\n     }\n }", "filename": "src/main/java/org/apache/commons/bcel6/generic/PUSH.java"}, {"additions": 1, "raw_url": "https://github.com/apache/commons-bcel/raw/2dfed781d14c801f9856fd5ad570d3d53ad3dfcb/src/main/java/org/apache/commons/bcel6/util/ClassPath.java", "blob_url": "https://github.com/apache/commons-bcel/blob/2dfed781d14c801f9856fd5ad570d3d53ad3dfcb/src/main/java/org/apache/commons/bcel6/util/ClassPath.java", "sha": "cbfc25cee46bee0fc405c6a4c526f8eeeec97924", "changes": 2, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/commons-bcel/contents/src/main/java/org/apache/commons/bcel6/util/ClassPath.java?ref=2dfed781d14c801f9856fd5ad570d3d53ad3dfcb", "patch": "@@ -98,7 +98,7 @@ public ClassPath(String class_path) {\n     @Override\n     public String toString() {\n         if (parent != null) {\n-            return parent.toString() + File.pathSeparator + class_path;\n+            return parent + File.pathSeparator + class_path;\n         }\n         return class_path;\n     }", "filename": "src/main/java/org/apache/commons/bcel6/util/ClassPath.java"}], "repo": "commons-bcel"}, {"commit": "https://github.com/apache/commons-bcel/commit/670048bfa4d805a681f49a7f9b8c32b46ef8d031", "parent": "https://github.com/apache/commons-bcel/commit/2b145ec96042357afb3be123a4880680e7f816cf", "message": "Fixed the NPE induced by r1663628\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/bcel/trunk@1663742 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "commons-bcel_6", "file": [{"additions": 8, "raw_url": "https://github.com/apache/commons-bcel/raw/670048bfa4d805a681f49a7f9b8c32b46ef8d031/src/main/java/org/apache/bcel/classfile/Code.java", "blob_url": "https://github.com/apache/commons-bcel/blob/670048bfa4d805a681f49a7f9b8c32b46ef8d031/src/main/java/org/apache/bcel/classfile/Code.java", "sha": "d257acb5056ac16a37be95f838f197cba153d430", "changes": 14, "status": "modified", "deletions": 6, "contents_url": "https://api.github.com/repos/apache/commons-bcel/contents/src/main/java/org/apache/bcel/classfile/Code.java?ref=670048bfa4d805a681f49a7f9b8c32b46ef8d031", "patch": "@@ -233,7 +233,7 @@ private int getInternalLength() {\n         return 2 /*max_stack*/+ 2 /*max_locals*/+ 4 /*code length*/\n                 + code.length /*byte-code*/\n                 + 2 /*exception-table length*/\n-                + 8 * exception_table.length /* exception table */\n+                + 8 * (exception_table == null ? 0 : exception_table.length) /* exception table */\n                 + 2 /* attributes count */;\n     }\n \n@@ -244,8 +244,10 @@ private int getInternalLength() {\n      */\n     private int calculateLength() {\n         int len = 0;\n-        for (Attribute attribute : attributes) {\n-            len += attribute.length + 6 /*attribute header size*/;\n+        if (attributes != null) {\n+            for (Attribute attribute : attributes) {\n+                len += attribute.length + 6 /*attribute header size*/;\n+            }\n         }\n         return len + getInternalLength();\n     }\n@@ -255,7 +257,7 @@ private int calculateLength() {\n      * @param attributes the attributes to set for this Code\n      */\n     public final void setAttributes( Attribute[] attributes ) {\n-        this.attributes = attributes;\n+        this.attributes = attributes != null ? attributes : new Attribute[0];\n         length = calculateLength(); // Adjust length\n     }\n \n@@ -264,7 +266,7 @@ public final void setAttributes( Attribute[] attributes ) {\n      * @param code byte code\n      */\n     public final void setCode( byte[] code ) {\n-        this.code = code;\n+        this.code = code != null ? code : new byte[0];\n         length = calculateLength(); // Adjust length\n     }\n \n@@ -273,7 +275,7 @@ public final void setCode( byte[] code ) {\n      * @param exception_table exception table\n      */\n     public final void setExceptionTable( CodeException[] exception_table ) {\n-        this.exception_table = exception_table;\n+        this.exception_table = exception_table != null ? exception_table : new CodeException[0];\n         length = calculateLength(); // Adjust length\n     }\n ", "filename": "src/main/java/org/apache/bcel/classfile/Code.java"}], "repo": "commons-bcel"}, {"commit": "https://github.com/apache/commons-bcel/commit/dd045109ff40c502a157c03dbc6acef3b5400de2", "parent": "https://github.com/apache/commons-bcel/commit/c343ccf297a93d47fc936a639de4e0e56e47fcf4", "message": "simplify and avoid NPEs\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/bcel/trunk@1532202 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "commons-bcel_7", "file": [{"additions": 1, "raw_url": "https://github.com/apache/commons-bcel/raw/dd045109ff40c502a157c03dbc6acef3b5400de2/src/main/java/org/apache/bcel/util/AttributeHTML.java", "blob_url": "https://github.com/apache/commons-bcel/blob/dd045109ff40c502a157c03dbc6acef3b5400de2/src/main/java/org/apache/bcel/util/AttributeHTML.java", "sha": "06781601279e2a6bbd64c0641145f7175e2d567e", "changes": 2, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/commons-bcel/contents/src/main/java/org/apache/bcel/util/AttributeHTML.java?ref=dd045109ff40c502a157c03dbc6acef3b5400de2", "patch": "@@ -203,7 +203,7 @@ final void writeAttribute( Attribute attribute, String anchor, int method_number\n                 file.print(\"</UL>\\n\");\n                 break;\n             default: // Such as Unknown attribute or Deprecated\n-                file.print(\"<P>\" + attribute.toString());\n+                file.print(\"<P>\" + attribute);\n         }\n         file.println(\"</TD></TR>\");\n         file.flush();", "filename": "src/main/java/org/apache/bcel/util/AttributeHTML.java"}, {"additions": 1, "raw_url": "https://github.com/apache/commons-bcel/raw/dd045109ff40c502a157c03dbc6acef3b5400de2/src/main/java/org/apache/bcel/util/ClassLoaderRepository.java", "blob_url": "https://github.com/apache/commons-bcel/blob/dd045109ff40c502a157c03dbc6acef3b5400de2/src/main/java/org/apache/bcel/util/ClassLoaderRepository.java", "sha": "ecc98b151387aac46d8a6dfe7c97a71ca4805767", "changes": 2, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/commons-bcel/contents/src/main/java/org/apache/bcel/util/ClassLoaderRepository.java?ref=dd045109ff40c502a157c03dbc6acef3b5400de2", "patch": "@@ -97,7 +97,7 @@ public JavaClass loadClass( String className ) throws ClassNotFoundException {\n             storeClass(RC);\n             return RC;\n         } catch (IOException e) {\n-            throw new ClassNotFoundException(className + \" not found: \" + e.toString(), e);\n+            throw new ClassNotFoundException(className + \" not found: \" + e, e);\n         }\n     }\n ", "filename": "src/main/java/org/apache/bcel/util/ClassLoaderRepository.java"}, {"additions": 2, "raw_url": "https://github.com/apache/commons-bcel/raw/dd045109ff40c502a157c03dbc6acef3b5400de2/src/main/java/org/apache/bcel/util/SyntheticRepository.java", "blob_url": "https://github.com/apache/commons-bcel/blob/dd045109ff40c502a157c03dbc6acef3b5400de2/src/main/java/org/apache/bcel/util/SyntheticRepository.java", "sha": "a59b6bce2f966dd8c97e6c65fb2e4efb55996448", "changes": 4, "status": "modified", "deletions": 2, "contents_url": "https://api.github.com/repos/apache/commons-bcel/contents/src/main/java/org/apache/bcel/util/SyntheticRepository.java?ref=dd045109ff40c502a157c03dbc6acef3b5400de2", "patch": "@@ -123,7 +123,7 @@ public JavaClass loadClass( String className ) throws ClassNotFoundException {\n             return loadClass(_path.getInputStream(className), className);\n         } catch (IOException e) {\n             throw new ClassNotFoundException(\"Exception while looking for class \" + className\n-                    + \": \" + e.toString(), e);\n+                    + \": \" + e, e);\n         }\n     }\n \n@@ -178,7 +178,7 @@ private JavaClass loadClass( InputStream is, String className ) throws ClassNotF\n             }\n         } catch (IOException e) {\n             throw new ClassNotFoundException(\"Exception while looking for class \" + className\n-                    + \": \" + e.toString(), e);\n+                    + \": \" + e, e);\n         } finally {\n             if (is != null){\n                 try {", "filename": "src/main/java/org/apache/bcel/util/SyntheticRepository.java"}, {"additions": 8, "raw_url": "https://github.com/apache/commons-bcel/raw/dd045109ff40c502a157c03dbc6acef3b5400de2/src/main/java/org/apache/bcel/verifier/statics/Pass2Verifier.java", "blob_url": "https://github.com/apache/commons-bcel/blob/dd045109ff40c502a157c03dbc6acef3b5400de2/src/main/java/org/apache/bcel/verifier/statics/Pass2Verifier.java", "sha": "ec6e5a3138b885880d84f861522f5c5d8d1fab6d", "changes": 16, "status": "modified", "deletions": 8, "contents_url": "https://api.github.com/repos/apache/commons-bcel/contents/src/main/java/org/apache/bcel/verifier/statics/Pass2Verifier.java?ref=dd045109ff40c502a157c03dbc6acef3b5400de2", "patch": "@@ -172,7 +172,7 @@ public VerificationResult do_verify(){\n \n \t    } catch (ClassNotFoundException e) {\n \t\t// FIXME: this might not be the best way to handle missing classes.\n-\t\tthrow new AssertionViolatedException(\"Missing class: \" + e.toString(), e);\n+\t\tthrow new AssertionViolatedException(\"Missing class: \" + e, e);\n \t    }\n \t}\n \n@@ -224,7 +224,7 @@ private void every_class_has_an_accessible_superclass(){\n \n \t    } catch (ClassNotFoundException e) {\n \t\t// FIXME: this might not be the best way to handle missing classes.\n-\t\tthrow new AssertionViolatedException(\"Missing class: \" + e.toString(), e);\n+\t\tthrow new AssertionViolatedException(\"Missing class: \" + e, e);\n \t    }\n \t}\n \n@@ -279,7 +279,7 @@ private void final_methods_are_not_overridden(){\n \n \t    } catch (ClassNotFoundException e) {\n \t\t// FIXME: this might not be the best way to handle missing classes.\n-\t\tthrow new AssertionViolatedException(\"Missing class: \" + e.toString(), e);\n+\t\tthrow new AssertionViolatedException(\"Missing class: \" + e, e);\n \t    }\n \n \t}\n@@ -296,11 +296,11 @@ private void constant_pool_entries_satisfy_static_constraints(){\n \t\t// we only have to verify if the indices of the constants point\n \t\t// to constants of the appropriate type and such.\n \t\tJavaClass jc = Repository.lookupClass(myOwner.getClassName());\n-\t\tnew CPESSC_Visitor(jc); // constructor implicitely traverses jc\n+\t\tnew CPESSC_Visitor(jc); // constructor implicitly traverses jc\n \n \t    } catch (ClassNotFoundException e) {\n \t\t// FIXME: this might not be the best way to handle missing classes.\n-\t\tthrow new AssertionViolatedException(\"Missing class: \" + e.toString(), e);\n+\t\tthrow new AssertionViolatedException(\"Missing class: \" + e, e);\n \t    }\n \t}\n \n@@ -1043,7 +1043,7 @@ public void visitCode(Code obj){//vmspec2 4.7.3\n \n \t\t    } catch (ClassNotFoundException e) {\n \t\t\t// FIXME: this might not be the best way to handle missing classes.\n-\t\t\tthrow new AssertionViolatedException(\"Missing class: \" + e.toString(), e);\n+\t\t\tthrow new AssertionViolatedException(\"Missing class: \" + e, e);\n \t\t    }\n \n \t\t}// visitCode(Code) END\n@@ -1102,7 +1102,7 @@ public void visitExceptionTable(ExceptionTable obj){//vmspec2 4.7.4\n \n \t\t    } catch (ClassNotFoundException e) {\n \t\t\t// FIXME: this might not be the best way to handle missing classes.\n-\t\t\tthrow new AssertionViolatedException(\"Missing class: \" + e.toString(), e);\n+\t\t\tthrow new AssertionViolatedException(\"Missing class: \" + e, e);\n \t\t    }\n \t\t}\n \t\t// SYNTHETIC: see above\n@@ -1200,7 +1200,7 @@ private void field_and_method_refs_are_valid(){\n \n \t    } catch (ClassNotFoundException e) {\n \t\t// FIXME: this might not be the best way to handle missing classes.\n-\t\tthrow new AssertionViolatedException(\"Missing class: \" + e.toString(), e);\n+\t\tthrow new AssertionViolatedException(\"Missing class: \" + e, e);\n \t    }\n \t}\n ", "filename": "src/main/java/org/apache/bcel/verifier/statics/Pass2Verifier.java"}, {"additions": 10, "raw_url": "https://github.com/apache/commons-bcel/raw/dd045109ff40c502a157c03dbc6acef3b5400de2/src/main/java/org/apache/bcel/verifier/statics/Pass3aVerifier.java", "blob_url": "https://github.com/apache/commons-bcel/blob/dd045109ff40c502a157c03dbc6acef3b5400de2/src/main/java/org/apache/bcel/verifier/statics/Pass3aVerifier.java", "sha": "c7d780037533c425e215580b4b5807e11a59c0f1", "changes": 20, "status": "modified", "deletions": 10, "contents_url": "https://api.github.com/repos/apache/commons-bcel/contents/src/main/java/org/apache/bcel/verifier/statics/Pass3aVerifier.java?ref=dd045109ff40c502a157c03dbc6acef3b5400de2", "patch": "@@ -212,7 +212,7 @@ public VerificationResult do_verify(){\n \t\t}\n \t    } catch (ClassNotFoundException e) {\n \t\t// FIXME: maybe not the best way to handle this\n-\t\tthrow new AssertionViolatedException(\"Missing class: \" + e.toString(), e);\n+\t\tthrow new AssertionViolatedException(\"Missing class: \" + e, e);\n \t    }\n \t}\n \n@@ -417,7 +417,7 @@ private void pass3StaticInstructionOperandsChecks(){\n \n \t    } catch (ClassNotFoundException e) {\n \t\t// FIXME: maybe not the best way to handle this\n-\t\tthrow new AssertionViolatedException(\"Missing class: \" + e.toString(), e);\n+\t\tthrow new AssertionViolatedException(\"Missing class: \" + e, e);\n \t    }\n \t}\n \t\n@@ -458,7 +458,7 @@ private int max_locals(){\n \t\t\treturn Repository.lookupClass(myOwner.getClassName()).getMethods()[method_no].getCode().getMaxLocals();\n \t\t    } catch (ClassNotFoundException e) {\n \t\t\t// FIXME: maybe not the best way to handle this\n-\t\t\tthrow new AssertionViolatedException(\"Missing class: \" + e.toString(), e);\n+\t\t\tthrow new AssertionViolatedException(\"Missing class: \" + e, e);\n \t\t    }\n \t\t}\n \n@@ -611,7 +611,7 @@ public void visitFieldInstruction(FieldInstruction o){\n \t\t\t}\n \t\t    } catch (ClassNotFoundException e) {\n \t\t\t// FIXME: maybe not the best way to handle this\n-\t\t\tthrow new AssertionViolatedException(\"Missing class: \" + e.toString(), e);\n+\t\t\tthrow new AssertionViolatedException(\"Missing class: \" + e, e);\n \t\t    }\n \t\t}\t\n \n@@ -1026,7 +1026,7 @@ public void visitPUTSTATIC(PUTSTATIC o){\n \t\t\t}\n \t\t    } catch (ClassNotFoundException e) {\n \t\t\t// FIXME: maybe not the best way to handle this\n-\t\t\tthrow new AssertionViolatedException(\"Missing class: \" + e.toString(), e);\n+\t\t\tthrow new AssertionViolatedException(\"Missing class: \" + e, e);\n \t\t    }\n \t\t}\n \n@@ -1053,7 +1053,7 @@ public void visitGETSTATIC(GETSTATIC o){\n \t\t\t}\n \t\t    } catch (ClassNotFoundException e) {\n \t\t\t// FIXME: maybe not the best way to handle this\n-\t\t\tthrow new AssertionViolatedException(\"Missing class: \" + e.toString(), e);\n+\t\t\tthrow new AssertionViolatedException(\"Missing class: \" + e, e);\n \t\t    }\n \t\t}\n \n@@ -1095,7 +1095,7 @@ public void visitINVOKEINTERFACE(INVOKEINTERFACE o){\n \t\t\t}\n \t\t    } catch (ClassNotFoundException e) {\n \t\t\t// FIXME: maybe not the best way to handle this\n-\t\t\tthrow new AssertionViolatedException(\"Missing class: \" + e.toString(), e);\n+\t\t\tthrow new AssertionViolatedException(\"Missing class: \" + e, e);\n \t\t    }\n \t\t}\n \n@@ -1160,7 +1160,7 @@ public void visitINVOKESPECIAL(INVOKESPECIAL o){\n \t\t\t\n \t\t    } catch (ClassNotFoundException e) {\n \t\t\t// FIXME: maybe not the best way to handle this\n-\t\t\tthrow new AssertionViolatedException(\"Missing class: \" + e.toString(), e);\n+\t\t\tthrow new AssertionViolatedException(\"Missing class: \" + e, e);\n \t\t    }\n \t\t\t\n \t\t}\n@@ -1193,7 +1193,7 @@ public void visitINVOKESTATIC(INVOKESTATIC o){\n \t\t\n \t\t    } catch (ClassNotFoundException e) {\n \t\t\t// FIXME: maybe not the best way to handle this\n-\t\t\tthrow new AssertionViolatedException(\"Missing class: \" + e.toString(), e);\n+\t\t\tthrow new AssertionViolatedException(\"Missing class: \" + e, e);\n \t\t    }\n \t\t}\n \n@@ -1227,7 +1227,7 @@ public void visitINVOKEVIRTUAL(INVOKEVIRTUAL o){\n \t\t\t\t\t\n \t\t    } catch (ClassNotFoundException e) {\n \t\t\t// FIXME: maybe not the best way to handle this\n-\t\t\tthrow new AssertionViolatedException(\"Missing class: \" + e.toString(), e);\n+\t\t\tthrow new AssertionViolatedException(\"Missing class: \" + e, e);\n \t\t    }\n \t\t}\n ", "filename": "src/main/java/org/apache/bcel/verifier/statics/Pass3aVerifier.java"}, {"additions": 8, "raw_url": "https://github.com/apache/commons-bcel/raw/dd045109ff40c502a157c03dbc6acef3b5400de2/src/main/java/org/apache/bcel/verifier/structurals/InstConstraintVisitor.java", "blob_url": "https://github.com/apache/commons-bcel/blob/dd045109ff40c502a157c03dbc6acef3b5400de2/src/main/java/org/apache/bcel/verifier/structurals/InstConstraintVisitor.java", "sha": "cba0f9edaaf3809e390e8abe968260b62ac5f687", "changes": 16, "status": "modified", "deletions": 8, "contents_url": "https://api.github.com/repos/apache/commons-bcel/contents/src/main/java/org/apache/bcel/verifier/structurals/InstConstraintVisitor.java?ref=dd045109ff40c502a157c03dbc6acef3b5400de2", "patch": "@@ -485,7 +485,7 @@ public void visitAASTORE(AASTORE o){\n \t\t}\n \t    } catch (ClassNotFoundException e) {\n \t\t// FIXME: maybe not the best way to handle this\n-\t\tthrow new AssertionViolatedException(\"Missing class: \" + e.toString(), e);\n+\t\tthrow new AssertionViolatedException(\"Missing class: \" + e, e);\n \t    }\n \t}\n \n@@ -584,7 +584,7 @@ public void visitATHROW(ATHROW o){\n \t\t}\n \t    } catch (ClassNotFoundException e) {\n \t\t// FIXME: maybe not the best way to handle this\n-\t\tthrow new AssertionViolatedException(\"Missing class: \" + e.toString(), e);\n+\t\tthrow new AssertionViolatedException(\"Missing class: \" + e, e);\n \t    }\n \t}\n \n@@ -1305,7 +1305,7 @@ public void visitGETFIELD(GETFIELD o){\n \n \t    } catch (ClassNotFoundException e) {\n \t\t// FIXME: maybe not the best way to handle this\n-\t\tthrow new AssertionViolatedException(\"Missing class: \" + e.toString(), e);\n+\t\tthrow new AssertionViolatedException(\"Missing class: \" + e, e);\n \t    }\n \t}\n \n@@ -1933,7 +1933,7 @@ public void visitINVOKESPECIAL(INVOKESPECIAL o){\n \t\t\n \t    } catch (ClassNotFoundException e) {\n \t\t// FIXME: maybe not the best way to handle this\n-\t\tthrow new AssertionViolatedException(\"Missing class: \" + e.toString(), e);\n+\t\tthrow new AssertionViolatedException(\"Missing class: \" + e, e);\n \t    }\n \t}\n \n@@ -1985,7 +1985,7 @@ public void visitINVOKESTATIC(INVOKESTATIC o){\n \t\t}\n \t    } catch (ClassNotFoundException e) {\n \t\t// FIXME: maybe not the best way to handle this\n-\t\tthrow new AssertionViolatedException(\"Missing class: \" + e.toString(), e);\n+\t\tthrow new AssertionViolatedException(\"Missing class: \" + e, e);\n \t    }\n \t}\n \n@@ -2063,7 +2063,7 @@ public void visitINVOKEVIRTUAL(INVOKEVIRTUAL o){\n \t\t}\t\n \t    } catch (ClassNotFoundException e) {\n \t\t// FIXME: maybe not the best way to handle this\n-\t\tthrow new AssertionViolatedException(\"Missing class: \" + e.toString(), e);\n+\t\tthrow new AssertionViolatedException(\"Missing class: \" + e, e);\n \t    }\n \t}\n \n@@ -2715,7 +2715,7 @@ public void visitPUTFIELD(PUTFIELD o){\n \n \t    } catch (ClassNotFoundException e) {\n \t\t// FIXME: maybe not the best way to handle this\n-\t\tthrow new AssertionViolatedException(\"Missing class: \" + e.toString(), e);\n+\t\tthrow new AssertionViolatedException(\"Missing class: \" + e, e);\n \t    }\n \t}\n \n@@ -2780,7 +2780,7 @@ public void visitPUTSTATIC(PUTSTATIC o){\n \n \t    } catch (ClassNotFoundException e) {\n \t\t// FIXME: maybe not the best way to handle this\n-\t\tthrow new AssertionViolatedException(\"Missing class: \" + e.toString(), e);\n+\t\tthrow new AssertionViolatedException(\"Missing class: \" + e, e);\n \t    }\n \t}\n ", "filename": "src/main/java/org/apache/bcel/verifier/structurals/InstConstraintVisitor.java"}, {"additions": 1, "raw_url": "https://github.com/apache/commons-bcel/raw/dd045109ff40c502a157c03dbc6acef3b5400de2/src/main/java/org/apache/bcel/verifier/structurals/LocalVariables.java", "blob_url": "https://github.com/apache/commons-bcel/blob/dd045109ff40c502a157c03dbc6acef3b5400de2/src/main/java/org/apache/bcel/verifier/structurals/LocalVariables.java", "sha": "f6674576e33dddd1ab137651810aa367392efaba", "changes": 2, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/commons-bcel/contents/src/main/java/org/apache/bcel/verifier/structurals/LocalVariables.java?ref=dd045109ff40c502a157c03dbc6acef3b5400de2", "patch": "@@ -181,7 +181,7 @@ private void merge(LocalVariables lv, int i){\n \t\t}\n \t    } catch (ClassNotFoundException e) {\n \t\t// FIXME: maybe not the best way to handle this\n-\t\tthrow new AssertionViolatedException(\"Missing class: \" + e.toString(), e);\n+\t\tthrow new AssertionViolatedException(\"Missing class: \" + e, e);\n \t    }\n \t}\n ", "filename": "src/main/java/org/apache/bcel/verifier/structurals/LocalVariables.java"}, {"additions": 1, "raw_url": "https://github.com/apache/commons-bcel/raw/dd045109ff40c502a157c03dbc6acef3b5400de2/src/main/java/org/apache/bcel/verifier/structurals/OperandStack.java", "blob_url": "https://github.com/apache/commons-bcel/blob/dd045109ff40c502a157c03dbc6acef3b5400de2/src/main/java/org/apache/bcel/verifier/structurals/OperandStack.java", "sha": "58a23ce8e0d6f759fbc976d45aea3cb58886c2c9", "changes": 2, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/commons-bcel/contents/src/main/java/org/apache/bcel/verifier/structurals/OperandStack.java?ref=dd045109ff40c502a157c03dbc6acef3b5400de2", "patch": "@@ -249,7 +249,7 @@ public void merge(OperandStack s){\n \t\t}\n \t    } catch (ClassNotFoundException e) {\n \t\t// FIXME: maybe not the best way to handle this\n-\t\tthrow new AssertionViolatedException(\"Missing class: \" + e.toString(), e);\n+\t\tthrow new AssertionViolatedException(\"Missing class: \" + e, e);\n \t    }\n \t}\n ", "filename": "src/main/java/org/apache/bcel/verifier/structurals/OperandStack.java"}, {"additions": 1, "raw_url": "https://github.com/apache/commons-bcel/raw/dd045109ff40c502a157c03dbc6acef3b5400de2/src/main/java/org/apache/bcel/verifier/structurals/Pass3bVerifier.java", "blob_url": "https://github.com/apache/commons-bcel/blob/dd045109ff40c502a157c03dbc6acef3b5400de2/src/main/java/org/apache/bcel/verifier/structurals/Pass3bVerifier.java", "sha": "1d9e2c7d33fc3185d0861cd79bc883a9dd756ac3", "changes": 2, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/commons-bcel/contents/src/main/java/org/apache/bcel/verifier/structurals/Pass3bVerifier.java?ref=dd045109ff40c502a157c03dbc6acef3b5400de2", "patch": "@@ -328,7 +328,7 @@ public VerificationResult do_verify(){\n \t\t\tjc = Repository.lookupClass(myOwner.getClassName());\n \t\t} catch (ClassNotFoundException e) {\n \t\t\t// FIXME: maybe not the best way to handle this\n-\t\t\tthrow new AssertionViolatedException(\"Missing class: \" + e.toString(), e);\n+\t\t\tthrow new AssertionViolatedException(\"Missing class: \" + e, e);\n \t\t}\n \n \t\tConstantPoolGen constantPoolGen = new ConstantPoolGen(jc.getConstantPool());", "filename": "src/main/java/org/apache/bcel/verifier/structurals/Pass3bVerifier.java"}, {"additions": 2, "raw_url": "https://github.com/apache/commons-bcel/raw/dd045109ff40c502a157c03dbc6acef3b5400de2/src/main/java/org/apache/bcel/verifier/structurals/Subroutines.java", "blob_url": "https://github.com/apache/commons-bcel/blob/dd045109ff40c502a157c03dbc6acef3b5400de2/src/main/java/org/apache/bcel/verifier/structurals/Subroutines.java", "sha": "40938003ef06f17e137790d1431f542518fb85da", "changes": 4, "status": "modified", "deletions": 2, "contents_url": "https://api.github.com/repos/apache/commons-bcel/contents/src/main/java/org/apache/bcel/verifier/structurals/Subroutines.java?ref=dd045109ff40c502a157c03dbc6acef3b5400de2", "patch": "@@ -115,7 +115,7 @@ public boolean contains(InstructionHandle inst){\n \t\t */\n \t\t@Override\n         public String toString(){\n-\t\t\tString ret = \"Subroutine: Local variable is '\"+localVariable+\"', JSRs are '\"+theJSRs+\"', RET is '\"+theRET+\"', Instructions: '\"+instructions.toString()+\"'.\";\n+\t\t\tString ret = \"Subroutine: Local variable is '\"+localVariable+\"', JSRs are '\"+theJSRs+\"', RET is '\"+theRET+\"', Instructions: '\"+instructions+\"'.\";\n \t\t\t\n \t\t\tret += \" Accessed local variable slots: '\";\n \t\t\tint[] alv = getAccessedLocalsIndices();\n@@ -640,6 +640,6 @@ public Subroutine getTopLevel(){\n \t */\n \t@Override\n     public String toString(){\n-\t\treturn \"---\\n\"+subroutines.toString()+\"\\n---\\n\";\n+\t\treturn \"---\\n\"+subroutines+\"\\n---\\n\";\n \t}\n }", "filename": "src/main/java/org/apache/bcel/verifier/structurals/Subroutines.java"}], "repo": "commons-bcel"}, {"commit": "https://github.com/apache/commons-bcel/commit/b82c04ff6726b70b4f0dd0e89d66bdd62d00185f", "parent": "https://github.com/apache/commons-bcel/commit/13229681dee6c95eeb8dd35a4840e3d2cb1b1470", "message": "guard against npe's\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/bcel/trunk@312569 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "commons-bcel_8", "file": [{"additions": 1, "raw_url": "https://github.com/apache/commons-bcel/raw/b82c04ff6726b70b4f0dd0e89d66bdd62d00185f/src/java/org/apache/bcel/verifier/statics/Pass3aVerifier.java", "blob_url": "https://github.com/apache/commons-bcel/blob/b82c04ff6726b70b4f0dd0e89d66bdd62d00185f/src/java/org/apache/bcel/verifier/statics/Pass3aVerifier.java", "sha": "71d848fc3432afcf9e37556969c8508239f91e33", "changes": 4, "status": "modified", "deletions": 3, "contents_url": "https://api.github.com/repos/apache/commons-bcel/contents/src/java/org/apache/bcel/verifier/statics/Pass3aVerifier.java?ref=b82c04ff6726b70b4f0dd0e89d66bdd62d00185f", "patch": "@@ -1146,9 +1146,7 @@ public void visitINVOKESTATIC(INVOKESTATIC o){\n \t\t\t}\n \t\t\tif (m == null){\n \t\t\t\tconstraintViolated(o, \"Referenced method '\"+o.getMethodName(cpg)+\"' with expected signature '\"+o.getSignature(cpg) +\"' not found in class '\"+jc.getClassName()+\"'. The native verifier possibly allows the method to be declared in some superclass or implemented interface, which the Java Virtual Machine Specification, Second Edition does not.\");\n-\t\t\t}\n-\t\t\t\n-\t\t\tif (! (m.isStatic())){ // implies it's not abstract, verified in pass 2.\n+\t\t\t} else if (! (m.isStatic())){ // implies it's not abstract, verified in pass 2.\n \t\t\t\tconstraintViolated(o, \"Referenced method '\"+o.getMethodName(cpg)+\"' has ACC_STATIC unset.\");\n \t\t\t}\n \t\t", "filename": "src/java/org/apache/bcel/verifier/statics/Pass3aVerifier.java"}], "repo": "commons-bcel"}, {"commit": "https://github.com/apache/commons-bcel/commit/0dbae7295aef6f772dcedf61f8f0ff1b07c96058", "parent": "https://github.com/apache/commons-bcel/commit/26a073e80cce004a3a6f3408333011d1f7f39816", "message": "'guard' against npe's\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/bcel/trunk@230963 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "commons-bcel_9", "file": [{"additions": 9, "raw_url": "https://github.com/apache/commons-bcel/raw/0dbae7295aef6f772dcedf61f8f0ff1b07c96058/src/java/org/apache/bcel/verifier/VerifyDialog.java", "blob_url": "https://github.com/apache/commons-bcel/blob/0dbae7295aef6f772dcedf61f8f0ff1b07c96058/src/java/org/apache/bcel/verifier/VerifyDialog.java", "sha": "f2d4be97eb319159ee72878ad0c632172c39bdbb", "changes": 17, "status": "modified", "deletions": 8, "contents_url": "https://api.github.com/repos/apache/commons-bcel/contents/src/java/org/apache/bcel/verifier/VerifyDialog.java?ref=0dbae7295aef6f772dcedf61f8f0ff1b07c96058", "patch": "@@ -504,18 +504,19 @@ public void pass4Button_ActionPerformed(java.awt.event.ActionEvent actionEvent)\n \t\tJavaClass jc = null;\n \t\ttry {\n \t\t\tjc = Repository.lookupClass(class_name);\n+\t\t\t\n+\t\t\tint nr = jc.getMethods().length;\n+\t\t\tfor (int i=0; i<nr; i++) {\n+\t\t\t\tvr = v.doPass3b(i);\n+\t\t\t\tif (vr.getStatus() != VerificationResult.VERIFIED_OK){\n+\t\t\t\t\tcolor = Color.red;\n+\t\t\t\t\tbreak;\n+\t\t\t\t}\n+\t\t\t}\n \t\t} catch (ClassNotFoundException ex) {\n \t\t\t// FIXME: report the error\n \t\t\tex.printStackTrace();\n \t\t}\n-\t\tint nr = jc.getMethods().length;\n-\t\tfor (int i=0; i<nr; i++) {\n-\t\t\tvr = v.doPass3b(i);\n-\t\t\tif (vr.getStatus() != VerificationResult.VERIFIED_OK){\n-\t\t\t\tcolor = Color.red;\n-\t\t\t\tbreak;\n-\t\t\t}\n-\t\t}\n \t}\n \telse{\n \t\tcolor = Color.yellow;", "filename": "src/java/org/apache/bcel/verifier/VerifyDialog.java"}], "repo": "commons-bcel"}, {"commit": "https://github.com/apache/commons-bcel/commit/26a073e80cce004a3a6f3408333011d1f7f39816", "parent": "https://github.com/apache/commons-bcel/commit/0e3574bdaab211c2fbe6f200415e386ebb9681be", "message": "'guard' against npe's\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/bcel/trunk@230962 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "commons-bcel_10", "file": [{"additions": 2, "raw_url": "https://github.com/apache/commons-bcel/raw/26a073e80cce004a3a6f3408333011d1f7f39816/src/java/org/apache/bcel/verifier/VerifierAppFrame.java", "blob_url": "https://github.com/apache/commons-bcel/blob/26a073e80cce004a3a6f3408333011d1f7f39816/src/java/org/apache/bcel/verifier/VerifierAppFrame.java", "sha": "5c5dd7116469ae23906491bb88205b04c81ff6ba", "changes": 4, "status": "modified", "deletions": 2, "contents_url": "https://api.github.com/repos/apache/commons-bcel/contents/src/java/org/apache/bcel/verifier/VerifierAppFrame.java?ref=26a073e80cce004a3a6f3408333011d1f7f39816", "patch": "@@ -331,11 +331,11 @@ synchronized void pass3aJList_valueChanged(ListSelectionEvent e) {\n         JavaClass jc = null;\n \ttry {\n           jc = Repository.lookupClass(v.getClassName());\n+          all3amsg += \"Method '\"+jc.getMethods()[i]+\"': \"+vr.getMessage().replace('\\n',' ')+\"\\n\\n\";\n         } catch (ClassNotFoundException ex) {\n           // FIXME: handle the error\n           ex.printStackTrace();\n         }\n-        all3amsg += \"Method '\"+jc.getMethods()[i]+\"': \"+vr.getMessage().replace('\\n',' ')+\"\\n\\n\";\n       }\n     }\n     pass3aTextPane.setText(all3amsg);\n@@ -363,11 +363,11 @@ synchronized void pass3bJList_valueChanged(ListSelectionEvent e) {\n         JavaClass jc = null;\n \ttry {\n           jc = Repository.lookupClass(v.getClassName());\n+          all3bmsg += \"Method '\"+jc.getMethods()[i]+\"': \"+vr.getMessage().replace('\\n',' ')+\"\\n\\n\";\n         } catch (ClassNotFoundException ex) {\n           // FIXME: handle the error\n           ex.printStackTrace();\n         }\n-        all3bmsg += \"Method '\"+jc.getMethods()[i]+\"': \"+vr.getMessage().replace('\\n',' ')+\"\\n\\n\";\n       }\n     }\n     pass3bTextPane.setText(all3bmsg);", "filename": "src/java/org/apache/bcel/verifier/VerifierAppFrame.java"}], "repo": "commons-bcel"}, {"commit": "https://github.com/apache/commons-bcel/commit/0e3574bdaab211c2fbe6f200415e386ebb9681be", "parent": "https://github.com/apache/commons-bcel/commit/6b7c137291865a6d066e5f31776c358366708bd1", "message": "'guard' against npe's\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/bcel/trunk@230961 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "commons-bcel_11", "file": [{"additions": 14, "raw_url": "https://github.com/apache/commons-bcel/raw/0e3574bdaab211c2fbe6f200415e386ebb9681be/src/java/org/apache/bcel/classfile/JavaClass.java", "blob_url": "https://github.com/apache/commons-bcel/blob/0e3574bdaab211c2fbe6f200415e386ebb9681be/src/java/org/apache/bcel/classfile/JavaClass.java", "sha": "5e3bb905f3e2fdcdb6a95bcb614aa16aacb72ec4", "changes": 28, "status": "modified", "deletions": 14, "contents_url": "https://api.github.com/repos/apache/commons-bcel/contents/src/java/org/apache/bcel/classfile/JavaClass.java?ref=0e3574bdaab211c2fbe6f200415e386ebb9681be", "patch": "@@ -670,24 +670,24 @@ public JavaClass copy() {\n \n     try {\n       c = (JavaClass)clone();\n-    } catch (CloneNotSupportedException e) {\n-    }\n \n-    c.constant_pool = constant_pool.copy();\n-    c.interfaces = (int[])interfaces.clone();\n-    c.interface_names = (String[])interface_names.clone();\n+      c.constant_pool = constant_pool.copy();\n+      c.interfaces = (int[])interfaces.clone();\n+      c.interface_names = (String[])interface_names.clone();\n \n-    c.fields = new Field[fields.length];\n-    for (int i = 0; i < fields.length; i++)\n-      c.fields[i] = fields[i].copy(c.constant_pool);\n+      c.fields = new Field[fields.length];\n+      for (int i = 0; i < fields.length; i++)\n+        c.fields[i] = fields[i].copy(c.constant_pool);\n \n-    c.methods = new Method[methods.length];\n-    for (int i = 0; i < methods.length; i++)\n-      c.methods[i] = methods[i].copy(c.constant_pool);\n+      c.methods = new Method[methods.length];\n+      for (int i = 0; i < methods.length; i++)\n+        c.methods[i] = methods[i].copy(c.constant_pool);\n \n-    c.attributes = new Attribute[attributes.length];\n-    for (int i = 0; i < attributes.length; i++)\n-      c.attributes[i] = attributes[i].copy(c.constant_pool);\n+      c.attributes = new Attribute[attributes.length];\n+      for (int i = 0; i < attributes.length; i++)\n+        c.attributes[i] = attributes[i].copy(c.constant_pool);\n+    } catch (CloneNotSupportedException e) {\n+    }\n \n     return c;\n   }", "filename": "src/java/org/apache/bcel/classfile/JavaClass.java"}], "repo": "commons-bcel"}, {"commit": "https://github.com/apache/commons-bcel/commit/6b7c137291865a6d066e5f31776c358366708bd1", "parent": "https://github.com/apache/commons-bcel/commit/5d435ae2f457b0430557273801f76a946a35ee56", "message": "'guard' against npe's\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/bcel/trunk@230960 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "commons-bcel_12", "file": [{"additions": 6, "raw_url": "https://github.com/apache/commons-bcel/raw/6b7c137291865a6d066e5f31776c358366708bd1/src/java/org/apache/bcel/classfile/ConstantPool.java", "blob_url": "https://github.com/apache/commons-bcel/blob/6b7c137291865a6d066e5f31776c358366708bd1/src/java/org/apache/bcel/classfile/ConstantPool.java", "sha": "20852b6069684db735f909d2ae4080af20d75ff6", "changes": 12, "status": "modified", "deletions": 6, "contents_url": "https://api.github.com/repos/apache/commons-bcel/contents/src/java/org/apache/bcel/classfile/ConstantPool.java?ref=6b7c137291865a6d066e5f31776c358366708bd1", "patch": "@@ -323,14 +323,14 @@ public ConstantPool copy() {\n \n     try {\n       c = (ConstantPool)clone();\n-    } catch(CloneNotSupportedException e) {}\n+      c.constant_pool = new Constant[constant_pool_count];\n \n-    c.constant_pool = new Constant[constant_pool_count];\n+      for(int i=1; i < constant_pool_count; i++) {\n+        if(constant_pool[i] != null)\n+        \tc.constant_pool[i] = constant_pool[i].copy();\n+      }\n+    } catch(CloneNotSupportedException e) {}\n \n-    for(int i=1; i < constant_pool_count; i++) {\n-      if(constant_pool[i] != null)\n-\tc.constant_pool[i] = constant_pool[i].copy();\n-    }\n \n     return c;\n   }", "filename": "src/java/org/apache/bcel/classfile/ConstantPool.java"}], "repo": "commons-bcel"}, {"commit": "https://github.com/apache/commons-bcel/commit/eed510642f30f119a86d27dcbb829f02823ffa2e", "parent": "https://github.com/apache/commons-bcel/commit/ca29e258b9d9f824ffc3fdda728303cb55b386a2", "message": "https://issues.apache.org/bugzilla/show_bug.cgi?id=47249\n\nfixed a possible NPE\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/bcel/trunk@897697 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "commons-bcel_13", "file": [{"additions": 5, "raw_url": "https://github.com/apache/commons-bcel/raw/eed510642f30f119a86d27dcbb829f02823ffa2e/src/main/java/org/apache/bcel/classfile/ClassParser.java", "blob_url": "https://github.com/apache/commons-bcel/blob/eed510642f30f119a86d27dcbb829f02823ffa2e/src/main/java/org/apache/bcel/classfile/ClassParser.java", "sha": "3fe61ed8bcbbcd31e63a595dfec31074a46da872", "changes": 5, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/commons-bcel/contents/src/main/java/org/apache/bcel/classfile/ClassParser.java?ref=eed510642f30f119a86d27dcbb829f02823ffa2e", "patch": "@@ -120,6 +120,11 @@ public JavaClass parse() throws IOException, ClassFormatException {\n                 if (is_zip) {\n                     zip = new ZipFile(zip_file);\n                     ZipEntry entry = zip.getEntry(file_name);\n+                    \n+                    if (entry == null) {\n+                        throw new IOException(\"File \" + file_name + \" not found\");\n+                    }\n+                    \n                     file = new DataInputStream(new BufferedInputStream(zip.getInputStream(entry),\n                             BUFSIZE));\n                 } else {", "filename": "src/main/java/org/apache/bcel/classfile/ClassParser.java"}], "repo": "commons-bcel"}, {"commit": "https://github.com/apache/commons-bcel/commit/770ceafed9ec829314b8e095e01ff39474566908", "parent": "https://github.com/apache/commons-bcel/commit/87ef0ad4e4760c57a6140cfbd42efaf8d628a20b", "message": "if attributes parameter is null, would get NPE, fixed. Problem exacerbated by hidding member name with parameter name.\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/bcel/trunk@382273 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "commons-bcel_14", "file": [{"additions": 2, "raw_url": "https://github.com/apache/commons-bcel/raw/770ceafed9ec829314b8e095e01ff39474566908/src/java/org/apache/bcel/classfile/JavaClass.java", "blob_url": "https://github.com/apache/commons-bcel/blob/770ceafed9ec829314b8e095e01ff39474566908/src/java/org/apache/bcel/classfile/JavaClass.java", "sha": "0e646e57a618f00bfbf4cb5d7a8255d79f091567", "changes": 6, "status": "modified", "deletions": 4, "contents_url": "https://api.github.com/repos/apache/commons-bcel/contents/src/java/org/apache/bcel/classfile/JavaClass.java?ref=770ceafed9ec829314b8e095e01ff39474566908", "patch": "@@ -127,7 +127,7 @@ public JavaClass(\n     if (interfaces == null) // Allowed for backward compatibility\n       interfaces = new int[0];\n     if (attributes == null)\n-      this.attributes = new Attribute[0];\n+      attributes = new Attribute[0];\n     if (fields == null)\n       fields = new Field[0];\n     if (methods == null)\n@@ -261,9 +261,7 @@ public void dump(File file) throws IOException {\n \n     if (parent != null) {\n       File dir = new File(parent);\n-\n-      if (dir != null)\n-        dir.mkdirs();\n+      dir.mkdirs();\n     }\n \n     DataOutputStream dos = null;", "filename": "src/java/org/apache/bcel/classfile/JavaClass.java"}], "repo": "commons-bcel"}]
