{
    "maven-2_017e552": {
        "bug_id": "maven-2_017e552",
        "commit": "https://github.com/apache/maven-2/commit/017e552933d16a99d6798354fd862a026eb8a631",
        "file": [
            {
                "additions": 10,
                "blob_url": "https://github.com/apache/maven-2/blob/017e552933d16a99d6798354fd862a026eb8a631/maven-artifact-manager/src/main/java/org/apache/maven/artifact/manager/DefaultWagonManager.java",
                "changes": 10,
                "contents_url": "https://api.github.com/repos/apache/maven-2/contents/maven-artifact-manager/src/main/java/org/apache/maven/artifact/manager/DefaultWagonManager.java?ref=017e552933d16a99d6798354fd862a026eb8a631",
                "deletions": 0,
                "filename": "maven-artifact-manager/src/main/java/org/apache/maven/artifact/manager/DefaultWagonManager.java",
                "patch": "@@ -468,6 +468,16 @@ private void getRemoteFile( ArtifactRepository repository,\n \n                     if ( downloaded )\n                     {\n+                        if ( sha1ChecksumObserver != null )\n+                        {\n+                            wagon.removeTransferListener( sha1ChecksumObserver );\n+                        }\n+\n+                        if ( md5ChecksumObserver != null )\n+                        {\n+                            wagon.removeTransferListener( md5ChecksumObserver );\n+                        }\n+\n                         // keep the checksum files from showing up on the download monitor...\n                         if ( downloadMonitor != null )\n                         {",
                "raw_url": "https://github.com/apache/maven-2/raw/017e552933d16a99d6798354fd862a026eb8a631/maven-artifact-manager/src/main/java/org/apache/maven/artifact/manager/DefaultWagonManager.java",
                "sha": "6d1ec62c8861e066df862c0dbfcb764a66600829",
                "status": "modified"
            }
        ],
        "message": "Taking another shot at cleaning up the NPE related to wagon beta-3 and the digest that goes null on a transfer error...this time, remove the checksum observers before verifying the checksum(s).\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/components/branches/maven-2.0.x@674876 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/maven-2/commit/bf05393deb370a045c582312e347d9f5a93c5e64",
        "repo": "maven-2",
        "unit_tests": [
            "DefaultWagonManagerTest.java"
        ]
    },
    "maven-2_3bf9e43": {
        "bug_id": "maven-2_3bf9e43",
        "commit": "https://github.com/apache/maven-2/commit/3bf9e4316e5f503d80afcec9048747f69382da7b",
        "file": [
            {
                "additions": 9,
                "blob_url": "https://github.com/apache/maven-2/blob/3bf9e4316e5f503d80afcec9048747f69382da7b/maven-project/src/main/java/org/apache/maven/project/inheritance/DefaultModelInheritanceAssembler.java",
                "changes": 12,
                "contents_url": "https://api.github.com/repos/apache/maven-2/contents/maven-project/src/main/java/org/apache/maven/project/inheritance/DefaultModelInheritanceAssembler.java?ref=3bf9e4316e5f503d80afcec9048747f69382da7b",
                "deletions": 3,
                "filename": "maven-project/src/main/java/org/apache/maven/project/inheritance/DefaultModelInheritanceAssembler.java",
                "patch": "@@ -538,10 +538,16 @@ protected String appendPath( String parentPath, String childPath, String pathAdj\n                 lastToken = currentToken;\n                 currentToken = tokens.nextToken();\n \n-                if ( \"..\".equals( currentToken ) )\n+                if ( \"..\".equals( currentToken ) && lastToken != null )\n                 {\n-                    // trim the previous path part off...\n-                    cleanedPath.setLength( cleanedPath.length() - ( lastToken.length() + 1 ) );\n+                    int cleanedPathLen = cleanedPath.length();\n+                    int lastTokenLen = lastToken.length();\n+                    \n+                    if ( cleanedPathLen > lastTokenLen )\n+                    {\n+                        // trim the previous path part off...\n+                        cleanedPath.setLength( cleanedPath.length() - ( lastToken.length() + 1 ) );\n+                    }\n                 }\n                 else if ( !\".\".equals( currentToken ) )\n                 {",
                "raw_url": "https://github.com/apache/maven-2/raw/3bf9e4316e5f503d80afcec9048747f69382da7b/maven-project/src/main/java/org/apache/maven/project/inheritance/DefaultModelInheritanceAssembler.java",
                "sha": "218670e8cc19343d1a77491251c8765132552998",
                "status": "modified"
            }
        ],
        "message": "(Merged from 382849.) Fixing NPE in appendPath(..) when calculating adjustments due to '..' in paths.\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/components/branches/maven-2.0.x@382854 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/maven-2/commit/d95f88bdce195ae1c9f99a5d59d038c77e39960c",
        "repo": "maven-2",
        "unit_tests": [
            "DefaultModelInheritanceAssemblerTest.java"
        ]
    },
    "maven-2_3f031d5": {
        "bug_id": "maven-2_3f031d5",
        "commit": "https://github.com/apache/maven-2/commit/3f031d5722ec5799c1fb72711867dda8b02b4b23",
        "file": [
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/maven-2/blob/3f031d5722ec5799c1fb72711867dda8b02b4b23/maven-core/src/main/java/org/apache/maven/lifecycle/DefaultLifecycleExecutor.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/maven-2/contents/maven-core/src/main/java/org/apache/maven/lifecycle/DefaultLifecycleExecutor.java?ref=3f031d5722ec5799c1fb72711867dda8b02b4b23",
                "deletions": 1,
                "filename": "maven-core/src/main/java/org/apache/maven/lifecycle/DefaultLifecycleExecutor.java",
                "patch": "@@ -200,7 +200,7 @@ private void injectHandlerPluginConfiguration( MavenProject project, String grou\n     private void processPluginConfiguration( MavenProject project, MavenSession mavenSession, Map phaseMap )\n         throws LifecycleExecutionException, ArtifactResolutionException\n     {\n-        for ( Iterator i = project.getPlugins().iterator(); i.hasNext(); )\n+        for ( Iterator i = project.getBuildPlugins().iterator(); i.hasNext(); )\n         {\n             Plugin plugin = (Plugin) i.next();\n ",
                "raw_url": "https://github.com/apache/maven-2/raw/3f031d5722ec5799c1fb72711867dda8b02b4b23/maven-core/src/main/java/org/apache/maven/lifecycle/DefaultLifecycleExecutor.java",
                "sha": "e2d4ddda3aa43dd60b05eed9250371067b85a0a5",
                "status": "modified"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/maven-2/blob/3f031d5722ec5799c1fb72711867dda8b02b4b23/maven-core/src/main/java/org/apache/maven/plugin/DefaultPluginManager.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/maven-2/contents/maven-core/src/main/java/org/apache/maven/plugin/DefaultPluginManager.java?ref=3f031d5722ec5799c1fb72711867dda8b02b4b23",
                "deletions": 1,
                "filename": "maven-core/src/main/java/org/apache/maven/plugin/DefaultPluginManager.java",
                "patch": "@@ -152,7 +152,7 @@ public PluginDescriptor verifyPlugin( String groupId, String artifactId, String\n \n             org.apache.maven.model.Plugin pluginConfig = null;\n \n-            for ( Iterator it = project.getPlugins().iterator(); it.hasNext(); )\n+            for ( Iterator it = project.getBuildPlugins().iterator(); it.hasNext(); )\n             {\n                 org.apache.maven.model.Plugin plugin = (org.apache.maven.model.Plugin) it.next();\n ",
                "raw_url": "https://github.com/apache/maven-2/raw/3f031d5722ec5799c1fb72711867dda8b02b4b23/maven-core/src/main/java/org/apache/maven/plugin/DefaultPluginManager.java",
                "sha": "ad3a8b46ee10793c59520aa7ab717a2112889196",
                "status": "modified"
            },
            {
                "additions": 9,
                "blob_url": "https://github.com/apache/maven-2/blob/3f031d5722ec5799c1fb72711867dda8b02b4b23/maven-core/src/main/java/org/apache/maven/plugin/PluginParameterExpressionEvaluator.java",
                "changes": 13,
                "contents_url": "https://api.github.com/repos/apache/maven-2/contents/maven-core/src/main/java/org/apache/maven/plugin/PluginParameterExpressionEvaluator.java?ref=3f031d5722ec5799c1fb72711867dda8b02b4b23",
                "deletions": 4,
                "filename": "maven-core/src/main/java/org/apache/maven/plugin/PluginParameterExpressionEvaluator.java",
                "patch": "@@ -28,6 +28,7 @@\n import java.io.File;\n import java.util.Iterator;\n import java.util.Map;\n+import java.util.List;\n \n /**\n  * @author <a href=\"mailto:jason@maven.org\">Jason van Zyl</a>\n@@ -84,11 +85,15 @@ public Object evaluate( String expr )\n             try\n             {\n                 PluginManager pluginManager = (PluginManager) context.lookup( role );\n-                for ( Iterator it = context.getProject().getReports().getPlugins().iterator(); it.hasNext(); )\n+                List reportPlugins = context.getProject().getReportPlugins();\n+                if ( reportPlugins != null )\n                 {\n-                    org.apache.maven.model.Plugin plugin = (org.apache.maven.model.Plugin) it.next();\n-                    pluginManager.verifyPlugin( plugin.getGroupId(), plugin.getArtifactId(), plugin.getVersion(),\n-                                                context );\n+                    for ( Iterator it = reportPlugins.iterator(); it.hasNext(); )\n+                    {\n+                        org.apache.maven.model.Plugin plugin = (org.apache.maven.model.Plugin) it.next();\n+                        pluginManager.verifyPlugin( plugin.getGroupId(), plugin.getArtifactId(), plugin.getVersion(),\n+                                                    context );\n+                    }\n                 }\n             }\n             catch ( ComponentLookupException cle )",
                "raw_url": "https://github.com/apache/maven-2/raw/3f031d5722ec5799c1fb72711867dda8b02b4b23/maven-core/src/main/java/org/apache/maven/plugin/PluginParameterExpressionEvaluator.java",
                "sha": "3bfdc79479b8f8f2c377b21e8b055376dae5edf5",
                "status": "modified"
            },
            {
                "additions": 13,
                "blob_url": "https://github.com/apache/maven-2/blob/3f031d5722ec5799c1fb72711867dda8b02b4b23/maven-project/src/main/java/org/apache/maven/project/MavenProject.java",
                "changes": 16,
                "contents_url": "https://api.github.com/repos/apache/maven-2/contents/maven-project/src/main/java/org/apache/maven/project/MavenProject.java?ref=3f031d5722ec5799c1fb72711867dda8b02b4b23",
                "deletions": 3,
                "filename": "maven-project/src/main/java/org/apache/maven/project/MavenProject.java",
                "patch": "@@ -677,7 +677,16 @@ public List getRepositories()\n     // Plugins\n     // ----------------------------------------------------------------------\n \n-    public List getPlugins()\n+    public List getReportPlugins()\n+    {\n+        if ( model.getReports() == null )\n+        {\n+            return null;\n+        }\n+        return model.getReports().getPlugins();\n+\n+    }\n+    public List getBuildPlugins()\n     {\n         if ( model.getBuild() == null )\n         {\n@@ -811,9 +820,9 @@ public Xpp3Dom getGoalConfiguration( String pluginGroupId, String pluginArtifact\n         // for now I have to iterate through and see what we have.\n         // ----------------------------------------------------------------------\n \n-        if ( getPlugins() != null )\n+        if ( getBuildPlugins() != null )\n         {\n-            for ( Iterator iterator = getPlugins().iterator(); iterator.hasNext(); )\n+            for ( Iterator iterator = getBuildPlugins().iterator(); iterator.hasNext(); )\n             {\n                 Plugin plugin = (Plugin) iterator.next();\n \n@@ -845,4 +854,5 @@ public List getPluginRepositories()\n     {\n         return model.getPluginRepositories();\n     }\n+\n }",
                "raw_url": "https://github.com/apache/maven-2/raw/3f031d5722ec5799c1fb72711867dda8b02b4b23/maven-project/src/main/java/org/apache/maven/project/MavenProject.java",
                "sha": "ed1bd73b79953432f967eb9448833efcaa9572ae",
                "status": "modified"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/maven-2/blob/3f031d5722ec5799c1fb72711867dda8b02b4b23/maven-project/src/test/java/org/apache/maven/project/canonical/CanonicalProjectBuilderTest.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/maven-2/contents/maven-project/src/test/java/org/apache/maven/project/canonical/CanonicalProjectBuilderTest.java?ref=3f031d5722ec5799c1fb72711867dda8b02b4b23",
                "deletions": 1,
                "filename": "maven-project/src/test/java/org/apache/maven/project/canonical/CanonicalProjectBuilderTest.java",
                "patch": "@@ -49,7 +49,7 @@ public void testProjectBuilder()\n         // Plugins\n         // ----------------------------------------------------------------------\n \n-        List plugins = project.getPlugins();\n+        List plugins = project.getBuildPlugins();\n \n         // Plugin0 [plexus]\n ",
                "raw_url": "https://github.com/apache/maven-2/raw/3f031d5722ec5799c1fb72711867dda8b02b4b23/maven-project/src/test/java/org/apache/maven/project/canonical/CanonicalProjectBuilderTest.java",
                "sha": "d29e424cab4fd689393e6035a7e21e4682fd3d89",
                "status": "modified"
            }
        ],
        "message": "avoid NPE if there are not report plugins defined in the POM when generating the site.\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@168565 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/maven-2/commit/57284e462cb9f55931774a5b9caa453d7deb42e7",
        "repo": "maven-2",
        "unit_tests": [
            "PluginParameterExpressionEvaluatorTest.java",
            "MavenProjectTest.java"
        ]
    },
    "maven-2_484cc50": {
        "bug_id": "maven-2_484cc50",
        "commit": "https://github.com/apache/maven-2/commit/484cc50c1671f718e382f0c690241727936e5023",
        "file": [
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/maven-2/blob/484cc50c1671f718e382f0c690241727936e5023/maven-core/src/main/java/org/apache/maven/usability/ArtifactResolverDiagnoser.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/maven-2/contents/maven-core/src/main/java/org/apache/maven/usability/ArtifactResolverDiagnoser.java?ref=484cc50c1671f718e382f0c690241727936e5023",
                "deletions": 1,
                "filename": "maven-core/src/main/java/org/apache/maven/usability/ArtifactResolverDiagnoser.java",
                "patch": "@@ -50,7 +50,7 @@ public String diagnose( Throwable error )\n \n         IOException ioe = (IOException) DiagnosisUtils.getFromCausality( exception, IOException.class );\n \n-        if ( ioe != null && exception.getMessage().indexOf( ioe.getMessage() ) < 0 )\n+        if ( ioe != null && ioe.getMessage() != null && exception.getMessage().indexOf( ioe.getMessage() ) < 0 )\n         {\n             message.append( \"\\n\\nCaused by I/O exception: \" ).append( ioe.getMessage() );\n         }",
                "raw_url": "https://github.com/apache/maven-2/raw/484cc50c1671f718e382f0c690241727936e5023/maven-core/src/main/java/org/apache/maven/usability/ArtifactResolverDiagnoser.java",
                "sha": "e27820c5ef49d9da0c045c5e2ba07d0ff443e670",
                "status": "modified"
            },
            {
                "additions": 53,
                "blob_url": "https://github.com/apache/maven-2/blob/484cc50c1671f718e382f0c690241727936e5023/maven-core/src/test/java/org/apache/maven/usability/ArtifactResolverDiagnoserTest.java",
                "changes": 53,
                "contents_url": "https://api.github.com/repos/apache/maven-2/contents/maven-core/src/test/java/org/apache/maven/usability/ArtifactResolverDiagnoserTest.java?ref=484cc50c1671f718e382f0c690241727936e5023",
                "deletions": 0,
                "filename": "maven-core/src/test/java/org/apache/maven/usability/ArtifactResolverDiagnoserTest.java",
                "patch": "@@ -0,0 +1,53 @@\n+package org.apache.maven.usability;\n+\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *  http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+import java.io.IOException;\n+\n+import org.apache.maven.artifact.resolver.ArtifactResolutionException;\n+import org.apache.maven.usability.diagnostics.ErrorDiagnoser;\n+import org.codehaus.plexus.PlexusTestCase;\n+\n+/**\n+ * @author Benjamin Bentmann\n+ * @version $Id$\n+ */\n+public class ArtifactResolverDiagnoserTest\n+    extends PlexusTestCase\n+{\n+\n+    /**\n+     * Tests that inner IOException without detail message does not crash diagnoser.\n+     * \n+     * @throws Exception\n+     */\n+    public void testNullMessage()\n+        throws Exception\n+    {\n+        ErrorDiagnoser diagnoser =\n+            (ArtifactResolverDiagnoser) lookup( ErrorDiagnoser.ROLE, \"ArtifactResolverDiagnoser\" );\n+\n+        Throwable error = new ArtifactResolutionException( null, null, null, null, null, null, new IOException() );\n+\n+        assertTrue( diagnoser.canDiagnose( error ) );\n+        diagnoser.diagnose( error );\n+    }\n+\n+}",
                "raw_url": "https://github.com/apache/maven-2/raw/484cc50c1671f718e382f0c690241727936e5023/maven-core/src/test/java/org/apache/maven/usability/ArtifactResolverDiagnoserTest.java",
                "sha": "201306da42b7493c2e518466a291282463ea515a",
                "status": "added"
            }
        ],
        "message": "[MNG-3753] ArtifactResolverDiagnoser.diagnose() fails with NPE if nested IOException has no detail message\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/maven-2/branches/maven-2.2.x@793305 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/maven-2/commit/edb0e166243ee1febc285d6c4593212d87ca8970",
        "repo": "maven-2",
        "unit_tests": [
            "ArtifactResolverDiagnoserTest.java"
        ]
    },
    "maven-2_48f1133": {
        "bug_id": "maven-2_48f1133",
        "commit": "https://github.com/apache/maven-2/commit/48f1133974c4d05ff958d097f9f9607d5136ddd7",
        "file": [
            {
                "additions": 13,
                "blob_url": "https://github.com/apache/maven-2/blob/48f1133974c4d05ff958d097f9f9607d5136ddd7/maven-core/src/main/java/org/apache/maven/cli/MavenCli.java",
                "changes": 18,
                "contents_url": "https://api.github.com/repos/apache/maven-2/contents/maven-core/src/main/java/org/apache/maven/cli/MavenCli.java?ref=48f1133974c4d05ff958d097f9f9607d5136ddd7",
                "deletions": 5,
                "filename": "maven-core/src/main/java/org/apache/maven/cli/MavenCli.java",
                "patch": "@@ -536,16 +536,24 @@ private static void showVersion()\n             Properties properties = new Properties();\n             resourceAsStream = MavenCli.class.getClassLoader().getResourceAsStream(\n                 \"META-INF/maven/org.apache.maven/maven-core/pom.properties\" );\n-            properties.load( resourceAsStream );\n \n-            if( properties.getProperty( \"builtOn\" ) != null )\n+            if ( resourceAsStream != null )\n             {\n-                System.out.println( \"Maven version: \" + properties.getProperty( \"version\", \"unknown\" )\n-                    + \" built on \" + properties.getProperty( \"builtOn\" ) );\n+                properties.load( resourceAsStream );\n+\n+                if( properties.getProperty( \"builtOn\" ) != null )\n+                {\n+                    System.out.println( \"Maven version: \" + properties.getProperty( \"version\", \"unknown\" )\n+                        + \" built on \" + properties.getProperty( \"builtOn\" ) );\n+                }\n+                else\n+                {\n+                    System.out.println( \"Maven version: \" + properties.getProperty( \"version\", \"unknown\" ) );\n+                }\n             }\n             else\n             {\n-                System.out.println( \"Maven version: \" + properties.getProperty( \"version\", \"unknown\" ) );\n+                System.out.println( \"Maven version: unknown\" );\n             }\n \n             System.out.println( \"Java version: \" + System.getProperty( \"java.version\", \"<unknown java version>\" ) );",
                "raw_url": "https://github.com/apache/maven-2/raw/48f1133974c4d05ff958d097f9f9607d5136ddd7/maven-core/src/main/java/org/apache/maven/cli/MavenCli.java",
                "sha": "70fd6c7f5392febb84e7143c12bfa464c5caffac",
                "status": "modified"
            }
        ],
        "message": "o fixed potential NPE\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/components/branches/maven-2.0.x@633053 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/maven-2/commit/288a35989545921074b4d5ad34d9214141211bfd",
        "repo": "maven-2",
        "unit_tests": [
            "MavenCliTest.java"
        ]
    },
    "maven-2_51f23d9": {
        "bug_id": "maven-2_51f23d9",
        "commit": "https://github.com/apache/maven-2/commit/51f23d93d9234ba0c5c5c95b0724494c006e6c09",
        "file": [
            {
                "additions": 7,
                "blob_url": "https://github.com/apache/maven-2/blob/51f23d93d9234ba0c5c5c95b0724494c006e6c09/maven-project/src/main/java/org/apache/maven/project/ProjectSorter.java",
                "changes": 11,
                "contents_url": "https://api.github.com/repos/apache/maven-2/contents/maven-project/src/main/java/org/apache/maven/project/ProjectSorter.java?ref=51f23d93d9234ba0c5c5c95b0724494c006e6c09",
                "deletions": 4,
                "filename": "maven-project/src/main/java/org/apache/maven/project/ProjectSorter.java",
                "patch": "@@ -175,11 +175,14 @@ private void addEdgeWithParentCheck( Map projectMap, String extensionId, MavenPr\n         project.addProjectReference( extProject );\n \n         MavenProject extParent = extProject.getParent();\n-        String parentId = ArtifactUtils.versionlessKey( extParent.getGroupId(), extParent.getArtifactId() );\n-        // Don't add edge from parent to extension if a reverse edge already exists\n-        if ( !dag.hasEdge( extensionId, id ) || !parentId.equals( id ) )\n+        if ( extParent != null )\n         {\n-            dag.addEdge( id, extensionId );\n+            String parentId = ArtifactUtils.versionlessKey( extParent.getGroupId(), extParent.getArtifactId() );\n+            // Don't add edge from parent to extension if a reverse edge already exists\n+            if ( !dag.hasEdge( extensionId, id ) || !parentId.equals( id ) )\n+            {\n+                dag.addEdge( id, extensionId );\n+            }\n         }\n     }\n ",
                "raw_url": "https://github.com/apache/maven-2/raw/51f23d93d9234ba0c5c5c95b0724494c006e6c09/maven-project/src/main/java/org/apache/maven/project/ProjectSorter.java",
                "sha": "d01bb34be95a01330aba7bd4f5b5024f6a218d80",
                "status": "modified"
            }
        ],
        "message": "Fixing NPE.\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@328898 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/maven-2/commit/58e96169a60ad7a720abf6efe8e522c98bf058d8",
        "repo": "maven-2",
        "unit_tests": [
            "ProjectSorterTest.java"
        ]
    },
    "maven-2_677a0dd": {
        "bug_id": "maven-2_677a0dd",
        "commit": "https://github.com/apache/maven-2/commit/677a0dd7d5767193b378d2446eabeeb592e64c9e",
        "file": [
            {
                "additions": 14,
                "blob_url": "https://github.com/apache/maven-2/blob/677a0dd7d5767193b378d2446eabeeb592e64c9e/maven-project/src/main/java/org/apache/maven/project/DefaultMavenProjectBuilder.java",
                "changes": 20,
                "contents_url": "https://api.github.com/repos/apache/maven-2/contents/maven-project/src/main/java/org/apache/maven/project/DefaultMavenProjectBuilder.java?ref=677a0dd7d5767193b378d2446eabeeb592e64c9e",
                "deletions": 6,
                "filename": "maven-project/src/main/java/org/apache/maven/project/DefaultMavenProjectBuilder.java",
                "patch": "@@ -159,15 +159,23 @@ public MavenProject buildWithDependencies( File projectDescriptor, ArtifactRepos\n \n     private Map createManagedVersionMap( DependencyManagement dependencyManagement )\n     {\n-        Map map = new HashMap();\n-        for ( Iterator i = dependencyManagement.getDependencies().iterator(); i.hasNext(); )\n+        Map map;\n+        if ( dependencyManagement != null && dependencyManagement.getDependencies() != null )\n         {\n-            Dependency d = (Dependency) i.next();\n+            map = new HashMap();\n+            for ( Iterator i = dependencyManagement.getDependencies().iterator(); i.hasNext(); )\n+            {\n+                Dependency d = (Dependency) i.next();\n \n-            Artifact artifact = artifactFactory.createArtifact( d.getGroupId(), d.getArtifactId(), d.getVersion(),\n-                                                                d.getScope(), d.getType(), null );\n+                Artifact artifact = artifactFactory.createArtifact( d.getGroupId(), d.getArtifactId(), d.getVersion(),\n+                                                                    d.getScope(), d.getType(), null );\n \n-            map.put( d.getManagementKey(), artifact );\n+                map.put( d.getManagementKey(), artifact );\n+            }\n+        }\n+        else\n+        {\n+            map = Collections.EMPTY_MAP;\n         }\n         return map;\n     }",
                "raw_url": "https://github.com/apache/maven-2/raw/677a0dd7d5767193b378d2446eabeeb592e64c9e/maven-project/src/main/java/org/apache/maven/project/DefaultMavenProjectBuilder.java",
                "sha": "c5984dc7786c6b7aa0046314357632a3dc2f35d4",
                "status": "modified"
            }
        ],
        "message": "fix NPE\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@191800 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/maven-2/commit/c3d0ba0846953cc964faa8f0f32be4dd298dafe1",
        "repo": "maven-2",
        "unit_tests": [
            "DefaultMavenProjectBuilderTest.java"
        ]
    },
    "maven-2_6c0064a": {
        "bug_id": "maven-2_6c0064a",
        "commit": "https://github.com/apache/maven-2/commit/6c0064a80023606134db0476aa4802bbca931688",
        "file": [
            {
                "additions": 109,
                "blob_url": "https://github.com/apache/maven-2/blob/6c0064a80023606134db0476aa4802bbca931688/maven-artifact-manager/src/main/java/org/apache/maven/artifact/manager/DefaultWagonManager.java",
                "changes": 206,
                "contents_url": "https://api.github.com/repos/apache/maven-2/contents/maven-artifact-manager/src/main/java/org/apache/maven/artifact/manager/DefaultWagonManager.java?ref=6c0064a80023606134db0476aa4802bbca931688",
                "deletions": 97,
                "filename": "maven-artifact-manager/src/main/java/org/apache/maven/artifact/manager/DefaultWagonManager.java",
                "patch": "@@ -19,19 +19,6 @@\n  * under the License.\n  */\n \n-import java.io.File;\n-import java.io.IOException;\n-import java.net.MalformedURLException;\n-import java.net.URL;\n-import java.security.NoSuchAlgorithmException;\n-import java.util.Collection;\n-import java.util.HashMap;\n-import java.util.Iterator;\n-import java.util.LinkedHashMap;\n-import java.util.List;\n-import java.util.Map;\n-import java.util.Set;\n-\n import org.apache.maven.artifact.Artifact;\n import org.apache.maven.artifact.metadata.ArtifactMetadata;\n import org.apache.maven.artifact.repository.ArtifactRepository;\n@@ -66,12 +53,25 @@\n import org.codehaus.plexus.util.FileUtils;\n import org.codehaus.plexus.util.xml.Xpp3Dom;\n \n+import java.io.File;\n+import java.io.IOException;\n+import java.net.MalformedURLException;\n+import java.net.URL;\n+import java.security.NoSuchAlgorithmException;\n+import java.util.Collection;\n+import java.util.HashMap;\n+import java.util.Iterator;\n+import java.util.LinkedHashMap;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Set;\n+\n public class DefaultWagonManager\n     extends AbstractLogEnabled\n     implements WagonManager, Contextualizable\n {\n     private static final String WILDCARD = \"*\";\n-    \n+\n     private static final String EXTERNAL_WILDCARD = \"external:*\";\n \n     private PlexusContainer container;\n@@ -409,22 +409,6 @@ private void getRemoteFile( ArtifactRepository repository,\n             wagon.addTransferListener( downloadMonitor );\n         }\n \n-        // TODO: configure on repository\n-        ChecksumObserver md5ChecksumObserver;\n-        ChecksumObserver sha1ChecksumObserver;\n-        try\n-        {\n-            md5ChecksumObserver = new ChecksumObserver( \"MD5\" );\n-            wagon.addTransferListener( md5ChecksumObserver );\n-\n-            sha1ChecksumObserver = new ChecksumObserver( \"SHA-1\" );\n-            wagon.addTransferListener( sha1ChecksumObserver );\n-        }\n-        catch ( NoSuchAlgorithmException e )\n-        {\n-            throw new TransferFailedException( \"Unable to add checksum methods: \" + e.getMessage(), e );\n-        }\n-\n         File temp = new File( destination + \".tmp\" );\n         temp.deleteOnExit();\n \n@@ -446,100 +430,128 @@ private void getRemoteFile( ArtifactRepository repository,\n                 // reset the retry flag.\n                 retry = false;\n \n-                // This should take care of creating destination directory now on\n-                if ( destination.exists() && !force )\n+                // TODO: configure on repository\n+                ChecksumObserver md5ChecksumObserver = null;\n+                ChecksumObserver sha1ChecksumObserver = null;\n+                try\n                 {\n-                    try\n+                    md5ChecksumObserver = new ChecksumObserver( \"MD5\" );\n+                    wagon.addTransferListener( md5ChecksumObserver );\n+\n+                    sha1ChecksumObserver = new ChecksumObserver( \"SHA-1\" );\n+                    wagon.addTransferListener( sha1ChecksumObserver );\n+\n+                    // This should take care of creating destination directory now on\n+                    if ( destination.exists() && !force )\n                     {\n-                        downloaded = wagon.getIfNewer( remotePath, temp, destination.lastModified() );\n-                        if ( !downloaded )\n+                        try\n+                        {\n+                            downloaded = wagon.getIfNewer( remotePath, temp, destination.lastModified() );\n+                            if ( !downloaded )\n+                            {\n+                                // prevent additional checks of this artifact until it expires again\n+                                destination.setLastModified( System.currentTimeMillis() );\n+                            }\n+                        }\n+                        catch ( UnsupportedOperationException e )\n                         {\n-                            // prevent additional checks of this artifact until it expires again\n-                            destination.setLastModified( System.currentTimeMillis() );\n+                            // older wagons throw this. Just get() instead\n+                            wagon.get( remotePath, temp );\n+                            downloaded = true;\n                         }\n                     }\n-                    catch ( UnsupportedOperationException e )\n+                    else\n                     {\n-                        // older wagons throw this. Just get() instead\n                         wagon.get( remotePath, temp );\n                         downloaded = true;\n                     }\n-                }\n-                else\n-                {\n-                    wagon.get( remotePath, temp );\n-                    downloaded = true;\n-                }\n \n-                if ( downloaded )\n-                {\n-                    // keep the checksum files from showing up on the download monitor...\n-                    if ( downloadMonitor != null )\n+                    if ( downloaded )\n                     {\n-                        wagon.removeTransferListener( downloadMonitor );\n-                    }\n-\n-                    // try to verify the SHA-1 checksum for this file.\n-                    try\n-                    {\n-                        verifyChecksum( sha1ChecksumObserver, destination, temp, remotePath, \".sha1\", wagon );\n-                    }\n-                    catch ( ChecksumFailedException e )\n-                    {\n-                        // if we catch a ChecksumFailedException, it means the transfer/read succeeded, but the checksum\n-                        // doesn't match. This could be a problem with the server (ibiblio HTTP-200 error page), so we'll\n-                        // try this up to two times. On the second try, we'll handle it as a bona-fide error, based on the\n-                        // repository's checksum checking policy.\n-                        if ( firstRun )\n-                        {\n-                            getLogger().warn( \"*** CHECKSUM FAILED - \" + e.getMessage() + \" - RETRYING\" );\n-                            retry = true;\n-                        }\n-                        else\n+                        // keep the checksum files from showing up on the download monitor...\n+                        if ( downloadMonitor != null )\n                         {\n-                            handleChecksumFailure( checksumPolicy, e.getMessage(), e.getCause() );\n+                            wagon.removeTransferListener( downloadMonitor );\n                         }\n-                    }\n-                    catch ( ResourceDoesNotExistException sha1TryException )\n-                    {\n-                        getLogger().debug( \"SHA1 not found, trying MD5\", sha1TryException );\n \n-                        // if this IS NOT a ChecksumFailedException, it was a problem with transfer/read of the checksum\n-                        // file...we'll try again with the MD5 checksum.\n+                        // try to verify the SHA-1 checksum for this file.\n                         try\n                         {\n-                            verifyChecksum( md5ChecksumObserver, destination, temp, remotePath, \".md5\", wagon );\n+                            verifyChecksum( sha1ChecksumObserver, destination, temp, remotePath, \".sha1\", wagon );\n                         }\n                         catch ( ChecksumFailedException e )\n                         {\n-                            // if we also fail to verify based on the MD5 checksum, and the checksum transfer/read\n-                            // succeeded, then we need to determine whether to retry or handle it as a failure.\n+                            // if we catch a ChecksumFailedException, it means the transfer/read succeeded, but the checksum\n+                            // doesn't match. This could be a problem with the server (ibiblio HTTP-200 error page), so we'll\n+                            // try this up to two times. On the second try, we'll handle it as a bona-fide error, based on the\n+                            // repository's checksum checking policy.\n                             if ( firstRun )\n                             {\n+                                getLogger().warn( \"*** CHECKSUM FAILED - \" + e.getMessage() + \" - RETRYING\" );\n                                 retry = true;\n                             }\n                             else\n                             {\n                                 handleChecksumFailure( checksumPolicy, e.getMessage(), e.getCause() );\n                             }\n                         }\n-                        catch ( ResourceDoesNotExistException md5TryException )\n+                        catch ( ResourceDoesNotExistException sha1TryException )\n+                        {\n+                            getLogger().debug( \"SHA1 not found, trying MD5\", sha1TryException );\n+\n+                            // if this IS NOT a ChecksumFailedException, it was a problem with transfer/read of the checksum\n+                            // file...we'll try again with the MD5 checksum.\n+                            try\n+                            {\n+                                verifyChecksum( md5ChecksumObserver, destination, temp, remotePath, \".md5\", wagon );\n+                            }\n+                            catch ( ChecksumFailedException e )\n+                            {\n+                                // if we also fail to verify based on the MD5 checksum, and the checksum transfer/read\n+                                // succeeded, then we need to determine whether to retry or handle it as a failure.\n+                                if ( firstRun )\n+                                {\n+                                    retry = true;\n+                                }\n+                                else\n+                                {\n+                                    handleChecksumFailure( checksumPolicy, e.getMessage(), e.getCause() );\n+                                }\n+                            }\n+                            catch ( ResourceDoesNotExistException md5TryException )\n+                            {\n+                                // this was a failed transfer, and we don't want to retry.\n+                                handleChecksumFailure( checksumPolicy, \"Error retrieving checksum file for \" + remotePath,\n+                                                       md5TryException );\n+                            }\n+                        }\n+\n+                        // reinstate the download monitor...\n+                        if ( downloadMonitor != null )\n                         {\n-                            // this was a failed transfer, and we don't want to retry.\n-                            handleChecksumFailure( checksumPolicy, \"Error retrieving checksum file for \" + remotePath,\n-                                                   md5TryException );\n+                            wagon.addTransferListener( downloadMonitor );\n                         }\n                     }\n \n-                    // reinstate the download monitor...\n-                    if ( downloadMonitor != null )\n+                    // unset the firstRun flag, so we don't get caught in an infinite loop...\n+                    firstRun = false;\n+                }\n+                catch ( NoSuchAlgorithmException e )\n+                {\n+                    throw new TransferFailedException( \"Unable to add checksum methods: \" + e.getMessage(), e );\n+                }\n+                finally\n+                {\n+                    if ( sha1ChecksumObserver != null )\n                     {\n-                        wagon.addTransferListener( downloadMonitor );\n+                        wagon.removeTransferListener( sha1ChecksumObserver );\n                     }\n-                }\n \n-                // unset the firstRun flag, so we don't get caught in an infinite loop...\n-                firstRun = false;\n+                    if ( md5ChecksumObserver != null )\n+                    {\n+                        wagon.removeTransferListener( md5ChecksumObserver );\n+                    }\n+                }\n             }\n         }\n         catch ( ConnectionException e )\n@@ -695,7 +707,7 @@ private void verifyChecksum( ChecksumObserver checksumObserver,\n         }\n     }\n \n-    \n+\n     private void disconnectWagon( Wagon wagon )\n     {\n         try\n@@ -735,7 +747,7 @@ public AuthenticationInfo getAuthenticationInfo( String id )\n     /**\n      * This method finds a matching mirror for the selected repository. If there is an exact match, this will be used.\n      * If there is no exact match, then the list of mirrors is examined to see if a pattern applies.\n-     * \n+     *\n      * @param originalRepository See if there is a mirror for this repository.\n      * @return the selected mirror or null if none are found.\n      */\n@@ -764,13 +776,13 @@ public ArtifactRepository getMirror( ArtifactRepository originalRepository )\n     }\n \n     /**\n-     * This method checks if the pattern matches the originalRepository. \n-     * Valid patterns: \n+     * This method checks if the pattern matches the originalRepository.\n+     * Valid patterns:\n      * * = everything\n      * external:* = everything not on the localhost and not file based.\n      * repo,repo1 = repo or repo1\n      * *,!repo1 = everything except repo1\n-     * \n+     *\n      * @param originalRepository to compare for a match.\n      * @param pattern used for match. Currently only '*' is supported.\n      * @return true if the repository is a match to this pattern.\n@@ -827,7 +839,7 @@ else if ( WILDCARD.equals( repo ) )\n \n     /**\n      * Checks the URL to see if this repository refers to an external repository\n-     * \n+     *\n      * @param originalRepository\n      * @return true if external.\n      */\n@@ -845,10 +857,10 @@ public boolean isExternalRepo( ArtifactRepository originalRepository )\n             return false;\n         }\n     }\n-    \n+\n     /**\n      * Set the proxy used for a particular protocol.\n-     * \n+     *\n      * @param protocol the protocol (required)\n      * @param host the proxy host name (required)\n      * @param port the proxy port (required)",
                "raw_url": "https://github.com/apache/maven-2/raw/6c0064a80023606134db0476aa4802bbca931688/maven-artifact-manager/src/main/java/org/apache/maven/artifact/manager/DefaultWagonManager.java",
                "sha": "4c2309d510c4a0e440d53fc645a1d148ec6d3774",
                "status": "modified"
            }
        ],
        "message": "Add code to mirror the modifications on trunk, where checksum observers are added/removed per iteration when attempting to download a file, since 1.0-beta-3 of wagon has code where a transfer error will set the internal digest instance to null rather than resetting it; successive attempts to use the observer after that point will cause NPEs.\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/components/branches/maven-2.0.x@673521 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/maven-2/commit/9f8bd2a13ea3ddf2c1f30720e45ffcb45d5a3ce3",
        "repo": "maven-2",
        "unit_tests": [
            "DefaultWagonManagerTest.java"
        ]
    },
    "maven-2_883e9e5": {
        "bug_id": "maven-2_883e9e5",
        "commit": "https://github.com/apache/maven-2/commit/883e9e53dba6930e79ab1157b561a4984205f0d4",
        "file": [
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/maven-2/blob/883e9e53dba6930e79ab1157b561a4984205f0d4/maven-project/src/main/java/org/apache/maven/project/artifact/MavenMetadataSource.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/maven-2/contents/maven-project/src/main/java/org/apache/maven/project/artifact/MavenMetadataSource.java?ref=883e9e53dba6930e79ab1157b561a4984205f0d4",
                "deletions": 1,
                "filename": "maven-project/src/main/java/org/apache/maven/project/artifact/MavenMetadataSource.java",
                "patch": "@@ -338,7 +338,7 @@ public List retrieveAvailableVersions( Artifact artifact, ArtifactRepository loc\n \n         List versions;\n         Metadata repoMetadata = metadata.getMetadata();\n-        if ( repoMetadata != null )\n+        if ( repoMetadata != null && repoMetadata.getVersioning() != null )\n         {\n             List metadataVersions = repoMetadata.getVersioning().getVersions();\n             versions = new ArrayList( metadataVersions.size() );",
                "raw_url": "https://github.com/apache/maven-2/raw/883e9e53dba6930e79ab1157b561a4984205f0d4/maven-project/src/main/java/org/apache/maven/project/artifact/MavenMetadataSource.java",
                "sha": "bb9f4d8c9c99948ab540362a88e0af8b126d2a74",
                "status": "modified"
            }
        ],
        "message": "avoid NPE\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@291582 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/maven-2/commit/e5070aa9b253be41fb9b4757d96b3431eeea58bf",
        "repo": "maven-2",
        "unit_tests": [
            "MavenMetadataSourceTest.java"
        ]
    },
    "maven-2_8cf70fa": {
        "bug_id": "maven-2_8cf70fa",
        "commit": "https://github.com/apache/maven-2/commit/8cf70faba0e69f316e00bb5cf39c6358048e8ad4",
        "file": [
            {
                "additions": 12,
                "blob_url": "https://github.com/apache/maven-2/blob/8cf70faba0e69f316e00bb5cf39c6358048e8ad4/maven-artifact/src/main/java/org/apache/maven/artifact/resolver/DefaultArtifactCollector.java",
                "changes": 14,
                "contents_url": "https://api.github.com/repos/apache/maven-2/contents/maven-artifact/src/main/java/org/apache/maven/artifact/resolver/DefaultArtifactCollector.java?ref=8cf70faba0e69f316e00bb5cf39c6358048e8ad4",
                "deletions": 2,
                "filename": "maven-artifact/src/main/java/org/apache/maven/artifact/resolver/DefaultArtifactCollector.java",
                "patch": "@@ -220,8 +220,18 @@ private void recurse( ResolutionNode node, Map resolvedArtifacts, ManagedVersion\n                                     }\n                                 }\n                                 //end hack\n-                                resetArtifact.selectVersion( resetArtifact.getVersionRange().matchVersion(\n-                                                                                                           resetArtifact.getAvailableVersions() ).toString() );\n+                               \n+                                //MNG-2861: match version can return null\n+                                ArtifactVersion selectedVersion = resetArtifact.getVersionRange().matchVersion( resetArtifact.getAvailableVersions() );\n+                                if (selectedVersion != null)\n+                                {\n+                                  resetArtifact.selectVersion( selectedVersion.toString() );\n+                                }\n+                                else\n+                                {\n+                                  throw new OverConstrainedVersionException(\" Unable to find a version in \"+ resetArtifact.getAvailableVersions()+\" to match the range \"+ resetArtifact.getVersionRange(), resetArtifact);\n+                                }\n+                                \n                                 fireEvent( ResolutionListener.SELECT_VERSION_FROM_RANGE, listeners, resetNodes[j] );\n                             }\n                         }",
                "raw_url": "https://github.com/apache/maven-2/raw/8cf70faba0e69f316e00bb5cf39c6358048e8ad4/maven-artifact/src/main/java/org/apache/maven/artifact/resolver/DefaultArtifactCollector.java",
                "sha": "ed549f7c1823d2e06d835f3e8cefaaa62d4c6374",
                "status": "modified"
            }
        ],
        "message": "MNG-2861: intermediate fix to produce better logging than an NPE\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/components/branches/maven-2.0.x@635645 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/maven-2/commit/7dfac68dd7e69cf65b941431028e40330e09df94",
        "repo": "maven-2",
        "unit_tests": [
            "DefaultArtifactCollectorTest.java"
        ]
    },
    "maven-2_8e279f8": {
        "bug_id": "maven-2_8e279f8",
        "commit": "https://github.com/apache/maven-2/commit/8e279f87e1ac9ce7e69988f8801c4460266fc09c",
        "file": [
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/maven-2/blob/8e279f87e1ac9ce7e69988f8801c4460266fc09c/maven-core/src/main/java/org/apache/maven/plugin/PluginParameterExpressionEvaluator.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/maven-2/contents/maven-core/src/main/java/org/apache/maven/plugin/PluginParameterExpressionEvaluator.java?ref=8e279f87e1ac9ce7e69988f8801c4460266fc09c",
                "deletions": 1,
                "filename": "maven-core/src/main/java/org/apache/maven/plugin/PluginParameterExpressionEvaluator.java",
                "patch": "@@ -112,7 +112,7 @@ else if ( \"#settings\".equals( expression ) )\n         }\n         else if ( expression.equals( \"#basedir\" ) )\n         {\n-            value = context.getProject().getFile().getParentFile().getAbsolutePath();\n+            value = context.getProject().getBasedir().getAbsolutePath();\n         }\n         else if ( expression.startsWith( \"#basedir\" ) )\n         {",
                "raw_url": "https://github.com/apache/maven-2/raw/8e279f87e1ac9ce7e69988f8801c4460266fc09c/maven-core/src/main/java/org/apache/maven/plugin/PluginParameterExpressionEvaluator.java",
                "sha": "2d723922c6e681b4090ef924c6c2935589af9978",
                "status": "modified"
            },
            {
                "additions": 8,
                "blob_url": "https://github.com/apache/maven-2/blob/8e279f87e1ac9ce7e69988f8801c4460266fc09c/maven-core/src/main/java/org/apache/maven/project/MavenProject.java",
                "changes": 9,
                "contents_url": "https://api.github.com/repos/apache/maven-2/contents/maven-core/src/main/java/org/apache/maven/project/MavenProject.java?ref=8e279f87e1ac9ce7e69988f8801c4460266fc09c",
                "deletions": 1,
                "filename": "maven-core/src/main/java/org/apache/maven/project/MavenProject.java",
                "patch": "@@ -132,7 +132,14 @@ public void setFile( File file )\n \n     public File getBasedir()\n     {\n-        return getFile().getParentFile();\n+        if ( getFile() != null )\n+        {\n+            return getFile().getParentFile();\n+        }\n+        else\n+        {\n+            return new File( System.getProperty( \"user.dir\" ) );\n+        }\n     }\n \n     public void setDependencies( List denpendencies )",
                "raw_url": "https://github.com/apache/maven-2/raw/8e279f87e1ac9ce7e69988f8801c4460266fc09c/maven-core/src/main/java/org/apache/maven/project/MavenProject.java",
                "sha": "93745033090548c6e70eeac91ac8aff4f7d6784e",
                "status": "modified"
            }
        ],
        "message": "avoid NPE when there is no project file\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@163991 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/maven-2/commit/666c60dea6668db3dae494f38241e6cfd3f42730",
        "repo": "maven-2",
        "unit_tests": [
            "PluginParameterExpressionEvaluatorTest.java",
            "MavenProjectTest.java"
        ]
    },
    "maven-2_a49c4af": {
        "bug_id": "maven-2_a49c4af",
        "commit": "https://github.com/apache/maven-2/commit/a49c4afdc1c44a9f917f894d9e83874c5883e736",
        "file": [
            {
                "additions": 5,
                "blob_url": "https://github.com/apache/maven-2/blob/a49c4afdc1c44a9f917f894d9e83874c5883e736/maven-project/src/main/java/org/apache/maven/project/DefaultMavenProjectBuilder.java",
                "changes": 5,
                "contents_url": "https://api.github.com/repos/apache/maven-2/contents/maven-project/src/main/java/org/apache/maven/project/DefaultMavenProjectBuilder.java?ref=a49c4afdc1c44a9f917f894d9e83874c5883e736",
                "deletions": 0,
                "filename": "maven-project/src/main/java/org/apache/maven/project/DefaultMavenProjectBuilder.java",
                "patch": "@@ -257,6 +257,11 @@ public MavenProject buildStandaloneSuperProject( ArtifactRepository localReposit\n \n \n         List activeProfiles;\n+        \n+        if ( profileManager == null )\n+        {\n+        \tprofileManager = new DefaultProfileManager( container );\n+        }\n \n         profileManager.addProfiles( superModel.getProfiles() );\n ",
                "raw_url": "https://github.com/apache/maven-2/raw/a49c4afdc1c44a9f917f894d9e83874c5883e736/maven-project/src/main/java/org/apache/maven/project/DefaultMavenProjectBuilder.java",
                "sha": "855fb5feeab48340db9752dbc9d106e85ea88f72",
                "status": "modified"
            }
        ],
        "message": "Fixing NPE from MavenMetadataSource to buildStandaloneSuperProject(), where the profile manager is null.\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/components/branches/maven-2.0.x@453405 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/maven-2/commit/b511407dce32a373fdc3dbe131e427e87a16c35e",
        "repo": "maven-2",
        "unit_tests": [
            "DefaultMavenProjectBuilderTest.java"
        ]
    },
    "maven-2_a7ea4e9": {
        "bug_id": "maven-2_a7ea4e9",
        "commit": "https://github.com/apache/maven-2/commit/a7ea4e92d404b7e21be20b2cb61455d590153895",
        "file": [
            {
                "additions": 11,
                "blob_url": "https://github.com/apache/maven-2/blob/a7ea4e92d404b7e21be20b2cb61455d590153895/maven-project/src/main/java/org/apache/maven/project/DefaultMavenProjectBuilder.java",
                "changes": 20,
                "contents_url": "https://api.github.com/repos/apache/maven-2/contents/maven-project/src/main/java/org/apache/maven/project/DefaultMavenProjectBuilder.java?ref=a7ea4e92d404b7e21be20b2cb61455d590153895",
                "deletions": 9,
                "filename": "maven-project/src/main/java/org/apache/maven/project/DefaultMavenProjectBuilder.java",
                "patch": "@@ -1096,20 +1096,22 @@ else if ( StringUtils.isEmpty( parentModel.getVersion() ) )\n                         {\n                             getLogger().debug( \"Parent-POM: \" + parentModel.getId() + \" for project: \" + project.getId() + \" cannot be loaded from relative path: \" + parentDescriptor + \"; path does not exist.\" );\n                         }\n-\n-                        parentDescriptor = null;\n                     }\n                 }\n \n-                try\n-                {\n-                    parentDescriptor = parentDescriptor.getCanonicalFile();\n-                }\n-                catch ( IOException e )\n+                if ( parentDescriptor != null )\n                 {\n-                    getLogger().debug( \"Failed to canonicalize potential parent POM: \\'\" + parentDescriptor + \"\\'\", e );\n+                    try\n+                    {\n+                        parentDescriptor = parentDescriptor.getCanonicalFile();\n+                    }\n+                    catch ( IOException e )\n+                    {\n+                        getLogger().debug( \"Failed to canonicalize potential parent POM: \\'\" + parentDescriptor + \"\\'\",\n+                                           e );\n \n-                    parentDescriptor = null;\n+                        parentDescriptor = null;\n+                    }\n                 }\n \n                 if ( parentDescriptor != null && parentDescriptor.exists() )",
                "raw_url": "https://github.com/apache/maven-2/raw/a7ea4e92d404b7e21be20b2cb61455d590153895/maven-project/src/main/java/org/apache/maven/project/DefaultMavenProjectBuilder.java",
                "sha": "7ed2f63751b9e26673dc5f5d26c805ed3dd92dfe",
                "status": "modified"
            }
        ],
        "message": "MNG-2746 fixing an obvious NPE when parent path is a directory and pom is not found. Also reported in MNGECLIPSE-184 and CONTINUUM-1000\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/components/branches/maven-2.0.x@494084 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/maven-2/commit/413ba58306818f9cb54b9e408c704404491cdc11",
        "repo": "maven-2",
        "unit_tests": [
            "DefaultMavenProjectBuilderTest.java"
        ]
    },
    "maven-2_ab362dc": {
        "bug_id": "maven-2_ab362dc",
        "commit": "https://github.com/apache/maven-2/commit/ab362dcb3234c9c51c64c8b2b44223ec70ffcb24",
        "file": [
            {
                "additions": 13,
                "blob_url": "https://github.com/apache/maven-2/blob/ab362dcb3234c9c51c64c8b2b44223ec70ffcb24/maven-project/src/main/java/org/apache/maven/project/MavenProject.java",
                "changes": 13,
                "contents_url": "https://api.github.com/repos/apache/maven-2/contents/maven-project/src/main/java/org/apache/maven/project/MavenProject.java?ref=ab362dcb3234c9c51c64c8b2b44223ec70ffcb24",
                "deletions": 0,
                "filename": "maven-project/src/main/java/org/apache/maven/project/MavenProject.java",
                "patch": "@@ -77,6 +77,12 @@\n  */\n public class MavenProject\n {\n+    public static final String EMPTY_PROJECT_GROUP_ID = \"unknown\";\n+    \n+    public static final String EMPTY_PROJECT_ARTIFACT_ID = \"empty-project\";\n+    \n+    public static final String EMPTY_PROJECT_VERSION = \"0\";\n+    \n     private Model model;\n \n     private MavenProject parent;\n@@ -140,6 +146,13 @@\n \n     public MavenProject()\n     {\n+        Model model = new Model();\n+        \n+        model.setGroupId( EMPTY_PROJECT_GROUP_ID );\n+        model.setArtifactId( EMPTY_PROJECT_ARTIFACT_ID );\n+        model.setVersion( EMPTY_PROJECT_VERSION );\n+        \n+        this.model = model;\n     }\n \n     public MavenProject( Model model )",
                "raw_url": "https://github.com/apache/maven-2/raw/ab362dcb3234c9c51c64c8b2b44223ec70ffcb24/maven-project/src/main/java/org/apache/maven/project/MavenProject.java",
                "sha": "e6b675e3c15613beb73380fd380a6729de92d8dc",
                "status": "modified"
            },
            {
                "additions": 9,
                "blob_url": "https://github.com/apache/maven-2/blob/ab362dcb3234c9c51c64c8b2b44223ec70ffcb24/maven-project/src/test/java/org/apache/maven/project/MavenProjectTest.java",
                "changes": 9,
                "contents_url": "https://api.github.com/repos/apache/maven-2/contents/maven-project/src/test/java/org/apache/maven/project/MavenProjectTest.java?ref=ab362dcb3234c9c51c64c8b2b44223ec70ffcb24",
                "deletions": 0,
                "filename": "maven-project/src/test/java/org/apache/maven/project/MavenProjectTest.java",
                "patch": "@@ -24,6 +24,15 @@\n public class MavenProjectTest\n     extends AbstractMavenProjectTestCase\n {\n+    \n+    public void testEmptyConstructor()\n+    {\n+        MavenProject project = new MavenProject();\n+        \n+        assertEquals( MavenProject.EMPTY_PROJECT_GROUP_ID + \":\" + MavenProject.EMPTY_PROJECT_ARTIFACT_ID + \":jar:\"\n+            + MavenProject.EMPTY_PROJECT_VERSION, project.getId() );\n+    }\n+    \n     public void testCopyConstructor() throws Exception\n     {\n         File f = getFileForClasspathResource( \"canonical-pom.xml\" );",
                "raw_url": "https://github.com/apache/maven-2/raw/ab362dcb3234c9c51c64c8b2b44223ec70ffcb24/maven-project/src/test/java/org/apache/maven/project/MavenProjectTest.java",
                "sha": "79c57c447174247c4a1de99f8388e3928ca1bede",
                "status": "modified"
            }
        ],
        "message": "Fixing empty constructor to avoid NPEs in resulting MavenProject.\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/components/branches/maven-2.0.x@389201 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/maven-2/commit/19e13d47c2a46aeb3e0972a1d3dceb7bab60d961",
        "repo": "maven-2",
        "unit_tests": [
            "MavenProjectTest.java"
        ]
    },
    "maven-2_b392f19": {
        "bug_id": "maven-2_b392f19",
        "commit": "https://github.com/apache/maven-2/commit/b392f199fb8d60fa1f6a9c0c31e0da72f98e13d9",
        "file": [
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/maven-2/blob/b392f199fb8d60fa1f6a9c0c31e0da72f98e13d9/maven-artifact/src/main/java/org/apache/maven/artifact/DefaultArtifact.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/maven-2/contents/maven-artifact/src/main/java/org/apache/maven/artifact/DefaultArtifact.java?ref=b392f199fb8d60fa1f6a9c0c31e0da72f98e13d9",
                "deletions": 1,
                "filename": "maven-artifact/src/main/java/org/apache/maven/artifact/DefaultArtifact.java",
                "patch": "@@ -305,7 +305,7 @@ else if ( !a.getType().equals( type ) )\n         {\n             return false;\n         }\n-        else if ( classifier == null ? a.getClassifier() != null : !a.getClassifier().equals( classifier ) )\n+        else if ( a.getClassifier() == null ? classifier != null : !a.getClassifier().equals( classifier ) )\n         {\n             return false;\n         }",
                "raw_url": "https://github.com/apache/maven-2/raw/b392f199fb8d60fa1f6a9c0c31e0da72f98e13d9/maven-artifact/src/main/java/org/apache/maven/artifact/DefaultArtifact.java",
                "sha": "0e45e3296ce1754aacbdce5166816903ca623ea8",
                "status": "modified"
            }
        ],
        "message": "prevent NPE in equals()\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@349699 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/maven-2/commit/1bd7f792fcdd69c6b92b425f0d3b4c93815e0436",
        "repo": "maven-2",
        "unit_tests": [
            "DefaultArtifactTest.java"
        ]
    },
    "maven-2_cd8108f": {
        "bug_id": "maven-2_cd8108f",
        "commit": "https://github.com/apache/maven-2/commit/cd8108f4f1e05d7d1bf7bbf749cc62bafccebbf0",
        "file": [
            {
                "additions": 8,
                "blob_url": "https://github.com/apache/maven-2/blob/cd8108f4f1e05d7d1bf7bbf749cc62bafccebbf0/maven-artifact-manager/src/main/java/org/apache/maven/artifact/manager/DefaultWagonManager.java",
                "changes": 9,
                "contents_url": "https://api.github.com/repos/apache/maven-2/contents/maven-artifact-manager/src/main/java/org/apache/maven/artifact/manager/DefaultWagonManager.java?ref=cd8108f4f1e05d7d1bf7bbf749cc62bafccebbf0",
                "deletions": 1,
                "filename": "maven-artifact-manager/src/main/java/org/apache/maven/artifact/manager/DefaultWagonManager.java",
                "patch": "@@ -596,7 +596,14 @@ public ArtifactRepository getMirrorRepository( ArtifactRepository repository )\n         ArtifactRepository mirror = getMirror( repository );\n         if ( mirror != null )\n         {\n-            repository = repositoryFactory.createArtifactRepository( mirror.getId(), mirror.getUrl(),\n+            String id = mirror.getId();\n+            if ( id == null )\n+            {\n+                // TODO: this should be illegal in settings.xml\n+                id = repository.getId();\n+            }\n+\n+            repository = repositoryFactory.createArtifactRepository( id, mirror.getUrl(),\n                                                                      repository.getLayout(), repository.getSnapshots(),\n                                                                      repository.getReleases() );\n         }",
                "raw_url": "https://github.com/apache/maven-2/raw/cd8108f4f1e05d7d1bf7bbf749cc62bafccebbf0/maven-artifact-manager/src/main/java/org/apache/maven/artifact/manager/DefaultWagonManager.java",
                "sha": "ae2813116c181883a95acc47846c9ea17a84a7fd",
                "status": "modified"
            }
        ],
        "message": "[MNG-3495] avoid a potential NPE in the repository hashcode during exceptions for artifact resolution errors if settings.xml is malformed\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/components/branches/maven-2.0.x@643880 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/maven-2/commit/64110eb9164016bf5b5c5c90ef90c386be066aa6",
        "repo": "maven-2",
        "unit_tests": [
            "DefaultWagonManagerTest.java"
        ]
    },
    "maven-2_d25a80d": {
        "bug_id": "maven-2_d25a80d",
        "commit": "https://github.com/apache/maven-2/commit/d25a80d512e5d5ded4f2505cabc6c46467bc21d5",
        "file": [
            {
                "additions": 24,
                "blob_url": "https://github.com/apache/maven-2/blob/d25a80d512e5d5ded4f2505cabc6c46467bc21d5/maven-artifact/src/main/java/org/apache/maven/artifact/DefaultArtifact.java",
                "changes": 38,
                "contents_url": "https://api.github.com/repos/apache/maven-2/contents/maven-artifact/src/main/java/org/apache/maven/artifact/DefaultArtifact.java?ref=d25a80d512e5d5ded4f2505cabc6c46467bc21d5",
                "deletions": 14,
                "filename": "maven-artifact/src/main/java/org/apache/maven/artifact/DefaultArtifact.java",
                "patch": "@@ -101,7 +101,7 @@ public DefaultArtifact( String groupId, String artifactId, VersionRange versionR\n         this.artifactId = artifactId;\n \n         this.versionRange = versionRange;\n-        \n+\n         selectVersionFromNewRangeIfAvailable();\n \n         this.artifactHandler = artifactHandler;\n@@ -142,7 +142,7 @@ private void validateIdentity()\n                                                   \"The type cannot be empty.\" );\n         }\n \n-        if ( version == null && versionRange == null )\n+        if ( ( version == null ) && ( versionRange == null ) )\n         {\n             throw new InvalidArtifactRTException( groupId, artifactId, getVersion(), type,\n                                                   \"The version cannot be empty.\" );\n@@ -151,7 +151,7 @@ private void validateIdentity()\n \n     private boolean empty( String value )\n     {\n-        return value == null || value.trim().length() < 1;\n+        return ( value == null ) || ( value.trim().length() < 1 );\n     }\n \n     public String getClassifier()\n@@ -187,8 +187,8 @@ public String getVersion()\n     public void setVersion( String version )\n     {\n         this.version = version;\n-        this.setBaseVersionInternal( version );\n-        this.versionRange = null;\n+        setBaseVersionInternal( version );\n+        versionRange = null;\n     }\n \n     public String getType()\n@@ -283,9 +283,9 @@ public String toString()\n         }\n         appendArtifactTypeClassifierString( sb );\n         sb.append( \":\" );\n-        if ( getBaseVersion() != null )\n+        if ( getBaseVersionInternal() != null )\n         {\n-            sb.append( getBaseVersion() );\n+            sb.append( getBaseVersionInternal() );\n         }\n         else\n         {\n@@ -366,11 +366,21 @@ public String getBaseVersion()\n         return baseVersion;\n     }\n \n+    protected String getBaseVersionInternal()\n+    {\n+        if ( ( baseVersion == null ) && ( version != null ) )\n+        {\n+            setBaseVersionInternal( version );\n+        }\n+\n+        return baseVersion;\n+    }\n+\n     public void setBaseVersion( String baseVersion )\n     {\n         setBaseVersionInternal( baseVersion );\n     }\n-    \n+\n     protected void setBaseVersionInternal( String baseVersion )\n     {\n         Matcher m = VERSION_FILE_PATTERN.matcher( baseVersion );\n@@ -449,7 +459,7 @@ public ArtifactFilter getDependencyFilter()\n \n     public void setDependencyFilter( ArtifactFilter artifactFilter )\n     {\n-        this.dependencyFilter = artifactFilter;\n+        dependencyFilter = artifactFilter;\n     }\n \n     public ArtifactHandler getArtifactHandler()\n@@ -488,20 +498,20 @@ public VersionRange getVersionRange()\n     public void setVersionRange( VersionRange versionRange )\n     {\n         this.versionRange = versionRange;\n-        \n+\n         selectVersionFromNewRangeIfAvailable();\n     }\n-    \n+\n     private void selectVersionFromNewRangeIfAvailable()\n     {\n-        if ( versionRange != null && versionRange.getRecommendedVersion() != null )\n+        if ( ( versionRange != null ) && ( versionRange.getRecommendedVersion() != null ) )\n         {\n             selectVersion( versionRange.getRecommendedVersion().toString() );\n         }\n         else\n         {\n-            this.version = null;\n-            this.baseVersion = null;\n+            version = null;\n+            baseVersion = null;\n         }\n     }\n ",
                "raw_url": "https://github.com/apache/maven-2/raw/d25a80d512e5d5ded4f2505cabc6c46467bc21d5/maven-artifact/src/main/java/org/apache/maven/artifact/DefaultArtifact.java",
                "sha": "c0e5bca4f1292465f4017b5aa044fa513b4ac607",
                "status": "modified"
            }
        ],
        "message": "Fixing NPE when version is null on DefaultArtifact.toString() without removing the NPE throw when the public API getBaseVersion() is called and version is null. Merged from RevId 570473 in artifact trunk.\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/components/branches/maven-2.0.x@570476 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/maven-2/commit/c43a910ac9408139bad6f41bb90e4ad6f3ad2354",
        "repo": "maven-2",
        "unit_tests": [
            "DefaultArtifactTest.java"
        ]
    },
    "maven-2_ecb04d2": {
        "bug_id": "maven-2_ecb04d2",
        "commit": "https://github.com/apache/maven-2/commit/ecb04d2bb820855728ac34ba6a41463cf0ecf92c",
        "file": [
            {
                "additions": 5,
                "blob_url": "https://github.com/apache/maven-2/blob/ecb04d2bb820855728ac34ba6a41463cf0ecf92c/maven-artifact/src/main/java/org/apache/maven/artifact/versioning/VersionRange.java",
                "changes": 5,
                "contents_url": "https://api.github.com/repos/apache/maven-2/contents/maven-artifact/src/main/java/org/apache/maven/artifact/versioning/VersionRange.java?ref=ecb04d2bb820855728ac34ba6a41463cf0ecf92c",
                "deletions": 0,
                "filename": "maven-artifact/src/main/java/org/apache/maven/artifact/versioning/VersionRange.java",
                "patch": "@@ -54,6 +54,11 @@ public List getRestrictions()\n     public static VersionRange createFromVersionSpec( String spec )\n         throws InvalidVersionSpecificationException\n     {\n+        if ( spec == null )\n+        {\n+            return null;\n+        }\n+\n         List restrictions = new ArrayList();\n         String process = spec;\n         ArtifactVersion version = null;",
                "raw_url": "https://github.com/apache/maven-2/raw/ecb04d2bb820855728ac34ba6a41463cf0ecf92c/maven-artifact/src/main/java/org/apache/maven/artifact/versioning/VersionRange.java",
                "sha": "945f988cb0146608010b1865151f5ce3714bb0d0",
                "status": "modified"
            }
        ],
        "message": "avoid NPE, pass on to proper validation\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk@219888 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/maven-2/commit/473d99609ce2702c9d4a8b65560667eb2ad2b47c",
        "repo": "maven-2",
        "unit_tests": [
            "VersionRangeTest.java"
        ]
    }
}