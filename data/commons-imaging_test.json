{
    "commons-imaging_02a0c2d": {
        "bug_id": "commons-imaging_02a0c2d",
        "commit": "https://github.com/apache/commons-imaging/commit/02a0c2dbef3ab568e6355ca67768765b5429997c",
        "file": [
            {
                "additions": 13,
                "blob_url": "https://github.com/apache/commons-imaging/blob/02a0c2dbef3ab568e6355ca67768765b5429997c/src/test/java/org/apache/sanselan/common/byteSources/ByteSourceImageTest.java",
                "changes": 26,
                "contents_url": "https://api.github.com/repos/apache/commons-imaging/contents/src/test/java/org/apache/sanselan/common/byteSources/ByteSourceImageTest.java?ref=02a0c2dbef3ab568e6355ca67768765b5429997c",
                "deletions": 13,
                "filename": "src/test/java/org/apache/sanselan/common/byteSources/ByteSourceImageTest.java",
                "patch": "@@ -50,10 +50,10 @@ public void test() throws IOException, ImageReadException,\n \n \t\t\tFile imageFile = (File) imageFiles.get(i);\n \t\t\tDebug.debug(\"imageFile\", imageFile);\n-\t\t\tassertTrue(imageFile != null);\n+\t\t\tassertNotNull(imageFile);\n \n \t\t\tbyte imageFileBytes[] = IOUtils.getFileBytes(imageFile);\n-\t\t\tassertTrue(imageFileBytes != null);\n+\t\t\tassertNotNull(imageFileBytes);\n \t\t\tassertTrue(imageFileBytes.length == imageFile.length());\n \n \t\t\tif (imageFile.getName().toLowerCase().endsWith(\".ico\")\n@@ -95,15 +95,15 @@ public void checkGetBufferedImage(File file, byte[] bytes)\n \t\t\tthrows IOException, ImageReadException\n \t{\n \t\tBufferedImage imageFile = Sanselan.getBufferedImage(file);\n-\t\tassertTrue(imageFile != null);\n+\t\tassertNotNull(imageFile);\n \t\tassertTrue(imageFile.getWidth() > 0);\n \t\tassertTrue(imageFile.getHeight() > 0);\n \t\tint imageFileWidth = imageFile.getWidth();\n \t\tint imageFileHeight = imageFile.getHeight();\n \t\timageFile = null;\n \n \t\tBufferedImage imageBytes = Sanselan.getBufferedImage(bytes);\n-\t\tassertTrue(imageBytes != null);\n+\t\tassertNotNull(imageBytes);\n \t\tassertTrue(imageFileWidth == imageBytes.getWidth());\n \t\tassertTrue(imageFileHeight == imageBytes.getHeight());\n \t}\n@@ -112,12 +112,12 @@ public void checkGetImageSize(File imageFile, byte[] imageFileBytes)\n \t\t\tthrows IOException, ImageReadException\n \t{\n \t\tDimension imageSizeFile = Sanselan.getImageSize(imageFile);\n-\t\tassertTrue(imageSizeFile != null);\n+\t\tassertNotNull(imageSizeFile);\n \t\tassertTrue(imageSizeFile.width > 0);\n \t\tassertTrue(imageSizeFile.height > 0);\n \n \t\tDimension imageSizeBytes = Sanselan.getImageSize(imageFileBytes);\n-\t\tassertTrue(imageSizeBytes != null);\n+\t\tassertNotNull(imageSizeBytes);\n \t\tassertTrue(imageSizeFile.width == imageSizeBytes.width);\n \t\tassertTrue(imageSizeFile.height == imageSizeBytes.height);\n \t}\n@@ -127,12 +127,12 @@ public void checkGuessFormat(File imageFile, byte[] imageFileBytes)\n \t{\n \t\t// check guessFormat()\n \t\tImageFormat imageFormatFile = Sanselan.guessFormat(imageFile);\n-\t\tassertTrue(imageFormatFile != null);\n+\t\tassertNotNull(imageFormatFile);\n \t\tassertTrue(imageFormatFile != ImageFormat.IMAGE_FORMAT_UNKNOWN);\n \t\t// Debug.debug(\"imageFormatFile\", imageFormatFile);\n \n \t\tImageFormat imageFormatBytes = Sanselan.guessFormat(imageFileBytes);\n-\t\tassertTrue(imageFormatBytes != null);\n+\t\tassertNotNull(imageFormatBytes);\n \t\tassertTrue(imageFormatBytes != ImageFormat.IMAGE_FORMAT_UNKNOWN);\n \t\t// Debug.debug(\"imageFormatBytes\", imageFormatBytes);\n \n@@ -173,8 +173,8 @@ public void checkGetImageInfo(File imageFile, byte[] imageFileBytes)\n \t\tImageInfo imageInfoBytes = Sanselan\n \t\t\t\t.getImageInfo(imageFileBytes, params);\n \n-\t\tassertTrue(imageInfoFile != null);\n-\t\tassertTrue(imageInfoBytes != null);\n+\t\tassertNotNull(imageInfoFile);\n+\t\tassertNotNull(imageInfoBytes);\n \n \t\tMethod methods[] = ImageInfo.class.getMethods();\n \t\tfor (int i = 0; i < methods.length; i++)\n@@ -200,15 +200,15 @@ public void checkGetImageInfo(File imageFile, byte[] imageFileBytes)\n \t\t// match.\n \t\tassertTrue(imageInfoFile.getBitsPerPixel() > 0);\n \n-\t\tassertTrue(imageInfoFile.getFormat() != null);\n+\t\tassertNotNull(imageInfoFile.getFormat());\n \t\tassertTrue(imageInfoFile.getFormat() != ImageFormat.IMAGE_FORMAT_UNKNOWN);\n \n-\t\tassertTrue(imageInfoFile.getFormatName() != null);\n+\t\tassertNotNull(imageInfoFile.getFormatName());\n \n \t\tassertTrue(imageInfoFile.getWidth() > 0);\n \t\tassertTrue(imageInfoFile.getHeight() > 0);\n \n-\t\tassertTrue(imageInfoFile.getMimeType() != null);\n+\t\tassertNotNull(imageInfoFile.getMimeType());\n \n \t\t// TODO: not all adapters count images yet.\n \t\t// assertTrue(imageInfoFile.getNumberOfImages() > 0);",
                "raw_url": "https://github.com/apache/commons-imaging/raw/02a0c2dbef3ab568e6355ca67768765b5429997c/src/test/java/org/apache/sanselan/common/byteSources/ByteSourceImageTest.java",
                "sha": "98ae2d285f494b930b2a5eb2bdf1b5c524fa2909",
                "status": "modified"
            },
            {
                "additions": 3,
                "blob_url": "https://github.com/apache/commons-imaging/blob/02a0c2dbef3ab568e6355ca67768765b5429997c/src/test/java/org/apache/sanselan/formats/bmp/BmpRoundtripTest.java",
                "changes": 6,
                "contents_url": "https://api.github.com/repos/apache/commons-imaging/contents/src/test/java/org/apache/sanselan/formats/bmp/BmpRoundtripTest.java?ref=02a0c2dbef3ab568e6355ca67768765b5429997c",
                "deletions": 3,
                "filename": "src/test/java/org/apache/sanselan/formats/bmp/BmpRoundtripTest.java",
                "patch": "@@ -166,7 +166,7 @@ private void writeAndReadImageData(int[][] rawData) throws IOException,\n \n \t\tBufferedImage dstImage = Sanselan.getBufferedImage(bytes);\n \n-\t\tassertTrue(null != dstImage);\n+\t\tassertNotNull(dstImage);\n \t\tassertTrue(srcImage.getWidth() == dstImage.getWidth());\n \t\tassertTrue(srcImage.getHeight() == dstImage.getHeight());\n \n@@ -176,8 +176,8 @@ private void writeAndReadImageData(int[][] rawData) throws IOException,\n \n \tprivate void compare(int[][] a, int[][] b)\n \t{\n-\t\tassertTrue(null != a);\n-\t\tassertTrue(null != b);\n+\t\tassertNotNull(a);\n+\t\tassertNotNull(b);\n \t\tassertTrue(a.length == b.length);\n \n \t\tfor (int y = 0; y < a.length; y++)",
                "raw_url": "https://github.com/apache/commons-imaging/raw/02a0c2dbef3ab568e6355ca67768765b5429997c/src/test/java/org/apache/sanselan/formats/bmp/BmpRoundtripTest.java",
                "sha": "89ee9b9aa169f46187e6ea7f50c6b2587cda6f23",
                "status": "modified"
            }
        ],
        "message": "assertTrue(x != null) => assertNotNull(x)\n- simpler, gives better diagnostic, reduces possible NPE warnings\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/sanselan/trunk@922385 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/commons-imaging/commit/93c7aedea250dd96de5a0e1a91fe672b1b1694ad",
        "patched_files": [],
        "repo": "commons-imaging",
        "unit_tests": [
            "BmpRoundtripTest.java",
            "ByteSourceImageTest.java"
        ]
    },
    "commons-imaging_618b683": {
        "bug_id": "commons-imaging_618b683",
        "commit": "https://github.com/apache/commons-imaging/commit/618b683326adc34bb566e64cf3d37254403fdb05",
        "file": [
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/commons-imaging/blob/618b683326adc34bb566e64cf3d37254403fdb05/src/test/java/org/apache/sanselan/formats/png/PngTextTest.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/commons-imaging/contents/src/test/java/org/apache/sanselan/formats/png/PngTextTest.java?ref=618b683326adc34bb566e64cf3d37254403fdb05",
                "deletions": 1,
                "filename": "src/test/java/org/apache/sanselan/formats/png/PngTextTest.java",
                "patch": "@@ -75,7 +75,7 @@ public void test() throws IOException, ImageReadException,\n \t\tIOUtils.writeToFile(bytes, tempFile);\n \n \t\tPngImageInfo imageInfo = (PngImageInfo) Sanselan.getImageInfo(bytes);\n-\t\tassertTrue(null != imageInfo);\n+\t\tassertNotNull(imageInfo);\n \n \t\tList readTexts = imageInfo.getTextChunks();\n \t\tassertEquals(readTexts.size(), 3);",
                "raw_url": "https://github.com/apache/commons-imaging/raw/618b683326adc34bb566e64cf3d37254403fdb05/src/test/java/org/apache/sanselan/formats/png/PngTextTest.java",
                "sha": "a440ceb6890b0b297d4a133731f77b1fcfae85eb",
                "status": "modified"
            },
            {
                "additions": 3,
                "blob_url": "https://github.com/apache/commons-imaging/blob/618b683326adc34bb566e64cf3d37254403fdb05/src/test/java/org/apache/sanselan/formats/png/PngWriteReadTest.java",
                "changes": 6,
                "contents_url": "https://api.github.com/repos/apache/commons-imaging/contents/src/test/java/org/apache/sanselan/formats/png/PngWriteReadTest.java?ref=618b683326adc34bb566e64cf3d37254403fdb05",
                "deletions": 3,
                "filename": "src/test/java/org/apache/sanselan/formats/png/PngWriteReadTest.java",
                "patch": "@@ -146,7 +146,7 @@ private void writeAndReadImageData(int[][] rawData) throws IOException,\n \n \t\tBufferedImage dstImage = Sanselan.getBufferedImage(bytes);\n \n-\t\tassertTrue(null != dstImage);\n+\t\tassertNotNull(dstImage);\n \t\tassertTrue(srcImage.getWidth() == dstImage.getWidth());\n \t\tassertTrue(srcImage.getHeight() == dstImage.getHeight());\n \n@@ -156,8 +156,8 @@ private void writeAndReadImageData(int[][] rawData) throws IOException,\n \n \tprivate void compare(int[][] a, int[][] b)\n \t{\n-\t\tassertTrue(null != a);\n-\t\tassertTrue(null != b);\n+\t\tassertNotNull(a);\n+\t\tassertNotNull(b);\n \t\tassertTrue(a.length == b.length);\n \n \t\tfor (int y = 0; y < a.length; y++)",
                "raw_url": "https://github.com/apache/commons-imaging/raw/618b683326adc34bb566e64cf3d37254403fdb05/src/test/java/org/apache/sanselan/formats/png/PngWriteReadTest.java",
                "sha": "bcabca921b37666238e537b996103a5040a6b4ab",
                "status": "modified"
            }
        ],
        "message": "Avoid Eclipse NPE warnings\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/sanselan/trunk@995614 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/commons-imaging/commit/542efee6b54bb569d21d1506764bad0acfe4cf0f",
        "patched_files": [
            "PngText.java"
        ],
        "repo": "commons-imaging",
        "unit_tests": [
            "PngTextTest.java",
            "PngWriteReadTest.java"
        ]
    },
    "commons-imaging_8e6ff65": {
        "bug_id": "commons-imaging_8e6ff65",
        "commit": "https://github.com/apache/commons-imaging/commit/8e6ff65695c882821f137ffb5bd42de3da948d8b",
        "file": [
            {
                "additions": 18,
                "blob_url": "https://github.com/apache/commons-imaging/blob/8e6ff65695c882821f137ffb5bd42de3da948d8b/src/test/java/org/apache/sanselan/formats/jpeg/iptc/IptcUpdateTest.java",
                "changes": 24,
                "contents_url": "https://api.github.com/repos/apache/commons-imaging/contents/src/test/java/org/apache/sanselan/formats/jpeg/iptc/IptcUpdateTest.java?ref=8e6ff65695c882821f137ffb5bd42de3da948d8b",
                "deletions": 6,
                "filename": "src/test/java/org/apache/sanselan/formats/jpeg/iptc/IptcUpdateTest.java",
                "patch": "@@ -95,7 +95,9 @@ public void testRemove() throws IOException, ImageReadException,\n \t\t\t\t\tnew JpegIptcRewriter().removeIPTC(byteSource, os);\n \t\t\t\t} finally\n \t\t\t\t{\n-\t\t\t\t\tos.close();\n+\t\t\t\t    if (os != null) {\n+\t\t\t\t        os.close();\n+\t\t\t\t    }\n \t\t\t\t\tos = null;\n \t\t\t\t}\n \n@@ -152,7 +154,9 @@ public void testRemoveInsertUpdate() throws IOException,\n \t\t\t\t\tnew JpegIptcRewriter().removeIPTC(byteSource, os);\n \t\t\t\t} finally\n \t\t\t\t{\n-\t\t\t\t\tos.close();\n+                    if (os != null) {\n+                        os.close();\n+                    }\n \t\t\t\t\tos = null;\n \t\t\t\t}\n \n@@ -197,7 +201,9 @@ public void testRemoveInsertUpdate() throws IOException,\n \t\t\t\t\tnew JpegIptcRewriter().writeIPTC(byteSource, os, newData);\n \t\t\t\t} finally\n \t\t\t\t{\n-\t\t\t\t\tos.close();\n+                    if (os != null) {\n+                        os.close();\n+                    }\n \t\t\t\t\tos = null;\n \t\t\t\t}\n \n@@ -241,7 +247,9 @@ public void testRemoveInsertUpdate() throws IOException,\n \t\t\t\t\tnew JpegIptcRewriter().writeIPTC(byteSource, os, newData);\n \t\t\t\t} finally\n \t\t\t\t{\n-\t\t\t\t\tos.close();\n+                    if (os != null) {\n+                        os.close();\n+                    }\n \t\t\t\t\tos = null;\n \t\t\t\t}\n \n@@ -286,7 +294,9 @@ public void testRemoveInsertUpdate() throws IOException,\n \t\t\t\t\t\t\tnoIptcFile), os, newData);\n \t\t\t\t} finally\n \t\t\t\t{\n-\t\t\t\t\tos.close();\n+                    if (os != null) {\n+                        os.close();\n+                    }\n \t\t\t\t\tos = null;\n \t\t\t\t}\n \n@@ -385,7 +395,9 @@ public void testAddIptcData() throws IOException, ImageReadException,\n \t\t\t\t\tnew JpegIptcRewriter().writeIPTC(byteSource, os, newData);\n \t\t\t\t} finally\n \t\t\t\t{\n-\t\t\t\t\tos.close();\n+                    if (os != null) {\n+                        os.close();\n+                    }\n \t\t\t\t\tos = null;\n \t\t\t\t}\n ",
                "raw_url": "https://github.com/apache/commons-imaging/raw/8e6ff65695c882821f137ffb5bd42de3da948d8b/src/test/java/org/apache/sanselan/formats/jpeg/iptc/IptcUpdateTest.java",
                "sha": "058620bd56bce86996906c1ef4f080c65d5018eb",
                "status": "modified"
            },
            {
                "additions": 9,
                "blob_url": "https://github.com/apache/commons-imaging/blob/8e6ff65695c882821f137ffb5bd42de3da948d8b/src/test/java/org/apache/sanselan/formats/jpeg/xmp/JpegXmpRewriteTest.java",
                "changes": 12,
                "contents_url": "https://api.github.com/repos/apache/commons-imaging/contents/src/test/java/org/apache/sanselan/formats/jpeg/xmp/JpegXmpRewriteTest.java?ref=8e6ff65695c882821f137ffb5bd42de3da948d8b",
                "deletions": 3,
                "filename": "src/test/java/org/apache/sanselan/formats/jpeg/xmp/JpegXmpRewriteTest.java",
                "patch": "@@ -75,7 +75,9 @@ public void testRemoveInsertUpdate() throws IOException, ImageReadException,\n \t\t\t\t\tnew JpegXmpRewriter().removeXmpXml(byteSource, os);\n \t\t\t\t} finally\n \t\t\t\t{\n-\t\t\t\t\tos.close();\n+\t\t\t\t\tif (os != null) {\n+\t\t\t\t\t    os.close();\n+\t\t\t\t\t}\n \t\t\t\t\tos = null;\n \t\t\t\t}\n \n@@ -101,7 +103,9 @@ public void testRemoveInsertUpdate() throws IOException, ImageReadException,\n \t\t\t\t\t\t\tnewXmpXml);\n \t\t\t\t} finally\n \t\t\t\t{\n-\t\t\t\t\tos.close();\n+\t\t\t\t    if (os != null) {\n+\t\t\t\t        os.close();\n+\t\t\t\t    }\n \t\t\t\t\tos = null;\n \t\t\t\t}\n \n@@ -128,7 +132,9 @@ public void testRemoveInsertUpdate() throws IOException, ImageReadException,\n \t\t\t\t\t\t\tnewXmpXml);\n \t\t\t\t} finally\n \t\t\t\t{\n-\t\t\t\t\tos.close();\n+\t\t\t\t    if (os != null) {\n+\t\t\t\t        os.close();\n+\t\t\t\t    }\n \t\t\t\t\tos = null;\n \t\t\t\t}\n ",
                "raw_url": "https://github.com/apache/commons-imaging/raw/8e6ff65695c882821f137ffb5bd42de3da948d8b/src/test/java/org/apache/sanselan/formats/jpeg/xmp/JpegXmpRewriteTest.java",
                "sha": "c573ceb3ed38c24ea7887c21e4de05c5e6cc1e30",
                "status": "modified"
            }
        ],
        "message": "Avoid potential NPEs\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/sanselan/trunk@995621 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/commons-imaging/commit/7e7b151bf279c59151aebe6dc905badc760d96b5",
        "patched_files": [],
        "repo": "commons-imaging",
        "unit_tests": [
            "IptcUpdateTest.java",
            "JpegXmpRewriteTest.java"
        ]
    }
}