[{"commit": "https://github.com/apache/maven-plugins/commit/5abb3357c4288c32a16d3de52ed0e88191562ed3", "parent": "https://github.com/apache/maven-plugins/commit/345f1d257c423e480556e827270516d42f282c07", "message": "[MJLINK-4] NPE on execution\nUse requiresDependencyResolution instead of requiresDependencyCollection (which only downloads the poms)\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/plugins/trunk@1812236 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "maven-plugins_1", "file": [{"additions": 28, "raw_url": "https://github.com/apache/maven-plugins/raw/5abb3357c4288c32a16d3de52ed0e88191562ed3/maven-jlink-plugin/pom.xml", "blob_url": "https://github.com/apache/maven-plugins/blob/5abb3357c4288c32a16d3de52ed0e88191562ed3/maven-jlink-plugin/pom.xml", "sha": "1cc90ba10e63eabd94d72cfca5651da945ad2fc2", "changes": 28, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/maven-plugins/contents/maven-jlink-plugin/pom.xml?ref=5abb3357c4288c32a16d3de52ed0e88191562ed3", "patch": "@@ -197,10 +197,37 @@\n       <id>run-its</id>\n       <build>\n         <plugins>\n+          <plugin>\n+          <groupId>org.codehaus.mojo</groupId>\n+          <artifactId>mrm-maven-plugin</artifactId>\n+          <version>1.1.0</version>\n+          <executions>\n+            <execution>\n+              <goals>\n+                <goal>start</goal>\n+                <goal>stop</goal>\n+              </goals>\n+            </execution>\n+          </executions>\n+          <configuration>\n+            <repositories>\n+              <mockRepo>\n+                <source>src/it/mrm/repository</source>\n+              </mockRepo>\n+              <proxyRepo/>\n+            </repositories>\n+          </configuration>\n+        </plugin>\n           <plugin>\n             <groupId>org.apache.maven.plugins</groupId>\n             <artifactId>maven-invoker-plugin</artifactId>\n             <configuration>\n+              <localRepositoryPath>${project.build.directory}/local-repo</localRepositoryPath>\n+              <projectsDirectory>src/it/projects</projectsDirectory>\n+              <settingsFile>src/it/mrm/settings.xml</settingsFile>\n+              <filterProperties>\n+                <mrm.repository.url>${mrm.repository.url}</mrm.repository.url>\n+              </filterProperties>\n               <goals>\n                 <goal>clean</goal>\n                 <goal>package</goal>\n@@ -212,6 +239,7 @@\n                 <goals>\n                   <goal>install</goal>\n                   <goal>integration-test</goal>\n+                  <goal>verify</goal>\n                 </goals>\n               </execution>\n             </executions>", "filename": "maven-jlink-plugin/pom.xml"}, {"additions": 71, "raw_url": "https://github.com/apache/maven-plugins/raw/5abb3357c4288c32a16d3de52ed0e88191562ed3/maven-jlink-plugin/src/it/mrm/settings.xml", "blob_url": "https://github.com/apache/maven-plugins/blob/5abb3357c4288c32a16d3de52ed0e88191562ed3/maven-jlink-plugin/src/it/mrm/settings.xml", "sha": "f6398171148d227ef4699830ebdc6d2814a9410f", "changes": 71, "status": "added", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/maven-plugins/contents/maven-jlink-plugin/src/it/mrm/settings.xml?ref=5abb3357c4288c32a16d3de52ed0e88191562ed3", "patch": "@@ -0,0 +1,71 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n+\r\n+<!--\r\n+Licensed to the Apache Software Foundation (ASF) under one\r\n+or more contributor license agreements.  See the NOTICE file\r\n+distributed with this work for additional information\r\n+regarding copyright ownership.  The ASF licenses this file\r\n+to you under the Apache License, Version 2.0 (the\r\n+\"License\"); you may not use this file except in compliance\r\n+with the License.  You may obtain a copy of the License at\r\n+\r\n+  http://www.apache.org/licenses/LICENSE-2.0\r\n+\r\n+Unless required by applicable law or agreed to in writing,\r\n+software distributed under the License is distributed on an\r\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n+KIND, either express or implied.  See the License for the\r\n+specific language governing permissions and limitations\r\n+under the License.\r\n+-->\r\n+\r\n+<settings xmlns=\"http://maven.apache.org/SETTINGS/1.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/SETTINGS/1.0.0 http://maven.apache.org/xsd/settings-1.0.0.xsd\">\r\n+  <mirrors>\r\n+    <mirror>\r\n+      <id>mrm-maven-plugin</id>\r\n+      <name>Mock Repository Manager</name>\r\n+      <url>@mrm.repository.url@</url>\r\n+      <mirrorOf>*</mirrorOf>\r\n+    </mirror>\r\n+  </mirrors>\r\n+  <profiles>\r\n+    <profile>\r\n+      <id>it-repo</id>\r\n+      <repositories>\r\n+        <repository>\r\n+          <id>snapshots</id>\r\n+          <url>@mrm.repository.url@</url>\r\n+          <releases>\r\n+            <enabled>true</enabled>\r\n+            <checksumPolicy>ignore</checksumPolicy>\r\n+            <updatePolicy>never</updatePolicy>\r\n+          </releases>\r\n+          <snapshots>\r\n+            <enabled>true</enabled>\r\n+            <checksumPolicy>ignore</checksumPolicy>\r\n+            <updatePolicy>always</updatePolicy>\r\n+          </snapshots>\r\n+        </repository>\r\n+      </repositories>\r\n+      <pluginRepositories>\r\n+        <pluginRepository>\r\n+          <id>snapshots</id>\r\n+          <url>@mrm.repository.url@</url>\r\n+          <releases>\r\n+            <enabled>true</enabled>\r\n+            <checksumPolicy>ignore</checksumPolicy>\r\n+            <updatePolicy>never</updatePolicy>\r\n+          </releases>\r\n+          <snapshots>\r\n+            <enabled>true</enabled>\r\n+            <checksumPolicy>ignore</checksumPolicy>\r\n+            <updatePolicy>always</updatePolicy>\r\n+          </snapshots>\r\n+        </pluginRepository>\r\n+      </pluginRepositories>\r\n+    </profile>\r\n+  </profiles>\r\n+  <activeProfiles>\r\n+    <activeProfile>it-repo</activeProfile>\r\n+  </activeProfiles>\r\n+</settings>\r", "filename": "maven-jlink-plugin/src/it/mrm/settings.xml"}, {"additions": 54, "raw_url": "https://github.com/apache/maven-plugins/raw/5abb3357c4288c32a16d3de52ed0e88191562ed3/maven-jlink-plugin/src/it/projects/MJLINK-4_dependencyResolution/pom.xml", "blob_url": "https://github.com/apache/maven-plugins/blob/5abb3357c4288c32a16d3de52ed0e88191562ed3/maven-jlink-plugin/src/it/projects/MJLINK-4_dependencyResolution/pom.xml", "sha": "4dea7149be7b94edc9dac33e9c0e32c694bf02c9", "changes": 54, "status": "added", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/maven-plugins/contents/maven-jlink-plugin/src/it/projects/MJLINK-4_dependencyResolution/pom.xml?ref=5abb3357c4288c32a16d3de52ed0e88191562ed3", "patch": "@@ -0,0 +1,54 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+\n+<!--\n+  Licensed to the Apache Software Foundation (ASF) under one\n+  or more contributor license agreements. See the NOTICE file\n+  distributed with this work for additional information\n+  regarding copyright ownership. The ASF licenses this file\n+  to you under the Apache License, Version 2.0 (the\n+  \"License\"); you may not use this file except in compliance\n+  with the License. You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+  Unless required by applicable law or agreed to in writing,\n+  software distributed under the License is distributed on an\n+  \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+  KIND, either express or implied. See the License for the\n+  specific language governing permissions and limitations\n+  under the License.\n+-->\n+\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\"\n+         xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+  <modelVersion>4.0.0</modelVersion>\n+  <groupId>org.apache.maven.plugins.jlink.its</groupId>\n+  <artifactId>mjlink4</artifactId>\n+  <version>1.0.0-SNAPSHOT</version>\n+  <packaging>jlink</packaging>\n+\n+  <build>\n+    <plugins>\n+      <plugin>\n+        <groupId>org.apache.maven.plugins</groupId>\n+        <artifactId>maven-jlink-plugin</artifactId>\n+        <version>@project.version@</version>\n+        <extensions>true</extensions>\n+        <configuration>\n+            <noHeaderFiles>true</noHeaderFiles>\n+            <noManPages>true</noManPages>\n+        </configuration>\n+      </plugin>\n+    </plugins>\n+  </build>\n+\n+  <dependencies>\n+    <dependency>\n+      <!-- use a dependency with a module-info.class -->\n+      <artifactId>asm</artifactId>\n+      <groupId>org.ow2.asm</groupId>\n+      <version>6.0</version>\n+    </dependency>\n+  </dependencies>\n+</project>", "filename": "maven-jlink-plugin/src/it/projects/MJLINK-4_dependencyResolution/pom.xml"}, {"additions": 1, "raw_url": "https://github.com/apache/maven-plugins/raw/5abb3357c4288c32a16d3de52ed0e88191562ed3/maven-jlink-plugin/src/main/java/org/apache/maven/plugins/jlink/JLinkMojo.java", "blob_url": "https://github.com/apache/maven-plugins/blob/5abb3357c4288c32a16d3de52ed0e88191562ed3/maven-jlink-plugin/src/main/java/org/apache/maven/plugins/jlink/JLinkMojo.java", "sha": "be29b0235f659720ed9ae4954dee17b72a6b06d4", "changes": 2, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/maven-plugins/contents/maven-jlink-plugin/src/main/java/org/apache/maven/plugins/jlink/JLinkMojo.java?ref=5abb3357c4288c32a16d3de52ed0e88191562ed3", "patch": "@@ -61,7 +61,7 @@\n  * @author Karl Heinz Marbaise <a href=\"mailto:khmarbaise@apache.org\">khmarbaise@apache.org</a>\n  */\n // CHECKSTYLE_OFF: LineLength\n-@Mojo( name = \"jlink\", requiresDependencyCollection = ResolutionScope.RUNTIME, defaultPhase = LifecyclePhase.PACKAGE, requiresProject = true )\n+@Mojo( name = \"jlink\", requiresDependencyResolution = ResolutionScope.RUNTIME, defaultPhase = LifecyclePhase.PACKAGE, requiresProject = true )\n // CHECKSTYLE_ON: LineLength\n public class JLinkMojo\n     extends AbstractJLinkMojo", "filename": "maven-jlink-plugin/src/main/java/org/apache/maven/plugins/jlink/JLinkMojo.java"}], "repo": "maven-plugins"}, {"commit": "https://github.com/apache/maven-plugins/commit/d7356ff0e08fcb55fa40fc760d92013a35086d0b", "parent": "https://github.com/apache/maven-plugins/commit/a2255188e1cd0b655f3c28fe560c82bf1e6264b7", "message": "rewrote the verify script as Groovy since the bsh version breaks with NPE on ASF Jenkins without any explanation\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/plugins/trunk@1743287 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "maven-plugins_2", "file": [{"additions": 7, "raw_url": "https://github.com/apache/maven-plugins/raw/d7356ff0e08fcb55fa40fc760d92013a35086d0b/maven-assembly-plugin/src/it/projects/bugs/massembly-731/verify.groovy", "blob_url": "https://github.com/apache/maven-plugins/blob/d7356ff0e08fcb55fa40fc760d92013a35086d0b/maven-assembly-plugin/src/it/projects/bugs/massembly-731/verify.groovy", "previous_filename": "maven-assembly-plugin/src/it/projects/bugs/massembly-731/verify.bsh", "sha": "f09fcb4931a3694b366b747e5116a9b571ecac2c", "changes": 39, "status": "renamed", "deletions": 32, "contents_url": "https://api.github.com/repos/apache/maven-plugins/contents/maven-assembly-plugin/src/it/projects/bugs/massembly-731/verify.groovy?ref=d7356ff0e08fcb55fa40fc760d92013a35086d0b", "patch": "@@ -22,40 +22,15 @@ import java.net.*;\n import org.apache.commons.compress.archivers.zip.ZipFile;\n import org.apache.commons.compress.archivers.zip.ZipArchiveEntry;\n \n-\n-\n-boolean result = true;\n-\n-try\n-{\n-    File zipFile = new File( basedir, \"target/project2-0.0.1-SNAPSHOT-deployable.zip\" );\n+File zipFile = new File( basedir, \"target/project2-0.0.1-SNAPSHOT-deployable.zip\" );\n     \n-    if ( !zipFile.exists() || zipFile.isDirectory() )\n-    {\n-        System.err.println( \"zip-file is missing or a directory.\" );\n-        result = false;\n-    }\n+assert zipFile.exists() && zipFile.isFile()\n     \n-    ZipFile zf = new ZipFile( zipFile );\n-\n-    ZipArchiveEntry ze = zf.getEntry( \"project2-0.0.1-SNAPSHOT/symlinks/src/symDir\" );\n-    if ( ze == null )\n-    {\n-        System.err.println( \"symDir is missing.\" );\n-        result = false;\n-    }\n+ZipFile zf = new ZipFile( zipFile );\n \n-    if (!ze.isUnixSymlink()) {\n-        System.err.println( \"symDir is not a symnlink.\" );\n-        result = false;\n-    }\n+ZipArchiveEntry ze = zf.getEntry( \"project2-0.0.1-SNAPSHOT/symlinks/src/symDir\" );\n+assert ze != null\n \n-    zf.close();\n-}\n-catch( IOException e )\n-{\n-    e.printStackTrace();\n-    result = false;\n-}\n+assert ze.isUnixSymlink()\n \n-return result;\n+zf.close();", "filename": "maven-assembly-plugin/src/it/projects/bugs/massembly-731/verify.groovy"}], "repo": "maven-plugins"}, {"commit": "https://github.com/apache/maven-plugins/commit/fb0eb0a5f4ee882dffbc9c14acfaacf36eabe953", "parent": "https://github.com/apache/maven-plugins/commit/bec08441b0179cc260f4644a71eb3188ab0098b1", "message": "fix NPE\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/plugins/trunk@386835 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "maven-plugins_3", "file": [{"additions": 7, "raw_url": "https://github.com/apache/maven-plugins/raw/fb0eb0a5f4ee882dffbc9c14acfaacf36eabe953/maven-site-plugin/src/main/java/org/apache/maven/plugins/site/AbstractSiteRenderingMojo.java", "blob_url": "https://github.com/apache/maven-plugins/blob/fb0eb0a5f4ee882dffbc9c14acfaacf36eabe953/maven-site-plugin/src/main/java/org/apache/maven/plugins/site/AbstractSiteRenderingMojo.java", "sha": "b41fbc4c599f70d93bf56a5e94885fa5496ff0a9", "changes": 9, "status": "modified", "deletions": 2, "contents_url": "https://api.github.com/repos/apache/maven-plugins/contents/maven-site-plugin/src/main/java/org/apache/maven/plugins/site/AbstractSiteRenderingMojo.java?ref=fb0eb0a5f4ee882dffbc9c14acfaacf36eabe953", "patch": "@@ -691,7 +691,7 @@ protected void populateReportsMenu( DecorationModel decorationModel, Locale loca\n             if ( menu.getItems().isEmpty() )\n             {\n                 List categoryReports = (List) categories.get( MavenReport.CATEGORY_PROJECT_INFORMATION );\n-                if ( !categoryReports.isEmpty() )\n+                if ( !isEmptyList( categoryReports ) )\n                 {\n                     MenuItem item = createCategoryMenu(\n                         i18n.getString( \"site-plugin\", locale, \"report.menu.projectinformation\" ), \"/project-info.html\",\n@@ -701,7 +701,7 @@ protected void populateReportsMenu( DecorationModel decorationModel, Locale loca\n                 }\n \n                 categoryReports = (List) categories.get( MavenReport.CATEGORY_PROJECT_REPORTS );\n-                if ( !categoryReports.isEmpty() )\n+                if ( !isEmptyList( categoryReports ) )\n                 {\n                     MenuItem item = createCategoryMenu(\n                         i18n.getString( \"site-plugin\", locale, \"report.menu.projectreports\" ), \"/project-reports.html\",\n@@ -853,4 +853,9 @@ protected Map locateDocuments( SiteRenderingContext context, List reports, Local\n         }\n         return documents;\n     }\n+\n+    private static boolean isEmptyList( List list )\n+    {\n+        return list == null || list.isEmpty();\n+    }\n }", "filename": "maven-site-plugin/src/main/java/org/apache/maven/plugins/site/AbstractSiteRenderingMojo.java"}], "repo": "maven-plugins"}, {"commit": "https://github.com/apache/maven-plugins/commit/c695b1831b8262406269088e1a5df37e6402e579", "parent": "https://github.com/apache/maven-plugins/commit/1443f689210918e8383453f9a6cbf94a1a1ab352", "message": "Fix NPE\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/plugins/trunk@367807 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "maven-plugins_4", "file": [{"additions": 10, "raw_url": "https://github.com/apache/maven-plugins/raw/c695b1831b8262406269088e1a5df37e6402e579/maven-javadoc-plugin/src/main/java/org/apache/maven/plugin/javadoc/JavadocReport.java", "blob_url": "https://github.com/apache/maven-plugins/blob/c695b1831b8262406269088e1a5df37e6402e579/maven-javadoc-plugin/src/main/java/org/apache/maven/plugin/javadoc/JavadocReport.java", "sha": "836bd75c0500a2b507f2d06343b4f42976f6ec5c", "changes": 16, "status": "modified", "deletions": 6, "contents_url": "https://api.github.com/repos/apache/maven-plugins/contents/maven-javadoc-plugin/src/main/java/org/apache/maven/plugin/javadoc/JavadocReport.java?ref=c695b1831b8262406269088e1a5df37e6402e579", "patch": "@@ -816,13 +816,17 @@ else if ( \"private\".equalsIgnoreCase( show ) )\n             String year = String.valueOf( actualYear );\n \n             bottom = StringUtils.replace( bottom, \"{currentYear}\", year );\n-            if ( model.getInceptionYear().equals( year ) )\n-            {\n-                bottom = StringUtils.replace( bottom, \"{inceptionYear}-\", \"\" );                \n-            }\n-            else\n+\n+            if ( model != null  && model.getInceptionYear() != null )\n             {\n-                bottom = StringUtils.replace( bottom, \"{inceptionYear}\", model.getInceptionYear() );                \n+                if ( model.getInceptionYear().equals( year ) )\n+                {\n+                    bottom = StringUtils.replace( bottom, \"{inceptionYear}-\", \"\" );                \n+                }\n+                else\n+                {\n+                    bottom = StringUtils.replace( bottom, \"{inceptionYear}\", model.getInceptionYear() );                \n+                }\n             }\n \n             if ( StringUtils.isEmpty( stylesheetfile ) )", "filename": "maven-javadoc-plugin/src/main/java/org/apache/maven/plugin/javadoc/JavadocReport.java"}], "repo": "maven-plugins"}, {"commit": "https://github.com/apache/maven-plugins/commit/31a63f9ff857258cc63f1474f329938f7784b77c", "parent": "https://github.com/apache/maven-plugins/commit/5d1cd595a6fa572bd2d363004f59e88ff897c9a8", "message": "MPIR-60: Current head throws NPE when generating reports\n\no removed plexus-i18n dependency to fix it on 2.0.x (MNG-2731 fixed the NPE on trunk but not on 2.0.x)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/plugins/trunk@498393 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "maven-plugins_5", "file": [{"additions": 0, "raw_url": "https://github.com/apache/maven-plugins/raw/31a63f9ff857258cc63f1474f329938f7784b77c/maven-project-info-reports-plugin/pom.xml", "blob_url": "https://github.com/apache/maven-plugins/blob/31a63f9ff857258cc63f1474f329938f7784b77c/maven-project-info-reports-plugin/pom.xml", "sha": "5d0829a65e715dcfb2706a7a84bc4f2cd410851f", "changes": 5, "status": "modified", "deletions": 5, "contents_url": "https://api.github.com/repos/apache/maven-plugins/contents/maven-project-info-reports-plugin/pom.xml?ref=31a63f9ff857258cc63f1474f329938f7784b77c", "patch": "@@ -95,11 +95,6 @@\n       <artifactId>maven-model</artifactId>\n       <version>2.0.4</version>\n     </dependency>\n-    <dependency>\n-      <groupId>org.codehaus.plexus</groupId>\n-      <artifactId>plexus-i18n</artifactId>\n-      <version>1.0-beta-7-SNAPSHOT</version>\n-    </dependency>\n     <dependency>\n       <groupId>org.apache.maven.reporting</groupId>\n       <artifactId>maven-reporting-impl</artifactId>", "filename": "maven-project-info-reports-plugin/pom.xml"}], "repo": "maven-plugins"}, {"commit": "https://github.com/apache/maven-plugins/commit/7be24197c3f7aef9ab9df4b78e555c347c558ab2", "parent": "https://github.com/apache/maven-plugins/commit/716fd61e649c9d2949b2540df6407dc3b69be886", "message": "[MCOMPILER-211] Prevent possible NPE when m-compiler-p is used within an m2e-execution in Eclipse\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/plugins/trunk@1721738 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "maven-plugins_6", "file": [{"additions": 15, "raw_url": "https://github.com/apache/maven-plugins/raw/7be24197c3f7aef9ab9df4b78e555c347c558ab2/maven-compiler-plugin/src/main/java/org/apache/maven/plugin/compiler/AbstractCompilerMojo.java", "blob_url": "https://github.com/apache/maven-plugins/blob/7be24197c3f7aef9ab9df4b78e555c347c558ab2/maven-compiler-plugin/src/main/java/org/apache/maven/plugin/compiler/AbstractCompilerMojo.java", "sha": "475dd182b0ed98fd89e2f0872d6ea1283d5d600b", "changes": 25, "status": "modified", "deletions": 10, "contents_url": "https://api.github.com/repos/apache/maven-plugins/contents/maven-compiler-plugin/src/main/java/org/apache/maven/plugin/compiler/AbstractCompilerMojo.java?ref=7be24197c3f7aef9ab9df4b78e555c347c558ab2", "patch": "@@ -60,9 +60,8 @@\n import java.util.Set;\n \n /**\n- * TODO: At least one step could be optimized, currently the plugin will do two\n- * scans of all the source code if the compiler has to have the entire set of\n- * sources. This is currently the case for at least the C# compiler and most\n+ * TODO: At least one step could be optimized, currently the plugin will do two scans of all the source code if the\n+ * compiler has to have the entire set of sources. This is currently the case for at least the C# compiler and most\n  * likely all the other .NET compilers too.\n  *\n  * @author others\n@@ -219,12 +218,12 @@\n      * Sets the arguments to be passed to the compiler (prepending a dash) if {@link #fork} is set to <code>true</code>.\n      * </p>\n      * <p>\n-     * This is because the list of valid arguments passed to a Java compiler\n-     * varies based on the compiler version.\n+     * This is because the list of valid arguments passed to a Java compiler varies based on the compiler version.\n      * </p>\n      * <p>\n      * To pass <code>-Xmaxerrs 1000 -Xlint -Xlint:-path -Averbose=true</code> you should include the following:\n      * </p>\n+     *\n      * <pre>\n      * &lt;compilerArguments&gt;\n      *   &lt;Xmaxerrs&gt;1000&lt;/Xmaxerrs&gt;\n@@ -235,7 +234,7 @@\n      * </pre>\n      *\n      * @since 2.0.1\n-     * @deprecated use {@link #compilerArgs} instead. \n+     * @deprecated use {@link #compilerArgs} instead.\n      */\n     @Parameter\n     @Deprecated\n@@ -257,7 +256,7 @@\n      */\n     @Parameter\n     protected List<String> compilerArgs;\n-    \n+\n     /**\n      * <p>\n      * Sets the unformatted single argument string to be passed to the compiler if {@link #fork} is set to\n@@ -405,6 +404,7 @@\n \n     protected abstract File getGeneratedSourcesDirectory();\n \n+    @Override\n     public void execute()\n         throws MojoExecutionException, CompilationFailureException\n     {\n@@ -1058,20 +1058,25 @@ protected int getRequestThreadCount()\n \n     protected Date getBuildStartTime()\n     {\n+        Date buildStartTime = null;\n         try\n         {\n             Method getRequestMethod = session.getClass().getMethod( \"getRequest\" );\n             Object mavenExecutionRequest = getRequestMethod.invoke( session );\n             Method getStartTimeMethod = mavenExecutionRequest.getClass().getMethod( \"getStartTime\" );\n-            Date buildStartTime = (Date) getStartTimeMethod.invoke( mavenExecutionRequest );\n-            return buildStartTime;\n+            buildStartTime = (Date) getStartTimeMethod.invoke( mavenExecutionRequest );\n         }\n         catch ( Exception e )\n         {\n             getLog().debug( \"unable to get start time for the current build: \" + e.getMessage() );\n         }\n \n-        return new Date();\n+        if ( buildStartTime == null )\n+        {\n+            return new Date();\n+        }\n+\n+        return buildStartTime;\n     }\n \n ", "filename": "maven-compiler-plugin/src/main/java/org/apache/maven/plugin/compiler/AbstractCompilerMojo.java"}], "repo": "maven-plugins"}, {"commit": "https://github.com/apache/maven-plugins/commit/27a79b02c8d6af0c3504433e957357542596f7c6", "parent": "https://github.com/apache/maven-plugins/commit/e1e482a96d9a4b91d63978792e979cd403f3d119", "message": "[MSHADE-127] Fixed npe\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/plugins/trunk@1482543 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "maven-plugins_7", "file": [{"additions": 18, "raw_url": "https://github.com/apache/maven-plugins/raw/27a79b02c8d6af0c3504433e957357542596f7c6/maven-shade-plugin/src/main/java/org/apache/maven/plugins/shade/mojo/ShadeMojo.java", "blob_url": "https://github.com/apache/maven-plugins/blob/27a79b02c8d6af0c3504433e957357542596f7c6/maven-shade-plugin/src/main/java/org/apache/maven/plugins/shade/mojo/ShadeMojo.java", "sha": "05aecd3ec31b95194091a23aa82d063beeca32fb", "changes": 38, "status": "modified", "deletions": 20, "contents_url": "https://api.github.com/repos/apache/maven-plugins/contents/maven-shade-plugin/src/main/java/org/apache/maven/plugins/shade/mojo/ShadeMojo.java?ref=27a79b02c8d6af0c3504433e957357542596f7c6", "patch": "@@ -193,6 +193,7 @@\n      * </pre>\n      * <em>Note:</em> Support for includes exists only since version 1.4.\n      */\n+    @SuppressWarnings( \"MismatchedReadAndWriteOfArray\" )\n     @Parameter\n     private PackageRelocation[] relocations;\n \n@@ -224,6 +225,7 @@\n      * &lt;/filters&gt;\n      * </pre>\n      */\n+    @SuppressWarnings( \"MismatchedReadAndWriteOfArray\" )\n     @Parameter\n     private ArchiveFilter[] filters;\n \n@@ -539,20 +541,23 @@ else if ( !renamed )\n                 {\n                     getLog().info( \"Replacing original artifact with shaded artifact.\" );\n                     File originalArtifact = project.getArtifact().getFile();\n-                    replaceFile( originalArtifact, outputJar );\n-\n-                    if ( createSourcesJar )\n+                    if (originalArtifact != null)\n                     {\n-                        File shadedSources = shadedSourcesArtifactFile();\n+                        replaceFile( originalArtifact, outputJar );\n \n-                        replaceFile( shadedSources, sourcesJar );\n+                        if ( createSourcesJar )\n+                        {\n+                            File shadedSources = shadedSourcesArtifactFile();\n \n-                        projectHelper.attachArtifact( project, \"jar\", \"sources\", shadedSources );\n-                    }\n+                            replaceFile( shadedSources, sourcesJar );\n \n-                    if ( createDependencyReducedPom )\n-                    {\n-                        createDependencyReducedPom( artifactIds );\n+                            projectHelper.attachArtifact( project, \"jar\", \"sources\", shadedSources );\n+                        }\n+\n+                        if ( createDependencyReducedPom )\n+                        {\n+                            createDependencyReducedPom( artifactIds );\n+                        }\n                     }\n                 }\n             }\n@@ -671,10 +676,8 @@ private File resolveArtifactSources( Artifact artifact )\n             return relocators;\n         }\n \n-        for ( int i = 0; i < relocations.length; i++ )\n+        for ( PackageRelocation r : relocations )\n         {\n-            PackageRelocation r = relocations[i];\n-\n             relocators.add( new SimpleRelocator( r.getPattern(), r.getShadedPattern(), r.getIncludes(), r.getExcludes(),\n                                                  r.isRawString() ) );\n         }\n@@ -901,24 +904,19 @@ private void createDependencyReducedPom( Set<String> artifactsToRemove )\n \n                 if ( f.exists() )\n                 {\n+                    //noinspection ResultOfMethodCallIgnored\n                     f.delete();\n                 }\n \n                 Writer w = WriterFactory.newXmlWriter( f );\n \n-                String origRelativePath = null;\n                 String replaceRelativePath = null;\n                 if ( model.getParent() != null )\n                 {\n-                    origRelativePath = model.getParent().getRelativePath();\n+                    replaceRelativePath = model.getParent().getRelativePath();\n \n                 }\n-                replaceRelativePath = origRelativePath;\n \n-                if ( origRelativePath == null )\n-                {\n-                    origRelativePath = \"../pom.xml\";\n-                }\n \n                 if ( model.getParent() != null )\n                 {", "filename": "maven-shade-plugin/src/main/java/org/apache/maven/plugins/shade/mojo/ShadeMojo.java"}], "repo": "maven-plugins"}, {"commit": "https://github.com/apache/maven-plugins/commit/151475f30b1fe048737cbf92dd86b2a404c2daec", "parent": "https://github.com/apache/maven-plugins/commit/fdb225431e4c6c18ec16941fd85e4646b21d0c68", "message": "[MDEP-506] NPE in AnalyzeDepMgt.getMismatch\n\nSubmitted by: Olivier Orand <olivier.orand@orange.com>\t\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/plugins/trunk@1708923 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "maven-plugins_8", "file": [{"additions": 18, "raw_url": "https://github.com/apache/maven-plugins/raw/151475f30b1fe048737cbf92dd86b2a404c2daec/maven-dependency-plugin/src/it/projects/mdep-506-dependency-without-version-in-depmgt/invoker.properties", "blob_url": "https://github.com/apache/maven-plugins/blob/151475f30b1fe048737cbf92dd86b2a404c2daec/maven-dependency-plugin/src/it/projects/mdep-506-dependency-without-version-in-depmgt/invoker.properties", "sha": "d1074d2e6c787118a43a230a4212780a2e780891", "changes": 18, "status": "added", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/maven-plugins/contents/maven-dependency-plugin/src/it/projects/mdep-506-dependency-without-version-in-depmgt/invoker.properties?ref=151475f30b1fe048737cbf92dd86b2a404c2daec", "patch": "@@ -0,0 +1,18 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+# \n+#   http://www.apache.org/licenses/LICENSE-2.0\n+# \n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+\n+invoker.goals=${project.groupId}:${project.artifactId}:${project.version}:analyze-dep-mgt", "filename": "maven-dependency-plugin/src/it/projects/mdep-506-dependency-without-version-in-depmgt/invoker.properties"}, {"additions": 60, "raw_url": "https://github.com/apache/maven-plugins/raw/151475f30b1fe048737cbf92dd86b2a404c2daec/maven-dependency-plugin/src/it/projects/mdep-506-dependency-without-version-in-depmgt/pom.xml", "blob_url": "https://github.com/apache/maven-plugins/blob/151475f30b1fe048737cbf92dd86b2a404c2daec/maven-dependency-plugin/src/it/projects/mdep-506-dependency-without-version-in-depmgt/pom.xml", "sha": "b81f6766401bbb792a3ab1c4bd449aa03ba06b6f", "changes": 60, "status": "added", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/maven-plugins/contents/maven-dependency-plugin/src/it/projects/mdep-506-dependency-without-version-in-depmgt/pom.xml?ref=151475f30b1fe048737cbf92dd86b2a404c2daec", "patch": "@@ -0,0 +1,60 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<!--\n+  ~ Licensed to the Apache Software Foundation (ASF) under one\n+  ~ or more contributor license agreements.  See the NOTICE file\n+  ~ distributed with this work for additional information\n+  ~ regarding copyright ownership.  The ASF licenses this file\n+  ~ to you under the Apache License, Version 2.0 (the\n+  ~ \"License\"); you may not use this file except in compliance\n+  ~ with the License.  You may obtain a copy of the License at\n+  ~\n+  ~   http://www.apache.org/licenses/LICENSE-2.0\n+  ~\n+  ~ Unless required by applicable law or agreed to in writing,\n+  ~ software distributed under the License is distributed on an\n+  ~ \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+  ~ KIND, either express or implied.  See the License for the\n+  ~ specific language governing permissions and limitations\n+  ~ under the License.\n+  -->\n+\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\"\n+         xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+  <modelVersion>4.0.0</modelVersion>\n+\n+  <groupId>org.apache.maven.its.dependency</groupId>\n+  <artifactId>dependency-without-version-in-depmgt</artifactId>\n+  <version>1.0</version>\n+  <packaging>pom</packaging>\n+  <name>Analyze-dep-mgt should not fail with NPE when dependency in depMgt is partial</name>\n+\n+  <properties>\n+    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\n+    <spring-boot.version>1.2.6.RELEASE</spring-boot.version>\n+  </properties>\n+\n+  <dependencyManagement>\n+    <dependencies>\n+      <dependency>\n+        <groupId>org.springframework.boot</groupId>\n+         <artifactId>spring-boot-dependencies</artifactId>\n+         <version>${spring-boot.version}</version>\n+         <type>pom</type>\n+         <scope>import</scope>\n+       </dependency>\n+       <dependency>\n+         <groupId>org.springframework.cloud</groupId>\n+         <artifactId>spring-cloud-spring-service-connector</artifactId>\n+       </dependency>\n+     </dependencies>\n+   </dependencyManagement>\n+\n+   <dependencies>\n+     <dependency>\n+       <groupId>org.springframework.boot</groupId>\n+       <artifactId>spring-boot-starter-cloud-connectors</artifactId>\n+     </dependency>\n+   </dependencies>\n+</project>\n+", "filename": "maven-dependency-plugin/src/it/projects/mdep-506-dependency-without-version-in-depmgt/pom.xml"}, {"additions": 2, "raw_url": "https://github.com/apache/maven-plugins/raw/151475f30b1fe048737cbf92dd86b2a404c2daec/maven-dependency-plugin/src/main/java/org/apache/maven/plugins/dependency/analyze/AnalyzeDepMgt.java", "blob_url": "https://github.com/apache/maven-plugins/blob/151475f30b1fe048737cbf92dd86b2a404c2daec/maven-dependency-plugin/src/main/java/org/apache/maven/plugins/dependency/analyze/AnalyzeDepMgt.java", "sha": "8a28e70381869e1a3d73ce4e73cabf369467edf1", "changes": 3, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/maven-plugins/contents/maven-dependency-plugin/src/main/java/org/apache/maven/plugins/dependency/analyze/AnalyzeDepMgt.java?ref=151475f30b1fe048737cbf92dd86b2a404c2daec", "patch": "@@ -270,7 +270,8 @@ public String getExclusionKey( Exclusion ex )\n                 //workaround for MNG-2961\n                 dependencyArtifact.isSnapshot();\n \n-                if ( !depFromDepMgt.getVersion().equals( dependencyArtifact.getBaseVersion() ) )\n+                if ( depFromDepMgt.getVersion() != null\n+                        && !depFromDepMgt.getVersion().equals( dependencyArtifact.getBaseVersion() ) )\n                 {\n                     mismatchMap.put( dependencyArtifact, depFromDepMgt );\n                 }", "filename": "maven-dependency-plugin/src/main/java/org/apache/maven/plugins/dependency/analyze/AnalyzeDepMgt.java"}], "repo": "maven-plugins"}, {"commit": "https://github.com/apache/maven-plugins/commit/10c110c6a5b53c3caa9d13ed646bf664971e56f2", "parent": "https://github.com/apache/maven-plugins/commit/077478bd29b12b9953e612d229c5d3cb42b9e453", "message": "[MDEP-256] Check for a null scope to avoid NPE\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/plugins/trunk@1399960 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "maven-plugins_9", "file": [{"additions": 1, "raw_url": "https://github.com/apache/maven-plugins/raw/10c110c6a5b53c3caa9d13ed646bf664971e56f2/maven-dependency-plugin/src/main/java/org/apache/maven/plugin/dependency/PurgeLocalRepositoryMojo.java", "blob_url": "https://github.com/apache/maven-plugins/blob/10c110c6a5b53c3caa9d13ed646bf664971e56f2/maven-dependency-plugin/src/main/java/org/apache/maven/plugin/dependency/PurgeLocalRepositoryMojo.java", "sha": "8bdf417cc6c33582408e2bf24c15fe91d6601fa3", "changes": 2, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/maven-plugins/contents/maven-dependency-plugin/src/main/java/org/apache/maven/plugin/dependency/PurgeLocalRepositoryMojo.java?ref=10c110c6a5b53c3caa9d13ed646bf664971e56f2", "patch": "@@ -336,7 +336,7 @@ else if ( includes != null && !includes.isEmpty() )\n \n         for ( Dependency dependency : dependencies )\n         {\n-            if ( dependency.getScope().equals( Artifact.SCOPE_SYSTEM ) )\n+            if ( dependency.getScope() != null && dependency.getScope().equals( Artifact.SCOPE_SYSTEM ) )\n             {\n                 // Don't try to purge system dependencies\n                 continue;", "filename": "maven-dependency-plugin/src/main/java/org/apache/maven/plugin/dependency/PurgeLocalRepositoryMojo.java"}], "repo": "maven-plugins"}, {"commit": "https://github.com/apache/maven-plugins/commit/894ff1d1512eb999ba8590655b97f3a695eae037", "parent": "https://github.com/apache/maven-plugins/commit/589d0047a5c79681ffb2761e2eca2e475cc481da", "message": "backward comp and take care of NPE\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/plugins/trunk@1300049 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "maven-plugins_10", "file": [{"additions": 14, "raw_url": "https://github.com/apache/maven-plugins/raw/894ff1d1512eb999ba8590655b97f3a695eae037/maven-shade-plugin/src/main/java/org/apache/maven/plugins/shade/filter/MinijarFilter.java", "blob_url": "https://github.com/apache/maven-plugins/blob/894ff1d1512eb999ba8590655b97f3a695eae037/maven-shade-plugin/src/main/java/org/apache/maven/plugins/shade/filter/MinijarFilter.java", "sha": "3042ccf155557c4a714117f9e1b03e2dcc95dfe2", "changes": 15, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/maven-plugins/contents/maven-shade-plugin/src/main/java/org/apache/maven/plugins/shade/filter/MinijarFilter.java?ref=894ff1d1512eb999ba8590655b97f3a695eae037", "patch": "@@ -31,6 +31,7 @@\n import java.io.FileInputStream;\n import java.io.IOException;\n import java.io.InputStream;\n+import java.util.Collections;\n import java.util.HashSet;\n import java.util.Iterator;\n import java.util.List;\n@@ -53,6 +54,16 @@\n \n     private int classesRemoved;\n \n+    public MinijarFilter( MavenProject project, Log log )\n+        throws IOException\n+    {\n+        this( project, log, Collections.<SimpleFilter>emptyList() );\n+    }\n+\n+    /**\n+     *\n+     * @since 1.6\n+     */\n     public MinijarFilter( MavenProject project, Log log, List<SimpleFilter> simpleFilters )\n         throws IOException\n     {\n@@ -84,7 +95,9 @@ public MinijarFilter( MavenProject project, Log log, List<SimpleFilter> simpleFi\n         removePackages( artifactUnit );\n         removable.removeAll( artifactUnit.getClazzes() );\n         removable.removeAll( artifactUnit.getTransitiveDependencies() );\n-        removeSpecificallyIncludedClasses( project, simpleFilters );\n+        removeSpecificallyIncludedClasses( project, simpleFilters == null\n+            ? Collections.<SimpleFilter>emptyList()\n+            : simpleFilters );\n     }\n \n     private void removePackages( ClazzpathUnit artifactUnit )", "filename": "maven-shade-plugin/src/main/java/org/apache/maven/plugins/shade/filter/MinijarFilter.java"}], "repo": "maven-plugins"}, {"commit": "https://github.com/apache/maven-plugins/commit/379a578217c066d609cf3b45b8f9aad229bbc701", "parent": "https://github.com/apache/maven-plugins/commit/194c48371db0bab30eac9afbf406accff90b4ea2", "message": "avoid NPE when no authenticationInfo\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/plugins/trunk@1083303 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "maven-plugins_11", "file": [{"additions": 2, "raw_url": "https://github.com/apache/maven-plugins/raw/379a578217c066d609cf3b45b8f9aad229bbc701/maven-site-plugin/src/main/java/org/apache/maven/plugins/site/AbstractDeployMojo.java", "blob_url": "https://github.com/apache/maven-plugins/blob/379a578217c066d609cf3b45b8f9aad229bbc701/maven-site-plugin/src/main/java/org/apache/maven/plugins/site/AbstractDeployMojo.java", "sha": "7ebbc2271b4208a0fca5ca88441c430c7dab5f1e", "changes": 3, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/maven-plugins/contents/maven-site-plugin/src/main/java/org/apache/maven/plugins/site/AbstractDeployMojo.java?ref=379a578217c066d609cf3b45b8f9aad229bbc701", "patch": "@@ -302,7 +302,8 @@ private static void push( final File inputDirectory, final Repository repository\n         throws MojoExecutionException\n     {\n         AuthenticationInfo authenticationInfo = manager.getAuthenticationInfo( repository.getId() );\n-        log.debug( \"authenticationInfo with id '\" + repository.getId() + \"': \" + authenticationInfo.getUserName() );\n+        log.debug( \"authenticationInfo with id '\" + repository.getId() + \"': \"\n+            + ( ( authenticationInfo == null ) ? \"-\" : authenticationInfo.getUserName() ) );\n \n         try\n         {", "filename": "maven-site-plugin/src/main/java/org/apache/maven/plugins/site/AbstractDeployMojo.java"}], "repo": "maven-plugins"}, {"commit": "https://github.com/apache/maven-plugins/commit/6a84558460f8777a9922e842946e7a816889acdc", "parent": "https://github.com/apache/maven-plugins/commit/59de87234983d52a9725d3e86828e56db4f69d54", "message": "[MPIR-211] NPE with custom text bundle\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/plugins/trunk@1049044 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "maven-plugins_12", "file": [{"additions": 1, "raw_url": "https://github.com/apache/maven-plugins/raw/6a84558460f8777a9922e842946e7a816889acdc/maven-project-info-reports-plugin/src/main/java/org/apache/maven/report/projectinfo/AbstractProjectInfoReport.java", "blob_url": "https://github.com/apache/maven-plugins/blob/6a84558460f8777a9922e842946e7a816889acdc/maven-project-info-reports-plugin/src/main/java/org/apache/maven/report/projectinfo/AbstractProjectInfoReport.java", "sha": "dd5e95a9374fa44a3c5e92b8096de1372c4fb879", "changes": 2, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/maven-plugins/contents/maven-project-info-reports-plugin/src/main/java/org/apache/maven/report/projectinfo/AbstractProjectInfoReport.java?ref=6a84558460f8777a9922e842946e7a816889acdc", "patch": "@@ -357,7 +357,7 @@ public CustomI18N( MavenProject project, Settings settings, File customBundleFil\n             this.bundle = ResourceBundle.getBundle( this.bundleName, locale, classLoader );\n             if ( !this.bundle.getLocale().getLanguage().equals( locale.getLanguage() ) )\n             {\n-                this.bundle = ResourceBundle.getBundle( this.bundleName, new Locale( null ), classLoader );\n+                this.bundle = ResourceBundle.getBundle( this.bundleName, Locale.getDefault(), classLoader );\n             }\n         }\n ", "filename": "maven-project-info-reports-plugin/src/main/java/org/apache/maven/report/projectinfo/AbstractProjectInfoReport.java"}], "repo": "maven-plugins"}, {"commit": "https://github.com/apache/maven-plugins/commit/d664c5d624d84e1026322e7b3ba3f81029ee9a5c", "parent": "https://github.com/apache/maven-plugins/commit/7ac843c6d017fdb830adbeb4a9ade447ddcb1b90", "message": "o prevent NPE\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/plugins/trunk@1042031 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "maven-plugins_13", "file": [{"additions": 1, "raw_url": "https://github.com/apache/maven-plugins/raw/d664c5d624d84e1026322e7b3ba3f81029ee9a5c/maven-project-info-reports-plugin/src/main/java/org/apache/maven/report/projectinfo/dependencies/RepositoryUtils.java", "blob_url": "https://github.com/apache/maven-plugins/blob/d664c5d624d84e1026322e7b3ba3f81029ee9a5c/maven-project-info-reports-plugin/src/main/java/org/apache/maven/report/projectinfo/dependencies/RepositoryUtils.java", "sha": "787946a6880055ece956ee989077435bc50cc936", "changes": 2, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/maven-plugins/contents/maven-project-info-reports-plugin/src/main/java/org/apache/maven/report/projectinfo/dependencies/RepositoryUtils.java?ref=d664c5d624d84e1026322e7b3ba3f81029ee9a5c", "patch": "@@ -253,7 +253,7 @@ public boolean dependencyExistsInRepo( ArtifactRepository repo, Artifact artifac\n         }\n         catch ( TransferFailedException e )\n         {\n-            if ( e.getCause().getClass().isAssignableFrom( UnknownHostException.class ) )\n+            if ( e.getCause() instanceof UnknownHostException )\n             {\n                 log.error( \"Unknown host \" + e.getCause().getMessage() + \" - ignored it\" );\n                 UNKNOWN_HOSTS.add( repo.getUrl() );", "filename": "maven-project-info-reports-plugin/src/main/java/org/apache/maven/report/projectinfo/dependencies/RepositoryUtils.java"}], "repo": "maven-plugins"}, {"commit": "https://github.com/apache/maven-plugins/commit/80c468f383facc37900c38aeca58955cd98a556e", "parent": "https://github.com/apache/maven-plugins/commit/4bbe9f11628ac7e0e62a81ff18f5895dae486453", "message": "[MLINKCHECK-1] fix NPE when pom has no reporting section\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/plugins/trunk@982571 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "maven-plugins_14", "file": [{"additions": 7, "raw_url": "https://github.com/apache/maven-plugins/raw/80c468f383facc37900c38aeca58955cd98a556e/maven-linkcheck-plugin/src/main/java/org/apache/maven/plugins/linkcheck/LinkcheckReport.java", "blob_url": "https://github.com/apache/maven-plugins/blob/80c468f383facc37900c38aeca58955cd98a556e/maven-linkcheck-plugin/src/main/java/org/apache/maven/plugins/linkcheck/LinkcheckReport.java", "sha": "0a9c12d3bf2c9c49955a27e23dcf8fcbaed498f4", "changes": 7, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/maven-plugins/contents/maven-linkcheck-plugin/src/main/java/org/apache/maven/plugins/linkcheck/LinkcheckReport.java?ref=80c468f383facc37900c38aeca58955cd98a556e", "patch": "@@ -46,6 +46,7 @@\n import org.apache.maven.doxia.linkcheck.model.LinkcheckFileResult;\n import org.apache.maven.doxia.linkcheck.model.LinkcheckModel;\n import org.apache.maven.doxia.siterenderer.Renderer;\n+import org.apache.maven.model.Reporting;\n import org.apache.maven.plugin.MojoExecutionException;\n import org.apache.maven.project.MavenProject;\n import org.apache.maven.reporting.AbstractMavenReport;\n@@ -575,6 +576,12 @@ private void invokeSite( File tmpReportingOutputDirectory )\n             ioe.setStackTrace( e.getStackTrace() );\n             throw ioe;\n         }\n+\n+        // MLINKCHECK-1\n+        if ( clone.getOriginalModel().getReporting() == null ) {\n+            clone.getOriginalModel().setReporting( new Reporting() );\n+        }\n+\n         clone.getOriginalModel().getReporting().setOutputDirectory( tmpReportingOutputDirectory.getAbsolutePath() );\n \n         // create the original model as tmp pom file for the invoker", "filename": "maven-linkcheck-plugin/src/main/java/org/apache/maven/plugins/linkcheck/LinkcheckReport.java"}], "repo": "maven-plugins"}, {"commit": "https://github.com/apache/maven-plugins/commit/19cae1820f9d97e313e11e6833f070ec23991e66", "parent": "https://github.com/apache/maven-plugins/commit/277ccf6a8e9e19706ecb317c64b11a9bca650c79", "message": "prevent potential NPE.\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/plugins/trunk@911264 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "maven-plugins_15", "file": [{"additions": 1, "raw_url": "https://github.com/apache/maven-plugins/raw/19cae1820f9d97e313e11e6833f070ec23991e66/maven-javadoc-plugin/src/main/java/org/apache/maven/plugin/javadoc/AbstractJavadocMojo.java", "blob_url": "https://github.com/apache/maven-plugins/blob/19cae1820f9d97e313e11e6833f070ec23991e66/maven-javadoc-plugin/src/main/java/org/apache/maven/plugin/javadoc/AbstractJavadocMojo.java", "sha": "176b331229a8b7c6c798005f17fdceddd4d1e9a2", "changes": 2, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/maven-plugins/contents/maven-javadoc-plugin/src/main/java/org/apache/maven/plugin/javadoc/AbstractJavadocMojo.java?ref=19cae1820f9d97e313e11e6833f070ec23991e66", "patch": "@@ -4759,7 +4759,7 @@ private List getDependenciesLinks()\n         {\n             Artifact artifact = (Artifact) it.next();\n \n-            if ( artifact != null && artifact.getFile().exists() )\n+            if ( artifact != null && artifact.getFile() != null && artifact.getFile().exists() )\n             {\n                 try\n                 {", "filename": "maven-javadoc-plugin/src/main/java/org/apache/maven/plugin/javadoc/AbstractJavadocMojo.java"}], "repo": "maven-plugins"}, {"commit": "https://github.com/apache/maven-plugins/commit/922534ebee84f54b1f3e38e01d30a748e19c4389", "parent": "https://github.com/apache/maven-plugins/commit/7c3ba0b0b57d5609c20c38e3590a5cf3c3271e19", "message": "[MGPG-18] NPE in GpgSigner\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/plugins/trunk@908978 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "maven-plugins_16", "file": [{"additions": 6, "raw_url": "https://github.com/apache/maven-plugins/raw/922534ebee84f54b1f3e38e01d30a748e19c4389/maven-gpg-plugin/src/main/java/org/apache/maven/plugin/gpg/GpgSignAttachedMojo.java", "blob_url": "https://github.com/apache/maven-plugins/blob/922534ebee84f54b1f3e38e01d30a748e19c4389/maven-gpg-plugin/src/main/java/org/apache/maven/plugin/gpg/GpgSignAttachedMojo.java", "sha": "87d50bb1236d7387f2bbf3d4785b549949ebf022", "changes": 6, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/maven-plugins/contents/maven-gpg-plugin/src/main/java/org/apache/maven/plugin/gpg/GpgSignAttachedMojo.java?ref=922534ebee84f54b1f3e38e01d30a748e19c4389", "patch": "@@ -150,6 +150,12 @@ public void execute()\n \n             File projectArtifact = project.getArtifact().getFile();\n \n+            if ( projectArtifact == null )\n+            {\n+                throw new MojoFailureException( \"The project artifact has not been assembled yet. \"\n+                    + \"Please do not invoke this goal before the lifecycle phase \\\"package\\\".\" );\n+            }\n+\n             File projectArtifactSignature = signer.generateSignatureForArtifact( projectArtifact );\n \n             if ( projectArtifactSignature != null )", "filename": "maven-gpg-plugin/src/main/java/org/apache/maven/plugin/gpg/GpgSignAttachedMojo.java"}], "repo": "maven-plugins"}, {"commit": "https://github.com/apache/maven-plugins/commit/3ae0cf89ed57e2b06bf4e641a1cd23e0ccb5697c", "parent": "https://github.com/apache/maven-plugins/commit/8bc5b09b59a91c7d511c232b6b63e0f8c8206ee0", "message": "[MPDF-35] NPE when document descriptor has no meta information\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/plugins/trunk@891591 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "maven-plugins_17", "file": [{"additions": 6, "raw_url": "https://github.com/apache/maven-plugins/raw/3ae0cf89ed57e2b06bf4e641a1cd23e0ccb5697c/maven-pdf-plugin/src/main/java/org/apache/maven/plugins/pdf/PdfMojo.java", "blob_url": "https://github.com/apache/maven-plugins/blob/3ae0cf89ed57e2b06bf4e641a1cd23e0ccb5697c/maven-pdf-plugin/src/main/java/org/apache/maven/plugins/pdf/PdfMojo.java", "sha": "b588667fd8700df82636f7f1b444fd622d042b2f", "changes": 6, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/maven-plugins/contents/maven-pdf-plugin/src/main/java/org/apache/maven/plugins/pdf/PdfMojo.java?ref=3ae0cf89ed57e2b06bf4e641a1cd23e0ccb5697c", "patch": "@@ -49,6 +49,7 @@\n import org.apache.maven.doxia.docrenderer.DocumentRendererContext;\n import org.apache.maven.doxia.docrenderer.DocumentRendererException;\n import org.apache.maven.doxia.docrenderer.pdf.PdfRenderer;\n+import org.apache.maven.doxia.document.DocumentMeta;\n import org.apache.maven.doxia.document.DocumentModel;\n import org.apache.maven.doxia.document.DocumentTOCItem;\n import org.apache.maven.doxia.document.io.xpp3.DocumentXpp3Writer;\n@@ -782,6 +783,11 @@ private DocumentModel getDocumentModelFromDescriptor( Locale locale )\n             throw new MojoExecutionException( \"Error opening DocumentDescriptor!\", io );\n         }\n \n+        if ( model.getMeta() == null )\n+        {\n+            model.setMeta( new DocumentMeta() );\n+        }\n+\n         if ( StringUtils.isEmpty( model.getMeta().getLanguage() ) )\n         {\n             model.getMeta().setLanguage( locale.getLanguage() );", "filename": "maven-pdf-plugin/src/main/java/org/apache/maven/plugins/pdf/PdfMojo.java"}], "repo": "maven-plugins"}, {"commit": "https://github.com/apache/maven-plugins/commit/9c881867c8e6b3dade149b47e1fb7913f8fec9d2", "parent": "https://github.com/apache/maven-plugins/commit/75cc072292eec7810fe07d3022a18c413ae43564", "message": "fix junit (prevent NPE in core)\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/plugins/trunk@817018 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "maven-plugins_18", "file": [{"additions": 5, "raw_url": "https://github.com/apache/maven-plugins/raw/9c881867c8e6b3dade149b47e1fb7913f8fec9d2/maven-project-info-reports-plugin/src/main/java/org/apache/maven/report/projectinfo/ProjectInfoReportUtils.java", "blob_url": "https://github.com/apache/maven-plugins/blob/9c881867c8e6b3dade149b47e1fb7913f8fec9d2/maven-project-info-reports-plugin/src/main/java/org/apache/maven/report/projectinfo/ProjectInfoReportUtils.java", "sha": "a5f80fb609d62812a6bb14c21b7bfd2cb0b72da1", "changes": 7, "status": "modified", "deletions": 2, "contents_url": "https://api.github.com/repos/apache/maven-plugins/contents/maven-project-info-reports-plugin/src/main/java/org/apache/maven/report/projectinfo/ProjectInfoReportUtils.java?ref=9c881867c8e6b3dade149b47e1fb7913f8fec9d2", "patch": "@@ -24,6 +24,7 @@\n import java.net.Authenticator;\n import java.net.PasswordAuthentication;\n import java.net.URL;\n+import java.util.Collections;\n import java.util.List;\n import java.util.Properties;\n \n@@ -168,8 +169,10 @@ public static String getArtifactUrl( ArtifactFactory factory, Artifact artifact,\n         }\n         try\n         {\n-            MavenProject pluginProject = mavenProjectBuilder.buildFromRepository( copyArtifact, remoteRepositories,\n-                                                                                  localRepository );\n+            MavenProject pluginProject =\n+                mavenProjectBuilder.buildFromRepository( copyArtifact,\n+                                                         remoteRepositories == null ? Collections.EMPTY_LIST\n+                                                                         : remoteRepositories, localRepository );\n \n             if ( isArtifactUrlValid( pluginProject.getUrl() ) )\n             {", "filename": "maven-project-info-reports-plugin/src/main/java/org/apache/maven/report/projectinfo/ProjectInfoReportUtils.java"}], "repo": "maven-plugins"}, {"commit": "https://github.com/apache/maven-plugins/commit/62894335cc7af35fcdbeb25581aefb5b68d64d5a", "parent": "https://github.com/apache/maven-plugins/commit/e75c8b441cf0cb48ebd4cdec64e01795193f5d8c", "message": "[MDEPLOY-84] NPE when deploy-file with generatePom=false \n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/plugins/trunk@754784 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "maven-plugins_19", "file": [{"additions": 11, "raw_url": "https://github.com/apache/maven-plugins/raw/62894335cc7af35fcdbeb25581aefb5b68d64d5a/maven-deploy-plugin/src/main/java/org/apache/maven/plugin/deploy/DeployFileMojo.java", "blob_url": "https://github.com/apache/maven-plugins/blob/62894335cc7af35fcdbeb25581aefb5b68d64d5a/maven-deploy-plugin/src/main/java/org/apache/maven/plugin/deploy/DeployFileMojo.java", "sha": "190017147c3ba3501419516bcb3c9a223b2f9bfc", "changes": 19, "status": "modified", "deletions": 8, "contents_url": "https://api.github.com/repos/apache/maven-plugins/contents/maven-deploy-plugin/src/main/java/org/apache/maven/plugin/deploy/DeployFileMojo.java?ref=62894335cc7af35fcdbeb25581aefb5b68d64d5a", "patch": "@@ -235,15 +235,18 @@ public void execute()\n         }\n \n         // Upload the POM if requested, generating one if need be\n-        if ( generatePom )\n+        if ( !\"pom\".equals( packaging ) )\n         {\n-            ArtifactMetadata metadata = new ProjectArtifactMetadata( artifact, generatePomFile() );\n-            artifact.addMetadata( metadata );\n-        }\n-        else\n-        {\n-            ArtifactMetadata metadata = new ProjectArtifactMetadata( artifact, pomFile );\n-            artifact.addMetadata( metadata );\n+            if ( pomFile != null )\n+            {\n+                ArtifactMetadata metadata = new ProjectArtifactMetadata( artifact, pomFile );\n+                artifact.addMetadata( metadata );\n+            }\n+            else if ( generatePom )\n+            {\n+                ArtifactMetadata metadata = new ProjectArtifactMetadata( artifact, generatePomFile() );\n+                artifact.addMetadata( metadata );\n+            }\n         }\n \n         try", "filename": "maven-deploy-plugin/src/main/java/org/apache/maven/plugin/deploy/DeployFileMojo.java"}], "repo": "maven-plugins"}, {"commit": "https://github.com/apache/maven-plugins/commit/00904719cfe73d3ec63bc9c5a62bebbb5224e328", "parent": "https://github.com/apache/maven-plugins/commit/243cb72d81ada77420e28f81651e3f1844d477e2", "message": "[MWAR-170] fix possible NPE\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/plugins/trunk@712569 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "maven-plugins_20", "file": [{"additions": 4, "raw_url": "https://github.com/apache/maven-plugins/raw/00904719cfe73d3ec63bc9c5a62bebbb5224e328/maven-war-plugin/src/main/java/org/apache/maven/plugin/war/util/WebappStructure.java", "blob_url": "https://github.com/apache/maven-plugins/blob/00904719cfe73d3ec63bc9c5a62bebbb5224e328/maven-war-plugin/src/main/java/org/apache/maven/plugin/war/util/WebappStructure.java", "sha": "8f440fa90ca0b494f9c6001833e9171110a54dd6", "changes": 4, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/maven-plugins/contents/maven-war-plugin/src/main/java/org/apache/maven/plugin/war/util/WebappStructure.java?ref=00904719cfe73d3ec63bc9c5a62bebbb5224e328", "patch": "@@ -106,6 +106,10 @@ public List getDependenciesInfo()\n     public List getDependencies()\n     {\n         final List result = new ArrayList();\n+        if ( dependenciesInfo == null )\n+        {\n+            return result;\n+        }\n         final Iterator it = dependenciesInfo.iterator();\n         while ( it.hasNext() )\n         {", "filename": "maven-war-plugin/src/main/java/org/apache/maven/plugin/war/util/WebappStructure.java"}], "repo": "maven-plugins"}, {"commit": "https://github.com/apache/maven-plugins/commit/b6d3b9d42b1e4f2ba7265d2870eb791c6209d25a", "parent": "https://github.com/apache/maven-plugins/commit/444f4fccb75645ca02c14738129b667d0b29abde", "message": "o fixed potential NPE if no goals\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/plugins/trunk@690677 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "maven-plugins_21", "file": [{"additions": 8, "raw_url": "https://github.com/apache/maven-plugins/raw/b6d3b9d42b1e4f2ba7265d2870eb791c6209d25a/maven-help-plugin/src/main/java/org/apache/maven/plugins/help/DescribeMojo.java", "blob_url": "https://github.com/apache/maven-plugins/blob/b6d3b9d42b1e4f2ba7265d2870eb791c6209d25a/maven-help-plugin/src/main/java/org/apache/maven/plugins/help/DescribeMojo.java", "sha": "6c6aa2ae108e0ba038e4d403bf2f344c52188c5a", "changes": 10, "status": "modified", "deletions": 2, "contents_url": "https://api.github.com/repos/apache/maven-plugins/contents/maven-help-plugin/src/main/java/org/apache/maven/plugins/help/DescribeMojo.java?ref=b6d3b9d42b1e4f2ba7265d2870eb791c6209d25a", "patch": "@@ -573,14 +573,20 @@ private void describePlugin( PluginDescriptor pd, StringBuffer buffer )\n         append( buffer, \"Goal Prefix\", pd.getGoalPrefix(), 0 );\n         buffer.append( \"\\n\" );\n \n+        List mojos = pd.getMojos();\n+\n+        if ( mojos == null )\n+        {\n+            append( buffer, \"This plugin has no goals.\", 0 );\n+            return;\n+        }\n+\n         if ( ( detail || medium ) && !minimal )\n         {\n             append( buffer, \"This plugin has \" + pd.getMojos().size() + \" goal\"\n                 + ( pd.getMojos().size() > 1 ? \"s\" : \"\" ) + \":\", 0 );\n             buffer.append( \"\\n\" );\n \n-            List mojos = pd.getMojos();\n-\n             PluginUtils.sortMojos( mojos );\n \n             for ( Iterator it = mojos.iterator(); it.hasNext(); )", "filename": "maven-help-plugin/src/main/java/org/apache/maven/plugins/help/DescribeMojo.java"}], "repo": "maven-plugins"}, {"commit": "https://github.com/apache/maven-plugins/commit/08dce5b7d059f1cdf6d07cff203287a2f13cffb2", "parent": "https://github.com/apache/maven-plugins/commit/5f1c8247efbfaf34a9a8288bb6a529a137d6cf1b", "message": "[MRRESOURCES-26] Fix NPE\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/plugins/trunk@599317 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "maven-plugins_22", "file": [{"additions": 12, "raw_url": "https://github.com/apache/maven-plugins/raw/08dce5b7d059f1cdf6d07cff203287a2f13cffb2/maven-remote-resources-plugin/src/main/java/org/apache/maven/plugin/resources/remote/ProcessRemoteResourcesMojo.java", "blob_url": "https://github.com/apache/maven-plugins/blob/08dce5b7d059f1cdf6d07cff203287a2f13cffb2/maven-remote-resources-plugin/src/main/java/org/apache/maven/plugin/resources/remote/ProcessRemoteResourcesMojo.java", "sha": "b20981217c74194423e2bc89cb47e754bbefbaa9", "changes": 15, "status": "modified", "deletions": 3, "contents_url": "https://api.github.com/repos/apache/maven-plugins/contents/maven-remote-resources-plugin/src/main/java/org/apache/maven/plugin/resources/remote/ProcessRemoteResourcesMojo.java?ref=08dce5b7d059f1cdf6d07cff203287a2f13cffb2", "patch": "@@ -66,7 +66,6 @@\n import java.net.URLConnection;\n import java.text.SimpleDateFormat;\n import java.util.ArrayList;\n-import java.util.Arrays;\n import java.util.Collections;\n import java.util.Comparator;\n import java.util.Date;\n@@ -78,14 +77,18 @@\n import java.util.TreeMap;\n \n /**\n+ * <p>\n  * Pull down resourceBundles containing remote resources and process the resources contained\n  * inside the artifact.\n- * <p/>\n+ * </p>\n+ * <p>\n  * Resources that end in \".vm\" are treated as velocity templates.  For those, the \".vm\" is\n  * stripped off for the final artifact name and it's  fed through velocity to have properties\n  * expanded, conditions processed, etc...\n- * <p/>\n+ * </p>\n+ * <p>\n  * Resources that don't end in \".vm\" are copied \"as is\".\n+ * </p>\n  *\n  * @goal process\n  * @requiresDependencyResolution runtime\n@@ -412,9 +415,11 @@ protected Map getProjectsSortedByOrganization( List projects )\n     {\n         Map organizations = new TreeMap( new OrganizationComparator() );\n         List unknownOrganization = new ArrayList();\n+\n         for ( Iterator i = projects.iterator(); i.hasNext(); )\n         {\n             MavenProject p = (MavenProject) i.next();\n+\n             if ( p.getOrganization() != null && StringUtils.isNotEmpty( p.getOrganization().getName() ) )\n             {\n                 List sortedProjects = (List) organizations.get( p.getOrganization() );\n@@ -856,6 +861,10 @@ else if ( s1 == null && s2 != null )\n             {\n                 return 1;\n             }\n+            else if ( s1 != null && s2 == null )\n+            {\n+                return -1;\n+            }\n             \n             return s1.compareToIgnoreCase( s2 );\n         }", "filename": "maven-remote-resources-plugin/src/main/java/org/apache/maven/plugin/resources/remote/ProcessRemoteResourcesMojo.java"}], "repo": "maven-plugins"}, {"commit": "https://github.com/apache/maven-plugins/commit/20510b5861b8ff2270f75bdc802725bc9f694749", "parent": "https://github.com/apache/maven-plugins/commit/307731427541abc29966e1431f71c842f9de72d7", "message": "Add junit dependency to not have a NPE from surefire\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/plugins/trunk@597251 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "maven-plugins_23", "file": [{"additions": 7, "raw_url": "https://github.com/apache/maven-plugins/raw/20510b5861b8ff2270f75bdc802725bc9f694749/maven-eclipse-plugin/src/test/resources/projects/project-36/pom.xml", "blob_url": "https://github.com/apache/maven-plugins/blob/20510b5861b8ff2270f75bdc802725bc9f694749/maven-eclipse-plugin/src/test/resources/projects/project-36/pom.xml", "sha": "f6ad9bb7bcc68fe39f8073102d0dd2f47d31d4cc", "changes": 7, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/maven-plugins/contents/maven-eclipse-plugin/src/test/resources/projects/project-36/pom.xml?ref=20510b5861b8ff2270f75bdc802725bc9f694749", "patch": "@@ -26,6 +26,13 @@\n       </plugin>\n     </plugins>\n   </build>\n+  <dependencies>\n+    <dependency>\n+      <groupId>junit</groupId>\n+      <artifactId>junit</artifactId>\n+      <version>3.8.2</version>\n+    </dependency>\n+  </dependencies>\n   <modules>\n     <module>my-ejb</module>\n     <module>my-ear</module>", "filename": "maven-eclipse-plugin/src/test/resources/projects/project-36/pom.xml"}], "repo": "maven-plugins"}, {"commit": "https://github.com/apache/maven-plugins/commit/ce83c2dcde02d24f5afafa8d888df7bb7c7cfd86", "parent": "https://github.com/apache/maven-plugins/commit/6abed7e0a37ac0fdb6911828f717c0988cee5ed2", "message": "fix NPE in tests\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/plugins/trunk@595059 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "maven-plugins_24", "file": [{"additions": 6, "raw_url": "https://github.com/apache/maven-plugins/raw/ce83c2dcde02d24f5afafa8d888df7bb7c7cfd86/maven-clean-plugin/pom.xml", "blob_url": "https://github.com/apache/maven-plugins/blob/ce83c2dcde02d24f5afafa8d888df7bb7c7cfd86/maven-clean-plugin/pom.xml", "sha": "a47bd91ad25a2b519aae72a4455001dbf47fa9cb", "changes": 6, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/maven-plugins/contents/maven-clean-plugin/pom.xml?ref=ce83c2dcde02d24f5afafa8d888df7bb7c7cfd86", "patch": "@@ -74,6 +74,12 @@ under the License.\n       <version>3.8.1</version>\n       <scope>test</scope>\n     </dependency>\n+    <dependency>\n+      <groupId>org.apache.maven.shared</groupId>\n+      <artifactId>maven-plugin-testing-harness</artifactId>\n+      <version>1.1</version>\n+      <scope>test</scope>\n+    </dependency>\t  \n   </dependencies>\n \n   <contributors>", "filename": "maven-clean-plugin/pom.xml"}, {"additions": 10, "raw_url": "https://github.com/apache/maven-plugins/raw/ce83c2dcde02d24f5afafa8d888df7bb7c7cfd86/maven-clean-plugin/src/test/java/org/apache/maven/plugin/clean/CleanMojoTest.java", "blob_url": "https://github.com/apache/maven-plugins/blob/ce83c2dcde02d24f5afafa8d888df7bb7c7cfd86/maven-clean-plugin/src/test/java/org/apache/maven/plugin/clean/CleanMojoTest.java", "sha": "61a0c08e2320f5cd14c2ce417d48e310ce21d282", "changes": 19, "status": "modified", "deletions": 9, "contents_url": "https://api.github.com/repos/apache/maven-plugins/contents/maven-clean-plugin/src/test/java/org/apache/maven/plugin/clean/CleanMojoTest.java?ref=ce83c2dcde02d24f5afafa8d888df7bb7c7cfd86", "patch": "@@ -19,21 +19,20 @@\n  * under the License.\n  */\n \n-import junit.framework.TestCase;\n-import org.apache.maven.plugin.MojoExecutionException;\n-import org.codehaus.plexus.util.FileUtils;\n-import org.codehaus.plexus.util.IOUtil;\n-\n import java.io.File;\n-import java.io.FileInputStream;\n-import java.io.FileNotFoundException;\n import java.util.Arrays;\n \n+import org.apache.maven.plugin.MojoExecutionException;\n+import org.apache.maven.plugin.testing.AbstractMojoTestCase;\n+import org.apache.maven.plugin.testing.stubs.MavenProjectStub;\n+import org.apache.maven.project.MavenProject;\n+import org.codehaus.plexus.util.FileUtils;\n+\n /**\n  * Test the clean mojo.\n  */\n public class CleanMojoTest\n-    extends TestCase\n+    extends AbstractMojoTestCase\n {\n     private static final String TARGET_TEST_DIR = \"target/testDirectoryStructure\";\n \n@@ -124,7 +123,9 @@ public void testFilesets()\n         String base = TARGET_TEST_DIR + \"/target\";\n \n         CleanMojo mojo = new CleanMojo();\n-\n+        MavenProjectStub project = new MavenProjectStub();\n+        project.setExecutionRoot( false );\n+        setVariableValueToObject( mojo, \"project\", project );\n         mojo.addFileset( createFileset( base, \"**/file.txt\", \"**/subdir/**\" ) );\n \n         String outputDirectory = TARGET_TEST_DIR + \"/buildOutputDirectory\";", "filename": "maven-clean-plugin/src/test/java/org/apache/maven/plugin/clean/CleanMojoTest.java"}], "repo": "maven-plugins"}, {"commit": "https://github.com/apache/maven-plugins/commit/4e75ea42c471402c27bbbf0498d88cd37b7f48d3", "parent": "https://github.com/apache/maven-plugins/commit/539534caeaea831ddfd1ad20530afa53d39fcfd8", "message": "o fixed a possible NPE\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/plugins/trunk@554202 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "maven-plugins_25", "file": [{"additions": 4, "raw_url": "https://github.com/apache/maven-plugins/raw/4e75ea42c471402c27bbbf0498d88cd37b7f48d3/maven-javadoc-plugin/src/main/java/org/apache/maven/plugin/javadoc/AbstractJavadocMojo.java", "blob_url": "https://github.com/apache/maven-plugins/blob/4e75ea42c471402c27bbbf0498d88cd37b7f48d3/maven-javadoc-plugin/src/main/java/org/apache/maven/plugin/javadoc/AbstractJavadocMojo.java", "sha": "b78a39df703d1471f552c0257fc294a92c9b4605", "changes": 5, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/maven-plugins/contents/maven-javadoc-plugin/src/main/java/org/apache/maven/plugin/javadoc/AbstractJavadocMojo.java?ref=4e75ea42c471402c27bbbf0498d88cd37b7f48d3", "patch": "@@ -1517,7 +1517,10 @@ protected List getSourcePaths()\n         else\n         {\n             sourcePaths = new ArrayList( Arrays.asList( sourcepath.split( \"[;]\" ) ) );\n-            sourcePaths.add( getJavadocDirectory().getAbsolutePath() );\n+            if ( getJavadocDirectory() != null )\n+            {\n+                sourcePaths.add( getJavadocDirectory().getAbsolutePath() );\n+            }\n             sourcePaths = pruneSourceDirs( sourcePaths );\n         }\n ", "filename": "maven-javadoc-plugin/src/main/java/org/apache/maven/plugin/javadoc/AbstractJavadocMojo.java"}], "repo": "maven-plugins"}, {"commit": "https://github.com/apache/maven-plugins/commit/ed5aba126bbc3c09f34e428838ff4bd6aab71154", "parent": "https://github.com/apache/maven-plugins/commit/160db0905298ab55a693d12789c3ea13d2ac98f6", "message": "MENFORCER-9: fixed npe in java rule\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/plugins/trunk@548837 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "maven-plugins_26", "file": [{"additions": 0, "raw_url": "https://github.com/apache/maven-plugins/raw/ed5aba126bbc3c09f34e428838ff4bd6aab71154/maven-enforcer-plugin/src/main/java/org/apache/maven/plugin/enforcer/EvaluateBeanshell.java", "blob_url": "https://github.com/apache/maven-plugins/blob/ed5aba126bbc3c09f34e428838ff4bd6aab71154/maven-enforcer-plugin/src/main/java/org/apache/maven/plugin/enforcer/EvaluateBeanshell.java", "sha": "f7779ebd10d9e3dc949eefba1cf718d5c00e8e5e", "changes": 1, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/maven-plugins/contents/maven-enforcer-plugin/src/main/java/org/apache/maven/plugin/enforcer/EvaluateBeanshell.java?ref=ed5aba126bbc3c09f34e428838ff4bd6aab71154", "patch": "@@ -27,7 +27,6 @@\n import org.apache.maven.shared.enforcer.rule.api.EnforcerRule;\n import org.apache.maven.shared.enforcer.rule.api.EnforcerRuleException;\n import org.apache.maven.shared.enforcer.rule.api.EnforcerRuleHelper;\n-import org.codehaus.plexus.component.configurator.expression.ExpressionEvaluationException;\n import org.codehaus.plexus.util.StringUtils;\n \n import bsh.EvalError;", "filename": "maven-enforcer-plugin/src/main/java/org/apache/maven/plugin/enforcer/EvaluateBeanshell.java"}, {"additions": 16, "raw_url": "https://github.com/apache/maven-plugins/raw/ed5aba126bbc3c09f34e428838ff4bd6aab71154/maven-enforcer-plugin/src/main/java/org/apache/maven/plugin/enforcer/RequireJavaVersion.java", "blob_url": "https://github.com/apache/maven-plugins/blob/ed5aba126bbc3c09f34e428838ff4bd6aab71154/maven-enforcer-plugin/src/main/java/org/apache/maven/plugin/enforcer/RequireJavaVersion.java", "sha": "ea44215d6772076b1195f15612f6ff2a358b1ea9", "changes": 30, "status": "modified", "deletions": 14, "contents_url": "https://api.github.com/repos/apache/maven-plugins/contents/maven-enforcer-plugin/src/main/java/org/apache/maven/plugin/enforcer/RequireJavaVersion.java?ref=ed5aba126bbc3c09f34e428838ff4bd6aab71154", "patch": "@@ -36,7 +36,8 @@\n  * This rule checks that the Java version is allowed.\r\n  * \r\n  * @author <a href=\"mailto:brianf@apache.org\">Brian Fox</a>\r\n- * @version $Id$\r\n+ * @version $Id: RequireJavaVersion.java 525005 2007-04-03\r\n+ *          02:46:44Z brianf $\r\n  */\r\n public class RequireJavaVersion\r\n     extends AbstractVersionEnforcer\r\n@@ -63,11 +64,10 @@ public void execute( EnforcerRuleHelper helper )\n     }\r\n \r\n     /**\r\n-     * Converts a jdk string from 1.5.0-11b12 to a single 3 digit version like\r\n-     * 1.5.0-11\r\n+     * Converts a jdk string from 1.5.0-11b12 to a single 3\r\n+     * digit version like 1.5.0-11\r\n      * \r\n-     * @param theJdkVersion\r\n-     *            to be converted.\r\n+     * @param theJdkVersion to be converted.\r\n      * @return the converted string.\r\n      */\r\n     public static String normalizeJDKVersion( String theJdkVersion )\r\n@@ -84,17 +84,19 @@ public static String normalizeJDKVersion( String theJdkVersion )\n             String section = (String) iter.next();\r\n             section = section.replaceAll( \"[^0-9]\", \"\" );\r\n \r\n-            buffer.append( Integer.parseInt( section ) );\r\n-\r\n-            if ( i != 2 )\r\n-            {\r\n-                buffer.append( '.' );\r\n-            }\r\n-            else\r\n+            if ( StringUtils.isNotEmpty( section ) )\r\n             {\r\n-                buffer.append( '-' );\r\n+                buffer.append( Integer.parseInt( section ) );\r\n+\r\n+                if ( i != 2 )\r\n+                {\r\n+                    buffer.append( '.' );\r\n+                }\r\n+                else\r\n+                {\r\n+                    buffer.append( '-' );\r\n+                }\r\n             }\r\n-\r\n         }\r\n \r\n         String version = buffer.toString();\r", "filename": "maven-enforcer-plugin/src/main/java/org/apache/maven/plugin/enforcer/RequireJavaVersion.java"}, {"additions": 4, "raw_url": "https://github.com/apache/maven-plugins/raw/ed5aba126bbc3c09f34e428838ff4bd6aab71154/maven-enforcer-plugin/src/test/java/org/apache/maven/plugin/enforcer/TestRequireJavaVersion.java", "blob_url": "https://github.com/apache/maven-plugins/blob/ed5aba126bbc3c09f34e428838ff4bd6aab71154/maven-enforcer-plugin/src/test/java/org/apache/maven/plugin/enforcer/TestRequireJavaVersion.java", "sha": "3c5023a24e9b4d98f82a11498b8f529384bc1ef3", "changes": 5, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/maven-plugins/contents/maven-enforcer-plugin/src/test/java/org/apache/maven/plugin/enforcer/TestRequireJavaVersion.java?ref=ed5aba126bbc3c09f34e428838ff4bd6aab71154", "patch": "@@ -34,7 +34,8 @@\n {\r\n     public void testFixJDKVersion()\r\n     {\r\n-        // test that we only take the first 3 versions for comparision\r\n+        // test that we only take the first 3 versions for\r\n+        // comparision\r\n         assertEquals( \"1.5.0-11\", RequireJavaVersion.normalizeJDKVersion( \"1.5.0_11\" ) );\r\n         assertEquals( \"1.5.1\", RequireJavaVersion.normalizeJDKVersion( \"1.5.1\" ) );\r\n         assertEquals( \"1.5.2-1\", RequireJavaVersion.normalizeJDKVersion( \"1.5.2-1.b11\" ) );\r\n@@ -49,6 +50,8 @@ public void testFixJDKVersion()\n         assertEquals( \"1.5.0-7\", RequireJavaVersion.normalizeJDKVersion( \"1.5.0-07\" ) );\r\n         assertEquals( \"1.5.0-7\", RequireJavaVersion.normalizeJDKVersion( \"1.5.0-b7\" ) );\r\n         assertEquals( \"1.5.0-7\", RequireJavaVersion.normalizeJDKVersion( \"1.5.0-;7\" ) );\r\n+        assertEquals( \"1.6.0\", RequireJavaVersion.normalizeJDKVersion( \"1.6.0-dp\" ) );\r\n+        assertEquals( \"1.6.0-2\", RequireJavaVersion.normalizeJDKVersion( \"1.6.0-dp2\" ) );\r\n     }\r\n \r\n     public void testRule()\r", "filename": "maven-enforcer-plugin/src/test/java/org/apache/maven/plugin/enforcer/TestRequireJavaVersion.java"}], "repo": "maven-plugins"}, {"commit": "https://github.com/apache/maven-plugins/commit/08a0a3be58f138ab8d8b6d4e5a026627e061de23", "parent": "https://github.com/apache/maven-plugins/commit/339edfd5a4c04c5228f74d28f76d13ba3a4ceb2c", "message": "[MRRESOURCES-18] Fix NPE if inceptionYear isn't specified\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/plugins/trunk@528024 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "maven-plugins_27", "file": [{"additions": 2, "raw_url": "https://github.com/apache/maven-plugins/raw/08a0a3be58f138ab8d8b6d4e5a026627e061de23/maven-remote-resources-plugin/src/main/java/org/apache/maven/plugin/resources/remote/ProcessRemoteResourcesMojo.java", "blob_url": "https://github.com/apache/maven-plugins/blob/08a0a3be58f138ab8d8b6d4e5a026627e061de23/maven-remote-resources-plugin/src/main/java/org/apache/maven/plugin/resources/remote/ProcessRemoteResourcesMojo.java", "sha": "015e160efe8db05a03c4300615d09e6f4b9aa2f7", "changes": 4, "status": "modified", "deletions": 2, "contents_url": "https://api.github.com/repos/apache/maven-plugins/contents/maven-remote-resources-plugin/src/main/java/org/apache/maven/plugin/resources/remote/ProcessRemoteResourcesMojo.java?ref=08a0a3be58f138ab8d8b6d4e5a026627e061de23", "patch": "@@ -490,13 +490,13 @@ protected void configureVelocityContext( VelocityContext context ) throws MojoEx\n         \n         context.put( \"presentYear\", year );\n \n-        if ( project.getInceptionYear().equals( year ) )\n+        if ( inceptionYear.equals( year ) )\n         {\n             context.put( \"projectTimespan\", year );\n         }\n         else\n         {\n-            context.put( \"projectTimespan\", project.getInceptionYear() + \"-\" + year );\n+            context.put( \"projectTimespan\", inceptionYear + \"-\" + year );\n         }\n     }\n     ", "filename": "maven-remote-resources-plugin/src/main/java/org/apache/maven/plugin/resources/remote/ProcessRemoteResourcesMojo.java"}], "repo": "maven-plugins"}, {"commit": "https://github.com/apache/maven-plugins/commit/e832704447648d4ca79f6bb775884bfda28556ba", "parent": "https://github.com/apache/maven-plugins/commit/09b1b4f4272faa4277ad33d2d38c62345dc592f4", "message": "fix possible NPE\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/plugins/trunk@405282 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "maven-plugins_28", "file": [{"additions": 2, "raw_url": "https://github.com/apache/maven-plugins/raw/e832704447648d4ca79f6bb775884bfda28556ba/maven-surefire-plugin/src/main/java/org/apache/maven/plugin/surefire/SurefirePlugin.java", "blob_url": "https://github.com/apache/maven-plugins/blob/e832704447648d4ca79f6bb775884bfda28556ba/maven-surefire-plugin/src/main/java/org/apache/maven/plugin/surefire/SurefirePlugin.java", "sha": "f85fce44f547725eb72036a1716542dae6ea6535", "changes": 4, "status": "modified", "deletions": 2, "contents_url": "https://api.github.com/repos/apache/maven-plugins/contents/maven-surefire-plugin/src/main/java/org/apache/maven/plugin/surefire/SurefirePlugin.java?ref=e832704447648d4ca79f6bb775884bfda28556ba", "patch": "@@ -407,13 +407,13 @@ private SurefireBooter constructSurefireBooter()\n         SurefireBooter surefireBooter = new SurefireBooter();\n \n         Artifact surefireArtifact = (Artifact) pluginArtifactMap.get( \"org.apache.maven.surefire:surefire-booter\" );\n-        surefireArtifact.isSnapshot(); // TODO: this is ridiculous, but it fixes getBaseVersion to be -SNAPSHOT if needed\n-\n         if ( surefireArtifact == null )\n         {\n             throw new MojoExecutionException( \"Unable to locate surefire-booter in the list of plugin artifacts\" );\n         }\n \n+        surefireArtifact.isSnapshot(); // TODO: this is ridiculous, but it fixes getBaseVersion to be -SNAPSHOT if needed\n+\n         Artifact junitArtifact;\n         Artifact testNgArtifact;\n         try", "filename": "maven-surefire-plugin/src/main/java/org/apache/maven/plugin/surefire/SurefirePlugin.java"}], "repo": "maven-plugins"}, {"commit": "https://github.com/apache/maven-plugins/commit/b7c989b76d27274d0e9ec1582c1c6e86671f4a06", "parent": "https://github.com/apache/maven-plugins/commit/687b3e64560a869c76a4fbc7e7449813c1ffdbac", "message": "fix NPE if there is no url parameter\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/plugins/trunk@405262 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "maven-plugins_29", "file": [{"additions": 5, "raw_url": "https://github.com/apache/maven-plugins/raw/b7c989b76d27274d0e9ec1582c1c6e86671f4a06/maven-release-plugin/src/main/java/org/apache/maven/plugins/release/DefaultReleaseManager.java", "blob_url": "https://github.com/apache/maven-plugins/blob/b7c989b76d27274d0e9ec1582c1c6e86671f4a06/maven-release-plugin/src/main/java/org/apache/maven/plugins/release/DefaultReleaseManager.java", "sha": "e5869feae2b266e1863a9f6c5972d38a434f8181", "changes": 5, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/maven-plugins/contents/maven-release-plugin/src/main/java/org/apache/maven/plugins/release/DefaultReleaseManager.java?ref=b7c989b76d27274d0e9ec1582c1c6e86671f4a06", "patch": "@@ -175,6 +175,11 @@ public void perform( ReleaseConfiguration releaseConfiguration, File checkoutDir\n                 \"Cannot perform release - the preparation step was stopped mid-way. Please re-run release:prepare to continue, or perform the release from an SCM tag.\" );\n         }\n \n+        if ( releaseConfiguration.getUrl() == null )\n+        {\n+            throw new ReleaseFailureException( \"No SCM URL was provided to perform the release from\" );\n+        }\n+\n         ScmRepository repository;\n         ScmProvider provider;\n         try", "filename": "maven-release-plugin/src/main/java/org/apache/maven/plugins/release/DefaultReleaseManager.java"}, {"additions": 20, "raw_url": "https://github.com/apache/maven-plugins/raw/b7c989b76d27274d0e9ec1582c1c6e86671f4a06/maven-release-plugin/src/test/java/org/apache/maven/plugins/release/DefaultReleaseManagerTest.java", "blob_url": "https://github.com/apache/maven-plugins/blob/b7c989b76d27274d0e9ec1582c1c6e86671f4a06/maven-release-plugin/src/test/java/org/apache/maven/plugins/release/DefaultReleaseManagerTest.java", "sha": "c40e7e2a887ec43f14eff808f7fe687a827fb2d9", "changes": 20, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/maven-plugins/contents/maven-release-plugin/src/test/java/org/apache/maven/plugins/release/DefaultReleaseManagerTest.java?ref=b7c989b76d27274d0e9ec1582c1c6e86671f4a06", "patch": "@@ -584,6 +584,26 @@ public void testReleasePerformWithIncompletePrepare()\n         }\n     }\n \n+    public void testNoScmUrlPerform()\n+        throws Exception\n+    {\n+        ReleaseConfiguration releaseConfiguration = new ReleaseConfiguration();\n+        releaseConfiguration.setWorkingDirectory( getTestFile( \"target/test/checkout\" ) );\n+\n+        DefaultReleaseManager releaseManager = (DefaultReleaseManager) lookup( ReleaseManager.ROLE, \"test\" );\n+\n+        try\n+        {\n+            releaseManager.perform( releaseConfiguration, null, null, false );\n+\n+            fail( \"perform should have failed\" );\n+        }\n+        catch ( ReleaseFailureException e )\n+        {\n+            assertNull( \"check no cause\", e.getCause() );\n+        }\n+    }\n+\n     public void testNoSuchScmProviderExceptionThrown()\n         throws Exception\n     {", "filename": "maven-release-plugin/src/test/java/org/apache/maven/plugins/release/DefaultReleaseManagerTest.java"}], "repo": "maven-plugins"}, {"commit": "https://github.com/apache/maven-plugins/commit/d1d81ee3697a98b4d6ee038ae08a36602fee3448", "parent": "https://github.com/apache/maven-plugins/commit/043c0e3eace6d40efd67068f7cab8a298f4c1422", "message": "fix NPE if there is no <url> element\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/plugins/trunk@404883 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "maven-plugins_30", "file": [{"additions": 29, "raw_url": "https://github.com/apache/maven-plugins/raw/d1d81ee3697a98b4d6ee038ae08a36602fee3448/maven-release-plugin/src/main/java/org/apache/maven/plugins/release/phase/RewritePomsForReleasePhase.java", "blob_url": "https://github.com/apache/maven-plugins/blob/d1d81ee3697a98b4d6ee038ae08a36602fee3448/maven-release-plugin/src/main/java/org/apache/maven/plugins/release/phase/RewritePomsForReleasePhase.java", "sha": "3edb2faf507b9d16dfc0eabf3259dc9b65284c5a", "changes": 46, "status": "modified", "deletions": 17, "contents_url": "https://api.github.com/repos/apache/maven-plugins/contents/maven-release-plugin/src/main/java/org/apache/maven/plugins/release/phase/RewritePomsForReleasePhase.java?ref=d1d81ee3697a98b4d6ee038ae08a36602fee3448", "patch": "@@ -96,33 +96,45 @@ private boolean translateScm( MavenProject project, ReleaseConfiguration release\n             {\n                 tagBase = \"scm:svn:\" + tagBase;\n             }\n-            String value = translator.translateTagUrl( scm.getConnection(), tag, tagBase );\n-            if ( !value.equals( scm.getConnection() ) )\n+            if ( scm.getConnection() != null )\n             {\n-                rewriteElement( \"connection\", value, scmRoot, namespace );\n-                result = true;\n+                String value = translator.translateTagUrl( scm.getConnection(), tag, tagBase );\n+                if ( !value.equals( scm.getConnection() ) )\n+                {\n+                    rewriteElement( \"connection\", value, scmRoot, namespace );\n+                    result = true;\n+                }\n             }\n \n-            value = translator.translateTagUrl( scm.getDeveloperConnection(), tag, tagBase );\n-            if ( !value.equals( scm.getDeveloperConnection() ) )\n+            if ( scm.getDeveloperConnection() != null )\n             {\n-                rewriteElement( \"developerConnection\", value, scmRoot, namespace );\n-                result = true;\n+                String value = translator.translateTagUrl( scm.getDeveloperConnection(), tag, tagBase );\n+                if ( !value.equals( scm.getDeveloperConnection() ) )\n+                {\n+                    rewriteElement( \"developerConnection\", value, scmRoot, namespace );\n+                    result = true;\n+                }\n             }\n \n-            // use original tag base without protocol\n-            value = translator.translateTagUrl( scm.getUrl(), tag, releaseConfiguration.getTagBase() );\n-            if ( !value.equals( scm.getUrl() ) )\n+            if ( scm.getUrl() != null )\n             {\n-                rewriteElement( \"url\", value, scmRoot, namespace );\n-                result = true;\n+                // use original tag base without protocol\n+                String value = translator.translateTagUrl( scm.getUrl(), tag, releaseConfiguration.getTagBase() );\n+                if ( !value.equals( scm.getUrl() ) )\n+                {\n+                    rewriteElement( \"url\", value, scmRoot, namespace );\n+                    result = true;\n+                }\n             }\n \n-            value = translator.resolveTag( tag );\n-            if ( value != null && !value.equals( scm.getTag() ) )\n+            if ( tag != null )\n             {\n-                rewriteElement( \"tag\", value, scmRoot, namespace );\n-                result = true;\n+                String value = translator.resolveTag( tag );\n+                if ( value != null && !value.equals( scm.getTag() ) )\n+                {\n+                    rewriteElement( \"tag\", value, scmRoot, namespace );\n+                    result = true;\n+                }\n             }\n         }\n         else", "filename": "maven-release-plugin/src/main/java/org/apache/maven/plugins/release/phase/RewritePomsForReleasePhase.java"}, {"additions": 11, "raw_url": "https://github.com/apache/maven-plugins/raw/d1d81ee3697a98b4d6ee038ae08a36602fee3448/maven-release-plugin/src/test/java/org/apache/maven/plugins/release/phase/RewritePomsForReleasePhaseTest.java", "blob_url": "https://github.com/apache/maven-plugins/blob/d1d81ee3697a98b4d6ee038ae08a36602fee3448/maven-release-plugin/src/test/java/org/apache/maven/plugins/release/phase/RewritePomsForReleasePhaseTest.java", "sha": "2def3f5771bdc2dd59105b35ec5d7bf9fbe9defa", "changes": 11, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/maven-plugins/contents/maven-release-plugin/src/test/java/org/apache/maven/plugins/release/phase/RewritePomsForReleasePhaseTest.java?ref=d1d81ee3697a98b4d6ee038ae08a36602fee3448", "patch": "@@ -211,6 +211,17 @@ public void testRewriteBasicPomWithCvsFromTag()\n         assertTrue( compareFiles( config.getReactorProjects() ) );\n     }\n \n+    public void testRewriteBasicPomWithEmptyScm()\n+        throws Exception\n+    {\n+        ReleaseConfiguration config = createConfigurationFromProjects( \"basic-pom-with-empty-scm\" );\n+        mapNextVersion( config, \"groupId:artifactId\" );\n+\n+        phase.execute( config );\n+\n+        assertTrue( compareFiles( config.getReactorProjects() ) );\n+    }\n+\n     public void testRewriteInterpolatedVersions()\n         throws Exception\n     {", "filename": "maven-release-plugin/src/test/java/org/apache/maven/plugins/release/phase/RewritePomsForReleasePhaseTest.java"}, {"additions": 32, "raw_url": "https://github.com/apache/maven-plugins/raw/d1d81ee3697a98b4d6ee038ae08a36602fee3448/maven-release-plugin/src/test/resources/projects/rewrite-for-release/basic-pom-with-empty-scm/expected-pom.xml", "blob_url": "https://github.com/apache/maven-plugins/blob/d1d81ee3697a98b4d6ee038ae08a36602fee3448/maven-release-plugin/src/test/resources/projects/rewrite-for-release/basic-pom-with-empty-scm/expected-pom.xml", "sha": "c513303b8b15790d39ff06d871da6fd119b6b948", "changes": 32, "status": "added", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/maven-plugins/contents/maven-release-plugin/src/test/resources/projects/rewrite-for-release/basic-pom-with-empty-scm/expected-pom.xml?ref=d1d81ee3697a98b4d6ee038ae08a36602fee3448", "patch": "@@ -0,0 +1,32 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+\n+<!--\n+  ~ Copyright 2005-2006 The Apache Software Foundation.\n+  ~\n+  ~ Licensed under the Apache License, Version 2.0 (the \"License\");\n+  ~ you may not use this file except in compliance with the License.\n+  ~ You may obtain a copy of the License at\n+  ~\n+  ~      http://www.apache.org/licenses/LICENSE-2.0\n+  ~\n+  ~ Unless required by applicable law or agreed to in writing, software\n+  ~ distributed under the License is distributed on an \"AS IS\" BASIS,\n+  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+  ~ See the License for the specific language governing permissions and\n+  ~ limitations under the License.\n+  -->\n+\n+<project>\n+  <modelVersion>4.0.0</modelVersion>\n+  <groupId>groupId</groupId>\n+  <artifactId>artifactId</artifactId>\n+  <version>1.0</version>\n+\n+  <prerequisites>\n+    <maven>2.0.4</maven>\n+  </prerequisites>\n+\n+  <scm>\n+    <connection>scm:svn:file://localhost/tmp/scm-repo/tags/release-label</connection>\n+  </scm>\n+</project>\n\\ No newline at end of file", "filename": "maven-release-plugin/src/test/resources/projects/rewrite-for-release/basic-pom-with-empty-scm/expected-pom.xml"}, {"additions": 32, "raw_url": "https://github.com/apache/maven-plugins/raw/d1d81ee3697a98b4d6ee038ae08a36602fee3448/maven-release-plugin/src/test/resources/projects/rewrite-for-release/basic-pom-with-empty-scm/pom.xml", "blob_url": "https://github.com/apache/maven-plugins/blob/d1d81ee3697a98b4d6ee038ae08a36602fee3448/maven-release-plugin/src/test/resources/projects/rewrite-for-release/basic-pom-with-empty-scm/pom.xml", "sha": "5f569364359e45f59a6fa0f97ff03c14dd7119e8", "changes": 32, "status": "added", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/maven-plugins/contents/maven-release-plugin/src/test/resources/projects/rewrite-for-release/basic-pom-with-empty-scm/pom.xml?ref=d1d81ee3697a98b4d6ee038ae08a36602fee3448", "patch": "@@ -0,0 +1,32 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+\n+<!--\n+  ~ Copyright 2005-2006 The Apache Software Foundation.\n+  ~\n+  ~ Licensed under the Apache License, Version 2.0 (the \"License\");\n+  ~ you may not use this file except in compliance with the License.\n+  ~ You may obtain a copy of the License at\n+  ~\n+  ~      http://www.apache.org/licenses/LICENSE-2.0\n+  ~\n+  ~ Unless required by applicable law or agreed to in writing, software\n+  ~ distributed under the License is distributed on an \"AS IS\" BASIS,\n+  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+  ~ See the License for the specific language governing permissions and\n+  ~ limitations under the License.\n+  -->\n+\n+<project>\n+  <modelVersion>4.0.0</modelVersion>\n+  <groupId>groupId</groupId>\n+  <artifactId>artifactId</artifactId>\n+  <version>1.0-SNAPSHOT</version>\n+\n+  <prerequisites>\n+    <maven>2.0.4</maven>\n+  </prerequisites>\n+\n+  <scm>\n+    <connection>scm:svn:file://localhost/tmp/scm-repo/trunk</connection>\n+  </scm>\n+</project>\n\\ No newline at end of file", "filename": "maven-release-plugin/src/test/resources/projects/rewrite-for-release/basic-pom-with-empty-scm/pom.xml"}], "repo": "maven-plugins"}, {"commit": "https://github.com/apache/maven-plugins/commit/8e40f46ad4c2679dbb06d6636ee357c0540cd2a8", "parent": "https://github.com/apache/maven-plugins/commit/8b54fa24751b528b60c1673e4c689cb935710a42", "message": "avoid NPE in properties writing\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/plugins/trunk@400422 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "maven-plugins_31", "file": [{"additions": 17, "raw_url": "https://github.com/apache/maven-plugins/raw/8e40f46ad4c2679dbb06d6636ee357c0540cd2a8/maven-release-plugin/src/main/java/org/apache/maven/plugins/release/config/PropertiesReleaseConfigurationStore.java", "blob_url": "https://github.com/apache/maven-plugins/blob/8e40f46ad4c2679dbb06d6636ee357c0540cd2a8/maven-release-plugin/src/main/java/org/apache/maven/plugins/release/config/PropertiesReleaseConfigurationStore.java", "sha": "501bcf543a751727753d8c2345835a2745caff5d", "changes": 27, "status": "modified", "deletions": 10, "contents_url": "https://api.github.com/repos/apache/maven-plugins/contents/maven-release-plugin/src/main/java/org/apache/maven/plugins/release/config/PropertiesReleaseConfigurationStore.java?ref=8e40f46ad4c2679dbb06d6636ee357c0540cd2a8", "patch": "@@ -212,19 +212,26 @@ public void write( ReleaseConfiguration config, File file )\n         {\n             Map.Entry entry = (Map.Entry) i.next();\n             Scm scm = (Scm) entry.getValue();\n-            properties.setProperty( \"project.scm.\" + entry.getKey() + \".connection\", scm.getConnection() );\n-            if ( scm.getDeveloperConnection() != null )\n+            String prefix = \"project.scm.\" + entry.getKey();\n+            if ( scm != null )\n             {\n-                properties.setProperty( \"project.scm.\" + entry.getKey() + \".developerConnection\",\n-                                        scm.getDeveloperConnection() );\n-            }\n-            if ( scm.getUrl() != null )\n-            {\n-                properties.setProperty( \"project.scm.\" + entry.getKey() + \".url\", scm.getUrl() );\n+                properties.setProperty( prefix + \".connection\", scm.getConnection() );\n+                if ( scm.getDeveloperConnection() != null )\n+                {\n+                    properties.setProperty( prefix + \".developerConnection\", scm.getDeveloperConnection() );\n+                }\n+                if ( scm.getUrl() != null )\n+                {\n+                    properties.setProperty( prefix + \".url\", scm.getUrl() );\n+                }\n+                if ( scm.getTag() != null )\n+                {\n+                    properties.setProperty( prefix + \".tag\", scm.getTag() );\n+                }\n             }\n-            if ( scm.getTag() != null )\n+            else\n             {\n-                properties.setProperty( \"project.scm.\" + entry.getKey() + \".tag\", scm.getTag() );\n+                properties.setProperty( prefix + \".empty\", \"true\" );\n             }\n         }\n ", "filename": "maven-release-plugin/src/main/java/org/apache/maven/plugins/release/config/PropertiesReleaseConfigurationStore.java"}, {"additions": 10, "raw_url": "https://github.com/apache/maven-plugins/raw/8e40f46ad4c2679dbb06d6636ee357c0540cd2a8/maven-release-plugin/src/main/java/org/apache/maven/plugins/release/config/ReleaseConfiguration.java", "blob_url": "https://github.com/apache/maven-plugins/blob/8e40f46ad4c2679dbb06d6636ee357c0540cd2a8/maven-release-plugin/src/main/java/org/apache/maven/plugins/release/config/ReleaseConfiguration.java", "sha": "38351b4ef8fb6c31c1897df61a1a95418266c9e4", "changes": 12, "status": "modified", "deletions": 2, "contents_url": "https://api.github.com/repos/apache/maven-plugins/contents/maven-release-plugin/src/main/java/org/apache/maven/plugins/release/config/ReleaseConfiguration.java?ref=8e40f46ad4c2679dbb06d6636ee357c0540cd2a8", "patch": "@@ -525,12 +525,20 @@ private boolean compareScmCollections( Map that )\n \n             Scm thatScm = (Scm) that.get( entry.getKey() );\n \n-            if ( thatScm == null )\n+            Scm thisScm = (Scm) entry.getValue();\n+            if ( thatScm == null && thisScm == null )\n+            {\n+                return true;\n+            }\n+            else if ( thatScm == null )\n             {\n                 return false;\n             }\n+            else if ( thisScm == null )\n+            {\n+                return true;\n+            }\n \n-            Scm thisScm = (Scm) entry.getValue();\n             if ( thisScm.getConnection() != null ? !thisScm.getConnection().equals( thatScm.getConnection() )\n                 : thatScm.getConnection() != null )\n             {", "filename": "maven-release-plugin/src/main/java/org/apache/maven/plugins/release/config/ReleaseConfiguration.java"}, {"additions": 23, "raw_url": "https://github.com/apache/maven-plugins/raw/8e40f46ad4c2679dbb06d6636ee357c0540cd2a8/maven-release-plugin/src/test/java/org/apache/maven/plugins/release/config/PropertiesReleaseConfigurationStoreTest.java", "blob_url": "https://github.com/apache/maven-plugins/blob/8e40f46ad4c2679dbb06d6636ee357c0540cd2a8/maven-release-plugin/src/test/java/org/apache/maven/plugins/release/config/PropertiesReleaseConfigurationStoreTest.java", "sha": "7a67a985355f5fdb0efe9565ea82f1ea3dae4191", "changes": 23, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/maven-plugins/contents/maven-release-plugin/src/test/java/org/apache/maven/plugins/release/config/PropertiesReleaseConfigurationStoreTest.java?ref=8e40f46ad4c2679dbb06d6636ee357c0540cd2a8", "patch": "@@ -187,6 +187,29 @@ public void testWriteToNewFileDottedIds()\n         assertEquals( \"compare configuration\", config, rereadConfiguration );\n     }\n \n+    public void testWriteToNewFileNullMappedScm()\n+        throws ReleaseConfigurationStoreException\n+    {\n+        File file = getTestFile( \"target/test-classes/new-release.properties\" );\n+        file.delete();\n+        assertFalse( \"Check file doesn't exist\", file.exists() );\n+\n+        ReleaseConfiguration config = new ReleaseConfiguration();\n+        config.setCompletedPhase( \"completed-phase-write\" );\n+        config.setUrl( \"url-write\" );\n+\n+        config.mapReleaseVersion( \"group.id:artifact.id\", \"1.1\" );\n+        config.mapDevelopmentVersion( \"group.id:artifact.id\", \"1.2-SNAPSHOT\" );\n+\n+        config.mapOriginalScmInfo( \"group.id:artifact.id\", null );\n+\n+        store.write( config, file );\n+\n+        ReleaseConfiguration rereadConfiguration = store.read( file );\n+\n+        assertEquals( \"compare configuration\", config, rereadConfiguration );\n+    }\n+\n     public void testOverwriteFile()\n         throws ReleaseConfigurationStoreException\n     {", "filename": "maven-release-plugin/src/test/java/org/apache/maven/plugins/release/config/PropertiesReleaseConfigurationStoreTest.java"}], "repo": "maven-plugins"}, {"commit": "https://github.com/apache/maven-plugins/commit/aabdaf9e3d040c598fa4dab0d1632ac63341ab6d", "parent": "https://github.com/apache/maven-plugins/commit/6f3e0ae2f027b59f3e3b540dd0104145cfc671e4", "message": "[MRELEASE-98] avoid NPE when running project-less\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/plugins/trunk@399197 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "maven-plugins_32", "file": [{"additions": 10, "raw_url": "https://github.com/apache/maven-plugins/raw/aabdaf9e3d040c598fa4dab0d1632ac63341ab6d/maven-release-plugin/src/main/java/org/apache/maven/plugins/release/phase/AbstractRewritePomsPhase.java", "blob_url": "https://github.com/apache/maven-plugins/blob/aabdaf9e3d040c598fa4dab0d1632ac63341ab6d/maven-release-plugin/src/main/java/org/apache/maven/plugins/release/phase/AbstractRewritePomsPhase.java", "sha": "a43764b2aecb8c0fe748af79edc254feeb482bdd", "changes": 16, "status": "modified", "deletions": 6, "contents_url": "https://api.github.com/repos/apache/maven-plugins/contents/maven-release-plugin/src/main/java/org/apache/maven/plugins/release/phase/AbstractRewritePomsPhase.java?ref=aabdaf9e3d040c598fa4dab0d1632ac63341ab6d", "patch": "@@ -491,14 +491,18 @@ public void clean( ReleaseConfiguration config )\n     {\n         super.clean( config );\n \n-        for ( Iterator i = config.getReactorProjects().iterator(); i.hasNext(); )\n+        if ( config.getReactorProjects() != null )\n         {\n-            MavenProject project = (MavenProject) i.next();\n-\n-            File file = new File( project.getFile().getParentFile(), project.getFile().getName() + \".\" + pomSuffix );\n-            if ( file.exists() )\n+            for ( Iterator i = config.getReactorProjects().iterator(); i.hasNext(); )\n             {\n-                file.delete();\n+                MavenProject project = (MavenProject) i.next();\n+\n+                File file =\n+                    new File( project.getFile().getParentFile(), project.getFile().getName() + \".\" + pomSuffix );\n+                if ( file.exists() )\n+                {\n+                    file.delete();\n+                }\n             }\n         }\n     }", "filename": "maven-release-plugin/src/main/java/org/apache/maven/plugins/release/phase/AbstractRewritePomsPhase.java"}, {"additions": 13, "raw_url": "https://github.com/apache/maven-plugins/raw/aabdaf9e3d040c598fa4dab0d1632ac63341ab6d/maven-release-plugin/src/test/java/org/apache/maven/plugins/release/phase/AbstractRewritingReleasePhaseTestCase.java", "blob_url": "https://github.com/apache/maven-plugins/blob/aabdaf9e3d040c598fa4dab0d1632ac63341ab6d/maven-release-plugin/src/test/java/org/apache/maven/plugins/release/phase/AbstractRewritingReleasePhaseTestCase.java", "sha": "252ccedcc7cc2a4c9792fdce03324cf3e102649b", "changes": 13, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/maven-plugins/contents/maven-release-plugin/src/test/java/org/apache/maven/plugins/release/phase/AbstractRewritingReleasePhaseTestCase.java?ref=aabdaf9e3d040c598fa4dab0d1632ac63341ab6d", "patch": "@@ -526,6 +526,19 @@ public void testRewriteBasicPomWithNoSuchProviderException()\n         }\n     }\n \n+    public void testCleanNoProjects()\n+        throws Exception\n+    {\n+        // This occurs when it is release:perform run standalone. Just check there are no errors.\n+        ReleaseConfiguration config = new ReleaseConfiguration();\n+        config.setUrl( \"scm:svn:file://localhost/tmp/scm-repo\" );\n+        config.setWorkingDirectory( getTestFile( \"target/test/checkout\" ) );\n+\n+        phase.clean( config );\n+\n+        assertTrue( true );\n+    }\n+\n     private ReleaseConfiguration createUnmappedConfiguration( String path )\n         throws Exception\n     {", "filename": "maven-release-plugin/src/test/java/org/apache/maven/plugins/release/phase/AbstractRewritingReleasePhaseTestCase.java"}], "repo": "maven-plugins"}, {"commit": "https://github.com/apache/maven-plugins/commit/abb66d8001c4470acb88cd676d3e81b7f633e87f", "parent": "https://github.com/apache/maven-plugins/commit/2017b7c88d65a36b1520e3faa15f02e4a1269dbe", "message": "fix possible NPE for unresolved dependencies\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/plugins/trunk@392813 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "maven-plugins_33", "file": [{"additions": 8, "raw_url": "https://github.com/apache/maven-plugins/raw/abb66d8001c4470acb88cd676d3e81b7f633e87f/maven-eclipse-plugin/src/main/java/org/apache/maven/plugin/ide/AbstractIdeSupportMojo.java", "blob_url": "https://github.com/apache/maven-plugins/blob/abb66d8001c4470acb88cd676d3e81b7f633e87f/maven-eclipse-plugin/src/main/java/org/apache/maven/plugin/ide/AbstractIdeSupportMojo.java", "sha": "240535dbbec48815cae3bfef57bb01699ff0e7d6", "changes": 11, "status": "modified", "deletions": 3, "contents_url": "https://api.github.com/repos/apache/maven-plugins/contents/maven-eclipse-plugin/src/main/java/org/apache/maven/plugin/ide/AbstractIdeSupportMojo.java?ref=abb66d8001c4470acb88cd676d3e81b7f633e87f", "patch": "@@ -430,9 +430,14 @@ public final void execute()\n             catch ( ArtifactResolutionException e )\n             {\n                 getLog().debug( e.getMessage(), e );\n-                getLog()\n-                    .warn( Messages.getString( \"artifactresolution\", new Object[] { //$NON-NLS-1$\n-                                               e.getGroupId(), e.getArtifactId(), e.getVersion(), e.getMessage() } ) );\n+                getLog().error(\n+                                Messages\n+                                    .getString( \"artifactresolution\", new Object[] { //$NON-NLS-1$\n+                                                e.getGroupId(), e.getArtifactId(), e.getVersion(), e.getMessage() } ) );\n+\n+                // if we are here artifactResolutionResult is null, create a project without dependencies but don't fail\n+                // (this could be a reactor projects, we don't want to fail everything)\n+                return new IdeDependency[0];\n             }\n \n             // keep track of added reactor projects in order to avoid duplicates", "filename": "maven-eclipse-plugin/src/main/java/org/apache/maven/plugin/ide/AbstractIdeSupportMojo.java"}], "repo": "maven-plugins"}, {"commit": "https://github.com/apache/maven-plugins/commit/0530f0c3140b694e068486115675f4f6d6b4b75e", "parent": "https://github.com/apache/maven-plugins/commit/d561090f0a46dbda726c348f13aa7b1b3938a5ef", "message": "[MPH-10] avoid NPE if plugin is not found\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/plugins/trunk@390935 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "maven-plugins_34", "file": [{"additions": 4, "raw_url": "https://github.com/apache/maven-plugins/raw/0530f0c3140b694e068486115675f4f6d6b4b75e/maven-help-plugin/pom.xml", "blob_url": "https://github.com/apache/maven-plugins/blob/0530f0c3140b694e068486115675f4f6d6b4b75e/maven-help-plugin/pom.xml", "sha": "1e01028c501fba646fc2c1f9a314a16bc73dae59", "changes": 6, "status": "modified", "deletions": 2, "contents_url": "https://api.github.com/repos/apache/maven-plugins/contents/maven-help-plugin/pom.xml?ref=0530f0c3140b694e068486115675f4f6d6b4b75e", "patch": "@@ -1,4 +1,6 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\"?><project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd\">\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd\">\n   <parent>\n     <artifactId>maven-plugins</artifactId>\n     <groupId>org.apache.maven.plugins</groupId>\n@@ -8,7 +10,7 @@\n   <artifactId>maven-help-plugin</artifactId>\n   <packaging>maven-plugin</packaging>\n   <name>Maven Help Plugin</name>\n-  <version>2.1-SNAPSHOT</version>\n+  <version>2.0.1-SNAPSHOT</version>\n   <description>\n     The Maven Help plugin provides goals aimed at helping to make sense out of\n     the build environment. It includes the ability to view the effective", "filename": "maven-help-plugin/pom.xml"}, {"additions": 7, "raw_url": "https://github.com/apache/maven-plugins/raw/0530f0c3140b694e068486115675f4f6d6b4b75e/maven-help-plugin/src/main/java/org/apache/maven/plugins/help/DescribeMojo.java", "blob_url": "https://github.com/apache/maven-plugins/blob/0530f0c3140b694e068486115675f4f6d6b4b75e/maven-help-plugin/src/main/java/org/apache/maven/plugins/help/DescribeMojo.java", "sha": "c3dd2f3b488ba87f9df4d09dcd8528eb2129164a", "changes": 8, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/maven-plugins/contents/maven-help-plugin/src/main/java/org/apache/maven/plugins/help/DescribeMojo.java?ref=0530f0c3140b694e068486115675f4f6d6b4b75e", "patch": "@@ -60,7 +60,7 @@\n \n     /**\n      * The plugin/mojo to describe. This must be specified in one of three ways:\n-     *\n+     * <p/>\n      * 1. plugin-prefix\n      * 2. groupId:artifactId\n      * 3. groupId:artifactId:version\n@@ -347,6 +347,12 @@ else if ( pi.groupId != null && pi.artifactId != null )\n             }\n         }\n \n+        if ( descriptor == null )\n+        {\n+            throw new MojoFailureException(\n+                \"Plugin could not be found. If you believe it is correct, check your pluginGroups setting, and run with -U to update the remote configuration\" );\n+        }\n+\n         return descriptor;\n     }\n ", "filename": "maven-help-plugin/src/main/java/org/apache/maven/plugins/help/DescribeMojo.java"}], "repo": "maven-plugins"}, {"commit": "https://github.com/apache/maven-plugins/commit/f5f067ed87139f532e7819797fb7825c66a441b9", "parent": "https://github.com/apache/maven-plugins/commit/710bb5ea178eec602b0b8126658e84b931311d34", "message": "Fixed NPE when system scoped dependencies are present\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/plugins/trunk@383353 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "maven-plugins_35", "file": [{"additions": 5, "raw_url": "https://github.com/apache/maven-plugins/raw/f5f067ed87139f532e7819797fb7825c66a441b9/maven-idea-plugin/src/main/java/org/apache/maven/plugin/idea/AbstractIdeaMojo.java", "blob_url": "https://github.com/apache/maven-plugins/blob/f5f067ed87139f532e7819797fb7825c66a441b9/maven-idea-plugin/src/main/java/org/apache/maven/plugin/idea/AbstractIdeaMojo.java", "sha": "1a0d965aa6251799437adc21a860bcca7297ab4c", "changes": 5, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/maven-plugins/contents/maven-idea-plugin/src/main/java/org/apache/maven/plugin/idea/AbstractIdeaMojo.java?ref=f5f067ed87139f532e7819797fb7825c66a441b9", "patch": "@@ -262,6 +262,11 @@ private Set getProjectArtifacts()\n             Artifact artifact = artifactFactory.createArtifact( dep.getGroupId(), dep.getArtifactId(), dep.getVersion(),\n                                                                 dep.getScope(), dep.getType() );\n \n+            if ( dep.getScope().equalsIgnoreCase( Artifact.SCOPE_SYSTEM ) )\n+            {\n+                artifact.setFile( new File( dep.getSystemPath() ) );\n+            }\n+\n             artifacts.add( artifact );\n         }\n ", "filename": "maven-idea-plugin/src/main/java/org/apache/maven/plugin/idea/AbstractIdeaMojo.java"}], "repo": "maven-plugins"}, {"commit": "https://github.com/apache/maven-plugins/commit/7cc618290fa47d6c9aea1d927ee5a4d6dfcd9718", "parent": "https://github.com/apache/maven-plugins/commit/8d80b581aabb3d48e24a9677361dc0b708715306", "message": "[MNG-1685] Fix NPE\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/plugins/trunk@349008 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "maven-plugins_36", "file": [{"additions": 5, "raw_url": "https://github.com/apache/maven-plugins/raw/7cc618290fa47d6c9aea1d927ee5a4d6dfcd9718/maven-release-plugin/src/main/java/org/apache/maven/plugins/release/PrepareReleaseMojo.java", "blob_url": "https://github.com/apache/maven-plugins/blob/7cc618290fa47d6c9aea1d927ee5a4d6dfcd9718/maven-release-plugin/src/main/java/org/apache/maven/plugins/release/PrepareReleaseMojo.java", "sha": "e1ac8423fdad7a1df5ea9ebef335c2d3c3b48a5f", "changes": 5, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/maven-plugins/contents/maven-release-plugin/src/main/java/org/apache/maven/plugins/release/PrepareReleaseMojo.java?ref=7cc618290fa47d6c9aea1d927ee5a4d6dfcd9718", "patch": "@@ -1460,6 +1460,11 @@ private void tagRelease()\n     private void writePom( File pomFile, Model model, String versionName )\n         throws MojoExecutionException\n     {\n+        if ( pomFiles == null )\n+        {\n+            pomFiles = new ArrayList();\n+        }\n+\n         pomFiles.add( pomFile );\n \n         ScmHelper scm = getScm( basedir.getAbsolutePath() );", "filename": "maven-release-plugin/src/main/java/org/apache/maven/plugins/release/PrepareReleaseMojo.java"}], "repo": "maven-plugins"}, {"commit": "https://github.com/apache/maven-plugins/commit/dc8c79eb3dc9deed81dd33b32d248b4bb60927cc", "parent": "https://github.com/apache/maven-plugins/commit/be57decf2f91ac92a8c3b845c8e2482fa7a1b891", "message": "fix NPE in dependencies report\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk/maven-plugins@220050 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "maven-plugins_37", "file": [{"additions": 23, "raw_url": "https://github.com/apache/maven-plugins/raw/dc8c79eb3dc9deed81dd33b32d248b4bb60927cc/maven-project-info-reports-plugin/src/main/java/org/apache/maven/report/projectinfo/DependenciesReport.java", "blob_url": "https://github.com/apache/maven-plugins/blob/dc8c79eb3dc9deed81dd33b32d248b4bb60927cc/maven-project-info-reports-plugin/src/main/java/org/apache/maven/report/projectinfo/DependenciesReport.java", "sha": "bbb8d7d317b790695e9e328d267589ff5efdcd49", "changes": 36, "status": "modified", "deletions": 13, "contents_url": "https://api.github.com/repos/apache/maven-plugins/contents/maven-project-info-reports-plugin/src/main/java/org/apache/maven/report/projectinfo/DependenciesReport.java?ref=dc8c79eb3dc9deed81dd33b32d248b4bb60927cc", "patch": "@@ -17,6 +17,7 @@\n  */\n \n import org.apache.maven.artifact.Artifact;\n+import org.apache.maven.artifact.repository.ArtifactRepository;\n import org.apache.maven.artifact.factory.ArtifactFactory;\n import org.apache.maven.model.Dependency;\n import org.apache.maven.project.MavenProject;\n@@ -84,6 +85,13 @@\n      */\n     private MavenProjectBuilder mavenProjectBuilder;\n \n+    /**\n+     * @parameter expression=\"${localRepository}\"\n+     * @required\n+     * @readonly\n+     */\n+    private ArtifactRepository localRepository;\n+\n     /**\n      * @see org.apache.maven.reporting.MavenReport#getName(java.util.Locale)\n      */\n@@ -139,7 +147,7 @@ public void executeReport( Locale locale )\n         throws MavenReportException\n     {\n         DependenciesRenderer r = new DependenciesRenderer( getSink(), getProject(), locale, mavenProjectBuilder,\n-                                                           artifactFactory );\n+                                                           artifactFactory, localRepository );\n \n         r.render();\n     }\n@@ -163,8 +171,11 @@ public String getOutputName()\n \n         private MavenProjectBuilder mavenProjectBuilder;\n \n+        private ArtifactRepository localRepository;\n+\n         public DependenciesRenderer( Sink sink, MavenProject project, Locale locale,\n-                                    MavenProjectBuilder mavenProjectBuilder, ArtifactFactory artifactFactory )\n+                                    MavenProjectBuilder mavenProjectBuilder, ArtifactFactory artifactFactory,\n+                                    ArtifactRepository localRepository )\n         {\n             super( sink );\n \n@@ -175,6 +186,8 @@ public DependenciesRenderer( Sink sink, MavenProject project, Locale locale,\n             this.mavenProjectBuilder = mavenProjectBuilder;\n \n             this.artifactFactory = artifactFactory;\n+\n+            this.localRepository = localRepository;\n         }\n \n         public String getTitle()\n@@ -187,7 +200,7 @@ public void renderBody()\n             // Dependencies report\n             List dependencies = project.getDependencies();\n \n-            if ( ( dependencies == null ) || ( dependencies.isEmpty() ) )\n+            if ( dependencies == null || dependencies.isEmpty() )\n             {\n                 startSection( getTitle() );\n \n@@ -224,7 +237,7 @@ public void renderBody()\n                 MavenProject artifactProject = null;\n                 try\n                 {\n-                    artifactProject = getMavenProjectFromRepository( artifact );\n+                    artifactProject = getMavenProjectFromRepository( artifact, localRepository );\n                 }\n                 catch ( ProjectBuildingException e )\n                 {\n@@ -269,16 +282,14 @@ public void renderBody()\n                     MavenProject artifactProject = null;\n                     try\n                     {\n-                        artifactProject = getMavenProjectFromRepository( artifact );\n+                        artifactProject = getMavenProjectFromRepository( artifact, localRepository );\n                     }\n                     catch ( ProjectBuildingException e )\n                     {\n                         throw new IllegalArgumentException(\n                                                             \"Can't find a valid Maven project in the repository for the artifact [\"\n                                                                 + artifact + \"].\" );\n                     }\n-                    System.out.println( \"nklj-----------------------------\" );\n-                    System.out.println( artifactProject.getUrl() );\n                     tableRow( new String[] {\n                         artifact.getGroupId(),\n                         artifact.getArtifactId(),\n@@ -308,7 +319,7 @@ private Set getTransitiveDependencies( MavenProject project )\n             List dependencies = project.getDependencies();\n             Set artifacts = project.getArtifacts();\n \n-            if ( ( dependencies == null ) || ( artifacts == null ) )\n+            if ( dependencies == null || artifacts == null )\n             {\n                 return transitiveDependencies;\n             }\n@@ -341,18 +352,17 @@ private Set getTransitiveDependencies( MavenProject project )\n         /**\n          * Get the <code>Maven project</code> from the repository depending\n          * the <code>Artifact</code> given.\n-         * \n+         *\n          * @param artifact\n          *            an artifact\n          * @return the Maven project for the given artifact\n-         * @throws ProjectBuildingException\n+         * @throws org.apache.maven.project.ProjectBuildingException\n          *             if any\n          */\n-        private MavenProject getMavenProjectFromRepository( Artifact artifact )\n+        private MavenProject getMavenProjectFromRepository( Artifact artifact, ArtifactRepository localRepository )\n             throws ProjectBuildingException\n         {\n-            return mavenProjectBuilder.buildFromRepository( artifact, project.getRepositories(), artifact\n-                .getRepository() );\n+            return mavenProjectBuilder.buildFromRepository( artifact, project.getRepositories(), localRepository );\n         }\n     }\n ", "filename": "maven-project-info-reports-plugin/src/main/java/org/apache/maven/report/projectinfo/DependenciesReport.java"}], "repo": "maven-plugins"}, {"commit": "https://github.com/apache/maven-plugins/commit/eae2f25f2ce0ce204754e97310193e6c49b4430e", "parent": "https://github.com/apache/maven-plugins/commit/cacaaa6ec28cb82311d832ef964506dfb906fa80", "message": "[MDEP-448]\n - NPE prevented cause don't access the file attribute of the \n   artifact which can be null under different circumstances.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/plugins/trunk@1622859 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "maven-plugins_38", "file": [{"additions": 1, "raw_url": "https://github.com/apache/maven-plugins/raw/eae2f25f2ce0ce204754e97310193e6c49b4430e/maven-dependency-plugin/src/main/java/org/apache/maven/plugin/dependency/fromDependencies/CopyDependenciesMojo.java", "blob_url": "https://github.com/apache/maven-plugins/blob/eae2f25f2ce0ce204754e97310193e6c49b4430e/maven-dependency-plugin/src/main/java/org/apache/maven/plugin/dependency/fromDependencies/CopyDependenciesMojo.java", "sha": "2e1dd7b51724192d9874a75161a0c6d836f5da5b", "changes": 2, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/maven-plugins/contents/maven-dependency-plugin/src/main/java/org/apache/maven/plugin/dependency/fromDependencies/CopyDependenciesMojo.java?ref=eae2f25f2ce0ce204754e97310193e6c49b4430e", "patch": "@@ -153,7 +153,7 @@ protected void doExecute()\n         Set<Artifact> skippedArtifacts = dss.getSkippedDependencies();\n         for ( Artifact artifact : skippedArtifacts )\n         {\n-            getLog().info( artifact.getFile().getName() + \" already exists in destination.\" );\n+            getLog().info( artifact.getId() + \" already exists in destination.\" ) ;\n         }\n \n         if ( isCopyPom() && !useRepositoryLayout )", "filename": "maven-dependency-plugin/src/main/java/org/apache/maven/plugin/dependency/fromDependencies/CopyDependenciesMojo.java"}], "repo": "maven-plugins"}, {"commit": "https://github.com/apache/maven-plugins/commit/77a2228ef3f0708669a593a8de1483fab78b0af1", "parent": "https://github.com/apache/maven-plugins/commit/689f2c83445dd7c4fb65c6b92141c5a6d647300f", "message": "[MCHECKSTYLE-205] NPE in CheckstyleReportGenerator.doFilesSummary:654 version 2.11 regression\nSubmitted by: Bob Fields\nReviewed by: Dennis Lundberg\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/plugins/trunk@1570752 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "maven-plugins_39", "file": [{"additions": 8, "raw_url": "https://github.com/apache/maven-plugins/raw/77a2228ef3f0708669a593a8de1483fab78b0af1/maven-checkstyle-plugin/src/main/java/org/apache/maven/plugin/checkstyle/CheckstyleResults.java", "blob_url": "https://github.com/apache/maven-plugins/blob/77a2228ef3f0708669a593a8de1483fab78b0af1/maven-checkstyle-plugin/src/main/java/org/apache/maven/plugin/checkstyle/CheckstyleResults.java", "sha": "a3bc6365c7d62ca96969acc27425768d51a46123", "changes": 10, "status": "modified", "deletions": 2, "contents_url": "https://api.github.com/repos/apache/maven-plugins/contents/maven-checkstyle-plugin/src/main/java/org/apache/maven/plugin/checkstyle/CheckstyleResults.java?ref=77a2228ef3f0708669a593a8de1483fab78b0af1", "patch": "@@ -57,15 +57,21 @@ public CheckstyleResults()\n         else\n         {\n             violations = new LinkedList<AuditEvent>();\n-            this.files.put( file, violations );\n+            if ( file != null )\n+            {\n+                this.files.put( file, violations );\n+            }\n         }\n \n         return violations;\n     }\n \n     public void setFileViolations( String file, List<AuditEvent> violations )\n     {\n-        this.files.put( file, violations );\n+        if ( file != null )\n+        {\n+            this.files.put( file, violations );\n+        }\n     }\n \n     public Map<String, List<AuditEvent>> getFiles()", "filename": "maven-checkstyle-plugin/src/main/java/org/apache/maven/plugin/checkstyle/CheckstyleResults.java"}], "repo": "maven-plugins"}, {"commit": "https://github.com/apache/maven-plugins/commit/800ecd351508109f920c3e576bf807b1436a12c9", "parent": "https://github.com/apache/maven-plugins/commit/33c3e58bd87a698e99ab192dacac2bfbcc17e81c", "message": "[MPIR-248] added one more level of check to avoid NPE\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/plugins/trunk@1479923 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "maven-plugins_40", "file": [{"additions": 6, "raw_url": "https://github.com/apache/maven-plugins/raw/800ecd351508109f920c3e576bf807b1436a12c9/maven-project-info-reports-plugin/src/main/java/org/apache/maven/report/projectinfo/dependencies/renderer/DependenciesRenderer.java", "blob_url": "https://github.com/apache/maven-plugins/blob/800ecd351508109f920c3e576bf807b1436a12c9/maven-project-info-reports-plugin/src/main/java/org/apache/maven/report/projectinfo/dependencies/renderer/DependenciesRenderer.java", "sha": "16968e64d35b3d6bbc691897fc3f41543c95c7a5", "changes": 6, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/maven-plugins/contents/maven-project-info-reports-plugin/src/main/java/org/apache/maven/report/projectinfo/dependencies/renderer/DependenciesRenderer.java?ref=800ecd351508109f920c3e576bf807b1436a12c9", "patch": "@@ -1439,6 +1439,12 @@ private boolean hasSealed( List<Artifact> artifacts )\n \n                     continue;\n                 }\n+\n+                if ( artifact.getFile() == null )\n+                {\n+                    log.error( \"Artifact: \" + artifact.getId() + \" has no file, even after resolution.\" );\n+                    continue;\n+                }\n             }\n \n             if ( JAR_SUBTYPE.contains( artifact.getType().toLowerCase() ) )", "filename": "maven-project-info-reports-plugin/src/main/java/org/apache/maven/report/projectinfo/dependencies/renderer/DependenciesRenderer.java"}], "repo": "maven-plugins"}, {"commit": "https://github.com/apache/maven-plugins/commit/786f75dc9c23fb914da36fffd23e716392ec9bed", "parent": "https://github.com/apache/maven-plugins/commit/b93712016f726c48d54d93f275210868e491c5d7", "message": "MDEP-366 - Fix NPE when using site report : dependency:analyze-report\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/plugins/trunk@1396824 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "maven-plugins_41", "file": [{"additions": 1, "raw_url": "https://github.com/apache/maven-plugins/raw/786f75dc9c23fb914da36fffd23e716392ec9bed/maven-dependency-plugin/src/it/analyze-report/invoker.properties", "blob_url": "https://github.com/apache/maven-plugins/blob/786f75dc9c23fb914da36fffd23e716392ec9bed/maven-dependency-plugin/src/it/analyze-report/invoker.properties", "sha": "ae3071de819a2ab05f853698e800e4400369811d", "changes": 1, "status": "added", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/maven-plugins/contents/maven-dependency-plugin/src/it/analyze-report/invoker.properties?ref=786f75dc9c23fb914da36fffd23e716392ec9bed", "patch": "@@ -0,0 +1 @@\n+invoker.goals = clean ${project.groupId}:${project.artifactId}:${project.version}:analyze-report", "filename": "maven-dependency-plugin/src/it/analyze-report/invoker.properties"}, {"additions": 7, "raw_url": "https://github.com/apache/maven-plugins/raw/786f75dc9c23fb914da36fffd23e716392ec9bed/maven-dependency-plugin/src/it/analyze-report/pom.xml", "blob_url": "https://github.com/apache/maven-plugins/blob/786f75dc9c23fb914da36fffd23e716392ec9bed/maven-dependency-plugin/src/it/analyze-report/pom.xml", "sha": "02c646accb89860afc76d9876297b8d4956c7fdf", "changes": 7, "status": "added", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/maven-plugins/contents/maven-dependency-plugin/src/it/analyze-report/pom.xml?ref=786f75dc9c23fb914da36fffd23e716392ec9bed", "patch": "@@ -0,0 +1,7 @@\n+<project>\n+  <modelVersion>4.0.0</modelVersion>\n+  <groupId>org.apache.maven.its.dependency</groupId>\n+  <artifactId>test</artifactId>\n+  <version>1.0-SNAPSHOT</version>\n+  <packaging>pom</packaging>\n+</project>", "filename": "maven-dependency-plugin/src/it/analyze-report/pom.xml"}, {"additions": 14, "raw_url": "https://github.com/apache/maven-plugins/raw/786f75dc9c23fb914da36fffd23e716392ec9bed/maven-dependency-plugin/src/it/analyze-report/verify.bsh", "blob_url": "https://github.com/apache/maven-plugins/blob/786f75dc9c23fb914da36fffd23e716392ec9bed/maven-dependency-plugin/src/it/analyze-report/verify.bsh", "sha": "245718caf0bd6b56306525063bd935d0999a496a", "changes": 14, "status": "added", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/maven-plugins/contents/maven-dependency-plugin/src/it/analyze-report/verify.bsh?ref=786f75dc9c23fb914da36fffd23e716392ec9bed", "patch": "@@ -0,0 +1,14 @@\n+import java.io.*;\n+\n+File htmlFile = new File( basedir, \"target/dependency-analysis.html\" );\n+\n+if ( !htmlFile.isFile() )\n+{\n+    throw new Exception( \"Dependency analysis file missing \" + htmlFile );\n+}\n+if ( htmlFile.length() == 0 )\n+{\n+    throw new Exception( \"Dependency analysis file empty \" + htmlFile );\n+}\n+\n+return true;", "filename": "maven-dependency-plugin/src/it/analyze-report/verify.bsh"}, {"additions": 1, "raw_url": "https://github.com/apache/maven-plugins/raw/786f75dc9c23fb914da36fffd23e716392ec9bed/maven-dependency-plugin/src/main/java/org/apache/maven/plugin/dependency/AnalyzeReportMojo.java", "blob_url": "https://github.com/apache/maven-plugins/blob/786f75dc9c23fb914da36fffd23e716392ec9bed/maven-dependency-plugin/src/main/java/org/apache/maven/plugin/dependency/AnalyzeReportMojo.java", "sha": "e8c747f06f2987516b84892bdd2821bd630216c8", "changes": 2, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/maven-plugins/contents/maven-dependency-plugin/src/main/java/org/apache/maven/plugin/dependency/AnalyzeReportMojo.java?ref=786f75dc9c23fb914da36fffd23e716392ec9bed", "patch": "@@ -59,7 +59,7 @@\n     /**\n      * The Maven project to analyze.\n      */\n-    @Parameter\n+    @Component\n     private MavenProject project;\n \n     /**", "filename": "maven-dependency-plugin/src/main/java/org/apache/maven/plugin/dependency/AnalyzeReportMojo.java"}], "repo": "maven-plugins"}, {"commit": "https://github.com/apache/maven-plugins/commit/c60e7c5a714ea33d35aea935b9a75a0067fd493d", "parent": "https://github.com/apache/maven-plugins/commit/a91bc99a550bbe73de7638175fb03b6741d69409", "message": "[MWAR-275] An incomplete fix for the NPE bugs in WebappStructure.java\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/plugins/trunk@1390192 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "maven-plugins_42", "file": [{"additions": 8, "raw_url": "https://github.com/apache/maven-plugins/raw/c60e7c5a714ea33d35aea935b9a75a0067fd493d/maven-war-plugin/src/main/java/org/apache/maven/plugin/war/util/WebappStructure.java", "blob_url": "https://github.com/apache/maven-plugins/blob/c60e7c5a714ea33d35aea935b9a75a0067fd493d/maven-war-plugin/src/main/java/org/apache/maven/plugin/war/util/WebappStructure.java", "sha": "27a5e7f90e5304fce2af4b71afa8e5786f6274cd", "changes": 13, "status": "modified", "deletions": 5, "contents_url": "https://api.github.com/repos/apache/maven-plugins/contents/maven-war-plugin/src/main/java/org/apache/maven/plugin/war/util/WebappStructure.java?ref=c60e7c5a714ea33d35aea935b9a75a0067fd493d", "patch": "@@ -386,13 +386,16 @@ else if ( dependency.isOptional() != previousDep.isOptional() )\n      */\n     public void registerTargetFileName( Artifact artifact, String targetFileName )\n     {\n-        final Iterator it = dependenciesInfo.iterator();\n-        while ( it.hasNext() )\n+        if ( dependenciesInfo != null )\n         {\n-            DependencyInfo dependencyInfo = (DependencyInfo) it.next();\n-            if ( WarUtils.isRelated( artifact, dependencyInfo.getDependency() ) )\n+            final Iterator it = dependenciesInfo.iterator();\n+            while ( it.hasNext() )\n             {\n-                dependencyInfo.setTargetFileName( targetFileName );\n+                DependencyInfo dependencyInfo = (DependencyInfo) it.next();\n+                if ( WarUtils.isRelated( artifact, dependencyInfo.getDependency() ) )\n+                {\n+                    dependencyInfo.setTargetFileName( targetFileName );\n+                }\n             }\n         }\n     }", "filename": "maven-war-plugin/src/main/java/org/apache/maven/plugin/war/util/WebappStructure.java"}], "repo": "maven-plugins"}, {"commit": "https://github.com/apache/maven-plugins/commit/d0d0c0dc1c2e43a9b7051c5bf532441b04d2a46e", "parent": "https://github.com/apache/maven-plugins/commit/9aee2b01dd41111a1c019afc1665e615e664dd5c", "message": "MPIR-248 NPE while DependenciesReport\n\nDo not treat system scope artifact with no file for dependencies report\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/plugins/trunk@1370872 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "maven-plugins_43", "file": [{"additions": 7, "raw_url": "https://github.com/apache/maven-plugins/raw/d0d0c0dc1c2e43a9b7051c5bf532441b04d2a46e/maven-project-info-reports-plugin/src/main/java/org/apache/maven/report/projectinfo/dependencies/renderer/DependenciesRenderer.java", "blob_url": "https://github.com/apache/maven-plugins/blob/d0d0c0dc1c2e43a9b7051c5bf532441b04d2a46e/maven-project-info-reports-plugin/src/main/java/org/apache/maven/report/projectinfo/dependencies/renderer/DependenciesRenderer.java", "sha": "d35c2e9a6b5b6522165cc98bd3ec90feafc1c5b5", "changes": 8, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/maven-plugins/contents/maven-project-info-reports-plugin/src/main/java/org/apache/maven/report/projectinfo/dependencies/renderer/DependenciesRenderer.java?ref=d0d0c0dc1c2e43a9b7051c5bf532441b04d2a46e", "patch": "@@ -1418,8 +1418,14 @@ private boolean hasSealed( List<Artifact> artifacts )\n         for ( Artifact artifact : artifacts )\n         {\n             // TODO site:run Why do we need to resolve this...\n-            if ( artifact.getFile() == null && !Artifact.SCOPE_SYSTEM.equals( artifact.getScope() ) )\n+            if ( artifact.getFile() == null )\n             {\n+                if ( Artifact.SCOPE_SYSTEM.equals( artifact.getScope() ) ) {\n+\n+                    // can not resolve system scope artifact file\n+                    continue;\n+                }\n+\n                 try\n                 {\n                     repoUtils.resolve( artifact );", "filename": "maven-project-info-reports-plugin/src/main/java/org/apache/maven/report/projectinfo/dependencies/renderer/DependenciesRenderer.java"}], "repo": "maven-plugins"}, {"commit": "https://github.com/apache/maven-plugins/commit/cc35973255a45d71515349af36f58ea3a4cb35b9", "parent": "https://github.com/apache/maven-plugins/commit/9b69c9fe1927d8528f010b0f9bc753011387e981", "message": "[MPMD-149] Fix Potential NPE in PmdReportListener\nSubmitted by Andreas Dangel.\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/plugins/trunk@1342953 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "maven-plugins_44", "file": [{"additions": 2, "raw_url": "https://github.com/apache/maven-plugins/raw/cc35973255a45d71515349af36f58ea3a4cb35b9/maven-pmd-plugin/src/main/java/org/apache/maven/plugin/pmd/PmdReport.java", "blob_url": "https://github.com/apache/maven-plugins/blob/cc35973255a45d71515349af36f58ea3a4cb35b9/maven-pmd-plugin/src/main/java/org/apache/maven/plugin/pmd/PmdReport.java", "sha": "370b2d9e9603cf16aeeef9bbccb3f8d098a5b7a2", "changes": 4, "status": "modified", "deletions": 2, "contents_url": "https://api.github.com/repos/apache/maven-plugins/contents/maven-pmd-plugin/src/main/java/org/apache/maven/plugin/pmd/PmdReport.java?ref=cc35973255a45d71515349af36f58ea3a4cb35b9", "patch": "@@ -203,7 +203,7 @@ private Report generateReport( Locale locale )\n         Sink sink = getSink();\n \n         PMDConfiguration pmdConfiguration = getPMDConfiguration();\n-        final PmdReportListener reportSink = new PmdReportListener( sink, getBundle( locale ), aggregate );\n+        final PmdReportListener reportSink = new PmdReportListener( getLog(), sink, getBundle( locale ), aggregate );\n         RuleContext ruleContext = new RuleContext()\n         {\n             @Override\n@@ -272,7 +272,7 @@ public void setReport( Report report )\n         List<DataSource> dataSources = new ArrayList<DataSource>( files.size() );\n         for ( File f : files.keySet() )\n         {\n-            dataSources.add( new FileDataSource( f ) );\n+            dataSources.add( new FileDataSource( f.getAbsoluteFile() ) );\n         }\n \n         try", "filename": "maven-pmd-plugin/src/main/java/org/apache/maven/plugin/pmd/PmdReport.java"}, {"additions": 32, "raw_url": "https://github.com/apache/maven-plugins/raw/cc35973255a45d71515349af36f58ea3a4cb35b9/maven-pmd-plugin/src/main/java/org/apache/maven/plugin/pmd/PmdReportListener.java", "blob_url": "https://github.com/apache/maven-plugins/blob/cc35973255a45d71515349af36f58ea3a4cb35b9/maven-pmd-plugin/src/main/java/org/apache/maven/plugin/pmd/PmdReportListener.java", "sha": "21ca69c98a7dab93e17aec16ed906dcfddfeac09", "changes": 58, "status": "modified", "deletions": 26, "contents_url": "https://api.github.com/repos/apache/maven-plugins/contents/maven-pmd-plugin/src/main/java/org/apache/maven/plugin/pmd/PmdReportListener.java?ref=cc35973255a45d71515349af36f58ea3a4cb35b9", "patch": "@@ -19,21 +19,22 @@\n  * under the License.\n  */\n \n-import net.sourceforge.pmd.ReportListener;\n-import net.sourceforge.pmd.RuleViolation;\n-import net.sourceforge.pmd.stat.Metric;\n-import org.apache.maven.doxia.sink.Sink;\n-import org.codehaus.plexus.util.StringUtils;\n-\n import java.io.File;\n import java.util.ArrayList;\n import java.util.Collections;\n import java.util.Comparator;\n-import java.util.HashMap;\n import java.util.List;\n import java.util.Map;\n import java.util.ResourceBundle;\n \n+import net.sourceforge.pmd.ReportListener;\n+import net.sourceforge.pmd.RuleViolation;\n+import net.sourceforge.pmd.stat.Metric;\n+\n+import org.apache.maven.doxia.sink.Sink;\n+import org.apache.maven.plugin.logging.Log;\n+import org.codehaus.plexus.util.StringUtils;\n+\n /**\n  * Handle events from PMD, converting them into Doxia events.\n  *\n@@ -43,14 +44,14 @@\n public class PmdReportListener\n     implements ReportListener\n {\n+    private Log log;\n+\n     private Sink sink;\n \n     private String currentFilename;\n \n     private ResourceBundle bundle;\n \n-    private PmdFileInfo fileInfo;\n-\n     private List<RuleViolation> violations = new ArrayList<RuleViolation>();\n \n     private boolean aggregate;\n@@ -62,8 +63,9 @@\n \n //    private List<Metric> metrics = new ArrayList<Metric>();\n \n-    public PmdReportListener( Sink sink, ResourceBundle bundle, boolean aggregate )\n+    public PmdReportListener(Log log, Sink sink, ResourceBundle bundle, boolean aggregate )\n     {\n+        this.log = log;\n         this.sink = sink;\n         this.bundle = bundle;\n         this.aggregate = aggregate;\n@@ -93,14 +95,20 @@ private void startFileSection( String currentFilename, PmdFileInfo fileInfo )\n         sink.sectionTitle2();\n \n         // prepare the filename\n-        this.currentFilename =\n-            StringUtils.substring( currentFilename, fileInfo.getSourceDirectory().getAbsolutePath().length() + 1 );\n+        this.currentFilename = currentFilename;\n+        if ( fileInfo != null && fileInfo.getSourceDirectory() != null ) {\n+            this.currentFilename =\n+                    StringUtils.substring( currentFilename, fileInfo.getSourceDirectory().getAbsolutePath().length() + 1 );\n+        } else {\n+            log.warn( \"Unfortunately there was no PmdFileInfo available or the SourceDirectory is not known for \"\n+                    + \" file \" + currentFilename );\n+        }\n         this.currentFilename = StringUtils.replace( this.currentFilename, \"\\\\\", \"/\" );\n \n         String title = this.currentFilename;\n         if ( aggregate )\n         {\n-            title = fileInfo.getProject().getName() + \" - \" + currentFilename;\n+            title = fileInfo.getProject().getName() + \" - \" + this.currentFilename;\n         }\n         sink.text( title );\n         sink.sectionTitle2_();\n@@ -122,7 +130,7 @@ private void endFileSection()\n         sink.section2_();\n     }\n \n-    private void processSingleRuleViolation( RuleViolation ruleViolation )\n+    private void processSingleRuleViolation( RuleViolation ruleViolation, PmdFileInfo fileInfo )\n     {\n         sink.tableRow();\n         sink.tableCell();\n@@ -131,12 +139,12 @@ private void processSingleRuleViolation( RuleViolation ruleViolation )\n         sink.tableCell();\n \n         int beginLine = ruleViolation.getBeginLine();\n-        outputLineLink( beginLine );\n+        outputLineLink( beginLine, fileInfo );\n         int endLine = ruleViolation.getEndLine();\n         if ( endLine != beginLine )\n         {\n             sink.text( \" - \" );\n-            outputLineLink( endLine );\n+            outputLineLink( endLine, fileInfo );\n         }\n \n         sink.tableCell_();\n@@ -166,30 +174,24 @@ public int compare( RuleViolation o1, RuleViolation o2 )\n             }\n         } );\n \n-        Map<String, PmdFileInfo> fileLookup = new HashMap<String, PmdFileInfo>( fileCount );\n-        for ( Map.Entry<File, PmdFileInfo> entry : files.entrySet() )\n-        {\n-            fileLookup.put( entry.getKey().getAbsolutePath(), entry.getValue() );\n-        }\n-\n         boolean fileSectionStarted = false;\n         String previousFilename = null;\n         for ( RuleViolation ruleViolation : violations )\n         {\n             String currentFn = ruleViolation.getFilename();\n+            PmdFileInfo fileInfo = files.get( new File ( currentFn ) );\n             if ( !currentFn.equalsIgnoreCase( previousFilename ) && fileSectionStarted )\n             {\n                 endFileSection();\n                 fileSectionStarted = false;\n             }\n             if ( !fileSectionStarted )\n             {\n-                fileInfo = fileLookup.get( currentFn );\n                 startFileSection( currentFn, fileInfo );\n                 fileSectionStarted = true;\n             }\n \n-            processSingleRuleViolation( ruleViolation );\n+            processSingleRuleViolation( ruleViolation, fileInfo );\n \n             previousFilename = currentFn;\n         }\n@@ -200,9 +202,13 @@ public int compare( RuleViolation o1, RuleViolation o2 )\n         }\n     }\n \n-    private void outputLineLink( int line )\n+    private void outputLineLink( int line, PmdFileInfo fileInfo )\n     {\n-        String xrefLocation = fileInfo.getXrefLocation();\n+        String xrefLocation = null;\n+        if ( fileInfo != null ) {\n+            xrefLocation = fileInfo.getXrefLocation();\n+        }\n+\n         if ( xrefLocation != null )\n         {\n             sink.link( xrefLocation + \"/\" + currentFilename.replaceAll( \"\\\\.java$\", \".html\" ) + \"#\" + line );", "filename": "maven-pmd-plugin/src/main/java/org/apache/maven/plugin/pmd/PmdReportListener.java"}], "repo": "maven-plugins"}, {"commit": "https://github.com/apache/maven-plugins/commit/79107c6082a4bfb4d965fbd128e2c8faa8e98ace", "parent": "https://github.com/apache/maven-plugins/commit/e2dc80867a3ac17e9965d3c4851fd6bfe01992f0", "message": "[MCHANGES-281] jira report fails with Jira 5.0.3 (NPE)\nSubmitted by Swapnil Sapar.\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/plugins/trunk@1334151 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "maven-plugins_45", "file": [{"additions": 1, "raw_url": "https://github.com/apache/maven-plugins/raw/79107c6082a4bfb4d965fbd128e2c8faa8e98ace/maven-changes-plugin/src/main/java/org/apache/maven/plugin/jira/JiraHelper.java", "blob_url": "https://github.com/apache/maven-plugins/blob/79107c6082a4bfb4d965fbd128e2c8faa8e98ace/maven-changes-plugin/src/main/java/org/apache/maven/plugin/jira/JiraHelper.java", "sha": "b93e8da79670e290057c46b266e4581097d4dee0", "changes": 2, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/maven-plugins/contents/maven-changes-plugin/src/main/java/org/apache/maven/plugin/jira/JiraHelper.java?ref=79107c6082a4bfb4d965fbd128e2c8faa8e98ace", "patch": "@@ -38,7 +38,7 @@\n  */\n public class JiraHelper\n {\n-    private static final String PID = \"pid=\";\n+    private static final String PID = \"?pid=\"; //MCHANGES-281 addd ?\n \n     /**\n      * Parse out the base URL for JIRA and the JIRA project id from the issue", "filename": "maven-changes-plugin/src/main/java/org/apache/maven/plugin/jira/JiraHelper.java"}], "repo": "maven-plugins"}, {"commit": "https://github.com/apache/maven-plugins/commit/26abff51c4652009c050865de76495e1498d56ef", "parent": "https://github.com/apache/maven-plugins/commit/968b4359f5ceff619ba958ae78ed72d32d181917", "message": "force version in it poms and add NPE check in FileActivityComparator\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/plugins/trunk@1171987 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "maven-plugins_46", "file": [{"additions": 1, "raw_url": "https://github.com/apache/maven-plugins/raw/26abff51c4652009c050865de76495e1498d56ef/maven-changelog-plugin/pom.xml", "blob_url": "https://github.com/apache/maven-plugins/blob/26abff51c4652009c050865de76495e1498d56ef/maven-changelog-plugin/pom.xml", "sha": "192a52f29a89894dc0ac4e9765711e3e5e753c99", "changes": 1, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/maven-plugins/contents/maven-changelog-plugin/pom.xml?ref=26abff51c4652009c050865de76495e1498d56ef", "patch": "@@ -343,6 +343,7 @@ under the License.\n                 <goal>clean</goal>\n                 <goal>site</goal>\n               </goals>\n+              <showErrors>true</showErrors>\n             </configuration>\n             <executions>\n               <execution>", "filename": "maven-changelog-plugin/pom.xml"}, {"additions": 1, "raw_url": "https://github.com/apache/maven-plugins/raw/26abff51c4652009c050865de76495e1498d56ef/maven-changelog-plugin/src/it/with-svnjava-maven-2.x/pom.xml", "blob_url": "https://github.com/apache/maven-plugins/blob/26abff51c4652009c050865de76495e1498d56ef/maven-changelog-plugin/src/it/with-svnjava-maven-2.x/pom.xml", "sha": "9625645a80d3eeb764d43ec7f92aa7423b40fad5", "changes": 1, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/maven-plugins/contents/maven-changelog-plugin/src/it/with-svnjava-maven-2.x/pom.xml?ref=26abff51c4652009c050865de76495e1498d56ef", "patch": "@@ -74,6 +74,7 @@\n       <plugin>\n         <groupId>org.apache.maven.plugins</groupId>\n         <artifactId>maven-changelog-plugin</artifactId>\n+        <version>@pom.version@</version>\n         <configuration>\n           <providerImplementations>\n             <svn>javasvn</svn>", "filename": "maven-changelog-plugin/src/it/with-svnjava-maven-2.x/pom.xml"}, {"additions": 0, "raw_url": "https://github.com/apache/maven-plugins/raw/26abff51c4652009c050865de76495e1498d56ef/maven-changelog-plugin/src/it/with-svnjava-maven-3/invoker.properties", "blob_url": "https://github.com/apache/maven-plugins/blob/26abff51c4652009c050865de76495e1498d56ef/maven-changelog-plugin/src/it/with-svnjava-maven-3/invoker.properties", "previous_filename": "maven-changelog-plugin/src/it/with-svnjava/invoker.properties", "sha": "3e60bf58627dfa04999731835e6cb8e4af9a6bdf", "changes": 0, "status": "renamed", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/maven-plugins/contents/maven-changelog-plugin/src/it/with-svnjava-maven-3/invoker.properties?ref=26abff51c4652009c050865de76495e1498d56ef", "filename": "maven-changelog-plugin/src/it/with-svnjava-maven-3/invoker.properties"}, {"additions": 1, "raw_url": "https://github.com/apache/maven-plugins/raw/26abff51c4652009c050865de76495e1498d56ef/maven-changelog-plugin/src/it/with-svnjava-maven-3/pom.xml", "blob_url": "https://github.com/apache/maven-plugins/blob/26abff51c4652009c050865de76495e1498d56ef/maven-changelog-plugin/src/it/with-svnjava-maven-3/pom.xml", "previous_filename": "maven-changelog-plugin/src/it/with-svnjava/pom.xml", "sha": "808fa48e8bf2fa55322df223ea3be41858fb01cb", "changes": 1, "status": "renamed", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/maven-plugins/contents/maven-changelog-plugin/src/it/with-svnjava-maven-3/pom.xml?ref=26abff51c4652009c050865de76495e1498d56ef", "patch": "@@ -63,6 +63,7 @@\n             <plugin>\n               <groupId>org.apache.maven.plugins</groupId>\n               <artifactId>maven-changelog-plugin</artifactId>\n+              <version>@pom.version@</version>\n               <configuration>\n                 <issueIDRegexPattern>[A-Z]{2,}-\\d+</issueIDRegexPattern>\n                 <issueLinkUrl>http://jira.example.co.uk</issueLinkUrl>", "filename": "maven-changelog-plugin/src/it/with-svnjava-maven-3/pom.xml"}, {"additions": 0, "raw_url": "https://github.com/apache/maven-plugins/raw/26abff51c4652009c050865de76495e1498d56ef/maven-changelog-plugin/src/it/with-svnjava-maven-3/verify.groovy", "blob_url": "https://github.com/apache/maven-plugins/blob/26abff51c4652009c050865de76495e1498d56ef/maven-changelog-plugin/src/it/with-svnjava-maven-3/verify.groovy", "previous_filename": "maven-changelog-plugin/src/it/with-svnjava/verify.groovy", "sha": "268098f9de45beab172a5bc7455a5081bc3d18fb", "changes": 0, "status": "renamed", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/maven-plugins/contents/maven-changelog-plugin/src/it/with-svnjava-maven-3/verify.groovy?ref=26abff51c4652009c050865de76495e1498d56ef", "filename": "maven-changelog-plugin/src/it/with-svnjava-maven-3/verify.groovy"}, {"additions": 15, "raw_url": "https://github.com/apache/maven-plugins/raw/26abff51c4652009c050865de76495e1498d56ef/maven-changelog-plugin/src/main/java/org/apache/maven/plugin/changelog/FileActivityComparator.java", "blob_url": "https://github.com/apache/maven-plugins/blob/26abff51c4652009c050865de76495e1498d56ef/maven-changelog-plugin/src/main/java/org/apache/maven/plugin/changelog/FileActivityComparator.java", "sha": "c27342cdb138e4be09058fd1e6bb6251ec017779", "changes": 17, "status": "modified", "deletions": 2, "contents_url": "https://api.github.com/repos/apache/maven-plugins/contents/maven-changelog-plugin/src/main/java/org/apache/maven/plugin/changelog/FileActivityComparator.java?ref=26abff51c4652009c050865de76495e1498d56ef", "patch": "@@ -19,6 +19,7 @@\n  * under the License.\n  */\n \n+import org.apache.commons.lang.StringUtils;\n import org.apache.maven.scm.ChangeFile;\n \n import java.util.Comparator;\n@@ -34,7 +35,9 @@\n public class FileActivityComparator\n     implements Comparator\n {\n-    /** {@inheritDoc} */\n+    /**\n+     * {@inheritDoc}\n+     */\n     public int compare( Object o1, Object o2 )\n         throws ClassCastException\n     {\n@@ -98,6 +101,16 @@ private int sortByRevision( List list1, List list2 )\n \n         String revision2 = getLatestRevision( list2 );\n \n+        if ( revision1 == null )\n+        {\n+            return -1;\n+        }\n+\n+        if ( revision2 == null )\n+        {\n+            return 1;\n+        }\n+\n         return revision1.compareTo( revision2 );\n     }\n \n@@ -115,7 +128,7 @@ private String getLatestRevision( List list )\n         {\n             ChangeFile file = (ChangeFile) i.next();\n \n-            if ( latest.length() == 0 )\n+            if ( StringUtils.isNotBlank( latest) )\n             {\n                 latest = file.getRevision();\n             }", "filename": "maven-changelog-plugin/src/main/java/org/apache/maven/plugin/changelog/FileActivityComparator.java"}], "repo": "maven-plugins"}, {"commit": "https://github.com/apache/maven-plugins/commit/680f91a15d972c7a7642565b23f0724d20001ec4", "parent": "https://github.com/apache/maven-plugins/commit/aaba12d4eb60920e2fd38438f9e9308d056a4c10", "message": "[MRESOURCES-105] upgrade to plexus-interpolation 1.13-SNAPSHOT to prevent NPE.\nadd it\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/plugins/trunk@818628 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "maven-plugins_47", "file": [{"additions": 1, "raw_url": "https://github.com/apache/maven-plugins/raw/680f91a15d972c7a7642565b23f0724d20001ec4/maven-resources-plugin/pom.xml", "blob_url": "https://github.com/apache/maven-plugins/blob/680f91a15d972c7a7642565b23f0724d20001ec4/maven-resources-plugin/pom.xml", "sha": "38ab90200894317ded917ca7b2b0ceb8d53a3ec3", "changes": 2, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/maven-plugins/contents/maven-resources-plugin/pom.xml?ref=680f91a15d972c7a7642565b23f0724d20001ec4", "patch": "@@ -83,7 +83,7 @@ under the License.\n     <dependency>\n       <groupId>org.codehaus.plexus</groupId>\n       <artifactId>plexus-interpolation</artifactId>\n-      <version>1.12</version>\n+      <version>1.13-SNAPSHOT</version>\n     </dependency>\n \n     <dependency>", "filename": "maven-resources-plugin/pom.xml"}, {"additions": 2, "raw_url": "https://github.com/apache/maven-plugins/raw/680f91a15d972c7a7642565b23f0724d20001ec4/maven-resources-plugin/src/it/MRESOURCES-105/my.properties", "blob_url": "https://github.com/apache/maven-plugins/blob/680f91a15d972c7a7642565b23f0724d20001ec4/maven-resources-plugin/src/it/MRESOURCES-105/my.properties", "sha": "cef9024342f9a3806dac066640a81dffa61576b0", "changes": 2, "status": "added", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/maven-plugins/contents/maven-resources-plugin/src/it/MRESOURCES-105/my.properties?ref=680f91a15d972c7a7642565b23f0724d20001ec4", "patch": "@@ -0,0 +1,2 @@\n+test.value=true\n+toto.value=foo", "filename": "maven-resources-plugin/src/it/MRESOURCES-105/my.properties"}, {"additions": 55, "raw_url": "https://github.com/apache/maven-plugins/raw/680f91a15d972c7a7642565b23f0724d20001ec4/maven-resources-plugin/src/it/MRESOURCES-105/pom.xml", "blob_url": "https://github.com/apache/maven-plugins/blob/680f91a15d972c7a7642565b23f0724d20001ec4/maven-resources-plugin/src/it/MRESOURCES-105/pom.xml", "sha": "f5929feb26850c16bfa8791f9eb9ba72d310c26d", "changes": 55, "status": "added", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/maven-plugins/contents/maven-resources-plugin/src/it/MRESOURCES-105/pom.xml?ref=680f91a15d972c7a7642565b23f0724d20001ec4", "patch": "@@ -0,0 +1,55 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd\">\n+  <modelVersion>4.0.0</modelVersion>\n+  <groupId>org.apache.maven.plugins.maven-resources-plugin.its</groupId>\n+  <artifactId>MRESOURCES-105</artifactId>\n+  <name>Bug Test</name>\n+  <version>0.0.1-SNAPSHOT</version>\n+  <build>\n+    <resources>\n+      <resource>\n+        <directory>src/main/resources</directory>\n+        <filtering>true</filtering>\n+      </resource>\n+    </resources>\n+    <filters>\n+      <filter>my.properties</filter>\n+    </filters>\n+    <plugins>\n+      <plugin>\n+        <groupId>org.apache.maven.plugins</groupId>\n+        <artifactId>maven-resources-plugin</artifactId>\n+        <version>@project.version@</version>\n+        <configuration>\n+          <delimiters>\n+            <delimiter>$</delimiter>\n+            <delimiter>@</delimiter>\n+            <delimiter>#</delimiter>\n+            <delimiter>${*}</delimiter>\n+          </delimiters>\n+          <useDefaultDelimiters>false</useDefaultDelimiters>\n+          <encoding>UTF-8</encoding>\n+        </configuration>\n+      </plugin>\n+    </plugins>\n+  </build>\n+</project>\n\\ No newline at end of file", "filename": "maven-resources-plugin/src/it/MRESOURCES-105/pom.xml"}, {"additions": 5, "raw_url": "https://github.com/apache/maven-plugins/raw/680f91a15d972c7a7642565b23f0724d20001ec4/maven-resources-plugin/src/it/MRESOURCES-105/src/main/resources/test.properties", "blob_url": "https://github.com/apache/maven-plugins/blob/680f91a15d972c7a7642565b23f0724d20001ec4/maven-resources-plugin/src/it/MRESOURCES-105/src/main/resources/test.properties", "sha": "0d6efed7a5829132622fa81729aaa36570cc99b8", "changes": 5, "status": "added", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/maven-plugins/contents/maven-resources-plugin/src/it/MRESOURCES-105/src/main/resources/test.properties?ref=680f91a15d972c7a7642565b23f0724d20001ec4", "patch": "@@ -0,0 +1,5 @@\n+#init test value (true|false) LINE IS essential for this bug report.#\n+toto.value=$toto.value$\n+test.value=#test.value#\n+test.value=@test.value@\n+test.value=${test.value}", "filename": "maven-resources-plugin/src/it/MRESOURCES-105/src/main/resources/test.properties"}, {"additions": 3, "raw_url": "https://github.com/apache/maven-plugins/raw/680f91a15d972c7a7642565b23f0724d20001ec4/maven-resources-plugin/src/it/settings.xml", "blob_url": "https://github.com/apache/maven-plugins/blob/680f91a15d972c7a7642565b23f0724d20001ec4/maven-resources-plugin/src/it/settings.xml", "sha": "cc499d6f6fe3d54a449918d7ebceff981e55a292", "changes": 6, "status": "modified", "deletions": 3, "contents_url": "https://api.github.com/repos/apache/maven-plugins/contents/maven-resources-plugin/src/it/settings.xml?ref=680f91a15d972c7a7642565b23f0724d20001ec4", "patch": "@@ -38,9 +38,9 @@ under the License.\n           </snapshots>\n         </repository>\n         <repository>\n-          <id>apache.snapshots</id>\n-          <name>Apache Snapshot Repository</name>\n-          <url>http://people.apache.org/repo/m2-snapshot-repository</url>\n+          <id>plexus.snapshots</id>\n+          <name>Plexus Snapshot Repository</name>\n+          <url>http://oss.repository.sonatype.org/content/repositories/plexus-snapshots</url>\n           <releases>\n             <enabled>false</enabled>\n           </releases>", "filename": "maven-resources-plugin/src/it/settings.xml"}], "repo": "maven-plugins"}, {"commit": "https://github.com/apache/maven-plugins/commit/6f9300bcfda7d17fa00a75a042a44ea06daa1a42", "parent": "https://github.com/apache/maven-plugins/commit/f583868e85e992a7e024e89aaf9b74094b7e6ca4", "message": "[MJAVADOC-251] Configuration of javadoc:javadoc fails with NPE upon disadvantageous order of config injection\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/plugins/trunk@800618 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "maven-plugins_48", "file": [{"additions": 13, "raw_url": "https://github.com/apache/maven-plugins/raw/6f9300bcfda7d17fa00a75a042a44ea06daa1a42/maven-javadoc-plugin/src/main/java/org/apache/maven/plugin/javadoc/JavadocReport.java", "blob_url": "https://github.com/apache/maven-plugins/blob/6f9300bcfda7d17fa00a75a042a44ea06daa1a42/maven-javadoc-plugin/src/main/java/org/apache/maven/plugin/javadoc/JavadocReport.java", "sha": "562c3d42a40f9324004dfe38dfb8a74c34982bba", "changes": 14, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/maven-plugins/contents/maven-javadoc-plugin/src/main/java/org/apache/maven/plugin/javadoc/JavadocReport.java?ref=6f9300bcfda7d17fa00a75a042a44ea06daa1a42", "patch": "@@ -237,7 +237,19 @@ public File getReportOutputDirectory()\n      */\n     public void setReportOutputDirectory( File reportOutputDirectory )\n     {\n-        if ( ( reportOutputDirectory != null ) && ( !reportOutputDirectory.getAbsolutePath().endsWith( destDir ) ) )\n+        updateReportOutputDirectory( reportOutputDirectory, destDir );\n+    }\n+\n+    public void setDestDir( String destDir )\n+    {\n+        this.destDir = destDir;\n+        updateReportOutputDirectory( reportOutputDirectory, destDir );\n+    }\n+\n+    private void updateReportOutputDirectory( File reportOutputDirectory, String destDir )\n+    {\n+        if ( reportOutputDirectory != null && destDir != null\n+             && !reportOutputDirectory.getAbsolutePath().endsWith( destDir ) )\n         {\n             this.reportOutputDirectory = new File( reportOutputDirectory, destDir );\n         }", "filename": "maven-javadoc-plugin/src/main/java/org/apache/maven/plugin/javadoc/JavadocReport.java"}, {"additions": 13, "raw_url": "https://github.com/apache/maven-plugins/raw/6f9300bcfda7d17fa00a75a042a44ea06daa1a42/maven-javadoc-plugin/src/main/java/org/apache/maven/plugin/javadoc/TestJavadocReport.java", "blob_url": "https://github.com/apache/maven-plugins/blob/6f9300bcfda7d17fa00a75a042a44ea06daa1a42/maven-javadoc-plugin/src/main/java/org/apache/maven/plugin/javadoc/TestJavadocReport.java", "sha": "b161d778618a969c1008d31a51e87ab88e5867e0", "changes": 14, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/maven-plugins/contents/maven-javadoc-plugin/src/main/java/org/apache/maven/plugin/javadoc/TestJavadocReport.java?ref=6f9300bcfda7d17fa00a75a042a44ea06daa1a42", "patch": "@@ -195,7 +195,19 @@ public File getReportOutputDirectory()\n      */\n     public void setReportOutputDirectory( File reportOutputDirectory )\n     {\n-        if ( ( reportOutputDirectory != null ) && ( !reportOutputDirectory.getAbsolutePath().endsWith( destDir ) ) )\n+        updateReportOutputDirectory( reportOutputDirectory, destDir );\n+    }\n+\n+    public void setDestDir( String destDir )\n+    {\n+        this.destDir = destDir;\n+        updateReportOutputDirectory( reportOutputDirectory, destDir );\n+    }\n+\n+    private void updateReportOutputDirectory( File reportOutputDirectory, String destDir )\n+    {\n+        if ( reportOutputDirectory != null && destDir != null\n+             && !reportOutputDirectory.getAbsolutePath().endsWith( destDir ) )\n         {\n             this.reportOutputDirectory = new File( reportOutputDirectory, destDir );\n         }", "filename": "maven-javadoc-plugin/src/main/java/org/apache/maven/plugin/javadoc/TestJavadocReport.java"}], "repo": "maven-plugins"}, {"commit": "https://github.com/apache/maven-plugins/commit/2e6be4fe48c2b65541dcaea2d23b69da72fbbc88", "parent": "https://github.com/apache/maven-plugins/commit/3c176a3a90e7ef13f76bb847588e97ec38f7fbfb", "message": "MPIR-135: NPE if license URL is not defined\n\no applied Benno's comment\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/plugins/trunk@748487 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "maven-plugins_49", "file": [{"additions": 1, "raw_url": "https://github.com/apache/maven-plugins/raw/2e6be4fe48c2b65541dcaea2d23b69da72fbbc88/maven-project-info-reports-plugin/src/main/java/org/apache/maven/report/projectinfo/LicenseReport.java", "blob_url": "https://github.com/apache/maven-plugins/blob/2e6be4fe48c2b65541dcaea2d23b69da72fbbc88/maven-project-info-reports-plugin/src/main/java/org/apache/maven/report/projectinfo/LicenseReport.java", "sha": "5d52385167839540efd6db5bf3c719038c0bf250", "changes": 2, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/maven-plugins/contents/maven-project-info-reports-plugin/src/main/java/org/apache/maven/report/projectinfo/LicenseReport.java?ref=2e6be4fe48c2b65541dcaea2d23b69da72fbbc88", "patch": "@@ -153,7 +153,7 @@ protected static URL getLicenseURL( MavenProject project, String url )\n         // URLs do not contain a valid authority (no hostname).\n         // As a workaround accept license URLs that start with the\n         // file scheme.\n-        if ( urlValidator.isValid( url ) || url.startsWith( \"file://\" ) )\n+        if ( urlValidator.isValid( url ) || StringUtils.defaultString( url ).startsWith( \"file://\" ) )\n         {\n             try\n             {", "filename": "maven-project-info-reports-plugin/src/main/java/org/apache/maven/report/projectinfo/LicenseReport.java"}], "repo": "maven-plugins"}, {"commit": "https://github.com/apache/maven-plugins/commit/f2a19950e1cb54a8cd673029fefc8109f1da4cb5", "parent": "https://github.com/apache/maven-plugins/commit/1a60cb94a7a27f1f9c45e28f4da9677f98508d3c", "message": "MPIR-131: NPE in printArtifactsLocations() for blacklisted repo\nSubmitted by: J\u00f6rgen Rydenius\nReviewed by: Vincent Siveton\n\no Patch applied\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/plugins/trunk@738829 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "maven-plugins_50", "file": [{"additions": 2, "raw_url": "https://github.com/apache/maven-plugins/raw/f2a19950e1cb54a8cd673029fefc8109f1da4cb5/maven-project-info-reports-plugin/src/main/java/org/apache/maven/report/projectinfo/dependencies/renderer/DependenciesRenderer.java", "blob_url": "https://github.com/apache/maven-plugins/blob/f2a19950e1cb54a8cd673029fefc8109f1da4cb5/maven-project-info-reports-plugin/src/main/java/org/apache/maven/report/projectinfo/dependencies/renderer/DependenciesRenderer.java", "sha": "6e7c7aede5b0001763bb5d50b32c8b3ae9dcdb02", "changes": 3, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/maven-plugins/contents/maven-project-info-reports-plugin/src/main/java/org/apache/maven/report/projectinfo/dependencies/renderer/DependenciesRenderer.java?ref=f2a19950e1cb54a8cd673029fefc8109f1da4cb5", "patch": "@@ -1179,7 +1179,8 @@ private void printArtifactsLocations( Map repoMap, List alldeps )\n         {\n             String repokey = (String) itrepo.next();\n \n-            totalRow[idnum++] = totalByRepo.get( repokey ).toString();\n+            Integer dependencies = (Integer) totalByRepo.get( repokey );\n+            totalRow[idnum++] = dependencies != null ? dependencies.toString() : \"0\";\n         }\n \n         tableRow( totalRow );", "filename": "maven-project-info-reports-plugin/src/main/java/org/apache/maven/report/projectinfo/dependencies/renderer/DependenciesRenderer.java"}], "repo": "maven-plugins"}, {"commit": "https://github.com/apache/maven-plugins/commit/76877ee5cc5aa28c84cd4a3c2bf882b019ec1337", "parent": "https://github.com/apache/maven-plugins/commit/db7e506378920fdd203551e17a12a71800eb7d08", "message": "[MASSEMBLY-306] Adding integration test to verify that NPE is fixed.\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/plugins/trunk@697230 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "maven-plugins_51", "file": [{"additions": 1, "raw_url": "https://github.com/apache/maven-plugins/raw/76877ee5cc5aa28c84cd4a3c2bf882b019ec1337/maven-assembly-plugin/pom.xml", "blob_url": "https://github.com/apache/maven-plugins/blob/76877ee5cc5aa28c84cd4a3c2bf882b019ec1337/maven-assembly-plugin/pom.xml", "sha": "9e8969acc4c9535bf876024fa43fabab458acddb", "changes": 2, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/maven-plugins/contents/maven-assembly-plugin/pom.xml?ref=76877ee5cc5aa28c84cd4a3c2bf882b019ec1337", "patch": "@@ -24,7 +24,7 @@\n   <parent>\n     <artifactId>maven-plugins</artifactId>\n     <groupId>org.apache.maven.plugins</groupId>\n-    <version>12-SNAPSHOT</version>\n+    <version>11</version>\n   </parent>\n \n   <artifactId>maven-assembly-plugin</artifactId>", "filename": "maven-assembly-plugin/pom.xml"}, {"additions": 2, "raw_url": "https://github.com/apache/maven-plugins/raw/76877ee5cc5aa28c84cd4a3c2bf882b019ec1337/maven-assembly-plugin/src/it/projects/bugs/massembly-306/goals.txt", "blob_url": "https://github.com/apache/maven-plugins/blob/76877ee5cc5aa28c84cd4a3c2bf882b019ec1337/maven-assembly-plugin/src/it/projects/bugs/massembly-306/goals.txt", "sha": "b9fba2dd06904a4b30d076b74f640d73dbeccad6", "changes": 2, "status": "added", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/maven-plugins/contents/maven-assembly-plugin/src/it/projects/bugs/massembly-306/goals.txt?ref=76877ee5cc5aa28c84cd4a3c2bf882b019ec1337", "patch": "@@ -0,0 +1,2 @@\n+clean\n+package\n\\ No newline at end of file", "filename": "maven-assembly-plugin/src/it/projects/bugs/massembly-306/goals.txt"}, {"additions": 47, "raw_url": "https://github.com/apache/maven-plugins/raw/76877ee5cc5aa28c84cd4a3c2bf882b019ec1337/maven-assembly-plugin/src/it/projects/bugs/massembly-306/pom.xml", "blob_url": "https://github.com/apache/maven-plugins/blob/76877ee5cc5aa28c84cd4a3c2bf882b019ec1337/maven-assembly-plugin/src/it/projects/bugs/massembly-306/pom.xml", "sha": "efe479d2bfe5ecb46b38a5ba06df9e8ddd1bb98f", "changes": 47, "status": "added", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/maven-plugins/contents/maven-assembly-plugin/src/it/projects/bugs/massembly-306/pom.xml?ref=76877ee5cc5aa28c84cd4a3c2bf882b019ec1337", "patch": "@@ -0,0 +1,47 @@\n+<?xml version=\"1.0\"?>\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd\">\n+  <modelVersion>4.0.0</modelVersion>\n+  <parent>\n+    <groupId>org.apache.maven.plugin.assembly.test</groupId>\n+    <artifactId>it-project-parent</artifactId>\n+    <version>1</version>\n+  </parent>\n+  \n+  <artifactId>massembly-306</artifactId>\n+  <packaging>jar</packaging>\n+  <name>massembly-306</name>\n+\n+  <dependencies>\n+    <dependency>\n+      <groupId>log4j</groupId>\n+      <artifactId>log4j</artifactId>\n+      \n+      <!-- Both the range AND the scope are critical here, \n+           since this artifact will be EXCLUDED from the depSet. -->\n+      <version>[1.2.13]</version>\n+      <scope>provided</scope>\n+    </dependency>\n+  </dependencies>\n+  <build>\n+    <plugins>\n+      <plugin>\n+        <groupId>org.apache.maven.plugins</groupId>\n+        <artifactId>maven-assembly-plugin</artifactId>\n+        <executions>\n+          <execution>\n+            <id>make-assembly</id>\n+            <phase>package</phase>\n+            <goals>\n+              <goal>single</goal>\n+            </goals>\n+            <configuration>\n+              <descriptorRefs>\n+                <descriptorRef>jar-with-dependencies</descriptorRef>\n+              </descriptorRefs>\n+            </configuration>\n+          </execution>\n+        </executions>\n+      </plugin>\n+    </plugins>\n+  </build>\n+</project>", "filename": "maven-assembly-plugin/src/it/projects/bugs/massembly-306/pom.xml"}], "repo": "maven-plugins"}, {"commit": "https://github.com/apache/maven-plugins/commit/3dc04f9fe64e231c3762ef3d90fb3cce38d79be4", "parent": "https://github.com/apache/maven-plugins/commit/fa3ecec1bf3e84a8941b5665b0a30adffa8b0278", "message": "[MINVOKER-51] NPE when packaging is pom\nSubmitted by: Peter Janes\nReviewed by: Benjamin Bentmann\n\no Applied with minor modifications/additions\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/plugins/trunk@685574 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "maven-plugins_52", "file": [{"additions": 57, "raw_url": "https://github.com/apache/maven-plugins/raw/3dc04f9fe64e231c3762ef3d90fb3cce38d79be4/maven-invoker-plugin/src/it/staging-pom/pom.xml", "blob_url": "https://github.com/apache/maven-plugins/blob/3dc04f9fe64e231c3762ef3d90fb3cce38d79be4/maven-invoker-plugin/src/it/staging-pom/pom.xml", "sha": "cf6e7a6808ab1a2283d6f863ce1173c59a015bcf", "changes": 57, "status": "added", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/maven-plugins/contents/maven-invoker-plugin/src/it/staging-pom/pom.xml?ref=3dc04f9fe64e231c3762ef3d90fb3cce38d79be4", "patch": "@@ -0,0 +1,57 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<!--\n+  ~ Licensed to the Apache Software Foundation (ASF) under one\n+  ~ or more contributor license agreements.  See the NOTICE file\n+  ~ distributed with this work for additional information\n+  ~ regarding copyright ownership.  The ASF licenses this file\n+  ~ to you under the Apache License, Version 2.0 (the\n+  ~ \"License\"); you may not use this file except in compliance\n+  ~ with the License.  You may obtain a copy of the License at\n+  ~\n+  ~   http://www.apache.org/licenses/LICENSE-2.0\n+  ~\n+  ~ Unless required by applicable law or agreed to in writing,\n+  ~ software distributed under the License is distributed on an\n+  ~ \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+  ~ KIND, either express or implied.  See the License for the\n+  ~ specific language governing permissions and limitations\n+  ~ under the License.\n+  -->\n+\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\"\n+         xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd\">\n+  <modelVersion>4.0.0</modelVersion>\n+\n+  <groupId>test</groupId>\n+  <artifactId>pom-packaging</artifactId>\n+  <version>1.0-SNAPSHOT</version>\n+  <packaging>pom</packaging>\n+\n+  <description>\n+    Test to check for MINVOKER-51, i.e. NPE when packaging is pom.\n+  </description>\n+\n+  <build>\n+    <plugins>\n+      <plugin>\n+        <groupId>org.apache.maven.plugins</groupId>\n+        <artifactId>maven-invoker-plugin</artifactId>\n+        <version>@pom.version@</version>\n+        <configuration>\n+          <localRepositoryPath>${project.build.directory}/it-repo</localRepositoryPath>\n+        </configuration>\n+        <executions>\n+          <execution>\n+            <id>integration-test</id>\n+            <phase>integration-test</phase>\n+            <goals>\n+              <goal>install</goal>\n+            </goals>\n+          </execution>\n+        </executions>\n+      </plugin>\n+    </plugins>\n+  </build>\n+\n+</project>", "filename": "maven-invoker-plugin/src/it/staging-pom/pom.xml"}, {"additions": 35, "raw_url": "https://github.com/apache/maven-plugins/raw/3dc04f9fe64e231c3762ef3d90fb3cce38d79be4/maven-invoker-plugin/src/it/staging-pom/verify.bsh", "blob_url": "https://github.com/apache/maven-plugins/blob/3dc04f9fe64e231c3762ef3d90fb3cce38d79be4/maven-invoker-plugin/src/it/staging-pom/verify.bsh", "sha": "32ebe7f9269a2007ff20e2b3f90823a36ff5ecf0", "changes": 35, "status": "added", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/maven-plugins/contents/maven-invoker-plugin/src/it/staging-pom/verify.bsh?ref=3dc04f9fe64e231c3762ef3d90fb3cce38d79be4", "patch": "@@ -0,0 +1,35 @@\n+import java.io.*;\n+import java.util.*;\n+import java.util.regex.*;\n+\n+try\n+{\n+    File itRepoDir = new File( basedir, \"target/it-repo\" );\n+    System.out.println( \"Checking for existence of: \" + itRepoDir );\n+    if ( !itRepoDir.isDirectory() )\n+    {\n+        System.out.println( \"FAILED!\" );\n+        return false;\n+    }\n+\n+    String[] files = {\n+            \"test/pom-packaging/1.0-SNAPSHOT/pom-packaging-1.0-SNAPSHOT.pom\",\n+      };\n+    for ( String file : files )\n+    {\n+        File stagedFile = new File( itRepoDir, file );\n+        System.out.println( \"Checking for existence of: \" + stagedFile );\n+        if ( !stagedFile.isFile() )\n+        {\n+            System.out.println( \"FAILED!\" );\n+            return false;\n+        }\n+    }\n+}\n+catch( Throwable t )\n+{\n+    t.printStackTrace();\n+    return false;\n+}\n+\n+return true;", "filename": "maven-invoker-plugin/src/it/staging-pom/verify.bsh"}, {"additions": 5, "raw_url": "https://github.com/apache/maven-plugins/raw/3dc04f9fe64e231c3762ef3d90fb3cce38d79be4/maven-invoker-plugin/src/main/java/org/apache/maven/plugin/invoker/InstallMojo.java", "blob_url": "https://github.com/apache/maven-plugins/blob/3dc04f9fe64e231c3762ef3d90fb3cce38d79be4/maven-invoker-plugin/src/main/java/org/apache/maven/plugin/invoker/InstallMojo.java", "sha": "2797f622dd45aad25b1ad681bd5d6fcb8a7c1ba7", "changes": 6, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/maven-plugins/contents/maven-invoker-plugin/src/main/java/org/apache/maven/plugin/invoker/InstallMojo.java?ref=3dc04f9fe64e231c3762ef3d90fb3cce38d79be4", "patch": "@@ -176,7 +176,11 @@ private void installProjectArtifacts( MavenProject mvnProject, ArtifactRepositor\n             installProjectPom( mvnProject, testRepository );\n \n             // Install the main project artifact\n-            installer.install( mvnProject.getArtifact().getFile(), mvnProject.getArtifact(), testRepository );\n+            File artifactFile = mvnProject.getArtifact().getFile();\n+            if ( artifactFile != null )\n+            {\n+                installer.install( artifactFile, mvnProject.getArtifact(), testRepository );\n+            }\n \n             // Install any attached project artifacts\n             Collection attachedArtifacts = mvnProject.getAttachedArtifacts();", "filename": "maven-invoker-plugin/src/main/java/org/apache/maven/plugin/invoker/InstallMojo.java"}], "repo": "maven-plugins"}, {"commit": "https://github.com/apache/maven-plugins/commit/303c53f4e9851a3f0eb081b8981c4fbae2a56c37", "parent": "https://github.com/apache/maven-plugins/commit/fcc653b11d7b942f07827b2bfb2d2291a43ad880", "message": "[MANT-41] mvn ant:ant fails with NPE when maven-javadoc-plugin custom tag is specified in pom.xml\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/plugins/trunk@663768 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "maven-plugins_53", "file": [{"additions": 61, "raw_url": "https://github.com/apache/maven-plugins/raw/303c53f4e9851a3f0eb081b8981c4fbae2a56c37/maven-ant-plugin/src/it/javadoc-it/pom.xml", "blob_url": "https://github.com/apache/maven-plugins/blob/303c53f4e9851a3f0eb081b8981c4fbae2a56c37/maven-ant-plugin/src/it/javadoc-it/pom.xml", "sha": "7996857286fa0c40b5a52ea4b69fbf75db9ea9ae", "changes": 61, "status": "added", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/maven-plugins/contents/maven-ant-plugin/src/it/javadoc-it/pom.xml?ref=303c53f4e9851a3f0eb081b8981c4fbae2a56c37", "patch": "@@ -0,0 +1,61 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\"\n+  xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+  xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd\">\n+  <modelVersion>4.0.0</modelVersion>\n+\n+  <groupId>org.apache.maven.plugins.maven-ant-plugin.it</groupId>\n+  <artifactId>javadoc-it</artifactId>\n+  <version>1.0-SNAPSHOT</version>\n+\n+  <build>\n+    <finalName>${project.artifactId}</finalName>\n+    <plugins>\n+      <plugin>\n+        <groupId>org.apache.maven.plugins</groupId>\n+        <artifactId>maven-ant-plugin</artifactId>\n+        <version>@pom.version@</version>\n+      </plugin>\n+      <plugin>\n+        <groupId>org.apache.maven.plugins</groupId>\n+        <artifactId>maven-clean-plugin</artifactId>\n+        <version>2.2</version>\n+        <configuration>\n+          <filesets>\n+            <fileset>\n+              <directory>${basedir}</directory>\n+              <includes>\n+                <include>build.xml</include>\n+                <include>maven-build.*</include>\n+              </includes>\n+            </fileset>\n+          </filesets>\n+        </configuration>\n+      </plugin>\n+    </plugins>\n+  </build>\n+\n+  <reporting>\n+    <plugins>\n+      <plugin>\n+        <groupId>org.apache.maven.plugins</groupId>\n+        <artifactId>maven-javadoc-plugin</artifactId>\n+        <version>2.4</version>\n+        <configuration>\n+          <tags>\n+            <tag>\n+              <name>requirement</name>\n+              <placement>a</placement>\n+              <head>Software Requirement:</head>\n+            </tag>\n+          </tags>\n+        </configuration>\n+      </plugin>\n+    </plugins>\n+  </reporting>\n+\n+  <properties>\n+    <build.compiler>extJavac</build.compiler>\n+  </properties>\n+\n+</project>", "filename": "maven-ant-plugin/src/it/javadoc-it/pom.xml"}, {"additions": 3, "raw_url": "https://github.com/apache/maven-plugins/raw/303c53f4e9851a3f0eb081b8981c4fbae2a56c37/maven-ant-plugin/src/it/javadoc-it/src/main/java/Main.java", "blob_url": "https://github.com/apache/maven-plugins/blob/303c53f4e9851a3f0eb081b8981c4fbae2a56c37/maven-ant-plugin/src/it/javadoc-it/src/main/java/Main.java", "sha": "27ccb83201ed6ec40983a4e13432b1128718b805", "changes": 3, "status": "added", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/maven-plugins/contents/maven-ant-plugin/src/it/javadoc-it/src/main/java/Main.java?ref=303c53f4e9851a3f0eb081b8981c4fbae2a56c37", "patch": "@@ -0,0 +1,3 @@\n+public class Main\n+{\n+}", "filename": "maven-ant-plugin/src/it/javadoc-it/src/main/java/Main.java"}, {"additions": 124, "raw_url": "https://github.com/apache/maven-plugins/raw/303c53f4e9851a3f0eb081b8981c4fbae2a56c37/maven-ant-plugin/src/main/java/org/apache/maven/plugin/ant/AntBuildWriterUtil.java", "blob_url": "https://github.com/apache/maven-plugins/blob/303c53f4e9851a3f0eb081b8981c4fbae2a56c37/maven-ant-plugin/src/main/java/org/apache/maven/plugin/ant/AntBuildWriterUtil.java", "sha": "b0aa3c7f3773961f125de0ebbe0020a14a69461e", "changes": 195, "status": "modified", "deletions": 71, "contents_url": "https://api.github.com/repos/apache/maven-plugins/contents/maven-ant-plugin/src/main/java/org/apache/maven/plugin/ant/AntBuildWriterUtil.java?ref=303c53f4e9851a3f0eb081b8981c4fbae2a56c37", "patch": "@@ -39,7 +39,6 @@\n import org.apache.maven.project.MavenProject;\n import org.apache.maven.wagon.PathUtils;\n import org.apache.xpath.XPathAPI;\n-import org.apache.xpath.objects.XObject;\n import org.codehaus.plexus.util.StringUtils;\n import org.codehaus.plexus.util.xml.XMLWriter;\n import org.codehaus.plexus.util.xml.Xpp3Dom;\n@@ -535,10 +534,11 @@ public static void writeJavadocTask( XMLWriter writer, MavenProject project, Art\n         {\n             for ( int i = 0; i < tags.length; i++ )\n             {\n+                Map props = (Map) tags[i].get( \"tag\" );\n                 writer.startElement( \"tag\" );\n-                writer.addAttribute( \"name\", (String) tags[i].get( \"name\" ) );\n-                addWrapAttribute( writer, \"javadoc\", \"scope\", (String) tags[i].get( \"placement\" ), 4 );\n-                addWrapAttribute( writer, \"javadoc\", \"description\", (String) tags[i].get( \"head\" ), 4 );\n+                writer.addAttribute( \"name\", (String) props.get( \"name\" ) );\n+                addWrapAttribute( writer, \"javadoc\", \"scope\", (String) props.get( \"placement\" ), 4 );\n+                addWrapAttribute( writer, \"javadoc\", \"description\", (String) props.get( \"head\" ), 4 );\n                 writer.endElement(); // tag\n             }\n         }\n@@ -1131,98 +1131,103 @@ private static Map getMavenPluginConfigurationsImpl( MavenProject project, Strin\n                 Document doc = DocumentBuilderFactory.newInstance().newDocumentBuilder()\n                     .parse( new ByteArrayInputStream( pluginConf.toString().getBytes( \"UTF-8\" ) ) );\n \n-                XObject obj = XPathAPI.eval( doc, \"//configuration/\" + optionName );\n-\n-                NodeList nodeList = obj.nodelist();\n-                if ( nodeList.getLength() > 0 && isList( nodeList.item( 0 ) ) )\n+                NodeList nodeList = XPathAPI.eval( doc, \"//configuration/\" + optionName ).nodelist();\n+                if ( nodeList.getLength() > 0 )\n                 {\n-                    /*\n-                     * <optionNames>\n-                     *   <optionName>\n-                     *    <param1>value1</param1>\n-                     *    <param2>value2</param2>\n-                     *   </optionName>\n-                     * </optionNames>\n-                     */\n-                    Map options = new HashMap();\n-\n-                    List optionNames = new ArrayList();\n-                    NodeList childs = nodeList.item( 0 ).getChildNodes();\n-                    for ( int i = 0; i < childs.getLength(); i++ )\n-                    {\n-                        if ( childs.item( i ).getNodeType() == Node.ELEMENT_NODE )\n-                        {\n-                            Map option = new HashMap();\n+                    Node optionNode = nodeList.item( 0 );\n \n-                            obj = XPathAPI.eval( doc, \"//configuration/\" + childs.item( i ).getNodeName() );\n+                    if ( isList( optionNode ) )\n+                    {\n+                        /*\n+                         * <optionNames>\n+                         *   <optionName>\n+                         *    <param1>value1</param1>\n+                         *    <param2>value2</param2>\n+                         *   </optionName>\n+                         * </optionNames>\n+                         */\n+                        Map options = new HashMap();\n \n-                            if ( StringUtils.isNotEmpty( obj.toString() ) )\n+                        List optionNames = new ArrayList();\n+                        NodeList childs = optionNode.getChildNodes();\n+                        for ( int i = 0; i < childs.getLength(); i++ )\n+                        {\n+                            Node child = childs.item( i );\n+                            if ( child.getNodeType() == Node.ELEMENT_NODE )\n                             {\n-                                Map properties = new HashMap();\n-                                NodeList childs2 = childs.item( i ).getChildNodes();\n-                                if ( childs2.getLength() > 0 )\n+                                Map option = new HashMap();\n+\n+                                if ( isElementContent( child ) )\n                                 {\n-                                    for ( int j = 0; j < childs2.getLength(); j++ )\n+                                    Map properties = new HashMap();\n+                                    NodeList childs2 = child.getChildNodes();\n+                                    if ( childs2.getLength() > 0 )\n                                     {\n-                                        if ( childs2.item( j ).getNodeType() == Node.ELEMENT_NODE )\n+                                        for ( int j = 0; j < childs2.getLength(); j++ )\n                                         {\n-                                            properties.put( childs2.item( j ).getNodeName(), childs2.item( j )\n-                                                .getFirstChild().getNodeValue() );\n+                                            Node child2 = childs2.item( j );\n+                                            if ( child2.getNodeType() == Node.ELEMENT_NODE )\n+                                            {\n+                                                properties.put( child2.getNodeName(), getTextContent( child2 ) );\n+                                            }\n                                         }\n+                                        option.put( child.getNodeName(), properties );\n                                     }\n-                                    option.put( childs.item( i ).getNodeName(), properties );\n                                 }\n-                            }\n-                            else\n-                            {\n-                                option.put( childs.item( i ).getNodeName(), childs.item( i ).getFirstChild()\n-                                    .getNodeValue() );\n-                            }\n+                                else\n+                                {\n+                                    option.put( child.getNodeName(), getTextContent( child ) );\n+                                }\n \n-                            optionNames.add( option );\n+                                optionNames.add( option );\n+                            }\n                         }\n-                    }\n-\n-                    options.put( optionName, optionNames.toArray( new Map[0] ) );\n \n-                    return options;\n-                }\n+                        options.put( optionName, optionNames.toArray( new Map[0] ) );\n \n-                /*\n-                 * <optionName>\n-                 *  <param1>value1</param1>\n-                 *  <param2>value2</param2>\n-                 * </optionName>\n-                 */\n-                if ( StringUtils.isNotEmpty( obj.toString() ) )\n-                {\n-                    Map option = new HashMap();\n+                        return options;\n+                    }\n \n-                    NodeList childs = nodeList.item( 0 ).getChildNodes();\n-                    if ( childs.getLength() > 1 )\n+                    if ( isElementContent( optionNode ) )\n                     {\n-                        Map parameters = new HashMap();\n+                        /*\n+                         * <optionName>\n+                         *  <param1>value1</param1>\n+                         *  <param2>value2</param2>\n+                         * </optionName>\n+                         */\n+                        Map option = new HashMap();\n \n-                        for ( int i = 0; i < childs.getLength(); i++ )\n+                        NodeList childs = optionNode.getChildNodes();\n+                        if ( childs.getLength() > 1 )\n                         {\n-                            if ( childs.item( i ).getNodeType() == Node.ELEMENT_NODE )\n+                            Map parameters = new HashMap();\n+\n+                            for ( int i = 0; i < childs.getLength(); i++ )\n                             {\n-                                parameters.put( childs.item( i ).getNodeName(), childs.item( i ).getFirstChild()\n-                                    .getNodeValue() );\n+                                Node child = childs.item( i );\n+                                if ( child.getNodeType() == Node.ELEMENT_NODE )\n+                                {\n+                                    parameters.put( child.getNodeName(), getTextContent( child ) );\n+                                }\n                             }\n+\n+                            option.put( optionName, parameters );\n                         }\n \n-                        option.put( optionName, parameters );\n+                        return option;\n                     }\n                     else\n                     {\n                         /*\n                          * <optionName>value1</optionName>\n                          */\n-                        option.put( optionName, obj.toString() );\n-                    }\n+                        Map option = new HashMap();\n+\n+                        option.put( optionName, getTextContent( optionNode ) );\n \n-                    return option;\n+                        return option;\n+                    }\n                 }\n             }\n             catch ( Exception e )\n@@ -1286,7 +1291,7 @@ private static void writeCopyLib( XMLWriter writer, MavenProject project, String\n      * &lt;/options&gt;\n      * </pre>\n      *\n-     * @param node a given node\n+     * @param node a given node, may be <code>null</code>.\n      * @return true if the node is a list, false otherwise.\n      */\n     private static boolean isList( Node node )\n@@ -1296,13 +1301,13 @@ private static boolean isList( Node node )\n             return false;\n         }\n \n-        NodeList childs = node.getChildNodes();\n+        NodeList children = node.getChildNodes();\n \n         boolean isList = false;\n         String lastNodeName = null;\n-        for ( int i = 0; i < childs.getLength(); i++ )\n+        for ( int i = 0; i < children.getLength(); i++ )\n         {\n-            Node child = childs.item( i );\n+            Node child = children.item( i );\n             if ( child.getNodeType() == Node.ELEMENT_NODE )\n             {\n                 isList = isList || ( child.getNodeName().equals( lastNodeName ) );\n@@ -1317,6 +1322,54 @@ private static boolean isList( Node node )\n         return isList;\n     }\n \n+    /**\n+     * Checks whether the specified node has element content or consists only of character data.\n+     * \n+     * @param node The node to test, may be <code>null</code>.\n+     * @return <code>true</code> if any child node is an element, <code>false</code> otherwise.\n+     */\n+    private static boolean isElementContent( Node node )\n+    {\n+        if ( node == null )\n+        {\n+            return false;\n+        }\n+        NodeList children = node.getChildNodes();\n+        for ( int i = 0; i < children.getLength(); i++ )\n+        {\n+            Node child = children.item( i );\n+            if ( child.getNodeType() == Node.ELEMENT_NODE )\n+            {\n+                return true;\n+            }\n+        }\n+        return false;\n+    }\n+\n+    /**\n+     * Gets the text content of the specified node.\n+     * \n+     * @param node The node whose text contents should be retrieved, may be <code>null</code>.\n+     * @return The text content of the node, can be empty but never <code>null</code>.\n+     */\n+    private static String getTextContent( Node node )\n+    {\n+        StringBuffer buffer = new StringBuffer();\n+        if ( node != null )\n+        {\n+            NodeList children = node.getChildNodes();\n+            for ( int i = 0; i < children.getLength(); i++ )\n+            {\n+                Node child = children.item( i );\n+                if ( child.getNodeType() == Node.TEXT_NODE || child.getNodeType() == Node.CDATA_SECTION_NODE )\n+                {\n+                    buffer.append( child.getNodeValue() );\n+                }\n+            }\n+        }\n+        return buffer.toString();\n+    }\n+\n     /**\n      * Gets the singular form of the specified (English) plural form. For example:\n      * ", "filename": "maven-ant-plugin/src/main/java/org/apache/maven/plugin/ant/AntBuildWriterUtil.java"}, {"additions": 11, "raw_url": "https://github.com/apache/maven-plugins/raw/303c53f4e9851a3f0eb081b8981c4fbae2a56c37/maven-ant-plugin/src/test/java/org/apache/maven/plugin/ant/AntBuildWriterUtilTest.java", "blob_url": "https://github.com/apache/maven-plugins/blob/303c53f4e9851a3f0eb081b8981c4fbae2a56c37/maven-ant-plugin/src/test/java/org/apache/maven/plugin/ant/AntBuildWriterUtilTest.java", "sha": "e1b7cb70eec63a190688a2fe34e5078f8e79bc40", "changes": 11, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/maven-plugins/contents/maven-ant-plugin/src/test/java/org/apache/maven/plugin/ant/AntBuildWriterUtilTest.java?ref=303c53f4e9851a3f0eb081b8981c4fbae2a56c37", "patch": "@@ -21,6 +21,7 @@\n \n import java.io.File;\n import java.io.StringWriter;\n+import java.util.Map;\n \n import org.apache.maven.embedder.MavenEmbedder;\n import org.apache.maven.embedder.MavenEmbedderConsoleLogger;\n@@ -164,6 +165,16 @@ public void testGetMavenJavadocPluginConfiguration()\n         assertNotNull( AntBuildWriterUtil.getMavenJavadocPluginOptions( project, \"docletArtifacts\", null ) );\n         assertEquals( AntBuildWriterUtil.getMavenJavadocPluginOptions( project, \"docletArtifacts\", null ).length, 2 );\n \n+        Map[] options = AntBuildWriterUtil.getMavenJavadocPluginOptions( project, \"tags\", null );\n+        assertNotNull( options );\n+        assertEquals( options.length, 1 );\n+        assertEquals( 1, options[0].size() );\n+        Map properties = (Map) options[0].get( \"tag\" );\n+        assertNotNull( properties );\n+        assertEquals( \"requirement\", properties.get( \"name\" ) );\n+        assertEquals( \"a\", properties.get( \"placement\" ) );\n+        assertEquals( \"Software Requirement:\", properties.get( \"head\" ) );\n+\n         maven.stop();\n     }\n ", "filename": "maven-ant-plugin/src/test/java/org/apache/maven/plugin/ant/AntBuildWriterUtilTest.java"}, {"additions": 7, "raw_url": "https://github.com/apache/maven-plugins/raw/303c53f4e9851a3f0eb081b8981c4fbae2a56c37/maven-ant-plugin/src/test/resources/unit/ant-javadoc-test/pom.xml", "blob_url": "https://github.com/apache/maven-plugins/blob/303c53f4e9851a3f0eb081b8981c4fbae2a56c37/maven-ant-plugin/src/test/resources/unit/ant-javadoc-test/pom.xml", "sha": "17199d7121423db816d07574264904d05470504f", "changes": 8, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/maven-plugins/contents/maven-ant-plugin/src/test/resources/unit/ant-javadoc-test/pom.xml?ref=303c53f4e9851a3f0eb081b8981c4fbae2a56c37", "patch": "@@ -111,7 +111,13 @@ under the License.\n               <version>4.5</version>\n             </docletArtifact>\n           </docletArtifacts>\n-\n+          <tags>\n+            <tag>\n+              <name>requirement</name>\n+              <placement>a</placement>\n+              <head>Software Requirement:</head>\n+            </tag>\n+          </tags>\n         </configuration>\n       </plugin>\n   </plugins>", "filename": "maven-ant-plugin/src/test/resources/unit/ant-javadoc-test/pom.xml"}], "repo": "maven-plugins"}, {"commit": "https://github.com/apache/maven-plugins/commit/ad125098b203e5c340041718a203d11ac259c17e", "parent": "https://github.com/apache/maven-plugins/commit/b611453fd913aed2c2d511a986c9f786fd1683b6", "message": "[MSHADE-21] NPE when calling mvn shade:shade\n\no Made the goal fail gracefully with a user-friendly error message\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/plugins/trunk@644068 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "maven-plugins_54", "file": [{"additions": 13, "raw_url": "https://github.com/apache/maven-plugins/raw/ad125098b203e5c340041718a203d11ac259c17e/maven-shade-plugin/src/main/java/org/apache/maven/plugins/shade/mojo/ShadeMojo.java", "blob_url": "https://github.com/apache/maven-plugins/blob/ad125098b203e5c340041718a203d11ac259c17e/maven-shade-plugin/src/main/java/org/apache/maven/plugins/shade/mojo/ShadeMojo.java", "sha": "48f40286321e571bfbf399eb38bc1466b6f40b1c", "changes": 13, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/maven-plugins/contents/maven-shade-plugin/src/main/java/org/apache/maven/plugins/shade/mojo/ShadeMojo.java?ref=ad125098b203e5c340041718a203d11ac259c17e", "patch": "@@ -239,6 +239,19 @@ public void execute()\n         Set artifactIds = new LinkedHashSet();\n         Set sourceArtifacts = new LinkedHashSet();\n \n+        if ( project.getArtifact().getFile() == null )\n+        {\n+            getLog().error( \"The project main artifact does not exist. This could have the following\" );\n+            getLog().error( \"reasons:\" );\n+            getLog().error( \"- You have invoked the goal directly from the command line. This is not\" );\n+            getLog().error( \"  supported. Please add the goal to the default lifecycle via an\" );\n+            getLog().error( \"  <execution> element in your POM and use \\\"mvn package\\\" to have it run.\" );\n+            getLog().error( \"- You have bound the goal to a lifecycle phase before \\\"package\\\". Please\" );\n+            getLog().error( \"  remove this binding from your POM such that the goal will be run in\" );\n+            getLog().error( \"  the proper phase.\" );\n+            throw new MojoExecutionException( \"Failed to create shaded artifact.\",\n+                                              new IllegalStateException( \"Project main artifact does not exist.\" ) );\n+        }\n         artifacts.add( project.getArtifact().getFile() );\n \n         if ( createSourcesJar )", "filename": "maven-shade-plugin/src/main/java/org/apache/maven/plugins/shade/mojo/ShadeMojo.java"}], "repo": "maven-plugins"}, {"commit": "https://github.com/apache/maven-plugins/commit/20b3dac4f2817451eaf86c232b92bae8f0f98daf", "parent": "https://github.com/apache/maven-plugins/commit/6a87c1bc29e42fb8760e5febd6100f71b915b6f4", "message": "- fix possible NPE when building a war project without dependency\n- upgrade to parent snapshot (temove redundant plugin declaration)\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/plugins/trunk@636544 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "maven-plugins_55", "file": [{"additions": 1, "raw_url": "https://github.com/apache/maven-plugins/raw/20b3dac4f2817451eaf86c232b92bae8f0f98daf/maven-war-plugin/pom.xml", "blob_url": "https://github.com/apache/maven-plugins/blob/20b3dac4f2817451eaf86c232b92bae8f0f98daf/maven-war-plugin/pom.xml", "sha": "07f0da078e2f6e4842d6a5514e7d10ca7808cab9", "changes": 10, "status": "modified", "deletions": 9, "contents_url": "https://api.github.com/repos/apache/maven-plugins/contents/maven-war-plugin/pom.xml?ref=20b3dac4f2817451eaf86c232b92bae8f0f98daf", "patch": "@@ -22,7 +22,7 @@ under the License.\n   <parent>\n     <artifactId>maven-plugins</artifactId>\n     <groupId>org.apache.maven.plugins</groupId>\n-    <version>10</version>\n+    <version>11-SNAPSHOT</version>\n   </parent>\n   <modelVersion>4.0.0</modelVersion>\n   <artifactId>maven-war-plugin</artifactId>\n@@ -118,14 +118,6 @@ under the License.\n     </dependency>\n   </dependencies>\n   <build>\n-    <pluginManagement>\n-       <plugins>\n-         <plugin>\n-           <artifactId>maven-surefire-plugin</artifactId>\n-           <version>2.4.1</version>\n-         </plugin>\n-       </plugins>\n-    </pluginManagement>\n     <plugins>\n       <plugin>\n         <groupId>org.apache.maven.plugins</groupId>", "filename": "maven-war-plugin/pom.xml"}, {"additions": 2, "raw_url": "https://github.com/apache/maven-plugins/raw/20b3dac4f2817451eaf86c232b92bae8f0f98daf/maven-war-plugin/src/main/java/org/apache/maven/plugin/war/util/WebappStructure.java", "blob_url": "https://github.com/apache/maven-plugins/blob/20b3dac4f2817451eaf86c232b92bae8f0f98daf/maven-war-plugin/src/main/java/org/apache/maven/plugin/war/util/WebappStructure.java", "sha": "775c57de863f763948213f0a147054ff3a135a2c", "changes": 3, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/maven-plugins/contents/maven-war-plugin/src/main/java/org/apache/maven/plugin/war/util/WebappStructure.java?ref=20b3dac4f2817451eaf86c232b92bae8f0f98daf", "patch": "@@ -25,6 +25,7 @@\n \n import java.io.IOException;\n import java.util.ArrayList;\n+import java.util.Collections;\n import java.util.HashMap;\n import java.util.Iterator;\n import java.util.List;\n@@ -447,7 +448,7 @@ private List createDependenciesInfoList( List dependencies )\n     {\n         if ( dependencies == null )\n         {\n-            return null;\n+            return Collections.EMPTY_LIST;\n         }\n         final List result = new ArrayList();\n         final Iterator it = dependencies.iterator();", "filename": "maven-war-plugin/src/main/java/org/apache/maven/plugin/war/util/WebappStructure.java"}], "repo": "maven-plugins"}, {"commit": "https://github.com/apache/maven-plugins/commit/bec797636e724fea942bcf1ff53ef0907aed41b3", "parent": "https://github.com/apache/maven-plugins/commit/5ddb9f686253a3f5f5794cc1c84a2071b1de6890", "message": "[MASSEMBLY-277] Fixing potential NPE in AddFileSetsTask.\nSubmitted by: Sejal Patel\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/plugins/trunk@628942 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "maven-plugins_56", "file": [{"additions": 2, "raw_url": "https://github.com/apache/maven-plugins/raw/bec797636e724fea942bcf1ff53ef0907aed41b3/maven-assembly-plugin/src/main/java/org/apache/maven/plugin/assembly/archive/task/AddFileSetsTask.java", "blob_url": "https://github.com/apache/maven-plugins/blob/bec797636e724fea942bcf1ff53ef0907aed41b3/maven-assembly-plugin/src/main/java/org/apache/maven/plugin/assembly/archive/task/AddFileSetsTask.java", "sha": "518f4c85340bf7764715eed21557011ed12f16f0", "changes": 4, "status": "modified", "deletions": 2, "contents_url": "https://api.github.com/repos/apache/maven-plugins/contents/maven-assembly-plugin/src/main/java/org/apache/maven/plugin/assembly/archive/task/AddFileSetsTask.java?ref=bec797636e724fea942bcf1ff53ef0907aed41b3", "patch": "@@ -97,13 +97,13 @@ protected void addFileSet( FileSet fileSet, Archiver archiver, AssemblerConfigur\n \n         FileSetFormatter fileSetFormatter = new FileSetFormatter( configSource, logger );\n \n-        File basedir = project.getBasedir();\n-\n         if ( project == null )\n         {\n             project = configSource.getProject();\n         }\n \n+        File basedir = project.getBasedir();\n+\n         String destDirectory = fileSet.getOutputDirectory();\n \n         if ( destDirectory == null )", "filename": "maven-assembly-plugin/src/main/java/org/apache/maven/plugin/assembly/archive/task/AddFileSetsTask.java"}], "repo": "maven-plugins"}, {"commit": "https://github.com/apache/maven-plugins/commit/c913d27773db87dce415a9ec00b66d6913ed9a17", "parent": "https://github.com/apache/maven-plugins/commit/814206b83314a626537bb3f1c19db716ceab8046", "message": "MJAVADOC-139: NPE out of AbstractJavadocMojo::getSourcePaths() on multimodule project using aggregate\n\no as suggested, added subProject.getExecutionProject() != null condition\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/plugins/trunk@562710 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "maven-plugins_57", "file": [{"additions": 7, "raw_url": "https://github.com/apache/maven-plugins/raw/c913d27773db87dce415a9ec00b66d6913ed9a17/maven-javadoc-plugin/src/main/java/org/apache/maven/plugin/javadoc/AbstractJavadocMojo.java", "blob_url": "https://github.com/apache/maven-plugins/blob/c913d27773db87dce415a9ec00b66d6913ed9a17/maven-javadoc-plugin/src/main/java/org/apache/maven/plugin/javadoc/AbstractJavadocMojo.java", "sha": "3cd10b01d600c0d3514c39fa017ac2374be16f01", "changes": 11, "status": "modified", "deletions": 4, "contents_url": "https://api.github.com/repos/apache/maven-plugins/contents/maven-javadoc-plugin/src/main/java/org/apache/maven/plugin/javadoc/AbstractJavadocMojo.java?ref=c913d27773db87dce415a9ec00b66d6913ed9a17", "patch": "@@ -1502,11 +1502,14 @@ protected List getSourcePaths()\n                             sourcePaths.addAll( sourceRoots );\n                         }\n \n-                        String javadocDirRelative = PathUtils.toRelative( project.getBasedir(), getJavadocDirectory().getAbsolutePath() );\n-                        File javadocDir = new File( subProject.getExecutionProject().getBasedir(), javadocDirRelative );\n-                        if ( javadocDir.exists() && javadocDir.isDirectory() )\n+                        if ( subProject.getExecutionProject() != null )\n                         {\n-                            sourcePaths.add( javadocDir.getAbsolutePath() );\n+                            String javadocDirRelative = PathUtils.toRelative( project.getBasedir(), getJavadocDirectory().getAbsolutePath() );\n+                            File javadocDir = new File( subProject.getExecutionProject().getBasedir(), javadocDirRelative );\n+                            if ( javadocDir.exists() && javadocDir.isDirectory() )\n+                            {\n+                                sourcePaths.add( javadocDir.getAbsolutePath() );\n+                            }\n                         }\n                     }\n                 }", "filename": "maven-javadoc-plugin/src/main/java/org/apache/maven/plugin/javadoc/AbstractJavadocMojo.java"}], "repo": "maven-plugins"}, {"commit": "https://github.com/apache/maven-plugins/commit/0c179ba3d7268b91bfb12cb164a9573c2296de91", "parent": "https://github.com/apache/maven-plugins/commit/efa28cc3e78ace01fbb1dc07d4cfe8acbcefc682", "message": "[MCHANGES-70] NPE if the version attribute is not set properly in the changes.xml file\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/plugins/trunk@554276 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "maven-plugins_58", "file": [{"additions": 1, "raw_url": "https://github.com/apache/maven-plugins/raw/0c179ba3d7268b91bfb12cb164a9573c2296de91/maven-changes-plugin/src/main/java/org/apache/maven/plugin/announcement/AnnouncementMojo.java", "blob_url": "https://github.com/apache/maven-plugins/blob/0c179ba3d7268b91bfb12cb164a9573c2296de91/maven-changes-plugin/src/main/java/org/apache/maven/plugin/announcement/AnnouncementMojo.java", "sha": "f51628541a1f920a895078be62fe4245e3d31622", "changes": 2, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/maven-plugins/contents/maven-changes-plugin/src/main/java/org/apache/maven/plugin/announcement/AnnouncementMojo.java?ref=0c179ba3d7268b91bfb12cb164a9573c2296de91", "patch": "@@ -372,7 +372,7 @@ public Release getLatestRelease( List releases )\n         {\n             release = (Release) releases.get( i );\n \n-            if ( release.getVersion().equals( pomVersion ) )\n+            if ( release.getVersion() != null && release.getVersion().equals( pomVersion ) )\n             {\n                 isFound = true;\n                 return release;", "filename": "maven-changes-plugin/src/main/java/org/apache/maven/plugin/announcement/AnnouncementMojo.java"}], "repo": "maven-plugins"}, {"commit": "https://github.com/apache/maven-plugins/commit/5099fa213946a6f473008519731bef7e8a3cee79", "parent": "https://github.com/apache/maven-plugins/commit/1a6af4d2695e4a90ca15b9e2c5edd4ad2fee484b", "message": "mdep-67 - fixed npe and added new use case in finding missing version.\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/plugins/trunk@517085 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "maven-plugins_59", "file": [{"additions": 43, "raw_url": "https://github.com/apache/maven-plugins/raw/5099fa213946a6f473008519731bef7e8a3cee79/maven-dependency-plugin/src/it/mdep-67/pom.xml", "blob_url": "https://github.com/apache/maven-plugins/blob/5099fa213946a6f473008519731bef7e8a3cee79/maven-dependency-plugin/src/it/mdep-67/pom.xml", "sha": "8673cb02b11e72483177165427e11ad92f272ba6", "changes": 43, "status": "added", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/maven-plugins/contents/maven-dependency-plugin/src/it/mdep-67/pom.xml?ref=5099fa213946a6f473008519731bef7e8a3cee79", "patch": "@@ -0,0 +1,43 @@\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd\">\r\n+\t<modelVersion>4.0.0</modelVersion>\r\n+\t<name>Copy Dependencies IT</name>\r\n+\t<groupId>org.apache.maven.plugins.maven-dependency-plugin-it</groupId>\r\n+\t<artifactId>mdep-67-it</artifactId>\r\n+\t<version>1</version>\r\n+\t<packaging>jar</packaging>\r\n+\t<dependencies>\r\n+\t\t<dependency>\r\n+\t\t\t<groupId>junit</groupId>\r\n+\t\t\t<artifactId>junit</artifactId>\r\n+\t\t\t<version>4.1</version>\r\n+\t\t</dependency>\r\n+\t</dependencies>\r\n+\t<build>\r\n+\t\t<defaultGoal>generate-sources</defaultGoal>\r\n+\t\t<plugins>\r\n+\t\t\t<plugin>\r\n+         \t\t<groupId>org.apache.maven.plugins</groupId>\r\n+          \t\t\t<artifactId>maven-dependency-plugin</artifactId>\r\n+\t\t              <executions>\r\n+\t\t                    <execution>\r\n+\t\t                        <id>copy</id>\r\n+\t\t                        <phase>compile</phase>\r\n+\t\t                        <goals>\r\n+\t\t                            <goal>copy</goal>\r\n+\t\t                        </goals>\r\n+\t\t                        <configuration>\r\n+\t\t                            <artifactItems>\r\n+\t\t                                <artifactItem>\r\n+\t\t                                    <groupId>junit</groupId>\r\n+\t\t                                    <artifactId>junit</artifactId>\r\n+\t\t                                    <type>java-source</type>\r\n+\t\t                                    <outputDirectory>${project.build.directory}/junit-sources</outputDirectory>                                    \r\n+\t\t                                </artifactItem>\r\n+\t\t                            </artifactItems>\r\n+\t\t                        </configuration>\r\n+\t\t                    </execution>\r\n+\t\t                </executions>\r\n+            \t\t</plugin>\r\n+\t\t</plugins>\r\n+\t</build>\r\n+</project>\r", "filename": "maven-dependency-plugin/src/it/mdep-67/pom.xml"}, {"additions": 18, "raw_url": "https://github.com/apache/maven-plugins/raw/5099fa213946a6f473008519731bef7e8a3cee79/maven-dependency-plugin/src/main/java/org/apache/maven/plugin/dependency/fromConfiguration/AbstractFromConfigurationMojo.java", "blob_url": "https://github.com/apache/maven-plugins/blob/5099fa213946a6f473008519731bef7e8a3cee79/maven-dependency-plugin/src/main/java/org/apache/maven/plugin/dependency/fromConfiguration/AbstractFromConfigurationMojo.java", "sha": "fc0b50cf918e15a94b79d96b99579e49d8d1277b", "changes": 25, "status": "modified", "deletions": 7, "contents_url": "https://api.github.com/repos/apache/maven-plugins/contents/maven-dependency-plugin/src/main/java/org/apache/maven/plugin/dependency/fromConfiguration/AbstractFromConfigurationMojo.java?ref=5099fa213946a6f473008519731bef7e8a3cee79", "patch": "@@ -195,7 +195,8 @@ protected Artifact getArtifact( ArtifactItem artifactItem )\n     {\n         Artifact artifact;\n \n-  //      Map managedVersions = createManagedVersionMap( factory, project.getId(), project.getDependencyManagement() );\n+        // Map managedVersions = createManagedVersionMap( factory,\n+        // project.getId(), project.getDependencyManagement() );\n         VersionRange vr;\n         try\n         {\n@@ -256,15 +257,21 @@ protected Artifact getArtifact( ArtifactItem artifactItem )\n      * Tries to find missing version from dependancy list and dependency\n      * management. If found, the artifact is updated with the correct version.\n      * \n+     * It will first look for an exact match on artifactId/groupId/classifier/type and if it doesn't find\n+     * a match, it will try again looking for artifactId and groupId only.\n      * @param artifact\n      *            representing configured file.\n      * @throws MojoExecutionException\n      */\n     private void fillMissingArtifactVersion( ArtifactItem artifact )\n         throws MojoExecutionException\n     {\n-        if ( !findDependencyVersion( artifact, project.getDependencies() )\n-            && !findDependencyVersion( artifact, project.getDependencyManagement().getDependencies() ) )\n+        if ( !findDependencyVersion( artifact, project.getDependencies(), false )\n+            && ( project.getDependencyManagement() == null || !findDependencyVersion( artifact, project\n+                .getDependencyManagement().getDependencies(), false ) )\n+            && !findDependencyVersion( artifact, project.getDependencies(), true )\n+            && ( project.getDependencyManagement() == null || !findDependencyVersion( artifact, project\n+                .getDependencyManagement().getDependencies(), true ) ) )\n         {\n             throw new MojoExecutionException( \"Unable to find artifact version of \" + artifact.getGroupId() + \":\"\n                 + artifact.getArtifactId() + \" in either dependency list or in project's dependency management.\" );\n@@ -279,18 +286,21 @@ private void fillMissingArtifactVersion( ArtifactItem artifact )\n      *            representing configured file.\n      * @param list\n      *            list of dependencies to search.\n+     * @param looseMatch\n+     *            only look at artifactId and groupId\n      * @return the found dependency\n      */\n-    private boolean findDependencyVersion( ArtifactItem artifact, List list )\n+    private boolean findDependencyVersion( ArtifactItem artifact, List list, boolean looseMatch )\n     {\n         boolean result = false;\n+\n         for ( int i = 0; i < list.size(); i++ )\n         {\n             Dependency dependency = (Dependency) list.get( i );\n             if ( StringUtils.equals( dependency.getArtifactId(), artifact.getArtifactId() )\n                 && StringUtils.equals( dependency.getGroupId(), artifact.getGroupId() )\n-                && StringUtils.equals( dependency.getClassifier(), artifact.getClassifier() )\n-                && StringUtils.equals( dependency.getType(), artifact.getType() ) )\n+                && ( looseMatch || StringUtils.equals( dependency.getClassifier(), artifact.getClassifier() ) )\n+                && ( looseMatch || StringUtils.equals( dependency.getType(), artifact.getType() ) ) )\n             {\n \n                 artifact.setVersion( dependency.getVersion() );\n@@ -299,11 +309,12 @@ private boolean findDependencyVersion( ArtifactItem artifact, List list )\n                 break;\n             }\n         }\n+\n         return result;\n     }\n \n     private Map createManagedVersionMap( ArtifactFactory artifactFactory, String projectId,\n-                                        DependencyManagement dependencyManagement )\n+                                         DependencyManagement dependencyManagement )\n         throws MojoExecutionException\n     {\n         Map map;", "filename": "maven-dependency-plugin/src/main/java/org/apache/maven/plugin/dependency/fromConfiguration/AbstractFromConfigurationMojo.java"}, {"additions": 61, "raw_url": "https://github.com/apache/maven-plugins/raw/5099fa213946a6f473008519731bef7e8a3cee79/maven-dependency-plugin/src/test/java/org/apache/maven/plugin/dependency/fromConfiguration/TestCopyMojo.java", "blob_url": "https://github.com/apache/maven-plugins/blob/5099fa213946a6f473008519731bef7e8a3cee79/maven-dependency-plugin/src/test/java/org/apache/maven/plugin/dependency/fromConfiguration/TestCopyMojo.java", "sha": "ed209c93c81c011b5898445b16a6e8033176acad", "changes": 61, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/maven-plugins/contents/maven-dependency-plugin/src/test/java/org/apache/maven/plugin/dependency/fromConfiguration/TestCopyMojo.java?ref=5099fa213946a6f473008519731bef7e8a3cee79", "patch": "@@ -235,6 +235,7 @@ public List getDependencyList( ArtifactItem item )\n \r\n         return list;\r\n     }\r\n+   \r\n \r\n     public void testMissingVersionFromDependencies()\r\n         throws MojoExecutionException\r\n@@ -258,6 +259,32 @@ public void testMissingVersionFromDependencies()\n         assertEquals( \"2.0-SNAPSHOT\", item.getVersion() );\r\n     }\r\n \r\n+    public void testMissingVersionFromDependenciesLooseMatch()\r\n+    throws MojoExecutionException\r\n+{\r\n+    ArtifactItem item = new ArtifactItem();\r\n+\r\n+    item.setArtifactId( \"artifactId\" );\r\n+    item.setClassifier( \"\" );\r\n+    item.setGroupId( \"groupId\" );\r\n+    item.setType( \"type\" );\r\n+\r\n+    MavenProject project = mojo.getProject();\r\n+    project.setDependencies( getDependencyList( item ) );\r\n+    \r\n+    item.setClassifier( \"sources\" );\r\n+    item.setType( \"jar\" );\r\n+    \r\n+    ArrayList list = new ArrayList();\r\n+    list.add( item );\r\n+    mojo.setArtifactItems( list );\r\n+    \r\n+    mojo.execute();\r\n+    this.assertFileExists( item, true );\r\n+    assertEquals( \"2.1\", item.getVersion() );\r\n+}\r\n+\r\n+    \r\n     public void testMissingVersionFromDependenciesWithClassifier()\r\n         throws MojoExecutionException\r\n     {\r\n@@ -336,6 +363,40 @@ public void testMissingVersionFromDependencyMgt()\n         assertEquals( \"3.0-SNAPSHOT\", item.getVersion() );\r\n     }\r\n \r\n+    public void testMissingVersionFromDependencyMgtLooseMatch()\r\n+    throws MojoExecutionException\r\n+{\r\n+    ArtifactItem item = new ArtifactItem();\r\n+\r\n+    item.setArtifactId( \"artifactId\" );\r\n+    item.setClassifier( \"\" );\r\n+    item.setGroupId( \"groupId\" );\r\n+    item.setType( \"type\" );\r\n+\r\n+    MavenProject project = mojo.getProject();\r\n+    project.setDependencies( getDependencyList( item ) );\r\n+\r\n+    item = new ArtifactItem();\r\n+\r\n+    item.setArtifactId( \"artifactId-2\" );\r\n+    item.setClassifier( \"\" );\r\n+    item.setGroupId( \"groupId\" );\r\n+    item.setType( \"type\" );\r\n+\r\n+    ArrayList list = new ArrayList();\r\n+    list.add( item );\r\n+\r\n+    mojo.setArtifactItems( list );\r\n+\r\n+    project.getDependencyManagement().setDependencies( getDependencyMgtList( item ) );\r\n+\r\n+    item.setType( \"jar\" );\r\n+    mojo.execute();\r\n+\r\n+    this.assertFileExists( item, true );\r\n+    assertEquals( \"3.1\", item.getVersion() );\r\n+}\r\n+    \r\n     public void testMissingVersionFromDependencyMgtWithClassifier()\r\n         throws MojoExecutionException\r\n     {\r", "filename": "maven-dependency-plugin/src/test/java/org/apache/maven/plugin/dependency/fromConfiguration/TestCopyMojo.java"}], "repo": "maven-plugins"}, {"commit": "https://github.com/apache/maven-plugins/commit/752efed2db6c1fee64d78a52c5d3842a5726dd2c", "parent": "https://github.com/apache/maven-plugins/commit/973259529c5a0f5a9320a8e45acf42f827484287", "message": "added $ back into the expressions, was throwing NPE in the test cases on the jarArchiver\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/plugins/trunk@501627 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "maven-plugins_60", "file": [{"additions": 3, "raw_url": "https://github.com/apache/maven-plugins/raw/752efed2db6c1fee64d78a52c5d3842a5726dd2c/maven-repository-plugin/src/main/java/org/apache/maven/plugins/repository/BundleCreateMojo.java", "blob_url": "https://github.com/apache/maven-plugins/blob/752efed2db6c1fee64d78a52c5d3842a5726dd2c/maven-repository-plugin/src/main/java/org/apache/maven/plugins/repository/BundleCreateMojo.java", "sha": "0facae703f1d28b5c756532ac494276f3312cd03", "changes": 6, "status": "modified", "deletions": 3, "contents_url": "https://api.github.com/repos/apache/maven-plugins/contents/maven-repository-plugin/src/main/java/org/apache/maven/plugins/repository/BundleCreateMojo.java?ref=752efed2db6c1fee64d78a52c5d3842a5726dd2c", "patch": "@@ -18,15 +18,15 @@\n  */\n package org.apache.maven.plugins.repository;\n \n-import java.io.File;\n-\n import org.apache.maven.artifact.handler.manager.ArtifactHandlerManager;\n import org.apache.maven.plugin.AbstractMojo;\n import org.apache.maven.plugin.MojoExecutionException;\n import org.apache.maven.project.MavenProject;\n import org.codehaus.plexus.archiver.jar.JarArchiver;\n import org.codehaus.plexus.util.StringUtils;\n \n+import java.io.File;\n+\n /**\n  * Goal which creates an upload bundle for a project built with maven.\n  *\n@@ -53,7 +53,7 @@\n \n     /**\n      * Jar archiver.\n-     * @parameter expression=\"{component.org.codehaus.plexus.archiver.Archiver#jar}\"\n+     * @parameter expression=\"${component.org.codehaus.plexus.archiver.Archiver#jar}\"\n      * @required\n      * @readonly\n      */", "filename": "maven-repository-plugin/src/main/java/org/apache/maven/plugins/repository/BundleCreateMojo.java"}, {"additions": 1, "raw_url": "https://github.com/apache/maven-plugins/raw/752efed2db6c1fee64d78a52c5d3842a5726dd2c/maven-repository-plugin/src/main/java/org/apache/maven/plugins/repository/BundlePackMojo.java", "blob_url": "https://github.com/apache/maven-plugins/blob/752efed2db6c1fee64d78a52c5d3842a5726dd2c/maven-repository-plugin/src/main/java/org/apache/maven/plugins/repository/BundlePackMojo.java", "sha": "20c7e70730bef30553f59d109fa61a62542c3421", "changes": 2, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/maven-plugins/contents/maven-repository-plugin/src/main/java/org/apache/maven/plugins/repository/BundlePackMojo.java?ref=752efed2db6c1fee64d78a52c5d3842a5726dd2c", "patch": "@@ -58,7 +58,7 @@\n \n     /**\n      * Jar archiver.\n-     * @parameter expression=\"{component.org.codehaus.plexus.archiver.Archiver#jar}\"\n+     * @parameter expression=\"${component.org.codehaus.plexus.archiver.Archiver#jar}\"\n      * @required\n      * @readonly\n      */", "filename": "maven-repository-plugin/src/main/java/org/apache/maven/plugins/repository/BundlePackMojo.java"}], "repo": "maven-plugins"}, {"commit": "https://github.com/apache/maven-plugins/commit/3414c3966fbc6c238923f0787c58e7230536a188", "parent": "https://github.com/apache/maven-plugins/commit/36f6527749d465948a8f9c89ed343e67fb62225c", "message": "- fix NPE in stripQualifier when version range is null\n- add a new \"forceQualifier\" parameter\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/plugins/trunk@479358 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "maven-plugins_61", "file": [{"additions": 2, "raw_url": "https://github.com/apache/maven-plugins/raw/3414c3966fbc6c238923f0787c58e7230536a188/maven-eclipse-plugin/src/main/java/org/apache/maven/plugin/eclipse/InstallPluginsMojo.java", "blob_url": "https://github.com/apache/maven-plugins/blob/3414c3966fbc6c238923f0787c58e7230536a188/maven-eclipse-plugin/src/main/java/org/apache/maven/plugin/eclipse/InstallPluginsMojo.java", "sha": "9128b71d08564a99699c920d0ac764aac152cddd", "changes": 3, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/maven-plugins/contents/maven-eclipse-plugin/src/main/java/org/apache/maven/plugin/eclipse/InstallPluginsMojo.java?ref=3414c3966fbc6c238923f0787c58e7230536a188", "patch": "@@ -251,7 +251,8 @@ private void install( Artifact artifact, MavenProject project )\n         Attributes attributes = null;\n         try\n         {\n-            JarFile jar = new JarFile( artifact.getFile() );\n+            // don't verify, plugins zipped by eclipse:make-artifacts could have a bad signature\n+            JarFile jar = new JarFile( artifact.getFile(), false );\n             Manifest manifest = jar.getManifest();\n             attributes = manifest.getMainAttributes();\n         }", "filename": "maven-eclipse-plugin/src/main/java/org/apache/maven/plugin/eclipse/InstallPluginsMojo.java"}, {"additions": 26, "raw_url": "https://github.com/apache/maven-plugins/raw/3414c3966fbc6c238923f0787c58e7230536a188/maven-eclipse-plugin/src/main/java/org/apache/maven/plugin/eclipse/MakeArtifactsMojo.java", "blob_url": "https://github.com/apache/maven-plugins/blob/3414c3966fbc6c238923f0787c58e7230536a188/maven-eclipse-plugin/src/main/java/org/apache/maven/plugin/eclipse/MakeArtifactsMojo.java", "sha": "6bca00e0efd7f87822c4287a7bb94b665c6e891b", "changes": 33, "status": "modified", "deletions": 7, "contents_url": "https://api.github.com/repos/apache/maven-plugins/contents/maven-eclipse-plugin/src/main/java/org/apache/maven/plugin/eclipse/MakeArtifactsMojo.java?ref=3414c3966fbc6c238923f0787c58e7230536a188", "patch": "@@ -142,6 +142,15 @@\n      */\n     private boolean stripQualifier;\n \n+    /**\n+     * Default token to use as a qualifier. Tipically qualifiers for plugins in the same eclipse build are different.\n+     * This parameter can be used to \"align\" qualifiers so that all the plugins coming from the same eclipse build can\n+     * be easily identified. For example, setting this to \"M3\" will force the pluging versions to be \"*.*.*.M3\"\n+     * \n+     * @parameter expression=\"${forcedQualifier}\"\n+     */\n+    private String forcedQualifier;\n+\n     /**\n      * Specifies a remote repository to which generated artifacts should be deployed to. If this property is specified,\n      * artifacts are also deployed to the remote repo.\n@@ -259,7 +268,8 @@ private void processSingleFile( File file, ArtifactRepository remoteRepo )\n         {\n             try\n             {\n-                JarFile jar = new JarFile( file );\n+                // don't verify, jars created from unzipped plugin could have a bad signature\n+                JarFile jar = new JarFile( file, false );\n                 manifest = jar.getManifest();\n                 pluginProperties = loadPluginProperties( jar );\n             }\n@@ -300,7 +310,11 @@ private void processSingleFile( File file, ArtifactRepository remoteRepo )\n             return;\n         }\n \n-        if ( stripQualifier && StringUtils.countMatches( version, \".\" ) > 2 )\n+        if ( StringUtils.isNotEmpty( forcedQualifier ) && StringUtils.countMatches( version, \".\" ) > 2 )\n+        {\n+            version = StringUtils.substring( version, 0, version.lastIndexOf( \".\" ) ) + \".\" + forcedQualifier;\n+        }\n+        else if ( stripQualifier && StringUtils.countMatches( version, \".\" ) > 2 )\n         {\n             version = StringUtils.substring( version, 0, version.lastIndexOf( \".\" ) );\n         }\n@@ -538,16 +552,15 @@ String createGroupId( String artifactId )\n                 }\n             }\n \n-            if ( addQualifier )\n-            {\n-                version = addQualifierToVersionsInRange( version );\n-            }\n-\n             if ( version == null )\n             {\n                 getLog().info( \"Missing version for artifact \" + artifactId + \", assuming any version > 0\" );\n                 version = \"[0.0.0.0,)\";\n             }\n+            else if ( addQualifier )\n+            {\n+                version = addQualifierToVersionsInRange( version );\n+            }\n \n             Dependency dep = new Dependency();\n             dep.setArtifactId( artifactId );\n@@ -572,6 +585,12 @@ String createGroupId( String artifactId )\n      */\n     protected String addQualifierToVersionsInRange( String versionRange )\n     {\n+        // should not be called with a null versionRange, but a check doesn't hurt...\n+        if ( versionRange == null )\n+        {\n+            return null;\n+        }\n+\n         StringBuffer newVersionRange = new StringBuffer();\n \n         Matcher matcher = VERSION_PATTERN.matcher( versionRange );", "filename": "maven-eclipse-plugin/src/main/java/org/apache/maven/plugin/eclipse/MakeArtifactsMojo.java"}], "repo": "maven-plugins"}, {"commit": "https://github.com/apache/maven-plugins/commit/2573d80ea31e27753b63b6d140ec683b94cbd6a6", "parent": "https://github.com/apache/maven-plugins/commit/da648b2730b87c530d9f3cab560eb4bbe249543d", "message": "PR: MECLIPSE-153\n\nFix NPE when jar doesn't have a manifest.\n(Technically it isn't a JAR then, but hey..)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/plugins/trunk@446618 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "maven-plugins_62", "file": [{"additions": 6, "raw_url": "https://github.com/apache/maven-plugins/raw/2573d80ea31e27753b63b6d140ec683b94cbd6a6/maven-eclipse-plugin/src/main/java/org/apache/maven/plugin/eclipse/MakeArtifactsMojo.java", "blob_url": "https://github.com/apache/maven-plugins/blob/2573d80ea31e27753b63b6d140ec683b94cbd6a6/maven-eclipse-plugin/src/main/java/org/apache/maven/plugin/eclipse/MakeArtifactsMojo.java", "sha": "1ab37c6a154e4194a7a6e29da2fa6040d5f25391", "changes": 6, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/maven-plugins/contents/maven-eclipse-plugin/src/main/java/org/apache/maven/plugin/eclipse/MakeArtifactsMojo.java?ref=2573d80ea31e27753b63b6d140ec683b94cbd6a6", "patch": "@@ -163,6 +163,12 @@ public boolean accept( File dir, String name )\n                 throw new MojoFailureException( \"Unable to read manifest for jar \" + file.getAbsolutePath() );\n             }\n \n+            if ( manifest == null )\n+            {\n+                getLog().warn( \"Jar \" + file.getAbsolutePath() + \" does not have a manifest; skipping..\" );\n+                continue;\n+            }\n+\n             Attributes manifestEntries = manifest.getMainAttributes();\n \n             String artifactId = manifestEntries.getValue( \"Bundle-SymbolicName\" );", "filename": "maven-eclipse-plugin/src/main/java/org/apache/maven/plugin/eclipse/MakeArtifactsMojo.java"}], "repo": "maven-plugins"}, {"commit": "https://github.com/apache/maven-plugins/commit/0fe3008347ca42d3768ccf6023eae378ae1d3d9c", "parent": "https://github.com/apache/maven-plugins/commit/39a8a7c9b16d8bbf744df0ab8ebbda18f57260ba", "message": "MEAR-8: Fixed NPE when no security configuration element is set.\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/plugins/trunk@394306 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "maven-plugins_63", "file": [{"additions": 6, "raw_url": "https://github.com/apache/maven-plugins/raw/0fe3008347ca42d3768ccf6023eae378ae1d3d9c/maven-ear-plugin/src/main/java/org/apache/maven/plugin/ear/GenerateApplicationXmlMojo.java", "blob_url": "https://github.com/apache/maven-plugins/blob/0fe3008347ca42d3768ccf6023eae378ae1d3d9c/maven-ear-plugin/src/main/java/org/apache/maven/plugin/ear/GenerateApplicationXmlMojo.java", "sha": "859e487c4264fcfa0f1e4e0749528f5effaf4972", "changes": 7, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/maven-plugins/contents/maven-ear-plugin/src/main/java/org/apache/maven/plugin/ear/GenerateApplicationXmlMojo.java?ref=0fe3008347ca42d3768ccf6023eae378ae1d3d9c", "patch": "@@ -177,10 +177,15 @@ protected void generateDeploymentDescriptor()\n     private List buildSecurityRoles()\n         throws EarPluginException\n     {\n+        final List result = new ArrayList();\n+        if ( security == null )\n+        {\n+            return result;\n+        }\n         try\n         {\n             final PlexusConfiguration[] securityRoles = security.getChildren( SecurityRole.SECURITY_ROLE );\n-            final List result = new ArrayList();\n+\n             for ( int i = 0; i < securityRoles.length; i++ )\n             {\n                 PlexusConfiguration securityRole = securityRoles[i];", "filename": "maven-ear-plugin/src/main/java/org/apache/maven/plugin/ear/GenerateApplicationXmlMojo.java"}], "repo": "maven-plugins"}, {"commit": "https://github.com/apache/maven-plugins/commit/09542b5f09edf3bd05657be31a045477652988ec", "parent": "https://github.com/apache/maven-plugins/commit/b4d7ced32423d45a1241b18a144fa8c5ed1e33d0", "message": "o let the debug line come out first before we try to set the property so we can see the NPE\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/plugins/trunk@381547 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "maven-plugins_64", "file": [{"additions": 2, "raw_url": "https://github.com/apache/maven-plugins/raw/09542b5f09edf3bd05657be31a045477652988ec/maven-surefire-plugin/src/main/java/org/apache/maven/test/SurefirePlugin.java", "blob_url": "https://github.com/apache/maven-plugins/blob/09542b5f09edf3bd05657be31a045477652988ec/maven-surefire-plugin/src/main/java/org/apache/maven/test/SurefirePlugin.java", "sha": "599e60e82d17ffe958ecb613f2fd0c93de34c825", "changes": 4, "status": "modified", "deletions": 2, "contents_url": "https://api.github.com/repos/apache/maven-plugins/contents/maven-surefire-plugin/src/main/java/org/apache/maven/test/SurefirePlugin.java?ref=09542b5f09edf3bd05657be31a045477652988ec", "patch": "@@ -405,9 +405,9 @@ protected void processSystemProperties()\n \n                 String value = (String) systemProperties.get( key );\n \n-                System.setProperty( key, value ); \n-\n                 getLog().debug( \"Setting system property [\" + key + \"]=[\" + value + \"]\" );\n+                \n+                System.setProperty( key, value ); \n             }\n         }\n     }", "filename": "maven-surefire-plugin/src/main/java/org/apache/maven/test/SurefirePlugin.java"}], "repo": "maven-plugins"}, {"commit": "https://github.com/apache/maven-plugins/commit/c61ea0b2befc5b838018e8bf2429dd01a3f81a4c", "parent": "https://github.com/apache/maven-plugins/commit/4d96f438f399ab55d7d565d6cdacaf40b1e58394", "message": "Fixed NPE when pom.xml doesn't define a project <url>.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/plugins/trunk@369197 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "maven-plugins_65", "file": [{"additions": 3, "raw_url": "https://github.com/apache/maven-plugins/raw/c61ea0b2befc5b838018e8bf2429dd01a3f81a4c/maven-site-plugin/src/main/java/org/apache/maven/plugins/site/SiteMojo.java", "blob_url": "https://github.com/apache/maven-plugins/blob/c61ea0b2befc5b838018e8bf2429dd01a3f81a4c/maven-site-plugin/src/main/java/org/apache/maven/plugins/site/SiteMojo.java", "sha": "0c49f8e366cf24363963e904fefb4ba5beedaeb7", "changes": 3, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/maven-plugins/contents/maven-site-plugin/src/main/java/org/apache/maven/plugins/site/SiteMojo.java?ref=c61ea0b2befc5b838018e8bf2429dd01a3f81a4c", "patch": "@@ -498,6 +498,9 @@ private DecorationModel getDecorationModel( List reports, Locale locale, List pr\n \n         DecorationModel decorationModel = getDecorationModel( project, locale, props );\n \n+        if ( project.getUrl() == null )\n+                throw new MojoExecutionException( \"Project \" + project.getId() + \" has no Url defined\" );\n+\n         assembler.resolvePaths( decorationModel, project.getUrl() );\n \n         return decorationModel;", "filename": "maven-site-plugin/src/main/java/org/apache/maven/plugins/site/SiteMojo.java"}], "repo": "maven-plugins"}, {"commit": "https://github.com/apache/maven-plugins/commit/0f7829b46d953a804091200335d040220d356f6a", "parent": "https://github.com/apache/maven-plugins/commit/e5efe55c0c21e062d6cb9c44dc484c1b2dfcce3a", "message": "PR: MNG-1809\nSubmitted by: Joakim Erdfelt\n\nFix NPE on missing rss.png\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/plugins/trunk@356224 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "maven-plugins_66", "file": [{"additions": 0, "raw_url": "https://github.com/apache/maven-plugins/raw/0f7829b46d953a804091200335d040220d356f6a/maven-checkstyle-plugin/src/main/resources/org/apache/maven/plugin/checkstyle/images/rss.png", "blob_url": "https://github.com/apache/maven-plugins/blob/0f7829b46d953a804091200335d040220d356f6a/maven-checkstyle-plugin/src/main/resources/org/apache/maven/plugin/checkstyle/images/rss.png", "sha": "f0796ac886201eb43b7a15113e2deb1b32fa9a09", "changes": 0, "status": "added", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/maven-plugins/contents/maven-checkstyle-plugin/src/main/resources/org/apache/maven/plugin/checkstyle/images/rss.png?ref=0f7829b46d953a804091200335d040220d356f6a", "filename": "maven-checkstyle-plugin/src/main/resources/org/apache/maven/plugin/checkstyle/images/rss.png"}], "repo": "maven-plugins"}, {"commit": "https://github.com/apache/maven-plugins/commit/84026488e6cf68cc15a07d30348326cc88b0d610", "parent": "https://github.com/apache/maven-plugins/commit/1eeeb39b3505fe62c957d172d371e1e78f1b58d2", "message": "MNG-695: Added more tests on anonymousConnection, devConnection and scmUrl to prevent NPE. Added the test case num 11.\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk/maven-plugins@230612 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "maven-plugins_67", "file": [{"additions": 32, "raw_url": "https://github.com/apache/maven-plugins/raw/84026488e6cf68cc15a07d30348326cc88b0d610/maven-project-info-reports-plugin/src/main/java/org/apache/maven/report/projectinfo/ScmReport.java", "blob_url": "https://github.com/apache/maven-plugins/blob/84026488e6cf68cc15a07d30348326cc88b0d610/maven-project-info-reports-plugin/src/main/java/org/apache/maven/report/projectinfo/ScmReport.java", "sha": "d94905136a33afcd2ccf984ed9e28590608493c2", "changes": 35, "status": "modified", "deletions": 3, "contents_url": "https://api.github.com/repos/apache/maven-plugins/contents/maven-project-info-reports-plugin/src/main/java/org/apache/maven/report/projectinfo/ScmReport.java?ref=84026488e6cf68cc15a07d30348326cc88b0d610", "patch": "@@ -196,6 +196,19 @@ public void renderBody()\n             anonymousConnection = scm.getConnection();\n             devConnection = scm.getDeveloperConnection();\n \n+            if ( StringUtils.isEmpty( anonymousConnection ) &&\n+                StringUtils.isEmpty( devConnection ) &&\n+                StringUtils.isEmpty( scm.getUrl() ) )\n+            {\n+                startSection( getTitle() );\n+\n+                paragraph( getBundle( locale ).getString( \"report.scm.noscm\" ) );\n+\n+                endSection();\n+\n+                return;\n+            }\n+            \n             ScmRepository anonymousRepository = getScmRepository( anonymousConnection );\n             ScmRepository devRepository = getScmRepository( devConnection );\n \n@@ -264,7 +277,7 @@ private void renderWebAccesSection( String scmUrl )\n         {\n             startSection( getBundle( locale ).getString( \"report.scm.webaccess.title\" ) );\n \n-            if ( scmUrl == null )\n+            if ( StringUtils.isEmpty( scmUrl ) )\n             {\n                 paragraph( getBundle( locale ).getString( \"report.scm.webaccess.nourl\" ) );\n             }\n@@ -288,7 +301,8 @@ private void renderAnonymousAccessSection( ScmRepository anonymousRepository )\n         {\n             if ( ( isScmSystem( anonymousRepository, \"clearcase\" ) )\n                 || ( isScmSystem( anonymousRepository, \"perforce\" ) )\n-                || ( isScmSystem( anonymousRepository, \"starteam\" ) ) )\n+                || ( isScmSystem( anonymousRepository, \"starteam\" ) ) \n+                || ( StringUtils.isEmpty( anonymousConnection ) ) )\n             {\n                 return;\n             }\n@@ -313,6 +327,11 @@ else if ( ( anonymousRepository != null ) && ( isScmSystem( anonymousRepository,\n             {\n                 paragraph( getBundle( locale ).getString( \"report.scm.anonymousaccess.general.intro\" ) );\n \n+                if ( anonymousConnection.length() < 4 )\n+                {\n+                    throw new IllegalArgumentException( \"The source repository connection is too short.\" );\n+                }\n+\n                 verbatimText( anonymousConnection.substring( 4 ) );\n             }\n \n@@ -326,6 +345,11 @@ else if ( ( anonymousRepository != null ) && ( isScmSystem( anonymousRepository,\n          */\n         private void renderDeveloperAccessSection( ScmRepository devRepository )\n         {\n+            if ( StringUtils.isEmpty( devConnection ) )\n+            {\n+                return;\n+            }\n+            \n             startSection( getBundle( locale ).getString( \"report.scm.devaccess.title\" ) );\n \n             if ( ( devRepository != null ) && ( isScmSystem( devRepository, \"clearcase\" ) ) )\n@@ -365,6 +389,11 @@ else if ( ( devRepository != null ) && ( isScmSystem( devRepository, \"svn\" ) ) )\n             {\n                 paragraph( getBundle( locale ).getString( \"report.scm.devaccess.general.intro\" ) );\n \n+                if ( devConnection.length() < 4 )\n+                {\n+                    throw new IllegalArgumentException( \"The source repository connection is too short.\" );\n+                }\n+\n                 verbatimText( devConnection.substring( 4 ) );\n             }\n \n@@ -622,7 +651,7 @@ private void developerAccessSVN( SvnScmProviderRepository svnRepo )\n          */\n         public ScmRepository getScmRepository( String scmUrl )\n         {\n-            if ( scmUrl == null )\n+            if ( StringUtils.isEmpty( scmUrl ) )\n             {\n                 return null;\n             }", "filename": "maven-project-info-reports-plugin/src/main/java/org/apache/maven/report/projectinfo/ScmReport.java"}, {"additions": 56, "raw_url": "https://github.com/apache/maven-plugins/raw/84026488e6cf68cc15a07d30348326cc88b0d610/maven-project-info-reports-plugin/src/test/projects/project-info-reports-plugin-test11/pom.xml", "blob_url": "https://github.com/apache/maven-plugins/blob/84026488e6cf68cc15a07d30348326cc88b0d610/maven-project-info-reports-plugin/src/test/projects/project-info-reports-plugin-test11/pom.xml", "sha": "facf24045c4ab06d58c15f407ef8a29ada47db94", "changes": 56, "status": "added", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/maven-plugins/contents/maven-project-info-reports-plugin/src/test/projects/project-info-reports-plugin-test11/pom.xml?ref=84026488e6cf68cc15a07d30348326cc88b0d610", "patch": "@@ -0,0 +1,56 @@\n+<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n+\n+<!--\n+/*\n+ * Copyright 2001-2005 The Apache Software Foundation.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+ -->\n+\n+<project>\n+  <modelVersion>4.0.0</modelVersion>\n+  <groupId>org.apache.maven.report.projectinfo.test11</groupId>\n+  <artifactId>project-info-reports-plugin-test11</artifactId>\n+  <packaging>jar</packaging>\n+  <version>1.0-SNAPSHOT</version>\n+  <inceptionYear>2005</inceptionYear>\n+  <name>Maven ProjectInfo Report Test11</name>\n+  <description>MNG-695 developerConnection is empty</description>\n+  <url>http://maven.apache.org</url>\n+  <scm>\n+    <connection>scm:cvs:pserver:anoncvs@cvs.apache.org:/home/cvspublic:maven-plugins/dist</connection>\n+    <developerConnection/>\n+    <url>http://cvs.apache.org/</url>\n+  </scm>\n+  <developers>\n+    <developer>\n+      <id>vsiveton</id>\n+      <name>Vincent Siveton</name>\n+      <email>vsiveton@apache.org</email>\n+      <organization>Apache Software Foundation</organization>\n+      <roles>\n+        <role>Java Developer</role>\n+      </roles>\n+      <timezone>-5</timezone>\n+    </developer>\n+  </developers>\n+  <reporting>\n+    <plugins>\n+      <plugin>\n+        <groupId>org.apache.maven.plugins</groupId>\n+        <artifactId>maven-project-info-reports-plugin</artifactId>\n+      </plugin>\n+    </plugins>\n+  </reporting>\n+</project>", "filename": "maven-project-info-reports-plugin/src/test/projects/project-info-reports-plugin-test11/pom.xml"}], "repo": "maven-plugins"}, {"commit": "https://github.com/apache/maven-plugins/commit/9d2a601efb5db7d5e210632067c07dd8974ef464", "parent": "https://github.com/apache/maven-plugins/commit/7642dc96ed22c167dac6ad3b724c3f43895895ac", "message": "Upgraded to plexus-site-renderer-1.0-alpha-2 and corrected a NPE\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk/maven-plugins@219253 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "maven-plugins_68", "file": [{"additions": 1, "raw_url": "https://github.com/apache/maven-plugins/raw/9d2a601efb5db7d5e210632067c07dd8974ef464/maven-site-plugin/pom.xml", "blob_url": "https://github.com/apache/maven-plugins/blob/9d2a601efb5db7d5e210632067c07dd8974ef464/maven-site-plugin/pom.xml", "sha": "cd3c623a255e3f442d5456da939d04a8a33a47ac", "changes": 2, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/maven-plugins/contents/maven-site-plugin/pom.xml?ref=9d2a601efb5db7d5e210632067c07dd8974ef464", "patch": "@@ -48,7 +48,7 @@\n     <dependency>\n       <groupId>plexus</groupId>\n       <artifactId>plexus-site-renderer</artifactId>\n-      <version>1.0-alpha-1</version>\n+      <version>1.0-alpha-2-20050715.080727-2</version>\n     </dependency>\n     <dependency>\n       <groupId>org.apache.maven.wagon</groupId>", "filename": "maven-site-plugin/pom.xml"}, {"additions": 5, "raw_url": "https://github.com/apache/maven-plugins/raw/9d2a601efb5db7d5e210632067c07dd8974ef464/maven-site-plugin/src/main/java/org/apache/maven/doxia/DoxiaMojo.java", "blob_url": "https://github.com/apache/maven-plugins/blob/9d2a601efb5db7d5e210632067c07dd8974ef464/maven-site-plugin/src/main/java/org/apache/maven/doxia/DoxiaMojo.java", "sha": "a407dde7af0201840ca5a8016bdbb3825b88fff1", "changes": 5, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/maven-plugins/contents/maven-site-plugin/src/main/java/org/apache/maven/doxia/DoxiaMojo.java?ref=9d2a601efb5db7d5e210632067c07dd8974ef464", "patch": "@@ -548,6 +548,11 @@ public boolean accept(File file) {\n             }\n         });\n         \n+        if ( ( directories == null ) || ( directories.length  == 0 ) )\n+        {\n+            return false;\n+        }\n+        \n         List indexFound = new ArrayList();\n         for ( int i = 0; i < directories.length; i++ )\n         {", "filename": "maven-site-plugin/src/main/java/org/apache/maven/doxia/DoxiaMojo.java"}, {"additions": 28, "raw_url": "https://github.com/apache/maven-plugins/raw/9d2a601efb5db7d5e210632067c07dd8974ef464/maven-site-plugin/src/main/resources/org/apache/maven/doxia/maven-site.vm", "blob_url": "https://github.com/apache/maven-plugins/blob/9d2a601efb5db7d5e210632067c07dd8974ef464/maven-site-plugin/src/main/resources/org/apache/maven/doxia/maven-site.vm", "sha": "ece47f98f36164571e9b137b4063cc34251f6f7b", "changes": 59, "status": "modified", "deletions": 31, "contents_url": "https://api.github.com/repos/apache/maven-plugins/contents/maven-site-plugin/src/main/resources/org/apache/maven/doxia/maven-site.vm?ref=9d2a601efb5db7d5e210632067c07dd8974ef464", "patch": "@@ -39,27 +39,26 @@\n   #end\n #end\n \n+#macro ( displayTree $display $item)\n+  #if ( $item.getChildren() && $item.getChildCount() > 0 )\n+    #foreach( $subitem in $item.getChildren() )\n+      #set ( $subitemHref = $PathTool.calculateLink( $subitem.getAttribute( \"href\" ), $relativePath ) )\n+      #set ( $subitemHref = $$subitemHref.replaceAll( \"\\\\\", \"/\" ) )\n+\n+      #if ( $currentFileName == $subitemHref ) \n+        #set ( $display = true )\n+      #end\n+          \n+      #displayTree($display $subitem)\n+    #end\n+  #end\n+#end\n+        \n #macro ( menuItem $item )\n   #set ( $collapse = \"none\" )\n   #set ( $currentItemHref = $PathTool.calculateLink( $item.getAttribute( \"href\" ), $relativePath ) )\n   #set ( $currentFileName = $currentFileName.replaceAll( \"\\\\\", \"/\" ) )\n   #set ( $currentItemHref = $currentItemHref.replaceAll( \"\\\\\", \"/\" ) )\n-  \n-  #set ( $currentFileNameLastSlash = $currentFileName.lastIndexOf( \"/\" ) )\n-  #if ( $currentFileNameLastSlash != -1)\n-    #set ( $currentFileNameTmp = $currentFileName.substring( 0, $currentFileNameLastSlash ) )\n-  #else\n-    #set ( $currentFileNameTmp = $currentFileName.substring( 0, $currentFileName.lengh() ) )\n-  #end\n-\n-  #set ( $currentItemHrefLastSlash = $currentItemHref.lastIndexOf( \"/\" ) )\n-  #if ( $currentItemHrefLastSlash != -1)\n-    #set ( $currentItemHrefTmp = $currentItemHref.substring( 0, $currentItemHrefLastSlash ) )\n-  #else\n-    #set ( $currentItemHrefTmp = $currentItemHref.substring( 0, $currentItemHref.lengh() ) )\n-  #end\n-\n-  #set ( $tree = $currentFileNameTmp && $currentItemHrefTmp && $currentFileNameTmp.startsWith( $currentItemHrefTmp ) )\n \n   #if ( $item.getChildCount() > 0 )\n     #if ( ( $item.getAttribute( \"collapse\" ) ) && ( $item.getAttribute( \"collapse\" ).equalsIgnoreCase( \"false\" ) ) )\n@@ -68,31 +67,29 @@\n       ## By default collapsed\n       #set ( $collapse = \"collapsed\" )\n     #end\n-\n-    #if ( $currentFileName == $currentItemHref )\n-      #set ( $collapse = \"expanded\" )\n-    #end\n     \n-    #if ( $tree )\n+    #if ( $currentFileName == $currentItemHref ) \n       #set ( $collapse = \"expanded\" )\n     #end\n   #end\n-  <li class=\"$collapse\" $currentFileName $currentItemHref>\n+  <li class=\"$collapse\">\n     #if ( $currentFileName == $currentItemHref ) \n       <strong><a href=\"$currentItemHref\">$item.getAttribute( \"name\" )</a></strong>\n     #else\n       <a href=\"$currentItemHref\">$item.getAttribute( \"name\" )</a>\n     #end\n   </li>\n-  #if ( $item.getChildren() )\n-    #if ( $item.getChildCount() > 0 )\n-      #if ( $collapse == \"expanded\" || $tree )\n-        <ul>\n-          #foreach( $subitem in $item.getChildren() )\n-            #menuItem( $subitem )\n-          #end\n-        </ul>\n-      #end\n+  #if ( $item.getChildren() && $item.getChildCount() > 0 )\n+    #set ( $display = false )\n+    #set ( $itemTmp = $item )\n+    #displayTree($display $itemTmp)\n+\n+    #if ( $collapse == \"expanded\" || $display )\n+      <ul>\n+        #foreach( $subitem in $item.getChildren() )\n+          #menuItem( $subitem )\n+        #end\n+      </ul>\n     #end\n   #end\n #end", "filename": "maven-site-plugin/src/main/resources/org/apache/maven/doxia/maven-site.vm"}, {"additions": 1, "raw_url": "https://github.com/apache/maven-plugins/raw/9d2a601efb5db7d5e210632067c07dd8974ef464/maven-site-plugin/src/test/projects/site-plugin-test6/src/site/apt/gamma/index.apt", "blob_url": "https://github.com/apache/maven-plugins/blob/9d2a601efb5db7d5e210632067c07dd8974ef464/maven-site-plugin/src/test/projects/site-plugin-test6/src/site/apt/gamma/index.apt", "sha": "2cb261a6269fc45291526ee7950f71008a9b92ae", "changes": 2, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/maven-plugins/contents/maven-site-plugin/src/test/projects/site-plugin-test6/src/site/apt/gamma/index.apt?ref=9d2a601efb5db7d5e210632067c07dd8974ef464", "patch": "@@ -9,4 +9,4 @@\n \n Site Plugin Index\n \n- From /theta/index.apt\n+ From /gamma/index.apt", "filename": "maven-site-plugin/src/test/projects/site-plugin-test6/src/site/apt/gamma/index.apt"}, {"additions": 1, "raw_url": "https://github.com/apache/maven-plugins/raw/9d2a601efb5db7d5e210632067c07dd8974ef464/maven-site-plugin/src/test/projects/site-plugin-test6/src/site/apt/gamma/two/index.apt", "blob_url": "https://github.com/apache/maven-plugins/blob/9d2a601efb5db7d5e210632067c07dd8974ef464/maven-site-plugin/src/test/projects/site-plugin-test6/src/site/apt/gamma/two/index.apt", "sha": "a7217b32685496ef88f433a8ff4dd7dd77c87c43", "changes": 2, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/maven-plugins/contents/maven-site-plugin/src/test/projects/site-plugin-test6/src/site/apt/gamma/two/index.apt?ref=9d2a601efb5db7d5e210632067c07dd8974ef464", "patch": "@@ -9,4 +9,4 @@\n  \n Site Plugin Index\n \n- From /theta/two/index.apt\n+ From /gamma/two/index.apt", "filename": "maven-site-plugin/src/test/projects/site-plugin-test6/src/site/apt/gamma/two/index.apt"}], "repo": "maven-plugins"}, {"commit": "https://github.com/apache/maven-plugins/commit/a3e0650a4f9bda62489060c13ebd972ad43e5bd5", "parent": "https://github.com/apache/maven-plugins/commit/8e67b29f66f402f50a1c60699970985630d3b079", "message": "[MDEP-483] NullPointerException when using classifier and markers\n NPE prevented cause don't access the file attribute of the \n artifact which can be null under different circumstances.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/plugins/trunk@1677079 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "maven-plugins_69", "file": [{"additions": 1, "raw_url": "https://github.com/apache/maven-plugins/raw/a3e0650a4f9bda62489060c13ebd972ad43e5bd5/maven-dependency-plugin/src/main/java/org/apache/maven/plugin/dependency/fromDependencies/UnpackDependenciesMojo.java", "blob_url": "https://github.com/apache/maven-plugins/blob/a3e0650a4f9bda62489060c13ebd972ad43e5bd5/maven-dependency-plugin/src/main/java/org/apache/maven/plugin/dependency/fromDependencies/UnpackDependenciesMojo.java", "sha": "7d7b059f0048ef884707cc9abe2e2ef9a4be62f3", "changes": 2, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/maven-plugins/contents/maven-dependency-plugin/src/main/java/org/apache/maven/plugin/dependency/fromDependencies/UnpackDependenciesMojo.java?ref=a3e0650a4f9bda62489060c13ebd972ad43e5bd5", "patch": "@@ -95,7 +95,7 @@ protected void doExecute()\n \n         for ( Artifact artifact : dss.getSkippedDependencies() )\n         {\n-            getLog().info( artifact.getFile().getName() + \" already exists in destination.\" );\n+            getLog().info( artifact.getId() + \" already exists in destination.\" );\n         }\n     }\n ", "filename": "maven-dependency-plugin/src/main/java/org/apache/maven/plugin/dependency/fromDependencies/UnpackDependenciesMojo.java"}], "repo": "maven-plugins"}, {"commit": "https://github.com/apache/maven-plugins/commit/87f7d53cbecc973340f3cc5c6b9ea11e9f3a576d", "parent": "https://github.com/apache/maven-plugins/commit/02610b8c41c5d062d64dddaf11984c8fd5f89dd1", "message": "MJAVADOC-342: An incomplete fix for the NPE bugs in AbstractJavadocMojo.java\no protect all the calls to getJavadocDirectory\no update to threadsafe version of maven-shade-plugin.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/plugins/trunk@1385200 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "maven-plugins_70", "file": [{"additions": 1, "raw_url": "https://github.com/apache/maven-plugins/raw/87f7d53cbecc973340f3cc5c6b9ea11e9f3a576d/maven-javadoc-plugin/pom.xml", "blob_url": "https://github.com/apache/maven-plugins/blob/87f7d53cbecc973340f3cc5c6b9ea11e9f3a576d/maven-javadoc-plugin/pom.xml", "sha": "cbc53febb39922cb2a7eebad94cd9b23dd7d9964", "changes": 2, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/maven-plugins/contents/maven-javadoc-plugin/pom.xml?ref=87f7d53cbecc973340f3cc5c6b9ea11e9f3a576d", "patch": "@@ -266,7 +266,7 @@ under the License.\n         <plugin>\n           <groupId>org.apache.maven.plugins</groupId>\n           <artifactId>maven-shade-plugin</artifactId>\n-          <version>1.2.1</version>\n+          <version>2.0</version>\n         </plugin>\n       </plugins>\n     </pluginManagement>", "filename": "maven-javadoc-plugin/pom.xml"}, {"additions": 17, "raw_url": "https://github.com/apache/maven-plugins/raw/87f7d53cbecc973340f3cc5c6b9ea11e9f3a576d/maven-javadoc-plugin/src/main/java/org/apache/maven/plugin/javadoc/AbstractJavadocMojo.java", "blob_url": "https://github.com/apache/maven-plugins/blob/87f7d53cbecc973340f3cc5c6b9ea11e9f3a576d/maven-javadoc-plugin/src/main/java/org/apache/maven/plugin/javadoc/AbstractJavadocMojo.java", "sha": "b61be0e648339bcec02b2aa35fbd6058192cc407", "changes": 72, "status": "modified", "deletions": 55, "contents_url": "https://api.github.com/repos/apache/maven-plugins/contents/maven-javadoc-plugin/src/main/java/org/apache/maven/plugin/javadoc/AbstractJavadocMojo.java?ref=87f7d53cbecc973340f3cc5c6b9ea11e9f3a576d", "patch": "@@ -26,11 +26,7 @@\n import org.apache.maven.artifact.handler.ArtifactHandler;\n import org.apache.maven.artifact.metadata.ArtifactMetadataSource;\n import org.apache.maven.artifact.repository.ArtifactRepository;\n-import org.apache.maven.artifact.resolver.ArtifactNotFoundException;\n-import org.apache.maven.artifact.resolver.ArtifactResolutionException;\n-import org.apache.maven.artifact.resolver.ArtifactResolutionResult;\n-import org.apache.maven.artifact.resolver.ArtifactResolver;\n-import org.apache.maven.artifact.resolver.MultipleArtifactsNotFoundException;\n+import org.apache.maven.artifact.resolver.*;\n import org.apache.maven.artifact.resolver.filter.AndArtifactFilter;\n import org.apache.maven.artifact.resolver.filter.ArtifactFilter;\n import org.apache.maven.artifact.resolver.filter.IncludesArtifactFilter;\n@@ -42,16 +38,7 @@\n import org.apache.maven.model.Resource;\n import org.apache.maven.plugin.AbstractMojo;\n import org.apache.maven.plugin.MojoExecutionException;\n-import org.apache.maven.plugin.javadoc.options.BootclasspathArtifact;\n-import org.apache.maven.plugin.javadoc.options.DocletArtifact;\n-import org.apache.maven.plugin.javadoc.options.Group;\n-import org.apache.maven.plugin.javadoc.options.JavadocOptions;\n-import org.apache.maven.plugin.javadoc.options.JavadocPathArtifact;\n-import org.apache.maven.plugin.javadoc.options.OfflineLink;\n-import org.apache.maven.plugin.javadoc.options.ResourcesArtifact;\n-import org.apache.maven.plugin.javadoc.options.Tag;\n-import org.apache.maven.plugin.javadoc.options.Taglet;\n-import org.apache.maven.plugin.javadoc.options.TagletArtifact;\n+import org.apache.maven.plugin.javadoc.options.*;\n import org.apache.maven.plugin.javadoc.options.io.xpp3.JavadocOptionsXpp3Writer;\n import org.apache.maven.plugin.javadoc.resolver.JavadocBundle;\n import org.apache.maven.plugin.javadoc.resolver.ResourceResolver;\n@@ -76,43 +63,15 @@\n import org.codehaus.plexus.archiver.manager.ArchiverManager;\n import org.codehaus.plexus.archiver.manager.NoSuchArchiverException;\n import org.codehaus.plexus.components.io.fileselectors.IncludeExcludeFileSelector;\n-import org.codehaus.plexus.util.FileUtils;\n-import org.codehaus.plexus.util.IOUtil;\n-import org.codehaus.plexus.util.ReaderFactory;\n-import org.codehaus.plexus.util.StringUtils;\n-import org.codehaus.plexus.util.WriterFactory;\n+import org.codehaus.plexus.util.*;\n import org.codehaus.plexus.util.cli.CommandLineException;\n import org.codehaus.plexus.util.cli.CommandLineUtils;\n import org.codehaus.plexus.util.cli.Commandline;\n import org.codehaus.plexus.util.xml.Xpp3Dom;\n \n-import java.io.File;\n-import java.io.FileOutputStream;\n-import java.io.FileWriter;\n-import java.io.IOException;\n-import java.io.InputStream;\n-import java.io.OutputStream;\n-import java.io.Writer;\n-import java.net.MalformedURLException;\n-import java.net.URI;\n-import java.net.URISyntaxException;\n-import java.net.URL;\n-import java.net.URLClassLoader;\n-import java.util.ArrayList;\n-import java.util.Arrays;\n-import java.util.Calendar;\n-import java.util.Collection;\n-import java.util.Collections;\n-import java.util.HashMap;\n-import java.util.HashSet;\n-import java.util.LinkedHashSet;\n-import java.util.LinkedList;\n-import java.util.List;\n-import java.util.Locale;\n-import java.util.Map;\n-import java.util.Properties;\n-import java.util.Set;\n-import java.util.StringTokenizer;\n+import java.io.*;\n+import java.net.*;\n+import java.util.*;\n \n import static org.apache.maven.plugin.javadoc.JavadocUtil.*;\n import static org.codehaus.plexus.util.IOUtil.close;\n@@ -2102,14 +2061,17 @@ protected void executeReport( Locale unusedLocale )\n                             sourcePaths.addAll( JavadocUtil.pruneDirs( subProject, sourceRoots ) );\n                         }\n \n-                        String javadocDirRelative =\n-                            PathUtils.toRelative( project.getBasedir(), getJavadocDirectory().getAbsolutePath() );\n-                        File javadocDir = new File( subProject.getBasedir(), javadocDirRelative );\n-                        if ( javadocDir.exists() && javadocDir.isDirectory() )\n+                        if ( getJavadocDirectory() != null )\n                         {\n-                            List<String> l = JavadocUtil.pruneDirs( subProject, Collections.singletonList(\n-                                javadocDir.getAbsolutePath() ) );\n-                            sourcePaths.addAll( l );\n+                            String javadocDirRelative =\n+                                    PathUtils.toRelative( project.getBasedir(), getJavadocDirectory().getAbsolutePath() );\n+                            File javadocDir = new File( subProject.getBasedir(), javadocDirRelative );\n+                            if ( javadocDir.exists() && javadocDir.isDirectory() )\n+                            {\n+                                List<String> l = JavadocUtil.pruneDirs( subProject, Collections.singletonList(\n+                                        javadocDir.getAbsolutePath() ) );\n+                                sourcePaths.addAll( l );\n+                            }\n                         }\n                     }\n                 }\n@@ -4026,7 +3988,7 @@ private void copyJavadocResources( File anOutputDirectory )\n         {\n             for ( MavenProject subProject : reactorProjects )\n             {\n-                if ( subProject != project )\n+                if ( subProject != project && getJavadocDirectory() != null )\n                 {\n                     String javadocDirRelative =\n                         PathUtils.toRelative( project.getBasedir(), getJavadocDirectory().getAbsolutePath() );", "filename": "maven-javadoc-plugin/src/main/java/org/apache/maven/plugin/javadoc/AbstractJavadocMojo.java"}], "repo": "maven-plugins"}, {"commit": "https://github.com/apache/maven-plugins/commit/01ad5b044e4f3b66306e52eaea4d745ca637596f", "parent": "https://github.com/apache/maven-plugins/commit/3d33d3723c8cbf82eb0ee7cca8bd7e57e89fd783", "message": "[MCLEAN-34] NPE when forcing delete of directory\n[MCLEAN-35] Upgrade plexus-utils to a new version\n\no Updated to plexus-utils:1.5.6\no Bumped Maven prerequisite to 2.0.6\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/plugins/trunk@692711 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "maven-plugins_71", "file": [{"additions": 4, "raw_url": "https://github.com/apache/maven-plugins/raw/01ad5b044e4f3b66306e52eaea4d745ca637596f/maven-clean-plugin/pom.xml", "blob_url": "https://github.com/apache/maven-plugins/blob/01ad5b044e4f3b66306e52eaea4d745ca637596f/maven-clean-plugin/pom.xml", "sha": "eabbca6dbc2ce9901cf1fec4eaae1cb45869ad2a", "changes": 8, "status": "modified", "deletions": 4, "contents_url": "https://api.github.com/repos/apache/maven-plugins/contents/maven-clean-plugin/pom.xml?ref=01ad5b044e4f3b66306e52eaea4d745ca637596f", "patch": "@@ -44,7 +44,7 @@ under the License.\n   </contributors>\n \n   <prerequisites>\n-    <maven>2.0</maven>\n+    <maven>2.0.6</maven>\n   </prerequisites>\n \n   <scm>\n@@ -61,12 +61,12 @@ under the License.\n     <dependency>\n       <groupId>org.apache.maven</groupId>\n       <artifactId>maven-project</artifactId>\n-      <version>2.0</version>\n+      <version>2.0.6</version>\n     </dependency>\n     <dependency>\n       <groupId>org.apache.maven</groupId>\n       <artifactId>maven-plugin-api</artifactId>\n-      <version>2.0</version>\n+      <version>2.0.6</version>\n     </dependency>\n     <dependency>\n       <groupId>org.apache.maven.shared</groupId>\n@@ -76,7 +76,7 @@ under the License.\n     <dependency>\n       <groupId>org.codehaus.plexus</groupId>\n       <artifactId>plexus-utils</artifactId>\n-      <version>1.1</version>\n+      <version>1.5.6</version>\n     </dependency>\n \n     <!-- Test -->", "filename": "maven-clean-plugin/pom.xml"}], "repo": "maven-plugins"}, {"commit": "https://github.com/apache/maven-plugins/commit/387ceb706f815552fd7d6cd5b702603f6fa7a2a8", "parent": "https://github.com/apache/maven-plugins/commit/bc5cc3f3e474e70c190910ae294a48e4bc0757e3", "message": "MANTRUN-96 : Fix NPE in tests by upgrading maven APIs and embedder to 2.0.4. Plugin's maven prerequisite bumped to 2.0.4.\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/plugins/trunk@682660 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "maven-plugins_72", "file": [{"additions": 4, "raw_url": "https://github.com/apache/maven-plugins/raw/387ceb706f815552fd7d6cd5b702603f6fa7a2a8/maven-antrun-plugin/pom.xml", "blob_url": "https://github.com/apache/maven-plugins/blob/387ceb706f815552fd7d6cd5b702603f6fa7a2a8/maven-antrun-plugin/pom.xml", "sha": "936165092c2369655f221986380c2e6c78d9dac5", "changes": 9, "status": "modified", "deletions": 5, "contents_url": "https://api.github.com/repos/apache/maven-plugins/contents/maven-antrun-plugin/pom.xml?ref=387ceb706f815552fd7d6cd5b702603f6fa7a2a8", "patch": "@@ -30,7 +30,7 @@ under the License.\n   <version>1.3-SNAPSHOT</version>\n   <description>Runs Ant scripts embedded in the POM</description>\n   <prerequisites>\n-    <maven>2.0.1</maven>\n+    <maven>2.0.4</maven>\n   </prerequisites>\n \n   <issueManagement>\n@@ -66,12 +66,12 @@ under the License.\n     <dependency>\n       <groupId>org.apache.maven</groupId>\n       <artifactId>maven-plugin-api</artifactId>\n-      <version>2.0.1</version>\n+      <version>2.0.4</version>\n     </dependency>\n     <dependency>\n       <groupId>org.apache.maven</groupId>\n       <artifactId>maven-project</artifactId>\n-      <version>2.0.1</version>\n+      <version>2.0.4</version>\n     </dependency>\n     <dependency>\n       <groupId>ant</groupId>\n@@ -87,8 +87,7 @@ under the License.\n     <dependency>\n       <groupId>org.apache.maven</groupId>\n       <artifactId>maven-embedder</artifactId>\n-      <version>2.0.1</version>\n-      <scope>test</scope>\n+      <version>2.0.4</version>\n     </dependency>\n   </dependencies>\n ", "filename": "maven-antrun-plugin/pom.xml"}], "repo": "maven-plugins"}, {"commit": "https://github.com/apache/maven-plugins/commit/2928fa21d64dff8da04f62a490daa75b969a545d", "parent": "https://github.com/apache/maven-plugins/commit/aea35c849c8cba19995cceee4a7936f45e2bd8d5", "message": "PR: MNG-2458: maven-docck-plugin proxy support\nSubmitted by: Denis Cabasson\nReviewed by: Vincent Siveton\n\nApplied with some changes:\no using maven-settings 2.0.4\no prevented NPE in the constructor with a new method: setupProxy()\no proxyPassword could be null\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/plugins/trunk@429448 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "maven-plugins_73", "file": [{"additions": 5, "raw_url": "https://github.com/apache/maven-plugins/raw/2928fa21d64dff8da04f62a490daa75b969a545d/maven-docck-plugin/pom.xml", "blob_url": "https://github.com/apache/maven-plugins/blob/2928fa21d64dff8da04f62a490daa75b969a545d/maven-docck-plugin/pom.xml", "sha": "27e27dd059907c4a5c7207471e52ba3f993670a7", "changes": 5, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/maven-plugins/contents/maven-docck-plugin/pom.xml?ref=2928fa21d64dff8da04f62a490daa75b969a545d", "patch": "@@ -71,6 +71,11 @@\n       <artifactId>maven-project</artifactId>\n       <version>2.0</version>\n     </dependency>\n+    <dependency>\n+      <groupId>org.apache.maven</groupId>\n+      <artifactId>maven-settings</artifactId>\n+      <version>2.0.4</version>\n+    </dependency>\n     <dependency>\n       <groupId>org.apache.maven</groupId>\n       <artifactId>maven-plugin-api</artifactId>", "filename": "maven-docck-plugin/pom.xml"}, {"additions": 67, "raw_url": "https://github.com/apache/maven-plugins/raw/2928fa21d64dff8da04f62a490daa75b969a545d/maven-docck-plugin/src/main/java/org/apache/maven/plugin/docck/AbstractCheckDocumentationMojo.java", "blob_url": "https://github.com/apache/maven-plugins/blob/2928fa21d64dff8da04f62a490daa75b969a545d/maven-docck-plugin/src/main/java/org/apache/maven/plugin/docck/AbstractCheckDocumentationMojo.java", "sha": "9da8e2671ccdf0657eed29fba8a585f858fc3989", "changes": 82, "status": "modified", "deletions": 15, "contents_url": "https://api.github.com/repos/apache/maven-plugins/contents/maven-docck-plugin/src/main/java/org/apache/maven/plugin/docck/AbstractCheckDocumentationMojo.java?ref=2928fa21d64dff8da04f62a490daa75b969a545d", "patch": "@@ -16,8 +16,11 @@\n  * limitations under the License.\n  */\n \n+import org.apache.commons.httpclient.Credentials;\n import org.apache.commons.httpclient.HttpClient;\n import org.apache.commons.httpclient.HttpException;\n+import org.apache.commons.httpclient.UsernamePasswordCredentials;\n+import org.apache.commons.httpclient.auth.AuthScope;\n import org.apache.commons.httpclient.methods.HeadMethod;\n import org.apache.maven.model.IssueManagement;\n import org.apache.maven.model.License;\n@@ -30,6 +33,8 @@\n import org.apache.maven.plugin.docck.reports.DocumentationReport;\n import org.apache.maven.plugin.docck.reports.DocumentationReporter;\n import org.apache.maven.project.MavenProject;\n+import org.apache.maven.settings.Proxy;\n+import org.apache.maven.settings.Settings;\n import org.apache.maven.shared.model.fileset.FileSet;\n import org.apache.maven.shared.model.fileset.util.FileSetManager;\n import org.codehaus.plexus.util.IOUtil;\n@@ -79,13 +84,22 @@\n     protected String siteDirectory;\n \n     /**\n-     * Sets whether this plugin is running in offline or online mode. Also useful when you don't want\n-     * to verify http URLs.\n+     * Sets whether this plugin is running in offline or online mode. Also\n+     * useful when you don't want to verify http URLs.\n      *\n      * @parameter expression=\"${settings.offline}\"\n      */\n     private boolean offline;\n \n+    /**\n+     * The current user system settings for use in Maven.\n+     *\n+     * @parameter expression=\"${settings}\"\n+     * @required\n+     * @readonly\n+     */\n+    private Settings settings;\n+\n     private HttpClient httpClient;\n \n     private FileSetManager fileSetManager = new FileSetManager();\n@@ -95,6 +109,7 @@\n     protected AbstractCheckDocumentationMojo()\n     {\n         httpClient = new HttpClient();\n+\n         httpClient.getHttpConnectionManager().getParams().setConnectionTimeout( 5000 );\n     }\n \n@@ -106,6 +121,8 @@ protected List getReactorProjects()\n     public void execute()\n         throws MojoExecutionException, MojoFailureException\n     {\n+        setupProxy();\n+\n         if ( output != null )\n         {\n             getLog().info( \"Writing documentation survey results to: \" + output );\n@@ -173,6 +190,42 @@ public void execute()\n         }\n     }\n \n+    /**\n+     * Setup proxy access if needed.\n+     */\n+    private void setupProxy()\n+    {\n+        Proxy settingsProxy = settings.getActiveProxy();\n+\n+        if ( settingsProxy != null )\n+        {\n+            String proxyUsername = settingsProxy.getUsername();\n+\n+            String proxyPassword = settingsProxy.getPassword();\n+\n+            String proxyHost = settingsProxy.getHost();\n+\n+            int proxyPort = settingsProxy.getPort();\n+\n+            if ( StringUtils.isNotEmpty( proxyHost ) )\n+            {\n+                httpClient.getHostConfiguration().setProxy( proxyHost, proxyPort );\n+\n+                getLog().info( \"Using proxy[\" + proxyHost + \"] at port [\" + proxyPort + \"].\" );\n+\n+                if ( StringUtils.isNotEmpty( proxyUsername ) )\n+                {\n+                    getLog().info( \"Using proxy user[\" + proxyUsername + \"].\" );\n+\n+                    Credentials creds = new UsernamePasswordCredentials( proxyUsername, proxyPassword );\n+\n+                    httpClient.getState().setProxyCredentials( new AuthScope( proxyHost, proxyPort ), creds );\n+                    httpClient.getParams().setAuthenticationPreemptive( true );\n+                }\n+            }\n+        }\n+    }\n+\n     private String buildErrorMessages( Map reporters )\n     {\n         String messages = \"\";\n@@ -189,9 +242,9 @@ private String buildErrorMessages( Map reporters )\n             {\n                 buffer.append( \"\\no \" ).append( project.getName() );\n                 buffer.append( \" (\" ).append( reporter.getMessagesByType( DocumentationReport.TYPE_ERROR ).size() )\n-                      .append( \" errors,\" );\n+                    .append( \" errors,\" );\n                 buffer.append( \" \" ).append( reporter.getMessagesByType( DocumentationReport.TYPE_WARN ).size() )\n-                      .append( \" warnings)\" );\n+                    .append( \" warnings)\" );\n                 for ( Iterator errorIterator = reporter.getMessages().iterator(); errorIterator.hasNext(); )\n                 {\n                     String error = (String) errorIterator.next();\n@@ -264,7 +317,7 @@ private void checkPomRequirements( MavenProject project, DocumentationReporter r\n         }\n         else\n         {\n-            checkURL( project.getUrl(), \"project site\", reporter);\n+            checkURL( project.getUrl(), \"project site\", reporter );\n         }\n \n         if ( project.getIssueManagement() == null )\n@@ -293,7 +346,7 @@ private void checkPomRequirements( MavenProject project, DocumentationReporter r\n             Prerequisites prereq = project.getPrerequisites();\n             if ( StringUtils.isEmpty( prereq.getMaven() ) )\n             {\n-                reporter.error( \"Missing <maven> tag in <prerequisites>\");\n+                reporter.error( \"Missing <maven> tag in <prerequisites>\" );\n             }\n         }\n \n@@ -314,9 +367,8 @@ private void checkPomRequirements( MavenProject project, DocumentationReporter r\n         else\n         {\n             Scm scm = project.getScm();\n-            if ( StringUtils.isEmpty( scm.getConnection() ) &&\n-                 StringUtils.isEmpty( scm.getDeveloperConnection() ) &&\n-                 StringUtils.isEmpty( scm.getUrl() ) )\n+            if ( StringUtils.isEmpty( scm.getConnection() ) && StringUtils.isEmpty( scm.getDeveloperConnection() )\n+                && StringUtils.isEmpty( scm.getUrl() ) )\n             {\n                 reporter.warn( \"Missing children under the <scm> tag \" );\n             }\n@@ -426,13 +478,13 @@ else if ( !validUrls.contains( url ) )\n                     }\n                     catch ( HttpException e )\n                     {\n-                        reporter.error( \"Cannot reach \" + description + \" with URL: \\'\" + url +\n-                            \"\\'.\\nError: \" + e.getMessage() );\n+                        reporter.error( \"Cannot reach \" + description + \" with URL: \\'\" + url + \"\\'.\\nError: \"\n+                            + e.getMessage() );\n                     }\n                     catch ( IOException e )\n                     {\n-                        reporter.error( \"Cannot reach \" + description + \" with URL: \\'\" + url +\n-                            \"\\'.\\nError: \" + e.getMessage() );\n+                        reporter.error( \"Cannot reach \" + description + \" with URL: \\'\" + url + \"\\'.\\nError: \"\n+                            + e.getMessage() );\n                     }\n                     finally\n                     {\n@@ -447,8 +499,8 @@ else if ( !validUrls.contains( url ) )\n         }\n         catch ( MalformedURLException e )\n         {\n-            reporter.warn( description + \" appears to have an invalid URL: \\'\" + url +\n-                \"\\'.\\nError: \" + e.getMessage() + \"\\n\\nTrying to access it as a file instead.\" );\n+            reporter.warn( description + \" appears to have an invalid URL: \\'\" + url + \"\\'.\\nError: \" + e.getMessage()\n+                + \"\\n\\nTrying to access it as a file instead.\" );\n \n             checkFile( url, description, reporter );\n         }", "filename": "maven-docck-plugin/src/main/java/org/apache/maven/plugin/docck/AbstractCheckDocumentationMojo.java"}], "repo": "maven-plugins"}, {"commit": "https://github.com/apache/maven-plugins/commit/b4c50b69c855038c01175cd061777b06a9ead8bc", "parent": "https://github.com/apache/maven-plugins/commit/2ce05e26a3fa714d9008d5cf901aec70aa18abf0", "message": "PR:MNG-1704\nSubmitted By: Jochen Wiedmann \nReviewed By: Vincent Siveton\n\nApplied, with changes. Thanks, Jochen.\nAvoid a NPE for proxy.getNonProxyHosts(), format code, add documentation.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/plugins/trunk@350086 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "maven-plugins_74", "file": [{"additions": 5, "raw_url": "https://github.com/apache/maven-plugins/raw/b4c50b69c855038c01175cd061777b06a9ead8bc/maven-project-info-reports-plugin/pom.xml", "blob_url": "https://github.com/apache/maven-plugins/blob/b4c50b69c855038c01175cd061777b06a9ead8bc/maven-project-info-reports-plugin/pom.xml", "sha": "2d37971866b6829752ae1673ccd9de05bfc2b5cf", "changes": 5, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/maven-plugins/contents/maven-project-info-reports-plugin/pom.xml?ref=b4c50b69c855038c01175cd061777b06a9ead8bc", "patch": "@@ -103,5 +103,10 @@\n       <artifactId>maven-scm-provider-cvs</artifactId>\n       <version>1.0-alpha-2</version>\n     </dependency>\n+    <dependency>\n+      <groupId>org.apache.maven</groupId>\n+      <artifactId>maven-settings</artifactId>\n+      <version>2.0</version>\n+    </dependency>\n   </dependencies>\n </project>\n\\ No newline at end of file", "filename": "maven-project-info-reports-plugin/pom.xml"}, {"additions": 95, "raw_url": "https://github.com/apache/maven-plugins/raw/b4c50b69c855038c01175cd061777b06a9ead8bc/maven-project-info-reports-plugin/src/main/java/org/apache/maven/report/projectinfo/LicenseReport.java", "blob_url": "https://github.com/apache/maven-plugins/blob/b4c50b69c855038c01175cd061777b06a9ead8bc/maven-project-info-reports-plugin/src/main/java/org/apache/maven/report/projectinfo/LicenseReport.java", "sha": "3dbd00d25c867cc6d611da166ec21b79f9d48e7a", "changes": 117, "status": "modified", "deletions": 22, "contents_url": "https://api.github.com/repos/apache/maven-plugins/contents/maven-project-info-reports-plugin/src/main/java/org/apache/maven/report/projectinfo/LicenseReport.java?ref=b4c50b69c855038c01175cd061777b06a9ead8bc", "patch": "@@ -21,6 +21,8 @@\n import org.apache.maven.project.MavenProject;\n import org.apache.maven.reporting.AbstractMavenReport;\n import org.apache.maven.reporting.AbstractMavenReportRenderer;\n+import org.apache.maven.settings.Proxy;\n+import org.apache.maven.settings.Settings;\n import org.codehaus.doxia.sink.Sink;\n import org.codehaus.doxia.site.renderer.SiteRenderer;\n import org.codehaus.plexus.i18n.I18N;\n@@ -30,12 +32,15 @@\n import java.io.File;\n import java.io.IOException;\n import java.io.InputStream;\n+import java.net.Authenticator;\n import java.net.MalformedURLException;\n+import java.net.PasswordAuthentication;\n import java.net.URL;\n import java.util.Iterator;\n import java.util.List;\n import java.util.Locale;\n import java.util.MissingResourceException;\n+import java.util.Properties;\n import java.util.regex.Matcher;\n import java.util.regex.Pattern;\n \n@@ -75,6 +80,15 @@\n      */\n     private MavenProject project;\n \n+    /**\n+     * The Maven Settings.\n+     *\n+     * @parameter default-value=\"${settings}\"\n+     * @required\n+     * @readonly\n+     */\n+    private Settings settings;\n+\n     /**\n      * Whether the system is currently offline.\n      *\n@@ -144,7 +158,7 @@ public void executeReport( Locale locale )\n     {\n         if ( !offline )\n         {\n-            LicenseRenderer r = new LicenseRenderer( getSink(), getProject(), i18n, locale );\n+            LicenseRenderer r = new LicenseRenderer( getSink(), getProject(), i18n, locale, settings );\n \n             r.render();\n         }\n@@ -167,16 +181,20 @@ public String getOutputName()\n     {\n         private MavenProject project;\n \n+        private Settings settings;\n+\n         private I18N i18n;\n \n         private Locale locale;\n \n-        public LicenseRenderer( Sink sink, MavenProject project, I18N i18n, Locale locale )\n+        public LicenseRenderer( Sink sink, MavenProject project, I18N i18n, Locale locale, Settings settings )\n         {\n             super( sink );\n \n             this.project = project;\n \n+            this.settings = settings;\n+\n             this.i18n = i18n;\n \n             this.locale = locale;\n@@ -280,22 +298,7 @@ public void renderBody()\n                         }\n                     }\n \n-                    InputStream in = null;\n-                    try\n-                    {\n-                        in = licenseUrl.openStream();\n-                        // All licenses are supposed in English...\n-                        licenseContent = IOUtil.toString( in, \"ISO-8859-1\" );\n-                    }\n-                    catch ( IOException e )\n-                    {\n-                        throw new MissingResourceException( \"Can't read the url [\" + url + \"] : \" + e.getMessage(),\n-                                                            null, null );\n-                    }\n-                    finally\n-                    {\n-                        IOUtil.close( in );\n-                    }\n+                    licenseContent = getLicenseInputStream( licenseUrl );\n \n                     // TODO: we should check for a text/html mime type instead, and possibly use a html parser to do this a bit more cleanly/reliably.\n                     String licenseContentLC = licenseContent.toLowerCase();\n@@ -324,6 +327,78 @@ public void renderBody()\n \n             endSection();\n         }\n+\n+        /**\n+         * Get the content of the license Url\n+         *\n+         * @param licenseUrl\n+         * @return the content of the licenseUrl\n+         */\n+        private String getLicenseInputStream( URL licenseUrl )\n+        {\n+            String scheme = licenseUrl.getProtocol();\n+            if ( !\"file\".equals( scheme ) )\n+            {\n+                Proxy proxy = settings.getActiveProxy();\n+                if ( proxy != null )\n+                {\n+                    if ( \"http\".equals( scheme ) || \"https\".equals( scheme ) )\n+                    {\n+                        scheme = \"http.\";\n+                    }\n+                    else if ( \"ftp\".equals( scheme ) )\n+                    {\n+                        scheme = \"ftp.\";\n+                    }\n+                    else\n+                    {\n+                        scheme = \"\";\n+                    }\n+\n+                    String host = proxy.getHost();\n+                    if ( !StringUtils.isEmpty( host ) )\n+                    {\n+                        Properties p = System.getProperties();\n+                        p.put( scheme + \"proxySet\", \"true\" );\n+                        p.put( scheme + \"proxyHost\", host );\n+                        p.put( scheme + \"proxyPort\", String.valueOf( proxy.getPort() ) );\n+                        if ( !StringUtils.isEmpty( proxy.getNonProxyHosts() ) )\n+                        {\n+                            p.put( scheme + \"nonProxyHosts\", proxy.getNonProxyHosts() );\n+                        }\n+\n+                        final String userName = proxy.getUsername();\n+                        if ( !StringUtils.isEmpty( userName ) )\n+                        {\n+                            final String pwd = StringUtils.isEmpty( proxy.getPassword() ) ? \"\" : proxy.getPassword();\n+                            Authenticator.setDefault( new Authenticator()\n+                            {\n+                                protected PasswordAuthentication getPasswordAuthentication()\n+                                {\n+                                    return new PasswordAuthentication( userName, pwd.toCharArray() );\n+                                }\n+                            } );\n+                        }\n+                    }\n+                }\n+            }\n+\n+            InputStream in = null;\n+            try\n+            {\n+                in = licenseUrl.openStream();\n+                // All licenses are supposed in English...\n+                return IOUtil.toString( in, \"ISO-8859-1\" );\n+            }\n+            catch ( IOException e )\n+            {\n+                throw new MissingResourceException( \"Can't read the url [\" + licenseUrl + \"] : \" + e.getMessage(), null, null );\n+            }\n+            finally\n+            {\n+                IOUtil.close( in );\n+            }\n+        }\n     }\n \n     private static URL baseURL( URL aUrl )\n@@ -341,10 +416,8 @@ private static URL baseURL( URL aUrl )\n                 throw new AssertionError( e );\n             }\n         }\n-        else\n-        {\n-            return aUrl;\n-        }\n+\n+        return aUrl;\n     }\n \n     private static String replaceRelativeLinks( String html, String baseURL )", "filename": "maven-project-info-reports-plugin/src/main/java/org/apache/maven/report/projectinfo/LicenseReport.java"}], "repo": "maven-plugins"}, {"commit": "https://github.com/apache/maven-plugins/commit/59057848eaee88cd1a7a3ee7d94a9e4c752eac1b", "parent": "https://github.com/apache/maven-plugins/commit/bb1d519028ed42977fa2fdbabcb519994a1464a0", "message": "PR: MNG-833\nSubmitted by: Christoph Sturm\nReviewed by: Brett Porter\no fix NPE\no allow linking of projects in the reactor as modules\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/components/trunk/maven-plugins@267532 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "maven-plugins_75", "file": [{"additions": 28, "raw_url": "https://github.com/apache/maven-plugins/raw/59057848eaee88cd1a7a3ee7d94a9e4c752eac1b/maven-idea-plugin/src/main/java/org/apache/maven/plugin/idea/IdeaMojo.java", "blob_url": "https://github.com/apache/maven-plugins/blob/59057848eaee88cd1a7a3ee7d94a9e4c752eac1b/maven-idea-plugin/src/main/java/org/apache/maven/plugin/idea/IdeaMojo.java", "sha": "60cc7bae7929da7103972b418e6c0a08187426b2", "changes": 48, "status": "modified", "deletions": 20, "contents_url": "https://api.github.com/repos/apache/maven-plugins/contents/maven-idea-plugin/src/main/java/org/apache/maven/plugin/idea/IdeaMojo.java?ref=59057848eaee88cd1a7a3ee7d94a9e4c752eac1b", "patch": "@@ -110,9 +110,9 @@ private void rewriteWorkspace()\n     private void rewriteProject()\n         throws MojoExecutionException\n     {\n+        File projectFile = new File( project.getBasedir(), project.getArtifactId() + \".ipr\" );\n         try\n         {\n-            File projectFile = new File( project.getBasedir(), project.getArtifactId() + \".ipr\" );\n             Reader reader;\n             if ( projectFile.exists() )\n             {\n@@ -162,7 +162,8 @@ private void rewriteProject()\n             else\n             {\n                 Xpp3Dom m = createElement( modules, \"module\" );\n-                String modulePath = new File( project.getBasedir(), project.getArtifactId() + \".iml\" ).getAbsolutePath();\n+                String modulePath = new File( project.getBasedir(),\n+                                              project.getArtifactId() + \".iml\" ).getAbsolutePath();\n                 m.setAttribute( \"filepath\", \"$PROJECT_DIR$/\" + toRelative( project.getBasedir(), modulePath ) );\n             }\n \n@@ -178,20 +179,20 @@ private void rewriteProject()\n         }\n         catch ( XmlPullParserException e )\n         {\n-            throw new MojoExecutionException( \"Error parsing existing IML file\", e );\n+            throw new MojoExecutionException( \"Error parsing existing IPR file: \" + projectFile.getAbsolutePath(), e );\n         }\n         catch ( IOException e )\n         {\n-            throw new MojoExecutionException( \"Error parsing existing IML file\", e );\n+            throw new MojoExecutionException( \"Error parsing existing IPR file: \" + projectFile.getAbsolutePath(), e );\n         }\n     }\n \n     private void rewriteModule()\n         throws MojoExecutionException\n     {\n+        File moduleFile = new File( project.getBasedir(), project.getArtifactId() + \".iml\" );\n         try\n         {\n-            File moduleFile = new File( project.getBasedir(), project.getArtifactId() + \".iml\" );\n             Reader reader;\n             if ( moduleFile.exists() )\n             {\n@@ -214,11 +215,11 @@ private void rewriteModule()\n \n             // TODO: how can we let the WAR/EJBs plugin hook in and provide this?\n             // TODO: merge in ejb-module, etc.\n-            if ( project.getPackaging().equals( \"war\" ) )\n+            if ( \"war\".equals( project.getPackaging() ) )\n             {\n                 addWebModule( module );\n             }\n-            else if ( project.getPackaging().equals( \"ejb\" ) )\n+            else if ( \"ejb\".equals( project.getPackaging() ) )\n             {\n                 module.setAttribute( \"type\", \"J2EE_EJB_MODULE\" );\n             }\n@@ -264,20 +265,27 @@ else if ( project.getPackaging().equals( \"ejb\" ) )\n             for ( Iterator i = project.getArtifacts().iterator(); i.hasNext(); )\n             {\n                 Artifact a = (Artifact) i.next();\n-                // TODO: resolve projects in reactor as references\n-\n                 Xpp3Dom dep = createElement( component, \"orderEntry\" );\n-                dep.setAttribute( \"type\", \"module-library\" );\n \n-                dep = createElement( dep, \"library\" );\n-                dep.setAttribute( \"name\", a.getArtifactId() );\n+                if ( a.getFile() != null )\n+                {\n+                    dep.setAttribute( \"type\", \"module-library\" );\n+                    dep = createElement( dep, \"library\" );\n+                    dep.setAttribute( \"name\", a.getArtifactId() );\n \n-                Xpp3Dom el = createElement( dep, \"CLASSES\" );\n-                el = createElement( el, \"root\" );\n-                el.setAttribute( \"url\", \"jar://\" + a.getFile().getAbsolutePath().replace( '\\\\', '/' ) + \"!/\" );\n+                    Xpp3Dom el = createElement( dep, \"CLASSES\" );\n+                    el = createElement( el, \"root\" );\n+                    File file = a.getFile();\n+                    el.setAttribute( \"url\", \"jar://\" + file.getAbsolutePath().replace( '\\\\', '/' ) + \"!/\" );\n \n-                createElement( dep, \"JAVADOC\" );\n-                createElement( dep, \"SOURCES\" );\n+                    createElement( dep, \"JAVADOC\" );\n+                    createElement( dep, \"SOURCES\" );\n+                }\n+                else\n+                {\n+                    dep.setAttribute( \"type\", \"module\" );\n+                    dep.setAttribute( \"module-name\", a.getArtifactId() );\n+                }\n             }\n \n             FileWriter writer = new FileWriter( moduleFile );\n@@ -292,11 +300,11 @@ else if ( project.getPackaging().equals( \"ejb\" ) )\n         }\n         catch ( XmlPullParserException e )\n         {\n-            throw new MojoExecutionException( \"Error parsing existing IML file\", e );\n+            throw new MojoExecutionException( \"Error parsing existing IML file \" + moduleFile.getAbsolutePath(), e );\n         }\n         catch ( IOException e )\n         {\n-            throw new MojoExecutionException( \"Error parsing existing IML file\", e );\n+            throw new MojoExecutionException( \"Error parsing existing IML file \" + moduleFile.getAbsolutePath(), e );\n         }\n     }\n \n@@ -419,7 +427,7 @@ private void removeOldDependencies( Xpp3Dom component )\n         for ( int i = children.length - 1; i >= 0; i-- )\n         {\n             Xpp3Dom child = children[i];\n-            if ( child.getName().equals( \"orderEntry\" ) && child.getAttribute( \"type\" ).equals( \"module-library\" ) )\n+            if ( \"orderEntry\".equals( child.getName() ) && \"module-library\".equals( child.getAttribute( \"type\" ) ) )\n             {\n                 component.removeChild( i );\n             }", "filename": "maven-idea-plugin/src/main/java/org/apache/maven/plugin/idea/IdeaMojo.java"}], "repo": "maven-plugins"}, {"commit": "https://github.com/apache/maven-plugins/commit/d5acead2409be8518e061c15a242b3548136cd6f", "parent": "https://github.com/apache/maven-plugins/commit/892f657765a66a0916e32d5b3295c2920acbc0ce", "message": "[MPIR-72] Upgrade to doxia 1.0-alpha-9\no Upgrade to doxia 1.0-alpha-9.\no Update the plexus-utils version to match the one used by doxia.\no Bump the prerequisite for maven to 2.0.6, because we need to use a newer version of plexus-utils.\no Fix possible NPE.\no Fix test case.\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/plugins/trunk@580617 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "maven-plugins_76", "file": [{"additions": 23, "raw_url": "https://github.com/apache/maven-plugins/raw/d5acead2409be8518e061c15a242b3548136cd6f/maven-project-info-reports-plugin/pom.xml", "blob_url": "https://github.com/apache/maven-plugins/blob/d5acead2409be8518e061c15a242b3548136cd6f/maven-project-info-reports-plugin/pom.xml", "sha": "b8a31efbed4256b0adad95062e7bfd2e8c632e1e", "changes": 28, "status": "modified", "deletions": 5, "contents_url": "https://api.github.com/repos/apache/maven-plugins/contents/maven-project-info-reports-plugin/pom.xml?ref=d5acead2409be8518e061c15a242b3548136cd6f", "patch": "@@ -32,7 +32,7 @@ under the License.\n   <version>2.1-SNAPSHOT</version>\n   <inceptionYear>2005</inceptionYear>\n   <prerequisites>\n-    <maven>2.0.4</maven>\n+    <maven>2.0.6</maven>\n   </prerequisites>\n   <issueManagement>\n     <system>JIRA</system>\n@@ -185,20 +185,37 @@ under the License.\n       <artifactId>doxia-core</artifactId>\n       <version>${doxia.version}</version>\n     </dependency>\n+    <dependency>\n+      <groupId>org.apache.maven.doxia</groupId>\n+      <artifactId>doxia-module-xhtml</artifactId>\n+      <version>${doxia.version}</version>\n+    </dependency>\n     <dependency>\n       <groupId>org.apache.maven.doxia</groupId>\n       <artifactId>doxia-sink-api</artifactId>\n       <version>${doxia.version}</version>\n     </dependency>\n+\n+    <!-- doxia-sitetools -->\n     <dependency>\n       <groupId>org.apache.maven.doxia</groupId>\n       <artifactId>doxia-decoration-model</artifactId>\n-      <version>${doxia.version}</version>\n+      <version>${doxia-sitetools.version}</version>\n     </dependency>\n     <dependency>\n       <groupId>org.apache.maven.doxia</groupId>\n       <artifactId>doxia-site-renderer</artifactId>\n-      <version>${doxia.version}</version>\n+      <version>${doxia-sitetools.version}</version>\n+      <exclusions>\n+        <exclusion>\n+          <groupId>org.codehaus.plexus</groupId>\n+          <artifactId>plexus-container-default</artifactId>\n+        </exclusion>\n+        <exclusion>\n+          <groupId>org.codehaus.plexus</groupId>\n+          <artifactId>plexus-component-api</artifactId>\n+        </exclusion>\n+      </exclusions>\n     </dependency>\n \n     <!-- plexus -->\n@@ -221,7 +238,7 @@ under the License.\n     <dependency>\n       <groupId>org.codehaus.plexus</groupId>\n       <artifactId>plexus-utils</artifactId>\n-      <version>1.1</version>\n+      <version>1.4.5</version>\n     </dependency>\n \n     <!-- test -->\n@@ -239,7 +256,8 @@ under the License.\n     </dependency>\n   </dependencies>\n   <properties>\n-    <doxia.version>1.0-alpha-8</doxia.version>\n+    <doxia.version>1.0-alpha-9</doxia.version>\n+    <doxia-sitetools.version>1.0-alpha-9</doxia-sitetools.version>\n     <wagon.version>1.0-beta-2</wagon.version>\n     <scm.version>1.0</scm.version>\n   </properties>", "filename": "maven-project-info-reports-plugin/pom.xml"}, {"additions": 8, "raw_url": "https://github.com/apache/maven-plugins/raw/d5acead2409be8518e061c15a242b3548136cd6f/maven-project-info-reports-plugin/src/main/java/org/apache/maven/report/projectinfo/dependencies/renderer/DependenciesRenderer.java", "blob_url": "https://github.com/apache/maven-plugins/blob/d5acead2409be8518e061c15a242b3548136cd6f/maven-project-info-reports-plugin/src/main/java/org/apache/maven/report/projectinfo/dependencies/renderer/DependenciesRenderer.java", "sha": "012b6dfeddd52e45796fcac708f601e04e879ca1", "changes": 10, "status": "modified", "deletions": 2, "contents_url": "https://api.github.com/repos/apache/maven-plugins/contents/maven-project-info-reports-plugin/src/main/java/org/apache/maven/report/projectinfo/dependencies/renderer/DependenciesRenderer.java?ref=d5acead2409be8518e061c15a242b3548136cd6f", "patch": "@@ -694,12 +694,18 @@ private void printDescriptionsAndURLs( DependencyNode node )\n                 List licenses = artifactProject.getLicenses();\n \n                 sink.paragraph();\n-                sink.anchor( id );\n+                if( id != null )\n+                {\n+                    sink.anchor( id );\n+                }\n                 // startSection( artifactName );\n                 sink.bold();\n                 sink.text( artifactName );\n                 sink.bold_();\n-                sink.anchor_();\n+                if( id != null )\n+                {\n+                    sink.anchor_();\n+                }\n                 sink.paragraph_();\n \n                 if ( artifactDescription != null )", "filename": "maven-project-info-reports-plugin/src/main/java/org/apache/maven/report/projectinfo/dependencies/renderer/DependenciesRenderer.java"}, {"additions": 1, "raw_url": "https://github.com/apache/maven-plugins/raw/d5acead2409be8518e061c15a242b3548136cd6f/maven-project-info-reports-plugin/src/test/java/org/apache/maven/report/projectinfo/DependenciesReportTest.java", "blob_url": "https://github.com/apache/maven-plugins/blob/d5acead2409be8518e061c15a242b3548136cd6f/maven-project-info-reports-plugin/src/test/java/org/apache/maven/report/projectinfo/DependenciesReportTest.java", "sha": "4ed197015ef18928a7339a160b84d074ed1fafd6", "changes": 2, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/maven-plugins/contents/maven-project-info-reports-plugin/src/test/java/org/apache/maven/report/projectinfo/DependenciesReportTest.java?ref=d5acead2409be8518e061c15a242b3548136cd6f", "patch": "@@ -87,6 +87,6 @@ public void testReport()\n         assertEquals( textBlocks[6].getText(), getString( \"report.dependencies.intro.test\" ) );\r\n         assertEquals( textBlocks[7].getText(), getString( \"report.dependencies.graph.title\" ) );\r\n         assertEquals( textBlocks[8].getText(), getString( \"report.dependencies.graph.tree.title\" ) );\r\n-        assertEquals( textBlocks[10].getText(), getString( \"report.dependencies.graph.tables.title\" ) );\r\n+        assertEquals( textBlocks[12].getText(), getString( \"report.dependencies.graph.tables.title\" ) );\r\n     }\r\n }\r", "filename": "maven-project-info-reports-plugin/src/test/java/org/apache/maven/report/projectinfo/DependenciesReportTest.java"}], "repo": "maven-plugins"}, {"commit": "https://github.com/apache/maven-plugins/commit/787b2db1b0aed827cd28178e2f74e8a39bdc1e05", "parent": "https://github.com/apache/maven-plugins/commit/a41e724a09de22336eb052e043db8b00e5b5f77f", "message": "MSITE-138: site:stage does not create xref\n\no replaced all annotations for outputdirectory in Mojo Reports: ${project.build.directory}/site =>  ${project.reporting.outputDirectory}\no setReportOutputDirectory() in all Mojo reports (if required).\no handle outputdirectory for external reports in SiteRunMojo and in DoxiaFilter\no handle NPE for dependencies when site:run is called (due to MPIR-55)\n\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/plugins/trunk@433277 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "maven-plugins_77", "file": [{"additions": 1, "raw_url": "https://github.com/apache/maven-plugins/raw/787b2db1b0aed827cd28178e2f74e8a39bdc1e05/maven-assembly-plugin/src/main/java/org/apache/maven/plugin/assembly/mojos/AbstractAssemblyMojo.java", "blob_url": "https://github.com/apache/maven-plugins/blob/787b2db1b0aed827cd28178e2f74e8a39bdc1e05/maven-assembly-plugin/src/main/java/org/apache/maven/plugin/assembly/mojos/AbstractAssemblyMojo.java", "sha": "03b3885264cf054ad07ba032aa5d94c3883fb3c5", "changes": 2, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/maven-plugins/contents/maven-assembly-plugin/src/main/java/org/apache/maven/plugin/assembly/mojos/AbstractAssemblyMojo.java?ref=787b2db1b0aed827cd28178e2f74e8a39bdc1e05", "patch": "@@ -186,7 +186,7 @@\n     /**\n      * Directory for site generated.\n      *\n-     * @parameter default-value=\"${project.build.directory}/site\"\n+     * @parameter default-value=\"${project.reporting.outputDirectory}\"\n      * @readonly\n      */\n     private File siteDirectory;", "filename": "maven-assembly-plugin/src/main/java/org/apache/maven/plugin/assembly/mojos/AbstractAssemblyMojo.java"}, {"additions": 1, "raw_url": "https://github.com/apache/maven-plugins/raw/787b2db1b0aed827cd28178e2f74e8a39bdc1e05/maven-changelog-plugin/src/main/java/org/apache/maven/changelog/ChangeLogReport.java", "blob_url": "https://github.com/apache/maven-plugins/blob/787b2db1b0aed827cd28178e2f74e8a39bdc1e05/maven-changelog-plugin/src/main/java/org/apache/maven/changelog/ChangeLogReport.java", "sha": "cc6061ded1dd232ec9c24c0b7674ecd926ecfeb3", "changes": 2, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/maven-plugins/contents/maven-changelog-plugin/src/main/java/org/apache/maven/changelog/ChangeLogReport.java?ref=787b2db1b0aed827cd28178e2f74e8a39bdc1e05", "patch": "@@ -200,7 +200,7 @@\n     /**\n      * The directory where the report will be generated\n      *\n-     * @parameter expression=\"${project.build.directory}/site\"\n+     * @parameter expression=\"${project.reporting.outputDirectory}\"\n      * @required\n      * @readonly\n      */", "filename": "maven-changelog-plugin/src/main/java/org/apache/maven/changelog/ChangeLogReport.java"}, {"additions": 1, "raw_url": "https://github.com/apache/maven-plugins/raw/787b2db1b0aed827cd28178e2f74e8a39bdc1e05/maven-changes-plugin/src/main/java/org/apache/maven/plugin/changes/ChangesMojo.java", "blob_url": "https://github.com/apache/maven-plugins/blob/787b2db1b0aed827cd28178e2f74e8a39bdc1e05/maven-changes-plugin/src/main/java/org/apache/maven/plugin/changes/ChangesMojo.java", "sha": "1efff639a172045e9029cdc15924bdd6577fed77", "changes": 2, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/maven-plugins/contents/maven-changes-plugin/src/main/java/org/apache/maven/plugin/changes/ChangesMojo.java?ref=787b2db1b0aed827cd28178e2f74e8a39bdc1e05", "patch": "@@ -41,7 +41,7 @@\n     /**\n      * Directory where reports will go.\n      *\n-     * @parameter expression=\"${project.build.directory}/site \"\n+     * @parameter expression=\"${project.reporting.outputDirectory}\"\n      * @required\n      * @readonly\n      */", "filename": "maven-changes-plugin/src/main/java/org/apache/maven/plugin/changes/ChangesMojo.java"}, {"additions": 1, "raw_url": "https://github.com/apache/maven-plugins/raw/787b2db1b0aed827cd28178e2f74e8a39bdc1e05/maven-changes-plugin/src/main/java/org/apache/maven/plugin/jira/JiraMojo.java", "blob_url": "https://github.com/apache/maven-plugins/blob/787b2db1b0aed827cd28178e2f74e8a39bdc1e05/maven-changes-plugin/src/main/java/org/apache/maven/plugin/jira/JiraMojo.java", "sha": "9336a97cbf000e9a9fa094f311480a2abb3b2ca4", "changes": 2, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/maven-plugins/contents/maven-changes-plugin/src/main/java/org/apache/maven/plugin/jira/JiraMojo.java?ref=787b2db1b0aed827cd28178e2f74e8a39bdc1e05", "patch": "@@ -39,7 +39,7 @@\n     /**\n      * Output Directory of the report.\n      * \n-     * @parameter expression=\"${project.build.directory}/site \"\n+     * @parameter expression=\"${project.reporting.outputDirectory}\"\n      * @required\n      * @readonly\n      */", "filename": "maven-changes-plugin/src/main/java/org/apache/maven/plugin/jira/JiraMojo.java"}, {"additions": 10, "raw_url": "https://github.com/apache/maven-plugins/raw/787b2db1b0aed827cd28178e2f74e8a39bdc1e05/maven-checkstyle-plugin/src/main/java/org/apache/maven/plugin/checkstyle/CheckstyleReport.java", "blob_url": "https://github.com/apache/maven-plugins/blob/787b2db1b0aed827cd28178e2f74e8a39bdc1e05/maven-checkstyle-plugin/src/main/java/org/apache/maven/plugin/checkstyle/CheckstyleReport.java", "sha": "8304981679cf7e24e06fb5cb074ccbff6d0b9209", "changes": 11, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/maven-plugins/contents/maven-checkstyle-plugin/src/main/java/org/apache/maven/plugin/checkstyle/CheckstyleReport.java?ref=787b2db1b0aed827cd28178e2f74e8a39bdc1e05", "patch": "@@ -387,7 +387,7 @@\n     /**\n      * Location of the Xrefs to link to.\n      *\n-     * @parameter default-value=\"${project.build.directory}/site/xref\"\n+     * @parameter default-value=\"${project.reporting.outputDirectory}/xref\"\n      */\n     private File xrefLocation;\n \n@@ -1036,4 +1036,13 @@ public boolean canGenerateReport()\n         // TODO: would be good to scan the files here\n         return sourceDirectory.exists();\n     }\n+\n+    /**\n+     * @see org.apache.maven.reporting.AbstractMavenReport#setReportOutputDirectory(java.io.File)\n+     */\n+    public void setReportOutputDirectory( File reportOutputDirectory )\n+    {\n+        super.setReportOutputDirectory( reportOutputDirectory );\n+        this.outputDirectory = reportOutputDirectory;\n+    }\n }", "filename": "maven-checkstyle-plugin/src/main/java/org/apache/maven/plugin/checkstyle/CheckstyleReport.java"}, {"additions": 15, "raw_url": "https://github.com/apache/maven-plugins/raw/787b2db1b0aed827cd28178e2f74e8a39bdc1e05/maven-clover-plugin/src/main/java/org/apache/maven/plugin/clover/CloverReportMojo.java", "blob_url": "https://github.com/apache/maven-plugins/blob/787b2db1b0aed827cd28178e2f74e8a39bdc1e05/maven-clover-plugin/src/main/java/org/apache/maven/plugin/clover/CloverReportMojo.java", "sha": "6f2c034d64f245b3ed02f2694826afff686bee55", "changes": 15, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/maven-plugins/contents/maven-clover-plugin/src/main/java/org/apache/maven/plugin/clover/CloverReportMojo.java?ref=787b2db1b0aed827cd28178e2f74e8a39bdc1e05", "patch": "@@ -389,4 +389,19 @@ public boolean canGenerateReport()\n \n         return canGenerate;\n     }\n+\n+    /**\n+     * @see org.apache.maven.reporting.AbstractMavenReport#setReportOutputDirectory(java.io.File)\n+     */\n+    public void setReportOutputDirectory( File reportOutputDirectory )\n+    {\n+        if ( ( reportOutputDirectory != null ) && ( !reportOutputDirectory.getAbsolutePath().endsWith( \"clover\" ) ) )\n+        {\n+            this.outputDirectory = new File( reportOutputDirectory, \"clover\" );\n+        }\n+        else\n+        {\n+            this.outputDirectory = reportOutputDirectory;\n+        }\n+    }\n }", "filename": "maven-clover-plugin/src/main/java/org/apache/maven/plugin/clover/CloverReportMojo.java"}, {"additions": 2, "raw_url": "https://github.com/apache/maven-plugins/raw/787b2db1b0aed827cd28178e2f74e8a39bdc1e05/maven-javadoc-plugin/src/main/java/org/apache/maven/plugin/javadoc/AbstractJavadocMojo.java", "blob_url": "https://github.com/apache/maven-plugins/blob/787b2db1b0aed827cd28178e2f74e8a39bdc1e05/maven-javadoc-plugin/src/main/java/org/apache/maven/plugin/javadoc/AbstractJavadocMojo.java", "sha": "d0d452df78a6d48c516f4321c02a5df4a9ce9021", "changes": 4, "status": "modified", "deletions": 2, "contents_url": "https://api.github.com/repos/apache/maven-plugins/contents/maven-javadoc-plugin/src/main/java/org/apache/maven/plugin/javadoc/AbstractJavadocMojo.java?ref=787b2db1b0aed827cd28178e2f74e8a39bdc1e05", "patch": "@@ -86,7 +86,7 @@\n      * Specifies the destination directory where javadoc saves the generated HTML files.\n      * See <a href=\"http://java.sun.com/j2se/1.4.2/docs/tooldocs/windows/javadoc.html#d\">d</a>.\n      *\n-     * @parameter expression=\"${destDir}\" alias=\"destDir\" default-value=\"${project.build.directory}/site/apidocs\"\n+     * @parameter expression=\"${destDir}\" alias=\"destDir\" default-value=\"${project.build.directory}/apidocs\"\n      * @required\n      */\n     protected File outputDirectory;\n@@ -1124,7 +1124,7 @@ private String getBottomText( String inceptionYear )\n         }\n         else\n         {\n-\t\tbottom = StringUtils.replace( bottom, \"{inceptionYear}-\", \"\" );\n+            bottom = StringUtils.replace( bottom, \"{inceptionYear}-\", \"\" );\n         }\n         return bottom;\n     }", "filename": "maven-javadoc-plugin/src/main/java/org/apache/maven/plugin/javadoc/AbstractJavadocMojo.java"}, {"additions": 27, "raw_url": "https://github.com/apache/maven-plugins/raw/787b2db1b0aed827cd28178e2f74e8a39bdc1e05/maven-javadoc-plugin/src/main/java/org/apache/maven/plugin/javadoc/JavadocReport.java", "blob_url": "https://github.com/apache/maven-plugins/blob/787b2db1b0aed827cd28178e2f74e8a39bdc1e05/maven-javadoc-plugin/src/main/java/org/apache/maven/plugin/javadoc/JavadocReport.java", "sha": "1da68824e5e1db25329b9ea650f96c78be47a19d", "changes": 41, "status": "modified", "deletions": 14, "contents_url": "https://api.github.com/repos/apache/maven-plugins/contents/maven-javadoc-plugin/src/main/java/org/apache/maven/plugin/javadoc/JavadocReport.java?ref=787b2db1b0aed827cd28178e2f74e8a39bdc1e05", "patch": "@@ -32,8 +32,8 @@\n import java.util.Locale;\n \n /**\n- * Generates documentation for the Java code in the project using the standard\n- * <a href=\"http://java.sun.com/j2se/javadoc/\">Javadoc Tool</a> tool.\n+ * Generates documentation for the Java code in the project using the standard <a\n+ * href=\"http://java.sun.com/j2se/javadoc/\">Javadoc Tool</a> tool.\n  *\n  * @author <a href=\"mailto:evenisse@apache.org\">Emmanuel Venisse</a>\n  * @author <a href=\"mailto:vincent.siveton@gmail.com\">Vincent Siveton</a>\n@@ -58,6 +58,12 @@\n      */\n     private Renderer siteRenderer;\n \n+    /**\n+     * Specifies the destination directory where javadoc saves the generated HTML files.\n+     *\n+     * @parameter expression=\"${project.reporting.outputDirectory}/apidocs\"\n+     * @required\n+     */\n     private File reportOutputDirectory;\n \n     // ----------------------------------------------------------------------\n@@ -103,6 +109,7 @@ protected Renderer getSiteRenderer()\n     public void generate( Sink sink, Locale locale )\n         throws MavenReportException\n     {\n+        outputDirectory = getReportOutputDirectory();\n         executeReport( locale );\n     }\n \n@@ -142,7 +149,7 @@ public boolean canGenerateReport()\n         }\n         return canGenerate;\n     }\n-    \n+\n     /**\n      * @see org.apache.maven.reporting.MavenReport#getCategoryName()\n      */\n@@ -158,8 +165,9 @@ public File getReportOutputDirectory()\n     {\n         if ( reportOutputDirectory == null )\n         {\n-            reportOutputDirectory = new File( getOutputDirectory() );\n+            return outputDirectory;\n         }\n+\n         return reportOutputDirectory;\n     }\n \n@@ -170,7 +178,14 @@ public File getReportOutputDirectory()\n      */\n     public void setReportOutputDirectory( File reportOutputDirectory )\n     {\n-        this.reportOutputDirectory = reportOutputDirectory;\n+        if ( ( reportOutputDirectory != null ) && ( !reportOutputDirectory.getAbsolutePath().endsWith( \"apidocs\" ) ) )\n+        {\n+            this.reportOutputDirectory = new File( reportOutputDirectory, \"apidocs\" );\n+        }\n+        else\n+        {\n+            this.reportOutputDirectory = reportOutputDirectory;\n+        }\n     }\n \n     /**\n@@ -181,26 +196,24 @@ public void execute()\n     {\n         try\n         {\n-            String outputDirectory = getOutputDirectory();\n-\n-            SiteRendererSink sink = siteRenderer.createSink( new File( outputDirectory ), getOutputName() + \".html\" );\n+            SiteRendererSink sink = siteRenderer.createSink( getReportOutputDirectory(), getOutputName() + \".html\" );\n \n             generate( sink, Locale.getDefault() );\n         }\n         catch ( RendererException e )\n         {\n-            throw new MojoExecutionException(\n-                \"An error has occurred in \" + getName( Locale.ENGLISH ) + \" report generation.\", e );\n+            throw new MojoExecutionException( \"An error has occurred in \" + getName( Locale.ENGLISH )\n+                + \" report generation.\", e );\n         }\n         catch ( IOException e )\n         {\n-            throw new MojoExecutionException(\n-                \"An error has occurred in \" + getName( Locale.ENGLISH ) + \" report generation.\", e );\n+            throw new MojoExecutionException( \"An error has occurred in \" + getName( Locale.ENGLISH )\n+                + \" report generation.\", e );\n         }\n         catch ( MavenReportException e )\n         {\n-            throw new MojoExecutionException(\n-                \"An error has occurred in \" + getName( Locale.ENGLISH ) + \" report generation.\", e );\n+            throw new MojoExecutionException( \"An error has occurred in \" + getName( Locale.ENGLISH )\n+                + \" report generation.\", e );\n         }\n     }\n }", "filename": "maven-javadoc-plugin/src/main/java/org/apache/maven/plugin/javadoc/JavadocReport.java"}, {"additions": 1, "raw_url": "https://github.com/apache/maven-plugins/raw/787b2db1b0aed827cd28178e2f74e8a39bdc1e05/maven-jxr-plugin/src/main/java/org/apache/maven/plugin/jxr/AbstractJxrReport.java", "blob_url": "https://github.com/apache/maven-plugins/blob/787b2db1b0aed827cd28178e2f74e8a39bdc1e05/maven-jxr-plugin/src/main/java/org/apache/maven/plugin/jxr/AbstractJxrReport.java", "sha": "90fc8053f55a4641b7d0ebde8126e939c842965e", "changes": 2, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/maven-plugins/contents/maven-jxr-plugin/src/main/java/org/apache/maven/plugin/jxr/AbstractJxrReport.java?ref=787b2db1b0aed827cd28178e2f74e8a39bdc1e05", "patch": "@@ -61,7 +61,7 @@\n     /**\n      * Output folder where the main page of the report will be generated.\n      *\n-     * @parameter expression=\"${project.build.directory}/site\"\n+     * @parameter expression=\"${project.reporting.outputDirectory}\"\n      * @required\n      */\n     private String outputDirectory;", "filename": "maven-jxr-plugin/src/main/java/org/apache/maven/plugin/jxr/AbstractJxrReport.java"}, {"additions": 17, "raw_url": "https://github.com/apache/maven-plugins/raw/787b2db1b0aed827cd28178e2f74e8a39bdc1e05/maven-jxr-plugin/src/main/java/org/apache/maven/plugin/jxr/JxrReport.java", "blob_url": "https://github.com/apache/maven-plugins/blob/787b2db1b0aed827cd28178e2f74e8a39bdc1e05/maven-jxr-plugin/src/main/java/org/apache/maven/plugin/jxr/JxrReport.java", "sha": "c8c85c2122e62b125dab02408b604e8e28a48d96", "changes": 19, "status": "modified", "deletions": 2, "contents_url": "https://api.github.com/repos/apache/maven-plugins/contents/maven-jxr-plugin/src/main/java/org/apache/maven/plugin/jxr/JxrReport.java?ref=787b2db1b0aed827cd28178e2f74e8a39bdc1e05", "patch": "@@ -46,14 +46,14 @@\n     /**\n      * Folder where the Xref files will be copied to.\n      *\n-     * @parameter expression=\"${project.build.directory}/site/xref\"\n+     * @parameter expression=\"${project.reporting.outputDirectory}/xref\"\n      */\n     private String destDir;\n \n     /**\n      * Folder where Javadoc is generated for this project.\n      *\n-     * @parameter expression=\"${project.build.directory}/site/apidocs\"\n+     * @parameter expression=\"${project.reporting.outputDirectory}/apidocs\"\n      */\n     private File javadocDir;\n \n@@ -156,4 +156,19 @@ protected String getJavadocLocation()\n         }\n         return location;\n     }\n+\n+    /**\n+     * @see org.apache.maven.reporting.AbstractMavenReport#setReportOutputDirectory(java.io.File)\n+     */\n+    public void setReportOutputDirectory( File reportOutputDirectory )\n+    {\n+        if ( ( reportOutputDirectory != null ) && ( !reportOutputDirectory.getAbsolutePath().endsWith( \"xref\" ) ) )\n+        {\n+            this.destDir = new File( reportOutputDirectory, \"xref\" ).getAbsolutePath();\n+        }\n+        else\n+        {\n+            this.destDir = reportOutputDirectory.getAbsolutePath();\n+        }\n+    }\n }", "filename": "maven-jxr-plugin/src/main/java/org/apache/maven/plugin/jxr/JxrReport.java"}, {"additions": 17, "raw_url": "https://github.com/apache/maven-plugins/raw/787b2db1b0aed827cd28178e2f74e8a39bdc1e05/maven-jxr-plugin/src/main/java/org/apache/maven/plugin/jxr/JxrTestReport.java", "blob_url": "https://github.com/apache/maven-plugins/blob/787b2db1b0aed827cd28178e2f74e8a39bdc1e05/maven-jxr-plugin/src/main/java/org/apache/maven/plugin/jxr/JxrTestReport.java", "sha": "c935892c7fe9e7e32074ebadcfe6e6d8f76bee77", "changes": 18, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/maven-plugins/contents/maven-jxr-plugin/src/main/java/org/apache/maven/plugin/jxr/JxrTestReport.java?ref=787b2db1b0aed827cd28178e2f74e8a39bdc1e05", "patch": "@@ -18,6 +18,7 @@\n \n import org.apache.maven.project.MavenProject;\n \n+import java.io.File;\n import java.util.List;\n import java.util.Locale;\n \n@@ -44,7 +45,7 @@\n     /**\n      * Folder where the Xref files will be copied to.\n      *\n-     * @parameter expression=\"${project.build.directory}/site/xref-test\"\n+     * @parameter expression=\"${project.reporting.outputDirectory}/xref-test\"\n      */\n     private String destDir;\n \n@@ -110,4 +111,19 @@ protected String getJavadocLocation()\n         // Don't link Javadoc\n         return null;\n     }\n+\n+    /**\n+     * @see org.apache.maven.reporting.AbstractMavenReport#setReportOutputDirectory(java.io.File)\n+     */\n+    public void setReportOutputDirectory( File reportOutputDirectory )\n+    {\n+        if ( ( reportOutputDirectory != null ) && ( !reportOutputDirectory.getAbsolutePath().endsWith( \"xref-test\" ) ) )\n+        {\n+            this.destDir = new File( reportOutputDirectory, \"xref-test\" ).getAbsolutePath();\n+        }\n+        else\n+        {\n+            this.destDir = reportOutputDirectory.getAbsolutePath();\n+        }\n+    }\n }", "filename": "maven-jxr-plugin/src/main/java/org/apache/maven/plugin/jxr/JxrTestReport.java"}, {"additions": 1, "raw_url": "https://github.com/apache/maven-plugins/raw/787b2db1b0aed827cd28178e2f74e8a39bdc1e05/maven-pmd-plugin/src/main/java/org/apache/maven/plugin/pmd/AbstractPmdReport.java", "blob_url": "https://github.com/apache/maven-plugins/blob/787b2db1b0aed827cd28178e2f74e8a39bdc1e05/maven-pmd-plugin/src/main/java/org/apache/maven/plugin/pmd/AbstractPmdReport.java", "sha": "e3270775bf951cfff33114809ad55ae864adf6d1", "changes": 2, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/maven-plugins/contents/maven-pmd-plugin/src/main/java/org/apache/maven/plugin/pmd/AbstractPmdReport.java?ref=787b2db1b0aed827cd28178e2f74e8a39bdc1e05", "patch": "@@ -92,7 +92,7 @@\n     /**\n      * Location of the Xrefs to link to.\n      *\n-     * @parameter default-value=\"${project.build.directory}/site/xref\"\n+     * @parameter default-value=\"${project.reporting.outputDirectory}/xref\"\n      */\n     private File xrefLocation;\n ", "filename": "maven-pmd-plugin/src/main/java/org/apache/maven/plugin/pmd/AbstractPmdReport.java"}, {"additions": 144, "raw_url": "https://github.com/apache/maven-plugins/raw/787b2db1b0aed827cd28178e2f74e8a39bdc1e05/maven-project-info-reports-plugin/src/main/java/org/apache/maven/report/projectinfo/DependenciesReport.java", "blob_url": "https://github.com/apache/maven-plugins/blob/787b2db1b0aed827cd28178e2f74e8a39bdc1e05/maven-project-info-reports-plugin/src/main/java/org/apache/maven/report/projectinfo/DependenciesReport.java", "sha": "c356c73b8184a891e3b1e45a16fa5db3414cee6e", "changes": 234, "status": "modified", "deletions": 90, "contents_url": "https://api.github.com/repos/apache/maven-plugins/contents/maven-project-info-reports-plugin/src/main/java/org/apache/maven/report/projectinfo/DependenciesReport.java?ref=787b2db1b0aed827cd28178e2f74e8a39bdc1e05", "patch": "@@ -34,6 +34,7 @@\n import org.apache.maven.artifact.repository.ArtifactRepository;\n import org.apache.maven.artifact.repository.ArtifactRepositoryPolicy;\n import org.apache.maven.artifact.resolver.ArtifactCollector;\n+import org.apache.maven.artifact.resolver.ArtifactNotFoundException;\n import org.apache.maven.artifact.resolver.ArtifactResolutionException;\n import org.apache.maven.artifact.versioning.InvalidVersionSpecificationException;\n import org.apache.maven.artifact.versioning.VersionRange;\n@@ -44,6 +45,7 @@\n import org.apache.maven.project.MavenProject;\n import org.apache.maven.project.MavenProjectBuilder;\n import org.apache.maven.project.ProjectBuildingException;\n+import org.apache.maven.project.artifact.InvalidDependencyVersionException;\n import org.apache.maven.report.projectinfo.ReportResolutionListener.Node;\n import org.apache.maven.reporting.AbstractMavenReportRenderer;\n import org.apache.maven.settings.Proxy;\n@@ -67,6 +69,7 @@\n import org.codehaus.plexus.context.Context;\n import org.codehaus.plexus.context.ContextException;\n import org.codehaus.plexus.personality.plexus.lifecycle.phase.Contextualizable;\n+import org.codehaus.plexus.util.StringUtils;\n \n /**\n  * Generates the Project Dependencies report.\n@@ -97,7 +100,7 @@\n      * @component\n      */\n     private ArtifactCollector collector;\n-    \n+\n     /**\n      * @component\n      */\n@@ -111,19 +114,19 @@\n      * @readonly\n      */\n     private Settings settings;\n-    \n+\n     /**\n      * @parameter expression=\"${dependency.details.enabled}\" default-value=\"true\"\n      */\n     private boolean dependencyDetailsEnabled;\n-    \n+\n     /**\n      * @parameter expression=\"${dependency.locations.enabled}\" default-value=\"false\"\n      */\n     private boolean dependencyLocationsEnabled;\n-    \n+\n     private PlexusContainer container;\n-    \n+\n     /**\n      * Will be filled with license name / list of projects.\n      */\n@@ -173,6 +176,11 @@ private ReportResolutionListener resolveProject()\n \n         try\n         {\n+            // TODO site:run Why do we need to resolve this...\n+            if ( project.getDependencyArtifacts() == null )\n+            {\n+                project.setDependencyArtifacts( project.createArtifacts( factory, null, null ) );\n+            }\n             collector.collect( project.getDependencyArtifacts(), project.getArtifact(), managedVersions,\n                                localRepository, project.getRemoteArtifactRepositories(), artifactMetadataSource, null,\n                                Collections.singletonList( listener ) );\n@@ -181,6 +189,10 @@ private ReportResolutionListener resolveProject()\n         {\n             getLog().error( \"An error occurred while resolving project dependencies.\", e );\n         }\n+        catch ( InvalidDependencyVersionException e )\n+        {\n+            getLog().error( \"An error occurred while resolving project dependencies.\", e );\n+        }\n \n         return listener;\n     }\n@@ -206,8 +218,8 @@ private Map createManagedVersionMap( String projectId, DependencyManagement depe\n                 }\n                 catch ( InvalidVersionSpecificationException e )\n                 {\n-                    throw new ProjectBuildingException( projectId, \"Unable to parse version '\" + d.getVersion() +\n-                        \"' for dependency '\" + d.getManagementKey() + \"': \" + e.getMessage(), e );\n+                    throw new ProjectBuildingException( projectId, \"Unable to parse version '\" + d.getVersion()\n+                        + \"' for dependency '\" + d.getManagementKey() + \"': \" + e.getMessage(), e );\n                 }\n             }\n         }\n@@ -240,41 +252,43 @@ public void contextualize( Context context )\n \n         public Dependencies( MavenProject project, ReportResolutionListener listener )\n         {\n-            /* Workaround to ensure proper File objects in the \n-             * Artifacts from the ReportResolutionListener\n+            /*\n+             * Workaround to ensure proper File objects in the Artifacts from the ReportResolutionListener\n              */\n             Map projectMap = new HashMap();\n             Iterator it = project.getArtifacts().iterator();\n-            while(it.hasNext())\n+            while ( it.hasNext() )\n             {\n                 Artifact artifact = (Artifact) it.next();\n                 projectMap.put( ArtifactUtils.versionlessKey( artifact ), artifact );\n             }\n-            \n-            mapArtifactFiles(listener.getRootNode(), projectMap);\n-            \n+\n+            mapArtifactFiles( listener.getRootNode(), projectMap );\n+\n             this.projectDependencies = listener.getRootNode().getChildren();\n             this.resolvedDependencies = listener;\n         }\n \n         private void mapArtifactFiles( Node node, Map projectMap )\n         {\n             List childs = node.getChildren();\n-            if( (childs == null) || childs.isEmpty() ) {\n+            if ( ( childs == null ) || childs.isEmpty() )\n+            {\n                 return;\n             }\n-            \n+\n             Iterator it = childs.iterator();\n-            while(it.hasNext())\n+            while ( it.hasNext() )\n             {\n                 Node anode = (ReportResolutionListener.Node) it.next();\n                 String key = ArtifactUtils.versionlessKey( anode.getArtifact() );\n                 Artifact projartifact = (Artifact) projectMap.get( key );\n-                if( projartifact != null ) {\n-                    anode.getArtifact().setFile(  projartifact.getFile() );\n+                if ( projartifact != null )\n+                {\n+                    anode.getArtifact().setFile( projartifact.getFile() );\n                 }\n-                \n-                mapArtifactFiles(anode, projectMap);\n+\n+                mapArtifactFiles( anode, projectMap );\n             }\n         }\n \n@@ -422,12 +436,12 @@ private void renderDependenciesForAllScopes( String[] tableHeader, Map dependenc\n                                         (List) dependenciesByScope.get( Artifact.SCOPE_COMPILE ), tableHeader );\n             renderDependenciesForScope( Artifact.SCOPE_RUNTIME,\n                                         (List) dependenciesByScope.get( Artifact.SCOPE_RUNTIME ), tableHeader );\n-            renderDependenciesForScope( Artifact.SCOPE_TEST, \n-                                        (List) dependenciesByScope.get( Artifact.SCOPE_TEST ), tableHeader );\n-            renderDependenciesForScope( Artifact.SCOPE_PROVIDED, \n-                                        (List) dependenciesByScope.get( Artifact.SCOPE_PROVIDED ), tableHeader );\n-            renderDependenciesForScope( Artifact.SCOPE_SYSTEM, \n-                                        (List) dependenciesByScope.get( Artifact.SCOPE_SYSTEM ), tableHeader );\n+            renderDependenciesForScope( Artifact.SCOPE_TEST, (List) dependenciesByScope.get( Artifact.SCOPE_TEST ),\n+                                        tableHeader );\n+            renderDependenciesForScope( Artifact.SCOPE_PROVIDED, (List) dependenciesByScope\n+                .get( Artifact.SCOPE_PROVIDED ), tableHeader );\n+            renderDependenciesForScope( Artifact.SCOPE_SYSTEM, (List) dependenciesByScope.get( Artifact.SCOPE_SYSTEM ),\n+                                        tableHeader );\n         }\n \n         private void renderSectionProjectTransitiveDependencies( Dependencies dependencies )\n@@ -459,7 +473,7 @@ private void renderSectionProjectDependencyGraph()\n \n             // === Section: Dependency Tree\n             renderSectionDependencyTree();\n-            \n+\n             // === Section: Dependency Listings\n             renderSectionDependencyListing();\n \n@@ -468,7 +482,7 @@ private void renderSectionProjectDependencyGraph()\n \n         private void renderSectionDependencyTree()\n         {\n-            //for Dependencies Graph Tree\n+            // for Dependencies Graph Tree\n             startSection( getReportString( \"report.dependencies.graph.tree.title\" ) );\n             sink.paragraph();\n             sink.list();\n@@ -497,7 +511,7 @@ private void renderSectionDependencyFileDetails( Dependencies dependencies )\n \n             String[] tableHeader = new String[] { filename, size, entries, classes, packages, jdkrev, debug, sealed };\n             tableHeader( tableHeader );\n-            \n+\n             int totaldeps = 0;\n             long totaldepsize = 0;\n             int totalentries = 0;\n@@ -506,15 +520,37 @@ private void renderSectionDependencyFileDetails( Dependencies dependencies )\n             double highestjdk = 0.0;\n             int totaldebug = 0;\n             int totalsealed = 0;\n-            \n-            DecimalFormat decFormat = new DecimalFormat(\"#,##0\");\n+\n+            DecimalFormat decFormat = new DecimalFormat( \"#,##0\" );\n \n             for ( Iterator it = alldeps.iterator(); it.hasNext(); )\n             {\n                 Artifact artifact = (Artifact) it.next();\n-                \n+\n                 if ( !Artifact.SCOPE_SYSTEM.equals( artifact.getScope() ) )\n                 {\n+                    // TODO site:run Why do we need to resolve this...\n+                    if ( artifact.getFile() == null )\n+                    {\n+                        try\n+                        {\n+                            List remoteRepositories = new ArrayList();\n+                            remoteRepositories.addAll( project.getPluginArtifactRepositories() );\n+                            remoteRepositories.addAll( project.getRemoteArtifactRepositories() );\n+                            resolver.resolve( artifact, remoteRepositories, localRepository );\n+                        }\n+                        catch ( ArtifactResolutionException e )\n+                        {\n+                            getLog().error( \"Artifact: \" + artifact.getId() + \" has no file.\", e );\n+                            continue;\n+                        }\n+                        catch ( ArtifactNotFoundException e )\n+                        {\n+                            getLog().error( \"Artifact: \" + artifact.getId() + \" has no file.\", e );\n+                            continue;\n+                        }\n+                    }\n+\n                     if ( artifact.getFile() == null )\n                     {\n                         getLog().error( \"Artifact: \" + artifact.getId() + \" has no file.\" );\n@@ -613,7 +649,7 @@ private void renderSectionDependencyFileDetails( Dependencies dependencies )\n                     }\n                 }\n             }\n-            \n+\n             tableRow( new String[] {\n                 \"\" + totaldeps + \" total dependencies\",\n                 decFormat.format( totaldepsize ),\n@@ -627,47 +663,47 @@ private void renderSectionDependencyFileDetails( Dependencies dependencies )\n             endTable();\n             endSection();\n         }\n-        \n+\n         private void populateRepositoryMap( Map repos, List rawRepos )\n         {\n             Iterator it = rawRepos.iterator();\n-            while(it.hasNext())\n+            while ( it.hasNext() )\n             {\n                 ArtifactRepository repo = (ArtifactRepository) it.next();\n                 repos.put( repo.getId(), repo );\n             }\n         }\n-        \n+\n         private void renderSectionDependencyRepositoryLocations( Dependencies dependencies )\n         {\n             startSection( getReportString( \"report.dependencies.repo.locations.title\" ) );\n-            \n+\n             // Collect Alphabetical Dependencies\n             List alldeps = dependencies.getAllDependencies();\n             Collections.sort( alldeps, getArtifactComparator() );\n-            \n+\n             // Collect Repositories\n             Map repoMap = new HashMap();\n-            \n+\n             populateRepositoryMap( repoMap, project.getRemoteArtifactRepositories() );\n-            \n+\n             for ( Iterator it = alldeps.iterator(); it.hasNext(); )\n             {\n                 Artifact artifact = (Artifact) it.next();\n                 try\n                 {\n                     MavenProject artifactProject = getMavenProjectFromRepository( artifact, localRepository );\n-                    \n+\n                     populateRepositoryMap( repoMap, artifactProject.getRemoteArtifactRepositories() );\n                 }\n                 catch ( ProjectBuildingException e )\n                 {\n                     getLog().warn( \"Unable to create maven project from repository.\", e );\n                 }\n             }\n-            \n+\n             // Render Repository List\n-            \n+\n             startTable();\n             String repoid = getReportString( \"report.dependencies.repo.locations.column.repoid\" );\n             String url = getReportString( \"report.dependencies.repo.locations.column.url\" );\n@@ -676,13 +712,13 @@ private void renderSectionDependencyRepositoryLocations( Dependencies dependenci\n \n             String[] tableHeader = new String[] { repoid, url, release, snapshot };\n             tableHeader( tableHeader );\n-            \n+\n             String releaseEnabled = getReportString( \"report.dependencies.repo.locations.cell.release.enabled\" );\n             String releaseDisabled = getReportString( \"report.dependencies.repo.locations.cell.release.disabled\" );\n-            \n+\n             String snapshotEnabled = getReportString( \"report.dependencies.repo.locations.cell.snapshot.enabled\" );\n             String snapshotDisabled = getReportString( \"report.dependencies.repo.locations.cell.snapshot.disabled\" );\n-            \n+\n             for ( Iterator it = repoMap.keySet().iterator(); it.hasNext(); )\n             {\n                 String key = (String) it.next();\n@@ -696,100 +732,102 @@ private void renderSectionDependencyRepositoryLocations( Dependencies dependenci\n                 sink.text( repo.getUrl() );\n                 sink.link_();\n                 sink.tableCell_();\n-                \n+\n                 ArtifactRepositoryPolicy releasePolicy = repo.getReleases();\n                 tableCell( releasePolicy.isEnabled() ? releaseEnabled : releaseDisabled );\n \n                 ArtifactRepositoryPolicy snapshotPolicy = repo.getSnapshots();\n                 tableCell( snapshotPolicy.isEnabled() ? snapshotEnabled : snapshotDisabled );\n                 sink.tableRow_();\n             }\n-            \n+\n             endTable();\n-            \n+\n             // Render Aritfact Breakdown.\n-            \n+\n             sink.paragraph();\n             sink.text( getReportString( \"report.dependencies.repo.locations.artifact.breakdown\" ) );\n             sink.paragraph_();\n-            \n+\n             List repoIdList = new ArrayList( repoMap.keySet() );\n \n             startTable();\n             String artifact = getReportString( \"report.dependencies.repo.locations.column.artifact\" );\n             tableHeader = new String[repoIdList.size() + 1];\n             tableHeader[0] = artifact;\n             int idnum = 1;\n-            \n-            for (Iterator it = repoIdList.iterator(); it.hasNext();)\n+\n+            for ( Iterator it = repoIdList.iterator(); it.hasNext(); )\n             {\n                 String id = (String) it.next();\n                 tableHeader[idnum++] = id;\n             }\n-            \n+\n             tableHeader( tableHeader );\n-            \n+\n             for ( Iterator it = alldeps.iterator(); it.hasNext(); )\n             {\n                 Artifact dependency = (Artifact) it.next();\n-                \n+\n                 if ( !Artifact.SCOPE_SYSTEM.equals( dependency.getScope() ) )\n                 {\n                     sink.tableRow();\n-                    \n+\n                     tableCell( dependency.getId() );\n-                    \n-                    for(Iterator itrepo = repoIdList.iterator(); itrepo.hasNext();)\n+\n+                    for ( Iterator itrepo = repoIdList.iterator(); itrepo.hasNext(); )\n                     {\n                         String repokey = (String) itrepo.next();\n                         ArtifactRepository repo = (ArtifactRepository) repoMap.get( repokey );\n-                        \n+\n                         String depUrl = repo.getUrl() + \"/\" + repo.pathOf( dependency );\n-                        \n-                        if(dependencyExistsInRepo(repo, dependency))\n+\n+                        if ( dependencyExistsInRepo( repo, dependency ) )\n                         {\n                             sink.tableCell();\n                             sink.link( depUrl );\n-                            \n+\n                             sink.figure();\n                             sink.figureCaption();\n                             sink.text( \"Found at \" + repo.getUrl() );\n                             sink.figureCaption_();\n                             sink.figureGraphics( \"images/icon_success_sml.gif\" );\n                             sink.figure_();\n-                            \n+\n                             sink.link_();\n                             sink.tableCell_();\n-                        } else {\n+                        }\n+                        else\n+                        {\n                             sink.tableCell();\n-                            sink.text(\"-\");\n+                            sink.text( \"-\" );\n                             sink.tableCell_();\n                         }\n                     }\n-                    \n+\n                     sink.tableRow_();\n                 }\n             }\n-            \n+\n             endTable();\n-            \n+\n             endSection();\n         }\n-        \n+\n         private boolean dependencyExistsInRepo( ArtifactRepository repo, Artifact artifact )\n         {\n             Wagon wagon;\n-            \n+\n             try\n             {\n-                wagon = wagonManager.getWagon(repo.getProtocol());\n+                wagon = wagonManager.getWagon( repo.getProtocol() );\n             }\n             catch ( UnsupportedProtocolException e )\n             {\n                 getLog().error( \"Unsupported protocol: '\" + repo.getProtocol() + \"'\", e );\n                 return false;\n             }\n-            \n+\n             try\n             {\n                 Debug debug = new Debug();\n@@ -845,7 +883,7 @@ private boolean dependencyExistsInRepo( ArtifactRepository repo, Artifact artifa\n                 }\n             }\n         }\n-        \n+\n         /**\n          * Convenience method to map a <code>Proxy</code> object from the user system settings to a\n          * <code>ProxyInfo</code> object.\n@@ -869,15 +907,15 @@ public ProxyInfo getProxyInfo( Settings settings )\n             }\n \n             return proxyInfo;\n-        }        \n+        }\n \n         private void renderSectionDependencyListing()\n         {\n             startSection( getReportString( \"report.dependencies.graph.tables.title\" ) );\n             printDescriptionsAndURLs( listener.getRootNode() );\n             endSection();\n         }\n-        \n+\n         private void renderSectionDependencyLicenseListing()\n         {\n             startSection( getReportString( \"report.dependencies.graph.tables.licenses\" ) );\n@@ -937,8 +975,13 @@ else if ( !a1.isOptional() && a2.isOptional() )\n \n         private String[] getArtifactRow( Artifact artifact )\n         {\n-            return new String[]{artifact.getGroupId(), artifact.getArtifactId(), artifact.getVersion(),\n-                artifact.getClassifier(), artifact.getType(), artifact.isOptional() ? \"(optional)\" : \" \"};\n+            return new String[] {\n+                artifact.getGroupId(),\n+                artifact.getArtifactId(),\n+                artifact.getVersion(),\n+                artifact.getClassifier(),\n+                artifact.getType(),\n+                artifact.isOptional() ? \"(optional)\" : \" \" };\n         }\n \n         private void printDependencyListing( ReportResolutionListener.Node node )\n@@ -972,7 +1015,7 @@ private void printDescriptionsAndURLs( ReportResolutionListener.Node node )\n         {\n             Artifact artifact = node.getArtifact();\n             String id = artifact.getDependencyConflictId();\n-            \n+\n             String unknownLicenseMessage = getReportString( \"report.dependencies.graph.tables.unknown\" );\n \n             if ( !Artifact.SCOPE_SYSTEM.equals( artifact.getScope() ) )\n@@ -987,7 +1030,7 @@ private void printDescriptionsAndURLs( ReportResolutionListener.Node node )\n \n                     sink.paragraph();\n                     sink.anchor( id );\n-                    //                     startSection( artifactName );\n+                    // startSection( artifactName );\n                     sink.bold();\n                     sink.text( artifactName );\n                     sink.bold_();\n@@ -1036,8 +1079,12 @@ private void printDescriptionsAndURLs( ReportResolutionListener.Node node )\n                             {\n                                 projectsWithSameLicense = new ArrayList();\n                                 licenseMap.put( licenseName, projectsWithSameLicense );\n+\n+                            }\n+                            if ( !projectsWithSameLicense.contains( artifactName ) )\n+                            {\n+                                projectsWithSameLicense.add( artifactName );\n                             }\n-                            projectsWithSameLicense.add( artifactName );\n \n                         }\n                     }\n@@ -1051,11 +1098,14 @@ private void printDescriptionsAndURLs( ReportResolutionListener.Node node )\n                             projectsWithSameLicense = new ArrayList();\n                             licenseMap.put( unknownLicenseMessage, projectsWithSameLicense );\n                         }\n-                        projectsWithSameLicense.add( artifactName );\n+                        if ( !projectsWithSameLicense.contains( artifactName ) )\n+                        {\n+                            projectsWithSameLicense.add( artifactName );\n+                        }\n                     }\n                     sink.paragraph_();\n \n-                    //                    endSection();\n+                    // endSection();\n                     sink.horizontalRule();\n                 }\n                 catch ( ProjectBuildingException e )\n@@ -1084,15 +1134,22 @@ private void printDescriptionsAndURLs( ReportResolutionListener.Node node )\n                 sink.paragraph_();\n             }\n         }\n-        \n+\n         private void printGroupedLicenses()\n         {\n             for ( Iterator iter = licenseMap.keySet().iterator(); iter.hasNext(); )\n             {\n                 String licenseName = (String) iter.next();\n                 sink.paragraph();\n                 sink.bold();\n-                sink.text( licenseName );\n+                if ( StringUtils.isEmpty( licenseName ) )\n+                {\n+                    sink.text( i18n.getString( \"project-info-report\", locale, \"report.dependencies.unamed\" ) );\n+                }\n+                else\n+                {\n+                    sink.text( licenseName );\n+                }\n                 sink.text( \": \" );\n                 sink.bold_();\n \n@@ -1115,13 +1172,12 @@ private void printGroupedLicenses()\n         }\n \n         /**\n-         * Get the <code>Maven project</code> from the repository depending\n-         * the <code>Artifact</code> given.\n+         * Get the <code>Maven project</code> from the repository depending the <code>Artifact</code> given.\n          *\n          * @param artifact an artifact\n          * @return the Maven project for the given artifact\n          * @throws org.apache.maven.project.ProjectBuildingException\n-         *          if any\n+         *             if any\n          */\n         private MavenProject getMavenProjectFromRepository( Artifact artifact, ArtifactRepository localRepository )\n             throws ProjectBuildingException\n@@ -1145,7 +1201,5 @@ private String getReportString( String key )\n         {\n             return i18n.getString( \"project-info-report\", locale, key );\n         }\n-\n     }\n-\n }", "filename": "maven-project-info-reports-plugin/src/main/java/org/apache/maven/report/projectinfo/DependenciesReport.java"}, {"additions": 1, "raw_url": "https://github.com/apache/maven-plugins/raw/787b2db1b0aed827cd28178e2f74e8a39bdc1e05/maven-project-info-reports-plugin/src/main/resources/project-info-report.properties", "blob_url": "https://github.com/apache/maven-plugins/blob/787b2db1b0aed827cd28178e2f74e8a39bdc1e05/maven-project-info-reports-plugin/src/main/resources/project-info-report.properties", "sha": "104d9e501a17ecfa7dbad3b8a031d49224c3d887", "changes": 1, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/maven-plugins/contents/maven-project-info-reports-plugin/src/main/resources/project-info-report.properties?ref=787b2db1b0aed827cd28178e2f74e8a39bdc1e05", "patch": "@@ -81,6 +81,7 @@ report.dependencies.repo.locations.column.snapshot                 = Snapshot\n report.dependencies.repo.locations.column.url                      = URL\n report.dependencies.repo.locations.title                           = Dependency Repository Locations\n report.dependencies.title                                          = Project Dependencies\n+report.dependencies.unamed                                         = Unamed\n report.dependency-convergence.convergence.caption                  = Dependencies used in sub-projects\n report.dependency-convergence.description                          = This document presents the convergence of dependency versions across the entire project, and its sub modules.\n report.dependency-convergence.legend                               = Legend", "filename": "maven-project-info-reports-plugin/src/main/resources/project-info-report.properties"}, {"additions": 2, "raw_url": "https://github.com/apache/maven-plugins/raw/787b2db1b0aed827cd28178e2f74e8a39bdc1e05/maven-project-info-reports-plugin/src/main/resources/project-info-report_fr.properties", "blob_url": "https://github.com/apache/maven-plugins/blob/787b2db1b0aed827cd28178e2f74e8a39bdc1e05/maven-project-info-reports-plugin/src/main/resources/project-info-report_fr.properties", "sha": "9e8bab35996824d529a3f225f25bb3b12dab1007", "changes": 3, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/maven-plugins/contents/maven-project-info-reports-plugin/src/main/resources/project-info-report_fr.properties?ref=787b2db1b0aed827cd28178e2f74e8a39bdc1e05", "patch": "@@ -47,7 +47,7 @@ report.dependencies.graph.tables.column.version                    = Version\n report.dependencies.graph.tables.licenses                          = License\n report.dependencies.graph.tables.notAttached                       = Non attach\\u00E9e\n report.dependencies.graph.tables.title                             = Liste des d\\u00E9pendances\n-report.dependencies.graph.tables.unknown                           = \n+report.dependencies.graph.tables.unknown                           = Inconnu\n report.dependencies.graph.title                                    = Graphe des d\\u00E9pendances du projet\n report.dependencies.graph.tree.title                               = Arbre des d\\u00E9pendances\n report.dependencies.graph.url.default                              = Aucun URL d\\u00E9fini\n@@ -60,6 +60,7 @@ report.dependencies.intro.test                                     = Ce qui suit\n report.dependencies.name                                           = D\\u00E9pendances\n report.dependencies.nolist                                         = Il n'y a aucune d\\u00E9pendance pour ce projet. C'est une application autonome qui ne d\\u00E9pend d'aucun autre projet.\n report.dependencies.title                                          = D\\u00E9pendances du projet\n+report.dependencies.unamed                                         = Non-sp\\u00E9cifi\\u00E9\n report.dependency-convergence.convergence.caption                  = D\\u00E9pendances utilis\\u00E9es dans les sous projets\n report.dependency-convergence.description                          = Ce document pr\\u00E9sente la convergence des versions des d\\u00E9pendances \\u00E0 travers le projet entier, et de ses sous modules.\n report.dependency-convergence.legend                               = L\\u00E9gende", "filename": "maven-project-info-reports-plugin/src/main/resources/project-info-report_fr.properties"}, {"additions": 12, "raw_url": "https://github.com/apache/maven-plugins/raw/787b2db1b0aed827cd28178e2f74e8a39bdc1e05/maven-site-plugin/src/main/java/org/apache/maven/plugins/site/ReportDocumentRenderer.java", "blob_url": "https://github.com/apache/maven-plugins/blob/787b2db1b0aed827cd28178e2f74e8a39bdc1e05/maven-site-plugin/src/main/java/org/apache/maven/plugins/site/ReportDocumentRenderer.java", "sha": "7f16981bbe466b4398988e4822ebaf134e87f31f", "changes": 17, "status": "modified", "deletions": 5, "contents_url": "https://api.github.com/repos/apache/maven-plugins/contents/maven-site-plugin/src/main/java/org/apache/maven/plugins/site/ReportDocumentRenderer.java?ref=787b2db1b0aed827cd28178e2f74e8a39bdc1e05", "patch": "@@ -28,7 +28,6 @@\n import org.apache.maven.reporting.MavenReport;\n import org.apache.maven.reporting.MavenMultiPageReport;\n import org.apache.maven.reporting.MavenReportException;\n-import org.apache.maven.reporting.MavenReport;\n \n import java.io.FileNotFoundException;\n import java.io.IOException;\n@@ -68,14 +67,14 @@ public ReportDocumentRenderer( MavenReport report, RenderingContext renderingCon\n         private File outputDir;\n \n         private String outputName;\n-            \n+\n         public MySink( File outputDir, String outputName, RenderingContext ctx )\n         {\n             super( ctx );\n             this.outputName = outputName;\n-        this.outputDir = outputDir;\n+            this.outputDir = outputDir;\n         }\n-        \n+\n         public String getOutputName()\n         {\n             return outputName;\n@@ -93,7 +92,7 @@ public File getOutputDir()\n         private RenderingContext context;\n \n         private List sinks = new ArrayList();\n-            \n+\n         public MySinkFactory( RenderingContext ctx )\n         {\n             this.context = ctx;\n@@ -190,4 +189,12 @@ public boolean isOverwrite()\n         // TODO: would be nice to query the report to see if it is modified\n         return true;\n     }\n+\n+    /**\n+     * @return true if the current report is external, false otherwise\n+     */\n+    public boolean isExternalReport()\n+    {\n+        return report.isExternalReport();\n+    }\n }", "filename": "maven-site-plugin/src/main/java/org/apache/maven/plugins/site/ReportDocumentRenderer.java"}, {"additions": 10, "raw_url": "https://github.com/apache/maven-plugins/raw/787b2db1b0aed827cd28178e2f74e8a39bdc1e05/maven-site-plugin/src/main/java/org/apache/maven/plugins/site/SiteRunMojo.java", "blob_url": "https://github.com/apache/maven-plugins/blob/787b2db1b0aed827cd28178e2f74e8a39bdc1e05/maven-site-plugin/src/main/java/org/apache/maven/plugins/site/SiteRunMojo.java", "sha": "6397078e131821577eda1b542af27a6cb0fcbaad", "changes": 10, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/maven-plugins/contents/maven-site-plugin/src/main/java/org/apache/maven/plugins/site/SiteRunMojo.java?ref=787b2db1b0aed827cd28178e2f74e8a39bdc1e05", "patch": "@@ -19,6 +19,7 @@\n import org.apache.maven.doxia.siterenderer.SiteRenderingContext;\n import org.apache.maven.plugin.MojoExecutionException;\n import org.apache.maven.plugin.MojoFailureException;\n+import org.apache.maven.reporting.MavenReport;\n import org.codehaus.plexus.util.IOUtil;\n import org.mortbay.jetty.Connector;\n import org.mortbay.jetty.Handler;\n@@ -32,6 +33,7 @@\n import java.io.FileOutputStream;\n import java.io.IOException;\n import java.io.InputStream;\n+import java.util.Iterator;\n import java.util.List;\n import java.util.Locale;\n import java.util.Map;\n@@ -137,6 +139,14 @@ private WebAppContext createWebApplication()\n         webapp.setResourceBase( tempWebappDirectory.getAbsolutePath() );\n         webapp.setAttribute( \"siteRenderer\", siteRenderer );\n \n+        // For external reports\n+        project.getReporting().setOutputDirectory( tempWebappDirectory.getAbsolutePath() );\n+        for ( Iterator i = reports.iterator(); i.hasNext(); )\n+        {\n+            MavenReport report = ( MavenReport ) i.next();\n+            report.setReportOutputDirectory( tempWebappDirectory );\n+        }\n+\n         List filteredReports = filterReports( reports );\n \n         List localesList = getAvailableLocales();", "filename": "maven-site-plugin/src/main/java/org/apache/maven/plugins/site/SiteRunMojo.java"}, {"additions": 29, "raw_url": "https://github.com/apache/maven-plugins/raw/787b2db1b0aed827cd28178e2f74e8a39bdc1e05/maven-site-plugin/src/main/java/org/apache/maven/plugins/site/webapp/DoxiaFilter.java", "blob_url": "https://github.com/apache/maven-plugins/blob/787b2db1b0aed827cd28178e2f74e8a39bdc1e05/maven-site-plugin/src/main/java/org/apache/maven/plugins/site/webapp/DoxiaFilter.java", "sha": "d33072138a2d88935d2ef47095b86e11c1852b1e", "changes": 32, "status": "modified", "deletions": 3, "contents_url": "https://api.github.com/repos/apache/maven-plugins/contents/maven-site-plugin/src/main/java/org/apache/maven/plugins/site/webapp/DoxiaFilter.java?ref=787b2db1b0aed827cd28178e2f74e8a39bdc1e05", "patch": "@@ -20,6 +20,7 @@\n import org.apache.maven.doxia.siterenderer.Renderer;\n import org.apache.maven.doxia.siterenderer.RendererException;\n import org.apache.maven.doxia.siterenderer.SiteRenderingContext;\n+import org.apache.maven.plugins.site.ReportDocumentRenderer;\n \n import javax.servlet.Filter;\n import javax.servlet.FilterChain;\n@@ -54,6 +55,9 @@\n \n     private List originalSiteDirectories;\n \n+    /**\n+     * @see javax.servlet.Filter#init(javax.servlet.FilterConfig)\n+     */\n     public void init( FilterConfig filterConfig )\n         throws ServletException\n     {\n@@ -65,6 +69,9 @@ public void init( FilterConfig filterConfig )\n         originalSiteDirectories = new ArrayList( context.getSiteDirectories() );\n     }\n \n+    /**\n+     * @see javax.servlet.Filter#doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse, javax.servlet.FilterChain)\n+     */\n     public void doFilter( ServletRequest servletRequest, ServletResponse servletResponse, FilterChain filterChain )\n         throws IOException, ServletException\n     {\n@@ -87,6 +94,22 @@ public void doFilter( ServletRequest servletRequest, ServletResponse servletResp\n             {\n                 DocumentRenderer renderer = (DocumentRenderer) documents.get( path );\n                 renderer.renderDocument( servletResponse.getWriter(), siteRenderer, context );\n+\n+                if (renderer instanceof ReportDocumentRenderer)\n+                {\n+                    ReportDocumentRenderer reportDocumentRenderer = (ReportDocumentRenderer) renderer;\n+                    if (reportDocumentRenderer.isExternalReport())\n+                    {\n+                        try\n+                        {\n+                            filterChain.doFilter( servletRequest, servletResponse );\n+                        }\n+                        catch ( Exception e )\n+                        {\n+                            throw new ServletException( e );\n+                        }\n+                    }\n+                }\n             }\n             catch ( RendererException e )\n             {\n@@ -99,14 +122,14 @@ else if ( generatedSiteDirectory != null && generatedSiteDirectory.exists() )\n             context.addSiteDirectory( generatedSiteDirectory );\n             try\n             {\n-                Map documents = siteRenderer.locateDocumentFiles( context );\n+                Map locateDocuments = siteRenderer.locateDocumentFiles( context );\n \n-                if ( documents.containsKey( path ) )\n+                if ( locateDocuments.containsKey( path ) )\n                 {\n                     // TODO: documents are not right for the locale\n                     context.setLocale( req.getLocale() );\n \n-                    DocumentRenderer renderer = (DocumentRenderer) documents.get( path );\n+                    DocumentRenderer renderer = (DocumentRenderer) locateDocuments.get( path );\n                     renderer.renderDocument( servletResponse.getWriter(), siteRenderer, context );\n                 }\n             }\n@@ -126,6 +149,9 @@ else if ( generatedSiteDirectory != null && generatedSiteDirectory.exists() )\n         }\n     }\n \n+    /**\n+     * @see javax.servlet.Filter#destroy()\n+     */\n     public void destroy()\n     {\n     }", "filename": "maven-site-plugin/src/main/java/org/apache/maven/plugins/site/webapp/DoxiaFilter.java"}, {"additions": 2, "raw_url": "https://github.com/apache/maven-plugins/raw/787b2db1b0aed827cd28178e2f74e8a39bdc1e05/maven-surefire-report-plugin/src/main/java/org/apache/maven/plugins/surefire/report/SurefireReportMojo.java", "blob_url": "https://github.com/apache/maven-plugins/blob/787b2db1b0aed827cd28178e2f74e8a39bdc1e05/maven-surefire-report-plugin/src/main/java/org/apache/maven/plugins/surefire/report/SurefireReportMojo.java", "sha": "917bf4c09818697be337601d0521abf8b3fb8fd0", "changes": 4, "status": "modified", "deletions": 2, "contents_url": "https://api.github.com/repos/apache/maven-plugins/contents/maven-surefire-report-plugin/src/main/java/org/apache/maven/plugins/surefire/report/SurefireReportMojo.java?ref=787b2db1b0aed827cd28178e2f74e8a39bdc1e05", "patch": "@@ -45,7 +45,7 @@\n     /**\n      * Location where generated html will be created.\n      *\n-     * @parameter expression=\"${project.build.directory}/site \"\n+     * @parameter expression=\"${project.reporting.outputDirectory}\"\n      */\n     private String outputDirectory;\n \n@@ -92,7 +92,7 @@\n     /**\n      * Location of the Xrefs to link.\n      *\n-     * @parameter default-value=\"${project.build.directory}/site/xref-test\"\n+     * @parameter default-value=\"${project.reporting.outputDirectory}/xref-test\"\n      */\n     private File xrefLocation;\n ", "filename": "maven-surefire-report-plugin/src/main/java/org/apache/maven/plugins/surefire/report/SurefireReportMojo.java"}], "repo": "maven-plugins"}, {"commit": "https://github.com/apache/maven-plugins/commit/5f9ec13e205d65800ec3e346b8407994380790da", "parent": "https://github.com/apache/maven-plugins/commit/0e2102732e0e6209d6bede831a34ccbb3adecac9", "message": "PR: MSITE-154\n\nSometimes parent site.xml is not resolved. This occurs when\neither the current project or the parent doesn't have an <url>.\n\nRemoved check for URL and use current URL if parent URL not specified.\nTested with both URLs set to null - no NPE occurred.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/plugins/trunk@418889 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "maven-plugins_78", "file": [{"additions": 2, "raw_url": "https://github.com/apache/maven-plugins/raw/5f9ec13e205d65800ec3e346b8407994380790da/maven-site-plugin/src/main/java/org/apache/maven/plugins/site/AbstractSiteRenderingMojo.java", "blob_url": "https://github.com/apache/maven-plugins/blob/5f9ec13e205d65800ec3e346b8407994380790da/maven-site-plugin/src/main/java/org/apache/maven/plugins/site/AbstractSiteRenderingMojo.java", "sha": "97dc34456087d7133ee453ff02bfae533c70b45e", "changes": 4, "status": "modified", "deletions": 2, "contents_url": "https://api.github.com/repos/apache/maven-plugins/contents/maven-site-plugin/src/main/java/org/apache/maven/plugins/site/AbstractSiteRenderingMojo.java?ref=5f9ec13e205d65800ec3e346b8407994380790da", "patch": "@@ -210,7 +210,7 @@ protected DecorationModel getDecorationModel( MavenProject project, Locale local\n         }\n \n         MavenProject parentProject = getParentProject( project );\n-        if ( parentProject != null && project.getUrl() != null && parentProject.getUrl() != null )\n+        if ( parentProject != null )\n         {\n             DecorationModel parent = getDecorationModel( parentProject, locale, props );\n \n@@ -221,7 +221,7 @@ protected DecorationModel getDecorationModel( MavenProject project, Locale local\n             else\n             {\n                 assembler.assembleModelInheritance( project.getName(), decoration, parent, project.getUrl(),\n-                                                    parentProject.getUrl() );\n+                                                    parentProject.getUrl() == null ? project.getUrl() : parentProject.getUrl() );\n             }\n             if ( decoration != null )\n             {", "filename": "maven-site-plugin/src/main/java/org/apache/maven/plugins/site/AbstractSiteRenderingMojo.java"}], "repo": "maven-plugins"}]
