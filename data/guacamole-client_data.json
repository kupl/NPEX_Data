[
    {
        "repo": "guacamole-client",
        "message": "GUACAMOLE-422: Replace non-short-circuit logic in null check (`&`) with proper short-circuit logic (`&&`).\n\nChecking `timezone != null & !timezone.isEmpty()` will result in a\n`NullPointerException` when `timezone` is null, as the `&` ensures\n`timezone.isEmpty()` will run in all cases.",
        "commit": "https://github.com/apache/guacamole-client/commit/092657aa794a58f97ec99a12157c840ef7d07e91",
        "parent": "https://github.com/apache/guacamole-client/commit/f2ae848b1bea0163749c017d3ce6b3fe59cd6eef",
        "bug_id": "guacamole-client_1",
        "file": [
            {
                "sha": "598a4e57b9d39111fcfa2768c875f941d680e651",
                "filename": "guacamole/src/main/java/org/apache/guacamole/tunnel/TunnelRequestService.java",
                "blob_url": "https://github.com/apache/guacamole-client/blob/092657aa794a58f97ec99a12157c840ef7d07e91/guacamole/src/main/java/org/apache/guacamole/tunnel/TunnelRequestService.java",
                "raw_url": "https://github.com/apache/guacamole-client/raw/092657aa794a58f97ec99a12157c840ef7d07e91/guacamole/src/main/java/org/apache/guacamole/tunnel/TunnelRequestService.java",
                "status": "modified",
                "changes": 4,
                "additions": 2,
                "contents_url": "https://api.github.com/repos/apache/guacamole-client/contents/guacamole/src/main/java/org/apache/guacamole/tunnel/TunnelRequestService.java?ref=092657aa794a58f97ec99a12157c840ef7d07e91",
                "patch": "@@ -167,9 +167,9 @@ protected GuacamoleClientInformation getClientInformation(TunnelRequest request)\n         if (imageMimetypes != null)\n             info.getImageMimetypes().addAll(imageMimetypes);\n         \n-        // Get the timezone value\n+        // Set timezone if provided\n         String timezone = request.getTimezone();\n-        if (timezone != null & !timezone.isEmpty())\n+        if (timezone != null && !timezone.isEmpty())\n             info.setTimezone(timezone);\n \n         return info;",
                "deletions": 2
            }
        ]
    },
    {
        "repo": "guacamole-client",
        "message": "GUACAMOLE-580: Avert potential NullPointerException when looking for user attributes.",
        "commit": "https://github.com/apache/guacamole-client/commit/50baf1c9474f60e7099821e0e395a14458bbb700",
        "parent": "https://github.com/apache/guacamole-client/commit/a9637494ac35136fb8ce3d02c0d14eadb643fb52",
        "bug_id": "guacamole-client_2",
        "file": [
            {
                "sha": "cd3ac37ed3aabef029a41c2baee7dcaf02372a2a",
                "filename": "extensions/guacamole-auth-ldap/src/main/java/org/apache/guacamole/auth/ldap/AuthenticationProviderService.java",
                "blob_url": "https://github.com/apache/guacamole-client/blob/50baf1c9474f60e7099821e0e395a14458bbb700/extensions/guacamole-auth-ldap/src/main/java/org/apache/guacamole/auth/ldap/AuthenticationProviderService.java",
                "raw_url": "https://github.com/apache/guacamole-client/raw/50baf1c9474f60e7099821e0e395a14458bbb700/extensions/guacamole-auth-ldap/src/main/java/org/apache/guacamole/auth/ldap/AuthenticationProviderService.java",
                "status": "modified",
                "changes": 6,
                "additions": 6,
                "contents_url": "https://api.github.com/repos/apache/guacamole-client/contents/extensions/guacamole-auth-ldap/src/main/java/org/apache/guacamole/auth/ldap/AuthenticationProviderService.java?ref=50baf1c9474f60e7099821e0e395a14458bbb700",
                "patch": "@@ -26,6 +26,7 @@\n import com.novell.ldap.LDAPConnection;\n import com.novell.ldap.LDAPEntry;\n import com.novell.ldap.LDAPException;\n+import java.util.Collections;\n import java.util.HashMap;\n import java.util.List;\n import java.util.Map;\n@@ -283,7 +284,12 @@ public AuthenticatedUser authenticateUser(Credentials credentials)\n         try {\n             // Get LDAP attributes by querying LDAP\n             LDAPEntry userEntry = ldapConnection.read(userDN, attrArray);\n+            if (userEntry == null)\n+                return null;\n+\n             LDAPAttributeSet attrSet = userEntry.getAttributeSet();\n+            if (attrSet == null)\n+                return null;\n \n             // Add each attribute into Map\n             for (Object attrObj : attrSet) {",
                "deletions": 0
            }
        ]
    },
    {
        "repo": "guacamole-client",
        "message": "GUACAMOLE-362: Avoid NullPointerException when closing input stream.",
        "commit": "https://github.com/apache/guacamole-client/commit/32ccde08d242f4ca3257d6bb800153b36d1e9325",
        "parent": "https://github.com/apache/guacamole-client/commit/91e570276889bd3b83e8420be7604ee7817a3965",
        "bug_id": "guacamole-client_3",
        "file": [
            {
                "sha": "455f17729a70d4bb5119ffd7c022cd6dc3155870",
                "filename": "extensions/guacamole-auth-cas/src/main/java/org/apache/guacamole/auth/cas/conf/PrivateKeyGuacamoleProperty.java",
                "blob_url": "https://github.com/apache/guacamole-client/blob/32ccde08d242f4ca3257d6bb800153b36d1e9325/extensions/guacamole-auth-cas/src/main/java/org/apache/guacamole/auth/cas/conf/PrivateKeyGuacamoleProperty.java",
                "raw_url": "https://github.com/apache/guacamole-client/raw/32ccde08d242f4ca3257d6bb800153b36d1e9325/extensions/guacamole-auth-cas/src/main/java/org/apache/guacamole/auth/cas/conf/PrivateKeyGuacamoleProperty.java",
                "status": "modified",
                "changes": 3,
                "additions": 2,
                "contents_url": "https://api.github.com/repos/apache/guacamole-client/contents/extensions/guacamole-auth-cas/src/main/java/org/apache/guacamole/auth/cas/conf/PrivateKeyGuacamoleProperty.java?ref=32ccde08d242f4ca3257d6bb800153b36d1e9325",
                "patch": "@@ -81,7 +81,8 @@ public PrivateKey parseValue(String value) throws GuacamoleServerException {\n                 throw new GuacamoleServerException(\"Key is not in expected PKCS8 encoding.\", e);\n             }\n             finally {\n-                keyStreamIn.close();\n+                if (keyStreamIn != null)\n+                    keyStreamIn.close();\n             }\n         }\n         catch (IOException e) {",
                "deletions": 1
            }
        ]
    },
    {
        "repo": "guacamole-client",
        "message": "GUAC-586: Fix potential NullPointerExceptions in basic and LDAP auth.",
        "commit": "https://github.com/apache/guacamole-client/commit/c82f2312b878269fd95e7ca88fcc6e31d0f5356d",
        "parent": "https://github.com/apache/guacamole-client/commit/df34b87460213547d34e310d4f5af41ba15d2116",
        "bug_id": "guacamole-client_4",
        "file": [
            {
                "sha": "aaa17edaa03f7fb213f7fcbc588e405a7029bdac",
                "filename": "extensions/guacamole-auth-ldap/src/main/java/org/glyptodon/guacamole/auth/ldap/connection/ConnectionService.java",
                "blob_url": "https://github.com/apache/guacamole-client/blob/c82f2312b878269fd95e7ca88fcc6e31d0f5356d/extensions/guacamole-auth-ldap/src/main/java/org/glyptodon/guacamole/auth/ldap/connection/ConnectionService.java",
                "raw_url": "https://github.com/apache/guacamole-client/raw/c82f2312b878269fd95e7ca88fcc6e31d0f5356d/extensions/guacamole-auth-ldap/src/main/java/org/glyptodon/guacamole/auth/ldap/connection/ConnectionService.java",
                "status": "modified",
                "changes": 6,
                "additions": 6,
                "contents_url": "https://api.github.com/repos/apache/guacamole-client/contents/extensions/guacamole-auth-ldap/src/main/java/org/glyptodon/guacamole/auth/ldap/connection/ConnectionService.java?ref=c82f2312b878269fd95e7ca88fcc6e31d0f5356d",
                "patch": "@@ -35,6 +35,7 @@\n import org.glyptodon.guacamole.auth.ldap.ConfigurationService;\n import org.glyptodon.guacamole.auth.ldap.EscapingService;\n import org.glyptodon.guacamole.GuacamoleException;\n+import org.glyptodon.guacamole.GuacamoleSecurityException;\n import org.glyptodon.guacamole.GuacamoleServerException;\n import org.glyptodon.guacamole.net.auth.Connection;\n import org.glyptodon.guacamole.net.auth.simple.SimpleConnection;\n@@ -91,6 +92,11 @@\n             // Pull the current user DN from the LDAP connection\n             String userDN = ldapConnection.getAuthenticationDN();\n \n+            // getConnections() will only be called after a connection has been\n+            // authenticated (via non-anonymous bind), thus userDN cannot\n+            // possibly be null\n+            assert(userDN != null);\n+\n             // Find all Guacamole connections for the given user\n             LDAPSearchResults results = ldapConnection.search(\n                 confService.getConfigurationBaseDN(),",
                "deletions": 0
            },
            {
                "sha": "ba3d441fea00c21662b60b44e346bd5b9a6e5572",
                "filename": "guacamole/src/main/java/net/sourceforge/guacamole/net/basic/BasicFileAuthenticationProvider.java",
                "blob_url": "https://github.com/apache/guacamole-client/blob/c82f2312b878269fd95e7ca88fcc6e31d0f5356d/guacamole/src/main/java/net/sourceforge/guacamole/net/basic/BasicFileAuthenticationProvider.java",
                "raw_url": "https://github.com/apache/guacamole-client/raw/c82f2312b878269fd95e7ca88fcc6e31d0f5356d/guacamole/src/main/java/net/sourceforge/guacamole/net/basic/BasicFileAuthenticationProvider.java",
                "status": "modified",
                "changes": 2,
                "additions": 1,
                "contents_url": "https://api.github.com/repos/apache/guacamole-client/contents/guacamole/src/main/java/net/sourceforge/guacamole/net/basic/BasicFileAuthenticationProvider.java?ref=c82f2312b878269fd95e7ca88fcc6e31d0f5356d",
                "patch": "@@ -206,7 +206,7 @@ private UserMapping getUserMapping() {\n             return null;\n \n         // Validate and return info for given user and pass\n-        Authorization auth = getUserMapping().getAuthorization(credentials.getUsername());\n+        Authorization auth = userMapping.getAuthorization(credentials.getUsername());\n         if (auth != null && auth.validate(credentials.getUsername(), credentials.getPassword()))\n             return auth.getConfigurations();\n ",
                "deletions": 1
            }
        ]
    },
    {
        "repo": "guacamole-client",
        "message": "GUAC-1115: Fix NPE in password conversion.",
        "commit": "https://github.com/apache/guacamole-client/commit/529dccf675cbdf696d433a7dadf72ec9049305c5",
        "parent": "https://github.com/apache/guacamole-client/commit/725e7d553cf4b41d317536675d23e1b8b8d64c3b",
        "bug_id": "guacamole-client_5",
        "file": [
            {
                "sha": "1b3f59afd555767a204121da076bc3bba856eb04",
                "filename": "extensions/guacamole-auth-ldap/src/main/java/org/glyptodon/guacamole/auth/ldap/AuthenticationProviderService.java",
                "blob_url": "https://github.com/apache/guacamole-client/blob/529dccf675cbdf696d433a7dadf72ec9049305c5/extensions/guacamole-auth-ldap/src/main/java/org/glyptodon/guacamole/auth/ldap/AuthenticationProviderService.java",
                "raw_url": "https://github.com/apache/guacamole-client/raw/529dccf675cbdf696d433a7dadf72ec9049305c5/extensions/guacamole-auth-ldap/src/main/java/org/glyptodon/guacamole/auth/ldap/AuthenticationProviderService.java",
                "status": "modified",
                "changes": 110,
                "additions": 76,
                "contents_url": "https://api.github.com/repos/apache/guacamole-client/contents/extensions/guacamole-auth-ldap/src/main/java/org/glyptodon/guacamole/auth/ldap/AuthenticationProviderService.java?ref=529dccf675cbdf696d433a7dadf72ec9049305c5",
                "patch": "@@ -27,6 +27,7 @@\n import com.novell.ldap.LDAPConnection;\n import com.novell.ldap.LDAPException;\n import java.io.UnsupportedEncodingException;\n+import java.util.List;\n import org.glyptodon.guacamole.auth.ldap.user.AuthenticatedUser;\n import org.glyptodon.guacamole.auth.ldap.user.UserContext;\n import org.glyptodon.guacamole.GuacamoleException;\n@@ -74,6 +75,28 @@\n     @Inject\n     private Provider<UserContext> userContextProvider;\n \n+    /**\n+     * Disconnects the given LDAP connection, logging any failure to do so\n+     * appropriately.\n+     *\n+     * @param ldapConnection\n+     *     The LDAP connection to disconnect.\n+     */\n+    private void disconnect(LDAPConnection ldapConnection) {\n+\n+        // Attempt disconnect\n+        try {\n+            ldapConnection.disconnect();\n+        }\n+\n+        // Warn if disconnect unexpectedly fails\n+        catch (LDAPException e) {\n+            logger.warn(\"Unable to disconnect from LDAP server: {}\", e.getMessage());\n+            logger.debug(\"LDAP disconnect failed.\", e);\n+        }\n+\n+    }\n+\n     /**\n      * Determines the DN which corresponds to the user having the given\n      * username. The DN will either be derived directly from the user base DN,\n@@ -93,7 +116,43 @@\n     private String getUserBindDN(String username)\n             throws GuacamoleException {\n \n-        // Derive user DN from base DN\n+        // If a search DN is provided, search the LDAP directory for the DN\n+        // corresponding to the given username\n+        String searchBindDN = confService.getSearchBindDN();\n+        if (searchBindDN != null) {\n+\n+            // Create an LDAP connection using the search account\n+            LDAPConnection searchConnection = bindAs(\n+                searchBindDN,\n+                confService.getSearchBindPassword()\n+            );\n+\n+            try {\n+\n+                // Retrieve all DNs associated with the given username\n+                List<String> userDNs = userService.getUserDNs(searchConnection, username);\n+                if (userDNs.isEmpty())\n+                    return null;\n+\n+                // Warn if multiple DNs exist for the same user\n+                if (userDNs.size() != 1) {\n+                    logger.warn(\"Multiple DNs possible for user \\\"{}\\\": {}\", username, userDNs);\n+                    return null;\n+                }\n+\n+                // Return the single possible DN\n+                return userDNs.get(0);\n+\n+            }\n+\n+            // Always disconnect\n+            finally {\n+                disconnect(searchConnection);\n+            }\n+\n+        }\n+\n+        // Otherwise, derive user DN from base DN\n         return userService.deriveUserDN(username);\n \n     }\n@@ -137,26 +196,31 @@ private LDAPConnection bindAs(String userDN, String password)\n         // Bind using provided credentials\n         try {\n \n-            // Bind as user\n+            byte[] passwordBytes;\n             try {\n-                ldapConnection.bind(LDAPConnection.LDAP_V3, userDN,\n-                        password.getBytes(\"UTF-8\"));\n+\n+                // Convert password into corresponding byte array\n+                if (password != null)\n+                    passwordBytes = password.getBytes(\"UTF-8\");\n+                else\n+                    passwordBytes = null;\n+\n             }\n             catch (UnsupportedEncodingException e) {\n                 logger.error(\"Unexpected lack of support for UTF-8: {}\", e.getMessage());\n                 logger.debug(\"Support for UTF-8 (as required by Java spec) not found.\", e);\n                 return null;\n             }\n \n-            // Disconnect if an error occurs during bind\n-            catch (LDAPException e) {\n-                ldapConnection.disconnect();\n-                throw e;\n-            }\n+            // Bind as user\n+            ldapConnection.bind(LDAPConnection.LDAP_V3, userDN, passwordBytes);\n \n         }\n+\n+        // Disconnect if an error occurs during bind\n         catch (LDAPException e) {\n             logger.debug(\"LDAP bind failed.\", e);\n+            disconnect(ldapConnection);\n             return null;\n         }\n \n@@ -202,7 +266,7 @@ private LDAPConnection bindAs(Credentials credentials)\n         // Determine user DN\n         String userDN = getUserBindDN(username);\n         if (userDN == null) {\n-            logger.error(\"Unable to determine DN for user \\\"{}\\\".\", username);\n+            logger.debug(\"Unable to determine DN for user \\\"{}\\\".\", username);\n             return null;\n         }\n \n@@ -255,18 +319,7 @@ public AuthenticatedUser authenticateUser(Credentials credentials)\n \n         // Always disconnect\n         finally {\n-\n-            // Attempt disconnect\n-            try {\n-                ldapConnection.disconnect();\n-            }\n-\n-            // Warn if disconnect unexpectedly fails\n-            catch (LDAPException e) {\n-                logger.warn(\"Unable to disconnect from LDAP server: {}\", e.getMessage());\n-                logger.debug(\"LDAP disconnect failed.\", e);\n-            }\n-\n+            disconnect(ldapConnection);\n         }\n \n     }\n@@ -305,18 +358,7 @@ public UserContext getUserContext(org.glyptodon.guacamole.net.auth.Authenticated\n \n         // Always disconnect\n         finally {\n-\n-            // Attempt disconnect\n-            try {\n-                ldapConnection.disconnect();\n-            }\n-\n-            // Warn if disconnect unexpectedly fails\n-            catch (LDAPException e) {\n-                logger.warn(\"Unable to disconnect from LDAP server: {}\", e.getMessage());\n-                logger.debug(\"LDAP disconnect failed.\", e);\n-            }\n-\n+            disconnect(ldapConnection);\n         }\n \n     }",
                "deletions": 34
            }
        ]
    },
    {
        "repo": "guacamole-client",
        "message": "Merge pull request #102 from glyptodon/group-rest-npe\n\nGUAC-1108: Use retrieval service for retrieving connection groups. Avoid possible NPE.",
        "commit": "https://github.com/apache/guacamole-client/commit/0039769d46e3508c074ccbf0de0a103cc2b8be11",
        "parent": "https://github.com/apache/guacamole-client/commit/969db70be96fc5b376d69723a93080b8da6ed10b",
        "bug_id": "guacamole-client_6",
        "file": [
            {
                "sha": "8153421cfcbe734fd407ac986be27f6c37a8d3dd",
                "filename": "guacamole/src/main/java/org/glyptodon/guacamole/net/basic/rest/connectiongroup/ConnectionGroupRESTService.java",
                "blob_url": "https://github.com/apache/guacamole-client/blob/0039769d46e3508c074ccbf0de0a103cc2b8be11/guacamole/src/main/java/org/glyptodon/guacamole/net/basic/rest/connectiongroup/ConnectionGroupRESTService.java",
                "raw_url": "https://github.com/apache/guacamole-client/raw/0039769d46e3508c074ccbf0de0a103cc2b8be11/guacamole/src/main/java/org/glyptodon/guacamole/net/basic/rest/connectiongroup/ConnectionGroupRESTService.java",
                "status": "modified",
                "changes": 2,
                "additions": 1,
                "contents_url": "https://api.github.com/repos/apache/guacamole-client/contents/guacamole/src/main/java/org/glyptodon/guacamole/net/basic/rest/connectiongroup/ConnectionGroupRESTService.java?ref=0039769d46e3508c074ccbf0de0a103cc2b8be11",
                "patch": "@@ -247,7 +247,7 @@ public void updateConnectionGroup(@QueryParam(\"token\") String authToken,\n         Directory<ConnectionGroup> connectionGroupDirectory = userContext.getConnectionGroupDirectory();\n \n         // Retrieve connection group to update\n-        ConnectionGroup existingConnectionGroup = connectionGroupDirectory.get(connectionGroupID);\n+        ConnectionGroup existingConnectionGroup = retrievalService.retrieveConnectionGroup(userContext, connectionGroupID);\n         \n         // Update the connection group\n         existingConnectionGroup.setName(connectionGroup.getName());",
                "deletions": 1
            }
        ]
    },
    {
        "repo": "guacamole-client",
        "message": "GUAC-969: Fix possible NPE in reading of local environment.",
        "commit": "https://github.com/apache/guacamole-client/commit/d2b45d1cdb1a9830be7b87c2d3ed3456b5a6186e",
        "parent": "https://github.com/apache/guacamole-client/commit/473a0fd35d9f6ee0fff260ef5a4688ffb8c96e57",
        "bug_id": "guacamole-client_7",
        "file": [
            {
                "sha": "5421bceec3607d29c45fc3d5116865f0b2d58cdc",
                "filename": "guacamole-ext/src/main/java/org/glyptodon/guacamole/environment/LocalEnvironment.java",
                "blob_url": "https://github.com/apache/guacamole-client/blob/d2b45d1cdb1a9830be7b87c2d3ed3456b5a6186e/guacamole-ext/src/main/java/org/glyptodon/guacamole/environment/LocalEnvironment.java",
                "raw_url": "https://github.com/apache/guacamole-client/raw/d2b45d1cdb1a9830be7b87c2d3ed3456b5a6186e/guacamole-ext/src/main/java/org/glyptodon/guacamole/environment/LocalEnvironment.java",
                "status": "modified",
                "changes": 6,
                "additions": 6,
                "contents_url": "https://api.github.com/repos/apache/guacamole-client/contents/guacamole-ext/src/main/java/org/glyptodon/guacamole/environment/LocalEnvironment.java?ref=d2b45d1cdb1a9830be7b87c2d3ed3456b5a6186e",
                "patch": "@@ -239,6 +239,12 @@ public boolean accept(File file, String string) {\n                 }\n             );\n \n+            // Warn if directory contents are not available\n+            if (files == null) {\n+                logger.error(\"Unable to read contents of \\\"{}\\\".\", protocol_directory.getAbsolutePath());\n+                files = new File[0];\n+            }\n+            \n             // Load each protocol from each file\n             for (File file : files) {\n ",
                "deletions": 0
            }
        ]
    },
    {
        "repo": "guacamole-client",
        "message": "GUAC-969: Fix possible NPE in XML parsing.",
        "commit": "https://github.com/apache/guacamole-client/commit/473a0fd35d9f6ee0fff260ef5a4688ffb8c96e57",
        "parent": "https://github.com/apache/guacamole-client/commit/46fd8119b93319e5174e6950a155da8fb908101c",
        "bug_id": "guacamole-client_8",
        "file": [
            {
                "sha": "bc77ad41206f183c25cfab25ec917b860b4f0dc4",
                "filename": "guacamole-ext/src/main/java/org/glyptodon/guacamole/xml/DocumentHandler.java",
                "blob_url": "https://github.com/apache/guacamole-client/blob/473a0fd35d9f6ee0fff260ef5a4688ffb8c96e57/guacamole-ext/src/main/java/org/glyptodon/guacamole/xml/DocumentHandler.java",
                "raw_url": "https://github.com/apache/guacamole-client/raw/473a0fd35d9f6ee0fff260ef5a4688ffb8c96e57/guacamole-ext/src/main/java/org/glyptodon/guacamole/xml/DocumentHandler.java",
                "status": "modified",
                "changes": 7,
                "additions": 6,
                "contents_url": "https://api.github.com/repos/apache/guacamole-client/contents/guacamole-ext/src/main/java/org/glyptodon/guacamole/xml/DocumentHandler.java?ref=473a0fd35d9f6ee0fff260ef5a4688ffb8c96e57",
                "patch": "@@ -140,8 +140,13 @@ public void endElement(String uri, String localName, String qName)\n     public void characters(char[] ch, int start, int length)\n             throws SAXException {\n \n+        // Get current state\n+        DocumentHandlerState current = getCurrentState();\n+        if (current == null)\n+            throw new SAXException(\"Character data not allowed outside XML document.\");\n+        \n         // Append received chunk to text content\n-        getCurrentState().getTextContent().append(ch, start, length);\n+        current.getTextContent().append(ch, start, length);\n \n     }\n ",
                "deletions": 1
            }
        ]
    },
    {
        "repo": "guacamole-client",
        "message": "Handle possible NPE in mapping loader.",
        "commit": "https://github.com/apache/guacamole-client/commit/8b8ee8dae3f7ec0006805d4de3d62268b9adf721",
        "parent": "https://github.com/apache/guacamole-client/commit/493b43fe27587febb7ffedc3c0390c85691e5a00",
        "bug_id": "guacamole-client_9",
        "file": [
            {
                "sha": "a00d6eeb28854258358eec17250b624f07ae0bf3",
                "filename": "guacamole/src/main/java/net/sourceforge/guacamole/net/basic/BasicFileAuthenticationProvider.java",
                "blob_url": "https://github.com/apache/guacamole-client/blob/8b8ee8dae3f7ec0006805d4de3d62268b9adf721/guacamole/src/main/java/net/sourceforge/guacamole/net/basic/BasicFileAuthenticationProvider.java",
                "raw_url": "https://github.com/apache/guacamole-client/raw/8b8ee8dae3f7ec0006805d4de3d62268b9adf721/guacamole/src/main/java/net/sourceforge/guacamole/net/basic/BasicFileAuthenticationProvider.java",
                "status": "modified",
                "changes": 5,
                "additions": 5,
                "contents_url": "https://api.github.com/repos/apache/guacamole-client/contents/guacamole/src/main/java/net/sourceforge/guacamole/net/basic/BasicFileAuthenticationProvider.java?ref=8b8ee8dae3f7ec0006805d4de3d62268b9adf721",
                "patch": "@@ -100,6 +100,11 @@ public GuacamoleConfiguration getAuthorizedConfiguration(String username, String\n \n         }\n \n+        // If no mapping available, report as such\n+        if (mapping == null)\n+            throw new GuacamoleException(\"User mapping could not be read.\");\n+        \n+        // Validate and return info for given user and pass\n         AuthInfo info = mapping.get(username);\n         if (info != null && info.validate(username, password))\n             return info.getConfiguration();",
                "deletions": 0
            }
        ]
    },
    {
        "repo": "guacamole-client",
        "message": "Fix possible NPE in MonitoringGuacamoleReader read() and readInstruction().",
        "commit": "https://github.com/apache/guacamole-client/commit/e4f67e5aff5565900a12db4e1e485c34561c92cb",
        "parent": "https://github.com/apache/guacamole-client/commit/4851ba8b5c477354bd1bc500b53b17b8a02350f3",
        "bug_id": "guacamole-client_10",
        "file": [
            {
                "sha": "9c3b4bdfab159e8d167b5a3879df8d86b96bbb42",
                "filename": "guacamole/src/main/java/org/glyptodon/guacamole/net/basic/MonitoringGuacamoleReader.java",
                "blob_url": "https://github.com/apache/guacamole-client/blob/e4f67e5aff5565900a12db4e1e485c34561c92cb/guacamole/src/main/java/org/glyptodon/guacamole/net/basic/MonitoringGuacamoleReader.java",
                "raw_url": "https://github.com/apache/guacamole-client/raw/e4f67e5aff5565900a12db4e1e485c34561c92cb/guacamole/src/main/java/org/glyptodon/guacamole/net/basic/MonitoringGuacamoleReader.java",
                "status": "modified",
                "changes": 12,
                "additions": 11,
                "contents_url": "https://api.github.com/repos/apache/guacamole-client/contents/guacamole/src/main/java/org/glyptodon/guacamole/net/basic/MonitoringGuacamoleReader.java?ref=e4f67e5aff5565900a12db4e1e485c34561c92cb",
                "patch": "@@ -66,13 +66,23 @@ public boolean available() throws GuacamoleException {\n \n     @Override\n     public char[] read() throws GuacamoleException {\n-        return readInstruction().toString().toCharArray();\n+\n+        // Read single instruction, handle end-of-stream\n+        GuacamoleInstruction instruction = readInstruction();\n+        if (instruction == null)\n+            return null;\n+\n+        return instruction.toString().toCharArray();\n+\n     }\n \n     @Override\n     public GuacamoleInstruction readInstruction() throws GuacamoleException {\n \n+        // Read single instruction, handle end-of-stream\n         GuacamoleInstruction instruction = reader.readInstruction();\n+        if (instruction == null)\n+            return null;\n \n         // If clipboard changed, notify listeners\n         if (instruction.getOpcode().equals(\"clipboard\")) {",
                "deletions": 1
            }
        ]
    },
    {
        "repo": "guacamole-client",
        "message": "Ticket #269: Fix NPE in connection record re: dates.",
        "commit": "https://github.com/apache/guacamole-client/commit/901424593a4322d5c258266fa6ed9d4bc1db0333",
        "parent": "https://github.com/apache/guacamole-client/commit/5bed9f573507f9dbb647fe5fade5929ba87d19e8",
        "bug_id": "guacamole-client_11",
        "file": [
            {
                "sha": "bee0917a05c1944b4a749dc31abde031ae3016ef",
                "filename": "extensions/guacamole-auth-mysql/src/main/java/net/sourceforge/guacamole/net/auth/mysql/MySQLConnectionRecord.java",
                "blob_url": "https://github.com/apache/guacamole-client/blob/901424593a4322d5c258266fa6ed9d4bc1db0333/extensions/guacamole-auth-mysql/src/main/java/net/sourceforge/guacamole/net/auth/mysql/MySQLConnectionRecord.java",
                "raw_url": "https://github.com/apache/guacamole-client/raw/901424593a4322d5c258266fa6ed9d4bc1db0333/extensions/guacamole-auth-mysql/src/main/java/net/sourceforge/guacamole/net/auth/mysql/MySQLConnectionRecord.java",
                "status": "modified",
                "changes": 6,
                "additions": 4,
                "contents_url": "https://api.github.com/repos/apache/guacamole-client/contents/extensions/guacamole-auth-mysql/src/main/java/net/sourceforge/guacamole/net/auth/mysql/MySQLConnectionRecord.java?ref=901424593a4322d5c258266fa6ed9d4bc1db0333",
                "patch": "@@ -72,18 +72,20 @@\n      */\n     public MySQLConnectionRecord(Date startDate, Date endDate,\n             String username) {\n-        this.startDate = new Date(startDate.getTime());\n-        this.endDate = new Date(endDate.getTime());\n+        if (startDate != null) this.startDate = new Date(startDate.getTime());\n+        if (endDate != null) this.endDate = new Date(endDate.getTime());\n         this.username = username;\n     }\n \n     @Override\n     public Date getStartDate() {\n+        if (startDate == null) return null;\n         return new Date(startDate.getTime());\n     }\n \n     @Override\n     public Date getEndDate() {\n+        if (endDate == null) return null;\n         return new Date(endDate.getTime());\n     }\n ",
                "deletions": 2
            }
        ]
    },
    {
        "repo": "guacamole-client",
        "message": "GUAC-1108: Use retrieval service for retrieving connection groups. Avoid possible NPE.",
        "commit": "https://github.com/apache/guacamole-client/commit/51b8cf7c11edc272308d249ee40f0e1aa368e347",
        "parent": "https://github.com/apache/guacamole-client/commit/969db70be96fc5b376d69723a93080b8da6ed10b",
        "bug_id": "guacamole-client_12",
        "file": [
            {
                "sha": "8153421cfcbe734fd407ac986be27f6c37a8d3dd",
                "filename": "guacamole/src/main/java/org/glyptodon/guacamole/net/basic/rest/connectiongroup/ConnectionGroupRESTService.java",
                "blob_url": "https://github.com/apache/guacamole-client/blob/51b8cf7c11edc272308d249ee40f0e1aa368e347/guacamole/src/main/java/org/glyptodon/guacamole/net/basic/rest/connectiongroup/ConnectionGroupRESTService.java",
                "raw_url": "https://github.com/apache/guacamole-client/raw/51b8cf7c11edc272308d249ee40f0e1aa368e347/guacamole/src/main/java/org/glyptodon/guacamole/net/basic/rest/connectiongroup/ConnectionGroupRESTService.java",
                "status": "modified",
                "changes": 2,
                "additions": 1,
                "contents_url": "https://api.github.com/repos/apache/guacamole-client/contents/guacamole/src/main/java/org/glyptodon/guacamole/net/basic/rest/connectiongroup/ConnectionGroupRESTService.java?ref=51b8cf7c11edc272308d249ee40f0e1aa368e347",
                "patch": "@@ -247,7 +247,7 @@ public void updateConnectionGroup(@QueryParam(\"token\") String authToken,\n         Directory<ConnectionGroup> connectionGroupDirectory = userContext.getConnectionGroupDirectory();\n \n         // Retrieve connection group to update\n-        ConnectionGroup existingConnectionGroup = connectionGroupDirectory.get(connectionGroupID);\n+        ConnectionGroup existingConnectionGroup = retrievalService.retrieveConnectionGroup(userContext, connectionGroupID);\n         \n         // Update the connection group\n         existingConnectionGroup.setName(connectionGroup.getName());",
                "deletions": 1
            }
        ]
    },
    {
        "repo": "guacamole-client",
        "message": "Clean up auth provider code, avoid NPE with property. Use getRequiredProperty() for required property.",
        "commit": "https://github.com/apache/guacamole-client/commit/5af00524306ce0bbccb881c2f8a8e220a648ee9f",
        "parent": "https://github.com/apache/guacamole-client/commit/ab87ba5614f2820d3fafa9fdab5855c2b48815a3",
        "bug_id": "guacamole-client_13",
        "file": [
            {
                "sha": "166022d17af6815e23f6523336656872754c092b",
                "filename": "extensions/guacamole-auth-noauth/src/main/java/net/sourceforge/guacamole/net/auth/noauth/NoAuthenticationProvider.java",
                "blob_url": "https://github.com/apache/guacamole-client/blob/5af00524306ce0bbccb881c2f8a8e220a648ee9f/extensions/guacamole-auth-noauth/src/main/java/net/sourceforge/guacamole/net/auth/noauth/NoAuthenticationProvider.java",
                "raw_url": "https://github.com/apache/guacamole-client/raw/5af00524306ce0bbccb881c2f8a8e220a648ee9f/extensions/guacamole-auth-noauth/src/main/java/net/sourceforge/guacamole/net/auth/noauth/NoAuthenticationProvider.java",
                "status": "modified",
                "changes": 52,
                "additions": 35,
                "contents_url": "https://api.github.com/repos/apache/guacamole-client/contents/extensions/guacamole-auth-noauth/src/main/java/net/sourceforge/guacamole/net/auth/noauth/NoAuthenticationProvider.java?ref=5af00524306ce0bbccb881c2f8a8e220a648ee9f",
                "patch": "@@ -44,6 +44,7 @@\n import java.io.IOException;\n import java.io.Reader;\n import net.sourceforge.guacamole.GuacamoleException;\n+import net.sourceforge.guacamole.GuacamoleServerException;\n import net.sourceforge.guacamole.net.auth.simple.SimpleAuthenticationProvider;\n import net.sourceforge.guacamole.net.auth.Credentials;\n import net.sourceforge.guacamole.properties.FileGuacamoleProperty;\n@@ -81,41 +82,58 @@\n  *    </config>\n  *  </configs>\n  *\n+ * @author Laurent Meunier\n  */\n public class NoAuthenticationProvider extends SimpleAuthenticationProvider {\n \n+    /**\n+     * Logger for this class.\n+     */\n     private Logger logger = LoggerFactory.getLogger(NoAuthenticationProvider.class);\n+\n+    /**\n+     * Map of all known configurations, indexed by identifier.\n+     */\n     private Map<String, GuacamoleConfiguration> configs;\n+\n+    /**\n+     * The last time the configuration XML was modified, as milliseconds since\n+     * UNIX epoch.\n+     */\n     private long configTime;\n \n     /**\n      * The filename of the XML file to read the user mapping from.\n      */\n     public static final FileGuacamoleProperty NOAUTH_CONFIG = new FileGuacamoleProperty() {\n+\n         @Override\n         public String getName() {\n             return \"noauth-config\";\n         }\n+\n     };\n \n+    /**\n+     * Retrieves the configuration file, as defined within guacamole.properties.\n+     * \n+     * @return The configuration file, as defined within guacamole.properties.\n+     * @throws GuacamoleException If an error occurs while reading the\n+     *                            property.\n+     */\n     private File getConfigurationFile() throws GuacamoleException {\n-        // Get configuration file\n-        return GuacamoleProperties.getProperty(NOAUTH_CONFIG);\n+        return GuacamoleProperties.getRequiredProperty(NOAUTH_CONFIG);\n     }\n \n     public synchronized void init() throws GuacamoleException {\n+\n         // Get configuration file\n         File configFile = getConfigurationFile();\n-        if(configFile == null) {\n-            throw new GuacamoleException(\n-                \"Missing \\\"noauth-config\\\" parameter required for NoAuthenticationProvider.\"\n-            );\n-        }\n-\n         logger.info(\"Reading configuration file: {}\", configFile);\n \n         // Parse document\n         try {\n+\n             // Set up parser\n             NoAuthConfigContentHandler contentHandler = new NoAuthConfigContentHandler();\n \n@@ -130,39 +148,39 @@ public synchronized void init() throws GuacamoleException {\n             // Init configs\n             configTime = configFile.lastModified();\n             configs = contentHandler.getConfigs();\n+\n         }\n         catch (IOException e) {\n-            throw new GuacamoleException(\"Error reading configuration file: \" + e.getMessage(), e);\n+            throw new GuacamoleServerException(\"Error reading configuration file: \" + e.getMessage(), e);\n         }\n         catch (SAXException e) {\n-            throw new GuacamoleException(\"Error parsing XML file: \" + e.getMessage(), e);\n+            throw new GuacamoleServerException(\"Error parsing XML file: \" + e.getMessage(), e);\n         }\n \n     }\n \n     @Override\n     public Map<String, GuacamoleConfiguration> getAuthorizedConfigurations(Credentials credentials) throws GuacamoleException {\n+\n         // Check mapping file mod time\n         File configFile = getConfigurationFile();\n         if (configFile.exists() && configTime < configFile.lastModified()) {\n+\n             // If modified recently, gain exclusive access and recheck\n             synchronized (this) {\n                 if (configFile.exists() && configTime < configFile.lastModified()) {\n                     logger.info(\"Config file {} has been modified.\", configFile);\n                     init(); // If still not up to date, re-init\n                 }\n             }\n-        }\n \n-        // If no mapping available, report as such\n-        if (configs == null) {\n-            throw new GuacamoleException(\"Configuration could not be read.\");\n         }\n \n-        // Guacamole 0.8 wants a username to be set, otherwise the\n-        // authentication process will fail.\n-        credentials.setUsername(\"Anonymous\");\n+        // If no mapping available, report as such\n+        if (configs == null)\n+            throw new GuacamoleServerException(\"Configuration could not be read.\");\n \n         return configs;\n+\n     }\n }",
                "deletions": 17
            }
        ]
    },
    {
        "repo": "guacamole-client",
        "message": "Fixing NPE found when not having required host and port properties.",
        "commit": "https://github.com/apache/guacamole-client/commit/83e820e7ba1899e582d50b83163c4ed03947a278",
        "parent": "https://github.com/apache/guacamole-client/commit/b37a9211afe85abe53e5afce279431528a811b11",
        "bug_id": "guacamole-client_14",
        "file": [
            {
                "sha": "7b3aec2a06d90c038a65772871ff4d5dd3e29934",
                "filename": "extensions/guacamole-auth-mysql/src/main/java/net/sourceforge/guacamole/net/auth/mysql/service/ConnectionService.java",
                "blob_url": "https://github.com/apache/guacamole-client/blob/83e820e7ba1899e582d50b83163c4ed03947a278/extensions/guacamole-auth-mysql/src/main/java/net/sourceforge/guacamole/net/auth/mysql/service/ConnectionService.java",
                "raw_url": "https://github.com/apache/guacamole-client/raw/83e820e7ba1899e582d50b83163c4ed03947a278/extensions/guacamole-auth-mysql/src/main/java/net/sourceforge/guacamole/net/auth/mysql/service/ConnectionService.java",
                "status": "modified",
                "changes": 4,
                "additions": 2,
                "contents_url": "https://api.github.com/repos/apache/guacamole-client/contents/extensions/guacamole-auth-mysql/src/main/java/net/sourceforge/guacamole/net/auth/mysql/service/ConnectionService.java?ref=83e820e7ba1899e582d50b83163c4ed03947a278",
                "patch": "@@ -350,8 +350,8 @@ public MySQLGuacamoleSocket connect(MySQLConnection connection,\n                     (\"Cannot connect. Connection already in use by this user.\");\n \n         // Get guacd connection information\n-        String host = GuacamoleProperties.getProperty(GuacamoleProperties.GUACD_HOSTNAME);\n-        int port = GuacamoleProperties.getProperty(GuacamoleProperties.GUACD_PORT);\n+        String host = GuacamoleProperties.getRequiredProperty(GuacamoleProperties.GUACD_HOSTNAME);\n+        int port = GuacamoleProperties.getRequiredProperty(GuacamoleProperties.GUACD_PORT);\n \n         // Get socket\n         GuacamoleSocket socket;",
                "deletions": 2
            }
        ]
    },
    {
        "repo": "guacamole-client",
        "message": "Fix NPE if end-of-stream encountered during handshake (fixes #195).",
        "commit": "https://github.com/apache/guacamole-client/commit/13db41f7049b9ff7240ac59d981efd333b0c7538",
        "parent": "https://github.com/apache/guacamole-client/commit/ed4dd27a0538c331b25b0b89a50a0e27b821007d",
        "bug_id": "guacamole-client_15",
        "file": [
            {
                "sha": "1e57b171e76b55f9553d4c88cff1d023d2079b05",
                "filename": "guacamole-common/src/main/java/net/sourceforge/guacamole/protocol/ConfiguredGuacamoleSocket.java",
                "blob_url": "https://github.com/apache/guacamole-client/blob/13db41f7049b9ff7240ac59d981efd333b0c7538/guacamole-common/src/main/java/net/sourceforge/guacamole/protocol/ConfiguredGuacamoleSocket.java",
                "raw_url": "https://github.com/apache/guacamole-client/raw/13db41f7049b9ff7240ac59d981efd333b0c7538/guacamole-common/src/main/java/net/sourceforge/guacamole/protocol/ConfiguredGuacamoleSocket.java",
                "status": "modified",
                "changes": 6,
                "additions": 6,
                "contents_url": "https://api.github.com/repos/apache/guacamole-client/contents/guacamole-common/src/main/java/net/sourceforge/guacamole/protocol/ConfiguredGuacamoleSocket.java?ref=13db41f7049b9ff7240ac59d981efd333b0c7538",
                "patch": "@@ -40,6 +40,7 @@\n import net.sourceforge.guacamole.io.GuacamoleReader;\n import net.sourceforge.guacamole.io.GuacamoleWriter;\n import net.sourceforge.guacamole.GuacamoleException;\n+import net.sourceforge.guacamole.GuacamoleServerException;\n import net.sourceforge.guacamole.net.GuacamoleSocket;\n import net.sourceforge.guacamole.protocol.GuacamoleInstruction.Operation;\n \n@@ -86,7 +87,12 @@ public ConfiguredGuacamoleSocket(GuacamoleSocket socket,\n         // Wait for server args\n         GuacamoleInstruction instruction;\n         do {\n+            \n+            // Read instruction, fail if end-of-stream\n             instruction = reader.readInstruction();\n+            if (instruction == null)\n+                throw new GuacamoleServerException(\"End of stream during initial handshake.\");\n+            \n         } while (instruction.getOperation() != Operation.SERVER_ARGS);\n \n         // Build args list off provided names and config",
                "deletions": 0
            }
        ]
    },
    {
        "repo": "guacamole-client",
        "message": "GUAC-969: Fix possible NPE in GuacamoleClassLoader, if the contents of the lib directory cannot be listed.",
        "commit": "https://github.com/apache/guacamole-client/commit/fa3ccb97113f6fefe0dc6ff083f1d6b48eb7aac2",
        "parent": "https://github.com/apache/guacamole-client/commit/fd38d918bb43062f23ec3115e7e050e3204498a9",
        "bug_id": "guacamole-client_16",
        "file": [
            {
                "sha": "218d013969cc7f5b813543d827718ca2b7985f91",
                "filename": "guacamole/src/main/java/org/glyptodon/guacamole/net/basic/GuacamoleClassLoader.java",
                "blob_url": "https://github.com/apache/guacamole-client/blob/fa3ccb97113f6fefe0dc6ff083f1d6b48eb7aac2/guacamole/src/main/java/org/glyptodon/guacamole/net/basic/GuacamoleClassLoader.java",
                "raw_url": "https://github.com/apache/guacamole-client/raw/fa3ccb97113f6fefe0dc6ff083f1d6b48eb7aac2/guacamole/src/main/java/org/glyptodon/guacamole/net/basic/GuacamoleClassLoader.java",
                "status": "modified",
                "changes": 14,
                "additions": 9,
                "contents_url": "https://api.github.com/repos/apache/guacamole-client/contents/guacamole/src/main/java/org/glyptodon/guacamole/net/basic/GuacamoleClassLoader.java?ref=fa3ccb97113f6fefe0dc6ff083f1d6b48eb7aac2",
                "patch": "@@ -105,7 +105,7 @@ private GuacamoleClassLoader(File libDirectory) throws GuacamoleException {\n \n         // Get list of URLs for all .jar's in the lib directory\n         Collection<URL> jarURLs = new ArrayList<URL>();\n-        for (File file : libDirectory.listFiles(new FilenameFilter() {\n+        File[] files = libDirectory.listFiles(new FilenameFilter() {\n \n             @Override\n             public boolean accept(File dir, String name) {\n@@ -115,13 +115,17 @@ public boolean accept(File dir, String name) {\n \n             }\n \n-        })) {\n+        });\n \n-            try {\n+        // Verify directory was successfully read\n+        if (files == null)\n+            throw new GuacamoleException(\"Unable to read contents of directory \" + libDirectory);\n \n-                // Add URL for the .jar to the jar URL list\n-                jarURLs.add(file.toURI().toURL());\n+        // Add the URL for each .jar to the jar URL list\n+        for (File file : files) {\n \n+            try {\n+                jarURLs.add(file.toURI().toURL());\n             }\n             catch (MalformedURLException e) {\n                 throw new GuacamoleException(e);",
                "deletions": 5
            }
        ]
    },
    {
        "repo": "guacamole-client",
        "message": "Fixed NPE in reader when connection closed during negotiaion. Added getRequiredProperty().",
        "commit": "https://github.com/apache/guacamole-client/commit/e3260ca3e9ffb6c029141748f9983e28920f8c3a",
        "parent": "https://github.com/apache/guacamole-client/commit/de526911a5687a8e4d0bbaee9a057489fabb69bf",
        "bug_id": "guacamole-client_17",
        "file": [
            {
                "sha": "96997ac61c3589aa892d44a08db97833b57e6f2e",
                "filename": "guacamole-common/src/main/java/net/sourceforge/guacamole/io/ReaderGuacamoleReader.java",
                "blob_url": "https://github.com/apache/guacamole-client/blob/e3260ca3e9ffb6c029141748f9983e28920f8c3a/guacamole-common/src/main/java/net/sourceforge/guacamole/io/ReaderGuacamoleReader.java",
                "raw_url": "https://github.com/apache/guacamole-client/raw/e3260ca3e9ffb6c029141748f9983e28920f8c3a/guacamole-common/src/main/java/net/sourceforge/guacamole/io/ReaderGuacamoleReader.java",
                "status": "modified",
                "changes": 4,
                "additions": 4,
                "contents_url": "https://api.github.com/repos/apache/guacamole-client/contents/guacamole-common/src/main/java/net/sourceforge/guacamole/io/ReaderGuacamoleReader.java?ref=e3260ca3e9ffb6c029141748f9983e28920f8c3a",
                "patch": "@@ -124,6 +124,10 @@ public GuacamoleInstruction readInstruction() throws GuacamoleException {\n             instructionStart = 0;\n         }\n \n+        // If EOF, return EOF\n+        if (instructionBuffer == null)\n+            return null;\n+\n         // Locate end-of-opcode and end-of-instruction\n         int opcodeEnd = -1;\n         int instructionEnd = -1;",
                "deletions": 0
            },
            {
                "sha": "6d272058d9e03720d8803ce6032c302535800279",
                "filename": "guacamole-common/src/main/java/net/sourceforge/guacamole/properties/GuacamoleProperties.java",
                "blob_url": "https://github.com/apache/guacamole-client/blob/e3260ca3e9ffb6c029141748f9983e28920f8c3a/guacamole-common/src/main/java/net/sourceforge/guacamole/properties/GuacamoleProperties.java",
                "raw_url": "https://github.com/apache/guacamole-client/raw/e3260ca3e9ffb6c029141748f9983e28920f8c3a/guacamole-common/src/main/java/net/sourceforge/guacamole/properties/GuacamoleProperties.java",
                "status": "modified",
                "changes": 24,
                "additions": 24,
                "contents_url": "https://api.github.com/repos/apache/guacamole-client/contents/guacamole-common/src/main/java/net/sourceforge/guacamole/properties/GuacamoleProperties.java?ref=e3260ca3e9ffb6c029141748f9983e28920f8c3a",
                "patch": "@@ -98,4 +98,28 @@ private GuacamoleProperties() {}\n \n     }\n \n+    /**\n+     * Given a GuacamoleProperty, parses and returns the value set for that\n+     * property in guacamole.properties. An exception is thrown if the value\n+     * is not provided.\n+     *\n+     * @param <Type> The type that the given property is parsed into.\n+     * @param property The property to read from guacamole.properties.\n+     * @return The parsed value of the property as read from\n+     *         guacamole.properties.\n+     * @throws GuacamoleException If an error occurs while parsing the value\n+     *                            for the given property in\n+     *                            guacamole.properties, or if the property is\n+     *                            not specified.\n+     */\n+    public static <Type> Type getRequiredProperty(GuacamoleProperty<Type> property)\n+            throws GuacamoleException {\n+\n+        Type value = getProperty(property);\n+        if (value == null)\n+            throw new GuacamoleException(\"Property \" + property.getName() + \" is required.\");\n+\n+        return value;\n+        \n+    }\n }",
                "deletions": 0
            }
        ]
    },
    {
        "repo": "guacamole-client",
        "message": "Merge pull request #311 from glyptodon/login-npe\n\nGUAC-1442: Do not attempt to remove/retrieve tokens that do not exist.",
        "commit": "https://github.com/apache/guacamole-client/commit/a3c6193cfe08f8bd0283024e51ea29b45b557710",
        "parent": "https://github.com/apache/guacamole-client/commit/c7b595051aef2dc6a54c39c2059988e4127a3210",
        "bug_id": "guacamole-client_18",
        "file": [
            {
                "sha": "c92f6a7eb744f7bc59aa129f6c48af6124a32700",
                "filename": "guacamole/src/main/java/org/glyptodon/guacamole/net/basic/rest/auth/BasicTokenSessionMap.java",
                "blob_url": "https://github.com/apache/guacamole-client/blob/a3c6193cfe08f8bd0283024e51ea29b45b557710/guacamole/src/main/java/org/glyptodon/guacamole/net/basic/rest/auth/BasicTokenSessionMap.java",
                "raw_url": "https://github.com/apache/guacamole-client/raw/a3c6193cfe08f8bd0283024e51ea29b45b557710/guacamole/src/main/java/org/glyptodon/guacamole/net/basic/rest/auth/BasicTokenSessionMap.java",
                "status": "modified",
                "changes": 11,
                "additions": 11,
                "contents_url": "https://api.github.com/repos/apache/guacamole-client/contents/guacamole/src/main/java/org/glyptodon/guacamole/net/basic/rest/auth/BasicTokenSessionMap.java?ref=a3c6193cfe08f8bd0283024e51ea29b45b557710",
                "patch": "@@ -151,6 +151,10 @@ public void run() {\n     @Override\n     public GuacamoleSession get(String authToken) {\n         \n+        // There are no null auth tokens\n+        if (authToken == null)\n+            return null;\n+\n         // Update the last access time and return the GuacamoleSession\n         GuacamoleSession session = sessionMap.get(authToken);\n         if (session != null)\n@@ -167,7 +171,14 @@ public void put(String authToken, GuacamoleSession session) {\n \n     @Override\n     public GuacamoleSession remove(String authToken) {\n+\n+        // There are no null auth tokens\n+        if (authToken == null)\n+            return null;\n+\n+        // Attempt to retrieve only if non-null\n         return sessionMap.remove(authToken);\n+\n     }\n \n     @Override",
                "deletions": 0
            }
        ]
    }
]