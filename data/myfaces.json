{
    "myfaces_0f8e87c": {
        "bug_id": "myfaces_0f8e87c",
        "commit": "https://github.com/apache/myfaces/commit/0f8e87cd65fb2825d5b24dc41cf1d62b7fd5aa8b",
        "file": [
            {
                "additions": 21,
                "blob_url": "https://github.com/apache/myfaces/blob/0f8e87cd65fb2825d5b24dc41cf1d62b7fd5aa8b/api/src/main/java/javax/faces/component/UIComponentBase.java",
                "changes": 22,
                "contents_url": "https://api.github.com/repos/apache/myfaces/contents/api/src/main/java/javax/faces/component/UIComponentBase.java?ref=0f8e87cd65fb2825d5b24dc41cf1d62b7fd5aa8b",
                "deletions": 1,
                "filename": "api/src/main/java/javax/faces/component/UIComponentBase.java",
                "patch": "@@ -1416,6 +1416,11 @@ public void setTransient(boolean transientFlag)\n      */\n     public static Object saveAttachedState(FacesContext context, Object attachedObject)\n     {\n+        if (context == null)\n+        {\n+            throw new NullPointerException (\"context\");\n+        }\n+        \n         if (attachedObject == null)\n             return null;\n         // StateHolder interface should take precedence over\n@@ -1506,6 +1511,11 @@ else if (stateObj instanceof _AttachedStateWrapper)\n      */\n     public Object saveState(FacesContext context)\n     {\n+        if (context == null)\n+        {\n+            throw new NullPointerException (\"context\");\n+        }\n+        \n         if (initialStateMarked())\n         {\n             //Delta\n@@ -1559,10 +1569,20 @@ public Object saveState(FacesContext context)\n     @SuppressWarnings(\"unchecked\")\n     public void restoreState(FacesContext context, Object state)\n     {\n+        if (context == null)\n+        {\n+            throw new NullPointerException (\"context\");\n+        }\n+        \n         if (state == null)\n         {\n             //Only happens if initialStateMarked return true\n-            return;\n+            //return;\n+            \n+            // Commenting the above out because Javadocs say that we need to\n+            // throw an NPE here.\n+            \n+            throw new NullPointerException (\"state\");\n         }\n         \n         Object values[] = (Object[]) state;",
                "raw_url": "https://github.com/apache/myfaces/raw/0f8e87cd65fb2825d5b24dc41cf1d62b7fd5aa8b/api/src/main/java/javax/faces/component/UIComponentBase.java",
                "sha": "ce78efc87bcc3c20383d4f293115377af6eecd9f",
                "status": "modified"
            }
        ],
        "message": "MYFACES-2508 - saveState()/restoreState() need to throw NPEs if args are null.",
        "parent": "https://github.com/apache/myfaces/commit/1b73275b33c07aad3f103a5db9405aabe1678797",
        "repo": "myfaces",
        "unit_tests": [
            "UIComponentBaseTest.java"
        ]
    },
    "myfaces_1668829": {
        "bug_id": "myfaces_1668829",
        "commit": "https://github.com/apache/myfaces/commit/166882959f49c2ba714ad75f7b2babbbb72c8b25",
        "file": [
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/myfaces/blob/166882959f49c2ba714ad75f7b2babbbb72c8b25/impl/src/main/java/org/apache/myfaces/application/FacesServletMappingUtils.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/myfaces/contents/impl/src/main/java/org/apache/myfaces/application/FacesServletMappingUtils.java?ref=166882959f49c2ba714ad75f7b2babbbb72c8b25",
                "deletions": 1,
                "filename": "impl/src/main/java/org/apache/myfaces/application/FacesServletMappingUtils.java",
                "patch": "@@ -48,7 +48,7 @@ public static FacesServletMapping getCurrentRequestFacesServletMapping(FacesCont\n         if (mapping == null)\r\n         {\r\n             ExternalContext externalContext = context.getExternalContext();\r\n-            mapping = FacesServletMappingUtils.calculateFacesServletMapping(\r\n+            mapping = calculateFacesServletMapping(\r\n                     context,\r\n                     externalContext.getRequestServletPath(),\r\n                     externalContext.getRequestPathInfo(),\r",
                "raw_url": "https://github.com/apache/myfaces/raw/166882959f49c2ba714ad75f7b2babbbb72c8b25/impl/src/main/java/org/apache/myfaces/application/FacesServletMappingUtils.java",
                "sha": "c6e0393a9b4fa20b79c14067b975441f8082eccc",
                "status": "modified"
            },
            {
                "additions": 6,
                "blob_url": "https://github.com/apache/myfaces/blob/166882959f49c2ba714ad75f7b2babbbb72c8b25/impl/src/main/java/org/apache/myfaces/application/ViewIdSupport.java",
                "changes": 6,
                "contents_url": "https://api.github.com/repos/apache/myfaces/contents/impl/src/main/java/org/apache/myfaces/application/ViewIdSupport.java?ref=166882959f49c2ba714ad75f7b2babbbb72c8b25",
                "deletions": 0,
                "filename": "impl/src/main/java/org/apache/myfaces/application/ViewIdSupport.java",
                "patch": "@@ -130,10 +130,16 @@ protected String deriveViewId(FacesContext context, String rawViewId, boolean ch\n             }\n             else if (mapping.isExactMapping())\n             {\n+                // if the current request is a exact mapping and the viewId equals the exact viewId\n                 if (rawViewId.equals(mapping.getExact()))\n                 {\n                     viewId = handleSuffixMapping(context, rawViewId + \".jsf\");\n                 }\n+                // otherwise lets try to resolve a possible mapping for the requested viewId\n+                else\n+                {\n+                    viewId = rawViewId;\n+                }\n             }\n             else if (mapping.isPrefixMapping())\n             {",
                "raw_url": "https://github.com/apache/myfaces/raw/166882959f49c2ba714ad75f7b2babbbb72c8b25/impl/src/main/java/org/apache/myfaces/application/ViewIdSupport.java",
                "sha": "a8131474dfda67399701ac275f10216cfc27977c",
                "status": "modified"
            }
        ],
        "message": "fixed NPE",
        "parent": "https://github.com/apache/myfaces/commit/120f4cf271d3caa437e79d88e13df19db0a0884f",
        "repo": "myfaces",
        "unit_tests": [
            "ViewIdSupportTest.java"
        ]
    },
    "myfaces_2777a15": {
        "bug_id": "myfaces_2777a15",
        "commit": "https://github.com/apache/myfaces/commit/2777a153a593dd47e423345b21b6e737ff573905",
        "file": [
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/myfaces/blob/2777a153a593dd47e423345b21b6e737ff573905/impl/src/main/java/org/apache/myfaces/application/NavigationHandlerImpl.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/myfaces/contents/impl/src/main/java/org/apache/myfaces/application/NavigationHandlerImpl.java?ref=2777a153a593dd47e423345b21b6e737ff573905",
                "deletions": 1,
                "filename": "impl/src/main/java/org/apache/myfaces/application/NavigationHandlerImpl.java",
                "patch": "@@ -120,7 +120,7 @@ public void handleNavigation(FacesContext facesContext, String fromAction, Strin\n                 \n                 //Clear ViewMap if we are redirecting to other resource\n                 UIViewRoot viewRoot = facesContext.getViewRoot(); \n-                if (viewRoot != null && !viewRoot.getViewId().equals(toViewId))\n+                if (viewRoot != null && !toViewId.equals(viewRoot.getViewId()))\n                 {\n                     //call getViewMap(false) to prevent unnecessary map creation\n                     Map<String, Object> viewMap = viewRoot.getViewMap(false);",
                "raw_url": "https://github.com/apache/myfaces/raw/2777a153a593dd47e423345b21b6e737ff573905/impl/src/main/java/org/apache/myfaces/application/NavigationHandlerImpl.java",
                "sha": "45b89b0f83048056eb534b6881e74d1dfcd2a08f",
                "status": "modified"
            }
        ],
        "message": "MYFACES-3472 NavigationHandler throws a NPE if current viewId is null (Thanks to Marcus B\u00fcttner for provide this patch)",
        "parent": "https://github.com/apache/myfaces/commit/44e3b66885efc12f558c35dfaedf5987351437e5",
        "repo": "myfaces",
        "unit_tests": [
            "NavigationHandlerImplTest.java"
        ]
    },
    "myfaces_319f522": {
        "bug_id": "myfaces_319f522",
        "commit": "https://github.com/apache/myfaces/commit/319f522066f1c096db6fd305754be0083cbe606a",
        "file": [
            {
                "additions": 7,
                "blob_url": "https://github.com/apache/myfaces/blob/319f522066f1c096db6fd305754be0083cbe606a/impl/src/main/java/org/apache/myfaces/application/ApplicationImpl.java",
                "changes": 10,
                "contents_url": "https://api.github.com/repos/apache/myfaces/contents/impl/src/main/java/org/apache/myfaces/application/ApplicationImpl.java?ref=319f522066f1c096db6fd305754be0083cbe606a",
                "deletions": 3,
                "filename": "impl/src/main/java/org/apache/myfaces/application/ApplicationImpl.java",
                "patch": "@@ -71,7 +71,7 @@\n \n /**\n  * DOCUMENT ME!\n- * \n+ *\n  * @author Manfred Geiler (latest modification by $Author$)\n  * @author Anton Koinov\n  * @author Thomas Spiegl\n@@ -669,8 +669,12 @@ public Converter createConverter(String converterId)\n         checkEmpty(converterId, \"converterId\");\n \n         Class converterClass = _converterIdToClassMap.get(converterId);\n+        if(converterClass == null)\n+        {\n+            throw new FacesException(\"Could not find any registered converter-class by converterId : \"+converterId);\n+        }\n \n-        try\n+\t\ttry\n         {\n             Converter converter = (Converter) converterClass.newInstance();\n \n@@ -703,7 +707,7 @@ private Converter internalCreateConverter(Class targetClass)\n         if (converterClassName == null && targetClass.isEnum()) {\n         \tconverterClassName = _converterClassNameToClassMap.get(Enum.class);\n         }\n-        \n+\n         // Locate a Converter registered for interfaces that are\n         // implemented by the target class (directly or indirectly).\n         if (converterClassName == null)",
                "raw_url": "https://github.com/apache/myfaces/raw/319f522066f1c096db6fd305754be0083cbe606a/impl/src/main/java/org/apache/myfaces/application/ApplicationImpl.java",
                "sha": "af73a7072234a2119b1cf482ff4034f5886233fd",
                "status": "modified"
            }
        ],
        "message": "https://issues.apache.org/jira/browse/MYFACES-1755\ncreate converter with unknown id fails with NPE",
        "parent": "https://github.com/apache/myfaces/commit/6cfc33845af48302b19552a1e9573c2f6c009373",
        "repo": "myfaces",
        "unit_tests": [
            "ApplicationImplTest.java"
        ]
    },
    "myfaces_3ef8467": {
        "bug_id": "myfaces_3ef8467",
        "commit": "https://github.com/apache/myfaces/commit/3ef84672f526d30c8bfffa3dff1c3ff1cd90f5ae",
        "file": [
            {
                "additions": 18,
                "blob_url": "https://github.com/apache/myfaces/blob/3ef84672f526d30c8bfffa3dff1c3ff1cd90f5ae/impl/src/main/java/org/apache/myfaces/renderkit/ErrorPageWriter.java",
                "changes": 56,
                "contents_url": "https://api.github.com/repos/apache/myfaces/contents/impl/src/main/java/org/apache/myfaces/renderkit/ErrorPageWriter.java?ref=3ef84672f526d30c8bfffa3dff1c3ff1cd90f5ae",
                "deletions": 38,
                "filename": "impl/src/main/java/org/apache/myfaces/renderkit/ErrorPageWriter.java",
                "patch": "@@ -18,41 +18,16 @@\n  */\n package org.apache.myfaces.renderkit;\n \n-import java.beans.BeanInfo;\n-import java.beans.Introspector;\n-import java.beans.PropertyDescriptor;\n-import java.io.ByteArrayOutputStream;\n-import java.io.IOException;\n-import java.io.InputStream;\n-import java.io.PrintWriter;\n-import java.io.Serializable;\n-import java.io.StringWriter;\n-import java.io.Writer;\n-import java.lang.reflect.Method;\n-import java.text.DateFormat;\n-import java.util.ArrayList;\n-import java.util.Arrays;\n-import java.util.Collection;\n-import java.util.Date;\n-import java.util.EnumSet;\n-import java.util.Iterator;\n-import java.util.List;\n-import java.util.Map;\n-import java.util.SortedMap;\n-import java.util.TreeMap;\n-import java.util.logging.Level;\n-import java.util.logging.Logger;\n-import java.util.regex.Matcher;\n-import java.util.regex.Pattern;\n+import org.apache.myfaces.buildtools.maven2.plugin.builder.annotation.JSFWebConfigParam;\n+import org.apache.myfaces.shared_impl.renderkit.html.HtmlResponseWriterImpl;\n+import org.apache.myfaces.shared_impl.util.ClassUtils;\n+import org.apache.myfaces.shared_impl.webapp.webxml.WebXml;\n+import org.apache.myfaces.view.facelets.component.UIRepeat;\n \n import javax.el.Expression;\n import javax.el.ValueExpression;\n import javax.faces.FacesException;\n-import javax.faces.component.UIColumn;\n-import javax.faces.component.UIComponent;\n-import javax.faces.component.UIData;\n-import javax.faces.component.UIInput;\n-import javax.faces.component.UIViewRoot;\n+import javax.faces.component.*;\n import javax.faces.component.visit.VisitCallback;\n import javax.faces.component.visit.VisitContext;\n import javax.faces.component.visit.VisitHint;\n@@ -66,12 +41,17 @@\n import javax.faces.render.Renderer;\n import javax.faces.view.Location;\n import javax.servlet.http.HttpServletResponse;\n-\n-import org.apache.myfaces.buildtools.maven2.plugin.builder.annotation.JSFWebConfigParam;\n-import org.apache.myfaces.shared_impl.renderkit.html.HtmlResponseWriterImpl;\n-import org.apache.myfaces.shared_impl.util.ClassUtils;\n-import org.apache.myfaces.shared_impl.webapp.webxml.WebXml;\n-import org.apache.myfaces.view.facelets.component.UIRepeat;\n+import java.beans.BeanInfo;\n+import java.beans.Introspector;\n+import java.beans.PropertyDescriptor;\n+import java.io.*;\n+import java.lang.reflect.Method;\n+import java.text.DateFormat;\n+import java.util.*;\n+import java.util.logging.Level;\n+import java.util.logging.Logger;\n+import java.util.regex.Matcher;\n+import java.util.regex.Pattern;\n \n /**\n  * This class provides utility methods to generate the\n@@ -843,7 +823,7 @@ public VisitResult visit(VisitContext context, UIComponent target)\n                     _writer.write(\"</dl>\");\n                     \n                     while (parent != null \n-                            && (parent.getChildren().get(parent.getChildCount() - 1) == target\n+                            && ((parent.getChildCount()>0 && parent.getChildren().get(parent.getChildCount() - 1) == target)\n                                     || (parent.getFacetCount() != 0 \n                                             && _getVisitedFacetCount(parent) == parent.getFacetCount())))\n                     {",
                "raw_url": "https://github.com/apache/myfaces/raw/3ef84672f526d30c8bfffa3dff1c3ff1cd90f5ae/impl/src/main/java/org/apache/myfaces/renderkit/ErrorPageWriter.java",
                "sha": "55d39ff8c9c7ec95da343c4404d263210a063432",
                "status": "modified"
            }
        ],
        "message": "fixed NPE in newly introduced error-page writing",
        "parent": "https://github.com/apache/myfaces/commit/95a862a5bde26ea5556e1da8b17f6b1a5749f6ee",
        "repo": "myfaces",
        "unit_tests": [
            "ErrorPageWriterTest.java"
        ]
    },
    "myfaces_59a143f": {
        "bug_id": "myfaces_59a143f",
        "commit": "https://github.com/apache/myfaces/commit/59a143ff6126aadbd4eadbed134765876be3236b",
        "file": [
            {
                "additions": 4,
                "blob_url": "https://github.com/apache/myfaces/blob/59a143ff6126aadbd4eadbed134765876be3236b/impl/src/main/java/org/apache/myfaces/renderkit/ErrorPageWriter.java",
                "changes": 5,
                "contents_url": "https://api.github.com/repos/apache/myfaces/contents/impl/src/main/java/org/apache/myfaces/renderkit/ErrorPageWriter.java?ref=59a143ff6126aadbd4eadbed134765876be3236b",
                "deletions": 1,
                "filename": "impl/src/main/java/org/apache/myfaces/renderkit/ErrorPageWriter.java",
                "patch": "@@ -503,7 +503,10 @@ private static void _writeVariables(Writer writer, FacesContext faces, UIViewRoo\n         ExternalContext ctx = faces.getExternalContext();\r\n         _writeVariables(writer, ctx.getRequestParameterMap(), \"Request Parameters\");\r\n         _writeVariables(writer, ctx.getRequestMap(), \"Request Attributes\");\r\n-        _writeVariables(writer, view.getViewMap(), \"View Attributes\");\r\n+        if (view != null)\r\n+        {\r\n+          _writeVariables(writer, view.getViewMap(), \"View Attributes\");\r\n+        }\r\n         if (ctx.getSession(false) != null)\r\n         {\r\n             _writeVariables(writer, ctx.getSessionMap(), \"Session Attributes\");\r",
                "raw_url": "https://github.com/apache/myfaces/raw/59a143ff6126aadbd4eadbed134765876be3236b/impl/src/main/java/org/apache/myfaces/renderkit/ErrorPageWriter.java",
                "sha": "387d5633570c8cfca3730d6864af18fc82fcbb34",
                "status": "modified"
            }
        ],
        "message": "fixing potential NPE",
        "parent": "https://github.com/apache/myfaces/commit/cef8d18c19dde09e079e9e3fb49cf2357ecfa2f2",
        "repo": "myfaces",
        "unit_tests": [
            "ErrorPageWriterTest.java"
        ]
    },
    "myfaces_7599580": {
        "bug_id": "myfaces_7599580",
        "commit": "https://github.com/apache/myfaces/commit/75995807f8c55cede8399655ebfe8d0701c4054d",
        "file": [
            {
                "additions": 6,
                "blob_url": "https://github.com/apache/myfaces/blob/75995807f8c55cede8399655ebfe8d0701c4054d/api/src/main/java/javax/faces/component/UIInput.java",
                "changes": 10,
                "contents_url": "https://api.github.com/repos/apache/myfaces/contents/api/src/main/java/javax/faces/component/UIInput.java?ref=75995807f8c55cede8399655ebfe8d0701c4054d",
                "deletions": 4,
                "filename": "api/src/main/java/javax/faces/component/UIInput.java",
                "patch": "@@ -123,10 +123,11 @@ public String getFamily()\n     @Override\n     public void setValue(Object value)\n     {\n-        if (getFacesContext().isProjectStage(ProjectStage.Development))\n+        FacesContext facesContext = getFacesContext();\n+        if (facesContext != null && facesContext.isProjectStage(ProjectStage.Development))\n         {\n             // extended debug-info when in Development mode\n-            _createFieldDebugInfo(getFacesContext(), \"localValue\",\n+            _createFieldDebugInfo(facesContext, \"localValue\",\n                     getLocalValue(), value, 1);\n         }\n         setLocalValueSet(true);\n@@ -921,10 +922,11 @@ public Object getSubmittedValue()\n \n     public void setSubmittedValue(Object submittedValue)\n     {\n-        if (getFacesContext().isProjectStage(ProjectStage.Development))\n+        FacesContext facesContext = getFacesContext();\n+        if (facesContext != null && facesContext.isProjectStage(ProjectStage.Development))\n         {\n             // extended debug-info when in Development mode\n-            _createFieldDebugInfo(getFacesContext(), \"submittedValue\",\n+            _createFieldDebugInfo(facesContext, \"submittedValue\",\n                     getSubmittedValue(), submittedValue, 1);\n         }\n         getStateHelper().put(PropertyKeys.submittedValue, submittedValue );",
                "raw_url": "https://github.com/apache/myfaces/raw/75995807f8c55cede8399655ebfe8d0701c4054d/api/src/main/java/javax/faces/component/UIInput.java",
                "sha": "6002040eb0eb22252c6de3a5ff4eb6a46df24ae4",
                "status": "modified"
            }
        ],
        "message": "MYFACES-3434 UIInput.resetValue() throws NPE when no FacesContext available (Thanks to Martin Koci for provide this patch)",
        "parent": "https://github.com/apache/myfaces/commit/76c9ee4335c0210df8c84fcaee584d5e657aa332",
        "repo": "myfaces",
        "unit_tests": [
            "UIInputTest.java"
        ]
    },
    "myfaces_a9f2138": {
        "bug_id": "myfaces_a9f2138",
        "commit": "https://github.com/apache/myfaces/commit/a9f2138a6e70a7202d78580d651699d097b4c7c4",
        "file": [
            {
                "additions": 5,
                "blob_url": "https://github.com/apache/myfaces/blob/a9f2138a6e70a7202d78580d651699d097b4c7c4/api/src/main/java/javax/faces/validator/_MessageUtils.java",
                "changes": 10,
                "contents_url": "https://api.github.com/repos/apache/myfaces/contents/api/src/main/java/javax/faces/validator/_MessageUtils.java?ref=a9f2138a6e70a7202d78580d651699d097b4c7c4",
                "deletions": 5,
                "filename": "api/src/main/java/javax/faces/validator/_MessageUtils.java",
                "patch": "@@ -54,6 +54,11 @@ static FacesMessage getMessage(FacesContext facesContext,\n         String summary;\n         String detail;\n \n+        if(locale == null)\n+        {\n+            locale = Locale.getDefault();\n+        }\n+\n         appBundle = getApplicationBundle(facesContext, locale);\n         summary = getBundleString(appBundle, messageId);\n         if (summary != null)\n@@ -144,11 +149,6 @@ private static ResourceBundle getBundle(FacesContext facesContext,\n                                             Locale locale,\n                                             String bundleName)\n     {\n-        if(locale == null)\n-        {\n-            locale = Locale.getDefault();\n-        }\n-        \n         try\n         {\n             //First we try the JSF implementation class loader",
                "raw_url": "https://github.com/apache/myfaces/raw/a9f2138a6e70a7202d78580d651699d097b4c7c4/api/src/main/java/javax/faces/validator/_MessageUtils.java",
                "sha": "7a67aa55522a9ae7599ceda2cd1392fbd59d57ab",
                "status": "modified"
            }
        ],
        "message": "fix NPE from NumberFormat.format() when DoubleRangeValidator detects MAXIMUM violation and locale is null.\nThe unit test didn't catch this error because it passes Strings to the message formatter instead of a Double.",
        "parent": "https://github.com/apache/myfaces/commit/b73cd26009c0ecfde7e672f44abf075c9dafbde7",
        "repo": "myfaces",
        "unit_tests": [
            "_MessageUtilsTest.java"
        ]
    },
    "myfaces_af9e0f6": {
        "bug_id": "myfaces_af9e0f6",
        "commit": "https://github.com/apache/myfaces/commit/af9e0f64dba9d92f851e41f9428c8935bd307786",
        "file": [
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/myfaces/blob/af9e0f64dba9d92f851e41f9428c8935bd307786/shared/src/main/java/org/apache/myfaces/shared/renderkit/html/HtmlResponseWriterImpl.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/myfaces/contents/shared/src/main/java/org/apache/myfaces/shared/renderkit/html/HtmlResponseWriterImpl.java?ref=af9e0f64dba9d92f851e41f9428c8935bd307786",
                "deletions": 1,
                "filename": "shared/src/main/java/org/apache/myfaces/shared/renderkit/html/HtmlResponseWriterImpl.java",
                "patch": "@@ -1015,7 +1015,7 @@ public void write(String str) throws IOException\n         closeStartTagIfNecessary();\n         // empty string commonly used to force the start tag to be closed.\n         // in such case, do not call down the writer chain\n-        if (str.length() > 0)\n+        if (str != null && str.length() > 0)\n         {\n             // Don't bother encoding anything if chosen character encoding is UTF-8\n             if (_isUTF8)",
                "raw_url": "https://github.com/apache/myfaces/raw/af9e0f64dba9d92f851e41f9428c8935bd307786/shared/src/main/java/org/apache/myfaces/shared/renderkit/html/HtmlResponseWriterImpl.java",
                "sha": "464cd3e79eadb480d550256173f4c0b90d27f882",
                "status": "modified"
            }
        ],
        "message": "MYFACES-3708 NPE when no title using primefaces mobile",
        "parent": "https://github.com/apache/myfaces/commit/3de881004f40f87b8417e61ccecd4109329caab9",
        "repo": "myfaces",
        "unit_tests": [
            "HtmlResponseWriterImplTest.java"
        ]
    },
    "myfaces_ca86c8d": {
        "bug_id": "myfaces_ca86c8d",
        "commit": "https://github.com/apache/myfaces/commit/ca86c8d5fde765c78824bb70441eb065bc11b433",
        "file": [
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/myfaces/blob/ca86c8d5fde765c78824bb70441eb065bc11b433/impl/src/main/java/org/apache/myfaces/context/servlet/ServletExternalContextImpl.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/myfaces/contents/impl/src/main/java/org/apache/myfaces/context/servlet/ServletExternalContextImpl.java?ref=ca86c8d5fde765c78824bb70441eb065bc11b433",
                "deletions": 1,
                "filename": "impl/src/main/java/org/apache/myfaces/context/servlet/ServletExternalContextImpl.java",
                "patch": "@@ -458,7 +458,7 @@ public String encodeWebsocketURL(String url)\n \n         FacesContext facesContext = getCurrentFacesContext();\n         Integer port = MyfacesConfig.getCurrentInstance(facesContext).getWebsocketEndpointPort();\n-        port = (port == 0) ? null : port;\n+        port = (port == null || port == 0) ? null : port;\n         if (port != null && !port.equals(facesContext.getExternalContext().getRequestServerPort()))\n         {\n             String scheme = facesContext.getExternalContext().getRequestScheme();",
                "raw_url": "https://github.com/apache/myfaces/raw/ca86c8d5fde765c78824bb70441eb065bc11b433/impl/src/main/java/org/apache/myfaces/context/servlet/ServletExternalContextImpl.java",
                "sha": "23df782de60f0f6f9c85a5b77d324f437c5ad4dc",
                "status": "modified"
            }
        ],
        "message": "fixed possible NPE",
        "parent": "https://github.com/apache/myfaces/commit/18f7f6e343d213b548fea42c31342909c6f6f7f9",
        "repo": "myfaces",
        "unit_tests": [
            "ServletExternalContextImplTest.java"
        ]
    },
    "myfaces_ceb11e3": {
        "bug_id": "myfaces_ceb11e3",
        "commit": "https://github.com/apache/myfaces/commit/ceb11e3bb9d9ea4c58a1f0aae56f60bab3e49a90",
        "file": [
            {
                "additions": 15,
                "blob_url": "https://github.com/apache/myfaces/blob/ceb11e3bb9d9ea4c58a1f0aae56f60bab3e49a90/shared/src/main/java/org/apache/myfaces/shared/context/flash/FlashImpl.java",
                "changes": 21,
                "contents_url": "https://api.github.com/repos/apache/myfaces/contents/shared/src/main/java/org/apache/myfaces/shared/context/flash/FlashImpl.java?ref=ceb11e3bb9d9ea4c58a1f0aae56f60bab3e49a90",
                "deletions": 6,
                "filename": "shared/src/main/java/org/apache/myfaces/shared/context/flash/FlashImpl.java",
                "patch": "@@ -34,6 +34,7 @@\n import java.security.SecureRandom;\n import java.util.ArrayList;\n import java.util.Collection;\n+import java.util.Collections;\n import java.util.Iterator;\n import java.util.List;\n import java.util.Map;\n@@ -967,14 +968,22 @@ private String _getNextToken()\n         // if we create more SubKeyMaps with the same subkey, because they are\n         // totally equal and point to the same entries in the SessionMap.\n         \n-        Map<String, Object> requestMap = context.getExternalContext().getRequestMap();\n-        Map<String, Object> map = (Map<String, Object>) requestMap.get(FLASH_EXECUTE_MAP);\n+        Map<String, Object> requestMap = context != null && context.getExternalContext() != null ?\n+                context.getExternalContext().getRequestMap() : null;\n+        Map<String, Object> map = requestMap != null ? (Map<String, Object>) requestMap.get(FLASH_EXECUTE_MAP) : null;\n         if (map == null)\n         {\n-            String token = (String) requestMap.get(FLASH_EXECUTE_MAP_TOKEN);\n-            String fullToken = FLASH_SESSION_MAP_SUBKEY_PREFIX + SEPARATOR_CHAR + token + SEPARATOR_CHAR;\n-            map = _createSubKeyMap(context, fullToken);\n-            requestMap.put(FLASH_EXECUTE_MAP, map);\n+            if (requestMap != null)\n+            {\n+                String token = (String) requestMap.get(FLASH_EXECUTE_MAP_TOKEN);\n+                String fullToken = FLASH_SESSION_MAP_SUBKEY_PREFIX + SEPARATOR_CHAR + token + SEPARATOR_CHAR;\n+                map = _createSubKeyMap(context, fullToken);\n+                requestMap.put(FLASH_EXECUTE_MAP, map);\n+            }\n+            else\n+            {\n+                map = Collections.emptyMap();\n+            }\n         }\n         return map;\n     }",
                "raw_url": "https://github.com/apache/myfaces/raw/ceb11e3bb9d9ea4c58a1f0aae56f60bab3e49a90/shared/src/main/java/org/apache/myfaces/shared/context/flash/FlashImpl.java",
                "sha": "eb5e362815cad15a1aa19ddb161f3c82cbc5c499",
                "status": "modified"
            }
        ],
        "message": "MYFACES-3987: avoid NPE",
        "parent": "https://github.com/apache/myfaces/commit/b99b1ddc6a4a339f0c0af1861ed850e2a3496548",
        "repo": "myfaces",
        "unit_tests": [
            "FlashImplTest.java"
        ]
    },
    "myfaces_e483a32": {
        "bug_id": "myfaces_e483a32",
        "commit": "https://github.com/apache/myfaces/commit/e483a32e41ef71a4ffcf09dd291eb5c4ebc7541b",
        "file": [
            {
                "additions": 6,
                "blob_url": "https://github.com/apache/myfaces/blob/e483a32e41ef71a4ffcf09dd291eb5c4ebc7541b/impl/src/main/java/org/apache/myfaces/renderkit/html/HtmlFormatRenderer.java",
                "changes": 17,
                "contents_url": "https://api.github.com/repos/apache/myfaces/contents/impl/src/main/java/org/apache/myfaces/renderkit/html/HtmlFormatRenderer.java?ref=e483a32e41ef71a4ffcf09dd291eb5c4ebc7541b",
                "deletions": 11,
                "filename": "impl/src/main/java/org/apache/myfaces/renderkit/html/HtmlFormatRenderer.java",
                "patch": "@@ -35,6 +35,7 @@\n import org.apache.myfaces.shared_impl.renderkit.JSFAttr;\n import org.apache.myfaces.shared_impl.renderkit.RendererUtils;\n import org.apache.myfaces.shared_impl.renderkit.html.HtmlRenderer;\n+import org.apache.myfaces.shared_impl.renderkit.html.HtmlRendererUtils;\n import org.apache.myfaces.shared_impl.renderkit.html.HtmlTextRendererBase;\n \n /**\n@@ -90,18 +91,12 @@ private String getOutputFormatText(FacesContext facesContext, UIComponent htmlOu\n         else\n         {\n             List<Object> argsList = new ArrayList<Object>();\n-            for (UIComponent child : htmlOutputFormat.getChildren())\n+            \n+            List<UIParameter> validParams = HtmlRendererUtils.getValidUIParameterChildren(\n+                    facesContext, htmlOutputFormat.getChildren(), false, false, false);\n+            for (UIParameter param : validParams)\n             {\n-                if (child instanceof UIParameter)\n-                {\n-                    // check for the disable attribute (since 2.0)\n-                    if (((UIParameter) child).isDisable())\n-                    {\n-                        // ignore this UIParameter and continue\n-                        continue;\n-                    }\n-                    argsList.add(((UIParameter)child).getValue());\n-                }\n+                argsList.add(param.getValue());\n             }\n             \n             args = argsList.toArray(new Object[argsList.size()]);",
                "raw_url": "https://github.com/apache/myfaces/raw/e483a32e41ef71a4ffcf09dd291eb5c4ebc7541b/impl/src/main/java/org/apache/myfaces/renderkit/html/HtmlFormatRenderer.java",
                "sha": "01227e28a680059b39fc7a54e1953925e9fb9d0c",
                "status": "modified"
            }
        ],
        "message": "MYFACES-2663 NPE in UIParameter when value resolves to null (major refactoring of every use of UIParameter - introduced HtmlRendererUtils.getValidUIParameterChildren() to retrieve UIParameter children correctly)",
        "parent": "https://github.com/apache/myfaces/commit/78698dda8b7641067f22e45d08a0b19fb9cd99f4",
        "repo": "myfaces",
        "unit_tests": [
            "HtmlFormatRendererTest.java"
        ]
    },
    "myfaces_efebceb": {
        "bug_id": "myfaces_efebceb",
        "commit": "https://github.com/apache/myfaces/commit/efebceb953fcd6860eb0034b220a900d15597aea",
        "file": [
            {
                "additions": 5,
                "blob_url": "https://github.com/apache/myfaces/blob/efebceb953fcd6860eb0034b220a900d15597aea/impl/src/main/java/org/apache/myfaces/application/ViewIdSupport.java",
                "changes": 5,
                "contents_url": "https://api.github.com/repos/apache/myfaces/contents/impl/src/main/java/org/apache/myfaces/application/ViewIdSupport.java?ref=efebceb953fcd6860eb0034b220a900d15597aea",
                "deletions": 0,
                "filename": "impl/src/main/java/org/apache/myfaces/application/ViewIdSupport.java",
                "patch": "@@ -620,6 +620,11 @@ public String calculateViewId(FacesContext facesContext)\n     \n     public boolean isViewProtected(FacesContext context, String viewId)\n     {\n+        if (viewId == null)\n+        {\n+            return false;\n+        }\n+        \n         Boolean protectedView = null;\n         if (viewIdProtectedCache != null)\n         {",
                "raw_url": "https://github.com/apache/myfaces/raw/efebceb953fcd6860eb0034b220a900d15597aea/impl/src/main/java/org/apache/myfaces/application/ViewIdSupport.java",
                "sha": "28d93edb8f05dc388d20022bab8db1fda11c4e60",
                "status": "modified"
            }
        ],
        "message": "fixed NPE on 404",
        "parent": "https://github.com/apache/myfaces/commit/9d7718632cbb6067725fa70bbd804c4d6a0b08fc",
        "repo": "myfaces",
        "unit_tests": [
            "ViewIdSupportTest.java"
        ]
    },
    "myfaces_ff101d4": {
        "bug_id": "myfaces_ff101d4",
        "commit": "https://github.com/apache/myfaces/commit/ff101d4d344ba2e4bd63b7e6c0b42607ffb72345",
        "file": [
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/myfaces/blob/ff101d4d344ba2e4bd63b7e6c0b42607ffb72345/shared/src/main/java/org/apache/myfaces/shared/renderkit/html/HtmlResponseWriterImpl.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/myfaces/contents/shared/src/main/java/org/apache/myfaces/shared/renderkit/html/HtmlResponseWriterImpl.java?ref=ff101d4d344ba2e4bd63b7e6c0b42607ffb72345",
                "deletions": 1,
                "filename": "shared/src/main/java/org/apache/myfaces/shared/renderkit/html/HtmlResponseWriterImpl.java",
                "patch": "@@ -1086,7 +1086,7 @@ public void write(String str) throws IOException\n         closeStartTagIfNecessary();\n         // empty string commonly used to force the start tag to be closed.\n         // in such case, do not call down the writer chain\n-        if (str.length() > 0)\n+        if (str != null && str.length() > 0)\n         {\n             // Don't bother encoding anything if chosen character encoding is UTF-8\n             if (_isUTF8)",
                "raw_url": "https://github.com/apache/myfaces/raw/ff101d4d344ba2e4bd63b7e6c0b42607ffb72345/shared/src/main/java/org/apache/myfaces/shared/renderkit/html/HtmlResponseWriterImpl.java",
                "sha": "12b7cfd7573482675cf992426e625fe7d87c65f8",
                "status": "modified"
            }
        ],
        "message": "MYFACES-3708 NPE when no title using primefaces mobile",
        "parent": "https://github.com/apache/myfaces/commit/e61ec49c975b7e941e61616a0da846f27b800e9c",
        "repo": "myfaces",
        "unit_tests": [
            "HtmlResponseWriterImplTest.java"
        ]
    }
}