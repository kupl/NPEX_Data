{
    "geronimo-yoko_32255b0": {
        "repo": "geronimo-yoko",
        "message": "Merge branch 'npe_in_meta' into 'ibm-trunk'\n\nNpe in meta\n\nSee merge request !55",
        "commit": "https://github.com/apache/geronimo-yoko/commit/32255b0bc18e1f704f4376e99a92ffbf12c8fb73",
        "parent": "https://github.com/apache/geronimo-yoko/commit/3ebe0147f2ed236cf9718760e4281c5ffdd18513",
        "bug_id": "geronimo-yoko_32255b0",
        "file": [
            {
                "sha": "d6875f1ed15266e6f75a50de90caf4a7e1274ee3",
                "filename": "yoko-core/src/test/java/org/apache/yoko/MetaTest.java",
                "blob_url": "https://github.com/apache/geronimo-yoko/blob/32255b0bc18e1f704f4376e99a92ffbf12c8fb73/yoko-core/src/test/java/org/apache/yoko/MetaTest.java",
                "raw_url": "https://github.com/apache/geronimo-yoko/raw/32255b0bc18e1f704f4376e99a92ffbf12c8fb73/yoko-core/src/test/java/org/apache/yoko/MetaTest.java",
                "status": "added",
                "changes": 18,
                "additions": 18,
                "contents_url": "https://api.github.com/repos/apache/geronimo-yoko/contents/yoko-core/src/test/java/org/apache/yoko/MetaTest.java?ref=32255b0bc18e1f704f4376e99a92ffbf12c8fb73",
                "patch": "@@ -0,0 +1,18 @@\n+package org.apache.yoko;\n+\n+import org.junit.Before;\n+import org.junit.Test;\n+\n+public class MetaTest extends AbstractOrbTestBase {\n+\n+    @Before\n+    public void setUp() throws Exception {\n+        super.setUp();\n+        setWaitForFile(\"Test.ref\");\n+    }\n+\n+    @Test\n+    public void testMeta() throws Exception {\n+        client.invokeMain(\"test.meta.TestMeta\");\n+    }\n+}",
                "deletions": 0
            },
            {
                "sha": "52bcc8a8988501f114d7066af9df5ef3063dc216",
                "filename": "yoko-core/src/test/java/test/meta/TestMeta.java",
                "blob_url": "https://github.com/apache/geronimo-yoko/blob/32255b0bc18e1f704f4376e99a92ffbf12c8fb73/yoko-core/src/test/java/test/meta/TestMeta.java",
                "raw_url": "https://github.com/apache/geronimo-yoko/raw/32255b0bc18e1f704f4376e99a92ffbf12c8fb73/yoko-core/src/test/java/test/meta/TestMeta.java",
                "status": "added",
                "changes": 31,
                "additions": 31,
                "contents_url": "https://api.github.com/repos/apache/geronimo-yoko/contents/yoko-core/src/test/java/test/meta/TestMeta.java?ref=32255b0bc18e1f704f4376e99a92ffbf12c8fb73",
                "patch": "@@ -0,0 +1,31 @@\n+package test.meta;\n+\n+import java.io.Serializable;\n+\n+import javax.rmi.CORBA.Util;\n+import javax.rmi.CORBA.ValueHandler;\n+\n+import org.junit.Assert;\n+import org.omg.CORBA.ValueDefPackage.FullValueDescription;\n+import org.omg.SendingContext.CodeBase;\n+\n+public class TestMeta {\n+\n+    public static void main(String[] args) throws Exception {\n+        testMeta();\n+    }\n+\n+    public static void testMeta() throws Exception {\n+        ValueHandler vh = Util.createValueHandler();\n+        CodeBase codebase = (CodeBase)vh.getRunTimeCodeBase();\n+        String dataClassRepid = vh.getRMIRepositoryID(Data.class);\n+        FullValueDescription fvd = codebase.meta(dataClassRepid);\n+        Assert.assertNotNull(fvd);\n+    }\n+\n+    public static class Data implements Serializable {\n+        private static final long serialVersionUID = 1L;\n+        public Data d;\n+    }\n+\n+}",
                "deletions": 0
            },
            {
                "sha": "636ee916726035c0cd97ba44a8eaf264a45ab22e",
                "filename": "yoko-rmi-impl/src/main/java/org/apache/yoko/rmi/impl/ValueDescriptor.java",
                "blob_url": "https://github.com/apache/geronimo-yoko/blob/32255b0bc18e1f704f4376e99a92ffbf12c8fb73/yoko-rmi-impl/src/main/java/org/apache/yoko/rmi/impl/ValueDescriptor.java",
                "raw_url": "https://github.com/apache/geronimo-yoko/raw/32255b0bc18e1f704f4376e99a92ffbf12c8fb73/yoko-rmi-impl/src/main/java/org/apache/yoko/rmi/impl/ValueDescriptor.java",
                "status": "modified",
                "changes": 32,
                "additions": 25,
                "contents_url": "https://api.github.com/repos/apache/geronimo-yoko/contents/yoko-rmi-impl/src/main/java/org/apache/yoko/rmi/impl/ValueDescriptor.java?ref=32255b0bc18e1f704f4376e99a92ffbf12c8fb73",
                "patch": "@@ -61,7 +61,6 @@\n import org.omg.CORBA.VM_NONE;\n import org.omg.CORBA.ValueMember;\n import org.omg.CORBA.ValueDefPackage.FullValueDescription;\n-import org.omg.CORBA.portable.IndirectionException;\n import org.omg.CORBA.portable.InputStream;\n import org.omg.CORBA.portable.OutputStream;\n import org.omg.CORBA.portable.UnknownException;\n@@ -846,7 +845,9 @@ long getHashCode() {\n \n     protected ValueMember[] _value_members = null;\n \n-    ValueMember[] getValueMembers() {\n+    private ValueMember[] getValueMembers() {\n+        getTypeCode(); // ensure recursion through typecode for non-array types\n+\n         if (_value_members == null) {\n             _value_members = new ValueMember[_fields.length];\n             for (int i = 0; i < _fields.length; i++) {\n@@ -879,12 +880,29 @@ TypeCode getTypeCode() {\n         return _type_code;\n     }\n \n+    private static final OperationDescription[] ZERO_OPERATIONS = {};\n+    private static final AttributeDescription[] ZERO_ATTRIBUTES = {};\n+    private static final Initializer[] ZERO_INITIALIZERS = {};\n+    private static final String[] ZERO_STRINGS = {};\n+    \n     FullValueDescription getFullValueDescription() {\n-        return new FullValueDescription(getJavaClass().getName(), getRepositoryID(),\n-                false, // is_abstract\n-                isCustomMarshalled(), \"\", \"1.0\", new OperationDescription[0], new AttributeDescription[0], getValueMembers(), new Initializer[0],\n-                new String[0], new String[0], false, // is_truncatable\n-                ((_super_descriptor == null) ? \"\" : _super_descriptor.getRepositoryID()), getTypeCode());\n+        FullValueDescription fvd = new FullValueDescription();\n+        fvd.name = getJavaClass().getName();\n+        fvd.id = getRepositoryID();\n+        fvd.is_abstract = false;\n+        fvd.is_custom = isCustomMarshalled();\n+        fvd.defined_in = \"\";\n+        fvd.version = \"1.0\";\n+        fvd.operations = ZERO_OPERATIONS;\n+        fvd.attributes = ZERO_ATTRIBUTES;\n+        fvd.members = getValueMembers();\n+        fvd.initializers = ZERO_INITIALIZERS;\n+        fvd.supported_interfaces = ZERO_STRINGS;\n+        fvd.abstract_base_values = ZERO_STRINGS;\n+        fvd.is_truncatable = false;\n+        fvd.base_value = ((_super_descriptor == null) ? \"\" : _super_descriptor.getRepositoryID());\n+        fvd.type = getTypeCode();\n+        return fvd;\n     }\n \n     class ObjectDeserializer {",
                "deletions": 7
            }
        ],
        "patched_files": [
            "ValueDescriptor.java"
        ],
        "unit_tests": [
            "MetaTest.java",
            "TestMeta.java"
        ]
    }
}