{
    "mahout_b7ef42c": {
        "repo": "mahout",
        "message": "MAHOUT-167 MAHOUT-427: Fixed NPE in ClusterDumper due to missing call to init() in ClusterDumper.run(String[]);\n\ngit-svn-id: https://svn.apache.org/repos/asf/mahout/trunk@967309 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/mahout/commit/b7ef42cb0afc1ecc8ca280e10c6d84be4e1d42f3",
        "parent": "https://github.com/apache/mahout/commit/b64eb1cc7459f94a0140304e658e6faf97191b7f",
        "bug_id": "mahout_b7ef42c",
        "file": [
            {
                "sha": "3888e731852c9329e155522db2c23c16f79b454a",
                "filename": "utils/src/main/java/org/apache/mahout/utils/clustering/ClusterDumper.java",
                "blob_url": "https://github.com/apache/mahout/blob/b7ef42cb0afc1ecc8ca280e10c6d84be4e1d42f3/utils/src/main/java/org/apache/mahout/utils/clustering/ClusterDumper.java",
                "raw_url": "https://github.com/apache/mahout/raw/b7ef42cb0afc1ecc8ca280e10c6d84be4e1d42f3/utils/src/main/java/org/apache/mahout/utils/clustering/ClusterDumper.java",
                "status": "modified",
                "changes": 1,
                "additions": 1,
                "contents_url": "https://api.github.com/repos/apache/mahout/contents/utils/src/main/java/org/apache/mahout/utils/clustering/ClusterDumper.java?ref=b7ef42cb0afc1ecc8ca280e10c6d84be4e1d42f3",
                "patch": "@@ -136,6 +136,7 @@ public int run(String[] args) throws Exception {\n     if (hasOption(NUM_WORDS_OPTION)) {\n       setNumTopFeatures(Integer.parseInt(getOption(NUM_WORDS_OPTION)));\n     }\n+    init();\n     printClusters(null);\n     return 0;\n   }",
                "deletions": 0
            }
        ],
        "patched_files": [
            "ClusterDumper.java"
        ],
        "unit_tests": [
            "TestClusterDumper.java"
        ]
    },
    "mahout_ff31f37": {
        "repo": "mahout",
        "message": "MAHOUT-674 fix NPE by using right map key\n\ngit-svn-id: https://svn.apache.org/repos/asf/mahout/trunk@1094764 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/mahout/commit/ff31f377268456d212763b9c60d9205acd3ab1ba",
        "parent": "https://github.com/apache/mahout/commit/8049eff6dd48dc2621219c51e1eef97dd62165c8",
        "bug_id": "mahout_ff31f37",
        "file": [
            {
                "sha": "05fe973bba388b482002e5155f8c4d9127405e61",
                "filename": "examples/src/main/java/org/apache/mahout/classifier/sgd/TrainLogistic.java",
                "blob_url": "https://github.com/apache/mahout/blob/ff31f377268456d212763b9c60d9205acd3ab1ba/examples/src/main/java/org/apache/mahout/classifier/sgd/TrainLogistic.java",
                "raw_url": "https://github.com/apache/mahout/raw/ff31f377268456d212763b9c60d9205acd3ab1ba/examples/src/main/java/org/apache/mahout/classifier/sgd/TrainLogistic.java",
                "status": "modified",
                "changes": 2,
                "additions": 1,
                "contents_url": "https://api.github.com/repos/apache/mahout/contents/examples/src/main/java/org/apache/mahout/classifier/sgd/TrainLogistic.java?ref=ff31f377268456d212763b9c60d9205acd3ab1ba",
                "patch": "@@ -114,7 +114,7 @@ public static void main(String[] args) throws IOException {\n       output.printf(Locale.ENGLISH, \"%d\\n\", lmp.getNumFeatures());\n       output.printf(Locale.ENGLISH, \"%s ~ \", lmp.getTargetVariable());\n       String sep = \"\";\n-      for (String v : csv.getPredictors()) {\n+      for (String v : csv.getTraceDictionary().keySet()) {\n         double weight = predictorWeight(lr, 0, csv, v);\n         if (weight != 0) {\n           output.printf(Locale.ENGLISH, \"%s%.3f*%s\", sep, weight, v);",
                "deletions": 1
            }
        ],
        "patched_files": [
            "TrainLogistic.java"
        ],
        "unit_tests": [
            "TrainLogisticTest.java"
        ]
    },
    "mahout_aeb8c72": {
        "repo": "mahout",
        "message": "MAHOUT-1232: VectorHelper.topEntries() throws a NPE when number of NonZero elements in vector < maxEntries - Adding a unit test to address the scenario when the input vector has all zero elements.\n\ngit-svn-id: https://svn.apache.org/repos/asf/mahout/trunk@1487645 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/mahout/commit/aeb8c72aec0ad5be73d94eb21ad4b90517e7b00b",
        "parent": "https://github.com/apache/mahout/commit/096d686486fb30a2dbce9c4e33ecc9875a2c0fa8",
        "bug_id": "mahout_aeb8c72",
        "file": [
            {
                "sha": "6c0a208178c66ad8a651b7457a48aa0b269d6946",
                "filename": "integration/src/test/java/org/apache/mahout/utils/vectors/VectorHelperTest.java",
                "blob_url": "https://github.com/apache/mahout/blob/aeb8c72aec0ad5be73d94eb21ad4b90517e7b00b/integration/src/test/java/org/apache/mahout/utils/vectors/VectorHelperTest.java",
                "raw_url": "https://github.com/apache/mahout/raw/aeb8c72aec0ad5be73d94eb21ad4b90517e7b00b/integration/src/test/java/org/apache/mahout/utils/vectors/VectorHelperTest.java",
                "status": "modified",
                "changes": 14,
                "additions": 14,
                "contents_url": "https://api.github.com/repos/apache/mahout/contents/integration/src/test/java/org/apache/mahout/utils/vectors/VectorHelperTest.java?ref=aeb8c72aec0ad5be73d94eb21ad4b90517e7b00b",
                "patch": "@@ -70,4 +70,18 @@ public void testTopEntries() throws Exception {\n     assertTrue(VectorHelper.topEntries(v, 5).size() < Iterables.size(v.nonZeroes()));\n   }\n \n+  @Test\n+  public void testTopEntriesWhenAllZeros() throws Exception {\n+    Vector v = new SequentialAccessSparseVector(10);\n+    v.set(2, 0.0);\n+    v.set(4, 0.0);\n+    v.set(6, 0.0);\n+    v.set(7, 0);\n+    v.set(9, 0.0);\n+    v.set(1, 0.0);\n+    v.set(3, 0.0);\n+    v.set(8, 0.0);\n+    assertEquals(0, VectorHelper.topEntries(v, 6).size());\n+  }\n+\n }",
                "deletions": 0
            }
        ],
        "patched_files": [
            "VectorHelper.java"
        ],
        "unit_tests": [
            "VectorHelperTest.java"
        ]
    },
    "mahout_88c5af9": {
        "repo": "mahout",
        "message": "Add MatrixMultiplication job back to the possibly choices of the mahout driver, and stop throwing NPE upon $MAHOUT_HOME/bin/mahout (svd|matrixmult) -h\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/mahout/trunk@953484 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/mahout/commit/88c5af99ce20151ca2a8f4fb476db9db0f8a1708",
        "parent": "https://github.com/apache/mahout/commit/964db4a8ae51fb0d896dcd03836c6056ff317898",
        "bug_id": "mahout_88c5af9",
        "file": [
            {
                "sha": "1472a9ec2f3639053d9de0778bff81f6e2ba7a9f",
                "filename": "conf/driver.classes.props",
                "blob_url": "https://github.com/apache/mahout/blob/88c5af99ce20151ca2a8f4fb476db9db0f8a1708/conf/driver.classes.props",
                "raw_url": "https://github.com/apache/mahout/raw/88c5af99ce20151ca2a8f4fb476db9db0f8a1708/conf/driver.classes.props",
                "status": "modified",
                "changes": 1,
                "additions": 1,
                "contents_url": "https://api.github.com/repos/apache/mahout/contents/conf/driver.classes.props?ref=88c5af99ce20151ca2a8f4fb476db9db0f8a1708",
                "patch": "@@ -10,6 +10,7 @@ org.apache.mahout.clustering.dirichlet.DirichletDriver = dirichlet : Dirichlet C\n org.apache.mahout.clustering.meanshift.MeanShiftCanopyDriver = meanshift : Mean Shift clustering\n org.apache.mahout.clustering.canopy.CanopyDriver = canopy : Canopy clustering\n org.apache.mahout.math.hadoop.TransposeJob = transpose : Take the transpose of a matrix\n+org.apache.mahout.math.hadoop.MatrixMultiplicationJob = matrixmult : Take the produc of two matrices\n org.apache.mahout.utils.vectors.lucene.Driver = lucene.vector : Generate Vectors from a Lucene index\n org.apache.mahout.text.SequenceFilesFromDirectory = seqdirectory : Generate sequence files (of Text) from a directory\n org.apache.mahout.text.SparseVectorsFromSequenceFiles = seq2sparse: Sparse Vector generation from Text sequence files",
                "deletions": 0
            },
            {
                "sha": "95218b3f19959062b1004ccf1a4283c47f1aca88",
                "filename": "conf/matrixmult.props",
                "blob_url": "https://github.com/apache/mahout/blob/88c5af99ce20151ca2a8f4fb476db9db0f8a1708/conf/matrixmult.props",
                "raw_url": "https://github.com/apache/mahout/raw/88c5af99ce20151ca2a8f4fb476db9db0f8a1708/conf/matrixmult.props",
                "status": "added",
                "changes": 6,
                "additions": 6,
                "contents_url": "https://api.github.com/repos/apache/mahout/contents/conf/matrixmult.props?ref=88c5af99ce20151ca2a8f4fb476db9db0f8a1708",
                "patch": "@@ -0,0 +1,6 @@\n+#nra|numRowsA = \n+#nca|numColsA =\n+#nrb|numRowsB = \n+#ncb|numColsB =\n+#ia|inputPathA = \n+#ib|inputPathB = ",
                "deletions": 0
            },
            {
                "sha": "cb2c4e293a56b45b2f37a4a6be4971e5ce728b58",
                "filename": "core/src/main/java/org/apache/mahout/math/hadoop/MatrixMultiplicationJob.java",
                "blob_url": "https://github.com/apache/mahout/blob/88c5af99ce20151ca2a8f4fb476db9db0f8a1708/core/src/main/java/org/apache/mahout/math/hadoop/MatrixMultiplicationJob.java",
                "raw_url": "https://github.com/apache/mahout/raw/88c5af99ce20151ca2a8f4fb476db9db0f8a1708/core/src/main/java/org/apache/mahout/math/hadoop/MatrixMultiplicationJob.java",
                "status": "modified",
                "changes": 3,
                "additions": 3,
                "contents_url": "https://api.github.com/repos/apache/mahout/contents/core/src/main/java/org/apache/mahout/math/hadoop/MatrixMultiplicationJob.java?ref=88c5af99ce20151ca2a8f4fb476db9db0f8a1708",
                "patch": "@@ -79,6 +79,9 @@ public int run(String[] strings) throws Exception {\n     addOption(\"inputPathB\", \"ib\", \"Path to the second input matrix\");\n \n     Map<String, String> argMap = parseArguments(strings);\n+    if(argMap == null) {\n+      return -1;\n+    }\n \n     DistributedRowMatrix a = new DistributedRowMatrix(argMap.get(\"--inputPathA\"),\n                                                       argMap.get(\"--tempDir\"),",
                "deletions": 0
            },
            {
                "sha": "293e776ecda294fd7cd24dc3f8aced4582d0a849",
                "filename": "core/src/main/java/org/apache/mahout/math/hadoop/decomposer/DistributedLanczosSolver.java",
                "blob_url": "https://github.com/apache/mahout/blob/88c5af99ce20151ca2a8f4fb476db9db0f8a1708/core/src/main/java/org/apache/mahout/math/hadoop/decomposer/DistributedLanczosSolver.java",
                "raw_url": "https://github.com/apache/mahout/raw/88c5af99ce20151ca2a8f4fb476db9db0f8a1708/core/src/main/java/org/apache/mahout/math/hadoop/decomposer/DistributedLanczosSolver.java",
                "status": "modified",
                "changes": 15,
                "additions": 12,
                "contents_url": "https://api.github.com/repos/apache/mahout/contents/core/src/main/java/org/apache/mahout/math/hadoop/decomposer/DistributedLanczosSolver.java?ref=88c5af99ce20151ca2a8f4fb476db9db0f8a1708",
                "patch": "@@ -17,7 +17,6 @@\n \n package org.apache.mahout.math.hadoop.decomposer;\n \n-import org.apache.commons.cli2.Option;\n import org.apache.hadoop.conf.Configuration;\n import org.apache.hadoop.fs.FileSystem;\n import org.apache.hadoop.fs.Path;\n@@ -74,18 +73,28 @@ public int run(String[] strings) throws Exception {\n     int numCols = Integer.parseInt(parsedArgs.get(\"--numCols\"));\n     boolean isSymmetric = Boolean.parseBoolean(parsedArgs.get(\"--symmetric\"));\n     int desiredRank = Integer.parseInt(parsedArgs.get(\"--rank\"));\n+    return run(inputPathString, outputTmpPathString, numRows, numCols, isSymmetric, desiredRank);\n+  }\n+\n+  public int run(String inputPathString,\n+                 String outputTmpPathString,\n+                 int numRows,\n+                 int numCols,\n+                 boolean isSymmetric,\n+                 int desiredRank) throws Exception {\n+    Configuration originalConfig = getConf();\n     Matrix eigenVectors = new DenseMatrix(desiredRank, numCols);\n     List<Double> eigenValues = new ArrayList<Double>();\n     String outputEigenVectorPath =  originalConfig.get(\"mapred.output.dir\");\n-    \n+\n     DistributedRowMatrix matrix = new DistributedRowMatrix(inputPathString,\n                                                            outputTmpPathString,\n                                                            numRows,\n                                                            numCols);\n     matrix.configure(new JobConf(originalConfig));\n     solve(matrix, desiredRank, eigenVectors, eigenValues, isSymmetric);\n \n-    serializeOutput(eigenVectors, eigenValues, outputEigenVectorPath);  \n+    serializeOutput(eigenVectors, eigenValues, outputEigenVectorPath);\n     return 0;\n   }\n ",
                "deletions": 3
            }
        ],
        "patched_files": [
            "DistributedLanczosSolver.java"
        ],
        "unit_tests": [
            "TestDistributedLanczosSolver.java"
        ]
    },
    "mahout_2cd3ea3": {
        "repo": "mahout",
        "message": "MAHOUT-1033 avoid NPE on null conf\n\ngit-svn-id: https://svn.apache.org/repos/asf/mahout/trunk@1352837 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/mahout/commit/2cd3ea39e3dc70f1ffcffae92cb0901894bed63b",
        "parent": "https://github.com/apache/mahout/commit/1608f61a2092a021a28b37b1d06fbaedf8049a5a",
        "bug_id": "mahout_2cd3ea3",
        "file": [
            {
                "sha": "fb18b59ddf4a92a22094c1607dd6576bc23759d7",
                "filename": "core/src/main/java/org/apache/mahout/common/AbstractJob.java",
                "blob_url": "https://github.com/apache/mahout/blob/2cd3ea39e3dc70f1ffcffae92cb0901894bed63b/core/src/main/java/org/apache/mahout/common/AbstractJob.java",
                "raw_url": "https://github.com/apache/mahout/raw/2cd3ea39e3dc70f1ffcffae92cb0901894bed63b/core/src/main/java/org/apache/mahout/common/AbstractJob.java",
                "status": "modified",
                "changes": 2,
                "additions": 1,
                "contents_url": "https://api.github.com/repos/apache/mahout/contents/core/src/main/java/org/apache/mahout/common/AbstractJob.java?ref=2cd3ea39e3dc70f1ffcffae92cb0901894bed63b",
                "patch": "@@ -612,7 +612,7 @@ public void setConf(Configuration conf) {\n     // If running in an Oozie workflow as a Java action, need to add the\n     // Configuration resource provided by Oozie to this job's config.\n     String oozieActionConfXml = System.getProperty(\"oozie.action.conf.xml\");\n-    if (oozieActionConfXml != null) {\n+    if (oozieActionConfXml != null && conf != null) {\n       conf.addResource(new Path(\"file:///\", oozieActionConfXml));\n       log.info(\"Added Oozie action Configuration resource {0} to the Hadoop Configuration\", oozieActionConfXml);\n     }      ",
                "deletions": 1
            }
        ],
        "patched_files": [
            "AbstractJob.java"
        ],
        "unit_tests": [
            "AbstractJobTest.java"
        ]
    },
    "mahout_ac28cf4": {
        "repo": "mahout",
        "message": "Partial fix for MAHOUT-546; avoid proximate cause which is an NPE\n\ngit-svn-id: https://svn.apache.org/repos/asf/mahout/trunk@1130212 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/mahout/commit/ac28cf4841459c785e4beee061cc350ce97c9838",
        "parent": "https://github.com/apache/mahout/commit/5d64fbce6cd194a90e26ca35f90f61c88e75135b",
        "bug_id": "mahout_ac28cf4",
        "file": [
            {
                "sha": "07b8acdd20b648e3c184689c7cd3915e3fe4c88f",
                "filename": "core/src/main/java/org/apache/mahout/math/VectorWritable.java",
                "blob_url": "https://github.com/apache/mahout/blob/ac28cf4841459c785e4beee061cc350ce97c9838/core/src/main/java/org/apache/mahout/math/VectorWritable.java",
                "raw_url": "https://github.com/apache/mahout/raw/ac28cf4841459c785e4beee061cc350ce97c9838/core/src/main/java/org/apache/mahout/math/VectorWritable.java",
                "status": "modified",
                "changes": 3,
                "additions": 2,
                "contents_url": "https://api.github.com/repos/apache/mahout/contents/core/src/main/java/org/apache/mahout/math/VectorWritable.java?ref=ac28cf4841459c785e4beee061cc350ce97c9838",
                "patch": "@@ -175,7 +175,8 @@ public static void writeVector(DataOutput out, Vector vector, boolean laxPrecisi\n       }\n     }\n     if (named) {\n-      out.writeUTF(((NamedVector) vector).getName());\n+      String name = ((NamedVector) vector).getName();\n+      out.writeUTF(name == null ? \"\" : name);\n     }\n   }\n ",
                "deletions": 1
            },
            {
                "sha": "827a555fa179fe2d1208512e9d77bba6d5601a4c",
                "filename": "math/src/main/java/org/apache/mahout/math/NamedVector.java",
                "blob_url": "https://github.com/apache/mahout/blob/ac28cf4841459c785e4beee061cc350ce97c9838/math/src/main/java/org/apache/mahout/math/NamedVector.java",
                "raw_url": "https://github.com/apache/mahout/raw/ac28cf4841459c785e4beee061cc350ce97c9838/math/src/main/java/org/apache/mahout/math/NamedVector.java",
                "status": "modified",
                "changes": 2,
                "additions": 1,
                "contents_url": "https://api.github.com/repos/apache/mahout/contents/math/src/main/java/org/apache/mahout/math/NamedVector.java?ref=ac28cf4841459c785e4beee061cc350ce97c9838",
                "patch": "@@ -36,7 +36,7 @@ public NamedVector(NamedVector other) {\n   }\n \n   public NamedVector(Vector delegate, String name) {\n-    if (delegate == null) {\n+    if (delegate == null || name == null) {\n       throw new IllegalArgumentException();\n     }\n     this.delegate = delegate;",
                "deletions": 1
            }
        ],
        "patched_files": [
            "VectorWritable.java"
        ],
        "unit_tests": [
            "VectorWritableTest.java"
        ]
    },
    "mahout_8c539d2": {
        "repo": "mahout",
        "message": "MAHOUT-1232: VectorHelper.topEntries() throws a NPE when number of NonZero elements in vector < maxEntries - added code comments\n\ngit-svn-id: https://svn.apache.org/repos/asf/mahout/trunk@1488007 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/mahout/commit/8c539d2b051ce7f9ac6a9b13256708935b6ad44a",
        "parent": "https://github.com/apache/mahout/commit/aeb8c72aec0ad5be73d94eb21ad4b90517e7b00b",
        "bug_id": "mahout_8c539d2",
        "file": [
            {
                "sha": "ef4e47a65359de71e18e1c94ae5c98147cb0bf1d",
                "filename": "integration/src/main/java/org/apache/mahout/utils/vectors/VectorHelper.java",
                "blob_url": "https://github.com/apache/mahout/blob/8c539d2b051ce7f9ac6a9b13256708935b6ad44a/integration/src/main/java/org/apache/mahout/utils/vectors/VectorHelper.java",
                "raw_url": "https://github.com/apache/mahout/raw/8c539d2b051ce7f9ac6a9b13256708935b6ad44a/integration/src/main/java/org/apache/mahout/utils/vectors/VectorHelper.java",
                "status": "modified",
                "changes": 12,
                "additions": 8,
                "contents_url": "https://api.github.com/repos/apache/mahout/contents/integration/src/main/java/org/apache/mahout/utils/vectors/VectorHelper.java?ref=8c539d2b051ce7f9ac6a9b13256708935b6ad44a",
                "patch": "@@ -80,12 +80,16 @@ public static String buildJson(Iterable<Pair<String, Double>> iterable, StringBu\n   }\n \n   public static List<Pair<Integer, Double>> topEntries(Vector vector, int maxEntries) {\n+\n     // Get the size of nonZero elements in the input vector\n     int sizeOfNonZeroElementsInVector = Iterables.size(vector.nonZeroes());\n-    // If the sizeOfNonZeroElementsInVector < maxEntries then set maxEntries to sizeOfNonZeroElementsInVector\n-    // else the call to queue.pop() returns a Pair(null, null) and the subsequent\n-    // call to pair.getFirst() throws a NullPointerException\n-    maxEntries = (sizeOfNonZeroElementsInVector < maxEntries) ? sizeOfNonZeroElementsInVector : maxEntries;\n+\n+    // If the sizeOfNonZeroElementsInVector < maxEntries then set maxEntries = sizeOfNonZeroElementsInVector\n+    // otherwise the call to queue.pop() returns a Pair(null, null) and the subsequent call\n+    // to pair.getFirst() throws a NullPointerException\n+    if (sizeOfNonZeroElementsInVector < maxEntries)\n+      maxEntries = sizeOfNonZeroElementsInVector;\n+\n     PriorityQueue<Pair<Integer, Double>> queue = new TDoublePQ<Integer>(-1, maxEntries);\n     for (Element e : vector.nonZeroes()) {\n       queue.insertWithOverflow(Pair.of(e.index(), e.get()));",
                "deletions": 4
            },
            {
                "sha": "9b125a2643b93e149c7e821d32453bb2e396564c",
                "filename": "integration/src/test/java/org/apache/mahout/utils/vectors/VectorHelperTest.java",
                "blob_url": "https://github.com/apache/mahout/blob/8c539d2b051ce7f9ac6a9b13256708935b6ad44a/integration/src/test/java/org/apache/mahout/utils/vectors/VectorHelperTest.java",
                "raw_url": "https://github.com/apache/mahout/raw/8c539d2b051ce7f9ac6a9b13256708935b6ad44a/integration/src/test/java/org/apache/mahout/utils/vectors/VectorHelperTest.java",
                "status": "modified",
                "changes": 6,
                "additions": 3,
                "contents_url": "https://api.github.com/repos/apache/mahout/contents/integration/src/test/java/org/apache/mahout/utils/vectors/VectorHelperTest.java?ref=8c539d2b051ce7f9ac6a9b13256708935b6ad44a",
                "patch": "@@ -63,10 +63,11 @@ public void testTopEntries() throws Exception {\n     v.set(1, 0.0);\n     v.set(3, 0.0);\n     v.set(8, 2.7);\n+    // check if sizeOFNonZeroElementsInVector = maxEntries\n     assertEquals(6, VectorHelper.topEntries(v, 6).size());\n-    // when sizeOfNonZeroElementsInVector < maxEntries\n+    // check if sizeOfNonZeroElementsInVector < maxEntries\n     assertTrue(VectorHelper.topEntries(v, 9).size() < 9);\n-    // when sizeOfNonZeroElementsInVector > maxEntries\n+    // check if sizeOfNonZeroElementsInVector > maxEntries\n     assertTrue(VectorHelper.topEntries(v, 5).size() < Iterables.size(v.nonZeroes()));\n   }\n \n@@ -83,5 +84,4 @@ public void testTopEntriesWhenAllZeros() throws Exception {\n     v.set(8, 0.0);\n     assertEquals(0, VectorHelper.topEntries(v, 6).size());\n   }\n-\n }",
                "deletions": 3
            }
        ],
        "patched_files": [
            "VectorHelper.java"
        ],
        "unit_tests": [
            "VectorHelperTest.java"
        ]
    },
    "mahout_cfc3155": {
        "repo": "mahout",
        "message": "MAHOUT-1232: VectorHelper.topEntries() throws a NPE when number of NonZero elements in vector < maxEntries\n\ngit-svn-id: https://svn.apache.org/repos/asf/mahout/trunk@1487279 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/mahout/commit/cfc31552094358301ab5d31d932620d599d29723",
        "parent": "https://github.com/apache/mahout/commit/754fd18bd52d198518ce0ac3882581427593ece1",
        "bug_id": "mahout_cfc3155",
        "file": [
            {
                "sha": "13c952e9d03f3cb79e55f0f162867c9004804b6f",
                "filename": "CHANGELOG",
                "blob_url": "https://github.com/apache/mahout/blob/cfc31552094358301ab5d31d932620d599d29723/CHANGELOG",
                "raw_url": "https://github.com/apache/mahout/raw/cfc31552094358301ab5d31d932620d599d29723/CHANGELOG",
                "status": "modified",
                "changes": 2,
                "additions": 2,
                "contents_url": "https://api.github.com/repos/apache/mahout/contents/CHANGELOG?ref=cfc31552094358301ab5d31d932620d599d29723",
                "patch": "@@ -2,6 +2,8 @@ Mahout Change Log\n \n Release 0.8 - unreleased\n \n+  MAHOUT-1232: VectorHelper.topEntries() throws a NPE when number of NonZero elements in vector < maxEntries (smarthi)\n+\n   MAHOUT-1229: Conf directory content from Mahout distribution archives cannot be unpacked (Stevo Slavic via smarthi)\n   \n   MAHOUT-1213: SSVD job doesn't clean it's temp dir, and fails when seeing it again (smarthi)",
                "deletions": 0
            },
            {
                "sha": "a7736bbcd9313450ff3de3bf19b4933e7b8ccb13",
                "filename": "integration/src/main/java/org/apache/mahout/utils/vectors/VectorDumper.java",
                "blob_url": "https://github.com/apache/mahout/blob/cfc31552094358301ab5d31d932620d599d29723/integration/src/main/java/org/apache/mahout/utils/vectors/VectorDumper.java",
                "raw_url": "https://github.com/apache/mahout/raw/cfc31552094358301ab5d31d932620d599d29723/integration/src/main/java/org/apache/mahout/utils/vectors/VectorDumper.java",
                "status": "modified",
                "changes": 2,
                "additions": 1,
                "contents_url": "https://api.github.com/repos/apache/mahout/contents/integration/src/main/java/org/apache/mahout/utils/vectors/VectorDumper.java?ref=cfc31552094358301ab5d31d932620d599d29723",
                "patch": "@@ -251,7 +251,7 @@ public int run(String[] args) throws Exception {\n       writer.flush();\n     } finally {\n       if (shouldClose) {\n-        Closeables.closeQuietly(writer);\n+        Closeables.close(writer, true);\n       }\n     }\n ",
                "deletions": 1
            },
            {
                "sha": "26946dc8695aeb3b0f9242bf6cb7c6a6e181d014",
                "filename": "integration/src/main/java/org/apache/mahout/utils/vectors/VectorHelper.java",
                "blob_url": "https://github.com/apache/mahout/blob/cfc31552094358301ab5d31d932620d599d29723/integration/src/main/java/org/apache/mahout/utils/vectors/VectorHelper.java",
                "raw_url": "https://github.com/apache/mahout/raw/cfc31552094358301ab5d31d932620d599d29723/integration/src/main/java/org/apache/mahout/utils/vectors/VectorHelper.java",
                "status": "modified",
                "changes": 7,
                "additions": 7,
                "contents_url": "https://api.github.com/repos/apache/mahout/contents/integration/src/main/java/org/apache/mahout/utils/vectors/VectorHelper.java?ref=cfc31552094358301ab5d31d932620d599d29723",
                "patch": "@@ -19,6 +19,7 @@\n \n import com.google.common.base.Function;\n import com.google.common.collect.Collections2;\n+import com.google.common.collect.Iterables;\n import com.google.common.collect.Lists;\n import org.apache.hadoop.conf.Configuration;\n import org.apache.hadoop.fs.Path;\n@@ -79,6 +80,12 @@ public static String buildJson(Iterable<Pair<String, Double>> iterable, StringBu\n   }\n \n   public static List<Pair<Integer, Double>> topEntries(Vector vector, int maxEntries) {\n+    // Get the size of nonZero elements in the input vector\n+    int sizeOfNonZeroElementsInVector = Iterables.size(vector.nonZeroes());\n+    // If the sizeOfNonZeroElementsInVector < maxEntries then set maxEntries to sizeOfNonZeroElementsInVector\n+    // else the call to queue.pop() returns a Pair(null, null) and the subsequent\n+    // call to pair.getFirst() throws a NullPointerException\n+    maxEntries = (sizeOfNonZeroElementsInVector < maxEntries) ? sizeOfNonZeroElementsInVector : maxEntries;\n     PriorityQueue<Pair<Integer, Double>> queue = new TDoublePQ<Integer>(-1, maxEntries);\n     for (Element e : vector.nonZeroes()) {\n       queue.insertWithOverflow(Pair.of(e.index(), e.get()));",
                "deletions": 0
            },
            {
                "sha": "b193bda01639662798978a8d25cdcfe23dda8858",
                "filename": "integration/src/test/java/org/apache/mahout/utils/vectors/VectorHelperTest.java",
                "blob_url": "https://github.com/apache/mahout/blob/cfc31552094358301ab5d31d932620d599d29723/integration/src/test/java/org/apache/mahout/utils/vectors/VectorHelperTest.java",
                "raw_url": "https://github.com/apache/mahout/raw/cfc31552094358301ab5d31d932620d599d29723/integration/src/test/java/org/apache/mahout/utils/vectors/VectorHelperTest.java",
                "status": "modified",
                "changes": 19,
                "additions": 19,
                "contents_url": "https://api.github.com/repos/apache/mahout/contents/integration/src/test/java/org/apache/mahout/utils/vectors/VectorHelperTest.java?ref=cfc31552094358301ab5d31d932620d599d29723",
                "patch": "@@ -17,6 +17,7 @@\n \n package org.apache.mahout.utils.vectors;\n \n+import com.google.common.collect.Iterables;\n import org.apache.mahout.math.SequentialAccessSparseVector;\n import org.apache.mahout.math.Vector;\n import org.apache.mahout.utils.MahoutTestCase;\n@@ -51,4 +52,22 @@ public void testJsonFormatting() throws Exception {\n         VectorHelper.vectorToJson(v, dictionary, 2, false));\n   }\n \n+  @Test\n+  public void testTopEntries() throws Exception {\n+    Vector v = new SequentialAccessSparseVector(10);\n+    v.set(2, 3.1);\n+    v.set(4, 1.0);\n+    v.set(6, 8.1);\n+    v.set(7, -100);\n+    v.set(9, 12.2);\n+    v.set(1, 0.0);\n+    v.set(3, 0.0);\n+    v.set(8, 2.7);\n+    assertEquals(6, VectorHelper.topEntries(v, 6).size());\n+    // when sizeOfNonZeroElementsInVector < maxEntries\n+    assertTrue(VectorHelper.topEntries(v, 9).size() < 9);\n+    // when sizeOfNonZeroElementsInVector > maxEntries\n+    assertTrue(VectorHelper.topEntries(v, 5).size() < Iterables.size(v.nonZeroes()));\n+  }\n+\n }",
                "deletions": 0
            }
        ],
        "patched_files": [
            "VectorDumper.java",
            "VectorHelper.java"
        ],
        "unit_tests": [
            "VectorHelperTest.java"
        ]
    },
    "mahout_2dc63b9": {
        "repo": "mahout",
        "message": "FindBugs changes: one minor possible NPE fix, Map.Entry iteration improvement, dead store removal\n\ngit-svn-id: https://svn.apache.org/repos/asf/lucene/mahout/trunk@910569 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/mahout/commit/2dc63b9dc2eda7825b92653a6f3b0ef80075da65",
        "parent": "https://github.com/apache/mahout/commit/a0a39da35a85bbccd5764f99fd5a4944f3b5a974",
        "bug_id": "mahout_2dc63b9",
        "file": [
            {
                "sha": "8c322fc12934de135993001024e3256a50b39984",
                "filename": "core/src/main/java/org/apache/mahout/classifier/bayes/mapreduce/bayes/BayesThetaNormalizerMapper.java",
                "blob_url": "https://github.com/apache/mahout/blob/2dc63b9dc2eda7825b92653a6f3b0ef80075da65/core/src/main/java/org/apache/mahout/classifier/bayes/mapreduce/bayes/BayesThetaNormalizerMapper.java",
                "raw_url": "https://github.com/apache/mahout/raw/2dc63b9dc2eda7825b92653a6f3b0ef80075da65/core/src/main/java/org/apache/mahout/classifier/bayes/mapreduce/bayes/BayesThetaNormalizerMapper.java",
                "status": "modified",
                "changes": 4,
                "additions": 2,
                "contents_url": "https://api.github.com/repos/apache/mahout/contents/core/src/main/java/org/apache/mahout/classifier/bayes/mapreduce/bayes/BayesThetaNormalizerMapper.java?ref=2dc63b9dc2eda7825b92653a6f3b0ef80075da65",
                "patch": "@@ -86,8 +86,8 @@ public void configure(JobConf job) {\n       String labelWeightSumString = mapStringifier.toString(labelWeightSumTemp);\n       labelWeightSumString = job.get(\"cnaivebayes.sigma_k\", labelWeightSumString);\n       labelWeightSumTemp = mapStringifier.fromString(labelWeightSumString);\n-      for (String key : labelWeightSumTemp.keySet()) {\n-        this.labelWeightSum.put(key, labelWeightSumTemp.get(key));\n+      for (Map.Entry<String, Double> stringDoubleEntry : labelWeightSumTemp.entrySet()) {\n+        this.labelWeightSum.put(stringDoubleEntry.getKey(), stringDoubleEntry.getValue());\n       }\n       DefaultStringifier<Double> stringifier = new DefaultStringifier<Double>(job, GenericsUtil\n           .getClass(sigmaJSigmaK));",
                "deletions": 2
            },
            {
                "sha": "1eb287a0a338f1129ba1c44cd8824a7b64bf515b",
                "filename": "core/src/main/java/org/apache/mahout/classifier/bayes/mapreduce/cbayes/CBayesThetaNormalizerMapper.java",
                "blob_url": "https://github.com/apache/mahout/blob/2dc63b9dc2eda7825b92653a6f3b0ef80075da65/core/src/main/java/org/apache/mahout/classifier/bayes/mapreduce/cbayes/CBayesThetaNormalizerMapper.java",
                "raw_url": "https://github.com/apache/mahout/raw/2dc63b9dc2eda7825b92653a6f3b0ef80075da65/core/src/main/java/org/apache/mahout/classifier/bayes/mapreduce/cbayes/CBayesThetaNormalizerMapper.java",
                "status": "modified",
                "changes": 4,
                "additions": 2,
                "contents_url": "https://api.github.com/repos/apache/mahout/contents/core/src/main/java/org/apache/mahout/classifier/bayes/mapreduce/cbayes/CBayesThetaNormalizerMapper.java?ref=2dc63b9dc2eda7825b92653a6f3b0ef80075da65",
                "patch": "@@ -115,8 +115,8 @@ public void configure(JobConf job) {\n       String labelWeightSumString = mapStringifier.toString(labelWeightSumTemp);\n       labelWeightSumString = job.get(\"cnaivebayes.sigma_k\", labelWeightSumString);\n       labelWeightSumTemp = mapStringifier.fromString(labelWeightSumString);\n-      for (String key : labelWeightSumTemp.keySet()) {\n-        this.labelWeightSum.put(key, labelWeightSumTemp.get(key));\n+      for (Map.Entry<String, Double> stringDoubleEntry : labelWeightSumTemp.entrySet()) {\n+        this.labelWeightSum.put(stringDoubleEntry.getKey(), stringDoubleEntry.getValue());\n       }\n       \n       DefaultStringifier<Double> stringifier = new DefaultStringifier<Double>(job, GenericsUtil",
                "deletions": 2
            },
            {
                "sha": "28ad85752be6074a8f1b05d72e9ddfd0eae274fc",
                "filename": "core/src/main/java/org/apache/mahout/classifier/bayes/mapreduce/common/BayesTfIdfMapper.java",
                "blob_url": "https://github.com/apache/mahout/blob/2dc63b9dc2eda7825b92653a6f3b0ef80075da65/core/src/main/java/org/apache/mahout/classifier/bayes/mapreduce/common/BayesTfIdfMapper.java",
                "raw_url": "https://github.com/apache/mahout/raw/2dc63b9dc2eda7825b92653a6f3b0ef80075da65/core/src/main/java/org/apache/mahout/classifier/bayes/mapreduce/common/BayesTfIdfMapper.java",
                "status": "modified",
                "changes": 4,
                "additions": 2,
                "contents_url": "https://api.github.com/repos/apache/mahout/contents/core/src/main/java/org/apache/mahout/classifier/bayes/mapreduce/common/BayesTfIdfMapper.java?ref=2dc63b9dc2eda7825b92653a6f3b0ef80075da65",
                "patch": "@@ -99,8 +99,8 @@ public void configure(JobConf job) {\n       labelDocumentCountString = job.get(\"cnaivebayes.labelDocumentCounts\", labelDocumentCountString);\n       \n       labelDocCountTemp = mapStringifier.fromString(labelDocumentCountString);\n-      for (String key : labelDocCountTemp.keySet()) {\n-        this.labelDocumentCounts.put(key, labelDocCountTemp.get(key));\n+      for (Map.Entry<String, Double> stringDoubleEntry : labelDocCountTemp.entrySet()) {\n+        this.labelDocumentCounts.put(stringDoubleEntry.getKey(), stringDoubleEntry.getValue());\n       }\n       \n     } catch (IOException ex) {",
                "deletions": 2
            },
            {
                "sha": "1e722137cf2681f15293704018975800eecc194c",
                "filename": "core/src/main/java/org/apache/mahout/clustering/meanshift/MeanShiftCanopyClusterer.java",
                "blob_url": "https://github.com/apache/mahout/blob/2dc63b9dc2eda7825b92653a6f3b0ef80075da65/core/src/main/java/org/apache/mahout/clustering/meanshift/MeanShiftCanopyClusterer.java",
                "raw_url": "https://github.com/apache/mahout/raw/2dc63b9dc2eda7825b92653a6f3b0ef80075da65/core/src/main/java/org/apache/mahout/clustering/meanshift/MeanShiftCanopyClusterer.java",
                "status": "modified",
                "changes": 6,
                "additions": 3,
                "contents_url": "https://api.github.com/repos/apache/mahout/contents/core/src/main/java/org/apache/mahout/clustering/meanshift/MeanShiftCanopyClusterer.java?ref=2dc63b9dc2eda7825b92653a6f3b0ef80075da65",
                "patch": "@@ -15,7 +15,7 @@\n   \n   private double convergenceDelta = 0;\n   // the next canopyId to be allocated\n-  private int nextCanopyId = 0;\n+  //private int nextCanopyId = 0;\n   // the T1 distance threshold\n   private double t1;\n   // the T2 distance threshold\n@@ -57,7 +57,7 @@ public void configure(JobConf job) {\n     } catch (InstantiationException e) {\n       throw new IllegalStateException(e);\n     }\n-    nextCanopyId = 0;\n+    //nextCanopyId = 0; // never read?\n     t1 = Double.parseDouble(job.get(MeanShiftCanopyConfigKeys.T1_KEY));\n     t2 = Double.parseDouble(job.get(MeanShiftCanopyConfigKeys.T2_KEY));\n     convergenceDelta = Double.parseDouble(job.get(MeanShiftCanopyConfigKeys.CLUSTER_CONVERGENCE_KEY));\n@@ -70,7 +70,7 @@ public void configure(JobConf job) {\n    *          the convergence criteria\n    */\n   public void config(DistanceMeasure aMeasure, double aT1, double aT2, double aDelta) {\n-    nextCanopyId = 100; // so canopyIds will sort properly\n+    //nextCanopyId = 100; // so canopyIds will sort properly  // never read?\n     measure = aMeasure;\n     t1 = aT1;\n     t2 = aT2;",
                "deletions": 3
            },
            {
                "sha": "eb362062ad8e516f06ab3ce74e451f3fda22aa78",
                "filename": "core/src/main/java/org/apache/mahout/df/mapred/partial/PartialBuilder.java",
                "blob_url": "https://github.com/apache/mahout/blob/2dc63b9dc2eda7825b92653a6f3b0ef80075da65/core/src/main/java/org/apache/mahout/df/mapred/partial/PartialBuilder.java",
                "raw_url": "https://github.com/apache/mahout/raw/2dc63b9dc2eda7825b92653a6f3b0ef80075da65/core/src/main/java/org/apache/mahout/df/mapred/partial/PartialBuilder.java",
                "status": "modified",
                "changes": 2,
                "additions": 1,
                "contents_url": "https://api.github.com/repos/apache/mahout/contents/core/src/main/java/org/apache/mahout/df/mapred/partial/PartialBuilder.java?ref=2dc63b9dc2eda7825b92653a6f3b0ef80075da65",
                "patch": "@@ -187,7 +187,7 @@ protected static void processOutput(JobConf job,\n     }\n     \n     // make sure we got all the keys/values\n-    if (index != keys.length) {\n+    if (keys != null && index != keys.length) {\n       throw new IllegalStateException();\n     }\n   }",
                "deletions": 1
            },
            {
                "sha": "a85d7b95803ee44c643c92059ca673423c809ea8",
                "filename": "core/src/main/java/org/apache/mahout/df/mapred/partial/Step2Job.java",
                "blob_url": "https://github.com/apache/mahout/blob/2dc63b9dc2eda7825b92653a6f3b0ef80075da65/core/src/main/java/org/apache/mahout/df/mapred/partial/Step2Job.java",
                "raw_url": "https://github.com/apache/mahout/raw/2dc63b9dc2eda7825b92653a6f3b0ef80075da65/core/src/main/java/org/apache/mahout/df/mapred/partial/Step2Job.java",
                "status": "modified",
                "changes": 5,
                "additions": 3,
                "contents_url": "https://api.github.com/repos/apache/mahout/contents/core/src/main/java/org/apache/mahout/df/mapred/partial/Step2Job.java?ref=2dc63b9dc2eda7825b92653a6f3b0ef80075da65",
                "patch": "@@ -143,9 +143,10 @@ protected void parseOutput(JobConf job, PredictionCallback callback) throws IOEx\n     int numTrees = Builder.getNbTrees(job);\n     \n     // compute the total number of output values\n-    int total = 0;\n+    //int total = 0;\n     for (int partition = 0; partition < numMaps; partition++) {\n-      total += Step2Mapper.nbConcerned(numMaps, numTrees, partition);\n+      //total += Step2Mapper.nbConcerned(numMaps, numTrees, partition);\n+      Step2Mapper.nbConcerned(numMaps, numTrees, partition);\n     }\n     \n     int[] firstIds = Step0Output.extractFirstIds(partitions);",
                "deletions": 2
            }
        ],
        "patched_files": [
            "PartialBuilder.java"
        ],
        "unit_tests": [
            "PartialBuilderTest.java"
        ]
    }
}