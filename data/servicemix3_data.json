[{"commit": "https://github.com/apache/servicemix3/commit/acec74c0b0dc8b883f149455e4f7a604d9fdcde1", "parent": "https://github.com/apache/servicemix3/commit/1775123088b854cd68721f582a772f139801911f", "message": "Avoid NPE\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/servicemix/trunk@411734 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "servicemix3_1", "file": [{"additions": 3, "raw_url": "https://github.com/apache/servicemix3/raw/acec74c0b0dc8b883f149455e4f7a604d9fdcde1/servicemix-services/src/main/java/org/apache/servicemix/jdbc/adapter/OracleJDBCAdapter.java", "blob_url": "https://github.com/apache/servicemix3/blob/acec74c0b0dc8b883f149455e4f7a604d9fdcde1/servicemix-services/src/main/java/org/apache/servicemix/jdbc/adapter/OracleJDBCAdapter.java", "sha": "ac30582fb2c031a7a10e4498936169c23e39dcf2", "changes": 3, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/servicemix3/contents/servicemix-services/src/main/java/org/apache/servicemix/jdbc/adapter/OracleJDBCAdapter.java?ref=acec74c0b0dc8b883f149455e4f7a604d9fdcde1", "patch": "@@ -44,6 +44,9 @@\n     protected byte[] getBinaryData(ResultSet rs, int index) throws SQLException {\r\n         // Get as a BLOB\r\n         Blob aBlob = rs.getBlob(index);\r\n+        if (aBlob == null) {\r\n+            return null;\r\n+        }\r\n         return aBlob.getBytes(1, (int) aBlob.length());\r\n     }\r\n }\r", "filename": "servicemix-services/src/main/java/org/apache/servicemix/jdbc/adapter/OracleJDBCAdapter.java"}], "repo": "servicemix3"}, {"commit": "https://github.com/apache/servicemix3/commit/6ed6f766b34ee1fa03591baea69cae54fe1127f8", "parent": "https://github.com/apache/servicemix3/commit/af25877f4c10f4c3ace254cd74b225f89d2d29d9", "message": "[SM-2129]fix NPE of DeploymentService\n\ngit-svn-id: https://svn.apache.org/repos/asf/servicemix/smx3/trunk@1186746 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "servicemix3_2", "file": [{"additions": 32, "raw_url": "https://github.com/apache/servicemix3/raw/6ed6f766b34ee1fa03591baea69cae54fe1127f8/core/servicemix-core/src/main/java/org/apache/servicemix/jbi/framework/DeploymentService.java", "blob_url": "https://github.com/apache/servicemix3/blob/6ed6f766b34ee1fa03591baea69cae54fe1127f8/core/servicemix-core/src/main/java/org/apache/servicemix/jbi/framework/DeploymentService.java", "sha": "cc25e402375bae290b74c1a91cfe8e6df2e55385", "changes": 38, "status": "modified", "deletions": 6, "contents_url": "https://api.github.com/repos/apache/servicemix3/contents/core/servicemix-core/src/main/java/org/apache/servicemix/jbi/framework/DeploymentService.java?ref=6ed6f766b34ee1fa03591baea69cae54fe1127f8", "patch": "@@ -92,7 +92,7 @@ public void init(JBIContainer container) throws JBIException {\n         return DeploymentServiceMBean.class;\n     }\n \n-    public void start() throws javax.jbi.JBIException {\n+    public void start() throws JBIException {\n         super.start();\n         String[] sas = registry.getDeployedServiceAssemblies();\n         // This loop will initialize all SAs\n@@ -264,7 +264,7 @@ public String undeploy(String saName) throws Exception {\n \n             return result;\n         } catch (Exception e) {\n-            LOGGER.info(\"Unable to undeploy assembly\", e);\n+            LOGGER.error(\"Unable to undeploy assembly\", e);\n             throw e;\n         }\n     }\n@@ -387,10 +387,19 @@ public boolean canDeployToComponent(String componentName) {\n      */\n     public String start(String serviceAssemblyName) throws Exception {\n         try {\n-            ServiceAssemblyLifeCycle sa = registry.getServiceAssembly(serviceAssemblyName);\n+            if (serviceAssemblyName == null) {\n+                throw ManagementSupport.failure(\"start\",\n+                        \"SA name must not be null\");\n+            }\n+            ServiceAssemblyLifeCycle sa = registry.getServiceAssembly(\n+                    serviceAssemblyName);\n+            if (sa == null) {\n+                throw ManagementSupport.failure(\"start\", \"SA has not been deployed: \"\n+                        + serviceAssemblyName);\n+            }\n             return sa.start(true);\n         } catch (Exception e) {\n-            LOGGER.info(\"Error in start\", e);\n+            LOGGER.error(\"Error in start\", e);\n             throw e;\n         }\n     }\n@@ -406,10 +415,19 @@ public String start(String serviceAssemblyName) throws Exception {\n      */\n     public String stop(String serviceAssemblyName) throws Exception {\n         try {\n+            if (serviceAssemblyName == null) {\n+                throw ManagementSupport.failure(\"stop\",\n+                        \"SA name must not be null\");\n+            }\n             ServiceAssemblyLifeCycle sa = registry.getServiceAssembly(serviceAssemblyName);\n+            if (sa == null) {\n+                throw ManagementSupport.failure(\"stop\", \"SA has not been deployed: \"\n+                        + serviceAssemblyName);\n+            }\n+\n             return sa.stop(true, false);\n         } catch (Exception e) {\n-            LOGGER.info(\"Error in stop\", e);\n+            LOGGER.error(\"Error in stop\", e);\n             throw e;\n         }\n     }\n@@ -423,10 +441,18 @@ public String stop(String serviceAssemblyName) throws Exception {\n      */\n     public String shutDown(String serviceAssemblyName) throws Exception {\n         try {\n+            if (serviceAssemblyName == null) {\n+                throw ManagementSupport.failure(\"shutdown\",\n+                        \"SA name must not be null\");\n+            }\n             ServiceAssemblyLifeCycle sa = registry.getServiceAssembly(serviceAssemblyName);\n+            if (sa == null) {\n+                throw ManagementSupport.failure(\"shutdown\", \"SA has not been deployed: \"\n+                        + serviceAssemblyName);\n+            }\n             return sa.shutDown(true);\n         } catch (Exception e) {\n-            LOGGER.info(\"Error in shutDown\", e);\n+            LOGGER.error(\"Error in shutDown\", e);\n             throw e;\n         }\n     }", "filename": "core/servicemix-core/src/main/java/org/apache/servicemix/jbi/framework/DeploymentService.java"}], "repo": "servicemix3"}, {"commit": "https://github.com/apache/servicemix3/commit/56153fa3ea1b21883c06a99ecc931b646660a8b0", "parent": "https://github.com/apache/servicemix3/commit/42160568ae4a080471cefc7abaea2628e023afa8", "message": "[SM-1926]  Statistics Service throws NPE with DynamicEndpoints\n\ngit-svn-id: https://svn.apache.org/repos/asf/servicemix/smx3/trunk@916100 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "servicemix3_3", "file": [{"additions": 6, "raw_url": "https://github.com/apache/servicemix3/raw/56153fa3ea1b21883c06a99ecc931b646660a8b0/core/servicemix-core/src/main/java/org/apache/servicemix/jbi/monitoring/StatisticsService.java", "blob_url": "https://github.com/apache/servicemix3/blob/56153fa3ea1b21883c06a99ecc931b646660a8b0/core/servicemix-core/src/main/java/org/apache/servicemix/jbi/monitoring/StatisticsService.java", "sha": "ccbb023f351bd7a678ccbb24829e6fa34907ac56", "changes": 8, "status": "modified", "deletions": 2, "contents_url": "https://api.github.com/repos/apache/servicemix3/contents/core/servicemix-core/src/main/java/org/apache/servicemix/jbi/monitoring/StatisticsService.java?ref=56153fa3ea1b21883c06a99ecc931b646660a8b0", "patch": "@@ -232,7 +232,9 @@ protected void onExchangeSent(ExchangeEvent event) {\n                     if (EndpointSupport.getKey(ses[i]).equals(source)) {\n                         source = EndpointSupport.getUniqueKey(ses[i]);\n                         EndpointStats stats = endpointStats.get(source);\n-                        stats.incrementOutbound();\n+                        if (stats != null) {\n+                            stats.incrementOutbound();\n+                        }\n                         break;\n                     }\n                 }\n@@ -250,7 +252,9 @@ protected void onExchangeAccepted(ExchangeEvent event) {\n                 && me instanceof MessageExchangeImpl) {\n             String source = EndpointSupport.getUniqueKey(me.getEndpoint());\n             EndpointStats stats = endpointStats.get(source);\n-            stats.incrementInbound();\n+            if (stats != null) {\n+                stats.incrementInbound();\n+            }\n         }        \n     }\n     ", "filename": "core/servicemix-core/src/main/java/org/apache/servicemix/jbi/monitoring/StatisticsService.java"}], "repo": "servicemix3"}, {"commit": "https://github.com/apache/servicemix3/commit/59f54768a56ac5e30af60b9384d872e22a987254", "parent": "https://github.com/apache/servicemix3/commit/b78a18afa89f8c27b1c7f1d0f57df092cb3542f5", "message": "SM-1456: NPE in StatisticsService.initEndpointListener()\n\ngit-svn-id: https://svn.apache.org/repos/asf/servicemix/smx3/trunk@708647 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "servicemix3_4", "file": [{"additions": 1, "raw_url": "https://github.com/apache/servicemix3/raw/59f54768a56ac5e30af60b9384d872e22a987254/core/servicemix-core/src/main/java/org/apache/servicemix/jbi/monitoring/StatisticsService.java", "blob_url": "https://github.com/apache/servicemix3/blob/59f54768a56ac5e30af60b9384d872e22a987254/core/servicemix-core/src/main/java/org/apache/servicemix/jbi/monitoring/StatisticsService.java", "sha": "873f9fcbefc042805d4659ce8bbeeb221a030561", "changes": 2, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/servicemix3/contents/core/servicemix-core/src/main/java/org/apache/servicemix/jbi/monitoring/StatisticsService.java?ref=59f54768a56ac5e30af60b9384d872e22a987254", "patch": "@@ -203,7 +203,7 @@ public void externalEndpointUnregistered(EndpointEvent event) {\n         };\n         container.addListener(endpointListener);\n         // add endpoints that were registered before we added the listener\n-        for (Endpoint mbean : container.getDefaultBroker().getRegistry().getEndpointRegistry().getEndpointMBeans()) {\n+        for (Endpoint mbean : container.getRegistry().getEndpointRegistry().getEndpointMBeans()) {\n             AbstractServiceEndpoint endpoint = \n                 (AbstractServiceEndpoint) container.getEndpoint(container.getComponent(mbean.getComponentName()).getContext(), \n                                                                 mbean.getServiceName(), mbean.getEndpointName());", "filename": "core/servicemix-core/src/main/java/org/apache/servicemix/jbi/monitoring/StatisticsService.java"}, {"additions": 12, "raw_url": "https://github.com/apache/servicemix3/raw/59f54768a56ac5e30af60b9384d872e22a987254/core/servicemix-core/src/test/java/org/apache/servicemix/jbi/monitoring/StatisticsServiceTest.java", "blob_url": "https://github.com/apache/servicemix3/blob/59f54768a56ac5e30af60b9384d872e22a987254/core/servicemix-core/src/test/java/org/apache/servicemix/jbi/monitoring/StatisticsServiceTest.java", "sha": "e79ffcec00939698af72f0a574eb30885f25d27c", "changes": 12, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/servicemix3/contents/core/servicemix-core/src/test/java/org/apache/servicemix/jbi/monitoring/StatisticsServiceTest.java?ref=59f54768a56ac5e30af60b9384d872e22a987254", "patch": "@@ -25,6 +25,7 @@\n import org.apache.servicemix.jbi.container.ActivationSpec;\n import org.apache.servicemix.jbi.container.JBIContainer;\n import org.apache.servicemix.jbi.framework.ComponentContextImpl;\n+import org.apache.servicemix.jbi.management.BaseSystemService;\n import org.apache.servicemix.jbi.messaging.DeliveryChannelImplTest.TestComponent;\n import org.apache.servicemix.jbi.servicedesc.EndpointSupport;\n \n@@ -75,6 +76,17 @@ public void testAddEndpointStatsAtStartup() throws JBIException {\n         assertNotNull(service.getComponentStats().get(COMPONENT));\n         assertNotNull(service.getEndpointStats().get(EndpointSupport.getUniqueKey(endpoint)));\n     }\n+    \n+    public void testInitByContainer() throws Exception {\n+        JBIContainer con = new JBIContainer();\n+        con.setEmbedded(true);\n+        BaseSystemService[] services = new BaseSystemService[] {new StatisticsService()};\n+        con.setServices(services);\n+        con.init();\n+        for (BaseSystemService srv : services) {\n+            assertTrue(srv.isInitialized());\n+        }\n+    }\n \n     private ServiceEndpoint registerEndpoint() throws JBIException {\n         TestComponent component = new TestComponent(SERVICE, ENDPOINT);", "filename": "core/servicemix-core/src/test/java/org/apache/servicemix/jbi/monitoring/StatisticsServiceTest.java"}], "repo": "servicemix3"}, {"commit": "https://github.com/apache/servicemix3/commit/14d8e4b8bf421edf5e196cb697c3095863d4c259", "parent": "https://github.com/apache/servicemix3/commit/2ca0818a733329a1856835d9496085cf6a6831c1", "message": "SM-1456: Statistics Service throws NPE on startup.\n\ngit-svn-id: https://svn.apache.org/repos/asf/servicemix/smx3/trunk@707628 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "servicemix3_5", "file": [{"additions": 0, "raw_url": "https://github.com/apache/servicemix3/raw/14d8e4b8bf421edf5e196cb697c3095863d4c259/core/servicemix-core/pom.xml", "blob_url": "https://github.com/apache/servicemix3/blob/14d8e4b8bf421edf5e196cb697c3095863d4c259/core/servicemix-core/pom.xml", "sha": "8bb0060ad8764d9641b5eb5669b694e631d86303", "changes": 1, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/servicemix3/contents/core/servicemix-core/pom.xml?ref=14d8e4b8bf421edf5e196cb697c3095863d4c259", "patch": "@@ -236,7 +236,6 @@\n     <dependency>\n       <groupId>org.easymock</groupId>\n       <artifactId>easymock</artifactId>\n-      <version>2.0</version>\n       <scope>test</scope>\n     </dependency>    \n   </dependencies>", "filename": "core/servicemix-core/pom.xml"}, {"additions": 135, "raw_url": "https://github.com/apache/servicemix3/raw/14d8e4b8bf421edf5e196cb697c3095863d4c259/core/servicemix-core/src/main/java/org/apache/servicemix/jbi/monitoring/StatisticsService.java", "blob_url": "https://github.com/apache/servicemix3/blob/14d8e4b8bf421edf5e196cb697c3095863d4c259/core/servicemix-core/src/main/java/org/apache/servicemix/jbi/monitoring/StatisticsService.java", "sha": "682ee0bee75326a1d1908d271a6fb7c9eda931a2", "changes": 225, "status": "modified", "deletions": 90, "contents_url": "https://api.github.com/repos/apache/servicemix3/contents/core/servicemix-core/src/main/java/org/apache/servicemix/jbi/monitoring/StatisticsService.java?ref=14d8e4b8bf421edf5e196cb697c3095863d4c259", "patch": "@@ -43,6 +43,7 @@\n import org.apache.servicemix.jbi.event.ExchangeEvent;\n import org.apache.servicemix.jbi.event.ExchangeListener;\n import org.apache.servicemix.jbi.framework.ComponentMBeanImpl;\n+import org.apache.servicemix.jbi.framework.Endpoint;\n import org.apache.servicemix.jbi.management.AttributeInfoHelper;\n import org.apache.servicemix.jbi.management.BaseSystemService;\n import org.apache.servicemix.jbi.management.ManagementContext;\n@@ -156,28 +157,8 @@ public void stop() throws javax.jbi.JBIException {\n     }\n \n     public void init(JBIContainer container) throws JBIException {\n-        endpointListener = new EndpointAdapter() {\n-            public void internalEndpointRegistered(EndpointEvent event) {\n-                onEndpointRegistered(event);\n-            }\n-            public void internalEndpointUnregistered(EndpointEvent event) {\n-                onEndpointUnregistered(event);\n-            }\n-            public void externalEndpointRegistered(EndpointEvent event) {\n-                onEndpointRegistered(event);\n-            }\n-            public void externalEndpointUnregistered(EndpointEvent event) {\n-                onEndpointUnregistered(event);\n-            }\n-        };\n-        componentListener = new ComponentAdapter() {\n-            public void componentInitialized(ComponentEvent event) {\n-                onComponentInitialized(event);\n-            }\n-            public void componentShutDown(ComponentEvent event) {\n-                onComponentShutDown(event);\n-            }\n-        };\n+        initComponentListener(container);\n+        initEndpointListener(container);\n         exchangeListener = new ExchangeListener() {\n             public void exchangeSent(ExchangeEvent event) {\n                 onExchangeSent(event);\n@@ -186,82 +167,47 @@ public void exchangeAccepted(ExchangeEvent event) {\n                 onExchangeAccepted(event);\n             }\n         };\n-        container.addListener(componentListener);\n-        container.addListener(endpointListener);\n         super.init(container);\n     }\n-    \n-    protected void onComponentInitialized(ComponentEvent event) {\n-        ComponentMBeanImpl component = event.getComponent();\n-        String key = component.getName();\n-        ComponentStats stats = new ComponentStats(component);\n-        componentStats.putIfAbsent(key, stats);\n-        // Register MBean\n-        ManagementContext context = container.getManagementContext();\n-        try {\n-            context.registerMBean(context.createObjectName(context.createObjectNameProps(stats, true)), \n-                    stats, \n-                    ComponentStatsMBean.class);\n-        } catch (Exception e) {\n-            LOG.info(\"Unable to register component statistics MBean: \" + e.getMessage());\n-            if (LOG.isDebugEnabled()) {\n-                LOG.debug(\"Unable to register component statistics MBean\", e);\n+\n+    private void initComponentListener(final JBIContainer container) {\n+        componentListener = new ComponentAdapter() {\n+            public void componentInitialized(ComponentEvent event) {\n+                createComponentStats(container, event.getComponent());\n             }\n-        }\n-    }\n-    \n-    protected void onComponentShutDown(ComponentEvent event) {\n-        ComponentMBeanImpl component = event.getComponent();\n-        String key = component.getName();\n-        ComponentStats stats = componentStats.remove(key);\n-        if (stats == null) {\n-            return;\n-        }\n-        // Register MBean\n-        ManagementContext context = container.getManagementContext();\n-        try {\n-            context.unregisterMBean(context.createObjectName(context.createObjectNameProps(stats, true)));\n-        } catch (Exception e) {\n-            LOG.info(\"Unable to unregister component statistics MBean: \" + e);\n-            if (LOG.isDebugEnabled()) {\n-                LOG.debug(\"Unable to unregister component statistics MBean\", e);\n+            public void componentShutDown(ComponentEvent event) {\n+                removeComponentStats(container, event.getComponent());\n             }\n+        };\n+        container.addListener(componentListener);\n+        // add components that were initialized/started before we added the listener\n+        for (ComponentMBeanImpl component : container.getRegistry().getComponentRegistry().getComponents()) {\n+            createComponentStats(container, component);\n         }\n     }\n-    \n-    protected void onEndpointRegistered(EndpointEvent event) {\n-        AbstractServiceEndpoint endpoint = (AbstractServiceEndpoint) event.getEndpoint();\n-        String key = EndpointSupport.getUniqueKey(endpoint);\n-        ComponentStats compStats = componentStats.get(endpoint.getComponentNameSpace().getName()); \n-        EndpointStats stats = new EndpointStats(endpoint, compStats.getMessagingStats());\n-        endpointStats.putIfAbsent(key, stats);\n-        // Register MBean\n-        ManagementContext context = container.getManagementContext();\n-        try {\n-            context.registerMBean(context.createObjectName(context.createObjectNameProps(stats, true)), \n-                                  stats, \n-                                  EndpointStatsMBean.class);\n-        } catch (Exception e) {\n-            LOG.info(\"Unable to register endpoint statistics MBean: \" + e.getMessage());\n-            if (LOG.isDebugEnabled()) {\n-                LOG.debug(\"Unable to register endpoint statistics MBean\", e);\n+\n+    private void initEndpointListener(final JBIContainer container) {\n+        endpointListener = new EndpointAdapter() {\n+            public void internalEndpointRegistered(EndpointEvent event) {\n+                createEndpointStats(container, (AbstractServiceEndpoint) event.getEndpoint());\n             }\n-        }\n-    }\n-    \n-    protected void onEndpointUnregistered(EndpointEvent event) {\n-        AbstractServiceEndpoint endpoint = (AbstractServiceEndpoint) event.getEndpoint();\n-        String key = EndpointSupport.getUniqueKey(endpoint);\n-        EndpointStats stats = endpointStats.remove(key);\n-        // Register MBean\n-        ManagementContext context = container.getManagementContext();\n-        try {\n-            context.unregisterMBean(context.createObjectName(context.createObjectNameProps(stats, true)));\n-        } catch (Exception e) {\n-            LOG.info(\"Unable to unregister endpoint statistics MBean: \" + e.getMessage());\n-            if (LOG.isDebugEnabled()) {\n-                LOG.debug(\"Unable to unregister endpoint statistics MBean\", e);\n+            public void internalEndpointUnregistered(EndpointEvent event) {\n+                removeEndpointStats(container, (AbstractServiceEndpoint) event.getEndpoint());\n+            }\n+            public void externalEndpointRegistered(EndpointEvent event) {\n+                createEndpointStats(container, (AbstractServiceEndpoint) event.getEndpoint());\n             }\n+            public void externalEndpointUnregistered(EndpointEvent event) {\n+                removeEndpointStats(container, (AbstractServiceEndpoint) event.getEndpoint());\n+            }\n+        };\n+        container.addListener(endpointListener);\n+        // add endpoints that were registered before we added the listener\n+        for (Endpoint mbean : container.getDefaultBroker().getRegistry().getEndpointRegistry().getEndpointMBeans()) {\n+            AbstractServiceEndpoint endpoint = \n+                (AbstractServiceEndpoint) container.getEndpoint(container.getComponent(mbean.getComponentName()).getContext(), \n+                                                                mbean.getServiceName(), mbean.getEndpointName());\n+            createEndpointStats(container, endpoint);\n         }\n     }\n \n@@ -354,5 +300,104 @@ protected void doDumpStats() {\n         helper.addOperation(getObjectToManage(), \"resetAllStats\", \"reset all statistics\");\n         return OperationInfoHelper.join(super.getOperationInfos(), helper.getOperationInfos());\n     }\n+    \n+    /*\n+     * Creates a {@link ComponentStats} instance for a component and adds it to the Map\n+     */\n+    private void createComponentStats(JBIContainer container, ComponentMBeanImpl component) {\n+        String key = component.getName();\n+        ComponentStats stats = new ComponentStats(component);\n+        componentStats.putIfAbsent(key, stats);\n+        // Register MBean\n+        ManagementContext context = container.getManagementContext();\n+        try {\n+            context.registerMBean(context.createObjectName(context.createObjectNameProps(stats, true)), \n+                    stats, \n+                    ComponentStatsMBean.class);\n+        } catch (Exception e) {\n+            LOG.info(\"Unable to register component statistics MBean: \" + e.getMessage());\n+            if (LOG.isDebugEnabled()) {\n+                LOG.debug(\"Unable to register component statistics MBean\", e);\n+            }\n+        }\n+    }\n \n+    /*\n+     * Removes the {@link ComponentStats} for this component from the Map\n+     */\n+    private void removeComponentStats(JBIContainer container, ComponentMBeanImpl component) {\n+        String key = component.getName();\n+        ComponentStats stats = componentStats.remove(key);\n+        if (stats == null) {\n+            return;\n+        }\n+        // Register MBean\n+        ManagementContext context = container.getManagementContext();\n+        try {\n+            context.unregisterMBean(context.createObjectName(context.createObjectNameProps(stats, true)));\n+        } catch (Exception e) {\n+            LOG.info(\"Unable to unregister component statistics MBean: \" + e);\n+            if (LOG.isDebugEnabled()) {\n+                LOG.debug(\"Unable to unregister component statistics MBean\", e);\n+            }\n+        }\n+    }\n+    \n+    /*\n+     * Create an {@link EndpointStats} instance for the endpoint and adds it to the Map\n+     */\n+    private void createEndpointStats(JBIContainer container, AbstractServiceEndpoint endpoint) {\n+        String key = EndpointSupport.getUniqueKey(endpoint);\n+        ComponentStats compStats = componentStats.get(endpoint.getComponentNameSpace().getName()); \n+        EndpointStats stats = new EndpointStats(endpoint, compStats.getMessagingStats());\n+        endpointStats.putIfAbsent(key, stats);\n+        // Register MBean\n+        ManagementContext context = container.getManagementContext();\n+        try {\n+            context.registerMBean(context.createObjectName(context.createObjectNameProps(stats, true)), \n+                                  stats, \n+                                  EndpointStatsMBean.class);\n+        } catch (Exception e) {\n+            LOG.info(\"Unable to register endpoint statistics MBean: \" + e.getMessage());\n+            if (LOG.isDebugEnabled()) {\n+                LOG.debug(\"Unable to register endpoint statistics MBean\", e);\n+            }\n+        }\n+    }\n+\n+    /*\n+     * Removes the {@link EndpointStats} instance for the endpoint from the Map\n+     */\n+    private void removeEndpointStats(JBIContainer containner, AbstractServiceEndpoint endpoint) {\n+        String key = EndpointSupport.getUniqueKey(endpoint);\n+        EndpointStats stats = endpointStats.remove(key);\n+        // Register MBean\n+        ManagementContext context = container.getManagementContext();\n+        try {\n+            context.unregisterMBean(context.createObjectName(context.createObjectNameProps(stats, true)));\n+        } catch (Exception e) {\n+            LOG.info(\"Unable to unregister endpoint statistics MBean: \" + e.getMessage());\n+            if (LOG.isDebugEnabled()) {\n+                LOG.debug(\"Unable to unregister endpoint statistics MBean\", e);\n+            }\n+        }\n+    }\n+    \n+    /**\n+     * Access the {@link EndpointStats} for all the endpoints that are currently registered\n+     * \n+     * @return the Map of {@link EndpointStats}\n+     */\n+    protected ConcurrentHashMap<String, EndpointStats> getEndpointStats() {\n+        return endpointStats;\n+    }\n+    \n+    /**\n+     * Access the {@link ComponentStats} for all the endpoints that are currently initialized/started \n+     * \n+     * @return the Map of {@link ComponentStats}\n+     */    \n+    protected ConcurrentHashMap<String, ComponentStats> getComponentStats() {\n+        return componentStats;\n+    }\n }", "filename": "core/servicemix-core/src/main/java/org/apache/servicemix/jbi/monitoring/StatisticsService.java"}, {"additions": 85, "raw_url": "https://github.com/apache/servicemix3/raw/14d8e4b8bf421edf5e196cb697c3095863d4c259/core/servicemix-core/src/test/java/org/apache/servicemix/jbi/monitoring/StatisticsServiceTest.java", "blob_url": "https://github.com/apache/servicemix3/blob/14d8e4b8bf421edf5e196cb697c3095863d4c259/core/servicemix-core/src/test/java/org/apache/servicemix/jbi/monitoring/StatisticsServiceTest.java", "sha": "ca4954c9474412709b953320e5a552c17e197cc2", "changes": 85, "status": "added", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/servicemix3/contents/core/servicemix-core/src/test/java/org/apache/servicemix/jbi/monitoring/StatisticsServiceTest.java?ref=14d8e4b8bf421edf5e196cb697c3095863d4c259", "patch": "@@ -0,0 +1,85 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.servicemix.jbi.monitoring;\n+\n+import javax.jbi.JBIException;\n+import javax.jbi.servicedesc.ServiceEndpoint;\n+import javax.xml.namespace.QName;\n+\n+import junit.framework.TestCase;\n+\n+import org.apache.servicemix.jbi.container.ActivationSpec;\n+import org.apache.servicemix.jbi.container.JBIContainer;\n+import org.apache.servicemix.jbi.framework.ComponentContextImpl;\n+import org.apache.servicemix.jbi.messaging.DeliveryChannelImplTest.TestComponent;\n+import org.apache.servicemix.jbi.servicedesc.EndpointSupport;\n+\n+/**\n+ * Test case for {@link StatisticsService}\n+ */\n+public class StatisticsServiceTest extends TestCase {\n+    \n+    private static final String COMPONENT = \"component\";\n+    private static final String ENDPOINT = \"endpoint\";\n+    private static final QName SERVICE = new QName(\"service\");\n+\n+    protected JBIContainer container;\n+    private StatisticsService service;\n+\n+    protected void setUp() throws Exception {\n+        // set up a test container instance\n+        container = new JBIContainer();\n+        container.setEmbedded(true);\n+        container.init();\n+        container.start();\n+        // and a test StatisticsService\n+        service = new StatisticsService();\n+    }\n+    \n+    public void testAddEndpointStatsByListener() throws JBIException {\n+        // initialize and start the StatisticsService\n+        service.init(container);\n+        service.start();\n+\n+        // now register a new endpoint\n+        ServiceEndpoint endpoint = registerEndpoint();\n+\n+        // StatisticsService should know about the endpoint/component through listener callbacks\n+        assertNotNull(service.getComponentStats().get(COMPONENT));\n+        assertNotNull(service.getEndpointStats().get(EndpointSupport.getUniqueKey(endpoint)));\n+    }\n+    \n+    public void testAddEndpointStatsAtStartup() throws JBIException {\n+        // first register the endpoint\n+        ServiceEndpoint endpoint = registerEndpoint();\n+        \n+        // initialize and start the StatisticsService\n+        service.init(container);\n+        service.start();\n+\n+        // StatisticsService should have learn about existing endpoints/components at startup\n+        assertNotNull(service.getComponentStats().get(COMPONENT));\n+        assertNotNull(service.getEndpointStats().get(EndpointSupport.getUniqueKey(endpoint)));\n+    }\n+\n+    private ServiceEndpoint registerEndpoint() throws JBIException {\n+        TestComponent component = new TestComponent(SERVICE, ENDPOINT);\n+        container.activateComponent(new ActivationSpec(COMPONENT, component));\n+        return container.getEndpoint((ComponentContextImpl)component.getContext(), SERVICE, ENDPOINT);\n+    }\n+\n+}", "filename": "core/servicemix-core/src/test/java/org/apache/servicemix/jbi/monitoring/StatisticsServiceTest.java"}, {"additions": 5, "raw_url": "https://github.com/apache/servicemix3/raw/14d8e4b8bf421edf5e196cb697c3095863d4c259/pom.xml", "blob_url": "https://github.com/apache/servicemix3/blob/14d8e4b8bf421edf5e196cb697c3095863d4c259/pom.xml", "sha": "464e2eb59e19c59d65fcb3e56bcc2a68b8b9e055", "changes": 10, "status": "modified", "deletions": 5, "contents_url": "https://api.github.com/repos/apache/servicemix3/contents/pom.xml?ref=14d8e4b8bf421edf5e196cb697c3095863d4c259", "patch": "@@ -1052,11 +1052,6 @@\n                 <artifactId>drools-core</artifactId>\n                 <version>2.1</version>\n             </dependency>\n-            <dependency>\n-                <groupId>easymock</groupId>\n-                <artifactId>easymock</artifactId>\n-                <version>1.2_Java1.3</version>\n-            </dependency>\n             <dependency>\n                 <groupId>emberio</groupId>\n                 <artifactId>emberio</artifactId>\n@@ -1803,6 +1798,11 @@\n                     </exclusion>\n                 </exclusions>\n             </dependency>\n+            <dependency>\n+                <groupId>org.easymock</groupId>\n+                <artifactId>easymock</artifactId>\n+                <version>2.0</version>\n+            </dependency>\n         </dependencies>\n     </dependencyManagement>\n ", "filename": "pom.xml"}], "repo": "servicemix3"}, {"commit": "https://github.com/apache/servicemix3/commit/c5ff112895ac26c3935161b7dcbb5c16a05478ef", "parent": "https://github.com/apache/servicemix3/commit/3475adf67a70a7565503561c5991e75cd3683aa5", "message": "SM-941: NPE in BeanComponent - checkEndOfRequest\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/servicemix/trunk@533111 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "servicemix3_6", "file": [{"additions": 36, "raw_url": "https://github.com/apache/servicemix3/raw/c5ff112895ac26c3935161b7dcbb5c16a05478ef/deployables/serviceengines/servicemix-bean/src/main/java/org/apache/servicemix/bean/BeanEndpoint.java", "blob_url": "https://github.com/apache/servicemix3/blob/c5ff112895ac26c3935161b7dcbb5c16a05478ef/deployables/serviceengines/servicemix-bean/src/main/java/org/apache/servicemix/bean/BeanEndpoint.java", "sha": "4d6baec418bd80838e50456cfa8049eba1a60c68", "changes": 70, "status": "modified", "deletions": 34, "contents_url": "https://api.github.com/repos/apache/servicemix3/contents/deployables/serviceengines/servicemix-bean/src/main/java/org/apache/servicemix/bean/BeanEndpoint.java?ref=c5ff112895ac26c3935161b7dcbb5c16a05478ef", "patch": "@@ -217,45 +217,47 @@ protected void onProviderExchange(MessageExchange exchange) throws Exception {\n             requests.put(corId, req);\n         }\n         currentRequest.set(req);\n-        // If the bean implements MessageExchangeListener,\n-        // just call the method\n-        if (req.getBean() instanceof MessageExchangeListener) {\n-            ((MessageExchangeListener) req.getBean()).onMessageExchange(exchange);\n-        } else {\n-            // Exchange is finished\n-            if (exchange.getStatus() == ExchangeStatus.DONE) {\n-                return;\n-            // Exchange has been aborted with an exception\n-            } else if (exchange.getStatus() == ExchangeStatus.ERROR) {\n-                return;\n-            // Fault message\n-            } else if (exchange.getFault() != null) {\n-                // TODO: find a way to send it back to the bean before setting the DONE status\n-                done(exchange);\n+        synchronized (req) {\n+            // If the bean implements MessageExchangeListener,\n+            // just call the method\n+            if (req.getBean() instanceof MessageExchangeListener) {\n+                ((MessageExchangeListener) req.getBean()).onMessageExchange(exchange);\n             } else {\n-                MethodInvocation invocation = getMethodInvocationStrategy().createInvocation(\n-                        req.getBean(), getBeanInfo(), exchange, this);\n-                if (invocation == null) {\n-                    throw new UnknownMessageExchangeTypeException(exchange, this);\n-                }\n-                try {\n-                    invocation.proceed();\n-                } catch (Exception e) {\n-                    throw e;\n-                } catch (Throwable throwable) {\n-                    throw new MethodInvocationFailedException(req.getBean(), invocation, exchange, this, throwable);\n-                }\n-                if (exchange.getStatus() == ExchangeStatus.ERROR) {\n-                    send(exchange);\n-                }\n-                if (exchange.getFault() == null && exchange.getMessage(\"out\") == null)  {\n-                    // TODO: handle MEP correctly (DONE should only be sent for InOnly)\n+                // Exchange is finished\n+                if (exchange.getStatus() == ExchangeStatus.DONE) {\n+                    return;\n+                // Exchange has been aborted with an exception\n+                } else if (exchange.getStatus() == ExchangeStatus.ERROR) {\n+                    return;\n+                // Fault message\n+                } else if (exchange.getFault() != null) {\n+                    // TODO: find a way to send it back to the bean before setting the DONE status\n                     done(exchange);\n+                } else {\n+                    MethodInvocation invocation = getMethodInvocationStrategy().createInvocation(\n+                            req.getBean(), getBeanInfo(), exchange, this);\n+                    if (invocation == null) {\n+                        throw new UnknownMessageExchangeTypeException(exchange, this);\n+                    }\n+                    try {\n+                        invocation.proceed();\n+                    } catch (Exception e) {\n+                        throw e;\n+                    } catch (Throwable throwable) {\n+                        throw new MethodInvocationFailedException(req.getBean(), invocation, exchange, this, throwable);\n+                    }\n+                    if (exchange.getStatus() == ExchangeStatus.ERROR) {\n+                        send(exchange);\n+                    }\n+                    if (exchange.getFault() == null && exchange.getMessage(\"out\") == null)  {\n+                        // TODO: handle MEP correctly (DONE should only be sent for InOnly)\n+                        done(exchange);\n+                    }\n                 }\n             }\n+            checkEndOfRequest(req);\n+            currentRequest.set(null);\n         }\n-        checkEndOfRequest(req);\n-        currentRequest.set(null);\n     }\n     \n     protected void onConsumerExchange(MessageExchange exchange) throws Exception {", "filename": "deployables/serviceengines/servicemix-bean/src/main/java/org/apache/servicemix/bean/BeanEndpoint.java"}], "repo": "servicemix3"}, {"commit": "https://github.com/apache/servicemix3/commit/77af3e56ca3b8be922fce19afc5383f5d53ae6f8", "parent": "https://github.com/apache/servicemix3/commit/c6a880c2c1c059fd41f96ee931913c92c041e55d", "message": "Avoid possible NPE (even if catched)\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/servicemix/trunk@523485 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "servicemix3_7", "file": [{"additions": 6, "raw_url": "https://github.com/apache/servicemix3/raw/77af3e56ca3b8be922fce19afc5383f5d53ae6f8/core/servicemix-services/src/main/java/org/apache/servicemix/jdbc/adapter/DefaultJDBCAdapter.java", "blob_url": "https://github.com/apache/servicemix3/blob/77af3e56ca3b8be922fce19afc5383f5d53ae6f8/core/servicemix-services/src/main/java/org/apache/servicemix/jdbc/adapter/DefaultJDBCAdapter.java", "sha": "10255b335707c2cd22c3541bbee633bed7ecf730", "changes": 8, "status": "modified", "deletions": 2, "contents_url": "https://api.github.com/repos/apache/servicemix3/contents/core/servicemix-services/src/main/java/org/apache/servicemix/jdbc/adapter/DefaultJDBCAdapter.java?ref=77af3e56ca3b8be922fce19afc5383f5d53ae6f8", "patch": "@@ -204,14 +204,18 @@ public void doRemoveData(Connection connection, String id) throws SQLException,\n     \n     static private void close(Statement s) {\n         try {\n-            s.close();\n+            if (s != null) {\n+                s.close();\n+            }\n         } catch (Throwable e) {\n         }\n     }\n \n     static private void close(ResultSet rs) {\n         try {\n-            rs.close();\n+            if (rs != null) {\n+                rs.close();\n+            }\n         } catch (Throwable e) {\n         }\n     }", "filename": "core/servicemix-services/src/main/java/org/apache/servicemix/jdbc/adapter/DefaultJDBCAdapter.java"}], "repo": "servicemix3"}, {"commit": "https://github.com/apache/servicemix3/commit/4db4aaea0b36cf13f9646df290380613be7ca3a1", "parent": "https://github.com/apache/servicemix3/commit/0b800f096c39dd5f3bfb1c7b749dd61d03fbe7cb", "message": "avoid possible NPE\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/servicemix/trunk@522503 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "servicemix3_8", "file": [{"additions": 3, "raw_url": "https://github.com/apache/servicemix3/raw/4db4aaea0b36cf13f9646df290380613be7ca3a1/core/servicemix-core/src/main/java/org/apache/servicemix/jbi/resolver/EndpointResolverSupport.java", "blob_url": "https://github.com/apache/servicemix3/blob/4db4aaea0b36cf13f9646df290380613be7ca3a1/core/servicemix-core/src/main/java/org/apache/servicemix/jbi/resolver/EndpointResolverSupport.java", "sha": "219f360da7bfb3eb92a4ae831f679ca37d1c2f1a", "changes": 3, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/servicemix3/contents/core/servicemix-core/src/main/java/org/apache/servicemix/jbi/resolver/EndpointResolverSupport.java?ref=4db4aaea0b36cf13f9646df290380613be7ca3a1", "patch": "@@ -32,6 +32,9 @@\n \n     public ServiceEndpoint resolveEndpoint(ComponentContext context, MessageExchange exchange, EndpointFilter filter) throws JBIException {\n         ServiceEndpoint[] endpoints = resolveAvailableEndpoints(context, exchange);\n+        if (endpoints == null) {\n+            return null;\n+        }\n         if (endpoints.length > 0) {\n             endpoints = filterEndpoints(endpoints, exchange, filter);\n         }", "filename": "core/servicemix-core/src/main/java/org/apache/servicemix/jbi/resolver/EndpointResolverSupport.java"}], "repo": "servicemix3"}, {"commit": "https://github.com/apache/servicemix3/commit/609d55bb47f54163ae93ada67345a60529bd5a9c", "parent": "https://github.com/apache/servicemix3/commit/5917157aab901bd58457558f4e5effda288f3e9f", "message": "SM-853: NPE in DotViewFlowListener\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/servicemix/trunk@509508 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "servicemix3_9", "file": [{"additions": 3, "raw_url": "https://github.com/apache/servicemix3/raw/609d55bb47f54163ae93ada67345a60529bd5a9c/core/servicemix-core/src/main/java/org/apache/servicemix/jbi/view/DotViewFlowListener.java", "blob_url": "https://github.com/apache/servicemix3/blob/609d55bb47f54163ae93ada67345a60529bd5a9c/core/servicemix-core/src/main/java/org/apache/servicemix/jbi/view/DotViewFlowListener.java", "sha": "c5ebf4a6c83cc686ddadaa0e3032efc16b1570d9", "changes": 4, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/servicemix3/contents/core/servicemix-core/src/main/java/org/apache/servicemix/jbi/view/DotViewFlowListener.java?ref=609d55bb47f54163ae93ada67345a60529bd5a9c", "patch": "@@ -156,7 +156,9 @@ public void exchangeSent(ExchangeEvent event) {\n                 }\n             }\n             usedComponents.add(mei.getSourceId().getName());\n-            usedComponents.add(((AbstractServiceEndpoint) mei.getEndpoint()).getComponentNameSpace().getName());\n+            if (((AbstractServiceEndpoint) mei.getEndpoint()).getComponentNameSpace() != null) {\n+                usedComponents.add(((AbstractServiceEndpoint) mei.getEndpoint()).getComponentNameSpace().getName());\n+            }\n             String dest = EndpointSupport.getUniqueKey(mei.getEndpoint());\n             Map componentFlow = createSource(source);\n             if (componentFlow.put(dest, Boolean.TRUE) == null) {", "filename": "core/servicemix-core/src/main/java/org/apache/servicemix/jbi/view/DotViewFlowListener.java"}], "repo": "servicemix3"}, {"commit": "https://github.com/apache/servicemix3/commit/edf2595aef6ef995a625fb71a241cedfb2360b0b", "parent": "https://github.com/apache/servicemix3/commit/fc9bdd87cf3e14051b014931b565da72383d64dc", "message": "Fix possible NPE when using jaxb2 on top of W3CDOMStreamReader\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/servicemix/trunk@499005 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "servicemix3_10", "file": [{"additions": 1, "raw_url": "https://github.com/apache/servicemix3/raw/edf2595aef6ef995a625fb71a241cedfb2360b0b/core/servicemix-core/src/main/java/org/apache/servicemix/jbi/jaxp/W3CDOMStreamReader.java", "blob_url": "https://github.com/apache/servicemix3/blob/edf2595aef6ef995a625fb71a241cedfb2360b0b/core/servicemix-core/src/main/java/org/apache/servicemix/jbi/jaxp/W3CDOMStreamReader.java", "sha": "706e798ab2c2112eac6010395f3b6785c3e209b6", "changes": 9, "status": "modified", "deletions": 8, "contents_url": "https://api.github.com/repos/apache/servicemix3/contents/core/servicemix-core/src/main/java/org/apache/servicemix/jbi/jaxp/W3CDOMStreamReader.java?ref=edf2595aef6ef995a625fb71a241cedfb2360b0b", "patch": "@@ -217,14 +217,7 @@ public String getAttributePrefix(int i) {\n     }\n \n     public String getAttributeType(int i) {\n-        return toStaxType(getAttribute(i).getNodeType());\n-    }\n-\n-    public static String toStaxType(short jdom) {\n-        switch (jdom) {\n-        default:\n-            return null;\n-        }\n+        return \"CDATA\";\n     }\n \n     public String getAttributeValue(int i) {", "filename": "core/servicemix-core/src/main/java/org/apache/servicemix/jbi/jaxp/W3CDOMStreamReader.java"}], "repo": "servicemix3"}, {"commit": "https://github.com/apache/servicemix3/commit/fc9bdd87cf3e14051b014931b565da72383d64dc", "parent": "https://github.com/apache/servicemix3/commit/6554931c1e715d0bdc2ed8eb7281d269df07a31d", "message": "Prevent NPE from occurring during Stax parsing\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/servicemix/trunk@498517 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "servicemix3_11", "file": [{"additions": 3, "raw_url": "https://github.com/apache/servicemix3/raw/fc9bdd87cf3e14051b014931b565da72383d64dc/core/servicemix-core/src/main/java/org/apache/servicemix/jbi/jaxp/StaxSource.java", "blob_url": "https://github.com/apache/servicemix3/blob/fc9bdd87cf3e14051b014931b565da72383d64dc/core/servicemix-core/src/main/java/org/apache/servicemix/jbi/jaxp/StaxSource.java", "sha": "48b1a02e582ca94795f517330560a157aa99cfee", "changes": 4, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/servicemix3/contents/core/servicemix-core/src/main/java/org/apache/servicemix/jbi/jaxp/StaxSource.java?ref=fc9bdd87cf3e14051b014931b565da72383d64dc", "patch": "@@ -133,6 +133,7 @@ protected void parse() throws SAXException {\n                     String localName = streamReader.getLocalName();\n                     String prefix = streamReader.getPrefix();\n                     String qname = prefix != null && prefix.length() > 0 ? prefix + \":\" + localName : localName;\n+\n                     contentHandler.startElement(uri == null ? \"\" : uri, localName, qname, getAttributes());\n                     break;\n                 }\n@@ -202,7 +203,8 @@ protected Attributes getAttributes() {\n             if (value == null) {\n                 value = \"\";\n             }\n-            attrs.addAttribute(uri, localName, qName, type, value);\n+\n+            attrs.addAttribute(uri == null ? \"\" : uri, localName, qName, type, value);\n         }\n         return attrs;\n     }", "filename": "core/servicemix-core/src/main/java/org/apache/servicemix/jbi/jaxp/StaxSource.java"}], "repo": "servicemix3"}, {"commit": "https://github.com/apache/servicemix3/commit/bf00c5aa284263ceabfb68bfb3e72ebc5073afa1", "parent": "https://github.com/apache/servicemix3/commit/f6f7fbe9b6905afb98be513c98a85db18f307858", "message": "Fix possible NPE reported by atif kureishy\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/servicemix/trunk@472794 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "servicemix3_12", "file": [{"additions": 1, "raw_url": "https://github.com/apache/servicemix3/raw/bf00c5aa284263ceabfb68bfb3e72ebc5073afa1/common/servicemix-common/src/main/java/org/apache/servicemix/common/AsyncBaseLifeCycle.java", "blob_url": "https://github.com/apache/servicemix3/blob/bf00c5aa284263ceabfb68bfb3e72ebc5073afa1/common/servicemix-common/src/main/java/org/apache/servicemix/common/AsyncBaseLifeCycle.java", "sha": "26e4a28e321597061031d8a6a9586a6ac5f6897f", "changes": 2, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/servicemix3/contents/common/servicemix-common/src/main/java/org/apache/servicemix/common/AsyncBaseLifeCycle.java?ref=bf00c5aa284263ceabfb68bfb3e72ebc5073afa1", "patch": "@@ -471,7 +471,7 @@ protected void processExchange(MessageExchange exchange) throws Exception {\n     private void doProcess(Endpoint ep, ExchangeProcessor processor, MessageExchange exchange) throws Exception {\n         ClassLoader oldCl = Thread.currentThread().getContextClassLoader();\n         try {\n-            if (ep.getServiceUnit().getConfigurationClassLoader() != null) {\n+            if (ep != null && ep.getServiceUnit().getConfigurationClassLoader() != null) {\n                 ClassLoader classLoader = ep.getServiceUnit().getConfigurationClassLoader();\n                 Thread.currentThread().setContextClassLoader(classLoader);\n             }", "filename": "common/servicemix-common/src/main/java/org/apache/servicemix/common/AsyncBaseLifeCycle.java"}], "repo": "servicemix3"}, {"commit": "https://github.com/apache/servicemix3/commit/59c08f313937e0dfb9d62283bdd52356de85c5be", "parent": "https://github.com/apache/servicemix3/commit/0bc483d51817b704edf4ba3fccc365fe946ae18a", "message": "Fix possible NPE on DotViewFlowListener\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/servicemix/trunk@470364 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "servicemix3_13", "file": [{"additions": 3, "raw_url": "https://github.com/apache/servicemix3/raw/59c08f313937e0dfb9d62283bdd52356de85c5be/servicemix-core/src/main/java/org/apache/servicemix/jbi/view/DotViewFlowListener.java", "blob_url": "https://github.com/apache/servicemix3/blob/59c08f313937e0dfb9d62283bdd52356de85c5be/servicemix-core/src/main/java/org/apache/servicemix/jbi/view/DotViewFlowListener.java", "sha": "333cd2194c511efceb452c0dd81406bd138cffe0", "changes": 6, "status": "modified", "deletions": 3, "contents_url": "https://api.github.com/repos/apache/servicemix3/contents/servicemix-core/src/main/java/org/apache/servicemix/jbi/view/DotViewFlowListener.java?ref=59c08f313937e0dfb9d62283bdd52356de85c5be", "patch": "@@ -36,6 +36,7 @@\n import org.apache.servicemix.jbi.framework.ComponentMBeanImpl;\n import org.apache.servicemix.jbi.framework.Registry;\n import org.apache.servicemix.jbi.messaging.MessageExchangeImpl;\n+import org.apache.servicemix.jbi.servicedesc.AbstractServiceEndpoint;\n import org.apache.servicemix.jbi.servicedesc.EndpointSupport;\n \n import edu.emory.mathcs.backport.java.util.concurrent.ConcurrentHashMap;\n@@ -139,8 +140,7 @@ protected void generateFile(PrintWriter writer) throws Exception {\n     \n     public void exchangeSent(ExchangeEvent event) {\n         MessageExchange me = event.getExchange();\n-        if (me.getEndpoint() != null &&\n-            me instanceof MessageExchangeImpl) {\n+        if (me.getEndpoint() instanceof AbstractServiceEndpoint && me instanceof MessageExchangeImpl) {\n             MessageExchangeImpl mei = (MessageExchangeImpl) me;\n             String source = (String) me.getProperty(JbiConstants.SENDER_ENDPOINT);\n             if (source == null) {\n@@ -156,7 +156,7 @@ public void exchangeSent(ExchangeEvent event) {\n                 }\n             }\n             usedComponents.add(mei.getSourceId().getName());\n-            usedComponents.add(mei.getDestinationId().getName());\n+            usedComponents.add(((AbstractServiceEndpoint) mei.getEndpoint()).getComponentNameSpace().getName());\n             String dest = EndpointSupport.getUniqueKey(mei.getEndpoint());\n             Map componentFlow = createSource(source);\n             if (componentFlow.put(dest, Boolean.TRUE) == null) {", "filename": "servicemix-core/src/main/java/org/apache/servicemix/jbi/view/DotViewFlowListener.java"}], "repo": "servicemix3"}, {"commit": "https://github.com/apache/servicemix3/commit/1a09eeb7d16a7bfbd60905cc604f1853047e8b41", "parent": "https://github.com/apache/servicemix3/commit/9511003cde1d2e18a668b56506f0df30986d07d4", "message": "SM-603: NPE in StandardConsumerProcessor\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/servicemix/trunk@451164 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "servicemix3_14", "file": [{"additions": 4, "raw_url": "https://github.com/apache/servicemix3/raw/1a09eeb7d16a7bfbd60905cc604f1853047e8b41/servicemix-jms/src/main/java/org/apache/servicemix/jms/AbstractJmsProcessor.java", "blob_url": "https://github.com/apache/servicemix3/blob/1a09eeb7d16a7bfbd60905cc604f1853047e8b41/servicemix-jms/src/main/java/org/apache/servicemix/jms/AbstractJmsProcessor.java", "sha": "26a111fb0680e22521cf761fc5b4c104877a9cfc", "changes": 16, "status": "modified", "deletions": 12, "contents_url": "https://api.github.com/repos/apache/servicemix3/contents/servicemix-jms/src/main/java/org/apache/servicemix/jms/AbstractJmsProcessor.java?ref=1a09eeb7d16a7bfbd60905cc604f1853047e8b41", "patch": "@@ -67,11 +67,10 @@ public AbstractJmsProcessor(JmsEndpoint endpoint) throws Exception {\n     }\n \n     public void start() throws Exception {\n-        InitialContext ctx = null;\n-        ConnectionFactory connectionFactory = null;\n         try {\n-            // First check configured connectionFactory on the endpoint\n-            connectionFactory = getConnectionFactory();\n+            InitialContext ctx = getInitialContext();\n+            ConnectionFactory connectionFactory = null;\n+            connectionFactory = getConnectionFactory(ctx);\n             connection = connectionFactory.createConnection();\n             connection.start();\n             doStart(ctx);\n@@ -82,20 +81,14 @@ public void start() throws Exception {\n                 // TODO: log\n             }\n             throw e;\n-        } finally {\n-            if (ctx != null) {\n-                ctx.close();\n-            }\n         }\n     }\n     \n-    protected ConnectionFactory getConnectionFactory() throws NamingException {\n-        InitialContext ctx = null;\n+    protected ConnectionFactory getConnectionFactory(InitialContext ctx) throws NamingException {\n         // First check configured connectionFactory on the endpoint\n         ConnectionFactory connectionFactory = endpoint.getConnectionFactory();\n         // Then, check for jndi connection factory name on the endpoint\n         if (connectionFactory == null && endpoint.getJndiConnectionFactoryName() != null) {\n-            ctx = getInitialContext();\n             connectionFactory = (ConnectionFactory) ctx.lookup(endpoint.getJndiConnectionFactoryName());\n         }\n         // Check for a configured connectionFactory on the configuration\n@@ -104,7 +97,6 @@ protected ConnectionFactory getConnectionFactory() throws NamingException {\n         }\n         // Check for jndi connection factory name on the configuration\n         if (connectionFactory == null && endpoint.getConfiguration().getJndiConnectionFactoryName() != null) {\n-            ctx = getInitialContext();\n             connectionFactory = (ConnectionFactory) ctx.lookup(endpoint.getConfiguration().getJndiConnectionFactoryName());\n         }\n         return connectionFactory;", "filename": "servicemix-jms/src/main/java/org/apache/servicemix/jms/AbstractJmsProcessor.java"}, {"additions": 2, "raw_url": "https://github.com/apache/servicemix3/raw/1a09eeb7d16a7bfbd60905cc604f1853047e8b41/servicemix-jms/src/main/java/org/apache/servicemix/jms/jca/JcaProviderProcessor.java", "blob_url": "https://github.com/apache/servicemix3/blob/1a09eeb7d16a7bfbd60905cc604f1853047e8b41/servicemix-jms/src/main/java/org/apache/servicemix/jms/jca/JcaProviderProcessor.java", "sha": "502764e1386afd1436cfc9363578e273cd99688c", "changes": 4, "status": "modified", "deletions": 2, "contents_url": "https://api.github.com/repos/apache/servicemix3/contents/servicemix-jms/src/main/java/org/apache/servicemix/jms/jca/JcaProviderProcessor.java?ref=1a09eeb7d16a7bfbd60905cc604f1853047e8b41", "patch": "@@ -49,12 +49,12 @@ public JcaProviderProcessor(JmsEndpoint endpoint) throws Exception {\n     }\r\n \r\n     public void start() throws Exception {\r\n-        connectionFactory = getConnectionFactory();\r\n+        InitialContext ctx = getInitialContext();\r\n+        connectionFactory = getConnectionFactory(ctx);\r\n         channel = endpoint.getServiceUnit().getComponent().getComponentContext().getDeliveryChannel();\r\n         destination = endpoint.getDestination();\r\n         if (destination == null) {\r\n             if (endpoint.getJndiDestinationName() != null) {\r\n-                InitialContext ctx = getInitialContext();\r\n                 destination = (Destination) ctx.lookup(endpoint.getJndiDestinationName());\r\n             } else if (endpoint.getJmsProviderDestinationName() == null) {\r\n                 throw new IllegalStateException(\"No destination provided\");\r", "filename": "servicemix-jms/src/main/java/org/apache/servicemix/jms/jca/JcaProviderProcessor.java"}, {"additions": 82, "raw_url": "https://github.com/apache/servicemix3/raw/1a09eeb7d16a7bfbd60905cc604f1853047e8b41/servicemix-jms/src/test/java/org/apache/servicemix/jms/JmsStandardTest.java", "blob_url": "https://github.com/apache/servicemix3/blob/1a09eeb7d16a7bfbd60905cc604f1853047e8b41/servicemix-jms/src/test/java/org/apache/servicemix/jms/JmsStandardTest.java", "sha": "32118638758b6b348c21e4b4fefd995ffc504849", "changes": 82, "status": "added", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/servicemix3/contents/servicemix-jms/src/test/java/org/apache/servicemix/jms/JmsStandardTest.java?ref=1a09eeb7d16a7bfbd60905cc604f1853047e8b41", "patch": "@@ -0,0 +1,82 @@\n+/*\r\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\r\n+ * contributor license agreements.  See the NOTICE file distributed with\r\n+ * this work for additional information regarding copyright ownership.\r\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\r\n+ * (the \"License\"); you may not use this file except in compliance with\r\n+ * the License.  You may obtain a copy of the License at\r\n+ *\r\n+ *      http://www.apache.org/licenses/LICENSE-2.0\r\n+ *\r\n+ * Unless required by applicable law or agreed to in writing, software\r\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n+ * See the License for the specific language governing permissions and\r\n+ * limitations under the License.\r\n+ */\r\n+package org.apache.servicemix.jms;\r\n+\r\n+import javax.naming.Context;\r\n+import javax.naming.InitialContext;\r\n+import javax.xml.namespace.QName;\r\n+\r\n+import org.apache.activemq.ActiveMQConnectionFactory;\r\n+import org.apache.activemq.broker.BrokerService;\r\n+import org.apache.activemq.jndi.ActiveMQInitialContextFactory;\r\n+import org.apache.activemq.xbean.BrokerFactoryBean;\r\n+import org.apache.servicemix.jbi.container.JBIContainer;\r\n+import org.springframework.core.io.ClassPathResource;\r\n+\r\n+import junit.framework.TestCase;\r\n+\r\n+public class JmsStandardTest extends TestCase {\r\n+\r\n+    protected JBIContainer container;\r\n+    protected BrokerService broker;\r\n+    protected ActiveMQConnectionFactory connectionFactory;\r\n+    \r\n+    protected void setUp() throws Exception {\r\n+        System.setProperty(Context.INITIAL_CONTEXT_FACTORY, ActiveMQInitialContextFactory.class.getName());\r\n+        System.setProperty(Context.PROVIDER_URL, \"tcp://localhost:61216\");\r\n+\r\n+      \r\n+        BrokerFactoryBean bfb = new BrokerFactoryBean(new ClassPathResource(\"org/apache/servicemix/jms/activemq.xml\"));\r\n+        bfb.afterPropertiesSet();\r\n+        broker = bfb.getBroker();\r\n+        broker.start();\r\n+        \r\n+        container = new JBIContainer();\r\n+        container.setUseMBeanServer(true);\r\n+        container.setCreateMBeanServer(true);\r\n+        container.setMonitorInstallationDirectory(false);\r\n+        container.setNamingContext(new InitialContext());\r\n+        container.init();\r\n+        \r\n+        connectionFactory = new ActiveMQConnectionFactory(\"tcp://localhost:61216\");\r\n+    }\r\n+    \r\n+    protected void tearDown() throws Exception {\r\n+        if (container != null) {\r\n+            container.shutDown();\r\n+        }\r\n+        if (broker != null) {\r\n+            broker.stop();\r\n+        }\r\n+    }\r\n+\r\n+    public void test() throws Exception {\r\n+        JmsSpringComponent jms = new JmsSpringComponent();\r\n+        JmsEndpoint ep = new JmsEndpoint();\r\n+        ep.setInitialContextFactory(ActiveMQInitialContextFactory.class.getName());\r\n+        ep.setJndiProviderURL(\"tcp://localhost:61216\");\r\n+        ep.setJndiConnectionFactoryName(\"ConnectionFactory\");\r\n+        ep.setJndiDestinationName(\"MyQueue\");\r\n+        ep.setProcessorName(\"standard\");\r\n+        ep.setRoleAsString(\"provider\");\r\n+        ep.setService(new QName(\"service\"));\r\n+        ep.setEndpoint(\"endpoint\");\r\n+        jms.setEndpoints(new JmsEndpoint[] { ep });\r\n+        container.activateComponent(jms, \"jms\");\r\n+        container.start();\r\n+    }\r\n+}\r", "filename": "servicemix-jms/src/test/java/org/apache/servicemix/jms/JmsStandardTest.java"}, {"additions": 2, "raw_url": "https://github.com/apache/servicemix3/raw/1a09eeb7d16a7bfbd60905cc604f1853047e8b41/servicemix-jms/src/test/resources/jndi.properties", "blob_url": "https://github.com/apache/servicemix3/blob/1a09eeb7d16a7bfbd60905cc604f1853047e8b41/servicemix-jms/src/test/resources/jndi.properties", "sha": "f3a5b7fe0bc76dcbdc50c30d52702d4988b65941", "changes": 2, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/servicemix3/contents/servicemix-jms/src/test/resources/jndi.properties?ref=1a09eeb7d16a7bfbd60905cc604f1853047e8b41", "patch": "@@ -23,4 +23,6 @@\n java.naming.factory.initial = org.apache.xbean.spring.jndi.SpringInitialContextFactory\r\n java.naming.provider.url = jndi.xml\r\n \r\n+queue.MyQueue = MyQueue\r\n+\r\n # END SNIPPET: jndi\r", "filename": "servicemix-jms/src/test/resources/jndi.properties"}], "repo": "servicemix3"}, {"commit": "https://github.com/apache/servicemix3/commit/6bdedfa2a7d5b119cdf03d079b8c787dfec42f6f", "parent": "https://github.com/apache/servicemix3/commit/980235b260ee51d3232047ee63e36140329ca1c0", "message": "Fix a possible NPE when toString is called\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/servicemix/trunk@439205 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "servicemix3_15", "file": [{"additions": 7, "raw_url": "https://github.com/apache/servicemix3/raw/6bdedfa2a7d5b119cdf03d079b8c787dfec42f6f/servicemix-core/src/main/java/org/apache/servicemix/jbi/security/acl/impl/AuthorizationEntry.java", "blob_url": "https://github.com/apache/servicemix3/blob/6bdedfa2a7d5b119cdf03d079b8c787dfec42f6f/servicemix-core/src/main/java/org/apache/servicemix/jbi/security/acl/impl/AuthorizationEntry.java", "sha": "f4edca3f52370da8220507a7f342d0d6fa506bbc", "changes": 12, "status": "modified", "deletions": 5, "contents_url": "https://api.github.com/repos/apache/servicemix3/contents/servicemix-core/src/main/java/org/apache/servicemix/jbi/security/acl/impl/AuthorizationEntry.java?ref=6bdedfa2a7d5b119cdf03d079b8c787dfec42f6f", "patch": "@@ -140,11 +140,13 @@ public void setRoles(String roles) {\n     \n     public String getRoles() {\n         StringBuffer sb = new StringBuffer();\n-        for (Iterator iter = this.acls.iterator(); iter.hasNext();) {\n-            GroupPrincipal p = (GroupPrincipal) iter.next();\n-            sb.append(p);\n-            if (iter.hasNext()) {\n-                sb.append(\",\");\n+        if (this.acls != null) {\n+            for (Iterator iter = this.acls.iterator(); iter.hasNext();) {\n+                GroupPrincipal p = (GroupPrincipal) iter.next();\n+                sb.append(p);\n+                if (iter.hasNext()) {\n+                    sb.append(\",\");\n+                }\n             }\n         }\n         return sb.toString();", "filename": "servicemix-core/src/main/java/org/apache/servicemix/jbi/security/acl/impl/AuthorizationEntry.java"}], "repo": "servicemix3"}, {"commit": "https://github.com/apache/servicemix3/commit/5ece0f4cf71d2762f1a62d90e49af84305fe3471", "parent": "https://github.com/apache/servicemix3/commit/aabfe637f216a76e310860a606b35b9b8f82fa66", "message": "Fix possible NPE, thx to Robert H. Pollack\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/servicemix/trunk@434178 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "servicemix3_16", "file": [{"additions": 6, "raw_url": "https://github.com/apache/servicemix3/raw/5ece0f4cf71d2762f1a62d90e49af84305fe3471/servicemix-core/src/main/java/org/apache/servicemix/jbi/messaging/MessageExchangeImpl.java", "blob_url": "https://github.com/apache/servicemix3/blob/5ece0f4cf71d2762f1a62d90e49af84305fe3471/servicemix-core/src/main/java/org/apache/servicemix/jbi/messaging/MessageExchangeImpl.java", "sha": "3fcb7a3e371b15ba0f21864981cfdd10620e72b4", "changes": 10, "status": "modified", "deletions": 4, "contents_url": "https://api.github.com/repos/apache/servicemix3/contents/servicemix-core/src/main/java/org/apache/servicemix/jbi/messaging/MessageExchangeImpl.java?ref=5ece0f4cf71d2762f1a62d90e49af84305fe3471", "patch": "@@ -719,10 +719,10 @@ private void display(String msg, StringBuffer sb, SourceTransformer st) {\n         if (getMessage(msg) != null) {\n             sb.append(\"  \").append(msg).append(\": \");\n             try {\n-                if (preserveContent) {\n-                    sb.append(getMessage(msg).getContent().getClass());\n-                } else {\n-                    if (getMessage(msg).getContent() != null) {\n+                if (getMessage(msg).getContent() != null) {\n+                    if (preserveContent) {\n+                        sb.append(getMessage(msg).getContent().getClass());\n+                    } else {\n                         Node node = st.toDOMNode(getMessage(msg).getContent());\n                         getMessage(msg).setContent(new DOMSource(node));\n                         String str = st.toString(node);\n@@ -732,6 +732,8 @@ private void display(String msg, StringBuffer sb, SourceTransformer st) {\n                             sb.append(str);\n                         }\n                     }\n+                } else {\n+                    sb.append(\"null\");\n                 }\n             } catch (Exception e) {\n                 sb.append(\"Unable to display: \").append(e);", "filename": "servicemix-core/src/main/java/org/apache/servicemix/jbi/messaging/MessageExchangeImpl.java"}], "repo": "servicemix3"}, {"commit": "https://github.com/apache/servicemix3/commit/eba89b965bdb7c59e215e5213b5de5f5b4dfa111", "parent": "https://github.com/apache/servicemix3/commit/c3d60989ae3e99fdcead239d59fc655182cb0576", "message": "SM-461: Fix possible NPE in ExtendedXMLStreamReader\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/servicemix/trunk@415795 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "servicemix3_17", "file": [{"additions": 1, "raw_url": "https://github.com/apache/servicemix3/raw/eba89b965bdb7c59e215e5213b5de5f5b4dfa111/servicemix-core/src/main/java/org/apache/servicemix/jbi/jaxp/ExtendedXMLStreamReader.java", "blob_url": "https://github.com/apache/servicemix3/blob/eba89b965bdb7c59e215e5213b5de5f5b4dfa111/servicemix-core/src/main/java/org/apache/servicemix/jbi/jaxp/ExtendedXMLStreamReader.java", "sha": "f9da2e77aea1beea6e0a92b7f9a7603719a81a0d", "changes": 2, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/servicemix3/contents/servicemix-core/src/main/java/org/apache/servicemix/jbi/jaxp/ExtendedXMLStreamReader.java?ref=eba89b965bdb7c59e215e5213b5de5f5b4dfa111", "patch": "@@ -101,7 +101,7 @@ public Iterator getPrefixes() {\n \n \t\tpublic String getNamespaceURI(String prefix) {\n \t\t\tString uri = (String) namespaces.get(prefix);\n-\t\t\tif (uri == null) {\n+\t\t\tif (uri == null && parent != null) {\n \t\t\t\turi = parent.getNamespaceURI(prefix);\n \t\t\t}\n \t\t\treturn uri;", "filename": "servicemix-core/src/main/java/org/apache/servicemix/jbi/jaxp/ExtendedXMLStreamReader.java"}], "repo": "servicemix3"}, {"commit": "https://github.com/apache/servicemix3/commit/b281bf76fc1e595037d5534175201393905c7a76", "parent": "https://github.com/apache/servicemix3/commit/5ad3502b950ad1d5b9343924cc18e6fce8ed22d9", "message": "Fix a possible NPE in StaxSource\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/servicemix/trunk@407751 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "servicemix3_18", "file": [{"additions": 6, "raw_url": "https://github.com/apache/servicemix3/raw/b281bf76fc1e595037d5534175201393905c7a76/servicemix-core/src/main/java/org/apache/servicemix/jbi/jaxp/StaxSource.java", "blob_url": "https://github.com/apache/servicemix3/blob/b281bf76fc1e595037d5534175201393905c7a76/servicemix-core/src/main/java/org/apache/servicemix/jbi/jaxp/StaxSource.java", "sha": "58440155a7d1f8486f066772b8373c6be24e7e14", "changes": 6, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/servicemix3/contents/servicemix-core/src/main/java/org/apache/servicemix/jbi/jaxp/StaxSource.java?ref=b281bf76fc1e595037d5534175201393905c7a76", "patch": "@@ -135,6 +135,9 @@ protected Attributes getAttributes() {\n         for (int i = 0; i < streamReader.getNamespaceCount(); i++) {\n             String prefix = streamReader.getNamespacePrefix(i);\n             String uri = streamReader.getNamespaceURI(i);\n+            if (uri == null) {\n+                uri = \"\";\n+            }\n             // Default namespace\n             if (prefix == null || prefix.length() == 0) {\n                 attrs.addAttribute(null, \n@@ -162,6 +165,9 @@ protected Attributes getAttributes() {\n             }\n             String type = streamReader.getAttributeType(i);\n             String value = streamReader.getAttributeValue(i);\n+            if (value == null) {\n+                value = \"\";\n+            }\n             attrs.addAttribute(uri, localName, qName, type, value);\n         }\n         return attrs;", "filename": "servicemix-core/src/main/java/org/apache/servicemix/jbi/jaxp/StaxSource.java"}], "repo": "servicemix3"}, {"commit": "https://github.com/apache/servicemix3/commit/9a65a187222f5d3ccd13ba0fc449182aaf79a1fc", "parent": "https://github.com/apache/servicemix3/commit/bd2abd1b2369cbbc3cf256e2cc4d0316e056c761", "message": "Fix possible NPE\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/servicemix/trunk@406620 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "servicemix3_19", "file": [{"additions": 6, "raw_url": "https://github.com/apache/servicemix3/raw/9a65a187222f5d3ccd13ba0fc449182aaf79a1fc/servicemix-core/src/main/java/org/apache/servicemix/jbi/jaxp/StaxSource.java", "blob_url": "https://github.com/apache/servicemix3/blob/9a65a187222f5d3ccd13ba0fc449182aaf79a1fc/servicemix-core/src/main/java/org/apache/servicemix/jbi/jaxp/StaxSource.java", "sha": "07ce13168d41ad7385860a14ba6383b9d211f97c", "changes": 8, "status": "modified", "deletions": 2, "contents_url": "https://api.github.com/repos/apache/servicemix3/contents/servicemix-core/src/main/java/org/apache/servicemix/jbi/jaxp/StaxSource.java?ref=9a65a187222f5d3ccd13ba0fc449182aaf79a1fc", "patch": "@@ -109,8 +109,12 @@ protected void parse() throws SAXException {\n                 streamReader.next();\n             }\n         } catch (XMLStreamException e) {\n-            throw new SAXParseException(e.getMessage(), null, null, e.getLocation().getLineNumber(), e.getLocation()\n-                    .getColumnNumber(), e);\n+            if (e.getLocation() != null) {\n+                throw new SAXParseException(e.getMessage(), null, null, e.getLocation().getLineNumber(), e.getLocation()\n+                        .getColumnNumber(), e);\n+            } else {\n+                throw new SAXParseException(e.getMessage(), null, null, -1, -1, e);\n+            }\n         }\n     }\n ", "filename": "servicemix-core/src/main/java/org/apache/servicemix/jbi/jaxp/StaxSource.java"}], "repo": "servicemix3"}, {"commit": "https://github.com/apache/servicemix3/commit/2abc9cf4ca2d3995255579c9abfa7b1aaedbb912", "parent": "https://github.com/apache/servicemix3/commit/fc58842345cf3a3f37a2e5866cd3aaf7afe4535b", "message": "Fix problems on the wsdl flattener (NPE + namespace problems)\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/servicemix/trunk@392302 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "servicemix3_20", "file": [{"additions": 13, "raw_url": "https://github.com/apache/servicemix3/raw/2abc9cf4ca2d3995255579c9abfa7b1aaedbb912/servicemix-common/src/main/java/org/apache/servicemix/common/tools/wsdl/WSDLFlattener.java", "blob_url": "https://github.com/apache/servicemix3/blob/2abc9cf4ca2d3995255579c9abfa7b1aaedbb912/servicemix-common/src/main/java/org/apache/servicemix/common/tools/wsdl/WSDLFlattener.java", "sha": "12d09f69d13a558c011c8ebf12c886b0491357ad", "changes": 24, "status": "modified", "deletions": 11, "contents_url": "https://api.github.com/repos/apache/servicemix3/contents/servicemix-common/src/main/java/org/apache/servicemix/common/tools/wsdl/WSDLFlattener.java?ref=2abc9cf4ca2d3995255579c9abfa7b1aaedbb912", "patch": "@@ -167,12 +167,14 @@ private Definition flattenDefinition(QName name) throws Exception {\n             for (Iterator itPart = msg.getParts().values().iterator(); itPart.hasNext();) {\r\n                 Part part = (Part) itPart.next();\r\n                 QName elemName = part.getElementName();\r\n-                namespaces.add(elemName.getNamespaceURI());\r\n-                Schema schema = schemas.getSchema(elemName.getNamespaceURI());\r\n-                if (schema.getImports() != null) {\r\n-                    for (Iterator iter = schema.getImports().iterator(); iter.hasNext();) {\r\n-                        String ns = (String) iter.next();\r\n-                        namespaces.add(ns);\r\n+                if (elemName != null) {\r\n+                    namespaces.add(elemName.getNamespaceURI());\r\n+                    Schema schema = schemas.getSchema(elemName.getNamespaceURI());\r\n+                    if (schema.getImports() != null) {\r\n+                        for (Iterator iter = schema.getImports().iterator(); iter.hasNext();) {\r\n+                            String ns = (String) iter.next();\r\n+                            namespaces.add(ns);\r\n+                        }\r\n                     }\r\n                 }\r\n             }\r\n@@ -221,18 +223,18 @@ private void parseSchemas(Definition def) throws Exception {\n     }\r\n \r\n     private void addNamespaces(Definition flat, Definition def) {\r\n-        for (Iterator itNs = def.getNamespaces().keySet().iterator(); itNs.hasNext();) {\r\n-            String key = (String) itNs.next();\r\n-            String val = def.getNamespace(key);\r\n-            flat.addNamespace(key, val);\r\n-        }\r\n         for (Iterator itImport = def.getImports().values().iterator(); itImport.hasNext();) {\r\n             List defImports = (List) itImport.next();\r\n             for (Iterator iter = defImports.iterator(); iter.hasNext();) {\r\n                 Import defImport = (Import) iter.next();\r\n                 addNamespaces(flat, defImport.getDefinition());\r\n             }\r\n         }\r\n+        for (Iterator itNs = def.getNamespaces().keySet().iterator(); itNs.hasNext();) {\r\n+            String key = (String) itNs.next();\r\n+            String val = def.getNamespace(key);\r\n+            flat.addNamespace(key, val);\r\n+        }\r\n     }\r\n     \r\n     private Message copyMessage(Message defMessage, Definition flat) {\r", "filename": "servicemix-common/src/main/java/org/apache/servicemix/common/tools/wsdl/WSDLFlattener.java"}], "repo": "servicemix3"}, {"commit": "https://github.com/apache/servicemix3/commit/d91c2017354bddccadb609b8939f814aa526b656", "parent": "https://github.com/apache/servicemix3/commit/9fb9bf34cac45dbeeeff117f78bb116dece80e35", "message": "Fix possible NPE\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/servicemix/trunk@389812 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "servicemix3_21", "file": [{"additions": 1, "raw_url": "https://github.com/apache/servicemix3/raw/d91c2017354bddccadb609b8939f814aa526b656/servicemix-gbean/src/main/java/org/apache/servicemix/gbean/ServiceMixConfigBuilder.java", "blob_url": "https://github.com/apache/servicemix3/blob/d91c2017354bddccadb609b8939f814aa526b656/servicemix-gbean/src/main/java/org/apache/servicemix/gbean/ServiceMixConfigBuilder.java", "sha": "dcfe80bc3d4ef8c54b848c2707d76ffdbfab29a9", "changes": 2, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/servicemix3/contents/servicemix-gbean/src/main/java/org/apache/servicemix/gbean/ServiceMixConfigBuilder.java?ref=d91c2017354bddccadb609b8939f814aa526b656", "patch": "@@ -156,7 +156,7 @@ public ConfigurationData buildConfiguration(Object plan, JarFile module, File ou\n         try {\n             URI configId = getConfigurationID(plan, module);\n             List parentId = new ArrayList();\n-            if (parentId != null) {\n+            if (defaultParentId != null) {\n                 for (Iterator iter = defaultParentId.iterator(); iter.hasNext();) {\n                     String element = (String) iter.next();\n                     parentId.add(new URI(element));", "filename": "servicemix-gbean/src/main/java/org/apache/servicemix/gbean/ServiceMixConfigBuilder.java"}], "repo": "servicemix3"}, {"commit": "https://github.com/apache/servicemix3/commit/4f04d7d9183b1731d55d294f69331db4fc31b7b7", "parent": "https://github.com/apache/servicemix3/commit/17ba44c563c47f1427fdd259dec8f3dfb58ee284", "message": "Forgot add return statements to avoid NPE\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/servicemix/trunk@387865 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "servicemix3_22", "file": [{"additions": 2, "raw_url": "https://github.com/apache/servicemix3/raw/4f04d7d9183b1731d55d294f69331db4fc31b7b7/servicemix-core/src/main/java/org/apache/servicemix/jbi/framework/EndpointRegistry.java", "blob_url": "https://github.com/apache/servicemix3/blob/4f04d7d9183b1731d55d294f69331db4fc31b7b7/servicemix-core/src/main/java/org/apache/servicemix/jbi/framework/EndpointRegistry.java", "sha": "5e5d9ca1861578c595a27136d4797c2ba3592d97", "changes": 2, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/servicemix3/contents/servicemix-core/src/main/java/org/apache/servicemix/jbi/framework/EndpointRegistry.java?ref=4f04d7d9183b1731d55d294f69331db4fc31b7b7", "patch": "@@ -243,9 +243,11 @@ protected void retrieveInterfacesFromDescription(InternalEndpoint serviceEndpoin\n             }\n             if (port.getBinding() == null) {\n                 logger.info(\"Endpoint \" + serviceEndpoint + \" has a service description, but no binding found\");\n+                return;\n             }\n             if (port.getBinding().getPortType() == null) {\n                 logger.info(\"Endpoint \" + serviceEndpoint + \" has a service description, but no port type found\");\n+                return;\n             }\n             QName interfaceName = port.getBinding().getPortType().getQName();\n             if (logger.isDebugEnabled()) {", "filename": "servicemix-core/src/main/java/org/apache/servicemix/jbi/framework/EndpointRegistry.java"}], "repo": "servicemix3"}, {"commit": "https://github.com/apache/servicemix3/commit/4d6dddbc07ce6b42fe81da89786f95cdd6a5ca27", "parent": "https://github.com/apache/servicemix3/commit/f4501e28e704b99c0fdaa078ff829e101da3d5ef", "message": "Fix NPE in DeliveryChannelImpl.traceMessageExchange\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/servicemix/trunk@379808 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "servicemix3_23", "file": [{"additions": 18, "raw_url": "https://github.com/apache/servicemix3/raw/4d6dddbc07ce6b42fe81da89786f95cdd6a5ca27/servicemix-core/src/main/java/org/apache/servicemix/jbi/messaging/DeliveryChannelImpl.java", "blob_url": "https://github.com/apache/servicemix3/blob/4d6dddbc07ce6b42fe81da89786f95cdd6a5ca27/servicemix-core/src/main/java/org/apache/servicemix/jbi/messaging/DeliveryChannelImpl.java", "sha": "c2939b5cef9f3c2cbea1ff2d683a16d8815d963d", "changes": 32, "status": "modified", "deletions": 14, "contents_url": "https://api.github.com/repos/apache/servicemix3/contents/servicemix-core/src/main/java/org/apache/servicemix/jbi/messaging/DeliveryChannelImpl.java?ref=4d6dddbc07ce6b42fe81da89786f95cdd6a5ca27", "patch": "@@ -280,26 +280,30 @@ private void traceMessageExchange(String header, MessageExchange me) {\n             sb.append(\"  id: \").append(me.getExchangeId()).append('\\n');\n             sb.append(\"  status: \").append(me.getStatus()).append('\\n');\n             if (me.getMessage(\"in\") != null) {\n-                Node node = new SourceTransformer().toDOMNode(me.getMessage(\"in\").getContent());\n-                me.getMessage(\"in\").setContent(new DOMSource(node));\n-                String str = DOMUtil.asXML(node);\n                 sb.append(\"  in: \");\n-                if (str.length() > 150) {\n-                    sb.append(str.substring(0, 150)).append(\"...\");\n-                } else {\n-                    sb.append(str);\n+                if (me.getMessage(\"in\").getContent() != null) {\n+                    Node node = new SourceTransformer().toDOMNode(me.getMessage(\"in\").getContent());\n+                    me.getMessage(\"in\").setContent(new DOMSource(node));\n+                    String str = DOMUtil.asXML(node);\n+                    if (str.length() > 150) {\n+                        sb.append(str.substring(0, 150)).append(\"...\");\n+                    } else {\n+                        sb.append(str);\n+                    }\n                 }\n                 sb.append('\\n');\n             }\n             if (me.getMessage(\"out\") != null) {\n-                Node node = new SourceTransformer().toDOMNode(me.getMessage(\"out\").getContent());\n-                me.getMessage(\"out\").setContent(new DOMSource(node));\n-                String str = DOMUtil.asXML(node);\n                 sb.append(\"  out: \");\n-                if (str.length() > 150) {\n-                    sb.append(str.substring(0, 150)).append(\"...\");\n-                } else {\n-                    sb.append(str);\n+                if (me.getMessage(\"out\").getContent() != null) {\n+                    Node node = new SourceTransformer().toDOMNode(me.getMessage(\"out\").getContent());\n+                    me.getMessage(\"out\").setContent(new DOMSource(node));\n+                    String str = DOMUtil.asXML(node);\n+                    if (str.length() > 150) {\n+                        sb.append(str.substring(0, 150)).append(\"...\");\n+                    } else {\n+                        sb.append(str);\n+                    }\n                 }\n                 sb.append('\\n');\n             }", "filename": "servicemix-core/src/main/java/org/apache/servicemix/jbi/messaging/DeliveryChannelImpl.java"}], "repo": "servicemix3"}, {"commit": "https://github.com/apache/servicemix3/commit/69e4fa5c1d59c32a75d7d1f502f4ec73277574a1", "parent": "https://github.com/apache/servicemix3/commit/6e62221dcab5abf3833b824f850a24a21d55aff6", "message": "Fix possible NPE\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/servicemix/trunk@374685 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "servicemix3_24", "file": [{"additions": 3, "raw_url": "https://github.com/apache/servicemix3/raw/69e4fa5c1d59c32a75d7d1f502f4ec73277574a1/servicemix-common/src/main/java/org/apache/servicemix/common/BaseComponent.java", "blob_url": "https://github.com/apache/servicemix3/blob/69e4fa5c1d59c32a75d7d1f502f4ec73277574a1/servicemix-common/src/main/java/org/apache/servicemix/common/BaseComponent.java", "sha": "2244f932b163eb4c6387ba1d3963548f056e7124", "changes": 3, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/servicemix3/contents/servicemix-common/src/main/java/org/apache/servicemix/common/BaseComponent.java?ref=69e4fa5c1d59c32a75d7d1f502f4ec73277574a1", "patch": "@@ -159,6 +159,9 @@ public ComponentContext getComponentContext() {\n     }\n     \n     public String getComponentName() {\n+        if (getComponentContext() == null) {\n+            return \"Component (\" + getClass().getName() + \") not yet initialized\";\n+        }\n         return getComponentContext().getComponentName();\n     }\n     ", "filename": "servicemix-common/src/main/java/org/apache/servicemix/common/BaseComponent.java"}], "repo": "servicemix3"}, {"commit": "https://github.com/apache/servicemix3/commit/4d1585589e0a4f2495ba4eec341347a0aa58dd8f", "parent": "https://github.com/apache/servicemix3/commit/f024a372a96a8cc6e9ce84e9cbc12d39cfacde47", "message": "SM-1344: NPE in servicemix-http ws-security when not configuring the keystore\n\ngit-svn-id: https://svn.apache.org/repos/asf/servicemix/smx3/trunk@654738 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "servicemix3_25", "file": [{"additions": 1, "raw_url": "https://github.com/apache/servicemix3/raw/4d1585589e0a4f2495ba4eec341347a0aa58dd8f/common/servicemix-soap/src/main/java/org/apache/servicemix/soap/handlers/security/WSSecurityHandler.java", "blob_url": "https://github.com/apache/servicemix3/blob/4d1585589e0a4f2495ba4eec341347a0aa58dd8f/common/servicemix-soap/src/main/java/org/apache/servicemix/soap/handlers/security/WSSecurityHandler.java", "sha": "383c6e15e049dea62ad0b6b631943487fd7cf402", "changes": 2, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/servicemix3/contents/common/servicemix-soap/src/main/java/org/apache/servicemix/soap/handlers/security/WSSecurityHandler.java?ref=4d1585589e0a4f2495ba4eec341347a0aa58dd8f", "patch": "@@ -572,7 +572,7 @@ protected void init(Context context) {\n         if (context.getProperty(Context.AUTHENTICATION_SERVICE) != null) {\n             setAuthenticationService((AuthenticationService) context.getProperty(Context.AUTHENTICATION_SERVICE));\n         }\n-        if (crypto == null && context.getProperty(Context.KEYSTORE_MANAGER) != null) {\n+        if (crypto == null && context.getProperty(Context.KEYSTORE_MANAGER) != null && keystore != null) {\n             KeystoreManager km = (KeystoreManager) context.getProperty(Context.KEYSTORE_MANAGER);\n             setCrypto(new KeystoreInstanceCrypto(km, keystore));\n         }", "filename": "common/servicemix-soap/src/main/java/org/apache/servicemix/soap/handlers/security/WSSecurityHandler.java"}], "repo": "servicemix3"}, {"commit": "https://github.com/apache/servicemix3/commit/c924afdbe0a5947c50732919c692d2d10792a071", "parent": "https://github.com/apache/servicemix3/commit/f0818732a9f96ed8752712ef617ee0cff5a96b88", "message": "SM-923: NPE in web console when viewing component with lightweight components deployed\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/servicemix/trunk@526105 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "servicemix3_26", "file": [{"additions": 1, "raw_url": "https://github.com/apache/servicemix3/raw/c924afdbe0a5947c50732919c692d2d10792a071/web/servicemix-web-console/src/main/java/org/apache/servicemix/web/model/Registry.java", "blob_url": "https://github.com/apache/servicemix3/blob/c924afdbe0a5947c50732919c692d2d10792a071/web/servicemix-web-console/src/main/java/org/apache/servicemix/web/model/Registry.java", "sha": "15812d112d56ddad2a574e5f2ee00abca1ee3cb9", "changes": 2, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/servicemix3/contents/web/servicemix-web-console/src/main/java/org/apache/servicemix/web/model/Registry.java?ref=c924afdbe0a5947c50732919c692d2d10792a071", "patch": "@@ -89,7 +89,7 @@ public Endpoint getEndpoint(ObjectName objectName) {\n     public List<Endpoint> getEndpoints(Component component) throws Exception {\r\n         List<Endpoint> endpoints = new ArrayList<Endpoint>();\r\n         for (Endpoint endpoint : getEndpoints()) {\r\n-            if (endpoint.getComponent().equals(component)) {\r\n+            if (component.equals(endpoint.getComponent())) {\r\n                 endpoints.add(endpoint);\r\n             }\r\n         }\r", "filename": "web/servicemix-web-console/src/main/java/org/apache/servicemix/web/model/Registry.java"}], "repo": "servicemix3"}, {"commit": "https://github.com/apache/servicemix3/commit/7280b59407c41953b8049fc291d56eecbbd1db35", "parent": "https://github.com/apache/servicemix3/commit/bfa2f3f09e21a474961878ab83ed3246abf0a351", "message": "SM-898: soap2 unit tests fail with NPE\nPatch provided by Gert Vanthienen, thx !\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/servicemix/trunk@522809 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "servicemix3_27", "file": [{"additions": 41, "raw_url": "https://github.com/apache/servicemix3/raw/7280b59407c41953b8049fc291d56eecbbd1db35/common/servicemix-soap2/src/test/resources/log4j-tests.properties", "blob_url": "https://github.com/apache/servicemix3/blob/7280b59407c41953b8049fc291d56eecbbd1db35/common/servicemix-soap2/src/test/resources/log4j-tests.properties", "sha": "16d3be78d5858de6d9730b3a0d6425aa37f38fb6", "changes": 41, "status": "added", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/servicemix3/contents/common/servicemix-soap2/src/test/resources/log4j-tests.properties?ref=7280b59407c41953b8049fc291d56eecbbd1db35", "patch": "@@ -0,0 +1,41 @@\n+# \n+# Licensed to the Apache Software Foundation (ASF) under one or more\n+# contributor license agreements.  See the NOTICE file distributed with\n+# this work for additional information regarding copyright ownership.\n+# The ASF licenses this file to You under the Apache License, Version 2.0\n+# (the \"License\"); you may not use this file except in compliance with\n+# the License.  You may obtain a copy of the License at\n+# \n+#   http://www.apache.org/licenses/LICENSE-2.0\n+# \n+# Unless required by applicable law or agreed to in writing, software\n+# distributed  under the  License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT  WARRANTIES OR CONDITIONS  OF ANY KIND, either  express  or\n+# implied.\n+#  \n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+#\n+#\n+\n+#\n+# The logging properties used during tests..\n+#\n+log4j.rootLogger=DEBUG, out\n+\n+log4j.logger.org.apache.activemq=INFO\n+log4j.logger.org.apache.activemq.spring=WARN\n+log4j.logger.org.apache.activemq.store.journal=INFO\n+log4j.logger.org.activeio.journal=INFO\n+\n+# CONSOLE appender not used by default\n+log4j.appender.stdout=org.apache.log4j.ConsoleAppender\n+log4j.appender.stdout.layout=org.apache.log4j.PatternLayout\n+log4j.appender.stdout.layout.ConversionPattern=%d [%-15.15t] %-5p %-30.30c{1} - %m%n\n+\n+# File appender\n+log4j.appender.out=org.apache.log4j.FileAppender\n+log4j.appender.out.layout=org.apache.log4j.PatternLayout\n+log4j.appender.out.layout.ConversionPattern=%d [%-15.15t] %-5p %-30.30c{1} - %m%n\n+log4j.appender.out.file=target/servicemix-test.log\n+log4j.appender.out.append=true", "filename": "common/servicemix-soap2/src/test/resources/log4j-tests.properties"}, {"additions": 41, "raw_url": "https://github.com/apache/servicemix3/raw/7280b59407c41953b8049fc291d56eecbbd1db35/common/servicemix-soap2/src/test/resources/log4j.properties", "blob_url": "https://github.com/apache/servicemix3/blob/7280b59407c41953b8049fc291d56eecbbd1db35/common/servicemix-soap2/src/test/resources/log4j.properties", "sha": "49315a2a9085737408e8285939f07a5cef302f35", "changes": 41, "status": "added", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/servicemix3/contents/common/servicemix-soap2/src/test/resources/log4j.properties?ref=7280b59407c41953b8049fc291d56eecbbd1db35", "patch": "@@ -0,0 +1,41 @@\n+# \n+# Licensed to the Apache Software Foundation (ASF) under one or more\n+# contributor license agreements.  See the NOTICE file distributed with\n+# this work for additional information regarding copyright ownership.\n+# The ASF licenses this file to You under the Apache License, Version 2.0\n+# (the \"License\"); you may not use this file except in compliance with\n+# the License.  You may obtain a copy of the License at\n+# \n+#   http://www.apache.org/licenses/LICENSE-2.0\n+# \n+# Unless required by applicable law or agreed to in writing, software\n+# distributed  under the  License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT  WARRANTIES OR CONDITIONS  OF ANY KIND, either  express  or\n+# implied.\n+#  \n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+#\n+#\n+\n+#\n+# The logging properties used during tests..\n+#\n+log4j.rootLogger=DEBUG, stdout\n+\n+log4j.logger.org.apache.activemq=INFO\n+log4j.logger.org.apache.activemq.spring=WARN\n+log4j.logger.org.apache.activemq.store.journal=INFO\n+log4j.logger.org.activeio.journal=INFO\n+\n+# CONSOLE appender not used by default\n+log4j.appender.stdout=org.apache.log4j.ConsoleAppender\n+log4j.appender.stdout.layout=org.apache.log4j.PatternLayout\n+log4j.appender.stdout.layout.ConversionPattern=%d [%-15.15t] %-5p %-30.30c{1} - %m%n\n+\n+# File appender\n+log4j.appender.out=org.apache.log4j.FileAppender\n+log4j.appender.out.layout=org.apache.log4j.PatternLayout\n+log4j.appender.out.layout.ConversionPattern=%d [%-15.15t] %-5p %-30.30c{1} - %m%n\n+log4j.appender.out.file=target/servicemix-test.log\n+log4j.appender.out.append=true", "filename": "common/servicemix-soap2/src/test/resources/log4j.properties"}, {"additions": 0, "raw_url": "https://github.com/apache/servicemix3/raw/7280b59407c41953b8049fc291d56eecbbd1db35/common/servicemix-soap2/src/test/resources/org/apache/servicemix/soap/Person.wsdl2", "blob_url": "https://github.com/apache/servicemix3/blob/7280b59407c41953b8049fc291d56eecbbd1db35/common/servicemix-soap2/src/test/resources/org/apache/servicemix/soap/Person.wsdl2", "previous_filename": "common/servicemix-soap2/src/test/java/org/apache/servicemix/soap/Person.wsdl2", "sha": "1cc0a71b691ad3d85fc51aadb3a99b3375b384cd", "changes": 0, "status": "renamed", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/servicemix3/contents/common/servicemix-soap2/src/test/resources/org/apache/servicemix/soap/Person.wsdl2?ref=7280b59407c41953b8049fc291d56eecbbd1db35", "filename": "common/servicemix-soap2/src/test/resources/org/apache/servicemix/soap/Person.wsdl2"}], "repo": "servicemix3"}, {"commit": "https://github.com/apache/servicemix3/commit/4bda9613928140334ef6ce575d26649574b3ce74", "parent": "https://github.com/apache/servicemix3/commit/86bb910cd6658e72c125bbed636d7d38a28d361b", "message": "SM-819: Fix possible NPEs when the Stax parser returns null for URIs, whereas SAX expects \"\"\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/servicemix/trunk@496252 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "servicemix3_28", "file": [{"additions": 1, "raw_url": "https://github.com/apache/servicemix3/raw/4bda9613928140334ef6ce575d26649574b3ce74/core/servicemix-core/src/main/java/org/apache/servicemix/jbi/jaxp/StaxSource.java", "blob_url": "https://github.com/apache/servicemix3/blob/4bda9613928140334ef6ce575d26649574b3ce74/core/servicemix-core/src/main/java/org/apache/servicemix/jbi/jaxp/StaxSource.java", "sha": "4f3a8d25428319bf198c9377be5d330cbcd1398e", "changes": 2, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/servicemix3/contents/core/servicemix-core/src/main/java/org/apache/servicemix/jbi/jaxp/StaxSource.java?ref=4bda9613928140334ef6ce575d26649574b3ce74", "patch": "@@ -133,7 +133,7 @@ protected void parse() throws SAXException {\n                     String localName = streamReader.getLocalName();\n                     String prefix = streamReader.getPrefix();\n                     String qname = prefix != null && prefix.length() > 0 ? prefix + \":\" + localName : localName;\n-                    contentHandler.startElement(uri, localName, qname, getAttributes());\n+                    contentHandler.startElement(uri == null ? \"\" : uri, localName, qname, getAttributes());\n                     break;\n                 }\n                 }", "filename": "core/servicemix-core/src/main/java/org/apache/servicemix/jbi/jaxp/StaxSource.java"}], "repo": "servicemix3"}, {"commit": "https://github.com/apache/servicemix3/commit/8116dd4a77055f719b419b5214ced6b7a66294ac", "parent": "https://github.com/apache/servicemix3/commit/5cf406ff92194e05250c4a7492ed491eca6cf057", "message": "Fix possible NPE when faults are generated from the annotated POJO\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/servicemix/trunk@490476 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "servicemix3_29", "file": [{"additions": 2, "raw_url": "https://github.com/apache/servicemix3/raw/8116dd4a77055f719b419b5214ced6b7a66294ac/deployables/serviceengines/servicemix-jsr181/src/main/java/org/apache/servicemix/jsr181/Jsr181ExchangeProcessor.java", "blob_url": "https://github.com/apache/servicemix3/blob/8116dd4a77055f719b419b5214ced6b7a66294ac/deployables/serviceengines/servicemix-jsr181/src/main/java/org/apache/servicemix/jsr181/Jsr181ExchangeProcessor.java", "sha": "997e5655ecc9975f62e159b359e13b8b3a7266f3", "changes": 3, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/servicemix3/contents/deployables/serviceengines/servicemix-jsr181/src/main/java/org/apache/servicemix/jsr181/Jsr181ExchangeProcessor.java?ref=8116dd4a77055f719b419b5214ced6b7a66294ac", "patch": "@@ -115,8 +115,8 @@ public void process(MessageExchange exchange) throws Exception {\n         \n         // Set response or DONE status\n         if (isInAndOut(exchange)) {\n-            String charSet = ctx.getOutMessage().getEncoding();\n             if (ctx.getExchange().hasFaultMessage() && ctx.getExchange().getFaultMessage().getBody() != null) {\n+                String charSet = ctx.getExchange().getFaultMessage().getEncoding();\n                 Fault fault = exchange.createFault();\n                 fault.setContent(new StringSource(out.toString(charSet)));\n                 XFireFault xFault = (XFireFault) ctx.getExchange().getFaultMessage().getBody();\n@@ -126,6 +126,7 @@ public void process(MessageExchange exchange) throws Exception {\n                 fault.setProperty(SOAP_FAULT_SUBCODE, xFault.getSubCode());\n                 exchange.setFault(fault);\n             } else {\n+                String charSet = ctx.getOutMessage().getEncoding();\n                 NormalizedMessage outMsg = exchange.createMessage();\n                 Attachments attachments = ctx.getCurrentMessage().getAttachments();\n                 if (attachments != null) {", "filename": "deployables/serviceengines/servicemix-jsr181/src/main/java/org/apache/servicemix/jsr181/Jsr181ExchangeProcessor.java"}], "repo": "servicemix3"}, {"commit": "https://github.com/apache/servicemix3/commit/a5dfd065bdf4926292b5d7f613dc1a1bc1716cc4", "parent": "https://github.com/apache/servicemix3/commit/a176e79e088adb905ba198cd4e2e268938979d14", "message": "Fix jms configuration: avoid NPE, load from classpath if available, prefix properties by component name\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/servicemix/trunk@486650 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "servicemix3_30", "file": [{"additions": 4, "raw_url": "https://github.com/apache/servicemix3/raw/a5dfd065bdf4926292b5d7f613dc1a1bc1716cc4/deployables/bindingcomponents/servicemix-jms/src/main/java/org/apache/servicemix/jms/JmsBootstrap.java", "blob_url": "https://github.com/apache/servicemix3/blob/a5dfd065bdf4926292b5d7f613dc1a1bc1716cc4/deployables/bindingcomponents/servicemix-jms/src/main/java/org/apache/servicemix/jms/JmsBootstrap.java", "sha": "bdcb1e5ac4b0ef04d3387d86a77ab81852685fc9", "changes": 5, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/servicemix3/contents/deployables/bindingcomponents/servicemix-jms/src/main/java/org/apache/servicemix/jms/JmsBootstrap.java?ref=a5dfd065bdf4926292b5d7f613dc1a1bc1716cc4", "patch": "@@ -29,7 +29,6 @@\n     protected JmsConfiguration configuration;\n     \n     public JmsBootstrap() {\n-        configuration = new JmsConfiguration();\n     }\n     \n     public ObjectName getExtensionMBeanName() {\n@@ -62,6 +61,10 @@ public void init(InstallationContext installContext) throws JBIException {\n     }\n \n     protected void doInit() throws Exception {\n+        configuration = new JmsConfiguration();\n+        configuration.setRootDir(this.context.getInstallRoot());\n+        configuration.setComponentName(this.context.getComponentName());\n+        configuration.load();\n         Object mbean = getExtensionMBean();\n         if (mbean != null) {\n             this.mbeanName = createExtensionMBeanName();", "filename": "deployables/bindingcomponents/servicemix-jms/src/main/java/org/apache/servicemix/jms/JmsBootstrap.java"}, {"additions": 1, "raw_url": "https://github.com/apache/servicemix3/raw/a5dfd065bdf4926292b5d7f613dc1a1bc1716cc4/deployables/bindingcomponents/servicemix-jms/src/main/java/org/apache/servicemix/jms/JmsComponent.java", "blob_url": "https://github.com/apache/servicemix3/blob/a5dfd065bdf4926292b5d7f613dc1a1bc1716cc4/deployables/bindingcomponents/servicemix-jms/src/main/java/org/apache/servicemix/jms/JmsComponent.java", "sha": "3828e566daa83a3a9d48f14593c310afc486bf41", "changes": 1, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/servicemix3/contents/deployables/bindingcomponents/servicemix-jms/src/main/java/org/apache/servicemix/jms/JmsComponent.java?ref=a5dfd065bdf4926292b5d7f613dc1a1bc1716cc4", "patch": "@@ -123,6 +123,7 @@ public BaseServiceUnitManager createServiceUnitManager() {\n     protected void doInit() throws Exception {\n         super.doInit();\n         configuration.setRootDir(context.getWorkspaceRoot());\n+        configuration.setComponentName(this.context.getComponentName());\n         configuration.load();\n         // Lookup keystoreManager and authenticationService\n         if (configuration.getKeystoreManager() == null) {", "filename": "deployables/bindingcomponents/servicemix-jms/src/main/java/org/apache/servicemix/jms/JmsComponent.java"}, {"additions": 63, "raw_url": "https://github.com/apache/servicemix3/raw/a5dfd065bdf4926292b5d7f613dc1a1bc1716cc4/deployables/bindingcomponents/servicemix-jms/src/main/java/org/apache/servicemix/jms/JmsConfiguration.java", "blob_url": "https://github.com/apache/servicemix3/blob/a5dfd065bdf4926292b5d7f613dc1a1bc1716cc4/deployables/bindingcomponents/servicemix-jms/src/main/java/org/apache/servicemix/jms/JmsConfiguration.java", "sha": "95a745e1fb4d3b390d415e5fcb7382355b0b26fd", "changes": 87, "status": "modified", "deletions": 24, "contents_url": "https://api.github.com/repos/apache/servicemix3/contents/deployables/bindingcomponents/servicemix-jms/src/main/java/org/apache/servicemix/jms/JmsConfiguration.java?ref=a5dfd065bdf4926292b5d7f613dc1a1bc1716cc4", "patch": "@@ -20,6 +20,7 @@\n import java.io.FileInputStream;\n import java.io.FileOutputStream;\n import java.io.IOException;\n+import java.io.InputStream;\n import java.util.Properties;\n \n import javax.jms.ConnectionFactory;\n@@ -29,13 +30,14 @@\n \n /**\n  * @author gnodet\n- *\n+ * @org.apache.xbean.XBean element=\"configuration\"\n  */\n public class JmsConfiguration implements JmsConfigurationMBean {\n \n     public final static String CONFIG_FILE = \"component.properties\"; \n     \n     private String rootDir;\n+    private String componentName = \"servicemix-jms\";\n     private Properties properties = new Properties();\n     private String userName;\n     private String password;\n@@ -60,6 +62,7 @@\n     \n     /**\n      * @return Returns the rootDir.\n+     * @org.apache.xbean.Property hidden=\"true\"\n      */\n     public String getRootDir() {\n         return rootDir;\n@@ -72,6 +75,21 @@ public void setRootDir(String rootDir) {\n         this.rootDir = rootDir;\n     }\n \n+    /**\n+     * @return Returns the componentName.\n+     * @org.apache.xbean.Property hidden=\"true\"\n+     */\n+    public String getComponentName() {\n+        return componentName;\n+    }\n+\n+    /**\n+     * @param componentName The componentName to set.\n+     */\n+    public void setComponentName(String componentName) {\n+        this.componentName = componentName;\n+    }\n+\n     /**\n      * @return the authenticationService\n      */\n@@ -107,7 +125,6 @@ public KeystoreManager getKeystoreManager() {\n      */\n     public void setKeystoreManager(KeystoreManager keystoreManager) {\n         this.keystoreManager = keystoreManager;\n-        save();\n     }\n     /**\n      * @return the keystoreManagerName\n@@ -216,14 +233,14 @@ public void setConnectionFactory(ConnectionFactory connectionFactory) {\n \n     \n     public void save() {\n-        properties.setProperty(\"userName\", userName);\n-        properties.setProperty(\"password\", password);\n-        properties.setProperty(\"jndiInitialContextFactory\", jndiInitialContextFactory);\n-        properties.setProperty(\"jndiProviderUrl\", jndiProviderUrl);\n-        properties.setProperty(\"jndiName\", jndiConnectionFactoryName);\n-        properties.setProperty(\"processorName\", processorName);\n-        properties.setProperty(\"keystoreManagerName\", keystoreManagerName);\n-        properties.setProperty(\"authenticationServiceName\", authenticationServiceName);\n+        setProperty(componentName + \".userName\", userName);\n+        setProperty(componentName + \".password\", password);\n+        setProperty(componentName + \".jndiInitialContextFactory\", jndiInitialContextFactory);\n+        setProperty(componentName + \".jndiProviderUrl\", jndiProviderUrl);\n+        setProperty(componentName + \".jndiName\", jndiConnectionFactoryName);\n+        setProperty(componentName + \".processorName\", processorName);\n+        setProperty(componentName + \".keystoreManagerName\", keystoreManagerName);\n+        setProperty(componentName + \".authenticationServiceName\", authenticationServiceName);\n         if (rootDir != null) {\n             File f = new File(rootDir, CONFIG_FILE);\n             try {\n@@ -234,41 +251,63 @@ public void save() {\n         }\n     }\n     \n+    protected void setProperty(String name, String value) {\n+        if (value == null) {\n+            properties.remove(name);\n+        } else {\n+            properties.setProperty(name, value);\n+        }\n+    }\n+    \n     public boolean load() {\n-        if (rootDir == null) {\n-            return false;\n+        File f = null;\n+        InputStream in = null;\n+        if (rootDir != null) {\n+            // try to find the property file in the workspace folder\n+            f = new File(rootDir, CONFIG_FILE);\n+            if (!f.exists()) {\n+                f = null;\n+            }\n         }\n-        File f = new File(rootDir, CONFIG_FILE);\n-        if (!f.exists()) {\n-            return false;\n+        if (f == null) {\n+            // find property file in classpath if it is not available in workspace \n+            in = this.getClass().getClassLoader().getResourceAsStream(CONFIG_FILE);\n+            if (in == null) {\n+                return false;\n+            }\n         }\n+\n         try {\n-            properties.load(new FileInputStream(f));\n+            if (f != null) {\n+                properties.load(new FileInputStream(f));\n+            } else {\n+                properties.load(in);\n+            }\n         } catch (IOException e) {\n             throw new RuntimeException(\"Could not load component configuration\", e);\n         }\n-        if (properties.getProperty(\"userName\") != null) {\n+        if (properties.getProperty(componentName + \".userName\") != null) {\n             userName = properties.getProperty(\"userName\");\n         }\n-        if (properties.getProperty(\"password\") != null) {\n+        if (properties.getProperty(componentName + \".password\") != null) {\n             password = properties.getProperty(\"password\");\n         }\n-        if (properties.getProperty(\"jndiInitialContextFactory\") != null) {\n+        if (properties.getProperty(componentName + \".jndiInitialContextFactory\") != null) {\n             jndiInitialContextFactory = properties.getProperty(\"jndiInitialContextFactory\");\n         }\n-        if (properties.getProperty(\"jndiProviderUrl\") != null) {\n+        if (properties.getProperty(componentName + \".jndiProviderUrl\") != null) {\n             jndiProviderUrl = properties.getProperty(\"jndiProviderUrl\");\n         }\n-        if (properties.getProperty(\"jndiName\") != null) {\n+        if (properties.getProperty(componentName + \".jndiName\") != null) {\n             jndiConnectionFactoryName = properties.getProperty(\"jndiName\");\n         }\n-        if (properties.getProperty(\"processorName\") != null) {\n+        if (properties.getProperty(componentName + \".processorName\") != null) {\n             processorName = properties.getProperty(\"processorName\");\n         }\n-        if (properties.getProperty(\"keystoreManagerName\") != null) {\n+        if (properties.getProperty(componentName + \".keystoreManagerName\") != null) {\n             keystoreManagerName = properties.getProperty(\"keystoreManagerName\");\n         }\n-        if (properties.getProperty(\"authenticationServiceName\") != null) {\n+        if (properties.getProperty(componentName + \".authenticationServiceName\") != null) {\n             authenticationServiceName = properties.getProperty(\"authenticationServiceName\");\n         }\n         return true;", "filename": "deployables/bindingcomponents/servicemix-jms/src/main/java/org/apache/servicemix/jms/JmsConfiguration.java"}], "repo": "servicemix3"}, {"commit": "https://github.com/apache/servicemix3/commit/a176e79e088adb905ba198cd4e2e268938979d14", "parent": "https://github.com/apache/servicemix3/commit/541bb4164bd76df5badc503ae287ac2426eba1eb", "message": "Avoid NPE when component shuts down and the stats mbean is not registered\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/servicemix/trunk@486645 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "servicemix3_31", "file": [{"additions": 4, "raw_url": "https://github.com/apache/servicemix3/raw/a176e79e088adb905ba198cd4e2e268938979d14/core/servicemix-core/src/main/java/org/apache/servicemix/jbi/monitoring/StatisticsService.java", "blob_url": "https://github.com/apache/servicemix3/blob/a176e79e088adb905ba198cd4e2e268938979d14/core/servicemix-core/src/main/java/org/apache/servicemix/jbi/monitoring/StatisticsService.java", "sha": "7735f48764fed91aee7d2bcfc198517aab8b4cf5", "changes": 5, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/servicemix3/contents/core/servicemix-core/src/main/java/org/apache/servicemix/jbi/monitoring/StatisticsService.java?ref=a176e79e088adb905ba198cd4e2e268938979d14", "patch": "@@ -215,12 +215,15 @@ protected void onComponentShutDown(ComponentEvent event) {\n         ComponentMBeanImpl component = event.getComponent();\n         String key = component.getName();\n         ComponentStats stats = (ComponentStats) componentStats.remove(key);\n+        if (stats == null) {\n+            return;\n+        }\n         // Register MBean\n         ManagementContext context= container.getManagementContext();\n         try {\n             context.unregisterMBean(context.createObjectName(context.createObjectNameProps(stats, true)));\n         } catch (Exception e) {\n-            log.info(\"Unable to unregister component statistics MBean: \" + e.getMessage());\n+            log.info(\"Unable to unregister component statistics MBean: \" + e);\n             if (log.isDebugEnabled()) {\n                 log.debug(\"Unable to unregister component statistics MBean\", e);\n             }", "filename": "core/servicemix-core/src/main/java/org/apache/servicemix/jbi/monitoring/StatisticsService.java"}], "repo": "servicemix3"}, {"commit": "https://github.com/apache/servicemix3/commit/d6d6c01c570a9657f52fe2824844b49612140f5d", "parent": "https://github.com/apache/servicemix3/commit/ff9078b08621dc73b34bef82ee73bef4b3b35dfd", "message": "SM-757: Pipeline throws NPE when configured in synchronous mode and an exchange in ERROR status is received\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/servicemix/trunk@481529 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "servicemix3_32", "file": [{"additions": 25, "raw_url": "https://github.com/apache/servicemix3/raw/d6d6c01c570a9657f52fe2824844b49612140f5d/deployables/serviceengines/servicemix-eip/src/main/java/org/apache/servicemix/eip/patterns/Pipeline.java", "blob_url": "https://github.com/apache/servicemix3/blob/d6d6c01c570a9657f52fe2824844b49612140f5d/deployables/serviceengines/servicemix-eip/src/main/java/org/apache/servicemix/eip/patterns/Pipeline.java", "sha": "5dc445fa9f2136e5007421ffe18250ead44e3def", "changes": 50, "status": "modified", "deletions": 25, "contents_url": "https://api.github.com/repos/apache/servicemix3/contents/deployables/serviceengines/servicemix-eip/src/main/java/org/apache/servicemix/eip/patterns/Pipeline.java?ref=d6d6c01c570a9657f52fe2824844b49612140f5d", "patch": "@@ -162,36 +162,36 @@ else if (tme.getFault() != null) {\n                 done(tme);\n                 sendSync(exchange);\n             }\n-        }\n         // This should not happen\n-        else if (tme.getOutMessage() == null) {\n+        } else if (tme.getOutMessage() == null) {\n             throw new IllegalStateException(\"Exchange status is \" + ExchangeStatus.ACTIVE + \" but has no correlation set\");\n-        }\n         // This is the answer from the transformer\n-        MessageExchange me = exchangeFactory.createExchange(exchange.getPattern());\n-        target.configureTarget(me, getContext());\n-        MessageUtil.transferOutToIn(tme, me);\n-        sendSync(me);\n-        done(tme);\n-        if (me.getStatus() == ExchangeStatus.DONE) {\n-            done(exchange);\n-        } else if (me.getStatus() == ExchangeStatus.ERROR) {\n-            fail(exchange, me.getError());\n-        } else if (me.getFault() != null) {\n-            if (exchange instanceof InOnly) {\n-                // Do not use the fault has it may contain streams\n-                // So just transform it to a string and send an error\n-                String fault = new SourceTransformer().contentToString(me.getFault());\n-                done(me);\n-                fail(exchange, new FaultException(fault, null, null));\n+        } else {\n+            MessageExchange me = exchangeFactory.createExchange(exchange.getPattern());\n+            target.configureTarget(me, getContext());\n+            MessageUtil.transferOutToIn(tme, me);\n+            sendSync(me);\n+            done(tme);\n+            if (me.getStatus() == ExchangeStatus.DONE) {\n+                done(exchange);\n+            } else if (me.getStatus() == ExchangeStatus.ERROR) {\n+                fail(exchange, me.getError());\n+            } else if (me.getFault() != null) {\n+                if (exchange instanceof InOnly) {\n+                    // Do not use the fault has it may contain streams\n+                    // So just transform it to a string and send an error\n+                    String fault = new SourceTransformer().contentToString(me.getFault());\n+                    done(me);\n+                    fail(exchange, new FaultException(fault, null, null));\n+                } else {\n+                    Fault fault = MessageUtil.copyFault(me);\n+                    MessageUtil.transferToFault(fault, exchange);\n+                    done(me);\n+                    sendSync(exchange);\n+                }\n             } else {\n-                Fault fault = MessageUtil.copyFault(me);\n-                MessageUtil.transferToFault(fault, exchange);\n-                done(me);\n-                sendSync(exchange);\n+                throw new IllegalStateException(\"Exchange status is \" + ExchangeStatus.ACTIVE + \" but has no correlation set\");\n             }\n-        } else {\n-            throw new IllegalStateException(\"Exchange status is \" + ExchangeStatus.ACTIVE + \" but has no correlation set\");\n         }\n     }\n ", "filename": "deployables/serviceengines/servicemix-eip/src/main/java/org/apache/servicemix/eip/patterns/Pipeline.java"}], "repo": "servicemix3"}, {"commit": "https://github.com/apache/servicemix3/commit/2e731df87a2a166f5e11807d0d68ab5ad52c94e0", "parent": "https://github.com/apache/servicemix3/commit/a1a5477e26158e34c7321708a99eb6626158b68e", "message": "Possible NPE when using the StaxSource.  The default namespace URI should be \"\" and not null.\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/servicemix/trunk@439207 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "servicemix3_33", "file": [{"additions": 1, "raw_url": "https://github.com/apache/servicemix3/raw/2e731df87a2a166f5e11807d0d68ab5ad52c94e0/servicemix-core/src/main/java/org/apache/servicemix/jbi/jaxp/StaxSource.java", "blob_url": "https://github.com/apache/servicemix3/blob/2e731df87a2a166f5e11807d0d68ab5ad52c94e0/servicemix-core/src/main/java/org/apache/servicemix/jbi/jaxp/StaxSource.java", "sha": "349fe06ace94e41f428c0f1f22c7f4ed99c92915", "changes": 4, "status": "modified", "deletions": 3, "contents_url": "https://api.github.com/repos/apache/servicemix3/contents/servicemix-core/src/main/java/org/apache/servicemix/jbi/jaxp/StaxSource.java?ref=2e731df87a2a166f5e11807d0d68ab5ad52c94e0", "patch": "@@ -41,8 +41,6 @@\n \n     private ContentHandler contentHandler;\n \n-    private char[] chars = new char[1024];\n-\n     public StaxSource(XMLStreamReader streamReader) {\n         this.streamReader = streamReader;\n         setInputSource(new InputSource());\n@@ -148,7 +146,7 @@ protected Attributes getAttributes() {\n             }\n             // Default namespace\n             if (prefix == null || prefix.length() == 0) {\n-                attrs.addAttribute(null, \n+                attrs.addAttribute(XMLConstants.DEFAULT_NS_PREFIX, \n                                    null, \n                                    XMLConstants.XMLNS_ATTRIBUTE, \n                                    \"CDATA\", ", "filename": "servicemix-core/src/main/java/org/apache/servicemix/jbi/jaxp/StaxSource.java"}], "repo": "servicemix3"}, {"commit": "https://github.com/apache/servicemix3/commit/414dd2bf9ac63846607e7b5ff07a43f2bdd1c485", "parent": "https://github.com/apache/servicemix3/commit/39301739ae61619694186181b803ac9a3fb76c0b", "message": "SM-515: StringSource should throw an NPE when built with a null string instead of throwing it when calling getInputStream\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/servicemix/trunk@430478 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "servicemix3_34", "file": [{"additions": 10, "raw_url": "https://github.com/apache/servicemix3/raw/414dd2bf9ac63846607e7b5ff07a43f2bdd1c485/servicemix-core/src/main/java/org/apache/servicemix/jbi/jaxp/StringSource.java", "blob_url": "https://github.com/apache/servicemix3/blob/414dd2bf9ac63846607e7b5ff07a43f2bdd1c485/servicemix-core/src/main/java/org/apache/servicemix/jbi/jaxp/StringSource.java", "sha": "91aba159287690d57704403e52161276c95d9f26", "changes": 17, "status": "modified", "deletions": 7, "contents_url": "https://api.github.com/repos/apache/servicemix3/contents/servicemix-core/src/main/java/org/apache/servicemix/jbi/jaxp/StringSource.java?ref=414dd2bf9ac63846607e7b5ff07a43f2bdd1c485", "patch": "@@ -33,16 +33,19 @@\n  * @version $Revision$\n  */\n public class StringSource extends StreamSource implements Serializable {\n-    \n-    private String text;\n-    private String encoding=\"UTF-8\";\n-    \n+\n+    private final String text;\n+    private String encoding = \"UTF-8\";\n+\n     public StringSource(String text) {\n+        if (text == null) {\n+            throw new NullPointerException(\"text can not be null\");\n+        }\n         this.text = text;\n     }\n \n     public StringSource(String text, String systemId) {\n-        this.text = text;\n+        this(text);\n         setSystemId(systemId);\n     }\n \n@@ -63,9 +66,9 @@ public InputStream getInputStream() {\n     public Reader getReader() {\n         return new StringReader(text);\n     }\n-    \n+\n     public String toString() {\n-    \treturn \"StringSource[\" + text + \"]\";\n+        return \"StringSource[\" + text + \"]\";\n     }\n \n     public String getText() {", "filename": "servicemix-core/src/main/java/org/apache/servicemix/jbi/jaxp/StringSource.java"}], "repo": "servicemix3"}, {"commit": "https://github.com/apache/servicemix3/commit/8b5cf84e98a2b737e2569d705af927756ca73b1a", "parent": "https://github.com/apache/servicemix3/commit/aa2bc7009f41a0a24cccd3bcb88b45d9dacc1335", "message": "SM-463: Possible NPE when using jmx and passing null arguments\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/servicemix/trunk@415805 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "servicemix3_35", "file": [{"additions": 24, "raw_url": "https://github.com/apache/servicemix3/raw/8b5cf84e98a2b737e2569d705af927756ca73b1a/servicemix-core/src/main/java/org/apache/servicemix/jbi/management/BaseStandardMBean.java", "blob_url": "https://github.com/apache/servicemix3/blob/8b5cf84e98a2b737e2569d705af927756ca73b1a/servicemix-core/src/main/java/org/apache/servicemix/jbi/management/BaseStandardMBean.java", "sha": "48bd6bc2d35f642b15090dfef78e3cd8e5196a8a", "changes": 25, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/servicemix3/contents/servicemix-core/src/main/java/org/apache/servicemix/jbi/management/BaseStandardMBean.java?ref=8b5cf84e98a2b737e2569d705af927756ca73b1a", "patch": "@@ -55,6 +55,7 @@\n import java.beans.PropertyDescriptor;\n import java.lang.reflect.InvocationTargetException;\n import java.util.Date;\n+import java.util.Hashtable;\n import java.util.Iterator;\n import java.util.LinkedHashMap;\n import java.util.Map;\n@@ -304,7 +305,17 @@ public AttributeList setAttributes(AttributeList attributes) {\n      */\n     public Object invoke(String name, Object[] params, String[] signature) throws MBeanException, ReflectionException {\n         try {\n-            return MethodUtils.invokeMethod(getImplementation(), name, params);\n+            Class[] parameterTypes = new Class[signature.length];\n+            for (int i = 0; i < parameterTypes.length; i++) {\n+                parameterTypes[i] = (Class) primitiveClasses.get(signature[i]);\n+                if (parameterTypes[i] == null) {\n+                    parameterTypes[i] = Class.forName(signature[i]);\n+                }\n+            }\n+            return MethodUtils.invokeMethod(getImplementation(), name, params, parameterTypes);\n+        }\n+        catch (ClassNotFoundException e) {\n+            throw new ReflectionException(e);\n         }\n         catch (NoSuchMethodException e) {\n             throw new ReflectionException(e);\n@@ -322,6 +333,18 @@ public Object invoke(String name, Object[] params, String[] signature) throws MB\n         }\n     }\n \n+    private final static Hashtable primitiveClasses = new Hashtable(8);\n+    {\n+        primitiveClasses.put(Boolean.TYPE.toString(), Boolean.TYPE);\n+        primitiveClasses.put(Character.TYPE.toString(), Character.TYPE);\n+        primitiveClasses.put(Byte.TYPE.toString(), Byte.TYPE);\n+        primitiveClasses.put(Short.TYPE.toString(), Short.TYPE);\n+        primitiveClasses.put(Integer.TYPE.toString(), Integer.TYPE);\n+        primitiveClasses.put(Long.TYPE.toString(), Long.TYPE);\n+        primitiveClasses.put(Float.TYPE.toString(), Float.TYPE);\n+        primitiveClasses.put(Double.TYPE.toString(), Double.TYPE);\n+     }    \n+    \n     /**\n      * Called at registration\n      * ", "filename": "servicemix-core/src/main/java/org/apache/servicemix/jbi/management/BaseStandardMBean.java"}], "repo": "servicemix3"}, {"commit": "https://github.com/apache/servicemix3/commit/1775123088b854cd68721f582a772f139801911f", "parent": "https://github.com/apache/servicemix3/commit/e6c701945173309576495e2120886564779caa14", "message": "Avoid possible NPE if transaction manager is not configured on the container\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/servicemix/trunk@411732 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "servicemix3_36", "file": [{"additions": 3, "raw_url": "https://github.com/apache/servicemix3/raw/1775123088b854cd68721f582a772f139801911f/servicemix-common/src/main/java/org/apache/servicemix/common/BaseLifeCycle.java", "blob_url": "https://github.com/apache/servicemix3/blob/1775123088b854cd68721f582a772f139801911f/servicemix-common/src/main/java/org/apache/servicemix/common/BaseLifeCycle.java", "sha": "90084f9dc97605d647850d8e10dc167374275ed7", "changes": 4, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/servicemix3/contents/servicemix-common/src/main/java/org/apache/servicemix/common/BaseLifeCycle.java?ref=1775123088b854cd68721f582a772f139801911f", "patch": "@@ -45,7 +45,9 @@ public void onMessageExchange(MessageExchange exchange) {\n             try {\n                 // If we are transacted and this is a runtime exception\n                 // try to mark transaction as rollback\n-                if (transactionManager.getStatus() != Status.STATUS_ACTIVE && e instanceof RuntimeException) {\n+                if (transactionManager != null && \n+                    transactionManager.getStatus() != Status.STATUS_ACTIVE && \n+                    e instanceof RuntimeException) {\n                     transactionManager.setRollbackOnly();\n                 } else  {\n                     exchange.setError(e);", "filename": "servicemix-common/src/main/java/org/apache/servicemix/common/BaseLifeCycle.java"}], "repo": "servicemix3"}, {"commit": "https://github.com/apache/servicemix3/commit/ca921b2e4ca96ce42464ebd7580980dcc2463811", "parent": "https://github.com/apache/servicemix3/commit/84ab64dc5db3418e9a259acac0fd6eff5f80a258", "message": "Fix possible NPE when using the JBI descriptor for the SU to retrieve the interface name\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/servicemix/trunk@409084 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "servicemix3_37", "file": [{"additions": 10, "raw_url": "https://github.com/apache/servicemix3/raw/ca921b2e4ca96ce42464ebd7580980dcc2463811/servicemix-core/src/main/java/org/apache/servicemix/jbi/framework/EndpointRegistry.java", "blob_url": "https://github.com/apache/servicemix3/blob/ca921b2e4ca96ce42464ebd7580980dcc2463811/servicemix-core/src/main/java/org/apache/servicemix/jbi/framework/EndpointRegistry.java", "sha": "24bc7ec5ca6cd1df5a06919324cf4a0b46d63606", "changes": 18, "status": "modified", "deletions": 8, "contents_url": "https://api.github.com/repos/apache/servicemix3/contents/servicemix-core/src/main/java/org/apache/servicemix/jbi/framework/EndpointRegistry.java?ref=ca921b2e4ca96ce42464ebd7580980dcc2463811", "patch": "@@ -209,15 +209,17 @@ protected void retrieveInterfaceFromSUDescriptor(InternalEndpoint serviceEndpoin\n             Services services = sus[i].getServices();\n             if (services != null) {\n                 Provides[] provides = services.getProvides();\n-                for (int j = 0; j < provides.length; j++) {\n-                    if (provides[j].getInterfaceName() != null &&\n-                        serviceEndpoint.getServiceName().equals(provides[j].getServiceName()) &&\n-                        serviceEndpoint.getEndpointName().equals(provides[j].getEndpointName())) {\n-                        if (logger.isDebugEnabled()) {\n-                            logger.debug(\"Endpoint \" + serviceEndpoint + \" is provided by SU \" + sus[i].getName());\n-                            logger.debug(\"Endpoint \" + serviceEndpoint + \" implements interface \" + provides[j].getInterfaceName());\n+                if (provides != null) {\n+                    for (int j = 0; j < provides.length; j++) {\n+                        if (provides[j].getInterfaceName() != null &&\n+                            serviceEndpoint.getServiceName().equals(provides[j].getServiceName()) &&\n+                            serviceEndpoint.getEndpointName().equals(provides[j].getEndpointName())) {\n+                            if (logger.isDebugEnabled()) {\n+                                logger.debug(\"Endpoint \" + serviceEndpoint + \" is provided by SU \" + sus[i].getName());\n+                                logger.debug(\"Endpoint \" + serviceEndpoint + \" implements interface \" + provides[j].getInterfaceName());\n+                            }\n+                            serviceEndpoint.addInterface(provides[j].getInterfaceName());\n                         }\n-                        serviceEndpoint.addInterface(provides[j].getInterfaceName());\n                     }\n                 }\n             }", "filename": "servicemix-core/src/main/java/org/apache/servicemix/jbi/framework/EndpointRegistry.java"}], "repo": "servicemix3"}, {"commit": "https://github.com/apache/servicemix3/commit/7b0c250f7e5d9824b96bbc1a83cf01e522958701", "parent": "https://github.com/apache/servicemix3/commit/94a06e8a42361af2159e4b8ef36a4d773c0c958e", "message": "Fix possible NPE with null prefixes (seems to happen with woodstox 2.9.3)\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/servicemix/trunk@408498 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "servicemix3_38", "file": [{"additions": 1, "raw_url": "https://github.com/apache/servicemix3/raw/7b0c250f7e5d9824b96bbc1a83cf01e522958701/servicemix-core/src/main/java/org/apache/servicemix/jbi/jaxp/FragmentStreamReader.java", "blob_url": "https://github.com/apache/servicemix3/blob/7b0c250f7e5d9824b96bbc1a83cf01e522958701/servicemix-core/src/main/java/org/apache/servicemix/jbi/jaxp/FragmentStreamReader.java", "sha": "044d25e13e089df79da9977f6df1ab1c6f23974f", "changes": 2, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/servicemix3/contents/servicemix-core/src/main/java/org/apache/servicemix/jbi/jaxp/FragmentStreamReader.java?ref=7b0c250f7e5d9824b96bbc1a83cf01e522958701", "patch": "@@ -45,7 +45,7 @@ public FragmentStreamReader(XMLStreamReader parent) {\n \t\tif (ctx instanceof ExtendedNamespaceContext) {\n \t\t\tIterator it = ((ExtendedNamespaceContext) ctx).getPrefixes();\n \t\t\twhile (it.hasNext()) {\n-\t\t\t\tString prefix = it.next().toString();\n+\t\t\t\tString prefix = (String) it.next();\n \t\t\t\trootPrefixes.add(prefix);\n \t\t\t}\n \t\t}", "filename": "servicemix-core/src/main/java/org/apache/servicemix/jbi/jaxp/FragmentStreamReader.java"}], "repo": "servicemix3"}, {"commit": "https://github.com/apache/servicemix3/commit/629339e9af1c141fe113550162245134cdbc84c4", "parent": "https://github.com/apache/servicemix3/commit/51ff833b57a0a82d3f80d8ae23778f50437753fc", "message": "Keep the reference to the DeliveryChannel so that meaningful exceptions are thrown when the channel is closed (instead of NPE)\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/servicemix/trunk@388154 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "servicemix3_39", "file": [{"additions": 4, "raw_url": "https://github.com/apache/servicemix3/raw/629339e9af1c141fe113550162245134cdbc84c4/servicemix-core/src/main/java/org/apache/servicemix/components/util/PojoSupport.java", "blob_url": "https://github.com/apache/servicemix3/blob/629339e9af1c141fe113550162245134cdbc84c4/servicemix-core/src/main/java/org/apache/servicemix/components/util/PojoSupport.java", "sha": "51ec2e4f064e8a2dec3ebec53a96b85e4868b946", "changes": 6, "status": "modified", "deletions": 2, "contents_url": "https://api.github.com/repos/apache/servicemix3/contents/servicemix-core/src/main/java/org/apache/servicemix/components/util/PojoSupport.java?ref=629339e9af1c141fe113550162245134cdbc84c4", "patch": "@@ -54,6 +54,7 @@\n     private MessageExchangeFactory exchangeFactory;\n     private String description = \"POJO Component\";\n     private ServiceEndpoint serviceEndpoint;\n+    private DeliveryChannel channel;\n     \n     protected PojoSupport() {\n     }\n@@ -80,6 +81,7 @@ public String getDescription(){\n      */\n     public void init(ComponentContext cc) throws JBIException {\n         this.context = cc;\n+        this.channel = this.context.getDeliveryChannel();\n         init();\n         if (service != null && endpoint != null) {\n             serviceEndpoint = context.activateEndpoint(service, endpoint);\n@@ -187,10 +189,10 @@ public MessageExchangeFactory getExchangeFactory() throws MessagingException {\n     }\n \n     public DeliveryChannel getDeliveryChannel() throws MessagingException {\n-        if (context == null) {\n+        if (channel == null) {\n             throw new NotInitialisedYetException();\n         }\n-        return context.getDeliveryChannel();\n+        return channel;\n     }\n \n     /**", "filename": "servicemix-core/src/main/java/org/apache/servicemix/components/util/PojoSupport.java"}], "repo": "servicemix3"}, {"commit": "https://github.com/apache/servicemix3/commit/3a55943f424329dc06811b797c0566615ef319d7", "parent": "https://github.com/apache/servicemix3/commit/379bec49380fb06a6af2976a963d0ef32a03c83c", "message": "Log meaningful statements instead of NPE when failing to retrieve the wsdl port type\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/servicemix/trunk@387862 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "servicemix3_40", "file": [{"additions": 6, "raw_url": "https://github.com/apache/servicemix3/raw/3a55943f424329dc06811b797c0566615ef319d7/servicemix-core/src/main/java/org/apache/servicemix/jbi/framework/EndpointRegistry.java", "blob_url": "https://github.com/apache/servicemix3/blob/3a55943f424329dc06811b797c0566615ef319d7/servicemix-core/src/main/java/org/apache/servicemix/jbi/framework/EndpointRegistry.java", "sha": "a76554ba96ab5183acb0e9a5d72cd16e4d369f3a", "changes": 6, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/servicemix3/contents/servicemix-core/src/main/java/org/apache/servicemix/jbi/framework/EndpointRegistry.java?ref=3a55943f424329dc06811b797c0566615ef319d7", "patch": "@@ -241,6 +241,12 @@ protected void retrieveInterfacesFromDescription(InternalEndpoint serviceEndpoin\n                 logger.info(\"Endpoint \" + serviceEndpoint + \" has a service description, but no matching endpoint found in \" + service.getPorts().keySet());\n                 return;\n             }\n+            if (port.getBinding() == null) {\n+                logger.info(\"Endpoint \" + serviceEndpoint + \" has a service description, but no binding found\");\n+            }\n+            if (port.getBinding().getPortType() == null) {\n+                logger.info(\"Endpoint \" + serviceEndpoint + \" has a service description, but no port type found\");\n+            }\n             QName interfaceName = port.getBinding().getPortType().getQName();\n             if (logger.isDebugEnabled()) {\n                 logger.debug(\"Endpoint \" + serviceEndpoint + \" implements interface \" + interfaceName);", "filename": "servicemix-core/src/main/java/org/apache/servicemix/jbi/framework/EndpointRegistry.java"}], "repo": "servicemix3"}, {"commit": "https://github.com/apache/servicemix3/commit/c28faa0c1d456d3fbe26978ed5d64be6c01e4c6d", "parent": "https://github.com/apache/servicemix3/commit/3c61a4f0403621de54d56754418c7a257adc7e14", "message": "Throw a meaningfull exception instead of NPE when sending a message to a shutdown component\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/servicemix/trunk@387803 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "servicemix3_41", "file": [{"additions": 5, "raw_url": "https://github.com/apache/servicemix3/raw/c28faa0c1d456d3fbe26978ed5d64be6c01e4c6d/servicemix-core/src/main/java/org/apache/servicemix/jbi/nmr/flow/AbstractFlow.java", "blob_url": "https://github.com/apache/servicemix3/blob/c28faa0c1d456d3fbe26978ed5d64be6c01e4c6d/servicemix-core/src/main/java/org/apache/servicemix/jbi/nmr/flow/AbstractFlow.java", "sha": "a1167854f296fbf9030c771ed951fbd0d7b163b4", "changes": 7, "status": "modified", "deletions": 2, "contents_url": "https://api.github.com/repos/apache/servicemix3/contents/servicemix-core/src/main/java/org/apache/servicemix/jbi/nmr/flow/AbstractFlow.java?ref=c28faa0c1d456d3fbe26978ed5d64be6c01e4c6d", "patch": "@@ -24,7 +24,6 @@\n import javax.management.JMException;\n import javax.management.MBeanAttributeInfo;\n import javax.management.ObjectName;\n-import javax.xml.namespace.QName;\n \n import org.apache.commons.logging.Log;\n import org.apache.commons.logging.LogFactory;\n@@ -168,7 +167,11 @@ public void doRouting(MessageExchangeImpl me) throws MessagingException {\n         //As the MessageExchange could come from another container - ensure we get the local Component\n         ComponentMBeanImpl lcc = broker.getRegistry().getComponent(id.getName());\n         if (lcc != null) {\n-            lcc.getDeliveryChannel().processInBound(me);\n+            if (lcc.getDeliveryChannel() != null) {\n+                lcc.getDeliveryChannel().processInBound(me);\n+            } else {\n+                throw new MessagingException(\"Component \" + id.getName() + \" is shut down\");\n+            }\n         }\n         else {\n             throw new MessagingException(\"No component named \" + id.getName() + \" - Couldn't route MessageExchange \" + me);", "filename": "servicemix-core/src/main/java/org/apache/servicemix/jbi/nmr/flow/AbstractFlow.java"}], "repo": "servicemix3"}, {"commit": "https://github.com/apache/servicemix3/commit/dd64fcde8b086a270c1c6f686791e209b7f0cce7", "parent": "https://github.com/apache/servicemix3/commit/21beddd7d4603ca8c4005b68b844ec7353259591", "message": "Fix NPE when no jbi descriptor is present in the archive to install\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/servicemix/trunk@386051 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "servicemix3_42", "file": [{"additions": 45, "raw_url": "https://github.com/apache/servicemix3/raw/dd64fcde8b086a270c1c6f686791e209b7f0cce7/servicemix-core/src/main/java/org/apache/servicemix/jbi/framework/AutoDeploymentService.java", "blob_url": "https://github.com/apache/servicemix3/blob/dd64fcde8b086a270c1c6f686791e209b7f0cce7/servicemix-core/src/main/java/org/apache/servicemix/jbi/framework/AutoDeploymentService.java", "sha": "4eb0ec6f936fd90381a1c472a1ea5a63dfa6f991", "changes": 55, "status": "modified", "deletions": 10, "contents_url": "https://api.github.com/repos/apache/servicemix3/contents/servicemix-core/src/main/java/org/apache/servicemix/jbi/framework/AutoDeploymentService.java?ref=dd64fcde8b086a270c1c6f686791e209b7f0cce7", "patch": "@@ -189,9 +189,26 @@ public void updateExternalArchive(String location,boolean autoStart) throws Depl\n      * @param autoStart\n      * @throws DeploymentException\n      */\n-    public void updateArchive(String location, ArchiveEntry entry, boolean autoStart) throws DeploymentException{\n-        File tmp=AutoDeploymentService.unpackLocation(environmentContext.getTmpDir(),location);\n-        Descriptor root = DescriptorFactory.buildDescriptor(tmp);\n+    public void updateArchive(String location, ArchiveEntry entry, boolean autoStart) throws DeploymentException {\n+        File tmpDir = null;\n+        try {\n+            tmpDir = AutoDeploymentService.unpackLocation(environmentContext.getTmpDir(), location);\n+        } catch (Exception e) {\n+            throw failure(\"deploy\", \"Unable to unpack archive: \" + location, e);\n+        }\n+        // unpackLocation returns null if no jbi descriptor is found\n+        if (tmpDir == null) {\n+            throw failure(\"deploy\", \"Unable to find jbi descriptor: \" + location);\n+        }\n+        Descriptor root = null;\n+        try {\n+            root = DescriptorFactory.buildDescriptor(tmpDir);\n+        } catch (Exception e) {\n+            throw failure(\"deploy\", \"Unable to build jbi descriptor: \" + location, e);\n+        }\n+        if (root == null) {\n+            throw failure(\"deploy\", \"Unable to find jbi descriptor: \" + location);\n+        }\n         if (root != null) {\n             try{\n                 container.getBroker().suspend();\n@@ -200,13 +217,13 @@ public void updateArchive(String location, ArchiveEntry entry, boolean autoStart\n                 \tentry.type = \"component\";\n                 \tentry.name = componentName; \n                     installationService.unloadInstaller(componentName, true);\n-                    installationService.install(tmp, root, autoStart);\n+                    installationService.install(tmpDir, root, autoStart);\n                     checkPendingSAs();\n                 } else if (root.getSharedLibrary() != null) {\n                 \tString libraryName = root.getSharedLibrary().getIdentification().getName();\n                 \tentry.type = \"component\";\n                 \tentry.name = libraryName; \n-                    installationService.doInstallSharedLibrary(tmp, root.getSharedLibrary());\n+                    installationService.doInstallSharedLibrary(tmpDir, root.getSharedLibrary());\n                 } else if (root.getServiceAssembly() != null) {\n                     ServiceAssembly sa = root.getServiceAssembly();\n                     String name = sa.getIdentification().getName();\n@@ -216,7 +233,7 @@ public void updateArchive(String location, ArchiveEntry entry, boolean autoStart\n                         if (deploymentService.isSaDeployed(name)) {\n                             deploymentService.shutDown(name);\n                             deploymentService.undeploy(name);\n-                            deploymentService.deployServiceAssembly(tmp, sa);\n+                            deploymentService.deployServiceAssembly(tmpDir, sa);\n                             if (autoStart) {\n                                 deploymentService.start(name);\n                             }\n@@ -237,7 +254,7 @@ public void updateArchive(String location, ArchiveEntry entry, boolean autoStart\n                             \t}\n                             }\n                             if (canDeploy) {\n-                                deploymentService.deployServiceAssembly(tmp, sa);\n+                                deploymentService.deployServiceAssembly(tmpDir, sa);\n                                 if (autoStart){\n                                     deploymentService.start(name);\n                                 }\n@@ -246,7 +263,7 @@ public void updateArchive(String location, ArchiveEntry entry, boolean autoStart\n                             \tentry.pending = true;\n                                 log.info(\"Components \" + missings + \" are not installed yet - adding ServiceAssembly \"\n                                                 + name + \" to pending list\");\n-                                pendingSAs.put(tmp, entry);\n+                                pendingSAs.put(tmpDir, entry);\n                             }\n                         }\n                     } catch (Exception e) {\n@@ -261,6 +278,24 @@ public void updateArchive(String location, ArchiveEntry entry, boolean autoStart\n         }\n     }\n \n+    protected DeploymentException failure(String task, String info) {\n+        return failure(task, info, null, null);\n+    }\n+    \n+    protected DeploymentException failure(String task, String info, Exception e) {\n+        return failure(task, info, e, null);\n+    }\n+    \n+    protected DeploymentException failure(String task, String info, Exception e, List componentResults) {\n+        ManagementSupport.Message msg = new ManagementSupport.Message();\n+        msg.setTask(task);\n+        msg.setResult(\"FAILED\");\n+        msg.setType(\"ERROR\");\n+        msg.setException(e);\n+        msg.setMessage(info);\n+        return new DeploymentException(ManagementSupport.createFrameworkMessage(msg, componentResults));\n+    }\n+\n     protected Set getComponentNames(ServiceAssembly sa) {\n         Set names = null;\n         if (sa.getServiceUnits() != null && sa.getServiceUnits().length > 0) {\n@@ -470,12 +505,12 @@ public void run(){\n                                                         +file.getName()+\" ...\");\n                                         try{\n                                             updateArchive(file.getAbsolutePath(), entry, true);\n+                                            log.info(\"Directory: \"+root.getName()+\": Finished installation of archive:  \"\n+                                                    +file.getName());\n                                         }catch(Exception e){\n                                             log.warn(\"Directory: \"+root.getName()+\": Automatic install of \"+file\n                                                             +\" failed\",e);\n                                         }\n-                                        log.info(\"Directory: \"+root.getName()+\": Finished installation of archive:  \"\n-                                                        +file.getName());\n                                     }\n \n                                     public void release(){}", "filename": "servicemix-core/src/main/java/org/apache/servicemix/jbi/framework/AutoDeploymentService.java"}], "repo": "servicemix3"}, {"commit": "https://github.com/apache/servicemix3/commit/f32c260af419efcbeaeeab451effe68d55ba3767", "parent": "https://github.com/apache/servicemix3/commit/7bc9f2185df7cd7df0b72254efbe1e7e8544d887", "message": "Do not use woodstox stax reader on dom, but use our own implementation to avoid a NPE (the location is used by jaxb2).\nUse the SU classloader when processing an exchange so that the JAXB2 context can find the needed classes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/servicemix/trunk@432857 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "servicemix3_43", "file": [{"additions": 16, "raw_url": "https://github.com/apache/servicemix3/raw/f32c260af419efcbeaeeab451effe68d55ba3767/servicemix-jsr181/src/main/java/org/apache/servicemix/jsr181/Jsr181ExchangeProcessor.java", "blob_url": "https://github.com/apache/servicemix3/blob/f32c260af419efcbeaeeab451effe68d55ba3767/servicemix-jsr181/src/main/java/org/apache/servicemix/jsr181/Jsr181ExchangeProcessor.java", "sha": "58407421c7234fa4f5eb3fca541c24d030bb2200", "changes": 28, "status": "modified", "deletions": 12, "contents_url": "https://api.github.com/repos/apache/servicemix3/contents/servicemix-jsr181/src/main/java/org/apache/servicemix/jsr181/Jsr181ExchangeProcessor.java?ref=f32c260af419efcbeaeeab451effe68d55ba3767", "patch": "@@ -16,7 +16,6 @@\n  */\n package org.apache.servicemix.jsr181;\n \n-import java.io.ByteArrayInputStream;\n import java.io.ByteArrayOutputStream;\n import java.util.Iterator;\n \n@@ -28,15 +27,14 @@\n import javax.jbi.messaging.InOut;\n import javax.jbi.messaging.MessageExchange;\n import javax.jbi.messaging.NormalizedMessage;\n-import javax.xml.stream.XMLInputFactory;\n import javax.xml.stream.XMLStreamException;\n import javax.xml.stream.XMLStreamReader;\n import javax.xml.transform.Source;\n import javax.xml.transform.TransformerException;\n-import javax.xml.transform.TransformerFactory;\n-import javax.xml.transform.stream.StreamResult;\n \n import org.apache.servicemix.common.ExchangeProcessor;\n+import org.apache.servicemix.common.xbean.XBeanServiceUnit;\n+import org.apache.servicemix.jbi.jaxp.StAXSourceTransformer;\n import org.apache.servicemix.jbi.jaxp.StringSource;\n import org.apache.servicemix.jsr181.xfire.JbiTransport;\n import org.codehaus.xfire.MessageContext;\n@@ -53,12 +51,25 @@\n \n     protected DeliveryChannel channel;\n     protected Jsr181Endpoint endpoint;\n+    protected StAXSourceTransformer transformer;\n     \n     public Jsr181ExchangeProcessor(Jsr181Endpoint endpoint) {\n         this.endpoint = endpoint;\n+        this.transformer = new StAXSourceTransformer();\n     }\n \n     public void process(MessageExchange exchange) throws Exception {\n+        ClassLoader oldCl = Thread.currentThread().getContextClassLoader();\n+        try {\n+            ClassLoader classLoader = ((XBeanServiceUnit) endpoint.getServiceUnit()).getConfigurationClassLoader();\n+            Thread.currentThread().setContextClassLoader(classLoader);\n+            doProcess(exchange);\n+        } finally {\n+            Thread.currentThread().setContextClassLoader(oldCl);\n+        }\n+    }    \n+        \n+    protected void doProcess(MessageExchange exchange) throws Exception {\n         if (exchange.getStatus() == ExchangeStatus.DONE) {\n             return;\n         } else if (exchange.getStatus() == ExchangeStatus.ERROR) {\n@@ -125,14 +136,7 @@ public void stop() throws Exception {\n     }\n \n     protected XMLStreamReader getXMLStreamReader(Source source) throws TransformerException, XMLStreamException {\n-        try {\n-            return XMLInputFactory.newInstance().createXMLStreamReader(source);\n-        } catch (Exception e) {\n-            // ignore, as this method is not mandatory in stax\n-        }\n-        ByteArrayOutputStream buffer = new ByteArrayOutputStream();\n-        TransformerFactory.newInstance().newTransformer().transform(source, new StreamResult(buffer));\n-        return XMLInputFactory.newInstance().createXMLStreamReader(new ByteArrayInputStream(buffer.toByteArray()));\n+        return transformer.toXMLStreamReader(source);\n     }\n     \n     protected boolean isInAndOut(MessageExchange exchange) {", "filename": "servicemix-jsr181/src/main/java/org/apache/servicemix/jsr181/Jsr181ExchangeProcessor.java"}], "repo": "servicemix3"}, {"commit": "https://github.com/apache/servicemix3/commit/e9efda41b5e8210fb7cbda32f50dfdfc5e45e713", "parent": "https://github.com/apache/servicemix3/commit/9e2b8dd8f827662b36000a39dea8f41e85b89682", "message": "Fix poms dependencies.\nMove mule component to sandbox as it is not finished yet.\nRemove XMarshaler.java dependency on woodstox.\nFix possible NPE in HttpSoapConnector.java\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/servicemix/trunk@367101 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "servicemix3_44", "file": [{"additions": 285, "raw_url": "https://github.com/apache/servicemix3/raw/e9efda41b5e8210fb7cbda32f50dfdfc5e45e713/pom.xml", "blob_url": "https://github.com/apache/servicemix3/blob/e9efda41b5e8210fb7cbda32f50dfdfc5e45e713/pom.xml", "sha": "f478b465027efd59956336cc329d1c49b3379fcd", "changes": 375, "status": "modified", "deletions": 90, "contents_url": "https://api.github.com/repos/apache/servicemix3/contents/pom.xml?ref=e9efda41b5e8210fb7cbda32f50dfdfc5e45e713", "patch": "@@ -357,9 +357,23 @@\n         <groupId>org.apache.db.ddlutils</groupId>\n         <artifactId>ddlutils</artifactId>\n         <version>1.0-SNAPSHOT</version>\n+        <exclusions>\n+          <exclusion>\n+            <groupId>xml-apis</groupId>\n+            <artifactId>xml-apis</artifactId>\n+          </exclusion>\n+          <exclusion>\n+            <groupId>dom4j</groupId>\n+            <artifactId>dom4j</artifactId>\n+          </exclusion>\n+          <exclusion>\n+            <groupId>xerces</groupId>\n+            <artifactId>xerces</artifactId>\n+          </exclusion>\n+        </exclusions>\n       </dependency>\n       <dependency>\n-        <groupId>servicemix</groupId>\n+        <groupId>org.apache.servicemix.dependencies</groupId>\n         <artifactId>jsr-223</artifactId>\n         <version>1.0-pr</version>\n       </dependency>\n@@ -376,93 +390,58 @@\n         <version>20051127</version>\n       </dependency>\n       <dependency>\n-        <groupId>servicemix</groupId>\n+        <groupId>org.apache.servicemix.dependencies</groupId>\n         <artifactId>wsif</artifactId>\n         <version>2.0.1_IB3</version>\n       </dependency>\n       <dependency>\n-        <groupId>servicemix</groupId>\n+        <groupId>org.apache.servicemix.dependencies</groupId>\n         <artifactId>wsif-j2c</artifactId>\n         <version>2.0.1_IB3</version>\n       </dependency>\n       <dependency>\n-        <groupId>servicemix</groupId>\n-        <artifactId>http</artifactId>\n-        <version>20051127</version>\n-      </dependency>\n-      <dependency>\n-        <groupId>servicemix</groupId>\n-        <artifactId>jaxb-api</artifactId>\n-        <version>20051127</version>\n-      </dependency>\n-      <dependency>\n-        <groupId>servicemix</groupId>\n-        <artifactId>jaxb-impl</artifactId>\n-        <version>20051127</version>\n-      </dependency>\n-      <dependency>\n-        <groupId>servicemix</groupId>\n-        <artifactId>jaxb-xjc</artifactId>\n-        <version>20051127</version>\n-      </dependency>\n-      <dependency>\n-        <groupId>servicemix</groupId>\n-        <artifactId>jaxws-api</artifactId>\n-        <version>20051127</version>\n-      </dependency>\n-      <dependency>\n-        <groupId>servicemix</groupId>\n-        <artifactId>jaxws-rt</artifactId>\n-        <version>20051127</version>\n-      </dependency>\n-      <dependency>\n-        <groupId>servicemix</groupId>\n-        <artifactId>jaxws-tools</artifactId>\n-        <version>20051127</version>\n-      </dependency>\n-      <dependency>\n-        <groupId>servicemix</groupId>\n-        <artifactId>jsr181-api</artifactId>\n-        <version>20051127</version>\n-      </dependency>\n-      <dependency>\n-        <groupId>servicemix</groupId>\n-        <artifactId>jsr250-api</artifactId>\n-        <version>20051127</version>\n-      </dependency>\n-      <dependency>\n-        <groupId>servicemix</groupId>\n-        <artifactId>sjsxp</artifactId>\n-        <version>20051127</version>\n+          <groupId>com.sun.xml</groupId>\n+          <artifactId>jaxb-impl</artifactId>\n+          <version>2.0-JAXWS-2.0-EA3</version>\n       </dependency>\n       \n       <dependency>\n         <groupId>activecluster</groupId>\n         <artifactId>activecluster</artifactId>\n-        <version>1.1-SNAPSHOT</version>\n+        <version>1.1-20050524.034300</version>\n+        <exclusions>\n+          <exclusion>\n+            <groupId>activemq</groupId>\n+            <artifactId>activemq</artifactId>\n+          </exclusion>\n+          <exclusion>\n+            <groupId>activeio</groupId>\n+            <artifactId>activeio</artifactId>\n+          </exclusion>\n+        </exclusions>\n       </dependency>\n       <dependency>\n-        <groupId>activeio</groupId>\n+        <groupId>org.apache.servicemix.dependencies</groupId>\n         <artifactId>activeio</artifactId>\n         <version>2.1</version>\n       </dependency>\n       <dependency>\n-        <groupId>activemq</groupId>\n-        <artifactId>activemq</artifactId>\n+        <groupId>org.apache.servicemix.dependencies</groupId>\n+        <artifactId>activemq-core</artifactId>\n         <version>4.0-SNAPSHOT</version>\n       </dependency>\n       <dependency>\n-        <groupId>activemq</groupId>\n+        <groupId>org.apache.servicemix.dependencies</groupId>\n         <artifactId>activemq-ra</artifactId>\n         <version>4.0-SNAPSHOT</version>\n       </dependency>\n       <dependency>\n-        <groupId>activemq</groupId>\n+      <groupId>org.apache.servicemix.dependencies</groupId>\n         <artifactId>smack</artifactId>\n         <version>1.5.0</version>\n       </dependency>\n       <dependency>\n-        <groupId>activemq</groupId>\n+      <groupId>org.apache.servicemix.dependencies</groupId>\n         <artifactId>smackx</artifactId>\n         <version>1.5.0</version>\n       </dependency>\n@@ -474,7 +453,7 @@\n       <dependency>\n         <groupId>activesoap</groupId>\n         <artifactId>activesoap</artifactId>\n-        <version>1.0-SNAPSHOT</version>\n+        <version>1.0-20050615.083700</version>\n       </dependency>\n       <dependency>\n         <groupId>annogen</groupId>\n@@ -484,7 +463,7 @@\n       <dependency>\n         <groupId>ant</groupId>\n         <artifactId>ant</artifactId>\n-        <version>1.6</version>\n+        <version>1.6.5</version>\n       </dependency>\n       <dependency>\n         <groupId>antlr</groupId>\n@@ -585,6 +564,10 @@\n             <groupId>commons-beanutils</groupId>\n             <artifactId>commons-beanutils</artifactId>\n           </exclusion>\n+          <exclusion>\n+            <groupId>xerces</groupId>\n+            <artifactId>xerces</artifactId>\n+          </exclusion>\n         </exclusions>\n       </dependency>\n       <dependency>\n@@ -626,7 +609,13 @@\n       <dependency>\n         <groupId>commons-httpclient</groupId>\n         <artifactId>commons-httpclient</artifactId>\n-        <version>3.0-rc2</version>\n+        <version>3.0</version>\n+        <exclusions>\n+          <exclusion>\n+            <groupId>junit</groupId>\n+            <artifactId>junit</artifactId>\n+          </exclusion>\n+        </exclusions>\n       </dependency>\n       <dependency>\n         <groupId>commons-io</groupId>\n@@ -651,7 +640,13 @@\n       <dependency>\n         <groupId>commons-net</groupId>\n         <artifactId>commons-net</artifactId>\n-        <version>1.4.0</version>\n+        <version>1.4.1</version>\n+        <exclusions>\n+          <exclusion>\n+            <groupId>oro</groupId>\n+            <artifactId>oro</artifactId>\n+          </exclusion>\n+        </exclusions>\n       </dependency>\n       <dependency>\n         <groupId>commons-pool</groupId>\n@@ -662,6 +657,10 @@\n             <groupId>xerces</groupId>\n             <artifactId>xerces</artifactId>\n           </exclusion>\n+          <exclusion>\n+            <groupId>xml-apis</groupId>\n+            <artifactId>xml-apis</artifactId>\n+          </exclusion>\n         </exclusions>\n       </dependency>\n       <dependency>\n@@ -718,6 +717,60 @@\n         <groupId>geronimo</groupId>\n         <artifactId>geronimo-connector</artifactId>\n         <version>1.0</version>\n+        <exclusions>\n+          <exclusion>\n+            <groupId>cglib</groupId>\n+            <artifactId>cglib-nodep</artifactId>\n+          </exclusion>\n+          <exclusion>\n+            <groupId>regexp</groupId>\n+            <artifactId>regexp</artifactId>\n+          </exclusion>\n+          <exclusion>\n+            <groupId>geronimo</groupId>\n+            <artifactId>geronimo-deployment</artifactId>\n+          </exclusion>\n+          <exclusion>\n+            <groupId>geronimo</groupId>\n+            <artifactId>geronimo-common</artifactId>\n+          </exclusion>\n+          <exclusion>\n+            <groupId>geronimo</groupId>\n+            <artifactId>geronimo-naming</artifactId>\n+          </exclusion>\n+          <exclusion>\n+            <groupId>geronimo</groupId>\n+            <artifactId>geronimo-security</artifactId>\n+          </exclusion>\n+          <exclusion>\n+            <groupId>commons-jelly</groupId>\n+            <artifactId>commons-jelly-tags-velocity</artifactId>\n+          </exclusion>\n+          <exclusion>\n+            <groupId>geronimo</groupId>\n+            <artifactId>geronimo-management</artifactId>\n+          </exclusion>\n+          <exclusion>\n+            <groupId>geronimo</groupId>\n+            <artifactId>geronimo-j2ee</artifactId>\n+          </exclusion>\n+          <exclusion>\n+            <groupId>velocity</groupId>\n+            <artifactId>velocity</artifactId>\n+          </exclusion>\n+          <exclusion>\n+            <groupId>geronimo</groupId>\n+            <artifactId>geronimo-transaction</artifactId>\n+          </exclusion>\n+          <exclusion>\n+            <groupId>geronimo</groupId>\n+            <artifactId>geronimo-kernel</artifactId>\n+          </exclusion>\n+          <exclusion>\n+            <groupId>tranql</groupId>\n+            <artifactId>tranql</artifactId>\n+          </exclusion>\n+        </exclusions>\n       </dependency>\n       <dependency>\n         <groupId>geronimo</groupId>\n@@ -763,6 +816,40 @@\n         <groupId>geronimo</groupId>\n         <artifactId>geronimo-transaction</artifactId>\n         <version>1.0</version>\n+        <exclusions>\n+          <exclusion>\n+            <groupId>howl</groupId>\n+            <artifactId>howl-logger</artifactId>\n+          </exclusion>\n+          <exclusion>\n+            <groupId>commons-jelly</groupId>\n+            <artifactId>commons-jelly-tags-velocity</artifactId>\n+          </exclusion>\n+          <exclusion>\n+            <groupId>geronimo</groupId>\n+            <artifactId>geronimo-core</artifactId>\n+          </exclusion>\n+          <exclusion>\n+            <groupId>geronimo</groupId>\n+            <artifactId>geronimo-kernel</artifactId>\n+          </exclusion>\n+          <exclusion>\n+            <groupId>velocity</groupId>\n+            <artifactId>velocity</artifactId>\n+          </exclusion>\n+          <exclusion>\n+            <groupId>geronimo</groupId>\n+            <artifactId>geronimo-system</artifactId>\n+          </exclusion>\n+          <exclusion>\n+            <groupId>geronimo</groupId>\n+            <artifactId>geronimo-j2ee</artifactId>\n+          </exclusion>\n+          <exclusion>\n+            <groupId>org.apache.geronimo.specs</groupId>\n+            <artifactId>geronimo-ejb_2.1_spec</artifactId>\n+          </exclusion>\n+        </exclusions>\n       </dependency>\n       <dependency>\n         <groupId>org.apache.geronimo.specs</groupId>\n@@ -814,6 +901,11 @@\n         <artifactId>geronimo-jsp_2.0_spec</artifactId>\n         <version>1.0</version>\n       </dependency>\n+    <dependency>\n+      <groupId>org.apache.geronimo.specs</groupId>\n+      <artifactId>geronimo-saaj_1.1_spec</artifactId>\n+        <version>1.0</version>\n+    </dependency>\n       <dependency>\n         <groupId>org.apache.geronimo.specs</groupId>\n         <artifactId>geronimo-jta_1.0.1B_spec</artifactId>\n@@ -850,8 +942,28 @@\n         <version>1.6</version>\n         <exclusions>\n           <exclusion>\n-            <groupId>xerces</groupId>\n-            <artifactId>xerces</artifactId>\n+            <groupId>jtidy</groupId>\n+            <artifactId>jtidy</artifactId>\n+          </exclusion>\n+          <exclusion>\n+            <groupId>javax.activation</groupId>\n+            <artifactId>activation</artifactId>\n+          </exclusion>\n+          <exclusion>\n+            <groupId>javax.mail</groupId>\n+            <artifactId>mail</artifactId>\n+          </exclusion>\n+          <exclusion>\n+            <groupId>javax.servlet</groupId>\n+            <artifactId>servlet-api</artifactId>\n+          </exclusion>\n+          <exclusion>\n+            <groupId>rhino</groupId>\n+            <artifactId>js</artifactId>\n+          </exclusion>\n+          <exclusion>\n+            <groupId>nekohtml</groupId>\n+            <artifactId>nekohtml</artifactId>\n           </exclusion>\n           <exclusion>\n             <groupId>xerces</groupId>\n@@ -878,6 +990,22 @@\n             <groupId>jaxme</groupId>\n             <artifactId>jaxme-api</artifactId>\n           </exclusion>\n+          <exclusion>\n+            <groupId>dom4j</groupId>\n+            <artifactId>dom4j</artifactId>\n+          </exclusion>\n+          <exclusion>\n+            <groupId>xom</groupId>\n+            <artifactId>xom</artifactId>\n+          </exclusion>\n+          <exclusion>\n+            <groupId>jdom</groupId>\n+            <artifactId>jdom</artifactId>\n+          </exclusion>\n+          <exclusion>\n+            <groupId>xerces</groupId>\n+            <artifactId>xmlParserAPIs</artifactId>\n+          </exclusion>\n         </exclusions>\n       </dependency>\n       <dependency>\n@@ -902,14 +1030,9 @@\n         <version>1.0</version>\n       </dependency>\n       <dependency>\n-        <groupId>jencks</groupId>\n+        <groupId>org.apache.servicemix.dependencies</groupId>\n         <artifactId>jencks</artifactId>\n-        <version>1.1</version>\n-      </dependency>\n-      <dependency>\n-        <groupId>jencks</groupId>\n-        <artifactId>jencks-all</artifactId>\n-        <version>1.1</version>\n+        <version>1.1.2</version>\n       </dependency>\n       <dependency>\n         <groupId>jetty</groupId>\n@@ -955,6 +1078,52 @@\n         <groupId>lingo</groupId>\n         <artifactId>lingo</artifactId>\n         <version>1.0</version>\n+        <exclusions>\n+          <exclusion>\n+            <groupId>backport175</groupId>\n+            <artifactId>backport175</artifactId>\n+          </exclusion>\n+          <exclusion>\n+            <groupId>hsqldb</groupId>\n+            <artifactId>hsqldb</artifactId>\n+          </exclusion>\n+          <exclusion>\n+            <groupId>cglib</groupId>\n+            <artifactId>cglib-full</artifactId>\n+          </exclusion>\n+          <exclusion>\n+            <groupId>xmlpull</groupId>\n+            <artifactId>xmlpull</artifactId>\n+          </exclusion>\n+          <exclusion>\n+            <groupId>jencks</groupId>\n+            <artifactId>jencks-all</artifactId>\n+          </exclusion>\n+          <exclusion>\n+            <groupId>geronimo-spec</groupId>\n+            <artifactId>geronimo-spec-jta</artifactId>\n+          </exclusion>\n+          <exclusion>\n+            <groupId>geronimo-spec</groupId>\n+            <artifactId>geronimo-spec-jms</artifactId>\n+          </exclusion>\n+          <exclusion>\n+            <groupId>geronimo-spec</groupId>\n+            <artifactId>geronimo-spec-j2ee-connector</artifactId>\n+          </exclusion>\n+          <exclusion>\n+            <groupId>geronimo-spec</groupId>\n+            <artifactId>geronimo-spec-j2ee-management</artifactId>\n+          </exclusion>\n+          <exclusion>\n+            <groupId>activemq</groupId>\n+            <artifactId>activemq</artifactId>\n+          </exclusion>\n+          <exclusion>\n+            <groupId>activemq</groupId>\n+            <artifactId>activemq-ra</artifactId>\n+          </exclusion>\n+        </exclusions>\n       </dependency>\n       <dependency>\n         <groupId>log4j</groupId>\n@@ -969,22 +1138,12 @@\n       <dependency>\n         <groupId>mx4j</groupId>\n         <artifactId>mx4j</artifactId>\n-        <version>2.1.1</version>\n-      </dependency>\n-      <dependency>\n-        <groupId>mx4j</groupId>\n-        <artifactId>mx4j-jmx</artifactId>\n-        <version>2.1.1</version>\n+        <version>3.0.1</version>\n       </dependency>\n       <dependency>\n         <groupId>mx4j</groupId>\n         <artifactId>mx4j-remote</artifactId>\n-        <version>2.1.1</version>\n-      </dependency>\n-      <dependency>\n-        <groupId>mx4j</groupId>\n-        <artifactId>mx4j-tools</artifactId>\n-        <version>2.1.1</version>\n+        <version>3.0.1</version>\n       </dependency>\n       <dependency>\n         <groupId>openejb</groupId>\n@@ -1029,7 +1188,7 @@\n       <dependency>\n         <groupId>quartz</groupId>\n         <artifactId>quartz</artifactId>\n-        <version>1.4.5</version>\n+        <version>1.5.1</version>\n       </dependency>\n       <dependency>\n         <groupId>regexp</groupId>\n@@ -1063,6 +1222,26 @@\n             <groupId>javax.transaction</groupId>\n             <artifactId>jta</artifactId>\n           </exclusion>\n+          <exclusion>\n+            <groupId>org.springframework</groupId>\n+            <artifactId>spring-support</artifactId>\n+          </exclusion>\n+          <exclusion>\n+            <groupId>org.springframework</groupId>\n+            <artifactId>spring-orm</artifactId>\n+          </exclusion>\n+          <exclusion>\n+            <groupId>org.springframework</groupId>\n+            <artifactId>spring-hibernate</artifactId>\n+          </exclusion>\n+          <exclusion>\n+            <groupId>org.springframework</groupId>\n+            <artifactId>spring-remoting</artifactId>\n+          </exclusion>\n+          <exclusion>\n+            <groupId>org.springframework</groupId>\n+            <artifactId>spring-core</artifactId>\n+          </exclusion>\n         </exclusions>\n       </dependency>\n       <dependency>\n@@ -1127,9 +1306,9 @@\n         <version>1.0</version>\n       </dependency>\n       <dependency>\n-        <groupId>stax-utils</groupId>\n+        <groupId>net.java.dev.stax-utils</groupId>\n         <artifactId>stax-utils</artifactId>\n-        <version>snapshot-20040917</version>\n+        <version>20060105</version>\n       </dependency>\n       <dependency>\n         <groupId>taglibs</groupId>\n@@ -1170,6 +1349,12 @@\n         <groupId>xalan</groupId>\n         <artifactId>xalan</artifactId>\n         <version>2.7.0</version>\n+        <exclusions>\n+          <exclusion>\n+            <groupId>xml-apis</groupId>\n+            <artifactId>xml-apis</artifactId>\n+          </exclusion>\n+        </exclusions>\n       </dependency>\n       <dependency>\n         <groupId>org.xbean</groupId>\n@@ -1207,12 +1392,12 @@\n         <version>20051114</version>\n       </dependency>\n       <dependency>\n-        <groupId>servicemix</groupId>\n+        <groupId>org.apache.servicemix.dependencies</groupId>\n         <artifactId>xfire-all</artifactId>\n         <version>1.0-20060106</version>\n       </dependency>\n       <dependency>\n-        <groupId>servicemix</groupId>\n+        <groupId>org.apache.servicemix.dependencies</groupId>\n         <artifactId>xfire-jaxws</artifactId>\n         <version>1.0-20060106</version>\n       </dependency>\n@@ -1257,15 +1442,25 @@\n         <version>1.0-alpha-2</version>\n       </dependency>\n       <dependency>\n-        <groupId>ws-commons</groupId>\n+        <groupId>org.apache.servicemix.dependencies</groupId>\n         <artifactId>XmlSchema</artifactId>\n-        <version>SNAPSHOT</version>\n+        <version>20060108</version>\n       </dependency>\n         <dependency>\n             <groupId>lucene</groupId>\n             <artifactId>lucene</artifactId>\n             <version>1.4.3</version>\n         </dependency>\n+    <dependency>\n+      <groupId>net.java.dev.jaxb</groupId>\n+      <artifactId>jaxb-impl</artifactId>\n+      <version>ea3</version>\n+    </dependency>\n+    <dependency>\n+      <groupId>net.java.dev.saaj</groupId>\n+      <artifactId>saaj-impl</artifactId>\n+      <version>ea3</version>\n+    </dependency>\n     </dependencies>\n   </dependencyManagement>\n   ", "filename": "pom.xml"}, {"additions": 146, "raw_url": "https://github.com/apache/servicemix3/raw/e9efda41b5e8210fb7cbda32f50dfdfc5e45e713/servicemix-components/pom.xml", "blob_url": "https://github.com/apache/servicemix3/blob/e9efda41b5e8210fb7cbda32f50dfdfc5e45e713/servicemix-components/pom.xml", "sha": "c4c8cb57f19e71618b4205dbefee48054dd1480c", "changes": 162, "status": "modified", "deletions": 16, "contents_url": "https://api.github.com/repos/apache/servicemix3/contents/servicemix-components/pom.xml?ref=e9efda41b5e8210fb7cbda32f50dfdfc5e45e713", "patch": "@@ -33,6 +33,151 @@\n   <packaging>jar</packaging>\n   <name>ServiceMix :: Components</name>\n   <dependencies>\n+    <dependency>\n+      <groupId>org.apache.servicemix</groupId>\n+      <artifactId>servicemix-core</artifactId>\n+      <scope>provided</scope>\n+    </dependency>\n+    <dependency>\n+      <groupId>commons-httpclient</groupId>\n+      <artifactId>commons-httpclient</artifactId>\n+    </dependency>\n+    <dependency>\n+      <groupId>commons-vfs</groupId>\n+      <artifactId>commons-vfs</artifactId>\n+    </dependency>\n+    <dependency>\n+      <groupId>commons-net</groupId>\n+      <artifactId>commons-net</artifactId>\n+    </dependency>\n+    <dependency>\n+      <groupId>commons-pool</groupId>\n+      <artifactId>commons-pool</artifactId>\n+    </dependency>\n+    <dependency>\n+      <groupId>org.apache.servicemix.dependencies</groupId>\n+      <artifactId>xfire-all</artifactId>\n+    </dependency>\n+    <dependency>\n+      <groupId>org.apache.servicemix.dependencies</groupId>\n+      <artifactId>wsif</artifactId>\n+    </dependency>\n+    <dependency>\n+      <groupId>org.apache.servicemix.dependencies</groupId>\n+      <artifactId>wsif-j2c</artifactId>\n+    </dependency>\n+    <dependency>\n+        <groupId>org.apache.geronimo.specs</groupId>\n+        <artifactId>geronimo-servlet_2.4_spec</artifactId>\n+    </dependency>\n+    \n+    <!-- Drools dependencies -->\n+    <dependency>\n+      <groupId>drools</groupId>\n+      <artifactId>drools-all-jdk1.4</artifactId>\n+    </dependency>\n+    <dependency>\n+      <groupId>janino</groupId>\n+      <artifactId>janino</artifactId>\n+    </dependency>\n+    <dependency>\n+      <groupId>antlr</groupId>\n+      <artifactId>antlr</artifactId>\n+    </dependency>\n+    \n+    <dependency>\n+      <groupId>org.apache.geronimo.specs</groupId>\n+      <artifactId>geronimo-javamail_1.3.1_spec</artifactId>\n+    </dependency>\n+    <dependency>\n+      <groupId>org.apache.geronimo.specs</groupId>\n+      <artifactId>geronimo-saaj_1.1_spec</artifactId>\n+    </dependency>\n+    <dependency>\n+      <groupId>org.apache.geronimo.specs</groupId>\n+      <artifactId>geronimo-jaxrpc_1.1_spec</artifactId>\n+    </dependency>\n+    <dependency>\n+      <groupId>groovy</groupId>\n+      <artifactId>groovy-all-1.0-jsr</artifactId>\n+    </dependency>\n+    <dependency>\n+      <groupId>quartz</groupId>\n+      <artifactId>quartz</artifactId>\n+    </dependency>\n+    <dependency>\n+      <groupId>rome</groupId>\n+      <artifactId>rome</artifactId>\n+    </dependency>\n+    <dependency>\n+      <groupId>jetty</groupId>\n+      <artifactId>org.mortbay.jetty</artifactId>\n+    </dependency>\n+    <dependency>\n+      <groupId>org.apache.servicemix.dependencies</groupId>\n+      <artifactId>smack</artifactId>\n+    </dependency>\n+    <dependency>\n+      <groupId>org.apache.servicemix.dependencies</groupId>\n+      <artifactId>smackx</artifactId>\n+    </dependency>\n+    <dependency>\n+      <groupId>activesoap</groupId>\n+      <artifactId>activesoap</artifactId>\n+    </dependency>\n+    <dependency>\n+      <groupId>groovy</groupId>\n+      <artifactId>groovy-all-1.0-jsr</artifactId>\n+    </dependency>\n+      <dependency>\n+        <groupId>org.apache.servicemix.dependencies</groupId>\n+        <artifactId>jsr-223</artifactId>\n+      </dependency>\n+    <dependency>\n+      <groupId>jdom</groupId>\n+      <artifactId>jdom</artifactId>\n+    </dependency>\n+    <dependency>\n+        <groupId>org.apache.servicemix.dependencies</groupId>\n+      <artifactId>wsif</artifactId>\n+    </dependency>\n+    <dependency>\n+        <groupId>org.apache.servicemix.dependencies</groupId>\n+      <artifactId>wsif-j2c</artifactId>\n+    </dependency>\n+    <dependency>\n+        <groupId>wsdl4j</groupId>\n+      <artifactId>wsdl4j</artifactId>\n+    </dependency>\n+    \n+    \n+    <dependency>\n+      <groupId>httpunit</groupId>\n+      <artifactId>httpunit</artifactId>\n+      <scope>test</scope>\n+    </dependency>\n+    <dependency>\n+      <groupId>axis</groupId>\n+      <artifactId>axis-jaxrpc</artifactId>\n+      <scope>test</scope>\n+    </dependency>\n+    <dependency>\n+      <groupId>axis</groupId>\n+      <artifactId>axis</artifactId>\n+      <scope>test</scope>\n+    </dependency>\n+    <dependency>\n+      <groupId>net.java.dev.saaj</groupId>\n+      <artifactId>saaj-impl</artifactId>\n+      <scope>test</scope>\n+    </dependency>\n+    <dependency>\n+      <groupId>log4j</groupId>\n+      <artifactId>log4j</artifactId>\n+      <scope>test</scope>\n+    </dependency>\n+ \n+    <!--\n     <dependency>\n       <groupId>activecluster</groupId>\n       <artifactId>activecluster</artifactId>\n@@ -137,10 +282,6 @@\n       <groupId>concurrent</groupId>\n       <artifactId>concurrent</artifactId>\n     </dependency>\n-    <dependency>\n-      <groupId>drools</groupId>\n-      <artifactId>drools-all-jdk1.4</artifactId>\n-    </dependency>\n     <dependency>\n       <groupId>geronimo</groupId>\n       <artifactId>geronimo-connector</artifactId>\n@@ -169,10 +310,6 @@\n       <groupId>org.apache.geronimo.specs</groupId>\n       <artifactId>geronimo-j2ee-connector_1.5_spec</artifactId>\n     </dependency>\n-    <dependency>\n-      <groupId>org.apache.geronimo.specs</groupId>\n-      <artifactId>geronimo-javamail_1.3.1_spec</artifactId>\n-    </dependency>\n     <dependency>\n       <groupId>org.apache.geronimo.specs</groupId>\n       <artifactId>geronimo-servlet_2.4_spec</artifactId>\n@@ -233,10 +370,6 @@\n       <groupId>mx4j</groupId>\n       <artifactId>mx4j-remote</artifactId>\n     </dependency>\n-    <dependency>\n-      <groupId>mx4j</groupId>\n-      <artifactId>mx4j-tools</artifactId>\n-    </dependency>\n     <dependency>\n       <groupId>org.apache.derby</groupId>\n       <artifactId>derby</artifactId>\n@@ -281,10 +414,6 @@\n       <groupId>servicemix</groupId>\n       <artifactId>saaj-impl</artifactId>\n     </dependency>\n-    <dependency>\n-      <groupId>org.apache.servicemix</groupId>\n-      <artifactId>servicemix-core</artifactId>\n-    </dependency>\n     <dependency>\n       <groupId>org.apache.servicemix</groupId>\n       <artifactId>servicemix-jbi</artifactId>\n@@ -377,6 +506,7 @@\n       <groupId>xstream</groupId>\n       <artifactId>xstream</artifactId>\n     </dependency>\n+    -->\n   </dependencies>\n \n     <build>", "filename": "servicemix-components/pom.xml"}, {"additions": 3, "raw_url": "https://github.com/apache/servicemix3/raw/e9efda41b5e8210fb7cbda32f50dfdfc5e45e713/servicemix-components/src/main/java/org/apache/servicemix/components/http/HttpSoapConnector.java", "blob_url": "https://github.com/apache/servicemix3/blob/e9efda41b5e8210fb7cbda32f50dfdfc5e45e713/servicemix-components/src/main/java/org/apache/servicemix/components/http/HttpSoapConnector.java", "sha": "a3629c349ee5b0c567e16bb0863a8445749d98bc", "changes": 4, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/servicemix3/contents/servicemix-components/src/main/java/org/apache/servicemix/components/http/HttpSoapConnector.java?ref=e9efda41b5e8210fb7cbda32f50dfdfc5e45e713", "patch": "@@ -104,7 +104,9 @@ public void start() throws JBIException {\n \t */\n \tpublic void stop() throws JBIException {\n \t\ttry {\n-\t\t\tserver.stop();\n+\t\t  if (server != null) {\n+\t\t\t  server.stop();\n+\t\t\t}\n \t\t} catch (InterruptedException e) {\n \t\t\tthrow new JBIException(\"Stop failed: \" + e, e);\n \t\t}", "filename": "servicemix-components/src/main/java/org/apache/servicemix/components/http/HttpSoapConnector.java"}, {"additions": 2, "raw_url": "https://github.com/apache/servicemix3/raw/e9efda41b5e8210fb7cbda32f50dfdfc5e45e713/servicemix-components/src/main/java/org/apache/servicemix/components/xfire/XMarshaler.java", "blob_url": "https://github.com/apache/servicemix3/blob/e9efda41b5e8210fb7cbda32f50dfdfc5e45e713/servicemix-components/src/main/java/org/apache/servicemix/components/xfire/XMarshaler.java", "sha": "b82c4bef6cd461a62d16422d1efbecc9ba75118a", "changes": 7, "status": "modified", "deletions": 5, "contents_url": "https://api.github.com/repos/apache/servicemix3/contents/servicemix-components/src/main/java/org/apache/servicemix/components/xfire/XMarshaler.java?ref=e9efda41b5e8210fb7cbda32f50dfdfc5e45e713", "patch": "@@ -33,9 +33,6 @@\n import org.apache.servicemix.jbi.jaxp.StringSource;\n import org.codehaus.xfire.exchange.OutMessage;\n \n-import com.ctc.wstx.stax.WstxInputFactory;\n-import com.ctc.wstx.stax.WstxOutputFactory;\n-\n /**\n  * @version $Revision$\n  */\n@@ -46,8 +43,8 @@\n     \n     public XMarshaler()\n     {\n-        outputFactory = new WstxOutputFactory();\n-        inputFactory = new WstxInputFactory();\n+        outputFactory = XMLOutputFactory.newInstance();\n+        inputFactory = XMLInputFactory.newInstance();\n     }\n \n     public void setContent(NormalizedMessage message, String xml) throws MessagingException {", "filename": "servicemix-components/src/main/java/org/apache/servicemix/components/xfire/XMarshaler.java"}, {"additions": 0, "raw_url": "https://github.com/apache/servicemix3/raw/e9efda41b5e8210fb7cbda32f50dfdfc5e45e713/servicemix-components/src/sandbox/java/org/apache/servicemix/components/mule/JBIConnector.java", "blob_url": "https://github.com/apache/servicemix3/blob/e9efda41b5e8210fb7cbda32f50dfdfc5e45e713/servicemix-components/src/sandbox/java/org/apache/servicemix/components/mule/JBIConnector.java", "previous_filename": "servicemix-components/src/main/java/org/apache/servicemix/components/mule/JBIConnector.java", "sha": "5826ed27d0636d7e68aca46bb7045e794fba31f4", "changes": 0, "status": "renamed", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/servicemix3/contents/servicemix-components/src/sandbox/java/org/apache/servicemix/components/mule/JBIConnector.java?ref=e9efda41b5e8210fb7cbda32f50dfdfc5e45e713", "filename": "servicemix-components/src/sandbox/java/org/apache/servicemix/components/mule/JBIConnector.java"}, {"additions": 0, "raw_url": "https://github.com/apache/servicemix3/raw/e9efda41b5e8210fb7cbda32f50dfdfc5e45e713/servicemix-components/src/sandbox/java/org/apache/servicemix/components/mule/JBIMessageAdapter.java", "blob_url": "https://github.com/apache/servicemix3/blob/e9efda41b5e8210fb7cbda32f50dfdfc5e45e713/servicemix-components/src/sandbox/java/org/apache/servicemix/components/mule/JBIMessageAdapter.java", "previous_filename": "servicemix-components/src/main/java/org/apache/servicemix/components/mule/JBIMessageAdapter.java", "sha": "191014623360a51324c23010b1bd48be55f8b678", "changes": 0, "status": "renamed", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/servicemix3/contents/servicemix-components/src/sandbox/java/org/apache/servicemix/components/mule/JBIMessageAdapter.java?ref=e9efda41b5e8210fb7cbda32f50dfdfc5e45e713", "filename": "servicemix-components/src/sandbox/java/org/apache/servicemix/components/mule/JBIMessageAdapter.java"}, {"additions": 0, "raw_url": "https://github.com/apache/servicemix3/raw/e9efda41b5e8210fb7cbda32f50dfdfc5e45e713/servicemix-components/src/sandbox/java/org/apache/servicemix/components/mule/JBIMessageDispatcher.java", "blob_url": "https://github.com/apache/servicemix3/blob/e9efda41b5e8210fb7cbda32f50dfdfc5e45e713/servicemix-components/src/sandbox/java/org/apache/servicemix/components/mule/JBIMessageDispatcher.java", "previous_filename": "servicemix-components/src/main/java/org/apache/servicemix/components/mule/JBIMessageDispatcher.java", "sha": "181a56ffd75427c7364e3a3f622fd84b4eae4dad", "changes": 0, "status": "renamed", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/servicemix3/contents/servicemix-components/src/sandbox/java/org/apache/servicemix/components/mule/JBIMessageDispatcher.java?ref=e9efda41b5e8210fb7cbda32f50dfdfc5e45e713", "filename": "servicemix-components/src/sandbox/java/org/apache/servicemix/components/mule/JBIMessageDispatcher.java"}, {"additions": 0, "raw_url": "https://github.com/apache/servicemix3/raw/e9efda41b5e8210fb7cbda32f50dfdfc5e45e713/servicemix-components/src/sandbox/java/org/apache/servicemix/components/mule/JBIMessageDispatcherFactory.java", "blob_url": "https://github.com/apache/servicemix3/blob/e9efda41b5e8210fb7cbda32f50dfdfc5e45e713/servicemix-components/src/sandbox/java/org/apache/servicemix/components/mule/JBIMessageDispatcherFactory.java", "previous_filename": "servicemix-components/src/main/java/org/apache/servicemix/components/mule/JBIMessageDispatcherFactory.java", "sha": "5593577a95ec21931b478594eca46f51c0a8cf04", "changes": 0, "status": "renamed", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/servicemix3/contents/servicemix-components/src/sandbox/java/org/apache/servicemix/components/mule/JBIMessageDispatcherFactory.java?ref=e9efda41b5e8210fb7cbda32f50dfdfc5e45e713", "filename": "servicemix-components/src/sandbox/java/org/apache/servicemix/components/mule/JBIMessageDispatcherFactory.java"}, {"additions": 0, "raw_url": "https://github.com/apache/servicemix3/raw/e9efda41b5e8210fb7cbda32f50dfdfc5e45e713/servicemix-components/src/sandbox/java/org/apache/servicemix/components/mule/JBIMessageReceiver.java", "blob_url": "https://github.com/apache/servicemix3/blob/e9efda41b5e8210fb7cbda32f50dfdfc5e45e713/servicemix-components/src/sandbox/java/org/apache/servicemix/components/mule/JBIMessageReceiver.java", "previous_filename": "servicemix-components/src/main/java/org/apache/servicemix/components/mule/JBIMessageReceiver.java", "sha": "99e804dfdecee5afd7d5fa36c69203c56bee2fc3", "changes": 0, "status": "renamed", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/servicemix3/contents/servicemix-components/src/sandbox/java/org/apache/servicemix/components/mule/JBIMessageReceiver.java?ref=e9efda41b5e8210fb7cbda32f50dfdfc5e45e713", "filename": "servicemix-components/src/sandbox/java/org/apache/servicemix/components/mule/JBIMessageReceiver.java"}, {"additions": 0, "raw_url": "https://github.com/apache/servicemix3/raw/e9efda41b5e8210fb7cbda32f50dfdfc5e45e713/servicemix-components/src/sandbox/java/org/apache/servicemix/components/mule/JBIMessageReceiverComponent.java", "blob_url": "https://github.com/apache/servicemix3/blob/e9efda41b5e8210fb7cbda32f50dfdfc5e45e713/servicemix-components/src/sandbox/java/org/apache/servicemix/components/mule/JBIMessageReceiverComponent.java", "previous_filename": "servicemix-components/src/main/java/org/apache/servicemix/components/mule/JBIMessageReceiverComponent.java", "sha": "7e54e4ddf8b01ec8a44c8d50f1b58cfd6a847c7e", "changes": 0, "status": "renamed", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/servicemix3/contents/servicemix-components/src/sandbox/java/org/apache/servicemix/components/mule/JBIMessageReceiverComponent.java?ref=e9efda41b5e8210fb7cbda32f50dfdfc5e45e713", "filename": "servicemix-components/src/sandbox/java/org/apache/servicemix/components/mule/JBIMessageReceiverComponent.java"}, {"additions": 0, "raw_url": "https://github.com/apache/servicemix3/raw/e9efda41b5e8210fb7cbda32f50dfdfc5e45e713/servicemix-components/src/sandbox/java/org/apache/servicemix/components/mule/JBIMessageTransformer.java", "blob_url": "https://github.com/apache/servicemix3/blob/e9efda41b5e8210fb7cbda32f50dfdfc5e45e713/servicemix-components/src/sandbox/java/org/apache/servicemix/components/mule/JBIMessageTransformer.java", "previous_filename": "servicemix-components/src/main/java/org/apache/servicemix/components/mule/JBIMessageTransformer.java", "sha": "cd70b92293b8068b02f9b5b4f163c508e26c59b9", "changes": 0, "status": "renamed", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/servicemix3/contents/servicemix-components/src/sandbox/java/org/apache/servicemix/components/mule/JBIMessageTransformer.java?ref=e9efda41b5e8210fb7cbda32f50dfdfc5e45e713", "filename": "servicemix-components/src/sandbox/java/org/apache/servicemix/components/mule/JBIMessageTransformer.java"}, {"additions": 0, "raw_url": "https://github.com/apache/servicemix3/raw/e9efda41b5e8210fb7cbda32f50dfdfc5e45e713/servicemix-components/src/sandbox/java/org/apache/servicemix/components/mule/MuleMarshaler.java", "blob_url": "https://github.com/apache/servicemix3/blob/e9efda41b5e8210fb7cbda32f50dfdfc5e45e713/servicemix-components/src/sandbox/java/org/apache/servicemix/components/mule/MuleMarshaler.java", "previous_filename": "servicemix-components/src/main/java/org/apache/servicemix/components/mule/MuleMarshaler.java", "sha": "d9b3162b305a66fb34ed72efdb0d64b6a0b15d1b", "changes": 0, "status": "renamed", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/servicemix3/contents/servicemix-components/src/sandbox/java/org/apache/servicemix/components/mule/MuleMarshaler.java?ref=e9efda41b5e8210fb7cbda32f50dfdfc5e45e713", "filename": "servicemix-components/src/sandbox/java/org/apache/servicemix/components/mule/MuleMarshaler.java"}, {"additions": 0, "raw_url": "https://github.com/apache/servicemix3/raw/e9efda41b5e8210fb7cbda32f50dfdfc5e45e713/servicemix-components/src/sandbox/java/org/apache/servicemix/components/mule/MuleMessagingException.java", "blob_url": "https://github.com/apache/servicemix3/blob/e9efda41b5e8210fb7cbda32f50dfdfc5e45e713/servicemix-components/src/sandbox/java/org/apache/servicemix/components/mule/MuleMessagingException.java", "previous_filename": "servicemix-components/src/main/java/org/apache/servicemix/components/mule/MuleMessagingException.java", "sha": "6336f0e5b65872fd07e86c71f0afbe3204f43695", "changes": 0, "status": "renamed", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/servicemix3/contents/servicemix-components/src/sandbox/java/org/apache/servicemix/components/mule/MuleMessagingException.java?ref=e9efda41b5e8210fb7cbda32f50dfdfc5e45e713", "filename": "servicemix-components/src/sandbox/java/org/apache/servicemix/components/mule/MuleMessagingException.java"}, {"additions": 0, "raw_url": "https://github.com/apache/servicemix3/raw/e9efda41b5e8210fb7cbda32f50dfdfc5e45e713/servicemix-components/src/sandbox/java/org/apache/servicemix/components/mule/package.html", "blob_url": "https://github.com/apache/servicemix3/blob/e9efda41b5e8210fb7cbda32f50dfdfc5e45e713/servicemix-components/src/sandbox/java/org/apache/servicemix/components/mule/package.html", "previous_filename": "servicemix-components/src/main/java/org/apache/servicemix/components/mule/package.html", "sha": "e045c65a9168f3b4cfc4ad6e5d7800af475c2535", "changes": 0, "status": "renamed", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/servicemix3/contents/servicemix-components/src/sandbox/java/org/apache/servicemix/components/mule/package.html?ref=e9efda41b5e8210fb7cbda32f50dfdfc5e45e713", "filename": "servicemix-components/src/sandbox/java/org/apache/servicemix/components/mule/package.html"}, {"additions": 27, "raw_url": "https://github.com/apache/servicemix3/raw/e9efda41b5e8210fb7cbda32f50dfdfc5e45e713/servicemix-core/pom.xml", "blob_url": "https://github.com/apache/servicemix3/blob/e9efda41b5e8210fb7cbda32f50dfdfc5e45e713/servicemix-core/pom.xml", "sha": "8ce9a4b6895f40d0967ad29413021c1c1f8bea0a", "changes": 60, "status": "modified", "deletions": 33, "contents_url": "https://api.github.com/repos/apache/servicemix3/contents/servicemix-core/pom.xml?ref=e9efda41b5e8210fb7cbda32f50dfdfc5e45e713", "patch": "@@ -39,24 +39,36 @@\n             <groupId>org.apache.servicemix</groupId>\n             <artifactId>servicemix-jbi</artifactId>\n         </dependency>\n+        <dependency>\n+            <groupId>log4j</groupId>\n+            <artifactId>log4j</artifactId>\n+        </dependency>\n         <dependency>\n             <groupId>xml-apis</groupId>\n             <artifactId>xml-apis</artifactId>\n         </dependency>\n-\n+      <dependency>\n+        <groupId>geronimo</groupId>\n+        <artifactId>geronimo-connector</artifactId>\n+        </dependency>\n+      <dependency>\n+        <groupId>geronimo</groupId>\n+        <artifactId>geronimo-transaction</artifactId>\n+        </dependency>\n+        \n         <dependency>\n-            <groupId>activemq</groupId>\n-            <artifactId>activemq</artifactId>\n+            <groupId>org.apache.servicemix.dependencies</groupId>\n+            <artifactId>activeio</artifactId>\n         </dependency>\n         <dependency>\n-            <groupId>activemq</groupId>\n-            <artifactId>activemq-ra</artifactId>\n+            <groupId>org.apache.servicemix.dependencies</groupId>\n+            <artifactId>activemq-core</artifactId>\n         </dependency>\n-\n         <dependency>\n-            <groupId>concurrent</groupId>\n-            <artifactId>concurrent</artifactId>\n+            <groupId>org.apache.servicemix.dependencies</groupId>\n+            <artifactId>activemq-ra</artifactId>\n         </dependency>\n+\n         <dependency>\n             <groupId>backport-util-concurrent</groupId>\n             <artifactId>backport-util-concurrent</artifactId>\n@@ -112,25 +124,7 @@\n \n         <dependency>\n             <groupId>org.springframework</groupId>\n-            <artifactId>spring-beans</artifactId>\n-        </dependency>\n-        <dependency>\n-            <groupId>org.springframework</groupId>\n-            <artifactId>spring-context</artifactId>\n-        </dependency>\n-        <dependency>\n-            <groupId>org.springframework</groupId>\n-            <artifactId>spring-web</artifactId>\n-        </dependency>\n-        <dependency>\n-            <groupId>org.springframework</groupId>\n-            <artifactId>spring-dao</artifactId>\n-            <scope>test</scope>\n-        </dependency>\n-        <dependency>\n-            <groupId>org.springframework</groupId>\n-            <artifactId>spring-remoting</artifactId>\n-            <scope>test</scope>\n+            <artifactId>spring</artifactId>\n         </dependency>\n \n         <dependency>\n@@ -146,17 +140,13 @@\n             <groupId>mx4j</groupId>\n             <artifactId>mx4j-remote</artifactId>\n         </dependency>\n-        <dependency>\n-            <groupId>mx4j</groupId>\n-            <artifactId>mx4j-tools</artifactId>\n-        </dependency>\n \n         <dependency>\n             <groupId>ant</groupId>\n             <artifactId>ant</artifactId>\n         </dependency>\n         <dependency>\n-            <groupId>jencks</groupId>\n+            <groupId>org.apache.servicemix.dependencies</groupId>\n             <artifactId>jencks</artifactId>\n         </dependency>\n         <dependency>\n@@ -195,8 +185,12 @@\n             <groupId>xerces</groupId>\n             <artifactId>xercesImpl</artifactId>\n         </dependency>\n+    <dependency>\n+      <groupId>woodstox</groupId>\n+      <artifactId>wstx-asl</artifactId>\n+    </dependency>\n         <dependency>\n-            <groupId>stax-utils</groupId>\n+            <groupId>net.java.dev.stax-utils</groupId>\n             <artifactId>stax-utils</artifactId>\n         </dependency>\n         <dependency>", "filename": "servicemix-core/pom.xml"}, {"additions": 3, "raw_url": "https://github.com/apache/servicemix3/raw/e9efda41b5e8210fb7cbda32f50dfdfc5e45e713/servicemix-gbean/pom.xml", "blob_url": "https://github.com/apache/servicemix3/blob/e9efda41b5e8210fb7cbda32f50dfdfc5e45e713/servicemix-gbean/pom.xml", "sha": "635a5bcbec3fcbd9f82a6387d8e077cc9b2589f2", "changes": 51, "status": "modified", "deletions": 48, "contents_url": "https://api.github.com/repos/apache/servicemix3/contents/servicemix-gbean/pom.xml?ref=e9efda41b5e8210fb7cbda32f50dfdfc5e45e713", "patch": "@@ -34,69 +34,24 @@\n     <name>ServiceMix :: GBeans</name>\n     <description>ServiceMix GBeans used for integration into Apache Geronimo</description>\n     <dependencies>\n-        <dependency>\n-            <groupId>org.apache.servicemix</groupId>\n-            <artifactId>servicemix-jbi</artifactId>\n-        </dependency>\n         <dependency>\n             <groupId>org.apache.servicemix</groupId>\n             <artifactId>servicemix-core</artifactId>\n         </dependency>\n-        <dependency>\n-            <groupId>org.xbean</groupId>\n-            <artifactId>xbean-spring</artifactId>\n-        </dependency>\n-        <dependency>\n-            <groupId>org.springframework</groupId>\n-            <artifactId>spring</artifactId>\n-        </dependency>\n-        <dependency>\n-            <groupId>commons-logging</groupId>\n-            <artifactId>commons-logging</artifactId>\n-        </dependency>\n         <dependency>\n             <groupId>geronimo</groupId>\n             <artifactId>geronimo-kernel</artifactId>\n-        </dependency>\n-        <dependency>\n-            <groupId>geronimo</groupId>\n-            <artifactId>geronimo-system</artifactId>\n+            <scope>provided</scope>\n         </dependency>\n         <dependency>\n             <groupId>geronimo</groupId>\n             <artifactId>geronimo-deployment</artifactId>\n-        </dependency>\n-        <dependency>\n-            <groupId>geronimo</groupId>\n-            <artifactId>geronimo-common</artifactId>\n+            <scope>provided</scope>\n         </dependency>\n         <dependency>\n             <groupId>geronimo</groupId>\n             <artifactId>geronimo-j2ee</artifactId>\n-        </dependency>\n-        <dependency>\n-            <groupId>geronimo</groupId>\n-            <artifactId>geronimo-connector</artifactId>\n-        </dependency>\n-        <dependency>\n-            <groupId>geronimo</groupId>\n-            <artifactId>geronimo-transaction</artifactId>\n-        </dependency>\n-        <dependency>\n-            <groupId>org.apache.geronimo.specs</groupId>\n-            <artifactId>geronimo-jta_1.0.1B_spec</artifactId>\n-        </dependency>\n-        <dependency>\n-            <groupId>org.apache.geronimo.specs</groupId>\n-            <artifactId>geronimo-j2ee-connector_1.5_spec</artifactId>\n-        </dependency>\n-        <dependency>\n-            <groupId>jencks</groupId>\n-            <artifactId>jencks</artifactId>\n-        </dependency>\n-        <dependency>\n-            <groupId>mx4j</groupId>\n-            <artifactId>mx4j</artifactId>\n+            <scope>provided</scope>\n         </dependency>\n     </dependencies>\n </project>", "filename": "servicemix-gbean/pom.xml"}, {"additions": 1, "raw_url": "https://github.com/apache/servicemix3/raw/e9efda41b5e8210fb7cbda32f50dfdfc5e45e713/servicemix-jbi/pom.xml", "blob_url": "https://github.com/apache/servicemix3/blob/e9efda41b5e8210fb7cbda32f50dfdfc5e45e713/servicemix-jbi/pom.xml", "sha": "6d9900c8154b7d0727b79d131bf5361e5eba049f", "changes": 2, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/servicemix3/contents/servicemix-jbi/pom.xml?ref=e9efda41b5e8210fb7cbda32f50dfdfc5e45e713", "patch": "@@ -19,7 +19,7 @@\n     </dependency>\n     <dependency>\n       <groupId>mx4j</groupId>\n-      <artifactId>mx4j-jmx</artifactId>\n+      <artifactId>mx4j</artifactId>\n     </dependency>\n   </dependencies>\n </project>", "filename": "servicemix-jbi/pom.xml"}, {"additions": 21, "raw_url": "https://github.com/apache/servicemix3/raw/e9efda41b5e8210fb7cbda32f50dfdfc5e45e713/servicemix-jms/pom.xml", "blob_url": "https://github.com/apache/servicemix3/blob/e9efda41b5e8210fb7cbda32f50dfdfc5e45e713/servicemix-jms/pom.xml", "sha": "89bce504100f4111ee7da63a971b40c23d438d9b", "changes": 88, "status": "modified", "deletions": 67, "contents_url": "https://api.github.com/repos/apache/servicemix3/contents/servicemix-jms/pom.xml?ref=e9efda41b5e8210fb7cbda32f50dfdfc5e45e713", "patch": "@@ -31,88 +31,42 @@\n     <modelVersion>4.0.0</modelVersion>\n     <groupId>org.apache.servicemix</groupId>\n     <artifactId>servicemix-jms</artifactId>\n-    <packaging>jar</packaging>\n+    <packaging>jbi-component</packaging>\n     <name>ServiceMix :: JMS</name>\n     <description>JMS Binding Component</description>\n+\n     <dependencies>\n-        \n-        <!-- Check this dependency -->\n-        <!--dependency>\n-            <groupId>servicemix</groupId>\n-            <artifactId>maven-jbi-plugin</artifactId>\n-        </dependency-->\n         <dependency>\n-\t        <groupId>org.apache.servicemix</groupId>\n+\t          <groupId>org.apache.servicemix</groupId>\n             <artifactId>servicemix-common</artifactId>\n         </dependency>\n         <dependency>\n-            <groupId>commons-logging</groupId>\n-            <artifactId>commons-logging</artifactId>\n-        </dependency>\n-        <dependency>\n-            <groupId>backport-util-concurrent</groupId>\n-            <artifactId>backport-util-concurrent</artifactId>\n+\t          <groupId>org.apache.servicemix</groupId>\n+            <artifactId>servicemix-core</artifactId>\n+            <scope>provided</scope>\n         </dependency>\n         <dependency>\n-            <groupId>wsdl4j</groupId>\n+\t          <groupId>wsdl4j</groupId>\n             <artifactId>wsdl4j</artifactId>\n         </dependency>\n-        <dependency>\n-\t        <groupId>org.apache.servicemix</groupId>\n-            <artifactId>servicemix-jbi</artifactId>\n-        </dependency>\n-        <dependency>\n-            <groupId>org.apache.geronimo.specs</groupId>\n-            <artifactId>geronimo-j2ee-connector_1.5_spec</artifactId>\n-        </dependency>\n-        <dependency>\n-            <groupId>org.apache.geronimo.specs</groupId>\n-            <artifactId>geronimo-jta_1.0.1B_spec</artifactId>\n-        </dependency>\n-        <dependency>\n-            <groupId>org.apache.geronimo.specs</groupId>\n-            <artifactId>geronimo-jms_1.1_spec</artifactId>\n-        </dependency>\n-        <dependency>\n-\t          <groupId>org.apache.servicemix</groupId>\n-            <artifactId>servicemix-core</artifactId>\n-        </dependency>\n         <dependency>\n \t          <groupId>org.apache.servicemix</groupId>\n             <artifactId>servicemix-components</artifactId>\n             <scope>test</scope>\n         </dependency>\n-        <dependency>\n-            <groupId>org.springframework</groupId>\n-            <artifactId>spring</artifactId>\n-        </dependency>\n-        <dependency>\n-            <groupId>activemq</groupId>\n-            <artifactId>activemq</artifactId>\n-        </dependency>\n-        <dependency>\n-            <groupId>concurrent</groupId>\n-            <artifactId>concurrent</artifactId>\n-        </dependency>\n-        <dependency>\n-            <groupId>jencks</groupId>\n-            <artifactId>jencks-all</artifactId>\n-        </dependency>\n-        <dependency>\n-            <groupId>commons-beanutils</groupId>\n-            <artifactId>commons-beanutils-core</artifactId>\n-        </dependency>\n-        <dependency>\n-            <groupId>commons-pool</groupId>\n-            <artifactId>commons-pool</artifactId>\n-        </dependency>\n-        <dependency>\n-            <groupId>commons-collections</groupId>\n-            <artifactId>commons-collections</artifactId>\n-        </dependency>\n-        <dependency>\n-            <groupId>mx4j</groupId>\n-            <artifactId>mx4j</artifactId>\n-        </dependency>\n     </dependencies>\n+\n+    <build>\n+        <plugins>\n+            <plugin>\n+                <groupId>org.apache.servicemix.plugins</groupId>\n+                <artifactId>maven2-jbi-plugin</artifactId>\n+                <configuration>\n+                   <type>service-engine</type>\n+                   <bootstrap>org.apache.servicemix.jms.JmsBootstrap</bootstrap>\n+                   <component>org.apache.servicemix.Jms.JmsComponent</component>\n+                </configuration>\n+            </plugin>\n+        </plugins>\n+    </build>\n </project>", "filename": "servicemix-jms/pom.xml"}, {"additions": 42, "raw_url": "https://github.com/apache/servicemix3/raw/e9efda41b5e8210fb7cbda32f50dfdfc5e45e713/servicemix-jsr181/pom.xml", "blob_url": "https://github.com/apache/servicemix3/blob/e9efda41b5e8210fb7cbda32f50dfdfc5e45e713/servicemix-jsr181/pom.xml", "sha": "e2e1d26d3b18fd26051f298deb5991541d00873d", "changes": 52, "status": "modified", "deletions": 10, "contents_url": "https://api.github.com/repos/apache/servicemix3/contents/servicemix-jsr181/pom.xml?ref=e9efda41b5e8210fb7cbda32f50dfdfc5e45e713", "patch": "@@ -34,8 +34,48 @@\n     <packaging>jbi-component</packaging>\n     <name>ServiceMix :: JSR-181 Service Engine</name>\n     <description>JSR-181 service engine</description>\n-    <dependencies>\n     \n+    <dependencies>\n+        <dependency>\n+\t          <groupId>org.apache.servicemix</groupId>\n+            <artifactId>servicemix-common</artifactId>\n+        </dependency>\n+        <dependency>\n+\t          <groupId>org.apache.servicemix</groupId>\n+            <artifactId>servicemix-core</artifactId>\n+            <scope>provided</scope>\n+        </dependency>\n+        <dependency>\n+            <groupId>org.apache.servicemix.dependencies</groupId>\n+            <artifactId>xfire-all</artifactId>\n+        </dependency>\n+        <dependency>\n+            <groupId>org.apache.servicemix.dependencies</groupId>\n+            <artifactId>xfire-jaxws</artifactId>\n+        </dependency>\n+        <dependency>\n+            <groupId>jdom</groupId>\n+            <artifactId>jdom</artifactId>\n+        </dependency>\n+        <dependency>\n+            <groupId>commons-attributes</groupId>\n+            <artifactId>commons-attributes-api</artifactId>\n+            <exclusions>\n+              <exclusion>\n+                <groupId>ant</groupId>\n+                <artifactId>ant</artifactId>\n+              </exclusion>\n+            </exclusions>\n+        </dependency>\n+        <dependency>\n+          <groupId>beehive</groupId>\n+          <artifactId>wsm</artifactId>\n+        </dependency>\n+        <dependency>\n+        <groupId>org.apache.servicemix.dependencies</groupId>\n+          <artifactId>XmlSchema</artifactId>\n+        </dependency>\n+<!--    \n         <dependency>\n             <groupId>org.apache.servicemix</groupId>\n             <artifactId>servicemix-common</artifactId>\n@@ -52,14 +92,6 @@\n             <groupId>wsdl4j</groupId>\n             <artifactId>wsdl4j</artifactId>\n         </dependency>\n-        <dependency>\n-            <groupId>servicemix</groupId>\n-            <artifactId>xfire-all</artifactId>\n-        </dependency>\n-        <dependency>\n-            <groupId>servicemix</groupId>\n-            <artifactId>xfire-jaxws</artifactId>\n-        </dependency>\n         <dependency>\n             <groupId>stax</groupId>\n             <artifactId>stax-api</artifactId>\n@@ -99,7 +131,6 @@\n         <dependency>\n             <groupId>commons-attributes</groupId>\n             <artifactId>commons-attributes-plugin</artifactId>\n-            <!--type>plugin</type-->\n         </dependency>\n         <dependency>\n             <groupId>backport175</groupId>\n@@ -155,6 +186,7 @@\n             <groupId>ws-commons</groupId>\n             <artifactId>XmlSchema</artifactId>\n         </dependency>\n+        -->\n     </dependencies>\n \n     <build>", "filename": "servicemix-jsr181/pom.xml"}, {"additions": 4, "raw_url": "https://github.com/apache/servicemix3/raw/e9efda41b5e8210fb7cbda32f50dfdfc5e45e713/servicemix-lwcontainer/pom.xml", "blob_url": "https://github.com/apache/servicemix3/blob/e9efda41b5e8210fb7cbda32f50dfdfc5e45e713/servicemix-lwcontainer/pom.xml", "sha": "3450581e89dad6b2f9579fdbd423d4bc292cd156", "changes": 8, "status": "modified", "deletions": 4, "contents_url": "https://api.github.com/repos/apache/servicemix3/contents/servicemix-lwcontainer/pom.xml?ref=e9efda41b5e8210fb7cbda32f50dfdfc5e45e713", "patch": "@@ -49,13 +49,13 @@\n             <artifactId>servicemix-core</artifactId>\r\n             <scope>provided</scope>\r\n         </dependency>\r\n-\r\n+<!--\r\n         <dependency>\r\n-            <groupId>servicemix</groupId>\r\n+            <groupId>org.apache.servicemix.dependencies</groupId>\r\n             <artifactId>xfire-all</artifactId>\r\n         </dependency>\r\n         <dependency>\r\n-            <groupId>servicemix</groupId>\r\n+            <groupId>org.apache.servicemix.dependencies</groupId>\r\n             <artifactId>xfire-jaxws</artifactId>\r\n         </dependency>\r\n         <dependency>\r\n@@ -85,7 +85,6 @@\n         <dependency>\r\n             <groupId>commons-attributes</groupId>\r\n             <artifactId>commons-attributes-plugin</artifactId>\r\n-            <!--type>plugin</type-->\r\n         </dependency>\r\n         <dependency>\r\n             <groupId>backport175</groupId>\r\n@@ -116,6 +115,7 @@\n             <artifactId>log4j</artifactId>\r\n             <scope>test</scope>\r\n         </dependency>\r\n+        -->\r\n     </dependencies>\r\n \r\n     <build>\r", "filename": "servicemix-lwcontainer/pom.xml"}, {"additions": 12, "raw_url": "https://github.com/apache/servicemix3/raw/e9efda41b5e8210fb7cbda32f50dfdfc5e45e713/servicemix-sca/pom.xml", "blob_url": "https://github.com/apache/servicemix3/blob/e9efda41b5e8210fb7cbda32f50dfdfc5e45e713/servicemix-sca/pom.xml", "sha": "a9a9720fcb9cefc812826eae91eb6978d0877bd1", "changes": 29, "status": "modified", "deletions": 17, "contents_url": "https://api.github.com/repos/apache/servicemix3/contents/servicemix-sca/pom.xml?ref=e9efda41b5e8210fb7cbda32f50dfdfc5e45e713", "patch": "@@ -81,39 +81,34 @@\n         \t<version>2.1.1</version>\r\n         </dependency>\r\n         <dependency>\r\n-        \t<groupId>servicemix</groupId>\r\n+        \t<groupId>org.apache.servicemix.dependencies.tuscany</groupId>\r\n         \t<artifactId>tuscany-common</artifactId>\r\n-        \t<version>SNAPSHOT</version>\r\n+        \t<version>dev-200512</version>\r\n         </dependency>\r\n         <dependency>\r\n-        \t<groupId>servicemix</groupId>\r\n+        \t<groupId>org.apache.servicemix.dependencies.tuscany</groupId>\r\n         \t<artifactId>tuscany-container-java</artifactId>\r\n-        \t<version>SNAPSHOT</version>\r\n+        \t<version>dev-200512</version>\r\n         </dependency>\r\n         <dependency>\r\n-        \t<groupId>servicemix</groupId>\r\n+        \t<groupId>org.apache.servicemix.dependencies.tuscany</groupId>\r\n         \t<artifactId>tuscany-core</artifactId>\r\n-        \t<version>SNAPSHOT</version>\r\n+        \t<version>dev-200512</version>\r\n         </dependency>\r\n         <dependency>\r\n-        \t<groupId>servicemix</groupId>\r\n+        \t<groupId>org.apache.servicemix.dependencies.tuscany</groupId>\r\n         \t<artifactId>tuscany-model</artifactId>\r\n-        \t<version>SNAPSHOT</version>\r\n+        \t<version>dev-200512</version>\r\n         </dependency>\r\n         <dependency>\r\n-        \t<groupId>servicemix</groupId>\r\n+        \t<groupId>org.apache.servicemix.dependencies.tuscany</groupId>\r\n         \t<artifactId>sca-api</artifactId>\r\n-        \t<version>SNAPSHOT</version>\r\n+        \t<version>dev-200512</version>\r\n         </dependency>\r\n         <dependency>\r\n-          <groupId>servicemix</groupId>\r\n-          <artifactId>jaxb-api</artifactId>\r\n-          <version>20051215</version>\r\n-        </dependency>\r\n-        <dependency>\r\n-          <groupId>servicemix</groupId>\r\n+          <groupId>com.sun.xml</groupId>\r\n           <artifactId>jaxb-impl</artifactId>\r\n-          <version>20051215</version>\r\n+          <version>2.0-JAXWS-2.0-EA3</version>\r\n         </dependency>\r\n         \r\n         <dependency>\r", "filename": "servicemix-sca/pom.xml"}, {"additions": 11, "raw_url": "https://github.com/apache/servicemix3/raw/e9efda41b5e8210fb7cbda32f50dfdfc5e45e713/servicemix-wsn2005/pom.xml", "blob_url": "https://github.com/apache/servicemix3/blob/e9efda41b5e8210fb7cbda32f50dfdfc5e45e713/servicemix-wsn2005/pom.xml", "sha": "bef394a528e88191c26a0ab7bb5fa4496423f9c3", "changes": 15, "status": "modified", "deletions": 4, "contents_url": "https://api.github.com/repos/apache/servicemix3/contents/servicemix-wsn2005/pom.xml?ref=e9efda41b5e8210fb7cbda32f50dfdfc5e45e713", "patch": "@@ -51,10 +51,17 @@\n             <scope>test</scope>\r\n         </dependency>\r\n         <dependency>\r\n-            <groupId>activemq</groupId>\r\n-            <artifactId>activemq</artifactId>\r\n+            <groupId>org.apache.servicemix.dependencies</groupId>\r\n+            <artifactId>activemq-core</artifactId>\r\n         </dependency>\r\n         \r\n+        \r\n+        <dependency>\r\n+            <groupId>com.sun.xml</groupId>\r\n+            <artifactId>jaxws-tools</artifactId>\r\n+            <version>2.0-JAXWS-2.0-EA3</version>\r\n+        </dependency>\r\n+        <!--\r\n     <dependency>\r\n       <groupId>servicemix</groupId>\r\n       <artifactId>jsr181-api</artifactId>\r\n@@ -127,7 +134,7 @@\n             <artifactId>stax-api</artifactId>\r\n             <scope>compile</scope>\r\n         </dependency>\r\n-\r\n+-->\r\n \r\n     </dependencies>\r\n \r\n@@ -149,7 +156,7 @@\n                         <configuration>\r\n                             <tasks>\r\n \t\t\t\t\t\t\t    <taskdef name=\"wsimport\" classname=\"com.sun.tools.ws.ant.WsImport\">\r\n-\t\t\t\t\t\t\t      <classpath refid=\"maven.dependency.classpath\"/>\r\n+\t\t\t\t\t\t\t      <classpath refid=\"maven.test.classpath\"/>\r\n \t\t\t\t\t\t\t    </taskdef>\r\n \t\t\t\t\t\t\t    <mkdir dir=\"${basedir}/target/generated\" />\r\n \t\t\t\t\t\t\t    <mkdir dir=\"${basedir}/target/generated-classes\" />\r", "filename": "servicemix-wsn2005/pom.xml"}], "repo": "servicemix3"}]
