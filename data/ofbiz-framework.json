{
    "ofbiz-framework_048506f": {
        "bug_id": "ofbiz-framework_048506f",
        "commit": "https://github.com/apache/ofbiz-framework/commit/048506f318c86d97d8a6b6a8bcbc55e60bac1176",
        "file": [
            {
                "additions": 8,
                "blob_url": "https://github.com/apache/ofbiz-framework/blob/048506f318c86d97d8a6b6a8bcbc55e60bac1176/framework/webapp/src/org/ofbiz/webapp/control/RequestHandler.java",
                "changes": 10,
                "contents_url": "https://api.github.com/repos/apache/ofbiz-framework/contents/framework/webapp/src/org/ofbiz/webapp/control/RequestHandler.java?ref=048506f318c86d97d8a6b6a8bcbc55e60bac1176",
                "deletions": 2,
                "filename": "framework/webapp/src/org/ofbiz/webapp/control/RequestHandler.java",
                "patch": "@@ -580,7 +580,7 @@ public void doRequest(HttpServletRequest request, HttpServletResponse response,\n                 }\n                 renderView(viewName, requestMap.securityExternalView, request, response, null);\n             } else if (\"view-last-noparam\".equals(nextRequestResponse.type)) {\n-            \t if (Debug.verboseOn()) Debug.logVerbose(\"[RequestHandler.doRequest]: Response is a view.\" + \" sessionId=\" + UtilHttp.getSessionId(request), module);\n+                 if (Debug.verboseOn()) Debug.logVerbose(\"[RequestHandler.doRequest]: Response is a view.\" + \" sessionId=\" + UtilHttp.getSessionId(request), module);\n \n                  // check for an override view, only used if \"success\" = eventReturn\n                  String viewName = (UtilValidate.isNotEmpty(overrideViewUri) && (eventReturn == null || \"success\".equals(eventReturn))) ? overrideViewUri : nextRequestResponse.value;\n@@ -596,7 +596,7 @@ public void doRequest(HttpServletRequest request, HttpServletResponse response,\n                      viewName = nextRequestResponse.value;\n                  }\n                  renderView(viewName, requestMap.securityExternalView, request, response, null);\n-\t\t\t} else if (\"view-home\".equals(nextRequestResponse.type)) {\n+            } else if (\"view-home\".equals(nextRequestResponse.type)) {\n                 if (Debug.verboseOn()) Debug.logVerbose(\"[RequestHandler.doRequest]: Response is a view.\" + \" sessionId=\" + UtilHttp.getSessionId(request), module);\n \n                 // check for an override view, only used if \"success\" = eventReturn\n@@ -1112,6 +1112,9 @@ public void runBeforeLogoutEvents(HttpServletRequest request, HttpServletRespons\n     public boolean trackStats(HttpServletRequest request) {\n         if (!\"false\".equalsIgnoreCase(context.getInitParameter(\"track-serverhit\"))) {\n             String uriString = RequestHandler.getRequestUri(request.getPathInfo());\n+            if (uriString == null) {\n+                uriString=\"\";\n+            }\n             ConfigXMLReader.RequestMap requestMap = getControllerConfig().requestMapMap.get(uriString);\n             if (requestMap == null) return false;\n             return requestMap.trackServerHit;\n@@ -1123,6 +1126,9 @@ public boolean trackStats(HttpServletRequest request) {\n     public boolean trackVisit(HttpServletRequest request) {\n         if (!\"false\".equalsIgnoreCase(context.getInitParameter(\"track-visit\"))) {\n             String uriString = RequestHandler.getRequestUri(request.getPathInfo());\n+            if (uriString == null) {\n+                uriString=\"\";\n+            }\n             ConfigXMLReader.RequestMap requestMap = getControllerConfig().requestMapMap.get(uriString);\n             if (requestMap == null) return false;\n             return requestMap.trackVisit;",
                "raw_url": "https://github.com/apache/ofbiz-framework/raw/048506f318c86d97d8a6b6a8bcbc55e60bac1176/framework/webapp/src/org/ofbiz/webapp/control/RequestHandler.java",
                "sha": "be9851e78aa63711196b23904896c688e4472933",
                "status": "modified"
            }
        ],
        "message": "A patch from Patrick Antivackis \"NPE when calling a page like http://localhost:8080/cmssite/cms\" (https://issues.apache.org/jira/browse/OFBIZ-3096) - OFBIZ-3096\nA Null Pointer Exception is generated by RequestHandler.trackVIsit and trackStat if a page is called without view and without trailing slash after the controller.\nThis may be not a problem for non cms site, but it is for cms site. Calling http://localhost:8080/cmssite/cms will generate a NPE; WIth the included pacth, calling the same page will display the default page.\n\ngit-svn-id: https://svn.apache.org/repos/asf/ofbiz/trunk@830366 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/ofbiz-framework/commit/d4d72a0ca88823ca1b17962f861da94655726e57",
        "repo": "ofbiz-framework",
        "unit_tests": [
            "RequestHandlerTests.java"
        ]
    },
    "ofbiz-framework_078a086": {
        "bug_id": "ofbiz-framework_078a086",
        "commit": "https://github.com/apache/ofbiz-framework/commit/078a08692bef22964127711f76e7485384b0cfab",
        "file": [
            {
                "additions": 4,
                "blob_url": "https://github.com/apache/ofbiz-framework/blob/078a08692bef22964127711f76e7485384b0cfab/framework/webapp/src/org/ofbiz/webapp/control/RequestHandler.java",
                "changes": 5,
                "contents_url": "https://api.github.com/repos/apache/ofbiz-framework/contents/framework/webapp/src/org/ofbiz/webapp/control/RequestHandler.java?ref=078a08692bef22964127711f76e7485384b0cfab",
                "deletions": 1,
                "filename": "framework/webapp/src/org/ofbiz/webapp/control/RequestHandler.java",
                "patch": "@@ -815,7 +815,10 @@ public String makeLink(HttpServletRequest request, HttpServletResponse response,\n         String controlPath = (String) request.getAttribute(\"_CONTROL_PATH_\");\n \n         String requestUri = RequestHandler.getRequestUri(url);\n-        ConfigXMLReader.RequestMap requestMap = controllerConfig.requestMapMap.get(requestUri);\n+        ConfigXMLReader.RequestMap requestMap = null;\n+        if (requestUri != null) {\n+            requestMap = controllerConfig.requestMapMap.get(requestUri);\n+        }\n         \n         StringBuilder newURL = new StringBuilder();\n ",
                "raw_url": "https://github.com/apache/ofbiz-framework/raw/078a08692bef22964127711f76e7485384b0cfab/framework/webapp/src/org/ofbiz/webapp/control/RequestHandler.java",
                "sha": "da0e71ea905fa87b01cc6a054b7bea5fc2a67fa5",
                "status": "modified"
            }
        ],
        "message": "Fix NPE reported by Sneha Chaturvedi on the user mailing list\n\ngit-svn-id: https://svn.apache.org/repos/asf/ofbiz/trunk@741974 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/ofbiz-framework/commit/3c8e2cdda30e6f182450396be5d29897b70a3cf8",
        "repo": "ofbiz-framework",
        "unit_tests": [
            "RequestHandlerTests.java"
        ]
    },
    "ofbiz-framework_1461401": {
        "bug_id": "ofbiz-framework_1461401",
        "commit": "https://github.com/apache/ofbiz-framework/commit/1461401e7104f87538a895abd5cbad9d906cae85",
        "file": [
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/ofbiz-framework/blob/1461401e7104f87538a895abd5cbad9d906cae85/framework/widget/src/org/ofbiz/widget/form/ModelFormField.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/ofbiz-framework/contents/framework/widget/src/org/ofbiz/widget/form/ModelFormField.java?ref=1461401e7104f87538a895abd5cbad9d906cae85",
                "deletions": 1,
                "filename": "framework/widget/src/org/ofbiz/widget/form/ModelFormField.java",
                "patch": "@@ -1156,7 +1156,7 @@ public boolean shouldUse(Map<String, Object> context) {\n                     condTrue = boolVal.booleanValue();\n                 } else {\n                     throw new IllegalArgumentException(\"Return value from use-when condition eval was not a Boolean: \"\n-                            + retVal.getClass().getName() + \" [\" + retVal + \"] on the field \" + this.name + \" of form \" + this.modelForm.getName());\n+                            + (retVal != null ? retVal.getClass().getName() : \"null\") + \" [\" + retVal + \"] on the field \" + this.name + \" of form \" + this.modelForm.getName());\n                 }\n \n                 return condTrue;",
                "raw_url": "https://github.com/apache/ofbiz-framework/raw/1461401e7104f87538a895abd5cbad9d906cae85/framework/widget/src/org/ofbiz/widget/form/ModelFormField.java",
                "sha": "1338dd9feb5f016eb9a97789ec6e234b43dc72bd",
                "status": "modified"
            }
        ],
        "message": "Fixed NPE when a form field use-when attribute evaluates to null\n\ngit-svn-id: https://svn.apache.org/repos/asf/ofbiz/trunk@1001325 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/ofbiz-framework/commit/c8ab3e7e19f48ef67524bba6661ecc0ffe15f4a2",
        "repo": "ofbiz-framework",
        "unit_tests": [
            "ModelFormFieldTest.java"
        ]
    },
    "ofbiz-framework_3a0a201": {
        "bug_id": "ofbiz-framework_3a0a201",
        "commit": "https://github.com/apache/ofbiz-framework/commit/3a0a201c34dc3cad8c001d030c80e57f5b605da1",
        "file": [
            {
                "additions": 4,
                "blob_url": "https://github.com/apache/ofbiz-framework/blob/3a0a201c34dc3cad8c001d030c80e57f5b605da1/framework/base/src/base/org/ofbiz/base/util/StringUtil.java",
                "changes": 4,
                "contents_url": "https://api.github.com/repos/apache/ofbiz-framework/contents/framework/base/src/base/org/ofbiz/base/util/StringUtil.java?ref=3a0a201c34dc3cad8c001d030c80e57f5b605da1",
                "deletions": 0,
                "filename": "framework/base/src/base/org/ofbiz/base/util/StringUtil.java",
                "patch": "@@ -41,6 +41,10 @@\n     \n     public static final String module = StringUtil.class.getName();\n \n+    public static String internString(String value) {\n+        return value != null ? value.intern() : null;\n+    }\n+\n     /** \n      * Replaces all occurances of oldString in mainString with newString\n      * @param mainString The original string",
                "raw_url": "https://github.com/apache/ofbiz-framework/raw/3a0a201c34dc3cad8c001d030c80e57f5b605da1/framework/base/src/base/org/ofbiz/base/util/StringUtil.java",
                "sha": "c00d4390074337fe079960f6cc4deebef8c2d984",
                "status": "modified"
            }
        ],
        "message": "Add internString(), which protects against NPE.  Closes\n https://issues.apache.org/jira/browse/OFBIZ-1307.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/ofbiz/trunk@585578 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/ofbiz-framework/commit/ddbcbed6d17d1e214646c9691c8c9ee667ed995f",
        "repo": "ofbiz-framework",
        "unit_tests": [
            "StringUtilTests.java"
        ]
    },
    "ofbiz-framework_3cc575b": {
        "bug_id": "ofbiz-framework_3cc575b",
        "commit": "https://github.com/apache/ofbiz-framework/commit/3cc575b6dea8ab42b434a36a0df6e3b7c305ca76",
        "file": [
            {
                "additions": 4,
                "blob_url": "https://github.com/apache/ofbiz-framework/blob/3cc575b6dea8ab42b434a36a0df6e3b7c305ca76/framework/widget/src/main/java/org/apache/ofbiz/widget/model/ModelFormField.java",
                "changes": 4,
                "contents_url": "https://api.github.com/repos/apache/ofbiz-framework/contents/framework/widget/src/main/java/org/apache/ofbiz/widget/model/ModelFormField.java?ref=3cc575b6dea8ab42b434a36a0df6e3b7c305ca76",
                "deletions": 0,
                "filename": "framework/widget/src/main/java/org/apache/ofbiz/widget/model/ModelFormField.java",
                "patch": "@@ -381,6 +381,10 @@ public String getEntry(Map<String, ? extends Object> context, String defaultValu\n             if (simpleEncoder != null)\n                 returnValue = simpleEncoder.encode(returnValue);\n         }\n+\n+        if (returnValue != null) {\n+            returnValue = returnValue.trim();\n+        }\n         return returnValue;\n     }\n ",
                "raw_url": "https://github.com/apache/ofbiz-framework/raw/3cc575b6dea8ab42b434a36a0df6e3b7c305ca76/framework/widget/src/main/java/org/apache/ofbiz/widget/model/ModelFormField.java",
                "sha": "fe725d4b77e6cc95cb068ebe77eaa4683eefa0ed",
                "status": "modified"
            }
        ],
        "message": "Improved: Check there are no white spaces around the name of a form field when \nupdating a form\n(OFBIZ-9306)\n\nSometimes ago, I lost an hour because of a space at the end of a field's name in \na form. In creation it does not pass (the field lacks) but when updating the \nform it passes and it's hard to find from where comes the problem.\n\nThanks: Michael for review and spotting a possible NPE in my 1st patch\n\ngit-svn-id: https://svn.apache.org/repos/asf/ofbiz/ofbiz-framework/trunk@1805141 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/ofbiz-framework/commit/0b235c737f8c3d815fe974d531c78ea656b53820",
        "repo": "ofbiz-framework",
        "unit_tests": [
            "ModelFormFieldTest.java"
        ]
    },
    "ofbiz-framework_642c638": {
        "bug_id": "ofbiz-framework_642c638",
        "commit": "https://github.com/apache/ofbiz-framework/commit/642c6383e59f40f4c00c407acda8b16426312f6c",
        "file": [
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/ofbiz-framework/blob/642c6383e59f40f4c00c407acda8b16426312f6c/framework/widget/src/org/ofbiz/widget/form/ModelFormField.java",
                "changes": 4,
                "contents_url": "https://api.github.com/repos/apache/ofbiz-framework/contents/framework/widget/src/org/ofbiz/widget/form/ModelFormField.java?ref=642c6383e59f40f4c00c407acda8b16426312f6c",
                "deletions": 2,
                "filename": "framework/widget/src/org/ofbiz/widget/form/ModelFormField.java",
                "patch": "@@ -2127,7 +2127,7 @@ public String getImageLocation(Map<String, Object> context){\n \n         public String getDescription(Map<String, Object> context) {\n             String retVal = null;\n-            if (!this.description.isEmpty()) {\n+            if (this.description != null && !this.description.isEmpty()) {\n                 retVal = this.description.expandString(context);\n             } else {\n                 retVal = this.modelFormField.getEntry(context);\n@@ -2213,7 +2213,7 @@ public String getDescription(Map<String, Object> context) {\n                     throw new IllegalArgumentException(errMsg);\n                 }\n             }\n-            if (!this.description.isEmpty() && retVal != null && this.getModelFormField().getEncodeOutput()) {\n+            if (this.description != null && !this.description.isEmpty() && retVal != null && this.getModelFormField().getEncodeOutput()) {\n                 StringUtil.SimpleEncoder simpleEncoder = (StringUtil.SimpleEncoder) context.get(\"simpleEncoder\");\n                 if (simpleEncoder != null) {\n                     retVal = simpleEncoder.encode(retVal);",
                "raw_url": "https://github.com/apache/ofbiz-framework/raw/642c6383e59f40f4c00c407acda8b16426312f6c/framework/widget/src/org/ofbiz/widget/form/ModelFormField.java",
                "sha": "1d61d6d29ee6766fba132c93121eb1f1a688ebf5",
                "status": "modified"
            }
        ],
        "message": "Fix NPE I introduced in my previous commit. Reported by Chatree Srichart.\n\ngit-svn-id: https://svn.apache.org/repos/asf/ofbiz/trunk@1165233 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/ofbiz-framework/commit/98385f75d2d1ce249bf6e7adf79d2306c7c61acc",
        "repo": "ofbiz-framework",
        "unit_tests": [
            "ModelFormFieldTest.java"
        ]
    },
    "ofbiz-framework_8074d39": {
        "bug_id": "ofbiz-framework_8074d39",
        "commit": "https://github.com/apache/ofbiz-framework/commit/8074d39e801a41deb46b2f7f851fceaebd4900f3",
        "file": [
            {
                "additions": 31,
                "blob_url": "https://github.com/apache/ofbiz-framework/blob/8074d39e801a41deb46b2f7f851fceaebd4900f3/framework/base/src/base/org/ofbiz/base/util/ObjectType.java",
                "changes": 54,
                "contents_url": "https://api.github.com/repos/apache/ofbiz-framework/contents/framework/base/src/base/org/ofbiz/base/util/ObjectType.java?ref=8074d39e801a41deb46b2f7f851fceaebd4900f3",
                "deletions": 23,
                "filename": "framework/base/src/base/org/ofbiz/base/util/ObjectType.java",
                "patch": "@@ -426,7 +426,7 @@ public static boolean instanceOf(Class<?> objectClass, Class<?> typeClass) {\n     }\n \n     public static Object simpleTypeConvert(Object obj, String type, String format, Locale locale, boolean noTypeFail) throws GeneralException {\n-        return simpleTypeConvert(obj, type, format, UtilDateTime.getDefaultTimeZone(), locale, noTypeFail);\n+        return simpleTypeConvert(obj, type, format, null, locale, noTypeFail);\n     }\n \n     /** \n@@ -457,6 +457,14 @@ public static Object simpleTypeConvert(Object obj, String type, String format, T\n             return obj;\n         }\n \n+        if (timeZone == null) {\n+            timeZone = TimeZone.getDefault();\n+        }\n+\n+        if (locale == null) {\n+            locale = Locale.getDefault();\n+        }\n+\n         String fromType = null;\n \n         if ((type.equals(\"List\") || type.equals(\"java.util.List\")) && obj.getClass().isArray()) {\n@@ -496,7 +504,7 @@ public static Object simpleTypeConvert(Object obj, String type, String format, T\n             } else if (\"BigDecimal\".equals(type) || \"java.math.BigDecimal\".equals(type)) {\n                 str = StringUtil.removeSpaces(str);\n                 try {\n-                    NumberFormat nf = locale == null ? NumberFormat.getNumberInstance() : NumberFormat.getNumberInstance(locale);\n+                    NumberFormat nf = NumberFormat.getNumberInstance(locale);\n                     Number tempNum = nf.parse(str);\n                     return new BigDecimal(tempNum.toString());\n                 } catch (ParseException e) {\n@@ -505,7 +513,7 @@ public static Object simpleTypeConvert(Object obj, String type, String format, T\n             } else if (\"Double\".equals(type) || \"java.lang.Double\".equals(type)) {\n                 str = StringUtil.removeSpaces(str);\n                 try {\n-                    NumberFormat nf = locale == null ? NumberFormat.getNumberInstance() : NumberFormat.getNumberInstance(locale);\n+                    NumberFormat nf = NumberFormat.getNumberInstance(locale);\n                     Number tempNum = nf.parse(str);\n \n                     return Double.valueOf(tempNum.doubleValue());\n@@ -515,7 +523,7 @@ public static Object simpleTypeConvert(Object obj, String type, String format, T\n             } else if (\"Float\".equals(type) || \"java.lang.Float\".equals(type)) {\n                 str = StringUtil.removeSpaces(str);\n                 try {\n-                    NumberFormat nf = locale == null ? NumberFormat.getNumberInstance() : NumberFormat.getNumberInstance(locale);\n+                    NumberFormat nf = NumberFormat.getNumberInstance(locale);\n                     Number tempNum = nf.parse(str);\n \n                     return Float.valueOf(tempNum.floatValue());\n@@ -525,7 +533,7 @@ public static Object simpleTypeConvert(Object obj, String type, String format, T\n             } else if (\"Long\".equals(type) || \"java.lang.Long\".equals(type)) {\n                 str = StringUtil.removeSpaces(str);\n                 try {\n-                    NumberFormat nf = locale == null ? NumberFormat.getNumberInstance() : NumberFormat.getNumberInstance(locale);\n+                    NumberFormat nf = NumberFormat.getNumberInstance(locale);\n                     nf.setMaximumFractionDigits(0);\n                     Number tempNum = nf.parse(str);\n \n@@ -536,7 +544,7 @@ public static Object simpleTypeConvert(Object obj, String type, String format, T\n             } else if (\"Integer\".equals(type) || \"java.lang.Integer\".equals(type)) {\n                 str = StringUtil.removeSpaces(str);\n                 try {\n-                    NumberFormat nf = locale == null ? NumberFormat.getNumberInstance() : NumberFormat.getNumberInstance(locale);\n+                    NumberFormat nf = NumberFormat.getNumberInstance(locale);\n                     nf.setMaximumFractionDigits(0);\n                     Number tempNum = nf.parse(str);\n \n@@ -547,9 +555,9 @@ public static Object simpleTypeConvert(Object obj, String type, String format, T\n             } else if (\"Date\".equals(type) || \"java.sql.Date\".equals(type)) {\n                 DateFormat df = null;\n                 if (format == null || format.length() == 0) {\n-                    df = UtilDateTime.toDateFormat(UtilDateTime.DATE_FORMAT, timeZone, null);\n+                    df = UtilDateTime.toDateFormat(UtilDateTime.DATE_FORMAT, timeZone, locale);\n                 } else {\n-                    df = UtilDateTime.toDateFormat(format, timeZone, null);\n+                    df = UtilDateTime.toDateFormat(format, timeZone, locale);\n                 }\n                 try {\n                     Date fieldDate = df.parse(str);\n@@ -560,9 +568,9 @@ public static Object simpleTypeConvert(Object obj, String type, String format, T\n             } else if (\"Time\".equals(type) || \"java.sql.Time\".equals(type)) {\n                 DateFormat df = null;\n                 if (format == null || format.length() == 0) {\n-                    df = UtilDateTime.toTimeFormat(UtilDateTime.TIME_FORMAT, timeZone, null);\n+                    df = UtilDateTime.toTimeFormat(UtilDateTime.TIME_FORMAT, timeZone, locale);\n                 } else {\n-                    df = UtilDateTime.toTimeFormat(format, timeZone, null);\n+                    df = UtilDateTime.toTimeFormat(format, timeZone, locale);\n                 }\n                 try {\n                     Date fieldDate = df.parse(str);\n@@ -573,7 +581,7 @@ public static Object simpleTypeConvert(Object obj, String type, String format, T\n             } else if (\"Timestamp\".equals(type) || \"java.sql.Timestamp\".equals(type)) {\n                 DateFormat df = null;\n                 if (format == null || format.length() == 0) {\n-                    df = UtilDateTime.toDateTimeFormat(UtilDateTime.DATE_TIME_FORMAT, timeZone, null);\n+                    df = UtilDateTime.toDateTimeFormat(UtilDateTime.DATE_TIME_FORMAT, timeZone, locale);\n                     // if time is missing add zeros\n                     if (str.length() > 0 && !str.contains(\":\")) {\n                     \tstr = str + \" 00:00:00.00\";\n@@ -591,7 +599,7 @@ public static Object simpleTypeConvert(Object obj, String type, String format, T\n                         }\n                     }\n                 } else {\n-                    df = UtilDateTime.toDateTimeFormat(format, timeZone, null);\n+                    df = UtilDateTime.toDateTimeFormat(format, timeZone, locale);\n                 }\n                 try {\n                     Date fieldDate = df.parse(str);\n@@ -626,7 +634,7 @@ public static Object simpleTypeConvert(Object obj, String type, String format, T\n             Double dbl = (Double) obj;\n \n             if (\"String\".equals(type) || \"java.lang.String\".equals(type)) {\n-                NumberFormat nf = locale == null ? NumberFormat.getNumberInstance() : NumberFormat.getNumberInstance(locale);\n+                NumberFormat nf = NumberFormat.getNumberInstance(locale);\n                 return nf.format(dbl.doubleValue());\n             } else if (\"BigDecimal\".equals(type) || \"java.math.BigDecimal\".equals(type)) {\n                 return new BigDecimal(dbl.doubleValue());\n@@ -654,7 +662,7 @@ public static Object simpleTypeConvert(Object obj, String type, String format, T\n             Float flt = (Float) obj;\n \n             if (\"String\".equals(type)) {\n-                NumberFormat nf = locale == null ? NumberFormat.getNumberInstance() : NumberFormat.getNumberInstance(locale);\n+                NumberFormat nf = NumberFormat.getNumberInstance(locale);\n                 return nf.format(flt.doubleValue());\n             } else if (\"BigDecimal\".equals(type) || \"java.math.BigDecimal\".equals(type)) {\n                 return new BigDecimal(flt.doubleValue());\n@@ -682,7 +690,7 @@ public static Object simpleTypeConvert(Object obj, String type, String format, T\n             Long lng = (Long) obj;\n \n             if (\"String\".equals(type) || \"java.lang.String\".equals(type)) {\n-                NumberFormat nf = locale == null ? NumberFormat.getNumberInstance() : NumberFormat.getNumberInstance(locale);\n+                NumberFormat nf = NumberFormat.getNumberInstance(locale);\n                 return nf.format(lng.longValue());\n             } else if (\"BigDecimal\".equals(type) || \"java.math.BigDecimal\".equals(type)) {\n                 return BigDecimal.valueOf(lng.longValue());\n@@ -709,7 +717,7 @@ public static Object simpleTypeConvert(Object obj, String type, String format, T\n             fromType = \"Integer\";\n             Integer intgr = (Integer) obj;\n             if (\"String\".equals(type) || \"java.lang.String\".equals(type)) {\n-                NumberFormat nf = locale == null ? NumberFormat.getNumberInstance() : NumberFormat.getNumberInstance(locale);\n+                NumberFormat nf = NumberFormat.getNumberInstance(locale);\n                 return nf.format(intgr.longValue());\n             } else if (\"BigDecimal\".equals(type) || \"java.math.BigDecimal\".equals(type)) {\n                 return BigDecimal.valueOf(intgr.longValue());\n@@ -736,7 +744,7 @@ public static Object simpleTypeConvert(Object obj, String type, String format, T\n             fromType = \"BigDecimal\";\n             BigDecimal bigDec = (BigDecimal) obj;\n             if (\"String\".equals(type) || \"java.lang.String\".equals(type)) {\n-                NumberFormat nf = locale == null ? NumberFormat.getNumberInstance() : NumberFormat.getNumberInstance(locale);\n+                NumberFormat nf = NumberFormat.getNumberInstance(locale);\n                 return nf.format(bigDec.doubleValue());\n             } else if (\"BigDecimal\".equals(type) || \"java.math.BigDecimal\".equals(type)) {\n                 return obj;\n@@ -765,9 +773,9 @@ public static Object simpleTypeConvert(Object obj, String type, String format, T\n             if (\"String\".equals(type) || \"java.lang.String\".equals(type)) {\n                 DateFormat df = null;\n                 if (format == null || format.length() == 0) {\n-                    df = UtilDateTime.toDateFormat(UtilDateTime.DATE_FORMAT, timeZone, null);\n+                    df = UtilDateTime.toDateFormat(UtilDateTime.DATE_FORMAT, timeZone, locale);\n                 } else {\n-                    df = UtilDateTime.toDateFormat(format, timeZone, null);\n+                    df = UtilDateTime.toDateFormat(format, timeZone, locale);\n                 }\n                 return df.format(new java.util.Date(dte.getTime()));\n             } else if (\"Date\".equals(type) || \"java.sql.Date\".equals(type)) {\n@@ -794,9 +802,9 @@ public static Object simpleTypeConvert(Object obj, String type, String format, T\n             if (\"String\".equals(type) || \"java.lang.String\".equals(type)) {\n                 DateFormat df = null;\n                 if (format == null || format.length() == 0) {\n-                    df = UtilDateTime.toTimeFormat(UtilDateTime.TIME_FORMAT, timeZone, null);\n+                    df = UtilDateTime.toTimeFormat(UtilDateTime.TIME_FORMAT, timeZone, locale);\n                 } else {\n-                    df = UtilDateTime.toTimeFormat(format, timeZone, null);\n+                    df = UtilDateTime.toTimeFormat(format, timeZone, locale);\n                 }\n                 return df.format(new java.util.Date(tme.getTime()));\n             } else if (\"Date\".equals(type) || \"java.sql.Date\".equals(type)) {\n@@ -823,9 +831,9 @@ public static Object simpleTypeConvert(Object obj, String type, String format, T\n             if (\"String\".equals(type) || \"java.lang.String\".equals(type)) {\n                 DateFormat df = null;\n                 if (format == null || format.length() == 0) {\n-                    df = UtilDateTime.toDateTimeFormat(UtilDateTime.DATE_TIME_FORMAT, timeZone, null);\n+                    df = UtilDateTime.toDateTimeFormat(UtilDateTime.DATE_TIME_FORMAT, timeZone, locale);\n                 } else {\n-                    df = UtilDateTime.toDateTimeFormat(format, timeZone, null);\n+                    df = UtilDateTime.toDateTimeFormat(format, timeZone, locale);\n                 }\n                 return df.format(new java.util.Date(tme.getTime()));\n             } else if (\"Date\".equals(type) || \"java.sql.Date\".equals(type)) {",
                "raw_url": "https://github.com/apache/ofbiz-framework/raw/8074d39e801a41deb46b2f7f851fceaebd4900f3/framework/base/src/base/org/ofbiz/base/util/ObjectType.java",
                "sha": "39a2814f4c3799aac01bf537c1674b75d8ec9bd2",
                "status": "modified"
            }
        ],
        "message": "Fix for NPE reported by Jacopo on the dev mailing list.\n\ngit-svn-id: https://svn.apache.org/repos/asf/ofbiz/trunk@662825 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/ofbiz-framework/commit/fc6e672d817d02c0ae432769b8ce485989dbe8b9",
        "repo": "ofbiz-framework",
        "unit_tests": [
            "ObjectTypeTests.java"
        ]
    },
    "ofbiz-framework_8266a36": {
        "bug_id": "ofbiz-framework_8266a36",
        "commit": "https://github.com/apache/ofbiz-framework/commit/8266a36101f0386aba28ee5b5c4f2b22ac36e0a0",
        "file": [
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/ofbiz-framework/blob/8266a36101f0386aba28ee5b5c4f2b22ac36e0a0/framework/base/src/org/ofbiz/base/util/UtilHttp.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/ofbiz-framework/contents/framework/base/src/org/ofbiz/base/util/UtilHttp.java?ref=8266a36101f0386aba28ee5b5c4f2b22ac36e0a0",
                "deletions": 1,
                "filename": "framework/base/src/org/ofbiz/base/util/UtilHttp.java",
                "patch": "@@ -113,7 +113,7 @@\n      */\n     public static Map<String, Object> getParameterMap(HttpServletRequest request, Set<? extends String> nameSet, Boolean onlyIncludeOrSkip) {\n         boolean onlyIncludeOrSkipPrim = onlyIncludeOrSkip == null ? true : onlyIncludeOrSkip.booleanValue();\n-        Map<String, Object> paramMap = FastMap.newInstance();\n+        Map<String, Object> paramMap = new HashMap<String, Object>();\n \n         // add all the actual HTTP request parameters\n         Enumeration<String> e = UtilGenerics.cast(request.getParameterNames());",
                "raw_url": "https://github.com/apache/ofbiz-framework/raw/8266a36101f0386aba28ee5b5c4f2b22ac36e0a0/framework/base/src/org/ofbiz/base/util/UtilHttp.java",
                "sha": "5a50d497fb3f0bb16342c49f559f38b76c518f72",
                "status": "modified"
            }
        ],
        "message": "\"Login out on a cluster handled by DeltaManager causes a NPE\" https://issues.apache.org/jira/browse/OFBIZ-4289\n\nUses a HashMap instead of a FastMap here because else we get this kind of error when OFBiz is shut down:\n\n2012-06-12 10:35:29,921 (OFBiz_Shutdown_Hook) [ StandardSession.java:1567:WARN ] Cannot serialize session attribute LAST_VIEW_PARAMS for session 00C48D0D76821C98403482FAE8B77C24.jvm1\njava.io.NotSerializableException: net.sf.json.JSONObject\nat java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1164)\nat java.io.ObjectOutputStream.writeObject(ObjectOutputStream.java:330)\nat javolution.util.FastMap.writeObject(FastMap.java:1513)\n\nNote: to test the above you need to set apps-distributable to true and put some <distributable/> in the web.xml files of the applications to test\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/ofbiz/trunk@1355660 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/ofbiz-framework/commit/c386b7fc9a8d61923efb9bbd2e472d1cac3d8a6f",
        "repo": "ofbiz-framework",
        "unit_tests": [
            "UtilHttpTest.java"
        ]
    },
    "ofbiz-framework_8448021": {
        "bug_id": "ofbiz-framework_8448021",
        "commit": "https://github.com/apache/ofbiz-framework/commit/84480216700b26a02dd1ed826cf771c27f75bd5c",
        "file": [
            {
                "additions": 13,
                "blob_url": "https://github.com/apache/ofbiz-framework/blob/84480216700b26a02dd1ed826cf771c27f75bd5c/framework/webapp/src/org/ofbiz/webapp/control/RequestHandler.java",
                "changes": 28,
                "contents_url": "https://api.github.com/repos/apache/ofbiz-framework/contents/framework/webapp/src/org/ofbiz/webapp/control/RequestHandler.java?ref=84480216700b26a02dd1ed826cf771c27f75bd5c",
                "deletions": 15,
                "filename": "framework/webapp/src/org/ofbiz/webapp/control/RequestHandler.java",
                "patch": "@@ -327,22 +327,20 @@ public void doRequest(HttpServletRequest request, HttpServletResponse response,\n \n         // restore previous redirected request's attribute, so redirected page can display previous request's error msg etc.\n         String preReqAttStr = (String) request.getSession().getAttribute(\"_REQ_ATTR_MAP_\");\n-        Map preRequestMap;\n         if (preReqAttStr != null) {\n             request.getSession().removeAttribute(\"_REQ_ATTR_MAP_\");\n-            byte [] reqAttrMapBytes = StringUtil.fromHexString(preReqAttStr);\n-            preRequestMap = (java.util.Map)org.ofbiz.base.util.UtilObject.getObject(reqAttrMapBytes);\n-            java.util.Iterator keys= preRequestMap.keySet().iterator();\n-            while(keys.hasNext()){\n-                String key = (String) keys.next();\n-                if(\"_ERROR_MESSAGE_LIST_\".equals(key) ||\n-                        \"_ERROR_MESSAGE_MAP_\".equals(key) ||\n-                        \"_ERROR_MESSAGE_\".equals(key) ||\n-                        \"_EVENT_MESSAGE_LIST_\".equals(key) ||\n-                        \"_EVENT_MESSAGE_\".equals(key)){\n-                    Object value = preRequestMap.get(key);\n-                    request.setAttribute(key, value);\n-               }\n+            byte[] reqAttrMapBytes = StringUtil.fromHexString(preReqAttStr);\n+            Map preRequestMap = (Map) UtilObject.getObject(reqAttrMapBytes);\n+            if (preRequestMap != null && preRequestMap.size() > 0) {\n+                Iterator keys = preRequestMap.keySet().iterator();\n+                while (keys.hasNext()){\n+                    String key = (String) keys.next();\n+                    if(\"_ERROR_MESSAGE_LIST_\".equals(key) || \"_ERROR_MESSAGE_MAP_\".equals(key) || \"_ERROR_MESSAGE_\".equals(key) ||\n+                            \"_EVENT_MESSAGE_LIST_\".equals(key) || \"_EVENT_MESSAGE_\".equals(key)) {\n+                        Object value = preRequestMap.get(key);\n+                        request.setAttribute(key, value);\n+                   }\n+                }\n             }\n         }\n \n@@ -384,7 +382,7 @@ public void doRequest(HttpServletRequest request, HttpServletResponse response,\n         } else { // handle views\n             // first invoke the post-processor events.\n             Collection postProcEvents = requestManager.getPostProcessor();\n-            if (postProcEvents != null) {\n+            if (chain == null && postProcEvents != null) { // don't run post-proc events on chained requests\n                 Iterator i = postProcEvents.iterator();\n \n                 while (i.hasNext()) {",
                "raw_url": "https://github.com/apache/ofbiz-framework/raw/84480216700b26a02dd1ed826cf771c27f75bd5c/framework/webapp/src/org/ofbiz/webapp/control/RequestHandler.java",
                "sha": "2355733d92052de4d72185b961a9ec9d9636c9b0",
                "status": "modified"
            }
        ],
        "message": "fixed a few possible NPE; stopped post-proc from looping\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/ofbiz/trunk@541931 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/ofbiz-framework/commit/b6ee74c3ed90f28551ffc59ba90f042e3861bf99",
        "repo": "ofbiz-framework",
        "unit_tests": [
            "RequestHandlerTests.java"
        ]
    },
    "ofbiz-framework_8c6f5de": {
        "bug_id": "ofbiz-framework_8c6f5de",
        "commit": "https://github.com/apache/ofbiz-framework/commit/8c6f5defdfabd91403ed19730c1b14feac313cb7",
        "file": [
            {
                "additions": 3,
                "blob_url": "https://github.com/apache/ofbiz-framework/blob/8c6f5defdfabd91403ed19730c1b14feac313cb7/framework/widget/src/org/ofbiz/widget/form/ModelFormField.java",
                "changes": 3,
                "contents_url": "https://api.github.com/repos/apache/ofbiz-framework/contents/framework/widget/src/org/ofbiz/widget/form/ModelFormField.java?ref=8c6f5defdfabd91403ed19730c1b14feac313cb7",
                "deletions": 0,
                "filename": "framework/widget/src/org/ofbiz/widget/form/ModelFormField.java",
                "patch": "@@ -1735,6 +1735,9 @@ public void addOptionValues(List<OptionValue> optionValues, Map<String, Object>\n                 List<EntityCondition> expandedConditionList = new LinkedList<EntityCondition>();\n                 for (EntityFinderUtil.Condition condition: constraintList) {\n                     ModelEntity modelEntity = delegator.getModelEntity(this.entityName);\n+                    if (modelEntity == null) {\n+                        throw new IllegalArgumentException(\"Error in entity-options: could not find entity [\" + this.entityName + \"]\");\n+                    }\n                     expandedConditionList.add(condition.createCondition(context, modelEntity, delegator.getModelFieldTypeReader(modelEntity)));\n                 }\n                 findCondition = EntityCondition.makeCondition(expandedConditionList);",
                "raw_url": "https://github.com/apache/ofbiz-framework/raw/8c6f5defdfabd91403ed19730c1b14feac313cb7/framework/widget/src/org/ofbiz/widget/form/ModelFormField.java",
                "sha": "57dfc67b126cf3aceb556fc8fcb8bf6ca945677f",
                "status": "modified"
            }
        ],
        "message": "Added error message for when entity name is wrong instead of an NPE\n\ngit-svn-id: https://svn.apache.org/repos/asf/ofbiz/trunk@1004343 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/ofbiz-framework/commit/d5c20ce0bb60700a969c6daa461a70bcfc61d18d",
        "repo": "ofbiz-framework",
        "unit_tests": [
            "ModelFormFieldTest.java"
        ]
    },
    "ofbiz-framework_ab86593": {
        "bug_id": "ofbiz-framework_ab86593",
        "commit": "https://github.com/apache/ofbiz-framework/commit/ab865939f0b7293d674811a6f9a4acd3d67f0876",
        "file": [
            {
                "additions": 4,
                "blob_url": "https://github.com/apache/ofbiz-framework/blob/ab865939f0b7293d674811a6f9a4acd3d67f0876/framework/widget/src/org/ofbiz/widget/form/ModelFormField.java",
                "changes": 5,
                "contents_url": "https://api.github.com/repos/apache/ofbiz-framework/contents/framework/widget/src/org/ofbiz/widget/form/ModelFormField.java?ref=ab865939f0b7293d674811a6f9a4acd3d67f0876",
                "deletions": 1,
                "filename": "framework/widget/src/org/ofbiz/widget/form/ModelFormField.java",
                "patch": "@@ -1587,7 +1587,10 @@ public void addOptionValues(List<OptionValue> optionValues, Map<String, Object>\n                     if (modelEntity == null) {\n                         throw new IllegalArgumentException(\"Error in entity-options: could not find entity [\" + this.entityName + \"]\");\n                     }\n-                    expandedConditionList.add(condition.createCondition(context, modelEntity, delegator.getModelFieldTypeReader(modelEntity)));\n+                    EntityCondition createdCondition = condition.createCondition(context, modelEntity, delegator.getModelFieldTypeReader(modelEntity));\n+                    if (createdCondition!=null) {\n+                        expandedConditionList.add(createdCondition);\n+                    }\n                 }\n                 findCondition = EntityCondition.makeCondition(expandedConditionList);\n             }",
                "raw_url": "https://github.com/apache/ofbiz-framework/raw/ab865939f0b7293d674811a6f9a4acd3d67f0876/framework/widget/src/org/ofbiz/widget/form/ModelFormField.java",
                "sha": "8c06027c8a573f1ded0ce755932919bb60c099b7",
                "status": "modified"
            }
        ],
        "message": "A patch from Daniel Riquelme \"ignore-if-empty in entity-options throw NPE when env-name is in fact empty\" https://issues.apache.org/jira/browse/OFBIZ-4843\n\nWhen specifying the ignore-if-empty attribute inside an entity-constraint in an entity-options a NPE will be thrown whenever the env-name of this entity-constraint is empty.\n\nThe error occurs because a null condition is created for the entity-constraint.\nWhen validateSql get called in\n\norg.ofbiz.entity.condition.EntityJoinOperator.validateSql(EntityJoinOperator.java:178)\n\nthere is no null checking so when\n\ncondition.checkCondition(modelEntity);\n\ngets called an NPE is thrown.\n\nThe patch modifies the code in\n\nframework/widget/src/org/ofbiz/widget/form/ModelFormField.java\n\nto avoid the inclusion of a null condition to the entity-options.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/ofbiz/trunk@1340826 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/ofbiz-framework/commit/4395b7967d3083d2a883f4a55f6262dccfbd1904",
        "repo": "ofbiz-framework",
        "unit_tests": [
            "ModelFormFieldTest.java"
        ]
    },
    "ofbiz-framework_b08bfae": {
        "bug_id": "ofbiz-framework_b08bfae",
        "commit": "https://github.com/apache/ofbiz-framework/commit/b08bfae6e32227f9a4367d057a41b0910ef0bb4d",
        "file": [
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/ofbiz-framework/blob/b08bfae6e32227f9a4367d057a41b0910ef0bb4d/applications/accounting/widget/BillingAccountForms.xml",
                "changes": 4,
                "contents_url": "https://api.github.com/repos/apache/ofbiz-framework/contents/applications/accounting/widget/BillingAccountForms.xml?ref=b08bfae6e32227f9a4367d057a41b0910ef0bb4d",
                "deletions": 2,
                "filename": "applications/accounting/widget/BillingAccountForms.xml",
                "patch": "@@ -46,7 +46,7 @@ under the License.\n         <field name=\"fromDate\"><display/></field>\n         <field name=\"thruDate\"><display/></field>\n         <field name=\"partyId\"><display/></field>\n-        <field name=\"roleTypeId\"><display-entity entity-name=\"RoleType\"/></field>\n+        <field name=\"roleTypeId\" title=\"${uiLabelMap.AccountingRoleType}\"><display-entity entity-name=\"RoleType\"/></field>\n     </form>\n \n     <form name=\"ListBillingAccountInvoices\" type=\"list\" list-name=\"billingAccountInvoices\" paginate-target=\"BillingAccountInvoices\" default-entity-name=\"Invoice\"\n@@ -100,7 +100,7 @@ under the License.\n     <form name=\"EditBillingAccount\" type=\"single\" target=\"updateBillingAccount\" title=\"\"\n         header-row-style=\"header-row\" default-table-style=\"basic-table\">\n         <actions>\n-            <set field=\"availableBalance\" value=\"${bsh:org.ofbiz.accounting.payment.BillingAccountWorker.getBillingAccountBalance(billingAccount)}\" type=\"BigDecimal\"/>\n+            <set field=\"availableBalance\" value=\"${bsh:billingAccount != null ? org.ofbiz.accounting.payment.BillingAccountWorker.getBillingAccountBalance(billingAccount) : 0}\" type=\"BigDecimal\"/>\n         </actions>\n         <alt-target use-when=\"billingAccount==null\" target=\"createBillingAccount\"/>\n         <auto-fields-service service-name=\"updateBillingAccount\" map-name=\"billingAccount\"/>",
                "raw_url": "https://github.com/apache/ofbiz-framework/raw/b08bfae6e32227f9a4367d057a41b0910ef0bb4d/applications/accounting/widget/BillingAccountForms.xml",
                "sha": "3c2e6519e8a8328a369ba30aba884371fffcb39e",
                "status": "modified"
            },
            {
                "additions": 5,
                "blob_url": "https://github.com/apache/ofbiz-framework/blob/b08bfae6e32227f9a4367d057a41b0910ef0bb4d/framework/base/src/base/org/ofbiz/base/util/string/FlexibleStringExpander.java",
                "changes": 10,
                "contents_url": "https://api.github.com/repos/apache/ofbiz-framework/contents/framework/base/src/base/org/ofbiz/base/util/string/FlexibleStringExpander.java?ref=b08bfae6e32227f9a4367d057a41b0910ef0bb4d",
                "deletions": 5,
                "filename": "framework/base/src/base/org/ofbiz/base/util/string/FlexibleStringExpander.java",
                "patch": "@@ -290,10 +290,10 @@ public void appendElement(StringBuilder buffer, Map<String, ? extends Object> co\n                         buffer.append(scriptResult);\n                     }\n                 } else {\n-                    Debug.logWarning(\"BSH scriplet evaluated to null [\" + scriptlet + \"], got no return so inserting nothing.\", module);\n+                    Debug.logWarning(\"BSH scriptlet evaluated to null [\" + scriptlet + \"], got no return so inserting nothing.\", module);\n                 }\n             } catch (EvalError e) {\n-                Debug.logWarning(e, \"Error evaluating BSH scriplet [\" + scriptlet + \"], inserting nothing; error was: \" + e.toString(), module);\n+                Debug.logWarning(e, \"Error evaluating BSH scriptlet [\" + scriptlet + \"], inserting nothing; error was: \" + e.toString(), module);\n             }\n         }\n     }\n@@ -407,7 +407,7 @@ public void handleVariable(String original, int start, int end) {\n         }\n \n         public void handleBsh(String original, int start, int end) {\n-            //run the scriplet and append the result\n+            //run the scriptlet and append the result\n             String scriptlet = original.substring(start, end);\n             try {\n                 Object scriptResult = BshUtil.eval(scriptlet, UtilMisc.makeMapWritable(context));\n@@ -418,10 +418,10 @@ public void handleBsh(String original, int start, int end) {\n                         targetBuffer.append(scriptResult);\n                     }\n                 } else {\n-                    Debug.logWarning(\"BSH scriplet evaluated to null [\" + scriptlet + \"], got no return so inserting nothing.\", module);\n+                    Debug.logWarning(\"BSH scriptlet evaluated to null [\" + scriptlet + \"], got no return so inserting nothing.\", module);\n                 }\n             } catch (EvalError e) {\n-                Debug.logWarning(e, \"Error evaluating BSH scriplet [\" + scriptlet + \"], inserting nothing; error was: \" + e.toString(), module);\n+                Debug.logWarning(e, \"Error evaluating BSH scriptlet [\" + scriptlet + \"], inserting nothing; error was: \" + e.toString(), module);\n             }\n         }\n     }",
                "raw_url": "https://github.com/apache/ofbiz-framework/raw/b08bfae6e32227f9a4367d057a41b0910ef0bb4d/framework/base/src/base/org/ofbiz/base/util/string/FlexibleStringExpander.java",
                "sha": "547f4f67e52cb2b66438e5263c1f7f48417d25cf",
                "status": "modified"
            }
        ],
        "message": "Fix an NPE, some typos and a label\n\ngit-svn-id: https://svn.apache.org/repos/asf/ofbiz/trunk@670108 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/ofbiz-framework/commit/9f5f3c9fe7c276838f3ee20b9003aa0eea84c69b",
        "repo": "ofbiz-framework",
        "unit_tests": [
            "FlexibleStringExpanderTests.java"
        ]
    },
    "ofbiz-framework_b23cbb3": {
        "bug_id": "ofbiz-framework_b23cbb3",
        "commit": "https://github.com/apache/ofbiz-framework/commit/b23cbb323ede90e267ab1c002314b3f3f7e2abf3",
        "file": [
            {
                "additions": 3,
                "blob_url": "https://github.com/apache/ofbiz-framework/blob/b23cbb323ede90e267ab1c002314b3f3f7e2abf3/framework/widget/src/org/ofbiz/widget/form/ModelFormField.java",
                "changes": 6,
                "contents_url": "https://api.github.com/repos/apache/ofbiz-framework/contents/framework/widget/src/org/ofbiz/widget/form/ModelFormField.java?ref=b23cbb323ede90e267ab1c002314b3f3f7e2abf3",
                "deletions": 3,
                "filename": "framework/widget/src/org/ofbiz/widget/form/ModelFormField.java",
                "patch": "@@ -114,7 +114,7 @@\n     protected boolean separateColumn = false;\n     protected Boolean requiredField = null;\n     protected Boolean sortField = null;\n-    protected String sortFieldHelpText;\n+    protected String sortFieldHelpText = \"\";\n     protected String headerLink;\n     protected String headerLinkStyle;\n \n@@ -124,7 +124,7 @@\n     protected List<UpdateArea> onClickUpdateAreas;\n \n     // ===== CONSTRUCTORS =====\n-    /** Copy Constructor */\n+    /** Default Constructor */\n     public ModelFormField(ModelForm modelForm) {\n         this.modelForm = modelForm;\n     }\n@@ -244,7 +244,7 @@ public void mergeOverrideModelFormField(ModelFormField overrideFormField) {\n         if (UtilValidate.isNotEmpty(overrideFormField.tooltip)) this.tooltip = overrideFormField.tooltip;\n         if (overrideFormField.requiredField != null) this.requiredField = overrideFormField.requiredField;\n         if (overrideFormField.sortField != null) this.sortField = overrideFormField.sortField;\n-        if (!overrideFormField.sortFieldHelpText.isEmpty()) this.sortFieldHelpText = overrideFormField.sortFieldHelpText;\n+        if (UtilValidate.isNotEmpty(overrideFormField.sortFieldHelpText)) this.sortFieldHelpText = overrideFormField.sortFieldHelpText;\n         if (UtilValidate.isNotEmpty(overrideFormField.titleAreaStyle)) this.titleAreaStyle = overrideFormField.titleAreaStyle;\n         if (UtilValidate.isNotEmpty(overrideFormField.widgetAreaStyle)) this.widgetAreaStyle = overrideFormField.widgetAreaStyle;\n         if (UtilValidate.isNotEmpty(overrideFormField.titleStyle)) this.titleStyle = overrideFormField.titleStyle;",
                "raw_url": "https://github.com/apache/ofbiz-framework/raw/b23cbb323ede90e267ab1c002314b3f3f7e2abf3/framework/widget/src/org/ofbiz/widget/form/ModelFormField.java",
                "sha": "5a8ddf4a8be35002c1da084c67fd12f74ad0a2b3",
                "status": "modified"
            }
        ],
        "message": "Fix for NPE introduced in rev 1494057, reported by Ankit Jain on the dev mailing list.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/ofbiz/trunk@1494668 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/ofbiz-framework/commit/19ff1cb3937acda94357e8e6fee2ad038981156b",
        "repo": "ofbiz-framework",
        "unit_tests": [
            "ModelFormFieldTest.java"
        ]
    },
    "ofbiz-framework_eb425ac": {
        "bug_id": "ofbiz-framework_eb425ac",
        "commit": "https://github.com/apache/ofbiz-framework/commit/eb425ac4478c2f804fdb3319cc2689005b1c423c",
        "file": [
            {
                "additions": 10,
                "blob_url": "https://github.com/apache/ofbiz-framework/blob/eb425ac4478c2f804fdb3319cc2689005b1c423c/framework/base/src/org/ofbiz/base/util/string/FlexibleStringExpander.java",
                "changes": 16,
                "contents_url": "https://api.github.com/repos/apache/ofbiz-framework/contents/framework/base/src/org/ofbiz/base/util/string/FlexibleStringExpander.java?ref=eb425ac4478c2f804fdb3319cc2689005b1c423c",
                "deletions": 6,
                "filename": "framework/base/src/org/ofbiz/base/util/string/FlexibleStringExpander.java",
                "patch": "@@ -120,18 +120,22 @@ public String expandString(Map<String, ? extends Object> context, TimeZone timeZ\n             return this.orig == null ? \"\" : this.orig;\n         }\n         if (locale == null) {\n-            locale = (Locale) context.get(\"locale\");\n-            if (locale == null && context.containsKey(\"autoUserLogin\")) {\n-                locale = UtilMisc.ensureLocale(((Map) context.get(\"autoUserLogin\")).get(\"lastLocale\"));\n+            if (context != null) {\n+                locale = (Locale) context.get(\"locale\");\n+                if (locale == null && context.containsKey(\"autoUserLogin\")) {\n+                    locale = UtilMisc.ensureLocale(((Map) context.get(\"autoUserLogin\")).get(\"lastLocale\"));\n+                }\n             }\n             if (locale == null) {\n                 locale = Locale.getDefault();\n             }\n         }\n         if (timeZone == null) {\n-            timeZone = (TimeZone) context.get(\"timeZone\");\n-            if (timeZone == null && context.containsKey(\"autoUserLogin\")) {\n-                timeZone = UtilDateTime.toTimeZone((String)((Map) context.get(\"autoUserLogin\")).get(\"lastTimeZone\"));\n+            if (context != null) {\n+                timeZone = (TimeZone) context.get(\"timeZone\");\n+                if (timeZone == null && context.containsKey(\"autoUserLogin\")) {\n+                    timeZone = UtilDateTime.toTimeZone((String)((Map) context.get(\"autoUserLogin\")).get(\"lastTimeZone\"));\n+                }\n             }\n             if (timeZone == null) {\n                 timeZone = TimeZone.getDefault();",
                "raw_url": "https://github.com/apache/ofbiz-framework/raw/eb425ac4478c2f804fdb3319cc2689005b1c423c/framework/base/src/org/ofbiz/base/util/string/FlexibleStringExpander.java",
                "sha": "fa8f3ee3c1b1c47625f66516c26257fa1fc4b463",
                "status": "modified"
            }
        ],
        "message": "NPE fix\n\ngit-svn-id: https://svn.apache.org/repos/asf/ofbiz/trunk@688296 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/ofbiz-framework/commit/61db4e6370c080f8a1c662360801be4035915768",
        "repo": "ofbiz-framework",
        "unit_tests": [
            "FlexibleStringExpanderTests.java"
        ]
    },
    "ofbiz-framework_eb773c6": {
        "bug_id": "ofbiz-framework_eb773c6",
        "commit": "https://github.com/apache/ofbiz-framework/commit/eb773c62c06b7d1b47dd56a6ae4d3e33f9e681db",
        "file": [
            {
                "additions": 10,
                "blob_url": "https://github.com/apache/ofbiz-framework/blob/eb773c62c06b7d1b47dd56a6ae4d3e33f9e681db/framework/base/src/base/org/ofbiz/base/util/collections/FlexibleMapAccessor.java",
                "changes": 17,
                "contents_url": "https://api.github.com/repos/apache/ofbiz-framework/contents/framework/base/src/base/org/ofbiz/base/util/collections/FlexibleMapAccessor.java?ref=eb773c62c06b7d1b47dd56a6ae4d3e33f9e681db",
                "deletions": 7,
                "filename": "framework/base/src/base/org/ofbiz/base/util/collections/FlexibleMapAccessor.java",
                "patch": "@@ -214,14 +214,17 @@ public void put(Map base, Object value) {\n                 lst = FastList.newInstance();\n                 base.put(this.extName, lst);\n             }\n-            //if brackets are empty, append to list\n-            if (this.isAddAtEnd) {\n-                lst.add(value);\n-            } else {\n-                if (this.isAddAtIndex) {\n-                    lst.add(this.listIndex, value);\n+            //if brackets are empty, append to list, but only if it's not null (avoid NPEs with FastList)\n+            if (value != null) {\n+            \t// note that we are checking for null AFTER checking/creating the list itself, so that it will exist after referenced the first time\n+                if (this.isAddAtEnd) {\n+                    lst.add(value);\n                 } else {\n-                    lst.set(this.listIndex, value);\n+                    if (this.isAddAtIndex) {\n+                        lst.add(this.listIndex, value);\n+                    } else {\n+                        lst.set(this.listIndex, value);\n+                    }\n                 }\n             }\n         } else {",
                "raw_url": "https://github.com/apache/ofbiz-framework/raw/eb773c62c06b7d1b47dd56a6ae4d3e33f9e681db/framework/base/src/base/org/ofbiz/base/util/collections/FlexibleMapAccessor.java",
                "sha": "a105053883c1d9799c2dc76d3e00d6ca00ff046b",
                "status": "modified"
            }
        ],
        "message": "Small change to not add null values to lists, will always throw an NPE\n\ngit-svn-id: https://svn.apache.org/repos/asf/ofbiz/trunk@589967 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/ofbiz-framework/commit/425a271552adf3975f945cb7b5c61c93208375fa",
        "repo": "ofbiz-framework",
        "unit_tests": [
            "FlexibleMapAccessorTests.java"
        ]
    },
    "ofbiz-framework_eff5f89": {
        "bug_id": "ofbiz-framework_eff5f89",
        "commit": "https://github.com/apache/ofbiz-framework/commit/eff5f89d3907edb6cd0294c6ae393319a6b07aa1",
        "file": [
            {
                "additions": 22,
                "blob_url": "https://github.com/apache/ofbiz-framework/blob/eff5f89d3907edb6cd0294c6ae393319a6b07aa1/framework/base/src/org/ofbiz/base/util/string/FlexibleStringExpander.java",
                "changes": 84,
                "contents_url": "https://api.github.com/repos/apache/ofbiz-framework/contents/framework/base/src/org/ofbiz/base/util/string/FlexibleStringExpander.java?ref=eff5f89d3907edb6cd0294c6ae393319a6b07aa1",
                "deletions": 62,
                "filename": "framework/base/src/org/ofbiz/base/util/string/FlexibleStringExpander.java",
                "patch": "@@ -77,25 +77,17 @@ public String getOriginal() {\n         return this.orig;\n     }\n \n-    /** \n-     * This expands the pre-parsed String given the context passed in. Note that\n-     * pre-parsing can only parse the top-level place-holders and if there are \n-     * nested expansions they will be done on the fly instead of pre-parsed because\n-     * they are dependent on the context which isn't known until expansion time.\n-     * \n+    /** This expands the pre-parsed String given the context passed in. A\n+     * null context argument will return the original String.\n      * @param context A context Map containing the variable values\n      * @return The original String expanded by replacing varaible place holders.\n      */    \n     public String expandString(Map<String, ? extends Object> context) {\n         return this.expandString(context, null, null);\n     }\n     \n-    /** \n-     * This expands the pre-parsed String given the context passed in. Note that\n-     * pre-parsing can only parse the top-level place-holders and if there are \n-     * nested expansions they will be done on the fly instead of pre-parsed because\n-     * they are dependent on the context which isn't known until expansion time.\n-     * \n+    /** This expands the pre-parsed String given the context passed in. A\n+     * null context argument will return the original String.\n      * @param context A context Map containing the variable values\n      * @param locale the current set locale\n      * @return The original String expanded by replacing varaible place holders.\n@@ -104,38 +96,30 @@ public String expandString(Map<String, ? extends Object> context, Locale locale)\n         return this.expandString(context, null, locale);\n     }\n     \n-    /** \n-     * This expands the pre-parsed String given the context passed in. Note that\n-     * pre-parsing can only parse the top-level place-holders and if there are \n-     * nested expansions they will be done on the fly instead of pre-parsed because\n-     * they are dependent on the context which isn't known until expansion time.\n-     * \n+    /** This expands the pre-parsed String given the context passed in. A\n+     * null context argument will return the original String.\n      * @param context A context Map containing the variable values\n      * @param timeZone the current set time zone\n      * @param locale the current set locale\n      * @return The original String expanded by replacing varaible place holders.\n      */    \n     public String expandString(Map<String, ? extends Object> context, TimeZone timeZone, Locale locale) {\n-        if (this.strElems == null) {\n+        if (this.strElems == null || context == null) {\n             return this.orig == null ? \"\" : this.orig;\n         }\n         if (locale == null) {\n-            if (context != null) {\n-                locale = (Locale) context.get(\"locale\");\n-                if (locale == null && context.containsKey(\"autoUserLogin\")) {\n-                    locale = UtilMisc.ensureLocale(((Map) context.get(\"autoUserLogin\")).get(\"lastLocale\"));\n-                }\n+            locale = (Locale) context.get(\"locale\");\n+            if (locale == null && context.containsKey(\"autoUserLogin\")) {\n+                locale = UtilMisc.ensureLocale(((Map) context.get(\"autoUserLogin\")).get(\"lastLocale\"));\n             }\n             if (locale == null) {\n                 locale = Locale.getDefault();\n             }\n         }\n         if (timeZone == null) {\n-            if (context != null) {\n-                timeZone = (TimeZone) context.get(\"timeZone\");\n-                if (timeZone == null && context.containsKey(\"autoUserLogin\")) {\n-                    timeZone = UtilDateTime.toTimeZone((String)((Map) context.get(\"autoUserLogin\")).get(\"lastTimeZone\"));\n-                }\n+            timeZone = (TimeZone) context.get(\"timeZone\");\n+            if (timeZone == null && context.containsKey(\"autoUserLogin\")) {\n+                timeZone = UtilDateTime.toTimeZone((String)((Map) context.get(\"autoUserLogin\")).get(\"lastTimeZone\"));\n             }\n             if (timeZone == null) {\n                 timeZone = TimeZone.getDefault();\n@@ -178,17 +162,9 @@ public static FlexibleStringExpander getInstance(String original) {\n         return fse;\n     }\n     \n-    /**\n-     * Does on-the-fly parsing and expansion of the original String using\n-     * varaible values from the passed context. Variables are denoted with\n-     * the \"${}\" syntax and the variable name inside the curly-braces can use\n-     * the \".\" (dot) syntax to access sub-Map entries and the \"[]\" square-brace\n-     * syntax to access List elements.\n-     * It Also supports the execution of bsh files by using the 'bsh:' prefix.\n-     * Further it is possible to control the output by specifying the suffix \n-     *     '?currency(XXX)' to format the output according the current locale\n-     *     and specified (XXX) currency\n-     * \n+    /** Does on-the-fly parsing and expansion of the original String using\n+     * variable values from the passed context. A null context argument will\n+     * return the original String.\n      * @param original The original String that will be expanded\n      * @param context A context Map containing the variable values\n      * @return The original String expanded by replacing varaible place holders.\n@@ -197,17 +173,9 @@ public static String expandString(String original, Map<String, ? extends Object>\n         return expandString(original, context, null, null);\n     }\n     \n-    /**\n-     * Does on-the-fly parsing and expansion of the original String using\n-     * varaible values from the passed context. Variables are denoted with\n-     * the \"${}\" syntax and the variable name inside the curly-braces can use\n-     * the \".\" (dot) syntax to access sub-Map entries and the \"[]\" square-brace\n-     * syntax to access List elements.\n-     * It Also supports the execution of bsh files by using the 'bsh:' prefix.\n-     * Further it is possible to control the output by specifying the suffix \n-     *     '?currency(XXX)' to format the output according the current locale\n-     *     and specified (XXX) currency\n-     * \n+    /** Does on-the-fly parsing and expansion of the original String using\n+     * variable values from the passed context. A null context argument will\n+     * return the original String.\n      * @param original The original String that will be expanded\n      * @param context A context Map containing the variable values\n      * @return The original String expanded by replacing varaible place holders.\n@@ -216,17 +184,9 @@ public static String expandString(String original, Map<String, ? extends Object>\n         return expandString(original, context, null, locale);\n     }\n     \n-    /**\n-     * Does on-the-fly parsing and expansion of the original String using\n-     * varaible values from the passed context. Variables are denoted with\n-     * the \"${}\" syntax and the variable name inside the curly-braces can use\n-     * the \".\" (dot) syntax to access sub-Map entries and the \"[]\" square-brace\n-     * syntax to access List elements.\n-     * It Also supports the execution of bsh files by using the 'bsh:' prefix.\n-     * Further it is possible to control the output by specifying the suffix \n-     *     '?currency(XXX)' to format the output according the current locale\n-     *     and specified (XXX) currency\n-     * \n+    /** Does on-the-fly parsing and expansion of the original String using\n+     * variable values from the passed context. A null context argument will\n+     * return the original String.\n      * @param original The original String that will be expanded\n      * @param context A context Map containing the variable values\n      * @return The original String expanded by replacing varaible place holders.",
                "raw_url": "https://github.com/apache/ofbiz-framework/raw/eff5f89d3907edb6cd0294c6ae393319a6b07aa1/framework/base/src/org/ofbiz/base/util/string/FlexibleStringExpander.java",
                "sha": "55f85d20d9d997ff8048893263e9c863f621f978",
                "status": "modified"
            }
        ],
        "message": "Simplified Scott's FlexibleStringExpander NPE fix and updated the JavaDocs.\n\nMany thanks to Scott for catching that, and many thanks to David Jones for his suggestions on the refactor.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/ofbiz/trunk@688348 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/ofbiz-framework/commit/a9fc92fcc4917e4ef3ab465462512496c5f26008",
        "repo": "ofbiz-framework",
        "unit_tests": [
            "FlexibleStringExpanderTests.java"
        ]
    },
    "ofbiz-framework_fd0c04b": {
        "bug_id": "ofbiz-framework_fd0c04b",
        "commit": "https://github.com/apache/ofbiz-framework/commit/fd0c04be7ac4344577cb55da8f127aa5677125b9",
        "file": [
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/ofbiz-framework/blob/fd0c04be7ac4344577cb55da8f127aa5677125b9/framework/base/src/base/org/ofbiz/base/util/string/FlexibleStringExpander.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/ofbiz-framework/contents/framework/base/src/base/org/ofbiz/base/util/string/FlexibleStringExpander.java?ref=fd0c04be7ac4344577cb55da8f127aa5677125b9",
                "deletions": 1,
                "filename": "framework/base/src/base/org/ofbiz/base/util/string/FlexibleStringExpander.java",
                "patch": "@@ -84,7 +84,7 @@ public String getOriginal() {\n      * @return The original String expanded by replacing varaible place holders.\n      */    \n     public String expandString(Map<String, ? extends Object> context) {\n-        return this.expandString(context, (Locale) context.get(\"locale\"));\n+        return this.expandString(context, context != null ? (Locale) context.get(\"locale\") : null);\n     }\n     \n     /** ",
                "raw_url": "https://github.com/apache/ofbiz-framework/raw/fd0c04be7ac4344577cb55da8f127aa5677125b9/framework/base/src/base/org/ofbiz/base/util/string/FlexibleStringExpander.java",
                "sha": "ce9b30ea15c6ed8c20378bfb52f6e5aafa9ef825",
                "status": "modified"
            }
        ],
        "message": "Fixed NPE introduced in a recent commit, reported by BJ Freeman\n\ngit-svn-id: https://svn.apache.org/repos/asf/ofbiz/trunk@658420 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/ofbiz-framework/commit/11acdcacc2cd76331398486f3f2dc6808e5f9e69",
        "repo": "ofbiz-framework",
        "unit_tests": [
            "FlexibleStringExpanderTests.java"
        ]
    }
}