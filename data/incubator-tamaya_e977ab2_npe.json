[
    {
        "repo": "incubator-tamaya",
        "commit": "https://github.com/apache/incubator-tamaya/commit/e977ab2e3add7d2eaae9923ee7339b65d47a8a3e",
        "bug_id": "incubator-tamaya_e977ab2",
        "message": "EnumConverter works with null values\n\nPreviously, EnumConverter would throw an NPE if passed a null value, but\nonly because of an attempted .toUpperCase() which didn't get caught.\nThis commit now passes null values through instead of throwing NPE.",
        "parent": "https://github.com/apache/incubator-tamaya/commit/21391fe59fefd3bb07ad1a3fe808214539ac1821",
        "patched_files": [
            "EnumConverter.java"
        ],
        "file": [
            {
                "status": "modified",
                "additions": 13,
                "raw_url": "https://github.com/apache/incubator-tamaya/raw/e977ab2e3add7d2eaae9923ee7339b65d47a8a3e/code/spi-support/src/main/java/org/apache/tamaya/spisupport/EnumConverter.java",
                "contents_url": "https://api.github.com/repos/apache/incubator-tamaya/contents/code/spi-support/src/main/java/org/apache/tamaya/spisupport/EnumConverter.java?ref=e977ab2e3add7d2eaae9923ee7339b65d47a8a3e",
                "filename": "code/spi-support/src/main/java/org/apache/tamaya/spisupport/EnumConverter.java",
                "deletions": 7,
                "sha": "7d0a499134dd2039b47fe98c3053bdac3619bb7d",
                "blob_url": "https://github.com/apache/incubator-tamaya/blob/e977ab2e3add7d2eaae9923ee7339b65d47a8a3e/code/spi-support/src/main/java/org/apache/tamaya/spisupport/EnumConverter.java",
                "patch": "@@ -24,7 +24,6 @@\n \n import java.lang.reflect.InvocationTargetException;\n import java.lang.reflect.Method;\n-import java.math.RoundingMode;\n import java.util.Locale;\n import java.util.Objects;\n import java.util.logging.Level;\n@@ -34,6 +33,7 @@\n  * Converter, converting from String to the given enum type.\n  */\n public class EnumConverter<T> implements PropertyConverter<T> {\n+\n     private final Logger LOG = Logger.getLogger(EnumConverter.class.getName());\n     private Class<T> enumType;\n     private Method factory;\n@@ -46,21 +46,23 @@ public EnumConverter(Class<T> enumType) {\n         try {\n             this.factory = enumType.getMethod(\"valueOf\", String.class);\n         } catch (NoSuchMethodException e) {\n-            throw new ConfigException(\"Uncovertible enum type without createValue method found, please provide a custom \" +\n-                    \"PropertyConverter for: \" + enumType.getName());\n+            throw new ConfigException(\"Uncovertible enum type without createValue method found, please provide a custom \"\n+                    + \"PropertyConverter for: \" + enumType.getName());\n         }\n     }\n \n     @Override\n     public T convert(String value, ConversionContext ctx) {\n-        ctx.addSupportedFormats(getClass(),\"<enumValue>\");\n+        ctx.addSupportedFormats(getClass(), \"<enumValue>\");\n         try {\n             return (T) factory.invoke(null, value);\n         } catch (InvocationTargetException | IllegalAccessException e) {\n             LOG.log(Level.FINEST, \"Invalid enum createValue '\" + value + \"' for \" + enumType.getName(), e);\n         }\n         try {\n-            return (T) factory.invoke(null, value.toUpperCase(Locale.ENGLISH));\n+            if (value != null) {\n+                return (T) factory.invoke(null, value.toUpperCase(Locale.ENGLISH));\n+            }\n         } catch (InvocationTargetException | IllegalAccessException e) {\n             LOG.log(Level.FINEST, \"Invalid enum createValue '\" + value + \"' for \" + enumType.getName(), e);\n         }\n@@ -69,8 +71,12 @@ public T convert(String value, ConversionContext ctx) {\n \n     @Override\n     public boolean equals(Object o) {\n-        if (this == o) return true;\n-        if (!(o instanceof EnumConverter)) return false;\n+        if (this == o) {\n+            return true;\n+        }\n+        if (!(o instanceof EnumConverter)) {\n+            return false;\n+        }\n         EnumConverter<?> that = (EnumConverter<?>) o;\n         return Objects.equals(enumType, that.enumType);\n     }",
                "changes": 20
            },
            {
                "status": "modified",
                "additions": 6,
                "raw_url": "https://github.com/apache/incubator-tamaya/raw/e977ab2e3add7d2eaae9923ee7339b65d47a8a3e/code/spi-support/src/test/java/org/apache/tamaya/spisupport/EnumConverterTest.java",
                "contents_url": "https://api.github.com/repos/apache/incubator-tamaya/contents/code/spi-support/src/test/java/org/apache/tamaya/spisupport/EnumConverterTest.java?ref=e977ab2e3add7d2eaae9923ee7339b65d47a8a3e",
                "filename": "code/spi-support/src/test/java/org/apache/tamaya/spisupport/EnumConverterTest.java",
                "deletions": 0,
                "sha": "fe210706b1b57e4555584333f344c2e4dff86105",
                "blob_url": "https://github.com/apache/incubator-tamaya/blob/e977ab2e3add7d2eaae9923ee7339b65d47a8a3e/code/spi-support/src/test/java/org/apache/tamaya/spisupport/EnumConverterTest.java",
                "patch": "@@ -55,6 +55,12 @@ public void testConvert_OtherValue() {\n         assertThat(testConverter.convert(\"fooBars\", ctx)).isNull();\n     }\n \n+    @Test\n+    public void testConvert_Nulls() {\n+        ConversionContext ctx = new ConversionContext.Builder(TypeLiteral.of(RoundingMode.class)).build();\n+        assertThat(testConverter.convert(null, ctx)).isNull();\n+    }\n+\n     @Test\n     public void callToConvertAddsMoreSupportedFormatsToTheContext() throws Exception {\n         ConversionContext context = new ConversionContext.Builder(\"someKey\", TypeLiteral.of(Enum.class)).build();",
                "changes": 6
            }
        ],
        "unit_tests": [
            "EnumConverterTest.java"
        ]
    },
    {
        "buggy": false,
        "test_file": "code/spi-support/src/test/java/org/apache/tamaya/spisupport/EnumConverterTest.java",
        "buggy_files": [
            "code/spi-support/src/main/java/org/apache/tamaya/spisupport/EnumConverter.java"
        ],
        "fixed": true
    }
]