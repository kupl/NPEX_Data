{
    "openejb_012de1c": {
        "bug_id": "openejb_012de1c",
        "commit": "https://github.com/apache/openejb/commit/012de1c95fbeac5da73bfaa239aeae60691b93c7",
        "file": [
            {
                "additions": 14,
                "blob_url": "https://github.com/apache/openejb/blob/012de1c95fbeac5da73bfaa239aeae60691b93c7/openejb/container/openejb-core/src/main/java/org/apache/openejb/config/AnnotationDeployer.java",
                "changes": 26,
                "contents_url": "https://api.github.com/repos/apache/openejb/contents/openejb/container/openejb-core/src/main/java/org/apache/openejb/config/AnnotationDeployer.java?ref=012de1c95fbeac5da73bfaa239aeae60691b93c7",
                "deletions": 12,
                "filename": "openejb/container/openejb-core/src/main/java/org/apache/openejb/config/AnnotationDeployer.java",
                "patch": "@@ -1476,20 +1476,22 @@ public EjbModule deploy(EjbModule ejbModule) throws OpenEJBException {\n                 addJaxRsProviders(finder, ejbModule.getAppModule().getJaxRsProviders(), Provider.class);\n             }\n \n-            for (PersistenceModule pm : ejbModule.getAppModule().getPersistenceModules()) {\n-                for (org.apache.openejb.jee.jpa.unit.PersistenceUnit pu : pm.getPersistence().getPersistenceUnit()) {\n-                    if ((pu.isExcludeUnlistedClasses() == null || !pu.isExcludeUnlistedClasses())\n-                            && \"true\".equalsIgnoreCase(pu.getProperties().getProperty(OPENEJB_JPA_AUTO_SCAN))) {\n-                        // no need of meta currently since JPA providers doesn't support it\n-                        final List<Class<?>> classes = finder.findAnnotatedClasses(Entity.class);\n-                        final List<String> existingClasses = pu.getClazz();\n-                        for (Class<?> clazz : classes) {\n-                            final String name = clazz.getName();\n-                            if (!existingClasses.contains(name)) {\n-                                pu.getClazz().add(name);\n+            if (ejbModule.getAppModule() != null) {\n+                for (PersistenceModule pm : ejbModule.getAppModule().getPersistenceModules()) {\n+                    for (org.apache.openejb.jee.jpa.unit.PersistenceUnit pu : pm.getPersistence().getPersistenceUnit()) {\n+                        if ((pu.isExcludeUnlistedClasses() == null || !pu.isExcludeUnlistedClasses())\n+                                && \"true\".equalsIgnoreCase(pu.getProperties().getProperty(OPENEJB_JPA_AUTO_SCAN))) {\n+                            // no need of meta currently since JPA providers doesn't support it\n+                            final List<Class<?>> classes = finder.findAnnotatedClasses(Entity.class);\n+                            final List<String> existingClasses = pu.getClazz();\n+                            for (Class<?> clazz : classes) {\n+                                final String name = clazz.getName();\n+                                if (!existingClasses.contains(name)) {\n+                                    pu.getClazz().add(name);\n+                                }\n                             }\n+                            pu.setScanned(true);\n                         }\n-                        pu.setScanned(true);\n                     }\n                 }\n             }",
                "raw_url": "https://github.com/apache/openejb/raw/012de1c95fbeac5da73bfaa239aeae60691b93c7/openejb/container/openejb-core/src/main/java/org/apache/openejb/config/AnnotationDeployer.java",
                "sha": "0370a2264824f7769d3558d2c45867adf81be6c6",
                "status": "modified"
            }
        ],
        "message": "avoiding NPE (mainly coming from custom test classes)\n\ngit-svn-id: https://svn.apache.org/repos/asf/openejb/trunk@1407969 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/openejb/commit/4cc058e4df456420e4ba4980a8e7e6bde83bb1ab",
        "repo": "openejb",
        "unit_tests": [
            "AnnotationDeployerTest.java"
        ]
    },
    "openejb_1bb2ff3": {
        "bug_id": "openejb_1bb2ff3",
        "commit": "https://github.com/apache/openejb/commit/1bb2ff3e77f01a14829bd15515bc0afc0c199f0c",
        "file": [
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/openejb/blob/1bb2ff3e77f01a14829bd15515bc0afc0c199f0c/openejb/container/openejb-core/src/main/java/org/apache/openejb/core/stateful/StatefulContainer.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/openejb/contents/openejb/container/openejb-core/src/main/java/org/apache/openejb/core/stateful/StatefulContainer.java?ref=1bb2ff3e77f01a14829bd15515bc0afc0c199f0c",
                "deletions": 1,
                "filename": "openejb/container/openejb-core/src/main/java/org/apache/openejb/core/stateful/StatefulContainer.java",
                "patch": "@@ -784,7 +784,7 @@ private void discardInstance(ThreadContext threadContext) {\n         }\n \n         Instance instance = checkedOutInstances.remove(primaryKey);\n-        if (!containsExtendedPersistenceContext(instance.beanContext)) {\n+        if (instance != null && !containsExtendedPersistenceContext(instance.beanContext)) {\n             cache.remove(primaryKey);\n         }\n ",
                "raw_url": "https://github.com/apache/openejb/raw/1bb2ff3e77f01a14829bd15515bc0afc0c199f0c/openejb/container/openejb-core/src/main/java/org/apache/openejb/core/stateful/StatefulContainer.java",
                "sha": "5fc40d09dc1e7bd287e58ba87bd9659d81f6825b",
                "status": "modified"
            }
        ],
        "message": "NPE check\n\ngit-svn-id: https://svn.apache.org/repos/asf/openejb/trunk@1341276 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/openejb/commit/955ea8d9dd0956127bb0e47073e3e7976ce32faf",
        "repo": "openejb",
        "unit_tests": [
            "StatefulContainerTest.java"
        ]
    },
    "openejb_2ade72e": {
        "bug_id": "openejb_2ade72e",
        "commit": "https://github.com/apache/openejb/commit/2ade72e64f34adfadc67c56a6087ab0900f2e0f3",
        "file": [
            {
                "additions": 3,
                "blob_url": "https://github.com/apache/openejb/blob/2ade72e64f34adfadc67c56a6087ab0900f2e0f3/openejb3/container/openejb-core/src/main/java/org/apache/openejb/config/ConfigurationFactory.java",
                "changes": 3,
                "contents_url": "https://api.github.com/repos/apache/openejb/contents/openejb3/container/openejb-core/src/main/java/org/apache/openejb/config/ConfigurationFactory.java?ref=2ade72e64f34adfadc67c56a6087ab0900f2e0f3",
                "deletions": 0,
                "filename": "openejb3/container/openejb-core/src/main/java/org/apache/openejb/config/ConfigurationFactory.java",
                "patch": "@@ -547,6 +547,9 @@ public AppInfo configureApplication(File jarFile) throws OpenEJBException {\n      * @throws OpenEJBException on error\n      */\n     public AppInfo configureApplication(ClassLoader classLoader, String id, List<File> jarFiles) throws OpenEJBException {\n+        if (id == null) {\n+            id = \"\";\n+        }\n         Application application = new Application();\n         application.setApplicationName(id);\n         AppModule collection = new AppModule(classLoader, id, application, false);",
                "raw_url": "https://github.com/apache/openejb/raw/2ade72e64f34adfadc67c56a6087ab0900f2e0f3/openejb3/container/openejb-core/src/main/java/org/apache/openejb/config/ConfigurationFactory.java",
                "sha": "e6ba1c33fb24cb4e6c2158b32cf9992c63a478fe",
                "status": "modified"
            }
        ],
        "message": "pass an empty application id to prevent NPEs and to ensure proper global jndi names are used\n\ngit-svn-id: https://svn.apache.org/repos/asf/openejb/trunk@988313 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/openejb/commit/a178c7ce1bf24a553ef05a86b4330ed920d79385",
        "repo": "openejb",
        "unit_tests": [
            "ConfigurationFactoryTest.java"
        ]
    },
    "openejb_2cc273f": {
        "bug_id": "openejb_2cc273f",
        "commit": "https://github.com/apache/openejb/commit/2cc273f54f9baeabac629e140cb7cac5a0d92fd1",
        "file": [
            {
                "additions": 3,
                "blob_url": "https://github.com/apache/openejb/blob/2cc273f54f9baeabac629e140cb7cac5a0d92fd1/openejb/container/openejb-core/src/main/java/org/apache/openejb/config/AnnotationDeployer.java",
                "changes": 4,
                "contents_url": "https://api.github.com/repos/apache/openejb/contents/openejb/container/openejb-core/src/main/java/org/apache/openejb/config/AnnotationDeployer.java?ref=2cc273f54f9baeabac629e140cb7cac5a0d92fd1",
                "deletions": 1,
                "filename": "openejb/container/openejb-core/src/main/java/org/apache/openejb/config/AnnotationDeployer.java",
                "patch": "@@ -1438,7 +1438,9 @@ public EjbModule deploy(EjbModule ejbModule) throws OpenEJBException {\n \n             // ejb can be rest bean and only then in standalone so scan providers here too\n             // adding them to app since they should be in the app classloader\n-            addJaxRsProviders(finder, ejbModule.getAppModule().getJaxRsProviders(), Provider.class);\n+            if (ejbModule.getAppModule() != null) {\n+                addJaxRsProviders(finder, ejbModule.getAppModule().getJaxRsProviders(), Provider.class);\n+            }\n \n             return ejbModule;\n         }",
                "raw_url": "https://github.com/apache/openejb/raw/2cc273f54f9baeabac629e140cb7cac5a0d92fd1/openejb/container/openejb-core/src/main/java/org/apache/openejb/config/AnnotationDeployer.java",
                "sha": "c9921b87b4ad74a8f123232fef853408f2b33b53",
                "status": "modified"
            }
        ],
        "message": "avoiding NPE when scanning jaxrs @Provider\n\ngit-svn-id: https://svn.apache.org/repos/asf/openejb/trunk@1342746 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/openejb/commit/0fbcbb92feee8a7678ddf6e5c4ccf0f930d61497",
        "repo": "openejb",
        "unit_tests": [
            "AnnotationDeployerTest.java"
        ]
    },
    "openejb_3bd55ef": {
        "bug_id": "openejb_3bd55ef",
        "commit": "https://github.com/apache/openejb/commit/3bd55efd17e8e901dfdfb52d8c855253b644623c",
        "file": [
            {
                "additions": 7,
                "blob_url": "https://github.com/apache/openejb/blob/3bd55efd17e8e901dfdfb52d8c855253b644623c/openejb/tomee/tomee-embedded/src/main/java/org/apache/tomee/embedded/Configuration.java",
                "changes": 10,
                "contents_url": "https://api.github.com/repos/apache/openejb/contents/openejb/tomee/tomee-embedded/src/main/java/org/apache/tomee/embedded/Configuration.java?ref=3bd55efd17e8e901dfdfb52d8c855253b644623c",
                "deletions": 3,
                "filename": "openejb/tomee/tomee-embedded/src/main/java/org/apache/tomee/embedded/Configuration.java",
                "patch": "@@ -71,9 +71,13 @@ public void setHost(String host) {\n     }\n \n     public void setServerXml(String file) {\n-        final File sXml = new File(file);\n-        if (sXml.exists()) {\n-            serverXml = sXml;\n+        if (file == null) {\n+            serverXml = null;\n+        } else {\n+            final File sXml = new File(file);\n+            if (sXml.exists()) {\n+                serverXml = sXml;\n+            }\n         }\n     }\n ",
                "raw_url": "https://github.com/apache/openejb/raw/3bd55efd17e8e901dfdfb52d8c855253b644623c/openejb/tomee/tomee-embedded/src/main/java/org/apache/tomee/embedded/Configuration.java",
                "sha": "84b0019ffe318eb38e620669001f88f41edc8de7",
                "status": "modified"
            }
        ],
        "message": "avoiding NPE when file is null\n\ngit-svn-id: https://svn.apache.org/repos/asf/openejb/trunk@1351171 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/openejb/commit/c7ae0375222730902d3e47e465426e60c33aaded",
        "repo": "openejb",
        "unit_tests": [
            "ConfigurationTest.java"
        ]
    },
    "openejb_4289fd7": {
        "bug_id": "openejb_4289fd7",
        "commit": "https://github.com/apache/openejb/commit/4289fd7fae4c7065afea3f6845421bbc6304acde",
        "file": [
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/openejb/blob/4289fd7fae4c7065afea3f6845421bbc6304acde/openejb3/container/openejb-core/src/main/java/org/apache/openejb/config/AnnotationDeployer.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/openejb/contents/openejb3/container/openejb-core/src/main/java/org/apache/openejb/config/AnnotationDeployer.java?ref=4289fd7fae4c7065afea3f6845421bbc6304acde",
                "deletions": 1,
                "filename": "openejb3/container/openejb-core/src/main/java/org/apache/openejb/config/AnnotationDeployer.java",
                "patch": "@@ -1380,7 +1380,7 @@ private void buildResource(JndiConsumer consumer, Resource resource, Member memb\n             JndiReference reference = consumer.getEnvEntryMap().get(refName);\n             if (reference == null) {\n \n-                { // Little quick validation for common mistake\n+                if (member != null) { // Little quick validation for common mistake\n                     Class type = member.getType();\n                     boolean shouldReturn = false;\n                     if (EntityManager.class.isAssignableFrom(type)){",
                "raw_url": "https://github.com/apache/openejb/raw/4289fd7fae4c7065afea3f6845421bbc6304acde/openejb3/container/openejb-core/src/main/java/org/apache/openejb/config/AnnotationDeployer.java",
                "sha": "e3221e4d45ae6d0b468e9f15eb52ae8cf16aa5ea",
                "status": "modified"
            }
        ],
        "message": "OPENEJB-735 NPE in AnnotationDeployer if null member is passed into buildResource()\n\nContributed by: Joe Bohn\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/openejb/trunk@604145 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/openejb/commit/ba6492d7fc97aab1605cf1f2248ba3a15dc7b6cb",
        "repo": "openejb",
        "unit_tests": [
            "AnnotationDeployerTest.java"
        ]
    },
    "openejb_6872ef0": {
        "bug_id": "openejb_6872ef0",
        "commit": "https://github.com/apache/openejb/commit/6872ef0ed6458feeb75785fb8571cb8529f7f442",
        "file": [
            {
                "additions": 14,
                "blob_url": "https://github.com/apache/openejb/blob/6872ef0ed6458feeb75785fb8571cb8529f7f442/openejb3/container/openejb-core/src/main/java/org/apache/openejb/config/ConfigurationFactory.java",
                "changes": 19,
                "contents_url": "https://api.github.com/repos/apache/openejb/contents/openejb3/container/openejb-core/src/main/java/org/apache/openejb/config/ConfigurationFactory.java?ref=6872ef0ed6458feeb75785fb8571cb8529f7f442",
                "deletions": 5,
                "filename": "openejb3/container/openejb-core/src/main/java/org/apache/openejb/config/ConfigurationFactory.java",
                "patch": "@@ -101,6 +101,11 @@ public ConfigurationFactory() {\n         this(false);\n     }\n \n+    public ConfigurationFactory(boolean offline, OpenEjbConfiguration configuration) {\n+        this(offline);\n+        sys = configuration;\n+    }\n+\n     public static class Chain implements DynamicDeployer{\n         private final List<DynamicDeployer> chain = new ArrayList<DynamicDeployer>();\n \n@@ -670,9 +675,11 @@ private Properties getSystemProperties(String serviceId) {\n         List<String> resourceIds = new ArrayList<String>();\n \n         OpenEjbConfiguration runningConfig = getRunningConfig();\n-        for (ResourceInfo resourceInfo : runningConfig.facilities.resources) {\n-            if (isResourceType(resourceInfo.service, resourceInfo.types, type)) {\n-                resourceIds.add(resourceInfo.id);\n+        if (runningConfig != null) {\n+            for (ResourceInfo resourceInfo : runningConfig.facilities.resources) {\n+                if (isResourceType(resourceInfo.service, resourceInfo.types, type)) {\n+                    resourceIds.add(resourceInfo.id);\n+                }\n             }\n         }\n \n@@ -744,8 +751,10 @@ private boolean isResourceType(String service, List<String> types, String type)\n         List<ContainerInfo> containers = new ArrayList<ContainerInfo>();\n \n         OpenEjbConfiguration runningConfig = getRunningConfig();\n-        for (ContainerInfo containerInfo : runningConfig.containerSystem.containers) {\n-            containers.add(containerInfo);\n+        if (runningConfig != null) {\n+            for (ContainerInfo containerInfo : runningConfig.containerSystem.containers) {\n+                containers.add(containerInfo);\n+            }\n         }\n \n         if (sys != null) {",
                "raw_url": "https://github.com/apache/openejb/raw/6872ef0ed6458feeb75785fb8571cb8529f7f442/openejb3/container/openejb-core/src/main/java/org/apache/openejb/config/ConfigurationFactory.java",
                "sha": "6cdddc4ea3380efc6f0fa013dc82d01f9955864f",
                "status": "modified"
            }
        ],
        "message": "GERONIMO-3481, there may be no running OpenEjbConfiguration so avoid NPEs, and allow construction of ConfigurationFactory with a known sys configuration.\n\ngit-svn-id: https://svn.apache.org/repos/asf/openejb/trunk@579046 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/openejb/commit/9c0e46ceb960196f7adcee05f6f39757778c3075",
        "repo": "openejb",
        "unit_tests": [
            "ConfigurationFactoryTest.java"
        ]
    },
    "openejb_6e89279": {
        "bug_id": "openejb_6e89279",
        "commit": "https://github.com/apache/openejb/commit/6e89279aa062f97e98616e4ba280c54fa9849079",
        "file": [
            {
                "additions": 4,
                "blob_url": "https://github.com/apache/openejb/blob/6e89279aa062f97e98616e4ba280c54fa9849079/openejb3/container/openejb-core/src/main/java/org/apache/openejb/config/OpenEjb2Conversion.java",
                "changes": 6,
                "contents_url": "https://api.github.com/repos/apache/openejb/contents/openejb3/container/openejb-core/src/main/java/org/apache/openejb/config/OpenEjb2Conversion.java?ref=6e89279aa062f97e98616e4ba280c54fa9849079",
                "deletions": 2,
                "filename": "openejb3/container/openejb-core/src/main/java/org/apache/openejb/config/OpenEjb2Conversion.java",
                "patch": "@@ -230,8 +230,10 @@ public void convertMdbConfigs(EjbJar ejbJar, OpenejbJarType openejbJarType) {\n \n     public void mergeEntityMappings(String moduleId, EntityMappings entityMappings, OpenejbJar openejbJar, OpenejbJarType openejbJarType) {\n         Map<String, EntityData> entities =  new TreeMap<String, EntityData>();\n-        for (Entity entity : entityMappings.getEntity()) {\n-            entities.put(entity.getDescription(), new EntityData(entity));\n+        if (entityMappings != null) {\n+            for (Entity entity : entityMappings.getEntity()) {\n+                entities.put(entity.getDescription(), new EntityData(entity));\n+            }\n         }\n         for (org.apache.openejb.jee.oejb2.EnterpriseBean enterpriseBean : openejbJarType.getEnterpriseBeans()) {\n             if (!(enterpriseBean instanceof EntityBeanType)) {",
                "raw_url": "https://github.com/apache/openejb/raw/6e89279aa062f97e98616e4ba280c54fa9849079/openejb3/container/openejb-core/src/main/java/org/apache/openejb/config/OpenEjb2Conversion.java",
                "sha": "83bcbadebdb0677ebb70bec580a4b413d0a0f519",
                "status": "modified"
            }
        ],
        "message": "Avoid NPE (it seems to have broken Geronimo build today)\n\ngit-svn-id: https://svn.apache.org/repos/asf/openejb/trunk@606054 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/openejb/commit/63a0657d9fcd7ad91b4312be036e691b0fc3ae5a",
        "repo": "openejb",
        "unit_tests": [
            "OpenEjb2ConversionTest.java"
        ]
    },
    "openejb_6eb2aa6": {
        "bug_id": "openejb_6eb2aa6",
        "commit": "https://github.com/apache/openejb/commit/6eb2aa65dd130ffd66f3d65d5f887ade3ef9afae",
        "file": [
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/openejb/blob/6eb2aa65dd130ffd66f3d65d5f887ade3ef9afae/openejb/container/openejb-core/src/main/java/org/apache/openejb/config/ReportValidationResults.java",
                "changes": 6,
                "contents_url": "https://api.github.com/repos/apache/openejb/contents/openejb/container/openejb-core/src/main/java/org/apache/openejb/config/ReportValidationResults.java?ref=6eb2aa65dd130ffd66f3d65d5f887ade3ef9afae",
                "deletions": 5,
                "filename": "openejb/container/openejb-core/src/main/java/org/apache/openejb/config/ReportValidationResults.java",
                "patch": "@@ -79,11 +79,7 @@ public AppModule deploy(AppModule appModule) throws OpenEJBException {\n             logger.info(\"Set the '\"+VALIDATION_LEVEL+\"' system property to \"+ join(\" or \", levels) +\" for increased validation details.\");\n         }\n \n-        validationFailedException = new ValidationFailedException(\"Module failed validation. \" + uberContext.getModuleType() + \"(name=\" + uberContext.getName() + \")\", uberContext, validationFailedException);\n-\n-        if (validationFailedException != null) throw validationFailedException;\n-\n-        return appModule;\n+        throw  new ValidationFailedException(\"Module failed validation. \" + uberContext.getModuleType() + \"(name=\" + uberContext.getName() + \")\", uberContext, validationFailedException);\n     }\n \n     private void logResults(ValidationContext context, Level level) {",
                "raw_url": "https://github.com/apache/openejb/raw/6eb2aa65dd130ffd66f3d65d5f887ade3ef9afae/openejb/container/openejb-core/src/main/java/org/apache/openejb/config/ReportValidationResults.java",
                "sha": "fb0201cf2e440d6d4e1c24deee24b0fef408674f",
                "status": "modified"
            },
            {
                "additions": 11,
                "blob_url": "https://github.com/apache/openejb/blob/6eb2aa65dd130ffd66f3d65d5f887ade3ef9afae/openejb/container/openejb-core/src/main/java/org/apache/openejb/config/rules/CheckCdiEnabled.java",
                "changes": 13,
                "contents_url": "https://api.github.com/repos/apache/openejb/contents/openejb/container/openejb-core/src/main/java/org/apache/openejb/config/rules/CheckCdiEnabled.java?ref=6eb2aa65dd130ffd66f3d65d5f887ade3ef9afae",
                "deletions": 2,
                "filename": "openejb/container/openejb-core/src/main/java/org/apache/openejb/config/rules/CheckCdiEnabled.java",
                "patch": "@@ -17,15 +17,24 @@\n package org.apache.openejb.config.rules;\n \n import org.apache.openejb.config.EjbModule;\n+import org.apache.xbean.finder.IAnnotationFinder;\n \n import javax.inject.Inject;\n \n public class CheckCdiEnabled extends ValidationBase {\n     public void validate(EjbModule ejbModule) {\n+        if (ejbModule.getFinder() == null) {\n+            return;\n+        }\n+\n         if (ejbModule.getBeans() == null\n-                && (!ejbModule.getFinder().findAnnotatedMethods(Inject.class).isEmpty()\n-                || !ejbModule.getFinder().findAnnotatedFields(Inject.class).isEmpty())) {\n+                && hasAtInject(ejbModule.getFinder())) {\n             warn(ejbModule.getModuleId(), \"cdi.notEnabled\", ejbModule.getModuleId());\n         }\n     }\n+\n+    private static boolean hasAtInject(final IAnnotationFinder finder) {\n+        return !finder.findAnnotatedMethods(Inject.class).isEmpty()\n+                || !finder.findAnnotatedFields(Inject.class).isEmpty();\n+    }\n }",
                "raw_url": "https://github.com/apache/openejb/raw/6eb2aa65dd130ffd66f3d65d5f887ade3ef9afae/openejb/container/openejb-core/src/main/java/org/apache/openejb/config/rules/CheckCdiEnabled.java",
                "sha": "3b56543648f34c8d5d36b07f3692553b399a3b51",
                "status": "modified"
            }
        ],
        "message": "avoiding NPE\n\ngit-svn-id: https://svn.apache.org/repos/asf/openejb/trunk@1425860 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/openejb/commit/805ee296026313b96981cf39d2df084e3c5f6bdd",
        "repo": "openejb",
        "unit_tests": [
            "CheckCdiEnabledTest.java"
        ]
    },
    "openejb_7c68738": {
        "bug_id": "openejb_7c68738",
        "commit": "https://github.com/apache/openejb/commit/7c687383a58c83d472ec5d78244135a887dfdb8b",
        "file": [
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/openejb/blob/7c687383a58c83d472ec5d78244135a887dfdb8b/openejb/container/openejb-core/src/main/java/org/apache/openejb/config/DeploymentLoader.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/openejb/contents/openejb/container/openejb-core/src/main/java/org/apache/openejb/config/DeploymentLoader.java?ref=7c687383a58c83d472ec5d78244135a887dfdb8b",
                "deletions": 1,
                "filename": "openejb/container/openejb-core/src/main/java/org/apache/openejb/config/DeploymentLoader.java",
                "patch": "@@ -808,7 +808,7 @@ private Beans mergeBeansXml(final Beans current, final URL url) {\n                 current.getInterceptors().addAll(beans.getInterceptors());\n             }\n             // check is done here since later we lost the data of the origin\n-            ReadDescriptors.checkDuplicatedByBeansXml(beans, current);\n+            ReadDescriptors.checkDuplicatedByBeansXml(beans, returnValue);\n         } catch (OpenEJBException e) {\n             logger.error(\"Unable to read beans.xml from :\" + url.toExternalForm());\n         }",
                "raw_url": "https://github.com/apache/openejb/raw/7c687383a58c83d472ec5d78244135a887dfdb8b/openejb/container/openejb-core/src/main/java/org/apache/openejb/config/DeploymentLoader.java",
                "sha": "15a1be44b909fe695969c60e7fbf5a8e110c007f",
                "status": "modified"
            }
        ],
        "message": "NPE check\n\ngit-svn-id: https://svn.apache.org/repos/asf/openejb/trunk@1360040 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/openejb/commit/9a859cb532e49ceff8b9473f898bdd77052069bc",
        "repo": "openejb",
        "unit_tests": [
            "DeploymentLoaderTest.java"
        ]
    },
    "openejb_a5291b4": {
        "bug_id": "openejb_a5291b4",
        "commit": "https://github.com/apache/openejb/commit/a5291b4cede0dfd49022a5b6af4fea15898640e3",
        "file": [
            {
                "additions": 32,
                "blob_url": "https://github.com/apache/openejb/blob/a5291b4cede0dfd49022a5b6af4fea15898640e3/openejb3/container/openejb-core/src/main/java/org/apache/openejb/config/AppInfoBuilder.java",
                "changes": 52,
                "contents_url": "https://api.github.com/repos/apache/openejb/contents/openejb3/container/openejb-core/src/main/java/org/apache/openejb/config/AppInfoBuilder.java?ref=a5291b4cede0dfd49022a5b6af4fea15898640e3",
                "deletions": 20,
                "filename": "openejb3/container/openejb-core/src/main/java/org/apache/openejb/config/AppInfoBuilder.java",
                "patch": "@@ -76,6 +76,7 @@\n import java.util.ArrayList;\n import java.util.Set;\n import java.util.LinkedHashSet;\n+import java.util.HashMap;\n import java.net.URL;\n import java.io.File;\n import java.io.IOException;\n@@ -250,29 +251,40 @@ void configureWebserviceSecurity(EjbJarInfo ejbJarInfo, EjbModule ejbModule) {\n \n         OpenejbJarType openejbJarType = (OpenejbJarType) altDD;\n \n+\n+        Map<String, org.apache.openejb.jee.oejb2.EnterpriseBean> beans = new HashMap<String, org.apache.openejb.jee.oejb2.EnterpriseBean>();\n+        for (org.apache.openejb.jee.oejb2.EnterpriseBean enterpriseBean : openejbJarType.getEnterpriseBeans()) {\n+            beans.put(enterpriseBean.getEjbName(), enterpriseBean);\n+        }\n+\n         List<PortInfo> infoList = ejbJarInfo.portInfos;\n         for (PortInfo portInfo : infoList) {\n-            String link = portInfo.serviceLink;\n-\n-            List<org.apache.openejb.jee.oejb2.EnterpriseBean> enterpriseBeans = openejbJarType.getEnterpriseBeans();\n-            for (org.apache.openejb.jee.oejb2.EnterpriseBean enterpriseBean : enterpriseBeans) {\n-                if (link.equals(enterpriseBean.getEjbName()) && enterpriseBean instanceof SessionBeanType) {\n-                    SessionBeanType sessionBean = (SessionBeanType) enterpriseBean;\n-                    WebServiceSecurityType webServiceSecurityType = sessionBean.getWebServiceSecurity();\n-                    portInfo.realmName = webServiceSecurityType.getRealmName();\n-                    portInfo.securityRealmName = webServiceSecurityType.getSecurityRealmName();\n-                    if (webServiceSecurityType.getTransportGuarantee() != null) {\n-                        portInfo.transportGuarantee = webServiceSecurityType.getTransportGuarantee().value();\n-                    } else {\n-                        portInfo.transportGuarantee = \"NONE\";\n-                    }\n \n-                    if (webServiceSecurityType.getAuthMethod() != null) {\n-                        portInfo.authMethod = webServiceSecurityType.getAuthMethod().value();\n-                    } else {\n-                        portInfo.authMethod = \"NONE\";\n-                    }\n-                }\n+            org.apache.openejb.jee.oejb2.EnterpriseBean bean = beans.get(portInfo.serviceLink);\n+\n+            if (bean == null) continue; /* TODO: throw something? */\n+            if (!(bean instanceof SessionBeanType)) continue; /* TODO: throw something? */\n+\n+            SessionBeanType sessionBean = (SessionBeanType) bean;\n+            WebServiceSecurityType webServiceSecurityType = sessionBean.getWebServiceSecurity();\n+\n+            if (webServiceSecurityType == null) {\n+                //TODO: this ok?\n+                continue;\n+            }\n+\n+            portInfo.realmName = webServiceSecurityType.getRealmName();\n+            portInfo.securityRealmName = webServiceSecurityType.getSecurityRealmName();\n+            if (webServiceSecurityType.getTransportGuarantee() != null) {\n+                portInfo.transportGuarantee = webServiceSecurityType.getTransportGuarantee().value();\n+            } else {\n+                portInfo.transportGuarantee = \"NONE\";\n+            }\n+\n+            if (webServiceSecurityType.getAuthMethod() != null) {\n+                portInfo.authMethod = webServiceSecurityType.getAuthMethod().value();\n+            } else {\n+                portInfo.authMethod = \"NONE\";\n             }\n         }\n     }",
                "raw_url": "https://github.com/apache/openejb/raw/a5291b4cede0dfd49022a5b6af4fea15898640e3/openejb3/container/openejb-core/src/main/java/org/apache/openejb/config/AppInfoBuilder.java",
                "sha": "ca6b0a45c8aabbe51b5bfeeb03c7e8328a8025fc",
                "status": "modified"
            }
        ],
        "message": "Fix for OPENEJB-1021: NPE in AppInfoBuilder.configureWebserviceSecurity()\nNot sure if it's a good fix\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/openejb/trunk@767242 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/openejb/commit/a6e9a418c1e3c931e4d32227934f8b83fa00ad3f",
        "repo": "openejb",
        "unit_tests": [
            "AppInfoBuilderTest.java"
        ]
    },
    "openejb_da18a8d": {
        "bug_id": "openejb_da18a8d",
        "commit": "https://github.com/apache/openejb/commit/da18a8d89b049d24844ee37c2db10e5deb2db42c",
        "file": [
            {
                "additions": 3,
                "blob_url": "https://github.com/apache/openejb/blob/da18a8d89b049d24844ee37c2db10e5deb2db42c/openejb/container/openejb-core/src/main/java/org/apache/openejb/assembler/classic/ValidatorBuilder.java",
                "changes": 3,
                "contents_url": "https://api.github.com/repos/apache/openejb/contents/openejb/container/openejb-core/src/main/java/org/apache/openejb/assembler/classic/ValidatorBuilder.java?ref=da18a8d89b049d24844ee37c2db10e5deb2db42c",
                "deletions": 0,
                "filename": "openejb/container/openejb-core/src/main/java/org/apache/openejb/assembler/classic/ValidatorBuilder.java",
                "patch": "@@ -81,6 +81,9 @@ public static ValidatorFactory buildFactory(ValidationInfo config, ClassLoader c\n                 factory = Validation.buildDefaultValidatorFactory();\n             } else {\n                 Configuration<?> configuration = getConfig(config);\n+                if (configuration == null) {\n+                    configuration = getConfig(config);\n+                }\n                 try {\n                     factory = configuration.buildValidatorFactory();\n                 } catch (ValidationException ve) {",
                "raw_url": "https://github.com/apache/openejb/raw/da18a8d89b049d24844ee37c2db10e5deb2db42c/openejb/container/openejb-core/src/main/java/org/apache/openejb/assembler/classic/ValidatorBuilder.java",
                "sha": "e249e0b46712d70c0a4fbe6e6ad978b680405bae",
                "status": "modified"
            },
            {
                "additions": 14,
                "blob_url": "https://github.com/apache/openejb/blob/da18a8d89b049d24844ee37c2db10e5deb2db42c/openejb/container/openejb-core/src/main/java/org/apache/openejb/config/DeploymentLoader.java",
                "changes": 14,
                "contents_url": "https://api.github.com/repos/apache/openejb/contents/openejb/container/openejb-core/src/main/java/org/apache/openejb/config/DeploymentLoader.java?ref=da18a8d89b049d24844ee37c2db10e5deb2db42c",
                "deletions": 0,
                "filename": "openejb/container/openejb-core/src/main/java/org/apache/openejb/config/DeploymentLoader.java",
                "patch": "@@ -84,6 +84,7 @@\n import java.util.jar.JarEntry;\n import java.util.jar.JarFile;\n import java.util.jar.Manifest;\n+import java.util.zip.ZipEntry;\n \n import static org.apache.openejb.config.NewLoaderLogic.applyBuiltinExcludes;\n import static org.apache.openejb.config.TldScanner.scanForTagLibs;\n@@ -1538,6 +1539,19 @@ public boolean accept(final String annotationName) {\n \n             if (classFinder.find(filter)) {\n                 cls = EjbModule.class;\n+                // if it is a war just throw an error\n+                try {\n+                    final File ar = URLs.toFile(urls);\n+                    if (!ar.isDirectory() && !ar.getName().endsWith(\"ar\")) { // guess no archive extension, check it is not a hidden war\n+                        final JarFile war = new JarFile(ar);\n+                        final ZipEntry entry = war.getEntry(\"WEB-INF/\");\n+                        if (entry != null) {\n+                            logger.warning(\"you deployed \" + urls.toExternalForm() + \", it seems it is a war with no extension, please rename it\");\n+                        }\n+                    }\n+                } catch (Exception ignored) {\n+                    // no-op\n+                }\n             }\n \n             if (otherTypes.size() > 0) {",
                "raw_url": "https://github.com/apache/openejb/raw/da18a8d89b049d24844ee37c2db10e5deb2db42c/openejb/container/openejb-core/src/main/java/org/apache/openejb/config/DeploymentLoader.java",
                "sha": "74363546a66edd30ec357af0db60dd376cb554b2",
                "status": "modified"
            }
        ],
        "message": "trying to avoid NPE (appears on builbot) + logging a warning if a a war is deployed without extension\n\ngit-svn-id: https://svn.apache.org/repos/asf/openejb/trunk@1373184 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/openejb/commit/99ba75c962be8ce0f635477544f87088c99b34af",
        "repo": "openejb",
        "unit_tests": [
            "DeploymentLoaderTest.java"
        ]
    },
    "openejb_e815e2e": {
        "bug_id": "openejb_e815e2e",
        "commit": "https://github.com/apache/openejb/commit/e815e2e475eb2f01801ecf0bccd589fc998df6cc",
        "file": [
            {
                "additions": 3,
                "blob_url": "https://github.com/apache/openejb/blob/e815e2e475eb2f01801ecf0bccd589fc998df6cc/openejb3/container/openejb-core/src/main/java/org/apache/openejb/config/DeploymentLoader.java",
                "changes": 5,
                "contents_url": "https://api.github.com/repos/apache/openejb/contents/openejb3/container/openejb-core/src/main/java/org/apache/openejb/config/DeploymentLoader.java?ref=e815e2e475eb2f01801ecf0bccd589fc998df6cc",
                "deletions": 2,
                "filename": "openejb3/container/openejb-core/src/main/java/org/apache/openejb/config/DeploymentLoader.java",
                "patch": "@@ -611,15 +611,16 @@ protected void addWebModule(AppModule appModule, URL warUrl, ClassLoader parentC\n         ClassLoader webClassLoader = webModule.getClassLoader();\n \n         // get include/exclude properties from context-param\n+        // using a Set instead of a list would be easier ...\n         Options contextParams = new Options(getContextParams(webModule.getWebApp().getContextParam()));\n         String include = contextParams.get(CLASSPATH_INCLUDE, \"\");\n         String exclude = contextParams.get(CLASSPATH_EXCLUDE, \".*\");\n         Set<RequireDescriptors> requireDescriptors = contextParams.getAll(CLASSPATH_REQUIRE_DESCRIPTOR, RequireDescriptors.CLIENT);\n         boolean filterDescriptors = contextParams.get(CLASSPATH_FILTER_DESCRIPTORS, false);\n         boolean filterSystemApps = contextParams.get(CLASSPATH_FILTER_SYSTEMAPPS, true);\n \n-        contextParams.getProperties().put(moduleName, warPath);\n-        FileUtils base = new FileUtils(moduleName, moduleName, contextParams.getProperties());\n+        contextParams.getProperties().put(webModule.getModuleId(), warPath);\n+        FileUtils base = new FileUtils(webModule.getModuleId(), webModule.getModuleId(), contextParams.getProperties());\n         DeploymentsResolver.loadFromClasspath(base, urls, webClassLoader, include, exclude, requireDescriptors, filterDescriptors, filterSystemApps);\n \n         // we need to exclude previously deployed modules",
                "raw_url": "https://github.com/apache/openejb/raw/e815e2e475eb2f01801ecf0bccd589fc998df6cc/openejb3/container/openejb-core/src/main/java/org/apache/openejb/config/DeploymentLoader.java",
                "sha": "b394e52f0a34c2a1c7bec824da02e9b12fc89725",
                "status": "modified"
            }
        ],
        "message": "Change the module name by the module id in the map to avoid NPE when not running in Tomcat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/openejb/trunk@1057107 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/openejb/commit/e2d41adbfe160782c07bdc9c2ddc3aef1fa27bf8",
        "repo": "openejb",
        "unit_tests": [
            "DeploymentLoaderTest.java"
        ]
    },
    "openejb_ed51a27": {
        "bug_id": "openejb_ed51a27",
        "commit": "https://github.com/apache/openejb/commit/ed51a27e9ded92bf94f86cd09590e0a5e521d5dc",
        "file": [
            {
                "additions": 7,
                "blob_url": "https://github.com/apache/openejb/blob/ed51a27e9ded92bf94f86cd09590e0a5e521d5dc/openejb/container/openejb-core/src/main/java/org/apache/openejb/config/AnnotationDeployer.java",
                "changes": 8,
                "contents_url": "https://api.github.com/repos/apache/openejb/contents/openejb/container/openejb-core/src/main/java/org/apache/openejb/config/AnnotationDeployer.java?ref=ed51a27e9ded92bf94f86cd09590e0a5e521d5dc",
                "deletions": 1,
                "filename": "openejb/container/openejb-core/src/main/java/org/apache/openejb/config/AnnotationDeployer.java",
                "patch": "@@ -827,7 +827,13 @@ void process(ClassLoader cl, String cls, Object object) {\n \n \t\tprivate String getConfigPropertyType(javax.resource.spi.ConfigProperty annotation, Class<?> type) {\n \t\t\tClass<?> t = (annotation == null) ? null : annotation.type();\n-\t\t\tif (t == null || t.equals(Object.class)) {\n+            if (t == null && type != null) {\n+                return type.getName();\n+            } else if (t == null) {\n+                return null;\n+            }\n+\n+\t\t\tif (t.equals(Object.class)) {\n \t\t\t\tt = type;\n \t\t\t}\n             if (t == null) { // t == null && type == null",
                "raw_url": "https://github.com/apache/openejb/raw/ed51a27e9ded92bf94f86cd09590e0a5e521d5dc/openejb/container/openejb-core/src/main/java/org/apache/openejb/config/AnnotationDeployer.java",
                "sha": "dc438489a407a9af0649798cb445c89fac57bb6c",
                "status": "modified"
            }
        ],
        "message": "avoiding NPE when a custom mdb container uses badly defined activation properties\n\ngit-svn-id: https://svn.apache.org/repos/asf/openejb/trunk@1203155 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/openejb/commit/30db9245e5d3421fb5014b85f97aed3dd14699b8",
        "repo": "openejb",
        "unit_tests": [
            "AnnotationDeployerTest.java"
        ]
    }
}