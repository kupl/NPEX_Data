[{"commit": "https://github.com/apache/juddi-scout/commit/21ba474960d0c4f271bcc3096356e2accdb6afc7", "parent": "https://github.com/apache/juddi-scout/commit/8aa72558f1ad134255aee3abb9c41562ebd87b98", "message": "SCOUT-122, handle a null response, so errors are not NPEs and can be understood more easily.\n\ngit-svn-id: https://svn.apache.org/repos/asf/juddi/scout/trunk@1226926 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "juddi-scout_1", "file": [{"additions": 1, "raw_url": "https://github.com/apache/juddi-scout/raw/21ba474960d0c4f271bcc3096356e2accdb6afc7/src/main/java/org/apache/ws/scout/registry/AuthTokenV3Singleton.java", "blob_url": "https://github.com/apache/juddi-scout/blob/21ba474960d0c4f271bcc3096356e2accdb6afc7/src/main/java/org/apache/ws/scout/registry/AuthTokenV3Singleton.java", "sha": "f9c34853a3fbb991af7cc7b04bf1dd6047db8a8a", "changes": 2, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/juddi-scout/contents/src/main/java/org/apache/ws/scout/registry/AuthTokenV3Singleton.java?ref=21ba474960d0c4f271bcc3096356e2accdb6afc7", "patch": "@@ -25,7 +25,7 @@ public synchronized static void addAuthToken(String username,\n \t\tif (instance == null) {\n \t\t\tinstance = new AuthTokenV3Singleton();\n \t\t}\n-\t\tcachedAuthTokenHash.put(username, token);\n+\t\tif (token!=null) cachedAuthTokenHash.put(username, token);\n \t}\n \t\n \tpublic synchronized static void deleteAuthToken(String username) {", "filename": "src/main/java/org/apache/ws/scout/registry/AuthTokenV3Singleton.java"}, {"additions": 2, "raw_url": "https://github.com/apache/juddi-scout/raw/21ba474960d0c4f271bcc3096356e2accdb6afc7/src/main/java/org/apache/ws/scout/registry/RegistryV3Impl.java", "blob_url": "https://github.com/apache/juddi-scout/blob/21ba474960d0c4f271bcc3096356e2accdb6afc7/src/main/java/org/apache/ws/scout/registry/RegistryV3Impl.java", "sha": "ec2c829075a440e3c111c0aa3966cc101e1d71ba", "changes": 3, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/juddi-scout/contents/src/main/java/org/apache/ws/scout/registry/RegistryV3Impl.java?ref=21ba474960d0c4f271bcc3096356e2accdb6afc7", "patch": "@@ -900,9 +900,10 @@ public AuthToken getAuthToken(String userID, String cred)\n \t\t\tgetAuthTokenURI = this.getPublishURI();\n \t\t}\n \t\t\n-        AuthToken at;\n+        AuthToken at = null;\n         JAXBElement<?> o = execute(this.objectFactory.createGetAuthToken(request), \n         \t\tgetAuthTokenURI);\n+        if (o!=null)\n         at = (AuthToken) o.getValue();\n \n         return at;", "filename": "src/main/java/org/apache/ws/scout/registry/RegistryV3Impl.java"}, {"additions": 1, "raw_url": "https://github.com/apache/juddi-scout/raw/21ba474960d0c4f271bcc3096356e2accdb6afc7/src/main/java/org/apache/ws/scout/transport/LocalTransport.java", "blob_url": "https://github.com/apache/juddi-scout/blob/21ba474960d0c4f271bcc3096356e2accdb6afc7/src/main/java/org/apache/ws/scout/transport/LocalTransport.java", "sha": "485f6309285428a69c3f1485b9eeb7d59c445e38", "changes": 2, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/juddi-scout/contents/src/main/java/org/apache/ws/scout/transport/LocalTransport.java?ref=21ba474960d0c4f271bcc3096356e2accdb6afc7", "patch": "@@ -61,7 +61,7 @@ public Element send(Element request,URI endpointURI)\n     \tObject requestHandler = c.newInstance();\n     \tMethod method = c.getMethod(methodName, Element.class);\n     \tNode node = (Node) method.invoke(requestHandler, request);\n-    \tif (node.getFirstChild()!=null) {\n+    \tif (node!=null && node.getFirstChild()!=null) {\n     \t\tresponse = (Element) node.getFirstChild();\n     \t}\n     } catch (Exception ex) {", "filename": "src/main/java/org/apache/ws/scout/transport/LocalTransport.java"}], "repo": "juddi-scout"}, {"commit": "https://github.com/apache/juddi-scout/commit/2d52b7d36eb72807f02c7e7a3db6f5b62a718e09", "parent": "https://github.com/apache/juddi-scout/commit/71cd6d1c7aa02c2c353e9a0ed7e0b4c95f61238a", "message": "SCOUT-80 simplifying some more code, and potential NPE.\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/scout/branches/v1.1/scout@797308 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "juddi-scout_2", "file": [{"additions": 11, "raw_url": "https://github.com/apache/juddi-scout/raw/2d52b7d36eb72807f02c7e7a3db6f5b62a718e09/src/main/java/org/apache/ws/scout/registry/BusinessQueryManagerImpl.java", "blob_url": "https://github.com/apache/juddi-scout/blob/2d52b7d36eb72807f02c7e7a3db6f5b62a718e09/src/main/java/org/apache/ws/scout/registry/BusinessQueryManagerImpl.java", "sha": "17b3868d07e959ce2be96b8b113a32f3e6066af1", "changes": 54, "status": "modified", "deletions": 43, "contents_url": "https://api.github.com/repos/apache/juddi-scout/contents/src/main/java/org/apache/ws/scout/registry/BusinessQueryManagerImpl.java?ref=2d52b7d36eb72807f02c7e7a3db6f5b62a718e09", "patch": "@@ -138,28 +138,18 @@ public BulkResponse findOrganizations(Collection findQualifiers,\n             \r\n             BusinessInfo[] bizInfoArr =null;\r\n             BusinessInfos bizInfos = result.getBusinessInfos();\r\n+            LinkedHashSet<Organization> orgs = new LinkedHashSet<Organization>();\r\n             if(bizInfos != null)\r\n             {\r\n             \tList<BusinessInfo> bizInfoList = bizInfos.getBusinessInfo();\r\n+            \tfor (BusinessInfo businessInfo : bizInfoList) {\r\n+                    //Now get the details on the individual biz\r\n+                    BusinessDetail detail = registry.getBusinessDetail(businessInfo.getBusinessKey());\r\n+                    orgs.add(registryService.getLifeCycleManagerImpl().createOrganization(detail));\r\n+\t\t\t\t}\r\n             \tbizInfoArr = new BusinessInfo[bizInfoList.size()];\r\n             \tbizInfoList.toArray(bizInfoArr);\r\n             }\r\n-            \r\n-            LinkedHashSet<Organization> orgs = null;\r\n-            int len = 0;\r\n-            if (bizInfoArr != null)\r\n-            {\r\n-                len = bizInfoArr.length;\r\n-                orgs = new LinkedHashSet<Organization>();\r\n-            }\r\n-            for (int i = 0; i < len; i++)\r\n-            {\r\n-                BusinessInfo info = bizInfoArr[i];\r\n-                //Now get the details on the individual biz\r\n-                BusinessDetail detail = registry.getBusinessDetail(info.getBusinessKey());\r\n-\r\n-                orgs.add(registryService.getLifeCycleManagerImpl().createOrganization(detail));\r\n-            }\r\n             return new BulkResponseImpl(orgs);\r\n         } catch (RegistryException e)\r\n         {\r\n@@ -181,19 +171,8 @@ public BulkResponse findAssociations(Collection findQualifiers,\n             PublisherAssertions result =\r\n                     registry.getPublisherAssertions(auth.getAuthInfo());\r\n             List<PublisherAssertion> publisherAssertionList = result.getPublisherAssertion();\r\n-            PublisherAssertion[] publisherAssertionArr = new PublisherAssertion[publisherAssertionList.size()];\r\n-            publisherAssertionList.toArray(publisherAssertionArr);\r\n-            \r\n-            LinkedHashSet<Association> col = null;\r\n-            int len = 0;\r\n-            if (publisherAssertionArr != null)\r\n-            {\r\n-                len = publisherAssertionArr.length;\r\n-                col = new LinkedHashSet<Association>();\r\n-            }\r\n-            for (int i = 0; i < len; i++)\r\n-            {\r\n-                PublisherAssertion pas = publisherAssertionArr[i];\r\n+            LinkedHashSet<Association> col = new LinkedHashSet<Association>();\r\n+            for (PublisherAssertion pas : publisherAssertionList) {\r\n                 String sourceKey = pas.getFromKey();\r\n                 String targetKey = pas.getToKey();\r\n                 Collection<Key> orgcol = new ArrayList<Key>();\r\n@@ -239,27 +218,16 @@ public BulkResponse findCallerAssociations(Collection findQualifiers,\n             else\r\n               if(!caller  && other  )\r\n                         confirm = Constants.COMPLETION_STATUS_FROMKEY_INCOMPLETE;\r\n-           else\r\n+            else\r\n                  if(caller  && !other   )\r\n                         confirm = Constants.COMPLETION_STATUS_TOKEY_INCOMPLETE;\r\n \r\n             report = registry.getAssertionStatusReport(auth.getAuthInfo(),confirm);\r\n             \r\n             \r\n             List<AssertionStatusItem> assertionStatusItemList = report.getAssertionStatusItem();\r\n-            AssertionStatusItem[] assertionStatusItemArr = new AssertionStatusItem[assertionStatusItemList.size()];\r\n-            assertionStatusItemList.toArray(assertionStatusItemArr);\r\n-            \r\n-            LinkedHashSet<Association> col = null;\r\n-            int len = 0;\r\n-            if (assertionStatusItemArr != null)\r\n-            {\r\n-                len = assertionStatusItemArr.length;\r\n-                col = new LinkedHashSet<Association>();\r\n-            }\r\n-            for (int i = 0; i < len; i++)\r\n-            {\r\n-                AssertionStatusItem asi = assertionStatusItemArr[i];\r\n+            LinkedHashSet<Association> col = new LinkedHashSet<Association>();\r\n+            for (AssertionStatusItem asi : assertionStatusItemList) {\r\n                 String sourceKey = asi.getFromKey();\r\n                 String targetKey = asi.getToKey();\r\n                 Collection<Key> orgcol = new ArrayList<Key>();\r", "filename": "src/main/java/org/apache/ws/scout/registry/BusinessQueryManagerImpl.java"}, {"additions": 94, "raw_url": "https://github.com/apache/juddi-scout/raw/2d52b7d36eb72807f02c7e7a3db6f5b62a718e09/src/main/java/org/apache/ws/scout/util/ScoutUddiJaxrHelper.java", "blob_url": "https://github.com/apache/juddi-scout/blob/2d52b7d36eb72807f02c7e7a3db6f5b62a718e09/src/main/java/org/apache/ws/scout/util/ScoutUddiJaxrHelper.java", "sha": "0d214e61748990b84a81bb8ee3dbbd4c83abc60b", "changes": 282, "status": "modified", "deletions": 188, "contents_url": "https://api.github.com/repos/apache/juddi-scout/contents/src/main/java/org/apache/ws/scout/util/ScoutUddiJaxrHelper.java?ref=2d52b7d36eb72807f02c7e7a3db6f5b62a718e09", "patch": "@@ -112,23 +112,16 @@ public static Organization getOrganization(BusinessEntity businessEntity,\n            throws JAXRException\n    {\n       List<Name> namesList = businessEntity.getName();\n-\n-      Name[] namearray = new Name[namesList.size()];\n-      namesList.toArray(namearray);\n-      \n-      Name n = namearray != null && namearray.length > 0 ? namearray[0] : null;\n-      String name = n != null ? n.getValue() : null;\n-      \n+      Name n = null;\n+      if (namesList.size()>0) n = namesList.get(0);\n       \n       List<Description> descriptionList = businessEntity.getDescription();\n-      Description[] descarray = new Description[descriptionList.size()];\n-      descriptionList.toArray(descarray);\n-      \n-      Description desc = descarray != null && descarray.length > 0 ? descarray[0]: null;\n+      Description desc =null;\n+      if (descriptionList.size()>0) desc = descriptionList.get(0);\n \n       Organization org = new OrganizationImpl(lifeCycleManager);\n-      if(name != null ) {\n-          org.setName(getIString(n.getLang(), name, lifeCycleManager));\n+      if(n != null ) {\n+          org.setName(getIString(n.getLang(), n.getValue(), lifeCycleManager));\n       }\n       if( desc != null) {\n           org.setDescription(getIString(desc.getLang(), desc.getValue(), lifeCycleManager));\n@@ -139,15 +132,10 @@ public static Organization getOrganization(BusinessEntity businessEntity,\n       BusinessServices services = businessEntity.getBusinessServices();\n       if(services != null)\n       {\n-          List<BusinessService> bizServiceList = services.getBusinessService();\n-          BusinessService[] sarr = new BusinessService[bizServiceList.size()];\n-          bizServiceList.toArray(sarr);\n-          \n-          for (int i = 0; sarr != null && i < sarr.length; i++)\n-          {\n-             BusinessService s = (BusinessService)sarr[i];\n-             org.addService(getService(s, lifeCycleManager));\n-          } \n+    \t  List<BusinessService> bizServiceList = services.getBusinessService();\n+    \t  for (BusinessService businessService : bizServiceList) {\n+    \t\t  org.addService(getService(businessService, lifeCycleManager));\n+    \t  }\n       }\n \n       /*\n@@ -164,40 +152,32 @@ public static Organization getOrganization(BusinessEntity businessEntity,\n       if(contacts != null)\n       {\n     \t  List<Contact> contactList = contacts.getContact();\n-    \t  Contact[] carr = new Contact[contactList.size()];\n-    \t  contactList.toArray(carr);\n-    \t  for (int i = 0; carr != null && i < carr.length; i++)\n-          {\n-             Contact contact = (Contact)carr[i];\n-             User user = new UserImpl(null);\n-             String pname = contact.getPersonName();\n-             user.setPersonName(new PersonNameImpl(pname));\n-             if (i == 0)\n-             {\n-                org.setPrimaryContact(user);\n-             }\n-             else\n-             {\n-                org.addUser(user);\n-             }\n-          }\n+    \t  if (contactList!=null) {\n+    \t\t  boolean isFirst=true;\n+    \t\t  for (Contact contact : contactList) {\n+    \t\t\t  User user = new UserImpl(null);\n+    \t\t\t  String pname = contact.getPersonName();\n+    \t\t\t  user.setPersonName(new PersonNameImpl(pname));\n+    \t\t\t  if (isFirst) {\n+    \t\t\t\t  isFirst=false;\n+    \t\t\t\t  org.setPrimaryContact(user);\n+    \t\t\t  } else {\n+    \t\t\t\t  org.addUser(user);\n+    \t\t\t  }\n+\t\t\t}\n+    \t  }\n       }\n        \n       //External Links\n       DiscoveryURLs durls = businessEntity.getDiscoveryURLs();\n       if (durls != null)\n       {\n-    \t List<DiscoveryURL> discoveryURL_List = durls.getDiscoveryURL();\n-         DiscoveryURL[] darr = new DiscoveryURL[discoveryURL_List.size()];\n-         discoveryURL_List.toArray(darr);\n-         \n-         for (int j = 0; darr != null && j < darr.length; j++)\n-         {\n-            DiscoveryURL durl = (DiscoveryURL)darr[j];\n-            ExternalLink link = new ExternalLinkImpl(lifeCycleManager);\n-            link.setExternalURI(durl.getValue());\n-            org.addExternalLink(link);\n-         }\n+    \t  List<DiscoveryURL> discoveryURL_List = durls.getDiscoveryURL();\n+    \t  for (DiscoveryURL discoveryURL : discoveryURL_List) {\n+    \t\t  ExternalLink link = new ExternalLinkImpl(lifeCycleManager);\n+    \t\t  link.setExternalURI(discoveryURL.getValue());\n+    \t\t  org.addExternalLink(link);\n+    \t  }\n       }\n \n       org.addExternalIdentifiers(getExternalIdentifiers(businessEntity.getIdentifierBag(), lifeCycleManager));\n@@ -216,22 +196,16 @@ public static Organization getOrganization(BusinessDetail bizdetail,\n       bizEntityList.toArray(bz);\n \n       BusinessEntity entity = bz[0];\n-      List<Name> nameList = entity.getName();\n-      Name[] namearr = new Name[nameList.size()];\n-      nameList.toArray(namearr);\n-      \n-      Name n = namearr != null && namearr.length > 0 ? namearr[0] : null;\n-      String name = n != null ? n.getValue(): null;\n+      Name n = null;\n+      if (entity.getName().size()>0) n = entity.getName().get(0);\n       \n       List<Description> descriptionList = entity.getDescription();\n-      Description[] descarr = new Description[descriptionList.size()];\n-      descriptionList.toArray(descarr);\n-      \n-      Description desc = descarr != null && descarr.length > 0 ? descarr[0] : null;\n+      Description desc =null;\n+      if (descriptionList.size()>0) desc = descriptionList.get(0);\n \n       Organization org = new OrganizationImpl(lifeCycleManager);\n-      if( name != null ) {\n-          org.setName(getIString(n.getLang(), name, lifeCycleManager));\n+      if( n != null ) {\n+          org.setName(getIString(n.getLang(), n.getValue(), lifeCycleManager));\n       }\n       if( desc != null ) {\n           org.setDescription(getIString(desc.getLang(), desc.getValue(), lifeCycleManager));\n@@ -240,17 +214,10 @@ public static Organization getOrganization(BusinessDetail bizdetail,\n \n       //Set Services also\n       BusinessServices services = entity.getBusinessServices();\n-      \n       List<BusinessService> bizServiceList = services.getBusinessService();\n-      BusinessService[] sarr = new BusinessService[bizServiceList.size()];\n-      bizServiceList.toArray(sarr);\n-      \n-      for (int i = 0; sarr != null && i < sarr.length; i++)\n-      {\n-         BusinessService s = (BusinessService)sarr[i];\n-         org.addService(getService(s, lifeCycleManager));\n-         \n-      }\n+      for (BusinessService businessService : bizServiceList) {\n+    \t  org.addService(getService(businessService, lifeCycleManager));\n+\t  }\n \n       /*\n        *  Users\n@@ -263,62 +230,46 @@ public static Organization getOrganization(BusinessDetail bizdetail,\n        */\n       Contacts contacts = entity.getContacts();\n       List<Contact> contactList = contacts.getContact();\n-      Contact[] carr = new Contact[contactList.size()];\n-      contactList.toArray(carr);\n-      \n-      for (int i = 0; carr != null && i < carr.length; i++)\n-      {\n-         Contact contact = carr[i];\n+      for (Contact contact : contactList) {\n          User user = new UserImpl(null);\n          String pname = contact.getPersonName();\n          user.setType(contact.getUseType());\n          user.setPersonName(new PersonNameImpl(pname));\n          \n          List<Email> emailList = contact.getEmail();\n-         Email[] emails = new Email[emailList.size()];\n-         emailList.toArray(emails);\n-         \n          ArrayList<EmailAddress> tempEmails = new ArrayList<EmailAddress>();\n-         for (int x = 0; x < emails.length; x++) {\n-        \t tempEmails.add(new EmailAddressImpl(emails[x].getValue(), null));\n-         }\n+         for (Email email : emailList) {\n+        \t tempEmails.add(new EmailAddressImpl(email.getValue(), null));\n+\t\t }\n          user.setEmailAddresses(tempEmails);\n          \n          List<Address> addressList = contact.getAddress();\n-         Address[] addresses = new Address[addressList.size()];\n-         addressList.toArray(addresses);\n-         \n          ArrayList<PostalAddress> tempAddresses = new ArrayList<PostalAddress>();\n-         for (int x = 0; x < addresses.length; x++) {\n-        \t ArrayList<AddressLine> addressLineList = new ArrayList<AddressLine>(addresses[x].getAddressLine());\n+         for (Address address : addressList) {\n+        \t ArrayList<AddressLine> addressLineList = new ArrayList<AddressLine>(address.getAddressLine());\n         \t AddressLine[] alines = new AddressLine[addressLineList.size()];\n         \t addressLineList.toArray(alines);\n         \t \n         \t PostalAddress pa = getPostalAddress(alines);\n         \t tempAddresses.add(pa);\n-         }\n+\t\t }\n          user.setPostalAddresses(tempAddresses);\n          \n          List<Phone> phoneList = contact.getPhone();\n-         Phone[] phones = new Phone[phoneList.size()];\n-         phoneList.toArray(phones);\n-         \n          ArrayList<TelephoneNumber> tempPhones = new ArrayList<TelephoneNumber>();\n-         for (int x = 0; x < phones.length; x++) {\n+         boolean isFirst=true;\n+         for (Phone phone : phoneList) {\n         \t TelephoneNumberImpl tni = new TelephoneNumberImpl();\n-        \t tni.setType(phones[x].getUseType());\n-        \t tni.setNumber(phones[x].getValue());\n+        \t tni.setType(phone.getUseType());\n+        \t tni.setNumber(phone.getValue());\n         \t tempPhones.add(tni);\n-         }\n-         user.setTelephoneNumbers(tempPhones);\n-         \n-         if (i == 0)\n-         {\n-            org.setPrimaryContact(user);\n-         }\n-         else\n-         {\n-            org.addUser(user);\n+\t         user.setTelephoneNumbers(tempPhones);\n+\t         if (isFirst) {\n+\t        \t isFirst=false;\n+\t            org.setPrimaryContact(user);\n+\t         } else {\n+\t            org.addUser(user);\n+\t         }\n          }\n       }\n \n@@ -327,14 +278,9 @@ public static Organization getOrganization(BusinessDetail bizdetail,\n       if (durls != null)\n       {\n     \t List<DiscoveryURL> discoveryURL_List = durls.getDiscoveryURL();\n-         DiscoveryURL[] darr = new DiscoveryURL[discoveryURL_List.size()];\n-         discoveryURL_List.toArray(darr);\n-         \n-         for (int j = 0; darr != null && j < darr.length; j++)\n-         {\n-            DiscoveryURL durl = darr[j];\n+         for (DiscoveryURL discoveryURL : discoveryURL_List) {\n             ExternalLink link = new ExternalLinkImpl(lifeCycleManager);\n-            link.setExternalURI(durl.getValue());\n+            link.setExternalURI(discoveryURL.getValue());\n             org.addExternalLink(link);\n          }\n       }\n@@ -382,7 +328,11 @@ private static PostalAddress getPostalAddress(AddressLine[] addressLineArr) thro\n    private static InternationalString getIString(String lang, String str, LifeCycleManager lifeCycleManager)\n        throws JAXRException\n    {\n-       return lifeCycleManager.createInternationalString(getLocale(lang), str);\n+\t   if (str!=null) {\n+\t\t   return lifeCycleManager.createInternationalString(getLocale(lang), str);\n+\t   } else {\n+\t\t   return null;\n+\t   }\n    }\n    \n    public static InternationalString getIString(String str, LifeCycleManager lifeCycleManager)\n@@ -403,35 +353,26 @@ public static Service getService(BusinessService businessService, LifeCycleManag\n          serve.setKey(lifeCycleManager.createKey(keystr));\n       }\n \n-      Name[] namearr = getNameArray(businessService.getName());\n-\n-      Name n = namearr != null && namearr.length > 0 ? namearr[0] : null;\n+      Name n = null;\n+      if (businessService.getName().size()>0) n = businessService.getName().get(0);\n \n       if (n != null) {\n     \t  String name = n.getValue();\n     \t  serve.setName(lifeCycleManager.createInternationalString(getLocale(n.getLang()), name));\n       }\n \n-      Description[] descarr = getDescriptionArray(businessService.getDescription());\n-      Description desc = descarr != null && descarr.length > 0 ? descarr[0] : null;\n+      Description desc =null;\n+      if (businessService.getDescription().size()>0) desc = businessService.getDescription().get(0);\n       if (desc != null ) {\n           serve.setDescription(lifeCycleManager.createInternationalString(getLocale(desc.getLang()), desc.getValue()));\n       }\n       \n       //Populate the ServiceBindings for this Service\n       BindingTemplates bts = businessService.getBindingTemplates();\n       List<BindingTemplate> bindingTemplateList = bts.getBindingTemplate();\n-      \n-      BindingTemplate[] btarr = bts != null ? new BindingTemplate[bindingTemplateList.size()] : null;\n-      if(btarr != null)\n-    \t  bindingTemplateList.toArray(btarr);\n-      \n-      for (int i = 0; btarr != null && i < btarr.length; i++)\n-      {\n-    \t  BindingTemplate bindingTemplate = (BindingTemplate)btarr[i];\n-          serve.addServiceBinding(getServiceBinding(bindingTemplate, lifeCycleManager));\n-      }\n-      \n+      for (BindingTemplate bindingTemplate : bindingTemplateList) {\n+    \t  serve.addServiceBinding(getServiceBinding(bindingTemplate, lifeCycleManager));\n+\t  }\n       serve.addClassifications(getClassifications(businessService.getCategoryBag(), lifeCycleManager));\n       \n       return serve;\n@@ -449,14 +390,12 @@ public static Service getService(ServiceInfo serviceInfo, LifeCycleManager lifeC\n          service.setKey(lifeCycleManager.createKey(keystr));\n       }\n \n-      Name[] namearr = getNameArray(serviceInfo.getName());\n-      Name n = namearr != null && namearr.length > 0 ? namearr[0] : null;\n-\n+      Name n = null;\n+      if (serviceInfo.getName().size()>0) n = serviceInfo.getName().get(0);\n       if (n != null) {\n     \t  String name = n.getValue();\n     \t  service.setName(lifeCycleManager.createInternationalString(getLocale(n.getLang()), name));\n       }\n-\n       return service;\n    }\n \n@@ -480,11 +419,10 @@ public static ServiceBinding getServiceBinding(BindingTemplate businessTemplate,\n       if (access != null) serviceBinding.setAccessURI(access.getValue());\n \n       //Description\n-      Description[] da = getDescriptionArray(businessTemplate.getDescription());\n-      if (da != null && da.length > 0)\n-      {\n-         Description des = da[0];\n-         serviceBinding.setDescription(new InternationalStringImpl(des.getValue()));\n+      Description desc = null;\n+      if (businessTemplate.getDescription().size()>0) desc = businessTemplate.getDescription().get(0);\n+      if (desc!=null) {\n+         serviceBinding.setDescription(new InternationalStringImpl(desc.getValue()));\n       }\n       /**Section D.10 of JAXR 1.0 Specification */\n       \n@@ -529,13 +467,7 @@ public static Concept getConcept(TModelDetail tModelDetail, LifeCycleManager lif\n    {\n       Concept concept = new ConceptImpl(lifeCycleManager);\n       List<TModel> tmodelList = tModelDetail.getTModel();\n-      \n-      TModel[] tc = new TModel[tmodelList.size()];\n-      tmodelList.toArray(tc);\n-      \n-      TModel tmodel = tc != null && tc.length > 0 ? tc[0] : null;\n-      \n-      if (tmodel != null) {\n+      for (TModel tmodel : tmodelList) {\n     \t  concept.setKey(lifeCycleManager.createKey(tmodel.getTModelKey()));\n     \t  concept.setName(lifeCycleManager.createInternationalString(getLocale(tmodel.getName().getLang()),\n     \t\t\t  tmodel.getName().getValue()));\n@@ -585,9 +517,9 @@ public static Concept getConcept(TModelInfo tModelInfo, LifeCycleManager lifeCyc\n \n    private static Description getDescription( TModel tmodel )\n    {\n-      Description[] descarr = getDescriptionArray(tmodel.getDescription());\n-      Description desc = descarr != null && descarr.length > 0 ? descarr[0] : null;\n-      return desc;\n+\t   Description desc = null;\n+\t   if (tmodel.getDescription().size()>0) desc=tmodel.getDescription().get(0);\n+       return desc;\n    }\n \n    /**\n@@ -603,19 +535,12 @@ public static Collection getClassifications(CategoryBag categoryBag, LifeCycleMa\n \t   Collection<Classification> classifications = null;\n \t   if (categoryBag != null) {\n \t\t    classifications = new ArrayList<Classification>();\n-\t\t    \n \t\t    List<KeyedReference> keyedReferenceList = categoryBag.getKeyedReference();\n-\t\t\tKeyedReference[] keyrarr = new KeyedReference[keyedReferenceList.size()];\n-\t\t\tkeyedReferenceList.toArray(keyrarr);\n-\t\t\t\n-\t\t\tfor (int i = 0; keyrarr != null && i < keyrarr.length; i++)\n-\t\t\t{\n-\t\t\t\tKeyedReference keyr = (KeyedReference)keyrarr[i];\n+\t\t    for (KeyedReference keyedReference : keyedReferenceList) {\n \t\t\t\tClassification classification = new ClassificationImpl(lifeCycleManager);\n-\t\t\t\tclassification.setValue(keyr.getKeyValue());\n-\t\t\t\tclassification.setName(new InternationalStringImpl(keyr.getKeyName()));\n-\t\t\t\t \n-\t\t\t\tString tmodelKey = keyr.getTModelKey();\n+\t\t\t\tclassification.setValue(keyedReference.getKeyValue());\n+\t\t\t\tclassification.setName(new InternationalStringImpl(keyedReference.getKeyName()));\n+\t\t\t\tString tmodelKey = keyedReference.getTModelKey();\n \t\t\t\tif (tmodelKey != null) {\n \t\t\t\t\tClassificationScheme scheme = new ClassificationSchemeImpl(lifeCycleManager);\n \t\t\t\t\tscheme.setKey(new KeyImpl(tmodelKey));\n@@ -633,12 +558,11 @@ public static Collection getClassifications(CategoryBag categoryBag, LifeCycleMa\n        ArrayList<ExternalLink> alist = new ArrayList<ExternalLink>(1);\n        if(overviewDoc != null)\n        {\n-           Description[] descVect = getDescriptionArray(overviewDoc.getDescription());\n-           String desc = \"\";\n-           if(descVect != null && descVect.length > 0) {\n-             desc = ((Description)descVect[0]).getValue(); \n-           }\n-           alist.add(lifeCycleManager.createExternalLink(overviewDoc.getOverviewURL(),desc));\n+    \t   String descStr = \"\";\n+    \t   Description desc = null;\n+    \t   if (overviewDoc.getDescription().size()>0) desc = overviewDoc.getDescription().get(0);\n+           if (desc !=null) descStr = desc.getValue();\n+           alist.add(lifeCycleManager.createExternalLink(overviewDoc.getOverviewURL(),descStr));\n        }\n        \n        return alist;\n@@ -659,17 +583,12 @@ public static Collection getClassifications(CategoryBag categoryBag, LifeCycleMa\n     \t  extidentifiers = new ArrayList<ExternalIdentifier>();\n     \t  \n     \t  List<KeyedReference> keyedReferenceList = identifierBag.getKeyedReference();\n-          KeyedReference[] keyrarr = new KeyedReference[keyedReferenceList.size()];\n-          keyedReferenceList.toArray(keyrarr);\n-          \n-          for (int i = 0; keyrarr != null && i < keyrarr.length; i++)\n-          {\n-             KeyedReference keyr = (KeyedReference)keyrarr[i];\n+          for (KeyedReference keyedReference : keyedReferenceList) {\n              ExternalIdentifier extId = new ExternalIdentifierImpl(lifeCycleManager);\n-             extId.setValue(keyr.getKeyValue());\n-             extId.setName(new InternationalStringImpl(keyr.getKeyName()));\n+             extId.setValue(keyedReference.getKeyValue());\n+             extId.setName(new InternationalStringImpl(keyedReference.getKeyName()));\n              \n-             String tmodelKey = keyr.getTModelKey();\n+             String tmodelKey = keyedReference.getTModelKey();\n              if (tmodelKey != null) {\n             \t ClassificationScheme scheme = new ClassificationSchemeImpl(lifeCycleManager);\n             \t scheme.setKey(new KeyImpl(tmodelKey));\n@@ -691,17 +610,4 @@ private static Locale getLocale(String lang) {\n        } \n    }\n    \n-   private static Name[] getNameArray(List<Name> nameList)\n-   {\n-\t   Name[] namearr = new Name[nameList.size()];\n-\t   nameList.toArray(namearr);\n-\t   return namearr;\n-   }\n-   \n-   private static Description[] getDescriptionArray(List<Description> descList)\n-   {\n-\t   Description[] descarr = new Description[descList.size()];\n-\t   descList.toArray(descarr);\n-\t   return descarr;\n-   }\n }\n\\ No newline at end of file", "filename": "src/main/java/org/apache/ws/scout/util/ScoutUddiJaxrHelper.java"}, {"additions": 2, "raw_url": "https://github.com/apache/juddi-scout/raw/2d52b7d36eb72807f02c7e7a3db6f5b62a718e09/src/test/java/org/apache/ws/scout/Creator.java", "blob_url": "https://github.com/apache/juddi-scout/blob/2d52b7d36eb72807f02c7e7a3db6f5b62a718e09/src/test/java/org/apache/ws/scout/Creator.java", "sha": "eacc20803442b0c5f14162760c9ddc7773d7f71b", "changes": 4, "status": "modified", "deletions": 2, "contents_url": "https://api.github.com/repos/apache/juddi-scout/contents/src/test/java/org/apache/ws/scout/Creator.java?ref=2d52b7d36eb72807f02c7e7a3db6f5b62a718e09", "patch": "@@ -63,10 +63,10 @@ public Organization createOrganization(String name) throws JAXRException\n         org.setPrimaryContact(user);\n         PersonName personName = blm.createPersonName(\"John AXel Rose\");\n         TelephoneNumber telephoneNumber = blm.createTelephoneNumber();\n-        telephoneNumber.setNumber(\"111-222-333\");\n+        telephoneNumber.setNumber(\"111-222-3333\");\n         telephoneNumber.setType(null);\n         PostalAddress address = blm.createPostalAddress(\"1\",\n-            \"UDDI Drive\", \"Apache Town\",\"OS\", \"USA\", \"00000-1111\", \"\");\n+            \"Uddi Drive\", \"Apache Town\",\"CA\", \"USA\", \"00000-1111\", \"\");\n         \n         Collection<PostalAddress> postalAddresses = new ArrayList<PostalAddress>();\n         postalAddresses.add(address);", "filename": "src/test/java/org/apache/ws/scout/Creator.java"}], "repo": "juddi-scout"}, {"commit": "https://github.com/apache/juddi-scout/commit/71cd6d1c7aa02c2c353e9a0ed7e0b4c95f61238a", "parent": "https://github.com/apache/juddi-scout/commit/6563cea256e982669290e3c3599a61175d0dae88", "message": "SCOUT-80 NPE and updates some nearby code and reinstates a tck-required exception removed in SCOUT-43\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/scout/branches/v1.1/scout@797255 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "juddi-scout_3", "file": [{"additions": 62, "raw_url": "https://github.com/apache/juddi-scout/raw/71cd6d1c7aa02c2c353e9a0ed7e0b4c95f61238a/src/main/java/org/apache/ws/scout/registry/BusinessQueryManagerImpl.java", "blob_url": "https://github.com/apache/juddi-scout/blob/71cd6d1c7aa02c2c353e9a0ed7e0b4c95f61238a/src/main/java/org/apache/ws/scout/registry/BusinessQueryManagerImpl.java", "sha": "07de1f172262ed012ff0eaa78af71415ffbd0d08", "changes": 186, "status": "modified", "deletions": 124, "contents_url": "https://api.github.com/repos/apache/juddi-scout/contents/src/main/java/org/apache/ws/scout/registry/BusinessQueryManagerImpl.java?ref=71cd6d1c7aa02c2c353e9a0ed7e0b4c95f61238a", "patch": "@@ -458,26 +458,20 @@ else if (\"PostalAddressAttributes\".equals(namePatterns)) {\n                 {\r\n                     //We are looking for one exact match, so getting upto 3 records is fine\r\n                     TModelList list = registry.findTModel(namePatterns, null, null, juddiFindQualifiers, 3);\r\n-                    TModelInfos infos = null;\r\n-                    TModelInfo[] tmarr = null;\r\n-                    if (list != null) infos = list.getTModelInfos();\r\n-                    if (infos != null) \r\n-                    {\r\n-                    \tList<TModelInfo> tmodelInfoList = infos.getTModelInfo();\r\n-                    \ttmarr = new TModelInfo[tmodelInfoList.size()];\r\n-                    \ttmodelInfoList.toArray(tmarr);\r\n-                    }\r\n-                    \t\r\n-                    \t\r\n-                    if (tmarr != null && tmarr.length > 0)\r\n-                    {\r\n-                        /*if (tmarr.length > 1)\r\n-                            throw new InvalidRequestException(\"Multiple matches found:\" + tmarr.length);\r\n-*/\r\n-                        TModelInfo info = tmarr[0];\r\n-                        scheme = new ClassificationSchemeImpl(registryService.getLifeCycleManagerImpl());\r\n-                        scheme.setName(new InternationalStringImpl(info.getName().getValue()));\r\n-                        scheme.setKey(new KeyImpl(info.getTModelKey()));\r\n+                    if (list != null) {\r\n+                        TModelInfos infos = list.getTModelInfos();\r\n+                        if (infos != null) {\r\n+                            List<TModelInfo> tmodelInfoList = infos.getTModelInfo();\r\n+                            if (tmodelInfoList.size() > 1) {\r\n+                                throw new InvalidRequestException(\"Multiple matches found:\" + tmodelInfoList.size());\r\n+                            }\r\n+                            if (tmodelInfoList.size() ==1) {\r\n+                                TModelInfo info = tmodelInfoList.get(0);\r\n+                                scheme = new ClassificationSchemeImpl(registryService.getLifeCycleManagerImpl());\r\n+                                scheme.setName(new InternationalStringImpl(info.getName().getValue()));\r\n+                                scheme.setKey(new KeyImpl(info.getTModelKey()));\r\n+                            }\r\n+                        }\r\n                     }\r\n \r\n                 } catch (RegistryException e)\r\n@@ -561,24 +555,16 @@ public BulkResponse findConcepts(Collection findQualifiers,\n                         ScoutJaxrUddiHelper.getCategoryBagFromClassifications(classifications), \r\n                         ScoutJaxrUddiHelper.getIdentifierBagFromExternalIdentifiers(externalIdentifiers), \r\n                 \t\tjuddiFindQualifiers, 10);\r\n-                TModelInfos infos = null;\r\n-                TModelInfo[] tmarr = null;\r\n-                if (list != null) infos = list.getTModelInfos();\r\n-                if (infos != null)\r\n-                {\r\n-                \tList<TModelInfo> tmodelInfoList = infos.getTModelInfo();\r\n-                \ttmarr = new TModelInfo[tmodelInfoList.size()];\r\n-                \ttmodelInfoList.toArray(tmarr);\r\n-                }\r\n-                \t\r\n-                for (int i = 0; tmarr != null && i < tmarr.length; i++)\r\n-                {\r\n-                    TModelInfo info = tmarr[i];\r\n-                    col.add(ScoutUddiJaxrHelper.getConcept(info, this.registryService.getBusinessLifeCycleManager()));\r\n+               \r\n+                if (list != null && list.getTModelInfos()!=null) {\r\n+                \tList<TModelInfo> tmodelInfoList = list.getTModelInfos().getTModelInfo();\r\n+                \tif (tmodelInfoList!=null) {\r\n+                \t\tfor (TModelInfo info: tmodelInfoList) {\r\n+                            col.add(ScoutUddiJaxrHelper.getConcept(info, this.registryService.getBusinessLifeCycleManager()));\r\n+\t\t\t\t\t\t}\r\n+                \t}\r\n                 }\r\n-\r\n-            } catch (RegistryException e)\r\n-            { \r\n+            } catch (RegistryException e) { \r\n                 throw new JAXRException(e.getLocalizedMessage());\r\n             }\r\n         }\r\n@@ -694,23 +680,15 @@ public BulkResponse findServices(Key orgKey, Collection findQualifiers,\n             if (serviceList != null) {\r\n \r\n                 ServiceInfos serviceInfos = serviceList.getServiceInfos();\r\n-                ServiceInfo[] serviceInfoArr = null;\r\n-                \r\n-                if(serviceInfos != null)\r\n-                {\r\n-                \tList<ServiceInfo> serviceInfoList = serviceInfos.getServiceInfo();\r\n-                \tserviceInfoArr = new ServiceInfo[serviceInfoList.size()];\r\n-                \tserviceInfoList.toArray(serviceInfoArr);\r\n-                }\r\n-\r\n                 LinkedHashSet<Service> col = new LinkedHashSet<Service>();\r\n-\r\n-                for (int i=0; serviceInfoArr != null && i < serviceInfoArr.length; i++) {\r\n-                    ServiceInfo si = (ServiceInfo) serviceInfoArr[i];\r\n-\t\t\t\t\tService srv = (Service) getRegistryObject(si.getServiceKey(), LifeCycleManager.SERVICE);\r\n-                    col.add(srv);\r\n+                \r\n+                if(serviceInfos != null && serviceInfos.getServiceInfo()!=null) {\r\n+                \tfor (ServiceInfo si : serviceInfos.getServiceInfo()) {\r\n+                \t\tService srv = (Service) getRegistryObject(si.getServiceKey(), LifeCycleManager.SERVICE);\r\n+                        col.add(srv);\r\n+\t\t\t\t\t}\r\n+                \t\r\n                 }\r\n-\r\n                 blkRes.setCollection(col);\r\n             }\r\n         }\r\n@@ -779,21 +757,12 @@ else if (LifeCycleManager.CONCEPT.equalsIgnoreCase(objectType)) {\n         else if (LifeCycleManager.SERVICE.equalsIgnoreCase(objectType)) {\r\n \r\n             try {\r\n-\r\n-               \r\n                 ServiceDetail sd = registry.getServiceDetail(id);\r\n-\r\n-                if (sd != null) {\r\n-\r\n-                \tList<BusinessService> businessServiceList = sd.getBusinessService();\r\n-                    BusinessService[] businessServiceArr = new BusinessService[businessServiceList.size()];\r\n-                    businessServiceList.toArray(businessServiceArr);\r\n-\r\n-                    if (businessServiceArr != null && businessServiceArr.length != 0) {\r\n-                        Service service = getServiceFromBusinessService(businessServiceArr[0], lcm);\r\n-\r\n-                        return service;\r\n-                    }\r\n+                if (sd != null && sd.getBusinessService()!=null) {\r\n+                    for (BusinessService businessService : sd.getBusinessService()) {\r\n+                    \tService service = getServiceFromBusinessService(businessService, lcm);\r\n+                    \treturn service;\r\n+\t\t\t\t\t}\r\n                 }\r\n             }\r\n             catch (RegistryException e) {\r\n@@ -868,10 +837,7 @@ public BulkResponse getRegistryObjects(Collection<Key> objectKeys, String object\n         //Convert into a vector of strings\r\n         String[] keys = new String[objectKeys.size()];\r\n         int currLoc = 0;\r\n-        Iterator iter = objectKeys.iterator();\r\n-        while(iter.hasNext())\r\n-        {\r\n-            Key key = (Key)iter.next();\r\n+        for (Key key : objectKeys) {\r\n             keys[currLoc] = key.getId();\r\n             currLoc++;\r\n         }\r\n@@ -884,12 +850,10 @@ public BulkResponse getRegistryObjects(Collection<Key> objectKeys, String object\n             {\r\n                 TModelDetail tmodeldetail = registry.getTModelDetail(keys);\r\n                 List<TModel> tmodelList = tmodeldetail.getTModel();\r\n-                TModel[] tmarray = new TModel[tmodelList.size()];\r\n-                tmodelList.toArray(tmarray);\r\n-                \r\n-                for (int i = 0; tmarray != null && i < tmarray.length; i++)\r\n+\r\n+                for (TModel tModel: tmodelList)\r\n                 {\r\n-                    col.add(ScoutUddiJaxrHelper.getConcept(tmarray[i], lcm));\r\n+                    col.add(ScoutUddiJaxrHelper.getConcept(tModel, lcm));\r\n                 }\r\n \r\n             } catch (RegistryException e)\r\n@@ -905,24 +869,17 @@ else if (LifeCycleManager.ORGANIZATION.equalsIgnoreCase(objectType))\n             try\r\n             {\r\n             \tRegisteredInfo ri = registry.getRegisteredInfo(auth.getAuthInfo());\r\n-            \tBusinessInfos infos = null;\r\n-            \tBusinessInfo[] biarr = null;\r\n-            \t\r\n-            \tif (ri != null) infos = ri.getBusinessInfos();\r\n-            \tif (infos != null) \r\n-                {\r\n-            \t\tList<BusinessInfo> bizInfoList = infos.getBusinessInfo();\r\n-            \t\tbiarr = new BusinessInfo[bizInfoList.size()];\r\n-            \t\tbizInfoList.toArray(biarr);\r\n-            \t}\r\n-            \t            \t\r\n-            \tfor (int i = 0; i < biarr.length; i++) {\r\n-            \t\tBusinessInfo info = biarr[i];\r\n-            \t\tBusinessDetail detail = registry.getBusinessDetail(info.getBusinessKey());\r\n-\r\n-                    col.add(registryService.getLifeCycleManagerImpl().createOrganization(detail));\r\n-            \t}\r\n-            } catch (RegistryException e) { \r\n+                if (ri != null) {\r\n+                    BusinessInfos infos = ri.getBusinessInfos();\r\n+                    if (infos != null) {\r\n+                        List<BusinessInfo> bizInfoList = infos.getBusinessInfo();\r\n+                        for (BusinessInfo businessInfo: bizInfoList) {\r\n+                            BusinessDetail detail = registry.getBusinessDetail(businessInfo.getBusinessKey());\r\n+                            col.add(registryService.getLifeCycleManagerImpl().createOrganization(detail));\r\n+                        }\r\n+                    }\r\n+                }\r\n+            } catch (RegistryException e) {\r\n                     throw new JAXRException(e.getLocalizedMessage());\r\n             }\r\n         }\r\n@@ -931,11 +888,10 @@ else if (LifeCycleManager.CONCEPT.equalsIgnoreCase(objectType))\n             try {\r\n                 TModelDetail tmodeldetail = registry.getTModelDetail(keys);\r\n                 List<TModel> tmodelList = tmodeldetail.getTModel();\r\n-                TModel[] tmarr = new TModel[tmodelList.size()];\r\n-                \r\n-                for (int i = 0; tmarr != null && i < tmarr.length; i++)\r\n+\r\n+                for (TModel tmodel: tmodelList)\r\n                 {\r\n-                    col.add(ScoutUddiJaxrHelper.getConcept(tmarr[i], lcm));\r\n+                    col.add(ScoutUddiJaxrHelper.getConcept(tmodel, lcm));\r\n                 }\r\n \r\n             }\r\n@@ -951,12 +907,10 @@ else if (LifeCycleManager.SERVICE.equalsIgnoreCase(objectType)) {\n \r\n                 if (serviceDetail != null) {\r\n                     List<BusinessService> bizServiceList = serviceDetail.getBusinessService();\r\n-                    BusinessService[] bizServiceArr = new BusinessService[bizServiceList.size()];\r\n-                    bizServiceList.toArray(bizServiceArr);\r\n \r\n-                    for (int i=0; bizServiceArr != null && i < bizServiceArr.length; i++) {\r\n+                    for (BusinessService businessService: bizServiceList) {\r\n \r\n-                        Service service = getServiceFromBusinessService(bizServiceArr[i], lcm);\r\n+                        Service service = getServiceFromBusinessService(businessService, lcm);\r\n                         \r\n                         col.add(service);\r\n                     }\r\n@@ -979,37 +933,21 @@ public BulkResponse getRegistryObjects(String id) throws JAXRException\n     {\r\n         if (LifeCycleManager.ORGANIZATION.equalsIgnoreCase(id)) {\r\n             IRegistry registry = registryService.getRegistry();\r\n-\r\n         \tConnectionImpl con = ((RegistryServiceImpl)getRegistryService()).getConnection();\r\n             AuthToken auth = this.getAuthToken(con,registry);\r\n-\r\n-            BulkResponse br = null;\r\n     \t\tLinkedHashSet<Organization> orgs = null;\r\n-            \r\n             try\r\n             {\r\n             \tRegisteredInfo ri = registry.getRegisteredInfo(auth.getAuthInfo());\r\n-            \tBusinessInfos infos = null;\r\n-            \tBusinessInfo[] biarr = null;\r\n-            \t\r\n-            \tif (ri != null) infos = ri.getBusinessInfos();\r\n-            \tif (infos != null)\r\n-                {\r\n-            \t\tList<BusinessInfo> bizInfoList = infos.getBusinessInfo();\r\n-            \t\tbiarr = new BusinessInfo[bizInfoList.size()];\r\n-            \t\tbizInfoList.toArray(biarr);\r\n-            \t}\r\n-            \t\r\n-            \tif (biarr != null) {\r\n-                    orgs = new LinkedHashSet<Organization>();\r\n+            \tif (ri != null && ri.getBusinessInfos()!=null) {\r\n+            \t\tList<BusinessInfo> bizInfoList = ri.getBusinessInfos().getBusinessInfo();\r\n+            \t\torgs = new LinkedHashSet<Organization>();\r\n+            \t\tfor (BusinessInfo businessInfo : bizInfoList) {\r\n+            \t\t\tBusinessDetail detail = registry.getBusinessDetail(businessInfo.getBusinessKey());\r\n+                        orgs.add(registryService.getLifeCycleManagerImpl().createOrganization(detail));\r\n+\t\t\t\t\t}\r\n             \t}\r\n             \t\r\n-            \tfor (int i = 0; i < biarr.length; i++) {\r\n-            \t\tBusinessInfo info = biarr[i];\r\n-            \t\tBusinessDetail detail = registry.getBusinessDetail(info.getBusinessKey());\r\n-\r\n-                    orgs.add(registryService.getLifeCycleManagerImpl().createOrganization(detail));\r\n-            \t}\r\n             } catch (RegistryException re) {\r\n             \tthrow new JAXRException(re);\r\n             }\r", "filename": "src/main/java/org/apache/ws/scout/registry/BusinessQueryManagerImpl.java"}], "repo": "juddi-scout"}, {"commit": "https://github.com/apache/juddi-scout/commit/bbdbc3c53035c0bd3fc94daa791588e361a14fa7", "parent": "https://github.com/apache/juddi-scout/commit/47473d5f1f557321550ee2ceec3cdbd655952867", "message": "JUDDI-537, Fixing NPE for methods that return void (null). Also the wrappers needed to handle cases where the Response and Request Wrapper annotations are used in the API. I special cased these cases in the RequestsHandler.\n\ngit-svn-id: https://svn.apache.org/repos/asf/juddi/scout/trunk@1234835 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "juddi-scout_4", "file": [{"additions": 30, "raw_url": "https://github.com/apache/juddi-scout/raw/bbdbc3c53035c0bd3fc94daa791588e361a14fa7/src/main/java/org/apache/ws/scout/registry/RegistryV3Impl.java", "blob_url": "https://github.com/apache/juddi-scout/blob/bbdbc3c53035c0bd3fc94daa791588e361a14fa7/src/main/java/org/apache/ws/scout/registry/RegistryV3Impl.java", "sha": "405c20ba419da163e25000719ad45dce1090bff2", "changes": 58, "status": "modified", "deletions": 28, "contents_url": "https://api.github.com/repos/apache/juddi-scout/contents/src/main/java/org/apache/ws/scout/registry/RegistryV3Impl.java?ref=bbdbc3c53035c0bd3fc94daa791588e361a14fa7", "patch": "@@ -719,10 +719,10 @@ public BusinessList findBusiness(Name[] nameArray,\n \n \t\trequest.setMaxRows(maxRows);\n \n-        BusinessList bl;\n+        BusinessList bl = null;\n         JAXBElement<?> o = execute(this.objectFactory.createFindBusiness(request),\n         \t\tthis.getInquiryURI());\n-        bl = (BusinessList) o.getValue();\n+        if (o != null) bl = (BusinessList) o.getValue();\n \n         return bl;\n \t}\n@@ -762,10 +762,10 @@ public BindingDetail findBinding(String serviceKey,\n \t\t}\n \t\trequest.setMaxRows(maxRows);\n \n-        BindingDetail bd;\n+        BindingDetail bd = null;\n         JAXBElement<?> o = execute(this.objectFactory.createFindBinding(request), \n         \t\tthis.getInquiryURI());\n-        bd = (BindingDetail) o.getValue();\n+        if (o != null) bd = (BindingDetail) o.getValue();\n \n         return bd;\n \t}\n@@ -806,10 +806,10 @@ public ServiceList findService(String businessKey, Name[] nameArray,\n \n \t\trequest.setMaxRows(maxRows);\n \n-        ServiceList sl;\n+        ServiceList sl = null;\n         JAXBElement<?> o = execute(this.objectFactory.createFindService(request), \n         \t\tthis.getInquiryURI());\n-        sl = (ServiceList) o.getValue();\n+        if (o != null) sl = (ServiceList) o.getValue();\n \n         return sl;\n \t}\n@@ -847,10 +847,10 @@ public TModelList findTModel(String name, CategoryBag categoryBag,\n \n \t\trequest.setMaxRows(maxRows);\n \n-        TModelList tml;\n+        TModelList tml = null;\n         JAXBElement<?> o = execute(this.objectFactory.createFindTModel(request), \n         \t\tthis.getInquiryURI());\n-        tml = (TModelList) o.getValue();\n+        if (o !=null) tml = (TModelList) o.getValue();\n \n         return tml;\n \t}\n@@ -871,7 +871,7 @@ public AssertionStatusReport getAssertionStatusReport(String authInfo,\n \t\t\trequest.setCompletionStatus(cs);\n \t\t}\n \n-        AssertionStatusReport asr;\n+        AssertionStatusReport asr = new AssertionStatusReport();\n         JAXBElement<?> o = execute(this.objectFactory.createGetAssertionStatusReport(request), \n         \t\tthis.getPublishURI());\n         asr = (AssertionStatusReport) o.getValue();\n@@ -943,7 +943,7 @@ public BusinessDetail getBusinessDetail(String[] businessKeyArray)\n \t\t\trequest.getBusinessKey().addAll(Arrays.asList(businessKeyArray));\n \t\t}\n \n-        BusinessDetail bd;\n+        BusinessDetail bd = null;\n         JAXBElement<?> o = execute(this.objectFactory.createGetBusinessDetail(request), \n         \t\tthis.getInquiryURI());\n         bd = (BusinessDetail) o.getValue(); \n@@ -964,10 +964,12 @@ public PublisherAssertions getPublisherAssertions(String authInfo)\n         PublisherAssertions pa = new PublisherAssertions();\n         JAXBElement<?> o = execute(this.objectFactory.createGetPublisherAssertions(request),\n         \t\tthis.getPublishURI());\n-        PublisherAssertionsResponse par = (PublisherAssertionsResponse) o.getValue();\n-        List<PublisherAssertion> assertions = par.getPublisherAssertion();\n-        for (int i = 0; i < assertions.size(); i++ ) {\n-        \tpa.getPublisherAssertion().add((PublisherAssertion)assertions.get(i));\n+        if (o != null) {\n+            PublisherAssertionsResponse par = (PublisherAssertionsResponse) o.getValue();\n+            List<PublisherAssertion> assertions = par.getPublisherAssertion();\n+            for (int i = 0; i < assertions.size(); i++ ) {\n+            \tpa.getPublisherAssertion().add((PublisherAssertion)assertions.get(i));\n+            }\n         }\n \n         return pa;\n@@ -986,10 +988,10 @@ public RegisteredInfo getRegisteredInfo(String authInfo)\n \t\t\n \t\trequest.setInfoSelection(InfoSelection.ALL);\n \n-        RegisteredInfo ri;\n+        RegisteredInfo ri = null;\n         JAXBElement<?> o = execute(this.objectFactory.createGetRegisteredInfo(request), \n         \t\tthis.getPublishURI());\n-        ri = (RegisteredInfo) o.getValue();\n+        if (o != null) ri = (RegisteredInfo) o.getValue();\n \n         return ri;\n \t}\n@@ -1022,10 +1024,10 @@ public ServiceDetail getServiceDetail(String[] serviceKeyArray)\n \t\t\trequest.getServiceKey().addAll(Arrays.asList(serviceKeyArray));\n \t\t}\n \n-        ServiceDetail sd;\n+        ServiceDetail sd = null;\n         JAXBElement<?> o = execute(this.objectFactory.createGetServiceDetail(request), \n         \t\tthis.getInquiryURI());\n-        sd = (ServiceDetail) o.getValue();\n+        if (o != null) sd = (ServiceDetail) o.getValue();\n \n         return sd;\n \t}\n@@ -1058,10 +1060,10 @@ public TModelDetail getTModelDetail(String[] tModelKeyArray)\n \t\t\trequest.getTModelKey().addAll(Arrays.asList(tModelKeyArray));\n \t\t}\n \n-        TModelDetail tmd;\n+        TModelDetail tmd = null;\n         JAXBElement<?> o = execute(this.objectFactory.createGetTModelDetail(request), \n         \t\tthis.getInquiryURI());\n-        tmd = (TModelDetail) o.getValue();\n+        if (o != null) tmd = (TModelDetail) o.getValue();\n \n         return tmd;\n \t}\n@@ -1108,10 +1110,10 @@ public BindingDetail saveBinding(String authInfo,\n \t\t\trequest.getBindingTemplate().addAll(Arrays.asList(bindingArray));\n \t\t}\n \t\t\n-        BindingDetail bd;\n+        BindingDetail bd = null;\n         JAXBElement<?> o = execute(this.objectFactory.createSaveBinding(request), \n         \t\tthis.getPublishURI());\n-        bd = (BindingDetail) o.getValue();\n+        if (o != null) bd = (BindingDetail) o.getValue();\n \n         return bd;\n \t}\n@@ -1143,10 +1145,10 @@ public BusinessDetail saveBusiness(String authInfo,\n \t\t\trequest.getBusinessEntity().addAll(Arrays.asList(businessArray));\n \t\t}\n \t\t\n-        BusinessDetail bd;\n+        BusinessDetail bd = null;\n         JAXBElement<?> o = execute(this.objectFactory.createSaveBusiness(request), \n         \t\tthis.getPublishURI());\n-        bd = (BusinessDetail) o.getValue();\n+        if (o != null) bd = (BusinessDetail) o.getValue();\n \n         return bd;\n \t}\n@@ -1169,10 +1171,10 @@ public ServiceDetail saveService(String authInfo,\n \t\t\trequest.getBusinessService().addAll(Arrays.asList(serviceArray));\n \t\t}\n \n-        ServiceDetail sd;\n+        ServiceDetail sd = null;\n         JAXBElement<?> o = execute(this.objectFactory.createSaveService(request), \n         \t\tthis.getPublishURI());\n-        sd = (ServiceDetail) o.getValue();\n+        if (o != null) sd = (ServiceDetail) o.getValue();\n \n         return sd;\n \t}\n@@ -1194,10 +1196,10 @@ public TModelDetail saveTModel(String authInfo, TModel[] tModelArray)\n \t\t\trequest.getTModel().addAll(Arrays.asList(tModelArray));\n \t\t}\n \n-        TModelDetail tmd;\n+        TModelDetail tmd = null;\n         JAXBElement<?> o = execute(this.objectFactory.createSaveTModel(request), \n         \t\tthis.getPublishURI());\n-        tmd = (TModelDetail) o.getValue();\n+        if (o != null) tmd = (TModelDetail) o.getValue();\n         return tmd;\n \t}\n ", "filename": "src/main/java/org/apache/ws/scout/registry/RegistryV3Impl.java"}], "repo": "juddi-scout"}, {"commit": "https://github.com/apache/juddi-scout/commit/5cff5bf17ef76ec13a9713ff2418ccf43564a881", "parent": "https://github.com/apache/juddi-scout/commit/88f7e0ece49ac45735c80d76203b292dfd771366", "message": "Fix for SCOUT-29 - AuthTokenImpl.getAuthInfo() doesn't seem to work correctly\nFix for SCOUT-32 - Fix NPE at getConcept\nFix for SCOUT-33 - Should throw exception when level 1 feature is accessed in RegistryEntryImpl.java\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/scout/trunk/modules/scout@536553 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "juddi-scout_5", "file": [{"additions": 47, "raw_url": "https://github.com/apache/juddi-scout/raw/5cff5bf17ef76ec13a9713ff2418ccf43564a881/src/java/org/apache/ws/scout/registry/RegistryImpl.java", "blob_url": "https://github.com/apache/juddi-scout/blob/5cff5bf17ef76ec13a9713ff2418ccf43564a881/src/java/org/apache/ws/scout/registry/RegistryImpl.java", "sha": "5d3491ba26d9c6a8c86a2ec93e41464d8fff1d04", "changes": 77, "status": "modified", "deletions": 30, "contents_url": "https://api.github.com/repos/apache/juddi-scout/contents/src/java/org/apache/ws/scout/registry/RegistryImpl.java?ref=5cff5bf17ef76ec13a9713ff2418ccf43564a881", "patch": "@@ -20,11 +20,13 @@\n import java.net.URISyntaxException;\n import java.util.Properties;\n \n+import javax.xml.namespace.QName;\n import javax.xml.parsers.DocumentBuilder;\n import javax.xml.parsers.DocumentBuilderFactory;\n import javax.xml.parsers.ParserConfigurationException;\n \n import org.apache.ws.scout.transport.Transport;\n+import org.apache.xmlbeans.XmlCursor;\n import org.apache.xmlbeans.XmlException;\n import org.apache.xmlbeans.XmlObject;\n import org.w3c.dom.Document;\n@@ -262,43 +264,58 @@ public XmlObject execute(XmlObject uddiRequest, URI endPointURI)\n         }\n \t\tElement request = doc.getDocumentElement();\n \n-\t\trequest.setAttribute(\"generic\", this.getUddiVersion());\n-\t\trequest.setAttributeNS(\"http://www.w3.org/2000/xmlns/\",\"xmlns\", this.getUddiNamespace());\n-\t\t// A SOAP request is made and a SOAP response\n-\t\t// is returned.\n+\t    request.setAttribute(\"generic\", this.getUddiVersion());\n+\t    request.setAttributeNS(\"http://www.w3.org/2000/xmlns/\",\"xmlns\", this.getUddiNamespace());\n+\t    // A SOAP request is made and a SOAP response\n+\t    // is returned.\n \n-\t\tElement response = transport.send(request, endPointURI);\n+\t    Element response = transport.send(request, endPointURI);\n         \n         if (response.getNamespaceURI()==null) {\n             response.setAttributeNS(\"http://www.w3.org/2000/xmlns/\",\"xmlns\", this.getUddiNamespace());\n         }\n-\t\t// First, let's make sure that a response\n-\t\t// (any response) is found in the SOAP Body.\n+\t    // First, let's make sure that a response\n+\t    // (any response) is found in the SOAP Body.\n \n-\t\tString responseName = response.getLocalName();\n-\t\tif (responseName == null) {\n-\t\t\tthrow new RegistryException(\"Unsupported response \"\n-\t\t\t\t\t+ \"from registry. A value was not present.\");\n-\t\t}\n-\n-\t\t// Let's now try to determine which UDDI response\n-\t\t// we received and unmarshal it appropriately or\n-\t\t// throw a RegistryException if it's unknown.\n-\n-\t\t// Well, we have now determined that something was\n-\t\t// returned and it is \"a something\" that we know\n-\t\t// about so let's unmarshal it into a RegistryObject\n-\n-\t\t// Next, let's make sure we didn't recieve a SOAP\n-\t\t// Fault. If it is a SOAP Fault then throw it\n-\t\t// immediately.\n-\n-\t\tXmlObject uddiResponse = null;\n-\t\ttry {\n-\t\t\tuddiResponse = XmlObject.Factory.parse(response);\n-\t\t} catch (XmlException xmle) {\n-\t\t\tthrow (new RegistryException(xmle));\n+\t    String responseName = response.getLocalName();\n+\t    if (responseName == null) {\n+\t        throw new RegistryException(\"Unsupported response \"\n+\t                + \"from registry. A value was not present.\");\n \t\t}\n+ \n+        // Let's now try to determine which UDDI response\n+        // we received and unmarshal it appropriately or\n+        // throw a RegistryException if it's unknown.\n+        // Well, we have now determined that something was\n+        // returned and it is \"a something\" that we know\n+        // about so let's unmarshal it into a RegistryObject\n+        // Next, let's make sure we didn't recieve a SOAP\n+        // Fault. If it is a SOAP Fault then throw it\n+        // immediately.\n+\n+        XmlObject uddiResponse = null;\n+\t    try {\n+\t        uddiResponse = XmlObject.Factory.parse(response);\n+            XmlCursor cursor = uddiResponse.newCursor();\n+            cursor.toNextToken();\n+            //set the namespace if it is empty here.  This is needed for the find_element_user to work.\n+            if (\"\".equals(cursor.getName().getNamespaceURI())) {\n+                cursor.setName(new QName(this.getUddiNamespace(), cursor.getName().getLocalPart()));\n+                //there seems to have a bug in setName and it will set the next Start with xmlns=\"\".\n+                //The workaround is to set it to uddiNamespace when it is empty.\n+                while (cursor.hasNextToken()) {\n+                    cursor.toNextToken();\n+                    if (cursor.isStart()) {\n+                        if (\"\".equals(cursor.getName().getNamespaceURI())) {\n+                            cursor.setName(new QName(this.getUddiNamespace(), cursor.getName().getLocalPart()));\n+                        }\n+                    }\n+                }\n+                cursor.dispose();\n+            }\n+\t    } catch (XmlException xmle) {\n+\t        throw (new RegistryException(xmle));\n+\t    }\n \n \t\tif (responseName.toLowerCase().equals(\"fault\")) {\n \t\t\tNodeList nodeList = null;", "filename": "src/java/org/apache/ws/scout/registry/RegistryImpl.java"}, {"additions": 104, "raw_url": "https://github.com/apache/juddi-scout/raw/5cff5bf17ef76ec13a9713ff2418ccf43564a881/src/java/org/apache/ws/scout/registry/infomodel/RegistryEntryImpl.java", "blob_url": "https://github.com/apache/juddi-scout/blob/5cff5bf17ef76ec13a9713ff2418ccf43564a881/src/java/org/apache/ws/scout/registry/infomodel/RegistryEntryImpl.java", "sha": "81c85f4baeac1f883a5db2e605283d45f3c98934", "changes": 207, "status": "modified", "deletions": 103, "contents_url": "https://api.github.com/repos/apache/juddi-scout/contents/src/java/org/apache/ws/scout/registry/infomodel/RegistryEntryImpl.java?ref=5cff5bf17ef76ec13a9713ff2418ccf43564a881", "patch": "@@ -1,103 +1,104 @@\n-/*\r\n- * Copyright 2001-2004 The Apache Software Foundation.\r\n- *\r\n- * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n- * you may not use this file except in compliance with the License.\r\n- * You may obtain a copy of the License at\r\n- *\r\n- *      http://www.apache.org/licenses/LICENSE-2.0\r\n- *\r\n- * Unless required by applicable law or agreed to in writing, software\r\n- * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n- * See the License for the specific language governing permissions and\r\n- * limitations under the License.\r\n- */\r\n-\r\n-package org.apache.ws.scout.registry.infomodel;\r\n-\r\n-import javax.xml.registry.JAXRException;\r\n-import javax.xml.registry.LifeCycleManager;\r\n-import javax.xml.registry.infomodel.RegistryEntry;\r\n-import java.util.Date;\r\n-\r\n-/**\r\n- * Implements JAXR Interface.\r\n- * For futher details, look into the JAXR API Javadoc.\r\n- *\r\n- * @author Anil Saldhana  <anil@apache.org>\r\n- */\r\n-public class RegistryEntryImpl extends RegistryObjectImpl implements RegistryEntry\r\n-{\r\n-    private Date expiry = null;\r\n-    private int major = 1;\r\n-    private int minor = 0;\r\n-    private int stability = 1;\r\n-    private int status = 1;\r\n-\r\n-    private String userversion = new String();\r\n-\r\n-    /**\r\n-     * Creates a new instance of RegistryEntryImpl\r\n-     */\r\n-    public RegistryEntryImpl(LifeCycleManager lifeCycleManager)\r\n-    {\r\n-        super(lifeCycleManager);\r\n-    }\r\n-\r\n-    public Date getExpiration() throws JAXRException\r\n-    {\r\n-        return expiry;\r\n-    }\r\n-\r\n-    public int getMajorVersion() throws JAXRException\r\n-    {\r\n-        return major;\r\n-    }\r\n-\r\n-    public int getMinorVersion() throws JAXRException\r\n-    {\r\n-        return minor;\r\n-    }\r\n-\r\n-    public int getStability() throws JAXRException\r\n-    {\r\n-        return stability;\r\n-    }\r\n-\r\n-    public int getStatus() throws JAXRException\r\n-    {\r\n-        return status;\r\n-    }\r\n-\r\n-    public String getUserVersion() throws JAXRException\r\n-    {\r\n-        return userversion;\r\n-    }\r\n-\r\n-    public void setExpiration(Date date) throws JAXRException\r\n-    {\r\n-        expiry = date;\r\n-    }\r\n-\r\n-    public void setMajorVersion(int param) throws JAXRException\r\n-    {\r\n-        major = param;\r\n-    }\r\n-\r\n-    public void setMinorVersion(int param) throws JAXRException\r\n-    {\r\n-        minor = param;\r\n-    }\r\n-\r\n-    public void setStability(int param) throws JAXRException\r\n-    {\r\n-        stability = param;\r\n-    }\r\n-\r\n-    public void setUserVersion(String str) throws JAXRException\r\n-    {\r\n-        userversion = str;\r\n-    }\r\n-\r\n-}\r\n+/*\n+ * Copyright 2001-2004 The Apache Software Foundation.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.ws.scout.registry.infomodel;\n+\n+import javax.xml.registry.JAXRException;\n+import javax.xml.registry.LifeCycleManager;\n+import javax.xml.registry.UnsupportedCapabilityException;\n+import javax.xml.registry.infomodel.RegistryEntry;\n+import java.util.Date;\n+\n+/**\n+ * Implements JAXR Interface.\n+ * For futher details, look into the JAXR API Javadoc.\n+ *\n+ * @author Anil Saldhana  <anil@apache.org>\n+ */\n+public class RegistryEntryImpl extends RegistryObjectImpl implements RegistryEntry\n+{\n+    private Date expiry = null;\n+    private int major = 1;\n+    private int minor = 0;\n+    private int stability = 1;\n+    private int status = 1;\n+\n+    private String userversion = new String();\n+\n+    /**\n+     * Creates a new instance of RegistryEntryImpl\n+     */\n+    public RegistryEntryImpl(LifeCycleManager lifeCycleManager)\n+    {\n+        super(lifeCycleManager);\n+    }\n+\n+    public Date getExpiration() throws JAXRException\n+    {\n+        throw new UnsupportedCapabilityException(\"Level 1 feature\");\n+    }\n+\n+    public int getMajorVersion() throws JAXRException\n+    {\n+        throw new UnsupportedCapabilityException(\"Level 1 feature\");\n+    }\n+\n+    public int getMinorVersion() throws JAXRException\n+    {\n+        throw new UnsupportedCapabilityException(\"Level 1 feature\");\n+    }\n+\n+    public int getStability() throws JAXRException\n+    {\n+        throw new UnsupportedCapabilityException(\"Level 1 feature\");\n+    }\n+\n+    public int getStatus() throws JAXRException\n+    {\n+        throw new UnsupportedCapabilityException(\"Level 1 feature\");\n+    }\n+\n+    public String getUserVersion() throws JAXRException\n+    {\n+        throw new UnsupportedCapabilityException(\"Level 1 feature\");\n+    }\n+\n+    public void setExpiration(Date date) throws JAXRException\n+    {\n+        throw new UnsupportedCapabilityException(\"Level 1 feature\");\n+    }\n+\n+    public void setMajorVersion(int param) throws JAXRException\n+    {\n+        throw new UnsupportedCapabilityException(\"Level 1 feature\");\n+    }\n+\n+    public void setMinorVersion(int param) throws JAXRException\n+    {\n+        throw new UnsupportedCapabilityException(\"Level 1 feature\");\n+    }\n+\n+    public void setStability(int param) throws JAXRException\n+    {\n+        throw new UnsupportedCapabilityException(\"Level 1 feature\");\n+    }\n+\n+    public void setUserVersion(String str) throws JAXRException\n+    {\n+        throw new UnsupportedCapabilityException(\"Level 1 feature\");\n+    }\n+\n+}", "filename": "src/java/org/apache/ws/scout/registry/infomodel/RegistryEntryImpl.java"}, {"additions": 4, "raw_url": "https://github.com/apache/juddi-scout/raw/5cff5bf17ef76ec13a9713ff2418ccf43564a881/src/java/org/apache/ws/scout/util/ScoutUddiJaxrHelper.java", "blob_url": "https://github.com/apache/juddi-scout/blob/5cff5bf17ef76ec13a9713ff2418ccf43564a881/src/java/org/apache/ws/scout/util/ScoutUddiJaxrHelper.java", "sha": "c2172838291a6ae6f0e63db12905cdf59b748f35", "changes": 6, "status": "modified", "deletions": 2, "contents_url": "https://api.github.com/repos/apache/juddi-scout/contents/src/java/org/apache/ws/scout/util/ScoutUddiJaxrHelper.java?ref=5cff5bf17ef76ec13a9713ff2418ccf43564a881", "patch": "@@ -343,8 +343,10 @@ public static Concept getConcept(TModel tmodel, LifeCycleManager lcm)\n       concept.setName(lcm.createInternationalString(tmodel.getName().getStringValue()));\n \n       Description desc = getDescription(tmodel);\n-      concept.setDescription(lcm.createInternationalString(desc.getStringValue()));\n-\n+      if (desc != null) {\n+          concept.setDescription(lcm.createInternationalString(desc.getStringValue()));\n+      }\n+      \n       concept.addExternalIdentifiers(getExternalIdentifiers(tmodel.getIdentifierBag(), lcm));\n       concept.addClassifications(getClassifications(tmodel.getCategoryBag(), lcm));\n ", "filename": "src/java/org/apache/ws/scout/util/ScoutUddiJaxrHelper.java"}], "repo": "juddi-scout"}, {"commit": "https://github.com/apache/juddi-scout/commit/caa0e6ac44251700885f7882cddfa14c3ed390d7", "parent": "https://github.com/apache/juddi-scout/commit/b0c69e2437d9f383553ed897212e5cf8ecdb15fe", "message": "Fix for SCOUT-29 - AuthTokenImpl.getAuthInfo() doesn't seem to work correctly\nFix for SCOUT-32 - Fix NPE at getConcept\nFix for SCOUT-33 - Should throw exception when level 1 feature is accessed in RegistryEntryImpl.java\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/scout/trunk@536553 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "juddi-scout_6", "file": [{"additions": 47, "raw_url": "https://github.com/apache/juddi-scout/raw/caa0e6ac44251700885f7882cddfa14c3ed390d7/modules/scout/src/java/org/apache/ws/scout/registry/RegistryImpl.java", "blob_url": "https://github.com/apache/juddi-scout/blob/caa0e6ac44251700885f7882cddfa14c3ed390d7/modules/scout/src/java/org/apache/ws/scout/registry/RegistryImpl.java", "sha": "5d3491ba26d9c6a8c86a2ec93e41464d8fff1d04", "changes": 77, "status": "modified", "deletions": 30, "contents_url": "https://api.github.com/repos/apache/juddi-scout/contents/modules/scout/src/java/org/apache/ws/scout/registry/RegistryImpl.java?ref=caa0e6ac44251700885f7882cddfa14c3ed390d7", "patch": "@@ -20,11 +20,13 @@\n import java.net.URISyntaxException;\n import java.util.Properties;\n \n+import javax.xml.namespace.QName;\n import javax.xml.parsers.DocumentBuilder;\n import javax.xml.parsers.DocumentBuilderFactory;\n import javax.xml.parsers.ParserConfigurationException;\n \n import org.apache.ws.scout.transport.Transport;\n+import org.apache.xmlbeans.XmlCursor;\n import org.apache.xmlbeans.XmlException;\n import org.apache.xmlbeans.XmlObject;\n import org.w3c.dom.Document;\n@@ -262,43 +264,58 @@ public XmlObject execute(XmlObject uddiRequest, URI endPointURI)\n         }\n \t\tElement request = doc.getDocumentElement();\n \n-\t\trequest.setAttribute(\"generic\", this.getUddiVersion());\n-\t\trequest.setAttributeNS(\"http://www.w3.org/2000/xmlns/\",\"xmlns\", this.getUddiNamespace());\n-\t\t// A SOAP request is made and a SOAP response\n-\t\t// is returned.\n+\t    request.setAttribute(\"generic\", this.getUddiVersion());\n+\t    request.setAttributeNS(\"http://www.w3.org/2000/xmlns/\",\"xmlns\", this.getUddiNamespace());\n+\t    // A SOAP request is made and a SOAP response\n+\t    // is returned.\n \n-\t\tElement response = transport.send(request, endPointURI);\n+\t    Element response = transport.send(request, endPointURI);\n         \n         if (response.getNamespaceURI()==null) {\n             response.setAttributeNS(\"http://www.w3.org/2000/xmlns/\",\"xmlns\", this.getUddiNamespace());\n         }\n-\t\t// First, let's make sure that a response\n-\t\t// (any response) is found in the SOAP Body.\n+\t    // First, let's make sure that a response\n+\t    // (any response) is found in the SOAP Body.\n \n-\t\tString responseName = response.getLocalName();\n-\t\tif (responseName == null) {\n-\t\t\tthrow new RegistryException(\"Unsupported response \"\n-\t\t\t\t\t+ \"from registry. A value was not present.\");\n-\t\t}\n-\n-\t\t// Let's now try to determine which UDDI response\n-\t\t// we received and unmarshal it appropriately or\n-\t\t// throw a RegistryException if it's unknown.\n-\n-\t\t// Well, we have now determined that something was\n-\t\t// returned and it is \"a something\" that we know\n-\t\t// about so let's unmarshal it into a RegistryObject\n-\n-\t\t// Next, let's make sure we didn't recieve a SOAP\n-\t\t// Fault. If it is a SOAP Fault then throw it\n-\t\t// immediately.\n-\n-\t\tXmlObject uddiResponse = null;\n-\t\ttry {\n-\t\t\tuddiResponse = XmlObject.Factory.parse(response);\n-\t\t} catch (XmlException xmle) {\n-\t\t\tthrow (new RegistryException(xmle));\n+\t    String responseName = response.getLocalName();\n+\t    if (responseName == null) {\n+\t        throw new RegistryException(\"Unsupported response \"\n+\t                + \"from registry. A value was not present.\");\n \t\t}\n+ \n+        // Let's now try to determine which UDDI response\n+        // we received and unmarshal it appropriately or\n+        // throw a RegistryException if it's unknown.\n+        // Well, we have now determined that something was\n+        // returned and it is \"a something\" that we know\n+        // about so let's unmarshal it into a RegistryObject\n+        // Next, let's make sure we didn't recieve a SOAP\n+        // Fault. If it is a SOAP Fault then throw it\n+        // immediately.\n+\n+        XmlObject uddiResponse = null;\n+\t    try {\n+\t        uddiResponse = XmlObject.Factory.parse(response);\n+            XmlCursor cursor = uddiResponse.newCursor();\n+            cursor.toNextToken();\n+            //set the namespace if it is empty here.  This is needed for the find_element_user to work.\n+            if (\"\".equals(cursor.getName().getNamespaceURI())) {\n+                cursor.setName(new QName(this.getUddiNamespace(), cursor.getName().getLocalPart()));\n+                //there seems to have a bug in setName and it will set the next Start with xmlns=\"\".\n+                //The workaround is to set it to uddiNamespace when it is empty.\n+                while (cursor.hasNextToken()) {\n+                    cursor.toNextToken();\n+                    if (cursor.isStart()) {\n+                        if (\"\".equals(cursor.getName().getNamespaceURI())) {\n+                            cursor.setName(new QName(this.getUddiNamespace(), cursor.getName().getLocalPart()));\n+                        }\n+                    }\n+                }\n+                cursor.dispose();\n+            }\n+\t    } catch (XmlException xmle) {\n+\t        throw (new RegistryException(xmle));\n+\t    }\n \n \t\tif (responseName.toLowerCase().equals(\"fault\")) {\n \t\t\tNodeList nodeList = null;", "filename": "modules/scout/src/java/org/apache/ws/scout/registry/RegistryImpl.java"}, {"additions": 104, "raw_url": "https://github.com/apache/juddi-scout/raw/caa0e6ac44251700885f7882cddfa14c3ed390d7/modules/scout/src/java/org/apache/ws/scout/registry/infomodel/RegistryEntryImpl.java", "blob_url": "https://github.com/apache/juddi-scout/blob/caa0e6ac44251700885f7882cddfa14c3ed390d7/modules/scout/src/java/org/apache/ws/scout/registry/infomodel/RegistryEntryImpl.java", "sha": "81c85f4baeac1f883a5db2e605283d45f3c98934", "changes": 207, "status": "modified", "deletions": 103, "contents_url": "https://api.github.com/repos/apache/juddi-scout/contents/modules/scout/src/java/org/apache/ws/scout/registry/infomodel/RegistryEntryImpl.java?ref=caa0e6ac44251700885f7882cddfa14c3ed390d7", "patch": "@@ -1,103 +1,104 @@\n-/*\r\n- * Copyright 2001-2004 The Apache Software Foundation.\r\n- *\r\n- * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n- * you may not use this file except in compliance with the License.\r\n- * You may obtain a copy of the License at\r\n- *\r\n- *      http://www.apache.org/licenses/LICENSE-2.0\r\n- *\r\n- * Unless required by applicable law or agreed to in writing, software\r\n- * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n- * See the License for the specific language governing permissions and\r\n- * limitations under the License.\r\n- */\r\n-\r\n-package org.apache.ws.scout.registry.infomodel;\r\n-\r\n-import javax.xml.registry.JAXRException;\r\n-import javax.xml.registry.LifeCycleManager;\r\n-import javax.xml.registry.infomodel.RegistryEntry;\r\n-import java.util.Date;\r\n-\r\n-/**\r\n- * Implements JAXR Interface.\r\n- * For futher details, look into the JAXR API Javadoc.\r\n- *\r\n- * @author Anil Saldhana  <anil@apache.org>\r\n- */\r\n-public class RegistryEntryImpl extends RegistryObjectImpl implements RegistryEntry\r\n-{\r\n-    private Date expiry = null;\r\n-    private int major = 1;\r\n-    private int minor = 0;\r\n-    private int stability = 1;\r\n-    private int status = 1;\r\n-\r\n-    private String userversion = new String();\r\n-\r\n-    /**\r\n-     * Creates a new instance of RegistryEntryImpl\r\n-     */\r\n-    public RegistryEntryImpl(LifeCycleManager lifeCycleManager)\r\n-    {\r\n-        super(lifeCycleManager);\r\n-    }\r\n-\r\n-    public Date getExpiration() throws JAXRException\r\n-    {\r\n-        return expiry;\r\n-    }\r\n-\r\n-    public int getMajorVersion() throws JAXRException\r\n-    {\r\n-        return major;\r\n-    }\r\n-\r\n-    public int getMinorVersion() throws JAXRException\r\n-    {\r\n-        return minor;\r\n-    }\r\n-\r\n-    public int getStability() throws JAXRException\r\n-    {\r\n-        return stability;\r\n-    }\r\n-\r\n-    public int getStatus() throws JAXRException\r\n-    {\r\n-        return status;\r\n-    }\r\n-\r\n-    public String getUserVersion() throws JAXRException\r\n-    {\r\n-        return userversion;\r\n-    }\r\n-\r\n-    public void setExpiration(Date date) throws JAXRException\r\n-    {\r\n-        expiry = date;\r\n-    }\r\n-\r\n-    public void setMajorVersion(int param) throws JAXRException\r\n-    {\r\n-        major = param;\r\n-    }\r\n-\r\n-    public void setMinorVersion(int param) throws JAXRException\r\n-    {\r\n-        minor = param;\r\n-    }\r\n-\r\n-    public void setStability(int param) throws JAXRException\r\n-    {\r\n-        stability = param;\r\n-    }\r\n-\r\n-    public void setUserVersion(String str) throws JAXRException\r\n-    {\r\n-        userversion = str;\r\n-    }\r\n-\r\n-}\r\n+/*\n+ * Copyright 2001-2004 The Apache Software Foundation.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.ws.scout.registry.infomodel;\n+\n+import javax.xml.registry.JAXRException;\n+import javax.xml.registry.LifeCycleManager;\n+import javax.xml.registry.UnsupportedCapabilityException;\n+import javax.xml.registry.infomodel.RegistryEntry;\n+import java.util.Date;\n+\n+/**\n+ * Implements JAXR Interface.\n+ * For futher details, look into the JAXR API Javadoc.\n+ *\n+ * @author Anil Saldhana  <anil@apache.org>\n+ */\n+public class RegistryEntryImpl extends RegistryObjectImpl implements RegistryEntry\n+{\n+    private Date expiry = null;\n+    private int major = 1;\n+    private int minor = 0;\n+    private int stability = 1;\n+    private int status = 1;\n+\n+    private String userversion = new String();\n+\n+    /**\n+     * Creates a new instance of RegistryEntryImpl\n+     */\n+    public RegistryEntryImpl(LifeCycleManager lifeCycleManager)\n+    {\n+        super(lifeCycleManager);\n+    }\n+\n+    public Date getExpiration() throws JAXRException\n+    {\n+        throw new UnsupportedCapabilityException(\"Level 1 feature\");\n+    }\n+\n+    public int getMajorVersion() throws JAXRException\n+    {\n+        throw new UnsupportedCapabilityException(\"Level 1 feature\");\n+    }\n+\n+    public int getMinorVersion() throws JAXRException\n+    {\n+        throw new UnsupportedCapabilityException(\"Level 1 feature\");\n+    }\n+\n+    public int getStability() throws JAXRException\n+    {\n+        throw new UnsupportedCapabilityException(\"Level 1 feature\");\n+    }\n+\n+    public int getStatus() throws JAXRException\n+    {\n+        throw new UnsupportedCapabilityException(\"Level 1 feature\");\n+    }\n+\n+    public String getUserVersion() throws JAXRException\n+    {\n+        throw new UnsupportedCapabilityException(\"Level 1 feature\");\n+    }\n+\n+    public void setExpiration(Date date) throws JAXRException\n+    {\n+        throw new UnsupportedCapabilityException(\"Level 1 feature\");\n+    }\n+\n+    public void setMajorVersion(int param) throws JAXRException\n+    {\n+        throw new UnsupportedCapabilityException(\"Level 1 feature\");\n+    }\n+\n+    public void setMinorVersion(int param) throws JAXRException\n+    {\n+        throw new UnsupportedCapabilityException(\"Level 1 feature\");\n+    }\n+\n+    public void setStability(int param) throws JAXRException\n+    {\n+        throw new UnsupportedCapabilityException(\"Level 1 feature\");\n+    }\n+\n+    public void setUserVersion(String str) throws JAXRException\n+    {\n+        throw new UnsupportedCapabilityException(\"Level 1 feature\");\n+    }\n+\n+}", "filename": "modules/scout/src/java/org/apache/ws/scout/registry/infomodel/RegistryEntryImpl.java"}, {"additions": 4, "raw_url": "https://github.com/apache/juddi-scout/raw/caa0e6ac44251700885f7882cddfa14c3ed390d7/modules/scout/src/java/org/apache/ws/scout/util/ScoutUddiJaxrHelper.java", "blob_url": "https://github.com/apache/juddi-scout/blob/caa0e6ac44251700885f7882cddfa14c3ed390d7/modules/scout/src/java/org/apache/ws/scout/util/ScoutUddiJaxrHelper.java", "sha": "c2172838291a6ae6f0e63db12905cdf59b748f35", "changes": 6, "status": "modified", "deletions": 2, "contents_url": "https://api.github.com/repos/apache/juddi-scout/contents/modules/scout/src/java/org/apache/ws/scout/util/ScoutUddiJaxrHelper.java?ref=caa0e6ac44251700885f7882cddfa14c3ed390d7", "patch": "@@ -343,8 +343,10 @@ public static Concept getConcept(TModel tmodel, LifeCycleManager lcm)\n       concept.setName(lcm.createInternationalString(tmodel.getName().getStringValue()));\n \n       Description desc = getDescription(tmodel);\n-      concept.setDescription(lcm.createInternationalString(desc.getStringValue()));\n-\n+      if (desc != null) {\n+          concept.setDescription(lcm.createInternationalString(desc.getStringValue()));\n+      }\n+      \n       concept.addExternalIdentifiers(getExternalIdentifiers(tmodel.getIdentifierBag(), lcm));\n       concept.addClassifications(getClassifications(tmodel.getCategoryBag(), lcm));\n ", "filename": "modules/scout/src/java/org/apache/ws/scout/util/ScoutUddiJaxrHelper.java"}], "repo": "juddi-scout"}, {"commit": "https://github.com/apache/juddi-scout/commit/506dd544ce182257ef890a9ab97d9d303d199ad4", "parent": "https://github.com/apache/juddi-scout/commit/f47ceb8075ca4e71ce0ecbcc0f351f3783da32a4", "message": "small tweaks to keep the NPEs to the usual level.\n\nWe aren't ever assured that we'll have a descrption.  I'm going to dig deeper and make sure that we always\nat least get a vector back, even if empty.\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/scout/trunk/modules/scout@190394 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "juddi-scout_7", "file": [{"additions": 48, "raw_url": "https://github.com/apache/juddi-scout/raw/506dd544ce182257ef890a9ab97d9d303d199ad4/src/java/org/apache/ws/scout/util/ScoutUddiJaxrHelper.java", "blob_url": "https://github.com/apache/juddi-scout/blob/506dd544ce182257ef890a9ab97d9d303d199ad4/src/java/org/apache/ws/scout/util/ScoutUddiJaxrHelper.java", "sha": "41c595275c2780795127dffafff822301d124165", "changes": 53, "status": "modified", "deletions": 5, "contents_url": "https://api.github.com/repos/apache/juddi-scout/contents/src/java/org/apache/ws/scout/util/ScoutUddiJaxrHelper.java?ref=506dd544ce182257ef890a9ab97d9d303d199ad4", "patch": "@@ -71,7 +71,15 @@ public static Organization getOrganization(BusinessEntity entity,\n       Name n = (Name)namevect.elementAt(0);\n       String name = n.getValue();\n       Vector descvect = entity.getDescriptionVector();\n-      Description desc = (Description)descvect.elementAt(0);\n+\n+       Description desc = null;\n+\n+       if (descvect != null && descvect.size() > 0) {\n+           desc = (Description)descvect.elementAt(0);\n+       }\n+       else {\n+           desc = new Description(\"\");\n+       }\n \n       Organization org = new OrganizationImpl(lcm);\n       org.setName(getIString(name, lcm));\n@@ -163,7 +171,15 @@ public static Organization getOrganization(BusinessDetail bizdetail,\n       Name n = (Name)namevect.elementAt(0);\n       String name = n.getValue();\n       Vector descvect = entity.getDescriptionVector();\n-      Description desc = (Description)descvect.elementAt(0);\n+\n+        Description desc = null;\n+\n+        if (descvect != null && descvect.size() > 0) {\n+            desc = (Description)descvect.elementAt(0);\n+        }\n+        else {\n+            desc = new Description(\"\");\n+        }\n \n       Organization org = new OrganizationImpl(lcm);\n       org.setName(getIString(name, lcm));\n@@ -265,7 +281,16 @@ public static Service getService(BusinessService bs, LifeCycleManager lcm)\n       String name = n.getValue();\n       serve.setName(lcm.createInternationalString(name));\n       Vector descvect = bs.getDescriptionVector();\n-      Description desc = (Description)descvect.elementAt(0);\n+\n+       Description desc = null;\n+\n+       if (descvect != null && descvect.size() > 0) {\n+           desc = (Description)descvect.elementAt(0);\n+       }\n+       else {\n+           desc = new Description(\"\");\n+       }\n+\n       serve.setDescription(lcm.createInternationalString(desc.getValue()));\n       return serve;\n    }\n@@ -335,7 +360,16 @@ public static Concept getConcept(TModelDetail tm, LifeCycleManager lcm)\n       concept.setName(lcm.createInternationalString(tmodel.getName()));\n \n       Vector descvect = tmodel.getDescriptionVector();\n-      Description desc = (Description)descvect.elementAt(0);\n+\n+       Description desc = null;\n+\n+       if (descvect != null && descvect.size() > 0) {\n+           desc = (Description) descvect.elementAt(0);\n+       }\n+       else {\n+           desc = new Description(\"\");\n+       }\n+\n       concept.setDescription(lcm.createInternationalString(desc.getValue()));\n \n       return concept;\n@@ -349,7 +383,16 @@ public static Concept getConcept(TModel tmodel, LifeCycleManager lcm)\n       concept.setName(lcm.createInternationalString(tmodel.getName()));\n \n       Vector descvect = tmodel.getDescriptionVector();\n-      Description desc = (Description)descvect.elementAt(0);\n+\n+       Description desc = null;\n+\n+       if (descvect != null && descvect.size() > 0) {\n+           desc = (Description) descvect.elementAt(0);\n+       }\n+       else {\n+           desc = new Description(\"\");\n+       }\n+\n       concept.setDescription(lcm.createInternationalString(desc.getValue()));\n \n       return concept;", "filename": "src/java/org/apache/ws/scout/util/ScoutUddiJaxrHelper.java"}], "repo": "juddi-scout"}, {"commit": "https://github.com/apache/juddi-scout/commit/d0814c29e7eee82184f1479f1b4e11b8b10b5408", "parent": "https://github.com/apache/juddi-scout/commit/3a0ef0f55d75f8c6aa4e417496f89eb7af40ba33", "message": "small tweaks to keep the NPEs to the usual level.\n\nWe aren't ever assured that we'll have a descrption.  I'm going to dig deeper and make sure that we always\nat least get a vector back, even if empty.\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/webservices/scout/trunk@190394 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "juddi-scout_8", "file": [{"additions": 48, "raw_url": "https://github.com/apache/juddi-scout/raw/d0814c29e7eee82184f1479f1b4e11b8b10b5408/modules/scout/src/java/org/apache/ws/scout/util/ScoutUddiJaxrHelper.java", "blob_url": "https://github.com/apache/juddi-scout/blob/d0814c29e7eee82184f1479f1b4e11b8b10b5408/modules/scout/src/java/org/apache/ws/scout/util/ScoutUddiJaxrHelper.java", "sha": "41c595275c2780795127dffafff822301d124165", "changes": 53, "status": "modified", "deletions": 5, "contents_url": "https://api.github.com/repos/apache/juddi-scout/contents/modules/scout/src/java/org/apache/ws/scout/util/ScoutUddiJaxrHelper.java?ref=d0814c29e7eee82184f1479f1b4e11b8b10b5408", "patch": "@@ -71,7 +71,15 @@ public static Organization getOrganization(BusinessEntity entity,\n       Name n = (Name)namevect.elementAt(0);\n       String name = n.getValue();\n       Vector descvect = entity.getDescriptionVector();\n-      Description desc = (Description)descvect.elementAt(0);\n+\n+       Description desc = null;\n+\n+       if (descvect != null && descvect.size() > 0) {\n+           desc = (Description)descvect.elementAt(0);\n+       }\n+       else {\n+           desc = new Description(\"\");\n+       }\n \n       Organization org = new OrganizationImpl(lcm);\n       org.setName(getIString(name, lcm));\n@@ -163,7 +171,15 @@ public static Organization getOrganization(BusinessDetail bizdetail,\n       Name n = (Name)namevect.elementAt(0);\n       String name = n.getValue();\n       Vector descvect = entity.getDescriptionVector();\n-      Description desc = (Description)descvect.elementAt(0);\n+\n+        Description desc = null;\n+\n+        if (descvect != null && descvect.size() > 0) {\n+            desc = (Description)descvect.elementAt(0);\n+        }\n+        else {\n+            desc = new Description(\"\");\n+        }\n \n       Organization org = new OrganizationImpl(lcm);\n       org.setName(getIString(name, lcm));\n@@ -265,7 +281,16 @@ public static Service getService(BusinessService bs, LifeCycleManager lcm)\n       String name = n.getValue();\n       serve.setName(lcm.createInternationalString(name));\n       Vector descvect = bs.getDescriptionVector();\n-      Description desc = (Description)descvect.elementAt(0);\n+\n+       Description desc = null;\n+\n+       if (descvect != null && descvect.size() > 0) {\n+           desc = (Description)descvect.elementAt(0);\n+       }\n+       else {\n+           desc = new Description(\"\");\n+       }\n+\n       serve.setDescription(lcm.createInternationalString(desc.getValue()));\n       return serve;\n    }\n@@ -335,7 +360,16 @@ public static Concept getConcept(TModelDetail tm, LifeCycleManager lcm)\n       concept.setName(lcm.createInternationalString(tmodel.getName()));\n \n       Vector descvect = tmodel.getDescriptionVector();\n-      Description desc = (Description)descvect.elementAt(0);\n+\n+       Description desc = null;\n+\n+       if (descvect != null && descvect.size() > 0) {\n+           desc = (Description) descvect.elementAt(0);\n+       }\n+       else {\n+           desc = new Description(\"\");\n+       }\n+\n       concept.setDescription(lcm.createInternationalString(desc.getValue()));\n \n       return concept;\n@@ -349,7 +383,16 @@ public static Concept getConcept(TModel tmodel, LifeCycleManager lcm)\n       concept.setName(lcm.createInternationalString(tmodel.getName()));\n \n       Vector descvect = tmodel.getDescriptionVector();\n-      Description desc = (Description)descvect.elementAt(0);\n+\n+       Description desc = null;\n+\n+       if (descvect != null && descvect.size() > 0) {\n+           desc = (Description) descvect.elementAt(0);\n+       }\n+       else {\n+           desc = new Description(\"\");\n+       }\n+\n       concept.setDescription(lcm.createInternationalString(desc.getValue()));\n \n       return concept;", "filename": "modules/scout/src/java/org/apache/ws/scout/util/ScoutUddiJaxrHelper.java"}], "repo": "juddi-scout"}]
