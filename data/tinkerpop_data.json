[{"commit": "https://github.com/apache/tinkerpop/commit/522e519c6c0876153548f56976fbb185c97b739e", "parent": "https://github.com/apache/tinkerpop/commit/c93d855357baa64500c9c396718f3a32c7cae5ad", "message": "Fix NPE is not thrown when null id is set to AbstractStep", "bug_id": "tinkerpop_1", "file": [{"additions": 1, "raw_url": "https://github.com/apache/tinkerpop/raw/522e519c6c0876153548f56976fbb185c97b739e/gremlin-core/src/main/java/org/apache/tinkerpop/gremlin/process/traversal/step/util/AbstractStep.java", "blob_url": "https://github.com/apache/tinkerpop/blob/522e519c6c0876153548f56976fbb185c97b739e/gremlin-core/src/main/java/org/apache/tinkerpop/gremlin/process/traversal/step/util/AbstractStep.java", "sha": "e2757e231e78bf0ef3ebd7d9ed3219377168474f", "changes": 2, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/tinkerpop/contents/gremlin-core/src/main/java/org/apache/tinkerpop/gremlin/process/traversal/step/util/AbstractStep.java?ref=522e519c6c0876153548f56976fbb185c97b739e", "patch": "@@ -54,7 +54,7 @@ public AbstractStep(final Traversal.Admin traversal) {\n \n     @Override\n     public void setId(final String id) {\n-        Objects.nonNull(id);\n+        Objects.requireNonNull(id);\n         this.id = id;\n     }\n ", "filename": "gremlin-core/src/main/java/org/apache/tinkerpop/gremlin/process/traversal/step/util/AbstractStep.java"}], "repo": "tinkerpop"}, {"commit": "https://github.com/apache/tinkerpop/commit/20f3fca2c606ccf3279d73b7fb72b22052444df7", "parent": "https://github.com/apache/tinkerpop/commit/98f395603f12ed4e1244ff49a684331dbd2f86bd", "message": "Merge pull request #1043 from porunov/remove-redundant-code-in-AbstractStep\n\nFix NPE is not thrown when null id is set to AbstractStep", "bug_id": "tinkerpop_2", "file": [{"additions": 1, "raw_url": "https://github.com/apache/tinkerpop/raw/20f3fca2c606ccf3279d73b7fb72b22052444df7/gremlin-core/src/main/java/org/apache/tinkerpop/gremlin/process/traversal/step/util/AbstractStep.java", "blob_url": "https://github.com/apache/tinkerpop/blob/20f3fca2c606ccf3279d73b7fb72b22052444df7/gremlin-core/src/main/java/org/apache/tinkerpop/gremlin/process/traversal/step/util/AbstractStep.java", "sha": "e2757e231e78bf0ef3ebd7d9ed3219377168474f", "changes": 2, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/tinkerpop/contents/gremlin-core/src/main/java/org/apache/tinkerpop/gremlin/process/traversal/step/util/AbstractStep.java?ref=20f3fca2c606ccf3279d73b7fb72b22052444df7", "patch": "@@ -54,7 +54,7 @@ public AbstractStep(final Traversal.Admin traversal) {\n \n     @Override\n     public void setId(final String id) {\n-        Objects.nonNull(id);\n+        Objects.requireNonNull(id);\n         this.id = id;\n     }\n ", "filename": "gremlin-core/src/main/java/org/apache/tinkerpop/gremlin/process/traversal/step/util/AbstractStep.java"}], "repo": "tinkerpop"}, {"commit": "https://github.com/apache/tinkerpop/commit/61a3d125c48869c8e5fdaf195abbb46fbaaf0c30", "parent": "https://github.com/apache/tinkerpop/commit/9ea319d5d102432312f2044fc72e3668c1a8f7e2", "message": "Fixed an NPE in GraphMLReader where if the <edge> doesn't have an ID field and the base graph supports ids, then an NPE happens. Added a test case to verifiy working behavior. Super simple fix. CTR.", "bug_id": "tinkerpop_3", "file": [{"additions": 10, "raw_url": "https://github.com/apache/tinkerpop/raw/61a3d125c48869c8e5fdaf195abbb46fbaaf0c30/gremlin-core/src/main/java/org/apache/tinkerpop/gremlin/structure/io/graphml/GraphMLReader.java", "blob_url": "https://github.com/apache/tinkerpop/blob/61a3d125c48869c8e5fdaf195abbb46fbaaf0c30/gremlin-core/src/main/java/org/apache/tinkerpop/gremlin/structure/io/graphml/GraphMLReader.java", "sha": "32891661d61896790566ea7cb555d39a7024840e", "changes": 19, "status": "modified", "deletions": 9, "contents_url": "https://api.github.com/repos/apache/tinkerpop/contents/gremlin-core/src/main/java/org/apache/tinkerpop/gremlin/structure/io/graphml/GraphMLReader.java?ref=61a3d125c48869c8e5fdaf195abbb46fbaaf0c30", "patch": "@@ -19,10 +19,10 @@\n package org.apache.tinkerpop.gremlin.structure.io.graphml;\n \n import org.apache.tinkerpop.gremlin.structure.Direction;\n-import org.apache.tinkerpop.gremlin.structure.Property;\n-import org.apache.tinkerpop.gremlin.structure.T;\n import org.apache.tinkerpop.gremlin.structure.Edge;\n import org.apache.tinkerpop.gremlin.structure.Graph;\n+import org.apache.tinkerpop.gremlin.structure.Property;\n+import org.apache.tinkerpop.gremlin.structure.T;\n import org.apache.tinkerpop.gremlin.structure.Vertex;\n import org.apache.tinkerpop.gremlin.structure.VertexProperty;\n import org.apache.tinkerpop.gremlin.structure.io.GraphReader;\n@@ -72,7 +72,7 @@ private GraphMLReader(final Builder builder) {\n \n     @Override\n     public void readGraph(final InputStream graphInputStream, final Graph graphToWriteTo) throws IOException {\n-        final Map<Object,Vertex> cache = new HashMap<>();\n+        final Map<Object, Vertex> cache = new HashMap<>();\n         final AtomicLong counter = new AtomicLong(0);\n         final boolean supportsTx = graphToWriteTo.features().graph().supportsTransactions();\n         final Graph.Features.EdgeFeatures edgeFeatures = graphToWriteTo.features().edge();\n@@ -186,9 +186,9 @@ public void readGraph(final InputStream graphInputStream, final Graph graphToWri\n                         isInVertex = false;\n                     } else if (elementName.equals(GraphMLTokens.EDGE)) {\n                         final Object[] propsAsArray = edgeProps.entrySet().stream().flatMap(e -> Stream.of(e.getKey(), e.getValue())).toArray();\n-                        final Object[] propsReady = edgeFeatures.willAllowId(edgeId) ? ElementHelper.upsert(propsAsArray, T.id, edgeId) : propsAsArray;\n-                        \n-\t\t\tedgeOutVertex.addEdge(null == edgeLabel ? Edge.DEFAULT_LABEL : edgeLabel, edgeInVertex, propsReady);\n+                        final Object[] propsReady = null != edgeId && edgeFeatures.willAllowId(edgeId) ? ElementHelper.upsert(propsAsArray, T.id, edgeId) : propsAsArray;\n+\n+                        edgeOutVertex.addEdge(null == edgeLabel ? Edge.DEFAULT_LABEL : edgeLabel, edgeInVertex, propsReady);\n \n                         if (supportsTx && counter.incrementAndGet() % batchSize == 0)\n                             graphToWriteTo.tx().commit();\n@@ -292,7 +292,7 @@ public Property readProperty(final InputStream inputStream,\n \n     private static Vertex findOrCreate(final Object id, final Graph graphToWriteTo,\n                                        final Graph.Features.VertexFeatures features,\n-                                       final Map<Object,Vertex> cache, final boolean asVertex, final Object... args) {\n+                                       final Map<Object, Vertex> cache, final boolean asVertex, final Object... args) {\n         if (cache.containsKey(id)) {\n             // if the request to findOrCreate come from a vertex then AND the vertex was already created, that means\n             // that the vertex was created by an edge that arrived first in the stream (allowable via GraphML\n@@ -306,7 +306,7 @@ private static Vertex findOrCreate(final Object id, final Graph graphToWriteTo,\n                 return cache.get(id);\n             }\n         } else {\n-            final Object [] argsReady = features.willAllowId(id) ? ElementHelper.upsert(args, T.id, id) : args;\n+            final Object[] argsReady = features.willAllowId(id) ? ElementHelper.upsert(args, T.id, id) : args;\n             final Vertex v = graphToWriteTo.addVertex(argsReady);\n             cache.put(id, v);\n             return v;\n@@ -344,7 +344,8 @@ public static Builder build() {\n         private boolean strict = true;\n         private long batchSize = 10000;\n \n-        private Builder() { }\n+        private Builder() {\n+        }\n \n         /**\n          * When set to true, exceptions will be thrown if a property value cannot be coerced to the expected data", "filename": "gremlin-core/src/main/java/org/apache/tinkerpop/gremlin/structure/io/graphml/GraphMLReader.java"}, {"additions": 22, "raw_url": "https://github.com/apache/tinkerpop/raw/61a3d125c48869c8e5fdaf195abbb46fbaaf0c30/gremlin-test/src/main/java/org/apache/tinkerpop/gremlin/structure/io/IoTest.java", "blob_url": "https://github.com/apache/tinkerpop/blob/61a3d125c48869c8e5fdaf195abbb46fbaaf0c30/gremlin-test/src/main/java/org/apache/tinkerpop/gremlin/structure/io/IoTest.java", "sha": "a523b15682147902e32a266345989acc24b601e2", "changes": 25, "status": "modified", "deletions": 3, "contents_url": "https://api.github.com/repos/apache/tinkerpop/contents/gremlin-test/src/main/java/org/apache/tinkerpop/gremlin/structure/io/IoTest.java?ref=61a3d125c48869c8e5fdaf195abbb46fbaaf0c30", "patch": "@@ -79,7 +79,12 @@\n import static org.apache.tinkerpop.gremlin.structure.Graph.Features.ElementFeatures.FEATURE_ANY_IDS;\n import static org.apache.tinkerpop.gremlin.structure.Graph.Features.VariableFeatures.FEATURE_VARIABLES;\n import static org.apache.tinkerpop.gremlin.structure.Graph.Features.VertexFeatures.FEATURE_USER_SUPPLIED_IDS;\n-import static org.apache.tinkerpop.gremlin.structure.Graph.Features.VertexPropertyFeatures.*;\n+import static org.apache.tinkerpop.gremlin.structure.Graph.Features.VertexPropertyFeatures.FEATURE_BOOLEAN_VALUES;\n+import static org.apache.tinkerpop.gremlin.structure.Graph.Features.VertexPropertyFeatures.FEATURE_DOUBLE_VALUES;\n+import static org.apache.tinkerpop.gremlin.structure.Graph.Features.VertexPropertyFeatures.FEATURE_FLOAT_VALUES;\n+import static org.apache.tinkerpop.gremlin.structure.Graph.Features.VertexPropertyFeatures.FEATURE_INTEGER_VALUES;\n+import static org.apache.tinkerpop.gremlin.structure.Graph.Features.VertexPropertyFeatures.FEATURE_LONG_VALUES;\n+import static org.apache.tinkerpop.gremlin.structure.Graph.Features.VertexPropertyFeatures.FEATURE_STRING_VALUES;\n import static org.apache.tinkerpop.gremlin.structure.io.IoCore.graphson;\n import static org.hamcrest.core.Is.is;\n import static org.junit.Assert.assertEquals;\n@@ -183,6 +188,19 @@ public void shouldReadGraphMLWithoutStrictOption() throws IOException {\n             assertEquals(\"junk\", v.<String>value(\"n\"));\n         }\n \n+        @Test\n+        @FeatureRequirement(featureClass = Graph.Features.EdgeFeatures.class, feature = Graph.Features.EdgeFeatures.FEATURE_ADD_EDGES)\n+        @FeatureRequirement(featureClass = Graph.Features.VertexFeatures.class, feature = Graph.Features.VertexFeatures.FEATURE_ADD_VERTICES)\n+        public void shouldReadGraphMLWithoutEdgeIds() throws IOException {\n+            final GraphReader reader = GraphMLReader.build().strict(false).create();\n+            try (final InputStream stream = IoTest.class.getResourceAsStream(TestHelper.convertPackageToResourcePath(GraphMLResourceAccess.class) + \"graph-no-edge-ids.xml\")) {\n+                reader.readGraph(stream, graph);\n+            }\n+            assertEquals(1, IteratorUtils.count(graph.edges()));\n+            assertEquals(2, IteratorUtils.count(graph.vertices()));\n+        }\n+\n+\n         @Test(expected = NumberFormatException.class)\n         @FeatureRequirement(featureClass = Graph.Features.EdgeFeatures.class, feature = Graph.Features.EdgeFeatures.FEATURE_ADD_EDGES)\n         @FeatureRequirement(featureClass = Graph.Features.VertexFeatures.class, feature = Graph.Features.VertexFeatures.FEATURE_ADD_VERTICES)\n@@ -318,7 +336,8 @@ public void shouldReadWriteSelfLoopingEdges() {\n             v1.addEdge(\"SELFLOOP\", v1);\n \n             final Configuration targetConf = graphProvider.newGraphConfiguration(\"target\", this.getClass(), name.getMethodName(), null);\n-            final Graph target = graphProvider.openTestGraph(targetConf);;\n+            final Graph target = graphProvider.openTestGraph(targetConf);\n+            ;\n             try (ByteArrayOutputStream os = new ByteArrayOutputStream()) {\n                 source.io(IoCore.gryo()).writer().create().writeGraph(os, source);\n                 try (ByteArrayInputStream is = new ByteArrayInputStream(os.toByteArray())) {\n@@ -764,7 +783,7 @@ public static void assertNoEdgeGraph(final Graph g1, final boolean assertDouble,\n         final List<Edge> v1Edges = IteratorUtils.list(v1.edges(Direction.BOTH));\n         assertEquals(1, v1Edges.size());\n         v1Edges.forEach(e -> {\n-        \tif (e.inVertex().value(\"name\").equals(\"vadas\")) {\n+            if (e.inVertex().value(\"name\").equals(\"vadas\")) {\n                 assertEquals(Edge.DEFAULT_LABEL, e.label());\n                 if (assertDouble)\n                     assertWeightLoosely(0.5d, e);", "filename": "gremlin-test/src/main/java/org/apache/tinkerpop/gremlin/structure/io/IoTest.java"}, {"additions": 30, "raw_url": "https://github.com/apache/tinkerpop/raw/61a3d125c48869c8e5fdaf195abbb46fbaaf0c30/gremlin-test/src/main/resources/org/apache/tinkerpop/gremlin/structure/io/graphml/graph-no-edge-ids.xml", "blob_url": "https://github.com/apache/tinkerpop/blob/61a3d125c48869c8e5fdaf195abbb46fbaaf0c30/gremlin-test/src/main/resources/org/apache/tinkerpop/gremlin/structure/io/graphml/graph-no-edge-ids.xml", "sha": "fe8f8203c06226e08d6b3c948f1dc126d6ef5263", "changes": 30, "status": "added", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/tinkerpop/contents/gremlin-test/src/main/resources/org/apache/tinkerpop/gremlin/structure/io/graphml/graph-no-edge-ids.xml?ref=61a3d125c48869c8e5fdaf195abbb46fbaaf0c30", "patch": "@@ -0,0 +1,30 @@\n+<!--\n+  ~  Licensed to the Apache Software Foundation (ASF) under one\n+  ~  or more contributor license agreements.  See the NOTICE file\n+  ~  distributed with this work for additional information\n+  ~  regarding copyright ownership.  The ASF licenses this file\n+  ~  to you under the Apache License, Version 2.0 (the\n+  ~  \"License\"); you may not use this file except in compliance\n+  ~  with the License.  You may obtain a copy of the License at\n+  ~\n+  ~  http://www.apache.org/licenses/LICENSE-2.0\n+  ~\n+  ~  Unless required by applicable law or agreed to in writing,\n+  ~  software distributed under the License is distributed on an\n+  ~  \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+  ~  KIND, either express or implied.  See the License for the\n+  ~  specific language governing permissions and limitations\n+  ~  under the License.\n+  -->\n+<graphml xmlns=\"http://graphml.graphdrawing.org/xmlns\"\n+         xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+         xsi:schemaLocation=\"http://graphml.graphdrawing.org/xmlns\n+        http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd\">\n+    <graph id=\"G\" edgedefault=\"directed\">\n+        <node id=\"1\">\n+        </node>\n+        <node id=\"2\">\n+        </node>\n+        <edge source=\"1\" target=\"2\"></edge>\n+    </graph>\n+</graphml>", "filename": "gremlin-test/src/main/resources/org/apache/tinkerpop/gremlin/structure/io/graphml/graph-no-edge-ids.xml"}], "repo": "tinkerpop"}, {"commit": "https://github.com/apache/tinkerpop/commit/fa2d626951f799a0a50191f9653a17b5c18cdc20", "parent": "https://github.com/apache/tinkerpop/commit/ffde3fe419574d587911cc1b3979be042f70e140", "message": "merged tp31 ObjectWritable NPE fix.", "bug_id": "tinkerpop_4", "file": [{"additions": 6, "raw_url": "https://github.com/apache/tinkerpop/raw/fa2d626951f799a0a50191f9653a17b5c18cdc20/hadoop-gremlin/src/main/java/org/apache/tinkerpop/gremlin/hadoop/structure/io/ObjectWritable.java", "blob_url": "https://github.com/apache/tinkerpop/blob/fa2d626951f799a0a50191f9653a17b5c18cdc20/hadoop-gremlin/src/main/java/org/apache/tinkerpop/gremlin/hadoop/structure/io/ObjectWritable.java", "sha": "9a07f75723f60b0e2fe7a00758ac3f84eb0dc255", "changes": 9, "status": "modified", "deletions": 3, "contents_url": "https://api.github.com/repos/apache/tinkerpop/contents/hadoop-gremlin/src/main/java/org/apache/tinkerpop/gremlin/hadoop/structure/io/ObjectWritable.java?ref=fa2d626951f799a0a50191f9653a17b5c18cdc20", "patch": "@@ -36,6 +36,7 @@\n  */\n public final class ObjectWritable<T> implements WritableComparable<ObjectWritable>, Serializable {\n \n+    private static final String NULL = \"null\";\n     private static final ObjectWritable<MapReduce.NullObject> NULL_OBJECT_WRITABLE = new ObjectWritable<>(MapReduce.NullObject.instance());\n \n     T t;\n@@ -57,7 +58,7 @@ public void set(final T t) {\n \n     @Override\n     public String toString() {\n-        return this.t.toString();\n+        return null == this.t ? NULL : this.t.toString();\n     }\n \n     @Override\n@@ -97,7 +98,9 @@ private void readObject(final ObjectInputStream inputStream) throws IOException,\n \n     @Override\n     public int compareTo(final ObjectWritable objectWritable) {\n-        if (this.t instanceof Comparable)\n+        if (null == this.t)\n+            return objectWritable.isEmpty() ? 0 : -1;\n+        else if (this.t instanceof Comparable && !objectWritable.isEmpty())\n             return ((Comparable) this.t).compareTo(objectWritable.get());\n         else if (this.t.equals(objectWritable.get()))\n             return 0;\n@@ -125,7 +128,7 @@ else if (this.isEmpty())\n \n     @Override\n     public int hashCode() {\n-        return this.isEmpty() ? 0 : this.t.hashCode();\n+        return null == this.t ? 0 : this.t.hashCode();\n     }\n \n     public static ObjectWritable<MapReduce.NullObject> getNullObjectWritable() {", "filename": "hadoop-gremlin/src/main/java/org/apache/tinkerpop/gremlin/hadoop/structure/io/ObjectWritable.java"}, {"additions": 49, "raw_url": "https://github.com/apache/tinkerpop/raw/fa2d626951f799a0a50191f9653a17b5c18cdc20/hadoop-gremlin/src/test/java/org/apache/tinkerpop/gremlin/hadoop/structure/io/ObjectWritableTest.java", "blob_url": "https://github.com/apache/tinkerpop/blob/fa2d626951f799a0a50191f9653a17b5c18cdc20/hadoop-gremlin/src/test/java/org/apache/tinkerpop/gremlin/hadoop/structure/io/ObjectWritableTest.java", "sha": "12f4694c03cb65ea384970e21c54fa7e97d3f742", "changes": 49, "status": "added", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/tinkerpop/contents/hadoop-gremlin/src/test/java/org/apache/tinkerpop/gremlin/hadoop/structure/io/ObjectWritableTest.java?ref=fa2d626951f799a0a50191f9653a17b5c18cdc20", "patch": "@@ -0,0 +1,49 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.apache.tinkerpop.gremlin.hadoop.structure.io;\n+\n+import org.junit.Test;\n+\n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertFalse;\n+import static org.junit.Assert.assertNull;\n+import static org.junit.Assert.assertTrue;\n+\n+/**\n+ * @author Marko A. Rodriguez (http://markorodriguez.com)\n+ */\n+public class ObjectWritableTest {\n+\n+    @Test\n+    public void shouldNotHaveANullPointerException() {\n+        final ObjectWritable object = new ObjectWritable<>(null);\n+        assertNull(object.get());\n+        assertTrue(object.isEmpty());\n+        assertTrue(object.equals(ObjectWritable.empty()));\n+        assertFalse(object.equals(new ObjectWritable<>(\"hello\")));\n+        assertEquals(\"null\", object.toString());\n+        assertEquals(-1, object.compareTo(new ObjectWritable<>(\"blah\")));\n+        assertEquals(-1, new ObjectWritable<>(\"bloop\").compareTo(ObjectWritable.empty()));\n+        assertEquals(-1, new ObjectWritable<>(\"bloop\").compareTo(object));\n+        assertEquals(0, ObjectWritable.empty().compareTo(object));\n+        assertEquals(0, object.compareTo(ObjectWritable.empty()));\n+        assertEquals(0, object.compareTo(object));\n+    }\n+}", "filename": "hadoop-gremlin/src/test/java/org/apache/tinkerpop/gremlin/hadoop/structure/io/ObjectWritableTest.java"}], "repo": "tinkerpop"}, {"commit": "https://github.com/apache/tinkerpop/commit/9bdef4d86c3065b02c402a6d44dbf0329a0e2ddc", "parent": "https://github.com/apache/tinkerpop/commit/1e349c8ce03c2ba10cf9cbacc63184cc8c9ba0dd", "message": "Check if variable is null to avoid NPE\n\nIf staticVariableTypes is an empty list in the YAML file, then we throw\nan NPE by trying to run collectEntries() on a null object or trying to\nrun containsKey() on a null object.", "bug_id": "tinkerpop_5", "file": [{"additions": 1, "raw_url": "https://github.com/apache/tinkerpop/raw/9bdef4d86c3065b02c402a6d44dbf0329a0e2ddc/CHANGELOG.asciidoc", "blob_url": "https://github.com/apache/tinkerpop/blob/9bdef4d86c3065b02c402a6d44dbf0329a0e2ddc/CHANGELOG.asciidoc", "sha": "6923a8468ea0e19b9fa8ac5b26a71b2472bffa81", "changes": 1, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/tinkerpop/contents/CHANGELOG.asciidoc?ref=9bdef4d86c3065b02c402a6d44dbf0329a0e2ddc", "patch": "@@ -73,6 +73,7 @@ TinkerPop 3.2.5 (Release Date: NOT OFFICIALLY RELEASED YET)\n * Implemented `DefaultGraphManager` to include previous `GraphManager` functionality and adhere to updated interface.\n * Deprecated `GraphManager.getGraphs()` and added `GraphManager.getGraphNames()`.\n * Deprecated `GraphManager.getTraversalSources()` and added `GraphManager.getTraversalSourceNames()`.\n+* Fixed a bug so now users can supply a YAML with an empty `staticVariableTypes` to be used by the `FileSandboxExtension`\n \n [[release-3-2-4]]\n TinkerPop 3.2.4 (Release Date: February 8, 2017)", "filename": "CHANGELOG.asciidoc"}, {"additions": 2, "raw_url": "https://github.com/apache/tinkerpop/raw/9bdef4d86c3065b02c402a6d44dbf0329a0e2ddc/gremlin-groovy/src/main/groovy/org/apache/tinkerpop/gremlin/groovy/jsr223/customizer/AbstractSandboxExtension.groovy", "blob_url": "https://github.com/apache/tinkerpop/blob/9bdef4d86c3065b02c402a6d44dbf0329a0e2ddc/gremlin-groovy/src/main/groovy/org/apache/tinkerpop/gremlin/groovy/jsr223/customizer/AbstractSandboxExtension.groovy", "sha": "968560768ef00c163a134acdefa38068194fa2c5", "changes": 4, "status": "modified", "deletions": 2, "contents_url": "https://api.github.com/repos/apache/tinkerpop/contents/gremlin-groovy/src/main/groovy/org/apache/tinkerpop/gremlin/groovy/jsr223/customizer/AbstractSandboxExtension.groovy?ref=9bdef4d86c3065b02c402a6d44dbf0329a0e2ddc", "patch": "@@ -51,7 +51,7 @@ abstract class AbstractSandboxExtension extends GroovyTypeCheckingExtensionSuppo\n         def boolean autoTypeUnknown = allowAutoTypeOfUnknown()\n \n         unresolvedVariable { var ->\n-            if (staticVariableTyping.containsKey(var.name)) {\n+            if ((null != staticVariableTyping) && (staticVariableTyping.containsKey(var.name))) {\n                 storeType(var, classNodeFor(staticVariableTyping[var.name]))\n                 handled = true\n                 return\n@@ -87,4 +87,4 @@ abstract class AbstractSandboxExtension extends GroovyTypeCheckingExtensionSuppo\n             visitor.visitMethod(methodNode)\n         }\n     }\n-}\n\\ No newline at end of file\n+}", "filename": "gremlin-groovy/src/main/groovy/org/apache/tinkerpop/gremlin/groovy/jsr223/customizer/AbstractSandboxExtension.groovy"}, {"additions": 10, "raw_url": "https://github.com/apache/tinkerpop/raw/9bdef4d86c3065b02c402a6d44dbf0329a0e2ddc/gremlin-groovy/src/main/groovy/org/apache/tinkerpop/gremlin/groovy/jsr223/customizer/FileSandboxExtension.groovy", "blob_url": "https://github.com/apache/tinkerpop/blob/9bdef4d86c3065b02c402a6d44dbf0329a0e2ddc/gremlin-groovy/src/main/groovy/org/apache/tinkerpop/gremlin/groovy/jsr223/customizer/FileSandboxExtension.groovy", "sha": "6e9e374f2264c7bba02f9a96695cef54171ef05b", "changes": 16, "status": "modified", "deletions": 6, "contents_url": "https://api.github.com/repos/apache/tinkerpop/contents/gremlin-groovy/src/main/groovy/org/apache/tinkerpop/gremlin/groovy/jsr223/customizer/FileSandboxExtension.groovy?ref=9bdef4d86c3065b02c402a6d44dbf0329a0e2ddc", "patch": "@@ -63,12 +63,16 @@ class FileSandboxExtension extends AbstractSandboxExtension {\n \n         autoTypeUnknown = settings.autoTypeUnknown\n         methodWhiteList = settings.methodWhiteList\n-        staticVariableTypes = settings.staticVariableTypes.collectEntries { kv ->\n-            try {\n-                return [(kv.key): Class.forName(kv.value)]\n-            } catch (Exception ex) {\n-                logger.error(\"Could not convert ${kv.value} to a Class for variable ${kv.key}\", ex)\n-                throw ex\n+        if (null == settings.staticVariableTypes) {\n+            staticVariableTypes = null\n+        } else {\n+            staticVariableTypes = settings.staticVariableTypes.collectEntries { kv ->\n+                try {\n+                    return [(kv.key): Class.forName(kv.value)]\n+                } catch (Exception ex) {\n+                    logger.error(\"Could not convert ${kv.value} to a Class for variable ${kv.key}\", ex)\n+                    throw ex\n+                }\n             }\n         }\n     }", "filename": "gremlin-groovy/src/main/groovy/org/apache/tinkerpop/gremlin/groovy/jsr223/customizer/FileSandboxExtension.groovy"}], "repo": "tinkerpop"}, {"commit": "https://github.com/apache/tinkerpop/commit/1d715d3d7e9d532e7ea3713f4c4c20e0472b88ba", "parent": "https://github.com/apache/tinkerpop/commit/3d70c3d15d4591acab84420f86991cd98a187c38", "message": "added a group().profile() test to ProfileTest to verify no NPE.", "bug_id": "tinkerpop_6", "file": [{"additions": 5, "raw_url": "https://github.com/apache/tinkerpop/raw/1d715d3d7e9d532e7ea3713f4c4c20e0472b88ba/gremlin-groovy-test/src/main/groovy/org/apache/tinkerpop/gremlin/process/traversal/step/map/GroovyProfileTest.groovy", "blob_url": "https://github.com/apache/tinkerpop/blob/1d715d3d7e9d532e7ea3713f4c4c20e0472b88ba/gremlin-groovy-test/src/main/groovy/org/apache/tinkerpop/gremlin/process/traversal/step/map/GroovyProfileTest.groovy", "sha": "f2dbfbf6e8f8e0768605391029bfa4b1f1b3ef82", "changes": 5, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/tinkerpop/contents/gremlin-groovy-test/src/main/groovy/org/apache/tinkerpop/gremlin/process/traversal/step/map/GroovyProfileTest.groovy?ref=1d715d3d7e9d532e7ea3713f4c4c20e0472b88ba", "patch": "@@ -84,6 +84,11 @@ public abstract class GroovyProfileTest {\n         public Traversal<Vertex, TraversalMetrics> get_g_V_hasLabelXpersonX_pageRank_byXrankX_byXbothEX_rank_profile() {\n             new ScriptTraversal<>(g, \"gremlin-groovy\", \"g.V.hasLabel('person').pageRank.by('rank').by(bothE()).rank.profile()\")\n         }\n+\n+        @Override\n+        public Traversal<Vertex, TraversalMetrics> get_g_V_groupXmX_profile() {\n+            new ScriptTraversal<>(g, \"gremlin-groovy\", \"g.V.group('m').profile\")\n+        }\n     }\n }\n ", "filename": "gremlin-groovy-test/src/main/groovy/org/apache/tinkerpop/gremlin/process/traversal/step/map/GroovyProfileTest.groovy"}, {"additions": 17, "raw_url": "https://github.com/apache/tinkerpop/raw/1d715d3d7e9d532e7ea3713f4c4c20e0472b88ba/gremlin-test/src/main/java/org/apache/tinkerpop/gremlin/process/traversal/step/map/ProfileTest.java", "blob_url": "https://github.com/apache/tinkerpop/blob/1d715d3d7e9d532e7ea3713f4c4c20e0472b88ba/gremlin-test/src/main/java/org/apache/tinkerpop/gremlin/process/traversal/step/map/ProfileTest.java", "sha": "1af6ba3f1ac84892ea30fe18d5fdb63700ed6973", "changes": 17, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/tinkerpop/contents/gremlin-test/src/main/java/org/apache/tinkerpop/gremlin/process/traversal/step/map/ProfileTest.java?ref=1d715d3d7e9d532e7ea3713f4c4c20e0472b88ba", "patch": "@@ -54,6 +54,7 @@\n import static org.apache.tinkerpop.gremlin.LoadGraphWith.GraphData.MODERN;\n import static org.apache.tinkerpop.gremlin.process.traversal.dsl.graph.__.both;\n import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertFalse;\n import static org.junit.Assert.assertNotEquals;\n import static org.junit.Assert.assertTrue;\n import static org.junit.Assert.fail;\n@@ -88,6 +89,8 @@\n \n     public abstract Traversal<Vertex, TraversalMetrics> get_g_V_hasLabelXpersonX_pageRank_byXrankX_byXbothEX_rank_profile();\n \n+    public abstract Traversal<Vertex, TraversalMetrics> get_g_V_groupXmX_profile();\n+\n     @Test\n     @LoadGraphWith(MODERN)\n     public void modern_V_out_out_profile() {\n@@ -409,6 +412,15 @@ public void g_V_hasLabelXpersonX_pageRank_byXrankX_byXbothEX_rank_profile() {\n         }\n     }\n \n+    @Test\n+    @LoadGraphWith(MODERN)\n+    public void g_V_groupXmX_profile() {\n+        final Traversal<Vertex, TraversalMetrics> traversal = get_g_V_groupXmX_profile();\n+        printTraversalForm(traversal);\n+        traversal.next();\n+        assertFalse(traversal.hasNext());\n+    }\n+\n     private static boolean onGraphComputer(final Traversal.Admin<?, ?> traversal) {\n         return !TraversalHelper.getStepsOfClass(TraversalVertexProgramStep.class, TraversalHelper.getRootTraversal(traversal)).isEmpty();\n     }\n@@ -496,5 +508,10 @@ private static boolean onGraphComputer(final Traversal.Admin<?, ?> traversal) {\n         public Traversal<Vertex, TraversalMetrics> get_g_V_hasLabelXpersonX_pageRank_byXrankX_byXbothEX_rank_profile() {\n             return g.V().hasLabel(\"person\").pageRank().by(\"rank\").by(__.bothE()).values(\"rank\").profile();\n         }\n+\n+        @Override\n+        public Traversal<Vertex, TraversalMetrics> get_g_V_groupXmX_profile() {\n+            return g.V().group(\"m\").profile();\n+        }\n     }\n }", "filename": "gremlin-test/src/main/java/org/apache/tinkerpop/gremlin/process/traversal/step/map/ProfileTest.java"}], "repo": "tinkerpop"}, {"commit": "https://github.com/apache/tinkerpop/commit/1e0c581c90b67a44121f8ec7258ea171e7c0bfe7", "parent": "https://github.com/apache/tinkerpop/commit/099e6bc62468516974a3e76531d00444dbe89edc", "message": "Removed potential for NPEs when validating IDs given to vertices()/edges()", "bug_id": "tinkerpop_7", "file": [{"additions": 8, "raw_url": "https://github.com/apache/tinkerpop/raw/1e0c581c90b67a44121f8ec7258ea171e7c0bfe7/tinkergraph-gremlin/src/main/java/org/apache/tinkerpop/gremlin/tinkergraph/structure/TinkerGraph.java", "blob_url": "https://github.com/apache/tinkerpop/blob/1e0c581c90b67a44121f8ec7258ea171e7c0bfe7/tinkergraph-gremlin/src/main/java/org/apache/tinkerpop/gremlin/tinkergraph/structure/TinkerGraph.java", "sha": "af7245ac0a959d081ebd5674b49b76f69b5ed3e2", "changes": 11, "status": "modified", "deletions": 3, "contents_url": "https://api.github.com/repos/apache/tinkerpop/contents/tinkergraph-gremlin/src/main/java/org/apache/tinkerpop/gremlin/tinkergraph/structure/TinkerGraph.java?ref=1e0c581c90b67a44121f8ec7258ea171e7c0bfe7", "patch": "@@ -351,9 +351,14 @@ public Features features() {\n     }\n \n     private void validateHomogenousIds(final List<Object> ids) {\n-        final Class firstClass = ids.get(0).getClass();\n-        for (Object id : ids) {\n-            if (!id.getClass().equals(firstClass))\n+        final Iterator<Object> iterator = ids.iterator();\n+        Object id = iterator.next();\n+        if (id == null)\n+            throw Graph.Exceptions.idArgsMustBeEitherIdOrElement();\n+        final Class firstClass = id.getClass();\n+        while (iterator.hasNext()) {\n+            id = iterator.next();\n+            if (id == null || !id.getClass().equals(firstClass))\n                 throw Graph.Exceptions.idArgsMustBeEitherIdOrElement();\n         }\n     }", "filename": "tinkergraph-gremlin/src/main/java/org/apache/tinkerpop/gremlin/tinkergraph/structure/TinkerGraph.java"}], "repo": "tinkerpop"}, {"commit": "https://github.com/apache/tinkerpop/commit/2fc49e1b3045e9ad82410ecfd1141aaa861c96de", "parent": "https://github.com/apache/tinkerpop/commit/1478e778d2ffc0de1791323dcb8f7e8473bf75b2", "message": "fixed an NPE with StarVertex.vertices(BOTH).", "bug_id": "tinkerpop_8", "file": [{"additions": 8, "raw_url": "https://github.com/apache/tinkerpop/raw/2fc49e1b3045e9ad82410ecfd1141aaa861c96de/gremlin-core/src/main/java/org/apache/tinkerpop/gremlin/process/computer/util/star/StarGraph.java", "blob_url": "https://github.com/apache/tinkerpop/blob/2fc49e1b3045e9ad82410ecfd1141aaa861c96de/gremlin-core/src/main/java/org/apache/tinkerpop/gremlin/process/computer/util/star/StarGraph.java", "sha": "f9f09411c4dbb79740eb1339f09755e4df44fae4", "changes": 11, "status": "modified", "deletions": 3, "contents_url": "https://api.github.com/repos/apache/tinkerpop/contents/gremlin-core/src/main/java/org/apache/tinkerpop/gremlin/process/computer/util/star/StarGraph.java?ref=2fc49e1b3045e9ad82410ecfd1141aaa861c96de", "patch": "@@ -31,6 +31,7 @@\n import org.apache.tinkerpop.gremlin.structure.Vertex;\n import org.apache.tinkerpop.gremlin.structure.VertexProperty;\n import org.apache.tinkerpop.gremlin.structure.util.ElementHelper;\n+import org.apache.tinkerpop.gremlin.structure.util.StringFactory;\n import org.apache.tinkerpop.gremlin.structure.util.detached.DetachedEdge;\n import org.apache.tinkerpop.gremlin.structure.util.detached.DetachedVertex;\n \n@@ -43,7 +44,7 @@\n /**\n  * @author Marko A. Rodriguez (http://markorodriguez.com)\n  */\n-public class StarGraph implements Graph {\n+public final class StarGraph implements Graph {\n \n     private static final Configuration EMPTY_CONFIGURATION = new BaseConfiguration();\n \n@@ -66,7 +67,6 @@ public GraphComputer compute() throws IllegalArgumentException {\n \n     @Override\n     public Iterator<Vertex> vertices(final Object... vertexIds) {\n-        System.out.println(this.starVertex.outEdges);\n         return null == this.starVertex ?\n                 Collections.emptyIterator() :\n                 Stream.concat(\n@@ -116,6 +116,11 @@ public void close() throws Exception {\n \n     }\n \n+    @Override\n+    public String toString() {\n+        return StringFactory.graphString(this, \"starOf:\" + this.starVertex);\n+    }\n+\n     public static StarGraph open() {\n         return new StarGraph();\n     }\n@@ -129,6 +134,7 @@ public static Vertex addTo(final StarGraph graph, final DetachedVertex detachedV\n             final VertexProperty<?> vertexProperty = graph.starVertex.property(VertexProperty.Cardinality.list, detachedVertexProperty.key(), detachedVertexProperty.value());\n             detachedVertexProperty.properties().forEachRemaining(detachedVertexPropertyProperty -> {\n                 vertexProperty.property(detachedVertexPropertyProperty.key(), detachedVertexPropertyProperty.value());\n+                // todo: id of vertex property\n             });\n         });\n         return graph.starVertex;\n@@ -150,5 +156,4 @@ public static Edge addTo(final StarGraph graph, final DetachedEdge edge) {\n     protected static Long randomId() {\n         return new Random().nextLong(); // TODO: you shouldn't need this!\n     }\n-\n }", "filename": "gremlin-core/src/main/java/org/apache/tinkerpop/gremlin/process/computer/util/star/StarGraph.java"}, {"additions": 1, "raw_url": "https://github.com/apache/tinkerpop/raw/2fc49e1b3045e9ad82410ecfd1141aaa861c96de/gremlin-core/src/main/java/org/apache/tinkerpop/gremlin/process/computer/util/star/StarInEdge.java", "blob_url": "https://github.com/apache/tinkerpop/blob/2fc49e1b3045e9ad82410ecfd1141aaa861c96de/gremlin-core/src/main/java/org/apache/tinkerpop/gremlin/process/computer/util/star/StarInEdge.java", "sha": "5d382a8902e344abcf51e475f11e56802e11b2a9", "changes": 2, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/tinkerpop/contents/gremlin-core/src/main/java/org/apache/tinkerpop/gremlin/process/computer/util/star/StarInEdge.java?ref=2fc49e1b3045e9ad82410ecfd1141aaa861c96de", "patch": "@@ -30,7 +30,7 @@\n /**\n  * @author Marko A. Rodriguez (http://markorodriguez.com)\n  */\n-public class StarInEdge extends StarEdge {\n+public final class StarInEdge extends StarEdge {\n \n     private final StarOutVertex starOutVertex;\n     private final StarVertex starVertex;", "filename": "gremlin-core/src/main/java/org/apache/tinkerpop/gremlin/process/computer/util/star/StarInEdge.java"}, {"additions": 1, "raw_url": "https://github.com/apache/tinkerpop/raw/2fc49e1b3045e9ad82410ecfd1141aaa861c96de/gremlin-core/src/main/java/org/apache/tinkerpop/gremlin/process/computer/util/star/StarInVertex.java", "blob_url": "https://github.com/apache/tinkerpop/blob/2fc49e1b3045e9ad82410ecfd1141aaa861c96de/gremlin-core/src/main/java/org/apache/tinkerpop/gremlin/process/computer/util/star/StarInVertex.java", "sha": "b9ea627e064f9ac2404ee011439e153cd012c2bf", "changes": 2, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/tinkerpop/contents/gremlin-core/src/main/java/org/apache/tinkerpop/gremlin/process/computer/util/star/StarInVertex.java?ref=2fc49e1b3045e9ad82410ecfd1141aaa861c96de", "patch": "@@ -31,7 +31,7 @@\n /**\n  * @author Marko A. Rodriguez (http://markorodriguez.com)\n  */\n-public class StarInVertex extends StarAdjacentVertex {\n+public final class StarInVertex extends StarAdjacentVertex {\n \n     public StarInVertex(final Object id, final StarVertex starVertex) {\n         super(id, starVertex);", "filename": "gremlin-core/src/main/java/org/apache/tinkerpop/gremlin/process/computer/util/star/StarInVertex.java"}, {"additions": 1, "raw_url": "https://github.com/apache/tinkerpop/raw/2fc49e1b3045e9ad82410ecfd1141aaa861c96de/gremlin-core/src/main/java/org/apache/tinkerpop/gremlin/process/computer/util/star/StarOutEdge.java", "blob_url": "https://github.com/apache/tinkerpop/blob/2fc49e1b3045e9ad82410ecfd1141aaa861c96de/gremlin-core/src/main/java/org/apache/tinkerpop/gremlin/process/computer/util/star/StarOutEdge.java", "sha": "533bea6b67494f4e6e595db2c3ec523fe34112a8", "changes": 2, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/tinkerpop/contents/gremlin-core/src/main/java/org/apache/tinkerpop/gremlin/process/computer/util/star/StarOutEdge.java?ref=2fc49e1b3045e9ad82410ecfd1141aaa861c96de", "patch": "@@ -30,7 +30,7 @@\n /**\n  * @author Marko A. Rodriguez (http://markorodriguez.com)\n  */\n-public class StarOutEdge extends StarEdge {\n+public final class StarOutEdge extends StarEdge {\n \n     private final StarVertex starVertex;\n     private final StarInVertex starInVertex;", "filename": "gremlin-core/src/main/java/org/apache/tinkerpop/gremlin/process/computer/util/star/StarOutEdge.java"}, {"additions": 1, "raw_url": "https://github.com/apache/tinkerpop/raw/2fc49e1b3045e9ad82410ecfd1141aaa861c96de/gremlin-core/src/main/java/org/apache/tinkerpop/gremlin/process/computer/util/star/StarOutVertex.java", "blob_url": "https://github.com/apache/tinkerpop/blob/2fc49e1b3045e9ad82410ecfd1141aaa861c96de/gremlin-core/src/main/java/org/apache/tinkerpop/gremlin/process/computer/util/star/StarOutVertex.java", "sha": "c6ead652b9bcf51502c9bf2aafb4c971b42e26f9", "changes": 2, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/tinkerpop/contents/gremlin-core/src/main/java/org/apache/tinkerpop/gremlin/process/computer/util/star/StarOutVertex.java?ref=2fc49e1b3045e9ad82410ecfd1141aaa861c96de", "patch": "@@ -31,7 +31,7 @@\n /**\n  * @author Marko A. Rodriguez (http://markorodriguez.com)\n  */\n-public class StarOutVertex extends StarAdjacentVertex {\n+public final class StarOutVertex extends StarAdjacentVertex {\n \n     public StarOutVertex(final Object id, final StarVertex starVertex) {\n         super(id, starVertex);", "filename": "gremlin-core/src/main/java/org/apache/tinkerpop/gremlin/process/computer/util/star/StarOutVertex.java"}, {"additions": 1, "raw_url": "https://github.com/apache/tinkerpop/raw/2fc49e1b3045e9ad82410ecfd1141aaa861c96de/gremlin-core/src/main/java/org/apache/tinkerpop/gremlin/process/computer/util/star/StarProperty.java", "blob_url": "https://github.com/apache/tinkerpop/blob/2fc49e1b3045e9ad82410ecfd1141aaa861c96de/gremlin-core/src/main/java/org/apache/tinkerpop/gremlin/process/computer/util/star/StarProperty.java", "sha": "e884f30302c0bf87a1f6d2f6a2f3ea26436ff74f", "changes": 2, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/tinkerpop/contents/gremlin-core/src/main/java/org/apache/tinkerpop/gremlin/process/computer/util/star/StarProperty.java?ref=2fc49e1b3045e9ad82410ecfd1141aaa861c96de", "patch": "@@ -29,7 +29,7 @@\n /**\n  * @author Marko A. Rodriguez (http://markorodriguez.com)\n  */\n-public class StarProperty<V> implements Property<V> {\n+public final class StarProperty<V> implements Property<V> {\n \n     private final String key;\n     private final V value;", "filename": "gremlin-core/src/main/java/org/apache/tinkerpop/gremlin/process/computer/util/star/StarProperty.java"}, {"additions": 7, "raw_url": "https://github.com/apache/tinkerpop/raw/2fc49e1b3045e9ad82410ecfd1141aaa861c96de/gremlin-core/src/main/java/org/apache/tinkerpop/gremlin/process/computer/util/star/StarVertex.java", "blob_url": "https://github.com/apache/tinkerpop/blob/2fc49e1b3045e9ad82410ecfd1141aaa861c96de/gremlin-core/src/main/java/org/apache/tinkerpop/gremlin/process/computer/util/star/StarVertex.java", "sha": "a66657a183e7f57af942176e49ca40bb6e5422cb", "changes": 9, "status": "modified", "deletions": 2, "contents_url": "https://api.github.com/repos/apache/tinkerpop/contents/gremlin-core/src/main/java/org/apache/tinkerpop/gremlin/process/computer/util/star/StarVertex.java?ref=2fc49e1b3045e9ad82410ecfd1141aaa861c96de", "patch": "@@ -39,7 +39,7 @@\n /**\n  * @author Marko A. Rodriguez (http://markorodriguez.com)\n  */\n-public class StarVertex extends StarElement implements Vertex {\n+public final class StarVertex extends StarElement implements Vertex {\n \n     protected Map<String, List<VertexProperty<?>>> properties = null;\n     protected Map<String, List<Edge>> outEdges = new HashMap<>();\n@@ -113,7 +113,12 @@ public Edge addEdge(final String label, final Vertex inVertex, final Object... k\n                     .map(Edge::outVertex)\n                     .iterator();\n         } else {\n-            return null;\n+            return Stream.concat(this.outEdges.entrySet().stream(), this.inEdges.entrySet().stream())\n+                    .filter(entry -> ElementHelper.keyExists(entry.getKey(), edgeLabels))\n+                    .map(Map.Entry::getValue)\n+                    .flatMap(List::stream)\n+                    .map(Edge::outVertex)\n+                    .iterator();\n         }\n     }\n ", "filename": "gremlin-core/src/main/java/org/apache/tinkerpop/gremlin/process/computer/util/star/StarVertex.java"}, {"additions": 1, "raw_url": "https://github.com/apache/tinkerpop/raw/2fc49e1b3045e9ad82410ecfd1141aaa861c96de/gremlin-core/src/main/java/org/apache/tinkerpop/gremlin/process/computer/util/star/StarVertexProperty.java", "blob_url": "https://github.com/apache/tinkerpop/blob/2fc49e1b3045e9ad82410ecfd1141aaa861c96de/gremlin-core/src/main/java/org/apache/tinkerpop/gremlin/process/computer/util/star/StarVertexProperty.java", "sha": "d3e35f54ea41ff590f6f321f50026c89a53c7d44", "changes": 2, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/tinkerpop/contents/gremlin-core/src/main/java/org/apache/tinkerpop/gremlin/process/computer/util/star/StarVertexProperty.java?ref=2fc49e1b3045e9ad82410ecfd1141aaa861c96de", "patch": "@@ -36,7 +36,7 @@\n /**\n  * @author Marko A. Rodriguez (http://markorodriguez.com)\n  */\n-public class StarVertexProperty<V> implements VertexProperty<V> {\n+public final class StarVertexProperty<V> implements VertexProperty<V> {\n \n     private final Object id;\n     private final String key;", "filename": "gremlin-core/src/main/java/org/apache/tinkerpop/gremlin/process/computer/util/star/StarVertexProperty.java"}], "repo": "tinkerpop"}, {"commit": "https://github.com/apache/tinkerpop/commit/82295fe1eaaeab86517c191c1d44dfe3f0b34d2a", "parent": "https://github.com/apache/tinkerpop/commit/0563ec36bb823d617acde6a15217c2b61471408d", "message": "an untested addEdge method is now tested and the NPE thrown is now not there. Thank you @dalaro.", "bug_id": "tinkerpop_9", "file": [{"additions": 3, "raw_url": "https://github.com/apache/tinkerpop/raw/82295fe1eaaeab86517c191c1d44dfe3f0b34d2a/gremlin-core/src/main/java/org/apache/tinkerpop/gremlin/structure/util/star/StarGraph.java", "blob_url": "https://github.com/apache/tinkerpop/blob/82295fe1eaaeab86517c191c1d44dfe3f0b34d2a/gremlin-core/src/main/java/org/apache/tinkerpop/gremlin/structure/util/star/StarGraph.java", "sha": "f51663055068b592135184bf86bfea5c19f3c31f", "changes": 4, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/tinkerpop/contents/gremlin-core/src/main/java/org/apache/tinkerpop/gremlin/structure/util/star/StarGraph.java?ref=82295fe1eaaeab86517c191c1d44dfe3f0b34d2a", "patch": "@@ -290,7 +290,9 @@ public void dropVertexProperties(final String... propertyKeys) {\n         public Edge addEdge(final String label, final Vertex inVertex, final Object... keyValues) {\n             final Edge edge = this.addOutEdge(label, inVertex, keyValues);\n             if (inVertex.equals(this)) {\n-                List<Edge> inE = inEdges.get(label);\n+                if(null == this.inEdges)\n+                    this.inEdges = new HashMap<>();\n+                List<Edge> inE = this.inEdges.get(label);\n                 if (null == inE) {\n                     inE = new ArrayList<>();\n                     this.inEdges.put(label, inE);", "filename": "gremlin-core/src/main/java/org/apache/tinkerpop/gremlin/structure/util/star/StarGraph.java"}, {"additions": 16, "raw_url": "https://github.com/apache/tinkerpop/raw/82295fe1eaaeab86517c191c1d44dfe3f0b34d2a/gremlin-test/src/main/java/org/apache/tinkerpop/gremlin/structure/util/star/StarGraphTest.java", "blob_url": "https://github.com/apache/tinkerpop/blob/82295fe1eaaeab86517c191c1d44dfe3f0b34d2a/gremlin-test/src/main/java/org/apache/tinkerpop/gremlin/structure/util/star/StarGraphTest.java", "sha": "034afad089525e69be021a99a39538238946cdac", "changes": 16, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/tinkerpop/contents/gremlin-test/src/main/java/org/apache/tinkerpop/gremlin/structure/util/star/StarGraphTest.java?ref=82295fe1eaaeab86517c191c1d44dfe3f0b34d2a", "patch": "@@ -229,8 +229,24 @@ public void shouldHandleSelfLoops() {\n         TestHelper.validateVertexEquality(vertex, starGraph.getStarVertex(), true);\n         TestHelper.validateVertexEquality(vertex, starGraphCopy.getStarVertex(), true);\n         TestHelper.validateVertexEquality(starGraph.getStarVertex(), starGraphCopy.getStarVertex(), true);\n+        // test native non-clone-based methods\n+        final StarGraph starGraphNative = StarGraph.open();\n+        Vertex v1 = starGraphNative.addVertex(T.label, \"thing\", T.id, \"v1\");\n+        assertEquals(\"v1\", v1.id());\n+        assertEquals(\"thing\", v1.label());\n+        Edge e1 = v1.addEdge(\"self\", v1, \"name\", \"pipes\");\n+        assertEquals(2l, IteratorUtils.count(v1.vertices(Direction.BOTH, \"self\", \"nothing\")));\n+        assertEquals(1l, IteratorUtils.count(v1.vertices(Direction.OUT)));\n+        assertEquals(1l, IteratorUtils.count(v1.vertices(Direction.IN, \"self\")));\n+        edgeIterator = v1.edges(Direction.BOTH);\n+        TestHelper.validateEdgeEquality(e1, edgeIterator.next());\n+        TestHelper.validateEdgeEquality(e1, edgeIterator.next());\n+        assertFalse(edgeIterator.hasNext());\n+        TestHelper.validateEdgeEquality(e1, v1.edges(Direction.OUT, \"self\", \"nothing\").next());\n+        TestHelper.validateEdgeEquality(e1, v1.edges(Direction.IN).next());\n     }\n \n+\n     private Pair<StarGraph, Integer> serializeDeserialize(final StarGraph starGraph) {\n         final ByteArrayOutputStream outputStream = new ByteArrayOutputStream();\n         try {", "filename": "gremlin-test/src/main/java/org/apache/tinkerpop/gremlin/structure/util/star/StarGraphTest.java"}], "repo": "tinkerpop"}, {"commit": "https://github.com/apache/tinkerpop/commit/c890cebad5231cdab8744878bebb4ea363689a3a", "parent": "https://github.com/apache/tinkerpop/commit/44d40f60664b8b758f02bc8e04300b931b2c6622", "message": "fixed the NPE that occurs in OLAP when you have a local/OLTP group() nested within an OLAP group(). The solution is elegant, but the problem, its not as efficient as the code when we had the NPE.... dar. Going to fiddle some more tomorrow to see if I can get it faster --- 600ms vs 400ms differences.", "bug_id": "tinkerpop_10", "file": [{"additions": 110, "raw_url": "https://github.com/apache/tinkerpop/raw/c890cebad5231cdab8744878bebb4ea363689a3a/gremlin-core/src/main/java/org/apache/tinkerpop/gremlin/process/traversal/step/map/GroupStep.java", "blob_url": "https://github.com/apache/tinkerpop/blob/c890cebad5231cdab8744878bebb4ea363689a3a/gremlin-core/src/main/java/org/apache/tinkerpop/gremlin/process/traversal/step/map/GroupStep.java", "sha": "b430d8f8fabfb465a4f8545a6194dfd08326c3ad", "changes": 210, "status": "modified", "deletions": 100, "contents_url": "https://api.github.com/repos/apache/tinkerpop/contents/gremlin-core/src/main/java/org/apache/tinkerpop/gremlin/process/traversal/step/map/GroupStep.java?ref=c890cebad5231cdab8744878bebb4ea363689a3a", "patch": "@@ -29,7 +29,6 @@\n import org.apache.tinkerpop.gremlin.process.traversal.lambda.TokenTraversal;\n import org.apache.tinkerpop.gremlin.process.traversal.step.Barrier;\n import org.apache.tinkerpop.gremlin.process.traversal.step.ByModulating;\n-import org.apache.tinkerpop.gremlin.process.traversal.step.GraphComputing;\n import org.apache.tinkerpop.gremlin.process.traversal.step.TraversalParent;\n import org.apache.tinkerpop.gremlin.process.traversal.step.util.ReducingBarrierStep;\n import org.apache.tinkerpop.gremlin.process.traversal.traverser.TraverserRequirement;\n@@ -39,32 +38,32 @@\n import org.apache.tinkerpop.gremlin.structure.util.StringFactory;\n import org.apache.tinkerpop.gremlin.util.function.HashMapSupplier;\n import org.apache.tinkerpop.gremlin.util.iterator.IteratorUtils;\n+import org.javatuples.Pair;\n \n import java.io.Serializable;\n import java.util.ArrayList;\n import java.util.Arrays;\n import java.util.HashMap;\n import java.util.List;\n import java.util.Map;\n-import java.util.Optional;\n import java.util.Set;\n import java.util.function.BinaryOperator;\n \n /**\n  * @author Marko A. Rodriguez (http://markorodriguez.com)\n  */\n-public final class GroupStep<S, K, V> extends ReducingBarrierStep<S, Map<K, V>> implements ByModulating, TraversalParent, GraphComputing {\n+public final class GroupStep<S, K, V> extends ReducingBarrierStep<S, Map<K, V>> implements ByModulating, TraversalParent {\n \n     private char state = 'k';\n     private Traversal.Admin<S, K> keyTraversal = null;\n-    private Traversal.Admin<S, V> valueTraversal = this.integrateChild(__.fold().asAdmin());\n-    private Traversal.Admin<S, ?> preTraversal = null;      // used in OLAP\n-    private ReducingBarrierStep reducingBarrierStep = null; // used in OLAP\n-    private boolean onGraphComputer = false;\n+    private Traversal.Admin<S, ?> preTraversal;\n+    private Traversal.Admin<S, V> valueTraversal;\n \n     public GroupStep(final Traversal.Admin traversal) {\n         super(traversal);\n-        this.setReducingBiOperator(new GroupBiOperator<>(this.valueTraversal, this.onGraphComputer));\n+        this.valueTraversal = this.integrateChild(__.fold().asAdmin());\n+        this.preTraversal = this.integrateChild(splitOnBarrierStep(this.valueTraversal).get(0));\n+        this.setReducingBiOperator(new GroupBiOperator<>(this.valueTraversal));\n         this.setSeedSupplier(HashMapSupplier.instance());\n     }\n \n@@ -75,7 +74,8 @@ public void modulateBy(final Traversal.Admin<?, ?> kvTraversal) {\n             this.state = 'v';\n         } else if ('v' == this.state) {\n             this.valueTraversal = this.integrateChild(convertValueTraversal(kvTraversal));\n-            this.setReducingBiOperator(new GroupBiOperator<>(this.valueTraversal, this.onGraphComputer));\n+            this.preTraversal = this.integrateChild(splitOnBarrierStep(this.valueTraversal).get(0));\n+            this.setReducingBiOperator(new GroupBiOperator<>(this.valueTraversal));\n             this.state = 'x';\n         } else {\n             throw new IllegalStateException(\"The key and value traversals for group()-step have already been set: \" + this);\n@@ -85,21 +85,11 @@ public void modulateBy(final Traversal.Admin<?, ?> kvTraversal) {\n     @Override\n     public Map<K, V> projectTraverser(final Traverser.Admin<S> traverser) {\n         final Map<K, V> map = new HashMap<>(1);\n-        final K key = TraversalUtil.applyNullable(traverser, this.keyTraversal);\n-        if (this.onGraphComputer) {\n-            if (null == this.reducingBarrierStep) {\n-                final TraverserSet traverserSet = new TraverserSet();\n-                this.preTraversal.reset();\n-                this.preTraversal.addStart(traverser.split());\n-                this.preTraversal.getEndStep().forEachRemaining(traverserSet::add);\n-                map.put(key, (V) traverserSet);\n-            } else {\n-                this.valueTraversal.reset();\n-                this.valueTraversal.addStart(traverser.split());\n-                map.put(key, (V) this.reducingBarrierStep.nextBarrier());\n-            }\n-        } else\n-            map.put(key, (V) traverser);\n+        final TraverserSet traverserSet = new TraverserSet<>();\n+        this.preTraversal.reset();\n+        this.preTraversal.addStart(traverser.split());\n+        this.preTraversal.getEndStep().forEachRemaining(traverserSet::add);\n+        map.put(TraversalUtil.applyNullable(traverser, this.keyTraversal), (V) traverserSet);\n         return map;\n     }\n \n@@ -128,11 +118,7 @@ public String toString() {\n         if (null != this.keyTraversal)\n             clone.keyTraversal = this.keyTraversal.clone();\n         clone.valueTraversal = this.valueTraversal.clone();\n-        if (null != this.preTraversal)\n-            clone.preTraversal = this.preTraversal.clone();\n-        final Optional<Barrier> optional = TraversalHelper.getFirstStepOfAssignableClass(Barrier.class, clone.valueTraversal);\n-        if (optional.isPresent() && optional.get() instanceof ReducingBarrierStep)\n-            clone.reducingBarrierStep = (ReducingBarrierStep) optional.get();\n+        clone.preTraversal = this.integrateChild(GroupStep.splitOnBarrierStep(clone.valueTraversal).get(0));\n         return clone;\n     }\n \n@@ -154,37 +140,19 @@ public int hashCode() {\n \n     @Override\n     public Map<K, V> generateFinalResult(final Map<K, V> object) {\n-        return GroupStep.doFinalReduction((Map<K, Object>) object, this.valueTraversal, this.onGraphComputer);\n-    }\n-\n-    @Override\n-    public void onGraphComputer() {\n-        this.preTraversal = this.integrateChild(splitOnBarrierStep(this.valueTraversal).get(0));\n-        final Optional<Barrier> optional = TraversalHelper.getFirstStepOfAssignableClass(Barrier.class, this.valueTraversal);\n-        if (optional.isPresent() && optional.get() instanceof ReducingBarrierStep)\n-            this.reducingBarrierStep = (ReducingBarrierStep) optional.get();\n-        this.setReducingBiOperator(new GroupBiOperator<>(this.valueTraversal, this.onGraphComputer = true));\n+        return GroupStep.doFinalReduction((Map<K, Object>) object, this.valueTraversal);\n     }\n \n     ///////////////////////\n \n     public static final class GroupBiOperator<K, V> implements BinaryOperator<Map<K, V>>, Serializable {\n \n-        private boolean onGraphComputer;\n-        private BinaryOperator reducingBinaryOperator;          // OLAP (w/ reducer)\n-        private transient Traversal.Admin<?, V> valueTraversal; // OLTP\n-        private transient Map<K, Integer> counters;             // OLTP\n+        private Traversal.Admin<?, V> valueTraversal;\n+        private ReducingBarrierStep reducingBarrierStep = null;\n \n-        public GroupBiOperator(final Traversal.Admin<?, V> valueTraversal, final boolean onGraphComputer) {\n-            this.onGraphComputer = onGraphComputer;\n-            if (this.onGraphComputer) {\n-                final Optional<Barrier> optional = TraversalHelper.getFirstStepOfAssignableClass(Barrier.class, valueTraversal);\n-                if (optional.isPresent() && optional.get() instanceof ReducingBarrierStep)\n-                    this.reducingBinaryOperator = ((ReducingBarrierStep) optional.get()).getBiOperator();\n-            } else {\n-                this.valueTraversal = valueTraversal;\n-                this.counters = new HashMap<>();\n-            }\n+        public GroupBiOperator(final Traversal.Admin<?, V> valueTraversal) {\n+            this.valueTraversal = valueTraversal.clone();\n+            this.reducingBarrierStep = TraversalHelper.getFirstStepOfAssignableClass(ReducingBarrierStep.class, this.valueTraversal).orElse(null);\n         }\n \n         public GroupBiOperator() {\n@@ -194,43 +162,84 @@ public GroupBiOperator() {\n         @Override\n         public Map<K, V> apply(final Map<K, V> mapA, final Map<K, V> mapB) {\n             for (final K key : mapB.keySet()) {\n-                if (this.onGraphComputer) {\n-                    final Object objectB = mapB.get(key);\n-                    if (null != this.reducingBinaryOperator) {\n-                        // OLAP -- if there is a mid-traversal, apply the binary reducer and propagate the mutating barrier\n-                        final Object objectA = mapA.get(key);\n-                        mapA.put(key, (V) (null == objectA ? objectB : this.reducingBinaryOperator.apply(objectA, objectB)));\n-                    } else {\n-                        // OLAP -- if there is no mid-traversal reducer, aggregate pre-barrier traversers into a traverser set (expensive, but that's that)\n-                        final Object objectA = mapA.get(key);\n-                        final TraverserSet traverserSet;\n-                        if (null == objectA) {\n-                            traverserSet = new TraverserSet();\n-                            mapA.put(key, (V) traverserSet);\n-                        } else\n-                            traverserSet = (TraverserSet) objectA;\n-                        traverserSet.addAll((TraverserSet) objectB);\n-                    }\n+                Object objectA = mapA.get(key);\n+                final Object objectB = mapB.get(key);\n+                assert null != objectB;\n+                if (null == objectA) {\n+                    objectA = objectB;\n                 } else {\n-                    // OLTP -- do mid-barrier reductions if they exist, else don't. Bulking is also available here because of addStart() prior to barrier.\n-                    final Traverser.Admin traverser = (Traverser.Admin) mapB.get(key);\n-                    Traversal.Admin valueTraversalClone = (Traversal.Admin) mapA.get(key);\n-                    if (null == valueTraversalClone) {\n-                        this.counters.put(key, 0);\n-                        valueTraversalClone = this.valueTraversal.clone();\n-                        mapA.put(key, (V) valueTraversalClone);\n-                    }\n-                    valueTraversalClone.addStart(traverser);\n-                    if (this.counters.compute(key, (k, i) -> ++i) > 1000) {\n-                        this.counters.put(key, 0);\n-                        TraversalHelper.getFirstStepOfAssignableClass(Barrier.class, valueTraversalClone).ifPresent(Barrier::processAllStarts);\n+                    if (objectA instanceof TraverserSet) {\n+                        if (objectB instanceof TraverserSet) {\n+                            final TraverserSet set = (TraverserSet) objectA;\n+                            set.addAll((TraverserSet) objectB);\n+                            if (null != this.reducingBarrierStep && set.size() > 1000) {\n+                                this.valueTraversal.reset();\n+                                this.reducingBarrierStep.addStarts(set.iterator());\n+                                objectA = this.reducingBarrierStep.nextBarrier();\n+                            }\n+                        } else if (objectB instanceof Pair) {\n+                            final TraverserSet set = (TraverserSet) objectA;\n+                            set.addAll((TraverserSet) ((Pair) objectB).getValue0());\n+                            if (set.size() > 1000) {\n+                                this.valueTraversal.reset();\n+                                this.reducingBarrierStep.addStarts(set.iterator());\n+                                this.reducingBarrierStep.addBarrier(((Pair) objectB).getValue1());\n+                                objectA = this.reducingBarrierStep.nextBarrier();\n+                            } else {\n+                                objectA = Pair.with(set, ((Pair) objectB).getValue1());\n+                            }\n+                        } else {\n+                            objectA = Pair.with(objectA, objectB);\n+                        }\n+                    } else if (objectA instanceof Pair) {\n+                        if (objectB instanceof TraverserSet) {\n+                            final TraverserSet set = (TraverserSet) ((Pair) objectA).getValue0();\n+                            set.addAll((TraverserSet) objectB);\n+                            if (null != this.reducingBarrierStep &&set.size() > 1000) {\n+                                this.valueTraversal.reset();\n+                                this.reducingBarrierStep.addStarts(set.iterator());\n+                                this.reducingBarrierStep.addBarrier(((Pair) objectA).getValue1());\n+                                objectA = this.reducingBarrierStep.nextBarrier();\n+                            }\n+                        } else if (objectB instanceof Pair) {\n+                            this.valueTraversal.reset();\n+                            this.reducingBarrierStep.addBarrier(((Pair) objectA).getValue1());\n+                            this.reducingBarrierStep.addBarrier(((Pair) objectB).getValue1());\n+                            this.reducingBarrierStep.addStarts(((TraverserSet) ((Pair) objectA).getValue0()).iterator());\n+                            this.reducingBarrierStep.addStarts(((TraverserSet) ((Pair) objectB).getValue0()).iterator());\n+                            objectA = this.reducingBarrierStep.nextBarrier();\n+                        } else {\n+                            this.valueTraversal.reset();\n+                            this.reducingBarrierStep.addBarrier(((Pair) objectA).getValue1());\n+                            this.reducingBarrierStep.addBarrier(objectB);\n+                            this.reducingBarrierStep.addStarts(((TraverserSet) ((Pair) objectA).getValue0()).iterator());\n+                            objectA = this.reducingBarrierStep.nextBarrier();\n+                        }\n+                    } else {\n+                        if (objectB instanceof TraverserSet) {\n+                            objectA = Pair.with(objectB, objectA);\n+                        } else if (objectB instanceof Pair) {\n+                            this.valueTraversal.reset();\n+                            this.reducingBarrierStep.addBarrier(objectA);\n+                            this.reducingBarrierStep.addBarrier(((Pair) objectB).getValue1());\n+                            this.reducingBarrierStep.addStarts(((TraverserSet) ((Pair) objectB).getValue0()).iterator());\n+                            objectA = this.reducingBarrierStep.nextBarrier();\n+                        } else {\n+                            this.valueTraversal.reset();\n+                            this.reducingBarrierStep.addBarrier(objectA);\n+                            this.reducingBarrierStep.addBarrier(objectB);\n+                            objectA = this.reducingBarrierStep.nextBarrier();\n+                        }\n                     }\n                 }\n+                mapA.put(key, (V) objectA);\n             }\n             return mapA;\n+\n         }\n     }\n \n+\n     ///////////////////////\n \n     public static <S, E> Traversal.Admin<S, E> convertValueTraversal(final Traversal.Admin<S, E> valueTraversal) {\n@@ -263,30 +272,31 @@ public GroupBiOperator() {\n         }\n     }\n \n-    public static <K, V> Map<K, V> doFinalReduction(final Map<K, Object> map, final Traversal.Admin<?, V> valueTraversal, final boolean onGraphComputer) {\n+    public static <K, V> Map<K, V> doFinalReduction(final Map<K, Object> map, final Traversal.Admin<?, V> valueTraversal) {\n         final Map<K, V> reducedMap = new HashMap<>(map.size());\n-        // if not on OLAP, who cares --- don't waste time computing barriers\n-        final boolean hasReducingBarrier = onGraphComputer &&\n-                TraversalHelper.getFirstStepOfAssignableClass(Barrier.class, valueTraversal).isPresent() &&\n-                TraversalHelper.getFirstStepOfAssignableClass(Barrier.class, valueTraversal).get() instanceof ReducingBarrierStep;\n-        final Traversal.Admin<?, ?> postTraversal = (onGraphComputer & !hasReducingBarrier) ? splitOnBarrierStep(valueTraversal.clone()).get(1) : null;\n+        final ReducingBarrierStep reducingBarrierStep = TraversalHelper.getFirstStepOfAssignableClass(ReducingBarrierStep.class, valueTraversal).orElse(null);\n         IteratorUtils.removeOnNext(map.entrySet().iterator()).forEachRemaining(entry -> {\n-            if (onGraphComputer) {\n-                if (hasReducingBarrier) {   // OLAP with reduction (barrier)\n-                    valueTraversal.reset();\n-                    TraversalHelper.getFirstStepOfAssignableClass(Barrier.class, valueTraversal).get().addBarrier(entry.getValue());\n-                    reducedMap.put(entry.getKey(), valueTraversal.next());\n-                } else {                    // OLAP without reduction (traverser set)\n-                    postTraversal.reset();\n-                    postTraversal.addStarts(((TraverserSet) entry.getValue()).iterator());\n-                    reducedMap.put(entry.getKey(), (V) postTraversal.next());\n-                }\n-            } else                          // OLTP is just a traversal\n-                reducedMap.put(entry.getKey(), ((Traversal.Admin<?, V>) entry.getValue()).next());\n+            valueTraversal.reset();\n+            if (null == reducingBarrierStep) {\n+                reducedMap.put(entry.getKey(), entry.getValue() instanceof TraverserSet ?\n+                        ((TraverserSet<V>) entry.getValue()).iterator().next().get() :\n+                        (V) entry.getValue());\n+            } else {\n+                if (entry.getValue() instanceof TraverserSet)\n+                    reducingBarrierStep.addStarts(((TraverserSet) entry.getValue()).iterator());\n+                else if (entry.getValue() instanceof Pair) {\n+                    reducingBarrierStep.addStarts(((TraverserSet) (((Pair) entry.getValue()).getValue0())).iterator());\n+                    reducingBarrierStep.addBarrier((((Pair) entry.getValue()).getValue1()));\n+                } else\n+                    reducingBarrierStep.addBarrier(entry.getValue());\n+                reducedMap.put(entry.getKey(), valueTraversal.next());\n+            }\n         });\n         assert map.isEmpty();\n         map.clear();\n         map.putAll(reducedMap);\n         return (Map<K, V>) map;\n     }\n }\n+\n+", "filename": "gremlin-core/src/main/java/org/apache/tinkerpop/gremlin/process/traversal/step/map/GroupStep.java"}, {"additions": 17, "raw_url": "https://github.com/apache/tinkerpop/raw/c890cebad5231cdab8744878bebb4ea363689a3a/gremlin-core/src/main/java/org/apache/tinkerpop/gremlin/process/traversal/step/sideEffect/GroupSideEffectStep.java", "blob_url": "https://github.com/apache/tinkerpop/blob/c890cebad5231cdab8744878bebb4ea363689a3a/gremlin-core/src/main/java/org/apache/tinkerpop/gremlin/process/traversal/step/sideEffect/GroupSideEffectStep.java", "sha": "4fc4ffad2740fef5d29e30e14587043cd796ec56", "changes": 59, "status": "modified", "deletions": 42, "contents_url": "https://api.github.com/repos/apache/tinkerpop/contents/gremlin-core/src/main/java/org/apache/tinkerpop/gremlin/process/traversal/step/sideEffect/GroupSideEffectStep.java?ref=c890cebad5231cdab8744878bebb4ea363689a3a", "patch": "@@ -21,16 +21,12 @@\n import org.apache.tinkerpop.gremlin.process.traversal.Traversal;\n import org.apache.tinkerpop.gremlin.process.traversal.Traverser;\n import org.apache.tinkerpop.gremlin.process.traversal.dsl.graph.__;\n-import org.apache.tinkerpop.gremlin.process.traversal.step.Barrier;\n import org.apache.tinkerpop.gremlin.process.traversal.step.ByModulating;\n-import org.apache.tinkerpop.gremlin.process.traversal.step.GraphComputing;\n import org.apache.tinkerpop.gremlin.process.traversal.step.SideEffectCapable;\n import org.apache.tinkerpop.gremlin.process.traversal.step.TraversalParent;\n import org.apache.tinkerpop.gremlin.process.traversal.step.map.GroupStep;\n-import org.apache.tinkerpop.gremlin.process.traversal.step.util.ReducingBarrierStep;\n import org.apache.tinkerpop.gremlin.process.traversal.traverser.TraverserRequirement;\n import org.apache.tinkerpop.gremlin.process.traversal.traverser.util.TraverserSet;\n-import org.apache.tinkerpop.gremlin.process.traversal.util.TraversalHelper;\n import org.apache.tinkerpop.gremlin.process.traversal.util.TraversalUtil;\n import org.apache.tinkerpop.gremlin.structure.util.StringFactory;\n import org.apache.tinkerpop.gremlin.util.function.HashMapSupplier;\n@@ -39,27 +35,26 @@\n import java.util.HashMap;\n import java.util.List;\n import java.util.Map;\n-import java.util.Optional;\n import java.util.Set;\n \n /**\n  * @author Marko A. Rodriguez (http://markorodriguez.com)\n  */\n-public final class GroupSideEffectStep<S, K, V> extends SideEffectStep<S> implements SideEffectCapable<Map<K, ?>, Map<K, V>>, TraversalParent, ByModulating, GraphComputing {\n+public final class GroupSideEffectStep<S, K, V> extends SideEffectStep<S> implements SideEffectCapable<Map<K, ?>, Map<K, V>>, TraversalParent, ByModulating {\n \n     private char state = 'k';\n     private Traversal.Admin<S, K> keyTraversal = null;\n+    private Traversal.Admin<S, ?> preTraversal = null;\n     private Traversal.Admin<S, V> valueTraversal = this.integrateChild(__.fold().asAdmin());\n-    private Traversal.Admin<S, ?> preTraversal = null;      // used in OLAP\n-    private ReducingBarrierStep reducingBarrierStep = null; // used in OLAP\n-    private boolean onGraphComputer = false;\n     ///\n     private String sideEffectKey;\n \n     public GroupSideEffectStep(final Traversal.Admin traversal, final String sideEffectKey) {\n         super(traversal);\n         this.sideEffectKey = sideEffectKey;\n-        this.getTraversal().getSideEffects().registerIfAbsent(this.sideEffectKey, HashMapSupplier.instance(), new GroupStep.GroupBiOperator<>(this.valueTraversal, this.onGraphComputer));\n+        this.valueTraversal = this.integrateChild(__.fold().asAdmin());\n+        this.preTraversal = this.integrateChild(GroupStep.splitOnBarrierStep(this.valueTraversal).get(0));\n+        this.getTraversal().getSideEffects().registerIfAbsent(this.sideEffectKey, HashMapSupplier.instance(), new GroupStep.GroupBiOperator<>(this.valueTraversal));\n     }\n \n     @Override\n@@ -69,7 +64,8 @@ public void modulateBy(final Traversal.Admin<?, ?> kvTraversal) {\n             this.state = 'v';\n         } else if ('v' == this.state) {\n             this.valueTraversal = this.integrateChild(GroupStep.convertValueTraversal(kvTraversal));\n-            this.getTraversal().getSideEffects().register(this.sideEffectKey, null, new GroupStep.GroupBiOperator<>(this.valueTraversal, this.onGraphComputer));\n+            this.preTraversal = this.integrateChild(GroupStep.splitOnBarrierStep(this.valueTraversal).get(0));\n+            this.getTraversal().getSideEffects().register(this.sideEffectKey, null, new GroupStep.GroupBiOperator<>(this.valueTraversal));\n             this.state = 'x';\n         } else {\n             throw new IllegalStateException(\"The key and value traversals for group()-step have already been set: \" + this);\n@@ -78,22 +74,14 @@ public void modulateBy(final Traversal.Admin<?, ?> kvTraversal) {\n \n     @Override\n     protected void sideEffect(final Traverser.Admin<S> traverser) {\n-        final Map<K, Object> map = new HashMap<>(1);\n-        final K key = TraversalUtil.applyNullable(traverser, this.keyTraversal);\n-        if (this.onGraphComputer) {\n-            if (null == this.reducingBarrierStep) {\n-                final TraverserSet traverserSet = new TraverserSet<>();\n-                this.preTraversal.reset();\n-                this.preTraversal.addStart(traverser.split());\n-                this.preTraversal.getEndStep().forEachRemaining(traverserSet::add);\n-                map.put(key, traverserSet);\n-            } else {\n-                this.valueTraversal.reset();\n-                this.valueTraversal.addStart(traverser.split());\n-                map.put(key, (V) this.reducingBarrierStep.nextBarrier());\n-            }\n-        } else\n-            map.put(key, traverser.split());\n+        final Map<K, V> map = new HashMap<>(1);\n+        final TraverserSet midTraversers = new TraverserSet<>();\n+        this.preTraversal.reset();\n+        this.preTraversal.addStart(traverser.split());\n+        while (this.preTraversal.hasNext()) {\n+            midTraversers.add(this.preTraversal.getEndStep().next());\n+        }\n+        map.put(TraversalUtil.applyNullable(traverser, this.keyTraversal), (V) midTraversers);\n         this.getTraversal().getSideEffects().add(this.sideEffectKey, map);\n     }\n \n@@ -127,11 +115,7 @@ public String toString() {\n         if (null != this.keyTraversal)\n             clone.keyTraversal = this.keyTraversal.clone();\n         clone.valueTraversal = this.valueTraversal.clone();\n-        if (null != this.preTraversal)\n-            clone.preTraversal = this.preTraversal.clone();\n-        final Optional<Barrier> optional = TraversalHelper.getFirstStepOfAssignableClass(Barrier.class, clone.valueTraversal);\n-        if (optional.isPresent() && optional.get() instanceof ReducingBarrierStep)\n-            clone.reducingBarrierStep = (ReducingBarrierStep) optional.get();\n+        clone.preTraversal = this.integrateChild(GroupStep.splitOnBarrierStep(clone.valueTraversal).get(0));\n         return clone;\n     }\n \n@@ -153,15 +137,6 @@ public int hashCode() {\n \n     @Override\n     public Map<K, V> generateFinalResult(final Map<K, ?> object) {\n-        return GroupStep.doFinalReduction((Map<K, Object>) object, this.valueTraversal, this.onGraphComputer);\n-    }\n-\n-    @Override\n-    public void onGraphComputer() {\n-        this.preTraversal = this.integrateChild(GroupStep.splitOnBarrierStep(this.valueTraversal).get(0));\n-        final Optional<Barrier> optional = TraversalHelper.getFirstStepOfAssignableClass(Barrier.class, this.valueTraversal);\n-        if (optional.isPresent() && optional.get() instanceof ReducingBarrierStep)\n-            this.reducingBarrierStep = (ReducingBarrierStep) optional.get();\n-        this.getTraversal().getSideEffects().register(this.sideEffectKey, null, new GroupStep.GroupBiOperator<>(this.valueTraversal, this.onGraphComputer = true));\n+        return GroupStep.doFinalReduction((Map<K, Object>) object, this.valueTraversal);\n     }\n }", "filename": "gremlin-core/src/main/java/org/apache/tinkerpop/gremlin/process/traversal/step/sideEffect/GroupSideEffectStep.java"}, {"additions": 5, "raw_url": "https://github.com/apache/tinkerpop/raw/c890cebad5231cdab8744878bebb4ea363689a3a/gremlin-groovy-test/src/main/groovy/org/apache/tinkerpop/gremlin/process/traversal/step/sideEffect/GroovyGroupTest.groovy", "blob_url": "https://github.com/apache/tinkerpop/blob/c890cebad5231cdab8744878bebb4ea363689a3a/gremlin-groovy-test/src/main/groovy/org/apache/tinkerpop/gremlin/process/traversal/step/sideEffect/GroovyGroupTest.groovy", "sha": "ddfb94a02c0b937d3617e2f23f07a45220e7605b", "changes": 5, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/tinkerpop/contents/gremlin-groovy-test/src/main/groovy/org/apache/tinkerpop/gremlin/process/traversal/step/sideEffect/GroovyGroupTest.groovy?ref=c890cebad5231cdab8744878bebb4ea363689a3a", "patch": "@@ -108,5 +108,10 @@ public abstract class GroovyGroupTest {\n         public Traversal<Vertex, Map<String, Map<Object, Object>>> get_g_V_repeatXunionXoutXknowsX_groupXaX_byXageX__outXcreatedX_groupXbX_byXnameX_byXcountXX_groupXaX_byXnameXX_timesX2X_capXa_bX() {\n             new ScriptTraversal<>(g, \"gremlin-groovy\", \"g.V.repeat(union(out('knows').group('a').by('age'), out('created').group('b').by('name').by(count())).group('a').by('name')).times(2).cap('a', 'b')\")\n         }\n+\n+        @Override\n+        public Traversal<Vertex, Map<Long, Map<String, List<Vertex>>>> get_g_V_group_byXbothE_countX_byXgroup_byXlabelXX() {\n+            new ScriptTraversal<>(g, \"gremlin-groovy\", \"g.V.group().by(bothE().count).by(group.by(label))\")\n+        }\n     }\n }", "filename": "gremlin-groovy-test/src/main/groovy/org/apache/tinkerpop/gremlin/process/traversal/step/sideEffect/GroovyGroupTest.groovy"}, {"additions": 42, "raw_url": "https://github.com/apache/tinkerpop/raw/c890cebad5231cdab8744878bebb4ea363689a3a/gremlin-test/src/main/java/org/apache/tinkerpop/gremlin/process/traversal/step/sideEffect/GroupTest.java", "blob_url": "https://github.com/apache/tinkerpop/blob/c890cebad5231cdab8744878bebb4ea363689a3a/gremlin-test/src/main/java/org/apache/tinkerpop/gremlin/process/traversal/step/sideEffect/GroupTest.java", "sha": "d4c4d743cd5c1db62b75b787d54d2e14a2213688", "changes": 42, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/tinkerpop/contents/gremlin-test/src/main/java/org/apache/tinkerpop/gremlin/process/traversal/step/sideEffect/GroupTest.java?ref=c890cebad5231cdab8744878bebb4ea363689a3a", "patch": "@@ -84,6 +84,8 @@\n \n     public abstract Traversal<Vertex, Map<String, Map<Object, Object>>> get_g_V_repeatXunionXoutXknowsX_groupXaX_byXageX__outXcreatedX_groupXbX_byXnameX_byXcountXX_groupXaX_byXnameXX_timesX2X_capXa_bX();\n \n+    public abstract Traversal<Vertex, Map<Long, Map<String, List<Vertex>>>> get_g_V_group_byXbothE_countX_byXgroup_byXlabelXX();\n+\n     @Test\n     @LoadGraphWith(MODERN)\n     public void g_V_group_byXnameX() {\n@@ -356,6 +358,41 @@ public void g_V_repeatXunionXoutXknowsX_groupXaX_byXageX__outXcreatedX_groupXbX_\n         checkSideEffects(traversal.asAdmin().getSideEffects(), \"a\", HashMap.class, \"b\", HashMap.class);\n     }\n \n+    @Test\n+    @LoadGraphWith(MODERN)\n+    public void g_V_group_byXbothE_countX_byXgroup_byXlabelXX() {\n+        final Traversal<Vertex, Map<Long, Map<String, List<Vertex>>>> traversal = get_g_V_group_byXbothE_countX_byXgroup_byXlabelXX();\n+        final Map<Long, Map<String, List<Vertex>>> map = traversal.next();\n+        assertFalse(traversal.hasNext());\n+        assertEquals(2, map.size());\n+        assertTrue(map.containsKey(1l));\n+        assertTrue(map.containsKey(3l));\n+        //\n+        Map<String, List<Vertex>> submap = map.get(1l);\n+        assertEquals(2, submap.size());\n+        assertTrue(submap.containsKey(\"software\"));\n+        assertTrue(submap.containsKey(\"person\"));\n+        List<Vertex> list = submap.get(\"software\");\n+        assertEquals(1, list.size());\n+        assertEquals(convertToVertex(graph, \"ripple\"), list.get(0));\n+        list = submap.get(\"person\");\n+        assertEquals(2, list.size());\n+        assertTrue(list.contains(convertToVertex(graph, \"vadas\")));\n+        assertTrue(list.contains(convertToVertex(graph, \"peter\")));\n+        //\n+        submap = map.get(3l);\n+        assertEquals(2, submap.size());\n+        assertTrue(submap.containsKey(\"software\"));\n+        assertTrue(submap.containsKey(\"person\"));\n+        list = submap.get(\"software\");\n+        assertEquals(1, list.size());\n+        assertEquals(convertToVertex(graph, \"lop\"), list.get(0));\n+        list = submap.get(\"person\");\n+        assertEquals(2, list.size());\n+        assertTrue(list.contains(convertToVertex(graph, \"marko\")));\n+        assertTrue(list.contains(convertToVertex(graph, \"josh\")));\n+    }\n+\n     public static class Traversals extends GroupTest {\n \n         @Override\n@@ -437,5 +474,10 @@ public void g_V_repeatXunionXoutXknowsX_groupXaX_byXageX__outXcreatedX_groupXbX_\n         public Traversal<Vertex, Map<String, Map<Object, Object>>> get_g_V_repeatXunionXoutXknowsX_groupXaX_byXageX__outXcreatedX_groupXbX_byXnameX_byXcountXX_groupXaX_byXnameXX_timesX2X_capXa_bX() {\n             return g.V().repeat(__.union(__.out(\"knows\").group(\"a\").by(\"age\"), __.out(\"created\").group(\"b\").by(\"name\").by(count())).group(\"a\").by(\"name\")).times(2).cap(\"a\", \"b\");\n         }\n+\n+        @Override\n+        public Traversal<Vertex, Map<Long, Map<String, List<Vertex>>>> get_g_V_group_byXbothE_countX_byXgroup_byXlabelXX() {\n+            return g.V().<Long, Map<String, List<Vertex>>>group().by(__.bothE().count()).by(__.group().by(T.label));\n+        }\n     }\n }", "filename": "gremlin-test/src/main/java/org/apache/tinkerpop/gremlin/process/traversal/step/sideEffect/GroupTest.java"}, {"additions": 0, "raw_url": "https://github.com/apache/tinkerpop/raw/c890cebad5231cdab8744878bebb4ea363689a3a/spark-gremlin/src/main/java/org/apache/tinkerpop/gremlin/spark/process/computer/traversal/strategy/optimization/interceptor/SparkStarBarrierInterceptor.java", "blob_url": "https://github.com/apache/tinkerpop/blob/c890cebad5231cdab8744878bebb4ea363689a3a/spark-gremlin/src/main/java/org/apache/tinkerpop/gremlin/spark/process/computer/traversal/strategy/optimization/interceptor/SparkStarBarrierInterceptor.java", "sha": "5c6d7299dc79bdf895d6ff167c0cd494c0d2a16e", "changes": 1, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/tinkerpop/contents/spark-gremlin/src/main/java/org/apache/tinkerpop/gremlin/spark/process/computer/traversal/strategy/optimization/interceptor/SparkStarBarrierInterceptor.java?ref=c890cebad5231cdab8744878bebb4ea363689a3a", "patch": "@@ -126,7 +126,6 @@ else if (endStep instanceof FoldStep) {\n                 }\n             }).fold(endStep.getSeedSupplier().get(), biOperator::apply);\n         } else if (endStep instanceof GroupStep) {\n-            ((GroupStep) endStep).onGraphComputer();\n             final GroupStep.GroupBiOperator<Object, Object> biOperator = (GroupStep.GroupBiOperator) endStep.getBiOperator();\n             result = ((GroupStep) endStep).generateFinalResult(nextRDD.\n                     mapPartitions(partitions -> {", "filename": "spark-gremlin/src/main/java/org/apache/tinkerpop/gremlin/spark/process/computer/traversal/strategy/optimization/interceptor/SparkStarBarrierInterceptor.java"}, {"additions": 2, "raw_url": "https://github.com/apache/tinkerpop/raw/c890cebad5231cdab8744878bebb4ea363689a3a/tinkergraph-gremlin/src/test/java/org/apache/tinkerpop/gremlin/tinkergraph/structure/TinkerGraphPlayTest.java", "blob_url": "https://github.com/apache/tinkerpop/blob/c890cebad5231cdab8744878bebb4ea363689a3a/tinkergraph-gremlin/src/test/java/org/apache/tinkerpop/gremlin/tinkergraph/structure/TinkerGraphPlayTest.java", "sha": "555771645ea1cc7bdcc6fd3d4f950e0f0cd26022", "changes": 4, "status": "modified", "deletions": 2, "contents_url": "https://api.github.com/repos/apache/tinkerpop/contents/tinkergraph-gremlin/src/test/java/org/apache/tinkerpop/gremlin/tinkergraph/structure/TinkerGraphPlayTest.java?ref=c890cebad5231cdab8744878bebb4ea363689a3a", "patch": "@@ -86,11 +86,11 @@ public void testPlay8() throws Exception {\n     @Ignore\n     public void benchmarkGroup() throws Exception {\n         Graph graph = TinkerGraph.open();\n-        GraphTraversalSource g = graph.traversal().withComputer();\n+        GraphTraversalSource g = graph.traversal();\n         graph.io(GraphMLIo.build()).readGraph(\"../data/grateful-dead.xml\");\n         /////////\n \n-        g.V().group().by(T.label).by(values(\"name\")).forEachRemaining(x -> logger.info(x.toString()));\n+        //g.V().group().by(T.label).by(values(\"name\")).forEachRemaining(x -> logger.info(x.toString()));\n \n         System.out.println(\"group: \" + g.V().both(\"followedBy\").both(\"followedBy\").group().by(\"songType\").by(count()).next());\n         System.out.println(\"groupV3d0: \" + g.V().both(\"followedBy\").both(\"followedBy\").groupV3d0().by(\"songType\").by().by(__.count(Scope.local)).next());", "filename": "tinkergraph-gremlin/src/test/java/org/apache/tinkerpop/gremlin/tinkergraph/structure/TinkerGraphPlayTest.java"}], "repo": "tinkerpop"}, {"commit": "https://github.com/apache/tinkerpop/commit/11ddbf388727570edcbda6d410753024308f2d66", "parent": "https://github.com/apache/tinkerpop/commit/90364ccb0b51e9ba10534d82c82ae72d696c71da", "message": "added PGP plugin to tinkerpop main pom.xml. Fixed an NPE issue with Spark BSP.", "bug_id": "tinkerpop_11", "file": [{"additions": 2, "raw_url": "https://github.com/apache/tinkerpop/raw/11ddbf388727570edcbda6d410753024308f2d66/hadoop-gremlin/src/main/java/org/apache/tinkerpop/gremlin/hadoop/process/computer/spark/payload/ViewIncomingPayload.java", "blob_url": "https://github.com/apache/tinkerpop/blob/11ddbf388727570edcbda6d410753024308f2d66/hadoop-gremlin/src/main/java/org/apache/tinkerpop/gremlin/hadoop/process/computer/spark/payload/ViewIncomingPayload.java", "sha": "7e149b2aad49c12322de579df6268de8674f6bea", "changes": 4, "status": "modified", "deletions": 2, "contents_url": "https://api.github.com/repos/apache/tinkerpop/contents/hadoop-gremlin/src/main/java/org/apache/tinkerpop/gremlin/hadoop/process/computer/spark/payload/ViewIncomingPayload.java?ref=11ddbf388727570edcbda6d410753024308f2d66", "patch": "@@ -71,8 +71,8 @@ private void mergeMessage(final M message, final MessageCombiner<M> messageCombi\n     }\n \n     private void mergeViewIncomingPayload(final ViewIncomingPayload<M> viewIncomingPayload, final MessageCombiner<M> messageCombiner) {\n-        if (this.view == null && !viewIncomingPayload.getView().isEmpty())\n-            this.view = viewIncomingPayload.getView();\n+        if (this.view == null)\n+            this.view = viewIncomingPayload.view;\n         else\n             this.view.addAll(viewIncomingPayload.getView());\n ", "filename": "hadoop-gremlin/src/main/java/org/apache/tinkerpop/gremlin/hadoop/process/computer/spark/payload/ViewIncomingPayload.java"}, {"additions": 17, "raw_url": "https://github.com/apache/tinkerpop/raw/11ddbf388727570edcbda6d410753024308f2d66/pom.xml", "blob_url": "https://github.com/apache/tinkerpop/blob/11ddbf388727570edcbda6d410753024308f2d66/pom.xml", "sha": "6e9a6f6bf0e778d97de773a8493a4270de7eae4d", "changes": 17, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/tinkerpop/contents/pom.xml?ref=11ddbf388727570edcbda6d410753024308f2d66", "patch": "@@ -123,6 +123,23 @@ limitations under the License.\n             </extension>\n         </extensions>\n         <plugins>\n+            <plugin>\n+                <groupId>org.apache.maven.plugins</groupId>\n+                <artifactId>maven-gpg-plugin</artifactId>\n+                <version>1.5</version>\n+                <executions>\n+                    <execution>\n+                        <id>sign-artifacts</id>\n+                        <phase>verify</phase>\n+                        <goals>\n+                            <goal>sign</goal>\n+                        </goals>\n+                    </execution>\n+                </executions>\n+                <configuration>\n+                    <skip>true</skip>\n+                </configuration>\n+            </plugin>\n             <plugin>\n                 <artifactId>maven-enforcer-plugin</artifactId>\n                 <version>1.3.1</version>", "filename": "pom.xml"}], "repo": "tinkerpop"}, {"commit": "https://github.com/apache/tinkerpop/commit/5cef4dd2376febcb32e1108f67e02261d07a4d68", "parent": "https://github.com/apache/tinkerpop/commit/e2fcd92979d3e209872f0f7f26a6ae99d1144a5b", "message": "Fixed an NPE that was introduced yesterday in GiraphGraphComputer refactoring. Fixed #370.", "bug_id": "tinkerpop_12", "file": [{"additions": 1, "raw_url": "https://github.com/apache/tinkerpop/raw/5cef4dd2376febcb32e1108f67e02261d07a4d68/gremlin-core/src/main/java/com/tinkerpop/gremlin/process/computer/MapReduce.java", "blob_url": "https://github.com/apache/tinkerpop/blob/5cef4dd2376febcb32e1108f67e02261d07a4d68/gremlin-core/src/main/java/com/tinkerpop/gremlin/process/computer/MapReduce.java", "sha": "0ab28d8a2de71b696110e973f1bb0085eda15125", "changes": 2, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/tinkerpop/contents/gremlin-core/src/main/java/com/tinkerpop/gremlin/process/computer/MapReduce.java?ref=5cef4dd2376febcb32e1108f67e02261d07a4d68", "patch": "@@ -142,7 +142,7 @@ public default void reduce(final MK key, final Iterator<MV> values, final Reduce\n      * @param memory    the memory of the {@link GraphComputer}\n      * @param keyValues the key/value pairs emitted from reduce() (or map() in a map only job).\n      */\n-    public default void addResultToMemory(final Memory memory, final Iterator<Pair<RK, RV>> keyValues) {\n+    public default void addResultToMemory(final Memory.Admin memory, final Iterator<Pair<RK, RV>> keyValues) {\n         memory.set(this.getMemoryKey(), this.generateFinalResult(keyValues));\n     }\n ", "filename": "gremlin-core/src/main/java/com/tinkerpop/gremlin/process/computer/MapReduce.java"}, {"additions": 5, "raw_url": "https://github.com/apache/tinkerpop/raw/5cef4dd2376febcb32e1108f67e02261d07a4d68/gremlin-core/src/main/java/com/tinkerpop/gremlin/process/computer/Memory.java", "blob_url": "https://github.com/apache/tinkerpop/blob/5cef4dd2376febcb32e1108f67e02261d07a4d68/gremlin-core/src/main/java/com/tinkerpop/gremlin/process/computer/Memory.java", "sha": "051870e59858802d9d879e29181cf45068a6e188", "changes": 6, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/tinkerpop/contents/gremlin-core/src/main/java/com/tinkerpop/gremlin/process/computer/Memory.java?ref=5cef4dd2376febcb32e1108f67e02261d07a4d68", "patch": "@@ -122,7 +122,11 @@ public default boolean isInitialIteration() {\n      */\n     public interface Admin extends Memory {\n \n-        public void incrIteration();\n+        public default void incrIteration() {\n+            this.setIteration(this.getIteration() + 1);\n+        }\n+\n+        public void setIteration(final int iteration);\n \n         public void setRuntime(final long runtime);\n ", "filename": "gremlin-core/src/main/java/com/tinkerpop/gremlin/process/computer/Memory.java"}, {"additions": 5, "raw_url": "https://github.com/apache/tinkerpop/raw/5cef4dd2376febcb32e1108f67e02261d07a4d68/gremlin-core/src/main/java/com/tinkerpop/gremlin/process/computer/util/ImmutableMemory.java", "blob_url": "https://github.com/apache/tinkerpop/blob/5cef4dd2376febcb32e1108f67e02261d07a4d68/gremlin-core/src/main/java/com/tinkerpop/gremlin/process/computer/util/ImmutableMemory.java", "sha": "d66f1311933d55643edee0f0b88f15a3d69398a5", "changes": 5, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/tinkerpop/contents/gremlin-core/src/main/java/com/tinkerpop/gremlin/process/computer/util/ImmutableMemory.java?ref=5cef4dd2376febcb32e1108f67e02261d07a4d68", "patch": "@@ -61,6 +61,11 @@ public void incrIteration() {\n         throw Memory.Exceptions.memoryIsCurrentlyImmutable();\n     }\n \n+    @Override\n+    public void setIteration(final int iteration) {\n+        throw Memory.Exceptions.memoryIsCurrentlyImmutable();\n+    }\n+\n     @Override\n     public void setRuntime(final long runtime) {\n         throw Memory.Exceptions.memoryIsCurrentlyImmutable();", "filename": "gremlin-core/src/main/java/com/tinkerpop/gremlin/process/computer/util/ImmutableMemory.java"}, {"additions": 16, "raw_url": "https://github.com/apache/tinkerpop/raw/5cef4dd2376febcb32e1108f67e02261d07a4d68/gremlin-core/src/main/java/com/tinkerpop/gremlin/process/computer/util/MapMemory.java", "blob_url": "https://github.com/apache/tinkerpop/blob/5cef4dd2376febcb32e1108f67e02261d07a4d68/gremlin-core/src/main/java/com/tinkerpop/gremlin/process/computer/util/MapMemory.java", "sha": "ba7206222f45a257c683911a3b8d55f26c365426", "changes": 20, "status": "modified", "deletions": 4, "contents_url": "https://api.github.com/repos/apache/tinkerpop/contents/gremlin-core/src/main/java/com/tinkerpop/gremlin/process/computer/util/MapMemory.java?ref=5cef4dd2376febcb32e1108f67e02261d07a4d68", "patch": "@@ -1,26 +1,33 @@\n package com.tinkerpop.gremlin.process.computer.util;\n \n import com.tinkerpop.gremlin.process.computer.GraphComputer;\n+import com.tinkerpop.gremlin.process.computer.MapReduce;\n import com.tinkerpop.gremlin.process.computer.Memory;\n import com.tinkerpop.gremlin.process.computer.VertexProgram;\n import com.tinkerpop.gremlin.structure.util.StringFactory;\n \n+import java.io.Serializable;\n import java.util.HashMap;\n+import java.util.HashSet;\n import java.util.Map;\n import java.util.Set;\n \n /**\n  * @author Marko A. Rodriguez (http://markorodriguez.com)\n  */\n-public final class MapMemory implements Memory.Admin {\n+public final class MapMemory implements Memory.Admin, Serializable {\n \n     private long runtime = 0l;\n     private int iteration = -1;\n     private final Map<String, Object> memoryMap = new HashMap<>();\n-    private final Set<String> memoryComputeKeys;\n+    private final Set<String> memoryComputeKeys = new HashSet<>();\n \n-    public MapMemory(final VertexProgram<?> program) {\n-        this.memoryComputeKeys = program.getMemoryComputeKeys();\n+    public void addVertexProgramMemoryComputeKeys(final VertexProgram<?> vertexProgram) {\n+        this.memoryComputeKeys.addAll(vertexProgram.getMemoryComputeKeys());\n+    }\n+\n+    public void addMapReduceMemoryKey(final MapReduce mapReduce) {\n+        this.memoryComputeKeys.add(mapReduce.getMemoryKey());\n     }\n \n     @Override\n@@ -101,6 +108,11 @@ public void incrIteration() {\n         this.iteration = this.iteration + 1;\n     }\n \n+    @Override\n+    public void setIteration(final int iteration) {\n+        this.iteration = iteration;\n+    }\n+\n     @Override\n     public void setRuntime(long runtime) {\n         this.runtime = runtime;", "filename": "gremlin-core/src/main/java/com/tinkerpop/gremlin/process/computer/util/MapMemory.java"}, {"additions": 3, "raw_url": "https://github.com/apache/tinkerpop/raw/5cef4dd2376febcb32e1108f67e02261d07a4d68/gremlin-core/src/main/java/com/tinkerpop/gremlin/structure/io/kryo/GremlinKryo.java", "blob_url": "https://github.com/apache/tinkerpop/blob/5cef4dd2376febcb32e1108f67e02261d07a4d68/gremlin-core/src/main/java/com/tinkerpop/gremlin/structure/io/kryo/GremlinKryo.java", "sha": "6d40264271d801b380ff4cf2c1fbffb17bbd4171", "changes": 4, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/tinkerpop/contents/gremlin-core/src/main/java/com/tinkerpop/gremlin/structure/io/kryo/GremlinKryo.java?ref=5cef4dd2376febcb32e1108f67e02261d07a4d68", "patch": "@@ -8,6 +8,7 @@\n import com.esotericsoftware.kryo.util.DefaultStreamFactory;\n import com.esotericsoftware.kryo.util.MapReferenceResolver;\n import com.tinkerpop.gremlin.process.Path;\n+import com.tinkerpop.gremlin.process.computer.util.MapMemory;\n import com.tinkerpop.gremlin.process.traversers.PathTraverser;\n import com.tinkerpop.gremlin.process.traversers.SimpleTraverser;\n import com.tinkerpop.gremlin.process.T;\n@@ -257,7 +258,7 @@ Builder getBuilder() {\n             add(Triplet.<Class, Function<Kryo, Serializer>, Integer>with(TreeMap.class, null, 45));\n             add(Triplet.<Class, Function<Kryo, Serializer>, Integer>with(TreeSet.class, null, 50));\n             add(Triplet.<Class, Function<Kryo, Serializer>, Integer>with(UUID.class, kryo -> new UUIDSerializer(), 17));\n-            add(Triplet.<Class, Function<Kryo, Serializer>, Integer>with(URI.class, kryo -> new URISerializer(), 72));     // ***LAST ID***\n+            add(Triplet.<Class, Function<Kryo, Serializer>, Integer>with(URI.class, kryo -> new URISerializer(), 72));\n             add(Triplet.<Class, Function<Kryo, Serializer>, Integer>with(VertexTerminator.class, null, 13));\n \n             add(Triplet.<Class, Function<Kryo, Serializer>, Integer>with(Edge.class, kryo -> new ElementSerializer.EdgeSerializer(), 65));\n@@ -277,6 +278,7 @@ Builder getBuilder() {\n             add(Triplet.<Class, Function<Kryo, Serializer>, Integer>with(StepTimer.class, null, 69));\n             add(Triplet.<Class, Function<Kryo, Serializer>, Integer>with(TraversalMetrics.class, null, 70));\n             add(Triplet.<Class, Function<Kryo, Serializer>, Integer>with(LinkedHashSet.class, null, 71));\n+            add(Triplet.<Class, Function<Kryo, Serializer>, Integer>with(MapMemory.class, null, 73));  // ***LAST ID***\n         }};\n \n         private static final byte major = 1;", "filename": "gremlin-core/src/main/java/com/tinkerpop/gremlin/structure/io/kryo/GremlinKryo.java"}, {"additions": 1, "raw_url": "https://github.com/apache/tinkerpop/raw/5cef4dd2376febcb32e1108f67e02261d07a4d68/hadoop-gremlin/src/main/java/com/tinkerpop/gremlin/hadoop/Constants.java", "blob_url": "https://github.com/apache/tinkerpop/blob/5cef4dd2376febcb32e1108f67e02261d07a4d68/hadoop-gremlin/src/main/java/com/tinkerpop/gremlin/hadoop/Constants.java", "sha": "f11b653afe43d3454bbbc50eb7314e049e477368", "changes": 2, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/tinkerpop/contents/hadoop-gremlin/src/main/java/com/tinkerpop/gremlin/hadoop/Constants.java?ref=5cef4dd2376febcb32e1108f67e02261d07a4d68", "patch": "@@ -27,5 +27,5 @@\n     public static final String GREMLIN_HADOOP_MEMORY_KEYS = \"gremlin.hadoop.memoryKeys\";\n     public static final String GREMLIN_HADOOP_MAP_REDUCE_CLASS = \"gremlin.hadoop.mapReduceClass\";\n     public static final String GREMLIN_HADOOP_HALT = \"gremlin.hadoop.halt\";\n-    public static final String MEMORY_MAP = Graph.Key.hide(\"gremlin.hadoop.memoryMap\");\n+    public static final String MAP_MEMORY = Graph.Key.hide(\"gremlin.hadoop.mapMemory\");\n }", "filename": "hadoop-gremlin/src/main/java/com/tinkerpop/gremlin/hadoop/Constants.java"}, {"additions": 5, "raw_url": "https://github.com/apache/tinkerpop/raw/5cef4dd2376febcb32e1108f67e02261d07a4d68/hadoop-gremlin/src/main/java/com/tinkerpop/gremlin/hadoop/process/computer/giraph/GiraphComputeVertex.java", "blob_url": "https://github.com/apache/tinkerpop/blob/5cef4dd2376febcb32e1108f67e02261d07a4d68/hadoop-gremlin/src/main/java/com/tinkerpop/gremlin/hadoop/process/computer/giraph/GiraphComputeVertex.java", "sha": "cfc39ed24a19ea7e345c309b5b8692d69b037c75", "changes": 10, "status": "modified", "deletions": 5, "contents_url": "https://api.github.com/repos/apache/tinkerpop/contents/hadoop-gremlin/src/main/java/com/tinkerpop/gremlin/hadoop/process/computer/giraph/GiraphComputeVertex.java?ref=5cef4dd2376febcb32e1108f67e02261d07a4d68", "patch": "@@ -3,6 +3,7 @@\n import com.tinkerpop.gremlin.hadoop.Constants;\n import com.tinkerpop.gremlin.hadoop.structure.io.ObjectWritable;\n import com.tinkerpop.gremlin.process.computer.VertexProgram;\n+import com.tinkerpop.gremlin.process.computer.util.MapMemory;\n import com.tinkerpop.gremlin.structure.Direction;\n import com.tinkerpop.gremlin.structure.Edge;\n import com.tinkerpop.gremlin.structure.Graph;\n@@ -22,8 +23,6 @@\n import java.io.ByteArrayOutputStream;\n import java.io.IOException;\n import java.io.InputStream;\n-import java.util.HashMap;\n-import java.util.Map;\n import java.util.function.Function;\n \n /**\n@@ -62,9 +61,10 @@ public void compute(final Iterable<ObjectWritable> messages) {\n         if (!(Boolean) ((RuleWritable) this.getAggregatedValue(Constants.GREMLIN_HADOOP_HALT)).getObject())\n             vertexProgram.execute(this.tinkerVertex, messenger, memory);  // TODO provide a wrapper around TinkerVertex for Edge and non-ComputeKeys manipulation\n         else if (this.getConf().getBoolean(Constants.GREMLIN_HADOOP_DERIVE_MEMORY, false)) {\n-            final Map<String, Object> memoryMap = new HashMap<>(memory.asMap());\n-            memoryMap.put(Constants.SYSTEM_ITERATION, memory.getIteration() - 1);\n-            this.tinkerVertex.singleProperty(Constants.MEMORY_MAP, memoryMap);\n+            final MapMemory mapMemory = new MapMemory();\n+            memory.asMap().forEach(mapMemory::set);\n+            mapMemory.setIteration(memory.getIteration() - 1);\n+            this.tinkerVertex.singleProperty(Constants.MAP_MEMORY, mapMemory);\n         }\n     }\n ", "filename": "hadoop-gremlin/src/main/java/com/tinkerpop/gremlin/hadoop/process/computer/giraph/GiraphComputeVertex.java"}, {"additions": 3, "raw_url": "https://github.com/apache/tinkerpop/raw/5cef4dd2376febcb32e1108f67e02261d07a4d68/hadoop-gremlin/src/main/java/com/tinkerpop/gremlin/hadoop/process/computer/giraph/GiraphGraphComputer.java", "blob_url": "https://github.com/apache/tinkerpop/blob/5cef4dd2376febcb32e1108f67e02261d07a4d68/hadoop-gremlin/src/main/java/com/tinkerpop/gremlin/hadoop/process/computer/giraph/GiraphGraphComputer.java", "sha": "3c08a5c0511f3fe76bdb35bdb95ae9098e0c32c6", "changes": 6, "status": "modified", "deletions": 3, "contents_url": "https://api.github.com/repos/apache/tinkerpop/contents/hadoop-gremlin/src/main/java/com/tinkerpop/gremlin/hadoop/process/computer/giraph/GiraphGraphComputer.java?ref=5cef4dd2376febcb32e1108f67e02261d07a4d68", "patch": "@@ -54,7 +54,7 @@\n \n     private final Set<MapReduce> mapReduces = new HashSet<>();\n     private VertexProgram vertexProgram;\n-    private MapMemory memory;\n+    private MapMemory memory = new MapMemory();\n \n     public GiraphGraphComputer(final HadoopGraph hadoopGraph) {\n         this.hadoopGraph = hadoopGraph;\n@@ -80,7 +80,7 @@ public GraphComputer isolation(final Isolation isolation) {\n     @Override\n     public GraphComputer program(final VertexProgram vertexProgram) {\n         this.vertexProgram = vertexProgram;\n-        this.memory = new MapMemory(this.vertexProgram);\n+        this.memory.addVertexProgramMemoryComputeKeys(this.vertexProgram);\n         final BaseConfiguration apacheConfiguration = new BaseConfiguration();\n         vertexProgram.storeState(apacheConfiguration);\n         ConfUtil.mergeApacheIntoHadoopConfiguration(apacheConfiguration, this.giraphConfiguration);\n@@ -156,10 +156,10 @@ public int run(final String[] args) {\n             }\n             // do map reduce jobs\n             for (final MapReduce mapReduce : this.mapReduces) {\n+                this.memory.addMapReduceMemoryKey(mapReduce);\n                 MapReduceHelper.executeMapReduceJob(mapReduce, this.memory, this.giraphConfiguration);\n             }\n         } catch (final Exception e) {\n-            // e.printStackTrace();\n             throw new IllegalStateException(e.getMessage(), e);\n         }\n         return 0;", "filename": "hadoop-gremlin/src/main/java/com/tinkerpop/gremlin/hadoop/process/computer/giraph/GiraphGraphComputer.java"}, {"additions": 1, "raw_url": "https://github.com/apache/tinkerpop/raw/5cef4dd2376febcb32e1108f67e02261d07a4d68/hadoop-gremlin/src/main/java/com/tinkerpop/gremlin/hadoop/process/computer/util/MapReduceHelper.java", "blob_url": "https://github.com/apache/tinkerpop/blob/5cef4dd2376febcb32e1108f67e02261d07a4d68/hadoop-gremlin/src/main/java/com/tinkerpop/gremlin/hadoop/process/computer/util/MapReduceHelper.java", "sha": "8be124919edfde0c81ec3b6beeecc4ad37eaa458", "changes": 2, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/tinkerpop/contents/hadoop-gremlin/src/main/java/com/tinkerpop/gremlin/hadoop/process/computer/util/MapReduceHelper.java?ref=5cef4dd2376febcb32e1108f67e02261d07a4d68", "patch": "@@ -40,7 +40,7 @@\n             + \" is not \" + SequenceFileOutputFormat.class.getCanonicalName()\n             + \" and thus, graph computer memory can not be converted to Java objects\";\n \n-    public static void executeMapReduceJob(final MapReduce mapReduce, final Memory memory, final Configuration configuration) throws IOException, ClassNotFoundException, InterruptedException {\n+    public static void executeMapReduceJob(final MapReduce mapReduce, final Memory.Admin memory, final Configuration configuration) throws IOException, ClassNotFoundException, InterruptedException {\n         final Configuration newConfiguration = new Configuration(configuration);\n         final BaseConfiguration apacheConfiguration = new BaseConfiguration();\n         mapReduce.storeState(apacheConfiguration);", "filename": "hadoop-gremlin/src/main/java/com/tinkerpop/gremlin/hadoop/process/computer/util/MapReduceHelper.java"}, {"additions": 16, "raw_url": "https://github.com/apache/tinkerpop/raw/5cef4dd2376febcb32e1108f67e02261d07a4d68/hadoop-gremlin/src/main/java/com/tinkerpop/gremlin/hadoop/process/computer/util/MemoryMapReduce.java", "blob_url": "https://github.com/apache/tinkerpop/blob/5cef4dd2376febcb32e1108f67e02261d07a4d68/hadoop-gremlin/src/main/java/com/tinkerpop/gremlin/hadoop/process/computer/util/MemoryMapReduce.java", "sha": "1765d239041bfcba466c8386336f6dd8ab5bf388", "changes": 39, "status": "modified", "deletions": 23, "contents_url": "https://api.github.com/repos/apache/tinkerpop/contents/hadoop-gremlin/src/main/java/com/tinkerpop/gremlin/hadoop/process/computer/util/MemoryMapReduce.java?ref=5cef4dd2376febcb32e1108f67e02261d07a4d68", "patch": "@@ -1,15 +1,17 @@\n package com.tinkerpop.gremlin.hadoop.process.computer.util;\n \n import com.tinkerpop.gremlin.hadoop.Constants;\n+import com.tinkerpop.gremlin.process.Step;\n import com.tinkerpop.gremlin.process.computer.MapReduce;\n import com.tinkerpop.gremlin.process.computer.Memory;\n import com.tinkerpop.gremlin.process.computer.util.GraphComputerHelper;\n+import com.tinkerpop.gremlin.process.computer.util.MapMemory;\n import com.tinkerpop.gremlin.structure.Vertex;\n import org.apache.commons.configuration.Configuration;\n+import org.apache.hadoop.io.NullWritable;\n import org.javatuples.Pair;\n \n import java.util.ArrayList;\n-import java.util.Collections;\n import java.util.HashMap;\n import java.util.HashSet;\n import java.util.Iterator;\n@@ -20,7 +22,7 @@\n /**\n  * @author Marko A. Rodriguez (http://markorodriguez.com)\n  */\n-public class MemoryMapReduce implements MapReduce<String, Object, String, Object, Map<String, Object>> {\n+public class MemoryMapReduce implements MapReduce<MapReduce.NullObject, MapMemory, MapReduce.NullObject, MapMemory, MapMemory> {\n \n     public Set<String> memoryKeys = new HashSet<>();\n \n@@ -53,41 +55,32 @@ public boolean doStage(final Stage stage) {\n     }\n \n     @Override\n-    public void map(final Vertex vertex, final MapEmitter<String, Object> emitter) {\n-        final Map<String, Object> memoryMap = vertex.<Map<String, Object>>property(Constants.MEMORY_MAP).orElse(Collections.emptyMap());\n-        for (final String memoryKey : this.memoryKeys) {\n-            if (memoryMap.containsKey(memoryKey)) {\n-                emitter.emit(memoryKey, memoryMap.get(memoryKey));\n-            }\n-        }\n+    public void map(final Vertex vertex, final MapEmitter<NullObject, MapMemory> emitter) {\n+        final MapMemory mapMemory = vertex.<MapMemory>property(Constants.MAP_MEMORY).orElse(new MapMemory());\n+        emitter.emit(mapMemory);\n     }\n \n     @Override\n-    public void combine(final String key, final Iterator<Object> values, final ReduceEmitter<String, Object> emitter) {\n+    public void combine(final NullObject key, final Iterator<MapMemory> values, final ReduceEmitter<NullObject, MapMemory> emitter) {\n         this.reduce(key, values, emitter);\n     }\n \n     @Override\n-    public void reduce(final String key, final Iterator<Object> values, final ReduceEmitter<String, Object> emitter) {\n+    public void reduce(final NullObject key, final Iterator<MapMemory> values, final ReduceEmitter<NullObject, MapMemory> emitter) {\n         emitter.emit(key, values.next());\n     }\n \n     @Override\n-    public Map<String, Object> generateFinalResult(final Iterator<Pair<String, Object>> keyValues) {\n-        final Map<String, Object> map = new HashMap<>();\n-        while (keyValues.hasNext()) {\n-            final Pair<String, Object> pair = keyValues.next();\n-            map.put(pair.getValue0(), pair.getValue1());\n-        }\n-        return map;\n+    public MapMemory generateFinalResult(final Iterator<Pair<NullObject, MapMemory>> keyValues) {\n+        return keyValues.next().getValue1();\n     }\n \n     @Override\n-    public void addResultToMemory(final Memory memory, final Iterator<Pair<String, Object>> keyValues) {\n-        while (keyValues.hasNext()) {\n-            final Pair<String, Object> keyValue = keyValues.next();\n-            memory.set(keyValue.getValue0(), keyValue.getValue1());\n-        }\n+    public void addResultToMemory(final Memory.Admin memory, final Iterator<Pair<NullObject, MapMemory>> keyValues) {\n+        final MapMemory temp = keyValues.next().getValue1();\n+        temp.asMap().forEach(memory::set);\n+        memory.setIteration(temp.getIteration());\n+        memory.setRuntime(temp.getRuntime());\n     }\n \n     @Override", "filename": "hadoop-gremlin/src/main/java/com/tinkerpop/gremlin/hadoop/process/computer/util/MemoryMapReduce.java"}, {"additions": 4, "raw_url": "https://github.com/apache/tinkerpop/raw/5cef4dd2376febcb32e1108f67e02261d07a4d68/hadoop-gremlin/src/main/java/com/tinkerpop/gremlin/hadoop/structure/HadoopGraph.java", "blob_url": "https://github.com/apache/tinkerpop/blob/5cef4dd2376febcb32e1108f67e02261d07a4d68/hadoop-gremlin/src/main/java/com/tinkerpop/gremlin/hadoop/structure/HadoopGraph.java", "sha": "24d0850f2e6b3a9449f383c40c145edfbb4fbdb2", "changes": 4, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/tinkerpop/contents/hadoop-gremlin/src/main/java/com/tinkerpop/gremlin/hadoop/structure/HadoopGraph.java?ref=5cef4dd2376febcb32e1108f67e02261d07a4d68", "patch": "@@ -78,6 +78,10 @@\n         test = \"com.tinkerpop.gremlin.process.computer.GroovyGraphComputerTest$ComputerTest\",\n         method = \"shouldNotAllowSettingUndeclaredMemoryKeys\",\n         reason = \"Hadoop does a hard kill on failure and stops threads which stops test cases. Exception handling semantics are correct though.\")\n+@Graph.OptOut(\n+        test = \"com.tinkerpop.gremlin.process.computer.GroovyGraphComputerTest$ComputerTest\",\n+        method = \"shouldHaveConsistentMemoryVertexPropertiesAndExceptions\",\n+        reason = \"Hadoop does a hard kill on failure and stops threads which stops test cases. Exception handling semantics are correct though.\")\n public class HadoopGraph implements Graph {\n \n     public static final Logger LOGGER = LoggerFactory.getLogger(HadoopGraph.class);", "filename": "hadoop-gremlin/src/main/java/com/tinkerpop/gremlin/hadoop/structure/HadoopGraph.java"}, {"additions": 0, "raw_url": "https://github.com/apache/tinkerpop/raw/e2fcd92979d3e209872f0f7f26a6ae99d1144a5b/hadoop-gremlin/src/test/java/TODO.txt", "blob_url": "https://github.com/apache/tinkerpop/blob/e2fcd92979d3e209872f0f7f26a6ae99d1144a5b/hadoop-gremlin/src/test/java/TODO.txt", "sha": "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391", "changes": 0, "status": "removed", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/tinkerpop/contents/hadoop-gremlin/src/test/java/TODO.txt?ref=e2fcd92979d3e209872f0f7f26a6ae99d1144a5b", "filename": "hadoop-gremlin/src/test/java/TODO.txt"}, {"additions": 5, "raw_url": "https://github.com/apache/tinkerpop/raw/5cef4dd2376febcb32e1108f67e02261d07a4d68/tinkergraph-gremlin/src/main/java/com/tinkerpop/gremlin/tinkergraph/process/computer/TinkerMemory.java", "blob_url": "https://github.com/apache/tinkerpop/blob/5cef4dd2376febcb32e1108f67e02261d07a4d68/tinkergraph-gremlin/src/main/java/com/tinkerpop/gremlin/tinkergraph/process/computer/TinkerMemory.java", "sha": "5c0d307e0ac1bf8b42eb6baf773ab8196b0290d4", "changes": 5, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/tinkerpop/contents/tinkergraph-gremlin/src/main/java/com/tinkerpop/gremlin/tinkergraph/process/computer/TinkerMemory.java?ref=5cef4dd2376febcb32e1108f67e02261d07a4d68", "patch": "@@ -50,6 +50,11 @@ public void incrIteration() {\n         this.iteration.getAndIncrement();\n     }\n \n+    @Override\n+    public void setIteration(final int iteration) {\n+        this.iteration.set(iteration);\n+    }\n+\n     @Override\n     public int getIteration() {\n         return this.iteration.get();", "filename": "tinkergraph-gremlin/src/main/java/com/tinkerpop/gremlin/tinkergraph/process/computer/TinkerMemory.java"}], "repo": "tinkerpop"}, {"commit": "https://github.com/apache/tinkerpop/commit/e0f2c8fbcec8958aad285c09111c3e6fd33c28d5", "parent": "https://github.com/apache/tinkerpop/commit/c6de78a2cbb4a1618b4b43bcd71e9b2376f9a46d", "message": "no more clearGremlins needed in Gremlin OLAP -- was a bug in memory system due to NPE.", "bug_id": "tinkerpop_13", "file": [{"additions": 2, "raw_url": "https://github.com/apache/tinkerpop/raw/e0f2c8fbcec8958aad285c09111c3e6fd33c28d5/blueprints/blueprints-tinkergraph/src/main/java/com/tinkerpop/blueprints/tinkergraph/TinkerGraphComputer.java", "blob_url": "https://github.com/apache/tinkerpop/blob/e0f2c8fbcec8958aad285c09111c3e6fd33c28d5/blueprints/blueprints-tinkergraph/src/main/java/com/tinkerpop/blueprints/tinkergraph/TinkerGraphComputer.java", "sha": "e8d3448c1ba9be388beb873d3647df8bf4587840", "changes": 5, "status": "modified", "deletions": 3, "contents_url": "https://api.github.com/repos/apache/tinkerpop/contents/blueprints/blueprints-tinkergraph/src/main/java/com/tinkerpop/blueprints/tinkergraph/TinkerGraphComputer.java?ref=e0f2c8fbcec8958aad285c09111c3e6fd33c28d5", "patch": "@@ -46,8 +46,7 @@ public GraphComputer program(final VertexProgram program) {\n             this.vertexMemory.setComputeKeys(this.vertexProgram.getComputeKeys());\n             this.vertexProgram.setup(this.graphMemory);\n \n-            boolean done = false;\n-            while (!done) {\n+            while (true) {\n                 StreamFactory.parallelStream(this.graph.query().vertices()).forEach(vertex ->\n                         this.vertexProgram.execute(((TinkerVertex) vertex).createClone(State.CENTRIC,\n                                 vertex.getId().toString(),\n@@ -56,7 +55,7 @@ public GraphComputer program(final VertexProgram program) {\n                 this.vertexMemory.completeIteration();\n                 this.messenger.completeIteration();\n                 this.graphMemory.incrIteration();\n-                done = this.vertexProgram.terminate(this.graphMemory);\n+                if (this.vertexProgram.terminate(this.graphMemory)) break;\n             }\n \n             this.graphMemory.setRuntime(System.currentTimeMillis() - time);", "filename": "blueprints/blueprints-tinkergraph/src/main/java/com/tinkerpop/blueprints/tinkergraph/TinkerGraphComputer.java"}, {"additions": 1, "raw_url": "https://github.com/apache/tinkerpop/raw/e0f2c8fbcec8958aad285c09111c3e6fd33c28d5/gremlin/gremlin-java/src/main/java/com/tinkerpop/gremlin/computer/gremlin/GremlinVertexProgram.java", "blob_url": "https://github.com/apache/tinkerpop/blob/e0f2c8fbcec8958aad285c09111c3e6fd33c28d5/gremlin/gremlin-java/src/main/java/com/tinkerpop/gremlin/computer/gremlin/GremlinVertexProgram.java", "sha": "bbb2d729b66507bf3462aec5e6a74124b563fa7d", "changes": 20, "status": "modified", "deletions": 19, "contents_url": "https://api.github.com/repos/apache/tinkerpop/contents/gremlin/gremlin-java/src/main/java/com/tinkerpop/gremlin/computer/gremlin/GremlinVertexProgram.java?ref=e0f2c8fbcec8958aad285c09111c3e6fd33c28d5", "patch": "@@ -18,7 +18,6 @@\n import java.util.Arrays;\n import java.util.Iterator;\n import java.util.Map;\n-import java.util.concurrent.atomic.AtomicLong;\n import java.util.function.Supplier;\n \n /**\n@@ -42,16 +41,13 @@ public void setup(final GraphMemory graphMemory) {\n     }\n \n     public void execute(final Vertex vertex, final Messenger<GremlinMessage> messenger, final GraphMemory graphMemory) {\n-        clearGremlins(vertex);\n-        //final AtomicLong currentCounts = new AtomicLong(0l);\n         if (graphMemory.isInitialIteration()) {\n             messenger.sendMessage(vertex, MessageType.Global.of(GREMLIN_MESSAGE, vertex), GremlinMessage.of(vertex, 1l));\n         } else {\n             final Pipe pipe = getCurrentPipe(graphMemory);\n             messenger.receiveMessages(vertex, global).forEach(m -> {\n                 if (m.destination.equals(GremlinMessage.Destination.VERTEX)) {\n                     incrGremlins(vertex, m.counts);\n-                    //currentCounts.incrementAndGet();\n                     pipe.addStarts(new SingleIterator<>(new Holder<>(Pipe.NONE, vertex))); // TODO: use pipe name for paths\n                 } else if (m.destination.equals(GremlinMessage.Destination.EDGE)) {\n                     pipe.addStarts(getEdge(vertex, m));\n@@ -62,13 +58,12 @@ public void execute(final Vertex vertex, final Messenger<GremlinMessage> messeng\n                 }\n             });\n \n-            //vertex.setProperty(GREMLINS,currentCounts.get());\n             pipe.forEachRemaining(h -> {\n                 final Object object = ((Holder<Object>) h).get();\n                 messenger.sendMessage(\n                         vertex,\n                         MessageType.Global.of(GREMLIN_MESSAGE, Messenger.getHostingVertices(object)),\n-                        GremlinMessage.of(object, getGremlins(vertex)));\n+                        GremlinMessage.of(object, 1l));\n             });\n         }\n     }\n@@ -119,18 +114,6 @@ private long getGremlins(final Object object) {\n         }\n     }\n \n-    private void clearGremlins(final Vertex vertex) {\n-        // TODO: WHY DO I HAVE TO DO THIS?\n-        // TODO: THERE SHOULD BE A WAY TO DROP THE MEMORY STRUCTURE OF A BSP-CYCLE IN ONE FELL SWOOP.\n-        vertex.setProperty(GREMLINS, 0l);\n-        vertex.getProperties().values().forEach(p -> p.setAnnotation(GREMLINS, 0l));\n-        vertex.query().direction(Direction.BOTH).edges().forEach(e -> {\n-            e.setProperty(GREMLINS, 0l);\n-            e.getProperties().values().forEach(p -> p.setAnnotation(GREMLINS, 0l));\n-        });\n-    }\n-\n-\n     public boolean terminate(final GraphMemory graphMemory) {\n         Supplier<Gremlin> gremlin = graphMemory.get(GREMLIN_PIPELINE);\n         return !(graphMemory.getIteration() < gremlin.get().getPipes().size());\n@@ -145,7 +128,6 @@ private Pipe getCurrentPipe(final GraphMemory graphMemory) {\n         return (Pipe) gremlin.get().getPipes().get(graphMemory.getIteration());\n     }\n \n-\n     public static Builder create() {\n         return new Builder();\n     }", "filename": "gremlin/gremlin-java/src/main/java/com/tinkerpop/gremlin/computer/gremlin/GremlinVertexProgram.java"}, {"additions": 1, "raw_url": "https://github.com/apache/tinkerpop/raw/e0f2c8fbcec8958aad285c09111c3e6fd33c28d5/gremlin/gremlin-java/src/test/java/com/tinkerpop/gremlin/computer/gremlin/GremlinVertexProgramTest.java", "blob_url": "https://github.com/apache/tinkerpop/blob/e0f2c8fbcec8958aad285c09111c3e6fd33c28d5/gremlin/gremlin-java/src/test/java/com/tinkerpop/gremlin/computer/gremlin/GremlinVertexProgramTest.java", "sha": "0f41e5653b16bd85c976408016b03590b8c0a3dd", "changes": 3, "status": "modified", "deletions": 2, "contents_url": "https://api.github.com/repos/apache/tinkerpop/contents/gremlin/gremlin-java/src/test/java/com/tinkerpop/gremlin/computer/gremlin/GremlinVertexProgramTest.java?ref=e0f2c8fbcec8958aad285c09111c3e6fd33c28d5", "patch": "@@ -2,7 +2,6 @@\n \n import com.tinkerpop.blueprints.Graph;\n import com.tinkerpop.blueprints.computer.ComputeResult;\n-import com.tinkerpop.blueprints.computer.GraphComputer;\n import com.tinkerpop.blueprints.tinkergraph.TinkerFactory;\n import com.tinkerpop.blueprints.util.StreamFactory;\n import com.tinkerpop.gremlin.pipes.Gremlin;\n@@ -22,7 +21,7 @@ public void testGremlinOLAP() throws Exception {\n         Graph g = TinkerFactory.createClassic();\n         ComputeResult result =\n                 g.compute().program(GremlinVertexProgram.create().gremlin(() -> (Gremlin)\n-                        Gremlin.of().out(\"created\").in(\"created\").identity())\n+                        Gremlin.of().out(\"created\").inE(\"created\").identity())\n                         .build())\n                         .submit().get();\n ", "filename": "gremlin/gremlin-java/src/test/java/com/tinkerpop/gremlin/computer/gremlin/GremlinVertexProgramTest.java"}], "repo": "tinkerpop"}, {"commit": "https://github.com/apache/tinkerpop/commit/b195b623d02dcfb5bf188ab10fba2e7a7ef399c7", "parent": "https://github.com/apache/tinkerpop/commit/45c4303125ffdec915b66258d560e7b9d86bcec5", "message": "added NPE protection to ObjectWritable and added ObjectWritableTest which ensure ObjectWritable is comparable, gettable, toStringable, etc. even when its empty() -- that is, this.t == null. CTR. Fixed TINKERPOP-1251", "bug_id": "tinkerpop_14", "file": [{"additions": 6, "raw_url": "https://github.com/apache/tinkerpop/raw/b195b623d02dcfb5bf188ab10fba2e7a7ef399c7/hadoop-gremlin/src/main/java/org/apache/tinkerpop/gremlin/hadoop/structure/io/ObjectWritable.java", "blob_url": "https://github.com/apache/tinkerpop/blob/b195b623d02dcfb5bf188ab10fba2e7a7ef399c7/hadoop-gremlin/src/main/java/org/apache/tinkerpop/gremlin/hadoop/structure/io/ObjectWritable.java", "sha": "9e101ef84f0b1357c06607acc270f5aed181516d", "changes": 9, "status": "modified", "deletions": 3, "contents_url": "https://api.github.com/repos/apache/tinkerpop/contents/hadoop-gremlin/src/main/java/org/apache/tinkerpop/gremlin/hadoop/structure/io/ObjectWritable.java?ref=b195b623d02dcfb5bf188ab10fba2e7a7ef399c7", "patch": "@@ -36,6 +36,7 @@\n  */\n public final class ObjectWritable<T> implements WritableComparable<ObjectWritable>, Serializable {\n \n+    private static final String NULL = \"null\";\n     private static final ObjectWritable<MapReduce.NullObject> NULL_OBJECT_WRITABLE = new ObjectWritable<>(MapReduce.NullObject.instance());\n \n     T t;\n@@ -57,7 +58,7 @@ public void set(final T t) {\n \n     @Override\n     public String toString() {\n-        return this.t.toString();\n+        return null == this.t ? NULL : this.t.toString();\n     }\n \n     @Override\n@@ -97,7 +98,9 @@ private void readObject(final ObjectInputStream inputStream) throws IOException,\n \n     @Override\n     public int compareTo(final ObjectWritable objectWritable) {\n-        if (this.t instanceof Comparable)\n+        if (null == this.t)\n+            return objectWritable.isEmpty() ? 0 : -1;\n+        else if (this.t instanceof Comparable && !objectWritable.isEmpty())\n             return ((Comparable) this.t).compareTo(objectWritable.get());\n         else if (this.t.equals(objectWritable.get()))\n             return 0;\n@@ -110,7 +113,7 @@ public boolean isEmpty() {\n     }\n \n     public static ObjectWritable empty() {\n-        return new ObjectWritable(null);\n+        return new ObjectWritable<>(null);\n     }\n \n     @Override", "filename": "hadoop-gremlin/src/main/java/org/apache/tinkerpop/gremlin/hadoop/structure/io/ObjectWritable.java"}, {"additions": 49, "raw_url": "https://github.com/apache/tinkerpop/raw/b195b623d02dcfb5bf188ab10fba2e7a7ef399c7/hadoop-gremlin/src/test/java/org/apache/tinkerpop/gremlin/hadoop/structure/io/ObjectWritableTest.java", "blob_url": "https://github.com/apache/tinkerpop/blob/b195b623d02dcfb5bf188ab10fba2e7a7ef399c7/hadoop-gremlin/src/test/java/org/apache/tinkerpop/gremlin/hadoop/structure/io/ObjectWritableTest.java", "sha": "12f4694c03cb65ea384970e21c54fa7e97d3f742", "changes": 49, "status": "added", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/tinkerpop/contents/hadoop-gremlin/src/test/java/org/apache/tinkerpop/gremlin/hadoop/structure/io/ObjectWritableTest.java?ref=b195b623d02dcfb5bf188ab10fba2e7a7ef399c7", "patch": "@@ -0,0 +1,49 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.apache.tinkerpop.gremlin.hadoop.structure.io;\n+\n+import org.junit.Test;\n+\n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertFalse;\n+import static org.junit.Assert.assertNull;\n+import static org.junit.Assert.assertTrue;\n+\n+/**\n+ * @author Marko A. Rodriguez (http://markorodriguez.com)\n+ */\n+public class ObjectWritableTest {\n+\n+    @Test\n+    public void shouldNotHaveANullPointerException() {\n+        final ObjectWritable object = new ObjectWritable<>(null);\n+        assertNull(object.get());\n+        assertTrue(object.isEmpty());\n+        assertTrue(object.equals(ObjectWritable.empty()));\n+        assertFalse(object.equals(new ObjectWritable<>(\"hello\")));\n+        assertEquals(\"null\", object.toString());\n+        assertEquals(-1, object.compareTo(new ObjectWritable<>(\"blah\")));\n+        assertEquals(-1, new ObjectWritable<>(\"bloop\").compareTo(ObjectWritable.empty()));\n+        assertEquals(-1, new ObjectWritable<>(\"bloop\").compareTo(object));\n+        assertEquals(0, ObjectWritable.empty().compareTo(object));\n+        assertEquals(0, object.compareTo(ObjectWritable.empty()));\n+        assertEquals(0, object.compareTo(object));\n+    }\n+}", "filename": "hadoop-gremlin/src/test/java/org/apache/tinkerpop/gremlin/hadoop/structure/io/ObjectWritableTest.java"}], "repo": "tinkerpop"}, {"commit": "https://github.com/apache/tinkerpop/commit/276064530617c04706b62ac57ec4e2e660a756a4", "parent": "https://github.com/apache/tinkerpop/commit/2d824cf29f7d914405e262f4111aa2f5a7c272dc", "message": "fixed an NPE in AddVertexStartStep. In PathRetractionStrategy, NoOpBarriers are only added to global children as 99% of local children are by()-modulation based and thus, there is no point to fully compute the traversal if only the first next() is going to be used.", "bug_id": "tinkerpop_15", "file": [{"additions": 2, "raw_url": "https://github.com/apache/tinkerpop/raw/276064530617c04706b62ac57ec4e2e660a756a4/CHANGELOG.asciidoc", "blob_url": "https://github.com/apache/tinkerpop/blob/276064530617c04706b62ac57ec4e2e660a756a4/CHANGELOG.asciidoc", "sha": "4411f99b9c74caf34be039d93ad0744c50b676bf", "changes": 2, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/tinkerpop/contents/CHANGELOG.asciidoc?ref=276064530617c04706b62ac57ec4e2e660a756a4", "patch": "@@ -26,6 +26,8 @@ image::https://raw.githubusercontent.com/apache/tinkerpop/master/docs/static/ima\n TinkerPop 3.2.4 (Release Date: NOT OFFICIALLY RELEASED YET)\n ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n \n+* `PathRetractionStrategy` does not add a `NoOpBarrierStep` to the end of local children as its wasted computation in 99% of traversals.\n+* Fixed a bug in `AddVertexStartStep` where if a side-effect was being used in the parametrization, an NPE occurred.\n * Fixed a bug in `LazyBarrierStrategy` where `profile()` was deactivating it accidentally.\n * Fixed a bug in `RepeatUnrollStrategy` where stateful `DedupGlobalStep` was cloned and thus, maintained two deduplication sets.\n * Added documentation around \"terminal steps\" in Gremlin: `hasNext()`, `next()`, `toList()`, etc.", "filename": "CHANGELOG.asciidoc"}, {"additions": 5, "raw_url": "https://github.com/apache/tinkerpop/raw/276064530617c04706b62ac57ec4e2e660a756a4/gremlin-core/src/main/java/org/apache/tinkerpop/gremlin/process/traversal/step/map/AddVertexStartStep.java", "blob_url": "https://github.com/apache/tinkerpop/blob/276064530617c04706b62ac57ec4e2e660a756a4/gremlin-core/src/main/java/org/apache/tinkerpop/gremlin/process/traversal/step/map/AddVertexStartStep.java", "sha": "58c3ef32b4aa3ab9a6417aff6b59e0786f1e5189", "changes": 8, "status": "modified", "deletions": 3, "contents_url": "https://api.github.com/repos/apache/tinkerpop/contents/gremlin-core/src/main/java/org/apache/tinkerpop/gremlin/process/traversal/step/map/AddVertexStartStep.java?ref=276064530617c04706b62ac57ec4e2e660a756a4", "patch": "@@ -19,8 +19,10 @@\n package org.apache.tinkerpop.gremlin.process.traversal.step.map;\n \n import org.apache.tinkerpop.gremlin.process.traversal.Parameterizing;\n+import org.apache.tinkerpop.gremlin.process.traversal.Step;\n import org.apache.tinkerpop.gremlin.process.traversal.Traversal;\n import org.apache.tinkerpop.gremlin.process.traversal.Traverser;\n+import org.apache.tinkerpop.gremlin.process.traversal.TraverserGenerator;\n import org.apache.tinkerpop.gremlin.process.traversal.step.Mutating;\n import org.apache.tinkerpop.gremlin.process.traversal.step.TraversalParent;\n import org.apache.tinkerpop.gremlin.process.traversal.step.util.AbstractStep;\n@@ -29,7 +31,6 @@\n import org.apache.tinkerpop.gremlin.process.traversal.step.util.event.Event;\n import org.apache.tinkerpop.gremlin.process.traversal.step.util.event.ListCallbackRegistry;\n import org.apache.tinkerpop.gremlin.process.traversal.traverser.TraverserRequirement;\n-import org.apache.tinkerpop.gremlin.process.traversal.traverser.util.EmptyTraverser;\n import org.apache.tinkerpop.gremlin.process.traversal.util.FastNoSuchElementException;\n import org.apache.tinkerpop.gremlin.structure.T;\n import org.apache.tinkerpop.gremlin.structure.Vertex;\n@@ -75,12 +76,13 @@ public void addPropertyMutations(final Object... keyValues) {\n     protected Traverser.Admin<Vertex> processNextStart() {\n         if (this.first) {\n             this.first = false;\n-            final Vertex vertex = this.getTraversal().getGraph().get().addVertex(this.parameters.getKeyValues(EmptyTraverser.instance()));\n+            final TraverserGenerator generator = this.getTraversal().getTraverserGenerator();\n+            final Vertex vertex = this.getTraversal().getGraph().get().addVertex(this.parameters.getKeyValues(generator.generate(false, (Step) this, 1L)));\n             if (this.callbackRegistry != null) {\n                 final Event.VertexAddedEvent vae = new Event.VertexAddedEvent(DetachedFactory.detach(vertex, true));\n                 this.callbackRegistry.getCallbacks().forEach(c -> c.accept(vae));\n             }\n-            return this.getTraversal().getTraverserGenerator().generate(vertex, this, 1l);\n+            return generator.generate(vertex, this, 1L);\n         } else\n             throw FastNoSuchElementException.instance();\n     }", "filename": "gremlin-core/src/main/java/org/apache/tinkerpop/gremlin/process/traversal/step/map/AddVertexStartStep.java"}, {"additions": 2, "raw_url": "https://github.com/apache/tinkerpop/raw/276064530617c04706b62ac57ec4e2e660a756a4/gremlin-core/src/main/java/org/apache/tinkerpop/gremlin/process/traversal/strategy/optimization/PathRetractionStrategy.java", "blob_url": "https://github.com/apache/tinkerpop/blob/276064530617c04706b62ac57ec4e2e660a756a4/gremlin-core/src/main/java/org/apache/tinkerpop/gremlin/process/traversal/strategy/optimization/PathRetractionStrategy.java", "sha": "1d09748f42ddf0cda8e71f21417011a1241907fb", "changes": 3, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/tinkerpop/contents/gremlin-core/src/main/java/org/apache/tinkerpop/gremlin/process/traversal/strategy/optimization/PathRetractionStrategy.java?ref=276064530617c04706b62ac57ec4e2e660a756a4", "patch": "@@ -109,7 +109,8 @@ public void apply(final Traversal.Admin<?, ?> traversal) {\n                         !(currentStep instanceof MatchStep) &&\n                         !(currentStep instanceof Barrier) &&\n                         !(currentStep.getNextStep() instanceof Barrier) &&\n-                        !(currentStep.getTraversal().getParent() instanceof MatchStep))\n+                        !(currentStep.getTraversal().getParent() instanceof MatchStep) &&\n+                        TraversalHelper.isGlobalChild(currentStep.getTraversal()))\n                     TraversalHelper.insertAfterStep(new NoOpBarrierStep<>(traversal, this.standardBarrierSize), currentStep, traversal);\n             }\n         }", "filename": "gremlin-core/src/main/java/org/apache/tinkerpop/gremlin/process/traversal/strategy/optimization/PathRetractionStrategy.java"}, {"additions": 10, "raw_url": "https://github.com/apache/tinkerpop/raw/276064530617c04706b62ac57ec4e2e660a756a4/gremlin-groovy-test/src/main/groovy/org/apache/tinkerpop/gremlin/process/traversal/step/map/GroovyAddVertexTest.groovy", "blob_url": "https://github.com/apache/tinkerpop/blob/276064530617c04706b62ac57ec4e2e660a756a4/gremlin-groovy-test/src/main/groovy/org/apache/tinkerpop/gremlin/process/traversal/step/map/GroovyAddVertexTest.groovy", "sha": "00312faf4e9dea5678b81d6ac6ffa43f103c3d2f", "changes": 10, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/tinkerpop/contents/gremlin-groovy-test/src/main/groovy/org/apache/tinkerpop/gremlin/process/traversal/step/map/GroovyAddVertexTest.groovy?ref=276064530617c04706b62ac57ec4e2e660a756a4", "patch": "@@ -76,6 +76,16 @@ public abstract class GroovyAddVertexTest {\n             new ScriptTraversal<>(g, \"gremlin-groovy\", \"g.V.addV('animal').property('name', values('name')).property('name', 'an animal').property(values('name'), label())\")\n         }\n \n+        @Override\n+        public Traversal<Vertex, Map<String, List<String>>> get_g_withSideEffectXa_testX_V_hasLabelXsoftwareX_propertyXtemp_selectXaXX_valueMapXname_tempX() {\n+            new ScriptTraversal<>(g, \"gremlin-groovy\", \"g.withSideEffect('a', 'test').V.hasLabel('software').property('temp', select('a')).valueMap('name', 'temp')\")\n+        }\n+\n+        @Override\n+        public Traversal<Vertex, String> get_g_withSideEffectXa_markoX_addV_propertyXname_selectXaXX_name() {\n+            new ScriptTraversal<>(g, \"gremlin-groovy\", \"g.withSideEffect('a', 'marko').addV().property('name', select('a')).name\")\n+        }\n+\n         ///////// DEPRECATED BELOW\n \n         @Override", "filename": "gremlin-groovy-test/src/main/groovy/org/apache/tinkerpop/gremlin/process/traversal/step/map/GroovyAddVertexTest.groovy"}, {"additions": 51, "raw_url": "https://github.com/apache/tinkerpop/raw/276064530617c04706b62ac57ec4e2e660a756a4/gremlin-test/src/main/java/org/apache/tinkerpop/gremlin/process/traversal/step/map/AddVertexTest.java", "blob_url": "https://github.com/apache/tinkerpop/blob/276064530617c04706b62ac57ec4e2e660a756a4/gremlin-test/src/main/java/org/apache/tinkerpop/gremlin/process/traversal/step/map/AddVertexTest.java", "sha": "f43c6125ebcdcd4e302687a5fad305d098131e8f", "changes": 53, "status": "modified", "deletions": 2, "contents_url": "https://api.github.com/repos/apache/tinkerpop/contents/gremlin-test/src/main/java/org/apache/tinkerpop/gremlin/process/traversal/step/map/AddVertexTest.java?ref=276064530617c04706b62ac57ec4e2e660a756a4", "patch": "@@ -32,11 +32,17 @@\n import org.junit.Test;\n import org.junit.runner.RunWith;\n \n+import java.util.Collections;\n import java.util.List;\n+import java.util.Map;\n \n import static org.apache.tinkerpop.gremlin.LoadGraphWith.GraphData.MODERN;\n+import static org.apache.tinkerpop.gremlin.process.traversal.dsl.graph.__.select;\n import static org.hamcrest.Matchers.containsInAnyOrder;\n-import static org.junit.Assert.*;\n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertFalse;\n+import static org.junit.Assert.assertThat;\n+import static org.junit.Assert.assertTrue;\n \n /**\n  * @author Marko A. Rodriguez (http://markorodriguez.com)\n@@ -62,6 +68,10 @@\n \n     public abstract Traversal<Vertex, Vertex> get_g_V_addVXanimalX_propertyXname_valuesXnameXX_propertyXname_an_animalX_propertyXvaluesXnameX_labelX();\n \n+    public abstract Traversal<Vertex, Map<String, List<String>>> get_g_withSideEffectXa_testX_V_hasLabelXsoftwareX_propertyXtemp_selectXaXX_valueMapXname_tempX();\n+\n+    public abstract Traversal<Vertex, String> get_g_withSideEffectXa_markoX_addV_propertyXname_selectXaXX_name();\n+\n     // 3.0.0 DEPRECATIONS\n     @Deprecated\n     public abstract Traversal<Vertex, Vertex> get_g_V_addVXlabel_animal_age_0X();\n@@ -275,12 +285,41 @@ public void g_addVXlabel_person_name_stephenX() {\n         assertEquals(7, IteratorUtils.count(g.V()));\n     }\n \n+    @Test\n+    @LoadGraphWith(MODERN)\n+    @FeatureRequirement(featureClass = Graph.Features.VertexFeatures.class, feature = Graph.Features.VertexFeatures.FEATURE_ADD_PROPERTY)\n+    public void g_withSideEffectXa_testX_V_hasLabelXsoftwareX_propertyXtemp_selectXaXX_valueMapXname_tempX() {\n+        final Traversal<Vertex, Map<String, List<String>>> traversal = get_g_withSideEffectXa_testX_V_hasLabelXsoftwareX_propertyXtemp_selectXaXX_valueMapXname_tempX();\n+        printTraversalForm(traversal);\n+        int counter = 0;\n+        while (traversal.hasNext()) {\n+            counter++;\n+            final Map<String, List<String>> valueMap = traversal.next();\n+            assertEquals(2, valueMap.size());\n+            assertEquals(Collections.singletonList(\"test\"), valueMap.get(\"temp\"));\n+            assertTrue(valueMap.get(\"name\").equals(Collections.singletonList(\"ripple\")) || valueMap.get(\"name\").equals(Collections.singletonList(\"lop\")));\n+        }\n+        assertEquals(2, counter);\n+        assertFalse(traversal.hasNext());\n+    }\n+\n+    @Test\n+    @LoadGraphWith(MODERN)\n+    @FeatureRequirement(featureClass = Graph.Features.VertexFeatures.class, feature = Graph.Features.VertexFeatures.FEATURE_ADD_VERTICES)\n+    @FeatureRequirement(featureClass = Graph.Features.VertexFeatures.class, feature = Graph.Features.VertexFeatures.FEATURE_ADD_PROPERTY)\n+    public void g_withSideEffectXa_markoX_addV_propertyXname_selectXaXX_name() {\n+        final Traversal<Vertex, String> traversal = get_g_withSideEffectXa_markoX_addV_propertyXname_selectXaXX_name();\n+        printTraversalForm(traversal);\n+        assertEquals(\"marko\", traversal.next());\n+        assertFalse(traversal.hasNext());\n+    }\n+\n \n     public static class Traversals extends AddVertexTest {\n \n         @Override\n         public Traversal<Vertex, Vertex> get_g_VX1X_addVXanimalX_propertyXage_selectXaX_byXageXX_propertyXname_puppyX(final Object v1Id) {\n-            return g.V(v1Id).as(\"a\").addV(\"animal\").property(\"age\", __.select(\"a\").by(\"age\")).property(\"name\", \"puppy\");\n+            return g.V(v1Id).as(\"a\").addV(\"animal\").property(\"age\", select(\"a\").by(\"age\")).property(\"name\", \"puppy\");\n         }\n \n         @Override\n@@ -332,5 +371,15 @@ public void g_addVXlabel_person_name_stephenX() {\n         public Traversal<Vertex, Vertex> get_g_addVXlabel_person_name_stephenX() {\n             return g.addV(T.label, \"person\", \"name\", \"stephen\");\n         }\n+\n+        @Override\n+        public Traversal<Vertex, Map<String, List<String>>> get_g_withSideEffectXa_testX_V_hasLabelXsoftwareX_propertyXtemp_selectXaXX_valueMapXname_tempX() {\n+            return g.withSideEffect(\"a\", \"test\").V().hasLabel(\"software\").property(\"temp\", select(\"a\")).valueMap(\"name\", \"temp\");\n+        }\n+\n+        @Override\n+        public Traversal<Vertex, String> get_g_withSideEffectXa_markoX_addV_propertyXname_selectXaXX_name() {\n+            return g.withSideEffect(\"a\", \"marko\").addV().property(\"name\", select(\"a\")).values(\"name\");\n+        }\n     }\n }\n\\ No newline at end of file", "filename": "gremlin-test/src/main/java/org/apache/tinkerpop/gremlin/process/traversal/step/map/AddVertexTest.java"}], "repo": "tinkerpop"}, {"commit": "https://github.com/apache/tinkerpop/commit/1f0df4a449fd0cf363e9e47e3864be4f3d845ad8", "parent": "https://github.com/apache/tinkerpop/commit/8eaa0c27a454fa4824ea2a0a9a14197f5aa2808e", "message": "Removed other constructors for YamlConfiguration as they were not working.\n\nThose constructors relied on calls to super() which immediately triggered a call to load() thus not allowing the yaml member variable to be initialized leaving a npe to deal with.", "bug_id": "tinkerpop_16", "file": [{"additions": 3, "raw_url": "https://github.com/apache/tinkerpop/raw/1f0df4a449fd0cf363e9e47e3864be4f3d845ad8/gremlin-core/src/main/java/org/apache/tinkerpop/gremlin/structure/util/GraphFactory.java", "blob_url": "https://github.com/apache/tinkerpop/blob/1f0df4a449fd0cf363e9e47e3864be4f3d845ad8/gremlin-core/src/main/java/org/apache/tinkerpop/gremlin/structure/util/GraphFactory.java", "sha": "0a918208ebcd5369a3443ef2597738c14844a2ee", "changes": 4, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/tinkerpop/contents/gremlin-core/src/main/java/org/apache/tinkerpop/gremlin/structure/util/GraphFactory.java?ref=1f0df4a449fd0cf363e9e47e3864be4f3d845ad8", "patch": "@@ -116,7 +116,9 @@ private static Configuration getConfiguration(final File configurationFile) {\n             switch (fileExtension) {\n                 case \"yml\":\n                 case \"yaml\":\n-                    return new YamlConfiguration(configurationFile);\n+                    final YamlConfiguration config = new YamlConfiguration();\n+                    config.load(configurationFile);\n+                    return config;\n                 case \"xml\":\n                     return new XMLConfiguration(configurationFile);\n                 default:", "filename": "gremlin-core/src/main/java/org/apache/tinkerpop/gremlin/structure/util/GraphFactory.java"}, {"additions": 0, "raw_url": "https://github.com/apache/tinkerpop/raw/1f0df4a449fd0cf363e9e47e3864be4f3d845ad8/gremlin-core/src/main/java/org/apache/tinkerpop/gremlin/util/config/YamlConfiguration.java", "blob_url": "https://github.com/apache/tinkerpop/blob/1f0df4a449fd0cf363e9e47e3864be4f3d845ad8/gremlin-core/src/main/java/org/apache/tinkerpop/gremlin/util/config/YamlConfiguration.java", "sha": "4075c988512a399c8177d7bb02b9c034b7a0658f", "changes": 20, "status": "modified", "deletions": 20, "contents_url": "https://api.github.com/repos/apache/tinkerpop/contents/gremlin-core/src/main/java/org/apache/tinkerpop/gremlin/util/config/YamlConfiguration.java?ref=1f0df4a449fd0cf363e9e47e3864be4f3d845ad8", "patch": "@@ -51,26 +51,6 @@ public YamlConfiguration() {\n         initialize();\n     }\n \n-    public YamlConfiguration(final HierarchicalConfiguration c) {\n-        super(c);\n-        initialize();\n-    }\n-\n-    public YamlConfiguration(final String fileName) throws ConfigurationException {\n-        super(fileName);\n-        initialize();\n-    }\n-\n-    public YamlConfiguration(final File file) throws ConfigurationException {\n-        super(file);\n-        initialize();\n-    }\n-\n-    public YamlConfiguration(final URL url) throws ConfigurationException {\n-        super(url);\n-        initialize();\n-    }\n-\n     private void initialize() {\n         yamlOptions.setIndent(DEFAULT_IDENT);\n         yamlOptions.setDefaultFlowStyle(DumperOptions.FlowStyle.BLOCK);", "filename": "gremlin-core/src/main/java/org/apache/tinkerpop/gremlin/util/config/YamlConfiguration.java"}, {"additions": 41, "raw_url": "https://github.com/apache/tinkerpop/raw/1f0df4a449fd0cf363e9e47e3864be4f3d845ad8/gremlin-core/src/test/java/org/apache/tinkerpop/gremlin/TestHelper.java", "blob_url": "https://github.com/apache/tinkerpop/blob/1f0df4a449fd0cf363e9e47e3864be4f3d845ad8/gremlin-core/src/test/java/org/apache/tinkerpop/gremlin/TestHelper.java", "sha": "3a8f8c3676c1e3539a3890c0ebc32ac3b118ac79", "changes": 41, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/tinkerpop/contents/gremlin-core/src/test/java/org/apache/tinkerpop/gremlin/TestHelper.java?ref=1f0df4a449fd0cf363e9e47e3864be4f3d845ad8", "patch": "@@ -18,8 +18,11 @@\n  */\n package org.apache.tinkerpop.gremlin;\n \n+import java.io.File;\n+import java.io.IOException;\n import java.lang.reflect.Constructor;\n import java.lang.reflect.Modifier;\n+import java.net.URL;\n \n import static org.junit.Assert.assertTrue;\n \n@@ -34,4 +37,42 @@ public static void assertIsUtilityClass(final Class<?> utilityClass) throws Exce\n         constructor.setAccessible(true);\n         constructor.newInstance();\n     }\n+\n+    /**\n+     * See {@code TestHelper} in gremlin-test for the official version.\n+     */\n+    public static File generateTempFile(final Class clazz, final String fileName, final String fileNameSuffix) throws IOException {\n+        final File path = makeTestDataPath(clazz, \"temp\");\n+        if (!path.exists()) path.mkdirs();\n+        return File.createTempFile(fileName, fileNameSuffix, path);\n+    }\n+\n+    /**\n+     * See {@code TestHelper} in gremlin-test for the official version.\n+     */\n+    public static File makeTestDataPath(final Class clazz, final String childPath) {\n+        final String buildDirectory = System.getProperty(\"build.dir\");\n+        final File root = null == buildDirectory ? new File(computePath(clazz)).getParentFile() : new File(buildDirectory);\n+        return new File(root, cleanPathSegment(childPath));\n+    }\n+\n+    /**\n+     * See {@code TestHelper} in gremlin-test for the official version.\n+     */\n+    public static String cleanPathSegment(final String toClean) {\n+        final String cleaned = toClean.replaceAll(\"[.\\\\\\\\/:*?\\\"<>|\\\\[\\\\]\\\\(\\\\)]\", \"\");\n+        if (cleaned.length() == 0)\n+            throw new IllegalStateException(\"Path segment \" + toClean + \" has not valid characters and is thus empty\");\n+        return cleaned;\n+    }\n+\n+    /**\n+     * See {@code TestHelper} in gremlin-test for the official version.\n+     */\n+    private static String computePath(final Class clazz) {\n+        final String clsUri = clazz.getName().replace('.', '/') + \".class\";\n+        final URL url = clazz.getClassLoader().getResource(clsUri);\n+        final String clsPath = url.getPath();\n+        return clsPath.substring(0, clsPath.length() - clsUri.length());\n+    }\n }", "filename": "gremlin-core/src/test/java/org/apache/tinkerpop/gremlin/TestHelper.java"}, {"additions": 18, "raw_url": "https://github.com/apache/tinkerpop/raw/1f0df4a449fd0cf363e9e47e3864be4f3d845ad8/gremlin-core/src/test/java/org/apache/tinkerpop/gremlin/util/config/YamlConfigurationTest.java", "blob_url": "https://github.com/apache/tinkerpop/blob/1f0df4a449fd0cf363e9e47e3864be4f3d845ad8/gremlin-core/src/test/java/org/apache/tinkerpop/gremlin/util/config/YamlConfigurationTest.java", "sha": "f75a6c46fba23b2672e0ed1efb9186666d130059", "changes": 18, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/tinkerpop/contents/gremlin-core/src/test/java/org/apache/tinkerpop/gremlin/util/config/YamlConfigurationTest.java?ref=1f0df4a449fd0cf363e9e47e3864be4f3d845ad8", "patch": "@@ -18,12 +18,18 @@\n  */\n package org.apache.tinkerpop.gremlin.util.config;\n \n+import org.apache.commons.configuration.ConfigurationException;\n+import org.apache.tinkerpop.gremlin.TestHelper;\n import org.junit.Test;\n import org.yaml.snakeyaml.DumperOptions;\n import org.yaml.snakeyaml.Yaml;\n \n+import java.io.File;\n+import java.io.FileWriter;\n+import java.io.Reader;\n import java.io.StringReader;\n import java.io.StringWriter;\n+import java.io.Writer;\n import java.util.Arrays;\n import java.util.HashMap;\n import java.util.LinkedHashMap;\n@@ -36,6 +42,18 @@\n  */\n public class YamlConfigurationTest {\n \n+    @Test(expected = ConfigurationException.class)\n+    public void shouldThrowConfigurationExceptionIfLoadFails() throws Exception {\n+        final YamlConfiguration config = new YamlConfiguration();\n+        config.load((Reader) null);\n+    }\n+\n+    @Test(expected = ConfigurationException.class)\n+    public void shouldThrowConfigurationExceptionIfSaveFails() throws Exception {\n+        final YamlConfiguration config = new YamlConfiguration();\n+        config.save((Writer) null);\n+    }\n+\n     @Test\n     public void shouldLoadSaveConfiguration() throws Exception {\n         final YamlConfiguration config = new YamlConfiguration();", "filename": "gremlin-core/src/test/java/org/apache/tinkerpop/gremlin/util/config/YamlConfigurationTest.java"}, {"additions": 0, "raw_url": "https://github.com/apache/tinkerpop/raw/1f0df4a449fd0cf363e9e47e3864be4f3d845ad8/gremlin-test/src/main/java/org/apache/tinkerpop/gremlin/TestHelper.java", "blob_url": "https://github.com/apache/tinkerpop/blob/1f0df4a449fd0cf363e9e47e3864be4f3d845ad8/gremlin-test/src/main/java/org/apache/tinkerpop/gremlin/TestHelper.java", "sha": "d3dba57e9c91ed7fa0d953777699578ea069e3fc", "changes": 3, "status": "modified", "deletions": 3, "contents_url": "https://api.github.com/repos/apache/tinkerpop/contents/gremlin-test/src/main/java/org/apache/tinkerpop/gremlin/TestHelper.java?ref=1f0df4a449fd0cf363e9e47e3864be4f3d845ad8", "patch": "@@ -23,7 +23,6 @@\n import org.apache.tinkerpop.gremlin.structure.Property;\n import org.apache.tinkerpop.gremlin.structure.Vertex;\n import org.apache.tinkerpop.gremlin.structure.VertexProperty;\n-import org.apache.tinkerpop.gremlin.structure.io.graphml.GraphMLResourceAccess;\n import org.apache.tinkerpop.gremlin.structure.util.Comparators;\n import org.apache.tinkerpop.gremlin.util.iterator.IteratorUtils;\n \n@@ -32,7 +31,6 @@\n import java.io.IOException;\n import java.io.InputStream;\n import java.net.URL;\n-import java.util.Comparator;\n import java.util.Iterator;\n import java.util.List;\n \n@@ -113,7 +111,6 @@ public static String cleanPathSegment(final String toClean) {\n         return cleaned;\n     }\n \n-\n     ///////////////\n \n     public static void validateVertexEquality(final Vertex originalVertex, final Vertex otherVertex, boolean testEdges) {", "filename": "gremlin-test/src/main/java/org/apache/tinkerpop/gremlin/TestHelper.java"}], "repo": "tinkerpop"}, {"commit": "https://github.com/apache/tinkerpop/commit/b45a957c52da9d4e3c180baaf7f16672e94d6abd", "parent": "https://github.com/apache/tinkerpop/commit/9d205f89d99c9c04ece93e4bdb713701a1010652", "message": "Fixed an NPE around path and nested children with path processors. Added some TODO notes in PrunePathStrategyTest about why keepLabels are the way they are -- I believe that nesting is not sound and should be looked into more. And more tests added.", "bug_id": "tinkerpop_17", "file": [{"additions": 1, "raw_url": "https://github.com/apache/tinkerpop/raw/b45a957c52da9d4e3c180baaf7f16672e94d6abd/gremlin-core/src/main/java/org/apache/tinkerpop/gremlin/process/traversal/strategy/optimization/PrunePathStrategy.java", "blob_url": "https://github.com/apache/tinkerpop/blob/b45a957c52da9d4e3c180baaf7f16672e94d6abd/gremlin-core/src/main/java/org/apache/tinkerpop/gremlin/process/traversal/strategy/optimization/PrunePathStrategy.java", "sha": "358af7a7f65ad2e05d6eff8619fafe6ed5633799", "changes": 2, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/tinkerpop/contents/gremlin-core/src/main/java/org/apache/tinkerpop/gremlin/process/traversal/strategy/optimization/PrunePathStrategy.java?ref=b45a957c52da9d4e3c180baaf7f16672e94d6abd", "patch": "@@ -90,7 +90,7 @@ public static PrunePathStrategy instance() {\n                 do {\n                     // if this is the top level traversal, propagate all nested labels\n                     // to previous PathProcess steps\n-                    if (step instanceof PathProcessor) {\n+                    if (step instanceof PathProcessor && null != ((PathProcessor) step).getKeepLabels()) {\n                         ((PathProcessor) step).getKeepLabels().addAll(referencedLabels);\n                     }\n                     step = step.getPreviousStep();", "filename": "gremlin-core/src/main/java/org/apache/tinkerpop/gremlin/process/traversal/strategy/optimization/PrunePathStrategy.java"}, {"additions": 8, "raw_url": "https://github.com/apache/tinkerpop/raw/b45a957c52da9d4e3c180baaf7f16672e94d6abd/gremlin-core/src/test/java/org/apache/tinkerpop/gremlin/process/traversal/strategy/optimization/PrunePathStrategyTest.java", "blob_url": "https://github.com/apache/tinkerpop/blob/b45a957c52da9d4e3c180baaf7f16672e94d6abd/gremlin-core/src/test/java/org/apache/tinkerpop/gremlin/process/traversal/strategy/optimization/PrunePathStrategyTest.java", "sha": "72ee294de86ee4555c32c95afa89ce616efaab73", "changes": 11, "status": "modified", "deletions": 3, "contents_url": "https://api.github.com/repos/apache/tinkerpop/contents/gremlin-core/src/test/java/org/apache/tinkerpop/gremlin/process/traversal/strategy/optimization/PrunePathStrategyTest.java?ref=b45a957c52da9d4e3c180baaf7f16672e94d6abd", "patch": "@@ -73,7 +73,7 @@ public void doTest() {\n             currentTraversal.setStrategies(currentStrategies);\n             currentTraversal.applyStrategies();\n             final List<Object> keepLabels = getKeepLabels(currentTraversal);\n-            assertEquals(this.labels, keepLabels);\n+            assertEquals(keepLabels, this.labels);\n             if (null != optimized)\n                 assertEquals(currentTraversal, optimized);\n         }\n@@ -84,9 +84,8 @@ public void doTest() {\n         for (Step step : traversal.getSteps()) {\n             if (step instanceof PathProcessor) {\n                 final Set<String> keepers = ((PathProcessor) step).getKeepLabels();\n-                if (keepers != null) {\n+                if (keepers != null)\n                     keepLabels.add(keepers);\n-                }\n             }\n             if (step instanceof TraversalParent) {\n                 final TraversalParent parent = (TraversalParent) step;\n@@ -135,6 +134,12 @@ public void doTest() {\n                 {__.V().as(\"a\").out().as(\"b\").where(P.gt(\"a\")).out().out(), Arrays.asList(Collections.emptySet()), __.V().as(\"a\").out().as(\"b\").where(P.gt(\"a\")).barrier(MAX_BARRIER_SIZE).out().out()},\n                 {__.V().as(\"a\").out().as(\"b\").where(P.gt(\"a\")).count(), Arrays.asList(Collections.emptySet()), __.V().as(\"a\").out().as(\"b\").where(P.gt(\"a\")).count()},\n                 {__.V().as(\"a\").out().as(\"b\").select(\"a\").as(\"c\").where(P.gt(\"b\")).out(), Arrays.asList(Collections.singleton(\"b\"), Collections.emptySet()), __.V().as(\"a\").out().as(\"b\").select(\"a\").as(\"c\").barrier(MAX_BARRIER_SIZE).where(P.gt(\"b\")).barrier(MAX_BARRIER_SIZE).out()},\n+                // TODO: why is the local child preserving c and e?\n+                {__.V().as(\"a\").out().as(\"b\").select(\"a\").select(\"b\").local(as(\"c\").out().as(\"d\", \"e\").select(\"c\", \"e\").out().select(\"c\")).out().select(\"c\"),\n+                        Arrays.asList(new HashSet<>(Arrays.asList(\"b\", \"c\", \"e\")), new HashSet<>(Arrays.asList(\"c\", \"e\")), Arrays.asList(new HashSet<>(Arrays.asList(\"c\", \"e\")), new HashSet<>(Arrays.asList(\"c\", \"e\"))), Collections.emptySet()), null},\n+                // TODO: same as above but note how path() makes things react\n+                {__.V().as(\"a\").out().as(\"b\").select(\"a\").select(\"b\").path().local(as(\"c\").out().as(\"d\", \"e\").select(\"c\", \"e\").out().select(\"c\")).out().select(\"c\"),\n+                        Arrays.asList(Arrays.asList(new HashSet<>(Arrays.asList(\"c\", \"e\")), new HashSet<>(Arrays.asList(\"c\", \"e\")))), null},\n         });\n     }\n }", "filename": "gremlin-core/src/test/java/org/apache/tinkerpop/gremlin/process/traversal/strategy/optimization/PrunePathStrategyTest.java"}], "repo": "tinkerpop"}, {"commit": "https://github.com/apache/tinkerpop/commit/e087123ca9bf513a555b3666a201905df43d8f7c", "parent": "https://github.com/apache/tinkerpop/commit/c890cebad5231cdab8744878bebb4ea363689a3a", "message": "came up with a nifty trick and now OLD and NEW group() are much closer in time. 432ms vs 456ms. Given that the solution is no longer an NPE in nested groups in OLAP -- this minor time hit is worth it. :). Running integration tests over night.", "bug_id": "tinkerpop_18", "file": [{"additions": 104, "raw_url": "https://github.com/apache/tinkerpop/raw/e087123ca9bf513a555b3666a201905df43d8f7c/gremlin-core/src/main/java/org/apache/tinkerpop/gremlin/process/traversal/step/map/GroupStep.java", "blob_url": "https://github.com/apache/tinkerpop/blob/e087123ca9bf513a555b3666a201905df43d8f7c/gremlin-core/src/main/java/org/apache/tinkerpop/gremlin/process/traversal/step/map/GroupStep.java", "sha": "7a93796b721a5943a2c84a04af689888843111fa", "changes": 168, "status": "modified", "deletions": 64, "contents_url": "https://api.github.com/repos/apache/tinkerpop/contents/gremlin-core/src/main/java/org/apache/tinkerpop/gremlin/process/traversal/step/map/GroupStep.java?ref=e087123ca9bf513a555b3666a201905df43d8f7c", "patch": "@@ -42,7 +42,6 @@\n \n import java.io.Serializable;\n import java.util.ArrayList;\n-import java.util.Arrays;\n import java.util.HashMap;\n import java.util.List;\n import java.util.Map;\n@@ -62,7 +61,7 @@\n     public GroupStep(final Traversal.Admin traversal) {\n         super(traversal);\n         this.valueTraversal = this.integrateChild(__.fold().asAdmin());\n-        this.preTraversal = this.integrateChild(splitOnBarrierStep(this.valueTraversal).get(0));\n+        this.preTraversal = this.integrateChild(generatePreTraversal(this.valueTraversal));\n         this.setReducingBiOperator(new GroupBiOperator<>(this.valueTraversal));\n         this.setSeedSupplier(HashMapSupplier.instance());\n     }\n@@ -74,7 +73,7 @@ public void modulateBy(final Traversal.Admin<?, ?> kvTraversal) {\n             this.state = 'v';\n         } else if ('v' == this.state) {\n             this.valueTraversal = this.integrateChild(convertValueTraversal(kvTraversal));\n-            this.preTraversal = this.integrateChild(splitOnBarrierStep(this.valueTraversal).get(0));\n+            this.preTraversal = this.integrateChild(generatePreTraversal(this.valueTraversal));\n             this.setReducingBiOperator(new GroupBiOperator<>(this.valueTraversal));\n             this.state = 'x';\n         } else {\n@@ -85,11 +84,15 @@ public void modulateBy(final Traversal.Admin<?, ?> kvTraversal) {\n     @Override\n     public Map<K, V> projectTraverser(final Traverser.Admin<S> traverser) {\n         final Map<K, V> map = new HashMap<>(1);\n-        final TraverserSet traverserSet = new TraverserSet<>();\n-        this.preTraversal.reset();\n-        this.preTraversal.addStart(traverser.split());\n-        this.preTraversal.getEndStep().forEachRemaining(traverserSet::add);\n-        map.put(TraversalUtil.applyNullable(traverser, this.keyTraversal), (V) traverserSet);\n+        if (null == this.preTraversal) {\n+            map.put(TraversalUtil.applyNullable(traverser, this.keyTraversal), (V) traverser.split());\n+        } else {\n+            final TraverserSet traverserSet = new TraverserSet<>();\n+            this.preTraversal.reset();\n+            this.preTraversal.addStart(traverser.split());\n+            this.preTraversal.getEndStep().forEachRemaining(traverserSet::add);\n+            map.put(TraversalUtil.applyNullable(traverser, this.keyTraversal), (V) traverserSet);\n+        }\n         return map;\n     }\n \n@@ -100,7 +103,7 @@ public String toString() {\n \n     @Override\n     public List<Traversal.Admin<?, ?>> getLocalChildren() {\n-        final List<Traversal.Admin<?, ?>> children = new ArrayList<>(4);\n+        final List<Traversal.Admin<?, ?>> children = new ArrayList<>(2);\n         if (null != this.keyTraversal)\n             children.add((Traversal.Admin) this.keyTraversal);\n         children.add(this.valueTraversal);\n@@ -118,7 +121,7 @@ public String toString() {\n         if (null != this.keyTraversal)\n             clone.keyTraversal = this.keyTraversal.clone();\n         clone.valueTraversal = this.valueTraversal.clone();\n-        clone.preTraversal = this.integrateChild(GroupStep.splitOnBarrierStep(clone.valueTraversal).get(0));\n+        clone.preTraversal = this.integrateChild(GroupStep.generatePreTraversal(clone.valueTraversal));\n         return clone;\n     }\n \n@@ -147,12 +150,14 @@ public int hashCode() {\n \n     public static final class GroupBiOperator<K, V> implements BinaryOperator<Map<K, V>>, Serializable {\n \n+        private static final int SIZE_LIMIT = 1000;\n+\n         private Traversal.Admin<?, V> valueTraversal;\n-        private ReducingBarrierStep reducingBarrierStep = null;\n+        private Barrier barrierStep;\n \n         public GroupBiOperator(final Traversal.Admin<?, V> valueTraversal) {\n             this.valueTraversal = valueTraversal.clone();\n-            this.reducingBarrierStep = TraversalHelper.getFirstStepOfAssignableClass(ReducingBarrierStep.class, this.valueTraversal).orElse(null);\n+            this.barrierStep = TraversalHelper.getFirstStepOfAssignableClass(Barrier.class, this.valueTraversal).orElse(null);\n         }\n \n         public GroupBiOperator() {\n@@ -168,74 +173,114 @@ public GroupBiOperator() {\n                 if (null == objectA) {\n                     objectA = objectB;\n                 } else {\n-                    if (objectA instanceof TraverserSet) {\n-                        if (objectB instanceof TraverserSet) {\n+                    if (objectA instanceof Traverser.Admin) {\n+                        if (objectB instanceof Traverser.Admin) {\n+                            final TraverserSet set = new TraverserSet();\n+                            set.add((Traverser.Admin) objectA);\n+                            set.add((Traverser.Admin) objectB);\n+                            objectA = set;\n+                        } else if (objectB instanceof TraverserSet) {\n+                            final TraverserSet set = (TraverserSet) objectB;\n+                            set.add((Traverser.Admin) objectA);\n+                            if (null != this.barrierStep && set.size() > SIZE_LIMIT) {\n+                                this.valueTraversal.reset();\n+                                ((Step) this.barrierStep).addStarts(set.iterator());\n+                                objectA = this.barrierStep.nextBarrier();\n+                            } else {\n+                                objectA = objectB;\n+                            }\n+                        } else if (objectB instanceof Pair) {\n+                            final TraverserSet set = (TraverserSet) ((Pair) objectB).getValue0();\n+                            set.add((Traverser.Admin) objectA);\n+                            if (set.size() > SIZE_LIMIT) {\n+                                this.valueTraversal.reset();\n+                                ((Step) this.barrierStep).addStarts(set.iterator());\n+                                this.barrierStep.addBarrier(((Pair) objectB).getValue1());\n+                                objectA = this.barrierStep.nextBarrier();\n+                            } else {\n+                                objectA = Pair.with(set, ((Pair) objectB).getValue1());\n+                            }\n+                        } else {\n+                            objectA = Pair.with(new TraverserSet((Traverser.Admin) objectA), objectB);\n+                        }\n+                    } else if (objectA instanceof TraverserSet) {\n+                        if (objectB instanceof Traverser.Admin) {\n+                            ((TraverserSet) objectA).add((Traverser.Admin) objectB);\n+                            if (null != this.barrierStep && ((TraverserSet) objectA).size() > SIZE_LIMIT) {\n+                                this.valueTraversal.reset();\n+                                ((Step) this.barrierStep).addStarts(((TraverserSet) objectA).iterator());\n+                                objectA = this.barrierStep.nextBarrier();\n+                            }\n+                        } else if (objectB instanceof TraverserSet) {\n                             final TraverserSet set = (TraverserSet) objectA;\n                             set.addAll((TraverserSet) objectB);\n-                            if (null != this.reducingBarrierStep && set.size() > 1000) {\n+                            if (null != this.barrierStep && set.size() > SIZE_LIMIT) {\n                                 this.valueTraversal.reset();\n-                                this.reducingBarrierStep.addStarts(set.iterator());\n-                                objectA = this.reducingBarrierStep.nextBarrier();\n+                                ((Step) this.barrierStep).addStarts(set.iterator());\n+                                objectA = this.barrierStep.nextBarrier();\n                             }\n                         } else if (objectB instanceof Pair) {\n                             final TraverserSet set = (TraverserSet) objectA;\n                             set.addAll((TraverserSet) ((Pair) objectB).getValue0());\n-                            if (set.size() > 1000) {\n+                            if (set.size() > SIZE_LIMIT) {\n                                 this.valueTraversal.reset();\n-                                this.reducingBarrierStep.addStarts(set.iterator());\n-                                this.reducingBarrierStep.addBarrier(((Pair) objectB).getValue1());\n-                                objectA = this.reducingBarrierStep.nextBarrier();\n+                                ((Step) this.barrierStep).addStarts(set.iterator());\n+                                this.barrierStep.addBarrier(((Pair) objectB).getValue1());\n+                                objectA = this.barrierStep.nextBarrier();\n                             } else {\n                                 objectA = Pair.with(set, ((Pair) objectB).getValue1());\n                             }\n                         } else {\n                             objectA = Pair.with(objectA, objectB);\n                         }\n                     } else if (objectA instanceof Pair) {\n-                        if (objectB instanceof TraverserSet) {\n+                        if (objectB instanceof Traverser.Admin) {\n+                            ((TraverserSet) ((Pair) objectA).getValue0()).add((Traverser.Admin) objectB);\n+                        } else if (objectB instanceof TraverserSet) {\n                             final TraverserSet set = (TraverserSet) ((Pair) objectA).getValue0();\n                             set.addAll((TraverserSet) objectB);\n-                            if (null != this.reducingBarrierStep &&set.size() > 1000) {\n+                            if (null != this.barrierStep && set.size() > SIZE_LIMIT) {\n                                 this.valueTraversal.reset();\n-                                this.reducingBarrierStep.addStarts(set.iterator());\n-                                this.reducingBarrierStep.addBarrier(((Pair) objectA).getValue1());\n-                                objectA = this.reducingBarrierStep.nextBarrier();\n+                                ((Step) this.barrierStep).addStarts(set.iterator());\n+                                this.barrierStep.addBarrier(((Pair) objectA).getValue1());\n+                                objectA = this.barrierStep.nextBarrier();\n                             }\n                         } else if (objectB instanceof Pair) {\n                             this.valueTraversal.reset();\n-                            this.reducingBarrierStep.addBarrier(((Pair) objectA).getValue1());\n-                            this.reducingBarrierStep.addBarrier(((Pair) objectB).getValue1());\n-                            this.reducingBarrierStep.addStarts(((TraverserSet) ((Pair) objectA).getValue0()).iterator());\n-                            this.reducingBarrierStep.addStarts(((TraverserSet) ((Pair) objectB).getValue0()).iterator());\n-                            objectA = this.reducingBarrierStep.nextBarrier();\n+                            this.barrierStep.addBarrier(((Pair) objectA).getValue1());\n+                            this.barrierStep.addBarrier(((Pair) objectB).getValue1());\n+                            ((Step) this.barrierStep).addStarts(((TraverserSet) ((Pair) objectA).getValue0()).iterator());\n+                            ((Step) this.barrierStep).addStarts(((TraverserSet) ((Pair) objectB).getValue0()).iterator());\n+                            objectA = this.barrierStep.nextBarrier();\n                         } else {\n                             this.valueTraversal.reset();\n-                            this.reducingBarrierStep.addBarrier(((Pair) objectA).getValue1());\n-                            this.reducingBarrierStep.addBarrier(objectB);\n-                            this.reducingBarrierStep.addStarts(((TraverserSet) ((Pair) objectA).getValue0()).iterator());\n-                            objectA = this.reducingBarrierStep.nextBarrier();\n+                            this.barrierStep.addBarrier(((Pair) objectA).getValue1());\n+                            this.barrierStep.addBarrier(objectB);\n+                            ((Step) this.barrierStep).addStarts(((TraverserSet) ((Pair) objectA).getValue0()).iterator());\n+                            objectA = this.barrierStep.nextBarrier();\n                         }\n                     } else {\n-                        if (objectB instanceof TraverserSet) {\n+                        if (objectB instanceof Traverser.Admin) {\n+                            objectA = Pair.with(new TraverserSet<>((Traverser.Admin) objectB), objectA);\n+                        } else if (objectB instanceof TraverserSet) {\n                             objectA = Pair.with(objectB, objectA);\n                         } else if (objectB instanceof Pair) {\n                             this.valueTraversal.reset();\n-                            this.reducingBarrierStep.addBarrier(objectA);\n-                            this.reducingBarrierStep.addBarrier(((Pair) objectB).getValue1());\n-                            this.reducingBarrierStep.addStarts(((TraverserSet) ((Pair) objectB).getValue0()).iterator());\n-                            objectA = this.reducingBarrierStep.nextBarrier();\n+                            this.barrierStep.addBarrier(objectA);\n+                            this.barrierStep.addBarrier(((Pair) objectB).getValue1());\n+                            ((Step) this.barrierStep).addStarts(((TraverserSet) ((Pair) objectB).getValue0()).iterator());\n+                            objectA = this.barrierStep.nextBarrier();\n                         } else {\n                             this.valueTraversal.reset();\n-                            this.reducingBarrierStep.addBarrier(objectA);\n-                            this.reducingBarrierStep.addBarrier(objectB);\n-                            objectA = this.reducingBarrierStep.nextBarrier();\n+                            this.barrierStep.addBarrier(objectA);\n+                            this.barrierStep.addBarrier(objectB);\n+                            objectA = this.barrierStep.nextBarrier();\n                         }\n                     }\n                 }\n                 mapA.put(key, (V) objectA);\n             }\n             return mapA;\n-\n         }\n     }\n \n@@ -253,39 +298,34 @@ public GroupBiOperator() {\n         }\n     }\n \n-    public static List<Traversal.Admin<?, ?>> splitOnBarrierStep(final Traversal.Admin<?, ?> valueTraversal) {\n-        if (TraversalHelper.getFirstStepOfAssignableClass(Barrier.class, valueTraversal).isPresent()) {\n-            final Traversal.Admin<?, ?> first = __.identity().asAdmin();\n-            final Traversal.Admin<?, ?> second = __.identity().asAdmin();\n-            boolean onSecond = false;\n-            for (final Step step : valueTraversal.getSteps()) {\n-                if (step instanceof Barrier)\n-                    onSecond = true;\n-                if (onSecond)\n-                    second.addStep(step.clone());\n-                else\n-                    first.addStep(step.clone());\n-            }\n-            return Arrays.asList(first, second);\n-        } else {\n-            return Arrays.asList(valueTraversal.clone(), __.identity().asAdmin());\n+    public static Traversal.Admin<?, ?> generatePreTraversal(final Traversal.Admin<?, ?> valueTraversal) {\n+        if (!TraversalHelper.hasStepOfAssignableClass(Barrier.class, valueTraversal))\n+            return valueTraversal;\n+        final Traversal.Admin<?, ?> first = __.identity().asAdmin();\n+        for (final Step step : valueTraversal.getSteps()) {\n+            if (step instanceof Barrier)\n+                break;\n+            first.addStep(step.clone());\n         }\n+        return first.getSteps().size() == 1 ? null : first;\n     }\n \n     public static <K, V> Map<K, V> doFinalReduction(final Map<K, Object> map, final Traversal.Admin<?, V> valueTraversal) {\n         final Map<K, V> reducedMap = new HashMap<>(map.size());\n-        final ReducingBarrierStep reducingBarrierStep = TraversalHelper.getFirstStepOfAssignableClass(ReducingBarrierStep.class, valueTraversal).orElse(null);\n+        final Barrier reducingBarrierStep = TraversalHelper.getFirstStepOfAssignableClass(Barrier.class, valueTraversal).orElse(null);\n         IteratorUtils.removeOnNext(map.entrySet().iterator()).forEachRemaining(entry -> {\n             valueTraversal.reset();\n             if (null == reducingBarrierStep) {\n                 reducedMap.put(entry.getKey(), entry.getValue() instanceof TraverserSet ?\n                         ((TraverserSet<V>) entry.getValue()).iterator().next().get() :\n                         (V) entry.getValue());\n             } else {\n-                if (entry.getValue() instanceof TraverserSet)\n-                    reducingBarrierStep.addStarts(((TraverserSet) entry.getValue()).iterator());\n+                if (entry.getValue() instanceof Traverser.Admin)\n+                    ((Step) reducingBarrierStep).addStart((Traverser.Admin) entry.getValue());\n+                else if (entry.getValue() instanceof TraverserSet)\n+                    ((Step) reducingBarrierStep).addStarts(((TraverserSet) entry.getValue()).iterator());\n                 else if (entry.getValue() instanceof Pair) {\n-                    reducingBarrierStep.addStarts(((TraverserSet) (((Pair) entry.getValue()).getValue0())).iterator());\n+                    ((Step) reducingBarrierStep).addStarts(((TraverserSet) (((Pair) entry.getValue()).getValue0())).iterator());\n                     reducingBarrierStep.addBarrier((((Pair) entry.getValue()).getValue1()));\n                 } else\n                     reducingBarrierStep.addBarrier(entry.getValue());", "filename": "gremlin-core/src/main/java/org/apache/tinkerpop/gremlin/process/traversal/step/map/GroupStep.java"}, {"additions": 11, "raw_url": "https://github.com/apache/tinkerpop/raw/e087123ca9bf513a555b3666a201905df43d8f7c/gremlin-core/src/main/java/org/apache/tinkerpop/gremlin/process/traversal/step/sideEffect/GroupSideEffectStep.java", "blob_url": "https://github.com/apache/tinkerpop/blob/e087123ca9bf513a555b3666a201905df43d8f7c/gremlin-core/src/main/java/org/apache/tinkerpop/gremlin/process/traversal/step/sideEffect/GroupSideEffectStep.java", "sha": "b5deb02c296ec9360668624989e26376c96d865b", "changes": 20, "status": "modified", "deletions": 9, "contents_url": "https://api.github.com/repos/apache/tinkerpop/contents/gremlin-core/src/main/java/org/apache/tinkerpop/gremlin/process/traversal/step/sideEffect/GroupSideEffectStep.java?ref=e087123ca9bf513a555b3666a201905df43d8f7c", "patch": "@@ -53,7 +53,7 @@ public GroupSideEffectStep(final Traversal.Admin traversal, final String sideEff\n         super(traversal);\n         this.sideEffectKey = sideEffectKey;\n         this.valueTraversal = this.integrateChild(__.fold().asAdmin());\n-        this.preTraversal = this.integrateChild(GroupStep.splitOnBarrierStep(this.valueTraversal).get(0));\n+        this.preTraversal = this.integrateChild(GroupStep.generatePreTraversal(this.valueTraversal));\n         this.getTraversal().getSideEffects().registerIfAbsent(this.sideEffectKey, HashMapSupplier.instance(), new GroupStep.GroupBiOperator<>(this.valueTraversal));\n     }\n \n@@ -64,7 +64,7 @@ public void modulateBy(final Traversal.Admin<?, ?> kvTraversal) {\n             this.state = 'v';\n         } else if ('v' == this.state) {\n             this.valueTraversal = this.integrateChild(GroupStep.convertValueTraversal(kvTraversal));\n-            this.preTraversal = this.integrateChild(GroupStep.splitOnBarrierStep(this.valueTraversal).get(0));\n+            this.preTraversal = this.integrateChild(GroupStep.generatePreTraversal(this.valueTraversal));\n             this.getTraversal().getSideEffects().register(this.sideEffectKey, null, new GroupStep.GroupBiOperator<>(this.valueTraversal));\n             this.state = 'x';\n         } else {\n@@ -75,13 +75,15 @@ public void modulateBy(final Traversal.Admin<?, ?> kvTraversal) {\n     @Override\n     protected void sideEffect(final Traverser.Admin<S> traverser) {\n         final Map<K, V> map = new HashMap<>(1);\n-        final TraverserSet midTraversers = new TraverserSet<>();\n-        this.preTraversal.reset();\n-        this.preTraversal.addStart(traverser.split());\n-        while (this.preTraversal.hasNext()) {\n-            midTraversers.add(this.preTraversal.getEndStep().next());\n+        if (null == this.preTraversal) {\n+            map.put(TraversalUtil.applyNullable(traverser, this.keyTraversal), (V) traverser.split());\n+        } else {\n+            final TraverserSet traverserSet = new TraverserSet<>();\n+            this.preTraversal.reset();\n+            this.preTraversal.addStart(traverser.split());\n+            this.preTraversal.getEndStep().forEachRemaining(traverserSet::add);\n+            map.put(TraversalUtil.applyNullable(traverser, this.keyTraversal), (V) traverserSet);\n         }\n-        map.put(TraversalUtil.applyNullable(traverser, this.keyTraversal), (V) midTraversers);\n         this.getTraversal().getSideEffects().add(this.sideEffectKey, map);\n     }\n \n@@ -115,7 +117,7 @@ public String toString() {\n         if (null != this.keyTraversal)\n             clone.keyTraversal = this.keyTraversal.clone();\n         clone.valueTraversal = this.valueTraversal.clone();\n-        clone.preTraversal = this.integrateChild(GroupStep.splitOnBarrierStep(clone.valueTraversal).get(0));\n+        clone.preTraversal = this.integrateChild(GroupStep.generatePreTraversal(clone.valueTraversal));\n         return clone;\n     }\n ", "filename": "gremlin-core/src/main/java/org/apache/tinkerpop/gremlin/process/traversal/step/sideEffect/GroupSideEffectStep.java"}, {"additions": 1, "raw_url": "https://github.com/apache/tinkerpop/raw/e087123ca9bf513a555b3666a201905df43d8f7c/gremlin-groovy-test/src/main/groovy/org/apache/tinkerpop/gremlin/process/traversal/step/sideEffect/GroovyGroupTest.groovy", "blob_url": "https://github.com/apache/tinkerpop/blob/e087123ca9bf513a555b3666a201905df43d8f7c/gremlin-groovy-test/src/main/groovy/org/apache/tinkerpop/gremlin/process/traversal/step/sideEffect/GroovyGroupTest.groovy", "sha": "156b350e7fddad9cdf48892ee4fabb7d46d309be", "changes": 2, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/tinkerpop/contents/gremlin-groovy-test/src/main/groovy/org/apache/tinkerpop/gremlin/process/traversal/step/sideEffect/GroovyGroupTest.groovy?ref=e087123ca9bf513a555b3666a201905df43d8f7c", "patch": "@@ -111,7 +111,7 @@ public abstract class GroovyGroupTest {\n \n         @Override\n         public Traversal<Vertex, Map<Long, Map<String, List<Vertex>>>> get_g_V_group_byXbothE_countX_byXgroup_byXlabelXX() {\n-            new ScriptTraversal<>(g, \"gremlin-groovy\", \"g.V.group().by(bothE().count).by(group.by(label))\")\n+            new ScriptTraversal<>(g, \"gremlin-groovy\", \"g.V.group().by(bothE().count).by(group().by(label))\")\n         }\n     }\n }", "filename": "gremlin-groovy-test/src/main/groovy/org/apache/tinkerpop/gremlin/process/traversal/step/sideEffect/GroovyGroupTest.groovy"}], "repo": "tinkerpop"}, {"commit": "https://github.com/apache/tinkerpop/commit/3d70c3d15d4591acab84420f86991cd98a187c38", "parent": "https://github.com/apache/tinkerpop/commit/b4d0ef98aee1bde018698e726f0374ce61a37f3a", "message": "fixed an NPE bug in profiling GroupSideEffectStep. It has to deal with how GroupSideEffectStep breaks apart the valueTraversal into a pre/post-traversal for pre-proecessing and reduction. While I was testing, I found another bug where if the reducing traversal has no data, then don't .next() it. Basically, it is possible for Profiling to get a traversal that has not been next'd because the traversal's pre/post was being worked with.", "bug_id": "tinkerpop_19", "file": [{"additions": 1, "raw_url": "https://github.com/apache/tinkerpop/raw/3d70c3d15d4591acab84420f86991cd98a187c38/CHANGELOG.asciidoc", "blob_url": "https://github.com/apache/tinkerpop/blob/3d70c3d15d4591acab84420f86991cd98a187c38/CHANGELOG.asciidoc", "sha": "766b135eb239710e62e9b719d7e0144b5c3a3119", "changes": 1, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/tinkerpop/contents/CHANGELOG.asciidoc?ref=3d70c3d15d4591acab84420f86991cd98a187c38", "patch": "@@ -26,6 +26,7 @@ image::https://raw.githubusercontent.com/apache/tinkerpop/master/docs/static/ima\n TinkerPop 3.2.4 (Release Date: NOT OFFICIALLY RELEASED YET)\n ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n \n+* Fixed a `NullPointerException` bug with profiling `GroupSideEffectStep` in OLTP.\n * Improved ability to release resources in `GraphProvider` instances in the test suite.\n * Added a `force` option for killing sessions without waiting for transaction close or timeout of a currently running job or multiple jobs.\n * Deprecated `Session.kill()` and `Session.manualKill()`.", "filename": "CHANGELOG.asciidoc"}, {"additions": 20, "raw_url": "https://github.com/apache/tinkerpop/raw/3d70c3d15d4591acab84420f86991cd98a187c38/gremlin-core/src/main/java/org/apache/tinkerpop/gremlin/process/traversal/step/map/GroupStep.java", "blob_url": "https://github.com/apache/tinkerpop/blob/3d70c3d15d4591acab84420f86991cd98a187c38/gremlin-core/src/main/java/org/apache/tinkerpop/gremlin/process/traversal/step/map/GroupStep.java", "sha": "737c5f9ccc165be802c5565c1a144a5f12d9ec0d", "changes": 33, "status": "modified", "deletions": 13, "contents_url": "https://api.github.com/repos/apache/tinkerpop/contents/gremlin-core/src/main/java/org/apache/tinkerpop/gremlin/process/traversal/step/map/GroupStep.java?ref=3d70c3d15d4591acab84420f86991cd98a187c38", "patch": "@@ -22,7 +22,6 @@\n import org.apache.tinkerpop.gremlin.process.traversal.Step;\n import org.apache.tinkerpop.gremlin.process.traversal.Traversal;\n import org.apache.tinkerpop.gremlin.process.traversal.Traverser;\n-import org.apache.tinkerpop.gremlin.process.traversal.dsl.graph.DefaultGraphTraversal;\n import org.apache.tinkerpop.gremlin.process.traversal.dsl.graph.__;\n import org.apache.tinkerpop.gremlin.process.traversal.lambda.ElementValueTraversal;\n import org.apache.tinkerpop.gremlin.process.traversal.lambda.FunctionTraverser;\n@@ -61,8 +60,8 @@\n \n     private char state = 'k';\n     private Traversal.Admin<S, K> keyTraversal = null;\n-    private Traversal.Admin<S, ?> preTraversal;\n-    private Traversal.Admin<S, V> valueTraversal;\n+    private Traversal.Admin<S, ?> preTraversal = null;\n+    private Traversal.Admin<S, V> valueTraversal = null;\n \n     public GroupStep(final Traversal.Admin traversal) {\n         super(traversal);\n@@ -109,10 +108,12 @@ public String toString() {\n \n     @Override\n     public List<Traversal.Admin<?, ?>> getLocalChildren() {\n-        final List<Traversal.Admin<?, ?>> children = new ArrayList<>(2);\n+        final List<Traversal.Admin<?, ?>> children = new ArrayList<>(3);\n         if (null != this.keyTraversal)\n-            children.add((Traversal.Admin) this.keyTraversal);\n+            children.add(this.keyTraversal);\n         children.add(this.valueTraversal);\n+        if (null != this.preTraversal)\n+            children.add(this.preTraversal);\n         return children;\n     }\n \n@@ -127,7 +128,8 @@ public String toString() {\n         if (null != this.keyTraversal)\n             clone.keyTraversal = this.keyTraversal.clone();\n         clone.valueTraversal = this.valueTraversal.clone();\n-        clone.preTraversal = this.integrateChild(GroupStep.generatePreTraversal(clone.valueTraversal));\n+        if (null != this.preTraversal)\n+            clone.preTraversal = this.preTraversal.clone();\n         return clone;\n     }\n \n@@ -332,26 +334,30 @@ private void readObject(final ObjectInputStream inputStream) throws IOException,\n \n     public static Traversal.Admin<?, ?> generatePreTraversal(final Traversal.Admin<?, ?> valueTraversal) {\n         if (!TraversalHelper.hasStepOfAssignableClass(Barrier.class, valueTraversal))\n-            return valueTraversal;\n+            return valueTraversal.clone();\n         final Traversal.Admin<?, ?> first = __.identity().asAdmin();\n+        boolean updated = false;\n         for (final Step step : valueTraversal.getSteps()) {\n             if (step instanceof Barrier)\n                 break;\n             first.addStep(step.clone());\n+            updated = true;\n         }\n-        return first.getSteps().size() == 1 ? null : first;\n+        return updated ? first : null;\n     }\n \n     public static <K, V> Map<K, V> doFinalReduction(final Map<K, Object> map, final Traversal.Admin<?, V> valueTraversal) {\n         final Map<K, V> reducedMap = new HashMap<>(map.size());\n         final Barrier reducingBarrierStep = TraversalHelper.getFirstStepOfAssignableClass(Barrier.class, valueTraversal).orElse(null);\n         IteratorUtils.removeOnNext(map.entrySet().iterator()).forEachRemaining(entry -> {\n-            valueTraversal.reset();\n             if (null == reducingBarrierStep) {\n-                reducedMap.put(entry.getKey(), entry.getValue() instanceof TraverserSet ?\n-                        ((TraverserSet<V>) entry.getValue()).iterator().next().get() :\n-                        (V) entry.getValue());\n+                if (entry.getValue() instanceof TraverserSet) {\n+                    if (!((TraverserSet) entry.getValue()).isEmpty())\n+                        reducedMap.put(entry.getKey(), ((TraverserSet<V>) entry.getValue()).peek().get());\n+                } else\n+                    reducedMap.put(entry.getKey(), (V) entry.getValue());\n             } else {\n+                valueTraversal.reset();\n                 if (entry.getValue() instanceof Traverser.Admin)\n                     ((Step) reducingBarrierStep).addStart((Traverser.Admin) entry.getValue());\n                 else if (entry.getValue() instanceof TraverserSet)\n@@ -361,7 +367,8 @@ else if (entry.getValue() instanceof Pair) {\n                     reducingBarrierStep.addBarrier((((Pair) entry.getValue()).getValue1()));\n                 } else\n                     reducingBarrierStep.addBarrier(entry.getValue());\n-                reducedMap.put(entry.getKey(), valueTraversal.next());\n+                if (valueTraversal.hasNext())\n+                    reducedMap.put(entry.getKey(), valueTraversal.next());\n             }\n         });\n         assert map.isEmpty();", "filename": "gremlin-core/src/main/java/org/apache/tinkerpop/gremlin/process/traversal/step/map/GroupStep.java"}, {"additions": 7, "raw_url": "https://github.com/apache/tinkerpop/raw/3d70c3d15d4591acab84420f86991cd98a187c38/gremlin-core/src/main/java/org/apache/tinkerpop/gremlin/process/traversal/step/sideEffect/GroupSideEffectStep.java", "blob_url": "https://github.com/apache/tinkerpop/blob/3d70c3d15d4591acab84420f86991cd98a187c38/gremlin-core/src/main/java/org/apache/tinkerpop/gremlin/process/traversal/step/sideEffect/GroupSideEffectStep.java", "sha": "f2699e0ef8b187d508b79c6acd2e71f59f192e7d", "changes": 11, "status": "modified", "deletions": 4, "contents_url": "https://api.github.com/repos/apache/tinkerpop/contents/gremlin-core/src/main/java/org/apache/tinkerpop/gremlin/process/traversal/step/sideEffect/GroupSideEffectStep.java?ref=3d70c3d15d4591acab84420f86991cd98a187c38", "patch": "@@ -45,7 +45,7 @@\n     private char state = 'k';\n     private Traversal.Admin<S, K> keyTraversal = null;\n     private Traversal.Admin<S, ?> preTraversal = null;\n-    private Traversal.Admin<S, V> valueTraversal = this.integrateChild(__.fold().asAdmin());\n+    private Traversal.Admin<S, V> valueTraversal = null;\n     ///\n     private String sideEffectKey;\n \n@@ -99,10 +99,12 @@ public String toString() {\n \n     @Override\n     public List<Traversal.Admin<?, ?>> getLocalChildren() {\n-        final List<Traversal.Admin<?, ?>> children = new ArrayList<>(2);\n+        final List<Traversal.Admin<?, ?>> children = new ArrayList<>(3);\n         if (null != this.keyTraversal)\n-            children.add((Traversal.Admin) this.keyTraversal);\n+            children.add(this.keyTraversal);\n         children.add(this.valueTraversal);\n+        if (null != this.preTraversal)\n+            children.add(this.preTraversal);\n         return children;\n     }\n \n@@ -117,7 +119,8 @@ public String toString() {\n         if (null != this.keyTraversal)\n             clone.keyTraversal = this.keyTraversal.clone();\n         clone.valueTraversal = this.valueTraversal.clone();\n-        clone.preTraversal = this.integrateChild(GroupStep.generatePreTraversal(clone.valueTraversal));\n+        if (null != this.preTraversal)\n+            clone.preTraversal = this.preTraversal.clone();\n         return clone;\n     }\n ", "filename": "gremlin-core/src/main/java/org/apache/tinkerpop/gremlin/process/traversal/step/sideEffect/GroupSideEffectStep.java"}, {"additions": 39, "raw_url": "https://github.com/apache/tinkerpop/raw/3d70c3d15d4591acab84420f86991cd98a187c38/gremlin-core/src/main/java/org/apache/tinkerpop/gremlin/process/traversal/util/DefaultTraversalMetrics.java", "blob_url": "https://github.com/apache/tinkerpop/blob/3d70c3d15d4591acab84420f86991cd98a187c38/gremlin-core/src/main/java/org/apache/tinkerpop/gremlin/process/traversal/util/DefaultTraversalMetrics.java", "sha": "ecf28e002d01e85c5c4e9150e3b95b66be826896", "changes": 76, "status": "modified", "deletions": 37, "contents_url": "https://api.github.com/repos/apache/tinkerpop/contents/gremlin-core/src/main/java/org/apache/tinkerpop/gremlin/process/traversal/util/DefaultTraversalMetrics.java?ref=3d70c3d15d4591acab84420f86991cd98a187c38", "patch": "@@ -37,6 +37,7 @@\n \n /**\n  * @author Bob Briody (http://bobbriody.com)\n+ * @author Marko A. Rodriguez (http://markorodriguez.com)\n  */\n public final class DefaultTraversalMetrics implements TraversalMetrics, Serializable {\n     /**\n@@ -61,29 +62,29 @@ public DefaultTraversalMetrics() {\n      */\n     public DefaultTraversalMetrics(final long totalStepDurationNs, final List<MutableMetrics> metricsMap) {\n         this.totalStepDuration = totalStepDurationNs;\n-        this.computedMetrics = new LinkedHashMap<>(metrics.size());\n-        metricsMap.forEach(m -> computedMetrics.put(m.getId(), m.getImmutableClone()));\n+        this.computedMetrics = new LinkedHashMap<>(this.metrics.size());\n+        metricsMap.forEach(metric -> this.computedMetrics.put(metric.getId(), metric.getImmutableClone()));\n     }\n \n     @Override\n     public long getDuration(final TimeUnit unit) {\n-        return unit.convert(totalStepDuration, MutableMetrics.SOURCE_UNIT);\n+        return unit.convert(this.totalStepDuration, MutableMetrics.SOURCE_UNIT);\n     }\n \n     @Override\n     public Metrics getMetrics(final int index) {\n         // adjust index to account for the injected profile steps\n-        return (Metrics) computedMetrics.get(indexToLabelMap.get(index));\n+        return this.computedMetrics.get(this.indexToLabelMap.get(index));\n     }\n \n     @Override\n     public Metrics getMetrics(final String id) {\n-        return computedMetrics.get(id);\n+        return this.computedMetrics.get(id);\n     }\n \n     @Override\n     public Collection<ImmutableMetrics> getMetrics() {\n-        return computedMetrics.values();\n+        return this.computedMetrics.values();\n     }\n \n     @Override\n@@ -96,7 +97,7 @@ public String toString() {\n \n         sb.append(\"\\n=============================================================================================================\");\n \n-        appendMetrics(computedMetrics.values(), sb, 0);\n+        appendMetrics(this.computedMetrics.values(), sb, 0);\n \n         // Append total duration\n         sb.append(String.format(\"%n%50s %21s %11s %15.3f %8s\",\n@@ -150,25 +151,25 @@ private void appendMetrics(final Collection<? extends Metrics> metrics, final St\n \n     private void computeTotals() {\n         // Create temp list of ordered metrics\n-        List<MutableMetrics> tempMetrics = new ArrayList<>(metrics.size());\n-        for (String label : indexToLabelMap.values()) {\n+        final List<MutableMetrics> tempMetrics = new ArrayList<>(this.metrics.size());\n+        for (final String label : this.indexToLabelMap.values()) {\n             // The indexToLabelMap is sorted by index (key)\n-            tempMetrics.add(metrics.get(label).clone());\n+            tempMetrics.add(this.metrics.get(label).clone());\n         }\n \n         // Calculate total duration\n         this.totalStepDuration = 0;\n-        tempMetrics.forEach(m -> this.totalStepDuration += m.getDuration(MutableMetrics.SOURCE_UNIT));\n+        tempMetrics.forEach(metric -> this.totalStepDuration += metric.getDuration(MutableMetrics.SOURCE_UNIT));\n \n         // Assign %'s\n         tempMetrics.forEach(m -> {\n-            double dur = m.getDuration(TimeUnit.NANOSECONDS) * 100.d / this.totalStepDuration;\n+            final double dur = m.getDuration(TimeUnit.NANOSECONDS) * 100.d / this.totalStepDuration;\n             m.setAnnotation(PERCENT_DURATION_KEY, dur);\n         });\n \n         // Store immutable instances of the calculated metrics\n-        computedMetrics = new LinkedHashMap<>(metrics.size());\n-        tempMetrics.forEach(it -> computedMetrics.put(it.getId(), it.getImmutableClone()));\n+        this.computedMetrics = new LinkedHashMap<>(this.metrics.size());\n+        tempMetrics.forEach(it -> this.computedMetrics.put(it.getId(), it.getImmutableClone()));\n     }\n \n     public static DefaultTraversalMetrics merge(final Iterator<DefaultTraversalMetrics> toMerge) {\n@@ -186,7 +187,7 @@ public static DefaultTraversalMetrics merge(final Iterator<DefaultTraversalMetri\n \n                     newTraversalMetrics.metrics.put(metricsId, aggregateMetrics);\n                     // Set the index of the Metrics\n-                    for (Map.Entry<Integer, String> entry : inTraversalMetrics.indexToLabelMap.entrySet()) {\n+                    for (final Map.Entry<Integer, String> entry : inTraversalMetrics.indexToLabelMap.entrySet()) {\n                         if (metricsId.equals(entry.getValue())) {\n                             newTraversalMetrics.indexToLabelMap.put(entry.getKey(), metricsId);\n                             break;\n@@ -199,7 +200,7 @@ public static DefaultTraversalMetrics merge(final Iterator<DefaultTraversalMetri\n         return newTraversalMetrics;\n     }\n \n-    public void setMetrics(Traversal.Admin traversal, boolean onGraphComputer) {\n+    public void setMetrics(final Traversal.Admin traversal, final boolean onGraphComputer) {\n         addTopLevelMetrics(traversal, onGraphComputer);\n         handleNestedTraversals(traversal, null, onGraphComputer);\n         computeTotals();\n@@ -222,36 +223,37 @@ private void addTopLevelMetrics(Traversal.Admin traversal, final boolean onGraph\n         }\n     }\n \n-    private void handleNestedTraversals(Traversal.Admin traversal, MutableMetrics parentMetrics, boolean onGraphComputer) {\n+    private void handleNestedTraversals(final Traversal.Admin traversal, final MutableMetrics parentMetrics, final boolean onGraphComputer) {\n         long prevDur = 0;\n-        for (int ii = 0; ii < traversal.getSteps().size(); ii++) {\n-            Step step = (Step) traversal.getSteps().get(ii);\n-            if (!(step instanceof ProfileStep)) {\n+        for (int i = 0; i < traversal.getSteps().size(); i++) {\n+            final Step step = (Step) traversal.getSteps().get(i);\n+            if (!(step instanceof ProfileStep))\n                 continue;\n-            }\n \n             final MutableMetrics metrics = onGraphComputer ?\n                     traversal.getSideEffects().get(step.getId()) :\n                     ((ProfileStep) step).getMetrics();\n \n-            if (!onGraphComputer) {\n-                // subtract upstream duration.\n-                long durBeforeAdjustment = metrics.getDuration(TimeUnit.NANOSECONDS);\n-                // adjust duration\n-                metrics.setDuration(metrics.getDuration(TimeUnit.NANOSECONDS) - prevDur, TimeUnit.NANOSECONDS);\n-                prevDur = durBeforeAdjustment;\n-            }\n-\n-            if (parentMetrics != null) {\n-                parentMetrics.addNested(metrics);\n-            }\n+            if (null != metrics) { // this happens when a particular branch never received a .next() call (the metrics were never initialized)\n+                if (!onGraphComputer) {\n+                    // subtract upstream duration.\n+                    long durBeforeAdjustment = metrics.getDuration(TimeUnit.NANOSECONDS);\n+                    // adjust duration\n+                    metrics.setDuration(metrics.getDuration(TimeUnit.NANOSECONDS) - prevDur, TimeUnit.NANOSECONDS);\n+                    prevDur = durBeforeAdjustment;\n+                }\n \n-            if (step.getPreviousStep() instanceof TraversalParent) {\n-                for (Traversal.Admin<?, ?> t : ((TraversalParent) step.getPreviousStep()).getLocalChildren()) {\n-                    handleNestedTraversals(t, metrics, onGraphComputer);\n+                if (parentMetrics != null) {\n+                    parentMetrics.addNested(metrics);\n                 }\n-                for (Traversal.Admin<?, ?> t : ((TraversalParent) step.getPreviousStep()).getGlobalChildren()) {\n-                    handleNestedTraversals(t, metrics, onGraphComputer);\n+\n+                if (step.getPreviousStep() instanceof TraversalParent) {\n+                    for (Traversal.Admin<?, ?> t : ((TraversalParent) step.getPreviousStep()).getLocalChildren()) {\n+                        handleNestedTraversals(t, metrics, onGraphComputer);\n+                    }\n+                    for (Traversal.Admin<?, ?> t : ((TraversalParent) step.getPreviousStep()).getGlobalChildren()) {\n+                        handleNestedTraversals(t, metrics, onGraphComputer);\n+                    }\n                 }\n             }\n         }", "filename": "gremlin-core/src/main/java/org/apache/tinkerpop/gremlin/process/traversal/util/DefaultTraversalMetrics.java"}, {"additions": 5, "raw_url": "https://github.com/apache/tinkerpop/raw/3d70c3d15d4591acab84420f86991cd98a187c38/gremlin-groovy-test/src/main/groovy/org/apache/tinkerpop/gremlin/process/traversal/step/sideEffect/GroovyGroupTest.groovy", "blob_url": "https://github.com/apache/tinkerpop/blob/3d70c3d15d4591acab84420f86991cd98a187c38/gremlin-groovy-test/src/main/groovy/org/apache/tinkerpop/gremlin/process/traversal/step/sideEffect/GroovyGroupTest.groovy", "sha": "84da296561380006687fcd3f09f406d3a4787b07", "changes": 5, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/tinkerpop/contents/gremlin-groovy-test/src/main/groovy/org/apache/tinkerpop/gremlin/process/traversal/step/sideEffect/GroovyGroupTest.groovy?ref=3d70c3d15d4591acab84420f86991cd98a187c38", "patch": "@@ -118,5 +118,10 @@ public abstract class GroovyGroupTest {\n         public Traversal<Vertex, Map<String, Map<String, Number>>> get_g_V_outXfollowedByX_group_byXsongTypeX_byXbothE_group_byXlabelX_byXweight_sumXX() {\n             new ScriptTraversal<>(g, \"gremlin-groovy\", \"g.V.out('followedBy').group.by('songType').by(bothE().group.by(label).by(values('weight').sum))\")\n         }\n+\n+        @Override\n+        public Traversal<Vertex, Map<String, String>> get_g_V_groupXmX_byXnameX_byXinXknowsX_nameX_capXmX() {\n+            new ScriptTraversal<>(g, \"gremlin-groovy\", \"g.V.group('m').by('name').by(__.in('knows').name).cap('m')\")\n+        }\n     }\n }", "filename": "gremlin-groovy-test/src/main/groovy/org/apache/tinkerpop/gremlin/process/traversal/step/sideEffect/GroovyGroupTest.groovy"}, {"additions": 23, "raw_url": "https://github.com/apache/tinkerpop/raw/3d70c3d15d4591acab84420f86991cd98a187c38/gremlin-test/src/main/java/org/apache/tinkerpop/gremlin/process/traversal/step/sideEffect/GroupTest.java", "blob_url": "https://github.com/apache/tinkerpop/blob/3d70c3d15d4591acab84420f86991cd98a187c38/gremlin-test/src/main/java/org/apache/tinkerpop/gremlin/process/traversal/step/sideEffect/GroupTest.java", "sha": "036c8c8a8342f383be1eda15b510aaef92d11ba4", "changes": 23, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/tinkerpop/contents/gremlin-test/src/main/java/org/apache/tinkerpop/gremlin/process/traversal/step/sideEffect/GroupTest.java?ref=3d70c3d15d4591acab84420f86991cd98a187c38", "patch": "@@ -88,6 +88,8 @@\n \n     public abstract Traversal<Vertex, Map<String, Map<String, Number>>> get_g_V_outXfollowedByX_group_byXsongTypeX_byXbothE_group_byXlabelX_byXweight_sumXX();\n \n+    public abstract Traversal<Vertex, Map<String, String>> get_g_V_groupXmX_byXnameX_byXinXknowsX_nameX_capXmX();\n+\n     @Test\n     @LoadGraphWith(MODERN)\n     public void g_V_group_byXnameX() {\n@@ -364,6 +366,7 @@ public void g_V_repeatXunionXoutXknowsX_groupXaX_byXageX__outXcreatedX_groupXbX_\n     @LoadGraphWith(MODERN)\n     public void g_V_group_byXbothE_countX_byXgroup_byXlabelXX() {\n         final Traversal<Vertex, Map<Long, Map<String, List<Vertex>>>> traversal = get_g_V_group_byXbothE_countX_byXgroup_byXlabelXX();\n+        printTraversalForm(traversal);\n         final Map<Long, Map<String, List<Vertex>>> map = traversal.next();\n         assertFalse(traversal.hasNext());\n         assertEquals(2, map.size());\n@@ -399,6 +402,7 @@ public void g_V_group_byXbothE_countX_byXgroup_byXlabelXX() {\n     @LoadGraphWith(GRATEFUL)\n     public void g_V_outXfollowedByX_group_byXsongTypeX_byXbothE_group_byXlabelX_byXweight_sumXX() {\n         final Traversal<Vertex, Map<String, Map<String, Number>>> traversal = get_g_V_outXfollowedByX_group_byXsongTypeX_byXbothE_group_byXlabelX_byXweight_sumXX();\n+        printTraversalForm(traversal);\n         final Map<String, Map<String, Number>> map = traversal.next();\n         assertFalse(traversal.hasNext());\n         assertEquals(3, map.size());\n@@ -423,6 +427,20 @@ public void g_V_outXfollowedByX_group_byXsongTypeX_byXbothE_group_byXlabelX_byXw\n         assertEquals(0, subMap.get(\"sungBy\").intValue());\n     }\n \n+    @Test\n+    @LoadGraphWith(MODERN)\n+    public void g_V_groupXmX_byXnameX_byXinXknowsX_nameX_capXmX() {\n+        final Traversal<Vertex, Map<String, String>> traversal = get_g_V_groupXmX_byXnameX_byXinXknowsX_nameX_capXmX();\n+        printTraversalForm(traversal);\n+        final Map<String, String> map = traversal.next();\n+        assertFalse(traversal.hasNext());\n+        assertEquals(2, map.size());\n+        assertEquals(\"marko\", map.get(\"vadas\"));\n+        assertEquals(\"marko\", map.get(\"josh\"));\n+\n+        checkSideEffects(traversal.asAdmin().getSideEffects(), \"m\", HashMap.class);\n+    }\n+\n     public static class Traversals extends GroupTest {\n \n         @Override\n@@ -514,5 +532,10 @@ public void g_V_outXfollowedByX_group_byXsongTypeX_byXbothE_group_byXlabelX_byXw\n         public Traversal<Vertex, Map<String, Map<String, Number>>> get_g_V_outXfollowedByX_group_byXsongTypeX_byXbothE_group_byXlabelX_byXweight_sumXX() {\n             return g.V().out(\"followedBy\").<String, Map<String, Number>>group().by(\"songType\").by(__.bothE().group().by(T.label).by(__.values(\"weight\").sum()));\n         }\n+\n+        @Override\n+        public Traversal<Vertex, Map<String, String>> get_g_V_groupXmX_byXnameX_byXinXknowsX_nameX_capXmX() {\n+            return g.V().group(\"m\").by(\"name\").by(__.in(\"knows\").values(\"name\")).cap(\"m\");\n+        }\n     }\n }", "filename": "gremlin-test/src/main/java/org/apache/tinkerpop/gremlin/process/traversal/step/sideEffect/GroupTest.java"}], "repo": "tinkerpop"}]
