{
    "commons-codec_5d856dd": {
        "bug_id": "commons-codec_5d856dd",
        "commit": "https://github.com/apache/commons-codec/commit/5d856dd285cad2a89b6e33f9e93092eab45872c2",
        "file": [
            {
                "additions": 6,
                "blob_url": "https://github.com/apache/commons-codec/blob/5d856dd285cad2a89b6e33f9e93092eab45872c2/RELEASE-NOTES.txt",
                "changes": 38,
                "contents_url": "https://api.github.com/repos/apache/commons-codec/contents/RELEASE-NOTES.txt?ref=5d856dd285cad2a89b6e33f9e93092eab45872c2",
                "deletions": 32,
                "filename": "RELEASE-NOTES.txt",
                "patch": "@@ -1,4 +1,4 @@\n-The commons-codec team is pleased to announce the Codec 1.3 release! \n+The commons-codec team is pleased to announce the Codec 1.3.1 release! \n \n http://jakarta.apache.org/commons/codec/\n \n@@ -11,42 +11,16 @@ Changes in this version include:\n \n   New Features:\n \n-o BinaryCodec: Encodes and decodes binary to and from Strings of 0s and 1s. \n-  Issue: 27813. Thanks to Alex Karasulu. \n-o QuotedPrintableCodec: Codec for RFC 1521 MIME (Multipurpose Internet Mail \n-  Extensions) Part One. Rules #3, #4, and #5 of the quoted-printable spec are \n-  not implemented yet. See also issue 27789. Issue: 26617. Thanks to Oleg \n-  Kalnichevski. \n-o BCodec: Identical to the Base64 encoding defined by RFC 1521 and allows a \n-  character set to be specified. Issue: 26617. Thanks to Oleg Kalnichevski. \n-o QCodec: Similar to the Quoted-Printable content-transfer-encoding defined \n-  in RFC 1521 and designed to allow text containing mostly ASCII characters \n-  to be decipherable on an ASCII terminal without decoding. Issue: 26617. \n-  Thanks to Oleg Kalnichevski. \n-o Soundex: Implemented the DIFFERENCE algorithm. Issue: 25243. Thanks to \n-  Matthew Inger. \n-o RefinedSoundex: Implemented the DIFFERENCE algorithm. Issue: 25243. Thanks \n-  to Matthew Inger. \n-\n+o \n   Fixed bugs:\n \n-o The default URL encoding logic was broken. Issue: 25995. Thanks to Oleg \n-  Kalnichevski. \n-o Base64 chunked encoding not compliant with RFC 2045 section 2.1 CRLF. \n-  Issue: 27781. Thanks to Gary D. Gregory. \n-o Hex converts illegal characters to 255. Issue: 28455. \n-o Metaphone now correctly handles a silent B in a word that ends in MB. \n-  \"COMB\" is encoded as \"KM\", before this fix \"COMB\" was encoded as \"KMB\". \n-  Issue: 28457. \n-o Added missing tags in Javadoc comments. \n-o General Javadoc improvements. \n+o Using US_ENGLISH in Soundex causes an NPE.  Issue addressed and\n+  test case added to SoundexTest.\n+  Issue: 37894. Thanks to Reggie Riser. \n \n   Changes:\n \n-o This version is relesed under the Apache License 2.0 , please see \n-  LICENSE.txt. Previous versions were released under the Apache License 1.1. \n-o The Board recommendation to remove Javadoc author tags has been \n-  implemented. All author tags are now \"Apache Software Foundation\".  \n+o \n \n Have fun!\n -The commons-codec team",
                "raw_url": "https://github.com/apache/commons-codec/raw/5d856dd285cad2a89b6e33f9e93092eab45872c2/RELEASE-NOTES.txt",
                "sha": "63665dc332ade5d5a2d97f3755dad898789175cc",
                "status": "modified"
            },
            {
                "additions": 8,
                "blob_url": "https://github.com/apache/commons-codec/blob/5d856dd285cad2a89b6e33f9e93092eab45872c2/src/java/org/apache/commons/codec/language/Soundex.java",
                "changes": 15,
                "contents_url": "https://api.github.com/repos/apache/commons-codec/contents/src/java/org/apache/commons/codec/language/Soundex.java?ref=5d856dd285cad2a89b6e33f9e93092eab45872c2",
                "deletions": 7,
                "filename": "src/java/org/apache/commons/codec/language/Soundex.java",
                "patch": "@@ -28,13 +28,6 @@\n  */\n public class Soundex implements StringEncoder {\n \n-    /**\n-     * An instance of Soundex using the US_ENGLISH_MAPPING mapping.\n-     * \n-     * @see #US_ENGLISH_MAPPING\n-     */\n-    public static final Soundex US_ENGLISH = new Soundex();\n-\n     /**\n      * This is a default mapping of the 26 letters used in US English. A value of <code>0</code> for a letter position\n      * means do not encode.\n@@ -55,6 +48,14 @@\n      */\n     public static final char[] US_ENGLISH_MAPPING = US_ENGLISH_MAPPING_STRING.toCharArray();\n \n+    /**\n+     * An instance of Soundex using the US_ENGLISH_MAPPING mapping.\n+     * \n+     * @see #US_ENGLISH_MAPPING\n+     */\n+    public static final Soundex US_ENGLISH = new Soundex();\n+\n+\n     /**\n      * Encodes the Strings and returns the number of characters in the two encoded Strings that are the same. This\n      * return value ranges from 0 through 4: 0 indicates little or no similarity, and 4 indicates strong similarity or",
                "raw_url": "https://github.com/apache/commons-codec/raw/5d856dd285cad2a89b6e33f9e93092eab45872c2/src/java/org/apache/commons/codec/language/Soundex.java",
                "sha": "8abd22b876ae02d8a75a503d100da668979ed1f7",
                "status": "modified"
            },
            {
                "additions": 12,
                "blob_url": "https://github.com/apache/commons-codec/blob/5d856dd285cad2a89b6e33f9e93092eab45872c2/src/test/org/apache/commons/codec/language/SoundexTest.java",
                "changes": 12,
                "contents_url": "https://api.github.com/repos/apache/commons-codec/contents/src/test/org/apache/commons/codec/language/SoundexTest.java?ref=5d856dd285cad2a89b6e33f9e93092eab45872c2",
                "deletions": 0,
                "filename": "src/test/org/apache/commons/codec/language/SoundexTest.java",
                "patch": "@@ -367,4 +367,16 @@ public void testUsMappingEWithAcute() {\n             // expected\n         }\n     }\n+    \n+    // This test fails.\n+    public void testUsEnglishStatic()\n+    {\n+        assertEquals( Soundex.US_ENGLISH.soundex( \"Williams\" ), \"W452\" );\n+    }\n+\n+    // This test succeeds.\n+    public void testNewInstance()\n+    {\n+        assertEquals( new Soundex().soundex( \"Williams\" ), \"W452\" );\n+    }\n }",
                "raw_url": "https://github.com/apache/commons-codec/raw/5d856dd285cad2a89b6e33f9e93092eab45872c2/src/test/org/apache/commons/codec/language/SoundexTest.java",
                "sha": "6b115bb8ed5563677124b67136aab3c80205237b",
                "status": "modified"
            }
        ],
        "message": "Addresses issue 37894.  Order of static initialization causes\nan NPE when trying to use static US_ENGLISH in Soundex.\nIssue was found by Reggie Riser.\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/codec/trunk@366897 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/commons-codec/commit/252f8e7a4258a07675087299ebb0cb6f4211569d",
        "repo": "commons-codec",
        "unit_tests": [
            "SoundexTest.java"
        ]
    },
    "commons-codec_71e7260": {
        "bug_id": "commons-codec_71e7260",
        "commit": "https://github.com/apache/commons-codec/commit/71e7260746a902d1070a190fd78bd560464860b9",
        "file": [
            {
                "additions": 6,
                "blob_url": "https://github.com/apache/commons-codec/blob/71e7260746a902d1070a190fd78bd560464860b9/src/java/org/apache/commons/codec/StringEncoderComparator.java",
                "changes": 10,
                "contents_url": "https://api.github.com/repos/apache/commons-codec/contents/src/java/org/apache/commons/codec/StringEncoderComparator.java?ref=71e7260746a902d1070a190fd78bd560464860b9",
                "deletions": 4,
                "filename": "src/java/org/apache/commons/codec/StringEncoderComparator.java",
                "patch": "@@ -36,13 +36,15 @@\n     /**\n      * Internal encoder instance.\n      */\n-    private StringEncoder stringEncoder;\n+    private final StringEncoder stringEncoder;\n \n     /**\n      * Constructs a new instance.\n+     * @deprecated as creating without a StringEncoder will lead to a \n+     *             broken NullPointerException creating comparator.\n      */\n     public StringEncoderComparator() {\n-        // no init.\n+        stringEncoder = null;   // Trying to use this will cause things to break\n     }\n \n     /**\n@@ -71,8 +73,8 @@ public int compare(Object o1, Object o2) {\n         int compareCode = 0;\n \n         try {\n-            Comparable s1 = (Comparable) ((Encoder) this.stringEncoder).encode(o1);\n-            Comparable s2 = (Comparable) ((Encoder) this.stringEncoder).encode(o2);\n+            Comparable s1 = (Comparable) this.stringEncoder.encode(o1);\n+            Comparable s2 = (Comparable) this.stringEncoder.encode(o2);\n             compareCode = s1.compareTo(s2);\n         } \n         catch (EncoderException ee) {",
                "raw_url": "https://github.com/apache/commons-codec/raw/71e7260746a902d1070a190fd78bd560464860b9/src/java/org/apache/commons/codec/StringEncoderComparator.java",
                "sha": "49d0f8457b43112939dfdee577b2456eb7217c45",
                "status": "modified"
            }
        ],
        "message": "stringEncoder variable is now final to tighten it up, the empty constructor is deprecated as it will only lead to a broken NPE producing comparator and I've removed the unnecessary casting\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@582444 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/commons-codec/commit/c0467593241c6dcd72da142ab8d292df86a949c5",
        "repo": "commons-codec",
        "unit_tests": [
            "StringEncoderComparatorTest.java"
        ]
    },
    "commons-codec_d2f2709": {
        "bug_id": "commons-codec_d2f2709",
        "commit": "https://github.com/apache/commons-codec/commit/d2f27093d7d95a07da901902f894d88b4ecc3e95",
        "file": [
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/commons-codec/blob/d2f27093d7d95a07da901902f894d88b4ecc3e95/src/changes/changes.xml",
                "changes": 3,
                "contents_url": "https://api.github.com/repos/apache/commons-codec/contents/src/changes/changes.xml?ref=d2f27093d7d95a07da901902f894d88b4ecc3e95",
                "deletions": 1,
                "filename": "src/changes/changes.xml",
                "patch": "@@ -42,9 +42,10 @@ The <action> type attribute can be add,update,fix,remove.\n     <author>Apache Commons Developers</author>\n   </properties>\n   <body>\n-    <release version=\"1.11\" date=\"2016-MM-DD\" description=\"Feature and fix release.\">\n+    <release version=\"1.11\" date=\"2017-MM-DD\" description=\"Feature and fix release.\">\n       <!-- The first attribute below should be the issue id; makes it easier to navigate in the IDE outline -->\n \n+      <action issue=\"CODEC-229\" dev=\"sebb\" type=\"fix\">StringUtils.newStringxxx(null) should return null, not NPE</action>\n       <action issue=\"CODEC-220\" dev=\"sebb\" type=\"add\">Fluent interface for DigestUtils</action>\n       <action issue=\"CODEC-222\" dev=\"sebb\" type=\"add\">Fluent interface for HmacUtils</action>\n       <action issue=\"CODEC-225\" dev=\"jochen\" type=\"fix\" due-to=\"Svetlin Zarev\">Fix minor resource leaks</action>",
                "raw_url": "https://github.com/apache/commons-codec/raw/d2f27093d7d95a07da901902f894d88b4ecc3e95/src/changes/changes.xml",
                "sha": "13a91d51a5005d83b666d9aaff5590548a415acd",
                "status": "modified"
            },
            {
                "additions": 5,
                "blob_url": "https://github.com/apache/commons-codec/blob/d2f27093d7d95a07da901902f894d88b4ecc3e95/src/main/java/org/apache/commons/codec/binary/StringUtils.java",
                "changes": 10,
                "contents_url": "https://api.github.com/repos/apache/commons-codec/contents/src/main/java/org/apache/commons/codec/binary/StringUtils.java?ref=d2f27093d7d95a07da901902f894d88b4ecc3e95",
                "deletions": 5,
                "filename": "src/main/java/org/apache/commons/codec/binary/StringUtils.java",
                "patch": "@@ -336,7 +336,7 @@ public static String newString(final byte[] bytes, final String charsetName) {\n      * @since As of 1.7, throws {@link NullPointerException} instead of UnsupportedEncodingException\n      */\n     public static String newStringIso8859_1(final byte[] bytes) {\n-        return new String(bytes, Charsets.ISO_8859_1);\n+        return newString(bytes, Charsets.ISO_8859_1);\n     }\n \n     /**\n@@ -352,7 +352,7 @@ public static String newStringIso8859_1(final byte[] bytes) {\n      * @since As of 1.7, throws {@link NullPointerException} instead of UnsupportedEncodingException\n      */\n     public static String newStringUsAscii(final byte[] bytes) {\n-        return new String(bytes, Charsets.US_ASCII);\n+        return newString(bytes, Charsets.US_ASCII);\n     }\n \n     /**\n@@ -368,7 +368,7 @@ public static String newStringUsAscii(final byte[] bytes) {\n      * @since As of 1.7, throws {@link NullPointerException} instead of UnsupportedEncodingException\n      */\n     public static String newStringUtf16(final byte[] bytes) {\n-        return new String(bytes, Charsets.UTF_16);\n+        return newString(bytes, Charsets.UTF_16);\n     }\n \n     /**\n@@ -384,7 +384,7 @@ public static String newStringUtf16(final byte[] bytes) {\n      * @since As of 1.7, throws {@link NullPointerException} instead of UnsupportedEncodingException\n      */\n     public static String newStringUtf16Be(final byte[] bytes) {\n-        return new String(bytes, Charsets.UTF_16BE);\n+        return newString(bytes, Charsets.UTF_16BE);\n     }\n \n     /**\n@@ -400,7 +400,7 @@ public static String newStringUtf16Be(final byte[] bytes) {\n      * @since As of 1.7, throws {@link NullPointerException} instead of UnsupportedEncodingException\n      */\n     public static String newStringUtf16Le(final byte[] bytes) {\n-        return new String(bytes, Charsets.UTF_16LE);\n+        return newString(bytes, Charsets.UTF_16LE);\n     }\n \n     /**",
                "raw_url": "https://github.com/apache/commons-codec/raw/d2f27093d7d95a07da901902f894d88b4ecc3e95/src/main/java/org/apache/commons/codec/binary/StringUtils.java",
                "sha": "7bb15e33276ae65bb7c41085ea2938536eff421d",
                "status": "modified"
            },
            {
                "additions": 10,
                "blob_url": "https://github.com/apache/commons-codec/blob/d2f27093d7d95a07da901902f894d88b4ecc3e95/src/test/java/org/apache/commons/codec/binary/StringUtilsTest.java",
                "changes": 10,
                "contents_url": "https://api.github.com/repos/apache/commons-codec/contents/src/test/java/org/apache/commons/codec/binary/StringUtilsTest.java?ref=d2f27093d7d95a07da901902f894d88b4ecc3e95",
                "deletions": 0,
                "filename": "src/test/java/org/apache/commons/codec/binary/StringUtilsTest.java",
                "patch": "@@ -145,6 +145,16 @@ public void testNewStringNullInput() {\n         Assert.assertNull(StringUtils.newString(null, \"UNKNOWN\"));\n     }\n \n+    @Test\n+    public void testNewStringNullInput_CODEC229() {\n+        Assert.assertNull(StringUtils.newStringUtf8(null));\n+        Assert.assertNull(StringUtils.newStringIso8859_1(null));\n+        Assert.assertNull(StringUtils.newStringUsAscii(null));\n+        Assert.assertNull(StringUtils.newStringUtf16(null));\n+        Assert.assertNull(StringUtils.newStringUtf16Be(null));\n+        Assert.assertNull(StringUtils.newStringUtf16Le(null));\n+    }\n+\n     @Test\n     public void testNewStringIso8859_1() throws UnsupportedEncodingException {\n         final String charsetName = \"ISO-8859-1\";",
                "raw_url": "https://github.com/apache/commons-codec/raw/d2f27093d7d95a07da901902f894d88b4ecc3e95/src/test/java/org/apache/commons/codec/binary/StringUtilsTest.java",
                "sha": "8a6e219315f8a9f49561350ba62dde1e096d2d45",
                "status": "modified"
            }
        ],
        "message": "CODEC-229 StringUtils.newStringxxx(null) should return null, not NPE\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1788755 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/commons-codec/commit/1a4d9cc2572d220664f1b7c377cd318cd253052e",
        "repo": "commons-codec",
        "unit_tests": [
            "StringUtilsTest.java"
        ]
    }
}