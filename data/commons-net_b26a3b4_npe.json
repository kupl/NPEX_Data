[
    {
        "repo": "commons-net",
        "commit": "https://github.com/apache/commons-net/commit/b26a3b41b047cdcc37aa65625075fa621d13f66e",
        "bug_id": "commons-net_b26a3b4",
        "message": "NET-539 NPE if Threader.thread invoked with empty list or with null array\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/net/trunk@1587651 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/commons-net/commit/061d70dd783a9150601fc884cc93831d39efd751",
        "patched_files": [
            "changes.xml",
            "Threader.java"
        ],
        "file": [
            {
                "status": "modified",
                "additions": 3,
                "raw_url": "https://github.com/apache/commons-net/raw/b26a3b41b047cdcc37aa65625075fa621d13f66e/src/changes/changes.xml",
                "contents_url": "https://api.github.com/repos/apache/commons-net/contents/src/changes/changes.xml?ref=b26a3b41b047cdcc37aa65625075fa621d13f66e",
                "filename": "src/changes/changes.xml",
                "deletions": 0,
                "sha": "8f95baec9706c4bc4cc54274c447b180965f88e5",
                "blob_url": "https://github.com/apache/commons-net/blob/b26a3b41b047cdcc37aa65625075fa621d13f66e/src/changes/changes.xml",
                "patch": "@@ -68,6 +68,9 @@ This is mainly a bug-fix release. See further details below.\n   IMAPExportMbox (example app) allows IMAP folders to be exported into an mbox file.\n   This is the inverse of the IMAPImportMbox example added previously\n         \">\n+            <action issue=\"NET-539\" type=\"fix\" dev=\"sebb\">\n+            NPE if Threader.thread invoked with empty list or with null array\n+            </action>\n             <action issue=\"NET-536\" type=\"add\" dev=\"sebb\">\n             IMAP FETCH example\n             IMAPExportMbox can export selected nessages from an IMAP folder",
                "changes": 3
            },
            {
                "status": "modified",
                "additions": 15,
                "raw_url": "https://github.com/apache/commons-net/raw/b26a3b41b047cdcc37aa65625075fa621d13f66e/src/main/java/org/apache/commons/net/nntp/Threader.java",
                "contents_url": "https://api.github.com/repos/apache/commons-net/contents/src/main/java/org/apache/commons/net/nntp/Threader.java?ref=b26a3b41b047cdcc37aa65625075fa621d13f66e",
                "filename": "src/main/java/org/apache/commons/net/nntp/Threader.java",
                "deletions": 7,
                "sha": "bf9345177aa147db8db6543ea912ec4ecac872bd",
                "blob_url": "https://github.com/apache/commons-net/blob/b26a3b41b047cdcc37aa65625075fa621d13f66e/src/main/java/org/apache/commons/net/nntp/Threader.java",
                "patch": "@@ -27,6 +27,7 @@\n  *\n  */\n \n+import java.util.Arrays;\n import java.util.HashMap;\n import java.util.Iterator;\n import java.util.List;\n@@ -36,8 +37,8 @@\n     /**\n      * The client passes in a list of Threadable objects, and\n      * the Threader constructs a connected 'graph' of messages\n-     * @param messages list of messages to thread\n-     * @return null if messages == null or root.child == null\n+     * @param messages list of messages to thread, must not be empty\n+     * @return null if messages == null or root.child == null or messages list is empty\n      * @since 2.2\n      */\n     public Threadable thread(List<? extends Threadable> messages) {\n@@ -47,8 +48,8 @@ public Threadable thread(List<? extends Threadable> messages) {\n     /**\n      * The client passes in a list of Iterable objects, and\n      * the Threader constructs a connected 'graph' of messages\n-     * @param messages iterable of messages to thread\n-     * @return null if messages == null or root.child == null\n+     * @param messages iterable of messages to thread, must not be empty\n+     * @return null if messages == null or root.child == null or messages list is empty\n      * @since 3.0\n      */\n     public Threadable thread(Iterable<? extends Threadable> messages) {\n@@ -65,6 +66,10 @@ public Threadable thread(Iterable<? extends Threadable> messages) {\n             }\n         }\n \n+        if (idTable.isEmpty()) {\n+            return null;\n+        }\n+\n         ThreadContainer root = findRootSet(idTable);\n         idTable.clear();\n         idTable = null;\n@@ -446,13 +451,16 @@ private void gatherSubjects(ThreadContainer root) {\n     /**\n      * The client passes in an array of Threadable objects, and\n      * the Threader constructs a connected 'graph' of messages\n-     * @param messages array of messages to thread\n-     * @return null if messages == null or root.child == null\n+     * @param messages array of messages to thread, must not be empty\n+     * @return null if messages == null or root.child == null or messages array is empty\n      * @deprecated (2.2) prefer {@link #thread(List)}\n      */\n     @Deprecated\n     public Threadable thread(Threadable[] messages) {\n-        return thread(java.util.Arrays.asList(messages));\n+        if (messages == null) {\n+            return null;\n+        }\n+        return thread(Arrays.asList(messages));\n     }\n \n }",
                "changes": 22
            },
            {
                "status": "added",
                "additions": 77,
                "raw_url": "https://github.com/apache/commons-net/raw/b26a3b41b047cdcc37aa65625075fa621d13f66e/src/test/java/org/apache/commons/net/nntp/TestThreader.java",
                "contents_url": "https://api.github.com/repos/apache/commons-net/contents/src/test/java/org/apache/commons/net/nntp/TestThreader.java?ref=b26a3b41b047cdcc37aa65625075fa621d13f66e",
                "filename": "src/test/java/org/apache/commons/net/nntp/TestThreader.java",
                "deletions": 0,
                "sha": "f18030b70a93ee4f48f1a4f31f15b8d0fba25556",
                "blob_url": "https://github.com/apache/commons-net/blob/b26a3b41b047cdcc37aa65625075fa621d13f66e/src/test/java/org/apache/commons/net/nntp/TestThreader.java",
                "patch": "@@ -0,0 +1,77 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.commons.net.nntp;\n+\n+import java.util.Arrays;\n+import java.util.List;\n+\n+import org.junit.Assert;\n+import org.junit.Test;\n+\n+/**\n+ * Test the Threader\n+ */\n+public class TestThreader {\n+    \n+    @Test\n+    @SuppressWarnings(\"deprecation\") // test of deprecated method\n+    public void testNullArray() { // NET-539\n+        Threader t = new Threader();\n+        Threadable[] messages=null;\n+        Assert.assertNull(t.thread(messages));        \n+    }\n+\n+    @Test\n+    public void testNullList() {\n+        Threader t = new Threader();\n+        List<Threadable> messages=null;\n+        Assert.assertNull(t.thread(messages));        \n+    }\n+\n+    @Test\n+    public void testNullIterable() {\n+        Threader t = new Threader();\n+        Iterable<Threadable> messages=null;\n+        Assert.assertNull(t.thread(messages));        \n+    }\n+\n+    @SuppressWarnings(\"deprecation\") // test of deprecated method\n+    @Test\n+    public void testEmptyArray() { // NET-539\n+        Threader t = new Threader();\n+        Threadable[] messages=new Threadable[0];\n+        Assert.assertNull(t.thread(messages));\n+    }\n+\n+    @Test\n+    public void testEmptyList() { // NET-539\n+        Threader t = new Threader();\n+        Threadable[] messages=new Threadable[0];\n+        final List<Threadable> asList = Arrays.asList(messages);\n+        Assert.assertNull(t.thread(asList));\n+    }\n+\n+    @Test\n+    public void testEmptyIterable() { // NET-539\n+        Threader t = new Threader();\n+        Threadable[] messages=new Threadable[0];\n+        final Iterable<Threadable> asList = Arrays.asList(messages);\n+        Assert.assertNull(t.thread(asList));\n+    }\n+\n+}",
                "changes": 77
            }
        ],
        "unit_tests": [
            "TestThreader.java"
        ]
    },
    {
        "buggy": false,
        "test_file": "src/test/java/org/apache/commons/net/nntp/TestThreader.java",
        "buggy_files": [
            "src/changes/changes.xml",
            "src/main/java/org/apache/commons/net/nntp/Threader.java"
        ],
        "fixed": true
    }
]