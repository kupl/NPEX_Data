{
    "vxquery_47815f8": {
        "repo": "vxquery",
        "message": "VXQUERY-139: Fixed the NPE for the compile only flag.\n\nPreviously executing queries with compileonly flag gave NPE, which was due to null value of IHyracksClientConnection.\nSubmitted by: ankitladhania (on github)",
        "commit": "https://github.com/apache/vxquery/commit/47815f899547f5e23a2d12a7da3ab038649d307f",
        "parent": "https://github.com/apache/vxquery/commit/bb39a04fc6051c49036e4875d8cec72e2c87a270",
        "bug_id": "vxquery_47815f8",
        "file": [
            {
                "sha": "65263b39e55b3bb60e7840d69c0526af51941ac2",
                "filename": ".gitignore",
                "blob_url": "https://github.com/apache/vxquery/blob/47815f899547f5e23a2d12a7da3ab038649d307f/.gitignore",
                "raw_url": "https://github.com/apache/vxquery/raw/47815f899547f5e23a2d12a7da3ab038649d307f/.gitignore",
                "status": "modified",
                "changes": 1,
                "additions": 1,
                "contents_url": "https://api.github.com/repos/apache/vxquery/contents/.gitignore?ref=47815f899547f5e23a2d12a7da3ab038649d307f",
                "patch": "@@ -1,5 +1,6 @@\n .project\n .settings\n .classpath\n+.idea\n target\n /ClusterControllerService/",
                "deletions": 0
            },
            {
                "sha": "a02c65dea01dcf619ccb62319462657275c23b7d",
                "filename": "vxquery-cli/src/main/java/org/apache/vxquery/cli/VXQuery.java",
                "blob_url": "https://github.com/apache/vxquery/blob/47815f899547f5e23a2d12a7da3ab038649d307f/vxquery-cli/src/main/java/org/apache/vxquery/cli/VXQuery.java",
                "raw_url": "https://github.com/apache/vxquery/raw/47815f899547f5e23a2d12a7da3ab038649d307f/vxquery-cli/src/main/java/org/apache/vxquery/cli/VXQuery.java",
                "status": "modified",
                "changes": 30,
                "additions": 15,
                "contents_url": "https://api.github.com/repos/apache/vxquery/contents/vxquery-cli/src/main/java/org/apache/vxquery/cli/VXQuery.java?ref=47815f899547f5e23a2d12a7da3ab038649d307f",
                "patch": "@@ -81,8 +81,7 @@\n     /**\n      * Constructor to use command line options passed.\n      *\n-     * @param opts\n-     *            Command line options object\n+     * @param opts Command line options object\n      */\n     public VXQuery(CmdLineOptions opts) {\n         this.opts = opts;\n@@ -240,23 +239,24 @@ private void runQueries() throws IOException, SystemException, Exception {\n      * @throws Exception\n      */\n     private String[] getNodeList() throws Exception {\n-        Map<String, NodeControllerInfo> nodeControllerInfos = hcc.getNodeControllerInfos();\n-        String[] nodeList = new String[nodeControllerInfos.size()];\n-        int index = 0;\n-        for (String node : nodeControllerInfos.keySet()) {\n-            nodeList[index++] = node;\n+        if (hcc != null) {\n+            Map<String, NodeControllerInfo> nodeControllerInfos = hcc.getNodeControllerInfos();\n+            String[] nodeList = new String[nodeControllerInfos.size()];\n+            int index = 0;\n+            for (String node : nodeControllerInfos.keySet()) {\n+                nodeList[index++] = node;\n+            }\n+            return nodeList;\n         }\n-        return nodeList;\n+        return new String[0];\n     }\n \n     /**\n      * Creates a Hyracks dataset, if not already existing with the job frame size, and 1 reader. Allocates a new buffer of size specified in the frame of Hyracks\n      * node. Creates new dataset reader with the current job ID and result set ID. Outputs the string in buffer for each frame.\n      *\n-     * @param spec\n-     *            JobSpecification object, containing frame size. Current specified job.\n-     * @param writer\n-     *            Writer for output of job.\n+     * @param spec   JobSpecification object, containing frame size. Current specified job.\n+     * @param writer Writer for output of job.\n      * @throws Exception\n      */\n     private void runJob(JobSpecification spec, PrintWriter writer) throws Exception {\n@@ -339,8 +339,7 @@ public void stopLocalHyracks() throws Exception {\n     /**\n      * Reads the contents of file given in query into a String. The file is always closed. For XML files UTF-8 encoding is used.\n      *\n-     * @param query\n-     *            The query with filename to be processed\n+     * @param query The query with filename to be processed\n      * @return UTF-8 formatted query string\n      * @throws IOException\n      */\n@@ -362,7 +361,8 @@ private static void timingMessage(String message) {\n      * Helper class with fields and methods to handle all command line options\n      */\n     private static class CmdLineOptions {\n-        @Option(name = \"-available-processors\", usage = \"Number of available processors. (default: java's available processors)\")\n+        @Option(name = \"-available-processors\",\n+                usage = \"Number of available processors. (default: java's available processors)\")\n         private int availableProcessors = -1;\n \n         @Option(name = \"-client-net-ip-address\", usage = \"IP Address of the ClusterController.\")",
                "deletions": 15
            }
        ],
        "patched_files": [
            "VXQuery.java"
        ],
        "unit_tests": [
            "VXQueryTest.java"
        ]
    }
}