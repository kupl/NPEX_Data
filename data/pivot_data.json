[{"commit": "https://github.com/apache/pivot/commit/54b707a11d7e53ce9243963ac4d8458020a64ff8", "parent": "https://github.com/apache/pivot/commit/bfe6ddfaf88c91a69afc3690355b528c3b78c3a9", "message": "fix potential NPE\n\ngit-svn-id: https://svn.apache.org/repos/asf/pivot/trunk@1338663 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "pivot_1", "file": [{"additions": 1, "raw_url": "https://github.com/apache/pivot/raw/54b707a11d7e53ce9243963ac4d8458020a64ff8/wtk/src/org/apache/pivot/wtk/TreeView.java", "blob_url": "https://github.com/apache/pivot/blob/54b707a11d7e53ce9243963ac4d8458020a64ff8/wtk/src/org/apache/pivot/wtk/TreeView.java", "sha": "6e82b9667f15c54bf7d602ae4abac3a6c2b95125", "changes": 2, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/pivot/contents/wtk/src/org/apache/pivot/wtk/TreeView.java?ref=54b707a11d7e53ce9243963ac4d8458020a64ff8", "patch": "@@ -1640,7 +1640,7 @@ public void setNodeChecked(Path path, boolean checked) {\n                 Path ancestorPath = new Path(path, path.getLength() - 1);\n \n                 for (int i = ancestorPath.getLength() - 1; i >= 0; i--) {\n-                    NodeCheckState ancestorPreviousCheckState = ancestorCheckStates.get(i);\n+                    NodeCheckState ancestorPreviousCheckState = (ancestorCheckStates != null) ? ancestorCheckStates.get(i) : null;\n                     NodeCheckState ancestorCheckState = getNodeCheckState(ancestorPath);\n \n                     if (ancestorCheckState != ancestorPreviousCheckState) {", "filename": "wtk/src/org/apache/pivot/wtk/TreeView.java"}, {"additions": 8, "raw_url": "https://github.com/apache/pivot/raw/54b707a11d7e53ce9243963ac4d8458020a64ff8/wtk/src/org/apache/pivot/wtk/content/TableViewMultiCellRenderer.java", "blob_url": "https://github.com/apache/pivot/blob/54b707a11d7e53ce9243963ac4d8458020a64ff8/wtk/src/org/apache/pivot/wtk/content/TableViewMultiCellRenderer.java", "sha": "060a4bbd8f4b06ec4d31b712f0d73b2c560812e5", "changes": 16, "status": "modified", "deletions": 8, "contents_url": "https://api.github.com/repos/apache/pivot/contents/wtk/src/org/apache/pivot/wtk/content/TableViewMultiCellRenderer.java?ref=54b707a11d7e53ce9243963ac4d8458020a64ff8", "patch": "@@ -275,20 +275,20 @@ public void setSize(int width, int height) {\n     }\n \n     @Override\n-    public int getPreferredWidth(int height) {\n-        return currentRenderer.getPreferredWidth(height);\n+    public int getPreferredWidth(int heightArgument) {\n+        return currentRenderer.getPreferredWidth(heightArgument);\n     }\n \n     @Override\n-    public int getPreferredHeight(int width) {\n+    public int getPreferredHeight(int widthArgument) {\n         // Our preferred height is the maximum of all our possible renderers'\n         // preferred height\n-        int preferredHeight = defaultRenderer.getPreferredHeight(width);\n+        int preferredHeight = defaultRenderer.getPreferredHeight(widthArgument);\n \n         for (Class<?> key : cellRenderers) {\n             TableView.CellRenderer renderer = cellRenderers.get(key);\n             preferredHeight = Math.max(preferredHeight,\n-                renderer.getPreferredHeight(width));\n+                renderer.getPreferredHeight(widthArgument));\n         }\n \n         return preferredHeight;\n@@ -300,7 +300,7 @@ public Dimensions getPreferredSize() {\n     }\n \n     @Override\n-    public int getBaseline(int width, int height) {\n+    public int getBaseline(int widthArgument, int heightArgument) {\n         return -1;\n     }\n \n@@ -329,7 +329,7 @@ public void render(Object row, int rowIndex, int columnIndex,\n                 cellRenderer = cellRenderers.get(valueClass);\n \n                 if (cellRenderer == null) {\n-                    valueClass = valueClass.getSuperclass();\n+                    valueClass = (valueClass != null) ? valueClass.getSuperclass() : null;\n                 }\n             }\n \n@@ -358,7 +358,7 @@ public String toString(Object row, String columnName) {\n             cellRenderer = cellRenderers.get(valueClass);\n \n             if (cellRenderer == null) {\n-                valueClass = valueClass.getSuperclass();\n+                valueClass = (valueClass != null) ? valueClass.getSuperclass() : null;\n             }\n         }\n ", "filename": "wtk/src/org/apache/pivot/wtk/content/TableViewMultiCellRenderer.java"}, {"additions": 1, "raw_url": "https://github.com/apache/pivot/raw/54b707a11d7e53ce9243963ac4d8458020a64ff8/wtk/src/org/apache/pivot/wtk/skin/TextPaneSkinVerticalElementView.java", "blob_url": "https://github.com/apache/pivot/blob/54b707a11d7e53ce9243963ac4d8458020a64ff8/wtk/src/org/apache/pivot/wtk/skin/TextPaneSkinVerticalElementView.java", "sha": "bea68484f4e0ccb601fb95d0609352ee2f7ab709", "changes": 2, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/pivot/contents/wtk/src/org/apache/pivot/wtk/skin/TextPaneSkinVerticalElementView.java?ref=54b707a11d7e53ce9243963ac4d8458020a64ff8", "patch": "@@ -151,7 +151,7 @@ public int getNextInsertionPoint(int x, int from, TextPane.ScrollDirection direc\n                     }\n \n                     if (offset != -1) {\n-                        offset += nodeView.getOffset();\n+                        offset += (nodeView != null) ? nodeView.getOffset() : 0;\n                     }\n                 }\n             }", "filename": "wtk/src/org/apache/pivot/wtk/skin/TextPaneSkinVerticalElementView.java"}], "repo": "pivot"}, {"commit": "https://github.com/apache/pivot/commit/dfd368cdc21703a4faff070806e097967ac0b459", "parent": "https://github.com/apache/pivot/commit/293ee5b231847bd9d426974eb68080c25bff4ee6", "message": "fix NPE on startup of TextPaneDemo\n\ngit-svn-id: https://svn.apache.org/repos/asf/pivot/trunk@1130159 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "pivot_2", "file": [{"additions": 15, "raw_url": "https://github.com/apache/pivot/raw/dfd368cdc21703a4faff070806e097967ac0b459/wtk/src/org/apache/pivot/wtk/skin/TextPaneSkinParagraphView.java", "blob_url": "https://github.com/apache/pivot/blob/dfd368cdc21703a4faff070806e097967ac0b459/wtk/src/org/apache/pivot/wtk/skin/TextPaneSkinParagraphView.java", "sha": "bc4fa04f2532d720953fa8059a8440adbc2ab9fb", "changes": 28, "status": "modified", "deletions": 13, "contents_url": "https://api.github.com/repos/apache/pivot/contents/wtk/src/org/apache/pivot/wtk/skin/TextPaneSkinParagraphView.java?ref=dfd368cdc21703a4faff070806e097967ac0b459", "patch": "@@ -374,21 +374,23 @@ public Bounds getCharacterBounds(int offset) {\n         if (offset == getCharacterCount() - 1) {\n             characterBounds = terminatorBounds;\n         } else {\n-            for (int i = 0, n = rows.getLength(); i < n; i++) {\n-                Row row = rows.get(i);\n-                for (RowSegment segment : row.rowSegments) {\n-                    int nodeViewOffset = segment.offset;\n-                    int characterCount = segment.nodeView.getCharacterCount();\n-\n-                    if (offset >= nodeViewOffset\n-                        && offset < nodeViewOffset + characterCount) {\n-                        characterBounds = segment.nodeView.getCharacterBounds(offset - nodeViewOffset);\n+            if (rows != null) {\n+                for (int i = 0, n = rows.getLength(); i < n; i++) {\n+                    Row row = rows.get(i);\n+                    for (RowSegment segment : row.rowSegments) {\n+                        int nodeViewOffset = segment.offset;\n+                        int characterCount = segment.nodeView.getCharacterCount();\n+\n+                        if (offset >= nodeViewOffset\n+                            && offset < nodeViewOffset + characterCount) {\n+                            characterBounds = segment.nodeView.getCharacterBounds(offset - nodeViewOffset);\n+\n+                            if (characterBounds != null) {\n+                                characterBounds = characterBounds.translate(segment.nodeView.getX(), segment.nodeView.getY());\n+                            }\n \n-                        if (characterBounds != null) {\n-                            characterBounds = characterBounds.translate(segment.nodeView.getX(), segment.nodeView.getY());\n+                            break;\n                         }\n-\n-                        break;\n                     }\n                 }\n             }", "filename": "wtk/src/org/apache/pivot/wtk/skin/TextPaneSkinParagraphView.java"}], "repo": "pivot"}, {"commit": "https://github.com/apache/pivot/commit/03ce41c04cd1273d1952f3ed64a498ef6699510a", "parent": "https://github.com/apache/pivot/commit/6fc470e573e49f55904f6a0a76965e482eb2b2b8", "message": "Fix NPE in TerraTreeViewSkin.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/pivot/trunk@1039529 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "pivot_3", "file": [{"additions": 21, "raw_url": "https://github.com/apache/pivot/raw/03ce41c04cd1273d1952f3ed64a498ef6699510a/wtk-terra/src/org/apache/pivot/wtk/skin/terra/TerraTreeViewSkin.java", "blob_url": "https://github.com/apache/pivot/blob/03ce41c04cd1273d1952f3ed64a498ef6699510a/wtk-terra/src/org/apache/pivot/wtk/skin/terra/TerraTreeViewSkin.java", "sha": "8d3aaa9c4e3dcef29dffb41437c4eeaa81022a7a", "changes": 39, "status": "modified", "deletions": 18, "contents_url": "https://api.github.com/repos/apache/pivot/contents/wtk-terra/src/org/apache/pivot/wtk/skin/terra/TerraTreeViewSkin.java?ref=03ce41c04cd1273d1952f3ed64a498ef6699510a", "patch": "@@ -2302,29 +2302,32 @@ public void selectedPathRemoved(TreeView treeView, Path path) {\n \n     @Override\n     public void selectedPathsChanged(TreeView treeView, Sequence<Path> previousSelectedPaths) {\n-        // Ensure that the selection is visible\n-        if (treeView.isValid()) {\n-            scrollSelectionToVisible();\n-        } else {\n-            validateSelection = true;\n-        }\n+        if (previousSelectedPaths != null\n+            && previousSelectedPaths != treeView.getSelectedPaths()) {\n+            // Ensure that the selection is visible\n+            if (treeView.isValid()) {\n+                scrollSelectionToVisible();\n+            } else {\n+                validateSelection = true;\n+            }\n \n-        // Un-select the previous selected paths\n-        for (int i = 0, n = previousSelectedPaths.getLength(); i < n; i++) {\n-            NodeInfo previousSelectedNode = getNodeInfoAt(previousSelectedPaths.get(i));\n+            // Un-select the previous selected paths\n+            for (int i = 0, n = previousSelectedPaths.getLength(); i < n; i++) {\n+                NodeInfo previousSelectedNode = getNodeInfoAt(previousSelectedPaths.get(i));\n \n-            previousSelectedNode.setSelected(false);\n-            repaintNode(previousSelectedNode);\n-        }\n+                previousSelectedNode.setSelected(false);\n+                repaintNode(previousSelectedNode);\n+            }\n \n-        Sequence<Path> selectedPaths = treeView.getSelectedPaths();\n+            Sequence<Path> selectedPaths = treeView.getSelectedPaths();\n \n-        // Select the current selected paths\n-        for (int i = 0, n = selectedPaths.getLength(); i < n; i++) {\n-            NodeInfo selectedNode = getNodeInfoAt(selectedPaths.get(i));\n+            // Select the current selected paths\n+            for (int i = 0, n = selectedPaths.getLength(); i < n; i++) {\n+                NodeInfo selectedNode = getNodeInfoAt(selectedPaths.get(i));\n \n-            selectedNode.setSelected(true);\n-            repaintNode(selectedNode);\n+                selectedNode.setSelected(true);\n+                repaintNode(selectedNode);\n+            }\n         }\n     }\n }", "filename": "wtk-terra/src/org/apache/pivot/wtk/skin/terra/TerraTreeViewSkin.java"}], "repo": "pivot"}, {"commit": "https://github.com/apache/pivot/commit/e7a9c3a4437f7091e7bf2eefaf108263dc779079", "parent": "https://github.com/apache/pivot/commit/7b9582efa863ada0816bfc70947f50060f3dd73c", "message": "Fix potential NPE in isFocusable().\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/pivot/trunk@1001301 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "pivot_4", "file": [{"additions": 5, "raw_url": "https://github.com/apache/pivot/raw/e7a9c3a4437f7091e7bf2eefaf108263dc779079/wtk/src/org/apache/pivot/wtk/Component.java", "blob_url": "https://github.com/apache/pivot/blob/e7a9c3a4437f7091e7bf2eefaf108263dc779079/wtk/src/org/apache/pivot/wtk/Component.java", "sha": "33ed0f36a4eb7ab239c066972b6d16555116b2f3", "changes": 8, "status": "modified", "deletions": 3, "contents_url": "https://api.github.com/repos/apache/pivot/contents/wtk/src/org/apache/pivot/wtk/Component.java?ref=e7a9c3a4437f7091e7bf2eefaf108263dc779079", "patch": "@@ -2313,11 +2313,13 @@ public boolean isOpaque() {\n      * <tt>true</tt> if the component is capable of receiving the focus\n      */\n     public boolean isFocusable() {\n-        boolean focusable = skin.isFocusable() && isEnabled();\n+        boolean focusable = skin.isFocusable();\n \n-        if (focusable) {\n+        if (focusable && isEnabled()) {\n             Window window = getWindow();\n-            focusable = window.isOpen() && !window.isClosing();\n+            focusable = (window != null\n+                && window.isOpen()\n+                && !window.isClosing());\n         }\n \n         return focusable;", "filename": "wtk/src/org/apache/pivot/wtk/Component.java"}], "repo": "pivot"}, {"commit": "https://github.com/apache/pivot/commit/5ccef176db4b08de4fdc62e9a10658815d9062ac", "parent": "https://github.com/apache/pivot/commit/e41a6abb2ac5376631a36e0a269a6b8b3c021f24", "message": "Fix potential NPE in ComponentSkin.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/pivot/trunk@996862 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "pivot_5", "file": [{"additions": 2, "raw_url": "https://github.com/apache/pivot/raw/5ccef176db4b08de4fdc62e9a10658815d9062ac/wtk/src/org/apache/pivot/wtk/skin/ComponentSkin.java", "blob_url": "https://github.com/apache/pivot/blob/5ccef176db4b08de4fdc62e9a10658815d9062ac/wtk/src/org/apache/pivot/wtk/skin/ComponentSkin.java", "sha": "59e38bd5193e2eff64314bf6bee06f98aeed9218", "changes": 3, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/pivot/contents/wtk/src/org/apache/pivot/wtk/skin/ComponentSkin.java?ref=5ccef176db4b08de4fdc62e9a10658815d9062ac", "patch": "@@ -320,7 +320,8 @@ public boolean keyPressed(Component component, int keyCode, Keyboard.KeyLocation\n             Component focusedComponent = component.transferFocus(direction);\n \n             // Ensure that the focused component is visible\n-            if (component != focusedComponent) {\n+            if (component != focusedComponent\n+                && focusedComponent != null) {\n                 focusedComponent.scrollAreaToVisible(0, 0, focusedComponent.getWidth(),\n                     focusedComponent.getHeight());\n             }", "filename": "wtk/src/org/apache/pivot/wtk/skin/ComponentSkin.java"}], "repo": "pivot"}, {"commit": "https://github.com/apache/pivot/commit/5e22b8e206d5f53a48153d330273ecb9af1e6f08", "parent": "https://github.com/apache/pivot/commit/01543e8740e85a57cff6fbb1d173d96c0bdeb47d", "message": "Fix potential NPE in TerraListViewSkin, TerraTableViewSkin, and TerraTreeViewSkin.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/pivot/trunk@979081 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "pivot_6", "file": [{"additions": 2, "raw_url": "https://github.com/apache/pivot/raw/5e22b8e206d5f53a48153d330273ecb9af1e6f08/wtk-terra/src/org/apache/pivot/wtk/skin/terra/TerraListViewSkin.java", "blob_url": "https://github.com/apache/pivot/blob/5e22b8e206d5f53a48153d330273ecb9af1e6f08/wtk-terra/src/org/apache/pivot/wtk/skin/terra/TerraListViewSkin.java", "sha": "d2a13b0fd31d13b299e1772e26e212575a28d916", "changes": 3, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/pivot/contents/wtk-terra/src/org/apache/pivot/wtk/skin/terra/TerraListViewSkin.java?ref=5e22b8e206d5f53a48153d330273ecb9af1e6f08", "patch": "@@ -268,7 +268,8 @@ public void layout() {\n                 selectionBounds = selectionBounds.union(getItemBounds(rangeEnd));\n \n                 Bounds visibleSelectionBounds = listView.getVisibleArea(selectionBounds);\n-                if (visibleSelectionBounds.height < selectionBounds.height) {\n+                if (visibleSelectionBounds != null\n+                    && visibleSelectionBounds.height < selectionBounds.height) {\n                     listView.scrollAreaToVisible(selectionBounds);\n                 }\n             }", "filename": "wtk-terra/src/org/apache/pivot/wtk/skin/terra/TerraListViewSkin.java"}, {"additions": 2, "raw_url": "https://github.com/apache/pivot/raw/5e22b8e206d5f53a48153d330273ecb9af1e6f08/wtk-terra/src/org/apache/pivot/wtk/skin/terra/TerraTableViewSkin.java", "blob_url": "https://github.com/apache/pivot/blob/5e22b8e206d5f53a48153d330273ecb9af1e6f08/wtk-terra/src/org/apache/pivot/wtk/skin/terra/TerraTableViewSkin.java", "sha": "aa0d1f542c5a28b0d84fe557813834c7a27373f0", "changes": 3, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/pivot/contents/wtk-terra/src/org/apache/pivot/wtk/skin/terra/TerraTableViewSkin.java?ref=5e22b8e206d5f53a48153d330273ecb9af1e6f08", "patch": "@@ -293,7 +293,8 @@ public void layout() {\n                 selectionBounds = selectionBounds.union(getRowBounds(rangeEnd));\n \n                 Bounds visibleSelectionBounds = tableView.getVisibleArea(selectionBounds);\n-                if (visibleSelectionBounds.height < selectionBounds.height) {\n+                if (visibleSelectionBounds != null\n+                    && visibleSelectionBounds.height < selectionBounds.height) {\n                     tableView.scrollAreaToVisible(selectionBounds);\n                 }\n             }", "filename": "wtk-terra/src/org/apache/pivot/wtk/skin/terra/TerraTableViewSkin.java"}, {"additions": 2, "raw_url": "https://github.com/apache/pivot/raw/5e22b8e206d5f53a48153d330273ecb9af1e6f08/wtk-terra/src/org/apache/pivot/wtk/skin/terra/TerraTreeViewSkin.java", "blob_url": "https://github.com/apache/pivot/blob/5e22b8e206d5f53a48153d330273ecb9af1e6f08/wtk-terra/src/org/apache/pivot/wtk/skin/terra/TerraTreeViewSkin.java", "sha": "72413160dcb0000ee6b444abbcccadb305443e9c", "changes": 3, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/pivot/contents/wtk-terra/src/org/apache/pivot/wtk/skin/terra/TerraTreeViewSkin.java?ref=5e22b8e206d5f53a48153d330273ecb9af1e6f08", "patch": "@@ -1536,7 +1536,8 @@ private void scrollSelectionToVisible() {\n \n             if (nodeBounds != null) {\n                 Bounds visibleSelectionBounds = treeView.getVisibleArea(nodeBounds);\n-                if (visibleSelectionBounds.height < nodeBounds.height) {\n+                if (visibleSelectionBounds != null\n+                    && visibleSelectionBounds.height < nodeBounds.height) {\n                     treeView.scrollAreaToVisible(nodeBounds);\n                 }\n             }", "filename": "wtk-terra/src/org/apache/pivot/wtk/skin/terra/TerraTreeViewSkin.java"}], "repo": "pivot"}, {"commit": "https://github.com/apache/pivot/commit/c32c0d3e5a7d49b813845a10eb69fe74b6f1a2ca", "parent": "https://github.com/apache/pivot/commit/a7af7295c46fbd8c3772e183ce3e96a8345c1a2f", "message": "fix potential NPE, value can be null in readValue()\n\ngit-svn-id: https://svn.apache.org/repos/asf/pivot/trunk@957451 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "pivot_7", "file": [{"additions": 3, "raw_url": "https://github.com/apache/pivot/raw/c32c0d3e5a7d49b813845a10eb69fe74b6f1a2ca/core/src/org/apache/pivot/serialization/CSVSerializer.java", "blob_url": "https://github.com/apache/pivot/blob/c32c0d3e5a7d49b813845a10eb69fe74b6f1a2ca/core/src/org/apache/pivot/serialization/CSVSerializer.java", "sha": "5af9b8856b80ec3ce22bfbf3d7016dd7efb6f24f", "changes": 4, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/pivot/contents/core/src/org/apache/pivot/serialization/CSVSerializer.java?ref=c32c0d3e5a7d49b813845a10eb69fe74b6f1a2ca", "patch": "@@ -397,7 +397,9 @@ private String readValue(Reader reader)\n         }\n \n         // Trim the value\n-        value = value.trim();\n+        if (value != null) {\n+            value = value.trim();\n+        }\n \n         return value;\n     }", "filename": "core/src/org/apache/pivot/serialization/CSVSerializer.java"}], "repo": "pivot"}, {"commit": "https://github.com/apache/pivot/commit/b20e8d6e2c574946f58ce271dfab25ea039b9e00", "parent": "https://github.com/apache/pivot/commit/4cb1f0da1e92f4251f2910ce8f2db2270a42f960", "message": "Fix NPE in TerraListViewSkin and TerraTableViewSkin; add workaround for PIVOT-490.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/pivot/trunk@944750 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "pivot_8", "file": [{"additions": 5, "raw_url": "https://github.com/apache/pivot/raw/b20e8d6e2c574946f58ce271dfab25ea039b9e00/wtk-terra/src/org/apache/pivot/wtk/skin/terra/TerraListViewSkin.java", "blob_url": "https://github.com/apache/pivot/blob/b20e8d6e2c574946f58ce271dfab25ea039b9e00/wtk-terra/src/org/apache/pivot/wtk/skin/terra/TerraListViewSkin.java", "sha": "85a2462eb35bf1daca58f8a8e8736dddeec313f5", "changes": 6, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/pivot/contents/wtk-terra/src/org/apache/pivot/wtk/skin/terra/TerraListViewSkin.java?ref=b20e8d6e2c574946f58ce271dfab25ea039b9e00", "patch": "@@ -1225,7 +1225,11 @@ public void selectedRangesChanged(ListView listView, Sequence<Span> previousSele\n \n                 // Ensure that the selection is visible\n                 Bounds visibleSelectionBounds = listView.getVisibleArea(selectionBounds);\n-                if (visibleSelectionBounds.height < selectionBounds.height) {\n+                if (visibleSelectionBounds != null\n+                    && visibleSelectionBounds.height < selectionBounds.height) {\n+                    // TODO Repainting the entire component is a workaround for PIVOT-490\n+                    repaintComponent();\n+\n                     listView.scrollAreaToVisible(selectionBounds);\n                 }\n             }", "filename": "wtk-terra/src/org/apache/pivot/wtk/skin/terra/TerraListViewSkin.java"}, {"additions": 5, "raw_url": "https://github.com/apache/pivot/raw/b20e8d6e2c574946f58ce271dfab25ea039b9e00/wtk-terra/src/org/apache/pivot/wtk/skin/terra/TerraTableViewSkin.java", "blob_url": "https://github.com/apache/pivot/blob/b20e8d6e2c574946f58ce271dfab25ea039b9e00/wtk-terra/src/org/apache/pivot/wtk/skin/terra/TerraTableViewSkin.java", "sha": "5a1e0450477c48abab30e3a6dc558d1b9d4597e1", "changes": 6, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/pivot/contents/wtk-terra/src/org/apache/pivot/wtk/skin/terra/TerraTableViewSkin.java?ref=b20e8d6e2c574946f58ce271dfab25ea039b9e00", "patch": "@@ -1539,7 +1539,11 @@ public void selectedRangesChanged(TableView tableView, Sequence<Span> previousSe\n \n                 // Ensure that the selection is visible\n                 Bounds visibleSelectionBounds = tableView.getVisibleArea(selectionBounds);\n-                if (visibleSelectionBounds.height < selectionBounds.height) {\n+                if (visibleSelectionBounds != null\n+                    && visibleSelectionBounds.height < selectionBounds.height) {\n+                    // TODO Repainting the entire component is a workaround for PIVOT-490\n+                    repaintComponent();\n+\n                     tableView.scrollAreaToVisible(selectionBounds);\n                 }\n             }", "filename": "wtk-terra/src/org/apache/pivot/wtk/skin/terra/TerraTableViewSkin.java"}], "repo": "pivot"}, {"commit": "https://github.com/apache/pivot/commit/bf714414b507d78aa74490ef977cd6ea3b31561d", "parent": "https://github.com/apache/pivot/commit/fe3d0f3db08e5fe25a265ab455abfa5ead529129", "message": "Fix NPE in QueryServlet.\n\ngit-svn-id: https://svn.apache.org/repos/asf/pivot/trunk@919785 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "pivot_9", "file": [{"additions": 8, "raw_url": "https://github.com/apache/pivot/raw/bf714414b507d78aa74490ef977cd6ea3b31561d/web-server/src/org/apache/pivot/web/server/QueryServlet.java", "blob_url": "https://github.com/apache/pivot/blob/bf714414b507d78aa74490ef977cd6ea3b31561d/web-server/src/org/apache/pivot/web/server/QueryServlet.java", "sha": "f1553b77fc73ee821e121bfe1bb43ef901f43d11", "changes": 9, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/pivot/contents/web-server/src/org/apache/pivot/web/server/QueryServlet.java?ref=bf714414b507d78aa74490ef977cd6ea3b31561d", "patch": "@@ -571,7 +571,14 @@ protected final void doTrace(HttpServletRequest request, HttpServletResponse res\n \n     private Path getPath(HttpServletRequest request) {\n         String pathInfo = request.getPathInfo();\n-        Path path = (pathInfo.length() == 0) ? new Path() : new Path(pathInfo.substring(1).split(\"/\"));\n+        Path path;\n+        if (pathInfo == null\n+            || pathInfo.length() == 0) {\n+            path = new Path();\n+        } else {\n+           path = new Path(pathInfo.substring(1).split(\"/\"));\n+        }\n+\n         return path;\n     }\n ", "filename": "web-server/src/org/apache/pivot/web/server/QueryServlet.java"}], "repo": "pivot"}, {"commit": "https://github.com/apache/pivot/commit/858fb4aaf55ac1b89d3b84d168d908d58b2f293d", "parent": "https://github.com/apache/pivot/commit/3f2a9a23cea5ef524286c5748d42a7c3a79f7d0e", "message": "Fix potential NPE in TerraTextInputSkin.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/pivot/trunk@918456 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "pivot_10", "file": [{"additions": 1, "raw_url": "https://github.com/apache/pivot/raw/858fb4aaf55ac1b89d3b84d168d908d58b2f293d/wtk-terra/src/org/apache/pivot/wtk/skin/terra/TerraTextInputSkin.java", "blob_url": "https://github.com/apache/pivot/blob/858fb4aaf55ac1b89d3b84d168d908d58b2f293d/wtk-terra/src/org/apache/pivot/wtk/skin/terra/TerraTextInputSkin.java", "sha": "71c713f05ef34e8b13332f1c4c94a0e4fabca9e5", "changes": 2, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/pivot/contents/wtk-terra/src/org/apache/pivot/wtk/skin/terra/TerraTextInputSkin.java?ref=858fb4aaf55ac1b89d3b84d168d908d58b2f293d", "patch": "@@ -1424,7 +1424,7 @@ private void updateSelection() {\n         int selectionLength = textInput.getSelectionLength();\n \n         TextNode textNode = textInput.getTextNode();\n-        int n = textNode.getCharacterCount();\n+        int n = (textNode == null) ? 0 : textNode.getCharacterCount();\n \n         Bounds leadingSelectionBounds;\n         if (selectionStart < n) {", "filename": "wtk-terra/src/org/apache/pivot/wtk/skin/terra/TerraTextInputSkin.java"}], "repo": "pivot"}, {"commit": "https://github.com/apache/pivot/commit/89634891f863662215297ab6c00c3e049e688913", "parent": "https://github.com/apache/pivot/commit/d48ead03f1d1525796923f247309e5c26644a451", "message": "Fix minor NPE bug in TerraTableViewHeaderSkin.\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/pivot/trunk@755687 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "pivot_11", "file": [{"additions": 5, "raw_url": "https://github.com/apache/pivot/raw/89634891f863662215297ab6c00c3e049e688913/wtk/src/pivot/wtk/skin/terra/TerraTableViewHeaderSkin.java", "blob_url": "https://github.com/apache/pivot/blob/89634891f863662215297ab6c00c3e049e688913/wtk/src/pivot/wtk/skin/terra/TerraTableViewHeaderSkin.java", "sha": "eb49211d515f764d322897196c698aaa2c94c833", "changes": 9, "status": "modified", "deletions": 4, "contents_url": "https://api.github.com/repos/apache/pivot/contents/wtk/src/pivot/wtk/skin/terra/TerraTableViewHeaderSkin.java?ref=89634891f863662215297ab6c00c3e049e688913", "patch": "@@ -627,19 +627,20 @@ public boolean mouseMove(Component component, int x, int y) {\n             } else {\n                 int headerIndex = getHeaderAt(x);\n \n-                Cursor cursor = tableViewHeader.getCursor();\n                 if (headerIndex != -1\n                     && columnsResizable) {\n                     Bounds headerBounds = getHeaderBounds(headerIndex);\n                     TableView.Column column = tableView.getColumns().get(headerIndex);\n \n                     if (!column.isRelative()\n                         && x > headerBounds.x + headerBounds.width - RESIZE_HANDLE_SIZE) {\n-                        cursor = Cursor.RESIZE_EAST;\n+                        Mouse.setCursor(Cursor.RESIZE_EAST);\n+                    } else {\n+                        Mouse.setCursor(tableViewHeader);\n                     }\n+                } else {\n+                    Mouse.setCursor(tableViewHeader);\n                 }\n-\n-                Mouse.setCursor(cursor);\n             }\n         }\n ", "filename": "wtk/src/pivot/wtk/skin/terra/TerraTableViewHeaderSkin.java"}], "repo": "pivot"}, {"commit": "https://github.com/apache/pivot/commit/416e6af02b554fec8090cb330714da0c9b18918e", "parent": "https://github.com/apache/pivot/commit/6e91d03cbe867ef699414c68ee8a66892a759cd4", "message": "revert changes to fix eclipse warning of potential NPE, but add a suppresswarning annotation (with a comment) on them, for future reference\n\ngit-svn-id: https://svn.apache.org/repos/asf/pivot/trunk@1338714 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "pivot_12", "file": [{"additions": 2, "raw_url": "https://github.com/apache/pivot/raw/416e6af02b554fec8090cb330714da0c9b18918e/wtk/src/org/apache/pivot/wtk/TreeView.java", "blob_url": "https://github.com/apache/pivot/blob/416e6af02b554fec8090cb330714da0c9b18918e/wtk/src/org/apache/pivot/wtk/TreeView.java", "sha": "3e7c5721b7513b9fb746d9ac10dd4f58380ea65d", "changes": 3, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/pivot/contents/wtk/src/org/apache/pivot/wtk/TreeView.java?ref=416e6af02b554fec8090cb330714da0c9b18918e", "patch": "@@ -1640,7 +1640,8 @@ public void setNodeChecked(Path path, boolean checked) {\n                 Path ancestorPath = new Path(path, path.getLength() - 1);\n \n                 for (int i = ancestorPath.getLength() - 1; i >= 0; i--) {\n-                    NodeCheckState ancestorPreviousCheckState = (ancestorCheckStates != null) ? ancestorCheckStates.get(i) : null;\n+                    @SuppressWarnings(\"null\")  // false warning from eclipse\n+                    NodeCheckState ancestorPreviousCheckState = ancestorCheckStates.get(i);\n                     NodeCheckState ancestorCheckState = getNodeCheckState(ancestorPath);\n \n                     if (ancestorCheckState != ancestorPreviousCheckState) {", "filename": "wtk/src/org/apache/pivot/wtk/TreeView.java"}, {"additions": 4, "raw_url": "https://github.com/apache/pivot/raw/416e6af02b554fec8090cb330714da0c9b18918e/wtk/src/org/apache/pivot/wtk/content/TableViewMultiCellRenderer.java", "blob_url": "https://github.com/apache/pivot/blob/416e6af02b554fec8090cb330714da0c9b18918e/wtk/src/org/apache/pivot/wtk/content/TableViewMultiCellRenderer.java", "sha": "cd480f3f63737e45f948d456557fe64418453eac", "changes": 7, "status": "modified", "deletions": 3, "contents_url": "https://api.github.com/repos/apache/pivot/contents/wtk/src/org/apache/pivot/wtk/content/TableViewMultiCellRenderer.java?ref=416e6af02b554fec8090cb330714da0c9b18918e", "patch": "@@ -25,7 +25,6 @@\n import org.apache.pivot.json.JSON;\n import org.apache.pivot.wtk.Dimensions;\n import org.apache.pivot.wtk.TableView;\n-import org.apache.pivot.wtk.content.TableViewCellRenderer;\n \n /**\n  * Table cell renderer that supports dynamic rendering based on the type of\n@@ -309,6 +308,7 @@ public int getBaseline(int widthArgument, int heightArgument) {\n         return STYLES;\n     }\n \n+    @SuppressWarnings(\"null\")  // false warning from eclipse\n     @Override\n     public void render(Object row, int rowIndex, int columnIndex,\n         TableView tableView, String columnName,\n@@ -329,7 +329,7 @@ public void render(Object row, int rowIndex, int columnIndex,\n                 cellRenderer = cellRenderers.get(valueClass);\n \n                 if (cellRenderer == null) {\n-                    valueClass = (valueClass != null) ? valueClass.getSuperclass() : null;\n+                    valueClass = valueClass.getSuperclass();\n                 }\n             }\n \n@@ -347,6 +347,7 @@ public void render(Object row, int rowIndex, int columnIndex,\n         }\n     }\n \n+    @SuppressWarnings(\"null\")  // false warning from eclipse\n     @Override\n     public String toString(Object row, String columnName) {\n         Object cellData = JSON.get(row, columnName);\n@@ -358,7 +359,7 @@ public String toString(Object row, String columnName) {\n             cellRenderer = cellRenderers.get(valueClass);\n \n             if (cellRenderer == null) {\n-                valueClass = (valueClass != null) ? valueClass.getSuperclass() : null;\n+                valueClass = valueClass.getSuperclass();\n             }\n         }\n ", "filename": "wtk/src/org/apache/pivot/wtk/content/TableViewMultiCellRenderer.java"}, {"additions": 2, "raw_url": "https://github.com/apache/pivot/raw/416e6af02b554fec8090cb330714da0c9b18918e/wtk/src/org/apache/pivot/wtk/skin/TextPaneSkinVerticalElementView.java", "blob_url": "https://github.com/apache/pivot/blob/416e6af02b554fec8090cb330714da0c9b18918e/wtk/src/org/apache/pivot/wtk/skin/TextPaneSkinVerticalElementView.java", "sha": "7c901da0705f64e5ae520bcfefa9116852b29e57", "changes": 3, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/pivot/contents/wtk/src/org/apache/pivot/wtk/skin/TextPaneSkinVerticalElementView.java?ref=416e6af02b554fec8090cb330714da0c9b18918e", "patch": "@@ -101,6 +101,7 @@ public int getInsertionPoint(int x, int y) {\n         return offset;\n     }\n \n+    @SuppressWarnings(\"null\")  // false warning from eclipse\n     @Override\n     public int getNextInsertionPoint(int x, int from, TextPane.ScrollDirection direction) {\n         int offset = -1;\n@@ -151,7 +152,7 @@ public int getNextInsertionPoint(int x, int from, TextPane.ScrollDirection direc\n                     }\n \n                     if (offset != -1) {\n-                        offset += (nodeView != null) ? nodeView.getOffset() : 0;\n+                        offset += nodeView.getOffset();\n                     }\n                 }\n             }", "filename": "wtk/src/org/apache/pivot/wtk/skin/TextPaneSkinVerticalElementView.java"}], "repo": "pivot"}, {"commit": "https://github.com/apache/pivot/commit/e8ebddaf2a01c579ff7b7eb83259320729a070b8", "parent": "https://github.com/apache/pivot/commit/2c0e57e832507a5f845ecf53f0f3747e13c56696", "message": "add check for null, to avoid NPE in some (but not-so-common) cases\n\ngit-svn-id: https://svn.apache.org/repos/asf/pivot/trunk@1220762 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "pivot_13", "file": [{"additions": 1, "raw_url": "https://github.com/apache/pivot/raw/e8ebddaf2a01c579ff7b7eb83259320729a070b8/wtk/src/org/apache/pivot/wtk/skin/LabelSkin.java", "blob_url": "https://github.com/apache/pivot/blob/e8ebddaf2a01c579ff7b7eb83259320729a070b8/wtk/src/org/apache/pivot/wtk/skin/LabelSkin.java", "sha": "80323370514ca572945ef4553a50f4ab2651e0e7", "changes": 2, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/pivot/contents/wtk/src/org/apache/pivot/wtk/skin/LabelSkin.java?ref=e8ebddaf2a01c579ff7b7eb83259320729a070b8", "patch": "@@ -293,7 +293,7 @@ public void paint(Graphics2D graphics) {\n         }\n \n         // Draw the text\n-        if (glyphVectors.getLength() > 0) {\n+        if (glyphVectors != null && glyphVectors.getLength() > 0) {\n             graphics.setFont(font);\n             graphics.setPaint(color);\n ", "filename": "wtk/src/org/apache/pivot/wtk/skin/LabelSkin.java"}], "repo": "pivot"}, {"commit": "https://github.com/apache/pivot/commit/3356f09455edbc96ff76b6501d3222bd41457756", "parent": "https://github.com/apache/pivot/commit/5a7ca3a801b904a832425118d713d01ea76aa437", "message": "PIVOT-677 - Fixed NPE for setSelection(null) & improved null handling.  Updated example to reflect changes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/pivot/trunk@1141971 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "pivot_14", "file": [{"additions": 2, "raw_url": "https://github.com/apache/pivot/raw/3356f09455edbc96ff76b6501d3222bd41457756/examples/src/org/apache/pivot/examples/buttons/radio_button_group_example.bxml", "blob_url": "https://github.com/apache/pivot/blob/3356f09455edbc96ff76b6501d3222bd41457756/examples/src/org/apache/pivot/examples/buttons/radio_button_group_example.bxml", "sha": "871781a79e0dfd9b614fd0c600013ef1df2fc822", "changes": 18, "status": "modified", "deletions": 16, "contents_url": "https://api.github.com/repos/apache/pivot/contents/examples/src/org/apache/pivot/examples/buttons/radio_button_group_example.bxml?ref=3356f09455edbc96ff76b6501d3222bd41457756", "patch": "@@ -176,22 +176,8 @@ limitations under the License.\n             <RadioButton buttonGroup=\"$groupE\" buttonData=\"Blue\" />\r\n             <RadioButton buttonGroup=\"$groupE\" buttonData=\"Indigo\" />\r\n             <RadioButton buttonGroup=\"$groupE\" buttonData=\"Violet\" />\r\n-            <PushButton buttonData=\"Clear selection\" >\r\n-              <buttonPressListeners>\r\n-                function buttonPressed(button) {\r\n-                  var selection = groupE.getSelection();\r\n-                  if (selection != null) {\r\n-                    try {\r\n-                      selection.setSelected(false);\r\n-                    } catch (e) {\r\n-                      // Exception expected from\r\n-                      // org.apache.pivot.wtk.ButtonGroup.setSelection(Button)\r\n-                      // as it doesn't support clearing the selection\r\n-                    }\r\n-                  }\r\n-                }\r\n-              </buttonPressListeners>\r\n-            </PushButton>\r\n+            <PushButton buttonData=\"Clear selection\"\r\n+              ButtonPressListener.buttonPressed=\"groupE.setSelection(null);\" />\r\n           </BoxPane>\r\n         </Border>\r\n         <Border styles=\"{padding:8}\" title=\"Jump to character\">\r", "filename": "examples/src/org/apache/pivot/examples/buttons/radio_button_group_example.bxml"}, {"additions": 16, "raw_url": "https://github.com/apache/pivot/raw/3356f09455edbc96ff76b6501d3222bd41457756/wtk/src/org/apache/pivot/wtk/RadioButtonGroup.java", "blob_url": "https://github.com/apache/pivot/blob/3356f09455edbc96ff76b6501d3222bd41457756/wtk/src/org/apache/pivot/wtk/RadioButtonGroup.java", "sha": "c2ffe8618daa17b0510a0793d2ab71bbbb01a3d4", "changes": 21, "status": "modified", "deletions": 5, "contents_url": "https://api.github.com/repos/apache/pivot/contents/wtk/src/org/apache/pivot/wtk/RadioButtonGroup.java?ref=3356f09455edbc96ff76b6501d3222bd41457756", "patch": "@@ -304,6 +304,9 @@ public void setIntraGroupFocusTransferEnabled(boolean intraGroupFocusTransferEna\n      */\r\n     @Override\r\n     public boolean add(Button button) {\r\n+        if (button == null) {\r\n+            throw new IllegalArgumentException(\"Button cannot be null\");\r\n+        }\r\n         boolean result = super.add(button);\r\n         if (result) {\r\n             buttonOrder.add(button);\r\n@@ -347,6 +350,9 @@ public int indexOf(Button button) {\n      * @see Sequence#insert(Object, int)\r\n      */\r\n     public void insert(Button button, int index) {\r\n+        if (button == null) {\r\n+            throw new IllegalArgumentException(\"Button cannot be null\");\r\n+        }\r\n         boolean result = super.add(button);\r\n         if (result) {\r\n             buttonOrder.insert(button, index);\r\n@@ -361,9 +367,12 @@ public void insert(Button button, int index) {\n      */\r\n     @Override\r\n     public boolean remove(Button button) {\r\n-        boolean result = super.remove(button);\r\n-        if (result) {\r\n-            buttonOrder.remove(button);\r\n+        boolean result = false;\r\n+        if (button != null) {\r\n+            result = super.remove(button);\r\n+            if (result) {\r\n+                buttonOrder.remove(button);\r\n+            }\r\n         }\r\n         return result;\r\n     }\r\n@@ -403,7 +412,9 @@ public boolean remove(Button button) {\n     @Override\r\n     public void setSelection(Button button) {\r\n         super.setSelection(button);\r\n-        button.requestFocus();\r\n+        if (button != null) {\r\n+            button.requestFocus();\r\n+        }\r\n     }\r\n \r\n     /**\r\n@@ -600,4 +611,4 @@ private int findPrevious(int index, Filter<Integer> filter, boolean circular) {\n     private int findPrevious(int index) {\r\n         return findPrevious(index, defaultFilter, circular);\r\n     }\r\n-}\n\\ No newline at end of file\n+}\r", "filename": "wtk/src/org/apache/pivot/wtk/RadioButtonGroup.java"}], "repo": "pivot"}, {"commit": "https://github.com/apache/pivot/commit/3f2a9a23cea5ef524286c5748d42a7c3a79f7d0e", "parent": "https://github.com/apache/pivot/commit/cf5f62a024ca7da2674d3f2442988dfe05668f82", "message": "Fix potential NPEs in JSONSerializer; temporarily disable deprecation warnings in build.xml.\n\ngit-svn-id: https://svn.apache.org/repos/asf/pivot/trunk@918160 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "pivot_15", "file": [{"additions": 2, "raw_url": "https://github.com/apache/pivot/raw/3f2a9a23cea5ef524286c5748d42a7c3a79f7d0e/build.xml", "blob_url": "https://github.com/apache/pivot/blob/3f2a9a23cea5ef524286c5748d42a7c3a79f7d0e/build.xml", "sha": "58829fe6830b2f5510ce6bd0e6877b1b158af2d9", "changes": 4, "status": "modified", "deletions": 2, "contents_url": "https://api.github.com/repos/apache/pivot/contents/build.xml?ref=3f2a9a23cea5ef524286c5748d42a7c3a79f7d0e", "patch": "@@ -36,12 +36,12 @@ limitations under the License.\n     <property name=\"keystore.passwd\" value=\"apache\"/>\n \n     <!-- Compiler properties -->\n-    <property name=\"compiler.deprecation\" value=\"true\"/>\n+    <property name=\"compiler.deprecation\" value=\"false\"/>\n     <property name=\"compiler.debug\" value=\"false\"/>\n     <property name=\"compiler.target\" value=\"1.6\"/>\n     <property name=\"compiler.encoding\" value=\"UTF-8\"/>\n     <property name=\"compiler.indexJars\" value=\"true\"/>\n-    <property name=\"compiler.arg\" value=\"-Xlint\"/>\n+    <property name=\"compiler.arg\" value=\"-Xlint:-deprecation\"/>\n \n     <!-- Test properties -->\n     <property name=\"test.verbose\" value=\"false\"/>", "filename": "build.xml"}, {"additions": 10, "raw_url": "https://github.com/apache/pivot/raw/3f2a9a23cea5ef524286c5748d42a7c3a79f7d0e/core/src/org/apache/pivot/serialization/JSONSerializer.java", "blob_url": "https://github.com/apache/pivot/blob/3f2a9a23cea5ef524286c5748d42a7c3a79f7d0e/core/src/org/apache/pivot/serialization/JSONSerializer.java", "sha": "1c74f54873393082c43537e738b50873fb664473", "changes": 15, "status": "modified", "deletions": 5, "contents_url": "https://api.github.com/repos/apache/pivot/contents/core/src/org/apache/pivot/serialization/JSONSerializer.java?ref=3f2a9a23cea5ef524286c5748d42a7c3a79f7d0e", "patch": "@@ -772,7 +772,8 @@ public static Number getNumber(Object root, String path) {\n      * @see #get(Object, String)\n      */\n     public static Short getShort(Object root, String path) {\n-        return getNumber(root, path).shortValue();\n+        Number number = getNumber(root, path);\n+        return (number == null) ? null : number.shortValue();\n     }\n \n     /**\n@@ -784,7 +785,8 @@ public static Short getShort(Object root, String path) {\n      * @see #get(Object, String)\n      */\n     public static Integer getInteger(Object root, String path) {\n-        return getNumber(root, path).intValue();\n+        Number number = getNumber(root, path);\n+        return (number == null) ? null : number.intValue();\n     }\n \n     /**\n@@ -796,7 +798,8 @@ public static Integer getInteger(Object root, String path) {\n      * @see #get(Object, String)\n      */\n     public static Long getLong(Object root, String path) {\n-        return getNumber(root, path).longValue();\n+        Number number = getNumber(root, path);\n+        return (number == null) ? null : number.longValue();\n     }\n \n     /**\n@@ -808,7 +811,8 @@ public static Long getLong(Object root, String path) {\n      * @see #get(Object, String)\n      */\n     public static Float getFloat(Object root, String path) {\n-        return getNumber(root, path).floatValue();\n+        Number number = getNumber(root, path);\n+        return (number == null) ? null : number.floatValue();\n     }\n \n     /**\n@@ -820,7 +824,8 @@ public static Float getFloat(Object root, String path) {\n      * @see #get(Object, String)\n      */\n     public static Double getDouble(Object root, String path) {\n-        return getNumber(root, path).doubleValue();\n+        Number number = getNumber(root, path);\n+        return (number == null) ? null : number.doubleValue();\n     }\n \n     /**", "filename": "core/src/org/apache/pivot/serialization/JSONSerializer.java"}], "repo": "pivot"}, {"commit": "https://github.com/apache/pivot/commit/2f2122f0589ba80be4b21bf6b52153a03ec0c701", "parent": "https://github.com/apache/pivot/commit/941c61ec41b3ad40e1ab7afae8090729e16cc1da", "message": "Fix NPE bugs in TextArea and TextInput; fix baseline calculation issue in BoxPane.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/pivot/trunk@834608 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "pivot_16", "file": [{"additions": 14, "raw_url": "https://github.com/apache/pivot/raw/2f2122f0589ba80be4b21bf6b52153a03ec0c701/tutorials/src/org/apache/pivot/tutorials/layout/flow_panes.wtkx", "blob_url": "https://github.com/apache/pivot/blob/2f2122f0589ba80be4b21bf6b52153a03ec0c701/tutorials/src/org/apache/pivot/tutorials/layout/flow_panes.wtkx", "sha": "f7e39bc02b2e5cdffdac62b30fbc172bce0336d9", "changes": 32, "status": "modified", "deletions": 18, "contents_url": "https://api.github.com/repos/apache/pivot/contents/tutorials/src/org/apache/pivot/tutorials/layout/flow_panes.wtkx?ref=2f2122f0589ba80be4b21bf6b52153a03ec0c701", "patch": "@@ -25,25 +25,21 @@ limitations under the License.\n             <left>\n                 <Border styles=\"{padding:4}\">\n                     <content>\n-                        <BoxPane orientation=\"vertical\" styles=\"{verticalAlignment:'center', fill:true}\">\n-                            <Border>\n-                                <content>\n-                                    <FlowPane wtkx:id=\"flowPane\" styles=\"{padding:2}\">\n-                                        <decorators>\n-                                            <effects:BaselineDecorator/>\n-                                        </decorators>\n+                        <BoxPane orientation=\"vertical\" styles=\"{fill:true}\">\n+                            <FlowPane wtkx:id=\"flowPane\" styles=\"{padding:2}\">\n+                                <decorators>\n+                                    <effects:BaselineDecorator/>\n+                                </decorators>\n \n-                                        <PushButton buttonData=\"0\" styles=\"{minimumAspectRatio:1.5}\"/>\n-                                        <PushButton buttonData=\"1\" styles=\"{minimumAspectRatio:1.5}\"/>\n-                                        <PushButton buttonData=\"2\" styles=\"{minimumAspectRatio:1.5}\"/>\n-                                        <PushButton buttonData=\"3\" preferredWidth=\"20\" preferredHeight=\"20\"/>\n-                                        <PushButton buttonData=\"4\" preferredWidth=\"30\" preferredHeight=\"30\"/>\n-                                        <PushButton buttonData=\"5\" preferredWidth=\"40\" preferredHeight=\"40\"/>\n-                                        <PushButton buttonData=\"6\" styles=\"{minimumAspectRatio:1.5}\"/>\n-                                        <PushButton buttonData=\"7\" styles=\"{minimumAspectRatio:1.5}\"/>\n-                                    </FlowPane>\n-                                </content>\n-                            </Border>\n+                                <PushButton buttonData=\"0\" styles=\"{minimumAspectRatio:1.5}\"/>\n+                                <PushButton buttonData=\"1\" styles=\"{minimumAspectRatio:1.5}\"/>\n+                                <PushButton buttonData=\"2\" styles=\"{minimumAspectRatio:1.5}\"/>\n+                                <PushButton buttonData=\"3\" preferredWidth=\"20\" preferredHeight=\"20\"/>\n+                                <PushButton buttonData=\"4\" preferredWidth=\"30\" preferredHeight=\"30\"/>\n+                                <PushButton buttonData=\"5\" preferredWidth=\"40\" preferredHeight=\"40\"/>\n+                                <PushButton buttonData=\"6\" styles=\"{minimumAspectRatio:1.5}\"/>\n+                                <PushButton buttonData=\"7\" styles=\"{minimumAspectRatio:1.5}\"/>\n+                            </FlowPane>\n                         </BoxPane>\n                     </content>\n                 </Border>", "filename": "tutorials/src/org/apache/pivot/tutorials/layout/flow_panes.wtkx"}, {"additions": 16, "raw_url": "https://github.com/apache/pivot/raw/2f2122f0589ba80be4b21bf6b52153a03ec0c701/tutorials/www/flow_panes.html", "blob_url": "https://github.com/apache/pivot/blob/2f2122f0589ba80be4b21bf6b52153a03ec0c701/tutorials/www/flow_panes.html", "sha": "b47ffbe3a8f043edc9235234402918563ee4720b", "changes": 36, "status": "modified", "deletions": 20, "contents_url": "https://api.github.com/repos/apache/pivot/contents/tutorials/www/flow_panes.html?ref=2f2122f0589ba80be4b21bf6b52153a03ec0c701", "patch": "@@ -35,7 +35,7 @@\n <h1>Flow Panes</h1>\n <p>Flow panes arrange components in a horizontal line, wrapping when the contents don't fit on a single line. Components may be horizontally aligned to left, right, or center when there is space left over within a given line, and may optionally be vertically aligned by to their baselines.</p>\n \n-<p>The following example demonstrates the use of the <tt>FlowPane</tt> container. The buttons on the right can be used to modify the alignment properties:</p>\n+<p>The following example demonstrates the use of the <tt>FlowPane</tt> container. The buttons on the right can be used to modify the alignment properties. A <tt>BaselineDecorator</tt> is used to highlight the flow pane's baseline. This decorator draws a red line across a component's baseline. If the component does not have a baseline, it draws a blue line across the component's vertical midpoint:</p>\n \n <script src=\"version.js\"></script>\n <script>\n@@ -66,25 +66,21 @@ <h1>Flow Panes</h1>\n             &lt;left&gt;\n                 &lt;Border styles=\"{padding:4}\"&gt;\n                     &lt;content&gt;\n-                        &lt;BoxPane orientation=\"vertical\" styles=\"{verticalAlignment:'center', fill:true}\"&gt;\n-                            &lt;Border&gt;\n-                                &lt;content&gt;\n-                                    &lt;FlowPane wtkx:id=\"flowPane\" styles=\"{padding:2}\"&gt;\n-                                        &lt;decorators&gt;\n-                                            &lt;effects:BaselineDecorator/&gt;\n-                                        &lt;/decorators&gt;\n-\n-                                        &lt;PushButton buttonData=\"0\" styles=\"{minimumAspectRatio:1.5}\"/&gt;\n-                                        &lt;PushButton buttonData=\"1\" styles=\"{minimumAspectRatio:1.5}\"/&gt;\n-                                        &lt;PushButton buttonData=\"2\" styles=\"{minimumAspectRatio:1.5}\"/&gt;\n-                                        &lt;PushButton buttonData=\"3\" preferredWidth=\"20\" preferredHeight=\"20\"/&gt;\n-                                        &lt;PushButton buttonData=\"4\" preferredWidth=\"30\" preferredHeight=\"30\"/&gt;\n-                                        &lt;PushButton buttonData=\"5\" preferredWidth=\"40\" preferredHeight=\"40\"/&gt;\n-                                        &lt;PushButton buttonData=\"6\" styles=\"{minimumAspectRatio:1.5}\"/&gt;\n-                                        &lt;PushButton buttonData=\"7\" styles=\"{minimumAspectRatio:1.5}\"/&gt;\n-                                    &lt;/FlowPane&gt;\n-                                &lt;/content&gt;\n-                            &lt;/Border&gt;\n+                        &lt;BoxPane orientation=\"vertical\" styles=\"{fill:true}\"&gt;\n+                            &lt;FlowPane wtkx:id=\"flowPane\" styles=\"{padding:2}\"&gt;\n+                                &lt;decorators&gt;\n+                                    &lt;effects:BaselineDecorator/&gt;\n+                                &lt;/decorators&gt;\n+\n+                                &lt;PushButton buttonData=\"0\" styles=\"{minimumAspectRatio:1.5}\"/&gt;\n+                                &lt;PushButton buttonData=\"1\" styles=\"{minimumAspectRatio:1.5}\"/&gt;\n+                                &lt;PushButton buttonData=\"2\" styles=\"{minimumAspectRatio:1.5}\"/&gt;\n+                                &lt;PushButton buttonData=\"3\" preferredWidth=\"20\" preferredHeight=\"20\"/&gt;\n+                                &lt;PushButton buttonData=\"4\" preferredWidth=\"30\" preferredHeight=\"30\"/&gt;\n+                                &lt;PushButton buttonData=\"5\" preferredWidth=\"40\" preferredHeight=\"40\"/&gt;\n+                                &lt;PushButton buttonData=\"6\" styles=\"{minimumAspectRatio:1.5}\"/&gt;\n+                                &lt;PushButton buttonData=\"7\" styles=\"{minimumAspectRatio:1.5}\"/&gt;\n+                            &lt;/FlowPane&gt;\n                         &lt;/BoxPane&gt;\n                     &lt;/content&gt;\n                 &lt;/Border&gt;", "filename": "tutorials/www/flow_panes.html"}, {"additions": 41, "raw_url": "https://github.com/apache/pivot/raw/2f2122f0589ba80be4b21bf6b52153a03ec0c701/wtk/src/org/apache/pivot/wtk/skin/BoxPaneSkin.java", "blob_url": "https://github.com/apache/pivot/blob/2f2122f0589ba80be4b21bf6b52153a03ec0c701/wtk/src/org/apache/pivot/wtk/skin/BoxPaneSkin.java", "sha": "d5bd725c2cf4b962ec42e62b1659c80dbc729e82", "changes": 73, "status": "modified", "deletions": 32, "contents_url": "https://api.github.com/repos/apache/pivot/contents/wtk/src/org/apache/pivot/wtk/skin/BoxPaneSkin.java?ref=2f2122f0589ba80be4b21bf6b52153a03ec0c701", "patch": "@@ -98,7 +98,17 @@ public int getPreferredHeight(int width) {\n         int preferredHeight = 0;\n \n         Orientation orientation = boxPane.getOrientation();\n-        if (orientation == Orientation.VERTICAL) {\n+        if (orientation == Orientation.HORIZONTAL) {\n+            // Preferred height is the maximum preferred height of all components\n+            for (int i = 0, n = boxPane.getLength(); i < n; i++) {\n+                Component component = boxPane.get(i);\n+\n+                if (component.isVisible()) {\n+                    preferredHeight = Math.max(preferredHeight,\n+                        component.getPreferredHeight());\n+                }\n+            }\n+        } else {\n             // Include padding in constraint\n             if (width != -1) {\n                 width = Math.max(width - (padding.left + padding.right), 0);\n@@ -119,16 +129,6 @@ public int getPreferredHeight(int width) {\n             if (j > 1) {\n                 preferredHeight += spacing * (j - 1);\n             }\n-        } else {\n-            // Preferred height is the maximum preferred height of all components\n-            for (int i = 0, n = boxPane.getLength(); i < n; i++) {\n-                Component component = boxPane.get(i);\n-\n-                if (component.isVisible()) {\n-                    preferredHeight = Math.max(preferredHeight,\n-                        component.getPreferredHeight());\n-                }\n-            }\n         }\n \n         // Include top and bottom padding values\n@@ -206,36 +206,45 @@ public int getBaseline(int width, int height) {\n \n         switch (boxPane.getOrientation()) {\n             case HORIZONTAL: {\n-                int clientHeight = Math.max(height - (padding.top + padding.bottom), 0);\n+                if (fill) {\n+                    int clientHeight = Math.max(height - (padding.top + padding.bottom), 0);\n \n-                for (Component component : boxPane) {\n-                    if (component.isVisible()) {\n-                        Dimensions size;\n-                        if (fill) {\n-                            size = new Dimensions(component.getPreferredWidth(clientHeight), clientHeight);\n-                        } else {\n-                            size = component.getPreferredSize();\n+                    for (Component component : boxPane) {\n+                        if (component.isVisible()) {\n+                            int componentWidth = component.getPreferredWidth(clientHeight);\n+                            baseline = Math.max(baseline, component.getBaseline(componentWidth, clientHeight));\n+                        }\n+                    }\n+                } else {\n+                    contentHeight = 0;\n+                    for (Component component : boxPane) {\n+                        if (component.isVisible()) {\n+                            contentHeight = Math.max(contentHeight, component.getPreferredHeight());\n                         }\n+                    }\n \n-                        contentHeight = Math.max(contentHeight, size.height);\n+                    for (Component component : boxPane) {\n+                        if (component.isVisible()) {\n+                            Dimensions size = component.getPreferredSize();\n \n-                        int componentBaseline = component.getBaseline(size.width, size.height);\n+                            int componentBaseline = component.getBaseline(size.width, size.height);\n \n-                        if (!fill) {\n-                            switch (verticalAlignment) {\n-                                case CENTER: {\n-                                    componentBaseline += (clientHeight - size.height) / 2;\n-                                    break;\n-                                }\n+                            if (componentBaseline != -1) {\n+                                switch (verticalAlignment) {\n+                                    case CENTER: {\n+                                        componentBaseline += (contentHeight - size.height) / 2;\n+                                        break;\n+                                    }\n \n-                                case BOTTOM: {\n-                                    componentBaseline += clientHeight - size.height;\n-                                    break;\n+                                    case BOTTOM: {\n+                                        componentBaseline += contentHeight - size.height;\n+                                        break;\n+                                    }\n                                 }\n                             }\n-                        }\n \n-                        baseline = Math.max(baseline, componentBaseline);\n+                            baseline = Math.max(baseline, componentBaseline);\n+                        }\n                     }\n                 }\n ", "filename": "wtk/src/org/apache/pivot/wtk/skin/BoxPaneSkin.java"}, {"additions": 6, "raw_url": "https://github.com/apache/pivot/raw/2f2122f0589ba80be4b21bf6b52153a03ec0c701/wtk/src/org/apache/pivot/wtk/skin/FlowPaneSkin.java", "blob_url": "https://github.com/apache/pivot/blob/2f2122f0589ba80be4b21bf6b52153a03ec0c701/wtk/src/org/apache/pivot/wtk/skin/FlowPaneSkin.java", "sha": "6c9e7caa3db0c2034800a1565cf37d2d4acdb5aa", "changes": 17, "status": "modified", "deletions": 11, "contents_url": "https://api.github.com/repos/apache/pivot/contents/wtk/src/org/apache/pivot/wtk/skin/FlowPaneSkin.java?ref=2f2122f0589ba80be4b21bf6b52153a03ec0c701", "patch": "@@ -309,18 +309,13 @@ public void layout() {\n \n             for (Component component : row) {\n                 int y;\n+                int componentBaseline = component.getBaseline(component.getWidth(),\n+                    component.getHeight());\n                 if (alignToBaseline\n-                    && baseline != -1) {\n-                    int componentBaseline = component.getBaseline(component.getWidth(),\n-                        component.getHeight());\n-\n-                    if (componentBaseline != -1) {\n-                        // Align to baseline\n-                        y = baseline - componentBaseline;\n-                    } else {\n-                        // Align to bottom\n-                        y = rowHeight - component.getHeight();\n-                    }\n+                    && baseline != -1\n+                    && componentBaseline != -1) {\n+                    // Align to baseline\n+                    y = baseline - componentBaseline;\n                 } else {\n                     // Align to bottom\n                     y = rowHeight - component.getHeight();", "filename": "wtk/src/org/apache/pivot/wtk/skin/FlowPaneSkin.java"}, {"additions": 10, "raw_url": "https://github.com/apache/pivot/raw/2f2122f0589ba80be4b21bf6b52153a03ec0c701/wtk/src/org/apache/pivot/wtk/skin/TextAreaSkin.java", "blob_url": "https://github.com/apache/pivot/blob/2f2122f0589ba80be4b21bf6b52153a03ec0c701/wtk/src/org/apache/pivot/wtk/skin/TextAreaSkin.java", "sha": "f5965aeefa0c10380affa1bd3cfa2432d5c1212c", "changes": 13, "status": "modified", "deletions": 3, "contents_url": "https://api.github.com/repos/apache/pivot/contents/wtk/src/org/apache/pivot/wtk/skin/TextAreaSkin.java?ref=2f2122f0589ba80be4b21bf6b52153a03ec0c701", "patch": "@@ -401,7 +401,11 @@ public Bounds getCharacterBounds(int offset) {\n                 }\n             }\n \n-            return characterBounds.intersect(0, 0, getWidth(), getHeight());\n+            if (characterBounds != null) {\n+                characterBounds = characterBounds.intersect(0, 0, getWidth(), getHeight());\n+            }\n+\n+            return characterBounds;\n         }\n \n         @Override\n@@ -1627,8 +1631,11 @@ public Bounds getCharacterBounds(int offset) {\n     private void scrollCharacterToVisible(int offset) {\n         TextArea textArea = (TextArea)getComponent();\n         Bounds characterBounds = getCharacterBounds(offset);\n-        textArea.scrollAreaToVisible(0, characterBounds.y, characterBounds.width,\n-            characterBounds.height);\n+\n+        if (characterBounds != null) {\n+            textArea.scrollAreaToVisible(0, characterBounds.y, characterBounds.width,\n+                characterBounds.height);\n+        }\n     }\n \n     public Color getColor() {", "filename": "wtk/src/org/apache/pivot/wtk/skin/TextAreaSkin.java"}, {"additions": 21, "raw_url": "https://github.com/apache/pivot/raw/2f2122f0589ba80be4b21bf6b52153a03ec0c701/wtk/src/org/apache/pivot/wtk/skin/terra/TerraTextInputSkin.java", "blob_url": "https://github.com/apache/pivot/blob/2f2122f0589ba80be4b21bf6b52153a03ec0c701/wtk/src/org/apache/pivot/wtk/skin/terra/TerraTextInputSkin.java", "sha": "70968a57c8bd628b481a956559fd859d0653d53e", "changes": 33, "status": "modified", "deletions": 12, "contents_url": "https://api.github.com/repos/apache/pivot/contents/wtk/src/org/apache/pivot/wtk/skin/terra/TerraTextInputSkin.java?ref=2f2122f0589ba80be4b21bf6b52153a03ec0c701", "patch": "@@ -460,15 +460,21 @@ public int getInsertionPoint(int x) {\n     }\n \n     public Bounds getCharacterBounds(int offset) {\n-        Shape glyphBounds = glyphVector.getGlyphLogicalBounds(offset);\n-        Rectangle2D glyphBounds2D = glyphBounds.getBounds2D();\n+        Bounds characterBounds = null;\n \n-        int x = (int)Math.floor(glyphBounds2D.getX()) + padding.left - scrollLeft + 1;\n-        int y = padding.top + 1;\n-        int width = (int)Math.ceil(glyphBounds2D.getWidth());\n-        int height = getHeight() - (padding.top + padding.bottom + 2);\n+        if (glyphVector != null) {\n+            Shape glyphBounds = glyphVector.getGlyphLogicalBounds(offset);\n+            Rectangle2D glyphBounds2D = glyphBounds.getBounds2D();\n \n-        return new Bounds(x, y, width, height);\n+            int x = (int)Math.floor(glyphBounds2D.getX()) + padding.left - scrollLeft + 1;\n+            int y = padding.top + 1;\n+            int width = (int)Math.ceil(glyphBounds2D.getWidth());\n+            int height = getHeight() - (padding.top + padding.bottom + 2);\n+\n+            characterBounds = new Bounds(x, y, width, height);\n+        }\n+\n+        return characterBounds;\n     }\n \n     private void setScrollLeft(int scrollLeft) {\n@@ -480,12 +486,15 @@ private void setScrollLeft(int scrollLeft) {\n     private void scrollCharacterToVisible(int offset) {\n         int width = getWidth();\n         Bounds characterBounds = getCharacterBounds(offset);\n-        int glyphX = characterBounds.x - (padding.left + 1) + scrollLeft;\n \n-        if (characterBounds.x < padding.left + 1) {\n-            setScrollLeft(glyphX);\n-        } else if (characterBounds.x + characterBounds.width > width - (padding.right + 1)) {\n-            setScrollLeft(glyphX + (padding.left + padding.right + 2) + characterBounds.width - width);\n+        if (characterBounds != null) {\n+            int glyphX = characterBounds.x - (padding.left + 1) + scrollLeft;\n+\n+            if (characterBounds.x < padding.left + 1) {\n+                setScrollLeft(glyphX);\n+            } else if (characterBounds.x + characterBounds.width > width - (padding.right + 1)) {\n+                setScrollLeft(glyphX + (padding.left + padding.right + 2) + characterBounds.width - width);\n+            }\n         }\n     }\n ", "filename": "wtk/src/org/apache/pivot/wtk/skin/terra/TerraTextInputSkin.java"}, {"additions": 23, "raw_url": "https://github.com/apache/pivot/raw/2f2122f0589ba80be4b21bf6b52153a03ec0c701/wtk/test/org/apache/pivot/wtk/test/flow_pane_test.wtkx", "blob_url": "https://github.com/apache/pivot/blob/2f2122f0589ba80be4b21bf6b52153a03ec0c701/wtk/test/org/apache/pivot/wtk/test/flow_pane_test.wtkx", "sha": "54e82be398d2070038b2c6ac1c712dcc37723dae", "changes": 26, "status": "modified", "deletions": 3, "contents_url": "https://api.github.com/repos/apache/pivot/contents/wtk/test/org/apache/pivot/wtk/test/flow_pane_test.wtkx?ref=2f2122f0589ba80be4b21bf6b52153a03ec0c701", "patch": "@@ -16,12 +16,14 @@ See the License for the specific language governing permissions and\n limitations under the License.\n -->\n \n-<Frame title=\"FlowPane Test\" preferredWidth=\"320\"\n-    styles=\"{padding:0}\"\n+<Frame title=\"FlowPane Test\" styles=\"{padding:0}\"\n     xmlns:wtkx=\"http://pivot.apache.org/wtkx\"\n+    xmlns:content=\"org.apache.pivot.wtk.content\"\n+    xmlns:effects=\"org.apache.pivot.wtk.effects\"\n     xmlns=\"org.apache.pivot.wtk\">\n     <content>\n-        <FlowPane styles=\"{alignment:'left', backgroundColor:'#ff0000', padding:4}\">\n+        <FlowPane styles=\"{alignment:'left', padding:4}\">\n+            <!--\n             <PushButton buttonData=\"0\" styles=\"{minimumAspectRatio:15}\"/>\n             <PushButton buttonData=\"1\" styles=\"{minimumAspectRatio:1.5}\"/>\n             <PushButton buttonData=\"2\" visible=\"false\" styles=\"{minimumAspectRatio:1.5}\"/>\n@@ -39,6 +41,24 @@ limitations under the License.\n             <PushButton buttonData=\"D\" styles=\"{minimumAspectRatio:1.5}\"/>\n             <PushButton buttonData=\"E\" styles=\"{minimumAspectRatio:1.5}\"/>\n             <PushButton buttonData=\"F\" styles=\"{minimumAspectRatio:1.5}\"/>\n+            -->\n+            <PushButton buttonData=\"Hello\" preferredHeight=\"80\">\n+                <decorators>\n+                    <effects:BaselineDecorator/>\n+                </decorators>\n+                <dataRenderer>\n+                    <content:ButtonDataRenderer styles=\"{verticalAlignment:'bottom'}\"/>\n+                </dataRenderer>\n+            </PushButton>\n+\n+            <PushButton buttonData=\"World\" preferredHeight=\"80\">\n+                <decorators>\n+                    <effects:BaselineDecorator/>\n+                </decorators>\n+                <dataRenderer>\n+                    <content:ButtonDataRenderer styles=\"{verticalAlignment:'top'}\"/>\n+                </dataRenderer>\n+            </PushButton>\n         </FlowPane>\n     </content>\n </Frame>", "filename": "wtk/test/org/apache/pivot/wtk/test/flow_pane_test.wtkx"}], "repo": "pivot"}, {"commit": "https://github.com/apache/pivot/commit/0a55099e5d7178b9fdeea1f228dcde1ae86de696", "parent": "https://github.com/apache/pivot/commit/a891e0fd52b53bba93fe022ca58dae58f9bb0051", "message": "Applied workaround for Sun bug #6513150 (Zero scale AffineTransforms gives NPE in SunGraphics2D.getClipBounds())\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/pivot/trunk@821116 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "pivot_17", "file": [{"additions": 3, "raw_url": "https://github.com/apache/pivot/raw/0a55099e5d7178b9fdeea1f228dcde1ae86de696/wtk/src/org/apache/pivot/wtk/effects/ScaleDecorator.java", "blob_url": "https://github.com/apache/pivot/blob/0a55099e5d7178b9fdeea1f228dcde1ae86de696/wtk/src/org/apache/pivot/wtk/effects/ScaleDecorator.java", "sha": "9c29f7065c91d0cb8c5761a49ed180b41d9e27f3", "changes": 4, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/pivot/contents/wtk/src/org/apache/pivot/wtk/effects/ScaleDecorator.java?ref=0a55099e5d7178b9fdeea1f228dcde1ae86de696", "patch": "@@ -354,7 +354,9 @@ public Graphics2D prepare(Component component, Graphics2D graphics) {\n             graphics.translate(tx, ty);\n         }\n \n-        graphics.scale(scaleX, scaleY);\n+        // TODO revisit. This is a workaround for Sun bug #6513150, which\n+        // fails if we apply a zero scale on the graphics (should be legal).\n+        graphics.scale(Math.max(scaleX, Float.MIN_NORMAL), Math.max(scaleY, Float.MIN_NORMAL));\n \n         return graphics;\n     }", "filename": "wtk/src/org/apache/pivot/wtk/effects/ScaleDecorator.java"}, {"additions": 2, "raw_url": "https://github.com/apache/pivot/raw/0a55099e5d7178b9fdeea1f228dcde1ae86de696/wtk/src/org/apache/pivot/wtk/skin/CardPaneSkin.java", "blob_url": "https://github.com/apache/pivot/blob/0a55099e5d7178b9fdeea1f228dcde1ae86de696/wtk/src/org/apache/pivot/wtk/skin/CardPaneSkin.java", "sha": "ffd37d2223e7b33885eeb86f32d1688d50fd6c96", "changes": 4, "status": "modified", "deletions": 2, "contents_url": "https://api.github.com/repos/apache/pivot/contents/wtk/src/org/apache/pivot/wtk/skin/CardPaneSkin.java?ref=0a55099e5d7178b9fdeea1f228dcde1ae86de696", "patch": "@@ -223,9 +223,9 @@ protected void update() {\n                 float scale = (float)Math.abs(Math.cos(theta));\n \n                 if (orientation == Orientation.HORIZONTAL) {\n-                    scaleDecorator.setScale(Math.max(scale, 0.01f), 1.0f);\n+                    scaleDecorator.setScale(scale, 1.0f);\n                 } else {\n-                    scaleDecorator.setScale(1.0f, Math.max(scale, 0.01f));\n+                    scaleDecorator.setScale(1.0f, scale);\n                 }\n \n                 fromCard.setVisible(theta < Math.PI / 2);", "filename": "wtk/src/org/apache/pivot/wtk/skin/CardPaneSkin.java"}], "repo": "pivot"}, {"commit": "https://github.com/apache/pivot/commit/53aacda2264fac4a55121551a1f1ff68c2d5bcde", "parent": "https://github.com/apache/pivot/commit/fc49e992ef56d7410a39410acf0a19b68a544ad5", "message": "Restore behavior that fails gracefully when a named serializer does not exist in WTKXSerializer#get() and containsKey() (rather than throwing NPE).\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/pivot/trunk@819531 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "pivot_18", "file": [{"additions": 10, "raw_url": "https://github.com/apache/pivot/raw/53aacda2264fac4a55121551a1f1ff68c2d5bcde/wtk/src/org/apache/pivot/wtkx/WTKXSerializer.java", "blob_url": "https://github.com/apache/pivot/blob/53aacda2264fac4a55121551a1f1ff68c2d5bcde/wtk/src/org/apache/pivot/wtkx/WTKXSerializer.java", "sha": "60329185e949334c36096a914e54d567b0dbe970", "changes": 14, "status": "modified", "deletions": 4, "contents_url": "https://api.github.com/repos/apache/pivot/contents/wtk/src/org/apache/pivot/wtkx/WTKXSerializer.java?ref=53aacda2264fac4a55121551a1f1ff68c2d5bcde", "patch": "@@ -1070,7 +1070,7 @@ public Object get(String name) {\n             throw new IllegalArgumentException(\"name is null.\");\n         }\n \n-        Object value;\n+        Object value = null;\n \n         int i = name.lastIndexOf('.');\n         if (i == -1) {\n@@ -1079,7 +1079,10 @@ public Object get(String name) {\n             String serializerName = name.substring(0, name.lastIndexOf('.'));\n             String id = name.substring(serializerName.length() + 1);\n             WTKXSerializer serializer = getSerializer(serializerName);\n-            value = serializer.get(id);\n+\n+            if (serializer != null) {\n+                value = serializer.get(id);\n+            }\n         }\n \n         return value;\n@@ -1133,7 +1136,7 @@ public boolean containsKey(String name) {\n             throw new IllegalArgumentException(\"name is null.\");\n         }\n \n-        boolean containsKey;\n+        boolean containsKey = false;\n \n         int i = name.lastIndexOf('.');\n         if (i == -1) {\n@@ -1142,7 +1145,10 @@ public boolean containsKey(String name) {\n             String serializerName = name.substring(0, name.lastIndexOf('.'));\n             String id = name.substring(serializerName.length() + 1);\n             WTKXSerializer serializer = getSerializer(serializerName);\n-            containsKey = serializer.containsKey(id);\n+\n+            if (serializer != null) {\n+                containsKey = serializer.containsKey(id);\n+            }\n         }\n \n         return containsKey;", "filename": "wtk/src/org/apache/pivot/wtkx/WTKXSerializer.java"}], "repo": "pivot"}, {"commit": "https://github.com/apache/pivot/commit/48a0a254d67cb3a510a4933e71f12eb2e5e32dcb", "parent": "https://github.com/apache/pivot/commit/61d56874658add02632934836f58b67f74524951", "message": "fix NPE on isCloseable if attributes was null, setting a value to be returned to false\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/pivot/trunk@800355 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "pivot_19", "file": [{"additions": 1, "raw_url": "https://github.com/apache/pivot/raw/48a0a254d67cb3a510a4933e71f12eb2e5e32dcb/wtk/src/org/apache/pivot/wtk/TabPane.java", "blob_url": "https://github.com/apache/pivot/blob/48a0a254d67cb3a510a4933e71f12eb2e5e32dcb/wtk/src/org/apache/pivot/wtk/TabPane.java", "sha": "c0fe2d1976bc3110ad460c161e59e45f2ed406ae", "changes": 2, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/pivot/contents/wtk/src/org/apache/pivot/wtk/TabPane.java?ref=48a0a254d67cb3a510a4933e71f12eb2e5e32dcb", "patch": "@@ -380,7 +380,7 @@ public static final void setIcon(Component component, String icon) {\n \n     public static boolean isCloseable(Component component) {\n         Attributes attributes = (Attributes)component.getAttributes();\n-        return (attributes == null) ? null : attributes.closeable;\n+        return (attributes == null) ? false : attributes.closeable;\n     }\n \n     public static void setCloseable(Component component, boolean closeable) {", "filename": "wtk/src/org/apache/pivot/wtk/TabPane.java"}], "repo": "pivot"}, {"commit": "https://github.com/apache/pivot/commit/254953205afc20ce25259d8204a68ffc06ef742d", "parent": "https://github.com/apache/pivot/commit/c6d3be91f48767236f811884358fca62763e989a", "message": "Fix potential NPE in pivot.util.Service; hard-code calendar locales in Kitchen Sink demo; move WTKX binding code to WTKXSerializer.bind().\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/pivot/trunk@771310 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "pivot_20", "file": [{"additions": 8, "raw_url": "https://github.com/apache/pivot/raw/254953205afc20ce25259d8204a68ffc06ef742d/core/src/pivot/util/Service.java", "blob_url": "https://github.com/apache/pivot/blob/254953205afc20ce25259d8204a68ffc06ef742d/core/src/pivot/util/Service.java", "sha": "605b0f22b3122ddaadb69d5d36909bc819f2409b", "changes": 14, "status": "modified", "deletions": 6, "contents_url": "https://api.github.com/repos/apache/pivot/contents/core/src/pivot/util/Service.java?ref=254953205afc20ce25259d8204a68ffc06ef742d", "patch": "@@ -86,12 +86,14 @@ public static Object getProvider(String providerName) {\n         }\n \n         Object provider = null;\n-        try {\n-            provider = providerClass.newInstance();\n-        } catch(InstantiationException exception) {\n-            // No-op\n-        } catch(IllegalAccessException exception) {\n-            // No-op\n+        if (providerClass != null) {\n+            try {\n+                provider = providerClass.newInstance();\n+            } catch(InstantiationException exception) {\n+                // No-op\n+            } catch(IllegalAccessException exception) {\n+                // No-op\n+            }\n         }\n \n         return provider;", "filename": "core/src/pivot/util/Service.java"}, {"additions": 4, "raw_url": "https://github.com/apache/pivot/raw/254953205afc20ce25259d8204a68ffc06ef742d/core/src/pivot/util/ThreadUtilities.java", "blob_url": "https://github.com/apache/pivot/blob/254953205afc20ce25259d8204a68ffc06ef742d/core/src/pivot/util/ThreadUtilities.java", "sha": "4bd38f3760639253608eae942a51e82f41adb3e5", "changes": 8, "status": "modified", "deletions": 4, "contents_url": "https://api.github.com/repos/apache/pivot/contents/core/src/pivot/util/ThreadUtilities.java?ref=254953205afc20ce25259d8204a68ffc06ef742d", "patch": "@@ -17,7 +17,7 @@\n package pivot.util;\n \n /**\n- * Contains utility methods dealing with threads.\n+ * Contains utility methods for dealing with threads.\n  *\n  * @author tvolkert\n  */\n@@ -36,10 +36,10 @@ public static ClassLoader getClassLoader() {\n         // TODO This method is only necessary if the Pivot classes (and by\n         // association, the application classes and resources) were loaded\n         // from a different class loader than the UI thread's class loader.\n-        // Curently, this case exists in the IcedTea plug-in and when we load\n-        // the Pivot classes manully using a bootstrap applet. If these cases\n+        // Currently, this case exists in the IcedTea plug-in and when we load\n+        // the Pivot classes manually using a bootstrap applet. If these cases\n         // ever cease to exist, then this method becomes superfluous and should\n-        // be replaced with Thread.currentThread().getContextClassLoader()\n+        // be replaced with Thread.currentThread().getContextClassLoader().\n         ClassLoader classLoader;\n \n         try {", "filename": "core/src/pivot/util/ThreadUtilities.java"}, {"additions": 4, "raw_url": "https://github.com/apache/pivot/raw/254953205afc20ce25259d8204a68ffc06ef742d/tutorials/src/pivot/tutorials/calendars.wtkx", "blob_url": "https://github.com/apache/pivot/blob/254953205afc20ce25259d8204a68ffc06ef742d/tutorials/src/pivot/tutorials/calendars.wtkx", "sha": "1e50eea67b7489e8c15bead0321fe404f24e61a1", "changes": 8, "status": "modified", "deletions": 4, "contents_url": "https://api.github.com/repos/apache/pivot/contents/tutorials/src/pivot/tutorials/calendars.wtkx?ref=254953205afc20ce25259d8204a68ffc06ef742d", "patch": "@@ -25,7 +25,7 @@ limitations under the License.\n                     <Label text=\"English (US)\" styles=\"{fontBold:true}\"/>\n                     <Border styles=\"{padding:0}\">\n                         <content>\n-                            <Calendar/>\n+                            <Calendar locale=\"{language:'en', country:'us'}\"/>\n                         </content>\n                     </Border>\n                 </FlowPane>\n@@ -34,7 +34,7 @@ limitations under the License.\n                     <Label text=\"Fran\u00e7ais (FR)\" styles=\"{fontBold:true}\"/>\n                     <Border styles=\"{padding:0}\">\n                         <content>\n-                            <Calendar locale=\"{language:'fr'}\"/>\n+                            <Calendar locale=\"{language:'fr', country:'fr'}\"/>\n                         </content>\n                     </Border>\n                 </FlowPane>\n@@ -44,10 +44,10 @@ limitations under the License.\n                     <Form>\n                         <sections>\n                             <Form.Section>\n-                                <CalendarButton Form.name=\"English (US)\"/>\n+                                <CalendarButton Form.name=\"English (US)\" locale=\"{language:'en', country:'us'}\"/>\n                                 <CalendarButton Form.name=\"Espa\u00f1ole (US)\" locale=\"{language:'es', country:'us'}\"/>\n                                 <CalendarButton Form.name=\"Espa\u00f1ole (ES)\" locale=\"{language:'es', country:'es'}\"/>\n-                                <CalendarButton Form.name=\"Fran\u00e7ais (FR)\" locale=\"{language:'fr'}\"/>\n+                                <CalendarButton Form.name=\"Fran\u00e7ais (FR)\" locale=\"{language:'fr', country:'fr'}\"/>\n                                 <CalendarButton Form.name=\"Fran\u00e7ais (CA)\" locale=\"{language:'fr', country:'ca'}\"/>\n                             </Form.Section>\n                         </sections>", "filename": "tutorials/src/pivot/tutorials/calendars.wtkx"}, {"additions": 3, "raw_url": "https://github.com/apache/pivot/raw/254953205afc20ce25259d8204a68ffc06ef742d/tutorials/src/pivot/tutorials/drawing/RotateLine.java", "blob_url": "https://github.com/apache/pivot/blob/254953205afc20ce25259d8204a68ffc06ef742d/tutorials/src/pivot/tutorials/drawing/RotateLine.java", "sha": "364e45865d9bec80b1ee957e73d3ae39b521fad1", "changes": 3, "status": "modified", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/pivot/contents/tutorials/src/pivot/tutorials/drawing/RotateLine.java?ref=254953205afc20ce25259d8204a68ffc06ef742d", "patch": "@@ -11,6 +11,7 @@\n import pivot.wtk.media.drawing.Shape;\n import pivot.wtkx.Bind;\n import pivot.wtkx.Load;\n+import pivot.wtkx.WTKXSerializer;\n \n public class RotateLine implements Application {\n     @Load(name=\"rotate_line.wtkd\")\n@@ -23,6 +24,8 @@\n \n     public void startup(Display display, Dictionary<String, String> properties)\n         throws Exception{\n+        WTKXSerializer.bind(this);\n+\n         ApplicationContext.scheduleRecurringCallback(new Runnable() {\n             public void run() {\n                 int angle = (int)rotation.getAngle();", "filename": "tutorials/src/pivot/tutorials/drawing/RotateLine.java"}, {"additions": 0, "raw_url": "https://github.com/apache/pivot/raw/254953205afc20ce25259d8204a68ffc06ef742d/wtk/src/pivot/wtk/ApplicationContext.java", "blob_url": "https://github.com/apache/pivot/blob/254953205afc20ce25259d8204a68ffc06ef742d/wtk/src/pivot/wtk/ApplicationContext.java", "sha": "30aa82ef2071d87e5a12e502abfa524cd4573a8a", "changes": 93, "status": "modified", "deletions": 93, "contents_url": "https://api.github.com/repos/apache/pivot/contents/wtk/src/pivot/wtk/ApplicationContext.java?ref=254953205afc20ce25259d8204a68ffc06ef742d", "patch": "@@ -41,11 +41,8 @@\n import java.awt.event.KeyEvent;\n import java.awt.event.MouseEvent;\n import java.awt.event.MouseWheelEvent;\n-import java.io.IOException;\n-import java.lang.reflect.Field;\n import java.lang.reflect.InvocationTargetException;\n import java.lang.reflect.Method;\n-import java.lang.reflect.Modifier;\n import java.net.URI;\n import java.net.URL;\n import java.util.Iterator;\n@@ -54,17 +51,12 @@\n \n import pivot.collections.Dictionary;\n import pivot.collections.HashMap;\n-import pivot.serialization.SerializationException;\n import pivot.util.ImmutableIterator;\n import pivot.util.Version;\n import pivot.wtk.Component.DecoratorSequence;\n import pivot.wtk.Manifest;\n import pivot.wtk.RemoteManifest;\n import pivot.wtk.effects.Decorator;\n-import pivot.wtkx.Bind;\n-import pivot.wtkx.BindException;\n-import pivot.wtkx.Load;\n-import pivot.wtkx.WTKXSerializer;\n \n /**\n  * Base class for application contexts.\n@@ -1324,91 +1316,6 @@ protected static void destroyTimer() {\n         timer = null;\n     }\n \n-    protected static void bind(Application application)\n-        throws IOException, BindException  {\n-        assert(application != null);\n-\n-        // Maps resource field name to the serializer that loaded the resource\n-        HashMap<String, WTKXSerializer> wtkxSerializers = new HashMap<String, WTKXSerializer>();\n-\n-        // Walk field lists and resolve WTKX annotations\n-        Class<?> applicationClass = application.getClass();\n-        Field[] fields = applicationClass.getDeclaredFields();\n-        for (int i = 0; i < fields.length; i++) {\n-            Field field = fields[i];\n-            Load loadAnnotation = field.getAnnotation(Load.class);\n-\n-            if (loadAnnotation != null) {\n-                // Create a serializer for the resource\n-                String fieldName = field.getName();\n-                assert(!wtkxSerializers.containsKey(fieldName));\n-\n-                WTKXSerializer wtkxSerializer = new WTKXSerializer();\n-                wtkxSerializers.put(fieldName, wtkxSerializer);\n-\n-                // Load the resource\n-                URL location = applicationClass.getResource(loadAnnotation.name());\n-                Object resource;\n-                try {\n-                    resource = wtkxSerializer.readObject(location);\n-                } catch(SerializationException exception) {\n-                    throw new BindException(exception);\n-                }\n-\n-                // Set the resource into the field\n-                if ((field.getModifiers() & Modifier.PUBLIC) == 0) {\n-                    field.setAccessible(true);\n-                }\n-\n-                try {\n-                    field.set(application, resource);\n-                } catch(IllegalAccessException exception) {\n-                    throw new BindException(exception);\n-                }\n-\n-                if ((field.getModifiers() & Modifier.PUBLIC) == 0) {\n-                    field.setAccessible(false);\n-                }\n-            }\n-\n-            Bind bindAnnotation = field.getAnnotation(Bind.class);\n-            if (bindAnnotation != null) {\n-                if (loadAnnotation != null) {\n-                    throw new BindException(\"Cannot combine \" + Load.class.getName()\n-                        + \" and \" + Bind.class.getName() + \" annotations.\");\n-                }\n-\n-                // Bind to the value loaded by the field's serializer\n-                String fieldName = bindAnnotation.resource();\n-                WTKXSerializer wtkxSerializer = wtkxSerializers.get(fieldName);\n-                if (wtkxSerializer == null) {\n-                    throw new BindException(\"\\\"\" + fieldName + \"\\\" is not a valid resource name.\");\n-                }\n-\n-                String id = bindAnnotation.id();\n-                Object value = wtkxSerializer.getObjectByName(id);\n-                if (value == null) {\n-                    throw new BindException(\"\\\"\" + id + \"\\\" does not exist.\");\n-                }\n-\n-                // Set the value into the field\n-                if ((field.getModifiers() & Modifier.PUBLIC) == 0) {\n-                    field.setAccessible(true);\n-                }\n-\n-                try {\n-                    field.set(application, value);\n-                } catch(IllegalAccessException exception) {\n-                    throw new BindException(exception);\n-                }\n-\n-                if ((field.getModifiers() & Modifier.PUBLIC) == 0) {\n-                    field.setAccessible(false);\n-                }\n-            }\n-        }\n-    }\n-\n     private static DropAction getUserDropAction(InputEvent event) {\n         DropAction userDropAction;\n ", "filename": "wtk/src/pivot/wtk/ApplicationContext.java"}, {"additions": 0, "raw_url": "https://github.com/apache/pivot/raw/254953205afc20ce25259d8204a68ffc06ef742d/wtk/src/pivot/wtk/BrowserApplicationContext.java", "blob_url": "https://github.com/apache/pivot/blob/254953205afc20ce25259d8204a68ffc06ef742d/wtk/src/pivot/wtk/BrowserApplicationContext.java", "sha": "cef495d239ff3a2b0c504446a20cbf98bdb81ac0", "changes": 1, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/pivot/contents/wtk/src/pivot/wtk/BrowserApplicationContext.java?ref=254953205afc20ce25259d8204a68ffc06ef742d", "patch": "@@ -172,7 +172,6 @@ public void run() {\n \n                 if (application != null) {\n                     try {\n-                        bind(application);\n                         application.startup(applicationContext.getDisplay(), propertyDictionary);\n                     } catch(Exception exception) {\n                         Alert.alert(MessageType.ERROR, exception.getMessage(),", "filename": "wtk/src/pivot/wtk/BrowserApplicationContext.java"}, {"additions": 0, "raw_url": "https://github.com/apache/pivot/raw/254953205afc20ce25259d8204a68ffc06ef742d/wtk/src/pivot/wtk/DesktopApplicationContext.java", "blob_url": "https://github.com/apache/pivot/blob/254953205afc20ce25259d8204a68ffc06ef742d/wtk/src/pivot/wtk/DesktopApplicationContext.java", "sha": "b4309eac21ca34f8734deabb7c04039f1e36d506", "changes": 1, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/pivot/contents/wtk/src/pivot/wtk/DesktopApplicationContext.java?ref=254953205afc20ce25259d8204a68ffc06ef742d", "patch": "@@ -69,7 +69,6 @@ public void processWindowEvent(WindowEvent event) {\n                     createTimer();\n \n                     try {\n-                        bind(application);\n                         application.startup(applicationContext.getDisplay(),\n                             new ImmutableMap<String, String>(properties));\n                     } catch(Exception exception) {", "filename": "wtk/src/pivot/wtk/DesktopApplicationContext.java"}, {"additions": 91, "raw_url": "https://github.com/apache/pivot/raw/254953205afc20ce25259d8204a68ffc06ef742d/wtk/src/pivot/wtkx/WTKXSerializer.java", "blob_url": "https://github.com/apache/pivot/blob/254953205afc20ce25259d8204a68ffc06ef742d/wtk/src/pivot/wtkx/WTKXSerializer.java", "sha": "d6cc4bae165879aa4c2e6db0b819ab00d4651b97", "changes": 94, "status": "modified", "deletions": 3, "contents_url": "https://api.github.com/repos/apache/pivot/contents/wtk/src/pivot/wtkx/WTKXSerializer.java?ref=254953205afc20ce25259d8204a68ffc06ef742d", "patch": "@@ -159,7 +159,9 @@ public Object readObject(String resourceName) throws IOException,\n         return readObject(location);\n     }\n \n-    public Object readObject(URL location) throws IOException, SerializationException {\n+    @SuppressWarnings(\"unchecked\")\n+    public Object readObject(URL location) throws IOException,\n+        SerializationException {\n         if (location == null) {\n             throw new IllegalArgumentException(\"location is null.\");\n         }\n@@ -623,6 +625,9 @@ public WTKXSerializer getSerializerByName(String name) {\n     /**\n      * Retrieves a named object.\n      *\n+     * @param <T>\n+     * The type of the object to return.\n+     *\n      * @param name\n      * The name of the object, relative to this loader. The values's name is the\n      * concatentation of its parent namespaces and its ID, separated by periods\n@@ -631,7 +636,8 @@ public WTKXSerializer getSerializerByName(String name) {\n      * @return The named object, or <tt>null</tt> if an object with the given\n      * name does not exist.\n      */\n-    public Object getObjectByName(String name) {\n+    @SuppressWarnings(\"unchecked\")\n+    public <T> T getObjectByName(String name) {\n         if (name == null) {\n             throw new IllegalArgumentException(\"name is null.\");\n         }\n@@ -651,7 +657,7 @@ public Object getObjectByName(String name) {\n         \tobject = serializer.getObjectByID(namespacePath[i]);\n         }\n \n-        return object;\n+        return (T)object;\n     }\n \n     private Object getObjectByID(String id) {\n@@ -923,4 +929,86 @@ private Method getStaticSetterMethod(Class<?> propertyClass, String propertyName\n \n         return method;\n     }\n+\n+    /**\n+     * Applies WTKX binding annotations to an object.\n+     *\n+     * @param object\n+     */\n+    public static void bind(Object object)\n+        throws IOException, BindException  {\n+        assert(object != null);\n+\n+        // Maps resource field name to the serializer that loaded the resource\n+        HashMap<String, WTKXSerializer> wtkxSerializers = new HashMap<String, WTKXSerializer>();\n+\n+        // Walk field lists and resolve WTKX annotations\n+        Class<?> type = object.getClass();\n+        Field[] fields = type.getDeclaredFields();\n+        for (int i = 0; i < fields.length; i++) {\n+            Field field = fields[i];\n+            Load loadAnnotation = field.getAnnotation(Load.class);\n+\n+            if (loadAnnotation != null) {\n+                // Create a serializer for the resource\n+                String fieldName = field.getName();\n+                assert(!wtkxSerializers.containsKey(fieldName));\n+\n+                WTKXSerializer wtkxSerializer = new WTKXSerializer();\n+                wtkxSerializers.put(fieldName, wtkxSerializer);\n+\n+                // Load the resource\n+                URL location = type.getResource(loadAnnotation.name());\n+                Object resource;\n+                try {\n+                    resource = wtkxSerializer.readObject(location);\n+                } catch(SerializationException exception) {\n+                    throw new BindException(exception);\n+                }\n+\n+                // Set the resource into the field\n+                if (!field.isAccessible()) {\n+                    field.setAccessible(true);\n+                }\n+\n+                try {\n+                    field.set(object, resource);\n+                } catch(IllegalAccessException exception) {\n+                    throw new BindException(exception);\n+                }\n+            }\n+\n+            Bind bindAnnotation = field.getAnnotation(Bind.class);\n+            if (bindAnnotation != null) {\n+                if (loadAnnotation != null) {\n+                    throw new BindException(\"Cannot combine \" + Load.class.getName()\n+                        + \" and \" + Bind.class.getName() + \" annotations.\");\n+                }\n+\n+                // Bind to the value loaded by the field's serializer\n+                String fieldName = bindAnnotation.resource();\n+                WTKXSerializer wtkxSerializer = wtkxSerializers.get(fieldName);\n+                if (wtkxSerializer == null) {\n+                    throw new BindException(\"\\\"\" + fieldName + \"\\\" is not a valid resource name.\");\n+                }\n+\n+                String id = bindAnnotation.id();\n+                Object value = wtkxSerializer.getObjectByName(id);\n+                if (value == null) {\n+                    throw new BindException(\"\\\"\" + id + \"\\\" does not exist.\");\n+                }\n+\n+                // Set the value into the field\n+                if (!field.isAccessible()) {\n+                    field.setAccessible(true);\n+                }\n+\n+                try {\n+                    field.set(object, value);\n+                } catch(IllegalAccessException exception) {\n+                    throw new BindException(exception);\n+                }\n+            }\n+        }\n+    }\n }", "filename": "wtk/src/pivot/wtkx/WTKXSerializer.java"}], "repo": "pivot"}, {"commit": "https://github.com/apache/pivot/commit/557e08f43dafaa10a20df21ef247dcc1ed5915d5", "parent": "https://github.com/apache/pivot/commit/1ad73f36e980780412d6e3874dc98e2faabce82c", "message": "Process wtkx:id as soon as the associated instance is available (don't wait until closing tag for instance elements); fix NPE in ButtonGroup.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/pivot/trunk@819508 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "pivot_21", "file": [{"additions": 6, "raw_url": "https://github.com/apache/pivot/raw/557e08f43dafaa10a20df21ef247dcc1ed5915d5/wtk/src/org/apache/pivot/wtk/ButtonGroup.java", "blob_url": "https://github.com/apache/pivot/blob/557e08f43dafaa10a20df21ef247dcc1ed5915d5/wtk/src/org/apache/pivot/wtk/ButtonGroup.java", "sha": "9299c2fc1ce97867f59898a913d813cc5632c1c4", "changes": 8, "status": "modified", "deletions": 2, "contents_url": "https://api.github.com/repos/apache/pivot/contents/wtk/src/org/apache/pivot/wtk/ButtonGroup.java?ref=557e08f43dafaa10a20df21ef247dcc1ed5915d5", "patch": "@@ -112,14 +112,18 @@ public Button getSelection() {\n     }\n \n     public void setSelection(Button selection) {\n-        if (!contains(selection)) {\n+        if (selection != null\n+            && !contains(selection)) {\n             throw new IllegalArgumentException();\n         }\n \n         Button previousSelection = this.selection;\n         if (previousSelection != selection) {\n             this.selection = selection;\n-            selection.setSelected(true);\n+\n+            if (selection != null) {\n+                selection.setSelected(true);\n+            }\n \n             buttonGroupListeners.selectionChanged(this, previousSelection);\n         }", "filename": "wtk/src/org/apache/pivot/wtk/ButtonGroup.java"}, {"additions": 68, "raw_url": "https://github.com/apache/pivot/raw/557e08f43dafaa10a20df21ef247dcc1ed5915d5/wtk/src/org/apache/pivot/wtkx/WTKXSerializer.java", "blob_url": "https://github.com/apache/pivot/blob/557e08f43dafaa10a20df21ef247dcc1ed5915d5/wtk/src/org/apache/pivot/wtkx/WTKXSerializer.java", "sha": "3041b0c628c4cf4e91c58ad12e9aeb85fe763626", "changes": 157, "status": "modified", "deletions": 89, "contents_url": "https://api.github.com/repos/apache/pivot/contents/wtk/src/org/apache/pivot/wtkx/WTKXSerializer.java?ref=557e08f43dafaa10a20df21ef247dcc1ed5915d5", "patch": "@@ -163,16 +163,18 @@ public int size() {\n \n         public final Element parent;\n         public final Type type;\n+        public final String id;\n         public final String tagName;\n         public final int lineNumber;\n         public final List<Attribute> attributes;\n \n         public Object value;\n \n-        public Element(Element parent, Type type, String tagName, int lineNumber,\n+        public Element(Element parent, Type type, String id, String tagName, int lineNumber,\n             List<Attribute> attributes, Object value) {\n             this.parent = parent;\n             this.type = type;\n+            this.id = id;\n             this.tagName = tagName;\n             this.lineNumber = lineNumber;\n             this.attributes = attributes;\n@@ -182,23 +184,25 @@ public Element(Element parent, Type type, String tagName, int lineNumber,\n \n     private static class Attribute {\n         public final String namespaceURI;\n-        public final String prefix;\n         public final String localName;\n         public final String value;\n \n-        public Attribute(String namespaceURI, String prefix, String localName, String value) {\n+        public Attribute(String namespaceURI, String localName, String value) {\n             this.namespaceURI = namespaceURI;\n-            this.prefix = prefix;\n             this.localName = localName;\n             this.value = value;\n         }\n     }\n \n-    private class ElementInvocationHandler implements InvocationHandler {\n+    private class AttributeInvocationHandler implements InvocationHandler {\n         private ScriptEngine scriptEngine;\n+        private String event;\n+        private String script;\n \n-        public ElementInvocationHandler(ScriptEngine scriptEngine) {\n+        public AttributeInvocationHandler(ScriptEngine scriptEngine, String event, String script) {\n             this.scriptEngine = scriptEngine;\n+            this.event = event;\n+            this.script = script;\n         }\n \n         @Override\n@@ -207,16 +211,13 @@ public Object invoke(Object proxy, Method method, Object[] args)\n             Object result = null;\n \n             String methodName = method.getName();\n-            Bindings bindings = scriptEngine.getBindings(ScriptContext.ENGINE_SCOPE);\n-            if (bindings.containsKey(methodName)) {\n-                Invocable invocable;\n+            if (methodName.equals(event)) {\n                 try {\n-                    invocable = (Invocable)scriptEngine;\n-                } catch (ClassCastException exception) {\n-                    throw new SerializationException(exception);\n+                    scriptEngine.eval(script);\n+                } catch (ScriptException exception) {\n+                    System.err.println(exception);\n+                    System.err.println(script);\n                 }\n-\n-                result = invocable.invokeFunction(methodName, args);\n             }\n \n             // If the function didn't return a value, return the default\n@@ -231,17 +232,13 @@ public Object invoke(Object proxy, Method method, Object[] args)\n \n             return result;\n         }\n-    };\n+    }\n \n-    private class AttributeInvocationHandler implements InvocationHandler {\n+    private class ElementInvocationHandler implements InvocationHandler {\n         private ScriptEngine scriptEngine;\n-        private String event;\n-        private String script;\n \n-        public AttributeInvocationHandler(ScriptEngine scriptEngine, String event, String script) {\n+        public ElementInvocationHandler(ScriptEngine scriptEngine) {\n             this.scriptEngine = scriptEngine;\n-            this.event = event;\n-            this.script = script;\n         }\n \n         @Override\n@@ -250,13 +247,16 @@ public Object invoke(Object proxy, Method method, Object[] args)\n             Object result = null;\n \n             String methodName = method.getName();\n-            if (methodName.equals(event)) {\n+            Bindings bindings = scriptEngine.getBindings(ScriptContext.ENGINE_SCOPE);\n+            if (bindings.containsKey(methodName)) {\n+                Invocable invocable;\n                 try {\n-                    scriptEngine.eval(script);\n-                } catch (ScriptException exception) {\n-                    System.err.println(exception);\n-                    System.err.println(script);\n+                    invocable = (Invocable)scriptEngine;\n+                } catch (ClassCastException exception) {\n+                    throw new SerializationException(exception);\n                 }\n+\n+                result = invocable.invokeFunction(methodName, args);\n             }\n \n             // If the function didn't return a value, return the default\n@@ -271,7 +271,7 @@ public Object invoke(Object proxy, Method method, Object[] args)\n \n             return result;\n         }\n-    }\n+    };\n \n     private URL location = null;\n     private Resources resources = null;\n@@ -510,20 +510,31 @@ private void processStartElement(XMLStreamReader reader) throws SerializationExc\n         String localName = reader.getLocalName();\n \n         // Build attribute list; these will be processed in the close tag\n+        String id = null;\n         ArrayList<Attribute> attributes = new ArrayList<Attribute>();\n \n         for (int i = 0, n = reader.getAttributeCount(); i < n; i++) {\n-            String attributeNamespaceURI = reader.getAttributeNamespace(i);\n-            if (attributeNamespaceURI == null) {\n-                attributeNamespaceURI = reader.getNamespaceURI(\"\");\n-            }\n-\n             String attributePrefix = reader.getAttributePrefix(i);\n             String attributeLocalName = reader.getAttributeLocalName(i);\n             String attributeValue = reader.getAttributeValue(i);\n \n-            attributes.add(new Attribute(attributeNamespaceURI,\n-                attributePrefix, attributeLocalName, attributeValue));\n+            if (attributePrefix != null\n+                && attributePrefix.equals(WTKX_PREFIX)) {\n+                if (attributeLocalName.equals(ID_ATTRIBUTE)) {\n+                    id = attributeValue;\n+                } else {\n+                    throw new SerializationException(attributePrefix + \":\" + attributeLocalName\n+                        + \" is not a valid attribute.\");\n+                }\n+            } else {\n+                String attributeNamespaceURI = reader.getAttributeNamespace(i);\n+                if (attributeNamespaceURI == null) {\n+                    attributeNamespaceURI = reader.getNamespaceURI(\"\");\n+                }\n+\n+                attributes.add(new Attribute(attributeNamespaceURI, attributeLocalName,\n+                    attributeValue));\n+            }\n         }\n \n         // Determine the type and value of this element\n@@ -567,6 +578,12 @@ private void processStartElement(XMLStreamReader reader) throws SerializationExc\n                     Class<?> type = Class.forName(className);\n                     elementType = Element.Type.INSTANCE;\n                     value = type.newInstance();\n+\n+                    // Add the value to the named objects map here so it is available to\n+                    // sub-elements (rather than waiting until the close tag)\n+                    if (id != null) {\n+                        namedObjects.put(id, value);\n+                    }\n                 } catch (Exception exception) {\n                     throw new SerializationException(exception);\n                 }\n@@ -611,7 +628,7 @@ private void processStartElement(XMLStreamReader reader) throws SerializationExc\n         }\n \n         Location xmlStreamLocation = reader.getLocation();\n-        element = new Element(element, elementType, tagName, xmlStreamLocation.getLineNumber(),\n+        element = new Element(element, elementType, id, tagName, xmlStreamLocation.getLineNumber(),\n             attributes, value);\n \n         // If this is the root, set it\n@@ -628,7 +645,6 @@ private void processEndElement(XMLStreamReader reader)\n         switch (element.type) {\n             case INSTANCE:\n             case INCLUDE: {\n-                String id = null;\n                 ArrayList<Attribute> instancePropertyAttributes = new ArrayList<Attribute>();\n                 ArrayList<Attribute> staticPropertyAttributes = new ArrayList<Attribute>();\n \n@@ -639,28 +655,18 @@ private void processEndElement(XMLStreamReader reader)\n                     Resources resources = this.resources;\n \n                     for (Attribute attribute : element.attributes) {\n-                        if (attribute.prefix != null\n-                            && attribute.prefix.equals(WTKX_PREFIX)) {\n-                            if (attribute.localName.equals(ID_ATTRIBUTE)) {\n-                                id = attribute.value;\n-                            } else {\n-                                throw new SerializationException(WTKX_PREFIX + \":\" + attribute.localName\n-                                    + \" is not a valid attribute.\");\n-                            }\n+                        if (attribute.localName.equals(INCLUDE_SRC_ATTRIBUTE)) {\n+                            src = attribute.value;\n+                        } else if (attribute.localName.equals(INCLUDE_RESOURCES_ATTRIBUTE)) {\n+                            resources = new Resources(resources, attribute.value);\n                         } else {\n-                            if (attribute.localName.equals(INCLUDE_SRC_ATTRIBUTE)) {\n-                                src = attribute.value;\n-                            } else if (attribute.localName.equals(INCLUDE_RESOURCES_ATTRIBUTE)) {\n-                                resources = new Resources(resources, attribute.value);\n-                            } else {\n-                                if (!Character.isUpperCase(attribute.localName.charAt(0))) {\n-                                    throw new SerializationException(\"Instance property setters are not\"\n-                                        + \" supported for \" + WTKX_PREFIX + \":\" + INCLUDE_TAG\n-                                        + \" \" + \" tag.\");\n-                                }\n-\n-                                staticPropertyAttributes.add(attribute);\n+                            if (!Character.isUpperCase(attribute.localName.charAt(0))) {\n+                                throw new SerializationException(\"Instance property setters are not\"\n+                                    + \" supported for \" + WTKX_PREFIX + \":\" + INCLUDE_TAG\n+                                    + \" \" + \" tag.\");\n                             }\n+\n+                            staticPropertyAttributes.add(attribute);\n                         }\n                     }\n \n@@ -672,8 +678,8 @@ private void processEndElement(XMLStreamReader reader)\n \n                     // Read the object\n                     WTKXSerializer serializer = new WTKXSerializer(resources);\n-                    if (id != null) {\n-                        includeSerializers.put(id, serializer);\n+                    if (element.id != null) {\n+                        includeSerializers.put(element.id, serializer);\n                     }\n \n                     if (src.charAt(0) == '/') {\n@@ -682,42 +688,22 @@ private void processEndElement(XMLStreamReader reader)\n                         element.value = serializer.readObject(new URL(location, src));\n                     }\n \n-                    if (id == null\n+                    if (element.id == null\n                         && !serializer.isEmpty()\n                         && serializer.scriptEngineManager == null) {\n                         System.err.println(\"Include \\\"\" + src + \"\\\" defines unreachable objects.\");\n                     }\n                 } else {\n                     // Process attributes looking for wtkx:id and all property setters\n                     for (Attribute attribute : element.attributes) {\n-                        if (attribute.prefix != null\n-                            && attribute.prefix.equals(WTKX_PREFIX)) {\n-                            if (attribute.localName.equals(ID_ATTRIBUTE)) {\n-                                id = attribute.value;\n-                            } else {\n-                                throw new SerializationException(WTKX_PREFIX + \":\" + attribute.localName\n-                                    + \" is not a valid attribute.\");\n-                            }\n+                        if (Character.isUpperCase(attribute.localName.charAt(0))) {\n+                            staticPropertyAttributes.add(attribute);\n                         } else {\n-                            if (Character.isUpperCase(attribute.localName.charAt(0))) {\n-                                staticPropertyAttributes.add(attribute);\n-                            } else {\n-                                instancePropertyAttributes.add(attribute);\n-                            }\n+                            instancePropertyAttributes.add(attribute);\n                         }\n                     }\n                 }\n \n-                // If an ID was specified, add the value to the named object map\n-                if (id != null) {\n-                    if (id.length() == 0) {\n-                        throw new IllegalArgumentException(WTKX_PREFIX + \":\" + ID_ATTRIBUTE\n-                            + \" must not be null.\");\n-                    }\n-\n-                    namedObjects.put(id, element.value);\n-                }\n-\n                 // Apply instance attributes\n                 Dictionary<String, Object> dictionary;\n                 if (element.value instanceof Dictionary<?, ?>) {\n@@ -899,13 +885,6 @@ private void processEndElement(XMLStreamReader reader)\n                 String src = null;\n                 String language = this.language;\n                 for (Attribute attribute : element.attributes) {\n-                    if (attribute.prefix != null\n-                        && attribute.prefix.length() > 0) {\n-                        throw new SerializationException(attribute.prefix + \":\" +\n-                            attribute.localName + \" is not a valid\" + \" attribute for the \"\n-                            + WTKX_PREFIX + \":\" + SCRIPT_TAG + \" tag.\");\n-                    }\n-\n                     if (attribute.localName.equals(SCRIPT_SRC_ATTRIBUTE)) {\n                         src = attribute.value;\n                     } else if (attribute.localName.equals(SCRIPT_LANGUAGE_ATTRIBUTE)) {", "filename": "wtk/src/org/apache/pivot/wtkx/WTKXSerializer.java"}], "repo": "pivot"}, {"commit": "https://github.com/apache/pivot/commit/9ee479fcbc66fe77821e25823a18f35df317fd30", "parent": "https://github.com/apache/pivot/commit/de2e283c595c01ad375d6008bb534003445854c0", "message": "Added a test for MapList\n\nChanged MapList:\n- source is never null. previously it was easy to generate an NPE\n- changed update so that it doesn't remove before doing a put from the source.  previously update on the map handler was never being called\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/pivot/trunk@804476 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "pivot_22", "file": [{"additions": 25, "raw_url": "https://github.com/apache/pivot/raw/9ee479fcbc66fe77821e25823a18f35df317fd30/core/src/org/apache/pivot/collections/MapList.java", "blob_url": "https://github.com/apache/pivot/blob/9ee479fcbc66fe77821e25823a18f35df317fd30/core/src/org/apache/pivot/collections/MapList.java", "sha": "05d81d58a03d8e935baf8fe348015ed0bccca125", "changes": 53, "status": "modified", "deletions": 28, "contents_url": "https://api.github.com/repos/apache/pivot/contents/core/src/org/apache/pivot/collections/MapList.java?ref=9ee479fcbc66fe77821e25823a18f35df317fd30", "patch": "@@ -26,13 +26,13 @@\n  * Decorates a {@link Map} to look like a {@link List} of key/value pairs. This\n  * facilitates the use of a <tt>Map</tt> as table data in a\n  * {@link org.apache.pivot.wtk.TableView}.\n- *\n+ * \n  * @author tvolkert\n  */\n public class MapList<K, V> implements List<Pair<K, V>> {\n     /**\n      * Map list listener list.\n-     *\n+     * \n      * @author tvolkert\n      */\n     private static class MapListListenerList<K, V> extends ListenerList<MapListListener<K, V>>\n@@ -48,6 +48,8 @@ public void sourceChanged(MapList<K, V> mapList, Map<K, V> previousSource) {\n \n     private ArrayList<Pair<K, V>> view = null;\n \n+    // this flag is used to prevent recursion if the source is updated\n+    // externally\n     private boolean updating = false;\n \n     private ListListenerList<Pair<K, V>> listListeners = new ListListenerList<Pair<K, V>>();\n@@ -120,31 +122,34 @@ public MapList() {\n \n     /**\n      * Creates a new map list that decorates the specified source map.\n-     *\n+     * \n      * @param source\n-     * The map to present as a list\n+     *            The map to present as a list\n      */\n     public MapList(Map<K, V> source) {\n         setSource(source);\n     }\n \n     /**\n      * Gets the source map.\n-     *\n-     * @return\n-     * The source map, or <tt>null</tt> if no source is set\n+     * \n+     * @return The source map, or <tt>null</tt> if no source is set\n      */\n     public Map<K, V> getSource() {\n         return source;\n     }\n \n     /**\n      * Sets the source map.\n-     *\n+     * \n      * @param source\n-     * The source map, or <tt>null</tt> to clear the source\n+     *            The source map, or <tt>null</tt> to clear the source\n      */\n     public void setSource(Map<K, V> source) {\n+        if (source == null) {\n+            source = new HashMap<K, V>();\n+        }\n+\n         Map<K, V> previousSource = this.source;\n \n         if (previousSource != source) {\n@@ -168,14 +173,10 @@ public void setSource(Map<K, V> source) {\n             mapListListeners.sourceChanged(this, previousSource);\n \n             // Refresh the view\n-            if (source == null) {\n-                view = null;\n-            } else {\n-                view = new ArrayList<Pair<K, V>>(source.count());\n+            view = new ArrayList<Pair<K, V>>(source.count());\n \n-                for (K key : source) {\n-                    listListeners.itemInserted(this, view.add(new Pair<K, V>(key, source.get(key))));\n-                }\n+            for (K key : source) {\n+                listListeners.itemInserted(this, view.add(new Pair<K, V>(key, source.get(key))));\n             }\n         }\n     }\n@@ -249,8 +250,7 @@ public void insert(Pair<K, V> pair, int index) {\n \n         Pair<K, V> previousPair = view.get(index);\n \n-        if (!pair.key.equals(previousPair.key)\n-            && source.containsKey(pair.key)) {\n+        if (!pair.key.equals(previousPair.key) && source.containsKey(pair.key)) {\n             throw new IllegalArgumentException(\"Duplicate keys not allowed.\");\n         }\n \n@@ -260,7 +260,6 @@ public void insert(Pair<K, V> pair, int index) {\n         // Update the source\n         updating = true;\n         try {\n-            source.remove(previousPair.key);\n             source.put(pair.key, pair.value);\n         } finally {\n             updating = false;\n@@ -280,7 +279,7 @@ public int remove(Pair<K, V> pair) {\n         int index = indexOf(pair);\n \n         if (index >= 0) {\n-           remove(index, 1);\n+            remove(index, 1);\n         }\n \n         return index;\n@@ -328,15 +327,13 @@ public int indexOf(Pair<K, V> pair) {\n     }\n \n     /**\n-     * Finds the specified pair in the view list by searching linearly\n-     * and reporting an exact match only (bypasses the list's\n-     * comparator).\n-     *\n+     * Finds the specified pair in the view list by searching linearly and\n+     * reporting an exact match only (bypasses the list's comparator).\n+     * \n      * @param pair\n-     * The pair to search for\n-     *\n-     * @return\n-     * The index of the pair in the list, or <tt>-1</tt> if not found\n+     *            The pair to search for\n+     * \n+     * @return The index of the pair in the list, or <tt>-1</tt> if not found\n      */\n     private int linearSearch(Pair<K, V> pair) {\n         int index = -1;", "filename": "core/src/org/apache/pivot/collections/MapList.java"}, {"additions": 167, "raw_url": "https://github.com/apache/pivot/raw/9ee479fcbc66fe77821e25823a18f35df317fd30/core/test/org/apache/pivot/collections/test/MapListTest.java", "blob_url": "https://github.com/apache/pivot/blob/9ee479fcbc66fe77821e25823a18f35df317fd30/core/test/org/apache/pivot/collections/test/MapListTest.java", "sha": "82dfcf264bca3ae6949d04c2369f40305ea07b13", "changes": 167, "status": "added", "deletions": 0, "contents_url": "https://api.github.com/repos/apache/pivot/contents/core/test/org/apache/pivot/collections/test/MapListTest.java?ref=9ee479fcbc66fe77821e25823a18f35df317fd30", "patch": "@@ -0,0 +1,167 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to you under the Apache License,\n+ * Version 2.0 (the \"License\"); you may not use this file except in\n+ * compliance with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.pivot.collections.test;\n+\n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertNotNull;\n+import static org.junit.Assert.assertNull;\n+import static org.junit.Assert.fail;\n+\n+import java.util.Comparator;\n+import java.util.Iterator;\n+\n+import org.apache.pivot.collections.HashMap;\n+import org.apache.pivot.collections.Map;\n+import org.apache.pivot.collections.MapList;\n+import org.apache.pivot.collections.MapListListener;\n+import org.apache.pivot.collections.Sequence;\n+import org.apache.pivot.collections.Map.Pair;\n+import org.junit.Before;\n+import org.junit.Test;\n+\n+public class MapListTest {\n+\n+    private TestMapListListener listener;\n+\n+    @Before\n+    public void createListener() {\n+        listener = new TestMapListListener();\n+    }\n+\n+    @Test\n+    public void basicTest() {\n+        MapList<String, Integer> mapList = new MapList<String, Integer>();\n+        assertMapList(mapList);\n+\n+        mapList = new MapList<String, Integer>(new HashMap<String, Integer>());\n+        assertMapList(mapList);\n+\n+        Map<String, Integer> source = mapList.getSource();\n+        mapList.getMapListListeners().add(listener);\n+        mapList.setSource(null);\n+        assertEquals(1, listener.calls);\n+        assertEquals(mapList, listener.mapList);\n+        assertEquals(source, listener.previousSource);\n+        assertMapList(mapList);\n+\n+        TestComparator comparator = new TestComparator();\n+        mapList.setComparator(comparator);\n+        assertEquals(comparator, mapList.getComparator());\n+    }\n+\n+    private void assertMapList(MapList<String, Integer> mapList) {\n+        assertNull(mapList.getComparator());\n+        assertNotNull(mapList.getListListeners());\n+        assertNotNull(mapList.getMapListListeners());\n+        assertEquals(0, mapList.getLength());\n+\n+        Pair<String, Integer> pair = new Pair<String, Integer>(\"a\", 1);\n+\n+        assertEquals(-1, mapList.indexOf(pair));\n+\n+        mapList.add(pair);\n+        assertEquals(1, mapList.getLength());\n+\n+        Map<String, Integer> newSource = new HashMap<String, Integer>();\n+        newSource.put(\"b\", 2);\n+        newSource.put(\"c\", 3);\n+        mapList.setSource(newSource);\n+\n+        assertEquals(newSource, mapList.getSource());\n+        assertEquals(2, mapList.getLength());\n+\n+        int iteratorCount = 0;\n+        Iterator<Pair<String, Integer>> iter = mapList.iterator();\n+        while (iter.hasNext()) {\n+            pair = iter.next();\n+            if (mapList.indexOf(pair) != iteratorCount) {\n+                fail(\"Unexpected pair \" + pair + \" in iterator\");\n+            }\n+            iteratorCount++;\n+        }\n+        assertEquals(2, iteratorCount);\n+\n+        Pair<String, Integer> newCPair = new Pair<String, Integer>(\"c\", 33);\n+        mapList.update(1, newCPair);\n+        assertEquals(newCPair, mapList.get(1));\n+\n+        Pair<String, Integer> aaPair = new Pair<String, Integer>(\"aa\", 11);\n+        mapList.insert(aaPair, 1);\n+        assertEquals(3, mapList.getLength());\n+        assertEquals(aaPair, mapList.get(1));\n+        assertEquals(newCPair, mapList.get(2));\n+\n+        Sequence<Pair<String, Integer>> sequence = mapList.remove(0, 1);\n+        assertNotNull(sequence);\n+        pair = sequence.get(0);\n+        assertNotNull(pair);\n+        assertEquals(\"b\", pair.key);\n+        assertEquals(2, pair.value);\n+\n+        assertEquals(2, mapList.getLength());\n+\n+        newSource.put(\"aa\", 77);\n+        pair = mapList.get(1);\n+        assertEquals(pair.key, \"aa\");\n+        assertEquals(pair.value, 77);\n+\n+        newSource.remove(\"aa\");\n+        assertEquals(1, mapList.getLength());\n+\n+        mapList.clear();\n+        assertEquals(0, mapList.getLength());\n+\n+        pair = new Pair<String, Integer>(\"d\", 4);\n+        mapList.add(pair);\n+        assertEquals(1, mapList.getLength());\n+        assertEquals(pair, mapList.get(0));\n+        \n+        assertEquals(0, mapList.remove(pair));\n+        assertEquals(0, mapList.getLength());\n+\n+        newSource.put(\"z\", 24);\n+        assertEquals(1, mapList.getLength());\n+        \n+        newSource.put(\"z\", 24);\n+        assertEquals(1, mapList.getLength());\n+        \n+        newSource.clear();\n+        assertEquals(0, mapList.getLength());\n+    }\n+\n+    private class TestMapListListener implements MapListListener<String, Integer> {\n+        private MapList<String, Integer> mapList;\n+        private Map<String, Integer> previousSource;\n+        private int calls;\n+\n+        @Override\n+        public void sourceChanged(MapList<String, Integer> mapList,\n+            Map<String, Integer> previousSource) {\n+            this.mapList = mapList;\n+            this.previousSource = previousSource;\n+            this.calls++;\n+        }\n+    }\n+\n+    private class TestComparator implements Comparator<Pair<String, Integer>> {\n+        @Override\n+        public int compare(Pair<String, Integer> o1, Pair<String, Integer> o2) {\n+            return o1.key.compareTo(o2.key);\n+        }\n+    }\n+\n+}", "filename": "core/test/org/apache/pivot/collections/test/MapListTest.java"}], "repo": "pivot"}, {"commit": "https://github.com/apache/pivot/commit/f3ac3dfdd7e4bbfeac99ba009353a5b915348814", "parent": "https://github.com/apache/pivot/commit/2f47c9a589fe3d0a5ecbe5657e2f496738ba942d", "message": "PIVOT-880: NPE when setting the root directory to a Windows UNC path\nin a FileBrowserSheet.\n\nCaused by the fact that the \\\\ doesn't match any items in the drive\nlist, and one of the listeners assumes the item will always be there.\nSimple test for a non-null item fixes the issue and allows the UNC\npath to be used, and to display items.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/pivot/trunk@1407585 13f79535-47bb-0310-9956-ffa450edef68", "bug_id": "pivot_23", "file": [{"additions": 1, "raw_url": "https://github.com/apache/pivot/raw/f3ac3dfdd7e4bbfeac99ba009353a5b915348814/wtk-terra/src/org/apache/pivot/wtk/skin/terra/TerraFileBrowserSkin.java", "blob_url": "https://github.com/apache/pivot/blob/f3ac3dfdd7e4bbfeac99ba009353a5b915348814/wtk-terra/src/org/apache/pivot/wtk/skin/terra/TerraFileBrowserSkin.java", "sha": "3a62aac7ca30b59b9d1d671e6e828a2a53bd0c1f", "changes": 2, "status": "modified", "deletions": 1, "contents_url": "https://api.github.com/repos/apache/pivot/contents/wtk-terra/src/org/apache/pivot/wtk/skin/terra/TerraFileBrowserSkin.java?ref=f3ac3dfdd7e4bbfeac99ba009353a5b915348814", "patch": "@@ -711,7 +711,7 @@ public void install(Component component) {\n             public void selectedItemChanged(ListButton listButton, Object previousSelectedItem) {\n                 if (previousSelectedItem != null) {\n                     File drive = (File)listButton.getSelectedItem();\n-                    if(drive.canRead()) {\n+                    if(drive != null && drive.canRead()) {\n                         fileBrowser.setRootDirectory(drive);\n                     } else {\n                         refreshRoots = true;", "filename": "wtk-terra/src/org/apache/pivot/wtk/skin/terra/TerraFileBrowserSkin.java"}], "repo": "pivot"}]
