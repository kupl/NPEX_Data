{
    "directory-scimple_010e86c": {
        "bug_id": "directory-scimple_010e86c",
        "commit": "https://github.com/apache/directory-scimple/commit/010e86cfd551da2e134975b59c5f2584d0d37a86",
        "file": [
            {
                "additions": 19,
                "blob_url": "https://github.com/apache/directory-scimple/blob/010e86cfd551da2e134975b59c5f2584d0d37a86/scim-server/scim-server-common/src/main/java/edu/psu/swe/scim/server/utility/AttributeUtil.java",
                "changes": 30,
                "contents_url": "https://api.github.com/repos/apache/directory-scimple/contents/scim-server/scim-server-common/src/main/java/edu/psu/swe/scim/server/utility/AttributeUtil.java?ref=010e86cfd551da2e134975b59c5f2584d0d37a86",
                "deletions": 11,
                "filename": "scim-server/scim-server-common/src/main/java/edu/psu/swe/scim/server/utility/AttributeUtil.java",
                "patch": "@@ -7,6 +7,7 @@\n import java.io.ObjectOutputStream;\n import java.lang.reflect.Field;\n import java.util.Collection;\n+import java.util.Collections;\n import java.util.HashSet;\n import java.util.List;\n import java.util.Map.Entry;\n@@ -82,7 +83,6 @@ public void init() { // TODO move this to a CDI producer\n   }\n   \n   private <T extends ScimResource> T setAttributesForDisplayInternal(T resource, Returned ... removeAttributesOfTypes) throws IllegalArgumentException, IllegalAccessException, AttributeDoesNotExistException, IOException {\n-\n     T copy = cloneScimResource(resource);\n     String resourceType = copy.getResourceType();\n     Schema schema = registry.getBaseSchemaOfResourceType(resourceType);\n@@ -110,7 +110,7 @@ public void init() { // TODO move this to a CDI producer\n       return setAttributesForDisplay(resource);\n     } else {\n       T copy = cloneScimResource(resource);\n-\n+      \n       String resourceType = copy.getResourceType();\n       Schema schema = registry.getBaseSchemaOfResourceType(resourceType);\n \n@@ -198,7 +198,6 @@ private void removeAttributes(Object object, AttributeContainer attributeContain\n   }\n \n   private void processAttributes(Object object, AttributeContainer attributeContainer, Function<Attribute, Boolean> function) throws IllegalArgumentException, IllegalAccessException {\n-\n     if (attributeContainer != null && object != null) {\n       for (Attribute attribute : attributeContainer.getAttributes()) {\n         Field field = attribute.getField();\n@@ -276,7 +275,9 @@ private void processAttributes(Object object, AttributeContainer attributeContai\n \n     for (AttributeReference attributeReference : attributeReferences) {\n       Set<Attribute> findAttributes = findAttribute(attributeReference, includeAttributeChain);\n-      attributes.addAll(findAttributes);\n+      if (!findAttributes.isEmpty()) {\n+        attributes.addAll(findAttributes);\n+      }\n     }\n \n     return attributes;\n@@ -285,35 +286,42 @@ private void processAttributes(Object object, AttributeContainer attributeContai\n   private Set<Attribute> findAttribute(AttributeReference attributeReference, boolean includeAttributeChain) throws AttributeDoesNotExistException {\n     String schemaUrn = attributeReference.getUrn();\n     Schema schema = null;\n-\n+    Set<Attribute> attributes;\n+    \n     if (!StringUtils.isEmpty(schemaUrn)) {\n       schema = registry.getSchema(schemaUrn);\n \n-      Set<Attribute> attributes = findAttributeInSchema(schema, attributeReference, includeAttributeChain);\n-      if (attributes == null) {\n+      attributes = findAttributeInSchema(schema, attributeReference, includeAttributeChain);\n+      if (attributes.isEmpty()) {\n+        log.error(\"Attribute \" + attributeReference.getFullyQualifiedAttributeName() + \"not found in schema \" + schemaUrn);\n         throw new AttributeDoesNotExistException(attributeReference.getFullyQualifiedAttributeName());\n       }\n       return attributes;\n     }\n \n     // Handle unqualified attributes, look in the core schemas\n     schema = registry.getSchema(ScimUser.SCHEMA_URI);\n-    Set<Attribute> attributes = findAttributeInSchema(schema, attributeReference, includeAttributeChain);\n-    if (attributes != null) {\n+    attributes = findAttributeInSchema(schema, attributeReference, includeAttributeChain);\n+    if (!attributes.isEmpty()) {\n       return attributes;\n     }\n \n     schema = registry.getSchema(ScimGroup.SCHEMA_URI);\n     attributes = findAttributeInSchema(schema, attributeReference, includeAttributeChain);\n-    if (attributes != null) {\n+    if (!attributes.isEmpty()) {\n       return attributes;\n     }\n \n+    log.error(\"Attribute \" + attributeReference.getFullyQualifiedAttributeName() + \"not found in any schema.\");\n     throw new AttributeDoesNotExistException(attributeReference.getFullyQualifiedAttributeName());\n   }\n \n   private Set<Attribute> findAttributeInSchema(Schema schema, AttributeReference attributeReference, boolean includeAttributeChain) {\n     AttributeContainer attributeContainer = schema;\n+    if (attributeContainer == null) {\n+      return Collections.emptySet();\n+    }\n+    \n     String[] attributeNames = attributeReference.getAttributeName();\n \n     Set<Attribute> attributes = new HashSet<>();\n@@ -322,7 +330,7 @@ private void processAttributes(Object object, AttributeContainer attributeContai\n       attributeContainer = attributeContainer.getAttribute(attributeName);\n \n       if (attributeContainer == null) {\n-        return null;\n+        return Collections.emptySet();\n       }\n \n       if (includeAttributeChain) {",
                "raw_url": "https://github.com/apache/directory-scimple/raw/010e86cfd551da2e134975b59c5f2584d0d37a86/scim-server/scim-server-common/src/main/java/edu/psu/swe/scim/server/utility/AttributeUtil.java",
                "sha": "f26dad2b8c76a5e9af95284cf7f555c082fc80b3",
                "status": "modified"
            }
        ],
        "message": "Merge pull request #46 from src125/bugfix/issue45\n\nAdd null checks to AttributeUtil to avoid NPE",
        "parent": "https://github.com/apache/directory-scimple/commit/b34e3714ff1945df9b0993b6709d55491abe830c",
        "patched_files": [
            "AttributeUtil.java"
        ],
        "repo": "directory-scimple",
        "unit_tests": [
            "AttributeUtilTest.java"
        ]
    },
    "directory-scimple_3b8e4c1": {
        "bug_id": "directory-scimple_3b8e4c1",
        "commit": "https://github.com/apache/directory-scimple/commit/3b8e4c16ed38d8314f5b8a716b5e9913265e7932",
        "file": [
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/directory-scimple/blob/3b8e4c16ed38d8314f5b8a716b5e9913265e7932/scim-spec/scim-spec-schema/src/main/java/edu/psu/swe/scim/spec/resources/PhoneNumber.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/directory-scimple/contents/scim-spec/scim-spec-schema/src/main/java/edu/psu/swe/scim/spec/resources/PhoneNumber.java?ref=3b8e4c16ed38d8314f5b8a716b5e9913265e7932",
                "deletions": 1,
                "filename": "scim-spec/scim-spec-schema/src/main/java/edu/psu/swe/scim/spec/resources/PhoneNumber.java",
                "patch": "@@ -71,7 +71,7 @@\n   @ScimAttribute(description = \"A Boolean value indicating the 'primary' or preferred attribute value for this attribute, e.g. the preferred phone number or primary phone number. The primary attribute value 'true' MUST appear no more than once.\")\n   @Getter\n   @Setter\n-  Boolean primary;\n+  Boolean primary = false;\n \n   @Setter(AccessLevel.NONE)\n   @Getter",
                "raw_url": "https://github.com/apache/directory-scimple/raw/3b8e4c16ed38d8314f5b8a716b5e9913265e7932/scim-spec/scim-spec-schema/src/main/java/edu/psu/swe/scim/spec/resources/PhoneNumber.java",
                "sha": "7b8c75034e97bc1bd1281ea50698a27e801f8a45",
                "status": "modified"
            }
        ],
        "message": "Added default false value for PhoneNumber's primary flag. When the primary flag was not specified, serializing a ScimUser would throw a NPE. This fixes the NPE.",
        "parent": "https://github.com/apache/directory-scimple/commit/ec4297fccf17751f81b0e41e1c5cfd4f265e4b0b",
        "patched_files": [
            "PhoneNumber.java"
        ],
        "repo": "directory-scimple",
        "unit_tests": [
            "PhoneNumberTest.java"
        ]
    },
    "directory-scimple_7edb6d7": {
        "bug_id": "directory-scimple_7edb6d7",
        "commit": "https://github.com/apache/directory-scimple/commit/7edb6d7957ba115922814cceb5dca0853f63a87b",
        "file": [
            {
                "additions": 19,
                "blob_url": "https://github.com/apache/directory-scimple/blob/7edb6d7957ba115922814cceb5dca0853f63a87b/scim-server/scim-server-common/src/main/java/edu/psu/swe/scim/server/utility/AttributeUtil.java",
                "changes": 30,
                "contents_url": "https://api.github.com/repos/apache/directory-scimple/contents/scim-server/scim-server-common/src/main/java/edu/psu/swe/scim/server/utility/AttributeUtil.java?ref=7edb6d7957ba115922814cceb5dca0853f63a87b",
                "deletions": 11,
                "filename": "scim-server/scim-server-common/src/main/java/edu/psu/swe/scim/server/utility/AttributeUtil.java",
                "patch": "@@ -7,6 +7,7 @@\n import java.io.ObjectOutputStream;\n import java.lang.reflect.Field;\n import java.util.Collection;\n+import java.util.Collections;\n import java.util.HashSet;\n import java.util.List;\n import java.util.Map.Entry;\n@@ -82,7 +83,6 @@ public void init() { // TODO move this to a CDI producer\n   }\n   \n   private <T extends ScimResource> T setAttributesForDisplayInternal(T resource, Returned ... removeAttributesOfTypes) throws IllegalArgumentException, IllegalAccessException, AttributeDoesNotExistException, IOException {\n-\n     T copy = cloneScimResource(resource);\n     String resourceType = copy.getResourceType();\n     Schema schema = registry.getBaseSchemaOfResourceType(resourceType);\n@@ -110,7 +110,7 @@ public void init() { // TODO move this to a CDI producer\n       return setAttributesForDisplay(resource);\n     } else {\n       T copy = cloneScimResource(resource);\n-\n+      \n       String resourceType = copy.getResourceType();\n       Schema schema = registry.getBaseSchemaOfResourceType(resourceType);\n \n@@ -198,7 +198,6 @@ private void removeAttributes(Object object, AttributeContainer attributeContain\n   }\n \n   private void processAttributes(Object object, AttributeContainer attributeContainer, Function<Attribute, Boolean> function) throws IllegalArgumentException, IllegalAccessException {\n-\n     if (attributeContainer != null && object != null) {\n       for (Attribute attribute : attributeContainer.getAttributes()) {\n         Field field = attribute.getField();\n@@ -276,7 +275,9 @@ private void processAttributes(Object object, AttributeContainer attributeContai\n \n     for (AttributeReference attributeReference : attributeReferences) {\n       Set<Attribute> findAttributes = findAttribute(attributeReference, includeAttributeChain);\n-      attributes.addAll(findAttributes);\n+      if (!findAttributes.isEmpty()) {\n+        attributes.addAll(findAttributes);\n+      }\n     }\n \n     return attributes;\n@@ -285,35 +286,42 @@ private void processAttributes(Object object, AttributeContainer attributeContai\n   private Set<Attribute> findAttribute(AttributeReference attributeReference, boolean includeAttributeChain) throws AttributeDoesNotExistException {\n     String schemaUrn = attributeReference.getUrn();\n     Schema schema = null;\n-\n+    Set<Attribute> attributes;\n+    \n     if (!StringUtils.isEmpty(schemaUrn)) {\n       schema = registry.getSchema(schemaUrn);\n \n-      Set<Attribute> attributes = findAttributeInSchema(schema, attributeReference, includeAttributeChain);\n-      if (attributes == null) {\n+      attributes = findAttributeInSchema(schema, attributeReference, includeAttributeChain);\n+      if (attributes.isEmpty()) {\n+        log.error(\"Attribute \" + attributeReference.getFullyQualifiedAttributeName() + \"not found in schema \" + schemaUrn);\n         throw new AttributeDoesNotExistException(attributeReference.getFullyQualifiedAttributeName());\n       }\n       return attributes;\n     }\n \n     // Handle unqualified attributes, look in the core schemas\n     schema = registry.getSchema(ScimUser.SCHEMA_URI);\n-    Set<Attribute> attributes = findAttributeInSchema(schema, attributeReference, includeAttributeChain);\n-    if (attributes != null) {\n+    attributes = findAttributeInSchema(schema, attributeReference, includeAttributeChain);\n+    if (!attributes.isEmpty()) {\n       return attributes;\n     }\n \n     schema = registry.getSchema(ScimGroup.SCHEMA_URI);\n     attributes = findAttributeInSchema(schema, attributeReference, includeAttributeChain);\n-    if (attributes != null) {\n+    if (!attributes.isEmpty()) {\n       return attributes;\n     }\n \n+    log.error(\"Attribute \" + attributeReference.getFullyQualifiedAttributeName() + \"not found in any schema.\");\n     throw new AttributeDoesNotExistException(attributeReference.getFullyQualifiedAttributeName());\n   }\n \n   private Set<Attribute> findAttributeInSchema(Schema schema, AttributeReference attributeReference, boolean includeAttributeChain) {\n     AttributeContainer attributeContainer = schema;\n+    if (attributeContainer == null) {\n+      return Collections.emptySet();\n+    }\n+    \n     String[] attributeNames = attributeReference.getAttributeName();\n \n     Set<Attribute> attributes = new HashSet<>();\n@@ -322,7 +330,7 @@ private void processAttributes(Object object, AttributeContainer attributeContai\n       attributeContainer = attributeContainer.getAttribute(attributeName);\n \n       if (attributeContainer == null) {\n-        return null;\n+        return Collections.emptySet();\n       }\n \n       if (includeAttributeChain) {",
                "raw_url": "https://github.com/apache/directory-scimple/raw/7edb6d7957ba115922814cceb5dca0853f63a87b/scim-server/scim-server-common/src/main/java/edu/psu/swe/scim/server/utility/AttributeUtil.java",
                "sha": "f26dad2b8c76a5e9af95284cf7f555c082fc80b3",
                "status": "modified"
            }
        ],
        "message": "Add null checks before processing schemas and attributes\n\nISSUE #45: The findAttributeInSchema method would throw a NPE if the\nattribute does not exist in the given schema. Added null checks to\nensure that the AttributeDoesNotExistException is thrown if an attribute\nthat does not belong to any known schema is encountered.",
        "parent": "https://github.com/apache/directory-scimple/commit/7f4b40178721ed008c9b768c769a51a67232fea5",
        "patched_files": [
            "AttributeUtil.java"
        ],
        "repo": "directory-scimple",
        "unit_tests": [
            "AttributeUtilTest.java"
        ]
    },
    "directory-scimple_dc18360": {
        "bug_id": "directory-scimple_dc18360",
        "commit": "https://github.com/apache/directory-scimple/commit/dc18360a12d0423d2765c60479da897d267848ca",
        "file": [
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/directory-scimple/blob/dc18360a12d0423d2765c60479da897d267848ca/scim-server/scim-server-common/src/main/java/edu/psu/swe/scim/server/provider/ProviderRegistry.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/directory-scimple/contents/scim-server/scim-server-common/src/main/java/edu/psu/swe/scim/server/provider/ProviderRegistry.java?ref=dc18360a12d0423d2765c60479da897d267848ca",
                "deletions": 1,
                "filename": "scim-server/scim-server-common/src/main/java/edu/psu/swe/scim/server/provider/ProviderRegistry.java",
                "patch": "@@ -150,7 +150,7 @@ private ResourceType generateResourceType(Class<? extends ScimResource> base, Pr\n \n         ScimExtensionType extensionType = se.getAnnotation(ScimExtensionType.class);\n \n-        if (extensionList == null) {\n+        if (extensionType == null) {\n           throw new InvalidProviderException(\"Missing annotation: ScimExtensionType must be at the top of scim extension classes\");\n         }\n ",
                "raw_url": "https://github.com/apache/directory-scimple/raw/dc18360a12d0423d2765c60479da897d267848ca/scim-server/scim-server-common/src/main/java/edu/psu/swe/scim/server/provider/ProviderRegistry.java",
                "sha": "b29af9abff6d8173d0912d2732f1ab56f1657a5b",
                "status": "modified"
            }
        ],
        "message": "Fixing NPE on missing ScimExtensionType annotation",
        "parent": "https://github.com/apache/directory-scimple/commit/2c19114ef1c6c6e0f8be46482211820fa048b5ab",
        "patched_files": [
            "ProviderRegistry.java"
        ],
        "repo": "directory-scimple",
        "unit_tests": [
            "ProviderRegistryTest.java"
        ]
    }
}