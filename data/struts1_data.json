[
    {
        "repo": "struts1",
        "message": "Prevent NullPointerException when toString() is called before dynaClass is initialized.\n\ngit-svn-id: https://svn.apache.org/repos/asf/struts/core/trunk@168011 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/struts1/commit/0713a63566e869ebb1c9d8eba60ccb3ae3a9c603",
        "parent": "https://github.com/apache/struts1/commit/431079354aa7946bd99dc313ed9171e367e3f307",
        "bug_id": "struts1_1",
        "file": [
            {
                "sha": "c4ad4e92474098ec281f2a8e1e34d010a46c734e",
                "filename": "src/share/org/apache/struts/action/DynaActionForm.java",
                "blob_url": "https://github.com/apache/struts1/blob/0713a63566e869ebb1c9d8eba60ccb3ae3a9c603/src/share/org/apache/struts/action/DynaActionForm.java",
                "raw_url": "https://github.com/apache/struts1/raw/0713a63566e869ebb1c9d8eba60ccb3ae3a9c603/src/share/org/apache/struts/action/DynaActionForm.java",
                "status": "modified",
                "changes": 9,
                "additions": 7,
                "contents_url": "https://api.github.com/repos/apache/struts1/contents/src/share/org/apache/struts/action/DynaActionForm.java?ref=0713a63566e869ebb1c9d8eba60ccb3ae3a9c603",
                "patch": "@@ -507,8 +507,13 @@ public void set(String name, String key, Object value) {\n     public String toString() {\n \n         StringBuffer sb = new StringBuffer(\"DynaActionForm[dynaClass=\");\n-        sb.append(getDynaClass().getName());\n-        DynaProperty props[] = getDynaClass().getDynaProperties();\n+        DynaClass dynaClass = getDynaClass();\n+        if (dynaClass == null) {\n+            return sb.append(\"null]\").toString();\n+        }\n+        \n+        sb.append(dynaClass.getName());\n+        DynaProperty props[] = dynaClass.getDynaProperties();\n         if (props == null) {\n             props = new DynaProperty[0];\n         }",
                "deletions": 2
            }
        ]
    },
    {
        "repo": "struts1",
        "message": "Port Fix for STR-3173 to trunk - NullPointerException in org.apache.struts.util.RequestUtils.rationalizeMultipleFileProperty - reported by Xavier Poinsard\n\ngit-svn-id: https://svn.apache.org/repos/asf/struts/struts1/trunk@727180 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/struts1/commit/9c5f03176000527594664333f34a11289e65d960",
        "parent": "https://github.com/apache/struts1/commit/737011280ceacd9944f4c7c13a3aa640b0c37dac",
        "bug_id": "struts1_2",
        "file": [
            {
                "sha": "82692ca44dba8ea10d416b1f062fa920f45491a1",
                "filename": "core/src/main/java/org/apache/struts/util/RequestUtils.java",
                "blob_url": "https://github.com/apache/struts1/blob/9c5f03176000527594664333f34a11289e65d960/core/src/main/java/org/apache/struts/util/RequestUtils.java",
                "raw_url": "https://github.com/apache/struts1/raw/9c5f03176000527594664333f34a11289e65d960/core/src/main/java/org/apache/struts/util/RequestUtils.java",
                "status": "modified",
                "changes": 4,
                "additions": 4,
                "contents_url": "https://api.github.com/repos/apache/struts1/contents/core/src/main/java/org/apache/struts/util/RequestUtils.java?ref=9c5f03176000527594664333f34a11289e65d960",
                "patch": "@@ -524,6 +524,10 @@ private static Object rationalizeMultipleFileProperty(Object bean, String name,\n         try {\n             Class propertyType = PropertyUtils.getPropertyType(bean, name);\n \n+            if (propertyType == null) {\n+                return parameterValue;\n+            }\n+\n             if (List.class.isAssignableFrom(propertyType)) {\n                 ArrayList list = new ArrayList(1);\n                 list.add(formFileValue);",
                "deletions": 0
            }
        ]
    },
    {
        "repo": "struts1",
        "message": "update the retrieveTempDir() method to insure that\nNullPointerExceptions won't be thrown if the call to\ngetServlet() returns null\n\nPR: Bugzilla #9117\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/struts/trunk@49149 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/struts1/commit/1e38068c1e641fb40d3692c69579fb9a9124660c",
        "parent": "https://github.com/apache/struts1/commit/efa1b7dad6e8a1e20ef089cdfe9778d386dfffdb",
        "bug_id": "struts1_3",
        "file": [
            {
                "sha": "6b2ba832f0200fba808889d161872dd2adc1037c",
                "filename": "src/share/org/apache/struts/upload/DiskMultipartRequestHandler.java",
                "blob_url": "https://github.com/apache/struts1/blob/1e38068c1e641fb40d3692c69579fb9a9124660c/src/share/org/apache/struts/upload/DiskMultipartRequestHandler.java",
                "raw_url": "https://github.com/apache/struts1/raw/1e38068c1e641fb40d3692c69579fb9a9124660c/src/share/org/apache/struts/upload/DiskMultipartRequestHandler.java",
                "status": "modified",
                "changes": 22,
                "additions": 13,
                "contents_url": "https://api.github.com/repos/apache/struts1/contents/src/share/org/apache/struts/upload/DiskMultipartRequestHandler.java?ref=1e38068c1e641fb40d3692c69579fb9a9124660c",
                "patch": "@@ -229,16 +229,20 @@ else if (stringSize.endsWith(\"G\")) {\n     protected void retrieveTempDir(ApplicationConfig appConfig) { \n         \n         //attempt to retrieve the servlet container's temporary directory\n-        ServletContext context = getServlet().getServletContext();\n-       \n-        try {\n-            tempDir =\n-                (String) context.getAttribute(\"javax.servlet.context.tempdir\");\n-        }\n-        catch (ClassCastException cce) {\n-            tempDir = ((File) context.getAttribute(\"javax.servlet.context.tempdir\")).getAbsolutePath();\n+        ActionServlet servlet = getServlet();\n+        if (servlet != null) {\n+            //attempt to retrieve the servlet container's temporary directory\n+            ServletContext context = servlet.getServletContext();\n+\n+            try {\n+                tempDir =\n+                    (String) context.getAttribute(\"javax.servlet.context.tempdir\");\n+            }\n+            catch (ClassCastException cce) {\n+                tempDir = ((File) context.getAttribute(\"javax.servlet.context.tempdir\")).getAbsolutePath();\n+            }\n         }           \n-        \n+\n         if (tempDir == null) {            \n             //attempt to retrieve the temporary directory from the controller\n             tempDir = appConfig.getControllerConfig().getTempDir();",
                "deletions": 9
            }
        ]
    },
    {
        "repo": "struts1",
        "message": "Avoid NullPointerException errors if bodyContent is null.\n\nSubmitted by: Hal Deadman <hal.deadman@tallan.com>\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/struts/trunk@48035 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/struts1/commit/f75216a8e6cbb8b24013c915730ca1882dfe2abf",
        "parent": "https://github.com/apache/struts1/commit/8c6423bf876c638a706466c9222b68da5bd638b9",
        "bug_id": "struts1_4",
        "file": [
            {
                "sha": "c34eea5755edaa91e23923c4139fe5e367588ea9",
                "filename": "src/share/org/apache/struts/taglib/template/PutTag.java",
                "blob_url": "https://github.com/apache/struts1/blob/f75216a8e6cbb8b24013c915730ca1882dfe2abf/src/share/org/apache/struts/taglib/template/PutTag.java",
                "raw_url": "https://github.com/apache/struts1/raw/f75216a8e6cbb8b24013c915730ca1882dfe2abf/src/share/org/apache/struts/taglib/template/PutTag.java",
                "status": "modified",
                "changes": 10,
                "additions": 6,
                "contents_url": "https://api.github.com/repos/apache/struts1/contents/src/share/org/apache/struts/taglib/template/PutTag.java?ref=f75216a8e6cbb8b24013c915730ca1882dfe2abf",
                "patch": "@@ -1,7 +1,7 @@\n /*\n- * $Header: /home/cvs/jakarta-struts/src/share/org/apache/struts/taglib/template/Attic/PutTag.java,v 1.4 2000/12/12 17:11:33 dgeary Exp $\n- * $Revision: 1.4 $\n- * $Date: 2000/12/12 17:11:33 $\n+ * $Header: /home/cvs/jakarta-struts/src/share/org/apache/struts/taglib/template/Attic/PutTag.java,v 1.5 2001/01/12 19:29:42 craigmcc Exp $\n+ * $Revision: 1.5 $\n+ * $Date: 2001/01/12 19:29:42 $\n  *\n  * ====================================================================\n  *\n@@ -73,7 +73,7 @@\n  * Tag handler for &lt;template:put&gt;, which puts content into request scope.\n  *\n  * @author David Geary\n- * @version $Revision: 1.4 $ $Date: 2000/12/12 17:11:33 $\n+ * @version $Revision: 1.5 $ $Date: 2001/01/12 19:29:42 $\n  */\n public class PutTag extends BodyTagSupport {\n \n@@ -195,6 +195,8 @@ private String getContent() throws JspException {\n      * Returns a boolean indicating whether this tag has a body.\n      */\n    private boolean hasBody() {\n+      if (bodyContent == null)\n+         return (false);\n       return ! bodyContent.getString().equals(\"\");\n    }\n ",
                "deletions": 4
            }
        ]
    },
    {
        "repo": "struts1",
        "message": "Fixing NPE when extending an action mapping that contains wildcards.\nSince the wildcard matcher is only created on a freeze, the call to\nfindActionConfigs at construction time threw the NPE.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/struts/action/trunk@360262 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/struts1/commit/029cef275759ce8d20bb3ec04c0f65bec78c38a4",
        "parent": "https://github.com/apache/struts1/commit/d778943426a021d92bec3ca8989fcf0f6e9bf3b5",
        "bug_id": "struts1_5",
        "file": [
            {
                "sha": "8a405a9235d3f5ae52caad07b934f755ed8aecfc",
                "filename": "src/java/org/apache/struts/config/impl/ModuleConfigImpl.java",
                "blob_url": "https://github.com/apache/struts1/blob/029cef275759ce8d20bb3ec04c0f65bec78c38a4/src/java/org/apache/struts/config/impl/ModuleConfigImpl.java",
                "raw_url": "https://github.com/apache/struts1/raw/029cef275759ce8d20bb3ec04c0f65bec78c38a4/src/java/org/apache/struts/config/impl/ModuleConfigImpl.java",
                "status": "modified",
                "changes": 4,
                "additions": 2,
                "contents_url": "https://api.github.com/repos/apache/struts1/contents/src/java/org/apache/struts/config/impl/ModuleConfigImpl.java?ref=029cef275759ce8d20bb3ec04c0f65bec78c38a4",
                "patch": "@@ -315,8 +315,8 @@ public ActionConfig findActionConfig(String path) {\n         ActionConfig config = (ActionConfig) actionConfigs.get(path);\n \n         // If a direct match cannot be found, try to match action configs\n-        // containing wildcard patterns\n-        if (config == null) {\n+        // containing wildcard patterns only if a matcher exists.\n+        if (config == null && matcher != null) {\n             config = matcher.match(path);\n         }\n ",
                "deletions": 2
            }
        ]
    },
    {
        "repo": "struts1",
        "message": "STR-2020: Explain that NPE is caused by missing ActionServlet\n\ngit-svn-id: https://svn.apache.org/repos/asf/struts/struts1/trunk@570628 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/struts1/commit/4a78054b454eb09b77e20bb47a6278c6b77e372c",
        "parent": "https://github.com/apache/struts1/commit/cb1207b1b459a82d3ad4f86be2e16b3881d72496",
        "bug_id": "struts1_6",
        "file": [
            {
                "sha": "a65be9af211cd2338ec4b6c96cd5468cd32bf00c",
                "filename": "core/src/main/java/org/apache/struts/validator/ValidatorForm.java",
                "blob_url": "https://github.com/apache/struts1/blob/4a78054b454eb09b77e20bb47a6278c6b77e372c/core/src/main/java/org/apache/struts/validator/ValidatorForm.java",
                "raw_url": "https://github.com/apache/struts1/raw/4a78054b454eb09b77e20bb47a6278c6b77e372c/core/src/main/java/org/apache/struts/validator/ValidatorForm.java",
                "status": "modified",
                "changes": 13,
                "additions": 11,
                "contents_url": "https://api.github.com/repos/apache/struts1/contents/core/src/main/java/org/apache/struts/validator/ValidatorForm.java?ref=4a78054b454eb09b77e20bb47a6278c6b77e372c",
                "patch": "@@ -103,11 +103,20 @@ public void setPage(int page) {\n      */\n     public ActionErrors validate(ActionMapping mapping,\n         HttpServletRequest request) {\n-        ServletContext application = getServlet().getServletContext();\n+        \n         ActionErrors errors = new ActionErrors();\n-\n         String validationKey = getValidationKey(mapping, request);\n \n+        ServletContext application;\n+        try {\n+            application = getServlet().getServletContext();\n+        } catch (NullPointerException e) {\n+            throw new IllegalStateException(\n+                    \"Missing ActionServlet instance for bean '\" +\n+                    mapping.getName() + \n+                    \"' (created outside of Struts?)\", e);\n+        }\n+        \n         Validator validator =\n             Resources.initValidator(validationKey, this, application, request,\n                 errors, getPage());",
                "deletions": 2
            }
        ]
    },
    {
        "repo": "struts1",
        "message": "STR-3085: Swallow NPE and return null\n\ngit-svn-id: https://svn.apache.org/repos/asf/struts/struts1/trunk@569239 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/struts1/commit/8d0f7d63456a652d0ecd2645e991b120e4ef5f3f",
        "parent": "https://github.com/apache/struts1/commit/38d2e9bb1a5e98e045fd06bf9ea6736a71d3f76a",
        "bug_id": "struts1_7",
        "file": [
            {
                "sha": "bbef4e4914cf455be1b8038440d3138b1dabde2b",
                "filename": "core/src/main/java/org/apache/struts/action/ActionServlet.java",
                "blob_url": "https://github.com/apache/struts1/blob/8d0f7d63456a652d0ecd2645e991b120e4ef5f3f/core/src/main/java/org/apache/struts/action/ActionServlet.java",
                "raw_url": "https://github.com/apache/struts1/raw/8d0f7d63456a652d0ecd2645e991b120e4ef5f3f/core/src/main/java/org/apache/struts/action/ActionServlet.java",
                "status": "modified",
                "changes": 8,
                "additions": 6,
                "contents_url": "https://api.github.com/repos/apache/struts1/contents/core/src/main/java/org/apache/struts/action/ActionServlet.java?ref=8d0f7d63456a652d0ecd2645e991b120e4ef5f3f",
                "patch": "@@ -1957,8 +1957,12 @@ protected void process(HttpServletRequest request,\n      * @return the array of plugins or <code>null</code>\n      */\n     private PlugIn[] getModulePlugIns(ModuleConfig moduleConfig) {\n-        String plugInKey = Globals.PLUG_INS_KEY + moduleConfig.getPrefix(); \n-        return (PlugIn[]) getServletContext().getAttribute(plugInKey);\n+        try {\n+            String plugInKey = Globals.PLUG_INS_KEY + moduleConfig.getPrefix(); \n+            return (PlugIn[]) getServletContext().getAttribute(plugInKey);\n+        } catch (NullPointerException e) {\n+            return null;\n+        }\n     }\n \n     /**",
                "deletions": 2
            }
        ]
    },
    {
        "repo": "struts1",
        "message": "STR-2979: Faces build causes NPE with maven-taglib-plugin\n\ngit-svn-id: https://svn.apache.org/repos/asf/struts/struts1/trunk@479870 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/struts1/commit/c929dfdcf7118c3b8db22464da083d465a91fb1e",
        "parent": "https://github.com/apache/struts1/commit/bc5a6ab6819b33b61195073d680d4d6cfddb3f4c",
        "bug_id": "struts1_8",
        "file": [
            {
                "sha": "e67ee63dfe5883594224b0440fd7d8ea935de9ae",
                "filename": "faces/pom.xml",
                "blob_url": "https://github.com/apache/struts1/blob/c929dfdcf7118c3b8db22464da083d465a91fb1e/faces/pom.xml",
                "raw_url": "https://github.com/apache/struts1/raw/c929dfdcf7118c3b8db22464da083d465a91fb1e/faces/pom.xml",
                "status": "modified",
                "changes": 3,
                "additions": 3,
                "contents_url": "https://api.github.com/repos/apache/struts1/contents/faces/pom.xml?ref=c929dfdcf7118c3b8db22464da083d465a91fb1e",
                "patch": "@@ -117,13 +117,16 @@\n \n    <reporting>\n       <plugins>\n+      <!-- \n+         STR-2979: Faces build causes NPE with maven-taglib-plugin\n          <plugin>\n             <groupId>net.sourceforge.maven-taglib</groupId>\n             <artifactId>maven-taglib-plugin</artifactId>\n             <configuration>\n                <taglib.src.dir>${basedir}/src/main/resources/META-INF/tld</taglib.src.dir>\n             </configuration>\n          </plugin>\n+      -->\n       </plugins>\n    </reporting>\n ",
                "deletions": 0
            }
        ]
    },
    {
        "repo": "struts1",
        "message": "Reload stylesheets for XSL tranformations to  avoid NPE bug.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/struts/trunk@51069 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/struts1/commit/2e6972053a6b8c3ed152b255e570a09d971f70f8",
        "parent": "https://github.com/apache/struts1/commit/711d5ad92655d7a70f2eca6bda680a724cae506d",
        "bug_id": "struts1_9",
        "file": [
            {
                "sha": "6b9ba89436d554882a8fd3f0e9a65b08163c06bd",
                "filename": "build-webapps.xml",
                "blob_url": "https://github.com/apache/struts1/blob/2e6972053a6b8c3ed152b255e570a09d971f70f8/build-webapps.xml",
                "raw_url": "https://github.com/apache/struts1/raw/2e6972053a6b8c3ed152b255e570a09d971f70f8/build-webapps.xml",
                "status": "modified",
                "changes": 18,
                "additions": 12,
                "contents_url": "https://api.github.com/repos/apache/struts1/contents/build-webapps.xml?ref=2e6972053a6b8c3ed152b255e570a09d971f70f8",
                "patch": "@@ -219,47 +219,53 @@\n     <style   basedir=\"${doc.dir}\" destdir=\"${build.home}/documentation\"\n            extension=\".html\" style=\"${doc.dir}/stylesheets/struts.xsl\"\n             includes=\"*.xml\"\n-            excludes=\"project.xml\">\n+            excludes=\"project.xml\"\n+            reloadstylesheet=\"true\">\n       <param name=\"relative-path\" expression=\".\"/>\n     </style>            \n     <!-- Create the FAQs -->\n     <style   basedir=\"${doc.dir}/faqs\"\n              destdir=\"${build.home}/documentation/faqs\"\n            extension=\".html\" style=\"${doc.dir}/stylesheets/struts.xsl\"\n             includes=\"*.xml\"\n-            excludes=\"project.xml\">\n+            excludes=\"project.xml\"\n+            reloadstylesheet=\"true\">\n       <param name=\"project-path\" expression=\"../faqs/project.xml\"/>\n     </style>            \n     <!-- Create the news -->\n     <style   basedir=\"${doc.dir}/news\"\n              destdir=\"${build.home}/documentation/news\"\n            extension=\".html\" style=\"${doc.dir}/stylesheets/struts.xsl\"\n             includes=\"*.xml\"\n-            excludes=\"project.xml\">\n+            excludes=\"project.xml\"\n+            reloadstylesheet=\"true\">\n       <param name=\"project-path\" expression=\"../news/project.xml\"/>\n     </style>            \n     <!-- Create the proposals -->\n     <style   basedir=\"${doc.dir}/proposals\"\n              destdir=\"${build.home}/documentation/proposals\"\n            extension=\".html\" style=\"${doc.dir}/stylesheets/struts.xsl\"\n             includes=\"*.xml\"\n-            excludes=\"project.xml\">\n+            excludes=\"project.xml\"\n+            reloadstylesheet=\"true\">\n       <param name=\"project-path\" expression=\"../proposals/project.xml\"/>\n     </style>            \n     <!-- Create the resources -->\n     <style   basedir=\"${doc.dir}/resources\"\n              destdir=\"${build.home}/documentation/resources\"\n            extension=\".html\" style=\"${doc.dir}/stylesheets/struts.xsl\"\n             includes=\"*.xml\"\n-            excludes=\"project.xml\">\n+            excludes=\"project.xml\"\n+            reloadstylesheet=\"true\">\n       <param name=\"project-path\" expression=\"../resources/project.xml\"/>\n     </style>            \n     <!-- Create the user guide -->\n     <style   basedir=\"${doc.dir}/userGuide\"\n              destdir=\"${build.home}/documentation/userGuide\"\n            extension=\".html\" style=\"${doc.dir}/stylesheets/struts.xsl\"\n             includes=\"*.xml\"\n-            excludes=\"project.xml\">\n+            excludes=\"project.xml\"\n+            reloadstylesheet=\"true\">\n       <param name=\"project-path\" expression=\"../userGuide/project.xml\"/>\n     </style>  \n ",
                "deletions": 6
            }
        ]
    },
    {
        "repo": "struts1",
        "message": "Throw a nicer NPE for Bugzilla PR# 14720.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/struts/trunk@49883 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/struts1/commit/4cab59bf21afcac8d233074134d0354b48fb76d7",
        "parent": "https://github.com/apache/struts1/commit/f5bcaa8e335237bf51dd8267d0ac0f0ef59d72b5",
        "bug_id": "struts1_10",
        "file": [
            {
                "sha": "b0a12852fe4331a66e4fe94d1796e625ac257514",
                "filename": "src/share/org/apache/struts/taglib/html/JavascriptValidatorTag.java",
                "blob_url": "https://github.com/apache/struts1/blob/4cab59bf21afcac8d233074134d0354b48fb76d7/src/share/org/apache/struts/taglib/html/JavascriptValidatorTag.java",
                "raw_url": "https://github.com/apache/struts1/raw/4cab59bf21afcac8d233074134d0354b48fb76d7/src/share/org/apache/struts/taglib/html/JavascriptValidatorTag.java",
                "status": "modified",
                "changes": 15,
                "additions": 12,
                "contents_url": "https://api.github.com/repos/apache/struts1/contents/src/share/org/apache/struts/taglib/html/JavascriptValidatorTag.java?ref=4cab59bf21afcac8d233074134d0354b48fb76d7",
                "patch": "@@ -88,7 +88,7 @@\n  * defined in the struts-config.xml file.\n  *\n  * @author David Winterfeldt\n- * @version $Revision: 1.17 $ $Date: 2002/11/20 05:56:08 $\n+ * @version $Revision: 1.18 $ $Date: 2002/11/21 02:02:16 $\n  * @since Struts 1.1\n  */\n public class JavascriptValidatorTag extends BodyTagSupport {\n@@ -333,8 +333,17 @@ public int doStartTag() throws JspException {\n \n                 // Create list of ValidatorActions based on lActionMethods\n                 for (Iterator i = lActionMethods.iterator(); i.hasNext();) {\n-                    ValidatorAction va = resources.getValidatorAction((String) i.next());\n-\n+                    String depends = (String) i.next();\n+                    ValidatorAction va = resources.getValidatorAction(depends);\n+\n+                    // throw nicer NPE for easier debugging\n+                    if (va == null) {\n+                        throw new NullPointerException(\n+                            \"Depends string \\\"\"\n+                                + depends\n+                                + \"\\\" was not found in validator-rules.xml.\");\n+                    }               \n+                    \n                     String javascript = va.getJavascript();\n                     if (javascript != null && javascript.length() > 0) {\n                         lActions.add(va);",
                "deletions": 3
            }
        ]
    },
    {
        "repo": "struts1",
        "message": "Making some of the fail messages a bit more expressive so I can tell that they are all NullPointerExceptions. These are presumably happening due to STR-3085\n\ngit-svn-id: https://svn.apache.org/repos/asf/struts/struts1/trunk@568991 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/struts1/commit/38d2e9bb1a5e98e045fd06bf9ea6736a71d3f76a",
        "parent": "https://github.com/apache/struts1/commit/e1354137db95fd2459423353f18784849a3c0d0b",
        "bug_id": "struts1_11",
        "file": [
            {
                "sha": "c7f0c19c26463db0b8cc4ac38560ed937aa23728",
                "filename": "core/src/test/java/org/apache/struts/action/TestActionServlet.java",
                "blob_url": "https://github.com/apache/struts1/blob/38d2e9bb1a5e98e045fd06bf9ea6736a71d3f76a/core/src/test/java/org/apache/struts/action/TestActionServlet.java",
                "raw_url": "https://github.com/apache/struts1/raw/38d2e9bb1a5e98e045fd06bf9ea6736a71d3f76a/core/src/test/java/org/apache/struts/action/TestActionServlet.java",
                "status": "modified",
                "changes": 6,
                "additions": 3,
                "contents_url": "https://api.github.com/repos/apache/struts1/contents/core/src/test/java/org/apache/struts/action/TestActionServlet.java?ref=38d2e9bb1a5e98e045fd06bf9ea6736a71d3f76a",
                "patch": "@@ -488,7 +488,7 @@ public void testInitModuleExceptionConfigsNoExtends()\n         try {\n             actionServlet.initModuleExceptionConfigs(moduleConfig);\n         } catch (Exception e) {\n-            fail(\"Unexpected exception caught.\");\n+            fail(\"Unexpected exception caught: \" + e);\n         }\n     }\n \n@@ -668,7 +668,7 @@ public void testInitModuleForwardConfigsNoExtends()\n         try {\n             actionServlet.initModuleForwards(moduleConfig);\n         } catch (Exception e) {\n-            fail(\"Unexpected exception caught.\");\n+            fail(\"Unexpected exception caught: \" + e);\n         }\n     }\n \n@@ -846,7 +846,7 @@ public void testInitModuleActionConfigsNoExtends()\n         try {\n             actionServlet.initModuleActions(moduleConfig);\n         } catch (Exception e) {\n-            fail(\"Unexpected exception caught.\");\n+            fail(\"Unexpected exception caught: \" + e);\n         }\n     }\n ",
                "deletions": 3
            }
        ]
    },
    {
        "repo": "struts1",
        "message": "Add debugging messages when ServletContext.getRequestDispatcher() returns\nnull, in the remaining cases where this did not occur.  Prevents\nNullPointerException problems on mis-configured struts-config.xml files.\n\nPR: Bugzilla #935\nSubmitted by:\tNick Pellow <nick@svana.org>\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/struts/trunk@48231 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/struts1/commit/3cf97077d2630f3bc39bcff460233bf26a9bf183",
        "parent": "https://github.com/apache/struts1/commit/10138a54a951e5b9ef0fd8040003e1822b65ed9d",
        "bug_id": "struts1_12",
        "file": [
            {
                "sha": "895a24201cfbeacfcc9fdc2645c4aae097f6a047",
                "filename": "src/share/org/apache/struts/action/ActionServlet.java",
                "blob_url": "https://github.com/apache/struts1/blob/3cf97077d2630f3bc39bcff460233bf26a9bf183/src/share/org/apache/struts/action/ActionServlet.java",
                "raw_url": "https://github.com/apache/struts1/raw/3cf97077d2630f3bc39bcff460233bf26a9bf183/src/share/org/apache/struts/action/ActionServlet.java",
                "status": "modified",
                "changes": 20,
                "additions": 16,
                "contents_url": "https://api.github.com/repos/apache/struts1/contents/src/share/org/apache/struts/action/ActionServlet.java?ref=3cf97077d2630f3bc39bcff460233bf26a9bf183",
                "patch": "@@ -1,7 +1,7 @@\n /*\n- * $Header: /home/cvs/jakarta-struts/src/share/org/apache/struts/action/ActionServlet.java,v 1.63 2001/03/11 02:50:10 craigmcc Exp $\n- * $Revision: 1.63 $\n- * $Date: 2001/03/11 02:50:10 $\n+ * $Header: /home/cvs/jakarta-struts/src/share/org/apache/struts/action/ActionServlet.java,v 1.64 2001/03/13 19:21:38 craigmcc Exp $\n+ * $Revision: 1.64 $\n+ * $Date: 2001/03/13 19:21:38 $\n  *\n  * ====================================================================\n  *\n@@ -230,7 +230,7 @@\n  * </ul>\n  *\n  * @author Craig R. McClanahan\n- * @version $Revision: 1.63 $ $Date: 2001/03/11 02:50:10 $\n+ * @version $Revision: 1.64 $ $Date: 2001/03/13 19:21:38 $\n  */\n \n public class ActionServlet\n@@ -1712,6 +1712,12 @@ protected void processActionForward(ActionForward forward,\n \t    } else {\n \t\tRequestDispatcher rd =\n \t\t    getServletContext().getRequestDispatcher(path);\n+                if (rd == null) {\n+                    response.sendError(HttpServletResponse.SC_INTERNAL_SERVER_ERROR,\n+                                       internal.getMessage(\"requestDispatcher\",\n+                                                           path));\n+                    return;\n+                }\n \t\trd.forward(request, response);\n \t    }\n \t}\n@@ -2044,6 +2050,12 @@ protected boolean processValidate(ActionMapping mapping,\n \t    log(\"  Validation error(s), redirecting to: \" + uri);\n \trequest.setAttribute(Action.ERROR_KEY, errors);\n \tRequestDispatcher rd = getServletContext().getRequestDispatcher(uri);\n+        if (rd == null) {\n+            response.sendError(HttpServletResponse.SC_INTERNAL_SERVER_ERROR,\n+                               internal.getMessage(\"requestDispatcher\",\n+                                                   uri));\n+            return (false);\n+        }\n \trd.forward(request, response);\n \treturn (false);\n ",
                "deletions": 4
            }
        ]
    },
    {
        "repo": "struts1",
        "message": "Correct the parameter name of the third parameter to avoid NullPointerException\nerrors.\n\nSubmitted by: Nathan Eric Probst <probst@pnod.net>\nPR: BugRat Bug Report #779\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/struts/trunk@48056 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/struts1/commit/14eff3ae5ab1d4109c1c9b3106308eeccc45e35a",
        "parent": "https://github.com/apache/struts1/commit/b47ab3797fa882c8e2a9782ecdeec99dbb18b88a",
        "bug_id": "struts1_13",
        "file": [
            {
                "sha": "cac79b43bfba4c1beabd0da939f011b80c9fdb2c",
                "filename": "src/share/org/apache/struts/digester/SetTopRule.java",
                "blob_url": "https://github.com/apache/struts1/blob/14eff3ae5ab1d4109c1c9b3106308eeccc45e35a/src/share/org/apache/struts/digester/SetTopRule.java",
                "raw_url": "https://github.com/apache/struts1/raw/14eff3ae5ab1d4109c1c9b3106308eeccc45e35a/src/share/org/apache/struts/digester/SetTopRule.java",
                "status": "modified",
                "changes": 10,
                "additions": 5,
                "contents_url": "https://api.github.com/repos/apache/struts1/contents/src/share/org/apache/struts/digester/SetTopRule.java?ref=14eff3ae5ab1d4109c1c9b3106308eeccc45e35a",
                "patch": "@@ -1,7 +1,7 @@\n /*\n- * $Header: /home/cvs/jakarta-struts/src/share/org/apache/struts/digester/Attic/SetTopRule.java,v 1.3 2001/01/23 03:35:52 craigmcc Exp $\n- * $Revision: 1.3 $\n- * $Date: 2001/01/23 03:35:52 $\n+ * $Header: /home/cvs/jakarta-struts/src/share/org/apache/struts/digester/Attic/SetTopRule.java,v 1.4 2001/01/23 03:50:02 craigmcc Exp $\n+ * $Revision: 1.4 $\n+ * $Date: 2001/01/23 03:50:02 $\n  *\n  * ====================================================================\n  * \n@@ -72,7 +72,7 @@\n  * object, passing the (top-1) (child) object as an argument.\n  *\n  * @author Craig McClanahan\n- * @version $Revision: 1.3 $ $Date: 2001/01/23 03:35:52 $\n+ * @version $Revision: 1.4 $ $Date: 2001/01/23 03:50:02 $\n  */\n \n public final class SetTopRule extends Rule {\n@@ -107,7 +107,7 @@ public SetTopRule(Digester digester, String methodName) {\n      *  for a <code>boolean</code> parameter)\n      */\n     public SetTopRule(Digester digester, String methodName,\n-                         String argument) {\n+                         String paramType) {\n \n \tsuper(digester);\n \tthis.methodName = methodName;",
                "deletions": 5
            }
        ]
    },
    {
        "repo": "struts1",
        "message": "Tweak the user guide stylesheet so that it doesn't throw\nNullPointerExceptions on my server.\n\nMichael:  Could you make sure this still works for you as well?\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/struts/trunk@48013 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/struts1/commit/6bce86d1994f7a6c306621210104ae62f81d331a",
        "parent": "https://github.com/apache/struts1/commit/35879fcd2e6f1732131ae17c9210b28721c66cd0",
        "bug_id": "struts1_14",
        "file": [
            {
                "sha": "00a4cfd47b81460e70e7d517d8b07e21fd5ebd3d",
                "filename": "src/doc/stylesheets/userGuide.xsl",
                "blob_url": "https://github.com/apache/struts1/blob/6bce86d1994f7a6c306621210104ae62f81d331a/src/doc/stylesheets/userGuide.xsl",
                "raw_url": "https://github.com/apache/struts1/raw/6bce86d1994f7a6c306621210104ae62f81d331a/src/doc/stylesheets/userGuide.xsl",
                "status": "modified",
                "changes": 5,
                "additions": 4,
                "contents_url": "https://api.github.com/repos/apache/struts1/contents/src/doc/stylesheets/userGuide.xsl?ref=6bce86d1994f7a6c306621210104ae62f81d331a",
                "patch": "@@ -1,6 +1,6 @@\n <?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n <!-- Content Stylesheet for Struts Documentation -->\n-<!-- $Id: userGuide.xsl,v 1.1 2001/01/08 16:27:31 mschachter Exp $ -->\n+<!-- $Id: userGuide.xsl,v 1.2 2001/01/10 20:20:21 craigmcc Exp $ -->\n \n <xsl:stylesheet xmlns:xsl=\"http://www.w3.org/1999/XSL/Transform\"\n   version=\"1.0\">\n@@ -39,9 +39,12 @@\n \t\t\t<xsl:attribute name=\"name\"><xsl:value-of select=\"@href\" /></xsl:attribute>\n \t\t</xsl:element>\n \t\t<h3><xsl:value-of select=\"@name\" /></h3>\n+<!--\n                 <xsl:copy>\n                     <xsl:apply-templates select=\"*|@\" />\n                 </xsl:copy>\n+-->\n+                 <xsl:apply-templates/>\n \t</xsl:template>\n \n         <xsl:template match=\"properties\">",
                "deletions": 1
            }
        ]
    },
    {
        "repo": "struts1",
        "message": "Avoid a NullPointerException error on some servlet containers when trying\nto set a request attribute to a null value.  Also, convert the literal\nstrings used as attribute names in multipart processing to manifest\nconstants.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/struts/trunk@47930 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/struts1/commit/ceb72d0a53d8978ba324188850e718e2cad2fd57",
        "parent": "https://github.com/apache/struts1/commit/744da5ef5a6259c507c156fcdcb706a13002fed7",
        "bug_id": "struts1_15",
        "file": [
            {
                "sha": "84769c757dd55ecc124e9728baa7059c2299cce6",
                "filename": "src/share/org/apache/struts/action/Action.java",
                "blob_url": "https://github.com/apache/struts1/blob/ceb72d0a53d8978ba324188850e718e2cad2fd57/src/share/org/apache/struts/action/Action.java",
                "raw_url": "https://github.com/apache/struts1/raw/ceb72d0a53d8978ba324188850e718e2cad2fd57/src/share/org/apache/struts/action/Action.java",
                "status": "modified",
                "changes": 24,
                "additions": 20,
                "contents_url": "https://api.github.com/repos/apache/struts1/contents/src/share/org/apache/struts/action/Action.java?ref=ceb72d0a53d8978ba324188850e718e2cad2fd57",
                "patch": "@@ -1,7 +1,7 @@\n /*\n- * $Header: /home/cvs/jakarta-struts/src/share/org/apache/struts/action/Action.java,v 1.11 2000/12/27 00:16:02 craigmcc Exp $\n- * $Revision: 1.11 $\n- * $Date: 2000/12/27 00:16:02 $\n+ * $Header: /home/cvs/jakarta-struts/src/share/org/apache/struts/action/Action.java,v 1.12 2000/12/27 04:50:16 craigmcc Exp $\n+ * $Revision: 1.12 $\n+ * $Date: 2000/12/27 04:50:16 $\n  *\n  * ====================================================================\n  *\n@@ -105,7 +105,7 @@\n  * by this Action.\n  *\n  * @author Craig R. McClanahan\n- * @version $Revision: 1.11 $ $Date: 2000/12/27 00:16:02 $\n+ * @version $Revision: 1.12 $ $Date: 2000/12/27 04:50:16 $\n  */\n \n public class Action {\n@@ -173,6 +173,14 @@\n       \"org.apache.struts.action.LOCALE\";\n \n \n+    /**\n+     * The request attribute key under which our ActionMapping instance\n+     * is passed.\n+     */\n+    public static final String MAPPING_KEY =\n+        \"org.apache.struts.action.mapping.instance\";\n+\n+\n     /**\n      * The context attributes key under which our ActionMappings collection\n      * are normally stored, unless overridden when initializing our\n@@ -190,6 +198,14 @@\n       \"org.apache.struts.action.MESSAGE\";\n \n \n+    /**\n+     * The request attributes key under which our multipart class is stored.\n+     */\n+    public static final String MULTIPART_KEY =\n+        \"org.apache.struts.action.mapping.multipartclass\";\n+\n+\n+\n     // ----------------------------------------------------- Instance Variables\n \n ",
                "deletions": 4
            },
            {
                "sha": "d448985ebf2ffde92ce239f9a5a9ab102795cb72",
                "filename": "src/share/org/apache/struts/action/ActionServlet.java",
                "blob_url": "https://github.com/apache/struts1/blob/ceb72d0a53d8978ba324188850e718e2cad2fd57/src/share/org/apache/struts/action/ActionServlet.java",
                "raw_url": "https://github.com/apache/struts1/raw/ceb72d0a53d8978ba324188850e718e2cad2fd57/src/share/org/apache/struts/action/ActionServlet.java",
                "status": "modified",
                "changes": 15,
                "additions": 8,
                "contents_url": "https://api.github.com/repos/apache/struts1/contents/src/share/org/apache/struts/action/ActionServlet.java?ref=ceb72d0a53d8978ba324188850e718e2cad2fd57",
                "patch": "@@ -1,7 +1,7 @@\n /*\n- * $Header: /home/cvs/jakarta-struts/src/share/org/apache/struts/action/ActionServlet.java,v 1.44 2000/12/27 02:29:25 craigmcc Exp $\n- * $Revision: 1.44 $\n- * $Date: 2000/12/27 02:29:25 $\n+ * $Header: /home/cvs/jakarta-struts/src/share/org/apache/struts/action/ActionServlet.java,v 1.45 2000/12/27 04:50:16 craigmcc Exp $\n+ * $Revision: 1.45 $\n+ * $Date: 2000/12/27 04:50:16 $\n  *\n  * ====================================================================\n  *\n@@ -212,7 +212,7 @@\n  * </ul>\n  *\n  * @author Craig R. McClanahan\n- * @version $Revision: 1.44 $ $Date: 2000/12/27 02:29:25 $\n+ * @version $Revision: 1.45 $ $Date: 2000/12/27 04:50:16 $\n  */\n \n public class ActionServlet\n@@ -1707,11 +1707,12 @@ protected void processPopulate(ActionForm formInstance,\n         //place the mapping's multipart request handler class\n         //into the request to be read by the BeanUtils.populate\n         //method in the event of a multipart request\n-        request.setAttribute(\"org.apache.struts.action.mapping.multipartclass\", \n+        if (mapping.getMultipartClass() != null)\n+            request.setAttribute(Action.MULTIPART_KEY,\n                                 mapping.getMultipartClass());\n         //also pass the mapping through the request\n-        request.setAttribute(\"org.apache.struts.action.mapping.instance\",\n-                                mapping);\n+        request.setAttribute(Action.MAPPING_KEY,\n+                             mapping);\n         BeanUtils.populate(formInstance, mapping.getPrefix(),\n                            mapping.getSuffix(), request);\n ",
                "deletions": 7
            },
            {
                "sha": "b1b881727d04688414176385429179886b9a91b6",
                "filename": "src/share/org/apache/struts/util/BeanUtils.java",
                "blob_url": "https://github.com/apache/struts1/blob/ceb72d0a53d8978ba324188850e718e2cad2fd57/src/share/org/apache/struts/util/BeanUtils.java",
                "raw_url": "https://github.com/apache/struts1/raw/ceb72d0a53d8978ba324188850e718e2cad2fd57/src/share/org/apache/struts/util/BeanUtils.java",
                "status": "modified",
                "changes": 18,
                "additions": 9,
                "contents_url": "https://api.github.com/repos/apache/struts1/contents/src/share/org/apache/struts/util/BeanUtils.java?ref=ceb72d0a53d8978ba324188850e718e2cad2fd57",
                "patch": "@@ -1,7 +1,7 @@\n /*\n- * $Header: /home/cvs/jakarta-struts/src/share/org/apache/struts/util/Attic/BeanUtils.java,v 1.15 2000/11/13 17:31:05 mschachter Exp $\n- * $Revision: 1.15 $\n- * $Date: 2000/11/13 17:31:05 $\n+ * $Header: /home/cvs/jakarta-struts/src/share/org/apache/struts/util/Attic/BeanUtils.java,v 1.16 2000/12/27 04:50:17 craigmcc Exp $\n+ * $Revision: 1.16 $\n+ * $Date: 2000/12/27 04:50:17 $\n  *\n  * ====================================================================\n  *\n@@ -76,7 +76,7 @@\n import javax.servlet.ServletException;\n import javax.servlet.http.HttpServletRequest;\n import javax.servlet.jsp.PageContext;\n-\n+import org.apache.struts.action.Action;\n import org.apache.struts.action.ActionForm;\n import org.apache.struts.action.ActionServlet;\n import org.apache.struts.action.ActionMapping;\n@@ -90,7 +90,7 @@\n  * @author Craig R. McClanahan\n  * @author Ralph Schaer\n  * @author Chris Audley\n- * @version $Revision: 1.15 $ $Date: 2000/11/13 17:31:05 $\n+ * @version $Revision: 1.16 $ $Date: 2000/12/27 04:50:17 $\n  */\n \n public final class BeanUtils {\n@@ -651,9 +651,9 @@ public static void populate(Object bean, String prefix, String suffix,\n                 \"\\\"\" + bean.getClass().getName() + \"\\\"\");\n             }\n             String multipartClass = (String)\n-            request.getAttribute(\"org.apache.struts.action.mapping.multipartclass\");\n+                request.getAttribute(Action.MULTIPART_KEY);\n \n-            request.removeAttribute(\"org.apache.struts.action.mapping.multipartclass\");\n+            request.removeAttribute(Action.MULTIPART_KEY);\n \n             if (multipartClass != null) {\n                 //try to initialize the mapping specific request handler\n@@ -711,8 +711,8 @@ public static void populate(Object bean, String prefix, String suffix,\n             //set servlet and mapping info\n             multipart.setServlet(servlet);\n             multipart.setMapping((ActionMapping)\n-            request.getAttribute(\"org.apache.struts.action.mapping.instance\"));\n-            request.removeAttribute(\"org.apache.struts.action.mapping.instance\");\n+                                 request.getAttribute(Action.MAPPING_KEY));\n+            request.removeAttribute(Action.MAPPING_KEY);\n \n             //initialize request class handler\n             multipart.handleRequest(request);",
                "deletions": 9
            }
        ]
    },
    {
        "repo": "struts1",
        "message": "Bug 32661 NPE in ModuleUtils.selectModule - patch submitted by Rich Feit\n \n\n\ngit-svn-id: https://svn.apache.org/repos/asf/struts/core/trunk@123034 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/struts1/commit/0964dabac9a3db1c3fce13f3c0a592c65a6f3854",
        "parent": "https://github.com/apache/struts1/commit/ef9f7b3d58f68a6b941d6483e062be60f83423c5",
        "bug_id": "struts1_16",
        "file": [
            {
                "sha": "90e52b373120ec38bd90ab94164dae582a4deee1",
                "filename": "src/share/org/apache/struts/util/ModuleUtils.java",
                "blob_url": "https://github.com/apache/struts1/blob/0964dabac9a3db1c3fce13f3c0a592c65a6f3854/src/share/org/apache/struts/util/ModuleUtils.java",
                "raw_url": "https://github.com/apache/struts1/raw/0964dabac9a3db1c3fce13f3c0a592c65a6f3854/src/share/org/apache/struts/util/ModuleUtils.java",
                "status": "modified",
                "changes": 23,
                "additions": 11,
                "contents_url": "https://api.github.com/repos/apache/struts1/contents/src/share/org/apache/struts/util/ModuleUtils.java?ref=0964dabac9a3db1c3fce13f3c0a592c65a6f3854",
                "patch": "@@ -241,20 +241,19 @@ public void selectModule(\n \n         if (config != null) {\n             request.setAttribute(Globals.MODULE_KEY, config);\n+            MessageResourcesConfig[] mrConfig = config.findMessageResourcesConfigs();\n+            for(int i = 0; i < mrConfig.length; i++) {\n+                String key = mrConfig[i].getKey();\n+                MessageResources resources =\n+                    (MessageResources) context.getAttribute(key + prefix);\n+                if (resources != null) {\n+                    request.setAttribute(key, resources);\n+                } else {\n+                    request.removeAttribute(key);\n+                }    \n+            }\n         } else {\n             request.removeAttribute(Globals.MODULE_KEY);\n         }\n-\n-        MessageResourcesConfig[] mrConfig = config.findMessageResourcesConfigs();\n-        for(int i = 0; i < mrConfig.length; i++) {\n-          String key = mrConfig[i].getKey();\n-          MessageResources resources =\n-            (MessageResources) context.getAttribute(key + prefix);\n-          if (resources != null) {\n-              request.setAttribute(key, resources);\n-          } else {\n-              request.removeAttribute(key);\n-          }\n-        }\n     }\n }",
                "deletions": 12
            }
        ]
    },
    {
        "repo": "struts1",
        "message": "Modify the database load/unload process so that it will gracefully fail\n(instead of throwing NullPointerException) when run in a container\nenvironment were ServletContext.getRealPath() returns a null.  For example,\nthis will occur in a container that runs a webapp out of a WAR directly,\ninstead of unpacking to a filesystem.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/struts/trunk@48092 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/struts1/commit/d04d513c1d9d573261d8e71ed767427584a84bc8",
        "parent": "https://github.com/apache/struts1/commit/239429fb5046a2c5790611fed2a6a7a326b2b56a",
        "bug_id": "struts1_17",
        "file": [
            {
                "sha": "daa9a4c2b62ddb4e9911ff279edc31b93fca1a47",
                "filename": "src/example/org/apache/struts/example/DatabaseServlet.java",
                "blob_url": "https://github.com/apache/struts1/blob/d04d513c1d9d573261d8e71ed767427584a84bc8/src/example/org/apache/struts/example/DatabaseServlet.java",
                "raw_url": "https://github.com/apache/struts1/raw/d04d513c1d9d573261d8e71ed767427584a84bc8/src/example/org/apache/struts/example/DatabaseServlet.java",
                "status": "modified",
                "changes": 70,
                "additions": 33,
                "contents_url": "https://api.github.com/repos/apache/struts1/contents/src/example/org/apache/struts/example/DatabaseServlet.java?ref=d04d513c1d9d573261d8e71ed767427584a84bc8",
                "patch": "@@ -1,7 +1,7 @@\n /*\n- * $Header: /home/cvs/jakarta-struts/src/example/org/apache/struts/example/Attic/DatabaseServlet.java,v 1.4 2000/10/15 03:34:51 craigmcc Exp $\n- * $Revision: 1.4 $\n- * $Date: 2000/10/15 03:34:51 $\n+ * $Header: /home/cvs/jakarta-struts/src/example/org/apache/struts/example/Attic/DatabaseServlet.java,v 1.5 2001/02/02 18:27:10 craigmcc Exp $\n+ * $Revision: 1.5 $\n+ * $Date: 2001/02/02 18:27:10 $\n  *\n  * ====================================================================\n  *\n@@ -65,11 +65,11 @@\n \n import java.io.BufferedInputStream;\n import java.io.BufferedWriter;\n-import java.io.FileInputStream;\n-import java.io.FileNotFoundException;\n+import java.io.InputStream;\n import java.io.IOException;\n import java.io.FileWriter;\n import java.io.PrintWriter;\n+import java.net.MalformedURLException;\n import java.util.Enumeration;\n import java.util.Hashtable;\n import java.util.MissingResourceException;\n@@ -90,7 +90,7 @@\n  * Demonstration Application.\n  *\n  * @author Craig R. McClanahan\n- * @version $Revision: 1.4 $ $Date: 2000/10/15 03:34:51 $\n+ * @version $Revision: 1.5 $ $Date: 2001/02/02 18:27:10 $\n  */\n \n public final class DatabaseServlet\n@@ -114,9 +114,9 @@\n \n \n     /**\n-     * The pathname of our persistent database storage file.\n+     * The resource path of our persistent database storage file.\n      */\n-    private String pathname = null;\n+    private String pathname = \"/WEB-INF/database.xml\";\n \n \n     // ---------------------------------------------------- HttpServlet Methods\n@@ -131,7 +131,7 @@ public void destroy() {\n \tif (debug >= 1)\n \t    log(\"Finalizing database servlet\");\n \n-\t// Unload our database to persistent storage\n+\t// Unload our database to persistent storage if possible\n \ttry {\n \t    unload();\n \t} catch (Exception e) {\n@@ -151,8 +151,8 @@ public void destroy() {\n      * <ul>\n      * <li><strong>debug</strong> - The debugging detail level for this\n      *     servlet, which controls how much information is logged.  [0]\n-     * <li><strong>pathname</strong> - Pathname to our persistent storage\n-     *     [getRealPath(\"/\") + \"/WEB-INF/database.xml\"]\n+     * <li><strong>pathname</strong> - Resource pathname to our persistent\n+     *     storage [\"/WEB-INF/database.xml\"]\n      * </ul>\n      *\n      * @exception ServletException if we cannot configure ourselves correctly\n@@ -169,6 +169,9 @@ public void init() throws ServletException {\n \t}\n \tif (debug >= 1)\n \t    log(\"Initializing database servlet\");\n+        value = getServletConfig().getInitParameter(\"pathname\");\n+        if (value != null)\n+            pathname = value;\n \n \t// Load our database from persistent storage\n \ttry {\n@@ -254,15 +257,13 @@ private synchronized void load() throws Exception {\n \n \t// Acquire an input stream to our database file\n \tif (debug >= 1)\n-\t    log(\"Loading database from '\" + pathname() + \"'\");\n-\tFileInputStream fis = null;\n-\ttry {\n-\t    fis = new FileInputStream(pathname());\n-\t} catch (FileNotFoundException e) {\n-\t    log(\"No persistent database to be loaded\");\n-\t    return;\n-\t}\n-\tBufferedInputStream bis = new BufferedInputStream(fis);\n+\t    log(\"Loading database from '\" + pathname + \"'\");\n+        InputStream is = getServletContext().getResourceAsStream(pathname);\n+        if (is == null) {\n+            log(\"No such resource available - loading empty database\");\n+            return;\n+        }\n+\tBufferedInputStream bis = new BufferedInputStream(is);\n \n \t// Construct a digester to use for parsing\n \tDigester digester = new Digester();\n@@ -286,30 +287,25 @@ private synchronized void load() throws Exception {\n \n \n     /**\n-     * Return the pathname of our persistent storage file.\n-     */\n-    private String pathname() {\n-\n-\tif (this.pathname != null)\n-\t    return (this.pathname);\n-\telse\n-\t    return (getServletContext().getRealPath(\"/\") +\n-\t            \"/WEB-INF/database.xml\");\n-\n-    }\n-\n-\n-    /**\n-     * Unload our database to its persistent storage version.\n+     * Unload our database to its persistent storage version, if possible.\n+     * If we are running directly out of a WAR file, saving cannot occur.\n      *\n      * @exception Exception if any problem occurs while unloading\n      */\n     private synchronized void unload() throws Exception {\n \n+        // Calculate the file pathname to our storage file (if any)\n+        String pathname =\n+            getServletContext().getRealPath(this.pathname);\n+        if (pathname != null) {\n+            log(\"Cannot unload database to resource path \" + this.pathname);\n+            return;\n+        }\n+\n \t// Create a writer for our database\n \tif (debug >= 1)\n-\t    log(\"Unloading database to '\" + pathname() + \"'\");\n-\tFileWriter fw = new FileWriter(pathname());\n+\t    log(\"Unloading database to '\" + pathname + \"'\");\n+\tFileWriter fw = new FileWriter(pathname);\n \tBufferedWriter bw = new BufferedWriter(fw);\n \tPrintWriter writer = new PrintWriter(bw);\n \twriter.println(\"<database>\");",
                "deletions": 37
            }
        ]
    },
    {
        "repo": "struts1",
        "message": "Change the signature of the call to get the ModuleConfig to use the ServletContext.  \nThis was raising a NPE when not dispatched through the request processor first. \nThis also fixes the \"Log on\" link in the Faces Mailreader (example1).\nIssue: STR-2509\nSubmitted by: Gary VanMatre\n\ngit-svn-id: https://svn.apache.org/repos/asf/struts/action/trunk@399989 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/struts1/commit/94120fa090fe0a7b4c31571a37576d287f9e2975",
        "parent": "https://github.com/apache/struts1/commit/c87ae3db59a7225a4e8d3f3602c561d25f6a2dff",
        "bug_id": "struts1_18",
        "file": [
            {
                "sha": "c0cee1a0818b431a0a6c1a5185694a98e4981b2e",
                "filename": "faces/src/main/java/org/apache/struts/faces/taglib/JavascriptValidatorTag.java",
                "blob_url": "https://github.com/apache/struts1/blob/94120fa090fe0a7b4c31571a37576d287f9e2975/faces/src/main/java/org/apache/struts/faces/taglib/JavascriptValidatorTag.java",
                "raw_url": "https://github.com/apache/struts1/raw/94120fa090fe0a7b4c31571a37576d287f9e2975/faces/src/main/java/org/apache/struts/faces/taglib/JavascriptValidatorTag.java",
                "status": "modified",
                "changes": 5,
                "additions": 4,
                "contents_url": "https://api.github.com/repos/apache/struts1/contents/faces/src/main/java/org/apache/struts/faces/taglib/JavascriptValidatorTag.java?ref=94120fa090fe0a7b4c31571a37576d287f9e2975",
                "patch": "@@ -34,6 +34,7 @@\n import javax.servlet.jsp.PageContext;\n import javax.servlet.jsp.tagext.BodyTagSupport;\n import javax.servlet.jsp.tagext.Tag;\n+import javax.servlet.ServletContext;\n \n import org.apache.commons.validator.Field;\n import org.apache.commons.validator.Form;\n@@ -270,7 +271,9 @@ public int doStartTag() throws JspException {\n         StringBuffer results = new StringBuffer();\n \n         HttpServletRequest request = (HttpServletRequest)pageContext.getRequest();\n-        ModuleConfig config = ModuleUtils.getInstance().getModuleConfig(request);\n+        ServletContext servletContext = pageContext.getServletContext();\n+        ModuleConfig config = ModuleUtils.getInstance().getModuleConfig(request, servletContext);\n+\n         ValidatorResources resources =\n             (ValidatorResources) pageContext.getAttribute(\n                 ValidatorPlugIn.VALIDATOR_KEY + config.getPrefix(),",
                "deletions": 1
            }
        ]
    },
    {
        "repo": "struts1",
        "message": "Improving the javadoc to explain a NPE will be thrown when the module\ncannot be found\nSTR-2805\n---This line, and those below, will be ignored--\n\nM    taglib/src/main/java/org/apache/struts/taglib/TagUtils.java\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/struts/action/trunk@397756 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/struts1/commit/7fff60248f25251ced417307cd519efef2ebdb69",
        "parent": "https://github.com/apache/struts1/commit/37cfa6f8f69547c5339fafaffc26d73f6035d63b",
        "bug_id": "struts1_19",
        "file": [
            {
                "sha": "d279cc3ccf13a8910c6562af5a366158771cabf9",
                "filename": "taglib/src/main/java/org/apache/struts/taglib/TagUtils.java",
                "blob_url": "https://github.com/apache/struts1/blob/7fff60248f25251ced417307cd519efef2ebdb69/taglib/src/main/java/org/apache/struts/taglib/TagUtils.java",
                "raw_url": "https://github.com/apache/struts1/raw/7fff60248f25251ced417307cd519efef2ebdb69/taglib/src/main/java/org/apache/struts/taglib/TagUtils.java",
                "status": "modified",
                "changes": 3,
                "additions": 2,
                "contents_url": "https://api.github.com/repos/apache/struts1/contents/taglib/src/main/java/org/apache/struts/taglib/TagUtils.java?ref=7fff60248f25251ced417307cd519efef2ebdb69",
                "patch": "@@ -714,11 +714,12 @@ public ModuleConfig getModuleConfig(PageContext pageContext) {\n \n     /**\n      * Return the specified ModuleConfig object for the given prefix if it\n-     * exists, null if otherwise.\n+     * exists, otherwise a NullPointerException will be thrown.\n      *\n      * @param module      The module prefix\n      * @param pageContext The page context.\n      * @return the ModuleConfig object\n+     * @throws NullPointerException Thrown when module cannot be found\n      */\n     public ModuleConfig getModuleConfig(String module, PageContext pageContext) {\n         ModuleConfig config =",
                "deletions": 1
            }
        ]
    },
    {
        "repo": "struts1",
        "message": "Add error message for unhandled exceptions that was causing NPE in the\nprocessException() method.\n\nPR: Bugzilla #10149\nSubmitted by:\tScott Carlson <ScottCarlson at yahoo.com>\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/struts/trunk@49127 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/struts1/commit/1f05e13128c19261144c1aeb7c57b53c1854e0e6",
        "parent": "https://github.com/apache/struts1/commit/596a25567b2658e0bffbc3397de7d9043b696735",
        "bug_id": "struts1_20",
        "file": [
            {
                "sha": "5000c03daf58dd2464a5256ad738a724f99c0c29",
                "filename": "src/share/org/apache/struts/action/ActionResources.properties",
                "blob_url": "https://github.com/apache/struts1/blob/1f05e13128c19261144c1aeb7c57b53c1854e0e6/src/share/org/apache/struts/action/ActionResources.properties",
                "raw_url": "https://github.com/apache/struts1/raw/1f05e13128c19261144c1aeb7c57b53c1854e0e6/src/share/org/apache/struts/action/ActionResources.properties",
                "status": "modified",
                "changes": 1,
                "additions": 1,
                "contents_url": "https://api.github.com/repos/apache/struts1/contents/src/share/org/apache/struts/action/ActionResources.properties?ref=1f05e13128c19261144c1aeb7c57b53c1854e0e6",
                "patch": "@@ -21,3 +21,4 @@ processPath=No process path found in request URI {0}\n reloading=Reloading from configuration files\n requestDispatcher=Cannot get request dispatcher for path {0}\n sessionCreate=No user session could be created\n+unhandledException=Unhandled Exception thrown: {0}",
                "deletions": 0
            }
        ]
    },
    {
        "repo": "struts1",
        "message": "Properly deal with null values in either the labels or values array, by\nconverting them to zero-length strings instead of throwing NPEs.\n\nPR: Bugzilla #6439\nSubmitted by:\tWilhelm Fitzpatrick <rafial at well.com>\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/struts/trunk@48946 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/struts1/commit/8c6ba1e7c10e199dc3f227576217cef9b35d103f",
        "parent": "https://github.com/apache/struts1/commit/74eba0ee7ae8914ccec79fd9843c17302e26c91c",
        "bug_id": "struts1_21",
        "file": [
            {
                "sha": "1d23a2db645be6343b765dad85409a872e43a21b",
                "filename": "src/share/org/apache/struts/taglib/html/OptionsTag.java",
                "blob_url": "https://github.com/apache/struts1/blob/8c6ba1e7c10e199dc3f227576217cef9b35d103f/src/share/org/apache/struts/taglib/html/OptionsTag.java",
                "raw_url": "https://github.com/apache/struts1/raw/8c6ba1e7c10e199dc3f227576217cef9b35d103f/src/share/org/apache/struts/taglib/html/OptionsTag.java",
                "status": "modified",
                "changes": 15,
                "additions": 12,
                "contents_url": "https://api.github.com/repos/apache/struts1/contents/src/share/org/apache/struts/taglib/html/OptionsTag.java?ref=8c6ba1e7c10e199dc3f227576217cef9b35d103f",
                "patch": "@@ -290,10 +290,19 @@ public int doEndTag() throws JspException {\n \n               // Render the options tags for each element of the values coll.\n               while (valuesIterator.hasNext()) {\n-                  String value = valuesIterator.next().toString();\n+                  Object valueObject = valuesIterator.next();\n+                  if (valueObject == null) {\n+                      valueObject = \"\";\n+                  }\n+                  String value = valueObject.toString();\n                   String label = value;\n-                  if (labelsIterator.hasNext())\n-                      label = labelsIterator.next().toString();\n+                  if (labelsIterator.hasNext()) {\n+                      Object labelObject = labelsIterator.next();\n+                      if (labelObject == null) {\n+                          labelObject = \"\";\n+                      }\n+                      label = labelObject.toString();\n+                  }\n                   addOption(sb, value, label,\n                             selectTag.isMatched(value));\n               }",
                "deletions": 3
            }
        ]
    },
    {
        "repo": "struts1",
        "message": "Clean up remaining rendering issues and correct logic errors in the two\nsample applications.  Everything now works on Tomcat 5.0.28, JSF RI 1.1_01.\nDetails of changes:\n\ncore-library:\n------------\n\n* JavascriptValidatorTag.java - Update behavior to match the Struts 1.2.4\n  mechanisms.\n\n* WriteRenderer.java - Do not emit a <span> around the text if the component\n  has an automatically assigned id (\"_idXXX\").\n\n* ErrorsRenderer.java - Change behavior when no \"property\" attribute is\n  specified to match the corresponding <html:errors/> tag:  render *all*\n  messages instead of just global ones.\n\n* FormRenderer.java - Create a \"name\" attribute containing the name of the\n  form bean, since this is what the Javascript implementing client side\n  validations expects.\n\n* struts-faces.xml - Update tag library description for \"errors\" tag\n  to match the revised behavior.\n\nexample1-webapp:\n---------------\n\n* SaveRegistration.java - If cancel key was pressed, go back to the\n  welcome screen instead of the main menu.  This avoids an NPE if\n  you followed the \"register\" link off the welcome screen.\n\n* subscription.jsp - Add onclick handler on the cancel button to\n  turn off the client side validation as well.\n\n* registration.jsp - Add onclick handler on the cancel button to\n  turn off the client side validation as well.\n\n* struts-config.xml - Add forward definition for new cancel behavior.\n\n* staticJavascript.jsp - Use the struts-faces version of the javascript tag.\n\nexample2-webapp:\n---------------\n\n* Same changes as for example1-webapp.\n\n* Fix the forwarding from registration.jsp (the delete, edit, and create\n  buttons) to correctly go to the subscription tile.\n\nsysclient-app:\n-------------\n\n* Update test cases for new behavior of errors and form renderers.\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/struts/trunk@55303 13f79535-47bb-0310-9956-ffa450edef68",
        "commit": "https://github.com/apache/struts1/commit/1c34c59b4054cfb359c0dbdd966b0625b3519bec",
        "parent": "https://github.com/apache/struts1/commit/e81adf0c1fa4349b0fa9e50c6f24d3913345f847",
        "bug_id": "struts1_22",
        "file": [
            {
                "sha": "0f71f87c6b085f355ac9444261eb056b3c8bab91",
                "filename": "struts-faces/core-library/src/conf/struts-faces.xml",
                "blob_url": "https://github.com/apache/struts1/blob/1c34c59b4054cfb359c0dbdd966b0625b3519bec/struts-faces/core-library/src/conf/struts-faces.xml",
                "raw_url": "https://github.com/apache/struts1/raw/1c34c59b4054cfb359c0dbdd966b0625b3519bec/struts-faces/core-library/src/conf/struts-faces.xml",
                "status": "modified",
                "changes": 2,
                "additions": 1,
                "contents_url": "https://api.github.com/repos/apache/struts1/contents/struts-faces/core-library/src/conf/struts-faces.xml?ref=1c34c59b4054cfb359c0dbdd966b0625b3519bec",
                "patch": "@@ -387,7 +387,7 @@\n       <rtexprvalue>false</rtexprvalue>\n       <description>\n         Component of the component for which to render errors.  If not\n-        specified, only global messages are rendered.\n+        specified, all messages (regardless of property) are displayed.\n       </description>\n     </attribute>\n ",
                "deletions": 1
            },
            {
                "sha": "6dda3c18a7c5166c66dae0c94a23dc8ca78feb1e",
                "filename": "struts-faces/core-library/src/java/org/apache/struts/faces/renderer/ErrorsRenderer.java",
                "blob_url": "https://github.com/apache/struts1/blob/1c34c59b4054cfb359c0dbdd966b0625b3519bec/struts-faces/core-library/src/java/org/apache/struts/faces/renderer/ErrorsRenderer.java",
                "raw_url": "https://github.com/apache/struts1/raw/1c34c59b4054cfb359c0dbdd966b0625b3519bec/struts-faces/core-library/src/java/org/apache/struts/faces/renderer/ErrorsRenderer.java",
                "status": "modified",
                "changes": 27,
                "additions": 25,
                "contents_url": "https://api.github.com/repos/apache/struts1/contents/struts-faces/core-library/src/java/org/apache/struts/faces/renderer/ErrorsRenderer.java?ref=1c34c59b4054cfb359c0dbdd966b0625b3519bec",
                "patch": "@@ -84,6 +84,10 @@ public void encodeEnd(FacesContext context, UIComponent component)\n             throw new NullPointerException();\n         }\n \n+        if (log.isDebugEnabled()) {\n+            log.debug(\"encodeEnd() started\");\n+        }\n+\n         // Look up availability of our predefined resource keys\n         MessageResources resources = resources(context, component);\n \tif (Beans.isDesignTime() && (resources == null)) {\n@@ -112,6 +116,9 @@ public void encodeEnd(FacesContext context, UIComponent component)\n         Iterator messages = context.getMessages(property);\n         while (messages.hasNext()) {\n             FacesMessage message = (FacesMessage) messages.next();\n+            if (log.isTraceEnabled()) {\n+                log.trace(\"Processing FacesMessage: \" + message.getSummary());\n+            }\n             if (!headerDone) {\n                 if (headerPresent) {\n                     writer.write\n@@ -133,10 +140,22 @@ public void encodeEnd(FacesContext context, UIComponent component)\n             context.getExternalContext().getRequestMap().get\n             (Globals.ERROR_KEY);\n         if (errors != null) {\n-            Iterator reports = errors.get\n-                ((property == null) ? ActionErrors.GLOBAL_ERROR : property);\n+            if (log.isTraceEnabled()) {\n+                log.trace(\"Processing Struts messages for property '\" +\n+                          property + \"'\");\n+            }\n+            Iterator reports = null;\n+            if (property == null) {\n+                reports = errors.get();\n+            } else {\n+                reports = errors.get(property);\n+            }\n             while (reports.hasNext()) {\n                 ActionMessage report = (ActionMessage) reports.next();\n+                if (log.isTraceEnabled()) {\n+                    log.trace(\"Processing Struts message key='\" +\n+                              report.getKey() + \"'\");\n+                }\n                 if (!headerDone) {\n                     writer = context.getResponseWriter();\n                     if (headerPresent) {\n@@ -166,6 +185,10 @@ public void encodeEnd(FacesContext context, UIComponent component)\n             writer.endElement(\"span\");\n         }\n \n+        if (log.isDebugEnabled()) {\n+            log.debug(\"encodeEnd() finished\");\n+        }\n+\n     }\n \n ",
                "deletions": 2
            },
            {
                "sha": "36bb14f6d09855a545d1c8d229fc1374f4a3f5db",
                "filename": "struts-faces/core-library/src/java/org/apache/struts/faces/renderer/FormRenderer.java",
                "blob_url": "https://github.com/apache/struts1/blob/1c34c59b4054cfb359c0dbdd966b0625b3519bec/struts-faces/core-library/src/java/org/apache/struts/faces/renderer/FormRenderer.java",
                "raw_url": "https://github.com/apache/struts1/raw/1c34c59b4054cfb359c0dbdd966b0625b3519bec/struts-faces/core-library/src/java/org/apache/struts/faces/renderer/FormRenderer.java",
                "status": "modified",
                "changes": 3,
                "additions": 3,
                "contents_url": "https://api.github.com/repos/apache/struts1/contents/struts-faces/core-library/src/java/org/apache/struts/faces/renderer/FormRenderer.java?ref=1c34c59b4054cfb359c0dbdd966b0625b3519bec",
                "patch": "@@ -128,6 +128,9 @@ public void encodeBegin(FacesContext context, UIComponent component)\n         ResponseWriter writer = context.getResponseWriter();\n         writer.startElement(\"form\", form);\n         writer.writeAttribute(\"id\", clientId, \"clientId\");\n+        if (beanName != null) {\n+            writer.writeAttribute(\"name\", beanName, null);\n+        }\n         writer.writeAttribute(\"action\", action(context, component), \"action\");\n         if (styleClass != null) {\n             writer.writeAttribute(\"class\", styleClass, \"styleClass\");",
                "deletions": 0
            },
            {
                "sha": "46e3c344454463bf6ba2d305f65760c976b409ce",
                "filename": "struts-faces/core-library/src/java/org/apache/struts/faces/renderer/WriteRenderer.java",
                "blob_url": "https://github.com/apache/struts1/blob/1c34c59b4054cfb359c0dbdd966b0625b3519bec/struts-faces/core-library/src/java/org/apache/struts/faces/renderer/WriteRenderer.java",
                "raw_url": "https://github.com/apache/struts1/raw/1c34c59b4054cfb359c0dbdd966b0625b3519bec/struts-faces/core-library/src/java/org/apache/struts/faces/renderer/WriteRenderer.java",
                "status": "modified",
                "changes": 8,
                "additions": 8,
                "contents_url": "https://api.github.com/repos/apache/struts1/contents/struts-faces/core-library/src/java/org/apache/struts/faces/renderer/WriteRenderer.java?ref=1c34c59b4054cfb359c0dbdd966b0625b3519bec",
                "patch": "@@ -19,6 +19,7 @@\n \n import java.io.IOException;\n import javax.faces.component.UIComponent;\n+import javax.faces.component.UIViewRoot;\n import javax.faces.component.ValueHolder;\n import javax.faces.context.FacesContext;\n import javax.faces.context.ResponseWriter;\n@@ -68,10 +69,17 @@ public void encodeEnd(FacesContext context, UIComponent component)\n \n         ResponseWriter writer = context.getResponseWriter();\n         String id = component.getId();\n+        if ((id != null) && id.startsWith(UIViewRoot.UNIQUE_ID_PREFIX)) {\n+            id = null;\n+        }\n         String style =\n             (String) component.getAttributes().get(\"style\");\n         String styleClass =\n             (String) component.getAttributes().get(\"styleClass\");\n+        if (log.isTraceEnabled()) {\n+            log.trace(\"id='\" + id + \"', style='\" + style + \"', styleClass='\" +\n+                      styleClass + \"'\");\n+        }\n         if ((id != null) || (style != null) || (styleClass != null)) {\n             writer.startElement(\"span\", component);\n             if (id != null) {",
                "deletions": 0
            },
            {
                "sha": "3dbbf6f441f30b6daf21a94e012a857507802c8c",
                "filename": "struts-faces/core-library/src/java/org/apache/struts/faces/taglib/JavascriptValidatorTag.java",
                "blob_url": "https://github.com/apache/struts1/blob/1c34c59b4054cfb359c0dbdd966b0625b3519bec/struts-faces/core-library/src/java/org/apache/struts/faces/taglib/JavascriptValidatorTag.java",
                "raw_url": "https://github.com/apache/struts1/raw/1c34c59b4054cfb359c0dbdd966b0625b3519bec/struts-faces/core-library/src/java/org/apache/struts/faces/taglib/JavascriptValidatorTag.java",
                "status": "modified",
                "changes": 728,
                "additions": 434,
                "contents_url": "https://api.github.com/repos/apache/struts1/contents/struts-faces/core-library/src/java/org/apache/struts/faces/taglib/JavascriptValidatorTag.java?ref=1c34c59b4054cfb359c0dbdd966b0625b3519bec",
                "patch": "@@ -1,5 +1,7 @@\n /*\n- * Copyright 1999-2004 The Apache Software Foundation.\n+ * $Id$ \n+ *\n+ * Copyright 2001-2004 The Apache Software Foundation.\n  * \n  * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n@@ -17,17 +19,20 @@\n package org.apache.struts.faces.taglib;\n \n import java.io.IOException;\n+\n import java.util.ArrayList;\n import java.util.Collections;\n import java.util.Comparator;\n import java.util.Iterator;\n import java.util.List;\n import java.util.Locale;\n import java.util.Map;\n+import java.util.StringTokenizer;\n \n import javax.faces.component.UIComponent;\n import javax.faces.context.FacesContext;\n import javax.faces.webapp.UIComponentTag;\n+\n import javax.servlet.jsp.JspException;\n import javax.servlet.jsp.JspWriter;\n import javax.servlet.jsp.PageContext;\n@@ -38,28 +43,70 @@\n import org.apache.commons.validator.Form;\n import org.apache.commons.validator.ValidatorAction;\n import org.apache.commons.validator.ValidatorResources;\n-import org.apache.commons.validator.ValidatorUtil;\n+import org.apache.commons.validator.util.ValidatorUtils;\n import org.apache.commons.validator.Var;\n+\n import org.apache.struts.Globals;\n+import org.apache.struts.action.ActionMapping;\n import org.apache.struts.config.ModuleConfig;\n import org.apache.struts.faces.component.FormComponent;\n+import org.apache.struts.taglib.TagUtils;\n import org.apache.struts.util.MessageResources;\n-import org.apache.struts.util.RequestUtils;\n import org.apache.struts.validator.Resources;\n import org.apache.struts.validator.ValidatorPlugIn;\n \n+\n /**\n  * Custom tag that generates JavaScript for client side validation based\n  * on the validation rules loaded by the <code>ValidatorPlugIn</code>\n- * defined in the struts-config.xml file.  This is based on the code in\n- * the corresponding class of the Struts HTML tag library, modified as needed\n- * to reflect differences in the way JavaServer Faces renders field\n- * identifiers.\n+ * defined in the struts-config.xml file.\n  *\n  * @version $Rev$ $Date$\n+ * @since Struts 1.1\n  */\n public class JavascriptValidatorTag extends BodyTagSupport {\n \n+    /**\n+     * A Comparator to use when sorting ValidatorAction objects.\n+     */\n+    private static final Comparator actionComparator = new Comparator() {\n+        public int compare(Object o1, Object o2) {\n+\n+            ValidatorAction va1 = (ValidatorAction) o1;\n+            ValidatorAction va2 = (ValidatorAction) o2;\n+\n+            if ((va1.getDepends() == null || va1.getDepends().length() == 0)\n+                && (va2.getDepends() == null || va2.getDepends().length() == 0)) {\n+                return 0;\n+\n+            } else if (\n+                (va1.getDepends() != null && va1.getDepends().length() > 0)\n+                    && (va2.getDepends() == null || va2.getDepends().length() == 0)) {\n+                return 1;\n+\n+            } else if (\n+                (va1.getDepends() == null || va1.getDepends().length() == 0)\n+                    && (va2.getDepends() != null && va2.getDepends().length() > 0)) {\n+                return -1;\n+\n+            } else {\n+                return va1.getDependencyList().size() - va2.getDependencyList().size();\n+            }\n+        }\n+    };\n+\n+    /**\n+     * The start of the HTML comment hiding JavaScript from old browsers.\n+     * @since Struts 1.2\n+     */\n+    protected static final String HTML_BEGIN_COMMENT = \"\\n<!-- Begin \\n\";\n+\n+    /**\n+     * The end of the HTML comment hiding JavaScript from old browsers.\n+     * @since Struts 1.2\n+     */\n+    protected static final String HTML_END_COMMENT = \"//End --> \\n\";\n+\n     // ----------------------------------------------------------- Properties\n \n     /**\n@@ -79,6 +126,15 @@\n      * &lt;script&gt; &lt;/script&gt; around the javascript.\n      */\n     protected String formName = null;\n+    \n+    /**\n+     * formName is used for both Javascript and non-javascript validations.\n+     * For the javascript validations, there is the possibility that we will\n+     * be rewriting the formName (if it is a ValidatorActionForm instead of just\n+     * a ValidatorForm) so we need another variable to hold the formName just for\n+     * javascript usage.\n+     */\n+    protected String jsFormName = null;\n \n     /**\n      * The line ending string.\n@@ -97,6 +153,13 @@\n      */\n     protected String methodName = null;\n \n+    /**\n+     * Include language attribute in the &lt;script&gt; element.  This property is\n+     * ignored in XHTML mode.\n+     * @since Struts 1.2\n+     */\n+    protected boolean scriptLanguage = true;\n+\n     /**\n      * The static JavaScript methods will only be printed if this is set to \"true\".\n      */\n@@ -118,16 +181,12 @@\n      * The JavaScript methods will enclosed with html comments if this is set to \"true\".\n      */\n     protected String htmlComment = \"true\";\n-    \n+\n     /**\n      * Hide JavaScript methods in a CDATA section for XHTML when \"true\".\n      */\n     protected String cdata = \"true\";\n \n-    private String htmlBeginComment = \"\\n<!-- Begin \\n\";\n-\n-    private String htmlEndComment = \"//End --> \\n\";\n-    \n     /**\n      * Gets the key (form name) that will be used\n      * to retrieve a set of validation rules to be\n@@ -148,6 +207,18 @@ public void setFormName(String formName) {\n         this.formName = formName;\n     }\n \n+    /**\n+     * @return Returns the jsFormName.\n+     */\n+    public String getJsFormName() {\n+        return jsFormName;\n+    }\n+    /**\n+     * @param jsFormName The jsFormName to set.\n+     */\n+    public void setJsFormName(String jsFormName) {\n+        this.jsFormName = jsFormName;\n+    }\n     /**\n      * Gets the current page number of a multi-part form.\n      * Only field validations with a matching page numer\n@@ -265,242 +336,334 @@ public void setSrc(String src) {\n      * @exception JspException if a JSP exception has occurred\n      */\n     public int doStartTag() throws JspException {\n+\n+        JspWriter writer = pageContext.getOut();\n+        try {\n+            writer.print(this.renderJavascript());\n+\n+        } catch (IOException e) {\n+            throw new JspException(e.getMessage());\n+        }\n+\n+        return EVAL_BODY_TAG;\n+\n+    }\n+\n+    /**\n+     * Returns fully rendered JavaScript.\n+     * @since Struts 1.2\n+     */\n+    protected String renderJavascript() throws JspException {\n         StringBuffer results = new StringBuffer();\n \n-        ModuleConfig config = RequestUtils.getModuleConfig(pageContext);\n+        ModuleConfig config = TagUtils.getInstance().getModuleConfig(pageContext);\n         ValidatorResources resources =\n             (ValidatorResources) pageContext.getAttribute(\n                 ValidatorPlugIn.VALIDATOR_KEY + config.getPrefix(),\n                 PageContext.APPLICATION_SCOPE);\n \n-        Locale locale = RequestUtils.retrieveUserLocale(this.pageContext, null);\n+        Locale locale = TagUtils.getInstance().getUserLocale(this.pageContext, null);\n+\n+        Form form = resources.getForm(locale, formName);\n+\n+        if (\"true\".equalsIgnoreCase(dynamicJavascript) && form == null)\n+        {\n+            throw new JspException(\"No form found under '\"\n+                                   + formName\n+                                   + \"' in locale '\"\n+                                   + locale\n+                                   + \"'\");\n+        }\n \n-        Form form = resources.get(locale, formName);\n         if (form != null) {\n             if (\"true\".equalsIgnoreCase(dynamicJavascript)) {\n-                MessageResources messages =\n-                    (MessageResources) pageContext.getAttribute(\n-                        bundle + config.getPrefix(),\n-                        PageContext.APPLICATION_SCOPE);\n+                results.append(\n+                        this.createDynamicJavascript(config, resources, locale, form));\n \n-                List lActions = new ArrayList();\n-                List lActionMethods = new ArrayList();\n+            } else if (\"true\".equalsIgnoreCase(staticJavascript)) {\n+                results.append(this.renderStartElement());\n+                if (\"true\".equalsIgnoreCase(htmlComment)) {\n+                    results.append(HTML_BEGIN_COMMENT);\n+                }\n+            }\n+        }\n \n-                // Get List of actions for this Form\n-                for (Iterator i = form.getFields().iterator(); i.hasNext();) {\n-                    Field field = (Field) i.next();\n+        if (\"true\".equalsIgnoreCase(staticJavascript)) {\n+            results.append(getJavascriptStaticMethods(resources));\n+        }\n \n-                    for (Iterator x = field.getDependencies().iterator(); x.hasNext();) {\n-                        Object o = x.next();\n+        if (form != null\n+            && (\"true\".equalsIgnoreCase(dynamicJavascript)\n+                || \"true\".equalsIgnoreCase(staticJavascript))) {\n \n-                        if (o != null && !lActionMethods.contains(o)) {\n-                            lActionMethods.add(o);\n-                        }\n-                    }\n+            results.append(getJavascriptEnd());\n+        }\n \n-                }\n+        return results.toString();\n+    }\n \n-                // Create list of ValidatorActions based on lActionMethods\n-                for (Iterator i = lActionMethods.iterator(); i.hasNext();) {\n-                    String depends = (String) i.next();\n-                    ValidatorAction va = resources.getValidatorAction(depends);\n-\n-                    // throw nicer NPE for easier debugging\n-                    if (va == null) {\n-                        throw new NullPointerException(\n-                            \"Depends string \\\"\"\n-                                + depends\n-                                + \"\\\" was not found in validator-rules.xml.\");\n-                    }               \n-                    \n-                    String javascript = va.getJavascript();\n-                    if (javascript != null && javascript.length() > 0) {\n-                        lActions.add(va);\n-                    } else {\n-                        i.remove();\n-                    }\n-                }\n+    /**\n+     * Generates the dynamic JavaScript for the form.\n+     * @param config\n+     * @param resources\n+     * @param locale\n+     * @param form\n+     */\n+    private String createDynamicJavascript(\n+        ModuleConfig config,\n+        ValidatorResources resources,\n+        Locale locale,\n+        Form form) throws JspException {\n \n-                Collections.sort(lActions, new Comparator() {\n-                    public int compare(Object o1, Object o2) {\n-                        ValidatorAction va1 = (ValidatorAction) o1;\n-                        ValidatorAction va2 = (ValidatorAction) o2;\n-\n-                        if ((va1.getDepends() == null || va1.getDepends().length() == 0)\n-                            && (va2.getDepends() == null || va2.getDepends().length() == 0)) {\n-                            return 0;\n-                        } else if (\n-                            (va1.getDepends() != null && va1.getDepends().length() > 0)\n-                                && (va2.getDepends() == null || va2.getDepends().length() == 0)) {\n-                            return 1;\n-                        } else if (\n-                            (va1.getDepends() == null || va1.getDepends().length() == 0)\n-                                && (va2.getDepends() != null && va2.getDepends().length() > 0)) {\n-                            return -1;\n-                        } else {\n-                            return va1.getDependencies().size() - va2.getDependencies().size();\n-                        }\n-                    }\n-                });\n+        StringBuffer results = new StringBuffer();\n \n-                String methods = null;\n-                for (Iterator i = lActions.iterator(); i.hasNext();) {\n-                    ValidatorAction va = (ValidatorAction) i.next();\n+        MessageResources messages =\n+            (MessageResources) pageContext.getAttribute(\n+                bundle + config.getPrefix(),\n+                PageContext.APPLICATION_SCOPE);\n \n-                    if (methods == null) {\n-                        methods = va.getMethod() + \"(form)\";\n-                    } else {\n-                        methods += \" && \" + va.getMethod() + \"(form)\";\n+        List actions = this.createActionList(resources, form);\n+\n+        final String methods = this.createMethods(actions, this.stopOnError(config));\n+\n+        String formName = form.getName();\n+        jsFormName = formName;\n+                if(jsFormName.charAt(0) == '/') {\n+                    String mappingName = TagUtils.getInstance().getActionMappingName(jsFormName);\n+                    ActionMapping mapping = (ActionMapping) config.findActionConfig(mappingName);\n+                    if (mapping == null) {\n+                        JspException e = new JspException(messages.getMessage(\"formTag.mapping\", mappingName));\n+                        pageContext.setAttribute(Globals.EXCEPTION_KEY, e, PageContext.REQUEST_SCOPE);\n+                        throw e;\n                     }\n+                    jsFormName = mapping.getAttribute();\n                 }\n+        \n+        results.append(this.getJavascriptBegin(methods));\n \n-                results.append(getJavascriptBegin(methods));\n+        for (Iterator i = actions.iterator(); i.hasNext();) {\n+            ValidatorAction va = (ValidatorAction) i.next();\n+            int jscriptVar = 0;\n+            String functionName = null;\n \n-                for (Iterator i = lActions.iterator(); i.hasNext();) {\n-                    ValidatorAction va = (ValidatorAction) i.next();\n-                    String jscriptVar = null;\n-                    String functionName = null;\n \n-                    if (va.getJsFunctionName() != null && va.getJsFunctionName().length() > 0) {\n-                        functionName = va.getJsFunctionName();\n-                    } else {\n-                        functionName = va.getName();\n-                    }\n+            if (va.getJsFunctionName() != null\n+                && va.getJsFunctionName().length() > 0) {\n+                functionName = va.getJsFunctionName();\n+            } else {\n+                functionName = va.getName();\n+            }\n+\n+            \n+            results.append(\"    function \" + jsFormName + \"_\" + functionName + \" () { \\n\");\n+            for (Iterator x = form.getFields().iterator(); x.hasNext();) {\n+                Field field = (Field) x.next();\n+\n+                // Skip indexed fields for now until there is a good way to handle\n+                // error messages (and the length of the list (could retrieve from scope?))\n+                if (field.isIndexed()\n+                    || field.getPage() != page\n+                    || !field.isDependency(va.getName())) {\n \n-                    results.append(\"    function \" + functionName + \" () { \\n\");\n-                    for (Iterator x = form.getFields().iterator(); x.hasNext();) {\n-                        Field field = (Field) x.next();\n-\n-                        // Skip indexed fields for now until there is a good way to handle \n-                        // error messages (and the length of the list (could retrieve from scope?))\n-                        if (field.isIndexed()\n-                            || field.getPage() != page\n-                            || !field.isDependency(va.getName())) {\n-                                \n-                            continue;\n-                        }\n-                        \n-                        String message =\n-                            Resources.getMessage(messages, locale, va, field);\n-                        \n-                        message = (message != null) ? message : \"\";\n-\n-                        jscriptVar = this.getNextVar(jscriptVar);\n+                    continue;\n+                }\n+\n+                String message = Resources.getMessage(messages, locale, va, field);\n+\n+                message = (message != null) ? message : \"\";\n+\n+                // prefix variable with 'a' to make it a legal identifier\n+                results.append(\n+                    \"     this.a\"\n+                        + jscriptVar++\n+                        + \" = new Array(\\\"\"\n+                        + getFormClientId()\n+                        + \":\"\n+                        + field.getKey()\n+                        + \"\\\", \\\"\"\n+                        + escapeQuotes(message)\n+                        + \"\\\", \");\n+\n+                results.append(\"new Function (\\\"varName\\\", \\\"\");\n+\n+                Map vars = field.getVars();\n+                // Loop through the field's variables.\n+                Iterator varsIterator = vars.keySet().iterator();\n+                while (varsIterator.hasNext()) {\n+                    String varName = (String) varsIterator.next();\n+                    Var var = (Var) vars.get(varName);\n+                    String varValue = var.getValue();\n+                    String jsType = var.getJsType();\n+\n+                    // skip requiredif variables field, fieldIndexed, fieldTest, fieldValue\n+                    if (varName.startsWith(\"field\")) {\n+                        continue;\n+                    }\n \n+                    if (Var.JSTYPE_INT.equalsIgnoreCase(jsType)) {\n                         results.append(\n-                            \"     this.\"\n-                                + jscriptVar\n-                                + \" = new Array(\\\"\"\n-                                + getFormClientId()\n-                                + \":\"\n-                                + field.getKey()\n-                                + \"\\\", \\\"\"\n-                                + message\n-                                + \"\\\", \");\n-\n-                        results.append(\"new Function (\\\"varName\\\", \\\"\");\n-\n-                        Map vars = field.getVars();\n-                        // Loop through the field's variables.\n-                        Iterator varsIterator = vars.keySet().iterator();\n-                        while (varsIterator.hasNext()) {\n-                            String varName = (String) varsIterator.next();\n-                            Var var = (Var) vars.get(varName);\n-                            String varValue = var.getValue();\n-                            String jsType = var.getJsType();\n-\n-                            // skip requiredif variables field, fieldIndexed, fieldTest, fieldValue\n-                            if (varName.startsWith(\"field\")) {\n-                                continue;\n-                            }\n-\n-                            if (Var.JSTYPE_INT.equalsIgnoreCase(jsType)) {\n-                                results.append(\n-                                    \"this.\"\n-                                        + varName\n-                                        + \"=\"\n-                                        + ValidatorUtil.replace(\n-                                            varValue,\n-                                            \"\\\\\",\n-                                            \"\\\\\\\\\")\n-                                        + \"; \");\n-                            } else if (Var.JSTYPE_REGEXP.equalsIgnoreCase(jsType)) {\n-                                results.append(\n-                                    \"this.\"\n-                                        + varName\n-                                        + \"=/\"\n-                                        + ValidatorUtil.replace(\n-                                            varValue,\n-                                            \"\\\\\",\n-                                            \"\\\\\\\\\")\n-                                        + \"/; \");\n-                            } else if (Var.JSTYPE_STRING.equalsIgnoreCase(jsType)) {\n-                                results.append(\n-                                    \"this.\"\n-                                        + varName\n-                                        + \"='\"\n-                                        + ValidatorUtil.replace(\n-                                            varValue,\n-                                            \"\\\\\",\n-                                            \"\\\\\\\\\")\n-                                        + \"'; \");\n-                                // So everyone using the latest format doesn't need to change their xml files immediately.\n-                            } else if (\"mask\".equalsIgnoreCase(varName)) {\n-                                results.append(\n-                                    \"this.\"\n-                                        + varName\n-                                        + \"=/\"\n-                                        + ValidatorUtil.replace(\n-                                            varValue,\n-                                            \"\\\\\",\n-                                            \"\\\\\\\\\")\n-                                        + \"/; \");\n-                            } else {\n-                                results.append(\n-                                    \"this.\"\n-                                        + varName\n-                                        + \"='\"\n-                                        + ValidatorUtil.replace(\n-                                            varValue,\n-                                            \"\\\\\",\n-                                            \"\\\\\\\\\")\n-                                        + \"'; \");\n-                            }\n-                        }\n-\n-                        results.append(\" return this[varName];\\\"));\\n\");\n+                            \"this.\"\n+                                + varName\n+                                + \"=\"\n+                                + ValidatorUtils.replace(varValue, \"\\\\\", \"\\\\\\\\\")\n+                                + \"; \");\n+                    } else if (Var.JSTYPE_REGEXP.equalsIgnoreCase(jsType)) {\n+                        results.append(\n+                            \"this.\"\n+                                + varName\n+                                + \"=/\"\n+                                + ValidatorUtils.replace(varValue, \"\\\\\", \"\\\\\\\\\")\n+                                + \"/; \");\n+                    } else if (Var.JSTYPE_STRING.equalsIgnoreCase(jsType)) {\n+                        results.append(\n+                            \"this.\"\n+                                + varName\n+                                + \"='\"\n+                                + ValidatorUtils.replace(varValue, \"\\\\\", \"\\\\\\\\\")\n+                                + \"'; \");\n+                        // So everyone using the latest format doesn't need to change their xml files immediately.\n+                    } else if (\"mask\".equalsIgnoreCase(varName)) {\n+                        results.append(\n+                            \"this.\"\n+                                + varName\n+                                + \"=/\"\n+                                + ValidatorUtils.replace(varValue, \"\\\\\", \"\\\\\\\\\")\n+                                + \"/; \");\n+                    } else {\n+                        results.append(\n+                            \"this.\"\n+                                + varName\n+                                + \"='\"\n+                                + ValidatorUtils.replace(varValue, \"\\\\\", \"\\\\\\\\\")\n+                                + \"'; \");\n                     }\n-                    results.append(\"    } \\n\\n\");\n-                }\n-            } else if (\"true\".equalsIgnoreCase(staticJavascript)) {\n-                results.append(this.getStartElement());\n-                if (\"true\".equalsIgnoreCase(htmlComment)) {\n-                    results.append(htmlBeginComment);\n                 }\n+\n+                results.append(\" return this[varName];\\\"));\\n\");\n             }\n+            results.append(\"    } \\n\\n\");\n         }\n-        \n-        if (\"true\".equalsIgnoreCase(staticJavascript)) {\n-            results.append(getJavascriptStaticMethods(resources));\n+\n+        return results.toString();\n+    }\n+\n+    private String escapeQuotes(String in)\n+    {\n+        if (in == null || in.indexOf(\"\\\"\") == -1)\n+        {\n+            return in;\n+        }\n+        StringBuffer buffer = new StringBuffer();\n+        StringTokenizer tokenizer = new StringTokenizer(in, \"\\\"\", true);\n+\n+        while (tokenizer.hasMoreTokens())\n+        {\n+            String token = tokenizer.nextToken();\n+            if (token.equals(\"\\\"\"))\n+            {\n+                buffer.append(\"\\\\\");\n+            }\n+            buffer.append(token);\n         }\n \n-        if (form != null\n-            && (\"true\".equalsIgnoreCase(dynamicJavascript)\n-                || \"true\".equalsIgnoreCase(staticJavascript))) {\n-                    \n-            results.append(getJavascriptEnd());\n+        return buffer.toString();\n+    }\n+\n+    /**\n+     * Determines if validations should stop on an error.\n+     * @param config The <code>ModuleConfig</code> used to lookup the\n+     * stopOnError setting.\n+     * @return <code>true</code> if validations should stop on errors.\n+     */\n+    private boolean stopOnError(ModuleConfig config) {\n+        Object stopOnErrorObj =\n+            pageContext.getAttribute(\n+                ValidatorPlugIn.STOP_ON_ERROR_KEY + '.' + config.getPrefix(),\n+                PageContext.APPLICATION_SCOPE);\n+\n+        boolean stopOnError = true;\n+\n+        if (stopOnErrorObj instanceof Boolean) {\n+            stopOnError = ((Boolean) stopOnErrorObj).booleanValue();\n         }\n \n+        return stopOnError;\n+    }\n \n-        JspWriter writer = pageContext.getOut();\n-        try {\n-            writer.print(results.toString());\n-        } catch (IOException e) {\n-            throw new JspException(e.getMessage());\n+    /**\n+     * Creates the JavaScript methods list from the given actions.\n+     * @param actions A List of ValidatorAction objects.\n+     * @param stopOnError If true, behaves like released version of struts 1.1\n+     *        and stops after first error. If false, evaluates all validations.\n+     * @return JavaScript methods.\n+     */\n+    private String createMethods(List actions, boolean stopOnError) {\n+        StringBuffer methods = new StringBuffer();\n+        final String methodOperator = stopOnError ? \" && \" : \" & \";\n+\n+        Iterator iter = actions.iterator();\n+        while (iter.hasNext()) {\n+            ValidatorAction va = (ValidatorAction) iter.next();\n+\n+            if (methods.length() > 0) {\n+                methods.append(methodOperator);\n+            }\n+            methods.append(va.getMethod())\n+                   .append(\"(form)\");\n+        }\n+\n+        return methods.toString();\n+    }\n+\n+    /**\n+     * Get List of actions for the given Form.\n+     * @param resources\n+     * @param form\n+     * @return A sorted List of ValidatorAction objects.\n+     */\n+    private List createActionList(ValidatorResources resources, Form form) {\n+\n+        List actionMethods = new ArrayList();\n+\n+        Iterator iterator = form.getFields().iterator();\n+        while (iterator.hasNext()) {\n+            Field field = (Field) iterator.next();\n+\n+            for (Iterator x = field.getDependencyList().iterator(); x.hasNext();) {\n+                Object o = x.next();\n+\n+                if (o != null && !actionMethods.contains(o)) {\n+                    actionMethods.add(o);\n+                }\n+            }\n         }\n \n-        return (EVAL_BODY_TAG);\n+        List actions = new ArrayList();\n+\n+        // Create list of ValidatorActions based on actionMethods\n+        iterator = actionMethods.iterator();\n+        while (iterator.hasNext()) {\n+            String depends = (String) iterator.next();\n+            ValidatorAction va = resources.getValidatorAction(depends);\n+\n+            // throw nicer NPE for easier debugging\n+            if (va == null) {\n+                throw new NullPointerException(\n+                    \"Depends string \\\"\"\n+                        + depends\n+                        + \"\\\" was not found in validator-rules.xml.\");\n+            }\n \n+            if (va.getJavascript() != null && va.getJavascript().length() > 0) {\n+                actions.add(va);\n+            } else {\n+                iterator.remove();\n+            }\n+        }\n+\n+        Collections.sort(actions, actionComparator);\n+\n+        return actions;\n     }\n \n     /**\n@@ -510,6 +673,7 @@ public void release() {\n         super.release();\n         bundle = Globals.MESSAGES_KEY;\n         formName = null;\n+        jsFormName = null;\n         page = 0;\n         methodName = null;\n         staticJavascript = \"true\";\n@@ -525,18 +689,19 @@ public void release() {\n      */\n     protected String getJavascriptBegin(String methods) {\n         StringBuffer sb = new StringBuffer();\n-        String name =\n-            formName.substring(0, 1).toUpperCase()\n-                + formName.substring(1, formName.length());\n+        String name = jsFormName.replace('/', '_'); // remove any '/' characters\n+        name =\n+            jsFormName.substring(0, 1).toUpperCase()\n+                + jsFormName.substring(1, jsFormName.length());\n+\n+        sb.append(this.renderStartElement());\n \n-        sb.append(this.getStartElement());\n-        \n         if (this.isXhtml() && \"true\".equalsIgnoreCase(this.cdata)) {\n             sb.append(\"<![CDATA[\\r\\n\");\n         }\n-        \n+\n         if (!this.isXhtml() && \"true\".equals(htmlComment)) {\n-            sb.append(htmlBeginComment);\n+            sb.append(HTML_BEGIN_COMMENT);\n         }\n         sb.append(\"\\n     var bCancel = false; \\n\\n\");\n \n@@ -559,7 +724,10 @@ protected String getJavascriptBegin(String methods) {\n         if (methods == null || methods.length() == 0) {\n             sb.append(\"       return true; \\n\");\n         } else {\n-            sb.append(\"       return \" + methods + \"; \\n\");\n+            //Making Sure that Bitwise operator works:\n+            sb.append(\" var formValidationResult;\\n\");\n+            sb.append(\"       formValidationResult = \" + methods + \"; \\n\");\n+            sb.append(\"     return (formValidationResult == 1);\\n\");\n         }\n \n         sb.append(\"   } \\n\\n\");\n@@ -594,74 +762,28 @@ protected String getJavascriptEnd() {\n \n         sb.append(\"\\n\");\n         if (!this.isXhtml() && \"true\".equals(htmlComment)){\n-            sb.append(htmlEndComment);\n+            sb.append(HTML_END_COMMENT);\n         }\n-        \n+\n         if (this.isXhtml() && \"true\".equalsIgnoreCase(this.cdata)) {\n             sb.append(\"]]>\\r\\n\");\n         }\n-        \n+\n         sb.append(\"</script>\\n\\n\");\n \n         return sb.toString();\n     }\n \n     /**\n-     * The value <code>null</code> will be returned at the end of the sequence.\n-     * &nbsp;&nbsp;&nbsp; ex: \"zz\" will return <code>null</code>\n-     */\n-    private String getNextVar(String input) {\n-        if (input == null) {\n-            return \"aa\";\n-        }\n-\n-        input = input.toLowerCase();\n-\n-        for (int i = input.length(); i > 0; i--) {\n-            int pos = i - 1;\n-\n-            char c = input.charAt(pos);\n-            c++;\n-\n-            if (c <= 'z') {\n-                if (i == 0) {\n-                    return c + input.substring(pos, input.length());\n-                } else if (i == input.length()) {\n-                    return input.substring(0, pos) + c;\n-                } else {\n-                    return input.substring(0, pos) + c + input.substring(pos, input.length() - 1);\n-                }\n-            } else {\n-                input = replaceChar(input, pos, 'a');\n-            }\n-\n-        }\n-\n-        return null;\n-\n-    }\n-\n-    /**\n-     * Replaces a single character in a <code>String</code>\n-     */\n-    private String replaceChar(String input, int pos, char c) {\n-        if (pos == 0) {\n-            return c + input.substring(pos, input.length());\n-        } else if (pos == input.length()) {\n-            return input.substring(0, pos) + c;\n-        } else {\n-            return input.substring(0, pos) + c + input.substring(pos, input.length() - 1);\n-        }\n-    }\n-\n-    /**\n-     * Constructs the beginning &lt;script&gt; element depending on xhtml status.\n+     * Constructs the beginning &lt;script&gt; element depending on XHTML\n+     * status.\n+     * @since Struts 1.2\n      */\n-    private String getStartElement() {\n+    protected String renderStartElement() {\n         StringBuffer start = new StringBuffer(\"<script type=\\\"text/javascript\\\"\");\n \n-        // there is no language attribute in xhtml\n-        if (!this.isXhtml()) {\n+        // there is no language attribute in XHTML\n+        if (!this.isXhtml() && this.scriptLanguage) {\n             start.append(\" language=\\\"Javascript1.1\\\"\");\n         }\n \n@@ -672,12 +794,12 @@ private String getStartElement() {\n         start.append(\"> \\n\");\n         return start.toString();\n     }\n-    \n+\n     /**\n      * Returns true if this is an xhtml page.\n      */\n     private boolean isXhtml() {\n-        return RequestUtils.isXhtml(this.pageContext);\n+        return TagUtils.getInstance().isXhtml(this.pageContext);\n     }\n \n     /**\n@@ -696,21 +818,39 @@ public void setCdata(String cdata) {\n         this.cdata = cdata;\n     }\n \n+    /**\n+     * Gets whether or not the &lt;script&gt; element will include the\n+     * language attribute.\n+     * @return true if language attribute will be included.\n+     * @since Struts 1.2\n+     */\n+    public boolean getScriptLanguage() {\n+        return this.scriptLanguage;\n+    }\n+\n+    /**\n+     * Sets whether or not the &lt;script&gt; element will include the\n+     * language attribute.\n+     * @since Struts 1.2\n+     */\n+    public void setScriptLanguage(boolean scriptLanguage) {\n+        this.scriptLanguage = scriptLanguage;\n+    }\n \n+    /**\n+     * <p>Cached client identifier of our parent form component.</p>\n+     */\n     private String formClientId = null;\n \n     /**\n-     * <p>Return the <code>clientId</code> of the form component for which\n-     * we are rendering validation Javascript.</p>\n-     *\n-     * @exception IllegalStateException if we are not nested inside a\n-     *  UIComponentTag with a child FormComponent matching our form name\n+     * <p>Return the <code>clientId</code> of the {@link FormComponent}\n+     * within which we are nested.</p>\n      */\n-    private String getFormClientId(){\n+    private String getFormClientId() {\n \n         // Return any cached value\n         if (formClientId != null) {\n-            return (formClientId);\n+            return formClientId;\n         }\n \n         // Locate our parent tag that is a component tag\n@@ -723,7 +863,7 @@ private String getFormClientId(){\n         }\n         if (parent == null) {\n             throw new IllegalArgumentException\n-                (\"Not nested inside a UIComponentTag\");\n+                (\"Javascript tag is not nested inside a component tag\");\n         }\n \n         // Are we nested inside our corresponding form tag?\n@@ -733,26 +873,26 @@ private String getFormClientId(){\n             if (formName.equals((String) parentComponent.getAttributes().get(\"beanName\"))) {\n                 formClientId = parentComponent.getClientId\n                     (FacesContext.getCurrentInstance());\n-                return (formClientId);\n+                return formClientId;\n             }\n         }\n \n-        // Scan the children of this tag's component\n-        Iterator kids = ((UIComponentTag) parent).\n-            getComponentInstance().getChildren().iterator();\n+        // No, so search the children of this component for a sibling form\n+        Iterator kids = parentComponent.getChildren().iterator();\n         while (kids.hasNext()) {\n             UIComponent kid = (UIComponent) kids.next();\n-            if (!(kid instanceof FormComponent)) {\n-                continue;\n-            }\n-            if (formName.equals((String) kid.getAttributes().get(\"beanName\"))) {\n-                formClientId =\n-                    kid.getClientId(FacesContext.getCurrentInstance());\n-                return (formClientId);\n+            if (kid instanceof FormComponent) {\n+                if (formName.equals((String) kid.getAttributes().get(\"beanName\"))) {\n+                    formClientId = kid.getClientId\n+                        (FacesContext.getCurrentInstance());\n+                    return formClientId;\n+                }\n             }\n         }\n+\n+        // Rats, could not find a form component that way either\n         throw new IllegalArgumentException\n-            (\"Cannot find child FormComponent for form '\" + formName + \"'\");\n+            (\"Cannot find form component for form '\" + formName + \"'\");\n \n     }\n ",
                "deletions": 294
            },
            {
                "sha": "dd1afe16edc20d0776ba120eccc8cbf0fe9e8c31",
                "filename": "struts-faces/example1-webapp/src/java/org/apache/struts/webapp/example/SaveRegistrationAction.java",
                "blob_url": "https://github.com/apache/struts1/blob/1c34c59b4054cfb359c0dbdd966b0625b3519bec/struts-faces/example1-webapp/src/java/org/apache/struts/webapp/example/SaveRegistrationAction.java",
                "raw_url": "https://github.com/apache/struts1/raw/1c34c59b4054cfb359c0dbdd966b0625b3519bec/struts-faces/example1-webapp/src/java/org/apache/struts/webapp/example/SaveRegistrationAction.java",
                "status": "modified",
                "changes": 2,
                "additions": 1,
                "contents_url": "https://api.github.com/repos/apache/struts1/contents/struts-faces/example1-webapp/src/java/org/apache/struts/webapp/example/SaveRegistrationAction.java?ref=1c34c59b4054cfb359c0dbdd966b0625b3519bec",
                "patch": "@@ -117,7 +117,7 @@ public ActionForward execute(ActionMapping mapping,\n                           \"' was cancelled\");\n             }\n \t    session.removeAttribute(Constants.SUBSCRIPTION_KEY);\n-\t    return (mapping.findForward(\"success\"));\n+\t    return (mapping.findForward(\"failure\"));\n \t}\n \n         // Validate the transactional control token",
                "deletions": 1
            },
            {
                "sha": "8ca9adc27342e9be0f61393c2cfe43512b868874",
                "filename": "struts-faces/example1-webapp/src/web/WEB-INF/struts-config.xml",
                "blob_url": "https://github.com/apache/struts1/blob/1c34c59b4054cfb359c0dbdd966b0625b3519bec/struts-faces/example1-webapp/src/web/WEB-INF/struts-config.xml",
                "raw_url": "https://github.com/apache/struts1/raw/1c34c59b4054cfb359c0dbdd966b0625b3519bec/struts-faces/example1-webapp/src/web/WEB-INF/struts-config.xml",
                "status": "modified",
                "changes": 4,
                "additions": 3,
                "contents_url": "https://api.github.com/repos/apache/struts1/contents/struts-faces/example1-webapp/src/web/WEB-INF/struts-config.xml?ref=1c34c59b4054cfb359c0dbdd966b0625b3519bec",
                "patch": "@@ -89,6 +89,7 @@\n     <forward   name=\"registration\"         path=\"/registration.faces\"/>\n     <forward   name=\"subscription\"         path=\"/subscription.faces\"/>\n     <forward   name=\"success\"              path=\"/mainMenu.faces\"/>\n+    <forward   name=\"failure\"              path=\"/index.faces\"/>\n   </global-forwards>\n \n \n@@ -137,7 +138,8 @@\n                type=\"org.apache.struts.webapp.example.SaveRegistrationAction\"\n                name=\"registrationForm\"\n               scope=\"request\"\n-              input=\"registration\"/>\n+              input=\"registration\">\n+    </action>\n \n     <!-- Save mail subscription -->\n     <action    path=\"/saveSubscription\"",
                "deletions": 1
            },
            {
                "sha": "8e47ccb6aa3b2934f0899313dafbbc185bc411e0",
                "filename": "struts-faces/example1-webapp/src/web/registration.jsp",
                "blob_url": "https://github.com/apache/struts1/blob/1c34c59b4054cfb359c0dbdd966b0625b3519bec/struts-faces/example1-webapp/src/web/registration.jsp",
                "raw_url": "https://github.com/apache/struts1/raw/1c34c59b4054cfb359c0dbdd966b0625b3519bec/struts-faces/example1-webapp/src/web/registration.jsp",
                "status": "modified",
                "changes": 1,
                "additions": 1,
                "contents_url": "https://api.github.com/repos/apache/struts1/contents/struts-faces/example1-webapp/src/web/registration.jsp?ref=1c34c59b4054cfb359c0dbdd966b0625b3519bec",
                "patch": "@@ -178,6 +178,7 @@\n       <h:commandButton id=\"cancel\"\n                      type=\"SUBMIT\"\n                styleClass=\"cancel\"\n+                  onclick=\"bCancel=true;\"\n                     value=\"#{messages['button.cancel']}\"/>\n     </h:panelGroup>\n ",
                "deletions": 0
            },
            {
                "sha": "6b9854060c5ec547082cad02e6b87351f29ca189",
                "filename": "struts-faces/example1-webapp/src/web/staticJavascript.jsp",
                "blob_url": "https://github.com/apache/struts1/blob/1c34c59b4054cfb359c0dbdd966b0625b3519bec/struts-faces/example1-webapp/src/web/staticJavascript.jsp",
                "raw_url": "https://github.com/apache/struts1/raw/1c34c59b4054cfb359c0dbdd966b0625b3519bec/struts-faces/example1-webapp/src/web/staticJavascript.jsp",
                "status": "modified",
                "changes": 6,
                "additions": 2,
                "contents_url": "https://api.github.com/repos/apache/struts1/contents/struts-faces/example1-webapp/src/web/staticJavascript.jsp?ref=1c34c59b4054cfb359c0dbdd966b0625b3519bec",
                "patch": "@@ -1,6 +1,7 @@\n <%@ page language=\"java\" %>\n <%-- set document type to Javascript (addresses a bug in Netscape according to a web resource --%>\n <%@ page contentType=\"application/x-javascript\" %>\n+<%@ taglib prefix=\"s\" uri=\"http://struts.apache.org/tags-faces\" %>\n \n <%--\n \n@@ -20,7 +21,4 @@\n \n --%>\n \n-\n-<%@ taglib uri=\"/WEB-INF/struts-html.tld\" prefix=\"html\" %>\n-\n-<html:javascript dynamicJavascript=\"false\" staticJavascript=\"true\"/>\n+<s:javascript dynamicJavascript=\"false\" staticJavascript=\"true\"/>",
                "deletions": 4
            },
            {
                "sha": "cd875bc821b9ebba750fdb0b9a19022281fd2de9",
                "filename": "struts-faces/example1-webapp/src/web/subscription.jsp",
                "blob_url": "https://github.com/apache/struts1/blob/1c34c59b4054cfb359c0dbdd966b0625b3519bec/struts-faces/example1-webapp/src/web/subscription.jsp",
                "raw_url": "https://github.com/apache/struts1/raw/1c34c59b4054cfb359c0dbdd966b0625b3519bec/struts-faces/example1-webapp/src/web/subscription.jsp",
                "status": "modified",
                "changes": 1,
                "additions": 1,
                "contents_url": "https://api.github.com/repos/apache/struts1/contents/struts-faces/example1-webapp/src/web/subscription.jsp?ref=1c34c59b4054cfb359c0dbdd966b0625b3519bec",
                "patch": "@@ -195,6 +195,7 @@\n       <h:commandButton id=\"cancel\"\n                      type=\"SUBMIT\"\n                styleClass=\"cancel\"\n+                  onclick=\"bCancel=true;\"\n                     value=\"#{messages['button.cancel']}\"/>\n     </h:panelGroup>\n ",
                "deletions": 0
            },
            {
                "sha": "4882685ebc8012330b11849d2bb32aff46e5cdba",
                "filename": "struts-faces/example2-webapp/src/java/org/apache/struts/webapp/example2/SaveRegistrationAction.java",
                "blob_url": "https://github.com/apache/struts1/blob/1c34c59b4054cfb359c0dbdd966b0625b3519bec/struts-faces/example2-webapp/src/java/org/apache/struts/webapp/example2/SaveRegistrationAction.java",
                "raw_url": "https://github.com/apache/struts1/raw/1c34c59b4054cfb359c0dbdd966b0625b3519bec/struts-faces/example2-webapp/src/java/org/apache/struts/webapp/example2/SaveRegistrationAction.java",
                "status": "modified",
                "changes": 2,
                "additions": 1,
                "contents_url": "https://api.github.com/repos/apache/struts1/contents/struts-faces/example2-webapp/src/java/org/apache/struts/webapp/example2/SaveRegistrationAction.java?ref=1c34c59b4054cfb359c0dbdd966b0625b3519bec",
                "patch": "@@ -115,7 +115,7 @@ public ActionForward execute(ActionMapping mapping,\n                           \"' was cancelled\");\n             }\n \t    session.removeAttribute(Constants.SUBSCRIPTION_KEY);\n-\t    return (mapping.findForward(\"success\"));\n+\t    return (mapping.findForward(\"failure\"));\n \t}\n \n         // Validate the transactional control token",
                "deletions": 1
            },
            {
                "sha": "b6ac36066d7c9b463b19d9cbef0870991c58552c",
                "filename": "struts-faces/example2-webapp/src/web/WEB-INF/struts-config.xml",
                "blob_url": "https://github.com/apache/struts1/blob/1c34c59b4054cfb359c0dbdd966b0625b3519bec/struts-faces/example2-webapp/src/web/WEB-INF/struts-config.xml",
                "raw_url": "https://github.com/apache/struts1/raw/1c34c59b4054cfb359c0dbdd966b0625b3519bec/struts-faces/example2-webapp/src/web/WEB-INF/struts-config.xml",
                "status": "modified",
                "changes": 3,
                "additions": 2,
                "contents_url": "https://api.github.com/repos/apache/struts1/contents/struts-faces/example2-webapp/src/web/WEB-INF/struts-config.xml?ref=1c34c59b4054cfb359c0dbdd966b0625b3519bec",
                "patch": "@@ -90,6 +90,7 @@\n     <forward   name=\"registration\"         path=\".registration\"/>\n     <forward   name=\"subscription\"         path=\".subscription\"/>\n     <forward   name=\"success\"              path=\".mainMenu\"/>\n+    <forward   name=\"failure\"              path=\".welcome\"/>\n   </global-forwards>\n \n \n@@ -117,7 +118,7 @@\n               scope=\"request\"\n            validate=\"false\">\n       <forward name=\"failure\"              path=\".mainMenu\"/>\n-      <forward name=\"success\"              path=\".registration\"/>\n+      <forward name=\"success\"              path=\".subscription\"/>\n     </action>\n \n     <!-- Process a user logoff -->",
                "deletions": 1
            },
            {
                "sha": "9e7fc69fb9b1bcee29e6874dca3718f908b4c492",
                "filename": "struts-faces/example2-webapp/src/web/registration.jsp",
                "blob_url": "https://github.com/apache/struts1/blob/1c34c59b4054cfb359c0dbdd966b0625b3519bec/struts-faces/example2-webapp/src/web/registration.jsp",
                "raw_url": "https://github.com/apache/struts1/raw/1c34c59b4054cfb359c0dbdd966b0625b3519bec/struts-faces/example2-webapp/src/web/registration.jsp",
                "status": "modified",
                "changes": 1,
                "additions": 1,
                "contents_url": "https://api.github.com/repos/apache/struts1/contents/struts-faces/example2-webapp/src/web/registration.jsp?ref=1c34c59b4054cfb359c0dbdd966b0625b3519bec",
                "patch": "@@ -164,6 +164,7 @@\n                styleClass=\"command-multiple\"\n                     value=\"Reset\"/>                     <%-- FIXME - i18n --%>\n       <h:commandButton id=\"cancel\" type=\"SUBMIT\"\n+                  onclick=\"bCancel=true;\"\n                styleClass=\"command-multiple\"\n                     value=\"Cancel\"/>                    <%-- FIXME - i18n --%>\n     </h:panelGroup>",
                "deletions": 0
            },
            {
                "sha": "59f37ff6b25c15d6f5e40e7d499a72719fbe83ae",
                "filename": "struts-faces/example2-webapp/src/web/subscription.jsp",
                "blob_url": "https://github.com/apache/struts1/blob/1c34c59b4054cfb359c0dbdd966b0625b3519bec/struts-faces/example2-webapp/src/web/subscription.jsp",
                "raw_url": "https://github.com/apache/struts1/raw/1c34c59b4054cfb359c0dbdd966b0625b3519bec/struts-faces/example2-webapp/src/web/subscription.jsp",
                "status": "modified",
                "changes": 1,
                "additions": 1,
                "contents_url": "https://api.github.com/repos/apache/struts1/contents/struts-faces/example2-webapp/src/web/subscription.jsp?ref=1c34c59b4054cfb359c0dbdd966b0625b3519bec",
                "patch": "@@ -181,6 +181,7 @@\n                     value=\"Reset\"/>       <%-- FIXME - i18n --%>\n       <h:commandButton id=\"cancel\"\n                      type=\"SUBMIT\"\n+                  onclick=\"bCancel=true;\"\n                styleClass=\"command-multiple\"\n                     value=\"Cancel\"/>     <%-- FIXME - i18n --%>\n     </h:panelGroup>",
                "deletions": 0
            },
            {
                "sha": "ab555886cadb6a4ebd171911291eec0ed92e7bcc",
                "filename": "struts-faces/sysclient-app/src/java/org/apache/struts/faces/sysclient/LogonTestCase.java",
                "blob_url": "https://github.com/apache/struts1/blob/1c34c59b4054cfb359c0dbdd966b0625b3519bec/struts-faces/sysclient-app/src/java/org/apache/struts/faces/sysclient/LogonTestCase.java",
                "raw_url": "https://github.com/apache/struts1/raw/1c34c59b4054cfb359c0dbdd966b0625b3519bec/struts-faces/sysclient-app/src/java/org/apache/struts/faces/sysclient/LogonTestCase.java",
                "status": "modified",
                "changes": 6,
                "additions": 4,
                "contents_url": "https://api.github.com/repos/apache/struts1/contents/struts-faces/sysclient-app/src/java/org/apache/struts/faces/sysclient/LogonTestCase.java?ref=1c34c59b4054cfb359c0dbdd966b0625b3519bec",
                "patch": "@@ -131,7 +131,9 @@ public void testIncorrect() throws Exception {\n \n         span = (HtmlSpan) element(\"globalErrors\");\n         assertNotNull(span);\n-        assertEquals(\"\", span.asText());\n+        assertEquals(\"[EH][EP] can not be less than 3 characters.[ES]\" +\n+                     \"[EP] is required.[ES][EF]\",\n+                     span.asText());\n \n         username = (HtmlTextInput) element(\"form:username\");\n         assertNotNull(username);\n@@ -184,7 +186,7 @@ public void testPristine() throws Exception {\n         assertEquals(url + \"/logon.faces\", action);\n         assertEquals(\"\", form.getEnctypeAttribute());\n         assertEquals(\"post\", form.getMethodAttribute());\n-        assertEquals(\"\", form.getNameAttribute());\n+        assertEquals(\"logonForm\", form.getNameAttribute());\n         assertEquals(\"\", form.getOnResetAttribute());\n         assertEquals(\"\", form.getOnSubmitAttribute());\n         assertEquals(\"\", form.getTargetAttribute());",
                "deletions": 2
            }
        ]
    }
]