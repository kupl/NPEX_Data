{
    "incubator-myriad_4bce035": {
        "bug_id": "incubator-myriad_4bce035",
        "commit": "https://github.com/apache/incubator-myriad/commit/4bce035ec8feff66f4804cc121c3051f5ecff4fa",
        "file": [
            {
                "additions": 9,
                "blob_url": "https://github.com/apache/incubator-myriad/blob/4bce035ec8feff66f4804cc121c3051f5ecff4fa/myriad-scheduler/src/main/java/org/apache/myriad/scheduler/fgs/YarnNodeCapacityManager.java",
                "changes": 12,
                "contents_url": "https://api.github.com/repos/apache/incubator-myriad/contents/myriad-scheduler/src/main/java/org/apache/myriad/scheduler/fgs/YarnNodeCapacityManager.java?ref=4bce035ec8feff66f4804cc121c3051f5ecff4fa",
                "deletions": 3,
                "filename": "myriad-scheduler/src/main/java/org/apache/myriad/scheduler/fgs/YarnNodeCapacityManager.java",
                "patch": "@@ -70,6 +70,7 @@\n  */\n public class YarnNodeCapacityManager extends BaseInterceptor {\n   private static final Logger LOGGER = LoggerFactory.getLogger(YarnNodeCapacityManager.class);\n+\n   private final AbstractYarnScheduler yarnScheduler;\n   private final RMContext rmContext;\n   private final MyriadDriver myriadDriver;\n@@ -247,9 +248,14 @@ public void setNodeCapacity(RMNode rmNode, Resource newCapacity) {\n       rmNode.getTotalCapability().setVirtualCores(newCapacity.getVirtualCores());\n       LOGGER.debug(\"Setting capacity for node {} to {}\", rmNode.getHostName(), newCapacity);\n       // updates the scheduler with the new capacity for the NM.\n-      // the event is handled by the scheduler asynchronously\n-      rmContext.getDispatcher().getEventHandler().handle(new NodeResourceUpdateSchedulerEvent(rmNode, ResourceOption.newInstance(\n-          rmNode.getTotalCapability(), RMNode.OVER_COMMIT_TIMEOUT_MILLIS_DEFAULT)));\n+      synchronized (yarnScheduler) {\n+        if (yarnScheduler.getSchedulerNode(rmNode.getNodeID()) != null) {\n+          yarnScheduler.updateNodeResource(rmNode,\n+              ResourceOption.newInstance(rmNode.getTotalCapability(), RMNode.OVER_COMMIT_TIMEOUT_MILLIS_DEFAULT));\n+        } else {\n+          LOGGER.info(\"Yarn Scheduler doesn't have node {}, probably UNHEALTHY\", rmNode.getNodeID());\n+        }\n+      }\n     }\n   }\n ",
                "raw_url": "https://github.com/apache/incubator-myriad/raw/4bce035ec8feff66f4804cc121c3051f5ecff4fa/myriad-scheduler/src/main/java/org/apache/myriad/scheduler/fgs/YarnNodeCapacityManager.java",
                "sha": "1dee5fa22862fec26c5b7ff1a0da49848e24a12f",
                "status": "modified"
            },
            {
                "additions": 5,
                "blob_url": "https://github.com/apache/incubator-myriad/blob/4bce035ec8feff66f4804cc121c3051f5ecff4fa/myriad-scheduler/src/test/java/org/apache/myriad/scheduler/fgs/FGSTestBaseSpec.groovy",
                "changes": 7,
                "contents_url": "https://api.github.com/repos/apache/incubator-myriad/contents/myriad-scheduler/src/test/java/org/apache/myriad/scheduler/fgs/FGSTestBaseSpec.groovy?ref=4bce035ec8feff66f4804cc121c3051f5ecff4fa",
                "deletions": 2,
                "filename": "myriad-scheduler/src/test/java/org/apache/myriad/scheduler/fgs/FGSTestBaseSpec.groovy",
                "patch": "@@ -33,6 +33,7 @@ import org.apache.hadoop.yarn.server.resourcemanager.rmnode.RMNode\n import org.apache.hadoop.yarn.server.resourcemanager.scheduler.AbstractYarnScheduler\n import org.apache.hadoop.yarn.server.resourcemanager.scheduler.SchedulerApplicationAttempt\n import org.apache.hadoop.yarn.server.resourcemanager.scheduler.SchedulerNode\n+import org.apache.hadoop.yarn.server.resourcemanager.scheduler.fair.FSSchedulerNode\n import org.apache.hadoop.yarn.util.resource.Resources\n import org.apache.mesos.Protos\n import org.apache.mesos.SchedulerDriver\n@@ -65,6 +66,7 @@ class FGSTestBaseSpec extends Specification {\n \n     def rmNodes = new ConcurrentHashMap<NodeId, RMNode>()\n \n+\n     RMNode getRMNode(int cpu, int mem, String host, Protos.SlaveID slaveId) {\n         RMNode rmNode = MockNodes.newNodeInfo(0, Resources.createResource(mem, cpu), 0, host)\n         if (rmNodes[rmNode.getNodeID()]) {\n@@ -80,18 +82,17 @@ class FGSTestBaseSpec extends Specification {\n \n     SchedulerNode getSchedulerNode(RMNode rmNode) {\n         SchedulerNode schedulerNode = new SchedulerNode(rmNode, false) {\n-\n             @Override\n             void reserveResource(SchedulerApplicationAttempt attempt, Priority priority, RMContainer container) {\n             }\n-\n             @Override\n             void unreserveResource(SchedulerApplicationAttempt attempt) {\n             }\n         }\n         return schedulerNode\n     }\n \n+\n     /******************* RMContext Related ****************/\n \n     def publisher = Mock(SystemMetricsPublisher) {}\n@@ -143,6 +144,8 @@ class FGSTestBaseSpec extends Specification {\n \n     AbstractYarnScheduler yarnScheduler = Mock(AbstractYarnScheduler) {\n         getRMContainer(_ as ContainerId) >> { ContainerId cid -> fgsContainers.get(cid).rmContainer }\n+        getSchedulerNode(_ as NodeId) >> { NodeId nodeId -> getSchedulerNode(rmNodes.get(nodeId)) }\n+        updateNodeResource(_ as RMNode, _ as ResourceOption) >> { }\n     }\n \n     FGSContainer getFGSContainer(RMNode node, int cid, int cpu, int mem, ContainerState state) {",
                "raw_url": "https://github.com/apache/incubator-myriad/raw/4bce035ec8feff66f4804cc121c3051f5ecff4fa/myriad-scheduler/src/test/java/org/apache/myriad/scheduler/fgs/FGSTestBaseSpec.groovy",
                "sha": "c769999059734969564a42f26027c3be0249a6bc",
                "status": "modified"
            },
            {
                "additions": 3,
                "blob_url": "https://github.com/apache/incubator-myriad/blob/4bce035ec8feff66f4804cc121c3051f5ecff4fa/myriad-scheduler/src/test/java/org/apache/myriad/scheduler/fgs/YarnNodeCapacityManagerSpec.groovy",
                "changes": 5,
                "contents_url": "https://api.github.com/repos/apache/incubator-myriad/contents/myriad-scheduler/src/test/java/org/apache/myriad/scheduler/fgs/YarnNodeCapacityManagerSpec.groovy?ref=4bce035ec8feff66f4804cc121c3051f5ecff4fa",
                "deletions": 2,
                "filename": "myriad-scheduler/src/test/java/org/apache/myriad/scheduler/fgs/YarnNodeCapacityManagerSpec.groovy",
                "patch": "@@ -19,6 +19,8 @@\n package org.apache.myriad.scheduler.fgs\n \n import org.apache.hadoop.yarn.api.records.ContainerState\n+import org.apache.hadoop.yarn.api.records.ResourceOption\n+import org.apache.hadoop.yarn.server.resourcemanager.rmnode.RMNode\n import org.apache.hadoop.yarn.server.resourcemanager.scheduler.event.NodeResourceUpdateSchedulerEvent\n import org.apache.hadoop.yarn.util.resource.Resources\n import org.apache.mesos.Protos\n@@ -115,7 +117,7 @@ class YarnNodeCapacityManagerSpec extends FGSTestBaseSpec {\n         then:\n         zeroNM.getTotalCapability().getMemory() == 2048\n         zeroNM.getTotalCapability().getVirtualCores() == 2\n-        1 * rmContext.getDispatcher().getEventHandler().handle(_ as NodeResourceUpdateSchedulerEvent)\n+        1 * yarnScheduler.updateNodeResource( _ as RMNode, _ as ResourceOption)\n     }\n \n     YarnNodeCapacityManager getYarnNodeCapacityManager() {\n@@ -137,6 +139,5 @@ class YarnNodeCapacityManagerSpec extends FGSTestBaseSpec {\n         def taskUtils = new TaskUtils(cfg)\n         return new YarnNodeCapacityManager(registry, yarnScheduler, rmContext,\n                 myriadDriver, offerLifecycleManager, nodeStore, state, taskUtils)\n-\n     }\n }",
                "raw_url": "https://github.com/apache/incubator-myriad/raw/4bce035ec8feff66f4804cc121c3051f5ecff4fa/myriad-scheduler/src/test/java/org/apache/myriad/scheduler/fgs/YarnNodeCapacityManagerSpec.groovy",
                "sha": "5d59c68eaa9c7cb111123cf9b9e7ff7e7fdd1659",
                "status": "modified"
            }
        ],
        "message": "[Myriad 188] - NodeManager switch to UNHEALTHY causes NPE on ResourceManager.\n\nJIRA:\n  [Myriad-188] https://issues.apache.org/jira/browse/MYRIAD-188\n  [Myriad-156] https://issues.apache.org/jira/browse/MYRIAD-156\n\nPull Request:\n  Closes #62\n\nAuthor:\n  darinj darinj@apache.org",
        "parent": "https://github.com/apache/incubator-myriad/commit/79ba4a5f09c0bb59492a50bb8b310543fb372ead",
        "repo": "incubator-myriad",
        "unit_tests": [
            "YarnNodeCapacityManagerTest.java"
        ]
    }
}