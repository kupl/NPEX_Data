{
    "turbine-core_01517ba": {
        "bug_id": "turbine-core_01517ba",
        "commit": "https://github.com/apache/turbine-core/commit/01517ba2b5ae102dd5950a337624edf5b0e5ff81",
        "file": [
            {
                "additions": 15,
                "blob_url": "https://github.com/apache/turbine-core/blob/01517ba2b5ae102dd5950a337624edf5b0e5ff81/src/java/org/apache/turbine/Turbine.java",
                "changes": 27,
                "contents_url": "https://api.github.com/repos/apache/turbine-core/contents/src/java/org/apache/turbine/Turbine.java?ref=01517ba2b5ae102dd5950a337624edf5b0e5ff81",
                "deletions": 12,
                "filename": "src/java/org/apache/turbine/Turbine.java",
                "patch": "@@ -84,6 +84,7 @@\n import org.apache.turbine.modules.ActionLoader;\n import org.apache.turbine.modules.PageLoader;\n \n+import org.apache.turbine.services.ServiceManager;\n import org.apache.turbine.services.TurbineServices;\n import org.apache.turbine.services.avaloncomponent.AvalonComponentService;\n import org.apache.turbine.services.component.ComponentService;\n@@ -186,9 +187,6 @@\n      */\n     private static String webappRoot;\n \n-    /** instance of turbine services */\n-    private static TurbineServices serviceManager = null;\n-\n     /** Our internal configuration object */\n     private static Configuration configuration = null;\n \n@@ -325,8 +323,6 @@ private void configure(ServletConfig config, ServletContext context)\n         String confPath;\n         String confStyle = \"unset\";\n \n-\n-\n         if (StringUtils.isNotEmpty(confFile))\n         {\n             confPath = getRealPath(confFile);\n@@ -395,10 +391,7 @@ private void configure(ServletConfig config, ServletContext context)\n         setTurbineServletConfig(config);\n         setTurbineServletContext(context);\n \n-        // Get the instance of the service manager\n-        serviceManager = (TurbineServices) TurbineServices.getInstance();\n-\n-        serviceManager.setApplicationRoot(applicationRoot);\n+        getServiceManager().setApplicationRoot(applicationRoot);\n \n         // We want to set a few values in the configuration so\n         // that ${variable} interpolation will work for\n@@ -420,13 +413,13 @@ private void configure(ServletConfig config, ServletContext context)\n                                   AvalonComponentService.SERVICE_NAME + \".earlyInit\",\n                                   Boolean.TRUE);\n \n-        serviceManager.setConfiguration(configuration);\n+        getServiceManager().setConfiguration(configuration);\n \n         // Initialize the service manager. Services\n         // that have its 'earlyInit' property set to\n         // a value of 'true' will be started when\n         // the service manager is initialized.\n-        serviceManager.init();\n+        getServiceManager().init();\n     }\n \n     /**\n@@ -661,7 +654,7 @@ public static ServletContext getTurbineServletContext()\n     public final void destroy()\n     {\n         // Shut down all Turbine Services.\n-        serviceManager.shutdownServices();\n+        getServiceManager().shutdownServices();\n         System.gc();\n \n         log.info(\"Turbine: Done shutting down!\");\n@@ -1131,4 +1124,14 @@ public static String getRealPath(String path)\n \n         return new File(getApplicationRoot(), path).getAbsolutePath();\n     }\n+\n+    /**\n+     * Return an instance of the currently configured Service Manager\n+     *\n+     * @return A service Manager instance\n+     */\n+    private ServiceManager getServiceManager()\n+    {\n+        return TurbineServices.getInstance();\n+    }\n }",
                "raw_url": "https://github.com/apache/turbine-core/raw/01517ba2b5ae102dd5950a337624edf5b0e5ff81/src/java/org/apache/turbine/Turbine.java",
                "sha": "6c468b7599abf5b7019b47db10b22e4df09ed4ee",
                "status": "modified"
            },
            {
                "additions": 99,
                "blob_url": "https://github.com/apache/turbine-core/blob/01517ba2b5ae102dd5950a337624edf5b0e5ff81/src/test/org/apache/turbine/DestroyTest.java",
                "changes": 99,
                "contents_url": "https://api.github.com/repos/apache/turbine-core/contents/src/test/org/apache/turbine/DestroyTest.java?ref=01517ba2b5ae102dd5950a337624edf5b0e5ff81",
                "deletions": 0,
                "filename": "src/test/org/apache/turbine/DestroyTest.java",
                "patch": "@@ -0,0 +1,99 @@\n+package org.apache.turbine;\n+\n+/* ====================================================================\n+ * The Apache Software License, Version 1.1\n+ *\n+ * Copyright (c) 2001-2003 The Apache Software Foundation.  All rights\n+ * reserved.\n+ *\n+ * Redistribution and use in source and binary forms, with or without\n+ * modification, are permitted provided that the following conditions\n+ * are met:\n+ *\n+ * 1. Redistributions of source code must retain the above copyright\n+ *    notice, this list of conditions and the following disclaimer.\n+ *\n+ * 2. Redistributions in binary form must reproduce the above copyright\n+ *    notice, this list of conditions and the following disclaimer in\n+ *    the documentation and/or other materials provided with the\n+ *    distribution.\n+ *\n+ * 3. The end-user documentation included with the redistribution,\n+ *    if any, must include the following acknowledgment:\n+ *       \"This product includes software developed by the\n+ *        Apache Software Foundation (http://www.apache.org/).\"\n+ *    Alternately, this acknowledgment may appear in the software itself,\n+ *    if and wherever such third-party acknowledgments normally appear.\n+ *\n+ * 4. The names \"Apache\" and \"Apache Software Foundation\" and\n+ *    \"Apache Turbine\" must not be used to endorse or promote products\n+ *    derived from this software without prior written permission. For\n+ *    written permission, please contact apache@apache.org.\n+ *\n+ * 5. Products derived from this software may not be called \"Apache\",\n+ *    \"Apache Turbine\", nor may \"Apache\" appear in their name, without\n+ *    prior written permission of the Apache Software Foundation.\n+ *\n+ * THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED\n+ * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\n+ * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+ * DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR\n+ * ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n+ * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n+ * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF\n+ * USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n+ * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\n+ * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT\n+ * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\n+ * SUCH DAMAGE.\n+ * ====================================================================\n+ *\n+ * This software consists of voluntary contributions made by many\n+ * individuals on behalf of the Apache Software Foundation.  For more\n+ * information on the Apache Software Foundation, please see\n+ * <http://www.apache.org/>.\n+ */\n+\n+import junit.framework.Test;\n+import junit.framework.TestCase;\n+import junit.framework.TestSuite;\n+\n+import org.apache.turbine.Turbine;\n+import org.apache.turbine.util.TurbineConfig;\n+\n+/**\n+ * Can we call \"destroy\" unconditionally on our Turbine Servlet, even if\n+ * it hasn't configured?\n+ *\n+ * @version $Id$\n+ */\n+public class DestroyTest\n+    extends TestCase\n+{\n+    private static TurbineConfig tc = null;\n+\n+    public DestroyTest(String name)\n+    {\n+        super(name);\n+        tc = new TurbineConfig(\".\", \"/conf/test/TemplateService.properties\");\n+    }\n+\n+    public static Test suite()\n+    {\n+        return new TestSuite(DestroyTest.class);\n+    }\n+\n+    public void testDestroy()\n+        throws Exception\n+    {\n+        Turbine t = new Turbine();\n+        t.destroy();\n+    }\n+\n+    public void testInitAndDestroy()\n+        throws Exception\n+    {\n+        tc.initialize();\n+        tc.dispose();\n+    }\n+}",
                "raw_url": "https://github.com/apache/turbine-core/raw/01517ba2b5ae102dd5950a337624edf5b0e5ff81/src/test/org/apache/turbine/DestroyTest.java",
                "sha": "1b40c28a4ebcf2910fbc41b41385e410c996179c",
                "status": "added"
            }
        ],
        "message": "Move the serviceManager member into a getter so we can assure that it is\nnever null. Makes it possible to call destroy() unconditionally on a\nTurbine object without getting NPEs.\n\nAdded a test for this.\n\nPR:\nObtained from:\nSubmitted by:\nReviewed by:\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/turbine/core/trunk@221472 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/turbine-core/commit/a5b5555e659851cdef72a3df10b423e410c65262",
        "repo": "turbine-core",
        "unit_tests": [
            "TurbineTest.java"
        ]
    },
    "turbine-core_23d175c": {
        "bug_id": "turbine-core_23d175c",
        "commit": "https://github.com/apache/turbine-core/commit/23d175ccdd42dce3cb31469414c48c2b39e76b92",
        "file": [
            {
                "additions": 6,
                "blob_url": "https://github.com/apache/turbine-core/blob/23d175ccdd42dce3cb31469414c48c2b39e76b92/src/java/org/apache/turbine/util/BrowserDetector.java",
                "changes": 7,
                "contents_url": "https://api.github.com/repos/apache/turbine-core/contents/src/java/org/apache/turbine/util/BrowserDetector.java?ref=23d175ccdd42dce3cb31469414c48c2b39e76b92",
                "deletions": 1,
                "filename": "src/java/org/apache/turbine/util/BrowserDetector.java",
                "patch": "@@ -232,10 +232,15 @@ private void parse()\n         // Modificaton by Chris Mospaw <mospaw@polk-county.com>\n         if (userAgentString.indexOf(OPERA) != -1)\n         {\n-            //Ex: Mozilla/4.0 (Windows NT 4.0;US) Opera 3.61  [en]\n+            // Ex: Mozilla/4.0 (Windows NT 4.0;US) Opera 3.61  [en]\n+            // Ex: Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; en) Opera 8.02\n             versionStartIndex = (userAgentString.indexOf(OPERA) \n                     + OPERA.length() + 1);\n             versionEndIndex = userAgentString.indexOf(\" \", versionStartIndex);\n+            if (versionEndIndex == -1)\n+            {\n+                versionEndIndex = userAgentString.length();\n+            }\n \n             browserName = OPERA;\n             try",
                "raw_url": "https://github.com/apache/turbine-core/raw/23d175ccdd42dce3cb31469414c48c2b39e76b92/src/java/org/apache/turbine/util/BrowserDetector.java",
                "sha": "e189d5987ca23613c7aa4f552f9321390fbf5148",
                "status": "modified"
            },
            {
                "additions": 73,
                "blob_url": "https://github.com/apache/turbine-core/blob/23d175ccdd42dce3cb31469414c48c2b39e76b92/src/test/org/apache/turbine/util/BrowserDetectorTest.java",
                "changes": 73,
                "contents_url": "https://api.github.com/repos/apache/turbine-core/contents/src/test/org/apache/turbine/util/BrowserDetectorTest.java?ref=23d175ccdd42dce3cb31469414c48c2b39e76b92",
                "deletions": 0,
                "filename": "src/test/org/apache/turbine/util/BrowserDetectorTest.java",
                "patch": "@@ -0,0 +1,73 @@\n+package org.apache.turbine.util;\n+\n+/*\n+ * Copyright 2005 The Apache Software Foundation.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\")\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+import org.apache.turbine.test.BaseTestCase;\n+\n+/**\n+ * Testing of the BrowserDetector class.\n+ *\n+ * @author <a href=\"mailto:seade@backstagetech.com.au\">Scott Eade</a>\n+ * @version $Id$\n+ */\n+public class BrowserDetectorTest extends BaseTestCase\n+{\n+    public BrowserDetectorTest(String name) throws Exception\n+    {\n+        super(name);\n+    }\n+\n+    public void testFirefox()\n+    {\n+        String userAgent = \"Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.8) Gecko/20051111 Firefox/1.5\";\n+        BrowserDetector bd = new BrowserDetector(userAgent);\n+        assertEquals(BrowserDetector.MOZILLA, bd.getBrowserName());\n+        // Should this really be 5?\n+        assertEquals(5f, bd.getBrowserVersion(), 0.0f);\n+        assertEquals(BrowserDetector.WINDOWS, bd.getBrowserPlatform());\n+    }\n+\n+    public void testOpera()\n+    {\n+        String userAgent = \"Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; en) Opera 8.02\";\n+        BrowserDetector bd = new BrowserDetector(userAgent);\n+        assertEquals(BrowserDetector.OPERA, bd.getBrowserName());\n+        assertEquals(8.02f, bd.getBrowserVersion(), 0.0f);\n+        assertEquals(BrowserDetector.WINDOWS, bd.getBrowserPlatform());\n+\n+        userAgent = \"Opera/7.51 (Windows NT 5.1; U) [en]\";\n+        bd = new BrowserDetector(userAgent);\n+        assertEquals(BrowserDetector.OPERA, bd.getBrowserName());\n+        assertEquals(7.51f, bd.getBrowserVersion(), 0.0f);\n+        assertEquals(BrowserDetector.WINDOWS, bd.getBrowserPlatform());\n+    }\n+\n+    public void testIE()\n+    {\n+        String userAgent = \"Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1)\";\n+        BrowserDetector bd = new BrowserDetector(userAgent);\n+        assertEquals(BrowserDetector.MSIE, bd.getBrowserName());\n+        assertEquals(6.0f, bd.getBrowserVersion(), 0.0f);\n+        assertEquals(BrowserDetector.WINDOWS, bd.getBrowserPlatform());\n+\n+        userAgent = \"Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1; .NET CLR 1.1.4322)\";\n+        bd = new BrowserDetector(userAgent);\n+        assertEquals(BrowserDetector.MSIE, bd.getBrowserName());\n+        assertEquals(6.0f, bd.getBrowserVersion(), 0.0f);\n+        assertEquals(BrowserDetector.WINDOWS, bd.getBrowserPlatform());\n+    }\n+}",
                "raw_url": "https://github.com/apache/turbine-core/raw/23d175ccdd42dce3cb31469414c48c2b39e76b92/src/test/org/apache/turbine/util/BrowserDetectorTest.java",
                "sha": "dac371dfa5a8ae531eb318cb4a9304cdefeba305",
                "status": "added"
            },
            {
                "additions": 5,
                "blob_url": "https://github.com/apache/turbine-core/blob/23d175ccdd42dce3cb31469414c48c2b39e76b92/xdocs/changes.xml",
                "changes": 6,
                "contents_url": "https://api.github.com/repos/apache/turbine-core/contents/xdocs/changes.xml?ref=23d175ccdd42dce3cb31469414c48c2b39e76b92",
                "deletions": 1,
                "filename": "xdocs/changes.xml",
                "patch": "@@ -24,8 +24,12 @@\n \n   <body>\n     <release version=\"2.4-M2\" date=\"in cvs\">\n+      <action dev=\"seade\" type=\"fix\">\n+        BrowserDetector was throwing a NPE for recent versions of Opera - this\n+        has been fixed.\n+      </action>\n       <action dev=\"sgoeschl\" type=\"update\">\n-\t\t\t\tSetting all members of BaseServiceBroker to private as it should be.\n+        Setting all members of BaseServiceBroker to private as it should be.\n       </action>\n       <action dev=\"sgoeschl\" type=\"update\">\n         Removed hack in Turbine.java forcing an early init of the AvalonComponentService. The",
                "raw_url": "https://github.com/apache/turbine-core/raw/23d175ccdd42dce3cb31469414c48c2b39e76b92/xdocs/changes.xml",
                "sha": "8ed1c40532244da349ac62a1a5d23d6c9fb6bee4",
                "status": "modified"
            }
        ],
        "message": "BrowserDetector was throwing an NPE for recent versions of Opera.\r\nAdded a test case.\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/turbine/core/trunk@350121 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/turbine-core/commit/79fd45484baf06b4e48945b47a718c0d2a611a92",
        "repo": "turbine-core",
        "unit_tests": [
            "BrowserDetectorTest.java"
        ]
    },
    "turbine-core_2e489d9": {
        "bug_id": "turbine-core_2e489d9",
        "commit": "https://github.com/apache/turbine-core/commit/2e489d97a49b093bb988bf8e4d02a8af95a9492f",
        "file": [
            {
                "additions": 14,
                "blob_url": "https://github.com/apache/turbine-core/blob/2e489d97a49b093bb988bf8e4d02a8af95a9492f/src/java/org/apache/turbine/services/intake/IntakeTool.java",
                "changes": 16,
                "contents_url": "https://api.github.com/repos/apache/turbine-core/contents/src/java/org/apache/turbine/services/intake/IntakeTool.java?ref=2e489d97a49b093bb988bf8e4d02a8af95a9492f",
                "deletions": 2,
                "filename": "src/java/org/apache/turbine/services/intake/IntakeTool.java",
                "patch": "@@ -406,7 +406,9 @@ public Group get(String groupName, String key)\n         {\n             throw new IntakeException(\"Intake.get: key == null\");\n         }\n-        return ((PullHelper) get(groupName)).setKey(key);\n+\n+        PullHelper ph = get(groupName);\n+        return (ph == null) ? null : ph.setKey(key);\n     }\n \n     /**\n@@ -416,7 +418,17 @@ public Group get(String groupName, String key)\n     public Group get(String groupName, String key, boolean create)\n             throws IntakeException\n     {\n-        return ((PullHelper) get(groupName)).setKey(key, create);\n+        if (groupName == null)\n+        {\n+            throw new IntakeException(\"Intake.get: groupName == null\");\n+        }\n+        if (key == null)\n+        {\n+            throw new IntakeException(\"Intake.get: key == null\");\n+        }\n+\n+        PullHelper ph = get(groupName);\n+        return (ph == null) ? null : ph.setKey(key, create);\n     }\n \n     /**",
                "raw_url": "https://github.com/apache/turbine-core/raw/2e489d97a49b093bb988bf8e4d02a8af95a9492f/src/java/org/apache/turbine/services/intake/IntakeTool.java",
                "sha": "886493eaadc45ee9dd141e6b4d54e8fd12452655",
                "status": "modified"
            }
        ],
        "message": "Fix NPEs in get()ting groups from the Intake Tool. Make sure that get(group, key, create)\nbehaves the same as get(group,key).\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/turbine/core/trunk@221702 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/turbine-core/commit/28caefbaa0b82625125ad535b8046b08e361e39c",
        "repo": "turbine-core",
        "unit_tests": [
            "IntakeToolTest.java"
        ]
    }
}