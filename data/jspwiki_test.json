{
    "jspwiki_1819daf": {
        "bug_id": "jspwiki_1819daf",
        "commit": "https://github.com/apache/jspwiki/commit/1819daff7b50eaf9fa5f14a23f59f155a4b8debf",
        "file": [
            {
                "additions": 4,
                "blob_url": "https://github.com/apache/jspwiki/blob/1819daff7b50eaf9fa5f14a23f59f155a4b8debf/ChangeLog",
                "changes": 4,
                "contents_url": "https://api.github.com/repos/apache/jspwiki/contents/ChangeLog?ref=1819daff7b50eaf9fa5f14a23f59f155a4b8debf",
                "deletions": 0,
                "filename": "ChangeLog",
                "patch": "@@ -4,6 +4,10 @@\n         \n         * Fixed issue in ContentManager.getPage() not properly\n         catching exceptions.\n+        \n+        * ContentManager now throws a PageNotFoundException when\n+        a page cannot be found, instead of returning null. This is\n+        to reduce the amount of NPEs that might otherwise appear.\n \n 2009-02-22  Andrew Jaquith <ajaquith AT apache DOT org>\n ",
                "raw_url": "https://github.com/apache/jspwiki/raw/1819daff7b50eaf9fa5f14a23f59f155a4b8debf/ChangeLog",
                "sha": "4a53fbc9a78dc93f7da6269ee015ac8239cc4cad",
                "status": "modified"
            },
            {
                "additions": 13,
                "blob_url": "https://github.com/apache/jspwiki/blob/1819daff7b50eaf9fa5f14a23f59f155a4b8debf/src/java/org/apache/wiki/PageManager.java",
                "changes": 15,
                "contents_url": "https://api.github.com/repos/apache/jspwiki/contents/src/java/org/apache/wiki/PageManager.java?ref=1819daff7b50eaf9fa5f14a23f59f155a4b8debf",
                "deletions": 2,
                "filename": "src/java/org/apache/wiki/PageManager.java",
                "patch": "@@ -144,7 +144,11 @@ public Collection getAllPages()\n     public String getPageText( String pageName, int version )\n         throws ProviderException\n     {\n-        return m_engine.getContentManager().getPage( WikiName.valueOf( pageName ), version ).getContentAsString();\n+        WikiPage p = m_engine.getContentManager().getPage( WikiName.valueOf( pageName ), version );\n+        \n+        if( p != null ) return p.getContentAsString();\n+        \n+        return null;\n     }\n \n     /**\n@@ -278,7 +282,14 @@ public String getProviderDescription()\n      */\n     public int getTotalPageCount()\n     {\n-        return m_engine.getContentManager().getTotalPageCount( null );\n+        try\n+        {\n+            return m_engine.getContentManager().getTotalPageCount( null );\n+        }\n+        catch( ProviderException e )\n+        {\n+            return -1;\n+        }\n     }\n \n     /**",
                "raw_url": "https://github.com/apache/jspwiki/raw/1819daff7b50eaf9fa5f14a23f59f155a4b8debf/src/java/org/apache/wiki/PageManager.java",
                "sha": "553019c0ca85b5fea8250b54db050f65dbcafd8d",
                "status": "modified"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/jspwiki/blob/1819daff7b50eaf9fa5f14a23f59f155a4b8debf/src/java/org/apache/wiki/Release.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/jspwiki/contents/src/java/org/apache/wiki/Release.java?ref=1819daff7b50eaf9fa5f14a23f59f155a4b8debf",
                "deletions": 1,
                "filename": "src/java/org/apache/wiki/Release.java",
                "patch": "@@ -77,7 +77,7 @@ Licensed to the Apache Software Foundation (ASF) under one\n      *  <p>\n      *  If the build identifier is empty, it is not added.\n      */\n-    public static final String     BUILD         = \"81\";\n+    public static final String     BUILD         = \"82\";\n     \n     /**\n      *  This is the generic version string you should use",
                "raw_url": "https://github.com/apache/jspwiki/raw/1819daff7b50eaf9fa5f14a23f59f155a4b8debf/src/java/org/apache/wiki/Release.java",
                "sha": "472675b6172da846e3ba812acddd115de7c84367",
                "status": "modified"
            },
            {
                "additions": 31,
                "blob_url": "https://github.com/apache/jspwiki/blob/1819daff7b50eaf9fa5f14a23f59f155a4b8debf/src/java/org/apache/wiki/content/ContentManager.java",
                "changes": 51,
                "contents_url": "https://api.github.com/repos/apache/jspwiki/contents/src/java/org/apache/wiki/content/ContentManager.java?ref=1819daff7b50eaf9fa5f14a23f59f155a4b8debf",
                "deletions": 20,
                "filename": "src/java/org/apache/wiki/content/ContentManager.java",
                "patch": "@@ -72,6 +72,11 @@ Licensed to the Apache Software Foundation (ASF) under one\n  *  and \"jackrabbit\" for <a href=\"http://jackrabbit.apache.org\">Apache Jackrabbit</a>.\n  *  <p>\n  *  If there is no property defined, defaults to \"priha\".\n+ *  <p>\n+ *  The methods in this class always return valid values. In case they cannot\n+ *  be acquired by some means, it throws an Exception.  This is different from\n+ *  the way the old PageManager used to work, so you can go ahead and get rid\n+ *  of all the null-checks from your old code.\n  *\n  *  FIXME:\n  *    * This class is currently designed to be a drop-in replacement for PageManager.\n@@ -554,7 +559,7 @@ public WikiPage getPage( String pageName, int version )\n      */\n \n     public List<WikiPage> getVersionHistory( WikiName path )\n-        throws ProviderException\n+        throws ProviderException, PageNotFoundException\n     {\n         List<WikiPage> result = new ArrayList<WikiPage>();\n         JCRWikiPage base = getPage(path);\n@@ -572,6 +577,10 @@ public WikiPage getPage( String pageName, int version )\n                 result.add( new JCRWikiPage(m_engine,v) );\n             }\n         }\n+        catch( PathNotFoundException e )\n+        {\n+            throw new PageNotFoundException(path);\n+        }\n         catch( RepositoryException e )\n         {\n             throw new ProviderException(\"Unable to get version history\",e);\n@@ -602,21 +611,14 @@ public String getProviderDescription()\n      *  \n      *  @param space Name of the Wiki space.  May be null, in which\n      *  case all spaces will be counted\n-     *  @return The number of pages, or -1, if there is an error.\n+     *  @return The number of pages.\n+     *  @throws ProviderException If there was an error.\n      */\n     // FIXME: Unfortunately this method is very slow, since it involves gobbling\n     //        up the entire repo.\n-    public int getTotalPageCount(String space)\n+    public int getTotalPageCount(String space) throws ProviderException\n     {\n-        try\n-        {\n-            return getAllPages(space).size();\n-        }\n-        catch( ProviderException e )\n-        {\n-            log.error( \"Unable to count pages: \",e );\n-            return -1;\n-        }\n+        return getAllPages(space).size();\n     }\n     /**\n      *  Returns true, if the page exists (any version).\n@@ -625,7 +627,6 @@ public int getTotalPageCount(String space)\n      *  @return A boolean value describing the existence of a page\n      *  @throws ProviderException If the backend fails or the wikiPath is illegal.\n      */\n- \n     public boolean pageExists( WikiName wikiPath )\n         throws ProviderException\n     {\n@@ -682,9 +683,10 @@ public boolean pageExists( WikiName wikiPath, int version )\n      *  \n      *  @param page The page to delete.\n      *  @throws ProviderException if the page fails\n+     *  @throws PageNotFoundException If the page in question does not exist.\n      */\n     public void deleteVersion( WikiPage page )\n-        throws ProviderException\n+        throws ProviderException, PageNotFoundException\n     {\n         fireEvent( WikiPageEvent.PAGE_DELETE_REQUEST, page.getName() );\n \n@@ -696,6 +698,10 @@ public void deleteVersion( WikiPage page )\n             \n             fireEvent( WikiPageEvent.PAGE_DELETED, jcrPage.getName() );\n         }\n+        catch( PathNotFoundException e )\n+        {\n+            throw new PageNotFoundException(page.getQualifiedName());\n+        }\n         catch( RepositoryException e )\n         {\n             throw new ProviderException(\"Unable to delete a page\",e);\n@@ -707,10 +713,11 @@ public void deleteVersion( WikiPage page )\n      *  \n      *  @param page The WikiPage to delete\n      *  @throws ProviderException If the backend fails or the page is illegal.\n+     *  @throws PageNotFoundException If the page has already disappeared.\n      */\n     \n     public void deletePage( WikiPage page )\n-        throws ProviderException\n+        throws ProviderException, PageNotFoundException\n     {\n         fireEvent( WikiPageEvent.PAGE_DELETE_REQUEST, page.getName() );\n \n@@ -741,6 +748,10 @@ public void deletePage( WikiPage page )\n             \n             fireEvent( WikiPageEvent.PAGE_DELETED, page.getName() );\n         }\n+        catch( PathNotFoundException e )\n+        {\n+            throw new PageNotFoundException(page.getQualifiedName());\n+        }\n         catch( RepositoryException e )\n         {\n             throw new ProviderException(\"Deletion of pages failed.\",e);\n@@ -1001,8 +1012,9 @@ public JCRWikiPage addPage( WikiName path, String contentType ) throws ProviderE\n      *  @param path the path\n      *  @return the {@link JCRWikiPage} \n      *  @throws ProviderException If the backend fails.\n+     *  @throws PageNotFoundException If the page does not exist.\n      */\n-    public JCRWikiPage getPage( WikiName path ) throws ProviderException\n+    public JCRWikiPage getPage( WikiName path ) throws ProviderException, PageNotFoundException\n     {\n         try\n         {\n@@ -1015,7 +1027,7 @@ public JCRWikiPage getPage( WikiName path ) throws ProviderException\n         }\n         catch( PathNotFoundException e )\n         {\n-            return null;\n+            throw new PageNotFoundException( path );\n         }\n         catch( RepositoryException e )\n         {\n@@ -1027,7 +1039,7 @@ public JCRWikiPage getPage( WikiName path ) throws ProviderException\n         }\n     }\n \n-    public JCRWikiPage getPage( WikiName path, int version ) throws ProviderException\n+    public JCRWikiPage getPage( WikiName path, int version ) throws ProviderException, PageNotFoundException\n     {\n         try\n         {\n@@ -1056,8 +1068,7 @@ public JCRWikiPage getPage( WikiName path, int version ) throws ProviderExceptio\n         }\n         catch( PathNotFoundException e )\n         {\n-            // Page was not found at all.\n-            return null;\n+            throw new PageNotFoundException( path );\n         }\n         catch( RepositoryException e )\n         {",
                "raw_url": "https://github.com/apache/jspwiki/raw/1819daff7b50eaf9fa5f14a23f59f155a4b8debf/src/java/org/apache/wiki/content/ContentManager.java",
                "sha": "729f4eabe92d2379364070651883dd3ab419b10e",
                "status": "modified"
            },
            {
                "additions": 52,
                "blob_url": "https://github.com/apache/jspwiki/blob/1819daff7b50eaf9fa5f14a23f59f155a4b8debf/src/java/org/apache/wiki/content/PageNotFoundException.java",
                "changes": 52,
                "contents_url": "https://api.github.com/repos/apache/jspwiki/contents/src/java/org/apache/wiki/content/PageNotFoundException.java?ref=1819daff7b50eaf9fa5f14a23f59f155a4b8debf",
                "deletions": 0,
                "filename": "src/java/org/apache/wiki/content/PageNotFoundException.java",
                "patch": "@@ -0,0 +1,52 @@\n+/*\n+    JSPWiki - a JSP-based WikiWiki clone.\n+\n+    Licensed to the Apache Software Foundation (ASF) under one\n+    or more contributor license agreements.  See the NOTICE file\n+    distributed with this work for additional information\n+    regarding copyright ownership.  The ASF licenses this file\n+    to you under the Apache License, Version 2.0 (the\n+    \"License\"); you may not use this file except in compliance\n+    with the License.  You may obtain a copy of the License at\n+\n+       http://www.apache.org/licenses/LICENSE-2.0\n+\n+    Unless required by applicable law or agreed to in writing,\n+    software distributed under the License is distributed on an\n+    \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+    KIND, either express or implied.  See the License for the\n+    specific language governing permissions and limitations\n+    under the License.      \n+ */\n+package org.apache.wiki.content;\n+\n+import org.apache.wiki.providers.ProviderException;\n+\n+/**\n+ *  A particular kind of exception noting that the WikiPage or attachment \n+ *  in question was not found.\n+ *  \n+ *  @since 3.0\n+ */\n+public class PageNotFoundException extends ProviderException\n+{\n+    private static final long serialVersionUID = 1L;\n+\n+    /**\n+     *  Construct an exception from a String path. \n+     *  @param path The path to the nonexistant WikiPage.\n+     */\n+    public PageNotFoundException( String path )\n+    {\n+        super( path );\n+    }\n+\n+    /**\n+     *  Construct an exception from a WikiName path. \n+     *  @param path The path to the nonexistant WikiPage.\n+     */\n+    public PageNotFoundException( WikiName path )\n+    {\n+        super( path.toString() );\n+    }\n+}",
                "raw_url": "https://github.com/apache/jspwiki/raw/1819daff7b50eaf9fa5f14a23f59f155a4b8debf/src/java/org/apache/wiki/content/PageNotFoundException.java",
                "sha": "62fbcf65d663e079e3dcfc4ece4ca899260592d0",
                "status": "added"
            }
        ],
        "message": "ContentManager now throws a PageNotFoundException when\na page cannot be found, instead of returning null. This is\nto reduce the amount of NPEs that might otherwise appear.\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/jspwiki/trunk@753038 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/jspwiki/commit/60034137ee0914b389cfe80d0d8e0f1eed380a4e",
        "patched_files": [
            "ChangeLog",
            "Release.java",
            "ContentManager.java"
        ],
        "repo": "jspwiki",
        "unit_tests": [
            "ContentManagerTest.java",
            "ReleaseTest.java"
        ]
    },
    "jspwiki_1b5a0c3": {
        "bug_id": "jspwiki_1b5a0c3",
        "commit": "https://github.com/apache/jspwiki/commit/1b5a0c3c11dd7aea448f966e96aea6fc27ea63d1",
        "file": [
            {
                "additions": 8,
                "blob_url": "https://github.com/apache/jspwiki/blob/1b5a0c3c11dd7aea448f966e96aea6fc27ea63d1/ChangeLog",
                "changes": 8,
                "contents_url": "https://api.github.com/repos/apache/jspwiki/contents/ChangeLog?ref=1b5a0c3c11dd7aea448f966e96aea6fc27ea63d1",
                "deletions": 0,
                "filename": "ChangeLog",
                "patch": "@@ -1,3 +1,11 @@\n+2014-04-20  Juan Pablo Santos (juanpablo AT apache DOT org)\n+\n+       * 2.10.1-svn-15\n+       \n+       * Fixed JSPWIKI-822 - NPE thrown by PluginContext#getText()\n+       \n+       * JSPWIKI-814 - VersioningFileProvider does migrate original page properties (thanks to Brian Burch)\n+\n 2014-04-20  Juan Pablo Santos (juanpablo AT apache DOT org)\n \n        * 2.10.1-svn-14",
                "raw_url": "https://github.com/apache/jspwiki/raw/1b5a0c3c11dd7aea448f966e96aea6fc27ea63d1/ChangeLog",
                "sha": "75d694b5d7cf6acae9186a39fb987646d18cbb59",
                "status": "modified"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/jspwiki/blob/1b5a0c3c11dd7aea448f966e96aea6fc27ea63d1/jspwiki-war/src/main/java/org/apache/wiki/Release.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/jspwiki/contents/jspwiki-war/src/main/java/org/apache/wiki/Release.java?ref=1b5a0c3c11dd7aea448f966e96aea6fc27ea63d1",
                "deletions": 1,
                "filename": "jspwiki-war/src/main/java/org/apache/wiki/Release.java",
                "patch": "@@ -72,7 +72,7 @@ Licensed to the Apache Software Foundation (ASF) under one\n      *  <p>\n      *  If the build identifier is empty, it is not added.\n      */\n-    public static final String     BUILD         = \"14\";\n+    public static final String     BUILD         = \"15\";\n     \n     /**\n      *  This is the generic version string you should use when printing out the version.  It is of ",
                "raw_url": "https://github.com/apache/jspwiki/raw/1b5a0c3c11dd7aea448f966e96aea6fc27ea63d1/jspwiki-war/src/main/java/org/apache/wiki/Release.java",
                "sha": "c7618450c001d2f5522618b68ed6971c1fb5a83b",
                "status": "modified"
            }
        ],
        "message": " * 2.10.1-svn-15\n       \n * Fixed JSPWIKI-822 - NPE thrown by PluginContext#getText()\n       \n * JSPWIKI-814 - VersioningFileProvider does migrate original page properties (thanks to Brian Burch)\n\ngit-svn-id: https://svn.apache.org/repos/asf/jspwiki/trunk@1589240 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/jspwiki/commit/539c6495cb2d40eb38b815deb82ed8868d85396b",
        "patched_files": [
            "ChangeLog",
            "Release.java"
        ],
        "repo": "jspwiki",
        "unit_tests": [
            "ReleaseTest.java"
        ]
    },
    "jspwiki_1e33295": {
        "bug_id": "jspwiki_1e33295",
        "commit": "https://github.com/apache/jspwiki/commit/1e3329514207242e1fc77a86281ce43739b5f4b5",
        "file": [
            {
                "additions": 10,
                "blob_url": "https://github.com/apache/jspwiki/blob/1e3329514207242e1fc77a86281ce43739b5f4b5/ChangeLog",
                "changes": 10,
                "contents_url": "https://api.github.com/repos/apache/jspwiki/contents/ChangeLog?ref=1e3329514207242e1fc77a86281ce43739b5f4b5",
                "deletions": 0,
                "filename": "ChangeLog",
                "patch": "@@ -1,3 +1,13 @@\n+2007-12-10  Andrew Jaquith <andrew AT apache DOT org>\n+\n+        * 2.6.1-cvs-2\n+        \n+        * [JSPWIKI-116] Under certain circumstances, calls to\n+        UserManager.getUserDatabase() are made before the user database is\n+        actually initialized, resulting in NPEs. To resolve, we simply replaced\n+        internal references to m_userDatabase with getUserDatabase(),\n+        which lazily initializes the database if it has not already happened.\n+        \n 2007-12-25  Janne Jalkanen <jalkanen@ecyrd.com>\n \n         * 2.6.1-cvs-1",
                "raw_url": "https://github.com/apache/jspwiki/raw/1e3329514207242e1fc77a86281ce43739b5f4b5/ChangeLog",
                "sha": "de38a46079e4c02b2b17f70ed1e514672c0a3f40",
                "status": "modified"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/jspwiki/blob/1e3329514207242e1fc77a86281ce43739b5f4b5/src/com/ecyrd/jspwiki/Release.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/jspwiki/contents/src/com/ecyrd/jspwiki/Release.java?ref=1e3329514207242e1fc77a86281ce43739b5f4b5",
                "deletions": 1,
                "filename": "src/com/ecyrd/jspwiki/Release.java",
                "patch": "@@ -66,7 +66,7 @@\n     public static final int        REVISION      = 6;\n \n     /** The minor revision.  */\n-    public static final int        MINORREVISION = 1;\n+    public static final int        MINORREVISION = 2;\n \n     /** The build number/identifier.  This is a String as opposed to an integer, just\n      *  so that people can add other identifiers to it.  The build number is incremented",
                "raw_url": "https://github.com/apache/jspwiki/raw/1e3329514207242e1fc77a86281ce43739b5f4b5/src/com/ecyrd/jspwiki/Release.java",
                "sha": "bec6f7219baaa30c4f515497d6135c6ab71da9cf",
                "status": "modified"
            },
            {
                "additions": 11,
                "blob_url": "https://github.com/apache/jspwiki/blob/1e3329514207242e1fc77a86281ce43739b5f4b5/src/com/ecyrd/jspwiki/auth/UserManager.java",
                "changes": 22,
                "contents_url": "https://api.github.com/repos/apache/jspwiki/contents/src/com/ecyrd/jspwiki/auth/UserManager.java?ref=1e3329514207242e1fc77a86281ce43739b5f4b5",
                "deletions": 11,
                "filename": "src/com/ecyrd/jspwiki/auth/UserManager.java",
                "patch": "@@ -215,7 +215,7 @@ public final UserProfile getUserProfile( WikiSession session )\n             user = session.getUserPrincipal();\n             try\n             {\n-                profile = m_database.find( user.getName() );\n+                profile = getUserDatabase().find( user.getName() );\n                 newProfile = false;\n             }\n             catch( NoSuchPrincipalException e )\n@@ -225,7 +225,7 @@ public final UserProfile getUserProfile( WikiSession session )\n \n         if ( newProfile )\n         {\n-            profile = m_database.newProfile();\n+            profile = getUserDatabase().newProfile();\n             if ( user != null )\n             {\n                 profile.setLoginName( user.getName() );\n@@ -299,7 +299,7 @@ public final void setUserProfile( WikiSession session, UserProfile profile ) thr\n         UserProfile otherProfile;\n         try\n         {\n-            otherProfile = m_database.findByLoginName( profile.getLoginName() );\n+            otherProfile = getUserDatabase().findByLoginName( profile.getLoginName() );\n             if ( otherProfile != null && !otherProfile.equals( oldProfile ) )\n             {\n                 throw new DuplicateUserException( \"The login name '\" + profile.getLoginName() + \"' is already taken.\" );\n@@ -310,7 +310,7 @@ public final void setUserProfile( WikiSession session, UserProfile profile ) thr\n         }\n         try\n         {\n-            otherProfile = m_database.findByFullName( profile.getFullname() );\n+            otherProfile = getUserDatabase().findByFullName( profile.getFullname() );\n             if ( otherProfile != null && !otherProfile.equals( oldProfile ) )\n             {\n                 throw new DuplicateUserException( \"The full name '\" + profile.getFullname() + \"' is already taken.\" );\n@@ -382,11 +382,11 @@ public final void setUserProfile( WikiSession session, UserProfile profile ) thr\n             // If login name changed, rename it first\n             if ( nameChanged && oldProfile != null && !oldProfile.getLoginName().equals( profile.getLoginName() ) )\n             {\n-                m_database.rename( oldProfile.getLoginName(), profile.getLoginName() );\n+                getUserDatabase().rename( oldProfile.getLoginName(), profile.getLoginName() );\n             }\n \n             // Now, save the profile (userdatabase will take care of timestamps for us)\n-            m_database.save( profile );\n+            getUserDatabase().save( profile );\n \n             if ( nameChanged )\n             {\n@@ -501,7 +501,7 @@ public final void validateProfile( WikiContext context, UserProfile profile )\n         // unless we're allowed to add profiles to the container\n         if ( m_engine.getAuthenticationManager().isContainerAuthenticated()\n              && !context.getWikiSession().isAuthenticated()\n-             && !m_database.isSharedWithContainer() )\n+             && !getUserDatabase().isSharedWithContainer() )\n         {\n             session.addMessage( SESSION_MESSAGES, rb.getString(\"security.error.createprofilebeforelogin\") );\n         }\n@@ -539,7 +539,7 @@ public final void validateProfile( WikiContext context, UserProfile profile )\n         // It's illegal to use as a full name someone else's login name\n         try\n         {\n-            otherProfile = m_database.find( fullName );\n+            otherProfile = getUserDatabase().find( fullName );\n             if ( otherProfile != null && !profile.equals( otherProfile ) && !fullName.equals( otherProfile.getFullname() ) )\n             {\n                 Object[] args = { fullName };\n@@ -553,7 +553,7 @@ public final void validateProfile( WikiContext context, UserProfile profile )\n         // It's illegal to use as a login name someone else's full name\n         try\n         {\n-            otherProfile = m_database.find( loginName );\n+            otherProfile = getUserDatabase().find( loginName );\n             if ( otherProfile != null && !profile.equals( otherProfile ) && !loginName.equals( otherProfile.getLoginName() ) )\n             {\n                 Object[] args = { loginName };\n@@ -568,7 +568,7 @@ public final void validateProfile( WikiContext context, UserProfile profile )\n     public Principal[] listWikiNames()\n         throws WikiSecurityException\n     {\n-        return m_database.getWikiNames();\n+        return getUserDatabase().getWikiNames();\n     }\n \n     /**\n@@ -822,7 +822,7 @@ public UserProfile getUserInfo( String uid )\n             throws NoSuchPrincipalException\n         {\n             log.info(\"request \"+uid);\n-            UserProfile prof = m_database.find( uid );\n+            UserProfile prof = getUserDatabase().find( uid );\n \n             log.info(\"answer \"+prof);\n ",
                "raw_url": "https://github.com/apache/jspwiki/raw/1e3329514207242e1fc77a86281ce43739b5f4b5/src/com/ecyrd/jspwiki/auth/UserManager.java",
                "sha": "ebc43378d609ea3cb16bccd50af776620c1fce24",
                "status": "modified"
            }
        ],
        "message": "[JSPWIKI-116] Under certain circumstances, calls to UserManager.getUserDatabase() are made before the user database is actually initialized, resulting in NPEs. To resolve, we simply replaced internal references to m_userDatabase with getUserDatabase(), which lazily initializes the database if it has not already happened.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/jspwiki/trunk@626951 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/jspwiki/commit/3b4d89be7cbba860ddbdfa3a9f52a261096ed569",
        "patched_files": [
            "UserManager.java",
            "ChangeLog",
            "Release.java"
        ],
        "repo": "jspwiki",
        "unit_tests": [
            "UserManagerTest.java",
            "ReleaseTest.java"
        ]
    },
    "jspwiki_1e79951": {
        "bug_id": "jspwiki_1e79951",
        "commit": "https://github.com/apache/jspwiki/commit/1e79951c1f3136e03e23b0fa45007f28669068f5",
        "file": [
            {
                "additions": 7,
                "blob_url": "https://github.com/apache/jspwiki/blob/1e79951c1f3136e03e23b0fa45007f28669068f5/ChangeLog",
                "changes": 7,
                "contents_url": "https://api.github.com/repos/apache/jspwiki/contents/ChangeLog?ref=1e79951c1f3136e03e23b0fa45007f28669068f5",
                "deletions": 0,
                "filename": "ChangeLog",
                "patch": "@@ -1,3 +1,10 @@\n+2007-08-17  Juan Pablo Santos <juanpablo.santos@gmail.com>\n+\n+        * 2.5.117 - Page renaming caused a NullPointerException under some circumstances,\n+        filed as Bug 85. Fixed, seemed to be caused when renaming a non-existing page \n+        (cfr. with http://bugs.jspwiki.org/show_bug.cgi?id=85). Added some JUnit tests to \n+        check this.\n+        \n 2007-08-15  Dirk Frederickx (dirk.frederickx@gmail.com)\n \n         * 2.5.116 - More fixes for IE",
                "raw_url": "https://github.com/apache/jspwiki/raw/1e79951c1f3136e03e23b0fa45007f28669068f5/ChangeLog",
                "sha": "abb36e73146da3fcd2529df9a36649f4862cfb3a",
                "status": "modified"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/jspwiki/blob/1e79951c1f3136e03e23b0fa45007f28669068f5/src/com/ecyrd/jspwiki/PageRenamer.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/jspwiki/contents/src/com/ecyrd/jspwiki/PageRenamer.java?ref=1e79951c1f3136e03e23b0fa45007f28669068f5",
                "deletions": 1,
                "filename": "src/com/ecyrd/jspwiki/PageRenamer.java",
                "patch": "@@ -233,7 +233,7 @@ private void updateReferrerOnRename(WikiContext context, String oldName, String\n \n             if (context.getPage() != null)\n             {\n-                PageLock lock = m_wikiEngine.getPageManager().getCurrentLock( m_wikiEngine.getPage(referrerName) );\n+                PageLock lock = m_wikiEngine.getPageManager().getCurrentLock( context.getPage() );\n                 m_wikiEngine.getPageManager().unlockPage( lock );\n \n                 tempCtx.getPage().setAuthor( context.getCurrentUser().getName() );",
                "raw_url": "https://github.com/apache/jspwiki/raw/1e79951c1f3136e03e23b0fa45007f28669068f5/src/com/ecyrd/jspwiki/PageRenamer.java",
                "sha": "80d663d420afc32496be4f32224e4cb6a8c83a62",
                "status": "modified"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/jspwiki/blob/1e79951c1f3136e03e23b0fa45007f28669068f5/src/com/ecyrd/jspwiki/Release.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/jspwiki/contents/src/com/ecyrd/jspwiki/Release.java?ref=1e79951c1f3136e03e23b0fa45007f28669068f5",
                "deletions": 1,
                "filename": "src/com/ecyrd/jspwiki/Release.java",
                "patch": "@@ -64,7 +64,7 @@\n     public static final int        REVISION      = 5;\n \n     /** The minor revision, or a \"build number\", if you wish. */\n-    public static final int        MINORREVISION = 116;\n+    public static final int        MINORREVISION = 117;\n \n     /**\n      *  This is the generic version string you should use",
                "raw_url": "https://github.com/apache/jspwiki/raw/1e79951c1f3136e03e23b0fa45007f28669068f5/src/com/ecyrd/jspwiki/Release.java",
                "sha": "5f321e6723f86bc2d49406da6c8ac76717548bca",
                "status": "modified"
            },
            {
                "additions": 72,
                "blob_url": "https://github.com/apache/jspwiki/blob/1e79951c1f3136e03e23b0fa45007f28669068f5/tests/com/ecyrd/jspwiki/PageRenamerTest.java",
                "changes": 72,
                "contents_url": "https://api.github.com/repos/apache/jspwiki/contents/tests/com/ecyrd/jspwiki/PageRenamerTest.java?ref=1e79951c1f3136e03e23b0fa45007f28669068f5",
                "deletions": 0,
                "filename": "tests/com/ecyrd/jspwiki/PageRenamerTest.java",
                "patch": "@@ -322,6 +322,78 @@ public void testExtendedLinks() throws Exception\n         assertEquals( \"[Link to Test|Test|target='_new']\", m_engine.getText( \"TestPage\" ).trim() );\n     }\n     \n+    public void testBug85_case1() throws Exception \n+    {\n+        // renaming a non-existing page\n+        // This fails under 2.5.116, cfr. with http://bugs.jspwiki.org/show_bug.cgi?id=85\n+        // m_engine.saveText( \"TestPage\", \"blablahblahbla\" );\n+        try\n+        {\n+            rename(\"TestPage123\", \"Main8887\");\n+            rename(\"Main8887\", \"TestPage123\"); \n+        }\n+        catch (NullPointerException npe)\n+        {\n+            npe.printStackTrace();\n+            System.out.println(\"NPE: Bug 85 caught?\");\n+            fail();\n+        }\n+    }\n+    \n+    public void testBug85_case2() throws Exception \n+    {\n+        try\n+        {\n+            // renaming a non-existing page, but we call m_engine.saveText() before renaming \n+            // this does not fail under 2.5.116\n+            m_engine.saveText( \"TestPage1234\", \"blablahblahbla\" );\n+            rename(\"TestPage1234\", \"Main8887\");\n+            rename(\"Main8887\", \"TestPage1234\");\n+        }\n+        catch (NullPointerException npe)\n+        {\n+            npe.printStackTrace();\n+            System.out.println(\"NPE: Bug 85 caught?\");\n+            fail();\n+        }\n+    }\n+    \n+    public void testBug85_case3() throws Exception \n+    {\n+        try\n+        {\n+            // renaming an existing page\n+            // this does not fail under 2.5.116\n+            // m_engine.saveText( \"Main\", \"blablahblahbla\" );\n+            rename(\"Main\", \"Main8887\");\n+            rename(\"Main8887\", \"Main\");\n+        }\n+        catch (NullPointerException npe)\n+        {\n+            npe.printStackTrace();\n+            System.out.println(\"NPE: Bug 85 caught?\");\n+            fail();\n+        }\n+    }\n+    \n+    public void testBug85_case4() throws Exception \n+    {\n+        try\n+        {\n+            // renaming an existing page, and we call m_engine.saveText() before renaming\n+            // this does not fail under 2.5.116\n+            m_engine.saveText( \"Main\", \"blablahblahbla\" );\n+            rename(\"Main\", \"Main8887\");\n+            rename(\"Main8887\", \"Main\");\n+        }\n+        catch (NullPointerException npe)\n+        {\n+            npe.printStackTrace();\n+            System.out.println(\"NPE: Bug 85 caught?\");\n+            fail();\n+        }\n+    }\n+    \n     public static Test suite()\n     {\n         return new TestSuite( PageRenamerTest.class );",
                "raw_url": "https://github.com/apache/jspwiki/raw/1e79951c1f3136e03e23b0fa45007f28669068f5/tests/com/ecyrd/jspwiki/PageRenamerTest.java",
                "sha": "be6dd7995cc90d509ce323d5982b436be21688b5",
                "status": "modified"
            }
        ],
        "message": "2.5.117 - Page renaming caused a NullPointerException under some circumstances,\n        filed as Bug 85. Fixed, seemed to be caused when renaming a non-existing page\n        (cfr. with http://bugs.jspwiki.org/show_bug.cgi?id=85). Added some JUnit tests to\n        check this.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/jspwiki/trunk@626714 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/jspwiki/commit/8c5533ae32d1e215b83f7d4c844dd77535251f9c",
        "patched_files": [
            "PageRenamer.java",
            "ChangeLog",
            "Release.java"
        ],
        "repo": "jspwiki",
        "unit_tests": [
            "PageRenamerTest.java",
            "ReleaseTest.java"
        ]
    },
    "jspwiki_1ec1151": {
        "bug_id": "jspwiki_1ec1151",
        "commit": "https://github.com/apache/jspwiki/commit/1ec1151a07212fba3d6193c9c57e2bfe530eb2c3",
        "file": [
            {
                "additions": 0,
                "blob_url": "https://github.com/apache/jspwiki/blob/1ec1151a07212fba3d6193c9c57e2bfe530eb2c3/jspwiki-main/src/main/java/org/apache/wiki/WikiEngine.java",
                "changes": 46,
                "contents_url": "https://api.github.com/repos/apache/jspwiki/contents/jspwiki-main/src/main/java/org/apache/wiki/WikiEngine.java?ref=1ec1151a07212fba3d6193c9c57e2bfe530eb2c3",
                "deletions": 46,
                "filename": "jspwiki-main/src/main/java/org/apache/wiki/WikiEngine.java",
                "patch": "@@ -1834,52 +1834,6 @@ public WikiContext createContext( final HttpServletRequest request, final String\n         return new WikiContext( this, request, command );\n     }\n \n-    /**\n-     *  Deletes a page or an attachment completely, including all versions.  If the page\n-     *  does not exist, does nothing.\n-     *\n-     * @param pageName The name of the page.\n-     * @throws ProviderException If something goes wrong.\n-     */\n-    public void deletePage( final String pageName ) throws ProviderException {\n-        final WikiPage p = getPage( pageName );\n-        if( p != null ) {\n-            if( p instanceof Attachment ) {\n-                m_attachmentManager.deleteAttachment( ( Attachment )p );\n-            } else {\n-                final Collection< String > refTo = m_referenceManager.findRefersTo( pageName );\n-                // May return null, if the page does not exist or has not been indexed yet.\n-\n-                if( m_attachmentManager.hasAttachments( p ) ) {\n-                    final List< Attachment > attachments = m_attachmentManager.listAttachments( p );\n-                    for( final Attachment attachment : attachments ) {\n-                        if( refTo != null ) {\n-                            refTo.remove( attachment.getName() );\n-                        }\n-\n-                        m_attachmentManager.deleteAttachment( attachment );\n-                    }\n-                }\n-                m_pageManager.deletePage( p );\n-                firePageEvent( WikiPageEvent.PAGE_DELETED, pageName );\n-            }\n-        }\n-    }\n-\n-    /**\n-     *  Deletes a specific version of a page or an attachment.\n-     *\n-     *  @param page The page object.\n-     *  @throws ProviderException If something goes wrong.\n-     */\n-    public void deleteVersion( final WikiPage page ) throws ProviderException {\n-        if( page instanceof Attachment ) {\n-            m_attachmentManager.deleteVersion( (Attachment) page );\n-        } else {\n-            m_pageManager.deleteVersion( page );\n-        }\n-    }\n-\n     /**\n      *  Returns the URL of the global RSS file.  May be null, if the\n      *  RSS file generation is not operational.",
                "raw_url": "https://github.com/apache/jspwiki/raw/1ec1151a07212fba3d6193c9c57e2bfe530eb2c3/jspwiki-main/src/main/java/org/apache/wiki/WikiEngine.java",
                "sha": "19a2eaa910fc444e4bddeb973d0ce916b455c069",
                "status": "modified"
            },
            {
                "additions": 41,
                "blob_url": "https://github.com/apache/jspwiki/blob/1ec1151a07212fba3d6193c9c57e2bfe530eb2c3/jspwiki-main/src/main/java/org/apache/wiki/pages/DefaultPageManager.java",
                "changes": 47,
                "contents_url": "https://api.github.com/repos/apache/jspwiki/contents/jspwiki-main/src/main/java/org/apache/wiki/pages/DefaultPageManager.java?ref=1ec1151a07212fba3d6193c9c57e2bfe530eb2c3",
                "deletions": 6,
                "filename": "jspwiki-main/src/main/java/org/apache/wiki/pages/DefaultPageManager.java",
                "patch": "@@ -27,6 +27,7 @@ Licensed to the Apache Software Foundation (ASF) under one\n import org.apache.wiki.api.exceptions.NoRequiredPropertyException;\n import org.apache.wiki.api.exceptions.ProviderException;\n import org.apache.wiki.api.exceptions.WikiException;\n+import org.apache.wiki.attachment.Attachment;\n import org.apache.wiki.auth.WikiPrincipal;\n import org.apache.wiki.auth.WikiSecurityException;\n import org.apache.wiki.auth.acl.Acl;\n@@ -363,18 +364,52 @@ public boolean pageExists(String pageName, int version) throws ProviderException\n         return m_provider.pageExists(pageName, version);\n     }\n \n-    /* (non-Javadoc)\n+    /**\n+     * {@inheritDoc}\n      * @see org.apache.wiki.pages.PageManager#deleteVersion(org.apache.wiki.WikiPage)\n      */\n     @Override\n-    public void deleteVersion(WikiPage page) throws ProviderException {\n-        m_provider.deleteVersion(page.getName(), page.getVersion());\n+    public void deleteVersion( final WikiPage page ) throws ProviderException {\n+        if( page instanceof Attachment ) {\n+            m_engine.getAttachmentManager().deleteVersion( (Attachment) page );\n+        } else {\n+            m_provider.deleteVersion(page.getName(), page.getVersion());\n+            // FIXME: If this was the latest, reindex Lucene\n+            // FIXME: Update RefMgr\n+        }\n+    }\n \n-        // FIXME: If this was the latest, reindex Lucene\n-        // FIXME: Update RefMgr\n+    /**\n+     * {@inheritDoc}\n+     * @see org.apache.wiki.pages.PageManager#deletePage(java.lang.String)\n+     */\n+    public void deletePage( final String pageName ) throws ProviderException {\n+        final WikiPage p = m_engine.getPage( pageName );\n+        if( p != null ) {\n+            if( p instanceof Attachment ) {\n+                m_engine.getAttachmentManager().deleteAttachment( ( Attachment )p );\n+            } else {\n+                final Collection< String > refTo = m_engine.getReferenceManager().findRefersTo( pageName );\n+                // May return null, if the page does not exist or has not been indexed yet.\n+\n+                if( m_engine.getAttachmentManager().hasAttachments( p ) ) {\n+                    final List< Attachment > attachments = m_engine.getAttachmentManager().listAttachments( p );\n+                    for( final Attachment attachment : attachments ) {\n+                        if( refTo != null ) {\n+                            refTo.remove( attachment.getName() );\n+                        }\n+\n+                        m_engine.getAttachmentManager().deleteAttachment( attachment );\n+                    }\n+                }\n+                deletePage( p );\n+                fireEvent( WikiPageEvent.PAGE_DELETED, pageName );\n+            }\n+        }\n     }\n \n-    /* (non-Javadoc)\n+    /**\n+     * {@inheritDoc}\n      * @see org.apache.wiki.pages.PageManager#deletePage(org.apache.wiki.WikiPage)\n      */\n     @Override",
                "raw_url": "https://github.com/apache/jspwiki/raw/1ec1151a07212fba3d6193c9c57e2bfe530eb2c3/jspwiki-main/src/main/java/org/apache/wiki/pages/DefaultPageManager.java",
                "sha": "e4f97b9a434da606000b890c3172d0b0a44b90dc",
                "status": "modified"
            },
            {
                "additions": 16,
                "blob_url": "https://github.com/apache/jspwiki/blob/1ec1151a07212fba3d6193c9c57e2bfe530eb2c3/jspwiki-main/src/main/java/org/apache/wiki/pages/PageManager.java",
                "changes": 28,
                "contents_url": "https://api.github.com/repos/apache/jspwiki/contents/jspwiki-main/src/main/java/org/apache/wiki/pages/PageManager.java?ref=1ec1151a07212fba3d6193c9c57e2bfe530eb2c3",
                "deletions": 12,
                "filename": "jspwiki-main/src/main/java/org/apache/wiki/pages/PageManager.java",
                "patch": "@@ -18,16 +18,16 @@ Licensed to the Apache Software Foundation (ASF) under one\n  */\n package org.apache.wiki.pages;\n \n-import java.util.Collection;\n-import java.util.List;\n-\n import org.apache.wiki.WikiEngine;\n import org.apache.wiki.WikiPage;\n import org.apache.wiki.api.exceptions.ProviderException;\n import org.apache.wiki.event.WikiEvent;\n import org.apache.wiki.event.WikiEventListener;\n import org.apache.wiki.providers.WikiPageProvider;\n \n+import java.util.Collection;\n+import java.util.List;\n+\n \n public interface PageManager extends WikiEventListener {\n \n@@ -47,7 +47,7 @@ Licensed to the Apache Software Foundation (ASF) under one\n \n     /**\n      * Returns all pages in some random order.  If you need just the page names,\n-     * please see {@link org.apache.wiki.ReferenceManager#findCreated() ReferenceManager#findCreated()}, which is probably a lot\n+     * please see {@link org.apache.wiki.references.ReferenceManager#findCreated() ReferenceManager#findCreated()}, which is probably a lot\n      * faster.  This method may cause repository access.\n      *\n      * @return A Collection of WikiPage objects.\n@@ -85,8 +85,7 @@ Licensed to the Apache Software Foundation (ASF) under one\n     void putPageText(WikiPage page, String content) throws ProviderException;\n \n     /**\n-     * Locks page for editing.  Note, however, that the PageManager\n-     * will in no way prevent you from actually editing this page;\n+     * Locks page for editing.  Note, however, that the PageManager will in no way prevent you from actually editing this page;\n      * the lock is just for information.\n      *\n      * @param page WikiPage to lock\n@@ -103,8 +102,7 @@ Licensed to the Apache Software Foundation (ASF) under one\n     void unlockPage(PageLock lock);\n \n     /**\n-     * Returns the current lock owner of a page.  If the page is not\n-     * locked, will return null.\n+     * Returns the current lock owner of a page.  If the page is not locked, will return null.\n      *\n      * @param page The page to check the lock for\n      * @return Current lock, or null, if there is no lock\n@@ -115,8 +113,7 @@ Licensed to the Apache Software Foundation (ASF) under one\n      * Returns a list of currently applicable locks.  Note that by the time you get the list,\n      * the locks may have already expired, so use this only for informational purposes.\n      *\n-     * @return List of PageLock objects, detailing the locks.  If no locks exist, returns\n-     *         an empty list.\n+     * @return List of PageLock objects, detailing the locks.  If no locks exist, returns an empty list.\n      * @since 2.0.22.\n      */\n     List<PageLock> getActiveLocks();\n@@ -127,8 +124,7 @@ Licensed to the Apache Software Foundation (ASF) under one\n      * @param pageName The name of the page\n      * @param version  A version number\n      * @return A WikiPage object, or null, if the page does not exist\n-     * @throws ProviderException If there is something wrong with the page\n-     *                           name or the repository\n+     * @throws ProviderException If there is something wrong with the page name or the repository\n      */\n     WikiPage getPageInfo(String pageName, int version) throws ProviderException;\n \n@@ -186,6 +182,14 @@ Licensed to the Apache Software Foundation (ASF) under one\n      */\n     void deleteVersion(WikiPage page) throws ProviderException;\n \n+    /**\n+     *  Deletes a page or an attachment completely, including all versions.  If the page does not exist, does nothing.\n+     *\n+     * @param pageName The name of the page.\n+     * @throws ProviderException If something goes wrong.\n+     */\n+    void deletePage( final String pageName ) throws ProviderException;\n+\n     /**\n      * Deletes an entire page, all versions, all traces.\n      *",
                "raw_url": "https://github.com/apache/jspwiki/raw/1ec1151a07212fba3d6193c9c57e2bfe530eb2c3/jspwiki-main/src/main/java/org/apache/wiki/pages/PageManager.java",
                "sha": "7337c8d30aac6d375a596449b79fc33fe20e6e29",
                "status": "modified"
            },
            {
                "additions": 0,
                "blob_url": "https://github.com/apache/jspwiki/blob/1ec1151a07212fba3d6193c9c57e2bfe530eb2c3/jspwiki-main/src/test/java/org/apache/wiki/TestEngine.java",
                "changes": 9,
                "contents_url": "https://api.github.com/repos/apache/jspwiki/contents/jspwiki-main/src/test/java/org/apache/wiki/TestEngine.java?ref=1ec1151a07212fba3d6193c9c57e2bfe530eb2c3",
                "deletions": 9,
                "filename": "jspwiki-main/src/test/java/org/apache/wiki/TestEngine.java",
                "patch": "@@ -282,15 +282,6 @@ protected static String mangleName( String pagename ) {\n         return pagename;\n     }\n \n-    public void deletePage( final String pageName ) throws ProviderException {\n-        try {\n-            super.deletePage( pageName );\n-        } catch( final ProviderException | RuntimeException e ) {\n-            log.error( e.getMessage(), e );\n-            throw e;\n-        }\n-    }\n-\n     /**\n      *  Removes a page, but not any auxiliary information.  Works only\n      *  with FileSystemProvider.",
                "raw_url": "https://github.com/apache/jspwiki/raw/1ec1151a07212fba3d6193c9c57e2bfe530eb2c3/jspwiki-main/src/test/java/org/apache/wiki/TestEngine.java",
                "sha": "6115fea157e04de6d8a4c59bdd76bda5dc3cfe74",
                "status": "modified"
            },
            {
                "additions": 7,
                "blob_url": "https://github.com/apache/jspwiki/blob/1ec1151a07212fba3d6193c9c57e2bfe530eb2c3/jspwiki-main/src/test/java/org/apache/wiki/WikiEngineTest.java",
                "changes": 14,
                "contents_url": "https://api.github.com/repos/apache/jspwiki/contents/jspwiki-main/src/test/java/org/apache/wiki/WikiEngineTest.java?ref=1ec1151a07212fba3d6193c9c57e2bfe530eb2c3",
                "deletions": 7,
                "filename": "jspwiki-main/src/test/java/org/apache/wiki/WikiEngineTest.java",
                "patch": "@@ -568,7 +568,7 @@ public void testDeletePage()\n \n         WikiPage page = m_engine.getPage( NAME1, WikiProvider.LATEST_VERSION );\n \n-        m_engine.deletePage( page.getName() );\n+        m_engine.getPageManager().deletePage( page.getName() );\n \n         Assertions.assertFalse( saved.exists(), \"Page has not been removed!\" );\n     }\n@@ -596,7 +596,7 @@ public void testDeletePageAndAttachments()\n \n         WikiPage page = m_engine.getPage( NAME1, WikiProvider.LATEST_VERSION );\n \n-        m_engine.deletePage( page.getName() );\n+        m_engine.getPageManager().deletePage( page.getName() );\n \n         Assertions.assertFalse( saved.exists(), \"Page has not been removed!\" );\n         Assertions.assertFalse( attfile.exists(), \"Attachment has not been removed\" );\n@@ -628,9 +628,9 @@ public void testDeletePageAndAttachments2()\n \n         att = m_engine.getAttachmentManager().getAttachmentInfo(NAME1+\"/TestAtt.txt\");\n \n-        m_engine.deletePage(att.getName());\n+        m_engine.getPageManager().deletePage(att.getName());\n \n-        m_engine.deletePage( NAME1 );\n+        m_engine.getPageManager().deletePage( NAME1 );\n \n         Assertions.assertNull( m_engine.getPage(NAME1), \"Page not removed\" );\n         Assertions.assertNull( m_engine.getPage(NAME1+\"/TestAtt.txt\"), \"Att not removed\" );\n@@ -653,7 +653,7 @@ public void testDeleteVersion()\n \n         WikiPage page = engine.getPage( NAME1, 3 );\n \n-        engine.deleteVersion( page );\n+        engine.getPageManager().deleteVersion( page );\n \n         Assertions.assertNull( engine.getPage( NAME1, 3 ), \"got page\" );\n \n@@ -675,7 +675,7 @@ public void testDeleteVersion2()\n \n         WikiPage page = engine.getPage( NAME1, 1 );\n \n-        engine.deleteVersion( page );\n+        engine.getPageManager().deleteVersion( page );\n \n         Assertions.assertNull( engine.getPage( NAME1, 1 ), \"got page\" );\n \n@@ -714,7 +714,7 @@ public void testOldVersionVars()\n         // FIXME: The following must run as well\n         Assertions.assertEquals( \"notbar\", v2.getAttribute(\"foo\"), \"V2\" );\n \n-        engine.deletePage( NAME1 );\n+        engine.getPageManager().deletePage( NAME1 );\n     }\n \n     @Test",
                "raw_url": "https://github.com/apache/jspwiki/raw/1ec1151a07212fba3d6193c9c57e2bfe530eb2c3/jspwiki-main/src/test/java/org/apache/wiki/WikiEngineTest.java",
                "sha": "4cf193084865093a1d5de52599c8ad28b730f176",
                "status": "modified"
            },
            {
                "additions": 10,
                "blob_url": "https://github.com/apache/jspwiki/blob/1ec1151a07212fba3d6193c9c57e2bfe530eb2c3/jspwiki-main/src/test/java/org/apache/wiki/attachment/AttachmentManagerTest.java",
                "changes": 21,
                "contents_url": "https://api.github.com/repos/apache/jspwiki/contents/jspwiki-main/src/test/java/org/apache/wiki/attachment/AttachmentManagerTest.java?ref=1ec1151a07212fba3d6193c9c57e2bfe530eb2c3",
                "deletions": 11,
                "filename": "jspwiki-main/src/test/java/org/apache/wiki/attachment/AttachmentManagerTest.java",
                "patch": "@@ -12,15 +12,7 @@\n  * limitations under the License.\n  */\n package org.apache.wiki.attachment;\n-import java.io.File;\n-import java.io.FileWriter;\n-import java.io.InputStream;\n-import java.io.InputStreamReader;\n-import java.io.StringReader;\n-import java.io.StringWriter;\n-import java.util.List;\n-import java.util.Properties;\n-\n+import net.sf.ehcache.CacheManager;\n import org.apache.wiki.TestEngine;\n import org.apache.wiki.WikiContext;\n import org.apache.wiki.WikiPage;\n@@ -31,7 +23,14 @@\n import org.junit.jupiter.api.BeforeEach;\n import org.junit.jupiter.api.Test;\n \n-import net.sf.ehcache.CacheManager;\n+import java.io.File;\n+import java.io.FileWriter;\n+import java.io.InputStream;\n+import java.io.InputStreamReader;\n+import java.io.StringReader;\n+import java.io.StringWriter;\n+import java.util.List;\n+import java.util.Properties;\n \n public class AttachmentManagerTest\n {\n@@ -361,7 +360,7 @@ public void testNonexistentPage() throws Exception\n         }\n         finally\n         {\n-            m_engine.deletePage(\"TestPage\");\n+            m_engine.getPageManager().deletePage(\"TestPage\");\n         }\n     }\n ",
                "raw_url": "https://github.com/apache/jspwiki/raw/1ec1151a07212fba3d6193c9c57e2bfe530eb2c3/jspwiki-main/src/test/java/org/apache/wiki/attachment/AttachmentManagerTest.java",
                "sha": "8128b4758ae2e83d6542bb024323db0211e26516",
                "status": "modified"
            },
            {
                "additions": 5,
                "blob_url": "https://github.com/apache/jspwiki/blob/1ec1151a07212fba3d6193c9c57e2bfe530eb2c3/jspwiki-main/src/test/java/org/apache/wiki/auth/AuthorizationManagerTest.java",
                "changes": 10,
                "contents_url": "https://api.github.com/repos/apache/jspwiki/contents/jspwiki-main/src/test/java/org/apache/wiki/auth/AuthorizationManagerTest.java?ref=1ec1151a07212fba3d6193c9c57e2bfe530eb2c3",
                "deletions": 5,
                "filename": "jspwiki-main/src/test/java/org/apache/wiki/auth/AuthorizationManagerTest.java",
                "patch": "@@ -114,7 +114,7 @@ public void testDefaultPermissions() throws Exception\n         // Delete the test page\n         try\n         {\n-            m_engine.deletePage( \"TestDefaultPage\" );\n+            m_engine.getPageManager().deletePage( \"TestDefaultPage\" );\n         }\n         catch( ProviderException e )\n         {\n@@ -294,7 +294,7 @@ public void testInheritedPermissions() throws Exception\n \n         // Delete test page & attachment\n         m_engine.getAttachmentManager().deleteAttachment( att );\n-        m_engine.deletePage( \"Test\" );\n+        m_engine.getPageManager().deletePage( \"Test\" );\n     }\n \n     @Test\n@@ -326,7 +326,7 @@ public void testInheritedAclPermissions() throws Exception\n \n         // Delete test page & attachment\n         m_engine.getAttachmentManager().deleteAttachment( att );\n-        m_engine.deletePage( \"Test\" );\n+        m_engine.getPageManager().deletePage( \"Test\" );\n     }\n \n     @Test\n@@ -468,7 +468,7 @@ public void testPrincipalAcl() throws Exception\n         // Cleanup\n         try\n         {\n-            m_engine.deletePage( \"Test\" );\n+            m_engine.getPageManager().deletePage( \"Test\" );\n         }\n         catch( ProviderException e )\n         {\n@@ -590,7 +590,7 @@ public void testRoleAcl() throws Exception\n         // Cleanup\n         try\n         {\n-            m_engine.deletePage( \"Test\" );\n+            m_engine.getPageManager().deletePage( \"Test\" );\n         }\n         catch( ProviderException e )\n         {",
                "raw_url": "https://github.com/apache/jspwiki/raw/1ec1151a07212fba3d6193c9c57e2bfe530eb2c3/jspwiki-main/src/test/java/org/apache/wiki/auth/AuthorizationManagerTest.java",
                "sha": "674c821fb057c3ea4f172c0ab5baf49e5543fd49",
                "status": "modified"
            },
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/jspwiki/blob/1ec1151a07212fba3d6193c9c57e2bfe530eb2c3/jspwiki-main/src/test/java/org/apache/wiki/auth/UserManagerTest.java",
                "changes": 4,
                "contents_url": "https://api.github.com/repos/apache/jspwiki/contents/jspwiki-main/src/test/java/org/apache/wiki/auth/UserManagerTest.java?ref=1ec1151a07212fba3d6193c9c57e2bfe530eb2c3",
                "deletions": 2,
                "filename": "jspwiki-main/src/test/java/org/apache/wiki/auth/UserManagerTest.java",
                "patch": "@@ -194,7 +194,7 @@ public void testSetRenamedUserProfile() throws Exception {\n         Assertions.assertEquals( expectedText, actualText );\n \n         // Remove our test page\n-        m_engine.deletePage( pageName );\n+        m_engine.getPageManager().deletePage( pageName );\n \n         // Setup Step 6: re-create the group with our old test user names in it\n         group = groupManager.parseGroup( m_groupName, \"Alice \\n Bob \\n Charlie \\n \" + oldLogin + \"\\n\" + oldName, true );\n@@ -259,7 +259,7 @@ public void testSetRenamedUserProfile() throws Exception {\n         groupManager.removeGroup( group.getName() );\n         Assertions.assertEquals( oldGroupCount, groupManager.getRoles().length );\n \n-        m_engine.deletePage( pageName );\n+        m_engine.getPageManager().deletePage( pageName );\n         Assertions.assertEquals( oldPageCount, pageManager.getTotalPageCount() );\n     }\n ",
                "raw_url": "https://github.com/apache/jspwiki/raw/1ec1151a07212fba3d6193c9c57e2bfe530eb2c3/jspwiki-main/src/test/java/org/apache/wiki/auth/UserManagerTest.java",
                "sha": "e9d770d63f640def1ba0bc21eda52c196956ab26",
                "status": "modified"
            },
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/jspwiki/blob/1ec1151a07212fba3d6193c9c57e2bfe530eb2c3/jspwiki-main/src/test/java/org/apache/wiki/auth/acl/DefaultAclManagerTest.java",
                "changes": 4,
                "contents_url": "https://api.github.com/repos/apache/jspwiki/contents/jspwiki-main/src/test/java/org/apache/wiki/auth/acl/DefaultAclManagerTest.java?ref=1ec1151a07212fba3d6193c9c57e2bfe530eb2c3",
                "deletions": 2,
                "filename": "jspwiki-main/src/test/java/org/apache/wiki/auth/acl/DefaultAclManagerTest.java",
                "patch": "@@ -55,8 +55,8 @@ public void tearDown()\n     {\n         try\n         {\n-            m_engine.deletePage( \"TestDefaultPage\" );\n-            m_engine.deletePage( \"TestAclPage\" );\n+            m_engine.getPageManager().deletePage( \"TestDefaultPage\" );\n+            m_engine.getPageManager().deletePage( \"TestAclPage\" );\n         }\n         catch ( ProviderException e )\n         {",
                "raw_url": "https://github.com/apache/jspwiki/raw/1ec1151a07212fba3d6193c9c57e2bfe530eb2c3/jspwiki-main/src/test/java/org/apache/wiki/auth/acl/DefaultAclManagerTest.java",
                "sha": "3326cfc6f70df467cf709cc601d226dc3bbbc1e5",
                "status": "modified"
            },
            {
                "additions": 7,
                "blob_url": "https://github.com/apache/jspwiki/blob/1ec1151a07212fba3d6193c9c57e2bfe530eb2c3/jspwiki-main/src/test/java/org/apache/wiki/plugin/DefaultPluginManagerTest.java",
                "changes": 21,
                "contents_url": "https://api.github.com/repos/apache/jspwiki/contents/jspwiki-main/src/test/java/org/apache/wiki/plugin/DefaultPluginManagerTest.java?ref=1ec1151a07212fba3d6193c9c57e2bfe530eb2c3",
                "deletions": 14,
                "filename": "jspwiki-main/src/test/java/org/apache/wiki/plugin/DefaultPluginManagerTest.java",
                "patch": "@@ -18,7 +18,6 @@ Licensed to the Apache Software Foundation (ASF) under one\n  */\n \n package org.apache.wiki.plugin;\n-import java.util.Properties;\n \n import org.apache.wiki.TestEngine;\n import org.apache.wiki.WikiContext;\n@@ -30,31 +29,25 @@ Licensed to the Apache Software Foundation (ASF) under one\n import org.junit.jupiter.api.BeforeEach;\n import org.junit.jupiter.api.Test;\n \n-public class DefaultPluginManagerTest\n-{\n-    public static final String NAME1 = \"Test1\";\n+import java.util.Properties;\n+\n+public class DefaultPluginManagerTest {\n \n     Properties props = TestEngine.getTestProperties();\n-\n-    WikiEngine engine;\n+    WikiEngine engine = TestEngine.build();\n+    DefaultPluginManager manager = new DefaultPluginManager( engine, props );\n \n     WikiContext context;\n \n-    DefaultPluginManager manager;\n-\n     @BeforeEach\n-    public void setUp()\n-        throws Exception\n-    {\n-        engine = new TestEngine(props);\n+    public void setUp() throws Exception {\n         context = new WikiContext( engine, new WikiPage(engine, \"Testpage\") );\n-        manager = new DefaultPluginManager( engine, props );\n     }\n \n     @AfterEach\n     public void tearDown() throws ProviderException\n     {\n-        engine.deletePage(\"Testpage\");\n+        engine.getPageManager().deletePage(\"Testpage\");\n     }\n \n     @Test",
                "raw_url": "https://github.com/apache/jspwiki/raw/1ec1151a07212fba3d6193c9c57e2bfe530eb2c3/jspwiki-main/src/test/java/org/apache/wiki/plugin/DefaultPluginManagerTest.java",
                "sha": "9a0a14eaee82722b86acd3d235b39df598133d90",
                "status": "modified"
            },
            {
                "additions": 4,
                "blob_url": "https://github.com/apache/jspwiki/blob/1ec1151a07212fba3d6193c9c57e2bfe530eb2c3/jspwiki-main/src/test/java/org/apache/wiki/plugin/GroupsTest.java",
                "changes": 21,
                "contents_url": "https://api.github.com/repos/apache/jspwiki/contents/jspwiki-main/src/test/java/org/apache/wiki/plugin/GroupsTest.java?ref=1ec1151a07212fba3d6193c9c57e2bfe530eb2c3",
                "deletions": 17,
                "filename": "jspwiki-main/src/test/java/org/apache/wiki/plugin/GroupsTest.java",
                "patch": "@@ -19,31 +19,18 @@ Licensed to the Apache Software Foundation (ASF) under one\n \n package org.apache.wiki.plugin;\n \n-import java.util.Properties;\n-\n import org.apache.wiki.TestEngine;\n import org.junit.jupiter.api.AfterEach;\n import org.junit.jupiter.api.Assertions;\n-import org.junit.jupiter.api.BeforeEach;\n import org.junit.jupiter.api.Test;\n \n \n-public class GroupsTest\n-{\n-    Properties props = TestEngine.getTestProperties();\n-    TestEngine testEngine;\n-\n-    @BeforeEach\n-    public void setUp()\n-        throws Exception\n-    {\n-        testEngine = new TestEngine(props);\n-    }\n+public class GroupsTest {\n+    TestEngine testEngine = TestEngine.build();\n \n     @AfterEach\n-    public void tearDown() throws Exception\n-    {\n-        testEngine.deletePage( \"Test\" );\n+    public void tearDown() throws Exception {\n+        testEngine.getPageManager().deletePage( \"Test\" );\n     }\n \n     @Test",
                "raw_url": "https://github.com/apache/jspwiki/raw/1ec1151a07212fba3d6193c9c57e2bfe530eb2c3/jspwiki-main/src/test/java/org/apache/wiki/plugin/GroupsTest.java",
                "sha": "529af2c5a300f2c888017ef8c32870b61f8e5798",
                "status": "modified"
            },
            {
                "additions": 5,
                "blob_url": "https://github.com/apache/jspwiki/blob/1ec1151a07212fba3d6193c9c57e2bfe530eb2c3/jspwiki-main/src/test/java/org/apache/wiki/plugin/IfPluginTest.java",
                "changes": 23,
                "contents_url": "https://api.github.com/repos/apache/jspwiki/contents/jspwiki-main/src/test/java/org/apache/wiki/plugin/IfPluginTest.java?ref=1ec1151a07212fba3d6193c9c57e2bfe530eb2c3",
                "deletions": 18,
                "filename": "jspwiki-main/src/test/java/org/apache/wiki/plugin/IfPluginTest.java",
                "patch": "@@ -17,8 +17,7 @@ Licensed to the Apache Software Foundation (ASF) under one\n     under the License.\n  */\n package org.apache.wiki.plugin;\n-import java.util.Properties;\n-\n+import net.sourceforge.stripes.mock.MockHttpServletRequest;\n import org.apache.wiki.TestEngine;\n import org.apache.wiki.WikiContext;\n import org.apache.wiki.WikiPage;\n@@ -28,27 +27,15 @@ Licensed to the Apache Software Foundation (ASF) under one\n import org.apache.wiki.providers.WikiPageProvider;\n import org.junit.jupiter.api.AfterEach;\n import org.junit.jupiter.api.Assertions;\n-import org.junit.jupiter.api.BeforeEach;\n import org.junit.jupiter.api.Test;\n \n-import net.sourceforge.stripes.mock.MockHttpServletRequest;\n-\n-public class IfPluginTest\n-{\n+public class IfPluginTest {\n \n-    TestEngine testEngine;\n-\n-    @BeforeEach\n-    public void setUp() throws Exception\n-    {\n-        Properties props = TestEngine.getTestProperties();\n-        testEngine = new TestEngine( props );\n-    }\n+    TestEngine testEngine = TestEngine.build();\n \n     @AfterEach\n-    public void tearDown() throws Exception\n-    {\n-        testEngine.deletePage( \"Test\" );\n+    public void tearDown() throws Exception {\n+        testEngine.getPageManager().deletePage( \"Test\" );\n     }\n \n     /**",
                "raw_url": "https://github.com/apache/jspwiki/raw/1ec1151a07212fba3d6193c9c57e2bfe530eb2c3/jspwiki-main/src/test/java/org/apache/wiki/plugin/IfPluginTest.java",
                "sha": "4ac3c1967e48e5ed267f469b8e1028fba6212d97",
                "status": "modified"
            },
            {
                "additions": 3,
                "blob_url": "https://github.com/apache/jspwiki/blob/1ec1151a07212fba3d6193c9c57e2bfe530eb2c3/jspwiki-main/src/test/java/org/apache/wiki/plugin/TableOfContentsTest.java",
                "changes": 17,
                "contents_url": "https://api.github.com/repos/apache/jspwiki/contents/jspwiki-main/src/test/java/org/apache/wiki/plugin/TableOfContentsTest.java?ref=1ec1151a07212fba3d6193c9c57e2bfe530eb2c3",
                "deletions": 14,
                "filename": "jspwiki-main/src/test/java/org/apache/wiki/plugin/TableOfContentsTest.java",
                "patch": "@@ -26,30 +26,19 @@ Licensed to the Apache Software Foundation (ASF) under one\n import org.apache.wiki.api.exceptions.WikiException;\n import org.junit.jupiter.api.AfterEach;\n import org.junit.jupiter.api.Assertions;\n-import org.junit.jupiter.api.BeforeEach;\n import org.junit.jupiter.api.Test;\n \n-import java.util.Properties;\n-\n /**\n  *\n  *  @since\n  */\n public class TableOfContentsTest\n {\n-    TestEngine testEngine;\n-\n-    @BeforeEach\n-    public void setUp() throws Exception\n-    {\n-        Properties props = TestEngine.getTestProperties();\n-        testEngine = new TestEngine( props );\n-    }\n+    TestEngine testEngine = TestEngine.build();\n \n     @AfterEach\n-    public void tearDown() throws Exception\n-    {\n-        testEngine.deletePage( \"Test\" );\n+    public void tearDown() throws Exception {\n+        testEngine.getPageManager().deletePage( \"Test\" );\n     }\n \n     @Test",
                "raw_url": "https://github.com/apache/jspwiki/raw/1ec1151a07212fba3d6193c9c57e2bfe530eb2c3/jspwiki-main/src/test/java/org/apache/wiki/plugin/TableOfContentsTest.java",
                "sha": "47a0784fe103bd9842f6c4acc6ac99440c30046f",
                "status": "modified"
            },
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/jspwiki/blob/1ec1151a07212fba3d6193c9c57e2bfe530eb2c3/jspwiki-main/src/test/java/org/apache/wiki/plugin/WeblogPluginTest.java",
                "changes": 13,
                "contents_url": "https://api.github.com/repos/apache/jspwiki/contents/jspwiki-main/src/test/java/org/apache/wiki/plugin/WeblogPluginTest.java?ref=1ec1151a07212fba3d6193c9c57e2bfe530eb2c3",
                "deletions": 11,
                "filename": "jspwiki-main/src/test/java/org/apache/wiki/plugin/WeblogPluginTest.java",
                "patch": "@@ -4,25 +4,16 @@\n import org.apache.wiki.api.exceptions.WikiException;\n import org.junit.jupiter.api.AfterEach;\n import org.junit.jupiter.api.Assertions;\n-import org.junit.jupiter.api.BeforeEach;\n import org.junit.jupiter.api.Test;\n \n-import java.util.Properties;\n-\n \n public class WeblogPluginTest {\n \n-    TestEngine testEngine;\n-\n-    @BeforeEach\n-    public void setUp() throws Exception {\n-        final Properties props = TestEngine.getTestProperties();\n-        testEngine = new TestEngine( props );\n-    }\n+    TestEngine testEngine = TestEngine.build();\n \n     @AfterEach\n     public void tearDown() throws Exception {\n-        testEngine.deletePage( \"Test\" );\n+        testEngine.getPageManager().deletePage( \"Test\" );\n     }\n \n     @Test",
                "raw_url": "https://github.com/apache/jspwiki/raw/1ec1151a07212fba3d6193c9c57e2bfe530eb2c3/jspwiki-main/src/test/java/org/apache/wiki/plugin/WeblogPluginTest.java",
                "sha": "3ae3b30a6d51cab2df788d95a00d2aa5f6921807",
                "status": "modified"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/jspwiki/blob/1ec1151a07212fba3d6193c9c57e2bfe530eb2c3/jspwiki-main/src/test/java/org/apache/wiki/references/ReferenceManagerTest.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/jspwiki/contents/jspwiki-main/src/test/java/org/apache/wiki/references/ReferenceManagerTest.java?ref=1ec1151a07212fba3d6193c9c57e2bfe530eb2c3",
                "deletions": 1,
                "filename": "jspwiki-main/src/test/java/org/apache/wiki/references/ReferenceManagerTest.java",
                "patch": "@@ -82,7 +82,7 @@ public void testRemove() throws Exception {\n         Assertions.assertNotNull( c, \"referrers expected\" );\n         Assertions.assertTrue( c.size() == 1 && c.contains(\"Foobar\") );\n \n-        engine.deletePage( \"Foobar\" );\n+        engine.getPageManager().deletePage( \"Foobar\" );\n         c = mgr.findReferrers(\"Foobar2\");\n         Assertions.assertNull( c );\n ",
                "raw_url": "https://github.com/apache/jspwiki/raw/1ec1151a07212fba3d6193c9c57e2bfe530eb2c3/jspwiki-main/src/test/java/org/apache/wiki/references/ReferenceManagerTest.java",
                "sha": "76122ded5a34742b342b6de30adc247d30b8abdf",
                "status": "modified"
            },
            {
                "additions": 4,
                "blob_url": "https://github.com/apache/jspwiki/blob/1ec1151a07212fba3d6193c9c57e2bfe530eb2c3/jspwiki-main/src/test/java/org/apache/wiki/render/RenderingManagerTest.java",
                "changes": 19,
                "contents_url": "https://api.github.com/repos/apache/jspwiki/contents/jspwiki-main/src/test/java/org/apache/wiki/render/RenderingManagerTest.java?ref=1ec1151a07212fba3d6193c9c57e2bfe530eb2c3",
                "deletions": 15,
                "filename": "jspwiki-main/src/test/java/org/apache/wiki/render/RenderingManagerTest.java",
                "patch": "@@ -27,28 +27,17 @@ Licensed to the Apache Software Foundation (ASF) under one\n import org.apache.wiki.parser.WikiDocument;\n import org.junit.jupiter.api.AfterEach;\n import org.junit.jupiter.api.Assertions;\n-import org.junit.jupiter.api.BeforeEach;\n import org.junit.jupiter.api.Test;\n \n-import java.util.Properties;\n-\n public class RenderingManagerTest {\n \n-    RenderingManager m_manager;\n-    TestEngine       m_engine;\n-\n-    @BeforeEach\n-    public void setUp() throws Exception {\n-        CacheManager.getInstance().removeAllCaches();\n-        Properties props = TestEngine.getTestProperties();\n-        m_engine = new TestEngine( props );\n-\n-        m_manager = m_engine.getRenderingManager();\n-    }\n+    TestEngine       m_engine = TestEngine.build();\n+    RenderingManager m_manager = m_engine.getRenderingManager();\n \n     @AfterEach\n     public void tearDown() throws Exception {\n-        m_engine.deletePage( \"TestPage\" );\n+        m_engine.getPageManager().deletePage( \"TestPage\" );\n+        CacheManager.getInstance().removeAllCaches();\n     }\n \n     /**",
                "raw_url": "https://github.com/apache/jspwiki/raw/1ec1151a07212fba3d6193c9c57e2bfe530eb2c3/jspwiki-main/src/test/java/org/apache/wiki/render/RenderingManagerTest.java",
                "sha": "cf5aada8ad92a2707bc07bb2c860830403e94132",
                "status": "modified"
            },
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/jspwiki/blob/1ec1151a07212fba3d6193c9c57e2bfe530eb2c3/jspwiki-main/src/test/java/org/apache/wiki/ui/CommandResolverTest.java",
                "changes": 4,
                "contents_url": "https://api.github.com/repos/apache/jspwiki/contents/jspwiki-main/src/test/java/org/apache/wiki/ui/CommandResolverTest.java?ref=1ec1151a07212fba3d6193c9c57e2bfe530eb2c3",
                "deletions": 2,
                "filename": "jspwiki-main/src/test/java/org/apache/wiki/ui/CommandResolverTest.java",
                "patch": "@@ -52,8 +52,8 @@ public void setUp() throws Exception {\n \n     @AfterEach\n     public void tearDown() throws Exception {\n-        m_engine.deletePage( \"SinglePage\" );\n-        m_engine.deletePage( \"PluralPage\" );\n+        m_engine.getPageManager().deletePage( \"SinglePage\" );\n+        m_engine.getPageManager().deletePage( \"PluralPage\" );\n     }\n \n     @Test",
                "raw_url": "https://github.com/apache/jspwiki/raw/1ec1151a07212fba3d6193c9c57e2bfe530eb2c3/jspwiki-main/src/test/java/org/apache/wiki/ui/CommandResolverTest.java",
                "sha": "a557d5cbbd0d819ff6045f92d11da26a19a80de8",
                "status": "modified"
            },
            {
                "additions": 8,
                "blob_url": "https://github.com/apache/jspwiki/blob/1ec1151a07212fba3d6193c9c57e2bfe530eb2c3/jspwiki-main/src/test/java/org/apache/wiki/workflow/ApprovalWorkflowTest.java",
                "changes": 17,
                "contents_url": "https://api.github.com/repos/apache/jspwiki/contents/jspwiki-main/src/test/java/org/apache/wiki/workflow/ApprovalWorkflowTest.java?ref=1ec1151a07212fba3d6193c9c57e2bfe530eb2c3",
                "deletions": 9,
                "filename": "jspwiki-main/src/test/java/org/apache/wiki/workflow/ApprovalWorkflowTest.java",
                "patch": "@@ -18,11 +18,6 @@ Licensed to the Apache Software Foundation (ASF) under one\n  */\n package org.apache.wiki.workflow;\n \n-import java.security.Principal;\n-import java.util.Collection;\n-import java.util.List;\n-import java.util.Properties;\n-\n import org.apache.wiki.TestEngine;\n import org.apache.wiki.WikiContext;\n import org.apache.wiki.api.engine.FilterManager;\n@@ -35,14 +30,18 @@ Licensed to the Apache Software Foundation (ASF) under one\n import org.junit.jupiter.api.BeforeEach;\n import org.junit.jupiter.api.Test;\n \n-public class ApprovalWorkflowTest\n-{\n+import java.security.Principal;\n+import java.util.Collection;\n+import java.util.List;\n+import java.util.Properties;\n+\n+public class ApprovalWorkflowTest {\n+\n     WorkflowBuilder m_builder;\n     TestEngine m_engine;\n     WorkflowManager m_wm;\n     DecisionQueue m_dq;\n \n-\n     @BeforeEach\n     public void setUp() throws Exception\n     {\n@@ -209,7 +208,7 @@ public void testSaveWikiPageWithApproval() throws WikiException\n         Assertions.assertEquals(0, decisions.size());\n \n         // Delete the page we created\n-        m_engine.deletePage( pageName );\n+        m_engine.getPageManager().deletePage( pageName );\n     }\n \n     @Test",
                "raw_url": "https://github.com/apache/jspwiki/raw/1ec1151a07212fba3d6193c9c57e2bfe530eb2c3/jspwiki-main/src/test/java/org/apache/wiki/workflow/ApprovalWorkflowTest.java",
                "sha": "5e03505c1c5fa1ccd6815e07e3d7ccecc188500d",
                "status": "modified"
            }
        ],
        "message": "JSPWIKI-120: move deletePage(..) and deleteVersion(..) methods from WikiEngine to PageManager\n\nalso removed deletePage from TestEngine - was there to try to debug some nasty NPEs on tests but didn't end up being useful (NPEs probably due to objects being garbage collected on some ci nodes)",
        "parent": "https://github.com/apache/jspwiki/commit/9e05cc521a812ed781ac835307e45f34923119c4",
        "patched_files": [
            "AttachmentManager.java",
            "DefaultAclManager.java",
            "Groups.java",
            "ReferenceManager.java",
            "AuthorizationManager.java",
            "UserManager.java",
            "PageManager.java",
            "TableOfContents.java",
            "CommandResolver.java",
            "WeblogPlugin.java",
            "RenderingManager.java",
            "DefaultPluginManager.java",
            "DefaultPageManager.java",
            "IfPlugin.java",
            "WikiEngine.java"
        ],
        "repo": "jspwiki",
        "unit_tests": [
            "CommandResolverTest.java",
            "IfPluginTest.java",
            "DefaultAclManagerTest.java",
            "WeblogPluginTest.java",
            "UserManagerTest.java",
            "DefaultPageManagerTest.java",
            "ApprovalWorkflowTest.java",
            "WikiEngineTest.java",
            "TableOfContentsTest.java",
            "GroupsTest.java",
            "AttachmentManagerTest.java",
            "ReferenceManagerTest.java",
            "DefaultPluginManagerTest.java",
            "RenderingManagerTest.java",
            "AuthorizationManagerTest.java",
            "TestEngine.java"
        ]
    },
    "jspwiki_264a8ef": {
        "bug_id": "jspwiki_264a8ef",
        "commit": "https://github.com/apache/jspwiki/commit/264a8efa3475b5d06f689a1620d40fc70a958883",
        "file": [
            {
                "additions": 24,
                "blob_url": "https://github.com/apache/jspwiki/blob/264a8efa3475b5d06f689a1620d40fc70a958883/src/com/ecyrd/jspwiki/auth/user/JDBCUserDatabase.java",
                "changes": 34,
                "contents_url": "https://api.github.com/repos/apache/jspwiki/contents/src/com/ecyrd/jspwiki/auth/user/JDBCUserDatabase.java?ref=264a8efa3475b5d06f689a1620d40fc70a958883",
                "deletions": 10,
                "filename": "src/com/ecyrd/jspwiki/auth/user/JDBCUserDatabase.java",
                "patch": "@@ -77,6 +77,12 @@\n  *     <td><code>wiki_name</code></td>\n  *     <td>The column containing the user's wiki name</td>\n  *   </tr>\n+ *   <tr>\n+ *     <td><code>jspwiki.userdatabase.hashPrefix</code></td>\n+ *     <td><code>true</code></td>\n+ *     <td>Whether or not to prepend a prefix for the hash algorithm, <em>e.g.</em>,\n+ *         <code>{SHA}</code>.</td>\n+ *   </tr>\n  * </table>\n  * <p>This class hashes passwords using SHA-1. All of the underying SQL commands used by this class are implemented using\n  * prepared statements, so it is immune to SQL injection attacks.</p>\n@@ -97,7 +103,7 @@\n  * see <a href=\"http://tomcat.apache.org/tomcat-5.5-doc/jndi-resources-howto.html\">\n  * http://tomcat.apache.org/tomcat-5.5-doc/jndi-resources-howto.html</a>.\n  * @author Andrew R. Jaquith\n- * @version $Revision: 1.1 $ $Date: 2005-10-19 12:09:19 $\n+ * @version $Revision: 1.2 $ $Date: 2005-10-25 05:54:15 $\n  * @since 2.3\n  */public class JDBCUserDatabase extends AbstractUserDatabase\n {\n@@ -108,6 +114,8 @@\n \n     public static final String DEFAULT_DB_FULL_NAME  = \"full_name\";\n \n+    public static final String DEFAULT_DB_HASH_PREFIX = \"true\";\n+    \n     public static final String DEFAULT_DB_JNDI_NAME  = \"jdbc/UserDatabase\";\n \n     public static final String DEFAULT_DB_MODIFIED   = \"modified\";\n@@ -127,6 +135,8 @@\n     public static final String PROP_DB_FULL_NAME     = \"jspwiki.userdatabase.fullName\";\n \n     public static final String PROP_DB_DATASOURCE    = \"jspwiki.userdatabase.datasource\";\n+    \n+    public static final String PROP_DB_HASH_PREFIX   = \"jspwiki.userdatabase.hashPrefix\";\n \n     public static final String PROP_DB_LOGIN_NAME    = \"jspwiki.userdatabase.loginName\";\n \n@@ -149,6 +159,7 @@\n     private String m_table = null;\n     private String m_email = null;\n     private String m_fullName = null;\n+    private boolean m_hashPrefix = true;\n     private String m_loginName = null;\n     private String m_password = null;\n     private String m_wikiName = null;\n@@ -212,6 +223,7 @@ public void initialize( WikiEngine engine, Properties props ) throws NoRequiredP\n             m_table     = props.getProperty( PROP_DB_TABLE, DEFAULT_DB_TABLE );\n             m_email     = props.getProperty( PROP_DB_EMAIL, DEFAULT_DB_EMAIL );\n             m_fullName  = props.getProperty( PROP_DB_FULL_NAME, DEFAULT_DB_FULL_NAME );\n+            m_hashPrefix = Boolean.valueOf( props.getProperty( PROP_DB_HASH_PREFIX, DEFAULT_DB_HASH_PREFIX ) ).booleanValue();\n             m_loginName = props.getProperty( PROP_DB_LOGIN_NAME, DEFAULT_DB_LOGIN_NAME );\n             m_password  = props.getProperty( PROP_DB_PASSWORD, DEFAULT_DB_PASSWORD );\n             m_wikiName  = props.getProperty( PROP_DB_WIKI_NAME, DEFAULT_DB_WIKI_NAME );\n@@ -293,20 +305,22 @@ public void save( UserProfile profile ) throws WikiSecurityException\n         }\n         \n         // Get a clean password from the passed profile.\n-        // Hash the password if it isn't null, doesn't exist, or has changed.\n-        // Blank password is the same as null\n+        // Blank password is the same as null, which means we re-use the existing one.\n         String password = profile.getPassword();\n         String existingPassword = ( existingProfile == null ) ? null : existingProfile.getPassword();\n-        if ( password.equals(\"\") )\n+        if ( \"\".equals( password ) )\n         {\n             password = null;\n         }\n-        if ( password != null) \n-            {\n-            if ( existingPassword != null || !password.equals( existingPassword ) ) \n-            {\n-                password =  SHA_PREFIX + getHash( password );\n-            }\n+        if ( password == null) \n+        {\n+            password = existingPassword;\n+        }\n+        \n+        // If password changed, hash it before we save\n+        if ( !password.equals( existingPassword ) )\n+        {\n+            password =  ( m_hashPrefix ) ? SHA_PREFIX + getHash( password ) : getHash( password );\n         }\n         \n         try",
                "raw_url": "https://github.com/apache/jspwiki/raw/264a8efa3475b5d06f689a1620d40fc70a958883/src/com/ecyrd/jspwiki/auth/user/JDBCUserDatabase.java",
                "sha": "3cb7d5e7b80edc04718dd881d81a54c4a20c8d71",
                "status": "modified"
            }
        ],
        "message": "Fixed a NPE in JDBCUserDatabase that was triggered by a user editing a profile, but electing not to change the password. It now exhibits correct behavoir: no password means \"use the old one\", just like with XMLUserDatabase.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/jspwiki/trunk@624717 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/jspwiki/commit/a15e8b642e6a6b10aef6e2d1926741d04cacbe52",
        "patched_files": [
            "JDBCUserDatabase.java"
        ],
        "repo": "jspwiki",
        "unit_tests": [
            "JDBCUserDatabaseTest.java"
        ]
    },
    "jspwiki_26b8f10": {
        "bug_id": "jspwiki_26b8f10",
        "commit": "https://github.com/apache/jspwiki/commit/26b8f108f910130e3cd3281808032d156acc7af9",
        "file": [
            {
                "additions": 10,
                "blob_url": "https://github.com/apache/jspwiki/blob/26b8f108f910130e3cd3281808032d156acc7af9/ChangeLog",
                "changes": 10,
                "contents_url": "https://api.github.com/repos/apache/jspwiki/contents/ChangeLog?ref=26b8f108f910130e3cd3281808032d156acc7af9",
                "deletions": 0,
                "filename": "ChangeLog",
                "patch": "@@ -1,3 +1,13 @@\n+2009-03-19  Andrew Jaquith <ajaquith AT apache DOT org>\n+\n+        * 3.0.0-svn-86\n+\n+        * Fixed bug in XMLUserDatabase that was preventing UIDs from being\n+        saved, which generated tons of NPEs afterwards. Added unit tests\n+        to check for correct saving of UIDs. Tightened input filtering on\n+        user profile fields to prohibit more characters. [Forward-ported\n+        from 2.8.2-svn-14].\n+        \n 2009-03-18  Andrew Jaquith <ajaquith AT apache DOT org>\n \n         * 3.0.0-svn-85",
                "raw_url": "https://github.com/apache/jspwiki/raw/26b8f108f910130e3cd3281808032d156acc7af9/ChangeLog",
                "sha": "fa8333c9177cf8388908bb56e20933f1c01cccbb",
                "status": "modified"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/jspwiki/blob/26b8f108f910130e3cd3281808032d156acc7af9/src/java/org/apache/wiki/Release.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/jspwiki/contents/src/java/org/apache/wiki/Release.java?ref=26b8f108f910130e3cd3281808032d156acc7af9",
                "deletions": 1,
                "filename": "src/java/org/apache/wiki/Release.java",
                "patch": "@@ -77,7 +77,7 @@ Licensed to the Apache Software Foundation (ASF) under one\n      *  <p>\n      *  If the build identifier is empty, it is not added.\n      */\n-    public static final String     BUILD         = \"85\";\n+    public static final String     BUILD         = \"86\";\n     \n     /**\n      *  This is the generic version string you should use",
                "raw_url": "https://github.com/apache/jspwiki/raw/26b8f108f910130e3cd3281808032d156acc7af9/src/java/org/apache/wiki/Release.java",
                "sha": "48ffdde5ac64f41c93ae2d139d81746a5c0225c1",
                "status": "modified"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/jspwiki/blob/26b8f108f910130e3cd3281808032d156acc7af9/src/java/org/apache/wiki/api/WikiPage.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/jspwiki/contents/src/java/org/apache/wiki/api/WikiPage.java?ref=26b8f108f910130e3cd3281808032d156acc7af9",
                "deletions": 1,
                "filename": "src/java/org/apache/wiki/api/WikiPage.java",
                "patch": "@@ -66,7 +66,7 @@ Licensed to the Apache Software Foundation (ASF) under one\n     public String getName();\n     \n     /**\n-     * Returns the full, qualified, name of the WikiPage that includes the wiki name.\n+     * Returns the full, qualified, name of the WikiPage that includes the wiki space.\n      * Used by the {@link org.apache.wiki.ui.stripes.HandlerInfo} class and\n      * {@link org.apache.wiki.ui.stripes.HandlerPermission} annotations.\n      * @return the qualified page name, for example <code>mywiki:Main</code>",
                "raw_url": "https://github.com/apache/jspwiki/raw/26b8f108f910130e3cd3281808032d156acc7af9/src/java/org/apache/wiki/api/WikiPage.java",
                "sha": "a50ebe20dbdf4d94630a859c3ad8bec534f65bfc",
                "status": "modified"
            },
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/jspwiki/blob/26b8f108f910130e3cd3281808032d156acc7af9/src/java/org/apache/wiki/auth/user/XMLUserDatabase.java",
                "changes": 3,
                "contents_url": "https://api.github.com/repos/apache/jspwiki/contents/src/java/org/apache/wiki/auth/user/XMLUserDatabase.java?ref=26b8f108f910130e3cd3281808032d156acc7af9",
                "deletions": 1,
                "filename": "src/java/org/apache/wiki/auth/user/XMLUserDatabase.java",
                "patch": "@@ -546,6 +546,7 @@ public synchronized void save( UserProfile profile ) throws WikiSecurityExceptio\n             }\n         }\n         \n+        setAttribute( user, UID, profile.getUid() );\n         setAttribute( user, LAST_MODIFIED, c_format.format( modDate ) );\n         setAttribute( user, LOGIN_NAME, profile.getLoginName() );\n         setAttribute( user, FULL_NAME, profile.getFullname() );\n@@ -623,7 +624,7 @@ private UserProfile findByAttribute( String matchAttribute, String index )\n                 \n                 // Parse basic attributes\n                 profile.setUid( user.getAttribute( UID ) );\n-                if ( profile.getUid() == null )\n+                if ( profile.getUid() == null || profile.getUid().length() == 0 )\n                 {\n                     profile.setUid( generateUid( this ) );\n                 }",
                "raw_url": "https://github.com/apache/jspwiki/raw/26b8f108f910130e3cd3281808032d156acc7af9/src/java/org/apache/wiki/auth/user/XMLUserDatabase.java",
                "sha": "a18ed9a111b99b3ec0993934d76fc97d9e34fa6d",
                "status": "modified"
            },
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/jspwiki/blob/26b8f108f910130e3cd3281808032d156acc7af9/src/java/org/apache/wiki/ui/InputValidator.java",
                "changes": 4,
                "contents_url": "https://api.github.com/repos/apache/jspwiki/contents/src/java/org/apache/wiki/ui/InputValidator.java?ref=26b8f108f910130e3cd3281808032d156acc7af9",
                "deletions": 2,
                "filename": "src/java/org/apache/wiki/ui/InputValidator.java",
                "patch": "@@ -52,7 +52,7 @@ Licensed to the Apache Software Foundation (ASF) under one\n \n     protected static final Pattern EMAIL_PATTERN  = Pattern.compile( \"^[0-9a-zA-Z-_\\\\.\\\\+]+@([0-9a-zA-Z-_]+\\\\.)+[a-zA-Z]+$\" );\n \n-    protected static final Pattern UNSAFE_PATTERN = Pattern.compile( \"[\\\\x00\\\\r\\\\n\\\\x0f\\\"':<>;&@\\\\xff{}\\\\$%\\\\\\\\]\" );\n+    protected static final Pattern UNSAFE_PATTERN = Pattern.compile( \"[\\\\x00\\\\r\\\\n\\\\x0f\\\"':<>\\\\[\\\\];#&@\\\\xff{}\\\\$%\\\\\\\\]\" );\n \n     /** Used when checking against IDs such as a full name when saving groups.\n      *  @since 2.4.82 */\n@@ -147,7 +147,7 @@ public final boolean validate( String input, String label, int type )\n             valid = !matcher.find();\n             if ( !valid )\n             {\n-                Object[] args = { label, \"&quot;&#39;&lt;&gt;;&amp;\\\\@{}%$\" };\n+                Object[] args = { label, \"&quot;&#39;&lt;&gt;;&amp;[]#\\\\@{}%$\" };\n                 m_session.addMessage( m_form, MessageFormat.format( rb.getString(\"validate.unsafechars\"),\n                                                                     args ) );\n             }",
                "raw_url": "https://github.com/apache/jspwiki/raw/26b8f108f910130e3cd3281808032d156acc7af9/src/java/org/apache/wiki/ui/InputValidator.java",
                "sha": "782058c762f651001f9996050e38ffb4f7e4e64a",
                "status": "modified"
            },
            {
                "additions": 4,
                "blob_url": "https://github.com/apache/jspwiki/blob/26b8f108f910130e3cd3281808032d156acc7af9/tests/java/org/apache/wiki/auth/user/JDBCUserDatabaseTest.java",
                "changes": 4,
                "contents_url": "https://api.github.com/repos/apache/jspwiki/contents/tests/java/org/apache/wiki/auth/user/JDBCUserDatabaseTest.java?ref=26b8f108f910130e3cd3281808032d156acc7af9",
                "deletions": 0,
                "filename": "tests/java/org/apache/wiki/auth/user/JDBCUserDatabaseTest.java",
                "patch": "@@ -437,6 +437,10 @@ public void testSave() throws Exception\n             assertNotNull( profile.getCreated() );\n             assertNotNull( profile.getLastModified() );\n             assertEquals( profile.getCreated(), profile.getLastModified() );\n+            \n+            // Make sure we can find it by uid\n+            String uid = profile.getUid();\n+            assertNotNull( m_db.findByUid( uid ) );\n         }\n         catch( NoSuchPrincipalException e )\n         {",
                "raw_url": "https://github.com/apache/jspwiki/raw/26b8f108f910130e3cd3281808032d156acc7af9/tests/java/org/apache/wiki/auth/user/JDBCUserDatabaseTest.java",
                "sha": "73c854aea72fdb15722dc52150e4184576a6ee71",
                "status": "modified"
            },
            {
                "additions": 4,
                "blob_url": "https://github.com/apache/jspwiki/blob/26b8f108f910130e3cd3281808032d156acc7af9/tests/java/org/apache/wiki/auth/user/XMLUserDatabaseTest.java",
                "changes": 4,
                "contents_url": "https://api.github.com/repos/apache/jspwiki/contents/tests/java/org/apache/wiki/auth/user/XMLUserDatabaseTest.java?ref=26b8f108f910130e3cd3281808032d156acc7af9",
                "deletions": 0,
                "filename": "tests/java/org/apache/wiki/auth/user/XMLUserDatabaseTest.java",
                "patch": "@@ -357,6 +357,10 @@ public void testSave() throws Exception\n           profile = m_db.findByEmail(\"user@example.com\");\n           assertEquals(\"user@example.com\", profile.getEmail());\n           assertTrue( CryptoUtil.verifySaltedPassword( \"password\".getBytes(), profile.getPassword() ) );\n+          \n+          // Make sure we can find it by uid\n+          String uid = profile.getUid();\n+          assertNotNull( m_db.findByUid( uid ) );\n       }\n       catch (NoSuchPrincipalException e)\n       {",
                "raw_url": "https://github.com/apache/jspwiki/raw/26b8f108f910130e3cd3281808032d156acc7af9/tests/java/org/apache/wiki/auth/user/XMLUserDatabaseTest.java",
                "sha": "afbf272b850f7545f5b7d8af1166d57fdeaf30b4",
                "status": "modified"
            }
        ],
        "message": "Fixed bug in XMLUserDatabase that was preventing UIDs from being saved, which generated tons of NPEs afterwards. Added unit tests to check for correct saving of UIDs. Tightened input filtering on user profile fields to prohibit more characters. [Forward-ported from 2.8.2-svn-14].\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/jspwiki/trunk@756319 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/jspwiki/commit/41a0a10e4ff74089d7ecd39d2ee608296f384294",
        "patched_files": [
            "XMLUserDatabase.java",
            "InputValidator.java",
            "Release.java",
            "WikiPage.java",
            "ChangeLog",
            "JDBCUserDatabase.java"
        ],
        "repo": "jspwiki",
        "unit_tests": [
            "XMLUserDatabaseTest.java",
            "JDBCUserDatabaseTest.java",
            "InputValidatorTest.java",
            "ReleaseTest.java"
        ]
    },
    "jspwiki_2a3c735": {
        "bug_id": "jspwiki_2a3c735",
        "commit": "https://github.com/apache/jspwiki/commit/2a3c735537a7f87c5d803f638aed83ad2b17a75e",
        "file": [
            {
                "additions": 18,
                "blob_url": "https://github.com/apache/jspwiki/blob/2a3c735537a7f87c5d803f638aed83ad2b17a75e/src/java/org/apache/wiki/NoSuchVariableException.java",
                "changes": 26,
                "contents_url": "https://api.github.com/repos/apache/jspwiki/contents/src/java/org/apache/wiki/NoSuchVariableException.java?ref=2a3c735537a7f87c5d803f638aed83ad2b17a75e",
                "deletions": 8,
                "filename": "src/java/org/apache/wiki/NoSuchVariableException.java",
                "patch": "@@ -23,20 +23,30 @@ Licensed to the Apache Software Foundation (ASF) under one\n import org.apache.wiki.api.WikiException;\n \n /**\n- *  Marks that no such variable was located.\n+ * Marks that no such variable was located.\n  */\n-public class NoSuchVariableException\n-    extends WikiException\n+public class NoSuchVariableException extends WikiException\n {\n-    private static final long          serialVersionUID = 1L;\n+    private static final long serialVersionUID = 1L;\n \n     /**\n-     *  Constructs an exception.\n-     *\n-     *  @param msg Message to show\n+     * Constructs an exception.\n+     * \n+     * @param msg Message to show\n      */\n     public NoSuchVariableException( String msg )\n     {\n-        super(msg);\n+        super( msg );\n+    }\n+\n+    /**\n+     * Constructs an exception.\n+     * \n+     * @param msg Message to show\n+     * @param cause the cause of the exception\n+     */\n+    public NoSuchVariableException( String msg, Throwable cause )\n+    {\n+        super( msg, cause );\n     }\n }",
                "raw_url": "https://github.com/apache/jspwiki/raw/2a3c735537a7f87c5d803f638aed83ad2b17a75e/src/java/org/apache/wiki/NoSuchVariableException.java",
                "sha": "a3eb194965caec5e70ba4f7ba41ee95ac1ba2824",
                "status": "modified"
            },
            {
                "additions": 3,
                "blob_url": "https://github.com/apache/jspwiki/blob/2a3c735537a7f87c5d803f638aed83ad2b17a75e/src/java/org/apache/wiki/VariableManager.java",
                "changes": 5,
                "contents_url": "https://api.github.com/repos/apache/jspwiki/contents/src/java/org/apache/wiki/VariableManager.java?ref=2a3c735537a7f87c5d803f638aed83ad2b17a75e",
                "deletions": 2,
                "filename": "src/java/org/apache/wiki/VariableManager.java",
                "patch": "@@ -388,7 +388,7 @@ public String getValue( WikiContext context,\n         }\n         catch( Exception e )\n         {\n-            log.info(\"Interesting exception: cannot fetch variable value\",e);\n+            log.info( \"Interesting exception: cannot fetch variable value '\" + varName + \"'.\", e );\n         }\n         return \"\";\n     }\n@@ -420,7 +420,8 @@ public SystemVariables(WikiContext context)\n \n         public String getPagename()\n         {\n-            return m_context.getPage().getName();\n+            WikiPage page = m_context.getPage();\n+            return page == null ? null : page.getName();\n         }\n \n         public String getApplicationname()",
                "raw_url": "https://github.com/apache/jspwiki/raw/2a3c735537a7f87c5d803f638aed83ad2b17a75e/src/java/org/apache/wiki/VariableManager.java",
                "sha": "012280db0e6e95e5a715cd85eb083f08af8d2f5f",
                "status": "modified"
            }
        ],
        "message": "Fixed NPE in VariableManager.\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/jspwiki/trunk@766530 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/jspwiki/commit/196f98833e92628b1220f6452b38b5db1de0e2a9",
        "patched_files": [
            "VariableManager.java"
        ],
        "repo": "jspwiki",
        "unit_tests": [
            "VariableManagerTest.java"
        ]
    },
    "jspwiki_2caf9ec": {
        "bug_id": "jspwiki_2caf9ec",
        "commit": "https://github.com/apache/jspwiki/commit/2caf9ecff448a4f366c49c34630d1ad9f60b5e22",
        "file": [
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/jspwiki/blob/2caf9ecff448a4f366c49c34630d1ad9f60b5e22/src/com/ecyrd/jspwiki/Release.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/jspwiki/contents/src/com/ecyrd/jspwiki/Release.java?ref=2caf9ecff448a4f366c49c34630d1ad9f60b5e22",
                "deletions": 1,
                "filename": "src/com/ecyrd/jspwiki/Release.java",
                "patch": "@@ -77,7 +77,7 @@ Licensed to the Apache Software Foundation (ASF) under one\n      *  <p>\n      *  If the build identifier is empty, it is not added.\n      */\n-    public static final String     BUILD         = \"5\";\n+    public static final String     BUILD         = \"6\";\n     \n     /**\n      *  This is the generic version string you should use",
                "raw_url": "https://github.com/apache/jspwiki/raw/2caf9ecff448a4f366c49c34630d1ad9f60b5e22/src/com/ecyrd/jspwiki/Release.java",
                "sha": "df5c3dfedce54ba820ba9dd4db0823cdbf84ae06",
                "status": "modified"
            }
        ],
        "message": "JSPWIKI-326: Fixed NPE in ProfanityFilter.\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/jspwiki/trunk@681274 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/jspwiki/commit/d1695b71b2441b3c593cbe0e0f13f03cc2fd7205",
        "patched_files": [
            "Release.java"
        ],
        "repo": "jspwiki",
        "unit_tests": [
            "ReleaseTest.java"
        ]
    },
    "jspwiki_3741265": {
        "bug_id": "jspwiki_3741265",
        "commit": "https://github.com/apache/jspwiki/commit/3741265b380d20f07d300c3e5e5d420d7c4c5ce9",
        "file": [
            {
                "additions": 9,
                "blob_url": "https://github.com/apache/jspwiki/blob/3741265b380d20f07d300c3e5e5d420d7c4c5ce9/src/com/ecyrd/jspwiki/PageRenamer.java",
                "changes": 16,
                "contents_url": "https://api.github.com/repos/apache/jspwiki/contents/src/com/ecyrd/jspwiki/PageRenamer.java?ref=3741265b380d20f07d300c3e5e5d420d7c4c5ce9",
                "deletions": 7,
                "filename": "src/com/ecyrd/jspwiki/PageRenamer.java",
                "patch": "@@ -55,13 +55,6 @@\n     private Pattern m_longLinkPattern = null;\n     private Pattern m_camelCaseLinkPattern = null;\n \n-    /** Extension to be appended onto directories to denote they contain attachments. */\n-    public static final String DIR_EXTENSION   = \"-att\";\n-    \n-    /** Property key denoting storage directory for attachments. */\n-    public static final String PROP_STORAGEDIR = \"jspwiki.basicAttachmentProvider.storageDir\";\n-\n-\n     /**\n      * Constructor, ties this renamer instance to a WikiEngine.\n      * @param engine the wiki engine\n@@ -206,6 +199,10 @@ private void updateReferrersOnRename( WikiContext context,\n             updateReferrerOnRename( context, oldName, newName, changeReferrers, referrerName );\n         }\n \n+        //  Manage self-references, which the RefMgr is not managing for us\n+        \n+        updateReferrerOnRename( context, oldName, newName, changeReferrers, newName );\n+        \n         m_wikiEngine.getReferenceManager().clearPageEntries( oldName );\n \n         String text = m_wikiEngine.getText( newName );\n@@ -328,6 +325,11 @@ private String replaceLongLinks( String text, String oldName, String replacement\n             String anchor = \"\";\n             String subpage = \"\";\n \n+            if( link == null )\n+            {\n+                throw new InternalWikiException( \"Null link while trying to rename!  Culprit text is \"+text );\n+            }\n+            \n             int hash;\n             if( (hash = link.indexOf('#')) != -1 )\n             {",
                "raw_url": "https://github.com/apache/jspwiki/raw/3741265b380d20f07d300c3e5e5d420d7c4c5ce9/src/com/ecyrd/jspwiki/PageRenamer.java",
                "sha": "f120a1beeb0e8d3e8cadd2a2d8b617c24705fdae",
                "status": "modified"
            }
        ],
        "message": "Removed some cut-n-past code which was not being used.\nAdded fix for Bug 25, and self-reference pages For Bug 21\nAdded an extra NPE check\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/jspwiki/trunk@626658 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/jspwiki/commit/b17a9384475195886715dcf65db29b1c345e1e7c",
        "patched_files": [
            "PageRenamer.java"
        ],
        "repo": "jspwiki",
        "unit_tests": [
            "PageRenamerTest.java"
        ]
    },
    "jspwiki_4af7285": {
        "bug_id": "jspwiki_4af7285",
        "commit": "https://github.com/apache/jspwiki/commit/4af7285a100a299ba5c4a51f92a904c9870b9411",
        "file": [
            {
                "additions": 8,
                "blob_url": "https://github.com/apache/jspwiki/blob/4af7285a100a299ba5c4a51f92a904c9870b9411/ChangeLog",
                "changes": 8,
                "contents_url": "https://api.github.com/repos/apache/jspwiki/contents/ChangeLog?ref=4af7285a100a299ba5c4a51f92a904c9870b9411",
                "deletions": 0,
                "filename": "ChangeLog",
                "patch": "@@ -1,3 +1,11 @@\n+2008-06-30  Janne Jalkanen <jalkanen@apache.org>\n+\n+        * 2.7.0-svn-52\n+        \n+        * JSPWIKI-299: Deleting an attachment from a page which\n+        had been recently renamed caused an NPE.  Reported by Harry\n+        Metske.\n+\n 2008-06-29  Janne Jalkanen <jalkanen@apache.org>\n \n         * Moved all pages from wikipages under wikipages/en, and",
                "raw_url": "https://github.com/apache/jspwiki/raw/4af7285a100a299ba5c4a51f92a904c9870b9411/ChangeLog",
                "sha": "9b8214d1ddd9069fa24c8c242048a99ff164730b",
                "status": "modified"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/jspwiki/blob/4af7285a100a299ba5c4a51f92a904c9870b9411/src/com/ecyrd/jspwiki/Release.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/jspwiki/contents/src/com/ecyrd/jspwiki/Release.java?ref=4af7285a100a299ba5c4a51f92a904c9870b9411",
                "deletions": 1,
                "filename": "src/com/ecyrd/jspwiki/Release.java",
                "patch": "@@ -77,7 +77,7 @@ Licensed to the Apache Software Foundation (ASF) under one\n      *  <p>\n      *  If the build identifier is empty, it is not added.\n      */\n-    public static final String     BUILD         = \"51\";\n+    public static final String     BUILD         = \"52\";\n     \n     /**\n      *  This is the generic version string you should use",
                "raw_url": "https://github.com/apache/jspwiki/raw/4af7285a100a299ba5c4a51f92a904c9870b9411/src/com/ecyrd/jspwiki/Release.java",
                "sha": "0427f65c695130cc541198d181aff68292243088",
                "status": "modified"
            },
            {
                "additions": 26,
                "blob_url": "https://github.com/apache/jspwiki/blob/4af7285a100a299ba5c4a51f92a904c9870b9411/src/com/ecyrd/jspwiki/providers/CachingAttachmentProvider.java",
                "changes": 30,
                "contents_url": "https://api.github.com/repos/apache/jspwiki/contents/src/com/ecyrd/jspwiki/providers/CachingAttachmentProvider.java?ref=4af7285a100a299ba5c4a51f92a904c9870b9411",
                "deletions": 4,
                "filename": "src/com/ecyrd/jspwiki/providers/CachingAttachmentProvider.java",
                "patch": "@@ -31,6 +31,7 @@ Licensed to the Apache Software Foundation (ASF) under one\n import com.ecyrd.jspwiki.attachment.AttachmentManager;\n import com.ecyrd.jspwiki.util.ClassUtil;\n import com.opensymphony.oscache.base.Cache;\n+import com.opensymphony.oscache.base.CacheEntry;\n import com.opensymphony.oscache.base.NeedsRefreshException;\n import com.opensymphony.oscache.base.events.*;\n \n@@ -419,6 +420,21 @@ public void moveAttachmentsForPage( String oldParent, String newParent )\n         m_provider.moveAttachmentsForPage(oldParent, newParent);\n         m_cache.removeEntry( newParent ); \n         m_cache.removeEntry( oldParent );\n+        \n+        //\n+        //  This is a kludge to make sure that the pages are removed\n+        //  from the other cache as well.\n+        //\n+        String checkName = oldParent + \"/\";\n+        \n+        Collection<String> names = cloneCollection( m_allCollector.m_allItems.keySet() );\n+        for( String name : names )\n+        {\n+            if( name.startsWith( checkName ) )\n+            {\n+                m_attCache.removeEntry( name );\n+            }\n+        }\n     }\n \n     /**\n@@ -456,11 +472,17 @@ public void cacheEntryRemoved( CacheEntryEvent aEvent )\n                 {\n                     log.debug( \"attachment cache entry removed: \" + aEvent.getKey() );\n                 }\n-                Attachment item = (Attachment) aEvent.getEntry().getContent();\n-\n-                if( item != null )\n+                \n+                CacheEntry e = aEvent.getEntry();\n+                \n+                if( e != null )\n                 {\n-                    m_allItems.remove( item.getName() );\n+                    Attachment item = (Attachment) e.getContent();\n+\n+                    if( item != null )\n+                    {\n+                        m_allItems.remove( item.getName() );\n+                    }\n                 }\n             }\n         }",
                "raw_url": "https://github.com/apache/jspwiki/raw/4af7285a100a299ba5c4a51f92a904c9870b9411/src/com/ecyrd/jspwiki/providers/CachingAttachmentProvider.java",
                "sha": "6d228aeae0a3f9775312491b93d64c0a215df07b",
                "status": "modified"
            }
        ],
        "message": "JSPWIKI-299: Deleting an attachment from a page which had been recently renamed caused an NPE.  Reported by Harry Metske.\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/jspwiki/trunk@672715 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/jspwiki/commit/23e39649df4f2cb9790638324b8c6e5fedd3588e",
        "patched_files": [
            "ChangeLog",
            "Release.java"
        ],
        "repo": "jspwiki",
        "unit_tests": [
            "ReleaseTest.java"
        ]
    },
    "jspwiki_6f17cb7": {
        "bug_id": "jspwiki_6f17cb7",
        "commit": "https://github.com/apache/jspwiki/commit/6f17cb7e3910248f1846a82b21a49444fbc3dcaa",
        "file": [
            {
                "additions": 21,
                "blob_url": "https://github.com/apache/jspwiki/blob/6f17cb7e3910248f1846a82b21a49444fbc3dcaa/src/com/ecyrd/jspwiki/ReferenceManager.java",
                "changes": 38,
                "contents_url": "https://api.github.com/repos/apache/jspwiki/contents/src/com/ecyrd/jspwiki/ReferenceManager.java?ref=6f17cb7e3910248f1846a82b21a49444fbc3dcaa",
                "deletions": 17,
                "filename": "src/com/ecyrd/jspwiki/ReferenceManager.java",
                "patch": "@@ -568,31 +568,35 @@ public synchronized void pageRemoved( WikiPage page )\n     {\n         String pageName = page.getName();\n         \n-        Collection RefTo = (Collection)m_refersTo.get( pageName );\n-        Iterator it_refTo = RefTo.iterator();\n-        while( it_refTo.hasNext() )\n+        Collection refTo = (Collection)m_refersTo.get( pageName );\n+        \n+        if( refTo != null )\n         {\n-            String referredPageName = (String)it_refTo.next();\n-            Set refBy = (Set)m_referredBy.get( referredPageName );\n+            Iterator it_refTo = refTo.iterator();\n+            while( it_refTo.hasNext() )\n+            {\n+                String referredPageName = (String)it_refTo.next();\n+                Set refBy = (Set)m_referredBy.get( referredPageName );\n \n-            if( refBy == null )\n-                throw new InternalWikiException(\"Refmgr out of sync: page \"+pageName+\" refers to \"+referredPageName+\", which has null referrers.\");\n+                if( refBy == null )\n+                    throw new InternalWikiException(\"Refmgr out of sync: page \"+pageName+\" refers to \"+referredPageName+\", which has null referrers.\");\n \n-            refBy.remove(pageName);\n+                refBy.remove(pageName);\n             \n-            m_referredBy.remove( referredPageName );\n+                m_referredBy.remove( referredPageName );\n             \n-            // We won't put it back again if it becomes empty and does not exist.  It will be added\n-            // later on anyway, if it becomes referenced again.\n-            if( !(refBy.isEmpty() && !m_engine.pageExists(referredPageName)) )\n-            {\n-                m_referredBy.put( referredPageName, refBy );\n+                // We won't put it back again if it becomes empty and does not exist.  It will be added\n+                // later on anyway, if it becomes referenced again.\n+                if( !(refBy.isEmpty() && !m_engine.pageExists(referredPageName)) )\n+                {\n+                    m_referredBy.put( referredPageName, refBy );\n+                }\n             }\n+            \n+            log.debug(\"Removing from m_refersTo HashMap key:value \"+pageName+\":\"+m_refersTo.get( pageName ));\n+            m_refersTo.remove( pageName );\n         }\n \n-        log.debug(\"Removing from m_refersTo HashMap key:value \"+pageName+\":\"+m_refersTo.get( pageName ));\n-        m_refersTo.remove( pageName );\n-        \n         Set refBy = (Set) m_referredBy.get( pageName );\n         if( refBy == null || refBy.isEmpty() )\n         {",
                "raw_url": "https://github.com/apache/jspwiki/raw/6f17cb7e3910248f1846a82b21a49444fbc3dcaa/src/com/ecyrd/jspwiki/ReferenceManager.java",
                "sha": "60c7d6e37ffaf17d4448bfa7bf2f091c26fea1cf",
                "status": "modified"
            }
        ],
        "message": "pageRemoved would sometimes throw an NPE.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/jspwiki/trunk@625313 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/jspwiki/commit/599a2e20b75057ac1e5cd2c1b3f87eeeac2ae5be",
        "patched_files": [
            "ReferenceManager.java"
        ],
        "repo": "jspwiki",
        "unit_tests": [
            "ReferenceManagerTest.java"
        ]
    },
    "jspwiki_7383dbe": {
        "bug_id": "jspwiki_7383dbe",
        "commit": "https://github.com/apache/jspwiki/commit/7383dbe233fd0a37d2864606f4d02c151fe0d3e7",
        "file": [
            {
                "additions": 5,
                "blob_url": "https://github.com/apache/jspwiki/blob/7383dbe233fd0a37d2864606f4d02c151fe0d3e7/src/com/ecyrd/jspwiki/TextUtil.java",
                "changes": 9,
                "contents_url": "https://api.github.com/repos/apache/jspwiki/contents/src/com/ecyrd/jspwiki/TextUtil.java?ref=7383dbe233fd0a37d2864606f4d02c151fe0d3e7",
                "deletions": 4,
                "filename": "src/com/ecyrd/jspwiki/TextUtil.java",
                "patch": "@@ -264,15 +264,16 @@ public static String replaceEntities( String src )\n      *  @param src  The string to find.\n      *  @param dest The string to replace <I>src</I> with.\n      */\n-\n-    public static String replaceString( String orig, String src, String dest )\n+    public final static String replaceString( String orig, String src, String dest )\n     {\n-        if( orig == null ) return null;\n+        if ( orig == null ) return null;\n+        if ( src == null || dest == null ) throw new NullPointerException();\n+        if ( src.length() == 0 ) return orig;\n \n         StringBuffer res = new StringBuffer();\n         int start, end = 0, last = 0;\n \n-        while( (start = orig.indexOf(src,end)) != -1 )\n+        while ( (start = orig.indexOf(src,end)) != -1 )\n         {\n             res.append( orig.substring( last, start ) );\n             res.append( dest );",
                "raw_url": "https://github.com/apache/jspwiki/raw/7383dbe233fd0a37d2864606f4d02c151fe0d3e7/src/com/ecyrd/jspwiki/TextUtil.java",
                "sha": "f0cfafb1f1559af52e0cdf2022215b83c3a1b822",
                "status": "modified"
            }
        ],
        "message": "Patch from Murray to fix an NPE in replaceString()\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/jspwiki/trunk@625823 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/jspwiki/commit/a69bd31fe5033acc6ab0e1152e587ac1f4870f98",
        "patched_files": [
            "TextUtil.java"
        ],
        "repo": "jspwiki",
        "unit_tests": [
            "TextUtilTest.java"
        ]
    },
    "jspwiki_7a24a12": {
        "bug_id": "jspwiki_7a24a12",
        "commit": "https://github.com/apache/jspwiki/commit/7a24a129ab55caa0ebda308cff3cca39ae571efa",
        "file": [
            {
                "additions": 13,
                "blob_url": "https://github.com/apache/jspwiki/blob/7a24a129ab55caa0ebda308cff3cca39ae571efa/ChangeLog",
                "changes": 13,
                "contents_url": "https://api.github.com/repos/apache/jspwiki/contents/ChangeLog?ref=7a24a129ab55caa0ebda308cff3cca39ae571efa",
                "deletions": 0,
                "filename": "ChangeLog",
                "patch": "@@ -1,3 +1,16 @@\n+2009-01-03  Harry Metske <metskem@apache.org>\n+\n+        * 3.0.0-svn-43\n+        \n+        * JSPWIKI-452 - The LoggerFactory is now also multi-wiki-per-JVM capable\n+        Fixed a lot JUnit tests, mostly adding a m_engine.shutdown() to the tearDown()\n+        \n+        Removed the NPE checks from LoggerImpl, the NPE's were a result of stopping\n+        the webapp before stopping the background threads, this has been solved by\n+        invoking engine.shutdown() from the SessionMonitor (thanks to Andrew).\n+        \n+        Cleanup of AdminBeanManager and WikiEngine\n+\n 2009-01-02  Harry Metske <metskem@apache.org>\n \n         * 3.0.0-svn-42",
                "raw_url": "https://github.com/apache/jspwiki/raw/7a24a129ab55caa0ebda308cff3cca39ae571efa/ChangeLog",
                "sha": "b7bfa39aa92e5ae6d4959208e14712daba2d2889",
                "status": "modified"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/jspwiki/blob/7a24a129ab55caa0ebda308cff3cca39ae571efa/src/com/ecyrd/jspwiki/Release.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/jspwiki/contents/src/com/ecyrd/jspwiki/Release.java?ref=7a24a129ab55caa0ebda308cff3cca39ae571efa",
                "deletions": 1,
                "filename": "src/com/ecyrd/jspwiki/Release.java",
                "patch": "@@ -77,7 +77,7 @@ Licensed to the Apache Software Foundation (ASF) under one\n      *  <p>\n      *  If the build identifier is empty, it is not added.\n      */\n-    public static final String     BUILD         = \"42\";\n+    public static final String     BUILD         = \"43\";\n     \n     /**\n      *  This is the generic version string you should use",
                "raw_url": "https://github.com/apache/jspwiki/raw/7a24a129ab55caa0ebda308cff3cca39ae571efa/src/com/ecyrd/jspwiki/Release.java",
                "sha": "5e76924a257c9ba29dff24e71cca41eff4ed2a32",
                "status": "modified"
            },
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/jspwiki/blob/7a24a129ab55caa0ebda308cff3cca39ae571efa/src/com/ecyrd/jspwiki/WikiEngine.java",
                "changes": 18,
                "contents_url": "https://api.github.com/repos/apache/jspwiki/contents/src/com/ecyrd/jspwiki/WikiEngine.java?ref=7a24a129ab55caa0ebda308cff3cca39ae571efa",
                "deletions": 16,
                "filename": "src/com/ecyrd/jspwiki/WikiEngine.java",
                "patch": "@@ -428,25 +428,11 @@ private void initialize( Properties props )\n         m_startTime  = new Date();\n         m_properties = props;\n \n-        //\n-        //  Initialized log4j.  However, make sure that\n-        //  we don't initialize it multiple times.  Also, if\n-        //  all of the log4j statements have been removed from\n-        //  the property file, we do not do any property setting\n-        //  either.q\n-        //\n-//        if( !c_configured )\n-//        {\n-//            if( props.getProperty(\"log4j.rootCategory\") != null )\n-//            {\n-//                PropertyConfigurator.configure( props );\n-//            }\n-//            c_configured = true;\n-//        }\n+        LoggerFactory.initialize( m_properties.getProperty( PROP_APPNAME ) );\n \n         log.info(\"*******************************************\");\n         log.info(Release.APPNAME+\" \"+Release.getVersionString()+\" starting. Whee!\");\n-\n+        \n         fireEvent( WikiEngineEvent.INITIALIZING ); // begin initialization\n \n         log.debug(\"Java version: \"+System.getProperty(\"java.runtime.version\"));",
                "raw_url": "https://github.com/apache/jspwiki/raw/7a24a129ab55caa0ebda308cff3cca39ae571efa/src/com/ecyrd/jspwiki/WikiEngine.java",
                "sha": "b9c9959da2943592e51ad5a68d4da5de34d86a17",
                "status": "modified"
            },
            {
                "additions": 36,
                "blob_url": "https://github.com/apache/jspwiki/blob/7a24a129ab55caa0ebda308cff3cca39ae571efa/src/com/ecyrd/jspwiki/log/LoggerFactory.java",
                "changes": 48,
                "contents_url": "https://api.github.com/repos/apache/jspwiki/contents/src/com/ecyrd/jspwiki/log/LoggerFactory.java?ref=7a24a129ab55caa0ebda308cff3cca39ae571efa",
                "deletions": 12,
                "filename": "src/com/ecyrd/jspwiki/log/LoggerFactory.java",
                "patch": "@@ -32,6 +32,8 @@ Licensed to the Apache Software Foundation (ASF) under one\n import org.slf4j.bridge.SLF4JBridgeHandler;\n \n import com.ecyrd.jspwiki.Release;\n+import com.ecyrd.jspwiki.WikiEngine;\n+import com.ecyrd.jspwiki.parser.MarkupParser;\n \n /**\n  * <p>\n@@ -62,12 +64,8 @@ Licensed to the Apache Software Foundation (ASF) under one\n     private static final String LOG4J_LOGGER_CLASS = \"org.apache.log4j.Logger\";\n \n     private static HashMap<String, LoggerImpl> c_registeredLoggers = new HashMap<String, LoggerImpl>( 200 );\n-\n-    /**\n-     *   @TODO  We need something here to make the Logger MBeans unique across the JVM, this will not work if you\n-     *                     run multiple wiki's in the same JVM, same is true for other MBeans. \n-     */\n-    private static final String OBJECTNAME_PREFIX = Release.APPNAME + \":component=Loggers,name=\";\n+    \n+    private static String c_wikiName = null;\n \n     static\n     {\n@@ -80,7 +78,19 @@ Licensed to the Apache Software Foundation (ASF) under one\n     private LoggerFactory()\n     {}\n \n-\n+    /**\n+     * The wikiName should be passed to us as soon as possible.\n+     * This means that we cannot register all LoggerMBeans because \n+     * some request for Loggers come in before we have the wikiName\n+     * \n+     * @param wikiName the name of the Wiki, this is necessary if we run multiple\n+     *                           wikis in the same JVM\n+     */\n+    public static void initialize( String wikiName )\n+    {\n+        c_wikiName = MarkupParser.cleanLink( wikiName );\n+    }\n+    \n     /**\n      *  Utility method for locating a Logger based on a Class.\n      *  \n@@ -156,11 +166,20 @@ private static void registerLoggerMBean( String loggerName )\n             Class mbeanClass = Class.forName( \"org.apache.log4j.jmx.LoggerDynamicMBean\" );\n             Constructor constr = mbeanClass.getConstructor( loggerClass );\n             Object dynMBean = constr.newInstance( arglist );\n-            ObjectName mbeanName = new ObjectName( Release.APPNAME + \":component=Loggers,name=\" + loggerName );\n-            MBeanServer mbeanServer =  ManagementFactory.getPlatformMBeanServer();\n-            if( !mbeanServer.isRegistered( mbeanName ) )\n+            ObjectName mbeanName = new ObjectName( getObjectNamePrefix() + loggerName );\n+            MBeanServer mbeanServer = ManagementFactory.getPlatformMBeanServer();\n+            if( c_wikiName != null )\n             {\n-                mbeanServer.registerMBean( dynMBean, mbeanName );\n+                if( !mbeanServer.isRegistered( mbeanName ) )\n+                {\n+                    mbeanServer.registerMBean( dynMBean, mbeanName );\n+                }\n+                else\n+                {\n+                    throw new RuntimeException( \"JMX bean named \" + getObjectNamePrefix() + loggerName\n+                                                + \" is already registered. Hint: are you running 2 webapps with the same \"\n+                                                + WikiEngine.PROP_APPNAME + \"?\" );\n+                }\n             }\n         }\n         catch( ClassNotFoundException cnfe )\n@@ -189,7 +208,7 @@ public static void unRegisterAllLoggerMBeans()\n         {\n             try\n             {\n-                ObjectName mbeanName = new ObjectName( OBJECTNAME_PREFIX + loggerName );\n+                ObjectName mbeanName = new ObjectName( getObjectNamePrefix() + loggerName );\n                 ManagementFactory.getPlatformMBeanServer().unregisterMBean( mbeanName );\n             }\n             catch( Exception e )\n@@ -198,4 +217,9 @@ public static void unRegisterAllLoggerMBeans()\n             }\n         }\n     }\n+    \n+    private static String getObjectNamePrefix() \n+    {\n+        return Release.APPNAME + \":wiki=\" + c_wikiName + \",component=Loggers,name=\";\n+    }\n }",
                "raw_url": "https://github.com/apache/jspwiki/raw/7a24a129ab55caa0ebda308cff3cca39ae571efa/src/com/ecyrd/jspwiki/log/LoggerFactory.java",
                "sha": "442d611070ac021d3ecf8f956e5bf0f7eb36a5c6",
                "status": "modified"
            },
            {
                "additions": 4,
                "blob_url": "https://github.com/apache/jspwiki/blob/7a24a129ab55caa0ebda308cff3cca39ae571efa/src/com/ecyrd/jspwiki/log/LoggerImpl.java",
                "changes": 8,
                "contents_url": "https://api.github.com/repos/apache/jspwiki/contents/src/com/ecyrd/jspwiki/log/LoggerImpl.java?ref=7a24a129ab55caa0ebda308cff3cca39ae571efa",
                "deletions": 4,
                "filename": "src/com/ecyrd/jspwiki/log/LoggerImpl.java",
                "patch": "@@ -143,24 +143,24 @@ public void debug( String string, Throwable t, Object... params )\n     /** {@inheritDoc} */\n     public boolean isErrorEnabled()\n     {\n-        return m_slf4jLogger == null ? false : m_slf4jLogger.isErrorEnabled();\n+        return m_slf4jLogger.isErrorEnabled();\n     }\n \n     /** {@inheritDoc} */\n     public boolean isWarnEnabled()\n     {\n-        return m_slf4jLogger == null ? false : m_slf4jLogger.isWarnEnabled();\n+        return m_slf4jLogger.isWarnEnabled();\n     }\n \n     /** {@inheritDoc} */\n     public boolean isInfoEnabled()\n     {\n-        return m_slf4jLogger == null ? false : m_slf4jLogger.isInfoEnabled();\n+        return m_slf4jLogger.isInfoEnabled();\n     }\n \n     /** {@inheritDoc} */\n     public boolean isDebugEnabled()\n     {\n-        return m_slf4jLogger == null ? false : m_slf4jLogger.isDebugEnabled();\n+        return m_slf4jLogger.isDebugEnabled();\n     }\n }",
                "raw_url": "https://github.com/apache/jspwiki/raw/7a24a129ab55caa0ebda308cff3cca39ae571efa/src/com/ecyrd/jspwiki/log/LoggerImpl.java",
                "sha": "6b05d2faab3d834480ab4ebb6f84876ebaf4643d",
                "status": "modified"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/jspwiki/blob/7a24a129ab55caa0ebda308cff3cca39ae571efa/src/com/ecyrd/jspwiki/ui/admin/AdminBeanManager.java",
                "changes": 17,
                "contents_url": "https://api.github.com/repos/apache/jspwiki/contents/src/com/ecyrd/jspwiki/ui/admin/AdminBeanManager.java?ref=7a24a129ab55caa0ebda308cff3cca39ae571efa",
                "deletions": 16,
                "filename": "src/com/ecyrd/jspwiki/ui/admin/AdminBeanManager.java",
                "patch": "@@ -59,8 +59,7 @@ Licensed to the Apache Software Foundation (ASF) under one\n \n     public AdminBeanManager( WikiEngine engine )\n     {\n-        log.info(\"Using JDK 1.5 Platform MBeanServer\");\n-        m_mbeanServer = MBeanServerFactory15.getServer();\n+        m_mbeanServer = ManagementFactory.getPlatformMBeanServer();\n \n         m_engine = engine;\n \n@@ -253,20 +252,6 @@ public AdminBean findBean( String id )\n         return null;\n     }\n \n-    /**\n-     *  Provides a JDK 1.5-compliant version of the MBeanServerFactory. This\n-     *  will simply bind to the platform MBeanServer.\n-     */\n-    private static final class MBeanServerFactory15\n-    {\n-        private MBeanServerFactory15()\n-        {}\n-\n-        public static MBeanServer getServer()\n-        {\n-            return ManagementFactory.getPlatformMBeanServer();\n-        }\n-    }\n \n     /**\n      *  Returns the type identifier for a string type.",
                "raw_url": "https://github.com/apache/jspwiki/raw/7a24a129ab55caa0ebda308cff3cca39ae571efa/src/com/ecyrd/jspwiki/ui/admin/AdminBeanManager.java",
                "sha": "f10701309caeca3cefaacf7253ba4a7f44ebf6e3",
                "status": "modified"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/jspwiki/blob/7a24a129ab55caa0ebda308cff3cca39ae571efa/src/com/ecyrd/jspwiki/util/ClassUtil.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/jspwiki/contents/src/com/ecyrd/jspwiki/util/ClassUtil.java?ref=7a24a129ab55caa0ebda308cff3cca39ae571efa",
                "deletions": 1,
                "filename": "src/com/ecyrd/jspwiki/util/ClassUtil.java",
                "patch": "@@ -311,7 +311,7 @@ public static Object getMappedObject( String requestedClass, Object[] initargs )\n         {\n             log.info( \"You tried to instantiate an abstract class \"+requestedClass, e );\n             \n-            throw new WikiException(\"Failed to instantiate class \"+requestedClass);\n+            throw new WikiException(\"Failed to instantiate class \"+requestedClass + \", reason: \" + e.getCause());\n         }\n     }\n ",
                "raw_url": "https://github.com/apache/jspwiki/raw/7a24a129ab55caa0ebda308cff3cca39ae571efa/src/com/ecyrd/jspwiki/util/ClassUtil.java",
                "sha": "f2d3da56fc5a7941a6329b8257b44f0e98808e2c",
                "status": "modified"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/jspwiki/blob/7a24a129ab55caa0ebda308cff3cca39ae571efa/tests/com/ecyrd/jspwiki/PageManagerTest.java",
                "changes": 1,
                "contents_url": "https://api.github.com/repos/apache/jspwiki/contents/tests/com/ecyrd/jspwiki/PageManagerTest.java?ref=7a24a129ab55caa0ebda308cff3cca39ae571efa",
                "deletions": 0,
                "filename": "tests/com/ecyrd/jspwiki/PageManagerTest.java",
                "patch": "@@ -50,6 +50,7 @@ public void setUp()\n \n     public void tearDown()\n     {\n+        engine.shutdown();\n     }\n \n     public void testPageCacheExists()",
                "raw_url": "https://github.com/apache/jspwiki/raw/7a24a129ab55caa0ebda308cff3cca39ae571efa/tests/com/ecyrd/jspwiki/PageManagerTest.java",
                "sha": "c82f15b7285b10f8be7af262d6cf9759730a5946",
                "status": "modified"
            },
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/jspwiki/blob/7a24a129ab55caa0ebda308cff3cca39ae571efa/tests/com/ecyrd/jspwiki/ReferenceManagerTest.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/jspwiki/contents/tests/com/ecyrd/jspwiki/ReferenceManagerTest.java?ref=7a24a129ab55caa0ebda308cff3cca39ae571efa",
                "deletions": 0,
                "filename": "tests/com/ecyrd/jspwiki/ReferenceManagerTest.java",
                "patch": "@@ -92,6 +92,8 @@ public void tearDown()\n         engine.deletePage( \"NewBug\" );\n         engine.deletePage( \"BugOne\" );\n         engine.deletePage( \"BugTwo\" );\n+        \n+        engine.shutdown();\n     }\n \n     public void testNonExistant1()",
                "raw_url": "https://github.com/apache/jspwiki/raw/7a24a129ab55caa0ebda308cff3cca39ae571efa/tests/com/ecyrd/jspwiki/ReferenceManagerTest.java",
                "sha": "89572c6a4b4414b7e0d5f85b1f2e16c15eb281fd",
                "status": "modified"
            },
            {
                "additions": 4,
                "blob_url": "https://github.com/apache/jspwiki/blob/7a24a129ab55caa0ebda308cff3cca39ae571efa/tests/com/ecyrd/jspwiki/VariableManagerTest.java",
                "changes": 5,
                "contents_url": "https://api.github.com/repos/apache/jspwiki/contents/tests/com/ecyrd/jspwiki/VariableManagerTest.java?ref=7a24a129ab55caa0ebda308cff3cca39ae571efa",
                "deletions": 1,
                "filename": "tests/com/ecyrd/jspwiki/VariableManagerTest.java",
                "patch": "@@ -36,6 +36,8 @@ Licensed to the Apache Software Foundation (ASF) under one\n     WikiContext     m_context;\n \n     static final String PAGE_NAME = \"TestPage\";\n+    \n+    TestEngine testEngine = null;\n \n     public VariableManagerTest( String s )\n     {\n@@ -51,7 +53,7 @@ public void setUp()\n             props.load( TestEngine.findTestProperties() );\n \n             m_variableManager = new VariableManager( props );\n-            TestEngine testEngine = new TestEngine( props );\n+            testEngine = new TestEngine( props );\n             m_context = testEngine.getWikiContextFactory().newViewContext( testEngine.createPage(WikiName.valueOf(PAGE_NAME)) );\n \n         }\n@@ -60,6 +62,7 @@ public void setUp()\n \n     public void tearDown()\n     {\n+        testEngine.shutdown();\n     }\n \n     public void testIllegalInsert1()",
                "raw_url": "https://github.com/apache/jspwiki/raw/7a24a129ab55caa0ebda308cff3cca39ae571efa/tests/com/ecyrd/jspwiki/VariableManagerTest.java",
                "sha": "2daf9936b5f5c85bbeb0183ec5873b8c9a2ba4e7",
                "status": "modified"
            },
            {
                "additions": 112,
                "blob_url": "https://github.com/apache/jspwiki/blob/7a24a129ab55caa0ebda308cff3cca39ae571efa/tests/com/ecyrd/jspwiki/WikiEngineTest.java",
                "changes": 223,
                "contents_url": "https://api.github.com/repos/apache/jspwiki/contents/tests/com/ecyrd/jspwiki/WikiEngineTest.java?ref=7a24a129ab55caa0ebda308cff3cca39ae571efa",
                "deletions": 111,
                "filename": "tests/com/ecyrd/jspwiki/WikiEngineTest.java",
                "patch": "@@ -72,7 +72,8 @@ public void setUp()\n                            Long.toString(PAGEPROVIDER_RESCAN_PERIOD) );\n \n         TestEngine.emptyWorkDir();\n-        m_engine = new TestEngine(props);        \n+        \n+        m_engine = new TestEngine(props);\n     }\n \n     public void tearDown()\n@@ -87,6 +88,8 @@ public void tearDown()\n         }\n \n         TestEngine.emptyWorkDir();\n+        \n+        m_engine.shutdown();\n     }\n     \n     public void testNonExistantDirectory()\n@@ -100,24 +103,25 @@ public void testNonExistantDirectory()\n         props.setProperty( FileSystemProvider.PROP_PAGEDIR, \n                            newdir );\n \n-        new TestEngine( props );\n+        m_engine.shutdown();\n+        m_engine = new TestEngine( props );\n \n         File f = new File( newdir );\n \n         assertTrue( \"didn't create it\", f.exists() );\n         assertTrue( \"isn't a dir\", f.isDirectory() );\n \n         f.delete();\n+        \n     }\n \n-    public void testNonExistantDirProperty()\n-        throws Exception\n+    public void testNonExistantDirProperty() throws Exception\n     {\n         props.remove( FileSystemProvider.PROP_PAGEDIR );\n-\n         try\n         {\n-            new TestEngine( props );\n+            m_engine.shutdown();\n+            m_engine = new TestEngine( props );\n \n             fail( \"Wiki did not warn about missing property.\" );\n         }\n@@ -264,17 +268,16 @@ public void testEncodeNameLatin1()\n                       m_engine.encodeName(name) );\n     }\n \n-    public void testEncodeNameUTF8()\n-        throws Exception\n+    public void testEncodeNameUTF8() throws Exception\n     {\n         String name = \"\\u0041\\u2262\\u0391\\u002E\";\n \n         props.setProperty( WikiEngine.PROP_ENCODING, \"UTF-8\" );\n \n-        WikiEngine engine = new TestEngine( props );\n+        m_engine.shutdown();\n+        m_engine = new TestEngine( props );\n \n-        assertEquals( \"A%E2%89%A2%CE%91.\",\n-                      engine.encodeName(name) );\n+        assertEquals( \"A%E2%89%A2%CE%91.\", m_engine.encodeName( name ) );\n     }\n \n     public void testReadLinks()\n@@ -351,77 +354,73 @@ public void testBeautifyTitleArticle2()\n     }\n     */\n \n-    public void testLatestGet()\n-        throws Exception\n+    public void testLatestGet() throws Exception\n     {\n-        props.setProperty( \"jspwiki.pageProvider\", \n-                           \"com.ecyrd.jspwiki.providers.VerySimpleProvider\" );\n+        props.setProperty( \"jspwiki.pageProvider\", \"com.ecyrd.jspwiki.providers.VerySimpleProvider\" );\n         props.setProperty( \"jspwiki.usePageCache\", \"false\" );\n \n-        WikiEngine engine = new TestEngine( props );\n+        m_engine.shutdown();\n+        m_engine = new TestEngine( props );\n \n-        WikiPage p = engine.getPage( \"test\", -1 );\n+        WikiPage p = m_engine.getPage( \"test\", -1 );\n \n-        VerySimpleProvider vsp = (VerySimpleProvider) engine.getPageManager().getProvider();\n+        VerySimpleProvider vsp = (VerySimpleProvider) m_engine.getPageManager().getProvider();\n \n         assertEquals( \"wrong page\", \"test\", vsp.m_latestReq );\n         assertEquals( \"wrong version\", -1, vsp.m_latestVers );\n-        assertNotNull(\"null\", p);\n+        assertNotNull( \"null\", p );\n     }\n \n-    public void testLatestGet2()\n-        throws Exception\n+    public void testLatestGet2() throws Exception\n     {\n-        props.setProperty( \"jspwiki.pageProvider\", \n-                           \"com.ecyrd.jspwiki.providers.VerySimpleProvider\" );\n-        props.setProperty( \"jspwiki.usePageCache\", \"false\" );\n+            props.setProperty( \"jspwiki.pageProvider\", \"com.ecyrd.jspwiki.providers.VerySimpleProvider\" );\n+            props.setProperty( \"jspwiki.usePageCache\", \"false\" );\n \n-        WikiEngine engine = new TestEngine( props );\n+            m_engine.shutdown();\n+            m_engine = new TestEngine( props );\n \n-        String p = engine.getText( \"test\", -1 );\n+            String p = m_engine.getText( \"test\", -1 );\n \n-        VerySimpleProvider vsp = (VerySimpleProvider) engine.getPageManager().getProvider();\n+            VerySimpleProvider vsp = (VerySimpleProvider) m_engine.getPageManager().getProvider();\n \n-        assertEquals( \"wrong page\", \"test\", vsp.m_latestReq );\n-        assertEquals( \"wrong version\", -1, vsp.m_latestVers );\n-        assertNotNull(\"null\", p);\n-    }\n+            assertEquals( \"wrong page\", \"test\", vsp.m_latestReq );\n+            assertEquals( \"wrong version\", -1, vsp.m_latestVers );\n+            assertNotNull( \"null\", p );\n+        }\n \n-    public void testLatestGet3()\n-        throws Exception\n+    public void testLatestGet3() throws Exception\n     {\n-        props.setProperty( \"jspwiki.pageProvider\", \n-                           \"com.ecyrd.jspwiki.providers.VerySimpleProvider\" );\n-        props.setProperty( \"jspwiki.usePageCache\", \"false\" );\n+            props.setProperty( \"jspwiki.pageProvider\", \"com.ecyrd.jspwiki.providers.VerySimpleProvider\" );\n+            props.setProperty( \"jspwiki.usePageCache\", \"false\" );\n \n-        WikiEngine engine = new TestEngine( props );\n+            m_engine.shutdown();\n+            m_engine = new TestEngine( props );\n \n-        String p = engine.getHTML( \"test\", -1 );\n+            String p = m_engine.getHTML( \"test\", -1 );\n \n-        VerySimpleProvider vsp = (VerySimpleProvider) engine.getPageManager().getProvider();\n+            VerySimpleProvider vsp = (VerySimpleProvider) m_engine.getPageManager().getProvider();\n \n-        assertEquals( \"wrong page\", \"test\", vsp.m_latestReq );\n-        assertEquals( \"wrong version\", 5, vsp.m_latestVers );\n-        assertNotNull(\"null\", p);\n-    }\n+            assertEquals( \"wrong page\", \"test\", vsp.m_latestReq );\n+            assertEquals( \"wrong version\", 5, vsp.m_latestVers );\n+            assertNotNull( \"null\", p );\n+        }\n \n-    public void testLatestGet4()\n-        throws Exception\n+    public void testLatestGet4() throws Exception\n     {\n-        props.setProperty( \"jspwiki.pageProvider\", \n-                           \"com.ecyrd.jspwiki.providers.VerySimpleProvider\" );\n+        props.setProperty( \"jspwiki.pageProvider\", \"com.ecyrd.jspwiki.providers.VerySimpleProvider\" );\n         props.setProperty( \"jspwiki.usePageCache\", \"true\" );\n \n-        WikiEngine engine = new TestEngine( props );\n+        m_engine.shutdown();\n+        m_engine = new TestEngine( props );\n \n-        String p = engine.getHTML( VerySimpleProvider.PAGENAME, -1 );\n+        String p = m_engine.getHTML( VerySimpleProvider.PAGENAME, -1 );\n \n-        CachingProvider cp = (CachingProvider)engine.getPageManager().getProvider();\n+        CachingProvider cp = (CachingProvider) m_engine.getPageManager().getProvider();\n         VerySimpleProvider vsp = (VerySimpleProvider) cp.getRealProvider();\n \n         assertEquals( \"wrong page\", VerySimpleProvider.PAGENAME, vsp.m_latestReq );\n         assertEquals( \"wrong version\", -1, vsp.m_latestVers );\n-        assertNotNull(\"null\", p);\n+        assertNotNull( \"null\", p );\n     }\n \n     /**\n@@ -696,49 +695,50 @@ public void testDeletePageAndAttachments2()\n         assertNull( \"referrers\", refs );\n     }\n     \n-    public void testDeleteVersion()\n-        throws Exception\n+    public void testDeleteVersion() throws Exception\n     {\n         props.setProperty( \"jspwiki.pageProvider\", \"VersioningFileProvider\" );\n-        \n-        TestEngine engine = new TestEngine( props );\n-        engine.saveText( NAME1, \"Test1\" );\n-        engine.saveText( NAME1, \"Test2\" );\n-        engine.saveText( NAME1, \"Test3\" );\n \n-        WikiPage page = engine.getPage( NAME1, 3 );\n+        m_engine.shutdown();\n+        m_engine = new TestEngine( props );\n+        m_engine.saveText( NAME1, \"Test1\" );\n+        m_engine.saveText( NAME1, \"Test2\" );\n+        m_engine.saveText( NAME1, \"Test3\" );\n+\n+        WikiPage page = m_engine.getPage( NAME1, 3 );\n+\n+        m_engine.deleteVersion( page );\n+\n+        assertNull( \"got page\", m_engine.getPage( NAME1, 3 ) );\n+\n+        String content = m_engine.getText( NAME1, WikiProvider.LATEST_VERSION );\n \n-        engine.deleteVersion( page );\n-        \n-        assertNull( \"got page\", engine.getPage( NAME1, 3 ) );\n-        \n-        String content = engine.getText( NAME1, WikiProvider.LATEST_VERSION );\n-        \n         assertEquals( \"content\", \"Test2\", content.trim() );\n     }\n \n-    public void testDeleteVersion2()\n-        throws Exception\n+    public void testDeleteVersion2() throws Exception\n     {\n-        props.setProperty( \"jspwiki.pageProvider\", \"VersioningFileProvider\" );\n-    \n-        TestEngine engine = new TestEngine( props );\n-        engine.saveText( NAME1, \"Test1\" );\n-        engine.saveText( NAME1, \"Test2\" );\n-        engine.saveText( NAME1, \"Test3\" );\n+            props.setProperty( \"jspwiki.pageProvider\", \"VersioningFileProvider\" );\n \n-        WikiPage page = engine.getPage( NAME1, 1 );\n-        \n-        engine.deleteVersion( page );\n-        \n-        assertNull( \"got page\", engine.getPage( NAME1, 1 ) );\n-        \n-        String content = engine.getText( NAME1, WikiProvider.LATEST_VERSION );\n-        \n-        assertEquals( \"content\", \"Test3\", content.trim() );\n-        \n-        assertEquals( \"content1\", \"\", engine.getText(NAME1, 1).trim() );\n-    }\n+            m_engine.shutdown();\n+            m_engine = new TestEngine( props );\n+            m_engine.saveText( NAME1, \"Test1\" );\n+            m_engine.saveText( NAME1, \"Test2\" );\n+            m_engine.saveText( NAME1, \"Test3\" );\n+\n+            WikiPage page = m_engine.getPage( NAME1, 1 );\n+\n+            m_engine.deleteVersion( page );\n+\n+            assertNull( \"got page\", m_engine.getPage( NAME1, 1 ) );\n+\n+            String content = m_engine.getText( NAME1, WikiProvider.LATEST_VERSION );\n+\n+            assertEquals( \"content\", \"Test3\", content.trim() );\n+\n+            assertEquals( \"content1\", \"\", m_engine.getText( NAME1, 1 ).trim() );\n+        }\n+    \n     \n     /**\n      *  Assumes that CachingProvider is in use.\n@@ -853,34 +853,35 @@ public void testExternalModification()\n     }\n \n     /**\n-     *  Tests BugReadingOfVariableNotWorkingForOlderVersions\n+     * Tests BugReadingOfVariableNotWorkingForOlderVersions\n+     * \n      * @throws Exception\n      */\n-    public void testOldVersionVars()\n-        throws Exception\n-    {   \n-        Properties pr = new Properties();\n-        pr.load( TestEngine.findTestProperties(\"/jspwiki_vers.properties\"));\n-        \n-        pr.setProperty( PageManager.PROP_USECACHE, \"true\" );\n-        \n-        TestEngine engine = new TestEngine( pr );\n-        \n-        engine.saveText( NAME1, \"[{SET foo=bar}]\" );\n-    \n-        engine.saveText( NAME1, \"[{SET foo=notbar}]\");\n-    \n-        WikiPage v1 = engine.getPage( NAME1, 1 );\n-        \n-        WikiPage v2 = engine.getPage( NAME1, 2 );\n-        \n-        assertEquals( \"V1\", \"bar\", v1.getAttribute(\"foo\") );\n-        \n-        // FIXME: The following must run as well\n-        assertEquals( \"V2\", \"notbar\", v2.getAttribute(\"foo\") );\n-        \n-        engine.deletePage( NAME1 );\n-    }\n+    public void testOldVersionVars() throws Exception\n+    {\n+            Properties pr = new Properties();\n+            pr.load( TestEngine.findTestProperties( \"/jspwiki_vers.properties\" ) );\n+\n+            pr.setProperty( PageManager.PROP_USECACHE, \"true\" );\n+\n+            m_engine.shutdown();\n+            m_engine = new TestEngine( pr );\n+\n+            m_engine.saveText( NAME1, \"[{SET foo=bar}]\" );\n+\n+            m_engine.saveText( NAME1, \"[{SET foo=notbar}]\" );\n+\n+            WikiPage v1 = m_engine.getPage( NAME1, 1 );\n+\n+            WikiPage v2 = m_engine.getPage( NAME1, 2 );\n+\n+            assertEquals( \"V1\", \"bar\", v1.getAttribute( \"foo\" ) );\n+\n+            // FIXME: The following must run as well\n+            assertEquals( \"V2\", \"notbar\", v2.getAttribute( \"foo\" ) );\n+\n+            m_engine.deletePage( NAME1 );\n+        }\n     \n     public void testSpacedNames1()\n         throws Exception",
                "raw_url": "https://github.com/apache/jspwiki/raw/7a24a129ab55caa0ebda308cff3cca39ae571efa/tests/com/ecyrd/jspwiki/WikiEngineTest.java",
                "sha": "4fb80cd2ee90054ca75b4e7c0e4db1cf320eb664",
                "status": "modified"
            },
            {
                "additions": 3,
                "blob_url": "https://github.com/apache/jspwiki/blob/7a24a129ab55caa0ebda308cff3cca39ae571efa/tests/com/ecyrd/jspwiki/WikiSessionTest.java",
                "changes": 3,
                "contents_url": "https://api.github.com/repos/apache/jspwiki/contents/tests/com/ecyrd/jspwiki/WikiSessionTest.java?ref=7a24a129ab55caa0ebda308cff3cca39ae571efa",
                "deletions": 0,
                "filename": "tests/com/ecyrd/jspwiki/WikiSessionTest.java",
                "patch": "@@ -63,6 +63,7 @@ protected void setUp() throws Exception\n     protected void tearDown() throws Exception\n     {\n         super.tearDown();\n+        m_engine.shutdown();\n     }\n \n     public void testRoles() throws Exception\n@@ -202,6 +203,8 @@ public void testAuthenticationCookieWhenOn() throws WikiException, ServletExcept\n         Properties props = new Properties();\n         props.load( TestEngine.findTestProperties() );\n         props.setProperty( AuthenticationManager.PROP_ALLOW_COOKIE_AUTH, \"true\");\n+        \n+        m_engine.shutdown();\n         m_engine = new TestEngine( props );\n         \n         MockHttpServletRequest request;",
                "raw_url": "https://github.com/apache/jspwiki/raw/7a24a129ab55caa0ebda308cff3cca39ae571efa/tests/com/ecyrd/jspwiki/WikiSessionTest.java",
                "sha": "c6fe47b58fe2567410a99d785d2972765f5ffe54",
                "status": "modified"
            },
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/jspwiki/blob/7a24a129ab55caa0ebda308cff3cca39ae571efa/tests/com/ecyrd/jspwiki/action/GroupActionBeanTest.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/jspwiki/contents/tests/com/ecyrd/jspwiki/action/GroupActionBeanTest.java?ref=7a24a129ab55caa0ebda308cff3cca39ae571efa",
                "deletions": 0,
                "filename": "tests/com/ecyrd/jspwiki/action/GroupActionBeanTest.java",
                "patch": "@@ -66,6 +66,8 @@ public void setUp()\n     public void tearDown()\n     {\n         deleteGroup( \"TestGroup\" );\n+        \n+        m_engine.shutdown();\n     }\n \n     public void testView() throws Exception",
                "raw_url": "https://github.com/apache/jspwiki/raw/7a24a129ab55caa0ebda308cff3cca39ae571efa/tests/com/ecyrd/jspwiki/action/GroupActionBeanTest.java",
                "sha": "5ca142d2616f6a0a2a8ec907b4447628d0b362b3",
                "status": "modified"
            },
            {
                "additions": 5,
                "blob_url": "https://github.com/apache/jspwiki/blob/7a24a129ab55caa0ebda308cff3cca39ae571efa/tests/com/ecyrd/jspwiki/action/LoginActionBeanTest.java",
                "changes": 5,
                "contents_url": "https://api.github.com/repos/apache/jspwiki/contents/tests/com/ecyrd/jspwiki/action/LoginActionBeanTest.java?ref=7a24a129ab55caa0ebda308cff3cca39ae571efa",
                "deletions": 0,
                "filename": "tests/com/ecyrd/jspwiki/action/LoginActionBeanTest.java",
                "patch": "@@ -61,6 +61,11 @@ public void setUp()\n         }\n     }\n \n+    public void tearDown()\n+    {\n+        m_engine.shutdown();\n+    }\n+\n     public void testLogin() throws Exception\n     {\n         MockRoundtrip trip;",
                "raw_url": "https://github.com/apache/jspwiki/raw/7a24a129ab55caa0ebda308cff3cca39ae571efa/tests/com/ecyrd/jspwiki/action/LoginActionBeanTest.java",
                "sha": "f6ce4f4c6ba3987dda6f76874333dc37dbd79f22",
                "status": "modified"
            },
            {
                "additions": 5,
                "blob_url": "https://github.com/apache/jspwiki/blob/7a24a129ab55caa0ebda308cff3cca39ae571efa/tests/com/ecyrd/jspwiki/action/RenameActionBeanTest.java",
                "changes": 5,
                "contents_url": "https://api.github.com/repos/apache/jspwiki/contents/tests/com/ecyrd/jspwiki/action/RenameActionBeanTest.java?ref=7a24a129ab55caa0ebda308cff3cca39ae571efa",
                "deletions": 0,
                "filename": "tests/com/ecyrd/jspwiki/action/RenameActionBeanTest.java",
                "patch": "@@ -52,6 +52,11 @@ public void setUp()\n             throw new RuntimeException(\"Could not set up TestEngine: \" + e.getMessage());\n         }\n     }\n+\n+    public void tearDown()\n+    {\n+        m_engine.shutdown();\n+    }\n     \n     public void testValidation() throws Exception {\n         // Save test page",
                "raw_url": "https://github.com/apache/jspwiki/raw/7a24a129ab55caa0ebda308cff3cca39ae571efa/tests/com/ecyrd/jspwiki/action/RenameActionBeanTest.java",
                "sha": "ab800edc0a4b00bfe37a82172a486ccca7944cdd",
                "status": "modified"
            },
            {
                "additions": 6,
                "blob_url": "https://github.com/apache/jspwiki/blob/7a24a129ab55caa0ebda308cff3cca39ae571efa/tests/com/ecyrd/jspwiki/action/UserPreferencesActionBeanTest.java",
                "changes": 6,
                "contents_url": "https://api.github.com/repos/apache/jspwiki/contents/tests/com/ecyrd/jspwiki/action/UserPreferencesActionBeanTest.java?ref=7a24a129ab55caa0ebda308cff3cca39ae571efa",
                "deletions": 0,
                "filename": "tests/com/ecyrd/jspwiki/action/UserPreferencesActionBeanTest.java",
                "patch": "@@ -55,6 +55,12 @@ public void setUp()\n         }\n     }\n \n+    public void tearDown()\n+    {\n+        m_engine.shutdown();\n+    }\n+    \n+\n     public void testCreateAssertedName() throws Exception\n     {\n         MockRoundtrip trip;",
                "raw_url": "https://github.com/apache/jspwiki/raw/7a24a129ab55caa0ebda308cff3cca39ae571efa/tests/com/ecyrd/jspwiki/action/UserPreferencesActionBeanTest.java",
                "sha": "b361d0a4d85e0fe1e8320040f40f18bbb7665cb0",
                "status": "modified"
            },
            {
                "additions": 6,
                "blob_url": "https://github.com/apache/jspwiki/blob/7a24a129ab55caa0ebda308cff3cca39ae571efa/tests/com/ecyrd/jspwiki/action/UserProfileActionBeanTest.java",
                "changes": 6,
                "contents_url": "https://api.github.com/repos/apache/jspwiki/contents/tests/com/ecyrd/jspwiki/action/UserProfileActionBeanTest.java?ref=7a24a129ab55caa0ebda308cff3cca39ae571efa",
                "deletions": 0,
                "filename": "tests/com/ecyrd/jspwiki/action/UserProfileActionBeanTest.java",
                "patch": "@@ -54,6 +54,12 @@ public void setUp()\n         }\n     }\n \n+    public void tearDown()\n+    {\n+        m_engine.shutdown();\n+    }\n+    \n+\n     public void testMissingParameters() throws Exception\n     {\n         MockRoundtrip trip;",
                "raw_url": "https://github.com/apache/jspwiki/raw/7a24a129ab55caa0ebda308cff3cca39ae571efa/tests/com/ecyrd/jspwiki/action/UserProfileActionBeanTest.java",
                "sha": "0b0def61ff4c1f6ee3e21bfaed871cac9c453991",
                "status": "modified"
            },
            {
                "additions": 6,
                "blob_url": "https://github.com/apache/jspwiki/blob/7a24a129ab55caa0ebda308cff3cca39ae571efa/tests/com/ecyrd/jspwiki/action/ViewActionBeanTest.java",
                "changes": 6,
                "contents_url": "https://api.github.com/repos/apache/jspwiki/contents/tests/com/ecyrd/jspwiki/action/ViewActionBeanTest.java?ref=7a24a129ab55caa0ebda308cff3cca39ae571efa",
                "deletions": 0,
                "filename": "tests/com/ecyrd/jspwiki/action/ViewActionBeanTest.java",
                "patch": "@@ -49,6 +49,12 @@ public void setUp()\n             throw new RuntimeException(\"Could not set up TestEngine: \" + e.getMessage());\n         }\n     }\n+\n+    public void tearDown()\n+    {\n+        m_engine.shutdown();\n+    }\n+    \n     \n     public void testView() throws Exception {\n         // Save page Main",
                "raw_url": "https://github.com/apache/jspwiki/raw/7a24a129ab55caa0ebda308cff3cca39ae571efa/tests/com/ecyrd/jspwiki/action/ViewActionBeanTest.java",
                "sha": "5facfcada8e3095e12fdfcdd50c56934e2d70ae6",
                "status": "modified"
            },
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/jspwiki/blob/7a24a129ab55caa0ebda308cff3cca39ae571efa/tests/com/ecyrd/jspwiki/action/WikiContextFactoryTest.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/jspwiki/contents/tests/com/ecyrd/jspwiki/action/WikiContextFactoryTest.java?ref=7a24a129ab55caa0ebda308cff3cca39ae571efa",
                "deletions": 0,
                "filename": "tests/com/ecyrd/jspwiki/action/WikiContextFactoryTest.java",
                "patch": "@@ -62,6 +62,8 @@ protected void setUp() throws Exception\n     protected void tearDown() throws Exception\n     {\n         m_engine.deletePage( \"TestPage\" );\n+        \n+        m_engine.shutdown();\n     }\n     \n     public void testNewActionBean() throws WikiException",
                "raw_url": "https://github.com/apache/jspwiki/raw/7a24a129ab55caa0ebda308cff3cca39ae571efa/tests/com/ecyrd/jspwiki/action/WikiContextFactoryTest.java",
                "sha": "0f77575d8d5d9b41d83107509451552e0c57eb44",
                "status": "modified"
            },
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/jspwiki/blob/7a24a129ab55caa0ebda308cff3cca39ae571efa/tests/com/ecyrd/jspwiki/attachment/AttachmentManagerTest.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/jspwiki/contents/tests/com/ecyrd/jspwiki/attachment/AttachmentManagerTest.java?ref=7a24a129ab55caa0ebda308cff3cca39ae571efa",
                "deletions": 0,
                "filename": "tests/com/ecyrd/jspwiki/attachment/AttachmentManagerTest.java",
                "patch": "@@ -86,6 +86,8 @@ public void tearDown()\n         TestEngine.deleteAttachments(NAMEU);\n \n         TestEngine.emptyWorkDir();\n+        \n+        m_engine.shutdown();\n     }\n \n     public void testEnabled()        ",
                "raw_url": "https://github.com/apache/jspwiki/raw/7a24a129ab55caa0ebda308cff3cca39ae571efa/tests/com/ecyrd/jspwiki/attachment/AttachmentManagerTest.java",
                "sha": "b436e67c46dc47e7203a3ed41aca7af229b989a5",
                "status": "modified"
            },
            {
                "additions": 13,
                "blob_url": "https://github.com/apache/jspwiki/blob/7a24a129ab55caa0ebda308cff3cca39ae571efa/tests/com/ecyrd/jspwiki/auth/AuthenticationManagerTest.java",
                "changes": 19,
                "contents_url": "https://api.github.com/repos/apache/jspwiki/contents/tests/com/ecyrd/jspwiki/auth/AuthenticationManagerTest.java?ref=7a24a129ab55caa0ebda308cff3cca39ae571efa",
                "deletions": 6,
                "filename": "tests/com/ecyrd/jspwiki/auth/AuthenticationManagerTest.java",
                "patch": "@@ -29,7 +29,6 @@ Licensed to the Apache Software Foundation (ASF) under one\n import junit.framework.TestSuite;\n \n import com.ecyrd.jspwiki.TestEngine;\n-import com.ecyrd.jspwiki.WikiEngine;\n import com.ecyrd.jspwiki.WikiSession;\n import com.ecyrd.jspwiki.WikiSessionTest;\n import com.ecyrd.jspwiki.auth.authorize.Group;\n@@ -65,7 +64,13 @@ public void setUp() throws Exception\n         m_groupMgr = m_engine.getGroupManager();\n         m_session = WikiSessionTest.adminSession( m_engine );\n     }\n-    \n+\n+    protected void tearDown() throws Exception\n+    {\n+        super.tearDown();\n+        m_engine.shutdown();\n+    }\n+\n     public void testIsUserPrincipal()\n     {\n         assertTrue( AuthenticationManager.isUserPrincipal( new WikiPrincipal( \"Foo\" ) ) );\n@@ -83,8 +88,9 @@ public void testCustomJAASLoginModule() throws Exception\n         props.put( \"jspwiki.loginModule.class\", \"com.ecyrd.jspwiki.auth.login.CookieAssertionLoginModule\" );\n \n         // Init the engine and verify that we initialized with a custom auth login module\n-        WikiEngine engine = new TestEngine( props );\n-        AuthenticationManager authMgr= engine.getAuthenticationManager();\n+        m_engine.shutdown();\n+        m_engine = new TestEngine( props );\n+        AuthenticationManager authMgr= m_engine.getAuthenticationManager();\n         assertEquals( CookieAssertionLoginModule.class, authMgr.m_loginModuleClass );\n     }\n \n@@ -99,8 +105,9 @@ public void testCustomJAASLoginModuleOptions() throws Exception\n         props.put( \"jspwiki.loginModule.options.key3\", \"value3\" );\n         \n         // Init the engine and verify that we initialized with the correct options\n-        WikiEngine engine = new TestEngine( props );\n-        AuthenticationManager authMgr= engine.getAuthenticationManager();\n+        m_engine.shutdown();\n+        m_engine = new TestEngine( props );\n+        AuthenticationManager authMgr= m_engine.getAuthenticationManager();\n         Map<String,String> options = authMgr.m_loginModuleOptions;\n         assertEquals( 3, options.size() );\n         assertTrue( options.containsKey( \"key1\" ) );",
                "raw_url": "https://github.com/apache/jspwiki/raw/7a24a129ab55caa0ebda308cff3cca39ae571efa/tests/com/ecyrd/jspwiki/auth/AuthenticationManagerTest.java",
                "sha": "de76d99ef122b13edc4a908e694cccaedc7f7ac5",
                "status": "modified"
            },
            {
                "additions": 7,
                "blob_url": "https://github.com/apache/jspwiki/blob/7a24a129ab55caa0ebda308cff3cca39ae571efa/tests/com/ecyrd/jspwiki/auth/AuthorizationManagerTest.java",
                "changes": 7,
                "contents_url": "https://api.github.com/repos/apache/jspwiki/contents/tests/com/ecyrd/jspwiki/auth/AuthorizationManagerTest.java?ref=7a24a129ab55caa0ebda308cff3cca39ae571efa",
                "deletions": 0,
                "filename": "tests/com/ecyrd/jspwiki/auth/AuthorizationManagerTest.java",
                "patch": "@@ -102,6 +102,12 @@ public void setUp() throws Exception\n         m_session = WikiSessionTest.adminSession( m_engine );\n     }\n \n+    protected void tearDown() throws Exception\n+    {\n+        super.tearDown();\n+        m_engine.shutdown();\n+    }\n+\n     /**\n      * Tests the default policy. Anonymous users can read, Authenticated can\n      * edit, etc. Uses the default tests/etc/jspwiki.policy file installed by\n@@ -696,6 +702,7 @@ public void testUserPolicy() throws Exception\n         props.put( AuthorizationManager.POLICY, \"jspwiki-testUserPolicy.policy\" );\n         \n         // Initialize the test engine\n+        m_engine.shutdown();\n         m_engine = new TestEngine( props );\n         m_auth = m_engine.getAuthorizationManager();\n         m_groupMgr = m_engine.getGroupManager();",
                "raw_url": "https://github.com/apache/jspwiki/raw/7a24a129ab55caa0ebda308cff3cca39ae571efa/tests/com/ecyrd/jspwiki/auth/AuthorizationManagerTest.java",
                "sha": "9928228c5b698b5ed007bee1887955d151dd3df0",
                "status": "modified"
            },
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/jspwiki/blob/7a24a129ab55caa0ebda308cff3cca39ae571efa/tests/com/ecyrd/jspwiki/auth/GroupManagerTest.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/jspwiki/contents/tests/com/ecyrd/jspwiki/auth/GroupManagerTest.java?ref=7a24a129ab55caa0ebda308cff3cca39ae571efa",
                "deletions": 0,
                "filename": "tests/com/ecyrd/jspwiki/auth/GroupManagerTest.java",
                "patch": "@@ -95,6 +95,8 @@ public void tearDown() throws WikiException\n         m_groupMgr.removeGroup( \"Test\" );\n         m_groupMgr.removeGroup( \"Test2\" );\n         m_groupMgr.removeGroup( \"Test3\" );\n+        \n+        m_engine.shutdown();\n    }\n \n     public void testParseGroup() throws WikiSecurityException",
                "raw_url": "https://github.com/apache/jspwiki/raw/7a24a129ab55caa0ebda308cff3cca39ae571efa/tests/com/ecyrd/jspwiki/auth/GroupManagerTest.java",
                "sha": "16f2d4c6252d7c539a4e9b347a23f3ebbc9f023e",
                "status": "modified"
            },
            {
                "additions": 3,
                "blob_url": "https://github.com/apache/jspwiki/blob/7a24a129ab55caa0ebda308cff3cca39ae571efa/tests/com/ecyrd/jspwiki/auth/UserManagerTest.java",
                "changes": 5,
                "contents_url": "https://api.github.com/repos/apache/jspwiki/contents/tests/com/ecyrd/jspwiki/auth/UserManagerTest.java?ref=7a24a129ab55caa0ebda308cff3cca39ae571efa",
                "deletions": 2,
                "filename": "tests/com/ecyrd/jspwiki/auth/UserManagerTest.java",
                "patch": "@@ -36,8 +36,6 @@ Licensed to the Apache Software Foundation (ASF) under one\n import com.ecyrd.jspwiki.auth.user.*;\n import com.ecyrd.jspwiki.workflow.*;\n \n-\n-\n /**\n  * @author Andrew Jaquith\n  */\n@@ -76,6 +74,8 @@ protected void tearDown() throws Exception\n     {\n         groupManager.removeGroup( m_groupName );\n     }\n+    \n+    m_engine.shutdown();\n   }\n \n   /** Call this setup program to use the save-profile workflow. */\n@@ -89,6 +89,7 @@ protected void setUpWithWorkflow() throws Exception\n       \n       // Make sure we are using the XML user database\n       props.put( XMLUserDatabase.PROP_USERDATABASE, \"tests/etc/userdatabase.xml\" );\n+      m_engine.shutdown();\n       m_engine  = new TestEngine( props );\n       m_mgr = m_engine.getUserManager();\n       m_db = m_mgr.getUserDatabase();",
                "raw_url": "https://github.com/apache/jspwiki/raw/7a24a129ab55caa0ebda308cff3cca39ae571efa/tests/com/ecyrd/jspwiki/auth/UserManagerTest.java",
                "sha": "899bc84b4f59f0d3a5aa43fdfa8cfa674ddefc28",
                "status": "modified"
            },
            {
                "additions": 7,
                "blob_url": "https://github.com/apache/jspwiki/blob/7a24a129ab55caa0ebda308cff3cca39ae571efa/tests/com/ecyrd/jspwiki/auth/acl/AclImplTest.java",
                "changes": 10,
                "contents_url": "https://api.github.com/repos/apache/jspwiki/contents/tests/com/ecyrd/jspwiki/auth/acl/AclImplTest.java?ref=7a24a129ab55caa0ebda308cff3cca39ae571efa",
                "deletions": 3,
                "filename": "tests/com/ecyrd/jspwiki/auth/acl/AclImplTest.java",
                "patch": "@@ -53,6 +53,8 @@ Licensed to the Apache Software Foundation (ASF) under one\n     private GroupManager m_groupMgr;\n \n     private WikiSession  m_session;\n+    \n+    private TestEngine m_engine  = null;\n \n     public AclImplTest( String s )\n     {\n@@ -69,9 +71,9 @@ public void setUp() throws Exception\n         super.setUp();\n         Properties props = new Properties();\n         props.load( TestEngine.findTestProperties() );\n-        TestEngine engine  = new TestEngine( props );\n-        m_groupMgr = engine.getGroupManager();\n-        m_session = WikiSessionTest.adminSession( engine );\n+        m_engine  = new TestEngine( props );\n+        m_groupMgr = m_engine.getGroupManager();\n+        m_session = WikiSessionTest.adminSession( m_engine );\n \n         m_acl = new AclImpl();\n         m_aclGroup = new AclImpl();\n@@ -136,6 +138,8 @@ public void tearDown() throws Exception\n     {\n         m_groupMgr.removeGroup( \"FooGroup\" );\n         m_groupMgr.removeGroup( \"BarGroup\" );\n+        \n+        m_engine.shutdown();\n     }\n \n     private boolean inArray( Object[] array, Object key )",
                "raw_url": "https://github.com/apache/jspwiki/raw/7a24a129ab55caa0ebda308cff3cca39ae571efa/tests/com/ecyrd/jspwiki/auth/acl/AclImplTest.java",
                "sha": "fa38264a223916be9dbdd67c2a5fe96acc13ea8d",
                "status": "modified"
            },
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/jspwiki/blob/7a24a129ab55caa0ebda308cff3cca39ae571efa/tests/com/ecyrd/jspwiki/auth/acl/DefaultAclManagerTest.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/jspwiki/contents/tests/com/ecyrd/jspwiki/auth/acl/DefaultAclManagerTest.java?ref=7a24a129ab55caa0ebda308cff3cca39ae571efa",
                "deletions": 0,
                "filename": "tests/com/ecyrd/jspwiki/auth/acl/DefaultAclManagerTest.java",
                "patch": "@@ -70,6 +70,8 @@ public void tearDown()\n         catch ( ProviderException e )\n         {\n         }\n+        \n+        m_engine.shutdown();\n     }\n \n     public void testGetPermissions()",
                "raw_url": "https://github.com/apache/jspwiki/raw/7a24a129ab55caa0ebda308cff3cca39ae571efa/tests/com/ecyrd/jspwiki/auth/acl/DefaultAclManagerTest.java",
                "sha": "6967fabe0a48ae66307eb40a47dcde360b7693e0",
                "status": "modified"
            },
            {
                "additions": 10,
                "blob_url": "https://github.com/apache/jspwiki/blob/7a24a129ab55caa0ebda308cff3cca39ae571efa/tests/com/ecyrd/jspwiki/auth/authorize/GroupTest.java",
                "changes": 12,
                "contents_url": "https://api.github.com/repos/apache/jspwiki/contents/tests/com/ecyrd/jspwiki/auth/authorize/GroupTest.java?ref=7a24a129ab55caa0ebda308cff3cca39ae571efa",
                "deletions": 2,
                "filename": "tests/com/ecyrd/jspwiki/auth/authorize/GroupTest.java",
                "patch": "@@ -36,6 +36,8 @@ Licensed to the Apache Software Foundation (ASF) under one\n     Group m_group;\n     String m_wiki;\n     \n+    WikiEngine m_engine  = null;\n+    \n     public GroupTest( String s )\n     {\n         super( s );\n@@ -45,11 +47,17 @@ public void setUp() throws Exception\n     {\n         Properties props = new Properties();\n         props.load( TestEngine.findTestProperties() );\n-        WikiEngine engine  = new TestEngine( props );\n-        m_wiki = engine.getApplicationName();\n+        m_engine  = new TestEngine( props );\n+        m_wiki = m_engine.getApplicationName();\n         \n         m_group = new Group( \"TestGroup\", m_wiki );\n     }\n+\n+    protected void tearDown() throws Exception\n+    {\n+        super.tearDown();\n+        m_engine.shutdown();\n+    }\n     \n     public void testAdd1()\n     {",
                "raw_url": "https://github.com/apache/jspwiki/raw/7a24a129ab55caa0ebda308cff3cca39ae571efa/tests/com/ecyrd/jspwiki/auth/authorize/GroupTest.java",
                "sha": "f2ddb3d90ad484f9799ef52891b391629d0e3513",
                "status": "modified"
            },
            {
                "additions": 7,
                "blob_url": "https://github.com/apache/jspwiki/blob/7a24a129ab55caa0ebda308cff3cca39ae571efa/tests/com/ecyrd/jspwiki/auth/authorize/JDBCGroupDatabaseTest.java",
                "changes": 10,
                "contents_url": "https://api.github.com/repos/apache/jspwiki/contents/tests/com/ecyrd/jspwiki/auth/authorize/JDBCGroupDatabaseTest.java?ref=7a24a129ab55caa0ebda308cff3cca39ae571efa",
                "deletions": 3,
                "filename": "tests/com/ecyrd/jspwiki/auth/authorize/JDBCGroupDatabaseTest.java",
                "patch": "@@ -49,6 +49,8 @@ Licensed to the Apache Software Foundation (ASF) under one\n     private JDBCGroupDatabase m_db  = null;\n \n     private String            m_wiki;\n+    \n+    private TestEngine m_engine = null;\n \n     /**\n      * @see junit.framework.TestCase#setUp()\n@@ -59,8 +61,8 @@ protected void setUp() throws Exception\n \n         Properties props = new Properties();\n         props.load( TestEngine.findTestProperties() );\n-        WikiEngine engine = new TestEngine( props );\n-        m_wiki = engine.getApplicationName();\n+        m_engine = new TestEngine( props );\n+        m_wiki = m_engine.getApplicationName();\n \n         // Set up the mock JNDI initial context\n         TestJNDIContext.initialize();\n@@ -87,7 +89,7 @@ protected void setUp() throws Exception\n \n         // Initialize the user database\n         m_db = new JDBCGroupDatabase();\n-        m_db.initialize( engine, new Properties() );\n+        m_db.initialize( m_engine, new Properties() );\n     }\n \n     public void tearDown() throws Exception\n@@ -96,6 +98,8 @@ public void tearDown() throws Exception\n         {\n             m_conn.close();\n         }\n+        \n+        m_engine.shutdown();\n     }\n \n     public void testDelete() throws WikiException",
                "raw_url": "https://github.com/apache/jspwiki/raw/7a24a129ab55caa0ebda308cff3cca39ae571efa/tests/com/ecyrd/jspwiki/auth/authorize/JDBCGroupDatabaseTest.java",
                "sha": "fb28c6aa94e60053a67526622cf2b7198f2e7b15",
                "status": "modified"
            },
            {
                "additions": 6,
                "blob_url": "https://github.com/apache/jspwiki/blob/7a24a129ab55caa0ebda308cff3cca39ae571efa/tests/com/ecyrd/jspwiki/auth/authorize/WebContainerAuthorizerTest.java",
                "changes": 6,
                "contents_url": "https://api.github.com/repos/apache/jspwiki/contents/tests/com/ecyrd/jspwiki/auth/authorize/WebContainerAuthorizerTest.java?ref=7a24a129ab55caa0ebda308cff3cca39ae571efa",
                "deletions": 0,
                "filename": "tests/com/ecyrd/jspwiki/auth/authorize/WebContainerAuthorizerTest.java",
                "patch": "@@ -58,6 +58,12 @@ public void setUp() throws Exception\n         }\n     }\n \n+    protected void tearDown() throws Exception\n+    {\n+        super.tearDown();\n+        m_engine.shutdown();\n+    }\n+\n     public void testConstraints() throws Exception\n     {\n         assertTrue( m_authorizer.isConstrained( \"/Delete.jsp\", new Role( \"Admin\" ) ) );",
                "raw_url": "https://github.com/apache/jspwiki/raw/7a24a129ab55caa0ebda308cff3cca39ae571efa/tests/com/ecyrd/jspwiki/auth/authorize/WebContainerAuthorizerTest.java",
                "sha": "316a5900018b2b0ac8906173710abac91e9f8d94",
                "status": "modified"
            },
            {
                "additions": 11,
                "blob_url": "https://github.com/apache/jspwiki/blob/7a24a129ab55caa0ebda308cff3cca39ae571efa/tests/com/ecyrd/jspwiki/auth/authorize/XMLGroupDatabaseTest.java",
                "changes": 15,
                "contents_url": "https://api.github.com/repos/apache/jspwiki/contents/tests/com/ecyrd/jspwiki/auth/authorize/XMLGroupDatabaseTest.java?ref=7a24a129ab55caa0ebda308cff3cca39ae571efa",
                "deletions": 4,
                "filename": "tests/com/ecyrd/jspwiki/auth/authorize/XMLGroupDatabaseTest.java",
                "patch": "@@ -27,7 +27,6 @@ Licensed to the Apache Software Foundation (ASF) under one\n import junit.framework.TestCase;\n \n import com.ecyrd.jspwiki.TestEngine;\n-import com.ecyrd.jspwiki.WikiEngine;\n import com.ecyrd.jspwiki.auth.NoSuchPrincipalException;\n import com.ecyrd.jspwiki.auth.WikiPrincipal;\n import com.ecyrd.jspwiki.auth.WikiSecurityException;\n@@ -43,6 +42,8 @@ Licensed to the Apache Software Foundation (ASF) under one\n   private XMLGroupDatabase m_db;\n \n   private String           m_wiki;\n+  \n+  private TestEngine m_engine  = null;\n \n   /**\n    * @see junit.framework.TestCase#setUp()\n@@ -52,10 +53,16 @@ protected void setUp() throws Exception\n       super.setUp();\n       Properties props = new Properties();\n       props.load( TestEngine.findTestProperties() );\n-      WikiEngine engine  = new TestEngine( props );\n+      m_engine  = new TestEngine( props );\n       m_db = new XMLGroupDatabase();\n-      m_db.initialize( engine, props );\n-      m_wiki = engine.getApplicationName();\n+      m_db.initialize( m_engine, props );\n+      m_wiki = m_engine.getApplicationName();\n+  }\n+\n+  protected void tearDown() throws Exception\n+  {\n+      super.tearDown();\n+      m_engine.shutdown();\n   }\n \n   public void testDelete() throws WikiException",
                "raw_url": "https://github.com/apache/jspwiki/raw/7a24a129ab55caa0ebda308cff3cca39ae571efa/tests/com/ecyrd/jspwiki/auth/authorize/XMLGroupDatabaseTest.java",
                "sha": "d7ec60f9ac5b61c2f7121b58d86e586e755176c8",
                "status": "modified"
            },
            {
                "additions": 6,
                "blob_url": "https://github.com/apache/jspwiki/blob/7a24a129ab55caa0ebda308cff3cca39ae571efa/tests/com/ecyrd/jspwiki/auth/login/AnonymousLoginModuleTest.java",
                "changes": 6,
                "contents_url": "https://api.github.com/repos/apache/jspwiki/contents/tests/com/ecyrd/jspwiki/auth/login/AnonymousLoginModuleTest.java?ref=7a24a129ab55caa0ebda308cff3cca39ae571efa",
                "deletions": 0,
                "filename": "tests/com/ecyrd/jspwiki/auth/login/AnonymousLoginModuleTest.java",
                "patch": "@@ -129,4 +129,10 @@ protected void setUp() throws Exception\n         }\n     }\n \n+    protected void tearDown() throws Exception\n+    {\n+        super.tearDown();\n+        m_engine.shutdown();\n+    }\n+\n }\n\\ No newline at end of file",
                "raw_url": "https://github.com/apache/jspwiki/raw/7a24a129ab55caa0ebda308cff3cca39ae571efa/tests/com/ecyrd/jspwiki/auth/login/AnonymousLoginModuleTest.java",
                "sha": "163e923c1a51863cf642c6b416d5bea05d020d33",
                "status": "modified"
            },
            {
                "additions": 6,
                "blob_url": "https://github.com/apache/jspwiki/blob/7a24a129ab55caa0ebda308cff3cca39ae571efa/tests/com/ecyrd/jspwiki/auth/login/CookieAssertionLoginModuleTest.java",
                "changes": 6,
                "contents_url": "https://api.github.com/repos/apache/jspwiki/contents/tests/com/ecyrd/jspwiki/auth/login/CookieAssertionLoginModuleTest.java?ref=7a24a129ab55caa0ebda308cff3cca39ae571efa",
                "deletions": 0,
                "filename": "tests/com/ecyrd/jspwiki/auth/login/CookieAssertionLoginModuleTest.java",
                "patch": "@@ -141,4 +141,10 @@ protected void setUp() throws Exception\n         }\n     }\n \n+    protected void tearDown() throws Exception\n+    {\n+        super.tearDown();\n+        m_engine.shutdown();\n+    }\n+\n }\n\\ No newline at end of file",
                "raw_url": "https://github.com/apache/jspwiki/raw/7a24a129ab55caa0ebda308cff3cca39ae571efa/tests/com/ecyrd/jspwiki/auth/login/CookieAssertionLoginModuleTest.java",
                "sha": "aabd8d481e771e83bb1f02c88c6df8845c0557aa",
                "status": "modified"
            },
            {
                "additions": 8,
                "blob_url": "https://github.com/apache/jspwiki/blob/7a24a129ab55caa0ebda308cff3cca39ae571efa/tests/com/ecyrd/jspwiki/auth/login/UserDatabaseLoginModuleTest.java",
                "changes": 10,
                "contents_url": "https://api.github.com/repos/apache/jspwiki/contents/tests/com/ecyrd/jspwiki/auth/login/UserDatabaseLoginModuleTest.java?ref=7a24a129ab55caa0ebda308cff3cca39ae571efa",
                "deletions": 2,
                "filename": "tests/com/ecyrd/jspwiki/auth/login/UserDatabaseLoginModuleTest.java",
                "patch": "@@ -33,7 +33,6 @@ Licensed to the Apache Software Foundation (ASF) under one\n \n import com.ecyrd.jspwiki.NoRequiredPropertyException;\n import com.ecyrd.jspwiki.TestEngine;\n-import com.ecyrd.jspwiki.WikiEngine;\n import com.ecyrd.jspwiki.auth.WikiPrincipal;\n import com.ecyrd.jspwiki.auth.authorize.Role;\n import com.ecyrd.jspwiki.auth.user.UserDatabase;\n@@ -47,6 +46,8 @@ Licensed to the Apache Software Foundation (ASF) under one\n     UserDatabase db;\n \n     Subject      subject;\n+    \n+    private TestEngine m_engine = null;\n \n     public final void testLogin()\n     {\n@@ -122,7 +123,7 @@ protected void setUp() throws Exception\n         Properties props = new Properties();\n         props.load( TestEngine.findTestProperties() );\n         props.put(XMLUserDatabase.PROP_USERDATABASE, \"tests/etc/userdatabase.xml\");\n-        WikiEngine m_engine  = new TestEngine(props);\n+       m_engine  = new TestEngine(props);\n         db = new XMLUserDatabase();\n         subject = new Subject();\n         try\n@@ -136,4 +137,9 @@ protected void setUp() throws Exception\n         }\n     }\n \n+    protected void tearDown() throws Exception\n+    {\n+        super.tearDown();\n+        m_engine.shutdown();\n+    }\n }\n\\ No newline at end of file",
                "raw_url": "https://github.com/apache/jspwiki/raw/7a24a129ab55caa0ebda308cff3cca39ae571efa/tests/com/ecyrd/jspwiki/auth/login/UserDatabaseLoginModuleTest.java",
                "sha": "26e99c07678b99c1bcc8158381919d678686931a",
                "status": "modified"
            },
            {
                "additions": 6,
                "blob_url": "https://github.com/apache/jspwiki/blob/7a24a129ab55caa0ebda308cff3cca39ae571efa/tests/com/ecyrd/jspwiki/auth/login/WebContainerLoginModuleTest.java",
                "changes": 6,
                "contents_url": "https://api.github.com/repos/apache/jspwiki/contents/tests/com/ecyrd/jspwiki/auth/login/WebContainerLoginModuleTest.java?ref=7a24a129ab55caa0ebda308cff3cca39ae571efa",
                "deletions": 0,
                "filename": "tests/com/ecyrd/jspwiki/auth/login/WebContainerLoginModuleTest.java",
                "patch": "@@ -169,5 +169,11 @@ protected void setUp() throws Exception\n             assertTrue( false );\n         }\n     }\n+    \n+    protected void tearDown() throws Exception\n+    {\n+        super.tearDown();\n+        m_engine.shutdown();\n+    }\n \n }\n\\ No newline at end of file",
                "raw_url": "https://github.com/apache/jspwiki/raw/7a24a129ab55caa0ebda308cff3cca39ae571efa/tests/com/ecyrd/jspwiki/auth/login/WebContainerLoginModuleTest.java",
                "sha": "7c286cd9d5fee244e1e4ccf724537b98dc934e89",
                "status": "modified"
            },
            {
                "additions": 5,
                "blob_url": "https://github.com/apache/jspwiki/blob/7a24a129ab55caa0ebda308cff3cca39ae571efa/tests/com/ecyrd/jspwiki/auth/user/UserProfileTest.java",
                "changes": 8,
                "contents_url": "https://api.github.com/repos/apache/jspwiki/contents/tests/com/ecyrd/jspwiki/auth/user/UserProfileTest.java?ref=7a24a129ab55caa0ebda308cff3cca39ae571efa",
                "deletions": 3,
                "filename": "tests/com/ecyrd/jspwiki/auth/user/UserProfileTest.java",
                "patch": "@@ -28,7 +28,6 @@ Licensed to the Apache Software Foundation (ASF) under one\n import junit.framework.TestSuite;\n \n import com.ecyrd.jspwiki.TestEngine;\n-import com.ecyrd.jspwiki.WikiEngine;\n \n /**\n  *  Tests the DefaultUserProfile class.\n@@ -38,17 +37,20 @@ Licensed to the Apache Software Foundation (ASF) under one\n {\n     private UserDatabase m_db;\n     \n+    private TestEngine m_engine  = null;\n+    \n     public void setUp()\n         throws Exception\n     {\n             Properties props = new Properties();\n             props.load( TestEngine.findTestProperties() );\n-            WikiEngine engine  = new TestEngine(props);\n-            m_db = engine.getUserManager().getUserDatabase();\n+            m_engine  = new TestEngine(props);\n+            m_db = m_engine.getUserManager().getUserDatabase();\n     }\n \n     public void tearDown()\n     {\n+        m_engine.shutdown();\n     }\n     \n     public void testSetAttribute()",
                "raw_url": "https://github.com/apache/jspwiki/raw/7a24a129ab55caa0ebda308cff3cca39ae571efa/tests/com/ecyrd/jspwiki/auth/user/UserProfileTest.java",
                "sha": "ee08bc30963b6039467a15cbcd764fb81ffc4ef9",
                "status": "modified"
            },
            {
                "additions": 10,
                "blob_url": "https://github.com/apache/jspwiki/blob/7a24a129ab55caa0ebda308cff3cca39ae571efa/tests/com/ecyrd/jspwiki/auth/user/XMLUserDatabaseTest.java",
                "changes": 13,
                "contents_url": "https://api.github.com/repos/apache/jspwiki/contents/tests/com/ecyrd/jspwiki/auth/user/XMLUserDatabaseTest.java?ref=7a24a129ab55caa0ebda308cff3cca39ae571efa",
                "deletions": 3,
                "filename": "tests/com/ecyrd/jspwiki/auth/user/XMLUserDatabaseTest.java",
                "patch": "@@ -29,7 +29,6 @@ Licensed to the Apache Software Foundation (ASF) under one\n import junit.framework.TestCase;\n \n import com.ecyrd.jspwiki.TestEngine;\n-import com.ecyrd.jspwiki.WikiEngine;\n import com.ecyrd.jspwiki.auth.NoSuchPrincipalException;\n import com.ecyrd.jspwiki.auth.Users;\n import com.ecyrd.jspwiki.auth.WikiPrincipal;\n@@ -45,6 +44,8 @@ Licensed to the Apache Software Foundation (ASF) under one\n {\n \n   private XMLUserDatabase m_db;\n+  \n+  private TestEngine m_engine = null;\n \n   /**\n    * @see junit.framework.TestCase#setUp()\n@@ -55,9 +56,15 @@ protected void setUp() throws Exception\n       Properties props = new Properties();\n       props.load( TestEngine.findTestProperties() );\n       props.put(XMLUserDatabase.PROP_USERDATABASE, \"tests/etc/userdatabase.xml\");\n-      WikiEngine engine  = new TestEngine(props);\n+      m_engine  = new TestEngine(props);\n       m_db = new XMLUserDatabase();\n-      m_db.initialize(engine, props);\n+      m_db.initialize(m_engine, props);\n+  }\n+  \n+  protected void tearDown() throws Exception\n+  {\n+      super.tearDown();\n+      m_engine.shutdown();\n   }\n \n   public void testDeleteByLoginName() throws WikiSecurityException",
                "raw_url": "https://github.com/apache/jspwiki/raw/7a24a129ab55caa0ebda308cff3cca39ae571efa/tests/com/ecyrd/jspwiki/auth/user/XMLUserDatabaseTest.java",
                "sha": "c80a06081728845bd30a046f82125dd14685e18b",
                "status": "modified"
            },
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/jspwiki/blob/7a24a129ab55caa0ebda308cff3cca39ae571efa/tests/com/ecyrd/jspwiki/content/PageRenamerTest.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/jspwiki/contents/tests/com/ecyrd/jspwiki/content/PageRenamerTest.java?ref=7a24a129ab55caa0ebda308cff3cca39ae571efa",
                "deletions": 0,
                "filename": "tests/com/ecyrd/jspwiki/content/PageRenamerTest.java",
                "patch": "@@ -73,6 +73,8 @@ protected void tearDown() throws Exception\n         TestEngine.deleteTestPage(\"Link two\");\n \n         TestEngine.emptyWorkDir();\n+        \n+        m_engine.shutdown();\n     }\n \n     public void testSimpleRename()",
                "raw_url": "https://github.com/apache/jspwiki/raw/7a24a129ab55caa0ebda308cff3cca39ae571efa/tests/com/ecyrd/jspwiki/content/PageRenamerTest.java",
                "sha": "514bf9123bb77de2f0c4ed1e73ab9b7378bab6dd",
                "status": "modified"
            },
            {
                "additions": 10,
                "blob_url": "https://github.com/apache/jspwiki/blob/7a24a129ab55caa0ebda308cff3cca39ae571efa/tests/com/ecyrd/jspwiki/dav/AttachmentDavProviderTest.java",
                "changes": 18,
                "contents_url": "https://api.github.com/repos/apache/jspwiki/contents/tests/com/ecyrd/jspwiki/dav/AttachmentDavProviderTest.java?ref=7a24a129ab55caa0ebda308cff3cca39ae571efa",
                "deletions": 8,
                "filename": "tests/com/ecyrd/jspwiki/dav/AttachmentDavProviderTest.java",
                "patch": "@@ -35,32 +35,34 @@ Licensed to the Apache Software Foundation (ASF) under one\n {\n     Properties props = new Properties();\n \n-    TestEngine engine;\n+    private TestEngine m_engine = null;\n \n     AttachmentDavProvider m_provider;\n     \n     protected void setUp() throws Exception\n     {\n         props.load( TestEngine.findTestProperties() );\n \n-        engine = new TestEngine(props);\n+        m_engine = new TestEngine(props);\n \n-        m_provider = new AttachmentDavProvider(engine);\n+        m_provider = new AttachmentDavProvider(m_engine);\n     }\n \n     protected void tearDown() throws Exception\n     {\n         TestEngine.deleteAttachments( \"TestPage\" );\n         TestEngine.deleteTestPage(\"TestPage\");\n+        \n+        m_engine.shutdown();\n     }\n \n     public void testGetPageURL()\n         throws Exception\n     {\n-        engine.saveText(\"TestPage\", \"foobar\");\n-        Attachment att = new Attachment(engine,\"TestPage\",\"deceit of the tribbles.txt\");\n+        m_engine.saveText(\"TestPage\", \"foobar\");\n+        Attachment att = new Attachment(m_engine,\"TestPage\",\"deceit of the tribbles.txt\");\n         \n-        engine.getAttachmentManager().storeAttachment( att, engine.makeAttachmentFile() );\n+        m_engine.getAttachmentManager().storeAttachment( att, m_engine.makeAttachmentFile() );\n         \n         DavItem di = m_provider.getItem( new DavPath(\"TestPage/deceit of the tribbles.txt\") );\n         \n@@ -72,7 +74,7 @@ public void testGetPageURL()\n     public void testDirURL()\n         throws Exception\n     {\n-        engine.saveText(\"TestPage\", \"foobar\");\n+        m_engine.saveText(\"TestPage\", \"foobar\");\n     \n         DavItem di = m_provider.getItem( new DavPath(\"\") );\n     \n@@ -84,7 +86,7 @@ public void testDirURL()\n     public void testDirURL2()\n         throws Exception\n     {\n-        engine.saveText(\"TestPage\", \"foobar\");\n+        m_engine.saveText(\"TestPage\", \"foobar\");\n \n         DavItem di = m_provider.getItem( new DavPath(\"TestPage/\") );\n ",
                "raw_url": "https://github.com/apache/jspwiki/raw/7a24a129ab55caa0ebda308cff3cca39ae571efa/tests/com/ecyrd/jspwiki/dav/AttachmentDavProviderTest.java",
                "sha": "5ec52f6b9d4f58f6ad6728ecd000058c73c62c80",
                "status": "modified"
            },
            {
                "additions": 8,
                "blob_url": "https://github.com/apache/jspwiki/blob/7a24a129ab55caa0ebda308cff3cca39ae571efa/tests/com/ecyrd/jspwiki/dav/HTMLPagesDavProviderTest.java",
                "changes": 14,
                "contents_url": "https://api.github.com/repos/apache/jspwiki/contents/tests/com/ecyrd/jspwiki/dav/HTMLPagesDavProviderTest.java?ref=7a24a129ab55caa0ebda308cff3cca39ae571efa",
                "deletions": 6,
                "filename": "tests/com/ecyrd/jspwiki/dav/HTMLPagesDavProviderTest.java",
                "patch": "@@ -35,28 +35,30 @@ Licensed to the Apache Software Foundation (ASF) under one\n \n     Properties props = new Properties();\n \n-    TestEngine engine;\n+    private TestEngine m_engine = null;\n \n     HTMLPagesDavProvider m_provider;\n         \n     protected void setUp() throws Exception\n     {\n         props.load( TestEngine.findTestProperties() );\n \n-        engine = new TestEngine(props);\n+        m_engine = new TestEngine(props);\n \n-        m_provider = new HTMLPagesDavProvider(engine);\n+        m_provider = new HTMLPagesDavProvider(m_engine);\n     }\n \n     protected void tearDown() throws Exception\n     {\n         TestEngine.deleteTestPage(\"TestPage\");\n+        \n+        m_engine.shutdown();\n     }\n \n     public void testGetPageURL()\n     throws Exception\n     {\n-        engine.saveText(\"TestPage\", \"foobar\");\n+        m_engine.saveText(\"TestPage\", \"foobar\");\n             \n         DavItem di = m_provider.getItem( new DavPath(\"t/TestPage.html\") );\n             \n@@ -67,7 +69,7 @@ public void testGetPageURL()\n     public void testDirURL()\n     throws Exception\n     {\n-        engine.saveText(\"TestPage\", \"foobar\");\n+        m_engine.saveText(\"TestPage\", \"foobar\");\n         \n         DavItem di = m_provider.getItem( new DavPath(\"\") );\n         \n@@ -79,7 +81,7 @@ public void testDirURL()\n     public void testDirURL2()\n     throws Exception\n     {\n-        engine.saveText(\"TestPage\", \"foobar\");\n+        m_engine.saveText(\"TestPage\", \"foobar\");\n \n         DavItem di = m_provider.getItem( new DavPath(\"t/\") );\n ",
                "raw_url": "https://github.com/apache/jspwiki/raw/7a24a129ab55caa0ebda308cff3cca39ae571efa/tests/com/ecyrd/jspwiki/dav/HTMLPagesDavProviderTest.java",
                "sha": "57d49859ab1adbdd7a207c0907485f95045d980a",
                "status": "modified"
            },
            {
                "additions": 8,
                "blob_url": "https://github.com/apache/jspwiki/blob/7a24a129ab55caa0ebda308cff3cca39ae571efa/tests/com/ecyrd/jspwiki/dav/RawPagesDavProviderTest.java",
                "changes": 14,
                "contents_url": "https://api.github.com/repos/apache/jspwiki/contents/tests/com/ecyrd/jspwiki/dav/RawPagesDavProviderTest.java?ref=7a24a129ab55caa0ebda308cff3cca39ae571efa",
                "deletions": 6,
                "filename": "tests/com/ecyrd/jspwiki/dav/RawPagesDavProviderTest.java",
                "patch": "@@ -34,28 +34,30 @@ Licensed to the Apache Software Foundation (ASF) under one\n {\n     Properties props = new Properties();\n \n-    TestEngine engine;\n+    private TestEngine m_engine = null;\n \n     RawPagesDavProvider m_provider;\n     \n     protected void setUp() throws Exception\n     {\n         props.load( TestEngine.findTestProperties() );\n \n-        engine = new TestEngine(props);\n+        m_engine = new TestEngine(props);\n \n-        m_provider = new RawPagesDavProvider(engine);\n+        m_provider = new RawPagesDavProvider(m_engine);\n     }\n \n     protected void tearDown() throws Exception\n     {\n         TestEngine.deleteTestPage(\"TestPage\");\n+        \n+        m_engine.shutdown();\n     }\n \n     public void testGetPageURL()\n         throws Exception\n     {\n-        engine.saveText(\"TestPage\", \"foobar\");\n+        m_engine.saveText(\"TestPage\", \"foobar\");\n         \n         DavItem di = m_provider.getItem( new DavPath(\"t/TestPage.txt\") );\n         \n@@ -66,7 +68,7 @@ public void testGetPageURL()\n     public void testDirURL()\n         throws Exception\n     {\n-        engine.saveText(\"TestPage\", \"foobar\");\n+        m_engine.saveText(\"TestPage\", \"foobar\");\n     \n         DavItem di = m_provider.getItem( new DavPath(\"\") );\n     \n@@ -78,7 +80,7 @@ public void testDirURL()\n     public void testDirURL2()\n         throws Exception\n     {\n-        engine.saveText(\"TestPage\", \"foobar\");\n+        m_engine.saveText(\"TestPage\", \"foobar\");\n \n         DavItem di = m_provider.getItem( new DavPath(\"t/\") );\n ",
                "raw_url": "https://github.com/apache/jspwiki/raw/7a24a129ab55caa0ebda308cff3cca39ae571efa/tests/com/ecyrd/jspwiki/dav/RawPagesDavProviderTest.java",
                "sha": "7d5fe14499099b79eb5894ccb77e05f23664f725",
                "status": "modified"
            },
            {
                "additions": 20,
                "blob_url": "https://github.com/apache/jspwiki/blob/7a24a129ab55caa0ebda308cff3cca39ae571efa/tests/com/ecyrd/jspwiki/diff/ContextualDiffProviderTest.java",
                "changes": 22,
                "contents_url": "https://api.github.com/repos/apache/jspwiki/contents/tests/com/ecyrd/jspwiki/diff/ContextualDiffProviderTest.java?ref=7a24a129ab55caa0ebda308cff3cca39ae571efa",
                "deletions": 2,
                "filename": "tests/com/ecyrd/jspwiki/diff/ContextualDiffProviderTest.java",
                "patch": "@@ -33,6 +33,23 @@ Licensed to the Apache Software Foundation (ASF) under one\n \n public class ContextualDiffProviderTest extends TestCase\n {\n+    private TestEngine m_engine = null;\n+    \n+    public void setUp() throws Exception\n+    {\n+        Properties props = new Properties();\n+        props.load( TestEngine.findTestProperties() );\n+        m_engine = new TestEngine(props);\n+    }\n+\n+    protected void tearDown() throws Exception\n+    {\n+        super.tearDown();\n+        m_engine.shutdown();\n+    }\n+\n+    \n+    \n     /**\n      * Sets up some shorthand notation for writing test cases.\n      * <p>\n@@ -199,9 +216,10 @@ private void diffTest(String contextLimit, String oldText, String newText, Strin\n         diff.initialize(null, props);\n \n         props.load( TestEngine.findTestProperties() );\n-        TestEngine engine = new TestEngine(props);\n+        m_engine.shutdown();\n+        m_engine = new TestEngine(props);\n         \n-        WikiContext ctx = engine.getWikiContextFactory().newViewContext( engine.createPage( \"Dummy\" ) );\n+        WikiContext ctx = m_engine.getWikiContextFactory().newViewContext( m_engine.createPage( \"Dummy\" ) );\n         String actualDiff = diff.makeDiffHtml( ctx, oldText, newText);\n \n         assertEquals(expectedDiff, actualDiff);",
                "raw_url": "https://github.com/apache/jspwiki/raw/7a24a129ab55caa0ebda308cff3cca39ae571efa/tests/com/ecyrd/jspwiki/diff/ContextualDiffProviderTest.java",
                "sha": "42ed93bca356deac878f00860d6c993877bb77cc",
                "status": "modified"
            },
            {
                "additions": 5,
                "blob_url": "https://github.com/apache/jspwiki/blob/7a24a129ab55caa0ebda308cff3cca39ae571efa/tests/com/ecyrd/jspwiki/filters/FilterManagerTest.java",
                "changes": 9,
                "contents_url": "https://api.github.com/repos/apache/jspwiki/contents/tests/com/ecyrd/jspwiki/filters/FilterManagerTest.java?ref=7a24a129ab55caa0ebda308cff3cca39ae571efa",
                "deletions": 4,
                "filename": "tests/com/ecyrd/jspwiki/filters/FilterManagerTest.java",
                "patch": "@@ -30,7 +30,7 @@ Licensed to the Apache Software Foundation (ASF) under one\n {\n     Properties props = new Properties();\n \n-    TestEngine engine;\n+    private TestEngine m_engine = null;\n \n     public FilterManagerTest( String s )\n     {\n@@ -41,18 +41,19 @@ public void setUp()\n         throws Exception\n     {\n         props.load( TestEngine.findTestProperties() );\n-        engine = new TestEngine(props);\n+        m_engine = new TestEngine(props);\n     }\n \n     public void tearDown()\n     {\n+        m_engine.shutdown();\n     }\n \n     @SuppressWarnings(\"deprecation\")\n     public void testInitFilters()\n         throws Exception\n     {\n-        FilterManager m = new FilterManager( engine, props );\n+        FilterManager m = new FilterManager( m_engine, props );\n \n         List l = m.getFilterList();\n \n@@ -71,7 +72,7 @@ public void testInitFilters()\n     public void testInitParams()\n         throws Exception\n     {\n-        FilterManager m = new FilterManager( engine, props );\n+        FilterManager m = new FilterManager( m_engine, props );\n \n         List l = m.getFilterList();\n ",
                "raw_url": "https://github.com/apache/jspwiki/raw/7a24a129ab55caa0ebda308cff3cca39ae571efa/tests/com/ecyrd/jspwiki/filters/FilterManagerTest.java",
                "sha": "a5bde7292f7f93c9536b6f6761186b04ef2981d2",
                "status": "modified"
            },
            {
                "additions": 16,
                "blob_url": "https://github.com/apache/jspwiki/blob/7a24a129ab55caa0ebda308cff3cca39ae571efa/tests/com/ecyrd/jspwiki/parser/JSPWikiMarkupParserTest.java",
                "changes": 31,
                "contents_url": "https://api.github.com/repos/apache/jspwiki/contents/tests/com/ecyrd/jspwiki/parser/JSPWikiMarkupParserTest.java?ref=7a24a129ab55caa0ebda308cff3cca39ae571efa",
                "deletions": 15,
                "filename": "tests/com/ecyrd/jspwiki/parser/JSPWikiMarkupParserTest.java",
                "patch": "@@ -53,7 +53,7 @@ Licensed to the Apache Software Foundation (ASF) under one\n \n     static final String PAGE_NAME = \"testpage\";\n \n-    TestEngine testEngine;\n+    private TestEngine testEngine;\n \n \n     public JSPWikiMarkupParserTest( String s )\n@@ -73,6 +73,8 @@ public void setUp()\n     public void tearDown()\n     {\n         deleteCreatedPages();\n+        \n+        testEngine.shutdown();\n     }\n \n     private void newPage( String name )\n@@ -144,6 +146,7 @@ private String translate_nofollow( String src )\n         props.load( TestEngine.findTestProperties() );\n \n         props.setProperty( \"jspwiki.translatorReader.useRelNofollow\", \"true\" );\n+        testEngine.shutdown();\n         TestEngine testEngine2 = new TestEngine( props );\n \n         WikiContext context = testEngine2.getWikiContextFactory().newViewContext( testEngine2.createPage( PAGE_NAME ) );\n@@ -690,7 +693,7 @@ public void testAttachmentLink2()\n     {\n         props.setProperty( \"jspwiki.encoding\", \"ISO-8859-1\" );\n \n-        //TODO\n+        testEngine.shutdown();\n         TestEngine testEngine2 = new TestEngine( props );\n \n         testEngine2.saveText( \"Test\", \"foo \");\n@@ -714,41 +717,37 @@ public void testAttachmentLink2()\n     public void testAttachmentLink3()\n     throws Exception\n     {\n-        TestEngine testEngine2 = new TestEngine( props );\n-\n-        testEngine2.saveText( \"TestPage\", \"foo \");\n+        testEngine.saveText( \"TestPage\", \"foo \");\n         created.addElement( \"TestPage\" );\n \n-        Attachment att = new Attachment( testEngine2, \"TestPage\", \"TestAtt.txt\" );\n+        Attachment att = new Attachment( testEngine, \"TestPage\", \"TestAtt.txt\" );\n         att.setAuthor( \"FirstPost\" );\n \n-        testEngine2.getAttachmentManager().storeAttachment( att, testEngine.makeAttachmentFile() );\n+        testEngine.getAttachmentManager().storeAttachment( att, testEngine.makeAttachmentFile() );\n \n         String src = \"[Test page/TestAtt.txt]\";\n \n         assertEquals( \"<a class=\\\"attachment\\\" href=\\\"/attach/TestPage/TestAtt.txt\\\">Test page/TestAtt.txt</a>\"+\n                       \"<a href=\\\"/PageInfo.jsp?page=TestPage/TestAtt.txt\\\" class=\\\"infolink\\\"><img src=\\\"/images/attachment_small.png\\\" border=\\\"0\\\" alt=\\\"(info)\\\" /></a>\",\n-                      translate(testEngine2,src));\n+                      translate(testEngine,src));\n     }\n \n     public void testAttachmentLink4()\n     throws Exception\n     {\n-        TestEngine testEngine2 = new TestEngine( props );\n-\n-        testEngine2.saveText( \"TestPage\", \"foo \");\n+        testEngine.saveText( \"TestPage\", \"foo \");\n         created.addElement( \"TestPage\" );\n \n-        Attachment att = new Attachment( testEngine2, \"TestPage\", \"TestAtt.txt\" );\n+        Attachment att = new Attachment( testEngine, \"TestPage\", \"TestAtt.txt\" );\n         att.setAuthor( \"FirstPost\" );\n \n-        testEngine2.getAttachmentManager().storeAttachment( att, testEngine.makeAttachmentFile() );\n+        testEngine.getAttachmentManager().storeAttachment( att, testEngine.makeAttachmentFile() );\n \n-        String src = \"[\"+testEngine2.beautifyTitle(\"TestPage/TestAtt.txt\")+\"]\";\n+        String src = \"[\"+testEngine.beautifyTitle(\"TestPage/TestAtt.txt\")+\"]\";\n \n         assertEquals( \"<a class=\\\"attachment\\\" href=\\\"/attach/TestPage/TestAtt.txt\\\">Test Page/TestAtt.txt</a>\"+\n                       \"<a href=\\\"/PageInfo.jsp?page=TestPage/TestAtt.txt\\\" class=\\\"infolink\\\"><img src=\\\"/images/attachment_small.png\\\" border=\\\"0\\\" alt=\\\"(info)\\\" /></a>\",\n-                      translate(testEngine2,src));\n+                      translate(testEngine,src));\n     }\n \n     public void testNoHyperlink()\n@@ -1198,6 +1197,7 @@ public void testHTMLWhenAllowed()\n         String src = \"<p>\";\n \n         props.setProperty( \"jspwiki.translatorReader.allowHTML\", \"true\" );\n+        testEngine.shutdown();\n         testEngine = new TestEngine( props );\n \n         WikiPage page = testEngine.createPage( WikiName.valueOf( PAGE_NAME ) );\n@@ -1213,6 +1213,7 @@ public void testHTMLWhenAllowedPre()\n         String src = \"{{{ <br /> }}}\";\n \n         props.setProperty( \"jspwiki.translatorReader.allowHTML\", \"true\" );\n+        testEngine.shutdown();\n         testEngine = new TestEngine( props );\n \n         WikiPage page = testEngine.createPage( WikiName.valueOf( PAGE_NAME ) );",
                "raw_url": "https://github.com/apache/jspwiki/raw/7a24a129ab55caa0ebda308cff3cca39ae571efa/tests/com/ecyrd/jspwiki/parser/JSPWikiMarkupParserTest.java",
                "sha": "ea5da3ce632aa62e4a9d88f0d1f0b9d21bae9cb9",
                "status": "modified"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/jspwiki/blob/7a24a129ab55caa0ebda308cff3cca39ae571efa/tests/com/ecyrd/jspwiki/plugin/CounterPluginTest.java",
                "changes": 1,
                "contents_url": "https://api.github.com/repos/apache/jspwiki/contents/tests/com/ecyrd/jspwiki/plugin/CounterPluginTest.java?ref=7a24a129ab55caa0ebda308cff3cca39ae571efa",
                "deletions": 0,
                "filename": "tests/com/ecyrd/jspwiki/plugin/CounterPluginTest.java",
                "patch": "@@ -60,6 +60,7 @@ public void setUp()\n \n     public void tearDown()\n     {\n+        testEngine.shutdown();\n     }\n \n     private String translate( String src )",
                "raw_url": "https://github.com/apache/jspwiki/raw/7a24a129ab55caa0ebda308cff3cca39ae571efa/tests/com/ecyrd/jspwiki/plugin/CounterPluginTest.java",
                "sha": "7ee66835c19dd7c7ef3e486d6c66ee7737d94591",
                "status": "modified"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/jspwiki/blob/7a24a129ab55caa0ebda308cff3cca39ae571efa/tests/com/ecyrd/jspwiki/plugin/DenouncePluginTest.java",
                "changes": 1,
                "contents_url": "https://api.github.com/repos/apache/jspwiki/contents/tests/com/ecyrd/jspwiki/plugin/DenouncePluginTest.java?ref=7a24a129ab55caa0ebda308cff3cca39ae571efa",
                "deletions": 0,
                "filename": "tests/com/ecyrd/jspwiki/plugin/DenouncePluginTest.java",
                "patch": "@@ -82,6 +82,7 @@ public void tearDown() {\n         TestEngine.deleteTestPage(\"TestPage\");\n         TestEngine.deleteTestPage(\"Foobar\");\n         TestEngine.emptyWorkDir();\n+        engine.shutdown();\n     }\n \n     public void testSLURPBot() throws Exception {",
                "raw_url": "https://github.com/apache/jspwiki/raw/7a24a129ab55caa0ebda308cff3cca39ae571efa/tests/com/ecyrd/jspwiki/plugin/DenouncePluginTest.java",
                "sha": "b454ebae8d486ef4f11f8ab34740eff7f79662c8",
                "status": "modified"
            },
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/jspwiki/blob/7a24a129ab55caa0ebda308cff3cca39ae571efa/tests/com/ecyrd/jspwiki/plugin/InsertPageTest.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/jspwiki/contents/tests/com/ecyrd/jspwiki/plugin/InsertPageTest.java?ref=7a24a129ab55caa0ebda308cff3cca39ae571efa",
                "deletions": 0,
                "filename": "tests/com/ecyrd/jspwiki/plugin/InsertPageTest.java",
                "patch": "@@ -47,6 +47,8 @@ protected void tearDown() throws Exception\n         TestEngine.deleteTestPage( \"Test_Page\" );\n         TestEngine.deleteTestPage( \"TestPage\" );\n         TestEngine.deleteTestPage( \"Test Page\" );\n+        \n+        testEngine.shutdown();\n     }\n \n     public void testRecursive() throws Exception",
                "raw_url": "https://github.com/apache/jspwiki/raw/7a24a129ab55caa0ebda308cff3cca39ae571efa/tests/com/ecyrd/jspwiki/plugin/InsertPageTest.java",
                "sha": "d402dac01a0dc111ff862f6280135fad22be5ddc",
                "status": "modified"
            },
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/jspwiki/blob/7a24a129ab55caa0ebda308cff3cca39ae571efa/tests/com/ecyrd/jspwiki/plugin/PluginIndexPluginTest.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/jspwiki/contents/tests/com/ecyrd/jspwiki/plugin/PluginIndexPluginTest.java?ref=7a24a129ab55caa0ebda308cff3cca39ae571efa",
                "deletions": 0,
                "filename": "tests/com/ecyrd/jspwiki/plugin/PluginIndexPluginTest.java",
                "patch": "@@ -49,6 +49,8 @@ public void setUp() throws Exception\n     public void tearDown()\n     {\n         TestEngine.emptyWorkDir();\n+        \n+        engine.shutdown();\n     }\n \n     public static Test suite()",
                "raw_url": "https://github.com/apache/jspwiki/raw/7a24a129ab55caa0ebda308cff3cca39ae571efa/tests/com/ecyrd/jspwiki/plugin/PluginIndexPluginTest.java",
                "sha": "bcb670276113c2a418df781cfe9425bc1d6278b0",
                "status": "modified"
            },
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/jspwiki/blob/7a24a129ab55caa0ebda308cff3cca39ae571efa/tests/com/ecyrd/jspwiki/plugin/PluginManagerTest.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/jspwiki/contents/tests/com/ecyrd/jspwiki/plugin/PluginManagerTest.java?ref=7a24a129ab55caa0ebda308cff3cca39ae571efa",
                "deletions": 0,
                "filename": "tests/com/ecyrd/jspwiki/plugin/PluginManagerTest.java",
                "patch": "@@ -64,6 +64,8 @@ public void setUp()\n     public void tearDown() throws ProviderException\n     {\n         engine.deletePage(\"Testpage\");\n+        \n+        engine.shutdown();\n     }\n \n     public void testSimpleInsert()",
                "raw_url": "https://github.com/apache/jspwiki/raw/7a24a129ab55caa0ebda308cff3cca39ae571efa/tests/com/ecyrd/jspwiki/plugin/PluginManagerTest.java",
                "sha": "17700e3763712ca80741f60476f215da9d4a4474",
                "status": "modified"
            },
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/jspwiki/blob/7a24a129ab55caa0ebda308cff3cca39ae571efa/tests/com/ecyrd/jspwiki/plugin/ReferredPagesPluginTest.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/jspwiki/contents/tests/com/ecyrd/jspwiki/plugin/ReferredPagesPluginTest.java?ref=7a24a129ab55caa0ebda308cff3cca39ae571efa",
                "deletions": 0,
                "filename": "tests/com/ecyrd/jspwiki/plugin/ReferredPagesPluginTest.java",
                "patch": "@@ -70,6 +70,8 @@ public void tearDown()\n         TestEngine.deleteTestPage( \"IPointToTwoPages\" );\n         \n         TestEngine.emptyWorkDir();\n+        \n+        engine.shutdown();\n     }\n \n     /**",
                "raw_url": "https://github.com/apache/jspwiki/raw/7a24a129ab55caa0ebda308cff3cca39ae571efa/tests/com/ecyrd/jspwiki/plugin/ReferredPagesPluginTest.java",
                "sha": "eed1d722b050c7f90911b9caf4b6a7529ab3dcff",
                "status": "modified"
            },
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/jspwiki/blob/7a24a129ab55caa0ebda308cff3cca39ae571efa/tests/com/ecyrd/jspwiki/plugin/ReferringPagesPluginTest.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/jspwiki/contents/tests/com/ecyrd/jspwiki/plugin/ReferringPagesPluginTest.java?ref=7a24a129ab55caa0ebda308cff3cca39ae571efa",
                "deletions": 0,
                "filename": "tests/com/ecyrd/jspwiki/plugin/ReferringPagesPluginTest.java",
                "patch": "@@ -76,6 +76,8 @@ public void tearDown()\n         TestEngine.deleteTestPage( \"Foobar5\" );\n         TestEngine.deleteTestPage( \"Foobar6\" );\n         TestEngine.deleteTestPage( \"Foobar7\" );\n+        \n+        engine.shutdown();\n     }\n \n     private String mkLink( String page )",
                "raw_url": "https://github.com/apache/jspwiki/raw/7a24a129ab55caa0ebda308cff3cca39ae571efa/tests/com/ecyrd/jspwiki/plugin/ReferringPagesPluginTest.java",
                "sha": "d38d2773388869753f5194d0741c64d275c791f7",
                "status": "modified"
            },
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/jspwiki/blob/7a24a129ab55caa0ebda308cff3cca39ae571efa/tests/com/ecyrd/jspwiki/plugin/TableOfContentsTest.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/jspwiki/contents/tests/com/ecyrd/jspwiki/plugin/TableOfContentsTest.java?ref=7a24a129ab55caa0ebda308cff3cca39ae571efa",
                "deletions": 0,
                "filename": "tests/com/ecyrd/jspwiki/plugin/TableOfContentsTest.java",
                "patch": "@@ -64,6 +64,8 @@ protected void tearDown() throws Exception\n         super.tearDown();\n         \n         testEngine.deletePage( \"Test\" );\n+        \n+        testEngine.shutdown();\n     }\n \n     public void testHeadingVariables()",
                "raw_url": "https://github.com/apache/jspwiki/raw/7a24a129ab55caa0ebda308cff3cca39ae571efa/tests/com/ecyrd/jspwiki/plugin/TableOfContentsTest.java",
                "sha": "6edc71510a81f5f347041c958590f3966e31c535",
                "status": "modified"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/jspwiki/blob/7a24a129ab55caa0ebda308cff3cca39ae571efa/tests/com/ecyrd/jspwiki/plugin/UndefinedPagesPluginTest.java",
                "changes": 1,
                "contents_url": "https://api.github.com/repos/apache/jspwiki/contents/tests/com/ecyrd/jspwiki/plugin/UndefinedPagesPluginTest.java?ref=7a24a129ab55caa0ebda308cff3cca39ae571efa",
                "deletions": 0,
                "filename": "tests/com/ecyrd/jspwiki/plugin/UndefinedPagesPluginTest.java",
                "patch": "@@ -63,6 +63,7 @@ public void tearDown()\n         TestEngine.deleteTestPage( \"TestPage\" );\n         TestEngine.deleteTestPage( \"Foobar\" );\n         TestEngine.emptyWorkDir();\n+        engine.shutdown();\n     }\n \n     private String wikitize( String s )",
                "raw_url": "https://github.com/apache/jspwiki/raw/7a24a129ab55caa0ebda308cff3cca39ae571efa/tests/com/ecyrd/jspwiki/plugin/UndefinedPagesPluginTest.java",
                "sha": "9508d82101c31f03c968587c5435bba74b35097d",
                "status": "modified"
            },
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/jspwiki/blob/7a24a129ab55caa0ebda308cff3cca39ae571efa/tests/com/ecyrd/jspwiki/providers/BasicAttachmentProviderTest.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/jspwiki/contents/tests/com/ecyrd/jspwiki/providers/BasicAttachmentProviderTest.java?ref=7a24a129ab55caa0ebda308cff3cca39ae571efa",
                "deletions": 0,
                "filename": "tests/com/ecyrd/jspwiki/providers/BasicAttachmentProviderTest.java",
                "patch": "@@ -111,6 +111,8 @@ public void tearDown()\n         TestEngine.deleteAll( f );\n         \n         TestEngine.emptyWorkDir();\n+        \n+        m_engine.shutdown();\n     }\n \n     public void testExtension()",
                "raw_url": "https://github.com/apache/jspwiki/raw/7a24a129ab55caa0ebda308cff3cca39ae571efa/tests/com/ecyrd/jspwiki/providers/BasicAttachmentProviderTest.java",
                "sha": "1dbe50f1ee6f553200ab6a9ffef60ce4f9176c43",
                "status": "modified"
            },
            {
                "additions": 17,
                "blob_url": "https://github.com/apache/jspwiki/blob/7a24a129ab55caa0ebda308cff3cca39ae571efa/tests/com/ecyrd/jspwiki/providers/CachingProviderTest.java",
                "changes": 23,
                "contents_url": "https://api.github.com/repos/apache/jspwiki/contents/tests/com/ecyrd/jspwiki/providers/CachingProviderTest.java?ref=7a24a129ab55caa0ebda308cff3cca39ae571efa",
                "deletions": 6,
                "filename": "tests/com/ecyrd/jspwiki/providers/CachingProviderTest.java",
                "patch": "@@ -35,7 +35,11 @@ Licensed to the Apache Software Foundation (ASF) under one\n import com.ecyrd.jspwiki.util.FileUtil;\n \n public class CachingProviderTest extends TestCase\n+\n {\n+    private Properties props = new Properties();\n+    private TestEngine m_engine = null;\n+\n     public CachingProviderTest( String s )\n     {\n         super( s );\n@@ -44,13 +48,18 @@ public CachingProviderTest( String s )\n     public void setUp()\n         throws Exception\n     {\n+        props.load( TestEngine.findTestProperties() );\n+        m_engine = new TestEngine( props );\n+\n         TestEngine.emptyWorkDir();\n     }\n \n     public void tearDown()\n     {\n         TestEngine.emptyWorkDir();\n         TestEngine.deleteTestPage(\"Testi\");\n+        \n+        m_engine.shutdown();\n     }\n \n     /**\n@@ -66,17 +75,18 @@ public void testInitialization()\n         props.setProperty( \"jspwiki.pageProvider\", \"com.ecyrd.jspwiki.providers.CounterProvider\" );\n         props.setProperty( \"jspwiki.cachingProvider.capacity\", \"100\" );\n \n-        TestEngine engine = new TestEngine( props );\n+        m_engine.shutdown();\n+        m_engine = new TestEngine( props );\n \n-        CounterProvider p = (CounterProvider)((CachingProvider)engine.getPageManager().getProvider()).getRealProvider();\n+        CounterProvider p = (CounterProvider)((CachingProvider)m_engine.getPageManager().getProvider()).getRealProvider();\n \n         assertEquals(\"init\", 1, p.m_initCalls);\n         assertEquals(\"getAllPages\", 1, p.m_getAllPagesCalls);\n         assertEquals(\"pageExists\", 0, p.m_pageExistsCalls);\n         assertEquals(\"getPage\", 2, p.m_getPageCalls); // These two are for non-existant pages (with and without s)\n         assertEquals(\"getPageText\", 4, p.m_getPageTextCalls);\n \n-        engine.getPage( \"Foo\" );\n+        m_engine.getPage( \"Foo\" );\n \n         assertEquals(\"pageExists2\", 0, p.m_pageExistsCalls);\n         assertEquals(\"getPage2\", 2, p.m_getPageCalls);\n@@ -90,7 +100,8 @@ public void testSneakyAdd()\n \n         props.setProperty( \"jspwiki.cachingProvider.cacheCheckInterval\", \"2\" );\n         \n-        TestEngine engine = new TestEngine( props );\n+        m_engine.shutdown();\n+        m_engine = new TestEngine( props );\n         \n         String dir = props.getProperty( FileSystemProvider.PROP_PAGEDIR );\n         \n@@ -103,10 +114,10 @@ public void testSneakyAdd()\n         \n         Thread.sleep( 4000L ); // Make sure we wait long enough\n         \n-        WikiPage p = engine.getPage( \"Testi\" );\n+        WikiPage p = m_engine.getPage( \"Testi\" );\n         assertNotNull( \"page did not exist?\", p );\n         \n-        String text = engine.getText( \"Testi\");\n+        String text = m_engine.getText( \"Testi\");\n         assertEquals(\"text\", \"[fuufaa]\", text );\n         \n         // TODO: ReferenceManager check as well",
                "raw_url": "https://github.com/apache/jspwiki/raw/7a24a129ab55caa0ebda308cff3cca39ae571efa/tests/com/ecyrd/jspwiki/providers/CachingProviderTest.java",
                "sha": "b149fb5c60f1af36990d8eda284f13d0d25c6ab6",
                "status": "modified"
            },
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/jspwiki/blob/7a24a129ab55caa0ebda308cff3cca39ae571efa/tests/com/ecyrd/jspwiki/providers/FileSystemProviderTest.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/jspwiki/contents/tests/com/ecyrd/jspwiki/providers/FileSystemProviderTest.java?ref=7a24a129ab55caa0ebda308cff3cca39ae571efa",
                "deletions": 0,
                "filename": "tests/com/ecyrd/jspwiki/providers/FileSystemProviderTest.java",
                "patch": "@@ -67,6 +67,8 @@ public void setUp()\n     public void tearDown()\n     {\n         TestEngine.deleteAll( new File(m_pagedir) );\n+        \n+        m_engine.shutdown();\n     }\n \n     public void testScandinavianLetters()",
                "raw_url": "https://github.com/apache/jspwiki/raw/7a24a129ab55caa0ebda308cff3cca39ae571efa/tests/com/ecyrd/jspwiki/providers/FileSystemProviderTest.java",
                "sha": "411b620c74cce002405adfa5262dfed33493478e",
                "status": "modified"
            },
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/jspwiki/blob/7a24a129ab55caa0ebda308cff3cca39ae571efa/tests/com/ecyrd/jspwiki/providers/RCSFileProviderTest.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/jspwiki/contents/tests/com/ecyrd/jspwiki/providers/RCSFileProviderTest.java?ref=7a24a129ab55caa0ebda308cff3cca39ae571efa",
                "deletions": 0,
                "filename": "tests/com/ecyrd/jspwiki/providers/RCSFileProviderTest.java",
                "patch": "@@ -76,6 +76,8 @@ public void tearDown()\n         f = new File( files, \"RCS\" );\n \n         f.delete();\n+        \n+        engine.shutdown();\n     }\n \n     /**",
                "raw_url": "https://github.com/apache/jspwiki/raw/7a24a129ab55caa0ebda308cff3cca39ae571efa/tests/com/ecyrd/jspwiki/providers/RCSFileProviderTest.java",
                "sha": "657ed75a5cb0ed75cb7957b7dd5639d7749cb684",
                "status": "modified"
            },
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/jspwiki/blob/7a24a129ab55caa0ebda308cff3cca39ae571efa/tests/com/ecyrd/jspwiki/providers/VersioningFileProviderTest.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/jspwiki/contents/tests/com/ecyrd/jspwiki/providers/VersioningFileProviderTest.java?ref=7a24a129ab55caa0ebda308cff3cca39ae571efa",
                "deletions": 0,
                "filename": "tests/com/ecyrd/jspwiki/providers/VersioningFileProviderTest.java",
                "patch": "@@ -65,6 +65,8 @@ public void tearDown()\n         f = new File( files, \"OLD\" );\n \n         TestEngine.deleteAll(f);\n+        \n+        engine.shutdown();\n     }\n \n     /**",
                "raw_url": "https://github.com/apache/jspwiki/raw/7a24a129ab55caa0ebda308cff3cca39ae571efa/tests/com/ecyrd/jspwiki/providers/VersioningFileProviderTest.java",
                "sha": "4ae6ff31d27fb0a4383403cd7c15366e26f20261",
                "status": "modified"
            },
            {
                "additions": 6,
                "blob_url": "https://github.com/apache/jspwiki/blob/7a24a129ab55caa0ebda308cff3cca39ae571efa/tests/com/ecyrd/jspwiki/render/CreoleRendererTest.java",
                "changes": 6,
                "contents_url": "https://api.github.com/repos/apache/jspwiki/contents/tests/com/ecyrd/jspwiki/render/CreoleRendererTest.java?ref=7a24a129ab55caa0ebda308cff3cca39ae571efa",
                "deletions": 0,
                "filename": "tests/com/ecyrd/jspwiki/render/CreoleRendererTest.java",
                "patch": "@@ -47,6 +47,12 @@ protected void setUp() throws Exception\n         super.setUp();\n     }\n \n+    protected void tearDown() throws Exception\n+    {\n+        super.tearDown();\n+        m_testEngine.shutdown();\n+    }\n+\n     private String render(String s) throws IOException\n     {\n         WikiPage dummyPage = m_testEngine.createPage(\"TestPage\");",
                "raw_url": "https://github.com/apache/jspwiki/raw/7a24a129ab55caa0ebda308cff3cca39ae571efa/tests/com/ecyrd/jspwiki/render/CreoleRendererTest.java",
                "sha": "49d18a0a61cfdaf32f14f83e9a52bd4b735ba0dc",
                "status": "modified"
            },
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/jspwiki/blob/7a24a129ab55caa0ebda308cff3cca39ae571efa/tests/com/ecyrd/jspwiki/render/WysiwygEditingRendererTest.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/jspwiki/contents/tests/com/ecyrd/jspwiki/render/WysiwygEditingRendererTest.java?ref=7a24a129ab55caa0ebda308cff3cca39ae571efa",
                "deletions": 0,
                "filename": "tests/com/ecyrd/jspwiki/render/WysiwygEditingRendererTest.java",
                "patch": "@@ -54,6 +54,8 @@ public void tearDown()\n     {\n         TestEngine.deleteTestPage( \"WysiwygEditingRendererTest\" );\n         TestEngine.deleteTestPage( \"This Pagename Has Spaces\" );\n+        \n+        m_testEngine.shutdown();\n     }\n \n     private String render(String s) throws IOException",
                "raw_url": "https://github.com/apache/jspwiki/raw/7a24a129ab55caa0ebda308cff3cca39ae571efa/tests/com/ecyrd/jspwiki/render/WysiwygEditingRendererTest.java",
                "sha": "d374ebb24c9d5e2ed8e79433675e04da84f99371",
                "status": "modified"
            },
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/jspwiki/blob/7a24a129ab55caa0ebda308cff3cca39ae571efa/tests/com/ecyrd/jspwiki/rss/RSSGeneratorTest.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/jspwiki/contents/tests/com/ecyrd/jspwiki/rss/RSSGeneratorTest.java?ref=7a24a129ab55caa0ebda308cff3cca39ae571efa",
                "deletions": 0,
                "filename": "tests/com/ecyrd/jspwiki/rss/RSSGeneratorTest.java",
                "patch": "@@ -66,6 +66,8 @@ protected void setUp() throws Exception\n     protected void tearDown() throws Exception\n     {\n         TestEngine.deleteAll( new File(props.getProperty( FileSystemProvider.PROP_PAGEDIR )) );\n+        \n+        m_testEngine.shutdown();\n     }\n \n     public void testBlogRSS()",
                "raw_url": "https://github.com/apache/jspwiki/raw/7a24a129ab55caa0ebda308cff3cca39ae571efa/tests/com/ecyrd/jspwiki/rss/RSSGeneratorTest.java",
                "sha": "245927a4abbf16e71363315e3a10655567ada0e2",
                "status": "modified"
            },
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/jspwiki/blob/7a24a129ab55caa0ebda308cff3cca39ae571efa/tests/com/ecyrd/jspwiki/search/SearchManagerTest.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/jspwiki/contents/tests/com/ecyrd/jspwiki/search/SearchManagerTest.java?ref=7a24a129ab55caa0ebda308cff3cca39ae571efa",
                "deletions": 0,
                "filename": "tests/com/ecyrd/jspwiki/search/SearchManagerTest.java",
                "patch": "@@ -63,6 +63,8 @@ protected void tearDown() throws Exception\n         super.tearDown();\n         \n         TestEngine.deleteTestPage(\"TestPage\");\n+        \n+        m_engine.shutdown();\n     }\n \n     public void testDefaultProvider()",
                "raw_url": "https://github.com/apache/jspwiki/raw/7a24a129ab55caa0ebda308cff3cca39ae571efa/tests/com/ecyrd/jspwiki/search/SearchManagerTest.java",
                "sha": "22a7bc320632bb9341816a1fd455bc7696bffb34",
                "status": "modified"
            },
            {
                "additions": 6,
                "blob_url": "https://github.com/apache/jspwiki/blob/7a24a129ab55caa0ebda308cff3cca39ae571efa/tests/com/ecyrd/jspwiki/ui/InputValidatorTest.java",
                "changes": 6,
                "contents_url": "https://api.github.com/repos/apache/jspwiki/contents/tests/com/ecyrd/jspwiki/ui/InputValidatorTest.java?ref=7a24a129ab55caa0ebda308cff3cca39ae571efa",
                "deletions": 0,
                "filename": "tests/com/ecyrd/jspwiki/ui/InputValidatorTest.java",
                "patch": "@@ -51,6 +51,12 @@ protected void setUp() throws Exception\n         val = new InputValidator( TEST, context );\n     }\n \n+    protected void tearDown() throws Exception\n+    {\n+        super.tearDown();\n+        testEngine.shutdown();\n+    }\n+\n     public void testUnsafePattern()\n     {\n         Pattern unsafe = InputValidator.UNSAFE_PATTERN;",
                "raw_url": "https://github.com/apache/jspwiki/raw/7a24a129ab55caa0ebda308cff3cca39ae571efa/tests/com/ecyrd/jspwiki/ui/InputValidatorTest.java",
                "sha": "f68de224bbe75137f2d6e5567716095dd2c7d1a4",
                "status": "modified"
            },
            {
                "additions": 6,
                "blob_url": "https://github.com/apache/jspwiki/blob/7a24a129ab55caa0ebda308cff3cca39ae571efa/tests/com/ecyrd/jspwiki/ui/stripes/HandlerInfoTest.java",
                "changes": 6,
                "contents_url": "https://api.github.com/repos/apache/jspwiki/contents/tests/com/ecyrd/jspwiki/ui/stripes/HandlerInfoTest.java?ref=7a24a129ab55caa0ebda308cff3cca39ae571efa",
                "deletions": 0,
                "filename": "tests/com/ecyrd/jspwiki/ui/stripes/HandlerInfoTest.java",
                "patch": "@@ -55,6 +55,12 @@ public void setUp()\n         }\n     }\n \n+    protected void tearDown() throws Exception\n+    {\n+        super.tearDown();\n+        m_engine.shutdown();\n+    }\n+\n     public void testGetRequestContext() throws Exception\n     {\n         assertEquals( \"createGroup\", HandlerInfo.getHandlerInfo( GroupActionBean.class, \"create\" ).getRequestContext() );",
                "raw_url": "https://github.com/apache/jspwiki/raw/7a24a129ab55caa0ebda308cff3cca39ae571efa/tests/com/ecyrd/jspwiki/ui/stripes/HandlerInfoTest.java",
                "sha": "493766bbb43ab61c911a9e6ccf7f9cc009028757",
                "status": "modified"
            },
            {
                "additions": 6,
                "blob_url": "https://github.com/apache/jspwiki/blob/7a24a129ab55caa0ebda308cff3cca39ae571efa/tests/com/ecyrd/jspwiki/url/DefaultURLConstructorTest.java",
                "changes": 6,
                "contents_url": "https://api.github.com/repos/apache/jspwiki/contents/tests/com/ecyrd/jspwiki/url/DefaultURLConstructorTest.java?ref=7a24a129ab55caa0ebda308cff3cca39ae571efa",
                "deletions": 0,
                "filename": "tests/com/ecyrd/jspwiki/url/DefaultURLConstructorTest.java",
                "patch": "@@ -47,6 +47,12 @@ protected void setUp() throws Exception\n         props.load( TestEngine.findTestProperties() );\n     }\n \n+    protected void tearDown() throws Exception\n+    {\n+        super.tearDown();\n+        testEngine.shutdown();\n+    }\n+\n     private URLConstructor getConstructor( String baseURL, String prefix )\n         throws WikiException\n     {",
                "raw_url": "https://github.com/apache/jspwiki/raw/7a24a129ab55caa0ebda308cff3cca39ae571efa/tests/com/ecyrd/jspwiki/url/DefaultURLConstructorTest.java",
                "sha": "2fa21183d5947b613743b4e01e62ad7cbb9e0a15",
                "status": "modified"
            },
            {
                "additions": 6,
                "blob_url": "https://github.com/apache/jspwiki/blob/7a24a129ab55caa0ebda308cff3cca39ae571efa/tests/com/ecyrd/jspwiki/url/ShortURLConstructorTest.java",
                "changes": 6,
                "contents_url": "https://api.github.com/repos/apache/jspwiki/contents/tests/com/ecyrd/jspwiki/url/ShortURLConstructorTest.java?ref=7a24a129ab55caa0ebda308cff3cca39ae571efa",
                "deletions": 0,
                "filename": "tests/com/ecyrd/jspwiki/url/ShortURLConstructorTest.java",
                "patch": "@@ -47,6 +47,12 @@ protected void setUp() throws Exception\n         props.load( TestEngine.findTestProperties() );\n     }\n \n+    protected void tearDown() throws Exception\n+    {\n+        super.tearDown();\n+        testEngine.shutdown();\n+    }\n+\n     private URLConstructor getConstructor( String baseURL, String prefix )\n         throws WikiException\n     {",
                "raw_url": "https://github.com/apache/jspwiki/raw/7a24a129ab55caa0ebda308cff3cca39ae571efa/tests/com/ecyrd/jspwiki/url/ShortURLConstructorTest.java",
                "sha": "78bd29c127b2954b1e5d4113bc234bc594024757",
                "status": "modified"
            },
            {
                "additions": 6,
                "blob_url": "https://github.com/apache/jspwiki/blob/7a24a129ab55caa0ebda308cff3cca39ae571efa/tests/com/ecyrd/jspwiki/url/ShortViewURLConstructorTest.java",
                "changes": 6,
                "contents_url": "https://api.github.com/repos/apache/jspwiki/contents/tests/com/ecyrd/jspwiki/url/ShortViewURLConstructorTest.java?ref=7a24a129ab55caa0ebda308cff3cca39ae571efa",
                "deletions": 0,
                "filename": "tests/com/ecyrd/jspwiki/url/ShortViewURLConstructorTest.java",
                "patch": "@@ -47,6 +47,12 @@ protected void setUp() throws Exception\n         props.load( TestEngine.findTestProperties() );\n     }\n \n+    protected void tearDown() throws Exception\n+    {\n+        super.tearDown();\n+        testEngine.shutdown();\n+    }\n+\n     private URLConstructor getConstructor( String baseURL, String prefix )\n         throws WikiException\n     {",
                "raw_url": "https://github.com/apache/jspwiki/raw/7a24a129ab55caa0ebda308cff3cca39ae571efa/tests/com/ecyrd/jspwiki/url/ShortViewURLConstructorTest.java",
                "sha": "4fb5b3888f89cd705a8659feb8ca37bf2f4d79ed",
                "status": "modified"
            },
            {
                "additions": 3,
                "blob_url": "https://github.com/apache/jspwiki/blob/7a24a129ab55caa0ebda308cff3cca39ae571efa/tests/com/ecyrd/jspwiki/util/ClassUtilTest.java",
                "changes": 6,
                "contents_url": "https://api.github.com/repos/apache/jspwiki/contents/tests/com/ecyrd/jspwiki/util/ClassUtilTest.java?ref=7a24a129ab55caa0ebda308cff3cca39ae571efa",
                "deletions": 3,
                "filename": "tests/com/ecyrd/jspwiki/util/ClassUtilTest.java",
                "patch": "@@ -36,9 +36,9 @@ public ClassUtilTest( String s )\n     public void testFindClass()\n         throws Exception\n     {\n-        Class foo = ClassUtil.findClass( \"com.ecyrd.jspwiki.api\", \"WikiPage\" );\n+        Class foo = ClassUtil.findClass( \"org.apache.jspwiki.api\", \"WikiPage\" );\n \n-        assertEquals( foo.getName(), \"com.ecyrd.jspwiki.api.WikiPage\" );\n+        assertEquals( foo.getName(), \"org.apache.jspwiki.api.WikiPage\" );\n     }\n \n     /**\n@@ -49,7 +49,7 @@ public void testFindClassNoClass()\n     {\n         try\n         {\n-            Class foo = ClassUtil.findClass( \"com.ecyrd.jspwiki\", \"MubbleBubble\" );\n+            Class foo = ClassUtil.findClass( \"org.apache.jspwiki\", \"MubbleBubble\" );\n             fail(\"Found class:\"+foo);\n         }\n         catch( ClassNotFoundException e )",
                "raw_url": "https://github.com/apache/jspwiki/raw/7a24a129ab55caa0ebda308cff3cca39ae571efa/tests/com/ecyrd/jspwiki/util/ClassUtilTest.java",
                "sha": "a4c5d63b59b70ab1e15f4d5851a26b8882f02fe0",
                "status": "modified"
            },
            {
                "additions": 5,
                "blob_url": "https://github.com/apache/jspwiki/blob/7a24a129ab55caa0ebda308cff3cca39ae571efa/tests/com/ecyrd/jspwiki/util/MailUtilTest.java",
                "changes": 7,
                "contents_url": "https://api.github.com/repos/apache/jspwiki/contents/tests/com/ecyrd/jspwiki/util/MailUtilTest.java?ref=7a24a129ab55caa0ebda308cff3cca39ae571efa",
                "deletions": 2,
                "filename": "tests/com/ecyrd/jspwiki/util/MailUtilTest.java",
                "patch": "@@ -58,6 +58,8 @@ Licensed to the Apache Software Foundation (ASF) under one\n     static final String TEST_RECEIVER = \"someone@somewhere.org\";\n     static final String TEST_SENDER = \"homer.simpson@burns.com\";\n     \n+    private TestEngine m_engine= null;\n+    \n     public MailUtilTest( String s )\n     {\n         super( s );\n@@ -68,13 +70,14 @@ public void setUp()\n     {\n         m_props.load( TestEngine.findTestProperties() );\n         \n-        TestEngine testEngine = new TestEngine( m_props );\n+        m_engine = new TestEngine( m_props );\n         \n-        m_context = testEngine.getWikiContextFactory().newViewContext( testEngine.createPage( PAGE_NAME ) );\n+        m_context = m_engine.getWikiContextFactory().newViewContext( m_engine.createPage( PAGE_NAME ) );\n     }\n \n     public void tearDown()\n     {\n+        m_engine.shutdown();\n     }\n \n     /**",
                "raw_url": "https://github.com/apache/jspwiki/raw/7a24a129ab55caa0ebda308cff3cca39ae571efa/tests/com/ecyrd/jspwiki/util/MailUtilTest.java",
                "sha": "4ada9939c9021b9bdba3d345184cea011af44ad2",
                "status": "modified"
            },
            {
                "additions": 5,
                "blob_url": "https://github.com/apache/jspwiki/blob/7a24a129ab55caa0ebda308cff3cca39ae571efa/tests/com/ecyrd/jspwiki/workflow/ApprovalWorkflowTest.java",
                "changes": 5,
                "contents_url": "https://api.github.com/repos/apache/jspwiki/contents/tests/com/ecyrd/jspwiki/workflow/ApprovalWorkflowTest.java?ref=7a24a129ab55caa0ebda308cff3cca39ae571efa",
                "deletions": 0,
                "filename": "tests/com/ecyrd/jspwiki/workflow/ApprovalWorkflowTest.java",
                "patch": "@@ -62,6 +62,11 @@ protected void setUp() throws Exception\n         m_builder = WorkflowBuilder.getBuilder( m_engine );\n     }\n \n+    protected void tearDown() throws Exception\n+    {\n+        super.tearDown();\n+        m_engine.shutdown();\n+    }\n \n     public void testBuildApprovalWorkflow() throws WikiException\n     {",
                "raw_url": "https://github.com/apache/jspwiki/raw/7a24a129ab55caa0ebda308cff3cca39ae571efa/tests/com/ecyrd/jspwiki/workflow/ApprovalWorkflowTest.java",
                "sha": "5e365d201196dc03fe93c3dc7574de5f4f107313",
                "status": "modified"
            },
            {
                "additions": 6,
                "blob_url": "https://github.com/apache/jspwiki/blob/7a24a129ab55caa0ebda308cff3cca39ae571efa/tests/com/ecyrd/jspwiki/workflow/DecisionQueueTest.java",
                "changes": 6,
                "contents_url": "https://api.github.com/repos/apache/jspwiki/contents/tests/com/ecyrd/jspwiki/workflow/DecisionQueueTest.java?ref=7a24a129ab55caa0ebda308cff3cca39ae571efa",
                "deletions": 0,
                "filename": "tests/com/ecyrd/jspwiki/workflow/DecisionQueueTest.java",
                "patch": "@@ -71,6 +71,12 @@ protected void setUp() throws Exception\n         m_queue.add(d3);\n     }\n \n+    protected void tearDown() throws Exception\n+    {\n+        super.tearDown();\n+        m_engine.shutdown();\n+    }\n+\n     public void testAdd()\n     {\n         Decision[] decisions = m_queue.decisions();",
                "raw_url": "https://github.com/apache/jspwiki/raw/7a24a129ab55caa0ebda308cff3cca39ae571efa/tests/com/ecyrd/jspwiki/workflow/DecisionQueueTest.java",
                "sha": "20ae7d452a5b8b5805d85c32f38f80d265cb18d4",
                "status": "modified"
            },
            {
                "additions": 6,
                "blob_url": "https://github.com/apache/jspwiki/blob/7a24a129ab55caa0ebda308cff3cca39ae571efa/tests/com/ecyrd/jspwiki/workflow/WorkflowManagerTest.java",
                "changes": 6,
                "contents_url": "https://api.github.com/repos/apache/jspwiki/contents/tests/com/ecyrd/jspwiki/workflow/WorkflowManagerTest.java?ref=7a24a129ab55caa0ebda308cff3cca39ae571efa",
                "deletions": 0,
                "filename": "tests/com/ecyrd/jspwiki/workflow/WorkflowManagerTest.java",
                "patch": "@@ -58,6 +58,12 @@ protected void setUp() throws Exception\n         w.addMessageArgument(\"MyPage\");\n     }\n \n+    protected void tearDown() throws Exception\n+    {\n+        super.tearDown();\n+        m_engine.shutdown();\n+    }\n+\n     public void testStart() throws WikiException\n     {\n         // Once we start the workflow, it should show that it's started",
                "raw_url": "https://github.com/apache/jspwiki/raw/7a24a129ab55caa0ebda308cff3cca39ae571efa/tests/com/ecyrd/jspwiki/workflow/WorkflowManagerTest.java",
                "sha": "a91dec2f9b554401358db45a2bdebc23c3b729c6",
                "status": "modified"
            },
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/jspwiki/blob/7a24a129ab55caa0ebda308cff3cca39ae571efa/tests/com/ecyrd/jspwiki/xmlrpc/RPCHandlerTest.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/jspwiki/contents/tests/com/ecyrd/jspwiki/xmlrpc/RPCHandlerTest.java?ref=7a24a129ab55caa0ebda308cff3cca39ae571efa",
                "deletions": 0,
                "filename": "tests/com/ecyrd/jspwiki/xmlrpc/RPCHandlerTest.java",
                "patch": "@@ -61,6 +61,8 @@ public void tearDown()\n         TestEngine.deleteTestPage( NAME1 );\n         TestEngine.deleteAttachments( NAME1 );\n         TestEngine.emptyWorkDir();\n+        \n+        m_engine.shutdown();\n     }\n \n     public void testNonexistantPage()",
                "raw_url": "https://github.com/apache/jspwiki/raw/7a24a129ab55caa0ebda308cff3cca39ae571efa/tests/com/ecyrd/jspwiki/xmlrpc/RPCHandlerTest.java",
                "sha": "1989db10bf293af9f2b46e85efc63eea0cfb0212",
                "status": "modified"
            }
        ],
        "message": "3.0.0-svn-43 JSPWIKI-452 - The LoggerFactory is now also multi-wiki-per-JVM capable\n        Fixed a lot JUnit tests, mostly adding a m_engine.shutdown() to the tearDown()\n        \n        Removed the NPE checks from LoggerImpl, the NPE's were a result of stopping\n        the webapp before stopping the background threads, this has been solved by\n        invoking engine.shutdown() from the SessionMonitor (thanks to Andrew).\n        \n        Cleanup of AdminBeanManager and WikiEngine\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/jspwiki/trunk@731025 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/jspwiki/commit/0c52a3aaede526056ec94f1b6c10d355a1fbf424",
        "patched_files": [
            "WorkflowManager.java",
            "ClassUtil.java",
            "UserProfileActionBean.java",
            "DefaultAclManager.java",
            "PluginIndexPlugin.java",
            "ReferredPagesPlugin.java",
            "XMLUserDatabase.java",
            "PageRenamer.java",
            "RawPagesDavProvider.java",
            "ReferenceManager.java",
            "BasicAttachmentProvider.java",
            "MailUtil.java",
            "UserManager.java",
            "UserPreferencesActionBean.java",
            "GroupManager.java",
            "WebContainerLoginModule.java",
            "AdminBeanManager.java",
            "ChangeLog",
            "WikiContextFactory.java",
            "HTMLPagesDavProvider.java",
            "DefaultURLConstructor.java",
            "DecisionQueue.java",
            "UserProfile.java",
            "UserDatabaseLoginModule.java",
            "AclImpl.java",
            "HandlerInfo.java",
            "PluginManager.java",
            "AuthorizationManager.java",
            "CachingProvider.java",
            "PageManager.java",
            "AuthenticationManager.java",
            "AttachmentDavProvider.java",
            "ShortURLConstructor.java",
            "ViewActionBean.java",
            "RPCHandler.java",
            "GroupActionBean.java",
            "RCSFileProvider.java",
            "AnonymousLoginModule.java",
            "InsertPage.java",
            "FileSystemProvider.java",
            "WysiwygEditingRenderer.java",
            "LoggerImpl.java",
            "LoggerFactory.java",
            "TableOfContents.java",
            "LoginActionBean.java",
            "ReferringPagesPlugin.java",
            "WikiEngine.java",
            "Group.java",
            "VariableManager.java",
            "Release.java",
            "SearchManager.java",
            "RenameActionBean.java",
            "ShortViewURLConstructor.java",
            "AttachmentManager.java",
            "UndefinedPagesPlugin.java",
            "WikiSession.java",
            "JSPWikiMarkupParser.java",
            "InputValidator.java",
            "CreoleRenderer.java",
            "RSSGenerator.java",
            "XMLGroupDatabase.java",
            "CookieAssertionLoginModule.java",
            "VersioningFileProvider.java",
            "FilterManager.java",
            "WebContainerAuthorizer.java",
            "ContextualDiffProvider.java",
            "JDBCGroupDatabase.java"
        ],
        "repo": "jspwiki",
        "unit_tests": [
            "AclImplTest.java",
            "SearchManagerTest.java",
            "InsertPageTest.java",
            "UserManagerTest.java",
            "RSSGeneratorTest.java",
            "ClassUtilTest.java",
            "XMLGroupDatabaseTest.java",
            "AttachmentManagerTest.java",
            "PluginManagerTest.java",
            "AuthorizationManagerTest.java",
            "WikiContextFactoryTest.java",
            "InputValidatorTest.java",
            "DenouncePluginTest.java",
            "BasicAttachmentProviderTest.java",
            "ShortURLConstructorTest.java",
            "UserPreferencesActionBeanTest.java",
            "RPCHandlerTest.java",
            "PageRenamerTest.java",
            "CachingProviderTest.java",
            "WikiEngineTest.java",
            "RenameActionBeanTest.java",
            "PluginIndexPluginTest.java",
            "TableOfContentsTest.java",
            "AttachmentDavProviderTest.java",
            "XMLUserDatabaseTest.java",
            "JDBCGroupDatabaseTest.java",
            "DefaultURLConstructorTest.java",
            "GroupActionBeanTest.java",
            "FilterManagerTest.java",
            "AuthenticationManagerTest.java",
            "GroupManagerTest.java",
            "RCSFileProviderTest.java",
            "DefaultAclManagerTest.java",
            "ReleaseTest.java",
            "ReferringPagesPluginTest.java",
            "DecisionQueueTest.java",
            "UserDatabaseLoginModuleTest.java",
            "ReferredPagesPluginTest.java",
            "AnonymousLoginModuleTest.java",
            "ContextualDiffProviderTest.java",
            "JSPWikiMarkupParserTest.java",
            "UserProfileActionBeanTest.java",
            "ShortViewURLConstructorTest.java",
            "CreoleRendererTest.java",
            "ViewActionBeanTest.java",
            "LoginActionBeanTest.java",
            "WikiSessionTest.java",
            "VariableManagerTest.java",
            "WysiwygEditingRendererTest.java",
            "ApprovalWorkflowTest.java",
            "CookieAssertionLoginModuleTest.java",
            "PageManagerTest.java",
            "CounterPluginTest.java",
            "GroupTest.java",
            "WebContainerAuthorizerTest.java",
            "HTMLPagesDavProviderTest.java",
            "WorkflowManagerTest.java",
            "FileSystemProviderTest.java",
            "WebContainerLoginModuleTest.java",
            "RawPagesDavProviderTest.java",
            "UserProfileTest.java",
            "MailUtilTest.java",
            "ReferenceManagerTest.java",
            "VersioningFileProviderTest.java",
            "UndefinedPagesPluginTest.java",
            "HandlerInfoTest.java"
        ]
    },
    "jspwiki_8056b5b": {
        "bug_id": "jspwiki_8056b5b",
        "commit": "https://github.com/apache/jspwiki/commit/8056b5b5d6b429dd98e5aa1cdee62cb858619124",
        "file": [
            {
                "additions": 31,
                "blob_url": "https://github.com/apache/jspwiki/blob/8056b5b5d6b429dd98e5aa1cdee62cb858619124/src/com/ecyrd/jspwiki/auth/authorize/WebContainerAuthorizer.java",
                "changes": 38,
                "contents_url": "https://api.github.com/repos/apache/jspwiki/contents/src/com/ecyrd/jspwiki/auth/authorize/WebContainerAuthorizer.java?ref=8056b5b5d6b429dd98e5aa1cdee62cb858619124",
                "deletions": 7,
                "filename": "src/com/ecyrd/jspwiki/auth/authorize/WebContainerAuthorizer.java",
                "patch": "@@ -21,6 +21,7 @@\n import org.xml.sax.InputSource;\n import org.xml.sax.SAXException;\n \n+import com.ecyrd.jspwiki.InternalWikiException;\n import com.ecyrd.jspwiki.WikiContext;\n import com.ecyrd.jspwiki.WikiEngine;\n import com.ecyrd.jspwiki.WikiSession;\n@@ -33,7 +34,7 @@\n  * method {@link #isContainerAuthorized()} that queries the web application\n  * descriptor to determine if the container manages authorization.\n  * @author Andrew Jaquith\n- * @version $Revision: 1.14 $ $Date: 2006-02-21 19:49:58 $\n+ * @version $Revision: 1.15 $ $Date: 2006-04-17 09:39:31 $\n  * @since 2.3\n  */\n public class WebContainerAuthorizer implements Authorizer\n@@ -75,7 +76,10 @@ public void initialize( WikiEngine engine, Properties props )\n     {\n         m_engine = engine;\n         m_containerAuthorized = false;\n-        try {\n+\n+        // FIXME: Error handling here is not very verbose\n+        try \n+        {\n             Document webxml = getWebXml();\n             if ( webxml != null )\n             {\n@@ -94,11 +98,13 @@ public void initialize( WikiEngine engine, Properties props )\n         }\n         catch ( IOException e )\n         {\n-            throw new RuntimeException( e.getMessage() );\n+            log.error(\"Initialization failed: \",e);\n+            throw new InternalWikiException( e.getClass().getName()+\": \"+e.getMessage() );\n         }\n         catch ( JDOMException e )\n         {\n-            throw new RuntimeException( e.getMessage() );\n+            log.error(\"Malformed XML in web.xml\",e);\n+            throw new InternalWikiException( e.getClass().getName()+\": \"+e.getMessage() );\n         }\n         \n         if ( m_containerRoles.length > 0 )\n@@ -304,13 +310,18 @@ protected Document getWebXml() throws JDOMException, IOException\n         {\n             ClassLoader cl = WebContainerAuthorizer.class.getClassLoader();\n             url = cl.getResource( \"WEB-INF/web.xml\" );\n-            log.info( \"Examining \" + url.toExternalForm() );\n+            if( url != null )\n+                log.info( \"Examining \" + url.toExternalForm() );\n         }\n         else\n         {\n             url = m_engine.getServletContext().getResource( \"/WEB-INF/web.xml\" );\n-            log.info( \"Examining \" + url.toExternalForm() );\n+            if( url != null )\n+                log.info( \"Examining \" + url.toExternalForm() );\n         }\n+        if( url == null )\n+            throw new IOException(\"Unable to find web.xml for processing.\");\n+            \n         log.debug( \"Processing web.xml at \" + url.toExternalForm() );\n         doc = builder.build( url );\n         return doc;\n@@ -324,7 +335,7 @@ protected Document getWebXml() throws JDOMException, IOException\n      * kept at <code>http://java.sun.com/dtd/web-app_2_3.dtd</code>. The\n      * local copy is stored at <code>WEB-INF/dtd/web-app_2_3.dtd</code>.</p>\n      * @author Andrew Jaquith\n-     * @version $Revision: 1.14 $ $Date: 2006-02-21 19:49:58 $\n+     * @version $Revision: 1.15 $ $Date: 2006-04-17 09:39:31 $\n      */\n     public class LocalEntityResolver implements EntityResolver\n     {\n@@ -361,6 +372,19 @@ public InputSource resolveEntity( String publicId, String systemId ) throws SAXE\n                 return is;\n             }\n             \n+            //\n+            //  Let's fall back to default behaviour of the container, and let's\n+            //  also let the user know what is going on.  This caught me by surprise\n+            //  while running JSPWiki on an unconnected laptop...\n+            //\n+            //  The DTD needs to be resolved and read because it contains things like\n+            //  entity definitions...\n+            //\n+            log.info(\"Please note: There are no local DTD references in /WEB-INF/dtd/\"+file+\"; falling back to default behaviour.\"+\n+                     \" This may mean that the XML parser will attempt to connect to the internet to find the DTD.\"+\n+                     \" If you are running JSPWiki locally in an unconnected network, you might want to put the DTD files in place to avoid nasty UnknownHostExceptions.\");\n+            \n+            \n             // Fall back to default behaviour\n             return null;\n         }",
                "raw_url": "https://github.com/apache/jspwiki/raw/8056b5b5d6b429dd98e5aa1cdee62cb858619124/src/com/ecyrd/jspwiki/auth/authorize/WebContainerAuthorizer.java",
                "sha": "706f212bbbc8a9706f8e78691aeeaf8a1be8bad0",
                "status": "modified"
            }
        ],
        "message": "is now a bit more verbose if\n        there is no internet connection and it cannot find local\n        DTDs.  It also throws a InternalWikiExcepton instead of\n        a generic RuntimeException or a NullPointerException...\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/jspwiki/trunk@625215 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/jspwiki/commit/43147593da6f8390a6a2a736dc816ab8ca0721a6",
        "patched_files": [
            "WebContainerAuthorizer.java"
        ],
        "repo": "jspwiki",
        "unit_tests": [
            "WebContainerAuthorizerTest.java"
        ]
    },
    "jspwiki_8500885": {
        "bug_id": "jspwiki_8500885",
        "commit": "https://github.com/apache/jspwiki/commit/85008859e84df601f7337edbef684720e02c067e",
        "file": [
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/jspwiki/blob/85008859e84df601f7337edbef684720e02c067e/src/com/ecyrd/jspwiki/providers/BasicAttachmentProvider.java",
                "changes": 4,
                "contents_url": "https://api.github.com/repos/apache/jspwiki/contents/src/com/ecyrd/jspwiki/providers/BasicAttachmentProvider.java?ref=85008859e84df601f7337edbef684720e02c067e",
                "deletions": 2,
                "filename": "src/com/ecyrd/jspwiki/providers/BasicAttachmentProvider.java",
                "patch": "@@ -146,7 +146,7 @@ private int findLatestVersion( Attachment att )\n             int cutpoint = pages[i].indexOf( '.' );\n             if( cutpoint > 0 )\n             {\n-                String pageNum = pages[i].substring( 0, cutpoint );\n+                String pageNum = ( cutpoint > 0 ) ? pages[i].substring( 0, cutpoint ) : pages[i] ;\n \n                 try\n                 {\n@@ -432,7 +432,7 @@ public Attachment getAttachmentInfo( WikiPage page, String name, int version )\n         return att;\n     }\n \n-    public Collection getVersionHistory( Attachment att )\n+    public List getVersionHistory( Attachment att )\n     {\n         ArrayList list = new ArrayList();\n ",
                "raw_url": "https://github.com/apache/jspwiki/raw/85008859e84df601f7337edbef684720e02c067e/src/com/ecyrd/jspwiki/providers/BasicAttachmentProvider.java",
                "sha": "380e92e24e60b250cc3d29921aad15b54b44f06d",
                "status": "modified"
            }
        ],
        "message": "getVersionHistory() now returns a List\nTemporary fix to a NPE when running Windows.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/jspwiki/trunk@622452 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/jspwiki/commit/02f8c877c0afd862dffd8c3603b3085eff473050",
        "patched_files": [
            "BasicAttachmentProvider.java"
        ],
        "repo": "jspwiki",
        "unit_tests": [
            "BasicAttachmentProviderTest.java"
        ]
    },
    "jspwiki_85297fc": {
        "bug_id": "jspwiki_85297fc",
        "commit": "https://github.com/apache/jspwiki/commit/85297fc9cadd575b456b5dc29724e5b68cd69db3",
        "file": [
            {
                "additions": 6,
                "blob_url": "https://github.com/apache/jspwiki/blob/85297fc9cadd575b456b5dc29724e5b68cd69db3/ChangeLog",
                "changes": 6,
                "contents_url": "https://api.github.com/repos/apache/jspwiki/contents/ChangeLog?ref=85297fc9cadd575b456b5dc29724e5b68cd69db3",
                "deletions": 0,
                "filename": "ChangeLog",
                "patch": "@@ -1,3 +1,9 @@\n+2014-08-12  Juan Pablo Santos (juanpablo AT apache DOT org)\n+\n+       * 2.10.2-svn-6\n+\n+       * Fixed JSPWIKI-855: NullPointerException in FormInput.java:92, patch provided by J\u00fcrgen Weber - thanks!\n+\n 2014-07-31  Harry Metske (metskem@apache.org)\n \n        * 2.10.2-svn-5",
                "raw_url": "https://github.com/apache/jspwiki/raw/85297fc9cadd575b456b5dc29724e5b68cd69db3/ChangeLog",
                "sha": "368b70cf4e2d7cba1fb1b85ca53e5a3a6d5005da",
                "status": "modified"
            },
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/jspwiki/blob/85297fc9cadd575b456b5dc29724e5b68cd69db3/jspwiki-war/src/main/java/org/apache/wiki/Release.java",
                "changes": 4,
                "contents_url": "https://api.github.com/repos/apache/jspwiki/contents/jspwiki-war/src/main/java/org/apache/wiki/Release.java?ref=85297fc9cadd575b456b5dc29724e5b68cd69db3",
                "deletions": 2,
                "filename": "jspwiki-war/src/main/java/org/apache/wiki/Release.java",
                "patch": "@@ -72,8 +72,8 @@ Licensed to the Apache Software Foundation (ASF) under one\n      *  <p>\n      *  If the build identifier is empty, it is not added.\n      */\n-    public static final String     BUILD         = \"5\";\n-    \n+    public static final String     BUILD         = \"6\";\n+\n     /**\n      *  This is the generic version string you should use when printing out the version.  It is of \n      *  the form \"VERSION.REVISION.MINORREVISION[-POSTFIX][-BUILD]\".",
                "raw_url": "https://github.com/apache/jspwiki/raw/85297fc9cadd575b456b5dc29724e5b68cd69db3/jspwiki-war/src/main/java/org/apache/wiki/Release.java",
                "sha": "9d63e7a60b0f5ef27c316eb2c8cbfd7222fb37b8",
                "status": "modified"
            },
            {
                "additions": 4,
                "blob_url": "https://github.com/apache/jspwiki/blob/85297fc9cadd575b456b5dc29724e5b68cd69db3/jspwiki-war/src/main/java/org/apache/wiki/forms/FormInput.java",
                "changes": 6,
                "contents_url": "https://api.github.com/repos/apache/jspwiki/contents/jspwiki-war/src/main/java/org/apache/wiki/forms/FormInput.java?ref=85297fc9cadd575b456b5dc29724e5b68cd69db3",
                "deletions": 2,
                "filename": "jspwiki-war/src/main/java/org/apache/wiki/forms/FormInput.java",
                "patch": "@@ -43,6 +43,8 @@ Licensed to the Apache Software Foundation (ASF) under one\n     /** Parameter name for setting the size of the input field.  Value is <tt>{@value}</tt>. */\n     public static final String PARAM_SIZE  = \"size\";\n \n+    public static final String PARAM_CHECKED  = \"checked\";\n+\n     /**\n      * Generates a dynamic form element on the WikiPage.\n      * \n@@ -55,6 +57,7 @@ public String execute( WikiContext ctx, Map< String, String > params )\n         String inputValue = params.get( PARAM_VALUE );\n         String inputType  = params.get( PARAM_TYPE );\n         String size       = params.get( PARAM_SIZE );\n+        String checked    = params.get( PARAM_CHECKED );\n         ResourceBundle rb = Preferences.getBundle( ctx, WikiPlugin.CORE_PLUGINS_RESOURCEBUNDLE );\n \n         if ( inputName == null ) {\n@@ -88,9 +91,8 @@ public String execute( WikiContext ctx, Map< String, String > params )\n         \n         Element field = XhtmlUtil.input(inputType,HANDLERPARAM_PREFIX + inputName,inputValue);\n         \n-        String checked = params.get(\"checked\");\n         field.setAttribute(XHTML.ATTR_class,\n-                String.valueOf(TextUtil.isPositive(checked) || checked.equalsIgnoreCase(\"checked\")));\n+                String.valueOf(TextUtil.isPositive(checked) || \"checked\".equalsIgnoreCase(checked)));\n         \n         String oldValue = previousValues.get( inputName );\n         if ( oldValue != null )",
                "raw_url": "https://github.com/apache/jspwiki/raw/85297fc9cadd575b456b5dc29724e5b68cd69db3/jspwiki-war/src/main/java/org/apache/wiki/forms/FormInput.java",
                "sha": "c6b3174156c5aab174a27fa5ffe8a5c9d04df8f3",
                "status": "modified"
            }
        ],
        "message": " * 2.10.2-svn-6\n\n * Fixed JSPWIKI-855: NullPointerException in FormInput.java:92, patch provided by J\u00fcrgen Weber - thanks!\n\ngit-svn-id: https://svn.apache.org/repos/asf/jspwiki/trunk@1617380 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/jspwiki/commit/d78fb1237f3c9479718dce51630772f6a911d684",
        "patched_files": [
            "ChangeLog",
            "Release.java"
        ],
        "repo": "jspwiki",
        "unit_tests": [
            "ReleaseTest.java"
        ]
    },
    "jspwiki_959481f": {
        "bug_id": "jspwiki_959481f",
        "commit": "https://github.com/apache/jspwiki/commit/959481fcc7530c9f56d58631dc6e09a9b118cbf6",
        "file": [
            {
                "additions": 8,
                "blob_url": "https://github.com/apache/jspwiki/blob/959481fcc7530c9f56d58631dc6e09a9b118cbf6/ChangeLog",
                "changes": 9,
                "contents_url": "https://api.github.com/repos/apache/jspwiki/contents/ChangeLog?ref=959481fcc7530c9f56d58631dc6e09a9b118cbf6",
                "deletions": 1,
                "filename": "ChangeLog",
                "patch": "@@ -1,4 +1,11 @@\n-2012-12-09  Juan Pablo Santos (juanpablo AT apache DOT org)\n+2012-12-12  Harry Metske <metskem@apache.org>\n+\n+       * 2.9.1-svn-5\n+        \n+        * fixed JSPWIKI-742 NullPointerException in PriorityList (reported by Rakesh K. Cherukuri)\n+        * minor updates to build.xml to properly handle build failures (I am not an ant expert...)\n+ \n+ 2012-12-09  Juan Pablo Santos (juanpablo AT apache DOT org)\n \n        * Sonar Ant task executed even if there are tests failures\n        ",
                "raw_url": "https://github.com/apache/jspwiki/raw/959481fcc7530c9f56d58631dc6e09a9b118cbf6/ChangeLog",
                "sha": "48e55122b7d627129e58568645ff9b06a9dad4c7",
                "status": "modified"
            },
            {
                "additions": 4,
                "blob_url": "https://github.com/apache/jspwiki/blob/959481fcc7530c9f56d58631dc6e09a9b118cbf6/build.xml",
                "changes": 8,
                "contents_url": "https://api.github.com/repos/apache/jspwiki/contents/build.xml?ref=959481fcc7530c9f56d58631dc6e09a9b118cbf6",
                "deletions": 4,
                "filename": "build.xml",
                "patch": "@@ -863,13 +863,13 @@\n   \t    <report format=\"noframes\" todir=\"${tests.reports}\" />\n   \t </junitreport>\n      \n-     <antcall target=\"fail-build\">\n-       <param name=\"test.failed\" value=\"@{test.failed}\"/>\n+     <antcall target=\"fail-build-if-junit-fails\">\n+       <param name=\"test.failed\" value=\"${test.failed}\"/>\n      </antcall>\n   </target>\n \t\n-  <target name=\"fail-build\" unless=\"continue_even_with_test_failures\">\n-  \t<fail message=\"Test failure detected, check test results.\" if=\"test.failed\" />\n+  <target name=\"fail-build-if-junit-fails\" unless=\"continue_even_with_test_failures\">\n+  \t<fail message=\"Test failure(s) detected, check test results.\" if=\"${test.failed}\" />\n   </target>\n \n   <target name=\"tests-auth\" depends=\"jar,tests-init,jartests\"",
                "raw_url": "https://github.com/apache/jspwiki/raw/959481fcc7530c9f56d58631dc6e09a9b118cbf6/build.xml",
                "sha": "0f327112eac79c220a7b4e5e02defb2bcbee74fa",
                "status": "modified"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/jspwiki/blob/959481fcc7530c9f56d58631dc6e09a9b118cbf6/src/org/apache/wiki/Release.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/jspwiki/contents/src/org/apache/wiki/Release.java?ref=959481fcc7530c9f56d58631dc6e09a9b118cbf6",
                "deletions": 1,
                "filename": "src/org/apache/wiki/Release.java",
                "patch": "@@ -75,7 +75,7 @@ Licensed to the Apache Software Foundation (ASF) under one\n      *  <p>\n      *  If the build identifier is empty, it is not added.\n      */\n-    public static final String     BUILD         = \"4\";\n+    public static final String     BUILD         = \"5\";\n     \n     /**\n      *  This is the generic version string you should use",
                "raw_url": "https://github.com/apache/jspwiki/raw/959481fcc7530c9f56d58631dc6e09a9b118cbf6/src/org/apache/wiki/Release.java",
                "sha": "9337d882b46fd88f1d565a332cb037e0f6432f94",
                "status": "modified"
            },
            {
                "additions": 4,
                "blob_url": "https://github.com/apache/jspwiki/blob/959481fcc7530c9f56d58631dc6e09a9b118cbf6/src/org/apache/wiki/util/PriorityList.java",
                "changes": 9,
                "contents_url": "https://api.github.com/repos/apache/jspwiki/contents/src/org/apache/wiki/util/PriorityList.java?ref=959481fcc7530c9f56d58631dc6e09a9b118cbf6",
                "deletions": 5,
                "filename": "src/org/apache/wiki/util/PriorityList.java",
                "patch": "@@ -19,7 +19,7 @@ Licensed to the Apache Software Foundation (ASF) under one\n package org.apache.wiki.util;\n \n import java.util.AbstractList;\n-import java.util.ArrayList;\n+import java.util.concurrent.CopyOnWriteArrayList;\n \n /**\n  *  Builds a simple, priority-based List implementation.  The list\n@@ -30,11 +30,10 @@ Licensed to the Apache Software Foundation (ASF) under one\n  *  Priority is an integer, and the list is sorted in descending order\n  *  (that is, 100 is before 10 is before 0 is before -40).\n  */\n-@SuppressWarnings(\"unchecked\")\n public class PriorityList\n     extends AbstractList\n {\n-    private ArrayList<Object> m_elements = new ArrayList<Object>();\n+    private CopyOnWriteArrayList<Item> m_elements = new CopyOnWriteArrayList<Item>();\n \n     /**\n      *  This is the default priority, which is used if no priority\n@@ -55,7 +54,7 @@ public void add( Object o, int priority )\n \n         for( ; i < m_elements.size(); i++ )\n         {\n-            Item item = (Item) m_elements.get(i);\n+            Item item = m_elements.get(i);\n \n             if( item.m_priority < priority )\n             {\n@@ -91,7 +90,7 @@ public boolean add( Object o )\n      */\n     public Object get( int index )\n     {\n-        return ((Item)m_elements.get( index )).m_object;\n+        return m_elements.get( index ).m_object;\n     }\n \n     /**",
                "raw_url": "https://github.com/apache/jspwiki/raw/959481fcc7530c9f56d58631dc6e09a9b118cbf6/src/org/apache/wiki/util/PriorityList.java",
                "sha": "13938aba702580c56e36b8b24b368662321649be",
                "status": "modified"
            }
        ],
        "message": "2012-12-12  Harry Metske <metskem@apache.org>\n\n       * 2.9.1-svn-5\n        \n        * fixed JSPWIKI-742 NullPointerException in PriorityList (reported by Rakesh K. Cherukuri)\n        * minor updates to build.xml to properly handle build failures (I am not an ant expert...)\n \n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/jspwiki/trunk@1420898 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/jspwiki/commit/d89f509d063e2d3153908dec4babce0d5a1179be",
        "patched_files": [
            "PriorityList.java",
            "build.xml",
            "ChangeLog",
            "Release.java"
        ],
        "repo": "jspwiki",
        "unit_tests": [
            "PriorityListTest.java",
            "ReleaseTest.java"
        ]
    },
    "jspwiki_99ed0c7": {
        "bug_id": "jspwiki_99ed0c7",
        "commit": "https://github.com/apache/jspwiki/commit/99ed0c72f2266b60aa6652e9fd326fb1fbe879cc",
        "file": [
            {
                "additions": 13,
                "blob_url": "https://github.com/apache/jspwiki/blob/99ed0c72f2266b60aa6652e9fd326fb1fbe879cc/src/com/ecyrd/jspwiki/plugin/ReferringPagesPlugin.java",
                "changes": 18,
                "contents_url": "https://api.github.com/repos/apache/jspwiki/contents/src/com/ecyrd/jspwiki/plugin/ReferringPagesPlugin.java?ref=99ed0c72f2266b60aa6652e9fd326fb1fbe879cc",
                "deletions": 5,
                "filename": "src/com/ecyrd/jspwiki/plugin/ReferringPagesPlugin.java",
                "patch": "@@ -47,6 +47,7 @@ public String execute( WikiContext context, Map params )\n     {\n         ReferenceManager refmgr = context.getEngine().getReferenceManager();\n         Collection       links  = refmgr.findReferrers( context.getPage().getName() );\n+        String           wikitext;\n \n         super.initialize( context, params );\n \n@@ -60,13 +61,20 @@ public String execute( WikiContext context, Map params )\n         log.debug( \"Fetching referring pages for \"+context.getPage().getName()+\n                    \" with a max of \"+items);\n         \n-        String wikitext = wikitizeCollection( links, \"\\\\\\\\\", items );\n-\n-        if( items < links.size() && items > 0 )\n+        if( links != null && links.size() > 0 )\n         {\n-            extras = TextUtil.replaceString( extras, \"%d\", \n+            wikitext = wikitizeCollection( links, \"\\\\\\\\\", items );\n+\n+            if( items < links.size() && items > 0 )\n+            {\n+                extras = TextUtil.replaceString( extras, \"%d\", \n                                              \"\"+(links.size()-items) );\n-            wikitext += extras;\n+                wikitext += extras;\n+            }\n+        }\n+        else\n+        {\n+            wikitext = \"...nobody\";\n         }\n \n         return makeHTML( context, wikitext );",
                "raw_url": "https://github.com/apache/jspwiki/raw/99ed0c72f2266b60aa6652e9fd326fb1fbe879cc/src/com/ecyrd/jspwiki/plugin/ReferringPagesPlugin.java",
                "sha": "56a11a73b6c740cae3998e897c9eac44344207f9",
                "status": "modified"
            }
        ],
        "message": "Fixed a NPE with NULL links list.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/jspwiki/trunk@621411 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/jspwiki/commit/1cd4b41ddfce50621fae5372da2fd28707861722",
        "patched_files": [
            "ReferringPagesPlugin.java"
        ],
        "repo": "jspwiki",
        "unit_tests": [
            "ReferringPagesPluginTest.java"
        ]
    },
    "jspwiki_a4d6fd6": {
        "bug_id": "jspwiki_a4d6fd6",
        "commit": "https://github.com/apache/jspwiki/commit/a4d6fd613fb13a42deb436b4341db765ac2a9ac0",
        "file": [
            {
                "additions": 5,
                "blob_url": "https://github.com/apache/jspwiki/blob/a4d6fd613fb13a42deb436b4341db765ac2a9ac0/ChangeLog",
                "changes": 5,
                "contents_url": "https://api.github.com/repos/apache/jspwiki/contents/ChangeLog?ref=a4d6fd613fb13a42deb436b4341db765ac2a9ac0",
                "deletions": 0,
                "filename": "ChangeLog",
                "patch": "@@ -1,3 +1,8 @@\n+2002-02-03  Janne Jalkanen  <Janne.Jalkanen@ecyrd.com>\n+\n+        * Fixed a slow routine in TranslatorReader, shaving off roughly\n+\t10% of translation time.  Construction Exceptions is truly heavy.\n+\n 2002-01-30  Janne Jalkanen  <Janne.Jalkanen@ecyrd.com>\n \n         * v1.6.8-cvs",
                "raw_url": "https://github.com/apache/jspwiki/raw/a4d6fd613fb13a42deb436b4341db765ac2a9ac0/ChangeLog",
                "sha": "867a17c5a27ac5618a8d3a531fcb372feea0d377",
                "status": "modified"
            },
            {
                "additions": 15,
                "blob_url": "https://github.com/apache/jspwiki/blob/a4d6fd613fb13a42deb436b4341db765ac2a9ac0/src/com/ecyrd/jspwiki/FileSystemProvider.java",
                "changes": 16,
                "contents_url": "https://api.github.com/repos/apache/jspwiki/contents/src/com/ecyrd/jspwiki/FileSystemProvider.java?ref=a4d6fd613fb13a42deb436b4341db765ac2a9ac0",
                "deletions": 1,
                "filename": "src/com/ecyrd/jspwiki/FileSystemProvider.java",
                "patch": "@@ -125,6 +125,9 @@ public String getPageText( String page, int version )\n         return getPageText( page );\n     }\n \n+    /**\n+     *  Read the text directly from the correct file.\n+     */\n     private String getPageText( String page )\n     {\n         String result  = null;\n@@ -207,6 +210,14 @@ public Collection getAllPages()\n \n             WikiPage page = getPageInfo( unmangleName(wikiname.substring(0,cutpoint)),\n                                          WikiPageProvider.LATEST_VERSION );\n+            if( page == null )\n+            {\n+                // This should not really happen.\n+                // FIXME: Should we throw an exception here?\n+                log.error(\"Page \"+wikiname+\" was found in directory listing, but could not be located individually.\");\n+                continue;\n+            }\n+            \n             set.add( page );\n         }\n \n@@ -330,7 +341,10 @@ public WikiPage getPageInfo( String page, int version )\n     {\n         File file = findPage( page );\n \n-        if( !file.exists() ) return null;\n+        if( !file.exists() )\n+        {\n+            return null;\n+        }\n \n         WikiPage p = new WikiPage( page );\n         p.setLastModified( new Date(file.lastModified()) );",
                "raw_url": "https://github.com/apache/jspwiki/raw/a4d6fd613fb13a42deb436b4341db765ac2a9ac0/src/com/ecyrd/jspwiki/FileSystemProvider.java",
                "sha": "3956b42386bd291ec644053eefc55d1732f2d186",
                "status": "modified"
            },
            {
                "additions": 17,
                "blob_url": "https://github.com/apache/jspwiki/blob/a4d6fd613fb13a42deb436b4341db765ac2a9ac0/src/com/ecyrd/jspwiki/QueryItem.java",
                "changes": 18,
                "contents_url": "https://api.github.com/repos/apache/jspwiki/contents/src/com/ecyrd/jspwiki/QueryItem.java?ref=a4d6fd613fb13a42deb436b4341db765ac2a9ac0",
                "deletions": 1,
                "filename": "src/com/ecyrd/jspwiki/QueryItem.java",
                "patch": "@@ -1,7 +1,7 @@\n /* \n     JSPWiki - a JSP-based WikiWiki clone.\n \n-    Copyright (C) 2001 Janne Jalkanen (Janne.Jalkanen@iki.fi)\n+    Copyright (C) 2001-2002 Janne Jalkanen (Janne.Jalkanen@iki.fi)\n \n     This program is free software; you can redistribute it and/or modify\n     it under the terms of the GNU General Public License as published by\n@@ -19,12 +19,28 @@\n  */\n package com.ecyrd.jspwiki;\n \n+/**\n+ *  This simple class just fulfils the role of a container\n+ *  for searches.  It tells the word and whether it is requested or not.\n+ *\n+ *  @author Janne Jalkanen\n+ */\n public class QueryItem\n {\n+    /** The word is required to be in the pages */\n     public static final int REQUIRED  = 1;\n+\n+    /** The word may NOT be in the pages */\n     public static final int FORBIDDEN = -1;\n+\n+    /** The word should be in the pages, but the search engine may\n+        use its own discretion. */\n     public static final int REQUESTED = 0;\n \n+    /** The word that is being searched */\n     public String word;\n+\n+    /** The type of the word.  See above for types.  The default\n+        is REQUESTED. */\n     public int    type = REQUESTED;\n }",
                "raw_url": "https://github.com/apache/jspwiki/raw/a4d6fd613fb13a42deb436b4341db765ac2a9ac0/src/com/ecyrd/jspwiki/QueryItem.java",
                "sha": "45488d7b2b9238cfc0f1c02e42d8640e5564c01d",
                "status": "modified"
            },
            {
                "additions": 3,
                "blob_url": "https://github.com/apache/jspwiki/blob/a4d6fd613fb13a42deb436b4341db765ac2a9ac0/src/com/ecyrd/jspwiki/RCSFileProvider.java",
                "changes": 4,
                "contents_url": "https://api.github.com/repos/apache/jspwiki/contents/src/com/ecyrd/jspwiki/RCSFileProvider.java?ref=a4d6fd613fb13a42deb436b4341db765ac2a9ac0",
                "deletions": 1,
                "filename": "src/com/ecyrd/jspwiki/RCSFileProvider.java",
                "patch": "@@ -160,6 +160,7 @@ else if( found && line.startsWith(\"----\")  )\n         }\n         catch( Exception e )\n         {\n+            // This also occurs when 'info' was null.\n             log.warn(\"Failed to read RCS info\",e);\n         }\n \n@@ -170,7 +171,8 @@ public String getPageText( String page, int version )\n     {\n         String result = null;\n \n-        // Let parent handle latest fetches.\n+        // Let parent handle latest fetches, since the FileSystemProvider\n+        // can do the file reading just as well.\n \n         if( version == WikiPageProvider.LATEST_VERSION )\n             return super.getPageText( page, version );",
                "raw_url": "https://github.com/apache/jspwiki/raw/a4d6fd613fb13a42deb436b4341db765ac2a9ac0/src/com/ecyrd/jspwiki/RCSFileProvider.java",
                "sha": "0f11ebbefcf1b1f8e29a055922df3e102149e728",
                "status": "modified"
            },
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/jspwiki/blob/a4d6fd613fb13a42deb436b4341db765ac2a9ac0/src/com/ecyrd/jspwiki/ReferenceManager.java",
                "changes": 3,
                "contents_url": "https://api.github.com/repos/apache/jspwiki/contents/src/com/ecyrd/jspwiki/ReferenceManager.java?ref=a4d6fd613fb13a42deb436b4341db765ac2a9ac0",
                "deletions": 1,
                "filename": "src/com/ecyrd/jspwiki/ReferenceManager.java",
                "patch": "@@ -1,7 +1,8 @@\n /* \n     JSPWiki - a JSP-based WikiWiki clone.\n \n-    Copyright (C) 2001 Janne Jalkanen (Janne.Jalkanen@iki.fi)\n+    Copyright (C) 2001-2002 Janne Jalkanen (Janne.Jalkanen@iki.fi),\n+                            Erik Bunn (ebu@memecry.net)\n \n     This program is free software; you can redistribute it and/or modify\n     it under the terms of the GNU General Public License as published by",
                "raw_url": "https://github.com/apache/jspwiki/raw/a4d6fd613fb13a42deb436b4341db765ac2a9ac0/src/com/ecyrd/jspwiki/ReferenceManager.java",
                "sha": "18cbe7ed248587d1022af49f715b263ef7f6ae00",
                "status": "modified"
            },
            {
                "additions": 47,
                "blob_url": "https://github.com/apache/jspwiki/blob/a4d6fd613fb13a42deb436b4341db765ac2a9ac0/src/com/ecyrd/jspwiki/TranslatorReader.java",
                "changes": 52,
                "contents_url": "https://api.github.com/repos/apache/jspwiki/contents/src/com/ecyrd/jspwiki/TranslatorReader.java?ref=a4d6fd613fb13a42deb436b4341db765ac2a9ac0",
                "deletions": 5,
                "filename": "src/com/ecyrd/jspwiki/TranslatorReader.java",
                "patch": "@@ -34,6 +34,11 @@\n  *  Handles conversion from Wiki format into fully featured HTML.\n  *  This is where all the magic happens.  It is CRITICAL that this\n  *  class is tested, or all Wikis might die horribly.\n+ *  <P>\n+ *  The output of the HTML has not yet been validated against\n+ *  the HTML DTD.  However, it is very simple.\n+ *\n+ *  @author Janne Jalkanen\n  */\n // FIXME: Class still has problems with {{{: all conversion on that line where the {{{\n //        appears is done, but after that, conversion is not done.  The only real solution\n@@ -120,7 +125,11 @@ public TranslatorReader( WikiContext context, Reader in )\n     }\n \n     /**\n-     *  Adds a hook for processing link texts.\n+     *  Adds a hook for processing link texts.  This hook is called\n+     *  when the link text is written into the output stream, and\n+     *  you may use it to modify the text.  It does not affect the\n+     *  actual link, only the user-visible text.\n+     *\n      *  @param mutator The hook to call.  Null is safe.\n      */\n     public void addLinkTransmutator( StringTransmutator mutator )\n@@ -132,7 +141,8 @@ public void addLinkTransmutator( StringTransmutator mutator )\n     }\n \n     /**\n-     *  Adds a hook for processing local links.\n+     *  Adds a hook for processing local links.  The engine\n+     *  transforms both non-existing and existing page links.\n      *\n      *  @param mutator The hook to call.  Null is safe.\n      */\n@@ -175,7 +185,7 @@ protected static Collection getImagePatterns( WikiEngine engine )\n     }\n \n     /**\n-     *  Returns true, if the link exists.\n+     *  Returns true, if the link exists.  This is simply a shortcut.\n      */\n     private boolean linkExists( String link )\n     {\n@@ -184,6 +194,11 @@ private boolean linkExists( String link )\n \n     /**\n      *  Calls a transmutator chain.\n+     *\n+     *  @param list Chain to call\n+     *  @param text Text that should be passed to the mutate() method\n+     *              of each of the mutators in the chain.\n+     *  @return The result of the mutation.\n      */\n \n     private String callMutatorChain( Collection list, String text )\n@@ -205,6 +220,10 @@ private String callMutatorChain( Collection list, String text )\n \n     /**\n      *  Write a HTMLized link depending on its type.\n+     *\n+     *  @param type Type of the link.\n+     *  @param link The actual link.\n+     *  @param text The user-visible text for the link.\n      */\n     private String makeLink( int type, String link, String text )\n     {\n@@ -322,7 +341,8 @@ private String cleanLink( String link )\n     }\n \n     /**\n-     *  Figures out if a link is an off-site link.\n+     *  Figures out if a link is an off-site link.  This recognizes\n+     *  the most common protocols by checking how it starts.\n      */\n     private boolean isExternalLink( String link )\n     {\n@@ -348,7 +368,8 @@ private boolean isImageLink( String link )\n     }\n \n     // FIXME: Non-optimal.\n-    private boolean isNumber( String s )\n+    /*\n+    private boolean isNumber2( String s )\n     {\n         try\n         {\n@@ -360,7 +381,28 @@ private boolean isNumber( String s )\n         }\n         return true;\n     }\n+    */\n+    /**\n+     *  Returns true, if the argument contains a number, otherwise false.\n+     *  In a quick test this is roughly the same speed as Integer.parseInt()\n+     *  if the argument is a number, and roughly ten times the speed, if\n+     *  the argument is NOT a number.\n+     */\n \n+    private boolean isNumber( String s )\n+    {\n+        if( s.charAt(0) == '-' && s.length() > 1)\n+            s = s.substring(1);\n+\n+        for( int i = 0; i < s.length(); i++ )\n+        {\n+            if( !Character.isDigit(s.charAt(i)) )\n+                return false;\n+        }\n+\n+        return true;\n+    }\n+    \n     private String setHyperLinks( String line )\n     {\n         int start, end = 0;",
                "raw_url": "https://github.com/apache/jspwiki/raw/a4d6fd613fb13a42deb436b4341db765ac2a9ac0/src/com/ecyrd/jspwiki/TranslatorReader.java",
                "sha": "8dcd0191da6666b5182f718606285dbdac058aa4",
                "status": "modified"
            },
            {
                "additions": 0,
                "blob_url": "https://github.com/apache/jspwiki/blob/a4d6fd613fb13a42deb436b4341db765ac2a9ac0/src/com/ecyrd/jspwiki/WikiPageProvider.java",
                "changes": 1,
                "contents_url": "https://api.github.com/repos/apache/jspwiki/contents/src/com/ecyrd/jspwiki/WikiPageProvider.java?ref=a4d6fd613fb13a42deb436b4341db765ac2a9ac0",
                "deletions": 1,
                "filename": "src/com/ecyrd/jspwiki/WikiPageProvider.java",
                "patch": "@@ -69,7 +69,6 @@\n     /**\n      *  Returns all pages.  Each element in the returned\n      *  Collection should be a WikiPage.\n-     *  @deprecated\n      */\n \n     public Collection getAllPages();",
                "raw_url": "https://github.com/apache/jspwiki/raw/a4d6fd613fb13a42deb436b4341db765ac2a9ac0/src/com/ecyrd/jspwiki/WikiPageProvider.java",
                "sha": "d4e54f0c48b3bff5593d94b640dd06df2bb380b4",
                "status": "modified"
            },
            {
                "additions": 2,
                "blob_url": "https://github.com/apache/jspwiki/blob/a4d6fd613fb13a42deb436b4341db765ac2a9ac0/tests/etc/jspwiki.properties",
                "changes": 4,
                "contents_url": "https://api.github.com/repos/apache/jspwiki/contents/tests/etc/jspwiki.properties?ref=a4d6fd613fb13a42deb436b4341db765ac2a9ac0",
                "deletions": 2,
                "filename": "tests/etc/jspwiki.properties",
                "patch": "@@ -12,7 +12,7 @@ jspwiki.pageProvider = com.ecyrd.jspwiki.FileSystemProvider\n #\n #  Determines where wiki files are kept.\n #\n-jspwiki.fileSystemProvider.pageDir = /tmp/\n+jspwiki.fileSystemProvider.pageDir = c:\\\\tmp\\\\\n \n #\n #  Special page references.\n@@ -64,7 +64,7 @@ jspwiki.translatorReader.inlinePattern.3 = http://images.com/*\n log4j.appender.FileLog = org.apache.log4j.RollingFileAppender\n log4j.appender.FileLog.MaxFileSize    = 10MB\n log4j.appender.FileLog.MaxBackupIndex = 14\n-log4j.appender.FileLog.File = /tmp/jspwikitests.log\n+log4j.appender.FileLog.File = c:\\\\tmp\\\\jspwikitests.log\n log4j.appender.FileLog.layout = org.apache.log4j.PatternLayout\n log4j.appender.FileLog.layout.ConversionPattern=%d [%t] %p %c %x - %m%n\n ",
                "raw_url": "https://github.com/apache/jspwiki/raw/a4d6fd613fb13a42deb436b4341db765ac2a9ac0/tests/etc/jspwiki.properties",
                "sha": "f4a7f2c0a3df8c487c1e26f2e9ed994282184303",
                "status": "modified"
            }
        ],
        "message": "Hopefully fixed bug with NPEs in CachingProvider.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/jspwiki/trunk@621389 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/jspwiki/commit/8e830c7f4c71ab0208b2e72547a4693bafd5ec2b",
        "patched_files": [
            "TranslatorReader.java",
            "ChangeLog",
            "jspwiki.properties"
        ],
        "repo": "jspwiki",
        "unit_tests": [
            "TranslatorReaderTest.java"
        ]
    },
    "jspwiki_ab8c7fb": {
        "bug_id": "jspwiki_ab8c7fb",
        "commit": "https://github.com/apache/jspwiki/commit/ab8c7fb529af8cb4e6f9e65094a1dbec6dbf7db7",
        "file": [
            {
                "additions": 6,
                "blob_url": "https://github.com/apache/jspwiki/blob/ab8c7fb529af8cb4e6f9e65094a1dbec6dbf7db7/jspwiki-war/src/main/java/org/apache/wiki/auth/AuthenticationManager.java",
                "changes": 6,
                "contents_url": "https://api.github.com/repos/apache/jspwiki/contents/jspwiki-war/src/main/java/org/apache/wiki/auth/AuthenticationManager.java?ref=ab8c7fb529af8cb4e6f9e65094a1dbec6dbf7db7",
                "deletions": 0,
                "filename": "jspwiki-war/src/main/java/org/apache/wiki/auth/AuthenticationManager.java",
                "patch": "@@ -19,6 +19,7 @@ Licensed to the Apache Software Foundation (ASF) under one\n package org.apache.wiki.auth;\n \n import java.io.File;\n+import java.io.FileNotFoundException;\n import java.io.FileOutputStream;\n import java.io.IOException;\n import java.io.InputStream;\n@@ -606,6 +607,7 @@ public static boolean isUserPrincipal( Principal principal )\n      */\n     protected static URL findConfigFile( WikiEngine engine, String name )\n     {\n+        log.info( \"looking for \" + name + \" inside WEB-INF \" );\n         // Try creating an absolute path first\n         File defaultFile = null;\n         if( engine.getRootPath() != null )\n@@ -636,9 +638,13 @@ protected static URL findConfigFile( WikiEngine engine, String name )\n         \tInputStream is = null;\n             try\n             {\n+                log.info( \"looking for /\" + name + \" on classpath\" );\n                 //  create a tmp file of the policy loaded as an InputStream and return the URL to it\n                 //  \n                 is = AuthenticationManager.class.getResourceAsStream( \"/\" + name );\n+                if( is == null ) {\n+                    throw new FileNotFoundException( name + \" not found\" );\n+                }\n                 File tmpFile = File.createTempFile( \"temp.\" + name, \"\" );\n                 tmpFile.deleteOnExit();\n ",
                "raw_url": "https://github.com/apache/jspwiki/raw/ab8c7fb529af8cb4e6f9e65094a1dbec6dbf7db7/jspwiki-war/src/main/java/org/apache/wiki/auth/AuthenticationManager.java",
                "sha": "de726806dda36a7db101d1826dd01a42b2c06f2a",
                "status": "modified"
            }
        ],
        "message": "added some log messages and firing a FileNotFoundException if the policy file isn't found, in order to get a  meaningful exception on the log file instead of a NullPointerException on startup\n\ngit-svn-id: https://svn.apache.org/repos/asf/jspwiki/trunk@1592420 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/jspwiki/commit/d8b8f4b8ce9828afb9a418ed69da498f4596eca8",
        "patched_files": [
            "AuthenticationManager.java"
        ],
        "repo": "jspwiki",
        "unit_tests": [
            "AuthenticationManagerTest.java"
        ]
    },
    "jspwiki_b8caf6e": {
        "bug_id": "jspwiki_b8caf6e",
        "commit": "https://github.com/apache/jspwiki/commit/b8caf6e19ffde4ff68da007a34bde02b216110d2",
        "file": [
            {
                "additions": 19,
                "blob_url": "https://github.com/apache/jspwiki/blob/b8caf6e19ffde4ff68da007a34bde02b216110d2/src/com/ecyrd/jspwiki/auth/AuthorizationManager.java",
                "changes": 23,
                "contents_url": "https://api.github.com/repos/apache/jspwiki/contents/src/com/ecyrd/jspwiki/auth/AuthorizationManager.java?ref=b8caf6e19ffde4ff68da007a34bde02b216110d2",
                "deletions": 4,
                "filename": "src/com/ecyrd/jspwiki/auth/AuthorizationManager.java",
                "patch": "@@ -405,10 +405,25 @@ public final void initialize( WikiEngine engine, Properties properties ) throws\n         try\n         {\n             URL policyURL = AuthenticationManager.findConfigFile( engine, DEFAULT_POLICY );\n-            File policyFile = new File( policyURL.getPath() );\n-            m_localPolicy = new LocalPolicy( policyFile, engine.getContentEncoding() );\n-            m_localPolicy.refresh();\n-            log.info(\"Initialized local security policy: \" + policyFile.getAbsolutePath());\n+            \n+            if (policyURL != null) \n+            {\n+                File policyFile = new File( policyURL.getPath() );\n+                m_localPolicy = new LocalPolicy( policyFile, engine.getContentEncoding() );\n+                m_localPolicy.refresh();\n+                log.info(\"Initialized default security policy: \" + policyFile.getAbsolutePath());\n+            }\n+            else\n+            {\n+                StringBuffer sb = new StringBuffer(\"JSPWiki was unable to initialize the \");\n+                sb.append(\"default security policy (WEB-INF/jspwiki.policy) file. \");\n+                sb.append(\"Please ensure that the jspwiki.policy file exists in the default location. \");\n+                sb.append(\"This file should exist regardless of the existance of a global policy file. \");\n+                sb.append(\"The global policy file is identified by the java.security.policy variable. \");\n+                WikiSecurityException wse = new WikiSecurityException(sb.toString());\n+                log.fatal(sb.toString(), wse);\n+                throw wse;\n+            }\n         }\n         catch ( PolicyException e )\n         {",
                "raw_url": "https://github.com/apache/jspwiki/raw/b8caf6e19ffde4ff68da007a34bde02b216110d2/src/com/ecyrd/jspwiki/auth/AuthorizationManager.java",
                "sha": "5e87506ea950e85ef008deea9bb6df36cdd33dcf",
                "status": "modified"
            }
        ],
        "message": "Added patch from Dave Wolf to fix an NPE.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/jspwiki/trunk@626883 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/jspwiki/commit/0e32a2fdf4d521ecf5dd9bf200848b7a9ae54f68",
        "patched_files": [
            "AuthorizationManager.java"
        ],
        "repo": "jspwiki",
        "unit_tests": [
            "AuthorizationManagerTest.java"
        ]
    },
    "jspwiki_c53d53c": {
        "bug_id": "jspwiki_c53d53c",
        "commit": "https://github.com/apache/jspwiki/commit/c53d53c5005835b3330aa23fcf34af1e1cf3c50f",
        "file": [
            {
                "additions": 10,
                "blob_url": "https://github.com/apache/jspwiki/blob/c53d53c5005835b3330aa23fcf34af1e1cf3c50f/ChangeLog",
                "changes": 10,
                "contents_url": "https://api.github.com/repos/apache/jspwiki/contents/ChangeLog?ref=c53d53c5005835b3330aa23fcf34af1e1cf3c50f",
                "deletions": 0,
                "filename": "ChangeLog",
                "patch": "@@ -1,3 +1,13 @@\n+2013-06-02  Juan Pablo Santos (juanpablo AT apache DOT org)\n+\n+       * 2.10.0-svn-3\n+\n+       * JSPWIKI-771: inherit ASF parent pom. Deleted release profile in favour of\n+         apache-release and gpg configuration (both present on parent pom);\n+         added <ciManagement/>, <issueManagement/> and <mailingLists/> sections.\n+       \n+       * fixed runtime NPE on WikiJSPFilter (m_engine used before having been initialized)\n+\n 2013-06-01  Harry Metske (metskem@apache.org)\n \n        * 2.10.0-svn-2",
                "raw_url": "https://github.com/apache/jspwiki/raw/c53d53c5005835b3330aa23fcf34af1e1cf3c50f/ChangeLog",
                "sha": "89bc6031fb2d5df0c790e609057cd732fd099a7e",
                "status": "modified"
            },
            {
                "additions": 1,
                "blob_url": "https://github.com/apache/jspwiki/blob/c53d53c5005835b3330aa23fcf34af1e1cf3c50f/jspwiki-war/src/main/java/org/apache/wiki/Release.java",
                "changes": 2,
                "contents_url": "https://api.github.com/repos/apache/jspwiki/contents/jspwiki-war/src/main/java/org/apache/wiki/Release.java?ref=c53d53c5005835b3330aa23fcf34af1e1cf3c50f",
                "deletions": 1,
                "filename": "jspwiki-war/src/main/java/org/apache/wiki/Release.java",
                "patch": "@@ -75,7 +75,7 @@ Licensed to the Apache Software Foundation (ASF) under one\n      *  <p>\n      *  If the build identifier is empty, it is not added.\n      */\n-    public static final String     BUILD         = \"2\";\n+    public static final String     BUILD         = \"3\";\n     \n     /**\n      *  This is the generic version string you should use",
                "raw_url": "https://github.com/apache/jspwiki/raw/c53d53c5005835b3330aa23fcf34af1e1cf3c50f/jspwiki-war/src/main/java/org/apache/wiki/Release.java",
                "sha": "83428cfee833972b5c6b48b90960264aaf0e57e6",
                "status": "modified"
            }
        ],
        "message": "* 2.10.0-svn-3\n\n* JSPWIKI-771: inherit ASF parent pom. Deleted release profile in favour of\n  apache-release and gpg configuration (both present on parent pom);\n  added <ciManagement/>, <issueManagement/> and <mailingLists/> sections.\n       \n* fixed runtime NPE on WikiJSPFilter (m_engine used before having been initialized)\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/jspwiki/trunk@1488662 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/jspwiki/commit/33f7b18db041a0731e07ab165855875665954c0d",
        "patched_files": [
            "ChangeLog",
            "Release.java"
        ],
        "repo": "jspwiki",
        "unit_tests": [
            "ReleaseTest.java"
        ]
    },
    "jspwiki_dd8c00c": {
        "bug_id": "jspwiki_dd8c00c",
        "commit": "https://github.com/apache/jspwiki/commit/dd8c00c9e4e48a6dfbb5ba0bcdb122ab59997e4a",
        "file": [
            {
                "additions": 3,
                "blob_url": "https://github.com/apache/jspwiki/blob/dd8c00c9e4e48a6dfbb5ba0bcdb122ab59997e4a/src/com/ecyrd/jspwiki/auth/user/XMLUserDatabase.java",
                "changes": 3,
                "contents_url": "https://api.github.com/repos/apache/jspwiki/contents/src/com/ecyrd/jspwiki/auth/user/XMLUserDatabase.java?ref=dd8c00c9e4e48a6dfbb5ba0bcdb122ab59997e4a",
                "deletions": 0,
                "filename": "src/com/ecyrd/jspwiki/auth/user/XMLUserDatabase.java",
                "patch": "@@ -611,6 +611,9 @@ private UserProfile findByAttribute( String matchAttribute, String index )\n         checkForRefresh();\n         \n         NodeList users = c_dom.getElementsByTagName( USER_TAG );\n+        \n+        if( users == null ) return null;\n+        \n         for( int i = 0; i < users.getLength(); i++ )\n         {\n             Element user = (Element) users.item( i );",
                "raw_url": "https://github.com/apache/jspwiki/raw/dd8c00c9e4e48a6dfbb5ba0bcdb122ab59997e4a/src/com/ecyrd/jspwiki/auth/user/XMLUserDatabase.java",
                "sha": "610212e93dc0cd8ba1040efd049c5fba9bc6b43e",
                "status": "modified"
            }
        ],
        "message": "Adding a NPE check to fight an annoying problem at jspwiki.org.\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/jspwiki/trunk@703235 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/jspwiki/commit/65a1d67ede1e00001b89a64cdcd9058e9eea796b",
        "patched_files": [
            "XMLUserDatabase.java"
        ],
        "repo": "jspwiki",
        "unit_tests": [
            "XMLUserDatabaseTest.java"
        ]
    },
    "jspwiki_e6d405d": {
        "bug_id": "jspwiki_e6d405d",
        "commit": "https://github.com/apache/jspwiki/commit/e6d405d09ca4f8c10e0fed34cd2b4f40d359c5c1",
        "file": [
            {
                "additions": 7,
                "blob_url": "https://github.com/apache/jspwiki/blob/e6d405d09ca4f8c10e0fed34cd2b4f40d359c5c1/src/com/ecyrd/jspwiki/TextUtil.java",
                "changes": 8,
                "contents_url": "https://api.github.com/repos/apache/jspwiki/contents/src/com/ecyrd/jspwiki/TextUtil.java?ref=e6d405d09ca4f8c10e0fed34cd2b4f40d359c5c1",
                "deletions": 1,
                "filename": "src/com/ecyrd/jspwiki/TextUtil.java",
                "patch": "@@ -144,8 +144,14 @@ protected static String urlDecode( byte[] bytes, String encoding )\n      */\n     public static String urlEncodeUTF8( String text )\n     {\n+        // If text is null, just return an empty string\n+        if ( text == null )\n+        {\n+            return \"\";\n+        }\n+        \n         byte[] rs = {};\n-\n+        \n         try\n         {\n             rs = text.getBytes(\"UTF-8\");",
                "raw_url": "https://github.com/apache/jspwiki/raw/e6d405d09ca4f8c10e0fed34cd2b4f40d359c5c1/src/com/ecyrd/jspwiki/TextUtil.java",
                "sha": "79ca60d41c6a7743a2fd0e3dbc4540f009da1a8e",
                "status": "modified"
            }
        ],
        "message": "Bugfix: Found and killed an NPE in TextUtil that was causing NewGroups.jsp to fail.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/jspwiki/trunk@625161 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/jspwiki/commit/9449e18420c1bbc9a52f234c6fab17560d71c9e5",
        "patched_files": [
            "TextUtil.java"
        ],
        "repo": "jspwiki",
        "unit_tests": [
            "TextUtilTest.java"
        ]
    },
    "jspwiki_ef0184e": {
        "bug_id": "jspwiki_ef0184e",
        "commit": "https://github.com/apache/jspwiki/commit/ef0184e4367dac4b92a43d4bdf196bdcfee770c9",
        "file": [
            {
                "additions": 6,
                "blob_url": "https://github.com/apache/jspwiki/blob/ef0184e4367dac4b92a43d4bdf196bdcfee770c9/src/com/ecyrd/jspwiki/auth/permissions/PagePermission.java",
                "changes": 18,
                "contents_url": "https://api.github.com/repos/apache/jspwiki/contents/src/com/ecyrd/jspwiki/auth/permissions/PagePermission.java?ref=ef0184e4367dac4b92a43d4bdf196bdcfee770c9",
                "deletions": 12,
                "filename": "src/com/ecyrd/jspwiki/auth/permissions/PagePermission.java",
                "patch": "@@ -37,7 +37,7 @@\n  * <i>never </i> imply others.\n  * </p>\n  * @author Andrew Jaquith\n- * @version $Revision: 1.4 $ $Date: 2005-09-02 23:47:52 $\n+ * @version $Revision: 1.5 $ $Date: 2005-09-17 18:21:06 $\n  * @since 2.3\n  */\n public final class PagePermission extends Permission\n@@ -151,9 +151,9 @@ public PagePermission( String page, String actions )\n      * @param page\n      * @param actions\n      */\n-    public PagePermission( String wiki, WikiPage page, String actions )\n+    public PagePermission( WikiPage page, String actions )\n     {\n-        this( wiki + WIKI_SEPARATOR + page.getName(), actions );\n+        this( page.getWiki() + WIKI_SEPARATOR + page.getName(), actions );\n     }\n \n     /**\n@@ -169,7 +169,7 @@ public final boolean equals( Object obj )\n         }\n         PagePermission p = (PagePermission) obj;\n         return ( p.m_mask == m_mask && p.m_page.equals( m_page ) \n-                 && p.m_wiki.equals( m_wiki ));\n+                 && p.m_wiki != null && p.m_wiki.equals( m_wiki ));\n     }\n \n     /**\n@@ -208,13 +208,7 @@ public final String getWiki()\n      */\n     public final int hashCode()\n     {\n-        int hash = m_mask;\n-        String actions = getActions();\n-        for( int i = 0; i < actions.length(); i++ )\n-        {\n-            hash += 13 * actions.hashCode();\n-        }\n-        return hash;\n+        return m_mask + ( ( 13 * m_actionString.hashCode() ) * 23 * m_wiki.hashCode() );\n     }\n \n     /**\n@@ -330,7 +324,7 @@ protected static final int impliedMask( int mask )\n      * @return the results of the test, where <code>true</code> indicates that\n      *         <code>subSet</code> is a subset of <code>superSet</code>\n      */\n-    protected final boolean isSubset( String superSet, String subSet )\n+    protected static final boolean isSubset( String superSet, String subSet )\n     {\n         // If either is null, return false\n         if ( superSet == null || subSet == null )",
                "raw_url": "https://github.com/apache/jspwiki/raw/ef0184e4367dac4b92a43d4bdf196bdcfee770c9/src/com/ecyrd/jspwiki/auth/permissions/PagePermission.java",
                "sha": "2120c7b179d18eca3a598185df8fad920a4d83a4",
                "status": "modified"
            }
        ],
        "message": "Changed PagePermission constructor; fixed NPE for equals().\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/jspwiki/trunk@624574 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/jspwiki/commit/fbda02884b67794464cc86624c894437bc0734ba",
        "patched_files": [
            "PagePermission.java"
        ],
        "repo": "jspwiki",
        "unit_tests": [
            "PagePermissionTest.java"
        ]
    },
    "jspwiki_f682550": {
        "bug_id": "jspwiki_f682550",
        "commit": "https://github.com/apache/jspwiki/commit/f6825505d7ca47df6c788d9dc1d880d2a5a1ac4f",
        "file": [
            {
                "additions": 15,
                "blob_url": "https://github.com/apache/jspwiki/blob/f6825505d7ca47df6c788d9dc1d880d2a5a1ac4f/jspwiki-main/src/main/java/org/apache/wiki/pages/DefaultPageManager.java",
                "changes": 40,
                "contents_url": "https://api.github.com/repos/apache/jspwiki/contents/jspwiki-main/src/main/java/org/apache/wiki/pages/DefaultPageManager.java?ref=f6825505d7ca47df6c788d9dc1d880d2a5a1ac4f",
                "deletions": 25,
                "filename": "jspwiki-main/src/main/java/org/apache/wiki/pages/DefaultPageManager.java",
                "patch": "@@ -95,11 +95,11 @@ Licensed to the Apache Software Foundation (ASF) under one\n      * @throws NoSuchElementException {@value #PROP_PAGEPROVIDER} property not found on WikiEngine properties\n      * @throws WikiException If anything goes wrong, you get this.\n      */\n-    public DefaultPageManager(WikiEngine engine, Properties props) throws NoSuchElementException, WikiException {\n+    public DefaultPageManager(final WikiEngine engine, final Properties props) throws NoSuchElementException, WikiException {\n         super(engine);\n-        String classname;\n+        final String classname;\n         m_engine = engine;\n-        boolean useCache = \"true\".equals(props.getProperty(PROP_USECACHE));\n+        final boolean useCache = \"true\".equals(props.getProperty(PROP_USECACHE));\n \n         m_expiryTime = TextUtil.parseIntParameter(props.getProperty(PROP_LOCKEXPIRY), 60);\n \n@@ -116,24 +116,24 @@ public DefaultPageManager(WikiEngine engine, Properties props) throws NoSuchElem\n \n         try {\n             LOG.debug(\"Page provider class: '\" + classname + \"'\");\n-            Class<?> providerclass = ClassUtil.findClass(\"org.apache.wiki.providers\", classname);\n+            final Class<?> providerclass = ClassUtil.findClass(\"org.apache.wiki.providers\", classname);\n             m_provider = (WikiPageProvider) providerclass.newInstance();\n \n             LOG.debug(\"Initializing page provider class \" + m_provider);\n             m_provider.initialize(m_engine, props);\n-        } catch (ClassNotFoundException e) {\n+        } catch (final ClassNotFoundException e) {\n             LOG.error(\"Unable to locate provider class '\" + classname + \"' (\" + e.getMessage() + \")\", e);\n             throw new WikiException(\"No provider class. (\" + e.getMessage() + \")\", e);\n-        } catch (InstantiationException e) {\n+        } catch (final InstantiationException e) {\n             LOG.error(\"Unable to create provider class '\" + classname + \"' (\" + e.getMessage() + \")\", e);\n             throw new WikiException(\"Faulty provider class. (\" + e.getMessage() + \")\", e);\n-        } catch (IllegalAccessException e) {\n+        } catch (final IllegalAccessException e) {\n             LOG.error(\"Illegal access to provider class '\" + classname + \"' (\" + e.getMessage() + \")\", e);\n             throw new WikiException(\"Illegal provider class. (\" + e.getMessage() + \")\", e);\n-        } catch (NoRequiredPropertyException e) {\n+        } catch (final NoRequiredPropertyException e) {\n             LOG.error(\"Provider did not found a property it was looking for: \" + e.getMessage(), e);\n             throw e;  // Same exception works.\n-        } catch (IOException e) {\n+        } catch (final IOException e) {\n             LOG.error(\"An I/O exception occurred while trying to create a new page provider: \" + classname, e);\n             throw new WikiException(\"Unable to start page provider: \" + e.getMessage(), e);\n         }\n@@ -164,30 +164,20 @@ public String getPageText( final String pageName, final int version) throws Prov\n         if (pageName == null || pageName.length() == 0) {\n             throw new ProviderException(\"Illegal page name\");\n         }\n-        String text = null;\n+        String text;\n \n         try {\n             text = m_provider.getPageText(pageName, version);\n-        } catch (final RepositoryModifiedException e) {\n+        } catch ( final RepositoryModifiedException e ) {\n             //  This only occurs with the latest version.\n-            LOG.info(\"Repository has been modified externally while fetching page \" + pageName);\n+            LOG.info( \"Repository has been modified externally while fetching page \" + pageName );\n \n             //  Empty the references and yay, it shall be recalculated\n-            final WikiPage p = m_provider.getPageInfo(pageName, version);\n+            final WikiPage p = m_provider.getPageInfo( pageName, version );\n \n             m_engine.getReferenceManager().updateReferences( p );\n-\n-            if (p != null) {\n-                m_engine.getSearchManager().reindexPage(p);\n-                text = m_provider.getPageText(pageName, version);\n-            } else {\n-                //\n-                //  Make sure that it no longer exists in internal data structures either.\n-                //\n-                final WikiPage dummy = new WikiPage(m_engine, pageName);\n-                m_engine.getSearchManager().pageRemoved(dummy);\n-                m_engine.getReferenceManager().pageRemoved(dummy);\n-            }\n+            m_engine.getSearchManager().reindexPage( p );\n+            text = m_provider.getPageText( pageName, version );\n         }\n \n         return text;",
                "raw_url": "https://github.com/apache/jspwiki/raw/f6825505d7ca47df6c788d9dc1d880d2a5a1ac4f/jspwiki-main/src/main/java/org/apache/wiki/pages/DefaultPageManager.java",
                "sha": "c1d9c160275294261b54eb65bde91d84928e81c4",
                "status": "modified"
            }
        ],
        "message": "p can't be null here, as an NPE would've raised on the call to m_engine.getReferenceManager().updateReferences( p );",
        "parent": "https://github.com/apache/jspwiki/commit/1a01c8153fd48630d5ca8c190524fde8a6464bad",
        "patched_files": [
            "DefaultPageManager.java"
        ],
        "repo": "jspwiki",
        "unit_tests": [
            "DefaultPageManagerTest.java"
        ]
    }
}