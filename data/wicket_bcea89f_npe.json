[
    {
        "repo": "wicket",
        "commit": "https://github.com/apache/wicket/commit/bcea89fc8a196d2e1ebdcecf9c81298a06b4f5cb",
        "bug_id": "wicket_bcea89f",
        "message": "WICKET-5751 NullPointerException in IntHashMap\nWICKET-5584 DiskDataStore error\n\nInitialize modCount in readObject()",
        "parent": "https://github.com/apache/wicket/commit/988f0fa57195ed60fcf1ac00d1023ca024647ca5",
        "patched_files": [
            "IntHashMap.java"
        ],
        "file": [
            {
                "status": "modified",
                "additions": 2,
                "raw_url": "https://github.com/apache/wicket/raw/bcea89fc8a196d2e1ebdcecf9c81298a06b4f5cb/wicket-util/src/main/java/org/apache/wicket/util/collections/IntHashMap.java",
                "contents_url": "https://api.github.com/repos/apache/wicket/contents/wicket-util/src/main/java/org/apache/wicket/util/collections/IntHashMap.java?ref=bcea89fc8a196d2e1ebdcecf9c81298a06b4f5cb",
                "filename": "wicket-util/src/main/java/org/apache/wicket/util/collections/IntHashMap.java",
                "deletions": 0,
                "sha": "7a8d1809295dc8ece761157c1df44a83e8143948",
                "blob_url": "https://github.com/apache/wicket/blob/bcea89fc8a196d2e1ebdcecf9c81298a06b4f5cb/wicket-util/src/main/java/org/apache/wicket/util/collections/IntHashMap.java",
                "patch": "@@ -1145,6 +1145,8 @@ private void writeObject(final java.io.ObjectOutputStream s) throws IOException\n \tprivate void readObject(final java.io.ObjectInputStream s) throws IOException,\n \t\tClassNotFoundException\n \t{\n+\t\tmodCount = new AtomicInteger(0);\n+\n \t\t// Read in the threshold, loadfactor, and any hidden stuff\n \t\ts.defaultReadObject();\n ",
                "changes": 2
            },
            {
                "status": "added",
                "additions": 61,
                "raw_url": "https://github.com/apache/wicket/raw/bcea89fc8a196d2e1ebdcecf9c81298a06b4f5cb/wicket-util/src/test/java/org/apache/wicket/util/collections/IntHashMapTest.java",
                "contents_url": "https://api.github.com/repos/apache/wicket/contents/wicket-util/src/test/java/org/apache/wicket/util/collections/IntHashMapTest.java?ref=bcea89fc8a196d2e1ebdcecf9c81298a06b4f5cb",
                "filename": "wicket-util/src/test/java/org/apache/wicket/util/collections/IntHashMapTest.java",
                "deletions": 0,
                "sha": "f38ee54e6ab5335b3063529e05ef7413f76e7bf8",
                "blob_url": "https://github.com/apache/wicket/blob/bcea89fc8a196d2e1ebdcecf9c81298a06b4f5cb/wicket-util/src/test/java/org/apache/wicket/util/collections/IntHashMapTest.java",
                "patch": "@@ -0,0 +1,61 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.wicket.util.collections;\n+\n+import static org.hamcrest.CoreMatchers.equalTo;\n+import static org.hamcrest.CoreMatchers.is;\n+import static org.hamcrest.CoreMatchers.notNullValue;\n+\n+import java.io.ByteArrayInputStream;\n+import java.io.IOException;\n+import java.io.ObjectInputStream;\n+import java.io.ObjectOutputStream;\n+import java.util.Iterator;\n+\n+import org.apache.wicket.util.io.ByteArrayOutputStream;\n+import org.junit.Assert;\n+import org.junit.Test;\n+\n+public class IntHashMapTest extends Assert\n+{\n+\n+\t@Test\n+\tpublic void serialize() throws IOException, ClassNotFoundException\n+\t{\n+\t\tIntHashMap<String> map = new IntHashMap<>();\n+\t\tmap.put(1, \"one\");\n+\t\tmap.put(2, \"two\");\n+\n+\t\tByteArrayOutputStream baos = new ByteArrayOutputStream();\n+\t\tObjectOutputStream oos = new ObjectOutputStream(baos);\n+\t\toos.writeObject(map);\n+\n+\t\tbyte[] serialized = baos.toByteArray();\n+\t\tByteArrayInputStream bais = new ByteArrayInputStream(serialized);\n+\t\tObjectInputStream ois = new ObjectInputStream(bais);\n+\t\tIntHashMap<String> deserialized = (IntHashMap<String>) ois.readObject();\n+\t\tassertThat(deserialized, is(notNullValue()));\n+\t\tassertThat(deserialized.get(1), is(equalTo(\"one\")));\n+\t\tassertThat(deserialized.get(2), is(equalTo(\"two\")));\n+\n+\t\t// WICKET-5584\n+\t\tdeserialized.put(3, \"three\");\n+\n+\t\t// WICKET-5751\n+\t\tdeserialized.entrySet().iterator();\n+\t}\n+}",
                "changes": 61
            }
        ],
        "unit_tests": [
            "IntHashMapTest.java"
        ]
    },
    {
        "buggy": false,
        "test_file": "wicket-util/src/test/java/org/apache/wicket/util/collections/IntHashMapTest.java",
        "buggy_files": [
            "wicket-util/src/main/java/org/apache/wicket/util/collections/IntHashMap.java"
        ],
        "fixed": true
    }
]