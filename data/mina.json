{
    "mina_2eb3067": {
        "bug_id": "mina_2eb3067",
        "commit": "https://github.com/apache/mina/commit/2eb3067109a5661951862f9ebf199ccec8ed007c",
        "file": [
            {
                "additions": 13,
                "blob_url": "https://github.com/apache/mina/blob/2eb3067109a5661951862f9ebf199ccec8ed007c/core/src/main/java/org/apache/mina/common/AbstractIoSession.java",
                "changes": 19,
                "contents_url": "https://api.github.com/repos/apache/mina/contents/core/src/main/java/org/apache/mina/common/AbstractIoSession.java?ref=2eb3067109a5661951862f9ebf199ccec8ed007c",
                "deletions": 6,
                "filename": "core/src/main/java/org/apache/mina/common/AbstractIoSession.java",
                "patch": "@@ -245,18 +245,25 @@ private ReadFuture newReadFuture() {\n             if (oldReadyReadFutures != null) {\n                 readyReadFutures = oldReadyReadFutures;\n             }\n-\n-            // Initialize waitingReadFutures together.\n-            Queue<ReadFuture> waitingReadFutures =\n-                new CircularQueue<ReadFuture>();\n-            setAttributeIfAbsent(WAITING_READ_FUTURES, waitingReadFutures);\n         }\n         return readyReadFutures;\n     }\n \n     @SuppressWarnings(\"unchecked\")\n     private Queue<ReadFuture> getWaitingReadFutures() {\n-        return (Queue<ReadFuture>) getAttribute(WAITING_READ_FUTURES);\n+        Queue<ReadFuture> waitingReadyReadFutures =\n+            (Queue<ReadFuture>) getAttribute(WAITING_READ_FUTURES);\n+        if (waitingReadyReadFutures == null) {\n+            waitingReadyReadFutures = new CircularQueue<ReadFuture>();\n+\n+            Queue<ReadFuture> oldWaitingReadyReadFutures =\n+                (Queue<ReadFuture>) setAttributeIfAbsent(\n+                        WAITING_READ_FUTURES, waitingReadyReadFutures);\n+            if (oldWaitingReadyReadFutures != null) {\n+                waitingReadyReadFutures = oldWaitingReadyReadFutures;\n+            }\n+        }\n+        return waitingReadyReadFutures;\n     }\n \n     public final WriteFuture write(Object message) {",
                "raw_url": "https://github.com/apache/mina/raw/2eb3067109a5661951862f9ebf199ccec8ed007c/core/src/main/java/org/apache/mina/common/AbstractIoSession.java",
                "sha": "ae2f77c86bc3af25bc63b05ec47f7ce3fd304dfa",
                "status": "modified"
            }
        ],
        "message": "Fixed issue: DIRMINA-567 - NPE in AbstractIoSession after getWaitingReadFutures\n* Applied the same lazy initialization technique to getWaitingReadFutures as I did in getReadFutures\n\ngit-svn-id: https://svn.apache.org/repos/asf/mina/trunk@645798 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/mina/commit/42eb2517c086fe67ac56b5c5705812851f6a3aa4",
        "repo": "mina",
        "unit_tests": [
            "AbstractIoSessionTest.java"
        ]
    },
    "mina_fa036dd": {
        "bug_id": "mina_fa036dd",
        "commit": "https://github.com/apache/mina/commit/fa036dd376076be7224022a49bcd90830b5782ed",
        "file": [
            {
                "additions": 9,
                "blob_url": "https://github.com/apache/mina/blob/fa036dd376076be7224022a49bcd90830b5782ed/core/src/main/java/org/apache/mina/filter/codec/ProtocolCodecFilter.java",
                "changes": 10,
                "contents_url": "https://api.github.com/repos/apache/mina/contents/core/src/main/java/org/apache/mina/filter/codec/ProtocolCodecFilter.java?ref=fa036dd376076be7224022a49bcd90830b5782ed",
                "deletions": 1,
                "filename": "core/src/main/java/org/apache/mina/filter/codec/ProtocolCodecFilter.java",
                "patch": "@@ -292,7 +292,15 @@ public void filterWrite(NextFilter nextFilter, IoSession session,\n \n         ProtocolEncoderOutput encoderOut = getEncoderOut(session,\n                 nextFilter, writeRequest);\n-\n+        \n+        if (encoder == null) {\n+            throw new ProtocolEncoderException(\"The encoder is null for the session \" + session);\n+        }\n+        \n+        if (encoderOut == null) {\n+            throw new ProtocolEncoderException(\"The encoderOut is null for the session \" + session);\n+        }\n+        \n         try {\n             // Now we can try to encode the response\n             encoder.encode(session, message, encoderOut);",
                "raw_url": "https://github.com/apache/mina/raw/fa036dd376076be7224022a49bcd90830b5782ed/core/src/main/java/org/apache/mina/filter/codec/ProtocolCodecFilter.java",
                "sha": "e12f795f1cdcbf96c1fce8466752109769b631c0",
                "status": "modified"
            }
        ],
        "message": "Added some protection against some NPE in the ProtocolCodecFilter. Not sure it's enough though...\n\ngit-svn-id: https://svn.apache.org/repos/asf/mina/trunk@898592 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/mina/commit/7bb118214fad995b1c9da49180d2c82058bacbe9",
        "repo": "mina",
        "unit_tests": [
            "ProtocolCodecFilterTest.java"
        ]
    }
}