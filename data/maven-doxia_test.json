{
    "maven-doxia_16836d8": {
        "bug_id": "maven-doxia_16836d8",
        "commit": "https://github.com/apache/maven-doxia/commit/16836d8a2dfea74be3bf4c1b0f5e50f2949fbc65",
        "file": [
            {
                "additions": 3,
                "blob_url": "https://github.com/apache/maven-doxia/blob/16836d8a2dfea74be3bf4c1b0f5e50f2949fbc65/doxia-modules/doxia-module-confluence/src/main/java/org/apache/maven/doxia/module/confluence/parser/table/TableBlockParser.java",
                "changes": 8,
                "contents_url": "https://api.github.com/repos/apache/maven-doxia/contents/doxia-modules/doxia-module-confluence/src/main/java/org/apache/maven/doxia/module/confluence/parser/table/TableBlockParser.java?ref=16836d8a2dfea74be3bf4c1b0f5e50f2949fbc65",
                "deletions": 5,
                "filename": "doxia-modules/doxia-module-confluence/src/main/java/org/apache/maven/doxia/module/confluence/parser/table/TableBlockParser.java",
                "patch": "@@ -133,20 +133,18 @@ public Block visit( String line, ByLineSource source )\n                     it++;\n                 }\n \n-                String[] pText = texts.toArray( new String[0] );\n-                for ( int i = 0; i < pText.length; i++ )\n+                for ( String pText : texts )\n                 {\n                     List<Block> blocks = new ArrayList<Block>();\n \n-                    blocks.add( parseLine( pText[i], new ByLineReaderSource( new StringReader( EMPTY_STRING ) ) ) );\n+                    blocks.add( parseLine( pText, new ByLineReaderSource( new StringReader( EMPTY_STRING ) ) ) );\n \n                     cells.add( new TableCellBlock( blocks ) );\n                 }\n             }\n \n             rows.add( new TableRowBlock( cells ) );\n         }\n-\n         while ( ( l = source.getNextLine() ) != null && accept( l, source ) );\n \n         assert rows.size() >= 1;\n@@ -157,7 +155,7 @@ public Block visit( String line, ByLineSource source )\n     private Block parseLine( String text, ByLineSource source )\n         throws ParseException\n     {\n-        if ( text.trim().length() > 0 )\n+        if ( text.length() > 0 )\n         {\n             for ( BlockParser parser : parsers )\n             {",
                "raw_url": "https://github.com/apache/maven-doxia/raw/16836d8a2dfea74be3bf4c1b0f5e50f2949fbc65/doxia-modules/doxia-module-confluence/src/main/java/org/apache/maven/doxia/module/confluence/parser/table/TableBlockParser.java",
                "sha": "34f3e4ead4ac9da7be6a36d30f87204c30e0d957",
                "status": "modified"
            },
            {
                "additions": 15,
                "blob_url": "https://github.com/apache/maven-doxia/blob/16836d8a2dfea74be3bf4c1b0f5e50f2949fbc65/doxia-modules/doxia-module-confluence/src/test/java/org/apache/maven/doxia/module/confluence/ConfluenceParserTest.java",
                "changes": 15,
                "contents_url": "https://api.github.com/repos/apache/maven-doxia/contents/doxia-modules/doxia-module-confluence/src/test/java/org/apache/maven/doxia/module/confluence/ConfluenceParserTest.java?ref=16836d8a2dfea74be3bf4c1b0f5e50f2949fbc65",
                "deletions": 0,
                "filename": "doxia-modules/doxia-module-confluence/src/test/java/org/apache/maven/doxia/module/confluence/ConfluenceParserTest.java",
                "patch": "@@ -300,6 +300,21 @@ public void testLink()\n         assertEquals( 9, result.split( \"end:link\\n\" ).length );\n     }\n \n+    public void testTable()\n+        throws Exception\n+    {\n+        String result = locateAndParseTestSourceFile( \"table\" );\n+        \n+        // DOXIA-537\n+        // |1|2|3|\n+        assertContainsLines( result, \"begin:tableRow\\nbegin:tableCell\\ntext: 1\\nend:tableCell\\n\\n\\nbegin:tableCell\\ntext: 2\\nend:tableCell\\n\\n\\nbegin:tableCell\\ntext: 3\\nend:tableCell\\n\" );\n+        // |1||3|\n+        assertContainsLines( result, \"begin:tableRow\\nbegin:tableCell\\ntext: 1\\nend:tableCell\\n\\n\\nbegin:tableCell\\ntext: 3\\nend:tableCell\\n\" );\n+        // |1| |3|\n+        assertContainsLines( result, \"begin:tableRow\\nbegin:tableCell\\ntext: 1\\nend:tableCell\\n\\n\\nbegin:tableCell\\ntext:  \\nend:tableCell\\n\\n\\nbegin:tableCell\\ntext: 3\\nend:tableCell\\n\" );\n+        \n+    }\n+\n     /** @throws Exception */\n     public void testTableWithLinks()\n         throws Exception",
                "raw_url": "https://github.com/apache/maven-doxia/raw/16836d8a2dfea74be3bf4c1b0f5e50f2949fbc65/doxia-modules/doxia-module-confluence/src/test/java/org/apache/maven/doxia/module/confluence/ConfluenceParserTest.java",
                "sha": "319b0d73c276c6a51f3fabb9b250b49daabac9c9",
                "status": "modified"
            },
            {
                "additions": 16,
                "blob_url": "https://github.com/apache/maven-doxia/blob/16836d8a2dfea74be3bf4c1b0f5e50f2949fbc65/doxia-modules/doxia-module-confluence/src/test/resources/table.confluence",
                "changes": 17,
                "contents_url": "https://api.github.com/repos/apache/maven-doxia/contents/doxia-modules/doxia-module-confluence/src/test/resources/table.confluence?ref=16836d8a2dfea74be3bf4c1b0f5e50f2949fbc65",
                "deletions": 1,
                "filename": "doxia-modules/doxia-module-confluence/src/test/resources/table.confluence",
                "patch": "@@ -10,4 +10,19 @@ Table with links (DOXIA-301):\n || Version || Download || Date || Format || \n |0.1.1 | [Download|http://example.com/release.0.1.1/ex-win32-win32.x86.zip] | 12-12-2008 | zip |\n |0.1.2 | [Download|http://example.com/release.0.1.2/ex-win32-win32.x86.zip] | 04-12-2008 | zip |\n-|0.1.3 | [Download|http://example.com/release.0.1.3/ex-win32-win32.x86.zip] | 03-11-2008 | zip |\n\\ No newline at end of file\n+|0.1.3 | [Download|http://example.com/release.0.1.3/ex-win32-win32.x86.zip] | 03-11-2008 | zip |\n+\n+Here is a 3 column table with headers, one row, and data in every column:\n+ \n+||One||Two||Three||\n+|1|2|3|\n+ \n+Now there is no data in column Two\n+ \n+||One||Two||Three||\n+|1||3|\n+ \n+Now there is a space in column Two\n+ \n+||One||Two||Three||\n+|1| |3|\n\\ No newline at end of file",
                "raw_url": "https://github.com/apache/maven-doxia/raw/16836d8a2dfea74be3bf4c1b0f5e50f2949fbc65/doxia-modules/doxia-module-confluence/src/test/resources/table.confluence",
                "sha": "c6fe22c8a71863af783b8d12a7ce4cc5b164fa9f",
                "status": "modified"
            }
        ],
        "message": "[DOXIA-537] NullPointerException parsing table cell with single space\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/doxia/doxia/trunk@1726441 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/maven-doxia/commit/fbe3e7c307f664396ae57159c7d9d935695cc90a",
        "patched_files": [
            "TableBlockParser.java",
            "ConfluenceParser.java",
            "table.java"
        ],
        "repo": "maven-doxia",
        "unit_tests": [
            "ConfluenceParserTest.java"
        ]
    },
    "maven-doxia_1cc2b08": {
        "bug_id": "maven-doxia_1cc2b08",
        "commit": "https://github.com/apache/maven-doxia/commit/1cc2b088baaf26f66eb0f03fad13687fdfb47afc",
        "file": [
            {
                "additions": 5,
                "blob_url": "https://github.com/apache/maven-doxia/blob/1cc2b088baaf26f66eb0f03fad13687fdfb47afc/doxia-modules/doxia-module-xdoc/src/main/java/org/apache/maven/doxia/module/xdoc/XdocParser.java",
                "changes": 10,
                "contents_url": "https://api.github.com/repos/apache/maven-doxia/contents/doxia-modules/doxia-module-xdoc/src/main/java/org/apache/maven/doxia/module/xdoc/XdocParser.java?ref=1cc2b088baaf26f66eb0f03fad13687fdfb47afc",
                "deletions": 5,
                "filename": "doxia-modules/doxia-module-xdoc/src/main/java/org/apache/maven/doxia/module/xdoc/XdocParser.java",
                "patch": "@@ -174,6 +174,11 @@ else if ( parser.getName().equals( MACRO_TAG.toString() ) )\n             {\n                 macroName = parser.getAttributeValue( null, Attribute.NAME.toString() );\n \n+                if ( macroParameters == null )\n+                {\n+                    macroParameters = new HashMap();\n+                }\n+\n                 if ( StringUtils.isEmpty( macroName ) )\n                 {\n                     throw new MacroExecutionException( \"The '\" + Attribute.NAME.toString() + \"' attribute for the '\"\n@@ -187,11 +192,6 @@ else if ( parser.getName().equals( Tag.PARAM.toString() ) )\n             {\n                 if ( StringUtils.isNotEmpty( macroName ) )\n                 {\n-                    if ( macroParameters == null )\n-                    {\n-                        macroParameters = new HashMap();\n-                    }\n-\n                     String paramName = parser.getAttributeValue( null, Attribute.NAME.toString() );\n                     String paramValue = parser.getAttributeValue( null, Attribute.VALUE.toString() );\n ",
                "raw_url": "https://github.com/apache/maven-doxia/raw/1cc2b088baaf26f66eb0f03fad13687fdfb47afc/doxia-modules/doxia-module-xdoc/src/main/java/org/apache/maven/doxia/module/xdoc/XdocParser.java",
                "sha": "680dacf02214b980b058a4254c50b1a9ceb2d989",
                "status": "modified"
            }
        ],
        "message": "DOXIA-240: NPE when building documentation\n\no moved the init of macroParameters to the <macro/> tag init\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/doxia/doxia/trunk@656475 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/maven-doxia/commit/3bce1c7d2e5b9fc54384a5df9769f76b31c25403",
        "patched_files": [
            "XdocParser.java"
        ],
        "repo": "maven-doxia",
        "unit_tests": [
            "XdocParserTest.java"
        ]
    },
    "maven-doxia_54a9c4d": {
        "bug_id": "maven-doxia_54a9c4d",
        "commit": "https://github.com/apache/maven-doxia/commit/54a9c4db6c936d774f60146487b85f84f78971b9",
        "file": [
            {
                "additions": 9,
                "blob_url": "https://github.com/apache/maven-doxia/blob/54a9c4db6c936d774f60146487b85f84f78971b9/doxia-core/src/main/java/org/apache/maven/doxia/sink/AbstractXmlSink.java",
                "changes": 18,
                "contents_url": "https://api.github.com/repos/apache/maven-doxia/contents/doxia-core/src/main/java/org/apache/maven/doxia/sink/AbstractXmlSink.java?ref=54a9c4db6c936d774f60146487b85f84f78971b9",
                "deletions": 9,
                "filename": "doxia-core/src/main/java/org/apache/maven/doxia/sink/AbstractXmlSink.java",
                "patch": "@@ -80,9 +80,9 @@ protected void writeStartTag( Tag t )\n      * &lt;tag attName=\"attValue\"&gt;\n      * </pre>\n      *\n-     * @param t a non null tag\n-     * @param att a set of attributes\n-     * @see #writeStartTag(javax.swing.text.html.HTML.Tag, javax.swing.text.MutableAttributeSet, boolean)\n+     * @param t a non null tag.\n+     * @param att a set of attributes. May be null.\n+     * @see #writeStartTag(javax.swing.text.html.HTML.Tag, javax.swing.text.MutableAttributeSet, boolean).\n      */\n     protected void writeStartTag( Tag t, MutableAttributeSet att )\n     {\n@@ -95,9 +95,9 @@ protected void writeStartTag( Tag t, MutableAttributeSet att )\n      * &lt;tag attName=\"attValue\"&gt;\n      * </pre>\n      *\n-     * @param t a non null tag\n-     * @param att a set of attributes\n-     * @param isSimpleTag boolean to write as a simple tag\n+     * @param t a non null tag.\n+     * @param att a set of attributes. May be null.\n+     * @param isSimpleTag boolean to write as a simple tag.\n      */\n     protected void writeStartTag( Tag t, MutableAttributeSet att, boolean isSimpleTag )\n     {\n@@ -180,9 +180,9 @@ protected void writeSimpleTag( Tag t )\n      * &lt;tag attName=\"attValue\" /&gt;\n      * </pre>\n      *\n-     * @param t a non null tag\n-     * @param att a set of attributes\n-     * @see #writeStartTag(javax.swing.text.html.HTML.Tag, javax.swing.text.MutableAttributeSet, boolean)\n+     * @param t a non null tag.\n+     * @param att a set of attributes. May be null.\n+     * @see #writeStartTag(javax.swing.text.html.HTML.Tag, javax.swing.text.MutableAttributeSet, boolean).\n      */\n     protected void writeSimpleTag( Tag t, MutableAttributeSet att )\n     {",
                "raw_url": "https://github.com/apache/maven-doxia/raw/54a9c4db6c936d774f60146487b85f84f78971b9/doxia-core/src/main/java/org/apache/maven/doxia/sink/AbstractXmlSink.java",
                "sha": "261cc8c569b1aeab9185332f0e2e0f4328ad10f5",
                "status": "modified"
            },
            {
                "additions": 13,
                "blob_url": "https://github.com/apache/maven-doxia/blob/54a9c4db6c936d774f60146487b85f84f78971b9/doxia-core/src/main/java/org/apache/maven/doxia/sink/XhtmlBaseSink.java",
                "changes": 19,
                "contents_url": "https://api.github.com/repos/apache/maven-doxia/contents/doxia-core/src/main/java/org/apache/maven/doxia/sink/XhtmlBaseSink.java?ref=54a9c4db6c936d774f60146487b85f84f78971b9",
                "deletions": 6,
                "filename": "doxia-core/src/main/java/org/apache/maven/doxia/sink/XhtmlBaseSink.java",
                "patch": "@@ -394,7 +394,7 @@ public void section5_()\n      * Starts a section. The default class style is <code>section</code>.\n      *\n      * @param depth The level of the section.\n-     * @param attributes some attributes.\n+     * @param attributes some attributes. May be null.\n      * @see javax.swing.text.html.HTML.Tag#DIV\n      */\n     protected void onSection( int depth, SinkEventAttributes attributes )\n@@ -430,7 +430,7 @@ protected void onSection_( int depth )\n      * Starts a section title.\n      *\n      * @param depth The level of the section title.\n-     * @param attributes some attributes.\n+     * @param attributes some attributes. May be null.\n      * @see javax.swing.text.html.HTML.Tag#H2\n      * @see javax.swing.text.html.HTML.Tag#H3\n      * @see javax.swing.text.html.HTML.Tag#H4\n@@ -1500,11 +1500,18 @@ public void link( String name )\n     /** {@inheritDoc} */\n     public void link( String name, SinkEventAttributes attributes )\n     {\n-        String target = (String) attributes.getAttribute( Attribute.TARGET.toString() );\n-        MutableAttributeSet atts = SinkUtils.filterAttributes(\n-                attributes, SinkUtils.SINK_LINK_ATTRIBUTES  );\n+        if ( attributes == null )\n+        {\n+            link( name, null, null );\n+        }\n+        else\n+        {\n+            String target = (String) attributes.getAttribute( Attribute.TARGET.toString() );\n+            MutableAttributeSet atts = SinkUtils.filterAttributes(\n+                    attributes, SinkUtils.SINK_LINK_ATTRIBUTES  );\n \n-        link( name, target, atts );\n+            link( name, target, atts );\n+        }\n     }\n \n     /**",
                "raw_url": "https://github.com/apache/maven-doxia/raw/54a9c4db6c936d774f60146487b85f84f78971b9/doxia-core/src/main/java/org/apache/maven/doxia/sink/XhtmlBaseSink.java",
                "sha": "265fadd447053570c9669d216a5c35bf3a9e7d7a",
                "status": "modified"
            }
        ],
        "message": "Fix potential NPE when calling link with attributes. Clarify javadocs.\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/doxia/doxia/trunk@752799 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/maven-doxia/commit/c7d677731b80d86b160610f1559d411fe2300f55",
        "patched_files": [
            "XhtmlBaseSink.java"
        ],
        "repo": "maven-doxia",
        "unit_tests": [
            "XhtmlBaseSinkTest.java"
        ]
    },
    "maven-doxia_638f05e": {
        "bug_id": "maven-doxia_638f05e",
        "commit": "https://github.com/apache/maven-doxia/commit/638f05e7a4feb0a165bc6a1834a70b6e0101b490",
        "file": [
            {
                "additions": 41,
                "blob_url": "https://github.com/apache/maven-doxia/blob/638f05e7a4feb0a165bc6a1834a70b6e0101b490/doxia-modules/doxia-module-fml/src/main/java/org/apache/maven/doxia/module/fml/FmlParser.java",
                "changes": 45,
                "contents_url": "https://api.github.com/repos/apache/maven-doxia/contents/doxia-modules/doxia-module-fml/src/main/java/org/apache/maven/doxia/module/fml/FmlParser.java?ref=638f05e7a4feb0a165bc6a1834a70b6e0101b490",
                "deletions": 4,
                "filename": "doxia-modules/doxia-module-fml/src/main/java/org/apache/maven/doxia/module/fml/FmlParser.java",
                "patch": "@@ -117,6 +117,10 @@ else if ( parser.getName().equals( PART_TAG.toString() ) )\n         }\n         else if ( parser.getName().equals( Tag.TITLE.toString() ) )\n         {\n+            if ( currentPart == null )\n+            {\n+                throw new XmlPullParserException( \"The currentPart is not set\" );\n+            }\n             try\n             {\n                 currentPart.setTitle( parser.nextText().trim() );\n@@ -187,12 +191,20 @@ else if ( parser.getName().equals( PART_TAG.toString() ) )\n         }\n         else if ( parser.getName().equals( FAQ_TAG.toString() ) )\n         {\n+            if ( currentPart == null )\n+            {\n+                throw new XmlPullParserException( \"The currentPart is not set\" );\n+            }\n             currentPart.addFaq( currentFaq );\n \n             currentFaq = null;\n         }\n-        if ( parser.getName().equals( QUESTION_TAG.toString() ) )\n+        else if ( parser.getName().equals( QUESTION_TAG.toString() ) )\n         {\n+            if ( currentFaq == null )\n+            {\n+                throw new XmlPullParserException( \"The currentFaq is not set\" );\n+            }\n             buffer.append( String.valueOf( LESS_THAN ) ).append( String.valueOf( SLASH ) )\n                 .append( parser.getName() ).append( String.valueOf( GREATER_THAN ) );\n \n@@ -202,6 +214,10 @@ else if ( parser.getName().equals( FAQ_TAG.toString() ) )\n         }\n         else if ( parser.getName().equals( ANSWER_TAG.toString() ) )\n         {\n+            if ( currentFaq == null )\n+            {\n+                throw new XmlPullParserException( \"The currentFaq is not set\" );\n+            }\n             buffer.append( String.valueOf( LESS_THAN ) ).append( String.valueOf( SLASH ) )\n                 .append( parser.getName() ).append( String.valueOf( GREATER_THAN ) );\n \n@@ -313,7 +329,14 @@ private void writeFaqs( Faqs faqs, Sink sink )\n                 Faq faq = (Faq) faqIterator.next();\n                 sink.numberedListItem();\n                 sink.link( faq.getId() );\n-                xdocParser.parse( faq.getQuestion(), sink );\n+                if ( StringUtils.isNotEmpty( faq.getQuestion() ) )\n+                {\n+                    xdocParser.parse( faq.getQuestion(), sink );\n+                }\n+                else\n+                {\n+                    throw new ParseException( \"Question is missing for the FAQ '\" + faq.getId() + \"'\" );\n+                }\n                 sink.link_();\n                 sink.numberedListItem_();\n             }\n@@ -348,12 +371,26 @@ private void writeFaqs( Faqs faqs, Sink sink )\n \n                 sink.definedTerm();\n                 sink.anchor( faq.getId() );\n-                xdocParser.parse( faq.getQuestion(), sink );\n+                if ( StringUtils.isNotEmpty( faq.getQuestion() ) )\n+                {\n+                    xdocParser.parse( faq.getQuestion(), sink );\n+                }\n+                else\n+                {\n+                    throw new ParseException( \"Question is missing for the FAQ '\" + faq.getId() + \"'\" );\n+                }\n                 sink.anchor_();\n                 sink.definedTerm_();\n \n                 sink.definition();\n-                xdocParser.parse( faq.getAnswer(), sink );\n+                if ( StringUtils.isNotEmpty( faq.getAnswer() ) )\n+                {\n+                    xdocParser.parse( faq.getAnswer(), sink );\n+                }\n+                else\n+                {\n+                    throw new ParseException( \"Answer is missing for the FAQ '\" + faq.getId() + \"'\" );\n+                }\n \n                 if ( faqs.isToplink() )\n                 {",
                "raw_url": "https://github.com/apache/maven-doxia/raw/638f05e7a4feb0a165bc6a1834a70b6e0101b490/doxia-modules/doxia-module-fml/src/main/java/org/apache/maven/doxia/module/fml/FmlParser.java",
                "sha": "02ccf7bca18c5ffbb8a0dfb9431127c084ab1119",
                "status": "modified"
            }
        ],
        "message": "o prevent NPE\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/doxia/doxia/trunk@645499 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/maven-doxia/commit/c38bf5ba23753342b80876909cb1e105e3926409",
        "patched_files": [
            "FmlParser.java"
        ],
        "repo": "maven-doxia",
        "unit_tests": [
            "FmlParserTest.java"
        ]
    },
    "maven-doxia_6897654": {
        "bug_id": "maven-doxia_6897654",
        "commit": "https://github.com/apache/maven-doxia/commit/68976543c0dce4bed28bae63d203e29c325989f4",
        "file": [
            {
                "additions": 5,
                "blob_url": "https://github.com/apache/maven-doxia/blob/68976543c0dce4bed28bae63d203e29c325989f4/doxia-modules/doxia-module-fo/src/main/java/org/apache/maven/doxia/module/fo/FoSink.java",
                "changes": 5,
                "contents_url": "https://api.github.com/repos/apache/maven-doxia/contents/doxia-modules/doxia-module-fo/src/main/java/org/apache/maven/doxia/module/fo/FoSink.java?ref=68976543c0dce4bed28bae63d203e29c325989f4",
                "deletions": 0,
                "filename": "doxia-modules/doxia-module-fo/src/main/java/org/apache/maven/doxia/module/fo/FoSink.java",
                "patch": "@@ -114,6 +114,11 @@ protected FoSink( Writer writer )\n      */\n     protected FoSink( Writer writer, String encoding )\n     {\n+        if ( writer == null )\n+        {\n+            throw new NullPointerException( \"Null writer in FO Sink!\" );\n+        }\n+\n         this.out = writer;\n         this.tempWriter = new StringWriter();\n         this.encoding = encoding;",
                "raw_url": "https://github.com/apache/maven-doxia/raw/68976543c0dce4bed28bae63d203e29c325989f4/doxia-modules/doxia-module-fo/src/main/java/org/apache/maven/doxia/module/fo/FoSink.java",
                "sha": "ca72ab074a5d3c0eeeaf4251b5c6b4ada42c470e",
                "status": "modified"
            }
        ],
        "message": "Throw early NPE\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/doxia/doxia/trunk@764172 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/maven-doxia/commit/183f0483f34a3e96870ab2c12882dcf7c51fa79e",
        "patched_files": [
            "FoSink.java"
        ],
        "repo": "maven-doxia",
        "unit_tests": [
            "FoSinkTest.java"
        ]
    },
    "maven-doxia_eba1403": {
        "bug_id": "maven-doxia_eba1403",
        "commit": "https://github.com/apache/maven-doxia/commit/eba1403f1e2cf7c167320d66bd4933f999a9e766",
        "file": [
            {
                "additions": 48,
                "blob_url": "https://github.com/apache/maven-doxia/blob/eba1403f1e2cf7c167320d66bd4933f999a9e766/doxia-core/src/main/java/org/apache/maven/doxia/sink/SinkEventAttributeSet.java",
                "changes": 84,
                "contents_url": "https://api.github.com/repos/apache/maven-doxia/contents/doxia-core/src/main/java/org/apache/maven/doxia/sink/SinkEventAttributeSet.java?ref=eba1403f1e2cf7c167320d66bd4933f999a9e766",
                "deletions": 36,
                "filename": "doxia-core/src/main/java/org/apache/maven/doxia/sink/SinkEventAttributeSet.java",
                "patch": "@@ -22,6 +22,7 @@\n import java.util.Collections;\n import java.util.Enumeration;\n import java.util.LinkedHashMap;\n+import java.util.Map;\n \n import javax.swing.text.AttributeSet;\n \n@@ -33,82 +34,82 @@\n  * @since 1.1\n  */\n public class SinkEventAttributeSet\n-    implements SinkEventAttributes\n+    implements SinkEventAttributes, Cloneable\n {\n     /**\n-     * An attribute set containing only an underline attribute.\n+     * An unmodifiable attribute set containing only an underline attribute.\n      */\n     public static final SinkEventAttributes UNDERLINE;\n \n     /**\n-     * An attribute set containing only an overline attribute.\n+     * An unmodifiable attribute set containing only an overline attribute.\n      */\n     public static final SinkEventAttributes OVERLINE;\n \n     /**\n-     * An attribute set containing only a linethrough attribute.\n+     * An unmodifiable attribute set containing only a linethrough attribute.\n      */\n     public static final SinkEventAttributes LINETHROUGH;\n \n     /**\n-     * An attribute set containing only a boxed attribute.\n+     * An unmodifiable attribute set containing only a boxed attribute.\n      */\n     public static final SinkEventAttributes BOXED;\n \n     /**\n-     * An attribute set containing only a bold attribute.\n+     * An unmodifiable attribute set containing only a bold attribute.\n      */\n     public static final SinkEventAttributes BOLD;\n \n     /**\n-     * An attribute set containing only an italic attribute.\n+     * An unmodifiable attribute set containing only an italic attribute.\n      */\n     public static final SinkEventAttributes ITALIC;\n \n     /**\n-     * An attribute set containing only a monospaced attribute.\n+     * An unmodifiable attribute set containing only a monospaced attribute.\n      */\n     public static final SinkEventAttributes MONOSPACED;\n \n     /**\n-     * An attribute set containing only a left attribute.\n+     * An unmodifiable attribute set containing only a left attribute.\n      */\n     public static final SinkEventAttributes LEFT;\n \n     /**\n-     * An attribute set containing only a right attribute.\n+     * An unmodifiable attribute set containing only a right attribute.\n      */\n     public static final SinkEventAttributes RIGHT;\n \n     /**\n-     * An attribute set containing only a center attribute.\n+     * An unmodifiable attribute set containing only a center attribute.\n      */\n     public static final SinkEventAttributes CENTER;\n \n     /**\n-     * An attribute set containing only a justify attribute.\n+     * An unmodifiable attribute set containing only a justify attribute.\n      */\n     public static final SinkEventAttributes JUSTIFY;\n \n \n     static\n     {\n-        UNDERLINE = new SinkEventAttributeSet( new String[] {DECORATION, \"underline\"} );\n-        OVERLINE = new SinkEventAttributeSet( new String[] {DECORATION, \"overline\"} );\n-        LINETHROUGH = new SinkEventAttributeSet( new String[] {DECORATION, \"line-through\"} );\n-        BOXED = new SinkEventAttributeSet( new String[] {DECORATION, \"boxed\"} );\n-\n-        BOLD = new SinkEventAttributeSet( new String[] {STYLE, \"bold\"} );\n-        ITALIC = new SinkEventAttributeSet( new String[] {STYLE, \"italic\"} );\n-        MONOSPACED = new SinkEventAttributeSet( new String[] {STYLE, \"monospaced\"} );\n-\n-        LEFT = new SinkEventAttributeSet( new String[] {ALIGN, \"left\"} );\n-        RIGHT = new SinkEventAttributeSet( new String[] {ALIGN, \"right\"} );\n-        CENTER = new SinkEventAttributeSet( new String[] {ALIGN, \"center\"} );\n-        JUSTIFY = new SinkEventAttributeSet( new String[] {ALIGN, \"justify\"} );\n+        UNDERLINE = new SinkEventAttributeSet( new String[] {DECORATION, \"underline\"} ).unmodifiable();\n+        OVERLINE = new SinkEventAttributeSet( new String[] {DECORATION, \"overline\"} ).unmodifiable();\n+        LINETHROUGH = new SinkEventAttributeSet( new String[] {DECORATION, \"line-through\"} ).unmodifiable();\n+        BOXED = new SinkEventAttributeSet( new String[] {DECORATION, \"boxed\"} ).unmodifiable();\n+\n+        BOLD = new SinkEventAttributeSet( new String[] {STYLE, \"bold\"} ).unmodifiable();\n+        ITALIC = new SinkEventAttributeSet( new String[] {STYLE, \"italic\"} ).unmodifiable();\n+        MONOSPACED = new SinkEventAttributeSet( new String[] {STYLE, \"monospaced\"} ).unmodifiable();\n+\n+        LEFT = new SinkEventAttributeSet( new String[] {ALIGN, \"left\"} ).unmodifiable();\n+        RIGHT = new SinkEventAttributeSet( new String[] {ALIGN, \"right\"} ).unmodifiable();\n+        CENTER = new SinkEventAttributeSet( new String[] {ALIGN, \"center\"} ).unmodifiable();\n+        JUSTIFY = new SinkEventAttributeSet( new String[] {ALIGN, \"justify\"} ).unmodifiable();\n     }\n \n-    private LinkedHashMap attribs;\n+    private Map attribs;\n \n     private AttributeSet resolveParent;\n \n@@ -174,6 +175,20 @@ public SinkEventAttributeSet( AttributeSet attributes )\n         }\n     }\n \n+    /**\n+     * Replace this AttributeSet by an unmodifiable view of itself.\n+     * Any subsequent attempt to add, remove or modify the underlying mapping\n+     * will result in an UnsupportedOperationException.\n+     *\n+     * @return an unmodifiable view of this AttributeSet.\n+     */\n+    public SinkEventAttributeSet unmodifiable()\n+    {\n+        this.attribs = Collections.unmodifiableMap( attribs );\n+\n+        return this;\n+    }\n+\n     /**\n      * Checks whether the set of attribs is empty.\n      *\n@@ -262,7 +277,7 @@ public boolean containsAttributes( AttributeSet attributes )\n      */\n     public void addAttribute( Object name, Object value )\n     {\n-        attribs.put( name.toString(), value.toString() );\n+        attribs.put( name.toString(), value );\n     }\n \n     /** {@inheritDoc} */\n@@ -341,26 +356,23 @@ public void setResolveParent( AttributeSet parent )\n     /** {@inheritDoc} */\n     public Object clone()\n     {\n-        SinkEventAttributeSet attr;\n+        SinkEventAttributeSet attr = new SinkEventAttributeSet( attribs.size() );\n+        attr.attribs = new LinkedHashMap( attribs );\n \n-        try\n+        if ( resolveParent != null )\n         {\n-            attr = (SinkEventAttributeSet) super.clone();\n-            attr.attribs = (LinkedHashMap) attribs.clone();\n             attr.resolveParent = resolveParent.copyAttributes();\n         }\n-        catch ( CloneNotSupportedException e )\n-        {\n-            attr = null;\n-        }\n \n         return attr;\n     }\n \n     /** {@inheritDoc} */\n     public int hashCode()\n     {\n-        return attribs.hashCode() + resolveParent.hashCode();\n+        final int parentHash = ( resolveParent == null ? 0 : resolveParent.hashCode() );\n+\n+        return attribs.hashCode() + parentHash;\n     }\n \n     /** {@inheritDoc} */",
                "raw_url": "https://github.com/apache/maven-doxia/raw/eba1403f1e2cf7c167320d66bd4933f999a9e766/doxia-core/src/main/java/org/apache/maven/doxia/sink/SinkEventAttributeSet.java",
                "sha": "24be5e6b7da61cd9888fe94860aafc461922d251",
                "status": "modified"
            },
            {
                "additions": 281,
                "blob_url": "https://github.com/apache/maven-doxia/blob/eba1403f1e2cf7c167320d66bd4933f999a9e766/doxia-core/src/test/java/org/apache/maven/doxia/sink/SinkEventAttributeSetTest.java",
                "changes": 281,
                "contents_url": "https://api.github.com/repos/apache/maven-doxia/contents/doxia-core/src/test/java/org/apache/maven/doxia/sink/SinkEventAttributeSetTest.java?ref=eba1403f1e2cf7c167320d66bd4933f999a9e766",
                "deletions": 0,
                "filename": "doxia-core/src/test/java/org/apache/maven/doxia/sink/SinkEventAttributeSetTest.java",
                "patch": "@@ -0,0 +1,281 @@\n+package org.apache.maven.doxia.sink;\n+\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+import java.util.Enumeration;\n+\n+import javax.swing.text.AttributeSet;\n+\n+import junit.framework.TestCase;\n+\n+/**\n+ * Test SinkEventAttributeSet.\n+ *\n+ * @author ltheussl\n+ */\n+public class SinkEventAttributeSetTest extends TestCase\n+{\n+\n+    private SinkEventAttributeSet sinkEventAttributeSet;\n+\n+    /**\n+     * @throws java.lang.Exception if any.\n+     */\n+    protected void setUp()\n+            throws Exception\n+    {\n+        super.setUp();\n+        this.sinkEventAttributeSet = new SinkEventAttributeSet();\n+    }\n+\n+    /**\n+     * Test of constructors, of class SinkEventAttributeSet.\n+     */\n+    public void testConstructor()\n+    {\n+        try\n+        {\n+            SinkEventAttributeSet aset = new SinkEventAttributeSet( new String[] {\"key\"} );\n+            fail( \"missing attribute value!\" );\n+        }\n+        catch ( IllegalArgumentException e )\n+        {\n+            assertNotNull( e );\n+        }\n+    }\n+\n+    /**\n+     * Test of isEmpty method, of class SinkEventAttributeSet.\n+     */\n+    public void testIsEmpty()\n+    {\n+        assertTrue( sinkEventAttributeSet.isEmpty() );\n+        sinkEventAttributeSet.addAttributes( SinkEventAttributeSet.BOLD );\n+        assertFalse( sinkEventAttributeSet.isEmpty() );\n+    }\n+\n+    /**\n+     * Test of getAttributeCount method, of class SinkEventAttributeSet.\n+     */\n+    public void testGetAttributeCount()\n+    {\n+        assertEquals( 0, sinkEventAttributeSet.getAttributeCount() );\n+        sinkEventAttributeSet.addAttribute( \"name1\", \"value1\" );\n+        assertEquals( 1, sinkEventAttributeSet.getAttributeCount() );\n+        sinkEventAttributeSet.removeAttribute( \"name2\" );\n+        assertEquals( 1, sinkEventAttributeSet.getAttributeCount() );\n+        sinkEventAttributeSet.removeAttribute( \"name1\" );\n+        assertEquals( 0, sinkEventAttributeSet.getAttributeCount() );\n+\n+        sinkEventAttributeSet.addAttributes( SinkEventAttributeSet.BOLD );\n+        assertEquals( 1, sinkEventAttributeSet.getAttributeCount() );\n+        sinkEventAttributeSet.removeAttributes( SinkEventAttributeSet.BOXED );\n+        assertEquals( 1, sinkEventAttributeSet.getAttributeCount() );\n+        sinkEventAttributeSet.removeAttributes( SinkEventAttributeSet.BOLD );\n+        assertEquals( 0, sinkEventAttributeSet.getAttributeCount() );\n+    }\n+\n+    /**\n+     * Test of isDefined method, of class SinkEventAttributeSet.\n+     */\n+    public void testIsDefined()\n+    {\n+        assertFalse( sinkEventAttributeSet.isDefined( SinkEventAttributes.DECORATION ) );\n+        sinkEventAttributeSet.addAttributes( SinkEventAttributeSet.BOXED );\n+        assertTrue( sinkEventAttributeSet.isDefined( SinkEventAttributes.DECORATION ) );\n+    }\n+\n+    /**\n+     * Test of isEqual method, of class SinkEventAttributeSet.\n+     */\n+    public void testIsEqual()\n+    {\n+        SinkEventAttributes instance = new SinkEventAttributeSet( SinkEventAttributeSet.BOLD );\n+        sinkEventAttributeSet.addAttributes( SinkEventAttributeSet.BOLD );\n+        assertTrue( instance.isEqual( sinkEventAttributeSet ) );\n+        instance.addAttributes( SinkEventAttributeSet.BOXED );\n+        assertFalse( instance.isEqual( sinkEventAttributeSet ) );\n+    }\n+\n+    /**\n+     * Test of equals method, of class SinkEventAttributeSet.\n+     */\n+    public void testEquals()\n+    {\n+        assertFalse( sinkEventAttributeSet.equals( null ) );\n+        assertTrue( sinkEventAttributeSet.equals( sinkEventAttributeSet ) );\n+\n+        SinkEventAttributes instance = new SinkEventAttributeSet( SinkEventAttributeSet.BOLD );\n+        sinkEventAttributeSet.addAttributes( SinkEventAttributeSet.BOLD );\n+        assertTrue( instance.equals( sinkEventAttributeSet ) );\n+        instance.addAttributes( SinkEventAttributeSet.BOXED );\n+        assertFalse( instance.equals( sinkEventAttributeSet ) );\n+    }\n+\n+    /**\n+     * Test of copyAttributes method, of class SinkEventAttributeSet.\n+     */\n+    public void testCopyAttributes()\n+    {\n+        sinkEventAttributeSet.addAttributes( SinkEventAttributeSet.ITALIC );\n+        AttributeSet instance = sinkEventAttributeSet.copyAttributes();\n+        assertTrue( instance.isEqual( sinkEventAttributeSet ) );\n+    }\n+\n+    /**\n+     * Test of getAttributeNames method, of class SinkEventAttributeSet.\n+     */\n+    public void testGetAttributeNames()\n+    {\n+        sinkEventAttributeSet.addAttributes( SinkEventAttributeSet.UNDERLINE );\n+        Enumeration result = sinkEventAttributeSet.getAttributeNames();\n+        assertEquals( \"decoration\", result.nextElement() );\n+        assertFalse( result.hasMoreElements() );\n+    }\n+\n+    /**\n+     * Test of getAttribute method, of class SinkEventAttributeSet.\n+     */\n+    public void testGetAttribute()\n+    {\n+        sinkEventAttributeSet.addAttribute( \"key\", \"value\" );\n+        assertTrue( sinkEventAttributeSet.getAttribute( \"key\" ).equals( \"value\" ) );\n+        assertNull( sinkEventAttributeSet.getAttribute( \"bla\" ) );\n+    }\n+\n+    /**\n+     * Test of containsAttribute method, of class SinkEventAttributeSet.\n+     */\n+    public void testContainsAttribute()\n+    {\n+        sinkEventAttributeSet.addAttribute( \"key\", \"value\" );\n+        assertTrue( sinkEventAttributeSet.containsAttribute( \"key\", \"value\" ) );\n+        assertFalse( sinkEventAttributeSet.containsAttribute( \"key\", \"valu\" ) );\n+    }\n+\n+    /**\n+     * Test of containsAttributes method, of class SinkEventAttributeSet.\n+     */\n+    public void testContainsAttributes()\n+    {\n+        sinkEventAttributeSet.addAttributes( SinkEventAttributeSet.JUSTIFY );\n+        assertTrue( sinkEventAttributeSet.containsAttributes( SinkEventAttributeSet.JUSTIFY ) );\n+        assertFalse( sinkEventAttributeSet.containsAttributes( SinkEventAttributeSet.BOXED ) );\n+    }\n+\n+    /**\n+     * Test of addAttribute method, of class SinkEventAttributeSet.\n+     */\n+    public void testAddAttribute()\n+    {\n+        assertFalse( sinkEventAttributeSet.containsAttribute( \"key\", \"value\" ) );\n+        sinkEventAttributeSet.addAttribute( \"key\", \"value\" );\n+        assertTrue( sinkEventAttributeSet.containsAttribute( \"key\", \"value\" ) );\n+        sinkEventAttributeSet.removeAttribute( \"key\" );\n+        assertFalse( sinkEventAttributeSet.containsAttribute( \"key\", \"value\" ) );\n+    }\n+\n+    /**\n+     * Test of add/removeAttributes methods, of class SinkEventAttributeSet.\n+     */\n+    public void testAddAttributes()\n+    {\n+        assertFalse( sinkEventAttributeSet.containsAttributes( SinkEventAttributeSet.JUSTIFY ) );\n+        sinkEventAttributeSet.addAttributes( SinkEventAttributeSet.JUSTIFY );\n+        assertTrue( sinkEventAttributeSet.containsAttributes( SinkEventAttributeSet.JUSTIFY ) );\n+\n+        sinkEventAttributeSet.removeAttributes( SinkEventAttributeSet.JUSTIFY );\n+        assertFalse( sinkEventAttributeSet.containsAttributes( SinkEventAttributeSet.JUSTIFY ) );\n+\n+        sinkEventAttributeSet.addAttributes( SinkEventAttributeSet.JUSTIFY );\n+        sinkEventAttributeSet.removeAttributes( SinkEventAttributeSet.JUSTIFY.getAttributeNames() );\n+        assertFalse( sinkEventAttributeSet.containsAttributes( SinkEventAttributeSet.JUSTIFY ) );\n+\n+        sinkEventAttributeSet.setResolveParent( SinkEventAttributeSet.JUSTIFY );\n+        assertTrue( sinkEventAttributeSet.containsAttributes( SinkEventAttributeSet.JUSTIFY ) );\n+\n+        sinkEventAttributeSet.removeAttributes( (AttributeSet) null ); // should do nothing\n+    }\n+\n+    /**\n+     * Test of getResolveParent method, of class SinkEventAttributeSet.\n+     */\n+    public void testGetResolveParent()\n+    {\n+        assertNull( sinkEventAttributeSet.getResolveParent() );\n+        sinkEventAttributeSet.setResolveParent( SinkEventAttributeSet.CENTER );\n+        assertNotNull( sinkEventAttributeSet.getResolveParent() );\n+    }\n+\n+    /**\n+     * Test of clone method, of class SinkEventAttributeSet.\n+     */\n+    public void testClone()\n+    {\n+        Object result = sinkEventAttributeSet.clone();\n+        assertTrue( sinkEventAttributeSet.equals( result ) );\n+\n+        sinkEventAttributeSet.addAttributes( SinkEventAttributeSet.MONOSPACED );\n+        assertFalse( sinkEventAttributeSet.equals( result ) );\n+\n+        result = sinkEventAttributeSet.clone();\n+        assertTrue( sinkEventAttributeSet.equals( result ) );\n+        sinkEventAttributeSet.setResolveParent( SinkEventAttributeSet.CENTER );\n+        //assertFalse( sinkEventAttributeSet.equals( result ) );\n+\n+        result = sinkEventAttributeSet.clone();\n+        assertTrue( sinkEventAttributeSet.equals( result ) );\n+        sinkEventAttributeSet.setResolveParent( SinkEventAttributeSet.BOXED );\n+        //assertFalse( sinkEventAttributeSet.equals( result ) );\n+    }\n+\n+    /**\n+     * Test of hashCode method, of class SinkEventAttributeSet.\n+     */\n+    public void testHashCode()\n+    {\n+        int oldValue = sinkEventAttributeSet.hashCode();\n+        sinkEventAttributeSet.addAttributes( SinkEventAttributeSet.BOLD );\n+        int newValue = sinkEventAttributeSet.hashCode();\n+        assertFalse( oldValue == newValue );\n+\n+        oldValue = newValue;\n+        sinkEventAttributeSet.setResolveParent( SinkEventAttributeSet.CENTER );\n+        newValue = sinkEventAttributeSet.hashCode();\n+        assertFalse( oldValue == newValue );\n+    }\n+\n+    /**\n+     * Test of toString method, of class SinkEventAttributeSet.\n+     */\n+    public void testToString()\n+    {\n+        String expected = \"\";\n+        assertEquals( expected, sinkEventAttributeSet.toString() );\n+\n+        sinkEventAttributeSet.addAttributes( SinkEventAttributeSet.BOXED );\n+        expected = \" decoration=boxed\";\n+        assertEquals( expected, sinkEventAttributeSet.toString() );\n+\n+        sinkEventAttributeSet.addAttributes( SinkEventAttributeSet.CENTER );\n+        expected = \" decoration=boxed align=center\";\n+        assertEquals( expected, sinkEventAttributeSet.toString() );\n+    }\n+}",
                "raw_url": "https://github.com/apache/maven-doxia/raw/eba1403f1e2cf7c167320d66bd4933f999a9e766/doxia-core/src/test/java/org/apache/maven/doxia/sink/SinkEventAttributeSetTest.java",
                "sha": "53534aa220b2d5cfd799e11a69b2d609a3bfa645",
                "status": "added"
            }
        ],
        "message": "Fix some problems in SinkEventAttributeSet:\n o make it Cloneable\n o add a method to make it unmodifiable\n o make all static fields unmodifiable\n o add attribute values as Objects, not Strings\n o fix potential NPEs in clone() and hashCode()\n\ngit-svn-id: https://svn.apache.org/repos/asf/maven/doxia/doxia/trunk@759584 13f79535-47bb-0310-9956-ffa450edef68",
        "parent": "https://github.com/apache/maven-doxia/commit/40a9ddff3e763f431d0c744f8ec71c2688279d7f",
        "patched_files": [
            "SinkEventAttributeSet.java"
        ],
        "repo": "maven-doxia",
        "unit_tests": [
            "SinkEventAttributeSetTest.java"
        ]
    }
}